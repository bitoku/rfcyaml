- title: __initial_text__
  contents:
  - "                     Definitions of Managed Objects\n                 for the\
    \ Ethernet-like Interface Types\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo is an extension to the SNMP MIB.  This RFC\
    \ specifies an IAB\n   standards track protocol for the Internet community, and\
    \ requests\n   discussion and suggestions for improvements.  Please refer to the\n\
    \   current edition of the \"IAB Official Protocol Standards\" for the\n   standardization\
    \ state and status of this protocol.  Distribution of\n   this memo is unlimited.\n"
- title: Table of Contents
  contents:
  - 'Table of Contents

    '
- title: 1.  Abstract
  contents:
  - "1.  Abstract\n   This memo defines a portion of the Management Information Base\
    \ (MIB)\n   for use with network management protocols in TCP/IP-based internets.\n\
    \   In particular, it defines objects for managing ethernet-like objects.\n"
- title: 2.  The Network Management Framework
  contents:
  - "2.  The Network Management Framework\n   The Internet-standard Network Management\
    \ Framework consists of three\n   components.  They are:\n      RFC 1155 which\
    \ defines the SMI, the mechanisms used for describing\n      and naming objects\
    \ for the purpose of management.  RFC 1212\n      defines a more concise description\
    \ mechanism, which is wholly\n      consistent with the SMI.\n      RFC 1156 which\
    \ defines MIB-I, the core set of managed objects for\n      the Internet suite\
    \ of protocols.  RFC 1213, defines MIB-II, an\n      evolution of MIB-I based\
    \ on implementation experience and new\n      operational requirements.\n    \
    \  RFC 1157 which defines the SNMP, the protocol used for network\n      access\
    \ to managed objects.\n   The Framework permits new objects to be defined for\
    \ the purpose of\n   experimentation and evaluation.\n"
- title: 3.  Objects
  contents:
  - "3.  Objects\n   Managed objects are accessed via a virtual information store,\
    \ termed\n   the Management Information Base or MIB.  Objects in the MIB are\n\
    \   defined using the subset of Abstract Syntax Notation One (ASN.1) [7]\n   defined\
    \ in the SMI.  In particular, each object has a name, a syntax,\n   and an encoding.\
    \  The name is an object identifier, an\n   administratively assigned name, which\
    \ specifies an object type.  The\n   object type together with an object instance\
    \ serves to uniquely\n   identify a specific instantiation of the object.  For\
    \ human\n   convenience, we often use a textual string, termed the OBJECT\n  \
    \ DESCRIPTOR, to also refer to the object type.\n   The syntax of an object type\
    \ defines the abstract data structure\n   corresponding to that object type. \
    \ The ASN.1 language is used for\n   this purpose.  However, the SMI [3] purposely\
    \ restricts the ASN.1\n   constructs which may be used.  These restrictions are\
    \ explicitly made\n   for simplicity.\n   The encoding of an object type is simply\
    \ how that object type is\n   represented using the object type's syntax.  Implicitly\
    \ tied to the\n   notion of an object type's syntax and encoding is how the object\
    \ type\n   is represented when being transmitted on the network.\n   The SMI specifies\
    \ the use of the basic encoding rules of ASN.1 [8],\n   subject to the additional\
    \ requirements imposed by the SNMP.\n"
- title: 3.1.  Format of Definitions
  contents:
  - "3.1.  Format of Definitions\n   Section 5 contains contains the specification\
    \ of all object types\n   contained in this MIB module.  The object types are\
    \ defined using the\n   conventions defined in the SMI, as amended by the extensions\n\
    \   specified in [13].\n"
- title: 4.  Overview
  contents:
  - "4.  Overview\n   Instances of these object types represent attributes of an interface\n\
    \   to an ethernet-like communications medium.  At present, ethernet-like\n  \
    \ media are identified by three values of the ifType object in the\n   Internet-standard\
    \ MIB:\n               ethernet-csmacd(6)\n               iso88023-csmacd(7)\n\
    \               starLan(11)\n   For these interfaces, the value of the ifSpecific\
    \ variable in the\n   MIB-II [6] has the OBJECT IDENTIFIER value:\n          \
    \     dot3    OBJECT IDENTIFER ::= { transmission 7 }\n   The definitions presented\
    \ here are based on the IEEE 802.3 Layer\n   Management Specification [9], as\
    \ originally interpreted by Frank\n   Kastenholz of Interlan in [10].  Implementors\
    \ of these MIB objects\n   should note that the IEEE document explicitly describes\
    \ (in the form\n   of Pascal pseudocode) when, where, and how various MAC attributes\
    \ are\n   measured.  The IEEE document also describes the effects of MAC\n   actions\
    \ that may be invoked by manipulating instances of the MIB\n   objects defined\
    \ here.\n   To the extent that some of the attributes defined in [9] are\n   represented\
    \ by previously defined objects in the Internet-standard\n   MIB or in the generic\
    \ interface extensions MIB [11], such attributes\n   are not redundantly represented\
    \ by objects defined in this memo.\n   Among the attributes represented by objects\
    \ defined in other memos\n   are the number of octets transmitted or received\
    \ on a particular\n   interface, the number of frames transmitted or received\
    \ on a\n   particular interface, the promiscuous status of an interface, the MAC\n\
    \   address of an interface, and multicast information associated with an\n  \
    \ interface.\n   The relationship between an ethernet-like interface and an interface\n\
    \   in the context of the Internet-standard MIB is one-to-one.  As such,\n   the\
    \ value of an ifIndex object instance can be directly used to\n   identify corresponding\
    \ instances of the objects defined herein.\n"
- title: 5.  Definitions
  contents:
  - "5.  Definitions\n    RFC1284-MIB DEFINITIONS ::= BEGIN\n    IMPORTS\n       \
    \     Counter, Gauge\n                    FROM RFC1155-SMI\n            transmission\n\
    \                    FROM RFC1213-MIB\n            OBJECT-TYPE\n             \
    \       FROM RFC-1212;\n    --  This MIB module uses the extended OBJECT-TYPE\
    \ macro as\n    --  defined in [13]\n    --  this is the MIB module for ethernet-like\
    \ objects\n    dot3    OBJECT IDENTIFIER ::= { transmission 7 }\n    -- the Generic\
    \ Ethernet-like group\n    -- Implementation of this group is mandatory for all\
    \ systems\n    -- that attach to an ethernet-like medium.\n    dot3Table OBJECT-TYPE\n\
    \        SYNTAX  SEQUENCE OF Dot3Entry\n        ACCESS  not-accessible\n     \
    \   STATUS  mandatory\n        DESCRIPTION\n                \"Status information\
    \ and control variables for a\n                collection of ethernet-like interfaces\
    \ attached to\n                a particular system.\"\n        ::= { dot3 1 }\n\
    \    dot3Entry OBJECT-TYPE\n        SYNTAX  Dot3Entry\n        ACCESS  not-accessible\n\
    \        STATUS  mandatory\n        DESCRIPTION\n                \"Status information\
    \ and control variables for a\n                particular interface to an ethernet-like\
    \ medium.\"\n        INDEX   { dot3Index }\n        ::= { dot3Table 1 }\n    Dot3Entry\
    \ ::=\n        SEQUENCE {\n            dot3Index\n                INTEGER,\n \
    \           dot3InitializeMac\n                INTEGER,\n            dot3MacSubLayerStatus\n\
    \                INTEGER,\n            dot3MulticastReceiveStatus\n          \
    \      INTEGER,\n            dot3TxEnabled\n                INTEGER,\n       \
    \     dot3TestTdrValue\n                Gauge\n       }\n    dot3Index OBJECT-TYPE\n\
    \        SYNTAX  INTEGER\n        ACCESS  read-only\n        STATUS  mandatory\n\
    \        DESCRIPTION\n                \"An index value that uniquely identifies\
    \ an\n                interface to an ethernet-like medium.  The\n           \
    \     interface identified by a particular value of this\n                index\
    \ is the same interface as identified by the\n                same value of ifIndex.\"\
    \n        ::= { dot3Entry 1 }\n    dot3InitializeMac OBJECT-TYPE\n        SYNTAX\
    \  INTEGER { initialized(1), uninitialized(2) }\n        ACCESS  read-write\n\
    \        STATUS  mandatory\n        DESCRIPTION\n                \"The initialization\
    \ status of the MAC and PLS\n                (Physical Layer Signalling) subsystems\
    \ for a\n                particular interface. The value initialized(1)\n    \
    \            signifies that the subsystems for a particular\n                interface\
    \ have been previously initialized; the\n                value uninitialized(2)\
    \ signifies that they have\n                not been previously initialized.\n\
    \                Each alteration of an instance of this object to\n          \
    \      either of the values initialized(1) or\n                uninitialized(2)\
    \ is analogous to an invocation of\n                the initializeMAC action defined\
    \ in [9] and has\n                the effect of (re-)initializing the MAC and\
    \ PLS\n                subsystems for the associated interface. In\n         \
    \       particular,\n                     all management counters pertaining to\
    \ the MAC\n                     and PLS subsystems for said interface are\n  \
    \                   reset to zero;\n                     the receive and transmit\
    \ layer management\n                     state variables (receiveEnabled and\n\
    \                     transmitEnabled in [9]) are set to enable\n            \
    \         reception and transmission of frames;\n                     the promiscuous\
    \ receive function is disabled;\n                     and\n                  \
    \   multicast reception is disabled.\"\n        ::= { dot3Entry 2 }\n    dot3MacSubLayerStatus\
    \ OBJECT-TYPE\n        SYNTAX  INTEGER { enabled(1), disabled(2) }\n        ACCESS\
    \  read-write\n        STATUS  mandatory\n        DESCRIPTION\n              \
    \  \"The operational status of the MAC sublayer for a\n                particular\
    \ interface.  The value enabled(1)\n                signifies that the MAC sublayer\
    \ for said interface\n                is operational for both transmitting and\
    \ receiving\n                frames -- that is, that the value of both the\n \
    \               receive and transmit layer management state\n                variables\
    \ (receiveEnabled and transmitEnabled in\n                [9]) for said interface\
    \ are true.  The value\n                disabled(2) signifies that the MAC sublayer\
    \ for\n                said interface is not operational for either\n        \
    \        transmitting or receiving frames. In particular,\n                the\
    \ value of an instance of this object is\n                disabled(2) whenever\
    \ the value of the\n                corresponding instance of the dot3Enabled\
    \ object\n                is false(2).\n                Each alteration of an\
    \ instance of this object to\n                the value enabled(1) is analogous\
    \ to an invocation\n                of the enableMACSublayer action defined in\
    \ [9] and\n                has the effect of starting normal transmit and\n  \
    \              receive operations (from the ``idle'' state) on\n             \
    \   the associated interface. In particular, such an\n                alteration\
    \ has the effect of resetting the PLS for\n                said interface and\
    \ of setting the receive and\n                transmit layer management state\
    \ variables\n                (receiveEnabled and transmitEnabled in [9]) to be\n\
    \                true.\n                Each alteration of an instance of this\
    \ object to\n                the value disabled(2) is analogous to an\n      \
    \          invocation of the disableMACSublayer action\n                defined\
    \ in [9] and has the effect of terminating\n                transmit and receive\
    \ operations on the associated\n                interface. In particular, such\
    \ an alteration has\n                the effect of setting the receive and transmit\n\
    \                layer management state variables (receiveEnabled\n          \
    \      and transmitEnabled in [9]) to be false. Any\n                transmissions/receptions\
    \ in progress are completed\n                before operation is terminated.\"\
    \n        ::= { dot3Entry 3 }\n    dot3MulticastReceiveStatus OBJECT-TYPE\n  \
    \      SYNTAX  INTEGER { enabled(1), disabled(2) }\n        ACCESS  read-write\n\
    \        STATUS  mandatory\n        DESCRIPTION\n                \"The multicast\
    \ receive status for a particular\n                interface.  The value enabled(1)\
    \ signifies that\n                reception of multicast frames by the MAC sublayer\n\
    \                is enabled on said interface. The value\n                disabled(2)\
    \ signifies that reception of multicast\n                frames by the MAC sublayer\
    \ is not enabled on said\n                interface.\n                Each alteration\
    \ of an instance of this object to\n                the value enabled(1) is analogous\
    \ to an invocation\n                of the enableMulticastReceive action defined\
    \ in\n                [9] and has the effect of enabling multicast frame\n   \
    \             reception on the associated interface. Actual\n                reception\
    \ of multicast frames is only possible on\n                an interface when the\
    \ values for the associated\n                instances of the dot3MulticastReceiveStatus\
    \ and\n                dot3MacSubLayerStatus objects are enabled(1) and\n    \
    \            enabled(1), respectively.\n                Each alteration of an\
    \ instance of this object to\n                the value disabled(2) is analogous\
    \ to an\n                invocation of the disableMulticastReceive action\n  \
    \              defined in [9] and has the effect of inhibiting\n             \
    \   multicast frame reception on the associated\n                interface.\"\n\
    \        ::= { dot3Entry 4 }\n    dot3TxEnabled OBJECT-TYPE\n        SYNTAX  INTEGER\
    \ { true(1), false(2)  }\n        ACCESS  read-write\n        STATUS  mandatory\n\
    \        DESCRIPTION\n                \"The transmit layer management state variable\n\
    \                (transmitEnabled as defined in [9]) for a\n                particular\
    \ interface.  The value true(1) signifies\n                that the MAC frame\
    \ transmission is enabled on said\n                interface. The value false(2)\
    \ signifies that the\n                MAC frame transmission is inhibited on said\n\
    \                interface. In particular, the value of an instance\n        \
    \        of this object is false(2) whenever the value of\n                the\
    \ corresponding instance of the\n                dot3MacSubLayerStatus object\
    \ is disabled(2).\n                Each alteration of an instance of this object\
    \ to\n                the value true(1) is analogous to an invocation of\n   \
    \             the enableTransmit action defined in [9] and has\n             \
    \   the effect of enabling MAC sublayer frame\n                transmission on\
    \ the associated interface. In\n                particular, such an alteration\
    \ has the effect of\n                setting the transmit layer management state\n\
    \                variable (transmitEnabled in [9]) for said\n                interface\
    \ to be true.\n                Each alteration of an instance of this object to\n\
    \                the value false(2) is analogous to an invocation\n          \
    \      of the disableTransmit action defined in [9] and\n                has the\
    \ effect of inhibiting MAC sublayer frame\n                transmission on the\
    \ associated interface. In\n                particular, such an alteration has\
    \ the effect of\n                setting the transmit layer management state\n\
    \                variable (transmitEnabled in [9]) for said\n                interface\
    \ to be false. Any transmissions in\n                progress are completed before\
    \ transmission is\n                inhibited.\"\n        ::= { dot3Entry 5 }\n\
    \    dot3TestTdrValue OBJECT-TYPE\n        SYNTAX  Gauge\n        ACCESS  read-only\n\
    \        STATUS  mandatory\n        DESCRIPTION\n               \"The number of\
    \ 10 MHz ticks which elapsed between\n               the beginning of a TDR measurement\
    \ and the\n               collision which ended it, for the most recently\n  \
    \             executed TDR test.  If no TDR test has been\n               executed,\
    \ or the last TDR value is not available,\n              this object has the value\
    \ 0.\"\n        ::= { dot3Entry 6 }\n    -- the Ethernet-like Statistics group\n\
    \    -- Implementation of this group is mandatory\n    -- Due to implementation\
    \ restrictions (e.g. in the\n    -- instrumentation provided by a chipset, or\
    \ a device\n    -- driver), some of the counters in this group may be\n    --\
    \ difficult or impossible to implement.\n    -- In such cases, an implementator\
    \ should apply reasonable\n    -- best effort to detect as many occurrences as\
    \ possible.\n    -- In any case, the value of a counter will be the number\n \
    \   -- actually detected, which will always be less or equal\n    -- to the number\
    \ of actual occurrences.  In the extreme\n    -- case of a total inability to\
    \ detect occurrences, the\n    -- counter will always be zero.\n    -- Vendors\
    \ are strongly encouraged to document in user guides and\n    -- other appropriate\
    \ documentation the conditions under which the\n    -- values of the counters\
    \ in this group may represent an\n    -- underestimate of the true count.\n  \
    \  dot3StatsTable OBJECT-TYPE\n        SYNTAX  SEQUENCE OF Dot3StatsEntry\n  \
    \      ACCESS  not-accessible\n        STATUS  mandatory\n        DESCRIPTION\n\
    \                \"Statistics for a collection of ethernet-like\n            \
    \    interfaces attached to a particular system.\"\n        ::= { dot3 2 }\n \
    \   dot3StatsEntry OBJECT-TYPE\n        SYNTAX  Dot3StatsEntry\n        ACCESS\
    \  not-accessible\n        STATUS  mandatory\n        DESCRIPTION\n          \
    \      \"Statistics for a particular interface to an\n                ethernet-like\
    \ medium.\"\n        INDEX   { dot3StatsIndex }\n        ::= { dot3StatsTable\
    \ 1 }\n    Dot3StatsEntry ::=\n        SEQUENCE {\n            dot3StatsIndex\n\
    \                INTEGER,\n            dot3StatsAlignmentErrors\n            \
    \    Counter,\n            dot3StatsFCSErrors\n                Counter,\n    \
    \        dot3StatsSingleCollisionFrames\n                Counter,\n          \
    \  dot3StatsMultipleCollisionFrames\n                Counter,\n            dot3StatsSQETestErrors\n\
    \                Counter,\n            dot3StatsDeferredTransmissions\n      \
    \          Counter,\n            dot3StatsLateCollisions\n                Counter,\n\
    \            dot3StatsExcessiveCollisions\n                Counter,\n        \
    \    dot3StatsInternalMacTransmitErrors\n                Counter,\n          \
    \  dot3StatsCarrierSenseErrors\n                Counter,\n            dot3StatsExcessiveDeferrals\n\
    \                Counter,\n            dot3StatsFrameTooLongs\n              \
    \  Counter,\n            dot3StatsInRangeLengthErrors\n                Counter,\n\
    \            dot3StatsOutOfRangeLengthFields\n                Counter,\n     \
    \       dot3StatsInternalMacReceiveErrors\n                Counter\n        }\n\
    \    dot3StatsIndex OBJECT-TYPE\n        SYNTAX  INTEGER\n        ACCESS  read-only\n\
    \        STATUS  mandatory\n        DESCRIPTION\n                \"An index value\
    \ that uniquely identifies an\n                interface to an ethernet-like medium.\
    \  The\n                interface identified by a particular value of this\n \
    \               index is the same interface as identified by the\n           \
    \     same value of ifIndex.\"\n        ::= { dot3StatsEntry 1 }\n    dot3StatsAlignmentErrors\
    \ OBJECT-TYPE\n        SYNTAX  Counter\n        ACCESS  read-only\n        STATUS\
    \  mandatory\n        DESCRIPTION\n                \"A count of frames received\
    \ on a particular\n                interface that are not an integral number of\n\
    \                octets in length and do not pass the FCS check.\n           \
    \     The count represented by an instance of this\n                object is\
    \ incremented when the alignmentError\n                status is returned by the\
    \ MAC service to the LLC\n                (or other MAC user). Received frames\
    \ for which\n                multiple error conditions obtain are, according to\n\
    \                the conventions of [9], counted exclusively\n               \
    \ according to the error status presented to the\n                LLC.\"\n   \
    \     ::= { dot3StatsEntry 2 }\n    dot3StatsFCSErrors OBJECT-TYPE\n        SYNTAX\
    \  Counter\n        ACCESS  read-only\n        STATUS  mandatory\n        DESCRIPTION\n\
    \                \"A count of frames received on a particular\n              \
    \  interface that are an integral number of octets in\n                length\
    \ but do not pass the FCS check.\n                The count represented by an\
    \ instance of this\n                object is incremented when the frameCheckError\n\
    \                status is returned by the MAC service to the LLC\n          \
    \      (or other MAC user). Received frames for which\n                multiple\
    \ error conditions obtain are, according to\n                the conventions of\
    \ [9], counted exclusively\n                according to the error status presented\
    \ to the\n                LLC.\"\n        ::= { dot3StatsEntry 3 }\n    dot3StatsSingleCollisionFrames\
    \ OBJECT-TYPE\n        SYNTAX  Counter\n        ACCESS  read-only\n        STATUS\
    \  mandatory\n        DESCRIPTION\n                \"A count of successfully transmitted\
    \ frames on a\n                particular interface for which transmission is\n\
    \                inhibited by exactly one collision.\n                A frame\
    \ that is counted by an instance of this\n                object is also counted\
    \ by the corresponding\n                instance of either the ifOutUcastPkts\
    \ or\n                ifOutNUcastPkts object and is not counted by the\n     \
    \           corresponding instance of the\n                dot3StatsMultipleCollisionFrames\
    \ object.\"\n       ::= { dot3StatsEntry 4 }\n    dot3StatsMultipleCollisionFrames\
    \ OBJECT-TYPE\n        SYNTAX  Counter\n        ACCESS  read-only\n        STATUS\
    \  mandatory\n        DESCRIPTION\n                \"A count of successfully transmitted\
    \ frames on a\n                particular interface for which transmission is\n\
    \                inhibited by more than one collision.\n                A frame\
    \ that is counted by an instance of this\n                object is also counted\
    \ by the corresponding\n                instance of either the ifOutUcastPkts\
    \ or\n                ifOutNUcastPkts object and is not counted by the\n     \
    \           corresponding instance of the\n                dot3StatsSingleCollisionFrames\
    \ object.\"\n        ::= { dot3StatsEntry 5 }\n    dot3StatsSQETestErrors OBJECT-TYPE\n\
    \        SYNTAX  Counter\n        ACCESS  read-only\n        STATUS  mandatory\n\
    \        DESCRIPTION\n                \"A count of times that the SQE TEST ERROR\
    \ message\n                is generated by the PLS sublayer for a particular\n\
    \                interface. The SQE TEST ERROR message is defined\n          \
    \      in section 7.2.2.2.4 of [12] and its generation is\n                described\
    \ in section 7.2.4.6 of the same\n                document.\"\n        ::= { dot3StatsEntry\
    \ 6 }\n    dot3StatsDeferredTransmissions OBJECT-TYPE\n        SYNTAX  Counter\n\
    \        ACCESS  read-only\n        STATUS  mandatory\n        DESCRIPTION\n \
    \               \"A count of frames for which the first\n                transmission\
    \ attempt on a particular interface is\n                delayed because the medium\
    \ is busy.\n                The count represented by an instance of this\n   \
    \             object does not include frames involved in\n                collisions.\"\
    \n        ::= { dot3StatsEntry 7 }\n    dot3StatsLateCollisions OBJECT-TYPE\n\
    \        SYNTAX  Counter\n        ACCESS  read-only\n        STATUS  mandatory\n\
    \        DESCRIPTION\n                \"The number of times that a collision is\
    \ detected\n                on a particular interface later than 512 bit-times\n\
    \                into the transmission of a packet.\n                Five hundred\
    \ and twelve bit-times corresponds to\n                51.2 microseconds on a\
    \ 10 Mbit/s system. A (late)\n                collision included in a count represented\
    \ by an\n                instance of this object is also considered as a\n   \
    \             (generic) collision for purposes of other\n                collision-related\
    \ statistics.\"\n        ::= { dot3StatsEntry 8 }\n    dot3StatsExcessiveCollisions\
    \ OBJECT-TYPE\n        SYNTAX  Counter\n        ACCESS  read-only\n        STATUS\
    \  mandatory\n        DESCRIPTION\n                \"A count of frames for which\
    \ transmission on a\n                particular interface fails due to excessive\n\
    \                collisions.\"\n        ::= { dot3StatsEntry 9 }\n    dot3StatsInternalMacTransmitErrors\
    \ OBJECT-TYPE\n        SYNTAX  Counter\n        ACCESS  read-only\n        STATUS\
    \  mandatory\n        DESCRIPTION\n                \"A count of frames for which\
    \ transmission on a\n                particular interface fails due to an internal\
    \ MAC\n                sublayer transmit error. A frame is only counted\n    \
    \            by an instance of this object if it is not counted\n            \
    \    by the corresponding instance of either the\n                dot3StatsLateCollisions\
    \ object, the\n                dot3StatsExcessiveCollisions object, the\n    \
    \            dot3StatsCarrierSenseErrors object, or the\n                dot3StatsExcessiveDeferrals\
    \ object.\n                The precise meaning of the count represented by an\n\
    \                instance of this object is implementation-\n                specific.\
    \  In particular, an instance of this\n                object may represent a\
    \ count of transmission\n                errors on a particular interface that\
    \ are not\n                otherwise counted.\"\n        ::= { dot3StatsEntry\
    \ 10 }\n    dot3StatsCarrierSenseErrors OBJECT-TYPE\n        SYNTAX  Counter\n\
    \        ACCESS  read-only\n        STATUS  mandatory\n        DESCRIPTION\n \
    \               \"The number of times that the carrier sense\n               \
    \ condition was lost or never asserted when\n                attempting to transmit\
    \ a frame on a particular\n                interface.\n                The count\
    \ represented by an instance of this\n                object is incremented at\
    \ most once per\n                transmission attempt, even if the carrier sense\n\
    \                condition fluctuates during a transmission\n                attempt.\"\
    \n        ::= { dot3StatsEntry 11 }\n    dot3StatsExcessiveDeferrals OBJECT-TYPE\n\
    \        SYNTAX  Counter\n        ACCESS  read-only\n        STATUS  mandatory\n\
    \        DESCRIPTION\n                \"A count of frames for which transmission\
    \ on a\n                particular interface is deferred for an excessive\n  \
    \              period of time.\"\n        ::= { dot3StatsEntry 12 }\n    dot3StatsFrameTooLongs\
    \ OBJECT-TYPE\n        SYNTAX  Counter\n        ACCESS  read-only\n        STATUS\
    \  mandatory\n        DESCRIPTION\n                \"A count of frames received\
    \ on a particular\n                interface that exceed the maximum permitted\
    \ frame\n                size.\n                The count represented by an instance\
    \ of this\n                object is incremented when the frameTooLong status\n\
    \                is returned by the MAC service to the LLC (or\n             \
    \   other MAC user). Received frames for which\n                multiple error\
    \ conditions obtain are, according to\n                the conventions of [9],\
    \ counted exclusively\n                according to the error status presented\
    \ to the\n                LLC.\"\n        ::= { dot3StatsEntry 13 }\n    dot3StatsInRangeLengthErrors\
    \ OBJECT-TYPE\n        SYNTAX  Counter\n        ACCESS  read-only\n        STATUS\
    \  mandatory\n        DESCRIPTION\n                \"A count of frames received\
    \ on a particular\n                interface with a length field value that falls\n\
    \                between the minimum unpadded LLC data size and the\n        \
    \        maximum allowed LLC data size inclusive and that\n                does\
    \ not match the number of LLC data octets\n                received.\n       \
    \         The count represented by an instance of this\n                object\
    \ also includes frames for which the length\n                field value is less\
    \ than the minimum unpadded LLC\n                data size.\"\n        ::= { dot3StatsEntry\
    \ 14 }\n    dot3StatsOutOfRangeLengthFields OBJECT-TYPE\n        SYNTAX  Counter\n\
    \        ACCESS  read-only\n        STATUS  mandatory\n        DESCRIPTION\n \
    \               \"A count of frames received on a particular\n               \
    \ interface for which the length field value exceeds\n                the maximum\
    \ allowed LLC data size.\n                The count represented by an instance\
    \ of this\n                object is not incremented in implementations that\n\
    \                observe Ethernet encapsulation conventions (by\n            \
    \    which the IEEE 802.3 length field is interpreted\n                as the\
    \ Ethernet Type field).\"\n        ::= { dot3StatsEntry 15 }\n    dot3StatsInternalMacReceiveErrors\
    \ OBJECT-TYPE\n        SYNTAX  Counter\n        ACCESS  read-only\n        STATUS\
    \  mandatory\n        DESCRIPTION\n                \"A count of frames for which\
    \ reception on a\n                particular interface fails due to an internal\
    \ MAC\n                sublayer receive error. A frame is only counted by\n  \
    \              an instance of this object if it is not counted by\n          \
    \      the corresponding instance of either the\n                dot3StatsFrameTooLongs\
    \ object, the\n                dot3StatsAlignmentErrors object, the\n        \
    \        dot3StatsFCSErrors object, the\n                dot3StatsInRangeLengthErrors\
    \ object, or the\n                dot3StatsOutOfRangeLengthFields object.\n  \
    \              The precise meaning of the count represented by an\n          \
    \      instance of this object is implementation-\n                specific. \
    \ In particular, an instance of this\n                object may represent a count\
    \ of receive errors on\n                a particular interface that are not otherwise\n\
    \                counted.\"\n        ::= { dot3StatsEntry 16 }\n    -- the Ethernet-like\
    \ Collision Statistics group\n    -- Implementation of this group is optional;\
    \ it is appropriate\n    -- for all systems which have the necessary metering\n\
    \    dot3CollTable OBJECT-TYPE\n        SYNTAX  SEQUENCE OF Dot3CollEntry\n  \
    \      ACCESS  not-accessible\n        STATUS  mandatory\n        DESCRIPTION\n\
    \                \"A collection of collision histograms for a\n              \
    \  particular set of interfaces.\"\n        ::= { dot3 5 }\n    dot3CollEntry\
    \ OBJECT-TYPE\n        SYNTAX  Dot3CollEntry\n        ACCESS  not-accessible\n\
    \        STATUS  mandatory\n        DESCRIPTION\n                \"A cell in the\
    \ histogram of per-frame collisions\n                for a particular interface.\
    \  An instance of this\n                object represents the frequency of individual\
    \ MAC\n                frames for which the transmission (successful or\n    \
    \            otherwise) on a particular interface is\n                accompanied\
    \ by a particular number of media\n                collisions.\"\n        INDEX\
    \   { dot3CollIndex, dot3CollCount }\n        ::= { dot3CollTable 1 }\n    Dot3CollEntry\
    \ ::=\n        SEQUENCE {\n            dot3CollIndex\n                INTEGER,\n\
    \            dot3CollCount\n                INTEGER,\n            dot3CollFrequencies\n\
    \                Counter\n        }\n    dot3CollIndex OBJECT-TYPE\n        SYNTAX\
    \  INTEGER\n        ACCESS  read-only\n        STATUS  mandatory\n        DESCRIPTION\n\
    \                \"The index value that uniquely identifies the\n            \
    \    interface to which a particular collision\n                histogram cell\
    \ pertains.  The interface identified\n                by a particular value of\
    \ this index is the same\n                interface as identified by the same\
    \ value of\n                ifIndex.\"\n        ::= { dot3CollEntry 1 }\n    dot3CollCount\
    \ OBJECT-TYPE\n        SYNTAX  INTEGER (1..16)\n        ACCESS  read-only\n  \
    \      STATUS  mandatory\n        DESCRIPTION\n                \"The number of\
    \ per-frame media collisions for\n                which a particular collision\
    \ histogram cell\n                represents the frequency on a particular\n \
    \               interface.\"\n        ::= { dot3CollEntry 2 }\n    dot3CollFrequencies\
    \ OBJECT-TYPE\n        SYNTAX  Counter\n        ACCESS  read-only\n        STATUS\
    \  mandatory\n        DESCRIPTION\n                \"A count of individual MAC\
    \ frames for which the\n                transmission (successful or otherwise)\
    \ on a\n                particular interface is accompanied by a\n           \
    \     particular number of media collisions.\"\n        ::= { dot3CollEntry 3\
    \ }\n    --  802.3 Tests\n    -- The ifExtnsTestTable defined in [11] provides\
    \ a common means\n    -- for a manager to test any interface corresponding to\
    \ a value\n    -- of ifIndex.\n    -- At this time, one well known test (testFullDuplexLoopBack)\
    \ is\n    -- defined in [11].  For ethernet-like interfaces, this test\n    --\
    \ configures the MAC chip and executes an internal loopback\n    -- test of memory\
    \ and the MAC chip logic.  This loopback test can\n    -- only be executed if\
    \ the interface is offline.  Once the test\n    -- has completed, the MAC chip\
    \ should be reinitialized for network\n    -- operation, but it should remain\
    \ offline.\n    -- If an error occurs during a test, the object ifExtnsTestResult\n\
    \    -- (defined in [11]) will be set to failed(7).  The following two\n    --\
    \ OBJECT IDENTIFIERs may be used to provided more information as\n    -- values\
    \ for the object ifExtnsTestCode in [11]:\n    dot3Errors             OBJECT IDENTIFIER\
    \ ::= { dot3 7 }\n                              -- couldn't initialize MAC chip\
    \ for test\n    dot3ErrorInitError     OBJECT IDENTIFIER ::= { dot3Errors 1 }\n\
    \                              -- expected data not received (or not\n       \
    \                       -- received correctly) in loopback test\n    dot3ErrorLoopbackError\
    \ OBJECT IDENTIFIER ::= { dot3Errors 2 }\n    --  TDR Test\n    -- Another test,\
    \ specific to ethernet-like interfaces,\n    -- is Time-domain Reflectometry (TDR)\
    \ which is defined\n    -- as follows:\n    dot3Tests   OBJECT IDENTIFIER ::=\
    \ { dot3 6 }\n    dot3TestTdr OBJECT IDENTIFIER ::= { dot3Tests 1 }\n    -- A\
    \ TDR test returns as its result the time interval between the\n    -- most recent\
    \ TDR test transmission and the subsequent detection\n    -- of a collision. \
    \ This interval is based on a 10 MHz clock and\n    -- should be normalized if\
    \ the time base is other than 10 MHz.\n    -- On successful completion of a TDR\
    \ test, the result is stored\n    -- as the value of the appropriate instance\
    \ of the MIB object\n    -- dot3TestTdrValue, and the OBJECT IDENTIFIER of that\
    \ instance\n    -- is stored in the corresponding instance of ifExtnsTestResult\n\
    \    -- (thereby indicating where the result has been stored).\n   --  802.3 Hardware\
    \ Chipsets\n   -- The object ifExtnsChipSet is provided in [11] to identify the\n\
    \   -- MAC hardware used to communcate on an interface.  The following\n   --\
    \ hardware chipsets are provided for 802.3:\n   dot3ChipSets          OBJECT IDENTIFIER\
    \ ::= { dot3 8 }\n   dot3ChipSetAMD        OBJECT IDENTIFIER ::= { dot3ChipSets\
    \ 1 }\n   dot3ChipSetAMD7990    OBJECT IDENTIFIER ::= { dot3ChipSetAMD 1 }\n \
    \  dot3ChipSetAMD79900   OBJECT IDENTIFIER ::= { dot3ChipSetAMD 2 }\n   dot3ChipSetIntel\
    \      OBJECT IDENTIFIER ::= { dot3ChipSets 2 }\n   dot3ChipSetIntel82586 OBJECT\
    \ IDENTIFIER ::= { dot3ChipSetIntel 1 }\n   dot3ChipSetIntel82596 OBJECT IDENTIFIER\
    \ ::= { dot3ChipSetIntel 2 }\n   dot3ChipSetSeeq       OBJECT IDENTIFIER ::= {\
    \ dot3ChipSets 3 }\n   dot3ChipSetSeeq8003   OBJECT IDENTIFIER ::= { dot3ChipSetSeeq\
    \ 1 }\n   dot3ChipSetNational      OBJECT IDENTIFIER ::= { dot3ChipSets 4 }\n\
    \   dot3ChipSetNational8390  OBJECT IDENTIFIER ::=\n                         \
    \                    { dot3ChipSetNational 1 }\n   dot3ChipSetNationalSonic OBJECT\
    \ IDENTIFIER ::=\n                                             { dot3ChipSetNational\
    \ 2 }\n   dot3ChipSetFujitsu       OBJECT IDENTIFIER ::= { dot3ChipSets 5 }\n\
    \   dot3ChipSetFujitsu86950  OBJECT IDENTIFIER ::=\n                         \
    \                   { dot3ChipSetFujitsu 1 }\n   -- For those chipsets not represented\
    \ above, OBJECT IDENTIFIER\n   -- assignment is required in other documentation,\
    \ e.g., assignment\n   -- within that part of the registration tree delegated\
    \ to\n   -- individual enterprises (see [3]).\n   END\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   This document was produced by the Transmission MIB Working\
    \ Group.\n   This document is based on a document written by Frank Kastenholz\
    \ of\n   Interlan entitled IEEE 802.3 Layer Management Draft M compatible MIB\n\
    \   for TCP/IP Networks [10].  This document has been modestly reworked,\n   initially\
    \ by the SNMP Working Group, and then by the Transmission\n   Working Group, to\
    \ reflect the current conventions for defining\n   objects for MIB interfaces.\
    \  James Davin, of the MIT Laboratory for\n   Computer Science, and Keith McCloghrie\
    \ of Hughes LAN Systems,\n   contributed to later drafts of this memo. Marshall\
    \ Rose of\n   Performance Systems International, Inc. converted the document into\n\
    \   its current concise format.  Thanks to Frank Kastenholz of Interlan\n   and\
    \ Louis Steinberg of IBM for their experimentation.\n"
- title: 7.  References
  contents:
  - "7.  References\n   [1] Cerf, V., \"IAB Recommendations for the Development of\
    \ Internet\n       Network Management Standards\", RFC 1052, NRI, April 1988.\n\
    \   [2] Cerf, V., \"Report of the Second Ad Hoc Network Management Review\n  \
    \     Group\", RFC 1109, NRI, August 1989.\n   [3] Rose M., and K. McCloghrie,\
    \ \"Structure and Identification of\n       Management Information for TCP/IP-based\
    \ internets\", RFC 1155,\n       Performance Systems International, Hughes LAN\
    \ Systems, May 1990.\n   [4] McCloghrie K., and M. Rose, \"Management Information\
    \ Base for\n       Network Management of TCP/IP-based internets\", RFC 1156, Hughes\n\
    \       LAN Systems, Performance Systems International, May 1990.\n   [5] Case,\
    \ J., Fedor, M., Schoffstall, M., and J. Davin, \"Simple\n       Network Management\
    \ Protocol\", RFC 1157, SNMP Research,\n       Performance Systems International,\
    \ Performance Systems\n       International, MIT Laboratory for Computer Science,\
    \ May 1990.\n   [6] McCloghrie K., and M. Rose, Editors, \"Management Information\
    \ Base\n       for Network Management of TCP/IP-based internets\", RFC 1213,\n\
    \       Performance Systems International, March 1991.\n   [7] Information processing\
    \ systems - Open Systems Interconnection -\n       Specification of Abstract Syntax\
    \ Notation One (ASN.1),\n       International Organization for Standardization,\
    \ International\n       Standard 8824, December 1987.\n   [8] Information processing\
    \ systems - Open Systems Interconnection -\n       Specification of Basic Encoding\
    \ Rules for Abstract Notation One\n       (ASN.1), International Organization\
    \ for Standardization,\n       International Standard 8825, December 1987.\n \
    \  [9] IEEE, \"IEEE 802.3 Layer Management\", November 1988.\n  [10] Kastenholz,\
    \ F., IEEE 802.3 Layer Management Draft compatible MIB\n       for TCP/IP Networks,\
    \ electronic mail message to mib-\n       wg@nnsc.nsf.net,  9 June 1989.\n  [11]\
    \ McCloghrie, K., Editor, \"Extensions to the Generic-Interface\n       MIB\"\
    , RFC 1229, Hughes LAN Systems, Inc., May 1991.\n  [12] IEEE, \"Carrier Sense\
    \ Multiple Access with Collision Detection\n       (CSMA/CD) Access Method and\
    \ Physical Layer Specifications\",\n       ANSI/IEEE Std 802.3-1985.\n  [13] Rose,\
    \ M., and K. McCloghrie, Editors, \"Concise MIB Definitions\",\n       RFC 1212,\
    \ Performance Systems International, Hughes LAN Systems,\n       March 1991.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   John Cook\n   Chipcom Corporation\n   118 Turnpike Road\n\
    \   Southborough, MA  01772\n   For more information, contact the chair of the\
    \ Ethernet MIB working\n   group:\n   Frank Kastenholz\n   Clearpoint Research\
    \ Inc\n   35 Parkwood Drive\n   Hopkinton Mass 01748\n   Phone: 508-435-2000\n\
    \   EMail: kasten@europa.clearpoint.com\n"
