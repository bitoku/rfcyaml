- contents:
  - '              Gateway-Initiated Dual-Stack Lite Deployment

    '
  title: __initial_text__
- contents:
  - "Abstract\n   Gateway-Initiated Dual-Stack Lite (GI-DS-Lite) is a variant of Dual-\n
    \  Stack Lite (DS-Lite) applicable to certain tunnel-based access\n   architectures.
    \ GI-DS-Lite extends existing access tunnels beyond the\n   access gateway to
    an IPv4-IPv4 NAT using softwires with an embedded\n   Context Identifier that
    uniquely identifies the end-system to which\n   the tunneled packets belong.  The
    access gateway determines which\n   portion of the traffic requires NAT using
    local policies and sends/\n   receives this portion to/from this softwire.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6674.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Overview . . . . . . . . . . . . . . . . . . . . .
    . . . . . .  3\n   2.  Conventions  . . . . . . . . . . . . . . . . . . . . .
    . . . .  3\n   3.  Gateway-Initiated DS-Lite  . . . . . . . . . . . . . . . .
    . .  4\n   4.  Protocol and Related Considerations  . . . . . . . . . . . . .
    \ 6\n   5.  Softwire Management and Related Considerations . . . . . . . .  7\n
    \  6.  Softwire Embodiments . . . . . . . . . . . . . . . . . . . . .  8\n   7.
    \ Security Considerations  . . . . . . . . . . . . . . . . . . . 10\n   8.  Acknowledgements
    . . . . . . . . . . . . . . . . . . . . . . . 10\n   9.  References . . . . .
    . . . . . . . . . . . . . . . . . . . . . 11\n     9.1.  Normative References
    . . . . . . . . . . . . . . . . . . . 11\n     9.2.  Informative References .
    . . . . . . . . . . . . . . . . . 12\n   Appendix A.  GI-DS-Lite Deployment .
    . . . . . . . . . . . . . . . 13\n     A.1.  Connectivity Establishment: Example
    Call Flow  . . . . . . 13\n     A.2.  GI-DS-Lite Applicability: Examples . . .
    . . . . . . . . . 14\n"
  title: Table of Contents
- contents:
  - "1.  Overview\n   Gateway-Initiated Dual-Stack Lite (GI-DS-Lite) is a variant
    of Dual-\n   Stack Lite (DS-Lite) [RFC6333], applicable to network architectures\n
    \  that use point-to-point tunnels between the access device and the\n   access
    gateway.  The access gateway in these models is designed to\n   serve large numbers
    of access devices.  Mobile architectures based on\n   Mobile IPv6 [RFC6275], Proxy
    Mobile IPv6 [RFC5213], or GPRS\n   Tunnelling Protocol (GTP) [TS29060], as well
    as broadband\n   architectures based on PPP or point-to-point VLANs as defined
    by the\n   Broadband Forum [TR59][TR101], are examples of this type of\n   architecture.\n
    \  The DS-Lite approach leverages IPv4-in-IPv6 tunnels (or other\n   tunneling
    modes) for carrying the IPv4 traffic from the customer\n   network to the Address
    Family Transition Router (AFTR).  An\n   established softwire between the AFTR
    and the access device is used\n   for traffic-forwarding purposes.  This makes
    the inner IPv4 address\n   irrelevant for traffic routing and allows sharing private
    IPv4\n   addresses [RFC1918] between customer sites within the service\n   provider
    network.\n   Similarly to DS-Lite, GI-DS-Lite enables the service provider to\n
    \  share public IPv4 addresses among different customers by combining\n   tunneling
    and NAT.  It allows multiple access devices behind the\n   access gateway to share
    the same private IPv4 address [RFC1918].\n   Rather than initiating the tunnel
    right on the access device,\n   GI-DS-Lite logically extends the already existing
    access tunnels\n   beyond the access gateway towards the AFTR using a tunneling\n
    \  mechanism with semantics for carrying context state related to the\n   encapsulated
    traffic.  This approach results in supporting\n   overlapping IPv4 addresses in
    the access network, requiring no\n   changes to either the access device or the
    access architecture.\n   Additional tunneling overhead in the access network is
    also omitted.\n   If, for example, an encapsulation mechanism based on Generic
    Routing\n   Encapsulation (GRE) is chosen, it allows the network between the\n
    \  access gateway and the AFTR to be either IPv4 or IPv6 and allows the\n   operator
    to migrate to IPv6 in incremental steps.\n"
  title: 1.  Overview
- contents:
  - "2.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"
    in this\n   document are to be interpreted as described in [RFC2119].\n   The
    following abbreviations are used within this document:\n      AFTR: Address Family
    Transition Router.  An AFTR combines IP-in-IP\n      tunnel termination and IPv4-IPv4
    NAT.\n      AD: Access Device.  It is the end host, also known as the mobile\n
    \     node in mobile architectures.\n      AG: Access Gateway.  A gateway in the
    access network, such as LMA,\n      Home Agent (HA), GGSN, or PDN-GW in mobile
    architectures.\n      CID: Context Identifier\n      DS-Lite: Dual-Stack Lite\n
    \     GGSN: Gateway GPRS Support Node\n      GI-DS-Lite: Gateway-Initiated DS-Lite\n
    \     NAT: Network Address Translator\n      PDN-GW: Packet Data Network Gateway\n
    \     SW: Softwire [RFC4925]\n      SWID: Softwire Identifier\n"
  title: 2.  Conventions
- contents:
  - "3.  Gateway-Initiated DS-Lite\n   This section provides an overview of Gateway-Initiated
    DS-Lite\n   (GI-DS-Lite).  Figure 1 outlines the generic deployment scenario for\n
    \  GI-DS-Lite.  This generic scenario can be mapped to multiple\n   different
    access architectures, some of which are described in\n   Appendix A.\n   In Figure
    1, access devices (AD-1 and AD-2) are connected to the\n   access gateway using
    some form of tunnel technology and the same is\n   used for carrying IPv4 (and
    optionally IPv6) traffic of the access\n   device.  These access devices may also
    be connected to the access\n   gateway over point-to-point links.  The details
    on how the network\n   delivers the IPv4 address configuration to the access devices
    are\n   specific to the access architecture and are outside the scope of this\n
    \  document.  With GI-DS-Lite, the access gateway and AFTR are connected\n   by
    a softwire [RFC4925].  The softwire is identified by a softwire\n   identifier
    (SWID).  The SWID does not need to be globally unique,\n   i.e., different SWIDs
    could be used to identify a softwire at the\n   different ends of a softwire.
    \ The form of the SWID depends on the\n   tunneling technology used for the softwire.
    \ The SWID could, for\n   example, be the endpoints of a GRE tunnel or a VPN-ID.
    \ See Section 6\n   for details.  A Context Identifier (CID) is used to multiplex
    flows\n   associated with the individual access devices onto the softwire.  It\n
    \  is deployment dependent whether the flows from a particular AD are\n   identified
    using the source IP address or an access tunnel\n   identifier.  Local policies
    at the access gateway determine which\n   part of the traffic received from an
    access device is tunneled over\n   the softwire to the AFTR.  The combination
    of CID and SWID must be\n   unique between the access gateway and AFTR to identify
    the flows\n   associated with an AD.  The CID is typically a 32-bit-wide identifier\n
    \  and is assigned by the access gateway.  It is retrieved either from a\n   local
    or remote (e.g., Authentication, Authorization, and Accounting\n   (AAA)) repository.
    \ Like the SWID, the embodiment of the CID depends\n   on the tunnel mode used
    and the type of the network connecting the\n   access gateway and AFTR.  If, for
    example, GRE [RFC2784] with GRE Key\n   and Sequence Number extensions [RFC2890]
    is used as the softwire\n   technology, the network connecting the access gateway
    and AFTR could\n   be a IPv4-only, IPv6-only, or dual-stack IP network.  The CID
    would\n   be carried within the GRE Key field.  Section 6 details the different\n
    \  softwire types supported with GI-DS-Lite.\n                        Access Device:
    AD-1\n                        Context ID: CID-1\n                                             NAT
    Mappings:\n      IPv4: a.b.c.d            +---+         (CID-1, TCP port1 <->\n
    \     +------+  access tunnel  |   |                 e.f.g.h, TCP port2)\n      |
    AD-1 |=================|   |                          +---+\n      +------+                 |
    \  |                          | A |\n                               |   |    Softwire
    SWID-1       | F |\n                               | A |==========================|
    T |\n      IPv4: a.b.c.d            | G |  (e.g., IPv4-over-GRE    | R |\n      +------+
    \                |   |   over IPv4 or IPv6)     +---+\n      | AD-2 |=================|
    \  |\n      +------+  access tunnel  |   |         (CID-2, TCP port3 <->\n                               |
    \  |                 e.f.g.h, TCP port4)\n                               +---+\n
    \                       Access Device: AD-2\n                        Context ID:
    CID-2\n    Figure 1: Gateway-Initiated Dual-Stack Lite Reference Architecture\n
    \  The AFTR combines softwire termination and IPv4-IPv4 NAT.  The NAT\n   binding
    of the AD's address could be assigned autonomously by the\n   AFTR from a local
    address pool, configured on a per-binding basis\n   (either by a remote control
    entity through a NAT control protocol or\n   through manual configuration), or
    derived from the CID (e.g., the\n   CID, if 32 bits wide, could be mapped 1:1
    to an external IPv4\n   address).  A simple example of a translation table at
    the AFTR is\n   shown in Figure 2.  The choice of the appropriate translation
    scheme\n   for a traffic flow can take into account parameters such as\n   destination
    IP address, incoming interface, etc.  The IP address of\n   the AFTR, which will
    either be an IPv6 or an IPv4 address depending\n   on the transport network between
    the access gateway and the AFTR, is\n   configured on the access gateway.  A variety
    of methods, such as out-\n   of-band mechanisms or manual configuration, apply.\n
    \      +=====================================+======================+\n       |
    \ Softwire-ID/Context-ID/IPv4/Port   |  Public IPv4/Port    |\n       +=====================================+======================+\n
    \      |  SWID-1/CID-1/a.b.c.d/TCP-port1     |  e.f.g.h/TCP-port2   |\n       |
    \                                    |                      |\n       |  SWID-1/CID-2/a.b.c.d/TCP-port3
    \    |  e.f.g.h/TCP-port4   |\n       +-------------------------------------+----------------------+\n
    \             Figure 2: Example Translation Table at the AFTR\n   GI-DS-Lite does
    not require a 1:1 relationship between an access\n   gateway and AFTR, but more
    generally applies to (M:N) scenarios,\n   where M access gateways are connected
    to N AFTRs.  Multiple access\n   gateways could be served by a single AFTR.  AFTRs
    could be dedicated\n   to specific groups of access-devices, groups of access
    gateways, or\n   geographic regions.  An AFTR could be, but does not have to be,
    co-\n   located with an access gateway.\n"
  title: 3.  Gateway-Initiated DS-Lite
- contents:
  - "4.  Protocol and Related Considerations\n   o  Depending on the embodiment of
    the CID (e.g., for GRE\n      encapsulation with GRE Key), the NAT binding entry
    maintained at\n      the AFTR, which reflects an active flow between an access
    device\n      inside the network and a node in the Internet, SHOULD be extended\n
    \     to include the CID and the identifier of the softwire (SWID).\n   o  When
    creating an IPv4-to-IPv4 NAT binding for an IPv4 packet flow\n      received from
    the access gateway over the softwire, the AFTR\n      SHOULD associate the CID
    with that NAT binding.  It SHOULD use the\n      combination of CID and SWID as
    the unique identifier and use those\n      parameters in the NAT binding entry.\n
    \  o  When forwarding a packet to the access device, the AFTR SHOULD\n      obtain
    the CID from the NAT binding associated with that flow.\n      For example, in
    case of GRE encapsulation, it SHOULD add the CID\n      to the GRE Key and Sequence
    Number extension of the GRE header and\n      tunnel it to the access gateway.\n
    \  o  On receiving any packet from the softwire, the AFTR SHOULD obtain\n      the
    CID from the incoming packet and use it for performing NAT\n      binding lookup
    and packet translation before forwarding the\n      packet.\n   o  The access
    gateway, on receiving any IPv4 packet from the access\n      device, SHOULD lookup
    the CID for that access device.  In case of\n      GRE encapsulation, it can,
    for example, add the CID to the GRE Key\n      and Sequence Number extension of
    the GRE header and tunnel it to\n      the AFTR.\n   o  On receiving any packet
    from the softwire, the access gateway\n      SHOULD obtain the CID from the packet
    and use it for making the\n      forwarding decision.\n   o  When encapsulating
    an IPv4 packet, the access gateway and AFTR\n      SHOULD use its Diffserv Codepoint
    (DSCP) to derive the DSCP (or\n      MPLS Traffic-Class Field in the case of MPLS)
    of the softwire.\n"
  title: 4.  Protocol and Related Considerations
- contents:
  - "5.  Softwire Management and Related Considerations\n   The following are the
    considerations related to the operational\n   management of the softwire between
    the AFTR and access gateway.\n   o  The softwire between the access gateway and
    the AFTR MAY be\n      created at system startup time OR dynamically established
    on-\n      demand.  It is deployment dependent which Operations,\n      Administration,
    and Maintenance (OAM) mechanisms (such as ICMP,\n      Bidirectional Forwarding
    Detection (BFD) [RFC5880], or Label\n      Switched Path (LSP) ping [RFC4379])
    are employed by the access\n      gateway and AFTR for softwire health management
    and corresponding\n      protection strategies.\n   o  The softwire peers MAY
    be provisioned to perform policy\n      enforcement, such as for determining the
    protocol type or overall\n      portion of traffic that gets tunneled or for any
    other settings\n      related to quality of service.  The specific details on
    how this\n      is achieved or the types of policies that can be applied are\n
    \     outside the scope for this document.\n   o  The softwire peers SHOULD use
    the correct path MTU value for the\n      tunnel path between the access gateway
    and the AFTR.  This value\n      MAY be statically configured at softwire creation
    time or\n      dynamically discovered using the standard path MTU discovery\n
    \     techniques.\n   o  An access gateway and an AFTR can have multiple softwires\n
    \     established between them (e.g., to separate address domains,\n      provide
    for load-sharing, etc.).\n"
  title: 5.  Softwire Management and Related Considerations
- contents:
  - "6.  Softwire Embodiments\n   Which tunnel technologies can be applied for the
    softwire connecting\n   an access gateway and AFTR are dependent on the deployment
    and the\n   requirements.  GRE encapsulation with GRE Key extension, MPLS VPNs\n
    \  [RFC4364], or plain IP-in-IP encapsulation can be used.  Softwire\n   identification
    and CID depend on the tunneling technology employed:\n   o  GRE with GRE Key:
    SWID is the tunnel identifier of the GRE tunnel\n      between the access gateway
    and the AFTR.  The CID is the GRE Key\n      associated with the AD.\n   o  MPLS
    VPN: The SWID is a generic identifier that uniquely\n      identifies the VPN
    at either the access gateway or AFTR.\n      Depending on whether the access gateway
    or AFTR is acting as\n      customer edge (CE) or provider edge (PE), the SWID
    could, for\n      example, be an attachment circuit identifier, an identifier\n
    \     representing the set of VPN route labels pointing to the routes\n      within
    the VPN, etc.  The AD's IPv4 address is the CID.  For a\n      given VPN, the
    AD's IPv4 address must be unique.\n   o  IPv4/IPv6-in-MPLS: The SWID is the top
    MPLS label.  CID might be\n      the next MPLS label in the stack, if present,
    or the IP address of\n      the AD.\n   o  IPv4-in-IPv4: SWID is the outer IPv4
    source address.  The AD's\n      IPv4 address is the CID.  For a given outer IPv4
    source address,\n      the AD's IPv4 address must be unique.\n   o  IPv4-in-IPv6:
    SWID is the outer IPv6 source address.  If the AD's\n      IPv4 address is used
    as CID, the AD's IPv4 address must be unique.\n      If the IPv6 Flow Label [RFC6437]
    is used as CID, the IPv4\n      addresses of the ADs may overlap.  Given that
    the IPv6 Flow Label\n      is 20 bits wide, which is shorter than the recommended
    32-bit CID,\n      large-scale deployments may require additional scaling\n      considerations.
    \ In addition, one should ensure sufficient\n      randomization of the IP Flow
    Label to avoid possible interference\n      with other uses of the IP Flow Label,
    such as Equal Cost Multipath\n      (ECMP) support.\n   Figure 3 gives an overview
    of the different tunnel modes as they\n   apply to different deployment scenarios.
    \"x\" indicates that a certain\n   deployment scenario is supported.  The following
    abbreviations are\n   used:\n   o  IPv4 address\n      *  \"up\": Deployments
    with \"unique private IPv4 addresses\" assigned\n         to the access devices
    are supported.\n      *  \"op\": Deployments with \"overlapping private IPv4 addresses\"\n
    \        assigned to the access devices are supported.\n      *  \"s\": Deployments
    where all access devices are assigned the same\n         IPv4 address are supported.\n
    \  o  Network-type\n      *  \"v4\": The access gateway and AFTR are connected
    by an IPv4-only\n         network.\n      *  \"v6\": The access gateway and AFTR
    are connected by an IPv6-only\n         network.\n      *  \"v4v6\": The access
    gateway and AFTR are connected by a dual-\n         stack network, supporting
    IPv4 and IPv6.\n      *  \"MPLS\": The access gateway and AFTR are connected by
    an MPLS\n         network\n        +===================+==============+=======================+\n
    \       |                    | IPv4 address|      Network-type     |\n        |
    \   Softwire        +----+----+---+----+----+------+------+\n        |                    |
    up | op | s | v4 | v6 | v4v6 | MPLS |\n        +====================+====+====+===+====+====+======+======+\n
    \       | GRE with GRE Key   |  x |  x | x |  x |  x |   x  |      |\n        |
    MPLS VPN           |  x |  x |   |    |    |      |   x  |\n        | IPv4/IPv6-in-MPLS
    \ |  x |  x | x |    |    |      |   x  |\n        | IPv4-in-IPv4       |  x |
    \   |   |  x |    |      |      |\n        | IPv4-in-IPv6       |  x |    |   |
    \   |  x |      |      |\n        | IPv4-in-IPv6 w/ FL |  x |  x | x |    |  x
    |      |      |\n        +====================+====+====+===+====+====+======+======+\n
    \             Figure 3: Tunnel Modes and Their Applicability\n"
  title: 6.  Softwire Embodiments
- contents:
  - "7.  Security Considerations\n   The approach specified in this document allows
    the use of Dual-Stack\n   Lite for tunnel-based access architectures.  Rather
    than initiating\n   the tunnel from the access device, GI-DS-Lite logically extends
    the\n   already existing access tunnel beyond the access gateway towards the\n
    \  AFTR and builds a virtual softwire between the AFTR and the access\n   device.
    \ This approach requires the use of an additional Context\n   Identifier in the
    AFTR and at the access gateway, which is required\n   for making IP packet-forwarding
    decisions.\n   If a packet is received with an incorrect Context Identifier at
    the\n   access gateway/AFTR, it will be associated with an incorrect access\n
    \  device.  Therefore, care must be taken to ensure an IP packet\n   tunneled
    between the access gateway and the AFTR is carried with the\n   Context Identifier
    of the access device associated with that IP\n   packet.  The Context Identifier
    is not carried from the access\n   device, and it is not possible for one access
    device to claim the\n   Context Identifier of some other access device.  However,
    it is\n   possible that an on-path attacker between the access gateway and the\n
    \  AFTR can potentially modify the Context Identifier in the packet,\n   resulting
    in association of the packet to an incorrect access device.\n   This threat is
    no different from an on-path attacker modifying the\n   source/destination address
    of an IP packet.  However, this threat can\n   be prevented by enabling IPsec
    security with integrity protection\n   turned on, between the access gateway and
    the AFTR, that will ensure\n   the correct binding of the Context Identifier and
    the inner packet.\n   This specification does not require any new security considerations\n
    \  other than those specified in the Dual-Stack Lite specification\n   [RFC6333]
    and in the security considerations specified for the given\n   access architecture,
    such as Proxy Mobile IPv6, leveraging this\n   transitioning scheme.\n"
  title: 7.  Security Considerations
- contents:
  - "8.  Acknowledgements\n   The authors would like to acknowledge the discussions
    on this topic\n   with Mark Grayson, Jay Iyer, Kent Leung, Vojislav Vucetic, Flemming\n
    \  Andreasen, Dan Wing, Jouni Korhonen, Teemu Savolainen, Parviz Yegani,\n   Farooq
    Bari, Mohamed Boucadair, Vinod Pandey, Jari Arkko, Eric Voit,\n   Yiu L. Lee,
    Tina Tsou, Guo-Liang Yang, Cathy Zhou, Olaf Bonness, Paco\n   Cortes, Jim Guichard,
    Stephen Farrell, Pete Resnik, and Ralph Droms.\n"
  title: 8.  Acknowledgements
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [RFC1918]  Rekhter, Y., Moskowitz, R., Karrenberg,
      D., Groot, G., and\n              E. Lear, \"Address Allocation for Private
      Internets\",\n              BCP 5, RFC 1918, February 1996.\n   [RFC2119]  Bradner,
      S., \"Key words for use in RFCs to Indicate\n              Requirement Levels\",
      BCP 14, RFC 2119, March 1997.\n   [RFC2784]  Farinacci, D., Li, T., Hanks, S.,
      Meyer, D., and P.\n              Traina, \"Generic Routing Encapsulation (GRE)\",
      RFC 2784,\n              March 2000.\n   [RFC2890]  Dommety, G., \"Key and Sequence
      Number Extensions to GRE\",\n              RFC 2890, September 2000.\n   [RFC4364]
      \ Rosen, E. and Y. Rekhter, \"BGP/MPLS IP Virtual Private\n              Networks
      (VPNs)\", RFC 4364, February 2006.\n   [RFC4379]  Kompella, K. and G. Swallow,
      \"Detecting Multi-Protocol\n              Label Switched (MPLS) Data Plane Failures\",
      RFC 4379,\n              February 2006.\n   [RFC5213]  Gundavelli, S., Leung,
      K., Devarapalli, V., Chowdhury, K.,\n              and B. Patil, \"Proxy Mobile
      IPv6\", RFC 5213, August 2008.\n   [RFC5555]  Soliman, H., \"Mobile IPv6 Support
      for Dual Stack Hosts and\n              Routers\", RFC 5555, June 2009.\n   [RFC5844]
      \ Wakikawa, R. and S. Gundavelli, \"IPv4 Support for Proxy\n              Mobile
      IPv6\", RFC 5844, May 2010.\n   [RFC5880]  Katz, D. and D. Ward, \"Bidirectional
      Forwarding Detection\n              (BFD)\", RFC 5880, June 2010.\n   [RFC6275]
      \ Perkins, C., Johnson, D., and J. Arkko, \"Mobility Support\n              in
      IPv6\", RFC 6275, July 2011.\n   [RFC6333]  Durand, A., Droms, R., Woodyatt,
      J., and Y. Lee, \"Dual-\n              Stack Lite Broadband Deployments Following
      IPv4\n              Exhaustion\", RFC 6333, August 2011.\n   [RFC6437]  Amante,
      S., Carpenter, B., Jiang, S., and J. Rajahalme,\n              \"IPv6 Flow Label
      Specification\", RFC 6437, November 2011.\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2.  Informative References\n   [NAT-CONTROL]\n              Brockners, F.,
      Bhandari, S., Singh, V., and V. Fajardo,\n              \"Diameter Network Address
      and Port Translation Control\n              Application\", Work in Progress,
      April 2012.\n   [RFC4925]  Li, X., Dawkins, S., Ward, D., and A. Durand, \"Softwire\n
      \             Problem Statement\", RFC 4925, July 2007.\n   [TR101]    Broadband
      Forum, \"TR-101: Migration to Ethernet-Based DSL\n              Aggregation\",
      April 2006.\n   [TR59]     Broadband Forum, \"TR-059: DSL Evolution - Architecture\n
      \             Requirements for the Support of QoS-Enabled IP Services\",\n              September
      2003.\n   [TS23060]  3GPP, \"Technical Specification Group Services and System\n
      \             Aspects; General Packet Radio Service (GPRS); Service\n              description;
      Stage 2, V11.2.0\", TS 23.060, 2012.\n   [TS23401]  3GPP, \"Technical Specification
      Group Services and System\n              Aspects; General Packet Radio Service
      (GPRS) enhancements\n              for Evolved Universal Terrestrial Radio Access
      Network\n              (E-UTRAN) access, V11.1.0\", TS 23.401, 2012.\n   [TS29060]
      \ 3GPP, \"Technical Specification Group Core Network and\n              Terminals;
      General Packet Radio Service (GPRS); GPRS\n              Tunnelling Protocol
      (GTP), V11.3.0\", TS 29.060, 2012.\n"
    title: 9.2.  Informative References
  title: 9.  References
- contents:
  - 'Appendix A.  GI-DS-Lite Deployment

    '
  - contents:
    - "A.1.  Connectivity Establishment: Example Call Flow\n   Figure 4 shows an example
      call flow - linking access tunnel\n   establishment on the access gateway with
      the softwire to the AFTR.\n   This simple example assumes that traffic from
      the AD uses a single\n   access tunnel and that the access gateway will use
      local policies to\n   decide which portion of the traffic received over this
      access tunnel\n   needs to be forwarded to the AFTR.\n             AD         Access
      Gateway       AAA/Policy     AFTR\n             |                |                 |
      \           |\n             |----(1)-------->|                 |            |\n
      \            |               (2)<-------------->|            |\n             |
      \              (3)                |            |\n             |                |<------(4)------------------->|\n
      \            |               (5)                |            |\n             |<---(6)-------->|
      \                |            |\n             |                |                 |
      \           |\n           Figure 4: Example Call Flow for Session Establishment\n
      \  1.  The access gateway receives a request to create an access tunnel\n       endpoint.\n
      \  2.  The access gateway authenticates and authorizes the access\n       tunnel.
      \ Based on local policy or through interaction with the\n       AAA/Policy system,
      the access gateway recognizes that IPv4\n       service should be provided using
      GI-DS-Lite.\n   3.  The access gateway creates an access tunnel endpoint.  The
      access\n       tunnel links AD and access gateway.\n   4.  (Optional): The access
      gateway and the AFTR establish a control\n       session between themselves.
      \ This session can, for example, be\n       used to exchange accounting or NAT-configuration
      information.\n       Accounting information could be supplied to the access
      gateway,\n       AAA/Policy, or other network entities that require information\n
      \      about the externally visible address/port pairs of a particular\n       access
      device.  The Diameter NAT Control Application\n       [NAT-CONTROL] could, for
      example, be used for this purpose.\n   5.  The access gateway allocates a unique
      CID and associates those\n       flows received from the access tunnel that
      need to be tunneled\n       towards the AFTR with the softwire linking the access
      gateway and\n       AFTR.  Local forwarding policy on the access gateway determines\n
      \      which traffic will need to be tunneled towards the AFTR.\n   6.  The
      access gateway and AD complete the access tunnel\n       establishment.  Depending
      on the procedures and mechanisms of the\n       corresponding access network
      architecture, this step can include\n       the assignment of an IPv4 address
      to the AD.\n"
    title: 'A.1.  Connectivity Establishment: Example Call Flow'
  - contents:
    - "A.2.  GI-DS-Lite Applicability: Examples\n   The section outlines deployment
      examples of the generic GI-DS-Lite\n   architecture described in Section 3.\n
      \  o  Access architectures based on Mobile-IP: In a network scenario\n      based
      on Dual-Stack Mobile IPv6 (DSMIPv6) [RFC5555], the Mobile\n      IPv6 home agent
      will implement the GI-DS-Lite access gateway\n      function along with the
      dual-stack Mobile IPv6 functionality.\n   o  Access architectures based on Proxy
      Mobile IPv6 (PMIPv6): In a\n      PMIPv6 [RFC5213] scenario, the local mobility
      anchor (LMA) will\n      implement the GI-DS-Lite access gateway function along
      with the\n      PMIPv6 IPv4 support [RFC5844] functionality.\n   o  GTP-based
      access architectures: Third Generation Partnership\n      Project (3GPP) TS
      23.401 [TS23401] and 3GPP TS 23.060 [TS23060]\n      define mobile access architectures
      using GTP.  For GI-DS-Lite, the\n      PDN-GW or GGSN will also assume the access
      gateway function.\n   o  Fixed Worldwide Interoperability for Microwave Access
      (WiMAX)\n      architecture: If GI-DS-Lite is applied to fixed WiMAX, the Access\n
      \     Service Network Gateway (ASN-GW) will implement the GI-DS-Lite\n      access
      gateway function.\n   o  Mobile WiMAX: If GI-DS-Lite is applied to mobile WiMAX,
      the home\n      agent will implement the access gateway function.\n   o  PPP-based
      broadband access architectures: If GI-DS-Lite is applied\n      to PPP-based
      access architectures, the Broadband Remote Access\n      Server (BRAS) or Broadband
      Network Gateway (BNG) will implement\n      the GI-DS-Lite access gateway function.\n
      \  o  In broadband access architectures using per-subscriber VLANs, the\n      BNG
      will implement the GI-DS-Lite access gateway function.\n"
    title: 'A.2.  GI-DS-Lite Applicability: Examples'
  title: Appendix A.  GI-DS-Lite Deployment
- contents:
  - "Authors' Addresses\n   Frank Brockners\n   Cisco\n   Hansaallee 249, 3rd Floor\n
    \  Duesseldorf, Nordrhein-Westfalen  40549\n   Germany\n   EMail: fbrockne@cisco.com\n
    \  Sri Gundavelli\n   Cisco\n   170 West Tasman Drive\n   San Jose, CA  95134\n
    \  USA\n   EMail: sgundave@cisco.com\n   Sebastian Speicher\n   Deutsche Telekom
    AG\n   Landgrabenweg 151\n   Bonn, Nordrhein-Westfalen  53277\n   Germany\n   EMail:
    sebastian.speicher@telekom.de\n   David Ward\n   Cisco\n   170 West Tasman Drive\n
    \  San Jose, CA  95134\n   USA\n   EMail: wardd@cisco.com\n"
  title: Authors' Addresses
