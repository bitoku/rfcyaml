- title: __initial_text__
  contents:
  - '                  IS-IS Extensions for Segment Routing

    '
- title: Abstract
  contents:
  - "Abstract\n   Segment Routing (SR) allows for a flexible definition of end-to-end\n\
    \   paths within IGP topologies by encoding paths as sequences of\n   topological\
    \ sub-paths, called \"segments\".  These segments are\n   advertised by the link-state\
    \ routing protocols (IS-IS and OSPF).\n   This document describes the IS-IS extensions\
    \ that need to be\n   introduced for Segment Routing operating on an MPLS data\
    \ plane.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8667.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction\n     1.1.  Requirements Language\n  \
    \ 2.  Segment Routing Identifiers\n     2.1.  Prefix Segment Identifier (Prefix-SID)\
    \ Sub-TLV\n       2.1.1.  Flags\n       2.1.2.  Prefix-SID Propagation\n     2.2.\
    \  Adjacency Segment Identifier\n       2.2.1.  Adjacency Segment Identifier (Adj-SID)\
    \ Sub-TLV\n       2.2.2.  Adjacency Segment Identifier (LAN-Adj-SID) Sub-TLV\n\
    \     2.3.  SID/Label Sub-TLV\n     2.4.  SID/Label Binding TLV\n       2.4.1.\
    \  Flags\n       2.4.2.  Range\n       2.4.3.  Prefix Length, Prefix\n       2.4.4.\
    \  Mapping Server Prefix-SID\n       2.4.5.  SID/Label Sub-TLV\n       2.4.6.\
    \  Example Encodings\n     2.5.  Multi-Topology SID/Label Binding TLV\n   3. \
    \ Router Capabilities\n     3.1.  SR-Capabilities Sub-TLV\n     3.2.  SR-Algorithm\
    \ Sub-TLV\n     3.3.  SR Local Block Sub-TLV\n     3.4.  SRMS Preference Sub-TLV\n\
    \   4.  IANA Considerations\n     4.1.  Sub-TLVs for Types 22, 23, 25, 141, 222,\
    \ and 223\n     4.2.  Sub-TLVs for Types 135, 235, 236, and 237\n     4.3.  Sub-TLVs\
    \ for Type 242\n     4.4.  New TLV Codepoint and Sub-TLV Registry\n   5.  Security\
    \ Considerations\n   6.  References\n     6.1.  Normative References\n     6.2.\
    \  Informative References\n   Acknowledgements\n   Contributors\n   Authors' Addresses\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Segment Routing (SR) allows for a flexible definition of\
    \ end-to-end\n   paths within IGP topologies by encoding paths as sequences of\n\
    \   topological sub-paths, called \"segments\".  These segments are\n   advertised\
    \ by the link-state routing protocols (IS-IS and OSPF).\n   Prefix segments represent\
    \ an ECMP-aware shortest path to a prefix (or\n   a node), as per the state of\
    \ the IGP topology.  Adjacency segments\n   represent a hop over a specific adjacency\
    \ between two nodes in the\n   IGP.  A prefix segment is typically a multi-hop\
    \ path while an\n   adjacency segment, in most of the cases, is a one-hop path.\
    \  SR's\n   control plane can be applied to both IPv6 and MPLS data planes and\n\
    \   does not require any additional signaling (other than the regular\n   IGP).\
    \  For example, when used in MPLS networks, SR paths do not\n   require any LDP\
    \ or RSVP-TE signaling.  Still, SR can interoperate in\n   the presence of Label\
    \ Switched Paths (LSPs) established with RSVP or\n   LDP.\n   There are additional\
    \ segment types, e.g., the Binding SID as defined\n   in [RFC8402].  This document\
    \ also defines an advertisement for one\n   type of Binding SID: the Mirror Context\
    \ segment.\n   This document describes the IS-IS extensions that need to be\n\
    \   introduced for Segment Routing operating on an MPLS data plane.\n   The Segment\
    \ Routing architecture is described in [RFC8402].  Segment\n   Routing use cases\
    \ are described in [RFC7855].\n"
- title: 1.1.  Requirements Language
  contents:
  - "1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in BCP\n   14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n"
- title: 2.  Segment Routing Identifiers
  contents:
  - "2.  Segment Routing Identifiers\n   The Segment Routing architecture [RFC8402]\
    \ defines different types of\n   Segment Identifiers (SIDs).  This document defines\
    \ the IS-IS\n   encodings for the IGP-Prefix Segment, the IGP-Adjacency Segment,\
    \ the\n   IGP-LAN-Adjacency Segment, and the Binding Segment.\n"
- title: 2.1.  Prefix Segment Identifier (Prefix-SID) Sub-TLV
  contents:
  - "2.1.  Prefix Segment Identifier (Prefix-SID) Sub-TLV\n   A new IS-IS sub-TLV\
    \ is defined: the Prefix Segment Identifier\n   (Prefix-SID) sub-TLV.\n   The\
    \ Prefix-SID sub-TLV carries the Segment Routing IGP-Prefix-SID as\n   defined\
    \ in [RFC8402].  The 'Prefix-SID' MUST be unique within a given\n   IGP domain\
    \ (when the L-Flag is not set).\n   A Prefix-SID sub-TLV is associated to a prefix\
    \ advertised by a node\n   and MAY be present in any of the following TLVs:\n\
    \      TLV-135 (Extended IPv4 reachability) defined in [RFC5305].\n      TLV-235\
    \ (Multi-topology IPv4 Reachability) defined in [RFC5120].\n      TLV-236 (IPv6\
    \ IP Reachability) defined in [RFC5308].\n      TLV-237 (Multi-topology IPv6 IP\
    \ Reachability) defined in\n      [RFC5120].\n      The Binding TLV and Multi-Topology\
    \ Binding TLV are defined in\n      Sections 2.4 and 2.5, respectively.\n   The\
    \ Prefix-SID sub-TLV has the following format:\n    0                   1    \
    \               2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   |   Type        |     Length    |     Flags\
    \     |   Algorithm   |\n   |                         SID/Index/Label (variable)\
    \            |\n   where:\n      Type:    3\n      Length:  5 or 6 depending on\
    \ the size of the SID (described below)\n      Flags:   1-octet field of the following\
    \ flags:\n                      0 1 2 3 4 5 6 7\n                     |R|N|P|E|V|L|\
    \   |\n               where:\n               R-Flag:  Re-advertisement Flag. \
    \ If set, then the prefix\n                        to which this Prefix-SID is\
    \ attached has been\n                        propagated by the router from either\
    \ another\n                        level (i.e., from Level-1 to Level-2 or the\n\
    \                        opposite) or redistribution (e.g., from another\n   \
    \                     protocol).\n               N-Flag:  Node-SID Flag.  If set,\
    \ then the Prefix-SID\n                        refers to the router identified\
    \ by the prefix.\n                        Typically, the N-Flag is set on Prefix-SIDs\
    \ that\n                        are attached to a router loopback address.  The\n\
    \                        N-Flag is set when the Prefix-SID is a Node-SID\n   \
    \                     as described in [RFC8402].\n               P-Flag:  No-PHP\
    \ (No Penultimate Hop-Popping) Flag.  If\n                        set, then the\
    \ penultimate hop MUST NOT pop the\n                        Prefix-SID before\
    \ delivering the packet to the\n                        node that advertised the\
    \ Prefix-SID.\n               E-Flag:  Explicit NULL Flag.  If set, any upstream\n\
    \                        neighbor of the Prefix-SID originator MUST\n        \
    \                replace the Prefix-SID with a Prefix-SID that\n             \
    \           has an Explicit NULL value (0 for IPv4 and 2 for\n               \
    \         IPv6) before forwarding the packet.\n               V-Flag:  Value Flag.\
    \  If set, then the Prefix-SID carries\n                        a value (instead\
    \ of an index).  By default, the\n                        flag is UNSET.\n   \
    \            L-Flag:  Local Flag.  If set, then the value/index\n            \
    \            carried by the Prefix-SID has local\n                        significance.\
    \  By default, the flag is UNSET.\n               Other bits:  MUST be zero when\
    \ originated and ignored\n                        when received.\n      Algorithm:\
    \  the router may use various algorithms when calculating\n         reachability\
    \ to other nodes or to prefixes attached to these\n         nodes.  Algorithm\
    \ identifiers are defined in Section 3.2.\n         Examples of these algorithms\
    \ are metric-based Shortest Path\n         First (SPF), various sorts of Constrained\
    \ SPF, etc.  The\n         Algorithm field of the Prefix-SID contains the identifier\
    \ of\n         the algorithm the router uses to compute the reachability of\n\
    \         the prefix to which the Prefix-SID is associated.\n      At origination,\
    \ the Prefix-SID Algorithm field MUST be set to 0 or\n      to any value advertised\
    \ in the SR-Algorithm sub-TLV (see\n      Section 3.2).\n      A router receiving\
    \ a Prefix-SID from a remote node and with an\n      algorithm value that such\
    \ remote node has not advertised in the\n      SR-Algorithm sub-TLV (see Section\
    \ 3.2) MUST ignore the Prefix-SID\n      sub-TLV.\n      SID/Index/Label as defined\
    \ in Section 2.1.1.1.\n   When the Prefix-SID is an index (and the V-Flag is not\
    \ set), the\n   value is used to determine the actual label value inside the set\
    \ of\n   all advertised label ranges of a given router.  This allows a\n   receiving\
    \ router to construct the forwarding state to a particular\n   destination router.\n\
    \   In many use cases, a 'stable transport' address is overloaded as an\n   identifier\
    \ of a given node.  Because Prefixes may be re-advertised\n   into other levels,\
    \ there may be some ambiguity (e.g., originating\n   router vs. L1L2 router) for\
    \ which node a particular IP prefix serves\n   as the identifier.  The Prefix-SID\
    \ sub-TLV contains the necessary\n   flags to disambiguate Prefix-to-node mappings.\
    \  Furthermore, if a\n   given node has several 'stable transport' addresses,\
    \ there are flags\n   to differentiate those among other Prefixes advertised from\
    \ a given\n   node.\n"
- title: 2.1.1.  Flags
  contents:
  - '2.1.1.  Flags

    '
- title: 2.1.1.1.  V-Flag and L-Flag
  contents:
  - "2.1.1.1.  V-Flag and L-Flag\n   The V-Flag indicates whether the SID/Index/Label\
    \ field is a value or\n   an index.\n   The L-Flag indicates whether the value/index\
    \ in the SID/Index/Label\n   field has local or global significance.\n   The following\
    \ settings for V-Flag and L-Flag are valid:\n      The V-Flag and L-Flag are set\
    \ to 0:  The SID/Index/Label field is\n         a 4-octet index defining the offset\
    \ in the SID/Label space\n         advertised by this router using the encodings\
    \ defined in\n         Section 3.1.\n      The V-Flag and L-Flag are set to 1:\
    \  The SID/Index/Label field is\n         a 3-octet local label where the 20 rightmost\
    \ bits are used for\n         encoding the label value.\n   All other combinations\
    \ of V-Flag and L-Flag are invalid, and any SID\n   advertisement received with\
    \ an invalid setting for the V-Flag and\n   L-Flag MUST be ignored.\n"
- title: 2.1.1.2.  R-Flag and N-Flag
  contents:
  - "2.1.1.2.  R-Flag and N-Flag\n   The R-Flag MUST be set for prefixes that are\
    \ not local to the router\n   and are advertised because of:\n      propagation\
    \ (Level-1 into Level-2);\n      leaking (Level-2 into Level-1); or\n      redistribution\
    \ (e.g., from another protocol).\n   In the case where a Level-1-2 router has\
    \ local interface addresses\n   configured in one level, it may also propagate\
    \ these addresses into\n   the other level.  In such case, the Level-1-2 router\
    \ MUST NOT set the\n   R bit.\n   The N-Flag is used in order to define a Node-SID.\
    \  A router MAY set\n   the N-Flag only if all of the following conditions are\
    \ met:\n      The prefix to which the Prefix-SID is attached is local to the\n\
    \      router (i.e., the prefix is configured on one of the local\n      interfaces,\
    \ e.g., a 'stable transport' loopback).\n      The prefix to which the Prefix-SID\
    \ is attached has a Prefix length\n      of either /32 (IPv4) or /128 (IPv6).\n\
    \   The router MUST ignore the N-Flag on a received Prefix-SID if the\n   prefix\
    \ has a Prefix length different than /32 (IPv4) or /128 (IPv6).\n   The Prefix\
    \ Attribute Flags sub-TLV [RFC7794] also defines the N-Flag\n   and R-Flag and\
    \ with the same semantics of the equivalent flags\n   defined in this document.\
    \  Whenever the Prefix Attribute Flags sub-\n   TLV is present for a given prefix,\
    \ the values of the N-Flag and\n   R-Flag advertised in that sub-TLV MUST be used,\
    \ and the values in a\n   corresponding Prefix-SID sub-TLV (if present) MUST be\
    \ ignored.\n"
- title: 2.1.1.3.  E-Flag and P-Flag
  contents:
  - "2.1.1.3.  E-Flag and P-Flag\n   The following behavior is associated with the\
    \ settings of the E-Flag\n   and P-Flag:\n   *  If the P-Flag is not set, then\
    \ any upstream neighbor of the\n      Prefix-SID originator MUST pop the Prefix-SID.\
    \  This is equivalent\n      to the \"penultimate hop-popping\" mechanism used\
    \ in the MPLS data\n      plane, which improves performance of the ultimate hop.\
    \  MPLS EXP\n      bits of the Prefix-SID are not preserved to the ultimate hop\
    \ (the\n      Prefix-SID being removed).  If the P-Flag is unset, the received\n\
    \      E-Flag is ignored.\n   *  If the P-Flag is set, then:\n      -  If the\
    \ E-Flag is not set, then any upstream neighbor of the\n         Prefix-SID originator\
    \ MUST keep the Prefix-SID on top of the\n         stack.  This is useful when,\
    \ e.g., the originator of the\n         Prefix-SID must stitch the incoming packet\
    \ into a continuing\n         MPLS LSP to the final destination.  This could occur\
    \ at an\n         inter-area border router (prefix propagation from one area to\n\
    \         another) or at an interdomain border router (prefix propagation\n  \
    \       from one domain to another).\n      -  If the E-Flag is set, then any\
    \ upstream neighbor of the Prefix-\n         SID originator MUST replace the Prefix-SID\
    \ with a Prefix-SID\n         having an Explicit NULL value.  This is useful,\
    \ e.g., when the\n         originator of the Prefix-SID is the final destination\
    \ for the\n         related prefix and the originator wishes to receive the packet\n\
    \         with the original EXP bits.\n   When propagating (from either Level-1\
    \ to Level-2 or Level-2 to Level-\n   1) a reachability advertisement originated\
    \ by another IS-IS speaker,\n   the router MUST set the P-Flag and MUST clear\
    \ the E-Flag of the\n   related Prefix-SIDs.\n"
- title: 2.1.2.  Prefix-SID Propagation
  contents:
  - "2.1.2.  Prefix-SID Propagation\n   The Prefix-SID sub-TLV MUST be included when\
    \ the associated Prefix\n   Reachability TLV is propagated across level boundaries.\n\
    \   The Level-1-2 router that propagates the Prefix-SID sub-TLV between\n   levels\
    \ maintains the content (flags and SID), except as noted in\n   Sections 2.1.1.2\
    \ and 2.1.1.3.\n"
- title: 2.2.  Adjacency Segment Identifier
  contents:
  - "2.2.  Adjacency Segment Identifier\n   A new IS-IS sub-TLV is defined: the Adjacency\
    \ Segment Identifier\n   (Adj-SID) sub-TLV.\n   The Adj-SID sub-TLV is an optional\
    \ sub-TLV carrying the Segment\n   Routing IGP-Adjacency-SID as defined in [RFC8402]\
    \ with flags and\n   fields that may be used, in future extensions of Segment\
    \ Routing, for\n   carrying other types of SIDs.\n   IS-IS adjacencies are advertised\
    \ using one of the IS Neighbor TLVs\n   below:\n      TLV-22 (Extended IS reachability)\
    \ [RFC5305]\n      TLV-222 (MT-ISN) [RFC5120]\n      TLV-23 (IS Neighbor Attribute)\
    \ [RFC5311]\n      TLV-223 (MT IS Neighbor Attribute) [RFC5311]\n      TLV-141\
    \ (inter-AS reachability information) [RFC5316]\n   Multiple Adj-SID sub-TLVs\
    \ MAY be associated with a single IS\n   Neighbor.\n"
- title: 2.2.1.  Adjacency Segment Identifier (Adj-SID) Sub-TLV
  contents:
  - "2.2.1.  Adjacency Segment Identifier (Adj-SID) Sub-TLV\n   The following format\
    \ is defined for the Adj-SID sub-TLV:\n    0                   1             \
    \      2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1\n   |   Type        |     Length    |     Flags     |  \
    \   Weight    |\n   |                         SID/Label/Index (variable)     \
    \       |\n   where:\n      Type:    31\n      Length:  5 or 6 depending on size\
    \ of the SID\n      Flags:   1-octet field of the following flags:\n         \
    \             0 1 2 3 4 5 6 7\n                     |F|B|V|L|S|P|   |\n      \
    \         where:\n               F-Flag:  Address-Family Flag.  If unset, then\
    \ the Adj-SID\n                        is used when forwarding IPv4-encapsulated\n\
    \                        traffic to the neighbor.  If set, then the Adj-\n   \
    \                     SID is used when forwarding IPv6-encapsulated\n        \
    \                traffic to the neighbor.\n               B-Flag:  Backup Flag.\
    \  If set, the Adj-SID is eligible\n                        for protection (e.g.,\
    \ using IP Fast Reroute\n                        (IPFRR) or MPLS Fast Reroute\
    \ (MPLS-FRR)) as\n                        described in [RFC8402].\n          \
    \     V-Flag:  Value Flag.  If set, then the Adj-SID carries a\n             \
    \           value.  By default, the flag is SET.\n               L-Flag:  Local\
    \ Flag.  If set, then the value/index\n                        carried by the\
    \ Adj-SID has local significance.\n                        By default, the flag\
    \ is SET.\n               S-Flag:  Set Flag.  When set, the S-Flag indicates that\n\
    \                        the Adj-SID refers to a set of adjacencies (and\n   \
    \                     therefore MAY be assigned to other adjacencies\n       \
    \                 as well).\n               P-Flag:  Persistent Flag.  When set,\
    \ the P-Flag indicates\n                        that the Adj-SID is persistently\
    \ allocated,\n                        i.e., the Adj-SID value remains consistent\n\
    \                        across router restart and/or interface flap.\n      \
    \         Other bits:  MUST be zero when originated and ignored\n            \
    \            when received.\n      Weight:  1 octet.  The value represents the\
    \ weight of the Adj-SID\n               for the purpose of load balancing.  The\
    \ use of the weight\n               is defined in [RFC8402].\n      SID/Index/Label\
    \ as defined in Section 2.1.1.1.\n      An SR-capable router MAY allocate an Adj-SID\
    \ for each of its\n      adjacencies.\n      An SR-capable router MAY allocate\
    \ more than one Adj-SID to an\n      adjacency.\n      An SR-capable router MAY\
    \ allocate the same Adj-SID to different\n      adjacencies.\n      When the P-Flag\
    \ is not set, the Adj-SID MAY be persistent.  When\n      the P-Flag is set, the\
    \ Adj-SID MUST be persistent.\n      Examples of Adj-SID sub-TLV use are described\
    \ in [RFC8402].\n      The F-Flag is used in order for the router to advertise\
    \ the\n      outgoing encapsulation of the adjacency the Adj-SID is attached\n\
    \      to.\n"
- title: 2.2.2.  Adjacency Segment Identifier (LAN-Adj-SID) Sub-TLV
  contents:
  - "2.2.2.  Adjacency Segment Identifier (LAN-Adj-SID) Sub-TLV\n   In LAN subnetworks,\
    \ the Designated Intermediate System (DIS) is\n   elected and originates the Pseudonode\
    \ LSP (PN LSP) including all\n   neighbors of the DIS.\n   When Segment Routing\
    \ is used, each router in the LAN MAY advertise\n   the Adj-SID of each of its\
    \ neighbors.  Since, on LANs, each router\n   only advertises one adjacency to\
    \ the DIS (and doesn't advertise any\n   other adjacency), each router advertises\
    \ the set of Adj-SIDs (for\n   each of its neighbors) inside a newly defined sub-TLV\
    \ that is a part\n   of the TLV advertising the adjacency to the DIS (e.g., TLV-22).\n\
    \   The following new sub-TLV is defined: LAN Adjacency Segment\n   Identifier\
    \ (LAN-Adj-SID) containing the set of Adj-SIDs the router\n   assigned to each\
    \ of its LAN neighbors.\n   The format of the LAN-Adj-SID sub-TLV is as follows:\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   |   Type     \
    \   |     Length    |      Flags    |    Weight     |\n   |                  Neighbor\
    \ System-ID (ID length octets)        |\n   |                   SID/Label/Index\
    \ (variable)                  |\n   where:\n      Type:    32\n      Length: \
    \ Variable\n      Flags:   1-octet field of the following flags:\n           \
    \           0 1 2 3 4 5 6 7\n                     |F|B|V|L|S|P|   |\n        \
    \       where the F-Flag, B-Flag, V-Flag, L-Flag, S-Flag, and\n              \
    \ P-Flag are defined in Section 2.2.1.\n      Other bits:  MUST be zero when originated\
    \ and ignored when\n                   received.\n      Weight:      1 octet.\
    \  The value represents the weight of the Adj-\n                   SID for the\
    \ purpose of load balancing.  The use of\n                   the weight is defined\
    \ in [RFC8402].\n      Neighbor System-ID:  IS-IS System-ID of length \"ID Length\"\
    \ as\n                   defined in [ISO10589].\n      SID/Index/Label:  As defined\
    \ in Section 2.1.1.1.\n   Multiple LAN-Adj-SID sub-TLVs MAY be encoded.\n   Note\
    \ that this sub-TLV MUST NOT appear in TLV 141.\n   In case TLV-22, TLV-23, TLV-222,\
    \ or TLV-223 (reporting the adjacency\n   to the DIS) can't contain the whole\
    \ set of LAN-Adj-SID sub-TLVs,\n   multiple advertisements of the adjacency to\
    \ the DIS MUST be used, and\n   all advertisements MUST have the same metric.\n\
    \   Each router within the level, by receiving the DIS PN LSP as well as\n   the\
    \ non-PN LSP of each router in the LAN, is capable of\n   reconstructing the LAN\
    \ topology as well as the set of Adj-SIDs each\n   router uses for each of its\
    \ neighbors.\n"
- title: 2.3.  SID/Label Sub-TLV
  contents:
  - "2.3.  SID/Label Sub-TLV\n   The SID/Label sub-TLV may be present in the following\
    \ TLVs/sub-TLVs\n   defined in this document:\n      SR-Capabilities sub-TLV (Section\
    \ 3.1)\n      SR Local Block sub-TLV (Section 3.3)\n      SID/Label Binding TLV\
    \ (Section 2.4)\n      Multi-Topology SID/Label Binding TLV (Section 2.5)\n  \
    \ Note that the codepoint used in all of the above cases is the SID/\n   Label\
    \ sub-TLV codepoint specified in the new \"sub-TLVs for TLV 149\n   and 150\"\
    \ registry created by this document.\n   The SID/Label sub-TLV contains a SID\
    \ or an MPLS label.  The SID/Label\n   sub-TLV has the following format:\n   \
    \ 0                   1                   2                   3\n    0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   |   Type        |\
    \     Length    |\n   |                          SID/Label (variable)        \
    \         |\n   where:\n      Type:       1\n      Length:     3 or 4\n      SID/Label:\
    \  If the length is set to 3, then the 20 rightmost bits\n                  represent\
    \ an MPLS label.  If the length is set to 4,\n                  then the value\
    \ is a 32-bit index.\n"
- title: 2.4.  SID/Label Binding TLV
  contents:
  - "2.4.  SID/Label Binding TLV\n   The SID/Label Binding TLV MAY be originated by\
    \ any router in an IS-IS\n   domain.  There are multiple uses of the SID/Label\
    \ Binding TLV.\n   The SID/Label Binding TLV may be used to advertise prefixes\
    \ to SID/\n   Label mappings.  This functionality is called the Segment Routing\n\
    \   Mapping Server (SRMS).  The behavior of the SRMS is defined in\n   [RFC8661].\n\
    \   The SID/Label Binding TLV may also be used to advertise a Mirror SID\n   indicating\
    \ the ability of a node to process traffic originally\n   destined to another\
    \ IGP node.  This behavior is defined in [RFC8402].\n   The SID/Label Binding\
    \ TLV has the following format:\n      0                   1                 \
    \  2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1\n     |      Type     |     Length    |     Flags     |  \
    \   RESERVED  |\n     |            Range              | Prefix Length |     Prefix\
    \    |\n     //               Prefix (continued, variable)                  //\n\
    \     |                    Sub-TLVs (variable)                        |\n   where:\n\
    \      Type:       149\n      Length:     Variable\n      Flags:      1 octet\n\
    \      RESERVED:   1 octet (SHOULD be transmitted as 0 and MUST be\n         \
    \         ignored on receipt)\n      Range:      2 octets\n      Prefix Length:\
    \  1 octet\n      Prefix:     0-16 octets\n      sub-TLVs, where each sub-TLV\
    \ consists of a sequence of:\n      -  1 octet of sub-TLV type\n      -  1 octet\
    \ of length of the value field of the sub-TLV\n      -  0-243 octets of value\n"
- title: 2.4.1.  Flags
  contents:
  - "2.4.1.  Flags\n   Flags: 1-octet field of the following flags:\n    0 1 2 3 4\
    \ 5 6 7\n   +-+-+-+-+-+-+-+-+\n   |F|M|S|D|A|     |\n   +-+-+-+-+-+-+-+-+\n  \
    \ where:\n      F-Flag:  Address-Family Flag.  If unset, then the prefix carries\n\
    \               an IPv4 prefix.  If set, then the prefix carries an IPv6\n   \
    \            prefix.\n      M-Flag:  Mirror Context Flag.  Set if the advertised\
    \ SID\n               corresponds to a mirrored context.  The use of a mirrored\n\
    \               context is described in [RFC8402].\n      S-Flag:  If set, the\
    \ SID/Label Binding TLV SHOULD be flooded\n               across the entire routing\
    \ domain.  If the S-Flag is not\n               set, the SID/Label Binding TLV\
    \ MUST NOT be leaked between\n               levels.  This bit MUST NOT be altered\
    \ during the TLV\n               leaking.\n      D-Flag:  When the SID/Label Binding\
    \ TLV is leaked from Level-2 to\n               Level-1, the D-Flag MUST be set.\
    \  Otherwise, this flag\n               MUST be clear.  SID/Label Binding TLVs\
    \ with the D-Flag\n               set MUST NOT be leaked from Level-1 to Level-2.\
    \  This is\n               to prevent TLV looping across levels.\n      A-Flag:\
    \  Attached Flag.  The originator of the SID/Label Binding\n               TLV\
    \ MAY set the A bit in order to signal that the\n               prefixes and SIDs\
    \ advertised in the SID/Label Binding TLV\n               are directly connected\
    \ to their originators.  The\n               mechanisms through which the originator\
    \ of the SID/Label\n               Binding TLV can figure out if a prefix is attached\
    \ or not\n               are outside the scope of this document (e.g., through\n\
    \               explicit configuration).  If the Binding TLV is leaked to\n  \
    \             other areas/levels, the A-Flag MUST be cleared.\n      An implementation\
    \ may decide not to honor the S-Flag in order to\n      not leak Binding TLVs\
    \ between levels (for policy reasons).\n      Other bits:  MUST be zero when originated\
    \ and ignored when\n         received.\n"
- title: 2.4.2.  Range
  contents:
  - "2.4.2.  Range\n   The 'Range' field provides the ability to specify a range of\n\
    \   addresses and their associated Prefix-SIDs.  This advertisement\n   supports\
    \ the SRMS functionality.  It is essentially a compression\n   scheme to distribute\
    \ a continuous prefix and their continuous,\n   corresponding SID/Label Block.\
    \  If a single SID is advertised, then\n   the Range field MUST be set to one.\
    \  For range advertisements > 1,\n   the Range field MUST be set to the number\
    \ of addresses that need to\n   be mapped into a Prefix-SID.  In either case,\
    \ the prefix is the first\n   address to which a SID is to be assigned.\n"
- title: 2.4.3.  Prefix Length, Prefix
  contents:
  - "2.4.3.  Prefix Length, Prefix\n   The 'Prefix' represents the Forwarding Equivalence\
    \ Class at the tail\n   end of the advertised path.  The 'Prefix' does not need\
    \ to correspond\n   to a routable prefix of the originating node.\n   The 'Prefix\
    \ Length' field contains the length of the prefix in bits.\n   Only the most significant\
    \ octets of the prefix are encoded (i.e., 1\n   octet for prefix length 1 up to\
    \ 8, 2 octets for prefix length 9 to up\n   16, 3 octets for prefix length 17\
    \ up to 24, 4 octets for prefix\n   length 25 up to 32, ...., and 16 octets for\
    \ prefix length 113 up to\n   128).\n"
- title: 2.4.4.  Mapping Server Prefix-SID
  contents:
  - "2.4.4.  Mapping Server Prefix-SID\n   The Prefix-SID sub-TLV is defined in Section\
    \ 2.1 and contains the\n   SID/Index/Label value associated with the prefix and\
    \ range.  The\n   Prefix-SID sub-TLV MUST be present in the SID/Label Binding\
    \ TLV when\n   the M-Flag is clear.  The Prefix-SID sub-TLV MUST NOT be present\
    \ when\n   the M-Flag is set.\n"
- title: 2.4.4.1.  Prefix-SID Flags
  contents:
  - "2.4.4.1.  Prefix-SID Flags\n   The Prefix-SID Flags are defined in Section 2.1.\
    \  The Mapping Server\n   MAY advertise a mapping with the N-Flag set when the\
    \ prefix being\n   mapped is known in the link-state topology with a mask length\
    \ of 32\n   (IPv4) or 128 (IPv6) and when the prefix represents a node.  The\n\
    \   mechanisms through which the operator defines that a prefix\n   represents\
    \ a node are outside the scope of this document (typically\n   it will be through\
    \ configuration).\n   The other flags defined in Section 2.1 are not used by the\
    \ Mapping\n   Server and MUST be ignored at reception.\n"
- title: 2.4.4.2.  PHP Behavior when Using Mapping Server Advertisements
  contents:
  - "2.4.4.2.  PHP Behavior when Using Mapping Server Advertisements\n   As the Mapping\
    \ Server does not specify the originator of a prefix\n   advertisement, it is\
    \ not possible to determine PHP behavior solely\n   based on the Mapping Server\
    \ Advertisement.  However, if additional\n   information is available, PHP behavior\
    \ may safely be done.  The\n   required information consists of:\n   *  A prefix\
    \ reachability advertisement for the prefix has been\n      received, which includes\
    \ the Prefix Attribute Flags sub-TLV\n      [RFC7794].\n   *  X-Flag and R-Flag\
    \ are both set to 0 in the Prefix Attribute Flags\n      sub-TLV.\n   In the absence\
    \ of a Prefix Attribute Flags sub-TLV [RFC7794], the\n   A-Flag in the Binding\
    \ TLV indicates that the originator of a prefix\n   reachability advertisement\
    \ is directly connected to the prefix; thus,\n   PHP MUST be done by the neighbors\
    \ of the router originating the\n   prefix reachability advertisement.  Note that\
    \ the A-Flag is only\n   valid in the original area in which the Binding TLV is\
    \ advertised.\n"
- title: 2.4.4.3.  Prefix-SID Algorithm
  contents:
  - "2.4.4.3.  Prefix-SID Algorithm\n   The Algorithm field contains the identifier\
    \ of the algorithm\n   associated with the SIDs for the prefix(es) in the range.\
    \  Use of the\n   Algorithm field is described in Section 2.1.\n"
- title: 2.4.5.  SID/Label Sub-TLV
  contents:
  - "2.4.5.  SID/Label Sub-TLV\n   The SID/Label sub-TLV (Type: 1) contains the SID/Label\
    \ value as\n   defined in Section 2.3.  It MUST be present in the SID/Label Binding\n\
    \   TLV when the M-Flag is set in the Flags field of the parent TLV.\n"
- title: 2.4.6.  Example Encodings
  contents:
  - "2.4.6.  Example Encodings\n   Example 1: If the following IPv4 router addresses\
    \ (loopback\n   addresses) need to be mapped into the corresponding Prefix-SID\n\
    \   indexes, then:\n      Router-A: 192.0.2.1/32, Prefix-SID: Index 1\n      Router-B:\
    \ 192.0.2.2/32, Prefix-SID: Index 2\n      Router-C: 192.0.2.3/32, Prefix-SID:\
    \ Index 3\n      Router-D: 192.0.2.4/32, Prefix-SID: Index 4\n      0        \
    \           1                   2                   3\n      0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     |      Type     |     Length\
    \    |0|0|0|0|0|     |     RESERVED  |\n     |            Range = 4          |\
    \        32     |      192      |\n     |        0      |         2     |    \
    \    1      |Prefix-SID Type|\n     | Sub-TLV Length|     Flags     |   Algorithm\
    \   |               |\n   Example 2: If the following IPv4 prefixes need to be\
    \ mapped into the\n   corresponding Prefix-SID indexes, then:\n      10.1.1/24,\
    \ Prefix-SID: Index 51\n      10.1.2/24, Prefix-SID: Index 52\n      10.1.3/24,\
    \ Prefix-SID: Index 53\n      10.1.4/24, Prefix-SID: Index 54\n      10.1.5/24,\
    \ Prefix-SID: Index 55\n      10.1.6/24, Prefix-SID: Index 56\n      10.1.7/24,\
    \ Prefix-SID: Index 57\n      0                   1                   2      \
    \             3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1\n     |      Type     |     Length    |0|0|0|0|0|     |     RESERVED\
    \  |\n     |            Range = 7          |        24     |      10       |\n\
    \     |        1      |         1     |Prefix-SID Type| Sub-TLV Length|\n    \
    \ |    Flags      | Algorithm     |                               |\n   Example\
    \ 3: If the following IPv6 prefixes need to be mapped into the\n   corresponding\
    \ Prefix-SID indexes, then:\n      2001:db8:1/48, Prefix-SID: Index 151\n    \
    \  2001:db8:2/48, Prefix-SID: Index 152\n      2001:db8:3/48, Prefix-SID: Index\
    \ 153\n      2001:db8:4/48, Prefix-SID: Index 154\n      0                   1\
    \                   2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     |      Type     |     Length    |1|0|0|0|0|\
    \     |     RESERVED  |\n     |            Range = 4          |        48    \
    \ |     0x20      |\n     |       0x01    |       0x0d    |       0xb8    |  \
    \   0x00      |\n     |    0x01       |Prefix-SID Type| Sub-TLV Length|  Flags\
    \        |\n     | Algorithm     |                 0                         \
    \    |\n     |       151     |\n     +-+-+-+-+-+-+-+-+\n   It is not expected\
    \ that a network operator will be able to keep fully\n   continuous Prefix/SID/Index\
    \ mappings.  In order to support\n   noncontinuous mapping ranges, an implementation\
    \ MAY generate several\n   instances of Binding TLVs.\n   For example, if a router\
    \ wants to advertise the following ranges:\n      Range 16:   { 192.0.2.1-15,\
    \ Index 1-15 }\n      Range 6:    { 192.0.2.22-27, Index 22-27 }\n      Range\
    \ 41:   { 192.0.2.44-84, Index 80-120 }\n   a router would need to advertise three\
    \ instances of the Binding TLV.\n"
- title: 2.5.  Multi-Topology SID/Label Binding TLV
  contents:
  - "2.5.  Multi-Topology SID/Label Binding TLV\n   The Multi-Topology SID/Label Binding\
    \ TLV allows the support of Multi-\n   Topology IS-IS (M-ISIS) as defined in [RFC5120].\
    \  The Multi-Topology\n   SID/Label Binding TLV has the same format as the SID/Label\
    \ Binding\n   TLV defined in Section 2.4 with the difference consisting of a Multi-\n\
    \   topology Identifier (MT ID) as defined here below:\n      0              \
    \     1                   2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     |      Type     |     Length \
    \   |             MT ID             |\n     |     Flags     |     RESERVED  |\
    \            Range              |\n     | Prefix Length |            Prefix (variable)\
    \                 //\n     |                    Sub-TLVs (variable)          \
    \              |\n   where:\n      Type:    150\n      Length:  Variable\n   \
    \   MT ID is the Multi-topology Identifier defined as:\n         0           \
    \        1\n         0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n        | RESVD |      \
    \   MT ID         |\n         RESVD:   Reserved bits.  MUST be reset on transmission\
    \ and\n                  ignored on receive.\n         MT ID:   A 12-bit field\
    \ containing the non-zero ID of the\n                  topology being announced.\
    \  The TLV MUST be ignored if\n                  the ID is zero.  This is to ensure\
    \ the consistent view\n                  of the standard unicast topology.\n \
    \     The other fields and sub-TLVs are defined in Section 2.4.\n"
- title: 3.  Router Capabilities
  contents:
  - "3.  Router Capabilities\n   This section defines sub-TLVs that are inserted into\
    \ the IS-IS Router\n   Capability that is defined in [RFC7981].\n"
- title: 3.1.  SR-Capabilities Sub-TLV
  contents:
  - "3.1.  SR-Capabilities Sub-TLV\n   Segment Routing requires each router to advertise\
    \ its SR data plane\n   capability and the range of MPLS label values it uses\
    \ for Segment\n   Routing in the case where global SIDs are allocated (i.e., global\n\
    \   indexes).  Data plane capabilities and label ranges are advertised\n   using\
    \ the newly defined SR-Capabilities sub-TLV.\n   The Router Capability TLV specifies\
    \ flags that control its\n   advertisement.  The SR-Capabilities sub-TLV MUST\
    \ be propagated\n   throughout the level and MUST NOT be advertised across level\n\
    \   boundaries.  Therefore, Router Capability TLV distribution flags are\n   set\
    \ accordingly, i.e., the S-Flag in the Router Capability TLV\n   [RFC7981] MUST\
    \ be unset.\n   The SR-Capabilities sub-TLV has the following format:\n    0 \
    \                  1                   2                   3\n    0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   |   Type        |  \
    \   Length    |    Flags      |\n   |                     Range              \
    \       |\n   //                SID/Label Sub-TLV (variable)                 //\n\
    \      Type:    2\n      Length:  Variable\n      Flags:   1 octet of flags. \
    \ The following are defined:\n                   0 1 2 3 4 5 6 7\n           \
    \       |I|V|           |\n      where:\n         I-Flag:  MPLS IPv4 Flag.  If\
    \ set, then the router is capable of\n                  processing SR-MPLS-encapsulated\
    \ IPv4 packets on all\n                  interfaces.\n         V-Flag:  MPLS IPv6\
    \ Flag.  If set, then the router is capable of\n                  processing SR-MPLS-encapsulated\
    \ IPv6 packets on all\n                  interfaces.\n      One or more Segment\
    \ Routing Global Block (SRGB) Descriptor\n      entries, each of which have the\
    \ following format:\n         Range:   3 octets\n         SID/Label sub-TLV: \
    \ MPLS label as defined in Section 2.3\n   The SID/Label sub-TLV contains the\
    \ first value of the SRGB while the\n   range contains the number of SRGB elements.\
    \  The range value MUST be\n   higher than 0.\n   The SR-Capabilities sub-TLV\
    \ MAY be advertised in an LSP of any\n   number, but a router MUST NOT advertise\
    \ more than one SR-Capabilities\n   sub-TLV.  A router receiving multiple SR-Capabilities\
    \ sub-TLVs from\n   the same originator SHOULD select the first advertisement\
    \ in the\n   lowest-numbered LSP.\n   When multiple SRGB Descriptors are advertised,\
    \ the entries define an\n   ordered set of ranges on which a SID index is to be\
    \ applied.  For\n   this reason, changing the order in which the descriptors are\n\
    \   advertised will have a disruptive effect on forwarding.\n   When a router\
    \ adds a new SRGB Descriptor to an existing SR-\n   Capabilities sub-TLV, the\
    \ new descriptor SHOULD add the newly\n   configured block at the end of the sub-TLV\
    \ and SHOULD NOT change the\n   order of previously advertised blocks.  Changing\
    \ the order of the\n   advertised descriptors will create label churn in the FIB\
    \ and black\n   hole / misdirect some traffic during the IGP convergence.  In\n\
    \   particular, if a range that is not the last is extended, it's\n   preferable\
    \ to add a new range rather than extending the previously\n   advertised range.\n\
    \   The originating router MUST ensure the order is unchanged after a\n   graceful\
    \ restart (using checkpointing, non-volatile storage, or any\n   other mechanism).\n\
    \   The originating router MUST NOT advertise overlapping ranges.\n   When a router\
    \ receives multiple overlapping ranges, it MUST conform\n   to the procedures\
    \ defined in [RFC8660].\n   Here follows an example of the advertisement of multiple\
    \ ranges:\n         The originating router advertises the following ranges:\n\
    \         SR-Cap: range: 100, SID value: 100\n         SR-Cap: range: 100, SID\
    \ value: 1000\n         SR-Cap: range: 100, SID value: 500\n      The receiving\
    \ routers concatenate the ranges in the received order\n      and build the SRGB\
    \ as follows:\n      SRGB = [100, 199]\n             [1000, 1099]\n          \
    \   [500, 599]\n      The indexes span multiple ranges:\n         index 0   means\
    \ label 100\n         ...\n         index 99  means label 199\n         index\
    \ 100 means label 1000\n         index 199 means label 1099\n         ...\n  \
    \       index 200 means label 500\n         ...\n"
- title: 3.2.  SR-Algorithm Sub-TLV
  contents:
  - "3.2.  SR-Algorithm Sub-TLV\n   The router may use various algorithms when calculating\
    \ reachability\n   to other nodes or to prefixes attached to these nodes.  Examples\
    \ of\n   these algorithms are metric-based SPF, various sorts of Constrained\n\
    \   SPF, etc.  The SR-Algorithm sub-TLV allows the router to advertise\n   the\
    \ algorithms that the router is currently using.  Algorithm values\n   are defined\
    \ in the \"IGP Algorithm Type\" registry defined in\n   [RFC8665].  The following\
    \ values have been defined:\n      0:  SPF algorithm based on link metric.  This\
    \ is the well-known\n         shortest path algorithm as computed by the IS-IS\
    \ Decision\n         Process.  Consistent with the deployed practice for link-state\n\
    \         protocols, algorithm 0 permits any node to overwrite the SPF\n     \
    \    path with a different path based on local policy.\n      1:  Strict SPF algorithm\
    \ based on link metric.  The algorithm is\n         identical to algorithm 0,\
    \ but algorithm 1 requires that all\n         nodes along the path will honor\
    \ the SPF routing decision.\n         Local policy MUST NOT alter the forwarding\
    \ decision computed by\n         algorithm 1 at the node claiming to support algorithm\
    \ 1.\n   The Router Capability TLV specifies flags that control its\n   advertisement.\
    \  The SR-Algorithm MUST be propagated throughout the\n   level and MUST NOT be\
    \ advertised across level boundaries.  Therefore,\n   Router Capability TLV distribution\
    \ flags are set accordingly, i.e.,\n   the S-Flag MUST be unset.\n   The SR-Algorithm\
    \ sub-TLV is optional.  It MUST NOT be advertised more\n   than once at a given\
    \ level.  A router receiving multiple SR-Algorithm\n   sub-TLVs from the same\
    \ originator SHOULD select the first\n   advertisement in the lowest-numbered\
    \ LSP.\n   When the originating router does not advertise the SR-Algorithm sub-\n\
    \   TLV, it implies that algorithm 0 is the only algorithm supported by\n   the\
    \ routers that support the extensions defined in this document.\n   When the originating\
    \ router does advertise the SR-Algorithm sub-TLV,\n   then algorithm 0 MUST be\
    \ present while non-zero algorithms MAY be\n   present.\n   The SR-Algorithm sub-TLV\
    \ has the following format:\n     0                   1                   2  \
    \                 3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1\n    |   Type        |     Length    |\n    | Algorithm 1   |  Algorithm\
    \ 2  | Algorithm ... |  Algorithm n  |\n   where:\n      Type:       19\n    \
    \  Length:     Variable\n      Algorithm:  1 octet of algorithm\n"
- title: 3.3.  SR Local Block Sub-TLV
  contents:
  - "3.3.  SR Local Block Sub-TLV\n   The SR Local Block (SRLB) sub-TLV contains the\
    \ range of labels the\n   node has reserved for Local SIDs.  Local SIDs are used,\
    \ e.g., for\n   Adj-SIDs, and may also be allocated by components other than the\
    \ IS-\n   IS protocol.  As an example, an application or a controller may\n  \
    \ instruct the router to allocate a specific Local SID.  Therefore, in\n   order\
    \ for such applications or controllers to know what Local SIDs\n   are available\
    \ in the router, it is required that the router\n   advertises its SRLB.\n   The\
    \ SRLB sub-TLV is used for this purpose and has following format:\n    0     \
    \              1                   2                   3\n    0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   |   Type        |     Length\
    \    |    Flags      |\n   |                     Range                     |\n\
    \   //                SID/Label Sub-TLV (variable)                 //\n      Type:\
    \    22\n      Length:  Variable\n      Flags:   1 octet of flags.  None are defined\
    \ at this stage.\n      One or more SRLB Descriptor entries, each of which have\
    \ the\n      following format:\n         Range:   3 octets\n         SID/Label\
    \ sub-TLV:  MPLS label as defined in Section 2.3\n   The SID/Label sub-TLV contains\
    \ the first value of the SRLB while the\n   range contains the number of SRLB\
    \ elements.  The range value MUST be\n   higher than 0.\n   The SRLB sub-TLV MAY\
    \ be advertised in an LSP of any number, but a\n   router MUST NOT advertise more\
    \ than one SRLB sub-TLV.  A router\n   receiving multiple SRLB sub-TLVs, from\
    \ the same originator, SHOULD\n   select the first advertisement in the lowest-numbered\
    \ LSP.\n   The originating router MUST NOT advertise overlapping ranges.\n   When\
    \ a router receives multiple overlapping ranges, it MUST conform\n   to the procedures\
    \ defined in [RFC8660].\n   It is important to note that each time a SID from\
    \ the SRLB is\n   allocated, it should also be reported to all components (e.g.,\n\
    \   controller or applications) in order for these components to have an\n   up-to-date\
    \ view of the current SRLB allocation and to avoid collision\n   between allocation\
    \ instructions.\n   Within the context of IS-IS, the reporting of Local SIDs is\
    \ done\n   through IS-IS sub-TLVs such as the Adj-SID.  However, the reporting\n\
    \   of allocated Local SIDs may also be done through other means and\n   protocols\
    \ that are outside the scope of this document.\n   A router advertising the SRLB\
    \ sub-TLV may also have other label\n   ranges, outside the SRLB, for its local\
    \ allocation purposes that are\n   NOT advertised in the SRLB.  For example, it\
    \ is possible that an Adj-\n   SID is allocated using a local label not part of\
    \ the SRLB.\n"
- title: 3.4.  SRMS Preference Sub-TLV
  contents:
  - "3.4.  SRMS Preference Sub-TLV\n   The SRMS Preference sub-TLV is used in order\
    \ to associate a\n   preference with SRMS advertisements from a particular source.\n\
    \   The SRMS Preference sub-TLV has the following format:\n    0             \
    \      1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   |   Type        |    Length    \
    \ | Preference    |\n      Type:        24\n      Length:      1\n      Preference:\
    \  1 octet and unsigned 8-bit SRMS preference.\n   The SRMS Preference sub-TLV\
    \ MAY be advertised in an LSP of any\n   number, but a router MUST NOT advertise\
    \ more than one SRMS Preference\n   sub-TLV.  A router receiving multiple SRMS\
    \ Preference sub-TLVs, from\n   the same originator, SHOULD select the first advertisement\
    \ in the\n   lowest-numbered LSP.\n   The use of the SRMS preference during the\
    \ SID selection process is\n   described in [RFC8661].\n"
- title: 4.  IANA Considerations
  contents:
  - "4.  IANA Considerations\n   Per this document, IANA has allocated the following\
    \ TLVs and sub-\n   TLVs.\n"
- title: 4.1.  Sub-TLVs for Types 22, 23, 25, 141, 222, and 223
  contents:
  - "4.1.  Sub-TLVs for Types 22, 23, 25, 141, 222, and 223\n   This document makes\
    \ the following registrations in the \"Sub-TLVs for\n   TLV 22, 23, 25, 141, 222,\
    \ and 223\" registry.\n   | Type | Description        | 22 | 23 | 25 | 141 | 222\
    \ | 223 |\n   |  31  | Adjacency Segment  | y  | y  | n  |  y  |  y  |  y  |\n\
    \   |      | Identifier         |    |    |    |     |     |     |\n   |  32 \
    \ | LAN Adjacency      | y  | y  | n  |  y  |  y  |  y  |\n   |      | Segment\
    \ Identifier |    |    |    |     |     |     |\n                            \
    \  Table 1\n"
- title: 4.2.  Sub-TLVs for Types 135, 235, 236, and 237
  contents:
  - "4.2.  Sub-TLVs for Types 135, 235, 236, and 237\n   This document makes the following\
    \ registrations in the \"Sub-TLVs for\n   TLV 135, 235, 236, and 237\" registry.\n\
    \   | Type | Description               | 135 | 235 | 236 | 237 |\n   |  3   |\
    \ Prefix Segment Identifier |  y  |  y  |  y  |  y  |\n                      \
    \       Table 2\n"
- title: 4.3.  Sub-TLVs for Type 242
  contents:
  - "4.3.  Sub-TLVs for Type 242\n   This document makes the following registrations\
    \ in the \"Sub-TLVs for\n   TLV 242\" registry.\n   | Type | Description     \
    \                   |\n   |  2   | Segment Routing Capability         |\n   |\
    \  19  | Segment Routing Algorithm          |\n   |  22  | Segment Routing Local\
    \ Block (SRLB) |\n   |  24  | Segment Routing Mapping Server     |\n   |     \
    \ | Preference (SRMS Preference)       |\n                      Table 3\n"
- title: 4.4.  New TLV Codepoint and Sub-TLV Registry
  contents:
  - "4.4.  New TLV Codepoint and Sub-TLV Registry\n   This document registers the\
    \ following TLV:\n   | Value | Name                       | IIH | LSP | SNP |\
    \ Purge |\n   |  149  | Segment Identifier / Label |  n  |  y  |  n  |   n   |\n\
    \   |       | Binding                    |     |     |     |       |\n   |  150\
    \  | Multi-Topology Segment     |  n  |  y  |  n  |   n   |\n   |       | Identifier\
    \ / Label Binding |     |     |     |       |\n                              \
    \ Table 4\n   This document creates the following sub-TLV Registry:\n   Name:\
    \  Sub-TLVs for TLVs 149 and 150\n   Registration Procedure:  Expert Review [RFC8126]\n\
    \   |  Type |        Description        |\n   |   0   | Reserved             \
    \     |\n   |   1   | SID/Label                 |\n   |   2   | Unassigned   \
    \             |\n   |   3   | Prefix Segment Identifier |\n   | 4-255 | Unassigned\
    \                |\n                  Table 5\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   With the use of the extensions defined in this\
    \ document, IS-IS\n   carries information that will be used to program the MPLS\
    \ data plane\n   [RFC3031].  In general, the same type of attacks that can be\
    \ carried\n   out on the IP/IPv6 control plane can be carried out on the MPLS\n\
    \   control plane, resulting in traffic being misrouted in the respective\n  \
    \ data planes.  However, the latter may be more difficult to detect and\n   isolate.\n\
    \   Existing security extensions as described in [RFC5304] and [RFC5310]\n   apply\
    \ to these Segment Routing extensions.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [ISO10589] International Organization for Standardization,\n\
    \              \"Information technology -- Telecommunications and\n          \
    \    information exchange between systems -- Intermediate\n              system\
    \ to Intermediate system intra-domain routeing\n              information exchange\
    \ protocol for use in conjunction with\n              the protocol for providing\
    \ the connectionless-mode network\n              service (ISO 8473)\", ISO/IEC\
    \ 10589:2002, Second Edition,\n              November 2002.\n   [RFC2119]  Bradner,\
    \ S., \"Key words for use in RFCs to Indicate\n              Requirement Levels\"\
    , BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n       \
    \       <https://www.rfc-editor.org/info/rfc2119>.\n   [RFC3031]  Rosen, E., Viswanathan,\
    \ A., and R. Callon, \"Multiprotocol\n              Label Switching Architecture\"\
    , RFC 3031,\n              DOI 10.17487/RFC3031, January 2001,\n             \
    \ <https://www.rfc-editor.org/info/rfc3031>.\n   [RFC5120]  Przygienda, T., Shen,\
    \ N., and N. Sheth, \"M-ISIS: Multi\n              Topology (MT) Routing in Intermediate\
    \ System to\n              Intermediate Systems (IS-ISs)\", RFC 5120,\n      \
    \        DOI 10.17487/RFC5120, February 2008,\n              <https://www.rfc-editor.org/info/rfc5120>.\n\
    \   [RFC5304]  Li, T. and R. Atkinson, \"IS-IS Cryptographic\n              Authentication\"\
    , RFC 5304, DOI 10.17487/RFC5304, October\n              2008, <https://www.rfc-editor.org/info/rfc5304>.\n\
    \   [RFC5310]  Bhatia, M., Manral, V., Li, T., Atkinson, R., White, R.,\n    \
    \          and M. Fanto, \"IS-IS Generic Cryptographic\n              Authentication\"\
    , RFC 5310, DOI 10.17487/RFC5310, February\n              2009, <https://www.rfc-editor.org/info/rfc5310>.\n\
    \   [RFC7794]  Ginsberg, L., Ed., Decraene, B., Previdi, S., Xu, X., and\n   \
    \           U. Chunduri, \"IS-IS Prefix Attributes for Extended IPv4\n       \
    \       and IPv6 Reachability\", RFC 7794, DOI 10.17487/RFC7794,\n           \
    \   March 2016, <https://www.rfc-editor.org/info/rfc7794>.\n   [RFC7981]  Ginsberg,\
    \ L., Previdi, S., and M. Chen, \"IS-IS Extensions\n              for Advertising\
    \ Router Information\", RFC 7981,\n              DOI 10.17487/RFC7981, October\
    \ 2016,\n              <https://www.rfc-editor.org/info/rfc7981>.\n   [RFC8174]\
    \  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119\
    \ Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,\
    \ <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8402]  Filsfils, C., Ed.,\
    \ Previdi, S., Ed., Ginsberg, L.,\n              Decraene, B., Litkowski, S.,\
    \ and R. Shakir, \"Segment\n              Routing Architecture\", RFC 8402, DOI\
    \ 10.17487/RFC8402,\n              July 2018, <https://www.rfc-editor.org/info/rfc8402>.\n\
    \   [RFC8660]  Bashandy, A., Ed., Filsfils, C., Ed., Previdi, S.,\n          \
    \    Decraene, B., Litkowski, S., and R. Shakir, \"Segment\n              Routing\
    \ with the MPLS Data Plane\", RFC 8660,\n              DOI 10.17487/RFC8660, December\
    \ 2019,\n              <https://www.rfc-editor.org/info/rfc8660>.\n   [RFC8661]\
    \  Bashandy, A., Ed., Filsfils, C., Ed., Previdi, S.,\n              Decraene,\
    \ B., and S. Litkowski, \"Segment Routing MPLS\n              Interworking with\
    \ LDP\", RFC 8661, DOI 10.17487/RFC8661,\n              December 2019, <https://www.rfc-editor.org/info/rfc8661>.\n\
    \   [RFC8665]  Psenak, P., Ed., Previdi, S., Ed., Filsfils, C., Gredler,\n   \
    \           H., Shakir, R., Henderickx, W., and J. Tantsura, \"OSPF\n        \
    \      Extensions for Segment Routing\", RFC 8665,\n              DOI 10.17487/RFC8665,\
    \ December 2019,\n              <https://www.rfc-editor.org/info/rfc8665>.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [RFC5305]  Li, T. and H. Smit, \"IS-IS Extensions\
    \ for Traffic\n              Engineering\", RFC 5305, DOI 10.17487/RFC5305, October\n\
    \              2008, <https://www.rfc-editor.org/info/rfc5305>.\n   [RFC5308]\
    \  Hopps, C., \"Routing IPv6 with IS-IS\", RFC 5308,\n              DOI 10.17487/RFC5308,\
    \ October 2008,\n              <https://www.rfc-editor.org/info/rfc5308>.\n  \
    \ [RFC5311]  McPherson, D., Ed., Ginsberg, L., Previdi, S., and M.\n         \
    \     Shand, \"Simplified Extension of Link State PDU (LSP) Space\n          \
    \    for IS-IS\", RFC 5311, DOI 10.17487/RFC5311, February 2009,\n           \
    \   <https://www.rfc-editor.org/info/rfc5311>.\n   [RFC5316]  Chen, M., Zhang,\
    \ R., and X. Duan, \"ISIS Extensions in\n              Support of Inter-Autonomous\
    \ System (AS) MPLS and GMPLS\n              Traffic Engineering\", RFC 5316, DOI\
    \ 10.17487/RFC5316,\n              December 2008, <https://www.rfc-editor.org/info/rfc5316>.\n\
    \   [RFC7855]  Previdi, S., Ed., Filsfils, C., Ed., Decraene, B.,\n          \
    \    Litkowski, S., Horneffer, M., and R. Shakir, \"Source\n              Packet\
    \ Routing in Networking (SPRING) Problem Statement\n              and Requirements\"\
    , RFC 7855, DOI 10.17487/RFC7855, May\n              2016, <https://www.rfc-editor.org/info/rfc7855>.\n\
    \   [RFC8126]  Cotton, M., Leiba, B., and T. Narten, \"Guidelines for\n      \
    \        Writing an IANA Considerations Section in RFCs\", BCP 26,\n         \
    \     RFC 8126, DOI 10.17487/RFC8126, June 2017,\n              <https://www.rfc-editor.org/info/rfc8126>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   We would like to thank Dave Ward, Dan Frost, Stewart Bryant,\
    \ Pierre\n   Francois, and Jesper Skrivers for their contribution to the content\n\
    \   of this document.\n"
- title: Contributors
  contents:
  - "Contributors\n   The following people gave a substantial contribution to the\
    \ content\n   of this document and should be considered as coauthors:\n   Stephane\
    \ Litkowski\n   Orange\n   France\n   Email: stephane.litkowski@orange.com\n \
    \  Jeff Tantsura\n   Apstra, Inc.\n   Email: jefftant@gmail.com\n   Peter Psenak\n\
    \   Cisco Systems Inc.\n   United States of America\n   Email: ppsenak@cisco.com\n\
    \   Martin Horneffer\n   Deutsche Telekom\n   Germany\n   Email: Martin.Horneffer@telekom.de\n\
    \   Wim Henderickx\n   Nokia\n   Belgium\n   Email: wim.henderickx@nokia.com\n\
    \   Edward Crabbe\n   Oracle\n   United States of America\n   Email: edward.crabbe@oracle.com\n\
    \   Rob Shakir\n   Google\n   United Kingdom\n   Email: robjs@google.com\n   Igor\
    \ Milojevic\n   Individual\n   Serbia\n   Email: milojevicigor@gmail.com\n   Saku\
    \ Ytti\n   TDC\n   Finland\n   Email: saku@ytti.fi\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Stefano Previdi (editor)\n   Huawei Technologies\n   Italy\n\
    \   Email: stefano@previdi.net\n   Les Ginsberg (editor)\n   Cisco Systems, Inc.\n\
    \   United States of America\n   Email: ginsberg@cisco.com\n   Clarence Filsfils\n\
    \   Cisco Systems, Inc.\n   Brussels\n   Belgium\n   Email: cfilsfil@cisco.com\n\
    \   Ahmed Bashandy\n   Arrcus\n   Email: abashandy.ietf@gmail.com\n   Hannes Gredler\n\
    \   RtBrick Inc.\n   Email: hannes@rtbrick.com\n   Bruno Decraene\n   Orange\n"
