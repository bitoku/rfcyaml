- title: __initial_text__
  contents:
  - '                           SPKI Requirements

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   The IETF Simple Public Key Infrastructure [SPKI] Working Group is\n\
    \   tasked with producing a certificate structure and operating procedure\n  \
    \ to meet the needs of the Internet community for trust management in\n   as easy,\
    \ simple and extensible a way as possible.\n   The SPKI Working Group first established\
    \ a list of things one might\n   want to do with certificates (attached at the\
    \ end of this document),\n   and then summarized that list of desires into requirements.\
    \  This\n   document presents that summary of requirements.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   Charter of the SPKI working group................................2\n\
    \   Background.......................................................2\n   General\
    \ Requirements.............................................3\n   Validity and\
    \ CRLs................................................4\n   Implementation of\
    \ Certificates...................................4\n   List of Certificate Uses.........................................5\n\
    \   Open Questions..................................................11\n   References......................................................12\n\
    \   Security Considerations.........................................12\n   Author's\
    \ Address................................................13\n   Full Copyright\
    \ Statement........................................14\n"
- title: Charter of the SPKI working group
  contents:
  - "Charter of the SPKI working group\n   Many Internet protocols and applications\
    \ which use the Internet\n   employ public key technology for security purposes\
    \ and require a\n   public key infrastructure to manage public keys.\n   The task\
    \ of the working group will be to develop Internet standards\n   for an IETF sponsored\
    \ public key certificate format, associated\n   signature and other formats, and\
    \ key acquisition protocols.  The key\n   certificate format and associated protocols\
    \ are to be simple to\n   understand, implement, and use. For purposes of the\
    \ working group,\n   the resulting formats and protocols are to be known as the\
    \ Simple\n   Public Key Infrastructure, or SPKI.\n   The SPKI is intended to provide\
    \ mechanisms to support security in a\n   wide range of Internet applications,\
    \ including IPSEC protocols,\n   encrypted electronic mail and WWW documents,\
    \ payment protocols, and\n   any other application which will require the use\
    \ of public key\n   certificates and the ability to access them. It is intended\
    \ that the\n   Simple Public Key Infrastructure will support a range of trust\n\
    \   models.\n"
- title: Background
  contents:
  - "Background\n   The term certificate traces back to the MIT bachelor's thesis\
    \ of\n   Loren M. Kohnfelder [KOHN].  Kohnfelder, in turn, was responding to a\n\
    \   suggestion by Diffie and Hellman in their seminal paper [DH].  Diffie\n  \
    \ and Hellman noted that with public key cryptography, one no longer\n   needs\
    \ a secure channel over which to transmit secret keys between\n   communicants.\
    \  Instead, they suggested, one can publish a modified\n   telephone book -- one\
    \ with public keys in place of telephone numbers.\n   One could then look up his\
    \ or her desired communication partner in\n   the directory, find that person's\
    \ public key and open a secure\n   channel to that person.  Kohnfelder took that\
    \ suggestion and noted\n   that an on-line service has the disadvantage of being\
    \ a performance\n   bottleneck.  To replace it, he proposed creation of digitally\
    \ signed\n   directory entries which he called certificates.  In the time since\n\
    \   1978, the term certificate has frequently been assumed to mean a\n   binding\
    \ between name and key.\n   The SPKI team directly addressed the issue of <name,key>\
    \ bindings and\n   realized that such certificates are of extremely limited use\
    \ for\n   trust management.  A keyholder's name is one attribute of the\n   keyholder,\
    \ but as can be seen in the list of needs in this document,\n   a person's name\
    \ is rarely of security interest.  A user of a\n   certificate needs to know whether\
    \ a given keyholder has been granted\n   some specific authorization.\n"
- title: General Requirements
  contents:
  - "General Requirements\n   We define the term KEYHOLDER of a public key to refer\
    \ to the person\n   or other entity that controls the corresponding private key.\n\
    \   The main purpose of an SPKI certificate is to authorize some action,\n   give\
    \ permission, grant a capability, etc. to or for a keyholder.\n   The keyholder\
    \ is most directly identified by the public key itself,\n   although for convenience\
    \ or other purposes some indirection (delayed\n   binding) may be employed.  That\
    \ indirection can be via a collision-\n   free hash of the public key or via a\
    \ name, later to be resolved into\n   a key.\n   The definition of attributes\
    \ or authorizations in a certificate is up\n   to the author of code which uses\
    \ the certificate.  The creation of\n   new authorizations should not require\
    \ interaction with any other\n   person or organization but rather be under the\
    \ total control of the\n   author of the code using the certificate.\n   Because\
    \ SPKI certificates might carry information that the keyholder\n   might not want\
    \ to publish, we assume that certificates will be\n   distributed directly by\
    \ the keyholder to the verifier.  If the\n   keyholder wishes to use a global\
    \ repository, such as LDAP, the global\n   PGP key server or the DNS database,\
    \ that is up to the keyholder and\n   not for the SPKI WG to specify.\n   Because\
    \ SPKI certificates will carry information that, taken together\n   over all certificates,\
    \ might constitute a dossier and therefore a\n   privacy violation, each SPKI\
    \ certificate should carry the minimum\n   information necessary to get a job\
    \ done.  The SPKI certificate is\n   then to be like a single key rather than\
    \ a key ring or a single\n   credit card rather than a whole wallet.  The keyholder\
    \ should be able\n   to release a minimum of information in order to prove his\
    \ or her\n   permission to act.\n   It is necessary for at least some certificates\
    \ to be anonymous.\n   Because one use of SPKI certificates is in secret balloting\
    \ and\n   similar applications, an SPKI certificate must be able to assign an\n\
    \   attribute to a blinded signature key.\n   One attribute of a keyholder is\
    \ a name.  There are names the\n   keyholder prefers to be called and there are\
    \ names by which the\n   keyholder is known to various other keyholders.  An SPKI\
    \ certificate\n   must be able to bind a key to such names.  The SDSI work of\
    \ Rivest\n   and Lampson has done an especially good job of defining and using\n\
    \   local name spaces, therefore if possible SPKI should support the SDSI\n  \
    \ name construct.  [Note: SPKI and SDSI have merged.]\n"
- title: Validity and CRLs
  contents:
  - "Validity and CRLs\n   An SPKI certificate, like any other, should be able to\
    \ carry a\n   validity period: dates within which it is valid.  It may also be\n\
    \   necessary to have on-line refinement of validity.  This is frequently\n  \
    \ achieved via a Certificate Revocation List (CRL) in previous\n   certificate\
    \ designs.\n   A minimal CRL contains a list of revoked certificates, identified\n\
    \   uniquely, a sequence number and a signature.  Its method of\n   transmission\
    \ is not specified.  If it encounters some certificate\n   that it lists, then\
    \ it annihilates that certificate.  If it\n   encounters a previous CRL, as indicated\
    \ by sequence number, then it\n   annihilates that previous CRL.  Such a CRL leads\
    \ to non-deterministic\n   program behavior.  Therefore, we take as a requirement\
    \ that if SPKI\n   uses CRLs, then the certificate that uses it must explicitly\
    \ tell the\n   verifier where to find the CRL, the CRL must carry explicit validity\n\
    \   dates and the dates of a sequence of CRLs must not overlap.  Under\n   this\
    \ set of requirements, behavior of certificate validation is\n   deterministic\
    \ (aside from the question of clock skew).\n   A CRL is a negative statement.\
    \  It is the digital equivalent of the\n   little paper books of bad checks or\
    \ bad credit cards that were\n   distributed to cashiers in the 1970's and before.\
    \  These have been\n   replaced in the retail world by positive statements --\
    \ on-line\n   validation of a single check, ATM card or credit card.\n   SPKI\
    \ should support both positive and negative on-line validations.\n   Any CRL or\
    \ revalidation instrument must have its own lifetime.  A\n   lifetime of 0 is\
    \ not possible because of communication delays and\n   clock skews, although one\
    \ can consider an instrument whose lifetime\n   is \"one use\" and which is delivered\
    \ only as part of a\n   challenge/response protocol.\n"
- title: Implementation of Certificates
  contents:
  - "Implementation of Certificates\n   The authorization certificates that are envisioned\
    \ for SPKI (and\n   needed to meet the demands of the list given at the end of\
    \ this\n   document) should be generated by any keyholder empowered to grant or\n\
    \   delegate the authorization in question.  The code to generate\n   certificates\
    \ should be written by many different developers,\n   frequently persons acting\
    \ alone, operating out of garages or dorm\n   rooms.  This leads to a number of\
    \ constraints on the structure and\n   encoding of certificates.  In addition,\
    \ SPKI certificates should be\n   usable in very constrained environments, such\
    \ as smart cards or small\n   embedded systems.  The code to process them and\
    \ the memory to store\n   them should both be as small as possible.\n   An SPKI\
    \ certificate should be as simple as possible.  There should be\n   a bare minimum\
    \ of fields necessary to get the job done and there\n   should be an absolute\
    \ minimum of optional fields.  In particular, the\n   structure should be specific\
    \ enough that the creator of a certificate\n   is constrained by the structure\
    \ definition, not by complaints (or\n   error messages) from the reader of a certificate.\n\
    \   An SPKI certificate should be described in as simple a method as\n   possible,\
    \ relating directly to the kind of structures a C or PASCAL\n   programmer would\
    \ normally write.\n   No library code should be required for the packing or parsing\
    \ of SPKI\n   certificates.  In particular, ASN.1 is not to be used.\n   A certificate\
    \ should be signed exactly as it is transmitted.  There\n   should be no reformatting\
    \ called for in the process of checking a\n   certificate's signature (although\
    \ one might canonicalize white space\n   during certificate input, for example,\
    \ if the format is text).\n   For efficiency, if possible, an SPKI certificate\
    \ should be encoded in\n   an LR(0) grammar.  That is, neither packing nor parsing\
    \ of the\n   structure should require a scan of the data.  Data should be read\n\
    \   into the kind of structure a programmer would want to use without\n   touching\
    \ the incoming bytes more than once.\n   For efficiency, if possible, an SPKI\
    \ certificate should be packed and\n   parsed without any recursion.\n"
- title: List of Certificate Uses
  contents:
  - "List of Certificate Uses\n   The list below is a brainstorming list, accumulated\
    \ on the SPKI\n   mailing list, of uses of such certificates.\n      -  I need\
    \ a certificate to give me permission to write electronic\n         checks.\n\
    \      -  My bank would need a certificate, proving to others that it is\n   \
    \      a bank capable of cashing electronic checks and permitted to\n        \
    \ give permission to people to write electronic checks.\n      -  My bank would\
    \ issue a certificate signing the key of a master\n         bank certifier --\
    \ perhaps NACHA -- so that I could follow a\n         certificate chain from a\
    \ key I know (my bank's) to the key of\n         any other bank in the US and,\
    \ similarly, to any other bank in\n         the world.\n      -  I might generate\
    \ a certificate (a \"reputation voucher\") for a\n         friend to introduce\
    \ him to another friend -- in which\n         certificate I could testify to my\
    \ friend's political opinion\n         (e.g., libertarian cypherpunk) or physical\
    \ characteristics or\n         anything else of interest.\n      -  I might have\
    \ a certificate giving my security clearance, signed\n         by a governmental\
    \ issuing authority.\n      -  I want a certificate for some software I have downloaded\
    \ and am\n         considering running on my computer -- to make sure it hasn't\n\
    \         changed and that some reputable company or person stands behind\n  \
    \       it.\n      -  I need certificates to bind names to public keys:\n    \
    \     -  [traditional certificate] binding a key to a name, implying\n       \
    \     \"all the attributes of the real person having this name are\n         \
    \   transferred to this key by this certificate\".  This requires\n          \
    \  unique identification of a person (which is difficult in\n            non-digital\
    \ space, as it is) and someone trustworthy binding\n            that unique name\
    \ to the key in question.  In this model, a\n            key starts out naked\
    \ and acquires attributes, permissions\n            and authority from the person\
    \ bound to it.\n         -  [direct certificate] binding a name to a key, implying\
    \ \"I\n            (the person who is able to use the associated private key to\n\
    \            make this signature) declare that I go by the name of\n         \
    \   XXXXXXX.\"  The unique identification of the key is automatic\n          \
    \  -- from the key itself or a cryptographic hash of the key.\n            The\
    \ binding is done by the key itself -- in a self-signed\n            certificate.\
    \  In this model, a key is loaded with\n            attributes, permissions and\
    \ authority directly by other\n            certificates, not indirectly through\
    \ some person's name, and\n            this certificate declares only a name or\
    \ nickname by which\n            the key's owner likes to be addressed.\n    \
    \     -  [personal binding] binding a key to a nickname.  This kind\n        \
    \    of certificate is signed by me, singing someone else's key\n            and\
    \ binding it to a nickname by which I know that person.\n            It is for\
    \ my use only -- never given out -- and is a signed\n            certificate to\
    \ prevent tampering with my own private\n            directory of keys.  It says\
    \ nothing about how I certified\n            the binding to my own satisfaction\
    \ between the key and my\n            friend.\n      -  I might be doing genealogy\
    \ and be collecting what amounts to\n         3x5 cards with facts to be linked\
    \ together.  Some of these\n         links would be from one content to another\
    \ reference [e.g.,\n         indexing and cross-referencing].  Others might be\
    \ links to the\n         researcher who collected the fact.  By rights, the fact\
    \ should\n         be signed by that researcher.  Viewing only the signature on\n\
    \         the fact and the link to the researcher, this electronic 3x5\n     \
    \    card becomes a certificate.\n      -  I want to sign a contract to buy a\
    \ house.  What kind of\n         certificate do I need?\n      -  I have found\
    \ someone on the net and she sounds really nice.\n         Things are leading\
    \ up to cybersex.  How do I make sure she's\n         not really some 80-year-old\
    \ man in a nursing home?\n      -  I have met someone on the net and would like\
    \ a picture of her\n         and her height, weight and other measurements from\
    \ a\n         trustworthy source.\n      -  Can I have a digital marriage license?\n\
    \      -  Can I have a digital divorce decree?\n      -  ..a digital Voter Registration\
    \ Card?\n      -  There are a number of cards one carries in a typical wallet\n\
    \         which could become certificates attached to a public key:\n      - \
    \ health insurance card\n      -  prescription drug card\n      -  driver's license\
    \ (for permission to drive)\n      -  driver's license (for permission to buy\
    \ alcohol)\n      -  supermarket discount card\n      -  supermarket check-cashing\
    \ card [I know -- anachronism]\n      -  Blockbuster Video rental card\n     \
    \ -  ATM card\n      -  Credit card\n      -  membership card in the ACLU, NRA,\
    \ Republican party, Operation\n         Rescue, NARAL, ACM, IEEE, ICAR....\n \
    \     -  Red Cross blood donor card\n      -  Starbuck's Coffee buy-10-get-1-free\
    \ card\n      -  DC Metro fare card\n      -  Phone calling card\n      -  Alumni\
    \ Association card\n      -  REI Membership card\n      -  Car insurance card\n\
    \      -  claim check for a suitcase\n      -  claim check for a pawned radio\n\
    \      -  authorization for followup visits to a doctor, after surgery\n     \
    \ -  Better Business Bureau [BBB] style reputation certificates\n         [testimonies\
    \ from satisfied customers]\n      -  BBB-style certificate that no complaints\
    \ exist against a\n         business or doctor or dentist, etc.\n      -  LDS\
    \ Temple Recommend\n      -  Stock certificate\n      -  Stock option\n      -\
    \  Car title\n      -  deed to land\n      -  proof of ownership of electronic\
    \ equipment with an ID number\n      -  time card certificate [activating a digital\
    \ time clock]\n      -  proof of degree earned [PhD, LLD, MD, ...]\n      -  permission\
    \ to write digitally signed prescriptions for drugs\n      -  permission to spend\
    \ up to $X of a company's money\n      -  permission to issue nuclear launch codes\n\
    \      -  I'm a sysadmin, I want to carry a certificate, signed by SAGE,\n   \
    \      that says I'm good at the things sysadmins are good at.\n      -  I'm that\
    \ same sysadmin, I want an ephemeral certificate that\n         grants me root\
    \ access to certain systems for the day, or the\n         week, or...\n      \
    \   Certain applications *will* want some form of auditing, but the\n        \
    \ audit identity should be in the domain of the particular\n         application...\
    \  For instance an \"is a system administrator of\n         this host\" certificate\
    \ would probably want to include an audit\n         identity, so you can figure\
    \ out which of your multiple admins\n         screwed something up.\n      - \
    \ I'm an amateur radio operator.  I want a signed certificate\n         that says\
    \ I'm allowed to engage in amateur radio, issued by the\n         DOC.  [I currently\
    \ have a paper version of one].  This would be\n         useful in enforcing access\
    \ policies to the amateur spectrum;\n         and in tracking abuse of that same\
    \ spectrum.  Heck!  extend\n         this concept to all licensed spectrum users.\n\
    \      -  I'm the a purchasing agent for a large corporation.  I want to\n   \
    \      posses a certificate that tells our suppliers that I'm\n         authorized\
    \ to make purchases up to $15,000.  I don't want the\n         suppliers to know\
    \ my name, lest their sales people bug me too\n         much.  I don't want to\
    \ have to share a single \"Megacorp\n         Purchasing Department Certificate\"\
    \ with others doing the same\n         job [the private key would need to be shared--yuck!].\n\
    \      -  \"This signed-key should be considered equivalent to the\n         certifying-key\
    \ until this certificate expires for the following\n         purposes ...\"\n\
    \            [This is desirable when you wish to reduce the exposure of\n    \
    \        long-term keys.  One way to do this is to use smart cards,\n        \
    \    but those typically have slow processors and are connected\n            through\
    \ low-bandwidth links; however, if you only use the\n            smart card at\
    \ \"login\" time to certify a short-term key pair,\n            you get high performance\
    \ and low exposure of the long term\n            key.\n            I'll note here\
    \ that this flies in the face of attempts to\n            prevent delegation of\
    \ certain rights.  Maybe we need a\n            \"delegation-allowed\" bit --\
    \ but there's nothing to stop\n            someone who wishes to delegate against\
    \ the rules from also\n            loaning out their private key.].\n      - \
    \ \"I am the current legitimate owner of a particular chunk of\n         Internet\
    \ address space.\"\n            [I'd like to see IPSEC eventually become usable,\
    \ at least\n            for privacy, without need for prior arrangement between\n\
    \            sites, but I think there's a need for a \"I own this\n          \
    \  address\"/\"I own this address range\" certificate in order for\n         \
    \   IPSEC to coexist with existing ip-address-based firewalls.]\n      -  \"I\
    \ am the current legitimate owner of a this DNS name or\n         subtree.\"\n\
    \      -  \"I am the legitimate receiver of mail sent to this rfc822 email\n \
    \        address.  [this might need to be signed by a key which itself\n     \
    \    had been certified by the appropriate \"DNS name owner\"\n         certificate].\"\
    \n            [This is in case I know someone owns a particular e-mail\n     \
    \       address but I don't know their key.]\n      -  Encryption keys for E-mail\
    \ and file encryption\n      -  Authentication of people or other entities\n \
    \     -  Digital signatures (unforgeability)\n      -  Timestamping / notary services\n\
    \      -  Host authentication\n      -  Service authentication\n         Other\
    \ requirements:\n         -  Trust model must be a web (people want to choose\
    \ whom they\n            trust).  People must be able to choose whom they trust\
    \ or\n            consider reliable roots (maybe with varying reliabilities).\n\
    \         -  Some applications (e.g., notary services) require highly\n      \
    \      trusted keys; generation complexity is not an issue here.\n         - \
    \ Some applications (e.g., host authentication) require\n            extremely\
    \ light (or no) bureaucracy.  Even communication\n            with the central\
    \ administrator may be a problem.\n         -  Especially in lower-end applications\
    \ (e.g. host\n            authentication) the people generating the keys (e.g.,\n\
    \            administrators) will change, and you will no longer want\n      \
    \      them to be able to certify.  On the other hand, you will\n            usually\
    \ also not want all keys they have generated to\n            expire.  This may\
    \ imply a \"certification right expiration\"\n            certificate requirement,\
    \ probably to be implemented together\n            with notary services.\n   \
    \      -  Keys will need to be cached locally to avoid long delays\n         \
    \   fetching frequently used keys.  Cf. current name servers.\n            The\
    \ key infrastructure may in future get used almost as\n            often as the\
    \ name server.  The caching and performance\n            requirements are similar.\n\
    \         -  Reliable distribution of key revocations and other\n            certificates\
    \ (e.g., the ceasing of the right to make new\n            certificates).  May\
    \ involve goals like \"will have spread\n            everywhere in 24 hours\"\
    \ or something like that.  This\n            interacts with caching.\n"
- title: Open Questions
  contents:
  - "Open Questions\n   Given such certificates, there remain some questions, most\
    \ to do with\n   proofs of the opposite of what a certificate is designed to do.\n\
    \   These do not have answers provided by certificate definition or\n   issuing\
    \ alone.\n   -  Someone digitally signs a threatening e-mail message with my\n\
    \      private key and sends it to president@whitehouse.gov.  How do I\n     \
    \ prove that I didn't compose and send the message?  What kind of\n      certificate\
    \ characteristic might help me in this?\n         This is an issue of (non-)repudiation\
    \ and therefore a matter of\n         private key protection.  Although this is\
    \ of interest to the\n         user of certificates, certificate format, contents\
    \ or issuing\n         machinery can not ensure the protection of a user's private\
    \ key\n         or prove whether or not a private key has been stolen or\n   \
    \      misused.\n   -  Can certificates help do a title scan for purchase of a\
    \ house?\n         Certificates might be employed to carry information in a\n\
    \         tamper-proof way, but building the database necessary to record\n  \
    \       all house titles and all liens is a project not related to\n         certificate\
    \ structure.\n   -  Can a certificate be issued to guarantee that I am not already\n\
    \      married, so that I can then get a digital marriage license?\n         The\
    \ absence of attributes can be determined only if all\n         relevant records\
    \ are digitized and all parties have inescapable\n         IDs.  The former is\
    \ not likely to happen in our lifetimes and\n         the latter receives political\
    \ resistance.\n         A certificate can communicate the 'positive' attribute\
    \ \"not\n         already married\" or \"not registered as a voter in any other\n\
    \         district\".  That assumes that some organization is capable of\n   \
    \      determining that fact for a given keyholder.  The method of\n         determining\
    \ such a negative fact is not part of the certificate\n         definition.\n\
    \   -  The assumption in most certificates is that the proper user will\n    \
    \  protect his private key very well, to prevent anyone else from\n      accessing\
    \ his funds.  However, in some cases the certificate\n      itself might have\
    \ monetary value [permission to prescribe drugs,\n      permission to buy alcohol,\
    \ ...].  What is to prevent the holder of\n      such a certificate from loaning\
    \ out his private key?\n         This is a potential flaw in any system providing\
    \ authorization\n         and an interesting topic for study.  What prevents a\
    \ doctor or\n         dentist from selling prescriptions for controlled substances\
    \ to\n         drug abusers?\n"
- title: References
  contents:
  - "References\n   [DH]   Diffie and Hellman, \"New Directions in Cryptography\"\
    , IEEE\n          Transactions on Information Theory IT-22, 6 (Nov. 1976), 644-\n\
    \          654.\n   [KOHN] Loren Kohnfelder, \"Towards a Practical Public-key\n\
    \          Cryptosystem\", Bachelor's thesis, MIT, May, 1978.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are discussed throughout this memo.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Carl M. Ellison\n   Intel Corporation\n   2111 NE 25th Ave\
    \   M/S JF3-212\n   Hillsboro OR 97124-5961 USA\n   Phone: +1-503-264-2900\n \
    \  Fax:   +1-503-264-6225\n   EMail: carl.m.ellison@intel.com\n          cme@alum.mit.edu\n\
    \   Web:   http://www.pobox.com/~cme\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (1999).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
