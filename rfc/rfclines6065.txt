Abstract This memo defines a portion of the Management Information Base (MIB) for use with network management protocols.
It describes the use of information provided by Authentication, Authorization, and Accounting (AAA) services, such as the Remote Authentication Dial
In User Service (RADIUS), to dynamically update user to group mappings in the View based Access Control Model (VACM).
This memo specifies a way to dynamically provision selected View  based Access Control Model (VACM)
(MIB) objects, based on information received from an Authentication, Authorization, and Accounting (AAA) service, such as RADIUS [RFC2865] and [RFC5607].
It reduces the need for security administrators to manually update VACM configurations due to user churn, allowing a centralized AAA service to provide the information associating a given user with the access control policy (known as a "group" in VACM) governing that user's access to management information.
This memo requires no changes to the Abstract Service Interface for the Access Control Subsystem, and requires no changes to the Elements of Procedure for VACM.
It provides a MIB module that reflects the information provided by the AAA service, along with elements of procedure for maintaining that information and performing corresponding updates to VACM MIB data.
The reader is expected to be familiar with [RFC3415], [RFC5607], [RFC5608], and their supporting specifications.
The Internet Standard Management Framework
For a detailed overview of the documents that describe the current Internet Standard Management Framework, please refer to section 7 of RFC 3410 [RFC3410].
Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
MIB objects are generally accessed through the Simple Network Management Protocol (SNMP).
Objects in the MIB are defined using the mechanisms defined in the Structure of Management Information (SMI).
This memo specifies a MIB module that is compliant to the SMIv2, which is described in STD 58, RFC 2578 [RFC2578], STD 58
, RFC 2579 [RFC2579] and STD 58, RFC 2580
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119
Using AAA services with SNMP
There are two use cases for AAA support of management access via SNMP.
These are (a) service authorization and (b) access control authorization.
The former is discussed in detail in [RFC5608].
The latter is the subject of this memo.
The use case assumption here is that roles within an organization (which are represented in VACM as groups, which in turn name access control policies) change infrequently, while the users assigned to those roles change much more frequently.
This memo describes how the user to role
(group) mapping can be delegated to the RADIUS server, avoiding the need to re provision managed devices as users are added, deleted, or assigned new roles in an organization.
This memo assumes that the detailed access control policies are pre  configured in VACM, and does not attempt to address the question of how the policy associated with a given role is put in place.
The only additional information obtained from the AAA service is the mapping of the authenticated user's identifier to a specific role (or "group" in VACM terminology) in the access control policy.
Dynamic user authorization for MIB database access control, as defined herein, is limited to mapping the authenticated user to a group, which in turn is mapped to whatever access control policies are already in place in VACM.
The SNMP architecture [RFC3411] maintains strong modularity and separation of concerns, separating user identity (authentication) from user database access rights (authorization).
RADIUS, on the other hand, allows for no such separation of authorization from authentication.
Consequently, the approach here is to leverage existing RADIUS usage for identifying a principal, documented in [RFC5608], along with the RADIUS Management Policy Id Attribute [RFC5607].
A unique identifier is needed for each AAA authorized "session", corresponding to a communication channel, such as a transport session, for which a principal has been AAA authenticated and which is authorized to offer SNMP service.
How these identifiers are assigned is implementation dependent.
When a RADIUS Management  Policy Id Attribute (or equivalent) is bound to such a session and principal authentication, this binding provides sufficient information to compute dynamic updates to VACM.
How this information is communicated within an implementation is implementation dependent; this memo is only concerned with externally observable behavior.
The key concept here is that what we will informally call a "AAA binding" binds: 1.
an access control policy name
Some of the binding is done via other specifications.
A transport model, such as the Secure Shell Transport Model [RFC5592], provides a binding between 1 and 2 and 3, providing a securityName.
In turn, [RFC5607] provides a binding between (1 2 3) and 4.
This document extends that further, to create a binding between (1 2 3 4) and the local (VACM MIB) definition of the named policy, called a group in VACM.
Though this memo was motivated to support the use of specific Transport Models, such as the Secure Shell Transport Model [RFC5592], it MAY be used with other implementation environments satisfying these requirements:  use an AAA service for sign on service and data access authorization;  provide an indication of the start of a session for a particular authenticated principal in a particular role, based on information provided by the AAA service.
The principal will be identified using an SNMP securityName [RFC3411].
The role will be identified by the name of the corresponding VACM group.
provide an indication of the end of the need for being able to make access decisions for a particular authenticated principal, as at the end of a session, whether due to disconnection, termination due to timeout, or any other reason.
Likewise, although this memo specifically refers to RADIUS, it MAY be used with other AAA services satisfying these requirements:  the service provides information semantically equivalent to the RADIUS Management Policy Id Attribute [RFC5607], which corresponds to the name of a VACM group;  the service provides an authenticated principal identifier (e.g., the RADIUS User Name Attribute [RFC2865]) that can be transformed to an equivalent principal identifier in the form of a securityName [RFC3411].
Structure of the MIB Module 5.1.
This MIB module makes use of the SnmpAdminString [RFC3411] and SnmpSecurityModel [RFC3411] textual conventions.
This MIB module defines a single table, the vacmAaaSecurityToGroupTable.
This table is indexed by the integer assigned to each security model,
the protocol independent securityName corresponding to a principal, and the unique identifier of a session.
Relationship to Other MIB Modules
This MIB module has a close operational relationship with the SNMP
VIEW BASED ACM MIB (more commonly known as the "VACM MIB") from [RFC3415].
It also relies on IMPORTS from several other modules.
Relationship to the VACM MIB
Although the MIB module defined here has a close relationship with the VACM MIB's vacmSecurityToGroupTable, it in no way changes the elements of procedure for VACM, nor does it affect any other tables defined in VACM.
See the elements of procedure (below) for details of how the contents of the vacmSecurityToGroupTable are affected by this MIB module.
MIB modules Required for IMPORTS
This MIB module employs definitions from [RFC2578], [RFC2579], and [RFC3411].
Documents Required for REFERENCE Clauses
This MIB module contains REFERENCE clauses making reference to [RFC2865], [RFC3411], and [RFC5590].
The following elements of procedure are formulated in terms of two types of events: an indication of the establishment of a session, and an indication that one has ended.
These can result in the creation of entries in the vacmAaaSecurityToGroupTable, which can in turn trigger creation, update, or deletion of entries in the vacmSecurityToGroupTable.
There are various possible implementation dependent error cases not spelled out here, such as running out of memory.
By their nature, recovery in such cases will be implementation dependent.
Implementors are advised to consider fail safe strategies, e.g., prematurely terminating access in preference to erroneously perpetuating access.
These procedures assume that a transport model, such as [RFC5592], coordinates session establishment with AAA authentication and authorization.
They rely on the receipt by the AAA client of the RADIUS Management Policy Id [RFC5607]
Attribute (or its equivalent) from the RADIUS Access Accept message (or equivalent).
They also assume that the User Name [RFC2865] from the RADIUS Access Request message (or equivalent) corresponds to a securityName [RFC3411].
To ensure correct processing of SNMP PDUs, the handling of the indication of the establishment of a session in accordance with the elements of procedure below MUST be completed before the isAccessAllowed() Abstract Service Interface [RFC3415] is invoked for any SNMP PDUs from that session.
If a session termination indication occurs before all invocations of the isAccessAllowed() Abstract Service Interface [RFC3415] have completed for all SNMP PDUs from that session, those remaining invocations MAY result in denial of access.
Actions upon Session Establishment Indication
Required Information Four pieces of information are needed to process the session establishment indication:  the SnmpSecurityModel [RFC3411] needed as an index into the vacmSecurityToGroupTable;  the RADIUS User Name Attribute;  a session identifier, as a unique, definitive identifier of the session that the AAA authorization is tied to;
the RADIUS Management Policy I
All four of these pieces of information are REQUIRED.
In particular, if either the User Name or Management Policy Id is absent, invalid, or a zero length string, no further processing of the session establishment indication is undertaken.
As noted in Section 4.2, the above text refers specifically to RADIUS attributes.
Other AAA services can be substituted, but the requirements imposed on the User Name and the Management Policy Id
Attribute MUST be satisfied using the equivalent fields for those services.
Creation of Entries in vacmAaaSecurityToGroupTable
Whenever an indication arrives that a new session has been established, determine whether a corresponding entry exists in the vacmAaaSecurityToGroupTable.
If one does not, create a new row with the columns populated as follows:  vacmAaaSecurityModel   value of SnmpSecurityModel corresponding to the security model in use;  vacmAaaSecurityName
RADIUS User Name Attribute or equivalent, the securityName that will be used in invocations of the isAccessAllowed() Abstract Service Interface [RFC3415];  vacmAaaSessionID
session identifier, unique across all open sessions of all of this SNMP engine's transport models;  vacmAaaGroupName
Otherwise, if the row already exists, update the vacmAaaGroupName with the RADIUS Management Policy Id Attribute or equivalent supplied.
Creation of Entries in vacmSecurityToGroupTable
Whenever an entry is created in the vacmAaaSecurityToGroupTable, the vacmSecurityToGroupTable is examined to determine whether a corresponding entry exists there, using the value of vacmAaaSecurityModel for vacmSecurityModel, and the value of vacmAaaSecurityName for vacmSecurityName.
If no corresponding entry exists, create one using the vacmAaaGroupName of the newly created entry to fill in vacmGroupName, using a value of "volatile" for the row's StorageType, and a value of "active" for its RowStatus.
Whenever the value of an instance of vacmAaaGroupName is updated, if a corresponding entry exists in the vacmSecurityToGroupTable, and that entry's StorageType is "volatile" and its RowStatus is "active", update the value of vacmGroupName with the value from vacmAaaGroupName.
If a corresponding entry already exists in the vacmSecurityToGroupTable, and that row's StorageType is anything other than "volatile", or its RowStatus is anything other than "active", then that instance of vacmGroupName MUST NOT be modified.
The operational assumption here is that if the row's StorageType is "volatile", then this entry was probably dynamically created; an entry created by a security administrator would not normally be given a StorageType of "volatile".
If the value being provided by RADIUS (or another AAA service) is the same as what is already there, this is a no op.
If the value is different, the new information is understood as a more recent role (group) assignment for the user, which should supersede the one currently held there.
The structure of the vacmSecurityToGroupTable makes it impossible for a (vacmSecurityModel, vacmSecurityName) tuple to map to more than one group.
Actions upon Session Termination Indication
Whenever a RADIUS (or other AAA) authenticated session ends for any reason, an indication is provided.
This indication MUST provide means of determining the SnmpSecurityModel, and an identifier for the transport session tied to the AAA authorization.
The manner in which this occurs is implementation dependent.
Deletion of Entries from vacmAaaSecurityToGroupTable Entries in the vacmAaaSecurityToGroupTable MUST NOT persist across system reboots.
When a session has been terminated, the vacmAaaSecurityToGroupTable is searched for a corresponding entry.
A "matching" entry is any entry for which the SnmpSecurityModel and session ID match the information associated with the session termination indication.
Any matching entries are deleted.
It is possible that no entries will match; this is not an error, and no special processing is required in this case.
Deletion of Entries from vacmSecurityToGroupTable
Whenever the last remaining row bearing a particular (vacmAaaSecurityModel, vacmAaaSecurityName) pair is deleted from the vacmAaaSecurityToGroupTable, the vacmSecurityToGroupTable is examined for a corresponding row.
If one exists, and if its StorageType is "volatile" and its RowStatus is "active", that row MUST be deleted as well.
The mechanism to accomplish this task is implementation dependent.
Definitions SNMP VACM AAA MIB DEFINITIONS ::
CONF MODULE IDENTITY, OBJECT TYPE, mib 2, Unsigned32
"The management and local datastore information definitions for the AAA Enabled View based Access Control Model for SNMP.
IETF Trust and the persons identified as the document authors.
Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license info).
This version of this MIB module is part of RFC 6065; see the RFC itself for full legal notices."
"This table provides a listing of all currently active sessions for which a mapping of the combination of SnmpSecurityModel and securityName into the name of a VACM group has been provided by an AAA service.
The group name (in VACM) in turn identifies an access control policy to be used for the corresponding principals."
"RFC 3411, Section 3.2.2, defines securityName."
An entry in this table maps the combination of a SnmpSecurityModel and securityName into the name of a VACM group defining the access control policy that is to govern a particular session.
Each entry corresponds to a session.
Entries do not persist across reboots.
An entry is created whenever an indication occurs that a new session has been established that would not have the same index values as an existing entry.
When a session is torn down, disconnected, timed out (e.g., following the RADIUS Session Timeout Attribute), or otherwise terminated for any reason, the corresponding vacmAaaSecurityToGroupEntry is deleted.
"RFC 3411, Section 3.2.2, defines securityName.
The security model associated with the AAA binding represented by this entry.
This object cannot take the 'any' (0) value."
The securityName of the principal associated with the AAA binding represented by this entry.
In RADIUS environments, this corresponds to the User Name Attribute."
"RFC 3411, Section 3.2.2, defines securityName, and RFC 2865, Section 5.1, defines User Name."
This value MUST be unique among all currently open sessions of all of this SNMP engine's transport models.
The value has no particular significance other than to distinguish sessions.
Implementations in which tmSessionID has a compatible syntax and is unique across all transport models MAY use that value."
REFERENCE   "The Abstract Service Interface parameter tmSessionID is defined in RFC 5590, Section 5.2.4."
The name of the group to which this entry is to belong.
In RADIUS environments, this comes from the RADIUS Management Policy Id Attribute.
When the appropriate conditions are met, the value of this object is applied the vacmGroupName in the corresponding vacmSecurityToGroupEntry.
"The compliance statement for SNMP engines implementing the AAA Enabled View based Access Control Model for SNMP."
The algorithms in this memo make heuristic use of the StorageType of entries in the vacmSecurityToGroupTable to distinguish those provisioned by a security administrator (which would presumably not be configured as "volatile") from those dynamically generated.
In making this distinction, it assumes that those entries explicitly provisioned by a security administrator and given a non "volatile" status are not to be dynamically overridden.
Furthermore, it assumes that any active entries with "volatile" status can be treated as dynamic, and deleted or updated as needed.
Users of this memo need to be aware of this operational assumption, which, while reasonable, is not necessarily universally valid.
For example, this situation could also occur if the SNMP security administrator had mistakenly created these non volatile entries in error.
The design of VACM ensures that if an unknown policy (group name) is used in the vacmSecurityToGroupTable, no access is granted.
A consequence of this is that no matter what information is provided by the AAA server, no user can gain SNMP access rights not already granted to some group through the VACM configuration.
In order to ensure that the access control policy ultimately applied as a result of the mechanisms described here is indeed the intended policy for a given principal using a particular security model, care needs to be applied in the mapping of the authenticated user (principal) identity to the securityName used to make the access control decision.
Broadly speaking, there are two approaches to ensure consistency of identity:  Entries for the vacmSecurityToGroupTable corresponding to a given security model are created only through the operation of the procedures described in this memo.
A consequence of this would be that all such entries would have been created using the RADIUS User Name (or other AAA authenticated identity) and RADIUS Management Policy Id Attribute (or equivalent).
Administrative policy allows a matching pre configured entry to exist in the vacmSecurityToGroupTable, i.e., an entry with the corresponding vacmSecurityModel and with a vacmSecurityName matching the authenticated principal's RADIUS User Name.
In this case, administrative policy also needs to ensure consistency of identity between each authenticated principal's RADIUS User Name and the administratively configured vacmSecurityName in the vacmSecurityToGroupTable row entries for that particular security model.
In the latter case, inconsistent re use of the same name for different entities or individuals (principals) can cause the incorrect access control policy to be applied for the authenticated principal, depending on whether the policy that is configured using SNMP or the policy that is applied using the procedures of this memo is the intended policy.
This may result in greater or lesser access rights than the administrative policy intended.
Inadvertent misidentification in such cases may be undetectable by the SNMP engine or other software elements of the managed entity.
There are no management objects defined in this MIB module that have a MAX ACCESS clause of read write and/or read create.
So, if this MIB module is implemented correctly, then there is no risk that an intruder can alter or create any management objects of this MIB module via direct SNMP SET operations.
Some of the readable objects in this MIB module (including some objects with a MAX ACCESS of not accessible, whose values are exposed as a result of access to indexed objects) may be considered sensitive or vulnerable in some network environments.
It is thus important to control
even GET and/or NOTIFY access to these objects and possibly to even encrypt the values of these objects when sending them over the network via SNMP.
These are the tables and objects and their sensitivity/vulnerability:
vacmAaaSecurityToGroupTable the entire table is potentially sensitive, since walking the table will reveal user names, security models in use, session identifiers, and group names;
vacmAaaSecurityModel though not accessible, this is exposed as an index of vacmAaaGroupName;  vacmAaaSecurityName though not accessible, this is exposed as an index of vacmAaaGroupName;  vacmAaaSessionID though not accessible, this is exposed as an index of vacmAaaGroupName;
vacmAaaGroupName since this identifies a security policy and associates it with a particular user
, this is potentially sensitive.
SNMP versions prior to SNMPv3 did not include adequate security.
Even if the network itself is secure (for example by using IPsec), even then, there is no control as to who on the secure network is allowed to access and
the objects in this MIB module.
It is RECOMMENDED that implementers consider the security features as provided by the SNMPv3 framework (see [RFC3410], section 8), including full support for the SNMPv3 cryptographic mechanisms (for authentication and privacy).
Further, deployment of SNMP versions prior to SNMPv3 is NOT RECOMMENDED.
Instead, it is RECOMMENDED to deploy SNMPv3 and to enable cryptographic security.
It is then a customer/operator responsibility to ensure that the SNMP entity giving access to an instance of this MIB module is properly configured to give access to the objects only to those principals (users) that have legitimate rights to indeed GET or SET
The MIB module in this document uses the following IANA assigned OBJECT IDENTIFIER value recorded in the SMI Numbers registry:
The following participants from the ISMS working group contributed to the development of this document:  Andrew Donati  David Harrington  Jeffrey Hutzelman  Juergen Schoenwaelder
During the IESG review, additional comments were received from:  Adrian Farrel  Amanda Baber  Dan Romescanu  David Kessens  Francis Dupont  Glenn Keeni  Jari Arkko  Joel Jaeggli  Magnus Nystrom
Mike Heard  Robert Story  Russ Housley
