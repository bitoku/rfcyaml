Abstract This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in the Internet community.
This memo obsoletes RFC 1514, the "Host Resources MIB".
This memo extends that specification by clarifying changes based on implementation and deployment experience and documenting the Host Resources MIB in SMIv2 format while remaining semantically identical to the existing SMIv1 based MIB.
This memo defines a MIB for use with managing host systems.
The term "host" is construed to mean any computer that communicates with other similar computers attached to the internet and that is directly used by one or more human beings.
Although this MIB does not necessarily apply to devices whose primary function is communications services (e.g., terminal servers, routers, bridges, monitoring equipment), such relevance is not explicitly precluded.
This MIB instruments attributes common to all internet hosts including, for example, both personal computers and systems that run variants of Unix.
The SNMP Management Framework presently consists of five major components:   An overall architecture, described in RFC 2571
Mechanisms for describing and naming objects and events for the purpose of management.
The first version of this Structure of Management Information (SMI) is called SMIv1 and described in STD 16, RFC 1155
[RFC1155], STD 16, RFC 1212 [RFC1212] and RFC 1215 [RFC1215].
The second version, called SMIv2, is described in STD 58, RFC 2578 [RFC2578]
, RFC 2579 [RFC2579] and RFC 2580
Message protocols for transferring management information.
The first version of the SNMP message protocol is called SNMPv1 and described in STD 15, RFC 1157
A second version of the SNMP message protocol, which is not an Internet standards track protocol, is called SNMPv2c and described in RFC 1901
[RFC1901] and RFC 1906 [RFC1906].
The third version of the message protocol is called SNMPv3 and described in RFC 1906
[RFC1906], RFC 2572 [RFC2572] and RFC 2574
Protocol operations for accessing management information.
The first set of protocol operations and associated PDU formats is described in STD 15, RFC 1157 [RFC1157].
A second set of protocol operations and associated PDU formats is described in RFC 1905 [RFC1905].
A set of fundamental applications described in RFC 2573 [RFC2573] and the view based access control mechanism described in RFC 2575
A more detailed introduction to the current SNMP Management Framework can be found in RFC 2570 [RFC2570].
Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
Objects in the MIB are defined using the mechanisms defined in the SMI.
This memo specifies a MIB module that is compliant to the SMIv2.
A MIB conforming to the SMIv1 can be produced through the appropriate translations.
The resulting translated MIB must be semantically equivalent, except where objects or events are omitted because no translation is possible (use of Counter64).
Some machine readable information in SMIv2 will be converted into textual descriptions in SMIv1 during the translation process.
However, this loss of machine readable information is not considered to change the semantics of the MIB.
The Host Resources MIB defines a uniform set of objects useful for the management of host computers.
Host computers are independent of the operating system, network services, or any software application.
The Host Resources MIB defines objects which are common across many computer system architectures.
In addition, there are objects in the SNMPv2 MIB [RFC1907] and IF MIB [RFC2233] which also provide host management functionality.
Implementation of the System and Interfaces groups is mandatory for implementors of the Host Resources MIB.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED","MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].
This MIB contains type definitions for storage types, device types, and file system types for use as values for the hrStorageType, hrDeviceType, and hrFSType objects, respectively.
As new computing technologies are developed, new types need to be registered for these technologies.
The IANA (Internet Assigned Numbers Authority) is designated as the registration authority for new registrations beyond those published in this document.
The IANA will maintain the HOST  RESOURCES TYPES module as new registrations are added and publish new versions of this module.
Given the large number of such technologies and potential confusion in naming of these technologies (such as a technology known by two names or a name and an acronym), there is a real danger that more than one registration might be created for what is essentially the same technology.
In order to ensure that future type registrations are performed correctly, applications for new types will be reviewed by a Designated Expert appointed by the IESG.
Definitions HOST RESOURCES MIB DEFINITIONS ::
IMPORTS MODULE IDENTITY, OBJECT TYPE, mib 2, Integer32, Counter32, Gauge32,
TimeTicks  FROM SNMPv2 SMI TEXTUAL CONVENTION, DisplayString, TruthValue, DateAndTime, AutonomousType   FROM SNMPv2
MIB Working Group" CONTACT INFO "Steve Waldbusser Postal:
Inc. 1213 Innsbruck Dr. Sunnyvale, CA 94089
In addition, the Host Resources MIB mailing list is dedicated to discussion of this MIB.
To join the mailing list, send a request message to hostmib request@andrew.cmu.edu.
The mailing list address is hostmib@andrew.cmu.edu.
This MIB is for use in managing host systems.
The term `host' is construed to mean any computer that communicates with other similar computers attached to the internet and that is directly used by one or more human beings.
Although this MIB does not necessarily apply to devices whose primary function is communications services (e.g., terminal servers, routers, bridges, monitoring equipment), such relevance is not explicitly precluded.
This MIB instruments attributes common to all internet hosts including, for example, both personal computers and systems that run variants of Unix.
6 March 2000 DESCRIPTION "Clarifications and bug fixes based on implementation experience.
This revision was also reformatted in the SMIv2 format.
The revisions made were: New RFC document standards: Added Copyright notice, updated introduction to SNMP Framework, updated references section, added reference to RFC 2119, and added a meaningful Security Considerations section.
New IANA considerations section for registration of new types Conversion to new SMIv2 syntax for the following types and macros: Counter32, Integer32, Gauge32, MODULE IDENTITY, OBJECT TYPE, TEXTUAL CONVENTION, OBJECT IDENTITY, MODULE COMPLIANCE, OBJECT GROUP Used new Textual Conventions:
TruthValue, DateAndTime, AutonomousType, InterfaceIndexOrZero Fixed typo in hrPrinterStatus.
Added missing error bits to hrPrinterDetectedErrorState and clarified confusion resulting from suggested mappings to hrPrinterStatus.
Clarified that size of objects of type
InternationalDisplayString is number of octets, not number of encoded symbols.
Clarified the use of the following objects based on implementation experience:
hrSystemInitialLoadDevice, hrSystemInitialLoadParameters, hrMemorySize, hrStorageSize, hrStorageAllocationFailures, hrDeviceErrors, hrProcessorLoad, hrNetworkIfIndex, hrDiskStorageCapacity, hrSWRunStatus, hrSWRunPerfCPU, and hrSWInstalledDate.
Clarified implementation technique for hrSWInstalledTable.
Used new AUGMENTS clause for hrSWRunPerfTable.
The original version of this MIB, published as RFC1514."
TEXTUAL CONVENTION STATUS current DESCRIPTION "Storage size, expressed in units of 1024 bytes."
TEXTUAL CONVENTION STATUS current DESCRIPTION
"This textual convention is intended to identify the manufacturer, model, and version of a specific hardware or software product.
It is suggested that these OBJECT IDENTIFIERs are allocated such that all products from a particular manufacturer are registered under a subtree distinct to that manufacturer.
In addition, all versions of a product should be registered under a subtree distinct to that product.
With this strategy, a management station may uniquely determine the manufacturer and/or model of a product whose productID is unknown to the management station.
Objects of this type may be useful for inventory purposes or for automatically detecting incompatibilities or version mismatches between various hardware and software components on a system.
For example, the product ID for the ACME 4860
66MHz clock doubled processor might be: enterprises.acme.acmeProcessors.a4860DX2.MHz66 A software product might be registered as: enterprises.acme.acmeOperatingSystems.acmeDOS.six(6).one(1)
TEXTUAL CONVENTION STATUS current DESCRIPTION
"This data type is used to model textual information in some character set.
A network management station should use a local algorithm to determine which character set is in use and how it should be displayed.
Note that this character set may be encoded with more than one octet per symbol, but will most often be NVT ASCII.
When a size clause is specified for an object of this type, the size refers to the length in octets, not the number of symbols."
The Host Resources System Group hrSystemUptime OBJECT
The amount of time since this host was last initialized.
Note that this is different from sysUpTime
in the SNMPv2 MIB [RFC1907] because sysUpTime is the uptime of the network management portion of the system."
"The host's notion of the local date and time of day."
"The index of the hrDeviceEntry for the device from which this host is configured to load its initial operating system configuration (i.e., which operating system code and/or boot parameters).
Note that writing to this object just changes the configuration that will be used the next time the operating system is loaded and does not actually cause the reload to occur."
"This object contains the parameters (e.g. a pathname and parameter) supplied to the load device when requesting the initial operating system configuration from that device.
Note that writing to this object just changes the configuration that will be used the next time the operating system is loaded and does not actually cause the reload to occur."
"The number of user sessions for which this host is storing state information.
A session is a collection of processes requiring a single act of user authentication and possibly subject to collective job control."
"The maximum number of process contexts this system can support.
If there is no fixed maximum, the value should be zero.
On systems that have a fixed maximum, this object can help diagnose failures that occur when this maximum is reached."
These are defined in the HOST RESOURCES TYPES module.
SEQUENCE OF HrStorageEntry MAX ACCESS
current DESCRIPTION "The (conceptual) table of logical storage areas on the host.
An entry shall be placed in the storage table for each logical area of storage that is allocated and has fixed resource limits.
The amount of storage represented in an entity is the amount actually usable by the requesting entity, and excludes loss due to formatting or file system reference information.
These entries are associated with logical storage areas, as might be seen by an application, rather than physical storage entities which are typically seen by an operating system.
Storage such as tapes and floppies without file systems on them are typically not allocated in chunks by the operating system to requesting applications, and therefore shouldn't appear in this table.
Examples of valid storage for this table include disk partitions, file systems, ram (for some architectures this is further segmented into regular memory, extended memory, and so on), backing store for virtual memory (`swap space').
This table is intended to be a useful diagnostic for `out of memory' and `out of buffers' types of failures.
In addition, it can be a useful performance monitoring tool for tracking memory, disk, or buffer usage."
current DESCRIPTION "A (conceptual) entry for one logical storage area on the host.
The size, in bytes, of the data objects allocated from this pool.
If this entry is monitoring sectors, blocks, buffers, or packets, for example, this number will commonly be greater than one.
Otherwise this number will typically be one."
The size of the storage represented by this entry, in units of hrStorageAllocationUnits.
This object is writable to allow remote configuration of the size of the storage area in those cases where such an operation makes sense and is possible on the underlying system.
For example, the amount of main memory allocated to a buffer pool might be modified or the amount of disk space allocated to virtual memory might be modified."
"The number of requests for storage represented by this entry that could not be honored due to not enough storage.
It should be noted that as this object has a SYNTAX of Counter32, that it does not have a defined initial value.
However, it is recommended that this object be initialized to zero, even though management stations must not depend on such an initialization."
The hrDeviceTable contains common   information for any type of device.
In addition, some devices   have device specific tables for more detailed information.
More   such tables may be defined in the future for other device types.
Registration point for device types, for use with hrDeviceType.
These are defined in the HOST RESOURCES TYPES module.
MAX ACCESS not accessible STATUS
current DESCRIPTION "The (conceptual) table of devices contained by the host."
"A unique value for each device contained by the host.
The value for each device must remain constant at least from one re initialization of the agent to the next re initialization."
If this value is `hrDeviceProcessor { hrDeviceTypes 3 }' then an entry exists in the hrProcessorTable which corresponds to this device.
If this value is `hrDeviceDiskStorage
"A textual description of this device, including the device's manufacturer and revision, and optionally, its serial number."
The product ID for this device."
, warning(3), testing(4), down(5) }
The current operational state of the device described by this row of the table.
A value unknown(1) indicates that the current state of the device is unknown.
running(2) indicates that the device is up and running and that no unusual error conditions are known.
The warning(3) state indicates that agent has been informed of an unusual error condition by the operational software (e.g., a disk device driver) but that the device is still 'operational'.
An example would be a high number of soft errors on a disk.
A value of testing(4), indicates that the device is not available for use because it is in the testing state.
The state of down(5) is used only when the agent has been informed that the device is not available for any use."
{ hrDeviceEntry 5 } hrDeviceErrors OBJECT TYPE SYNTAX
"The number of errors detected on this device.
It should be noted that as this object has a SYNTAX of Counter32, that it does not have a defined initial value.
However, it is recommended that this object be initialized to zero, even though management stations must not depend on such an initialization."
current DESCRIPTION "The (conceptual) table of processors contained by the host.
Note that this table is potentially sparse: a (conceptual) entry exists only if the correspondent value of the hrDeviceType object is `hrDeviceProcessor'."
current DESCRIPTION "A (conceptual) entry for one processor contained by the host.
in the index represents the entry in the hrDeviceTable that corresponds to the hrProcessorEntry.
The average, over the last minute, of the percentage of time that this processor was not idle.
Implementations may approximate this one minute smoothing period if necessary."
current DESCRIPTION "The (conceptual) table of network devices contained by the host.
Note that this table is potentially sparse: a (conceptual) entry exists only if the correspondent value of the hrDeviceType object is `hrDeviceNetwork'."
in the index represents the entry in the hrDeviceTable that corresponds to the hrNetworkEntry.
"The value of ifIndex which corresponds to this network device.
If this device is not represented in the ifTable, then this value shall be zero."
{ hrNetworkEntry 1 } hrPrinterTable OBJECT
MAX ACCESS not accessible STATUS
current DESCRIPTION "The (conceptual) table of printers local to the host.
Note that this table is potentially sparse: a (conceptual) entry exists only if the correspondent value of the hrDeviceType object is `hrDevicePrinter'."
in the index represents the entry in the hrDeviceTable that corresponds to the hrPrinterEntry.
The current status of this printer device."
This object represents any error conditions detected by the printer.
The error conditions are encoded as bits in an octet string, with the following definitions:
14 Bits are numbered starting with the most significant bit of the first byte being bit 0, the least significant bit of the first byte being bit 7, the most significant bit of the second byte being bit 8, and so on.
A one bit encodes that the condition was detected, while a zero bit encodes that the condition was not detected.
This object is useful for alerting an operator to specific warning or error conditions that may occur, especially those requiring human intervention."
current DESCRIPTION "The (conceptual) table of long term storage devices contained by the host.
In particular, disk devices accessed remotely over a network are not included here.
Note that this table is potentially sparse: a (conceptual) entry exists only if the correspondent value of the hrDeviceType object is `hrDeviceDiskStorage'."
MAX ACCESS not accessible STATUS
current DESCRIPTION "A (conceptual) entry for one long term storage device contained by the host.
in the index represents the entry in the hrDeviceTable that corresponds to the hrDiskStorageEntry.
"An indication if this long term storage device is readable and writable or only readable.
This should reflect the media type, any write protect mechanism, and any device configuration that affects the entire device."
Once Read Many opticalDiskRW(7), ramDisk(8) }
"An indication of the type of media used in this long  term storage device."
"Denotes whether or not the disk media may be removed from the drive."
The total size for this long term storage device.
If the media is removable and is currently removed, this value should be zero."
current DESCRIPTION "The (conceptual) table of partitions for long term storage devices contained by the host.
In particular, partitions accessed remotely over a network are not included here."
in the index represents the entry in the hrDeviceTable that corresponds to the hrPartitionEntry.
"A unique value for each partition on this long term storage device.
The value for each long term storage device must remain constant at least from one re  initialization of the agent to the next re  initialization."
"A textual description of this partition."
A descriptor which uniquely represents this partition to the responsible operating system.
On some systems, this might take on a binary representation."
The size of this partition."
If no file system is mounted on this partition, then this value shall be zero.
Note that multiple partitions may point to one file system, denoting that that file system resides on those partitions.
Multiple file systems may not reside on one partition."
These are defined in the   HOST RESOURCES TYPES module.
MAX ACCESS not accessible STATUS
current DESCRIPTION "The (conceptual) table of file systems local to this host or remotely mounted from a file server.
File systems that are in only one user's environment on a multi user system will not be included in this table."
MAX ACCESS not accessible STATUS
current DESCRIPTION "A (conceptual) entry for one file system local to this host or remotely mounted from a file server.
File systems that are in only one user's environment on a multi user system will not be included in this table.
"A unique value for each file system local to this host.
The value for each file system must remain constant at least from one re initialization of the agent to the next re initialization."
The path name of the root of this file system."
"A description of the name and/or address of the server that this file system is mounted from.
This may also include parameters such as the mount point on the remote file system.
If this is not a remote file system, this string should have a length of zero."
{ hrFSEntry 3 } hrFSType OBJECT
"The value of this object identifies the type of this file system."
"An indication if this file system is logically configured by the operating system to be readable and writable or only readable.
This does not represent any local access control policy, except one that is applied to the file system as a whole."
"A flag indicating whether this file system is bootable."
The index of the hrStorageEntry that represents information about this file system.
If there is no such information available, then this value shall be zero.
The relevant storage entry will be useful in tracking the percent usage of this file system and diagnosing errors that may occur when it runs out of space."
"The last date at which this complete file system was copied to another storage device for backup.
This information is useful for ensuring that backups are being performed regularly.
If this information is not known, then this variable shall have the value corresponding to January 1, year 0000, 00:00:00.0, which is encoded as (hex)'00 00 01 01 00 00 00 00'."
The last date at which a portion of this file system was copied to another storage device for backup.
This information is useful for ensuring that backups are being performed regularly.
If this information is not known, then this variable shall have the value corresponding to January 1, year 0000, 00:00:00.0, which is encoded as (hex)'00 00 01 01 00 00 00 00'."
The hrSWRunTable contains an entry for each distinct piece of   software that is running or loaded into physical or virtual   memory in preparation for running.
This includes the host's   operating system, device drivers, and applications.
"The value of the hrSWRunIndex for the hrSWRunEntry that represents the primary operating system running on this host.
This object is useful for quickly and uniquely identifying that primary operating system."
current DESCRIPTION "The (conceptual) table of software running on the host."
current DESCRIPTION "A (conceptual) entry for one piece of software running on the host Note that because the installed software table only contains information for software stored locally on this host, not every piece of running software will be found in the installed software table.
This is true of software that was loaded and run from a non local source, such as a network mounted file system.
"A unique value for each piece of software running on the host.
Wherever possible, this should be the system's native, unique identification number."
"A textual description of this running piece of software, including the manufacturer, revision,  and the name by which it is commonly known.
If this software was installed locally, this should be the same string as used in the corresponding hrSWInstalledName."
The product ID of this running piece of software."
The status of this running piece of software.
Setting this value to invalid(4) shall cause this software to stop running and to be unloaded.
Sets to other values are not valid."
MAX ACCESS not accessible STATUS
current DESCRIPTION "The (conceptual) table of running software performance metrics."
MAX ACCESS not accessible STATUS
current DESCRIPTION "A (conceptual) entry containing software performance metrics.
"The number of centi seconds of the total system's CPU resources consumed by this process.
Note that on a multi processor system, this value may increment by more than one centi second in one centi second of real (wall clock) time."
"The total amount of real system memory allocated to this process."
The Host Resources Installed Software Group
The hrSWInstalledTable contains an entry for each piece   of software installed in long term storage (e.g. a disk   drive) locally on this host.
Note that this does not   include software loadable remotely from a network   server.
Different implementations may track software in varying   ways.
For example, while some implementations may track   executable files as distinct pieces of software, other   implementations may use other strategies such as keeping   track of software "packages" (e.g., related groups of files)   or keeping track of system or application "patches".
This table is useful for identifying and inventorying   software on a host and for diagnosing incompatibility   and version mismatch problems between various pieces   of hardware and software.
"The value of sysUpTime when an entry in the hrSWInstalledTable was last added, renamed, or deleted.
Because this table is likely to contain many entries, polling of this object allows a management station to determine when re downloading of the table might be useful."
"The value of sysUpTime when the hrSWInstalledTable was last completely updated.
Because caching of this data will be a popular implementation strategy, retrieval of this object allows a management station to obtain a guarantee that no data in this table is older than the indicated time."
MAX ACCESS not accessible STATUS
current DESCRIPTION "The (conceptual) table of software installed on this host."
MAX ACCESS not accessible STATUS
current DESCRIPTION "A (conceptual) entry for a piece of software installed on this host.
"A unique value for each piece of software installed on the host.
This value shall be in the range from 1 to the number of pieces of software installed on the host."
The product ID of this installed piece of software."
"The last modification date of this application as it would appear in a directory listing.
If this information is not known, then this variable shall have the value corresponding to January 1, year 0000, 00:00:00.0, which is encoded as (hex)'00 00 01 01 00 00 00 00'."
MODULE COMPLIANCE STATUS current DESCRIPTION
"The requirements for conformance to the Host Resources MIB." MODULE   this module MANDATORY GROUPS { hrSystemGroup, hrStorageGroup, hrDeviceGroup } OBJECT
hrSystemDate MIN ACCESS read only DESCRIPTION
"Write access is not required."
MIN ACCESS read only DESCRIPTION
"Write access is not required."
OBJECT hrSystemInitialLoadParameters MIN ACCESS read only DESCRIPTION
"Write access is not required."
OBJECT hrStorageSize MIN ACCESS read only DESCRIPTION
"Write access is not required."
OBJECT hrFSLastFullBackupDate MIN ACCESS read only DESCRIPTION
"Write access is not required."
MIN ACCESS read only DESCRIPTION
"Write access is not required."
GROUP hrSWRunGroup DESCRIPTION "The Running Software Group.
Implementation of this group is mandatory only when the hrSWRunPerfGroup is implemented."
OBJECT hrSWRunStatus MIN ACCESS read only DESCRIPTION
"Write access is not required."
GROUP hrSWRunPerfGroup DESCRIPTION "The Running Software Performance Group.
Implementation of this group is at the discretion of the implementor."
GROUP hrSWInstalledGroup DESCRIPTION "The Installed Software Group.
Implementation of this group is at the discretion of the implementor."
hrProcessorFrwID, hrProcessorLoad, hrNetworkIfIndex, hrPrinterStatus, hrPrinterDetectedErrorState, hrDiskStorageAccess, hrDiskStorageMedia, hrDiskStorageRemoveble, hrDiskStorageCapacity, hrPartitionIndex, hrPartitionLabel, hrPartitionID, hrPartitionSize, hrPartitionFSIndex, hrFSIndex, hrFSMountPoint, hrFSRemoteMountPoint, hrFSType,
hrFSAccess, hrFSBootable, hrFSStorageIndex, hrFSLastFullBackupDate, hrFSLastPartialBackupDate } STATUS current DESCRIPTION "The Host Resources Device Group."
"The Host Resources Installed Software Group."
Type Definitions HOST RESOURCES TYPES DEFINITIONS ::
Inc. 1213 Innsbruck Dr. Sunnyvale, CA 94089
650 318 1633 Email: waldbusser@ins.com
In addition, the Host Resources MIB mailing list is dedicated to discussion of this MIB.
To join the mailing list, send a request message to hostmib request@andrew.cmu.edu.
The mailing list address is hostmib@andrew.cmu.edu.
" DESCRIPTION "This MIB module registers type definitions for storage types, device types, and file system types.
After the initial revision, this module will be maintained by IANA." REVISION "200003060000Z
The original version of this module, published as RFC 2790."
{ hrStorage 1 } hrStorageOther OBJECT IDENTITY STATUS current DESCRIPTION
"The storage type identifier used when no other defined type is appropriate."
OBJECT IDENTITY STATUS current DESCRIPTION
The storage type identifier used for non removable rigid rotating magnetic storage devices."
OBJECT IDENTITY STATUS current DESCRIPTION
"The storage type identifier used for removable rigid rotating magnetic storage devices."
The storage type identifier used for non rigid rotating magnetic storage devices."
hrStorageCompactDisc OBJECT IDENTITY STATUS current DESCRIPTION
"The storage type identifier used for a file system that is stored in RAM."
hrStorageNetworkDisk OBJECT IDENTITY STATUS current DESCRIPTION
"The storage type identifier used for a networked file system."
hrDeviceOther OBJECT IDENTITY STATUS current DESCRIPTION
"The device type identifier used when no other defined type is appropriate."
OBJECT IDENTITY STATUS current DESCRIPTION
"The device type identifier used when the device type is unknown."
OBJECT IDENTITY STATUS current DESCRIPTION
"The device type identifier used for a network interface."
"The device type identifier used for a disk drive."
} hrDeviceVideo OBJECT IDENTITY STATUS current DESCRIPTION
"The device type identifier used for a video device."
"The device type identifier used for an audio device."
"The device type identifier used for a co processor."
"The device type identifier used for a modem."
{ hrDeviceTypes 14 } hrDeviceParallelPort
OBJECT IDENTITY STATUS current DESCRIPTION
"The device type identifier used for a parallel port."
hrDevicePointing OBJECT IDENTITY STATUS current DESCRIPTION
"The device type identifier used for a pointing device (e.g., a mouse)."
{ hrDeviceTypes 16 } hrDeviceSerialPort OBJECT IDENTITY STATUS current DESCRIPTION
"The device type identifier used for a serial port."
OBJECT IDENTITY STATUS current DESCRIPTION
"The device type identifier used for a clock device."
"The device type identifier used for a non volatile memory storage device."
{ hrDevice 9 } hrFSOther OBJECT IDENTITY STATUS  current DESCRIPTION "The file system type identifier used when no other defined type is appropriate."
OBJECT IDENTITY STATUS  current DESCRIPTION
"The file system type identifier used for DOS's FAT file system."
} hrFSHFS OBJECT IDENTITY STATUS  current DESCRIPTION
OBJECT IDENTITY STATUS  current DESCRIPTION
"The file system type identifier used for the ISO 9660 File System for CD's."
The file system type identifier used for the RockRidge File System for CD's."
The file system type identifier used for the Netware File System."
} hrFSAFS OBJECT IDENTITY STATUS  current DESCRIPTION
OBJECT IDENTITY STATUS  current DESCRIPTION
"The file system type identifier used for the RFS File System."
hrFSDGCFS OBJECT IDENTITY STATUS  current DESCRIPTION
"The file system type identifier used for the Windows FAT32 File System."
This MIB has many objects that identify file system pathnames on the managed host.
Many file systems allow pathnames to be encoded in a variety of character sets (other than ASCII), but do not support the encoding of the actual character set used with the pathname.
The implementation strategy is that user interfaces (i.e. character based shells or graphical applications) will have configuration options that control with which character set they will interpret and display all pathnames.
This is often a per user configuration (e.g. an environment variable), so that users using different languages and character sets on a multi user system may each work effectively with their preferred character set.
A human usually controls this configuration.
If an application is not configured or is configured incorrectly, it will often have trouble displaying pathnames in the intended character set.
This situation made it important for this MIB to handle two issues: 1) Pathname objects must be able to transfer a variety of character sets with potentially multi byte encodings; and
, 2) HostMIB agents will generally not be correctly configured for the appropriate character set to be used for all files on the system, particularly on a system with multiple users using different character sets.
It was thus impossible to mandate that the agent tag pathnames with the character set in use.
These issues were solved with the introduction of the InternationalDisplayString textual convention, which supports multi  byte encodings.
Network management stations should use a local algorithm to determine which character set is in use and how it should be displayed.
It is expected that network management station applications will rely on human configuration to choose which character set in which to interpret InternationalDisplayString objects, much like an application running locally on that host.
There are a number of management objects defined in this MIB that have a MAX ACCESS clause of read write.
Such objects may be considered sensitive or vulnerable in some network environments.
The support for SET operations in a non secure environment without proper protection can have a negative effect on system operations.
There are a number of managed objects in this MIB that may contain sensitive information.
The objects in the Running Software Group list information about running software on the system (including the operating system software and version).
Some may wish not to disclose to others what software they are running.
Further, an inventory of the running software and versions may be helpful to an attacker who hopes to exploit software bugs in certain applications.
The same issues exist for the objects in the Installed Software Group.
It is thus important to control even GET access to these objects and possibly to even encrypt the values of these object when sending them over the network via SNMP.
Not all versions of SNMP provide features for such a secure environment.
by itself is not a secure environment.
Even if the network itself is secure (for example by using IPSec), even then, there is no control as to who on the secure network is allowed to access and
the objects in this MIB.
It is recommended that the implementers consider the security features as provided by the SNMPv3 framework.
Specifically, the use of the User based Security Model RFC 2574
[RFC2574] and the View  based Access Control Model RFC 2575
It is then a customer/user responsibility to ensure that the SNMP entity giving access to an instance of this MIB, is properly configured to give access to the objects only to those principals (users) that have legitimate rights to indeed GET or SET
