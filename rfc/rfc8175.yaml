- contents:
  - '                 Dynamic Link Exchange Protocol (DLEP)

    '
  title: __initial_text__
- contents:
  - "Abstract\n   When routing devices rely on modems to effect communications over\n
    \  wireless links, they need timely and accurate knowledge of the\n   characteristics
    of the link (speed, state, etc.) in order to make\n   routing decisions.  In mobile
    or other environments where these\n   characteristics change frequently, manual
    configurations or the\n   inference of state through routing or transport protocols
    does not\n   allow the router to make the best decisions.  This document\n   introduces
    a new protocol called the Dynamic Link Exchange Protocol\n   (DLEP), which provides
    a bidirectional, event-driven communication\n   channel between the router and
    the modem to facilitate communication\n   of changing link characteristics.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc8175.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n
    \  2. Protocol Overview ...............................................7\n      2.1.
    Destinations ...............................................8\n      2.2. Conventions
    and Terminology ................................9\n   3. Requirements ....................................................9\n
    \  4. Implementation Scenarios .......................................10\n   5.
    Assumptions ....................................................10\n   6. Metrics
    ........................................................11\n   7. DLEP Session
    Flow ..............................................12\n      7.1. Peer Discovery
    State ......................................12\n      7.2. Session Initialization
    State ..............................14\n      7.3. In-Session State ..........................................14\n
    \          7.3.1. Heartbeats .........................................15\n      7.4.
    Session Termination State .................................15\n      7.5. Session
    Reset State .......................................16\n           7.5.1. Unexpected
    TCP Connection Termination ..............16\n   8. Transaction Model ..............................................16\n
    \  9. Extensions .....................................................17\n      9.1.
    Experiments ...............................................18\n   10. Scalability
    ...................................................18\n   11. DLEP Signal and
    Message Structure .............................18\n      11.1. DLEP Signal Header
    .......................................19\n      11.2. DLEP Message Header ......................................20\n
    \     11.3. DLEP Generic Data Item ...................................20\n   12.
    DLEP Signals and Messages .....................................21\n      12.1.
    General Processing Rules .................................21\n      12.2. Status
    Code Processing ...................................22\n      12.3. Peer Discovery
    Signal ....................................22\n      12.4. Peer Offer Signal ........................................23\n
    \     12.5. Session Initialization Message ...........................23\n      12.6.
    Session Initialization Response Message ..................24\n      12.7. Session
    Update Message ...................................26\n      12.8. Session Update
    Response Message ..........................27\n      12.9. Session Termination
    Message ..............................28\n      12.10. Session Termination Response
    Message ....................28\n      12.11. Destination Up Message ..................................28\n
    \     12.12. Destination Up Response Message .........................30\n      12.13.
    Destination Announce Message ............................30\n      12.14. Destination
    Announce Response Message ...................31\n      12.15. Destination Down
    Message ................................32\n      12.16. Destination Down Response
    Message .......................33\n      12.17. Destination Update Message ..............................33\n
    \     12.18. Link Characteristics Request Message ....................35\n      12.19.
    Link Characteristics Response Message ...................35\n      12.20. Heartbeat
    Message .......................................36\n   13. DLEP Data Items ...............................................37\n
    \     13.1. Status ...................................................38\n      13.2.
    IPv4 Connection Point ....................................41\n      13.3. IPv6
    Connection Point ....................................42\n      13.4. Peer Type
    ................................................43\n      13.5. Heartbeat Interval
    .......................................45\n      13.6. Extensions Supported .....................................45\n
    \     13.7. MAC Address ..............................................46\n      13.8.
    IPv4 Address .............................................47\n           13.8.1.
    IPv4 Address Processing ...........................48\n      13.9. IPv6 Address
    .............................................49\n           13.9.1. IPv6 Address
    Processing ...........................50\n      13.10. IPv4 Attached Subnet ....................................51\n
    \          13.10.1. IPv4 Attached Subnet Processing ..................52\n      13.11.
    IPv6 Attached Subnet ....................................53\n           13.11.1.
    IPv6 Attached Subnet Processing ..................54\n      13.12. Maximum Data
    Rate (Receive) .............................55\n      13.13. Maximum Data Rate
    (Transmit) ............................56\n      13.14. Current Data Rate (Receive)
    .............................56\n      13.15. Current Data Rate (Transmit) ............................57\n
    \     13.16. Latency .................................................58\n      13.17.
    Resources ...............................................59\n      13.18. Relative
    Link Quality (Receive) .........................60\n      13.19. Relative Link
    Quality (Transmit) ........................60\n      13.20. Maximum Transmission
    Unit (MTU) .........................61\n   14. Security Considerations .......................................62\n
    \  15. IANA Considerations ...........................................63\n      15.1.
    Registrations ............................................63\n      15.2. Signal
    Type Registrations ................................63\n      15.3. Message Type
    Registrations ...............................64\n      15.4. DLEP Data Item Registrations
    .............................65\n      15.5. DLEP Status Code Registrations ...........................66\n
    \     15.6. DLEP Extension Registrations .............................67\n      15.7.
    DLEP IPv4 Connection Point Flags .........................68\n      15.8. DLEP
    IPv6 Connection Point Flags .........................68\n      15.9. DLEP Peer
    Type Flags .....................................68\n      15.10. DLEP IPv4 Address
    Flags .................................69\n      15.11. DLEP IPv6 Address Flags
    .................................69\n      15.12. DLEP IPv4 Attached Subnet Flags
    .........................69\n      15.13. DLEP IPv6 Attached Subnet Flags .........................70\n
    \     15.14. DLEP Well-Known Port ....................................70\n      15.15.
    DLEP IPv4 Link-Local Multicast Address ..................70\n      15.16. DLEP
    IPv6 Link-Local Multicast Address ..................70\n   16. References ....................................................71\n
    \     16.1. Normative References .....................................71\n      16.2.
    Informative References ...................................71\n   Appendix A. Discovery
    Signal Flows ................................73\n   Appendix B. Peer-Level Message
    Flows ..............................73\n     B.1. Session Initialization .....................................73\n
    \    B.2. Session Initialization - Refused ...........................74\n     B.3.
    Router Changes IP Addresses ................................74\n     B.4. Modem
    Changes Session-Wide Metrics .........................75\n     B.5. Router Terminates
    Session ..................................75\n     B.6. Modem Terminates Session
    ...................................76\n     B.7. Session Heartbeats .........................................77\n
    \    B.8. Router Detects a Heartbeat Timeout .........................78\n     B.9.
    Modem Detects a Heartbeat Timeout ..........................78\n   Appendix C.
    Destination-Specific Message Flows ....................79\n     C.1. Common Destination
    Notification ............................79\n     C.2. Multicast Destination Notification
    .........................80\n     C.3. Link Characteristics Request ...............................81\n
    \  Acknowledgments ...................................................82\n   Authors'
    Addresses ................................................82\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   There exist today a collection of modem devices that control
    links of\n   variable data rate and quality.  Examples of these types of links\n
    \  include line-of-sight (LOS) terrestrial radios, satellite terminals,\n   and
    broadband modems.  Fluctuations in speed and quality of these\n   links can occur
    due to configuration, or on a moment-to-moment basis,\n   due to physical phenomena
    like multipath interference, obstructions,\n   rain fade, etc.  It is also quite
    possible that link quality and\n   data rate vary with respect to individual destinations
    on a link and\n   with the type of traffic being sent.  As an example, consider
    the\n   case of an IEEE 802.11 access point serving two associated laptop\n   computers.
    \ In this environment, the answer to the question \"What is\n   the data rate
    on the 802.11 link?\" is \"It depends on which associated\n   laptop we're talking
    about and on what kind of traffic is being\n   sent.\"  While the first laptop,
    being physically close to the access\n   point, may have a data rate of 54 Mbps
    for unicast traffic, the other\n   laptop, being relatively far away or obstructed
    by some object, can\n   simultaneously have a data rate of only 32 Mbps for unicast.\n
    \  However, for multicast traffic sent from the access point, all\n   traffic
    is sent at the base transmission rate (which is configurable\n   but, depending
    on the model of the access point, is usually 24 Mbps\n   or less).\n   In addition
    to utilizing links that have variable data rates, mobile\n   networks are challenged
    by the notion that link connectivity will\n   come and go over time, without an
    effect on a router's interface\n   state (Up or Down).  Effectively utilizing
    a relatively short-lived\n   connection is problematic in IP routed networks,
    as IP routing\n   protocols tend to rely on interface state and independent timers
    to\n   maintain network convergence (e.g., HELLO messages and/or recognition\n
    \  of DEAD routing adjacencies).  These dynamic connections can be\n   better
    utilized with an event-driven paradigm, where acquisition of a\n   new neighbor
    (or loss of an existing one) is signaled, as opposed to\n   a paradigm driven
    by timers and/or interface state.  DLEP not only\n   implements such an event-driven
    paradigm but does so over a local\n   (1-hop) TCP session, which guarantees delivery
    of the event messages.\n   Another complicating factor for mobile networks are
    the different\n   methods of physically connecting the modem devices to the router.\n
    \  Modems can be deployed as an interface card in a router's chassis, or\n   as
    a standalone device connected to the router via Ethernet or serial\n   link.  In
    the case of Ethernet attachment, with existing protocols\n   and techniques, routing
    software cannot be aware of convergence\n   events occurring on the radio link
    (e.g., acquisition or loss of a\n   potential routing neighbor), nor can the router
    be aware of the\n   actual capacity of the link.  This lack of awareness, along
    with the\n   variability in data rate, leads to a situation where finding the\n
    \  (current) best route through the network to a given node is difficult\n   to
    establish and properly maintain.  This is especially true of\n   demand-based
    access schemes such as Demand Assigned Multiple Access\n   (DAMA) implementations
    used on some satellite systems.  With a\n   DAMA-based system, additional data
    rate may be available but will not\n   be used unless the network devices emit
    traffic at a rate higher than\n   the currently established rate.  Increasing
    the traffic rate does not\n   guarantee that additional data rate will be allocated;
    rather, it may\n   result in data loss and additional retransmissions on the link.\n
    \  Addressing the challenges listed above, the Dynamic Link Exchange\n   Protocol,
    or DLEP, has been developed.  DLEP runs between a router\n   and its attached
    modem devices, allowing the modem devices to\n   communicate (1) link characteristics
    as they change and\n   (2) convergence events (acquisition and loss of potential
    routing\n   next hops).  Figures 1 and 2 illustrate the scope of DLEP packets.\n
    \     |-------Local Node-------|          |-------Remote Node------|\n      |
    \                       |          |                        |\n      +--------+
    \      +-------+          +-------+       +--------+\n      | Router |=======|
    Modem |{~~~~~~~~}| Modem |=======| Router |\n      |        |       | Device|
    \         | Device|       |        |\n      +--------+       +-------+          +-------+
    \      +--------+\n               |       |       | Link     |       |       |\n
    \              |-DLEP--|       | Protocol |       |-DLEP--|\n               |
    \      |       | (e.g.,   |       |       |\n               |       |       |
    802.11)  |       |       |\n                          Figure 1: DLEP Network\n
    \  In Figure 1, when the local modem detects the presence of a remote\n   node,
    it (the local modem) sends a message to its router via DLEP.\n   The message consists
    of an indication of what change has occurred on\n   the link (e.g., the presence
    of a remote node detected), along with a\n   collection of DLEP-defined Data Items
    that further describe the\n   change.  Upon receipt of the message, the local
    router may take\n   whatever action it deems appropriate, such as initiating discovery\n
    \  protocols and/or issuing HELLO messages to converge the network.  On\n   a
    continuing, as-needed basis, the modem devices use DLEP to report\n   any characteristics
    of the link (data rate, latency, etc.) that have\n   changed.  DLEP is independent
    of the link type and topology supported\n   by the modem.  Note that DLEP is specified
    to run only on the local\n   link between router and modem.  Some over-the-air
    signaling may be\n   necessary between the local and remote modem in order to
    provide some\n   parameters in DLEP Messages between the local modem and local
    router,\n   but DLEP does not specify how such over-the-air signaling is carried\n
    \  out.  Over-the-air signaling is purely a matter for the modem\n   implementer.\n
    \  Figure 2 shows how DLEP can support a configuration where routers are\n   connected
    with different link types.  In this example, Modem Device\n   Type A implements
    a point-to-point link, and Modem Device Type B is\n   connected via a shared medium.
    \ In both cases, DLEP is used to report\n   the characteristics of the link (data
    rate, latency, etc.) to\n   routers.  The modem is also able to use the DLEP session
    to notify\n   the router when the remote node is lost, shortening the time required\n
    \  to reconverge the network.\n                 +--------+                     +--------+\n
    \           +----+ Modem  |                     | Modem  +---+\n            |
    \   | Device |                     | Device |   |\n            |    | Type A |
    \ <===== // ======>  | Type A |   |\n            |    +--------+ Point-to-Point
    Link +--------+   |\n        +---+----+                                       +---+----+\n
    \       | Router |                                       | Router |\n        |
    \       |                                       |        |\n        +---+----+
    \                                      +---+----+\n            |     +--------+
    \                    +--------+  |\n            +-----+ Modem  |                     |
    Modem  |  |\n                  | Device |   o o o o o o o o   | Device +--+\n
    \                 | Type B |    o  Shared   o    | Type B |\n                  +--------+
    \    o Medium  o     +--------+\n                                  o       o\n
    \                                  o     o\n                                    o
    \  o\n                                      o\n                                 +--------+\n
    \                                | Modem  |\n                                 |
    Device |\n                                 | Type B |\n                                 +---+----+\n
    \                                    |\n                                     |\n
    \                                +---+----+\n                                 |
    Router |\n                                 |        |\n                                 +--------+\n
    \           Figure 2: DLEP Network with Multiple Modem Devices\n"
  title: 1.  Introduction
- contents:
  - "2.  Protocol Overview\n   DLEP defines a set of Messages used by modems and their
    attached\n   routers to communicate events that occur on the physical link(s)\n
    \  managed by the modem: for example, a remote node entering or leaving\n   the
    network, or that the link has changed.  Associated with these\n   Messages are
    a set of Data Items -- information that describes the\n   remote node (e.g., address
    information) and/or the characteristics of\n   the link to the remote node.  Throughout
    this document, we refer to\n   modems/routers participating in a DLEP session
    as \"DLEP\n   Participants\", unless a specific distinction (e.g., modem or router)\n
    \  is required.\n   DLEP uses a session-oriented paradigm between the modem device
    and\n   its associated router.  If multiple modem devices are attached to a\n
    \  router (as in Figure 2) or the modem supports multiple connections\n   (via
    multiple logical or physical interfaces), then separate DLEP\n   sessions exist
    for each modem or connection.  A router and modem form\n   a session by completing
    the discovery and initialization process.\n   This router-modem session persists
    unless or until it either\n   (1) times out, based on the absence of DLEP traffic
    (including\n   heartbeats) or (2) is explicitly torn down by one of the DLEP\n
    \  participants.\n   While this document represents the best efforts of the working
    group\n   to be functionally complete, it is recognized that extensions to DLEP\n
    \  will in all likelihood be necessary as more link types are used.\n   Such extensions
    are defined as additional Messages, Data Items,\n   and/or status codes, and associated
    rules of behavior, that are not\n   defined in this document.  DLEP contains a
    standard mechanism for\n   router and modem implementations to negotiate the available\n
    \  extensions to use on a per-session basis.\n"
  - contents:
    - "2.1.  Destinations\n   The router-modem session provides a carrier for information
      exchange\n   concerning \"destinations\" that are available via the modem device.\n
      \  Destinations can be identified by either the router or the modem and\n   represent
      a specific, addressable location that can be reached via\n   the link(s) managed
      by the modem.\n   The DLEP Messages concerning destinations thus become the
      way for\n   routers and modems to maintain, and notify each other about, an\n
      \  information base representing the physical and logical destinations\n   accessible
      via the modem device, as well as the link characteristics\n   to those destinations.\n
      \  A destination can be either physical or logical.  The example of a\n   physical
      destination would be that of a remote, far-end router\n   attached via the variable-quality
      network.  It should be noted that\n   for physical destinations the Media Access
      Control (MAC) address is\n   the address of the far-end router, not the modem.\n
      \  The example of a logical destination is Multicast.  Multicast traffic\n   destined
      for the variable-quality network (the network accessed via\n   the modem) is
      handled in IP networks by deriving a Layer 2 MAC\n   address based on the Layer
      3 address.  Leveraging on this scheme,\n   multicast traffic is supported in
      DLEP simply by treating the derived\n   MAC address as any other destination
      in the network.\n   To support these logical destinations, one of the DLEP participants\n
      \  (typically, the router) informs the other as to the existence of the\n   logical
      destination.  The modem, once it is aware of the existence of\n   this logical
      destination, reports link characteristics just as it\n   would for any other
      destination in the network.  The specific\n   algorithms a modem would use to
      derive metrics on logical\n   destinations are outside the scope of this specification;
      these\n   algorithms are left to specific implementations to decide.\n   In
      all cases, when this specification uses the term \"destination\", it\n   refers
      to the addressable locations, either logical or physical, that\n   are accessible
      by the radio link(s).\n"
    title: 2.1.  Destinations
  - contents:
    - "2.2.  Conventions and Terminology\n   The key words \"MUST\", \"MUST NOT\",
      \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
      \"NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be
      interpreted as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when,
      they appear in all\n   capitals, as shown here.\n"
    title: 2.2.  Conventions and Terminology
  title: 2.  Protocol Overview
- contents:
  - "3.  Requirements\n   DLEP MUST be implemented on a single Layer 2 domain.  The
    protocol\n   identifies next-hop destinations by using the MAC address for\n   delivering
    data traffic.  No manipulation or substitution is\n   performed; the MAC address
    supplied in all DLEP Messages is used as\n   the Destination MAC address for frames
    emitted by the participating\n   router.  MAC addresses MUST be unique within
    the context of the\n   router-modem session.\n   To enforce the single Layer 2
    domain, implementations MUST support\n   the Generalized TTL Security Mechanism
    [RFC5082], and implementations\n   MUST adhere to this specification for all DLEP
    Messages.\n   DLEP specifies UDP multicast for single-hop discovery signaling
    and\n   TCP for transport of the Messages.  Modems and routers participating\n
    \  in DLEP sessions MUST have topologically consistent IP addresses\n   assigned.
    \ It is RECOMMENDED that DLEP implementations utilize IPv6\n   link-local addresses
    to reduce the administrative burden of address\n   assignment.\n   DLEP relies
    on the guaranteed delivery of its Messages between router\n   and modem, once
    the 1-hop discovery process is complete -- hence, the\n   specification of TCP
    to carry the Messages.  Other reliable\n   transports for the protocol are possible
    but are outside the scope of\n   this document.\n"
  title: 3.  Requirements
- contents:
  - "4.  Implementation Scenarios\n   During development of this specification, two
    types of deployments\n   were discussed.\n   The first can be viewed as a \"dedicated
    deployment\".  In this mode,\n   DLEP routers and modems are either directly connected
    (e.g., using\n   crossover cables to connect interfaces) or connected to a dedicated\n
    \  switch.  An example of this type of deployment would be a router with\n   a
    line-of-sight radio connected into one interface, with a satellite\n   modem connected
    into another interface.  In mobile environments, the\n   router and the connected
    modem (or modems) are placed into a mobile\n   platform (e.g., a vehicle, boat,
    or airplane).  In this mode, when a\n   switch is used, it is possible that a
    small number of ancillary\n   devices (e.g., a laptop) are also plugged into the
    switch.  But in\n   either event, the resulting network segment is constrained
    to a small\n   number of devices and is not generally accessible from anywhere
    else\n   in the network.\n   The other type of deployment envisioned can be viewed
    as a \"networked\n   deployment\".  In this type of scenario, the DLEP router
    and modem\n   (or modems) are placed on a segment that is accessible from other\n
    \  points in the network.  In this scenario, not only are the DLEP\n   router
    and modem(s) accessible from other points in the network; the\n   router and a
    given modem could be multiple physical hops away from\n   each other.  This scenario
    necessitates the use of Layer 2 tunneling\n   technology to enforce the single-hop
    requirement of DLEP.\n"
  title: 4.  Implementation Scenarios
- contents:
  - "5.  Assumptions\n   DLEP assumes that a signaling protocol exists between modems\n
    \  participating in a network.  This specification does not define the\n   character
    or behavior of this over-the-air signaling but does expect\n   some information
    to be carried (or derived) by the signaling,\n   such as the arrival and departure
    of modems from this network,\n   and the variation of the link characteristics
    between modems.\n   This information is then assumed to be used by the modem to\n
    \  implement DLEP.\n   This specification assumes that the link between router
    and modem is\n   static with respect to data rate and latency and that this link
    is\n   not likely to be the cause of a performance bottleneck.  In\n   deployments
    where the router and modem are physically separated by\n   multiple network hops,
    served by Layer 2 tunneling technology, DLEP\n   statistics on the RF links could
    be insufficient for routing\n   protocols to make appropriate routing decisions.
    \ This would\n   especially become an issue in cases where the Layer 2 tunnel
    between\n   router and modem is itself served in part (or in total) with a\n   wireless
    backhaul link.\n"
  title: 5.  Assumptions
- contents:
  - "6.  Metrics\n   DLEP includes the ability for the router and modem to communicate\n
    \  metrics that reflect the characteristics (e.g., data rate, latency)\n   of
    the variable-quality link in use.  DLEP does not specify how a\n   given metric
    value is to be calculated; rather, the protocol assumes\n   that metrics have
    been calculated by a \"best effort\", incorporating\n   all pertinent data that
    is available to the modem device.  Metrics\n   based on large-enough sample sizes
    will preclude short traffic bursts\n   from adversely skewing reported values.\n
    \  DLEP allows for metrics to be sent within two contexts -- metrics for\n   a
    specific destination within the network (e.g., a specific router),\n   and \"per
    session\" (those that apply to all destinations accessed via\n   the modem).  Most
    metrics can be further subdivided into transmit and\n   receive metrics.  In cases
    where metrics are provided at the session\n   level, the router propagates the
    metrics to all entries in its\n   information base for destinations that are accessed
    via the modem.\n   DLEP modems announce all metric Data Items that will be reported\n
    \  during the session, and provide default values for those metrics, in\n   the
    Session Initialization Response Message (Section 12.6).  In order\n   to use a
    metric type that was not included in the Session\n   Initialization Response Message,
    modem implementations terminate the\n   session with the router (via the Session
    Termination Message\n   (Section 12.9)) and establish a new session.\n   A DLEP
    modem can send metrics in both (1) a session context, via the\n   Session Update
    Message (Section 12.7) and (2) a specific destination\n   context, via the Destination
    Update Message (Section 12.17), at any\n   time.  The most recently received metric
    value takes precedence over\n   any earlier value, regardless of context -- that
    is:\n   1.  If the router receives metrics in a specific destination context\n
    \      (via the Destination Update Message), then the specific\n       destination
    is updated with the new metric.\n   2.  If the router receives metrics in a session-wide
    context (via the\n       Session Update Message), then the metrics for all destinations\n
    \      accessed via the modem are updated with the new metric.\n   It is left
    to implementations to choose sensible default values based\n   on their specific
    characteristics.  Modems having static\n   (non-changing) link metric characteristics
    can report metrics only\n   once for a given destination (or once on a session-wide
    basis, if all\n   connections via the modem are of this static nature).\n   In
    addition to communicating existing metrics about the link, DLEP\n   provides a
    Message allowing a router to request a different data rate\n   or latency from
    the modem.  This Message is the Link Characteristics\n   Request Message (Section
    12.18); it gives the router the ability to\n   deal with requisite increases (or
    decreases) of allocated\n   data rate/latency in demand-based schemes in a more
    deterministic\n   manner.\n"
  title: 6.  Metrics
- contents:
  - "7.  DLEP Session Flow\n   All DLEP participants of a session transition through
    a number of\n   distinct states during the lifetime of a DLEP session:\n   o  Peer
    Discovery\n   o  Session Initialization\n   o  In-Session\n   o  Session Termination\n
    \  o  Session Reset\n   Modems, and routers supporting DLEP discovery, transition
    through all\n   five of the above states.  Routers that rely on preconfigured
    TCP\n   address/port information start in the Session Initialization state.\n
    \  Modems MUST support the Peer Discovery state.\n"
  - contents:
    - "7.1.  Peer Discovery State\n   Modems MUST support DLEP Peer Discovery; routers
      MAY support the\n   discovery signals or rely on a priori configuration to locate
      modems.\n   If a router chooses to support DLEP discovery, all signals MUST
      be\n   supported.\n   In the Peer Discovery state, routers that support DLEP
      discovery MUST\n   send Peer Discovery Signals (Section 12.3) to initiate modem\n
      \  discovery.\n   The router implementation then waits for a Peer Offer Signal\n
      \  (Section 12.4) response from a potential DLEP modem.  While in the\n   Peer
      Discovery state, Peer Discovery Signals MUST be sent repeatedly\n   by a DLEP
      router, at regular intervals.  It is RECOMMENDED that this\n   interval be set
      to 60 seconds.  The interval MUST be a minimum of\n   1 second; it SHOULD be
      a configurable parameter.  Note that this\n   operation (sending Peer Discovery
      and waiting for Peer Offer) is\n   outside the DLEP transaction model (Section
      8), as the transaction\n   model only describes Messages on a TCP session.\n
      \  Routers receiving a Peer Offer Signal MUST use one of the modem\n   address/port
      combinations from the Peer Offer Signal to establish a\n   TCP connection to
      the modem, even if a priori configuration exists.\n   If multiple Connection
      Point Data Items exist in the received Peer\n   Offer Signal, routers SHOULD
      prioritize IPv6 connection points over\n   IPv4 connection points.  If multiple
      connection points exist with the\n   same transport (e.g., IPv6 or IPv4), implementations
      MAY use their\n   own heuristics to determine the order in which they are tried.
      \ If a\n   TCP connection cannot be achieved using any of the address/port\n
      \  combinations and the Discovery mechanism is in use, then the router\n   SHOULD
      resume issuing Peer Discovery Signals.  If no Connection Point\n   Data Items
      are included in the Peer Offer Signal, the router MUST use\n   the source address
      of the UDP packet containing the Peer Offer Signal\n   as the IP address, and
      the DLEP well-known port number.\n   In the Peer Discovery state, the modem
      implementation MUST listen for\n   incoming Peer Discovery Signals on the DLEP
      well-known IPv6 and/or\n   IPv4 link-local multicast address and port.  On receipt
      of a valid\n   Peer Discovery Signal, it MUST reply with a Peer Offer Signal.\n
      \  Modems MUST be prepared to accept a TCP connection from a router that\n   is
      not using the Discovery mechanism, i.e., a connection attempt that\n   occurs
      without a preceding Peer Discovery Signal.\n   Implementations of DLEP SHOULD
      implement, and use, Transport Layer\n   Security (TLS) [RFC5246] to protect
      the TCP session.  The \"dedicated\n   deployments\" discussed in \"Implementation
      Scenarios\" (Section 4) MAY\n   consider the use of DLEP without TLS.  For all
      \"networked\n   deployments\" (again, discussed in \"Implementation Scenarios\"),
      the\n   implementation and use of TLS are STRONGLY RECOMMENDED.  If TLS is to\n
      \  be used, then the TLS session MUST be established before any Messages\n   are
      passed between peers.  Routers supporting TLS MUST prioritize\n   connection
      points using TLS over those that do not.\n   Upon establishment of a TCP connection,
      and the establishment of a\n   TLS session if TLS is in use, both modem and
      router enter the Session\n   Initialization state.  It is up to the router implementation
      if Peer\n   Discovery Signals continue to be sent after the device has\n   transitioned
      to the Session Initialization state.  Modem\n   implementations MUST silently
      ignore Peer Discovery Signals from a\n   router with which a given implementation
      already has a TCP\n   connection.\n"
    title: 7.1.  Peer Discovery State
  - contents:
    - "7.2.  Session Initialization State\n   On entering the Session Initialization
      state, the router MUST send a\n   Session Initialization Message (Section 12.5)
      to the modem.  The\n   router MUST then wait for receipt of a Session Initialization\n
      \  Response Message (Section 12.6) from the modem.  Receipt of the\n   Session
      Initialization Response Message containing a Status Data Item\n   (Section 13.1)
      with status code set to 0 'Success' (see Table 2 in\n   Section 13.1) indicates
      that the modem has received and processed the\n   Session Initialization Message,
      and the router MUST transition to the\n   In-Session state.\n   On entering
      the Session Initialization state, the modem MUST wait for\n   receipt of a Session
      Initialization Message from the router.  Upon\n   receipt of a Session Initialization
      Message, the modem MUST send a\n   Session Initialization Response Message,
      and the session MUST\n   transition to the In-Session state.  If the modem receives
      any\n   Message other than Session Initialization or it fails to parse the\n
      \  received Message, it MUST NOT send any Message, and it MUST terminate\n   the
      TCP connection and transition to the Session Reset state.\n   DLEP provides
      an extension negotiation capability to be used in the\n   Session Initialization
      state; see Section 9.  Extensions supported by\n   an implementation MUST be
      declared to potential DLEP participants\n   using the Extensions Supported Data
      Item (Section 13.6).  Once both\n   DLEP participants have exchanged initialization
      Messages, an\n   implementation MUST NOT emit any Message, Signal, Data Item,
      or\n   status code associated with an extension that was not specified in\n
      \  the received initialization Message from its peer.\n"
    title: 7.2.  Session Initialization State
  - contents:
    - "7.3.  In-Session State\n   In the In-Session state, Messages can flow in both
      directions between\n   DLEP participants, indicating changes to the session
      state, the\n   arrival or departure of reachable destinations, or changes of
      the\n   state of the links to the destinations.\n   The In-Session state is
      maintained until one of the following\n   conditions occurs:\n   o  The implementation
      terminates the session by sending a Session\n      Termination Message (Section
      12.9), or\n   o  Its peer terminates the session, indicated by receiving a Session\n
      \     Termination Message.\n   The implementation MUST then transition to the
      Session Termination\n   state.\n"
    - contents:
      - "7.3.1.  Heartbeats\n   In order to maintain the In-Session state, periodic
        Heartbeat\n   Messages (Section 12.20) MUST be exchanged between router and
        modem.\n   These Messages are intended to keep the session alive and to verify\n
        \  bidirectional connectivity between the two DLEP participants.  It is\n
        \  RECOMMENDED that the interval timer between Heartbeat Messages be set\n
        \  to 60 seconds.  The interval MUST be a minimum of 1 second; it SHOULD\n
        \  be a configurable parameter.\n   Each DLEP participant is responsible for
        the creation of Heartbeat\n   Messages.\n   Receipt of any valid DLEP Message
        MUST reset the heartbeat interval\n   timer (i.e., valid DLEP Messages take
        the place of, and obviate the\n   need for, additional Heartbeat Messages).\n
        \  An implementation MUST allow a minimum of 2 heartbeat intervals to\n   expire
        with no Messages from its peer before terminating the session.\n   When terminating
        the session, a Session Termination Message\n   containing a Status Data Item
        (Section 13.1) with status code set to\n   132 'Timed Out' (see Table 2) MUST
        be sent, and then the\n   implementation MUST transition to the Session Termination
        state.\n"
      title: 7.3.1.  Heartbeats
    title: 7.3.  In-Session State
  - contents:
    - "7.4.  Session Termination State\n   When an implementation enters the Session
      Termination state after\n   sending a Session Termination Message (Section 12.9)
      as the result of\n   an invalid Message or error, it MUST wait for a Session
      Termination\n   Response Message (Section 12.10) from its peer.  A sender SHOULD\n
      \  allow 4 heartbeat intervals to expire before assuming that its peer\n   is
      unresponsive and before continuing with session termination.  Any\n   other
      Message received while waiting MUST be silently ignored.\n   When the sender
      of the Session Termination Message receives a Session\n   Termination Response
      Message from its peer or times out, it MUST\n   transition to the Session Reset
      state.\n   When an implementation receives a Session Termination Message from\n
      \  its peer, it enters the Session Termination state, and then it MUST\n   immediately
      send a Session Termination Response and transition to the\n   Session Reset
      state.\n"
    title: 7.4.  Session Termination State
  - contents:
    - "7.5.  Session Reset State\n   In the Session Reset state, the implementation
      MUST perform the\n   following actions:\n   o  Release all resources allocated
      for the session.\n   o  Eliminate all destinations in the information base represented
      by\n      the session.  Destination Down Messages (Section 12.15) MUST NOT\n
      \     be sent.\n   o  Terminate the TCP connection.\n   Having completed these
      actions, the implementation SHOULD return to\n   the relevant initial state:\n
      \  o  For modems: Peer Discovery.\n   o  For routers: either Peer Discovery
      or Session Initialization,\n      depending on configuration.\n"
    - contents:
      - "7.5.1.  Unexpected TCP Connection Termination\n   If the TCP connection between
        DLEP participants is terminated when an\n   implementation is not in the Session
        Reset state, the implementation\n   MUST immediately transition to the Session
        Reset state.\n"
      title: 7.5.1.  Unexpected TCP Connection Termination
    title: 7.5.  Session Reset State
  title: 7.  DLEP Session Flow
- contents:
  - "8.  Transaction Model\n   DLEP defines a simple Message transaction model: only
    one request per\n   destination may be in progress at a time per session.  A Message\n
    \  transaction is considered complete when a response matching a\n   previously
    issued request is received.  If a DLEP participant\n   receives a request for
    a destination for which there is already an\n   outstanding request, the implementation
    MUST terminate the session by\n   issuing a Session Termination Message (Section
    12.9) containing a\n   Status Data Item (Section 13.1) with status code set to\n
    \  129 'Unexpected Message' (see Table 2) and transition to the Session\n   Termination
    state.  There is no restriction on the total number of\n   Message transactions
    in progress at a time, as long as each\n   transaction refers to a different destination.\n
    \  It should be noted that some requests may take a considerable amount\n   of
    time for some DLEP participants to complete; for example, a modem\n   handling
    a multicast Destination Up request may have to perform a\n   complex network reconfiguration.
    \ A sending implementation MUST be\n   able to handle such long-running transactions
    gracefully.\n   Additionally, only one session request, e.g., a Session\n   Initialization
    Message (Section 12.5), may be in progress at a time\n   per session.  As noted
    above for Message transactions, a session\n   transaction is considered complete
    when a response matching a\n   previously issued request is received.  If a DLEP
    participant\n   receives a session request while there is already a session request\n
    \  in progress, it MUST terminate the session by issuing a Session\n   Termination
    Message containing a Status Data Item with status code\n   set to 129 'Unexpected
    Message' and transition to the Session\n   Termination state.  Only the Session
    Termination Message may be\n   issued when a session transaction is in progress.
    \ Heartbeat Messages\n   (Section 12.20) MUST NOT be considered part of a session
    transaction.\n   DLEP transactions do not time out and are not cancellable, except
    for\n   transactions in flight when the DLEP session is reset.  If the\n   session
    is terminated, canceling transactions in progress MUST be\n   performed as part
    of resetting the state machine.  An implementation\n   can detect if its peer
    has failed in some way by use of the session\n   heartbeat mechanism during the
    In-Session state; see Section 7.3.\n"
  title: 8.  Transaction Model
- contents:
  - "9.  Extensions\n   Extensions MUST be negotiated on a per-session basis during
    session\n   initialization via the Extensions Supported mechanism.\n   Implementations
    are not required to support any extensions in order\n   to be considered DLEP
    compliant.\n   If interoperable protocol extensions are required, they will need
    to\n   be standardized as either (1) an update to this document or (2) an\n   additional
    standalone specification.  The IANA registries defined in\n   Section 15 of this
    document contain sufficient unassigned space for\n   DLEP Signals, Messages, Data
    Items, and status codes to accommodate\n   future extensions to the protocol.\n
    \  As multiple protocol extensions MAY be announced during session\n   initialization,
    authors of protocol extensions need to consider the\n   interaction of their extensions
    with other published extensions and\n   specify any incompatibilities.\n"
  - contents:
    - "9.1.  Experiments\n   This document registers Private Use [RFC5226] numbering
      space in the\n   DLEP Signal, Message, Data Item, and status code registries
      for\n   experimental extensions.  The intent is to allow for experimentation\n
      \  with new Signals, Messages, Data Items, and/or status codes while\n   still
      retaining the documented DLEP behavior.\n   During session initialization, the
      use of the Private Use Signals,\n   Messages, Data Items, status codes, or behaviors
      MUST be announced as\n   DLEP extensions, using extension identifiers from the
      Private Use\n   space in the \"Extension Type Values\" registry (Table 3), with
      a value\n   agreed upon (a priori) between the participants.  DLEP extensions\n
      \  using the Private Use numbering space are commonly referred to as\n   \"experiments\".\n
      \  Multiple experiments MAY be announced in the Session Initialization\n   Messages.
      \ However, the use of multiple experiments in a single\n   session could lead
      to interoperability issues or unexpected results\n   (e.g., clashes of experimental
      Signals, Messages, Data Items, and/or\n   status code types) and is therefore
      discouraged.  It is left to\n   implementations to determine the correct processing
      path (e.g., a\n   decision on whether to terminate the session or establish
      a\n   precedence of the conflicting definitions) if such conflicts arise.\n"
    title: 9.1.  Experiments
  title: 9.  Extensions
- contents:
  - "10.  Scalability\n   The protocol is intended to support thousands of destinations
    on a\n   given modem/router pair.  On a large scale, an implementation should\n
    \  consider employing techniques to prevent flooding its peer with a\n   large
    number of Messages in a short time.  For example, a dampening\n   algorithm could
    be employed to prevent a flapping device from\n   generating a large number of
    Destination Up / Destination Down\n   Messages.\n   Also, the use of techniques
    such as a hysteresis can lessen the\n   impact of rapid, minor fluctuations in
    link quality.  The specific\n   algorithms for handling flapping destinations
    and minor changes in\n   link quality are outside the scope of this specification.\n"
  title: 10.  Scalability
- contents:
  - "11.  DLEP Signal and Message Structure\n   DLEP defines two protocol units used
    in two different ways: Signals\n   and Messages.  Signals are only used in the
    Discovery mechanism and\n   are carried in UDP datagrams.  Messages are used bidirectionally
    over\n   a TCP connection between the participants, in the Session\n   Initialization,
    In-Session, and Session Termination states.\n   Both Signals and Messages consist
    of a Header followed by an\n   unordered list of Data Items.  Headers consist
    of Type and Length\n   information, while Data Items are encoded as TLV (Type-Length-Value)\n
    \  structures.  In this document, the Data Items following a Signal or\n   Message
    Header are described as being \"contained in\" the Signal or\n   Message.\n   There
    is no restriction on the order of Data Items following a\n   Header, and the acceptability
    of duplicate Data Items is defined by\n   the definition of the Signal or Message
    declared by the type in the\n   Header.\n   All integers in Header fields and
    values MUST be in network byte\n   order.\n"
  - contents:
    - "11.1.  DLEP Signal Header\n   The DLEP Signal Header contains the following
      fields:\n      0                   1                   2                   3\n
      \     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    |      'D'      |      'L'      |      'E'      |      'P'      |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    | Signal Type                   | Length                        |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \                      Figure 3: DLEP Signal Header\n   \"DLEP\":  Every Signal
      MUST start with the following characters:\n      U+0044, U+004C, U+0045, U+0050.\n
      \  Signal Type:  A 16-bit unsigned integer containing one of the DLEP\n      Signal
      Type values defined in this document.\n   Length:  The length in octets, expressed
      as a 16-bit unsigned\n      integer, of all of the DLEP Data Items contained
      in this Signal.\n      This length MUST NOT include the length of the Signal
      Header\n      itself.\n   The DLEP Signal Header is immediately followed by
      zero or more DLEP\n   Data Items, encoded in TLVs, as defined in this document.\n"
    title: 11.1.  DLEP Signal Header
  - contents:
    - "11.2.  DLEP Message Header\n   The DLEP Message Header contains the following
      fields:\n      0                   1                   2                   3\n
      \     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    | Message Type                  | Length                        |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \                      Figure 4: DLEP Message Header\n   Message Type:  A 16-bit
      unsigned integer containing one of the DLEP\n      Message Type values defined
      in this document.\n   Length:  The length in octets, expressed as a 16-bit unsigned\n
      \     integer, of all of the DLEP Data Items contained in this Message.\n      This
      length MUST NOT include the length of the Message Header\n      itself.\n   The
      DLEP Message Header is immediately followed by zero or more DLEP\n   Data Items,
      encoded in TLVs, as defined in this document.\n"
    title: 11.2.  DLEP Message Header
  - contents:
    - "11.3.  DLEP Generic Data Item\n   All DLEP Data Items contain the following
      fields:\n      0                   1                   2                   3\n
      \     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    | Data Item Type                | Length                        |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    |                           Value...                            :\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \                    Figure 5: DLEP Generic Data Item\n   Data Item Type:  A
      16-bit unsigned integer field specifying the type\n      of Data Item being
      sent.\n   Length:  The length in octets, expressed as a 16-bit unsigned\n      integer,
      of the Value field of the Data Item.  This length\n      MUST NOT include the
      length of the Data Item Type and Length\n      fields.\n   Value:  A field of
      <Length> octets that contains data specific to a\n      particular Data Item.\n"
    title: 11.3.  DLEP Generic Data Item
  title: 11.  DLEP Signal and Message Structure
- contents:
  - '12.  DLEP Signals and Messages

    '
  - contents:
    - "12.1.  General Processing Rules\n   If an unrecognized or unexpected Signal
      is received or if a received\n   Signal contains unrecognized, invalid, or disallowed
      duplicate Data\n   Items, the receiving implementation MUST ignore the Signal.\n
      \  If a Signal is received with a TTL value that is NOT equal to 255,\n   the
      receiving implementation MUST ignore the Signal.\n   If an unrecognized Message
      is received, the receiving implementation\n   MUST issue a Session Termination
      Message (Section 12.9) containing a\n   Status Data Item (Section 13.1) with
      status code set to 128 'Unknown\n   Message' (see Table 2) and transition to
      the Session Termination\n   state.\n   If an unexpected Message is received,
      the receiving implementation\n   MUST issue a Session Termination Message containing
      a Status Data\n   Item with status code set to 129 'Unexpected Message' and
      transition\n   to the Session Termination state.\n   If a received Message contains
      unrecognized, invalid, or disallowed\n   duplicate Data Items, the receiving
      implementation MUST issue a\n   Session Termination Message containing a Status
      Data Item with status\n   code set to 130 'Invalid Data' and transition to the
      Session\n   Termination state.\n   If a packet in the TCP stream is received
      with a TTL value other than\n   255, the receiving implementation MUST immediately
      transition to the\n   Session Reset state.\n   Prior to the exchange of Destination
      Up (Section 12.11) and\n   Destination Up Response (Section 12.12) Messages,
      or Destination\n   Announce (Section 12.13) and Destination Announce Response\n
      \  (Section 12.14) Messages, no Messages concerning a destination may be\n   sent.
      \ An implementation receiving any Message with such an\n   unannounced destination
      MUST terminate the session by issuing a\n   Session Termination Message containing
      a Status Data Item with status\n   code set to 131 'Invalid Destination' and
      transition to the Session\n   Termination state.\n   After exchanging Destination
      Down (Section 12.15) and Destination\n   Down Response (Section 12.16) Messages,
      no Messages concerning a\n   destination may be sent until a new Destination
      Up or Destination\n   Announce Message is sent.  An implementation receiving
      a Message\n   about a destination previously announced as 'down' MUST terminate
      the\n   session by issuing a Session Termination Message containing a Status\n
      \  Data Item with status code set to 131 'Invalid Destination' and\n   transition
      to the Session Termination state.\n"
    title: 12.1.  General Processing Rules
  - contents:
    - "12.2.  Status Code Processing\n   The behavior of a DLEP participant receiving
      a Message containing a\n   Status Data Item (Section 13.1) is defined by the
      failure mode\n   associated with the value of the status code field; see Table
      2.  All\n   status code values less than 100 have a failure mode of 'Continue';\n
      \  all other status codes have a failure mode of 'Terminate'.\n   A DLEP participant
      receiving any Message apart from a Session\n   Termination Message (Section
      12.9) containing a Status Data Item with\n   a status code value with failure
      mode 'Terminate' MUST immediately\n   issue a Session Termination Message echoing
      the received Status Data\n   Item and then transition to the Session Termination
      state.\n   A DLEP participant receiving a Message containing a Status Data Item\n
      \  with a status code value with failure mode 'Continue' can continue\n   normal
      operation of the session.\n"
    title: 12.2.  Status Code Processing
  - contents:
    - "12.3.  Peer Discovery Signal\n   A Peer Discovery Signal SHOULD be sent by
      a DLEP router to discover\n   DLEP modems in the network; see Section 7.1.\n
      \  A Peer Discovery Signal MUST be encoded within a UDP packet.  The\n   destination
      MUST be set to the DLEP well-known address and port\n   number.  For routers
      supporting both IPv4 and IPv6 DLEP operation, it\n   is RECOMMENDED that IPv6
      be selected as the transport.  The source IP\n   address MUST be set to the
      router IP address associated with the DLEP\n   interface.  There is no DLEP-specific
      restriction on source port.\n   To construct a Peer Discovery Signal, the Signal
      Type value in the\n   Signal Header is set to 1 (see \"Signal Type Registration\"\n
      \  (Section 15.2)).\n   The Peer Discovery Signal MAY contain a Peer Type Data
      Item\n   (Section 13.4).\n"
    title: 12.3.  Peer Discovery Signal
  - contents:
    - "12.4.  Peer Offer Signal\n   A Peer Offer Signal MUST be sent by a DLEP modem
      in response to a\n   properly formatted and addressed Peer Discovery Signal\n
      \  (Section 12.3).\n   A Peer Offer Signal MUST be encoded within a UDP packet.
      \ The IP\n   source and destination fields in the packet MUST be set by swapping\n
      \  the values received in the Peer Discovery Signal.  The Peer Offer\n   Signal
      completes the discovery process; see Section 7.1.\n   To construct a Peer Offer
      Signal, the Signal Type value in the Signal\n   Header is set to 2 (see \"Signal
      Type Registration\" (Section 15.2)).\n   The Peer Offer Signal MAY contain a
      Peer Type Data Item\n   (Section 13.4).\n   The Peer Offer Signal MAY contain
      one or more of any of the following\n   Data Items, with different values:\n
      \  o  IPv4 Connection Point (Section 13.2)\n   o  IPv6 Connection Point (Section
      13.3)\n   The IPv4 and IPv6 Connection Point Data Items indicate the unicast\n
      \  address the router MUST use when connecting the DLEP TCP session.\n"
    title: 12.4.  Peer Offer Signal
  - contents:
    - "12.5.  Session Initialization Message\n   A Session Initialization Message
      MUST be sent by a DLEP router as the\n   first Message of the DLEP TCP session.
      \ It is sent by the router\n   after a TCP connect to an address/port combination
      that was obtained\n   either via receipt of a Peer Offer or from a priori configuration.\n
      \  To construct a Session Initialization Message, the Message Type value\n   in
      the Message Header is set to 1 (see \"Message Type Registration\"\n   (Section
      15.3)).\n   The Session Initialization Message MUST contain one of each of the\n
      \  following Data Items:\n   o  Heartbeat Interval (Section 13.5)\n   o  Peer
      Type (Section 13.4)\n   If DLEP extensions are supported, the Session Initialization
      Message\n   MUST contain an Extensions Supported Data Item (Section 13.6).\n
      \  The Session Initialization Message MAY contain one or more of each of\n   the
      following Data Items, with different values and with the Add/Drop\n   (A) flag
      (Section 13) set to 1:\n   o  IPv4 Address (Section 13.8)\n   o  IPv6 Address
      (Section 13.9)\n   o  IPv4 Attached Subnet (Section 13.10)\n   o  IPv6 Attached
      Subnet (Section 13.11)\n   If any optional extensions are supported by the implementation,
      they\n   MUST be enumerated in the Extensions Supported Data Item.  If an\n
      \  Extensions Supported Data Item does not exist in a Session\n   Initialization
      Message, the modem MUST conclude that there is no\n   support for extensions
      in the router.\n   DLEP Heartbeats are not started until receipt of the Session\n
      \  Initialization Response Message (Section 12.6), and therefore\n   implementations
      MUST use their own timeout heuristics for this\n   Message.\n   As an exception
      to the general rule governing an implementation\n   receiving an unrecognized
      Data Item in a Message (see Section 12.1),\n   if a Session Initialization Message
      contains one or more Extensions\n   Supported Data Items announcing support
      for extensions that the\n   implementation does not recognize, then the implementation
      MAY ignore\n   Data Items it does not recognize.\n"
    title: 12.5.  Session Initialization Message
  - contents:
    - "12.6.  Session Initialization Response Message\n   A Session Initialization
      Response Message MUST be sent by a DLEP\n   modem in response to a received
      Session Initialization Message\n   (Section 12.5).\n   To construct a Session
      Initialization Response Message, the Message\n   Type value in the Message Header
      is set to 2 (see \"Message Type\n   Registration\" (Section 15.3)).\n   The
      Session Initialization Response Message MUST contain one of each\n   of the
      following Data Items:\n   o  Status (Section 13.1)\n   o  Peer Type (Section
      13.4)\n   o  Heartbeat Interval (Section 13.5)\n   o  Maximum Data Rate (Receive)
      (Section 13.12)\n   o  Maximum Data Rate (Transmit) (Section 13.13)\n   o  Current
      Data Rate (Receive) (Section 13.14)\n   o  Current Data Rate (Transmit) (Section
      13.15)\n   o  Latency (Section 13.16)\n   The Session Initialization Response
      Message MUST contain one of each\n   of the following Data Items, if the Data
      Item will be used during the\n   lifetime of the session:\n   o  Resources (Section
      13.17)\n   o  Relative Link Quality (Receive) (Section 13.18)\n   o  Relative
      Link Quality (Transmit) (Section 13.19)\n   o  Maximum Transmission Unit (MTU)
      (Section 13.20)\n   If DLEP extensions are supported, the Session Initialization
      Response\n   Message MUST contain an Extensions Supported Data Item\n   (Section
      13.6).\n   The Session Initialization Response Message MAY contain one or more\n
      \  of each of the following Data Items, with different values and with\n   the
      Add/Drop (A) flag (Section 13) set to 1:\n   o  IPv4 Address (Section 13.8)\n
      \  o  IPv6 Address (Section 13.9)\n   o  IPv4 Attached Subnet (Section 13.10)\n
      \  o  IPv6 Attached Subnet (Section 13.11)\n   The Session Initialization Response
      Message completes the DLEP\n   session establishment; the modem should transition
      to the In-Session\n   state when the Message is sent, and the router should
      transition to\n   the In-Session state upon receipt of an acceptable Session\n
      \  Initialization Response Message.\n   All supported metric Data Items MUST
      be included in the Session\n   Initialization Response Message, with default
      values to be used on a\n   session-wide basis.  This can be viewed as the modem
      \"declaring\" all\n   supported metrics at DLEP session initialization.  Receipt
      of any\n   further DLEP Message containing a metric Data Item not included in\n
      \  the Session Initialization Response Message MUST be treated as an\n   error,
      resulting in the termination of the DLEP session between\n   router and modem.\n
      \  If any optional extensions are supported by the modem, they MUST be\n   enumerated
      in the Extensions Supported Data Item.  If an Extensions\n   Supported Data
      Item does not exist in a Session Initialization\n   Response Message, the router
      MUST conclude that there is no support\n   for extensions in the modem.\n   After
      the Session Initialization / Session Initialization Response\n   Messages have
      been successfully exchanged, implementations MUST only\n   use extensions that
      are supported by both DLEP participants; see\n   Section 7.2.\n"
    title: 12.6.  Session Initialization Response Message
  - contents:
    - "12.7.  Session Update Message\n   A Session Update Message MAY be sent by a
      DLEP participant, on a\n   session-wide basis, to indicate local Layer 3 address
      changes and/or\n   metric changes.\n   To construct a Session Update Message,
      the Message Type value in the\n   Message Header is set to 3 (see \"Message
      Type Registration\"\n   (Section 15.3)).\n   The Session Update Message MAY
      contain one or more of each of the\n   following Data Items, with different
      values:\n   o  IPv4 Address (Section 13.8)\n   o  IPv6 Address (Section 13.9)\n
      \  o  IPv4 Attached Subnet (Section 13.10)\n   o  IPv6 Attached Subnet (Section
      13.11)\n   When sent by a modem, the Session Update Message MAY contain one
      of\n   each of the following Data Items:\n   o  Maximum Data Rate (Receive)
      (Section 13.12)\n   o  Maximum Data Rate (Transmit) (Section 13.13)\n   o  Current
      Data Rate (Receive) (Section 13.14)\n   o  Current Data Rate (Transmit) (Section
      13.15)\n   o  Latency (Section 13.16)\n   When sent by a modem, the Session
      Update Message MAY contain one of\n   each of the following Data Items, if the
      Data Item is in use by the\n   session:\n   o  Resources (Section 13.17)\n   o
      \ Relative Link Quality (Receive) (Section 13.18)\n   o  Relative Link Quality
      (Transmit) (Section 13.19)\n   o  Maximum Transmission Unit (MTU) (Section 13.20)\n
      \  If metrics are supplied with the Session Update Message (e.g.,\n   Maximum
      Data Rate), these metrics are considered to be session-wide\n   and therefore
      MUST be applied to all destinations in the information\n   base associated with
      the DLEP session.  This includes destinations\n   for which metrics may have
      been stored based on received Destination\n   Update messages.\n   It should
      be noted that Session Update Messages can be sent by both\n   routers and modems.
      \ For example, the addition of an IPv4 address on\n   the router MAY prompt
      a Session Update Message to its attached\n   modems.  Also, for example, a modem
      that changes its Maximum Data\n   Rate (Receive) for all destinations MAY reflect
      that change via a\n   Session Update Message to its attached router(s).\n   Concerning
      Layer 3 addresses and subnets: if the modem is capable of\n   understanding
      and forwarding this information (via mechanisms not\n   defined by DLEP), the
      update would prompt any remote DLEP-enabled\n   modems to issue a Destination
      Update Message (Section 12.17) to their\n   local routers with the new (or deleted)
      addresses and subnets.\n"
    title: 12.7.  Session Update Message
  - contents:
    - "12.8.  Session Update Response Message\n   A Session Update Response Message
      MUST be sent by a DLEP participant\n   when a Session Update Message (Section
      12.7) is received.\n   To construct a Session Update Response Message, the Message
      Type\n   value in the Message Header is set to 4 (see \"Message Type\n   Registration\"
      (Section 15.3)).\n   The Session Update Response Message MUST contain a Status
      Data Item\n   (Section 13.1).\n"
    title: 12.8.  Session Update Response Message
  - contents:
    - "12.9.  Session Termination Message\n   When a DLEP participant determines that
      the DLEP session needs to be\n   terminated, the participant MUST send (or attempt
      to send) a Session\n   Termination Message.\n   To construct a Session Termination
      Message, the Message Type value in\n   the Message Header is set to 5 (see \"Message
      Type Registration\"\n   (Section 15.3)).\n   The Session Termination Message
      MUST contain a Status Data Item\n   (Section 13.1).\n   It should be noted that
      Session Termination Messages can be sent by\n   both routers and modems.\n"
    title: 12.9.  Session Termination Message
  - contents:
    - "12.10.  Session Termination Response Message\n   A Session Termination Response
      Message MUST be sent by a DLEP\n   participant when a Session Termination Message
      (Section 12.9) is\n   received.\n   To construct a Session Termination Response
      Message, the Message Type\n   value in the Message Header is set to 6 (see \"Message
      Type\n   Registration\" (Section 15.3)).\n   There are no valid Data Items for
      the Session Termination Response\n   Message.\n   Receipt of a Session Termination
      Response Message completes the\n   teardown of the DLEP session; see Section
      7.4.\n"
    title: 12.10.  Session Termination Response Message
  - contents:
    - "12.11.  Destination Up Message\n   Destination Up Messages MAY be sent by a
      modem to inform its attached\n   router of the presence of a new reachable destination.\n
      \  To construct a Destination Up Message, the Message Type value in the\n   Message
      Header is set to 7 (see \"Message Type Registration\"\n   (Section 15.3)).\n
      \  The Destination Up Message MUST contain a MAC Address Data Item\n   (Section
      13.7).\n   The Destination Up Message SHOULD contain one or more of each of
      the\n   following Data Items, with different values:\n   o  IPv4 Address (Section
      13.8)\n   o  IPv6 Address (Section 13.9)\n   The Destination Up Message MAY
      contain one of each of the following\n   Data Items:\n   o  Maximum Data Rate
      (Receive) (Section 13.12)\n   o  Maximum Data Rate (Transmit) (Section 13.13)\n
      \  o  Current Data Rate (Receive) (Section 13.14)\n   o  Current Data Rate (Transmit)
      (Section 13.15)\n   o  Latency (Section 13.16)\n   The Destination Up Message
      MAY contain one of each of the following\n   Data Items, if the Data Item is
      in use by the session:\n   o  Resources (Section 13.17)\n   o  Relative Link
      Quality (Receive) (Section 13.18)\n   o  Relative Link Quality (Transmit) (Section
      13.19)\n   o  Maximum Transmission Unit (MTU) (Section 13.20)\n   The Destination
      Up Message MAY contain one or more of each of the\n   following Data Items,
      with different values:\n   o  IPv4 Attached Subnet (Section 13.10)\n   o  IPv6
      Attached Subnet (Section 13.11)\n   A router receiving a Destination Up Message
      allocates the necessary\n   resources, creating an entry in the information
      base with the\n   specifics (MAC Address, Latency, Data Rate, etc.) of the destination.\n
      \  The information about this destination will persist in the router's\n   information
      base until a Destination Down Message (Section 12.15) is\n   received, indicating
      that the modem has lost contact with the remote\n   node or that the implementation
      transitions to the Session\n   Termination state.\n"
    title: 12.11.  Destination Up Message
  - contents:
    - "12.12.  Destination Up Response Message\n   A router MUST send a Destination
      Up Response Message when a\n   Destination Up Message (Section 12.11) is received.\n
      \  To construct a Destination Up Response Message, the Message Type\n   value
      in the Message Header is set to 8 (see \"Message Type\n   Registration\" (Section
      15.3)).\n   The Destination Up Response Message MUST contain one of each of
      the\n   following Data Items:\n   o  MAC Address (Section 13.7)\n   o  Status
      (Section 13.1)\n   A router that wishes to receive further information concerning
      the\n   destination identified in the corresponding Destination Up Message\n
      \  MUST set the status code of the included Status Data Item to\n   0 'Success';
      see Table 2.\n   If the router has no interest in the destination identified
      in the\n   corresponding Destination Up Message, then it MAY set the status
      code\n   of the included Status Data Item to 1 'Not Interested'.\n   A modem
      receiving a Destination Up Response Message containing a\n   Status Data Item
      with a status code of any value other than\n   0 'Success' MUST NOT send further
      Destination Messages about the\n   destination, e.g., Destination Down (Section
      12.15) or Destination\n   Update (Section 12.17) with the same MAC address.\n"
    title: 12.12.  Destination Up Response Message
  - contents:
    - "12.13.  Destination Announce Message\n   Usually, a modem will discover the
      presence of one or more remote\n   router/modem pairs and announce each destination's
      arrival by sending\n   a corresponding Destination Up Message (Section 12.11)
      to the router.\n   However, there may be times when a router wishes to express
      an\n   interest in a destination that has yet to be announced, typically a\n
      \  multicast destination.  Destination Announce Messages MAY be sent by\n   a
      router to announce such an interest.\n   A Destination Announce Message MAY
      also be sent by a router to\n   request information concerning a destination
      (1) in which the router\n   has previously declined interest, via the 1 'Not
      Interested' status\n   code in a Destination Up Response Message (Section 12.12)
      (see\n   Table 2) or (2) that was previously declared as 'down', via the\n   Destination
      Down Message (Section 12.15).\n   To construct a Destination Announce Message,
      the Message Type value\n   in the Message Header is set to 9 (see \"Message
      Type Registration\"\n   (Section 15.3)).\n   The Destination Announce Message
      MUST contain a MAC Address Data Item\n   (Section 13.7).\n   The Destination
      Announce Message MAY contain zero or more of the\n   following Data Items, with
      different values:\n   o  IPv4 Address (Section 13.8)\n   o  IPv6 Address (Section
      13.9)\n   One of the advantages of implementing DLEP is to leverage the modem's\n
      \  knowledge of the links between remote destinations, allowing routers\n   to
      avoid using probed neighbor discovery techniques; therefore, modem\n   implementations
      SHOULD announce available destinations via the\n   Destination Up Message, rather
      than relying on Destination Announce\n   Messages.\n"
    title: 12.13.  Destination Announce Message
  - contents:
    - "12.14.  Destination Announce Response Message\n   A modem MUST send a Destination
      Announce Response Message when a\n   Destination Announce Message (Section 12.13)
      is received.\n   To construct a Destination Announce Response Message, the Message\n
      \  Type value in the Message Header is set to 10 (see \"Message Type\n   Registration\"
      (Section 15.3)).\n   The Destination Announce Response Message MUST contain
      one of each of\n   the following Data Items:\n   o  MAC Address (Section 13.7)\n
      \  o  Status (Section 13.1)\n   The Destination Announce Response Message MAY
      contain one or more of\n   each of the following Data Items, with different
      values:\n   o  IPv4 Address (Section 13.8)\n   o  IPv6 Address (Section 13.9)\n
      \  o  IPv4 Attached Subnet (Section 13.10)\n   o  IPv6 Attached Subnet (Section
      13.11)\n   The Destination Announce Response Message MAY contain one of each
      of\n   the following Data Items:\n   o  Maximum Data Rate (Receive) (Section
      13.12)\n   o  Maximum Data Rate (Transmit) (Section 13.13)\n   o  Current Data
      Rate (Receive) (Section 13.14)\n   o  Current Data Rate (Transmit) (Section
      13.15)\n   o  Latency (Section 13.16)\n   The Destination Announce Response
      Message MAY contain one of each of\n   the following Data Items, if the Data
      Item is in use by the session:\n   o  Resources (Section 13.17)\n   o  Relative
      Link Quality (Receive) (Section 13.18)\n   o  Relative Link Quality (Transmit)
      (Section 13.19)\n   o  Maximum Transmission Unit (MTU) (Section 13.20)\n   If
      a modem is unable to report information immediately about the\n   requested
      information -- for example, if the destination is not\n   currently reachable
      -- the status code in the Status Data Item MUST\n   be set to 2 'Request Denied';
      see Table 2.\n   After sending a Destination Announce Response Message containing
      a\n   Status Data Item with a status code of 0 'Success', a modem then\n   announces
      changes to the link to the destination via Destination\n   Update Messages.\n
      \  When a successful Destination Announce Response Message is received,\n   the
      router should add knowledge of the available destination to its\n   information
      base.\n"
    title: 12.14.  Destination Announce Response Message
  - contents:
    - "12.15.  Destination Down Message\n   A modem MUST send a Destination Down Message
      to report when a\n   destination (a remote node or a multicast group) is no
      longer\n   reachable.\n   A router MAY send a Destination Down Message to report
      when it\n   no longer requires information concerning a destination.\n   To
      construct a Destination Down Message, the Message Type value in\n   the Message
      Header is set to 11 (see \"Message Type Registration\"\n   (Section 15.3)).\n
      \  The Destination Down Message MUST contain a MAC Address Data Item\n   (Section
      13.7).\n   It should be noted that both modem and router may send a Destination\n
      \  Down Message to their peer, regardless of which participant initially\n   indicated
      the destination to be 'up'.\n"
    title: 12.15.  Destination Down Message
  - contents:
    - "12.16.  Destination Down Response Message\n   A Destination Down Response Message
      MUST be sent by the recipient of\n   a Destination Down Message (Section 12.15)
      to confirm that the\n   relevant data concerning the destination has been removed
      from the\n   information base.\n   To construct a Destination Down Response
      Message, the Message Type\n   value in the Message Header is set to 12 (see
      \"Message Type\n   Registration\" (Section 15.3)).\n   The Destination Down
      Response Message MUST contain one of each of the\n   following Data Items:\n
      \  o  MAC Address (Section 13.7)\n   o  Status (Section 13.1)\n"
    title: 12.16.  Destination Down Response Message
  - contents:
    - "12.17.  Destination Update Message\n   A modem SHOULD send a Destination Update
      Message when it detects some\n   change in the information base for a given
      destination (remote node\n   or multicast group).  Some examples of changes
      that would prompt a\n   Destination Update Message are as follows:\n   o  Change
      in link metrics (e.g., data rates)\n   o  Layer 3 addressing change\n   To construct
      a Destination Update Message, the Message Type value in\n   the Message Header
      is set to 13 (see \"Message Type Registration\"\n   (Section 15.3)).\n   The
      Destination Update Message MUST contain a MAC Address Data Item\n   (Section
      13.7).\n   The Destination Update Message MAY contain one of each of the\n   following
      Data Items:\n   o  Maximum Data Rate (Receive) (Section 13.12)\n   o  Maximum
      Data Rate (Transmit) (Section 13.13)\n   o  Current Data Rate (Receive) (Section
      13.14)\n   o  Current Data Rate (Transmit) (Section 13.15)\n   o  Latency (Section
      13.16)\n   The Destination Update Message MAY contain one of each of the\n   following
      Data Items, if the Data Item is in use by the session:\n   o  Resources (Section
      13.17)\n   o  Relative Link Quality (Receive) (Section 13.18)\n   o  Relative
      Link Quality (Transmit) (Section 13.19)\n   o  Maximum Transmission Unit (MTU)
      (Section 13.20)\n   The Destination Update Message MAY contain one or more of
      each of the\n   following Data Items, with different values:\n   o  IPv4 Address
      (Section 13.8)\n   o  IPv6 Address (Section 13.9)\n   o  IPv4 Attached Subnet
      (Section 13.10)\n   o  IPv6 Attached Subnet (Section 13.11)\n   Metrics supplied
      in this Message overwrite metrics provided in a\n   previously received Session
      Message, Destination Message, or Link\n   Characteristics Message (e.g., Session
      Initialization,\n   Destination Up, Link Characteristics Response).\n   It should
      be noted that this Message has no corresponding response.\n"
    title: 12.17.  Destination Update Message
  - contents:
    - "12.18.  Link Characteristics Request Message\n   The Link Characteristics Request
      Message MAY be sent by a router to\n   request that the modem initiate changes
      for specific characteristics\n   of the link.  The request can reference either
      a real destination\n   (e.g., a remote node) or a logical destination (e.g.,
      a multicast\n   group) within the network.\n   To construct a Link Characteristics
      Request Message, the Message Type\n   value in the Message Header is set to
      14 (see \"Message Type\n   Registration\" (Section 15.3)).\n   The Link Characteristics
      Request Message MUST contain a MAC Address\n   Data Item (Section 13.7).\n   The
      Link Characteristics Request Message MUST also contain at least\n   one of each
      of the following Data Items:\n   o  Current Data Rate (Receive) (Section 13.14)\n
      \  o  Current Data Rate (Transmit) (Section 13.15)\n   o  Latency (Section 13.16)\n
      \  The Link Characteristics Request Message MAY contain either a Current\n   Data
      Rate (Receive) (CDRR) or Current Data Rate (Transmit) (CDRT)\n   Data Item to
      request a different data rate than is currently\n   allocated, a Latency Data
      Item to request that traffic delay on the\n   link not exceed the specified
      value, or both.\n   The router sending a Link Characteristics Request Message
      should be\n   aware that a request may take an extended period of time to complete.\n"
    title: 12.18.  Link Characteristics Request Message
  - contents:
    - "12.19.  Link Characteristics Response Message\n   A modem MUST send a Link
      Characteristics Response Message when a Link\n   Characteristics Request Message
      (Section 12.18) is received.\n   To construct a Link Characteristics Response
      Message, the Message\n   Type value in the Message Header is set to 15 (see
      \"Message Type\n   Registration\" (Section 15.3)).\n   The Link Characteristics
      Response Message MUST contain one of each of\n   the following Data Items:\n
      \  o  MAC Address (Section 13.7)\n   o  Status (Section 13.1)\n   The Link Characteristics
      Response Message SHOULD contain one of each\n   of the following Data Items:\n
      \  o  Maximum Data Rate (Receive) (Section 13.12)\n   o  Maximum Data Rate (Transmit)
      (Section 13.13)\n   o  Current Data Rate (Receive) (Section 13.14)\n   o  Current
      Data Rate (Transmit) (Section 13.15)\n   o  Latency (Section 13.16)\n   The
      Link Characteristics Response Message MAY contain one of each of\n   the following
      Data Items, if the Data Item is in use by the session:\n   o  Resources (Section
      13.17)\n   o  Relative Link Quality (Receive) (Section 13.18)\n   o  Relative
      Link Quality (Transmit) (Section 13.19)\n   o  Maximum Transmission Unit (MTU)
      (Section 13.20)\n   The Link Characteristics Response Message MUST contain a
      complete set\n   of metric Data Items, referencing all metrics declared in the
      Session\n   Initialization Response Message (Section 12.6).  The values in the\n
      \  metric Data Items in the Link Characteristics Response Message MUST\n   reflect
      the link characteristics after the request has been\n   processed.\n   If an
      implementation is not able to alter the characteristics of the\n   link in the
      manner requested, then the status code of the Status Data\n   Item MUST be set
      to 2 'Request Denied'; see Table 2.\n"
    title: 12.19.  Link Characteristics Response Message
  - contents:
    - "12.20.  Heartbeat Message\n   A Heartbeat Message MUST be sent by a DLEP participant
      every\n   N milliseconds, where N is defined in the Heartbeat Interval Data\n
      \  Item (Section 13.5) of the Session Initialization Message\n   (Section 12.5)
      or Session Initialization Response Message\n   (Section 12.6).\n   To construct
      a Heartbeat Message, the Message Type value in the\n   Message Header is set
      to 16 (see \"Message Type Registration\"\n   (Section 15.3)).\n   There are
      no valid Data Items for the Heartbeat Message.\n   The Heartbeat Message is
      used by DLEP participants to detect when a\n   DLEP session peer (either the
      modem or the router) is no longer\n   communicating; see Section 7.3.1.\n"
    title: 12.20.  Heartbeat Message
  title: 12.  DLEP Signals and Messages
- contents:
  - "13.  DLEP Data Items\n   The core DLEP Data Items are as follows:\n   +-------------+-----------------------------------------------------+\n
    \  | Type Code   | Description                                         |\n   +-------------+-----------------------------------------------------+\n
    \  | 0           | Reserved                                            |\n   |
    \            |                                                     |\n   | 1           |
    Status (Section 13.1)                               |\n   |             |                                                     |\n
    \  | 2           | IPv4 Connection Point (Section 13.2)                |\n   |
    \            |                                                     |\n   | 3           |
    IPv6 Connection Point (Section 13.3)                |\n   |             |                                                     |\n
    \  | 4           | Peer Type (Section 13.4)                            |\n   |
    \            |                                                     |\n   | 5           |
    Heartbeat Interval (Section 13.5)                   |\n   |             |                                                     |\n
    \  | 6           | Extensions Supported (Section 13.6)                 |\n   |
    \            |                                                     |\n   | 7           |
    MAC Address (Section 13.7)                          |\n   |             |                                                     |\n
    \  | 8           | IPv4 Address (Section 13.8)                         |\n   |
    \            |                                                     |\n   | 9           |
    IPv6 Address (Section 13.9)                         |\n   |             |                                                     |\n
    \  | 10          | IPv4 Attached Subnet (Section 13.10)                |\n   |
    \            |                                                     |\n   | 11
    \         | IPv6 Attached Subnet (Section 13.11)                |\n   |             |
    \                                                    |\n   | 12          | Maximum
    Data Rate (Receive) (MDRR) (Section 13.12)  |\n   |             |                                                     |\n
    \  | 13          | Maximum Data Rate (Transmit) (MDRT) (Section 13.13) |\n   |
    \            |                                                     |\n   | 14
    \         | Current Data Rate (Receive) (CDRR) (Section 13.14)  |\n   |             |
    \                                                    |\n   | 15          | Current
    Data Rate (Transmit) (CDRT) (Section 13.15) |\n   |             |                                                     |\n
    \  | 16          | Latency (Section 13.16)                             |\n   |
    \            |                                                     |\n   | 17
    \         | Resources (RES) (Section 13.17)                     |\n   |             |
    \                                                    |\n   | 18          | Relative
    Link Quality (Receive) (RLQR)              |\n   |             | (Section 13.18)
    \                                    |\n   |             |                                                     |\n
    \  | 19          | Relative Link Quality (Transmit) (RLQT)             |\n   |
    \            | (Section 13.19)                                     |\n   |             |
    \                                                    |\n   | 20          | Maximum
    Transmission Unit (MTU) (Section 13.20)     |\n   |             |                                                     |\n
    \  | 21-65407    | Unassigned (available for future extensions)        |\n   |
    \            |                                                     |\n   | 65408-65534
    | Reserved for Private Use (available for             |\n   |             | experiments)
    \                                       |\n   |             |                                                     |\n
    \  | 65535       | Reserved                                            |\n   +-------------+-----------------------------------------------------+\n
    \                      Table 1: DLEP Data Item Types\n"
  - contents:
    - "13.1.  Status\n   For the Session Termination Message (Section 12.9), the Status
      Data\n   Item indicates a reason for the termination.  For all response\n   messages,
      the Status Data Item is used to indicate the success or\n   failure of the previously
      received Message.\n   The Status Data Item includes an optional Text field that
      can be used\n   to provide a textual description of the status.  The use of
      the Text\n   field is entirely up to the receiving implementation, e.g., it
      could\n   be output to a log file or discarded.  If no Text field is supplied\n
      \  with the Status Data Item, the Length field MUST be set to 1.\n   The Status
      Data Item contains the following fields:\n    0                   1                   2
      \                  3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
      5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  | Data Item Type                | Length                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  | Status Code   | Text...                                       :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  Data Item Type:  1\n   Length:  1 + Length of Text, in octets.\n   Status
      Code:  One of the status codes defined in Table 2 below.\n   Text:  UTF-8 encoded
      string of Unicode [RFC3629] characters,\n      describing the cause, used for
      implementation-defined purposes.\n      Since this field is used for description
      purposes, implementations\n      SHOULD limit characters in this field to printable
      characters.\n   An implementation MUST NOT assume that the Text field is a\n
      \  NUL-terminated string of printable characters.\n   +----------+-------------+------------------+-----------------------+\n
      \  | Status   | Failure     | Description      | Reason                |\n   |
      Code     | Mode        |                  |                       |\n   +----------+-------------+------------------+-----------------------+\n
      \  | 0        | Continue    | Success          | The Message was       |\n   |
      \         |             |                  | processed             |\n   |          |
      \            |                  | successfully.         |\n   |          |             |
      \                 |                       |\n   | 1        | Continue    | Not
      Interested   | The receiver is not   |\n   |          |             |                  |
      interested in this    |\n   |          |             |                  | Message
      subject,      |\n   |          |             |                  | e.g., in a
      \           |\n   |          |             |                  | Destination
      Up        |\n   |          |             |                  | Response Message
      \     |\n   |          |             |                  | (Section 12.12) to
      \   |\n   |          |             |                  | indicate no further
      \  |\n   |          |             |                  | Messages about the    |\n
      \  |          |             |                  | destination.          |\n   |
      \         |             |                  |                       |\n   | 2
      \       | Continue    | Request Denied   | The receiver refuses  |\n   |          |
      \            |                  | to complete the       |\n   |          |             |
      \                 | request.              |\n   |          |             |                  |
      \                      |\n   | 3        | Continue    | Inconsistent     | One
      or more Data      |\n   |          |             | Data             | Items
      in the Message  |\n   |          |             |                  | describe
      a logically  |\n   |          |             |                  | inconsistent
      state in |\n   |          |             |                  | the network --
      for    |\n   |          |             |                  | example, in the       |\n
      \  |          |             |                  | Destination Up        |\n   |
      \         |             |                  | Message               |\n   |          |
      \            |                  | (Section 12.11) when  |\n   |          |             |
      \                 | an announced subnet   |\n   |          |             |                  |
      clashes with an       |\n   |          |             |                  | existing
      destination  |\n   |          |             |                  | subnet.               |\n
      \  |          |             |                  |                       |\n   |
      4-111    | Continue    | <Unassigned>     | Available for future  |\n   |          |
      \            |                  | extensions.           |\n   |          |             |
      \                 |                       |\n   | 112-127  | Continue    | <Reserved
      for    | Available for         |\n   |          |             | Private Use>
      \    | experiments.          |\n   |          |             |                  |
      \                      |\n   | 128      | Terminate   | Unknown Message  | The
      Message was not   |\n   |          |             |                  | recognized
      by the     |\n   |          |             |                  | implementation.
      \      |\n   |          |             |                  |                       |\n
      \  | 129      | Terminate   | Unexpected       | The Message was not   |\n   |
      \         |             | Message          | expected while the    |\n   |          |
      \            |                  | device was in the     |\n   |          |             |
      \                 | current state, e.g.,  |\n   |          |             |                  |
      a Session             |\n   |          |             |                  | Initialization
      \       |\n   |          |             |                  | Message               |\n
      \  |          |             |                  | (Section 12.5) in     |\n   |
      \         |             |                  | the In-Session state. |\n   |          |
      \            |                  |                       |\n   | 130      | Terminate
      \  | Invalid Data     | One or more Data      |\n   |          |             |
      \                 | Items in the Message  |\n   |          |             |                  |
      are invalid,          |\n   |          |             |                  | unexpected,
      or        |\n   |          |             |                  | incorrectly           |\n
      \  |          |             |                  | duplicated.           |\n   |
      \         |             |                  |                       |\n   | 131
      \     | Terminate   | Invalid          | The destination       |\n   |          |
      \            | Destination      | included in the       |\n   |          |             |
      \                 | Message does not      |\n   |          |             |                  |
      match a previously    |\n   |          |             |                  | announced
      destination |\n   |          |             |                  | -- for example,
      in    |\n   |          |             |                  | the Link              |\n
      \  |          |             |                  | Characteristics       |\n   |
      \         |             |                  | Response Message      |\n   |          |
      \            |                  | (Section 12.19).      |\n   |          |             |
      \                 |                       |\n   | 132      | Terminate   | Timed
      Out        | The session has       |\n   |          |             |                  |
      timed out.            |\n   |          |             |                  |                       |\n
      \  | 133-239  | Terminate   | <Unassigned>     | Available for future  |\n   |
      \         |             |                  | extensions.           |\n   |          |
      \            |                  |                       |\n   | 240-254  | Terminate
      \  | <Reserved for    | Available for         |\n   |          |             |
      Private Use>     | experiments.          |\n   |          |             |                  |
      \                      |\n   | 255      | Terminate   | Shutting Down    | The
      peer is           |\n   |          |             |                  | terminating
      the       |\n   |          |             |                  | session, as it
      is     |\n   |          |             |                  | shutting down.        |\n
      \  +----------+-------------+------------------+-----------------------+\n                        Table
      2: DLEP Status Codes\n"
    title: 13.1.  Status
  - contents:
    - "13.2.  IPv4 Connection Point\n   The IPv4 Connection Point Data Item indicates
      the IPv4 address and,\n   optionally, the TCP port number on the modem available
      for\n   connections.  If provided, the router MUST use this information to\n
      \  initiate the TCP connection to the modem.\n   The IPv4 Connection Point Data
      Item contains the following fields:\n    0                   1                   2
      \                  3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
      5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  | Data Item Type                | Length                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |   Flags       |               IPv4 Address...                 :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  :  ...cont.     |   TCP Port Number (optional)  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  Data Item Type:  2\n   Length:  5 (or 7 if TCP Port Number included).\n   Flags:
      \ Flags field, defined below.\n   IPv4 Address:  The IPv4 address listening
      on the modem.\n   TCP Port Number:  TCP port number on the modem.\n   If the
      Length field is 7, the port number specified MUST be used to\n   establish the
      TCP session.  If the TCP Port Number is omitted, i.e.,\n   the Length field
      is 5, the router MUST use the DLEP well-known port\n   number (Section 15.14)
      to establish the TCP connection.\n   The Flags field is defined as:\n    0 1
      2 3 4 5 6 7\n   +-+-+-+-+-+-+-+-+\n   |  Reserved   |T|\n   +-+-+-+-+-+-+-+-+\n
      \  T:  Use TLS flag, indicating whether the TCP connection to the given\n       address
      and port requires the use of TLS [RFC5246] (1) or\n       not (0).\n   Reserved:
      \ MUST be zero.  Left for future assignment.\n"
    title: 13.2.  IPv4 Connection Point
  - contents:
    - "13.3.  IPv6 Connection Point\n   The IPv6 Connection Point Data Item indicates
      the IPv6 address and,\n   optionally, the TCP port number on the modem available
      for\n   connections.  If provided, the router MUST use this information to\n
      \  initiate the TCP connection to the modem.\n   The IPv6 Connection Point Data
      Item contains the following fields:\n    0                   1                   2
      \                  3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
      5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  | Data Item Type                | Length                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |   Flags       |                IPv6 Address                   :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  :                        IPv6 Address                           :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  :                        IPv6 Address                           :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  :                        IPv6 Address                           :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  :  ...cont.     |   TCP Port Number (optional)  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  Data Item Type:  3\n   Length:  17 (or 19 if TCP Port Number included).\n
      \  Flags:  Flags field, defined below.\n   IPv6 Address:  The IPv6 address listening
      on the modem.\n   TCP Port Number:  TCP port number on the modem.\n   If the
      Length field is 19, the port number specified MUST be used to\n   establish
      the TCP session.  If the TCP Port Number is omitted, i.e.,\n   the Length field
      is 17, the router MUST use the DLEP well-known port\n   number (Section 15.14)
      to establish the TCP connection.\n   The Flags field is defined as:\n    0 1
      2 3 4 5 6 7\n   +-+-+-+-+-+-+-+-+\n   |  Reserved   |T|\n   +-+-+-+-+-+-+-+-+\n
      \  T:  Use TLS flag, indicating whether the TCP connection to the given\n       address
      and port requires the use of TLS [RFC5246] (1) or\n       not (0).\n   Reserved:
      \ MUST be zero.  Left for future assignment.\n"
    title: 13.3.  IPv6 Connection Point
  - contents:
    - "13.4.  Peer Type\n   The Peer Type Data Item is used by the router and modem
      to give\n   additional information as to its type and the properties of the\n
      \  over-the-air control plane.\n   With some devices, access to the shared RF
      medium is strongly\n   controlled.  One example of this would be satellite modems
      -- where\n   protocols, proprietary in nature, have been developed to ensure
      that\n   a given modem has authorization to connect to the shared medium.\n
      \  Another example of this class of modems is governmental/military\n   devices,
      where elaborate mechanisms have been developed to ensure\n   that only authorized
      devices can connect to the shared medium.\n   Contrasting with the above, there
      are modems where no such access\n   control is used.  An example of this class
      of modem would be one that\n   supports the 802.11 ad hoc mode of operation.
      \ The Secured Medium (S)\n   flag is used to indicate if access control is in
      place.\n   The Peer Type Data Item includes a textual description of the peer;\n
      \  it is envisioned that the text will be used for informational\n   purposes
      (e.g., as output in a display command).\n   The Peer Type Data Item contains
      the following fields:\n    0                   1                   2                   3\n
      \   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  | Data Item Type                | Length                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  | Flags         | Description...                                :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  Data Item Type:  4\n   Length:  1 + Length of Description, in octets.\n   Flags:
      \ Flags field, defined below.\n   Description:  UTF-8 encoded string of Unicode
      [RFC3629] characters.\n      For example, a satellite modem might set this variable
      to\n      \"Satellite terminal\".  Since this Data Item is intended to provide\n
      \     additional information for display commands, sending\n      implementations
      SHOULD limit the data to printable characters.\n   An implementation MUST NOT
      assume that the Description field is a\n   NUL-terminated string of printable
      characters.\n   The Flags field is defined as:\n    0 1 2 3 4 5 6 7\n   +-+-+-+-+-+-+-+-+\n
      \  |  Reserved   |S|\n   +-+-+-+-+-+-+-+-+\n   S:  Secured Medium flag, used
      by a modem to indicate whether the\n       shared RF medium implements access
      control (1) or not (0).  The\n       Secured Medium flag only has meaning in
      Signals and Messages sent\n       by a modem.\n   Reserved:  MUST be zero.  Left
      for future assignment.\n"
    title: 13.4.  Peer Type
  - contents:
    - "13.5.  Heartbeat Interval\n   The Heartbeat Interval Data Item is used to specify
      a period in\n   milliseconds for Heartbeat Messages (Section 12.20).\n   The
      Heartbeat Interval Data Item contains the following fields:\n    0                   1
      \                  2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
      5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  | Data Item Type                | Length                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                       Heartbeat Interval                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  Data Item Type:  5\n   Length:  4\n   Heartbeat Interval:  The interval in
      milliseconds, expressed as a\n      32-bit unsigned integer, for Heartbeat Messages.
      \ This value\n      MUST NOT be 0.\n   As mentioned before, receipt of any valid
      DLEP Message MUST reset the\n   heartbeat interval timer (i.e., valid DLEP Messages
      take the place\n   of, and obviate the need for, additional Heartbeat Messages).\n"
    title: 13.5.  Heartbeat Interval
  - contents:
    - "13.6.  Extensions Supported\n   The Extensions Supported Data Item is used
      by the router and modem to\n   negotiate additional optional functionality they
      are willing to\n   support.  The Extensions List is a concatenation of the types
      of each\n   supported extension, found in the IANA registry titled \"Extension\n
      \  Type Values\".  Each Extension Type definition includes which\n   additional
      Signals and Data Items are supported.\n   The Extensions Supported Data Item
      contains the following fields:\n    0                   1                   2
      \                  3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
      5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  | Data Item Type                | Length                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  | Extensions List...                                            :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  Data Item Type:  6\n   Length:  Length of the Extensions List in octets.
      \ This is twice (2x)\n      the number of extensions.\n   Extensions List:  A
      list of extensions supported, identified by their\n      2-octet values as listed
      in the \"Extension Type Values\" registry.\n"
    title: 13.6.  Extensions Supported
  - contents:
    - "13.7.  MAC Address\n   The MAC Address Data Item contains the address of the
      destination on\n   the remote node.\n   DLEP can support MAC addresses in either
      EUI-48 or EUI-64 format\n   (\"EUI\" stands for \"Extended Unique Identifier\"),
      with the restriction\n   that all MAC addresses for a given DLEP session MUST
      be in the same\n   format and MUST be consistent with the MAC address format
      of the\n   connected modem (e.g., if the modem is connected to the router with\n
      \  an EUI-48 MAC, all destination addresses via that modem MUST be\n   expressed
      in EUI-48 format).\n   Examples of a virtual destination would be (1) a multicast
      MAC\n   address or (2) the broadcast MAC address (FF:FF:FF:FF:FF:FF).\n    0
      \                  1                   2                   3\n    0 1 2 3 4
      5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  | Data Item Type                | Length                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                      MAC Address                              :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  :                MAC Address    :     (if EUI-64 used)          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  Data Item Type:  7\n   Length:  6 for EUI-48 format or 8 for EUI-64 format.\n
      \  MAC Address:  MAC address of the destination.\n"
    title: 13.7.  MAC Address
  - contents:
    - "13.8.  IPv4 Address\n   When included in the Session Update Message, this Data
      Item contains\n   the IPv4 address of the peer.  When included in Destination
      Messages,\n   this Data Item contains the IPv4 address of the destination.  In\n
      \  either case, the Data Item also contains an indication of whether\n   this
      is (1) a new or existing address or (2) a deletion of a\n   previously known
      address.\n   The IPv4 Address Data Item contains the following fields:\n    0
      \                  1                   2                   3\n    0 1 2 3 4
      5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  | Data Item Type                | Length                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  | Flags         | IPv4 Address                                  :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  :    ...cont.   |\n   +-+-+-+-+-+-+-+-+\n   Data Item Type:  8\n   Length:
      \ 5\n   Flags:  Flags field, defined below.\n   IPv4 Address:  The IPv4 address
      of the destination or peer.\n   The Flags field is defined as:\n    0 1 2 3
      4 5 6 7\n   +-+-+-+-+-+-+-+-+\n   |  Reserved   |A|\n   +-+-+-+-+-+-+-+-+\n
      \  A:  Add/Drop flag, indicating whether this is a new or existing\n       address
      (1) or a withdrawal of an address (0).\n   Reserved:  MUST be zero.  Reserved
      for future use.\n"
    - contents:
      - "13.8.1.  IPv4 Address Processing\n   Processing of the IPv4 Address Data
        Item MUST be done within the\n   context of the DLEP peer session on which
        it is presented.\n   The handling of erroneous or logically inconsistent conditions\n
        \  depends upon the type of the message that contains the Data Item,\n   as
        follows:\n   If the containing message is a Session Message, e.g., a Session\n
        \  Initialization Message (Section 12.5) or Session Update Message\n   (Section
        12.7), the receiver of inconsistent information MUST issue a\n   Session Termination
        Message (Section 12.9) containing a Status Data\n   Item (Section 13.1) with
        status code set to 130 'Invalid Data' and\n   transition to the Session Termination
        state.  Examples of such\n   conditions are:\n   o  An address Drop operation
        referencing an address that is not\n      associated with the peer in the
        current session.\n   o  An address Add operation referencing an address that
        has already\n      been added to the peer in the current session.\n   If the
        containing message is a Destination Message, e.g., a\n   Destination Up Message
        (Section 12.11) or Destination Update Message\n   (Section 12.17), the receiver
        of inconsistent information MAY issue\n   the appropriate response message
        containing a Status Data Item with\n   status code set to 3 'Inconsistent
        Data' but MUST continue with\n   session processing.  Examples of such conditions
        are:\n   o  An address Add operation referencing an address that has already\n
        \     been added to the destination in the current session.\n   o  An address
        Add operation referencing an address that is associated\n      with a different
        destination or the peer in the current session.\n   o  An address Add operation
        referencing an address that makes no\n      sense -- for example, defined
        as not forwardable in [RFC6890].\n   o  An address Drop operation referencing
        an address that is not\n      associated with the destination in the current
        session.\n   If no response message is appropriate -- for example, the Destination\n
        \  Update Message -- then the implementation MUST continue with session\n
        \  processing.\n   Modems that do not track IPv4 addresses MUST silently ignore
        IPv4\n   Address Data Items.\n"
      title: 13.8.1.  IPv4 Address Processing
    title: 13.8.  IPv4 Address
  - contents:
    - "13.9.  IPv6 Address\n   When included in the Session Update Message, this Data
      Item contains\n   the IPv6 address of the peer.  When included in Destination
      Messages,\n   this Data Item contains the IPv6 address of the destination.  In\n
      \  either case, the Data Item also contains an indication of whether\n   this
      is (1) a new or existing address or (2) a deletion of a\n   previously known
      address.\n   The IPv6 Address Data Item contains the following fields:\n    0
      \                  1                   2                   3\n    0 1 2 3 4
      5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  | Data Item Type                | Length                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  | Flags         | IPv6 Address                                  :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  :                        IPv6 Address                           :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  :                        IPv6 Address                           :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  :                        IPv6 Address                           :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  : IPv6 Address  |\n   +-+-+-+-+-+-+-+-+\n   Data Item Type:  9\n   Length:
      \ 17\n   Flags:  Flags field, defined below.\n   IPv6 Address:  The IPv6 address
      of the destination or peer.\n   The Flags field is defined as:\n    0 1 2 3
      4 5 6 7\n   +-+-+-+-+-+-+-+-+\n   |  Reserved   |A|\n   +-+-+-+-+-+-+-+-+\n
      \  A:  Add/Drop flag, indicating whether this is a new or existing\n       address
      (1) or a withdrawal of an address (0).\n   Reserved:  MUST be zero.  Reserved
      for future use.\n"
    - contents:
      - "13.9.1.  IPv6 Address Processing\n   Processing of the IPv6 Address Data
        Item MUST be done within the\n   context of the DLEP peer session on which
        it is presented.\n   The handling of erroneous or logically inconsistent conditions\n
        \  depends upon the type of the message that contains the Data Item,\n   as
        follows:\n   If the containing message is a Session Message, e.g., a Session\n
        \  Initialization Message (Section 12.5) or Session Update Message\n   (Section
        12.7), the receiver of inconsistent information MUST issue a\n   Session Termination
        Message (Section 12.9) containing a Status Data\n   Item (Section 13.1) with
        status code set to 130 'Invalid Data' and\n   transition to the Session Termination
        state.  Examples of such\n   conditions are:\n   o  An address Drop operation
        referencing an address that is not\n      associated with the peer in the
        current session.\n   o  An address Add operation referencing an address that
        has already\n      been added to the peer in the current session.\n   If the
        containing message is a Destination Message, e.g., a\n   Destination Up Message
        (Section 12.11) or Destination Update Message\n   (Section 12.17), the receiver
        of inconsistent information MAY issue\n   the appropriate response message
        containing a Status Data Item with\n   status code set to 3 'Inconsistent
        Data' but MUST continue with\n   session processing.  Examples of such conditions
        are:\n   o  An address Add operation referencing an address that has already\n
        \     been added to the destination in the current session.\n   o  An address
        Add operation referencing an address that is associated\n      with a different
        destination or the peer in the current session.\n   o  An address Add operation
        referencing an address that makes no\n      sense -- for example, defined
        as not forwardable in [RFC6890].\n   o  An address Drop operation referencing
        an address that is not\n      associated with the destination in the current
        session.\n   If no response message is appropriate -- for example, the Destination\n
        \  Update Message -- then the implementation MUST continue with session\n
        \  processing.\n   Modems that do not track IPv6 addresses MUST silently ignore
        IPv6\n   Address Data Items.\n"
      title: 13.9.1.  IPv6 Address Processing
    title: 13.9.  IPv6 Address
  - contents:
    - "13.10.  IPv4 Attached Subnet\n   The DLEP IPv4 Attached Subnet Data Item allows
      a device to declare\n   that it has an IPv4 subnet (e.g., a stub network) attached,
      that it\n   has become aware of an IPv4 subnet being present at a remote\n   destination,
      or that it has become aware of the loss of a subnet at\n   the remote destination.\n
      \  The DLEP IPv4 Attached Subnet Data Item contains the following\n   fields:\n
      \   0                   1                   2                   3\n    0 1 2
      3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  | Data Item Type                | Length                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |  Flags        |          IPv4 Attached Subnet                 :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  :    ...cont.   |Prefix Length  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  Data Item Type:  10\n   Length:  6\n   Flags:  Flags field, defined below.\n
      \  IPv4 Attached Subnet:  The IPv4 subnet reachable at the destination.\n   Prefix
      Length:  Length of the prefix (0-32) for the IPv4 subnet.  A\n      prefix length
      outside the specified range MUST be considered as\n      invalid.\n   The Flags
      field is defined as:\n    0 1 2 3 4 5 6 7\n   +-+-+-+-+-+-+-+-+\n   |  Reserved
      \  |A|\n   +-+-+-+-+-+-+-+-+\n   A:  Add/Drop flag, indicating whether this
      is a new or existing\n       subnet address (1) or a withdrawal of a subnet
      address (0).\n   Reserved:  MUST be zero.  Reserved for future use.\n"
    - contents:
      - "13.10.1.  IPv4 Attached Subnet Processing\n   Processing of the IPv4 Attached
        Subnet Data Item MUST be done within\n   the context of the DLEP peer session
        on which it is presented.\n   If the containing message is a Session Message,
        e.g., a Session\n   Initialization Message (Section 12.5) or Session Update
        Message\n   (Section 12.7), the receiver of inconsistent information MUST
        issue a\n   Session Termination Message (Section 12.9) containing a Status
        Data\n   Item (Section 13.1) with status code set to 130 'Invalid Data' and\n
        \  transition to the Session Termination state.  Examples of such\n   conditions
        are:\n   o  A subnet Drop operation referencing a subnet that is not\n      associated
        with the peer in the current session.\n   o  A subnet Add operation referencing
        a subnet that has already been\n      added to the peer in the current session.\n
        \  If the containing message is a Destination Message, e.g., a\n   Destination
        Up Message (Section 12.11) or Destination Update Message\n   (Section 12.17),
        the receiver of inconsistent information MAY issue\n   the appropriate response
        message containing a Status Data Item with\n   status code set to 3 'Inconsistent
        Data' but MUST continue with\n   session processing.  Examples of such conditions
        are:\n   o  A subnet Add operation referencing a subnet that has already been\n
        \     added to the destination in the current session.\n   o  A subnet Add
        operation referencing a subnet that is associated\n      with a different
        destination in the current session.\n   o  A subnet Add operation referencing
        a subnet that makes no sense --\n      for example, defined as not forwardable
        in [RFC6890].\n   o  A subnet Drop operation referencing a subnet that is
        not\n      associated with the destination in the current session.\n   If
        no response message is appropriate -- for example, the Destination\n   Update
        Message -- then the implementation MUST continue with session\n   processing.\n
        \  Modems that do not track IPv4 subnets MUST silently ignore IPv4\n   Attached
        Subnet Data Items.\n"
      title: 13.10.1.  IPv4 Attached Subnet Processing
    title: 13.10.  IPv4 Attached Subnet
  - contents:
    - "13.11.  IPv6 Attached Subnet\n   The DLEP IPv6 Attached Subnet Data Item allows
      a device to declare\n   that it has an IPv6 subnet (e.g., a stub network) attached,
      that it\n   has become aware of an IPv6 subnet being present at a remote\n   destination,
      or that it has become aware of the loss of a subnet at\n   the remote destination.\n
      \  The DLEP IPv6 Attached Subnet Data Item contains the following\n   fields:\n
      \   0                   1                   2                   3\n    0 1 2
      3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  | Data Item Type                | Length                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |   Flags       |         IPv6 Attached Subnet                  :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  :                   IPv6 Attached Subnet                        :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  :                   IPv6 Attached Subnet                        :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  :                   IPv6 Attached Subnet                        :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  :    ...cont.   | Prefix Length |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  Data Item Type:  11\n   Length:  18\n   Flags:  Flags field, defined below.\n
      \  IPv6 Attached Subnet:  The IPv6 subnet reachable at the destination.\n   Prefix
      Length:  Length of the prefix (0-128) for the IPv6 subnet.  A\n      prefix
      length outside the specified range MUST be considered as\n      invalid.\n   The
      Flags field is defined as:\n    0 1 2 3 4 5 6 7\n   +-+-+-+-+-+-+-+-+\n   |
      \ Reserved   |A|\n   +-+-+-+-+-+-+-+-+\n   A:  Add/Drop flag, indicating whether
      this is a new or existing\n       subnet address (1) or a withdrawal of a subnet
      address (0).\n   Reserved:  MUST be zero.  Reserved for future use.\n"
    - contents:
      - "13.11.1.  IPv6 Attached Subnet Processing\n   Processing of the IPv6 Attached
        Subnet Data Item MUST be done within\n   the context of the DLEP peer session
        on which it is presented.\n   If the containing message is a Session Message,
        e.g., a Session\n   Initialization Message (Section 12.5) or Session Update
        Message\n   (Section 12.7), the receiver of inconsistent information MUST
        issue a\n   Session Termination Message (Section 12.9) containing a Status
        Data\n   Item (Section 13.1) with status code set to 130 'Invalid Data' and\n
        \  transition to the Session Termination state.  Examples of such\n   conditions
        are:\n   o  A subnet Drop operation referencing a subnet that is not\n      associated
        with the peer in the current session.\n   o  A subnet Add operation referencing
        a subnet that has already been\n      added to the peer in the current session.\n
        \  If the containing message is a Destination Message, e.g., a\n   Destination
        Up Message (Section 12.11) or Destination Update Message\n   (Section 12.17),
        the receiver of inconsistent information MAY issue\n   the appropriate response
        message containing a Status Data Item with\n   status code set to 3 'Inconsistent
        Data' but MUST continue with\n   session processing.  Examples of such conditions
        are:\n   o  A subnet Add operation referencing a subnet that has already been\n
        \     added to the destination in the current session.\n   o  A subnet Add
        operation referencing a subnet that is associated\n      with a different
        destination in the current session.\n   o  A subnet Add operation referencing
        a subnet that makes no sense --\n      for example, defined as not forwardable
        in [RFC6890].\n   o  A subnet Drop operation referencing a subnet that is
        not\n      associated with the destination in the current session.\n   If
        no response message is appropriate -- for example, the Destination\n   Update
        Message -- then the implementation MUST continue with session\n   processing.\n
        \  Modems that do not track IPv6 subnets MUST silently ignore IPv6\n   Attached
        Subnet Data Items.\n"
      title: 13.11.1.  IPv6 Attached Subnet Processing
    title: 13.11.  IPv6 Attached Subnet
  - contents:
    - "13.12.  Maximum Data Rate (Receive)\n   The Maximum Data Rate (Receive) (MDRR)
      Data Item is used to indicate\n   the maximum theoretical data rate, in bits
      per second (bps), that can\n   be achieved while receiving data on the link.\n
      \  The Maximum Data Rate (Receive) Data Item contains the following\n   fields:\n
      \   0                   1                   2                   3\n    0 1 2
      3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  | Data Item Type                | Length                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                        MDRR (bps)                             :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  :                        MDRR (bps)                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  Data Item Type:  12\n   Length:  8\n   Maximum Data Rate (Receive):  A 64-bit
      unsigned integer, representing\n      the maximum theoretical data rate, in
      bits per second, that can be\n      achieved while receiving on the link.\n"
    title: 13.12.  Maximum Data Rate (Receive)
  - contents:
    - "13.13.  Maximum Data Rate (Transmit)\n   The Maximum Data Rate (Transmit) (MDRT)
      Data Item is used to indicate\n   the maximum theoretical data rate, in bits
      per second, that can be\n   achieved while transmitting data on the link.\n
      \  The Maximum Data Rate (Transmit) Data Item contains the following\n   fields:\n
      \   0                   1                   2                   3\n    0 1 2
      3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  | Data Item Type                | Length                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                        MDRT (bps)                             :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  :                        MDRT (bps)                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  Data Item Type:  13\n   Length:  8\n   Maximum Data Rate (Transmit):  A 64-bit
      unsigned integer,\n      representing the maximum theoretical data rate, in
      bits per\n      second, that can be achieved while transmitting on the link.\n"
    title: 13.13.  Maximum Data Rate (Transmit)
  - contents:
    - "13.14.  Current Data Rate (Receive)\n   The Current Data Rate (Receive) (CDRR)
      Data Item is used to indicate\n   the rate at which the link is currently operating
      for receiving\n   traffic.\n   When used in the Link Characteristics Request
      Message\n   (Section 12.18), Current Data Rate (Receive) represents the desired\n
      \  receive rate, in bits per second, on the link.\n   The Current Data Rate
      (Receive) Data Item contains the following\n   fields:\n    0                   1
      \                  2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
      5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  | Data Item Type                | Length                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                        CDRR (bps)                             :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  :                        CDRR (bps)                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  Data Item Type:  14\n   Length:  8\n   Current Data Rate (Receive):  A 64-bit
      unsigned integer, representing\n      the current data rate, in bits per second,
      that can currently be\n      achieved while receiving traffic on the link.\n
      \  If there is no distinction between Current Data Rate (Receive) and\n   Maximum
      Data Rate (Receive) (Section 13.12), Current Data Rate\n   (Receive) MUST be
      set equal to Maximum Data Rate (Receive).  Current\n   Data Rate (Receive) MUST
      NOT exceed Maximum Data Rate (Receive).\n"
    title: 13.14.  Current Data Rate (Receive)
  - contents:
    - "13.15.  Current Data Rate (Transmit)\n   The Current Data Rate (Transmit) (CDRT)
      Data Item is used to indicate\n   the rate at which the link is currently operating
      for transmitting\n   traffic.\n   When used in the Link Characteristics Request
      Message\n   (Section 12.18), Current Data Rate (Transmit) represents the desired\n
      \  transmit rate, in bits per second, on the link.\n   The Current Data Rate
      (Transmit) Data Item contains the following\n   fields:\n    0                   1
      \                  2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
      5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  | Data Item Type                | Length                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                        CDRT (bps)                             :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  :                        CDRT (bps)                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  Data Item Type:  15\n   Length:  8\n   Current Data Rate (Transmit):  A 64-bit
      unsigned integer,\n      representing the current data rate, in bits per second,
      that can\n      currently be achieved while transmitting traffic on the link.\n
      \  If there is no distinction between Current Data Rate (Transmit) and\n   Maximum
      Data Rate (Transmit) (Section 13.13), Current Data Rate\n   (Transmit) MUST
      be set equal to Maximum Data Rate (Transmit).\n   Current Data Rate (Transmit)
      MUST NOT exceed Maximum Data Rate\n   (Transmit).\n"
    title: 13.15.  Current Data Rate (Transmit)
  - contents:
    - "13.16.  Latency\n   The Latency Data Item is used to indicate the amount of
      latency, in\n   microseconds, on the link.\n   The Latency value is reported
      as transmission delay.  The calculation\n   of latency is implementation dependent.
      \ For example, the latency may\n   be a running average calculated from the
      internal queuing.\n   The Latency Data Item contains the following fields:\n
      \   0                   1                   2                   3\n    0 1 2
      3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  | Data Item Type                | Length                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                            Latency                            :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  :                            Latency                            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  Data Item Type:  16\n   Length:  8\n   Latency:  A 64-bit unsigned integer,
      representing the transmission\n      delay, in microseconds, that a packet encounters
      as it is\n      transmitted over the link.\n"
    title: 13.16.  Latency
  - contents:
    - "13.17.  Resources\n   The Resources (RES) Data Item is used to indicate the
      amount of\n   finite resources available for data transmission and reception
      at the\n   destination as a percentage, with 0 meaning 'no resources remaining'\n
      \  and 100 meaning 'a full supply', assuming that when Resources reaches\n   0
      data transmission and/or reception will cease.\n   An example of such resources
      is battery life, but this could also\n   include resources such as available
      memory for queuing, or CPU idle\n   percentage.  The specific criteria to be
      used for this metric is out\n   of scope for this specification and is implementation
      specific.\n   This Data Item is designed to be used as an indication of some\n
      \  capability of the modem and/or router at the destination.\n   The Resources
      Data Item contains the following fields:\n    0                   1                   2
      \                  3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
      5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  | Data Item Type                | Length                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |     RES       |\n   +-+-+-+-+-+-+-+-+\n   Data Item Type:  17\n   Length:
      \ 1\n   Resources:  An 8-bit unsigned integer percentage, 0-100, representing\n
      \     the amount of resources available.  Any value greater than 100\n      MUST
      be considered as invalid.\n   If a device cannot calculate Resources, this Data
      Item MUST NOT\n   be issued.\n"
    title: 13.17.  Resources
  - contents:
    - "13.18.  Relative Link Quality (Receive)\n   The Relative Link Quality (Receive)
      (RLQR) Data Item is used to\n   indicate the quality of the link to a destination
      for receiving\n   traffic, with 0 meaning 'worst quality' and 100 meaning 'best\n
      \  quality'.\n   Quality in this context is defined as an indication of the
      stability\n   of a link for reception; a destination with high Relative Link\n
      \  Quality (Receive) is expected to have generally stable DLEP metrics,\n   and
      the metrics of a destination with low Relative Link Quality\n   (Receive) can
      be expected to rapidly fluctuate over a wide range.\n   The Relative Link Quality
      (Receive) Data Item contains the following\n   fields:\n    0                   1
      \                  2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
      5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  | Data Item Type                | Length                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |     RLQR      |\n   +-+-+-+-+-+-+-+-+\n   Data Item Type:  18\n   Length:
      \ 1\n   Relative Link Quality (Receive):  A non-dimensional unsigned 8-bit\n
      \     integer, 0-100, representing relative quality of the link for\n      receiving
      traffic.  Any value greater than 100 MUST be considered\n      as invalid.\n
      \  If a device cannot calculate Relative Link Quality (Receive), this\n   Data
      Item MUST NOT be issued.\n"
    title: 13.18.  Relative Link Quality (Receive)
  - contents:
    - "13.19.  Relative Link Quality (Transmit)\n   The Relative Link Quality (Transmit)
      (RLQT) Data Item is used to\n   indicate the quality of the link to a destination
      for transmitting\n   traffic, with 0 meaning 'worst quality' and 100 meaning
      'best\n   quality'.\n   Quality in this context is defined as an indication
      of the stability\n   of a link for transmission; a destination with high Relative
      Link\n   Quality (Transmit) is expected to have generally stable DLEP metrics,\n
      \  and the metrics of a destination with low Relative Link Quality\n   (Transmit)
      can be expected to rapidly fluctuate over a wide range.\n   The Relative Link
      Quality (Transmit) Data Item contains the following\n   fields:\n    0                   1
      \                  2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
      5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  | Data Item Type                | Length                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |     RLQT      |\n   +-+-+-+-+-+-+-+-+\n   Data Item Type:  19\n   Length:
      \ 1\n   Relative Link Quality (Transmit):  A non-dimensional unsigned 8-bit\n
      \     integer, 0-100, representing relative quality of the link for\n      transmitting
      traffic.  Any value greater than 100 MUST be\n      considered as invalid.\n
      \  If a device cannot calculate Relative Link Quality (Transmit), this\n   Data
      Item MUST NOT be issued.\n"
    title: 13.19.  Relative Link Quality (Transmit)
  - contents:
    - "13.20.  Maximum Transmission Unit (MTU)\n   The Maximum Transmission Unit (MTU)
      Data Item is used to indicate the\n   maximum size, in octets, of an IP packet
      that can be transmitted\n   without fragmentation, including headers, but excluding
      any\n   lower-layer headers.\n   The Maximum Transmission Unit Data Item contains
      the following\n   fields:\n    0                   1                   2                   3\n
      \   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  | Data Item Type                | Length                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |             MTU               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  Data Item Type:  20\n   Length:  2\n   Maximum Transmission Unit:  The maximum
      size, in octets, of an\n      IP packet that can be transmitted without fragmentation,
      including\n      headers, but excluding any lower-layer headers.\n   If a device
      cannot calculate Maximum Transmission Unit, this Data\n   Item MUST NOT be issued.\n"
    title: 13.20.  Maximum Transmission Unit (MTU)
  title: 13.  DLEP Data Items
- contents:
  - "14.  Security Considerations\n   The potential security concerns when using DLEP
    are as follows:\n   1.  An attacker might pretend to be a DLEP participant, either
    at\n       DLEP session initialization or by injection of DLEP Messages once\n
    \      a session has been established.\n   2.  DLEP Data Items could be altered
    by an attacker, causing the\n       receiving implementation to inappropriately
    alter its information\n       base concerning network status.\n   3.  An attacker
    could join an unsecured radio network and inject\n       over-the-air signals
    that maliciously influence the information\n       reported by a DLEP modem, causing
    a router to forward traffic to\n       an inappropriate destination.\n   The implications
    of attacks on DLEP peers are directly proportional\n   to the extent to which
    DLEP data is used within the control plane.\n   While the use of DLEP data in
    other control-plane components is out\n   of scope for this document, as an example,
    if DLEP statistics are\n   incorporated into route cost calculations, adversaries
    masquerading\n   as a DLEP peer and injecting malicious data via DLEP could cause\n
    \  suboptimal route selection, adversely impacting network performance.\n   Similar
    issues can arise if DLEP data is used as an input to policing\n   algorithms --
    injection of malicious data via DLEP can cause those\n   policing algorithms to
    make incorrect decisions, degrading network\n   throughput.\n   For these reasons,
    security of the DLEP transport must be considered\n   at both the transport layer
    and Layer 2.\n   At the transport layer, when TLS is in use, each peer SHOULD
    check\n   the validity of credentials presented by the other peer during TLS\n
    \  session establishment.  Implementations following the \"dedicated\n   deployments\"
    model attempting to use TLS MAY (1) need to consider the\n   use of pre-shared
    keys for credentials, (2) provide specialized\n   techniques for peer identity
    validation, and (3) refer to [RFC5487]\n   for additional details.  Implementations
    following the \"networked\n   deployment\" model described in \"Implementation
    Scenarios\" (Section 4)\n   SHOULD refer to [RFC7525] for additional details.\n
    \  At Layer 2, since DLEP is restricted to operation over a single\n   (possibly
    logical) hop, implementations SHOULD also secure the\n   Layer 2 link.  Examples
    of technologies that can be deployed to\n   secure the Layer 2 link include [IEEE-802.1AE]
    and [IEEE-802.1X].\n   By examining the Secured Medium flag in the Peer Type Data
    Item\n   (Section 13.4), a router can decide if it is able to trust the\n   information
    supplied via a DLEP modem.  If this is not the case, then\n   the router SHOULD
    consider restricting the size of attached subnets,\n   announced in IPv4 Attached
    Subnet Data Items (Section 13.10) and/or\n   IPv6 Attached Subnet Data Items (Section
    13.11), that are considered\n   for route selection.\n   To avoid potential denial-of-service
    attacks, it is RECOMMENDED that\n   implementations using the Peer Discovery mechanism
    (1) maintain an\n   information base of hosts that persistently fail Session\n
    \  Initialization, even though those hosts have provided an acceptable\n   Peer
    Discovery Signal and (2) ignore any subsequent Peer Discovery\n   Signals from
    such hosts.\n   This specification does not address security of the data plane,
    as it\n   (the data plane) is not affected, and standard security procedures\n
    \  can be employed.\n"
  title: 14.  Security Considerations
- contents:
  - '15.  IANA Considerations

    '
  - contents:
    - "15.1.  Registrations\n   IANA has created a new protocol registry for the Dynamic
      Link\n   Exchange Protocol (DLEP).  The remainder of this section details the\n
      \  new DLEP-specific registries.\n"
    title: 15.1.  Registrations
  - contents:
    - "15.2.  Signal Type Registrations\n   IANA has created a new DLEP registry,
      named \"Signal Type Values\".\n   The following table provides initial registry
      values and the\n   policies, as defined by [RFC5226], that apply to the registry:\n
      \         +--------------+--------------------------------------+\n          |
      Type Code    | Description/Policy                   |\n          +--------------+--------------------------------------+\n
      \         | 0            | Reserved                             |\n          |
      1            | Peer Discovery Signal                |\n          | 2            |
      Peer Offer Signal                    |\n          | 3-65519      | Unassigned
      / Specification Required  |\n          | 65520-65534  | Reserved for Private
      Use             |\n          | 65535        | Reserved                             |\n
      \         +--------------+--------------------------------------+\n"
    title: 15.2.  Signal Type Registrations
  - contents:
    - "15.3.  Message Type Registrations\n   IANA has created a new DLEP registry,
      named \"Message Type Values\".\n   The following table provides initial registry
      values and the\n   policies, as defined by [RFC5226], that apply to the registry:\n
      \       +--------------+------------------------------------------+\n        |
      Type Code    | Description/Policy                       |\n        +--------------+------------------------------------------+\n
      \       | 0            | Reserved                                 |\n        |
      \             |                                          |\n        | 1            |
      Session Initialization Message           |\n        |              |                                          |\n
      \       | 2            | Session Initialization Response Message  |\n        |
      \             |                                          |\n        | 3            |
      Session Update Message                   |\n        |              |                                          |\n
      \       | 4            | Session Update Response Message          |\n        |
      \             |                                          |\n        | 5            |
      Session Termination Message              |\n        |              |                                          |\n
      \       | 6            | Session Termination Response Message     |\n        |
      \             |                                          |\n        | 7            |
      Destination Up Message                   |\n        |              |                                          |\n
      \       | 8            | Destination Up Response Message          |\n        |
      \             |                                          |\n        | 9            |
      Destination Announce Message             |\n        |              |                                          |\n
      \       | 10           | Destination Announce Response Message    |\n        |
      \             |                                          |\n        | 11           |
      Destination Down Message                 |\n        |              |                                          |\n
      \       | 12           | Destination Down Response Message        |\n        |
      \             |                                          |\n        | 13           |
      Destination Update Message               |\n        |              |                                          |\n
      \       | 14           | Link Characteristics Request Message     |\n        |
      \             |                                          |\n        | 15           |
      Link Characteristics Response Message    |\n        |              |                                          |\n
      \       | 16           | Heartbeat Message                        |\n        |
      \             |                                          |\n        | 17-65519
      \    | Unassigned / Specification Required      |\n        |              |
      \                                         |\n        | 65520-65534  | Reserved
      for Private Use                 |\n        |              |                                          |\n
      \       | 65535        | Reserved                                 |\n        +--------------+------------------------------------------+\n"
    title: 15.3.  Message Type Registrations
  - contents:
    - "15.4.  DLEP Data Item Registrations\n   IANA has created a new DLEP registry,
      named \"Data Item Type Values\".\n   The following table provides initial registry
      values and the\n   policies, as defined by [RFC5226], that apply to the registry:\n
      \    +-------------------+------------------------------------------+\n     |
      Type Code         | Description/Policy                       |\n     +-------------------+------------------------------------------+\n
      \    | 0                 | Reserved                                 |\n     |
      \                  |                                          |\n     | 1                 |
      Status                                   |\n     |                   |                                          |\n
      \    | 2                 | IPv4 Connection Point                    |\n     |
      \                  |                                          |\n     | 3                 |
      IPv6 Connection Point                    |\n     |                   |                                          |\n
      \    | 4                 | Peer Type                                |\n     |
      \                  |                                          |\n     | 5                 |
      Heartbeat Interval                       |\n     |                   |                                          |\n
      \    | 6                 | Extensions Supported                     |\n     |
      \                  |                                          |\n     | 7                 |
      MAC Address                              |\n     |                   |                                          |\n
      \    | 8                 | IPv4 Address                             |\n     |
      \                  |                                          |\n     | 9                 |
      IPv6 Address                             |\n     |                   |                                          |\n
      \    | 10                | IPv4 Attached Subnet                     |\n     |
      \                  |                                          |\n     | 11                |
      IPv6 Attached Subnet                     |\n     |                   |                                          |\n
      \    | 12                | Maximum Data Rate (Receive) (MDRR)       |\n     |
      \                  |                                          |\n     | 13                |
      Maximum Data Rate (Transmit) (MDRT)      |\n     |                   |                                          |\n
      \    | 14                | Current Data Rate (Receive) (CDRR)       |\n     |
      \                  |                                          |\n     | 15                |
      Current Data Rate (Transmit) (CDRT)      |\n     |                   |                                          |\n
      \    | 16                | Latency                                  |\n     |
      \                  |                                          |\n     | 17                |
      Resources (RES)                          |\n     |                   |                                          |\n
      \    | 18                | Relative Link Quality (Receive) (RLQR)   |\n     |
      \                  |                                          |\n     | 19                |
      Relative Link Quality (Transmit) (RLQT)  |\n     |                   |                                          |\n
      \    | 20                | Maximum Transmission Unit (MTU)          |\n     |
      \                  |                                          |\n     | 21-65407
      \         | Unassigned / Specification Required      |\n     |                   |
      \                                         |\n     | 65408-65534       | Reserved
      for Private Use                 |\n     |                   |                                          |\n
      \    | 65535             | Reserved                                 |\n     +-------------------+------------------------------------------+\n"
    title: 15.4.  DLEP Data Item Registrations
  - contents:
    - "15.5.  DLEP Status Code Registrations\n   IANA has created a new DLEP registry,
      named \"Status Code Values\".\n   The following table provides initial registry
      values and the\n   policies, as defined by [RFC5226], that apply to the registry:\n
      \  +--------------+---------------+------------------------------------+\n   |
      Status Code  | Failure Mode  | Description/Policy                 |\n   +--------------+---------------+------------------------------------+\n
      \  | 0            | Continue      | Success                            |\n   |
      \             |               |                                    |\n   | 1
      \           | Continue      | Not Interested                     |\n   |              |
      \              |                                    |\n   | 2            | Continue
      \     | Request Denied                     |\n   |              |               |
      \                                   |\n   | 3            | Continue      | Inconsistent
      Data                  |\n   |              |               |                                    |\n
      \  | 4-111        | Continue      | Unassigned / Specification         |\n   |
      \             |               | Required                           |\n   |              |
      \              |                                    |\n   | 112-127      | Continue
      \     | Private Use                        |\n   |              |               |
      \                                   |\n   | 128          | Terminate     | Unknown
      Message                    |\n   |              |               |                                    |\n
      \  | 129          | Terminate     | Unexpected Message                 |\n   |
      \             |               |                                    |\n   | 130
      \         | Terminate     | Invalid Data                       |\n   |              |
      \              |                                    |\n   | 131          | Terminate
      \    | Invalid Destination                |\n   |              |               |
      \                                   |\n   | 132          | Terminate     | Timed
      Out                          |\n   |              |               |                                    |\n
      \  | 133-239      | Terminate     | Unassigned / Specification         |\n   |
      \             |               | Required                           |\n   |              |
      \              |                                    |\n   | 240-254      | Terminate
      \    | Reserved for Private Use           |\n   |              |               |
      \                                   |\n   | 255          | Terminate     | Shutting
      Down                      |\n   +--------------+---------------+------------------------------------+\n"
    title: 15.5.  DLEP Status Code Registrations
  - contents:
    - "15.6.  DLEP Extension Registrations\n   IANA has created a new DLEP registry,
      named \"Extension Type Values\".\n   The following table provides initial registry
      values and the\n   policies, as defined by [RFC5226], that apply to the registry:\n
      \         +--------------+--------------------------------------+\n          |
      Code         | Description/Policy                   |\n          +--------------+--------------------------------------+\n
      \         | 0            | Reserved                             |\n          |
      1-65519      | Unassigned / Specification Required  |\n          | 65520-65534
      \ | Reserved for Private Use             |\n          | 65535        | Reserved
      \                            |\n          +--------------+--------------------------------------+\n
      \                      Table 3: DLEP Extension Types\n"
    title: 15.6.  DLEP Extension Registrations
  - contents:
    - "15.7.  DLEP IPv4 Connection Point Flags\n   IANA has created a new DLEP registry,
      named \"IPv4 Connection Point\n   Flags\".\n   The following table provides
      initial registry values and the\n   policies, as defined by [RFC5226], that
      apply to the registry:\n           +------------+--------------------------------------+\n
      \          | Bit        | Description/Policy                   |\n           +------------+--------------------------------------+\n
      \          | 0-6        | Unassigned / Specification Required  |\n           |
      7          | Use TLS [RFC5246] indicator          |\n           +------------+--------------------------------------+\n"
    title: 15.7.  DLEP IPv4 Connection Point Flags
  - contents:
    - "15.8.  DLEP IPv6 Connection Point Flags\n   IANA has created a new DLEP registry,
      named \"IPv6 Connection Point\n   Flags\".\n   The following table provides
      initial registry values and the\n   policies, as defined by [RFC5226], that
      apply to the registry:\n           +------------+--------------------------------------+\n
      \          | Bit        | Description/Policy                   |\n           +------------+--------------------------------------+\n
      \          | 0-6        | Unassigned / Specification Required  |\n           |
      7          | Use TLS [RFC5246] indicator          |\n           +------------+--------------------------------------+\n"
    title: 15.8.  DLEP IPv6 Connection Point Flags
  - contents:
    - "15.9.  DLEP Peer Type Flags\n   IANA has created a new DLEP registry, named
      \"Peer Type Flags\".\n   The following table provides initial registry values
      and the\n   policies, as defined by [RFC5226], that apply to the registry:\n
      \          +------------+--------------------------------------+\n           |
      Bit        | Description/Policy                   |\n           +------------+--------------------------------------+\n
      \          | 0-6        | Unassigned / Specification Required  |\n           |
      7          | Secured Medium indicator             |\n           +------------+--------------------------------------+\n"
    title: 15.9.  DLEP Peer Type Flags
  - contents:
    - "15.10.  DLEP IPv4 Address Flags\n   IANA has created a new DLEP registry, named
      \"IPv4 Address Flags\".\n   The following table provides initial registry values
      and the\n   policies, as defined by [RFC5226], that apply to the registry:\n
      \          +------------+--------------------------------------+\n           |
      Bit        | Description/Policy                   |\n           +------------+--------------------------------------+\n
      \          | 0-6        | Unassigned / Specification Required  |\n           |
      7          | Add/Drop indicator                   |\n           +------------+--------------------------------------+\n"
    title: 15.10.  DLEP IPv4 Address Flags
  - contents:
    - "15.11.  DLEP IPv6 Address Flags\n   IANA has created a new DLEP registry, named
      \"IPv6 Address Flags\".\n   The following table provides initial registry values
      and the\n   policies, as defined by [RFC5226], that apply to the registry:\n
      \          +------------+--------------------------------------+\n           |
      Bit        | Description/Policy                   |\n           +------------+--------------------------------------+\n
      \          | 0-6        | Unassigned / Specification Required  |\n           |
      7          | Add/Drop indicator                   |\n           +------------+--------------------------------------+\n"
    title: 15.11.  DLEP IPv6 Address Flags
  - contents:
    - "15.12.  DLEP IPv4 Attached Subnet Flags\n   IANA has created a new DLEP registry,
      named \"IPv4 Attached Subnet\n   Flags\".\n   The following table provides initial
      registry values and the\n   policies, as defined by [RFC5226], that apply to
      the registry:\n           +------------+--------------------------------------+\n
      \          | Bit        | Description/Policy                   |\n           +------------+--------------------------------------+\n
      \          | 0-6        | Unassigned / Specification Required  |\n           |
      7          | Add/Drop indicator                   |\n           +------------+--------------------------------------+\n"
    title: 15.12.  DLEP IPv4 Attached Subnet Flags
  - contents:
    - "15.13.  DLEP IPv6 Attached Subnet Flags\n   IANA has created a new DLEP registry,
      named \"IPv6 Attached Subnet\n   Flags\".\n   The following table provides initial
      registry values and the\n   policies, as defined by [RFC5226], that apply to
      the registry:\n           +------------+--------------------------------------+\n
      \          | Bit        | Description/Policy                   |\n           +------------+--------------------------------------+\n
      \          | 0-6        | Unassigned / Specification Required  |\n           |
      7          | Add/Drop indicator                   |\n           +------------+--------------------------------------+\n"
    title: 15.13.  DLEP IPv6 Attached Subnet Flags
  - contents:
    - "15.14.  DLEP Well-Known Port\n   IANA has assigned the value 854 in the \"Service
      Name and Transport\n   Protocol Port Number Registry\" found at\n   <http://www.iana.org/assignments/service-names-port-numbers/>
      for use\n   by \"DLEP\", as defined in this document.  This assignment is valid
      for\n   TCP and UDP.\n"
    title: 15.14.  DLEP Well-Known Port
  - contents:
    - "15.15.  DLEP IPv4 Link-Local Multicast Address\n   IANA has assigned the IPv4
      multicast address 224.0.0.117 in the\n   registry found at\n   <http://www.iana.org/assignments/multicast-addresses>
      for use as\n   \"DLEP Discovery\".\n"
    title: 15.15.  DLEP IPv4 Link-Local Multicast Address
  - contents:
    - "15.16.  DLEP IPv6 Link-Local Multicast Address\n   IANA has assigned the IPv6
      multicast address FF02:0:0:0:0:0:1:7 in\n   the registry found at\n   <http://www.iana.org/assignments/ipv6-multicast-addresses>
      for use as\n   \"DLEP Discovery\".\n"
    title: 15.16.  DLEP IPv6 Link-Local Multicast Address
  title: 15.  IANA Considerations
- contents:
  - '16.  References

    '
  - contents:
    - "16.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC3629]  Yergeau, F., \"UTF-8, a transformation format of\n              ISO
      10646\", STD 63, RFC 3629, DOI 10.17487/RFC3629,\n              November 2003,
      <http://www.rfc-editor.org/info/rfc3629>.\n   [RFC5082]  Gill, V., Heasley,
      J., Meyer, D., Savola, P., Ed., and C.\n              Pignataro, \"The Generalized
      TTL Security Mechanism\n              (GTSM)\", RFC 5082, DOI 10.17487/RFC5082,
      October 2007,\n              <http://www.rfc-editor.org/info/rfc5082>.\n   [RFC5246]
      \ Dierks, T. and E. Rescorla, \"The Transport Layer Security\n              (TLS)
      Protocol Version 1.2\", RFC 5246,\n              DOI 10.17487/RFC5246, August
      2008,\n              <http://www.rfc-editor.org/info/rfc5246>.\n   [RFC8174]
      \ Leiba, B., \"Ambiguity of Uppercase vs Lowercase in\n              RFC 2119
      Key Words\", BCP 14, RFC 8174,\n              DOI 10.17487/RFC8174, May 2017,\n
      \             <http://www.rfc-editor.org/info/rfc8174>.\n"
    title: 16.1.  Normative References
  - contents:
    - "16.2.  Informative References\n   [IEEE-802.1AE]\n              \"IEEE Standards
      for Local and Metropolitan Area Networks:\n              Media Access Control
      (MAC) Security\",\n              DOI 10.1109/IEEESTD.2006.245590,\n              <http://ieeexplore.ieee.org/document/1678345/>.\n
      \  [IEEE-802.1X]\n              \"IEEE Standards for Local and metropolitan
      area networks--\n              Port-Based Network Access Control\",\n              DOI
      10.1109/IEEESTD.2010.5409813,\n              <http://ieeexplore.ieee.org/document/5409813/>.\n
      \  [RFC5226]  Narten, T. and H. Alvestrand, \"Guidelines for Writing an\n              IANA
      Considerations Section in RFCs\", BCP 26, RFC 5226,\n              DOI 10.17487/RFC5226,
      May 2008,\n              <http://www.rfc-editor.org/info/rfc5226>.\n   [RFC5487]
      \ Badra, M., \"Pre-Shared Key Cipher Suites for TLS with\n              SHA-256/384
      and AES Galois Counter Mode\", RFC 5487,\n              DOI 10.17487/RFC5487,
      March 2009,\n              <http://www.rfc-editor.org/info/rfc5487>.\n   [RFC6890]
      \ Cotton, M., Vegoda, L., Bonica, R., Ed., and B. Haberman,\n              \"Special-Purpose
      IP Address Registries\", BCP 153,\n              RFC 6890, DOI 10.17487/RFC6890,
      April 2013,\n              <http://www.rfc-editor.org/info/rfc6890>.\n   [RFC7525]
      \ Sheffer, Y., Holz, R., and P. Saint-Andre,\n              \"Recommendations
      for Secure Use of Transport Layer\n              Security (TLS) and Datagram
      Transport Layer Security\n              (DTLS)\", BCP 195, RFC 7525, DOI 10.17487/RFC7525,\n
      \             May 2015, <http://www.rfc-editor.org/info/rfc7525>.\n"
    title: 16.2.  Informative References
  title: 16.  References
- contents:
  - 'Appendix A.  Discovery Signal Flows

    '
  - 'Router                       Modem    Signal Description

    '
  - '========================================================================

    '
  - '|                                     Router initiates discovery,

    '
  - '|                                     starts a timer, sends Peer

    '
  - "|-------Peer Discovery---->X          Discovery Signal.\n         ~ ~ ~ ~ ~ ~
    ~                Router discovery timer expires\n                                      without
    receiving Peer Offer.\n"
  - '|                                     Router sends another Peer

    '
  - "|-------Peer Discovery---------->|    Discovery Signal.\n                                 |\n
    \                                |    Modem receives Peer Discovery\n                                 |
    \   Signal.\n                                 |\n                                 |
    \   Modem sends Peer Offer with\n"
  - '|<--------Peer Offer-------------|    Connection Point information.

    '
  - ':

    '
  - ':                                     Router MAY cancel discovery timer

    '
  - ':                                     and stop sending Peer Discovery

    '
  - ':                                     Signals.

    '
  title: Appendix A.  Discovery Signal Flows
- contents:
  - 'Appendix B.  Peer-Level Message Flows

    '
  - contents:
    - 'B.1.  Session Initialization

      '
    - 'Router                       Modem    Message Description

      '
    - '========================================================================

      '
    - '|                                     Router connects to discovered or

      '
    - '|                                     preconfigured Modem Connection

      '
    - '|--TCP connection established--->     Point.

      '
    - '|

      '
    - '|                                     Router sends Session

      '
    - "|----Session Initialization----->|    Initialization Message.\n                                 |\n
      \                                |    Modem receives Session\n                                 |
      \   Initialization Message.\n                                 |\n                                 |
      \   Modem sends Session Initialization\n"
    - '|<--Session Initialization Resp.-|    Response with ''Success'' Status

      '
    - '|                                |    Data Item.

      '
    - '|                                |

      '
    - '|<<============================>>|    Session established.

      '
    - ':                                :    Heartbeats begin.

      '
    title: B.1.  Session Initialization
  - contents:
    - 'B.2.  Session Initialization - Refused

      '
    - 'Router                       Modem    Message Description

      '
    - '========================================================================

      '
    - '|                                     Router connects to discovered or

      '
    - '|                                     preconfigured Modem Connection

      '
    - '|--TCP connection established--->     Point.

      '
    - '|

      '
    - '|                                     Router sends Session

      '
    - "|-----Session Initialization---->|    Initialization Message.\n                                 |\n
      \                                |    Modem receives Session\n                                 |
      \   Initialization Message and\n                                 |    will not
      support the advertised\n                                 |    extensions.\n
      \                                |\n                                 |    Modem
      sends Session Initialization\n                                 |    Response
      with 'Request Denied'\n"
    - '|<-Session Initialization Resp.--|    Status Data Item.

      '
    - '|

      '
    - '|

      '
    - '|                                     Router receives negative Session

      '
    - '|                                     Initialization Response, closes

      '
    - '||---------TCP close------------||    TCP connection.

      '
    title: B.2.  Session Initialization - Refused
  - contents:
    - 'B.3.  Router Changes IP Addresses

      '
    - 'Router                       Modem    Message Description

      '
    - '========================================================================

      '
    - '|                                     Router sends Session Update

      '
    - "|-------Session Update---------->|    Message to announce change of\n                                 |
      \   IP address.\n                                 |\n                                 |
      \   Modem receives Session Update\n                                 |    Message
      and updates internal\n                                 |    state.\n                                 |\n"
    - "|<----Session Update Response----|    Modem sends Session Update\n                                 |
      \   Response.\n"
    title: B.3.  Router Changes IP Addresses
  - contents:
    - 'B.4.  Modem Changes Session-Wide Metrics

      '
    - 'Router                       Modem    Message Description

      '
    - "========================================================================\n
      \                                |    Modem sends Session Update Message\n                                 |
      \   to announce change of session-wide\n"
    - '|<--------Session Update---------|    metrics.

      '
    - '|

      '
    - '|                                     Router receives Session Update

      '
    - '|                                     Message and updates internal

      '
    - '|                                     state.

      '
    - '|

      '
    - "|----Session Update Response---->|    Router sends Session Update\n                                 |
      \   Response.\n"
    title: B.4.  Modem Changes Session-Wide Metrics
  - contents:
    - 'B.5.  Router Terminates Session

      '
    - 'Router                       Modem    Message Description

      '
    - '========================================================================

      '
    - '|                                     Router sends Session Termination

      '
    - '|------Session Termination------>|    Message with Status Data Item.

      '
    - '|                                |

      '
    - "|-------TCP shutdown (send)--->  |    Router stops sending Messages.\n                                 |\n
      \                                |    Modem receives Session\n                                 |
      \   Termination, stops counting\n                                 |    received
      heartbeats, and stops\n                                 |    sending heartbeats.\n
      \                                |\n                                 |    Modem
      sends Session Termination\n"
    - '|<---Session Termination Resp.---|    Response with Status ''Success''.

      '
    - '|

      '
    - '|                                     Modem stops sending Messages.

      '
    - '|

      '
    - '||---------TCP close------------||    Session terminated.

      '
    title: B.5.  Router Terminates Session
  - contents:
    - 'B.6.  Modem Terminates Session

      '
    - 'Router                       Modem    Message Description

      '
    - "========================================================================\n
      \                                |    Modem sends Session Termination\n"
    - '|<----Session Termination--------|    Message with Status Data Item.

      '
    - '|

      '
    - '|                                     Modem stops sending Messages.

      '
    - '|

      '
    - '|                                     Router receives Session

      '
    - '|                                     Termination, stops counting

      '
    - '|                                     received heartbeats, and stops

      '
    - '|                                     sending heartbeats.

      '
    - '|

      '
    - '|                                     Router sends Session Termination

      '
    - "|---Session Termination Resp.--->|    Response with Status 'Success'.\n                                 |\n
      \                                |    Router stops sending Messages.\n                                 |\n"
    - '||---------TCP close------------||    Session terminated.

      '
    title: B.6.  Modem Terminates Session
  - contents:
    - 'B.7.  Session Heartbeats

      '
    - 'Router                       Modem    Message Description

      '
    - '========================================================================

      '
    - "|----------Heartbeat------------>|    Router sends Heartbeat Message.\n                                 |\n
      \                                |    Modem resets heartbeats missed\n                                 |
      \   counter.\n         ~ ~ ~ ~ ~ ~ ~\n"
    - "|---------[Any Message]--------->|    When the Modem receives any\n                                 |
      \   Message from the Router.\n                                 |\n                                 |
      \   Modem resets heartbeats missed\n                                 |    counter.\n
      \        ~ ~ ~ ~ ~ ~ ~\n"
    - '|<---------Heartbeat-------------|    Modem sends Heartbeat Message.

      '
    - '|

      '
    - '|                                     Router resets heartbeats missed

      '
    - "|                                     counter.\n         ~ ~ ~ ~ ~ ~ ~\n"
    - '|<--------[Any Message]----------|    When the Router receives any

      '
    - '|                                     Message from the Modem.

      '
    - '|

      '
    - '|                                     Modem resets heartbeats missed

      '
    - '|                                     counter.

      '
    title: B.7.  Session Heartbeats
  - contents:
    - 'B.8.  Router Detects a Heartbeat Timeout

      '
    - 'Router                       Modem    Message Description

      '
    - "========================================================================\n
      \        X<----------------------|    Router misses a heartbeat.\n"
    - '|        X<----------------------|    Router misses too many

      '
    - '|                                     heartbeats.

      '
    - '|

      '
    - '|

      '
    - '|------Session Termination------>|    Router sends Session Termination

      '
    - '|                                     Message with ''Timeout'' Status

      '
    - '|                                     Data Item.

      '
    - ':

      '
    - ':                                     Termination proceeds...

      '
    title: B.8.  Router Detects a Heartbeat Timeout
  - contents:
    - 'B.9.  Modem Detects a Heartbeat Timeout

      '
    - 'Router                       Modem    Message Description

      '
    - '========================================================================

      '
    - '|---------------------->X             Modem misses a heartbeat.

      '
    - "|---------------------->X        |    Modem misses too many\n                                 |
      \   heartbeats.\n                                 |\n                                 |\n"
    - "|<-----Session Termination-------|    Modem sends Session Termination\n                                 |
      \   Message with 'Timeout' Status\n                                 |    Data
      Item.\n                                 :\n                                 :
      \   Termination proceeds...\n"
    title: B.9.  Modem Detects a Heartbeat Timeout
  title: Appendix B.  Peer-Level Message Flows
- contents:
  - 'Appendix C.  Destination-Specific Message Flows

    '
  - contents:
    - 'C.1.  Common Destination Notification

      '
    - 'Router                       Modem    Message Description

      '
    - "========================================================================\n
      \                                |    Modem detects a new logical\n                                 |
      \   destination is reachable and\n"
    - '|<-------Destination Up----------|    sends Destination Up Message.

      '
    - '|

      '
    - "|------Destination Up Resp.----->|    Router sends Destination Up\n                                 |
      \   Response.\n           ~ ~ ~ ~ ~ ~ ~\n                                 |
      \   Modem detects change in logical\n                                 |    destination
      metrics and sends\n"
    - "|<-------Destination Update------|    Destination Update Message.\n           ~
      ~ ~ ~ ~ ~ ~\n                                 |    Modem detects change in logical\n
      \                                |    destination metrics and sends\n"
    - "|<-------Destination Update------|    Destination Update Message.\n            ~
      ~ ~ ~ ~ ~ ~\n                                 |    Modem detects logical destination\n
      \                                |    is no longer reachable and sends\n"
    - '|<-------Destination Down--------|    Destination Down Message.

      '
    - '|

      '
    - '|                                     Router receives Destination Down,

      '
    - '|                                     updates internal state, and sends

      '
    - '|------Destination Down Resp.--->|    Destination Down Response Message.

      '
    title: C.1.  Common Destination Notification
  - contents:
    - 'C.2.  Multicast Destination Notification

      '
    - 'Router                       Modem    Message Description

      '
    - '========================================================================

      '
    - '|                                     Router detects a new multicast

      '
    - '|                                     destination is in use and sends

      '
    - "|-----Destination Announce------>|    Destination Announce Message.\n                                 |\n
      \                                |    Modem updates internal state to\n                                 |
      \   monitor multicast destination and\n"
    - "|<-----Dest. Announce Resp.------|    sends Destination Announce\n                                      Response.\n
      \          ~ ~ ~ ~ ~ ~ ~\n                                 |    Modem detects
      change in multicast\n                                 |    destination metrics
      and sends\n"
    - "|<-------Destination Update------|    Destination Update Message.\n           ~
      ~ ~ ~ ~ ~ ~\n                                 |    Modem detects change in multicast\n
      \                                |    destination metrics and sends\n"
    - "|<-------Destination Update------|    Destination Update Message.\n            ~
      ~ ~ ~ ~ ~ ~\n"
    - '|                                     Router detects multicast

      '
    - '|                                     destination is no longer in use

      '
    - "|--------Destination Down------->|    and sends Destination Down\n                                 |
      \   Message.\n                                 |\n                                 |
      \   Modem receives Destination Down,\n                                 |    updates
      internal state, and sends\n"
    - '|<-----Destination Down Resp.----|    Destination Down Response Message.

      '
    title: C.2.  Multicast Destination Notification
  - contents:
    - 'C.3.  Link Characteristics Request

      '
    - 'Router                       Modem    Message Description

      '
    - "========================================================================\n
      \                                     Destination has already been\n           ~
      ~ ~ ~ ~ ~ ~              announced by either peer.\n"
    - '|                                     Router requires different

      '
    - '|                                     characteristics for the

      '
    - '|                                     destination and sends Link

      '
    - "|--Link Characteristics Request->|    Characteristics Request Message.\n                                 |\n
      \                                |    Modem attempts to adjust link\n                                 |
      \   properties to meet the received\n                                 |    request
      and sends a Link\n                                 |    Characteristics Response\n"
    - '|<---Link Characteristics Resp.--|    Message with the new values.

      '
    title: C.3.  Link Characteristics Request
  title: Appendix C.  Destination-Specific Message Flows
- contents:
  - "Acknowledgments\n   We would like to acknowledge and thank the members of the
    DLEP design\n   team, who have provided invaluable insight.  The members of the\n
    \  design team are Teco Boot, Bow-Nan Cheng, John Dowdell, and Henning\n   Rogge.\n
    \  We would also like to acknowledge the influence and contributions of\n   Greg
    Harrison, Chris Olsen, Martin Duke, Subir Das, Jaewon Kang,\n   Vikram Kaul, Nelson
    Powell, Lou Berger, and Victoria Pritchard.\n"
  title: Acknowledgments
- contents:
  - "Authors' Addresses\n   Stan Ratliff\n   VT iDirect\n   13861 Sunrise Valley Drive,
    Suite 300\n   Herndon, VA  20171\n   United States of America\n   Email: sratliff@idirect.net\n
    \  Shawn Jury\n   Cisco Systems\n   170 West Tasman Drive\n   San Jose, CA  95134\n
    \  United States of America\n   Email: sjury@cisco.com\n   Darryl Satterwhite\n
    \  Broadcom\n   Email: dsatterw@broadcom.com\n   Rick Taylor\n   Airbus Defence
    & Space\n   Quadrant House\n   Celtic Springs\n   Coedkernew\n   Newport  NP10
    8FZ\n   United Kingdom\n   Email: rick.taylor@airbus.com\n   Bo Berry\n"
  title: Authors' Addresses
