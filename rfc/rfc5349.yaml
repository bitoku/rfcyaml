- title: __initial_text__
  contents:
  - " Elliptic Curve Cryptography (ECC) Support for Public Key Cryptography\n    \
    \        for Initial Authentication in Kerberos (PKINIT)\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes the use of Elliptic Curve certificates,\n\
    \   Elliptic Curve signature schemes and Elliptic Curve Diffie-Hellman\n   (ECDH)\
    \ key agreement within the framework of PKINIT -- the Kerberos\n   Version 5 extension\
    \ that provides for the use of public key\n   cryptography.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . 2\n   2.  Conventions Used in This Document . . . . . . . . . .\
    \ . . . . . 2\n   3.  Using Elliptic Curve Certificates and Elliptic Curve\n \
    \      Signature Schemes . . . . . . . . . . . . . . . . . . . . . . . 2\n   4.\
    \  Using the ECDH Key Exchange . . . . . . . . . . . . . . . . . . 3\n   5.  Choosing\
    \ the Domain Parameters and the Key Size . . . . . . . . 4\n   6.  Interoperability\
    \ Requirements . . . . . . . . . . . . . . . . . 6\n   7.  Security Considerations\
    \ . . . . . . . . . . . . . . . . . . . . 6\n   8.  Acknowledgements  . . . .\
    \ . . . . . . . . . . . . . . . . . . . 7\n   9.  References  . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . 7\n     9.1.  Normative References  . .\
    \ . . . . . . . . . . . . . . . . . 7\n     9.2.  Informative References  . .\
    \ . . . . . . . . . . . . . . . . 8\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Elliptic Curve Cryptography (ECC) is emerging as an attractive\n\
    \   public-key cryptosystem that provides security equivalent to\n   currently\
    \ popular public-key mechanisms such as RSA and DSA with\n   smaller key sizes\
    \ [LENSTRA] [NISTSP80057].\n   Currently, [RFC4556] permits the use of ECC algorithms\
    \ but it does\n   not specify how ECC parameters are chosen or how to derive the\
    \ shared\n   key for key delivery using Elliptic Curve Diffie-Hellman (ECDH)\n\
    \   [IEEE1363] [X9.63].\n   This document describes how to use Elliptic Curve\
    \ certificates,\n   Elliptic Curve signature schemes, and ECDH with [RFC4556].\
    \  However,\n   it should be noted that there is no syntactic or semantic change\
    \ to\n   the existing [RFC4556] messages.  Both the client and the Key\n   Distribution\
    \ Center (KDC) contribute one ECDH key pair using the key\n   agreement protocol\
    \ described in this document.\n"
- title: 2.  Conventions Used in This Document
  contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 3.  Using Elliptic Curve Certificates and Elliptic Curve Signature
  contents:
  - "3.  Using Elliptic Curve Certificates and Elliptic Curve Signature\n    Schemes\n\
    \   ECC certificates and signature schemes can be used in the\n   Cryptographic\
    \ Message Syntax (CMS) [RFC3852] [RFC3278] content type\n   'SignedData'.\n  \
    \ X.509 certificates [RFC5280] that contain ECC public keys or are\n   signed\
    \ using ECC signature schemes MUST comply with [RFC3279].\n   The signatureAlgorithm\
    \ field of the CMS data type 'SignerInfo' can\n   contain one of the following\
    \ ECC signature algorithm identifiers:\n      ecdsa-with-Sha1   [RFC3279]\n  \
    \    ecdsa-with-Sha256 [X9.62]\n      ecdsa-with-Sha384 [X9.62]\n      ecdsa-with-Sha512\
    \ [X9.62]\n   The corresponding digestAlgorithm field contains one of the following\n\
    \   hash algorithm identifiers respectively:\n      id-sha1           [RFC3279]\n\
    \      id-sha256         [X9.62]\n      id-sha384         [X9.62]\n      id-sha512\
    \         [X9.62]\n   Namely, id-sha1 MUST be used in conjunction with ecdsa-with-Sha1,\n\
    \   id-sha256 MUST be used in conjunction with ecdsa-with-Sha256,\n   id-sha384\
    \ MUST be used in conjunction with ecdsa-with-Sha384, and\n   id-sha512 MUST be\
    \ used in conjunction with ecdsa-with-Sha512.\n   Implementations of this specification\
    \ MUST support ecdsa-with-Sha256\n   and SHOULD support ecdsa-with-Sha1.\n"
- title: 4.  Using the ECDH Key Exchange
  contents:
  - "4.  Using the ECDH Key Exchange\n   This section describes how ECDH can be used\
    \ as the Authentication\n   Service (AS) reply key delivery method [RFC4556].\
    \  Note that the\n   protocol description here is similar to that of Modular Exponential\n\
    \   Diffie-Hellman (MODP DH), as described in [RFC4556].\n   If the client wishes\
    \ to use the ECDH key agreement method, it encodes\n   its ECDH public key value\
    \ and the key's domain parameters [IEEE1363]\n   [X9.63] in clientPublicValue\
    \ of the PA-PK-AS-REQ message [RFC4556].\n   As described in [RFC4556], the ECDH\
    \ domain parameters for the\n   client's public key are specified in the algorithm\
    \ field of the type\n   SubjectPublicKeyInfo [RFC3279] and the client's ECDH public\
    \ key value\n   is mapped to a subjectPublicKey (a BIT STRING) according to\n\
    \   [RFC3279].\n   The following algorithm identifier is used to identify the\
    \ client's\n   choice of the ECDH key agreement method for key delivery.\n   \
    \     id-ecPublicKey  (Elliptic Curve Diffie-Hellman [RFC3279])\n   If the domain\
    \ parameters are not accepted by the KDC, the KDC sends\n   back an error message\
    \ [RFC4120] with the code\n   KDC_ERR_DH_KEY_PARAMETERS_NOT_ACCEPTED [RFC4556].\
    \  This error message\n   contains the list of domain parameters acceptable to\
    \ the KDC.  This\n   list is encoded as TD-DH-PARAMETERS [RFC4556], and it is\
    \ in the KDC's\n   decreasing preference order.  The client can then pick a set\
    \ of\n   domain parameters from the list and retry the authentication.\n   Both\
    \ the client and the KDC MUST have local policy that specifies\n   which set of\
    \ domain parameters are acceptable if they do not have a\n   priori knowledge\
    \ of the chosen domain parameters.  The need for such\n   local policy is explained\
    \ in Section 7.\n   If the ECDH domain parameters are accepted by the KDC, the\
    \ KDC sends\n   back its ECDH public key value in the subjectPublicKey field of\
    \ the\n   PA-PK-AS-REP message [RFC4556].\n   As described in [RFC4556], the KDC's\
    \ ECDH public key value is encoded\n   as a BIT STRING according to [RFC3279].\n\
    \   Note that in the steps above, the client can indicate to the KDC that\n  \
    \ it wishes to reuse ECDH keys or it can allow the KDC to do so, by\n   including\
    \ the clientDHNonce field in the request [RFC4556]; the KDC\n   can then reuse\
    \ the ECDH keys and include the serverDHNonce field in\n   the reply [RFC4556].\
    \  This logic is the same as that of the Modular\n   Exponential Diffie-Hellman\
    \ key agreement method [RFC4556].\n   If ECDH is negotiated as the key delivery\
    \ method, then the\n   PA-PK-AS-REP and AS reply key are generated as in Section\
    \ 3.2.3.1 of\n   [RFC4556] with the following difference: The ECDH shared secret\
    \ value\n   (an elliptic curve point) is calculated using operation ECSVDP-DH\
    \ as\n   described in Section 7.2.1 of [IEEE1363].  The x-coordinate of this\n\
    \   point is converted to an octet string using operation FE2OSP as\n   described\
    \ in Section 5.5.4 of [IEEE1363].  This octet string is the\n   DHSharedSecret.\n\
    \   Both the client and KDC then proceed as described in [RFC4556] and\n   [RFC4120].\n\
    \   Lastly, it should be noted that ECDH can be used with any\n   certificates\
    \ and signature schemes.  However, a significant advantage\n   of using ECDH together\
    \ with ECC certificates and signature schemes is\n   that the ECC domain parameters\
    \ in the client certificates or the KDC\n   certificates can be used.  This obviates\
    \ the need of locally\n   preconfigured domain parameters as described in Section\
    \ 7.\n"
- title: 5.  Choosing the Domain Parameters and the Key Size
  contents:
  - "5.  Choosing the Domain Parameters and the Key Size\n   The domain parameters\
    \ and the key size should be chosen so as to\n   provide sufficient cryptographic\
    \ security [RFC3766].  The following\n   table, based on table 2 on page 63 of\
    \ NIST SP800-57 part 1\n   [NISTSP80057], gives approximate comparable key sizes\
    \ for symmetric-\n   and asymmetric-key cryptosystems based on the best-known\
    \ algorithms\n   for attacking them.\n                 Symmetric    |  ECC   \
    \    |   RSA\n                 -------------+----------- +------------\n     \
    \               80        |  160 - 223 |   1024\n                   112      \
    \  |  224 - 255 |   2048\n                   128        |  256 - 383 |   3072\n\
    \                   192        |  384 - 511 |   7680\n                   256 \
    \       |  512+      |  15360\n                Table 1: Comparable key sizes (in\
    \ bits)\n   Thus, for example, when securing a 128-bit symmetric key, it is\n\
    \   prudent to use 256-bit Elliptic Curve Cryptography (ECC), e.g., group\n  \
    \ P-256 (secp256r1) as described below.\n   A set of ECDH domain parameters is\
    \ also known as a \"curve\".  A curve\n   is a \"named curve\" if the domain parameters\
    \ are well known and can be\n   identified by an Object Identifier; otherwise,\
    \ it is called a \"custom\n   curve\".  [RFC4556] supports both named curves and\
    \ custom curves, see\n   Section 7 on the tradeoffs of choosing between named\
    \ curves and\n   custom curves.\n   The named curves recommended in this document\
    \ are also recommended by\n   the National Institute of Standards and Technology\
    \ (NIST)[FIPS186-2].\n   These fifteen ECC curves are given in the following table\
    \ [FIPS186-2]\n   [SEC2].\n              Description                      SEC\
    \ 2 OID\n              -----------------                ---------\n          \
    \    ECPRGF192Random  group P-192     secp192r1\n              EC2NGF163Random\
    \  group B-163     sect163r2\n              EC2NGF163Koblitz group K-163     sect163k1\n\
    \              ECPRGF224Random  group P-224     secp224r1\n              EC2NGF233Random\
    \  group B-233     sect233r1\n              EC2NGF233Koblitz group K-233     sect233k1\n\
    \              ECPRGF256Random  group P-256     secp256r1\n              EC2NGF283Random\
    \  group B-283     sect283r1\n              EC2NGF283Koblitz group K-283     sect283k1\n\
    \              ECPRGF384Random  group P-384     secp384r1\n              EC2NGF409Random\
    \  group B-409     sect409r1\n              EC2NGF409Koblitz group K-409     sect409k1\n\
    \              ECPRGF521Random  group P-521     secp521r1\n              EC2NGF571Random\
    \  group B-571     sect571r1\n              EC2NGF571Koblitz group K-571     sect571k1\n"
- title: 6.  Interoperability Requirements
  contents:
  - "6.  Interoperability Requirements\n   Implementations conforming to this specification\
    \ MUST support curve\n   P-256 and P-384.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   When using ECDH key agreement, the recipient\
    \ of an elliptic curve\n   public key should perform the checks described in IEEE\
    \ P1363, Section\n   A16.10 [IEEE1363].  It is especially important, if the recipient\
    \ is\n   using a long-term ECDH private key, to check that the sender's public\n\
    \   key is a valid point on the correct elliptic curve; otherwise,\n   information\
    \ may be leaked about the recipient's private key, and\n   iterating the attack\
    \ will eventually completely expose the\n   recipient's private key.\n   Kerberos\
    \ error messages are not integrity protected; as a result, the\n   domain parameters\
    \ sent by the KDC as TD-DH-PARAMETERS can be tampered\n   with by an attacker\
    \ so that the set of domain parameters selected\n   could be either weaker or\
    \ not mutually preferred.  Local policy can\n   configure sets of domain parameters\
    \ that are acceptable locally or\n   can disallow the negotiation of ECDH domain\
    \ parameters.\n   Beyond elliptic curve size, the main issue is elliptic curve\n\
    \   structure.  As a general principle, it is more conservative to use\n   elliptic\
    \ curves with as little algebraic structure as possible.\n   Thus, random curves\
    \ are more conservative than special curves (such\n   as Koblitz curves), and\
    \ curves over F_p with p random are more\n   conservative than curves over F_p\
    \ with p of a special form.  (Also,\n   curves over F_p with p random might be\
    \ considered more conservative\n   than curves over F_2^m, as there is no choice\
    \ between multiple fields\n   of similar size for characteristic 2.)  Note, however,\
    \ that algebraic\n   structure can also lead to implementation efficiencies, and\n\
    \   implementors and users may, therefore, need to balance conservatism\n   against\
    \ a need for efficiency.  Concrete attacks are known against\n   only very few\
    \ special classes of curves, such as supersingular\n   curves, and these classes\
    \ are excluded from the ECC standards such as\n   [IEEE1363] and [X9.62].\n  \
    \ Another issue is the potential for catastrophic failures when a\n   single elliptic\
    \ curve is widely used.  In this case, an attack on the\n   elliptic curve might\
    \ result in the compromise of a large number of\n   keys.  Again, this concern\
    \ may need to be balanced against efficiency\n   and interoperability improvements\
    \ associated with widely used curves.\n   Substantial additional information on\
    \ elliptic curve choice can be\n   found in [IEEE1363], [X9.62], and [FIPS186-2].\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   The following people have made significant contributions\
    \ to this\n   document: Paul Leach, Dan Simon, Kelvin Yiu, David Cross, Sam\n\
    \   Hartman, Tolga Acar, and Stefan Santesson.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [FIPS186-2]    NIST, \"Digital Signature Standard\"\
    , FIPS 186-2, 2000.\n   [IEEE1363]     IEEE, \"Standard Specifications for Public\
    \ Key\n                  Cryptography\", IEEE 1363, 2000.\n   [NISTSP80057]  NIST,\
    \ \"Recommendation on Key Management\", SP 800-57,\n                  August 2005,\n\
    \                  <http://csrc.nist.gov/publications/nistpubs/>.\n   [RFC2119]\
    \      Bradner, S., \"Key words for use in RFCs to Indicate\n                \
    \  Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC3278]      Blake-Wilson,\
    \ S., Brown, D., and P. Lambert, \"Use of\n                  Elliptic Curve Cryptography\
    \ (ECC) Algorithms in\n                  Cryptographic Message Syntax (CMS)\"\
    , RFC 3278,\n                  April 2002.\n   [RFC3279]      Bassham, L., Polk,\
    \ W., and R. Housley, \"Algorithms and\n                  Identifiers for the\
    \ Internet X.509 Public Key\n                  Infrastructure Certificate and\
    \ Certificate Revocation\n                  List (CRL) Profile\", RFC 3279, April\
    \ 2002.\n   [RFC3766]      Orman, H. and P. Hoffman, \"Determining Strengths For\n\
    \                  Public Keys Used For Exchanging Symmetric Keys\",\n       \
    \           BCP 86, RFC 3766, April 2004.\n   [RFC3852]      Housley, R., \"Cryptographic\
    \ Message Syntax (CMS)\",\n                  RFC 3852, July 2004.\n   [RFC4120]\
    \      Neuman, C., Yu, T., Hartman, S., and K. Raeburn, \"The\n              \
    \    Kerberos Network Authentication Service (V5)\",\n                  RFC 4120,\
    \ July 2005.\n   [RFC4556]      Zhu, L. and B. Tung, \"Public Key Cryptography\
    \ for\n                  Initial Authentication in Kerberos (PKINIT)\",\n    \
    \              RFC 4556, June 2006.\n   [RFC5280]      Cooper, D., Santesson,\
    \ S., Farrell, S., Boeyen, S.,\n                  Housley, R., and W. Polk, \"\
    Internet X.509 Public Key\n                  Infrastructure Certificate and Certificate\
    \ Revocation\n                  List (CRL) Profile\", RFC 5280, May 2008.\n  \
    \ [X9.62]        ANSI, \"Public Key Cryptography For The Financial\n         \
    \         Services Industry: The Elliptic Curve Digital\n                  Signature\
    \ Algorithm (ECDSA)\", ANSI X9.62, 2005.\n   [X9.63]        ANSI, \"Public Key\
    \ Cryptography for the Financial\n                  Services Industry: Key Agreement\
    \ and Key Transport\n                  using Elliptic Curve Cryptography\", ANSI\
    \ X9.63, 2001.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [LENSTRA]      Lenstra, A. and E. Verheul, \"\
    Selecting Cryptographic\n                  Key Sizes\", Journal of Cryptography\
    \ 14, 255-293, 2001.\n   [SEC2]         Standards for Efficient Cryptography Group,\
    \ \"SEC 2 -\n                  Recommended Elliptic Curve Domain Parameters\"\
    ,\n                  Ver. 1.0, 2000, <http://www.secg.org>.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Larry Zhu\n   Microsoft Corporation\n   One Microsoft\
    \ Way\n   Redmond, WA  98052\n   US\n   EMail: lzhu@microsoft.com\n   Karthik\
    \ Jaganathan\n   Microsoft Corporation\n   One Microsoft Way\n   Redmond, WA \
    \ 98052\n   US\n   EMail: karthikj@microsoft.com\n   Kristin Lauter\n   Microsoft\
    \ Corporation\n   One Microsoft Way\n   Redmond, WA  98052\n   US\n   EMail: klauter@microsoft.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
