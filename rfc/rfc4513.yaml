- title: __initial_text__
  contents:
  - "             Lightweight Directory Access Protocol (LDAP):\n             Authentication\
    \ Methods and Security Mechanisms\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes authentication methods and security\n  \
    \ mechanisms of the Lightweight Directory Access Protocol (LDAP).  This\n   document\
    \ details establishment of Transport Layer Security (TLS)\n   using the StartTLS\
    \ operation.\n   This document details the simple Bind authentication method including\n\
    \   anonymous, unauthenticated, and name/password mechanisms and the\n   Simple\
    \ Authentication and Security Layer (SASL) Bind authentication\n   method including\
    \ the EXTERNAL mechanism.\n   This document discusses various authentication and\
    \ authorization\n   states through which a session to an LDAP server may pass\
    \ and the\n   actions that trigger these state changes.\n   This document, together\
    \ with other documents in the LDAP Technical\n   Specification (see Section 1\
    \ of the specification's road map),\n   obsoletes RFC 2251, RFC 2829, and RFC\
    \ 2830.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \      1.1. Relationship to Other Documents ............................6\n  \
    \    1.2. Conventions ................................................6\n   2.\
    \ Implementation Requirements .....................................7\n   3. StartTLS\
    \ Operation ..............................................8\n      3.1.  TLS Establishment\
    \ Procedures ..............................8\n           3.1.1. StartTLS Request\
    \ Sequencing .........................8\n           3.1.2. Client Certificate\
    \ ..................................9\n           3.1.3. Server Identity Check\
    \ ...............................9\n                  3.1.3.1. Comparison of DNS\
    \ Names ...................10\n                  3.1.3.2. Comparison of IP Addresses\
    \ ................11\n                  3.1.3.3. Comparison of Other subjectName\
    \ Types .....11\n           3.1.4. Discovery of Resultant Security Level ..............11\n\
    \           3.1.5. Refresh of Server Capabilities Information .........11\n  \
    \    3.2.  Effect of TLS on Authorization State .....................12\n    \
    \  3.3. TLS Ciphersuites ..........................................12\n   4. Authorization\
    \ State ............................................13\n   5. Bind Operation .................................................14\n\
    \      5.1. Simple Authentication Method ..............................14\n  \
    \         5.1.1. Anonymous Authentication Mechanism of Simple Bind ..14\n    \
    \       5.1.2. Unauthenticated Authentication Mechanism of\n                 \
    \ Simple Bind ........................................14\n           5.1.3. Name/Password\
    \ Authentication Mechanism of\n                  Simple Bind ........................................15\n\
    \      5.2. SASL Authentication Method ................................16\n  \
    \         5.2.1. SASL Protocol Profile ..............................16\n    \
    \              5.2.1.1. SASL Service Name for LDAP ................16\n      \
    \            5.2.1.2. SASL Authentication Initiation and\n                   \
    \        Protocol Exchange .........................16\n                  5.2.1.3.\
    \ Optional Fields ...........................17\n                  5.2.1.4. Octet\
    \ Where Negotiated Security\n                           Layers Take Effect ........................18\n\
    \                  5.2.1.5. Determination of Supported SASL\n                \
    \           Mechanisms ................................18\n                  5.2.1.6.\
    \ Rules for Using SASL Layers ...............19\n                  5.2.1.7. Support\
    \ for Multiple Authentications ......19\n                  5.2.1.8. SASL Authorization\
    \ Identities .............19\n           5.2.2. SASL Semantics within LDAP .........................20\n\
    \           5.2.3. SASL EXTERNAL Authentication Mechanism .............20\n  \
    \                5.2.3.1. Implicit Assertion ........................21\n    \
    \              5.2.3.2. Explicit Assertion ........................21\n   6. Security\
    \ Considerations ........................................21\n      6.1. General\
    \ LDAP Security Considerations ......................21\n      6.2. StartTLS Security\
    \ Considerations ..........................22\n      6.3. Bind Operation Security\
    \ Considerations ....................23\n           6.3.1. Unauthenticated Mechanism\
    \ Security Considerations ..23\n           6.3.2. Name/Password Mechanism Security\
    \ Considerations ....23\n           6.3.3. Password-Related Security Considerations\
    \ ...........23\n           6.3.4. Hashed Password Security Considerations ............24\n\
    \      6.4. SASL Security Considerations ..............................24\n  \
    \    6.5. Related Security Considerations ...........................25\n   7.\
    \ IANA Considerations ............................................25\n   8. Acknowledgements\
    \ ...............................................25\n   9. Normative References\
    \ ...........................................26\n   10. Informative References\
    \ ........................................27\n   Appendix A. Authentication and\
    \ Authorization Concepts .............28\n      A.1. Access Control Policy .....................................28\n\
    \      A.2. Access Control Factors ....................................28\n  \
    \    A.3. Authentication, Credentials, Identity .....................28\n    \
    \  A.4. Authorization Identity ....................................29\n   Appendix\
    \ B. Summary of Changes ....................................29\n      B.1. Changes\
    \ Made to RFC 2251 ..................................30\n           B.1.1. Section\
    \ 4.2.1 (\"Sequencing of the Bind Request\") ...30\n           B.1.2. Section\
    \ 4.2.2 (\"Authentication and Other Security\n                  Services\") .........................................30\n\
    \      B.2. Changes Made to RFC 2829 ..................................30\n  \
    \         B.2.1. Section 4 (\"Required security mechanisms\") .........30\n  \
    \         B.2.2. Section 5.1 (\"Anonymous authentication\n                  procedure\"\
    ) ........................................31\n           B.2.3. Section 6 (\"\
    Password-based authentication\") ........31\n           B.2.4. Section 6.1 (\"\
    Digest authentication\") ..............31\n           B.2.5. Section 6.2 (\"'simple'\
    \ authentication choice under\n                  TLS encryption\") ...................................31\n\
    \           B.2.6. Section 6.3 (\"Other authentication choices with\n        \
    \          TLS\") ..............................................31\n         \
    \  B.2.7. Section 7.1 (\"Certificate-based authentication\n                  with\
    \ TLS\") .........................................31\n           B.2.8. Section\
    \ 8 (\"Other mechanisms\") .....................32\n           B.2.9. Section\
    \ 9 (\"Authorization Identity\") ...............32\n           B.2.10. Section\
    \ 10 (\"TLS Ciphersuites\") ...................32\n      B.3. Changes Made to\
    \ RFC 2830 ..................................32\n           B.3.1. Section 3.6\
    \ (\"Server Identity Check\") ..............32\n           B.3.2. Section 3.7\
    \ (\"Refresh of Server Capabilities\n                  Information\") ......................................33\n\
    \           B.3.3. Section 5 (\"Effects of TLS on a Client's\n               \
    \   Authorization Identity\") ...........................33\n           B.3.4.\
    \ Section 5.2 (\"TLS Connection Closure Effects\") .....33\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Lightweight Directory Access Protocol (LDAP) [RFC4510]\
    \ is a\n   powerful protocol for accessing directories.  It offers means of\n\
    \   searching, retrieving, and manipulating directory content and ways to\n  \
    \ access a rich set of security functions.\n   It is vital that these security\
    \ functions be interoperable among all\n   LDAP clients and servers on the Internet;\
    \ therefore there has to be a\n   minimum subset of security functions that is\
    \ common to all\n   implementations that claim LDAP conformance.\n   Basic threats\
    \ to an LDAP directory service include (but are not\n   limited to):\n   (1) Unauthorized\
    \ access to directory data via data-retrieval\n       operations.\n   (2) Unauthorized\
    \ access to directory data by monitoring access of\n       others.\n   (3) Unauthorized\
    \ access to reusable client authentication information\n       by monitoring access\
    \ of others.\n   (4) Unauthorized modification of directory data.\n   (5) Unauthorized\
    \ modification of configuration information.\n   (6) Denial of Service: Use of\
    \ resources (commonly in excess) in a\n       manner intended to deny service\
    \ to others.\n   (7) Spoofing: Tricking a user or client into believing that\n\
    \       information came from the directory when in fact it did not,\n       either\
    \ by modifying data in transit or misdirecting the client's\n       transport\
    \ connection.  Tricking a user or client into sending\n       privileged information\
    \ to a hostile entity that appears to be the\n       directory server but is not.\
    \  Tricking a directory server into\n       believing that information came from\
    \ a particular client when in\n       fact it came from a hostile entity.\n  \
    \ (8) Hijacking: An attacker seizes control of an established protocol\n     \
    \  session.\n   Threats (1), (4), (5), (6), (7), and (8) are active attacks. \
    \ Threats\n   (2) and (3) are passive attacks.\n   Threats (1), (4), (5), and\
    \ (6) are due to hostile clients.  Threats\n   (2), (3), (7), and (8) are due\
    \ to hostile agents on the path between\n   client and server or hostile agents\
    \ posing as a server, e.g., IP\n   spoofing.\n   LDAP offers the following security\
    \ mechanisms:\n   (1) Authentication by means of the Bind operation.  The Bind\n\
    \       operation provides a simple method that supports anonymous,\n       unauthenticated,\
    \ and name/password mechanisms, and the Simple\n       Authentication and Security\
    \ Layer (SASL) method, which supports a\n       wide variety of authentication\
    \ mechanisms.\n   (2) Mechanisms to support vendor-specific access control facilities\n\
    \       (LDAP does not offer a standard access control facility).\n   (3) Data\
    \ integrity service by means of security layers in Transport\n       Layer Security\
    \ (TLS) or SASL mechanisms.\n   (4) Data confidentiality service by means of security\
    \ layers in TLS\n       or SASL mechanisms.\n   (5) Server resource usage limitation\
    \ by means of administrative\n       limits configured on the server.\n   (6)\
    \ Server authentication by means of the TLS protocol or SASL\n       mechanisms.\n\
    \   LDAP may also be protected by means outside the LDAP protocol, e.g.,\n   with\
    \ IP layer security [RFC4301].\n   Experience has shown that simply allowing implementations\
    \ to pick and\n   choose the security mechanisms that will be implemented is not\
    \ a\n   strategy that leads to interoperability.  In the absence of mandates,\n\
    \   clients will continue to be written that do not support any security\n   function\
    \ supported by the server, or worse, they will only support\n   mechanisms that\
    \ provide inadequate security for most circumstances.\n   It is desirable to allow\
    \ clients to authenticate using a variety of\n   mechanisms including mechanisms\
    \ where identities are represented as\n   distinguished names [X.501][RFC4512],\
    \ in string form [RFC4514], or as\n   used in different systems (e.g., simple\
    \ user names [RFC4013]).\n   Because some authentication mechanisms transmit credentials\
    \ in plain\n   text form, and/or do not provide data security services and/or\
    \ are\n   subject to passive attacks, it is necessary to ensure secure\n   interoperability\
    \ by identifying a mandatory-to-implement mechanism\n   for establishing transport-layer\
    \ security services.\n   The set of security mechanisms provided in LDAP and described\
    \ in this\n   document is intended to meet the security needs for a wide range\
    \ of\n   deployment scenarios and still provide a high degree of\n   interoperability\
    \ among various LDAP implementations and deployments.\n"
- title: 1.1.  Relationship to Other Documents
  contents:
  - "1.1.  Relationship to Other Documents\n   This document is an integral part of\
    \ the LDAP Technical Specification\n   [RFC4510].\n   This document, together\
    \ with [RFC4510], [RFC4511], and [RFC4512],\n   obsoletes RFC 2251 in its entirety.\
    \  Sections 4.2.1 (portions) and\n   4.2.2 of RFC 2251 are obsoleted by this document.\
    \  Appendix B.1\n   summarizes the substantive changes made to RFC 2251 by this\
    \ document.\n   This document obsoletes RFC 2829 in its entirety.  Appendix B.2\n\
    \   summarizes the substantive changes made to RFC 2829 by this document.\n  \
    \ Sections 2 and 4 of RFC 2830 are obsoleted by [RFC4511].  The\n   remainder\
    \ of RFC 2830 is obsoleted by this document.  Appendix B.3\n   summarizes the\
    \ substantive changes made to RFC 2830 by this document.\n"
- title: 1.2.  Conventions
  contents:
  - "1.2.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"SHALL\", \"SHOULD\"\
    , \"SHOULD NOT\",\n   \"MAY\", and \"OPTIONAL\" in this document are to be interpreted\
    \ as\n   described in RFC 2119 [RFC2119].\n   The term \"user\" represents any\
    \ human or application entity that is\n   accessing the directory using a directory\
    \ client.  A directory client\n   (or client) is also known as a directory user\
    \ agent (DUA).\n   The term \"transport connection\" refers to the underlying\
    \ transport\n   services used to carry the protocol exchange, as well as associations\n\
    \   established by these services.\n   The term \"TLS layer\" refers to TLS services\
    \ used in providing\n   security services, as well as associations established\
    \ by these\n   services.\n   The term \"SASL layer\" refers to SASL services used\
    \ in providing\n   security services, as well as associations established by these\n\
    \   services.\n   The term \"LDAP message layer\" refers to the LDAP Message (PDU)\n\
    \   services used in providing directory services, as well as\n   associations\
    \ established by these services.\n   The term \"LDAP session\" refers to combined\
    \ services (transport\n   connection, TLS layer, SASL layer, LDAP message layer)\
    \ and their\n   associations.\n   In general, security terms in this document\
    \ are used consistently\n   with the definitions provided in [RFC2828].  In addition,\
    \ several\n   terms and concepts relating to security, authentication, and\n \
    \  authorization are presented in Appendix A of this document.  While\n   the\
    \ formal definition of these terms and concepts is outside the\n   scope of this\
    \ document, an understanding of them is prerequisite to\n   understanding much\
    \ of the material in this document.  Readers who are\n   unfamiliar with security-related\
    \ concepts are encouraged to review\n   Appendix A before reading the remainder\
    \ of this document.\n"
- title: 2.  Implementation Requirements
  contents:
  - "2.  Implementation Requirements\n   LDAP server implementations MUST support\
    \ the anonymous authentication\n   mechanism of the simple Bind method (Section\
    \ 5.1.1).\n   LDAP implementations that support any authentication mechanism other\n\
    \   than the anonymous authentication mechanism of the simple Bind method\n  \
    \ MUST support the name/password authentication mechanism of the simple\n   Bind\
    \ method (Section 5.1.3) and MUST be capable of protecting this\n   name/password\
    \ authentication using TLS as established by the StartTLS\n   operation (Section\
    \ 3).\n   Implementations SHOULD disallow the use of the name/password\n   authentication\
    \ mechanism by default when suitable data security\n   services are not in place,\
    \ and they MAY provide other suitable data\n   security services for use with\
    \ this authentication mechanism.\n   Implementations MAY support additional authentication\
    \ mechanisms.\n   Some of these mechanisms are discussed below.\n   LDAP server\
    \ implementations SHOULD support client assertion of\n   authorization identity\
    \ via the SASL EXTERNAL mechanism (Section\n   5.2.3).\n   LDAP server implementations\
    \ that support no authentication mechanism\n   other than the anonymous mechanism\
    \ of the simple bind method SHOULD\n   support use of TLS as established by the\
    \ StartTLS operation (Section\n   3).  (Other servers MUST support TLS per the\
    \ second paragraph of this\n   section.)\n   Implementations supporting TLS MUST\
    \ support the\n   TLS_RSA_WITH_3DES_EDE_CBC_SHA ciphersuite and SHOULD support\
    \ the\n   TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA ciphersuite.  Support for the\n  \
    \ latter ciphersuite is recommended to encourage interoperability with\n   implementations\
    \ conforming to earlier LDAP StartTLS specifications.\n"
- title: 3.  StartTLS Operation
  contents:
  - "3.  StartTLS Operation\n   The Start Transport Layer Security (StartTLS) operation\
    \ defined in\n   Section 4.14 of [RFC4511] provides the ability to establish TLS\n\
    \   [RFC4346] in an LDAP session.\n   The goals of using the TLS protocol with\
    \ LDAP are to ensure data\n   confidentiality and integrity, and to optionally\
    \ provide for\n   authentication.  TLS expressly provides these capabilities,\
    \ although\n   the authentication services of TLS are available to LDAP only in\n\
    \   combination with the SASL EXTERNAL authentication method (see Section\n  \
    \ 5.2.3), and then only if the SASL EXTERNAL implementation chooses to\n   make\
    \ use of the TLS credentials.\n"
- title: 3.1.  TLS Establishment Procedures
  contents:
  - "3.1.  TLS Establishment Procedures\n   This section describes the overall procedures\
    \ clients and servers\n   must follow for TLS establishment.  These procedures\
    \ take into\n   consideration various aspects of the TLS layer including discovery\
    \ of\n   resultant security level and assertion of the client's authorization\n\
    \   identity.\n"
- title: 3.1.1.  StartTLS Request Sequencing
  contents:
  - "3.1.1.  StartTLS Request Sequencing\n   A client may send the StartTLS extended\
    \ request at any time after\n   establishing an LDAP session, except:\n      -\
    \ when TLS is currently established on the session,\n      - when a multi-stage\
    \ SASL negotiation is in progress on the\n        session, or\n      - when there\
    \ are outstanding responses for operation requests\n        previously issued\
    \ on the session.\n   As described in [RFC4511], Section 4.14.1, a (detected)\
    \ violation of\n   any of these requirements results in a return of the operationsError\n\
    \   resultCode.\n   Client implementers should ensure that they strictly follow\
    \ these\n   operation sequencing requirements to prevent interoperability issues.\n\
    \   Operational experience has shown that violating these requirements\n   causes\
    \ interoperability issues because there are race conditions that\n   prevent servers\
    \ from detecting some violations of these requirements\n   due to factors such\
    \ as server hardware speed and network latencies.\n   There is no general requirement\
    \ that the client have or have not\n   already performed a Bind operation (Section\
    \ 5) before sending a\n   StartTLS operation request; however, where a client\
    \ intends to\n   perform both a Bind operation and a StartTLS operation, it SHOULD\n\
    \   first perform the StartTLS operation so that the Bind request and\n   response\
    \ messages are protected by the data security services\n   established by the\
    \ StartTLS operation.\n"
- title: 3.1.2.  Client Certificate
  contents:
  - "3.1.2.  Client Certificate\n   If an LDAP server requests or demands that a client\
    \ provide a user\n   certificate during TLS negotiation and the client does not\
    \ present a\n   suitable user certificate (e.g., one that can be validated), the\n\
    \   server may use a local security policy to determine whether to\n   successfully\
    \ complete TLS negotiation.\n   If a client that has provided a suitable certificate\
    \ subsequently\n   performs a Bind operation using the SASL EXTERNAL authentication\n\
    \   mechanism (Section 5.2.3), information in the certificate may be used\n  \
    \ by the server to identify and authenticate the client.\n"
- title: 3.1.3.  Server Identity Check
  contents:
  - "3.1.3.  Server Identity Check\n   In order to prevent man-in-the-middle attacks,\
    \ the client MUST verify\n   the server's identity (as presented in the server's\
    \ Certificate\n   message).  In this section, the client's understanding of the\n\
    \   server's identity (typically the identity used to establish the\n   transport\
    \ connection) is called the \"reference identity\".\n   The client determines\
    \ the type (e.g., DNS name or IP address) of the\n   reference identity and performs\
    \ a comparison between the reference\n   identity and each subjectAltName value\
    \ of the corresponding type\n   until a match is produced.  Once a match is produced,\
    \ the server's\n   identity has been verified, and the server identity check is\n\
    \   complete.  Different subjectAltName types are matched in different\n   ways.\
    \  Sections 3.1.3.1 - 3.1.3.3 explain how to compare values of\n   various subjectAltName\
    \ types.\n   The client may map the reference identity to a different type prior\n\
    \   to performing a comparison.  Mappings may be performed for all\n   available\
    \ subjectAltName types to which the reference identity can be\n   mapped; however,\
    \ the reference identity should only be mapped to\n   types for which the mapping\
    \ is either inherently secure (e.g.,\n   extracting the DNS name from a URI to\
    \ compare with a subjectAltName\n   of type dNSName) or for which the mapping\
    \ is performed in a secure\n   manner (e.g., using DNSSEC, or using user- or admin-configured\
    \ host-\n   to-address/address-to-host lookup tables).\n   The server's identity\
    \ may also be verified by comparing the reference\n   identity to the Common Name\
    \ (CN) [RFC4519] value in the leaf Relative\n   Distinguished Name (RDN) of the\
    \ subjectName field of the server's\n   certificate.  This comparison is performed\
    \ using the rules for\n   comparison of DNS names in Section 3.1.3.1, below, with\
    \ the exception\n   that no wildcard matching is allowed.  Although the use of\
    \ the Common\n   Name value is existing practice, it is deprecated, and Certification\n\
    \   Authorities are encouraged to provide subjectAltName values instead.\n   Note\
    \ that the TLS implementation may represent DNs in certificates\n   according\
    \ to X.500 or other conventions.  For example, some X.500\n   implementations\
    \ order the RDNs in a DN using a left-to-right (most\n   significant to least\
    \ significant) convention instead of LDAP's\n   right-to-left convention.\n  \
    \ If the server identity check fails, user-oriented clients SHOULD\n   either\
    \ notify the user (clients may give the user the opportunity to\n   continue with\
    \ the LDAP session in this case) or close the transport\n   connection and indicate\
    \ that the server's identity is suspect.\n   Automated clients SHOULD close the\
    \ transport connection and then\n   return or log an error indicating that the\
    \ server's identity is\n   suspect or both.\n   Beyond the server identity check\
    \ described in this section, clients\n   should be prepared to do further checking\
    \ to ensure that the server\n   is authorized to provide the service it is requested\
    \ to provide.  The\n   client may need to make use of local policy information\
    \ in making\n   this determination.\n"
- title: 3.1.3.1.  Comparison of DNS Names
  contents:
  - "3.1.3.1.  Comparison of DNS Names\n   If the reference identity is an internationalized\
    \ domain name,\n   conforming implementations MUST convert it to the ASCII Compatible\n\
    \   Encoding (ACE) format as specified in Section 4 of RFC 3490 [RFC3490]\n  \
    \ before comparison with subjectAltName values of type dNSName.\n   Specifically,\
    \ conforming implementations MUST perform the conversion\n   operation specified\
    \ in Section 4 of RFC 3490 as follows:\n      * in step 1, the domain name SHALL\
    \ be considered a \"stored\n        string\";\n      * in step 3, set the flag\
    \ called \"UseSTD3ASCIIRules\";\n      * in step 4, process each label with the\
    \ \"ToASCII\" operation; and\n      * in step 5, change all label separators to\
    \ U+002E (full stop).\n   After performing the \"to-ASCII\" conversion, the DNS\
    \ labels and names\n   MUST be compared for equality according to the rules specified\
    \ in\n   Section 3 of RFC3490.\n   The '*' (ASCII 42) wildcard character is allowed\
    \ in subjectAltName\n   values of type dNSName, and then only as the left-most\
    \ (least\n   significant) DNS label in that value.  This wildcard matches any\n\
    \   left-most DNS label in the server name.  That is, the subject\n   *.example.com\
    \ matches the server names a.example.com and\n   b.example.com, but does not match\
    \ example.com or a.b.example.com.\n"
- title: 3.1.3.2.  Comparison of IP Addresses
  contents:
  - "3.1.3.2.  Comparison of IP Addresses\n   When the reference identity is an IP\
    \ address, the identity MUST be\n   converted to the \"network byte order\" octet\
    \ string representation\n   [RFC791][RFC2460].  For IP Version 4, as specified\
    \ in RFC 791, the\n   octet string will contain exactly four octets.  For IP Version\
    \ 6, as\n   specified in RFC 2460, the octet string will contain exactly sixteen\n\
    \   octets.  This octet string is then compared against subjectAltName\n   values\
    \ of type iPAddress.  A match occurs if the reference identity\n   octet string\
    \ and value octet strings are identical.\n"
- title: 3.1.3.3.  Comparison of Other subjectName Types
  contents:
  - "3.1.3.3.  Comparison of Other subjectName Types\n   Client implementations MAY\
    \ support matching against subjectAltName\n   values of other types as described\
    \ in other documents.\n"
- title: 3.1.4.  Discovery of Resultant Security Level
  contents:
  - "3.1.4.  Discovery of Resultant Security Level\n   After a TLS layer is established\
    \ in an LDAP session, both parties are\n   to each independently decide whether\
    \ or not to continue based on\n   local policy and the security level achieved.\
    \  If either party\n   decides that the security level is inadequate for it to\
    \ continue, it\n   SHOULD remove the TLS layer immediately after the TLS (re)negotiation\n\
    \   has completed (see [RFC4511], Section 4.14.3, and Section 3.2 below).\n  \
    \ Implementations may reevaluate the security level at any time and,\n   upon\
    \ finding it inadequate, should remove the TLS layer.\n"
- title: 3.1.5.  Refresh of Server Capabilities Information
  contents:
  - "3.1.5.  Refresh of Server Capabilities Information\n   After a TLS layer is established\
    \ in an LDAP session, the client\n   SHOULD discard or refresh all information\
    \ about the server that it\n   obtained prior to the initiation of the TLS negotiation\
    \ and that it\n   did not obtain through secure mechanisms.  This protects against\n\
    \   man-in-the-middle attacks that may have altered any server\n   capabilities\
    \ information retrieved prior to TLS layer installation.\n   The server may advertise\
    \ different capabilities after installing a\n   TLS layer.  In particular, the\
    \ value of 'supportedSASLMechanisms' may\n   be different after a TLS layer has\
    \ been installed (specifically, the\n   EXTERNAL and PLAIN [PLAIN] mechanisms\
    \ are likely to be listed only\n   after a TLS layer has been installed).\n"
- title: 3.2.  Effect of TLS on Authorization State
  contents:
  - "3.2.  Effect of TLS on Authorization State\n   The establishment, change, and/or\
    \ closure of TLS may cause the\n   authorization state to move to a new state.\
    \  This is discussed\n   further in Section 4.\n"
- title: 3.3.  TLS Ciphersuites
  contents:
  - "3.3.  TLS Ciphersuites\n   Several issues should be considered when selecting\
    \ TLS ciphersuites\n   that are appropriate for use in a given circumstance. \
    \ These issues\n   include the following:\n      - The ciphersuite's ability to\
    \ provide adequate confidentiality\n        protection for passwords and other\
    \ data sent over the transport\n        connection.  Client and server implementers\
    \ should recognize\n        that some TLS ciphersuites provide no confidentiality\n\
    \        protection, while other ciphersuites that do provide\n        confidentiality\
    \ protection may be vulnerable to being cracked\n        using brute force methods,\
    \ especially in light of ever-\n        increasing CPU speeds that reduce the\
    \ time needed to\n        successfully mount such attacks.\n      - Client and\
    \ server implementers should carefully consider the\n        value of the password\
    \ or data being protected versus the level\n        of confidentiality protection\
    \ provided by the ciphersuite to\n        ensure that the level of protection\
    \ afforded by the ciphersuite\n        is appropriate.\n      - The ciphersuite's\
    \ vulnerability (or lack thereof) to man-in-the-\n        middle attacks.  Ciphersuites\
    \ vulnerable to man-in-the-middle\n        attacks SHOULD NOT be used to protect\
    \ passwords or sensitive\n        data, unless the network configuration is such\
    \ that the danger\n        of a man-in-the-middle attack is negligible.\n    \
    \  - After a TLS negotiation (either initial or subsequent) is\n        completed,\
    \ both protocol peers should independently verify that\n        the security services\
    \ provided by the negotiated ciphersuite are\n        adequate for the intended\
    \ use of the LDAP session.  If they are\n        not, the TLS layer should be\
    \ closed.\n"
- title: 4.  Authorization State
  contents:
  - "4.  Authorization State\n   Every LDAP session has an associated authorization\
    \ state.  This state\n   is comprised of numerous factors such as what (if any)\
    \ authentication\n   state has been established, how it was established, and what\
    \ security\n   services are in place.  Some factors may be determined and/or\n\
    \   affected by protocol events (e.g., Bind, StartTLS, or TLS closure),\n   and\
    \ some factors may be determined by external events (e.g., time of\n   day or\
    \ server load).\n   While it is often convenient to view authorization state in\n\
    \   simplistic terms (as we often do in this technical specification)\n   such\
    \ as \"an anonymous state\", it is noted that authorization systems\n   in LDAP\
    \ implementations commonly involve many factors that\n   interrelate in complex\
    \ manners.\n   Authorization in LDAP is a local matter.  One of the key factors\
    \ in\n   making authorization decisions is authorization identity.  The Bind\n\
    \   operation (defined in Section 4.2 of [RFC4511] and discussed further\n   in\
    \ Section 5 below) allows information to be exchanged between the\n   client and\
    \ server to establish an authorization identity for the LDAP\n   session.  The\
    \ Bind operation may also be used to move the LDAP\n   session to an anonymous\
    \ authorization state (see Section 5.1.1).\n   Upon initial establishment of the\
    \ LDAP session, the session has an\n   anonymous authorization identity.  Among\
    \ other things this implies\n   that the client need not send a BindRequest in\
    \ the first PDU of the\n   LDAP message layer.  The client may send any operation\
    \ request prior\n   to performing a Bind operation, and the server MUST treat\
    \ it as if it\n   had been performed after an anonymous Bind operation (Section\
    \ 5.1.1).\n   Upon receipt of a Bind request, the server immediately moves the\n\
    \   session to an anonymous authorization state.  If the Bind request is\n   successful,\
    \ the session is moved to the requested authentication\n   state with its associated\
    \ authorization state.  Otherwise, the\n   session remains in an anonymous state.\n\
    \   It is noted that other events both internal and external to LDAP may\n   result\
    \ in the authentication and authorization states being moved to\n   an anonymous\
    \ one.  For instance, the establishment, change, or\n   closure of data security\
    \ services may result in a move to an\n   anonymous state, or the user's credential\
    \ information (e.g.,\n   certificate) may have expired.  The former is an example\
    \ of an event\n   internal to LDAP, whereas the latter is an example of an event\n\
    \   external to LDAP.\n"
- title: 5.  Bind Operation
  contents:
  - "5.  Bind Operation\n   The Bind operation ([RFC4511], Section 4.2) allows authentication\n\
    \   information to be exchanged between the client and server to\n   establish\
    \ a new authorization state.\n   The Bind request typically specifies the desired\
    \ authentication\n   identity.  Some Bind mechanisms also allow the client to\
    \ specify the\n   authorization identity.  If the authorization identity is not\n\
    \   specified, the server derives it from the authentication identity in\n   an\
    \ implementation-specific manner.\n   If the authorization identity is specified,\
    \ the server MUST verify\n   that the client's authentication identity is permitted\
    \ to assume\n   (e.g., proxy for) the asserted authorization identity.  The server\n\
    \   MUST reject the Bind operation with an invalidCredentials resultCode\n   in\
    \ the Bind response if the client is not so authorized.\n"
- title: 5.1.  Simple Authentication Method
  contents:
  - "5.1.  Simple Authentication Method\n   The simple authentication method of the\
    \ Bind Operation provides three\n   authentication mechanisms:\n      - An anonymous\
    \ authentication mechanism (Section 5.1.1).\n      - An unauthenticated authentication\
    \ mechanism (Section 5.1.2).\n      - A name/password authentication mechanism\
    \ using credentials\n        consisting of a name (in the form of an LDAP distinguished\
    \ name\n        [RFC4514]) and a password (Section 5.1.3).\n"
- title: 5.1.1.  Anonymous Authentication Mechanism of Simple Bind
  contents:
  - "5.1.1.  Anonymous Authentication Mechanism of Simple Bind\n   An LDAP client\
    \ may use the anonymous authentication mechanism of the\n   simple Bind method\
    \ to explicitly establish an anonymous authorization\n   state by sending a Bind\
    \ request with a name value of zero length and\n   specifying the simple authentication\
    \ choice containing a password\n   value of zero length.\n"
- title: 5.1.2.  Unauthenticated Authentication Mechanism of Simple Bind
  contents:
  - "5.1.2.  Unauthenticated Authentication Mechanism of Simple Bind\n   An LDAP client\
    \ may use the unauthenticated authentication mechanism\n   of the simple Bind\
    \ method to establish an anonymous authorization\n   state by sending a Bind request\
    \ with a name value (a distinguished\n   name in LDAP string form [RFC4514] of\
    \ non-zero length) and specifying\n   the simple authentication choice containing\
    \ a password value of zero\n   length.\n   The distinguished name value provided\
    \ by the client is intended to be\n   used for trace (e.g., logging) purposes\
    \ only.  The value is not to be\n   authenticated or otherwise validated (including\
    \ verification that the\n   DN refers to an existing directory object).  The value\
    \ is not to be\n   used (directly or indirectly) for authorization purposes.\n\
    \   Unauthenticated Bind operations can have significant security issues\n   (see\
    \ Section 6.3.1).  In particular, users intending to perform\n   Name/Password\
    \ Authentication may inadvertently provide an empty\n   password and thus cause\
    \ poorly implemented clients to request\n   Unauthenticated access.  Clients SHOULD\
    \ be implemented to require\n   user selection of the Unauthenticated Authentication\
    \ Mechanism by\n   means other than user input of an empty password.  Clients\
    \ SHOULD\n   disallow an empty password input to a Name/Password Authentication\n\
    \   user interface.  Additionally, Servers SHOULD by default fail\n   Unauthenticated\
    \ Bind requests with a resultCode of\n   unwillingToPerform.\n"
- title: 5.1.3.  Name/Password Authentication Mechanism of Simple Bind
  contents:
  - "5.1.3.  Name/Password Authentication Mechanism of Simple Bind\n   An LDAP client\
    \ may use the name/password authentication mechanism of\n   the simple Bind method\
    \ to establish an authenticated authorization\n   state by sending a Bind request\
    \ with a name value (a distinguished\n   name in LDAP string form [RFC4514] of\
    \ non-zero length) and specifying\n   the simple authentication choice containing\
    \ an OCTET STRING password\n   value of non-zero length.\n   Servers that map\
    \ the DN sent in the Bind request to a directory entry\n   with an associated\
    \ set of one or more passwords used with this\n   mechanism will compare the presented\
    \ password to that set of\n   passwords.  The presented password is considered\
    \ valid if it matches\n   any member of this set.\n   A resultCode of invalidDNSyntax\
    \ indicates that the DN sent in the\n   name value is syntactically invalid. \
    \ A resultCode of\n   invalidCredentials indicates that the DN is syntactically\
    \ correct but\n   not valid for purposes of authentication, that the password\
    \ is not\n   valid for the DN, or that the server otherwise considers the\n  \
    \ credentials invalid.  A resultCode of success indicates that the\n   credentials\
    \ are valid and that the server is willing to provide\n   service to the entity\
    \ these credentials identify.\n   Server behavior is undefined for Bind requests\
    \ specifying the\n   name/password authentication mechanism with a zero-length\
    \ name value\n   and a password value of non-zero length.\n   The name/password\
    \ authentication mechanism of the simple Bind method\n   is not suitable for authentication\
    \ in environments without\n   confidentiality protection.\n"
- title: 5.2.  SASL Authentication Method
  contents:
  - "5.2.  SASL Authentication Method\n   The sasl authentication method of the Bind\
    \ Operation provides\n   facilities for using any SASL mechanism including authentication\n\
    \   mechanisms and other services (e.g., data security services).\n"
- title: 5.2.1.  SASL Protocol Profile
  contents:
  - "5.2.1.  SASL Protocol Profile\n   LDAP allows authentication via any SASL mechanism\
    \ [RFC4422].  As LDAP\n   includes native anonymous and name/password (plain text)\n\
    \   authentication methods, the ANONYMOUS [RFC4505] and PLAIN [PLAIN]\n   SASL\
    \ mechanisms are typically not used with LDAP.\n   Each protocol that utilizes\
    \ SASL services is required to supply\n   certain information profiling the way\
    \ they are exposed through the\n   protocol ([RFC4422], Section 4).  This section\
    \ explains how each of\n   these profiling requirements is met by LDAP.\n"
- title: 5.2.1.1.  SASL Service Name for LDAP
  contents:
  - "5.2.1.1.  SASL Service Name for LDAP\n   The SASL service name for LDAP is \"\
    ldap\", which has been registered\n   with the IANA as a SASL service name.\n"
- title: 5.2.1.2.  SASL Authentication Initiation and Protocol Exchange
  contents:
  - "5.2.1.2.  SASL Authentication Initiation and Protocol Exchange\n   SASL authentication\
    \ is initiated via a BindRequest message\n   ([RFC4511], Section 4.2) with the\
    \ following parameters:\n      - The version is 3.\n      - The AuthenticationChoice\
    \ is sasl.\n      - The mechanism element of the SaslCredentials sequence contains\n\
    \        the value of the desired SASL mechanism.\n      - The optional credentials\
    \ field of the SaslCredentials sequence\n        MAY be used to provide an initial\
    \ client response for mechanisms\n        that are defined to have the client\
    \ send data first (see\n        [RFC4422], Sections 3 and 5).\n   In general,\
    \ a SASL authentication protocol exchange consists of a\n   series of server challenges\
    \ and client responses, the contents of\n   which are specific to and defined\
    \ by the SASL mechanism.  Thus, for\n   some SASL authentication mechanisms, it\
    \ may be necessary for the\n   client to respond to one or more server challenges\
    \ by sending\n   BindRequest messages multiple times.  A challenge is indicated\
    \ by the\n   server sending a BindResponse message with the resultCode set to\n\
    \   saslBindInProgress.  This indicates that the server requires the\n   client\
    \ to send a new BindRequest message with the same SASL mechanism\n   to continue\
    \ the authentication process.\n   To the LDAP message layer, these challenges\
    \ and responses are opaque\n   binary tokens of arbitrary length.  LDAP servers\
    \ use the\n   serverSaslCreds field (an OCTET STRING) in a BindResponse message\
    \ to\n   transmit each challenge.  LDAP clients use the credentials field (an\n\
    \   OCTET STRING) in the SaslCredentials sequence of a BindRequest\n   message\
    \ to transmit each response.  Note that unlike some Internet\n   protocols where\
    \ SASL is used, LDAP is not text based and does not\n   Base64-transform these\
    \ challenge and response values.\n   Clients sending a BindRequest message with\
    \ the sasl choice selected\n   SHOULD send a zero-length value in the name field.\
    \  Servers receiving\n   a BindRequest message with the sasl choice selected SHALL\
    \ ignore any\n   value in the name field.\n   A client may abort a SASL Bind negotiation\
    \ by sending a BindRequest\n   message with a different value in the mechanism\
    \ field of\n   SaslCredentials or with an AuthenticationChoice other than sasl.\n\
    \   If the client sends a BindRequest with the sasl mechanism field as an\n  \
    \ empty string, the server MUST return a BindResponse with a resultCode\n   of\
    \ authMethodNotSupported.  This will allow the client to abort a\n   negotiation\
    \ if it wishes to try again with the same SASL mechanism.\n   The server indicates\
    \ completion of the SASL challenge-response\n   exchange by responding with a\
    \ BindResponse in which the resultCode\n   value is not saslBindInProgress.\n\
    \   The serverSaslCreds field in the BindResponse can be used to include\n   an\
    \ optional challenge with a success notification for mechanisms that\n   are defined\
    \ to have the server send additional data along with the\n   indication of successful\
    \ completion.\n"
- title: 5.2.1.3.  Optional Fields
  contents:
  - "5.2.1.3.  Optional Fields\n   As discussed above, LDAP provides an optional field\
    \ for carrying an\n   initial response in the message initiating the SASL exchange\
    \ and\n   provides an optional field for carrying additional data in the\n   message\
    \ indicating the outcome of the authentication exchange.  As\n   the mechanism-specific\
    \ content in these fields may be zero length,\n   SASL requires protocol specifications\
    \ to detail how an empty field is\n   distinguished from an absent field.\n  \
    \ Zero-length initial response data is distinguished from no initial\n   response\
    \ data in the initiating message, a BindRequest PDU, by the\n   presence of the\
    \ SaslCredentials.credentials OCTET STRING (of length\n   zero) in that PDU. \
    \ If the client does not intend to send an initial\n   response with the BindRequest\
    \ initiating the SASL exchange, it MUST\n   omit the SaslCredentials.credentials\
    \ OCTET STRING (rather than\n   include an zero-length OCTET STRING).\n   Zero-length\
    \ additional data is distinguished from no additional\n   response data in the\
    \ outcome message, a BindResponse PDU, by the\n   presence of the serverSaslCreds\
    \ OCTET STRING (of length zero) in that\n   PDU.  If a server does not intend\
    \ to send additional data in the\n   BindResponse message indicating outcome of\
    \ the exchange, the server\n   SHALL omit the serverSaslCreds OCTET STRING (rather\
    \ than including a\n   zero-length OCTET STRING).\n"
- title: 5.2.1.4.  Octet Where Negotiated Security Layers Take Effect
  contents:
  - "5.2.1.4.  Octet Where Negotiated Security Layers Take Effect\n   SASL layers\
    \ take effect following the transmission by the server and\n   reception by the\
    \ client of the final BindResponse in the SASL\n   exchange with a resultCode\
    \ of success.\n   Once a SASL layer providing data integrity or confidentiality\n\
    \   services takes effect, the layer remains in effect until a new layer\n   is\
    \ installed (i.e., at the first octet following the final\n   BindResponse of\
    \ the Bind operation that caused the new layer to take\n   effect).  Thus, an\
    \ established SASL layer is not affected by a failed\n   or non-SASL Bind.\n"
- title: 5.2.1.5.  Determination of Supported SASL Mechanisms
  contents:
  - "5.2.1.5.  Determination of Supported SASL Mechanisms\n   Clients may determine\
    \ the SASL mechanisms a server supports by\n   reading the 'supportedSASLMechanisms'\
    \ attribute from the root DSE\n   (DSA-Specific Entry) ([RFC4512], Section 5.1).\
    \  The values of this\n   attribute, if any, list the mechanisms the server supports\
    \ in the\n   current LDAP session state.  LDAP servers SHOULD allow all clients\
    \ --\n   even those with an anonymous authorization -- to retrieve the\n   'supportedSASLMechanisms'\
    \ attribute of the root DSE both before and\n   after the SASL authentication\
    \ exchange.  The purpose of the latter is\n   to allow the client to detect possible\
    \ downgrade attacks (see Section\n   6.4 and [RFC4422], Section 6.1.2).\n   Because\
    \ SASL mechanisms provide critical security functions, clients\n   and servers\
    \ should be configurable to specify what mechanisms are\n   acceptable and allow\
    \ only those mechanisms to be used.  Both clients\n   and servers must confirm\
    \ that the negotiated security level meets\n   their requirements before proceeding\
    \ to use the session.\n"
- title: 5.2.1.6.  Rules for Using SASL Layers
  contents:
  - "5.2.1.6.  Rules for Using SASL Layers\n   Upon installing a SASL layer, the client\
    \ SHOULD discard or refresh\n   all information about the server that it obtained\
    \ prior to the\n   initiation of the SASL negotiation and that it did not obtain\
    \ through\n   secure mechanisms.\n   If a lower-level security layer (such as\
    \ TLS) is installed, any SASL\n   layer SHALL be layered on top of such security\
    \ layers regardless of\n   the order of their negotiation.  In all other respects,\
    \ the SASL\n   layer and other security layers act independently, e.g., if both\
    \ a\n   TLS layer and a SASL layer are in effect, then removing the TLS layer\n\
    \   does not affect the continuing service of the SASL layer.\n"
- title: 5.2.1.7.  Support for Multiple Authentications
  contents:
  - "5.2.1.7.  Support for Multiple Authentications\n   LDAP supports multiple SASL\
    \ authentications as defined in [RFC4422],\n   Section 4.\n"
- title: 5.2.1.8.  SASL Authorization Identities
  contents:
  - "5.2.1.8.  SASL Authorization Identities\n   Some SASL mechanisms allow clients\
    \ to request a desired authorization\n   identity for the LDAP session ([RFC4422],\
    \ Section 3.4).  The decision\n   to allow or disallow the current authentication\
    \ identity to have\n   access to the requested authorization identity is a matter\
    \ of local\n   policy.  The authorization identity is a string of UTF-8 [RFC3629]\n\
    \   encoded [Unicode] characters corresponding to the following Augmented\n  \
    \ Backus-Naur Form (ABNF) [RFC4234] grammar:\n      authzId = dnAuthzId / uAuthzId\n\
    \      ; distinguished-name-based authz id\n      dnAuthzId =  \"dn:\" distinguishedName\n\
    \      ; unspecified authorization id, UTF-8 encoded\n      uAuthzId = \"u:\"\
    \ userid\n      userid = *UTF8 ; syntax unspecified\n   where the distinguishedName\
    \ rule is defined in Section 3 of [RFC4514]\n   and the UTF8 rule is defined in\
    \ Section 1.4 of [RFC4512].\n   The dnAuthzId choice is used to assert authorization\
    \ identities in\n   the form of a distinguished name to be matched in accordance\
    \ with the\n   distinguishedNameMatch matching rule ([RFC4517], Section 4.2.15).\n\
    \   There is no requirement that the asserted distinguishedName value be\n   that\
    \ of an entry in the directory.\n   The uAuthzId choice allows clients to assert\
    \ an authorization\n   identity that is not in distinguished name form.  The format\
    \ of\n   userid is defined only as a sequence of UTF-8 [RFC3629] encoded\n   [Unicode]\
    \ characters, and any further interpretation is a local\n   matter.  For example,\
    \ the userid could identify a user of a specific\n   directory service, be a login\
    \ name, or be an email address.  A\n   uAuthzId SHOULD NOT be assumed to be globally\
    \ unique.  To compare\n   uAuthzId values, each uAuthzId value MUST be prepared\
    \ as a \"query\"\n   string ([RFC3454], Section 7) using the SASLprep [RFC4013]\
    \ algorithm,\n   and then the two values are compared octet-wise.\n   The above\
    \ grammar is extensible.  The authzId production may be\n   extended to support\
    \ additional forms of identities.  Each form is\n   distinguished by its unique\
    \ prefix (see Section 3.12 of [RFC4520] for\n   registration requirements).\n"
- title: 5.2.2.  SASL Semantics within LDAP
  contents:
  - "5.2.2.  SASL Semantics within LDAP\n   Implementers must take care to maintain\
    \ the semantics of SASL\n   specifications when handling data that has different\
    \ semantics in the\n   LDAP protocol.\n   For example, the SASL DIGEST-MD5 authentication\
    \ mechanism\n   [DIGEST-MD5] utilizes an authentication identity and a realm that\
    \ are\n   syntactically simple strings and semantically simple username\n   [RFC4013]\
    \ and realm values.  These values are not LDAP DNs, and there\n   is no requirement\
    \ that they be represented or treated as such.\n"
- title: 5.2.3.  SASL EXTERNAL Authentication Mechanism
  contents:
  - "5.2.3.  SASL EXTERNAL Authentication Mechanism\n   A client can use the SASL\
    \ EXTERNAL ([RFC4422], Appendix A) mechanism\n   to request the LDAP server to\
    \ authenticate and establish a resulting\n   authorization identity using security\
    \ credentials exchanged by a\n   lower security layer (such as by TLS authentication).\
    \  If the\n   client's authentication credentials have not been established at\
    \ a\n   lower security layer, the SASL EXTERNAL Bind MUST fail with a\n   resultCode\
    \ of inappropriateAuthentication.  Although this situation\n   has the effect\
    \ of leaving the LDAP session in an anonymous state\n   (Section 4), the state\
    \ of any installed security layer is unaffected.\n   A client may either request\
    \ that its authorization identity be\n   automatically derived from its authentication\
    \ credentials exchanged\n   at a lower security layer, or it may explicitly provide\
    \ a desired\n   authorization identity.  The former is known as an implicit\n\
    \   assertion, and the latter as an explicit assertion.\n"
- title: 5.2.3.1.  Implicit Assertion
  contents:
  - "5.2.3.1.  Implicit Assertion\n   An implicit authorization identity assertion\
    \ is performed by invoking\n   a Bind request of the SASL form using the EXTERNAL\
    \ mechanism name\n   that does not include the optional credentials field (found\
    \ within\n   the SaslCredentials sequence in the BindRequest).  The server will\n\
    \   derive the client's authorization identity from the authentication\n   identity\
    \ supplied by a security layer (e.g., a public key certificate\n   used during\
    \ TLS layer installation) according to local policy.  The\n   underlying mechanics\
    \ of how this is accomplished are implementation\n   specific.\n"
- title: 5.2.3.2.  Explicit Assertion
  contents:
  - "5.2.3.2.  Explicit Assertion\n   An explicit authorization identity assertion\
    \ is performed by invoking\n   a Bind request of the SASL form using the EXTERNAL\
    \ mechanism name\n   that includes the credentials field (found within the SaslCredentials\n\
    \   sequence in the BindRequest).  The value of the credentials field (an\n  \
    \ OCTET STRING) is the asserted authorization identity and MUST be\n   constructed\
    \ as documented in Section 5.2.1.8.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   Security issues are discussed throughout this\
    \ document.  The\n   unsurprising conclusion is that security is an integral and\
    \ necessary\n   part of LDAP.  This section discusses a number of LDAP-related\n\
    \   security considerations.\n"
- title: 6.1.  General LDAP Security Considerations
  contents:
  - "6.1.  General LDAP Security Considerations\n   LDAP itself provides no security\
    \ or protection from accessing or\n   updating the directory by means other than\
    \ through the LDAP protocol,\n   e.g., from inspection of server database files\
    \ by database\n   administrators.\n   Sensitive data may be carried in almost\
    \ any LDAP message, and its\n   disclosure may be subject to privacy laws or other\
    \ legal regulation\n   in many countries.  Implementers should take appropriate\
    \ measures to\n   protect sensitive data from disclosure to unauthorized entities.\n\
    \   A session on which the client has not established data integrity and\n   privacy\
    \ services (e.g., via StartTLS, IPsec, or a suitable SASL\n   mechanism) is subject\
    \ to man-in-the-middle attacks to view and modify\n   information in transit.\
    \  Client and server implementers SHOULD take\n   measures to protect sensitive\
    \ data in the LDAP session from these\n   attacks by using data protection services\
    \ as discussed in this\n   document.  Clients and servers should provide the ability\
    \ to be\n   configured to require these protections.  A resultCode of\n   confidentialityRequired\
    \ indicates that the server requires\n   establishment of (stronger) data confidentiality\
    \ protection in order\n   to perform the requested operation.\n   Access control\
    \ should always be applied when reading sensitive\n   information or updating\
    \ directory information.\n   Various security factors, including authentication\
    \ and authorization\n   information and data security services may change during\
    \ the course\n   of the LDAP session, or even during the performance of a particular\n\
    \   operation.  Implementations should be robust in the handling of\n   changing\
    \ security factors.\n"
- title: 6.2.  StartTLS Security Considerations
  contents:
  - "6.2.  StartTLS Security Considerations\n   All security gained via use of the\
    \ StartTLS operation is gained by\n   the use of TLS itself.  The StartTLS operation,\
    \ on its own, does not\n   provide any additional security.\n   The level of security\
    \ provided through the use of TLS depends\n   directly on both the quality of\
    \ the TLS implementation used and the\n   style of usage of that implementation.\
    \  Additionally, a man-in-the-\n   middle attacker can remove the StartTLS extended\
    \ operation from the\n   'supportedExtension' attribute of the root DSE.  Both\
    \ parties SHOULD\n   independently ascertain and consent to the security level\
    \ achieved\n   once TLS is established and before beginning use of the TLS-\n\
    \   protected session.  For example, the security level of the TLS layer\n   might\
    \ have been negotiated down to plaintext.\n   Clients MUST either warn the user\
    \ when the security level achieved\n   does not provide an acceptable level of\
    \ data confidentiality and/or\n   data integrity protection, or be configurable\
    \ to refuse to proceed\n   without an acceptable level of security.\n   As stated\
    \ in Section 3.1.2, a server may use a local security policy\n   to determine\
    \ whether to successfully complete TLS negotiation.\n   Information in the user's\
    \ certificate that is originated or verified\n   by the certification authority\
    \ should be used by the policy\n   administrator when configuring the identification\
    \ and authorization\n   policy.\n   Server implementers SHOULD allow server administrators\
    \ to elect\n   whether and when data confidentiality and integrity are required,\
    \ as\n   well as elect whether authentication of the client during the TLS\n \
    \  handshake is required.\n   Implementers should be aware of and understand TLS\
    \ security\n   considerations as discussed in the TLS specification [RFC4346].\n"
- title: 6.3.  Bind Operation Security Considerations
  contents:
  - "6.3.  Bind Operation Security Considerations\n   This section discusses several\
    \ security considerations relevant to\n   LDAP authentication via the Bind operation.\n"
- title: 6.3.1.  Unauthenticated Mechanism Security Considerations
  contents:
  - "6.3.1.  Unauthenticated Mechanism Security Considerations\n   Operational experience\
    \ shows that clients can (and frequently do)\n   misuse the unauthenticated authentication\
    \ mechanism of the simple\n   Bind method (see Section 5.1.2).  For example, a\
    \ client program might\n   make a decision to grant access to non-directory information\
    \ on the\n   basis of successfully completing a Bind operation.  LDAP server\n\
    \   implementations may return a success response to an unauthenticated\n   Bind\
    \ request.  This may erroneously leave the client with the\n   impression that\
    \ the server has successfully authenticated the\n   identity represented by the\
    \ distinguished name when in reality, an\n   anonymous authorization state has\
    \ been established.  Clients that use\n   the results from a simple Bind operation\
    \ to make authorization\n   decisions should actively detect unauthenticated Bind\
    \ requests (by\n   verifying that the supplied password is not empty) and react\n\
    \   appropriately.\n"
- title: 6.3.2.  Name/Password Mechanism Security Considerations
  contents:
  - "6.3.2.  Name/Password Mechanism Security Considerations\n   The name/password\
    \ authentication mechanism of the simple Bind method\n   discloses the password\
    \ to the server, which is an inherent security\n   risk.  There are other mechanisms,\
    \ such as SASL DIGEST-MD5\n   [DIGEST-MD5], that do not disclose the password\
    \ to the server.\n"
- title: 6.3.3.  Password-Related Security Considerations
  contents:
  - "6.3.3.  Password-Related Security Considerations\n   LDAP allows multi-valued\
    \ password attributes.  In systems where\n   entries are expected to have one\
    \ and only one password,\n   administrative controls should be provided to enforce\
    \ this behavior.\n   The use of clear text passwords and other unprotected authentication\n\
    \   credentials is strongly discouraged over open networks when the\n   underlying\
    \ transport service cannot guarantee confidentiality.  LDAP\n   implementations\
    \ SHOULD NOT by default support authentication methods\n   using clear text passwords\
    \ and other unprotected authentication\n   credentials unless the data on the\
    \ session is protected using TLS or\n   other data confidentiality and data integrity\
    \ protection.\n   The transmission of passwords in the clear -- typically for\n\
    \   authentication or modification -- poses a significant security risk.\n   This\
    \ risk can be avoided by using SASL authentication [RFC4422]\n   mechanisms that\
    \ do not transmit passwords in the clear or by\n   negotiating transport or session\
    \ layer data confidentiality services\n   before transmitting password values.\n\
    \   To mitigate the security risks associated with the transfer of\n   passwords,\
    \ a server implementation that supports any password-based\n   authentication\
    \ mechanism that transmits passwords in the clear MUST\n   support a policy mechanism\
    \ that at the time of authentication or\n   password modification, requires that:\n\
    \         A TLS layer has been successfully installed.\n         OR\n        \
    \ Some other data confidentiality mechanism that protects the\n         password\
    \ value from eavesdropping has been provided.\n         OR\n         The server\
    \ returns a resultCode of confidentialityRequired for\n         the operation\
    \ (i.e., name/password Bind with password value,\n         SASL Bind transmitting\
    \ a password value in the clear, add or\n         modify including a userPassword\
    \ value, etc.), even if the\n         password value is correct.\n   Server implementations\
    \ may also want to provide policy mechanisms to\n   invalidate or otherwise protect\
    \ accounts in situations where a server\n   detects that a password for an account\
    \ has been transmitted in the\n   clear.\n"
- title: 6.3.4.  Hashed Password Security Considerations
  contents:
  - "6.3.4.  Hashed Password Security Considerations\n   Some authentication mechanisms\
    \ (e.g., DIGEST-MD5) transmit a hash of\n   the password value that may be vulnerable\
    \ to offline dictionary\n   attacks.  Implementers should take care to protect\
    \ such hashed\n   password values during transmission using TLS or other\n   confidentiality\
    \ mechanisms.\n"
- title: 6.4.  SASL Security Considerations
  contents:
  - "6.4.  SASL Security Considerations\n   Until data integrity service is installed\
    \ on an LDAP session, an\n   attacker can modify the transmitted values of the\n\
    \   'supportedSASLMechanisms' attribute response and thus downgrade the\n   list\
    \ of available SASL mechanisms to include only the least secure\n   mechanism.\
    \  To detect this type of attack, the client may retrieve\n   the SASL mechanisms\
    \ the server makes available both before and after\n   data integrity service\
    \ is installed on an LDAP session.  If the\n   client finds that the integrity-protected\
    \ list (the list obtained\n   after data integrity service was installed) contains\
    \ a stronger\n   mechanism than those in the previously obtained list, the client\n\
    \   should assume the previously obtained list was modified by an\n   attacker.\
    \  In this circumstance it is recommended that the client\n   close the underlying\
    \ transport connection and then reconnect to\n   reestablish the session.\n"
- title: 6.5.  Related Security Considerations
  contents:
  - "6.5.  Related Security Considerations\n   Additional security considerations\
    \ relating to the various\n   authentication methods and mechanisms discussed\
    \ in this document\n   apply and can be found in [RFC4422], [RFC4013], [RFC3454],\
    \ and\n   [RFC3629].\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   The IANA has updated the LDAP Protocol Mechanism\
    \ registry to indicate\n   that this document and [RFC4511] provide the definitive\
    \ technical\n   specification for the StartTLS (1.3.6.1.4.1.1466.20037) extended\n\
    \   operation.\n   The IANA has updated the LDAP LDAPMessage types registry to\
    \ indicate\n   that this document and [RFC4511] provide the definitive technical\n\
    \   specification for the bindRequest (0) and bindResponse (1) message\n   types.\n\
    \   The IANA has updated the LDAP Bind Authentication Method registry to\n   indicate\
    \ that this document and [RFC4511] provide the definitive\n   technical specification\
    \ for the simple (0) and sasl (3) bind\n   authentication methods.\n   The IANA\
    \ has updated the LDAP authzid prefixes registry to indicate\n   that this document\
    \ provides the definitive technical specification\n   for the dnAuthzId (dn:)\
    \ and uAuthzId (u:) authzid prefixes.\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   This document combines information originally contained\
    \ in RFC 2251,\n   RFC 2829, and RFC 2830.  RFC 2251 was a product of the Access,\n\
    \   Searching, and Indexing of Directories (ASID) Working Group.  RFC\n   2829\
    \ and RFC 2830 were products of the LDAP Extensions (LDAPEXT)\n   Working Group.\n\
    \   This document is a product of the IETF LDAP Revision (LDAPBIS)\n   working\
    \ group.\n"
- title: 9.  Normative References
  contents:
  - "9.  Normative References\n   [RFC791]     Postel, J., \"Internet Protocol\",\
    \ STD 5, RFC 791,\n                September 1981.\n   [RFC2119]    Bradner, S.,\
    \ \"Key words for use in RFCs to Indicate\n                Requirement Levels\"\
    , BCP 14, RFC 2119, March 1997.\n   [RFC2460]    Deering, S. and R. Hinden, \"\
    Internet Protocol, Version 6\n                (IPv6) Specification\", RFC 2460,\
    \ December 1998.\n   [RFC3454]    Hoffman, P. and M. Blanchet, \"Preparation of\n\
    \                Internationalized Strings (\"stringprep\")\", RFC 3454,\n   \
    \             December 2002.\n   [RFC3490]    Faltstrom, P., Hoffman, P., and\
    \ A. Costello,\n                \"Internationalizing Domain Names in Applications\n\
    \                (IDNA)\", RFC 3490, March 2003.\n   [RFC3629]    Yergeau, F.,\
    \ \"UTF-8, a transformation format of ISO\n                10646\", STD 63, RFC\
    \ 3629, November 2003.\n   [RFC4013]    Zeilenga, K., \"SASLprep: Stringprep Profile\
    \ for User\n                Names and Passwords\", RFC 4013, February 2005.\n\
    \   [RFC4234]    Crocker, D. and P. Overell, \"Augmented BNF for Syntax\n    \
    \            Specifications: ABNF\", RFC 4234, October 2005.\n   [RFC4346]   \
    \ Dierks, T. and E. Rescorla, \"The TLS Protocol Version\n                1.1\"\
    , RFC 4346, March 2006.\n   [RFC4422]    Melnikov, A., Ed. and K. Zeilenga, Ed.,\
    \ \"Simple\n                Authentication and Security Layer (SASL)\", RFC 4422,\n\
    \                June 2006.\n   [RFC4510]    Zeilenga, K., Ed., \"Lightweight\
    \ Directory Access\n                Protocol (LDAP): Technical Specification Road\
    \ Map\", RFC\n                4510, June 2006.\n   [RFC4511]    Sermersheim, J.,\
    \ Ed., \"Lightweight Directory Access\n                Protocol (LDAP): The Protocol\"\
    , RFC 4511, June 2006.\n   [RFC4512]    Zeilenga, K., \"Lightweight Directory\
    \ Access Protocol\n                (LDAP): Directory Information Models\", RFC\
    \ 4512, June\n                2006.\n   [RFC4514]    Zeilenga, K., Ed., \"Lightweight\
    \ Directory Access\n                Protocol (LDAP): String Representation of\
    \ Distinguished\n                Names\", RFC 4514, June 2006.\n   [RFC4517] \
    \   Legg, S., Ed., \"Lightweight Directory Access Protocol\n                (LDAP):\
    \ Syntaxes and Matching Rules\", RFC 4517, June\n                2006.\n   [RFC4519]\
    \    Sciberras, A., Ed., \"Lightweight Directory Access\n                Protocol\
    \ (LDAP): Schema for User Applications\", RFC\n                4519, June 2006.\n\
    \   [RFC4520]    Zeilenga, K., \"Internet Assigned Numbers Authority\n       \
    \         (IANA) Considerations for the Lightweight Directory\n              \
    \  Access Protocol (LDAP)\", BCP 64, RFC 4520, June 2006.\n   [Unicode]    The\
    \ Unicode Consortium, \"The Unicode Standard, Version\n                3.2.0\"\
    \ is defined by \"The Unicode Standard, Version 3.0\"\n                (Reading,\
    \ MA, Addison-Wesley, 2000.  ISBN 0-201-61633-\n                5), as amended\
    \ by the \"Unicode Standard Annex #27:\n                Unicode 3.1\" (http://www.unicode.org/reports/tr27/)\
    \ and\n                by the \"Unicode Standard Annex #28: Unicode 3.2\"\n  \
    \              (http://www.unicode.org/reports/tr28/).\n   [X.501]      ITU-T\
    \ Rec. X.501, \"The Directory: Models\", 1993.\n"
- title: 10.  Informative References
  contents:
  - "10.  Informative References\n   [DIGEST-MD5] Leach, P., Newman, C., and A. Melnikov,\
    \ \"Using Digest\n                Authentication as a SASL Mechanism\", Work in\
    \ Progress,\n                March 2006.\n   [PLAIN]      Zeilenga, K., \"The\
    \ Plain SASL Mechanism\", Work in\n                Progress, March 2005.\n   [RFC2828]\
    \    Shirey, R., \"Internet Security Glossary\", FYI 36, RFC\n               \
    \ 2828, May 2000.\n   [RFC4301]    Kent, S. and K. Seo, \"Security Architecture\
    \ for the\n                Internet Protocol\", RFC 4301, December 2005.\n   [RFC4505]\
    \    Zeilenga, K., \"The Anonymous SASL Mechanism\", RFC 4505,\n             \
    \   June 2006.\n"
- title: Appendix A.  Authentication and Authorization Concepts
  contents:
  - "Appendix A.  Authentication and Authorization Concepts\n   This appendix is non-normative.\n\
    \   This appendix defines basic terms, concepts, and interrelationships\n   regarding\
    \ authentication, authorization, credentials, and identity.\n   These concepts\
    \ are used in describing how various security approaches\n   are utilized in client\
    \ authentication and authorization.\n"
- title: A.1.  Access Control Policy
  contents:
  - "A.1.  Access Control Policy\n   An access control policy is a set of rules defining\
    \ the protection of\n   resources, generally in terms of the capabilities of persons\
    \ or other\n   entities accessing those resources.  Security objects and mechanisms,\n\
    \   such as those described here, enable the expression of access control\n  \
    \ policies and their enforcement.\n"
- title: A.2.  Access Control Factors
  contents:
  - "A.2.  Access Control Factors\n   A request, when it is being processed by a server,\
    \ may be associated\n   with a wide variety of security-related factors.  The\
    \ server uses\n   these factors to determine whether and how to process the request.\n\
    \   These are called access control factors (ACFs).  They might include\n   source\
    \ IP address, encryption strength, the type of operation being\n   requested,\
    \ time of day, etc..  Some factors may be specific to the\n   request itself;\
    \ others may be associated with the transport\n   connection via which the request\
    \ is transmitted; and others (e.g.,\n   time of day) may be \"environmental\"\
    .\n   Access control policies are expressed in terms of access control\n   factors;\
    \ for example, \"a request having ACFs i,j,k can perform\n   operation Y on resource\
    \ Z\".  The set of ACFs that a server makes\n   available for such expressions\
    \ is implementation specific.\n"
- title: A.3.  Authentication, Credentials, Identity
  contents:
  - "A.3.  Authentication, Credentials, Identity\n   Authentication credentials are\
    \ the evidence supplied by one party to\n   another, asserting the identity of\
    \ the supplying party (e.g., a user)\n   who is attempting to establish a new\
    \ authorization state with the\n   other party (typically a server).  Authentication\
    \ is the process of\n   generating, transmitting, and verifying these credentials\
    \ and thus\n   the identity they assert.  An authentication identity is the name\n\
    \   presented in a credential.\n   There are many forms of authentication credentials.\
    \  The form used\n   depends upon the particular authentication mechanism negotiated\
    \ by\n   the parties.  X.509 certificates, Kerberos tickets, and simple\n   identity\
    \ and password pairs are all examples of authentication\n   credential forms.\
    \  Note that an authentication mechanism may\n   constrain the form of authentication\
    \ identities used with it.\n"
- title: A.4.  Authorization Identity
  contents:
  - "A.4.  Authorization Identity\n   An authorization identity is one kind of access\
    \ control factor.  It\n   is the name of the user or other entity that requests\
    \ that operations\n   be performed.  Access control policies are often expressed\
    \ in terms\n   of authorization identities; for example, \"entity X can perform\n\
    \   operation Y on resource Z\".\n   The authorization identity of an LDAP session\
    \ is often semantically\n   the same as the authentication identity presented\
    \ by the client, but\n   it may be different.  SASL allows clients to specify\
    \ an authorization\n   identity distinct from the authentication identity asserted\
    \ by the\n   client's credentials.  This permits agents such as proxy servers\
    \ to\n   authenticate using their own credentials, yet request the access\n  \
    \ privileges of the identity for which they are proxying [RFC4422].\n   Also,\
    \ the form of authentication identity supplied by a service like\n   TLS may not\
    \ correspond to the authorization identities used to\n   express a server's access\
    \ control policy, thus requiring a server-\n   specific mapping to be done.  The\
    \ method by which a server composes\n   and validates an authorization identity\
    \ from the authentication\n   credentials supplied by a client is implementation\
    \ specific.\n"
- title: Appendix B.  Summary of Changes
  contents:
  - "Appendix B.  Summary of Changes\n   This appendix is non-normative.\n   This\
    \ appendix summarizes substantive changes made to RFC 2251, RFC\n   2829 and RFC\
    \ 2830.  In addition to the specific changes detailed\n   below, the reader of\
    \ this document should be aware that numerous\n   general editorial changes have\
    \ been made to the original content from\n   the source documents.  These changes\
    \ include the following:\n   - The material originally found in RFC 2251 Sections\
    \ 4.2.1 and 4.2.2,\n     RFC 2829 (all sections except Sections 2 and 4), and\
    \ RFC 2830 was\n     combined into a single document.\n   - The combined material\
    \ was substantially reorganized and edited to\n     group related subjects, improve\
    \ the document flow, and clarify\n     intent.\n   - Changes were made throughout\
    \ the text to align with definitions of\n     LDAP protocol layers and IETF security\
    \ terminology.\n   - Substantial updates and additions were made to security\n\
    \     considerations from both documents based on current operational\n     experience.\n"
- title: B.1.  Changes Made to RFC 2251
  contents:
  - "B.1.  Changes Made to RFC 2251\n   This section summarizes the substantive changes\
    \ made to Sections\n   4.2.1 and 4.2.2 of RFC 2251 by this document.  Additional\
    \ substantive\n   changes to Section 4.2.1 of RFC 2251 are also documented in\n\
    \   [RFC4511].\n"
- title: B.1.1.  Section 4.2.1 ("Sequencing of the Bind Request")
  contents:
  - "B.1.1.  Section 4.2.1 (\"Sequencing of the Bind Request\")\n   - Paragraph 1:\
    \ Removed the sentence, \"If at any stage the client\n     wishes to abort the\
    \ bind process it MAY unbind and then drop the\n     underlying connection\".\
    \  The Unbind operation still permits this\n     behavior, but it is not documented\
    \ explicitly.\n   - Clarified that the session is moved to an anonymous state\
    \ upon\n     receipt of the BindRequest PDU and that it is only moved to a non-\n\
    \     anonymous state if and when the Bind request is successful.\n"
- title: B.1.2.  Section 4.2.2 ("Authentication and Other Security Services")
  contents:
  - "B.1.2.  Section 4.2.2 (\"Authentication and Other Security Services\")\n   -\
    \ RFC 2251 states that anonymous authentication MUST be performed\n     using\
    \ the simple bind method.  This specification defines the\n     anonymous authentication\
    \ mechanism of the simple bind method and\n     requires all conforming implementations\
    \ to support it.  Other\n     authentication mechanisms producing anonymous authentication\
    \ and\n     authorization state may also be implemented and used by conforming\n\
    \     implementations.\n"
- title: B.2.  Changes Made to RFC 2829
  contents:
  - "B.2.  Changes Made to RFC 2829\n   This section summarizes the substantive changes\
    \ made to RFC 2829.\n"
- title: B.2.1.  Section 4 ("Required security mechanisms")
  contents:
  - "B.2.1.  Section 4 (\"Required security mechanisms\")\n   - The name/password\
    \ authentication mechanism (see Section B.2.5\n     below) protected by TLS replaces\
    \ the SASL DIGEST-MD5 mechanism as\n     LDAP's mandatory-to-implement password-based\
    \ authentication\n     mechanism.  Implementations are encouraged to continue\
    \ supporting\n     SASL DIGEST-MD5 [DIGEST-MD5].\n"
- title: B.2.2.  Section 5.1 ("Anonymous authentication procedure")
  contents:
  - "B.2.2.  Section 5.1 (\"Anonymous authentication procedure\")\n   - Clarified\
    \ that anonymous authentication involves a name value of\n     zero length and\
    \ a password value of zero length.  The\n     unauthenticated authentication mechanism\
    \ was added to handle simple\n     Bind requests involving a name value with a\
    \ non-zero length and a\n     password value of zero length.\n"
- title: B.2.3.  Section 6 ("Password-based authentication")
  contents:
  - "B.2.3.  Section 6 (\"Password-based authentication\")\n   - See Section B.2.1.\n"
- title: B.2.4.  Section 6.1 ("Digest authentication")
  contents:
  - "B.2.4.  Section 6.1 (\"Digest authentication\")\n   - As the SASL-DIGEST-MD5\
    \ mechanism is no longer mandatory to\n     implement, this section is now historical\
    \ and was not included in\n     this document.  RFC 2829, Section 6.1, continues\
    \ to document the\n     SASL DIGEST-MD5 authentication mechanism.\n"
- title: B.2.5.  Section 6.2 ("'simple' authentication choice under TLS
  contents:
  - "B.2.5.  Section 6.2 (\"'simple' authentication choice under TLS\n        encryption\"\
    )\n   - Renamed the \"simple\" authentication mechanism to the name/password\n\
    \     authentication mechanism to better describe it.\n   - The use of TLS was\
    \ generalized to align with definitions of LDAP\n     protocol layers.  TLS establishment\
    \ is now discussed as an\n     independent subject and is generalized for use\
    \ with all\n     authentication mechanisms and other security layers.\n   - Removed\
    \ the implication that the userPassword attribute is the sole\n     location for\
    \ storage of password values to be used in\n     authentication.  There is no\
    \ longer any implied requirement for how\n     or where passwords are stored at\
    \ the server for use in\n     authentication.\n"
- title: B.2.6.  Section 6.3 ("Other authentication choices with TLS")
  contents:
  - "B.2.6.  Section 6.3 (\"Other authentication choices with TLS\")\n   - See Section\
    \ B.2.5.\n"
- title: B.2.7.  Section 7.1 ("Certificate-based authentication with TLS")
  contents:
  - "B.2.7.  Section 7.1 (\"Certificate-based authentication with TLS\")\n   - See\
    \ Section B.2.5.\n"
- title: B.2.8.  Section 8 ("Other mechanisms")
  contents:
  - "B.2.8.  Section 8 (\"Other mechanisms\")\n   - All SASL authentication mechanisms\
    \ are explicitly allowed within\n     LDAP.  Specifically, this means the SASL\
    \ ANONYMOUS and SASL PLAIN\n     mechanisms are no longer precluded from use within\
    \ LDAP.\n"
- title: B.2.9.  Section 9 ("Authorization Identity")
  contents:
  - "B.2.9.  Section 9 (\"Authorization Identity\")\n   - Specified matching rules\
    \ for dnAuthzId and uAuthzId values.  In\n     particular, the DN value in the\
    \ dnAuthzId form must be matched\n     using DN matching rules, and the uAuthzId\
    \ value MUST be prepared\n     using SASLprep rules before being compared octet-wise.\n\
    \   - Clarified that uAuthzId values should not be assumed to be globally\n  \
    \   unique.\n"
- title: B.2.10.  Section 10 ("TLS Ciphersuites")
  contents:
  - "B.2.10.  Section 10 (\"TLS Ciphersuites\")\n   - TLS ciphersuite recommendations\
    \ are no longer included in this\n     specification.  Implementations must now\
    \ support the\n     TLS_RSA_WITH_3DES_EDE_CBC_SHA ciphersuite and should continue\
    \ to\n     support the TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA ciphersuite.\n   - Clarified\
    \ that anonymous authentication involves a name value of\n     zero length and\
    \ a password value of zero length.  The\n     unauthenticated authentication mechanism\
    \ was added to handle simple\n     Bind requests involving a name value with a\
    \ non-zero length and a\n     password value of zero length.\n"
- title: B.3.  Changes Made to RFC 2830
  contents:
  - "B.3.  Changes Made to RFC 2830\n   This section summarizes the substantive changes\
    \ made to Sections 3\n   and 5 of RFC 2830.  Readers should consult [RFC4511]\
    \ for summaries of\n   changes to other sections.\n"
- title: B.3.1.  Section 3.6 ("Server Identity Check")
  contents:
  - "B.3.1.  Section 3.6 (\"Server Identity Check\")\n   - Substantially updated the\
    \ server identity check algorithm to ensure\n     that it is complete and robust.\
    \  In particular, the use of all\n     relevant values in the subjectAltName and\
    \ the subjectName fields\n     are covered by the algorithm and matching rules\
    \ are specified for\n     each type of value.  Mapped (derived) forms of the server\
    \ identity\n     may now be used when the mapping is performed in a secure fashion.\n"
- title: B.3.2.  Section 3.7 ("Refresh of Server Capabilities Information")
  contents:
  - "B.3.2.  Section 3.7 (\"Refresh of Server Capabilities Information\")\n   - Clients\
    \ are no longer required to always refresh information about\n     server capabilities\
    \ following TLS establishment.  This is to allow\n     for situations where this\
    \ information was obtained through a secure\n     mechanism.\n"
- title: B.3.3.  Section 5 ("Effects of TLS on a Client's Authorization
  contents:
  - "B.3.3.  Section 5 (\"Effects of TLS on a Client's Authorization\n        Identity\"\
    )\n   - Establishing a TLS layer on an LDAP session may now cause the\n     authorization\
    \ state of the LDAP session to change.\n"
- title: B.3.4.  Section 5.2 ("TLS Connection Closure Effects")
  contents:
  - "B.3.4.  Section 5.2 (\"TLS Connection Closure Effects\")\n   - Closing a TLS\
    \ layer on an LDAP session changes the authentication\n     and authorization\
    \ state of the LDAP session based on local policy.\n     Specifically, this means\
    \ that implementations are not required to\n     change the authentication and\
    \ authorization states to anonymous\n     upon TLS closure.\n   - Replaced references\
    \ to RFC 2401 with RFC 4301.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Roger Harrison\n   Novell, Inc.\n   1800 S.  Novell Place\n\
    \   Provo, UT 84606\n   USA\n   Phone: +1 801 861 2642\n   EMail: roger_harrison@novell.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
