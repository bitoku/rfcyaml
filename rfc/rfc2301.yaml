- title: __initial_text__
  contents:
  - '                      File Format for Internet Fax

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes the TIFF (Tag Image File Format)\n   representation\
    \ of image data specified by the ITU-T Recommendations\n   for black-and-white\
    \ and color facsimile. This file format\n   specification is commonly known as\
    \ TIFF-FX. It formally defines\n   minimal, extended and lossless JBIG modes (Profiles\
    \ S, F, J) for\n   black-and-white fax, and base JPEG, lossless JBIG and Mixed\
    \ Raster\n   Content modes (Profiles C, L, M) for color and grayscale fax. These\n\
    \   modes or profiles correspond to the content of the applicable ITU-T\n   Recommendations.\
    \ Files formatted according to this specification use\n   the image/tiff MIME\
    \ Content Type.\n"
- title: Table of Contents
  contents:
  - 'Table of Contents

    '
- title: 1. INTRODUCTION........................................................4
  contents:
  - "1. INTRODUCTION........................................................4\n  \
    \ 1.1. Scope..........................................................5\n   1.2.\
    \ Approach.......................................................5\n   1.3. Overview\
    \ of this draft.........................................5\n"
- title: 2. TIFF and Fax........................................................7
  contents:
  - "2. TIFF and Fax........................................................7\n  \
    \ 2.1. TIFF Overview..................................................7\n    \
    \ 2.1.1. File Structure.............................................7\n     2.1.2.\
    \ Image Structure............................................9\n     2.1.3. TIFF\
    \ File Structure for Fax Applications..................10\n   2.2 TIFF Fields\
    \ for All Fax Applications...........................11\n     2.2.1. TIFF Fields\
    \ required for all fax modes....................12\n     2.2.2. Additional TIFF\
    \ Fields required for all fax modes.........13\n     2.2.3. TIFF Fields recommended\
    \ for all fax modes.................15\n     2.2.4. New TIFF Fields recommended\
    \ for fax modes.................16\n"
- title: 3. Minimal Black-and-White Fax Mode...................................18
  contents:
  - "3. Minimal Black-and-White Fax Mode...................................18\n  \
    \ 3.1. Overview......................................................18\n   3.2.\
    \ Required TIFF Fields..........................................18\n     3.2.1\
    \ Baseline Fields............................................18\n     3.2.2 Extension\
    \ Fields...........................................20\n     3.2.3 New Fields.................................................20\n\
    \   3.3. Recommended TIFF Fields.......................................20\n  \
    \ 3.4. End of Line (EOL) and Return to Control (RTC).................20\n    \
    \ 3.4.1 RTC Exclusion..............................................21\n   3.5.\
    \ File Structure................................................22\n   3.6. Minimal\
    \ Black-and-White Mode Summary..........................23\n"
- title: 4. Extended Black-and-White Fax Mode..................................24
  contents:
  - "4. Extended Black-and-White Fax Mode..................................24\n  \
    \ 4.1. TIFF-F Overview...............................................25\n   4.2.\
    \ Required TIFF Fields..........................................26\n     4.2.1.\
    \ Baseline Fields...........................................26\n     4.2.2. Extension\
    \ Fields..........................................28\n     4.2.3. New Fields................................................29\n\
    \   4.3. Recommended TIFF Fields.......................................29\n  \
    \   4.3.1. Baseline Fields...........................................29\n    \
    \ 4.3.2. Extension Fields..........................................29\n     4.3.3.\
    \ New Fields................................................29\n   4.4. Technical\
    \ Implementation Issues...............................30\n     4.4.1. Strips....................................................30\n\
    \     4.4.2. Bit Order.................................................31\n  \
    \   4.4.3. Multi-Page................................................31\n    \
    \ 4.4.4. Compression...............................................31\n     4.4.5.\
    \ Example Use of Page-quality Fields........................32\n     4.4.6. Practical\
    \ Guidelines for Writing and Reading Multi-Page\n            TIFF-F Files..............................................33\n\
    \     4.4.7. Use of TIFF-F for Streaming Applications..................34\n  \
    \ 4.5. Implementation Warnings.......................................34\n    \
    \ 4.5.1. Uncompressed Data.........................................34\n     4.5.2.\
    \ Encoding and Resolution...................................35\n     4.5.3. EOL\
    \ byte-aligned..........................................35\n     4.5.4. EOL.......................................................36\n\
    \     4.5.5. RTC Exclusion.............................................36\n  \
    \   4.5.6. Use of EOFB for T.6 Compressed Images.....................37\n   4.6.\
    \ Example Use of TIFF-F.........................................37\n   4.7. Extended\
    \ Black-and-white Fax Mode Summary.....................37\n"
- title: 5. Lossless JBIG Black-and-White Fax Mode.............................39
  contents:
  - "5. Lossless JBIG Black-and-White Fax Mode.............................39\n  \
    \ 5.1. Overview......................................................40\n   5.2.\
    \ Required TIFF Fields..........................................40\n     5.2.1.\
    \ Baseline Fields...........................................40\n     5.2.2. Extension\
    \ Fields..........................................40\n     5.2.3. New Fields................................................41\n\
    \   5.3. Recommended TIFF Fields.......................................41\n  \
    \ 5.4. Lossless JBIG Black-and-White Mode Summary....................41\n"
- title: 6. Base Color Fax Mode................................................43
  contents:
  - "6. Base Color Fax Mode................................................43\n  \
    \ 6.1. Overview......................................................43\n   6.2.\
    \ Required TIFF Fields..........................................43\n     6.2.1.\
    \ Baseline Fields...........................................43\n     6.2.2. Extension\
    \ Fields..........................................45\n     6.2.3. New Fields................................................46\n\
    \   6.3. Recommended TIFF Fields.......................................47\n  \
    \ 6.4. Base Color Fax Mode Summary...................................47\n"
- title: 7. Lossless Color Mode................................................49
  contents:
  - "7. Lossless Color Mode................................................49\n  \
    \ 7.1. Overview......................................................50\n    \
    \ 7.1.1. Color Encoding............................................50\n     7.1.2.\
    \ JBIG Encoding.............................................50\n   7.2. Required\
    \ TIFF Fields..........................................51\n     7.2.1. Baseline\
    \ Fields...........................................51\n     7.2.2. Extension Fields..........................................52\n\
    \     7.2.3. New Fields................................................53\n  \
    \ 7.3. Recommended TIFF Fields.......................................53\n   7.4.\
    \ Lossless Color Fax Mode Summary...............................53\n"
- title: 8. Mixed Raster Content Mode..........................................55
  contents:
  - "8. Mixed Raster Content Mode..........................................55\n  \
    \ 8.1 Overview.......................................................55\n    \
    \ 8.1.1. MRC 3-layer model.........................................55\n     8.1.2.\
    \ A TIFF Representation for the MRC 3-layer model...........56\n   8.2. Required\
    \ TIFF Fields..........................................58\n     8.2.1. Baseline\
    \ Fields...........................................58\n     8.2.2. Extension Fields..........................................59\n\
    \     8.2.3. New Fields................................................60\n  \
    \ 8.3. Recommended TIFF Fields.......................................62\n   8.4.\
    \ Rules and Requirements for Images.............................62\n   8.5. MRC\
    \ Fax Mode Summary..........................................63\n"
- title: 9. MIME content-type image/tiff.......................................66
  contents:
  - "9. MIME content-type image/tiff.......................................66\n  \
    \ 9.1 Refinement of MIME content-type image/tiff for Facsimile\n       Applications...................................................66\n"
- title: 10. Security Considerations...........................................67
  contents:
  - '10. Security Considerations...........................................67

    '
- title: 11. References........................................................67
  contents:
  - '11. References........................................................67

    '
- title: 12. Authors' Addresses................................................69
  contents:
  - '12. Authors'' Addresses................................................69

    '
- title: 'Annex A: Summary of TIFF Fields for Internet Fax .....................70'
  contents:
  - 'Annex A: Summary of TIFF Fields for Internet Fax .....................70

    '
- title: Annex B. IANA Registration for image/tiff Application Parameter
  contents:
  - "Annex B. IANA Registration for image/tiff Application Parameter\n         Values\
    \ used for facsimile....................................75\n"
- title: Full Copyright Statement..............................................77
  contents:
  - 'Full Copyright Statement..............................................77

    '
- title: 1. Introduction
  contents:
  - "1. Introduction\n   This document describes the use of TIFF (Tag Image File Format)\
    \ to\n   represent the data content and structure generated by the current\n \
    \  suite of ITU-T Recommendations for Group 3 facsimile. These\n   Recommendations\
    \ and the TIFF fields described here support the\n   following facsimile modes\
    \ or profiles:\n      S:  minimal black-and-white mode, using binary MH compression\n\
    \             [T.4]\n      F:  extended black-and-white mode, using binary MH,\
    \ MR and MMR\n             compression [T.4, T.6]\n      J:  lossless JBIG black-and-white\
    \ mode, with JBIG compression\n             [T.85, T.82]\n      C:  lossy color\
    \ and grayscale mode, using JPEG compression\n             [T.42, T.81]\n    \
    \  L:  lossless color and grayscale mode, using JBIG compression\n           \
    \  [T.43, T.82]\n      M:  mixed raster content mode [T.44], using a combination\
    \ of\n             existing compression methods\n   Each profile corresponds to\
    \ the content of ITU-T Recommendations\n   shown and is a subset of the full TIFF\
    \ for facsimile specification.\n   Profile S describes a minimal interchange set\
    \ of fields, which will\n   guarantee that, at least, binary black-and-white images\
    \ will be\n   supported. Implementations are required to support this minimal\n\
    \   interchange set of fields.\n   With the intent of specifying a file format\
    \ for Internet Fax, this\n   draft:\n       1.  specifies the structure of TIFF\
    \ files for facsimile data,\n       2.  defines ITU fax-compatible values for\
    \ existing TIFF fields,\n       3.  defines new TIFF fields and values required\
    \ for compatibility\n           with ITU color fax.\n   This specification of\
    \ TIFF for facsimile is known as TIFF-FX.\n"
- title: 1.1 Scope
  contents:
  - "1.1 Scope\n   This document defines a TIFF-based file format specification for\n\
    \   enabling standardized messaging-based fax over the Internet. It\n   specifies\
    \ the TIFF fields and field values required for compatibility\n   with the existing\
    \ ITU-T Recommendations for Group 3 black-and-white,\n   grayscale and color facsimile.\
    \ TIFF has historically been used for\n   handling fax image files in applications\
    \ such as store-and-forward\n   messaging.  Implementations that support this\
    \ file format\n   specification for import/export may elect to support it as a\
    \ native\n   format. This document recommends a TIFF file structure that is\n\
    \   compatible with low-memory and page-level streaming implementations.\n   Unless\
    \ otherwise noted, the current TIFF specification [TIFF] and\n   selected TIFF\
    \ Technical Notes [TTN1, TTN2] are the primary references\n   for describing TIFF\
    \ and defining TIFF fields. This document is the\n   primary reference for defining\
    \ TIFF field values for fax\n   applications.\n"
- title: 1.2 Approach
  contents:
  - "1.2 Approach\n   The basic approach to using TIFF for facsimile data is to insert\
    \ the\n   compressed fax image data in a TIFF file and use TIFF fields to\n  \
    \ encode the parameters that describe the image data. These fields will\n   have\
    \ values that comply with the ITU-T Recommendations. The MIME\n   content type\
    \ of the resulting file will be image/tiff, with an\n   optional Application parameter\
    \ [TIFF-REG]; see Section 9.\n   This approach takes advantage of TIFF features\
    \ and structures that\n   bridge the data formats and performance requirements\
    \ of both legacy\n   fax machines and host-based fax applications. TIFF constructs\
    \ for\n   pages, images, and strips allow a TIFF file to preserve the fax data\n\
    \   stream structure and the performance advantages that come with it. A\n   TIFF-based\
    \ approach also builds on an established base of users and\n   implementors and\
    \ ensures backward compatibility with existing TIFF-\n   based IETF proposals\
    \ and work in progress for Internet fax.\n"
- title: 1.3 Overview of this draft
  contents:
  - "1.3 Overview of this draft\n   Section 2 gives an overview of TIFF. Section 2.1\
    \ describes the\n   structure of TIFF files, including general guidelines for\
    \ structuring\n   multi-page TIFF files. Section 2.2 lists the TIFF fields that\
    \ are\n   required or recommended for all fax modes. The TIFF fields used only\n\
    \   by specific fax modes are described in Sections 3-8, which describe\n   the\
    \ individual fax modes. These sections also specify the ITU-\n   compatible field\
    \ values (image parameters) for each mode.\n   The full set of permitted fields\
    \ of TIFF for facsimile are included\n   in the current TIFF specification, Section\
    \ 2 of this document and the\n   sections on specific modes of facsimile operation.\
    \ This document\n   defines profiles of TIFF for facsimile, where a profile is\
    \ a subset\n   of the full set of permitted fields and field values of TIFF for\n\
    \   facsimile.\n   Section 3 defines the minimal black-and-white facsimile mode\
    \ (Profile\n   S), which is required in all implementations. Section 4 defines\
    \ the\n   extended black-and-white fax mode (Profile F), which provides a\n  \
    \ standard definition of TIFF-F. Section 5 describes the lossless\n   black-and-white\
    \ mode using JBIG compression (Profile J). Section 6\n   defines the base color\
    \ mode, required in all color implementations,\n   for the lossy JPEG representation\
    \ of color and grayscale facsimile\n   data (Profile C). Section 7 defines the\
    \ lossless JBIG color and\n   grayscale facsimile mode (Profile L) and Section\
    \ 8 defines the Mixed\n   Raster Content facsimile mode (Profile M). Each of these\
    \ sections\n   concludes with a table summarizing the required and recommended\n\
    \   fields for each mode and the values they can have.\n   Section 9 describes\
    \ the MIME content type image/tiff and the use of\n   the optional Application\
    \ parameter in connection with TIFF for\n   facsimile. Sections 10, 11, 12 and\
    \ 13 give Security Considerations,\n   the ISOC Copyright Notice, References and\
    \ Authors' Addresses. Annex A\n   gives a summary of the TIFF fields used or defined\
    \ in this document\n   and provides a convenient reference for implementors.\n\
    \   To implement only the minimal interchange black-and-white set of\n   fields\
    \ and values (Profile S), one need read only Sections 1, 2, 3, 9\n   and 10.\n\
    \   The following tree diagram shows the relationship among profiles and\n   between\
    \ profiles and coding methods.\n                                S (MH)\n     \
    \                          / \\\n                       B&W    /   \\   Color\n\
    \                  ------------     ----------\n                 /      \\   \
    \                 \\\n                /        F (MMR, MR)          C (JPEG)\n\
    \               /                             / \\\n              J (JBIG)   \
    \                ----   \\\n                                        /        \\\
    \n                                       L (JBIG)   \\\n                     \
    \                              \\\n                                          \
    \          M (MRC)\n   A profile is based on a collection of ITU-T facsimile coding\
    \ methods.\n   For example, Profile S, the minimal mode, is based on Modified\n\
    \   Huffman (MH) compression, which are defined in ITU-T Rec. T.4.\n   Profile\
    \ F specifies Modified Read (MR) and Modified Modified Read\n   (MMR) compressions,\
    \ which are defined in ITU-T Rec. T.4 and T.6.\n   All implementations of TIFF\
    \ for facsimile MUST implement Profile S,\n   which is the root node of the tree.\
    \ All color implementations of TIFF\n   for facsimile MUST implement Profile C.\
    \ The implementation of a\n   particular profile MUST also implement those profiles\
    \ on the path\n   that connect it to the root node, and MAY optionally implement\n\
    \   profiles not on the path connecting it to the root node. For example,\n  \
    \ an implementation of Profile M must also implement Profiles C and S,\n   and\
    \ may optionally implement Profile F, J or L. For another example,\n   an implementation\
    \ of Profile C must also implement Profile S, and may\n   optionally implement\
    \ Profile F or J.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \" NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",  \"MAY\", and \"\
    OPTIONAL\" in this\n   document are to be interpreted as described in [REQ].\n"
- title: 2. TIFF and Fax
  contents:
  - '2. TIFF and Fax

    '
- title: 2.1. TIFF Overview
  contents:
  - "2.1. TIFF Overview\n   TIFF provides a means for describing, storing and interchanging\n\
    \   raster image data. A primary goal of TIFF is to provide a rich\n   environment\
    \ within which applications can exchange image data. The\n   current TIFF specification\
    \ [TIFF] defines a commonly used, core set\n   of TIFF fields known as Baseline\
    \ TIFF. The current specification and\n   TIFF Technical Notes 1 and 2 [TTN1,\
    \ TTN2] define several TIFF\n   extensions. The TIFF- based specification for\
    \ fax applications uses a\n   subset of Baseline TIFF fields, with selected extensions,\
    \ as\n   described in this document. In a few cases, this document defines new\n\
    \   TIFF fields specifically for fax applications.\n"
- title: 2.1.1. File Structure
  contents:
  - "2.1.1. File Structure\n   TIFF is designed for raster images, which makes it\
    \ a good match for\n   facsimile documents, which are multi-page raster images.\
    \ Each raster\n   image consists of a number of rows or scanlines, each of which\
    \ has\n   the same number of pixels, the unit of sampling. Each pixel has at\n\
    \   least one sample or component (exactly one for black-and-white\n   images).\n\
    \   A TIFF file begins with an 8-byte image file header. The first two\n   bytes\
    \ describe the byte order used within the file. Legal values are\n   \"II\" (0x4949)\
    \ when bytes are ordered from least to most significant\n   (little- endian),\
    \ and \"MM\" (0x4D4D), when bytes are ordered from most\n   to least significant\
    \ (big-endian) within a 16- or 32-bit integer.\n   Either byte order can be used,\
    \ except in the case of the minimal\n   black-and-white mode, which SHALL use\
    \ value \"II\". The next two bytes\n   contain the value 42 that identifies the\
    \ file as a TIFF file and is\n   ordered according to the value in the first two\
    \ bytes of the header.\n   The last four bytes give the offset that points to\
    \ the first image\n   file directory (IFD). This and all other offsets in a TIFF\
    \ file are\n   with respect to the beginning of the TIFF file. An IFD can be at\
    \ any\n   location in the file after the header but must begin on a word\n   boundary.\n\
    \   An IFD is a sequence of tagged fields, sorted in ascending order by\n   tag\
    \ value. An IFD consists of a 2-byte count of the number of fields,\n   a sequence\
    \ of field entries and a 4-byte offset to the next IFD. The\n   fields contain\
    \ information about the image and pointers to the image\n   data. Each separate\
    \ raster image in the file is represented by an\n   IFD.\n   Each field entry\
    \ in an IFD has 12 bytes and consists of a 2-byte Tag,\n   2 bytes identifying\
    \ the field type (e.g. short, long, rational,\n   ASCII), 4 bytes giving the count\
    \ (number of values or offsets), and 4\n   bytes that either contain the offset\
    \ to a field value stored outside\n   the IFD, or, based on the type and count,\
    \ the field value itself.\n   Resolution and metadata such as dates, names and\
    \ descriptions are\n   examples of \"long\" field values that do not fit in 4\
    \ bytes and\n   therefore use offsets in the field entry. Details are given in\
    \ the\n   TIFF specification [TIFF].\n   A TIFF file can contain more than one\
    \ IFD, where each IFD is a\n   subfile whose type is given in the NewSubfileType\
    \ field. Multiple\n   IFDs can be organized either as a linked list, with the\
    \ last entry in\n   each IFD pointing to the next IFD (the pointer in the last\
    \ IFD is 0),\n   or as a tree, using the SubIFDs field in the primary IFD [TTN1].\
    \ The\n   SubIFDs field contains an array of pointers to child IFDs of the\n \
    \  primary IFD.\n   Child IFDs describe related images, such as reduced resolution\n\
    \   versions of the primary IFD image. The same IFD can point both to a\n   next\
    \ IFD and to child IFDs, and child IFDs can themselves point to\n   other IFDs.\n\
    \   All fax modes represent a multi-page fax image as a linked list of\n   IFDs,\
    \ with a NewSubfileType field containing a bit that identifies\n   the IFD as\
    \ one page of a multi-page document. Each IFD has a\n   PageNumber field, identifying\
    \ the page number in ascending order,\n   starting at 0 for the first page. While\
    \ a Baseline TIFF reader is not\n   required to read any IFDs beyond the first,\
    \ an implementation that\n   reads the files that comply with this specification\
    \ SHALL read\n   multiple IFDs. Only the Mixed Raster Content fax mode, described\
    \ in\n   Section 8, requires the use of child IFDs.\n   The following figure illustrates\
    \ the structure of a multi-page TIFF\n   file.\n                   +-----------------------+\n\
    \                   |         Header        |------------+\n                 \
    \  +-----------------------+            | First IFD\n                   |    \
    \  IFD (page 0)     |<-----------+ Offset\n               +---|              \
    \         |------------+\n         Value |   +-----------------------+       \
    \     |\n        Offset +-->|      Long Values      |--+         |\n         \
    \          +-----------------------|  | Strip   |\n                   |      \
    \ Image Data      |<-+ Offset  |\n                   |     strip 1 page 0    |\
    \  |         |\n                   +-----------------------+  |         |\n  \
    \                 |           :           |  :         |\n                   \
    \                                     |\n                   +-----------------------+\
    \            | Next IFD\n                   |      IFD (page 1)     |<-----------+\
    \ Offset\n               +---|                       |------------+\n        \
    \ Value |   +-----------------------+            |\n        Offset +-->|     \
    \ Long Values      |--+         |\n                   +-----------------------|\
    \  | Strip   |\n                   |       Image Data      |<-+ Offset  |\n  \
    \                 |     strip 1 page 1    |  |         |\n                   +-----------------------+\
    \  |         |\n                   |     strip 2 page 1    |<-+         |\n  \
    \                 +-----------------------+  |         |\n                   |\
    \          :            |  :         |\n                                     \
    \                   |\n                   +-----------------------+          \
    \  | Next IFD\n                   |      IFD (page 2)     |<-----------+ Offset\n\
    \                   |          :            |\n"
- title: 2.1.2 Image Structure
  contents:
  - "2.1.2 Image Structure\n   An IFD stores an image as one or more strips, as shown\
    \ in the\n   preceding figure. A strip consists of 1 or more scanlines (rows)\
    \ of\n   raster image data in compressed form. An image may be stored in a\n \
    \  single strip or may be divided into several strips, which would\n   require\
    \ less memory to buffer. (Baseline TIFF recommends about 8k\n   bytes per strip,\
    \ but existing fax usage is typically one strip per\n   image.)\n   Each IFD requires\
    \ three strip-related fields: StripOffsets,\n   RowsPerStrip and StripByteCounts.\
    \ The StripOffsets field is an array\n   of pointers to the strip or strips that\
    \ contain the actual image\n   data. The StripByteCounts field gives the number\
    \ of bytes in each\n   strip after compression. TIFF requires that each strip,\
    \ except the\n   last, contain the same number of scanlines, which is given in\
    \ the\n   RowsPerStrip field. This document introduces the new StripRowCounts\n\
    \   field that allows a variable number of scanlines per strip, which is\n   required\
    \ by the Mixed Raster Content fax mode (Section 8).\n   Image data is stored as\
    \ uninterpreted, compressed image data streams\n   within a strip. The formats\
    \ of these streams follow the ITU-T\n   Recommendations. The Compression field\
    \ in the IFD indicates the type\n   of compression, and other TIFF fields in the\
    \ IFD describe image\n   attributes, such as color encoding and spatial resolution.\n\
    \   Compression parameters are stored in the compressed data stream,\n   rather\
    \ than in TIFF fields. This makes the TIFF representation and\n   compressed data\
    \ format specification independent of each another.\n   This approach, modeled\
    \ on [TTN2], allows TIFF to gracefully add new\n   compression schemes as they\
    \ become available.\n   Some attributes can be specified both in the compressed\
    \ data stream\n   and within a TIFF field. It is possible that the two values\
    \ will\n   differ. When this happens for values required to interpret the data\n\
    \   stream, then the values in the data stream take precedence. For\n   informational\
    \ values that are not required to interpret the data\n   stream, such as author\
    \ name, then the TIFF field value takes\n   precedence.\n"
- title: 2.1.3 TIFF File Structure for Fax Applications
  contents:
  - "2.1.3 TIFF File Structure for Fax Applications\n   The TIFF specification has\
    \ a very flexible file structure, which does\n   not specify the ordering of IFDs,\
    \ field values and image data in a\n   file. Individual applications may require\
    \ or recommend an ordering.\n   This specification recommends that when using\
    \ a TIFF file for\n   facsimile, A multi-page fax document SHOULD be represented\
    \ as a\n   linked list of IFDs. It also recommends that a TIFF file for\n   facsimile\
    \ SHOULD order pages in a TIFF file in the same way that they\n   are ordered\
    \ in a fax data stream. In a TIFF file, a page consists of\n   several elements:\
    \ one or more IFDs (including subIFDs), long field\n   values that are stored\
    \ outside the IFDs, and image data (in one or\n   more strips).\n   The minimal\
    \ black-and-white mode (Profile S) specifies a required\n   ordering of pages\
    \ and elements within a page (Section 3.5). The\n   extended black-and-white mode\
    \ (Profile F) provides guidelines for\n   ordering pages and page elements (Section\
    \ 4.4.6). Other profiles\n   SHOULD follow these guidelines. This recommendation\
    \ is intended to\n   simplify the implementation of TIFF writers and readers in\
    \ fax\n   applications and the conversion between TIFF file and fax data stream\n\
    \   representations. However, for interchange robustness, readers SHOULD\n   be\
    \ prepared to read TIFF files whose structure is consistent with\n   [TIFF], which\
    \ supports a more flexible file structure than is\n   recommended here.\n   This\
    \ specification introduces an optional new GlobalParametersIFD\n   field, defined\
    \ in Section 2.2.4. This field has type IFD and\n   indicates parameters describing\
    \ the fax session. While it is often\n   possible to obtain these parameters by\
    \ scanning the file, it is\n   convenient to make them available together in one\
    \ place for fast and\n   easy access. If the GlobalParametersIFD occurs in a TIFF\
    \ file, it\n   SHOULD be located in the first IFD, immediately following the 8-byte\n\
    \   image file header.\n"
- title: 2.2 TIFF Fields for All Fax Applications
  contents:
  - "2.2 TIFF Fields for All Fax Applications\n   The TIFF specification [TIFF] is\
    \ organized as a baseline set and\n   several extensions, including technical\
    \ notes [TTN1, TTN2] that will\n   be incorporated in the next release of TIFF.\
    \ The baseline and\n   extensions have required and optional fields.\n   Facsimile\
    \ applications require (and recommend) a mixture of baseline\n   and extensions\
    \ fields, as well as some new fields that are not part\n   of the TIFF specification\
    \ and that are defined in this document. This\n   sub- section lists the fields\
    \ that are required or recommended for\n   all modes. In particular, Section 2.2.1\
    \ lists the fields that are\n   required by all modes and that have values that\
    \ do not depend on the\n   mode. Section 2.2.2 lists the fields that are required\
    \ by all modes\n   and that have values which do depend on the mode. Section 2.2.3\
    \ lists\n   the fields that are recommended for all modes. Fields that are\n \
    \  required or recommended by some but not all modes are given in the\n   section\
    \ (Section 3-8) that describes that mode. The sections for each\n   fax mode have\
    \ sub-sections for required and recommended fields; each\n   sub-section organizes\
    \ the fields according to whether they are\n   baseline, extension or new.\n \
    \  The fields required for facsimile have only a few legal values,\n   specified\
    \ in the ITU-T Recommendations. Of these legal values, some\n   are required and\
    \ some are optional, just as they are required\n   (mandatory) or optional in\
    \ fax implementations that conform to the\n   ITU-T Recommendations. The required\
    \ and optional values are noted in\n   the sections on the different fax modes.\n\
    \   This section describes the fields required or recommended by all fax\n   modes.\
    \ The pattern for the description of TIFF fields in this draft\n   is:\n"
- title: FieldName(TagValueInDecimal) = allowable values.                    TYPE
  contents:
  - "FieldName(TagValueInDecimal) = allowable values.                    TYPE\n  \
    \  WhetherRequiredByTIFForTIFFforFAX\n    Count = (omitted if =1) = (if not in\
    \ current spec but available)\n    Explanation of the field, how it's used, and\
    \ the values it can have.\n    Default value, if any, as specified in [TIFF]\n\
    \   When a field's default value is the desired value, that field may be\n   omitted\
    \ from the relevant IFD unless specifically required by the\n   text of this specification.\n"
- title: 2.2.1.  TIFF fields required for all fax modes
  contents:
  - "2.2.1.  TIFF fields required for all fax modes\n   The TIFF fields listed in\
    \ this section SHALL be used by all fax\n   modes, but have field values that\
    \ are not specified by the ITU\n   standards, i.e. the fields do not depend on\
    \ the mode. The next sub-\n   section lists the fields that SHALL be used by all\
    \ fax modes, but\n   which do have values specified by the ITU-specified or mode-specific\n\
    \   values. Fields that SHALL be used by some but not all modes are given\n  \
    \ in the sections (3-8) which describe the modes that uses them.\n"
- title: ImageLength(257)                                           SHORT or LONG
  contents:
  - "ImageLength(257)                                           SHORT or LONG\n  \
    \  RequiredByTIFFBaseline\n    Total number of scanlines in image.\n    No default,\
    \ must be specified.\n"
- title: PageNumber(297)                                                    SHORT
  contents:
  - "PageNumber(297)                                                    SHORT\n  \
    \  RequiredByTIFFforFAX, TIFFExtension\n    Count = 2\n    The first number represents\
    \ the page number (0 for the first page);\n    the second number is the total\
    \ number of pages in the document. If\n    the second value is 0, then the total\
    \ page count is not available.\n    No default, must be specified\n"
- title: RowsPerStrip(278)                                          SHORT or LONG
  contents:
  - "RowsPerStrip(278)                                          SHORT or LONG\n  \
    \  RequiredByTIFFBaseline\n    The number of scanlines per TIFF strip, except\
    \ for the last strip.\n    For a single strip image, this is the same as the value\
    \ of the\n    ImageLength field.\n    Default = 2**32 - 1 (meaning all scanlines\
    \ in one strip)\n"
- title: StripByteCounts(279)                                       SHORT or LONG
  contents:
  - "StripByteCounts(279)                                       SHORT or LONG\n  \
    \  RequiredByTIFFBaseline\n    Count = number of strips\n    For each strip, the\
    \ number of bytes in that strip after compression.\n    No default, must be specified.\n"
- title: StripOffsets(273)                                          SHORT or LONG
  contents:
  - "StripOffsets(273)                                          SHORT or LONG\n  \
    \  RequiredByTIFFBaseline\n    Count = number of strips\n    For each strip, the\
    \ byte offset from the beginning of the file to\n    the start of that strip.\n\
    \    No default, must be specified.\n"
- title: 2.2.2 Additional TIFF fields required for all fax modes
  contents:
  - "2.2.2 Additional TIFF fields required for all fax modes\n   The TIFF fields listed\
    \ in this section SHALL be used by all fax\n   modes, but the values associated\
    \ with them depend on the mode being\n   described and the associated ITU Recommendations.\
    \ Therefore, only the\n   fields are defined here; the values applicable to a\
    \ particular fax\n   mode are described in Sections 3-8. Fields that SHALL be\
    \ used by some\n   but not all modes are given in the section (3-8) describing\
    \ the mode\n   that uses them.\n"
- title: BitsPerSample(258)                                                 SHORT
  contents:
  - "BitsPerSample(258)                                                 SHORT\n  \
    \  RequiredByTIFFBaseline\n    Number of bits per image sample\n    Default =\
    \ 1 (field may be omitted if this is the value)\n"
- title: Compression(259)                                                   SHORT
  contents:
  - "Compression(259)                                                   SHORT\n  \
    \  RequiredByTIFFBaseline\n    Compression method used for image data\n    Default\
    \ = 1 (no compression, so may not be omitted for FAX)\n"
- title: FillOrder(266)                                                     SHORT
  contents:
  - "FillOrder(266)                                                     SHORT\n  \
    \  RequiredByTIFFforFax\n    The default bit order in Baseline TIFF per [TIFF]\
    \ is indicated by\n    FillOrder=1, where bits are not reversed before being stored.\n\
    \    However, TIFF for Fax typically utilizes the setting of FillOrder=2,\n  \
    \  where the bit order within bytes is reversed before storage (i.e.,\n    bits\
    \ are stored with the Least Significant Bit first).\n    Default = 1 (field may\
    \ be omitted if this is the value)\n    Facsimile data appears on the phone line\
    \ in bit-reversed order\n    relative to its description in the relevant ITU compression\n\
    \    Recommendation. Therefore, a wide majority of facsimile\n    implementations\
    \ choose this natural order for storage. Nevertheless,\n    all readers conforming\
    \ to this specification must be able to read\n    data in both bit orders.\n"
- title: ImageWidth(256)                                            SHORT or LONG
  contents:
  - "ImageWidth(256)                                            SHORT or LONG\n  \
    \  RequiredByTIFFBaseline\n    The number of pixels (columns) per scanline (row)\
    \ of the image\n    No default, must be specified.\n"
- title: NewSubFileType(254)                                                 LONG
  contents:
  - "NewSubFileType(254)                                                 LONG\n  \
    \  RequiredByTIFFforFAX\n    A general indication of the kind of data contained\
    \ in this IFD\n    Bit 1 is 1 if the image is a single page of a multi-page document.\n\
    \    Default = 0 (no subfile bits on, so may not be omitted for FAX)\n"
- title: PhotometricInterpretation(262)                                     SHORT
  contents:
  - "PhotometricInterpretation(262)                                     SHORT\n  \
    \  RequiredByTIFFBaseline\n    The color space of the image data\n    No default,\
    \ must be specified\n"
- title: ResolutionUnit(296)                                                SHORT
  contents:
  - "ResolutionUnit(296)                                                SHORT\n  \
    \  RequiredByTIFFBaseline\n    The unit of measure for resolution. 2 = inch, 3\
    \ = centimeter;\n    Default = 2 (field may be omitted if this is the value)\n"
- title: SamplesPerPixel(277)                                               SHORT
  contents:
  - "SamplesPerPixel(277)                                               SHORT\n  \
    \  RequiredByTIFFBaseline\n    The number of color components per pixel; SamplesPerPixel\
    \ is 1 for a\n    black-and-white, grayscale or indexed (palette) image.\n   \
    \ Default =1 (field may be omitted if this is the value)\n"
- title: XResolution(282)                                                RATIONAL
  contents:
  - "XResolution(282)                                                RATIONAL\n  \
    \  RequiredByTIFFBaseline\n    The horizontal resolution of the image in pixels\
    \ per resolution\n    unit. The ITU-T Recommendations for facsimile specify a\
    \ small number\n    of horizontal resolutions: 100, 200, 300, 400 pixels per inch,\
    \ and\n    80, 160 pixels per centimeter (or 204, 408 pixels per inch). The\n\
    \    allowed XResolution values for each mode are given in the section\n    defining\
    \ that mode. Per [T.4], it is permissible for applications to\n    treat the following\
    \ XResolution values as being equivalent: <204,\n    200> and <400,408> in pixels/inch.\
    \ These equivalencies were allowed\n    by [T.4] to permit conversions between\
    \ inch and metric based\n    facsimile terminals.\n    TIFF for Facsimile Writers\
    \ SHOULD express XResolution in inch based\n    units, for consistency with historical\
    \ practice and to maximize\n    interoperability. See the table below for information\
    \ on how to\n    convert from an ITU-T metric value to its inch based equivalent\n\
    \    resolution.\n    No default, must be specified\n"
- title: YResolution(283)                                                RATIONAL
  contents:
  - "YResolution(283)                                                RATIONAL\n  \
    \  RequiredByTIFFBaseline\n    The vertical resolution of the image in pixels\
    \ per resolution unit.\n    The ITU-T Recommendations for facsimile specify a\
    \ small number of\n    vertical resolutions: 100, 200, 300, 400 pixels per inch,\
    \ and 38.5,\n    77, 154 pixels per centimeter (or 98, 196, 391 pixels per inch).\
    \ The\n    allowed YResolution values for each mode are given in the section\n\
    \    defining that mode. Per [T.4], it is permissible for applications to\n  \
    \  treat the following YResolution values as being equivalent: <98,\n    100>,\
    \ <196, 200>, and <391, 400> in pixels/inch. These equivalencies\n    were allowed\
    \ by [T.4] to permit conversions between inch and metric\n    based facsimile\
    \ terminals. TIFF for Facsimile Writers SHOULD express\n    YResolution in inch\
    \ based units, for consistency with historical\n    practice and to maximize interoperability.\
    \ See the table below for\n    information on how to convert from an ITU-T metric\
    \ value to its inch\n    based equivalent resolution. No default, must be specified\n\
    \      +-----------------------------+-----------------------------+\n      |\
    \         XResolution         |         YResolution         |\n      +--------------+--------------+--------------+--------------+\n\
    \      |ResolutionUnit|ResolutionUnit|ResolutionUnit|ResolutionUnit|\n      |\
    \  =2 (inch)   |   =3 (cm)    |  =2 (inch)   |   =3 (cm)    |\n      +--------------+--------------+--------------+--------------+\n\
    \      |     100      |              |     100      |              |\n      +--------------+--------------+--------------+--------------+\n\
    \      |     204      |      80      |      98      |     38.5     |\n      |\
    \     200      |              |     100      |              |\n      +--------------+--------------+--------------+--------------+\n\
    \      |     204      |      80      |     196      |      77      |\n      |\
    \     200      |              |     200      |              |\n      +--------------+--------------+--------------+--------------+\n\
    \      |     204      |      80      |     391      |     154      |\n      +--------------+--------------+--------------+--------------+\n\
    \      |     300      |              |     300      |              |\n      +--------------+--------------+--------------+--------------+\n\
    \      |     408      |     160      |     391      |     154      |\n      |\
    \     400      |              |     400      |              |\n      +--------------+--------------+--------------+--------------+\n"
- title: 2.2.3 TIFF fields recommended for all fax modes
  contents:
  - "2.2.3 TIFF fields recommended for all fax modes\n   The TIFF fields listed in\
    \ this section MAY be used by all fax modes.\n   However, Profile S writers (the\
    \ minimal fax mode described in Section\n   3) SHOULD NOT use these fields. Recommended\
    \ fields that are mode-\n   specific are described in Sections 3-8.\n"
- title: DateTime(306)                                                      ASCII
  contents:
  - "DateTime(306)                                                      ASCII\n  \
    \  OptionalInTIFFBaseline\n    Date/time of image creation in 24-hour format \"\
    YYYY:MM:DD HH:MM:SS\".\n    No default.\n"
- title: DocumentName(269)                                                  ASCII
  contents:
  - "DocumentName(269)                                                  ASCII\n  \
    \  OptionalInTIFFExtension(DocumentStorageAndRetrieval)\n    The name of the scanned\
    \ document. This is a TIFF extension field,\n    not a Baseline TIFF field.\n\
    \    No default.\n"
- title: ImageDescription(270)                                              ASCII
  contents:
  - "ImageDescription(270)                                              ASCII\n  \
    \  OptionalInTIFFBaseline\n    A string describing the contents of the image.\n\
    \    No default.\n"
- title: Orientation(274) = 1-8.                                            SHORT
  contents:
  - "Orientation(274) = 1-8.                                            SHORT\n  \
    \  OptionalinTIFFBaseline\n    1: 0th row represents the visual top of the image;\
    \ the 0th column\n    represents the visual left side of the image. See the current\
    \ TIFF\n    spec [TIFF] for further values; Baseline TIFF only requires value=1.\n\
    \    Default = 1.\n    Note: It is recommended that a writer that is aware of\
    \ the\n    orientation will include this field to give a positive indication of\n\
    \    the orientation, even if the value is the default. If the\n    Orientation\
    \ field is omitted, the reader SHALL assume a value of 1.\n"
- title: Software(305)                                                      ASCII
  contents:
  - "Software(305)                                                      ASCII\n  \
    \  OptionalInTIFFBaseline\n    The optional name and release number of the software\
    \ package that\n    created the image.\n    No default.\n"
- title: 2.2.4 New TIFF fields recommended for fax modes
  contents:
  - "2.2.4 New TIFF fields recommended for fax modes\n   The new TIFF fields listed\
    \ in this section MAY be used by all fax\n   modes, but their support is not expected\
    \ for the minimal fax mode\n   described in Section 3. In addition, support for\
    \ these new TIFF\n   fields has not been included in historical TIFF-F readers\
    \ described\n   in Section 4 and [TIFF- F]. These fields describe \"global\" parameters\n\
    \   of the fax session that created the image data. They are optional,\n   not\
    \ part of the current TIFF specification, and are defined in this\n   document.\n\
    \   The first new field, GlobalParametersIFD, is an IFD that contains\n   global\
    \ parameters and is located in a Primary IFD.\n"
- title: GlobalParametersIFD (400)                                            IFD
  contents:
  - "GlobalParametersIFD (400)                                            IFD\n  \
    \  An IFD containing global parameters. It is recommended that a TIFF\n    writer\
    \ place this field in the first IFD, where a TIFF reader would\n    find it quickly.\n\
    \   Each field in the GlobalParametersIFD is a TIFF field that is legal\n   in\
    \ any IFD. Required baseline fields should not be located in the\n   GlobalParametersIFD,\
    \ but should be in each image IFD. If a conflict\n   exists between fields in\
    \ the GlobalParametersIFD and in the image\n   IFDs, then the data in the image\
    \ IFD shall prevail.\n   Among the GlobalParametersIFD entries is a new ProfileType\
    \ field\n   which generally describes information in this IFD and in the TIFF\n\
    \   file.\n"
- title: ProfileType(401)                                                    LONG
  contents:
  - "ProfileType(401)                                                    LONG\n  \
    \  The type of image data stored in this IFD.\n    0 = Unspecified\n    1 = Group\
    \ 3 fax\n    No default\n   The following new global fields are defined in this\
    \ document as IFD\n   entries for use with fax applications.\n"
- title: FaxProfile(402) = 0 - 6.                                            BYTE
  contents:
  - "FaxProfile(402) = 0 - 6.                                            BYTE\n  \
    \  The profile that applies to this file; a profile is subset of the\n    full\
    \ set of permitted fields and field values of TIFF for facsimile.\n    The currently\
    \ defined values are:\n    0: does not conform to a profile defined for TIFF for\
    \ facsimile\n    1: minimal black & white lossless, Profile S\n    2: extended\
    \ black & white lossless, Profile F\n    3: lossless JBIG black & white, Profile\
    \ J\n    4: lossy color and grayscale, Profile C\n    5: lossless color and grayscale,\
    \ Profile L\n    6: Mixed Raster Content, Profile M\n"
- title: CodingMethods(403)                                                  LONG
  contents:
  - "CodingMethods(403)                                                  LONG\n  \
    \  This field indicates which coding methods are used in the file. A\n    bit\
    \ value of 1 indicates which of the following coding methods is\n    used:\n \
    \   Bit 0: unspecified compression,\n    Bit 1: 1-dimensional coding, ITU-T Rec.\
    \ T.4 (MH - Modified Huffman),\n    Bit 2: 2-dimensional coding, ITU-T Rec. T.4\
    \ (MR - Modified Read),\n    Bit 3: 2-dimensional coding, ITU-T Rec. T.6 (MMR\
    \ - Modified MR),\n    Bit 4: ITU-T Rec. T.82 coding, using ITU-T Rec. T.85 (JBIG),\n\
    \    Bit 5: ITU-T Rec. T.81 (Baseline JPEG),\n    Bit 6: ITU-T Rec. T.82 coding,\
    \ using ITU-T Rec. T.43 (JBIG color),\n    Bits 7-31: reserved for future use\n\
    \    Note: There is a limit of 32 compression types to identify standard\n   \
    \ compression methods.\n"
- title: VersionYear(404)                                                    BYTE
  contents:
  - "VersionYear(404)                                                    BYTE\n  \
    \  Count: 4\n    The year of the standard specified by the FaxProfile field, given\
    \ as\n    4 characters, e.g. '1997'; used in lossy and lossless color modes.\n"
- title: ModeNumber (405)                                                    BYTE
  contents:
  - "ModeNumber (405)                                                    BYTE\n  \
    \  The mode of the standard specified by the FaxProfile field. A\n    value of\
    \ 0 indicates Mode 1.0; used in Mixed Raster Content mode.\n"
- title: 3. Minimal Black-and-White Fax Mode
  contents:
  - "3. Minimal Black-and-White Fax Mode\n   This section defines the minimal black-and-white\
    \ subset of TIFF for\n   facsimile. This subset is designated Profile S. All implementations\n\
    \   of TIFF for facsimile SHALL support the minimal subset.\n   Black-and-white\
    \ mode is the binary fax application most users are\n   familiar with today. This\
    \ mode is appropriate for black-and-white\n   text and line art. Black-and-white\
    \ mode is divided into two levels of\n   capability. This section describes the\
    \ minimal interchange set of\n   TIFF fields that must be supported by all implementations\
    \ in order to\n   assure that some form of image, albeit black-and-white, can\
    \ be\n   interchanged. This minimum interchange set is a strict subset of the\n\
    \   fields and values defined for the extended black-and-white mode\n   (TIFF-F\
    \ or Profile F) in Section 4, which describes extensions to the\n   minimal interchange\
    \ set of fields that provide a richer set of\n   black-and-white capabilities.\n"
- title: 3.1. Overview
  contents:
  - "3.1. Overview\n   The minimal interchange portion of the black-and-white facsimile\
    \ mode\n   supports 1-dimensional Modified Huffman (MH) compression, with the\n\
    \   original Group 3 fax resolutions, commonly called \"standard\" and\n   \"\
    fine.\"\n   To assure interchange, this mode uses the minimal set of fields, with\n\
    \   a minimal set of values. There are no recommended fields in this\n   mode.\
    \ Further, the TIFF file is required to be \"little endian,\" which\n   means\
    \ that the byte order value in the TIFF header is \"II\". This mode\n   defines\
    \ a required ordering for the pages in a fax document and for\n   the IFDs and\
    \ image data of a page. It also requires that a single\n   strip contain the image\
    \ data for each page; see Section 3.5. The\n   image data may contain RTC sequences,\
    \ as specified in Section 3.4.\n"
- title: 3.2. Required TIFF Fields
  contents:
  - "3.2. Required TIFF Fields\n   Besides the fields listed in Section 2.2.1, the\
    \ minimal black-and-\n   white fax mode requires the following fields. The fields\
    \ listed in\n   Section 2.2.1 and the fields and fax-specific values specified\
    \ in\n   this sub- section must be supported by all implementations.\n"
- title: 3.2.1 Baseline fields
  contents:
  - '3.2.1 Baseline fields

    '
- title: BitsPerSample(258) = 1.                                            SHORT
  contents:
  - "BitsPerSample(258) = 1.                                            SHORT\n  \
    \  RequiredByTIFFBaseline\n    Binary data only.\n    Default = 1 (field may be\
    \ omitted if this is the value)\n"
- title: Compression(259) = 3.                                              SHORT
  contents:
  - "Compression(259) = 3.                                              SHORT\n  \
    \  RequiredByTIFFBaseline\n    3 = 1- or 2- dimensional coding.\n    The value\
    \ 3 is a TIFF extension value [TIFF]. The T4Options field\n    must be specified\
    \ and its value specifies that the data is encoded\n    using the Modified Huffman\
    \ (MH) encoding of [T.4].\n"
- title: FillOrder(266) = 2.                                                SHORT
  contents:
  - "FillOrder(266) = 2.                                                SHORT\n  \
    \  RequiredByTIFFBaseline\n    2 = Least Significant Bit first\n   NOTE: Baseline\
    \ TIFF readers are only required to support FillOrder =\n   1, where the lowest\
    \ numbered pixel is stored in the MSB of the byte.\n   However, because many devices,\
    \ such as modems, transmit the LSB first\n   when converting the data to serial\
    \ form, it is common for black-and-\n   white fax products to use the second FillOrder\
    \ =2, where the lowest\n   numbered pixel is stored in the LSB. Therefore, this\
    \ value is\n   specified in the minimal black-and-white mode.\n"
- title: ImageWidth(256) = 1728.                                    SHORT or LONG
  contents:
  - "ImageWidth(256) = 1728.                                    SHORT or LONG\n  \
    \  RequiredByTIFFBaseline\n    This mode only supports a page width of 1728 pixels.\
    \ This width\n    corresponds to North American Letter and Legal and to ISO A4\
    \ size\n    pages.\n    No default, must be specified.\n"
- title: NewSubFileType(254) = (Bit 1=1).                                    LONG
  contents:
  - "NewSubFileType(254) = (Bit 1=1).                                    LONG\n  \
    \  RequiredByTIFFforFAX\n    Bit 1 is 1 if the image is a single page of a multi-page\
    \ document.\n    Default = 0 (no subfile bits on, so may not be omitted for fax)\n"
- title: PhotometricInterpretation(262) = 0.                                SHORT
  contents:
  - "PhotometricInterpretation(262) = 0.                                SHORT\n  \
    \  RequiredByTIFFBaseline\n    0 = pixel value 1 means black\n    No default,\
    \ must be specified\n"
- title: ResolutionUnit(296) = 2.                                           SHORT
  contents:
  - "ResolutionUnit(296) = 2.                                           SHORT\n  \
    \  RequiredByTIFFBaseline\n    The unit of measure for resolution. 2 = inch.\n\
    \    Default = 2 (field may be omitted if this is the value)\n"
- title: SamplesPerPixel(277) = 1.                                          SHORT
  contents:
  - "SamplesPerPixel(277) = 1.                                          SHORT\n  \
    \  RequiredByTIFFBaseline\n    The number of components per pixel; 1 for black-and-white\n\
    \    Default =1 (field may be omitted if this is the value)\n"
- title: XResolution(282) = 200, 204.                                    RATIONAL
  contents:
  - "XResolution(282) = 200, 204.                                    RATIONAL\n  \
    \  RequiredByTIFFBaseline\n    The horizontal resolution of the image is expressed\
    \ in pixels per\n    resolution unit. In pixels/inch, the allowed values are 200\
    \ and 204,\n    which may be treated as equivalent. See Section 2.2.2 for inch-\n\
    \    metric equivalency.\n    No default, must be specified\n"
- title: YResolution(283) = 98, 100, 196, 200.                           RATIONAL
  contents:
  - "YResolution(283) = 98, 100, 196, 200.                           RATIONAL\n  \
    \  RequiredByTIFFBaseline\n    The vertical resolution of the image is expressed\
    \ in pixels per\n    resolution unit. In pixels/inch, the allowed values are 98,\
    \ 100,\n    196 and 200; 98 and 100 may be treated as equivalent, and 196 and\n\
    \    200 may be treated as equivalent. See Section 2.2.2 for inch-metric\n   \
    \ equivalency.\n    No default, must be specified\n"
- title: 3.2.2 Extension fields
  contents:
  - '3.2.2 Extension fields

    '
- title: T4Options(292) = (Bit 0 = 0, Bit 1 = 0, Bit 2 = 0, 1)               LONG
  contents:
  - "T4Options(292) = (Bit 0 = 0, Bit 1 = 0, Bit 2 = 0, 1)               LONG\n  \
    \  RequiredTIFFExtension (when Compression = 3)\n    Bit 0 = 0 indicates MH encoding.\n\
    \    Bit 1 must be 0\n    Bit 2 = 1 indicates that EOLs are byte aligned, = 0\
    \ EOLs not byte\n    aligned\n    Default is all bits are 0 (applies when EOLs\
    \ are not byte aligned)\n   Note: The T4Options field is required when the Compression\
    \ field has\n   a value of 3. Bit 0 of this field specifies the encoding used\
    \ (MH\n   only in this mode) and Bit 2 indicates whether the EOL codes are\n \
    \  byte-aligned or not. If they are byte aligned, then fill bits have\n   been\
    \ added as necessary so that the End of Line (EOL) codes always\n   end on byte\
    \ boundaries. See Section 3.4 for details.\n"
- title: 3.2.3. New Fields
  contents:
  - "3.2.3. New Fields\n   None.\n"
- title: 3.3. Recommended TIFF Fields
  contents:
  - "3.3. Recommended TIFF Fields\n   None.\n"
- title: 3.4. End of Line (EOL) and Return to Control (RTC)
  contents:
  - "3.4. End of Line (EOL) and Return to Control (RTC)\n   The handling of End of\
    \ Line (EOL) codes and Return to Control (RTC)\n   sequences illustrate the differences\
    \ between conventional fax, which\n   is bit and stream oriented, and TIFF, which\
    \ is byte and file\n   oriented. Conventional fax, Baseline TIFF and TIFF extensions\
    \ for fax\n   all handle EOLs and RTCs differently.\n   In conventional fax, an\
    \ MH-compressed fax data stream for a page\n   consists of the following sequence:\n\
    \      EOL, compressed data (first line), EOL, compressed data, ... ,\n      EOL,\
    \ compressed data (last line), RTC (6 consecutive EOL codes)\n   Baseline TIFF\
    \ does not use EOL codes or Return to Control (RTC)\n   sequences for MH-compressed\
    \ data. However, the TIFF extension field\n   T4Options used in this specification\
    \ for MH compression (Compression\n   = 3) requires EOLs.\n   Furthermore, Bit\
    \ 2 in the T4Options field indicates whether or not\n   the EOL codes are byte\
    \ aligned. If Bit 2 = 1, indicating the EOL\n   codes are byte aligned, then fill\
    \ bits have been added as necessary\n   before EOL codes so that an EOL code always\
    \ ends on a byte boundary,\n   and the first bit of data following an EOL begins\
    \ on a byte boundary.\n   Without fill bits, an EOL code may end in the middle\
    \ of a byte. Byte\n   alignment relieves application software of the burden of\
    \ bit-shifting\n   every byte while parsing scan lines for line-oriented image\n\
    \   manipulation (such as writing a TIFF file). Not all TIFF readers\n   historically\
    \ used for fax are able to deal with non-byte aligned\n   data.\n   While TIFF\
    \ extension requires EOL codes, TIFF in fax applications has\n   traditionally\
    \ prohibited RTC sequences. Implementations that want\n   common processing and\
    \ interfaces for fax data streams and Internet\n   fax files would prefer that\
    \ the TIFF data include RTC sequences.\n   To reconcile these differences, RTCs\
    \ are allowed in cases where EOL\n   codes are not byte aligned and no fill bits\
    \ have been added to the\n   data. This corresponds to situations where the fax\
    \ data is simply\n   inserted in a strip without being processed or interpreted.\
    \ RTCs\n   should not occur in the data when EOLs have been byte aligned. This\n\
    \   is formally specified in the next sub-section.\n"
- title: 3.4.1. RTC Exclusion
  contents:
  - "3.4.1. RTC Exclusion\n   Implementations which wish to maintain strict conformance\
    \ with TIFF\n   and compatibility with the historical use of TIFF for fax SHOULD\
    \ NOT\n   include the RTC sequence when writing TIFF files. However,\n   implementations\
    \ which need to support \"transparency\" of T.4-generated\n   image data MAY include\
    \ RTCs when writing TIFF files if the flag\n   settings of the T4Options field\
    \ are set for non-byte aligned data,\n   i.e. Bit 2 is 0. Implementors of TIFF\
    \ readers should be aware that\n   there are some existing TIFF implementations\
    \ for fax that include the\n   RTC sequence in MH image data. Therefore, minimal\
    \ set readers MUST be\n   able to process files which do not include RTCs and\
    \ SHOULD be able to\n   process files which do include RTCs.\n"
- title: 3.5. File Structure
  contents:
  - "3.5. File Structure\n   The TIFF header, described in Section 2.1.1, contains\
    \ two bytes which\n   describe the byte order used within the file. For the minimal\
    \ black-\n   and- white mode, these bytes SHALL have the value \"II\" (0x4949),\n\
    \   denoting that the bytes in the TIFF file are in LSByte-first order\n   (little-\
    \ endian). The first or 0th IFD immediately follows the\n   header, so that offset\
    \ to the first IFD is 8. The headers values are\n   shown in the following table:\n\
    \          +--------+-------------------+--------+-----------+\n          | Offset\
    \ |   Description     |     Value          |\n          +--------+-------------------+--------+-----------+\n\
    \          |   0    |   Byte Order      |  0x4949 (II)       |\n          +--------+-------------------+--------+-----------+\n\
    \          |   2    |   Identifier      |  42 decimal        |\n          +--------+-------------------+--------+-----------+\n\
    \          |   4    | Offset of 0th IFD |  0x 0000 0008      |\n          +--------+-------------------+--------+-----------+\n\
    \   The minimal black-and-white mode SHALL order IFDs and image data\n   within\
    \ a file as follows: 1) there SHALL be an IFD for each page in a\n   multi- page\
    \ fax document; (2) the IFDs SHALL occur in the same order\n   in the file as\
    \ the pages occur in the document; (3) the IFD SHALL\n   precede the image data\
    \ to which it has offsets; (4) the image data\n   SHALL occur in the same order\
    \ in the file as the pages occur in the\n   document; (5) the IFD, the value data\
    \ and the image data it has\n   offsets to SHALL precede the next image IFD; and\
    \ (6) the image data\n   for each page SHALL be contained within a single strip.\n\
    \   As a result of (6), the StripOffsets field will contain the pointer\n   to\
    \ the image data. With two exceptions, the field entries in the IFD\n   contain\
    \ the field values instead of offsets to field values located\n   outside the\
    \ IFD. The two exceptions are the values for the\n   XResolution and YResolution\
    \ fields, both of which are type RATIONAL\n   and require 2 4- byte numbers. These\
    \ \"long\" field values SHALL be\n   placed immediately after  the IFD which contains\
    \ the offsets to them,\n   and before the image data pointed to by that IFD.\n\
    \   The effect of these requirements is that the IFD for the first page\n   SHALL\
    \ come first in the file after the TIFF header, followed by the\n   long field\
    \ values for XResolution and YResolution, followed by the\n   image data for the\
    \ first page, then the IFD for second page, etc.\n   This is shown in the following\
    \ figure. Each IFD is required to have a\n   PageNumber field, which has value\
    \ 0 for the first page, 1 for the\n   second page, and so on.\n              \
    \     +-----------------------+\n                   |         Header        |------------+\n\
    \                   +-----------------------+            | First IFD\n       \
    \            |      IFD (page 0)     | <----------+ Offset\n               +---|\
    \                       |------------+\n               |   |                 \
    \      |--+         |\n         Value |   +-----------------------+  |       \
    \  |\n        Offset +-->|      Long Values      |  |         |\n            \
    \       +-----------------------|  | Strip   |\n                   |  Image Data\
    \ (page 0)  |<-+ Offset  |\n                   +-----------------------+     \
    \       | Next IFD\n                   |      IFD (page 1)     | <----------+\
    \ Offset\n               +---|                       |------------+\n        \
    \       |   |                       |--+         |\n         Value |   +-----------------------+\
    \  |         |\n        Offset +-->|      Long Values      |  |         |\n  \
    \                 +-----------------------|  | Strip   |\n                   |\
    \  Image Data (page 1)  |<-+ Offset  |\n                   +-----------------------+\
    \            | Next IFD\n                   |      IFD (page 2)     | <----------+\
    \ Offset\n                   +-----------------------+\n                   | \
    \         :            |\n   Using this file structure may reduce the memory requirements\
    \ in\n   implementations. It is also provides some support for streaming, in\n\
    \   which a file can be processed as it is received and before the entire\n  \
    \ file is received.\n"
- title: 3.6 Minimal Black-and-white Mode Summary
  contents:
  - "3.6 Minimal Black-and-white Mode Summary\n   The table below summarizes the TIFF\
    \ fields that comprise the minimal\n   interchange set for black-and-white facsimile.\
    \ The Baseline and\n   Extension fields and field values MUST be supported by\
    \ all\n   implementations. For convenience in the table, certain fields which\n\
    \   have a value that is a sequence of flag bits are shown taking integer\n  \
    \ values that correspond to the flags that are set. An implementation\n   should\
    \ test the setting of the relevant flag bits individually,\n   however, to allow\
    \ extensions to the sequence of flag bits to be\n   appropriately ignored. (See,\
    \ for example, T4Options below.)\n      +---------------------------+--------------------------------+\n\
    \      | Baseline Fields           |  Values                        |\n      +---------------------------+--------------------------------+\n\
    \      | BitsPerSample             | 1                              |\n      +---------------------------+--------------------------------+\n\
    \      | Compression               | 3: 1D Modified Huffman coding  |\n      |\
    \                           |     set T4Options = 0 or 4     |\n      +------------------------------------------------------------+\n\
    \      +---------------------------+--------------------------------+\n      |\
    \ FillOrder                 | 2: least significant bit first |\n      +---------------------------+--------------------------------+\n\
    \      | ImageWidth                | 1728                           |\n      +---------------------------+--------------------------------+\n\
    \      | ImageLength               | n: total number of scanlines   |\n      |\
    \                           | in image                       |\n      +---------------------------+--------------------------------+\n\
    \      | NewSubFileType            | 2: Bit 1 identifies single     |\n      |\
    \                           | page of a multi-page document  |\n      +---------------------------+--------------------------------+\n\
    \      | PageNumber                | n,m: page number n followed by |\n      |\
    \                           | total page count m             |\n      +---------------------------+--------------------------------+\n\
    \      | PhotometricInterpretation | 0: pixel value 1 means black   |\n      +---------------------------+--------------------------------+\n\
    \      | ResolutionUnit            | 2: inch                        |\n      +---------------------------+--------------------------------+\n\
    \      | RowsPerStrip              | number of scanlines per strip  |\n      |\
    \                           | = ImageLength, with one strip  |\n      +---------------------------+--------------------------------+\n\
    \      | SamplesPerPixel           | 1                              |\n      +---------------------------+--------------------------------+\n\
    \      | StripByteCounts           | number of bytes in TIFF strip  |\n      +---------------------------+--------------------------------+\n\
    \      | StripOffsets              | offset from beginning of       |\n      |\
    \                           | file to single TIFF strip      |\n      +---------------------------+--------------------------------+\n\
    \      | XResolution               | 204, 200 (pixels/inch)         |\n      +---------------------------+--------------------------------+\n\
    \      | YResolution               | 98, 196, 100, 200 (pixels/inch)|\n      +---------------------------+--------------------------------+\n\
    \      | Extension Fields                                           |\n      +---------------------------+--------------------------------+\n\
    \      | T4Options                 | 0: MH coding, EOLs not byte    |\n      |\
    \                           |               aligned          |\n      |      \
    \                     | 4: MH coding, EOLs byte aligned|\n      +---------------------------+--------------------------------+\n"
- title: 4. Extended Black-and-White fax mode
  contents:
  - "4. Extended Black-and-White fax mode\n   This section defines the extended black-and-white\
    \ mode or Profile F\n   of TIFF for facsimile. It provides a standard definition\
    \ of what has\n   historically been known as TIFF Class F and now TIFF-F. In doing\
    \ so,\n   it aligns this mode with current ITU-T Recommendations for black-\n\
    \   and-white fax and with existing industry practice. Implementations of\n  \
    \ this profile include implementations of Profile S.\n   This section describes\
    \ extensions to the minimal interchange set of\n   fields (Profile S) that provide\
    \ a richer set of black-and-white\n   capabilities. The fields and values described\
    \ in this section are a\n   superset of the fields and values defined for the\
    \ minimal interchange\n   set in Section 3. In addition to the MH encoding, Modified\
    \ READ (MR)\n   and Modified Modified READ (MMR) encoding as described in [T.4]\
    \ and\n   [T.6] are supported.\n   Section 4.1 gives an overview of TIFF-F. Section\
    \ 4.2 describes the\n   TIFF fields that SHALL be used in this mode. Section 4.3\
    \ describes\n   the fields that MAY be used in this mode. In the spirit of the\n\
    \   original TIFF-F specification, Sections 4.4 and 4.5 discuss technical\n  \
    \ implementation issues and warnings. Section 4.6 gives an example use\n   of\
    \ TIFF-F. Section 4.7 gives a summary of the required and\n   recommended fields\
    \ and their values.\n"
- title: 4.1 TIFF-F Overview
  contents:
  - "4.1 TIFF-F Overview\n   Though it has been in common usage for many years, TIFF-F\
    \ has\n   previously never been documented in the form of a standard.  An\n  \
    \ informal TIFF-F document was originally created by a small group of\n   fax\
    \ experts led by Joe Campbell.  The existence of TIFF-F is noted in\n   [TIFF]\
    \ but it is not defined.  This document serves as the formal\n   definition of\
    \ the F application of [TIFF] for Internet applications.\n   For ease of reference,\
    \ the term TIFF-F will be used throughout this\n   document as a shorthand for\
    \ the extended black-and-white mode or\n   profile of TIFF for facsimile.\n  \
    \ Up until the TIFF 6.0 specification, TIFF supported various \"Classes\"\n  \
    \ which defined the use of TIFF for various applications. Classes were\n   used\
    \ to support specific applications. In this spirit, TIFF-F has\n   been known\
    \ historically as \"TIFF Class F\".  Previous informal TIFF-F\n   documents [TIFF-F0]\
    \ used the \"Class F\" terminology.  As of TIFF 6.0\n   [TIFF], the TIFF Class\
    \ concept has been eliminated in favor of the\n   concept of Baseline TIFF.  Therefore,\
    \ this document updates the\n   definition of TIFF-F as the F profile of TIFF\
    \ for facsimile, by using\n   Baseline  TIFF as defined in [TIFF] as the starting\
    \ point and then\n   adding the TIFF extensions to Baseline TIFF which apply for\
    \ TIFF-F.\n   In almost all  cases, the resulting definition of TIFF-F fields\
    \ and\n   values remains  consistent with those used historically in earlier\n\
    \   definitions of TIFF  Class F.  Where some of the values for fields\n   have\
    \ been updated to provide more precise conformance with the ITU-T\n   [T.4] and\
    \ [T.30] fax recommendations, these differences are noted.\n"
- title: 4.2. Required TIFF Fields
  contents:
  - "4.2. Required TIFF Fields\n   This section lists the required fields and the\
    \ values they must have\n   to be ITU-compatible. Besides the fields listed in\
    \ Section 2.2.1, the\n   extended black-and-white fax mode SHALL use the following\
    \ fields.\n"
- title: 4.2.1. Baseline fields
  contents:
  - '4.2.1. Baseline fields

    '
- title: BitsPerSample(258) = 1.                                            SHORT
  contents:
  - "BitsPerSample(258) = 1.                                            SHORT\n  \
    \  RequiredByTIFFBaseline\n    Binary data only.\n    Default = 1 (field may be\
    \ omitted if this is the value)\n"
- title: Compression(259) = 3, 4.                                           SHORT
  contents:
  - "Compression(259) = 3, 4.                                           SHORT\n  \
    \  RequiredByTIFFBaseline\n    3 = 1- or 2- dimensional coding, must have T4Options\
    \ field This is\n    a TIFF Extension value [TIFF].\n    4 = 2-dimensional coding,\
    \ ITU-T Rec. T.6 (MMR - Modified Modified\n    Read, must have T6Options field))\
    \ This is a TIFF Extension value.\n    Default = 1 (and is not applicable; field\
    \ must be specified)\n   NOTE: Baseline TIFF permits use of value 2 for Modified\
    \ Huffman\n   encoding, but data is presented in a form which does not use EOLs,\n\
    \   and so TIFF for facsimile uses Compression=3 instead. See Sections\n   4.4.4,\
    \ 4.5.1 and 4.5.2 for more information on compression and\n   encoding.\n"
- title: FillOrder(266) = 1 , 2.                                            SHORT
  contents:
  - "FillOrder(266) = 1 , 2.                                            SHORT\n  \
    \  RequiredByTIFFBaseline\n    Profile F readers must be able to read data in\
    \ both bit orders,\n    but the vast majority of facsimile products store data\
    \ LSB\n    first, exactly as it appears on the telephone line.\n             \
    \ 1 = Most Significant Bit first.\n              2 = Least Significant Bit first\n"
- title: ImageWidth(256)                                            SHORT or LONG
  contents:
  - "ImageWidth(256)                                            SHORT or LONG\n  \
    \  RequiredByTIFFBaseline\n    This mode supports the following fixed page widths:\
    \ 1728, 2592, 3456\n    (corresponding to North American Letter and Legal, ISO\
    \ A4 paper\n    sizes), 2048, 3072, 4096 (corresponding to ISO B4 paper size),\
    \ and\n    2432, 3648, 4864 (corresponding to ISO A3 paper size).\n    No default;\
    \ must be specified\n   NOTE: Historical TIFF-F did not include support for the\
    \ following\n   widths related to higher resolutions: 2592, 3072, 3648, 3456,\
    \ 4096\n   and 4864. Historical TIFF-F documents also included the following\n\
    \   values related to A5 and A6 widths: 816 and 1216. Per the most recent\n  \
    \ version of [T.4], A5 and A6 documents are no longer supported in\n   Group 3\
    \ facsimile, so the related width values are now obsolete. See\n   section 4.5.2\
    \ for more information on inch/metric equivalencies and\n   other implementation\
    \ details.\n"
- title: NewSubFileType(254) = (Bit 1=1).                                    LONG
  contents:
  - "NewSubFileType(254) = (Bit 1=1).                                    LONG\n  \
    \  RequiredByTIFFforFAX\n    Bit 1 is 1 if the image is a single page of a multi-page\
    \ document.\n    Default = 0 (no subfile bits on, so may not be omitted for fax)\n\
    \   NOTE: Bit 1 is always set to 1 for TIFF-F, indicating a single page\n   of\
    \ a multi-page image. The same bit settings are used when TIFF-F is\n   used for\
    \ a one page fax image. See Section 4.4.3 for details on\n   multi-page files.\n"
- title: PhotometricInterpretation(262) = 0, 1.                             SHORT
  contents:
  - "PhotometricInterpretation(262) = 0, 1.                             SHORT\n  \
    \  RequiredByTIFFBaseline\n    0 = pixel value 1 means black, 1 = pixel value\
    \ 1 means white.\n    This field allows notation of an inverted or negative image.\n\
    \    No default, must be specified\n"
- title: ResolutionUnit(296) = 2, 3.                                        SHORT
  contents:
  - "ResolutionUnit(296) = 2, 3.                                        SHORT\n  \
    \  RequiredByTIFFBaseline\n    The unit of measure for resolution. 2 = inch, 3\
    \ = centimeter; TIFF-F\n    has traditionally used inch-based measures.\n    Default\
    \ = 2 (field may be omitted if this is the value)\n"
- title: SamplesPerPixel(277) = 1.                                          SHORT
  contents:
  - "SamplesPerPixel(277) = 1.                                          SHORT\n  \
    \  RequiredByTIFFBaseline\n    1 = monochrome, bilevel in this case (see BitsPerSample)\n\
    \    Default =1 (field may be omitted if this is the value)\n"
- title: XResolution(282) = 200, 204, 300, 400, 408                      RATIONAL
  contents:
  - "XResolution(282) = 200, 204, 300, 400, 408                      RATIONAL\n  \
    \  RequiredByTIFFBaseline\n    The horizontal resolution of the image is expressed\
    \ in pixels per\n    resolution unit. In pixels/inch, the allowed values are:\
    \ 200, 204,\n    300, 400, and 408. See Section 2.2.2 for inch-metric equivalency.\n\
    \    No default, must be specified\n   NOTE: The values of 200 and 408 have been\
    \ added to the historical\n   TIFF-F values, for consistency with [T.30]. Some\
    \ existing TIFF-F\n   implementations may also support values of 80 pixels/cm,\
    \ which is\n   equivalent to 204 pixels per inch. See section 4.5.2 for information\n\
    \   on implementation details.\n"
- title: YResolution(283) = 98, 100, 196, 200, 300, 391, and 400       RATIONAL
  contents:
  - "YResolution(283) = 98, 100, 196, 200, 300, 391, and 400       RATIONAL\n    RequiredByTIFFBaseline\n\
    \    The vertical resolution of the image is expressed in pixels per\n    resolution\
    \ unit. In pixels/inch, the allowed values are: 98, 100,\n    196, 200, 300, 391,\
    \ and 400 pixels/inch.\n    See Section 2.2.2 for inch-metric equivalency.\n \
    \   No default, must be specified\n   NOTE: The values of 100, 200, and 391 have\
    \ been added to the\n   historical TIFF-F values, for consistency with [T.30].\
    \  Some existing\n   TIFF-F implementations may also support values of 77 and\
    \ 38.5 (cm),\n   which are equivalent to 196 and 98 pixels per inch respectively.\
    \ See\n   section 4.5.2 for more information on implementation details.\n   NOTE:\
    \ Not all combinations of XResolution, YResolution and ImageWidth\n   are legal.\
    \ The following table gives the legal combinations and\n   corresponding paper\
    \ size [T.30].\n    +--------------+-----------------+---------------------------+\n\
    \    |   XResolution x YResolution    |         ImageWidth        |\n    +--------------+-----------------+---------+--------+--------+\n\
    \    |      200x100, 204x98           |         |        |        |\n    |   \
    \   200x200, 204x196          |  1728   |  2048  |  2432  |\n    |           204x391\
    \              |         |        |        |\n    +--------------+-----------------+---------+--------+--------+\n\
    \    |          300 x 300             |  2592   |  3072  |  3648  |\n    +--------------+-----------------+---------+--------+--------+\n\
    \    |     408 x 391, 400 x 400       |  3456   |  4096  |  4864  |\n    +--------------+-----------------+---------+--------+--------+\n\
    \                                     |Letter,A4|   B4   |   A3   |\n        \
    \                             |  Legal  |        |        |\n                \
    \                     +---------+--------+--------+\n                        \
    \             |         Paper Size        |\n                                \
    \     +---------------------------+\n"
- title: 4.2.2. Extension fields
  contents:
  - '4.2.2. Extension fields

    '
- title: T4Options(292) = (Bit 0 = 0 or 1, Bit 1 = 0, Bit 2 = 0 or 1)        LONG
  contents:
  - "T4Options(292) = (Bit 0 = 0 or 1, Bit 1 = 0, Bit 2 = 0 or 1)        LONG\n  \
    \  RequiredTIFFExtension (when Compression = 3)\n    T4Options was also known\
    \ as Group3Options in a prior version of\n    [TIFF].\n    Bit 0 = 1 indicates\
    \ MR encoding, = 0 indicates MH encoding.\n    Bit 1 must be 0\n    Bit 2 = 1\
    \ indicates that EOLs are byte aligned, = 0 EOLs not byte\n    aligned\n    Default\
    \ is all bits are 0 (applies when MH encoding is used and EOLs\n    are not byte\
    \ aligned EOLs) (See Section 3.2.2.)\n    The T4Options field is required when\
    \ the Compression field has a\n    value of 3. This field specifies the encoding\
    \ used (MH or MR) and\n    whether the EOL codes are byte-aligned or not. If they\
    \ are byte\n    aligned, then fill bits have been added as necessary so that the\
    \ End\n    of Line (EOL) codes always end on byte boundaries See Sections 3.4,\n\
    \    4.5.3 and 4.5.4 for details.\n"
- title: T6Options(293) = (Bit 0 = 0, Bit 1 = 0). LONG
  contents:
  - "T6Options(293) = (Bit 0 = 0, Bit 1 = 0). LONG\n    RequiredTIFFExtension (when\
    \ Compression = 4)\n    Used to indicate parameterization of 2D Modified Modified\
    \ Read\n    compression. T6Options was also known as Group4Options in a prior\n\
    \    version of [TIFF].\n    Bit 0 must be 0.\n    Bit 1 = 0 indicates uncompressed\
    \ data mode is not allowed; = 1\n    indicates uncompressed data is allowed (see\
    \ [TIFF]).\n    Default is all bits 0. For FAX, the field must be present and\
    \ have\n    the value 0. The use of uncompressed data where compression would\n\
    \    expand the data size is not allowed for FAX.\n   NOTE: MMR compressed data\
    \ is two-dimensional and does not use EOLs.\n   Each MMR encoded image MUST include\
    \ an \"end-of-facsimile-block\"\n   (EOFB) code at the end of each coded strip;\
    \ see Section 4.5.6.\n"
- title: 4.2.3. New fields
  contents:
  - "4.2.3. New fields\n   None.\n"
- title: 4.3. Recommended TIFF fields
  contents:
  - '4.3. Recommended TIFF fields

    '
- title: 4.3.1. Baseline fields
  contents:
  - "4.3.1. Baseline fields\n   See Section 2.2.3.\n"
- title: 4.3.2. Extension fields
  contents:
  - "4.3.2. Extension fields\n   See Section 2.2.3.\n"
- title: 4.3.3. New fields
  contents:
  - "4.3.3. New fields\n   Three new, optional fields, used in the original TIFF-F\
    \ description\n   to describe page quality, are defined in this specification.\
    \  The\n   information contained in these fields is usually obtained from\n  \
    \ receiving facsimile hardware (if applicable). They SHOULD NOT be used\n   in\
    \ writing TIFF-F files for facsimile image data that is error\n   corrected or\
    \ otherwise guaranteed not to have coding errors. Some\n   applications need to\
    \ understand exactly the error content of the\n   data.  For example, a CAD program\
    \ might wish to verify that a  file\n   has a low error level before importing\
    \ it into a high-accuracy\n   document. Because Group 3 facsimile devices do not\
    \ necessarily\n   perform error correction on the image data, the quality of a\
    \ received\n   page must be inferred from the pixel count of decoded scan lines.\
    \ A\n   \"good\" scan line is defined as a line that, when decoded, contains\n\
    \   the correct number of pixels. Conversely, a \"bad\" scan line is\n   defined\
    \ as a line that, when decoded, comprises an incorrect number\n   of pixels.\n"
- title: BadFaxLines(326)                                           SHORT or LONG
  contents:
  - "BadFaxLines(326)                                           SHORT or LONG\n  \
    \  The number of \"bad\" scan lines encountered by the facsimile device\n    during\
    \ reception. A \"bad\" scanline is defined as a scanline that,\n    when decoded,\
    \ comprises an incorrect number of pixels. Note that\n    PercentBad = (BadFaxLines/ImageLength)\
    \ * 100\n    No default.\n"
- title: CleanFaxData(327) = 0, 1, 2.                                       SHORT
  contents:
  - "CleanFaxData(327) = 0, 1, 2.                                       SHORT\n  \
    \  Indicates if \"bad\" lines encountered during reception are stored in\n   \
    \ the data, or if \"bad\" lines have been replaced by the receiver.\n    0 = No\
    \ \"bad\" lines\n    1 = \"bad\" lines exist, but were regenerated by the receiver,\n\
    \    2 = \"bad\" lines exist, but have not been regenerated.\n    No default.\n\
    \   NOTE: Many facsimile devices do not actually output bad lines.\n   Instead,\
    \ the previous good line is repeated in place of a bad line.\n   Although this\
    \ substitution, known as line regeneration, results in a\n   visual improvement\
    \ to the image, the data is nevertheless corrupted.\n   The CleanFaxData field\
    \ describes the error content of the data.  That\n   is, when the BadFaxLines\
    \ and ImageLength fields indicate that the\n   facsimile device encountered lines\
    \ with an incorrect number of pixels\n   during reception, the CleanFaxData field\
    \ indicates whether these bad\n   lines are actually still in the data or if the\
    \ receiving facsimile\n   device replaced them with regenerated lines.\n"
- title: ConsecutiveBadFaxLines(328)                               LONG or SHORT
  contents:
  - "ConsecutiveBadFaxLines(328)                               LONG or SHORT\n   \
    \ Maximum number of consecutive \"bad\" scanlines received.  The\n    BadFaxLines\
    \ field indicates only the quantity of bad lines.\n    No Default.\n   NOTE: The\
    \ BadFaxLines and ImageLength data indicate only the quantity\n   of bad lines.\
    \ The ConsecutiveBadFaxLines field is an indicator of the\n   distribution of\
    \ bad lines and may therefore be a better general\n   indicator of perceived image\
    \ quality. See Section 4.4.5 for examples\n   of the use of these fields.\n"
- title: 4.4. Technical Implementation Issues
  contents:
  - '4.4. Technical Implementation Issues

    '
- title: 4.4.1   Strips
  contents:
  - "4.4.1   Strips\n   In general, TIFF files divide an image into \"strips,\" also\
    \ known as\n   \"bands.\"  Each strip contains a few scanlines of the image. By\
    \ using\n   strips, a TIFF reader need not load the entire image into memory,\n\
    \   thus enabling it to fetch and decompress small random portions of the\n  \
    \ image as necessary.\n   The number of scanlines in a strip is described by the\
    \ RowsPerStrip\n   value and the number of bytes in the strip after compression\
    \ by the\n   StripByteCount value.  The location in the TIFF file of each strip\
    \ is\n   given by the StripOffsets values.\n   Strip size is application dependent.\
    \ The recommended approach for\n   multi- page TIFF-F images is to represent each\
    \ page as a single\n   strip. Existing TIFF-F usage is typically one strip per\
    \ page in\n   multi-page TIFF-F files. See Sections 2.1.2 and 2.1.3.\n"
- title: 4.4.2  Bit Order
  contents:
  - "4.4.2  Bit Order\n   The current TIFF specification [TIFF] does not require a\
    \ Baseline\n   TIFF reader to support FillOrder=2, i.e. lowest numbered 1-bit\
    \ pixel\n   in the least significant bit of a byte. It further recommends that\n\
    \   FillOrder=2 be used only in special purpose applications.\n   Facsimile data\
    \ appears on the phone line in bit-reversed order\n   relative to its description\
    \ in ITU-T Recommendation T.4.  Therefore,\n   a wide majority of facsimile applications\
    \ choose this natural order\n   for data in a file. Nevertheless, TIFF-F readers\
    \ must be able to read\n   data in both bit orders and support FillOrder values\
    \ of 1 and 2.\n"
- title: 4.4.3. Multi-Page
  contents:
  - "4.4.3. Multi-Page\n   Many existing applications already read TIFF-F-like files,\
    \ but do not\n   support the multi-page field.  Since a multi-page format greatly\n\
    \   simplifies file management in fax application software, TIFF-F\n   specifies\
    \ multi-page documents (NewSubfileType = 2) as the standard\n   case.\n   It is\
    \ recommended that applications export multiple page TIFF-F files\n   without\
    \ manipulating fields and values.   Historically, some TIFF-F\n   writers have\
    \ attempted to produce individual single-page TIFF-F files\n   with modified NewSubFileType\
    \ and PageNumber (page one-of-one) values\n   for export purposes.  However, there\
    \ is no easy way to link such\n   multiple single page files together into a logical\
    \ multiple page\n   document, so that this practice is not recommended.\n"
- title: 4.4.4. Compression
  contents:
  - "4.4.4. Compression\n   In Group 3 facsimile, there are three compression methods\
    \ which had\n   been standardized as of 1994 and are in common use. The ITU-T\
    \ T.4\n   Recommendation [T.4] defines a one-dimensional compression method\n\
    \   known as Modified Huffman (MH) and a two-dimensional method known as\n   Modified\
    \ READ (MR) (READ is short for Relative Element Address\n   Designate). In 1984,\
    \ a somewhat more efficient compression method\n   known as Modified Modified\
    \ READ (MMR) was defined in the ITU-T T.6\n   Recommendation [T.6]. MMR was originally\
    \ defined for use with Group 4\n   facsimile, so that this compression method\
    \ has been commonly called\n   Group 4 compression.  In 1991, the MMR method was\
    \ approved for use in\n   Group 3 facsimile and has since been widely utilized.\n\
    \   TIFF-F supports these three compression methods. The most common\n   practice\
    \ is the one-dimensional Modified Huffman (MH) compression\n   method.  This is\
    \ specified by setting the Compression field value to\n   3 and then setting bit\
    \ 0 of the T4Options field to 0.  Alternatively,\n   the two dimensional Modified\
    \ READ (MR) method, which is much less\n   frequently used in historical TIFF-F\
    \ implementations, may be selected\n   by setting bit 0 of the T4Options field\
    \ to 1.  The value of Bit 2 in\n   this field is determined by the use of fill\
    \ bits.\n   Depending upon the application, the more efficient two-dimensional\n\
    \   Modified Modified Read (MMR)compression method from T.6 may be\n   selected\
    \ by setting the Compression field value to 4 and then setting\n   the first two\
    \ bits (and all unused bits) of the T6Options field to 0.\n   More information\
    \ to aid the implementor in making a compression\n   selection is contained in\
    \ Section 4.5.2.\n   Baseline TIFF also permits use of Compression=2 to specify\
    \ Modified\n   Huffman compression, but the data does not use EOLs. As a result,\n\
    \   TIFF-F uses Compression=3 instead of Compression=2 to specify\n   Modified\
    \ Huffman compression.\n"
- title: 4.4.5.  Example Use of Page-quality Fields
  contents:
  - "4.4.5.  Example Use of Page-quality Fields\n   Here are examples for writing\
    \ the CleanFaxData, BadFaxLines, and\n   ConsecutiveBadFaxLines fields:\n    \
    \ 1.  Facsimile hardware does not provide page quality\n         information:\
    \ MUST NOT write page-quality fields.\n     2.  Facsimile hardware provides page\
    \ quality information, but\n         reports no bad lines.  Write only BadFaxLines\
    \ = 0.\n     3.  Facsimile hardware provides page quality information, and\n \
    \        reports bad lines.  Write both BadFaxLines and\n         ConsecutiveBadFaxLines.\
    \  Also write CleanFaxData = 1 or 2 if\n         the hardware's regeneration capability\
    \ is known.\n     4.  Source image data stream is error-corrected or otherwise\n\
    \         guaranteed to be error-free such as for a computer generated\n     \
    \    file:  SHOULD NOT write page-quality fields.\n   TIFF Writers SHOULD only\
    \ generate these fields when the image has\n   been generated from a fax image\
    \ data stream where error correction,\n   e.g. Group 3 Error Correction Mode,\
    \ was not used.\n"
- title: 4.4.6. Practical Guidelines for Writing and Reading Multi-Page TIFF-F
  contents:
  - "4.4.6. Practical Guidelines for Writing and Reading Multi-Page TIFF-F\n   Files\n\
    \   Traditionally, historical TIFF-F has required readers and writers to\n   be\
    \ able to handle multi-page TIFF-F files.  Based on the experience\n   of various\
    \ TIFF-F implementors, it has been seen that the\n   implementation of TIFF-F\
    \ can be greatly simplified if certain\n   practical guidelines are followed when\
    \ writing multi-page TIFF-F\n   files.\n   The structure for a multi-page TIFF-F\
    \ file will include one IFD per\n   page of the document.  In this case, this\
    \ IFD will define the\n   attributes for a single page. A second simplifying guideline\
    \ is that\n   the writer of TIFF-F files SHOULD present IFDs in the same order\
    \ as\n   the actual sequence of pages.  (The pages are numbered within TIFF-F\n\
    \   beginning with page 0 as the first page and then ascending (i.e. 0,\n   1,\
    \ 2,...). However, any field values over 4 bytes will be stored\n   separately\
    \ from the IFD. TIFF-F readers SHOULD expect IFDs to be\n   presented in page\
    \ order, but be able to handle exceptions.\n   Per [TIFF], the exact placement\
    \ of image data is not specified.\n   However, the strip offsets for each strip\
    \ of image are defined from\n   within each IFD.   Where possible, another simplifying\
    \ guideline for\n   the writing of TIFF-F files is to specify that the image data\
    \ for\n   each page of a multi-page document SHOULD be contained within a\n  \
    \ single strip (i.e. one image strip per fax page). The use of a single\n   image\
    \ strip per page is very useful for applications such as store\n   and forward\
    \ messaging, where the file is usually prepared in advance\n   of the transmission,\
    \ but other assumptions may apply for the size of\n   the image strip for applications\
    \ which require the use of \"streaming\"\n   techniques (see section 4.4.7). \
    \ In the event a different image strip\n   size guideline has been used (e.g.\
    \ constant size for image strips\n   that may be less than the page size), this\
    \ will immediately be\n   evident from the values/offsets of the fields that are\
    \ related to\n   strips.\n   A third simplifying guideline is that each IFD SHOULD\
    \ be placed in\n   the TIFF-F file structure at a point which precedes the image\
    \ which\n   the IFD describes.\n   In addition, a fourth simplifying guideline\
    \ for TIFF-F writers and\n   readers is to place the actual image data in a physical\
    \ order within\n   the TIFF file structure which is consistent with the logical\
    \ page\n   order.  In practice, TIFF-F readers will need to use the strip\n  \
    \ offsets to find the exact physical location of the image data,\n   whether or\
    \ not it is presented in logical page order.\n   If the image data is stored in\
    \ multiple strips, then the strips\n   SHOULD occur in the file in the same order\
    \ that the data they contain\n   occurs in the facsimile transmission, starting\
    \ at the top of the\n   page.\n   TIFF-F writers MAY make a fifth simplifying\
    \ guideline, in which the\n   IFD, the value data and the image data to which\
    \ the IFD has offsets\n   precede the next image IFD. However, this guideline\
    \ has been relaxed\n   (writers MAY rather than SHOULD use it) compared to the\
    \ other\n   guidelines given here to reflect past practices for TIFF-F.\n   In\
    \ the case of the minimal mode, which is also the minimal subset of\n   Profile\
    \ S, the SHOULD's and MAY's of these guidelines become SHALL's\n   (see Section\
    \ 3.5).\n   So, a TIFF-F file which is structured using the guidelines of this\n\
    \   section will essentially be composed of a linked list of IFDs,\n   presented\
    \ in ascending page order, which in turn each point to a\n   single page of image\
    \ data (one strip per page), where the pages of\n   image data are also placed\
    \ in a logical page order within the TIFF- F\n   file structure.  (The pages of\
    \ image data may themselves be stored in\n   a contiguous manner, at the option\
    \ of the implementor).\n"
- title: 4.4.7.   Use of TIFF-F for Streaming Applications
  contents:
  - "4.4.7.   Use of TIFF-F for Streaming Applications\n   TIFF-F has historically\
    \ been used for handling fax image files in\n   applications such as store and\
    \ forward messaging where the entire\n   size of the file is known in advance.\
    \  While TIFF-F may also possibly\n   be used as a file format for cases such\
    \ as streaming applications,\n   assumptions may be required that differ from\
    \ those provided in this\n   section (e.g., the entire size and number of pages\
    \ within the image\n   are not known in advance).  As a result, a definition for\
    \ the\n   streaming application of TIFF-F is beyond the scope of this document.\n"
- title: 4.5. Implementation Warnings
  contents:
  - '4.5. Implementation Warnings

    '
- title: 4.5.1  Uncompressed data
  contents:
  - "4.5.1  Uncompressed data\n   TIFF-F requires the ability to read and write at\
    \ least one-\n   dimensional T.4 Huffman (\"compressed\") data.  Uncompressed\
    \ data is\n   not allowed. This means that the \"Uncompressed\" bit in T4Options\
    \ or\n   T6Options must be set to 0.\n"
- title: 4.5.2. Encoding and Resolution
  contents:
  - "4.5.2. Encoding and Resolution\n   Since two-dimensional encoding is not required\
    \ for Group 3\n   compatibility, some historic TIFF-F readers have not been able\
    \ to\n   read such files.  The minimum subset of TIFF-F REQUIRES support for\n\
    \   one dimensional (Modified Huffman) files, so this choice maximizes\n   portability.\
    \  However, implementors seeking greater efficiency SHOULD\n   use T.6 MMR compression\
    \ when writing TIFF-F files.  Some TIFF-F\n   readers will also support two-dimensional\
    \ Modified READ files.\n   Implementors that wish to have the maximum flexibility\
    \ in reading\n   TIFF-F files should support all three of these compression methods\n\
    \   (MH, MR and MMR).\n   For the case of resolution, almost all facsimile products\
    \ support\n   both standard (98 dpi) vertical resolution  and \"fine\" (196 dpi)\n\
    \   resolution. Therefore, fine-resolution files are quite portable in\n   the\
    \ real world.\n   In 1993, the ITU-T added support for higher resolutions in the\
    \ T.30\n   recommendation including 200 x 200, 300 x 300, 400 x 400 in dots per\n\
    \   inch based units.  At the same time, support was added for metric\n   dimensions\
    \ which are equivalent to the following inch based\n   resolutions: 391v x 204h\
    \ and 391v x 408h.  Therefore, the full set of\n   inch-based equivalents of the\
    \ new resolutions are supported in the\n   TIFF-F writer, since they may appear\
    \ in some image data streams\n   received from Group 3 facsimile devices.  However,\
    \ many facsimile\n   terminals and older versions of  TIFF-F readers are likely\
    \ to not\n   support the use of these higher resolutions.\n   Per [T.4], it is\
    \ permissible for applications to treat the following\n   XResolution values as\
    \ being equivalent: <204,200> and <400,408>.  In\n   a similar respect, the following\
    \ YResolution values may also be\n   treated as being equivalent: <98, 100>, <196,\
    \ 200>, and <391, 400>.\n   These equivalencies were allowed by [T.4] to permit\
    \ conversions\n   between inch and metric based facsimile terminals.\n   In a\
    \ similar respect, the optional support of metric based\n   resolutions in the\
    \ TIFF-F reader (i.e. 77 x 38.5 cm) is included for\n   completeness, since they\
    \ are used in some legacy TIFF-F applications,\n   but this use is not recommended\
    \ for the creation of TIFF-F files by a\n   writer.\n"
- title: 4.5.3. EOL byte-aligned
  contents:
  - "4.5.3. EOL byte-aligned\n   The historical convention for TIFF-F has been that\
    \ all EOLs in\n   Modified Huffman or Modified READ data must be byte-aligned.\
    \ However,\n   Baseline TIFF has permitted use of non-byte-aligned EOLs by default,\n\
    \   so that a large percentage of TIFF-F reader implementations support\n   both\
    \ conventions. Therefore, the minimum subset of TIFF-F, or Profile\n   S, as defined\
    \ in Section 3 includes support for both byte-aligned and\n   non- byte-aligned\
    \ EOLs; see Section 3.2.2.\n   An EOL is said to be byte-aligned when Fill bits\
    \ have been added as\n   necessary before EOL codes such that EOL always ends\
    \ on a byte\n   boundary, thus ensuring an  EOL-sequence of a one byte preceded\
    \ by a\n   zero nibble: xxxx0000 00000001.\n   Modified Huffman encoding encodes\
    \ bits, not bytes. This means that\n   the end-of-line token may end in the middle\
    \ of a byte. In byte\n   alignment, extra zero bits (Fill) are added so that the\
    \ first bit of\n   data following an EOL begins on a byte boundary. In effect,\
    \ byte\n   alignment relieves application software of the burden of bit-\n   shifting\
    \ every byte while parsing scan lines for line-oriented image\n   manipulation\
    \ (such as writing a TIFF file).\n   For Modified READ encoding, each line is\
    \ terminated by an EOL and a\n   one bit tag bit.  Per [T.4], the value of the\
    \ tag bit is 0 if the\n   next line contains two dimensional data and 1 if the\
    \ next line is a\n   reference line.   To maintain byte alignment, fill bits are\
    \ added\n   before the EOL/tag bit sequence, so that the first bit of data\n \
    \  following an MR tag bit begins on a byte boundary.\n"
- title: 4.5.4. EOL
  contents:
  - "4.5.4. EOL\n   As illustrated in FIGURE 1/T.4 in [T.4], facsimile documents encoded\n\
    \   with Modified Huffman begin with an EOL, which in TIFF-F may be byte-\n  \
    \ aligned. The last line of the image is not terminated by an EOL.  In\n   a similar\
    \ respect, images encoded with Modified READ two-dimensional\n   encoding begin\
    \ with an EOL, followed by a tag bit.\n"
- title: 4.5.5. RTC Exclusion
  contents:
  - "4.5.5. RTC Exclusion\n   Aside from EOLs, TIFF-F files have historically only\
    \ contained image\n   data. This means that applications which wish to maintain\
    \ strict\n   conformance with the rules in [TIFF] and compatibility with\n   historical\
    \ TIFF-F, SHOULD NOT include the Return To Control sequence\n   (RTC) (consisting\
    \ of 6 consecutive EOLs) when writing TIFF-F files.\n   However, applications\
    \ which need to support \"transparency\" of [T.4]\n   image data MAY include RTCs\
    \ if the flag settings of the T4Options\n   field are set for non-byte aligned\
    \ MH or MR image data.  Implementors\n   of TIFF readers should also be aware\
    \ that there are some existing\n   TIFF-F implementations which include the RTC\
    \ sequence in MH/MR image\n   data. Therefore, TIFF-F readers MUST be able to\
    \ process files which\n   do not include RTCs and SHOULD be able to process files\
    \ which do\n   include RTCs.\n"
- title: 4.5.6 Use of EOFB for T.6 Compressed Images
  contents:
  - "4.5.6 Use of EOFB for T.6 Compressed Images\n   TIFF-F pages which are encoded\
    \ with the T.6 Modified Modified READ\n   compression method MUST include an \"\
    end-of-facsimile-block\" (EOFB)\n   code at the end of each coded strip. Per [TIFF],\
    \ the EOFB code is\n   followed by pad bits as needed to align on a byte boundary.\
    \ TIFF\n   readers SHOULD ignore any bits other than pad bits beyond the EOFB.\n"
- title: 4.6. Example Use of TIFF-F
  contents:
  - "4.6. Example Use of TIFF-F\n   The Profile F of TIFF (i.e. TIFF-F content) is\
    \ a secondary component\n   of the VPIM Message, as defined in [VPIM2].  Voice\
    \ messaging systems\n   can often handle fax store-and-forward capabilities in\
    \ addition to\n   tradi- tional voice message store-and-forward functions.  As\
    \ a\n   result, TIFF-F fax messages can optionally be sent between compliant\n\
    \   VPIM systems, and may be rejected if the recipient system cannot deal\n  \
    \ with fax.\n   Refer to the VPIM Specification for proper usage of this content.\n"
- title: 4.7. Extended Black-and-white Fax Mode Summary
  contents:
  - "4.7. Extended Black-and-white Fax Mode Summary\n   Recommended fields are shown\
    \ with an asterisk *.\n   Required fields or values are shown with a double asterisk\
    \ **. If the\n   double asterisk is on the field name, then all the listed values\
    \ are\n   required of implementations; if the double asterisks are in the\n  \
    \ Values column, then only the values suffixed with a double asterisk\n   are\
    \ required of implementations.\n       +---------------------------+--------------------------------+\n\
    \       | Baseline Fields           |  Values                        |\n     \
    \  +---------------------------+--------------------------------+\n       | BitsPerSample\
    \             | 1**                            |\n       +---------------------------+--------------------------------+\n\
    \       | Compression               | 3**: 1D Modified Huffman and   |\n     \
    \  |                           |      2D Modified Read coding   |\n       |  \
    \                         | 4: 2D Modified Modified Read   |\n       |       \
    \                    |    coding                      |\n       +---------------------------+--------------------------------+\n\
    \       | DateTime*                 | {ASCII}: date/time in 24-hour  |\n     \
    \  |                           | format \"YYYY:MM:DD HH:MM:SS\"   |\n       +---------------------------+--------------------------------+\n\
    \       | FillOrder**               | 1: most significant bit first  |\n     \
    \  |                           | 2: least significant bit first |\n       +------------------------------------------------------------+\n\
    \       +------------------------------------------------------------+\n     \
    \  | ImageDescription*         | {ASCII}: A string describing   |\n       |  \
    \                         | the contents of the image.     |\n       +---------------------------+--------------------------------+\n\
    \       | ImageWidth                | 1728**, 2048, 2432, 2592,      |\n     \
    \  |                           | 3072, 3456, 3648, 4096, 4864   |\n       +---------------------------+--------------------------------+\n\
    \       | ImageLength**             | n: total number of scanlines   |\n     \
    \  |                           | in image                       |\n       +---------------------------+--------------------------------+\n\
    \       | NewSubFileType            | 2**: Bit 1 identifies single   |\n     \
    \  |                           | page of a multi-page document  |\n       +---------------------------+--------------------------------+\n\
    \       | Orientation               | 1**-8, Default 1               |\n     \
    \  +---------------------------+--------------------------------+\n       | PhotometricInterpretation\
    \ | 0: pixel value 1 means black   |\n       |  **                       | 1:\
    \ pixel value 1 means white   |\n       +---------------------------+--------------------------------+\n\
    \       | ResolutionUnit**          | 2: inch                        |\n     \
    \  |                           | 3: centimeter                  |\n       +---------------------------+--------------------------------+\n\
    \       | RowsPerStrip**            | n: number of scanlines per     |\n     \
    \  |                           | TIFF strip                     |\n       +---------------------------+--------------------------------+\n\
    \       | SamplesPerPixel           | 1**                            |\n     \
    \  +---------------------------+--------------------------------+\n       | Software*\
    \                 | {ASCII}: name & release        |\n       |               \
    \            | number of creator software     |\n       +---------------------------+--------------------------------+\n\
    \       | StripByteCounts**         | <n>: number or bytes in TIFF   |\n     \
    \  |                           | strip                          |\n       +---------------------------+--------------------------------+\n\
    \       | StripOffsets**            | <n>: offset from beginning of  |\n     \
    \  |                           | file to each TIFF strip        |\n       +---------------------------+--------------------------------+\n\
    \       | XResolution               | 200, 204**, 300, 400, 408      |\n     \
    \  |                           | (written in pixels/inch)       |\n       +---------------------------+--------------------------------+\n\
    \       | YResolution               | 98**, 196**, 100,              |\n     \
    \  |                           | 200, 300, 391, 400             |\n       |  \
    \                         | (written in pixels/inch)       |\n       +---------------------------+--------------------------------+\n\
    \       | Extension Fields                                           |\n     \
    \  +---------------------------+--------------------------------+\n       +---------------------------+--------------------------------+\n\
    \       | T4Options                 | 0**: required if Compression   |\n     \
    \  |                           | is Modified Huffman, EOLs are  |\n       |  \
    \                         | not byte aligned               |\n       |       \
    \                    | 1: required if Compression is  |\n       |            \
    \               | 2D Modified Read, EOLs are     |\n       |                 \
    \          | not byte aligned               |\n       |                      \
    \     | 4**: required if Compression   |\n       |                           |\
    \ is Modified Huffman, EOLs are  |\n       |                           | byte\
    \ aligned                   |\n       +---------------------------+--------------------------------+\n\
    \       | T4Options (continued)     | 5: required if Compression     |\n     \
    \  |                           | is 2D Modified Read, EOLs are  |\n       |  \
    \                         | byte aligned                   |\n       +---------------------------+--------------------------------+\n\
    \       | T6Options                 | 0: required if Compression is  |\n     \
    \  |                           | 2D Modified Modified Read      |\n       +---------------------------+--------------------------------+\n\
    \       | DocumentName*             | {ASCII}: name of scanned       |\n     \
    \  |                           | document                       |\n       +---------------------------+--------------------------------+\n\
    \       | PageNumber**              | n,m: page number followed by   |\n     \
    \  |                           | total page count               |\n       +---------------------------+--------------------------------+\n\
    \       | New Fields                                                 |\n     \
    \  +---------------------------+--------------------------------+\n       | BadFaxLines*\
    \              | number of \"bad\" scanlines      |\n       |                \
    \           | encountered during reception   |\n       +---------------------------+--------------------------------+\n\
    \       | CleanFaxData*             | 0: no \"bad\" lines              |\n   \
    \    |                           | 1: \"bad\" lines exist, but were |\n      \
    \ |                           | regenerated by receiver        |\n       |   \
    \                        | 2: \"bad\" lines exist, but have |\n       |      \
    \                     | not been regenerated           |\n       +---------------------------+--------------------------------+\n\
    \       | ConsecutiveBadFaxLines*   | Max number of consecutive      |\n     \
    \  |                           | \"bad\" lines received           |\n       +---------------------------+--------------------------------+\n"
- title: 5. Lossless JBIG Black-and-White Fax Mode
  contents:
  - "5. Lossless JBIG Black-and-White Fax Mode\n   This section defines the lossless\
    \ JBIG black-and-white mode or\n   Profile J of TIFF for facsimile. Implementations\
    \ of this profile are\n   required to also implement Profile S.\n   The previous\
    \ section described the extended interchange set of TIFF\n   fields for black-and-white\
    \ fax, which provided support for the MH, MR\n   and MMR compression of black-and-white\
    \ images. This section adds a\n   mode with JBIG compression capability.\n"
- title: 5.1. Overview
  contents:
  - "5.1. Overview\n   This section describes a black-and-white mode that uses JBIG\n\
    \   compression. The ITU-T has approved the single-progression sequential\n  \
    \ mode of JBIG [T.82] for Group 3 facsimile. JBIG coding offers\n   improved compression\
    \ for halftoned originals. JBIG compression is\n   used in accordance with the\
    \ application rules given in ITU-T Rec.\n   T.85 [T.85].\n   This mode is essentially\
    \ the extended black-and-white mode with JBIG\n   compression used instead of\
    \ MH, MR or MMR.\n"
- title: 5.2. Required TIFF Fields
  contents:
  - "5.2. Required TIFF Fields\n   This section lists the required fields and the\
    \ values they must have\n   to be ITU-compatible. Besides the fields listed in\
    \ Section 2.2.1, the\n   extended black-and-white fax mode requires the following\
    \ fields.\n"
- title: 5.2.1. Baseline fields
  contents:
  - "5.2.1. Baseline fields\n   The TIFF fields that SHALL be used in this mode are\
    \ the same as those\n   described in Section 4.2.1 for the extended black-and-white\
    \ mode,\n   with two exceptions: the following text replaces the text in Section\n\
    \   4.2.1 for the Compression and FillOrder fields.\n"
- title: Compression(259) = 9.                                              SHORT
  contents:
  - "Compression(259) = 9.                                              SHORT\n  \
    \  RequiredByTIFFBaseline\n    9 = ITU-T Rec. T.82 coding, applying ITU-T Rec.\
    \ T.85 (JBIG). This is\n    a TIFF extension value.\n    Default = 1 (and is not\
    \ applicable; field must be specified).\n"
- title: FillOrder(266) = 2.                                            SHORT
  contents:
  - "FillOrder(266) = 2.                                            SHORT\n    RequiredByTIFFBaseline\n\
    \    2 = Pixels are arranged within a byte such that pixels with lower\n    column\
    \ values are stored in the lower-order bits of the bytes, i.e.,\n    least significant\
    \ bit first (LSB).\n   NOTE: The JBIG coding of black-and-white image data in\
    \ Profile J\n   follows ITU-T Rec. T.85 [T.85], which specifies LSB first ordering\n\
    \   within a byte. Note that Baseline TIFF readers are only required to\n   support\
    \ MSB first ordering or FillOrder = 1.\n"
- title: 5.2.2. Extension fields
  contents:
  - "5.2.2. Extension fields\n   Same fields as those in Section 2.2.1.\n"
- title: 5.2.3. New fields
  contents:
  - "5.2.3. New fields\n   None.\n"
- title: 5.3. Recommended TIFF Fields
  contents:
  - "5.3. Recommended TIFF Fields\n   See Section 2.2.3 and 2.2.4.\n"
- title: 5.4.  Lossless JBIG Black-and-white Fax Mode Summary
  contents:
  - "5.4.  Lossless JBIG Black-and-white Fax Mode Summary\n   Recommended fields are\
    \ shown with an asterisk *.\n   Required fields or values are shown with a double\
    \ asterisk **. If the\n   double asterisk is on the field name, then all the listed\
    \ values are\n   required of implementations; if the double asterisks are in the\n\
    \   Values column, then only the values suffixed with a double asterisk\n   are\
    \ required of implementations.\n       +---------------------------+--------------------------------+\n\
    \       | Baseline Fields           |  Values                        |\n     \
    \  +---------------------------+--------------------------------+\n       | BitsPerSample\
    \             | 1**                            |\n       +---------------------------+--------------------------------+\n\
    \       | Compression               | 9**: JBIG coding               |\n     \
    \  +---------------------------+--------------------------------+\n       | DateTime*\
    \                 | {ASCII}: date/time in 24-hour  |\n       |               \
    \            | format \"YYYY:MM:DD HH:MM:SS\"   |\n       +---------------------------+--------------------------------+\n\
    \       | FillOrder**               | 1: most significant bit first  |\n     \
    \  |                           | 2: least significant bit first |\n       +---------------------------+--------------------------------+\n\
    \       | ImageDescription*         | {ASCII}: A string describing   |\n     \
    \  |                           | the contents of the image.     |\n       +---------------------------+--------------------------------+\n\
    \       | ImageWidth                | 1728**, 2048, 2432, 2592,      |\n     \
    \  |                           | 3072, 3456, 3648, 4096, 4864   |\n       +---------------------------+--------------------------------+\n\
    \       | ImageLength**             | n: total number of scanlines   |\n     \
    \  |                           | in image                       |\n       +---------------------------+--------------------------------+\n\
    \       | NewSubFileType**          | 2: Bit 1 identifies single     |\n     \
    \  |                           | page of a multi-page document  |\n       +---------------------------+--------------------------------+\n\
    \       | Orientation               | 1**-8, Default 1               |\n     \
    \  +------------------------------------------------------------+\n       +---------------------------+--------------------------------+\n\
    \       | PhotometricInterpretation | 0: pixel value 1 means black   |\n     \
    \  |  **                       | 1: pixel value 1 means white   |\n       +---------------------------+--------------------------------+\n\
    \       | ResolutionUnit**          | 2: inch                        |\n     \
    \  |                           | 3: centimeter                  |\n       +---------------------------+--------------------------------+\n\
    \       | RowsPerStrip**            | n: number of scanlines per     |\n     \
    \  |                           | TIFF strip                     |\n       +---------------------------+--------------------------------+\n\
    \       | SamplesPerPixel**         | 1                              |\n     \
    \  +---------------------------+--------------------------------+\n       | Software*\
    \                 | {ASCII}: name & release        |\n       |               \
    \            | number of creator software     |\n       +---------------------------+--------------------------------+\n\
    \       | StripByteCounts**         | <n>: number of bytes in TIFF   |\n     \
    \  |                           | strip                          |\n       +---------------------------+--------------------------------+\n\
    \       | StripOffsets**            | <n>: offset from beginning of  |\n     \
    \  |                           | file to each TIFF strip        |\n       +---------------------------+--------------------------------+\n\
    \       | XResolution               | 200, 204**, 300, 400, 408      |\n     \
    \  |                           | (written in pixels/inch)       |\n       +---------------------------+--------------------------------+\n\
    \       | YResolution               | 98**, 196**, 100,              |\n     \
    \  |                           | 200, 300, 391, 400             |\n       |  \
    \                         | (written in pixels/inch)       |\n       +---------------------------+--------------------------------+\n\
    \       | Extension Fields                                           |\n     \
    \  +---------------------------+--------------------------------+\n       | DocumentName*\
    \             | {ASCII}: name of document      |\n       |                   \
    \        |  scanned                       |\n       +---------------------------+--------------------------------+\n\
    \       | PageNumber**              | n,m: page number followed by   |\n     \
    \  |                           | total page count               |\n       +---------------------------+--------------------------------+\n\
    \       | New Fields                                                 |\n     \
    \  +---------------------------+--------------------------------+\n       | GlobalParametersIFD*\
    \      | IFD: global parameters IFD     |\n       +---------------------------+--------------------------------+\n\
    \       | ProfileType*              | n: type of data stored in file |\n     \
    \  +---------------------------+--------------------------------+\n       | FaxProfile*\
    \               | n: ITU-compatible fax mode     |\n       +---------------------------+--------------------------------+\n\
    \       | CodingMethods*            | n: compression algorithms used |\n     \
    \  |                           | in file                        |\n       +---------------------------+--------------------------------+\n"
- title: 6. Base Color Fax Mode
  contents:
  - '6. Base Color Fax Mode

    '
- title: 6.1. Overview
  contents:
  - "6.1. Overview\n   This section defines the lossy color mode or Profile C of TIFF\
    \ for\n   facsimile. Implementations of this profile are required to also\n  \
    \ implement Profile S.\n   This is the base mode for color and grayscale facsimile,\
    \ which means\n   that all applications that support color fax must support this\
    \ mode.\n   The basic approach is the lossy JPEG compression [T.4, Annex E; T.81]\n\
    \   of L*a*b* color data [T.42]. Grayscale applications use the L*\n   lightness\
    \ component; color applications use the L*, a* and b*\n   components.\n   This\
    \ mode uses a new PhotometricInterpretation field value to\n   describe the L*a*b*\
    \ encoding specified in [T.42]. This encoding\n   differs in two ways from the\
    \ other L*a*b* encodings used in TIFF\n   [TIFF, TTN1]: it specifies a different\
    \ default range for the a* and\n   b* components, based on a comprehensive evaluation\
    \ of existing\n   hardcopy output, and it optionally allows selectable range for\
    \ the\n   L*, a* and b* components.\n"
- title: 6.2. Required TIFF Fields
  contents:
  - "6.2. Required TIFF Fields\n   This section lists the required fields, in addition\
    \ to those given in\n   Section 2.2.1, and the values they must support to be\
    \ compatible with\n   ITU-T Rec. T.42 and Annex E in ITU-T Rec. T.4.\n"
- title: 6.2.1. Baseline Fields
  contents:
  - '6.2.1. Baseline Fields

    '
- title: ImageWidth(256).                                           SHORT or LONG
  contents:
  - "ImageWidth(256).                                           SHORT or LONG\n  \
    \  This mode supports the following fixed page widths: 864, 1024, 1216,\n    1728,\
    \ 2048, 2432, 2592, 3072, 3456, 3648, 4096, 4864.\n"
- title: NewSubFileType(254) = (Bit 1=1).                                    LONG
  contents:
  - "NewSubFileType(254) = (Bit 1=1).                                    LONG\n  \
    \  RequiredByTIFFforFAX\n    Bit 1 is 1 if the image is a single page of a multi-page\
    \ document.\n    Default = 0 (no subfile bits on, so may not be omitted for fax)\n"
- title: BitsPerSample(258) = 8, 12.                                        SHORT
  contents:
  - "BitsPerSample(258) = 8, 12.                                        SHORT\n  \
    \  Count = SamplesPerPixel\n    The base color fax mode requires 8 bits per sample,\
    \ with 12 as an\n    option. 12 bits per sample is not baseline TIFF.\n"
- title: Compression(259) = 7.                                              SHORT
  contents:
  - "Compression(259) = 7.                                              SHORT\n  \
    \  Base color fax mode uses Baseline JPEG compression. Value 7\n    represents\
    \ JPEG compression as specified in [TTN2].\n"
- title: FillOrder(266) = 1 , 2.                                            SHORT
  contents:
  - "FillOrder(266) = 1 , 2.                                            SHORT\n  \
    \  RequiredByTIFFBaseline\n    Profile C readers must be able to read data in\
    \ both bit orders,\n    but the vast majority of facsimile products store data\
    \ LSB\n    first, exactly as it appears on the telephone line.\n             \
    \ 1 = Most Significant Bit first.\n              2 = Least Significant Bit first\n"
- title: PhotometricInterpretation(262) = 10.                               SHORT
  contents:
  - "PhotometricInterpretation(262) = 10.                               SHORT\n  \
    \  Base color fax mode requires pixel values to be stored using the CIE\n    L*a*b*\
    \ encoding defined in ITU-T Rec. T.42. This encoding is\n    indicated by the\
    \ PhotometricInterpretation value 10, referred to as\n    ITULAB. With this encoding,\
    \ the minimum sample value is  mapped to 0\n    and the maximum sample value is\
    \ mapped to (2^n - 1), i.e. the\n    maximum value, where n is the BitsPerSample\
    \ value. The conversion\n    from unsigned ITULAB-encoded samples values to signed\
    \ CIE L*a*b*\n    values is determined by the Decode field; see Sec. 6.2.3\n \
    \  NOTE: PhotometricInterpretation values 8 and 9 specify encodings for\n   use\
    \ with 8-bit-per-sample CIE L*a*b* [TIFF] and ICC L*a*b* [TTN1]\n   data, but\
    \ they are fixed encodings, which use different minimum and\n   maximum samples\
    \ than the T.42 default encoding. As currently defined,\n   they are not able\
    \ to represent fax-encoded L*a*b* data.\n"
- title: ResolutionUnit(296) = 2, 3.                                        SHORT
  contents:
  - "ResolutionUnit(296) = 2, 3.                                        SHORT\n  \
    \  The unit of measure for resolution. 2 = inch, 3 = centimeter;\n    Default\
    \ = 2 (field may be omitted if this is the value)\n"
- title: SamplesPerPixel(277) = 1, 3.                                       SHORT
  contents:
  - "SamplesPerPixel(277) = 1, 3.                                       SHORT\n  \
    \  1: L* component only, required in base color mode\n    3: L*, a*, b* components\n\
    \    Encoded according to PhotometricInterpretation field\n"
- title: XResolution(282) = 100, 200, 300, 400.                          RATIONAL
  contents:
  - 'XResolution(282) = 100, 200, 300, 400.                          RATIONAL

    '
- title: YResolution(283) = 100, 200, 300, 400.                          RATIONAL
  contents:
  - "YResolution(283) = 100, 200, 300, 400.                          RATIONAL\n  \
    \  The resolution of the image is expressed in pixels per resolution\n    unit.\
    \ In pixels per inch, allowed XResolution values are: 100, 200,\n    300, and\
    \ 400. The base color fax mode requires the pixels to be\n    square, hence YResolution\
    \ must equal XResolution. Base resolution is\n    200 pixels per inch and SHALL\
    \ be supported by all implementations of\n    this mode. See Section 2.2.2 for\
    \ inch-metric equivalency.\n"
- title: 'NOTE: Not all combinations of XResolution, YResolution and ImageWidth'
  contents:
  - 'NOTE: Not all combinations of XResolution, YResolution and ImageWidth

    '
- title: are legal. The following table gives the legal combinations for inch-
  contents:
  - 'are legal. The following table gives the legal combinations for inch-

    '
- title: based resolutions and the corresponding paper sizes [T.30].
  contents:
  - "based resolutions and the corresponding paper sizes [T.30].\n    +--------------------------------+---------------------------+\n\
    \    |   XResolution x YResolution    |         ImageWidth        |\n    +--------------------------------+---------------------------+\n\
    \    |           100 x 100            |   864   |  1024  |  1216  |\n    +--------------------------------+---------------------------+\n\
    \    |           200 x 200            |  1728   |  2048  |  2432  |\n    +--------------------------------+---------------------------+\n\
    \    |           300 x 300            |  2592   |  3072  |  3648  |\n    +--------------------------------+---------------------------+\n\
    \    |           400 x 400            |  3456   |  4096  |  4864  |\n    +--------------------------------+---------------------------+\n\
    \                                     |Letter,A4|   B4   |   A3   |\n        \
    \                             |  Legal  |        |        |\n                \
    \                     +---------------------------+\n                        \
    \             |         Paper Size        |\n                                \
    \     +---------------------------+\n"
- title: 6.2.2 Extension Fields
  contents:
  - '6.2.2 Extension Fields

    '
- title: The JPEG compression standard allows for the a*b* chroma components of
  contents:
  - 'The JPEG compression standard allows for the a*b* chroma components of

    '
- title: an image to be subsampled relative to the L* lightness component. The
  contents:
  - 'an image to be subsampled relative to the L* lightness component. The

    '
- title: extension fields ChromaSubSampling and ChromaPositioning define the
  contents:
  - 'extension fields ChromaSubSampling and ChromaPositioning define the

    '
- title: subsampling. They are the same as YCbCrSubSampling and YCbCrPositioning
  contents:
  - 'subsampling. They are the same as YCbCrSubSampling and YCbCrPositioning

    '
- title: in [TIFF], but have been renamed to reflect their applicability to other
  contents:
  - 'in [TIFF], but have been renamed to reflect their applicability to other

    '
- title: color spaces.
  contents:
  - 'color spaces.

    '
- title: ChromaSubSampling(530).                                            SHORT
  contents:
  - "ChromaSubSampling(530).                                            SHORT\n  \
    \  Count = 2\n    Specifies the subsampling factors for the chroma components\
    \ of a\n    L*a*b* image. The two subfields of this field, ChromaSubsampleHoriz\n\
    \    and ChromaSubsampleVert, specify the horizontal and vertical\n    subsampling\
    \ factors respectively.\n    SHORT 0: ChromaSubsampleHoriz = 1, 2.\n    1: equal\
    \ numbers of lightness and chroma samples horizontally,\n    2: twice as many\
    \ lightness samples as chroma samples horizontally,\n    SHORT 1: ChromaSubsampleVert\
    \ = 1, 2.\n    1: equal numbers of lightness and chroma samples vertically,\n\
    \    2: twice as many lightness samples as chroma samples vertically,\n    The\
    \ default value for ChromaSubSampling is (2,2), which is the\n    default for\
    \ chroma subsampling in color fax [T.4, Annex E]. No\n    chroma subsampling,\
    \ i.e. ChromaSubSampling = (1,1), is an option\n    for color fax\n"
- title: ChromaPositioning(531) = 1.                                        SHORT
  contents:
  - "ChromaPositioning(531) = 1.                                        SHORT\n  \
    \  Specifies the spatial positioning of chroma components relative to\n    the\
    \ lightness component.\n    1: centered,\n    A value of 1 means chrominance samples\
    \ are spatially offset and\n    centered with respect to luminance samples. See\
    \ the current TIFF\n    specification under YcbCr positioning for further information.\n\
    \    Default = 1, which is what ITU-T T.4, Annex E specifies.\n"
- title: 6.2.3. New Fields
  contents:
  - '6.2.3. New Fields

    '
- title: Decode(433).                                                   SRATIONAL
  contents:
  - "Decode(433).                                                   SRATIONAL\n  \
    \  Count = 2 * SamplesPerPixel\n    Describes how to map image sample values into\
    \ the range of values\n    appropriate for the current color space. In general,\
    \ the values are\n    taken in pairs and specify the minimum and maximum output\
    \ value for\n    each color component. For the base color fax mode, Decode has\
    \ a\n    count of 6 values and maps the unsigned ITULAB-encoded sample values\n\
    \    (Lsample, asample, bsample) to signed L*a*b* values, as follows:.\n     \
    \   L* = Decode[0] + Lsample x (Decode[1]-Decode[0])/(2^n -1)\n        a* = Decode[2]\
    \ + asample x (Decode[3]-Decode[2])/(2^n -1)\n        b* = Decode[4] + bsample\
    \ x (Decode[5]-Decode[4])/(2^n -1)\n    where Decode[0], Decode[2] and Decode[4]\
    \ are the minimum values for\n    L*, a* and b*; Decode[1], Decode[3] and Decode[5]\
    \ are the maximum\n    values for L*, a* and b*; and n is the BitsPerSample, either\
    \ 8 or\n    12. For example, when n=8, L*=Decode[0] when Lsample=0 and\n    L*=Decode[1]\
    \ when Lsample=255.\n    ITU-T Rec. T.42 specifies the ITULAB encoding in terms\
    \ of a range\n    and offset for each component, which are related to the minimum\
    \ and\n    maximum values as follows:\n        minimum = - (range x offset) /\
    \ 2^n - 1\n        maximum = minimum + range\n    The Decode field default values\
    \ depend on the color space. For the\n    ITULAB color space encoding, the default\
    \ values correspond to the\n    base range and offset, as specified in ITU-T Rec.\
    \ T.42 [T.42]. The\n    following table gives the base range and offset values\
    \ for\n    BitsPerSample=8 and 12, and the corresponding default minimum and\n\
    \    maximum default values for the Decode field, calculated using the\n    equations\
    \ above when PhotometricInterpetation=10.\n                       +-----------------------------------------------+\n\
    \                       | ITU-T Rec. T.42  |           Decode           |\n +---------+-----------|\
    \   base values    |       default values       |\n | BitsPer + Component +------------------+----------------------------+\n\
    \ | -Sample |           |  Range | Offset  |      Min     |     Max     |\n +---------+-----------+--------+---------+--------------+-------------+\n\
    \ |    8    |    L*     |   100  |    0    |       0      |     100     |\n |\
    \         +-----------+--------+---------+--------------+-------------+\n |  \
    \       |    a*     |   170  |   128   |  -21760/255  |  21590/255  |\n |    \
    \     +-----------+--------+---------+--------------+-------------+\n |      \
    \   |    b*     |   200  |    96   |  -19200/255  |  31800/255  |\n +---------+-----------+--------+---------+--------------+-------------+\n\
    \ |   12    |    L*     |   100  |    0    |       0      |     100     |\n |\
    \         +-----------+--------+---------+--------------+-------------+\n |  \
    \       |    a*     |   170  |  2048   | -348160/4095 | 347990/4095 |\n |    \
    \     +-----------+--------+---------+--------------+-------------+\n |      \
    \   |    b*     |   200  |  1536   | -307200/4095 | 511800/4095 |\n +---------+-----------+--------+---------+--------------+-------------+\n\
    \   For example, when PhotometricInterpretation=10 and BitsPerSample=8,\n   the\
    \ default value for Decode is (0, 100, -21760/255, 21590/255,\n   -19200/255,\
    \ 31800/255).\n"
- title: 6.3. Recommended TIFF Fields
  contents:
  - "6.3. Recommended TIFF Fields\n   See Sections 2.2.3. and 2.2.4.\n"
- title: 6.4 Base Color Fax Mode Summary
  contents:
  - "6.4 Base Color Fax Mode Summary\n   Recommended fields are shown with an asterisk\
    \ *\n   Required fields or values are shown with a double asterisk **. If the\n\
    \   double asterisk is on the field name, then all the listed values are\n   required\
    \ of implementations; if the double asterisks are in the\n   Values column, then\
    \ only the values suffixed with a double asterisk\n   are required of implementations.\n\
    \       +---------------------------+--------------------------------+\n     \
    \  | Baseline Fields           | Values                         |\n       +---------------------------+--------------------------------+\n\
    \       | BitsPerSample             | 8**: 8 bits per color sample   |\n     \
    \  |                           | 12: optional 12 bits/sample    |\n       +---------------------------+--------------------------------+\n\
    \       | Compression**             | 7: JPEG                        |\n     \
    \  +---------------------------+--------------------------------+\n       | DateTime*\
    \                 | {ASCII}: date/time in 24-hour  |\n       |               \
    \            | format \"YYYY:MM:DD HH:MM:SS\"   |\n       +---------------------------+--------------------------------+\n\
    \       +------------------------------------------------------------+\n     \
    \  | FillOrder**               | 1: most significant bit first  |\n       |  \
    \                         | 2: least significant bit first |\n       +---------------------------+--------------------------------+\n\
    \       | ImageDescription*         | {ASCII}: A string describing   |\n     \
    \  |                           | the contents of the image.     |\n       +---------------------------+--------------------------------+\n\
    \       | ImageWidth                | 864, 1024, 1216, 1728**, 2048  |\n     \
    \  |                           | 2432, 2592, 3072, 3456, 3648   |\n       |  \
    \                         | 4096, 4864                     |\n       +---------------------------+--------------------------------+\n\
    \       | ImageLength**             | n: total number of scanlines   |\n     \
    \  |                           | in image                       |\n       +---------------------------+--------------------------------+\n\
    \       | NewSubFileType**          | 2: Bit 1 identifies single page|\n     \
    \  |                           | of a multi-page document       |\n       +---------------------------+--------------------------------+\n\
    \       | Orientation               | 1**-8, Default 1               |\n     \
    \  +---------------------------+--------------------------------+\n       | PhotometricInterpretation\
    \ | 10**: ITULAB                   |\n       +---------------------------+--------------------------------+\n\
    \       | ResolutionUnit**          | 2: inch                        |\n     \
    \  |                           | 3: centimeter                  |\n       +---------------------------+--------------------------------+\n\
    \       | RowsPerStrip**            | n: number of scanlines per     |\n     \
    \  |                           | TIFF strip                     |\n       +---------------------------+--------------------------------+\n\
    \       | SamplesPerPixel           | 1**: L* (lightness)            |\n     \
    \  |                           | 3: LAB                         |\n       +---------------------------+--------------------------------+\n\
    \       | Software*                 | {ASCII}: name & release number |\n     \
    \  |                           | of creator software            |\n       +---------------------------+--------------------------------+\n\
    \       | StripByteCounts**         | <n>: number or bytes in        |\n     \
    \  |                           | TIFF strip                     |\n       +---------------------------+--------------------------------+\n\
    \       | StripOffsets**            | <n>: offset from beginning     |\n     \
    \  |                           | of file to each TIFF strip     |\n       +---------------------------+--------------------------------+\n\
    \       | XResolution               | 100, 200**, 300, 400 (written  |\n     \
    \  |                           | in pixels/inch)                |\n       +---------------------------+--------------------------------+\n\
    \       | YResolution               | 100, 200**, 300, 400           |\n     \
    \  |                           | (must equal XResolution)       |\n       +---------------------------+--------------------------------+\n\
    \       +---------------------------+--------------------------------+\n     \
    \  | Extension Fields                                           |\n       +---------------------------+--------------------------------+\n\
    \       | DocumentName*             | {ASCII}: name of scanned       |\n     \
    \  |                           | document                       |\n       +---------------------------+--------------------------------+\n\
    \       | PageNumber**              | n,m: page number followed by   |\n     \
    \  |                           | total page count               |\n       +---------------------------+--------------------------------+\n\
    \       | ChromaSubSampling         | (1,1), (2, 2)**                |\n     \
    \  |                           | (1, 1): equal numbers of       |\n       |  \
    \                         | lightness and chroma samples   |\n       |       \
    \                    | horizontally and vertically    |\n       |            \
    \               | (2, 2): twice as many lightness|\n       |                 \
    \          | samples as chroma samples      |\n       |                      \
    \     | horizontally and vertically    |\n       +---------------------------+--------------------------------+\n\
    \       | ChromaPositioning         | 1**: centered                  |\n     \
    \  +---------------------------+--------------------------------+\n       | New\
    \ Fields                                                 |\n       +---------------------------+--------------------------------+\n\
    \       | Decode**                  | minL, maxL, mina, maxa, minb,  |\n     \
    \  |                           | maxb: minimum and maximum      |\n       |  \
    \                         | values for L*a*b*              |\n       +---------------------------+--------------------------------+\n\
    \       | GlobalParametersIFD*      | IFD: IFD containing            |\n     \
    \  |                           | global parameters              |\n       +---------------------------+--------------------------------+\n\
    \       | ProfileType*              | n: type of data stored in      |\n     \
    \  |                           | TIFF file                      |\n       +---------------------------+--------------------------------+\n\
    \       | FaxProfile*               | n: ITU-compatible fax mode     |\n     \
    \  +---------------------------+--------------------------------+\n       | CodingMethods*\
    \            | n: compression algorithms      |\n       |                    \
    \       | used in file                   |\n       +---------------------------+--------------------------------+\n\
    \       | VersionYear*              | byte sequence: year of ITU std |\n     \
    \  +---------------------------+--------------------------------+\n"
- title: 7. Lossless Color Mode
  contents:
  - "7. Lossless Color Mode\n   This section defines the lossless color mode or Profile\
    \ L of TIFF for\n   facsimile. Implementations of this profile are required to\
    \ also\n   implement Profiles S and C.\n"
- title: 7.1. Overview
  contents:
  - "7.1. Overview\n   This mode, defined in [T.43], uses JBIG to losslessly code\
    \ three\n   types of color and grayscale images: one bit per color CMY, CMYK and\n\
    \   RGB images; a palettized (i.e. mapped) color image; and continuous\n   tone\
    \ color and grayscale images. The last two are multi-level and use\n   the L*a*b*\
    \ encoding specified in [T.42].\n"
- title: 7.1.1. Color Encoding
  contents:
  - "7.1.1. Color Encoding\n   While under development, this mode was called T.Palette,\
    \ as one of\n   its major additions was palette or mapped color images. Baseline\
    \ TIFF\n   only allows RGB color maps, but ITU-T Rec. T.43 requires L*a*b* color\n\
    \   maps, using the encoding specified in ITU-T Rec. T.42. Palette color\n   images\
    \ are expressed with indices (bits per sample) of 12 bits or\n   less, or optionally\
    \ 13 to 16 bits, per [T.43].\n   Enabling T.43 color maps in TIFF requires the\
    \ extension field\n   Indexed, defined in [TTN1], and the PhotometricInterpretation\
    \ field\n   value 10, defined in Section 6.2.1. The following table shows the\n\
    \   corresponding PhotometricInterpretation, SamplesPerPixel,\n   BitsPerSample\
    \ and Indexed field values for the different T.43 image\n   types.\n       +----------------------------------------------------------+\n\
    \       | Image Type |PhotometricIn| Samples  | Bits Per | Indexed |\n       |\
    \            |-terpretation| PerPixel |  Sample  |         |\n       |------------+-------------+----------+----------+---------|\n\
    \       |     RGB    |    2=RGB    |     3    |    1     |    0    |\n       +----------------------------------------------------------+\n\
    \       |     CMY    |    5=CMYK   |     3    |    1     |    0    |\n       +------------+-------------+----------+----------+---------+\n\
    \       |     CMYK   |    5=CMYK   |     4    |    1     |    0    |\n       +------------+-------------+----------+----------+---------+\n\
    \       |   Palette  |  10=ITULAB  |     1    |    n     |    1    |\n       +------------+-------------+----------+----------+---------+\n\
    \       |  Grayscale |  10=ITULAB  |     1    |   8, 12  |    0    |\n       +------------+-------------+----------+----------+---------+\n\
    \       |    Color   |  10=ITULAB  |     3    |   8, 12  |    0    |\n       +------------+-------------+----------+----------+---------+\n"
- title: 7.1.2. JBIG Encoding
  contents:
  - "7.1.2. JBIG Encoding\n   T.43 uses the single-progression sequential mode of\
    \ JBIG, defined in\n   ITU-T Rec. T.82. To code multi-level images using JBIG,\
    \ which is a\n   bi-level compression method, an image is resolved into a set\
    \ of bit-\n   planes, and each bit-plane is then JBIG compressed. For continuous\n\
    \   tone color and grayscale images, Gray code conversion is used. The\n   Gray\
    \ code conversion is part of the data stream encoding, and is\n   therefore invisible\
    \ to TIFF.\n"
- title: 7.2. Required TIFF Fields
  contents:
  - "7.2. Required TIFF Fields\n   This section lists the required fields, in addition\
    \ to those in\n   Section 2.2.1, and the values they must have to be compatible\
    \ with\n   ITU-T Rec. T.43.\n"
- title: 7.2.1. Baseline Fields
  contents:
  - '7.2.1. Baseline Fields

    '
- title: ImageWidth(256).                                           SHORT or LONG
  contents:
  - "ImageWidth(256).                                           SHORT or LONG\n  \
    \  Same page widths as the base color mode; see Section 6.2.1.\n"
- title: NewSubFileType(254) = (Bit 1=1).                                    LONG
  contents:
  - "NewSubFileType(254) = (Bit 1=1).                                    LONG\n  \
    \  RequiredByTIFFforFAX\n    Bit 1 is 1 if the image is a single page of a multi-page\
    \ document.\n    Default = 0 (no subfile bits on, so may not be omitted for fax)\n"
- title: BitsPerSample(258) = 1, 2-8, 9-16.                                 SHORT
  contents:
  - "BitsPerSample(258) = 1, 2-8, 9-16.                                 SHORT\n  \
    \  Count = SamplesPerPixel\n    RGB, CMY, CMYK: 1 bit per sample\n    Continuous\
    \ tone (L*a*b*): 2-8 bits per sample, 9-12 bits optional\n    Palette color: 12\
    \ or fewer bits per sample, 13-16 bits optional\n    Note: More than 8 bits per\
    \ sample is not baseline TIFF.\n"
- title: ColorMap(320).                                                     SHORT
  contents:
  - "ColorMap(320).                                                     SHORT\n  \
    \  Count = 3 * number of sample values\n    Lossless color fax mode supports palette-color\
    \ (indexed) images\n    where the single component value is used as an index into\
    \ a full\n    color lookup table stored in the ColorMap field. The sample value\
    \ is\n    encoded using the number of bits given by the BitsPerSample field\n\
    \    value. However, per [T.43],the number of sample values may be less\n    than\
    \ 2**BitsPerSample. The color lookup table is only required to\n    have as many\
    \ entries as there are number of sample values. For\n    palette-color images\
    \ in lossless color fax mode, the ITULAB encoding\n    with 8 or optionally 12\
    \ bits per color map value is supported. To\n    utilize a color map, the TIFF\
    \ Indexed field must be present. TIFF\n    orders the color map values so that\
    \ all the L* values come first,\n    followed by all the a* values and then all\
    \ the b* values. Because\n    ITU-T Rec. T.43 specifies a \"chunky\" ordering\
    \ with the L*a*b*\n    components of the first value, followed by those of the\
    \ second\n    value, and so on, reproducing color map values from a fax data\n\
    \    stream in a TIFF file requires reordering values.\n"
- title: Compression(259) = 10.                                             SHORT
  contents:
  - 'Compression(259) = 10.                                             SHORT

    '
- title: '10: ITU-T Rec. T.43 representation, using ITU-T Rec. T.82 (JBIG)'
  contents:
  - "10: ITU-T Rec. T.43 representation, using ITU-T Rec. T.82 (JBIG)\n    coding\n"
- title: FillOrder(266) = 1 , 2.                                            SHORT
  contents:
  - "FillOrder(266) = 1 , 2.                                            SHORT\n  \
    \  RequiredByTIFFBaseline\n    Profile F readers must be able to read data in\
    \ both bit orders,\n    but the vast majority of facsimile products store data\
    \ LSB\n    first, exactly as it appears on the telephone line.\n             \
    \ 1 = Most Significant Bit first.\n              2 = Least Significant Bit first\n"
- title: PhotometricInterpretation(262) = 2, 5, 10.                         SHORT
  contents:
  - "PhotometricInterpretation(262) = 2, 5, 10.                         SHORT\n  \
    \  2: RGB\n    5: CMYK, including CMY\n    10: ITULAB\n    Image data may also\
    \ be stored as palette color images, where pixel\n    values are represented by\
    \ a single component that is an index into a\n    color map using the ITULAB encoding.\
    \ This color map is specified by\n    the ColorMap field. To use palette color\
    \ images, set the\n    PhotometricInterpretation to 10,SamplesPerPixel to 1, and\
    \ Indexed to\n    1. The color map is stored in the ColorMap field. See Section\
    \ 7.1.1\n    for further discussion on the color encoding.\n"
- title: ResolutionUnit(296) = 2, 3.                                        SHORT
  contents:
  - "ResolutionUnit(296) = 2, 3.                                        SHORT\n  \
    \  The unit of measure for resolution. 2 = inch, 3 = centimeter;\n    Default\
    \ = 2 (field may be omitted if this is the value)\n"
- title: SamplesPerPixel(277) = 1, 3, 4.                                    SHORT
  contents:
  - "SamplesPerPixel(277) = 1, 3, 4.                                    SHORT\n  \
    \  1: Palette color image, or L*-only if Indexed = 0 and\n       PhotometricInterpretation\
    \ is 10 (ITULAB).\n    3: RGB, or L*a*b*, or CMY if PhotometricInterpretation\
    \ is 5 (CMYK).\n    4: CMYK.\n"
- title: XResolution(282) = 100, 200, 300, 400.                          RATIONAL
  contents:
  - 'XResolution(282) = 100, 200, 300, 400.                          RATIONAL

    '
- title: YResolution(283) = 100, 200, 300, 400.                          RATIONAL
  contents:
  - "YResolution(283) = 100, 200, 300, 400.                          RATIONAL\n  \
    \  The resolution of the image is expressed in pixels per resolution\n    unit.\
    \ In pixels per inch, allowed XResolution values are: 100, 200,\n    300, and\
    \ 400. The lossless color fax mode requires the pixels to be\n    square, hence\
    \ YResolution must equal XResolution. Base resolution is\n    200 pixels per inch.\
    \ See Section 2.2.2 for inch-metric equivalency.\n"
- title: 7.2.2. Extension Fields
  contents:
  - '7.2.2. Extension Fields

    '
- title: Indexed(364) = 0, 1.                                               SHORT
  contents:
  - "Indexed(364) = 0, 1.                                               SHORT\n  \
    \  0: not a palette-color image\n    1: palette-color image\n    This field is\
    \ used to indicate that each sample value is an index\n    into an array of color\
    \ values specified in the ColorMap field.\n    Lossless color fax mode supports\
    \ palette-color images with the\n    ITULAB encoding. The SamplesPerPixel value\
    \ must be 1.\n"
- title: 7.2.3. New Fields
  contents:
  - '7.2.3. New Fields

    '
- title: Decode(433)                                                    SRATIONAL
  contents:
  - "Decode(433)                                                    SRATIONAL\n  \
    \  Decode is used in connection with the ITULAB encoding of image data\n    and\
    \ color map values; see Section 6.2.3.\n"
- title: 7.3. Recommended TIFF Fields
  contents:
  - "7.3. Recommended TIFF Fields\n   See Sections 2.2.3. and 2.2.4.\n"
- title: 7.4. Lossless Color Fax Mode Summary
  contents:
  - "7.4. Lossless Color Fax Mode Summary\n   Recommended fields are shown with an\
    \ asterisk *.\n        +--------------------+--------------------------------------+\n\
    \        |   Baseline Fields  |             Values                   |\n     \
    \   +--------------------+--------------------------------------+\n        | BitsPerSample\
    \      | 1: Binary RGB, CMY(K)                |\n        |                   \
    \ | 8: 8 bits per color sample           |\n        |                    | 9-16:\
    \ optional                       |\n        +--------------------+--------------------------------------+\n\
    \        | ColorMap           | n: LAB color map                     |\n     \
    \   +--------------------+--------------------------------------+\n        | Compression\
    \        | 10: JBIG, per T.43                   |\n        +--------------------+--------------------------------------+\n\
    \        | DateTime*          | {ASCII}:  date/time in the 24-hour   |\n     \
    \   |                    | format \"YYYY:MM:DD HH:MM:SS\"         |\n        +--------------------+--------------------------------------+\n\
    \        | FillOrder**        | 1: Most significant bit first        |\n     \
    \   |                    | 2: Least significant bit first       |\n        +--------------------+--------------------------------------+\n\
    \        | ImageDescription*  | {ASCII}: A string describing the     |\n     \
    \   |                    | contents of the image.               |\n        +--------------------+--------------------------------------+\n\
    \        | ImageWidth         | 864, 1024, 1216, 1728**, 2048, 2432, |\n     \
    \   |                    | 2592, 3072, 3456, 3648, 4096, 4864   |\n        +--------------------+--------------------------------------+\n\
    \        | ImageLength**      | n: total number of scanlines in image|\n     \
    \   +--------------------+--------------------------------------+\n        | NewSubFileType\
    \     | 2: Bit 1 identifies single page of a |\n        |                    |\
    \ multi-page document                  |\n        +--------------------+--------------------------------------+\n\
    \        | Orientation        | 1**-8, Default 1                     |\n     \
    \   +--------------------+--------------------------------------+\n        | PhotometricInter-\
    \  | 2: RGB                               |\n        | pretation          | 5:\
    \ CMYK                              |\n        |                    | 10: ITULAB\
    \                           |\n        +--------------------+--------------------------------------+\n\
    \        +--------------------+--------------------------------------+\n     \
    \   | ResolutionUnit     | 2: inch                              |\n        | \
    \                   | 3: centimeter                        |\n        +--------------------+--------------------------------------+\n\
    \        | RowsPerStrip       | n: number of scanlines per TIFF strip|\n     \
    \   +--------------------+--------------------------------------+\n        | SamplesPerPixel\
    \    | 1: L* (lightness)                    |\n        |                    |\
    \ 3: LAB, RGB, CMY                     |\n        |                    | 4: CMYK\
    \                              |\n        +--------------------+--------------------------------------+\n\
    \        | Software*          | {ASCII}: name & release number of    |\n     \
    \   |                    | creator software                     |\n        +--------------------+--------------------------------------+\n\
    \        | StripByteCounts    | <n>: number or bytes in TIFF strip   |\n     \
    \   +--------------------+--------------------------------------+\n        | StripOffsets\
    \       | <n>: offset from beginning of file to|\n        |                  \
    \  | each TIFF strip                      |\n        +--------------------+--------------------------------------+\n\
    \        | XResolution        | 100, 200, 300, 400 (written in       |\n     \
    \   |                    | pixels/inch)                         |\n        +--------------------+--------------------------------------+\n\
    \        | YResolution        | equal to XResolution (pixels must be |\n     \
    \   |                    | square)                              |\n        +--------------------+--------------------------------------+\n\
    \        | Extension Fields                                          |\n     \
    \   +--------------------+--------------------------------------+\n        | DocumentName*\
    \      | {ASCII}: name of scanned document    |\n        +--------------------+--------------------------------------+\n\
    \        | PageNumber         | n,m: page number followed by total   |\n     \
    \   |                    | page count                           |\n        +--------------------+--------------------------------------+\n\
    \        | Indexed            | 0: not a palette-color image         |\n     \
    \   |                    | 1: palette-color image               |\n        +--------------------+--------------------------------------+\n\
    \        | New Fields                                                |\n     \
    \   +--------------------+--------------------------------------|\n        | Decode\
    \             | minL, maxL, mina, maxa, minb, maxb:  |\n        |            \
    \        |minimum and maximum values for L*a*b* |\n        +--------------------+--------------------------------------+\n\
    \        | GlobalParameters   | IFD: global parameters IFD           |\n     \
    \   | IFD*               |                                      |\n        +-----------------------------------------------------------+\n\
    \        +--------------------+--------------------------------------+\n     \
    \   | ProfileType*       | n: type of data stored in TIFF file  |\n        +--------------------+--------------------------------------+\n\
    \        | FaxProfile*        | n: ITU-compatible fax mode           |\n     \
    \   +--------------------+--------------------------------------+\n        | CodingMethods*\
    \     | n:compression algorithms used in     |\n        |                    |\
    \ file                                 |\n        +--------------------+--------------------------------------+\n\
    \        | VersionYear*       | byte sequence: year of ITU fax std   |\n     \
    \   +--------------------+--------------------------------------+\n"
- title: 8. Mixed Raster Content Mode
  contents:
  - "8. Mixed Raster Content Mode\n   This section defines the Mixed Raster Content\
    \ mode or Profile M of\n   TIFF for facsimile. Implementations of this profile\
    \ are required to\n   implement Profiles S and C, and may optionally implement\
    \ Profiles F,\n   J and L.\n"
- title: 8.1. Overview
  contents:
  - "8.1. Overview\n   Unlike previous fax modes, which use a single coding method\
    \ and\n   spatial resolution for an entire fax page, the Mixed Raster Content\n\
    \   mode [T.44] enables different coding methods and resolutions within a\n  \
    \ single page. For example, consider a page that contains black-and-\n   white\
    \ text, which is best coded with MMR or JBIG, a color bar chart,\n   best coded\
    \ with JBIG, and a scanned color image, best coded with\n   JPEG. Similarly, while\
    \ spatial resolution of 400 pixels per inch may\n   be best for the black-and-\
    \ white text, 200 pixel per inch is usually\n   sufficient for a color image.\n\
    \   Rather than applying one coding method and resolution to all\n   elements,\
    \ MRC allows multiple coders and resolutions within a page.\n   By itself, MRC\
    \ does not define any new coding methods or resolutions.\n   Instead it defines\
    \ a 3-layer image model for structuring and\n   combining the scanned image data.\
    \ The MRC 3-layer model has been\n   applied here using the TIFF format to yield\
    \ a data structure which\n   differs from [T.44] though it applies the same coding\
    \ methods, uses\n   the same compressed image data stream and is consistent with\
    \ the TIFF\n   principle of a single IFD per image.\n"
- title: 8.1.1. MRC 3-layer model
  contents:
  - "8.1.1. MRC 3-layer model\n   The 3 layers of the MRC model are Foreground and\
    \ Background, which\n   are both multi-level, and Mask, which is bi-level. Each\
    \ layer may\n   appear only once on a page and is coded independently of the other\n\
    \   two. In our earlier example, the black-and-white text could be in the\n  \
    \ Mask layer, the color chart in the Foreground layer, and the color\n   image\
    \ in the Background layer.\n   Each layer is an image and, when present, is represented\
    \ by at least\n   one IFD in a TIFF file. This is consistent with TIFF, which\
    \ provides\n   fields to define the attributes, such as resolution, image size,\
    \ bits\n   per sample, etc., of a single image or layer. The distribution of\n\
    \   content among layers is determined by the writer, as is the choice of\n  \
    \ coding method, color encoding and spatial resolution for a layer.\n   The final\
    \ image is obtained by using the Mask layer to select pixels\n   from the other\
    \ two layers. When the Mask layer pixel value is 1, the\n   corresponding pixel\
    \ from the Foreground layer is selected; when it is\n   0, the corresponding pixel\
    \ from the Background layer is selected.\n   Details are given in the Introduction\
    \ of [T.44].\n   Not all pages, and not all parts of a page, require 3 layers.\
    \ If\n   there is only one layer present, then that layer is the primary image\n\
    \   or IFD. If there is more than one layer, then the Mask must be one of\n  \
    \ the layers, in which case it is the primary image and it must be page\n   size.\n\
    \   MRC allows a page to be split into strips, with a variable number of\n   scanlines\
    \ in a strip. A strip can have 1, 2 or 3 layers. A single,\n   stripped layer\
    \ may be stored as a single, stripped image in an IFD,\n   e.g., all strips associated\
    \ with the Background layer may be treated\n   as a single image. Alternatively,\
    \ each strip associated with a layer\n   may be stored as a separate image or\
    \ IFD, e.g., the Background layer\n   can be composed of several images that are\
    \ offset vertically with\n   respect to the page. In this case, there can be no\
    \ overlap between\n   images associated with a single layer. According to [T.4]\
    \ Annex G,\n   strips having more than 1 layer SHOULD NOT be more than 256 lines\
    \ in\n   length unless the capability to receive longer strips has been\n   negotiated.\n\
    \   Furthermore, color fax also requires the spatial resolutions of\n   Background\
    \ and Foreground images to be legal fax values that are also\n   integer factors\
    \ of the Mask image resolution. For example, if the\n   Mask Layer resolution\
    \ is 400 pixels per inch, then allowed\n   resolutions for the Foreground and\
    \ Background layers are 100, 200 or\n   400 pixels per inch; if the Mask is at\
    \ 300 pixels per inch, then\n   allowed values are 100 and 300. The Foreground\
    \ and Background layer\n   resolutions can be independently set.\n"
- title: 8.1.2. A TIFF Representation for the MRC 3-layer model
  contents:
  - "8.1.2. A TIFF Representation for the MRC 3-layer model\n   In the TIFF representation\
    \ of the 3-layer MRC model, each page is\n   represented by a single IFD, called\
    \ the Primary IFD, that represents\n   the Mask layer (unless the Foreground or\
    \ Background is the single\n   layer present), and a set of child IFDs that are\
    \ referenced through\n   the SubIFDs extension field [TTN1]. To distinguish MRC-specific\n\
    \   SubIFDs from other SubIFDs, the NewSubFileType field MUST have Bit 4\n   ON,\
    \ indicating an MRC-related IFD. A new ImageLayer field is also\n   introduced\
    \ that consists of two values that identify the layer\n   (Foreground, Background,\
    \ or Mask) and the order within the layer\n   (first, second, ... image of the\
    \ layer); see Section 8.2.3.\n   Because MRC allows strips with variable numbers\
    \ of scanlines, a\n   reader MUST support StripRowCounts field because a writer\
    \ may use it\n   in place of the RowsPerStrip field in this mode. The StripRowCounts\n\
    \   field allows each layer, with a variable number of scanlines in each\n   strip,\
    \ to be represented by a single IFD, when the coding parameters\n   are the same\
    \ for all strips in the layer. The MRC standard [T.44]\n   allows the Foreground\
    \ and Background layers to have strips with\n   different coding parameters. In\
    \ this case, a separate IFD is required\n   to represent the strips which use\
    \ different coding parameters; see\n   text in next paragraph. In all cases, the\
    \ Mask layer is required to\n   be represented by a single IFD and a single set\
    \ of coding parameters.\n   The use of SubIFDs to store child IFDs is described\
    \ in [TTN1]. An\n   example is shown graphically below. The Primary IFD associated\
    \ with\n   page 1 (PrimaryIFD 0) points to page 2 (PrimaryIFD 1) with the\n  \
    \ nextIFD offset. The Primary IFD, corresponding to the Mask layer\n   (ImageLayer=[2,1]),\
    \ contains a SubIFDs field that points to a list of\n   child IFDs. The first\
    \ child IFD represents one image of the\n   Background layer, i.e., ImageLayer=[1,1].\
    \ This child IFD points to\n   the second child IFD via the nextIFD offset. This\
    \ child represents\n   the second Background layer image, ImageLayer=[1,2]. Finally,\
    \ the\n   second child points to the third child, which corresponds to the\n \
    \  single Foreground layer image, ImageLayer=[3,1]. The next IFD offset\n   associated\
    \ with this Foreground image is 0, indicating no more child\n   IFDs exist. Each\
    \ primary IFD has the NewSubFileType set to 18,\n   indicating the IFD is MRC-specific\
    \ (bit 4) and that it is a single\n   page of a multi-page document (bit 1). Each\
    \ child IFD has the\n   NewSubFileType set to 16, indicating the IFD is MRC-specific.\
    \ The 'V'\n   character should be read as a down-pointing arrow.\n           \
    \            (nextIFD)\n       PRIMARY IFD 0  ------------> PRIMARY IFD 1--> ...\n\
    \           ImageLayer = [2,1]\n           NewSubFileType = 18\n           SubIFDs\n\
    \                |\n                V\n             Child IFD\n              \
    \  ImageLayer = [1,1]\n                NewSubFileType = 16\n                |\n\
    \                |(nextIFD)\n                |\n                V\n          \
    \   Child IFD\n                ImageLayer = [1,2]\n                NewSubFileType\
    \ = 16\n                |\n                |(nextIFD)\n                |\n   \
    \             V\n             Child IFD\n                ImageLayer = [3,1]\n\
    \                NewSubFileType = 16\n                |\n                |(nextIFD)\n\
    \                V\n                0\n   In the example above, the SubIFDs field\
    \ of the Primary IFD points to\n   the first IFD in a list of child IFDs. TIFF\
    \ allows the SubIFDs field\n   to point to an array of IFDs, each of which can\
    \ be the first of a\n   list of IFDs. An MRC-enabled TIFF reader must scan all\
    \ available\n   child IFDs to locate and identify IFDs associated with MRC layers.\n\
    \   In the case where the Background or Foreground layers are described\n   with\
    \ multiple IFDs, the XPosition and YPosition TIFF fields specify\n   the offset\
    \ to the upper-left corner of the IFD with respect to the\n   Mask layer; see\
    \ Section 8.2.2. When there is only a single layer\n   (Mask, Foreground, or Background),\
    \ it is stored as the Primary IFD.\n"
- title: 8.2. Required TIFF Fields
  contents:
  - "8.2. Required TIFF Fields\n   This section describes the TIFF fields required,\
    \ in addition to those\n   in Section 2.2.1, to represent MRC mode fax images.\
    \ Since MRC mode\n   stores fax data as a collection of images corresponding to\
    \ layers or\n   parts of layers, the coding methods, color encodings and spatial\n\
    \   resolutions used by previous modes apply to MRC. Therefore, the\n   descriptions\
    \ here will typically reference the appropriate earlier\n   section. Fields and\
    \ values specific to MRC mode are pointed out.\n"
- title: 8.2.1. Baseline Fields
  contents:
  - '8.2.1. Baseline Fields

    '
- title: ImageWidth(256).                                           SHORT or LONG
  contents:
  - "ImageWidth(256).                                           SHORT or LONG\n  \
    \  Same page widths as the base color mode; see Section 6.2.1.\n    In the MRC\
    \ mode, the width of a Foreground or Background image in\n    the coded data stream\
    \ may be less than the page width. In this case,\n    the image width in the coded\
    \ data steam is used to interpret the\n    coded data, and the value of this field\
    \ is used as the page width.\n"
- title: NewSubFileType(254) = 16, 18.                                       LONG
  contents:
  - "NewSubFileType(254) = 16, 18.                                       LONG\n  \
    \  For MRC fax mode, the NewSubFileType field has two bits that are\n    required.\n\
    \    Bit 1 indicates a single page of a multi-page document and must be\n    set\
    \ for the Primary IFD;\n    Bit 4 indicates MRC imaging model as described in\
    \ ITU-T\n    Recommendation T.44 [T.44], and must be set for Primary IFDs\n  \
    \  and all MRC-specific child IFDs.\n"
- title: BitsPerSample(258) = 1, 2-8, 9-16                                  SHORT
  contents:
  - 'BitsPerSample(258) = 1, 2-8, 9-16                                  SHORT

    '
- title: Compression(259) = 3, 4, 7, 9, 10.                                 SHORT
  contents:
  - 'Compression(259) = 3, 4, 7, 9, 10.                                 SHORT

    '
- title: SamplesPerPixel(277) = 1, 3, 4.                                    SHORT
  contents:
  - 'SamplesPerPixel(277) = 1, 3, 4.                                    SHORT

    '
- title: FillOrder(266) = 1 , 2.                                            SHORT
  contents:
  - "FillOrder(266) = 1 , 2.                                            SHORT\n  \
    \  RequiredByTIFFBaseline\n    Profile F readers must be able to read data in\
    \ both bit orders,\n    but the vast majority of facsimile products store data\
    \ LSB\n    first, exactly as it appears on the telephone line.\n             \
    \ 1 = Most Significant Bit first.\n              2 = Least Significant Bit first\n"
- title: ResolutionUnit(296) = 2, 3.                                        SHORT
  contents:
  - 'ResolutionUnit(296) = 2, 3.                                        SHORT

    '
- title: PhotometricInterpretation(262) = 0, 1, 2, 5, 10.                   SHORT
  contents:
  - "PhotometricInterpretation(262) = 0, 1, 2, 5, 10.                   SHORT\n  \
    \  For Mask layer, see Sections 4.2.1 and 5.2.1.\n    For Foreground and Background\
    \ layers, see Sections 6.2.1 and 7.2.1.\n"
- title: ColorMap(320).                                                     SHORT
  contents:
  - 'ColorMap(320).                                                     SHORT

    '
- title: Count = 3 * (2**BitsPerSample)
  contents:
  - "Count = 3 * (2**BitsPerSample)\n    Used when Foreground or Background layer\
    \ is a palette-color image;\n    see Section 7.2.1.\n"
- title: XResolution(282) = 100, 200, 300, 400.                          RATIONAL
  contents:
  - 'XResolution(282) = 100, 200, 300, 400.                          RATIONAL

    '
- title: YResolution(283) = 100, 200, 300, 400.                          RATIONAL
  contents:
  - "YResolution(283) = 100, 200, 300, 400.                          RATIONAL\n  \
    \  The resolution of the image is expressed in pixels per resolution\n    unit.\
    \ In pixels per inch, allowed XResolution values for all layers\n    are: 100,\
    \ 200, 300, and 400. MRC color fax mode requires the pixels\n    to be square,\
    \ hence YResolution must equal XResolution for all\n    layers. The resolution\
    \ of Background and Foreground layers must each\n    be an integer factor of the\
    \ Primary image, which is the Mask layer,\n    when it is present; see Section\
    \ 8.4.\n    See Section 2.2.2 for inch-metric equivalency.\n"
- title: 8.2.2. Extension Fields
  contents:
  - '8.2.2. Extension Fields

    '
- title: ChromaSubSampling(530).                                            SHORT
  contents:
  - 'ChromaSubSampling(530).                                            SHORT

    '
- title: ChromaPositioning(531).                                            SHORT
  contents:
  - "ChromaPositioning(531).                                            SHORT\n  \
    \  For Foreground and Background layers, see Section 6.2.2.\n"
- title: Indexed(346) = 0, 1.                                               SHORT
  contents:
  - "Indexed(346) = 0, 1.                                               SHORT\n  \
    \  For Foreground and Background layers: 1 indicates a palette-color\n    image,\
    \ see Section 7.2.2.\n"
- title: T4Options(292) = 0, 1, 4, 5.                                       SHORT
  contents:
  - 'T4Options(292) = 0, 1, 4, 5.                                       SHORT

    '
- title: T6Options(293) = 0.                                                SHORT
  contents:
  - "T6Options(293) = 0.                                                SHORT\n  \
    \  For Mask layer, see Section 4.2.2.\n"
- title: SubIFDs(330).                                                        IFD
  contents:
  - "SubIFDs(330).                                                        IFD\n  \
    \  Count = number of child IFDs\n    Each value is an offset from the beginning\
    \ of the TIFF file to a\n    child IFD [TTN1].\n"
- title: XPosition(286).                                                 RATIONAL
  contents:
  - 'XPosition(286).                                                 RATIONAL

    '
- title: YPosition(287).                                                 RATIONAL
  contents:
  - "YPosition(287).                                                 RATIONAL\n  \
    \  Specifies the horizontal and vertical offsets of the top-left of the\n    IFD\
    \ from the top-left of the Primary IFD in page resolution units.\n    For example,\
    \ if the Primary IFD is at 400 pixels per inch, and a\n    foreground layer IFD\
    \ is at 200 pixels per inch and located at pixel\n    coordinate (345, 678) with\
    \ respect to the Primary IFD, the XPosition\n    value is 345/400 and the YPosition\
    \ value is 678/400.\n    Color fax does not currently allow overlap of any component\
    \ images\n    within a single layer.\n    Default values for XPosition and YPosition\
    \ are 0.\n"
- title: 8.2.3. New Fields
  contents:
  - '8.2.3. New Fields

    '
- title: Decode(433).                                                   SRATIONAL
  contents:
  - "Decode(433).                                                   SRATIONAL\n  \
    \  For Foreground and Background layers, see Section 6.2.3.\n"
- title: DefaultImageColor(434).                                            SHORT
  contents:
  - "DefaultImageColor(434).                                            SHORT\n  \
    \  Count = SamplesPerPixel\n    In areas where no image data is available, a default\
    \ color is needed\n    to specify the color value. If the StripByteCounts value\
    \ for a strip\n    is 0, then the color for that strip must be defined by a default\n\
    \    image color.\n    The DefaultImageColor field uses the same encoding as the\
    \ image\n    data, and its value is therefore interpreted using the\n    PhotometricInterpretation,\
    \ SamplesPerPixel, BitsPerSample, and\n    Indexed fields. If the fax data stream\
    \ requires a different\n    encoding, then transferring the default color value\
    \ between a TIFF\n    file and fax data stream requires a color conversion.\n\
    \    For the Foreground layer image, the default value for the\n    DefaultImageColor\
    \ field is black. For other cases, including the\n    Background layer image,\
    \ the default value is white.\n"
- title: StripRowCounts(559).                                                LONG
  contents:
  - "StripRowCounts(559).                                                LONG\n  \
    \  Count = number of strips\n    The number of scanlines stored in a strip. MRC\
    \ allows each fax strip\n    to store a different number of scanlines. For strips\
    \ with more than\n    one layer there is a maximum strip size of 256 scanlines\
    \ or full\n    page size. The 256 maximum SHOULD be used unless the capability\
    \ to\n    receive longer strips has been negotiated. This field replaces\n   \
    \ RowsPerStrip for IFDs with variable-sized strips. Only one of the\n    two fields,\
    \ StripRowCounts and RowsPerStrip, may be used in an IFD.\n"
- title: ImageLayer (34732).                                       SHORT or LONG.
  contents:
  - "ImageLayer (34732).                                       SHORT or LONG.\n  \
    \  Count = 2\n    Image layers are defined such that layer 1 is the Background\
    \ layer,\n    layer 3 is the Foreground layer, and layer 2 is the Mask layer,\n\
    \    which selects pixels from the Background and Foreground layers. The\n   \
    \ ImageLayer tag contains two values, describing the layer to which\n    the image\
    \ belongs and the order in which it is imaged.\n    ImageLayer[0] = 1, 2, 3.\n\
    \    1: Image is a Background image, i.e., the image that will appear\n      \
    \ whenever the Mask contains a value of 0. Background images\n       typically\
    \ contain low-resolution, continuous-tone imagery.\n    2: Image is the Mask layer.\
    \ In MRC, if the Mask layer is present, it\n       must be the Primary IFD and\
    \ be full page in extent (no gaps.)\n    3: Image is a Foreground image, i.e.,\
    \ the image that will appear\n       whenever the Mask contains a value of 1.\
    \ The Foreground image\n       generally defines the color of text or lines, but\
    \ may also\n       contain high-resolution imagery.\n    ImageLayer[1]:\n    1:\
    \ first image to be imaged in this layer,\n    2: second image to be imaged in\
    \ this layer,\n    3: ...\n    Value describing the image order. In MRC, this\
    \ may be considered\n    the strip number. Since MRC mode currently does not allow\
    \ overlap\n    between images within a layer, the order value does not have any\n\
    \    visual effect.\n   In MRC fax mode, it is possible that only a single layer\
    \ is\n   transmitted. For example, if a page contains only a single\n   continuous-tone\
    \ photograph, then only the Background layer may be\n   transmitted. In this case,\
    \ the Background layer will be stored as the\n   Primary IFD. ImageLayer[0] will\
    \ be 1 indicating Background;\n   ImageLayer[1] will be 1 since there can be no\
    \ other IFDs associated\n   with that layer. No Mask layer will exist.\n"
- title: 8.3. Recommended TIFF Fields
  contents:
  - "8.3. Recommended TIFF Fields\n   See Sections 2.2.3. and 2.2.4.\n"
- title: 8.4. Rules and Requirements for Images
  contents:
  - "8.4. Rules and Requirements for Images\n   The MRC mode defines a fundamental\
    \ set of rules for images in the 3-\n   layer representation.\n   1. If more than\
    \ one layer exists, then the binary Mask layer SHALL be\n      present and be\
    \ the primary image. The Mask layer SHALL support the\n      encoding defined\
    \ in Section 3 and MAY support the encodings\n      defined in Sections 4 and\
    \ 5. If only one layer exists, then the\n      image corresponding to that layer\
    \ is the primary image.\n   2. When the binary Mask layer is the Primary IFD,\
    \ the Primary IFD\n      defines and extends to the entire page boundary; all\
    \ attached\n      model images cannot extend beyond the Primary image. Resolution\n\
    \      differences may cause some pixels to \"hang over\" the page\n      boundary,\
    \ but no new pixels should exist completely beyond the\n      page extent. When\
    \ the Foreground or Background layer is the\n      Primary IFD, the Primary IFD\
    \ may not be page width.\n   3. The Background and Foreground images SHALL support\
    \ the color\n      encoding defined in Section 6 and MAY support the color encoding\n\
    \      defined in Section 7. These images MAY optionally cover only a\n      portion\
    \ of the strip or page.\n   4. Each Primary IFD and each MRC-specific SubIFD must\
    \ have an\n      ImageLayer field to specify which layer the IFD belongs to, and\n\
    \      the imaging order of that IFD within the layer.\n   5. Each Primary IFD\
    \ must have a NewSubFileType field value set to 18,\n      indicating a single\
    \ page of a multi-page document (bit 1) and MRC\n      mode (bit 4).\n   6. Each\
    \ MRC-specific child IFD must have a NewSubFileType field value\n      set to\
    \ 16, indicating MRC mode (bit 4).\n   7. In MRC mode, each layer is transmitted\
    \ as a sequence of strips. It\n      is possible that each strip of each layer\
    \ can be stored as a\n      separate IFD. In this case, the SubIFDs structure\
    \ pointed to by\n      the Primary IFD will contain several IFDs that have an\
    \ ImageLayer\n      field with the layer identified as either Background (layer\
    \ 1) or\n      Foreground (layer 3). There may be no overlap in the vertical\n\
    \      direction between IFDs associated with a single layer, although\n     \
    \ there may be a gap from one of these images to the next. The TIFF\n      XPosition\
    \ and YPosition fields are used to indicate the placement\n      of these images\
    \ with respect to the primary image.\n   8. When the Mask image is present, the\
    \ resolution of Background and\n      Foreground images must each be an integer\
    \ factor of the Mask\n      image. For example, if the Mask image is 400 pixels/inch,\
    \ then the\n      Background or Foreground image may be at 400 pixels/inch (400/1),\n\
    \      200 pixels/inch (400/2) or 100 pixels/inch (400/4).\n"
- title: 8.5. MRC Fax Mode Summary
  contents:
  - "8.5. MRC Fax Mode Summary\n   Recommended fields are shown with an asterisk *\n\
    \       +------------------+-----------------------------------------+\n     \
    \  | Baseline Fields  |               Values                    |\n       |------------------|-----------------------------------------|\n\
    \       | BitsPerSample    | 1: binary mask                          |\n     \
    \  |                  | 8: 8 bits per color sample              |\n       |  \
    \                | 9-16: optional 12 bits/sample           |\n       +------------------+-----------------------------------------+\n\
    \       | ColorMap         | n: LAB color map                        |\n     \
    \  +------------------+-----------------------------------------+\n       | Compression\
    \      | 3: Modified Huffman and Modified Read   |\n       |                 \
    \ | 4: Modified Modified Read               |\n       |                  | 7:\
    \ JPEG                                 |\n       |                  | 9: JBIG,\
    \ per T.85                       |\n       |                  | 10: JBIG, per\
    \ T.43                      |\n       +------------------+-----------------------------------------+\n\
    \       | DateTime*        | {ASCII): date/time in the 24-hour format|\n     \
    \  |                  | \"YYYY:MM:DD HH:MM:SS\"                   |\n       +------------------+-----------------------------------------|\n\
    \       | FillOrder**      | 1: Most significant bit first           |\n     \
    \  |                  | 2: Least significant bit first          |\n       +------------------+-----------------------------------------|\n\
    \       | ImageDescription*| {ASCII}: A string describing the        |\n     \
    \  |                  | contents of the image.                  |\n       +------------------+-----------------------------------------+\n\
    \       | ImageWidth       | 864, 1024, 1216, 1728**, 2048, 2432,    |\n     \
    \  |                  | 2592, 3072, 3456, 3648, 4096, 4864      |\n       +------------------+-----------------------------------------+\n\
    \       | ImageLength**    | n: total number of scanlines in image   |\n     \
    \  +------------------+-----------------------------------------+\n       | NewSubFileType\
    \   | 16, 18:                                 |\n       |                  | Bit\
    \ 1 indicates single page of a multi- |\n       |                  | page document\
    \ on Primary IFD            |\n       |                  | Bit 4 indicates MRC\
    \ model               |\n       +------------------+-----------------------------------------+\n\
    \       +------------------+-----------------------------------------+\n     \
    \  | Orientation      | 1**-8, Default 1                        |\n       +------------------+-----------------------------------------+\n\
    \       | PhotometricInter | 0: WhiteIsZero                          |\n     \
    \  | pretation        | 1: BlackIsZero                          |\n       |  \
    \                | 2: RGB                                  |\n       |       \
    \           | 5: CMYK                                 |\n       |            \
    \      | 10: ITULAB                              |\n       +------------------+-----------------------------------------+\n\
    \       | ResolutionUnit   | 2: inch                                 |\n     \
    \  |                  | 3: centimeter                           |\n       +------------------+-----------------------------------------+\n\
    \       | RowsPerStrip     | n: number or scanlines per strip        |\n     \
    \  +------------------+-----------------------------------------+\n       | SamplesPerPixel\
    \  | 1: L* (lightness)                       |\n       |                  | 3:\
    \ RGB, LAB, CMY                        |\n       |                  | 4: CMYK\
    \                                 |\n       +------------------+-----------------------------------------+\n\
    \       | Software*        | {ASCII}: name & release number of       |\n     \
    \  |                  | creator software                        |\n       +------------------+-----------------------------------------+\n\
    \       | StripByteCounts  | <n>: number or bytes in each strip      |\n     \
    \  +------------------+-----------------------------------------+\n       | StripOffsets\
    \     | <n>: offset from beginning of file to   |\n       |                  |\
    \ each TIFF strip                         |\n       +------------------+-----------------------------------------|\n\
    \       | XResolution      | 100, 200, 300, 400 (written in          |\n     \
    \  |                  | pixels/inch)                            |\n       +------------------+-----------------------------------------|\n\
    \       | YResolution      | equal to XResolution (pixels must be    |\n     \
    \  |                  | square)                                 |\n       +------------------+-----------------------------------------+\n\
    \       | Extension Fields                                           |\n     \
    \  +------------------+-----------------------------------------+\n       | T4Options\
    \        | 0: required if Compression is Modified  |\n       |               \
    \   | Huffman, EOLs not byte aligned          |\n       |                  | 1:\
    \ required if Compression 2D Modified  |\n       |                  | Read, EOLs\
    \ are not byte aligned         |\n       |                  | 4: required if Compression\
    \ Modified     |\n       |                  | Huffman, EOLs byte aligned     \
    \         |\n       |                  | 5: required if Compression 2D Modified\
    \  |\n       |                  | Read, EOLs are byte aligned             |\n\
    \       +------------------+-----------------------------------------+\n     \
    \  | T6Options        | 0: required if Compression is 2D        |\n       |  \
    \                | Modified Modified Read                  |\n       +------------------+-----------------------------------------+\n\
    \       +------------------+-----------------------------------------+\n     \
    \  | DocumentName*    | {ASCII}: name of scanned document       |\n       +------------------+-----------------------------------------+\n\
    \       | PageNumber       | n,m: page number followed by total page |\n     \
    \  |                  | count                                   |\n       +------------------+-----------------------------------------+\n\
    \       | ChromaSubSampling| (1,1), (2, 2)**                         |\n     \
    \  |                  | (1, 1): equal numbers of lightness and  |\n       |  \
    \                | chroma samples horizontally & vertically|\n       |       \
    \           | (2, 2): twice as many lightness samples |\n       |            \
    \      | as chroma horizontally and vertically   |\n       +------------------+-----------------------------------------+\n\
    \       | ChromaPositioning| 1: centered                             |\n     \
    \  +------------------+-----------------------------------------+\n       | Indexed\
    \          | 0: not a palette-color image            |\n       |             \
    \     | 1: palette-color image                  |\n       +------------------+-----------------------------------------+\n\
    \       | SubIFDs          | <IFD>: byte offset to fg/bg IFDs        |\n     \
    \  +------------------+-----------------------------------------+\n       | XPosition\
    \        | horizontal offset in primary IFD        |\n       |               \
    \   | resolution units                        |\n       +------------------+-----------------------------------------+\n\
    \       | YPosition        | vertical offset in primary IFD          |\n     \
    \  |                  | resolution units                        |\n       +------------------+-----------------------------------------+\n\
    \       | New Fields                                                 |\n     \
    \  +------------------+-----------------------------------------+\n       | Decode\
    \           | minL, maxL, mina, maxa, minb, maxb:     |\n       |            \
    \      | minimum and maximum values for L*a*b*   |\n       +------------------+-----------------------------------------+\n\
    \       | DefaultImageColor| <n>: background color                   |\n     \
    \  +------------------+-----------------------------------------+\n       | StripRowCounts\
    \   | <n>: number of scanlines in each strip  |\n       +------------------+-----------------------------------------+\n\
    \       | ImageLayer       | n, m: layer number, imaging sequence    |\n     \
    \  |                  | (e.g., strip number)                    |\n       +------------------+-----------------------------------------+\n\
    \       | GlobalParameters | IFD: global parameters IFD              |\n     \
    \  | IFD*             |                                         |\n       +------------------+-----------------------------------------+\n\
    \       | ProfileType*     | n: type of data stored in TIFF file     |\n     \
    \  +------------------+-----------------------------------------+\n       | FaxProfile*\
    \      | n: ITU-compatible fax mode              |\n       +------------------+-----------------------------------------+\n\
    \       | CodingMethods*   | n: compression algorithms used in file  |\n     \
    \  +------------------+-----------------------------------------+\n       | ModeNumber*\
    \      | n: version of ITU fax standard          |\n       +------------------+-----------------------------------------+\n\
    \       +------------------------------------------------------------+\n     \
    \  | VersionYear*     | byte sequence: year of ITU fax standard |\n       +------------------+-----------------------------------------+\n"
- title: 9. MIME content-type image/tiff
  contents:
  - "9. MIME content-type image/tiff\n   [TIFF-REG] describes the registration of\
    \ the MIME content-type\n   image/tiff to refer to TIFF encoded image data. When\
    \ transported by\n   MIME, the TIFF content defined by this document must be encoded\n\
    \   within an image/tiff content type. In addition, an optional\n   \"application\"\
    \ parameter is defined for image/tiff to identify a\n   particular application's\
    \ subset of TIFF and TIFF extensions for the\n   encoded image data, if it is\
    \ known. Typically, this would be used to\n   assist the recipient in dispatching\
    \ a suitable rendering package to\n   handle the display or processing of the\
    \ image file.\n"
- title: 9.1 Refinement of MIME content-type image/tiff for Facsimile
  contents:
  - "9.1 Refinement of MIME content-type image/tiff for Facsimile\n   Applications\n\
    \   Since this document defines facsimile specific profiles of TIFF, it\n   is\
    \ useful to note an appropriate application parameter for the\n   image/tiff MIME\
    \ content-type.\n   The two values of the image/tiff application parameter as\
    \ defined for\n   facsimile are shown below, separated by a comma:\n       faxbw,\
    \ faxcolor\n   The \"faxbw\" application parameter is suitable for use by applications\n\
    \   that can process one or more TIFF for facsimile profiles or subsets\n   used\
    \ for the encoding of black and white facsimile data.\n   The \"faxcolor\" application\
    \ parameter is suitable for use by\n   applications that can process one or more\
    \ TIFF for facsimile profiles\n   or subsets that can be used for the encoding\
    \ of black and white, AND\n   color facsimile data.\n   Since this document defines\
    \ several profiles of TIFF for facsimile,\n   the following rules should be followed\
    \ when setting the application\n   parameter value. For TIFF image data which\
    \ is encoded for the\n   profiles of TIFF for Facsimile that support black-and-white\
    \ image\n   data (Profiles S, F or J), applications which use one of these\n \
    \  profiles or a subset should set the value of the application\n   parameter\
    \ to \"faxbw\". For TIFF image data which is encoded for the\n   defined profiles\
    \ of TIFF for Facsimile that support color image data\n   (Profiles C, L or M),\
    \ as well as black-and-white image data,\n   applications which use one of these\
    \ profiles or a subset should set\n   the value of the application parameter to\
    \ \"faxcolor\".\n   An example of the use of the image/tiff MIME Content-type\
    \ with the\n   application parameter set with the value 'faxbw' follows:\n   \
    \    Content-type: image/tiff; application=faxbw\n   In this example, use of this\
    \ parameter value will enable applications\n   to identify the content as being\
    \ within a profile or subset of TIFF\n   for Facsimile that is suitable for encoding\
    \ black and white image\n   data, Before attempting to process the image data.\n\
    \   In a similar respect, an example of the image/tiff MIME Content-type\n   with\
    \ the application parameter setting suitable for handling a color\n   subset or\
    \ profile of TIFF for facsimile is shown below:\n       Content-type: image/tiff;\
    \ application=faxcolor\n"
- title: 10. Security Considerations
  contents:
  - "10. Security Considerations\n   This document describes a file format for Internet\
    \ fax, which is a\n   series of profiles of TIFF for facsimile. As such, it does\
    \ not create\n   any security issues not already identified in [TIFF-REG], in\
    \ its use\n   of fields as defined in [TIFF].  There are also new TIFF fields\n\
    \   defined within this specification, but they are of a purely\n   descriptive\
    \ nature, so that no new security risks are incurred.\n   Further, the encoding\
    \ specified in this document does not in any way\n   preclude the use of any Internet\
    \ security protocol to encrypt,\n   authenticate, or non-repudiate TIFF-encoded\
    \ facsimile messages.\n"
- title: 11. References
  contents:
  - "11. References\n   [REQ] Bradner, S, \"Key words for use in RFCs to Indicate\
    \ Requirement\n   Levels\", RFC 2119, March 1997.\n   [T.4] ITU-T Recommendation\
    \ T.4, Standardization of group 3 facsimile\n   apparatus for document transmission,\
    \ October 1997\n   [T.6] ITU-T Recommendation T.6, Facsimile coding schemes and\
    \ coding\n   control functions for group 4 facsimile apparatus, November 1988\n\
    \   [T.30] ITU-T Recommendation T.30 - Procedures for Document Facsimile\n   Transmission\
    \ in the General Switched Telephone Network, June 1996\n   [T.42] ITU-T Recommendation\
    \ T.42, Continuous-tone colour\n   representation method for facsimile, February\
    \ 1996\n   [T.43] ITU-T Recommendation T.43, Colour and gray-scale image\n   representations\
    \ using lossless coding scheme for facsimile, February\n   1997\n   [T.44] ITU-T\
    \ Recommendation T.44, Mixed Raster Content (MRC), October\n   1997.\n   [T.81]\
    \ ITU-T Recommendation T.81, Information technology - Digital\n   compression\
    \ and coding of continuous-tone still images - Requirements\n   and guidelines,\
    \ September 1992\n   [T.82] ITU-T Recommendation T.82, Information technology\
    \ - Coded\n   representation of picture and audio information - Progressive bi-\n\
    \   level image compression, March 1995\n   [T.85] ITU-T Recommendation T.85,\
    \ Application profile for\n   Recommendation T.82 - Progressive bi-level image\
    \ compression (JBIG\n   coding scheme) for facsimile apparatus, August 1995\n\
    \   [TIFF] Tag Image File Format, Revision 6.0, Adobe Developers\n   Association,\
    \ June 3, 1992,\n   ftp://ftp.adobe.com/pub/adobe/devrelations/\n   devtechnotes/pdffiles/tiff6.pdf\n\
    \        The TIFF 6.0 specification dated June 3, 1992 specification (c)\n   \
    \     1986-1988, 1992 Adobe Systems Incorporated. All Rights Reserved.\n   [TIFF-FY]\
    \ Parsons, G.  and J. Rafferty, \"Tag Image File Format (TIFF)\n   - F Profile\
    \ for Facsimile\", RFC 2306, March 1998.\n   [TIFF-F0] TIFF Class F specification,\
    \ Apr 28, 1990,\n   ftp://ftp.faximum.com/pub/documents/tiff_f.txt\n   [TIFF-REG]\
    \ Parsons, G., Rafferty J. and S. Zilles, \"Tag Image File\n   Format (TIFF) -\
    \ image/tiff MIME Sub-type Registration\",  RFC 2302,\n   March 1998.\n   [TTN1]\
    \ Adobe PageMaker 6.0 TIFF Technical Notes, Sept. 14, 1995,\n   http://www.adobe.com/supportservice/devrelations/PDFS/TN/TIFFPM6.pdf\n\
    \   [TTN2] Draft TIFF Technical Note 2, Replacement TIFF/JPEG\n   specification,\
    \ March 17, 1995,\n   ftp://ftp.sgi.com/graphics/tiff/TTN2.draft.txt\n   [VPIM2]\
    \ Vaudreui,l G. and G. Parsons, \"Voice Profile for Internet\n   Mail - version\
    \ 2\", work in progress, <draft-ema-vpim-06.txt>\n   The ITU-T Recommendations\
    \ are available at http://www.itu.ch.\n"
- title: 12. Authors' Addresses
  contents:
  - "12. Authors' Addresses\n   Lloyd McIntyre                     Stephen Zilles\n\
    \   Xerox Corporation                  Adobe Systems Inc.\n   Mailstop PAHV-305\
    \                  Mailstop W14\n   3400 Hillview Ave.                 345 Park\
    \ Avenue\n   Palo Alto, CA 94304 USA            San Jose, CA 95110-2704, USA\n\
    \   Voice: +1-650-813-6762             Voice: +1-408-536-4766\n   Fax: +1-650-845-2340\
    \               Fax: +1-408-536-4042\n   Email: lmcintyre@adoc.xerox.com    Email:\
    \ szilles@adobe.com\n   Robert Buckley                     Dennis Venable\n  \
    \ Xerox Corporation                  Xerox Corporation\n   Mailstop 0128-30E \
    \                 Mailstop 0128-27E\n   800 Phillips Road                  800\
    \ Phillips Road\n   Webster, NY 14580, USA             Webster, NY 14580, USA\n\
    \   Voice: +1-716-422-1282             Voice: +1-716-422-8009\n   Fax: +1-716-422-6117\
    \               Fax: +1-716-422-6117\n   Email: Rob_Buckley@wb.xerox.com    Email:\
    \ venable@wrc.xerox.com\n   Glenn S. Parsons                   James Rafferty\n\
    \   Northern Telecom                   Human Communications\n   P.O. Box 3511,\
    \ Station C           12 Kevin Drive\n   Ottawa, ON  K1Y 4H7, Canada        Danbury,\
    \ CT 06811-2901, USA\n   Phone: +1-613-763-7582             Phone: +1-203-746-4367\n\
    \   Fax: +1-613-763-2697               Fax: +1-203-746-4367\n   Email: Glenn.Parsons@Nortel.ca\
    \     Email: Jrafferty@worldnet.att.net\n"
- title: 'Annex A:  Summary of TIFF Fields for Internet Fax'
  contents:
  - "Annex A:  Summary of TIFF Fields for Internet Fax\n   This annex includes tables\
    \ which list by mode the TIFF fields used in\n   the proposed fax file format.\
    \  The fields are organized into 3\n   categories:\n      1)  TIFF Baseline Fields\n\
    \      2)  TIFF Extension Fields\n      3)  New Fields.\n   The tables include\
    \ the allowed values for each fax mode. Entries\n   other than explicit numbers\
    \ are described by:\n      n        - single number\n      n, m     - 2 numbers\n\
    \      a, b, c  - 3 numbers\n      r        - rational number\n      <n>     \
    \ - array of numbers\n      <b>      - byte sequence\n      {ASCII}  - string\n\
    \      IFD      - IFD byte offset\n      <IFD>    - array of IFD byte offsets\n\
    \   A blank entry in the table indicates that the field is not used by\n   that\
    \ particular fax mode.\n"
- title: Table A.1  TIFF Baseline Fields
  contents:
  - "Table A.1  TIFF Baseline Fields\n            +---------------------------------------------------------+\n\
    \            |                    Fax Mode/Profile                     |\n   \
    \         +---------------------------------------------------------|\n      \
    \      | Minimal | Extended |  JBIG  |  Lossy  |Lossless| Mixed  |\n +----------|\
    \   B&W   |    B&W   |  B&W   |  Color  | Color  | Raster |\n |   TIFF   |   \
    \      |          |        |         |        | Content|\n |  Field   |    S \
    \   |     F    |   J    |    C    |   L    |   M    |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | BitsPer  | 1       | 1        | 1      | 8, 12   | 1, 2-8 | 1, 2-8 |\n | Sample\
    \   |         |          |        |         | 9-16   | 9-16   |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | ColorMap |         |          |        |         | <n>    | <n>    |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | Compres- | 3       | 3, 4     | 9      | 7       | 10     | 3, 4, 7|\n | sion\
    \     |         |          |        |         |        | 9,10   |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | DateTime |         | {ASCII}  | {ASCII}| {ASCII} | {ASCII}| {ASCII}|\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | FillOrder| 2       | 1, 2     | 1, 2   | 1, 2    | 1, 2   | 1,2    |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ +----------+---------+----------+--------+---------+--------+--------+\n | ImageDes-|\
    \         | {ASCII}  | {ASCII}| {ASCII} | {ASCII}| {ASCII}|\n | cription |   \
    \      |          |        |         |        |        |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | Image-   | n       | n        | n      | n       | n      | n      |\n | Length\
    \   |         |          |        |         |        |        |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | Image-   | 1728    | 1728, 2048, 2432  |   864, 1024, 1216, 1728,  |\n | Width\
    \    |         | 2592, 3072, 3456  |  2048, 2432, 2592, 3072,  |\n |         \
    \ |         | 3648, 4096, 4864  |  3456, 3648, 4096, 4864   |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | NewSub-  | 2       | 2        | 2      | 2       | 2      | 16, 18 |\n | FileType\
    \ |         |          |        |         |        |        |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | Orien-   | 1       | 1-8      | 1-8    | 1-8     | 1-8    | 1-8    |\n | tation\
    \   |         |          |        |         |        |        |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | Photo-   | 0       | 0, 1     | 0, 1   | 10      | 2, 5,  | 0, 1,  |\n | metric-\
    \  |         |          |        |         | 10     | 2, 5,  |\n | Interp-  |\
    \         |          |        |         |        | 10     |\n | retation |   \
    \      |          |        |         |        |        |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | Resolu-  | 2       | 2, 3     | 2, 3   | 2, 3    | 2, 3   | 2, 3   |\n | tionUnit\
    \ |         |          |        |         |        |        |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | RowsPer- | n       | n        | n      | n       | n      | n      |\n | Strip\
    \    |         |          |        |         |        |        |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | Samples- | 1       | 1        | 1      | 1, 3    | 1, 3, 4| 1, 3, 4|\n | PerPixel\
    \ |         |          |        |         |        |        |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | Software |         | {ASCII}  | {ASCII}| {ASCII} | {ASCII}| {ASCII}|\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | Strip-   | n       | <n>      | <n>    | <n>     | <n>    | <n>    |\n | Byte-\
    \    |         |          |        |         |        |        |\n | Counts  \
    \ |         |          |        |         |        |        |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | Strip-   | n       | <n>      | <n>    | <n>     | <n>    | <n>    |\n | Offsets\
    \  |         |          |        |         |        |        |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | XResolu- | 204     | 200, 204, 300     |    100, 200, 300, 400     |\n | tion\
    \     | 200     | 400, 408          |                           |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | YResolu- | 98, 196 | 98, 196, 100, 200 |    100, 200, 300, 400     |\n | tion\
    \     | 100,200 | 300, 391, 400     |                           |\n +----------+---------+----------+--------+---------+--------+--------+\n"
- title: Table A.2  TIFF Extension Fields
  contents:
  - "Table A.2  TIFF Extension Fields\n            +---------------------------------------------------------+\n\
    \            |                    Fax Mode/Profile                     |\n   \
    \         +---------------------------------------------------------|\n      \
    \      | Minimal | Extended |  JBIG  |  Lossy  |Lossless| Mixed  |\n +----------|\
    \   B&W   |    B&W   |  B&W   |  Color  | Color  | Raster |\n |   TIFF   |   \
    \      |          |        |         |        | Content|\n |  Field   |    S \
    \   |     F    |   J    |    C    |   L    |   M    |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | Chroma-  |         |          |        | 1       |        | 1      |\n | Position-|\
    \         |          |        |         |        |        |\n | ing      |   \
    \      |          |        |         |        |        |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | Chroma-  |         |          |        | <1, 1>  |        | <1, 1> |\n | SubSampl-|\
    \         |          |        | <2, 2>  |        | <2, 2> |\n | ing      |   \
    \      |          |        |         |        |        |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | Document-|         | {ASCII}  | {ASCII}| {ASCII} | {ASCII}| {ASCII}|\n | Name\
    \     |         |          |        |         |        |        |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | Indexed  |         |          |        |         | 0,1    | 0,1    |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | Page-    | n, m    | n, m     | n, m   | n, m    | n, m   | n, m   |\n | Number\
    \   |         |          |        |         |        |        |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | SubIFDs  |         |          |        |         |        | <IFD>  |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | T4Options| 0, 4    | 0, 1,    |        |         |        | 0, 1,  |\n | \
    \         |         | 4, 5     |        |         |        | 4, 5   |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | T6Options|         | 0        |        |         |        | 0      |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | XPosition|         |          |        |         |        | r      |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | YPosition|         |          |        |         |        | r      |\n +----------+---------+----------+--------+---------+--------+--------+\n"
- title: Table A.3   New Fields
  contents:
  - "Table A.3   New Fields\n            +---------------------------------------------------------+\n\
    \            |                    Fax Mode/Profile                     |\n   \
    \         +---------------------------------------------------------|\n      \
    \      | Minimal | Extended |  JBIG  |  Lossy  |Lossless| Mixed  |\n +----------|\
    \   B&W   |    B&W   |  B&W   |  Color  | Color  | Raster |\n |   TIFF   |   \
    \      |          |        |         |        | Content|\n |  Field   |    S \
    \   |     F    |   J    |    C    |   L    |   M    |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | BadFax-  |         | n        |        |         |        |        |\n | Lines\
    \    |         |          |        |         |        |        |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | CleanFax-|         | 0, 1, 2  |        |         |        |        |\n | Data\
    \     |         |          |        |         |        |        |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | Coding-  |         |          | n      | n       | n      | n      |\n | Method\
    \   |         |          |        |         |        |        |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | Consecu- |         | n        |        |         |        |        |\n | tiveBad-\
    \ |         |          |        |         |        |        |\n | FaxLines | \
    \        |          |        |         |        |        |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | Decode   |         |          |        | <r>     | <r>    | <r>    |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | Default- |         |          |        |         |        | <n>    |\n |ImageColor|\
    \         |          |        |         |        |        |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | Fax-     |         |          | n      | n       | n      | n      |\n | Profile\
    \  |         |          |        |         |        |        |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | Global-  |         | IFD      | IFD    | IFD     | IFD    | IFD    |\n | Parame-\
    \  |         |          |        |         |        |        |\n | tersIFD  |\
    \         |          |        |         |        |        |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | Image-   |         |          |        |         |        | n, m   |\n | Layer\
    \    |         |          |        |         |        |        |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | Mode-    |         |          |        |         |        | n      |\n | Number\
    \   |         |          |        |         |        |        |\n +----------+---------+----------+--------+---------+--------+--------|\n\
    \ | Profile- |         |          | n      | n       | n      | n      |\n | Type\
    \     |         |          |        |         |        |        |\n +--------------------------------------------------------------------+\n\
    \ +----------+---------+----------+--------+---------+--------+--------+\n | Strip-\
    \   |         |          |        |         |        | <n>    |\n | RowCounts|\
    \         |          |        |         |        |        |\n +----------+---------+----------+--------+---------+--------+--------+\n\
    \ | Version- |         |          |        | <b>     |<b>     |        |\n | Year\
    \     |         |          |        |         |        |        |\n +----------+---------+----------+--------+---------+--------+--------+\n"
- title: Annex B.  IANA Registration for image/tiff Application Parameter
  contents:
  - 'Annex B.  IANA Registration for image/tiff Application Parameter

    '
- title: Values used for facsimile
  contents:
  - "Values used for facsimile\n   To: IANA@isi.edu\n   Subject: Registration of new\
    \ Application parameter values for\n   image/tiff\n   MIME media type name: image/tiff\n\
    \   Optional parameters: Application\n   New Value(s): faxbw, faxcolor\n   Description\
    \ of Use:\n   faxbw - The \"faxbw\" application parameter is suitable for use\
    \ by\n   applications that can process one or more TIFF for facsimile profiles\n\
    \   or subsets used for the encoding of black-and-white facsimile data.\n   The\
    \ definition of the use of this value is contained in Section 9 of\n   this document\
    \ (TIFFPLUS).\n   Faxcolor - The \"faxcolor\" application parameter is suitable\
    \ for use\n   by applications that can process one or more TIFF for facsimile\n\
    \   profiles or subsets that can be used for the encoding of black and\n   white,\
    \ AND color facsimile data. The definition of the use of this\n   value is contained\
    \ in Section 9 of this document (TIFFPLUS).\n"
- title: 'Security Considerations:'
  contents:
  - "Security Considerations:\n   Security considerations related to use of the TIFF\
    \ subsets described\n   by the \"faxbw\" and \"faxcolor\" values of the Application\
    \ parameter are\n   identified in Section 10 of this document (TIFFPLUS).\n"
- title: 'Persons & email addresses to contact for further information:'
  contents:
  - "Persons & email addresses to contact for further information:\n   Glenn W. Parsons\
    \ (Glenn.Parsons@Nortel.ca)\n   James Rafferty (Jrafferty@worldnet.att.net)\n\
    \   Stephen Zilles (szilles@adobe.com)\n   Change Controller:  Stephen Zilles\n"
- title: 'INFORMATION TO THE SUBMITTER:'
  contents:
  - "INFORMATION TO THE SUBMITTER:\n   The accepted registrations will be listed in\
    \ the \"Assigned Numbers\"\n   series of RFCs.  The information in the registration\
    \ form is freely\n   distributable.\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (1998).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
