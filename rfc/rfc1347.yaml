- title: __initial_text__
  contents:
  - "        Network Working Group                                  Ross Callon\n\
    \        Request for Comments: 1347                                     DEC\n\
    \                    TCP and UDP with Bigger Addresses (TUBA),\n             \
    \ A Simple Proposal for Internet Addressing and Routing\n        Status of the\
    \ Memo\n        This memo provides information for the Internet community. It\n\
    \        does not specify an Internet standard. Distribution of this\n       \
    \ memo is unlimited.\n        1 Summary\n        The Internet is approaching a\
    \ situation in which the current IP\n        address space is no longer adequate\
    \ for global addressing\n        and routing. This is causing problems including:\
    \ (i) Internet\n        backbones and regionals are suffering from the need to\
    \ maintain\n        large amounts of routing information which is growing rapidly\
    \ in\n        size (approximately doubling each year); (ii) The Internet is\n\
    \        running out of IP network numbers to assign. There is an urgent\n   \
    \     need to develop and deploy an approach to addressing and routing\n     \
    \   which solves these problems and allows scaling to several orders\n       \
    \ of magnitude larger than the existing Internet. However, it is\n        necessary\
    \ for any change to be deployed in an incremental manner,\n        allowing graceful\
    \ transition from the current Internet without\n        disruption of service.\
    \ [1]\n        This paper describes a simple proposal which provides a long-term\n\
    \        solution to Internet addressing, routing, and scaling. This\n       \
    \ involves a gradual migration from the current Internet Suite\n        (which\
    \ is based on Internet applications, running over TCP or\n        UDP, running\
    \ over IP) to an updated suite (based on the same\n        Internet applications,\
    \ running over TCP or UDP, running over CLNP\n        [2]). This approach is known\
    \ as \"TUBA\" (TCP & UDP with Bigger\n        Addresses).\n        This paper\
    \ describes a proposal for how transition may be\n        accomplished. Description\
    \ of the manner in which use of CLNP,\n        NSAP addresses, and related network/Internet\
    \ layer protocols\n        (ES-IS, IS-IS, and IDRP) allow scaling to a very large\
    \ ubiquitous\n        worldwide Internet is outside of the scope of this paper.\n\
    \        Originally, it was thought that any practical proposal needed to\n  \
    \      address the immediate short-term problem of routing information\n     \
    \   explosion (in addition to the long-term problem of scaling to a\n        worldwide\
    \ Internet). Given the current problems caused by\n        excessive routing information\
    \ in IP backbones, this could require\n        older IP-based systems to talk\
    \ to other older IP-based systems\n        over intervening Internet backbones\
    \ which did not support IP.\n        This in turn would require either translation\
    \ of IP packets into\n        CLNP packets and vice versa, or encapsulation of\
    \ IP packets\n        inside CLNP packets. However, other shorter-term techniques\
    \ (for\n        example [3]) have been proposed which will allow the Internet\
    \ to\n        operate successfully for several years using the current IP\n  \
    \      address space. This in turn allows more time for IP-to-CLNP\n        migration,\
    \ which in turn allows for a much simpler migration\n        technique.\n    \
    \    The TUBA proposal therefore makes use of a simple long-term\n        migration\
    \ proposal based on a gradual update of Internet Hosts\n        (to run Internet\
    \ applications over CLNP) and DNS servers (to\n        return larger addresses).\
    \ This proposal requires routers to be\n        updated to support forwarding\
    \ of CLNP (in addition to IP).\n        However, this proposal does not require\
    \ encapsulation nor\n        translation of packets nor address mapping. IP addresses\
    \ and NSAP\n        addresses may be assigned and used independently during the\n\
    \        migration period. Routing and forwarding of IP and CLNP packets\n   \
    \     may be done independently.\n        This paper provides a draft overview\
    \ of TUBA. The detailed\n        operation of TUBA has been left for further study.\n\
    \        2 Long-Term Goal of TUBA\n        This proposal seeks to take advantage\
    \ of the success of the\n        Internet Suite, the greatest part of which is\
    \ probably the use of\n        IP itself. IP offers a ubiquitous network service,\
    \ based on\n        datagram (connectionless) operation, and on globally significant\n\
    \        IP addresses which are structured to aid routing. Unfortunately,\n  \
    \      the limited 32-bit IP address is gradually becoming inadequate\n      \
    \  for routing and addressing in a global Internet. Scaling to the\n        anticipated\
    \ future size of the worldwide Internet requires much\n        larger addresses\
    \ allowing a multi-level hierarchical address\n        assignment.\n        If\
    \ we had the luxury of starting over from scratch, most likely\n        we would\
    \ base the Internet on a new datagram internet protocol\n        with much larger\
    \ multi-level addresses. In principle, there are\n        many choices available\
    \ for a new datagram internet protocol. For\n        example, the current IP could\
    \ be augmented by addition of larger\n        addresses, or a new protocol could\
    \ be developed. However, the\n        development, standardization, implementation,\
    \ testing, debugging\n        and deployment  of a new protocol (as well as associated\
    \ routing\n        and host-to-router protocols) would take a very large amount\
    \ of\n        time and energy, and is not guaranteed to lead to success. In\n\
    \        addition, there is already such a protocol available. In\n        particular,\
    \ the ConnectionLess Network Protocol (CLNP [1]) is\n        very similar to IP,\
    \ and offers the required datagram service and\n        address flexibility. CLNP\
    \ is currently being deployed in the\n        Internet backbones and regionals,\
    \ and is available in vendor\n        products. This proposal does not actually\
    \ require use of CLNP\n        (the main content of this proposal is a graceful\
    \ migration path\n        from the current IP to a new IP offering a larger address\
    \ space),\n        but use of CLNP will be assumed.\n        This proposal seeks\
    \ to minimize the risk associated with\n        migration to a new IP address\
    \ space. In addition, this proposal\n        is motivated by the requirement to\
    \ allow the Internet to scale,\n        which implies use of Internet applications\
    \ in a very large\n        ubiquitous worldwide Internet. It is therefore proposed\
    \ that\n        existing Internet transport and application protocols continue\
    \ to\n        operate unchanged, except for the replacement of 32-bit IP\n   \
    \     addresses with larger addresses. The use of larger addresses will\n    \
    \    have some effect on applications, particularly on the Domain Name\n     \
    \   Service. TUBA does not mean having to move over to OSI\n        completely.\
    \ It would mean only replacing IP with CLNP. TCP, UDP,\n        and the traditional\
    \ TCP/IP applications would run on top of CLNP.\n        The long term goal of\
    \ the TUBA proposal involves transition to a\n        worldwide Internet which\
    \ operates much as the current Internet,\n        but with CLNP replacing IP and\
    \ with NSAP addresses replacing IP\n        addresses. Operation of this updated\
    \ protocol suite will be very\n        similar to the current operation. For example,\
    \ in order to\n        initiate communication with another host, a host will obtain\
    \ a\n        internet address in the same manner that it normally does, except\n\
    \        that the address would be larger. In many or most cases, this\n     \
    \   implies that the host would contact the DNS server, obtain a\n        mapping\
    \ from the known DNS name to an internet address, and send\n        application\
    \ packets encapsulated in TCP or UDP, which are in turn\n        encapsulated\
    \ in CLNP. This long term goal requires a\n        specification for how TCP and\
    \ UDP are run over CLNP. Similarly,\n        DNS servers need to be updated to\
    \ deal with NSAP addresses, and\n        routers need to be updated to forward\
    \ CLNP packets. This proposal\n        does not involve any wider-spread migration\
    \ to OSI protocols.\n        TUBA does not actually depend upon DNS for its operation.\
    \ Any\n        method that is used for obtaining Internet addresses may be\n \
    \       updated to be able to return larger (NSAP) addresses, and then\n     \
    \   can be used with TUBA.\n        3 Migration\n        Figure 1 illustrates\
    \ the basic operation of TUBA. Illustrated is\n        a single Internet Routing\
    \ Domain, which is also interconnected\n        with Internet backbones and/or\
    \ regionals. Illustrated are two \n        \"updated\" Internet Hosts N1 and N2,\
    \ as well as two older hosts H1\n        and H2, plus a DNS server and two border\
    \ routers. It is assumed\n        that the routers internal to the routing domain\
    \ are capable of\n        forwarding both IP and CLNP traffic (this could be done\
    \ either by\n        using multi-protocol routers which can forward both protocol\n\
    \        suites, or by using a different set of routers for each suite).\n   \
    \                      ................    ................\n                \
    \         .    H1        .    .  Internet    .\n                         .   \
    \           .-R1-.              .\n                         .  H2          . \
    \   .  Backbones   .\n                         .        DNS   .    .         \
    \     .\n                         .              .    .     and      .\n     \
    \                    .      N1      .    .              .\n                  \
    \       .              .    .  Regionals   .\n                         .     \
    \     N2  .-R2-.              .\n                         ................   \
    \ ................\n                           Key\n                      DNS\
    \    DNS server\n                       H     IP host\n                      \
    \ N     Updated Internet host\n                       R     Border Router\n  \
    \                          Figure 1 - Overview of TUBA\n        Updated Internet\
    \ hosts talk to old Internet hosts using the\n        current Internet suite unchanged.\
    \ Updated Internet hosts talk to\n        other updated Internet hosts using (TCP\
    \ or UDP over) CLNP. This\n        implies that updated Internet hosts must be\
    \ able to send either\n        old-style packets (using IP), or new style packet\
    \ (using CLNP).\n        Which to send is determined via the normal name-to-address\n\
    \        lookup.\n        Thus, suppose that host N1 wants to communicate with\
    \ host H1. In\n        this case, N1 asks its local DNS server for the address\n\
    \        associated with H1. In this case, since H1 is a older\n        (not-updated)\
    \ host, the address available for H1 is an IP\n        address, and thus the DNS\
    \ response returned to N1 specifies an IP\n        address. This allows N1 to\
    \ know that it needs to send a normal\n        old-style Internet suite packet\
    \ (encapsulated in IP) to H1.\n        Suppose that host N1 wants to communicate\
    \ with host N2. In this\n        case, again N1 contacts the DNS server. If the\
    \ routers in the\n        domain have not been updated (to forward CLNP), or if\
    \ the DNS\n        resource record for N2 has not been updated, then the DNS server\n\
    \        will respond with a normal IP address, and the communication\n      \
    \  between N1 and N2 will use IP (updated hosts in environments\n        where\
    \ the local routers do not handle CLNP are discussed in\n        section 6.3).\
    \ However, assuming that the routers in the domain\n        have been updated\
    \ (to forward CLNP), that the DNS server has been\n        updated (to be able\
    \ to return NSAP addresses), and that the\n        appropriate resource records\
    \ for NSAP addresses have been\n        configured into the DNS server, then the\
    \ DNS server will respond\n        to N1 with the NSAP address for N2, allowing\
    \ N1 to know to use\n        CLNP (instead of IP) for communication with N2.\n\
    \        A new resource record type will be defined for NSAP addresses.\n    \
    \    New hosts ask for both the new and old (IP address) resource\n        records.\
    \ Older DNS servers will not have the new resource record\n        type, and will\
    \ therefore respond with only IP address\n        information. Updated DNS servers\
    \ will have the new resource\n        record information for the requested DNS\
    \ name only if the\n        associated host has been updated (otherwise the updated\
    \ DNS\n        server again will respond with an IP address).\n        Hosts and/or\
    \ applications which do not use DNS operate in a\n        similar method. For\
    \ example, suppose that local name to address\n        records are maintained\
    \ in host table entries on each local\n        workstation. When a workstation\
    \ is updated to be able to run\n        Internet applications over CLNP, then\
    \ the host table on the host\n        may also be updated to contain updated NSAP\
    \ addresses for other\n        hosts which have also been updated. The associated\
    \ entries for\n        non-updated hosts would continue to contain IP addresses.\
    \ Thus,\n        again when an updated host wants to initiate communication with\n\
    \        another host, it would look up the associated Internet address in\n \
    \       the normal manner. If the address returned is a normal 32-bit IP\n   \
    \     address, then the host would initiate a request using an Internet\n    \
    \    application over TCP (or UDP) over IP (as at present). If the\n        returned\
    \ address is a longer NSAP address, then the host would\n        initiate a request\
    \ using an Internet application over TCP (or\n        UDP) over CLNP.\n      \
    \  4 Running TCP and UDP Over CLNP\n        TCP is run directly on top of CLNP\
    \ (i.e., the TCP packet is\n        encapsulated directly inside a CLNP packet\
    \ - the TCP header\n        occurs directly following the CLNP header). Use of\
    \ TCP over CLNP\n        is straightforward, with the only non-trivial issue being\
    \ how to\n        generate the TCP pseudo-header (for use in generating the TCP\n\
    \        checksum).\n        Note that TUBA runs TCP over CLNP on an end-to-end\
    \ basis (for\n        example, there is no intention to translate CLNP packets\
    \ into IP\n        packets). This implies that only \"consenting updated systems\"\
    \n        will be running TCP over CLNP; which in turn implies that, for\n   \
    \     purposes of generating the TCP pseudoheader from the CLNP header,\n    \
    \    backward compatibility with existing systems is not an issue.\n        There\
    \ are therefore several options available for how to generate\n        the pseudoheader.\
    \ The pseudoheader could be set to all zeros\n        (implying that the TCP header\
    \ checksum would only be covering the\n        TCP header). Alternatively, the\
    \ pseudoheader could be calculated\n        from the CLNP header. For example,\
    \ the \"source address\" in the\n        TCP pseudoheader could be replaced with\
    \ two bytes of zero plus a\n        two byte checksum run on the source NSAP address\
    \ length and\n        address (and similarly for the destination address); the\n\
    \        \"protocol\" could be replaced by the destination address selector\n\
    \        value; and the \"TCP Length\" could be calculated from the CLNP\n   \
    \     packet in the same manner that it is currently calculated from\n       \
    \ the IP packet. The details of how the pseudoheader is composed is\n        for\
    \ further study.\n        UDP is transmitted over CLNP in the same manner. In\
    \ particular,\n        the UDP packet is encapsulated directly inside a CLNP packet.\n\
    \        Similarly, the same options are available for the UDP pseudo-\n     \
    \   header as for the TCP pseudoheader.\n        5 Updates to the Domain Name\
    \ Service\n        TUBA requires that a new DNS resource record entry type\n \
    \       (\"long-address\") be defined, to store longer Internet (i.e.,\n     \
    \   NSAP) addresses. This resource record allows mapping from DNS\n        names\
    \ to NSAP addresses, and will contain entries for systems\n        which are able\
    \ to run Internet applications, over TCP or UDP,\n        over CLNP.\n       \
    \ The presence of a \"long-address\" resource record for mapping a\n        particular\
    \ DNS name to a particular NSAP address can be used to\n        imply that the\
    \ associated system is an updated Internet host.\n        This specifically does\
    \  not imply that the system is capable of\n        running OSI protocols for\
    \ any other purpose. Also, the NSAP\n        address used for running Internet\
    \ applications (over TCP or UDP\n        over CLNP) does not need to have any\
    \ relationship with other NSAP\n        addresses which may be assigned to the\
    \ same host. For example, a\n        \"dual stack\" host may be able to run Internet\
    \ applications over\n        TCP over CLNP, and may also be able to run OSI applications\
    \ over\n        TP4 over CLNP. Such a host may have a single NSAP address\n  \
    \      assigned (which is used for both purposes), or may have separate\n    \
    \    NSAP addresses assigned for the two protocol stacks. The\n        \"long-address\"\
    \ resource record, if present, may be assumed to\n        contain the correct\
    \ NSAP address for running Internet applications\n        over CLNP, but may not\
    \ be assumed to contain the correct NSAP\n        address for any other purpose.\n\
    \        The backward translation (from NSAP address to DNS name) is\n       \
    \ facilitated by definition of an associated resource record. This\n        resource\
    \ record is known as \"long-in-addr.arpa\", and is used in a\n        manner analogous\
    \ to the existing \"in-addr.arpa\".\n        Updated Internet hosts, when initiating\
    \ communication with\n        another host, need to know whether that host has\
    \ been updated.\n        The host will request the address-class \"internet address\"\
    ,\n        entry-type \"long-address\" from its local DNS server. If the\n   \
    \     local DNS server has not yet been updated, then the long address\n     \
    \   resource record will not be available, and an error response will\n      \
    \  be returned. In this case, the updated hosts must then ask for\n        the\
    \ regular Internet address. This allows updated hosts to be\n        deployed\
    \ in environments in which the DNS servers have not yet\n        been updated.\n\
    \        An updated DNS server, if asked for the long-address\n        corresponding\
    \ to a particular DNS name, does a normal DNS search\n        to obtain the information.\
    \ If the long-address corresponding to\n        that name is not available, then\
    \ the updated DNS server will\n        return the resource record type containing\
    \ the normal 32-bit IP\n        address (if available). This allows more efficient\
    \ operation\n        between updated hosts and old hosts in an environment in\
    \ which\n        the DNS servers have been updated.\n        Interactions between\
    \ DNS servers can be done over either IP or\n        CLNP, in a manner analogous\
    \ to interactions between hosts. DNS\n        servers currently maintain entries\
    \ in their databases which allow\n        them to find IP addresses of other DNS\
    \ servers. These can be\n        updated to include a combination of IP addresses\
    \ and NSAP\n        addresses of other servers. If an NSAP address is available,\
    \ then\n        the communication with the other DNS server can use CLNP,\n  \
    \      otherwise the interaction between DNS servers uses IP. Initially,\n   \
    \     it is likely that all communication between DNS servers will use\n     \
    \   IP (as at present). During the migration process, the DNS servers\n      \
    \  can be updated to communicate with each other using CLNP.\n        6 Other\
    \ Technical Details\n        6.1 When 32-Bit IP Addresses Fail\n        Eventually,\
    \ the IP address space will become inadequate for\n        global routing and\
    \ addressing. At this point, the remaining older\n        (not yet updated) IP\
    \ hosts will not be able to interoperate\n        directly over the global Internet.\
    \ This time can be postponed by\n        careful allocation of IP addresses and\
    \ use of \"Classless\n        Inter-Domain Routing\" (CIDR [3]), and if necessary\
    \ by\n        encapsulation (either of IP in IP, or IP in CLNP). In addition,\n\
    \        the number of hosts affected by this can be minimized by\n        aggressive\
    \ deployment of updated software based on TUBA.\n        When the IP address space\
    \ becomes inadequate for global routing\n        and addressing, for purposes\
    \ of IP addressing the Internet will\n        need to be split into \"IP address\
    \ domains\". 32-bit IP addresses\n        will be meaningful only within an address\
    \ domain, allowing the\n        old IP hosts to continue to be used locally. For\
    \ communications\n        between domains, there are two possibilities: (i) The\
    \ user at an\n        old system can use application layer relays (such as mail\
    \ relays\n        for 822 mail, or by Telnetting to an updated system in order\
    \ to\n        allow Telnet or FTP to a remote system in another domain); or\n\
    \        (ii) Network Address Translation can be used [4].\n        6.2 Applications\
    \ which use IP Addresses Internally\n        There are some application protocols\
    \ (such as FTP and NFS) which\n        pass around and use IP addresses internally.\
    \ Migration to a\n        larger address space (whether based on CLNP or other\
    \ protocol)\n        will require either that these applications be limited to\
    \ local\n        use (within an \"IP address domain\" in which 32-bit IP addresses\n\
    \        are meaningful) or be updated to either: (i) Use larger network\n   \
    \     addresses instead of 32-bit IP addresses; or (ii) Use some other\n     \
    \   globally-significant identifiers, such as DNS names.\n        6.3 Updated\
    \ Hosts in IP-Only Environments\n        There may be some updated Internet hosts\
    \ which are deployed in\n        networks that do not yet have CLNP service, or\
    \ where CLNP service\n        is available locally, but not to the global Internet.\
    \ In these\n        cases, it will be necessary for the updated Internet hosts\
    \ to\n        know to initially send all Internet traffic (or all non-local\n\
    \        traffic) using IP, even when the remote system also has been\n      \
    \  updated. There are several ways that this can be accomplished,\n        such\
    \ as: (i) The host could contains a manual configuration\n        parameter controlling\
    \ whether to always use IP, or to use IP or\n        CLNP depending upon remote\
    \ address; (ii) The DNS resolver on the\n        host could be \"lied to\" to\
    \ believe that all remote requests are\n        supposed to go to some particular\
    \ server, and that server could\n        intervene and change all remote requests\
    \ for long-addresses into\n        requests for normal IP addresses.\n       \
    \ 6.4 Local Network Address Translation\n        Network Address Translation (NAT\
    \ [4]) has been proposed as a\n        means to allow global communication between\
    \ hosts which use\n        locally-significant IP addresses. NAT requires that\
    \ IP addresses\n        be mapped at address domain boundaries, either to globally\n\
    \        significant addresses, or to local addresses meaningful in the\n    \
    \    next address domain along the packet's path. It is possible to\n        define\
    \ a version of NAT which is \"local\" to an addressing domain,\n        in the\
    \ sense that (locally significant) IP packets are mapped to\n        globally\
    \ significant CLNP packets before exiting a domain, in a\n        manner which\
    \ is transparent to systems outside of the domain.\n        NAT allows old systems\
    \ to continue to be used globally without\n        application gateways, at the\
    \ cost of significant additional\n        complexity and possibly performance\
    \ costs (associated with\n        translation or encapsulation of network packets\
    \ at IP address\n        domain boundaries). NAT does not address the problem\
    \ of\n        applications which pass around and use IP addresses internally.\n\
    \        The details of Network Address Translation is outside of the\n      \
    \  scope of this document.\n        6.5 Streamlining Operation of CLNP\n     \
    \   CLNP contains a number of optional and/or variable length fields.\n      \
    \  For example, CLNP allows addresses to be any integral number of\n        bytes\
    \ up to 20 bytes in length. It is proposed to \"profile\" CLNP\n        in order\
    \ to allow streamlining of router operation. For example,\n        this might\
    \ involve specifying that all Internet hosts will use an\n        NSAP address\
    \ of precisely 20 bytes in length, and may specify\n        which optional fields\
    \ (if any) will be present in all CLNP\n        packets. This can allow all CLNP\
    \ packets transmitted by Internet\n        hosts to use a constant header format,\
    \ in order to speed up\n        header parsing in routers. The details of the\
    \ Internet CLNP\n        profile is for further study.\n        7 References\n\
    \        [1]    \"The IAB Routing and Addressing Task Force: Summary\n       \
    \        Report\", work in progress.\n        [2]    \"Protocol for Providing\
    \ the Connectionless-Mode Network\n               Service\", ISO 8473, 1988.\n\
    \        [3]    \"Supernetting: An Address Assignment and Aggregation\n      \
    \         Strategy\", V.Fuller, T.Li, J.Yu, and K.Varadhan, March \n         \
    \      1992.\n        [4]    \"Extending the IP Internet Through Address Reuse\"\
    , Paul\n               Tsuchiya, December 1991.\n        8 Security Considerations\n\
    \        Security issues are not discussed in this memo.\n        9 Author's Address\n\
    \        Ross Callon\n        Digital Equipment Corporation\n        550 King\
    \ Street, LKG 1-2/A19\n        Littleton, MA  01460-1289\n        Phone: 508-486-5009\n\
    \        Email: Callon@bigfut.lkg.dec.com\n"
