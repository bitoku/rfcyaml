- title: __initial_text__
  contents:
  - '               A SURVEY OF DATA REPRESENTATION STANDARDS

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This RFC discusses data representation conventions in\
    \ the\n   ARPA-Internet and suggests possible resolutions.  No proposals in\n\
    \   this document are intended as standards for the ARPA-Internet at this\n  \
    \ time.  Rather, it is hoped that a general consensus will emerge as to\n   the\
    \ appropriate approach to these issues, leading eventually to the\n   adoption\
    \ of ARPA-Internet standards.  Distribution of this memo is\n   unlimited.\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   This report is a comparison of several data representation\
    \ standards\n   that are currently in use.  The standards, or system type\n  \
    \ definitions, that will be discussed are the CCITT X.409\n   recommendation,\
    \ the NBS Computer Based Message System (CBMS)\n   standard, DARPA Multimedia\
    \ Mail system, the Courier remote procedure\n   call protocol, and the SUN Remote\
    \ Procedure Call package.\n   One purpose of this report is to determine how the\
    \ CCITT standard,\n   which is gaining wide acceptance internationally, compares\
    \ with some\n   of the other standards that have been developed in the areas of\n\
    \   electronic mail, distributed interprocess communication, and remote\n   procedure\
    \ call.  The CCITT X.409 recommendation, which is entitled\n   \"Presentation\
    \ Transfer Syntax and Notation\" is an international\n   standard which is a part\
    \ of the X.400 series Message Handling Systems\n   (MHS) specifications [1]. \
    \ It has been adopted by both the NBS and\n   the ISO standards organizations.\
    \  In addition, some commercial\n   organizations have announced intentions to\
    \ support a CCITT interface\n   for electronic mail.  The NBS Computer Based Message\
    \ System (CBMS)\n   standard was developed previously and was published as a Federal\n\
    \   Information Processing Standard (FIPS Publication 98) in 1983 [3].\n   The\
    \ DARPA Multimedia Mail system is an experimental electronic mail\n   system which\
    \ is in use in the DARPA Internet [2,4,5].  It is used to\n   create and distribute\
    \ messages that incorporate text, graphics,\n   stored speech, and images and\
    \ has been implemented on on several very\n   different machines.  Courier is\
    \ the XEROX network systems remote\n   procedure call protocol [7].  The SUN Remote\
    \ Procedure Call package\n   implements \"network pipes\" between UNIX machines\
    \ [6].\n"
- title: RFC 971                                                     January 1986
  contents:
  - 'RFC 971                                                     January 1986

    '
- title: A Survey of Data Representation Standards
  contents:
  - 'A Survey of Data Representation Standards

    '
- title: 2. Background
  contents:
  - "2. Background\n   This section presents a brief overview of the basic terminology\
    \ and\n   approach of each data representation standard.\n   2.1. Interprocess\
    \ Communication Standards\n      The standards that are oriented towards distributed\
    \ interprocess\n      communication or remote procedure call, between like machines,\n\
    \      generally favor the use of types that map easily into the types\n     \
    \ defined in the programming language in use on the system.  For\n      example,\
    \ the types defined for the XEROX Courier system resemble\n      the types found\
    \ in the Mesa programming language.  Similarly, the\n      SUN Remote Procedure\
    \ Call system types resemble the types found in\n      the C programming language.\
    \  An advantage of a system implemented\n      using like machines is that the\
    \ external data representation can\n      be defined in such a way that the conversion\
    \ to and from the local\n      format is minimal.\n      2.1.1. Courier\n    \
    \     The Courier standard data types are used to define the data\n         objects\
    \ which are transported bi-directionally between system\n         elements that\
    \ are running the Courier remote procedure call\n         protocol.  The \"standard\
    \ representation\" of a type is the\n         encoding of the data which is transmitted.\
    \  The \"standard\n         notation\" refers to the conventions for the interpretation\
    \ of\n         the data by higher-level applications.  The standard\n        \
    \ representation of a data object encodes the value of the\n         object, but\
    \ the type of the object is determined by the\n         software that generates\
    \ or interprets the representation.\n      2.1.2. SUN Remote Procedure Call Package\n\
    \         The SUN Remote Procedure Call package includes routines which\n    \
    \     allow a process on one UNIX machine to consume data produced by\n      \
    \   a process on another UNIX machine.  This is called a \"network\n         pipe\"\
    \ and is an extension of the standard UNIX pipe.  The\n         \"eXternal Data\
    \ Representation (XDR)\" standard defines the\n         routines that are used\
    \ to encode or \"serialize\" data for\n         transmission, or to decode or\
    \ \"deserialize\" data for local\n         interpretation. The syntax suggests\
    \ that perhaps it should be\n         called \"remote interprocess communication\"\
    \ rather than \"remote\n         procedure call\".\n"
- title: RFC 971                                                     January 1986
  contents:
  - 'RFC 971                                                     January 1986

    '
- title: A Survey of Data Representation Standards
  contents:
  - "A Survey of Data Representation Standards\n   2.2. Message Standards\n      The\
    \ message oriented standards, including DARPA Multimedia Mail,\n      NBS CBMS,\
    \ and the CCITT X.409 standards, seem to favor more\n      general, highly extensible\
    \ type definitions.  This may have\n      something to do with the expectation\
    \ that a system will include\n      many different machines, programmed using\
    \ many different\n      programming languages.\n      2.2.1. DARPA Multimedia\
    \ Mail\n         The DARPA Multimedia Mail system was developed for use in DoD\n\
    \         Internet community.  The set of data elements used in the\n        \
    \ Multimedia Message Handling Facility (MMHF) is referred to as\n         its\
    \ \"presentation transfer syntax\".  The encoding of these data\n         elements\
    \ varies with the data type being represented. Each\n         begins with a one-octet\
    \ \"element-code\".  Some data elements are\n         of a pre-determined length.\
    \  For example, the INTEGER data\n         element occupies five octets, one for\
    \ the element-code, and\n         four which contain the \"value component\".\
    \  Other data elements,\n         however, may vary in length.  For example, the\
    \ TEXT data\n         element, is made up of a one-octet element-code, a three-octet\n\
    \         count of the characters to follow, and a variable number of\n      \
    \   octets, each containing one right-justified seven bit ASCII\n         character.\
    \  The element-code and the length constitute the \"tag\n         component\"\
    .\n         A \"base data element\" is self contained, while a \"structured\n\
    \         data element\" is formed using other data elements.  The LIST\n    \
    \     data element is used to create structures composed of other\n         elements.\
    \  The tag component of a LIST is made up of a\n         one-octet element-code,\
    \ a three-octet count of the number of\n         octets to follow, and a two-octet\
    \ count of the number of\n         elements that follow.  The PROPLIST data element\
    \ is used to\n         create a structure that consists of a set of unordered\n\
    \         name-value pairs.  The tag component of a PROPLIST is made up\n    \
    \     of a one-octet element-code, a three-octet count of the number\n       \
    \  of octets to follow, and a one-octet count of the number of\n         name-value\
    \ pairs in the PROPLIST.  Both the LIST and the\n         PROPLIST elements are\
    \ followed by an ENDLIST data element.\n      2.2.2. NBS Computer Based Message\
    \ System\n         The NBS Computer Based Message System (CBMS) standard was\n\
    \         developed to specify the format of a message at the interface\n    \
    \     between different computer-based message systems.  Each data\n         element\
    \ consists of a series of \"components\".  The five\n"
- title: RFC 971                                                     January 1986
  contents:
  - 'RFC 971                                                     January 1986

    '
- title: A Survey of Data Representation Standards
  contents:
  - "A Survey of Data Representation Standards\n         possible types of component\
    \ are the \"identifier octet\", the\n         \"length code\", the \"qualifier\"\
    , the \"property-list\" component,\n         and the \"data element contents\"\
    .  Every data element contains\n         an identifier octet and a length code.\
    \  The identifier octet\n         contains a one-bit flag that signifies whether\
    \ the data element\n         contains a property-list, and a code identifying\
    \ the data\n         element and signifying whether it contains a qualifier. In\
    \ the\n         NBS standard, the property-list is associated with a data\n  \
    \       element and contains properties such as a \"printing-name\" or a\n   \
    \      \"comment\".  The meaning of the qualifier depends on the data\n      \
    \   element code.  The length code indicates the number of octets\n         following,\
    \ and is between one and three octets in length.\n         Each data element is\
    \ inherently a \"primitive data element\",\n         which contains a basic item\
    \ of information, or a \"constructor\n         data element\", which contains\
    \ one or more data elements.  The\n         \"field\" data element (itself a constructor)\
    \ uses a qualifier\n         component, which contains a \"field identifier\"\
    \ to indicate\n         which specific field is being represented within a message.\n\
    \      2.2.3. CCITT Recommendation X.409\n         The CCITT recommendation X.409\
    \ defines the notation and the\n         representational technique used to specify\
    \ and to encode the\n         Message Handling System (MHS) protocols.  The following\
    \ is a\n         description of the CCITT approach to encoding type definitions.\n\
    \         A data element consists of three components, the \"identifier\"\n  \
    \       (type), the \"length\", and the \"contents\".  An element and its\n  \
    \       components consist of a sequence of an integral number of\n         octets.\
    \  An identifier consists of a \"class\" (\"universal\",\n         \"application-wide\"\
    , \"context-specific\", or \"private-use\"), a\n         \"form\" (\"primitive\"\
    \ or \"constructor\"), and the \"id code\".\n         There is a convention defined\
    \ for both single-octet and\n         multi-octet identifiers.  The length specifies\
    \ the length of\n         the contents in octets, and is itself variable in length.\n\
    \         There is also an \"indefinite\" value defined for the length;\n    \
    \     this means that no length for the contents is specified, and\n         the\
    \ contents is terminated with the the \"end-of-contents\" (EOC)\n         element.\
    \  In X.409 it is possible to determine whether a data\n         element is a\
    \ primitive or a constructor from the form part of\n         the identifier. \
    \ In addition it is possible to \"tag\" the data\n         by attaching meaning\
    \ to an id code within the context of a\n         specific application.\n"
- title: RFC 971                                                     January 1986
  contents:
  - 'RFC 971                                                     January 1986

    '
- title: A Survey of Data Representation Standards
  contents:
  - 'A Survey of Data Representation Standards

    '
- title: 3. Implicit Versus Explicit Representation
  contents:
  - "3. Implicit Versus Explicit Representation\n   In both the SUN Remote Procedure\
    \ Call system and the XEROX Courier\n   system the type definitions of external\
    \ data are implicit.  This\n   means that for a given type of call, or message,\
    \ the type definitions\n   which is to be used to interpret the data, are agreed\
    \ upon by the\n   sender and the receiver in advance.  In other words, parameters\
    \ (or\n   message fields) are assumed to be in a predefined order.  Each\n   parameter\
    \ is assumed to be of a predefined type.  This means the data\n   cannot be reformated\
    \ into the local form until it reaches a process\n   that knows about the types\
    \ of specific parameters.  At this point,\n   the conversion can be accomplished\
    \ using system routines that know\n   how to convert from the external format\
    \ to the local format.  If the\n   system is homogeneous there may be very little\
    \ conversion required.\n   In addition, no extra overhead of sending the type\
    \ definitions with\n   the data is incurred.\n   In the DARPA Multimedia Mail\
    \ system, the NBS CBMS standard, and the\n   CCITT X.409 recommendation, type\
    \ definitions are explicit.  In this\n   case the type definitions are encoded\
    \ into the message.  There are\n   several advantages to this approach.  One advantage\
    \ is that it allows\n   a low level receiver process in the destination host to\
    \ convert the\n   data from the standard form to a form appropriate for the local\
    \ host,\n   as it received.  This can increase efficiency if it allows the\n \
    \  destination host to avoid passing around data that does not conform\n   to\
    \ the local word boundaries.  Another advantage is that it provides\n   flexibility\
    \ for future expansion.  Since the overall length is a part\n   of the type definition,\
    \ it allows a host to deal with or ignore data\n   of types that it does not necessarily\
    \ understand.  Since the\n   interpretation of the data is not dependent on its\
    \ position, message\n   fields (or parameters) can be reordered, or optionally\
    \ omitted.  The\n   disadvantages of this approach are as follows.  Assuming that\
    \ no\n   field could be omitted, the external representation of the message\n\
    \   may be longer than it would have been if an implicit representation\n   had\
    \ been used.  In addition, extra time may be consumed by the\n   conversion between\
    \ external format and local format, since the\n   external format almost certainly\
    \ will not match the local format for\n   any of the participants.\n"
- title: RFC 971                                                     January 1986
  contents:
  - 'RFC 971                                                     January 1986

    '
- title: A Survey of Data Representation Standards
  contents:
  - 'A Survey of Data Representation Standards

    '
- title: 4. Data Representation Standards Scorecard
  contents:
  - "4. Data Representation Standards Scorecard\n   The following table is a comparison\
    \ of the data elements defined for\n   the various standards being discussed.\
    \  It is provided in order to\n   give a general idea of the types defined for\
    \ each standard, but it\n   should be noted that the grouping of these types does\
    \ not indicate\n   one type corresponds exactly to any other.  Where it is applicable,\n\
    \   the identifier code appears in parantheses following the name of the\n   data\
    \ element.  Under \"NUMBER\", \"S\" stands for signed, \"U\" stands for\n   unsigned,\
    \ \"V\" stands for variable, and the number represents the\n   number of bits.\
    \  For example, \"Integer S16\" means a \"signed 16-bit\n   integer\".\n Type\
    \       CCITT        MMM         NBS         XEROX       Sun\n -----------------------------------------------------------------------\n\
    \ END    | End-of-   | ENDLIST   | End-of-    |    --     |    --\n        | \
    \ Contents |   (11)    | Constructor|           |\n        |    (0)    |     \
    \      |    (1)     |           |\n        |           |           |         \
    \   |           |\n PAD    | Null (5)  | NOP (0)   | No-Op (0)  |    --     |\
    \    --\n        |           | PAD (1)   | Padding    |           |\n        |\
    \           |           |   (33)     |           |\n        |           |    \
    \       |            |           |\n RECORD | Set (17)  | PROPLIST  | Set (11)\
    \   |    --     |    --\n        |           |   (14)    |            |      \
    \     |\n        | Sequence  | LIST (9)  | Sequence   | Sequence  | Structure\n\
    \        |   (16)    |           |   (10)     |           |\n        |       \
    \    |           |            | Record    |\n        |           |           |\
    \ Message    |           |\n        |           |           |   (77)     |   \
    \        |\n        |    --     |    --     |     --     | Array     | Fixed Array\n\
    \        |           |           |            |           | Counted Array\n  \
    \      | \"Choice\"  |    --     |     --     | Choice    |Discriminated-\n  \
    \      | \"Any\"     |           |            |           |   Union\n        |\
    \           |           |            |           |\n        | \"Tagged\"  | \"\
    name\"    | Field (76) |    --     |    --\n        |           |           |Unique-ID(9)|\
    \           |\n        |    --     | SHARE-TAG |     --     |    --     |    --\n\
    \        |           |   (12)    |            |           |\n        |       \
    \    | SHARE-REF |            |           |\n        |           |   (13)    |\
    \            |           |\n        |           |           |            |   \
    \        |\n        |    --     |    --     | Compressed |    --     |    --\n\
    \        |           |           |   (70)     |           |\n        |    -- \
    \    | ENCRYPT   | Encrypted  |    --     |    --\n        |           |   (14)\
    \    |    (71)    |           |\n"
- title: RFC 971                                                     January 1986
  contents:
  - 'RFC 971                                                     January 1986

    '
- title: A Survey of Data Representation Standards
  contents:
  - "A Survey of Data Representation Standards\n Type       CCITT        MMM     \
    \    NBS         XEROX       Sun\n -----------------------------------------------------------------------\n\
    \ BOOLEAN| Boolean(1)| BOOLEAN(2)| Boolean(8) | Boolean   | Boolean\n        |\
    \           |           |            |           |\n NUMBER | Integer(2)| EPI\
    \ (5)   | Integer(32)| Integer   | Integer\n        |   SV      |   SV      |\
    \   SV       |   S16     |  S32\n        |           | INDEX (3) |           \
    \ | Cardinal  | Unsigned Int\n        |           |   U16     |            | \
    \  U16     |  U32\n        |           | INTEGER(4)|            |Unspecified|Enumeration\n\
    \        |           |   S32     |            |   16      |  32\n        |   \
    \        |           |            | Long Int  |Hyper Integer\n        |      \
    \     |           |            |   S32     |  S64\n        |           |     \
    \      |            | Long Card |Uns Hyper Int\n        |           |        \
    \   |            |   U32     |  U64\n        |           |           |       \
    \     |           | Double Prec\n        |           |           |           \
    \ |           |   64\n        |    --     | FLOAT (15)|     --     |    --   \
    \  | Float Pt\n        |           |   64      |            |           |   32\n\
    \        |           |           |            |           |\n BIT-   | Bit String|\
    \ BITSTR(6) | Bit-String |    --     |    --\n  STRING|   (3)     |          \
    \ |   (67)     |           |\n        | Octet-    |    --     |     --     | \
    \   --     | Opaque\n        |  String(4)|           |            |          \
    \ |\n        |           |           |            |           |\n STRING | IA5\
    \ (22)  | TEXT (8)  | ASCII-     | String    | Counted-\n        |           |\
    \           |  String (2)|           |  Byte String\n        |           | NAME\
    \ (7)  |            |           |\n        | Numeric   |           |         \
    \   |           |\n        |   (18)    |           |            |           |\n\
    \        | Printable |           |            |           |\n        |   (19)\
    \    |           |            |           |\n        | T.61 (20) |           |\
    \            |           |\n        | Videotex  |           |            |   \
    \        |\n        |   (21)    |           |            |           |\n"
- title: RFC 971                                                     January 1986
  contents:
  - 'RFC 971                                                     January 1986

    '
- title: A Survey of Data Representation Standards
  contents:
  - "A Survey of Data Representation Standards\n Type       CCITT        MMM     \
    \    NBS         XEROX       Sun\n -----------------------------------------------------------------------\n\
    \ OTHER  | UTC Time  |    --     | Date (40)  |    --     |    --\n        | \
    \  (23)    |           |            |           |\n        | Gen Time  |     \
    \      |            |           |\n        |   (24)    |           |         \
    \   |           |\n        |    --     |    --     | Property-  |    --     |\
    \    --\n        |           |           |   List (36)|           |\n        |\
    \    --     |    --     |Property(69)|    --     |    --\n        |          \
    \ |           |            |           |\n        |    --     |    --     |  \
    \  --      | Procedure |    --\n        |           |           |            |\
    \           |\n        |    --     |    --     | Vendor-    |    --     |    --\n\
    \        |           |           |  Defined   |           |\n        |       \
    \    |           |   (127)    |           |\n        |           |           |\
    \ Extension  |           |\n        |           |           |   (126)    |   \
    \        |\n"
- title: 5. Conclusions
  contents:
  - "5. Conclusions\n   Of the standards discussed in this survey, the CCITT approach\
    \ (X.409)\n   has already gained wide acceptance.  For a system that will include\
    \ a\n   number of dissimilar hosts, as might be the case for an Internet\n   application,\
    \ a standard that employs explicit representation, such as\n   the CCITT X.409,\
    \ would probably work well.  Using the CCITT X.409\n   standard it is possible\
    \ to construct most of the data elements that\n   are specified for the other\
    \ standards, with the possible exception of\n   the \"floating point\" type. However,\
    \ some of the flexibility that has\n   been built into this standard, such as\
    \ the \"private-use class\" may\n   lead to ambiguity and a lack of coordination\
    \ between implementors at\n   different sites.  If a standard such as the CCITT\
    \ were to be used in\n   an Internet experiment a fully defined (but large) subset\
    \ would\n   probably have to be selected.\n"
- title: RFC 971                                                     January 1986
  contents:
  - 'RFC 971                                                     January 1986

    '
- title: A Survey of Data Representation Standards
  contents:
  - 'A Survey of Data Representation Standards

    '
- title: 6. References
  contents:
  - "6. References\n   [1]  \"Message Handling Systems: Presentation Transfer Syntax\
    \ and\n        Notation\", Recommendation X.409, Document AP VIII-66-E,\n    \
    \    International Telegraph and Telephone Consultative Committee\n        (CCITT),\
    \ Malaga-Torremolinos, June, 1984.\n   [2]  J. Garcia-Luna, A. Poggio, and D.\
    \ Elliot, \"Research into\n        Multimedia Message System Architecture\", SRI\
    \ International,\n        February, 1984.\n   [3]  \"Specification for Message\
    \ Format for Computer Based Message\n        Systems\", FIPS Pub 98 (also published\
    \ as RFC 841), National\n        Bureau of Standards, January, 1983.\n   [4] \
    \ J. Postel, \"Internet Multimedia Mail Transfer Protocol\", USC\n        Information\
    \ Sciences Institute, MMM-11 (RFC-759 revised), March,\n        1982.\n   [5]\
    \  J. Postel, \"Internet Multimedia Mail Document Format\", USC\n        Information\
    \ Sciences Institute, MMM-12 (RFC-767 revised), March,\n        1982.\n   [6]\
    \  \"Extended Data Representation Reference Manual\", SUN\n        Microsystems,\
    \ September, 1984.\n   [7]  \"Courier: The Remote Procedure Call Protocol\", XSIS-038112,\n\
    \        XEROX Corporation, December, 1981.\n"
