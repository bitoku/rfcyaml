- title: __initial_text__
  contents:
  - ''
- title: Guidelines for End-to-End Support of the RTP Control Protocol (RTCP) in
  contents:
  - "Guidelines for End-to-End Support of the RTP Control Protocol (RTCP) in\n   \
    \                Back-to-Back User Agents (B2BUAs)\n"
- title: Abstract
  contents:
  - "Abstract\n   SIP Back-to-Back User Agents (B2BUAs) are often designed to also\
    \ be\n   on the media path, rather than just to intercept signalling.  This\n\
    \   means that B2BUAs often implement an RTP or RTP Control Protocol\n   (RTCP)\
    \ stack as well, thus leading to separate multimedia sessions\n   that the B2BUA\
    \ correlates and bridges together.  If not disciplined,\n   this behaviour can\
    \ severely impact the communication experience,\n   especially when statistics\
    \ and feedback information contained in RTCP\n   messages get lost because of\
    \ mismatches in the reported data.\n   This document defines the proper behaviour\
    \ B2BUAs should follow when\n   acting on both the signalling plane and media\
    \ plane in order to\n   preserve the end-to-end functionality of RTCP.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc8079.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .   4\n   3.  Signalling/Media Plane B2BUAs . . . . . . . . . . . . .\
    \ . . .   4\n     3.1.  Media Relay . . . . . . . . . . . . . . . . . . . . .\
    \ . .   5\n     3.2.  Media-Aware Relay . . . . . . . . . . . . . . . . . . .\
    \ .   6\n     3.3.  Media Terminator  . . . . . . . . . . . . . . . . . . . .\
    \  11\n   4.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  12\n\
    \   5.  Security Considerations . . . . . . . . . . . . . . . . . . .  12\n  \
    \ 6.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  13\n    \
    \ 6.1.  Normative References  . . . . . . . . . . . . . . . . . .  13\n     6.2.\
    \  Informative References  . . . . . . . . . . . . . . . . .  14\n   Acknowledgements\
    \  . . . . . . . . . . . . . . . . . . . . . . . .  15\n   Authors' Addresses\
    \  . . . . . . . . . . . . . . . . . . . . . . .  16\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Session Initiation Protocol (SIP) [RFC3261] Back-to-Back\
    \ User Agents\n   (B2BUAs) are SIP entities that can act as a logical combination\
    \ of\n   both a User Agent Server (UAS) and a User Agent Client (UAC).  As\n \
    \  such, their behaviour is not always completely adherent to standards\n   and\
    \ can lead to unexpected situations.  [RFC7092] presents a taxonomy\n   of the\
    \ most commonly deployed B2BUA implementations and describes how\n   they differ\
    \ in terms of the functionality and features they provide.\n   Such components\
    \ often do not only act on the signalling plane\n   (intercepting and possibly\
    \ modifying SIP messages), but also on the\n   media plane.  This means that,\
    \ in order to receive and manage all RTP\n   and RTCP [RFC3550] packets in a session,\
    \ these components also\n   manipulate the session descriptions [RFC4566] in the\
    \ related offer/\n   answer exchanges [RFC3264].  The reasons for such behaviour\
    \ can be\n   different.  The B2BUA may want, for instance, to provide transcoding\n\
    \   functionality for participants with incompatible codecs, or it may\n   need\
    \ the traffic to be directly handled for different reasons.  This\n   can lead\
    \ to several different topologies for RTP-based communication,\n   as documented\
    \ in [RFC7667].\n   Whatever the reason, such behaviour does not come without\
    \ a cost.  In\n   fact, whenever a media-aware component is placed on the path\
    \ between\n   two or more participants that want to communicate by means of RTP/\n\
    \   RTCP, the end-to-end nature of such protocols is broken.  While this\n   may\
    \ not be a problem for RTP packets, which can be quite easily\n   relayed, it\
    \ definitely can cause serious issue for RTCP messages,\n   which carry important\
    \ information and feedback on the communication\n   quality the participants are\
    \ experiencing.  Consider, for instance,\n   the simple scenario only involving\
    \ two participants and a single RTP\n   session depicted in Figure 1:\n   +--------+\
    \              +---------+              +---------+\n   |        |=== SSRC1 ===>|\
    \         |=== SSRC3 ===>|         |\n   | Alice  |              |  B2BUA  | \
    \             |   Bob   |\n   |        |<=== SSRC2 ===|         |<=== SSRC4 ===|\
    \         |\n   +--------+              +---------+              +---------+\n\
    \                   Figure 1: B2BUA Modifying RTP Headers\n   In this common scenario,\
    \ a participant (Alice) is communicating with\n   another participant (Bob) as\
    \ a result of a signalling session managed\n   by a B2BUA: this B2BUA is also\
    \ on the media path between the two and\n   is acting as a Media Relay.  This\
    \ means that two separate RTP\n   sessions are involved (one per side), each carrying\
    \ two RTP streams\n   (one per media direction).  As part of this process, the\
    \ B2BUA is\n   also rewriting some of the RTP header information on the way. \
    \ In\n   this example, just the Synchronization Source (SSRC) of the incoming\n\
    \   RTP streams is changed, but more information may be modified as well\n   (e.g.,\
    \ sequence numbers, timestamps, etc.).  In particular, whenever\n   Alice sends\
    \ an RTP packet, she sets her SSRC (SSRC1) in the RTP\n   header of her RTP source\
    \ stream.  The B2BUA rewrites the SSRC (SSRC3)\n   before relaying the packet\
    \ to Bob.  At the same time, RTP packets\n   sent by Bob (SSRC4) get their SSRC\
    \ rewritten as well (SSRC2) before\n   being relayed to Alice.\n   Assuming now\
    \ that Alice needs to inform Bob that she has lost several\n   packets in the\
    \ last few seconds, she will place the related received\n   RTP stream SSRC she\
    \ is aware of (SSRC2) together with her own (SSRC1)\n   in RTCP Reports and/or\
    \ NACKs.  Since the B2BUA is making use of\n   different SSRCs for the RTP streams\
    \ in the RTP session it established\n   with each participant, blindly relaying\
    \ Alice's incoming RTCP\n   messages to Bob would cause issues.  These RTCP messages\
    \ would\n   reference SSRCs Bob doesn't know about, which would result in\n  \
    \ precious feedback being dropped.  In fact, Bob is only aware of SSRC4\n   (the\
    \ one his source RTP stream uses) and SSRC3 (the one he's\n   receiving from the\
    \ B2BUA in the received RTP stream) and knows\n   nothing about SSRC1 and SSRC2\
    \ in the messages he received instead.\n   Considering the feedback being dropped\
    \ because of this may contain\n   precious information (e.g., related to packet\
    \ loss, congestion, and\n   other network issues or considerations), the inability\
    \ to take them\n   into account may lead to severe issues.  For instance, Bob\
    \ may flood\n   Alice with more media packets she can handle and/or not retransmit\n\
    \   the packets she missed and asked for.  This may easily lead to a very\n  \
    \ bad communication experience, if not eventually to an unwanted\n   termination\
    \ of the communication itself.\n   This is just a trivial example that, together\
    \ with additional\n   scenarios, will be addressed in the following sections.\n\
    \   Nevertheless, it is a valid example of how such a simple mishandling\n   of\
    \ precious information may lead to serious consequences.  This is\n   especially\
    \ true if we picture more complex scenarios involving\n   several participants\
    \ at the same time, multiple RTP sessions (e.g., a\n   video stream along audio)\
    \ rather than a single one, redundancy RTP\n   streams, SSRC multiplexing, and\
    \ so on.  Considering how common B2BUA\n   deployments are, it is very important\
    \ for them to properly address\n   RTCP messages in order to be sure that their\
    \ activities on the media\n   plane do not break or interfere with anything relevant\
    \ to the\n   session.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n\
    \   In addition, this document uses, where relevant, the RTP-related\n   terminology\
    \ defined in [RFC7656].\n"
- title: 3.  Signalling/Media Plane B2BUAs
  contents:
  - "3.  Signalling/Media Plane B2BUAs\n   As described in the Introduction (Section\
    \ 1), it's very common for\n   B2BUA deployments to act on the media plane rather\
    \ than just on the\n   signalling plane alone.  In particular, [RFC7092] describes\
    \ three\n   different categories of such B2BUAs: (1) a simple Media Relay that\
    \ is\n   effectively unaware of anything that is transported; (2) a Media-\n \
    \  aware Relay that inspects and/or modifies RTP and RTCP messages as\n   they\
    \ flow by; and (3) a full-fledged media termination entity that\n   terminates\
    \ and generates RTP and RTCP messages as needed.\n   [RFC3550] and [RFC7667] already\
    \ mandate some specific behaviours in\n   the presence of certain topologies.\
    \  However, due to their mixed\n   nature, B2BUAs sometimes can't or won't implement\
    \ all relevant\n   specifications.  This means that it's not rare to encounter\
    \ issues\n   that may be avoided with more disciplined behaviour in that regard,\n\
    \   that is, if the B2BUAs followed at least a set of guidelines to\n   ensure\
    \ no known problems occur.  For this reason, the following\n   subsections describe\
    \ the proper behaviour that B2BUAs, whatever above\n   category they fall in,\
    \ should follow in order not to impact any end-\n   to-end RTCP effectiveness.\n"
- title: 3.1.  Media Relay
  contents:
  - "3.1.  Media Relay\n   A Media Relay, as identified in [RFC7092], simply forwards\
    \ all RTP\n   and RTCP messages it receives without either inspecting or modifying\n\
    \   them.  Using the terminology in \"RTP Topologies\" [RFC7667], this can\n \
    \  be seen as an RTP Transport Translator.  As such, B2BUAs acting as\n   Media\
    \ Relays are not aware of what traffic they're handling.  This\n   means that\
    \ both packet payloads and packet headers are opaque to\n   them.  Many Session\
    \ Border Controllers (SBCs) implement this kind of\n   behaviour, e.g., when acting\
    \ as a bridge between an inner and outer\n   network.\n   Considering that all\
    \ headers and identifiers in both RTP and RTCP are\n   left untouched, issues\
    \ like the SSRC mismatch described in the\n   previous section would not occur.\
    \  However, similar problems could\n   still happen for different reasons, for\
    \ instance, if the session\n   description prepared by the B2BUA, whether it has\
    \ been modified or\n   not, ends up providing incorrect information.  This may\
    \ happen, for\n   example, if the Session Description Protocol (SDP) on either\
    \ side\n   contains 'ssrc' [RFC5576] attributes that don't match the actual SSRC\n\
    \   being advertised on the media plane or if the B2BUA advertised\n   support\
    \ for NACK because it implements it while the original INVITE\n   didn't.  Such\
    \ issues might occur, for instance, when the B2BUA acting\n   as a Media Relay\
    \ is generating a new session description when\n   bridging an incoming call rather\
    \ than using the original session\n   description.  This may cause participants\
    \ to find a mismatch between\n   the SSRCs advertised in the SDP and the ones\
    \ actually observed in RTP\n   and RTCP messages or to have them either ignore\
    \ or generate RTCP\n   feedback packets that were not explicitly advertised as\
    \ supported.\n   In order to prevent such an issue, a Media Relay B2BUA SHOULD\
    \ forward\n   all the SSRC- and RTCP-related SDP attributes when handling a\n\
    \   multimedia session setup between participants: this includes\n   attributes\
    \ like 'ssrc' [RFC3261], 'rtcp-fb' [RFC4585], 'rtcp-xr-\n   attrib' [RFC3611],\
    \ and others.  However, certain SDP attributes may\n   lead to call failures when\
    \ forwarded by a Media Relay, as they have\n   an implied assumption that the\
    \ attribute describes the immediate\n   peer.  A clear example of this is the\
    \ 'rtcp' [RFC3605] attribute,\n   which describes the expected RTCP peer port.\
    \  Other attributes might\n   include the immediate peer's IP address, preferred\
    \ transport, etc.\n   In general, the guideline is to require rewriting of attributes\
    \ that\n   are implicitly describing the immediate peer.  B2BUAs SHOULD forward\n\
    \   all other SDP attributes in order to avoid breaking additional\n   functionality\
    \ that endpoints may be relying on.  If implementors have\n   doubts about whether\
    \ this guidance applies to a specific attribute,\n   they should test to determine\
    \ if call failures occur.\n   The cited 'rtcp' example is also relevant whenever\
    \ RTP/RTCP\n   multiplexing [RFC5761] support is being negotiated.  If the B2BUA\n\
    \   acting as a Media Relay is unaware of the specifics of the traffic it\n  \
    \ is handling, and as such may not have RTP/RTCP parsing capabilities,\n   it\
    \ SHOULD reject RTP/RTCP multiplexing by removing the 'rtcp-mux' SDP\n   attribute.\
    \  If instead the Media Relay is able to parse RTP/RTCP, and\n   can verify that\
    \ demultiplexing can be performed without any RTP\n   Payload Type rewrites (i.e.,\
    \ no overlap between any RTP Payload Types\n   and the RTCP Payload Type space\
    \ has been detected), then the B2BUA\n   SHOULD negotiate RTP/RTCP multiplexing\
    \ support if advertised.\n   It is worth mentioning that, by leaving RTCP messages\
    \ untouched, a\n   Media Relay may also leak information that, according to policies,\n\
    \   may need to be hidden or masqueraded, e.g., domain names in CNAME\n   items.\
    \  Besides, these CNAME items may actually contain IP addresses:\n   this means\
    \ that, should a NAT be involved in the communication, this\n   may actually result\
    \ in CNAME collisions, which could indeed break the\n   end-to-end RTCP behaviour.\
    \  While [RFC7022] can prevent this from\n   happening, there may be implementations\
    \ that don't make use of it.\n   As such, a B2BUA MAY rewrite CNAME items if any\
    \ potential collision\n   is detected, even in the Media Relay case.  If a B2BUA\
    \ does indeed\n   decide to rewrite CNAME items, then it MUST generate new CNAMEs\n\
    \   following [RFC7022].  The same SHOULD be done if RTP extensions\n   involving\
    \ CNAMEs are involved (e.g., \"urn:ietf:params:rtp-\n   hdrext:sdes:cname\" [RFC7941]).\
    \  If that is not possible, e.g.,\n   because the Media Relay does not have RTP\
    \ header editing capabilities\n   or does not support these extensions, then the\
    \ B2BUA MUST reject the\n   negotiation of such extensions when negotiating the\
    \ session.\n"
- title: 3.2.  Media-Aware Relay
  contents:
  - "3.2.  Media-Aware Relay\n   A Media-aware Relay, unlike the Media Relay addressed\
    \ in the previous\n   section, is aware of the media traffic it is handling. \
    \ This means it\n   inspects RTP and RTCP messages flowing by and may even modify\
    \ their\n   headers.  Using the terminology in [RFC3550], this can be seen as\
    \ an\n   RTP Translator.  A B2BUA implementing this role typically does not\n\
    \   inspect the RTP payloads, which would be opaque to them: this means\n   that\
    \ the actual media would not be manipulated (e.g., transcoded).\n   This makes\
    \ them quite different from the Media Relays previously\n   discussed, especially\
    \ in terms of the potential issues that may occur\n   at the RTCP level.  In fact,\
    \ being able to modify the RTP and RTCP\n   headers, such B2BUAs may end up modifying\
    \ RTP-related information\n   like SSRC / Contributing Source (CSRC), sequence\
    \ numbers, timestamps,\n   and others in an RTP stream before forwarding the modified\
    \ packets to\n   the other interested participants.  This means that, if not properly\n\
    \   disciplined, such behaviour may easily lead to issues like the one\n   described\
    \ in the introductory section.  For this reason, it is very\n   important for\
    \ a B2BUA modifying RTP-related information across two\n   related RTP streams\
    \ to also modify, in a coherent way, the same\n   information in RTCP messages.\n\
    \   It is worthwhile to point out that such a B2BUA may not necessarily\n   forward\
    \ all the packets it receives.  Selective Forwarding Units\n   (SFUs) [RFC7667],\
    \ for instance, may be implemented to aggregate or\n   drop incoming RTCP messages\
    \ while at the same time originating new\n   ones on their own.  It is important\
    \ to clarify that a B2BUA SHOULD\n   NOT randomly drop or forward RTCP feedback\
    \ of the same type (e.g., a\n   specific XR block type or specific Feedback messages)\
    \ within the\n   context of the same session as that may lead to confusing, if\
    \ not\n   broken, feedback to the recipients of the message due to gaps in the\n\
    \   communication.  As to the messages that are forwarded and/or\n   aggregated,\
    \ it's important to make sure the information is coherent.\n   Besides the behaviour\
    \ already mandated for RTCP translators in\n   Section 7.2 of [RFC3550], a media-aware\
    \ B2BUA MUST handle incoming\n   RTCP messages to forward following these guidelines:\n\
    \   Sender Report (SR) [RFC3550]:\n      If the B2BUA has changed the SSRC of\
    \ the sender RTP stream a\n      Sender Report refers to, it MUST update the SSRC\
    \ in the SR packet\n      header as well.  If the B2BUA has changed the SSRCs\
    \ of other RTP\n      streams too, and any of these streams are addressed in any\
    \ of the\n      SR Report Blocks, it MUST update the related values in the SR\n\
    \      Report Blocks as well.  If the B2BUA has also changed the base RTP\n  \
    \    sequence number when forwarding RTP packets, then this change MUST\n    \
    \  be reflected in the 'extended highest sequence number received'\n      field\
    \ in the Report Blocks.  In case the B2BUA is acting as a\n      Selective Forwarding\
    \ Unit (SFU) [RFC7667], it needs to track in\n      the outgoing SR, the relevant\
    \ number of packets sent, and the\n      total amount of bytes sent to the receiver.\n\
    \   Receiver Report (RR) [RFC3550]:\n      The guidelines for SR apply to RR as\
    \ well.\n   Source Description (SDES) [RFC3550]:\n      If the B2BUA has changed\
    \ the SSRC of any RTP stream addressed in\n      any of the chunks of an incoming\
    \ SDES message, it MUST update the\n      related SSRCs in all the chunks.  The\
    \ same considerations made\n      with respect to CNAME collisions at the end\
    \ of Section 3.1 apply\n      here as well.\n   BYE [RFC3550]:\n      If the B2BUA\
    \ has changed the SSRC of any RTP stream addressed in\n      the SSRC/CSRC identifiers\
    \ included in a BYE packet, it MUST update\n      them in the message.\n   APP\
    \ [RFC3550]:\n      If the B2BUA has changed the SSRC of any RTP stream addressed\
    \ in\n      the header of an APP packet, it MUST update the identifier in the\n\
    \      message.  Should the B2BUA be aware of any specific APP message\n     \
    \ format that contains additional information related to SSRCs, it\n      SHOULD\
    \ update them accordingly as well.\n   Extended Reports (XRs) [RFC3611]:\n   \
    \   If the B2BUA has changed the SSRC of the RTP stream associated\n      with\
    \ the originator of an XR packet, it MUST update the SSRC in\n      the XR message\
    \ header.  The same guidelines given for SR/RR, with\n      respect to SSRC identifiers\
    \ in Report Blocks, apply to all the\n      Report Block types in the XR message\
    \ as well.  If the B2BUA has\n      also changed the base RTP sequence number\
    \ when forwarding RTP\n      packets, then this change MUST be reflected in the\
    \ 'begin_seq' and\n      'end_seq' fields that are available in most of the Report\
    \ Block\n      types that are part of the XR specification.\n   Receiver Summary\
    \ Information (RSI) [RFC5760]:\n      If the B2BUA has changed any SSRC of RTP\
    \ streams addressed in an\n      RSI packet, it MUST update the SSRC identifiers\
    \ in the message.\n      This includes the distribution source SSRC, which MUST\
    \ be\n      rewritten with the one the B2BUA uses to send RTP packets to each\n\
    \      sender participant, the summarized SSRC, and when a Collision Sub-\n  \
    \    Report Block is available, the SSRCs in the related list.\n   Port Mapping\
    \ (TOKEN) [RFC6284]:\n      If the B2BUA has changed any SSRC of RTP streams addressed\
    \ in a\n      TOKEN packet, it MUST update the SSRC identifiers in the message.\n\
    \      This includes the Packet Sender SSRC, which MUST be rewritten with\n  \
    \    the one the B2BUA uses to send RTP packets to each sender\n      participant,\
    \ and the Requesting Client SSRC when the message is a\n      response, which\
    \ MUST be rewritten using the related sender\n      participant(s) SSRC.\n   Feedback\
    \ Messages [RFC4585]:\n      All Feedback messages have a common packet format,\
    \ which includes\n      the SSRC identifier of the Packet Sender and the SSRC\
    \ identifier\n      of the media source the feedback is related to.  Just as described\n\
    \      for the previous messages, these SSRC identifiers MUST be updated\n   \
    \   in the message if the B2BUA has changed the SSRC of the RTP\n      streams\
    \ addressed there.  It MUST NOT, however, change a media\n      source SSRC that\
    \ was originally set to zero, unless zero is\n      actually the SSRC that was\
    \ chosen by one of the involved\n      endpoints, in which case the above-mentioned\
    \ rules as to SSRC\n      rewriting apply.  Considering that many Feedback messages\
    \ also\n      include additional data as part of their specific Feedback Control\n\
    \      Information (FCI), a media-aware B2BUA MUST take care of them\n      accordingly,\
    \ if it can parse and regenerate them, according to the\n      following guidelines:\n\
    \      NACK [RFC4585]:\n         A media-aware B2BUA MUST properly rewrite the\
    \ Packet ID (PID)\n         of all addressed lost packets in the NACK FCI if it\
    \ changed the\n         RTP sequence numbers.\n      TMMBR/TMMBN/FIR/TSTR/TSTN/VBCM\
    \ [RFC5104]:\n         A media-aware B2BUA MUST properly rewrite the additional\
    \ SSRC\n         identifier in the specific FCI if it changed the related RTP\n\
    \         SSRC of the media sender.\n      Receiver Estimated Max Bitrate (REMB)\
    \ [RTCP-REMB]:\n         [RTCP-REMB] describes an RTCP payload-specific Feedback\
    \ message\n         that reports the receiver's available bandwidth to the sender.\n\
    \         As of the time of this writing, REMB has been widely deployed\n    \
    \     but has not been standardized.  The REMB mechanism will not\n         function\
    \ correctly across a media-aware B2BUA that changes the\n         SSRC of the\
    \ media sender unless it also changes the SSRC values\n         in the REMB packet.\n\
    \      Explicit Congestion Notification (ECN) [RFC6679]:\n         The same guidelines\
    \ given for SR/RR management apply,\n         considering the presence of sequence\
    \ numbers in the ECN\n         Feedback Report format.  For the management of\
    \ RTCP XR ECN\n         Summary Report messages, the same guidelines given for\
    \ generic\n         XR messages apply.\n   Apart from the generic guidelines related\
    \ to Feedback messages, no\n   additional modifications are needed for Picture\
    \ Loss Indication\n   (PLI), Slice Lost Indication (SLI), and Reference Picture\
    \ Selection\n   Indication (RPSI) Feedback messages.\n   Of course, the same considerations\
    \ about the need for SDP and RTP/\n   RTCP information to be coherent applies\
    \ to media-aware B2BUAs.  This\n   means that, if a B2BUA changes any SSRC, it\
    \ MUST update the related\n   'ssrc' attributes, if present, before sending it\
    \ to the recipient.\n   Besides, it MUST rewrite the 'rtcp' attribute if provided.\
    \  At the\n   same time, while a media-aware B2BUA is typically able to inspect/\n\
    \   modify RTCP messages, it may not support all RTCP messages.  This\n   means\
    \ that a B2BUA may choose to drop RTCP messages it can't parse.\n   In that case,\
    \ a media-aware B2BUA MUST advertise its RTCP level of\n   support in the SDP\
    \ in a coherent way in order to prevent, for\n   instance, a UAC from sending\
    \ NACK messages that would never reach the\n   intended recipients.  It's important\
    \ to point out that, in case a\n   compound RTCP packet was received and any RTCP\
    \ message in it needs to\n   be dropped, then the B2BUA SHOULD NOT drop the whole\
    \ compound RTCP\n   packet, but only the selected messages.\n   The same considerations\
    \ on CNAMEs made in regard to Media Relays\n   apply to Media-aware Relays as\
    \ well.  Specifically, if RTP extensions\n   involving CNAMEs are involved (e.g.,\
    \ \"urn:ietf:params:rtp-\n   hdrext:sdes:cname\" [RFC7941]) and negotiated because\
    \ the B2BUA\n   supports them, then the B2BUA MUST update the CNAME value in there\
    \ as\n   well, if it was changed.  It is worth pointing out that, if the new\n\
    \   CNAME is larger than the old one, this would result in a larger RTP\n   packet\
    \ than originally received.  If the length of the updated packet\n   exceeds the\
    \ MTU of any of the networks the packet will traverse, this\n   can result in\
    \ the packet being dropped and lost by the recipient.\n   A different set of considerations\
    \ is worthwhile for RTP/RTCP\n   multiplexing [RFC5761] and Reduced-Size RTCP\
    \ [RFC5506].  While the\n   former allows for a better management of network resources\
    \ by\n   multiplexing RTP packets and RTCP messages over the same transport,\n\
    \   the latter allows for a compression of RTCP messages, thus leading to\n  \
    \ less network traffic.  For RTP/RTCP multiplexing, a B2BUA acting as a\n   Media\
    \ Relay may use it on either RTP session independently.  This\n   means that,\
    \ for instance, a Media Relay B2BUA may use RTP/RTCP\n   multiplexing on one side\
    \ of the communication and not use it on the\n   other side, if the endpoint does\
    \ not support it.  This allows for a\n   better management of network resources\
    \ on the side that does support\n   it.  In case any of the parties in the communications\
    \ supports it and\n   the B2BUA does too, the related 'rtcp-mux' SDP attribute\
    \ MUST be\n   forwarded on the other side(s).  If the B2BUA detects that any of\
    \ the\n   parties in the communication do not support the feature, it may\n  \
    \ decide to either disable it entirely or still advertise it for the\n   RTP sessions\
    \ with parties that do support it.  In case the B2BUA\n   decides to involve RTP/RTCP\
    \ multiplexing, it MUST ensure that there\n   are no conflicting RTP Payload Type\
    \ numbers on either side.  When\n   there are, it MUST rewrite RTP Payload Type\
    \ numbers to prevent\n   conflicts in the session where the RTP/RTCP multiplexing\
    \ is applied.\n   Should RTP Payload Types be rewritten, the related information\
    \ in the\n   SDP MUST be updated accordingly.\n   For Reduced-Size RTCP, the considerations\
    \ are a bit different.  In\n   fact, while a Media Relay B2BUA may choose to use\
    \ it on the side that\n   supports it and not on the side that doesn't, there\
    \ are several\n   reasons for discouraging such behaviour.  While Reduced-Size\
    \ allows\n   for less network traffic related to RTCP messaging in general, this\n\
    \   gain may lead a Reduced-Size RTCP implementation to also issue a\n   higher\
    \ rate of RTCP Feedback messages.  This would result in\n   increased RTCP traffic\
    \ on the side that does not support Reduced-Size\n   and could, as a consequence,\
    \ actually be counterproductive if the\n   available bandwidth is different on\
    \ the two sides.  Negotiating a\n   session with both sides would allow the B2BUA\
    \ to discover which one\n   supports Reduced-Size and which doesn't and decide\
    \ whether or not to\n   allow the sides to independently use Reduced-Size.  Should\
    \ the B2BUA\n   decide to disable the feature on all sides, which is suggested\
    \ in\n   case Reduced-Size is not supported by all parties involved, it MUST\n\
    \   NOT advertise support for the Reduced-Size RTCP functionality on\n   either\
    \ side, by removing the 'rtcp-rsize' attribute from the SDP.\n"
- title: 3.3.  Media Terminator
  contents:
  - "3.3.  Media Terminator\n   A Media Terminator B2BUA, unlike simple Media Relays\
    \ and media-aware\n   ones, is able to terminate media itself.  As such, it can\
    \ inspect\n   and/or modify RTP payloads as well.  This means that such components,\n\
    \   for instance, can act as media transcoders and/or originate specific\n   RTP\
    \ media.  Using the terminology in \"RTP Topologies\" [RFC7667], this\n   can\
    \ be seen as an RTP Media Translator.  Such a topology can also be\n   seen as\
    \ a back-to-back RTP session through a middlebox, as described\n   in Section\
    \ 3.2.2 of [RFC7667].  Such a capability makes them quite\n   different from the\
    \ previously introduced B2BUA typologies.  Since\n   such a B2BUA would terminate\
    \ RTP itself, it can take care of the\n   related statistics and feedback functionality\
    \ directly, with no need\n   to simply relay any message between the participants\
    \ in the\n   multimedia session.\n   For this reason, no specific guideline is\
    \ needed to ensure a proper\n   end-to-end RTCP behaviour in such scenarios, because\
    \ most of the\n   time, there would be no end-to-end RTCP interaction among the\n\
    \   involved participants in the first place.  Nevertheless, should any\n   RTCP\
    \ message actually need to be forwarded to another participant in\n   the multimedia\
    \ session, the same guidelines provided for the media-\n   aware B2BUA case apply.\n\
    \   For RTP/RTCP multiplexing support, the same considerations already\n   given\
    \ for the Media Relay management also apply to Media Terminators.\n   Some different\
    \ considerations might be given as to the Reduced-Size\n   RTCP functionality\
    \ instead.  In fact, in the Media Terminator case,\n   it is safe to use the feature\
    \ independently on each side, as the\n   B2BUA would terminate RTCP.  In that\
    \ case, the B2BUA SHOULD advertise\n   and negotiate support for Reduced-Size\
    \ if available and MUST NOT\n   otherwise.\n"
- title: 4.  IANA Considerations
  contents:
  - "4.  IANA Considerations\n   This document does not require any IANA actions.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   The discussion in the previous sections on the\
    \ management of RTCP\n   messages by a B2BUA worked under the assumption that\
    \ the B2BUA has\n   actual access to the RTP/RTCP information itself.  This is\
    \ indeed\n   true if we assume that plain RTP and RTCP are being handled, but\
    \ they\n   may not be once any security is enforced on RTP packets and RTCP\n\
    \   messages by means of Secure RTP (SRTP) [RFC3711].\n   While typically not\
    \ an issue in the Media Relay case, where RTP and\n   RTCP packets are forwarded\
    \ without any modification regardless of\n   whether or not security is involved,\
    \ this could definitely have an\n   impact on Media-aware Relays and Media Terminator\
    \ B2BUAs.  As simple\n   example, if we envisage an SRTP / Secure RTCP (SRTCP)\
    \ session across\n   a B2BUA where the B2BUA itself has no access to the keys\
    \ used to\n   secure the session, there would be no way to manipulate SRTP headers\n\
    \   without violating the hashing on the packet.  At the same time, there\n  \
    \ would be no way to rewrite the RTCP information accordingly either.\n   For\
    \ this reason, it is important to point out that the operations\n   described\
    \ in the previous sections are only possible if the B2BUA has\n   a way to effectively\
    \ manipulate the packets and messages flowing by.\n   This means that, when media\
    \ security is involved, only the Media\n   Relay scenario can be properly addressed.\
    \  Attempting to cover Media-\n   aware Relay and Media Termination scenarios\
    \ when involving secure\n   sessions will inevitably lead to the B2BUA acting\
    \ as a man in the\n   middle; consequently, its behaviour is unspecified and discouraged.\n\
    \   More considerations on this are provided in [RFC7879].\n   It is also worth\
    \ pointing out that there are scenarios where an\n   improper management of RTCP\
    \ messaging across a B2BUA may lead,\n   willingly or not, to situations not unlike\
    \ an attack.  As a simple\n   example, improper management of an REMB Feedback\
    \ message containing,\n   e.g., information on the limited bandwidth availability\
    \ for a user,\n   may lead to missing or misleading information to its peer. \
    \ This may\n   cause the peer to increase the encoder bitrate, maybe up to a point\n\
    \   where a user with poor connectivity will inevitably be choked by an\n   amount\
    \ of data it cannot process.  This scenario may thus result in\n   what looks\
    \ like a Denial-of-Service (DoS) attack towards the user.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC3261]  Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston,\n    \
    \          A., Peterson, J., Sparks, R., Handley, M., and E.\n              Schooler,\
    \ \"SIP: Session Initiation Protocol\", RFC 3261,\n              DOI 10.17487/RFC3261,\
    \ June 2002,\n              <http://www.rfc-editor.org/info/rfc3261>.\n   [RFC3264]\
    \  Rosenberg, J. and H. Schulzrinne, \"An Offer/Answer Model\n              with\
    \ Session Description Protocol (SDP)\", RFC 3264,\n              DOI 10.17487/RFC3264,\
    \ June 2002,\n              <http://www.rfc-editor.org/info/rfc3264>.\n   [RFC3550]\
    \  Schulzrinne, H., Casner, S., Frederick, R., and V.\n              Jacobson,\
    \ \"RTP: A Transport Protocol for Real-Time\n              Applications\", STD\
    \ 64, RFC 3550, DOI 10.17487/RFC3550,\n              July 2003, <http://www.rfc-editor.org/info/rfc3550>.\n\
    \   [RFC3611]  Friedman, T., Ed., Caceres, R., Ed., and A. Clark, Ed.,\n     \
    \         \"RTP Control Protocol Extended Reports (RTCP XR)\",\n             \
    \ RFC 3611, DOI 10.17487/RFC3611, November 2003,\n              <http://www.rfc-editor.org/info/rfc3611>.\n\
    \   [RFC4566]  Handley, M., Jacobson, V., and C. Perkins, \"SDP: Session\n   \
    \           Description Protocol\", RFC 4566, DOI 10.17487/RFC4566,\n        \
    \      July 2006, <http://www.rfc-editor.org/info/rfc4566>.\n   [RFC4585]  Ott,\
    \ J., Wenger, S., Sato, N., Burmeister, C., and J. Rey,\n              \"Extended\
    \ RTP Profile for Real-time Transport Control\n              Protocol (RTCP)-Based\
    \ Feedback (RTP/AVPF)\", RFC 4585,\n              DOI 10.17487/RFC4585, July 2006,\n\
    \              <http://www.rfc-editor.org/info/rfc4585>.\n   [RFC5104]  Wenger,\
    \ S., Chandra, U., Westerlund, M., and B. Burman,\n              \"Codec Control\
    \ Messages in the RTP Audio-Visual Profile\n              with Feedback (AVPF)\"\
    , RFC 5104, DOI 10.17487/RFC5104,\n              February 2008, <http://www.rfc-editor.org/info/rfc5104>.\n\
    \   [RFC5506]  Johansson, I. and M. Westerlund, \"Support for Reduced-Size\n \
    \             Real-Time Transport Control Protocol (RTCP): Opportunities\n   \
    \           and Consequences\", RFC 5506, DOI 10.17487/RFC5506, April\n      \
    \        2009, <http://www.rfc-editor.org/info/rfc5506>.\n   [RFC5760]  Ott, J.,\
    \ Chesterfield, J., and E. Schooler, \"RTP Control\n              Protocol (RTCP)\
    \ Extensions for Single-Source Multicast\n              Sessions with Unicast\
    \ Feedback\", RFC 5760,\n              DOI 10.17487/RFC5760, February 2010,\n\
    \              <http://www.rfc-editor.org/info/rfc5760>.\n   [RFC5761]  Perkins,\
    \ C. and M. Westerlund, \"Multiplexing RTP Data and\n              Control Packets\
    \ on a Single Port\", RFC 5761,\n              DOI 10.17487/RFC5761, April 2010,\n\
    \              <http://www.rfc-editor.org/info/rfc5761>.\n   [RFC6284]  Begen,\
    \ A., Wing, D., and T. Van Caenegem, \"Port Mapping\n              between Unicast\
    \ and Multicast RTP Sessions\", RFC 6284,\n              DOI 10.17487/RFC6284,\
    \ June 2011,\n              <http://www.rfc-editor.org/info/rfc6284>.\n   [RFC6679]\
    \  Westerlund, M., Johansson, I., Perkins, C., O'Hanlon, P.,\n              and\
    \ K. Carlberg, \"Explicit Congestion Notification (ECN)\n              for RTP\
    \ over UDP\", RFC 6679, DOI 10.17487/RFC6679, August\n              2012, <http://www.rfc-editor.org/info/rfc6679>.\n\
    \   [RFC7022]  Begen, A., Perkins, C., Wing, D., and E. Rescorla,\n          \
    \    \"Guidelines for Choosing RTP Control Protocol (RTCP)\n              Canonical\
    \ Names (CNAMEs)\", RFC 7022, DOI 10.17487/RFC7022,\n              September 2013,\
    \ <http://www.rfc-editor.org/info/rfc7022>.\n   [RFC7656]  Lennox, J., Gross,\
    \ K., Nandakumar, S., Salgueiro, G., and\n              B. Burman, Ed., \"A Taxonomy\
    \ of Semantics and Mechanisms\n              for Real-Time Transport Protocol\
    \ (RTP) Sources\", RFC 7656,\n              DOI 10.17487/RFC7656, November 2015,\n\
    \              <http://www.rfc-editor.org/info/rfc7656>.\n   [RFC7941]  Westerlund,\
    \ M., Burman, B., Even, R., and M. Zanaty, \"RTP\n              Header Extension\
    \ for the RTP Control Protocol (RTCP)\n              Source Description Items\"\
    , RFC 7941, DOI 10.17487/RFC7941,\n              August 2016, <http://www.rfc-editor.org/info/rfc7941>.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [RFC3605]  Huitema, C., \"Real Time Control\
    \ Protocol (RTCP) attribute\n              in Session Description Protocol (SDP)\"\
    , RFC 3605,\n              DOI 10.17487/RFC3605, October 2003,\n             \
    \ <http://www.rfc-editor.org/info/rfc3605>.\n   [RFC3711]  Baugher, M., McGrew,\
    \ D., Naslund, M., Carrara, E., and K.\n              Norrman, \"The Secure Real-time\
    \ Transport Protocol (SRTP)\",\n              RFC 3711, DOI 10.17487/RFC3711,\
    \ March 2004,\n              <http://www.rfc-editor.org/info/rfc3711>.\n   [RFC5576]\
    \  Lennox, J., Ott, J., and T. Schierl, \"Source-Specific\n              Media\
    \ Attributes in the Session Description Protocol\n              (SDP)\", RFC 5576,\
    \ DOI 10.17487/RFC5576, June 2009,\n              <http://www.rfc-editor.org/info/rfc5576>.\n\
    \   [RFC7092]  Kaplan, H. and V. Pascual, \"A Taxonomy of Session\n          \
    \    Initiation Protocol (SIP) Back-to-Back User Agents\",\n              RFC\
    \ 7092, DOI 10.17487/RFC7092, December 2013,\n              <http://www.rfc-editor.org/info/rfc7092>.\n\
    \   [RFC7667]  Westerlund, M. and S. Wenger, \"RTP Topologies\", RFC 7667,\n \
    \             DOI 10.17487/RFC7667, November 2015,\n              <http://www.rfc-editor.org/info/rfc7667>.\n\
    \   [RFC7879]  Ravindranath, R., Reddy, T., Salgueiro, G., Pascual, V.,\n    \
    \          and P. Ravindran, \"DTLS-SRTP Handling in SIP Back-to-Back\n      \
    \        User Agents\", RFC 7879, DOI 10.17487/RFC7879, May 2016,\n          \
    \    <http://www.rfc-editor.org/info/rfc7879>.\n   [RTCP-REMB]\n             \
    \ Alvestrand, H., Ed., \"RTCP message for Receiver Estimated\n              Maximum\
    \ Bitrate\", Work in Progress, draft-alvestrand-\n              rmcat-remb-03,\
    \ October 2013.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The authors would like to thank Flavio Battimo and Pierluigi\
    \ Palma\n   for their invaluable feedback in the early stages of this document.\n\
    \   The authors would also like to thank Colin Perkins, Bernard Aboba,\n   Albrecht\
    \ Schwarz, Hadriel Kaplan, Keith Drage, Jonathan Lennox,\n   Stephen Farrell,\
    \ Magnus Westerlund, Simon Perreault, and Ben Campbell\n   for their constructive\
    \ comments, suggestions, and reviews that were\n   critical to the formulation\
    \ and refinement of this document.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Lorenzo Miniero\n   Meetecho\n   Email: lorenzo@meetecho.com\n\
    \   Sergio Garcia Murillo\n   Medooze\n   Email: sergio.garcia.murillo@gmail.com\n\
    \   Victor Pascual\n   Oracle\n   Email: victor.pascual.avila@oracle.com\n"
