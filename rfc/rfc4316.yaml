- title: __initial_text__
  contents:
  - "    Datatypes for Web Distributed Authoring and Versioning (WebDAV)\n       \
    \                        Properties\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   This specification extends the Web Distributed Authoring and\n \
    \  Versioning Protocol (WebDAV) to support datatyping.  Protocol\n   elements\
    \ are defined to let clients and servers specify the datatype,\n   and to instruct\
    \ the WebDAV method PROPFIND to return datatype\n   information.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n      4.3. Example of Successful PROPPATCH Where Type\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This specification builds on the infrastructure provided\
    \ by the Web\n   Distributed Authoring and Versioning (WebDAV) Protocol, adding\n\
    \   support for data-typed properties.\n   Although servers must support XML content\
    \ in property values, it may\n   be desirable to persist values as scalar values\
    \ when possible and to\n   expose the data's type when the property value is returned\
    \ to the\n   client.  The client is free to ignore this information, but it may\
    \ be\n   able to take advantage of it when modifying a property.\n   On the other\
    \ hand, when setting new properties, it can be desirable\n   to pass datatype\
    \ information along with the value.  A server can take\n   advantage of this information\
    \ to optimize storage and to perform\n   additional parsing (for instance, of\
    \ dates).  Servers that support\n   searching can also take advantage of known\
    \ datatypes when doing\n   comparisons and sorting.\n   The following potential\
    \ datatyping-related features were deliberately\n   considered out of scope:\n\
    \   o  getting \"schema\" information for classes of resources (set of\n     \
    \ \"required\" properties, their types, display information),\n   o  definition\
    \ of a set of mandatory property types,\n   o  discovery of supported property\
    \ types,\n   o  extensions to PROPPATCH that would allow updates to parts of a\n\
    \      (structured) property.\n"
- title: 2.  Notational Conventions
  contents:
  - "2.  Notational Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n   The term \"property element\" refers to the XML element that\
    \ identifies\n   a particular property, for instance,\n        <getcontentlength\
    \ xmlns=\"DAV:\" />\n   The term \"prop element\" is used for the WebDAV \"prop\"\
    \ element as\n   defined in Section 12.11 of [RFC2518].\n   The XML representation\
    \ of schema components uses a vocabulary\n   identified by the namespace name\
    \ \"http://www.w3.org/2001/XMLSchema\".\n   For brevity, the text and examples\
    \ in this specification use the\n   prefix \"xs:\" to stand for this namespace;\
    \ in practice, any prefix can\n   be used.  \"XML Schema Part 1: Structures\"\
    \ ([XS1]) also defines\n   several attributes for direct use in any XML documents.\
    \  These\n   attributes are in a different namespace named\n   \"http://www.w3.org/2001/XMLSchema-instance\"\
    .  For brevity, the text\n   and examples in this specification use the prefix\
    \ \"xsi:\" to stand for\n   this latter namespace; in practice, any prefix can\
    \ be used.\n"
- title: 3.  Overview
  contents:
  - "3.  Overview\n   Although WebDAV property types can be anything that can be marshaled\n\
    \   as content of an XML element, in many cases they actually are simple\n   types\
    \ like integers, booleans, or dates.  \"XML Schema Part 2:\n   Datatypes\" [XS2]\
    \ defines a set of simple types that can be used as a\n   basis for supplying\
    \ type information to attributes.\n   Datatype information is represented using\
    \ the attribute \"type\" from\n   the XML Schema namespace \"http://www.w3.org/2001/XMLSchema-instance\"\
    .\n   In XML Schema, datatypes are qualified names, and the XML Schema\n   recommendation\
    \ defines a set of built-in datatypes (Section 3 of\n   [XS2]), defined in the\
    \ namespace \"http://www.w3.org/2001/XMLSchema\".\n   To avoid unnecessary verbosity,\
    \ datatype information should only be\n   supplied if it adds usable information\
    \ to the protocol.  In\n   particular, type information is not required for live\
    \ properties\n   defined in WebDAV [RFC2518] and for properties of type \"xs:string\"\
    .\n   A server may implement any combination of datatypes, both from the\n   XML\
    \ Schema recommendation and possibly from other namespaces.\n   Note that a particular\
    \ property can be typed for a number of reasons:\n   o  The property is a live\
    \ property with server-defined semantics and\n      value space.\n   o  The property\
    \ may have been set using a non-WebDAV protocol that\n      the server understands\
    \ in addition to WebDAV.\n   o  The type may have been specified in an extended\
    \ PROPPATCH method\n      as defined in Section 4.\n"
- title: 4.  Changes for PROPPATCH Method
  contents:
  - "4.  Changes for PROPPATCH Method\n   If the property element has an XML attribute\
    \ named \"xsi:type\", the\n   server may use this information to select an optimized\
    \ representation\n   for storing the property value.  For instance, by specifying\
    \ a type\n   as \"xs:boolean\", the client declares the property value to be of\
    \ type\n   boolean (as defined in [XS2]).  The server may choose any suitable\n\
    \   internal format for persisting this property, and in particular is\n   allowed\
    \ to fail the request if the format given does not fit the\n   format defined\
    \ for this type.\n   The server should indicate successful detection and parsing\
    \ of the\n   typed value by setting the xsi:type attribute on the property element\n\
    \   in the response body (this implies that it should return a\n   MULTISTATUS\
    \ status code and a <multistatus> response body).\n"
- title: 4.1.  Example of Successful PROPPATCH
  contents:
  - "4.1.  Example of Successful PROPPATCH\n   >>Request\n   PROPPATCH /bar.html HTTP/1.1\n\
    \   Host: example.org\n   Content-Type: text/xml; charset=\"utf-8\"\n   Content-Length:\
    \ xxxx\n   <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n   <D:propertyupdate xmlns:D=\"\
    DAV:\"\n      xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n      xmlns:xs=\"\
    http://www.w3.org/2001/XMLSchema\"\n      xmlns:Z=\"http://ns.example.org/standards/z39.50\"\
    >\n     <D:set>\n       <D:prop>\n         <Z:released xsi:type=\"xs:boolean\"\
    >false</Z:released>\n       </D:prop>\n     </D:set>\n   </D:propertyupdate>\n\
    \   >>Response\n   HTTP/1.1 207 Multi-Status\n   Content-Type: text/xml; charset=\"\
    utf-8\"\n   Content-Length: xxxx\n   <?xml version=\"1.0\" encoding=\"utf-8\"\
    \ ?>\n   <D:multistatus xmlns:D=\"DAV:\"\n      xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
    \n      xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n      xmlns:Z=\"http://ns.example.org/standards/z39.50\"\
    >\n     <D:response>\n       <D:href>http://example.org/bar.html</D:href>\n  \
    \     <D:propstat>\n         <D:prop><Z:released xsi:type=\"xs:boolean\" /></D:prop>\n\
    \         <D:status>HTTP/1.1 200 OK</D:status>\n       </D:propstat>\n     </D:response>\n\
    \   </D:multistatus>\n   In this case, the xsi:type attribute on the element \"\
    Z:released\"\n   indicates that the server indeed has understood the submitted\
    \ data\n   type information.\n"
- title: 4.2.  Example of Failed PROPPATCH
  contents:
  - "4.2.  Example of Failed PROPPATCH\n   >>Request\n   PROPPATCH /bar.html HTTP/1.1\n\
    \   Host: example.org\n   Content-Type: text/xml; charset=\"utf-8\"\n   Content-Length:\
    \ xxxx\n   <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n   <D:propertyupdate xmlns:D=\"\
    DAV:\"\n      xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n      xmlns:xs=\"\
    http://www.w3.org/2001/XMLSchema\"\n      xmlns:Z=\"http://ns.example.org/standards/z39.50\"\
    >\n     <D:set>\n       <D:prop>\n         <Z:released xsi:type=\"xs:boolean\"\
    >t</Z:released>\n       </D:prop>\n     </D:set>\n   </D:propertyupdate>\n   >>Response\n\
    \   HTTP/1.1 207 Multi-Status\n   Content-Type: text/xml; charset=\"utf-8\"\n\
    \   Content-Length: xxxx\n   <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n   <D:multistatus\
    \ xmlns:D=\"DAV:\"\n      xmlns:Z=\"http://ns.example.org/standards/z39.50\">\n\
    \     <D:response>\n       <D:href>http://example.org/bar.html</D:href>\n    \
    \   <D:propstat>\n         <D:prop><Z:released/></D:prop>\n         <D:status>HTTP/1.1\
    \ 422 Unprocessable Entity</D:status>\n         <D:responsedescription>\n    \
    \       Does not parse as xs:boolean\n         </D:responsedescription>\n    \
    \   </D:propstat>\n     </D:response>\n   </D:multistatus>\n   In this case, the\
    \ request failed because the supplied value \"t\" is\n   not a valid representation\
    \ for a boolean value.\n   Note that similar error conditions can occur in the\
    \ standard WebDAV\n   protocol even though no datatype was specified: for instance,\
    \ when a\n   client tries to set a live property for which only a certain value\n\
    \   space is allowed.\n"
- title: 4.3.  Example of Successful PROPPATCH Where Type Information Was Not
  contents:
  - "4.3.  Example of Successful PROPPATCH Where Type Information Was Not\n      Preserved\n\
    \   >>Request\n   PROPPATCH /bar.html HTTP/1.1\n   Host: example.org\n   Content-Type:\
    \ text/xml; charset=\"utf-8\"\n   Content-Length: xxxx\n   <?xml version=\"1.0\"\
    \ encoding=\"utf-8\" ?>\n   <D:propertyupdate xmlns:D=\"DAV:\"\n      xmlns:xsi=\"\
    http://www.w3.org/2001/XMLSchema-instance\"\n      xmlns:Z=\"http://ns.example.org/standards/z39.50\"\
    >\n     <D:set>\n       <D:prop>\n         <Z:released xsi:type=\"Z:custom\">t</Z:released>\n\
    \       </D:prop>\n     </D:set>\n   </D:propertyupdate>\n   >>Response\n   HTTP/1.1\
    \ 207 Multi-Status\n   Content-Type: text/xml; charset=\"utf-8\"\n   Content-Length:\
    \ xxxx\n   <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n   <D:multistatus xmlns:D=\"\
    DAV:\"\n      xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n      xmlns:Z=\"\
    http://ns.example.org/standards/z39.50\">\n     <D:response>\n       <D:href>http://example.org/bar.html</D:href>\n\
    \       <D:propstat>\n         <D:prop><Z:released/></D:prop>\n         <D:status>HTTP/1.1\
    \ 200 OK</D:status>\n       </D:propstat>\n     </D:response>\n   </D:multistatus>\n\
    \   In this case, the request succeeded, but the server did not know how\n   to\
    \ handle the datatype \"Z:custom\".  Therefore, no datatype\n   information was\
    \ returned in the response body.\n"
- title: 5.  Changes for PROPFIND Method
  contents:
  - "5.  Changes for PROPFIND Method\n   PROPFIND is extended to return the datatype\
    \ information for\n   properties by adding \"xsi:type\" attributes to the property\
    \ elements\n   unless one of the following conditions is met:\n   o  The datatype\
    \ MUST be different from \"xs:string\" (because this can\n      be considered\
    \ the default datatype).\n   o  The property's datatype MUST NOT be defined in\
    \ [RFC2518] (because\n      these types are already well-defined).\n"
- title: 5.1.  Example of PROPFIND/prop
  contents:
  - "5.1.  Example of PROPFIND/prop\n   >>Request\n   PROPFIND /bar.html HTTP/1.1\n\
    \   Host: example.org\n   Content-Type: text/xml; charset=\"utf-8\"\n   Content-Length:\
    \ xxxx\n   <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n   <D:propfind xmlns:D=\"\
    DAV:\"\n     xmlns:Z=\"http://ns.example.org/standards/z39.50\">\n     <D:prop>\n\
    \       <D:getcontenttype/>\n       <Z:released/>\n     </D:prop>\n   </D:propfind>\n\
    \   >>Response\n   HTTP/1.1 207 Multi-Status\n   Content-Type: text/xml; charset=\"\
    utf-8\"\n   Content-Length: xxxx\n   <?xml version=\"1.0\" encoding=\"utf-8\"\
    \ ?>\n   <D:multistatus xmlns:D=\"DAV:\"\n      xmlns:Z=\"http://ns.example.org/standards/z39.50\"\
    \n      xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n      xmlns:xs=\"\
    http://www.w3.org/2001/XMLSchema\">\n     <D:response>\n       <D:href>http://example.org/bar.html</D:href>\n\
    \       <D:propstat>\n         <D:prop>\n           <D:getcontenttype>text/html</D:getcontenttype>\n\
    \           <Z:released xsi:type=\"xs:boolean\">1</Z:released>\n         </D:prop>\n\
    \         <D:status>HTTP/1.1 200 OK</D:status>\n       </D:propstat>\n     </D:response>\n\
    \   </D:multistatus>\n   This example shows that the property value \"true\" is\
    \ returned with\n   the correct datatype information and that the server chose\
    \ one of the\n   two possible representations defined in XML Schema.  It also\
    \ shows\n   that datatype information is not returned for \"D:getcontenttype\"\
    , as\n   this property's datatype is already defined in [RFC2518].\n"
- title: 6.  Changes for Other Methods
  contents:
  - "6.  Changes for Other Methods\n   Servers that support other methods using the\
    \ DAV:multistatus response\n   format (such as the REPORT method defined in [RFC3253],\
    \ Section 3.6)\n   SHOULD apply the same extensions as defined in Section 5.\n"
- title: 7.  Compatibility Considerations
  contents:
  - "7.  Compatibility Considerations\n   This part of this specification does not\
    \ introduce any new protocol\n   elements, nor does it change the informal WebDAV\
    \ DTD.  It merely\n   specifies additional server semantics for the case where\
    \ clients\n   submit additional datatype information in an attribute on the\n\
    \   property element (previously undefined), and adds an additional\n   attribute\
    \ on property elements upon PROPFIND.\n   Clients not aware of datatype handling\
    \ should not supply the \"xsi:\n   type\" attribute on property elements (after\
    \ all, this attribute\n   belongs to the XML Schema-Instance namespace, which\
    \ has been defined\n   for exactly this purpose; see [XS1], Section 2.6.1).  Old\
    \ clients\n   should also ignore additional attributes on property elements\n\
    \   returned by PROPFIND (and similar methods), although the WebDAV\n   specification\
    \ only defines this behaviour for unknown elements and is\n   silent about unknown\
    \ attributes (see [RFC2518], Section 23.3.2.2).\n   Servers not aware of datatype\
    \ handling either drop the \"xsi:type\"\n   attribute or have it persist along\
    \ with the property value (see\n   [RFC2518], Section 4.4).  However, they will\
    \ never indicate\n   successful parsing of the datatype by returning back the\
    \ type in the\n   response to PROPPATCH.  Thus, clients can supply type information\n\
    \   without having to poll for server support in advance.\n"
- title: 8.  Internationalization Considerations
  contents:
  - "8.  Internationalization Considerations\n   This proposal builds on [RFC2518]\
    \ and inherits its\n   internationalizability.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   This protocol extension does not introduce any\
    \ new security\n   implications beyond those documented for the base protocol\
    \ (see\n   [RFC2518], Section 17).\n"
- title: 10.  Acknowledgements
  contents:
  - "10.  Acknowledgements\n   This document has benefited from thoughtful discussion\
    \ by Lisa\n   Dusseault, Stefan Eissing, Eric Sedlar, and Kevin Wiggen.\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2518]  Goland, Y., Whitehead, E., Faizi, A., Carter, S., and D.\n\
    \              Jensen, \"HTTP Extensions for Distributed Authoring --\n      \
    \        WEBDAV\", RFC 2518, February 1999.\n   [XS1]      Thompson, H., Beech,\
    \ D., Maloney, M., Mendelsohn, N., and\n              World Wide Web Consortium,\
    \ \"XML Schema Part 1: Structures\n              Second Edition\", W3C REC-xmlschema-1-20041028,\n\
    \              October 2004,\n              <http://www.w3.org/TR/2004/REC-xmlschema-1-20041028/>.\n\
    \   [XS2]      Biron, P., Malhotra, A., and World Wide Web Consortium,\n     \
    \         \"XML Schema Part 2: Datatypes Second Edition\", W3C REC-\n        \
    \      xmlschema-2-20041028, October 2004,\n              <http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/>.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [RFC3253]  Clemm, G., Amsden, J., Ellison,\
    \ T., Kaler, C., and J.\n              Whitehead, \"Versioning Extensions to WebDAV\"\
    , RFC 3253,\n              March 2002.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Julian F. Reschke\n   greenbytes GmbH\n   Hafenweg 16\n\
    \   Muenster, NW  48155\n   Germany\n   Phone: +49 251 2807760\n   Fax:   +49\
    \ 251 2807761\n   EMail: julian.reschke@greenbytes.de\n   URI:   http://greenbytes.de/tech/webdav/\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78 and at www.rfc-editor.org/copyright.html, and\n   except as set forth\
    \ therein, the authors retain all their rights.\n   This document and the information\
    \ contained herein are provided on an\n   \"AS IS\" basis and THE CONTRIBUTOR,\
    \ THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED BY (IF ANY), THE INTERNET\
    \ SOCIETY AND THE INTERNET\n   ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES,\
    \ EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE\
    \ OF THE\n   INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n\
    \   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
