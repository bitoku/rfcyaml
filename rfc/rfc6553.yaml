- title: __initial_text__
  contents:
  - "   The Routing Protocol for Low-Power and Lossy Networks (RPL) Option\n     \
    \     for Carrying RPL Information in Data-Plane Datagrams\n"
- title: Abstract
  contents:
  - "Abstract\n   The Routing Protocol for Low-Power and Lossy Networks (RPL) includes\n\
    \   routing information in data-plane datagrams to quickly identify\n   inconsistencies\
    \ in the routing topology.  This document describes the\n   RPL Option for use\
    \ among RPL routers to include such routing\n   information.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6553.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \      1.1. Requirements Language ......................................3\n  \
    \ 2. Overview ........................................................3\n   3.\
    \ Format of the RPL Option ........................................3\n   4. RPL\
    \ Router Behavior .............................................5\n   5. Security\
    \ Considerations .........................................6\n      5.1. DAG Inconsistency\
    \ Attacks ..................................6\n      5.2. Destination Advertisement\
    \ Object (DAO)\n           Inconsistency Attacks ......................................7\n\
    \   6. IANA Considerations .............................................7\n  \
    \ 7. Acknowledgements ................................................8\n   8.\
    \ References ......................................................8\n      8.1.\
    \ Normative References .......................................8\n      8.2. Informative\
    \ References .....................................8\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   RPL is a distance vector IPv6 routing protocol designed\
    \ for Low-Power\n   and Lossy Networks (LLNs) [RFC6550].  Such networks are typically\n\
    \   constrained in energy and/or channel capacity.  To conserve precious\n   resources,\
    \ a routing protocol must generate control traffic\n   sparingly.  However, this\
    \ is at odds with the need to quickly\n   propagate any new routing information\
    \ to resolve routing\n   inconsistencies quickly.\n   To help minimize resource\
    \ consumption, RPL uses a slow proactive\n   process to construct and maintain\
    \ a routing topology but a reactive\n   and dynamic process to resolving routing\
    \ inconsistencies.  In the\n   steady state, RPL maintains the routing topology\
    \ using a low-rate\n   beaconing process.  However, when RPL detects inconsistencies\
    \ that\n   may prevent proper datagram delivery, RPL temporarily increases the\n\
    \   beacon rate to quickly resolve those inconsistencies.  This dynamic\n   rate\
    \ control operation is governed by the use of dynamic timers also\n   referred\
    \ to as \"Trickle\" timers and defined in [RFC6206].  In\n   contrast to other\
    \ routing protocols (e.g., OSPF [RFC2328]), RPL\n   detects routing inconsistencies\
    \ using data-path verification, by\n   including routing information within the\
    \ datagram itself.  In doing\n   so, repair mechanisms operate only as needed,\
    \ allowing the control\n   and data planes to operate on similar time scales.\
    \  The main\n   motivation for data-path verification in LLNs is that control-plane\n\
    \   traffic should be carefully bounded with respect to the data traffic.\n  \
    \ Intuitively, there is no need to solve routing issues (which may be\n   temporary)\
    \ in the absence of data traffic.\n   RPL constructs a Directed Acyclic Graph\
    \ (DAG) that attempts to\n   minimize path costs to the DAG root according to\
    \ a set of metrics and\n   Objective Functions.  There are circumstances where\
    \ loops may occur,\n   and RPL is designed to use a data-path loop detection method.\
    \  This\n   is one of the known requirements of RPL, and other data-path usage\n\
    \   might be defined in the future.\n   To that end, this document defines a new\
    \ IPv6 option, called the RPL\n   Option, to be carried within the IPv6 Hop-by-Hop\
    \ header.  The RPL\n   Option is only for use between RPL routers participating\
    \ in the same\n   RPL Instance.\n"
- title: 1.1.  Requirements Language
  contents:
  - "1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n"
- title: 2.  Overview
  contents:
  - "2.  Overview\n   The RPL Option provides a mechanism to include routing information\n\
    \   with each datagram that a router forwards.  When receiving datagrams\n   that\
    \ include routing information, RPL routers process the routing\n   information\
    \ to help maintain the routing topology.\n   Every RPL router along a packet's\
    \ delivery path processes and updates\n   the RPL Option.  If the received packet\
    \ does not already contain a\n   RPL Option, the RPL router must insert a RPL\
    \ Option before forwarding\n   it to another RPL router.  This document also specifies\
    \ the use of\n   IPv6-in-IPv6 tunneling [RFC2473] when attaching a RPL option\
    \ to a\n   packet.  Use of tunneling ensures that the original packet remains\n\
    \   unmodified and that ICMP errors return to the RPL Option source\n   rather\
    \ than the source of the original packet.\n"
- title: 3.  Format of the RPL Option
  contents:
  - "3.  Format of the RPL Option\n   The RPL Option is carried in an IPv6 Hop-by-Hop\
    \ Options header,\n   immediately following the IPv6 header.  This option has\
    \ an alignment\n   requirement of 2n.  The option has the following format:\n\
    \      0                   1                   2                   3\n      0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n            \
    \                         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                \
    \                     |  Option Type  |  Opt Data Len |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |O|R|F|0|0|0|0|0| RPLInstanceID |          SenderRank           |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                       (sub-TLVs)                            |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                           Figure 1: RPL Option\n   Option Type:  0x63\n   Opt\
    \ Data Len:  8-bit field indicating the length of the option, in\n         octets,\
    \ excluding the Option Type and Opt Data Len fields.\n   Down 'O':  1-bit flag\
    \ as defined in Section 11.2 of [RFC6550].  The\n         processing SHALL follow\
    \ the rules described in Section 11.2 of\n         [RFC6550].\n   Rank-Error 'R':\
    \  1-bit flag as defined in Section 11.2 of [RFC6550].\n         The processing\
    \ SHALL follow the rules described in Section 11.2\n         of [RFC6550].\n \
    \  Forwarding-Error 'F':  1-bit flag as defined in Section 11.2 of\n         [RFC6550].\
    \  The processing SHALL follow the rules described in\n         Section 11.2 of\
    \ [RFC6550].\n   RPLInstanceID:  8-bit field as defined in Section 11.2 of [RFC6550].\n\
    \         The processing SHALL follow the rules described in Section 11.2\n  \
    \       of [RFC6550].\n   SenderRank:  16-bit field as defined in Section 11.2\
    \ of [RFC6550].\n         The processing SHALL follow the rules described in Section\
    \ 11.2\n         of [RFC6550].\n   The two high order bits of the Option Type\
    \ MUST be set to '01' and\n   the third bit is equal to '1'.  With these bits,\
    \ according to\n   [RFC2460], nodes that do not understand this option on a received\n\
    \   packet MUST discard the packet.  Also, according to [RFC2460], the\n   values\
    \ within the RPL Option are expected to change en route.  The\n   RPL Option Data\
    \ Length is variable.\n   The action taken by using the RPL Option and the potential\
    \ set of\n   sub-TLVs carried within the RPL Option MUST be specified by the RFC\n\
    \   of the protocol that uses that option.  No sub-TLVs are defined in\n   this\
    \ document.  A RPL device MUST skip over any unrecognized sub-TLVs\n   and attempt\
    \ to process any additional sub-TLVs that may appear after.\n"
- title: 4.  RPL Router Behavior
  contents:
  - "4.  RPL Router Behavior\n   Datagrams sent between RPL routers MUST include a\
    \ RPL Option or RPL\n   Source Route Header ([RFC6554]) and MAY include both.\
    \  A datagram\n   including a Source Routing Header (SRH) does not need to include\
    \ a\n   RPL Option since both the source and intermediate routers ensure that\n\
    \   the SRH does not contain loops.\n   When the router is the source of the original\
    \ packet and the\n   destination is known to be within the same RPL Instance,\
    \ the router\n   SHOULD include the RPL Option directly within the original packet.\n\
    \   Otherwise, routers MUST use IPv6-in-IPv6 tunneling [RFC2473] and\n   place\
    \ the RPL Option in the tunnel header.  Using IPv6-in-IPv6\n   tunneling ensures\
    \ that the delivered datagram remains unmodified and\n   that ICMPv6 errors generated\
    \ by a RPL Option are sent back to the\n   router that generated the RPL Option.\n\
    \   A RPL router chooses the next RPL router that should process the\n   original\
    \ packet as the tunnel exit-point.  In some cases, the tunnel\n   exit-point will\
    \ be the final RPL router along a path towards the\n   original packet's destination,\
    \ and the original packet will only\n   traverse a single tunnel.  One example\
    \ is when the final destination\n   or the destination's attachment router is\
    \ known to be within the same\n   RPL Instance.\n   In other cases, the tunnel\
    \ exit-point will not be the final RPL\n   router along a path and the original\
    \ packet may traverse multiple\n   tunnels to reach the destination.  One example\
    \ is when a RPL router\n   is simply forwarding a packet to one of its Destination-Oriented\
    \ DAG\n   (DODAG) parents.  In this case, the RPL router sets the tunnel exit-\n\
    \   point to a DODAG parent.  When forwarding the original packet hop-by-\n  \
    \ hop, the RPL router only makes a determination on the next hop\n   towards the\
    \ destination.\n   A RPL router receiving an IPv6-in-IPv6 packet destined to it\n\
    \   processes the tunnel packet as described in Section 3 of [RFC2473].\n   Before\
    \ IPv6 decapsulation, the RPL router MUST process the RPL\n   Option, if one exists.\
    \  After IPv6 decapsulation, if the router\n   determines that it should forward\
    \ the original packet to another RPL\n   router, it MUST encapsulate the packet\
    \ again using IPv6-in-IPv6\n   tunneling to include the RPL Option.  Fields within\
    \ the RPL Option\n   that do not change hop-by-hop MUST remain the same as those\
    \ received\n   from the prior tunnel.\n   RPL routers are responsible for ensuring\
    \ that a RPL Option is only\n   used between RPL routers:\n   1.  For datagrams\
    \ destined to a RPL router, the router processes the\n       packet in the usual\
    \ way.  For instance, if the RPL Option was\n       included using tunneled mode\
    \ and the RPL router serves as the\n       tunnel endpoint, the router removes\
    \ the outer IPv6 header, at the\n       same time removing the RPL Option as well.\n\
    \   2.  Datagrams destined elsewhere within the same RPL Instance are\n      \
    \ forwarded to the correct interface.\n   3.  Datagrams destined to nodes outside\
    \ the RPL Instance are dropped\n       if the outermost IPv6 header contains a\
    \ RPL Option not generated\n       by the RPL router forwarding the datagram.\n\
    \   To avoid fragmentation, it is desirable to employ MTU sizes that\n   allow\
    \ for the header expansion (i.e., at least 1280 + 40 (outer IP\n   header) + RPL_OPTION_MAX_SIZE),\
    \ where RPL_OPTION_MAX_SIZE is the\n   maximum RPL Option header size for a given\
    \ RPL network.  To take\n   advantage of this, however, the communicating endpoints\
    \ need to be\n   aware of the MTU along the path (i.e., through Path MTU Discovery).\n\
    \   Unfortunately, the larger MTU size may not be available on all links\n   (e.g.,\
    \ 1280 octets on IPv6 Low-Power Wireless Personal Area Network\n   (6LoWPAN) links).\
    \  However, it is expected that much of the traffic\n   on these types of networks\
    \ consists of much smaller messages than the\n   MTU, so performance degradation\
    \ through fragmentation would be\n   limited.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   The RPL Option assists RPL routers in detecting\
    \ routing\n   inconsistencies.  The RPL message security mechanisms defined in\n\
    \   [RFC6550] do not apply to the RPL Option.\n"
- title: 5.1.  DAG Inconsistency Attacks
  contents:
  - "5.1.  DAG Inconsistency Attacks\n   Using the Down 'O' flag and SenderRank field,\
    \ an attacker can cause\n   RPL routers to believe that a DAG inconsistency exists\
    \ within the RPL\n   Instance identified by the RPLInstanceID field.  This attack\
    \ would\n   cause a RPL router to reset its DODAG Information Object (DIO)\n \
    \  Trickle timer and begin transmitting DIO messages more frequently.\n   In order\
    \ to avoid any unacceptable impact on network operations, an\n   implementation\
    \ MAY limit the rate of Trickle timer resets caused by\n   receiving a RPL Option\
    \ to no greater than MAX_RPL_OPTION_RANK_ERRORS\n   per hour.  A RECOMMENDED value\
    \ for MAX_RPL_OPTION_RANK_ERRORS is 20.\n"
- title: 5.2.  Destination Advertisement Object (DAO) Inconsistency Attacks
  contents:
  - "5.2.  Destination Advertisement Object (DAO) Inconsistency Attacks\n   In Storing\
    \ mode, RPL routers maintain Downward routing state.  Under\n   normal operation,\
    \ the RPL Option assists RPL routers in cleaning up\n   stale Downward routing\
    \ state by using the Forwarding-Error 'F' flag\n   to indicate that a datagram\
    \ could not be delivered by a child and is\n   being sent back to try a different\
    \ child.  Using this flag, an\n   attacker can cause a RPL router to discard Downward\
    \ routing state.\n   In order to avoid any unacceptable impact on network operations,\
    \ an\n   implementation MAY limit the rate of discarding Downward routing\n  \
    \ state caused by receiving a RPL Option to no greater than\n   MAX_RPL_OPTION_FORWARD_ERRORS\
    \ per hour.  A RECOMMENDED value for\n   MAX_RPL_OPTION_FORWARD_ERRORS is 20.\n\
    \   In Non-Storing mode, only the Low-Power and Lossy Network Border\n   Router\
    \ (LBR) maintains Downward routing state.  Because RPL routers\n   do not maintain\
    \ Downward routing state, the RPL Option cannot be used\n   to mount such attacks.\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   IANA has assigned a new value in the Destination\
    \ Options and Hop-by-\n   Hop Options registry.  The value is as follows:\n  \
    \ Hex Value     Binary Value\n                 act  chg  rest     Description\
    \        Reference\n   ---------     ---  ---  -------  -----------------  ----------\n\
    \     0x63         01    1   00011   RPL Option         [RFC6553]\n   As specified\
    \ in [RFC2460], the first two bits indicate that the IPv6\n   node MUST discard\
    \ the packet if it doesn't recognize the option type,\n   and the third bit indicates\
    \ that the Option Data may change en route.\n   The remaining bits serve as the\
    \ option type.\n   IANA has created a registry called RPL-option-TLV, for the\
    \ sub-TLVs\n   carried in the RPL Option header.  New codes may be allocated only\
    \ by\n   IETF Review [RFC5226].  The type field is an 8-bit field whose value\n\
    \   be between 0 and 255, inclusive.\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   The authors thank Jari Arkko, Ralph Droms, Adrian Farrel,\
    \ Stephen\n   Farrell, Richard Kelsey, Suresh Krishnan, Vishwas Manral, Erik\n\
    \   Nordmark, Pascal Thubert, Sean Turner, and Tim Winter, for their\n   comments\
    \ and suggestions that helped shape this document.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2328]  Moy, J., \"OSPF Version 2\", STD 54, RFC 2328, April 1998.\n\
    \   [RFC2460]  Deering, S. and R. Hinden, \"Internet Protocol, Version 6\n   \
    \           (IPv6) Specification\", RFC 2460, December 1998.\n   [RFC2473]  Conta,\
    \ A. and S. Deering, \"Generic Packet Tunneling in\n              IPv6 Specification\"\
    , RFC 2473, December 1998.\n   [RFC5226]  Narten, T. and H. Alvestrand, \"Guidelines\
    \ for Writing an\n              IANA Considerations Section in RFCs\", BCP 26,\
    \ RFC 5226,\n              May 2008.\n   [RFC6206]  Levis, P., Clausen, T., Hui,\
    \ J., Gnawali, O., and J. Ko,\n              \"The Trickle Algorithm\", RFC 6206,\
    \ March 2011.\n   [RFC6550]  Winter, T., Ed., Thubert, P., Ed., Brandt, A., Hui,\
    \ J.,\n              Kelsey, R., Levis, P., Pister, K., Struik, R., Vasseur,\n\
    \              JP., and R. Alexander, \"RPL: IPv6 Routing Protocol for\n     \
    \         Low-Power and Lossy Networks\", RFC 6550, March 2012.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [RFC6554]  Hui, J., Vasseur, JP., Culler, D.,\
    \ and V. Manral, \"An IPv6\n              Routing Header for Source Routes with\
    \ the Routing Protocol\n              for Low-Power and Lossy Networks (RPL)\"\
    , RFC 6554,\n              March 2012.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Jonathan W. Hui\n   Cisco Systems\n   170 West Tasman\
    \ Drive\n   San Jose, California  95134\n   USA\n   Phone: +408 424 1547\n   EMail:\
    \ jonhui@cisco.com\n   JP. Vasseur\n   Cisco Systems\n   11, Rue Camille Desmoulins\n\
    \   Issy Les Moulineaux  92782\n   France\n   EMail: jpv@cisco.com\n"
