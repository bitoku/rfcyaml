- title: __initial_text__
  contents:
  - '                PSN END-TO-END FUNCTIONAL SPECIFICATION

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo is an updated version of BBN Report 5775, \"\
    End-to-End\n   Functional Specification\".  It has been updated to reflect changes\n\
    \   since that report was written, and is being distributed in this form\n   to\
    \ provide information to the ARPA-Internet community about this\n   work.  The\
    \ changes described in this memo will affect AHIP (1822\n   LH/DH/HDH) and X.25\
    \ hosts directly connected to BBNCC PSNs.\n   Information concerning the schedule\
    \ for deployment of this version of\n   the PSN software (Release 7.0) in the\
    \ ARPANET and the MILNET can be\n   obtained from DCA.  Distribution of this memo\
    \ is unlimited.\n"
- title: 1  Introduction
  contents:
  - "1  Introduction\n   This memo contains the functional specification for the new\
    \ BBNCC PSN\n   End-to-End (EE) protocol and module (PSN stands for Packet Switch\n\
    \   node, and has previously been known as the IMP).  The EE module is\n   that\
    \ portion of the PSN code which is responsible for maintaining EE\n   connections\
    \ that reliably deliver data across the network, and for\n   handling the packet\
    \ level (level 3) interactions with the hosts.  The\n   EE protocol is the peer\
    \ protocol used between EE modules to create,\n   maintain, and close connections.\
    \ The new EE is being developed in\n   order to correct a number of deficiencies\
    \ in the old EE, to improve\n   its performance and overall throughput, and to\
    \ better equip the PSN\n   to support its current and anticipated host population.\n\
    \   The initial version of the new EE is being fielded in PSN Release\n   7.0.\
    \  Both the old and new EEs are resident in the PSN code, and each\n   PSN may\
    \ run either the old or the new EE (but not both) at any time,\n   under the control\
    \ of the Network Operations Center (NOC).  The NOC\n   has facilities for switching\
    \ individual PSNs or the entire network\n   between the old and new EEs.  When\
    \ the old EE is running, PSN 7.0's\n   functionality is equivalent to that provided\
    \ by PSN 6.0, and the\n   differences listed in this memo do not apply.  Hosts\
    \ on PSNs running\n   the old EE cannot interoperate with hosts on PSNs running\
    \ the new EE.\n   There are two additional sections following this introduction.\n\
    \   Section two describes the motivation and goals driving the new EE\n   project.\n\
    \   Section three contains the new EE's functional specification.  It\n   describes\
    \ the services provided to the various types of hosts that\n"
- title: RFC 979                                                       March 1986
  contents:
  - 'RFC 979                                                       March 1986

    '
- title: PSN End-to-End Functional Specification
  contents:
  - "PSN End-to-End Functional Specification\n   are supported by the PSN, the addressing\
    \ capabilities that it makes\n   available, the functionality required for the\
    \ peer protocol, and the\n   performance goals for the new EE.\n   Two notes concerning\
    \ terminology are required.  Throughout this\n   document, the units of information\
    \ sent from one host to another are\n   referred to as \"messages\", and the units\
    \ into which these messages\n   are fragmented for transmission through the subnetwork\
    \ are referred\n   to as \"subnet packets\" or just \"packets\".  This differs\
    \ from X.25's\n   terminology; X.25 \"packets\" are actually messages.  Also,\
    \ in this\n   report the term \"AHIP\" is used to refer to the ARPANET Host-IMP\n\
    \   Protocol described in BBN Report 1822, \"Specifications for the\n   Interconnection\
    \ of a Host and an IMP\".\n"
- title: 2  Motivation
  contents:
  - "2  Motivation\n   The old EE was developed almost a decade ago, in the early\
    \ days of\n   packet-switching technology.  This part of the PSN has remained\n\
    \   stable for eight years, while the environment within which the\n   technology\
    \ operates has changed dramatically.  At the time the old EE\n   was developed,\
    \ it was used in only one network, the ARPANET.  There\n   are now many PSN-based\
    \ networks, some of which are grouped into\n   internets.  Originally, AHIP was\
    \ the only host interface protocol,\n   with NCP above it.  The use of X.25 is\
    \ now rapidly increasing, and\n   TCP/IP has replaced NCP.\n   This section describes\
    \ the needs for more flexibility and increases\n   in some of the limits of the\
    \ old EE, and lists the goals which this\n   new design should meet.\n   2.1 \
    \ Benefits of a New EE\n      Network growth and the changing network environment\
    \ make improved\n      performance, in terms of increasing the PSN's throughput,\
    \ an\n      important goal for the new EE.  The new EE reduces protocol\n    \
    \  traffic overhead, thereby making more efficient use of network\n      line\
    \ bandwidth and transit PSN processing power.\n      The new EE provides a set\
    \ of network transport services which are\n      appropriate for both the AHIP\
    \ and X.25 host interfaces, unlike the\n      old EE, which is highly optimized\
    \ for and tightly tied to the AHIP\n      host interface.\n      The new EE has\
    \ an adjustable window facility instead of the old\n      EE's fixed window of\
    \ eight outstanding messages between any host\n      pair.  The old EE applies\
    \ this limit to all traffic between a pair\n      of hosts; it has no notion of\
    \ multiple independent channels or\n"
- title: RFC 979                                                       March 1986
  contents:
  - 'RFC 979                                                       March 1986

    '
- title: PSN End-to-End Functional Specification
  contents:
  - "PSN End-to-End Functional Specification\n      connections between two hosts,\
    \ which the new EE allows.  A network\n      with satellite trunking, and consequently\
    \ long delays, is an\n      example of where the new window facility increases\
    \ the EE\n      throughput that can be attained.  TACs and gateways provide\n\
    \      another example where the old EE's fixed window limits throughput;\n  \
    \    all of the traffic between a host and a TAC or a gateway currently\n    \
    \  uses the same EE connection and is subject to the limit of eight\n      outstanding\
    \ messages, even if more than one user's traffic flows\n      are involved.  With\
    \ the new EE, this restriction no longer\n      applies.\n      Supportability\
    \ also motivates rewriting the EE software.  The new\n      EE can be written\
    \ using more modern techniques of programming\n      practice, such as layering\
    \ and modularity, which were not as well\n      understood when the old EE was\
    \ first designed, and which will make\n      the EE easier to support and to enhance.\n\
    \      Finally, the new EE includes a number of new features that improve\n  \
    \    the PSN's ability to provide services which are more closely\n      optimized\
    \ to what our customers need for their applications.\n      These include new\
    \ addressing capabilities, precedence levels,\n      end-to-end data integrity\
    \ checks, and monitoring and control\n      capabilities.\n   2.2  Goals for the\
    \ New EE\n      The new EE's X.25 support is greatly improved over that provided\n\
    \      by the old EE.  One element of this improvement is at least\n      halving\
    \ the amount of per-message EE protocol overhead.  Another\n      element is the\
    \ unification of the different storage allocation\n      mechanisms used by the\
    \ old EE and X.25 modules, where data\n      transferred between the old EE and\
    \ X.25 must be copied from one\n      type of structure to the other.\n      The\
    \ new EE presents, as much as possible, a non-blocking interface\n      to the\
    \ hosts.  If a host overwhelms the PSN with traffic, the PSN\n      ultimately\
    \ has to block it, but this should happen less frequently\n      than at present.\n\
    \      In the old EE, all of the hosts contend for the same pool of\n      resources.\
    \  In the new EE, fairness is enforced in resource\n      allocation among different\
    \ hosts through per-host minimum\n      allocations for buffers and connection\
    \ blocks as part of a general\n      buffer management system.  This insures that\
    \ no host can be\n      completely \"shut out\" of service by the actions of another\
    \ host at\n      its PSN.\n"
- title: RFC 979                                                       March 1986
  contents:
  - 'RFC 979                                                       March 1986

    '
- title: PSN End-to-End Functional Specification
  contents:
  - "PSN End-to-End Functional Specification\n      The EE supports four precedence\
    \ levels and optional (on a per-\n      network basis) preemption features.\n\
    \      Addressing capabilities have been extended to include hunt groups.\n  \
    \    Instead of a fixed window of eight outstanding messages between\n      any\
    \ host pair, the maximum window size on an EE connection is\n      configurable\
    \ to a maximum of 127.  The EE allows host pairs to set\n      up multiple connections,\
    \ each with an independent window.\n      A result of the old EE's reliance on\
    \ destination buffer\n      reservation is that subnet packets can be lost if\
    \ an intermediate\n      node goes down.  The new EE uses source buffering with\n\
    \      retransmission in order to provide more reliable service.\n      The new\
    \ EE has a duplex peer protocol, allowing acknowledgments to\n      be piggybacked\
    \ on reverse traffic to reduce protocol overhead.\n      When reverse traffic\
    \ is not available, acknowledgments are\n      aggregated and sent together.\n\
    \      The result of this development will be end-to-end software with\n     \
    \ greater performance, supportability, and functionality.\n"
- title: 3  End-to-End Functionality
  contents:
  - "3  End-to-End Functionality\n   This section contains the new EE's functional\
    \ specification.  It\n   describes the services provided to the various types\
    \ of hosts that\n   are supported by the new EE, the addressing capabilities that\
    \ it\n   makes available, the functionality required for the peer protocol,\n\
    \   the performance goals for the new EE, the EE's network management\n   specification,\
    \ and provisions for testing and debugging.\n   3.1  Network Layer Services\n\
    \      The most important part of designing any new system is determining\n  \
    \    its external functionality.  In the case of the new EE, this is\n      the\
    \ network layer services and interfaces presented to the hosts.\n      3.1.1 \
    \ Common Functionality\n         The following three sections list details concerning\
    \ the new\n         EE's support for the X.25, AHIP and Interoperable network\
    \ layer\n         services.  In the interest of brevity, however, additional\n\
    \         functionality available to all three services is listed herein:\n  \
    \          o  In order to check data integrity as packets cross through\n    \
    \           the network, the old EE relies on a trunk-level,\n"
- title: RFC 979                                                       March 1986
  contents:
  - 'RFC 979                                                       March 1986

    '
- title: PSN End-to-End Functional Specification
  contents:
  - "PSN End-to-End Functional Specification\n               hardware/ firmware-generated,\
    \ per-packet CRC code (which\n               is either 16 or 24 bits in size,\
    \ depending on the PSN-PSN\n               trunk protocol in use) and a software-generated\n\
    \               per-packet 16-bit checksum.  Neither of these are\n          \
    \     end-to-end checks, only PSN-to-PSN checks.  For the new\n              \
    \ EE, the software checksum has been extended to be an\n               optional\
    \ 32-bit end-to-end checksum, and the per-packet\n               software checksum\
    \ has been reduced to a parity bit.\n               The network administration\
    \ now has a choice as to which\n               is most important, efficient utilization\
    \ of network\n               trunks (due to the reduced size of the per-packet\n\
    \               headers), or strong checks on data integrity.\n              \
    \ Those hosts that require strong data integrity checking\n               can\
    \ request, in their configuration, that all messages\n               originating\
    \ from this host include a 32-bit per-message\n               end-to-end checksum.\
    \  This checksum is computed in the\n               source PSN, is ignored by\
    \ tandem PSNs along the path, and\n               is checked in the destination\
    \ PSN.  If the checksum does\n               not check, the EE's regular source\
    \ retransmission\n               facilities are used to have the message resent.\n\
    \            o  The old EE's access control mechanism allows 15 separate\n   \
    \            communities of interest to be defined, and uses an\n            \
    \   unnecessarily complicated algorithm to define which\n               communities\
    \ can intercommunicate.  This mechanism is\n               being expanded to allow\
    \ 32 communities of interest,\n               rather than the previous limit of\
    \ 15.  The feature that\n               allowed hosts to communicate with a community\
    \ without\n               actually being a member of that community has been\n\
    \               removed because it was never utilized.\n            o  The addressing\
    \ capabilities of the PSN have been improved\n               by the new EE.  In\
    \ addition to continuing to support the\n               old EE's logical addressing\
    \ facility, hunt groups (for\n               both AHIP and X.25 hosts) have been\
    \ added.  These are\n               described further in Section 3.2.\n      \
    \      o  Connection  block  preemption  is  supported on a\n               configurable\
    \ per-network basis.  If a network is\n               configured to use  connection\
    \ block preemption, then\n               lower-precedence connections can be closed\
    \ by the  PSN,\n               if  necessary,  in  order  to  maintain  configured\n\
    \               reserves of PSN resources for higher-precedence\n            \
    \   connections.\n"
- title: RFC 979                                                       March 1986
  contents:
  - 'RFC 979                                                       March 1986

    '
- title: PSN End-to-End Functional Specification
  contents:
  - "PSN End-to-End Functional Specification\n            o  The new EE supports congestion\
    \ control and improved\n               resource allocation policies which ensure\
    \ fairness and\n               graceful degradation of service under extreme load.\n\
    \               Certain resources can be prereserved to each host port,\n    \
    \           and each port can also be limited in its use of shared\n         \
    \      resources.  This ensures that no host can be totally shut\n           \
    \    out from PSN resources by the actions of other hosts at\n               the\
    \ same PSN.  In addition, each PSN is sensitive to\n               congestion\
    \ in both of the PSNs at the endpoints of each\n               connection, and\
    \ it can exert backpressure (flow control)\n               on hosts, as necessary,\
    \ to prevent congestion.\n      3.1.2  X.25\n         The new EE's X.25 service\
    \ represents an improvement over the\n         X.25 service available from the\
    \ old EE.  The following\n         paragraphs summarize the X.25 support in the\
    \ new EE:\n            o  The new EE provides both DDN Standard and Basic X.25\n\
    \               service, as described in BBN Reports 5476, \"DDN X.25 Host\n \
    \              Interface Specification,\" and 5500, \"C/30 PSN X.25\n        \
    \       Interface Specification,\" respectively.  In addition, the\n         \
    \      description of DDN Standard Service, Version 2, is found\n            \
    \   in Section 3.1.4 of this document.\n            o  All data packets and call\
    \ requests are source-buffered in\n               the source PSN to provide a\
    \ better level of reliability\n               for network traffic.  This should\
    \ keep the network from\n               issuing a reset on an open connection\
    \ as a result of a\n               lost packet in the subnet or any other occasional\n\
    \               subnetwork failure.  Except in cases of extreme network\n    \
    \           or node congestion, recovery from lost subnet packets is\n       \
    \        automatic and transparent to the end user or host.\n            o  Both\
    \ local and end-to-end significance for host window\n               advancement\
    \ (based upon the D bit from the host) are\n               planned, but only end-to-end\
    \ significance is included in\n               the initial release (the old EE\
    \ did not include local\n               significance).  The D bit is passed through\
    \ the network\n               transparently.\n      3.1.3  AHIP\n         Another\
    \ service provided by the new EE is defined in BBN Report\n         1822, \"Specifications\
    \ for the Interconnection of a Host and an\n         IMP\", as amended by Report\
    \ 5506, \"The ARPANET 1822L Host Access\n         Protocol\".  This ARPANET Host-IMP\
    \ Protocol (AHIP) service is\n"
- title: RFC 979                                                       March 1986
  contents:
  - 'RFC 979                                                       March 1986

    '
- title: PSN End-to-End Functional Specification
  contents:
  - "PSN End-to-End Functional Specification\n         supported in a backwards-compatible\
    \ manner by the new EE; since\n         this is a BBNCC-private protocol, the\
    \ new EE can improve the\n         service to better match its current uses (the\
    \ AHIP protocol was\n         first designed over twelve years ago).  The main\
    \ changes to\n         AHIP are to remove the absolute eight-message-in-flight\n\
    \         restriction for connection-based traffic, and to improve the\n     \
    \    PSN's \"datagram\" support for non-connection-based traffic.\n         For\
    \ this new support, datagram service is planned (for PSN\n         Release 8.0)\
    \ to include fragmentation and reassembly by the\n         network, but without\
    \ requiring the network overhead used by\n         connections, and without the\
    \ reliability, message sequencing,\n         and duplicate detection that connections\
    \ provide.  However,\n         \"destination dead\" indications will be provided\
    \ to the source\n         host where possible and appropriate.\n         With\
    \ the new EE, hosts are also able to create multiple\n         connections between\
    \ host pairs by using the 8-bit \"handling\n         type\" field to specify up\
    \ to 256 different connections.  The\n         field is divided into high-order\
    \ bits that specify the\n         connection's precedence, and low-order bits\
    \ that distinguish\n         between multiple connections at the same precedence\
    \ level.\n         Since the new EE is using four precedence levels, the handling\n\
    \         type field is used to specify 64 different connections at each\n   \
    \      of the four precedence levels.\n         AHIP connections will continue\
    \ to be implicitly created and\n         automatically torn down after a configurable\
    \ period (nominally\n         three minutes) of inactivity, or because of connection\
    \ block\n         contention.\n         To summarize the new end-to-end's AHIP\
    \ support:\n            o  The old EE's AHIP services are supported in a\n   \
    \            backwards-compatible manner (except where listed below).\n      \
    \      o  The old EE's uncontrolled (subtype 3) message service\n            \
    \   will be replaced, in PSN Release 8.0, by the datagram\n               service\
    \ mentioned above.  This service will provide\n               fragmentation and\
    \ reassembly, so that there is no special\n               restriction on the size\
    \ of datagrams; will not insure\n               that messages are delivered in\
    \ order or unduplicated, or\n               provide a delivery confirmation; will\
    \ notify the source\n               host if the destination host or PSN is dead;\
    \ will not\n               require the connection block overhead associated with\n\
    \               connections; and may lose messages in the subnet, without\n  \
    \             notification to the source host, in the event of subnet\n"
- title: RFC 979                                                       March 1986
  contents:
  - 'RFC 979                                                       March 1986

    '
- title: PSN End-to-End Functional Specification
  contents:
  - "PSN End-to-End Functional Specification\n               congestion or component\
    \ failures.  This service could be\n               useful for applications that\
    \ do not need the absolute\n               reliability or sequentiality of connections\
    \ and therefore\n               wish to avoid their associated overhead.\n   \
    \            Datagrams are not supported by the new EE in PSN Release\n      \
    \         7.0.\n            o  Connections no longer have the old EE's \"eight\
    \ messages\n               in flight\" restriction, and a pair of hosts can be\n\
    \               connected with up to 256 simultaneous implicit\n             \
    \  connections.  In addition, multiple precedence levels are\n               supported.\n\
    \            o  The new EE supports interoperability between AHIP and\n      \
    \         X.25 hosts (see Section 3.1.4 for further details).\n            o \
    \ AHIP local, distant, and HDH (both message and packet\n               mode)\
    \ hosts are supported.  The new EE does not support\n               VDH hosts.\
    \  VHA and 32-bit leaders are supported.\n            o  Packet-mode HDH has been\
    \ extended to allow longer packet\n               data frames (see BBN Report\
    \ 1822, Appendix J, for a\n               description of the HDH protocol).  Middle\
    \ packet frames\n               can now contain up to 128 octets of data, rather\
    \ than the\n               previous 126 (although there must still be an even\
    \ number\n               of octets per frame).  Last packet frames can now contain\n\
    \               up to 127 octets of data, rather than the previous 125,\n    \
    \           and the number of octets need not be even.  However, the\n       \
    \        maximum total message size is still 1007 data octets. The\n         \
    \      PSN uses these new packet frame size limits when sending\n            \
    \   packet frames to packet-mode HDH hosts unless the host is\n              \
    \ configured to allow only 126-octet frames.  In addition,\n               there\
    \ are restrictions on packet-mode HDH when\n               interoperating with\
    \ DDN Standard X.25 hosts; these\n               restrictions are discussed in\
    \ Section 3.1.4.\n      3.1.4  Interoperability (DDN Standard X.25)\n        \
    \ One of the main goals of the new EE is to provide\n         interoperability\
    \ between AHIP and X.25 hosts.  On the surface,\n         this may appear difficult,\
    \ since the two host access protocols\n         have little in common: X.25 presents\
    \ a connection-oriented\n         interface with explicit windowing, while AHIP\
    \ presents a\n         reliable datagram-oriented interface with implicit flow\n\
    \         control.  However, they both have the same underlying\n"
- title: RFC 979                                                       March 1986
  contents:
  - 'RFC 979                                                       March 1986

    '
- title: PSN End-to-End Functional Specification
  contents:
  - "PSN End-to-End Functional Specification\n         functionality:  they allow\
    \ the hosts to submit and receive\n         messages, and they both provide a\
    \ reliable and sequenced\n         delivery service.\n         The key to interoperability\
    \ is the fact that in the new EE,\n         both X.25 and AHIP connections use\
    \ the same underlying\n         protocols and constructs.  The new EE has AHIP\
    \ and X.25 Level 3\n         modules that translate between the specific host\
    \ protocols and\n         the EE mechanisms.  Since these Level 3 host modules\
    \ share a\n         common interface with the EE, the fact that the two hosts\
    \ on\n         either side of an EE connection are not using the same access\n\
    \         protocol is largely hidden.\n         As a result, the new EE supports\
    \ basic interoperability.\n         However, there are some special cases that\
    \ need to be mapped\n         from one protocol to the other, or just not supported\
    \ because\n         no mapping exists.  For example, AHIP has no analogue of X.25's\n\
    \         Interrupt packet, while X.25 does not support an unreliable\n      \
    \   datagram service such as AHIP's subtype 3 messages.  For each\n         of\
    \ these cases, the recommendations of BBN Report 5476, \"DDN\n         X.25 Host\
    \ Interface Specification,\" have been followed.\n         The interoperable service\
    \ provided by the new EE is called DDN\n         Standard Service, Version 2.\
    \  Standard Service, Version 1, is\n         defined in BBN Reports 5760, \"Preliminary\
    \ Interoperable\n         Software Design,\" and 5900 Revision 1, \"Supplement\
    \ to BBN\n         Report Nos. 5476 and 5760\".\n         The major differences\
    \ between Versions 1 and 2 are:\n            o  Version 2 offers improved performance\
    \ over Version 1.\n            o  The EE now provides four precedence levels.\
    \  Therefore,\n               the four precedence levels allowed in the DDN-private\n\
    \               Call Precedence Negotiation are mapped directly to subnet\n  \
    \             precedence levels, instead of being collapsed into two\n       \
    \        subnet precedence levels as in Version 1.\n            o  On an interoperable\
    \ connection, the X.25 protocol ID in\n               an X.25-originated message\
    \ is translated to an AHIP link\n               number (the upper eight bits of\
    \ the message-ID field)\n               using a lookup table.  Version 1 supports\
    \ only the IP\n               protocol ID and corresponding link number of 155\n\
    \               (decimal).  Version 2 allows new values to be added to\n     \
    \          the lookup table.  At present, IP is the only protocol\n          \
    \     supported.  In addition, the AHIP link number is also\n               used\
    \ to distinguish one connection from another.  This\n"
- title: RFC 979                                                       March 1986
  contents:
  - 'RFC 979                                                       March 1986

    '
- title: PSN End-to-End Functional Specification
  contents:
  - "PSN End-to-End Functional Specification\n               guarantees that when\
    \ an AHIP host is sending messages to\n               an X.25 host, messages using\
    \ different link numbers come\n               into the X.25 host on different\
    \ X.25 connections.\n            o  Since a \"translation module\" is no longer\
    \ necessary in\n               the PSN, interoperable connections now have end-to-end\n\
    \               significance, with a direct correspondence between X.25\n    \
    \           RRs and AHIP RFNMs.  This preserves the meaning of the\n         \
    \      RFNM as defined in Report 1822.  Although Release 7.0\n               only\
    \ offers end-to-end significance, the D bit is passed\n               transparently\
    \ on Standard Service connections between two\n               X.25 hosts.\n  \
    \          o  Up to 256 simultaneous connections are supported between\n     \
    \          host pairs that are using the same addresses and\n               precedence\
    \ levels.  Version 1 only supported one such\n               connection.\n   \
    \      The following Version 1 services are not offered by Version 2:\n      \
    \      o  Permanent Virtual Circuits.\n            o  X.25 protocol bypass (a\
    \ BBN-private service).\n         A number of items in Report 5760 were the subject\
    \ of some\n         discussion, and three of them need to be specifically mentioned\n\
    \         here.  First, for DDN Standard Service, Version 1,\n         acknowledgments\
    \ have local significance only, and the D bit\n         must be set to 0 in the\
    \ call request.  In DDN Standard Service,\n         Version 2, only end-to-end\
    \ significance is being provided, as\n         was mentioned above.  For backwards\
    \ compatibility with Version\n         1, the D bit can be set to 0 or 1 in a\
    \ call, but hosts are\n         advised that only end-to-end significance is provided\
    \ in\n         Version 2.\n         Second, non-standard Default Precedence is\
    \ not supported by\n         either Standard Service Version 1 or Version 2. \
    \ Support for\n         this facility in Version 1 was withdrawn at the request\
    \ of DCA.\n         Third, although DTEs are allowed to request maximum packet\n\
    \         sizes of 16, 32, and 64 octets, the DCE always negotiates up to\n  \
    \       128 octets, as per Section 6.12 (\"Flow Control Parameter\n         Negotiation\"\
    ) of the CCITT 1984 X.25 Recommendation.  This is\n         true of both Version\
    \ 1 and Version 2.  Since IP and TCP are\n         required when Standard Service\
    \ is in use, this is a reasonable\n         restriction (due to the length of\
    \ IP and TCP headers).\n"
- title: RFC 979                                                       March 1986
  contents:
  - 'RFC 979                                                       March 1986

    '
- title: PSN End-to-End Functional Specification
  contents:
  - "PSN End-to-End Functional Specification\n         One issue must be raised concerning\
    \ interoperability between\n         X.25 and packet-mode HDH hosts.  In order\
    \ to efficiently\n         interoperate, packet-mode HDH hosts should completely\
    \ fill\n         their middle packet frames with 128 octets of data.\n       \
    \  Packet-mode HDH hosts that send or require receiving middle\n         packet\
    \ frames with less than 128 octets of data can still\n         interoperate with\
    \ X.25 hosts, but at a greater expense of PSN\n         CPU resources per message.\n\
    \   3.2  Addressing\n      The old EE supports, for both AHIP and X.25 hosts,\
    \ two forms of\n      host addressing, physical and logical.\n      Physical addressing\
    \ consists of identifying a host port by the\n      combination of its PSN number\
    \ and the port number on that PSN.\n      Logical addressing allows an arbitrary\
    \ 16-bit \"name\" to refer to a\n      list of one or more host ports.  The EE\
    \ tries to open a connection\n      to one of the ports in the list according\
    \ to the criterion chosen\n      for that name: first reachable in the ordered\
    \ list, closest port\n      (in terms of routing delay), or round-robin load sharing.\n\
    \      For the new EE, logical addressing is supported on an explicit\n      per-connection\
    \ basis: all logical-to-physical address translations\n      take place in the\
    \ source PSN when a connection is established.\n      Once this translation has\
    \ occurred, all data messages on the\n      connection are sent to the same physical\
    \ address.\n      In addition, hunt groups are also now supported for both X.25\
    \ and\n      AHIP hosts.  This new capability allows host ports on a\n      destination\
    \ PSN to be combined into a \"hunt group\".  The ports\n      share the same group\
    \ identifier, and incoming connections are\n      evenly spread over the ports\
    \ in the group.  This differs from\n      logical addressing's load sharing, where\
    \ all name translations\n      take place in the source PSN, the different ports\
    \ can be on any\n      number of PSNs, and the load sharing is on a per-source-PSN\
    \ basis.\n      By contrast, all of the host ports in a hunt group are on the\
    \ same\n      PSN, the group-to-port resolution takes place in the destination\n\
    \      PSN, and the load sharing of incoming connections can be\n      guaranteed\
    \ over the ports by the destination PSN.  For X.25, hunt\n      groups comply\
    \ with Section 6.24 of the 1984 X.25 Recommendation.\n      Note that Called Line\
    \ Address Modification is not supported.\n"
- title: RFC 979                                                       March 1986
  contents:
  - 'RFC 979                                                       March 1986

    '
- title: PSN End-to-End Functional Specification
  contents:
  - "PSN End-to-End Functional Specification\n   3.3  Protocol Functionality\n   \
    \   The EE peer protocol runs between EE modules in PSNs on either end\n     \
    \ of an EE connection.  This protocol and its mechanisms have to\n      perform\
    \ the following functions:\n         o  Provide full duplex connections (the old\
    \ EE provides simplex\n            connections, and any two-way traffic, such\
    \ as that generated\n            by TCP, requires two subnet connections).\n \
    \        o  Open a connection and optionally send a full message's worth\n   \
    \         of data as a part of the open request (the old EE requires a\n     \
    \       separate opening sequence in each direction before data can\n        \
    \    flow).\n         o  Reliably send connection-oriented messages, properly\n\
    \            fragmented/reassembled and sequenced.\n         o  Close (clear)\
    \ a connection (normally, or in a \"clean-up\"\n            mode after a host\
    \ or PSN dies).\n         o  Reset a connection (like the X.25 reset procedure).\n\
    \         o  Be able to send a limited amount of out-of-band traffic\n       \
    \     associated with a connection (like the X.25 interrupt).\n         o  Use\
    \ source buffering with message retransmission (after a\n            timeout)\
    \ to insure delivery (the old EE depends on\n            destination buffer preallocation,\
    \ which adds protocol\n            overhead and cannot recover from lost packets\
    \ in the\n            subnet).\n         o  Use an internal connection window\
    \ of up to 127 messages.\n         o  Support two types of ACKs, Internal ACKs\
    \ (IACKs) and\n            External ACKs (EACKs), which are further described\
    \ following\n            this list\n         o  Have an inactivity timer for each\
    \ connection.  For AHIP and\n            Standard X.25, the connection is closed\
    \ if the timer fires.\n            For Basic X.25, the EE uses an internal Hello/I-Heard-You\n\
    \            sequence with the PSN on the other end of the connection to\n   \
    \         check if the other end's host or PSN is still alive.  If\n         \
    \   not, then the connection is closed.\n         o  Be able to gracefully handle\
    \ resource shortages and avoid\n            reassembly lockup problems.\n"
- title: RFC 979                                                       March 1986
  contents:
  - 'RFC 979                                                       March 1986

    '
- title: PSN End-to-End Functional Specification
  contents:
  - "PSN End-to-End Functional Specification\n      As mentioned above, the protocol\
    \ supports two types of\n      acknowledgments, IACKs and EACKs.  Both types of\
    \ ACKs apply to\n      messages only; individual packets are not acknowledged.\
    \  Since\n      windowing is being used, an individual ACK can be used to\n  \
    \    acknowledge more than one message.\n      IACKs are used to cancel the retransmission\
    \ timer and free source\n      buffering, and are sent when a message has been\
    \ completely\n      reassembled and delivered from the EE to either the AHIP or\
    \ X.25\n      level 3 module.  This allows the EE to avoid unnecessary message\n\
    \      retransmissions, and speeds up the process of freeing source\n      buffering\
    \ when destination hosts are slow to accept messages or,\n      in the case of\
    \ X.25, slow to advance the PSN's window to the\n      destination (X.25 does\
    \ not specify any time limit for a host to\n      acknowledge that it received\
    \ a message).\n      EACKs are used to advance the end-to-end window and to cause\
    \ one\n      or more end-to-end X.25 RRs or AHIP RFNMs to be sent to the source\n\
    \      host.  An EACK is sent when an X.25 host acknowledges a message or\n  \
    \    when an AHIP host actually receives it.\n      Both types of ACKs are piggybacked,\
    \ if possible, on reverse\n      traffic to the source PSN (for any connection).\
    \  Whenever a packet\n      is sent to another PSN, it is filled to the maximum\
    \ allowed\n      subnetwork packet size with any outstanding ACKs that may be\n\
    \      waiting to be sent to that PSN.  After a configurable period, all\n   \
    \   outstanding ACKs for the same PSN are aggregated together and\n      sent.\
    \  In addition, succeeding ACKs for the same connection can be\n      combined\
    \ into one, and EACKs can be used to imply that a message\n      is being IACKed\
    \ as well (if the destination host is speedy enough\n      when receiving or acknowledging\
    \ messages to allow IACKs and EACKs\n      to be combined).\n      This ACK aggregation\
    \ timer interacts with the source buffering\n      retransmission timer in the\
    \ following manner:  whenever a message\n      is sent from a host on one PSN\
    \ to a host on a second PSN, an IACK\n      is sent back to the first PSN when\
    \ the message has been completely\n      reassembled by the destination EE, and\
    \ an EACK is sent when it has\n      been delivered (and perhaps ACKed) by the\
    \ destination host.  The\n      IACK must make it back to the source PSN within\
    \ the limits of the\n      retransmission timer, or unnecessary retransmissions\
    \ could be sent\n      across the network.  This limits the ACK aggregation timer\
    \ to\n      being shorter than the source buffering retransmission timer.\n  \
    \    If the destination host is quick enough when accepting traffic\n      from\
    \ its PSN (with respect to the ACK aggregation timer), then the\n      EACK can\
    \ be combined with the IACK, and only the EACK would be\n"
- title: RFC 979                                                       March 1986
  contents:
  - 'RFC 979                                                       March 1986

    '
- title: PSN End-to-End Functional Specification
  contents:
  - "PSN End-to-End Functional Specification\n      sent.  If the destination host\
    \ is even quicker, multiple IACKs and\n      EACKs could be combined into one\
    \ EACK.  In the best case, if there\n      is a steady stream of traffic going\
    \ between the two PSNs in both\n      directions (but not necessarily over the\
    \ same connection or even\n      between the same pairs of hosts in each direction),\
    \ then all of\n      the IACKs and EACKs could be piggybacked on data packets\
    \ and cause\n      no additional network packets other than the data packets already\n\
    \      required to send the data messages across the network. In the\n      worst\
    \ case, however, such as when there is only a one-way flow\n      from a source\
    \ PSN to a destination PSN and the destination host is\n      very slow to accept\
    \ the messages from the network, then each data\n      message could result in\
    \ separate IACKs and EACKs being sent back\n      to the source PSN in individual\
    \ packets.  However, even though the\n      IACKs may cause additional packets\
    \ to cross the network, they are\n      still less expensive than the source retransmissions\
    \ that they are\n      used to prevent, and they also serve to free up valuable\
    \ source\n      buffering space.\n   3.4  Performance and Capacity Goals\n   \
    \   Performance and capacity goals for the new EE include:\n         o  Throughput:\
    \  The AHIP host-host and host-trunk maximum\n            throughput (in packets/second)\
    \ will be at least as good as\n            at present, and should improve for\
    \ those situations that\n            currently entail traffic limitations based\
    \ upon the old EE's\n            underlying protocol.  The current X.25 intrasite\
    \ host-host\n            and host-trunk throughput will each improve by at least\
    \ 50%.\n            The store-and-forward throughput for the new EE's X.25-based\n\
    \            traffic will improve by at least 100%.\n         o  Connections:\
    \  The new EE will support at least 500\n            simultaneous connections\
    \ per PSN, and will be able to handle\n            at least 50% more call setups\
    \ per second than at present.\n         o  Buffering:  The EE will have at least\
    \ 400 packet buffers\n            available to source-buffer and/or reassemble\
    \ messages.\n         o  Network size:  The EE protocol and module will use data\n\
    \            structure and message field sizes sufficient to support at\n    \
    \        least up to 255 hosts per PSN and 1023 PSNs per network\n           \
    \ (however, other PSN protocols and modules presently\n            constrain these\
    \ figures to 63 hosts per PSN and 253 PSNs per\n            network).\n      \
    \   o  Other:  The EE will support four message precedence levels\n"
- title: RFC 979                                                       March 1986
  contents:
  - 'RFC 979                                                       March 1986

    '
- title: PSN End-to-End Functional Specification
  contents:
  - "PSN End-to-End Functional Specification\n            and a maximum message length\
    \ of 1024 bytes.  For logical\n            addressing, the EE will support at\
    \ least 1024 logical names\n            and at least 2048 address mappings per\
    \ network.\n"
