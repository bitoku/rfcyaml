- title: __initial_text__
  contents:
  - '            Mapping between X.400 and RFC-822 Message Bodies

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This RFC specifies an IAB standards track protocol for\
    \ the Internet\n   community, and requests discussion and suggestions for improvements.\n\
    \   Please refer to the current edition of the \"IAB Official Protocol\n   Standards\"\
    \ for the standardization state and status of this protocol.\n   Distribution\
    \ of this memo is unlimited.\n"
- title: Table of Contents
  contents:
  - 'Table of Contents

    '
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Internet community is a large collection of networks\
    \ under\n   autonomous administration, but sharing a core set of protocols.\n\
    \   These are known as the Internet suite of protocols (or simply\n   \"TCP/IP\"\
    ).\n   Use of electronic-mail in the Internet is defined primarily by one\n  \
    \ document, STD-11, RFC-822 [1], which defines the standard format for\n   the\
    \ exchange of messages.  RFC-822 has proven immensely popular; in\n   fact, the\
    \ 822-connected Internet, is larger than the scope of the\n   IP-connected Internet.\n\
    \   The framework provided by RFC-822 allows for memo-based textual\n   messages.\
    \  Each message consists of two parts:  the headers and the\n   body.  The headers\
    \ are analogous to the structured fields found in an\n   inter-office memo, whilst\
    \ the body is free-form.  Both parts are\n   encoded using ASCII.\n   Recently,\
    \ the Internet Engineering Task Force (IETF) has developed an\n   document called,\n\
    \      Multipurpose Internet Mail Extensions\n   or MIME RFC-1341.  The title\
    \ is actually misleading.  MIME defines\n   structure for Internet message bodies.\
    \  It is not an extension to\n   RFC-822.\n   Independently of this, the International\
    \ standards community\n   developed a different framework in 1984 (some say that's\
    \ the\n   problem).  This framework is known as the OSI Message Handling System\n\
    \   (MHS) or sometimes X.400.\n   Since the introduction of X.400(84), there has\
    \ been work ongoing for\n   defining mappings between MHS and RFC-822.  The most\
    \ recent work in\n   this area is RFC-1327 [3], which focuses primarily on translation\
    \ of\n   envelope and headers.  This document is complimentary to RFC-1327 as\n\
    \   it focuses on translation of the message body.  The mappings defined\n   are\
    \ largely symmetrical with respect to MIME and MHS structuring\n   semantics,\
    \ although the MIME semantics are somewhat richer.  In order\n   to provide for\
    \ reversible transformations, MHS heading extensions are\n   used to carry the\
    \ additional MIME semantics.\n   Please send comments to the MIME-MHS mailing\
    \ list:\n   <mime-mhs@surfnet.nl>.\n"
- title: 2.  Approach
  contents:
  - "2.  Approach\n   The mappings have been specifically designed to provide optimal\n\
    \   behavior for three different scenarios:\n   (1) Allow a MIME user and an MHS\
    \ user to exchange an arbitrary binary\n       content;\n   (2) Allow MIME content-types\
    \ to \"tunnel\" through an MHS relay that\n       is, two MIME users can exchange\
    \ content-types without loss\n       through an MHS relay); and,\n   (3) Allow\
    \ MHS body parts to \"tunnel\" through a MIME relay that is,\n       two MHS users\
    \ can exchange body parts without loss through a MIME\n       relay).\n   Other,\
    \ related, scenarios can also be easily accommodated.\n   To facilitate the mapping\
    \ process, the Internet Assigned Numbers\n   Authority (IANA) maintains a table\
    \ termed the \"IANA MHS/MIME\n   Equivalence Table\".  Once an enterprise has\
    \ registered an OID to\n   describe an MHS body part, it should complete a corresponding\n\
    \   registry with the IANA for a MIME content-type/subtype.  In practice,\n  \
    \ the corresponding content-type will be \"application\", with an\n   appropriate\
    \ choice of sub-type and possible parameters.  If a new\n   MIME content-type/subtype\
    \ is registered with the IANA without a\n   corresponding entry in the Equivalence\
    \ Table, the IANA will assign it\n   an OID, from the arc defined in this memo.\
    \ See [4], section 5 for\n   details.\n   The companion document, \"Equivalences\
    \ between 1988 X.400 and RFC-822\n   Message Bodies\"[4], defines the initial\
    \ configuration of this table.\n   The mappings described in both this document\
    \ and the companion\n   document use the notational conventions of RFC-1327.\n"
- title: 3.  Mapping between X.400 and RFC-822 Message Bodies
  contents:
  - "3.  Mapping between X.400 and RFC-822 Message Bodies\n   MHS messages are comprised\
    \ of an IPMS.heading and an IPMS.body.  The\n   IPMS.Body is a sequence of IPMS.BodyParts.\
    \  An IPMS.BodyPart may be a\n   nested message (IPMS.MessageBodyPart).\n   A\
    \ MIME message consists of headers and a content.  For the purpose of\n   discussion,\
    \ the content may be structured (multipart or message), or\n   atomic (otherwise).\
    \  An element of a structured content may be a\n   message or a content.  Both\
    \ message and structured content have\n   subtypes which do not have direct analogies\
    \ in MHS.\n   The mapping between X.400 and RFC-822 message bodies which this\n\
    \   document defines is symmetrical for the following cases:\n          (1) any\
    \ atomic body part\n          (2) multipart: digest and mixed subtypes\n     \
    \     (3) message/rfc822\n   RFC-1327 specifies the mappings for headers.  Section\
    \ 4 describes how\n   those mappings are modified by this document.  When mapping\
    \ between\n   an MHS body and a MIME content, the following algorithm is used:\n"
- title: 3.1.  Mapping from X.400 to RFC-822
  contents:
  - "3.1.  Mapping from X.400 to RFC-822\n   This section replaces the text in RFC-1327\
    \ starting at the bottom of\n   page 84,\n       The IPMS.Body is mapped into\
    \ the RFC-822 message body.  Each\n       IPMS.BodyPart is converted to ASCII\
    \ as follows:\n   and continuing up to and including page 86 of Section 5.3.4\
    \ of RFC-\n   1327.\n             If the IPMS.Body\n                  Body ::=\n\
    \                      SEQUENCE OF\n                          BodyPart\n   consists\
    \ of a single body part, then the RFC-822 message body is\n   constructed as the\
    \ MIME content corresponding to that body part.\n   If the body part is an IPMS.MessageBodyPart\
    \ (forwarded IPM), the\n   mapping is applied recursively.  Otherwise, to map\
    \ a specific MHS\n   body part to a MIME content-type, the IANA MHS/MIME Equivalence\
    \ table\n   is consulted.  If the MHS body part is not identified in this table,\n\
    \   then the body-part is mapped onto an \"application/x400-bp\" content,\n  \
    \ as specified in [4].\n   If the IPMS.Body consists of more than one body part,\
    \ then the RFC-\n   822 message body is constructed as a\n          multipart/mixed\n\
    \   content-type, unless all of the body parts are messages, in which\n   case\
    \ it is mapped to a\n          multipart/digest\n   content-type.  Each component\
    \ of the multipart content-type\n   corresponds to a IPMS.BodyPart, preserving\
    \ the ordering of the body\n   parts in the IPMS.Body.\n   There is one case which\
    \ gets special treatement.  If the IPMS.Body\n   consists solely of a single IA5Text\
    \ body part, then the RFC822\n   message body is NOT marked as a MIME content.\
    \  This prevents RFC822\n   mailers from invoking MIME function unnecessarily.\n"
- title: 3.2.  Mapping from RFC-822 to X.400
  contents:
  - "3.2.  Mapping from RFC-822 to X.400\n   First, replace the first paragraph of\
    \ Section 5.1.3 on page 72 of\n   RFC-1327 to read as:\n       The IPM (IPMS Service\
    \ Request) is generated according to the\n       rules of this section.  The IPMS.body\
    \ usually consists of one\n       IPMS.BodyPart of type\n                    \
    \       IPMS.IA5TextBodyPart\n                      with\n                   \
    \        IPMS.IA5TextBodyPart.parameters.repertoire\n       set to the default\
    \ (ia5), which contains the body of the RFC-822\n       message.  However, if\
    \ the 822.MIME-Version header field is\n       present, a special algorithm is\
    \ used to generate the IPMS.body.\n       Second, replace the \"Comments:\" paragraph\
    \ on page 74 to reads as:\n       Comments:\n          If an 822.MIME-Version\
    \ header field is not present,\n          generate an IPMS.Bodypart of type\n\
    \              IPMS.IA5TextBodyPart\n          with\n              IPMS.IA5TextBodyPart.parameters.repertoire\n\
    \          set to the default (ia5), containing the value of\n          the fields,\
    \ preceded by the string \"Comments: \".\n          This body part shall preceed\
    \ the other one.\n   Third, add the remainder of this section to the end of Section\
    \ 5.1.3\n   of RFC-1327.\n   If the 822.MIME-Version header field is present,\
    \ the following\n   mapping rules are used to generate the IPMS.body.\n   If the\
    \ MIME content-type is one of:\n   (1)  any atomic body part\n   (2)  multipart:\
    \ digest and mixed subtypes\n   (3)  message/rfc822\n   then the symmetric mapping\
    \ applies as described in Section 6.1.  Note\n   that the multipart content-types\
    \ should be marked with the\n   IPMS.HeadingExtension described below.\n   Otherwise,\
    \ three cases remain, which are discussed in turn.\n"
- title: 3.2.1.  Asymmetric Mappings
  contents:
  - '3.2.1.  Asymmetric Mappings

    '
- title: 3.2.1.1.  Message/External-Body
  contents:
  - "3.2.1.1.  Message/External-Body\n   This is mapped into a mime-body-part, as\
    \ specified in [4].\n"
- title: 3.2.1.2.  Message/Partial
  contents:
  - "3.2.1.2.  Message/Partial\n   This is mapped onto a message, and the following\
    \ heading extension is\n   used.  The extension is derived from the message/partial\
    \ parameters:\n                  partial-message  HEADING-EXTENSION\n        \
    \              VALUE PartialMessage\n                      ::= id-hex-partial-message\n\
    \                  PartialMessage ::=\n                      SEQUENCE {\n    \
    \                      number INTEGER,\n                          total  INTEGER,\n\
    \                          id     IA5String\n                      }\n   If this\
    \ heading is present when mapping from MHS to MIME, then a\n   message/partial\
    \ should be generated.\n"
- title: 3.2.1.3.  Nested Multipart Content-types
  contents:
  - "3.2.1.3.  Nested Multipart Content-types\n   In MIME, a multipart content refers\
    \ to a set of content-types, not a\n   message with a set of content-types. However,\
    \ a nested multipart\n   content will always be mapped to an IPMS.MessageBodyPart,\
    \ with an\n   IPMS.BodyPart for each contained content-type.\n   The only mandatory\
    \ field in the heading is the IPMS.this-IPM, which\n   must always be generated\
    \ (by the gateway). A IPMS.subject field\n   should also be generated where there\
    \ is no \"real\" heading. This will\n   present useful information to the non-MIME\
    \ capable X.400(88) and to\n   all X.400(84) UAs.\n   The IPM.subject fields for\
    \ the various types are:\n   mixed:        \"Multipart Message\"\n   alternative:\
    \  \"Alternate Body Parts containing the same information\"\n   digest:      \
    \ \"Message Digest\"\n   parallel:     \"Body Parts to be interpreted in parallel\"\
    \n"
- title: 3.2.2.  Multipart IPMS Heading Extension
  contents:
  - "3.2.2.  Multipart IPMS Heading Extension\n   The following IPMS.HeadingExtension\
    \ should be generated for all\n   multipart content-types, with the enumerated\
    \ value set according to\n   the subtype:\n                  multipart-message\
    \ HEADING-EXTENSION\n                      VALUE MultipartType\n             \
    \         ::= id-hex-multipart-message\n                  MultipartType ::=\n\
    \                      ENUMERATED {\n                          mixed(1),\n   \
    \                       alternative(2),\n                          digest(3),\n\
    \                          parallel(4)\n                      }\n   If this heading\
    \ is present when mapping from MHS to MIME, then the\n   appropriate multipart\
    \ content-type should be generated.\n"
- title: 4.  Mapping between X.400 and RFC-822 Message Headers
  contents:
  - "4.  Mapping between X.400 and RFC-822 Message Headers\n   Replace the first paragraph\
    \ of Section 3.3.4 on page 26 of RFC-1327\n   to read as:\n        In cases where\
    \ T.61 strings are used only for conveying human-\n        interpreted information,\
    \ the aim of this mapping is to render\n        the characters appropriately in\
    \ the remote character set, rather\n        than to maximize reversibility.  For\
    \ these cases, the following\n        steps are followed to find an appropriate\
    \ encoding:\n        1) If all the characters in the string are contained within\
    \ the\n        ASCII repertoire, the string is simply copied.\n        2) If all\
    \ the characters in the string are from an IANA-\n        registered character\
    \ set, then the appropriate encoded-word(s)\n        according to [5] are generated\
    \ instead.\n        3) If the characters in the string are from a character set\n\
    \        which is not registered with the IANA, then the mappings to IA5\n   \
    \     defined in CCITT Recommendation X.408 (1988) shall be used\n        [CCITT/ISO88a].\
    \  These will then be encoded in ASCII.\n        This approach will only be used\
    \ for human-readable information\n        (Subject and FreeForm Name).\n     \
    \   When mapping from an RFC-822 header, when an encoded-word (as\n        defined\
    \ in [5]) is encountered:\n        1) If all the characters contained therein\
    \ are mappable to T.61,\n        the string content shall be converted into T.61.\n\
    \        2) Otherwise, the encoded-word shall be copied directly into the\n  \
    \      T.61 string.\n   Modify procedure \"2a\" on page 56 of RFC-1327 to read\
    \ as:\n        If the IPMS.ORDescriptor.free-form-name is present, convert it\n\
    \        to ASCII or T.61 (Section 3.3.4), and use this as the 822.phrase\n  \
    \      component of the 822.mailbox construct.\n   Modify the final paragraph\
    \ of procedure \"2\" on page 55 of RFC-1327 to\n   read as:\n        The string\
    \ is then encoded into T.61 or ASCII using a human-\n        oriented mapping\
    \ (as described in Section 3.3.4).  If the string\n        is not null, it is\
    \ assigned to IPMS.ORDescriptor.free-form.name.\n   Modify the second paragraph\
    \ of procedure \"3\" on page 55 of RFC-1327\n   to read as:\n        If the 822.group\
    \ construct is present, any included 822.mailbox\n        is encoded as above\
    \ to generate a separate IPMS.ORDescriptor.\n        The 822.group is mapped to\
    \ T.61 or ASCII (as described in\n        Section 3.3.4), and an IPMS.ORDescriptor\
    \ with only an free-\n        form-name component is built from it.\n   Modify\
    \ procedure \"822.Subject\" on page 62 of RFC-1327 to read as:\n        Mapped\
    \ to IMPS.Heading.subject.  The field-body uses the human-\n        oriented mapping\
    \ referenceed in Section 3.3.4.\n   Modify procedure \"IPMS.Heading.subject\"\
    \ on page 71 of RFC-1327 to\n   read as:\n        Mapped to \"Subject:\".  The\
    \ contents are converted to ASCII or\n        T.61 (Section 3.3.4).  Any CRLF\
    \ are not mapped, but are used as\n        points at which the subject field must\
    \ be folded.\n"
- title: 5.  OID Assignments
  contents:
  - "5.  OID Assignments\n   MIME-MHS DEFINITIONS ::= BEGIN\n   mail OBJECT IDENTIFIER\
    \ ::= { internet 7 }\n   mime-mhs OBJECT IDENTIFIER ::= { mail 1 }\n   mime-mhs-headings\
    \ OBJECT IDENTIFIER ::= { mime-mhs 1 }\n   id-hex-partial-message OBJECT IDENTIFIER\
    \ ::=\n           { mime-mhs-headings 1 }\n   id-hex-multipart-message OBJECT\
    \ IDENTIFIER ::=\n           { mime-mhs-headings 2 }\n   mime-mhs-bodies OBJECT\
    \ IDENTIFIER ::= { mime-mhs 2 }\n   END\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   There are no explicit security provisions in\
    \ this document.  However,\n   a warning is in order.  This document maps two\
    \ mechanisms between\n   RFC822 and X.400 that could cause problems.  The first\
    \ is the\n   transfer of binary files.  The inherent risks are well known and\n\
    \   won't be reiterated here.  The second is the propagation of strong\n   content\
    \ typing.  The typing can be used to automatically \"launch\" or\n   initiate\
    \ applications against those contents.  Any such launching\n   leaves the invoker\
    \ vulnerable to application-specific viruses; for\n   example, a spreadsheet macro\
    \ or Postscript command that deletes\n   files.  See [2], Section 7.4.2 for a\
    \ Postscript-specific discussion\n   of this issue.\n"
- title: 7.  Authors' Addresses
  contents:
  - "7.  Authors' Addresses\n   Harald Tveit Alvestrand\n   SINTEF DELAB\n   N-7034\
    \ Trondheim\n   NORWAY\n   EMail: Harald.Alvestrand@delab.sintef.no\n   Steve\
    \ Kille\n   ISODE Consortium\n   P.O. Box 505\n   London\n   SW11 1DX\n   England\n\
    \   Phone: +44-71-223-4062\n   EMail: S.Kille@ISODE.COM\n   Robert S. Miles\n\
    \   Soft*Switch, Inc.\n   640 Lee Road\n   Wayne, PA 19087\n   Phone: (215) 640-7556\n\
    \   EMail: rsm@spyder.ssw.com\n   Marshall T. Rose\n   Dover Beach Consulting,\
    \ Inc.\n   420 Whisman Court\n   Mountain View, CA  94043-2186\n   US\n   Phone:\
    \ +1 415 968 1052\n   Fax:   +1 415 968 2510\n   EMail: mrose@dbc.mtview.ca.us\n\
    \   Steven J. Thompson\n   Soft*Switch, Inc.\n   640 Lee Road\n   Wayne, PA 19087\n\
    \   Phone: (215) 640-7556\n   EMail: sjt@gateway.ssw.com\n"
- title: 8.  References
  contents:
  - "8.  References\n   [1] Crocker, D., \"Standard for the Format of ARPA Internet\
    \ Text\n       Messages\", STD 11, RFC 822, UDEL, August 1982.\n   [2] Borenstein,\
    \ N., and N. Freed, \"MIME: Mechanisms for Specifying\n       and Describing the\
    \ Format of Internet Message Bodies\", RFC 1341,\n       Bellcore, Innosoft, June\
    \ 1992.\n   [3] Hardcastle-Kille, S., \"Mapping between X.400(1988) / ISO 10021\n\
    \       and RFC-822\", RFC 1327, University College London, May 1992.\n   [4]\
    \ Alvestrand, H., and S. Thompson, \"Equivalences between 1988 X.400\n       and\
    \ RFC-822 Message Bodies\", RFC 1494, SINTEF DELAB, Soft*Switch,\n       Inc.,\
    \ August 1993.\n   [5] Moore, K., \"Representation of Non-ASCII Text in Internet\
    \ Message\n       Headers Message Bodies\", RFC 1342, University of Tennesse,\
    \ June\n       1992.\n"
