- title: __initial_text__
  contents:
  - '                         IP Version 6 over PPP

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   The Point-to-Point Protocol (PPP) provides a standard method of\n\
    \   encapsulating network-layer protocol information over point-to-point\n   links.\
    \  PPP also defines an extensible Link Control Protocol, and\n   proposes a family\
    \ of Network Control Protocols (NCPs) for\n   establishing and configuring different\
    \ network-layer protocols.\n   This document defines the method for sending IPv6\
    \ packets over PPP\n   links, the NCP for establishing and configuring the IPv6\
    \ over PPP,\n   and the method for forming IPv6 link-local addresses on PPP links.\n\
    \   It also specifies the conditions for performing Duplicate Address\n   Detection\
    \ on IPv6 global unicast addresses configured for PPP links\n   either through\
    \ stateful or stateless address autoconfiguration.\n   This document obsoletes\
    \ RFC 2472.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \      1.1. Specification of Requirements ..............................3\n  \
    \ 2. Sending IPv6 Datagrams ..........................................3\n   3.\
    \ A PPP Network Control Protocol for IPv6 .........................3\n   4. IPV6CP\
    \ Configuration Options ....................................4\n      4.1. Interface\
    \ Identifier .......................................4\n   5. Stateless Autoconfiguration\
    \ and Link-Local Addresses ............9\n   6. Security Considerations ........................................11\n\
    \   7. IANA Considerations ............................................11\n  \
    \ 8. Acknowledgments ................................................11\n   9.\
    \ References .....................................................12\n      9.1.\
    \ Normative References ......................................12\n      9.2. Informative\
    \ references ....................................12\n   Appendix A:  Global Scope\
    \ Addresses................................14\n   Appendix B:  Changes from RFC-2472.................................14\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   PPP has three main components:\n   1) A method for encapsulating\
    \ datagrams over serial links.\n   2) A Link Control Protocol (LCP) for establishing,\
    \ configuring, and\n      testing the data-link connection.\n   3) A family of\
    \ Network Control Protocols (NCPs) for establishing and\n      configuring different\
    \ network-layer protocols.\n   In order to establish communications over a point-to-point\
    \ link, each\n   end of the PPP link must first send LCP packets to configure\
    \ and test\n   the data link.  After the link has been established and optional\n\
    \   facilities have been negotiated as needed by the LCP, PPP must send\n   NCP\
    \ packets to choose and configure one or more network-layer\n   protocols.  Once\
    \ each of the chosen network-layer protocols has been\n   configured, datagrams\
    \ from each network-layer protocol can be sent\n   over the link.\n   In this\
    \ document, the NCP for establishing and configuring the IPv6\n   over PPP is\
    \ referred to as the IPv6 Control Protocol (IPV6CP).\n   The link will remain\
    \ configured for communications until explicit LCP\n   or NCP packets close the\
    \ link down, or until some external event\n   occurs (power failure at the other\
    \ end, carrier drop, etc.).\n   This document obsoletes the earlier specification\
    \ from RFC 2472 [7].\n   Changes from RFC 2472 are listed in Appendix B.\n"
- title: 1.1.  Specification of Requirements
  contents:
  - "1.1.  Specification of Requirements\n   In this document, several words are used\
    \ to signify the requirements\n   of the specification.\n   The key words \"MUST\"\
    , \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD\
    \ NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document are to\
    \ be interpreted as described in [6].\n"
- title: 2.  Sending IPv6 Datagrams
  contents:
  - "2.  Sending IPv6 Datagrams\n   Before any IPv6 packets may be communicated, PPP\
    \ MUST reach the\n   network-layer protocol phase, and the IPv6 Control Protocol\
    \ MUST\n   reach the Opened state.\n   Exactly one IPv6 packet is encapsulated\
    \ in the Information field of\n   PPP Data Link Layer frames where the Protocol\
    \ field indicates Type\n   hex 0057 (Internet Protocol Version 6).\n   The maximum\
    \ length of an IPv6 packet transmitted over a PPP link is\n   the same as the\
    \ maximum length of the Information field of a PPP data\n   link layer frame.\
    \  PPP links supporting IPv6 MUST allow the\n   information field to be at least\
    \ as large as the minimum link MTU\n   size required for IPv6 [2].\n"
- title: 3.  A PPP Network Control Protocol for IPv6
  contents:
  - "3.  A PPP Network Control Protocol for IPv6\n   The IPv6 Control Protocol (IPV6CP)\
    \ is responsible for configuring,\n   enabling, and disabling the IPv6 protocol\
    \ modules on both ends of the\n   point-to-point link.  IPV6CP uses the same packet\
    \ exchange mechanism\n   as the LCP.  IPV6CP packets may not be exchanged until\
    \ PPP has\n   reached the network-layer protocol phase.  IPV6CP packets that are\n\
    \   received before this phase is reached should be silently discarded.\n   The\
    \ IPv6 Control Protocol is exactly the same as the LCP [1] with the\n   following\
    \ exceptions:\n      Data Link Layer Protocol Field\n         Exactly one IPV6CP\
    \ packet is encapsulated in the Information\n         field of PPP Data Link Layer\
    \ frames where the Protocol field\n         indicates type hex 8057 (IPv6 Control\
    \ Protocol).\n      Code field\n         Only Codes 1 through 7 (Configure-Request,\
    \ Configure-Ack,\n         Configure-Nak, Configure-Reject, Terminate-Request,\
    \ Terminate-\n         Ack and Code-Reject) are used.  Other Codes should be treated\n\
    \         as unrecognized and should result in Code-Rejects.\n      Timeouts\n\
    \         IPV6CP packets may not be exchanged until PPP has reached the\n    \
    \     network-layer protocol phase.  An implementation should be\n         prepared\
    \ to wait for Authentication and Link Quality\n         Determination to finish\
    \ before timing out waiting for a\n         Configure-Ack or other response. \
    \ It is suggested that an\n         implementation give up only after user intervention\
    \ or a\n         configurable amount of time.\n      Configuration Option Types\n\
    \         IPV6CP has a distinct set of Configuration Options.\n"
- title: 4.  IPV6CP Configuration Options
  contents:
  - "4.  IPV6CP Configuration Options\n   IPV6CP Configuration Options allow negotiation\
    \ of desirable IPv6\n   parameters.  IPV6CP uses the same Configuration Option\
    \ format defined\n   for LCP [1] but with a separate set of Options.  If a Configuration\n\
    \   Option is not included in a Configure-Request packet, the default\n   value\
    \ for that Configuration Option is assumed.\n   Up-to-date values of the IPV6CP\
    \ Option Type field are specified in\n   the online database of \"Assigned Numbers\"\
    \ maintained at IANA [9].\n   The current value assignment is as follows:\n  \
    \    1 Interface-Identifier\n   The only IPV6CP option defined in this document\
    \ is the interface\n   identifier.  Any other IPV6CP configuration options that\
    \ can be\n   defined over time are to be defined in separate documents.\n"
- title: 4.1.  Interface Identifier
  contents:
  - "4.1.  Interface Identifier\n   Description\n   This Configuration Option provides\
    \ a way to negotiate a unique, 64-\n   bit interface identifier to be used for\
    \ the address autoconfiguration\n   [3] at the local end of the link (see Section\
    \ 5).  A Configure-\n   Request MUST contain exactly one instance of the interface-identifier\n\
    \   option [1].  The interface identifier MUST be unique within the PPP\n   link;\
    \ i.e., upon completion of the negotiation, different interface-\n   identifier\
    \ values are to be selected for the ends of the PPP link.\n   The interface identifier\
    \ may also be unique over a broader scope.\n   Before this Configuration Option\
    \ is requested, an implementation\n   chooses its tentative interface identifier.\
    \  The non-zero value of\n   the tentative interface identifier SHOULD be chosen\
    \ such that the\n   value is unique to the link and, preferably, consistently\n\
    \   reproducible across initializations of the IPV6CP finite state\n   machine\
    \ (administrative Close and reOpen, reboots, etc.).  The\n   rationale for preferring\
    \ a consistently reproducible unique interface\n   identifier to a completely\
    \ random interface identifier is to provide\n   stability to global scope addresses\
    \ (see Appendix A) that can be\n   formed from the interface identifier.\n   Assuming\
    \ that interface identifier bits are numbered from 0 to 63 in\n   canonical bit\
    \ order, where the most significant bit is the bit number\n   0, the bit number\
    \ 6 is the \"u\" bit (universal/local bit in  IEEE\n   EUI-64 [4] terminology),\
    \ which indicates whether or not the interface\n   identifier is based on a globally\
    \ unique IEEE identifier (EUI-48 or\n   EUI-64 [4])(see case 1 below).  It is\
    \ set to one (1) if a globally\n   unique IEEE identifier is used to derive the\
    \ interface identifier,\n   and it is set to zero (0) otherwise.\n   The following\
    \ are methods for choosing the tentative interface\n   identifier in the preference\
    \ order:\n   1) If an IEEE global identifier (EUI-48 or EUI-64) is available\n\
    \      anywhere on the node, it should be used to construct the tentative\n  \
    \    interface identifier due to its uniqueness properties.  When\n      extracting\
    \ an IEEE global identifier from another device on the\n      node, care should\
    \ be taken that the extracted identifier is\n      presented in canonical ordering\
    \ [14].\n      The only transformation from an EUI-64 identifier is to invert\
    \ the\n      \"u\" bit (universal/local bit in IEEE EUI-64 terminology).\n   \
    \   For example, for a globally unique EUI-64 identifier of the form:\n   most-significant\
    \                                    least-significant\n   bit               \
    \                                                bit\n   |0              1|1 \
    \             3|3              4|4              6|\n   |0              5|6   \
    \           1|2              7|8              3|\n   +----------------+----------------+----------------+----------------+\n\
    \   |cccccc0gcccccccc|cccccccceeeeeeee|eeeeeeeeeeeeeeee|eeeeeeeeeeeeeeee|\n  \
    \ +----------------+----------------+----------------+----------------+\n    \
    \  where \"c\" are the bits of the assigned company_id, \"0\" is the\n      value\
    \ of the universal/local bit to indicate global scope, \"g\" is\n      the group/individual\
    \ bit, and \"e\" are the bits of the extension\n      identifier, the IPv6 interface\
    \ identifier would be of the form:\n   most-significant                      \
    \              least-significant\n   bit                                     \
    \                          bit\n   |0              1|1              3|3      \
    \        4|4              6|\n   |0              5|6              1|2        \
    \      7|8              3|\n   +----------------+----------------+----------------+----------------+\n\
    \   |cccccc1gcccccccc|cccccccceeeeeeee|eeeeeeeeeeeeeeee|eeeeeeeeeeeeeeee|\n  \
    \ +----------------+----------------+----------------+----------------+\n    \
    \  The only change is inverting the value of the universal/local bit.\n      In\
    \ the case of a EUI-48 identifier, it is first converted to the\n      EUI-64\
    \ format by inserting two bytes, with hexa-decimal values of\n      0xFF and 0xFE,\
    \ in the middle of the 48-bit MAC (between the\n      company_id and extension\
    \ identifier portions of the EUI-48 value).\n      For example, for a globally\
    \ unique 48-bit EUI-48 identifier of the\n      form:\n      most-significant\
    \                   least-significant\n      bit                             \
    \                 bit\n      |0              1|1              3|3            \
    \  4|\n      |0              5|6              1|2              7|\n      +----------------+----------------+----------------+\n\
    \      |cccccc0gcccccccc|cccccccceeeeeeee|eeeeeeeeeeeeeeee|\n      +----------------+----------------+----------------+\n\
    \      where \"c\" are the bits of the assigned company_id, \"0\" is the\n   \
    \   value of the universal/local bit to indicate global scope, \"g\" is\n    \
    \  the group/individual bit, and \"e\" are the bits of the extension\n      identifier,\
    \ the IPv6 interface identifier would be of the form:\n   most-significant   \
    \                                 least-significant\n   bit                  \
    \                                             bit\n   |0              1|1    \
    \          3|3              4|4              6|\n   |0              5|6      \
    \        1|2              7|8              3|\n   +----------------+----------------+----------------+----------------+\n\
    \   |cccccc1gcccccccc|cccccccc11111111|11111110eeeeeeee|eeeeeeeeeeeeeeee|\n  \
    \ +----------------+----------------+----------------+----------------+\n   2)\
    \ If an IEEE global identifier is not available, a different source\n      of\
    \ uniqueness should be used.  Suggested sources of uniqueness\n      include link-layer\
    \ addresses, machine serial numbers, et cetera.\n      In this case, the \"u\"\
    \ bit of the interface identifier MUST be set\n      to zero (0).\n   3) If a\
    \ good source of uniqueness cannot be found, it is recommended\n      that a random\
    \ number be generated.  In this case, the \"u\" bit of\n      the interface identifier\
    \ MUST be set to zero (0).\n   Good sources [1] of uniqueness or randomness are\
    \ required for the\n   interface identifier negotiation to succeed.  If neither\
    \ a unique\n   number nor a random number can be generated, it is recommended\
    \ that a\n   zero value be used for the interface identifier transmitted in the\n\
    \   Configure-Request.  In this case, the PPP peer may provide a valid\n   non-zero\
    \ interface identifier in its response as described below.\n   Note that if at\
    \ least one of the PPP peers is able to generate\n   separate non-zero numbers\
    \ for itself and its peer, the identifier\n   negotiation will succeed.\n   When\
    \ a Configure-Request is received with the Interface-Identifier\n   Configuration\
    \ Option and the receiving peer implements this option,\n   the received interface\
    \ identifier is compared with the interface\n   identifier of the last Configure-Request\
    \ sent to the peer.  Depending\n   on the result of the comparison, an implementation\
    \ MUST respond in\n   one of the following ways:\n   If the two interface identifiers\
    \ are different but the received\n   interface identifier is zero, a Configure-Nak\
    \ is sent with a non-zero\n   interface-identifier value suggested for use by\
    \ the remote peer.\n   Such a suggested interface identifier MUST be different\
    \ from the\n   interface identifier of the last Configure-Request sent to the\
    \ peer.\n   It is recommended that the value suggested be consistently\n   reproducible\
    \ across initializations of the IPV6CP finite state\n   machine (administrative\
    \ Close and reOpen, reboots, etc).  The \"u\"\n   (universal/local) bit of the\
    \ suggested identifier MUST be set to zero\n   (0) regardless of its source unless\
    \ the globally unique EUI-48/EUI-64\n   derived identifier is provided for the\
    \ exclusive use by the remote\n   peer.\n   If the two interface identifiers are\
    \ different and the received\n   interface identifier is not zero, the interface\
    \ identifier MUST be\n   acknowledged, i.e., a Configure-Ack is sent with the\
    \ requested\n   interface identifier, meaning that the responding peer agrees\
    \ with\n   the interface identifier requested.\n   If the two interface identifiers\
    \ are equal and are not zero,\n   Configure-Nak MUST be sent specifying a different\
    \ non-zero\n   interface-identifier value suggested for use by the remote peer.\
    \  It\n   is recommended that the value suggested be consistently reproducible\n\
    \   across initializations of the IPV6CP finite state machine\n   (administrative\
    \ Close and reOpen, reboots, etc).  The \"u\"\n   (universal/local) bit of the\
    \ suggested identifier MUST be set to zero\n   (0) regardless of its source unless\
    \ the globally unique EUI-48/EUI-64\n   derived identifier is provided for the\
    \ exclusive use by the remote\n   peer.\n   If the two interface identifiers are\
    \ equal to zero, the interface\n   identifier's negotiation MUST be terminated\
    \ by transmitting the\n   Configure-Reject with the interface-identifier value\
    \ set to zero.  In\n   this case, a unique interface identifier cannot be negotiated.\n\
    \   If a Configure-Request is received with the Interface-Identifier\n   Configuration\
    \ Option and the receiving peer does not implement this\n   option, Configure-Reject\
    \ is sent.\n   A new Configure-Request SHOULD NOT be sent to the peer until normal\n\
    \   processing would cause it to be sent (that is, until a Configure-Nak\n   is\
    \ received or the Restart timer runs out [1]).\n   A new Configure-Request MUST\
    \ NOT contain the interface-identifier\n   option if a valid Interface-Identifier\
    \ Configure-Reject is received.\n   Reception of a Configure-Nak with a suggested\
    \ interface identifier\n   different from that of the last Configure-Nak sent\
    \ to the peer\n   indicates a unique interface identifier.  In this case, a new\n\
    \   Configure-Request MUST be sent with the identifier value suggested in\n  \
    \ the last Configure-Nak from the peer.  But if the received interface\n   identifier\
    \ is equal to the one sent in the last Configure-Nak, a new\n   interface identifier\
    \ MUST be chosen.  In this case, a new Configure-\n   Request SHOULD be sent with\
    \ the new tentative interface identifier.\n   This sequence (transmit Configure-Request,\
    \ receive Configure-Request,\n   transmit Configure-Nak, receive Configure-Nak)\
    \ might occur a few\n   times, but it is extremely unlikely to occur repeatedly.\
    \  More\n   likely, the interface identifiers chosen at either end will quickly\n\
    \   diverge, terminating the sequence.\n   If negotiation of the interface identifier\
    \ is required, and the peer\n   did not provide the option in its Configure-Request,\
    \ the option\n   SHOULD be appended to a Configure-Nak.  The tentative value of\
    \ the\n   interface identifier given must be acceptable as the remote interface\n\
    \   identifier; i.e., it should be different from the identifier value\n   selected\
    \ for the local end of the PPP link.  The next Configure-\n   Request from the\
    \ peer may include this option.  If the next\n   Configure-Request does not include\
    \ this option, the peer MUST NOT\n   send another Configure-Nak with this option\
    \ included.  It should\n   assume that the peer's implementation does not support\
    \ this option.\n   By default, an implementation SHOULD attempt to negotiate the\n\
    \   interface identifier for its end of the PPP connection.\n   A summary of the\
    \ Interface-Identifier Configuration Option format is\n   shown below.  The fields\
    \ are transmitted from left to right.\n   0                   1              \
    \     2                   3\n   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     | Interface-Identifier (MS Bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                        Interface-Identifier (cont)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Interface-Identifier (LS Bytes) |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Type\n         1\n      Length\n         10\n      Interface-Identifier\n\
    \         The 64-bit interface identifier, which is very likely to be\n      \
    \   unique on the link, or zero if a good source of uniqueness\n         cannot\
    \ be found.\n      Default\n         If no valid interface identifier can be successfully\n\
    \         negotiated, no default interface-identifier value should be\n      \
    \   assumed.  The procedures for recovering from such a case are\n         unspecified.\
    \  One approach is to manually configure the\n         interface identifier of\
    \ the interface.\n"
- title: 5.  Stateless Autoconfiguration and Link-Local Addresses
  contents:
  - "5.  Stateless Autoconfiguration and Link-Local Addresses\n   The interface identifier\
    \ of IPv6 unicast addresses [5] of a PPP\n   interface SHOULD be negotiated in\
    \ the IPV6CP phase of the PPP\n   connection setup (see Section 4.1).  If no valid\
    \ interface identifier\n   has been successfully negotiated, procedures for recovering\
    \ from such\n   a case are unspecified.  One approach is to manually configure\
    \ the\n   interface identifier of the interface.\n   The negotiated interface\
    \ identifier is used by the local end of the\n   PPP link to autoconfigure an\
    \ IPv6 link-local unicast address for the\n   PPP interface.  However, it SHOULD\
    \ NOT be assumed that the same\n   interface identifier is used in configuring\
    \ global unicast addresses\n   for the PPP interface using IPv6 stateless address\
    \ autoconfiguration\n   [3].  The PPP peer MAY generate one or more interface\
    \ identifiers,\n   for instance, using a method described in [8], to autoconfigure\
    \ one\n   or more global unicast addresses.\n   As long as the interface identifier\
    \ is negotiated in the IPV6CP phase\n   of the PPP connection setup, it is redundant\
    \ to perform duplicate\n   address detection (DAD) as a part of the IPv6 Stateless\
    \ Address\n   Autoconfiguration protocol [3] on the IPv6 link-local address\n\
    \   generated by the PPP peer.  It may also be redundant to perform DAD\n   on\
    \ any global unicast addresses configured (using an interface\n   identifier that\
    \ is either negotiated during IPV6CP or generated, for\n   instance, as per [8])\
    \ for the interface as part of the IPv6 Stateless\n   Address Autoconfiguration\
    \ protocol [3] provided that the following\n   two conditions are met:\n     \
    \ 1) The prefixes advertised through the Router Advertisement\n         messages\
    \ by the access router terminating the PPP link are\n         exclusive to the\
    \ PPP link.\n      2) The access router terminating the PPP link does not\n  \
    \       autoconfigure any IPv6 global unicast addresses from the\n         prefixes\
    \ that it advertises.\n   Therefore, it is RECOMMENDED that for PPP links with\
    \ the IPV6CP\n   interface-identifier option enabled and satisfying the aforementioned\n\
    \   two conditions, the default value of the DupAddrDetectTransmits\n   autoconfiguration\
    \ variable [3] is set to zero by the system\n   management.  3GPP2 networks are\
    \ an example of a technology that uses\n   PPP to enable a host to obtain an IPv6\
    \ global unicast address and\n   satisfies the aforementioned two conditions [10].\
    \  3GPP networks are\n   another example ([11] [13]).\n   Link-local addresses\n\
    \   Link-local addresses of PPP interfaces have the following format:\n   | 10\
    \ bits  |        54 bits         |          64 bits            |\n   +----------+------------------------+-----------------------------+\n\
    \   |1111111010|           0            |    Interface-Identifier     |\n   +----------+------------------------+-----------------------------+\n\
    \   The most significant 10 bits of the address is the Link-Local prefix\n   FE80::.\
    \  54 zero bits pad out the address between the Link-Local\n   prefix and the\
    \ interface-identifier fields.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   Lack of link security, such as authentication,\
    \ trigger the security\n   concerns raised in [3] when the stateless address autoconfiguration\n\
    \   method is employed for the generation of global unicast IPv6\n   addresses\
    \ out of interface identifiers that are either negotiated\n   through the IPV6CP\
    \ or generated, for instance, using a method\n   described in [8].  Thus, the\
    \ mechanisms that are appropriate for\n   ensuring PPP link security are addressed\
    \ below, together with the\n   reference to a generic threat model.\n   The mechanisms\
    \ that are appropriate for ensuring PPP link Security\n   are: 1) Access Control\
    \ Lists that apply filters on traffic received\n   over the link for enforcing\
    \ admission policy, 2) an Authentication\n   protocol that facilitates negotiations\
    \ between peers [15] to select\n   an authentication method (e.g., MD5 [16]) for\
    \ validation of the peer,\n   and 3) an Encryption protocol that facilitates negotiations\
    \ between\n   peers to select encryption algorithms (or crypto-suites) to ensure\n\
    \   data confidentiality [17].\n   There are certain threats associated with peer\
    \ interactions on a PPP\n   link even with one or more of the above security measures\
    \ in place.\n   For instance, using the MD5 authentication method [16] exposes\
    \ one to\n   replay attack, where an attacker could intercept and replay a\n \
    \  station's identity and password hash to get access to a network.  The\n   user\
    \ of this specification is advised to refer to [15], which\n   presents a generic\
    \ threat model, for an understanding of the threats\n   posed to the security\
    \ of a link.  The reference [15] also gives a\n   framework to specify requirements\
    \ for the selection of an\n   authentication method for a given application.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   The IANA has assigned value 1 for the Type field\
    \ of the IPv6 datagram\n   interface-identifier option specified in this document.\
    \  The current\n   assignment is up-to-date at [9].\n"
- title: 8.  Acknowledgments
  contents:
  - "8.  Acknowledgments\n   This document borrows from the Magic-Number LCP option\
    \ and as such is\n   partially based on previous work done by the PPP working\
    \ group.\n   The editor is grateful for the input provided by members of the IPv6\n\
    \   community in the spirit of updating RFC 2472.  Thanks, in particular,\n  \
    \ go to Pete Barany and Karim El Malki for their technical\n   contributions.\
    \  Also, thanks to Alex Conta for a thorough review,\n   Stephen Kent for helping\
    \ with security aspects, and Spencer Dawkins\n   and Pekka Savola for the nits.\
    \  Finally, the author is grateful to\n   Jari Arkko for his initiation to bring\
    \ closure to this specification.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [1]   Simpson, W., Ed., \"The Point-to-Point Protocol\
    \ (PPP)\", STD 51,\n         RFC 1661, July 1994.\n   [2]   Deering, S. and R.\
    \ Hinden, \"Internet Protocol, Version 6 (IPv6)\n         Specification\", RFC\
    \ 2460, December 1998.\n   [3]   Thomson, S., Narten, T., and T. Jinmei, \"IPv6\
    \ Stateless Address\n         Autoconfiguration\", RFC 4862, September 2007.\n\
    \   [4]   IEEE, \"Guidelines For 64-bit Global Identifier (EUI-64)\",\n      \
    \   http://standards.ieee.org/regauth/oui/tutorials/EUI64.html\n   [5]   Hinden,\
    \ R. and S. Deering, \"IP Version 6 Addressing\n         Architecture\", RFC 4291,\
    \ February 2006.\n   [6]   Bradner, S., \"Key words for use in RFCs to Indicate\
    \ Requirement\n         Levels\", BCP 14, RFC 2119, March 1997.\n   [7]   Haskin,\
    \ D. and E. Allen, \"IP Version 6 over PPP\", RFC 2472,\n         December 1998.\n\
    \   [8]   Narten T., Draves, R., and S. Krishnan, \"Privacy Extensions for\n \
    \        Stateless Address Autoconfiguration in IPv6\", RFC 4941,\n         September\
    \ 2007.\n"
- title: 9.2.  Informative references
  contents:
  - "9.2.  Informative references\n   [9]   IANA, \"Assigned Numbers,\" http://www.iana.org/numbers.html\n\
    \   [10]  3GPP2 X.S0011-002-C v1.0, \"cdma2000 Wireless IP Network\n         Standard:\
    \ Simple IP and Mobile IP Access Services,\" September\n         2003.\n   [11]\
    \  3GPP TS 29.061 V6.4.0, \"Interworking between the Public Land\n         Mobile\
    \ Network (PLMN) Supporting packet based services and\n         Packet Data Networks\
    \ (PDN) (Release 6),\" April 2005.\n   [12]  Droms, R., Ed., Bound, J., Volz,\
    \ B., Lemon, T., Perkins, C.,\n         and M. Carney, \"Dynamic Host Configuration\
    \ Protocol for IPv6\n         (DHCPv6)\", RFC 3315, July 2003.\n   [13]  3GPP\
    \ TS 23.060 v6.8.0, \"General Packet Radio Service (GPRS);\n         Service description;\
    \ Stage 2 (Release 6),\" March 2005.\n   [14]  Narten, T. and C. Burton, \"A Caution\
    \ On The Canonical Ordering\n         Of Link-Layer Addresses\", RFC 2469, December\
    \ 1998.\n   [15]  Aboba, B., Blunk, L., Vollbrecht, J., Carlson, J., and H.\n\
    \         Levkowetz, Ed., \"Extensible Authentication Protocol (EAP)\", RFC\n\
    \         3748, June 2004.\n   [16]  Rivest, R., \"The MD5 Message-Digest Algorithm\"\
    , RFC 1321, April\n         1992.\n   [17]  Meyer, G., \"The PPP Encryption Control\
    \ Protocol (ECP)\", RFC\n         1968, June 1996.\n"
- title: 'Appendix A:  Global Scope Addresses'
  contents:
  - "Appendix A:  Global Scope Addresses\n   A node on the PPP link creates global\
    \ unicast addresses either\n   through stateless or stateful address autoconfiguration\
    \ mechanisms.\n   In the stateless address autoconfiguration [3], the node relies\
    \ on\n   sub-net prefixes advertised by the router via the Router\n   Advertisement\
    \ messages to obtain global unicast addresses from an\n   interface identifier.\
    \  In the stateful address autoconfiguration, the\n   host relies on a Stateful\
    \ Server, like DHCPv6 [12], to obtain global\n   unicast addresses.\n"
- title: 'Appendix B:  Changes from RFC 2472'
  contents:
  - "Appendix B:  Changes from RFC 2472\n   The following changes were made from RFC\
    \ 2472 \"IPv6 over PPP\":\n   -  Minor updates to Sections 3 and 4\n   -  Updated\
    \ the text in Section 4.1 to include the reference to\n      Appendix A and minor\
    \ text clarifications.\n   -  Removed Section 4.2 on IPv6-Compression-Protocol\
    \ based on IESG\n      recommendation, and created a new standards-track document\
    \ to\n      cover negotiation of the IPv6 datagram compression protocol using\n\
    \      IPV6CP.\n   -  Updated the text in Section 5 to: (a) allow the use of one\
    \ or more\n      interface identifiers generated by a peer, in addition to the\
    \ use\n      of interface identifier negotiated between peers of the link, in\n\
    \      the creation of global unicast addresses for the local PPP\n      interface,\
    \ and (b) identify cases against the DAD of created non-\n      link-local addresses.\n\
    \   -  Added new and updated references.\n   -  Added Appendix A\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Dimitry Haskin\n   Ed Allen\n   Srihari Varada (Editor)\n\
    \   TranSwitch Corporation\n   3 Enterprise Dr.\n   Shelton, CT 06484. US.\n \
    \  Phone: +1 203 929 8810\n   EMail: varada@ieee.org\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
