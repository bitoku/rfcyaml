Abstract This document extends RFC 4279, RFC 4492, and RFC 4785 and specifies a set of cipher suites that use a pre shared key (PSK) to authenticate an Elliptic Curve Diffie Hellman exchange with Ephemeral keys (ECDHE).
These cipher suites provide Perfect Forward Secrecy (PFS).
Introduction RFC 4279 specifies cipher suites for supporting TLS using pre shared symmetric keys that (a) use only symmetric key operations for authentication, (b) use a Diffie Hellman exchange authenticated with a pre shared key (PSK), or (c) combine public key authentication of the server with pre shared key authentication of the client.
RFC 4785 specifies authentication only cipher suites (with no encryption).
These cipher suites are useful when authentication and integrity protection is desired, but confidentiality is not needed or not permitted.
RFC 4492 defines a set of Elliptic Curve Cryptography (ECC)
based cipher suites for TLS and describes the use of ECC certificates for client authentication.
In particular, it specifies the use of Elliptic Curve Diffie Hellman (ECDH) key agreement in a TLS handshake and the use of the Elliptic Curve Digital Signature Algorithm (ECDSA) as a new authentication mechanism.
This document specifies a set of cipher suites that use a PSK to authenticate an ECDH exchange.
These cipher suites provide Perfect Forward Secrecy.
Some of these cipher suites provide authentication only.
The reader is expected to become familiar with RFC 4279, RFC 4492, and RFC 4785 prior to studying this document.
The cipher suites defined in this document can be negotiated, whatever the negotiated TLS version is.
The applicability statement in [RFC4279] applies to this document as well.
Conventions Used in This Document
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "
SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].
The cipher suites described in this document make use of the elliptic curve (EC) parameter negotiation mechanism defined in RFC 4492.
When the cipher suites defined in this document are used, the 'ec diffie hellman psk' case inside the ServerKeyExchange and ClientKeyExchange structure MUST be used instead of the 'psk' case defined in [RFC4279] (i.e., the ServerKeyExchange and ClientKeyExchange messages include the EC Diffie Hellman parameters in the form specified in Sections 5.4 and 5.7 of [RFC4492]).
The PSK identity and identity hint fields have the same meaning and encoding as specified in [RFC4279]
(note that the ServerKeyExchange message is always sent, even if no PSK identity hint is provided).
The format of the ServerKeyExchange and ClientKeyExchange messages is shown below.
; ClientECDiffieHellmanPublic public; } exchange keys; } ClientKeyExchange; The premaster secret is formed as follows.
First, perform the ECDH computation as described in Section 5.10 of [RFC4492].
Let Z be the octet string produced by this computation.
Next, concatenate a uint16 containing the length of Z (in octets), Z itself, a uint16 containing the length of the PSK (in octets), and the PSK itself.
This corresponds to the general structure for the premaster secrets (see Note 1 in Section 2 of [RFC4279]), with "other secret" containing Z. struct { opaque other secret<0..
ECDHE PSK Based Cipher Suites 3.1.
; The above four cipher suites match the cipher suites defined in [RFC4279], except that they use an Elliptic Curve Diffie Hellman exchange [RFC4492] authenticated with a PSK, and:
The Message Authentication Code (MAC) is the Hashed Message Authentication Code (HMAC) [RFC2104] with SHA 1 as the hash function.
When negotiated in a version of TLS prior to 1.2, the Pseudo  Random Function (PRF) from that version is used; otherwise, the PRF is the TLS PRF [RFC5246] with SHA 256 as the hash function.
Using SHA 2 Hashes CipherSuite TLS ECDHE PSK WITH AES 128
The MAC is HMAC [RFC2104] with SHA 256 as the hash function.
When negotiated in a version of TLS prior to 1.2, the PRF from that version is used; otherwise, the PRF is the TLS PRF [RFC5246] with SHA 256 as the hash function.
For the cipher suite TLS ECDHE PSK WITH AES 256 CBC SHA384:
The MAC is HMAC [RFC2104] with SHA 384 as the hash function.
When negotiated in a version of TLS prior to 1.2, the PRF from that version is used; otherwise the PRF is the TLS PRF [RFC5246] with SHA 384 as the hash function.
PSK Based Cipher Suites with NULL Encryption 4.1.
ECDHE PSK Cipher Suite Using the SHA 1 Hash with NULL Encryption
The following cipher suite matches the cipher suites defined in Section 3.1, except that we define a suite with NULL encryption.
Using SHA 2 Hashes with NULL Encryption
The following two cipher suites are the same as the corresponding cipher suites in Section 3.2, but with NULL encryption (instead of AES).
The security considerations described throughout [RFC5246], [RFC4785], [RFC4492], and [RFC4279] apply here as well.
In particular, as the authentication only cipher suites (with no encryption) defined here do not support confidentiality, care should be taken not to send sensitive information (such as passwords) over connections protected with one of the cipher suites with NULL encryption defined in Section 4 of this document.
Implementers and administrators should monitor the general statements on recommended cryptographic algorithms (e.g., SHA 1 hash function) that are published from time to time by various forums, including the IETF, as a base for the portfolio they support and the policies for strength of function acceptable for the cipher suites they set.
This document defines the following new cipher suites, whose values have been assigned from the TLS Cipher Suite registry defined in [RFC5246].
