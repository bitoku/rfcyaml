- contents:
  - "         Update to the Extensible Authentication Protocol (EAP)\n                      Applicability
    Statement for\n      Application Bridging for Federated Access Beyond Web (ABFAB)\n"
  title: __initial_text__
- contents:
  - "Abstract\n   This document updates the Extensible Authentication Protocol (EAP)\n
    \  applicability statement from RFC 3748 to reflect recent usage of the\n   EAP
    protocol in the Application Bridging for Federated Access Beyond\n   web (ABFAB)
    architecture.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7057.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2013 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n
    \     1.1. Requirements Language ......................................2\n   2.
    Uses of EAP for Application-Layer Access ........................2\n      2.1.
    Retransmission .............................................4\n      2.2. Re-authentication
    ..........................................5\n   3. Revised EAP Applicability Statement
    .............................5\n   4. Security Considerations .........................................6\n
    \  5. Acknowledgements ................................................6\n   6.
    References ......................................................6\n      6.1.
    Normative References .......................................6\n      6.2. Informative
    References .....................................6\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The EAP applicability statement in [RFC3748] defines the
    scope of the\n   Extensible Authentication Protocol to be \"for use in network
    access\n   authentication, where IP layer connectivity may not be available\",\n
    \  and states that \"Use of EAP for other purposes, such as bulk data\n   transport,
    is NOT RECOMMENDED\".\n   While some of the reasons for the recommendation against
    usage of EAP\n   for bulk data transport are still valid, some of the other provisions\n
    \  in the applicability statement have turned out to be too narrow.\n   Section
    2 describes the example where EAP is used to authenticate\n   application-layer
    access.  Section 3 provides new text to update\n   Section 1.3., \"Applicability\",
    in [RFC3748].\n"
  - contents:
    - "1.1.  Requirements Language\n   In this document, several words are used to
      signify the requirements\n   of the specification.  The key words \"MUST\",
      \"MUST NOT\", \"REQUIRED\",\n   \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD
      NOT\", \"RECOMMENDED\", \"NOT\n   RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in
      this document are to be\n   interpreted as described in [RFC2119].\n"
    title: 1.1.  Requirements Language
  title: 1.  Introduction
- contents:
  - "2.  Uses of EAP for Application-Layer Access\n   Ongoing work in the IETF specifies
    the use of EAP over Generic\n   Security Service Application Program Interface
    (GSS-API) for generic\n   application layer access [RFC7055].  In the past, using
    EAP in this\n   context has met resistance due to the lack of channel bindings\n
    \  [RFC6677].  Without channel bindings, a peer cannot verify if an\n   authenticator
    is authorized to provide an advertised service.\n   However, as additional services
    use EAP for authentication, the\n   distinction of which service is being contacted
    becomes more\n   important.  Application services might have different properties.\n
    \  Consider an environment with multiple printers, some of which provide\n   a
    confidential service to output documents to a controlled location.\n   If a peer
    sent a document to the wrong service, then potentially\n   sensitive information
    might be printed in an uncontrolled location\n   and be disclosed.  In addition,
    it might be more likely that a low-\n   value service is compromised than some
    high-value service.  If the\n   high-value service could be impersonated by a
    low-value service then\n   the security of the overall system would be limited
    by the security\n   of the lower-value service.\n   This distinction is present
    in any environment where peers' security\n   depends on which service they reach.
    \ However, it is particularly\n   acute in a federated environment where multiple
    organizations are\n   involved.  It is very likely that these organizations will
    have\n   different security policies and practices.  It is very likely that\n
    \  the goals of these organizations will not entirely be aligned.  In\n   many
    situations, one organization could gain value by being able to\n   impersonate
    another.  In this environment, authenticating the EAP\n   server is insufficient:
    the peer must also validate that the\n   contacted host is authorized to provide
    the requested service.\n   In environments where EAP is used for purposes other
    than network\n   access authentication:\n   o  All EAP servers and all application
    access EAP peers MUST support\n      channel bindings.  All network access EAP
    peers SHOULD support\n      channel bindings.\n   o  Channel binding MUST be used
    for all application authentication.\n      The EAP server MUST require that either
    the correct EAP lower-\n      layer attribute or another attribute indicating
    the purpose of the\n      authentication be present in the channel binding data
    for\n      application authentication.\n   o  Channel binding SHOULD be used for
    all network access\n      authentication, and when channel binding data is present,
    the EAP\n      server MUST require that it contain the correct EAP lower-layer\n
    \     attribute to explicitly identify the reason for authentication.\n   o  Any
    new usage of EAP MUST use channel bindings including the EAP\n      lower-layer
    attribute to prevent confusion with network access\n      usage.\n   Operators
    need to carefully consider the security implications before\n   relaxing these
    requirements.  One potentially serious attack exists\n   when channel binding
    is not required and EAP authentication is\n   introduced into an existing service
    other than network access.  A\n   device can be created that impersonates a Network
    Access Service\n   (NAS) to peers, but actually proxies the authentication to
    the new\n   application service that accepts EAP authentications.  This may\n
    \  decrease the security of this service even for users who previously\n   used
    non-EAP means of authentication to the service.\n   It is REQUIRED for the application
    layer to prove that both the EAP\n   peer and EAP authenticator possess the EAP
    Master Session Key (MSK).\n   Failing to validate the possession of the EAP MSK
    can allow an\n   attacker to insert himself into the conversation and impersonate
    the\n   peer or authenticator.  In addition, the application should define\n   channel
    binding attributes that are sufficient to validate that the\n   application service
    is being correctly represented to the peer.\n"
  - contents:
    - "2.1.  Retransmission\n   In EAP, the authenticator is responsible for retransmission.
      \ By\n   default, EAP assumes that the lower layer (the application in this\n
      \  context) is unreliable.  The authenticator can send a packet whenever\n   its
      retransmission timer triggers.  In this mode, applications need\n   to be able
      to receive and process EAP messages at any time during the\n   authentication
      conversation.\n   Alternatively, EAP permits a lower layer to set the retransmission\n
      \  timer to infinite.  When this happens, the lower layer becomes\n   responsible
      for reliable delivery of EAP messages.  Applications that\n   use a lock-step
      or client-driven authentication protocol might\n   benefit from this approach.\n
      \  In addition to retransmission behavior, applications need to deal\n   with
      discarded EAP messages.  For example, whenever some EAP methods\n   receive
      erroneous input, these methods discard the input rather than\n   generating
      an error response.  If the erroneous input was generated\n   by an attacker,
      legitimate input can sometimes be received after the\n   erroneous input.  Applications
      MUST handle discarded EAP messages,\n   although the specific way in which discarded
      messages will be handled\n   depends on the characteristics of the application.
      \ Options include\n   failing the authentication at the application level, requesting
      an\n   EAP retransmit and waiting for additional EAP input.\n   Applications
      designers that incorporate EAP into their application\n   need to determine
      how retransmission and message discards are\n   handled.\n"
    title: 2.1.  Retransmission
  - contents:
    - "2.2.  Re-authentication\n   EAP lower layers MAY provide a mechanism for re-authentication
      to\n   happen within an existing session [RFC3748].  Re-authentication\n   permits
      security associations to be updated without establishing a\n   new session.
      \ For network access, this can be important because\n   interrupting network
      access can disrupt connections and media.\n   Some applications might not need
      re-authentication support.  For\n   example, if sessions are relatively short-lived
      or if sessions can be\n   replaced without significant disruption, re-authentication
      might not\n   provide value.  Protocols like HyperText Transfer Protocol (HTTP)\n
      \  [RFC2616] and Simple Mail Transport Protocol (SMTP) [RFC5321] are\n   examples
      of protocols where establishing a new connection to update\n   security associations
      is likely to be sufficient.\n   Re-authentication is likely to be valuable if
      sessions or connections\n   are long-lived or if there is a significant cost
      to disrupting them.\n   Another factor may make re-authentication important.
      \ Some protocols\n   only permit one party in a protocol (for example, the client)
      to\n   establish a new connection.  If another party in the protocol needs\n
      \  the security association refreshed, then re-authentication can\n   provide
      a mechanism to do so.\n   Application designers need to determine whether re-authentication\n
      \  support is needed and which parties can initiate it.\n"
    title: 2.2.  Re-authentication
  title: 2.  Uses of EAP for Application-Layer Access
- contents:
  - "3.  Revised EAP Applicability Statement\n   The following text is appended to
    the EAP applicability statement in\n   [RFC3748].\n   In cases where EAP is used
    for application authentication, support\n   for EAP channel bindings is REQUIRED
    on the EAP peer and EAP server\n   to validate that the host is authorized to
    provide the services\n   requested.  In addition, the application MUST define
    channel binding\n   attributes that are sufficient to validate that the application\n
    \  service is being correctly represented to the peer.  The protocol\n   carrying
    EAP MUST prove possession of the EAP MSK between the EAP\n   peer and EAP authenticator.
    \ In the context of EAP for application\n   access the application is providing
    the EAP lower layer.\n   Applications protocols vary so their specific behavior
    and transport\n   characteristics needs to be considered when determining their\n
    \  retransmission and re-authentication behavior.  Circumstances might\n   require
    that applications need to perform conversion of identities\n   from an application
    specific character set to UTF-8 or another\n   character set required by a particular
    EAP method.  See also\n   [RADEXT-NAI], Section 2.6, for information about normalization
    of\n   identifiers.\n"
  title: 3.  Revised EAP Applicability Statement
- contents:
  - "4.  Security Considerations\n   In addition to the requirements discussed in
    the main sections of the\n   document, applications should take into account how
    server\n   authentication is achieved.  Some deployments may allow for weak\n
    \  server authentication that is then validated with an additional\n   existing
    exchange that provides mutual authentication.  In order to\n   fully mitigate
    the risk of NAS impersonation when these mechanisms\n   are used, it is RECOMMENDED
    that mutual channel bindings be used to\n   bind the authentications together
    as described in [RFC7029].  When\n   doing channel binding it is REQUIRED that
    the authenticator is not\n   able to modify the channel binding data passed between
    the peer to\n   the authenticator as part of the authentication process.\n"
  title: 4.  Security Considerations
- contents:
  - "5.  Acknowledgements\n   Large amounts of helpful text and insightful thoughts
    were\n   contributed by Sam Hartman, Painless Security.  David Black\n   contributed
    to the text clarifying channel bindings usage.\n"
  title: 5.  Acknowledgements
- contents:
  - '6.  References

    '
  - contents:
    - "6.1.  Normative References\n   [RFC2119]    Bradner, S., \"Key words for use
      in RFCs to Indicate\n                Requirement Levels\", BCP 14, RFC 2119,
      March 1997.\n   [RFC3748]    Aboba, B., Blunk, L., Vollbrecht, J., Carlson,
      J., and\n                H.  Levkowetz, \"Extensible Authentication Protocol\n
      \               (EAP)\", RFC 3748, June 2004.\n   [RFC6677]    Hartman, S.,
      Clancy, T., and K. Hoeper, \"Channel-Binding\n                Support for Extensible
      Authentication Protocol (EAP)\n                Methods\", RFC 6677, July 2012.\n"
    title: 6.1.  Normative References
  - contents:
    - "6.2.  Informative References\n   [RADEXT-NAI] DeKok, A., \"The Network Access
      Identifier\", Work in\n                Progress, November 2013.\n   [RFC2616]
      \   Fielding, R., Gettys, J., Mogul, J., Frystyk, H.,\n                Masinter,
      L., Leach, P., and T. Berners-Lee, \"Hypertext\n                Transfer Protocol
      -- HTTP/1.1\", RFC 2616, June 1999.\n   [RFC5321]    Klensin, J., \"Simple Mail
      Transfer Protocol\", RFC 5321,\n                October 2008.\n   [RFC7029]
      \   Hartman, S., Wasserman, M., and D. Zhang, \"Extensible\n                Authentication
      Protocol (EAP) Mutual Cryptographic\n                Binding\", RFC 7029, October
      2013.\n   [RFC7055]    Hartman, S., Ed. and J. Howlett, \"A GSS-API Mechanism\n
      \               for the Extensible Authentication Protocol\", RFC 7055,\n                December
      2013.\n"
    title: 6.2.  Informative References
  title: 6.  References
- contents:
  - "Authors' Addresses\n   Stefan Winter\n   Fondation RESTENA\n   6, rue Richard
    Coudenhove-Kalergi\n   Luxembourg  1359\n   LUXEMBOURG\n   Phone: +352 424409
    1\n   Fax:   +352 422473\n   EMail: stefan.winter@restena.lu\n   URI:   http://www.restena.lu.\n
    \  Joseph Salowey\n   Cisco Systems\n   2901 3rd Ave\n   Seattle, Washington  98121\n
    \  USA\n   EMail: jsalowey@cisco.com\n"
  title: Authors' Addresses
