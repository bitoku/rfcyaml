- contents:
  - '               Telnet Authentication: Kerberos Version 5

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document describes how Kerberos Version 5 [1] is used with
    the\n   telnet protocol.   It describes an telnet authentication suboption to\n
    \  be used with the telnet authentication option [2].   This mechanism\n   can
    also used to provide keying material to provide data\n   confidentiality services
    in conjunction with the telnet encryption\n   option [3].\n"
  title: Abstract
- contents:
  - "1. Command Names and Codes\n      Authentication Types\n         KERBEROS_V5
    \   2\n      Sub-option Commands\n         AUTH               0\n         REJECT
    \            1\n         ACCEPT             2\n         RESPONSE           3\n
    \        FORWARD            4\n         FORWARD_ACCEPT     5\n         FORWARD_REJECT
    \    6\n"
  title: 1. Command Names and Codes
- contents:
  - "2.  Command Meanings\n   IAC SB AUTHENTICATION IS <authentication-type-pair>
    AUTH <Kerberos V5\n   KRB_AP_REQ message> IAC SE\n      This is used to pass the
    Kerberos V5 [1] KRB_AP_REQ message to the\n      remote side of the connection.
    \ The first octet of the\n      <authentication-type-pair> value is KERBEROS_V5,
    to indicate that\n      Version 5 of Kerberos is being used.  The Kerberos V5\n
    \     authenticator in the KRB_AP_REQ message must contain a Kerberos V5\n      checksum
    of the two-byte authentication type pair.  This checksum\n      must be verified
    by the server to assure that the authentication\n      type pair was correctly
    negotiated.  The Kerberos V5 authenticator\n      must also include the optional
    subkey field, which shall be filled\n      in with a randomly chosen key.  This
    key shall be used for\n      encryption purposes if encryption is negotiated,
    and shall be used\n      as the negotiated session key (i.e., used as keyid 0)
    for the\n      purposes of the telnet encryption option; if the subkey is not\n
    \     filled in, then the ticket session key will be used instead.\n      If data
    confidentiality services is desired the ENCRYPT_US-\n      ING_TELOPT flag must
    be set in the authentication-type-pair as\n      specified in [2].\n   IAC SB
    AUTHENTICATION REPLY <authentication-type-pair> ACCEPT IAC SE\n      This command
    indicates that the authentication was successful.\n      If the AUTH_HOW_MUTUAL
    bit is set in the second octet of the\n      authentication-type-pair, the RESPONSE
    command must be sent before\n      the ACCEPT command is sent.\n   IAC SB AUTHENTICATION
    REPLY <authentication-type-pair> REJECT\n      <optional reason for rejection>
    IAC SE\n      This command indicates that the authentication was not successful,\n
    \     and if there is any more data in the sub-option, it is an ASCII\n      text
    message of the reason for the rejection.\n   IAC SB AUTHENTICATION REPLY <authentication-type-pair>
    RESPONSE\n   <KRB_AP_REP message> IAC SE\n      This command is used to perform
    mutual authentication.  It is only\n      used when the AUTH_HOW_MUTUAL bit is
    set in the second octet of\n      the authentication-type-pair.  After an AUTH
    command is verified,\n      a RESPONSE command is sent which contains a Kerberos
    V5 KRB_AP_REP\n      message to perform the mutual authentication.\n   IAC SB
    AUTHENTICATION <authentication-type-pair> FORWARD <KRB_CRED\n   message> IAC SE\n
    \     This command is used to forward kerberos credentials for use by\n      the
    remote session.  The credentials are passed as a Kerberos V5\n      KRB_CRED message
    which includes, among other things, the forwarded\n      Kerberos ticket and a
    session key associated with the ticket.\n      Part of the KRB_CRED message is
    encrypted in the key previously\n      exchanged for the telnet session by the
    AUTH suboption.\n   IAC SB AUTHENTICATION <authentication-type-pair> FORWARD_ACCEPT
    IAC\n   SE\n      This command indicates that the credential forwarding was\n
    \     successful.\n   IAC SB AUTHENTICATION <authentication-type-pair> FORWARD_REJECT\n
    \     <optional reason for rejection> IAC SE\n      This command indicates that
    the credential forwarding was not\n      successful, and if there is any more
    data in the suboption, it is\n      an ASCII text message of the reason for the
    rejection.\n"
  title: 2.  Command Meanings
- contents:
  - "3.  Implementation Rules\n   If the second octet of the authentication-type-pair
    has the AUTH_WHO\n   bit set to AUTH_CLIENT_TO_SERVER, then the client sends the
    initial\n   AUTH command, and the server responds with either ACCEPT or REJECT.\n
    \  In addition, if the AUTH_HOW bit is set to AUTH_HOW_MUTUAL, the\n   server
    will send a RESPONSE before it sends the ACCEPT.\n   If the second octet of the
    authentication-type-pair has the AUTH_WHO\n   bit set to AUTH_SERVER_TO_CLIENT,
    then the server sends the initial\n   AUTH command, and the client responds with
    either ACCEPT or REJECT.\n   In addition, if the AUTH_HOW bit is set to AUTH_HOW_MUTUAL,
    the\n   client will send a RESPONSE before it sends the ACCEPT.\n   The Kerberos
    principal used by the server will generally be of the\n   form \"host/<hostname>@realm\".
    \ That is, the first component of the\n   Kerberos principal is \"host\"; the
    second component is the fully\n   qualified lower-case hostname of the server;
    and the realm is the\n   Kerberos realm to which the server belongs.\n   Any Telnet
    IAC characters that occur in the KRB_AP_REQ or KRB_AP_REP\n   messages, the KRB_CRED
    structure, or the optional rejection text\n   string must be doubled as specified
    in [4].  Otherwise the following\n   byte might be mis-interpreted as a Telnet
    command.\n"
  title: 3.  Implementation Rules
- contents:
  - "4.  Examples\n   User \"joe\" may wish to log in as user \"pete\" on machine
    \"foo\".  If\n   \"pete\" has set things up on \"foo\" to allow \"joe\" access
    to his\n   account, then the client would send IAC SB AUTHENTICATION NAME \"pete\"\n
    \  IAC SE IAC SB AUTHENTICATION IS KERBEROS_V5 AUTH <KRB_AP_REQ_MESSAGE>\n   IAC
    SE\n   The server would then authenticate the user as \"joe\" from the\n   KRB_AP_REQ_MESSAGE,
    and if the KRB_AP_REQ_MESSAGE was accepted by\n   Kerberos, and if \"pete\" has
    allowed \"joe\" to use his account, the\n   server would then continue the authentication
    sequence by sending a\n   RESPONSE (to do mutual authentication, if it was requested)
    followed\n   by the ACCEPT.\n   If forwarding has been requested, the client then
    sends IAC SB\n   AUTHENTICATION IS KERBEROS_V5 CLIENT|MUTUAL FORWARD <KRB_CRED\n
    \  structure with credentials to be forwarded> IAC SE.  If the server\n   succeeds
    in reading the forwarded credentials, the server sends\n   FORWARD_ACCEPT else,
    a FORWARD_REJECT is sent back.\n       Client                           Server\n
    \                                       IAC DO AUTHENTICATION\n       IAC WILL
    AUTHENTICATION\n       [ The server is now free to request authentication information.\n
    \        ]\n                                        IAC SB AUTHENTICATION SEND\n
    \                                       KERBEROS_V5 CLIENT|MUTUAL\n                                        KERBEROS_V5
    CLIENT|ONE_WAY IAC\n                                        SE\n       [ The server
    has requested mutual Version 5 Kerberos\n         authentication.  If mutual authentication
    is not supported,\n         then the server is willing to do one-way authentication.\n
    \        The client will now respond with the name of the user that it\n         wants
    to log in as, and the Kerberos ticket.  ]\n       IAC SB AUTHENTICATION NAME\n
    \      \"pete\" IAC SE\n       IAC SB AUTHENTICATION IS\n       KERBEROS_V5 CLIENT|MUTUAL
    AUTH\n       <KRB_AP_REQ message> IAC SE\n       [ Since mutual authentication
    is desired, the server sends across\n         a RESPONSE to prove that it really
    is the right server.  ]\n                                        IAC SB AUTHENTICATION
    REPLY\n                                        KERBEROS_V5 CLIENT|MUTUAL\n                                        RESPONSE
    <KRB_AP_REP message>\n                                        IAC SE\n       [
    The server responds with an ACCEPT command to state that the\n         authentication
    was successful.  ]\n                                        IAC SB AUTHENTICATION
    REPLY\n                                        KERBEROS_V5 CLIENT|MUTUAL ACCEPT\n
    \                                       IAC SE\n       [ If so requested, the
    client now sends the FORWARD command to\n         forward credentials to the remote
    site.  ]\n       IAC SB AUTHENTICATION IS KER-\n       BEROS_V5 CLIENT|MUTUAL\n
    \      FORWARD <KRB_CRED message> IAC\n       SE\n       [ The server responds
    with a FORWARD_ACCEPT command to state that\n         the credential forwarding
    was successful.  ]\n                                        IAC SB AUTHENTICATION
    REPLY\n                                        KERBEROS_V5 CLIENT|MUTUAL\n                                        FORWARD_ACCEPT
    IAC SE\n"
  title: 4.  Examples
- contents:
  - "5. Security Considerations\n   The selection of the random session key in the
    Kerberos V5\n   authenticator is critical, since this key will be used for encrypting\n
    \  the telnet data stream if encryption is enabled.  It is strongly\n   advised
    that the random key selection be done using cryptographic\n   techniques that
    involve the Kerberos ticket's session key.  For\n   example, using the current
    time, encrypting it with the ticket\n   session key, and then correcting for key
    parity is a strong way to\n   generate a subsession key, since the ticket session
    key is assumed to\n   be never disclosed to an attacker.\n   Care should be taken
    before forwarding a user's Kerberos credentials\n   to the remote server.  If
    the remote server is not trustworthy, this\n   could result in the user's credentials
    being compromised.  Hence, the\n   user interface should not forward credentials
    by default; it would be\n   far safer to either require the user to explicitly
    request\n   credentials forwarding for each connection, or to have a trusted list\n
    \  of hosts for which credentials forwarding is enabled, but to not\n   enable
    credentials forwarding by default for all machines.\n   The IAC SB AUTHENTICATION
    NAME name IAC SE message is unprotected in\n   this protocol.  Its contents should
    be verified by a secure method\n   after authentication completes before it is
    used.\n"
  title: 5. Security Considerations
- contents:
  - "6. IANA Considerations\n   The authentication type KERBEROS_V5 and its associated
    suboption\n   values are registered with IANA.  Any suboption values used to extend\n
    \  the protocol as described in this document must be registered with\n   IANA
    before use.  IANA is instructed not to issue new suboption\n   values without
    submission of documentation of their use.\n"
  title: 6. IANA Considerations
- contents:
  - "7. Acknowledgments\n   This document was originally written by Dave Borman of
    Cray Research,\n   Inc.  Theodore Ts'o of MIT revised it to reflect the latest\n
    \  implementation experience.  Cliff Neuman and Prasad Upasani of USC's\n   Information
    Sciences Institute developed the credential forwarding\n   support.\n   In addition,
    the contributions of the Telnet Working Group are also\n   gratefully acknowledged.\n"
  title: 7. Acknowledgments
- contents:
  - "8. References\n   [1] Kohl, J. and B. Neuman, \"The Kerberos Network Authentication\n
    \      System (V5)\", RFC 1510, September 1993.\n   [2] Ts'o, T. and J. Altman,
    \"Telnet Authentication Option\", RFC 2941,\n       September 2000.\n   [3] Ts'o,
    T., \"Telnet Data Encryption Option\", RFC 2946, September\n       2000.\n   [4]
    Postel, J. and J. Reynolds, \"Telnet Option Specifications\", STD\n       8, RFC
    855, May 1983.\n"
  title: 8. References
- contents:
  - "9. Editor's Address\n   Theodore Ts'o\n   VA Linux Systems\n   43 Pleasant St.\n
    \  Medford, MA 02155\n   Phone: (781) 391-3464\n   EMail: tytso@mit.edu\n"
  title: 9. Editor's Address
- contents:
  - "10. Full Copyright Statement\n   Copyright (C) The Internet Society (2000).  All
    Rights Reserved.\n   This document and translations of it may be copied and furnished
    to\n   others, and derivative works that comment on or otherwise explain it\n
    \  or assist in its implementation may be prepared, copied, published\n   and
    distributed, in whole or in part, without restriction of any\n   kind, provided
    that the above copyright notice and this paragraph are\n   included on all such
    copies and derivative works.  However, this\n   document itself may not be modified
    in any way, such as by removing\n   the copyright notice or references to the
    Internet Society or other\n   Internet organizations, except as needed for the
    purpose of\n   developing Internet standards in which case the procedures for\n
    \  copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: 10. Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
