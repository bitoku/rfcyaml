- title: __initial_text__
  contents:
  - '                     The Network Access Identifier

    '
- title: Abstract
  contents:
  - "Abstract\n   In order to provide inter-domain authentication services, it is\n\
    \   necessary to have a standardized method that domains can use to\n   identify\
    \ each other's users.  This document defines the syntax for\n   the Network Access\
    \ Identifier (NAI), the user identifier submitted by\n   the client prior to accessing\
    \ resources.  This document is a revised\n   version of RFC 4282.  It addresses\
    \ issues with international\n   character sets and makes a number of other corrections\
    \ to RFC 4282.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7542.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \      1.1. Terminology ................................................6\n  \
    \    1.2. Requirements Language ......................................7\n    \
    \  1.3. Purpose ....................................................7\n      1.4.\
    \ Motivation .................................................9\n   2. NAI Definition\
    \ .................................................10\n      2.1. UTF-8 Syntax\
    \ and Normalization ............................10\n      2.2. Formal Syntax .............................................11\n\
    \      2.3. NAI Length Considerations .................................11\n  \
    \    2.4. Support for Username Privacy ..............................12\n    \
    \  2.5. International Character Sets ..............................13\n      2.6.\
    \ The Normalization Process .................................14\n           2.6.1.\
    \ Issues with the Normalization Process ..............15\n      2.7. Use in Other\
    \ Protocols ....................................16\n      2.8. Using the NAI Format\
    \ for Other Identifiers ................17\n   3. Routing inside of AAA Systems\
    \ ..................................18\n      3.1. Compatibility with Email Usernames\
    \ ........................19\n      3.2. Compatibility with DNS ....................................20\n\
    \      3.3. Realm Construction ........................................20\n  \
    \         3.3.1. Historical Practices ...............................21\n    \
    \  3.4. Examples ..................................................22\n   4. Security\
    \ Considerations ........................................23\n      4.1. Correlation\
    \ of Identities over Time and Protocols .........23\n      4.2. Multiple Identifiers\
    \ ......................................24\n   5. Administration of Names ........................................25\n\
    \   6. References .....................................................26\n  \
    \    6.1. Normative References ......................................26\n    \
    \  6.2. Informative References ....................................26\n   Appendix\
    \ A. Changes from RFC 4282 .................................29\n   Acknowledgments\
    \ ...................................................30\n   Author's Address ..................................................30\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Considerable interest exists for a set of features that\
    \ fit within\n   the general category of inter-domain authentication, or \"roaming\n\
    \   capability\" for network access, including dialup Internet users,\n   Virtual\
    \ Private Network (VPN) usage, wireless LAN authentication, and\n   other applications.\n\
    \   By \"inter-domain authentication\", this document refers to situations\n \
    \  where a user has authentication credentials at one \"home\" domain but\n  \
    \ is able to present them at a second \"visited\" domain to access\n   certain\
    \ services at the visited domain.  The two domains generally\n   have a pre-existing\
    \ relationship, so that the credentials can be\n   passed from the visited domain\
    \ to the home domain for verification.\n   The home domain typically responds\
    \ with a permit/deny response, which\n   may also include authorization parameters\
    \ that the visited domain is\n   expected to enforce on the user.\n   That is,\
    \ the \"roaming\" scenario involves a user visiting, or\n   \"roaming\" to, a\
    \ non-home domain and requesting the use of services at\n   that visited domain.\n\
    \   Interested parties have included the following:\n   *  Regional Internet Service\
    \ Providers (ISPs) operating within a\n      particular state or province, looking\
    \ to combine their efforts\n      with those of other regional providers to offer\
    \ dialup service\n      over a wider area.\n   *  Telecommunications companies\
    \ who wish to combine their operations\n      with those of one or more companies\
    \ in other areas or nations, in\n      order to offer more comprehensive network\
    \ access service in areas\n      where there is no native service (e.g., in another\
    \ country).\n   *  Wireless LAN hotspots providing service to one or more ISPs.\n\
    \   *  Businesses desiring to offer their employees a comprehensive\n      package\
    \ of dialup services on a global basis.  Those services may\n      include Internet\
    \ access as well as secure access to corporate\n      intranets via a VPN, enabled\
    \ by tunneling protocols such as the\n      Point-to-Point Tunneling Protocol\
    \ (PPTP) [RFC2637], the Layer 2\n      Forwarding (L2F) protocol [RFC2341], the\
    \ Layer 2 Tunneling\n      Protocol (L2TP) [RFC2661], and the IPsec tunnel mode\
    \ [RFC4301].\n   *  Other protocols that are interested in leveraging the users'\n\
    \      credentials in order to take advantage of an existing\n      authentication\
    \ framework.\n   In order to enhance the interoperability of these services, it\
    \ is\n   necessary to have a standardized method for identifying users.  This\n\
    \   document defines syntax for the Network Access Identifier (NAI).\n   Examples\
    \ of implementations that use the NAI, and descriptions of its\n   semantics,\
    \ can be found in [RFC2194].\n   When the NAI was defined for network access,\
    \ it had the side effect\n   of defining an identifier that could be used in non-AAA\
    \ systems.\n   Some non-AAA systems defined identifiers that were compatible with\n\
    \   the NAI, and deployments used the NAI.  This process simplified the\n   management\
    \ of credentials, by reusing the same credential in multiple\n   situations. \
    \ Protocols that reuse the same credential or the same\n   identifier format can\
    \ benefit from this simplified management.  The\n   alternative is to have protocol-specific\
    \ credentials or identifier\n   formats, which increases cost to both the user\
    \ and the administrator.\n   There are privacy implications to using one identifier\
    \ across\n   multiple protocols.  See Sections 2.7 and 4 for further discussion\
    \ of\n   this topic.\n   The goal of this document is to define the format of\
    \ an identifier\n   that can be used in many protocols.  A protocol may transport\
    \ an\n   encoded version of the NAI (e.g., '.' as %2E).  However, the\n   definition\
    \ of the NAI is protocol independent.  The goal of this\n   document is to encourage\
    \ the widespread adoption of the NAI format.\n   This adoption will decrease the\
    \ work required to leverage\n   identification and authentication in other protocols.\
    \  It will also\n   decrease the complexity of non-AAA systems for end users and\n\
    \   administrators.\n   This document only suggests that the NAI format be used;\
    \ it does not\n   require such use.  Many protocols already define their own identifier\n\
    \   formats.  Some of these are incompatible with the NAI, while others\n   allow\
    \ the NAI in addition to non-NAI identifiers.  The definition of\n   the NAI in\
    \ this document has no requirements on protocol\n   specifications, implementations,\
    \ or deployments.\n   However, this document suggests that using one standard\
    \ identifier\n   format is preferable to using multiple incompatible identifier\n\
    \   formats.  Where identifiers need to be used in new protocols and/or\n   specifications,\
    \ it is RECOMMENDED that the format of the NAI be used.\n   That is, the interpretation\
    \ of the identifier is context specific,\n   while the format of the identifier\
    \ remains the same.  These issues\n   are discussed in more detail in Section\
    \ 2.8, below.\n   The recommendation for a standard identifier format is not a\n\
    \   recommendation that each user have one universal identifier.  In\n   contrast,\
    \ this document allows for the use of multiple identifiers\n   and recommends\
    \ the use of anonymous identifiers where those\n   identifiers are publicly visible.\n\
    \   This document is a revised version of [RFC4282], which originally\n   defined\
    \ internationalized NAIs.  Differences and enhancements\n   compared to that document\
    \ are listed in Appendix A.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   This document frequently uses the following terms:\n  \
    \ \"Local\" or \"Localized\" Text\n      \"Local\" or \"localized\" text is text\
    \ that is in either non-UTF-8 or\n      non-normalized form.  The character set,\
    \ encoding, and locale are\n      (in general) unknown to Authentication, Authorization,\
    \ and\n      Accounting (AAA) network protocols.  The client that \"knows\" the\n\
    \      locale may have a different concept of this text than other AAA\n     \
    \ entities, which do not know the same locale.\n   Network Access Identifier\n\
    \      The Network Access Identifier (NAI) is a common format for user\n     \
    \ identifiers submitted by a client during authentication.  The\n      purpose\
    \ of the NAI is to allow a user to be associated with an\n      account name,\
    \ as well as to assist in the routing of the\n      authentication request across\
    \ multiple domains.  Please note that\n      the NAI may not necessarily be the\
    \ same as the user's email\n      address or the user identifier submitted in\
    \ an application-layer\n      authentication.\n   Network Access Server\n    \
    \  The Network Access Server (NAS) is the device that clients connect\n      to\
    \ in order to get access to the network.  In PPTP terminology,\n      this is\
    \ referred to as the PPTP Access Concentrator (PAC), and in\n      L2TP terminology,\
    \ it is referred to as the L2TP Access\n      Concentrator (LAC).  In IEEE 802.11,\
    \ it is referred to as an\n      Access Point.\n   Roaming Capability\n      Roaming\
    \ capability can be loosely defined as the ability to use\n      any one of multiple\
    \ Internet Service Providers (ISPs), while\n      maintaining a formal customer-vendor\
    \ relationship with only one.\n      Examples of cases where roaming capability\
    \ might be required\n      include ISP \"confederations\" and ISP-provided corporate\
    \ network\n      access support.\n   Normalization or Canonicalization\n     \
    \ These terms are defined in Section 4 of [RFC6365]; those\n      definitions\
    \ are incorporated here by reference.\n   Locale\n      This term is defined in\
    \ [RFC6365], Section 8; that definition is\n      incorporated here by reference.\n\
    \   Tunneling Service\n      A tunneling service is any network service enabled\
    \ by tunneling\n      protocols such as PPTP, L2F, L2TP, and IPsec tunnel mode.\
    \  One\n      example of a tunneling service is secure access to corporate\n \
    \     intranets via a Virtual Private Network (VPN).\n"
- title: 1.2.  Requirements Language
  contents:
  - "1.2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   [RFC2119].\n"
- title: 1.3.  Purpose
  contents:
  - "1.3.  Purpose\n   As described in [RFC2194], there are a number of providers\
    \ offering\n   network access services, and essentially all Internet Service\n\
    \   Providers are involved in roaming consortia.\n   In order to be able to offer\
    \ roaming capability, one of the\n   requirements is to be able to identify the\
    \ user's home authentication\n   server.  For use in roaming, this function is\
    \ accomplished via the\n   Network Access Identifier (NAI) submitted by the user\
    \ to the NAS in\n   the initial network authentication.  It is also expected that\
    \ NASes\n   will use the NAI as part of the process of opening a new tunnel, in\n\
    \   order to determine the tunnel endpoint.\n   This document suggests that other\
    \ protocols can take advantage of the\n   NAI format.  Many protocols include\
    \ authentication capabilities,\n   including defining their own identifier formats.\
    \  These identifiers\n   can then end up being transported in AAA protocols, so\
    \ that the\n   originating protocols can leverage AAA for user authentication.\n\
    \   There is therefore a need for a definition of a user identifier that\n   can\
    \ be used in multiple protocols.\n   While the NAI is defined herein, it should\
    \ be noted that existing\n   protocols and deployments do not always use it. \
    \ AAA systems MUST\n   therefore be able to handle user identifiers that are not\
    \ in the NAI\n   format.  The process by which that is done is outside of the\
    \ scope of\n   this document.\n   Non-AAA systems can accept user identifiers\
    \ in forms other than the\n   NAI.  This specification does not forbid that practice.\
    \  It only\n   codifies the format and interpretation of the NAI.  This document\n\
    \   cannot change existing protocols or practices.  It can, however,\n   suggest\
    \ that using a consistent form for a user identifier is of\n   benefit to the\
    \ community.\n   This document does not make any protocol-specific definitions\
    \ for an\n   identifier format, and it does not make changes to any existing\n\
    \   protocol.  Instead, it defines a protocol-independent form for the\n   NAI.\
    \  It is hoped that the NAI is a user identifier that can be used\n   in multiple\
    \ protocols.\n   Using a common identifier format simplifies protocols requiring\n\
    \   authentication, as they no longer need to specify a protocol-specific\n  \
    \ format for user identifiers.  It increases security, as multiple\n   identifier\
    \ formats allow attackers to make contradictory claims\n   without being detected\
    \ (see Section 4.2 for further discussion of\n   this topic).  It simplifies deployments,\
    \ as a user can have one\n   identifier in multiple contexts, which allows them\
    \ to be uniquely\n   identified, so long as that identifier is itself protected\
    \ against\n   unauthorized access.\n   In short, having a standard is better than\
    \ having no standard at all.\n"
- title: 1.4.  Motivation
  contents:
  - "1.4.  Motivation\n   The changes from [RFC4282] are listed in detail in Appendix\
    \ A.\n   However, some additional discussion is appropriate to motivate those\n\
    \   changes.\n   The motivation to revise [RFC4282] began with internationalization\n\
    \   concerns raised in the context of [EDUROAM].  Section 2.1 of\n   [RFC4282]\
    \ defines ABNF for realms and limits the realm grammar to\n   English letters,\
    \ digits, and the hyphen \"-\" character.  The intent\n   appears to have been\
    \ to encode, compare, and transport realms with\n   the Punycode [RFC3492] encoding\
    \ form as described in [RFC5891].\n   There are a number of problems with this\
    \ approach:\n   *  The [RFC4282] ABNF is not aligned with internationalization\n\
    \      of DNS.\n   *  The requirement in Section 2.1 of [RFC4282] that realms\
    \ are ASCII\n      conflicts with the Extensible Authentication Protocol (EAP)\
    \ as\n      defined in [RFC3748], and RADIUS, which are both 8-bit clean, and\n\
    \      which both recommend the use of UTF-8 for identifiers.\n   *  Section 2.4\
    \ of [RFC4282] required mappings that are language\n      specific and that are\
    \ nearly impossible for intermediate nodes to\n      perform correctly without\
    \ information about that language.\n   *  Section 2.4 of [RFC4282] requires normalization\
    \ of usernames,\n      which may conflict with local system or administrative\n\
    \      requirements.\n   *  The recommendations in Section 2.4 of [RFC4282] for\
    \ treatment of\n      bidirectional characters have proven to be unworkable.\n\
    \   *  The prohibition of the use of unassigned code points in\n      Section\
    \ 2.4 of [RFC4282] effectively prohibits support for new\n      scripts.\n   *\
    \  No Authentication, Authorization, and Accounting (AAA) client,\n      proxy,\
    \ or server has implemented any of the requirements in\n      Section 2.4 of [RFC4282],\
    \ among other sections.\n   With international roaming growing in popularity,\
    \ it is important for\n   these issues to be corrected in order to provide robust\
    \ and\n   interoperable network services.\n   Furthermore, this document was motivated\
    \ by a desire to codify\n   existing practice related to the use of the NAI format\
    \ and to\n   encourage widespread use of the format.\n"
- title: 2.  NAI Definition
  contents:
  - '2.  NAI Definition

    '
- title: 2.1.  UTF-8 Syntax and Normalization
  contents:
  - "2.1.  UTF-8 Syntax and Normalization\n   UTF-8 characters can be defined in terms\
    \ of octets using the\n   following ABNF [RFC5234], taken from [RFC3629]:\n  \
    \ UTF8-xtra-char  =   UTF8-2 / UTF8-3 / UTF8-4\n   UTF8-2          =   %xC2-DF\
    \ UTF8-tail\n   UTF8-3          =   %xE0 %xA0-BF UTF8-tail /\n               \
    \        %xE1-EC 2( UTF8-tail ) /\n                       %xED %x80-9F UTF8-tail\
    \ /\n                       %xEE-EF 2( UTF8-tail )\n   UTF8-4          =   %xF0\
    \ %x90-BF 2( UTF8-tail ) /\n                       %xF1-F3 3( UTF8-tail ) /\n\
    \                       %xF4 %x80-8F 2( UTF8-tail )\n   UTF8-tail       =   %x80-BF\n\
    \   These are normatively defined in [RFC3629] but are repeated in this\n   document\
    \ for reasons of convenience.\n   See [RFC5198] and Section 2.6 of this specification\
    \ for a discussion\n   of normalization.  Strings that are not Normal Form Composed\
    \ (NFC)\n   are not valid NAIs and SHOULD NOT be treated as such.\n   Implementations\
    \ that expect to receive an NAI but that instead\n   receive non-normalized (but\
    \ otherwise valid) UTF-8 strings instead\n   SHOULD attempt to create a local\
    \ version of the NAI, which is\n   normalized from the input identifier.  This\
    \ local version can then be\n   used for local processing.  This local version\
    \ of the identifier MUST\n   NOT be used outside of the local context.\n   Where\
    \ protocols carry identifiers that are expected to be transported\n   over a AAA\
    \ protocol, it is RECOMMENDED that the identifiers be in NAI\n   format.  Where\
    \ the identifiers are not in the NAI format, it is up to\n   the AAA systems to\
    \ discover this and to process them.  This document\n   does not suggest how that\
    \ is done.  However, existing practice\n   indicates that it is possible.\n  \
    \ As internationalized domain names become more widely used, existing\n   practices\
    \ are likely to become inadequate.  This document therefore\n   defines the NAI,\
    \ which is a user identifier format that can correctly\n   deal with internationalized\
    \ identifiers.\n"
- title: 2.2.  Formal Syntax
  contents:
  - "2.2.  Formal Syntax\n   The grammar for the NAI is given below, described in\
    \ Augmented\n   Backus-Naur Form (ABNF) as documented in [RFC5234].\n   nai  \
    \          =   utf8-username\n   nai            =/  \"@\" utf8-realm\n   nai \
    \           =/  utf8-username \"@\" utf8-realm\n   utf8-username  =  dot-string\n\
    \   dot-string     = string *(\".\" string)\n   string         = 1*utf8-atext\n\
    \   utf8-atext     =  ALPHA / DIGIT /\n                     \"!\" / \"#\" /\n\
    \                     \"$\" / \"%\" /\n                     \"&\" / \"'\" /\n\
    \                     \"*\" / \"+\" /\n                     \"-\" / \"/\" /\n\
    \                     \"=\" / \"?\" /\n                     \"^\" / \"_\" /\n\
    \                     \"`\" / \"{\" /\n                     \"|\" / \"}\" /\n\
    \                     \"~\" /\n                     UTF8-xtra-char\n   utf8-realm\
    \     =  1*( label \".\" ) label\n   label          =  utf8-rtext *(ldh-str)\n\
    \   ldh-str        =  *( utf8-rtext / \"-\" ) utf8-rtext\n   utf8-rtext     =\
    \  ALPHA / DIGIT / UTF8-xtra-char\n"
- title: 2.3.  NAI Length Considerations
  contents:
  - "2.3.  NAI Length Considerations\n   Devices handling NAIs MUST support an NAI\
    \ length of at least\n   72 octets.  Devices SHOULD support an NAI length of 253\
    \ octets.\n   However, the following implementation issues should be considered:\n\
    \   *  NAI octet length constraints may impose a more severe constraint\n    \
    \  on the number of UTF-8 characters.\n   *  NAIs are often transported in the\
    \ User-Name attribute of the\n      Remote Authentication Dial-In User Service\
    \ (RADIUS) protocol.\n      Unfortunately, [RFC2865], Section 5.1 states that\
    \ \"the ability to\n      handle at least 63 octets is recommended.\"  As a result,\
    \ it may\n      not be possible to transfer NAIs beyond 63 octets through all\n\
    \      devices.  In addition, since only a single User-Name attribute may\n  \
    \    be included in a RADIUS message and the maximum attribute length\n      is\
    \ 253 octets, RADIUS is unable to support NAI lengths beyond\n      253 octets.\n\
    \   *  NAIs can also be transported in the User-Name attribute of\n      Diameter\
    \ [RFC6733], which supports content lengths up to\n      2^24 - 9 octets.  As\
    \ a result, NAIs processed only by Diameter\n      nodes can be very long.  However,\
    \ an NAI transported over Diameter\n      may eventually be translated to RADIUS,\
    \ in which case the above\n      limitations will apply.\n   *  NAIs may be transported\
    \ in other protocols.  Each protocol can\n      have its own limitations on maximum\
    \ NAI length.\n   The above criteria should permit the widest use and widest possible\n\
    \   interoperability of the NAI.\n"
- title: 2.4.  Support for Username Privacy
  contents:
  - "2.4.  Support for Username Privacy\n   Interpretation of the username part of\
    \ the NAI depends on the realm\n   in question.  Therefore, the utf8-username\
    \ portion SHOULD be treated\n   as opaque data when processed by nodes that are\
    \ not a part of the\n   home domain for that realm.\n   That is, the only domain\
    \ that is capable of interpreting the meaning\n   of the utf8-username portion\
    \ of the NAI is the home domain.  Any\n   third-party domains cannot form any\
    \ conclusions about the\n   utf8-username and cannot decode it into subfields.\
    \  For example, it\n   may be used as \"firstname.lastname\", or it may be entirely\
    \ digits, or\n   it may be a random hex identifier.  There is simply no way (and\
    \ no\n   reason) for any other domain to interpret the utf8-username field as\n\
    \   having any meaning whatsoever.\n   In some situations, NAIs are used together\
    \ with a separate\n   authentication method that can transfer the username part\
    \ in a more\n   secure manner to increase privacy.  In this case, NAIs MAY be\n\
    \   provided in an abbreviated form by omitting the username part.\n   Omitting\
    \ the username part is RECOMMENDED over using a fixed username\n   part, such\
    \ as \"anonymous\", since including a fixed username part is\n   ambiguous as\
    \ to whether or not the NAI refers to a single user.\n   However, current practice\
    \ is to use the username \"anonymous\" instead\n   of omitting the username part.\
    \  This behavior is also permitted.\n   The most common use case of omitting or\
    \ obfuscating the username part\n   is with TLS-based EAP methods such as Tunneled\
    \ Transport Layer\n   Security (TTLS) [RFC5281].  Those methods allow for an \"\
    outer\"\n   identifier, which is typically an anonymous \"@realm\".  This outer\n\
    \   identifier allows the authentication request to be routed from a\n   visited\
    \ domain to a home domain.  At the same time, the username part\n   is kept confidential\
    \ from the visited network.  The protocol provides\n   for an \"inner\" authentication\
    \ exchange, in which a full identifier is\n   used to authenticate a user.\n \
    \  That scenario offers the best of both worlds.  An anonymous NAI can\n   be\
    \ used to route authentication to the home domain, and the home\n   domain has\
    \ sufficient information to identify and authenticate users.\n   However, some\
    \ protocols do not support authentication methods that\n   allow for \"inner\"\
    \ and \"outer\" exchanges.  Those protocols are limited\n   to using an identifier\
    \ that is publicly visible.  It is therefore\n   RECOMMENDED that such protocols\
    \ use ephemeral identifiers.  We\n   recognize that this practice is not currently\
    \ used and will likely be\n   difficult to implement.\n   Similar to the anonymous\
    \ user, there may be situations where portions\n   of the realm are sensitive.\
    \  For those situations, it is RECOMMENDED\n   that the sensitive portion of the\
    \ realm also be omitted (e.g., to use\n   \"@example.com\" instead of \"@sensitive.example.com\"\
    , or\n   \"anonymous@sensitive.example.com\").  The home domain is authoritative\n\
    \   for users in all subdomains and can (if necessary) route the\n   authentication\
    \ request to the appropriate subsystem within the home\n   domain.\n   For roaming\
    \ purposes, it is typically necessary to locate the\n   appropriate backend authentication\
    \ server for the given NAI before\n   the authentication conversation can proceed.\
    \  As a result,\n   authentication routing is impossible unless the realm portion\
    \ is\n   available and is in a well-known format.\n"
- title: 2.5.  International Character Sets
  contents:
  - "2.5.  International Character Sets\n   This specification allows both international\
    \ usernames and realms.\n   International usernames are based on the use of Unicode\
    \ characters,\n   encoded as UTF-8.  Internationalization of the username portion\
    \ of\n   the NAI is based on the \"Internationalized Email Headers\" [RFC6532]\n\
    \   extensions to the \"local-part\" portion of email addresses [RFC5322].\n \
    \  In order to ensure a canonical representation, characters of the\n   realm\
    \ portion in an NAI MUST match the ABNF in this specification as\n   well as the\
    \ requirements specified in [RFC5891].  In practice, these\n   requirements consist\
    \ of the following item:\n   *  Realms MUST be of the form that can be registered\
    \ as a Fully\n      Qualified Domain Name (FQDN) within the DNS.\n   This list\
    \ is significantly shorter and simpler than the list in\n   Section 2.4 of [RFC4282].\
    \  The form suggested in [RFC4282] depended\n   on intermediate nodes performing\
    \ canonicalizations based on\n   insufficient information, which meant that the\
    \ form was not\n   canonical.\n   Specifying the realm requirement as above means\
    \ that the requirements\n   depend on specifications that are referenced here,\
    \ rather than copied\n   here.  This allows the realm definition to be updated\
    \ when the\n   referenced documents change, without requiring a revision of this\n\
    \   specification.\n   One caveat on the above recommendation is the issues noted\
    \ in\n   [RFC6912].  That document notes that there are additional\n   restrictions\
    \ around DNS registration that forbid some code points\n   from being valid in\
    \ a DNS U-label.  These restrictions cannot be\n   expressed algorithmically.\n\
    \   For this specification, that caveat means the following:\n   Realms not matching\
    \ the above ABNF are not valid NAIs.  However, some\n   realms that do match the\
    \ ABNF are still invalid NAIs.  That is,\n   matching the ABNF is a necessary,\
    \ but not sufficient, requirement for\n   an NAI.\n   In general, the above requirement\
    \ means following the requirements\n   specified in [RFC5891].\n"
- title: 2.6.  The Normalization Process
  contents:
  - "2.6.  The Normalization Process\n   Conversion to Unicode as well as normalization\
    \ SHOULD be performed by\n   edge systems (e.g., laptops, desktops, smart phones,\
    \ etc.) that take\n   \"local\" text as input.  These edge systems are best suited\
    \ to\n   determine the user's intent and can best convert from \"local\" text\
    \ to\n   a normalized form.\n   Other AAA systems such as proxies do not have\
    \ access to locale and\n   character set information that is available to edge\
    \ systems.\n   Therefore, they may not always be able to convert local input to\n\
    \   Unicode.\n   That is, all processing of NAIs from \"local\" character sets\
    \ and\n   locales to UTF-8 SHOULD be performed by edge systems, prior to the\n\
    \   NAIs entering the AAA system.  Inside of a AAA system, NAIs are sent\n   over\
    \ the wire in their canonical form, and this canonical form is\n   used for all\
    \ NAI and/or realm comparisons.\n   Copying of localized text into fields that\
    \ can subsequently be placed\n   into the RADIUS User-Name attribute is problematic.\
    \  This practice\n   can result in a AAA proxy encountering non-UTF-8 characters\
    \ within\n   what it expects to be an NAI.  An example of this requirement is\n\
    \   Section 2.1 of [RFC3579], which states:\n      the NAS MUST copy the contents\
    \ of the Type-Data field of the\n      EAP-Response/Identity received from the\
    \ peer into the User-Name\n      attribute\n   As a result, AAA proxies expect\
    \ the contents of the\n   EAP-Response/Identity sent by an EAP supplicant to consist\
    \ of UTF-8\n   characters, not localized text.  Using localized text in AAA username\n\
    \   or identity fields means that realm routing becomes difficult or\n   impossible.\n\
    \   In contrast to Section 2.4 of [RFC4282], AAA systems are now expected\n  \
    \ to perform NAI comparisons, matching, and AAA routing based on the\n   NAI as\
    \ it is received.  This specification provides a canonical\n   representation,\
    \ ensures that intermediate AAA systems such as proxies\n   are not required to\
    \ perform translations, and can be expected to work\n   through AAA systems that\
    \ are unaware of international character sets.\n   In an ideal world, the following\
    \ requirements would be widely\n   implemented:\n   *  Edge systems using \"localized\"\
    \ text SHOULD normalize the NAI prior\n      to it being used as an identifier\
    \ in an authentication protocol.\n   *  AAA systems SHOULD NOT normalize the NAI,\
    \ as they may not have\n      sufficient information to perform the normalization.\n\
    \   There are issues with this approach, however.\n"
- title: 2.6.1.  Issues with the Normalization Process
  contents:
  - "2.6.1.  Issues with the Normalization Process\n   The requirements in the preceding\
    \ section are not implemented today.\n   For example, most EAP implementations\
    \ use a user identifier that is\n   passed to them from some other local system.\
    \  This identifier is\n   treated as an opaque blob and is placed as is into the\
    \ EAP Identity\n   field.  Any subsequent system that receives that identifier\
    \ is\n   assumed to be able to understand and process it.\n   This opaque blob\
    \ unfortunately can contain localized text, which\n   means that the AAA systems\
    \ have to process that text.\n   These limitations have the following theoretical\
    \ and practical\n   implications:\n   *  Edge systems used today generally do\
    \ not normalize the NAI.\n   *  Therefore, AAA systems SHOULD attempt to normalize\
    \ the NAI.\n   The suggestions above contradict the suggestions in the previous\n\
    \   section.  This is the reality of imperfect protocols.\n   Where the user identifier\
    \ can be normalized, or determined to be in\n   normal form, the normal form MUST\
    \ be used as the NAI.  In all other\n   circumstances, the user identifier MUST\
    \ NOT be treated as an NAI.\n   That data is still, however, a user identifier.\
    \  AAA systems MUST NOT\n   fail authentication simply because the user identifier\
    \ is not an NAI.\n   That is, when the realm portion of the NAI is not recognized\
    \ by a AAA\n   server, it SHOULD try to normalize the NAI into NFC form.  That\n\
    \   normalized form can then be used to see if the realm matches a known\n   realm.\
    \  If no match is found, the original form of the NAI SHOULD be\n   used in all\
    \ subsequent processing.\n   The AAA server may also convert realms to Punycode\
    \ and perform all\n   realm comparisons on the resulting Punycode strings.  This\
    \ conversion\n   follows the recommendations above but may have different operational\n\
    \   effects and failure modes.\n"
- title: 2.7.  Use in Other Protocols
  contents:
  - "2.7.  Use in Other Protocols\n   As noted earlier, the NAI format can be used\
    \ in other, non-AAA\n   protocols.  It is RECOMMENDED that the definition given\
    \ here be used\n   unchanged.  Using other definitions for user identifiers may\
    \ hinder\n   interoperability, along with the user's ability to authenticate\n\
    \   successfully.  It is RECOMMENDED that protocols requiring the use of\n   a\
    \ user identifier use the NAI format.\n   This document cannot require other protocols\
    \ to use the NAI format\n   for user identifiers.  Their needs are unknown and,\
    \ at this time,\n   unknowable.  This document suggests that interoperability\
    \ and\n   inter-domain authentication are useful and should be encouraged.\n \
    \  Where a protocol is 8-bit clean, it can likely transport the NAI as\n   is,\
    \ without further modification.\n   Where a protocol is not 8-bit clean, it cannot\
    \ transport the NAI as\n   is.  Instead, this document presumes that a protocol-specific\n\
    \   transport layer takes care of encoding the NAI on input to the\n   protocol\
    \ and decoding it when the NAI exits the protocol.  The\n   encoded or escaped\
    \ version of the NAI is not a valid NAI and MUST NOT\n   be presented to the AAA\
    \ system.\n   For example, HTTP carries user identifiers but escapes the '.'\n\
    \   character as \"%2E\" (among others).  When HTTP is used to transport\n   the\
    \ NAI \"fred@example.com\", the data as transported will be in the\n   form \"\
    fred@example%2Ecom\".  That data exists only within HTTP and has\n   no relevance\
    \ to any AAA system.\n   Any comparison, validation, or use of the NAI MUST be\
    \ done on its\n   unescaped (i.e., utf8-clean) form.\n"
- title: 2.8.  Using the NAI Format for Other Identifiers
  contents:
  - "2.8.  Using the NAI Format for Other Identifiers\n   As discussed in Section\
    \ 1, above, it is RECOMMENDED that the NAI\n   format be used as the standard\
    \ format for user identifiers.  This\n   section discusses that use in more detail.\n\
    \   It is often useful to create new identifiers for use in specific\n   contexts.\
    \  These identifiers may have a number of different\n   properties, most of which\
    \ are unimportant to this document.  The\n   goal of this document is to create\
    \ identifiers that are to be in a\n   well-known format and that will have namespaces.\
    \  The NAI format fits\n   these requirements.\n   One example of such use is\
    \ the \"private user identity\", which is an\n   identifier defined by the 3rd\
    \ Generation Partnership Project (3GPP).\n   That identifier is used to uniquely\
    \ identify the user to the network.\n   The identifier is used for authorization,\
    \ authentication, accounting,\n   administration, etc.  The \"private user identity\"\
    \ is globally unique\n   and is defined by the home network operator.  The format\
    \ of the\n   identifier is explicitly the NAI, as stated by Section 13.3 of\n\
    \   [3GPP]:\n      The private user identity shall take the form of an NAI, and\
    \ shall\n      have the form username@realm as specified in clause 2.1 of IETF\n\
    \      RFC 4282\n   For 3GPP, the \"username\" portion is a unique identifier\
    \ that is\n   derived from device-specific information.  The \"realm\" portion\
    \ is\n   composed of information about the home network, followed by the base\n\
    \   string \"3gppnetwork.org\" (e.g.,\n   234150999999999@ims.mnc015.mcc234.3gppnetwork.org).\n\
    \   This format as defined by 3GPP ensures that the identifier is\n   globally\
    \ unique, as it is based on the \"3gppnetwork.org\" domain.  It\n   ensures that\
    \ the \"realm\" portion is specific to a particular home\n   network (or organization),\
    \ via the \"ims.mnc015.mcc234\" prefix to the\n   realm.  Finally, it ensures\
    \ that the \"username\" portion follows a\n   well-known format.\n   This document\
    \ suggests that the NAI format be used for all new\n   specifications and/or protocols\
    \ where a user identifier is required.\n   Where the username portions need to\
    \ be created with subfields, a\n   well-known and documented method, as has been\
    \ done with 3GPP, is\n   preferred to ad hoc methods.\n"
- title: 3.  Routing inside of AAA Systems
  contents:
  - "3.  Routing inside of AAA Systems\n   Many AAA systems use the \"utf8-realm\"\
    \ portion of the NAI to route\n   requests within a AAA proxy network.  The semantics\
    \ of this operation\n   involves a logical AAA routing table, where the \"utf8-realm\"\
    \ portion\n   acts as a key, and the values stored in the table are one or more\n\
    \   \"next hop\" AAA servers.\n   Intermediate nodes MUST use the \"utf8-realm\"\
    \ portion of the NAI\n   without modification to perform this lookup.  As noted\
    \ earlier,\n   intermediate nodes may not have access to the same locale information\n\
    \   as the system that injected the NAI into the AAA routing systems.\n   Therefore,\
    \ almost all \"case insensitive\" comparisons can be wrong.\n   Where the \"utf8-realm\"\
    \ is entirely ASCII, current AAA systems\n   sometimes perform case-insensitive\
    \ matching on realms.  This method\n   MAY be continued, as it has been shown\
    \ to work in practice.\n   Many existing non-AAA systems have user identifiers\
    \ that are similar\n   in format to the NAI but that are not compliant with this\n\
    \   specification.  For example, they may use non-NFC form, or they may\n   have\
    \ multiple \"@\" characters in the user identifier.  Intermediate\n   nodes SHOULD\
    \ normalize non-NFC identifiers to NFC, prior to looking\n   up the \"utf8-realm\"\
    \ in the logical routing table.  Intermediate nodes\n   MUST NOT modify the identifiers\
    \ that they forward.  The data as\n   entered by the user is inviolate.\n   The\
    \ \"utf8-realm\" provisioned in the logical AAA routing table SHOULD\n   be provisioned\
    \ to the proxy prior to it receiving any AAA traffic.\n   The \"utf8-realm\" SHOULD\
    \ be supplied by the \"next hop\" or \"home\"\n   system that also supplies the\
    \ routing information necessary for\n   packets to reach the next hop.\n   This\
    \ \"next hop\" information may be any of, or all of, the following\n   information:\
    \ IP address, port, RADIUS shared secret, TLS certificate,\n   DNS host name,\
    \ or instruction to use dynamic DNS discovery (i.e.,\n   look up a record in the\
    \ \"utf8-realm\" domain).  This list is not\n   exhaustive and may be extended\
    \ by future specifications.\n   It is RECOMMENDED to use the entirety of the \"\
    utf8-realm\" for the\n   routing decisions.  However, AAA systems MAY use a portion\
    \ of the\n   \"utf8-realm\" portion, so long as that portion is a valid \"utf8-realm\"\
    \n   and is handled as above.  For example, routing \"fred@example.com\" to\n\
    \   a \"com\" destination is forbidden, because \"com\" is not a valid\n   \"\
    utf8-realm\".  However, routing \"fred@sales.example.com\" to the\n   \"example.com\"\
    \ destination is permissible.\n   Another reason to forbid the use of a single\
    \ label (e.g.,\n   \"fred@sales\") is that many non-AAA systems treat a single\
    \ label as\n   being a local identifier within their realm.  That is, a user logging\n\
    \   in as \"fred@sales\" to a domain \"example.com\" would be treated as if\n\
    \   the NAI was instead \"fred@sales.example.com\".  Permitting the use of\n \
    \  a single label would mean changing the interpretation and meaning of\n   a\
    \ single label, which cannot be done.\n"
- title: 3.1.  Compatibility with Email Usernames
  contents:
  - "3.1.  Compatibility with Email Usernames\n   As proposed in this document, the\
    \ Network Access Identifier is of the\n   form \"user@realm\".  Please note that\
    \ while the user portion of the\n   NAI is based on the \"Internet Message Format\"\
    \ [RFC5322] \"local-part\"\n   portion of an email address as extended by \"Internationalized\
    \ Email\n   Headers\" [RFC6532], it has been modified for the purposes of\n  \
    \ Section 2.2.  It does not permit quoted text along with \"folding\" or\n   \"\
    non-folding\" whitespace that is commonly used in email addresses.\n   As such,\
    \ the NAI is not necessarily equivalent to usernames used in\n   email.\n   However,\
    \ it is a common practice to use email addresses as user\n   identifiers in AAA\
    \ systems.  The ABNF in Section 2.2 is defined to be\n   close to the \"addr-spec\"\
    \ portion of [RFC5322] as extended by\n   [RFC6532], while still being compatible\
    \ with [RFC4282].\n   In contrast to Section 2.5 of [RFC4282], this document states\
    \ that\n   the internationalization requirements for NAIs and email addresses\n\
    \   are substantially similar.  The NAI and email identifiers may be the\n   same,\
    \ and both need to be entered by the user and/or the operator\n   supplying network\
    \ access to that user.  There is therefore good\n   reason for the internationalization\
    \ requirements to be similar.\n"
- title: 3.2.  Compatibility with DNS
  contents:
  - "3.2.  Compatibility with DNS\n   The \"utf8-realm\" portion of the NAI is intended\
    \ to be compatible with\n   Internationalized Domain Names (IDNs) [RFC5890]. \
    \ As defined above,\n   the \"utf8-realm\" portion as transported within an 8-bit\
    \ clean\n   protocol such as RADIUS and EAP can contain any valid UTF-8\n   character.\
    \  There is therefore no reason for a NAS to convert the\n   \"utf8-realm\" portion\
    \ of an NAI into Punycode encoding form [RFC3492]\n   prior to placing the NAI\
    \ into a RADIUS User-Name attribute.\n   The NAI does not make a distinction between\
    \ A-labels and U-labels, as\n   those are terms specific to DNS.  It is instead\
    \ an IDNA-valid label,\n   as per the first item in Section 2.3.2.1 of [RFC5890].\
    \  As noted in\n   that section, the term \"IDNA-valid label\" encompasses both\
    \ \"A-label\"\n   and \"U-label\".\n   When the realm portion of the NAI is used\
    \ as the basis for name\n   resolution, it may be necessary to convert internationalized\
    \ realm\n   names to Punycode [RFC3492] encoding form as described in [RFC5891].\n\
    \   As noted in Section 2 of [RFC6055], resolver Application Programming\n   Interfaces\
    \ (APIs) are not necessarily DNS specific, so conversion to\n   Punycode needs\
    \ to be done carefully:\n   Applications that convert an IDN to A-label form before\
    \ calling (for\n   example) getaddrinfo() will result in name resolution failures\
    \ if the\n   Punycode name is directly used in such protocols.  Having libraries\n\
    \   or protocols to convert from A-labels to the encoding scheme defined\n   by\
    \ the protocol (e.g., UTF-8) would require changes to APIs and/or\n   servers,\
    \ which Internationalized Domain Names for Applications (IDNA)\n   was intended\
    \ to avoid.\n   As a result, applications SHOULD NOT assume that non-ASCII names\
    \ are\n   resolvable using the public DNS and blindly convert them to A-labels\n\
    \   without knowledge of what protocol will be selected by the name\n   resolution\
    \ library.\n"
- title: 3.3.  Realm Construction
  contents:
  - "3.3.  Realm Construction\n   The home realm usually appears in the \"utf8-realm\"\
    \ portion of the\n   NAI, but in some cases a different realm can be used.  This\
    \ may be\n   useful, for instance, when the home realm is reachable only via\n\
    \   intermediate proxies.\n   Such usage may prevent interoperability unless the\
    \ parties involved\n   have a mutual agreement that the usage is allowed.  In\
    \ particular,\n   NAIs MUST NOT use a different realm than the home realm unless\
    \ the\n   sender has explicit knowledge that (a) the specified other realm is\n\
    \   available and (b) the other realm supports such usage.  The sender\n   may\
    \ determine the fulfillment of these conditions through a database,\n   dynamic\
    \ discovery, or other means not specified here.  Note that the\n   first condition\
    \ is affected by roaming, as the availability of the\n   other realm may depend\
    \ on the user's location or the desired\n   application.\n   The use of the home\
    \ realm MUST be the default unless otherwise\n   configured.\n"
- title: 3.3.1.  Historical Practices
  contents:
  - "3.3.1.  Historical Practices\n   Some AAA systems have historically used NAI\
    \ modifications with\n   multiple \"prefix\" and \"suffix\" decorations to perform\
    \ explicit\n   routing through multiple proxies inside of a AAA network.\n   In\
    \ RADIUS-based environments, the use of decorated NAI is NOT\n   RECOMMENDED for\
    \ the following reasons:\n   *  Using explicit routing paths is fragile and is\
    \ unresponsive to\n      changes in the network due to servers going up or down\
    \ or to\n      changing business relationships.\n   *  There is no RADIUS routing\
    \ protocol, meaning that routing paths\n      have to be communicated \"out of\
    \ band\" to all intermediate AAA\n      nodes, and also to all edge systems (e.g.,\
    \ supplicants) expecting\n      to obtain network access.\n   *  Using explicit\
    \ routing paths requires thousands, if not millions,\n      of edge systems to\
    \ be updated with new path information when a AAA\n      routing path changes.\
    \  This adds huge expense for updates that\n      would be better done at only\
    \ a few AAA systems in the network.\n   *  Manual updates to RADIUS paths are\
    \ expensive, time-consuming, and\n      prone to error.\n   *  Creating compatible\
    \ formats for the NAI is difficult when locally\n      defined \"prefixes\" and\
    \ \"suffixes\" conflict with similar practices\n      elsewhere in the network.\
    \  These conflicts mean that connecting\n      two networks may be impossible\
    \ in some cases, as there is no way\n      for packets to be routed properly in\
    \ a way that meets all\n      requirements at all intermediate proxies.\n   *\
    \  Leveraging the DNS name system for realm names establishes a\n      globally\
    \ unique namespace for realms.\n   In summary, network practices and capabilities\
    \ have changed\n   significantly since NAIs were first overloaded to define AAA\
    \ routes\n   through a network.  While manually managed explicit path routing\
    \ was\n   once useful, the time has come for better methods to be used.\n   Notwithstanding\
    \ the above recommendations, the above practice is\n   widely used for Diameter\
    \ routing [RFC5729].  The routes described\n   there are managed automatically,\
    \ for both credential provisioning and\n   routing updates.  Those routes also\
    \ exist within a particular\n   framework (typically 3G), where membership is\
    \ controlled and system\n   behavior is standardized.  There are no known issues\
    \ with using\n   explicit routing in such an environment.\n   However, if decorated\
    \ identifiers are used, such as:\n      homerealm.example.org!user@otherrealm.example.net\n\
    \   then the part before the (non-escaped) '!' MUST be a \"utf8-realm\" as\n \
    \  defined in the ABNF in Section 2.2.  When receiving such an\n   identifier,\
    \ the \"otherrealm.example.net\" system MUST convert the\n   identifier to \"\
    user@homerealm.example.org\" before forwarding the\n   request.  The forwarding\
    \ system MUST then apply normal AAA routing\n   for the transaction, based on\
    \ the updated identifier.\n"
- title: 3.4.  Examples
  contents:
  - "3.4.  Examples\n   Examples of valid Network Access Identifiers include the following:\n\
    \           bob\n           joe@example.com\n           fred@foo-9.example.com\n\
    \           jack@3rd.depts.example.com\n           fred.smith@example.com\n  \
    \         fred_smith@example.com\n           fred$@example.com\n           fred=?#$&*+-/^smith@example.com\n\
    \           nancy@eng.example.net\n           eng.example.net!nancy@example.net\n\
    \           eng%nancy@example.net\n           @privatecorp.example.net\n     \
    \      \\(user\\)@example.net\n   An additional valid NAI is the following --\
    \ shown here as a\n   hex string, as this document can only contain ASCII characters:\n\
    \           626f 6240 ceb4 cebf ceba ceb9 cebc ceae 2e63 6f6d\n   Examples of\
    \ invalid Network Access Identifiers include the following:\n           fred@example\n\
    \           fred@example_9.com\n           fred@example.net@example.net\n    \
    \       fred.@example.net\n           eng:nancy@example.net\n           eng;nancy@example.net\n\
    \           (user)@example.net\n           <nancy>@example.net\n   One example\
    \ given in [RFC4282] is still permitted by the ABNF, but it\n   is NOT RECOMMENDED\
    \ because of the use of the Punycode [RFC3492]\n   encoding form for what is now\
    \ a valid UTF-8 string:\n           alice@xn--tmonesimerkki-bfbb.example.net\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   Since an NAI reveals the home affiliation of\
    \ a user, it may assist an\n   attacker in further probing the username space.\
    \  Typically, this\n   problem is of most concern in protocols that transmit the\
    \ username in\n   clear-text across the Internet, such as in RADIUS [RFC2865]\n\
    \   [RFC2866].  In order to prevent snooping of the username, protocols\n   may\
    \ use confidentiality services provided by protocols transporting\n   them, such\
    \ as RADIUS protected by IPsec [RFC3579] or Diameter\n   protected by TLS [RFC6733].\n\
    \   This specification adds the possibility of hiding the username part\n   in\
    \ the NAI, by omitting it.  As discussed in Section 2.4, this is\n   possible\
    \ only when NAIs are used together with a separate\n   authentication method that\
    \ can transfer the username in a secure\n   manner.  In some cases, application-specific\
    \ privacy mechanisms have\n   also been used with NAIs.  For instance, some EAP\
    \ methods apply\n   method-specific pseudonyms in the username part of the NAI\
    \ [RFC3748].\n   While neither of these approaches can protect the realm part,\
    \ their\n   advantage over transport protection is that the privacy of the\n \
    \  username is protected, even through intermediate nodes such as NASes.\n"
- title: 4.1.  Correlation of Identities over Time and Protocols
  contents:
  - "4.1.  Correlation of Identities over Time and Protocols\n   The recommendations\
    \ in Sections 2.7 and 2.8 for using the NAI in\n   other protocols have implications\
    \ for privacy.  Any attacker who is\n   capable of observing traffic containing\
    \ the NAI can track the user\n   and can correlate his activity across time and\
    \ across multiple\n   protocols.  The authentication credentials therefore SHOULD\
    \ be\n   transported over channels that permit private communications, or\n  \
    \ multiple identifiers SHOULD be used, so that user tracking is\n   impossible.\n\
    \   It is RECOMMENDED that user privacy be enhanced by configuring\n   multiple\
    \ identifiers for one user.  These identifiers can be changed\n   over time, in\
    \ order to make user tracking more difficult for a\n   malicious observer.  However,\
    \ provisioning and management of the\n   identifiers may be difficult to do in\
    \ practice -- a likely reason why\n   multiple identifiers are rarely used today.\n"
- title: 4.2.  Multiple Identifiers
  contents:
  - "4.2.  Multiple Identifiers\n   Section 1.3 states that multiple identifier formats\
    \ allow attackers\n   to make contradictory claims without being detected.  This\
    \ statement\n   deserves further discussion.\n   Section 2.4 discussed \"inner\"\
    \ and \"outer\" identifiers in the context\n   of TTLS [RFC5281].  A close reading\
    \ of that specification shows there\n   is no requirement that the inner and outer\
    \ identifiers be in any way\n   related.  That is, it is perfectly valid to use\
    \ \"@example.com\" for an\n   outer identifier and \"user@example.org\" as an\
    \ inner identifier.  The\n   authentication request will then be routed to \"\
    example.com\", which\n   will likely be unable to authenticate \"user@example.org\"\
    .\n   Even worse, a misconfiguration of \"example.com\" means that it may in\n\
    \   turn proxy the inner authentication request to the \"example.org\"\n   domain.\
    \  Such cross-domain authentication is highly problematic, and\n   there are few\
    \ good reasons to allow it.\n   It is therefore RECOMMENDED that systems that\
    \ permit anonymous\n   \"outer\" identifiers require that the \"inner\" domain\
    \ be the same as,\n   or a subdomain of, the \"outer\" domain.  An authentication\
    \ request\n   using disparate realms is a security violation, and the request\n\
    \   SHOULD be rejected.\n   The situation gets worse when multiple protocols are\
    \ involved.  The\n   TTLS protocol permits Microsoft CHAP (MS-CHAP) [RFC2433]\
    \ to be\n   carried inside of the TLS tunnel.  MS-CHAP defines its own\n   identifier,\
    \ which is encapsulated inside of the MS-CHAP exchange.\n   That identifier is\
    \ not required to be any particular format, is not\n   required to be in UTF-8,\
    \ and, in practice, can be one of many unknown\n   character sets.  There is no\
    \ way in practice to determine which\n   character set was used for that identifier.\n\
    \   The result is that the \"outer\" EAP Identity carried by TTLS is likely\n\
    \   to not even share the same character set as the \"inner\" identifier\n   used\
    \ by MS-CHAP.  The two identifiers are entirely independent and\n   fundamentally\
    \ incomparable.\n   Such a protocol design is NOT RECOMMENDED.\n"
- title: 5.  Administration of Names
  contents:
  - "5.  Administration of Names\n   In order to avoid creating any new administrative\
    \ procedures,\n   administration of the NAI realm namespace piggybacks on the\n\
    \   administration of the DNS namespace.\n   NAI realm names are required to be\
    \ unique, and the rights to use a\n   given NAI realm for roaming purposes are\
    \ obtained coincident with\n   acquiring the rights to use a particular Fully\
    \ Qualified Domain Name\n   (FQDN).  Those wishing to use an NAI realm name should\
    \ first acquire\n   the rights to use the corresponding FQDN.  Administrators\
    \ MUST NOT\n   publicly use an NAI realm without first owning the corresponding\n\
    \   FQDN.  Private use of unowned NAI realms within an administrative\n   domain\
    \ is allowed, though it is RECOMMENDED that example names be\n   used, such as\
    \ \"example.com\".\n   Note that the use of an FQDN as the realm name does not\
    \ require use\n   of the DNS for location of the authentication server.  While\
    \ Diameter\n   [RFC6733] supports the use of DNS for location of authentication\n\
    \   servers, existing RADIUS implementations typically use proxy\n   configuration\
    \ files in order to locate authentication servers within\n   a domain and perform\
    \ authentication routing.  The implementations\n   described in [RFC2194] did\
    \ not use DNS for location of the\n   authentication server within a domain. \
    \ Similarly, existing\n   implementations have not found a need for dynamic routing\
    \ protocols\n   or propagation of global routing information.  Note also that\
    \ there\n   is no requirement that the NAI represent a valid email address.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n   [RFC3629]\
    \  Yergeau, F., \"UTF-8, a transformation format of\n              ISO 10646\"\
    , STD 63, RFC 3629, November 2003,\n              <http://www.rfc-editor.org/info/rfc3629>.\n\
    \   [RFC5198]  Klensin, J. and M. Padlipsky, \"Unicode Format for Network\n  \
    \            Interchange\", RFC 5198, March 2008,\n              <http://www.rfc-editor.org/info/rfc5198>.\n\
    \   [RFC5234]  Crocker, D., Ed., and P. Overell, \"Augmented BNF for\n       \
    \       Syntax Specifications: ABNF\", STD 68, RFC 5234,\n              January\
    \ 2008, <http://www.rfc-editor.org/info/rfc5234>.\n   [RFC5890]  Klensin, J.,\
    \ \"Internationalized Domain Names for\n              Applications (IDNA): Definitions\
    \ and Document Framework\",\n              RFC 5890, August 2010,\n          \
    \    <http://www.rfc-editor.org/info/rfc5890>.\n   [RFC5891]  Klensin, J., \"\
    Internationalized Domain Names in\n              Applications (IDNA): Protocol\"\
    , RFC 5891, August 2010,\n              <http://www.rfc-editor.org/info/rfc5891>.\n\
    \   [RFC6365]  Hoffman, P. and J. Klensin, \"Terminology Used in\n           \
    \   Internationalization in the IETF\", BCP 166, RFC 6365,\n              September\
    \ 2011, <http://www.rfc-editor.org/info/rfc6365>.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [RFC2194]  Aboba, B., Lu, J., Alsop, J., Ding,\
    \ J., and W. Wang,\n              \"Review of Roaming Implementations\", RFC 2194,\n\
    \              September 1997, <http://www.rfc-editor.org/info/rfc2194>.\n   [RFC2341]\
    \  Valencia, A., Littlewood, M., and T. Kolar, \"Cisco\n              Layer Two\
    \ Forwarding (Protocol) \"L2F\"\", RFC 2341,\n              May 1998, <http://www.rfc-editor.org/info/rfc2341>.\n\
    \   [RFC2433]  Zorn, G. and S. Cobb, \"Microsoft PPP CHAP Extensions\",\n    \
    \          RFC 2433, October 1998,\n              <http://www.rfc-editor.org/info/rfc2433>.\n\
    \   [RFC2637]  Hamzeh, K., Pall, G., Verthein, W., Taarud, J., Little,\n     \
    \         W., and G. Zorn, \"Point-to-Point Tunneling Protocol\n             \
    \ (PPTP)\", RFC 2637, July 1999,\n              <http://www.rfc-editor.org/info/rfc2637>.\n\
    \   [RFC2661]  Townsley, W., Valencia, A., Rubens, A., Pall, G., Zorn,\n     \
    \         G., and B. Palter, \"Layer Two Tunneling Protocol \"L2TP\"\",\n    \
    \          RFC 2661, August 1999,\n              <http://www.rfc-editor.org/info/rfc2661>.\n\
    \   [RFC2865]  Rigney, C., Willens, S., Rubens, A., and W. Simpson,\n        \
    \      \"Remote Authentication Dial In User Service (RADIUS)\",\n            \
    \  RFC 2865, June 2000,\n              <http://www.rfc-editor.org/info/rfc2865>.\n\
    \   [RFC2866]  Rigney, C., \"RADIUS Accounting\", RFC 2866, June 2000,\n     \
    \         <http://www.rfc-editor.org/info/rfc2866>.\n   [RFC3492]  Costello, A.,\
    \ \"Punycode: A Bootstring encoding of Unicode\n              for Internationalized\
    \ Domain Names in Applications\n              (IDNA)\", RFC 3492, March 2003,\n\
    \              <http://www.rfc-editor.org/info/rfc3492>.\n   [RFC3579]  Aboba,\
    \ B. and P. Calhoun, \"RADIUS (Remote Authentication\n              Dial In User\
    \ Service) Support For Extensible\n              Authentication Protocol (EAP)\"\
    , RFC 3579, September 2003,\n              <http://www.rfc-editor.org/info/rfc3579>.\n\
    \   [RFC3748]  Aboba, B., Blunk, L., Vollbrecht, J., Carlson, J., and H.\n   \
    \           Levkowetz, Ed., \"Extensible Authentication Protocol\n           \
    \   (EAP)\", RFC 3748, June 2004,\n              <http://www.rfc-editor.org/info/rfc3748>.\n\
    \   [RFC4282]  Aboba, B., Beadles, M., Arkko, J., and P. Eronen, \"The\n     \
    \         Network Access Identifier\", RFC 4282, December 2005,\n            \
    \  <http://www.rfc-editor.org/info/rfc4282>.\n   [RFC4301]  Kent, S. and K. Seo,\
    \ \"Security Architecture for the\n              Internet Protocol\", RFC 4301,\
    \ December 2005,\n              <http://www.rfc-editor.org/info/rfc4301>.\n  \
    \ [RFC5281]  Funk, P. and S. Blake-Wilson, \"Extensible Authentication\n     \
    \         Protocol Tunneled Transport Layer Security Authenticated\n         \
    \     Protocol Version 0 (EAP-TTLSv0)\", RFC 5281, August 2008,\n            \
    \  <http://www.rfc-editor.org/info/rfc5281>.\n   [RFC5322]  Resnick, P., Ed.,\
    \ \"Internet Message Format\", RFC 5322,\n              October 2008, <http://www.rfc-editor.org/info/rfc5322>.\n\
    \   [RFC5335]  Yang, A., Ed., \"Internationalized Email Headers\",\n         \
    \     RFC 5335, September 2008,\n              <http://www.rfc-editor.org/info/rfc5335>.\n\
    \   [RFC5729]  Korhonen, J., Ed., Jones, M., Morand, L., and T. Tsou,\n      \
    \        \"Clarifications on the Routing of Diameter Requests Based\n        \
    \      on the Username and the Realm\", RFC 5729, December 2009,\n           \
    \   <http://www.rfc-editor.org/info/rfc5729>.\n   [RFC6055]  Thaler, D., Klensin,\
    \ J., and S. Cheshire, \"IAB Thoughts on\n              Encodings for Internationalized\
    \ Domain Names\", RFC 6055,\n              February 2011, <http://www.rfc-editor.org/info/rfc6055>.\n\
    \   [RFC6532]  Yang, A., Steele, S., and N. Freed, \"Internationalized\n     \
    \         Email Headers\", RFC 6532, February 2012,\n              <http://www.rfc-editor.org/info/rfc6532>.\n\
    \   [RFC6733]  Fajardo, V., Ed., Arkko, J., Loughney, J., and G. Zorn,\n     \
    \         Ed., \"Diameter Base Protocol\", RFC 6733, October 2012,\n         \
    \     <http://www.rfc-editor.org/info/rfc6733>.\n   [RFC6912]  Sullivan, A., Thaler,\
    \ D., Klensin, J., and O. Kolkman,\n              \"Principles for Unicode Code\
    \ Point Inclusion in Labels in\n              the DNS\", RFC 6912, April 2013,\n\
    \              <http://www.rfc-editor.org/info/rfc6912>.\n   [EDUROAM]  \"eduroam\
    \ (EDUcation ROAMing)\", <http://eduroam.org>.\n   [3GPP]     3GPP, \"Numbering,\
    \ addressing and Identification\", 3GPP TS\n              23.003, Release 12,\
    \ July 2014,\n              <ftp://ftp.3gpp.org/Specs/archive/23_series/23.003/>.\n"
- title: Appendix A.  Changes from RFC 4282
  contents:
  - "Appendix A.  Changes from RFC 4282\n   This document contains the following updates\
    \ with respect to the\n   previous NAI definition in RFC 4282 [RFC4282]:\n   *\
    \  The formal syntax in Section 2.1 has been updated to forbid\n      non-UTF-8\
    \ characters (e.g., characters with the \"high bit\" set).\n   *  The formal syntax\
    \ in Section 2.1 of [RFC4282] has been updated to\n      allow UTF-8 in the \"\
    realm\" portion of the NAI.\n   *  The formal syntax in Section 2.1 of [RFC4282]\
    \ applied to the NAI\n      after it was \"internationalized\" via the ToAscii\
    \ function.  The\n      contents of the NAI before it was \"internationalized\"\
    \ were left\n      indeterminate.  This document updates the formal syntax to\
    \ define\n      an internationalized form of the NAI and forbids the use of the\n\
    \      ToAscii function for NAI \"internationalization\".\n   *  The grammar for\
    \ the user and realm portion is based on a\n      combination of the \"nai\" defined\
    \ in Section 2.1 of [RFC4282] and\n      the \"utf8-addr-spec\" defined in Section\
    \ 4.4 of [RFC5335].\n   *  All use of the ToAscii function has been moved to normal\n\
    \      requirements on DNS implementations when realms are used as the\n     \
    \ basis for DNS lookups.  This involves no changes to the existing\n      DNS\
    \ infrastructure.\n   *  The discussions on internationalized character sets in\
    \ Section 2.4\n      of [RFC4282] have been updated.  The suggestion to use the\
    \ ToAscii\n      function for realm comparisons has been removed.  No AAA system\n\
    \      has implemented these suggestions, so this change should have no\n    \
    \  operational impact.\n   *  The \"Routing inside of AAA Systems\" section is\
    \ new in this\n      document.  The concept of a \"local AAA routing table\" is\
    \ also new,\n      although it accurately describes the functionality of widespread\n\
    \      implementations.\n   *  The \"Compatibility with EMail Usernames\" and\
    \ \"Compatibility with\n      DNS\" sections have been revised and updated.  The\
    \ Punycode\n      transformation is suggested to be used only when a realm name\
    \ is\n      used for DNS lookups, and even then the function is only used by a\n\
    \      resolving API on the local system, and even then it is recommended\n  \
    \    that only the home network perform this conversion.\n   *  The \"Realm Construction\"\
    \ section has been updated to note that\n      editing of the NAI is NOT RECOMMENDED.\n\
    \   *  The \"Examples\" section has been updated to remove the instance of\n \
    \     the IDN being converted to ASCII.  This behavior is now forbidden.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   The initial text for this document was [RFC4282], which was\
    \ then\n   heavily edited.  The original authors of [RFC4282] were Bernard\n \
    \  Aboba, Mark A. Beadles, Jari Arkko, and Pasi Eronen.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Alan DeKok\n   The FreeRADIUS Server Project\n   EMail:\
    \ aland@freeradius.org\n"
