Job Submission Protocol Mapping Recommendations for the Job Monitoring
MIB Status of this Memo
This memo provides information for the Internet community.
It does not specify an Internet standard of any kind.
Distribution of this memo is unlimited.
This document defines the recommended mapping for many currently popular Job submission protocols to objects and attributes in the Job Monitoring MIB.
2 2.0  LINE PRINTER DAEMON
The Job Monitoring MIB [JobMIB] is intended to be implemented in a device or server that supports any job submission protocol.
However, the information available and the method of presentation varies significantly by job submission protocol.
A common method of mapping job submission information to the Job Monitoring MIB is essential for interoperability of Job MIB agents and monitoring applications.
This document defines recommended mappings for most popular job submission protocols to ensure this compatibility.
All mappings are unidirectional from the job submission protocol to the MIB.
It is assumed that support of the job submission protocol in the printer implies that the reverse information flow is presently defined and does not require interaction from the MIB.
This mapping is not defined in this document as it should be obvious.
This document refers to system configurations that are defined in the Job Monitoring MIB [JobMIB].
For those readers that are familiar with the configuration descriptions, a short summary appears here.
Please see the Job MIB document for further details.
This is a simple peer to peer system which contains only a client and a printer.
The Job MIB agent is resident in the printer.
This system contains a client, server, and a printer.
The Jib MIB agent is resident in the server.
This system, as in configuration 2, contains a client, server, and a printer.
In this case the Job MIB agent is implemented within the printer.
The most important object to be mapped is jmJobSubmissionID, since this is a method for the user or client to determine the jmJobIndex for a submitted job.
Therefore, jmJobSubmissionID is specified for all job submission protocols defined in this document.
The remaining objects mapped include only those items that have the equivalent information presented to the printer by the job submission protocol.
While this document places a strong emphasis on jmJobSubmissionID mapping to obtain jmJobIndex, the preferred method is through the use of a bi directional job submission protocol that returns the equivalent value of jmJobIndex to the client, such as IPP.
When a bi directional protocol that returns jmJobIndex is in use, the jmJobSubmissionID object has no value to the client.
When the jmJobIndex cannot be returned, the use of a client defined jmJobSubmissionID is preferred over an agent derived value.
The client defined version allows for retrieval of jmJobIndex using a single SNMP Get operation, since jmJobSubmissionID is the index into the jmJobIDTable.
An agent derived value will require a search through multiple entries in the jmJobIDTable.
The majority of the protocols mapped in this document are oriented towards network job submission.
However, the Job Monitoring MIB is also intended to monitor print jobs received from other than network ports, such as parallel and serial ports.
Some of the job submission protocols included that are used with non networked ports are PJL, PostScript, and TIP/SI.
In addition, the Job Monitoring MIB can be used with print jobs that are internally generated, such as self test pages.
In this latter case, no mapping is required since all job submission protocols are bypassed.
2.0  LINE PRINTER DAEMON (LPR/LPD) PROTOCOL
The LPR/LPD printing protocol [LPD] is used with BSD UNIX systems in the client server printer configuration.
Usage of the Job Monitoring MIB with LPR/LPD will most likely conform to Configuration 3, where the monitor application or the server uses SNMP to obtain job information from the printer.
The client communicates with the UNIX server using the existing LPD protocol to obtain job information.
The LPR/LPD protocol is also used in the Windows environment to implement peer to peer printing, as shown in configuration 1.
In this case, SNMP is used by the client and/or the monitor application to obtain the job information.
One of the major problems of LPR/LPD is the large number of vendor unique extensions currently used with the protocol and the resulting compatibility issues between available implementations.
To avoid these issues, this mapping of LPR/LPD is restricted to the protocol as defined by RFC 1179.
The LPR/LPD protocol transfers print job data and control information in separate files, known as the Data File and Control File, respectively.
Most of the information concerning the print job is contained in the Control File.
In many LPD implementations, the Control File is transferred following the Data File.
Thus much of the information concerning the job may not be available until the completion of the data transmission.
The LPR/LPD Receive Data File command contains a parameter which defines the name of the data file.
This name field is structured as follows:
Where XXX or XXXX is the numeric job number assigned by the network entity submitting the print job to the printer.
> portion of the name field.
If the <host name> portion is less than 40 octets, the left most character in the string shall appear in octet position 2.
Any unused portion of this field shall be filled with spaces.
Otherwise, only the last 39 bytes shall be included.
octets 41 48:  '00000XXX' or '0000XXXX', where XXX or XXXX is the decimal (ASCII coded)
representation of the LPR/LPD job number.
The job index (jmJobIndex) is assigned by the SNMP job monitoring agent and is independent of the XXX (or XXXX) index assigned by the LPR/LPD client.
This will allow the SNMP agent to track jobs received from multiple sources.
2.3  Other MIB Objects Mapped to LPR/LPD
The Attribute Group Mapped to LPD Other attributes that are applicable, but not defined in this section such as attributes that map to a vendor unique extension, may also be included.
Job Name (notes 1, 2)
The information is optional in the Control File.
The attribute should be included if present in the Control File.
If this optional field is omitted from the control file, then the agent returns the file name (command code   N), if present.
APPLETALK PROTOCOL AppleTalk was originally developed as a peer to peer network protocol, as described in configuration 1, for use with Apple Macintosh computers.
Today, print spoolers are also available for use with Macintosh computer networks that conform to configurations 2/3.
In addition, printing with the AppleTalk protocol is supported from both Windows NT servers and Novell servers also per configurations 2/3.
The AppleTalk protocol provides very little information that can be used with the Job Monitoring MIB.
The Macintosh print drivers are able to provide information concerning the user and document name but imbed this information in the PDL, which is typically PostScript.
The preferred jmJobSubmissionID is constructed from the information in the PostScript file, as defined in section 9.0.
Mapped to AppleTalk An alternative jmJobSubmissionID
may be constructed from the Connection Identifier contained in the AppleTalk Printer Access Protocol (PAP) header.
Since the Connection Id is not readily available in any of the defined AppleTalk implementations, this approach may be of little utility.
Contains the AppleTalk printer name, with the first character of the name in octet 2.
AppleTalk printer names are a maximum of 31 characters.
Any unused portion of this field shall be filled with spaces.
, where 'XXX' is the decimal (ASCII coded)
representation of the Connection Id. 3.2  Other AppleTalk Mappings
No other Job MIB objects or parameters can be derived from information available in the AppleTalk
headers 4.0  INTERNET PRINTING PROTOCOL (IPP)
The Internet Printing Protocol [IPP] supports printing using any one of the three possible configurations.
For configuration 2, the mapping defined herein is performed on an agent within the server.
Otherwise, the mapping is performed on an agent within the printer.
Mapped to IPP IPP contains a rich set of parameters which allow several methods of creating the jmJobSubmissionID object.
To prevent interoperability problems, the preferred method is to use the IPP job uri attribute as follows:
Contains the IPP job uri job description attribute generated by the printer.
(The job uri is returned to the client by IPP.)
If the job uri is less than 40 octets, the left most character in the string shall appear in octet position 2.
Any unused portion of this field shall be filled with spaces.
Otherwise, only the last 39 bytes shall be included.
Contains the decimal (ASCII coded)
Leading zeros shall be inserted to fill the entire 8 octet field.
Since IPP returns the "job identifier" attribute with the jmJobIndex value for a job when the job is submitted, the use of the jmJobSubmissionID table should not be needed by a management application.
The job index (jmJobIndex) assigned by the SNMP job monitoring agent is returned to the client by IPP as the job id job description attribute.
(Since IPP does not require consecutively generated job  ids, the agent may receive jobs from multiple clients and can assign jmJobIndex in an ascending sequence independent of the submitting job client.)
The IPP job id must be restricted to the range of 1 to 99,999,999 (decimal) to allow the value to be properly represented in jmJobSubmissionID.
Other MIB Objects Mapped to IPP
jmJobStateReasons1 is a bit map which can describe up to 31 job state reasons.
Also the IPP "job state reasons" attribute is a multi valued attribute with each value being a keyword.
The IPP condition may change multiple bits in this object.
The IPP "job  state reasons" attribute may also change one or more of the jobStateReasonsN attributes (see section 4.4).
The Attribute Group Mapped to IPP
The following mappings are required if the listed IPP job template attribute is provided.
jobCodedCharSet is an enum from the IANA registry which is also used in the Printer MIB.
The IPP attributes charset is the name (MIME preferred name) of the character set.
The Job MIB sides attribute uses the integer values "1" and "2".
The IPP sides attribute uses three keywords.
jobStateReasonsN are three attributes (N 2, 3, 4).
Also the IPP "job state reasons" attribute is a multi valued attribute with each value being a keyword.
The IPP condition may change multiple bits in one or more of these Job MIB attributes.
See also jmJobStateReasons1 in section 4.3.
The IPP "copies" attribute maps to the Job MIB: (1)
jobCopiesRequested when the job has only one document OR IPP "multiple document handling" is 'single valued' (2) documentCopiesRequested, in which case the MIB value is the total number of document copies that the job will produce as a whole.
5.0  INTELLIGENT PRINTER DATA STREAM (IPDS)
The IPDS datastream facilitates a close relationship between the print supervisor (Print Services Facility PSF) and the printer.
There are PSF applications for UNIX, Windows, OS/2, OS/400 and host operating systems such as VM, MVS and VSE.
Together, PSF and IPDS represent a complete, mature and robust job management framework which includes font and resource management, page progress tracking, job cancellation, complete error recovery and end user notification.
Because PSF and the printer correspond via the use of locally assigned IDs, there is a limited amount of clear text information provided during submission for use by the Job MIB.
jmJobSubmissionId Mapped to IPDS For IPDS on the MVS or VSE platform:
Contains bytes 2 27 of the XOH Define Group Boundary Group ID triplet.
Octet position 2 must carry the value x'01'.
Bytes 28 40 must be filled with spaces.
Contains a decimal (ASCII coded)
representation of the jmJobIndex assigned by the agent.
Leading zeros shall be inserted to fill the entire 8 octet field.
Contains bytes 2 31 of the XOH Define Group Boundary Group ID triplet.
Octet position 2 must carry the value x'02'.
Bytes 32 40 must be filled with spaces.
Contains a decimal (ASCII coded)
representation of the jmJobIndex assigned by the agent.
Leading zeros shall be inserted to fill the entire 8 octet field.
Octet position 2 must carry the value x'03'.
Bytes 37 40 must be filled with spaces.
Contains a decimal (ASCII coded)
representation of the jmJobIndex assigned by the agent.
Leading zeros shall be inserted to fill the entire 8 octet field.
The Attribute Group Mapped to IPDS For MVS/VSE:
XOH DGB Group ID   Data type    jobSourcePlatformType sptMVS(7)
XOH DGB Group ID   Data type    jobSourcePlatformType
XOH DGB Group ID   Data type    jobSourcePlatformType sptOS400(9)
The ISO 10175 Document Printing Application (DPA) [DPA] supports printing using any one of the three possible configurations.
For configuration 2, the mapping defined herein is performed on a server.
Otherwise, the mapping is performed on an agent within the printer.
Mapped to DPA DPA contains a rich set of parameters which allow several methods of creating the jmJobSubmissionID object.
To prevent interoperability problems, the preferred method is to use the DPA job owner attribute as follows:
If the job owner is less than 40 octets, the left most character in the string shall appear in octet position 2.
Any unused portion of this field shall be filled with spaces.
Otherwise, only the last 39 bytes shall be included.
Contains an 8 digit sequential decimal number.
The job index (jmJobIndex) assigned by the SNMP job monitoring agent is returned to the client by DPA as a decimal digit string as the value of the DPA job identifier attribute.
(Since DPA does not require consecutively generated job identifiers, the agent may receive jobs from multiple clients and can assign the jmJobIndex in an ascending sequence independent of the submitting job client.)
The DPA job identifier must be restricted to the range of 1 to 99,999,999 (decimal) to allow the value to be properly represented in jmJobSubmissionID.
Since DPA returns the "job identifier" attribute with the jmJobIndex value for a job when the job is submitted, the use of the jmJobSubmissionID table should not be needed by a management application.
6.3  Other MIB Objects Mapped to DPA
job impression count (note 3)
jmJobKOctetsPerCopyRequested and jmJobKOctetsProcessed is in K octets while the DPA job total octets and job octets completed is in octets and is 63 bits of significance.
jmJobStateReasons1 is a bit map which can describe up to 31 job state reasons.
Also the DPA "job state reasons" attribute is a multi valued attribute with each value being an object identifier (OID).
The DPA condition may change multiple bits in this object.
The DPA condition may also change one or more of the jobStateReasonsN attributes (see section 4.4) 3.
DPA octets include the multiplication factor due to job and document copies, while the MIB values do not.
The Attribute Group Mapped to DPA
The following mappings are required if the listed DPA job attribute is provided.
Every DPA attribute is tagged indicating the coded character set to be used for that attribute.
jobStateReasonsN are three attributes (N 2, 3, 4).
The DPA condition may change one or more of the bits in one or more of these Job MIB items.
Also the DPA job state reasons is a multi  valued attribute with each value being an OBJECT IDENTIFIER (OID).
The Job MIB sides attribute is an integer '1' or '2' while the DPA sides attribute has one of six OID values that includes plex. 4.
printerResolutionRequested has x and y resolution and is intended to override the resolution instruction in the document, if any, while the DPA default printer resolution is the same in x and y and only takes effect if the document does not contain a resolution instruction 5.
The DPA "copy count" attribute is a per document attribute, so the MIB value is the sum of the documents' "copy count" values times the job's "results profile.job copies" value.
The DPA "copies completed" attribute is a per document attribute, so the MIB value is the sum of the documents' "copies completed" values times the job's "results profile.job copies" value.
The DPA GeneratlizedTime data type is defined by ISO 8824
(ISO  8824) while the MIB DateAndTime is defined by SNMPv2 TC (SNMPv2  TC).
7.0  NOVELL DISTRIBUTED PRINT SERVICE (NDPS)
Novell Distributed Print Services is a DPA based job submission protocol that conforms to configuration 3.
Mapped to NDPS NDPS supports the generation of a properly formatted jmJobSubmissionID
for use in the Job MIB, via the attribute ndps  att job identifier.
jmJobIndex Mapped to NDPS NDPS defines the attribute ndps att job identifier on printer that can be used to return the value of jmJobIndex to the NDPS client.
Other MIB Objects Mapped to NDPS
ndps att job impressions count
Some of the NDPS job states must be represented by both a jmJobState and a jmJobStateReasons1 object or a jobStateReasonsN attribute (
The NDPS job state reasons may be mapped to either the object jmJobStateReasons1 or the attribute jobStateReasonsN
jmJobKOctetsPerCopyRequested and jmJobKOctetsProcessed is in K octets while the NDPS ndps att job total octets and ndps att job  octets completed is in octets and is 63 bits of significance.
NDPS octets include the multiplication factor due to job and document copies, while the MIB values do not.
The Job MIB object must be multiplied by the attribute
jobCopiesRequested to obtain the NDPS attribute value, if multiple copies have been requested.
The Attribute Group Mapped to NDPS
The following mappings are required if the listed PJL attribute or command option is provided.
The output bin field in ndps att results profile is to be used.
The Job MIB sides attribute is an integer '1' or '2' while the NDPS sides attribute has one of six OID values that includes plex. 3.
printerResolutionRequested has x and y resolution and is intended to override the resolution instruction in the document, if any, while the ndps att default printer resolution is the same in x and y and only takes effect if the document does not contain a resolution instruction 4.
The job copies field in ndps att results profile is to be used.
The NDPS "copy count" attribute is a per document attribute, so the MIB value is the sum of the documents' "copy count" values times the job's "results profile.job copies" value.
The NDPS "copies completed" attribute is a per document attribute, so the MIB value is the sum of the documents' "copies completed" values times the job's "results profile.job copies" value.
The NDPS GeneratlizedTime data type is defined by ISO 8824
(ISO  8824) while the MIB DateAndTime is defined by SNMPv2 TC (SNMPv2  TC).
8.0  PRINTER JOB LANGUAGE (PJL) PJL [PJL] has been developed by Hewlett Packard to provide job control information to the printer and status information to applications, independent of the PDL.
Mapped to PJL PJL has defined the SUBMISSIONID option for the JOB command which indicates a properly formatted jmJobSubmissionID
for use in the Job MIB.
The PJL JOB command is presented at the start of a print job with options that apply only the attached job.
The syntax for this command option is: @PJL JOB SUBMISSIONID
"id string" Driver software that implements
this PJL command option must provide the "id string" in one of the client version formats specified in the Job MIB for jmJobSubmissionID.
For drivers that are not able to create the SUBMISSIONID option, it is recommended that jmJobSubmissionID format 0 be created by the agent using the PJL attribute DocOwner or DocOwnerId.
Contains the string associated with DocOwner or DocOwnerId.
If the string is less than 40 octets, the left most character in the string shall appear in octet position 2.
Otherwise, only the last 39 bytes shall be included.
Any unused portion of this field shall be filled with spaces.
If DocOwner or DocOwnerId cannot be obtained, this field shall be blank.
Contains the value of jmJobIndex associated with the job.
Leading zeros shall be inserted to fill the entire 8 octet field.
jmJobIndex Mapped to PJL PJL does not provide a value that can be mapped to jmJobIndex.
Other MIB Objects Mapped to PJL
The Attribute Group Mapped to PJL
The following mappings are required if the listed PJL attribute or command option is provided.
DocName attribute or the command
The PostScript PDL permits comment fields which can be used by application drivers to include job information.
Although there are no restrictions or requirements as to what information may be included, many drivers include job owner and/or document name.
The use of a standard format job submission id comment string will allow interoperability of printers and drivers from multiple vendors.
The following comment string format is recommended for use with PostScript level 1 and level 2 data streams.
where "id string" can be any jmJobSubmissionID format reserved for clients.
9.2  Other MIB Objects and Attributes Mapped to PostScript
No Other mappings from PostScript comment strings are recommended, but many Job MIB objects and attributes can be defined using vendor unique comment strings.
The NetWare PServer job submission protocol is implemented in a client  server printer system on the server to printer link as defined in configuration 3.
Contains the Directory Path Name of the agent as recorded by the Novell File Server in the queue directory.
If the string is less than 40 octets, the left most character in the string shall appear in octet position 2.
Otherwise, only the last 39 bytes shall be included.
Any unused portion of this field shall be filled with spaces.
representation of the Job Number as per the NetWare File Server Queue Management Services.
The job index (jmJobIndex) is assigned by the SNMP job monitoring agent and is independent of the Job Number assigned by the NetWare File Server Queue Management Services.
This will allow the SNMP agent to track jobs received from multiple sources.
10.3  Other MIB Objects Mapped to PJL
The Attribute Group Mapped to PServer
The following mappings are required if the listed PServer parameter is provided in the Novell File Server queue directory.
Integer jobProcessAfterDateAndTime   Target Execution Time
The job priority is determined by the priority assigned to the queue that contains the job.
Each queue can be assigned a unique priority and the priority of the job is inherited from the queue.
The NetWare NPrinter/RPrinter protocol was designed to transfer print data from a Novell File Server to a printer attached directly to a local port (e.g. parallel or serial) on a PC.
NPrinter/RPrinter is an extremely lightweight printing protocol.
Consequently, no information required by the Job Monitoring MIB is provided and a meaningful jmJobSubmissionID cannot be generated.
It is recommended that an additional job submission layer, such as PJL or another vendor private protocol,  be included on top of NPrinter/RPrinter to provide the required information.
The mapping should then be performed according to the recommendations of the higher layer submission protocol.
12.0  SERVER MESSAGE BLOCK (SMB) PROTOCOL
The Server Message Block protocol is used with several PC Network operating systems, such as Microsoft Windows for Workgroups, IBM LAN Server, and Artisoft Lantastic.
SMB systems supporting the Job Monitoring MIB will conform to either configuration 1 or 3.
Contains a decimal (ASCII coded)
representation of the 16 bit
SMB Tree Id field, which uniquely identifies the connection that submitted the job to the printer.
The most significant digit of the numeric string shall be placed in octet position 2.
All unused portions of this field shall be filled with spaces.
The SMB Tree Id has a maximum value of 65,535.
Contains a decimal (ASCII coded)
representation of the File Handle returned from the printer agent to the client in response to a Create Print File command.
Leading zeros shall be inserted to fill the entire 8 octet field.
It is strongly recommended that the File Handle returned from the printer agent
If these items are identical, there is no need for the client application to perform a search on jmJobSubmissionID.
To be compatible with the 16 bit field allocated to this value by SMB, the maximum jmJobIndex is 65,535.
12.3  Other MIB objects Mapped to SMB
A decimal (ASCII coded) representation of the SMB User Id numeric shall be presented as jmJobOwner.
13.0  TRANSPORT INDEPENDENT PRINTER/SYSTEM INTERFACE (TIP/SI)
The TIP/SI protocol, although currently specified as a part of the IEEE 1284 parallel port standards [TIP/SI], was originally developed as a network protocol.
TIP/SI thus has the potential of being integrated into any network or non network configuration.
Contains the Job Name from the Job Control
If the Job Name portion is less than 40 octets, the left most character in the string shall appear in octet position 2.
Any unused portion of this field shall be filled with spaces.
Otherwise, only the last 39 bytes shall be included.
Contains a decimal (ASCII coded)
representation of the jmJobIndex assigned by the agent.
Leading zeros shall be inserted to fill the entire 8 octet field.
jmJobIndex Mapped to TIP/SI jmJobIndex is returned to the client as the Printer Assigned Job
Id in a Job Control
To be compatible with the 16 bit field allocated to this value by TIP/SI, the maximum jmJobIndex is 65,535.
The Attribute Group Mapped to TIP
This document provides mapping recommendations of job submission protocols for use with the Job Monitoring MIB.
The mapping procedures defined do not enhance or compromise any security provisions available within the job submission protocols contained within this document.
The security considerations specified for the Job Monitoring MIB [JobMIB] are also unaffected by any of the recommendations in this document.
The security provisions available in the job submission protocols are documented in the appropriate specifications that define the protocols.
The degree of security available varies from very good, for protocols such as the Internet Printing Protocol [IPP], to non  existent, for example the Line Printer Daemon Protocol [LPD].
Since the defined mapping operation occurs as a secondary operation after the user has been authenticated and there is no storage of any authorization credentials other than the user name, no security breaches are anticipated.
Also, the Job MIB does not provide any back door mechanism for access to any other security parameters.
However, implementers must always consider the impact of the defined mapping procedures upon the security model desired from the protocol.
(DPA) Part 1: Abstract service definition and procedures", JTC1/SC18.
[ISO 8824]   ISO/IEC 8824:1990, "Information technology Open Systems Interconnection Specification of Abstract Syntax Notation (ASN.1)".
TC]  McCloghrie, K., Perkins, D. and J. Schoenwaelder, "Textual Conventions for SMIv2", STD 58, RFC 2579, April 1999.
This document was created with significant contributions from the following individuals.
Tapo Canyon Road Simi Valley, CA 93063
578 4421 Fax:  805 578 4001 EMail: rbergman@dpc.com Tom Hastings Xerox Corporation, ESAE 231 701 S. Aviation Blvd.
310 333 5514 EMail: hastings@cp10.es.xerox.com Scott A. Isaacson Novell,
Inc. 122 E 1700 S Provo, UT   84606 Phone: 801 861 7366
801 861 4025 EMail: scott isaacson@novell.com
Harry Lewis IBM Corporation 6300
Diagonal Hwy Boulder, CO 80301
harryl@us.ibm.com Bob Pentecost Hewlett Packard Corporation 11311 Chinden Boulevard Boise,
bpenteco@boi.hp.com Send comments to the printmib WG using the Job Monitoring Project (JMP) Mailing List: jmp@pwg.org
For further information, access the PWG web page under "JMP":
Tektronix Keith Carter IBM Corporation Angelo
Caruso Xerox Jeff Copeland QMS Andy Davidson Tektronix
Mabry Dozier QMS Lee Farrell
Canon David Kellerman Northlake Software Rick Landau Digital Jay Martin Underscore Ira McDonald Xerox Stuart Rowley Kyocera Bob Setterbo Adobe Gail Songer EFI Mike Timperman Lexmark William Wagner DPI/Osicom Chris Wellens
Interworking Labs Rob Whittle Novell Don Wright Lexmark Lloyd Young Lexmark 17.
Full Copyright Statement Copyright (C)
This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works.
However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the Internet Society or other Internet organizations, except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed, or as required to translate it into languages other than English.
The limited permissions granted above are perpetual and will not be revoked by the Internet Society or its successors or assigns.
This document and the information contained herein is provided on an "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIMS
ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT
NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY
Acknowledgement Funding for the RFC Editor function is currently provided by the Internet Society.
