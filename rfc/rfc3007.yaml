- contents:
  - '             Secure Domain Name System (DNS) Dynamic Update

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document proposes a method for performing secure Domain Name\n
    \  System (DNS) dynamic updates.  The method described here is intended\n   to
    be flexible and useful while requiring as few changes to the\n   protocol as possible.
    \ The authentication of the dynamic update\n   message is separate from later
    DNSSEC validation of the data.  Secure\n   communication based on authenticated
    requests and transactions is\n   used to provide authorization.\n   The key words
    \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\",
    \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document
    are to be interpreted as described in RFC 2119 [RFC2119].\n"
  title: Abstract
- contents:
  - "1 - Introduction\n   This document defines a means to secure dynamic updates
    of the Domain\n   Name System (DNS), allowing only authorized sources to make
    changes\n   to a zone's contents.  The existing unsecured dynamic update\n   operations
    form the basis for this work.\n   Familiarity with the DNS system [RFC1034, RFC1035]
    and dynamic update\n   [RFC2136] is helpful and is assumed by this document.  In
    addition,\n   knowledge of DNS security extensions [RFC2535], SIG(0) transaction\n
    \  security [RFC2535, RFC2931], and TSIG transaction security [RFC2845]\n   is
    recommended.\n   This document updates portions of RFC 2535, in particular section\n
    \  3.1.2, and RFC 2136.  This document obsoletes RFC 2137, an alternate\n   proposal
    for secure dynamic update, due to implementation experience.\n"
  - contents:
    - "1.1 - Overview of DNS Dynamic Update\n   DNS dynamic update defines a new DNS
      opcode and a new interpretation\n   of the DNS message if that opcode is used.
      \ An update can specify\n   insertions or deletions of data, along with prerequisites
      necessary\n   for the updates to occur.  All tests and changes for a DNS update\n
      \  request are restricted to a single zone, and are performed at the\n   primary
      server for the zone.  The primary server for a dynamic zone\n   must increment
      the zone SOA serial number when an update occurs or\n   before the next retrieval
      of the SOA.\n"
    title: 1.1 - Overview of DNS Dynamic Update
  - contents:
    - "1.2 - Overview of DNS Transaction Security\n   Exchanges of DNS messages which
      include TSIG [RFC2845] or SIG(0)\n   [RFC2535, RFC2931] records allow two DNS
      entities to authenticate DNS\n   requests and responses sent between them.  A
      TSIG MAC (message\n   authentication code) is derived from a shared secret,
      and a SIG(0) is\n   generated from a private key whose public counterpart is
      stored in\n   DNS.  In both cases, a record containing the message signature/MAC
      is\n   included as the final resource record in a DNS message.  Keyed\n   hashes,
      used in TSIG, are inexpensive to calculate and verify.\n   Public key encryption,
      as used in SIG(0), is more scalable as the\n   public keys are stored in DNS.\n"
    title: 1.2 - Overview of DNS Transaction Security
  - contents:
    - "1.3 - Comparison of data authentication and message authentication\n   Message
      based authentication, using TSIG or SIG(0), provides\n   protection for the
      entire message with a single signing and single\n   verification which, in the
      case of TSIG, is a relatively inexpensive\n   MAC creation and check.  For update
      requests, this signature can\n   establish, based on policy or key negotiation,
      the authority to make\n   the request.\n   DNSSEC SIG records can be used to
      protect the integrity of individual\n   RRs or RRsets in a DNS message with
      the authority of the zone owner.\n   However, this cannot sufficiently protect
      the dynamic update request.\n   Using SIG records to secure RRsets in an update
      request is\n   incompatible with the design of update, as described below, and
      would\n   in any case require multiple expensive public key signatures and\n
      \  verifications.\n   SIG records do not cover the message header, which includes
      record\n   counts.  Therefore, it is possible to maliciously insert or remove\n
      \  RRsets in an update request without causing a verification failure.\n   If
      SIG records were used to protect the prerequisite section, it\n   would be impossible
      to determine whether the SIGs themselves were a\n   prerequisite or simply used
      for validation.\n   In the update section of an update request, signing requests
      to add\n   an RRset is straightforward, and this signature could be permanently\n
      \  used to protect the data, as specified in [RFC2535].  However, if an\n   RRset
      is deleted, there is no data for a SIG to cover.\n"
    title: 1.3 - Comparison of data authentication and message authentication
  - contents:
    - "1.4 - Data and message signatures\n   As specified in [RFC3008], the DNSSEC
      validation process performed by\n   a resolver MUST NOT process any non-zone
      keys unless local policy\n   dictates otherwise.  When performing secure dynamic
      update, all zone\n   data modified in a signed zone MUST be signed by a relevant
      zone key.\n   This completely disassociates authentication of an update request\n
      \  from authentication of the data itself.\n   The primary usefulness of host
      and user keys, with respect to DNSSEC,\n   is to authenticate messages, including
      dynamic updates.  Thus, host\n   and user keys MAY be used to generate SIG(0)
      records to authenticate\n   updates and MAY be used in the TKEY [RFC2930] process
      to generate\n   TSIG shared secrets.  In both cases, no SIG records generated
      by\n   non-zone keys will be used in a DNSSEC validation process unless\n   local
      policy dictates.\n   Authentication of data, once it is present in DNS, only
      involves\n   DNSSEC zone keys and signatures generated by them.\n"
    title: 1.4 - Data and message signatures
  - contents:
    - "1.5 - Signatory strength\n   [RFC2535, section 3.1.2] defines the signatory
      field of a key as the\n   final 4 bits of the flags field, but does not define
      its value.  This\n   proposal leaves this field undefined.  Updating [RFC2535],
      this field\n   SHOULD be set to 0 in KEY records, and MUST be ignored.\n"
    title: 1.5 - Signatory strength
  title: 1 - Introduction
- contents:
  - "2 - Authentication\n   TSIG or SIG(0) records MUST be included in all secure
    dynamic update\n   messages.  This allows the server to verifiably determine the\n
    \  originator of a message.  If the message contains authentication in\n   the
    form of a SIG(0), the identity of the sender (that is, the\n   principal) is the
    owner of the KEY RR that generated the SIG(0).  If\n   the message contains a
    TSIG generated by a statically configured\n   shared secret, the principal is
    the same as or derived from the\n   shared secret name.  If the message contains
    a TSIG generated by a\n   dynamically configured shared secret, the principal
    is the same as\n   the one that authenticated the TKEY process; if the TKEY process
    was\n   unauthenticated, no information is known about the principal, and the\n
    \  associated TSIG shared secret MUST NOT be used for secure dynamic\n   update.\n
    \  SIG(0) signatures SHOULD NOT be generated by zone keys, since\n   transactions
    are initiated by a host or user, not a zone.\n   DNSSEC SIG records (other than
    SIG(0)) MAY be included in an update\n   message, but MUST NOT be used to authenticate
    the update request.\n   If an update fails because it is signed with an unauthorized
    key, the\n   server MUST indicate failure by returning a message with RCODE\n
    \  REFUSED.  Other TSIG, SIG(0), or dynamic update errors are returned\n   as
    specified in the appropriate protocol description.\n"
  title: 2 - Authentication
- contents:
  - "3 - Policy\n   All policy is configured by the zone administrator and enforced
    by\n   the zone's primary name server.  Policy dictates the authorized\n   actions
    that an authenticated principal can take.  Policy checks are\n   based on the
    principal and the desired action, where the principal is\n   derived from the
    message signing key and applied to dynamic update\n   messages signed with that
    key.\n   The server's policy defines criteria which determine if the key used\n
    \  to sign the update is permitted to perform the requested updates.  By\n   default,
    a principal MUST NOT be permitted to make any changes to\n   zone data; any permissions
    MUST be enabled though configuration.\n   The policy is fully implemented in the
    primary zone server's\n   configuration for several reasons.  This removes limitations
    imposed\n   by encoding policy into a fixed number of bits (such as the KEY RR's\n
    \  signatory field).  Policy is only relevant in the server applying it,\n   so
    there is no reason to expose it.  Finally, a change in policy or a\n   new type
    of policy should not affect the DNS protocol or data format,\n   and should not
    cause interoperability failures.\n"
  - contents:
    - "3.1 - Standard policies\n   Implementations SHOULD allow access control policies
      to use the\n   principal as an authorization token, and MAY also allow policies
      to\n   grant permission to a signed message regardless of principal.\n   A common
      practice would be to restrict the permissions of a principal\n   by domain name.
      \ That is, a principal could be permitted to add,\n   delete, or modify entries
      corresponding to one or more domain names.\n   Implementations SHOULD allow
      per-name access control, and SHOULD\n   provide a concise representation of
      the principal's own name, its\n   subdomains, and all names in the zone.\n   Additionally,
      a server SHOULD allow restricting updates by RR type,\n   so that a principal
      could add, delete, or modify specific record\n   types at certain names.  Implementations
      SHOULD allow per-type access\n   control, and SHOULD provide concise representations
      of all types and\n   all \"user\" types, where a user type is defined as one
      that does not\n   affect the operation of DNS itself.\n"
    - contents:
      - "3.1.1 - User types\n   User types include all data types except SOA, NS,
        SIG, and NXT.  SOA\n   and NS records SHOULD NOT be modified by normal users,
        since these\n   types create or modify delegation points.  The addition of
        SIG\n   records can lead to attacks resulting in additional workload for\n
        \  resolvers, and the deletion of SIG records could lead to extra work\n   for
        the server if the zone SIG was deleted.  Note that these records\n   are not
        forbidden, but not recommended for normal users.\n   NXT records MUST NOT
        be created, modified, or deleted by dynamic\n   update, as their update may
        cause instability in the protocol.  This\n   is an update to RFC 2136.\n   Issues
        concerning updates of KEY records are discussed in the\n   Security Considerations
        section.\n"
      title: 3.1.1 - User types
    title: 3.1 - Standard policies
  - contents:
    - "3.2 - Additional policies\n   Users are free to implement any policies.  Policies
      may be as\n   specific or general as desired, and as complex as desired.  They
      may\n   depend on the principal or any other characteristics of the signed\n
      \  message.\n"
    title: 3.2 - Additional policies
  title: 3 - Policy
- contents:
  - "4 - Interaction with DNSSEC\n   Although this protocol does not change the way
    updates to secure\n   zones are processed, there are a number of issues that should
    be\n   clarified.\n"
  - contents:
    - "4.1 - Adding SIGs\n   An authorized update request MAY include SIG records
      with each RRset.\n   Since SIG records (except SIG(0) records) MUST NOT be used
      for\n   authentication of the update message, they are not required.\n   If
      a principal is authorized to update SIG records and there are SIG\n   records
      in the update, the SIG records are added without\n   verification.  The server
      MAY examine SIG records and drop SIGs with\n   a temporal validity period in
      the past.\n"
    title: 4.1 - Adding SIGs
  - contents:
    - "4.2 - Deleting SIGs\n   If a principal is authorized to update SIG records
      and the update\n   specifies the deletion of SIG records, the server MAY choose
      to\n   override the authority and refuse the update.  For example, the\n   server
      may allow all SIG records not generated by a zone key to be\n   deleted.\n"
    title: 4.2 - Deleting SIGs
  - contents:
    - "4.3 - Non-explicit updates to SIGs\n   If the updated zone is secured, the
      RRset affected by an update\n   operation MUST, at the completion of the update,
      be signed in\n   accordance with the zone's signing policy.  This will usually
      require\n   one or more SIG records to be generated by one or more zone keys\n
      \  whose private components MUST be online [RFC3008].\n   When the contents
      of an RRset are updated, the server MAY delete all\n   associated SIG records,
      since they will no longer be valid.\n"
    title: 4.3 - Non-explicit updates to SIGs
  - contents:
    - "4.4 - Effects on the zone\n   If any changes are made, the server MUST, if
      necessary, generate a\n   new SOA record and new NXT records, and sign these
      with the\n   appropriate zone keys.  Changes to NXT records by secure dynamic\n
      \  update are explicitly forbidden.  SOA updates are allowed, since the\n   maintenance
      of SOA parameters is outside of the scope of the DNS\n   protocol.\n"
    title: 4.4 - Effects on the zone
  title: 4 - Interaction with DNSSEC
- contents:
  - "5 - Security Considerations\n   This document requires that a zone key and possibly
    other\n   cryptographic secret material be held in an on-line, network-\n   connected
    host, most likely a name server.  This material is at the\n   mercy of host security
    to remain a secret.  Exposing this secret puts\n   DNS data at risk of masquerade
    attacks.  The data at risk is that in\n   both zones served by the machine and
    delegated from this machine.\n   Allowing updates of KEY records may lead to undesirable
    results,\n   since a principal may be allowed to insert a public key without\n
    \  holding the private key, and possibly masquerade as the key owner.\n"
  title: 5 - Security Considerations
- contents:
  - "6 - Acknowledgements\n   The author would like to thank the following people
    for review and\n   informative comments (in alphabetical order):\n   Harald Alvestrand\n
    \  Donald Eastlake\n   Olafur Gudmundsson\n   Andreas Gustafsson\n   Bob Halley\n
    \  Stuart Kwan\n   Ed Lewis\n"
  title: 6 - Acknowledgements
- contents:
  - "7 - References\n   [RFC1034]  Mockapetris, P., \"Domain Names - Concepts and
    Facilities\",\n              STD 13, RFC 1034, November 1987.\n   [RFC1035]  Mockapetris,
    P., \"Domain Names - Implementation and\n              Specification\", STD 13,
    RFC 1035, November 1987.\n   [RFC2136]  Vixie (Ed.), P., Thomson, S., Rekhter,
    Y. and J. Bound,\n              \"Dynamic Updates in the Domain Name System\",
    RFC 2136,\n              April 1997.\n   [RFC2137]  Eastlake, D., \"Secure Domain
    Name System Dynamic Update\",\n              RFC 2137, April 1997.\n   [RFC2535]
    \ Eastlake, G., \"Domain Name System Security Extensions\",\n              RFC
    2535, March 1999.\n   [RFC2845]  Vixie, P., Gudmundsson, O., Eastlake, D. and
    B.\n              Wellington, \"Secret Key Transaction Signatures for DNS\n              (TSIG)\",
    RFC 2845, May 2000.\n   [RFC2930]  Eastlake, D., \"Secret Key Establishment for
    DNS (TKEY\n              RR)\", RFC 2930, September 2000.\n   [RFC2931]  Eastlake,
    D., \"DNS Request and Transaction Signatures\n              (SIG(0)s)\", RFC 2931,
    September 2000.\n   [RFC3008]  Wellington, B., \"Domain Name System Security (DNSSEC)\n
    \             Signing Authority\", RFC 3008, November 2000.\n"
  title: 7 - References
- contents:
  - "8 - Author's Address\n   Brian Wellington\n   Nominum, Inc.\n   950 Charter Street\n
    \  Redwood City, CA 94063\n   Phone: +1 650 381 6022\n   EMail: Brian.Wellington@nominum.com\n"
  title: 8 - Author's Address
- contents:
  - "9.  Full Copyright Statement\n   Copyright (C) The Internet Society (2000).  All
    Rights Reserved.\n   This document and translations of it may be copied and furnished
    to\n   others, and derivative works that comment on or otherwise explain it\n
    \  or assist in its implementation may be prepared, copied, published\n   and
    distributed, in whole or in part, without restriction of any\n   kind, provided
    that the above copyright notice and this paragraph are\n   included on all such
    copies and derivative works.  However, this\n   document itself may not be modified
    in any way, such as by removing\n   the copyright notice or references to the
    Internet Society or other\n   Internet organizations, except as needed for the
    purpose of\n   developing Internet standards in which case the procedures for\n
    \  copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: 9.  Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
