Abstract This document defines a portion of the Management Information Base (MIB) for use with network management protocols in the Internet community.
In particular, this specifies objects for managing virtual machines controlled by a hypervisor (a.k.a. virtual machine monitor).
This document defines a portion of the Management Information Base (MIB) for use with network management protocols in the Internet community.
In particular, this specifies objects for managing virtual machines controlled by a hypervisor (a.k.a. virtual machine monitor).
A hypervisor controls multiple virtual machines on a single physical machine by allocating resources to each virtual machine using virtualization technologies.
Therefore, this MIB module contains information on virtual machines and their resources controlled by a hypervisor as well as information about a hypervisor's hardware and software.
The design of this MIB module has been derived from product specific MIB modules   namely, a MIB module for managing guests of the Xen hypervisor [Xen], a MIB module for managing virtual machines controlled by the VMware hypervisor [VMware], and a MIB module using the libvirt programming interface [libvirt] to access different hypervisors.
However, this MIB module attempts to generalize the managed objects to support other implementations of hypervisors.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119
The Internet Standard Management Framework
For a detailed overview of the documents that describe the current Internet Standard Management Framework, please refer to section 7 of RFC 3410 [RFC3410].
Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
MIB objects are generally accessed through the Simple Network Management Protocol (SNMP).
Objects in the MIB are defined using the mechanisms defined in the Structure of Management Information (SMI).
This memo specifies a MIB module that is compliant to the SMIv2, which is described in STD 58, RFC 2578 [RFC2578], STD 58
, RFC 2579 [RFC2579] and STD 58, RFC 2580
This document defines a portion of MIB for the management of virtual machines controlled by a hypervisor.
This MIB module consists of the managed objects related to system and software information of a hypervisor, the list of virtual machines controlled by the hypervisor, and information of virtual resources allocated to virtual machines by the hypervisor.
This document specifies four specific types of virtual resources that are common to many hypervisor implementations: processors (CPUs), memory, network interfaces (NICs), and storage devices.
These managed objects are independent of the families of hypervisors or operating systems running on virtual machines.
An Example of a Virtualization Environment On the common implementations of hypervisors, a hypervisor allocates virtual resources from physical resources: virtual CPUs, virtual memory, virtual storage devices, and virtual network interfaces to virtual machines as shown in Figure 1.
Since the virtual resources allocated to virtual machines are managed by the hypervisor, the MIB objects are managed at the hypervisor.
In case that the objects are accessed through the SNMP, an SNMP agent is launched at the hypervisor to provide access to the objects.
The objects are managed from the viewpoint of the operators of hypervisors, but not the operators of virtual machines; that is, the objects do not take into account the actual resource utilization on each virtual machine but rather the resource allocation from the physical resources.
For example, vmNetworkIfIndex indicates the virtual interface associated with an interface of a virtual machine at the hypervisor, and consequently, the 'in' and 'out' directions denote 'from a virtual machine to the hypervisor' and 'from the hypervisor to a virtual machine', respectively.
Moreover, vmStorageAllocatedSize denotes the size allocated by the hypervisor, but not the size actually used by the operating system on the virtual machine.
This means that vmStorageDefinedSize and vmStorageAllocatedSize do not take different values when the vmStorageSourceType is 'block' or 'raw'.
The objectives of this document are the following: 1) this document defines the MIB objects common to many hypervisors for the management of virtual machines controlled by a hypervisor, and 2) this document clarifies the relationship with other MIB modules for managing host computers and network devices.
Structure of the VM MIB Module
The MIB module is organized into a group of scalars and tables.
The scalars below 'vmHypervisor' provide basic information about the hypervisor.
The 'vmTable' lists the virtual machines (guests) that are known to the hypervisor.
The 'vmCpuTable' provides the mapping table of virtual CPUs to virtual machines, including CPU time used by each virtual CPU.
The 'vmCpuAffinityTable' provides the affinity of each virtual CPU to a physical CPU.
The 'vmStorageTable' provides the list of virtual storage devices and their mapping to virtual machines.
In case that an entry in the 'vmStorageTable' has a corresponding parent physical storage device managed in 'vmStorageTable' of HOST RESOURCES MIB [RFC2790], the entry contains a pointer 'vmStorageParent' to the physical storage device.
The 'vmNetworkTable' provides the list of virtual network interfaces and their mapping to virtual machines.
Each entry in the 'vmNetworkTable' also provides a pointer 'vmNetworkIfIndex' to the corresponding entry in the 'ifTable' of IF MIB
In case that an entry in the 'vmNetworkTable' has a corresponding parent physical network interface managed in the 'ifTable' of IF MIB, the entry contains a pointer 'vmNetworkParent' to the physical network interface.
State Transition of a Virtual Machine
The 'vmAdminState' and 'vmOperState' textual conventions define an administrative state and an operational state model for virtual machines.
Events causing transitions between major operational states will cause the generation of notifications.
virtual machine (per VM) notifications (vmRunning, vmShutdown, vmPaused, vmSuspended, vmCrashed, vmDeleted) are generated if vmPerVMNotificationsEnabled is true(1).
Bulk notifications (vmBulkRunning, vmBulkShutdown, vmBulkPaused, vmBulkSuspended, vmBulkCrashed, vmBulkDeleted) are generated if vmBulkNotificationsEnabled is true(1).
The overview of the transition of 'vmOperState' by the write access to 'vmAdminState' and the notifications generated by the operational state changes are illustrated in Figure 2.
The detailed state transition is summarized in Appendix A.  Note that the notifications shown in this figure are per VM notifications.
In the case of Bulk notifications, the prefix 'vm' is replaced with 'vmBulk'.
The bulk notification mechanism is designed to reduce the number of notifications that are trapped by an SNMP manager.
This is because the number of virtual machines managed by a bunch of hypervisors in a data center possibly becomes several thousands or more, and consequently, many notifications could be trapped if these virtual machines frequently change their administrative state.
The per VM notifications carry more detailed information, but the scalability is a problem.
The notification filtering mechanism described in Section 6 of RFC 3413
[RFC3413] is used by the management applications to control the notifications.
Relationship to Other MIB Modules
The HOST RESOURCES MIB [RFC2790] defines the MIB objects for managing host systems.
On systems implementing the HOST RESOURCES MIB, the objects of HOST RESOURCES MIB indicate resources of a hypervisor.
Some objects of HOST RESOURCES MIB are used to indicate physical resources through indexes.
On systems implementing HOST RESOURCES MIB, the 'vmCpuPhysIndex' points to the processor's 'hrDeviceIndex' in the 'hrProcessorTable'.
The 'vmStorageParent' also points to the storage device's 'hrStorageIndex
The IF MIB [RFC2863] defines the MIB objects for managing network interfaces.
Both physical and virtual network interfaces are required to be contained in the 'ifTable' of IF MIB.
The virtual network interfaces in the 'ifTable' of IF MIB are pointed from the 'vmNetworkTable' defined in this document through a pointer 'vmNetworkIfIndex'.
In case that an entry in the 'vmNetworkTable' has a corresponding parent physical network interface managed in the 'ifTable' of IF MIB, the entry contains a pointer 'vmNetworkParent' to the physical network interface.
The objects related to virtual switches are not included in the MIB module defined in this document though virtual switches MAY be placed on a hypervisor.
This is because the virtual network interfaces are the lowest abstraction of network resources allocated to a virtual machine.
Instead of including the objects related to virtual switches, for example, IEEE8021 BRIDGE MIB [IEEE8021 BRIDGE MIB] and IEEE8021
MIB [IEEE8021 Q BRIDGE MIB] could be used.
The other objects related to virtual machines such as management IP addresses of a virtual machine are not included in this MIB module because this MIB module defines the objects common to general hypervisors, but they are specific to some hypervisors.
They may be included in the entLogicalTable of ENTITY MIB [RFC6933].
The SNMPv2 MIB [RFC3418] provides an object 'sysObjectID' that identifies the network management subsytem and an object '
sysUpTime' that reports the uptime of the network management portion of the system.
The HOST RESOURCES MIB [RFC2790] provides an object 'hrSystemUptime' that reports the uptime of the host's operating system.
To complement these objects, the new 'vmHvUpTime' object reports the time since the hypervisor was last re initialized, and the new 'vmHvObjectID' provides an identification of the hypervisor software.
VM MIB VM MIB DEFINITIONS ::
IMPORTS MODULE IDENTITY, OBJECT TYPE, NOTIFICATION TYPE, TimeTicks, Counter64,
SNMPv2 SMI OBJECT GROUP, MODULE COMPLIANCE, NOTIFICATION GROUP FROM SNMPv2 CONF TEXTUAL CONVENTION, PhysAddress, TruthValue FROM SNMPv2 TC
SnmpAdminString FROM SNMP FRAMEWORK MIB UUIDorZero FROM UUID TC
FROM IF MIB IANAStorageMediaType FROM IANA STORAGE MEDIA TYPE MIB; vmMIB
MODULE IDENTITY LAST UPDATED "201510120000Z"
12 October 2015 ORGANIZATION "IETF Operations and Management Area Working Group
The University of Tokyo 7 3 1 Hongo Bunkyo ku,
Tokyo  113 8656 Japan Phone:  81 3 5841
Michael MacFaden VMware Inc. Email:
mrm@vmware.com Juergen Schoenwaelder Jacobs University Campus Ring 1 Bremen 28759
j.schoenwaelder@jacobs university.de Keiichi Shima IIJ Innovation Institute Inc. 3 13 Kanda Nishikicho Chiyoda ku,
Central Expressway Santa Clara, CA 95050
This MIB module is for use in managing a hypervisor and virtual machines controlled by the hypervisor.
Copyright (c) 2015 IETF Trust and the persons identified as authors of the code.
Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license info)." REVISION "201510120000Z"
12 October 2015 DESCRIPTION "
The initial version of this MIB, published as RFC 7666."
A unique value, greater than zero, identifying a virtual machine.
The value for each virtual machine MUST remain constant at least from one re initialization of the hypervisor to the next re initialization."
"This textual convention is an extension of the VirtualMachineIndex convention.
This extension permits the additional value of zero.
The meaning of the value zero is object specific and MUST therefore be defined as part of the description of any object that uses this syntax.
Examples of the usage of zero might include situations where a virtual machine is unknown, or when none or all virtual machines need to be referenced."
The administrative state of a virtual machine:
The administrative state of the virtual machine indicating the virtual machine is currently online or should be brought online.
The administrative state of the virtual machine where its memory and CPU execution state has been saved to persistent store and will be restored at next running(1).
The administrative state indicating the virtual machine is resident in memory but is no longer scheduled to execute by the hypervisor.
The administrative state of the virtual machine indicating the virtual machine is currently offline or should be shutting down."
The operational state of a virtual machine
The operational state of the virtual machine indicating that an operational state is obtained from the hypervisor, but it is not a state defined in this MIB module.
The operational state of the virtual machine indicating the virtual machine is currently in the process of preparation, e.g., allocating and initializing virtual storage after creating (defining) the virtual machine.
The operational state of the virtual machine indicating the virtual machine is currently executed, but it is not in the process of preparing(3), suspending(5),
The operational state of the virtual machine indicating the virtual machine is currently in the process of suspending to save its memory and CPU execution state to persistent store.
This is a transient state from running(4) to suspended(6).
The operational state of the virtual machine indicating the virtual machine is currently suspended, which means the memory and CPU execution state of the virtual machine are saved to persistent store.
During this state, the virtual machine is not scheduled to execute by the hypervisor.
The operational state of the virtual machine indicating the virtual machine is currently in the process of resuming to restore its memory and CPU execution state from persistent store.
This is a transient state from suspended(6) to running(4).
The operational state of the virtual machine indicating the virtual machine is resident in memory but no longer scheduled to execute by the hypervisor.
The operational state of the virtual machine indicating the virtual machine is currently in the process of migration from/to another hypervisor.
The operational state of the virtual machine indicating the virtual machine is currently in the process of shutting down.
This is a transient state from running(4) to shutdown(11).
The operational state of the virtual machine indicating the virtual machine is down, and CPU execution is no longer scheduled by the hypervisor and its memory is not resident in the hypervisor.
The operational state of the virtual machine indicating the virtual machine has crashed."
The autostart configuration of a virtual machine: unknown(1)
The autostart configuration is unknown, e.g., because the implementation failed to obtain the autostart configuration from the hypervisor.
The virtual machine should be automatically brought online at the next re initialization of the hypervisor.
The autostart configuration of the virtual machine is disabled.
The virtual machine should not be automatically brought online at the next re initialization of the hypervisor.
"This value indicates whether a virtual machine has a persistent configuration, which means the virtual machine will still exist after shutting down:
The virtual machine is persistent, i.e., the virtual machine will exist after it shuts down.
The virtual machine is transient, i.e., the virtual machine will not exist after it shuts down."
A unique value for each virtual machine, greater than zero, identifying a virtual CPU assigned to a virtual machine.
The value for each virtual CPU MUST remain constant at least from one re initialization of the hypervisor to the next re initialization."
A unique value for each virtual machine, greater than zero, identifying a virtual storage device allocated to a virtual machine.
The value for each virtual storage device MUST remain constant at least from one re initialization of the hypervisor to the next re initialization."
The source type is other than those defined in this conversion.
The source type is a block device.
The source type is a raw formatted file.
The source type is a sparse file.
The source type is a network device."
The access permission of a virtual storage: unknown(1)
The access permission of the virtual storage is unknown.
The virtual storage is a read write device.
The virtual storage is a read only device."
A unique value for each virtual machine, greater than zero, identifying a virtual network interface allocated to the virtual machine.
The value for each virtual network interface MUST remain constant at least from one re initialization of the hypervisor to the next re initialization."
Each octet within this value specifies a set of eight virtual machine vmIndex values, with the first octet specifying virtual machine 1 through 8, the second octet specifying virtual machine 9 through 16, etc.
Within each octet, the most significant bit represents the lowest numbered vmIndex, and the least significant bit represents the highest numbered vmIndex.
Thus, each virtual machine of the host is represented by a single bit within the value of this object.
If that bit has a value of '1', then that virtual machine is included in the set of virtual machines; the virtual machine is not included if its bit has a value of '0'.
{ vmObjects 1 } vmHvSoftware OBJECT
"A textual description of the hypervisor software.
This value SHOULD NOT include its version as it SHOULD be included in 'vmHvVersion'."
"A textual description of the version of the hypervisor software."
"The vendor's authoritative identification of the hypervisor software contained in the entity.
This value is allocated within the SMI enterprises subtree (1.3.6.1.4.1).
Note that this is different from sysObjectID in the SNMPv2 MIB (RFC 3418) because sysObjectID is not the identification of the hypervisor software but the device, firmware, or management operating system."
{ vmHypervisor 3 } vmHvUpTime OBJECT TYPE SYNTAX
The time (in centiseconds) since the hypervisor was last re initialized.
Note that this is different from sysUpTime
in the SNMPv2 MIB (RFC 3418) and hrSystemUptime in the HOST RESOURCES MIB (RFC 2790) because sysUpTime is the uptime of the network management portion of the system, and hrSystemUptime is the uptime of the management operating system but not the hypervisor software."
"The number of virtual machines (regardless of their current state) present on this hypervisor."
The value of vmHvUpTime at the time of the last creation or deletion of an entry in the vmTable."
"A list of virtual machine entries.
The number of entries is given by the value of vmNumber."
{ vmObjects 4 } vmEntry OBJECT TYPE SYNTAX
} vmIndex OBJECT TYPE SYNTAX
A unique value, greater than zero, identifying the virtual machine.
The value assigned to a given virtual machine may not persist across re initialization of the hypervisor.
A command generator MUST use the vmUUID to identify a given virtual machine of interest."
The virtual machine's 128 bit Universally Unique Identifier (UUID) or the zero length string when a UUID is not available.
If set, the UUID MUST uniquely identify a virtual machine from all other virtual machines in an administrative domain.
A zero length octet string is returned if no UUID information is known."
A textual description containing operating system information installed on the virtual machine.
This value corresponds to the operating system the hypervisor assumes to be running when the virtual machine is started.
This may differ from the actual operating system in case the virtual machine boots into a different operating system."
The administrative state of the virtual machine."
The operational state of the virtual machine."
"The autostart configuration of the virtual machine.
If this value is enable(2), the virtual machine automatically starts at the next initialization of the hypervisor."
"This value indicates whether the virtual machine has a persistent configuration, which means the virtual machine will still exist after its shutdown."
{ vmEntry 8 } vmCurCpuNumber OBJECT
The minimum number of virtual CPUs that are assigned to the virtual machine when it is in a power on state.
The value  1 indicates that there is no hard boundary for the minimum number of virtual CPUs."
{ vmEntry 10 } vmMaxCpuNumber OBJECT
"The maximum number of virtual CPUs that are assigned to the virtual machine when it is in a power on state.
The value  1 indicates that there is no limit."
{ vmEntry 11 } vmMemUnit OBJECT
The current memory size currently allocated to the virtual memory module in the unit designated by vmMemUnit."
The minimum memory size defined to the virtual machine in the unit designated by vmMemUnit.
The value  1 indicates that there is no hard boundary for the minimum memory size."
The maximum memory size defined to the virtual machine in the unit designated by vmMemUnit.
The value  1 indicates that there is no limit."
The time (in centiseconds) since the administrative state of the virtual machine was last changed from shutdown(4) to running(1)."
If the number of virtual CPUs is larger than 1, vmCpuTime may exceed real time.
Discontinuities in the value of this counter can occur at re initialization of the hypervisor and administrative state
(vmAdminState) changes of the virtual machine."
The table of virtual CPUs provided by the hypervisor."
A unique value identifying a virtual CPU assigned to the virtual machine."
Discontinuities in the value of this counter can occur at re initialization of the hypervisor and administrative state
(vmAdminState) changes of the virtual machine."
The virtual CPU affinity on each virtual machines vmCpuAffinityTable
A list of CPU affinity entries of a virtual CPU."
An entry containing CPU affinity associated with a particular virtual machine.
A value identifying a physical CPU on the hypervisor.
On systems implementing the HOST RESOURCES MIB, the value MUST be the same value that is used as the index in the hrProcessorTable (hrDeviceIndex)."
The CPU affinity of this virtual CPU to the physical CPU represented by 'vmCpuPhysIndex'."
The virtual storage devices on each virtual machine.
This   document defines some overlapped objects with hrStorage in   HOST RESOURCES MIB (RFC 2790), because virtual resources are   allocated from the hypervisor's resources, which is the 'host   resources'.
The conceptual table of virtual storage devices attached to the virtual machine."
This value identifies the virtual machine (guest)
this storage device has been allocated to.
The value zero indicates that the storage device is currently not allocated to any virtual machines."
A unique value identifying a virtual storage device allocated to the virtual machine."
The value of hrStorageIndex, which is the parent (i.e., physical) device of this virtual device on systems implementing the HOST RESOURCES MIB.
this virtual device is not any child represented in the hrStorageTable."
The source type of the virtual storage device."
For example, this represents the specific format name of the sparse file."
A textual string that represents the resource identifier of the virtual storage.
For example, this contains the path to the disk image file that corresponds to the virtual storage."
The access permission of the virtual storage device."
The media type of the virtual storage device."
For example, this represents the specific driver name of the emulated media such as 'IDE' and 'SCSI'."
The defined virtual storage size defined in the unit designated by vmStorageSizeUnit.
"The storage size allocated to the virtual storage from a physical storage in the unit designated by vmStorageSizeUnit.
When the virtual storage is block device or raw file, this value and vmStorageDefinedSize are supposed to equal.
This value MUST NOT be different from vmStorageDefinedSize
when vmStorageSourceType is 'block' or 'raw'.
"The number of read I/
Discontinuities in the value of this counter can occur at re initialization of the hypervisor and administrative state
(vmAdminState) changes of the virtual machine."
"The number of write I/
Discontinuities in the value of this counter can occur at re initialization of the hypervisor and administrative state
(vmAdminState) changes of the virtual machine."
"The total number of bytes read from this device.
Discontinuities in the value of this counter can occur at re initialization of the hypervisor and administrative state
(vmAdminState) changes of the virtual machine."
"The total number of bytes written to this device.
Discontinuities in the value of this counter can occur at re initialization of the hypervisor and administrative state
(vmAdminState) changes of the virtual machine."
"The total number of microseconds read requests have been queued for this device.
This would typically be implemented by storing the high precision system timestamp of when the request is received from the virtual machine with the request, the difference between this initial timestamp and the time at which the requested operation has completed SHOULD be converted to microseconds and accumulated.
Discontinuities in the value of this counter can occur at re initialization of the hypervisor and administrative state
(vmAdminState) changes of the virtual machine."
"The total number of microseconds write requests have been queued for this device.
This would typically be implemented by storing the high precision system timestamp of when the request is received from the virtual machine with the request; the difference between this initial timestamp and the time at which the requested operation has completed SHOULD be converted to microseconds and accumulated.
Discontinuities in the value of this counter can occur at re initialization of the hypervisor and administrative state
(vmAdminState) changes of the virtual machine."
The conceptual table of virtual network interfaces attached to the virtual machine."
A unique value identifying a virtual network interface allocated to the virtual machine."
{ vmNetworkEntry 1 } vmNetworkIfIndex OBJECT
The value of ifIndex, which corresponds to this virtual network interface.
If this device is not represented in the ifTable, then this value MUST be zero."
The value of ifIndex, which corresponds to the parent (i.e., physical) device of this virtual device.
this virtual device is not any child represented in the ifTable."
For example, this value is 'virtio' when the emulation driver model is virtio."
The Media Access Control (MAC) address of the virtual network interface."
: vmPerVMNotificationsEnabled OBJECT TYPE SYNTAX
"Indicates if the notification generator will send notifications per virtual machine.
Changes to this object MUST NOT persist across re initialization of the management system, e.g., SNMP agent."
"Indicates if the notification generator will send notifications per set of virtual machines.
Changes to this object MUST NOT persist across re initialization of the management system, e.g., SNMP agent."
This object is the only object sent with bulk notifications."
The other state is indicated by the included value of vmOperState."
"This notification is generated when the operational state of a virtual machine has been changed to shuttingdown(10) from some other state.
The other state is indicated by the included value of vmOperState."
"This notification is generated when the operational state of a virtual machine has been changed to shutdown(11) from some other state.
The other state is indicated by the included value of vmOperState."
"This notification is generated when the operational state of a virtual machine has been changed to paused(8) from some other state.
The other state is indicated by the included value of vmOperState."
"This notification is generated when the operational state of a virtual machine has been changed to suspending(5) from some other state.
The other state is indicated by the included value of vmOperState."
"This notification is generated when the operational state of a virtual machine has been changed to suspended(6) from some other state.
The other state is indicated by the included value of vmOperState."
"This notification is generated when the operational state of a virtual machine has been changed to resuming(7) from some other state.
The other state is indicated by the included value of vmOperState."
"This notification is generated when the operational state of a virtual machine has been changed to migrating(9) from some other state.
The other state is indicated by the included value of vmOperState."
"This notification is generated when a virtual machine has been crashed.
The previous state of the virtual machine is indicated by the included value of vmOperState."
"This notification is generated when a virtual machine has been deleted.
The prior state of the virtual machine is indicated by the included value of vmOperState."
"This notification is generated when the operational state of one or more virtual machines has been changed to running(4) from any prior state, except for running(4).
Management stations are encouraged to subsequently poll the subset of virtual machines of interest for vmOperState."
"This notification is generated when the operational state of one or more virtual machines has been changed to shuttingdown(10) from a state other than shuttingdown(10).
Management stations are encouraged to subsequently poll the subset of virtual machines of interest for vmOperState."
Management stations are encouraged to subsequently poll the subset of virtual machines of interest for vmOperState."
Management stations are encouraged to subsequently poll the subset of virtual machines of interest for vmOperState."
Management stations are encouraged to subsequently poll the subset of virtual machines of interest for vmOperState."
Management stations are encouraged to subsequently poll the subset of virtual machines of interest for vmOperState."
Management stations are encouraged to subsequently poll the subset of virtual machines of interest for vmOperState."
This notification is generated when the operational state of one or more virtual machines has been changed to migrating(9) from a state other than migrating(9).
Management stations are encouraged to subsequently poll the subset of virtual machines of interest for vmOperState."
This notification is generated when one or more virtual machines have been crashed.
Management stations are encouraged to subsequently poll the subset of virtual machines of interest for vmOperState."
This notification is generated when one or more virtual machines have been deleted.
Management stations are encouraged to subsequently poll the subset of virtual machines of interest for vmOperState."
DESCRIPTION "Support for per VM notifications is optional.
If not implemented, then vmPerVMNotificationsEnabled MUST report false(2)."
"Necessary only if vmPerVMNotificationOptionalGroup is implemented."
GROUP  vmBulkNotificationOptionalGroup DESCRIPTION "Support for bulk notifications is optional.
If not implemented, then vmBulkNotificationsEnabled MUST report false(2)."
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
A collection of objects providing insight into the virtual machines controlled by a hypervisor."
"A collection of objects providing insight into the virtual network interfaces controlled by a hypervisor.
The variables used in vmBulkNotificationOptionalGroup virtual network interfaces controlled by a hypervisor."
"A collection of notifications for bulk notification of changes to virtual machine state (vmOperState) as reported by a given hypervisor."
MIB IANA STORAGE MEDIA TYPE MIB DEFINITIONS ::
BEGIN IMPORTS MODULE IDENTITY, mib 2
FROM SNMPv2 SMI TEXTUAL CONVENTION FROM SNMPv2 TC
; ianaStorageMediaTypeMIB MODULE IDENTITY LAST UPDATED "201510120000Z"
12 October 2015 ORGANIZATION "IANA" CONTACT INFO "Internet Assigned Numbers Authority Postal: ICANN 12025 Waterfront Drive, Suite 300 Los Angeles, CA 90094 2536
This MIB module defines Textual Conventions representing the media type of a storage device.
Copyright (c) 2015 IETF Trust and the persons identified as authors of the code.
Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license info)." REVISION "201510120000Z"
12 October 2015 DESCRIPTION "
The initial version of this MIB, published as RFC 7666."
The media type is other than those defined in this conversion.
The media type is hard disk.
The media type is optical disk.
The media type is floppy disk."
This document defines the first version of the IANA maintained
IANA STORAGE MEDIA TYPE MIB module, which allows new storage media types to be added to the enumeration in IANAStorageMediaType.
An Expert Review, as defined in RFC 5226 [RFC5226], is REQUIRED for each modification.
The MIB module in this document uses the following IANA assigned OBJECT IDENTIFIER values recorded in the SMI Numbers registry:
{ mib 2 236 } ianaStorageMediaTypeMIB
{ mib 2 237 } 8.
This MIB module is typically implemented on the hypervisor not inside a virtual machine.
Virtual machines, possibly under other administrative domains, would not have access to this MIB as the SNMP service would typically operate in a separate management network.
There are two objects defined in this MIB module, vmPerVMNotificationsEnabled and vmBulkNotificationsEnabled, that have a MAX ACCESS clause of read write.
Enabling notifications can lead to a substantial number of notifications if many virtual machines change their state concurrently.
Hence, such objects may be considered sensitive or vulnerable in some network environments.
The support for SET operations in a non secure environment without proper protection can have a negative effect on the management system.
It is RECOMMENDED that these objects have access of read only instead of read write on deployments where SNMPv3 strong security (i.e., authentication and encryption) is not used.
There are a number of managed objects in this MIB that may contain sensitive information.
The objects in the vmHvSoftware and vmHvVersion list information about the hypervisor's software and version.
Some may wish not to disclose to others which software they are running.
Further, an inventory of the running software and versions may be helpful to an attacker who hopes to exploit software bugs in certain applications.
Moreover, the objects in the vmTable, vmCpuTable, vmCpuAffinityTable, vmStorageTable, and vmNetworkTable list information about the virtual machines and their virtual resource allocation.
Some may wish not to disclose to others how many and what virtual machines they are operating.
It is thus important to control even GET access to these objects and possibly to even encrypt the values of these objects when sending them over the network via SNMP.
Not all versions of SNMP provide features for such a secure environment.
by itself is not a secure environment.
Even if the network itself is secure (for example by using IPsec), there is no control as to who on the secure network is allowed to access and
the objects in this MIB module.
It is recommended that the implementers consider using the security features as provided by the SNMPv3 framework.
Specifically, the use of the User based Security Model [RFC3414] and the View based Access Control Model [RFC3415] is recommended.
It is then a customer/user responsibility to ensure that the SNMP entity giving access to an instance of this MIB is properly configured to give access to the objects only to those principals (users) that have legitimate rights to indeed GET or SET
(migrate from    shutdown ( )
The University of Tokyo 2 11 16 Yayoi Bunkyo ku, Tokyo 113 8658
Cathy Zhou Huawei Technologies Bantian, Longgang District Shenzhen 518129
The University of Tokyo 7 3 1 Hongo Bunkyo ku, Tokyo 113 8656
