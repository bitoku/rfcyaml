- title: __initial_text__
  contents:
  - "           Web Distributed Authoring and Versioning (WebDAV)\n              \
    \        Redirect Reference Resources\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This specification defines an extension to Web Distributed Authoring\n\
    \   and Versioning (WebDAV) to allow clients to author HTTP redirect\n   reference\
    \ resources whose default response is an HTTP/1.1 3xx\n   (Redirection) status\
    \ code.  A redirect reference makes it possible to\n   access the target resourced\
    \ indirectly through any URI mapped to the\n   redirect reference resource.  This\
    \ specification does not address\n   remapping of trees of resources or regular\
    \ expression based\n   redirections.  There are no integrity guarantees associated\
    \ with\n   redirect reference resources.  Other mechanisms can also be used to\n\
    \   achieve the same functionality as this specification.  This\n   specification\
    \ allows operators to experiment with this mechanism and\n   develop experience\
    \ on what is the best approach to the problem.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Notational Conventions ..........................................4\n  \
    \ 3. Terminology .....................................................4\n   4.\
    \ Overview of Redirect Reference Resources ........................5\n   5. Operations\
    \ on Redirect Reference Resources ......................6\n   6. MKREDIRECTREF\
    \ Method ............................................7\n      6.1. Example: Creating\
    \ a Redirect Reference Resource\n           with MKREDIRECTREF .........................................8\n\
    \   7. UPDATEREDIRECTREF Method ........................................9\n  \
    \    7.1. Example: Updating a Redirect Reference Resource with\n           UPDATEREDIRECTREF\
    \ .........................................10\n   8. Operations on Collections\
    \ That Contain Redirect\n      Reference Resources ............................................11\n\
    \      8.1. Example: PROPFIND on a Collection with Redirect\n           Reference\
    \ .................................................11\n      8.2. Example: PROPFIND\
    \ with Apply-To-Redirect-Ref on a\n           Collection with Redirect Reference\
    \ Resources ..............13\n   9. Operations on Targets of Redirect Reference\
    \ Resources ..........15\n   10. Relative References in DAV:reftarget ..........................15\n\
    \      10.1. Example: Resolving a Relative Reference in a\n            Multi-Status\
    \ Response.....................................16\n   11. Redirect References\
    \ to Collections ............................17\n   12. Headers .......................................................18\n\
    \      12.1. Redirect-Ref Response Header .............................18\n  \
    \    12.2. Apply-To-Redirect-Ref Request Header .....................19\n   13.\
    \ Redirect Reference Resource Properties ........................19\n      13.1.\
    \ DAV:redirect-lifetime (protected) ........................19\n      13.2. DAV:reftarget\
    \ (protected) ................................19\n   14. XML Elements ..................................................19\n\
    \      14.1. redirectref XML Element ..................................19\n  \
    \ 15. Extensions to the DAV:response XML Element for Multi-Status\n       Responses\
    \ .....................................................20\n   16. Capability Discovery\
    \ ..........................................20\n      16.1. Example: Discovery\
    \ of Support for Redirect\n            Reference Resources ......................................20\n\
    \   17. Security Considerations .......................................21\n  \
    \    17.1. Privacy Concerns .........................................21\n    \
    \  17.2. Redirect Loops ...........................................21\n      17.3.\
    \ Redirect Reference Resources and Denial of Service .......21\n      17.4. Revealing\
    \ Private Locations ..............................22\n   18. Internationalization\
    \ Considerations ...........................22\n   19. IANA Considerations ...........................................22\n\
    \      19.1. HTTP headers .............................................22\n  \
    \         19.1.1. Redirect-Ref ......................................22\n    \
    \       19.1.2. Apply-To-Redirect-Ref .............................23\n   20.\
    \ Contributors ..................................................23\n   21. Acknowledgements\
    \ ..............................................23\n   22. Normative References\
    \ ..........................................23\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This specification extends the Web Distributed Authoring\
    \ Protocol\n   (WebDAV) to enable clients to create new access paths to existing\n\
    \   resources.  This capability is useful for several reasons.\n   WebDAV makes\
    \ it possible to organize HTTP resources into hierarchies,\n   placing them into\
    \ groupings, known as collections, that are more\n   easily browsed and manipulated\
    \ than a single flat collection.\n   However, hierarchies require categorization\
    \ decisions that locate\n   resources at a single location in the hierarchy, a\
    \ drawback when a\n   resource has multiple valid categories.  For example, in\
    \ a hierarchy\n   of vehicle descriptions containing collections for cars and\
    \ boats, a\n   description of a combination car/boat vehicle could belong in either\n\
    \   collection.  Ideally, the description should be accessible from both.\n  \
    \ Allowing clients to create new URIs that access the existing resource\n   lets\
    \ them put that resource into multiple collections.\n   Hierarchies also make\
    \ resource sharing more difficult, since\n   resources that have utility across\
    \ many collections are still forced\n   into a single collection.  For example,\
    \ the mathematics department at\n   one university might create a collection of\
    \ information on fractals\n   that contains bindings to some local resources,\
    \ but also provides\n   access to some resources at other universities.  For many\
    \ reasons, it\n   may be undesirable to make physical copies of the shared resources:\n\
    \   to conserve disk space, to respect copyright constraints, or to make\n   any\
    \ changes in the shared resources visible automatically.  Being\n   able to create\
    \ new access paths to existing resources in other\n   collections or even on other\
    \ unrelated systems is useful for this\n   sort of case.\n   The redirect reference\
    \ resources defined here provide a mechanism for\n   creating alternative access\
    \ paths to existing resources.  A redirect\n   reference resource is a resource\
    \ in one collection whose purpose is\n   to redirect requests to another resource\
    \ (its target), possibly in a\n   different collection.  In this way, it allows\
    \ clients to submit\n   requests to the target resource from another collection.\
    \  It\n   redirects most requests to the target resource using an HTTP status\n\
    \   code from the 3xx range (Redirection), thereby providing a form of\n   mediated\
    \ access to the target resource.\n   A redirect reference is a resource with properties\
    \ but with no body\n   of its own.  Properties of a redirect reference resource\
    \ can contain\n   information such as who created the reference, when, and why.\
    \  Since\n   redirect reference resources are implemented using HTTP 3xx\n   responses,\
    \ it generally takes two round trips to submit a request to\n   the intended resource.\
    \  Redirect references work equally well for\n   local resources and for resources\
    \ that reside on a different system\n   from the reference.\n   The remainder\
    \ of this document is structured as follows: Section 3\n   defines terms that\
    \ will be used throughout the specification.\n   Section 4 provides an overview\
    \ of redirect reference resources.\n   Section 5 defines the semantics of existing\
    \ methods when applied to\n   redirect reference resources.  Section 6 discusses\
    \ how to create a\n   redirect reference resource, and Section 7 discusses updating\n\
    \   redirect references.  Section 8 discusses their semantics when\n   applied\
    \ to collections that contain redirect reference resources.\n   Sections 9 through\
    \ 11 discuss several other issues raised by the\n   existence of redirect reference\
    \ resources.  Sections 12 through 15\n   define the new headers, properties, and\
    \ XML elements required to\n   support redirect reference resources.  Section\
    \ 16 discusses\n   capability discovery.  Sections 17 through 19 present the security,\n\
    \   internationalization, and IANA concerns raised by this specification.\n  \
    \ The remaining sections provide a variety of supporting information.\n"
- title: 2.  Notational Conventions
  contents:
  - "2.  Notational Conventions\n   Since this document describes a set of extensions\
    \ to the WebDAV\n   Distributed Authoring Protocol [RFC2518], itself an extension\
    \ to the\n   HTTP/1.1 protocol, the augmented BNF used here to describe protocol\n\
    \   elements is exactly the same as described in Section 2.1 of\n   [RFC2616].\
    \  Since this augmented BNF uses the basic production rules\n   provided in Section\
    \ 2.2 of [RFC2616], these rules apply to this\n   document as well.\n   In this\
    \ document, the key words \"MUST\", \"MUST NOT\", \"REQUIRED\",\n   \"SHALL\"\
    , \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",\n   and\
    \ \"OPTIONAL\" are to be interpreted as described in [RFC2119].\n"
- title: 3.  Terminology
  contents:
  - "3.  Terminology\n   The terminology used here follows and extends that in the\
    \ WebDAV\n   Distributed Authoring Protocol specification [RFC2518].  Definitions\n\
    \   of the terms resource, Uniform Resource Identifier (URI), and Uniform\n  \
    \ Resource Locator (URL) are provided in [RFC3986].\n   Redirect Reference Resource\n\
    \      A resource created to redirect all requests made to it, using an\n    \
    \  HTTP status code from the 3xx range, to a defined target resource.\n   Non-Reference\
    \ Resource\n      A resource that is not a reference to another resource.\n  \
    \ Target Resource\n      The resource to which requests are redirected by a redirect\n\
    \      reference resource.  A target resource can be anything that can be\n  \
    \    identified by an absolute URI (see [RFC3986], \"absolute-URI\").\n   This\
    \ document uses the terms \"precondition\", \"postcondition\", and\n   \"protected\
    \ property\" as defined in [RFC3253].  Servers MUST report\n   pre-/postcondition\
    \ failures as described in Section 1.6 of this\n   document.\n"
- title: 4.  Overview of Redirect Reference Resources
  contents:
  - "4.  Overview of Redirect Reference Resources\n   For all operations submitted\
    \ to a redirect reference resource, the\n   default response is a 302 (Found),\
    \ accompanied by the Redirect-Ref\n   header (defined in Section 12.1, below)\
    \ and the Location header\n   ([RFC2616], Section 14.30) set to the URI of the\
    \ target resource.\n   With this information, the client can resubmit the request\
    \ to the URI\n   of the target resource.\n   A redirect reference resource never\
    \ automatically forwards requests\n   to its target resource.  Redirect resources\
    \ bring the same benefits\n   as links in HTML documents.  They can be created\
    \ and maintained\n   without the involvement or even knowledge of their target\
    \ resource.\n   This reduces the cost of linking between resources.\n   If the\
    \ client is aware that it is operating on a redirect reference\n   resource, it\
    \ can resolve the reference by retrieving the reference\n   resource's DAV:reftarget\
    \ property (defined in Section 13.2, below),\n   whose value contains the URI\
    \ of the target resource.  It can then\n   submit requests to the target resource.\n\
    \   A redirect reference resource is a new type of resource.  To\n   distinguish\
    \ redirect reference resources from non-reference\n   resources, a new value of\
    \ the DAV:resourcetype property (defined in\n   [RFC2518]), DAV:redirectref, is\
    \ defined in Section 14.1, below.\n   Since a redirect reference resource is a\
    \ resource, methods can be\n   applied to the reference resource as well as to\
    \ its target resource.\n   The Apply-To-Redirect-Ref request header (defined in\
    \ Section 12.2,\n   below) is provided so that referencing-aware clients can control\n\
    \   whether an operation is applied to the redirect reference resource or\n  \
    \ standard HTTP/WebDAV behaviour (redirection with a 3xx status code)\n   should\
    \ occur.  The Apply-To-Redirect-Ref header can be used with most\n   requests\
    \ to redirect reference resources.  This header is\n   particularly useful with\
    \ PROPFIND, to retrieve the reference\n   resource's own properties.\n   Implementation\
    \ Note: Operations on the target of a redirect reference\n   usually do not affect\
    \ the redirect reference itself.  However,\n   clients should not rely on this\
    \ behaviour (for instance, some servers\n   may update redirect references as\
    \ a result of namespace operations on\n   the reference's target).\n"
- title: 5.  Operations on Redirect Reference Resources
  contents:
  - "5.  Operations on Redirect Reference Resources\n   Although non-referencing-aware\
    \ clients cannot create reference\n   resources, they should be able to submit\
    \ requests through the\n   reference resources created by reference-aware WebDAV\
    \ clients.  They\n   should be able to follow any references to their targets.\
    \  To make\n   this possible, a server that receives any request made via a redirect\n\
    \   reference resource MUST return a 3xx range (Redirection) status code,\n  \
    \ unless the request includes an Apply-To-Redirect-Ref header\n   specifying \"\
    T\".  The client and server MUST follow [RFC2616], Section\n   10.3, but with\
    \ these additional rules:\n   o  The Location response header MUST contain a URI\
    \ (see [RFC3986],\n      Section 3) that identifies the target of the reference\
    \ resource.\n   o  The response MUST include the Redirect-Ref header.  This header\n\
    \      allows reference-aware WebDAV clients to recognize the resource as\n  \
    \    a reference resource and to understand the reason for the\n      redirection.\n\
    \   A reference-aware WebDAV client can, like a non-referencing client,\n   resubmit\
    \ the request to the URI in the Location header in order to\n   operate on the\
    \ target resource.  Alternatively, it can resubmit the\n   request to the URI\
    \ of the redirect reference resource with the\n   \"Apply-To-Redirect-Ref: T\"\
    \ header in order to operate on the\n   reference resource itself.  In this case,\
    \ the request MUST be applied\n   to the reference resource itself, and a 3xx\
    \ response MUST NOT be\n   returned.\n   As redirect references do not have bodies,\
    \ GET and PUT requests with\n   \"Apply-To-Redirect-Ref: T\" MUST fail with status\
    \ 403 (forbidden).\n"
- title: 6.  MKREDIRECTREF Method
  contents:
  - "6.  MKREDIRECTREF Method\n   The MKREDIRECTREF method requests the creation of\
    \ a redirect\n   reference resource.\n   If a MKREDIRECTREF request fails, the\
    \ server state preceding the\n   request MUST be restored.\n   Responses from\
    \ a MKREDIRECTREF request MUST NOT be cached, as\n   MKREDIRECTREF has non-idempotent\
    \ and non-safe semantics (see\n   [RFC2616], Section 9.1).\n   Marshalling\n \
    \     The request body MUST be a DAV:mkredirectref XML element.\n      <!ELEMENT\
    \ mkredirectref (reftarget, redirect-lifetime?)>\n      <!ELEMENT reftarget (href)>\n\
    \      <!ELEMENT redirect-lifetime (permanent | temporary)>\n      <!ELEMENT permanent\
    \ EMPTY>\n      <!ELEMENT temporary EMPTY>\n      The DAV:href element is defined\
    \ in [RFC2518] (Section 12.3) and\n      MUST contain either a URI or a relative-ref\
    \ (see [RFC3986],\n      Sections 3 and 4.2).\n      If no DAV:redirect-lifetime\
    \ element is specified, the server MUST\n      behave as if a value of DAV:temporary\
    \ was specified.\n      If the request succeeds, the server MUST return 201 (Created)\n\
    \      status.\n      If a response body for a successful request is included,\
    \ it MUST\n      be a DAV:mkredirectref-response XML element.  Note that this\n\
    \      document does not define any elements for the MKREDIRECTREF\n      response\
    \ body, but the DAV:mkredirectref-response element is\n      defined to ensure\
    \ interoperability between future extensions that\n      do define elements for\
    \ the response body.\n      <!ELEMENT mkredirectref-response ANY>\n   Preconditions\n\
    \      (DAV:resource-must-be-null): A resource MUST NOT exist at the\n      Request-URI.\n\
    \      (DAV:parent-resource-must-be-non-null): The Request-URI minus the\n   \
    \   last past segment MUST identify a collection.\n      (DAV:name-allowed): The\
    \ last segment of the Request-URI is\n      available for use as a resource name.\n\
    \      (DAV:locked-update-allowed): If the collection identified by the\n    \
    \  Request-URI minus the last path segment is write-locked, then the\n      appropriate\
    \ token MUST be specified in an If request header.\n      (DAV:redirect-lifetime-supported):\
    \ If the request body contains a\n      DAV:redirect-lifetime element, the server\
    \ MUST support the\n      specified lifetime.  Support for DAV:temporary is REQUIRED,\
    \ while\n      support for DAV:permanent is OPTIONAL.\n      (DAV:legal-reftarget):\
    \ The specified is a legal URI or relative-\n      ref.\n   Postconditions\n \
    \     (DAV:new-redirectref): a new redirect reference resource is\n      created\
    \ whose DAV:reftarget property has the value specified in\n      the request body.\n"
- title: '6.1.  Example: Creating a Redirect Reference Resource with MKREDIRECTREF'
  contents:
  - "6.1.  Example: Creating a Redirect Reference Resource with MKREDIRECTREF\n  \
    \ >> Request:\n   MKREDIRECTREF /~whitehead/dav/spec08.ref HTTP/1.1\n   Host:\
    \ www.example.com\n   Content-Type: text/xml; charset=\"utf-8\"\n   Content-Length:\
    \ xxx\n   <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n   <D:mkredirectref xmlns:D=\"\
    DAV:\">\n     <D:reftarget>\n       <D:href>/i-d/draft-webdav-protocol-08.txt</D:href>\n\
    \     </D:reftarget>\n   </D:mkredirectref>\n   >> Response:\n   HTTP/1.1 201\
    \ Created\n   This request resulted in the creation of a new redirect reference\n\
    \   resource at http://www.example.com/~whitehead/dav/spec08.ref, which\n   points\
    \ to the resource identified by the DAV:reftarget property.  In\n   this example,\
    \ the target resource is identified by the URI\n   http://www.example.com/i-d/draft-webdav-protocol-08.txt.\
    \  The\n   redirect reference resource's DAV:resourcetype property is set to\n\
    \   DAV:redirectref, and its DAV:redirect-lifetime property has the value\n  \
    \ DAV:temporary.\n"
- title: 7.  UPDATEREDIRECTREF Method
  contents:
  - "7.  UPDATEREDIRECTREF Method\n   The UPDATEREDIRECTREF method requests the update\
    \ of a redirect\n   reference resource.\n   If a UPDATEREDIRECTREF request fails,\
    \ the server state preceding the\n   request MUST be restored.\n   Responses from\
    \ a UPDATEREDIRECTREF request MUST NOT be cached, as\n   UPDATEREDIRECTREF has\
    \ non-safe semantics (see [RFC2616], Section\n   9.1).\n   Marshalling\n     \
    \ The request body MUST be a DAV:updateredirectref XML element.\n      <!ELEMENT\
    \ updateredirectref (reftarget?, redirect-lifetime?)>\n      See Section 6 for\
    \ a definition of DAV:reftarget and DAV:redirect-\n      lifetime.\n      If no\
    \ DAV:reftarget element is specified, the server MUST NOT\n      change the target\
    \ of the redirect reference.\n      If no DAV:redirect-lifetime element is specified,\
    \ the server MUST\n      NOT change the lifetime of the redirect reference.\n\
    \      If a response body for a successful request is included, it MUST\n    \
    \  be a DAV:updateredirectref-response XML element.  Note that this\n      document\
    \ does not define any elements for the UPDATEREDIRECTREF\n      response body,\
    \ but the DAV:updateredirectref-response element is\n      defined to ensure interoperability\
    \ between future extensions that\n      do define elements for the response body.\n\
    \      <!ELEMENT updateredirectref-response ANY>\n   Preconditions\n      (DAV:locked-update-allowed):\
    \ if the resource is write-locked, then\n      the appropriate token MUST be specified\
    \ in an If request header.\n      (DAV:must-be-redirectref): the resource identified\
    \ by the\n      Request-URI must be a redirect reference resource as defined by\n\
    \      this specification.\n      (DAV:redirect-lifetime-supported): see Section\
    \ 6.\n      (DAV:redirect-lifetime-update-supported): servers MAY support\n  \
    \    changing the DAV:redirect-lifetime property; if they don't, this\n      condition\
    \ code can be used to signal failure.\n      (DAV:legal-reftarget): see Section\
    \ 6.\n   Postconditions\n      (DAV:redirectref-updated): the DAV:reftarget and\
    \ DAV:redirect-\n      lifetime properties of the redirect reference have been\
    \ updated\n      accordingly.\n"
- title: '7.1.  Example: Updating a Redirect Reference Resource with'
  contents:
  - "7.1.  Example: Updating a Redirect Reference Resource with\n      UPDATEREDIRECTREF\n\
    \   >> Request:\n   UPDATEREDIRECTREF /~whitehead/dav/spec08.ref HTTP/1.1\n  \
    \ Host: www.example.com\n   Apply-To-Redirect-Ref: T\n   Content-Type: text/xml;\
    \ charset=\"utf-8\"\n   Content-Length: xxx\n   <?xml version=\"1.0\" encoding=\"\
    utf-8\" ?>\n   <D:updateredirectref xmlns:D=\"DAV:\">\n     <D:reftarget>\n  \
    \     <D:href>/i-d/draft-webdav-protocol-08b.txt</D:href>\n     </D:reftarget>\n\
    \   </D:updateredirectref>\n   >> Response:\n   HTTP/1.1 200 OK\n   This request\
    \ has updated the redirect reference's DAV:reftarget\n   property to \"/i-d/draft-webdav-protocol-08b.txt\"\
    \ and has not changed\n   the DAV:redirect-lifetime value.  Note that the \"Apply-To-Redirect-\n\
    \   Ref\" request header must be used; otherwise, the request would result\n \
    \  in a redirect (3xx) response status.\n"
- title: 8.  Operations on Collections That Contain Redirect Reference Resources
  contents:
  - "8.  Operations on Collections That Contain Redirect Reference Resources\n   According\
    \ to [RFC2518], Section 9.2, methods that have defined\n   interactions with the\
    \ \"Depth\" request header should apply all other\n   request headers to each\
    \ resource in scope.  However, applying this\n   principle to the \"Apply-To-Redirect-Ref\"\
    \ header uniformly would make\n   it impractical to implement this specification\
    \ on top of existing\n   servers and also would result in unexpected server behaviour\
    \ for\n   clients that do not take the existence of redirect references into\n\
    \   account.  On the other hand, the definition of the \"Depth\" header\n   allows\
    \ alternate behaviours to be explicitly defined.\n   For this reason, this specification\
    \ defines the interaction between\n   \"Depth\" and \"Apply-To-Redirect-Ref\"\
    \ request headers on a case-by-case\n   basis and also provides a default for\
    \ methods not mentioned here that\n   do not specify the behaviour themselves.\n\
    \    +-------------+-----------------+------------------+-----------+\n    | method\
    \ name | defined in      | supported depths | behaviour |\n    +-------------+-----------------+------------------+-----------+\n\
    \    | COPY        | [RFC2518], 8.9  | 0, infinity      | \"T\"       |\n    |\
    \ DELETE      | [RFC2518], 8.7  | infinity         | \"T\"       |\n    | LOCK\
    \        | [RFC2518], 8.11 | 0, infinity      | \"T\"       |\n    | MOVE    \
    \    | [RFC2518], 8.10 | 0, infinity      | \"T\"       |\n    | PROPFIND    |\
    \ [RFC2518], 8.2  | 0, 1, infinity   | inherit   |\n    | REPORT      | [RFC3253],\
    \ 3.6  | 0, 1, infinity   | inherit   |\n    | default     |                 |\
    \                  | \"T\"       |\n    +-------------+-----------------+------------------+-----------+\n\
    \   When the behaviour is defined to be \"inherit\", the method should\n   follow\
    \ RFC2518's default behaviour for \"Depth\" operations, which\n   means applying\
    \ the value given for \"Apply-To-Redirect-Ref\" to each\n   resource in scope.\
    \  On the other hand, when it is defined to be \"T\",\n   the method should behave\
    \ as if a \"Apply-To-Redirect-Ref: T\" header\n   was specified for each operation\
    \ on child resources.  The latter\n   ensures that \"Depth: infinity\" operations\
    \ will not fail unexpectedly\n   just because there was a redirect reference resource\
    \ in scope.\n"
- title: '8.1.  Example: PROPFIND on a Collection with Redirect Reference'
  contents:
  - "8.1.  Example: PROPFIND on a Collection with Redirect Reference\n      Resources\n\
    \   Suppose a PROPFIND request with Depth: infinity is submitted to the\n   following\
    \ collection, with the members shown here:\n   /MyCollection/\n        (non-reference\
    \ resource) diary.html\n        (redirect reference resource) nunavut\n   >> Request:\n\
    \   PROPFIND /MyCollection/ HTTP/1.1\n   Host: example.com\n   Depth: infinity\n\
    \   Apply-To-Redirect-Ref: F\n   Content-Type: text/xml\n   Content-Length: xxxx\n\
    \   <?xml version=\"1.0\" ?>\n   <D:propfind xmlns:D=\"DAV: \">\n     <D:prop\
    \ xmlns:J=\"http://example.com/jsprops/\">\n       <D:resourcetype/>\n       <J:keywords/>\n\
    \     </D:prop>\n   </D:propfind>\n   >> Response:\n   HTTP/1.1 207 Multi-Status\n\
    \   Content-Type: text/xml\n   Content-Length: xxxx\n   <?xml version=\"1.0\"\
    \ ?>\n   <D:multistatus xmlns:D=\"DAV:\" xmlns:J=\"http://example.com/jsprops/\"\
    >\n     <D:response>\n       <D:href>/MyCollection/</D:href>\n       <D:propstat>\n\
    \         <D:prop>\n           <D:resourcetype><D:collection/></D:resourcetype>\n\
    \           <J:keywords>diary, interests, hobbies</J:keywords>\n         </D:prop>\n\
    \         <D:status>HTTP/1.1 200 OK</D:status>\n       </D:propstat>\n     </D:response>\n\
    \     <D:response>\n       <D:href>/MyCollection/diary.html</D:href>\n       <D:propstat>\n\
    \         <D:prop>\n           <D:resourcetype/>\n           <J:keywords>diary,\
    \ travel, family, history</J:keywords>\n         </D:prop>\n         <D:status>HTTP/1.1\
    \ 200 OK</D:status>\n       </D:propstat>\n     </D:response>\n     <D:response>\n\
    \       <D:href>/MyCollection/nunavut</D:href>\n       <D:status>HTTP/1.1 302\
    \ Found</D:status>\n       <D:location>\n         <D:href>http://example.ca/art/inuit/</D:href>\n\
    \       </D:location>\n     </D:response>\n   </D:multistatus>\n   In this example,\
    \ the Depth header is set to infinity, and the Apply-\n   To-Redirect-Ref header\
    \ is set to \"F\".  The collection contains one\n   URI that identifies a redirect\
    \ reference resource.  The response\n   element for the redirect reference resource\
    \ has a status of 302\n   (Found) and includes a DAV:location extension element\
    \ to allow\n   clients to retrieve the properties of its target resource.  (The\n\
    \   response element for the redirect reference resource does not include\n  \
    \ the requested properties.  The client can submit another PROPFIND\n   request\
    \ to the URI in the DAV:location pseudo-property to retrieve\n   those properties.)\n"
- title: '8.2.  Example: PROPFIND with Apply-To-Redirect-Ref on a Collection with'
  contents:
  - "8.2.  Example: PROPFIND with Apply-To-Redirect-Ref on a Collection with\n   \
    \   Redirect Reference Resources\n   Suppose a PROPFIND request with \"Apply-To-Redirect-Ref:\
    \ T\" and Depth:\n   infinity is submitted to the following collection, with the\
    \ members\n   shown here:\n   /MyCollection/\n        (non-reference resource)\
    \ diary.html\n        (redirect reference resource) nunavut\n   >> Request:\n\
    \   PROPFIND /MyCollection/ HTTP/1.1\n   Host: example.com\n   Depth: infinity\n\
    \   Apply-To-Redirect-Ref: T\n   Content-Type: text/xml\n   Content-Length: xxxx\n\
    \   <?xml version=\"1.0\" ?>\n   <D:propfind xmlns:D=\"DAV:\">\n     <D:prop>\n\
    \       <D:resourcetype/>\n       <D:reftarget/>\n       <D:redirect-lifetime/>\n\
    \     </D:prop>\n   </D:propfind>\n   >> Response:\n   HTTP/1.1 207 Multi-Status\n\
    \   Content-Type: text/xml\n   Content-Length: xxxx\n   <?xml version=\"1.0\"\
    \ ?>\n   <D:multistatus xmlns:D=\"DAV:\">\n     <D:response>\n       <D:href>/MyCollection/</D:href>\n\
    \       <D:propstat>\n         <D:prop>\n           <D:resourcetype><D:collection/></D:resourcetype>\n\
    \         </D:prop>\n         <D:status>HTTP/1.1 200 OK</D:status>\n       </D:propstat>\n\
    \       <D:propstat>\n         <D:prop>\n           <D:reftarget/>\n         \
    \  <D:redirect-lifetime/>\n         </D:prop>\n         <D:status>HTTP/1.1 404\
    \ Not Found</D:status>\n       </D:propstat>\n     </D:response>\n     <D:response>\n\
    \       <D:href>/MyCollection/diary.html</D:href>\n       <D:propstat>\n     \
    \    <D:prop>\n           <D:resourcetype/>\n         </D:prop>\n         <D:status>HTTP/1.1\
    \ 200 OK</D:status>\n       </D:propstat>\n       <D:propstat>\n         <D:prop>\n\
    \           <D:reftarget/>\n           <D:redirect-lifetime/>\n         </D:prop>\n\
    \         <D:status>HTTP/1.1 404 Not Found</D:status>\n       </D:propstat>\n\
    \     </D:response>\n     <D:response>\n       <D:href>/MyCollection/nunavut</D:href>\n\
    \       <D:propstat>\n         <D:prop>\n           <D:resourcetype><D:redirectref/></D:resourcetype>\n\
    \           <D:reftarget>\n             <D:href>http://example.ca/art/inuit/</D:href>\n\
    \           </D:reftarget>\n           <D:redirect-lifetime><D:temporary/></D:redirect-lifetime>\n\
    \         </D:prop>\n       <D:status>HTTP/1.1 200 OK</D:status>\n       </D:propstat>\n\
    \     </D:response>\n   </D:multistatus>\n   Since the \"Apply-To-Redirect-Ref:\
    \ T\" header is present, the response\n   shows the properties of the redirect\
    \ reference resource in the\n   collection rather than reporting a 302 status.\n"
- title: 9.  Operations on Targets of Redirect Reference Resources
  contents:
  - "9.  Operations on Targets of Redirect Reference Resources\n   Operations on targets\
    \ of redirect reference resources have no effect\n   on the reference resource.\n"
- title: 10.  Relative References in DAV:reftarget
  contents:
  - "10.  Relative References in DAV:reftarget\n   The URI in the href in a DAV:reftarget\
    \ property MAY be a relative\n   reference.  In this case, the base URI to be\
    \ used for resolving it to\n   absolute form is the URI used in the HTTP message\
    \ to identify the\n   redirect reference resource to which the DAV:reftarget property\n\
    \   belongs.\n   When DAV:reftarget appears in the context of a Multi-Status response,\n\
    \   it is in a DAV:response element that contains a single DAV:href\n   element.\
    \  The value of this DAV:href element serves as the base URI\n   for resolving\
    \ a relative reference in DAV:reftarget.  The value of\n   DAV:href may itself\
    \ be relative, in which case it must be resolved\n   first in order to serve as\
    \ the base URI for the relative reference in\n   DAV:reftarget.  If the DAV:href\
    \ element is relative, its base URI is\n   constructed from the scheme component\
    \ \"http\", the value of the Host\n   header in the request, and the Request-URI.\n"
- title: '10.1.  Example: Resolving a Relative Reference in a Multi-Status'
  contents:
  - "10.1.  Example: Resolving a Relative Reference in a Multi-Status\n       Response\n\
    \   >> Request:\n   PROPFIND /geog/ HTTP/1.1\n   Host: example.com\n   Apply-To-Redirect-Ref:\
    \ T\n   Depth: 1\n   Content-Type: text/xml\n   Content-Length: nnn\n   <?xml\
    \ version=\"1.0\" ?>\n   <D:propfind xmlns:D=\"DAV:\">\n     <D:prop>\n      \
    \ <D:resourcetype/>\n       <D:reftarget/>\n     </D:prop>\n   </D:propfind>\n\
    \   >> Response:\n   HTTP/1.1 207 Multi-Status\n   Content-Type: text/xml\n  \
    \ Content-Length: nnn\n   <?xml version=\"1/0\" ?>\n   <D:multistatus xmlns:D=\"\
    DAV:\">\n     <D:response>\n       <D:href>/geog/</D:href>\n       <D:propstat>\n\
    \         <D:prop>\n           <D:resourcetype><D:collection/></D:resourcetype>\n\
    \         </D:prop>\n         <D:status>HTTP/1.1 200 OK</D:status>\n       </D:propstat>\n\
    \       <D:propstat>\n         <D:prop><D:reftarget/></D:prop>\n         <D:status>HTTP/1.1\
    \ 404 Not Found</D:status>\n       </D:propstat>\n     </D:response>\n     <D:response>\n\
    \       <D:href>/geog/stats.html</D:href>\n       <D:propstat>\n         <D:prop>\n\
    \           <D:resourcetype><D:redirectref/></D:resourcetype>\n           <D:reftarget>\n\
    \             <D:href>statistics/population/1997.html</D:href>\n           </D:reftarget>\n\
    \         </D:prop>\n       <D:status>HTTP/1.1 200 OK</D:status>\n       </D:propstat>\n\
    \     </D:response>\n   </D:multistatus>\n   In this example, the relative reference\n\
    \   \"statistics/population/1997.html\" is returned as the value of the\n   DAV:reftarget\
    \ property for the reference resource identified by href\n   /geog/stats.html.\
    \  The href is itself a relative reference, which\n   resolves to http://example.com/geog/stats.html.\
    \  This is the base URI\n   for resolving the relative reference in reftarget.\
    \  The absolute URI\n   of reftarget is\n   http://example.com/geog/statistics/population/1997.html.\n"
- title: 11.  Redirect References to Collections
  contents:
  - "11.  Redirect References to Collections\n   In a Request-URI /segment1/segment2/segment3,\
    \ any of the three\n   segments may identify a redirect reference resource.  (See\
    \ [RFC3986],\n   Section 3.3, for definitions of \"path\" and \"segment\".)  If\
    \ any\n   segment in a Request-URI identifies a redirect reference resource,\n\
    \   the response SHOULD be a 3xx.  The value of the Location header in\n   the\
    \ response is as follows:\n   The leftmost path segment of the Request-URI that\
    \ identifies a\n   redirect reference resource, together with all path segments\
    \ and\n   separators to the left of it, is replaced by the value of the\n   redirect\
    \ reference resource's DAV:reftarget property (resolved to an\n   absolute URI).\
    \  The remainder of the Request-URI is concatenated to\n   this path.\n   Note:\
    \ If the DAV:reftarget property ends with a \"/\" and the remainder\n   of the\
    \ Request-URI is non-empty (and therefore must begin with a\n   \"/\"), the final\
    \ \"/\" in the DAV:reftarget property is dropped before\n   the remainder of the\
    \ Request-URI is appended.\n   Consider Request-URI /x/y/z.html.  Suppose that\
    \ /x/ is a redirect\n   reference resource, whose target resource is collection\
    \ /a/, which\n   contains redirect reference resource y whose target resource\
    \ is\n   collection /b/, which contains redirect reference resource z.html,\n\
    \   whose target resource is /c/d.html.\n                        /x/y/z.html\n\
    \                            |\n                            | /x -> /a\n     \
    \                       |\n                            v\n                   \
    \     /a/y/z.html\n                            |\n                           \
    \ | /a/y -> /b\n                            |\n                            v\n\
    \                        /b/z.html\n                            |\n          \
    \                  | /b/z.html -> /c/d.html\n                            |\n \
    \                           v\n                        /c/d.html\n   In this case,\
    \ the client must follow up three separate 3xx responses\n   before finally reaching\
    \ the target resource.  The server responds to\n   the initial request with a\
    \ 3xx with Location: /a/y/z.html, and the\n   client resubmits the request to\
    \ /a/y/z.html.  The server responds to\n   this request with a 3xx with Location:\
    \ /b/z.html, and the client\n   resubmits the request to /b/z.html.  The server\
    \ responds to this\n   request with a 3xx with Location: /c/d.html, and the client\
    \ resubmits\n   the request to /c/d.html.  This final request succeeds.\n    \
    \  Note: The behaviour described above may have a very serious impact\n      on\
    \ the efficiency of mapping Request-URIs to resources in HTTP\n      request processing.\
    \  Therefore, servers MAY respond with a 404\n      status code if the cost of\
    \ checking all leading path segments for\n      redirect references seems prohibitive.\n"
- title: 12.  Headers
  contents:
  - '12.  Headers

    '
- title: 12.1.  Redirect-Ref Response Header
  contents:
  - "12.1.  Redirect-Ref Response Header\n   Redirect-Ref = \"Redirect-Ref:\" (URI\
    \ | relative-ref)\n   ; URI: see [RFC3986], Section 3\n   ; relative-ref: see\
    \ [RFC3986], Section 4.2\n   The Redirect-Ref header is used in all 3xx responses\
    \ from redirect\n   reference resources.  The value is the link target as specified\n\
    \   during redirect reference resource creation.\n"
- title: 12.2.  Apply-To-Redirect-Ref Request Header
  contents:
  - "12.2.  Apply-To-Redirect-Ref Request Header\n   Apply-To-Redirect-Ref = \"Apply-To-Redirect-Ref\"\
    \ \":\" (\"T\" | \"F\")\n   The optional Apply-To-Redirect-Ref header can be used\
    \ on any request\n   to a redirect reference resource.  When it is present and\
    \ set to \"T\",\n   the request MUST be applied to the reference resource itself,\
    \ and a\n   3xx response MUST NOT be returned.\n   If the Apply-To-Redirect-Ref\
    \ header is used on a request to any other\n   sort of resource besides a redirect\
    \ reference resource, the server\n   MUST ignore it.\n"
- title: 13.  Redirect Reference Resource Properties
  contents:
  - "13.  Redirect Reference Resource Properties\n   The properties defined below\
    \ are REQUIRED on redirect reference\n   resources.  A PROPFIND/allprop request\
    \ SHOULD NOT return any of the\n   properties defined in this document.\n"
- title: 13.1.  DAV:redirect-lifetime (protected)
  contents:
  - "13.1.  DAV:redirect-lifetime (protected)\n   This property provides information\
    \ about the lifetime of a redirect.\n   It can be either DAV:permanent (HTTP status\
    \ 301) or DAV:temporary\n   (HTTP status 302).  Future protocols may define additional\
    \ values.\n   <!ELEMENT redirect-lifetime (permanent | temporary)>\n   <!ELEMENT\
    \ permanent EMPTY>\n   <!ELEMENT temporary EMPTY>\n"
- title: 13.2.  DAV:reftarget (protected)
  contents:
  - "13.2.  DAV:reftarget (protected)\n   This property provides an efficient way\
    \ for clients to discover the\n   URI of the target resource.  This is a read-only\
    \ property after its\n   initial creation.  Its value can only be set in a MKREDIRECTREF\n\
    \   request.  The value is a DAV:href element containing the URI of the\n   target\
    \ resource.\n   <!ELEMENT reftarget href >\n"
- title: 14.  XML Elements
  contents:
  - '14.  XML Elements

    '
- title: 14.1.  redirectref XML Element
  contents:
  - "14.1.  redirectref XML Element\n   Name: redirectref\n   Namespace: DAV:\n  \
    \ Purpose: Used as the value of the DAV:resourcetype property to\n      specify\
    \ that the resource type is a redirect reference resource.\n   <!ELEMENT redirectref\
    \ EMPTY >\n"
- title: 15.  Extensions to the DAV:response XML Element for Multi-Status
  contents:
  - "15.  Extensions to the DAV:response XML Element for Multi-Status\n     Responses\n\
    \   As described in Section 8, the DAV:location element may be returned\n   in\
    \ the DAV:response element of a 207 Multi-Status response, to allow\n   clients\
    \ to resubmit their requests to the target resource of a\n   redirect reference\
    \ resource.\n   Consequently, the definition of the DAV:response XML element changes\n\
    \   to the following:\n   <!ELEMENT response (href, ((href*, status)|(propstat+)),\n\
    \                       responsedescription?, location?) >\n   <!ELEMENT location\
    \ (href) >\n"
- title: 16.  Capability Discovery
  contents:
  - "16.  Capability Discovery\n   Sections 9.1 and 15 of [RFC2518] describe the use\
    \ of compliance\n   classes with the DAV header in responses to OPTIONS, to indicate\n\
    \   which parts of the WebDAV Distributed Authoring protocols the\n   resource\
    \ supports.  This specification defines an OPTIONAL extension\n   to [RFC2518].\
    \  It defines a new compliance class, called\n   redirectrefs, for use with the\
    \ DAV header in responses to OPTIONS\n   requests.  If a resource does support\
    \ redirect references, its\n   response to an OPTIONS request may indicate that\
    \ it does, by listing\n   the new redirectrefs compliance class in the DAV header\
    \ and by\n   listing the MKREDIRECTREF method as one it supports.\n   When responding\
    \ to an OPTIONS request, any type of resource can\n   include redirectrefs in\
    \ the value of the DAV header.  Doing so\n   indicates that the server permits\
    \ a redirect reference resource at\n   the Request-URI.\n"
- title: '16.1.  Example: Discovery of Support for Redirect Reference Resources'
  contents:
  - "16.1.  Example: Discovery of Support for Redirect Reference Resources\n   >>\
    \ Request:\n   OPTIONS /somecollection/someresource HTTP/1.1\n   Host: example.org\n\
    \   >> Response:\n   HTTP/1.1 200 OK\n   Allow: OPTIONS, GET, HEAD, POST, PUT,\
    \ DELETE, TRACE, COPY, MOVE\n   Allow: MKCOL, PROPFIND, PROPPATCH, LOCK, UNLOCK,\
    \ MKREDIRECTREF\n   DAV: 1, 2, redirectrefs\n   The DAV header in the response\
    \ indicates that the resource\n   /somecollection/someresource is level 1 and\
    \ level 2 compliant, as\n   defined in [RFC2518].  In addition, /somecollection/someresource\n\
    \   supports redirect reference resources.  The Allow header indicates\n   that\
    \ MKREDIRECTREF requests can be submitted to\n   /somecollection/someresource.\n"
- title: 17.  Security Considerations
  contents:
  - "17.  Security Considerations\n   This section is provided to make applications\
    \ that implement this\n   protocol aware of the security implications of this\
    \ protocol.\n   All of the security considerations of HTTP/1.1 and the WebDAV\n\
    \   Distributed Authoring Protocol specification also apply to this\n   protocol\
    \ specification.  In addition, redirect reference resources\n   introduce several\
    \ new security concerns and increase the risk of some\n   existing threats.  These\
    \ issues are detailed below.\n"
- title: 17.1.  Privacy Concerns
  contents:
  - "17.1.  Privacy Concerns\n   By creating redirect reference resources on a trusted\
    \ server, it is\n   possible for a hostile agent to induce users to send private\n\
    \   information to a target on an unrelated system.  This risk is\n   mitigated\
    \ somewhat, since clients are required to notify the user of\n   the redirection\
    \ for any request other than GET or HEAD.  (See\n   [RFC2616], Section 10.3.3,\
    \ 302 Found.)\n"
- title: 17.2.  Redirect Loops
  contents:
  - "17.2.  Redirect Loops\n   Although redirect loops were already possible in HTTP\
    \ 1.1, the\n   introduction of the MKREDIRECTREF method creates a new avenue for\n\
    \   clients to create loops accidentally or maliciously.  If the\n   reference\
    \ resource and its target are on the same server, the server\n   may be able to\
    \ detect MKREDIRECTREF requests that would create loops.\n   See also [RFC2616],\
    \ Section 10.3, \"Redirection 3xx.\"\n"
- title: 17.3.  Redirect Reference Resources and Denial of Service
  contents:
  - "17.3.  Redirect Reference Resources and Denial of Service\n   Denial of service\
    \ attacks were already possible by posting URLs that\n   were intended for limited\
    \ use at heavily used Web sites.  The\n   introduction of MKREDIRECTREF creates\
    \ a new avenue for similar denial\n   of service attacks.  Clients can now create\
    \ redirect reference\n   resources at heavily used sites to target locations that\
    \ were not\n   designed for heavy usage.\n"
- title: 17.4.  Revealing Private Locations
  contents:
  - "17.4.  Revealing Private Locations\n   There are several ways that redirect reference\
    \ resources may reveal\n   information about collection structures.  First, the\
    \ DAV:reftarget\n   property of every redirect reference resource contains the\
    \ URI of the\n   target resource.  Anyone who has access to the reference resource\
    \ can\n   discover the collection path that leads to the target resource.  The\n\
    \   owner of the target resource may have wanted to limit knowledge of\n   this\
    \ collection structure.\n   Sufficiently powerful access control mechanisms can\
    \ control this risk\n   to some extent.  Property-level access control could prevent\
    \ users\n   from examining the DAV:reftarget property.  (The Location header\n\
    \   returned in responses to requests on redirect reference resources\n   reveals\
    \ the same information, however.)\n   This risk is no greater than the similar\
    \ risk posed by HTML links.\n"
- title: 18.  Internationalization Considerations
  contents:
  - "18.  Internationalization Considerations\n   All internationalization considerations\
    \ mentioned in [RFC2518] also\n   apply to this document.\n"
- title: 19.  IANA Considerations
  contents:
  - "19.  IANA Considerations\n   All IANA considerations mentioned in [RFC2518] also\
    \ apply to this\n   document.\n"
- title: 19.1.  HTTP headers
  contents:
  - "19.1.  HTTP headers\n   This document specifies the two new HTTP headers listed\
    \ below.\n"
- title: 19.1.1.  Redirect-Ref
  contents:
  - "19.1.1.  Redirect-Ref\n   Header field name: Redirect-Ref\n   Applicable protocol:\
    \ http\n   Status: standard\n   Author/Change controller: IETF\n   Specification\
    \ document: this specification (Section 12.1)\n"
- title: 19.1.2  Apply-To-Redirect-Ref
  contents:
  - "19.1.2  Apply-To-Redirect-Ref\n   Header field name: Apply-To-Redirect-Ref\n\
    \   Applicable protocol: http\n   Status: standard\n   Author/Change controller:\
    \ IETF\n   Specification document: this specification (Section 12.2)\n"
- title: 20.  Contributors
  contents:
  - "20.  Contributors\n   Many thanks to Jason Crawford, Jim Davis, Chuck Fay, and\
    \ Judith\n   Slein, who can take credit for big parts of the original design of\n\
    \   this specification.\n"
- title: 21.  Acknowledgements
  contents:
  - "21.  Acknowledgements\n   This document has benefited from thoughtful discussion\
    \ by Jim Amsden,\n   Peter Carlson, Steve Carter, Tyson Chihaya, Ken Coar, Ellis\
    \ Cohen,\n   Bruce Cragun, Spencer Dawkins, Mark Day, Rajiv Dulepet, David Durand,\n\
    \   Lisa Dusseault, Stefan Eissing, Roy Fielding, Yaron Goland, Fred\n   Hitt,\
    \ Alex Hopmann, James Hunt, Marcus Jager, Chris Kaler, Manoj\n   Kasichainula,\
    \ Rohit Khare, Daniel LaLiberte, Steve Martin, Larry\n   Masinter, Jeff McAffer,\
    \ Joe Orton, Surendra Koduru Reddy, Juergen\n   Reuter, Max Rible, Sam Ruby, Bradley\
    \ Sergeant, Nick Shelness, John\n   Stracke, John Tigue, John Turner, Kevin Wiggen,\
    \ and others.\n"
- title: 22.  Normative References
  contents:
  - "22.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2518]  Goland, Y., Whitehead, E., Faizi, A., Carter, S., and D.\n\
    \              Jensen, \"HTTP Extensions for Distributed Authoring --\n      \
    \        WEBDAV\", RFC 2518, February 1999.\n   [RFC2616]  Fielding, R., Gettys,\
    \ J., Mogul, J., Frystyk, H.,\n              Masinter, L., Leach, P., and T. Berners-Lee,\
    \ \"Hypertext\n              Transfer Protocol -- HTTP/1.1\", RFC 2616, June 1999.\n\
    \   [RFC3253]  Clemm, G., Amsden, J., Ellison, T., Kaler, C., and J.\n       \
    \       Whitehead, \"Versioning Extensions to WebDAV (Web\n              Distributed\
    \ Authoring and Versioning)\", RFC 3253, March\n              2002.\n   [RFC3986]\
    \  Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform\n              Resource\
    \ Identifier (URI): Generic Syntax\", STD 66, RFC\n              3986, January\
    \ 2005.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Jim Whitehead\n   UC Santa Cruz, Dept. of Computer Science\n\
    \   1156 High Street\n   Santa Cruz, CA  95064\n   US\n   EMail: ejw@cse.ucsc.edu\n\
    \   Geoff Clemm\n   IBM\n   20 Maguire Road\n   Lexington, MA  02421\n   US\n\
    \   EMail: geoffrey.clemm@us.ibm.com\n   Julian F. Reschke (editor)\n   greenbytes\
    \ GmbH\n   Hafenweg 16\n   Muenster, NW  48155\n   Germany\n   Phone: +49 251\
    \ 2807760\n   Fax:   +49 251 2807761\n   EMail: julian.reschke@greenbytes.de\n\
    \   URI:   http://greenbytes.de/tech/webdav/\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
