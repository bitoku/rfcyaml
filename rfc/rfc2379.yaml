- title: __initial_text__
  contents:
  - '                RSVP over ATM Implementation Guidelines

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet Best Current Practices\
    \ for the\n   Internet Community, and requests discussion and suggestions for\n\
    \   improvements.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo presents specific implementation guidelines for running\n\
    \   RSVP over ATM switched virtual circuits (SVCs).  The general problem\n   is\
    \ discussed in [6].  Implementation requirements are discussed in\n   [2].  Integrated\
    \ Services to ATM service mappings are covered in [3].\n   The full set of documents\
    \ present the background and information\n   needed to implement Integrated Services\
    \ and RSVP over ATM.\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   This memo discusses running IP over ATM in an environment\
    \ where SVCs\n   are used to support QoS flows and RSVP is used as the internet\
    \ level\n   QoS signaling protocol.  It applies when using CLIP/ION, LANE2.0 and\n\
    \   MPOA methods for supporting IP over ATM.  The general issues related\n   to\
    \ running RSVP[4] over ATM have been covered in several papers\n   including [6]\
    \ and other earlier work.  This document is intended as a\n   companion to [6,2]\
    \ and as a guide to implementers.  The reader should\n   be familiar with both\
    \ documents.\n   This document provides a recommended set of functionality for\n\
    \   implementations using ATM UNI3.x and 4.0, while allowing for more\n   sophisticated\
    \ approaches.  We expect some vendors to additionally\n   provide some of the\
    \ more sophisticated approaches described in [6],\n   and some networks to only\
    \ make use of such approaches.  The\n   recommended set of functionality is defined\
    \ to ensure predictability\n   and interoperability between different implementations.\
    \  Requirements\n   for RSVP over ATM implementations are provided in [2].\n \
    \  This document uses the same terms and assumption stated in [2].\n   Additionally,\
    \ the key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",\n   \"SHALL NOT\"\
    , \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in\
    \ this document are to be interpreted as described in RFC\n   2119 [5].\n"
- title: 2. Implementation Recommendations
  contents:
  - "2. Implementation Recommendations\n   This section provides implementation guidelines\
    \ for implementation of\n   RSVP over ATM.  Several recommendations are common\
    \ for all, RSVP\n   sessions, both unicast and multicast.  There are also recommendations\n\
    \   that are unique to unicast and multicast session types.\n"
- title: 2.1 RSVP Message VC Usage
  contents:
  - "2.1 RSVP Message VC Usage\n   The general issues related to which VC should be\
    \ used for RSVP\n   messages is covered in [6]. It discussed several implementation\n\
    \   options including: mixed control and data, single control VC per\n   session,\
    \  single control VC multiplexed among sessions, and multiple\n   VCs multiplexed\
    \ among sessions.  QoS for control VCs was also\n   discussed.  The general discussion\
    \ is not repeated here and [6]\n   should be reviewed for detailed information.\n\
    \   RSVP over ATM implementations SHOULD send RSVP control (messages)\n   over\
    \ the best effort data path, see figure 1.  It is permissible to\n   allow a user\
    \ to override this behavior.  The stated approach\n   minimizes VC requirements\
    \ since the best effort data path will need\n   to exist in order for RSVP sessions\
    \ to be established and in order\n   for RSVP reservations to be initiated.  The\
    \ specific best effort\n   paths that will be used by RSVP are: for unicast, the\
    \ same VC used to\n   reach the unicast destination; and for multicast, the same\
    \ VC that is\n   used for best effort traffic destined to the IP multicast group.\n\
    \   Note that for multicast there may be another best effort VC that is\n   used\
    \ to carry session data traffic, i.e., for data that is both in\n   the multicast\
    \ group and matching a sessions protocol and port.\n                         \
    \   Data Flow ==========>\n                                   QoS VCs\n      \
    \              +-----+    -------------->   +----+\n                    |    \
    \ |  -------------->     |    |\n                    | Src |                 \
    \     | R1 |\n                    |     |   Best Effort VC(s)  |    |\n      \
    \              +-----+  <-----------------> +----+\n                         \
    \        /\\\n                                 ||\n                          \
    \       ||\n                             RSVP Control\n                      \
    \         Messages\n                  Figure 1: RSVP Control Message VC Usage\n\
    \   The disadvantage of this approach is that best effort VCs may not\n   provide\
    \ the reliability that RSVP needs.  However the best effort\n   path is expected\
    \ to satisfy RSVP reliability requirements in most\n   networks. Especially since\
    \ RSVP allows for a certain amount of packet\n   loss without any loss of state\
    \ synchronization.\n"
- title: 2.2 Aggregation
  contents:
  - "2.2 Aggregation\n   As discussed in [6], data associated with multiple RSVP sessions\
    \ can\n   be sent using the same shared VCs. Implementation of such\n   \"aggregation\"\
    \ models is still a matter for research.  Therefore, RSVP\n   over ATM implementations\
    \ SHOULD use independent VCs for each RSVP\n   reservation.\n"
- title: 2.3 Short-Cuts
  contents:
  - "2.3 Short-Cuts\n   Short-cuts allow ATM attached routers and hosts to directly\
    \ establish\n   point-to-point VCs across LIS boundaries, i.e., the VC end-points\
    \ are\n   on different IP subnets. Short-cut support for unicast traffic has\n\
    \   been defined in [7] and [1].  The ability for short-cuts and RSVP to\n   interoperate\
    \ has been raised as a general question.  The area of\n   concern is the ability\
    \ to handle asymmetric short-cuts.  Specifically\n   how RSVP can handle the case\
    \ where a downstream short-cut may not\n   have a matching upstream short-cut.\
    \  In this case, which is shown in\n   figure 2, PATH and RESV messages following\
    \ different paths.\n                       ______\n                      /   \
    \   \\\n           +-------- / Router \\ <-------+\n           |         \\  \
    \      /         |   <....... RESVs Follow\n           |          \\______/  \
    \        |            Hop-by-hop Path\n           |                          \
    \  |\n           |                            |\n           V           QoS VCs\
    \          |\n        +-----+    ==============>   +----+\n        |     |  ==============>\
    \     |    |\n        | Src |                      | R1 |\n        |     |   Best\
    \ Effort VC(s)  |    |\n        +-----+  <=================> +----+\n        \
    \             /\\\n                     ::                        Data Paths:\n\
    \                     ::                        ----> Hop-by-hop (routed)\n  \
    \             PATHs and Data                  ====> Short-cut\n              Follow\
    \ Short-cut\n                     Path\n      Figure 2: Asymmetric RSVP Message\
    \ Forwarding With ATM Short-Cuts\n   Examination of RSVP shows that the protocol\
    \ already includes\n   mechanisms that allows support of the asymmetric paths.\
    \  The\n   mechanism is the same one used to support RESV messages arriving at\n\
    \   the wrong router and the wrong interface. RSVP messages are only\n   processed\
    \ when they arrive at the proper interface. When messages\n   arrive on the wrong\
    \ interface, they are forwarded by RSVP.  The\n   proper interface is indicated\
    \ in the NHOP object of the message. So,\n   existing RSVP mechanisms will support\
    \ the asymmetric paths that can\n   occur when using short-cuts.\n   The short-cut\
    \ model of VC establishment still poses several issues\n   when running with RSVP.\
    \ The major issues are dealing with established\n   best effort short-cuts, when\
    \ to establish short-cuts, and QoS only\n   short-cuts. These issues will need\
    \ to be addressed by RSVP\n   implementations.\n   The key issue to be addressed\
    \ by RSVP over ATM implementations is\n   when to establish a short-cut for a\
    \ QoS data flow.  RSVP over ATM\n   implementations SHOULD simply follow best\
    \ effort traffic. When a\n   short-cut has been established for best effort traffic\
    \ to a\n   destination or next-hop, that same end-point SHOULD be used when\n\
    \   setting up RSVP triggered VCs for QoS traffic to the same destination\n  \
    \ or next-hop. This will happen naturally when PATH messages are\n   forwarded\
    \ over the best effort short-cut.  Note that in this\n   approach, when best effort\
    \ short-cuts are never established, RSVP\n   triggered QoS short-cuts will also\
    \ never be established.\n"
- title: 2.4 Data VC Management for Heterogeneous Sessions
  contents:
  - "2.4 Data VC Management for Heterogeneous Sessions\n   Heterogeneous sessions\
    \ can only occur with multicast RSVP sessions.\n   The issues relating to data\
    \ VC management of heterogeneous sessions\n   are covered in detail in [6] and\
    \ are not repeated in this document.\n   In summary, heterogeneity occurs when\
    \ receivers request different\n   levels of QoS within a single session and also\
    \ when some receivers do\n   not request any QoS.  Both types of heterogeneity\
    \ are shown in figure\n   3.\n                                    +----+\n   \
    \                        +------> | R1 |\n                           |       \
    \ +----+\n                           |\n                           |        +----+\n\
    \              +-----+ -----+   +--> | R2 |\n              |     | ---------+\
    \    +----+        Receiver Request Types:\n              | Src |            \
    \                 ---->  QoS 1 and QoS 2\n              |     | .........+   \
    \ +----+        ....>  Best-Effort\n              +-----+ .....+   +..> | R3 |\n\
    \                           :        +----+\n                       /\\  :\n \
    \                      ||  :        +----+\n                       ||  +......>\
    \ | R4 |\n                       ||           +----+\n                     Single\n\
    \                  IP Mulicast\n                     Group\n                 \
    \   Figure 3: Types of Multicast Receivers\n   [6] provides four models for dealing\
    \ with heterogeneity: full\n   heterogeneity,  limited heterogeneity, homogeneous,\
    \ and modified\n   homogeneous models.  The key issue to be addressed by an\n\
    \   implementation is providing requested QoS downstream. One of, or some\n  \
    \ combination of, the discussed models [6] may be used to provide the\n   requested\
    \ QoS.  Unfortunately, none of the described models is the\n   right answer for\
    \ all cases.  For some networks, e.g.  public WANs, it\n   is likely that the\
    \ limited heterogeneous model or a hybrid limited-\n   full heterogeneous model\
    \ will be desired.  In other networks, e.g.\n   LANs, it is likely that a the\
    \ modified homogeneous model will be\n   desired.\n   Since there is not one model\
    \ that satisfies all cases,\n   implementations SHOULD implement one of either\
    \ the limited\n   heterogeneity model or the modified homogeneous model.\n   Implementations\
    \ SHOULD support both approaches and provide the\n   ability to select which method\
    \ is actually used, but are not required\n   to do so.\n"
- title: 3. Security Considerations
  contents:
  - "3. Security Considerations\n   The same considerations stated in [4] and [8]\
    \ apply to this document.\n   There are no additional security issues raised in\
    \ this document.\n"
- title: 4. Acknowledgments
  contents:
  - "4. Acknowledgments\n   This work is based on earlier drafts and comments from\
    \ the ISSLL\n   working group.  The author would like to acknowledge their\n \
    \  contribution, most notably Steve Berson who coauthored one of the\n   drafts.\n"
- title: 5. Author's Address
  contents:
  - "5. Author's Address\n   Lou Berger\n   FORE Systems\n   1595 Spring Hill Road\n\
    \   5th Floor\n   Vienna, VA 22182\n   Phone: +1 703-245-4527\n   EMail: lberger@fore.com\n"
- title: REFERENCES
  contents:
  - "REFERENCES\n   [1] The ATM Forum, \"MPOA Baseline Version 1\", May 1997.\n  \
    \ [2] Berger, L., \"RSVP over ATM Implementation Requirements\",\n       RFC 2380,\
    \ August 1998.\n   [3] Borden, M., and M. Garrett, \"Interoperation of Controlled-Load\n\
    \       and Guaranteed-Service with ATM\", RFC 2381, August 1998.\n   [4] Braden,\
    \ R., Zhang, L., Berson, S., Herzog, S., and S. Jamin,\n       \"Resource ReSerVation\
    \ Protocol (RSVP) -- Version 1 Functional\n       Specification\", RFC 2205, September\
    \ 1997.\n   [5] Bradner, S., \"Key words for use in RFCs to Indicate Requirement\n\
    \       Levels\", BCP 14, RFC 2119, March 1997.\n   [6] Crawley, E., Berger, L.,\
    \ Berson, S., Baker, F., Borden, M., and\n       J. Krawczyk, \"A Framework for\
    \ Integrated Services and RSVP over\n       ATM\", RFC 2382, August 1998.\n  \
    \ [7] Luciani, J., Katz, D., Piscitello, D., and B. Cole, \"NBMA Next\n      \
    \ Hop Resolution Protocol (NHRP)\", RFC 2332, April 1998.\n   [8] Perez, M., Liaw,\
    \ F., Grossman, D., Mankin, A., Hoffman, E., and\n       A. Malis, \"ATM Signalling\
    \ Support for IP over ATM\", RFC 1755,\n       February 1995.\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (1998).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
