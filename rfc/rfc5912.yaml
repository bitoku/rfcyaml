- title: __initial_text__
  contents:
  - ' New ASN.1 Modules for the Public Key Infrastructure Using X.509 (PKIX)

    '
- title: Abstract
  contents:
  - "Abstract\n   The Public Key Infrastructure using X.509 (PKIX) certificate format,\n\
    \   and many associated formats, are expressed using ASN.1.  The current\n   ASN.1\
    \ modules conform to the 1988 version of ASN.1.  This document\n   updates those\
    \ ASN.1 modules to conform to the 2002 version of ASN.1.\n   There are no bits-on-the-wire\
    \ changes to any of the formats; this is\n   simply a change to the syntax.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc5912.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n     1.1.  Design Notes  . . . . . . . . . . . . . . . . . .\
    \ . . . .   4\n   2.  ASN.1 Module PKIX-CommonTypes . . . . . . . . . . . . .\
    \ . . .   5\n   3.  ASN.1 Module AlgorithmInformation . . . . . . . . . . . .\
    \ . .   8\n   4.  ASN.1 Module for RFC 2560 . . . . . . . . . . . . . . . . .\
    \ .  18\n   5.  ASN.1 Module for RFC 2986 . . . . . . . . . . . . . . . . . .\
    \  22\n   6.  ASN.1 Module for RFC 3279 . . . . . . . . . . . . . . . . . .  23\n\
    \   7.  ASN.1 Module for RFC 3852 (Attribute Certificate v1)  . . . .  34\n  \
    \ 8.  ASN.1 Module for RFC 4055 . . . . . . . . . . . . . . . . . .  36\n   9.\
    \  ASN.1 Module for RFC 4210 . . . . . . . . . . . . . . . . . .  42\n   10. ASN.1\
    \ Module for RFC 4211 . . . . . . . . . . . . . . . . . .  53\n   11. ASN.1 Module\
    \ for RFC 5055 . . . . . . . . . . . . . . . . . .  61\n   12. ASN.1 Module for\
    \ RFC 5272 . . . . . . . . . . . . . . . . . .  74\n   13. ASN.1 Module for RFC\
    \ 5755 . . . . . . . . . . . . . . . . . .  85\n   14. ASN.1 Module for RFC 5280,\
    \ Explicit and Implicit  . . . . . .  91\n   15. Security Considerations . . .\
    \ . . . . . . . . . . . . . . . . 115\n   16. Normative References  . . . . .\
    \ . . . . . . . . . . . . . . . 116\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Some developers would like the IETF to use the latest version\
    \ of\n   ASN.1 in its standards.  Most of the RFCs that relate to security\n \
    \  protocols still use ASN.1 from the 1988 standard, which has been\n   deprecated.\
    \  This is particularly true for the standards that relate\n   to PKIX, Cryptographic\
    \ Message Syntax (CMS), and S/MIME.\n   This document updates the following RFCs\
    \ to use ASN.1 modules that\n   conform to the 2002 version of ASN.1 [ASN1-2002].\
    \  Note that not all\n   the modules are updated; some are included to simply\
    \ make the set\n   complete.\n   o  RFC 2560, PKIX Online Certificate Status Protocol\
    \ (OCSP) [RFC2560]\n   o  RFC 2986, PKCS #10 certificate request [RFC2986]\n \
    \  o  RFC 3279, PKIX algorithms and identifier [RFC3279]\n   o  RFC 3852, contains\
    \ PKIX attribute certificates, version 1\n      [RFC3852]\n   o  RFC 4055, Additional\
    \ Algorithms and Identifiers for RSA\n      Cryptography [RFC4055]\n   o  RFC\
    \ 4210, PKIX CMP (Certificate Management Protocol) [RFC4210]\n   o  RFC 4211,\
    \ PKIX CRMF (Certificate Request Message Format) [RFC4211]\n   o  RFC 5055, PKIX\
    \ SCVP (Server-based Certificate Validation Protocol)\n      [RFC5055]\n   o \
    \ RFC 5272, Certificate Management over CMS (CMC) [RFC5272]\n   o  RFC 5280, PKIX\
    \ certificate and Certificate Revocation List (CRL)\n      profile [RFC5280] (both\
    \ the implicit and explicit modules)\n   o  RFC 5755, PKIX attribute certificates,\
    \ version 2 [RFC5755]\n   Note that some of the modules in this document get some\
    \ of their\n   definitions from places different than the modules in the original\n\
    \   RFCs.  The idea is that these modules, when combined with the modules\n  \
    \ in [RFC5911] can stand on their own and do not need to import\n   definitions\
    \ from anywhere else.  Also note that the ASN.1 modules in\n   this document have\
    \ references in their text comments that need to be\n   looked up in original\
    \ RFCs, and that some of those references may\n   have already been superseded\
    \ by later RFCs.\n   The document also includes a module of common definitions\
    \ called\n   \"PKIX-CommonTypes\".  These definitions are used here and in\n \
    \  [RFC5911].\n   The document also includes a module of common definitions called\n\
    \   \"AlgorithmInformation\".  These definitions are used here and in\n   [RFC5911].\n"
- title: 1.1.  Design Notes
  contents:
  - "1.1.  Design Notes\n   The modules in this document use the object model available\
    \ in the\n   2002 ASN.1 documents to a great extent.  Objects for each of the\n\
    \   different algorithm types are defined.  Also, all of the places where\n  \
    \ the 1988 ASN.1 syntax had ANY holes to allow for variable syntax now\n   use\
    \ objects.\n   Much like the way that the PKIX and S/MIME working groups use the\n\
    \   prefix of id- for object identifiers, this document has also adopted\n   a\
    \ set of two-, three-, and four-letter prefixes to allow for quick\n   identification\
    \ of the type of an object based on its name.  This\n   allows, for example, the\
    \ same back half of the name to be used for\n   the different objects.  Thus,\
    \ \"id-sha1\" is the object identifier,\n   while \"mda-sha1\" is the message\
    \ digest object for \"sha1\".\n   One or more object sets for the different types\
    \ of algorithms are\n   defined.  A single consistent name for each different\
    \ algorithm type\n   is used.  For example, an object set named PublicKeys contains\
    \ the\n   public keys defined in that module.  If no public keys are defined,\n\
    \   then the object set is not created.  When importing these object sets\n  \
    \ into an ASN.1 module, one needs to be able to distinguish between the\n   different\
    \ object sets with the same name.  This is done by using both\n   the module name\
    \ (as specified in the IMPORT statement) and the object\n   set name.  For example,\
    \ in the module for RFC 5280:\n   PublicKeys FROM PKIXAlgs-2008 { 1 3 6 1 5 5\
    \ 7 0 995 }\n   PublicKeys FROM PKIX1-PSS-OAEP-Algorithms { 1 3 6 1 5 5 7  33\
    \ }\n   PublicKeyAlgorithms PUBLIC-KEY ::= { PKIXAlgs-2008.PublicKeys, ...,\n\
    \       PKIX1-PSS-OAEP-Algorithms.PublicKeys }\n"
- title: 2.  ASN.1 Module PKIX-CommonTypes
  contents:
  - "2.  ASN.1 Module PKIX-CommonTypes\n   This section contains a module that is\
    \ imported by many other modules\n   in this document and in [RFC5911].  This\
    \ module does not come from\n   any existing RFC.\n  PKIX-CommonTypes-2009\n \
    \     {iso(1) identified-organization(3) dod(6) internet(1) security(5)\n    \
    \  mechanisms(5) pkix(7) id-mod(0) id-mod-pkixCommon-02(57)}\n  DEFINITIONS EXPLICIT\
    \ TAGS ::=\n  BEGIN\n  --  ATTRIBUTE\n  --\n  --  Describe the set of data associated\
    \ with an attribute of some type\n  --\n  --  &id is an OID identifying the attribute\n\
    \  --  &Type is the ASN.1 type structure for the attribute; not all\n  --    \
    \  attributes have a data structure, so this field is optional\n  --  &minCount\
    \ contains the minimum number of times the attribute can\n  --      occur in an\
    \ AttributeSet\n  --  &maxCount contains the maximum number of times the attribute\
    \ can\n  --      appear in an AttributeSet\n  --      Note: this cannot be automatically\
    \ enforced as the field\n  --      cannot be defaulted to MAX.\n  --  &equality-match\
    \ contains information about how matching should be\n  --      done\n  --\n  --\
    \  Currently we are using two different prefixes for attributes.\n  --\n  -- \
    \ at- for certificate attributes\n  --  aa- for CMS attributes\n  --\n  ATTRIBUTE\
    \ ::= CLASS {\n      &id             OBJECT IDENTIFIER UNIQUE,\n      &Type  \
    \         OPTIONAL,\n      &equality-match MATCHING-RULE OPTIONAL,\n      &minCount\
    \       INTEGER DEFAULT 1,\n      &maxCount       INTEGER OPTIONAL\n  } WITH SYNTAX\
    \ {\n      [TYPE &Type]\n      [EQUALITY MATCHING RULE &equality-match]\n    \
    \  [COUNTS [MIN &minCount] [MAX &maxCount]]\n      IDENTIFIED BY &id\n  }\n  --\
    \ Specification of MATCHING-RULE information object class\n  --\n  MATCHING-RULE\
    \ ::= CLASS {\n    &ParentMatchingRules   MATCHING-RULE OPTIONAL,\n    &AssertionType\
    \         OPTIONAL,\n    &uniqueMatchIndicator  ATTRIBUTE OPTIONAL,\n    &id \
    \                   OBJECT IDENTIFIER UNIQUE\n  }\n  WITH SYNTAX {\n    [PARENT\
    \ &ParentMatchingRules]\n    [SYNTAX &AssertionType]\n    [UNIQUE-MATCH-INDICATOR\
    \ &uniqueMatchIndicator]\n    ID &id\n  }\n  --  AttributeSet\n  --\n  --  Used\
    \ when a set of attributes is to occur.\n  --\n  --  type contains the identifier\
    \ of the attribute\n  --  values contains a set of values where the structure\
    \ of the ASN.1\n  --      is defined by the attribute\n  --\n  --  The parameter\
    \ contains the set of objects describing\n  --      those attributes that can\
    \ occur in this location.\n  --\n  AttributeSet{ATTRIBUTE:AttrSet} ::= SEQUENCE\
    \ {\n      type      ATTRIBUTE.&id({AttrSet}),\n      values    SET SIZE (1..MAX)\
    \ OF ATTRIBUTE.\n                    &Type({AttrSet}{@type})\n  }\n  --  SingleAttribute\n\
    \  --\n  --  Used for a single valued attribute\n  --\n  --  The parameter contains\
    \ the set of objects describing the\n  --      attributes that can occur in this\
    \ location\n  --\n  SingleAttribute{ATTRIBUTE:AttrSet} ::= SEQUENCE {\n      type\
    \      ATTRIBUTE.&id({AttrSet}),\n      value     ATTRIBUTE.&Type({AttrSet}{@type})\n\
    \  }\n  --  EXTENSION\n  --\n  --  This class definition is used to describe the\
    \ association of\n  --      object identifier and ASN.1 type structure for extensions\n\
    \  --\n  --  All extensions are prefixed with ext-\n  --\n  --  &id contains the\
    \ object identifier for the extension\n  --  &ExtnType specifies the ASN.1 type\
    \ structure for the extension\n  --  &Critical contains the set of legal values\
    \ for the critical field.\n  --      This is normally {TRUE|FALSE} but in some\
    \ instances may be\n  --      restricted to just one of these values.\n  --\n\
    \  EXTENSION ::= CLASS {\n      &id  OBJECT IDENTIFIER UNIQUE,\n      &ExtnType,\n\
    \      &Critical    BOOLEAN DEFAULT {TRUE | FALSE }\n  } WITH SYNTAX {\n     \
    \ SYNTAX &ExtnType IDENTIFIED BY &id\n      [CRITICALITY &Critical]\n  }\n  --\
    \  Extensions\n  --\n  --  Used for a sequence of extensions.\n  --\n  --  The\
    \ parameter contains the set of legal extensions that can\n  --  occur in this\
    \ sequence.\n  --\n  Extensions{EXTENSION:ExtensionSet} ::=\n      SEQUENCE SIZE\
    \ (1..MAX) OF Extension{{ExtensionSet}}\n  --  Extension\n  --\n  --  Used for\
    \ a single extension\n  --\n  --  The parameter contains the set of legal extensions\
    \ that can\n  --      occur in this extension.\n  --\n  --  The restriction on\
    \ the critical field has been commented out\n  --  the authors are not completely\
    \ sure it is correct.\n  --  The restriction could be done using custom code rather\
    \ than\n  --  compiler-generated code, however.\n  --\n  Extension{EXTENSION:ExtensionSet}\
    \ ::= SEQUENCE {\n      extnID      EXTENSION.&id({ExtensionSet}),\n      critical\
    \    BOOLEAN\n  --                     (EXTENSION.&Critical({ExtensionSet}{@extnID}))\n\
    \                       DEFAULT FALSE,\n      extnValue   OCTET STRING (CONTAINING\n\
    \                  EXTENSION.&ExtnType({ExtensionSet}{@extnID}))\n           \
    \       --  contains the DER encoding of the ASN.1 value\n                  --\
    \  corresponding to the extension type identified\n                  --  by extnID\n\
    \  }\n  --  Security Category\n  --\n  --  Security categories are used both for\
    \ specifying clearances and\n  --  for labeling objects.  We move this here from\
    \ RFC 3281 so that\n  --  they will use a common single object class to express\
    \ this\n  --  information.\n  --\n  SECURITY-CATEGORY ::= TYPE-IDENTIFIER\n  SecurityCategory{SECURITY-CATEGORY:Supported}\
    \ ::= SEQUENCE {\n      type      [0]  IMPLICIT SECURITY-CATEGORY.\n         \
    \     &id({Supported}),\n      value     [1]  EXPLICIT SECURITY-CATEGORY.\n  \
    \            &Type({Supported}{@type})\n  }\n  END\n"
- title: 3.  ASN.1 Module AlgorithmInformation
  contents:
  - "3.  ASN.1 Module AlgorithmInformation\n   This section contains a module that\
    \ is imported by many other modules\n   in this document.  Note that this module\
    \ is also given in [RFC5911].\n   This module does not come from any existing\
    \ RFC.\n"
- title: AlgorithmInformation-2009
  contents:
  - "AlgorithmInformation-2009\n    {iso(1) identified-organization(3) dod(6) internet(1)\
    \ security(5)\n    mechanisms(5) pkix(7) id-mod(0)\n    id-mod-algorithmInformation-02(58)}\n"
- title: DEFINITIONS EXPLICIT TAGS ::=
  contents:
  - 'DEFINITIONS EXPLICIT TAGS ::=

    '
- title: BEGIN
  contents:
  - 'BEGIN

    '
- title: EXPORTS ALL;
  contents:
  - 'EXPORTS ALL;

    '
- title: IMPORTS
  contents:
  - 'IMPORTS

    '
- title: KeyUsage
  contents:
  - 'KeyUsage

    '
- title: FROM PKIX1Implicit-2009
  contents:
  - "FROM PKIX1Implicit-2009\n    {iso(1) identified-organization(3) dod(6) internet(1)\n\
    \    security(5) mechanisms(5) pkix(7) id-mod(0)\n    id-mod-pkix1-implicit-02(59)}\
    \ ;\n"
- title: '--  Suggested prefixes for algorithm objects are:'
  contents:
  - '--  Suggested prefixes for algorithm objects are:

    '
- title: --
  contents:
  - '--

    '
- title: --  mda-   Message Digest Algorithms
  contents:
  - '--  mda-   Message Digest Algorithms

    '
- title: --  sa-    Signature Algorithms
  contents:
  - '--  sa-    Signature Algorithms

    '
- title: --  kta-   Key Transport Algorithms (Asymmetric)
  contents:
  - '--  kta-   Key Transport Algorithms (Asymmetric)

    '
- title: --  kaa-   Key Agreement Algorithms  (Asymmetric)
  contents:
  - '--  kaa-   Key Agreement Algorithms  (Asymmetric)

    '
- title: --  kwa-   Key Wrap Algorithms (Symmetric)
  contents:
  - '--  kwa-   Key Wrap Algorithms (Symmetric)

    '
- title: --  kda-   Key Derivation Algorithms
  contents:
  - '--  kda-   Key Derivation Algorithms

    '
- title: --  maca-  Message Authentication Code Algorithms
  contents:
  - '--  maca-  Message Authentication Code Algorithms

    '
- title: --  pk-    Public Key
  contents:
  - '--  pk-    Public Key

    '
- title: --  cea-   Content (symmetric) Encryption Algorithms
  contents:
  - '--  cea-   Content (symmetric) Encryption Algorithms

    '
- title: --  cap-   S/MIME Capabilities
  contents:
  - '--  cap-   S/MIME Capabilities

    '
- title: ParamOptions ::= ENUMERATED {
  contents:
  - "ParamOptions ::= ENUMERATED {\n   required,         -- Parameters MUST be encoded\
    \ in structure\n   preferredPresent, -- Parameters SHOULD be encoded in structure\n\
    \   preferredAbsent,  -- Parameters SHOULD NOT be encoded in structure\n   absent,\
    \           -- Parameters MUST NOT be encoded in structure\n   inheritable,  \
    \    -- Parameters are inherited if not present\n   optional,         -- Parameters\
    \ MAY be encoded in the structure\n   ...\n"
- title: '}'
  contents:
  - '}

    '
- title: --  DIGEST-ALGORITHM
  contents:
  - '--  DIGEST-ALGORITHM

    '
- title: --
  contents:
  - '--

    '
- title: --  Describes the basic information for ASN.1 and a digest
  contents:
  - '--  Describes the basic information for ASN.1 and a digest

    '
- title: --      algorithm.
  contents:
  - '--      algorithm.

    '
- title: --
  contents:
  - '--

    '
- title: --  &id - contains the OID identifying the digest algorithm
  contents:
  - '--  &id - contains the OID identifying the digest algorithm

    '
- title: --  &Params - if present, contains the type for the algorithm
  contents:
  - '--  &Params - if present, contains the type for the algorithm

    '
- title: --               parameters; if absent, implies no parameters
  contents:
  - '--               parameters; if absent, implies no parameters

    '
- title: --  &paramPresence - parameter presence requirement
  contents:
  - '--  &paramPresence - parameter presence requirement

    '
- title: --
  contents:
  - '--

    '
- title: --  Additional information such as the length of the hash could have
  contents:
  - '--  Additional information such as the length of the hash could have

    '
- title: --      been encoded.  Without a clear understanding of what information
  contents:
  - '--      been encoded.  Without a clear understanding of what information

    '
- title: --      is needed by applications, such extraneous information was not
  contents:
  - '--      is needed by applications, such extraneous information was not

    '
- title: --      considered to be of sufficent importance.
  contents:
  - '--      considered to be of sufficent importance.

    '
- title: --
  contents:
  - '--

    '
- title: '--  Example:'
  contents:
  - '--  Example:

    '
- title: --  mda-sha1 DIGEST-ALGORITHM ::= {
  contents:
  - '--  mda-sha1 DIGEST-ALGORITHM ::= {

    '
- title: --      IDENTIFIER id-sha1
  contents:
  - '--      IDENTIFIER id-sha1

    '
- title: --      PARAMS TYPE NULL ARE preferredAbsent
  contents:
  - '--      PARAMS TYPE NULL ARE preferredAbsent

    '
- title: --  }
  contents:
  - '--  }

    '
- title: DIGEST-ALGORITHM ::= CLASS {
  contents:
  - "DIGEST-ALGORITHM ::= CLASS {\n    &id                 OBJECT IDENTIFIER UNIQUE,\n\
    \    &Params             OPTIONAL,\n    &paramPresence      ParamOptions DEFAULT\
    \ absent\n"
- title: '} WITH SYNTAX {'
  contents:
  - "} WITH SYNTAX {\n    IDENTIFIER &id\n    [PARAMS [TYPE &Params] ARE &paramPresence\
    \ ]\n"
- title: '}'
  contents:
  - '}

    '
- title: --  SIGNATURE-ALGORITHM
  contents:
  - '--  SIGNATURE-ALGORITHM

    '
- title: --
  contents:
  - '--

    '
- title: --  Describes the basic properties of a signature algorithm
  contents:
  - '--  Describes the basic properties of a signature algorithm

    '
- title: --
  contents:
  - '--

    '
- title: --  &id - contains the OID identifying the signature algorithm
  contents:
  - '--  &id - contains the OID identifying the signature algorithm

    '
- title: --  &Value - contains a type definition for the value structure of
  contents:
  - '--  &Value - contains a type definition for the value structure of

    '
- title: --              the signature; if absent, implies that no ASN.1
  contents:
  - '--              the signature; if absent, implies that no ASN.1

    '
- title: --              encoding is performed on the value
  contents:
  - '--              encoding is performed on the value

    '
- title: --  &Params - if present, contains the type for the algorithm
  contents:
  - '--  &Params - if present, contains the type for the algorithm

    '
- title: --               parameters; if absent, implies no parameters
  contents:
  - '--               parameters; if absent, implies no parameters

    '
- title: --  &paramPresence - parameter presence requirement
  contents:
  - '--  &paramPresence - parameter presence requirement

    '
- title: --  &HashSet - The set of hash algorithms used with this
  contents:
  - '--  &HashSet - The set of hash algorithms used with this

    '
- title: --                  signature algorithm
  contents:
  - '--                  signature algorithm

    '
- title: --  &PublicKeySet - the set of public key algorithms for this
  contents:
  - '--  &PublicKeySet - the set of public key algorithms for this

    '
- title: --                  signature algorithm
  contents:
  - '--                  signature algorithm

    '
- title: --  &smimeCaps - contains the object describing how the S/MIME
  contents:
  - '--  &smimeCaps - contains the object describing how the S/MIME

    '
- title: --              capabilities are presented.
  contents:
  - '--              capabilities are presented.

    '
- title: --
  contents:
  - '--

    '
- title: '--  Example:'
  contents:
  - '--  Example:

    '
- title: --  sig-RSA-PSS SIGNATURE-ALGORITHM ::= {
  contents:
  - '--  sig-RSA-PSS SIGNATURE-ALGORITHM ::= {

    '
- title: --     IDENTIFIER id-RSASSA-PSS
  contents:
  - '--     IDENTIFIER id-RSASSA-PSS

    '
- title: --     PARAMS TYPE RSASSA-PSS-params ARE required
  contents:
  - '--     PARAMS TYPE RSASSA-PSS-params ARE required

    '
- title: --     HASHES { mda-sha1 | mda-md5, ... }
  contents:
  - '--     HASHES { mda-sha1 | mda-md5, ... }

    '
- title: --     PUBLIC-KEYS { pk-rsa | pk-rsa-pss }
  contents:
  - '--     PUBLIC-KEYS { pk-rsa | pk-rsa-pss }

    '
- title: -- }
  contents:
  - '-- }

    '
- title: SIGNATURE-ALGORITHM ::= CLASS {
  contents:
  - "SIGNATURE-ALGORITHM ::= CLASS {\n    &id             OBJECT IDENTIFIER UNIQUE,\n\
    \    &Value          OPTIONAL,\n    &Params         OPTIONAL,\n    &paramPresence\
    \  ParamOptions DEFAULT absent,\n    &HashSet        DIGEST-ALGORITHM OPTIONAL,\n\
    \    &PublicKeySet   PUBLIC-KEY OPTIONAL,\n    &smimeCaps      SMIME-CAPS OPTIONAL\n"
- title: '} WITH SYNTAX {'
  contents:
  - "} WITH SYNTAX {\n    IDENTIFIER &id\n    [VALUE &Value]\n    [PARAMS [TYPE &Params]\
    \ ARE &paramPresence ]\n    [HASHES &HashSet]\n    [PUBLIC-KEYS &PublicKeySet]\n\
    \    [SMIME-CAPS &smimeCaps]\n"
- title: '}'
  contents:
  - '}

    '
- title: --  PUBLIC-KEY
  contents:
  - '--  PUBLIC-KEY

    '
- title: --
  contents:
  - '--

    '
- title: --  Describes the basic properties of a public key
  contents:
  - '--  Describes the basic properties of a public key

    '
- title: --
  contents:
  - '--

    '
- title: --  &id - contains the OID identifying the public key
  contents:
  - '--  &id - contains the OID identifying the public key

    '
- title: --  &KeyValue - contains the type for the key value
  contents:
  - '--  &KeyValue - contains the type for the key value

    '
- title: --  &Params - if present, contains the type for the algorithm
  contents:
  - '--  &Params - if present, contains the type for the algorithm

    '
- title: --               parameters; if absent, implies no parameters
  contents:
  - '--               parameters; if absent, implies no parameters

    '
- title: --  &paramPresence - parameter presence requirement
  contents:
  - '--  &paramPresence - parameter presence requirement

    '
- title: --  &keyUsage - contains the set of bits that are legal for this
  contents:
  - '--  &keyUsage - contains the set of bits that are legal for this

    '
- title: --              key type.  Note that is does not make any statement
  contents:
  - '--              key type.  Note that is does not make any statement

    '
- title: --              about how bits may be paired.
  contents:
  - '--              about how bits may be paired.

    '
- title: --  &PrivateKey - contains a type structure for encoding the private
  contents:
  - '--  &PrivateKey - contains a type structure for encoding the private

    '
- title: --              key information.
  contents:
  - '--              key information.

    '
- title: --
  contents:
  - '--

    '
- title: '--  Example:'
  contents:
  - '--  Example:

    '
- title: --  pk-rsa-pss PUBLIC-KEY ::= {
  contents:
  - '--  pk-rsa-pss PUBLIC-KEY ::= {

    '
- title: --      IDENTIFIER id-RSASSA-PSS
  contents:
  - '--      IDENTIFIER id-RSASSA-PSS

    '
- title: --      KEY RSAPublicKey
  contents:
  - '--      KEY RSAPublicKey

    '
- title: --      PARAMS TYPE RSASSA-PSS-params ARE optional
  contents:
  - '--      PARAMS TYPE RSASSA-PSS-params ARE optional

    '
- title: --      CERT-KEY-USAGE { .... }
  contents:
  - '--      CERT-KEY-USAGE { .... }

    '
- title: --  }
  contents:
  - '--  }

    '
- title: PUBLIC-KEY ::= CLASS {
  contents:
  - "PUBLIC-KEY ::= CLASS {\n    &id             OBJECT IDENTIFIER UNIQUE,\n    &KeyValue\
    \       OPTIONAL,\n    &Params         OPTIONAL,\n    &paramPresence  ParamOptions\
    \ DEFAULT absent,\n    &keyUsage       KeyUsage OPTIONAL,\n    &PrivateKey   \
    \  OPTIONAL\n"
- title: '} WITH SYNTAX {'
  contents:
  - "} WITH SYNTAX {\n    IDENTIFIER &id\n    [KEY &KeyValue]\n    [PARAMS [TYPE &Params]\
    \ ARE &paramPresence]\n    [CERT-KEY-USAGE &keyUsage]\n    [PRIVATE-KEY &PrivateKey]\n"
- title: '}'
  contents:
  - '}

    '
- title: --  KEY-TRANSPORT
  contents:
  - '--  KEY-TRANSPORT

    '
- title: --
  contents:
  - '--

    '
- title: --  Describes the basic properties of a key transport algorithm
  contents:
  - '--  Describes the basic properties of a key transport algorithm

    '
- title: --
  contents:
  - '--

    '
- title: --  &id - contains the OID identifying the key transport algorithm
  contents:
  - '--  &id - contains the OID identifying the key transport algorithm

    '
- title: --  &Params - if present, contains the type for the algorithm
  contents:
  - '--  &Params - if present, contains the type for the algorithm

    '
- title: --               parameters; if absent, implies no parameters
  contents:
  - '--               parameters; if absent, implies no parameters

    '
- title: --  &paramPresence - parameter presence requirement
  contents:
  - '--  &paramPresence - parameter presence requirement

    '
- title: --  &PublicKeySet - specifies which public keys are used with
  contents:
  - '--  &PublicKeySet - specifies which public keys are used with

    '
- title: --                       this algorithm
  contents:
  - '--                       this algorithm

    '
- title: --  &smimeCaps - contains the object describing how the S/MIME
  contents:
  - '--  &smimeCaps - contains the object describing how the S/MIME

    '
- title: --              capabilities are presented.
  contents:
  - '--              capabilities are presented.

    '
- title: --
  contents:
  - '--

    '
- title: '--  Example:'
  contents:
  - '--  Example:

    '
- title: --  kta-rsaTransport KEY-TRANSPORT ::= {
  contents:
  - '--  kta-rsaTransport KEY-TRANSPORT ::= {

    '
- title: --      IDENTIFIER &id
  contents:
  - '--      IDENTIFIER &id

    '
- title: --      PARAMS TYPE NULL ARE required
  contents:
  - '--      PARAMS TYPE NULL ARE required

    '
- title: --      PUBLIC-KEYS  { pk-rsa | pk-rsa-pss }
  contents:
  - '--      PUBLIC-KEYS  { pk-rsa | pk-rsa-pss }

    '
- title: --  }
  contents:
  - '--  }

    '
- title: KEY-TRANSPORT ::= CLASS {
  contents:
  - "KEY-TRANSPORT ::= CLASS {\n    &id                 OBJECT IDENTIFIER UNIQUE,\n\
    \    &Params             OPTIONAL,\n    &paramPresence      ParamOptions DEFAULT\
    \ absent,\n    &PublicKeySet       PUBLIC-KEY OPTIONAL,\n    &smimeCaps      \
    \    SMIME-CAPS OPTIONAL\n"
- title: '} WITH SYNTAX {'
  contents:
  - "} WITH SYNTAX {\n    IDENTIFIER &id\n    [PARAMS [TYPE &Params] ARE &paramPresence]\n\
    \    [PUBLIC-KEYS &PublicKeySet]\n    [SMIME-CAPS &smimeCaps]\n"
- title: '}'
  contents:
  - '}

    '
- title: --  KEY-AGREE
  contents:
  - '--  KEY-AGREE

    '
- title: --
  contents:
  - '--

    '
- title: --  Describes the basic properties of a key agreement algorithm
  contents:
  - '--  Describes the basic properties of a key agreement algorithm

    '
- title: --
  contents:
  - '--

    '
- title: --  &id - contains the OID identifying the key agreement algorithm
  contents:
  - '--  &id - contains the OID identifying the key agreement algorithm

    '
- title: --  &Params - if present, contains the type for the algorithm
  contents:
  - '--  &Params - if present, contains the type for the algorithm

    '
- title: --               parameters; if absent, implies no parameters
  contents:
  - '--               parameters; if absent, implies no parameters

    '
- title: --  &paramPresence - parameter presence requirement
  contents:
  - '--  &paramPresence - parameter presence requirement

    '
- title: --  &PublicKeySet - specifies which public keys are used with
  contents:
  - '--  &PublicKeySet - specifies which public keys are used with

    '
- title: --                        this algorithm
  contents:
  - '--                        this algorithm

    '
- title: --  &Ukm - type of user keying material used
  contents:
  - '--  &Ukm - type of user keying material used

    '
- title: --  &ukmPresence - specifies the requirements to define the UKM field
  contents:
  - '--  &ukmPresence - specifies the requirements to define the UKM field

    '
- title: --  &smimeCaps - contains the object describing how the S/MIME
  contents:
  - '--  &smimeCaps - contains the object describing how the S/MIME

    '
- title: --              capabilities are presented.
  contents:
  - '--              capabilities are presented.

    '
- title: --
  contents:
  - '--

    '
- title: '--  Example:'
  contents:
  - '--  Example:

    '
- title: --  kaa-dh-static-ephemeral KEY-AGREE ::= {
  contents:
  - '--  kaa-dh-static-ephemeral KEY-AGREE ::= {

    '
- title: --      IDENTIFIER id-alg-ESDH
  contents:
  - '--      IDENTIFIER id-alg-ESDH

    '
- title: --      PARAMS TYPE KeyWrapAlgorithm ARE required
  contents:
  - '--      PARAMS TYPE KeyWrapAlgorithm ARE required

    '
- title: --      PUBLIC-KEYS {
  contents:
  - '--      PUBLIC-KEYS {

    '
- title: --         {IDENTIFIER dh-public-number KEY DHPublicKey
  contents:
  - '--         {IDENTIFIER dh-public-number KEY DHPublicKey

    '
- title: --            PARAMS TYPE DHDomainParameters ARE inheritable }
  contents:
  - '--            PARAMS TYPE DHDomainParameters ARE inheritable }

    '
- title: --      }
  contents:
  - '--      }

    '
- title: --      - - UKM should be present but is not separately ASN.1-encoded
  contents:
  - '--      - - UKM should be present but is not separately ASN.1-encoded

    '
- title: --      UKM ARE preferredPresent
  contents:
  - '--      UKM ARE preferredPresent

    '
- title: --  }
  contents:
  - '--  }

    '
- title: KEY-AGREE ::= CLASS {
  contents:
  - "KEY-AGREE ::= CLASS {\n    &id             OBJECT IDENTIFIER UNIQUE,\n    &Params\
    \         OPTIONAL,\n    &paramPresence  ParamOptions DEFAULT absent,\n    &PublicKeySet\
    \   PUBLIC-KEY OPTIONAL,\n    &Ukm            OPTIONAL,\n    &ukmPresence    ParamOptions\
    \ DEFAULT absent,\n    &smimeCaps      SMIME-CAPS OPTIONAL\n"
- title: '} WITH SYNTAX {'
  contents:
  - "} WITH SYNTAX {\n    IDENTIFIER &id\n    [PARAMS [TYPE &Params] ARE &paramPresence]\n\
    \    [PUBLIC-KEYS &PublicKeySet]\n    [UKM [TYPE &Ukm] ARE &ukmPresence]\n   \
    \ [SMIME-CAPS &smimeCaps]\n"
- title: '}'
  contents:
  - '}

    '
- title: --  KEY-WRAP
  contents:
  - '--  KEY-WRAP

    '
- title: --
  contents:
  - '--

    '
- title: --  Describes the basic properties of a key wrap algorithm
  contents:
  - '--  Describes the basic properties of a key wrap algorithm

    '
- title: --
  contents:
  - '--

    '
- title: --  &id - contains the OID identifying the key wrap algorithm
  contents:
  - '--  &id - contains the OID identifying the key wrap algorithm

    '
- title: --  &Params - if present, contains the type for the algorithm
  contents:
  - '--  &Params - if present, contains the type for the algorithm

    '
- title: --               parameters; if absent, implies no parameters
  contents:
  - '--               parameters; if absent, implies no parameters

    '
- title: --  &paramPresence - parameter presence requirement
  contents:
  - '--  &paramPresence - parameter presence requirement

    '
- title: --  &smimeCaps - contains the object describing how the S/MIME
  contents:
  - '--  &smimeCaps - contains the object describing how the S/MIME

    '
- title: --              capabilities are presented.
  contents:
  - '--              capabilities are presented.

    '
- title: --
  contents:
  - '--

    '
- title: '--  Example:'
  contents:
  - '--  Example:

    '
- title: --  kwa-cms3DESwrap KEY-WRAP ::= {
  contents:
  - '--  kwa-cms3DESwrap KEY-WRAP ::= {

    '
- title: --      IDENTIFIER id-alg-CMS3DESwrap
  contents:
  - '--      IDENTIFIER id-alg-CMS3DESwrap

    '
- title: --      PARAMS TYPE NULL ARE required
  contents:
  - '--      PARAMS TYPE NULL ARE required

    '
- title: --  }
  contents:
  - '--  }

    '
- title: KEY-WRAP ::= CLASS {
  contents:
  - "KEY-WRAP ::= CLASS {\n    &id                OBJECT IDENTIFIER UNIQUE,\n    &Params\
    \            OPTIONAL,\n    &paramPresence     ParamOptions DEFAULT absent,\n\
    \    &smimeCaps         SMIME-CAPS OPTIONAL\n"
- title: '} WITH SYNTAX {'
  contents:
  - "} WITH SYNTAX {\n    IDENTIFIER &id\n    [PARAMS [TYPE &Params] ARE &paramPresence]\n\
    \    [SMIME-CAPS &smimeCaps]\n"
- title: '}'
  contents:
  - '}

    '
- title: --  KEY-DERIVATION
  contents:
  - '--  KEY-DERIVATION

    '
- title: --
  contents:
  - '--

    '
- title: --  Describes the basic properties of a key derivation algorithm
  contents:
  - '--  Describes the basic properties of a key derivation algorithm

    '
- title: --
  contents:
  - '--

    '
- title: --  &id - contains the OID identifying the key derivation algorithm
  contents:
  - '--  &id - contains the OID identifying the key derivation algorithm

    '
- title: --  &Params - if present, contains the type for the algorithm
  contents:
  - '--  &Params - if present, contains the type for the algorithm

    '
- title: --               parameters; if absent, implies no parameters
  contents:
  - '--               parameters; if absent, implies no parameters

    '
- title: --  &paramPresence - parameter presence requirement
  contents:
  - '--  &paramPresence - parameter presence requirement

    '
- title: --  &smimeCaps - contains the object describing how the S/MIME
  contents:
  - '--  &smimeCaps - contains the object describing how the S/MIME

    '
- title: --              capabilities are presented.
  contents:
  - '--              capabilities are presented.

    '
- title: --
  contents:
  - '--

    '
- title: '--  Example:'
  contents:
  - '--  Example:

    '
- title: --  kda-pbkdf2 KEY-DERIVATION ::= {
  contents:
  - '--  kda-pbkdf2 KEY-DERIVATION ::= {

    '
- title: --      IDENTIFIER id-PBKDF2
  contents:
  - '--      IDENTIFIER id-PBKDF2

    '
- title: --      PARAMS TYPE PBKDF2-params ARE required
  contents:
  - '--      PARAMS TYPE PBKDF2-params ARE required

    '
- title: --  }
  contents:
  - '--  }

    '
- title: KEY-DERIVATION ::= CLASS {
  contents:
  - "KEY-DERIVATION ::= CLASS {\n    &id                OBJECT IDENTIFIER UNIQUE,\n\
    \    &Params            OPTIONAL,\n    &paramPresence     ParamOptions DEFAULT\
    \ absent,\n    &smimeCaps         SMIME-CAPS OPTIONAL\n"
- title: '} WITH SYNTAX {'
  contents:
  - "} WITH SYNTAX {\n    IDENTIFIER &id\n    [PARAMS [TYPE &Params] ARE &paramPresence]\n\
    \    [SMIME-CAPS &smimeCaps]\n"
- title: '}'
  contents:
  - '}

    '
- title: -- MAC-ALGORITHM
  contents:
  - '-- MAC-ALGORITHM

    '
- title: --
  contents:
  - '--

    '
- title: --  Describes the basic properties of a message
  contents:
  - '--  Describes the basic properties of a message

    '
- title: --      authentication code (MAC) algorithm
  contents:
  - '--      authentication code (MAC) algorithm

    '
- title: --
  contents:
  - '--

    '
- title: --  &id - contains the OID identifying the MAC algorithm
  contents:
  - '--  &id - contains the OID identifying the MAC algorithm

    '
- title: --  &Params - if present, contains the type for the algorithm
  contents:
  - '--  &Params - if present, contains the type for the algorithm

    '
- title: --               parameters; if absent, implies no parameters
  contents:
  - '--               parameters; if absent, implies no parameters

    '
- title: --  &paramPresence - parameter presence requirement
  contents:
  - '--  &paramPresence - parameter presence requirement

    '
- title: --  &keyed - MAC algorithm is a keyed MAC algorithm
  contents:
  - '--  &keyed - MAC algorithm is a keyed MAC algorithm

    '
- title: --  &smimeCaps - contains the object describing how the S/MIME
  contents:
  - '--  &smimeCaps - contains the object describing how the S/MIME

    '
- title: --              capabilities are presented.
  contents:
  - '--              capabilities are presented.

    '
- title: --
  contents:
  - '--

    '
- title: --  Some parameters that perhaps should have been added would be
  contents:
  - '--  Some parameters that perhaps should have been added would be

    '
- title: --  fields with the minimum and maximum MAC lengths for
  contents:
  - '--  fields with the minimum and maximum MAC lengths for

    '
- title: --  those MAC algorithms that allow truncations.
  contents:
  - '--  those MAC algorithms that allow truncations.

    '
- title: --
  contents:
  - '--

    '
- title: '--  Example:'
  contents:
  - '--  Example:

    '
- title: --  maca-hmac-sha1 MAC-ALGORITHM ::= {
  contents:
  - '--  maca-hmac-sha1 MAC-ALGORITHM ::= {

    '
- title: --      IDENTIFIER hMAC-SHA1
  contents:
  - '--      IDENTIFIER hMAC-SHA1

    '
- title: --      PARAMS TYPE NULL ARE preferredAbsent
  contents:
  - '--      PARAMS TYPE NULL ARE preferredAbsent

    '
- title: --      IS KEYED MAC TRUE
  contents:
  - '--      IS KEYED MAC TRUE

    '
- title: --      SMIME-CAPS {IDENTIFIED BY hMAC-SHA1}
  contents:
  - '--      SMIME-CAPS {IDENTIFIED BY hMAC-SHA1}

    '
- title: --  }
  contents:
  - '--  }

    '
- title: MAC-ALGORITHM ::= CLASS {
  contents:
  - "MAC-ALGORITHM ::= CLASS {\n    &id                 OBJECT IDENTIFIER UNIQUE,\n\
    \    &Params             OPTIONAL,\n    &paramPresence      ParamOptions DEFAULT\
    \ absent,\n    &keyed              BOOLEAN,\n    &smimeCaps          SMIME-CAPS\
    \ OPTIONAL\n"
- title: '} WITH SYNTAX {'
  contents:
  - "} WITH SYNTAX {\n    IDENTIFIER &id\n    [PARAMS [TYPE &Params] ARE &paramPresence]\n\
    \    IS-KEYED-MAC &keyed\n    [SMIME-CAPS &smimeCaps]\n"
- title: '}'
  contents:
  - '}

    '
- title: --  CONTENT-ENCRYPTION
  contents:
  - '--  CONTENT-ENCRYPTION

    '
- title: --
  contents:
  - '--

    '
- title: --  Describes the basic properties of a content encryption
  contents:
  - '--  Describes the basic properties of a content encryption

    '
- title: --      algorithm
  contents:
  - '--      algorithm

    '
- title: --
  contents:
  - '--

    '
- title: --  &id - contains the OID identifying the content
  contents:
  - '--  &id - contains the OID identifying the content

    '
- title: --        encryption algorithm
  contents:
  - '--        encryption algorithm

    '
- title: --  &Params - if present, contains the type for the algorithm
  contents:
  - '--  &Params - if present, contains the type for the algorithm

    '
- title: --               parameters; if absent, implies no parameters
  contents:
  - '--               parameters; if absent, implies no parameters

    '
- title: --  &paramPresence - parameter presence requirement
  contents:
  - '--  &paramPresence - parameter presence requirement

    '
- title: --  &smimeCaps - contains the object describing how the S/MIME
  contents:
  - '--  &smimeCaps - contains the object describing how the S/MIME

    '
- title: --              capabilities are presented.
  contents:
  - '--              capabilities are presented.

    '
- title: --
  contents:
  - '--

    '
- title: '--  Example:'
  contents:
  - '--  Example:

    '
- title: --  cea-3DES-cbc CONTENT-ENCRYPTION ::= {
  contents:
  - '--  cea-3DES-cbc CONTENT-ENCRYPTION ::= {

    '
- title: --      IDENTIFIER des-ede3-cbc
  contents:
  - '--      IDENTIFIER des-ede3-cbc

    '
- title: --      PARAMS TYPE IV ARE required
  contents:
  - '--      PARAMS TYPE IV ARE required

    '
- title: --      SMIME-CAPS { IDENTIFIED BY des-ede3-cbc }
  contents:
  - '--      SMIME-CAPS { IDENTIFIED BY des-ede3-cbc }

    '
- title: --  }
  contents:
  - '--  }

    '
- title: CONTENT-ENCRYPTION ::= CLASS {
  contents:
  - "CONTENT-ENCRYPTION ::= CLASS {\n    &id                OBJECT IDENTIFIER UNIQUE,\n\
    \    &Params            OPTIONAL,\n    &paramPresence     ParamOptions DEFAULT\
    \ absent,\n    &smimeCaps         SMIME-CAPS OPTIONAL\n"
- title: '} WITH SYNTAX {'
  contents:
  - "} WITH SYNTAX {\n    IDENTIFIER &id\n    [PARAMS [TYPE &Params] ARE &paramPresence]\n\
    \    [SMIME-CAPS &smimeCaps]\n"
- title: '}'
  contents:
  - '}

    '
- title: -- ALGORITHM
  contents:
  - '-- ALGORITHM

    '
- title: --
  contents:
  - '--

    '
- title: -- Describes a generic algorithm identifier
  contents:
  - '-- Describes a generic algorithm identifier

    '
- title: --
  contents:
  - '--

    '
- title: --  &id - contains the OID identifying the algorithm
  contents:
  - '--  &id - contains the OID identifying the algorithm

    '
- title: --  &Params - if present, contains the type for the algorithm
  contents:
  - '--  &Params - if present, contains the type for the algorithm

    '
- title: --               parameters; if absent, implies no parameters
  contents:
  - '--               parameters; if absent, implies no parameters

    '
- title: --  &paramPresence - parameter presence requirement
  contents:
  - '--  &paramPresence - parameter presence requirement

    '
- title: --  &smimeCaps - contains the object describing how the S/MIME
  contents:
  - '--  &smimeCaps - contains the object describing how the S/MIME

    '
- title: --              capabilities are presented.
  contents:
  - '--              capabilities are presented.

    '
- title: --
  contents:
  - '--

    '
- title: --  This would be used for cases where an algorithm of an unknown
  contents:
  - '--  This would be used for cases where an algorithm of an unknown

    '
- title: --  type is used.  In general however, one should either define
  contents:
  - '--  type is used.  In general however, one should either define

    '
- title: --  a more complete algorithm structure (such as the one above)
  contents:
  - '--  a more complete algorithm structure (such as the one above)

    '
- title: --  or use the TYPE-IDENTIFIER class.
  contents:
  - '--  or use the TYPE-IDENTIFIER class.

    '
- title: ALGORITHM ::= CLASS {
  contents:
  - "ALGORITHM ::= CLASS {\n    &id OBJECT   IDENTIFIER UNIQUE,\n    &Params     \
    \ OPTIONAL,\n    &paramPresence ParamOptions DEFAULT absent,\n    &smimeCaps \
    \  SMIME-CAPS OPTIONAL\n"
- title: '} WITH SYNTAX {'
  contents:
  - "} WITH SYNTAX {\n    IDENTIFIER &id\n    [PARAMS [TYPE &Params] ARE &paramPresence]\n\
    \    [SMIME-CAPS &smimeCaps]\n"
- title: '}'
  contents:
  - '}

    '
- title: -- AlgorithmIdentifier
  contents:
  - '-- AlgorithmIdentifier

    '
- title: --
  contents:
  - '--

    '
- title: -- Provides the generic structure that is used to encode algorithm
  contents:
  - '-- Provides the generic structure that is used to encode algorithm

    '
- title: --    identification and the parameters associated with the
  contents:
  - '--    identification and the parameters associated with the

    '
- title: --    algorithm.
  contents:
  - '--    algorithm.

    '
- title: --
  contents:
  - '--

    '
- title: -- The first parameter represents the type of the algorithm being
  contents:
  - '-- The first parameter represents the type of the algorithm being

    '
- title: --    used.
  contents:
  - '--    used.

    '
- title: -- The second parameter represents an object set containing the
  contents:
  - '-- The second parameter represents an object set containing the

    '
- title: --    algorithms that may occur in this situation.
  contents:
  - '--    algorithms that may occur in this situation.

    '
- title: --    The initial list of required algorithms should occur to the
  contents:
  - '--    The initial list of required algorithms should occur to the

    '
- title: --      left of an extension marker; all other algorithms should
  contents:
  - '--      left of an extension marker; all other algorithms should

    '
- title: --      occur to the right of an extension marker.
  contents:
  - '--      occur to the right of an extension marker.

    '
- title: --
  contents:
  - '--

    '
- title: -- The object class ALGORITHM can be used for generic unspecified
  contents:
  - '-- The object class ALGORITHM can be used for generic unspecified

    '
- title: --     items.
  contents:
  - '--     items.

    '
- title: -- If new ALGORITHM classes are defined, the fields &id and &Params
  contents:
  - '-- If new ALGORITHM classes are defined, the fields &id and &Params

    '
- title: --     need to be present as fields in the object in order to use
  contents:
  - '--     need to be present as fields in the object in order to use

    '
- title: --     this parameterized type.
  contents:
  - '--     this parameterized type.

    '
- title: --
  contents:
  - '--

    '
- title: '-- Example:'
  contents:
  - '-- Example:

    '
- title: --    SignatureAlgorithmIdentifier ::=
  contents:
  - '--    SignatureAlgorithmIdentifier ::=

    '
- title: --       AlgorithmIdentifier{SIGNATURE-ALGORITHM, {SignatureAlgSet}}
  contents:
  - '--       AlgorithmIdentifier{SIGNATURE-ALGORITHM, {SignatureAlgSet}}

    '
- title: AlgorithmIdentifier{ALGORITHM-TYPE, ALGORITHM-TYPE:AlgorithmSet} ::=
  contents:
  - "AlgorithmIdentifier{ALGORITHM-TYPE, ALGORITHM-TYPE:AlgorithmSet} ::=\n      \
    \  SEQUENCE {\n            algorithm   ALGORITHM-TYPE.&id({AlgorithmSet}),\n \
    \           parameters  ALGORITHM-TYPE.\n                   &Params({AlgorithmSet}{@algorithm})\
    \ OPTIONAL\n        }\n"
- title: --  S/MIME Capabilities
  contents:
  - '--  S/MIME Capabilities

    '
- title: --
  contents:
  - '--

    '
- title: --  We have moved the SMIME-CAPS from the module for RFC 3851 to here
  contents:
  - '--  We have moved the SMIME-CAPS from the module for RFC 3851 to here

    '
- title: --  because it is used in RFC 4262 (X.509 Certificate Extension for
  contents:
  - '--  because it is used in RFC 4262 (X.509 Certificate Extension for

    '
- title: --  S/MIME Capabilities)
  contents:
  - '--  S/MIME Capabilities)

    '
- title: --
  contents:
  - '--

    '
- title: --
  contents:
  - '--

    '
- title: --  This class is used to represent an S/MIME capability.  S/MIME
  contents:
  - '--  This class is used to represent an S/MIME capability.  S/MIME

    '
- title: --  capabilities are used to represent what algorithm capabilities
  contents:
  - '--  capabilities are used to represent what algorithm capabilities

    '
- title: --  an individual has.  The classic example was the content encryption
  contents:
  - '--  an individual has.  The classic example was the content encryption

    '
- title: --  algorithm RC2 where the algorithm id and the RC2 key lengths
  contents:
  - '--  algorithm RC2 where the algorithm id and the RC2 key lengths

    '
- title: --  supported needed to be advertised, but the IV used is not fixed.
  contents:
  - '--  supported needed to be advertised, but the IV used is not fixed.

    '
- title: --  Thus, for RC2 we used
  contents:
  - '--  Thus, for RC2 we used

    '
- title: --
  contents:
  - '--

    '
- title: --  cap-RC2CBC SMIME-CAPS ::= {
  contents:
  - '--  cap-RC2CBC SMIME-CAPS ::= {

    '
- title: --      TYPE INTEGER ( 40 | 128 ) IDENTIFIED BY rc2-cbc }
  contents:
  - '--      TYPE INTEGER ( 40 | 128 ) IDENTIFIED BY rc2-cbc }

    '
- title: --
  contents:
  - '--

    '
- title: --  where 40 and 128 represent the RC2 key length in number of bits.
  contents:
  - '--  where 40 and 128 represent the RC2 key length in number of bits.

    '
- title: --
  contents:
  - '--

    '
- title: --  Another example where information needs to be shown is for
  contents:
  - '--  Another example where information needs to be shown is for

    '
- title: --  RSA-OAEP where only specific hash functions or mask generation
  contents:
  - '--  RSA-OAEP where only specific hash functions or mask generation

    '
- title: --  functions are supported, but the saltLength is specified by the
  contents:
  - '--  functions are supported, but the saltLength is specified by the

    '
- title: --  sender and not the recipient.  In this case, one can either
  contents:
  - '--  sender and not the recipient.  In this case, one can either

    '
- title: --  generate a number of capability items,
  contents:
  - '--  generate a number of capability items,

    '
- title: --  or a new S/MIME capability type could be generated where
  contents:
  - '--  or a new S/MIME capability type could be generated where

    '
- title: --  multiple hash functions could be specified.
  contents:
  - '--  multiple hash functions could be specified.

    '
- title: --
  contents:
  - '--

    '
- title: --
  contents:
  - '--

    '
- title: --  SMIME-CAP
  contents:
  - '--  SMIME-CAP

    '
- title: --
  contents:
  - '--

    '
- title: --  This class is used to associate the type that describes the
  contents:
  - '--  This class is used to associate the type that describes the

    '
- title: --  capabilities with the object identifier.
  contents:
  - '--  capabilities with the object identifier.

    '
- title: --
  contents:
  - '--

    '
- title: SMIME-CAPS ::= CLASS {
  contents:
  - "SMIME-CAPS ::= CLASS {\n    &id         OBJECT IDENTIFIER UNIQUE,\n    &Type\
    \       OPTIONAL\n"
- title: '}'
  contents:
  - '}

    '
- title: WITH SYNTAX { [TYPE &Type] IDENTIFIED BY &id }
  contents:
  - 'WITH SYNTAX { [TYPE &Type] IDENTIFIED BY &id }

    '
- title: --
  contents:
  - '--

    '
- title: --  Generic type - this is used for defining values.
  contents:
  - '--  Generic type - this is used for defining values.

    '
- title: --
  contents:
  - '--

    '
- title: --  Define a single S/MIME capability encoding
  contents:
  - '--  Define a single S/MIME capability encoding

    '
- title: SMIMECapability{SMIME-CAPS:CapabilitySet} ::= SEQUENCE {
  contents:
  - "SMIMECapability{SMIME-CAPS:CapabilitySet} ::= SEQUENCE {\n    capabilityID  \
    \      SMIME-CAPS.&id({CapabilitySet}),\n    parameters          SMIME-CAPS.&Type({CapabilitySet}\n\
    \                            {@capabilityID}) OPTIONAL\n"
- title: '}'
  contents:
  - '}

    '
- title: --  Define a sequence of S/MIME capability values
  contents:
  - '--  Define a sequence of S/MIME capability values

    '
- title: SMIMECapabilities { SMIME-CAPS:CapabilitySet } ::=
  contents:
  - "SMIMECapabilities { SMIME-CAPS:CapabilitySet } ::=\n        SEQUENCE SIZE (1..MAX)\
    \ OF SMIMECapability{{CapabilitySet} }\n"
- title: END
  contents:
  - 'END

    '
- title: 4.  ASN.1 Module for RFC 2560
  contents:
  - "4.  ASN.1 Module for RFC 2560\n  OCSP-2009\n      {iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n      mechanisms(5) pkix(7) id-mod(0) id-mod-ocsp-02(48)}\n\
    \  DEFINITIONS EXPLICIT TAGS ::=\n  BEGIN\n  IMPORTS\n  Extensions{}, EXTENSION,\
    \ ATTRIBUTE\n  FROM PKIX-CommonTypes-2009\n      {iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n      mechanisms(5) pkix(7) id-mod(0) id-mod-pkixCommon-02(57)}\n\
    \  AlgorithmIdentifier{}, DIGEST-ALGORITHM, SIGNATURE-ALGORITHM\n  FROM AlgorithmInformation-2009\n\
    \      {iso(1) identified-organization(3) dod(6) internet(1) security(5)\n   \
    \   mechanisms(5) pkix(7) id-mod(0)\n      id-mod-algorithmInformation-02(58)}\n\
    \  AuthorityInfoAccessSyntax, GeneralName, CrlEntryExtensions\n  FROM PKIX1Implicit-2009\n\
    \      {iso(1) identified-organization(3) dod(6) internet(1) security(5)\n   \
    \   mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-implicit-02(59)}\n  Name, CertificateSerialNumber,\
    \ id-kp, id-ad-ocsp, Certificate\n  FROM PKIX1Explicit-2009\n      {iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n      mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-explicit-02(51)}\n\
    \  sa-dsaWithSHA1, sa-rsaWithMD2, sa-rsaWithMD5, sa-rsaWithSHA1\n  FROM PKIXAlgs-2009\n\
    \      {iso(1) identified-organization(3) dod(6) internet(1) security(5)\n   \
    \   mechanisms(5) pkix(7) id-mod(0)\n      id-mod-pkix1-algorithms2008-02(56)};\n\
    \  OCSPRequest     ::=     SEQUENCE {\n      tbsRequest                  TBSRequest,\n\
    \      optionalSignature   [0]     EXPLICIT Signature OPTIONAL }\n  TBSRequest\
    \      ::=     SEQUENCE {\n      version             [0] EXPLICIT Version DEFAULT\
    \ v1,\n      requestorName       [1] EXPLICIT GeneralName OPTIONAL,\n      requestList\
    \             SEQUENCE OF Request,\n      requestExtensions   [2] EXPLICIT Extensions\
    \ {{re-ocsp-nonce |\n                                  re-ocsp-response, ...}}\
    \ OPTIONAL }\n  Signature       ::=     SEQUENCE {\n      signatureAlgorithm \
    \  AlgorithmIdentifier\n                               { SIGNATURE-ALGORITHM,\
    \ {...}},\n      signature            BIT STRING,\n      certs            [0]\
    \ EXPLICIT SEQUENCE OF Certificate OPTIONAL }\n  Version  ::=  INTEGER  {  v1(0)\
    \ }\n  Request ::=     SEQUENCE {\n      reqCert                    CertID,\n\
    \      singleRequestExtensions    [0] EXPLICIT Extensions\n                  \
    \                       { {re-ocsp-service-locator,\n                        \
    \                        ...}} OPTIONAL }\n  CertID ::= SEQUENCE {\n      hashAlgorithm\
    \            AlgorithmIdentifier\n                                   {DIGEST-ALGORITHM,\
    \ {...}},\n      issuerNameHash     OCTET STRING, -- Hash of Issuer's DN\n   \
    \   issuerKeyHash      OCTET STRING, -- Hash of Issuer's public key\n      serialNumber\
    \       CertificateSerialNumber }\n  OCSPResponse ::= SEQUENCE {\n     responseStatus\
    \         OCSPResponseStatus,\n     responseBytes          [0] EXPLICIT ResponseBytes\
    \ OPTIONAL }\n  OCSPResponseStatus ::= ENUMERATED {\n      successful        \
    \    (0), --Response has valid confirmations\n      malformedRequest      (1),\
    \ --Illegal confirmation request\n      internalError         (2), --Internal\
    \ error in issuer\n      tryLater              (3), --Try again later\n      \
    \                           -- (4) is not used\n      sigRequired           (5),\
    \ --Must sign the request\n      unauthorized          (6)  --Request unauthorized\n\
    \  }\n  RESPONSE ::= TYPE-IDENTIFIER\n  ResponseSet RESPONSE ::= {basicResponse,\
    \ ...}\n  ResponseBytes ::=       SEQUENCE {\n      responseType        RESPONSE.\n\
    \                              &id ({ResponseSet}),\n      response          \
    \  OCTET STRING (CONTAINING RESPONSE.\n                              &Type({ResponseSet}{@responseType}))}\n\
    \  basicResponse RESPONSE ::=\n      { BasicOCSPResponse IDENTIFIED BY id-pkix-ocsp-basic\
    \ }\n  BasicOCSPResponse       ::= SEQUENCE {\n     tbsResponseData      ResponseData,\n\
    \     signatureAlgorithm   AlgorithmIdentifier{SIGNATURE-ALGORITHM,\n        \
    \                      {sa-dsaWithSHA1 | sa-rsaWithSHA1 |\n                  \
    \                 sa-rsaWithMD5 | sa-rsaWithMD2, ...}},\n     signature      \
    \      BIT STRING,\n     certs            [0] EXPLICIT SEQUENCE OF Certificate\
    \ OPTIONAL }\n  ResponseData ::= SEQUENCE {\n     version              [0] EXPLICIT\
    \ Version DEFAULT v1,\n     responderID              ResponderID,\n     producedAt\
    \               GeneralizedTime,\n     responses                SEQUENCE OF SingleResponse,\n\
    \     responseExtensions   [1] EXPLICIT Extensions\n                         \
    \         {{re-ocsp-nonce, ...}} OPTIONAL }\n  ResponderID ::= CHOICE {\n    \
    \ byName   [1] Name,\n     byKey    [2] KeyHash }\n  KeyHash ::= OCTET STRING\
    \ --SHA-1 hash of responder's public key\n                           -- (excluding\
    \ the tag and length fields)\n  SingleResponse ::= SEQUENCE {\n     certID   \
    \                    CertID,\n     certStatus                   CertStatus,\n\
    \     thisUpdate                   GeneralizedTime,\n     nextUpdate         \
    \  [0]     EXPLICIT GeneralizedTime OPTIONAL,\n     singleExtensions     [1] \
    \    EXPLICIT Extensions{{re-ocsp-crl |\n                                    \
    \           re-ocsp-archive-cutoff |\n                                       \
    \         CrlEntryExtensions, ...}\n                                         \
    \      } OPTIONAL }\n  CertStatus ::= CHOICE {\n      good                [0]\
    \     IMPLICIT NULL,\n      revoked             [1]     IMPLICIT RevokedInfo,\n\
    \      unknown             [2]     IMPLICIT UnknownInfo }\n  RevokedInfo ::= SEQUENCE\
    \ {\n      revocationTime              GeneralizedTime,\n      revocationReason\
    \    [0]     EXPLICIT CRLReason OPTIONAL }\n  UnknownInfo ::= NULL\n  CRLReason\
    \ ::= INTEGER\n  ArchiveCutoff ::= GeneralizedTime\n  AcceptableResponses ::=\
    \ SEQUENCE OF RESPONSE.&id({ResponseSet})\n  ServiceLocator ::= SEQUENCE {\n \
    \     issuer    Name,\n      locator   AuthorityInfoAccessSyntax }\n  CrlID ::=\
    \ SEQUENCE {\n      crlUrl               [0]     EXPLICIT IA5String OPTIONAL,\n\
    \      crlNum               [1]     EXPLICIT INTEGER OPTIONAL,\n      crlTime\
    \              [2]     EXPLICIT GeneralizedTime OPTIONAL }\n  --  Request Extensions\n\
    \  re-ocsp-nonce EXTENSION ::= { SYNTAX OCTET STRING IDENTIFIED\n            \
    \                        BY id-pkix-ocsp-nonce }\n  re-ocsp-response EXTENSION\
    \ ::= { SYNTAX AcceptableResponses IDENTIFIED\n                              \
    \         BY id-pkix-ocsp-response }\n  re-ocsp-service-locator EXTENSION ::=\
    \ { SYNTAX ServiceLocator\n                                          IDENTIFIED\
    \ BY\n                                          id-pkix-ocsp-service-locator }\n\
    \  --  Response Extensions\n  re-ocsp-crl EXTENSION ::= { SYNTAX CrlID IDENTIFIED\
    \ BY\n                                  id-pkix-ocsp-crl }\n  re-ocsp-archive-cutoff\
    \ EXTENSION ::= { SYNTAX ArchiveCutoff\n                                     \
    \    IDENTIFIED BY\n                                         id-pkix-ocsp-archive-cutoff\
    \ }\n  -- Object Identifiers\n  id-kp-OCSPSigning            OBJECT IDENTIFIER\
    \ ::= { id-kp 9 }\n  id-pkix-ocsp                 OBJECT IDENTIFIER ::= id-ad-ocsp\n\
    \  id-pkix-ocsp-basic           OBJECT IDENTIFIER ::= { id-pkix-ocsp 1 }\n  id-pkix-ocsp-nonce\
    \           OBJECT IDENTIFIER ::= { id-pkix-ocsp 2 }\n  id-pkix-ocsp-crl     \
    \        OBJECT IDENTIFIER ::= { id-pkix-ocsp 3 }\n  id-pkix-ocsp-response   \
    \     OBJECT IDENTIFIER ::= { id-pkix-ocsp 4 }\n  id-pkix-ocsp-nocheck       \
    \  OBJECT IDENTIFIER ::= { id-pkix-ocsp 5 }\n  id-pkix-ocsp-archive-cutoff  OBJECT\
    \ IDENTIFIER ::= { id-pkix-ocsp 6 }\n  id-pkix-ocsp-service-locator OBJECT IDENTIFIER\
    \ ::= { id-pkix-ocsp 7 }\n  END\n"
- title: 5.  ASN.1 Module for RFC 2986
  contents:
  - "5.  ASN.1 Module for RFC 2986\n  PKCS-10\n      {iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n        mechanisms(5) pkix(7) id-mod(0) id-mod-pkcs10-2009(69)}\n\
    \  DEFINITIONS IMPLICIT TAGS ::=\n  BEGIN\n  IMPORTS\n  AlgorithmIdentifier{},\
    \ DIGEST-ALGORITHM, SIGNATURE-ALGORITHM,\n      PUBLIC-KEY\n  FROM AlgorithmInformation-2009\n\
    \      {iso(1) identified-organization(3) dod(6) internet(1) security(5)\n   \
    \   mechanisms(5) pkix(7) id-mod(0)\n      id-mod-algorithmInformation-02(58)}\n\
    \  ATTRIBUTE, Name\n  FROM PKIX1Explicit-2009\n      {iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n      mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-explicit-02(51)};\n\
    \  -- Certificate requests\n  CertificationRequestInfo ::= SEQUENCE {\n      version\
    \       INTEGER { v1(0) } (v1, ... ),\n      subject       Name,\n      subjectPKInfo\
    \ SubjectPublicKeyInfo{{ PKInfoAlgorithms }},\n      attributes    [0] Attributes{{\
    \ CRIAttributes }}\n  }\n  SubjectPublicKeyInfo {PUBLIC-KEY: IOSet} ::= SEQUENCE\
    \ {\n      algorithm        AlgorithmIdentifier {PUBLIC-KEY, {IOSet}},\n     \
    \ subjectPublicKey BIT STRING\n  }\n  PKInfoAlgorithms PUBLIC-KEY ::= {\n    \
    \  ... -- add any locally defined algorithms here -- }\n  Attributes { ATTRIBUTE:IOSet\
    \ } ::= SET OF Attribute{{ IOSet }}\n  CRIAttributes  ATTRIBUTE  ::= {\n     \
    \ ... -- add any locally defined attributes here -- }\n  Attribute { ATTRIBUTE:IOSet\
    \ } ::= SEQUENCE {\n      type   ATTRIBUTE.&id({IOSet}),\n      values SET SIZE(1..MAX)\
    \ OF ATTRIBUTE.&Type({IOSet}{@type})\n  }\n  CertificationRequest ::= SEQUENCE\
    \ {\n      certificationRequestInfo  CertificationRequestInfo,\n      signatureAlgorithm\
    \        AlgorithmIdentifier{SIGNATURE-ALGORITHM,\n                          \
    \          { SignatureAlgorithms }},\n      signature                 BIT STRING\n\
    \  }\n  SignatureAlgorithms SIGNATURE-ALGORITHM ::= {\n      ... -- add any locally\
    \ defined algorithms here -- }\n  END\n"
- title: 6.  ASN.1 Module for RFC 3279
  contents:
  - "6.  ASN.1 Module for RFC 3279\n   Note that this module also contains information\
    \ from RFC 5480\n   [RFC5480].\n   PKIXAlgs-2009 { iso(1) identified-organization(3)\
    \ dod(6)\n     internet(1) security(5) mechanisms(5) pkix(7) id-mod(0)\n     id-mod-pkix1-algorithms2008-02(56)\
    \ }\n   DEFINITIONS EXPLICIT TAGS ::=\n   BEGIN\n   IMPORTS\n   PUBLIC-KEY, SIGNATURE-ALGORITHM,\
    \ DIGEST-ALGORITHM, SMIME-CAPS\n   FROM AlgorithmInformation-2009\n       {iso(1)\
    \ identified-organization(3) dod(6) internet(1) security(5)\n       mechanisms(5)\
    \ pkix(7) id-mod(0)\n       id-mod-algorithmInformation-02(58)}\n   mda-sha224,\
    \ mda-sha256, mda-sha384, mda-sha512\n   FROM PKIX1-PSS-OAEP-Algorithms-2009\n\
    \       {iso(1) identified-organization(3) dod(6) internet(1)\n       security(5)\
    \ mechanisms(5) pkix(7) id-mod(0)\n       id-mod-pkix1-rsa-pkalgs-02(54)} ;\n\
    \   --\n   -- Public Key (pk-) Algorithms\n   --\n   PublicKeys PUBLIC-KEY ::=\
    \ {\n    pk-rsa  |\n    pk-dsa  |\n    pk-dh   |\n    pk-kea,\n    ...,\n    pk-ec\
    \   |\n    pk-ecDH |\n    pk-ecMQV\n   }\n   --\n   -- Signature Algorithms (sa-)\n\
    \   --\n   SignatureAlgs SIGNATURE-ALGORITHM ::= {\n    sa-rsaWithMD2      |\n\
    \    sa-rsaWithMD5      |\n    sa-rsaWithSHA1     |\n    sa-dsaWithSHA1     |\n\
    \    sa-ecdsaWithSHA1,\n    ..., -- Extensible\n    sa-dsaWithSHA224   |\n   \
    \ sa-dsaWithSHA256   |\n    sa-ecdsaWithSHA224 |\n    sa-ecdsaWithSHA256 |\n \
    \   sa-ecdsaWithSHA384 |\n    sa-ecdsaWithSHA512\n   }\n   --\n   -- S/MIME CAPS\
    \ for algorithms in this document\n   --\n   -- For all of the algorithms laid\
    \ out in this document, the\n   -- parameters field for the S/MIME capabilities\
    \ is defined as\n   -- ABSENT as there are no specific values that need to be\
    \ known\n   -- by the receiver for negotiation.\n   --\n   SMimeCaps SMIME-CAPS\
    \ ::= {\n    sa-rsaWithMD2.&smimeCaps      |\n    sa-rsaWithMD5.&smimeCaps   \
    \   |\n    sa-rsaWithSHA1.&smimeCaps     |\n    sa-dsaWithSHA1.&smimeCaps    \
    \ |\n    sa-dsaWithSHA224.&smimeCaps   |\n    sa-dsaWithSHA256.&smimeCaps   |\n\
    \    sa-ecdsaWithSHA1.&smimeCaps   |\n    sa-ecdsaWithSHA224.&smimeCaps |\n  \
    \  sa-ecdsaWithSHA256.&smimeCaps |\n    sa-ecdsaWithSHA384.&smimeCaps |\n    sa-ecdsaWithSHA512.&smimeCaps,\n\
    \    ... }\n   -- RSA PK Algorithm, Parameters, and Keys\n   pk-rsa PUBLIC-KEY\
    \ ::= {\n    IDENTIFIER rsaEncryption\n    KEY RSAPublicKey\n    PARAMS TYPE NULL\
    \ ARE absent\n    -- Private key format not in this module --\n    CERT-KEY-USAGE\
    \ {digitalSignature, nonRepudiation,\n    keyEncipherment, dataEncipherment, keyCertSign,\
    \ cRLSign}\n   }\n   rsaEncryption OBJECT IDENTIFIER ::= {\n    iso(1) member-body(2)\
    \ us(840) rsadsi(113549) pkcs(1)\n    pkcs-1(1) 1 }\n   RSAPublicKey ::= SEQUENCE\
    \ {\n    modulus         INTEGER, -- n\n    publicExponent  INTEGER  -- e\n  \
    \ }\n   -- DSA PK Algorithm, Parameters, and Keys\n   pk-dsa PUBLIC-KEY ::= {\n\
    \    IDENTIFIER id-dsa\n    KEY DSAPublicKey\n    PARAMS TYPE DSA-Params ARE inheritable\n\
    \    -- Private key format not in this module --\n    CERT-KEY-USAGE { digitalSignature,\
    \ nonRepudiation, keyCertSign,\n                        cRLSign }\n   }\n   id-dsa\
    \ OBJECT IDENTIFIER ::= {\n    iso(1) member-body(2) us(840) x9-57(10040) x9algorithm(4)\
    \ 1 }\n   DSA-Params ::= SEQUENCE {\n    p  INTEGER,\n    q  INTEGER,\n    g \
    \ INTEGER\n   }\n   DSAPublicKey ::= INTEGER --  public key, y\n   -- Diffie-Hellman\
    \ PK Algorithm, Parameters, and Keys\n   pk-dh PUBLIC-KEY ::= {\n    IDENTIFIER\
    \ dhpublicnumber\n    KEY DHPublicKey\n    PARAMS TYPE DomainParameters ARE inheritable\n\
    \    -- Private key format not in this module --\n    CERT-KEY-USAGE {keyAgreement,\
    \ encipherOnly, decipherOnly }\n   }\n   dhpublicnumber OBJECT IDENTIFIER ::=\
    \ {\n    iso(1) member-body(2) us(840) ansi-x942(10046)\n    number-type(2) 1\
    \ }\n   DomainParameters ::= SEQUENCE {\n    p                INTEGER,       \
    \    -- odd prime, p=jq +1\n    g                INTEGER,           -- generator,\
    \ g\n    q                INTEGER,           -- factor of p-1\n    j         \
    \       INTEGER OPTIONAL,  -- subgroup factor, j>= 2\n    validationParams  ValidationParams\
    \ OPTIONAL\n   }\n   ValidationParams ::= SEQUENCE {\n    seed         BIT STRING,\n\
    \    pgenCounter  INTEGER\n   }\n   DHPublicKey ::= INTEGER  -- public key, y\
    \ = g^x mod p\n   -- KEA PK Algorithm and Parameters\n   pk-kea PUBLIC-KEY ::=\
    \ {\n    IDENTIFIER id-keyExchangeAlgorithm\n    -- key is not encoded --\n  \
    \  PARAMS TYPE KEA-Params-Id ARE required\n    -- Private key format not in this\
    \ module --\n    CERT-KEY-USAGE {keyAgreement, encipherOnly, decipherOnly }\n\
    \   }\n   id-keyExchangeAlgorithm OBJECT IDENTIFIER ::= {\n       joint-iso-itu-t(2)\
    \ country(16) us(840) organization(1)\n       gov(101) dod(2) infosec(1) algorithms(1)\
    \ 22 }\n   KEA-Params-Id ::= OCTET STRING\n   -- Elliptic Curve (EC) Signatures:\
    \ Unrestricted Algorithms\n   --  (Section 2.1.1 of RFC 5480)\n   --\n   -- EC\
    \ Unrestricted Algorithm ID -- -- this is used for ECDSA\n   pk-ec PUBLIC-KEY\
    \ ::= {\n    IDENTIFIER id-ecPublicKey\n    KEY ECPoint\n    PARAMS TYPE ECParameters\
    \ ARE required\n    -- Private key format not in this module --\n    CERT-KEY-USAGE\
    \ { digitalSignature, nonRepudiation, keyAgreement,\n                        \
    \ keyCertSign, cRLSign }\n   }\n   ECPoint ::= OCTET STRING -- see RFC 5480 for\
    \ syntax and restrictions\n   id-ecPublicKey OBJECT IDENTIFIER ::= {\n    iso(1)\
    \ member-body(2) us(840) ansi-X9-62(10045) keyType(2) 1 }\n   -- Elliptic Curve\
    \ (EC) Signatures: Restricted Algorithms\n   --  (Section 2.1.2 of RFC 5480)\n\
    \   --\n   -- EC Diffie-Hellman Algorithm ID\n   pk-ecDH PUBLIC-KEY ::= {\n  \
    \  IDENTIFIER id-ecDH\n    KEY ECPoint\n    PARAMS TYPE ECParameters ARE required\n\
    \    -- Private key format not in this module --\n    CERT-KEY-USAGE { keyAgreement,\
    \ encipherOnly, decipherOnly }\n   }\n   id-ecDH OBJECT IDENTIFIER ::= {\n   \
    \ iso(1) identified-organization(3) certicom(132) schemes(1)\n    ecdh(12) }\n\
    \   -- EC Menezes-Qu-Vanstone Algorithm ID\n   pk-ecMQV PUBLIC-KEY ::= {\n   \
    \ IDENTIFIER id-ecMQV\n    KEY ECPoint\n    PARAMS TYPE ECParameters ARE required\n\
    \    -- Private key format not in this module --\n    CERT-KEY-USAGE { keyAgreement,\
    \ encipherOnly, decipherOnly }\n   }\n   id-ecMQV OBJECT IDENTIFIER ::= {\n  \
    \  iso(1) identified-organization(3) certicom(132) schemes(1)\n    ecmqv(13) }\n\
    \   -- Parameters and Keys for both Restricted and Unrestricted EC\n   ECParameters\
    \ ::= CHOICE {\n    namedCurve      CURVE.&id({NamedCurve})\n    -- implicitCurve\
    \   NULL\n      -- implicitCurve MUST NOT be used in PKIX\n    -- specifiedCurve\
    \  SpecifiedCurve\n      -- specifiedCurve MUST NOT be used in PKIX\n      --\
    \ Details for specifiedCurve can be found in [X9.62]\n      -- Any future additions\
    \ to this CHOICE should be coordinated\n      -- with ANSI X.9.\n   }\n   -- If\
    \ you need to be able to decode ANSI X.9 parameter structures,\n   -- uncomment\
    \ the implicitCurve and specifiedCurve above, and also\n   -- uncomment the following:\n\
    \   --(WITH COMPONENTS {namedCurve PRESENT})\n   -- Sec 2.1.1.1 Named Curve\n\
    \   CURVE ::= CLASS { &id OBJECT IDENTIFIER UNIQUE }\n    WITH SYNTAX { ID &id\
    \ }\n   NamedCurve CURVE ::= {\n   { ID secp192r1 } | { ID sect163k1 } | { ID\
    \ sect163r2 } |\n   { ID secp224r1 } | { ID sect233k1 } | { ID sect233r1 } |\n\
    \   { ID secp256r1 } | { ID sect283k1 } | { ID sect283r1 } |\n   { ID secp384r1\
    \ } | { ID sect409k1 } | { ID sect409r1 } |\n   { ID secp521r1 } | { ID sect571k1\
    \ } | { ID sect571r1 },\n   ... -- Extensible\n   }\n   -- Note in [X9.62] the\
    \ curves are referred to as 'ansiX9' as\n   -- opposed to 'sec'.  For example,\
    \ secp192r1 is the same curve as\n   -- ansix9p192r1.\n   -- Note that in [PKI-ALG]\
    \ the secp192r1 curve was referred to as\n   -- prime192v1 and the secp256r1 curve\
    \ was referred to as\n   -- prime256v1.\n   -- Note that [FIPS186-3] refers to\
    \ secp192r1 as P-192,\n   -- secp224r1 as P-224, secp256r1 as P-256, secp384r1\
    \ as P-384,\n   -- and secp521r1 as P-521.\n   secp192r1 OBJECT IDENTIFIER ::=\
    \ {\n    iso(1) member-body(2) us(840) ansi-X9-62(10045) curves(3)\n    prime(1)\
    \ 1 }\n   sect163k1 OBJECT IDENTIFIER ::= {\n    iso(1) identified-organization(3)\
    \ certicom(132) curve(0) 1 }\n   sect163r2 OBJECT IDENTIFIER ::= {\n    iso(1)\
    \ identified-organization(3) certicom(132) curve(0) 15 }\n   secp224r1 OBJECT\
    \ IDENTIFIER ::= {\n    iso(1) identified-organization(3) certicom(132) curve(0)\
    \ 33 }\n   sect233k1 OBJECT IDENTIFIER ::= {\n    iso(1) identified-organization(3)\
    \ certicom(132) curve(0) 26 }\n   sect233r1 OBJECT IDENTIFIER ::= {\n    iso(1)\
    \ identified-organization(3) certicom(132) curve(0) 27 }\n   secp256r1 OBJECT\
    \ IDENTIFIER ::= {\n    iso(1) member-body(2) us(840) ansi-X9-62(10045) curves(3)\n\
    \    prime(1) 7 }\n   sect283k1 OBJECT IDENTIFIER ::= {\n    iso(1) identified-organization(3)\
    \ certicom(132) curve(0) 16 }\n   sect283r1 OBJECT IDENTIFIER ::= {\n    iso(1)\
    \ identified-organization(3) certicom(132) curve(0) 17 }\n   secp384r1 OBJECT\
    \ IDENTIFIER ::= {\n    iso(1) identified-organization(3) certicom(132) curve(0)\
    \ 34 }\n   sect409k1 OBJECT IDENTIFIER ::= {\n    iso(1) identified-organization(3)\
    \ certicom(132) curve(0) 36 }\n   sect409r1 OBJECT IDENTIFIER ::= {\n    iso(1)\
    \ identified-organization(3) certicom(132) curve(0) 37 }\n   secp521r1 OBJECT\
    \ IDENTIFIER ::= {\n    iso(1) identified-organization(3) certicom(132) curve(0)\
    \ 35 }\n   sect571k1 OBJECT IDENTIFIER ::= {\n    iso(1) identified-organization(3)\
    \ certicom(132) curve(0) 38 }\n   sect571r1 OBJECT IDENTIFIER ::= {\n    iso(1)\
    \ identified-organization(3) certicom(132) curve(0) 39 }\n   -- RSA with MD-2\n\
    \   sa-rsaWithMD2 SIGNATURE-ALGORITHM ::= {\n    IDENTIFIER md2WithRSAEncryption\n\
    \    PARAMS TYPE NULL ARE required\n    HASHES { mda-md2 }\n    PUBLIC-KEYS {\
    \ pk-rsa }\n    SMIME-CAPS { IDENTIFIED BY md2WithRSAEncryption }\n   }\n   md2WithRSAEncryption\
    \ OBJECT IDENTIFIER ::= {\n    iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1)\n\
    \    pkcs-1(1) 2 }\n   -- RSA with MD-5\n   sa-rsaWithMD5 SIGNATURE-ALGORITHM\
    \ ::= {\n    IDENTIFIER md5WithRSAEncryption\n    PARAMS TYPE NULL ARE required\n\
    \    HASHES { mda-md5 }\n    PUBLIC-KEYS { pk-rsa }\n    SMIME-CAPS { IDENTIFIED\
    \ BY md5WithRSAEncryption }\n   }\n   md5WithRSAEncryption OBJECT IDENTIFIER ::=\
    \ {\n    iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1)\n    pkcs-1(1) 4\
    \ }\n   -- RSA with SHA-1\n   sa-rsaWithSHA1 SIGNATURE-ALGORITHM ::= {\n    IDENTIFIER\
    \ sha1WithRSAEncryption\n    PARAMS TYPE NULL ARE required\n    HASHES { mda-sha1\
    \ }\n    PUBLIC-KEYS { pk-rsa }\n    SMIME-CAPS {IDENTIFIED BY sha1WithRSAEncryption\
    \ }\n   }\n   sha1WithRSAEncryption OBJECT IDENTIFIER ::= {\n    iso(1) member-body(2)\
    \ us(840) rsadsi(113549) pkcs(1)\n    pkcs-1(1) 5 }\n   -- DSA with SHA-1\n  \
    \ sa-dsaWithSHA1 SIGNATURE-ALGORITHM ::= {\n    IDENTIFIER dsa-with-sha1\n   \
    \ VALUE DSA-Sig-Value\n    PARAMS TYPE NULL ARE absent\n    HASHES { mda-sha1\
    \ }\n    PUBLIC-KEYS { pk-dsa }\n    SMIME-CAPS { IDENTIFIED BY dsa-with-sha1\
    \ }\n   }\n   dsa-with-sha1 OBJECT IDENTIFIER ::=  {\n    iso(1) member-body(2)\
    \ us(840) x9-57(10040) x9algorithm(4) 3 }\n   -- DSA with SHA-224\n   sa-dsaWithSHA224\
    \ SIGNATURE-ALGORITHM ::= {\n    IDENTIFIER dsa-with-sha224\n    VALUE DSA-Sig-Value\n\
    \    PARAMS TYPE NULL ARE absent\n    HASHES { mda-sha224 }\n    PUBLIC-KEYS {\
    \ pk-dsa }\n    SMIME-CAPS { IDENTIFIED BY dsa-with-sha224 }\n   }\n   dsa-with-sha224\
    \ OBJECT IDENTIFIER  ::=  {\n    joint-iso-ccitt(2) country(16) us(840) organization(1)\
    \ gov(101)\n    csor(3) algorithms(4) id-dsa-with-sha2(3) 1 }\n   -- DSA with\
    \ SHA-256\n   sa-dsaWithSHA256 SIGNATURE-ALGORITHM ::= {\n    IDENTIFIER dsa-with-sha256\n\
    \    VALUE DSA-Sig-Value\n    PARAMS TYPE NULL ARE absent\n    HASHES { mda-sha256\
    \ }\n    PUBLIC-KEYS { pk-dsa }\n    SMIME-CAPS { IDENTIFIED BY dsa-with-sha256\
    \ }\n   }\n   dsa-with-sha256 OBJECT IDENTIFIER  ::=  {\n    joint-iso-ccitt(2)\
    \ country(16) us(840) organization(1) gov(101)\n    csor(3) algorithms(4) id-dsa-with-sha2(3)\
    \ 2 }\n   -- ECDSA with SHA-1\n   sa-ecdsaWithSHA1 SIGNATURE-ALGORITHM ::= {\n\
    \    IDENTIFIER ecdsa-with-SHA1\n    VALUE ECDSA-Sig-Value\n    PARAMS TYPE NULL\
    \ ARE absent\n    HASHES { mda-sha1 }\n    PUBLIC-KEYS { pk-ec }\n    SMIME-CAPS\
    \ {IDENTIFIED BY ecdsa-with-SHA1 }\n   }\n   ecdsa-with-SHA1 OBJECT IDENTIFIER\
    \ ::= {\n    iso(1) member-body(2) us(840) ansi-X9-62(10045)\n    signatures(4)\
    \ 1 }\n   -- ECDSA with SHA-224\n   sa-ecdsaWithSHA224 SIGNATURE-ALGORITHM ::=\
    \ {\n    IDENTIFIER ecdsa-with-SHA224\n    VALUE ECDSA-Sig-Value\n    PARAMS TYPE\
    \ NULL ARE absent\n    HASHES { mda-sha224 }\n    PUBLIC-KEYS { pk-ec }\n    SMIME-CAPS\
    \ { IDENTIFIED BY ecdsa-with-SHA224 }\n   }\n   ecdsa-with-SHA224 OBJECT IDENTIFIER\
    \ ::= {\n    iso(1) member-body(2) us(840) ansi-X9-62(10045) signatures(4)\n \
    \   ecdsa-with-SHA2(3) 1 }\n   -- ECDSA with SHA-256\n   sa-ecdsaWithSHA256 SIGNATURE-ALGORITHM\
    \ ::= {\n    IDENTIFIER ecdsa-with-SHA256\n    VALUE ECDSA-Sig-Value\n    PARAMS\
    \ TYPE NULL ARE absent\n    HASHES { mda-sha256 }\n    PUBLIC-KEYS { pk-ec }\n\
    \    SMIME-CAPS { IDENTIFIED BY ecdsa-with-SHA256 }\n   }\n   ecdsa-with-SHA256\
    \ OBJECT IDENTIFIER ::= {\n    iso(1) member-body(2) us(840) ansi-X9-62(10045)\
    \ signatures(4)\n    ecdsa-with-SHA2(3) 2 }\n   -- ECDSA with SHA-384\n   sa-ecdsaWithSHA384\
    \ SIGNATURE-ALGORITHM ::= {\n    IDENTIFIER ecdsa-with-SHA384\n    VALUE ECDSA-Sig-Value\n\
    \    PARAMS TYPE NULL ARE absent\n    HASHES { mda-sha384 }\n    PUBLIC-KEYS {\
    \ pk-ec }\n    SMIME-CAPS { IDENTIFIED BY ecdsa-with-SHA384 }\n   }\n   ecdsa-with-SHA384\
    \ OBJECT IDENTIFIER ::= {\n    iso(1) member-body(2) us(840) ansi-X9-62(10045)\
    \ signatures(4)\n    ecdsa-with-SHA2(3) 3 }\n   -- ECDSA with SHA-512\n   sa-ecdsaWithSHA512\
    \ SIGNATURE-ALGORITHM ::= {\n    IDENTIFIER ecdsa-with-SHA512\n    VALUE ECDSA-Sig-Value\n\
    \    PARAMS TYPE NULL ARE absent\n    HASHES { mda-sha512 }\n    PUBLIC-KEYS {\
    \ pk-ec }\n    SMIME-CAPS { IDENTIFIED BY ecdsa-with-SHA512 }\n   }\n   ecdsa-with-SHA512\
    \ OBJECT IDENTIFIER ::= {\n    iso(1) member-body(2) us(840) ansi-X9-62(10045)\
    \ signatures(4)\n    ecdsa-with-SHA2(3) 4 }\n   --\n   -- Signature Values\n \
    \  --\n   -- DSA\n   DSA-Sig-Value ::= SEQUENCE {\n    r  INTEGER,\n    s  INTEGER\n\
    \   }\n   -- ECDSA\n   ECDSA-Sig-Value ::= SEQUENCE {\n    r  INTEGER,\n    s\
    \  INTEGER\n   }\n   --\n   -- Message Digest Algorithms (mda-)\n   --\n   HashAlgs\
    \ DIGEST-ALGORITHM ::= {\n    mda-md2    |\n    mda-md5    |\n    mda-sha1,\n\
    \    ... -- Extensible\n   }\n   -- MD-2\n   mda-md2 DIGEST-ALGORITHM ::= {\n\
    \    IDENTIFIER id-md2\n    PARAMS TYPE NULL ARE preferredAbsent\n   }\n   id-md2\
    \  OBJECT IDENTIFIER ::= {\n    iso(1) member-body(2) us(840) rsadsi(113549)\n\
    \    digestAlgorithm(2) 2 }\n   -- MD-5\n   mda-md5 DIGEST-ALGORITHM ::= {\n \
    \   IDENTIFIER id-md5\n    PARAMS TYPE NULL ARE preferredAbsent\n   }\n   id-md5\
    \  OBJECT IDENTIFIER ::= {\n    iso(1) member-body(2) us(840) rsadsi(113549)\n\
    \    digestAlgorithm(2) 5 }\n   -- SHA-1\n   mda-sha1 DIGEST-ALGORITHM ::= {\n\
    \    IDENTIFIER id-sha1\n    PARAMS TYPE NULL ARE preferredAbsent\n   }\n   id-sha1\
    \ OBJECT IDENTIFIER ::= {\n    iso(1) identified-organization(3) oiw(14) secsig(3)\n\
    \    algorithm(2) 26 }\n   END\n"
- title: 7.  ASN.1 Module for RFC 3852 (Attribute Certificate v1)
  contents:
  - "7.  ASN.1 Module for RFC 3852 (Attribute Certificate v1)\n  AttributeCertificateVersion1-2009\n\
    \      {iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n     \
    \ smime(16) modules(0) id-mod-v1AttrCert-02(49)}\n  DEFINITIONS EXPLICIT TAGS\
    \ ::=\n  BEGIN\n  IMPORTS\n  SIGNATURE-ALGORITHM, ALGORITHM, AlgorithmIdentifier{}\n\
    \  FROM AlgorithmInformation-2009\n      {iso(1) identified-organization(3) dod(6)\
    \ internet(1) security(5)\n      mechanisms(5) pkix(7) id-mod(0)\n      id-mod-algorithmInformation-02(58)}\n\
    \  AttributeSet{}, Extensions{}, EXTENSION, ATTRIBUTE\n  FROM PKIX-CommonTypes-2009\n\
    \      {iso(1) identified-organization(3) dod(6) internet(1) security(5)\n   \
    \   mechanisms(5) pkix(7) id-mod(0) id-mod-pkixCommon-02(57) }\n  CertificateSerialNumber,\
    \ UniqueIdentifier, SIGNED{}\n  FROM PKIX1Explicit-2009\n      { iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n      mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-explicit-02(51)\
    \ }\n  GeneralNames\n  FROM PKIX1Implicit-2009\n      { iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n      mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-implicit-02(59)\
    \ }\n  AttCertValidityPeriod, IssuerSerial\n  FROM PKIXAttributeCertificate-2009\n\
    \      { iso(1) identified-organization(3) dod(6) internet(1) security(5)\n  \
    \    mechanisms(5) pkix(7) id-mod(0) id-mod-attribute-cert-02(47) } ;\n  -- Definition\
    \ extracted from X.509-1997 [X.509-97], but\n  -- different type names are used\
    \ to avoid collisions.\n  AttributeCertificateV1 ::= SIGNED{AttributeCertificateInfoV1}\n\
    \  AttributeCertificateInfoV1 ::= SEQUENCE {\n     version AttCertVersionV1 DEFAULT\
    \ v1,\n     subject CHOICE {\n        baseCertificateID [0] IssuerSerial,\n  \
    \      -- associated with a Public Key Certificate\n        subjectName [1] GeneralNames\
    \ },\n     -- associated with a name\n     issuer GeneralNames,\n     signature\
    \ AlgorithmIdentifier{SIGNATURE-ALGORITHM, {...}},\n     serialNumber CertificateSerialNumber,\n\
    \     attCertValidityPeriod AttCertValidityPeriod,\n     attributes SEQUENCE OF\
    \ AttributeSet{{AttrList}},\n     issuerUniqueID UniqueIdentifier OPTIONAL,\n\
    \     extensions Extensions{{AttributeCertExtensionsV1}} OPTIONAL }\n  AttCertVersionV1\
    \ ::= INTEGER { v1(0) }\n  AttrList ATTRIBUTE ::= {...}\n  AttributeCertExtensionsV1\
    \ EXTENSION ::= {...}\n  END\n"
- title: 8.  ASN.1 Module for RFC 4055
  contents:
  - "8.  ASN.1 Module for RFC 4055\n   PKIX1-PSS-OAEP-Algorithms-2009\n       {iso(1)\
    \ identified-organization(3) dod(6) internet(1) security(5)\n       mechanisms(5)\
    \ pkix(7) id-mod(0) id-mod-pkix1-rsa-pkalgs-02(54)}\n   DEFINITIONS EXPLICIT TAGS\
    \ ::=\n   BEGIN\n   IMPORTS\n   AlgorithmIdentifier{}, ALGORITHM, DIGEST-ALGORITHM,\
    \ KEY-TRANSPORT,\n       SIGNATURE-ALGORITHM, PUBLIC-KEY, SMIME-CAPS\n   FROM\
    \ AlgorithmInformation-2009\n       {iso(1) identified-organization(3) dod(6)\
    \ internet(1) security(5)\n       mechanisms(5) pkix(7) id-mod(0)\n       id-mod-algorithmInformation-02(58)}\n\
    \   id-sha1, mda-sha1, pk-rsa, RSAPublicKey\n   FROM PKIXAlgs-2009\n      {iso(1)\
    \ identified-organization(3) dod(6) internet(1) security(5)\n      mechanisms(5)\
    \ pkix(7) id-mod(0)\n      id-mod-pkix1-algorithms2008-02(56)};\n   -- ============================\n\
    \   --    Object Set exports\n   -- ============================\n   --\n   --\
    \  Define top-level symbols with all of the objects defined for\n   --  export\
    \ to other modules.  These objects would be included as part\n   --  of an Object\
    \ Set to restrict the set of legal values.\n   --\n   PublicKeys PUBLIC-KEY ::=\
    \ { pk-rsaSSA-PSS | pk-rsaES-OAEP, ... }\n   SignatureAlgs SIGNATURE-ALGORITHM\
    \ ::= { sa-rsaSSA-PSS, ...}\n   KeyTransportAlgs KEY-TRANSPORT ::= { kta-rsaES-OAEP,\
    \ ... }\n   HashAlgs DIGEST-ALGORITHM ::= { mda-sha224 | mda-sha256 | mda-sha384\n\
    \                                      | mda-sha512, ... }\n   SMimeCaps SMIME-CAPS\
    \ ::= {\n       sa-rsaSSA-PSS.&smimeCaps |\n       kta-rsaES-OAEP.&smimeCaps,\n\
    \       ...\n   }\n   -- =============================\n   --    Algorithm Objects\n\
    \   -- =============================\n   --\n   -- Public key object for PSS signatures\n\
    \   --\n   pk-rsaSSA-PSS PUBLIC-KEY ::= {\n       IDENTIFIER id-RSASSA-PSS\n \
    \      KEY RSAPublicKey\n       PARAMS TYPE RSASSA-PSS-params ARE optional\n \
    \       -- Private key format not in this module --\n       CERT-KEY-USAGE { nonRepudiation,\
    \ digitalSignature,\n                            keyCertSign, cRLSign }\n   }\n\
    \   --\n   --  Signature algorithm definition for PSS signatures\n   --\n   sa-rsaSSA-PSS\
    \ SIGNATURE-ALGORITHM ::= {\n       IDENTIFIER id-RSASSA-PSS\n       PARAMS TYPE\
    \ RSASSA-PSS-params ARE required\n       HASHES { mda-sha1 | mda-sha224 | mda-sha256\
    \ | mda-sha384\n                    | mda-sha512 }\n       PUBLIC-KEYS { pk-rsa\
    \ | pk-rsaSSA-PSS }\n       SMIME-CAPS { IDENTIFIED BY id-RSASSA-PSS }\n   }\n\
    \   --\n   --  Signature algorithm definitions for PKCS v1.5 signatures\n   --\n\
    \   sa-sha224WithRSAEncryption SIGNATURE-ALGORITHM ::= {\n       IDENTIFIER sha224WithRSAEncryption\n\
    \       PARAMS TYPE NULL ARE required\n       HASHES { mda-sha224 }\n       PUBLIC-KEYS\
    \ { pk-rsa }\n       SMIME-CAPS { IDENTIFIED BY sha224WithRSAEncryption }\n  \
    \ }\n   sha224WithRSAEncryption  OBJECT IDENTIFIER  ::=  { pkcs-1 14 }\n   sa-sha256WithRSAEncryption\
    \ SIGNATURE-ALGORITHM ::= {\n       IDENTIFIER sha256WithRSAEncryption\n     \
    \  PARAMS TYPE NULL ARE required\n       HASHES { mda-sha256 }\n       PUBLIC-KEYS\
    \ { pk-rsa }\n       SMIME-CAPS { IDENTIFIED BY sha256WithRSAEncryption }\n  \
    \ }\n   sha256WithRSAEncryption  OBJECT IDENTIFIER  ::=  { pkcs-1 11 }\n   sa-sha384WithRSAEncryption\
    \ SIGNATURE-ALGORITHM ::= {\n       IDENTIFIER sha384WithRSAEncryption\n     \
    \  PARAMS TYPE NULL ARE required\n       HASHES { mda-sha384 }\n       PUBLIC-KEYS\
    \ { pk-rsa }\n       SMIME-CAPS { IDENTIFIED BY sha384WithRSAEncryption }\n  \
    \ }\n   sha384WithRSAEncryption  OBJECT IDENTIFIER  ::=  { pkcs-1 12 }\n   sa-sha512WithRSAEncryption\
    \ SIGNATURE-ALGORITHM ::= {\n       IDENTIFIER sha512WithRSAEncryption\n     \
    \  PARAMS TYPE NULL ARE required\n       HASHES { mda-sha512 }\n       PUBLIC-KEYS\
    \ { pk-rsa }\n       SMIME-CAPS { IDENTIFIED BY sha512WithRSAEncryption }\n  \
    \ }\n   sha512WithRSAEncryption  OBJECT IDENTIFIER  ::=  { pkcs-1 13 }\n   --\n\
    \   --  Public key definition for OAEP encryption\n   --\n   pk-rsaES-OAEP PUBLIC-KEY\
    \ ::= {\n       IDENTIFIER id-RSAES-OAEP\n       KEY RSAPublicKey\n       PARAMS\
    \ TYPE RSAES-OAEP-params ARE optional\n        -- Private key format not in this\
    \ module --\n       CERT-KEY-USAGE {keyEncipherment, dataEncipherment}\n   }\n\
    \   --\n   --  Key transport key lock definition for OAEP encryption\n   --\n\
    \   kta-rsaES-OAEP KEY-TRANSPORT ::= {\n       IDENTIFIER id-RSAES-OAEP\n    \
    \   PARAMS TYPE RSAES-OAEP-params ARE required\n       PUBLIC-KEYS { pk-rsa |\
    \ pk-rsaES-OAEP }\n       SMIME-CAPS { TYPE RSAES-OAEP-params IDENTIFIED BY id-RSAES-OAEP}\n\
    \   }\n   -- ============================\n   --   Basic object identifiers\n\
    \   -- ============================\n   pkcs-1  OBJECT IDENTIFIER  ::=\n     \
    \  { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) 1 }\n   -- When rsaEncryption\
    \ is used in an AlgorithmIdentifier, the\n   -- parameters MUST be present and\
    \ MUST be NULL.\n   -- rsaEncryption  OBJECT IDENTIFIER  ::=  { pkcs-1 1 }\n \
    \  -- When id-RSAES-OAEP is used in an AlgorithmIdentifier,\n   -- and the parameters\
    \ field is present, it MUST be\n   -- RSAES-OAEP-params.\n   id-RSAES-OAEP  OBJECT\
    \ IDENTIFIER  ::=  { pkcs-1 7 }\n   -- When id-mgf1 is used in an AlgorithmIdentifier,\
    \ the parameters\n   -- MUST be present and MUST be a HashAlgorithm.\n   id-mgf1\
    \  OBJECT IDENTIFIER  ::=  { pkcs-1 8 }\n   -- When id-pSpecified is used in an\
    \ AlgorithmIdentifier, the\n   -- parameters MUST be an OCTET STRING.\n   id-pSpecified\
    \  OBJECT IDENTIFIER  ::=  { pkcs-1 9 }\n   -- When id-RSASSA-PSS is used in an\
    \ AlgorithmIdentifier, and the\n   -- parameters field is present, it MUST be\
    \ RSASSA-PSS-params.\n   id-RSASSA-PSS  OBJECT IDENTIFIER  ::=  { pkcs-1 10 }\n\
    \   -- When the following OIDs are used in an AlgorithmIdentifier, the\n   --\
    \ parameters SHOULD be absent, but if the parameters are present,\n   -- they\
    \ MUST be NULL.\n   --\n   -- id-sha1 is imported from RFC 3279.  Additionally,\
    \ the v1.5\n   -- signature algorithms (i.e., rsaWithSHA256) are now solely placed\n\
    \   -- in that module.\n   --\n   id-sha224  OBJECT IDENTIFIER  ::=\n       {\
    \ joint-iso-itu-t(2) country(16) us(840) organization(1) gov(101)\n       csor(3)\
    \ nistAlgorithms(4) hashalgs(2) 4 }\n   mda-sha224 DIGEST-ALGORITHM ::= {\n  \
    \     IDENTIFIER id-sha224\n       PARAMS TYPE NULL ARE preferredAbsent\n   }\n\
    \   id-sha256  OBJECT IDENTIFIER  ::=\n       { joint-iso-itu-t(2) country(16)\
    \ us(840) organization(1) gov(101)\n       csor(3) nistAlgorithms(4) hashalgs(2)\
    \ 1 }\n   mda-sha256 DIGEST-ALGORITHM ::= {\n       IDENTIFIER id-sha256\n   \
    \    PARAMS TYPE NULL ARE preferredAbsent\n   }\n   id-sha384  OBJECT IDENTIFIER\
    \  ::=\n       { joint-iso-itu-t(2) country(16) us(840) organization(1) gov(101)\n\
    \       csor(3) nistAlgorithms(4) hashalgs(2) 2 }\n   mda-sha384 DIGEST-ALGORITHM\
    \ ::= {\n       IDENTIFIER id-sha384\n       PARAMS TYPE NULL ARE preferredAbsent\n\
    \   }\n   id-sha512  OBJECT IDENTIFIER  ::=\n       { joint-iso-itu-t(2) country(16)\
    \ us(840) organization(1) gov(101)\n       csor(3) nistAlgorithms(4) hashalgs(2)\
    \ 3 }\n   mda-sha512 DIGEST-ALGORITHM ::= {\n       IDENTIFIER id-sha512\n   \
    \    PARAMS TYPE NULL ARE preferredAbsent\n   }\n   -- =============\n   --  \
    \ Constants\n   -- =============\n   EncodingParameters ::= OCTET STRING(SIZE(0..MAX))\n\
    \   nullOctetString  EncodingParameters  ::=  ''H\n   nullParameters NULL  ::=\
    \  NULL\n   -- =========================\n   --   Algorithm Identifiers\n   --\
    \ =========================\n   HashAlgorithm  ::=  AlgorithmIdentifier{DIGEST-ALGORITHM,\n\
    \                           {HashAlgorithms}}\n   HashAlgorithms DIGEST-ALGORITHM\
    \ ::=  {\n       { IDENTIFIER id-sha1 PARAMS TYPE NULL ARE preferredPresent }\
    \ |\n       { IDENTIFIER id-sha224 PARAMS TYPE NULL ARE preferredPresent } |\n\
    \       { IDENTIFIER id-sha256 PARAMS TYPE NULL ARE preferredPresent } |\n   \
    \    { IDENTIFIER id-sha384 PARAMS TYPE NULL ARE preferredPresent } |\n      \
    \ { IDENTIFIER id-sha512 PARAMS TYPE NULL ARE preferredPresent }\n   }\n   sha1Identifier\
    \ HashAlgorithm ::= {\n       algorithm id-sha1,\n       parameters NULL : NULL\n\
    \   }\n   --\n   --  We have a default algorithm - create the value here\n   --\n\
    \   MaskGenAlgorithm ::= AlgorithmIdentifier{ALGORITHM,\n                    \
    \       {PKCS1MGFAlgorithms}}\n   mgf1SHA1 MaskGenAlgorithm ::= {\n       algorithm\
    \ id-mgf1,\n       parameters HashAlgorithm : sha1Identifier\n   }\n   --\n  \
    \ --  Define the set of mask generation functions\n   --\n   --  If the identifier\
    \ is id-mgf1, any of the listed hash\n   --    algorithms may be used.\n   --\n\
    \   PKCS1MGFAlgorithms ALGORITHM ::= {\n       { IDENTIFIER id-mgf1 PARAMS TYPE\
    \ HashAlgorithm ARE required },\n       ...\n   }\n   --\n   -- Define the set\
    \ of known source algorithms for PSS\n   --\n   PSourceAlgorithm ::= AlgorithmIdentifier{ALGORITHM,\n\
    \                                                {PSS-SourceAlgorithms}}\n   PSS-SourceAlgorithms\
    \ ALGORITHM ::= {\n       { IDENTIFIER id-pSpecified PARAMS TYPE EncodingParameters\n\
    \             ARE required },\n       ...\n   }\n   pSpecifiedEmpty PSourceAlgorithm\
    \ ::=  {\n       algorithm id-pSpecified,\n       parameters EncodingParameters\
    \ : nullOctetString\n   }\n   -- ===================\n   --   Main structures\n\
    \   -- ===================\n   -- AlgorithmIdentifier parameters for id-RSASSA-PSS.\n\
    \   -- Note that the tags in this Sequence are explicit.\n   -- Note: The hash\
    \ algorithm in hashAlgorithm and in\n   -- maskGenAlgorithm should be the same.\n\
    \   RSASSA-PSS-params  ::=  SEQUENCE  {\n       hashAlgorithm     [0] HashAlgorithm\
    \ DEFAULT sha1Identifier,\n       maskGenAlgorithm  [1] MaskGenAlgorithm DEFAULT\
    \ mgf1SHA1,\n       saltLength        [2] INTEGER DEFAULT 20,\n       trailerField\
    \      [3] INTEGER DEFAULT 1\n   }\n   -- AlgorithmIdentifier parameters for id-RSAES-OAEP.\n\
    \   -- Note that the tags in this Sequence are explicit.\n   -- Note: The hash\
    \ algorithm in hashFunc and in\n   -- maskGenFunc should be the same.\n   RSAES-OAEP-params\
    \  ::=  SEQUENCE  {\n       hashFunc          [0] HashAlgorithm DEFAULT sha1Identifier,\n\
    \       maskGenFunc       [1] MaskGenAlgorithm DEFAULT mgf1SHA1,\n       pSourceFunc\
    \       [2] PSourceAlgorithm DEFAULT\n                                 pSpecifiedEmpty\n\
    \   }\n   END\n"
- title: 9.  ASN.1 Module for RFC 4210
  contents:
  - "9.  ASN.1 Module for RFC 4210\n PKIXCMP-2009\n     { iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n     mechanisms(5) pkix(7) id-mod(0) id-mod-cmp2000-02(50)\
    \ }\n DEFINITIONS EXPLICIT TAGS ::=\n BEGIN\n IMPORTS\n AttributeSet{}, Extensions{},\
    \ EXTENSION, ATTRIBUTE\n FROM PKIX-CommonTypes-2009\n     {iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n     mechanisms(5) pkix(7) id-mod(0) id-mod-pkixCommon-02(57)}\n\
    \ AlgorithmIdentifier{}, SIGNATURE-ALGORITHM, ALGORITHM,\n     DIGEST-ALGORITHM,\
    \ MAC-ALGORITHM\n FROM AlgorithmInformation-2009\n     {iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n     mechanisms(5) pkix(7) id-mod(0)\n     id-mod-algorithmInformation-02(58)}\n\
    \ Certificate, CertificateList\n FROM PKIX1Explicit-2009\n     {iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n     mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-explicit-02(51)}\n\
    \ GeneralName, KeyIdentifier\n FROM PKIX1Implicit-2009\n     {iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n     mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-implicit-02(59)}\n\
    \ CertTemplate, PKIPublicationInfo, EncryptedValue, CertId,\n     CertReqMessages\n\
    \ FROM PKIXCRMF-2009\n     { iso(1) identified-organization(3) dod(6) internet(1)\
    \ security(5)\n     mechanisms(5) pkix(7) id-mod(0) id-mod-crmf2005-02(55) }\n\
    \ -- see also the behavioral clarifications to CRMF codified in\n -- Appendix\
    \ C of this specification\n CertificationRequest\n FROM PKCS-10\n       {iso(1)\
    \ identified-organization(3) dod(6) internet(1) security(5)\n       mechanisms(5)\
    \ pkix(7) id-mod(0) id-mod-pkcs10-2009(69)}\n -- (specified in RFC 2986 with 1993\
    \ ASN.1 syntax and IMPLICIT\n -- tags).  Alternatively, implementers may directly\
    \ include\n -- the [PKCS10] syntax in this module\n ;\n -- the rest of the module\
    \ contains locally defined OIDs and\n -- constructs\n CMPCertificate ::= CHOICE\
    \ { x509v3PKCert Certificate, ... }\n -- This syntax, while bits-on-the-wire compatible\
    \ with the\n -- standard X.509 definition of \"Certificate\", allows the\n --\
    \ possibility of future certificate types (such as X.509\n -- attribute certificates,\
    \ WAP WTLS certificates, or other kinds\n -- of certificates) within this certificate\
    \ management protocol,\n -- should a need ever arise to support such generality.\
    \  Those\n -- implementations that do not foresee a need to ever support\n --\
    \ other certificate types MAY, if they wish, comment out the\n -- above structure\
    \ and \"uncomment\" the following one prior to\n -- compiling this ASN.1 module.\
    \  (Note that interoperability\n -- with implementations that don't do this will\
    \ be unaffected by\n -- this change.)\n -- CMPCertificate ::= Certificate\n PKIMessage\
    \ ::= SEQUENCE {\n     header           PKIHeader,\n     body             PKIBody,\n\
    \     protection   [0] PKIProtection OPTIONAL,\n     extraCerts   [1] SEQUENCE\
    \ SIZE (1..MAX) OF CMPCertificate\n                   OPTIONAL }\n PKIMessages\
    \ ::= SEQUENCE SIZE (1..MAX) OF PKIMessage\n PKIHeader ::= SEQUENCE {\n     pvno\
    \                INTEGER     { cmp1999(1), cmp2000(2) },\n     sender        \
    \      GeneralName,\n     -- identifies the sender\n     recipient           GeneralName,\n\
    \     -- identifies the intended recipient\n     messageTime     [0] GeneralizedTime\
    \         OPTIONAL,\n     -- time of production of this message (used when sender\n\
    \     -- believes that the transport will be \"suitable\"; i.e.,\n     -- that\
    \ the time will still be meaningful upon receipt)\n     protectionAlg   [1] AlgorithmIdentifier{ALGORITHM,\
    \ {...}}\n                             OPTIONAL,\n     -- algorithm used for calculation\
    \ of protection bits\n     senderKID       [2] KeyIdentifier           OPTIONAL,\n\
    \     recipKID        [3] KeyIdentifier           OPTIONAL,\n     -- to identify\
    \ specific keys used for protection\n     transactionID   [4] OCTET STRING   \
    \         OPTIONAL,\n     -- identifies the transaction; i.e., this will be the\
    \ same in\n     -- corresponding request, response, certConf, and PKIConf\n  \
    \   -- messages\n     senderNonce     [5] OCTET STRING            OPTIONAL,\n\
    \     recipNonce      [6] OCTET STRING            OPTIONAL,\n     -- nonces used\
    \ to provide replay protection, senderNonce\n     -- is inserted by the creator\
    \ of this message; recipNonce\n     -- is a nonce previously inserted in a related\
    \ message by\n     -- the intended recipient of this message\n     freeText  \
    \      [7] PKIFreeText             OPTIONAL,\n     -- this may be used to indicate\
    \ context-specific instructions\n     -- (this field is intended for human consumption)\n\
    \     generalInfo     [8] SEQUENCE SIZE (1..MAX) OF\n                        \
    \ InfoTypeAndValue     OPTIONAL\n     -- this may be used to convey context-specific\
    \ information\n     -- (this field not primarily intended for human consumption)\n\
    \ }\n PKIFreeText ::= SEQUENCE SIZE (1..MAX) OF UTF8String\n     -- text encoded\
    \ as UTF-8 String [RFC3629] (note: each\n     -- UTF8String MAY include an [RFC3066]\
    \ language tag\n     -- to indicate the language of the contained text;\n    \
    \ -- see [RFC2482] for details)\n PKIBody ::= CHOICE {       -- message-specific\
    \ body elements\n     ir       [0]  CertReqMessages,        --Initialization Request\n\
    \     ip       [1]  CertRepMessage,         --Initialization Response\n     cr\
    \       [2]  CertReqMessages,        --Certification Request\n     cp       [3]\
    \  CertRepMessage,         --Certification Response\n     p10cr    [4]  CertificationRequest,\
    \   --imported from [PKCS10]\n     popdecc  [5]  POPODecKeyChallContent, --pop\
    \ Challenge\n     popdecr  [6]  POPODecKeyRespContent,  --pop Response\n     kur\
    \      [7]  CertReqMessages,        --Key Update Request\n     kup      [8]  CertRepMessage,\
    \         --Key Update Response\n     krr      [9]  CertReqMessages,        --Key\
    \ Recovery Request\n     krp      [10] KeyRecRepContent,       --Key Recovery\
    \ Response\n     rr       [11] RevReqContent,          --Revocation Request\n\
    \     rp       [12] RevRepContent,          --Revocation Response\n     ccr  \
    \    [13] CertReqMessages,        --Cross-Cert. Request\n     ccp      [14] CertRepMessage,\
    \         --Cross-Cert. Response\n     ckuann   [15] CAKeyUpdAnnContent,     --CA\
    \ Key Update Ann.\n     cann     [16] CertAnnContent,         --Certificate Ann.\n\
    \     rann     [17] RevAnnContent,          --Revocation Ann.\n     crlann   [18]\
    \ CRLAnnContent,          --CRL Announcement\n     pkiconf  [19] PKIConfirmContent,\
    \      --Confirmation\n     nested   [20] NestedMessageContent,   --Nested Message\n\
    \     genm     [21] GenMsgContent,          --General Message\n     genp     [22]\
    \ GenRepContent,          --General Response\n     error    [23] ErrorMsgContent,\
    \        --Error Message\n     certConf [24] CertConfirmContent,     --Certificate\
    \ confirm\n     pollReq  [25] PollReqContent,         --Polling request\n    \
    \ pollRep  [26] PollRepContent          --Polling response\n }\n PKIProtection\
    \ ::= BIT STRING\n ProtectedPart ::= SEQUENCE {\n     header    PKIHeader,\n \
    \    body      PKIBody }\n id-PasswordBasedMac OBJECT IDENTIFIER ::= { iso(1)\
    \ member-body(2)\n     usa(840) nt(113533) nsn(7) algorithms(66) 13 }\n PBMParameter\
    \ ::= SEQUENCE {\n     salt                OCTET STRING,\n     -- note:  implementations\
    \ MAY wish to limit acceptable sizes\n     -- of this string to values appropriate\
    \ for their environment\n     -- in order to reduce the risk of denial-of-service\
    \ attacks\n     owf                 AlgorithmIdentifier{DIGEST-ALGORITHM, {...}},\n\
    \     -- AlgId for a One-Way Function (SHA-1 recommended)\n     iterationCount\
    \      INTEGER,\n     -- number of times the OWF is applied\n     -- note:  implementations\
    \ MAY wish to limit acceptable sizes\n     -- of this integer to values appropriate\
    \ for their environment\n     -- in order to reduce the risk of denial-of-service\
    \ attacks\n     mac                 AlgorithmIdentifier{MAC-ALGORITHM, {...}}\n\
    \     -- the MAC AlgId (e.g., DES-MAC, Triple-DES-MAC [PKCS11],\n     -- or HMAC\
    \ [RFC2104, RFC2202])\n }\n id-DHBasedMac OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n\
    \     usa(840) nt(113533) nsn(7) algorithms(66) 30 }\n DHBMParameter ::= SEQUENCE\
    \ {\n     owf                 AlgorithmIdentifier{DIGEST-ALGORITHM, {...}},\n\
    \     -- AlgId for a One-Way Function (SHA-1 recommended)\n     mac          \
    \       AlgorithmIdentifier{MAC-ALGORITHM, {...}}\n     -- the MAC AlgId (e.g.,\
    \ DES-MAC, Triple-DES-MAC [PKCS11],\n     -- or HMAC [RFC2104, RFC2202])\n }\n\
    \ PKIStatus ::= INTEGER {\n     accepted               (0),\n     -- you got exactly\
    \ what you asked for\n     grantedWithMods        (1),\n     -- you got something\
    \ like what you asked for; the\n     -- requester is responsible for ascertaining\
    \ the differences\n     rejection              (2),\n     -- you don't get it,\
    \ more information elsewhere in the message\n     waiting                (3),\n\
    \     -- the request body part has not yet been processed; expect to\n     --\
    \ hear more later (note: proper handling of this status\n     -- response MAY\
    \ use the polling req/rep PKIMessages specified\n     -- in Section 5.3.22; alternatively,\
    \ polling in the underlying\n     -- transport layer MAY have some utility in\
    \ this regard)\n     revocationWarning      (4),\n     -- this message contains\
    \ a warning that a revocation is\n     -- imminent\n     revocationNotification\
    \ (5),\n     -- notification that a revocation has occurred\n     keyUpdateWarning\
    \       (6)\n     -- update already done for the oldCertId specified in\n    \
    \ -- CertReqMsg\n }\n PKIFailureInfo ::= BIT STRING {\n -- since we can fail in\
    \ more than one way!\n -- More codes may be added in the future if/when required.\n\
    \     badAlg              (0),\n     -- unrecognized or unsupported Algorithm\
    \ Identifier\n     badMessageCheck     (1),\n     -- integrity check failed (e.g.,\
    \ signature did not verify)\n     badRequest          (2),\n     -- transaction\
    \ not permitted or supported\n     badTime             (3),\n     -- messageTime\
    \ was not sufficiently close to the system time,\n     -- as defined by local\
    \ policy\n     badCertId           (4),\n     -- no certificate could be found\
    \ matching the provided criteria\n     badDataFormat       (5),\n     -- the data\
    \ submitted has the wrong format\n     wrongAuthority      (6),\n     -- the authority\
    \ indicated in the request is different from the\n     -- one creating the response\
    \ token\n     incorrectData       (7),\n     -- the requester's data is incorrect\
    \ (for notary services)\n     missingTimeStamp    (8),\n     -- when the timestamp\
    \ is missing but should be there\n     -- (by policy)\n     badPOP           \
    \   (9),\n     -- the proof-of-possession failed\n     certRevoked         (10),\n\
    \     -- the certificate has already been revoked\n     certConfirmed       (11),\n\
    \     -- the certificate has already been confirmed\n     wrongIntegrity     \
    \ (12),\n     -- invalid integrity, password based instead of signature or\n \
    \    -- vice versa\n     badRecipientNonce   (13),\n     -- invalid recipient\
    \ nonce, either missing or wrong value\n     timeNotAvailable    (14),\n     --\
    \ the TSA's time source is not available\n     unacceptedPolicy    (15),\n   \
    \  -- the requested TSA policy is not supported by the TSA\n     unacceptedExtension\
    \ (16),\n     -- the requested extension is not supported by the TSA\n     addInfoNotAvailable\
    \ (17),\n     -- the additional information requested could not be\n     -- understood\
    \ or is not available\n     badSenderNonce      (18),\n     -- invalid sender\
    \ nonce, either missing or wrong size\n     badCertTemplate     (19),\n     --\
    \ invalid cert. template or missing mandatory information\n     signerNotTrusted\
    \    (20),\n     -- signer of the message unknown or not trusted\n     transactionIdInUse\
    \  (21),\n     -- the transaction identifier is already in use\n     unsupportedVersion\
    \  (22),\n     -- the version of the message is not supported\n     notAuthorized\
    \       (23),\n     -- the sender was not authorized to make the preceding\n \
    \    -- request or perform the preceding action\n     systemUnavail       (24),\n\
    \     -- the request cannot be handled due to system unavailability\n     systemFailure\
    \       (25),\n     -- the request cannot be handled due to system failure\n \
    \    duplicateCertReq    (26)\n     -- certificate cannot be issued because a\
    \ duplicate\n     -- certificate already exists\n }\n PKIStatusInfo ::= SEQUENCE\
    \ {\n     status        PKIStatus,\n     statusString  PKIFreeText     OPTIONAL,\n\
    \     failInfo      PKIFailureInfo  OPTIONAL }\n OOBCert ::= CMPCertificate\n\
    \ OOBCertHash ::= SEQUENCE {\n     hashAlg     [0] AlgorithmIdentifier{DIGEST-ALGORITHM,\
    \ {...}}\n                         OPTIONAL,\n     certId      [1] CertId    \
    \              OPTIONAL,\n     hashVal         BIT STRING\n     -- hashVal is\
    \ calculated over the DER encoding of the\n     -- self-signed certificate with\
    \ the identifier certID.\n }\n POPODecKeyChallContent ::= SEQUENCE OF Challenge\n\
    \ -- One Challenge per encryption key certification request (in the\n -- same\
    \ order as these requests appear in CertReqMessages).\n Challenge ::= SEQUENCE\
    \ {\n     owf                 AlgorithmIdentifier{DIGEST-ALGORITHM, {...}}\n \
    \                            OPTIONAL,\n     -- MUST be present in the first Challenge;\
    \ MAY be omitted in\n     -- any subsequent Challenge in POPODecKeyChallContent\
    \ (if\n     -- omitted, then the owf used in the immediately preceding\n     --\
    \ Challenge is to be used).\n     witness             OCTET STRING,\n     -- the\
    \ result of applying the one-way function (owf) to a\n     -- randomly-generated\
    \ INTEGER, A.  [Note that a different\n     -- INTEGER MUST be used for each Challenge.]\n\
    \     challenge           OCTET STRING\n     -- the encryption (under the public\
    \ key for which the cert.\n     -- request is being made) of Rand, where Rand\
    \ is specified as\n     --   Rand ::= SEQUENCE {\n     --      int      INTEGER,\n\
    \     --       - the randomly-generated INTEGER A (above)\n     --      sender\
    \   GeneralName\n     --       - the sender's name (as included in PKIHeader)\n\
    \     --   }\n }\n POPODecKeyRespContent ::= SEQUENCE OF INTEGER\n -- One INTEGER\
    \ per encryption key certification request (in the\n -- same order as these requests\
    \ appear in CertReqMessages).  The\n -- retrieved INTEGER A (above) is returned\
    \ to the sender of the\n -- corresponding Challenge.\n CertRepMessage ::= SEQUENCE\
    \ {\n     caPubs       [1] SEQUENCE SIZE (1..MAX) OF CMPCertificate\n        \
    \           OPTIONAL,\n     response         SEQUENCE OF CertResponse }\n CertResponse\
    \ ::= SEQUENCE {\n     certReqId           INTEGER,\n     -- to match this response\
    \ with the corresponding request (a value\n     -- of -1 is to be used if certReqId\
    \ is not specified in the\n     -- corresponding request)\n     status       \
    \       PKIStatusInfo,\n     certifiedKeyPair    CertifiedKeyPair    OPTIONAL,\n\
    \     rspInfo             OCTET STRING        OPTIONAL\n     -- analogous to the\
    \ id-regInfo-utf8Pairs string defined\n     -- for regInfo in CertReqMsg [RFC4211]\n\
    \ }\n CertifiedKeyPair ::= SEQUENCE {\n     certOrEncCert       CertOrEncCert,\n\
    \     privateKey      [0] EncryptedValue      OPTIONAL,\n     -- see [RFC4211]\
    \ for comment on encoding\n     publicationInfo [1] PKIPublicationInfo  OPTIONAL\
    \ }\n CertOrEncCert ::= CHOICE {\n     certificate     [0] CMPCertificate,\n \
    \    encryptedCert   [1] EncryptedValue }\n KeyRecRepContent ::= SEQUENCE {\n\
    \     status                  PKIStatusInfo,\n     newSigCert          [0] CMPCertificate\
    \ OPTIONAL,\n     caCerts             [1] SEQUENCE SIZE (1..MAX) OF\n        \
    \                              CMPCertificate OPTIONAL,\n     keyPairHist    \
    \     [2] SEQUENCE SIZE (1..MAX) OF\n                                      CertifiedKeyPair\
    \ OPTIONAL }\n RevReqContent ::= SEQUENCE OF RevDetails\n RevDetails ::= SEQUENCE\
    \ {\n     certDetails         CertTemplate,\n     -- allows requester to specify\
    \ as much as they can about\n     -- the cert. for which revocation is requested\n\
    \     -- (e.g., for cases in which serialNumber is not available)\n     crlEntryDetails\
    \     Extensions{{...}}    OPTIONAL\n     -- requested crlEntryExtensions\n }\n\
    \ RevRepContent ::= SEQUENCE {\n     status       SEQUENCE SIZE (1..MAX) OF PKIStatusInfo,\n\
    \     -- in same order as was sent in RevReqContent\n     revCerts [0] SEQUENCE\
    \ SIZE (1..MAX) OF CertId OPTIONAL,\n     -- IDs for which revocation was requested\n\
    \     -- (same order as status)\n     crls     [1] SEQUENCE SIZE (1..MAX) OF CertificateList\
    \ OPTIONAL\n     -- the resulting CRLs (there may be more than one)\n }\n CAKeyUpdAnnContent\
    \ ::= SEQUENCE {\n     oldWithNew   CMPCertificate, -- old pub signed with new\
    \ priv\n     newWithOld   CMPCertificate, -- new pub signed with old priv\n  \
    \   newWithNew   CMPCertificate  -- new pub signed with new priv\n }\n CertAnnContent\
    \ ::= CMPCertificate\n RevAnnContent ::= SEQUENCE {\n     status             \
    \ PKIStatus,\n     certId              CertId,\n     willBeRevokedAt     GeneralizedTime,\n\
    \     badSinceDate        GeneralizedTime,\n     crlDetails          Extensions{{...}}\
    \  OPTIONAL\n     -- extra CRL details (e.g., crl number, reason, location, etc.)\n\
    \ }\n CRLAnnContent ::= SEQUENCE OF CertificateList\n PKIConfirmContent ::= NULL\n\
    \ NestedMessageContent ::= PKIMessages\n INFO-TYPE-AND-VALUE ::= TYPE-IDENTIFIER\n\
    \ InfoTypeAndValue ::= SEQUENCE {\n     infoType    INFO-TYPE-AND-VALUE.\n   \
    \                  &id({SupportedInfoSet}),\n     infoValue   INFO-TYPE-AND-VALUE.\n\
    \                     &Type({SupportedInfoSet}{@infoType}) }\n SupportedInfoSet\
    \ INFO-TYPE-AND-VALUE ::= { ... }\n -- Example InfoTypeAndValue contents include,\
    \ but are not limited\n -- to, the following (uncomment in this ASN.1 module and\
    \ use as\n -- appropriate for a given environment):\n --\n --   id-it-caProtEncCert\
    \    OBJECT IDENTIFIER ::= {id-it 1}\n --      CAProtEncCertValue      ::= CMPCertificate\n\
    \ --   id-it-signKeyPairTypes OBJECT IDENTIFIER ::= {id-it 2}\n --      SignKeyPairTypesValue\
    \   ::= SEQUENCE OF\n --                                      AlgorithmIdentifier{{...}}\n\
    \ --   id-it-encKeyPairTypes  OBJECT IDENTIFIER ::= {id-it 3}\n --      EncKeyPairTypesValue\
    \    ::= SEQUENCE OF\n --                                      AlgorithmIdentifier{{...}}\n\
    \ --   id-it-preferredSymmAlg OBJECT IDENTIFIER ::= {id-it 4}\n --      PreferredSymmAlgValue\
    \   ::= AlgorithmIdentifier{{...}}\n --   id-it-caKeyUpdateInfo  OBJECT IDENTIFIER\
    \ ::= {id-it 5}\n --      CAKeyUpdateInfoValue    ::= CAKeyUpdAnnContent\n --\
    \   id-it-currentCRL       OBJECT IDENTIFIER ::= {id-it 6}\n --      CurrentCRLValue\
    \         ::= CertificateList\n --   id-it-unsupportedOIDs  OBJECT IDENTIFIER\
    \ ::= {id-it 7}\n --      UnsupportedOIDsValue    ::= SEQUENCE OF OBJECT IDENTIFIER\n\
    \ --   id-it-keyPairParamReq  OBJECT IDENTIFIER ::= {id-it 10}\n --      KeyPairParamReqValue\
    \    ::= OBJECT IDENTIFIER\n --   id-it-keyPairParamRep  OBJECT IDENTIFIER ::=\
    \ {id-it 11}\n --      KeyPairParamRepValue    ::= AlgorithmIdentifer\n --   id-it-revPassphrase\
    \    OBJECT IDENTIFIER ::= {id-it 12}\n --      RevPassphraseValue      ::= EncryptedValue\n\
    \ --   id-it-implicitConfirm  OBJECT IDENTIFIER ::= {id-it 13}\n --      ImplicitConfirmValue\
    \    ::= NULL\n --   id-it-confirmWaitTime  OBJECT IDENTIFIER ::= {id-it 14}\n\
    \ --      ConfirmWaitTimeValue    ::= GeneralizedTime\n --   id-it-origPKIMessage\
    \   OBJECT IDENTIFIER ::= {id-it 15}\n --      OrigPKIMessageValue     ::= PKIMessages\n\
    \ --   id-it-suppLangTags     OBJECT IDENTIFIER ::= {id-it 16}\n --      SuppLangTagsValue\
    \       ::= SEQUENCE OF UTF8String\n --\n -- where\n --\n --   id-pkix OBJECT\
    \ IDENTIFIER ::= {\n --      iso(1) identified-organization(3)\n --      dod(6)\
    \ internet(1) security(5) mechanisms(5) pkix(7)}\n -- and\n --   id-it   OBJECT\
    \ IDENTIFIER ::= {id-pkix 4}\n --\n --\n -- This construct MAY also be used to\
    \ define new PKIX Certificate\n -- Management Protocol request and response messages,\
    \ or general-\n -- purpose (e.g., announcement) messages for future needs or for\n\
    \ -- specific environments.\n GenMsgContent ::= SEQUENCE OF InfoTypeAndValue\n\
    \ -- May be sent by EE, RA, or CA (depending on message content).\n -- The OPTIONAL\
    \ infoValue parameter of InfoTypeAndValue will\n -- typically be omitted for some\
    \ of the examples given above.\n -- The receiver is free to ignore any contained\
    \ OBJECT IDs that it\n -- does not recognize.  If sent from EE to CA, the empty\
    \ set\n -- indicates that the CA may send\n -- any/all information that it wishes.\n\
    \ GenRepContent ::= SEQUENCE OF InfoTypeAndValue\n -- Receiver MAY ignore any\
    \ contained OIDs that it does not\n -- recognize.\n ErrorMsgContent ::= SEQUENCE\
    \ {\n     pKIStatusInfo          PKIStatusInfo,\n     errorCode              INTEGER\
    \           OPTIONAL,\n     -- implementation-specific error codes\n     errorDetails\
    \           PKIFreeText       OPTIONAL\n     -- implementation-specific error\
    \ details\n }\n CertConfirmContent ::= SEQUENCE OF CertStatus\n CertStatus ::=\
    \ SEQUENCE {\n     certHash    OCTET STRING,\n     -- the hash of the certificate,\
    \ using the same hash algorithm\n     -- as is used to create and verify the certificate\
    \ signature\n     certReqId   INTEGER,\n     -- to match this confirmation with\
    \ the corresponding req/rep\n     statusInfo  PKIStatusInfo OPTIONAL }\n PollReqContent\
    \ ::= SEQUENCE OF SEQUENCE {\n     certReqId              INTEGER }\n PollRepContent\
    \ ::= SEQUENCE OF SEQUENCE {\n     certReqId              INTEGER,\n     checkAfter\
    \             INTEGER,  -- time in seconds\n     reason                 PKIFreeText\
    \ OPTIONAL }\n END\n"
- title: 10.  ASN.1 Module for RFC 4211
  contents:
  - "10.  ASN.1 Module for RFC 4211\n  PKIXCRMF-2009\n      {iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n      mechanisms(5) pkix(7) id-mod(0) id-mod-crmf2005-02(55)}\n\
    \  DEFINITIONS IMPLICIT TAGS ::=\n  BEGIN\n  IMPORTS\n  AttributeSet{}, Extensions{},\
    \ EXTENSION, ATTRIBUTE,\n      SingleAttribute{}\n  FROM PKIX-CommonTypes-2009\n\
    \      {iso(1) identified-organization(3) dod(6) internet(1)\n      security(5)\
    \ mechanisms(5) pkix(7) id-mod(0)\n      id-mod-pkixCommon-02(57) }\n  AlgorithmIdentifier{},\
    \ SIGNATURE-ALGORITHM, ALGORITHM,\n      DIGEST-ALGORITHM, MAC-ALGORITHM, PUBLIC-KEY\n\
    \  FROM AlgorithmInformation-2009\n      {iso(1) identified-organization(3) dod(6)\
    \ internet(1) security(5)\n      mechanisms(5) pkix(7) id-mod(0)\n      id-mod-algorithmInformation-02(58)}\n\
    \  Version, Name, Time, SubjectPublicKeyInfo, UniqueIdentifier, id-pkix,\n   \
    \   SignatureAlgorithms\n  FROM PKIX1Explicit-2009\n      {iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n      mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-explicit-02(51)}\n\
    \  GeneralName, CertExtensions\n  FROM PKIX1Implicit-2009\n      {iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n      mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-implicit-02(59)}\n\
    \  EnvelopedData, CONTENT-TYPE\n  FROM CryptographicMessageSyntax-2009\n     \
    \ { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n      smime(16)\
    \ modules(0) id-mod-cms-2004-02(41)}\n  maca-hMAC-SHA1\n  FROM CryptographicMessageSyntaxAlgorithms-2009\n\
    \      { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    \
    \  smime(16) modules(0) id-mod-cmsalg-2001-02(37) }\n  mda-sha1\n  FROM PKIXAlgs-2009\n\
    \      { iso(1) identified-organization(3) dod(6)\n      internet(1) security(5)\
    \ mechanisms(5) pkix(7) id-mod(0)\n      id-mod-pkix1-algorithms2008-02(56) }\
    \ ;\n  -- arc for Internet X.509 PKI protocols and their components\n  id-pkip\
    \  OBJECT IDENTIFIER ::= { id-pkix 5 }\n  id-smime OBJECT IDENTIFIER ::= { iso(1)\
    \ member-body(2)\n       us(840) rsadsi(113549) pkcs(1) pkcs9(9) 16 }\n  id-ct\
    \   OBJECT IDENTIFIER ::= { id-smime  1 }  -- content types\n  -- Core definitions\
    \ for this module\n  CertReqMessages ::= SEQUENCE SIZE (1..MAX) OF CertReqMsg\n\
    \  CertReqMsg ::= SEQUENCE {\n      certReq   CertRequest,\n      popo       ProofOfPossession\
    \  OPTIONAL,\n      -- content depends upon key type\n      regInfo   SEQUENCE\
    \ SIZE(1..MAX) OF\n          SingleAttribute{{RegInfoSet}} OPTIONAL }\n  CertRequest\
    \ ::= SEQUENCE {\n      certReqId     INTEGER,\n      -- ID for matching request\
    \ and reply\n      certTemplate  CertTemplate,\n      -- Selected fields of cert\
    \ to be issued\n      controls      Controls OPTIONAL }\n      -- Attributes affecting\
    \ issuance\n  CertTemplate ::= SEQUENCE {\n      version      [0] Version    \
    \           OPTIONAL,\n      serialNumber [1] INTEGER               OPTIONAL,\n\
    \      signingAlg   [2] AlgorithmIdentifier{SIGNATURE-ALGORITHM,\n           \
    \                {SignatureAlgorithms}}   OPTIONAL,\n      issuer       [3] Name\
    \                  OPTIONAL,\n      validity     [4] OptionalValidity      OPTIONAL,\n\
    \      subject      [5] Name                  OPTIONAL,\n      publicKey    [6]\
    \ SubjectPublicKeyInfo  OPTIONAL,\n      issuerUID    [7] UniqueIdentifier   \
    \   OPTIONAL,\n      subjectUID   [8] UniqueIdentifier      OPTIONAL,\n      extensions\
    \   [9] Extensions{{CertExtensions}}  OPTIONAL }\n  OptionalValidity ::= SEQUENCE\
    \ {\n      notBefore  [0] Time OPTIONAL,\n      notAfter   [1] Time OPTIONAL }\
    \ -- at least one MUST be present\n  Controls  ::= SEQUENCE SIZE(1..MAX) OF SingleAttribute\n\
    \                    {{RegControlSet}}\n  ProofOfPossession ::= CHOICE {\n   \
    \   raVerified        [0] NULL,\n      -- used if the RA has already verified\
    \ that the requester is in\n      -- possession of the private key\n      signature\
    \         [1] POPOSigningKey,\n      keyEncipherment   [2] POPOPrivKey,\n    \
    \  keyAgreement      [3] POPOPrivKey }\n  POPOSigningKey ::= SEQUENCE {\n    \
    \  poposkInput           [0] POPOSigningKeyInput OPTIONAL,\n      algorithmIdentifier\
    \   AlgorithmIdentifier{SIGNATURE-ALGORITHM,\n                               \
    \ {SignatureAlgorithms}},\n      signature             BIT STRING }\n      --\
    \ The signature (using \"algorithmIdentifier\") is on the\n      -- DER-encoded\
    \ value of poposkInput.  NOTE: If the CertReqMsg\n      -- certReq CertTemplate\
    \ contains the subject and publicKey values,\n      -- then poposkInput MUST be\
    \ omitted and the signature MUST be\n      -- computed over the DER-encoded value\
    \ of CertReqMsg certReq.  If\n      -- the CertReqMsg certReq CertTemplate does\
    \ not contain both the\n      -- public key and subject values (i.e., if it contains\
    \ only one\n      -- of these, or neither), then poposkInput MUST be present and\n\
    \      -- MUST be signed.\n  POPOSigningKeyInput ::= SEQUENCE {\n      authInfo\
    \            CHOICE {\n       sender              [0] GeneralName,\n       --\
    \ used only if an authenticated identity has been\n       -- established for the\
    \ sender (e.g., a DN from a\n       -- previously-issued and currently-valid certificate)\n\
    \       publicKeyMAC        PKMACValue },\n       -- used if no authenticated\
    \ GeneralName currently exists for\n       -- the sender; publicKeyMAC contains\
    \ a password-based MAC\n       -- on the DER-encoded value of publicKey\n    \
    \  publicKey           SubjectPublicKeyInfo }  -- from CertTemplate\n  PKMACValue\
    \ ::= SEQUENCE {\n      algId  AlgorithmIdentifier{MAC-ALGORITHM,\n          \
    \       {Password-MACAlgorithms}},\n      value  BIT STRING }\n  --\n  --  Define\
    \ the currently only acceptable MAC algorithm to be used\n  --  for the PKMACValue\
    \ structure\n  --\n  id-PasswordBasedMac OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n\
    \      usa(840) nt(113533) nsn(7) algorithms(66) 13 }\n  Password-MACAlgorithms\
    \ MAC-ALGORITHM ::= {\n      {IDENTIFIER id-PasswordBasedMac\n       PARAMS TYPE\
    \ PBMParameter ARE required\n       IS-KEYED-MAC TRUE\n      }, ...\n  }\n  PBMParameter\
    \ ::= SEQUENCE {\n     salt                OCTET STRING,\n     owf           \
    \      AlgorithmIdentifier{DIGEST-ALGORITHM,\n                             {DigestAlgorithms}},\n\
    \     -- AlgId for a One-Way Function (SHA-1 recommended)\n     iterationCount\
    \      INTEGER,\n     -- number of times the OWF is applied\n     mac        \
    \         AlgorithmIdentifier{MAC-ALGORITHM,\n                             {MACAlgorithms}}\n\
    \     -- the MAC AlgId (e.g., DES-MAC, Triple-DES-MAC, or HMAC\n  }\n  DigestAlgorithms\
    \ DIGEST-ALGORITHM ::= {\n     mda-sha1, ...\n  }\n  MACAlgorithms MAC-ALGORITHM\
    \ ::= {\n      -- The modules containing the ASN.1 for the DES and 3DES MAC\n\
    \      -- algorithms have not been updated at the time that this is\n      --\
    \ being published.  Users of this module should define the\n      -- appropriate\
    \ MAC-ALGORITHM objects and uncomment the\n      -- following lines if they support\
    \ these MAC algorithms.\n      -- maca-des-mac | maca-3des-mac --\n      maca-hMAC-SHA1,\n\
    \      ...\n  }\n  POPOPrivKey ::= CHOICE {\n      thisMessage       [0] BIT STRING,\
    \         -- Deprecated\n      -- possession is proven in this message (which\
    \ contains\n      -- the private key itself (encrypted for the CA))\n      subsequentMessage\
    \ [1] SubsequentMessage,\n      -- possession will be proven in a subsequent message\n\
    \      dhMAC             [2] BIT STRING,         -- Deprecated\n      agreeMAC\
    \          [3] PKMACValue,\n      encryptedKey      [4] EnvelopedData }\n    \
    \  -- for keyAgreement (only), possession is proven in this message\n      --\
    \ (which contains a MAC (over the DER-encoded value of the\n      -- certReq parameter\
    \ in CertReqMsg, which MUST include both\n      -- subject and publicKey) based\
    \ on a key derived from the end\n      -- entity's private DH key and the CA's\
    \ public DH key);\n  SubsequentMessage ::= INTEGER {\n      encrCert (0),\n  \
    \    -- requests that resulting certificate be encrypted for the\n      -- end\
    \ entity (following which, POP will be proven in a\n      -- confirmation message)\n\
    \      challengeResp (1) }\n      -- requests that CA engage in challenge-response\
    \ exchange with\n      -- end entity in order to prove private key possession\n\
    \  --\n  -- id-ct-encKeyWithID content type used as the content type for the\n\
    \  -- EnvelopedData in POPOPrivKey.\n  -- It contains both a private key and an\
    \ identifier for key escrow\n  -- agents to check against recovery requestors.\n\
    \  --\n  ct-encKeyWithID CONTENT-TYPE ::=\n      { EncKeyWithID IDENTIFIED BY\
    \ id-ct-encKeyWithID }\n  id-ct-encKeyWithID OBJECT IDENTIFIER ::= {id-ct 21}\n\
    \  EncKeyWithID ::= SEQUENCE {\n      privateKey           PrivateKeyInfo,\n \
    \     identifier CHOICE {\n          string             UTF8String,\n        \
    \  generalName        GeneralName\n      } OPTIONAL\n  }\n  PrivateKeyInfo ::=\
    \ SEQUENCE {\n     version                   INTEGER,\n     privateKeyAlgorithm\
    \       AlgorithmIdentifier{PUBLIC-KEY, {...}},\n     privateKey             \
    \   OCTET STRING,\n               --  Structure of public key is in PUBLIC-KEY.&PrivateKey\n\
    \     attributes                [0] IMPLICIT Attributes OPTIONAL\n  }\n  Attributes\
    \ ::= SET OF AttributeSet{{PrivateKeyAttributes}}\n  PrivateKeyAttributes ATTRIBUTE\
    \ ::= {...}\n  --\n  -- 6.  Registration Controls in CRMF\n  --\n  id-regCtrl\
    \ OBJECT IDENTIFIER ::= { id-pkip 1 }\n  RegControlSet ATTRIBUTE ::= {\n     \
    \ regCtrl-regToken | regCtrl-authenticator |\n      regCtrl-pkiPublicationInfo\
    \ | regCtrl-pkiArchiveOptions |\n      regCtrl-oldCertID | regCtrl-protocolEncrKey,\
    \ ... }\n  --\n  --  6.1.  Registration Token Control\n  --\n  regCtrl-regToken\
    \ ATTRIBUTE ::=\n      { TYPE RegToken IDENTIFIED BY id-regCtrl-regToken }\n \
    \ id-regCtrl-regToken OBJECT IDENTIFIER ::= { id-regCtrl 1 }\n  RegToken ::= UTF8String\n\
    \  --\n  --  6.2.  Authenticator Control\n  --\n  regCtrl-authenticator ATTRIBUTE\
    \ ::=\n      { TYPE Authenticator IDENTIFIED BY id-regCtrl-authenticator }\n \
    \ id-regCtrl-authenticator OBJECT IDENTIFIER ::= { id-regCtrl 2 }\n  Authenticator\
    \ ::= UTF8String\n  --\n  --  6.3.  Publication Information Control\n  --\n  regCtrl-pkiPublicationInfo\
    \ ATTRIBUTE ::=\n      { TYPE PKIPublicationInfo IDENTIFIED BY\n          id-regCtrl-pkiPublicationInfo\
    \ }\n  id-regCtrl-pkiPublicationInfo OBJECT IDENTIFIER ::= { id-regCtrl 3 }\n\
    \  PKIPublicationInfo ::= SEQUENCE {\n      action     INTEGER {\n           \
    \          dontPublish (0),\n                     pleasePublish (1) },\n     \
    \ pubInfos  SEQUENCE SIZE (1..MAX) OF SinglePubInfo OPTIONAL }\n      -- pubInfos\
    \ MUST NOT be present if action is \"dontPublish\"\n      -- (if action is \"\
    pleasePublish\" and pubInfos is omitted,\n      -- \"dontCare\" is assumed)\n\
    \  SinglePubInfo ::= SEQUENCE {\n      pubMethod    INTEGER {\n          dontCare\
    \    (0),\n          x500        (1),\n          web         (2),\n          ldap\
    \        (3) },\n      pubLocation  GeneralName OPTIONAL }\n  --\n  --  6.4. \
    \ Archive Options Control\n  --\n  regCtrl-pkiArchiveOptions ATTRIBUTE ::=\n \
    \     { TYPE PKIArchiveOptions IDENTIFIED BY\n          id-regCtrl-pkiArchiveOptions\
    \ }\n  id-regCtrl-pkiArchiveOptions OBJECT IDENTIFIER ::= { id-regCtrl 4 }\n \
    \ PKIArchiveOptions ::= CHOICE {\n      encryptedPrivKey     [0] EncryptedKey,\n\
    \      -- the actual value of the private key\n      keyGenParameters     [1]\
    \ KeyGenParameters,\n      -- parameters that allow the private key to be re-generated\n\
    \      archiveRemGenPrivKey [2] BOOLEAN }\n      -- set to TRUE if sender wishes\
    \ receiver to archive the private\n      -- key of a key pair that the receiver\
    \ generates in response to\n      -- this request; set to FALSE if no archive\
    \ is desired.\n  EncryptedKey ::= CHOICE {\n      encryptedValue        EncryptedValue,\
    \   -- Deprecated\n      envelopedData     [0] EnvelopedData }\n      -- The encrypted\
    \ private key MUST be placed in the envelopedData\n      -- encryptedContentInfo\
    \ encryptedContent OCTET STRING.\n  --\n  --  We skipped doing the full constraints\
    \ here since this structure\n  --      has been deprecated in favor of EnvelopedData\n\
    \  --\n  EncryptedValue ::= SEQUENCE {\n      intendedAlg   [0] AlgorithmIdentifier{ALGORITHM,\
    \ {...}}  OPTIONAL,\n      -- the intended algorithm for which the value will\
    \ be used\n      symmAlg       [1] AlgorithmIdentifier{ALGORITHM, {...}}  OPTIONAL,\n\
    \      -- the symmetric algorithm used to encrypt the value\n      encSymmKey\
    \    [2] BIT STRING           OPTIONAL,\n      -- the (encrypted) symmetric key\
    \ used to encrypt the value\n      keyAlg        [3] AlgorithmIdentifier{ALGORITHM,\
    \ {...}}  OPTIONAL,\n      -- algorithm used to encrypt the symmetric key\n  \
    \    valueHint     [4] OCTET STRING         OPTIONAL,\n      -- a brief description\
    \ or identifier of the encValue content\n      -- (may be meaningful only to the\
    \ sending entity, and used only\n      -- if EncryptedValue might be re-examined\
    \ by the sending entity\n      -- in the future)\n      encValue       BIT STRING\
    \ }\n      -- the encrypted value itself\n  -- When EncryptedValue is used to\
    \ carry a private key (as opposed to\n  -- a certificate), implementations MUST\
    \ support the encValue field\n  -- containing an encrypted PrivateKeyInfo as defined\
    \ in [PKCS11],\n  -- section 12.11.  If encValue contains some other format/encoding\n\
    \  -- for the private key, the first octet of valueHint MAY be used\n  -- to indicate\
    \ the format/encoding (but note that the possible values\n  -- of this octet are\
    \ not specified at this time).  In all cases, the\n  -- intendedAlg field MUST\
    \ be used to indicate at least the OID of\n  -- the intended algorithm of the\
    \ private key, unless this information\n  -- is known a priori to both sender\
    \ and receiver by some other means.\n  KeyGenParameters ::= OCTET STRING\n  --\n\
    \  --  6.5.  OldCert ID Control\n  --\n  regCtrl-oldCertID ATTRIBUTE ::=\n   \
    \   { TYPE OldCertId IDENTIFIED BY id-regCtrl-oldCertID }\n  id-regCtrl-oldCertID\
    \  OBJECT IDENTIFIER ::= { id-regCtrl 5 }\n  OldCertId ::= CertId\n  CertId ::=\
    \ SEQUENCE {\n      issuer           GeneralName,\n      serialNumber     INTEGER\
    \ }\n  --\n  -- 6.6.  Protocol Encryption Key Control\n  --\n  regCtrl-protocolEncrKey\
    \ ATTRIBUTE ::=\n      { TYPE ProtocolEncrKey IDENTIFIED BY id-regCtrl-protocolEncrKey\
    \ }\n  id-regCtrl-protocolEncrKey    OBJECT IDENTIFIER ::= { id-regCtrl 6 }\n\
    \  ProtocolEncrKey ::= SubjectPublicKeyInfo\n  --\n  -- 7.  Registration Info\
    \ in CRMF\n  --\n  id-regInfo OBJECT IDENTIFIER ::= { id-pkip 2 }\n  RegInfoSet\
    \ ATTRIBUTE ::=\n      { regInfo-utf8Pairs | regInfo-certReq }\n  --\n  -- 7.1.\
    \  utf8Pairs RegInfo Control\n  --\n  regInfo-utf8Pairs ATTRIBUTE ::=\n      {\
    \ TYPE UTF8Pairs IDENTIFIED BY id-regInfo-utf8Pairs }\n  id-regInfo-utf8Pairs\
    \    OBJECT IDENTIFIER ::= { id-regInfo 1 }\n  --with syntax\n  UTF8Pairs ::=\
    \ UTF8String\n  --\n  --  7.2.  certReq RegInfo Control\n  --\n  regInfo-certReq\
    \ ATTRIBUTE ::=\n      { TYPE CertReq IDENTIFIED BY id-regInfo-certReq }\n  id-regInfo-certReq\
    \       OBJECT IDENTIFIER ::= { id-regInfo 2 }\n  --with syntax\n  CertReq ::=\
    \ CertRequest\n  END\n"
- title: 11.  ASN.1 Module for RFC 5055
  contents:
  - "11.  ASN.1 Module for RFC 5055\n  SCVP-2009\n      { iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n      mechanisms(5) pkix(7) id-mod(0) id-mod-scvp-02(52)\
    \ }\n  DEFINITIONS IMPLICIT TAGS ::=\n  BEGIN\n  IMPORTS\n  Extensions{}, EXTENSION,\
    \ ATTRIBUTE\n  FROM PKIX-CommonTypes-2009\n      {iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n      mechanisms(5) pkix(7) id-mod(0) id-mod-pkixCommon-02(57)\
    \ }\n  AlgorithmIdentifier{}, SIGNATURE-ALGORITHM, PUBLIC-KEY, KEY-AGREE,\n  \
    \    DIGEST-ALGORITHM, KEY-DERIVATION, MAC-ALGORITHM\n  FROM AlgorithmInformation-2009\n\
    \      {iso(1) identified-organization(3) dod(6) internet(1) security(5)\n   \
    \   mechanisms(5) pkix(7) id-mod(0)\n      id-mod-algorithmInformation-02(58)}\n\
    \  Certificate, CertificateList, CertificateSerialNumber,\n      SignatureAlgorithms,\
    \ SubjectPublicKeyInfo\n  FROM PKIX1Explicit-2009\n      { iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n      mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-explicit-02(51)\
    \ }\n  GeneralNames, GeneralName, KeyUsage, KeyPurposeId\n  FROM PKIX1Implicit-2009\n\
    \      { iso(1) identified-organization(3) dod(6) internet(1) security(5)\n  \
    \    mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-implicit-02(59) }\n  AttributeCertificate\n\
    \  FROM PKIXAttributeCertificate-2009\n      { iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n      mechanisms(5) pkix(7) id-mod(0) id-mod-attribute-cert-02(47)\
    \ }\n  OCSPResponse\n  FROM OCSP-2009\n      { iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n      mechanisms(5) pkix(7) id-mod(0) id-mod-ocsp-02(48)\
    \ }\n  ContentInfo, CONTENT-TYPE\n  FROM CryptographicMessageSyntax-2009\n   \
    \   { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n      smime(16)\
    \ modules(0) id-mod-cms-2004-02(41) }\n  mda-sha1\n  FROM PKIXAlgs-2009\n    \
    \  { iso(1) identified-organization(3) dod(6)\n      internet(1) security(5) mechanisms(5)\
    \ pkix(7) id-mod(0)\n      id-mod-pkix1-algorithms2008-02(56) } ;\n  ContentTypes\
    \ CONTENT-TYPE ::= {ct-scvp-certValRequest |\n      ct-scvp-certValResponse |\
    \ ct-scvp-valPolRequest |\n      ct-scvp-valPolResponse, ... }\n  id-ct OBJECT\
    \ IDENTIFIER ::=\n      { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1)\
    \ pkcs9(9)\n      id-smime(16) 1 }\n  ct-scvp-certValRequest CONTENT-TYPE ::=\n\
    \      { CVRequest IDENTIFIED BY id-ct-scvp-certValRequest }\n  id-ct-scvp-certValRequest\
    \ OBJECT IDENTIFIER ::= { id-ct 10 }\n  -- SCVP Certificate Validation Request\n\
    \  CVRequest ::= SEQUENCE {\n      cvRequestVersion           INTEGER DEFAULT\
    \ 1,\n      query                      Query,\n      requestorRef           [0]\
    \ GeneralNames OPTIONAL,\n      requestNonce           [1] OCTET STRING OPTIONAL,\n\
    \      requestorName          [2] GeneralName OPTIONAL,\n      responderName \
    \         [3] GeneralName OPTIONAL,\n      requestExtensions      [4] Extensions{{RequestExtensions}}\n\
    \                                     OPTIONAL,\n      signatureAlg          \
    \ [5] AlgorithmIdentifier\n                                     {SIGNATURE-ALGORITHM,\n\
    \                                         {SignatureAlgorithms}}\n           \
    \                          OPTIONAL,\n      hashAlg                [6] OBJECT\
    \ IDENTIFIER OPTIONAL,\n      requestorText          [7] UTF8String (SIZE (1..256))\
    \ OPTIONAL\n  }\n  -- Set of signature algorithms is coming from RFC 5280\n  --\
    \ SignatureAlgorithms SIGNATURE-ALGORITHM ::= {...}\n  -- Add supported request\
    \ extensions here; all new items should\n  --      be added after the extension\
    \ marker\n  RequestExtensions EXTENSION ::= {...}\n  Query ::= SEQUENCE {\n  \
    \    queriedCerts             CertReferences,\n      checks                  \
    \ CertChecks,\n      wantBack             [1] WantBack OPTIONAL,\n      validationPolicy\
    \         ValidationPolicy,\n      responseFlags            ResponseFlags OPTIONAL,\n\
    \      serverContextInfo    [2] OCTET STRING OPTIONAL,\n      validationTime \
    \      [3] GeneralizedTime OPTIONAL,\n      intermediateCerts    [4] CertBundle\
    \ OPTIONAL,\n      revInfos             [5] RevocationInfos OPTIONAL,\n      producedAt\
    \           [6] GeneralizedTime OPTIONAL,\n      queryExtensions      [7] Extensions{{QueryExtensions}}\
    \ OPTIONAL\n  }\n  -- Add supported query extensions here; all new items should\
    \ be added\n  --      after the extension marker\n  QueryExtensions EXTENSION\
    \ ::= {...}\n  CertReferences ::= CHOICE {\n      pkcRefs       [0] SEQUENCE SIZE\
    \ (1..MAX) OF PKCReference,\n      acRefs        [1] SEQUENCE SIZE (1..MAX) OF\
    \ ACReference\n  }\n  CertReference::= CHOICE {\n      pkc               PKCReference,\n\
    \      ac                ACReference\n  }\n  PKCReference ::= CHOICE {\n     \
    \ cert          [0] Certificate,\n      pkcRef        [1] SCVPCertID\n  }\n  ACReference\
    \ ::= CHOICE {\n      attrCert      [2] AttributeCertificate,\n      acRef   \
    \      [3] SCVPCertID\n  }\n  HashAlgorithm ::= AlgorithmIdentifier{DIGEST-ALGORITHM,\n\
    \                        {mda-sha1, ...}}\n  SCVPCertID ::= SEQUENCE {\n     certHash\
    \        OCTET STRING,\n     issuerSerial    SCVPIssuerSerial,\n     hashAlgorithm\
    \   HashAlgorithm\n                         DEFAULT { algorithm mda-sha1.&id }\n\
    \  }\n  SCVPIssuerSerial ::= SEQUENCE {\n      issuer         GeneralNames,\n\
    \      serialNumber   CertificateSerialNumber\n  }\n  ValidationPolicy ::= SEQUENCE\
    \ {\n      validationPolRef           ValidationPolRef,\n      validationAlg \
    \         [0] ValidationAlg OPTIONAL,\n      userPolicySet          [1] SEQUENCE\
    \ SIZE (1..MAX) OF OBJECT\n                                IDENTIFIER OPTIONAL,\n\
    \      inhibitPolicyMapping   [2] BOOLEAN OPTIONAL,\n      requireExplicitPolicy\
    \  [3] BOOLEAN OPTIONAL,\n      inhibitAnyPolicy       [4] BOOLEAN OPTIONAL,\n\
    \      trustAnchors           [5] TrustAnchors OPTIONAL,\n      keyUsages    \
    \          [6] SEQUENCE OF KeyUsage OPTIONAL,\n      extendedKeyUsages      [7]\
    \ SEQUENCE OF KeyPurposeId OPTIONAL,\n      specifiedKeyUsages     [8] SEQUENCE\
    \ OF KeyPurposeId OPTIONAL\n  }\n  CertChecks ::= SEQUENCE SIZE (1..MAX) OF\n\
    \      OBJECT IDENTIFIER (CertCheckSet | ACertCheckSet, ... )\n  WantBack ::=\
    \ SEQUENCE SIZE (1..MAX) OF\n      WANT-BACK.&id ({AllWantBacks})\n  POLICY ::=\
    \ ATTRIBUTE\n  ValidationPolRefSet POLICY ::= {\n      svp-defaultValPolicy, ...\n\
    \  }\n  ValidationPolRef ::= SEQUENCE {\n     valPolId             POLICY.&id,\n\
    \     valPolParams         POLICY.&Type OPTIONAL\n  }\n  ValidationAlgSet POLICY\
    \ ::= {\n          svp-basicValAlg, ...\n  }\n  ValidationAlg ::= SEQUENCE {\n\
    \      valAlgId               POLICY.&id,\n      parameters             POLICY.&Type\
    \ OPTIONAL\n  }\n  NameValidationAlgSet POLICY ::= {\n      svp-nameValAlg, ...\n\
    \  }\n  NameValidationAlgParams ::= SEQUENCE {\n      nameCompAlgId          OBJECT\
    \ IDENTIFIER (NameCompAlgSet, ... ),\n      validationNames        GeneralNames\n\
    \  }\n  TrustAnchors ::= SEQUENCE SIZE (1..MAX) OF PKCReference\n  KeyAgreePublicKey\
    \ ::= SEQUENCE {\n      algorithm           AlgorithmIdentifier{KEY-AGREE,\n \
    \                             {SupportedKeyAgreePublicKeys}},\n      publicKey\
    \           BIT STRING,\n      macAlgorithm        AlgorithmIdentifier{MAC-ALGORITHM,\n\
    \                              {SupportedMACAlgorithms}},\n      kDF         \
    \        AlgorithmIdentifier{KEY-DERIVATION,\n                              {SupportedKeyDerivationFunctions}}\n\
    \                              OPTIONAL\n  }\n  SupportedKeyAgreePublicKeys KEY-AGREE\
    \ ::= {...}\n  SupportedMACAlgorithms MAC-ALGORITHM ::= {...}\n  SupportedKeyDerivationFunctions\
    \ KEY-DERIVATION ::= {...}\n  ResponseFlags ::= SEQUENCE {\n      fullRequestInResponse\
    \      [0] BOOLEAN DEFAULT FALSE,\n      responseValidationPolByRef [1] BOOLEAN\
    \ DEFAULT TRUE,\n      protectResponse            [2] BOOLEAN DEFAULT TRUE,\n\
    \      cachedResponse             [3] BOOLEAN DEFAULT TRUE\n  }\n  CertBundle\
    \ ::= SEQUENCE SIZE (1..MAX) OF Certificate\n  RevocationInfos ::= SEQUENCE SIZE\
    \ (1..MAX) OF RevocationInfo\n  RevocationInfo ::= CHOICE {\n      crl       \
    \             [0] CertificateList,\n      delta-crl              [1] CertificateList,\n\
    \      ocsp                   [2] OCSPResponse,\n      other                 \
    \ [3] OtherRevInfo\n  }\n  REV-INFO ::= TYPE-IDENTIFIER\n  OtherRevInfo ::= SEQUENCE\
    \ {\n      riType                     REV-INFO.&id,\n      riValue           \
    \         REV-INFO.&Type\n  }\n  -- SCVP Certificate Validation Response\n  ct-scvp-certValResponse\
    \ CONTENT-TYPE ::=\n      { CVResponse IDENTIFIED BY id-ct-scvp-certValResponse\
    \ }\n  id-ct-scvp-certValResponse OBJECT IDENTIFIER ::= { id-ct 11 }\n  CVResponse\
    \ ::= SEQUENCE {\n      cvResponseVersion          INTEGER,\n      serverConfigurationID\
    \      INTEGER,\n      producedAt                 GeneralizedTime,\n      responseStatus\
    \             ResponseStatus,\n      respValidationPolicy   [0] RespValidationPolicy\
    \ OPTIONAL,\n      requestRef             [1] RequestReference OPTIONAL,\n   \
    \   requestorRef           [2] GeneralNames OPTIONAL,\n      requestorName   \
    \       [3] GeneralNames OPTIONAL,\n      replyObjects           [4] ReplyObjects\
    \ OPTIONAL,\n      respNonce              [5] OCTET STRING OPTIONAL,\n      serverContextInfo\
    \      [6] OCTET STRING OPTIONAL,\n      cvResponseExtensions   [7] Extensions{{CVResponseExtensions}}\n\
    \                                     OPTIONAL,\n      requestorText         \
    \ [8] UTF8String (SIZE (1..256)) OPTIONAL\n  }\n  --  This document defines no\
    \ extensions\n  CVResponseExtensions EXTENSION ::= {...}\n  ResponseStatus ::=\
    \ SEQUENCE {\n     statusCode               CVStatusCode DEFAULT  okay,\n    \
    \ errorMessage             UTF8String OPTIONAL\n  }\n  CVStatusCode ::= ENUMERATED\
    \ {\n     okay                               (0),\n     skipUnrecognizedItems\
    \              (1),\n     tooBusy                           (10),\n     invalidRequest\
    \                    (11),\n     internalError                     (12),\n   \
    \  badStructure                      (20),\n     unsupportedVersion          \
    \      (21),\n     abortUnrecognizedItems            (22),\n     unrecognizedSigKey\
    \                (23),\n     badSignatureOrMAC                 (24),\n     unableToDecode\
    \                    (25),\n     notAuthorized                     (26),\n   \
    \  unsupportedChecks                 (27),\n     unsupportedWantBacks        \
    \      (28),\n     unsupportedSignatureOrMAC         (29),\n     invalidSignatureOrMAC\
    \             (30),\n     protectedResponseUnsupported      (31),\n     unrecognizedResponderName\
    \         (32),\n     relayingLoop                      (40),\n     unrecognizedValPol\
    \                (50),\n     unrecognizedValAlg                (51),\n     fullRequestInResponseUnsupported\
    \  (52),\n     fullPolResponseUnsupported        (53),\n     inhibitPolicyMappingUnsupported\
    \   (54),\n     requireExplicitPolicyUnsupported  (55),\n     inhibitAnyPolicyUnsupported\
    \       (56),\n     validationTimeUnsupported         (57),\n     unrecognizedCritQueryExt\
    \          (63),\n     unrecognizedCritRequestExt        (64),\n     ...\n  }\n\
    \  RespValidationPolicy ::= ValidationPolicy\n  RequestReference ::= CHOICE {\n\
    \      requestHash   [0] HashValue, -- hash of CVRequest\n      fullRequest  \
    \ [1] CVRequest }\n  HashValue ::= SEQUENCE {\n      algorithm         HashAlgorithm\n\
    \                            DEFAULT { algorithm mda-sha1.&id },\n      value\
    \             OCTET STRING }\n  ReplyObjects ::= SEQUENCE SIZE (1..MAX) OF CertReply\n\
    \  CertReply ::= SEQUENCE {\n      cert                       CertReference,\n\
    \      replyStatus                ReplyStatus DEFAULT success,\n      replyValTime\
    \               GeneralizedTime,\n      replyChecks                ReplyChecks,\n\
    \      replyWantBacks             ReplyWantBacks,\n      validationErrors    \
    \   [0] SEQUENCE SIZE (1..MAX) OF\n          OBJECT IDENTIFIER ( BasicValidationErrorSet\
    \ |\n                              NameValidationErrorSet,\n                 \
    \             ... ) OPTIONAL,\n      nextUpdate             [1] GeneralizedTime\
    \ OPTIONAL,\n      certReplyExtensions    [2] Extensions{{...}} OPTIONAL\n  }\n\
    \  ReplyStatus ::= ENUMERATED {\n      success                    (0),\n     \
    \ malformedPKC               (1),\n      malformedAC                (2),\n   \
    \   unavailableValidationTime  (3),\n      referenceCertHashFail      (4),\n \
    \     certPathConstructFail      (5),\n      certPathNotValid           (6),\n\
    \      certPathNotValidNow        (7),\n      wantBackUnsatisfied        (8)\n\
    \  }\n  ReplyChecks ::= SEQUENCE OF ReplyCheck\n  ReplyCheck ::= SEQUENCE {\n\
    \      check    OBJECT IDENTIFIER (CertCheckSet | ACertCheckSet, ... ),\n    \
    \  status   INTEGER DEFAULT 0\n  }\n  ReplyWantBacks ::= SEQUENCE OF ReplyWantBack\n\
    \  ReplyWantBack::= SEQUENCE {\n      wb     WANT-BACK.&id({AllWantBacks}),\n\
    \      value  OCTET STRING\n                 (CONTAINING WANT-BACK.&Type({AllWantBacks}{@wb}))\n\
    \  }\n  WANT-BACK ::= TYPE-IDENTIFIER\n  AllWantBacks WANT-BACK ::= {\n      WantBackSet\
    \ | ACertWantBackSet | AnyWantBackSet, ...\n  }\n  CertBundles ::= SEQUENCE SIZE\
    \ (1..MAX) OF CertBundle\n  RevInfoWantBack ::= SEQUENCE {\n      revocationInfo\
    \             RevocationInfos,\n      extraCerts                 CertBundle OPTIONAL\n\
    \  }\n  SCVPResponses ::= SEQUENCE OF ContentInfo\n  -- SCVP Validation Policies\
    \ Request\n  ct-scvp-valPolRequest CONTENT-TYPE ::=\n      { ValPolRequest IDENTIFIED\
    \ BY id-ct-scvp-valPolRequest }\n  id-ct-scvp-valPolRequest OBJECT IDENTIFIER\
    \ ::= { id-ct 12 }\n  ValPolRequest ::= SEQUENCE {\n      vpRequestVersion   \
    \        INTEGER DEFAULT 1,\n      requestNonce               OCTET STRING\n \
    \ }\n  -- SCVP Validation Policies Response\n  ct-scvp-valPolResponse CONTENT-TYPE\
    \ ::=\n      { ValPolResponse IDENTIFIED BY id-ct-scvp-valPolResponse }\n  id-ct-scvp-valPolResponse\
    \ OBJECT IDENTIFIER ::= { id-ct 13 }\n  ValPolResponse ::= SEQUENCE {\n      vpResponseVersion\
    \       INTEGER,\n      maxCVRequestVersion     INTEGER,\n      maxVPRequestVersion\
    \     INTEGER,\n      serverConfigurationID   INTEGER,\n      thisUpdate     \
    \         GeneralizedTime,\n      nextUpdate              GeneralizedTime OPTIONAL,\n\
    \      supportedChecks         CertChecks,\n      supportedWantBacks      WantBack,\n\
    \      validationPolicies      SEQUENCE OF OBJECT IDENTIFIER,\n      validationAlgs\
    \          SEQUENCE OF OBJECT IDENTIFIER,\n      authPolicies            SEQUENCE\
    \ OF AuthPolicy,\n      responseTypes           ResponseTypes,\n      defaultPolicyValues\
    \     RespValidationPolicy,\n      revocationInfoTypes     RevocationInfoTypes,\n\
    \      signatureGeneration     SEQUENCE OF AlgorithmIdentifier\n             \
    \                     {SIGNATURE-ALGORITHM,\n                                \
    \      {SignatureAlgorithms}},\n      signatureVerification   SEQUENCE OF AlgorithmIdentifier\n\
    \                                  {SIGNATURE-ALGORITHM,\n                   \
    \                   {SignatureAlgorithms}},\n      hashAlgorithms          SEQUENCE\
    \ SIZE (1..MAX) OF\n                                 OBJECT IDENTIFIER,\n    \
    \  serverPublicKeys        SEQUENCE OF KeyAgreePublicKey\n                   \
    \              OPTIONAL,\n      clockSkew               INTEGER DEFAULT 10,\n\
    \      requestNonce            OCTET STRING OPTIONAL\n  }\n  ResponseTypes  ::=\
    \ ENUMERATED {\n      cached-only                (0),\n      non-cached-only \
    \           (1),\n      cached-and-non-cached      (2)\n  }\n  RevocationInfoTypes\
    \ ::= BIT STRING {\n      fullCRLs                   (0),\n      deltaCRLs   \
    \               (1),\n      indirectCRLs               (2),\n      oCSPResponses\
    \              (3)\n  }\n  AuthPolicy ::= OBJECT IDENTIFIER\n  -- SCVP Check Identifiers\n\
    \  id-stc OBJECT IDENTIFIER ::=\n      { iso(1) identified-organization(3) dod(6)\
    \ internet(1) security(5)\n      mechanisms(5) pkix(7) 17 }\n  CertCheckSet OBJECT\
    \ IDENTIFIER ::= {\n      id-stc-build-pkc-path | id-stc-build-valid-pkc-path\
    \ |\n      id-stc-build-status-checked-pkc-path, ... }\n  id-stc-build-pkc-path\
    \        OBJECT IDENTIFIER ::= { id-stc 1 }\n  id-stc-build-valid-pkc-path  OBJECT\
    \ IDENTIFIER ::= { id-stc 2 }\n  id-stc-build-status-checked-pkc-path\n      \
    \                        OBJECT IDENTIFIER ::= { id-stc 3 }\n  ACertCheckSet OBJECT\
    \ IDENTIFIER ::= {\n      id-stc-build-aa-path | id-stc-build-valid-aa-path |\n\
    \      id-stc-build-status-checked-aa-path |\n      id-stc-status-check-ac-and-build-status-checked-aa-path\n\
    \  }\n  id-stc-build-aa-path         OBJECT IDENTIFIER ::= { id-stc 4 }\n  id-stc-build-valid-aa-path\
    \   OBJECT IDENTIFIER ::= { id-stc 5 }\n  id-stc-build-status-checked-aa-path\n\
    \                              OBJECT IDENTIFIER ::= { id-stc 6 }\n  id-stc-status-check-ac-and-build-status-checked-aa-path\n\
    \                              OBJECT IDENTIFIER ::= { id-stc 7 }\n  -- SCVP WantBack\
    \ Identifiers\n  id-swb OBJECT IDENTIFIER ::=\n      { iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n      mechanisms(5) pkix(7) 18 }\n  WantBackSet\
    \ WANT-BACK ::= {\n      swb-pkc-cert | swb-pkc-best-cert-path |\n      swb-pkc-revocation-info\
    \ | swb-pkc-public-key-info |\n      swb-pkc-all-cert-paths | swb-pkc-ee-revocation-info\
    \ |\n      swb-pkc-CAs-revocation-info\n  }\n  ACertWantBackSet WANT-BACK ::=\
    \ {\n      swb-ac-cert | swb-aa-cert-path |\n      swb-aa-revocation-info | swb-ac-revocation-info\n\
    \  }\n  AnyWantBackSet WANT-BACK ::= { swb-relayed-responses }\n  swb-pkc-best-cert-path\
    \ WANT-BACK ::=\n      { CertBundle IDENTIFIED BY id-swb-pkc-best-cert-path }\n\
    \  id-swb-pkc-best-cert-path       OBJECT IDENTIFIER ::= { id-swb 1 }\n  swb-pkc-revocation-info\
    \ WANT-BACK ::=\n      { RevInfoWantBack IDENTIFIED BY id-swb-pkc-revocation-info\
    \ }\n  id-swb-pkc-revocation-info      OBJECT IDENTIFIER ::= { id-swb 2 }\n  swb-pkc-public-key-info\
    \ WANT-BACK ::=\n      { SubjectPublicKeyInfo IDENTIFIED BY id-swb-pkc-public-key-info\
    \ }\n  id-swb-pkc-public-key-info      OBJECT IDENTIFIER ::= { id-swb 4 }\n  swb-aa-cert-path\
    \ WANT-BACK ::=\n      {CertBundle IDENTIFIED BY id-swb-aa-cert-path }\n  id-swb-aa-cert-path\
    \             OBJECT IDENTIFIER ::= { id-swb 5 }\n  swb-aa-revocation-info WANT-BACK\
    \ ::=\n      { RevInfoWantBack IDENTIFIED BY id-swb-aa-revocation-info }\n  id-swb-aa-revocation-info\
    \       OBJECT IDENTIFIER ::= { id-swb 6 }\n  swb-ac-revocation-info WANT-BACK\
    \ ::=\n      { RevInfoWantBack IDENTIFIED BY id-swb-ac-revocation-info }\n  id-swb-ac-revocation-info\
    \       OBJECT IDENTIFIER ::= { id-swb 7 }\n  swb-relayed-responses WANT-BACK\
    \ ::=\n      {SCVPResponses IDENTIFIED BY id-swb-relayed-responses }\n  id-swb-relayed-responses\
    \        OBJECT IDENTIFIER ::= { id-swb 9 }\n  swb-pkc-all-cert-paths WANT-BACK\
    \ ::=\n      {CertBundles IDENTIFIED BY id-swb-pkc-all-cert-paths }\n  id-swb-pkc-all-cert-paths\
    \       OBJECT IDENTIFIER ::= { id-swb 12}\n  swb-pkc-ee-revocation-info WANT-BACK\
    \ ::=\n      { RevInfoWantBack IDENTIFIED BY id-swb-pkc-ee-revocation-info }\n\
    \  id-swb-pkc-ee-revocation-info   OBJECT IDENTIFIER ::= { id-swb 13}\n  swb-pkc-CAs-revocation-info\
    \ WANT-BACK ::=\n      { RevInfoWantBack IDENTIFIED BY id-swb-pkc-CAs-revocation-info\
    \ }\n  id-swb-pkc-CAs-revocation-info  OBJECT IDENTIFIER ::= { id-swb 14}\n  swb-pkc-cert\
    \ WANT-BACK ::=\n      { Certificate IDENTIFIED BY id-swb-pkc-cert }\n  id-swb-pkc-cert\
    \ OBJECT IDENTIFIER ::= { id-swb 10}\n  swb-ac-cert WANT-BACK ::=\n      { AttributeCertificate\
    \ IDENTIFIED BY id-swb-ac-cert }\n  id-swb-ac-cert OBJECT IDENTIFIER ::= { id-swb\
    \ 11}\n  -- SCVP Validation Policy and Algorithm Identifiers\n  id-svp OBJECT\
    \ IDENTIFIER ::=\n      { iso(1) identified-organization(3) dod(6) internet(1)\
    \ security(5)\n      mechanisms(5) pkix(7) 19 }\n  svp-defaultValPolicy POLICY\
    \ ::=\n      { IDENTIFIED BY id-svp-defaultValPolicy }\n  id-svp-defaultValPolicy\
    \ OBJECT IDENTIFIER ::= { id-svp 1 }\n  -- SCVP Basic Validation Algorithm Identifier\n\
    \  svp-basicValAlg POLICY ::= {IDENTIFIED BY id-svp-basicValAlg }\n  id-svp-basicValAlg\
    \ OBJECT IDENTIFIER ::= { id-svp 3 }\n  -- SCVP Basic Validation Algorithm Errors\n\
    \  id-bvae OBJECT IDENTIFIER ::= id-svp-basicValAlg\n  BasicValidationErrorSet\
    \ OBJECT IDENTIFIER ::= {\n      id-bvae-expired | id-bvae-not-yet-valid |\n \
    \     id-bvae-wrongTrustAnchor | id-bvae-noValidCertPath |\n      id-bvae-revoked\
    \ | id-bvae-invalidKeyPurpose |\n      id-bvae-invalidKeyUsage | id-bvae-invalidCertPolicy\n\
    \  }\n  id-bvae-expired              OBJECT IDENTIFIER ::= { id-bvae 1 }\n  id-bvae-not-yet-valid\
    \        OBJECT IDENTIFIER ::= { id-bvae 2 }\n  id-bvae-wrongTrustAnchor     OBJECT\
    \ IDENTIFIER ::= { id-bvae 3 }\n  id-bvae-noValidCertPath      OBJECT IDENTIFIER\
    \ ::= { id-bvae 4 }\n  id-bvae-revoked              OBJECT IDENTIFIER ::= { id-bvae\
    \ 5 }\n  id-bvae-invalidKeyPurpose    OBJECT IDENTIFIER ::= { id-bvae 9 }\n  id-bvae-invalidKeyUsage\
    \      OBJECT IDENTIFIER ::= { id-bvae 10 }\n  id-bvae-invalidCertPolicy    OBJECT\
    \ IDENTIFIER ::= { id-bvae 11 }\n  -- SCVP Name Validation Algorithm Identifier\n\
    \  svp-nameValAlg POLICY ::=\n      {TYPE NameValidationAlgParams IDENTIFIED BY\
    \ id-svp-nameValAlg }\n  id-svp-nameValAlg OBJECT IDENTIFIER ::= { id-svp 2 }\n\
    \  -- SCVP Name Validation Algorithm DN comparison algorithm\n  NameCompAlgSet\
    \ OBJECT IDENTIFIER ::= {\n      id-nva-dnCompAlg\n  }\n  id-nva-dnCompAlg   OBJECT\
    \ IDENTIFIER ::= { id-svp 4 }\n  -- SCVP Name Validation Algorithm Errors\n  id-nvae\
    \ OBJECT IDENTIFIER ::= id-svp-nameValAlg\n  NameValidationErrorSet OBJECT IDENTIFIER\
    \ ::= {\n      id-nvae-name-mismatch | id-nvae-no-name | id-nvae-unknown-alg |\n\
    \      id-nvae-bad-name | id-nvae-bad-name-type | id-nvae-mixed-names\n  }\n \
    \ id-nvae-name-mismatch   OBJECT IDENTIFIER ::= { id-nvae 1 }\n  id-nvae-no-name\
    \         OBJECT IDENTIFIER ::= { id-nvae 2 }\n  id-nvae-unknown-alg     OBJECT\
    \ IDENTIFIER ::= { id-nvae 3 }\n  id-nvae-bad-name        OBJECT IDENTIFIER ::=\
    \ { id-nvae 4 }\n  id-nvae-bad-name-type   OBJECT IDENTIFIER ::= { id-nvae 5 }\n\
    \  id-nvae-mixed-names     OBJECT IDENTIFIER ::= { id-nvae 6 }\n  -- SCVP Extended\
    \ Key Usage Key Purpose Identifiers\n  id-kp OBJECT IDENTIFIER ::=\n      { iso(1)\
    \ identified-organization(3) dod(6) internet(1) security(5)\n      mechanisms(5)\
    \ pkix(7) 3 }\n  SvcpExtKeyUsageSet OBJECT IDENTIFIER ::= {\n      id-kp-scvpServer\
    \ | id-kp-scvpClient\n  }\n  id-kp-scvpServer   OBJECT IDENTIFIER ::= { id-kp\
    \ 15 }\n  id-kp-scvpClient   OBJECT IDENTIFIER ::= { id-kp 16 }\n  END\n"
- title: 12.  ASN.1 Module for RFC 5272
  contents:
  - "12.  ASN.1 Module for RFC 5272\n  EnrollmentMessageSyntax-2009\n      {iso(1)\
    \ identified-organization(3) dod(6) internet(1)\n      security(5) mechanisms(5)\
    \ pkix(7) id-mod(0) id-mod-cmc2002-02(53)}\n  DEFINITIONS IMPLICIT TAGS ::=\n\
    \  BEGIN\n  EXPORTS ALL;\n  IMPORTS\n  AttributeSet{}, Extension{}, EXTENSION,\
    \ ATTRIBUTE\n  FROM PKIX-CommonTypes-2009\n      {iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n      mechanisms(5) pkix(7) id-mod(0) id-mod-pkixCommon-02(57)}\n\
    \  AlgorithmIdentifier{}, DIGEST-ALGORITHM, KEY-WRAP, KEY-DERIVATION,\n      MAC-ALGORITHM,\
    \ SIGNATURE-ALGORITHM, PUBLIC-KEY\n  FROM AlgorithmInformation-2009\n      {iso(1)\
    \ identified-organization(3) dod(6) internet(1) security(5)\n      mechanisms(5)\
    \ pkix(7) id-mod(0)\n      id-mod-algorithmInformation-02(58)}\n  CertificateSerialNumber,\
    \ GeneralName, CRLReason, ReasonFlags,\n      CertExtensions\n  FROM PKIX1Implicit-2009\n\
    \      {iso(1) identified-organization(3) dod(6) internet(1) security(5)\n   \
    \   mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-implicit-02(59)}\n  Name, id-pkix,\
    \ PublicKeyAlgorithms, SignatureAlgorithms\n  FROM PKIX1Explicit-2009\n      {iso(1)\
    \ identified-organization(3) dod(6) internet(1) security(5)\n      mechanisms(5)\
    \ pkix(7) id-mod(0) id-mod-pkix1-explicit-02(51)}\n  ContentInfo, IssuerAndSerialNumber,\
    \ CONTENT-TYPE\n  FROM CryptographicMessageSyntax-2009\n      { iso(1) member-body(2)\
    \ us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n      smime(16) modules(0) id-mod-cms-2004-02(41)}\n\
    \  CertReqMsg, PKIPublicationInfo, CertTemplate\n  FROM PKIXCRMF-2009\n      {iso(1)\
    \ identified-organization(3) dod(6) internet(1) security(5)\n      mechanisms(5)\
    \ pkix(7) id-mod(0) id-mod-crmf2005-02(55)}\n  mda-sha1\n  FROM PKIXAlgs-2009\n\
    \       { iso(1) identified-organization(3) dod(6)\n       internet(1) security(5)\
    \ mechanisms(5) pkix(7) id-mod(0)\n       id-mod-pkix1-algorithms2008-02(56)}\n\
    \  kda-PBKDF2, maca-hMAC-SHA1\n  FROM CryptographicMessageSyntaxAlgorithms-2009\n\
    \      { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    \
    \  smime(16) modules(0) id-mod-cmsalg-2001-02(37) }\n  mda-sha256\n  FROM PKIX1-PSS-OAEP-Algorithms-2009\n\
    \       { iso(1) identified-organization(3) dod(6)\n         internet(1) security(5)\
    \ mechanisms(5) pkix(7) id-mod(0)\n         id-mod-pkix1-rsa-pkalgs-02(54) } ;\n\
    \  --  CMS Content types defined in this document\n  CMC-ContentTypes CONTENT-TYPE\
    \ ::= { ct-PKIData | ct-PKIResponse, ... }\n  --  Signature Algorithms defined\
    \ in this document\n  SignatureAlgs SIGNATURE-ALGORITHM ::= { sa-noSignature }\n\
    \  --  CMS Unsigned Attributes\n  CMC-UnsignedAtts ATTRIBUTE ::= { aa-cmc-unsignedData\
    \ }\n  --\n  --\n  id-cmc OBJECT IDENTIFIER ::= {id-pkix 7}   -- CMC controls\n\
    \  id-cct OBJECT IDENTIFIER ::= {id-pkix 12}  -- CMC content types\n  -- This\
    \ is the content type for a request message in the protocol\n  ct-PKIData CONTENT-TYPE\
    \ ::=\n      { PKIData IDENTIFIED BY id-cct-PKIData }\n  id-cct-PKIData OBJECT\
    \ IDENTIFIER ::= { id-cct 2 }\n  PKIData ::= SEQUENCE {\n      controlSequence\
    \    SEQUENCE SIZE(0..MAX) OF TaggedAttribute,\n      reqSequence        SEQUENCE\
    \ SIZE(0..MAX) OF TaggedRequest,\n      cmsSequence        SEQUENCE SIZE(0..MAX)\
    \ OF TaggedContentInfo,\n      otherMsgSequence   SEQUENCE SIZE(0..MAX) OF OtherMsg\n\
    \  }\n  BodyPartID ::= INTEGER(0..4294967295)\n  TaggedAttribute ::= SEQUENCE\
    \ {\n      bodyPartID         BodyPartID,\n      attrType           CMC-CONTROL.&id({Cmc-Control-Set}),\n\
    \      attrValues         SET OF CMC-CONTROL.\n                             &Type({Cmc-Control-Set}{@attrType})\n\
    \  }\n  Cmc-Control-Set CMC-CONTROL ::= {\n      cmc-identityProof | cmc-dataReturn\
    \ | cmc-regInfo |\n      cmc-responseInfo | cmc-queryPending | cmc-popLinkRandom\
    \ |\n      cmc-popLinkWitness | cmc-identification | cmc-transactionId |\n   \
    \   cmc-senderNonce | cmc-recipientNonce | cmc-statusInfo |\n      cmc-addExtensions\
    \ | cmc-encryptedPOP | cmc-decryptedPOP |\n      cmc-lraPOPWitness | cmc-getCert\
    \ | cmc-getCRL |\n      cmc-revokeRequest | cmc-confirmCertAcceptance |\n    \
    \  cmc-statusInfoV2 | cmc-trustedAnchors | cmc-authData |\n      cmc-batchRequests\
    \ | cmc-batchResponses | cmc-publishCert |\n      cmc-modCertTemplate | cmc-controlProcessed\
    \ |\n      cmc-identityProofV2 | cmc-popLinkWitnessV2, ... }\n  OTHER-REQUEST\
    \ ::= TYPE-IDENTIFIER\n  --  We do not define any other requests in this document;\n\
    \  --     examples might be attribute certification requests\n  OtherRequests\
    \ OTHER-REQUEST ::= {...}\n  TaggedRequest ::= CHOICE {\n      tcr           \
    \    [0] TaggedCertificationRequest,\n      crm               [1] CertReqMsg,\n\
    \      orm               [2] SEQUENCE {\n          bodyPartID            BodyPartID,\n\
    \          requestMessageType    OTHER-REQUEST.&id({OtherRequests}),\n       \
    \   requestMessageValue   OTHER-REQUEST.&Type({OtherRequests}\n              \
    \                      {@.requestMessageType})\n      }\n  }\n  TaggedCertificationRequest\
    \ ::= SEQUENCE {\n      bodyPartID            BodyPartID,\n      certificationRequest\
    \  CertificationRequest\n  }\n  AttributeList ATTRIBUTE ::= {at-extension-req,\
    \ ...}\n  CertificationRequest ::= SEQUENCE {\n     certificationRequestInfo \
    \ SEQUENCE {\n         version                   INTEGER,\n         subject  \
    \                 Name,\n         subjectPublicKeyInfo      SEQUENCE {\n     \
    \        algorithm                 AlgorithmIdentifier{PUBLIC-KEY,\n         \
    \                                  {PublicKeyAlgorithms}},\n             subjectPublicKey\
    \          BIT STRING\n         },\n         attributes                [0] IMPLICIT\
    \ SET OF\n                                       AttributeSet{{AttributeList}}\n\
    \      },\n      signatureAlgorithm        AlgorithmIdentifier\n             \
    \                       {SIGNATURE-ALGORITHM,\n                              \
    \          {SignatureAlgorithms}},\n      signature                 BIT STRING\n\
    \  }\n  TaggedContentInfo ::= SEQUENCE {\n      bodyPartID              BodyPartID,\n\
    \      contentInfo             ContentInfo\n  }\n  OTHER-MSG ::= TYPE-IDENTIFIER\n\
    \  --  No other messages currently defined\n  OtherMsgSet OTHER-MSG ::= {...}\n\
    \  OtherMsg ::= SEQUENCE {\n      bodyPartID        BodyPartID,\n      otherMsgType\
    \      OTHER-MSG.&id({OtherMsgSet}),\n      otherMsgValue     OTHER-MSG.&Type({OtherMsgSet}{@otherMsgType})\
    \ }\n  --  This defines the response message in the protocol\n  ct-PKIResponse\
    \ CONTENT-TYPE ::=\n      { PKIResponse IDENTIFIED BY id-cct-PKIResponse }\n \
    \ id-cct-PKIResponse OBJECT IDENTIFIER ::= { id-cct 3 }\n  ResponseBody ::= PKIResponse\n\
    \  PKIResponse ::= SEQUENCE {\n      controlSequence   SEQUENCE SIZE(0..MAX) OF\
    \ TaggedAttribute,\n      cmsSequence       SEQUENCE SIZE(0..MAX) OF TaggedContentInfo,\n\
    \      otherMsgSequence  SEQUENCE SIZE(0..MAX) OF OtherMsg\n  }\n  CMC-CONTROL\
    \ ::= TYPE-IDENTIFIER\n  -- The following controls have the type OCTET STRING\n\
    \  cmc-identityProof CMC-CONTROL ::=\n      { OCTET STRING IDENTIFIED BY id-cmc-identityProof\
    \ }\n  id-cmc-identityProof OBJECT IDENTIFIER ::= {id-cmc 3}\n  cmc-dataReturn\
    \ CMC-CONTROL ::=\n      { OCTET STRING IDENTIFIED BY id-cmc-dataReturn }\n  id-cmc-dataReturn\
    \ OBJECT IDENTIFIER ::= {id-cmc 4}\n  cmc-regInfo CMC-CONTROL ::=\n      { OCTET\
    \ STRING IDENTIFIED BY id-cmc-regInfo }\n  id-cmc-regInfo OBJECT IDENTIFIER ::=\
    \ {id-cmc 18}\n  cmc-responseInfo CMC-CONTROL ::=\n      { OCTET STRING IDENTIFIED\
    \ BY id-cmc-responseInfo }\n  id-cmc-responseInfo OBJECT IDENTIFIER ::= {id-cmc\
    \ 19}\n  cmc-queryPending CMC-CONTROL ::=\n      { OCTET STRING IDENTIFIED BY\
    \ id-cmc-queryPending }\n  id-cmc-queryPending OBJECT IDENTIFIER ::= {id-cmc 21}\n\
    \  cmc-popLinkRandom CMC-CONTROL ::=\n      { OCTET STRING IDENTIFIED BY id-cmc-popLinkRandom\
    \ }\n  id-cmc-popLinkRandom OBJECT IDENTIFIER ::= {id-cmc 22}\n  cmc-popLinkWitness\
    \ CMC-CONTROL ::=\n      { OCTET STRING IDENTIFIED BY id-cmc-popLinkWitness }\n\
    \  id-cmc-popLinkWitness OBJECT IDENTIFIER ::= {id-cmc 23}\n  -- The following\
    \ controls have the type UTF8String\n  cmc-identification CMC-CONTROL ::=\n  \
    \    { UTF8String IDENTIFIED BY id-cmc-identification }\n  id-cmc-identification\
    \ OBJECT IDENTIFIER ::= {id-cmc 2}\n  -- The following controls have the type\
    \ INTEGER\n  cmc-transactionId CMC-CONTROL ::=\n      { INTEGER IDENTIFIED BY\
    \ id-cmc-transactionId }\n  id-cmc-transactionId OBJECT IDENTIFIER ::= {id-cmc\
    \ 5}\n  -- The following controls have the type OCTET STRING\n  cmc-senderNonce\
    \ CMC-CONTROL ::=\n      { OCTET STRING IDENTIFIED BY id-cmc-senderNonce }\n \
    \ id-cmc-senderNonce OBJECT IDENTIFIER ::= {id-cmc 6}\n  cmc-recipientNonce CMC-CONTROL\
    \ ::=\n      { OCTET STRING IDENTIFIED BY id-cmc-recipientNonce }\n  id-cmc-recipientNonce\
    \ OBJECT IDENTIFIER ::= {id-cmc 7}\n  -- Used to return status in a response\n\
    \  cmc-statusInfo CMC-CONTROL ::=\n      { CMCStatusInfo IDENTIFIED BY id-cmc-statusInfo\
    \ }\n  id-cmc-statusInfo OBJECT IDENTIFIER ::= {id-cmc 1}\n  CMCStatusInfo ::=\
    \ SEQUENCE {\n      cMCStatus       CMCStatus,\n      bodyList        SEQUENCE\
    \ SIZE (1..MAX) OF BodyPartID,\n      statusString    UTF8String OPTIONAL,\n \
    \     otherInfo       CHOICE {\n         failInfo         CMCFailInfo,\n     \
    \    pendInfo         PendInfo\n      } OPTIONAL\n  }\n  PendInfo ::= SEQUENCE\
    \ {\n      pendToken        OCTET STRING,\n      pendTime         GeneralizedTime\n\
    \  }\n  CMCStatus ::= INTEGER {\n      success         (0),\n      failed    \
    \      (2),\n      pending         (3),\n      noSupport       (4),\n      confirmRequired\
    \ (5),\n      popRequired     (6),\n      partial         (7)\n  }\n  -- Note:\n\
    \  -- The spelling of unsupportedExt is corrected in this version.\n  -- In RFC\
    \ 2797, it was unsuportedExt.\n  CMCFailInfo ::= INTEGER {\n      badAlg     \
    \     (0),\n      badMessageCheck (1),\n      badRequest      (2),\n      badTime\
    \         (3),\n      badCertId       (4),\n      unsuportedExt   (5),\n     \
    \ mustArchiveKeys (6),\n      badIdentity     (7),\n      popRequired     (8),\n\
    \      popFailed       (9),\n      noKeyReuse      (10),\n      internalCAError\
    \ (11),\n      tryLater        (12),\n      authDataFail    (13)\n  }\n  -- Used\
    \ for RAs to add extensions to certification requests\n  cmc-addExtensions CMC-CONTROL\
    \ ::=\n      { AddExtensions IDENTIFIED BY id-cmc-addExtensions }\n  id-cmc-addExtensions\
    \ OBJECT IDENTIFIER ::= {id-cmc 8}\n  AddExtensions ::= SEQUENCE {\n      pkiDataReference\
    \    BodyPartID,\n      certReferences      SEQUENCE OF BodyPartID,\n      extensions\
    \          SEQUENCE OF Extension{{CertExtensions}}\n  }\n  cmc-encryptedPOP CMC-CONTROL\
    \ ::=\n      { EncryptedPOP IDENTIFIED BY id-cmc-encryptedPOP }\n  cmc-decryptedPOP\
    \ CMC-CONTROL ::=\n      { DecryptedPOP IDENTIFIED BY id-cmc-decryptedPOP }\n\
    \  id-cmc-encryptedPOP OBJECT IDENTIFIER ::= {id-cmc 9}\n  id-cmc-decryptedPOP\
    \ OBJECT IDENTIFIER ::= {id-cmc 10}\n  EncryptedPOP ::= SEQUENCE {\n      request\
    \       TaggedRequest,\n      cms             ContentInfo,\n      thePOPAlgID\
    \     AlgorithmIdentifier{MAC-ALGORITHM, {POPAlgs}},\n      witnessAlgID    AlgorithmIdentifier{DIGEST-ALGORITHM,\n\
    \                          {WitnessAlgs}},\n      witness         OCTET STRING\n\
    \  }\n  POPAlgs MAC-ALGORITHM ::= {maca-hMAC-SHA1, ...}\n  WitnessAlgs DIGEST-ALGORITHM\
    \ ::= {mda-sha1, ...}\n  DecryptedPOP ::= SEQUENCE {\n      bodyPartID      BodyPartID,\n\
    \      thePOPAlgID     AlgorithmIdentifier{MAC-ALGORITHM, {POPAlgs}},\n      thePOP\
    \          OCTET STRING\n  }\n  cmc-lraPOPWitness CMC-CONTROL ::=\n      { LraPopWitness\
    \ IDENTIFIED BY id-cmc-lraPOPWitness }\n  id-cmc-lraPOPWitness OBJECT IDENTIFIER\
    \ ::= {id-cmc 11}\n  LraPopWitness ::= SEQUENCE {\n      pkiDataBodyid   BodyPartID,\n\
    \      bodyIds         SEQUENCE OF BodyPartID\n  }\n  --\n  cmc-getCert CMC-CONTROL\
    \ ::=\n      { GetCert IDENTIFIED BY id-cmc-getCert }\n  id-cmc-getCert OBJECT\
    \ IDENTIFIER ::= {id-cmc 15}\n  GetCert ::= SEQUENCE {\n      issuerName     \
    \ GeneralName,\n      serialNumber    INTEGER }\n  cmc-getCRL CMC-CONTROL ::=\n\
    \      { GetCRL IDENTIFIED BY id-cmc-getCRL }\n  id-cmc-getCRL OBJECT IDENTIFIER\
    \ ::= {id-cmc 16}\n  GetCRL ::= SEQUENCE {\n      issuerName    Name,\n      cRLName\
    \       GeneralName OPTIONAL,\n      time          GeneralizedTime OPTIONAL,\n\
    \      reasons       ReasonFlags OPTIONAL }\n  cmc-revokeRequest CMC-CONTROL ::=\n\
    \      { RevokeRequest IDENTIFIED BY id-cmc-revokeRequest}\n  id-cmc-revokeRequest\
    \ OBJECT IDENTIFIER ::= {id-cmc 17}\n  RevokeRequest ::= SEQUENCE {\n      issuerName\
    \            Name,\n      serialNumber          INTEGER,\n      reason       \
    \         CRLReason,\n      invalidityDate         GeneralizedTime OPTIONAL,\n\
    \      passphrase            OCTET STRING OPTIONAL,\n      comment           \
    \    UTF8String OPTIONAL }\n  cmc-confirmCertAcceptance CMC-CONTROL ::=\n    \
    \  { CMCCertId IDENTIFIED BY id-cmc-confirmCertAcceptance }\n  id-cmc-confirmCertAcceptance\
    \ OBJECT IDENTIFIER ::= {id-cmc 24}\n  CMCCertId ::= IssuerAndSerialNumber\n \
    \ -- The following is used to request v3 extensions be added\n  --     to a certificate\n\
    \  at-extension-req ATTRIBUTE ::=\n      { TYPE ExtensionReq IDENTIFIED BY id-ExtensionReq\
    \ }\n  id-ExtensionReq OBJECT IDENTIFIER ::= {iso(1) member-body(2) us(840)\n\
    \      rsadsi(113549) pkcs(1) pkcs-9(9) 14}\n  ExtensionReq ::= SEQUENCE SIZE\
    \ (1..MAX) OF\n      Extension{{CertExtensions}}\n  -- The following allows Diffie-Hellman\
    \ Certification Request\n  --     Messages to be well-formed\n  sa-noSignature\
    \ SIGNATURE-ALGORITHM ::= {\n      IDENTIFIER id-alg-noSignature\n      VALUE\
    \ NoSignatureValue\n      PARAMS TYPE NULL ARE required\n      HASHES { mda-sha1\
    \ }\n  }\n  id-alg-noSignature OBJECT IDENTIFIER ::= {id-pkix id-alg(6) 2}\n \
    \ NoSignatureValue ::= OCTET STRING\n  --  Unauthenticated attribute to carry\
    \ removable data.\n  id-aa OBJECT IDENTIFIER ::= { iso(1) member-body(2) us(840)\n\
    \      rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) id-aa(2)}\n  aa-cmc-unsignedData\
    \ ATTRIBUTE ::=\n      { TYPE CMCUnsignedData IDENTIFIED BY id-aa-cmc-unsignedData\
    \ }\n  id-aa-cmc-unsignedData OBJECT IDENTIFIER ::= {id-aa 34}\n  CMCUnsignedData\
    \ ::= SEQUENCE {\n      bodyPartPath        BodyPartPath,\n      identifier  \
    \        TYPE-IDENTIFIER.&id,\n      content             TYPE-IDENTIFIER.&Type\n\
    \  }\n  --  Replaces CMC Status Info\n  --\n  cmc-statusInfoV2 CMC-CONTROL ::=\n\
    \      { CMCStatusInfoV2 IDENTIFIED BY id-cmc-statusInfoV2 }\n  id-cmc-statusInfoV2\
    \ OBJECT IDENTIFIER ::= {id-cmc 25}\n  EXTENDED-FAILURE-INFO ::= TYPE-IDENTIFIER\n\
    \  ExtendedFailures EXTENDED-FAILURE-INFO ::= {...}\n  CMCStatusInfoV2 ::= SEQUENCE\
    \ {\n     cMCStatus             CMCStatus,\n     bodyList              SEQUENCE\
    \ SIZE (1..MAX) OF\n                                    BodyPartReference,\n \
    \    statusString          UTF8String OPTIONAL,\n     otherInfo             CHOICE\
    \ {\n         failInfo               CMCFailInfo,\n         pendInfo         \
    \      PendInfo,\n         extendedFailInfo       [1] SEQUENCE {\n           \
    \ failInfoOID            TYPE-IDENTIFIER.&id\n                               \
    \        ({ExtendedFailures}),\n            failInfoValue          TYPE-IDENTIFIER.&Type\n\
    \                                       ({ExtendedFailures}\n                \
    \                           {@.failInfoOID})\n         }\n      } OPTIONAL\n \
    \ }\n  BodyPartReference ::= CHOICE {\n     bodyPartID           BodyPartID,\n\
    \     bodyPartPath         BodyPartPath\n  }\n  BodyPartPath ::= SEQUENCE SIZE\
    \ (1..MAX) OF BodyPartID\n  --  Allow for distribution of trust anchors\n  --\n\
    \  cmc-trustedAnchors CMC-CONTROL ::=\n      { PublishTrustAnchors IDENTIFIED\
    \ BY id-cmc-trustedAnchors }\n  id-cmc-trustedAnchors OBJECT IDENTIFIER ::= {id-cmc\
    \ 26}\n  PublishTrustAnchors ::= SEQUENCE {\n      seqNumber      INTEGER,\n \
    \     hashAlgorithm  AlgorithmIdentifier{DIGEST-ALGORITHM,\n                 \
    \        {HashAlgorithms}},\n      anchorHashes   SEQUENCE OF OCTET STRING\n \
    \ }\n  HashAlgorithms DIGEST-ALGORITHM ::= {\n     mda-sha1 | mda-sha256, ...\n\
    \  }\n  cmc-authData CMC-CONTROL ::=\n      { AuthPublish IDENTIFIED BY id-cmc-authData\
    \ }\n  id-cmc-authData OBJECT IDENTIFIER ::= {id-cmc 27}\n  AuthPublish ::= BodyPartID\n\
    \  --   These two items use BodyPartList\n  cmc-batchRequests CMC-CONTROL ::=\n\
    \      { BodyPartList IDENTIFIED BY id-cmc-batchRequests }\n  id-cmc-batchRequests\
    \ OBJECT IDENTIFIER ::= {id-cmc 28}\n  cmc-batchResponses CMC-CONTROL ::=\n  \
    \    { BodyPartList IDENTIFIED BY id-cmc-batchResponses }\n  id-cmc-batchResponses\
    \ OBJECT IDENTIFIER ::= {id-cmc 29}\n  BodyPartList ::= SEQUENCE SIZE (1..MAX)\
    \ OF BodyPartID\n  cmc-publishCert CMC-CONTROL ::=\n      { CMCPublicationInfo\
    \ IDENTIFIED BY id-cmc-publishCert }\n  id-cmc-publishCert OBJECT IDENTIFIER ::=\
    \ {id-cmc 30}\n  CMCPublicationInfo ::= SEQUENCE {\n      hashAlg        AlgorithmIdentifier{DIGEST-ALGORITHM,\n\
    \                           {HashAlgorithms}},\n      certHashes     SEQUENCE\
    \ OF OCTET STRING,\n      pubInfo        PKIPublicationInfo\n  }\n  cmc-modCertTemplate\
    \ CMC-CONTROL ::=\n      { ModCertTemplate IDENTIFIED BY id-cmc-modCertTemplate\
    \ }\n  id-cmc-modCertTemplate OBJECT IDENTIFIER ::= {id-cmc 31}\n  ModCertTemplate\
    \ ::= SEQUENCE {\n      pkiDataReference             BodyPartPath,\n      certReferences\
    \               BodyPartList,\n      replace                      BOOLEAN DEFAULT\
    \ TRUE,\n      certTemplate                 CertTemplate\n  }\n  -- Inform follow-on\
    \ servers that one or more controls have\n  --     already been processed\n  cmc-controlProcessed\
    \ CMC-CONTROL ::=\n      { ControlsProcessed IDENTIFIED BY id-cmc-controlProcessed\
    \ }\n  id-cmc-controlProcessed OBJECT IDENTIFIER ::= {id-cmc 32}\n  ControlsProcessed\
    \ ::= SEQUENCE {\n      bodyList              SEQUENCE SIZE(1..MAX) OF BodyPartReference\n\
    \  }\n  --  Identity Proof control w/ algorithm agility\n  cmc-identityProofV2\
    \ CMC-CONTROL ::=\n      { IdentityProofV2 IDENTIFIED BY id-cmc-identityProofV2\
    \ }\n  id-cmc-identityProofV2 OBJECT IDENTIFIER ::= { id-cmc 33 }\n  IdentityProofV2\
    \ ::= SEQUENCE {\n      proofAlgID       AlgorithmIdentifier{DIGEST-ALGORITHM,\n\
    \                           {WitnessAlgs}},\n      macAlgId         AlgorithmIdentifier{MAC-ALGORITHM,\
    \ {POPAlgs}},\n      witness          OCTET STRING\n  }\n  cmc-popLinkWitnessV2\
    \ CMC-CONTROL ::=\n      { PopLinkWitnessV2 IDENTIFIED BY id-cmc-popLinkWitnessV2\
    \ }\n  id-cmc-popLinkWitnessV2 OBJECT IDENTIFIER ::= { id-cmc 34 }\n  PopLinkWitnessV2\
    \ ::= SEQUENCE {\n      keyGenAlgorithm   AlgorithmIdentifier{KEY-DERIVATION,\n\
    \                            {KeyDevAlgs}},\n      macAlgorithm      AlgorithmIdentifier{MAC-ALGORITHM,\
    \ {POPAlgs}},\n      witness           OCTET STRING\n  }\n  KeyDevAlgs KEY-DERIVATION\
    \ ::= {kda-PBKDF2, ...}\n  END\n"
- title: 13.  ASN.1 Module for RFC 5755
  contents:
  - "13.  ASN.1 Module for RFC 5755\n   PKIXAttributeCertificate-2009\n       {iso(1)\
    \ identified-organization(3) dod(6) internet(1) security(5)\n       mechanisms(5)\
    \ pkix(7) id-mod(0) id-mod-attribute-cert-02(47)}\n   DEFINITIONS IMPLICIT TAGS\
    \ ::=\n   BEGIN\n   IMPORTS\n   AttributeSet{}, Extensions{}, SecurityCategory{},\n\
    \           EXTENSION, ATTRIBUTE, SECURITY-CATEGORY\n   FROM PKIX-CommonTypes-2009\n\
    \       {iso(1) identified-organization(3) dod(6) internet(1) security(5)\n  \
    \     mechanisms(5) pkix(7) id-mod(0) id-mod-pkixCommon-02(57) }\n   AlgorithmIdentifier{},\
    \ SIGNATURE-ALGORITHM, DIGEST-ALGORITHM\n   FROM AlgorithmInformation-2009\n \
    \      {iso(1) identified-organization(3) dod(6) internet(1) security(5)\n   \
    \    mechanisms(5) pkix(7) id-mod(0)\n       id-mod-algorithmInformation-02(58)}\n\
    \      -- IMPORTed module OIDs MAY change if [PKIXPROF] changes\n      -- PKIX\
    \ Certificate Extensions\n   CertificateSerialNumber, UniqueIdentifier, id-pkix,\
    \ id-pe, id-kp,\n       id-ad, id-at, SIGNED{}, SignatureAlgorithms\n   FROM PKIX1Explicit-2009\n\
    \       {iso(1) identified-organization(3) dod(6) internet(1) security(5)\n  \
    \     mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-explicit-02(51)}\n   GeneralName,\
    \ GeneralNames, id-ce, ext-AuthorityKeyIdentifier,\n       ext-AuthorityInfoAccess,\
    \ ext-CRLDistributionPoints\n   FROM PKIX1Implicit-2009\n       {iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n       mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-implicit-02(59)}\n\
    \   ContentInfo\n     FROM CryptographicMessageSyntax-2009\n       { iso(1) member-body(2)\
    \ us(840) rsadsi(113549)\n       pkcs(1) pkcs-9(9) smime(16) modules(0) id-mod-cms-2004-02(41)\
    \ };\n   --  Define the set of extensions that can appear.\n   --  Some of these\
    \ are imported from PKIX Cert\n   AttributeCertExtensions EXTENSION ::= {\n  \
    \     ext-auditIdentity | ext-targetInformation |\n       ext-AuthorityKeyIdentifier\
    \ | ext-AuthorityInfoAccess |\n       ext-CRLDistributionPoints | ext-noRevAvail\
    \ | ext-ac-proxying |\n       ext-aaControls, ... }\n   ext-auditIdentity EXTENSION\
    \ ::= { SYNTAX\n       OCTET STRING IDENTIFIED BY id-pe-ac-auditIdentity}\n  \
    \ ext-targetInformation EXTENSION ::= { SYNTAX\n       Targets IDENTIFIED BY id-ce-targetInformation\
    \ }\n   ext-noRevAvail EXTENSION ::= { SYNTAX\n       NULL IDENTIFIED BY id-ce-noRevAvail}\n\
    \   ext-ac-proxying EXTENSION ::= { SYNTAX\n       ProxyInfo IDENTIFIED BY id-pe-ac-proxying}\n\
    \   ext-aaControls EXTENSION ::= { SYNTAX\n       AAControls IDENTIFIED BY id-pe-aaControls}\n\
    \   -- Define the set of attributes used here\n   AttributesDefined ATTRIBUTE\
    \ ::= {  at-authenticationInfo |\n        at-accesIdentity | at-chargingIdentity\
    \ | at-group |\n        at-role | at-clearance | at-encAttrs, ...}\n   at-authenticationInfo\
    \ ATTRIBUTE ::= { TYPE SvceAuthInfo\n       IDENTIFIED BY id-aca-authenticationInfo}\n\
    \   at-accesIdentity ATTRIBUTE ::= { TYPE SvceAuthInfo\n       IDENTIFIED BY id-aca-accessIdentity}\n\
    \   at-chargingIdentity ATTRIBUTE ::= { TYPE IetfAttrSyntax\n       IDENTIFIED\
    \ BY id-aca-chargingIdentity}\n   at-group ATTRIBUTE ::= { TYPE IetfAttrSyntax\n\
    \       IDENTIFIED BY id-aca-group}\n   at-role ATTRIBUTE ::= { TYPE RoleSyntax\n\
    \       IDENTIFIED BY id-at-role}\n   at-clearance ATTRIBUTE ::= { TYPE Clearance\n\
    \       IDENTIFIED BY id-at-clearance}\n   at-clearance-RFC3281 ATTRIBUTE ::=\
    \ {TYPE Clearance-rfc3281\n       IDENTIFIED BY id-at-clearance-rfc3281 }\n  \
    \ at-encAttrs ATTRIBUTE ::= { TYPE ContentInfo\n       IDENTIFIED BY id-aca-encAttrs}\n\
    \   --\n   --  OIDs used by Attribute Certificate Extensions\n   --\n   id-pe-ac-auditIdentity\
    \       OBJECT IDENTIFIER ::= { id-pe 4 }\n   id-pe-aaControls             OBJECT\
    \ IDENTIFIER ::= { id-pe 6 }\n   id-pe-ac-proxying            OBJECT IDENTIFIER\
    \ ::= { id-pe 10 }\n   id-ce-targetInformation      OBJECT IDENTIFIER ::= { id-ce\
    \ 55 }\n   id-ce-noRevAvail             OBJECT IDENTIFIER ::= { id-ce 56 }\n \
    \  --\n   --  OIDs used by Attribute Certificate Attributes\n   --\n   id-aca\
    \                       OBJECT IDENTIFIER ::= { id-pkix 10 }\n   id-aca-authenticationInfo\
    \    OBJECT IDENTIFIER ::= { id-aca 1 }\n   id-aca-accessIdentity        OBJECT\
    \ IDENTIFIER ::= { id-aca 2 }\n   id-aca-chargingIdentity      OBJECT IDENTIFIER\
    \ ::= { id-aca 3 }\n   id-aca-group                 OBJECT IDENTIFIER ::= { id-aca\
    \ 4 }\n   -- { id-aca 5 } is reserved\n   id-aca-encAttrs              OBJECT\
    \ IDENTIFIER ::= { id-aca 6 }\n   id-at-role                   OBJECT IDENTIFIER\
    \ ::= { id-at 72}\n   id-at-clearance              OBJECT IDENTIFIER ::= {\n \
    \       joint-iso-ccitt(2) ds(5) attributeType(4) clearance (55) }\n   -- Uncomment\
    \ the following declaration and comment the above line if\n   -- using the id-at-clearance\
    \ attribute as defined in [RFC3281]\n   -- id-at-clearance ::= id-at-clearance-3281\n\
    \   id-at-clearance-rfc3281              OBJECT IDENTIFIER ::= {\n       joint-iso-ccitt(2)\
    \ ds(5) module(1) selected-attribute-types(5)\n       clearance (55) }\n   --\n\
    \   --  The syntax of an Attribute Certificate\n   --\n   AttributeCertificate\
    \ ::= SIGNED{AttributeCertificateInfo}\n   AttributeCertificateInfo ::= SEQUENCE\
    \ {\n       version        AttCertVersion,  -- version is v2\n       holder  \
    \       Holder,\n       issuer         AttCertIssuer,\n       signature      AlgorithmIdentifier{SIGNATURE-ALGORITHM,\n\
    \                          {SignatureAlgorithms}},\n       serialNumber   CertificateSerialNumber,\n\
    \       attrCertValidityPeriod   AttCertValidityPeriod,\n       attributes   \
    \  SEQUENCE OF\n                          AttributeSet{{AttributesDefined}},\n\
    \       issuerUniqueID UniqueIdentifier OPTIONAL,\n       extensions     Extensions{{AttributeCertExtensions}}\
    \ OPTIONAL\n   }\n   AttCertVersion ::= INTEGER { v2(1) }\n   Holder ::= SEQUENCE\
    \ {\n       baseCertificateID   [0] IssuerSerial OPTIONAL,\n                 --\
    \ the issuer and serial number of\n                 -- the holder's Public Key\
    \ Certificate\n       entityName          [1] GeneralNames OPTIONAL,\n       \
    \          -- the name of the claimant or role\n       objectDigestInfo    [2]\
    \ ObjectDigestInfo OPTIONAL\n                 -- used to directly authenticate\
    \ the\n                 -- holder, for example, an executable\n   }\n   ObjectDigestInfo\
    \    ::= SEQUENCE {\n       digestedObjectType  ENUMERATED {\n            publicKey\
    \            (0),\n            publicKeyCert        (1),\n            otherObjectTypes\
    \     (2) },\n               -- otherObjectTypes MUST NOT\n               -- be\
    \ used in this profile\n       otherObjectTypeID   OBJECT IDENTIFIER  OPTIONAL,\n\
    \       digestAlgorithm     AlgorithmIdentifier{DIGEST-ALGORITHM, {...}},\n  \
    \     objectDigest        BIT STRING\n   }\n   AttCertIssuer ::= CHOICE {\n  \
    \     v1Form   GeneralNames,  -- MUST NOT be used in this\n                  \
    \             -- profile\n       v2Form   [0] V2Form     -- v2 only\n   }\n  \
    \ V2Form ::= SEQUENCE {\n       issuerName            GeneralNames  OPTIONAL,\n\
    \       baseCertificateID     [0] IssuerSerial  OPTIONAL,\n       objectDigestInfo\
    \      [1] ObjectDigestInfo  OPTIONAL\n          -- issuerName MUST be present\
    \ in this profile\n          -- baseCertificateID and objectDigestInfo MUST\n\
    \          -- NOT be present in this profile\n   }\n   IssuerSerial  ::=  SEQUENCE\
    \ {\n       issuer         GeneralNames,\n       serial         CertificateSerialNumber,\n\
    \       issuerUID      UniqueIdentifier OPTIONAL\n   }\n   AttCertValidityPeriod\
    \  ::= SEQUENCE {\n       notBeforeTime  GeneralizedTime,\n       notAfterTime\
    \   GeneralizedTime\n   }\n   --\n   -- Syntax used by Attribute Certificate Extensions\n\
    \   --\n   Targets ::= SEQUENCE OF Target\n   Target  ::= CHOICE {\n       targetName\
    \     [0] GeneralName,\n       targetGroup    [1] GeneralName,\n       targetCert\
    \     [2] TargetCert\n   }\n   TargetCert  ::= SEQUENCE {\n       targetCertificate\
    \  IssuerSerial,\n       targetName         GeneralName OPTIONAL,\n       certDigestInfo\
    \     ObjectDigestInfo OPTIONAL\n   }\n   AAControls ::= SEQUENCE {\n       pathLenConstraint\
    \ INTEGER (0..MAX) OPTIONAL,\n       permittedAttrs    [0] AttrSpec OPTIONAL,\n\
    \       excludedAttrs     [1] AttrSpec OPTIONAL,\n       permitUnSpecified BOOLEAN\
    \ DEFAULT TRUE\n   }\n   AttrSpec::= SEQUENCE OF OBJECT IDENTIFIER\n   ProxyInfo\
    \ ::= SEQUENCE OF Targets\n   --\n   --  Syntax used by Attribute Certificate\
    \ Attributes\n   --\n   IetfAttrSyntax ::= SEQUENCE {\n      policyAuthority[0]\
    \ GeneralNames    OPTIONAL,\n      values         SEQUENCE OF CHOICE {\n     \
    \                octets    OCTET STRING,\n                     oid       OBJECT\
    \ IDENTIFIER,\n                     string    UTF8String\n     }\n   }\n   SvceAuthInfo\
    \ ::=    SEQUENCE {\n       service       GeneralName,\n       ident         GeneralName,\n\
    \       authInfo      OCTET STRING OPTIONAL\n   }\n   RoleSyntax ::= SEQUENCE\
    \ {\n       roleAuthority  [0] GeneralNames OPTIONAL,\n       roleName       [1]\
    \ GeneralName\n   }\n   Clearance ::= SEQUENCE {\n       policyId            OBJECT\
    \ IDENTIFIER,\n       classList           ClassList DEFAULT {unclassified},\n\
    \       securityCategories  SET OF SecurityCategory\n                        \
    \        {{SupportedSecurityCategories}} OPTIONAL\n   }\n   -- Uncomment the following\
    \ lines to support deprecated clearance\n   -- syntax and comment out previous\
    \ Clearance.\n   -- Clearance ::= Clearance-rfc3281\n   Clearance-rfc3281  ::=\
    \  SEQUENCE {\n       policyId       [0] OBJECT IDENTIFIER,\n       classList\
    \      [1] ClassList DEFAULT {unclassified},\n       securityCategories [2] SET\
    \ OF SecurityCategory-rfc3281\n                              {{SupportedSecurityCategories}}\
    \ OPTIONAL\n   }\n   ClassList  ::=  BIT STRING {\n       unmarked       (0),\n\
    \       unclassified   (1),\n       restricted     (2),\n       confidential \
    \  (3),\n       secret         (4),\n       topSecret      (5)\n   }\n   SupportedSecurityCategories\
    \ SECURITY-CATEGORY ::= { ... }\n   SecurityCategory-rfc3281{SECURITY-CATEGORY:Supported}\
    \ ::= SEQUENCE {\n       type      [0]  IMPLICIT SECURITY-CATEGORY.\n        \
    \       &id({Supported}),\n       value     [1]  EXPLICIT SECURITY-CATEGORY.\n\
    \               &Type({Supported}{@type})\n   }\n   ACClearAttrs ::= SEQUENCE\
    \ {\n       acIssuer          GeneralName,\n       acSerial          INTEGER,\n\
    \       attrs             SEQUENCE OF AttributeSet{{AttributesDefined}}\n   }\n\
    \   END\n"
- title: 14.  ASN.1 Module for RFC 5280, Explicit and Implicit
  contents:
  - "14.  ASN.1 Module for RFC 5280, Explicit and Implicit\n   Note that many of the\
    \ changes in this module are similar or the same\n   as the changes made in more\
    \ recent versions of X.509 itself.\n  PKIX1Explicit-2009\n      {iso(1) identified-organization(3)\
    \ dod(6) internet(1)\n      security(5) mechanisms(5) pkix(7) id-mod(0)\n    \
    \  id-mod-pkix1-explicit-02(51)}\n  DEFINITIONS EXPLICIT TAGS ::=\n  BEGIN\n \
    \ IMPORTS\n  Extensions{}, EXTENSION, ATTRIBUTE, SingleAttribute{}\n  FROM PKIX-CommonTypes-2009\n\
    \      {iso(1) identified-organization(3) dod(6) internet(1) security(5)\n   \
    \   mechanisms(5) pkix(7) id-mod(0) id-mod-pkixCommon-02(57)}\n  AlgorithmIdentifier{},\
    \ PUBLIC-KEY, SIGNATURE-ALGORITHM\n  FROM AlgorithmInformation-2009\n      {iso(1)\
    \ identified-organization(3) dod(6) internet(1) security(5)\n      mechanisms(5)\
    \ pkix(7) id-mod(0)\n      id-mod-algorithmInformation-02(58)}\n  CertExtensions,\
    \ CrlExtensions, CrlEntryExtensions\n  FROM PKIX1Implicit-2009\n      {iso(1)\
    \ identified-organization(3) dod(6) internet(1) security(5)\n      mechanisms(5)\
    \ pkix(7) id-mod(0) id-mod-pkix1-implicit-02(59)}\n  SignatureAlgs, PublicKeys\n\
    \  FROM PKIXAlgs-2009\n      {iso(1) identified-organization(3) dod(6)\n     \
    \ internet(1) security(5) mechanisms(5) pkix(7) id-mod(0) 56}\n  SignatureAlgs,\
    \ PublicKeys\n  FROM PKIX1-PSS-OAEP-Algorithms-2009\n      {iso(1) identified-organization(3)\
    \ dod(6)\n      internet(1) security(5) mechanisms(5) pkix(7) id-mod(0)\n    \
    \  id-mod-pkix1-rsa-pkalgs-02(54)}\n  ORAddress\n  FROM PKIX-X400Address-2009\n\
    \      {iso(1) identified-organization(3) dod(6) internet(1) security(5)\n   \
    \   mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-x400address-02(60)};\n  id-pkix\
    \  OBJECT IDENTIFIER  ::=\n      {iso(1) identified-organization(3) dod(6) internet(1)\
    \ security(5)\n      mechanisms(5) pkix(7)}\n  -- PKIX arcs\n  id-pe OBJECT IDENTIFIER\
    \  ::=  { id-pkix 1 }\n      -- arc for private certificate extensions\n  id-qt\
    \ OBJECT IDENTIFIER ::= { id-pkix 2 }\n      -- arc for policy qualifier types\n\
    \  id-kp OBJECT IDENTIFIER ::= { id-pkix 3 }\n      -- arc for extended key purpose\
    \ OIDs\n  id-ad OBJECT IDENTIFIER ::= { id-pkix 48 }\n      -- arc for access\
    \ descriptors\n  -- policyQualifierIds for Internet policy qualifiers\n  id-qt-cps\
    \      OBJECT IDENTIFIER ::=  { id-qt 1 }\n      -- OID for CPS qualifier\n  id-qt-unotice\
    \  OBJECT IDENTIFIER ::=  { id-qt 2 }\n      -- OID for user notice qualifier\n\
    \  -- access descriptor definitions\n  id-ad-ocsp         OBJECT IDENTIFIER ::=\
    \ { id-ad 1 }\n  id-ad-caIssuers    OBJECT IDENTIFIER ::= { id-ad 2 }\n  id-ad-timeStamping\
    \ OBJECT IDENTIFIER ::= { id-ad 3 }\n  id-ad-caRepository OBJECT IDENTIFIER ::=\
    \ { id-ad 5 }\n  -- attribute data types\n  AttributeType           ::=  ATTRIBUTE.&id\n\
    \  --  Replaced by SingleAttribute{}\n  --\n  -- AttributeTypeAndValue   ::= \
    \ SEQUENCE {\n  --    type    ATTRIBUTE.&id({SupportedAttributes}),\n  --    value\
    \   ATTRIBUTE.&Type({SupportedAttributes}{@type}) }\n  --\n  -- Suggested naming\
    \ attributes: Definition of the following\n  --   information object set may be\
    \ augmented to meet local\n  --   requirements.  Note that deleting members of\
    \ the set may\n  --   prevent interoperability with conforming implementations.\n\
    \  -- All attributes are presented in pairs: the AttributeType\n  --   followed\
    \ by the type definition for the corresponding\n  --   AttributeValue.\n  -- Arc\
    \ for standard naming attributes\n  id-at OBJECT IDENTIFIER ::= { joint-iso-ccitt(2)\
    \ ds(5) 4 }\n  -- Naming attributes of type X520name\n  id-at-name           \
    \   AttributeType ::= { id-at 41 }\n  at-name ATTRIBUTE ::= { TYPE X520name IDENTIFIED\
    \ BY id-at-name }\n  id-at-surname           AttributeType ::= { id-at 4 }\n \
    \ at-surname ATTRIBUTE ::= { TYPE X520name IDENTIFIED BY id-at-surname }\n  id-at-givenName\
    \         AttributeType ::= { id-at 42 }\n  at-givenName ATTRIBUTE ::=\n     \
    \ { TYPE X520name IDENTIFIED BY id-at-givenName }\n  id-at-initials          AttributeType\
    \ ::= { id-at 43 }\n  at-initials ATTRIBUTE ::=\n      { TYPE X520name IDENTIFIED\
    \ BY id-at-initials }\n  id-at-generationQualifier AttributeType ::= { id-at 44\
    \ }\n  at-generationQualifier ATTRIBUTE ::=\n      { TYPE X520name IDENTIFIED\
    \ BY id-at-generationQualifier }\n  -- Directory string type --\n  DirectoryString{INTEGER:maxSize}\
    \ ::= CHOICE {\n      teletexString    TeletexString(SIZE (1..maxSize)),\n   \
    \   printableString  PrintableString(SIZE (1..maxSize)),\n      bmpString    \
    \    BMPString(SIZE (1..maxSize)),\n      universalString  UniversalString(SIZE\
    \ (1..maxSize)),\n      uTF8String       UTF8String(SIZE (1..maxSize))\n  }\n\
    \  X520name ::= DirectoryString {ub-name}\n  -- Naming attributes of type X520CommonName\n\
    \  id-at-commonName        AttributeType ::= { id-at 3 }\n  at-x520CommonName\
    \ ATTRIBUTE ::=\n      {TYPE X520CommonName IDENTIFIED BY id-at-commonName }\n\
    \  X520CommonName ::= DirectoryString {ub-common-name}\n  -- Naming attributes\
    \ of type X520LocalityName\n  id-at-localityName      AttributeType ::= { id-at\
    \ 7 }\n  at-x520LocalityName ATTRIBUTE ::=\n      { TYPE X520LocalityName IDENTIFIED\
    \ BY id-at-localityName }\n  X520LocalityName ::= DirectoryString {ub-locality-name}\n\
    \  -- Naming attributes of type X520StateOrProvinceName\n  id-at-stateOrProvinceName\
    \ AttributeType ::= { id-at 8 }\n  at-x520StateOrProvinceName ATTRIBUTE ::=\n\
    \      { TYPE DirectoryString {ub-state-name}\n          IDENTIFIED BY id-at-stateOrProvinceName\
    \ }\n  X520StateOrProvinceName ::= DirectoryString {ub-state-name}\n  -- Naming\
    \ attributes of type X520OrganizationName\n  id-at-organizationName  AttributeType\
    \ ::= { id-at 10 }\n  at-x520OrganizationName ATTRIBUTE ::=\n      { TYPE DirectoryString\
    \ {ub-organization-name}\n          IDENTIFIED BY id-at-organizationName }\n \
    \ X520OrganizationName ::= DirectoryString {ub-organization-name}\n  -- Naming\
    \ attributes of type X520OrganizationalUnitName\n  id-at-organizationalUnitName\
    \ AttributeType ::= { id-at 11 }\n  at-x520OrganizationalUnitName ATTRIBUTE ::=\n\
    \      { TYPE DirectoryString  {ub-organizational-unit-name}\n          IDENTIFIED\
    \ BY id-at-organizationalUnitName }\n  X520OrganizationalUnitName ::= DirectoryString\n\
    \                                     {ub-organizational-unit-name}\n  -- Naming\
    \ attributes of type X520Title\n  id-at-title             AttributeType ::= {\
    \ id-at 12 }\n  at-x520Title ATTRIBUTE ::= { TYPE DirectoryString { ub-title }\n\
    \      IDENTIFIED BY id-at-title }\n  -- Naming attributes of type X520dnQualifier\n\
    \  id-at-dnQualifier       AttributeType ::= { id-at 46 }\n  at-x520dnQualifier\
    \ ATTRIBUTE ::= { TYPE PrintableString\n      IDENTIFIED BY id-at-dnQualifier\
    \ }\n  -- Naming attributes of type X520countryName (digraph from IS 3166)\n \
    \ id-at-countryName       AttributeType ::= { id-at 6 }\n  at-x520countryName\
    \ ATTRIBUTE ::=  { TYPE PrintableString (SIZE (2))\n      IDENTIFIED BY id-at-countryName\
    \ }\n  -- Naming attributes of type X520SerialNumber\n  id-at-serialNumber   \
    \   AttributeType ::= { id-at 5 }\n  at-x520SerialNumber ATTRIBUTE ::=  {TYPE\
    \ PrintableString\n      (SIZE (1..ub-serial-number)) IDENTIFIED BY id-at-serialNumber\
    \ }\n  -- Naming attributes of type X520Pseudonym\n  id-at-pseudonym         AttributeType\
    \ ::= { id-at 65 }\n  at-x520Pseudonym ATTRIBUTE ::= { TYPE DirectoryString {ub-pseudonym}\n\
    \      IDENTIFIED BY id-at-pseudonym }\n  -- Naming attributes of type DomainComponent\
    \ (from RFC 2247)\n  id-domainComponent      AttributeType ::=\n       { itu-t(0)\
    \ data(9) pss(2342) ucl(19200300) pilot(100)\n       pilotAttributeType(1) 25\
    \ }\n  at-domainComponent ATTRIBUTE ::= {TYPE IA5String\n      IDENTIFIED BY id-domainComponent\
    \ }\n  -- Legacy attributes\n  pkcs-9 OBJECT IDENTIFIER ::=\n      { iso(1) member-body(2)\
    \ us(840) rsadsi(113549) pkcs(1) 9 }\n  id-emailAddress          AttributeType\
    \ ::= { pkcs-9 1 }\n  at-emailAddress ATTRIBUTE ::= {TYPE IA5String\n      (SIZE\
    \ (1..ub-emailaddress-length)) IDENTIFIED BY\n      id-emailAddress }\n  -- naming\
    \ data types --\n  Name ::= CHOICE { -- only one possibility for now --\n    \
    \  rdnSequence  RDNSequence }\n  RDNSequence ::= SEQUENCE OF RelativeDistinguishedName\n\
    \  DistinguishedName ::=   RDNSequence\n  RelativeDistinguishedName  ::=\n   \
    \   SET SIZE (1 .. MAX) OF SingleAttribute { {SupportedAttributes} }\n  --  These\
    \ are the known name elements for a DN\n  SupportedAttributes ATTRIBUTE ::= {\n\
    \      at-name | at-surname | at-givenName | at-initials |\n      at-generationQualifier\
    \ | at-x520CommonName |\n      at-x520LocalityName | at-x520StateOrProvinceName\
    \ |\n      at-x520OrganizationName | at-x520OrganizationalUnitName |\n      at-x520Title\
    \ | at-x520dnQualifier | at-x520countryName |\n      at-x520SerialNumber | at-x520Pseudonym\
    \ | at-domainComponent |\n      at-emailAddress, ... }\n  --\n  -- Certificate-\
    \ and CRL-specific structures begin here\n  --\n  Certificate  ::=  SIGNED{TBSCertificate}\n\
    \  TBSCertificate  ::=  SEQUENCE  {\n      version         [0]  Version DEFAULT\
    \ v1,\n      serialNumber         CertificateSerialNumber,\n      signature  \
    \          AlgorithmIdentifier{SIGNATURE-ALGORITHM,\n                        \
    \        {SignatureAlgorithms}},\n      issuer               Name,\n      validity\
    \             Validity,\n      subject              Name,\n      subjectPublicKeyInfo\
    \ SubjectPublicKeyInfo,\n      ... ,\n      [[2:               -- If present,\
    \ version MUST be v2\n      issuerUniqueID  [1]  IMPLICIT UniqueIdentifier OPTIONAL,\n\
    \      subjectUniqueID [2]  IMPLICIT UniqueIdentifier OPTIONAL\n      ]],\n  \
    \    [[3:               -- If present, version MUST be v3 --\n      extensions\
    \      [3]  Extensions{{CertExtensions}} OPTIONAL\n      ]], ... }\n  Version\
    \  ::=  INTEGER  {  v1(0), v2(1), v3(2)  }\n  CertificateSerialNumber  ::=  INTEGER\n\
    \  Validity ::= SEQUENCE {\n      notBefore      Time,\n      notAfter       Time\
    \  }\n  Time ::= CHOICE {\n      utcTime        UTCTime,\n      generalTime  \
    \  GeneralizedTime }\n  UniqueIdentifier  ::=  BIT STRING\n  SubjectPublicKeyInfo\
    \  ::=  SEQUENCE  {\n      algorithm            AlgorithmIdentifier{PUBLIC-KEY,\n\
    \                               {PublicKeyAlgorithms}},\n      subjectPublicKey\
    \     BIT STRING  }\n  -- CRL structures\n  CertificateList  ::=  SIGNED{TBSCertList}\n\
    \  TBSCertList  ::=  SEQUENCE  {\n      version              Version OPTIONAL,\n\
    \                                 -- if present, MUST be v2\n      signature \
    \           AlgorithmIdentifier{SIGNATURE-ALGORITHM,\n                       \
    \        {SignatureAlgorithms}},\n      issuer               Name,\n      thisUpdate\
    \           Time,\n      nextUpdate           Time OPTIONAL,\n      revokedCertificates\
    \  SEQUENCE SIZE (1..MAX) OF SEQUENCE {\n          userCertificate  CertificateSerialNumber,\n\
    \          revocationDate   Time,\n          ... ,\n          [[2:           \
    \       -- if present, version MUST be v2\n          crlEntryExtensions  Extensions{{CrlEntryExtensions}}\n\
    \                                  OPTIONAL\n          ]], ...\n      } OPTIONAL,\n\
    \      ... ,\n      [[2:                       -- if present, version MUST be\
    \ v2\n      crlExtensions       [0] Extensions{{CrlExtensions}}\n            \
    \                      OPTIONAL\n      ]], ... }\n  -- Version, Time, CertificateSerialNumber,\
    \ and Extensions were\n  -- defined earlier for use in the certificate structure\n\
    \  --\n  --  The two object sets below should be expanded to include\n  --  those\
    \ algorithms which are supported by the system.\n  --\n  --  For example:\n  --\
    \  SignatureAlgorithms SIGNATURE-ALGORITHM ::= {\n  --    PKIXAlgs-2008.SignatureAlgs,\
    \ ...,\n  --        - - RFC 3279 provides the base set\n  --    PKIX1-PSS-OAEP-ALGORITHMS.SignatureAlgs\
    \ |\n  --        - - RFC 4055 provides extension algs\n  --    OtherModule.SignatureAlgs\n\
    \  --        - - RFC XXXX provides additional extension algs\n  --  }\n  SignatureAlgorithms\
    \ SIGNATURE-ALGORITHM ::= {\n      PKIXAlgs-2009.SignatureAlgs, ...,\n      PKIX1-PSS-OAEP-Algorithms-2009.SignatureAlgs\
    \ }\n  PublicKeyAlgorithms PUBLIC-KEY ::= {\n      PKIXAlgs-2009.PublicKeys, ...,\n\
    \      PKIX1-PSS-OAEP-Algorithms-2009.PublicKeys}\n  -- Upper Bounds\n  ub-state-name\
    \ INTEGER ::= 128\n  ub-organization-name INTEGER ::= 64\n  ub-organizational-unit-name\
    \ INTEGER ::= 64\n  ub-title INTEGER ::= 64\n  ub-serial-number INTEGER ::= 64\n\
    \  ub-pseudonym INTEGER ::= 128\n  ub-emailaddress-length INTEGER ::= 255\n  ub-locality-name\
    \ INTEGER ::= 128\n  ub-common-name INTEGER ::= 64\n  ub-name INTEGER ::= 32768\n\
    \  -- Note - upper bounds on string types, such as TeletexString, are\n  -- measured\
    \ in characters.  Excepting PrintableString or IA5String, a\n  -- significantly\
    \ greater number of octets will be required to hold\n  -- such a value.  As a\
    \ minimum, 16 octets or twice the specified\n  -- upper bound, whichever is the\
    \ larger, should be allowed for\n  -- TeletexString.  For UTF8String or UniversalString,\
    \ at least four\n  -- times the upper bound should be allowed.\n  -- Information\
    \ object classes used in the definition\n  -- of certificates and CRLs\n  -- Parameterized\
    \ Type SIGNED\n  --\n  -- Three different versions of doing SIGNED:\n  --  1.\
    \  Simple and close to the previous version\n  --\n  --  SIGNED{ToBeSigned} ::=\
    \ SEQUENCE {\n  --    toBeSigned  ToBeSigned,\n  --    algorithm   AlgorithmIdentifier{SIGNATURE-ALGORITHM,\n\
    \  --                    {SignatureAlgorithms}},\n  --    signature   BIT STRING\n\
    \  --  }\n  --  2.  From Authenticated Framework\n  --\n  --  SIGNED{ToBeSigned}\
    \ ::= SEQUENCE {\n  --    toBeSigned        ToBeSigned,\n  --    COMPONENTS OF\
    \ SIGNATURE{ToBeSigned}\n  --  }\n  --  SIGNATURE{ToBeSigned} ::= SEQUENCE {\n\
    \  --    algorithmIdentifier   AlgorithmIdentifier,\n  --    encrypted       \
    \      ENCRYPTED-HASH{ToBeSigned}\n  --  }\n  --  ENCRYPTED-HASH{ToBeSigned} ::=\n\
    \  --    BIT STRING\n  --      (CONSTRAINED BY {\n  --        shall be the result\
    \ of applying a hashing procedure to\n  --        the DER-encoded (see 4.1) octets\
    \ of a value of\n  --        ToBeSigned and then applying an encipherment procedure\n\
    \  --        to those octets\n  --      })\n  --\n  --\n  --  3.  A more complex\
    \ version, but one that automatically ties\n  --      together both the signature\
    \ algorithm and the\n  --      signature value for automatic decoding.\n  --\n\
    \  SIGNED{ToBeSigned} ::= SEQUENCE {\n     toBeSigned           ToBeSigned,\n\
    \     algorithmIdentifier  SEQUENCE {\n         algorithm        SIGNATURE-ALGORITHM.\n\
    \                            &id({SignatureAlgorithms}),\n         parameters\
    \       SIGNATURE-ALGORITHM.\n                            &Params({SignatureAlgorithms}\n\
    \                              {@algorithmIdentifier.algorithm}) OPTIONAL\n  \
    \   },\n     signature BIT STRING (CONTAINING SIGNATURE-ALGORITHM.&Value(\n  \
    \                            {SignatureAlgorithms}\n                         \
    \     {@algorithmIdentifier.algorithm}))\n  }\n  END\n   PKIX1Implicit-2009\n\
    \       {iso(1) identified-organization(3) dod(6) internet(1) security(5)\n  \
    \     mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-implicit-02(59)}\n   DEFINITIONS\
    \ IMPLICIT TAGS ::=\n   BEGIN\n   IMPORTS\n   AttributeSet{}, EXTENSION, ATTRIBUTE\n\
    \   FROM PKIX-CommonTypes-2009\n       {iso(1) identified-organization(3) dod(6)\
    \ internet(1) security(5)\n       mechanisms(5) pkix(7) id-mod(0) id-mod-pkixCommon-02(57)\
    \ }\n   id-pe, id-kp, id-qt-unotice, id-qt-cps, ORAddress, Name,\n       RelativeDistinguishedName,\
    \ CertificateSerialNumber,\n       DirectoryString{}, SupportedAttributes\n  \
    \ FROM PKIX1Explicit-2009\n       {iso(1) identified-organization(3) dod(6) internet(1)\
    \ security(5)\n       mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-explicit-02(51)\
    \ };\n   CertExtensions EXTENSION ::= {\n           ext-AuthorityKeyIdentifier\
    \ | ext-SubjectKeyIdentifier |\n           ext-KeyUsage | ext-PrivateKeyUsagePeriod\
    \ |\n           ext-CertificatePolicies | ext-PolicyMappings |\n           ext-SubjectAltName\
    \ | ext-IssuerAltName |\n           ext-SubjectDirectoryAttributes |\n       \
    \    ext-BasicConstraints | ext-NameConstraints |\n           ext-PolicyConstraints\
    \ | ext-ExtKeyUsage |\n           ext-CRLDistributionPoints | ext-InhibitAnyPolicy\
    \ |\n           ext-FreshestCRL | ext-AuthorityInfoAccess |\n           ext-SubjectInfoAccessSyntax,\
    \ ... }\n   CrlExtensions EXTENSION ::= {\n           ext-AuthorityKeyIdentifier\
    \ | ext-IssuerAltName |\n           ext-CRLNumber | ext-DeltaCRLIndicator |\n\
    \           ext-IssuingDistributionPoint |  ext-FreshestCRL, ... }\n   CrlEntryExtensions\
    \ EXTENSION ::= {\n           ext-CRLReason | ext-CertificateIssuer |\n      \
    \     ext-HoldInstructionCode | ext-InvalidityDate, ... }\n   -- Shared arc for\
    \ standard certificate and CRL extensions\n   id-ce OBJECT IDENTIFIER  ::=  {\
    \ joint-iso-ccitt(2) ds(5) 29 }\n   -- authority key identifier OID and syntax\n\
    \   ext-AuthorityKeyIdentifier EXTENSION ::= { SYNTAX\n       AuthorityKeyIdentifier\
    \ IDENTIFIED BY\n       id-ce-authorityKeyIdentifier }\n   id-ce-authorityKeyIdentifier\
    \ OBJECT IDENTIFIER ::=  { id-ce 35 }\n   AuthorityKeyIdentifier ::= SEQUENCE\
    \ {\n       keyIdentifier             [0] KeyIdentifier            OPTIONAL,\n\
    \       authorityCertIssuer       [1] GeneralNames             OPTIONAL,\n   \
    \    authorityCertSerialNumber [2] CertificateSerialNumber  OPTIONAL }\n   (WITH\
    \ COMPONENTS {\n      ...,\n      authorityCertIssuer        PRESENT,\n      authorityCertSerialNumber\
    \  PRESENT\n    } |\n    WITH COMPONENTS {\n      ...,\n      authorityCertIssuer\
    \        ABSENT,\n      authorityCertSerialNumber  ABSENT\n    })\n   KeyIdentifier\
    \ ::= OCTET STRING\n   -- subject key identifier OID and syntax\n   ext-SubjectKeyIdentifier\
    \ EXTENSION ::= { SYNTAX\n       KeyIdentifier IDENTIFIED BY id-ce-subjectKeyIdentifier\
    \ }\n   id-ce-subjectKeyIdentifier OBJECT IDENTIFIER ::=  { id-ce 14 }\n   --\
    \ key usage extension OID and syntax\n   ext-KeyUsage EXTENSION ::= { SYNTAX\n\
    \       KeyUsage IDENTIFIED BY id-ce-keyUsage }\n   id-ce-keyUsage OBJECT IDENTIFIER\
    \ ::=  { id-ce 15 }\n   KeyUsage ::= BIT STRING {\n        digitalSignature  \
    \      (0),\n        nonRepudiation          (1), --  recent editions of X.509\
    \ have\n                                     --  renamed this bit to\n       \
    \                              --  contentCommitment\n        keyEncipherment\
    \         (2),\n        dataEncipherment        (3),\n        keyAgreement   \
    \         (4),\n        keyCertSign             (5),\n        cRLSign        \
    \         (6),\n        encipherOnly            (7),\n        decipherOnly   \
    \         (8)\n    }\n   -- private key usage period extension OID and syntax\n\
    \   ext-PrivateKeyUsagePeriod EXTENSION ::= { SYNTAX\n       PrivateKeyUsagePeriod\
    \ IDENTIFIED BY id-ce-privateKeyUsagePeriod }\n   id-ce-privateKeyUsagePeriod\
    \ OBJECT IDENTIFIER ::=  { id-ce 16 }\n   PrivateKeyUsagePeriod ::= SEQUENCE {\n\
    \        notBefore       [0]     GeneralizedTime OPTIONAL,\n        notAfter \
    \       [1]     GeneralizedTime OPTIONAL }\n   (WITH COMPONENTS {..., notBefore\
    \  PRESENT } |\n    WITH COMPONENTS {..., notAfter  PRESENT })\n   -- certificate\
    \ policies extension OID and syntax\n   ext-CertificatePolicies EXTENSION ::=\
    \ { SYNTAX\n       CertificatePolicies IDENTIFIED BY id-ce-certificatePolicies}\n\
    \   id-ce-certificatePolicies OBJECT IDENTIFIER ::=  { id-ce 32 }\n   CertificatePolicies\
    \ ::= SEQUENCE SIZE (1..MAX) OF PolicyInformation\n   PolicyInformation ::= SEQUENCE\
    \ {\n        policyIdentifier   CertPolicyId,\n        policyQualifiers   SEQUENCE\
    \ SIZE (1..MAX) OF\n                PolicyQualifierInfo OPTIONAL }\n   CertPolicyId\
    \ ::= OBJECT IDENTIFIER\n   CERT-POLICY-QUALIFIER ::= TYPE-IDENTIFIER\n   PolicyQualifierInfo\
    \ ::= SEQUENCE {\n          policyQualifierId  CERT-POLICY-QUALIFIER.\n      \
    \         &id({PolicyQualifierId}),\n          qualifier          CERT-POLICY-QUALIFIER.\n\
    \               &Type({PolicyQualifierId}{@policyQualifierId})}\n   -- Implementations\
    \ that recognize additional policy qualifiers MUST\n   -- augment the following\
    \ definition for PolicyQualifierId\n   PolicyQualifierId CERT-POLICY-QUALIFIER\
    \ ::=\n       { pqid-cps | pqid-unotice, ... }\n   pqid-cps CERT-POLICY-QUALIFIER\
    \ ::= { CPSuri IDENTIFIED BY id-qt-cps }\n   pqid-unotice CERT-POLICY-QUALIFIER\
    \ ::= { UserNotice\n       IDENTIFIED BY id-qt-unotice }\n   -- CPS pointer qualifier\n\
    \   CPSuri ::= IA5String\n   -- user notice qualifier\n   UserNotice ::= SEQUENCE\
    \ {\n        noticeRef        NoticeReference OPTIONAL,\n        explicitText\
    \     DisplayText OPTIONAL}\n   --\n   --  This is not made explicit in the text\n\
    \   --\n   -- {WITH COMPONENTS {..., noticeRef PRESENT} |\n   --  WITH COMPONENTS\
    \ {..., DisplayText PRESENT }}\n   NoticeReference ::= SEQUENCE {\n        organization\
    \     DisplayText,\n        noticeNumbers    SEQUENCE OF INTEGER }\n   DisplayText\
    \ ::= CHOICE {\n        ia5String        IA5String      (SIZE (1..200)),\n   \
    \     visibleString    VisibleString  (SIZE (1..200)),\n        bmpString    \
    \    BMPString      (SIZE (1..200)),\n        utf8String       UTF8String    \
    \ (SIZE (1..200)) }\n   -- policy mapping extension OID and syntax\n   ext-PolicyMappings\
    \ EXTENSION ::= { SYNTAX\n       PolicyMappings IDENTIFIED BY id-ce-policyMappings\
    \ }\n   id-ce-policyMappings OBJECT IDENTIFIER ::=  { id-ce 33 }\n   PolicyMappings\
    \ ::= SEQUENCE SIZE (1..MAX) OF SEQUENCE {\n       issuerDomainPolicy      CertPolicyId,\n\
    \       subjectDomainPolicy     CertPolicyId\n   }\n   -- subject alternative\
    \ name extension OID and syntax\n   ext-SubjectAltName EXTENSION ::= { SYNTAX\n\
    \       GeneralNames IDENTIFIED BY id-ce-subjectAltName }\n   id-ce-subjectAltName\
    \ OBJECT IDENTIFIER ::=  { id-ce 17 }\n   GeneralNames ::= SEQUENCE SIZE (1..MAX)\
    \ OF GeneralName\n   GeneralName ::= CHOICE {\n        otherName             \
    \      [0]  INSTANCE OF OTHER-NAME,\n        rfc822Name                  [1] \
    \ IA5String,\n        dNSName                     [2]  IA5String,\n        x400Address\
    \                 [3]  ORAddress,\n        directoryName               [4]  Name,\n\
    \        ediPartyName                [5]  EDIPartyName,\n        uniformResourceIdentifier\
    \   [6]  IA5String,\n        iPAddress                   [7]  OCTET STRING,\n\
    \        registeredID                [8]  OBJECT IDENTIFIER\n   }\n   -- AnotherName\
    \ replaces OTHER-NAME ::= TYPE-IDENTIFIER, as\n   -- TYPE-IDENTIFIER is not supported\
    \ in the '88 ASN.1 syntax\n   OTHER-NAME ::= TYPE-IDENTIFIER\n   EDIPartyName\
    \ ::= SEQUENCE {\n       nameAssigner    [0] DirectoryString {ubMax} OPTIONAL,\n\
    \       partyName       [1] DirectoryString {ubMax}\n   }\n   -- issuer alternative\
    \ name extension OID and syntax\n   ext-IssuerAltName EXTENSION ::= { SYNTAX\n\
    \       GeneralNames IDENTIFIED BY id-ce-issuerAltName }\n   id-ce-issuerAltName\
    \ OBJECT IDENTIFIER ::=  { id-ce 18 }\n   ext-SubjectDirectoryAttributes EXTENSION\
    \ ::= { SYNTAX\n       SubjectDirectoryAttributes IDENTIFIED BY\n       id-ce-subjectDirectoryAttributes\
    \ }\n   id-ce-subjectDirectoryAttributes OBJECT IDENTIFIER ::=  { id-ce 9 }\n\
    \   SubjectDirectoryAttributes ::= SEQUENCE SIZE (1..MAX) OF\n       AttributeSet{{SupportedAttributes}}\n\
    \   -- basic constraints extension OID and syntax\n   ext-BasicConstraints EXTENSION\
    \ ::= { SYNTAX\n       BasicConstraints IDENTIFIED BY id-ce-basicConstraints }\n\
    \   id-ce-basicConstraints OBJECT IDENTIFIER ::=  { id-ce 19 }\n   BasicConstraints\
    \ ::= SEQUENCE {\n        cA                      BOOLEAN DEFAULT FALSE,\n   \
    \     pathLenConstraint       INTEGER (0..MAX) OPTIONAL\n   }\n   -- name constraints\
    \ extension OID and syntax\n   ext-NameConstraints EXTENSION ::= { SYNTAX\n  \
    \     NameConstraints IDENTIFIED BY id-ce-nameConstraints }\n   id-ce-nameConstraints\
    \ OBJECT IDENTIFIER ::=  { id-ce 30 }\n   NameConstraints ::= SEQUENCE {\n   \
    \     permittedSubtrees       [0] GeneralSubtrees OPTIONAL,\n        excludedSubtrees\
    \        [1] GeneralSubtrees OPTIONAL\n   }\n   --\n   --  This is a constraint\
    \ in the issued certificates by CAs, but is\n   --  not a requirement on EEs.\n\
    \   --\n   -- (WITH COMPONENTS { ..., permittedSubtrees PRESENT} |\n   --  WITH\
    \ COMPONENTS { ..., excludedSubtrees PRESENT }}\n   GeneralSubtrees ::= SEQUENCE\
    \ SIZE (1..MAX) OF GeneralSubtree\n   GeneralSubtree ::= SEQUENCE {\n        base\
    \                GeneralName,\n        minimum         [0] BaseDistance DEFAULT\
    \ 0,\n        maximum         [1] BaseDistance OPTIONAL\n   }\n   BaseDistance\
    \ ::= INTEGER (0..MAX)\n   -- policy constraints extension OID and syntax\n  \
    \ ext-PolicyConstraints EXTENSION ::= { SYNTAX\n       PolicyConstraints IDENTIFIED\
    \ BY id-ce-policyConstraints }\n   id-ce-policyConstraints OBJECT IDENTIFIER ::=\
    \  { id-ce 36 }\n   PolicyConstraints ::= SEQUENCE {\n        requireExplicitPolicy\
    \           [0] SkipCerts OPTIONAL,\n        inhibitPolicyMapping            [1]\
    \ SkipCerts OPTIONAL }\n   --\n   --  This is a constraint in the issued certificates\
    \ by CAs,\n   --  but is not a requirement for EEs\n   --\n   -- (WITH COMPONENTS\
    \ { ..., requireExplicitPolicy PRESENT} |\n   --  WITH COMPONENTS { ..., inhibitPolicyMapping\
    \ PRESENT})\n   SkipCerts ::= INTEGER (0..MAX)\n   -- CRL distribution points\
    \ extension OID and syntax\n   ext-CRLDistributionPoints EXTENSION ::= { SYNTAX\n\
    \       CRLDistributionPoints IDENTIFIED BY id-ce-cRLDistributionPoints}\n   id-ce-cRLDistributionPoints\
    \     OBJECT IDENTIFIER  ::=  {id-ce 31}\n   CRLDistributionPoints ::= SEQUENCE\
    \ SIZE (1..MAX) OF DistributionPoint\n   DistributionPoint ::= SEQUENCE {\n  \
    \      distributionPoint       [0] DistributionPointName OPTIONAL,\n        reasons\
    \                 [1] ReasonFlags OPTIONAL,\n        cRLIssuer               [2]\
    \ GeneralNames OPTIONAL\n   }\n   --\n   --  This is not a requirement in the\
    \ text, but it seems as if it\n   --      should be\n   --\n   --(WITH COMPONENTS\
    \ {..., distributionPoint PRESENT} |\n   -- WITH COMPONENTS {..., cRLIssuer PRESENT})\n\
    \   DistributionPointName ::= CHOICE {\n        fullName                [0] GeneralNames,\n\
    \        nameRelativeToCRLIssuer [1] RelativeDistinguishedName\n   }\n   ReasonFlags\
    \ ::= BIT STRING {\n        unused                  (0),\n        keyCompromise\
    \           (1),\n        cACompromise            (2),\n        affiliationChanged\
    \      (3),\n        superseded              (4),\n        cessationOfOperation\
    \    (5),\n        certificateHold         (6),\n        privilegeWithdrawn  \
    \    (7),\n        aACompromise            (8)\n    }\n   -- extended key usage\
    \ extension OID and syntax\n   ext-ExtKeyUsage EXTENSION ::= { SYNTAX\n      \
    \ ExtKeyUsageSyntax IDENTIFIED BY id-ce-extKeyUsage }\n   id-ce-extKeyUsage OBJECT\
    \ IDENTIFIER ::= {id-ce 37}\n   ExtKeyUsageSyntax ::= SEQUENCE SIZE (1..MAX) OF\
    \ KeyPurposeId\n   KeyPurposeId ::= OBJECT IDENTIFIER\n   -- permit unspecified\
    \ key uses\n   anyExtendedKeyUsage OBJECT IDENTIFIER ::= { id-ce-extKeyUsage 0\
    \ }\n   -- extended key purpose OIDs\n   id-kp-serverAuth       OBJECT IDENTIFIER\
    \ ::= { id-kp 1 }\n   id-kp-clientAuth       OBJECT IDENTIFIER ::= { id-kp 2 }\n\
    \   id-kp-codeSigning      OBJECT IDENTIFIER ::= { id-kp 3 }\n   id-kp-emailProtection\
    \  OBJECT IDENTIFIER ::= { id-kp 4 }\n   id-kp-timeStamping     OBJECT IDENTIFIER\
    \ ::= { id-kp 8 }\n   id-kp-OCSPSigning      OBJECT IDENTIFIER ::= { id-kp 9 }\n\
    \   -- inhibit any policy OID and syntax\n   ext-InhibitAnyPolicy EXTENSION  ::=\
    \ {SYNTAX\n       SkipCerts IDENTIFIED BY id-ce-inhibitAnyPolicy }\n   id-ce-inhibitAnyPolicy\
    \ OBJECT IDENTIFIER ::=  { id-ce 54 }\n   -- freshest (delta)CRL extension OID\
    \ and syntax\n   ext-FreshestCRL EXTENSION ::= {SYNTAX\n       CRLDistributionPoints\
    \ IDENTIFIED BY id-ce-freshestCRL }\n   id-ce-freshestCRL OBJECT IDENTIFIER ::=\
    \  { id-ce 46 }\n   -- authority info access\n   ext-AuthorityInfoAccess EXTENSION\
    \ ::= { SYNTAX\n       AuthorityInfoAccessSyntax IDENTIFIED BY\n       id-pe-authorityInfoAccess\
    \ }\n   id-pe-authorityInfoAccess OBJECT IDENTIFIER ::= { id-pe 1 }\n   AuthorityInfoAccessSyntax\
    \  ::=\n           SEQUENCE SIZE (1..MAX) OF AccessDescription\n   AccessDescription\
    \  ::=  SEQUENCE {\n           accessMethod          OBJECT IDENTIFIER,\n    \
    \       accessLocation        GeneralName  }\n   -- subject info access\n   ext-SubjectInfoAccessSyntax\
    \ EXTENSION ::= { SYNTAX\n       SubjectInfoAccessSyntax IDENTIFIED BY id-pe-subjectInfoAccess\
    \ }\n   id-pe-subjectInfoAccess OBJECT IDENTIFIER ::= { id-pe 11 }\n   SubjectInfoAccessSyntax\
    \  ::=\n           SEQUENCE SIZE (1..MAX) OF AccessDescription\n   -- CRL number\
    \ extension OID and syntax\n   ext-CRLNumber EXTENSION ::= {SYNTAX\n       INTEGER\
    \ (0..MAX) IDENTIFIED BY id-ce-cRLNumber }\n   id-ce-cRLNumber OBJECT IDENTIFIER\
    \ ::= { id-ce 20 }\n   CRLNumber ::= INTEGER (0..MAX)\n   -- issuing distribution\
    \ point extension OID and syntax\n   ext-IssuingDistributionPoint EXTENSION ::=\
    \ { SYNTAX\n       IssuingDistributionPoint IDENTIFIED BY\n       id-ce-issuingDistributionPoint\
    \ }\n   id-ce-issuingDistributionPoint OBJECT IDENTIFIER ::= { id-ce 28 }\n  \
    \ IssuingDistributionPoint ::= SEQUENCE {\n        distributionPoint         \
    \ [0] DistributionPointName OPTIONAL,\n        onlyContainsUserCerts      [1]\
    \ BOOLEAN DEFAULT FALSE,\n        onlyContainsCACerts        [2] BOOLEAN DEFAULT\
    \ FALSE,\n        onlySomeReasons            [3] ReasonFlags OPTIONAL,\n     \
    \   indirectCRL                [4] BOOLEAN DEFAULT FALSE,\n        onlyContainsAttributeCerts\
    \ [5] BOOLEAN DEFAULT FALSE\n   }\n           -- at most one of onlyContainsUserCerts,\
    \ onlyContainsCACerts,\n           -- or onlyContainsAttributeCerts may be set\
    \ to TRUE.\n   ext-DeltaCRLIndicator EXTENSION ::= { SYNTAX\n       CRLNumber\
    \ IDENTIFIED BY id-ce-deltaCRLIndicator }\n   id-ce-deltaCRLIndicator OBJECT IDENTIFIER\
    \ ::= { id-ce 27 }\n   -- CRL reasons extension OID and syntax\n   ext-CRLReason\
    \ EXTENSION ::= { SYNTAX\n       CRLReason IDENTIFIED BY id-ce-cRLReasons }\n\
    \   id-ce-cRLReasons OBJECT IDENTIFIER ::= { id-ce 21 }\n   CRLReason ::= ENUMERATED\
    \ {\n        unspecified             (0),\n        keyCompromise           (1),\n\
    \        cACompromise            (2),\n        affiliationChanged      (3),\n\
    \        superseded              (4),\n        cessationOfOperation    (5),\n\
    \        certificateHold         (6),\n        removeFromCRL           (8),\n\
    \        privilegeWithdrawn      (9),\n        aACompromise           (10)\n \
    \  }\n   -- certificate issuer CRL entry extension OID and syntax\n   ext-CertificateIssuer\
    \ EXTENSION ::= { SYNTAX\n       GeneralNames IDENTIFIED BY id-ce-certificateIssuer\
    \ }\n   id-ce-certificateIssuer OBJECT IDENTIFIER ::= { id-ce 29 }\n   -- hold\
    \ instruction extension OID and syntax\n   ext-HoldInstructionCode EXTENSION ::=\
    \ { SYNTAX\n       OBJECT IDENTIFIER IDENTIFIED BY id-ce-holdInstructionCode }\n\
    \   id-ce-holdInstructionCode OBJECT IDENTIFIER ::= { id-ce 23 }\n   -- ANSI x9\
    \ holdinstructions\n   holdInstruction OBJECT IDENTIFIER ::=\n             {joint-iso-itu-t(2)\
    \ member-body(2) us(840) x9cm(10040) 2}\n   id-holdinstruction-none OBJECT IDENTIFIER\
    \  ::=\n                   {holdInstruction 1} -- deprecated\n   id-holdinstruction-callissuer\
    \ OBJECT IDENTIFIER ::=\n                   {holdInstruction 2}\n   id-holdinstruction-reject\
    \ OBJECT IDENTIFIER ::=\n                   {holdInstruction 3}\n   -- invalidity\
    \ date CRL entry extension OID and syntax\n   ext-InvalidityDate EXTENSION  ::=\
    \  { SYNTAX\n       GeneralizedTime IDENTIFIED BY id-ce-invalidityDate }\n   id-ce-invalidityDate\
    \ OBJECT IDENTIFIER ::= { id-ce 24 }\n   -- Upper bounds\n   ubMax INTEGER ::=\
    \ 32768\n   END\n  --\n  --  This module is used to isolate all the X.400 naming\
    \ information.\n  --  There is no reason to expect this to occur in a PKIX certificate.\n\
    \  --\n  PKIX-X400Address-2009\n      {iso(1) identified-organization(3) dod(6)\
    \ internet(1) security(5)\n      mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-x400address-02(60)\
    \ }\n  DEFINITIONS EXPLICIT TAGS ::=\n  BEGIN\n  -- X.400 address syntax starts\
    \ here\n  ORAddress ::= SEQUENCE {\n     built-in-standard-attributes BuiltInStandardAttributes,\n\
    \     built-in-domain-defined-attributes\n                     BuiltInDomainDefinedAttributes\
    \ OPTIONAL,\n     -- see also teletex-domain-defined-attributes\n     extension-attributes\
    \ ExtensionAttributes OPTIONAL }\n  -- Built-in Standard Attributes\n  BuiltInStandardAttributes\
    \ ::= SEQUENCE {\n     country-name                  CountryName OPTIONAL,\n \
    \    administration-domain-name    AdministrationDomainName OPTIONAL,\n     network-address\
    \           [0] IMPLICIT NetworkAddress OPTIONAL,\n       -- see also extended-network-address\n\
    \     terminal-identifier       [1] IMPLICIT TerminalIdentifier OPTIONAL,\n  \
    \   private-domain-name       [2] PrivateDomainName OPTIONAL,\n     organization-name\
    \         [3] IMPLICIT OrganizationName OPTIONAL,\n       -- see also teletex-organization-name\n\
    \     numeric-user-identifier   [4] IMPLICIT NumericUserIdentifier\n         \
    \                          OPTIONAL,\n     personal-name             [5] IMPLICIT\
    \ PersonalName OPTIONAL,\n       -- see also teletex-personal-name\n     organizational-unit-names\
    \ [6] IMPLICIT OrganizationalUnitNames\n                                   OPTIONAL\
    \ }\n       -- see also teletex-organizational-unit-names\n  CountryName ::= [APPLICATION\
    \ 1] CHOICE {\n     x121-dcc-code         NumericString\n                    \
    \         (SIZE (ub-country-name-numeric-length)),\n     iso-3166-alpha2-code\
    \  PrintableString\n                             (SIZE (ub-country-name-alpha-length))\
    \ }\n  AdministrationDomainName ::= [APPLICATION 2] CHOICE {\n     numeric   NumericString\
    \   (SIZE (0..ub-domain-name-length)),\n     printable PrintableString (SIZE (0..ub-domain-name-length))\
    \ }\n  NetworkAddress ::= X121Address  -- see also extended-network-address\n\
    \  X121Address ::= NumericString (SIZE (1..ub-x121-address-length))\n  TerminalIdentifier\
    \ ::= PrintableString (SIZE\n  (1..ub-terminal-id-length))\n  PrivateDomainName\
    \ ::= CHOICE {\n     numeric   NumericString   (SIZE (1..ub-domain-name-length)),\n\
    \     printable PrintableString (SIZE (1..ub-domain-name-length)) }\n  OrganizationName\
    \ ::= PrintableString\n                              (SIZE (1..ub-organization-name-length))\n\
    \    -- see also teletex-organization-name\n  NumericUserIdentifier ::= NumericString\n\
    \                              (SIZE (1..ub-numeric-user-id-length))\n  PersonalName\
    \ ::= SET {\n     surname     [0] IMPLICIT PrintableString\n                 \
    \     (SIZE (1..ub-surname-length)),\n     given-name  [1] IMPLICIT PrintableString\n\
    \                      (SIZE (1..ub-given-name-length)) OPTIONAL,\n     initials\
    \    [2] IMPLICIT PrintableString\n                      (SIZE (1..ub-initials-length))\
    \ OPTIONAL,\n     generation-qualifier [3] IMPLICIT PrintableString\n        \
    \              (SIZE (1..ub-generation-qualifier-length))\n                  \
    \    OPTIONAL }\n    -- see also teletex-personal-name\n  OrganizationalUnitNames\
    \ ::= SEQUENCE SIZE (1..ub-organizational-units)\n                           \
    \    OF OrganizationalUnitName\n    -- see also teletex-organizational-unit-names\n\
    \  OrganizationalUnitName ::= PrintableString (SIZE\n                      (1..ub-organizational-unit-name-length))\n\
    \  -- Built-in Domain-defined Attributes\n  BuiltInDomainDefinedAttributes ::=\
    \ SEQUENCE SIZE\n                      (1..ub-domain-defined-attributes) OF\n\
    \                      BuiltInDomainDefinedAttribute\n  BuiltInDomainDefinedAttribute\
    \ ::= SEQUENCE {\n     type PrintableString (SIZE\n                     (1..ub-domain-defined-attribute-type-length)),\n\
    \     value PrintableString (SIZE\n                     (1..ub-domain-defined-attribute-value-length))\
    \ }\n  -- Extension Attributes\n  ExtensionAttributes ::= SET SIZE (1..ub-extension-attributes)\
    \ OF\n                 ExtensionAttribute\n  EXTENSION-ATTRIBUTE ::= CLASS {\n\
    \      &id             INTEGER (0..ub-extension-attributes) UNIQUE,\n      &Type\n\
    \  } WITH SYNTAX { &Type IDENTIFIED BY &id }\n  ExtensionAttribute ::=  SEQUENCE\
    \ {\n     extension-attribute-type [0] IMPLICIT EXTENSION-ATTRIBUTE.\n       \
    \   &id({SupportedExtensionAttributes}),\n     extension-attribute-value [1] EXTENSION-ATTRIBUTE.\n\
    \          &Type({SupportedExtensionAttributes}\n              {@extension-attribute-type})}\n\
    \  SupportedExtensionAttributes EXTENSION-ATTRIBUTE ::= {\n      ea-commonName\
    \ | ea-teletexCommonName | ea-teletexOrganizationName\n      | ea-teletexPersonalName\
    \ | ea-teletexOrganizationalUnitNames |\n      ea-pDSName | ea-physicalDeliveryCountryName\
    \ | ea-postalCode |\n      ea-physicalDeliveryOfficeName | ea-physicalDeliveryOfficeNumber\
    \ |\n      ea-extensionORAddressComponents | ea-physicalDeliveryPersonalName\n\
    \      | ea-physicalDeliveryOrganizationName |\n      ea-extensionPhysicalDeliveryAddressComponents\
    \ |\n      ea-unformattedPostalAddress | ea-streetAddress |\n      ea-postOfficeBoxAddress\
    \ | ea-posteRestanteAddress |\n      ea-uniquePostalName | ea-localPostalAttributes\
    \ |\n      ea-extendedNetworkAddress | ea-terminalType |\n      ea-teletexDomainDefinedAttributes,\
    \ ... }\n  -- Extension types and attribute values\n  ea-commonName EXTENSION-ATTRIBUTE\
    \ ::= { PrintableString\n      (SIZE (1..ub-common-name-length)) IDENTIFIED BY\
    \ 1 }\n  ea-teletexCommonName EXTENSION-ATTRIBUTE ::= {TeletexString\n      (SIZE\
    \ (1..ub-common-name-length)) IDENTIFIED BY 2 }\n  ea-teletexOrganizationName\
    \ EXTENSION-ATTRIBUTE::= { TeletexString\n      (SIZE (1..ub-organization-name-length))\
    \ IDENTIFIED BY 3 }\n  ea-teletexPersonalName EXTENSION-ATTRIBUTE ::= {SET {\n\
    \     surname     [0] IMPLICIT TeletexString\n                      (SIZE (1..ub-surname-length)),\n\
    \     given-name  [1] IMPLICIT TeletexString\n                      (SIZE (1..ub-given-name-length))\
    \ OPTIONAL,\n     initials    [2] IMPLICIT TeletexString\n                   \
    \   (SIZE (1..ub-initials-length)) OPTIONAL,\n     generation-qualifier [3] IMPLICIT\
    \ TeletexString\n                      (SIZE (1..ub-generation-qualifier-length))\n\
    \                      OPTIONAL } IDENTIFIED BY 4 }\n  ea-teletexOrganizationalUnitNames\
    \ EXTENSION-ATTRIBUTE ::=\n      { SEQUENCE SIZE (1..ub-organizational-units)\
    \ OF\n            TeletexOrganizationalUnitName IDENTIFIED BY 5 }\n  TeletexOrganizationalUnitName\
    \ ::= TeletexString\n      (SIZE (1..ub-organizational-unit-name-length))\n  ea-pDSName\
    \ EXTENSION-ATTRIBUTE ::= {PrintableString\n      (SIZE (1..ub-pds-name-length))\
    \ IDENTIFIED BY 7 }\n  ea-physicalDeliveryCountryName EXTENSION-ATTRIBUTE ::=\
    \ { CHOICE {\n       x121-dcc-code NumericString (SIZE\n          (ub-country-name-numeric-length)),\n\
    \       iso-3166-alpha2-code PrintableString\n          (SIZE (ub-country-name-alpha-length))\
    \ }\n       IDENTIFIED BY 8 }\n  ea-postalCode EXTENSION-ATTRIBUTE ::= { CHOICE\
    \ {\n     numeric-code NumericString (SIZE (1..ub-postal-code-length)),\n    \
    \ printable-code PrintableString (SIZE (1..ub-postal-code-length)) }\n     IDENTIFIED\
    \ BY 9 }\n  ea-physicalDeliveryOfficeName EXTENSION-ATTRIBUTE ::=\n      { PDSParameter\
    \ IDENTIFIED BY 10 }\n  ea-physicalDeliveryOfficeNumber EXTENSION-ATTRIBUTE ::=\n\
    \      {PDSParameter IDENTIFIED BY 11 }\n  ea-extensionORAddressComponents EXTENSION-ATTRIBUTE\
    \ ::=\n      {PDSParameter IDENTIFIED BY 12 }\n  ea-physicalDeliveryPersonalName\
    \ EXTENSION-ATTRIBUTE ::=\n      {PDSParameter IDENTIFIED BY 13}\n  ea-physicalDeliveryOrganizationName\
    \ EXTENSION-ATTRIBUTE ::=\n      {PDSParameter IDENTIFIED BY 14 }\n  ea-extensionPhysicalDeliveryAddressComponents\
    \ EXTENSION-ATTRIBUTE ::=\n      {PDSParameter IDENTIFIED BY 15 }\n  ea-unformattedPostalAddress\
    \ EXTENSION-ATTRIBUTE ::= { SET {\n     printable-address SEQUENCE SIZE (1..ub-pds-physical-address-lines)\n\
    \           OF PrintableString (SIZE (1..ub-pds-parameter-length))\n         \
    \  OPTIONAL,\n     teletex-string TeletexString\n           (SIZE (1..ub-unformatted-address-length))\
    \ OPTIONAL }\n     IDENTIFIED BY 16 }\n  ea-streetAddress EXTENSION-ATTRIBUTE\
    \ ::=\n      {PDSParameter IDENTIFIED BY 17 }\n  ea-postOfficeBoxAddress EXTENSION-ATTRIBUTE\
    \ ::=\n      {PDSParameter IDENTIFIED BY 18 }\n  ea-posteRestanteAddress EXTENSION-ATTRIBUTE\
    \ ::=\n      {PDSParameter IDENTIFIED BY 19 }\n  ea-uniquePostalName EXTENSION-ATTRIBUTE\
    \ ::=\n      { PDSParameter IDENTIFIED BY 20 }\n  ea-localPostalAttributes EXTENSION-ATTRIBUTE\
    \ ::=\n      {PDSParameter IDENTIFIED BY 21 }\n  PDSParameter ::= SET {\n    \
    \ printable-string PrintableString\n                  (SIZE(1..ub-pds-parameter-length))\
    \ OPTIONAL,\n     teletex-string TeletexString\n                  (SIZE(1..ub-pds-parameter-length))\
    \ OPTIONAL }\n  ea-extendedNetworkAddress EXTENSION-ATTRIBUTE ::= {\n     CHOICE\
    \ {\n         e163-4-address SEQUENCE {\n             number      [0] IMPLICIT\
    \ NumericString\n                   (SIZE (1..ub-e163-4-number-length)),\n   \
    \          sub-address [1] IMPLICIT NumericString\n                   (SIZE (1..ub-e163-4-sub-address-length))\
    \ OPTIONAL\n         },\n         psap-address [0] IMPLICIT PresentationAddress\n\
    \     } IDENTIFIED BY 22\n  }\n  PresentationAddress ::= SEQUENCE {\n      pSelector\
    \     [0] EXPLICIT OCTET STRING OPTIONAL,\n      sSelector     [1] EXPLICIT OCTET\
    \ STRING OPTIONAL,\n      tSelector     [2] EXPLICIT OCTET STRING OPTIONAL,\n\
    \      nAddresses    [3] EXPLICIT SET SIZE (1..MAX) OF OCTET STRING }\n  ea-terminalType\
    \ EXTENSION-ATTRIBUTE ::= {INTEGER {\n     telex (3),\n     teletex (4),\n   \
    \  g3-facsimile (5),\n     g4-facsimile (6),\n     ia5-terminal (7),\n     videotex\
    \ (8) } (0..ub-integer-options)\n     IDENTIFIED BY 23 }\n  -- Extension Domain-defined\
    \ Attributes\n  ea-teletexDomainDefinedAttributes EXTENSION-ATTRIBUTE ::=\n  \
    \    { SEQUENCE SIZE (1..ub-domain-defined-attributes) OF\n           TeletexDomainDefinedAttribute\
    \ IDENTIFIED BY 6 }\n  TeletexDomainDefinedAttribute ::= SEQUENCE {\n      type\
    \ TeletexString\n          (SIZE (1..ub-domain-defined-attribute-type-length)),\n\
    \      value TeletexString\n          (SIZE (1..ub-domain-defined-attribute-value-length))\
    \ }\n  --  specifications of Upper Bounds MUST be regarded as mandatory\n  --\
    \  from Annex B of ITU-T X.411 Reference Definition of MTS Parameter\n  --  Upper\
    \ Bounds\n  -- Upper Bounds\n  ub-match INTEGER ::= 128\n  ub-common-name-length\
    \ INTEGER ::= 64\n  ub-country-name-alpha-length INTEGER ::= 2\n  ub-country-name-numeric-length\
    \ INTEGER ::= 3\n  ub-domain-defined-attributes INTEGER ::= 4\n  ub-domain-defined-attribute-type-length\
    \ INTEGER ::= 8\n  ub-domain-defined-attribute-value-length INTEGER ::= 128\n\
    \  ub-domain-name-length INTEGER ::= 16\n  ub-extension-attributes INTEGER ::=\
    \ 256\n  ub-e163-4-number-length INTEGER ::= 15\n  ub-e163-4-sub-address-length\
    \ INTEGER ::= 40\n  ub-generation-qualifier-length INTEGER ::= 3\n  ub-given-name-length\
    \ INTEGER ::= 16\n  ub-initials-length INTEGER ::= 5\n  ub-integer-options INTEGER\
    \ ::= 256\n  ub-numeric-user-id-length INTEGER ::= 32\n  ub-organization-name-length\
    \ INTEGER ::= 64\n  ub-organizational-unit-name-length INTEGER ::= 32\n  ub-organizational-units\
    \ INTEGER ::= 4\n  ub-pds-name-length INTEGER ::= 16\n  ub-pds-parameter-length\
    \ INTEGER ::= 30\n  ub-pds-physical-address-lines INTEGER ::= 6\n  ub-postal-code-length\
    \ INTEGER ::= 16\n  ub-surname-length INTEGER ::= 40\n  ub-terminal-id-length\
    \ INTEGER ::= 24\n  ub-unformatted-address-length INTEGER ::= 180\n  ub-x121-address-length\
    \ INTEGER ::= 16\n  -- Note - upper bounds on string types, such as TeletexString,\
    \ are\n  -- measured in characters.  Excepting PrintableString or IA5String, a\n\
    \  -- significantly greater number of octets will be required to hold\n  -- such\
    \ a value.  As a minimum, 16 octets or twice the specified\n  -- upper bound,\
    \ whichever is the larger, should be allowed for\n  -- TeletexString.  For UTF8String\
    \ or UniversalString, at least four\n  -- times the upper bound should be allowed.\n\
    \  END\n"
- title: 15.  Security Considerations
  contents:
  - "15.  Security Considerations\n   Even though all the RFCs in this document are\
    \ security-related, the\n   document itself does not have any security considerations.\
    \  The ASN.1\n   modules keep the same bits-on-the-wire as the modules that they\n\
    \   replace.\n"
- title: 16.  Normative References
  contents:
  - "16.  Normative References\n   [ASN1-2002]  ITU-T, \"ITU-T Recommendation X.680,\
    \ X.681, X.682, and\n                X.683\", ITU-T X.680, X.681, X.682, and X.683,\
    \ 2002.\n   [RFC2560]    Myers, M., Ankney, R., Malpani, A., Galperin, S., and\
    \ C.\n                Adams, \"X.509 Internet Public Key Infrastructure Online\n\
    \                Certificate Status Protocol - OCSP\", RFC 2560,\n           \
    \     June 1999.\n   [RFC2986]    Nystrom, M. and B. Kaliski, \"PKCS #10: Certification\n\
    \                Request Syntax Specification Version 1.7\", RFC 2986,\n     \
    \           November 2000.\n   [RFC3279]    Bassham, L., Polk, W., and R. Housley,\
    \ \"Algorithms and\n                Identifiers for the Internet X.509 Public\
    \ Key\n                Infrastructure Certificate and Certificate Revocation\n\
    \                List (CRL) Profile\", RFC 3279, April 2002.\n   [RFC3852]   \
    \ Housley, R., \"Cryptographic Message Syntax (CMS)\",\n                RFC 3852,\
    \ July 2004.\n   [RFC4055]    Schaad, J., Kaliski, B., and R. Housley, \"Additional\n\
    \                Algorithms and Identifiers for RSA Cryptography for use\n   \
    \             in the Internet X.509 Public Key Infrastructure\n              \
    \  Certificate and Certificate Revocation List (CRL)\n                Profile\"\
    , RFC 4055, June 2005.\n   [RFC4210]    Adams, C., Farrell, S., Kause, T., and\
    \ T. Mononen,\n                \"Internet X.509 Public Key Infrastructure Certificate\n\
    \                Management Protocol (CMP)\", RFC 4210, September 2005.\n   [RFC4211]\
    \    Schaad, J., \"Internet X.509 Public Key Infrastructure\n                Certificate\
    \ Request Message Format (CRMF)\", RFC 4211,\n                September 2005.\n\
    \   [RFC5055]    Freeman, T., Housley, R., Malpani, A., Cooper, D., and\n    \
    \            W. Polk, \"Server-Based Certificate Validation Protocol\n       \
    \         (SCVP)\", RFC 5055, December 2007.\n   [RFC5272]    Schaad, J. and M.\
    \ Myers, \"Certificate Management over\n                CMS (CMC)\", RFC 5272,\
    \ June 2008.\n   [RFC5280]    Cooper, D., Santesson, S., Farrell, S., Boeyen,\
    \ S.,\n                Housley, R., and W. Polk, \"Internet X.509 Public Key\n\
    \                Infrastructure Certificate and Certificate Revocation\n     \
    \           List (CRL) Profile\", RFC 5280, May 2008.\n   [RFC5480]    Turner,\
    \ S., Brown, D., Yiu, K., Housley, R., and T.\n                Polk, \"Elliptic\
    \ Curve Cryptography Subject Public Key\n                Information\", RFC 5480,\
    \ March 2009.\n   [RFC5755]    Farrell, S., Housley, R., and S. Turner, \"An Internet\n\
    \                Attribute Certificate Profile for Authorization\",\n        \
    \        RFC 5755, January 2010.\n   [RFC5911]    Hoffman, P. and J. Schaad, \"\
    New ASN.1 Modules for\n                Cryptographic Message Syntax (CMS) and\
    \ S/MIME\",\n                RFC 5911, June 2010.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Paul Hoffman\n   VPN Consortium\n   127 Segre Place\n\
    \   Santa Cruz, CA  95060\n   US\n   Phone: 1-831-426-9827\n   EMail: paul.hoffman@vpnc.org\n\
    \   Jim Schaad\n   Soaring Hawk Consulting\n   EMail: jimsch@exmsft.com\n"
