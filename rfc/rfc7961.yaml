- title: __initial_text__
  contents:
  - "         Transparent Interconnection of Lots of Links (TRILL):\n            \
    \         Interface Addresses APPsub-TLV\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies a TRILL (Transparent Interconnection of\
    \ Lots\n   of Links) IS-IS application sub-TLV that enables the reporting by a\n\
    \   TRILL switch of sets of addresses.  Each set of addresses reports all\n  \
    \ of the addresses that designate the same interface (port) and also\n   reports\
    \ the TRILL switch by which that interface is reachable.  For\n   example, a 48-bit\
    \ MAC (Media Access Control) address, IPv4 address,\n   and IPv6 address can be\
    \ reported as all corresponding to the same\n   interface reachable by a particular\
    \ TRILL switch.  Such information\n   could be used in some cases to synthesize\
    \ responses to, or bypass the\n   need for, the Address Resolution Protocol (ARP),\
    \ the IPv6 Neighbor\n   Discovery (ND) protocol, or the flooding of unknown MAC\
    \ addresses.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7961.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Conventions Used in This Document ..........................3\n  \
    \ 2. Format of the Interface Addresses APPsub-TLV ....................4\n   3.\
    \ IA APPsub-TLV Sub-sub-TLVs ......................................9\n      3.1.\
    \ AFN Size Sub-sub-TLV ......................................10\n      3.2. Fixed\
    \ Address Sub-sub-TLV .................................11\n      3.3. Data Label\
    \ Sub-sub-TLV ....................................12\n      3.4. Topology Sub-sub-TLV\
    \ ......................................12\n   4. Security Considerations ........................................13\n\
    \   5. IANA Considerations ............................................14\n  \
    \    5.1. Allocation of AFN Values ..................................14\n    \
    \  5.2. IA APPsub-TLV Sub-sub-TLVs Sub-registry ...................15\n      5.3.\
    \ IA APPsub-TLV Number ......................................16\n   6. Additional\
    \ AFN Information .....................................16\n   7. Processing Address\
    \ Sets ........................................16\n   8. References .....................................................18\n\
    \      8.1. Normative References ......................................18\n  \
    \    8.2. Informative References ....................................20\n   Appendix\
    \ A. Examples ..............................................21\n      A.1. Simple\
    \ Example ............................................21\n      A.2. Complex Example\
    \ ...........................................22\n   Acknowledgments ...................................................24\n\
    \   Authors' Addresses ................................................24\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document specifies a TRILL (Transparent Interconnection\
    \ of Lots\n   of Links) [RFC6325] IS-IS application sub-TLV (APPsub-TLV) [RFC6823]\n\
    \   that enables the convenient representation of sets of addresses where\n  \
    \ all of the addresses in each set designate the same interface (port).\n   For\
    \ example, a 48-bit MAC (Media Access Control) [RFC7042] address,\n   IPv4 address,\
    \ and IPv6 address can be reported as all three\n   designating the same interface.\
    \  In addition, a Data Label (VLAN or\n   Fine-Grained Label (FGL) [RFC7172])\
    \ is specified for the interface,\n   along with the TRILL switch and, optionally,\
    \ the TRILL switch port\n   from which the interface is reachable.  Such information\
    \ could be\n   used in some cases to synthesize responses to, or bypass the need\n\
    \   for, the Address Resolution Protocol (ARP) [RFC826], the IPv6\n   Neighbor\
    \ Discovery (ND) [RFC4861] protocol, the Reverse Address\n   Resolution Protocol\
    \ (RARP) [RFC903], or the flooding of unknown\n   destination MAC addresses [ARPND].\
    \  If the information reported is\n   complete, it can also be used to detect\
    \ and discard packets with\n   forged source addresses.\n   This APPsub-TLV appears\
    \ inside the TRILL GENINFO TLV specified in the\n   End Station Address Distribution\
    \ Information (ESADI) RFC [RFC7357]\n   but may also occur in other application\
    \ contexts.  The\n   \"directory assistance\" TRILL Edge services [DirectoryScheme]\
    \ are\n   expected to make use of this APPsub-TLV.\n   Although in some IETF protocols\
    \ address field types are represented\n   by an Ethertype [RFC7042] or a hardware\
    \ address type [RFC5494], only\n   the Address Family Number (AFN) is used in\
    \ this APPsub-TLV to\n   represent the address field type.\n"
- title: 1.1.  Conventions Used in This Document
  contents:
  - "1.1.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n   Capitalized IANA-related terms such as \"Expert Review\" are\
    \ to be\n   interpreted as described in [RFC5226].\n   The terminology and acronyms\
    \ of [RFC6325] are used herein, along with\n   the following additional acronyms\
    \ and terms:\n   AFN: Address Family Number\n      (http://www.iana.org/assignments/address-family-numbers/)\n\
    \   APPsub-TLV: Application sub-TLV [RFC6823]\n   Data Label: VLAN or FGL\n  \
    \ FGL: Fine-Grained Label [RFC7172]\n   IA: Interface Address(es)\n   MAC: Media\
    \ Access Control\n   Nickname: A 16-bit TRILL switch identifier, as specified\
    \ in\n      Section 3.7 of [RFC6325] and as updated by Section 4 of [RFC7780]\n\
    \   RBridge: An alternative name for a TRILL switch\n   TRILL switch: A device\
    \ that implements the TRILL protocol\n"
- title: 2.  Format of the Interface Addresses APPsub-TLV
  contents:
  - "2.  Format of the Interface Addresses APPsub-TLV\n   The Interface Addresses\
    \ (IA) APPsub-TLV is used to advertise a set of\n   addresses indicating the same\
    \ interface (port) within a Data Label\n   (VLAN or FGL).  It also associates\
    \ that interface with the TRILL\n   switch and, optionally, the TRILL switch port\
    \ by which the interface\n   is reachable.  These addresses can be in different\
    \ address families.\n   For example, the IA APPsub-TLV can be used to declare\
    \ that a\n   particular interface with specified IPv4, IPv6, and 48-bit MAC\n\
    \   addresses in some particular Data Label is reachable from a\n   particular\
    \ TRILL switch.  While those three types of addresses are\n   likely to be the\
    \ only types of interest, any address type for which\n   an AFN has been assigned\
    \ by IANA can be represented.\n   The Template field in a particular IA APPsub-TLV\
    \ indicates the format\n   of each Address Set it carries.  Certain well-known\
    \ sets of addresses\n   are represented by special values.  Other sets of addresses\
    \ are\n   specified by a list of AFNs.  The Template format that uses a list of\n\
    \   AFNs provides an explicit pattern for the type and order of addresses\n  \
    \ in each Address Set in the IA APPsub-TLV that includes that Template.\n   A\
    \ device or application making use of IA APPsub-TLV data is not\n   required to\
    \ make use of all IA data.  For example, a device or\n   application that was\
    \ only interested in MAC and IPv6 addresses could\n   ignore any IPv4 or other\
    \ types of address information that was\n   present.\n   Figure 1 shows an IA\
    \ APPsub-TLV as it would appear inside an IS-IS\n   Flooding Scope Link State\
    \ PDU (FS-LSP) using an extended flooding\n   scope [RFC7356] TLV -- for example,\
    \ in ESADI [RFC7357].  Within an\n   IS-IS FS-LSP using traditional [ISO-10589]\
    \ TLVs, the Type and Length\n   would be 1-byte unsigned integers equal to or\
    \ less than 255, but with\n   an extended TLV, the Type and Length are 2-byte\
    \ unsigned integers.\n          +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n          |\
    \ Type = (10)                   |  (2 bytes)\n          +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \          | Length                        |  (2 bytes)\n          +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \          | Addr Sets End                 |  (2 bytes)\n          +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \          | Nickname                      |  (2 bytes)\n          +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \          | Flags         |                  (1 byte)\n          +-+-+-+-+-+-+-+-+\n\
    \          | Confidence    |                  (1 byte)\n          +-+-+-+-+-+-+-+-+-+-\n\
    \          | Template ...                     (variable)\n          +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...-+\n\
    \          | Address Set 1    (size determined by Template)    |\n          +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...-+\n\
    \          | Address Set 2    (size determined by Template)    |\n          +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...-+\n\
    \          |   ...\n          +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...-+\n\
    \          | Address Set N    (size determined by Template)    |\n          +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...-+\n\
    \          | optional sub-sub-TLVs ...\n          +-+-+-+-+-+-+-+-+-+-+-+-...\n\
    \                 Figure 1: Interface Addresses APPsub-TLV\n   o  Type: Interface\
    \ Addresses TRILL APPsub-TLV type; set to 10\n      (IA-SUBTLV).\n   o  Length:\
    \ Variable; minimum 7.  If Length is 6 or less or if the\n      APPsub-TLV extends\
    \ beyond the size of an encompassing TRILL\n      GENINFO TLV or other context,\
    \ the APPsub-TLV MUST be ignored.  For\n      manageability, a counter reflecting\
    \ the receipt of such malformed\n      IA APPsub-TLVs should be maintained.\n\
    \   o  Addr Sets End: The unsigned integer byte number, within the IA\n      APPsub-TLV\
    \ value part, of the last byte of the last Address Set,\n      where the first\
    \ byte is numbered 1.  This will be the number of\n      the byte just before\
    \ the first sub-sub-TLV if any sub-sub-TLVs are\n      present (see Section 3).\
    \  The processing is as follows:\n      -  If this field is greater than Length\
    \ or points to before the\n         end of the Template, the IA APPsub-TLV is\
    \ corrupt and MUST be\n         discarded.\n      -  If this field is equal to\
    \ Length, there are no sub-sub-TLVs.\n      -  If this field is less than Length,\
    \ sub-sub-TLVs are parsed as\n         specified in Section 3.\n      Note: This\
    \ field is always 2 bytes in size.\n   o  Nickname: The nickname (see Section\
    \ 1.1) of the TRILL switch by\n      which the Address Sets are reachable.  If\
    \ 0, the Address Sets are\n      reachable from the TRILL switch originating the\
    \ message containing\n      the APPsub-TLV (for example, an ESADI [RFC7357] message).\n\
    \   o  Flags: A byte of flags, as follows:\n          0 1 2 3 4 5 6 7\n      \
    \   +-+-+-+-+-+-+-+-+\n         |D|L|   RESV    |\n         +-+-+-+-+-+-+-+-+\n\
    \         D: Directory flag: If D is 1, the APPsub-TLV contains directory\n  \
    \          information [RFC7067].\n         L: Local flag: If L is 1, the APPsub-TLV\
    \ contains information\n            learned locally by observing ingressed frames\
    \ [RFC6325].\n            (Both D and L can be set to 1 in the same IA APPsub-TLV\
    \ if a\n            TRILL switch had learned an address locally and also\n   \
    \         advertised it as a directory.)\n         RESV: Additional reserved flag\
    \ bits that MUST be sent as zero\n            and ignored on receipt.\n   o  Confidence:\
    \ This 8-bit unsigned quantity in the range 0 to 254\n      indicates the confidence\
    \ level in the addresses being transported\n      (see Section 4.8.2 of [RFC6325]).\
    \  A value of 255 is treated as if\n      it was 254.\n   o  Template: The initial\
    \ byte of this field is the unsigned integer\n      K.  If K has a value from\
    \ 1 to 31, it indicates that this initial\n      byte is followed by a list of\
    \ K AFNs that specify the exact\n      structure and order of each Address Set\
    \ occurring later in the\n      APPsub-TLV.  K can be 1, which is the minimum\
    \ valid value.  If K\n      is 0, the IA APPsub-TLV is ignored.  If K is 32 to\
    \ 254, the length\n      of the Template field is 1 byte, and its value is intended\
    \ to\n      correspond to a particular ordered set of AFNs, some of which are\n\
    \      specified below.  The value of 255 for K is reserved for future\n     \
    \ definition and causes the IA APPsub-TLV to be ignored.\n      If the Template\
    \ uses explicit AFNs, it looks like the following,\n      with the number of AFNs,\
    \ up to 31, equal to K.\n            +-+-+-+-+-+-+-+-+\n            |  K     \
    \       |                  (1 byte)\n            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \            |  AFN 1                        |  (2 bytes)\n            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \            |  AFN 2                        |  (2 bytes)\n            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \            |   ...\n            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n        \
    \    |  AFN K                        |  (2 bytes)\n            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      For K in the range 32 to 39, values indicate a specific sequence,\n   \
    \   as specified below.  The values of K from 40 to 254 are reserved\n      for\
    \ future specification.  If the value of K is not understood by\n      a receiver\
    \ of the IA-APPsub-TLV, any Address Sets present are\n      ignored.\n       \
    \      K   Addresses in order of occurrence\n            ---  --------------------------------\n\
    \             32  48-bit MAC\n             33  48-bit MAC, IPv4\n            \
    \ 34  48-bit MAC, IPv6\n             35  48-bit MAC, IPv4, IPv6\n            \
    \ 36  48-bit MAC, RBridge port\n             37  48-bit MAC, IPv4, RBridge port\n\
    \             38  48-bit MAC, IPv6, RBridge port\n             39  48-bit MAC,\
    \ IPv4, IPv6, RBridge port\n      For ease of decoding, note that for values of\
    \ K between 32 and 39\n      inclusive, the 0x01 bit indicates that an IPv4 address\
    \ is present,\n      the 0x02 bit indicates that an IPv6 address is present, and\
    \ the\n      0x04 bit indicates that an RBridge Port ID is present.\n   o  AFN:\
    \ A 2-byte Address Family Number.  The number of AFNs present\n      is given\
    \ by K, except that there are no AFNs if K is greater than\n      31.  The AFN\
    \ sequence specifies the structure of the Address Sets\n      occurring later\
    \ in the TLV.  For example, if the Template size is\n      2 and the two AFNs\
    \ present are the AFNs for a 48-bit MAC and an\n      IPv4 address, in that order,\
    \ then each Address Set present will\n      consist of a 6-byte MAC address followed\
    \ by a 4-byte IPv4 address.\n      If any AFNs are present that are unknown to\
    \ the receiving IS and\n      the length of the corresponding address is not provided\
    \ by a\n      sub-sub-TLV as specified below, the receiving IS will be unable\
    \ to\n      parse the Address Sets and MUST ignore the IA APPsub-TLV.\n   o  Address\
    \ Set: Each Address Set in the APPsub-TLV consists of\n      exactly the same\
    \ sequence of addresses and types as specified by\n      the Template earlier\
    \ in the APPsub-TLV.  No alignment, other than\n      to a byte boundary, is provided.\
    \  The addresses in each Address\n      Set are contiguous with no unused bytes\
    \ between them, and the\n      Address Sets are contiguous with no unused bytes\
    \ between\n      successive Address Sets.  The Address Sets must fit within the\n\
    \      TLV.  See Section 7 on interpreting certain Address Sets.\n   o  sub-sub-TLVs:\
    \ If the Address Sets indicated by Addr Sets End do\n      not completely fill\
    \ the length of the APPsub-TLV (as indicated by\n      the Length field), then\
    \ per Section 4 of [RFC5305] the remaining\n      bytes are parsed as sub-sub-TLVs.\
    \  Any such sub-sub-TLVs that are\n      not known to the receiving TRILL switch\
    \ are ignored.  Should this\n      parsing not be possible -- for example, there\
    \ is only one\n      remaining byte or an apparent sub-sub-TLV extends beyond\
    \ the end\n      of the TLV -- the containing IA APPsub-TLV is considered corrupt\n\
    \      and is ignored.  (Several sub-sub-TLV types are specified in\n      Section\
    \ 3.)\n   Different IA APPsub-TLVs within the same or different LSPs or other\n\
    \   data structures may have different Templates.  The same AFN may occur\n  \
    \ more than once in a Template, and the same address may occur in\n   different\
    \ Address Sets.  For example, a 48-bit MAC address interface\n   might have three\
    \ different IPv6 addresses.  This could be represented\n   by an IA APPsub-TLV\
    \ whose Template specifically provided for one\n   EUI-48 address and three IPv6\
    \ addresses; this might be an efficient\n   format if there were multiple interfaces\
    \ with that pattern.\n   Alternatively, a Template with one 48-bit MAC and one\
    \ IPv6 address\n   could be used in an IA APPsub-TLV with three Address Sets each\
    \ having\n   the same MAC address but different IPv6 addresses; this might be\
    \ the\n   most efficient format if only one interface had multiple IPv6\n   addresses\
    \ and other interfaces had only one IPv6 address.\n   In order to be able to parse\
    \ the Address Sets, a receiving TRILL\n   switch must know at least the size of\
    \ the address for each AFN or\n   address type the Template specifies; however,\
    \ the presence of the\n   Addr Sets End field means that the sub-sub-TLVs, if\
    \ any, can always\n   be located by a receiver.  A TRILL switch can be assumed\
    \ to know the\n   size of the AFNs mentioned in Section 5.  Should a TRILL switch\
    \ wish\n   to include an AFN that some receiving TRILL switch in the campus may\n\
    \   not know, it SHOULD include an AFN Size sub-sub-TLV as described in\n   Section\
    \ 3.1.  If an IA APPsub-TLV is received with one or more AFNs\n   in its Template\
    \ for which the receiving TRILL switch does not know\n   the length and for which\
    \ an AFN Size sub-sub-TLV is not present, that\n   IA APPsub-TLV MUST be ignored.\n\
    \   For manageability, a counter of ill-formed IA APPsub-TLVs received\n   and\
    \ ignored due to unknown K, unknown AFN, and the like (as described\n   above)\
    \ should be maintained.\n"
- title: 3.  IA APPsub-TLV Sub-sub-TLVs
  contents:
  - "3.  IA APPsub-TLV Sub-sub-TLVs\n   IA APPsub-TLVs can have sub-sub-TLVs (sub-TLVs\
    \ of sub-TLVs [RFC5305])\n   at the end, as specified below.  These sub-sub-TLVs\
    \ occur after the\n   Address Sets.  The amount of space available for sub-sub-TLVs\
    \ is\n   determined from the overall IA APPsub-TLV length and the value of the\n\
    \   Addr Sets End byte.\n   There is no ordering restriction on sub-sub-TLVs.\
    \  Unless otherwise\n   specified, each sub-sub-TLV type can occur zero, one,\
    \ or many times\n   in an IA APPsub-TLV.  Any sub-sub-TLVs for which the Type\
    \ is unknown\n   are ignored.  For manageability, a counter of sub-sub-TLVs received\n\
    \   and ignored due to an unknown Type or other reasons, as described\n   below,\
    \ should be maintained.\n   The data structures of the sub-sub-TLVs shown below,\
    \ with 2-byte\n   Types and Lengths, assume that the enclosing IA APPsub-TLV is\
    \ in an\n   extended LSP TLV [RFC7356] or some non-LSP context.  If they were\n\
    \   used in an IA APPsub-TLV in a non-extended LSP [ISO-10589], then only\n  \
    \ 1-byte Types and Lengths could be used.  As a result, any sub-sub-TLV\n   types\
    \ greater than 255 could not be used, and Length would be limited\n   to 255.\n"
- title: 3.1.  AFN Size Sub-sub-TLV
  contents:
  - "3.1.  AFN Size Sub-sub-TLV\n   Using this sub-sub-TLV, the originating TRILL\
    \ switch can specify the\n   size of an address type.  This is useful under the\
    \ following two\n   circumstances:\n   1. One or more AFNs that are unknown to\
    \ the receiving TRILL switch\n      appear in the Template.  If an AFN Size sub-sub-TLV\
    \ is present for\n      each such AFN, then at least the IA APPsub-TLV can be\
    \ parsed, and\n      possibly other addresses in each Address Set can still be\
    \ used.\n   2. If an AFN occurs in the Template that represents a variable-length\n\
    \      address, this sub-sub-TLV gives its size for all occurrences in\n     \
    \ that IA APPsub-TLV.\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       | Type\
    \ = AFNsz                  |  (2 bytes)\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       | Length                        |  (2 bytes)\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       | AFN Size Record 1                             |  (3 bytes)\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       | AFN Size Record 2                             |  (3 bytes)\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       | ...\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   | AFN Size Record N                             |  (3 bytes)\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                      Figure 2: AFN Size Sub-sub-TLV\n   Where each AFN Size\
    \ Record is structured as follows:\n         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \         |  AFN                          |  (2 bytes)\n         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \         |  AdrSize      |                  (1 byte)\n         +-+-+-+-+-+-+-+-+\n\
    \   o  Type: AFN Size sub-sub-TLV type; set to 1 (AFNsz).\n   o  Length: 3*N,\
    \ where N is the number of AFN Size Records present.\n      If Length is not a\
    \ multiple of 3, the sub-sub-TLV MUST be ignored.\n   o  AFN Size Record(s): Zero\
    \ or more 3-byte records, each giving the\n      size of an address type identified\
    \ by an AFN.\n   o  AFN: The AFN whose length is being specified by the AFN Size\n\
    \      Record.\n   o  AdrSize: The length, in bytes, of addresses specified by\
    \ the AFN\n      field as an unsigned integer.\n   An AFN Size sub-sub-TLV for\
    \ any AFN known to the receiving TRILL\n   switch is compared with the size known\
    \ to the TRILL switch.  If they\n   differ, the IA APPsub-TLV is assumed to be\
    \ corrupt and MUST be\n   ignored.\n"
- title: 3.2.  Fixed Address Sub-sub-TLV
  contents:
  - "3.2.  Fixed Address Sub-sub-TLV\n   There may be cases where, in a particular\
    \ IA APPsub-TLV, the same\n   address would appear in every Address Set across\
    \ the IA APPsub-TLV.\n   To avoid wasted space, this sub-sub-TLV can be used to\
    \ indicate such\n   a fixed address.  The address or addresses incorporated into\
    \ the sets\n   by this sub-sub-TLV are NOT mentioned in the IA APPsub-TLV Template.\n\
    \         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n         | Type = FIXEDADR      \
    \         | (2 bytes)\n         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n         |\
    \ Length                        | (2 bytes)\n         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \         | AFN                           | (2 bytes)\n         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \         | Fixed Address                   (variable)\n         +-+-+-+-+-+-+-+-+-+-+-+-+-...\n\
    \                    Figure 3: Fixed Address Sub-sub-TLV\n   o  Type: Data Label\
    \ sub-sub-TLV type; set to 2 (FIXEDADR).\n   o  Length: Variable; minimum 2. \
    \ If Length is 0 or 1, the sub-sub-TLV\n      MUST be ignored.\n   o  AFN: Address\
    \ Family Number of the Fixed Address.\n   o  Fixed Address: The address of the\
    \ Type indicated by the preceding\n      AFN field that is considered to be part\
    \ of every Address Set in\n      the IA APPsub-TLV.\n   The Length field implies\
    \ a size for the Fixed Address.  If that size\n   differs from the size of the\
    \ address type for the given AFN as known\n   by the receiving TRILL switch, the\
    \ Fixed Address sub-sub-TLV is\n   considered corrupt and MUST be ignored.\n"
- title: 3.3.  Data Label Sub-sub-TLV
  contents:
  - "3.3.  Data Label Sub-sub-TLV\n   This sub-sub-TLV indicates the Data Label within\
    \ which the interfaces\n   listed in the IA APPsub-TLV are reachable.  It is useful\
    \ if the IA\n   APPsub-TLV occurs outside of the context of a message specifying\
    \ the\n   Data Label or if it is desired and permitted to override that\n   specification.\
    \  Multiple occurrences of this sub-sub-TLV indicate\n   that the interfaces are\
    \ reachable in all of the Data Labels given.\n         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \         |Type = DATALEN                 | (2 bytes)\n         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \         | Length                        | (2 bytes)\n         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \         | Data Label                      (variable)\n         +-+-+-+-+-+-+-+-+-+-+-+-+-...\n\
    \                     Figure 4: Data Label Sub-sub-TLV\n   o  Type: Data Label\
    \ sub-TLV type; set to 3 (DATALEN).\n   o  Length: 2 or 3.  If Length is some\
    \ other value, the sub-sub-TLV\n      MUST be ignored.\n   o  Data Label: If Length\
    \ is 2, the bottom 12 bits of the Data Label\n      are a VLAN ID and the top\
    \ 4 bits are reserved (MUST be sent as\n      zero and ignored on receipt).  If\
    \ Length is 3, the three Data\n      Label bytes contain an FGL [RFC7172].\n"
- title: 3.4.  Topology Sub-sub-TLV
  contents:
  - "3.4.  Topology Sub-sub-TLV\n   The presence of this sub-sub-TLV indicates that\
    \ the interfaces given\n   in the IA APPsub-TLV are reachable in the topology\
    \ given.  It is\n   useful if the IA APPsub-TLV occurs outside of the context\
    \ of a\n   message indicating the topology or if it is desired and permitted to\n\
    \   override that specification.  If it occurs multiple times, then the\n   Address\
    \ Sets are in all of the topologies given.\n         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \         |Type = TOPOLOGY                |  (2 bytes)\n         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \         | Length                        |  (2 bytes)\n         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \         | RESV  |        Topology       |  (2 bytes)\n         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                      Figure 5: Topology Sub-sub-TLV\n   o  Type: Topology sub-TLV\
    \ type; set to 4 (TOPOLOGY).\n   o  Length: 2.  If Length is some other value,\
    \ the sub-sub-TLV MUST be\n      ignored.\n   o  RESV: 4 reserved bits.  MUST\
    \ be sent as zero and ignored on\n      receipt.\n   o  Topology: The 12-bit topology\
    \ number [RFC5120].\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   The integrity of address mapping and reachability\
    \ information as well\n   as the correctness of Data Labels (VLANs or FGLs [RFC7172])\
    \ are very\n   important.  Forged, altered, or incorrect address mapping or data\n\
    \   labeling can lead to delivery of packets to the incorrect party,\n   violating\
    \ security policy.  However, this document merely describes a\n   data format\
    \ and does not provide any explicit mechanisms for securing\n   that information,\
    \ other than a few simple consistency checks that\n   might detect some corrupted\
    \ data.  Security on the wire, or in\n   storage, for this data is to be provided\
    \ by the transport or storage\n   used.  For example, when transported with ESADI\
    \ [RFC7357] or RBridge\n   Channel [RFC7178], ESADI security or Channel Tunnel\
    \ [ChannelTunnel]\n   security mechanisms can be used, respectively.\n   The address\
    \ mapping and reachability information, if known to be\n   complete and correct,\
    \ can be used to detect some cases of forged\n   packet source addresses [RFC7067].\
    \  In particular, if native traffic\n   from an end station is received by a TRILL\
    \ switch that would\n   otherwise accept it but authoritative data indicates that\
    \ the source\n   address should not be reachable from the receiving TRILL switch,\
    \ that\n   traffic should be discarded.  The data format specified in this\n \
    \  document may optionally include a TRILL switch Port ID number so that\n   this\
    \ forged address filtering can be optionally applied with port\n   granularity.\
    \  For manageability, a counter of frames so discarded\n   should be maintained.\n\
    \   See [RFC6325] for general TRILL security considerations.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   The following subsections specify IANA allocations.\n"
- title: 5.1.  Allocation of AFN Values
  contents:
  - "5.1.  Allocation of AFN Values\n   IANA has allocated values in the \"Address\
    \ Family Numbers\" registry\n   that may be useful for IA APPsub-TLVs.  The values\
    \ are as follows:\n        Hex    Decimal   Description      References\n    \
    \   -----   -------   -----------      ----------\n        0001        1    IPv4\n\
    \        0002        2    IPv6\n        4005    16389    48-bit MAC       Section\
    \ 2.1 of [RFC7042]\n        4006    16390    64-bit MAC       Section 2.2 of [RFC7042]\n\
    \        4007    16391    OUI              Section 6 of RFC 7961\n        4008\
    \    16392    MAC/24           Section 6 of RFC 7961\n        4009    16393  \
    \  MAC/40           Section 6 of RFC 7961\n        400A    16394    IPv6/64  \
    \        Section 6 of RFC 7961\n        400B    16395    RBridge Port ID  Section\
    \ 6 of RFC 7961\n   Other AFNs can be found at <http://www.iana.org/assignments/\n\
    \   address-family-numbers>.\n   See Section 7 on interpreting Address Sets.\n"
- title: 5.2.  IA APPsub-TLV Sub-sub-TLVs Sub-registry
  contents:
  - "5.2.  IA APPsub-TLV Sub-sub-TLVs Sub-registry\n   IANA has established a new\
    \ sub-registry of the \"Transparent\n   Interconnection of Lots of Links (TRILL)\
    \ Parameters\" registry for\n   sub-sub-TLVs of the Interface Addresses APPsub-TLV,\
    \ with the\n   following initial contents:\n      Name:  Interface Addresses APPsub-TLV\
    \ Sub-sub-TLVs\n      Procedure:  Expert Review\n      Note:  Types greater than\
    \ 255 are not usable in some contexts.\n      Reference:  RFC 7961\n         \
    \ Type      Description       Reference\n         ------     -----------     \
    \  ---------\n             0      Reserved          RFC 7961\n             1 \
    \     AFN Size          RFC 7961\n             2      Fixed Address     RFC 7961\n\
    \             3      Data Label        RFC 7961\n             4      Topology\
    \          RFC 7961\n         5-254      Unassigned\n           255      Reserved\
    \          RFC 7961\n     256-65534      Unassigned\n         65535      Reserved\
    \          RFC 7961\n   Expert Guidance: A designated expert for this registry\
    \ should decide\n      whether to permit the assignment of a type based on clear\n\
    \      documentation of the proposed type as provided by the requester,\n    \
    \  such as a complete Internet-Draft.  New types should not duplicate\n      existing\
    \ types.  Requests should indicate whether a type less than\n      255 is desired;\
    \ such types can be used in contexts where only\n      1 byte of a type (and usually\
    \ only 1 byte of the length) is\n      permitted.  Types greater than 255 can\
    \ only be used where 2-byte\n      types are allowed, such as in Extended Level\
    \ 1 Flooding Scope\n      (E-L1FS) or Extended Level 1 Circuit Scope (E-L1CS)\
    \ extended\n      FS-LSPs [RFC7356]; in those contexts, lengths up to 65535 bytes\n\
    \      can also be expressed, although they may not be usable if the\n      resulting\
    \ TLV would not fit into a larger context restricted by an\n      MTU setting\
    \ or the like.  Values within the region below 255 and\n      the region above\
    \ 255 should be allocated sequentially, unless\n      there is an extraordinary\
    \ reason for a special value.\n"
- title: 5.3.  IA APPsub-TLV Number
  contents:
  - "5.3.  IA APPsub-TLV Number\n   IANA has allocated type 10 as the IA APPsub-TLV\
    \ in the \"TRILL\n   APPsub-TLV Types under IS-IS TLV 251 Application Identifier\
    \ 1\"\n   registry from the range under 256.  In the registry, the name is \"\
    IA\"\n   and the reference is this document.\n"
- title: 6.  Additional AFN Information
  contents:
  - "6.  Additional AFN Information\n   This section provides additional information\
    \ concerning AFNs that\n   were allocated in connection with this document.  These\
    \ AFNs are not\n   restricted to use in the IA APPsub-TLV and may be used in other\n\
    \   protocols where they would be appropriate.\n   OUI: A 3-byte (24-bit) Organizationally\
    \ Unique Identifier used as the\n      initial 3 bytes of a MAC address.  See\
    \ Sections 2.1 and 2.2 of\n      [RFC7042], and Section 7 below.\n   MAC/24: A\
    \ 3-byte (24-bit) quantity used as the final 3 bytes of a\n      48-bit MAC address.\
    \  See Section 2.1 of [RFC7042] and Section 7\n      below.\n   MAC/40: A 5-byte\
    \ (40-bit) quantity used as the final 5 bytes of a\n      64-bit MAC address.\
    \  See Section 2.2 of [RFC7042] and Section 7\n      below.\n   IPv6/64: An 8-byte\
    \ (64-bit) quantity used as the initial 8 bytes of\n      an IPv6 address.  See\
    \ Section 7 below.\n   RBridge Port ID: A 16-bit quantity that uniquely identifies\
    \ a port on\n      a TRILL switch (RBridge).  See Section 4.4.2 of [RFC6325].\n"
- title: 7.  Processing Address Sets
  contents:
  - "7.  Processing Address Sets\n   The following processes should be followed in\
    \ interpreting sets of\n   AFN values in an IA APPsub-TLV to synthesize addresses.\
    \  These apply\n   whether the AFN values came from sub-sub-TLVs, appeared within\
    \ an\n   Address Set, or came from both sources.  In general, the processing\n\
    \   is applied separately to each Address Set as supplemented by any\n   Fixed\
    \ Address sub-sub-TLVs that are present.\n   The OUI AFN value is provided so\
    \ that MAC addresses can be\n   abbreviated if they have the same upper 24 bits.\
    \  A MAC/24 is a\n   24-bit suffix intended to be prefixed by an OUI to create\
    \ a 48-bit\n   MAC address [RFC7042]; in the absence of an OUI, a MAC/24 entry\n\
    \   cannot be used.  A MAC/40 is a 40-bit suffix intended to be prefixed\n   by\
    \ an OUI to create a 64-bit MAC address [RFC7042]; in the absence of\n   an OUI,\
    \ a MAC/40 entry cannot be used.\n   Typically, an OUI would be provided as a\
    \ Fixed Address sub-sub-TLV\n   (see Section 3.2) using the OUI AFN, but there\
    \ is no prohibition\n   against one or more OUIs appearing in an Address Set.\n\
    \   Each Address Set, after being supplemented by any Fixed Address\n   sub-sub-TLVs,\
    \ is processed by combining each OUI in the Address Set\n   with each MAC/24 and\
    \ each MAC/40 address in the Address Set.\n   Depending on how many of each of\
    \ these address types are present,\n   zero or more 48-bit and/or 64-bit MAC addresses\
    \ may be synthesized\n   that are subsequently processed as if they had been part\
    \ of the\n   Address Set.  If there are no MAC/24 or MAC/40 addresses present,\
    \ any\n   OUIs are ignored.  If there are no OUIs, any MAC/24s and/or MAC/40s\n\
    \   are ignored.  If there are K1 OUIs, K2 MAC/24s, and K3 MAC/40s, K1*K2\n  \
    \ 48-bit MACs are synthesized and K1*K3 64-bit MACs are synthesized.\n   IPv6/64\
    \ is an 8-byte quantity that is the first 64 bits of an IPv6\n   address.  IPv6/64s\
    \ are ignored unless, after the processing described\n   above in this subsection,\
    \ there are one or more 48-bit and/or 64-bit\n   MAC addresses in the Address\
    \ Set to provide the lower 64 bits of the\n   IPv6 address.  For this purpose,\
    \ a 48-bit MAC address is expanded to\n   64 bits as described in Section 2.2.1\
    \ of [RFC7042].  If there are K4\n   IPv6/64s present and K5 48-bit and 64-bit\
    \ MAC addresses present,\n   K4*K5 128-bit IPv6 addresses are synthesized.\n \
    \  Synthesized addresses are treated as if they had been members of the\n   Address\
    \ Set.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [ISO-10589]\n              International Organization\
    \ for Standardization,\n              \"Intermediate System to Intermediate System\
    \ intra-domain\n              routeing information exchange protocol for use in\n\
    \              conjunction with the protocol for providing the\n             \
    \ connectionless-mode network service (ISO 8473)\",\n              ISO Standard\
    \ 10589, 2002.\n   [RFC826]   Plummer, D., \"Ethernet Address Resolution Protocol:\
    \ Or\n              Converting Network Protocol Addresses to 48.bit Ethernet\n\
    \              Address for Transmission on Ethernet Hardware\", STD 37,\n    \
    \          RFC 826, DOI 10.17487/RFC0826, November 1982,\n              <http://www.rfc-editor.org/info/rfc826>.\n\
    \   [RFC903]   Finlayson, R., Mann, T., Mogul, J., and M. Theimer, \"A\n     \
    \         Reverse Address Resolution Protocol\", STD 38, RFC 903,\n          \
    \    DOI 10.17487/RFC0903, June 1984,\n              <http://www.rfc-editor.org/info/rfc903>.\n\
    \   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n        \
    \      Requirement Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119,\
    \ March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n   [RFC4861]\
    \  Narten, T., Nordmark, E., Simpson, W., and H. Soliman,\n              \"Neighbor\
    \ Discovery for IP version 6 (IPv6)\", RFC 4861,\n              DOI 10.17487/RFC4861,\
    \ September 2007,\n              <http://www.rfc-editor.org/info/rfc4861>.\n \
    \  [RFC5120]  Przygienda, T., Shen, N., and N. Sheth, \"M-ISIS:\n            \
    \  Multi Topology (MT) Routing in Intermediate System to\n              Intermediate\
    \ Systems (IS-ISs)\", RFC 5120,\n              DOI 10.17487/RFC5120, February\
    \ 2008,\n              <http://www.rfc-editor.org/info/rfc5120>.\n   [RFC5226]\
    \  Narten, T. and H. Alvestrand, \"Guidelines for Writing an\n              IANA\
    \ Considerations Section in RFCs\", BCP 26, RFC 5226,\n              DOI 10.17487/RFC5226,\
    \ May 2008,\n              <http://www.rfc-editor.org/info/rfc5226>.\n   [RFC5305]\
    \  Li, T. and H. Smit, \"IS-IS Extensions for Traffic\n              Engineering\"\
    , RFC 5305, DOI 10.17487/RFC5305,\n              October 2008, <http://www.rfc-editor.org/info/rfc5305>.\n\
    \   [RFC6325]  Perlman, R., Eastlake 3rd, D., Dutt, D., Gai, S., and A.\n    \
    \          Ghanwani, \"Routing Bridges (RBridges): Base Protocol\n           \
    \   Specification\", RFC 6325, DOI 10.17487/RFC6325, July 2011,\n            \
    \  <http://www.rfc-editor.org/info/rfc6325>.\n   [RFC6823]  Ginsberg, L., Previdi,\
    \ S., and M. Shand, \"Advertising\n              Generic Information in IS-IS\"\
    , RFC 6823,\n              DOI 10.17487/RFC6823, December 2012,\n            \
    \  <http://www.rfc-editor.org/info/rfc6823>.\n   [RFC7042]  Eastlake 3rd, D. and\
    \ J. Abley, \"IANA Considerations and\n              IETF Protocol and Documentation\
    \ Usage for IEEE 802\n              Parameters\", BCP 141, RFC 7042, DOI 10.17487/RFC7042,\n\
    \              October 2013, <http://www.rfc-editor.org/info/rfc7042>.\n   [RFC7172]\
    \  Eastlake 3rd, D., Zhang, M., Agarwal, P., Perlman, R., and\n              D.\
    \ Dutt, \"Transparent Interconnection of Lots of Links\n              (TRILL):\
    \ Fine-Grained Labeling\", RFC 7172,\n              DOI 10.17487/RFC7172, May\
    \ 2014,\n              <http://www.rfc-editor.org/info/rfc7172>.\n   [RFC7356]\
    \  Ginsberg, L., Previdi, S., and Y. Yang, \"IS-IS Flooding\n              Scope\
    \ Link State PDUs (LSPs)\", RFC 7356,\n              DOI 10.17487/RFC7356, September\
    \ 2014,\n              <http://www.rfc-editor.org/info/rfc7356>.\n   [RFC7357]\
    \  Zhai, H., Hu, F., Perlman, R., Eastlake 3rd, D., and O.\n              Stokes,\
    \ \"Transparent Interconnection of Lots of Links\n              (TRILL): End Station\
    \ Address Distribution Information\n              (ESADI) Protocol\", RFC 7357,\
    \ DOI 10.17487/RFC7357,\n              September 2014, <http://www.rfc-editor.org/info/rfc7357>.\n\
    \   [RFC7780]  Eastlake 3rd, D., Zhang, M., Perlman, R., Banerjee, A.,\n     \
    \         Ghanwani, A., and S. Gupta, \"Transparent Interconnection\n        \
    \      of Lots of Links (TRILL): Clarifications, Corrections, and\n          \
    \    Updates\", RFC 7780, DOI 10.17487/RFC7780, February 2016,\n             \
    \ <http://www.rfc-editor.org/info/rfc7780>.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [ARPND]    Li, Y., Eastlake 3rd, D., Dunbar,\
    \ L., and R. Perlman,\n              \"TRILL: ARP/ND Optimization\", Work in Progress,\n\
    \              draft-ietf-trill-arp-optimization-06, April 2016.\n   [ChannelTunnel]\n\
    \              Eastlake 3rd, D., Umair, M., and Y. Li, \"TRILL: RBridge\n    \
    \          Channel Header Extension\", Work in Progress,\n              draft-ietf-trill-channel-tunnel-11,\
    \ August 2016.\n   [DirectoryScheme]\n              Eastlake 3rd, D., Dunbar,\
    \ L., Perlman, R., and Y. Li,\n              \"TRILL: Edge Directory Assist Mechanisms\"\
    , Work in\n              Progress, draft-ietf-trill-directory-assist-mechanisms-07,\n\
    \              February 2016.\n   [RFC5494]  Arkko, J. and C. Pignataro, \"IANA\
    \ Allocation Guidelines\n              for the Address Resolution Protocol (ARP)\"\
    , RFC 5494,\n              DOI 10.17487/RFC5494, April 2009,\n              <http://www.rfc-editor.org/info/rfc5494>.\n\
    \   [RFC7067]  Dunbar, L., Eastlake 3rd, D., Perlman, R., and I.\n           \
    \   Gashinsky, \"Directory Assistance Problem and High-Level\n              Design\
    \ Proposal\", RFC 7067, DOI 10.17487/RFC7067,\n              November 2013, <http://www.rfc-editor.org/info/rfc7067>.\n\
    \   [RFC7178]  Eastlake 3rd, D., Manral, V., Li, Y., Aldrin, S., and D.\n    \
    \          Ward, \"Transparent Interconnection of Lots of Links\n            \
    \  (TRILL): RBridge Channel Support\", RFC 7178,\n              DOI 10.17487/RFC7178,\
    \ May 2014,\n              <http://www.rfc-editor.org/info/rfc7178>.\n"
- title: Appendix A.  Examples
  contents:
  - "Appendix A.  Examples\n   Below are example IA APPsub-TLVs.  \"0x\" indicates\
    \ that the quantity\n   is in hexadecimal.  \"0b\" indicates that the quantity\
    \ is in binary.\n   Leading zeros are retained.\n"
- title: A.1.  Simple Example
  contents:
  - "A.1.  Simple Example\n   Below is an annotated IA APPsub-TLV carrying two simple\
    \ pairs of\n   EUI-48 MAC addresses and IPv4 addresses from a Push Directory\n\
    \   (a directory conforming to the Push Model [RFC7067]).  No\n   sub-sub-TLVs\
    \ are included.\n         0x0002(10)   Type: Interface Addresses\n         0x001B\
    \        Length: 27 (= 0x1B)\n         0x001B        Address Sets End: 27 (= 0x1B)\n\
    \         0x1234        RBridge Nickname from which reachable\n         0b10000000\
    \    Flags: Push Directory data\n         0xE3          Confidence = 227\n   \
    \      33            Template: 33 (0x21) = 32 + 1(IPv4)\n               Address\
    \ Set One\n         0x00005E0053A9   48-bit MAC address\n         198.51.100.23\
    \    IPv4 address\n               Address Set Two\n         0x00005E00536B   48-bit\
    \ MAC address\n         203.0.113.201    IPv4 address\n   The size includes 7\
    \ for the fixed fields through and including the\n   1-byte Template, plus 2 times\
    \ the Address Set size.  Each Address Set\n   is 10 bytes: 6 for the 48-bit MAC\
    \ address plus 4 for the IPv4\n   address.  Therefore, the total size is 7 + 2*10\
    \ = 27.\n   See Section 2 for more information on the Template.\n"
- title: A.2.  Complex Example
  contents:
  - "A.2.  Complex Example\n   Below is an annotated IA APPsub-TLV carrying three\
    \ sets of addresses,\n   each consisting of an EUI-48 MAC address, an IPv4 address,\
    \ an IPv6\n   address, and an RBridge Port ID, all from a Push Directory\n   (a\
    \ directory conforming to the Push Model [RFC7067]).  The IPv6\n   address for\
    \ each Address Set is synthesized from the MAC address\n   given in that set and\
    \ the IPv6/64 64-bit prefix provided through a\n   Fixed Address sub-sub-TLV.\
    \  In addition, a sub-sub-TLV is included\n   that provides an FGL that overrides\
    \ whatever Data Label may be\n   provided by the envelope (for example, an ESADI-LSP\
    \ [RFC7357]) within\n   which this IA APPsub-TLV occurs.\n       0x0002(10)  \
    \  Type: Interface Addresses\n       0x0036        Length: 64 (= 0x40)\n     \
    \  0x0021        Address Sets End: 43 (= 0x2B)\n       0x4321        RBridge Nickname\
    \ from which reachable\n       0b10000000    Flags: Push Directory data\n    \
    \   0xD3          Confidence = 211\n       37            Template: 37(0x25) =\
    \ 32 + 1(IPv4) + 4(Port)\n             Address Set One\n       0x00005E0053DE\
    \   48-bit MAC address\n       198.51.100.105   IPv4 address\n       0x1DE3  \
    \         RBridge Port ID\n             Address Set Two\n       0x00005E0053E3\
    \   48-bit MAC address\n       203.0.113.89     IPv4 address\n       0x1DEE  \
    \         RBridge Port ID\n             Address Set Three\n       0x00005E0053D3\
    \   48-bit MAC address\n       192.0.2.139      IPv4 address\n       0x01DE  \
    \         RBridge Port ID\n             sub-sub-TLV One\n       0x0003       \
    \    Type: Data Label\n       0x0003           Length: Implies FGL\n       0xD3E3E3\
    \         Fine-Grained Label\n             sub-sub-TLV Two\n       0x0002    \
    \       Type: Fixed Address\n       0x000A           Size: 0x0A = 10\n       0x400A\
    \           AFN: IPv6/64\n       0x20010db800000000   IPv6 Prefix: 2001:db8::\n\
    \   See Section 2 for more information on the Template.\n   The Fixed Address\
    \ sub-sub-TLV causes the IPv6/64 value given to be\n   treated as if it occurred\
    \ as a fourth entry inside each of the three\n   Address Sets.  When there is\
    \ an IPv6/64 entry and a 48-bit MAC entry,\n   the MAC value is expanded by inserting\
    \ 0xfffe immediately after the\n   OUI, and the local/global bit is inverted.\
    \  The resulting\n   Modified EUI-64-bit value is used as the lower 64 bits of\
    \ the\n   resulting IPv6 address (Section 2.2.1 of [RFC7042]).  As a result, a\n\
    \   receiving TRILL switch would treat the three Address Sets shown as if\n  \
    \ they had an IPv6 address in them, as follows:\n               Address Set One\n\
    \         0x20010db80000000002005efffe0053de  IPv6 Address\n               Address\
    \ Set Two\n         0x20010db80000000002005efffe0053e3  IPv6 Address\n       \
    \        Address Set Three\n         0x20010db80000000002005efffe0053d3  IPv6\
    \ Address\n   As an alternative to the compact \"well-known value\" Template encoding\n\
    \   used in the example above, the less compact explicit AFN encoding\n   could\
    \ have been used.  In that case, the IA APPsub-TLV would have\n   started as follows:\n\
    \         0x0002(10)    Type: Interface Addresses\n         0x003C        Length:\
    \ 60 (= 0x3C)\n         0x0027        Address Sets End: 39 (= 0x27)\n        \
    \ 0x4321        RBridge Nickname from which reachable\n         0b10000000   \
    \ Flags: Push Directory data\n         0xD3          Confidence = 211\n      \
    \   0x3           Template: 3 AFNs\n         0x4005        AFN: 48-bit MAC\n \
    \        0x0001        AFN: IPv4\n         0x400B        AFN: RBridge Port ID\n\
    \   As a final point, since the 48-bit MAC addresses in these three\n   Address\
    \ Sets all have the same OUI (the IANA OUI [RFC7042]), it would\n   have been\
    \ possible to just have a MAC/24 value giving the lower\n   24 bits of the MAC\
    \ in each Address Set.  The OUI would then be\n   supplied by a second Fixed Address\
    \ sub-sub-TLV providing the OUI.\n   With N Address Sets, this would have saved\
    \ 3*N or 9 bytes, at a cost\n   of 9 bytes (2 each for the Type and Length of\
    \ the sub-sub-TLV, 2 for\n   the OUI AFN, and 3 for the OUI).  So, with just three\
    \ Address Sets,\n   there would be no net savings; however, with a larger number\
    \ of\n   Address Sets, there would be a net savings.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   The authors gratefully acknowledge the contributions and\
    \ review by\n   the following:\n      Linda Dunbar, Sue Hares, Paul Kyzivat, Danny\
    \ McPherson, and\n      Gayle Noble\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Donald Eastlake 3rd\n   Huawei Technologies\n   155 Beaver\
    \ Street\n   Milford, MA  01757\n   United States of America\n   Phone: +1-508-333-2270\n\
    \   Email: d3e3e3@gmail.com\n   Yizhou Li\n   Huawei Technologies\n   101 Software\
    \ Avenue\n   Nanjing  210012\n   China\n   Phone: +86-25-56622310\n   Email: liyizhou@huawei.com\n"
