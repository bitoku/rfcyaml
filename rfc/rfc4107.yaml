- title: __initial_text__
  contents:
  - '              Guidelines for Cryptographic Key Management

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet Best Current Practices\
    \ for the\n   Internet Community, and requests discussion and suggestions for\n\
    \   improvements.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   The question often arises of whether a given security system requires\n\
    \   some form of automated key management, or whether manual keying is\n   sufficient.\
    \  This memo provides guidelines for making such decisions.\n   When symmetric\
    \ cryptographic mechanisms are used in a protocol, the\n   presumption is that\
    \ automated key management is generally but not\n   always needed.  If manual\
    \ keying is proposed, the burden of proving\n   that automated key management\
    \ is not required falls to the proposer.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The question often arises of whether or not a given security\
    \ system\n   requires some form of automated key management, or whether manual\n\
    \   keying is sufficient.\n   There is not one answer to that question; circumstances\
    \ differ.  In\n   general, automated key management SHOULD be used.  Occasionally,\n\
    \   relying on manual key management is reasonable; we propose some\n   guidelines\
    \ for making that judgment.\n   On the other hand, relying on manual key management\
    \ has significant\n   disadvantages, and we outline the security concerns that\
    \ justify the\n   preference for automated key management.  However, there are\n\
    \   situations in which manual key management is acceptable.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   The keywords MUST, MUST NOT, REQUIRED, SHALL, SHALL NOT,\
    \ SHOULD,\n   SHOULD NOT, RECOMMENDED, MAY, and OPTIONAL, when they appear in\
    \ this\n   document, are to be interpreted as described in RFC 2119 [B].\n"
- title: 2.  Guidelines
  contents:
  - "2.  Guidelines\n   These guidelines are for use by IETF working groups and protocol\n\
    \   authors who are determining whether to mandate automated key\n   management\
    \ and whether manual key management is acceptable.  Informed\n   judgment is needed.\n\
    \   The term \"key management\" refers to the establishment of\n   cryptographic\
    \ keying material for use with a cryptographic algorithm\n   to provide protocol\
    \ security services, especially integrity,\n   authentication, and confidentiality.\
    \  Automated key management\n   derives one or more short-term session keys. \
    \ The key derivation\n   function may make use of long-term keys to incorporate\
    \ authentication\n   into the process.  The manner in which this long-term key\
    \ is\n   distributed to the peers and the type of key used (pre-shared\n   symmetric\
    \ secret value, RSA public key, DSA public key, and others)\n   is beyond the\
    \ scope of this document.  However, it is part of the\n   overall key management\
    \ solution.  Manual key management is used to\n   distribute such values.  Manual\
    \ key management can also be used to\n   distribute long-term session keys.\n\
    \   Automated key management and manual key management provide very\n   different\
    \ features.  In particular, the protocol associated with an\n   automated key\
    \ management technique will confirm the liveness of the\n   peer, protect against\
    \ replay, authenticate the source of the short-\n   term session key, associate\
    \ protocol state information with the\n   short-term session key, and ensure that\
    \ a fresh short-term session\n   key is generated.  Further, an automated key\
    \ management protocol can\n   improve interoperability by including negotiation\
    \ mechanisms for\n   cryptographic algorithms.  These valuable features are impossible\
    \ or\n   extremely cumbersome to accomplish with manual key management.\n   For\
    \ some symmetric cryptographic algorithms, implementations must\n   prevent overuse\
    \ of a given key.  An implementation of such algorithms\n   can make use of automated\
    \ key management when the usage limits are\n   nearly exhausted, in order to establish\
    \ replacement keys before the\n   limits are reached, thereby maintaining secure\
    \ communications.\n   Examples of automated key management systems include IPsec\
    \ IKE and\n   Kerberos.  S/MIME and TLS also include automated key management\n\
    \   functions.\n   Key management schemes should not be designed by amateurs;\
    \ it is\n   almost certainly inappropriate for working groups to design their\n\
    \   own.  To put it in concrete terms, the very first key management\n   protocol\
    \ in the open literature was published in 1978 [NS].  A flaw\n   and a fix were\
    \ published in 1981 [DS], and the fix was cracked in\n   1994 [AN].  In 1995 [L],\
    \ a new flaw was found in the original 1978\n   version, in an area not affected\
    \ by the 1981/1994 issue.  All of\n   these flaws were obvious once described\
    \ -- yet no one spotted them\n   earlier.  Note that the original protocol (translated\
    \ to employ\n   certificates, which had not been invented at that time) was only\n\
    \   three messages.\n   Key management software is not always large or bloated.\
    \  Even IKEv1\n   [HC] can be done in less than 200 Kbytes of object code, and\
    \ TLS [DA]\n   in half that space.  Note that this TLS estimate includes other\n\
    \   functionality as well.\n   A session key is used to protect a payload.  The\
    \ nature of the\n   payload depends on the layer where the symmetric cryptography\
    \ is\n   applied.\n   In general, automated key management SHOULD be used to establish\n\
    \   session keys.  Strong justification is needed in the security\n   considerations\
    \ section of a proposal that makes use of manual key\n   management.\n"
- title: 2.1.  Automated Key Management
  contents:
  - "2.1.  Automated Key Management\n   Automated key management MUST be used if any\
    \ of these conditions\n   hold:\n      A party will have to manage n^2 static\
    \ keys, where n may become\n      large.\n      Any stream cipher (such as RC4\
    \ [TK], AES-CTR [NIST], or AES-CCM\n      [WHF]) is used.\n      An initialization\
    \ vector (IV) might be reused, especially an\n      implicit IV.  Note that random\
    \ or pseudo-random explicit IVs are\n      not a problem unless the probability\
    \ of repetition is high.\n      Large amounts of data might need to be encrypted\
    \ in a short time,\n      causing frequent change of the short-term session key.\n\
    \      Long-term session keys are used by more than two parties.\n      Multicast\
    \ is a necessary exception, but multicast key management\n      standards are\
    \ emerging in order to avoid this in the future.\n      Sharing long-term session\
    \ keys should generally be discouraged.\n      The likely operational environment\
    \ is one where personnel (or\n      device) turnover is frequent, causing frequent\
    \ change of the\n      short-term session key.\n"
- title: 2.2.  Manual Key Management
  contents:
  - "2.2.  Manual Key Management\n   Manual key management may be a reasonable approach\
    \ in any of these\n   situations:\n      The environment has very limited available\
    \ bandwidth or very high\n      round-trip times.  Public key systems tend to\
    \ require long\n      messages and lots of computation; symmetric key alternatives,\
    \ such\n      as Kerberos, often require several round trips and interaction\n\
    \      with third parties.\n      The information being protected has low value.\n\
    \      The total volume of traffic over the entire lifetime of the long-\n   \
    \   term session key will be very low.\n      The scale of each deployment is\
    \ very limited.\n   Note that assertions about such things should often be viewed\
    \ with\n   skepticism.  The burden of demonstrating that manual key management\n\
    \   is appropriate falls to the proponents -- and it is a fairly high\n   hurdle.\n\
    \   Systems that employ manual key management need provisions for key\n   changes.\
    \  There MUST be some way to indicate which key is in use to\n   avoid problems\
    \ during transition.  Designs SHOULD sketch plausible\n   mechanisms for deploying\
    \ new keys and replacing old ones that might\n   have been compromised.  If done\
    \ well, such mechanisms can later be\n   used by an add-on key management scheme.\n\
    \   Lack of clarity about the parties involved in authentication is not a\n  \
    \ valid reason for avoiding key management.  Rather, it tends to\n   indicate\
    \ a deeper problem with the underlying security model.\n"
- title: 2.3.  Key Size and Random Values
  contents:
  - "2.3.  Key Size and Random Values\n   Guidance on cryptographic key size for public\
    \ keys that are used for\n   exchanging symmetric keys can be found in BCP 86\
    \ [OH].\n   When manual key management is used, long-term shared secret values\n\
    \   SHOULD be at least 128 bits.\n   Guidance on random number generation can\
    \ be found in BCP 106 [ESC].\n   When manual key management is used, long-term\
    \ shared secrets MUST be\n   unpredictable \"random\" values, ensuring that an\
    \ adversary will have\n   no greater expectation than 50% of finding the value\
    \ after searching\n   half the key search space.\n"
- title: 3.  Security Considerations
  contents:
  - "3.  Security Considerations\n   This document provides guidance to working groups\
    \ and protocol\n   designers.  The security of the Internet is improved when automated\n\
    \   key management is employed.\n   The inclusion of automated key management\
    \ does not mean that an\n   interface for manual key management is prohibited.\
    \  In fact, manual\n   key management is very helpful for debugging.  Therefore,\n\
    \   implementations ought to provide a manual key management interface\n   for\
    \ such purposes, even if it is not specified by the protocol.\n"
- title: 4.  References
  contents:
  - "4.  References\n   This section contains normative and informative references.\n"
- title: 4.1.  Normative References
  contents:
  - "4.1.  Normative References\n   [B]    Bradner, S., \"Key words for use in RFCs\
    \ to Indicate\n          Requirement Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [ESC]  Eastlake, D., 3rd, Schiller, J., and S. Crocker, \"Randomness\n   \
    \       Requirements for Security\", BCP 106, RFC 4086, June 2005.\n   [OH]  \
    \ Orman, H. and P. Hoffman, \"Determining Strengths For Public\n          Keys\
    \ Used For Exchanging Symmetric Keys\", BCP 86, RFC 3766,\n          April 2004\n"
- title: 4.2.  Informative References
  contents:
  - "4.2.  Informative References\n   [AN]   M. Abadi and R. Needham, \"Prudent Engineering\
    \ Practice for\n          Cryptographic Protocols\", Proc. IEEE Computer Society\n\
    \          Symposium on Research in Security and Privacy, May 1994.\n   [DA] \
    \  Dierks, T. and C. Allen, \"The TLS Protocol Version 1.0\", RFC\n          2246,\
    \ January 1999.\n   [DS]   D. Denning and G. Sacco.  \"Timestamps in key distributed\n\
    \          protocols\", Communication of the ACM, 24(8):533--535, 1981.\n   [HC]\
    \   Harkins, D. and D. Carrel, \"The Internet Key Exchange (IKE)\",\n        \
    \  RFC 2409, November 1998.\n   [L]    G. Lowe.  \"An attack on the Needham-Schroeder\
    \ public key\n          authentication protocol\", Information Processing Letters,\n\
    \          56(3):131--136, November 1995.\n   [NIST] National Institute of Standards\
    \ and Technology.\n          \"Recommendation for Block Cipher Modes of Operation\
    \ -- Methods\n          and Techniques,\" NIST Special Publication SP 800-38A,\
    \ December\n          2001.\n   [NS]   R. Needham and M. Schroeder. \"Using encryption\
    \ for\n          authentication in large networks of computers\", Communications\n\
    \          of the ACM, 21(12), December 1978.\n   [TK]   Thayer, R. and K. Kaukonen.\
    \  \"A Stream Cipher Encryption\n          Algorithm\", Work in Progress.\n  \
    \ [WHF]  Whiting, D., Housley, R., and N. Ferguson , \"Counter with\n        \
    \  CBC-MAC (CCM)\", RFC 3610, September 2003.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Steven M. Bellovin\n   Department of Computer Science\n\
    \   Columbia University\n   1214 Amsterdam Avenue, M.C. 0401\n   New York, NY\
    \ 10027-7003\n   Phone: +1 212-939-7149\n   EMail: bellovin@acm.org\n   Russell\
    \ Housley\n   Vigil Security, LLC\n   918 Spring Knoll Drive\n   Herndon, VA 20170\n\
    \   Phone: +1 703-435-1775\n   EMail: housley@vigilsec.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
