- title: __initial_text__
  contents:
  - '                      Realm Specific IP: Framework

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2001).  All Rights Reserved.\n"
- title: IESG Note
  contents:
  - "IESG Note\n   The IESG notes that the set of documents describing the RSIP\n\
    \   technology imply significant host and gateway changes for a complete\n   implementation.\
    \  In addition, the floating of port numbers can cause\n   problems for some applications,\
    \ preventing an RSIP-enabled host from\n   interoperating transparently with existing\
    \ applications in some cases\n   (e.g., IPsec).  Finally, there may be significant\
    \ operational\n   complexities associated with using RSIP.  Some of these and\
    \ other\n   complications are outlined in section 6 of RFC 3102, as well as in\n\
    \   the Appendices of RFC 3104.  Accordingly, the costs and benefits of\n   using\
    \ RSIP should be carefully weighed against other means of\n   relieving address\
    \ shortage.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document examines the general framework of Realm Specific IP\n\
    \   (RSIP).  RSIP is intended as a alternative to NAT in which the end-\n   to-end\
    \ integrity of packets is maintained.  We focus on\n   implementation issues,\
    \ deployment scenarios, and interaction with\n   other layer-three protocols.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  2\n   1.1. Document Scope  . . . . . . . . . . . . . . . . . . .\
    \ . . .  4\n   1.2. Terminology . . . . . . . . . . . . . . . . . . . . . . .\
    \ .  4\n   1.3. Specification of Requirements . . . . . . . . . . . . . . .  5\n\
    \   2. Architecture  . . . . . . . . . . . . . . . . . . . . . . . .  6\n   3.\
    \ Requirements  . . . . . . . . . . . . . . . . . . . . . . . .  7\n   3.1. Host\
    \ and Gateway Requirements . . . . . . . . . . . . . . .  7\n   3.2. Processing\
    \ of Demultiplexing Fields . . . . . . . . . . . .  8\n   3.3. RSIP Protocol Requirements\
    \ and Recommendations  . . . . . .  9\n   3.4. Interaction with DNS  . . . . .\
    \ . . . . . . . . . . . . . . 10\n   3.5. Locating RSIP Gateways  . . . . . .\
    \ . . . . . . . . . . . . 11\n   3.6. Implementation Considerations . . . . .\
    \ . . . . . . . . . . 11\n   4. Deployment  . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . 12\n   4.1. Possible Deployment Scenarios . . . . . . . . .\
    \ . . . . . . 12\n   4.2. Cascaded RSIP and NAT . . . . . . . . . . . . . . .\
    \ . . . . 14\n   5. Interaction with Layer-Three Protocols  . . . . . . . . .\
    \ . . 17\n   5.1. IPSEC . . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ 17\n   5.2. Mobile IP . . . . . . . . . . . . . . . . . . . . . . . . . 18\n\
    \   5.3. Differentiated and Integrated Services  . . . . . . . . . . 18\n   5.4.\
    \ IP Multicast  . . . . . . . . . . . . . . . . . . . . . . . 21\n   6. RSIP Complications\
    \  . . . . . . . . . . . . . . . . . . . . . 23\n   6.1. Unnecessary TCP TIME_WAIT\
    \ . . . . . . . . . . . . . . . . . 23\n   6.2. ICMP State in RSIP Gateway  .\
    \ . . . . . . . . . . . . . . . 23\n   6.3. Fragmentation and IP Identification\
    \ Field Collision . . . . 24\n   6.4. Application Servers on RSAP-IP Hosts  .\
    \ . . . . . . . . . . 24\n   6.5. Determining Locality of Destinations from an\
    \ RSIP Host. . . 25\n   6.6. Implementing RSIP Host Deallocation . . . . . . .\
    \ . . . . . 26\n   6.7. Multi-Party Applications  . . . . . . . . . . . . . .\
    \ . . . 26\n   6.8. Scalability . . . . . . . . . . . . . . . . . . . . . . .\
    \ . 27\n   7. Security Considerations . . . . . . . . . . . . . . . . . . . 27\n\
    \   8. Acknowledgements  . . . . . . . . . . . . . . . . . . . . . . 27\n   9.\
    \ References  . . . . . . . . . . . . . . . . . . . . . . . . . 28\n   10. Authors'\
    \ Addresses . . . . . . . . . . . . . . . . . . . . . 29\n   11. Full Copyright\
    \ Statement . . . . . . . . . . . . . . . . . . 30\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Network Address Translation (NAT) has become a popular mechanism\
    \ of\n   enabling the separation of addressing spaces. A NAT router must\n   examine\
    \ and change the network layer, and possibly the transport\n   layer, header of\
    \ each packet crossing the addressing domains that the\n   NAT router is connecting.\
    \  This causes the mechanism of NAT to\n   violate the end-to-end nature of the\
    \ Internet connectivity, and\n   disrupts protocols requiring or enforcing end-to-end\
    \ integrity of\n   packets.\n   While NAT does not require a host to be aware\
    \ of its presence, it\n   requires the presence of an application layer gateway\
    \ (ALG) within\n   the NAT router for each application that embeds addressing\n\
    \   information within the packet payload.  For example, most NATs ship\n   with\
    \ an ALG for FTP, which transmits IP addresses and port numbers on\n   its control\
    \ channel.  RSIP (Realm Specific IP) provides an\n   alternative to remedy these\
    \ limitations.\n   RSIP is based on the concept of granting a host from one addressing\n\
    \   realm a presence in another addressing realm by allowing it to use\n   resources\
    \ (e.g., addresses and other routing parameters) from the\n   second addressing\
    \ realm.  An RSIP gateway replaces the NAT router,\n   and RSIP-aware hosts on\
    \ the private network are referred to as RSIP\n   hosts.  RSIP requires ability\
    \ of the RSIP gateway to grant such\n   resources to RSIP hosts.  ALGs are not\
    \ required on the RSIP gateway\n   for communications between an RSIP host and\
    \ a host in a different\n   addressing realm.\n   RSIP can be viewed as a \"fix\"\
    , of sorts, to NAT.  It may ameliorate\n   some IP address shortage problems in\
    \ some scenarios without some of\n   the limitations of NAT.  However, it is not\
    \ a long-term solution to\n   the IP address shortage problem.  RSIP allows a\
    \ degree of address\n   realm transparency to be achieve between two differently-scoped,\
    \ or\n   completely different addressing realms.  This makes it a useful\n   architecture\
    \ for enabling end-to-end packet transparency between\n   addressing realms. \
    \ RSIP is expected to be deployed on privately\n   addresses IPv4 networks and\
    \ used to grant access to publically\n   addressed IPv4 networks.  However, in\
    \ place of the private IPv4\n   network, there may be an IPv6 network, or a non-IP\
    \ network.  Thus,\n   RSIP allows IP connectivity to a host with an IP stack and\
    \ IP\n   applications but no native IP access.  As such, RSIP can be used, in\n\
    \   conjunction with DNS and tunneling, to bridge IPv4 and IPv6 networks,\n  \
    \ such that dual-stack hosts can communicate with local or remote IPv4\n   or\
    \ IPv6 hosts.\n   It is important to note that, as it is defined here, RSIP does\
    \ NOT\n   require modification of applications.  All RSIP-related modifications\n\
    \   to an RSIP host can occur at layers 3 and 4.  However, while RSIP\n   does\
    \ allow end-to-end packet transparency, it may not be transparent\n   to all applications.\
    \  More details can be found in the section \"RSIP\n   complications\", below.\n"
- title: 1.1.  Document Scope
  contents:
  - "1.1.  Document Scope\n   This document provides a framework for RSIP by focusing\
    \ on four\n   particular areas:\n      -  Requirements of an RSIP host and RSIP\
    \ gateway.\n      -  Likely initial deployment scenarios.\n      -  Interaction\
    \ with other layer-three protocols.\n      -  Complications that RSIP may introduce.\n\
    \   The interaction sections will be at an overview level.  Detailed\n   modifications\
    \ that would need to be made to RSIP and/or the\n   interacting protocol are left\
    \ for separate documents to discuss in\n   detail.\n   Beyond the scope of this\
    \ document is discussion of RSIP in large,\n   multiple-gateway networks, or in\
    \ environments where RSIP state would\n   need to be distributed and maintained\
    \ across multiple redundant\n   entities.\n   Discussion of RSIP solutions that\
    \ do not use some form of tunnel\n   between the RSIP host and RSIP gateway are\
    \ also not considered in\n   this document.\n   This document focuses on scenarios\
    \ that allow privately-addressed\n   IPv4 hosts or IPv6 hosts access to publically-addressed\
    \ IPv4\n   networks.\n"
- title: 1.2.  Terminology
  contents:
  - "1.2.  Terminology\n   Private Realm\n      A routing realm that uses private\
    \ IP addresses from the ranges\n      (10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16)\
    \ specified in\n      [RFC1918], or addresses that are non-routable from the Internet.\n\
    \   Public Realm\n      A routing realm with globally unique network addresses.\n\
    \   RSIP Host\n      A host within an addressing realm that uses RSIP to acquire\n\
    \      addressing parameters from another addressing realm via an RSIP\n     \
    \ gateway.\n   RSIP Gateway\n      A router or gateway situated on the boundary\
    \ between two\n      addressing realms that is assigned one or more IP addresses\
    \ in at\n      least one of the realms.  An RSIP gateway is responsible for\n\
    \      parameter management and assignment from one realm to RSIP hosts\n    \
    \  in the other realm.  An RSIP gateway may act as a normal NAT\n      router\
    \ for hosts within the a realm that are not RSIP enabled.\n   RSIP Client\n  \
    \    An application program that performs the client portion of the\n      RSIP\
    \ client/server protocol.  An RSIP client application MUST\n      exist on all\
    \ RSIP hosts, and MAY exist on RSIP gateways.\n   RSIP Server\n      An application\
    \ program that performs the server portion of the\n      RSIP client/server protocol.\
    \  An RSIP server application MUST\n      exist on all RSIP gateways.\n   RSA-IP:\
    \ Realm Specific Address IP\n      An RSIP method in which each RSIP host is allocated\
    \ a unique IP\n      address from the public realm.\n   RSAP-IP: Realm Specific\
    \ Address and Port IP\n      An RSIP method in which each RSIP host is allocated\
    \ an IP address\n      (possibly shared with other RSIP hosts) and some number\
    \ of per-\n      address unique ports from the public realm.\n   Demultiplexing\
    \ Fields\n      Any set of packet header or payload fields that an RSIP gateway\n\
    \      uses to route an incoming packet to an RSIP host.\n   All other terminology\
    \ found in this document is consistent with that\n   of [RFC2663].\n"
- title: 1.3.  Specification of Requirements
  contents:
  - "1.3.  Specification of Requirements\n   The keywords \"MUST\", \"MUST NOT\",\
    \ \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   documents are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 2.  Architecture
  contents:
  - "2.  Architecture\n   In a typical scenario where RSIP is deployed, there are\
    \ some number\n   of hosts within one addressing realm connected to another addressing\n\
    \   realm by an RSIP gateway.  This model is diagrammatically represented\n  \
    \ as follows:\n         RSIP Host             RSIP Gateway                   \
    \ Host\n            Xa                    Na   Nb                       Yb\n \
    \        [X]------( Addr sp. A )----[N]-----( Addr sp. B )-------[Y]\n       \
    \           (  Network   )            (  Network   )\n   Hosts X and Y belong\
    \ to different addressing realms A and B,\n   respectively, and N is an RSIP gateway\
    \ (which may also perform NAT\n   functions).  N has two interfaces: Na on address\
    \ space A, and Nb on\n   address space B.  N may have a pool of addresses in address\
    \ space B\n   which it can assign to or lend to X and other hosts in address space\n\
    \   A.  These addresses are not shown above, but they can be denoted as\n   Nb1,\
    \ Nb2, Nb3 and so on.\n   As is often the case, the hosts within address space\
    \ A are likely to\n   use private addresses while the RSIP gateway is multi-homed\
    \ with one\n   or more private addresses from address space A in addition to its\n\
    \   public addresses from address space B.  Thus, we typically refer to\n   the\
    \ realm in which the RSIP host resides as \"private\" and the realm\n   from which\
    \ the RSIP host borrows addressing parameters as the\n   \"public\" realm.  However,\
    \ these realms may both be public or private\n   - our notation is for convenience.\
    \  In fact, address space A may be\n   an IPv6 realm or a non-IP address space.\n\
    \   Host X, wishing to establish an end-to-end connection to a network\n   entity\
    \ Y situated within address space B, first negotiates and\n   obtains assignment\
    \ of the resources (e.g., addresses and other\n   routing parameters of address\
    \ space B) from the RSIP gateway.  Upon\n   assignment of these parameters, the\
    \ RSIP gateway creates a mapping,\n   referred as a \"bind\", of X's addressing\
    \ information and the assigned\n   resources.  This binding enables the RSIP gateway\
    \ to correctly de-\n   multiplex and forward inbound traffic generated by Y for\
    \ X.  If\n   permitted by the RSIP gateway, X may create multiple such bindings\
    \ on\n   the same RSIP gateway, or across several RSIP gateways.  A lease time\n\
    \   SHOULD be associated with each bind.\n   Using the public parameters assigned\
    \ by the RSIP gateway, RSIP hosts\n   tunnel data packets across address space\
    \ A to the RSIP gateway.  The\n   RSIP gateway acts as the end point of such tunnels,\
    \ stripping off the\n   outer headers and routing the inner packets onto the public\
    \ realm.\n   As mentioned above, an RSIP gateway maintains a mapping of the\n\
    \   assigned public parameters as demultiplexing fields for uniquely\n   mapping\
    \ them to RSIP host private addresses.  When a packet from the\n   public realm\
    \ arrives at the RSIP gateway and it matches a given set\n   of demultiplexing\
    \ fields, then the RSIP gateway will tunnel it to the\n   appropriate RSIP host.\
    \  The tunnel headers of outbound packets from X\n   to Y, given that X has been\
    \ assigned Nb, are as follows:\n            +---------+---------+---------+\n\
    \            | X -> Na | Nb -> Y | payload |\n            +---------+---------+---------+\n\
    \   There are two basic flavors of RSIP: RSA-IP and RSAP-IP.  RSIP hosts\n   and\
    \ gateways MAY support RSA-IP, RSAP-IP, or both.\n   When using RSA-IP, an RSIP\
    \ gateway maintains a pool of IP addresses\n   to be leased by RSIP hosts.  Upon\
    \ host request, the RSIP gateway\n   allocates an IP address to the host.  Once\
    \ an address is allocated to\n   a particular host, only that host may use the\
    \ address until the\n   address is returned to the pool.  Hosts MAY NOT use addresses\
    \ that\n   have not been specifically assigned to them.  The hosts may use any\n\
    \   TCP/UDP port in combination with their assigned address.  Hosts may\n   also\
    \ run gateway applications at any port and these applications will\n   be available\
    \ to the public network without assistance from the RSIP\n   gateway.  A host\
    \ MAY lease more than one address from the same or\n   different RSIP gateways.\
    \  The demultiplexing fields of an RSA-IP\n   session MUST include the IP address\
    \ leased to the host.\n   When using RSAP-IP, an RSIP gateway maintains a pool\
    \ of IP addresses\n   as well as pools of port numbers per address.  RSIP hosts\
    \ lease an IP\n   address and one or more ports to use with it.  Once an address\
    \ / port\n   tuple has been allocated to a particular host, only that host may\
    \ use\n   the tuple until it is returned to the pool(s).  Hosts MAY NOT use\n\
    \   address / port combinations that have not been specifically assigned\n   to\
    \ them.  Hosts may run gateway applications bound to an allocated\n   tuple, but\
    \ their applications will not be available to the public\n   network unless the\
    \ RSIP gateway has agreed to route all traffic\n   destined to the tuple to the\
    \ host.  A host MAY lease more than one\n   tuple from the same or different RSIP\
    \ gateways.  The demultiplexing\n   fields of an RSAP-IP session MUST include\
    \ the tuple(s) leased to the\n   host.\n"
- title: 3.  Requirements
  contents:
  - '3.  Requirements

    '
- title: 3.1.  Host and Gateway Requirements
  contents:
  - "3.1.  Host and Gateway Requirements\n   An RSIP host MUST be able to maintain\
    \ one or more virtual interfaces\n   for the IP address(es) that it leases from\
    \ an RSIP gateway.  The host\n   MUST also support tunneling and be able to serve\
    \ as an end-point for\n   one or more tunnels to RSIP gateways.  An RSIP host\
    \ MUST NOT respond\n   to ARPs for a public realm address that it leases.\n  \
    \ An RSIP host supporting RSAP-IP MUST be able to maintain a set of one\n   or\
    \ more ports assigned by an RSIP gateway from which choose ephemeral\n   source\
    \ ports.  If the host's pool does not have any free ports and\n   the host needs\
    \ to open a new communication session with a public\n   host, it MUST be able\
    \ to dynamically request one or more additional\n   ports via its RSIP mechanism.\n\
    \   An RSIP gateway is a multi-homed host that routes packets between two\n  \
    \ or more realms.  Often, an RSIP gateway is a boundary router between\n   two\
    \ or more administrative domains.  It MUST also support tunneling\n   and be able\
    \ to serve as an end-point for tunnels to RSIP hosts.  The\n   RSIP gateway MAY\
    \ be a policy enforcement point, which in turn may\n   require it to perform firewall\
    \ and packet filtering duties in\n   addition to RSIP.  The RSIP gateway MUST\
    \ reassemble all incoming\n   packet fragments from the public network in order\
    \ to be able to route\n   and tunnel them to the proper host.  As is necessary\
    \ for fragment\n   reassembly, an RSIP gateway MUST timeout fragments that are\
    \ never\n   fully reassembled.\n   An RSIP gateway MAY include NAT functionality\
    \ so that hosts on the\n   private network that are not RSIP-enabled can still\
    \ communicate with\n   the public network.  An RSIP gateway MUST manage all resources\
    \ that\n   are assigned to RSIP hosts.  This management MAY be done according\
    \ to\n   local policy.\n"
- title: 3.2.  Processing of Demultiplexing Fields
  contents:
  - "3.2.  Processing of Demultiplexing Fields\n   Each active RSIP host must have\
    \ a unique set of demultiplexing fields\n   assigned to it so that an RSIP gateway\
    \ can route incoming packets\n   appropriately.  Depending on the type of mapping\
    \ used by the RSIP\n   gateway, demultiplexing fields have been defined to be\
    \ one or more of\n   the following:\n      -  destination IP address\n      -\
    \  IP protocol\n      -  destination TCP or UDP port\n      -  IPSEC SPI present\
    \ in ESP or AH header (see [RFC3104])\n      -  others\n   Note that these fields\
    \ may be augmented by source IP address and\n   source TCP or UDP port.\n   Demultiplexing\
    \ of incoming traffic can be based on a decision tree.\n   The process begins\
    \ with the examination of the IP header of the\n   incoming packet, and proceeds\
    \ to subsequent headers and then the\n   payload.\n      -  In the case where\
    \ a public IP address is assigned for each\n         host, a unique public IP\
    \ address is mapped to each RSIP host.\n      -  If the same IP address is used\
    \ for more than one RSIP host,\n         then subsequent headers must have at\
    \ least one field that will\n         be assigned a unique value per host so that\
    \ it is usable as a\n         demultiplexing field.  The IP protocol field SHOULD\
    \ be used to\n         determine what in the subsequent headers these demultiplexing\n\
    \         fields ought to be.\n      -  If the subsequent header is TCP or UDP,\
    \ then destination port\n         number can be used.  However, if the TCP/UDP\
    \ port number is the\n         same for more than one RSIP host, the payload section\
    \ of the\n         packet must contain a demultiplexing field that is guaranteed\n\
    \         to be different for each RSIP host.  Typically this requires\n     \
    \    negotiation of said fields between the RSIP host and gateway so\n       \
    \  that the RSIP gateway can guarantee that the fields are unique\n         per-host\n\
    \      -  If the subsequent header is anything other than TCP or UDP,\n      \
    \   there must exist other fields within the IP payload usable as\n         demultiplexing\
    \ fields.  In other words, these fields must be\n         able to be set such\
    \ that they are guaranteed to be unique per-\n         host.  Typically this requires\
    \ negotiation of said fields\n         between the RSIP host and gateway so that\
    \ the RSIP gateway can\n         guarantee that the fields are unique per-host.\n\
    \   It is desirable for all demultiplexing fields to occur in well-known\n   fixed\
    \ locations so that an RSIP gateway can mask out and examine the\n   appropriate\
    \ fields on incoming packets.  Demultiplexing fields that\n   are encrypted MUST\
    \ NOT be used for routing.\n"
- title: 3.3.  RSIP Protocol Requirements and Recommendations
  contents:
  - "3.3.  RSIP Protocol Requirements and Recommendations\n   RSIP gateways and hosts\
    \ MUST be able to negotiate IP addresses when\n   using RSA-IP, IP address / port\
    \ tuples when using RSAP-IP, and\n   possibly other demultiplexing fields for\
    \ use in other modes.\n   In this section we discuss the requirements and implementation\
    \ issues\n   of an RSIP negotiation protocol.\n   For each required demultiplexing\
    \ field, an RSIP protocol MUST, at the\n   very least, allow for:\n      -  RSIP\
    \ hosts to request assignments of demultiplexing fields\n      -  RSIP gateways\
    \ to assign demultiplexing fields with an\n         associated lease time\n  \
    \    -  RSIP gateways to reclaim assigned demultiplexing fields\n   Additionally,\
    \ it is desirable, though not mandatory, for an RSIP\n   protocol to negotiate\
    \ an RSIP method (RSA-IP or RSAP-IP) and the type\n   of tunnel to be used across\
    \ the private network.  The protocol SHOULD\n   be extensible and facilitate vendor-specific\
    \ extensions.\n   If an RSIP negotiation protocol is implemented at the application\n\
    \   layer, a choice of transport protocol MUST be made.  RSIP hosts and\n   gateways\
    \ may communicate via TCP or UDP.  TCP support is required in\n   all RSIP gateways,\
    \ while UDP support is optional.  In RSIP hosts,\n   TCP, UDP, or both may be\
    \ supported.  However, once an RSIP host and\n   gateway have begun communicating\
    \ using either TCP or UDP, they MAY\n   NOT switch to the other transport protocol.\
    \  For RSIP implementations\n   and deployments considered in this document, TCP\
    \ is the recommended\n   transport protocol, because TCP is known to be robust\
    \ across a wide\n   range of physical media types and traffic loads.\n   It is\
    \ recommended that all communication between an RSIP host and\n   gateway be authenticated.\
    \  Authentication, in the form of a message\n   hash appended to the end of each\
    \ RSIP protocol packet, can serve to\n   authenticate the RSIP host and gateway\
    \ to one another, provide\n   message integrity, and (with an anti-replay counter)\
    \ avoid replay\n   attacks.  In order for authentication to be supported, each\
    \ RSIP host\n   and the RSIP gateway MUST either share a secret key (distributed,\
    \ for\n   example, by Kerberos) or have a private/public key pair.  In the\n \
    \  latter case, an entity's public key can be computed over each message\n   and\
    \ a hash function applied to the result to form the message hash.\n"
- title: 3.4.  Interaction with DNS
  contents:
  - "3.4.  Interaction with DNS\n   An RSIP-enabled network has three uses for DNS:\
    \ (1) public DNS\n   services to map its static public IP addresses (i.e., the\
    \ public\n   address of the RSIP gateway) and for lookups of public hosts, (2)\n\
    \   private DNS services for use only on the private network, and (3)\n   dynamic\
    \ DNS services for RSIP hosts.\n   With respect to (1), public DNS information\
    \ MUST be propagated onto\n   the private network.  With respect to (2), private\
    \ DNS information\n   MUST NOT be propagated into the public network.\n   With\
    \ respect to (3), an RSIP-enabled network MAY allow for RSIP hosts\n   with FQDNs\
    \ to have their A and PTR records updated in the public DNS.\n   These updates\
    \ are based on address assignment facilitated by RSIP,\n   and should be performed\
    \ in a fashion similar to DHCP updates to\n   dynamic DNS [DHCP-DNS].  In particular,\
    \ RSIP hosts should be allowed\n   to update their A records but not PTR records,\
    \ while RSIP gateways\n   can update both.  In order for the RSIP gateway to update\
    \ DNS records\n   on behalf on an RSIP host, the host must provide the gateway\
    \ with its\n   FQDN.\n   Note that when using RSA-IP, the interaction with DNS\
    \ is completely\n   analogous to that of DHCP because the RSIP host \"owns\" an\
    \ IP address\n   for a period of time.  In the case of RSAP-IP, the claim that\
    \ an RSIP\n   host has to an address is only with respect to the port(s) that\
    \ it\n   has leased along with an address.  Thus, two or more RSIP hosts'\n  \
    \ FQDNs may map to the same IP address.  However, a public host may\n   expect\
    \ that all of the applications running at a particular address\n   are owned by\
    \ the same logical host, which would not be the case.  It\n   is recommended that\
    \ RSAP-IP and dynamic DNS be integrated with some\n   caution, if at all.\n"
- title: 3.5.  Locating RSIP Gateways
  contents:
  - "3.5.  Locating RSIP Gateways\n   When an RSIP host initializes, it requires (among\
    \ other things) two\n   critical pieces of information.  One is a local (private)\
    \ IP address\n   to use as its own, and the other is the private IP address of\
    \ an RSIP\n   gateway.  This information can be statically configured or\n   dynamically\
    \ assigned.\n   In the dynamic case, the host's private address is typically supplied\n\
    \   by DHCP.  A DHCP option could provide the IP address of an RSIP\n   gateway\
    \ in DHCPOFFER messages.  Thus, the host's startup procedure\n   would be as follows:\
    \ (1) perform DHCP, (2) if an RSIP gateway option\n   is present in the DHCPOFFER,\
    \ record the IP address therein as the\n   RSIP gateway.\n   Alternatively, the\
    \ RSIP gateway can be discovered via SLP (Service\n   Location Protocol) as specified\
    \ in [SLP-RSIP].  The SLP template\n   defined allows for RSIP service provisioning\
    \ and load balancing.\n"
- title: 3.6.  Implementation Considerations
  contents:
  - "3.6.  Implementation Considerations\n   RSIP can be accomplished by any one of\
    \ a wide range of implementation\n   schemes.  For example, it can be built into\
    \ an existing configuration\n   protocol such as DHCP or SOCKS, or it can exist\
    \ as a separate\n   protocol.  This section discusses implementation issues of\
    \ RSIP in\n   general, regardless of how the RSIP mechanism is implemented.\n\
    \   Note that on a host, RSIP is associated with a TCP/IP stack\n   implementation.\
    \  Modifications to IP tunneling and routing code, as\n   well as driver interfaces\
    \ may need to be made to support RSA-IP.\n   Support for RSAP-IP requires modifications\
    \ to ephemeral port\n   selection code as well.  If a host has multiple TCP/IP\
    \ stacks or\n   TCP/IP stacks and other communication stacks, RSIP will only operate\n\
    \   on the packets / sessions that are associated with the TCP/IP\n   stack(s)\
    \ that use RSIP.  RSIP is not application specific, and if it\n   is implemented\
    \ in a stack, it will operate beneath all applications\n   that use the stack.\n"
- title: 4.  Deployment
  contents:
  - "4.  Deployment\n   When RSIP is deployed in certain scenarios, the network\n\
    \   characteristics of these scenarios will determine the scope of the\n   RSIP\
    \ solution, and therefore impact the requirements of RSIP.  In\n   this section,\
    \ we examine deployment scenarios, and the impact that\n   RSIP may have on existing\
    \ networks.\n"
- title: 4.1.  Possible Deployment Scenarios
  contents:
  - "4.1.  Possible Deployment Scenarios\n   In this section we discuss a number of\
    \ potential RSIP deployment\n   scenarios.  The selection below are not comprehensive\
    \ and other\n   scenarios may emerge.\n"
- title: 4.1.1.  Small / Medium Enterprise
  contents:
  - "4.1.1.  Small / Medium Enterprise\n   Up to several hundred hosts will reside\
    \ behind an RSIP-enabled\n   router.  It is likely that there will be only one\
    \ gateway to the\n   public network and therefore only one RSIP gateway.  This\
    \ RSIP\n   gateway may control only one, or perhaps several, public IP\n   addresses.\
    \  The RSIP gateway may also perform firewall functions, as\n   well as routing\
    \ inbound traffic to particular destination ports on to\n   a small number of\
    \ dedicated gateways on the private network.\n"
- title: 4.1.2.  Residential Networks
  contents:
  - "4.1.2.  Residential Networks\n   This category includes both networking within\
    \ just one residence, as\n   well as within multiple-dwelling units.  At most\
    \ several hundred\n   hosts will share the gateway's resources.  In particular,\
    \ many of\n   these devices may be thin hosts or so-called \"network appliances\"\
    \ and\n   therefore not require access to the public Internet frequently.  The\n\
    \   RSIP gateway is likely to be implemented as part of a residential\n   firewall,\
    \ and it may be called upon to route traffic to particular\n   destination ports\
    \ on to a small number of dedicated gateways on the\n   private network.  It is\
    \ likely that only one gateway to the public\n   network will be present and that\
    \ this gateway's RSIP gateway will\n   control only one IP address.  Support for\
    \ secure end-to-end VPN\n   access to corporate intranets will be important.\n"
- title: 4.1.3.  Hospitality Networks
  contents:
  - "4.1.3.  Hospitality Networks\n   A hospitality network is a general type of \"\
    hosting\" network that a\n   traveler will use for a short period of time (a few\
    \ minutes or a few\n   hours).  Examples scenarios include hotels, conference\
    \ centers and\n   airports and train stations.  At most several hundred hosts\
    \ will\n   share the gateway's resources.  The RSIP gateway may be implemented\n\
    \   as part of a firewall, and it will probably not be used to route\n   traffic\
    \ to particular destination ports on to dedicated gateways on\n   the private\
    \ network.  It is likely that only one gateway to the\n   public network will\
    \ be present and that this gateway's RSIP gateway\n   will control only one IP\
    \ address.  Support for secure end-to-end VPN\n   access to corporate intranets\
    \ will be important.\n"
- title: 4.1.4.  Dialup Remote Access
  contents:
  - "4.1.4.  Dialup Remote Access\n   RSIP gateways may be placed in dialup remote\
    \ access concentrators in\n   order to multiplex IP addresses across dialup users.\
    \  At most several\n   hundred hosts will share the gateway's resources.  The\
    \ RSIP gateway\n   may or may not be implemented as part of a firewall, and it\
    \ will\n   probably not be used to route traffic to particular destination ports\n\
    \   on to dedicated gateways on the private network.  Only one gateway to\n  \
    \ the public network will be present (the remote access concentrator\n   itself)\
    \ and that this gateway's RSIP gateway will control a small\n   number of IP addresses.\
    \  Support for secure end-to-end VPN access to\n   corporate intranets will be\
    \ important.\n"
- title: 4.1.5.  Wireless Remote Access Networks
  contents:
  - "4.1.5.  Wireless Remote Access Networks\n   Wireless remote access will become\
    \ very prevalent as more PDA and IP\n   / cellular devices are deployed.  In these\
    \ scenarios, hosts may be\n   changing physical location very rapidly - therefore\
    \ Mobile IP will\n   play a role.  Hosts typically will register with an RSIP\
    \ gateway for\n   a short period of time.  At most several hundred hosts will\
    \ share the\n   gateway's resources.  The RSIP gateway may be implemented as part\
    \ of\n   a firewall, and it will probably not be used to route traffic to\n  \
    \ particular destination ports on to dedicated gateways on the private\n   network.\
    \  It is likely that only one gateway to the public network\n   will be present\
    \ and that this gateway's RSIP gateway will control a\n   small number of IP addresses.\
    \  Support for secure end-to-end VPN\n   access to corporate intranets will be\
    \ important.\n"
- title: 4.2.  Cascaded RSIP and NAT
  contents:
  - "4.2.  Cascaded RSIP and NAT\n   It is possible for RSIP to allow for cascading\
    \ of RSIP gateways as\n   well as cascading of RSIP gateways with NAT boxes. \
    \ For example,\n   consider an ISP that uses RSIP for address sharing amongst\
    \ its\n   customers.  It might assign resources (e.g., IP addresses and ports)\n\
    \   to a particular customer.  This customer may use RSIP to further\n   subdivide\
    \ the port ranges and address(es) amongst individual end\n   hosts.  No matter\
    \ how many levels of RSIP assignment exists, RSIP\n   MUST only assign public\
    \ IP addresses.\n   Note that some of the architectures discussed below may not\
    \ be useful\n   or desirable.  The goal of this section is to explore the\n  \
    \ interactions between NAT and RSIP as RSIP is incrementally deployed\n   on systems\
    \ that already support NAT.\n"
- title: 4.2.1.  RSIP Behind RSIP
  contents:
  - "4.2.1.  RSIP Behind RSIP\n   A reference architecture is depicted below.\n  \
    \                             +-----------+\n                               |\
    \           |\n                               |   RSIP    |\n                \
    \               |  gateway  +---- 10.0.0.0/8\n                               |\
    \     B     |\n                               |           |\n                \
    \               +-----+-----+\n                                     |\n      \
    \                               | 10.0.1.0/24\n                      +-----------+\
    \  | (149.112.240.0/25)\n                      |           |  |\n      149.112.240.0/24|\
    \   RSIP    +--+\n      ----------------+  gateway  |\n                      |\
    \     A     +--+\n                      |           |  |\n                   \
    \   +-----------+  | 10.0.2.0/24\n                                     | (149.112.240.128/25)\n\
    \                                     |\n                               +-----+-----+\n\
    \                               |           |\n                              \
    \ |   RSIP    |\n                               |  gateway  +---- 10.0.0.0/8\n\
    \                               |     C     |\n                              \
    \ |           |\n                               +-----------+\n   RSIP gateway\
    \ A is in charge of the IP addresses of subnet\n   149.112.240.0/24.  It distributes\
    \ these addresses to RSIP hosts and\n   RSIP gateways.  In the given configuration,\
    \ it distributes addresses\n   149.112.240.0 - 149.112.240.127 to RSIP gateway\
    \ B, and addresses\n   149.112.240.128 - 149.112.240.254 to RSIP gateway C.  Note\
    \ that the\n   subnet broadcast address, 149.112.240.255, must remain unclaimed,\
    \ so\n   that broadcast packets can be distributed to arbitrary hosts behind\n\
    \   RSIP gateway A.  Also, the subnets between RSIP gateway A and RSIP\n   gateways\
    \ B and C will use private addresses.\n   Due to the tree-like fashion in which\
    \ addresses will be cascaded, we\n   will refer to RSIP gateways A as the 'parent'\
    \ of RSIP gateways B and\n   C, and RSIP gateways B and C as 'children' of RSIP\
    \ gateways A.  An\n   arbitrary number of levels of children may exist under a\
    \ parent RSIP\n   gateway.\n   A parent RSIP gateway will not necessarily be aware\
    \ that the\n   address(es) and port blocks that it distributes to a child RSIP\n\
    \   gateway will be further distributed.  Thus, the RSIP hosts MUST\n   tunnel\
    \ their outgoing packets to the nearest RSIP gateway.  This\n   gateway will then\
    \ verify that the sending host has used the proper\n   address and port block,\
    \ and then tunnel the packet on to its parent\n   RSIP gateway.\n   For example,\
    \ in the context of the diagram above, host 10.0.0.1,\n   behind RSIP gateway\
    \ C will use its assigned external IP address (say,\n   149.112.240.130) and tunnel\
    \ its packets over the 10.0.0.0/8 subnet to\n   RSIP gateway C.  RSIP gateway\
    \ C strips off the outer IP header.\n   After verifying that the source public\
    \ IP address and source port\n   number is valid, RSIP gateway C will tunnel the\
    \ packets over the\n   10.0.2.0/8 subnet to RSIP gateway A.  RSIP gateway A strips\
    \ off the\n   outer IP header.  After verifying that the source public IP address\n\
    \   and source port number is valid, RSIP gateway A transmits the packet\n   on\
    \ the public network.\n   While it may be more efficient in terms of computation\
    \ to have a RSIP\n   host tunnel directly to the overall parent of an RSIP gateway\
    \ tree,\n   this would introduce significant state and administrative\n   difficulties.\n\
    \   A RSIP gateway that is a child MUST take into consideration the\n   parameter\
    \ assignment constraints that it inherits from its parent\n   when it assigns\
    \ parameters to its children.  For example, if a child\n   RSIP gateway is given\
    \ a lease time of 3600 seconds on an IP address,\n   it MUST compare the current\
    \ time to the lease time and the time that\n   the lease was assigned to compute\
    \ the maximum allowable lease time on\n   the address if it is to assign the address\
    \ to a RSIP host or child\n   RSIP gateway.\n"
- title: 4.2.2.  NAT Behind RSIP
  contents:
  - "4.2.2.  NAT Behind RSIP\n               +--------+      +--------+\n        \
    \       | NAT w/ |      |  RSIP  |\n   hosts ------+ RSIP   +------+ gate-  +-----\
    \ public network\n               | host   |      |  way   |\n               +--------+\
    \      +--------+\n   In this architecture, an RSIP gateway is between a NAT box\
    \ and the\n   public network.  The NAT is also equipped with an RSIP host.  The\
    \ NAT\n   dynamically requests resources from the RSIP gateway as the hosts\n\
    \   establish sessions to the public network.  The hosts are not aware of\n  \
    \ the RSIP manipulation.  This configuration does not enable the hosts\n   to\
    \ have end-to-end transparency and thus the NAT still requires ALGs\n   and the\
    \ architecture cannot support IPSEC.\n"
- title: 4.2.3.  RSIP Behind NAT
  contents:
  - "4.2.3.  RSIP Behind NAT\n               +--------+      +--------+\n   RSIP \
    \       |  RSIP  |      |        |\n   hosts ------+ gate-  +------+   NAT  +-----\
    \ public network\n               |  way   |      |        |\n               +--------+\
    \      +--------+\n   In this architecture, the RSIP hosts and gateway reside\
    \ behind a NAT.\n   This configuration does not enable the hosts to have end-to-end\n\
    \   transparency and thus the NAT still requires ALGs and the\n   architecture\
    \ cannot support IPSEC.  The hosts may have transparency\n   if there is another\
    \ gateway to the public network besides the NAT\n   box, and this gateway supports\
    \ cascaded RSIP behind RSIP.\n"
- title: 4.2.4.  RSIP Through NAT
  contents:
  - "4.2.4.  RSIP Through NAT\n               +--------+      +--------+\n   RSIP\
    \        |        |      |  RSIP  |\n   hosts ------+   NAT  +------+ gate-  +-----\
    \ public network\n               |        |      |  way   |\n               +--------+\
    \      +--------+\n   In this architecture, the RSIP hosts are separated from\
    \ the RSIP\n   gateway by a NAT.  RSIP signaling may be able to pass through the\
    \ NAT\n   if an RSIP ALG is installed.  The RSIP data flow, however, will have\n\
    \   its outer IP address translated by the NAT.  The NAT must not\n   translate\
    \ the port numbers in order for RSIP to work properly.\n   Therefore, only traditional\
    \ NAT will make sense in this context.\n"
- title: 5.  Interaction with Layer-Three Protocols
  contents:
  - "5.  Interaction with Layer-Three Protocols\n   Since RSIP affects layer-three\
    \ objects, it has an impact on other\n   layer three protocols.  In this section,\
    \ we outline the impact of\n   RSIP on these protocols, and in each case, how\
    \ RSIP, the protocol, or\n   both, can be extended to support interaction.\n \
    \  Each of these sections is an overview and not a complete technical\n   specification.\
    \  If a full technical specification of how RSIP\n   interacts with a layer-three\
    \ protocol is necessary, a separate\n   document will contain it.\n"
- title: 5.1.  IPSEC
  contents:
  - "5.1.  IPSEC\n   RSIP is a mechanism for allowing end-to-end IPSEC with sharing\
    \ of IP\n   addresses.  Full specification of RSIP/IPSEC details are in [RSIP-\n\
    \   IPSEC].  This section provides a brief summary.  Since IPSEC may\n   encrypt\
    \ TCP/UDP port numbers, these objects cannot be used as\n   demultiplexing fields.\
    \  However, IPSEC inserts an AH or ESP header\n   following the IP header in all\
    \ IPSEC-protected packets (packets that\n   are transmitted on an IPSEC Security\
    \ Association (SA)).  These\n   headers contain a 32-bit Security Parameter Index\
    \ (SPI) field, the\n   value of which is determined by the receiving side.  The\
    \ SPI field is\n   always in the clear.  Thus, during SA negotiation, an RSIP\
    \ host can\n   instruct their public peer to use a particular SPI value.  This\
    \ SPI\n   value, along with the assigned IP address, can be used by an RSIP\n\
    \   gateway to uniquely identify and route packets to an RSIP host.  In\n   order\
    \ to guarantee that RSIP hosts use SPIs that are unique per\n   address, it is\
    \ necessary for the RSIP gateway to allocate unique SPIs\n   to hosts along with\
    \ their address/port tuple.\n   IPSEC SA negotiation takes place using the Internet\
    \ Key Exchange\n   (IKE) protocol.  IKE is designated to use port 500 on at least\
    \ the\n   destination side.  Some host IKE implementations will use source port\n\
    \   500 as well, but this behavior is not mandatory.  If two or more RSIP\n  \
    \ hosts are running IKE at source port 500, they MUST use different\n   initiator\
    \ cookies (the first eight bytes of the IKE payload) per\n   assigned IP address.\
    \  The RSIP gateway will be able to route incoming\n   IKE packets to the proper\
    \ host based on initiator cookie value.\n   Initiator cookies can be negotiated,\
    \ like ports and SPIs.  However,\n   since the likelihood of two hosts assigned\
    \ the same IP address\n   attempting to simultaneously use the same initiator\
    \ cookie is very\n   small, the RSIP gateway can guarantee cookie uniqueness by\
    \ dropping\n   IKE packets with a cookie value that is already in use.\n"
- title: 5.2.  Mobile IP
  contents:
  - "5.2.  Mobile IP\n   Mobile IP allows a mobile host to maintain an IP address\
    \ as it moves\n   from network to network.  For Mobile IP foreign networks that\
    \ use\n   private IP addresses, RSIP may be applicable.  In particular, RSIP\n\
    \   would allow a mobile host to bind to a local private address, while\n   maintaining\
    \ a global home address and a global care-of address.  The\n   global care-of\
    \ address could, in principle, be shared with other\n   mobile nodes.\n   The\
    \ exact behavior of Mobile IP with respect to private IP addresses\n   has not\
    \ be settled.  Until it is, a proposal to adapt RSIP to such a\n   scenario is\
    \ premature.  Also, such an adaptation may be considerably\n   complex.  Thus,\
    \ integration of RSIP and Mobile IP is a topic of\n   ongoing consideration.\n"
- title: 5.3.  Differentiated and Integrated Services
  contents:
  - "5.3.  Differentiated and Integrated Services\n   To attain the capability of\
    \ providing quality of service between two\n   communicating hosts in different\
    \ realms, it is important to consider\n   the interaction of RSIP with different\
    \ quality of service\n   provisioning models and mechanisms.  In the section,\
    \ RSIP interaction\n   with the integrated service and differentiated service\
    \ frameworks is\n   discussed.\n"
- title: 5.3.1.  Differentiated Services
  contents:
  - "5.3.1.  Differentiated Services\n   The differentiated services architecture\
    \ defined in [RFC2475] allows\n   networks to support multiple levels of best-effort\
    \ service through\n   the use of \"markings\" of the IP Type-of-Service (now DS)\
    \ byte.  Each\n   value of the DS byte is termed a differentiated services code\
    \ point\n   (DSCP) and represents a particular per-hop behavior.  This behavior\n\
    \   may not be the same in all administrative domains.  No explicit\n   signaling\
    \ is necessary to support differentiated services.\n   For outbound packets from\
    \ an edge network, DSCP marking is typically\n   performed and/or enforced on\
    \ a boundary router.  The marked packet is\n   then forwarded onto the public\
    \ network.  In an RSIP-enabled network,\n   a natural place for DSCP marking is\
    \ the RSIP gateway.  In the case of\n   RSAP-IP, the RSIP gateway can apply its\
    \ micro-flow (address/port\n   tuple) knowledge of RSIP assignments in order to\
    \ provide different\n   service levels to different RSIP host.  For RSA-IP, the\
    \ RSIP gateway\n   will not necessarily have knowledge of micro-flows, so it must\
    \ rely\n   on markings made by the RSIP hosts (if any) or apply a default policy\n\
    \   to the packets.\n   When differentiated services is to be performed between\
    \ RSIP hosts\n   and gateways, it must be done over the tunnel between these entities.\n\
    \   Differentiated services over a tunnel is considered in detail in\n   [DS-TUNN],\
    \ the key points that need to be addressed here are the\n   behaviors of tunnel\
    \ ingress and egress for both incoming and going\n   packets.\n   For incoming\
    \ packets arriving at an RSIP gateway tunnel ingress, the\n   RSIP gateway may\
    \ either copy the DSCP from the inner header to the\n   outer header, leave the\
    \ inner header DSCP untouched, but place a\n   different DSCP in the outer header,\
    \ or change the inner header DSCP\n   while applying either the same or a different\
    \ DSCP to the outer\n   header.\n   For incoming packets arriving at an RSIP host\
    \ tunnel egress, behavior\n   with respect to the DSCP is not necessarily important\
    \ if the RSIP\n   host not only terminates the tunnel, but consumes the packet\
    \ as well.\n   If this is not the case, as per some cascaded RSIP scenarios, the\n\
    \   RSIP host must apply local policy to determine whether to leave the\n   inner\
    \ header DSCP as is, overwrite it with the outer header DSCP, or\n   overwrite\
    \ it with a different value.\n   For outgoing packets arriving at an RSIP host\
    \ tunnel ingress, the\n   host  may either copy the DSCP from the inner header\
    \ to the outer\n   header, leave the inner header DSCP untouched, but place a\
    \ different\n   DSCP in the outer header, or change the inner header DSCP while\n\
    \   applying either the same or a different DSCP to the outer header.\n   For\
    \ outgoing packets arriving at an RSIP gateway tunnel egress, the\n   RSIP gateway\
    \ must apply local policy to determine whether to leave\n   the inner header DSCP\
    \ as is, overwrite it with the outer header DSCP,\n   or overwrite it with a different\
    \ value.\n   It is reasonable to assume that in most cases, the diffserv policy\n\
    \   applicable on a site will be the same for RSIP and non-RSIP hosts.\n   For\
    \ this reason, a likely policy is that the DSCP will always be\n   copied between\
    \ the outer and inner headers in all of the above cases.\n   However, implementations\
    \ should allow for the more general case.\n"
- title: 5.3.2.  Integrated Services
  contents:
  - "5.3.2.  Integrated Services\n   The integrated services model as defined by [RFC2205]\
    \ requires\n   signalling using RSVP to setup a resource reservation in intermediate\n\
    \   nodes between the communicating endpoints.  In the most common\n   scenario\
    \ in which RSIP is deployed, receivers located within the\n   private realm initiate\
    \ communication sessions with senders located\n   within the public realm.  In\
    \ this section, we discuss the interaction\n   of RSIP architecture and RSVP in\
    \ such a scenario.  The less common\n   case of having senders within the private\
    \ realm and receivers within\n   the public realm is not discussed although concepts\
    \ mentioned here\n   may be applicable.\n   With senders in the public realm,\
    \ RSVP PATH messages flow downstream\n   from sender to receiver, inbound with\
    \ respect to the RSIP gateway,\n   while RSVP RESV messages flow in the opposite\
    \ direction.  Since RSIP\n   uses tunneling between the RSIP host and gateway\
    \ within the private\n   realm, how the RSVP messages are handled within the RSIP\
    \ tunnel\n   depends on situations elaborated in [RFC2746].\n   Following the\
    \ terminology of [RFC2476], if Type 1 tunnels exist\n   between the RSIP host\
    \ and gateway, all intermediate nodes inclusive\n   of the RSIP gateway will be\
    \ treated as a non-RSVP aware cloud without\n   QoS reserved on these nodes. \
    \ The tunnel will be viewed as a single\n   (logical) link on the path between\
    \ the source and destination.  End-\n   to-end RSVP messages will be forwarded\
    \ through the tunnel\n   encapsulated in the same way as normal IP packets.  We\
    \ see this as\n   the most common and applicable deployment scenario.\n   However,\
    \ should Type 2 or 3 tunnels be deployed between the tunneling\n   endpoints ,\
    \ end-to-end RSVP session has to be statically mapped (Type\n   2) or dynamically\
    \ mapped (Type 3) into the tunnel sessions.  While\n   the end-to-end RSVP messages\
    \ will be forwarded through the tunnel\n   encapsulated in the same way as normal\
    \ IP packets, a tunnel session\n   is established between the tunnel endpoints\
    \ to ensure QoS reservation\n   within the tunnel for the end-to-end session.\
    \  Data traffic needing\n   special QoS assurance will be encapsulated in a UDP/IP\
    \ header while\n   normal traffic will be encapsulated using the normal IP-IP\n\
    \   encapsulation.  In the type 2 deployment scenario where all data\n   traffic\
    \ flowing to the RSIP host receiver are given QoS treatment,\n   UDP/IP encapsulation\
    \ will be rendered in the RSIP gateway for all\n   data flows.  The tunnel between\
    \ the RSIP host and gateway could be\n   seen as a \"hard pipe\".  Traffic exceeding\
    \ the QoS guarantee of the\n   \"hard pipe\" would fall back to the best effort\
    \ IP-IP tunneling.\n   In the type 2 deployment scenario where data traffic could\
    \ be\n   selectively channeled into the UDP/IP or normal IP-IP tunnel, or for\n\
    \   type 3 deployment where end-to-end sessions could be dynamically\n   mapped\
    \ into tunnel sessions, integration with the RSIP model could be\n   complicated\
    \ and tricky.  (Note that these are the cases where the\n   tunnel link could\
    \ be seen as a expandable soft pipe.)  Two main\n   issues are worth considering.\n\
    \      -  For RSIP gateway implementations that does encapsulation of the\n  \
    \       incoming stream before passing to the IP layer for forwarding,\n     \
    \    the RSVP daemon has to be explicitly signaled upon reception of\n       \
    \  incoming RSVP PATH messages.  The RSIP implementation has to\n         recognize\
    \ RSVP PATH messages and pass them to the RSVP daemon\n         instead of doing\
    \ the default tunneling.  Handling of other RSVP\n         messages would be as\
    \ described in [RFC2746].\n      -  RSIP enables an RSIP host to have a temporary\
    \ presence at the\n         RSIP gateway by assuming one of the RSIP gateway's\
    \ global\n         interfaces.  As a result, the RSVP PATH messages would be\n\
    \         addressed to the RSIP gateway.  Also, the RSVP SESSION object\n    \
    \     within an incoming RSVP PATH would carry the global destination\n      \
    \   address, destination port (and protocol) tuples that were\n         leased\
    \ by the RSIP gateway to the RSIP host.  Hence the realm\n         unaware RSVP\
    \ daemon running on the RSIP gateway has to be\n         presented with a translated\
    \ version of the RSVP messages.\n         Other approaches are possible, for example\
    \ making the RSVP\n         daemon realm aware.\n   A simple mechanism would be\
    \ to have the RSIP module handle the\n   necessary RSVP message translation. \
    \ For an incoming RSVP signalling\n   flow, the RSIP module does a packet translation\
    \ of the IP header and\n   RSVP SESSION object before handling the packet over\
    \ to RSVP.  The\n   global address leased to the host is translated to the true\
    \ private\n   address of the host.  (Note that this mechanism works with both\
    \ RSA-\n   IP and RSAP-IP.)  The RSIP module also has to do an opposite\n   translation\
    \ from private to global parameter (plus tunneling) for\n   end-to-end PATH messages\
    \ generated by the RSVP daemon towards the\n   RSIP host receiver.  A translation\
    \ on the SESSION object also has to\n   be done for RSVP outbound control messages.\
    \  Once the RSVP daemon\n   gets the message, it maps them to an appropriate tunnel\
    \ sessions.\n   Encapsulation of the inbound data traffic needing QoS treatment\
    \ would\n   be done using UDP-IP encapsulation designated by the tunnel session.\n\
    \   For this reason, the RSIP module has to be aware of the UDP-IP\n   encapsulation\
    \ to use for a particular end-to-end session.\n   Classification and scheduling\
    \ of the QoS guaranteed end-to-end flow\n   on the output interface of the RSIP\
    \ gateway would be based on the\n   UDP/IP encapsulation.  Mapping between the\
    \ tunnel session and end-\n   to-end session could continue to use the mechanisms\
    \ proposed in\n   [RFC2746].  Although [RFC2746] proposes a number of approaches\
    \ for\n   this purpose, we propose using the SESSION_ASSOC object introduced\n\
    \   because of its simplicity.\n"
- title: 5.4.  IP Multicast
  contents:
  - "5.4.  IP Multicast\n   The amount of specific RSIP/multicast support that is\
    \ required in\n   RSIP hosts and gateways is dependent on the scope of multicasting\
    \ in\n   the RSIP-enabled network, and the roles that the RSIP hosts will\n  \
    \ play.  In this section, we discuss RSIP and multicast interactions in\n   a\
    \ number of scenarios.\n   Note that in all cases, the RSIP gateway MUST be multicast\
    \ aware\n   because it is on an administrative boundary between two domains that\n\
    \   will not be sharing their all of their routing information.  The RSIP\n  \
    \ gateway MUST NOT allow private IP addresses to be propagated on the\n   public\
    \ network as part of any multicast message or as part of a\n   routing table.\n"
- title: 5.4.1.  Receiving-Only Private Hosts, No Multicast Routing on
  contents:
  - "5.4.1.  Receiving-Only Private Hosts, No Multicast Routing on\n        Private\
    \ Network\n   In this scenario, private hosts will not source multicast traffic,\n\
    \   but they may join multicast groups as recipients.  In the private\n   network,\
    \ there are no multicast-aware routers, except for the RSIP\n   gateway.\n   Private\
    \ hosts may join and leave multicast groups by sending the\n   appropriate IGMP\
    \ messages to an RSIP gateway (there may be IGMP proxy\n   routers between RSIP\
    \ hosts and gateways).  The RSIP gateway will\n   coalesce these requests and\
    \ perform the appropriate actions, whether\n   they be to perform a multicast\
    \ WAN routing protocol, such as PIM, or\n   to proxy the IGMP messages to a WAN\
    \ multicast router.  In other\n   words, if one or more private hosts request\
    \ to join a multicast\n   group, the RSIP gateway MUST join in their stead, using\
    \ one of its\n   own public IP addresses.\n   Note that private hosts do not need\
    \ to acquire demultiplexing fields\n   and use RSIP to receive multicasts.  They\
    \ may receive all multicasts\n   using their private addresses, and by private\
    \ address is how the RSIP\n   gateway will keep track of their group membership.\n"
- title: 5.4.2.  Sending and Receiving Private Hosts, No Multicast Routing
  contents:
  - "5.4.2.  Sending and Receiving Private Hosts, No Multicast Routing\n        on\
    \ Private Network\n   This scenarios operates identically to the previous scenario,\
    \ except\n   that when a private host becomes a multicast source, it MUST use\
    \ RSIP\n   and acquire a public IP address (note that it will still receive on\n\
    \   its private address).  A private host sending a multicast will use a\n   public\
    \ source address and tunnel the packets to the RSIP gateway.\n   The RSIP gateway\
    \ will then perform typical RSIP functionality, and\n   route the resulting packets\
    \ onto the public network, as well as back\n   to the private network, if there\
    \ are any listeners on the private\n   network.\n   If there is more than one\
    \ sender on the private network, then, to the\n   public network it will seem\
    \ as if all of these senders share the same\n   IP address.  If a downstream multicasting\
    \ protocol identifies sources\n   based on IP address alone and not port numbers,\
    \ then it is possible\n   that these protocols will not be able to distinguish\
    \ between the\n   senders.\n"
- title: 6.  RSIP Complications
  contents:
  - "6.  RSIP Complications\n   In this section we document the know complications\
    \ that RSIP may\n   cause.  While none of these complications should be considered\
    \ \"show\n   stoppers\" for the majority of applications, they may cause unexpected\n\
    \   or undefined behavior.  Where it is appropriate, we discuss potential\n  \
    \ remedial procedures that may reduce or eliminate the deleterious\n   impact\
    \ of a complication.\n"
- title: 6.1.  Unnecessary TCP TIME_WAIT
  contents:
  - "6.1.  Unnecessary TCP TIME_WAIT\n   When TCP disconnects a socket, it enters\
    \ the TCP TIME_WAIT state for\n   a period of time.  While it is in this state\
    \ it will refuse to accept\n   new connections using the same socket (i.e., the\
    \ same source\n   address/port and destination address/port).  Consider the case\
    \ in\n   which an RSIP host (using RSAP-IP) is leased an address/port tuple\n\
    \   and uses this tuple to contact a public address/port tuple.  Suppose\n   that\
    \ the host terminates the session with the public tuple and\n   immediately returns\
    \ its leased tuple to the RSIP gateway.  If the\n   RSIP gateway immediately allocates\
    \ this tuple to another RSIP host\n   (or to the same host), and this second host\
    \ uses the tuple to contact\n   the same public tuple while the socket is still\
    \ in the TIME_WAIT\n   phase, then the host's connection may be rejected by the\
    \ public host.\n   In order to mitigate this problem, it is recommended that RSIP\n\
    \   gateways hold recently deallocated tuples for at least two minutes,\n   which\
    \ is the greatest duration of TIME_WAIT that is commonly\n   implemented.  In\
    \ situations where port space is scarce, the RSIP\n   gateway MAY choose to allocate\
    \ ports in a FIFO fashion from the pool\n   of recently deallocated ports.\n"
- title: 6.2.  ICMP State in RSIP Gateway
  contents:
  - "6.2.  ICMP State in RSIP Gateway\n   Like NAT, RSIP gateways providing RSAP-IP\
    \ must process ICMP responses\n   from the public network in order to determine\
    \ the RSIP host (if any)\n   that is the proper recipient.  We distinguish between\
    \ ICMP error\n   packets, which are transmitted in response to an error with an\n\
    \   associated IP packet, and ICMP response packets, which are\n   transmitted\
    \ in response to an ICMP request packet.\n   ICMP request packets originating\
    \ on the private network will\n   typically consist of echo request, timestamp\
    \ request and address mask\n   request.  These packets and their responses can\
    \ be identified by the\n   tuple of source IP address, ICMP identifier, ICMP sequence\
    \ number,\n   and destination IP address.  An RSIP host sending an ICMP request\n\
    \   packet tunnels it to the RSIP gateway, just as it does TCP and UDP\n   packets.\
    \  The RSIP gateway must use this tuple to map incoming ICMP\n   responses to\
    \ the private address of the appropriate RSIP host.  Once\n   it has done so,\
    \ it will tunnel the ICMP response to the host.  Note\n   that it is possible\
    \ for two RSIP hosts to use the same values for the\n   tuples listed above, and\
    \ thus create an ambiguity.  However, this\n   occurrence is likely to be quite\
    \ rare, and is not addressed further\n   in this document.\n   Incoming ICMP error\
    \ response messages can be forwarded to the\n   appropriate RSIP host by examining\
    \ the IP header and port numbers\n   embedded within the ICMP packet.  If these\
    \ fields are not present,\n   the packet should be silently discarded.\n   Occasionally,\
    \ an RSIP host will have to send an ICMP response (e.g.,\n   port unreachable).\
    \  These responses are tunneled to the RSIP gateway,\n   as is done for TCP and\
    \ UDP packets.  All ICMP requests (e.g., echo\n   request) arriving at the RSIP\
    \ gateway MUST be processed by the RSIP\n   gateway and MUST NOT be forwarded\
    \ to an RSIP host.\n"
- title: 6.3.  Fragmentation and IP Identification Field Collision
  contents:
  - "6.3.  Fragmentation and IP Identification Field Collision\n   If two or more\
    \ RSIP hosts on the same private network transmit\n   outbound packets that get\
    \ fragmented to the same public gateway, the\n   public gateway may experience\
    \ a reassembly ambiguity if the IP header\n   ID fields of these packets are identical.\n\
    \   For TCP packets, a reasonably small MTU can be set so that\n   fragmentation\
    \ is guaranteed not to happen, or the likelihood or\n   fragmentation is extremely\
    \ small.  If path MTU discovery works\n   properly, the problem is mitigated.\
    \  For UDP, applications control\n   the size of packets, and the RSIP host stack\
    \ may have to fragment UDP\n   packets that exceed the local MTU.  These packets\
    \ may be fragmented\n   by an intermediate router as well.\n   The only completely\
    \ robust solution to this problem is to assign all\n   RSIP hosts that are sharing\
    \ the same public IP address disjoint\n   blocks of numbers to use in their IP\
    \ identification fields.  However,\n   whether this modification is worth the\
    \ effort of implementing is\n   currently unknown.\n"
- title: 6.4.  Application Servers on RSAP-IP Hosts
  contents:
  - "6.4.  Application Servers on RSAP-IP Hosts\n   RSAP-IP hosts are limited by the\
    \ same constraints as NAT with respect\n   to hosting servers that use a well-known\
    \ port.  Since destination\n   port numbers are used as routing information to\
    \ uniquely identify an\n   RSAP-IP host, typically no two RSAP-IP hosts sharing\
    \ the same public\n   IP address can simultaneously operate publically-available\
    \ gateways\n   on the same port.  For protocols that operate on well-known ports,\n\
    \   this implies that only one public gateway per RSAP-IP IP address /\n   port\
    \ tuple is used simultaneously.  However, more than one gateway\n   per RSAP-IP\
    \ IP address / port tuple may be used simultaneously if and\n   only if there\
    \ is a demultiplexing field within the payload of all\n   packets that will uniquely\
    \ determine the identity of the RSAP-IP\n   host, and this field is known by the\
    \ RSIP gateway.\n   In order for an RSAP-IP host to operate a publically-available\n\
    \   gateway, the host must inform the RSIP gateway that it wishes to\n   receive\
    \ all traffic destined to that port number, per its IP address.\n   Such a request\
    \ MUST be denied if the port in question is already in\n   use by another host.\n\
    \   In general, contacting devices behind an RSIP gateway may be\n   difficult.\
    \  A potential solution to the general problem would be an\n   architecture that\
    \ allows an application on an RSIP host to register a\n   public IP address /\
    \ port pair in a public database.  Simultaneously,\n   the RSIP gateway would\
    \ initiate a mapping from this address / port\n   tuple to the RSIP host.  A peer\
    \ application would then be required to\n   contact the database to determine\
    \ the proper address / port at which\n   to contact the RSIP host's application.\n"
- title: 6.5.  Determining Locality of Destinations from an RSIP Host
  contents:
  - "6.5.  Determining Locality of Destinations from an RSIP Host\n   In general,\
    \ an RSIP host must know, for a particular IP address,\n   whether it should address\
    \ the packet for local delivery on the\n   private network, or if it has to use\
    \ an RSIP interface to tunnel to\n   an RSIP gateway (assuming that it has such\
    \ an interface available).\n   If the RSIP hosts are all on a single subnet, one\
    \ hop from an RSIP\n   gateway, then examination of the local network and subnet\
    \ mask will\n   provide the appropriate information.  However, this is not always\
    \ the\n   case.\n   An alternative that will work in general for statically addressed\n\
    \   private networks is to store a list of the network and subnet masks\n   of\
    \ every private subnet at the RSIP gateway.  RSIP hosts may query\n   the gateway\
    \ with a particular target IP address, or for the entire\n   list.\n   If the\
    \ subnets on the local side of the network are changing more\n   rapidly than\
    \ the lifetime of a typical RSIP session, the RSIP host\n   may have to query\
    \ the location of every destination that it tries to\n   communicate with.\n \
    \  If an RSIP host transmits a packet addressed to a public host without\n   using\
    \ RSIP, then the RSIP gateway will apply NAT to the packet (if it\n   supports\
    \ NAT) or it may discard the packet and respond with and\n   appropriate ICMP\
    \ message.\n   A robust solution to this problem has proven difficult to develop.\n\
    \   Currently, it is not known how severe this problem is.  It is likely\n   that\
    \ it will be more severe on networks where the routing information\n   is changing\
    \ rapidly that on networks with relatively static routes.\n"
- title: 6.6.  Implementing RSIP Host Deallocation
  contents:
  - "6.6.  Implementing RSIP Host Deallocation\n   An RSIP host MAY free resources\
    \ that it has determined it no longer\n   requires.  For example, on an RSAP-IP\
    \ subnet with a limited number of\n   public IP addresses, port numbers may become\
    \ scarce.  Thus, if RSIP\n   hosts are able to dynamically deallocate ports that\
    \ they no longer\n   need, more hosts can be supported.\n   However, this functionality\
    \ may require significant modifications to\n   a vanilla TCP/IP stack in order\
    \ to implement properly.  The RSIP host\n   must be able to determine which TCP\
    \ or UDP sessions are using RSIP\n   resources.  If those resources are unused\
    \ for a period of time, then\n   the RSIP host may deallocate them.  When an open\
    \ socket's resources\n   are deallocated, it will cause some associated applications\
    \ to fail.\n   An analogous case would be TCP and UDP sessions that must terminate\n\
    \   when an interface that they are using loses connectivity.\n   On the other\
    \ hand, this issue can be considered a resource allocation\n   problem.  It is\
    \ not recommended that a large number (hundreds) of\n   hosts share the same IP\
    \ address, for performance purposes.  Even if,\n   say, 100 hosts each are allocated\
    \ 100 ports, the total number of\n   ports in use by RSIP would be still less\
    \ than one-sixth the total\n   port space for an IP address.  If more hosts or\
    \ more ports are\n   needed, more IP addresses should be used.  Thus, it is reasonable,\n\
    \   that in many cases, RSIP hosts will not have to deallocate ports for\n   the\
    \ lifetime of their activity.\n   Since RSIP demultiplexing fields are leased\
    \ to hosts, an\n   appropriately chosen lease time can alleviate some port space\n\
    \   scarcity issues.\n"
- title: 6.7.  Multi-Party Applications
  contents:
  - "6.7.  Multi-Party Applications\n   Multi-party applications are defined to have\
    \ at least one of the\n   following characteristics:\n      -  A third party sets\
    \ up sessions or connections between two\n         hosts.\n      -  Computation\
    \ is distributed over a number of hosts such that the\n         individual hosts\
    \ may communicate with each other directly.\n   RSIP has a fundamental problem\
    \ with multi-party applications.  If\n   some of the parties are within the private\
    \ addressing realm and\n   others are within the public addressing realm, an RSIP\
    \ host may not\n   know when to use private addresses versus public addresses.\
    \  In\n   particular, IP addresses may be passed from party to party under the\n\
    \   assumption that they are global endpoint identifiers.  This may cause\n  \
    \ multi-party applications to fail.\n   There is currently no known solution to\
    \ this general problem.\n   Remedial measures are available, such as forcing all\
    \ RSIP hosts to\n   always use public IP addresses, even when communicating only\
    \ on to\n   other RSIP hosts.  However, this can result in a socket set up\n \
    \  between two RSIP hosts having the same source and destination IP\n   addresses,\
    \ which most TCP/IP stacks will consider as intra-host\n   communication.\n"
- title: 6.8.  Scalability
  contents:
  - "6.8.  Scalability\n   The scalability of RSIP is currently not well understood.\
    \  While it\n   is conceivable that a single RSIP gateway could support hundreds\
    \ of\n   RSIP hosts, scalability depends on the specific deployment scenario\n\
    \   and applications used.  In particular, three major constraints on\n   scalability\
    \ will be (1) RSIP gateway processing requirements, (2)\n   RSIP gateway memory\
    \ requirements, and (3) RSIP negotiation protocol\n   traffic requirements.  It\
    \ is advisable that all RSIP negotiation\n   protocol implementations attempt\
    \ to minimize these requirements.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   RSIP, in and of itself, does not provide security.\
    \  It may provide\n   the illusion of security or privacy by hiding a private\
    \ address\n   space, but security can only be ensured by the proper use of security\n\
    \   protocols and cryptographic techniques.\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   The authors would like to thank Pyda Srisuresh, Dan\
    \ Nessett, Gary\n   Jaszewski, Ajay Bakre, Cyndi Jung, and Rick Cobb for their\
    \ input.\n   The IETF NAT working group as a whole has been extremely helpful\
    \ in\n   the ongoing development of RSIP.\n"
- title: 9.  References
  contents:
  - "9.  References\n   [DHCP-DNS] Stapp, M. and Y. Rekhter, \"Interaction Between\
    \ DHCP and\n              DNS\", Work in Progress.\n   [RFC2983]  Black, D., \"\
    Differentiated Services and Tunnels\", RFC\n              2983, October 2000.\n\
    \   [RFC3104]  Montenegro, G. and M. Borella, \"RSIP Support for End-to-\n   \
    \           End IPSEC\", RFC 3104, October 2001.\n   [RFC3103]  Borella, M., Grabelsky,\
    \ D., Lo, J. and K. Taniguchi,\n              \"Realm Specific IP: Protocol Specification\"\
    , RFC 3103,\n              October 2001.\n   [RFC2746]  Terzis, A., Krawczyk,\
    \ J., Wroclawski, J. and L. Zhang,\n              \"RSVP Operation Over IP Tunnels\"\
    , RFC 2746, January 2000.\n   [RFC1918]  Rekhter, Y., Moskowitz, B., Karrenberg,\
    \ D., de Groot, G.J.\n              and E. Lear, \"Address Allocation for Private\
    \ Internets\",\n              BCP 5, RFC 1918, February 1996.\n   [RFC2002]  Perkins,\
    \ C., \"IP Mobility Support\", RFC 2002, October\n              1996.\n   [RFC2119]\
    \  Bradner, S., \"Key words for use in RFCs to indicate\n              requirement\
    \ levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2663]  Srisuresh, P. and M.\
    \ Holdrege, \"IP Network Address\n              Translator (NAT) Terminology and\
    \ Considerations\", RFC\n              2663, August 1999.\n   [RFC2205]  Braden,\
    \ R., Zhang, L., Berson, S., Herzog, S. and S.\n              Jamin, \"Resource\
    \ Reservation Protocol (RSVP)\", RFC 2205,\n              September 1997.\n  \
    \ [RFC2475]  Blake, S., Black, D., Carlson, M., Davies, E., Wang, Z.\n       \
    \       and W. Weiss, \"An Architecture for Differentiated\n              Services\"\
    , RFC 2475, December 1998.\n   [RFC3105]  Kempf, J. and G. Montenegro, \"Finding\
    \ an RSIP Server with\n              SLP\", RFC 3105, October 2001.\n"
- title: 10.  Authors' Addresses
  contents:
  - "10.  Authors' Addresses\n   Michael Borella\n   CommWorks\n   3800 Golf Rd.\n\
    \   Rolling Meadows IL 60008\n   Phone: (847) 262-3083\n   EMail: mike_borella@commworks.com\n\
    \   Jeffrey Lo\n   Candlestick Networks, Inc\n   70 Las Colinas Lane,\n   San\
    \ Jose, CA 95119\n   Phone: (408) 284 4132\n   EMail: yidarlo@yahoo.com\n   David\
    \ Grabelsky\n   CommWorks\n   3800 Golf Rd.\n   Rolling Meadows IL 60008\n   Phone:\
    \ (847) 222-2483\n   EMail: david_grabelsky@commworks.com\n   Gabriel E. Montenegro\n\
    \   Sun Microsystems\n   Laboratories, Europe\n   29, chemin du Vieux Chene\n\
    \   38240 Meylan\n   FRANCE\n   Phone: +33 476 18 80 45\n   EMail: gab@sun.com\n"
- title: 11.  Full Copyright Statement
  contents:
  - "11.  Full Copyright Statement\n   Copyright (C) The Internet Society (2001).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
