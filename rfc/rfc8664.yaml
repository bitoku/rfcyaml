- title: __initial_text__
  contents:
  - " Path Computation Element Communication Protocol (PCEP) Extensions for\n    \
    \                        Segment Routing\n"
- title: Abstract
  contents:
  - "Abstract\n   Segment Routing (SR) enables any head-end node to select any path\n\
    \   without relying on a hop-by-hop signaling technique (e.g., LDP or\n   RSVP-TE).\
    \  It depends only on \"segments\" that are advertised by link-\n   state Interior\
    \ Gateway Protocols (IGPs).  An SR path can be derived\n   from a variety of mechanisms,\
    \ including an IGP Shortest Path Tree\n   (SPT), an explicit configuration, or\
    \ a Path Computation Element\n   (PCE).  This document specifies extensions to\
    \ the Path Computation\n   Element Communication Protocol (PCEP) that allow a\
    \ stateful PCE to\n   compute and initiate Traffic-Engineering (TE) paths, as\
    \ well as a\n   Path Computation Client (PCC) to request a path subject to certain\n\
    \   constraints and optimization criteria in SR networks.\n   This document updates\
    \ RFC 8408.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8664.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction\n   2.  Terminology\n     2.1.  Requirements\
    \ Language\n   3.  Overview of PCEP Operation in SR Networks\n   4.  Object Formats\n\
    \     4.1.  The OPEN Object\n       4.1.1.  The Path Setup Type Capability TLV\n\
    \       4.1.2.  The SR PCE Capability Sub-TLV\n     4.2.  The RP/SRP Object\n\
    \     4.3.  ERO\n       4.3.1.  SR-ERO Subobject\n       4.3.2.  NAI Associated\
    \ with SID\n     4.4.  RRO\n     4.5.  METRIC Object\n   5.  Procedures\n    \
    \ 5.1.  Exchanging the SR PCE Capability\n     5.2.  ERO Processing\n       5.2.1.\
    \  SR-ERO Validation\n       5.2.2.  Interpreting the SR-ERO\n     5.3.  RRO Processing\n\
    \   6.  Management Considerations\n     6.1.  Controlling the Path Setup Type\n\
    \     6.2.  Migrating a Network to Use PCEP Segment-Routed Paths\n     6.3.  Verification\
    \ of Network Operation\n     6.4.  Relationship to Existing Management Models\n\
    \   7.  Security Considerations\n   8.  IANA Considerations\n     8.1.  PCEP ERO\
    \ and RRO Subobjects\n     8.2.  New NAI Type Registry\n     8.3.  New SR-ERO\
    \ Flag Registry\n     8.4.  PCEP-Error Object\n     8.5.  PCEP TLV Type Indicators\n\
    \     8.6.  PATH-SETUP-TYPE-CAPABILITY Sub-TLV Type Indicators\n     8.7.  New\
    \ Path Setup Type\n     8.8.  New Metric Type\n     8.9.  SR PCE Capability Flags\n\
    \   9.  References\n     9.1.  Normative References\n     9.2.  Informative References\n\
    \   Appendix A.  Compatibility with Early Implementations\n   Acknowledgements\n\
    \   Contributors\n   Authors' Addresses\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Segment Routing (SR) leverages the source-routing paradigm.\
    \  Using\n   SR, a source node steers a packet through a path without relying\
    \ on\n   hop-by-hop signaling protocols such as LDP or RSVP-TE.  Each path is\n\
    \   specified as an ordered list of instructions called \"segments\".  Each\n\
    \   segment is an instruction to route the packet to a specific place in\n   the\
    \ network or to perform a function on the packet.  A database of\n   segments\
    \ can be distributed through the network using a routing\n   protocol (such as\
    \ IS-IS or OSPF) or by any other means.  Several\n   types of segments are defined.\
    \  A node segment uniquely identifies a\n   specific node in the SR domain.  Each\
    \ router in the SR domain\n   associates a node segment with an ECMP-aware shortest\
    \ path to the\n   node that it identifies.  An adjacency segment represents a\n\
    \   unidirectional adjacency.  An adjacency segment is local to the node\n   that\
    \ advertises it.  Both node segments and adjacency segments can be\n   used for\
    \ SR.\n   [RFC8402] describes the SR architecture.  The corresponding IS-IS and\n\
    \   OSPF extensions are specified in [RFC8667] and [RFC8665],\n   respectively.\n\
    \   The SR architecture can be implemented using either an MPLS\n   forwarding\
    \ plane [RFC8660] or an IPv6 forwarding plane [IPv6-SRH].\n   The MPLS forwarding\
    \ plane can be applied to SR without any change; in\n   which case, an SR path\
    \ corresponds to an MPLS Label Switching Path\n   (LSP).  This document is relevant\
    \ to the MPLS forwarding plane only.\n   In this document, \"Node-SID\" and \"\
    Adj-SID\" denote the Node Segment\n   Identifier and Adjacency Segment Identifier,\
    \ respectively.\n   An SR path can be derived from an IGP Shortest Path Tree (SPT).\n\
    \   Segment Routing Traffic-Engineering (SR-TE) paths may not follow an\n   IGP\
    \ SPT.  Such paths may be chosen by a suitable network planning\n   tool and provisioned\
    \ on the ingress node of the SR-TE path.\n   [RFC5440] describes the Path Computation\
    \ Element Communication\n   Protocol (PCEP) for communication between a Path Computation\
    \ Client\n   (PCC) and a Path Computation Element (PCE) or between a pair of PCEs.\n\
    \   A PCE computes paths for MPLS Traffic-Engineering (MPLS-TE) LSPs\n   based\
    \ on various constraints and optimization criteria.  [RFC8231]\n   specifies extensions\
    \ to PCEP that allow a stateful PCE to compute and\n   recommend network paths\
    \ in compliance with [RFC4657].  It also\n   defines objects and TLVs for MPLS-TE\
    \ LSPs.  Stateful PCEP extensions\n   provide synchronization of LSP state between\
    \ a PCC and a PCE or\n   between a pair of PCEs, delegation of LSP control, reporting\
    \ of LSP\n   state from a PCC to a PCE, and control of the setup and path routing\n\
    \   of an LSP from a PCE to a PCC.  Stateful PCEP extensions are intended\n  \
    \ for an operational model in which LSPs are configured on the PCC, and\n   control\
    \ over them is delegated to the PCE.\n   A mechanism to dynamically initiate LSPs\
    \ on a PCC based on the\n   requests from a stateful PCE or a controller using\
    \ stateful PCE is\n   specified in [RFC8281].  This mechanism is useful in Software-Defined\n\
    \   Networking (SDN) applications, such as on-demand engineering or\n   bandwidth\
    \ calendaring [RFC8413].\n   It is possible to use a stateful PCE for computing\
    \ one or more SR-TE\n   paths, taking into account various constraints and objective\n\
    \   functions.  Once a path is chosen, the stateful PCE can initiate an\n   SR-TE\
    \ path on a PCC using the PCEP extensions specified in [RFC8281]\n   and the SR-specific\
    \ PCEP extensions specified in this document.\n   Additionally, using procedures\
    \ described in this document, a PCC can\n   request an SR path from either a stateful\
    \ or a stateless PCE.\n   This specification relies on the procedures specified\
    \ in [RFC8408] to\n   exchange the Segment Routing capability and to specify that\
    \ the path\n   setup type of an LSP is Segment Routing.  This specification also\n\
    \   updates [RFC8408] to clarify the use of sub-TLVs in the PATH-SETUP-\n   TYPE-CAPABILITY\
    \ TLV.  See Section 4.1.1 for details.\n   This specification provides a mechanism\
    \ for a network controller\n   (acting as a PCE) to instantiate candidate paths\
    \ for an SR Policy\n   onto a head-end node (acting as a PCC) using PCEP.  For\
    \ more\n   information on the SR Policy Architecture, see [SR-POLICY].\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The following terminology is used in this document:\n   ERO:\
    \    Explicit Route Object\n   IGP:    Interior Gateway Protocol\n   IS-IS:  Intermediate\
    \ System to Intermediate System\n   LSR:    Label Switching Router\n   MSD:  \
    \  Base MPLS Imposition Maximum SID Depth, as defined in\n           [RFC8491]\n\
    \   NAI:    Node or Adjacency Identifier\n   OSPF:   Open Shortest Path First\n\
    \   PCC:    Path Computation Client\n   PCE:    Path Computation Element\n   PCEP:\
    \   Path Computation Element Communication Protocol\n   RRO:    Record Route Object\n\
    \   SID:    Segment Identifier\n   SR:     Segment Routing\n   SR-DB:  Segment\
    \ Routing Database: the collection of SRGBs, SRLBs, and\n           SIDs and the\
    \ objects they map to, advertised by a link-state\n           IGP\n   SR-TE: \
    \ Segment Routing Traffic Engineering\n   SRGB:   Segment Routing Global Block\n\
    \   SRLB:   Segment Routing Local Block\n"
- title: 2.1.  Requirements Language
  contents:
  - "2.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n"
- title: 3.  Overview of PCEP Operation in SR Networks
  contents:
  - "3.  Overview of PCEP Operation in SR Networks\n   In an SR network, the ingress\
    \ node of an SR path prepends an SR\n   header to all outgoing packets.  The SR\
    \ header consists of a list of\n   SIDs (or MPLS labels in the context of this\
    \ document).  The header\n   has all necessary information so that, in combination\
    \ with the\n   information distributed by the IGP, the packets can be guided from\n\
    \   the ingress node to the egress node of the path; hence, there is no\n   need\
    \ for any signaling protocol.\n   In PCEP messages, LSP route information is carried\
    \ in the Explicit\n   Route Object (ERO), which consists of a sequence of subobjects.\
    \  SR-\n   TE paths computed by a PCE can be represented in an ERO in one of the\n\
    \   following forms:\n   *  An ordered set of IP addresses representing network\
    \ nodes/links.\n   *  An ordered set of SIDs, with or without the corresponding\
    \ IP\n      addresses.\n   *  An ordered set of MPLS labels, with or without corresponding\
    \ IP\n      addresses.\n   The PCC converts these into an MPLS label stack and\
    \ next hop, as\n   described in Section 5.2.2.\n   This document defines a new\
    \ ERO subobject denoted by \"SR-ERO\n   subobject\" that is capable of carrying\
    \ a SID as well as the identity\n   of the node/adjacency represented by the SID.\
    \  SR-capable PCEP\n   speakers should be able to generate and/or process such\
    \ an ERO\n   subobject.  An ERO containing SR-ERO subobjects can be included in\n\
    \   the PCEP Path Computation Reply (PCRep) message defined in [RFC5440],\n  \
    \ the Path Computation LSP Initiate Request (PCInitiate) message\n   defined in\
    \ [RFC8281], and the Path Computation Update Request (PCUpd)\n   and Path Computation\
    \ State Report (PCRpt) messages for LSPs defined\n   in [RFC8231].\n   When a\
    \ PCEP session between a PCC and a PCE is established, both PCEP\n   speakers\
    \ exchange their capabilities to indicate their ability to\n   support SR-specific\
    \ functionality.\n   A PCE can update an LSP that is initially established via\
    \ RSVP-TE\n   signaling to use an SR-TE path by sending a PCUpd to the PCC that\n\
    \   delegated the LSP to it [RFC8231].  A PCC can update an undelegated\n   LSP\
    \ that is initially established via RSVP-TE signaling to use an SR-\n   TE path\
    \ as follows.  First, it requests an SR-TE path from a PCE by\n   sending a Path\
    \ Computation Request (PCReq) message.  If it receives a\n   suitable path, it\
    \ establishes the path in the data plane and then\n   tears down the original\
    \ RSVP-TE path.  If the PCE is stateful, then\n   the PCC sends PCRpt messages\
    \ indicating that the new path is set up\n   and the old path is torn down, per\
    \ [RFC8231].\n   Similarly, a PCE or PCC can update an LSP initially created with\
    \ an\n   SR-TE path to use RSVP-TE signaling, if necessary.  This capability\n\
    \   is useful for rolling back a change when a network is migrated from\n   RSVP-TE\
    \ to SR-TE technology.\n   A PCC MAY include a Record Route Object (RRO) containing\
    \ the recorded\n   LSP in PCReq and PCRpt messages as specified in [RFC5440] and\n\
    \   [RFC8231], respectively.  This document defines a new RRO subobject\n   for\
    \ SR networks.  The methods used by a PCC to record the SR-TE LSP\n   are outside\
    \ the scope of this document.\n   In summary, this document:\n   *  Defines a\
    \ new ERO subobject, a new RRO subobject, and new PCEP\n      error codes.\n \
    \  *  Specifies how two PCEP speakers can establish a PCEP session that\n    \
    \  can carry information about SR-TE paths.\n   *  Specifies processing rules\
    \ for the ERO subobject.\n   *  Defines a new path setup type to be used in the\
    \ PATH-SETUP-TYPE\n      and PATH-SETUP-TYPE-CAPABILITY TLVs [RFC8408].\n   *\
    \  Defines a new sub-TLV for the PATH-SETUP-TYPE-CAPABILITY TLV.\n   The extensions\
    \ specified in this document complement the existing\n   PCEP specifications to\
    \ support SR-TE paths.  As such, the PCEP\n   messages (e.g., PCReq, PCRep, PCRpt,\
    \ PCUpd, PCInitiate, etc.) are\n   formatted according to [RFC5440], [RFC8231],\
    \ [RFC8281], and any other\n   applicable PCEP specifications.\n"
- title: 4.  Object Formats
  contents:
  - '4.  Object Formats

    '
- title: 4.1.  The OPEN Object
  contents:
  - '4.1.  The OPEN Object

    '
- title: 4.1.1.  The Path Setup Type Capability TLV
  contents:
  - "4.1.1.  The Path Setup Type Capability TLV\n   [RFC8408] defines the PATH-SETUP-TYPE-CAPABILITY\
    \ TLV for use in the\n   OPEN object.  The PATH-SETUP-TYPE-CAPABILITY TLV contains\
    \ an optional\n   list of sub-TLVs, which are intended to convey parameters that\
    \ are\n   associated with the path setup types supported by a PCEP speaker.\n\
    \   This specification updates [RFC8408] as follows.  It creates a new\n   registry\
    \ that defines the valid type indicators of the sub-TLVs of\n   the PATH-SETUP-TYPE-CAPABILITY\
    \ TLV (see Section 8.6).  A PCEP speaker\n   MUST NOT include a sub-TLV in the\
    \ PATH-SETUP-TYPE-CAPABILITY TLV\n   unless it appears in this registry.  If a\
    \ PCEP speaker receives a\n   sub-TLV whose type indicator does not match one\
    \ of those from the\n   registry or is not recognized by the speaker, then the\
    \ speaker MUST\n   ignore the sub-TLV.\n"
- title: 4.1.2.  The SR PCE Capability Sub-TLV
  contents:
  - "4.1.2.  The SR PCE Capability Sub-TLV\n   This document defines a new Path Setup\
    \ Type (PST) for SR, as follows:\n      PST = 1:  Traffic-engineering path is\
    \ set up using Segment\n         Routing.\n   A PCEP speaker SHOULD indicate its\
    \ support of the function described\n   in this document by sending a PATH-SETUP-TYPE-CAPABILITY\
    \ TLV in the\n   OPEN object with this new PST included in the PST list.\n   This\
    \ document also defines the SR-PCE-CAPABILITY sub-TLV.  PCEP\n   speakers use\
    \ this sub-TLV to exchange information about their SR\n   capability.  If a PCEP\
    \ speaker includes PST=1 in the PST list of the\n   PATH-SETUP-TYPE-CAPABILITY\
    \ TLV, then it MUST also include the SR-PCE-\n   CAPABILITY sub-TLV inside the\
    \ PATH-SETUP-TYPE-CAPABILITY TLV.\n   The format of the SR-PCE-CAPABILITY sub-TLV\
    \ is shown in the following\n   figure:\n      0                   1         \
    \          2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1\n     |         Type=26               |          \
    \  Length=4           |\n     |         Reserved              |   Flags   |N|X|\
    \      MSD      |\n                 Figure 1: SR-PCE-CAPABILITY Sub-TLV Format\n\
    \   The codepoint for the TLV type is 26.  The TLV length is 4 octets.\n   The\
    \ 32-bit value is formatted as follows.\n   Reserved:  MUST be set to zero by\
    \ the sender and MUST be ignored by\n      the receiver.\n   Flags:  This document\
    \ defines the following flag bits.  The other\n      bits MUST be set to zero\
    \ by the sender and MUST be ignored by the\n      receiver.\n         N:   A PCC\
    \ sets this flag bit to 1 to indicate that it is\n              capable of resolving\
    \ a Node or Adjacency Identifier (NAI)\n              to a SID.\n         X: \
    \  A PCC sets this flag bit to 1 to indicate that it does not\n              impose\
    \ any limit on the MSD.\n   Maximum SID Depth (MSD):  specifies the maximum number\
    \ of SIDs (MPLS\n      label stack depth in the context of this document) that\
    \ a PCC is\n      capable of imposing on a packet.  Section 5.1 explains the\n\
    \      relationship between this field and the X-Flag.\n"
- title: 4.2.  The RP/SRP Object
  contents:
  - "4.2.  The RP/SRP Object\n   To set up an SR-TE LSP using SR, the Request Parameter\
    \ (RP) or\n   Stateful PCE Request Parameter (SRP) object MUST include the PATH-\n\
    \   SETUP-TYPE TLV, specified in [RFC8408], with the PST set to 1 (and\n   path\
    \ setup using SR-TE).\n   The LSP-IDENTIFIERS TLV MAY be present for the above\
    \ PST type.\n"
- title: 4.3.  ERO
  contents:
  - "4.3.  ERO\n   An SR-TE path consists of one or more SIDs where each SID MAY be\n\
    \   associated with the identifier that represents the node or adjacency\n   corresponding\
    \ to the SID.  This identifier is referred to as the NAI.\n   As described later,\
    \ an NAI can be represented in various formats\n   (e.g., IPv4 address, IPv6 address,\
    \ etc).  Furthermore, an NAI is used\n   for troubleshooting purposes and, if\
    \ necessary, to derive a SID value\n   as described below.\n   The ERO specified\
    \ in [RFC5440] is used to carry SR-TE path\n   information.  In order to carry\
    \ a SID and/or NAI, this document\n   defines a new ERO subobject referred to\
    \ as the \"SR-ERO subobject\",\n   whose format is specified in the following\
    \ section.  An ERO carrying\n   an SR-TE path consists of one or more ERO subobjects,\
    \ and it MUST\n   carry only SR-ERO subobjects.  Note that an SR-ERO subobject\
    \ does not\n   need to have both the SID and NAI.  However, at least one of them\n\
    \   MUST be present.\n   When building the MPLS label stack from ERO, a PCC MUST\
    \ assume that\n   SR-ERO subobjects are organized as a last-in-first-out stack.\
    \  The\n   first subobject relative to the beginning of ERO contains the\n   information\
    \ about the topmost label.  The last subobject contains\n   information about\
    \ the bottommost label.\n"
- title: 4.3.1.  SR-ERO Subobject
  contents:
  - "4.3.1.  SR-ERO Subobject\n   An SR-ERO subobject is formatted as shown in the\
    \ following diagram.\n      0                   1                   2        \
    \           3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1\n     |L|   Type=36   |     Length    |  NT   |     Flags     |F|S|C|M|\n\
    \     |                         SID (optional)                        |\n    \
    \ //                   NAI (variable, optional)                  //\n        \
    \             Figure 2: SR-ERO Subobject Format\n   The fields in the SR-ERO subobject\
    \ are as follows:\n   The L-Flag:  Indicates whether the subobject represents\
    \ a loose hop\n      in the LSP [RFC3209].  If this flag is set to zero, a PCC\
    \ MUST NOT\n      overwrite the SID value present in the SR-ERO subobject.\n \
    \     Otherwise, a PCC MAY expand or replace one or more SID values in\n     \
    \ the received SR-ERO based on its local policy.\n   Type:  Set to 36.\n   Length:\
    \  Contains the total length of the subobject in octets.  The\n      Length MUST\
    \ be at least 8 and MUST be a multiple of 4.  An SR-ERO\n      subobject MUST\
    \ contain at least one SID or NAI.  The flags\n      described below indicate\
    \ whether the SID or NAI fields are absent.\n   NAI Type (NT):  Indicates the\
    \ type and format of the NAI contained in\n      the object body, if any is present.\
    \  If the F bit is set to zero\n      (see below), then the NT field has no meaning\
    \ and MUST be ignored\n      by the receiver.  This document describes the following\
    \ NT values:\n      NT=0  The NAI is absent.\n      NT=1  The NAI is an IPv4 node\
    \ ID.\n      NT=2  The NAI is an IPv6 node ID.\n      NT=3  The NAI is an IPv4\
    \ adjacency.\n      NT=4  The NAI is an IPv6 adjacency with global IPv6 addresses.\n\
    \      NT=5  The NAI is an unnumbered adjacency with IPv4 node IDs.\n      NT=6\
    \  The NAI is an IPv6 adjacency with link-local IPv6 addresses.\n   Flags:  Used\
    \ to carry additional information pertaining to the SID.\n      This document\
    \ defines the following flag bits.  The other bits\n      MUST be set to zero\
    \ by the sender and MUST be ignored by the\n      receiver.\n      M:   If this\
    \ bit is set to 1, the SID value represents an MPLS\n           label stack entry\
    \ as specified in [RFC3032].  Otherwise, the\n           SID value is an administratively\
    \ configured value that\n           represents an index into an MPLS label space\
    \ (either SRGB or\n           SRLB) per [RFC8402].\n      C:   If the M bit and\
    \ the C bit are both set to 1, then the TC, S,\n           and TTL fields in the\
    \ MPLS label stack entry are specified by\n           the PCE.  However, a PCC\
    \ MAY choose to override these values\n           according to its local policy\
    \ and MPLS forwarding rules.  If\n           the M bit is set to 1 but the C bit\
    \ is set to zero, then the\n           TC, S, and TTL fields MUST be ignored by\
    \ the PCC.  The PCC\n           MUST set these fields according to its local policy\
    \ and MPLS\n           forwarding rules.  If the M bit is set to zero, then the\
    \ C\n           bit MUST be set to zero.\n      S:   When this bit is set to 1,\
    \ the SID value in the subobject\n           body is absent.  In this case, the\
    \ PCC is responsible for\n           choosing the SID value, e.g., by looking\
    \ it up in the SR-DB\n           using the NAI that, in this case, MUST be present\
    \ in the\n           subobject.  If the S bit is set to 1, then the M and C bits\n\
    \           MUST be set to zero.\n      F:   When this bit is set to 1, the NAI\
    \ value in the subobject\n           body is absent.  The F bit MUST be set to\
    \ 1 if NT=0;\n           otherwise, it MUST be set to zero.  The S and F bits\
    \ MUST NOT\n           both be set to 1.\n   SID:  The Segment Identifier.  Depending\
    \ on the M bit, it contains\n      either:\n      *  A 4-octet index defining\
    \ the offset into an MPLS label space\n         per [RFC8402] or\n      *  A 4-octet\
    \ MPLS label stack entry, where the 20 most significant\n         bits encode\
    \ the label value per [RFC3032].\n   NAI:  The NAI associated with the SID.  The\
    \ NAI's format depends on\n      the value in the NT field and is described in\
    \ the following\n      section.\n   At least one SID and NAI MUST be included\
    \ in the SR-ERO subobject,\n   and both MAY be included.\n"
- title: 4.3.2.  NAI Associated with SID
  contents:
  - "4.3.2.  NAI Associated with SID\n   This document defines the following NAIs:\n\
    \   IPv4 Node ID:  Specified as an IPv4 address.  In this case, the NT\n     \
    \ value is 1, and the NAI field length is 4 octets.\n   IPv6 Node ID:  Specified\
    \ as an IPv6 address.  In this case, the NT\n      value is 2, and the NAI field\
    \ length is 16 octets.\n   IPv4 Adjacency:  Specified as a pair of IPv4 addresses.\
    \  In this\n      case, the NT value is 3, and the NAI field length is 8 octets.\n\
    \      The format of the NAI is shown in the following figure:\n        0    \
    \               1                   2                   3\n        0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n       |              \
    \        Local IPv4 address                       |\n       |                \
    \     Remote IPv4 address                       |\n                       Figure\
    \ 3: NAI for IPv4 Adjacency\n   IPv6 Global Adjacency:  Specified as a pair of\
    \ global IPv6 addresses.\n      It is used to describe an IPv6 adjacency for a\
    \ link that uses\n      global IPv6 addresses.  Each global IPv6 address is configured\
    \ on\n      a specific router interface, so together they identify an\n      adjacency\
    \ between a pair of routers.  In this case, the NT value\n      is 4, and the\
    \ NAI field length is 32 octets.  The format of the\n      NAI is shown in the\
    \ following figure:\n        0                   1                   2       \
    \            3\n        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1\n       //               Local IPv6 address (16 octets)          \
    \      //\n       //               Remote IPv6 address (16 octets)           \
    \    //\n                   Figure 4: NAI for IPv6 Global Adjacency\n   Unnumbered\
    \ Adjacency with IPv4 NodeIDs:  Specified as a pair of (node\n      ID, interface\
    \ ID) tuples.  In this case, the NT value is 5, and\n      the NAI field length\
    \ is 16 octets.  The format of the NAI is shown\n      in the following figure:\n\
    \        0                   1                   2                   3\n     \
    \   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n       |\
    \                      Local Node ID                            |\n       |  \
    \                  Local Interface ID                         |\n       |    \
    \                  Remote Node ID                           |\n       |      \
    \             Remote Interface ID                         |\n          Figure\
    \ 5: NAI for Unnumbered Adjacency with IPv4 Node IDs\n   IPv6 Link-Local Adjacency:\
    \  Specified as a pair of (global IPv6\n      address, interface ID) tuples. \
    \ It is used to describe an IPv6\n      adjacency for a link that uses only link-local\
    \ IPv6 addresses.\n      Each global IPv6 address is configured on a specific\
    \ router, so\n      together they identify a pair of adjacent routers.  The interface\n\
    \      IDs identify the link that the adjacency is formed over.  In this\n   \
    \   case, the NT value is 6, and the NAI field length is 40 octets.\n      The\
    \ format of the NAI is shown in the following figure:\n        0             \
    \      1                   2                   3\n        0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n       //               Local IPv6\
    \ address (16 octets)                //\n       |                    Local Interface\
    \ ID                         |\n       //               Remote IPv6 address (16\
    \ octets)               //\n       |                   Remote Interface ID   \
    \                      |\n                 Figure 6: NAI for IPv6 Link-Local Adjacency\n"
- title: 4.4.  RRO
  contents:
  - "4.4.  RRO\n   A PCC reports an SR-TE LSP to a PCE by sending a PCRpt message,\
    \ per\n   [RFC8231].  The RRO on this message represents the SID list that was\n\
    \   applied by the PCC, that is, the actual path taken by the LSP.  The\n   procedures\
    \ of [RFC8231] with respect to the RRO apply equally to this\n   specification\
    \ without change.\n   An RRO contains one or more subobjects called \"SR-RRO subobjects\"\
    ,\n   whose format is shown below:\n     0                   1               \
    \    2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1\n    |    Type=36    |     Length    |  NT   |     Flags \
    \    |F|S|C|M|\n    //                        NAI (variable)                 \
    \      //\n                     Figure 7: SR-RRO Subobject Format\n   The format\
    \ of the SR-RRO subobject is the same as that of the SR-ERO\n   subobject, but\
    \ without the L-Flag.\n   A PCC MUST order the SR-RRO subobjects such that the\
    \ first subobject\n   relative to the beginning of the RRO identifies the first\
    \ segment\n   visited by the SR-TE LSP, and the last subobject identifies the\
    \ final\n   segment of the SR-TE LSP, that is, its endpoint.\n"
- title: 4.5.  METRIC Object
  contents:
  - "4.5.  METRIC Object\n   A PCC MAY request that PCE optimizes an individual path\
    \ computation\n   request to minimize the SID depth of the computed path by using\
    \ the\n   METRIC object defined in [RFC5440].  This document defines a new type\n\
    \   for the METRIC object to be used for this purpose, as follows:\n      T =\
    \ 11:  Maximum SID Depth of the requested path.\n   If the PCC includes a METRIC\
    \ object of this type on a path\n   computation request, then the PCE minimizes\
    \ the SID depth of the\n   computed path.  If the B (bound) bit is set to 1 in\
    \ the METRIC\n   object, then the PCE MUST NOT return a path whose SID depth exceeds\n\
    \   the given metric value.  If the PCC did not set the X-Flag in its SR-\n  \
    \ PCE-CAPABILITY TLV, then it MUST set the B bit to 1.  If the PCC set\n   the\
    \ X-Flag in its SR-PCE-CAPABILITY TLV, then it MAY set the B bit to\n   1 or zero.\n\
    \   If a PCEP session is established with a non-zero default MSD value,\n   then\
    \ the PCC MUST NOT send an MSD METRIC object with an MSD greater\n   than the\
    \ session's default MSD.  If the PCE receives a path\n   computation request with\
    \ an MSD METRIC object on such a session that\n   is greater than the session's\
    \ default MSD, then it MUST consider the\n   request invalid and send a PCEP Error\
    \ (PCErr) with Error-Type = 10\n   (\"Reception of an invalid object\") and Error-value\
    \ = 9 (\"MSD exceeds\n   the default for the PCEP session\").\n"
- title: 5.  Procedures
  contents:
  - '5.  Procedures

    '
- title: 5.1.  Exchanging the SR PCE Capability
  contents:
  - "5.1.  Exchanging the SR PCE Capability\n   A PCC indicates that it is capable\
    \ of supporting the head-end\n   functions for SR-TE LSP by including the SR-PCE-CAPABILITY\
    \ sub-TLV in\n   the Open message that it sends to a PCE.  A PCE indicates that\
    \ it is\n   capable of computing SR-TE paths by including the SR-PCE-CAPABILITY\n\
    \   sub-TLV in the Open message that it sends to a PCC.\n   If a PCEP speaker\
    \ receives a PATH-SETUP-TYPE-CAPABILITY TLV with a\n   PST list containing PST=1,\
    \ and supports that path setup type, then it\n   checks for the presence of the\
    \ SR-PCE-CAPABILITY sub-TLV.  If that\n   sub-TLV is absent, then the PCEP speaker\
    \ MUST send a PCErr message\n   with Error-Type = 10 (\"Reception of an invalid\
    \ object\") and Error-\n   value = 12 (\"Missing PCE-SR-CAPABILITY sub-TLV\")\
    \ and MUST then close\n   the PCEP session.  If a PCEP speaker receives a PATH-SETUP-TYPE-\n\
    \   CAPABILITY TLV with a SR-PCE-CAPABILITY sub-TLV, but the PST list\n   does\
    \ not contain PST=1, then the PCEP speaker MUST ignore the SR-PCE-\n   CAPABILITY\
    \ sub-TLV.\n   If a PCC sets the N-Flag to 1, then the PCE MAY send an SR-ERO\n\
    \   subobject containing an NAI and no SID (see Section 5.2).  Otherwise,\n  \
    \ the PCE MUST NOT send an SR-ERO subobject containing an NAI and no\n   SID.\n\
    \   The number of SIDs that can be imposed on a packet depends on the\n   PCC's\
    \ data-plane capability.  If a PCC sets the X-Flag to 1, then the\n   MSD is not\
    \ used and MUST be set to zero.  If a PCE receives an SR-\n   PCE-CAPABILITY sub-TLV\
    \ with the X-Flag set to 1, then it MUST ignore\n   the MSD field and assume that\
    \ the sender can impose a SID stack of\n   any depth.  If a PCC sets the X-Flag\
    \ to zero, then it sets the MSD\n   field to the maximum number of SIDs that it\
    \ can impose on a packet.\n   In this case, the PCC MUST set the MSD to a number\
    \ greater than zero.\n   If a PCE receives an SR-PCE-CAPABILITY sub-TLV with the\
    \ X-Flag and\n   MSD both set to zero, then it MUST send a PCErr message with\
    \ Error-\n   Type = 10 (\"Reception of an invalid object\") and Error-value =\
    \ 21\n   (\"Maximum SID depth must be non-zero\") and MUST then close the PCEP\n\
    \   session.\n   Note that the MSD value exchanged via the SR-PCE-CAPABILITY sub-TLV\n\
    \   indicates the SID/label imposition limit for the PCC node.  It is\n   anticipated\
    \ that, in many deployments, the PCCs will have network\n   interfaces that are\
    \ homogeneous with respect to MSD (that is, each\n   interface has the same MSD).\
    \  In such cases, having a per-node MSD on\n   the PCEP session is sufficient;\
    \ the PCE SHOULD interpret this to mean\n   that all network interfaces on the\
    \ PCC have the given MSD.  However,\n   the PCE MAY also learn a per-node MSD\
    \ and a per-interface MSD from\n   the routing protocols, as specified in [RFC8491],\
    \ [RFC8476], and\n   [MSD-BGP].  If the PCE learns the per-node MSD of a PCC from\
    \ a\n   routing protocol, then it MUST ignore the per-node MSD value in the\n\
    \   SR-PCE-CAPABILITY sub-TLV and use the per-node MSD learned from the\n   routing\
    \ protocol instead.  If the PCE learns the MSD of a network\n   interface on a\
    \ PCC from a routing protocol, then it MUST use the per-\n   interface MSD instead\
    \ of the MSD value in the SR-PCE-CAPABILITY sub-\n   TLV when it computes a path\
    \ that uses that interface.\n   Once an SR-capable PCEP session is established\
    \ with a non-zero MSD\n   value, the corresponding PCE MUST NOT send SR-TE paths\
    \ with a number\n   of SIDs exceeding that MSD value.  If a PCC needs to modify\
    \ the MSD\n   value, it MUST close the PCEP session and re-establish it with the\n\
    \   new MSD value.  If a PCEP session is established with a non-zero MSD\n   value,\
    \ and the PCC receives an SR-TE path containing more SIDs than\n   specified in\
    \ the MSD value, the PCC MUST send a PCErr message with\n   Error-Type = 10 (\"\
    Reception of an invalid object\") and Error-value =\n   3 (\"Unsupported number\
    \ of SR-ERO subobjects\").  If a PCEP session is\n   established with an MSD value\
    \ of zero, then the PCC MAY specify an\n   MSD for each path computation request\
    \ that it sends to the PCE, by\n   including a \"maximum SID depth\" METRIC object\
    \ on the request, as\n   defined in Section 4.5.\n   The N-Flag, X-Flag, and MSD\
    \ value inside the SR-PCE-CAPABILITY sub-\n   TLV are meaningful only in the Open\
    \ message sent from a PCC to a PCE.\n   As such, a PCE MUST set the N-Flag to\
    \ zero, X-Flag to 1, and MSD\n   value to zero in an outbound message to a PCC.\
    \  Similarly, a PCC MUST\n   ignore any MSD value received from a PCE.  If a PCE\
    \ receives multiple\n   SR-PCE-CAPABILITY sub-TLVs in an Open message, it processes\
    \ only the\n   first sub-TLV received.\n"
- title: 5.2.  ERO Processing
  contents:
  - '5.2.  ERO Processing

    '
- title: 5.2.1.  SR-ERO Validation
  contents:
  - "5.2.1.  SR-ERO Validation\n   If a PCC does not support the SR PCE Capability\
    \ and thus cannot\n   recognize the SR-ERO or SR-RRO subobjects, it will respond\
    \ according\n   to the rules for a malformed object per [RFC5440].\n   On receiving\
    \ an SR-ERO, a PCC MUST validate that the Length field, S\n   bit, F bit, and\
    \ NT field are consistent, as follows.\n   *  If NT=0, the F bit MUST be 1, the\
    \ S bit MUST be zero, and the\n      Length MUST be 8.\n   *  If NT=1, the F bit\
    \ MUST be zero.  If the S bit is 1, the Length\n      MUST be 8; otherwise, the\
    \ Length MUST be 12.\n   *  If NT=2, the F bit MUST be zero.  If the S bit is\
    \ 1, the Length\n      MUST be 20; otherwise, the Length MUST be 24.\n   *  If\
    \ NT=3, the F bit MUST be zero.  If the S bit is 1, the Length\n      MUST be\
    \ 12; otherwise, the Length MUST be 16.\n   *  If NT=4, the F bit MUST be zero.\
    \  If the S bit is 1, the Length\n      MUST be 36; otherwise, the Length MUST\
    \ be 40.\n   *  If NT=5, the F bit MUST be zero.  If the S bit is 1, the Length\n\
    \      MUST be 20; otherwise, the Length MUST be 24.\n   *  If NT=6, the F bit\
    \ MUST be zero.  If the S bit is 1, the Length\n      MUST be 44; otherwise, the\
    \ Length MUST be 48.\n   If a PCC finds that the NT field, Length field, S bit,\
    \ and F bit are\n   not consistent, it MUST consider the entire ERO invalid and\
    \ MUST send\n   a PCErr message with Error-Type = 10 (\"Reception of an invalid\n\
    \   object\") and Error-value = 11 (\"Malformed object\").\n   If a PCC does not\
    \ recognize or support the value in the NT field, it\n   MUST consider the entire\
    \ ERO invalid and MUST send a PCErr message\n   with Error-Type = 10 (\"Reception\
    \ of an invalid object\") and Error-\n   value = 13 (\"Unsupported NAI Type in\
    \ the SR-ERO/SR-RRO subobject\").\n   If a PCC receives an SR-ERO subobject in\
    \ which the S and F bits are\n   both set to 1 (that is, both the SID and NAI\
    \ are absent), it MUST\n   consider the entire ERO invalid and send a PCErr message\
    \ with Error-\n   Type = 10 (\"Reception of an invalid object\") and Error-value\
    \ = 6\n   (\"Both SID and NAI are absent in the SR-ERO subobject\").\n   If a\
    \ PCC receives an SR-ERO subobject in which the S bit is set to 1\n   and the\
    \ F bit is set to zero (that is, the SID is absent and the NAI\n   is present),\
    \ but the PCC does not support NAI resolution, it MUST\n   consider the entire\
    \ ERO invalid and send a PCErr message with Error-\n   Type = 4 (\"Not supported\
    \ object\") and Error-value = 4 (\"Unsupported\n   parameter\").\n   If a PCC\
    \ receives an SR-ERO subobject in which the S bit is set to 1\n   and either (or\
    \ both) the M bit or the C bit is set to 1, it MUST\n   consider the entire ERO\
    \ invalid and send a PCErr message with Error-\n   Type = 10 (\"Reception of an\
    \ invalid object\") and Error-value = 11\n   (\"Malformed object\").\n   If a\
    \ PCC receives an SR-ERO subobject in which the S bit is set to\n   zero and the\
    \ M bit is set to 1, then the subobject contains an MPLS\n   label.  The PCC MAY\
    \ choose not to accept a label provided by the PCE,\n   based on its local policy.\
    \  The PCC MUST NOT accept MPLS label value\n   3 (Implicit NULL), but it MAY\
    \ accept other special-purpose MPLS label\n   values.  If the PCC decides not\
    \ to accept an MPLS label value, it\n   MUST send a PCErr message with Error-Type\
    \ = 10 (\"Reception of an\n   invalid object\") and Error-value = 2 (\"Bad label\
    \ value\").\n   If both the M and C bits of an SR-ERO subobject are set to 1,\
    \ and if\n   a PCC finds an erroneous setting in one or more of the TC, S, and\
    \ TTL\n   fields, it MAY overwrite those fields with values chosen according to\n\
    \   its own policy.  If the PCC does not overwrite them, it MUST send a\n   PCErr\
    \ message with Error-Type = 10 (\"Reception of an invalid object\")\n   and Error-value\
    \ = 4 (\"Bad label format\").\n   If the M bit of an SR-ERO subobject is set to\
    \ zero but the C bit is\n   set to 1, then the PCC MUST consider the entire ERO\
    \ invalid and MUST\n   send a PCErr message with Error-Type = 10 (\"Reception\
    \ of an invalid\n   object\") and Error-value = 11 (\"Malformed object\").\n \
    \  If a PCC receives an SR-ERO subobject in which the S bit is set to\n   zero\
    \ and the M bit is set to zero, then the subobject contains a SID\n   index value.\
    \  If the SID is an Adj-SID, then the L-Flag MUST NOT be\n   set.  If the L-Flag\
    \ is set for an Adj-SID, then the PCC MUST send a\n   PCErr message with Error-Type\
    \ = 10 (\"Reception of an invalid object\")\n   and Error-value = 11 (\"Malformed\
    \ object\").\n   If a PCC detects that the subobjects of an ERO are a mixture\
    \ of SR-\n   ERO subobjects and subobjects of other types, then it MUST send a\n\
    \   PCErr message with Error-Type = 10 (\"Reception of an invalid object\")\n\
    \   and Error-value = 5 (\"ERO mixes SR-ERO subobjects with other\n   subobject\
    \ types\").\n   The SR-ERO subobjects can be classified according to whether they\n\
    \   contain a SID representing an MPLS label value or an index value, or\n   no\
    \ SID.  If a PCC detects that the SR-ERO subobjects are a mixture of\n   more\
    \ than one of these types, then it MUST send a PCErr message with\n   Error-Type\
    \ = 10 (\"Reception of an invalid object\") and Error-value =\n   20 (\"Inconsistent\
    \ SIDs in SR-ERO/SR-RRO subobjects\").\n   If an ERO specifies a new SR-TE path\
    \ for an existing LSP and the PCC\n   determines that the ERO contains SR-ERO\
    \ subobjects that are not\n   valid, then the PCC MUST NOT update the LSP.\n"
- title: 5.2.2.  Interpreting the SR-ERO
  contents:
  - "5.2.2.  Interpreting the SR-ERO\n   The SR-ERO contains a sequence of subobjects.\
    \  Each SR-ERO subobject\n   in the sequence identifies a segment that the traffic\
    \ will be\n   directed to, in the order given.  That is, the first subobject\n\
    \   identifies the first segment the traffic will be directed to, the\n   second\
    \ subobject represents the second segment, and so on.\n   The PCC interprets the\
    \ SR-ERO by converting it to an MPLS label stack\n   plus a next hop.  The PCC\
    \ sends packets along the segment-routed path\n   by prepending the MPLS label\
    \ stack onto the packets and sending the\n   resulting, modified packet to the\
    \ next hop.\n   The PCC uses a different procedure to do this conversion, depending\n\
    \   on the information that the PCE has provided in the subobjects.\n   *  If\
    \ the subobjects contain SID index values, then the PCC converts\n      them into\
    \ the corresponding MPLS labels by following the procedure\n      defined in [RFC8660].\n\
    \   *  If the subobjects contain NAIs only, the PCC first converts each\n    \
    \  NAI into a SID index value and then proceeds as above.  To convert\n      an\
    \ NAI to a SID index, the PCC looks for a fully specified prefix\n      or adjacency\
    \ matching the fields in the NAI.  If the PCC finds a\n      matching prefix/adjacency,\
    \ and the matching prefix/adjacency has a\n      SID associated with it, then\
    \ the PCC uses that SID.  If the PCC\n      cannot find a matching prefix/adjacency,\
    \ or if the matching\n      prefix/adjacency has no SID associated with it, the\
    \ PCC behaves as\n      specified in Section 5.2.2.1.\n   *  If the subobjects\
    \ contain MPLS labels, then the PCC looks up the\n      offset of the first subobject's\
    \ label in its SRGB or SRLB.  This\n      gives the first SID.  The PCC pushes\
    \ the labels in any remaining\n      subobjects onto the packet (with the final\
    \ subobject specifying\n      the bottom-of-stack label).\n   For all cases above,\
    \ after the PCC has imposed the label stack on the\n   packet, it sends the packet\
    \ to the segment identified by the first\n   SID.\n"
- title: 5.2.2.1.  Handling Errors During SR-ERO Conversion
  contents:
  - "5.2.2.1.  Handling Errors During SR-ERO Conversion\n   There are several errors\
    \ that can occur during the process of\n   converting an SR-ERO sequence to an\
    \ MPLS label stack and a next hop.\n   The PCC deals with them as follows.\n \
    \  *  If the PCC cannot find a SID index in the SR-DB, it MUST send a\n      PCErr\
    \ message with Error-Type = 10 (\"Reception of an invalid\n      object\") and\
    \ Error-value = 14 (\"Unknown SID\").\n   *  If the PCC cannot find an NAI in\
    \ the SR-DB, it MUST send a PCErr\n      message with Error-Type = 10 (\"Reception\
    \ of an invalid object\")\n      and Error-value = 15 (\"NAI cannot be resolved\
    \ to a SID\").\n   *  If the PCC needs to convert a SID into an MPLS label value\
    \ but\n      cannot find the corresponding router's SRGB in the SR-DB, it MUST\n\
    \      send a PCErr message with Error-Type = 10 (\"Reception of an\n      invalid\
    \ object\") and Error-value = 16 (\"Could not find SRGB\").\n   *  If the PCC\
    \ finds that a router's SRGB is not large enough for a\n      SID index value,\
    \ it MUST send a PCErr message with Error-Type = 10\n      (\"Reception of an\
    \ invalid object\") and Error-value = 17 (\"SID\n      index exceeds SRGB size\"\
    ).\n   *  If the PCC needs to convert a SID into an MPLS label value but\n   \
    \   cannot find the corresponding router's SRLB in the SR-DB, it MUST\n      send\
    \ a PCErr message with Error-Type = 10 (\"Reception of an\n      invalid object\"\
    ) and Error-value = 18 (\"Could not find SRLB\").\n   *  If the PCC finds that\
    \ a router's SRLB is not large enough for a\n      SID index value, it MUST send\
    \ a PCErr message with Error-Type = 10\n      (\"Reception of an invalid object\"\
    ) and Error-value = 19 (\"SID\n      index exceeds SRLB size\").\n   *  If the\
    \ number of labels in the computed label stack exceeds the\n      maximum number\
    \ of SIDs that the PCC can impose on the packet, it\n      MUST send a PCErr message\
    \ with Error-Type = 10 (\"Reception of an\n      invalid object\") and Error-value\
    \ = 3 (\"Unsupported number of SR-\n      ERO subobjects\").\n   If an ERO specifies\
    \ a new SR-TE path for an existing LSP and the PCC\n   encounters an error while\
    \ processing the ERO, then the PCC MUST NOT\n   update the LSP.\n"
- title: 5.3.  RRO Processing
  contents:
  - "5.3.  RRO Processing\n   The syntax-checking rules that apply to the SR-RRO subobject\
    \ are\n   identical to those of the SR-ERO subobject, except as noted below.\n\
    \   If a PCEP speaker receives an SR-RRO subobject in which both SID and\n   NAI\
    \ are absent, it MUST consider the entire RRO invalid and send a\n   PCErr message\
    \ with Error-Type = 10 (\"Reception of an invalid object\")\n   and Error-value\
    \ = 7 (\"Both SID and NAI are absent in the SR-RRO\n   subobject\").\n   If a\
    \ PCE detects that the subobjects of an RRO are a mixture of SR-\n   RRO subobjects\
    \ and subobjects of other types, then it MUST send a\n   PCErr message with Error-Type\
    \ = 10 (\"Reception of an invalid object\")\n   and Error-value = 10 (\"RRO mixes\
    \ SR-RRO subobjects with other\n   subobject types\").\n   The SR-RRO subobjects\
    \ can be classified according to whether they\n   contain a SID representing an\
    \ MPLS label value or an index value, or\n   no SID.  If a PCE detects that the\
    \ SR-RRO subobjects are a mixture of\n   more than one of these types, then it\
    \ MUST send a PCErr message with\n   Error-Type = 10 (\"Reception of an invalid\
    \ object\") and Error-value =\n   20 (\"Inconsistent SIDs in SR-ERO / SR-RRO subobjects\"\
    ).\n"
- title: 6.  Management Considerations
  contents:
  - "6.  Management Considerations\n   This document adds a new path setup type to\
    \ PCEP to allow LSPs to be\n   set up using Segment Routing techniques.  This\
    \ path setup type may be\n   used with PCEP alongside other path setup types,\
    \ such as RSVP-TE, or\n   it may be used exclusively.\n"
- title: 6.1.  Controlling the Path Setup Type
  contents:
  - "6.1.  Controlling the Path Setup Type\n   The following factors control which\
    \ path setup type is used for a\n   given LSP.\n   *  The available path setup\
    \ types are constrained to those that are\n      supported by, or enabled on,\
    \ the PCEP speakers.  The PATH-SETUP-\n      TYPE-CAPABILITY TLV indicates which\
    \ path setup types a PCEP\n      speaker supports.  To use Segment Routing as\
    \ a path setup type, it\n      is a prerequisite that the PCC and PCE both include\
    \ PST=1 in the\n      list of supported path setup types in this TLV and also\
    \ include\n      the SR-PCE-CAPABILITY sub-TLV.\n   *  When a PCE initiates an\
    \ LSP, it proposes which path setup type to\n      use by including it in the\
    \ PATH-SETUP-TYPE TLV in the SRP object\n      of the PCInitiate message.  The\
    \ PCE chooses the path setup type\n      based on the capabilities of the network\
    \ nodes on the path and on\n      its local policy.  The PCC MAY choose to accept\
    \ the proposed path\n      setup type or to reject the PCInitiate request, based\
    \ on its local\n      policy.\n   *  When a PCC requests a path for an LSP, it\
    \ can nominate a preferred\n      path setup type by including it in the PATH-SETUP-TYPE\
    \ TLV in the\n      RP object of the PCReq message.  The PCE MAY choose to reply\
    \ with\n      a path of the requested type, reply with a path of a different\n\
    \      type, or reject the request, based on the capabilities of the\n      network\
    \ nodes on the path and on its local policy.\n   The operator can influence the\
    \ path setup type as follows.\n   *  Implementations MUST allow the operator to\
    \ enable and disable the\n      Segment Routing path setup type on a PCEP-speaking\
    \ device.\n      Implementations MAY also allow the operator to enable and disable\n\
    \      the RSVP-TE path setup type.\n   *  PCE implementations MUST allow the\
    \ operator to specify that an LSP\n      should be instantiated using Segment\
    \ Routing or RSVP-TE as the\n      proposed path setup type.\n   *  PCE implementations\
    \ MAY allow the operator to configure a\n      preference for the PCE to propose\
    \ paths using Segment Routing or\n      RSVP-TE in the absence of a specified\
    \ path setup type.\n   *  PCC implementations MUST allow the operator to specify\
    \ that a path\n      requested for an LSP nominates Segment Routing or RSVP-TE\
    \ as the\n      path setup type.\n   *  PCC implementations MAY allow the operator\
    \ to configure a\n      preference for the PCC to nominate Segment Routing or\
    \ RSVP-TE as\n      the path setup type if none is specified for an LSP.\n   *\
    \  PCC implementations SHOULD allow the operator to configure a PCC\n      to\
    \ refuse to set up an LSP using an undesired path setup type.\n"
- title: 6.2.  Migrating a Network to Use PCEP Segment-Routed Paths
  contents:
  - "6.2.  Migrating a Network to Use PCEP Segment-Routed Paths\n   This section discusses\
    \ the steps that the operator takes when\n   migrating a network to enable PCEP\
    \ to set up paths using Segment\n   Routing as the path setup type.\n   *  The\
    \ operator enables the Segment Routing PST on the PCE servers.\n   *  The operator\
    \ enables the Segment Routing PST on the PCCs.\n   *  The operator resets each\
    \ PCEP session.  The PCEP sessions come\n      back up with Segment Routing enabled.\n\
    \   *  If the operator detects a problem, they can roll the network back\n   \
    \   to its initial state by disabling the Segment Routing PST on the\n      PCEP\
    \ speakers and resetting the PCEP sessions.\n   Note that the data plane is unaffected\
    \ if a PCEP session is reset.\n   Any LSPs that were set up before the session\
    \ reset will remain in\n   place and will still be present after the session comes\
    \ back up.\n   An implementation SHOULD allow the operator to manually trigger\
    \ a\n   PCEP session to be reset.\n   An implementation MAY automatically reset\
    \ a PCEP session when an\n   operator reconfigures the PCEP speaker's capabilities.\
    \  However, note\n   that if the capabilities at both ends of the PCEP session\
    \ are not\n   reconfigured simultaneously, then the session could be reset twice,\n\
    \   which could lead to unnecessary network traffic.  Therefore, such\n   implementations\
    \ SHOULD allow the operator to override this behavior\n   and wait instead for\
    \ a manual reset.\n   Once Segment Routing is enabled on a PCEP session, it can\
    \ be used as\n   the path setup type for future LSPs.\n   User traffic is not\
    \ automatically migrated from existing LSPs onto\n   segment-routed LSPs just\
    \ by enabling the Segment Routing PST in PCEP.\n   The migration of user traffic\
    \ from existing LSPs onto Segment Routing\n   LSPs is beyond the scope of this\
    \ document.\n"
- title: 6.3.  Verification of Network Operation
  contents:
  - "6.3.  Verification of Network Operation\n   The operator needs the following\
    \ information to verify that PCEP is\n   operating correctly with respect to the\
    \ Segment Routing path setup\n   type.\n   *  An implementation SHOULD allow the\
    \ operator to view whether the\n      PCEP speaker sent the Segment Routing PST\
    \ capability to its peer.\n      If the PCEP speaker is a PCC, then the implementation\
    \ SHOULD also\n      allow the operator to view the values of the L-Flag and N-Flag\n\
    \      that were sent and the value of the MSD field that was sent.\n   *  An\
    \ implementation SHOULD allow the operator to view whether the\n      peer sent\
    \ the Segment Routing PST capability.  If the peer is a\n      PCC, then the implementation\
    \ SHOULD also allow the operator to\n      view the values of the L-Flag and N-Flag\
    \ and MSD fields that the\n      peer sent.\n   *  An implementation SHOULD allow\
    \ the operator to view whether the\n      Segment Routing PST is enabled on the\
    \ PCEP session.\n   *  If one PCEP speaker advertises the Segment Routing PST\
    \ capability,\n      but the other does not, then the implementation SHOULD create\
    \ a\n      log to inform the operator of the capability mismatch.\n   *  An implementation\
    \ SHOULD allow the operator to view the PST that\n      was proposed, or requested,\
    \ for an LSP and the PST that was\n      actually used.\n   *  If a PCEP speaker\
    \ decides to use a different PST to the one that\n      was proposed, or requested,\
    \ for an LSP, then the implementation\n      SHOULD create a log to inform the\
    \ operator that the expected PST\n      has not been used.  The log SHOULD give\
    \ the reason for this choice\n      (local policy, equipment capability, etc.).\n\
    \   *  If a PCEP speaker rejects a Segment Routing path, then it SHOULD\n    \
    \  create a log to inform the operator, giving the reason for the\n      decision\
    \ (local policy, MSD exceeded, etc.).\n"
- title: 6.4.  Relationship to Existing Management Models
  contents:
  - "6.4.  Relationship to Existing Management Models\n   The PCEP YANG module is\
    \ defined in [PCE-PCEP-YANG].  In the future,\n   this YANG module should be extended\
    \ or augmented to provide the\n   following additional information relating to\
    \ Segment Routing:\n   *  The advertised PST capabilities and MSD per PCEP session.\n\
    \   *  The PST configured for, and used by, each LSP.\n   The PCEP MIB [RFC7420]\
    \ could also be updated to include this\n   information.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   The security considerations described in [RFC5440],\
    \ [RFC8231],\n   [RFC8281], and [RFC8408] are applicable to this specification.\
    \  No\n   additional security measures are required.\n   Note that this specification\
    \ enables a network controller to\n   instantiate a path in the network without\
    \ the use of a hop-by-hop\n   signaling protocol (such as RSVP-TE).  This creates\
    \ an additional\n   vulnerability if the security mechanisms of [RFC5440], [RFC8231],\
    \ and\n   [RFC8281] are not used.  If there is no integrity protection on the\n\
    \   session, then an attacker could create a path that is not subjected\n   to\
    \ the further verification checks that would be performed by the\n   signaling\
    \ protocol.\n   Note that this specification adds the MSD field to the Open message\n\
    \   (see Section 4.1.2), which discloses how many MPLS labels the sender\n   can\
    \ push onto packets that it forwards into the network.  If the\n   security mechanisms\
    \ of [RFC8231] and [RFC8281] are not used with\n   strong encryption, then an\
    \ attacker could use this new field to gain\n   intelligence about the capabilities\
    \ of the edge devices in the\n   network.\n"
- title: 8.  IANA Considerations
  contents:
  - '8.  IANA Considerations

    '
- title: 8.1.  PCEP ERO and RRO Subobjects
  contents:
  - "8.1.  PCEP ERO and RRO Subobjects\n   This document defines a new subobject type\
    \ for the PCEP ERO and a new\n   subobject type for the PCEP RRO.  The codepoints\
    \ for subobject types\n   of these objects are maintained in the \"Resource Reservation\
    \ Protocol\n   (RSVP) Parameters\" registry, under the EXPLICIT_ROUTE and\n  \
    \ ROUTE_RECORD objects, respectively.\n       | Object         | Subobject   \
    \           | Subobject Type |\n       | EXPLICIT_ROUTE | SR-ERO (PCEP specific)\
    \ | 36             |\n       | ROUTE_RECORD   | SR-RRO (PCEP specific) | 36  \
    \           |\n"
- title: 8.2.  New NAI Type Registry
  contents:
  - "8.2.  New NAI Type Registry\n   IANA has created a new sub-registry within the\
    \ \"Path Computation\n   Element Protocol (PCEP) Numbers\" registry called \"\
    PCEP SR-ERO NAI\n   Types\".  The allocation policy for this new registry is by\
    \ IETF\n   Review [RFC8126].  The new registry contains the following values:\n\
    \         | Value | Description                   | Reference     |\n        \
    \ | 0     | NAI is absent.                | This document |\n         | 1    \
    \ | NAI is an IPv4 node ID.       | This document |\n         | 2     | NAI is\
    \ an IPv6 node ID.       | This document |\n         | 3     | NAI is an IPv4\
    \ adjacency.     | This document |\n         | 4     | NAI is an IPv6 adjacency\
    \ with | This document |\n         |       | global IPv6 addresses.        | \
    \              |\n         | 5     | NAI is an unnumbered          | This document\
    \ |\n         |       | adjacency with IPv4 node IDs. |               |\n    \
    \     | 6     | NAI is an IPv6 adjacency with | This document |\n         |  \
    \     | link-local IPv6 addresses.    |               |\n         | 7-15  | Unassigned\
    \                    |               |\n"
- title: 8.3.  New SR-ERO Flag Registry
  contents:
  - "8.3.  New SR-ERO Flag Registry\n   IANA has created a new sub-registry, named\
    \ \"SR-ERO Flag Field\",\n   within the \"Path Computation Element Protocol (PCEP)\
    \ Numbers\"\n   registry to manage the Flag field of the SR-ERO subobject.  New\n\
    \   values are to be assigned by Standards Action [RFC8126].  Each bit\n   should\
    \ be tracked with the following qualities:\n   *  Bit number (counting from bit\
    \ 0 as the most significant bit)\n   *  Capability description\n   *  Defining\
    \ RFC\n   The following values are defined in this document:\n         | Bit |\
    \ Description                     | Reference     |\n         | 0-7 | Unassigned\
    \                      |               |\n         |  8  | NAI is absent (F) \
    \              | This document |\n         |  9  | SID is absent (S)         \
    \      | This document |\n         |  10 | SID specifies TC, S, and TTL in | This\
    \ document |\n         |     | addition to an MPLS label (C)   |             \
    \  |\n         |  11 | SID specifies an MPLS label (M) | This document |\n"
- title: 8.4.  PCEP-Error Object
  contents:
  - "8.4.  PCEP-Error Object\n   IANA has allocated the following codepoints in the\
    \ \"PCEP-ERROR Object\n   Error Types and Values\" registry for the following\
    \ new Error-values:\n    | Error-Type | Meaning         | Error-value        \
    \             |\n    | 10         | Reception of an |                        \
    \         |\n    |            | invalid object  |                            \
    \     |\n"
- title: 8.5.  PCEP TLV Type Indicators
  contents:
  - "8.5.  PCEP TLV Type Indicators\n   IANA has allocated the following codepoint\
    \ in the \"PCEP TLV Type\n   Indicators\" registry.  Note that this TLV type indicator\
    \ is\n   deprecated but retained in the registry to ensure compatibility with\n\
    \   early implementations of this specification.  See Appendix A for\n   details.\n\
    \        | Value | Meaning                        | Reference     |\n        |\
    \ 26    | SR-PCE-CAPABILITY (deprecated) | This document |\n"
- title: 8.6.  PATH-SETUP-TYPE-CAPABILITY Sub-TLV Type Indicators
  contents:
  - "8.6.  PATH-SETUP-TYPE-CAPABILITY Sub-TLV Type Indicators\n   IANA has created\
    \ a new sub-registry, named \"PATH-SETUP-TYPE-\n   CAPABILITY Sub-TLV Type Indicators\"\
    , within the \"Path Computation\n   Element Protocol (PCEP) Numbers\" registry\
    \ to manage the type\n   indicator space for sub-TLVs of the PATH-SETUP-TYPE-CAPABILITY\
    \ TLV.\n   New values are to be assigned by Standards Action [RFC8126].  The\n\
    \   valid range of values in the registry is 0-65535.  IANA has\n   initialized\
    \ the registry with the following values.  All other values\n   in the registry\
    \ should be marked as \"Unassigned\".\n               | Value | Meaning      \
    \     | Reference     |\n               | 0     | Reserved          | This document\
    \ |\n               | 26    | SR-PCE-CAPABILITY | This document |\n"
- title: 8.7.  New Path Setup Type
  contents:
  - "8.7.  New Path Setup Type\n   A sub-registry within the \"Path Computation Element\
    \ Protocol (PCEP)\n   Numbers\" registry called \"PCEP Path Setup Types\" was\
    \ created in\n   [RFC8408].  IANA has allocated a new codepoint within this registry,\n\
    \   as follows:\n           | Value | Description                   | Reference\
    \ |\n           | 1     | Traffic-engineering path is   | This      |\n      \
    \     |       | set up using Segment Routing. | document  |\n"
- title: 8.8.  New Metric Type
  contents:
  - "8.8.  New Metric Type\n   IANA has allocated the following codepoint in the PCEP\
    \ \"METRIC Object\n   T Field\" registry:\n            | Value | Description \
    \            | Reference     |\n            | 11    | Segment-ID (SID) Depth.\
    \ | This document |\n"
- title: 8.9.  SR PCE Capability Flags
  contents:
  - "8.9.  SR PCE Capability Flags\n   IANA has created a new sub-registry, named\
    \ \"SR Capability Flag\n   Field\", within the \"Path Computation Element Protocol\
    \ (PCEP) Numbers\"\n   registry to manage the Flag field of the SR-PCE-CAPABILITY\
    \ TLV.  New\n   values are to be assigned by Standards Action [RFC8126].  Each\
    \ bit\n   should be tracked with the following qualities:\n   *  Bit number (counting\
    \ from bit 0 as the most significant bit)\n   *  Capability description\n   *\
    \  Defining RFC\n   The following values are defined in this document:\n     \
    \       | Bit | Description                  | Reference |\n            | 0-5\
    \ | Unassigned                   |           |\n            |  6  | Node or Adjacency\
    \ Identifier | This      |\n            |     | (NAI) is supported (N)       |\
    \ document  |\n            |  7  | Unlimited Maximum SID Depth  | This      |\n\
    \            |     | (X)                          | document  |\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC3032]  Rosen, E., Tappan, D., Fedorkow, G., Rekhter, Y.,\n           \
    \   Farinacci, D., Li, T., and A. Conta, \"MPLS Label Stack\n              Encoding\"\
    , RFC 3032, DOI 10.17487/RFC3032, January 2001,\n              <https://www.rfc-editor.org/info/rfc3032>.\n\
    \   [RFC5440]  Vasseur, JP., Ed. and JL. Le Roux, Ed., \"Path Computation\n  \
    \            Element (PCE) Communication Protocol (PCEP)\", RFC 5440,\n      \
    \        DOI 10.17487/RFC5440, March 2009,\n              <https://www.rfc-editor.org/info/rfc5440>.\n\
    \   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n     \
    \         2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n        \
    \      May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8231]  Crabbe,\
    \ E., Minei, I., Medved, J., and R. Varga, \"Path\n              Computation Element\
    \ Communication Protocol (PCEP)\n              Extensions for Stateful PCE\",\
    \ RFC 8231,\n              DOI 10.17487/RFC8231, September 2017,\n           \
    \   <https://www.rfc-editor.org/info/rfc8231>.\n   [RFC8281]  Crabbe, E., Minei,\
    \ I., Sivabalan, S., and R. Varga, \"Path\n              Computation Element Communication\
    \ Protocol (PCEP)\n              Extensions for PCE-Initiated LSP Setup in a Stateful\
    \ PCE\n              Model\", RFC 8281, DOI 10.17487/RFC8281, December 2017,\n\
    \              <https://www.rfc-editor.org/info/rfc8281>.\n   [RFC8402]  Filsfils,\
    \ C., Ed., Previdi, S., Ed., Ginsberg, L.,\n              Decraene, B., Litkowski,\
    \ S., and R. Shakir, \"Segment\n              Routing Architecture\", RFC 8402,\
    \ DOI 10.17487/RFC8402,\n              July 2018, <https://www.rfc-editor.org/info/rfc8402>.\n\
    \   [RFC8408]  Sivabalan, S., Tantsura, J., Minei, I., Varga, R., and J.\n   \
    \           Hardwick, \"Conveying Path Setup Type in PCE Communication\n     \
    \         Protocol (PCEP) Messages\", RFC 8408, DOI 10.17487/RFC8408,\n      \
    \        July 2018, <https://www.rfc-editor.org/info/rfc8408>.\n   [RFC8491] \
    \ Tantsura, J., Chunduri, U., Aldrin, S., and L. Ginsberg,\n              \"Signaling\
    \ Maximum SID Depth (MSD) Using IS-IS\", RFC 8491,\n              DOI 10.17487/RFC8491,\
    \ November 2018,\n              <https://www.rfc-editor.org/info/rfc8491>.\n \
    \  [RFC8660]  Bashandy, A., Ed., Filsfils, C., Ed., Previdi, S.,\n           \
    \   Decraene, B., Litkowski, S., and R. Shakir, \"Segment\n              Routing\
    \ with the MPLS Data Plane\", RFC 8660,\n              DOI 10.17487/RFC8660, December\
    \ 2019,\n              <https://www.rfc-editor.org/info/rfc8660>.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [IPv6-SRH] Filsfils, C., Dukes, D., Previdi,\
    \ S., Leddy, J.,\n              Matsushima, S., and D. Voyer, \"IPv6 Segment Routing\
    \ Header\n              (SRH)\", Work in Progress, Internet-Draft, draft-ietf-6man-\n\
    \              segment-routing-header-26, 22 October 2019,\n              <https://tools.ietf.org/html/draft-ietf-6man-segment-\n\
    \              routing-header-26>.\n   [MSD-BGP]  Tantsura, J., Chunduri, U.,\
    \ Talaulikar, K., Mirsky, G.,\n              and N. Triantafillis, \"Signaling\
    \ MSD (Maximum SID Depth)\n              using Border Gateway Protocol Link-State\"\
    , Work in\n              Progress, Internet-Draft, draft-ietf-idr-bgp-ls-segment-\n\
    \              routing-msd-09, 15 October 2019,\n              <https://tools.ietf.org/html/draft-ietf-idr-bgp-ls-\n\
    \              segment-routing-msd-09>.\n   [PCE-PCEP-YANG]\n              Dhody,\
    \ D., Hardwick, J., Beeram, V., and J. Tantsura, \"A\n              YANG Data\
    \ Model for Path Computation Element\n              Communications Protocol (PCEP)\"\
    , Work in Progress,\n              Internet-Draft, draft-ietf-pce-pcep-yang-13,\
    \ 31 October\n              2019,\n              <https://tools.ietf.org/html/draft-ietf-pce-pcep-yang-13>.\n\
    \   [RFC3209]  Awduche, D., Berger, L., Gan, D., Li, T., Srinivasan, V.,\n   \
    \           and G. Swallow, \"RSVP-TE: Extensions to RSVP for LSP\n          \
    \    Tunnels\", RFC 3209, DOI 10.17487/RFC3209, December 2001,\n             \
    \ <https://www.rfc-editor.org/info/rfc3209>.\n   [RFC4657]  Ash, J., Ed. and J.L.\
    \ Le Roux, Ed., \"Path Computation\n              Element (PCE) Communication\
    \ Protocol Generic\n              Requirements\", RFC 4657, DOI 10.17487/RFC4657,\
    \ September\n              2006, <https://www.rfc-editor.org/info/rfc4657>.\n\
    \   [RFC7420]  Koushik, A., Stephan, E., Zhao, Q., King, D., and J.\n        \
    \      Hardwick, \"Path Computation Element Communication Protocol\n         \
    \     (PCEP) Management Information Base (MIB) Module\",\n              RFC 7420,\
    \ DOI 10.17487/RFC7420, December 2014,\n              <https://www.rfc-editor.org/info/rfc7420>.\n\
    \   [RFC8126]  Cotton, M., Leiba, B., and T. Narten, \"Guidelines for\n      \
    \        Writing an IANA Considerations Section in RFCs\", BCP 26,\n         \
    \     RFC 8126, DOI 10.17487/RFC8126, June 2017,\n              <https://www.rfc-editor.org/info/rfc8126>.\n\
    \   [RFC8413]  Zhuang, Y., Wu, Q., Chen, H., and A. Farrel, \"Framework\n    \
    \          for Scheduled Use of Resources\", RFC 8413,\n              DOI 10.17487/RFC8413,\
    \ July 2018,\n              <https://www.rfc-editor.org/info/rfc8413>.\n   [RFC8476]\
    \  Tantsura, J., Chunduri, U., Aldrin, S., and P. Psenak,\n              \"Signaling\
    \ Maximum SID Depth (MSD) Using OSPF\", RFC 8476,\n              DOI 10.17487/RFC8476,\
    \ December 2018,\n              <https://www.rfc-editor.org/info/rfc8476>.\n \
    \  [RFC8665]  Psenak, P., Ed., Previdi, S., Ed., Filsfils, C., Gredler,\n    \
    \          H., Shakir, R., Henderickx, W., and J. Tantsura, \"OSPF\n         \
    \     Extensions for Segment Routing\", RFC 8665,\n              DOI 10.17487/RFC8665,\
    \ December 2019,\n              <https://www.rfc-editor.org/info/rfc8665>.\n \
    \  [RFC8667]  Previdi, S., Ed., Ginsberg, L., Ed., Filsfils, C.,\n           \
    \   Bashandy, A., Gredler, H., and B. Decraene, \"IS-IS\n              Extensions\
    \ for Segment Routing\", RFC 8667,\n              DOI 10.17487/RFC8667, December\
    \ 2019,\n              <https://www.rfc-editor.org/info/rfc8667>.\n   [SR-POLICY]\n\
    \              Filsfils, C., Sivabalan, S., Voyer, D., Bogdanov, A., and\n   \
    \           P. Mattes, \"Segment Routing Policy Architecture\", Work in\n    \
    \          Progress, Internet-Draft, draft-ietf-spring-segment-\n            \
    \  routing-policy-05, 17 November 2019,\n              <https://tools.ietf.org/html/draft-ietf-spring-segment-\n\
    \              routing-policy-05>.\n"
- title: Appendix A.  Compatibility with Early Implementations
  contents:
  - "Appendix A.  Compatibility with Early Implementations\n   An early implementation\
    \ of this specification will send the SR-\n   CAPABILITY-TLV as a top-level TLV\
    \ in the OPEN object instead of\n   sending the PATH-SETUP-TYPE-CAPABILITY TLV\
    \ in the OPEN object.\n   Implementations that wish to interoperate with such\
    \ early\n   implementations should also send the SR-CAPABILITY-TLV as a top-level\n\
    \   TLV in their OPEN object and should interpret receiving this top-\n   level\
    \ TLV as though the sender had sent a PATH-SETUP-TYPE-CAPABILITY\n   TLV with\
    \ a PST list of (0, 1) (that is, both RSVP-TE and SR-TE PSTs\n   are supported)\
    \ with the SR-CAPABILITY-TLV as a sub-TLV.  If a PCEP\n   speaker receives an\
    \ OPEN object in which both the SR-CAPABILITY-TLV\n   and PATH-SETUP-TYPE-CAPABILITY\
    \ TLV appear as top-level TLVs, then it\n   should ignore the top-level SR-CAPABILITY-TLV\
    \ and process only the\n   PATH-SETUP-TYPE-CAPABILITY TLV.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   We thank Ina Minei, George Swallow, Marek Zavodsky, Dhruv\
    \ Dhody, Ing-\n   Wher Chen, and Tomas Janciga for the valuable comments.\n"
- title: Contributors
  contents:
  - "Contributors\n   The following people contributed to this document:\n   *  Lakshmi\
    \ Sharma\n   *  Jan Medved\n   *  Edward Crabbe\n   *  Robert Raszuk\n   *  Victor\
    \ Lopez\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Siva Sivabalan\n   Cisco Systems, Inc.\n   2000 Innovation\
    \ Drive\n   Kanata Ontario K2K 3E8\n   Canada\n   Email: msiva@cisco.com\n   Clarence\
    \ Filsfils\n   Cisco Systems, Inc.\n   Pegasus Parc\n   Brabant 1831 De kleetlaan\
    \ 6a\n   Belgium\n   Email: cfilsfil@cisco.com\n   Jeff Tantsura\n   Apstra, Inc.\n\
    \   333 Middlefield Rd #200\n   Menlo Park, CA 94025\n   United States of America\n\
    \   Email: jefftant.ietf@gmail.com\n   Wim Henderickx\n   Nokia\n   Copernicuslaan\
    \ 50\n   95134 Antwerp 2018\n   Belgium\n   Email: wim.henderickx@nokia.com\n\
    \   Jon Hardwick\n   Metaswitch Networks\n   100 Church Street\n   Enfield\n"
