- title: __initial_text__
  contents:
  - '          Internet Printing Protocol/1.1: Model and Semantics

    '
- title: Abstract
  contents:
  - "Abstract\n   The Internet Printing Protocol (IPP) is an application-level protocol\n\
    \   for distributed printing using Internet tools and technologies.  This\n  \
    \ document describes a simplified model consisting of abstract objects,\n   attributes,\
    \ and operations that is independent of encoding and\n   transport.  The model\
    \ consists of several objects, including Printers\n   and Jobs.  Jobs optionally\
    \ support multiple Documents.\n   IPP semantics allow End Users and Operators\
    \ to query Printer\n   capabilities; submit Print Jobs; inquire about the status\
    \ of Print\n   Jobs and Printers; and cancel, hold, and release Print Jobs.  IPP\n\
    \   semantics also allow Operators to pause and resume Jobs and Printers.\n  \
    \ Security, internationalization, and directory issues are also\n   addressed\
    \ by the model and semantics.  The IPP message encoding and\n   transport are\
    \ described in \"Internet Printing Protocol/1.1: Encoding\n   and Transport\"\
    \ (RFC 8010).\n   This document obsoletes RFCs 2911, 3381, and 3382.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc8011.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................9\n\
    \      1.1. Simplified Printing Model .................................12\n  \
    \ 2. Conventions Used in This Document ..............................15\n    \
    \  2.1. Requirements Language .....................................15\n      2.2.\
    \ Printing Terminology ......................................15\n      2.3. Model\
    \ Terminology .........................................16\n           2.3.1. Administrator\
    \ ......................................16\n           2.3.2. Attributes .........................................16\n\
    \                  2.3.2.1. Attribute Group Name ......................16\n  \
    \                2.3.2.2. Attribute Name ............................16\n    \
    \              2.3.2.3. Attribute Syntax ..........................16\n      \
    \            2.3.2.4. Attribute Value ...........................17\n        \
    \   2.3.3. End User ...........................................17\n          \
    \ 2.3.4. Impression .........................................17\n           2.3.5.\
    \ Input Page .........................................17\n           2.3.6. Job\
    \ Creation Operation .............................17\n           2.3.7. Keyword\
    \ ............................................17\n           2.3.8. Media Sheet\
    \ ........................................18\n           2.3.9. Operator ...........................................18\n\
    \           2.3.10. Set ...............................................18\n  \
    \         2.3.11. Support of Attributes .............................18\n    \
    \       2.3.12. Terminating State .................................21\n      2.4.\
    \ Abbreviations .............................................21\n   3. IPP Objects\
    \ ....................................................22\n      3.1. Printer Object\
    \ ............................................22\n      3.2. Job Object ................................................25\n\
    \      3.3. Object Relationships ......................................25\n  \
    \    3.4. Object Identity ...........................................26\n   4.\
    \ IPP Operations .................................................29\n      4.1.\
    \ Common Semantics ..........................................30\n           4.1.1.\
    \ Required Parameters ................................30\n           4.1.2. Operation\
    \ IDs and Request IDs ......................31\n           4.1.3. Attributes .........................................31\n\
    \           4.1.4. Character Set and Natural Language\n                  Operation\
    \ Attributes ...............................33\n                  4.1.4.1. Request\
    \ Operation Attributes ..............34\n                  4.1.4.2. Response Operation\
    \ Attributes .............38\n           4.1.5. Operation Targets ..................................39\n\
    \           4.1.6. Operation Response Status-Code Values and\n               \
    \   Status Messages ....................................41\n                 \
    \ 4.1.6.1. \"status-code\" (type2 enum) ................41\n                 \
    \ 4.1.6.2. \"status-message\" (text(255)) ..............42\n                 \
    \ 4.1.6.3. \"detailed-status-message\" (text(MAX)) .....43\n                 \
    \ 4.1.6.4. \"document-access-error\" (text(MAX)) .......43\n           4.1.7.\
    \ Unsupported Attributes .............................44\n           4.1.8. Versions\
    \ ...........................................45\n           4.1.9. Job Creation\
    \ Operations ............................48\n      4.2. Printer Operations ........................................50\n\
    \           4.2.1. Print-Job Operation ................................51\n  \
    \                4.2.1.1. Print-Job Request .........................51\n    \
    \              4.2.1.2. Print-Job Response ........................56\n      \
    \     4.2.2. Print-URI Operation ................................58\n        \
    \   4.2.3. Validate-Job Operation .............................59\n          \
    \ 4.2.4. Create-Job Operation ...............................59\n           4.2.5.\
    \ Get-Printer-Attributes Operation ...................60\n                  4.2.5.1.\
    \ Get-Printer-Attributes Request ............61\n                  4.2.5.2. Get-Printer-Attributes\
    \ Response ...........63\n           4.2.6. Get-Jobs Operation .................................64\n\
    \                  4.2.6.1. Get-Jobs Request ..........................65\n  \
    \                4.2.6.2. Get-Jobs Response .........................66\n    \
    \       4.2.7. Pause-Printer Operation ............................68\n      \
    \            4.2.7.1. Pause-Printer Request .....................71\n        \
    \          4.2.7.2. Pause-Printer Response ....................71\n          \
    \ 4.2.8. Resume-Printer Operation ...........................72\n           4.2.9.\
    \ Purge-Jobs Operation ...............................73\n      4.3. Job Operations\
    \ ............................................73\n           4.3.1. Send-Document\
    \ Operation ............................74\n                  4.3.1.1. Send-Document\
    \ Request .....................75\n                  4.3.1.2. Send-Document Response\
    \ ....................77\n           4.3.2. Send-URI Operation .................................78\n\
    \           4.3.3. Cancel-Job Operation ...............................78\n  \
    \                4.3.3.1. Cancel-Job Request ........................80\n    \
    \              4.3.3.2. Cancel-Job Response .......................81\n      \
    \     4.3.4. Get-Job-Attributes Operation .......................81\n        \
    \          4.3.4.1. Get-Job-Attributes Request ................82\n          \
    \        4.3.4.2. Get-Job-Attributes Response ...............83\n           4.3.5.\
    \ Hold-Job Operation .................................84\n                  4.3.5.1.\
    \ Hold-Job Request ..........................86\n                  4.3.5.2. Hold-Job\
    \ Response .........................87\n           4.3.6. Release-Job Operation\
    \ ..............................87\n           4.3.7. Restart-Job Operation ..............................89\n\
    \                  4.3.7.1. Restart-Job Request .......................91\n  \
    \                4.3.7.2. Restart-Job Response ......................92\n   5.\
    \ Object Attributes ..............................................92\n      5.1.\
    \ Attribute Syntaxes ........................................92\n           5.1.1.\
    \ Out-of-Band Values - 'unknown',\n                  'unsupported', and 'no-value'\
    \ ......................93\n           5.1.2. 'text' .............................................93\n\
    \                  5.1.2.1. 'textWithoutLanguage' .....................94\n  \
    \                5.1.2.2. 'textWithLanguage' ........................94\n    \
    \       5.1.3. 'name' .............................................95\n      \
    \            5.1.3.1. 'nameWithoutLanguage' .....................96\n        \
    \          5.1.3.2. 'nameWithLanguage' ........................96\n          \
    \        5.1.3.3. Matching 'name' Attribute Values ..........97\n           5.1.4.\
    \ 'keyword' ..........................................98\n           5.1.5. 'enum'\
    \ .............................................99\n           5.1.6. 'uri' .............................................100\n\
    \           5.1.7. 'uriScheme' .......................................100\n  \
    \         5.1.8. 'charset' .........................................101\n    \
    \       5.1.9. 'naturalLanguage' .................................102\n      \
    \     5.1.10. 'mimeMediaType' ..................................102\n        \
    \          5.1.10.1. 'application/octet-stream' -\n                          \
    \  Auto-Sensing the Document Format ........103\n           5.1.11. 'octetString'\
    \ ....................................104\n           5.1.12. 'boolean' ........................................104\n\
    \           5.1.13. 'integer' ........................................104\n  \
    \         5.1.14. 'rangeOfInteger' .................................105\n    \
    \       5.1.15. 'dateTime' .......................................105\n      \
    \     5.1.16. 'resolution' .....................................105\n        \
    \   5.1.17. 'collection' .....................................105\n          \
    \ 5.1.18. '1setOf X' .......................................106\n      5.2. Job\
    \ Template Attributes ..................................106\n           5.2.1.\
    \ job-priority (integer(1:100)) .....................109\n           5.2.2. job-hold-until\
    \ (type2 keyword | name(MAX)) ........111\n           5.2.3. job-sheets (type2\
    \ keyword | name(MAX)) ............112\n           5.2.4. multiple-document-handling\
    \ (type2 keyword) ........113\n           5.2.5. copies (integer(1:MAX)) ...........................115\n\
    \           5.2.6. finishings (1setOf type2 enum) ....................115\n  \
    \         5.2.7. page-ranges (1setOf rangeOfInteger(1:MAX)) ........118\n    \
    \       5.2.8. sides (type2 keyword) .............................119\n      \
    \     5.2.9. number-up (integer(1:MAX)) ........................120\n        \
    \   5.2.10. orientation-requested (type2 enum) ...............120\n          \
    \ 5.2.11. media (type2 keyword | name(MAX)) ................123\n           5.2.12.\
    \ printer-resolution (resolution) ..................124\n           5.2.13. print-quality\
    \ (type2 enum) .......................124\n      5.3. Job Description and Status\
    \ Attributes ....................124\n           5.3.1. job-id (integer(1:MAX))\
    \ ...........................126\n           5.3.2. job-uri (uri) .....................................126\n\
    \           5.3.3. job-printer-uri (uri) .............................127\n  \
    \         5.3.4. job-more-info (uri) ...............................127\n    \
    \       5.3.5. job-name (name(MAX)) ..............................127\n      \
    \     5.3.6. job-originating-user-name (name(MAX)) .............128\n        \
    \   5.3.7. job-state (type1 enum) ............................128\n          \
    \        5.3.7.1. Forwarding Servers .......................132\n            \
    \      5.3.7.2. Partitioning of Job States ...............132\n           5.3.8.\
    \ job-state-reasons (1setOf type2 keyword) ..........133\n           5.3.9. job-state-message\
    \ (text(MAX)) .....................138\n           5.3.10. job-detailed-status-messages\
    \ (1setOf text(MAX)) ..139\n           5.3.11. job-document-access-errors (1setOf\
    \ text(MAX)) ....139\n           5.3.12. number-of-documents (integer(0:MAX))\
    \ .............139\n           5.3.13. output-device-assigned (name(127)) ...............139\n\
    \           5.3.14. Event Time Job Status Attributes .................140\n  \
    \                5.3.14.1. time-at-creation (integer(MIN:MAX)) .....140\n    \
    \              5.3.14.2. time-at-processing (integer(MIN:MAX)) ...141\n      \
    \            5.3.14.3. time-at-completed (integer(MIN:MAX)) ....141\n        \
    \          5.3.14.4. job-printer-up-time (integer(1:MAX)) ....141\n          \
    \        5.3.14.5. date-time-at-creation\n                            (dateTime|unknown)\
    \ ......................141\n                  5.3.14.6. date-time-at-processing\n\
    \                            (dateTime|unknown|no-value) .............141\n  \
    \                5.3.14.7. date-time-at-completed\n                          \
    \  (dateTime|unknown|no-value) .............141\n           5.3.15. number-of-intervening-jobs\
    \ (integer(0:MAX)) ......142\n           5.3.16. job-message-from-operator (text(127))\
    \ ............142\n           5.3.17. Job Size Attributes ..............................142\n\
    \                  5.3.17.1. job-k-octets (integer(0:MAX)) ...........142\n  \
    \                5.3.17.2. job-impressions (integer(0:MAX)) ........143\n    \
    \              5.3.17.3. job-media-sheets (integer(1:MAX)) .......143\n      \
    \     5.3.18. Job Progress Attributes ..........................144\n        \
    \          5.3.18.1. job-k-octets-processed\n                            (integer(0:MAX))\
    \ ........................144\n                  5.3.18.2. job-impressions-completed\n\
    \                            (integer(0:MAX)) ........................144\n  \
    \                5.3.18.3. job-media-sheets-completed\n                      \
    \      (integer(0:MAX)) ........................144\n           5.3.19. attributes-charset\
    \ (charset) .....................144\n           5.3.20. attributes-natural-language\
    \ (naturalLanguage) ....145\n      5.4. Printer Description and Status Attributes\
    \ ................145\n           5.4.1. printer-uri-supported (1setOf uri) ................147\n\
    \           5.4.2. uri-authentication-supported (1setOf type2\n              \
    \    keyword) ..........................................148\n           5.4.3.\
    \ uri-security-supported (1setOf type2 keyword) .....149\n           5.4.4. printer-name\
    \ (name(127)) ..........................150\n           5.4.5. printer-location\
    \ (text(127)) ......................150\n           5.4.6. printer-info (text(127))\
    \ ..........................151\n           5.4.7. printer-more-info (uri) ...........................151\n\
    \           5.4.8. printer-driver-installer (uri) ....................151\n  \
    \         5.4.9. printer-make-and-model (text(127)) ................151\n    \
    \       5.4.10. printer-more-info-manufacturer (uri) .............151\n      \
    \     5.4.11. printer-state (type1 enum) .......................152\n        \
    \   5.4.12. printer-state-reasons (1setOf type2 keyword) .....152\n          \
    \ 5.4.13. printer-state-message (text(MAX)) ................157\n           5.4.14.\
    \ ipp-versions-supported (1setOf type2 keyword) ....157\n           5.4.15. operations-supported\
    \ (1setOf type2 enum) .........157\n           5.4.16. multiple-document-jobs-supported\
    \ (boolean) .......159\n           5.4.17. charset-configured (charset) .....................159\n\
    \           5.4.18. charset-supported (1setOf charset) ...............159\n  \
    \         5.4.19. natural-language-configured (naturalLanguage) ....160\n    \
    \       5.4.20. generated-natural-language-supported\n                   (1setOf\
    \ naturalLanguage) .........................160\n           5.4.21. document-format-default\
    \ (mimeMediaType) ..........160\n           5.4.22. document-format-supported\
    \ (1setOf\n                   mimeMediaType) ...................................161\n\
    \           5.4.23. printer-is-accepting-jobs (boolean) ..............161\n  \
    \         5.4.24. queued-job-count (integer(0:MAX)) ................161\n    \
    \       5.4.25. printer-message-from-operator (text(127)) ........161\n      \
    \     5.4.26. color-supported (boolean) ........................161\n        \
    \   5.4.27. reference-uri-schemes-supported (1setOf\n                   uriScheme)\
    \ .......................................162\n           5.4.28. pdl-override-supported\
    \ (type2 keyword) ...........162\n           5.4.29. printer-up-time (integer(1:MAX))\
    \ .................162\n           5.4.30. printer-current-time (dateTime|unknown)\
    \ ..........163\n           5.4.31. multiple-operation-time-out (integer(1:MAX))\
    \ .....164\n           5.4.32. compression-supported (1setOf type2 keyword) .....164\n\
    \           5.4.33. job-k-octets-supported (rangeOfInteger(0:MAX)) ...165\n  \
    \         5.4.34. job-impressions-supported\n                   (rangeOfInteger(0:MAX))\
    \ ..........................165\n           5.4.35. job-media-sheets-supported\n\
    \                   (rangeOfInteger(1:MAX)) ..........................165\n  \
    \         5.4.36. pages-per-minute (integer(0:MAX)) ................165\n    \
    \       5.4.37. pages-per-minute-color (integer(0:MAX)) ..........165\n   6. Conformance\
    \ ...................................................166\n      6.1. Client Conformance\
    \ Requirements ..........................166\n      6.2. IPP Object Conformance\
    \ Requirements ......................168\n           6.2.1. Objects ...........................................168\n\
    \           6.2.2. Operations ........................................168\n  \
    \         6.2.3. IPP Object Attributes .............................170\n    \
    \       6.2.4. Versions ..........................................170\n      \
    \     6.2.5. Extensions ........................................171\n        \
    \   6.2.6. Attribute Syntaxes ................................171\n          \
    \ 6.2.7. Security ..........................................172\n      6.3. Charset\
    \ and Natural Language Requirements ................172\n   7. IANA Considerations\
    \ ...........................................173\n      7.1. Object Extensions\
    \ ........................................174\n      7.2. Attribute Extensibility\
    \ ..................................174\n      7.3. Keyword Extensibility ....................................175\n\
    \      7.4. Enum Extensibility .......................................176\n  \
    \    7.5. Attribute Group Extensibility ............................176\n    \
    \  7.6. Out-of-Band Attribute Value Extensibility ................176\n      7.7.\
    \ Attribute Syntax Extensibility ...........................177\n      7.8. Operation\
    \ Extensibility ..................................177\n      7.9. Status-Code\
    \ Extensibility ................................178\n   8. Internationalization\
    \ Considerations ...........................179\n   9. Security Considerations\
    \ .......................................183\n      9.1. Security Scenarios .......................................184\n\
    \           9.1.1. Client and Server in the Same Security Domain .....184\n  \
    \         9.1.2. Client and Server in Different Security Domains ...184\n    \
    \       9.1.3. Print by Reference ................................184\n      9.2.\
    \ URIs in Operation, Job, and Printer Attributes ...........185\n      9.3. URIs\
    \ for Each Authentication Mechanism ...................185\n      9.4. Restricted\
    \ Queries .......................................186\n      9.5. Operations Performed\
    \ by Operators and Administrators .....186\n      9.6. Queries on Jobs Submitted\
    \ Using Non-IPP Protocols ........186\n   10. Changes since RFC 2911 .......................................187\n\
    \   11. References ...................................................188\n  \
    \    11.1. Normative References ....................................188\n    \
    \  11.2. Informative References ..................................194\n   Appendix\
    \ A. Formats for IPP Registration Proposals ...............197\n     A.1. Attribute\
    \ Registration ....................................197\n     A.2. type2 'keyword'\
    \ Attribute Value Registration ..............198\n     A.3. type2 'enum' Attribute\
    \ Value Registration .................198\n     A.4. Operation Registration ....................................199\n\
    \     A.5. Status-Code Registration ..................................199\n  \
    \ Appendix B. Status-Code Values and Suggested Status-Code\n               Messages\
    \ .............................................200\n     B.1. Status-Code Values\
    \ ........................................201\n       B.1.1. Informational .........................................201\n\
    \       B.1.2. Successful Status-Code Values .........................201\n  \
    \       B.1.2.1. successful-ok (0x0000) ............................201\n    \
    \     B.1.2.2. successful-ok-ignored-or-substituted-attributes\n             \
    \     (0x0001) ..........................................202\n         B.1.2.3.\
    \ successful-ok-conflicting-attributes (0x0002) .....202\n       B.1.3. Redirection\
    \ Status-Code Values ........................202\n       B.1.4. Client Error Status-Code\
    \ Values .......................202\n         B.1.4.1. client-error-bad-request\
    \ (0x0400) .................203\n         B.1.4.2. client-error-forbidden (0x0401)\
    \ ...................203\n         B.1.4.3. client-error-not-authenticated (0x0402)\
    \ ...........203\n         B.1.4.4. client-error-not-authorized (0x0403) ..............203\n\
    \         B.1.4.5. client-error-not-possible (0x0404) ................203\n  \
    \       B.1.4.6. client-error-timeout (0x0405) .....................204\n    \
    \     B.1.4.7. client-error-not-found (0x0406) ...................204\n      \
    \   B.1.4.8. client-error-gone (0x0407) ........................204\n        \
    \ B.1.4.9. client-error-request-entity-too-large (0x0408) ....205\n         B.1.4.10.\
    \ client-error-request-value-too-long (0x0409) .....205\n         B.1.4.11. client-error-document-format-not-supported\n\
    \                   (0x040a) .........................................205\n  \
    \       B.1.4.12. client-error-attributes-or-values-not-supported\n          \
    \         (0x040b) .........................................206\n         B.1.4.13.\
    \ client-error-uri-scheme-not-supported (0x040c) ...206\n         B.1.4.14. client-error-charset-not-supported\
    \ (0x040d) ......206\n         B.1.4.15. client-error-conflicting-attributes (0x040e)\
    \ .....207\n         B.1.4.16. client-error-compression-not-supported (0x040f)\
    \ ..207\n         B.1.4.17. client-error-compression-error (0x0410) ..........207\n\
    \         B.1.4.18. client-error-document-format-error (0x0411) ......207\n  \
    \       B.1.4.19. client-error-document-access-error (0x0412) ......207\n    \
    \   B.1.5. Server Error Status-Code Values .......................208\n      \
    \   B.1.5.1. server-error-internal-error (0x0500) ..............208\n        \
    \ B.1.5.2. server-error-operation-not-supported (0x0501) .....208\n         B.1.5.3.\
    \ server-error-service-unavailable (0x0502) .........208\n         B.1.5.4. server-error-version-not-supported\
    \ (0x0503) .......209\n         B.1.5.5. server-error-device-error (0x0504) ................209\n\
    \         B.1.5.6. server-error-temporary-error (0x0505) .............210\n  \
    \       B.1.5.7. server-error-not-accepting-jobs (0x0506) ..........210\n    \
    \     B.1.5.8. server-error-busy (0x0507) ........................210\n      \
    \   B.1.5.9. server-error-job-canceled (0x0508) ................210\n        \
    \ B.1.5.10. server-error-multiple-document-jobs-not-supported\n              \
    \     (0x0509) .........................................210\n     B.2. Status-Code\
    \ Values for IPP Operations .....................211\n   Appendix C. Processing\
    \ IPP Attributes ............................213\n     C.1. Fidelity ..................................................213\n\
    \     C.2. Page Description Language (PDL) Override ..................215\n  \
    \   C.3. Using Job Template Attributes during Document Processing ..217\n   Appendix\
    \ D. Generic Directory Schema .............................218\n   Acknowledgements\
    \ .................................................221\n   Authors' Addresses\
    \ ...............................................221\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Internet Printing Protocol (IPP) is an application-level\
    \ protocol\n   for distributed printing using Internet tools and technologies.\
    \  IPP\n   version 1.1 (IPP/1.1) focuses primarily on End User functionality\n\
    \   with a few administrative operations included.  IPP versions 2.0,\n   2.1,\
    \ and 2.2 provide many new operations and are defined separately.\n   This document\
    \ is just one of a suite of documents that fully define\n   IPP.  The full set\
    \ of IETF IPP documents includes:\n      Design Goals for an Internet Printing\
    \ Protocol [RFC2567]\n      Rationale for the Structure of the Model and Protocol\
    \ for the\n      Internet Printing Protocol [RFC2568]\n      Internet Printing\
    \ Protocol/1.1: Model and Semantics (this\n      document)\n      Internet Printing\
    \ Protocol/1.1: Encoding and Transport [RFC8010]\n      Internet Printing Protocol/1.1:\
    \ Implementor's Guide [RFC3196]\n      Internet Printing Protocol/1.1: IPP URL\
    \ Scheme [RFC3510]\n      Internet Printing Protocol (IPP) over HTTPS Transport\
    \ Binding and\n      the 'ipps' URI Scheme [RFC7472]\n      Internet Printing\
    \ Protocol (IPP): Requirements for Job, Printer,\n      and Device Administrative\
    \ Operations [RFC3239]\n      Internet Printing Protocol (IPP): Job and Printer\
    \ Set Operations\n      [RFC3380]\n      Internet Printing Protocol (IPP): Job\
    \ and Printer Administrative\n      Operations [RFC3998]\n      Internet Printing\
    \ Protocol (IPP): Requirements for IPP\n      Notifications [RFC3997]\n      Internet\
    \ Printing Protocol (IPP): Event Notifications and\n      Subscriptions [RFC3995]\n\
    \      Internet Printing Protocol (IPP): The 'ippget' Delivery Method for\n  \
    \    Event Notifications [RFC3996]\n      Mapping between LPD and IPP Protocols\
    \ [RFC2569]\n   Anyone reading these documents for the first time is strongly\n\
    \   encouraged to read the IPP documents in the above order.  Additional\n   IPP\
    \ specifications have been published by the IEEE-ISTO Printer\n   Working Group's\
    \ IPP Workgroup [PWG-IPP-WG].  The following standards\n   are highly recommended\
    \ reading:\n      PWG Media Standardized Names 2.0 (MSN2) [PWG5101.1]\n      IPP\
    \ Finishings 2.0 (FIN) [PWG5100.1]\n      Internet Printing Protocol (IPP): \"\
    output-bin\" attribute extension\n      [PWG5100.2]\n      Internet Printing Protocol\
    \ (IPP): Production Printing Attributes -\n      Set 1 [PWG5100.3] (for \"media-col\"\
    \ Job Template attribute)\n      Standard for The Internet Printing Protocol (IPP):\
    \ Document Object\n      [PWG5100.5]\n      Standard for The Internet Printing\
    \ Protocol (IPP): Page Overrides\n      [PWG5100.6]\n      Standard for The Internet\
    \ Printing Protocol (IPP): Job Extensions\n      [PWG5100.7]\n      Standard for\
    \ Internet Printing Protocol (IPP): \"-actual\"\n      attributes [PWG5100.8]\n\
    \      Internet Printing Protocol (IPP): Printer State Extensions v1.0\n     \
    \ [PWG5100.9]\n      Internet Printing Protocol (IPP): Job and Printer Extensions\
    \ -\n      Set 2 (JPS2) [PWG5100.11]\n      IPP Version 2.0, 2.1, and 2.2 [PWG5100.12]\n\
    \      IPP: Job and Printer Extensions - Set 3 (JPS3) [PWG5100.13]\n      IPP\
    \ Everywhere [PWG5100.14]\n      IPP FaxOut Service [PWG5100.15]\n      IPP Transaction-Based\
    \ Printing Extensions [PWG5100.16]\n      IPP Scan Service (SCAN) [PWG5100.17]\n\
    \      IPP Shared Infrastructure Extensions (INFRA) [PWG5100.18]\n      IPP Implementor's\
    \ Guide v2.0 (IG) [PWG5100.19]\n   This document is organized as follows:\n  \
    \ o  The rest of Section 1 is an introduction to the IPP simplified\n      model\
    \ for distributed printing;\n   o  Section 2 defines the terminology and conventions\
    \ used within this\n      document;\n   o  Section 3 introduces the object types\
    \ covered in this document\n      with their basic behaviors, attributes, and\
    \ interactions;\n   o  Section 4 defines the core operations for IPP/1.1.  IPP\
    \ operations\n      are synchronous -- each operation has both a request and a\n\
    \      response;\n   o  Section 5 defines the core attributes (and their syntaxes)\
    \ that\n      are used in the model;\n   o  Sections 6 and 7 summarize the implementation\
    \ conformance\n      requirements for objects that support the protocol and IANA\n\
    \      considerations, respectively;\n   o  Sections 8 and 9 cover the internationalization\
    \ and security\n      considerations for IPP; and\n   o  The appendices provide\
    \ a reference for status-code values,\n      processing of IPP attributes, and\
    \ the generic directory schema.\n"
- title: 1.1.  Simplified Printing Model
  contents:
  - "1.1.  Simplified Printing Model\n   In order to achieve its goal of realizing\
    \ a workable printing\n   protocol for the Internet, the Internet Printing Protocol\
    \ (IPP) is\n   based on a simplified printing model that abstracts the many\n\
    \   components of real-world printing solutions.  The Internet is a\n   distributed\
    \ computing environment where requesters of print services\n   (Clients, applications,\
    \ Printer drivers, etc.) cooperate and interact\n   with print service providers.\
    \  This document (sometimes referred to\n   here as the \"Model and Semantics\"\
    \ document) describes a simple,\n   abstract model for IPP even though the underlying\
    \ configurations can\n   be complex \"n-tier\" client/server systems.  An important\
    \ simplifying\n   step in the IPP Model is to expose only the key objects and\n\
    \   interfaces required for printing.  The model described in this\n   document\
    \ does not include features, interfaces, and relationships\n   that are beyond\
    \ the scope of IPP/1.1.  IPP/1.1 incorporates many of\n   the relevant ideas and\
    \ lessons learned from other specification and\n   development efforts [HTPP]\
    \ [ISO10175] [LDPA] [P1387.4] [PSIS]\n   [RFC1179] [SWP].  IPP is heavily influenced\
    \ by the printing model\n   introduced in the Document Printing Application (DPA)\
    \ [ISO10175]\n   standard.  Although DPA specifies both End User and administrative\n\
    \   features, IPP/1.1 focuses primarily on End User functionality with a\n   few\
    \ additional OPTIONAL operations for Administrators and Operators.\n   The IPP\
    \ Model encapsulates the important components of distributed\n   printing into\
    \ the following IPP object types:\n   o  Printer (Section 3.1)\n   o  Job (Section\
    \ 3.2)\n   o  Document (see [PWG5100.5])\n   o  Subscription (see [RFC3995])\n\
    \   Each object type has an associated set of operations (see Section 4)\n   and\
    \ attributes (see Section 5).\n   It is important, however, to understand that\
    \ in real system\n   implementations (which lie underneath the abstracted IPP\
    \ Model),\n   there are other components of a print service that are not explicitly\n\
    \   defined in the IPP Model.  The following figure illustrates where IPP\n  \
    \ fits with respect to these other components.\n                             \
    \   +----------------+\n                                |   Application  |\n \
    \                     o         + . . . . . . .  |\n                     \\|/\
    \        |    Spooler     |\n                     / \\        + . . . . . . .\
    \  |   +---------+\n                   End User     | Printer Driver |---|  File\
    \   |\n         +-----------+ +-----+  +-------+--------+   +----+----+\n    \
    \     |  Browser  | | GUI |          |                 |\n         +-----+-----+\
    \ +--+--+          |                 |\n               |          |          \
    \   |                 |\n               |      +---+-------------+--+        \
    \      |\n   N   D   S   |      |      IPP Client    |--------------+\n   O  \
    \ I   E   |      +---------+----------+\n   T   R   C   |                |\n \
    \  I   E   U   |\n   F   C   R   -------------- Transport -------------------\n\
    \   I   T   I\n   C   O   T                    |         --+\n   A   R   Y   \
    \        +--------+--------+  |\n   T   Y               |    IPP Server   |  |\n\
    \   I                   +--------+--------+  |\n   O                         \
    \   |           |\n   N                   +-----------------+  | IPP Printer\n\
    \                       |  Print Service  |  |\n                       +-----------------+\
    \  |\n                                |         --+\n                       +-----------------+\n\
    \                       | Output Device(s)|\n                       +-----------------+\n\
    \                            Figure 1: IPP Model\n   An IPP Printer object (\"\
    Printer\") encapsulates the functions normally\n   associated with physical Output\
    \ Devices along with the spooling,\n   scheduling, and multiple device management\
    \ functions often associated\n   with a print server.  Printers are optionally\
    \ registered as entries\n   in a directory where End Users find and select them\
    \ based on some\n   sort of filtered context-based searching mechanism (see Appendix\
    \ D).\n   The directory is used to store relatively static information about\n\
    \   the Printer, allowing End Users to search for and find Printers that\n   match\
    \ their search criteria -- for example, name, location, context,\n   Printer capabilities,\
    \ etc.  The more dynamic information, such as\n   state, currently loaded and\
    \ ready media, number of Jobs at the\n   Printer, errors, warnings, and so forth,\
    \ is directly associated with\n   the Printer itself rather than with the entry\
    \ in the directory, which\n   only references the Printer.\n   IPP Clients (\"\
    Clients\") implement IPP on the Client side and give\n   End Users (or programs\
    \ running on behalf of End Users) the ability to\n   query Printers and submit\
    \ and manage Print Jobs.  An IPP server is\n   just that part of the Printer object\
    \ that implements the server-side\n   protocol.  The rest of the Printer object\
    \ implements (or gateways\n   into) the application semantics of the print service\
    \ itself.\n   Printers can be embedded in an Output Device or can be implemented\
    \ on\n   a host on the network that communicates with an Output Device.\n   When\
    \ a Job is submitted to the Printer and the Printer has validated\n   the attributes\
    \ in the submission request, the Printer creates a new\n   IPP Job object (\"\
    Job\").  The End User then interacts with this new\n   Job to query its status\
    \ and monitor the progress of the Job.  An\n   End User can also cancel their\
    \ Print Jobs by using the Job's\n   Cancel-Job operation.  An End User can also\
    \ hold, release, and\n   restart their Print Jobs using the Job's OPTIONAL Hold-Job,\n\
    \   Release-Job, and Restart-Job operations, if implemented.\n   A privileged\
    \ Operator or Administrator of a Printer can cancel, hold,\n   release, and restart\
    \ any user's Job using the REQUIRED Cancel-Job and\n   the OPTIONAL Hold-Job,\
    \ Release-Job, and Restart-Job operations.  In\n   addition, a privileged Operator\
    \ or Administrator of a Printer can\n   pause, resume, or purge (Jobs from) a\
    \ Printer using the OPTIONAL\n   Pause-Printer, Resume-Printer, and Purge-Jobs\
    \ operations, if\n   implemented.\n   The notification service is defined in \"\
    Internet Printing Protocol\n   (IPP): Event Notifications and Subscriptions\"\
    \ [RFC3995].  By using\n   such a notification service, the End User is able to\
    \ register for and\n   receive Printer-specific and Job-specific events asynchronously.\n\
    \   Otherwise, an End User can query the status of Printers and can\n   follow\
    \ the progress of Jobs by polling using the\n   Get-Printer-Attributes, Get-Jobs,\
    \ and Get-Job-Attributes operations.\n"
- title: 2.  Conventions Used in This Document
  contents:
  - '2.  Conventions Used in This Document

    '
- title: 2.1.  Requirements Language
  contents:
  - "2.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n   The key word \"DEPRECATED\" in this document refers to an\
    \ operation,\n   attribute, or value that SHOULD NOT be used or supported in new\n\
    \   implementations.\n"
- title: 2.2.  Printing Terminology
  contents:
  - "2.2.  Printing Terminology\n   Client: Initiator of outgoing IPP session requests\
    \ and sender of\n   outgoing IPP operation requests (Hypertext Transfer Protocol\n\
    \   (HTTP/1.1) user agent, as defined in [RFC7230]).\n   Document: An object created\
    \ and managed by a Printer that contains\n   description, processing, and status\
    \ information.  A Document object\n   can have attached data and is bound to a\
    \ single Job [PWG5100.5].\n   'ipp' URI: An IPP URI as defined in [RFC3510].\n\
    \   'ipps' URI: An IPP URI as defined in [RFC7472].\n   Job: An object created\
    \ and managed by a Printer that contains\n   description, processing, and status\
    \ information.  The Job also\n   contains zero or more Document objects.\n   Logical\
    \ Device: A print server, software service, or gateway that\n   processes Jobs\
    \ and either forwards or stores the processed Job or\n   uses one or more Physical\
    \ Devices to render output.\n   Output Device: A single Logical or Physical Device.\n\
    \   Physical Device: A hardware implementation of an endpoint device,\n   e.g.,\
    \ a marking engine, a fax modem, etc.\n   Printer: Listener for incoming IPP session\
    \ requests and receiver of\n   incoming IPP operation requests (HTTP/1.1 server,\
    \ as defined in\n   [RFC7230]) that represents one or more Physical Devices or\
    \ a Logical\n   Device.\n"
- title: 2.3.  Model Terminology
  contents:
  - '2.3.  Model Terminology

    '
- title: 2.3.1.  Administrator
  contents:
  - "2.3.1.  Administrator\n   An End User who is also authorized to manage all aspects\
    \ of an Output\n   Device or Printer, including creating the Printer instances\
    \ and\n   controlling the authorization of other End Users and Operators\n   [RFC2567].\n"
- title: 2.3.2.  Attributes
  contents:
  - "2.3.2.  Attributes\n   An attribute is an item of information that is associated\
    \ with an\n   instance of an IPP object (Printer, Job, etc.).  An attribute\n\
    \   consists of an attribute name and one or more attribute values.  Each\n  \
    \ attribute has a specific attribute syntax.  All object attributes are\n   defined\
    \ in Section 5, and all operation attributes are defined in\n   Section 4.\n \
    \  Job Template attributes are described in Section 5.2.  The Client\n   optionally\
    \ supplies Job Template attributes in a Job Creation request\n   (operation requests\
    \ that create Job objects).  The Printer object has\n   associated attributes\
    \ that define supported and default values for\n   the Printer.\n"
- title: 2.3.2.1.  Attribute Group Name
  contents:
  - "2.3.2.1.  Attribute Group Name\n   Related attributes are grouped into named\
    \ groups.  The name of the\n   group is a keyword.  The group name can be used\
    \ in place of naming\n   all the attributes in the group explicitly.  Attribute\
    \ groups are\n   defined in Section 4.\n"
- title: 2.3.2.2.  Attribute Name
  contents:
  - "2.3.2.2.  Attribute Name\n   Each attribute is uniquely identified in this document\
    \ by its\n   attribute name.  An attribute name is a keyword.  The keyword\n \
    \  attribute name is given in the section title in this document that\n   describes\
    \ that attribute.  In running text in this document,\n   attribute names are indicated\
    \ inside double quotation marks (\") where\n   the quotation marks are not part\
    \ of the keyword itself.\n"
- title: 2.3.2.3.  Attribute Syntax
  contents:
  - "2.3.2.3.  Attribute Syntax\n   Each attribute is defined using an explicit syntax\
    \ type.  In this\n   document, each syntax type is defined as a keyword with specific\n\
    \   meaning.  The \"Encoding and Transport\" document [RFC8010] indicates\n  \
    \ the actual \"on-the-wire\" encoding rules for each syntax type.\n   Attribute\
    \ syntax types are defined in Section 5.1.\n"
- title: 2.3.2.4.  Attribute Value
  contents:
  - "2.3.2.4.  Attribute Value\n   Each attribute has one or more values.  Attribute\
    \ values are\n   represented in the syntax type specified for that attribute.\
    \  In\n   running text in this document, attribute values are indicated inside\n\
    \   single quotation marks ('), whether their attribute syntax is\n   keyword,\
    \ integer, text, etc. where the quotation marks are not part\n   of the value\
    \ itself.\n"
- title: 2.3.3.  End User
  contents:
  - "2.3.3.  End User\n   An End User is a person or software process that is authorized\
    \ to\n   perform basic printing functions, including finding/locating a\n   Printer,\
    \ creating a local instance of a Printer, viewing Printer\n   status, viewing\
    \ Printer capabilities, submitting a Print Job, viewing\n   Print Job status,\
    \ and altering the attributes of a Print Job\n   [RFC2567].\n"
- title: 2.3.4.  Impression
  contents:
  - "2.3.4.  Impression\n   An Impression is the content imposed upon one side of\
    \ a Media Sheet\n   by a marking engine, independent of the number of times that\
    \ the\n   sheet side passes any marker.  An Impression contains one or more\n\
    \   Input Pages that are imposed (scaled, translated, and/or rotated)\n   during\
    \ processing of the Document data.\n"
- title: 2.3.5.  Input Page
  contents:
  - "2.3.5.  Input Page\n   An Input Page is a page according to the definition of\
    \ \"pages\" in the\n   language used to express the Document data.\n"
- title: 2.3.6.  Job Creation Operation
  contents:
  - "2.3.6.  Job Creation Operation\n   A Job Creation operation is any operation\
    \ that causes the creation of\n   a Job object, e.g., the Create-Job, Print-Job,\
    \ and Print-URI\n   operations defined in this document.\n"
- title: 2.3.7.  Keyword
  contents:
  - "2.3.7.  Keyword\n   Keywords are used within this document as identifiers of\
    \ semantic\n   entities within the abstract model (see Section 5.1.4).  Attribute\n\
    \   names, some attribute values, attribute syntaxes, and attribute group\n  \
    \ names are represented as keywords.\n"
- title: 2.3.8.  Media Sheet
  contents:
  - "2.3.8.  Media Sheet\n   A Media Sheet is a single instance of a medium, whether\
    \ printing on\n   one or both sides of the medium.  Media Sheets also include\
    \ sections\n   of roll media.\n"
- title: 2.3.9.  Operator
  contents:
  - "2.3.9.  Operator\n   An Operator is an End User that also has special rights\
    \ on the Output\n   Device or Printer.  The Operator typically monitors the status\
    \ of the\n   Printer and also manages and controls the Jobs at the Output Device\n\
    \   [RFC2567].  The Operator is allowed to query and control the Printer,\n  \
    \ Jobs, and Documents based on site policy.\n"
- title: 2.3.10.  Set
  contents:
  - "2.3.10.  Set\n   A Set is a logical boundary between the delivered Media Sheets\
    \ of a\n   printed Job.  For example, in the case of a ten-page single Document\n\
    \   with collated pages and a request for 50 copies, each of the 50\n   printed\
    \ copies of the Document constitutes a Set.  If the pages were\n   uncollated,\
    \ then 50 copies of each of the individual pages within the\n   Document would\
    \ represent each Set.  Finishing processes operate on\n   Sets.\n"
- title: 2.3.11.  Support of Attributes
  contents:
  - "2.3.11.  Support of Attributes\n   By definition, a Printer supports an attribute\
    \ only if that Printer\n   accepts it in a request or responds with the corresponding\
    \ attribute\n   populated with some value(s) in a response to a query for that\n\
    \   attribute.  A Printer supports an attribute value if the value is one\n  \
    \ of the Printer's \"supported values\" attributes.  The device behind a\n   Printer\
    \ can exhibit a behavior that corresponds to some IPP\n   attribute, but if the\
    \ Printer, when queried for that attribute,\n   doesn't respond with the attribute,\
    \ then as far as IPP is concerned,\n   that implementation does not support that\
    \ feature.  If the Printer's\n   \"xxx-supported\" attribute is not populated\
    \ with a particular value\n   (even if that value is a legal value for that attribute),\
    \ then that\n   Printer does not support that particular value.\n   A conforming\
    \ implementation supports all REQUIRED attributes.\n   However, even for REQUIRED\
    \ attributes, conformance to IPP does not\n   mandate that all implementations\
    \ support all possible values\n   representing all possible Job processing behaviors\
    \ and features.  For\n   example, if a given instance of a Printer supports only\
    \ certain\n   Document formats, then that Printer responds with the\n   \"document-format-supported\"\
    \ attribute populated with a set of values,\n   or possibly only one value, taken\
    \ from the entire set of possible\n   values defined for that attribute.  This\
    \ limited set of values\n   represents the Printer's set of supported Document\
    \ formats.\n   Supporting an attribute and some set of values for that attribute\n\
    \   enables IPP End Users to be aware of and make use of those features\n   associated\
    \ with that attribute and those values.  If an\n   implementation chooses to not\
    \ support an attribute or some specific\n   value, then IPP End Users would have\
    \ no ability to make use of that\n   feature within the context of IPP itself.\
    \  However, due to existing\n   practice and legacy systems that are not IPP aware,\
    \ there might be\n   some other mechanism outside the scope of IPP to control\
    \ or request\n   the \"unsupported\" feature (such as embedded instructions within\
    \ the\n   Document data itself).\n   For example, consider the following for the\
    \ \"finishings-supported\"\n   attribute.\n   1)  If a Printer is not physically\
    \ capable of stapling, the\n       \"finishings-supported\" attribute MUST NOT\
    \ be populated with the\n       value of 'staple'.\n   2)  A Printer is physically\
    \ capable of stapling; however, an\n       implementation chooses not to support\
    \ stapling in the IPP\n       \"finishings\" attribute.  In this case, 'staple'\
    \ MUST NOT be a\n       value in the \"finishings-supported\" Printer Description\n\
    \       attribute.  Without support for the value 'staple', an IPP\n       End\
    \ User would have no means within the protocol itself to\n       request that\
    \ a Job be stapled.  However, an existing Document\n       data formatter might\
    \ be able to request that the Document be\n       stapled directly with an embedded\
    \ instruction within the Document\n       data.  In this case, the IPP implementation\
    \ does not \"support\"\n       stapling; however, the End User is still able to\
    \ have some\n       control over the stapling of the completed Job.\n   3)  A\
    \ Printer is physically capable of stapling, and an\n       implementation chooses\
    \ to support stapling in the IPP\n       \"finishings\" attribute.  In this case,\
    \ 'staple' MUST be a value\n       in the \"finishings-supported\" Printer attribute.\
    \  Doing so\n       enables End Users to be aware of and make use of the stapling\n\
    \       feature using IPP attributes.\n   Even though support for Job Template\
    \ attributes by a Printer is\n   OPTIONAL in IPP/1.1, Printers whose associated\
    \ device(s) is capable\n   of realizing any feature or function that corresponds\
    \ to an IPP\n   attribute and some associated value SHOULD support that IPP attribute\n\
    \   and value.\n   The set of values in any of the supported value attributes\
    \ is set\n   (populated) by some administrative process or automatic sensing\n\
    \   mechanism that is outside the scope of this document.  For\n   administrative\
    \ policy and control reasons, an Administrator can\n   choose to make only a subset\
    \ of possible values visible to the\n   End User.  In this case, the real Output\
    \ Device behind the IPP\n   Printer abstraction can be capable of a certain feature;\
    \ however, an\n   Administrator is specifying that access to that feature not\
    \ be\n   exposed to the End User through IPP.  Also, since a Printer can\n   represent\
    \ a logical print device (not just a Physical Device), the\n   actual process\
    \ for supporting a value is undefined and left up to the\n   implementation. \
    \ However, if a Printer supports a value, some manual\n   human action might be\
    \ needed to realize the semantic action\n   associated with the value, but no\
    \ End User action is required.\n   For example, if one of the values in the \"\
    finishings-supported\"\n   attribute is 'staple', the actual process might be\
    \ an automatic\n   staple action by a Physical Device controlled by some command\
    \ sent to\n   the device.  Or, the actual process of stapling might be a manual\n\
    \   action by an Operator at an Operator-attended Printer.\n   For another example\
    \ of how supported attributes function, consider an\n   Administrator who desires\
    \ to control all Print Jobs so that no Job\n   sheets are printed in order to\
    \ conserve paper.  To force no Job\n   sheets, the Administrator sets the only\
    \ supported value for the\n   \"job-sheets-supported\" attribute to 'none'.  In\
    \ this case, if a\n   Client requests anything except 'none', the Job Creation\
    \ request is\n   rejected or the \"job-sheets\" value is ignored (depending on\
    \ the value\n   of \"ipp-attribute-fidelity\").  To force the use of Job start/end\n\
    \   sheets on all Jobs, the Administrator does not include the value\n   'none'\
    \ in the \"job-sheets-supported\" attribute.  In this case, if a\n   Client requests\
    \ 'none', the Job Creation request is rejected or the\n   \"job-sheets\" value\
    \ is ignored (again depending on the value of\n   \"ipp-attribute-fidelity\").\n\
    \   Job Template attributes will typically have corresponding\n   \"xxx-supported\"\
    \ and \"xxx-default\" Printer Description attributes that\n   contain the supported\
    \ and default values for the attribute.  For\n   capabilities that are not associated\
    \ with a Job, the convention is to\n   have an \"xxx-supported\" Printer Description\
    \ attribute that lists the\n   supported values and an \"xxx-configured\" Printer\
    \ Description\n   attribute that contains the value being used by the Printer.\
    \  For\n   example, the \"charset-supported\" Printer Description attribute\n\
    \   (Section 5.4.18) lists the supported character sets for the Printer\n   while\
    \ the \"charset-configured\" Printer Description attribute\n   (Section 5.4.17)\
    \ specifies the character set being used by the\n   Printer.\n"
- title: 2.3.12.  Terminating State
  contents:
  - "2.3.12.  Terminating State\n   The final state for a Job or other object is called\
    \ its Terminating\n   State.  For example, the 'aborted', 'canceled', and 'completed'\
    \ Job\n   states are Terminating States.\n"
- title: 2.4.  Abbreviations
  contents:
  - "2.4.  Abbreviations\n   ABNF: Augmented Backus-Naur Form [RFC5234]\n   ASCII:\
    \ American Standard Code for Information Interchange [RFC20]\n   HTTP: Hypertext\
    \ Transfer Protocol [RFC7230]\n   HTTPS: HTTP over TLS [RFC2818]\n   IANA: Internet\
    \ Assigned Numbers Authority\n   IEEE: Institute of Electrical and Electronics\
    \ Engineers\n   IESG: Internet Engineering Steering Group\n   IPP: Internet Printing\
    \ Protocol (this document, [RFC8010], and\n   [PWG5100.12])\n   ISTO: IEEE Industry\
    \ Standards and Technology Organization\n   LPD: Line Printer Daemon Protocol\
    \ [RFC1179]\n   PWG: IEEE-ISTO Printer Working Group\n   RFC: Request for Comments\n\
    \   TCP: Transmission Control Protocol [RFC793]\n   TLS: Transport Layer Security\
    \ [RFC5246]\n   URI: Uniform Resource Identifier [RFC3986]\n   URL: Uniform Resource\
    \ Locator [RFC3986]\n   UTF-8: Unicode Transformation Format - 8-bit [RFC3629]\n"
- title: 3.  IPP Objects
  contents:
  - "3.  IPP Objects\n   This document defines IPP objects of types Printer and Job.\
    \  Each\n   type of object models relevant aspects of a real-world entity such\
    \ as\n   a real Printer or real Print Job.  Each object type is defined as a\n\
    \   set of possible attributes that can be supported by instances of that\n  \
    \ object type.  For each object (instance), the actual set of supported\n   attributes\
    \ and values describe a specific implementation.  The\n   object's attributes\
    \ and values describe its state, capabilities,\n   realizable features, Job processing\
    \ functions, and default behaviors\n   and characteristics.  For example, the\
    \ Printer object type is defined\n   as a set of attributes that each Printer\
    \ object potentially supports.\n   In the same manner, the Job object type is\
    \ defined as a set of\n   attributes that are potentially supported by each Job\
    \ object.\n   Each attribute included in the set of attributes defining an object\n\
    \   type is labeled as:\n   o  \"REQUIRED\": each object MUST support the attribute.\n\
    \   o  \"RECOMMENDED\": each object SHOULD support the attribute.\n   o  \"OPTIONAL\"\
    : each object MAY support the attribute.\n   Some definitions of attribute values\
    \ indicate that an object MUST or\n   SHOULD support the value; otherwise, support\
    \ of the value is\n   OPTIONAL.  However, if an implementation supports an attribute,\
    \ it\n   MUST support at least one of the possible values for that attribute.\n"
- title: 3.1.  Printer Object
  contents:
  - "3.1.  Printer Object\n   The major component of the IPP Model is the Printer\
    \ object.  A\n   Printer object implements the server side of the IPP/1.1 protocol.\n\
    \   Using the protocol, End Users can query the attributes of the Printer\n  \
    \ object and submit Print Jobs to the Printer object.  The actual\n   implementation\
    \ components behind the Printer abstraction can take on\n   different forms and\
    \ different configurations.  However, the model\n   abstraction allows the details\
    \ of the configuration of real\n   components to remain opaque to the End User.\
    \  Section 4 describes\n   each of the Printer operations in detail.\n   The capabilities\
    \ and state of a Printer object are described by its\n   attributes.  Printer\
    \ attributes are divided into two groups:\n   o  \"job-template\" attributes:\
    \ These attributes describe supported Job\n      processing capabilities and defaults\
    \ for the Printer object (see\n      Section 5.2)\n   o  \"printer-description\"\
    \ attributes: These attributes describe the\n      Printer's identification, state,\
    \ location, references to other\n      sources of information about the Printer\
    \ object, etc. (see\n      Section 5.4)\n   Since a Printer object is an abstraction\
    \ of a generic Document Output\n   Device and print service provider, a Printer\
    \ object could be used to\n   represent any real or virtual device with semantics\
    \ consistent with\n   the Printer object, such as a fax device, an imager, or\
    \ even a CD\n   writer.\n   Some examples of configurations supporting a Printer\
    \ object include:\n   1.  An Output Device with no spooling capabilities\n   2.\
    \  An Output Device with a built-in spooler\n   3.  A print server supporting\
    \ IPP with one or more associated Output\n       Devices\n       3a.  The associated\
    \ Output Devices are or are not capable of\n            spooling Jobs\n      \
    \ 3b.  The associated Output Devices possibly support IPP\n   Figure 2 shows some\
    \ examples of how Printers can be realized on top\n   of various distributed printing\
    \ configurations.  The embedded case\n   below represents configurations 1 and\
    \ 2 above.  The \"hosted Printer\"\n   and \"fan out\" items represent configurations\
    \ 3a and 3b, respectively.\n   In this document, the term \"Client\" refers to\
    \ a software entity that\n   sends IPP operation requests to an IPP Printer and\
    \ accepts IPP\n   operation responses.  A Client MAY be:\n   1.  contained within\
    \ software controlled by an End User, e.g.,\n       activated by the \"Print\"\
    \ menu item in an application, or\n   2.  the print server component that sends\
    \ IPP requests to either an\n       Output Device or another \"downstream\" print\
    \ server.\n   The term \"IPP Printer\" is a network entity that accepts IPP operation\n\
    \   requests and returns IPP operation responses.  As such, an IPP\n   Printer\
    \ object MAY be:\n   1.  an (embedded) device component that accepts IPP requests\
    \ and\n       controls the device, or\n   2.  a component of a print server that\
    \ accepts IPP requests (where\n       the print server controls one or more networked\
    \ devices using IPP\n       or other protocols).\n   Legend:\n   ##### indicates\
    \ a Printer object that is\n         either embedded in an Output Device or\n\
    \         hosted in a server.  The Printer object\n         might or might not\
    \ be capable of queuing/spooling.\n   any   indicates any network protocol or\
    \ direct\n         connect, including IPP\n   embedded Printer:\n            \
    \                                 Output Device\n                            \
    \               +---------------+\n    O   +--------+                        \
    \ |  ###########  |\n   /|\\  | Client |------------IPP------------># Printer\
    \ #  |\n   / \\  +--------+                         |  # Object  #  |\n      \
    \                                     |  ###########  |\n                    \
    \                       +---------------+\n   hosted Printer:\n              \
    \                             +---------------+\n    O   +--------+        ###########\
    \      |               |\n   /|\\  | Client |--IPP--># Printer #-any->| Output\
    \ Device |\n   / \\  +--------+        # Object  #      |               |\n  \
    \                        ###########      +---------------+\n                \
    \                            +---------------+\n   fan out:                  \
    \               |               |\n                                        +-->|\
    \ Output Device |\n                                    any/    |             \
    \  |\n    O   +--------+      ###########   /     +---------------+\n   /|\\ \
    \ | Client |-IPP-># Printer #--*\n   / \\  +--------+      # Object  #   \\  \
    \   +---------------+\n                        ########### any\\    |        \
    \       |\n                                        +-->| Output Device |\n   \
    \                                         |               |\n                \
    \                            +---------------+\n                 Figure 2: IPP\
    \ Printer Object Architecture\n"
- title: 3.2.  Job Object
  contents:
  - "3.2.  Job Object\n   A Job object is used to model a Print Job.  A Job object\
    \ contains\n   zero or more Documents.  The information required to create a Job\n\
    \   object is sent in a Job Creation request from the End User via an IPP\n  \
    \ Client to the Printer.  The Printer validates the Job Creation\n   request,\
    \ and if the Printer accepts the request, the Printer creates\n   the new Job\
    \ object.  Section 4 describes each of the Job operations\n   in detail.\n   The\
    \ characteristics and state of a Job object are described by its\n   attributes.\
    \  Job attributes are grouped into two groups as follows:\n   o  \"job-template\"\
    \ attributes: These attributes can be supplied by the\n      Client or End User\
    \ and include Job processing instructions that\n      are intended to override\
    \ any Printer defaults and/or instructions\n      embedded within the Document\
    \ data (see Section 5.2)\n   o  \"job-description\" attributes: These attributes\
    \ describe the Job's\n      identification, state, size, etc.  The Client supplies\
    \ some of\n      these attributes, and the Printer generates others (see\n   \
    \   Section 5.3)\n   An implementation MUST support at least one Document per\
    \ Job object.\n   An implementation MAY support multiple Documents per Job object.\
    \  A\n   Document is either:\n   o  a stream of Document data in a format supported\
    \ by the Printer\n      (typically a Page Description Language -- PDL), or\n \
    \  o  a reference to such a stream of Document data.\n   All Job processing instructions\
    \ are modeled as Job object attributes.\n   These attributes are called \"Job\
    \ Template attributes\", and they apply\n   equally to all Documents within a\
    \ Job object.\n"
- title: 3.3.  Object Relationships
  contents:
  - "3.3.  Object Relationships\n   IPP objects have relationships that are maintained\
    \ persistently along\n   with the persistent storage of the object attributes.\n\
    \   A Printer object can represent either one or more physical Output\n   Devices\
    \ or a Logical Device that \"processes\" Jobs but never actually\n   uses a physical\
    \ Output Device to put marks on paper.  Examples of\n   Logical Devices include\
    \ a web page publisher or a gateway into an\n   online Document archive or repository.\
    \  A Printer contains zero or\n   more Job objects.\n   A Job object is contained\
    \ by exactly one Printer; however, the\n   identical Document data associated\
    \ with a Job could be sent to either\n   the same or a different Printer.  In\
    \ this case, a second Job object\n   would be created that would be almost identical\
    \ to the first Job;\n   however, it would have new (different) Job object identifiers\
    \ (see\n   Section 3.4).\n   A Job either is empty (before any Documents have\
    \ been added) or\n   contains one or more Documents.  If the contained Document\
    \ is a\n   stream of Document data, that stream can be contained in only one\n\
    \   Document.  However, there can be identical copies of the stream in\n   other\
    \ Documents in the same or different Jobs.  If the contained\n   Document is just\
    \ a reference to a stream of Document data, other\n   Documents (in the same or\
    \ different Job(s)) contain the same\n   reference.\n"
- title: 3.4.  Object Identity
  contents:
  - "3.4.  Object Identity\n   All IPP objects (Printers, Jobs, etc.) are identified\
    \ by a Uniform\n   Resource Identifier (URI) [RFC3986] so that they can be persistently\n\
    \   and unambiguously referenced.  Since every URL is a specialized form\n   of\
    \ a URI, even though the more generic term \"URI\" is used throughout\n   the\
    \ rest of this document, its usage is intended to cover the more\n   specific\
    \ notion of \"URL\" as well.\n   An Administrator configures Printers to either\
    \ support or not support\n   authentication and/or message privacy using Transport\
    \ Layer Security\n   (TLS) [RFC5246]; the mechanism for security configuration\
    \ is outside\n   the scope of this document.  In some situations, both types of\n\
    \   connections (both authenticated and unauthenticated) can be\n   established\
    \ using a single communication channel that has some sort\n   of negotiation mechanism.\
    \  In other situations, multiple\n   communication channels are used, one for\
    \ each type of security\n   configuration.  Section 9 provides a full description\
    \ of all security\n   considerations and configurations.\n   If a Printer supports\
    \ more than one communication channel, some or\n   all of those channels might\
    \ support and/or require different security\n   mechanisms.  In such cases, an\
    \ Administrator could expose the\n   simultaneous support for these multiple communication\
    \ channels as\n   multiple URIs for a single Printer where each URI represents\
    \ one of\n   the communication channels to the Printer.  To support this\n   flexibility,\
    \ the IPP Printer object type defines a multi-valued\n   identification attribute\
    \ called the \"printer-uri-supported\" attribute\n   that MUST contain at least\
    \ one URI.  The \"printer-uri-supported\"\n   attribute has two companion attributes,\
    \ the \"uri-security-supported\"\n   attribute and the \"uri-authentication-supported\"\
    \ attribute.  Both\n   have the same cardinality as \"printer-uri-supported\"\
    .  The purpose of\n   the \"uri-security-supported\" attribute is to indicate\
    \ the security\n   mechanisms (if any) used for each URI listed in\n   \"printer-uri-supported\"\
    .  The purpose of the\n   \"uri-authentication-supported\" attribute is to indicate\
    \ the\n   authentication mechanisms (if any) used for each URI listed in\n   \"\
    printer-uri-supported\".  These three attributes are fully described\n   in Sections\
    \ 5.4.1, 5.4.2, and 5.4.3.\n   When a Job is submitted to the Printer via a Job\
    \ Creation request,\n   the Client supplies only a single Printer URI.  The Client-supplied\n\
    \   Printer URI MUST be one of the values in the \"printer-uri-supported\"\n \
    \  Printer attribute.\n   IPP/1.1 does not specify how the Client obtains the\
    \ Client-supplied\n   URI, but it is RECOMMENDED that a Printer be registered\
    \ as an entry\n   in a directory service.  End Users and programs can then interrogate\n\
    \   the directory, searching for Printers.  Appendix D defines a generic\n   schema\
    \ for Printer object entries in the directory service and\n   describes how the\
    \ entry acts as a bridge to the actual IPP Printer.\n   The entry in the directory\
    \ that represents the IPP Printer includes\n   the possibly many URIs for that\
    \ Printer as values in one of its\n   attributes.\n   When a Client submits a\
    \ Job Creation request to the Printer, the\n   Printer validates the request and\
    \ creates a new Job object.  The\n   Printer assigns the new Job a numeric identifier\
    \ that is stored in\n   the \"job-id\" Job attribute and a URI that is stored\
    \ in the \"job-uri\"\n   Job attribute.  Both the numeric identifier and URI can\
    \ then be used\n   by Clients as the target for subsequent Job operations; the\
    \ numeric\n   identifier is preferred.  The Printer generates the Job numeric\n\
    \   identifier and URI based on its configured security policy and the\n   URI\
    \ used by the Client in the Job Creation request.\n   For example, consider a\
    \ Printer that supports both a communication\n   channel secured by the use of\
    \ TLS (using HTTP over TLS with an\n   \"https\" schemed URI) and another open\
    \ communication channel that is\n   not secured with TLS (using a simple \"http\"\
    \ schemed URI).  If a\n   Client submits a Job using the secure URI, the Printer\
    \ assigns the\n   new Job a secure URI as well.  If a Client were to submit a\
    \ Job using\n   the open-channel URI, the Printer might assign the new Job an\n\
    \   open-channel URI.  Clients SHOULD use the \"printer-uri\" and \"job-id\"\n\
    \   attributes to target a Job to avoid any ambiguity about the security\n   of\
    \ the communication channel.\n   In addition, the Printer also populates the Job's\
    \ \"job-printer-uri\"\n   attribute.  This is a reference back to the Printer\
    \ that created the\n   Job.  If a Client only has access to a Job's \"job-uri\"\
    \ identifier,\n   the Client can query the Job's \"job-printer-uri\" attribute\
    \ in order\n   to determine which Printer created the Job.  If the Printer supports\n\
    \   more than one URI, the Printer picks the one URI supplied by the\n   Client\
    \ when creating the Job to build the value for and to populate\n   the Job's \"\
    job-printer-uri\" attribute.\n   In addition to identifiers, IPP objects have\
    \ names -- \"printer-name\"\n   for Printers and \"job-name\" for Jobs.  An object\
    \ name is not\n   guaranteed to be unique across all instances of all objects.\
    \  A\n   Printer's name is chosen and set by an Administrator through some\n \
    \  mechanism outside the scope of this document.  A Job's name can be\n   chosen\
    \ and supplied by the Client submitting the Job.  If the Client\n   does not supply\
    \ a Job name, the Printer generates a name for the new\n   Job.  In all cases,\
    \ the name only has local meaning.\n   To summarize:\n   o  Each Printer is identified\
    \ by one or more URIs.  The Printer's\n      \"printer-uri-supported\" attribute\
    \ contains the URI(s).\n   o  The Printer's \"uri-security-supported\" attribute\
    \ identifies the\n      communication channel security protocols that have been\
    \ configured\n      for the various Printer URIs (e.g., 'tls' or 'none').\n  \
    \ o  The Printer's \"uri-authentication-supported\" attribute identifies\n   \
    \   the authentication mechanisms that have been configured for the\n      various\
    \ Printer URIs (e.g., 'digest', 'none', etc.).\n   o  Each Job is identified by\
    \ a numeric identifier, which is a 32-bit\n      positive integer.  The Job's\
    \ \"job-id\" attribute contains the\n      Job ID.  The Job ID is only unique\
    \ within the context of the\n      Printer that created the Job.\n   o  Each Job\
    \ is also identified by a URI.  The Job's \"job-uri\"\n      attribute contains\
    \ the URI, although its use by Clients is\n      DEPRECATED.\n   o  Each Job has\
    \ a \"job-printer-uri\" attribute, which contains the URI\n      of the Printer\
    \ that was used to create the Job.  This attribute is\n      used to determine\
    \ the Printer that created a Job when given only\n      the URI for the Job. \
    \ This linkage is necessary to determine the\n      languages, charsets, and operations\
    \ that are supported on that Job\n      (the basis for such support comes from\
    \ the creating Printer).\n   o  Each Printer has a name, which is not necessarily\
    \ unique.  The\n      Administrator chooses and sets this name through some mechanism\n\
    \      outside the scope of this IPP/1.1 document.  The Printer's\n      \"printer-name\"\
    \ attribute contains the name.\n   o  Each Job has a name, which is not necessarily\
    \ unique.  The Client\n      optionally supplies this name in the Job Creation\
    \ request.  If the\n      Client does not supply this name, the Printer generates\
    \ a name for\n      the Job.  The Job's \"job-name\" attribute contains the name.\n"
- title: 4.  IPP Operations
  contents:
  - "4.  IPP Operations\n   IPP objects (Printers, Jobs, etc.) support operations.\
    \  An operation\n   consists of a request and a response.  When a Client communicates\n\
    \   with a Printer or its Jobs, the Client issues an operation request to\n  \
    \ the Printer URI and object's numeric identifier, if needed.\n   Operation requests\
    \ and responses have parameters that identify the\n   operation.  Operations also\
    \ have attributes that affect the runtime\n   characteristics of the operation\
    \ (the intended target, localization\n   information, etc.).  These operation-specific\
    \ attributes are called\n   \"operation attributes\" (as compared to object attributes\
    \ such as\n   Printer attributes or Job attributes).  Each request carries along\n\
    \   with it any operation attributes, object attributes, and/or Document\n   data\
    \ required to perform the operation.  Each request requires a\n   response from\
    \ the object.  Each response indicates success or failure\n   of the operation\
    \ with a status-code as a response parameter.  The\n   response contains any operation\
    \ attributes, object attributes, and/or\n   status messages generated during the\
    \ execution of the operation\n   request.\n   This section describes the semantics\
    \ of the IPP operations, both\n   requests and responses, in terms of the parameters,\
    \ attributes, and\n   other data associated with each operation.\n   The Printer\
    \ operations defined in this document are:\n      Print-Job (Section 4.2.1)\n\
    \      Print-URI (Section 4.2.2)\n      Validate-Job (Section 4.2.3)\n      Create-Job\
    \ (Section 4.2.4)\n      Get-Printer-Attributes (Section 4.2.5)\n      Get-Jobs\
    \ (Section 4.2.6)\n      Pause-Printer (Section 4.2.7)\n      Resume-Printer (Section\
    \ 4.2.8)\n      Purge-Jobs (Section 4.2.9)\n   The Job operations defined in this\
    \ document are:\n      Send-Document (Section 4.3.1)\n      Send-URI (Section\
    \ 4.3.2)\n      Cancel-Job (Section 4.3.3)\n      Get-Job-Attributes (Section\
    \ 4.3.4)\n      Hold-Job (Section 4.3.5)\n      Release-Job (Section 4.3.6)\n\
    \      Restart-Job (Section 4.3.7)\n   The Send-Document and Send-URI Job operations\
    \ are used to add\n   Documents to an existing Job created using the Create-Job\
    \ operation.\n"
- title: 4.1.  Common Semantics
  contents:
  - "4.1.  Common Semantics\n   All IPP operations require some common parameters\
    \ and operation\n   attributes.  These common elements and their semantic characteristics\n\
    \   are defined and described in more detail in the following sections.\n"
- title: 4.1.1.  Required Parameters
  contents:
  - "4.1.1.  Required Parameters\n   Every operation request contains the following\
    \ REQUIRED parameters:\n   o  a \"version-number\",\n   o  an \"operation-id\"\
    ,\n   o  a \"request-id\", and\n   o  the attributes that are REQUIRED for that\
    \ type of request.\n   Every operation response contains the following REQUIRED\
    \ parameters:\n   o  a \"version-number\",\n   o  a \"status-code\",\n   o  the\
    \ \"request-id\" that was supplied in the corresponding request,\n      and\n\
    \   o  the attributes that are REQUIRED for that type of response.\n   The Encoding\
    \ and Transport document [RFC8010] defines special rules\n   for the encoding\
    \ of these parameters.  All other operation elements\n   are represented using\
    \ the more generic encoding rules for attributes\n   and groups of attributes.\n"
- title: 4.1.2.  Operation IDs and Request IDs
  contents:
  - "4.1.2.  Operation IDs and Request IDs\n   Each IPP operation request includes\
    \ an identifying \"operation-id\"\n   value.  Valid values are defined in the\
    \ \"operations-supported\"\n   Printer attribute section (see Section 5.4.15).\
    \  The Client specifies\n   which operation is being requested by supplying the\
    \ correct\n   \"operation-id\" value.\n   In addition, every invocation of an\
    \ operation is identified by a\n   \"request-id\" value.  For each request, the\
    \ Client chooses the\n   \"request-id\", which MUST be an integer (possibly unique,\
    \ depending on\n   Client requirements) in the range from 1 to 2**31 - 1 (inclusive).\n\
    \   This \"request-id\" allows Clients to manage multiple outstanding\n   requests.\
    \  The receiving IPP object (Printer, Job, etc.) copies all\n   32 bits of the\
    \ Client-supplied \"request-id\" attribute into the\n   response so that the Client\
    \ can match the response with the correct\n   outstanding request, even if the\
    \ \"request-id\" is out of range.  If\n   the request is terminated before the\
    \ complete \"request-id\" is\n   received, the IPP object rejects the request\
    \ and returns a response\n   with a \"request-id\" of 0.\n   Note: In some cases,\
    \ the transport protocol underneath IPP might be a\n   connection-oriented protocol\
    \ that would make it impossible for a\n   Client to receive responses in any order\
    \ other than the order in\n   which the corresponding requests were sent.  In\
    \ such cases, the\n   \"request-id\" attribute would not be essential for correct\
    \ protocol\n   operation.  However, in other transport mappings the operation\n\
    \   responses could come back in any order, in which case the\n   \"request-id\"\
    \ is essential.\n"
- title: 4.1.3.  Attributes
  contents:
  - "4.1.3.  Attributes\n   Operation requests and responses are both composed of\
    \ groups of\n   attributes and/or Document data.  The attribute groups are:\n\
    \   o  Operation Attributes: These attributes are passed in the operation\n  \
    \    and affect the IPP object's behavior while processing the\n      operation\
    \ request, and they can affect other attributes or groups\n      of attributes.\
    \  Some operation attributes describe the Document\n      data associated with\
    \ the Print Job and are associated with new Job\n      objects; however, most\
    \ operation attributes do not persist beyond\n      the life of the operation.\
    \  The description of each operation\n      attribute includes conformance statements\
    \ indicating which\n      operation attributes are REQUIRED and which are OPTIONAL\
    \ for an\n      IPP object to support, as well as which attributes a Client MUST\n\
    \      supply in a request and an IPP object MUST supply in a response.\n   o\
    \  Job Template Attributes: These attributes affect the processing of\n      a\
    \ Job.  A Client MAY supply Job Template attributes in a Job\n      Creation request,\
    \ and the receiving object MUST be prepared to\n      receive all supported attributes.\
    \  The Job object can later be\n      queried to find out what Job Template attributes\
    \ were originally\n      requested in the Job Creation request, and such attributes\
    \ are\n      returned in the response as Job object attributes.  The Printer\n\
    \      object can be queried about its Job Template attributes to find\n     \
    \ out what type of Job processing capabilities are supported and/or\n      what\
    \ the default Job processing behaviors are, though such\n      attributes are\
    \ returned in the response as Printer object\n      attributes.  The \"ipp-attribute-fidelity\"\
    \ operation attribute\n      affects processing of all Client-supplied Job Template\
    \ attributes\n      -- see Section 4.2.1.1 and Appendix C for a full description\
    \ of\n      \"ipp-attribute-fidelity\" and its relationship to other attributes.\n\
    \   o  Job Object Attributes: These attributes are returned in response\n    \
    \  to a query operation directed at a Job object.\n   o  Printer Object Attributes:\
    \ These attributes are returned in\n      response to a query operation directed\
    \ at a Printer object.\n   o  Unsupported Attributes: In a Job Creation request,\
    \ the Client\n      supplies a set of operation and Job Template attributes. \
    \ If any\n      of these attributes or their values are unsupported by the Printer\n\
    \      object, the Printer object SHOULD return the set of unsupported\n     \
    \ attributes in the response.  Section 4.1.7, Section 4.2.1.2, and\n      Appendix\
    \ C give a full description of how Job Template attributes\n      supplied by\
    \ the Client in a Job Creation request are processed by\n      the Printer object\
    \ and how unsupported attributes are returned to\n      the Client.  Because of\
    \ extensibility, any IPP object might\n      receive a request that contains new\
    \ or unknown attributes or\n      values for which it has no support.  In such\
    \ cases, the IPP object\n      processes what it can and returns the unsupported\
    \ attributes in\n      the response.  The Unsupported Attributes group is defined\
    \ for all\n      operation responses for returning unsupported attributes that\
    \ the\n      Client supplied in the request.\n   Later in this section, each operation\
    \ is formally defined by\n   identifying the allowed and expected groups of attributes\
    \ for each\n   request and response.  The model identifies a specific order for\
    \ each\n   group in each request or response, but the attributes within each\n\
    \   group can be in any order, unless specified otherwise.\n   The attributes\
    \ within a group MUST be unique; if an attribute with\n   the same name occurs\
    \ more than once, the group is malformed.  Clients\n   MUST NOT submit such malformed\
    \ requests, and Printers MUST NOT return\n   such malformed responses.  If such\
    \ a malformed request is submitted\n   to a Printer, the Printer MUST either (1)\
    \ reject the request with the\n   'client-error-bad-request' status-code (RECOMMENDED\
    \ -- see\n   Appendix B.1.4.1) or (2) process the request normally after selecting\n\
    \   only one of the attribute instances, depending on implementation.\n   Which\
    \ attribute is selected when there are duplicate attributes\n   depends on implementation.\
    \  The IPP Printer MUST NOT use the values\n   from more than one such duplicate\
    \ attribute instance.\n   Each attribute definition includes the attribute's name\
    \ followed by\n   the name of its attribute syntax(es) in parentheses.  In addition,\n\
    \   each 'integer' attribute can be followed by the allowed range in\n   parentheses,\
    \ (m:n), for values of that attribute.  Each 'text' or\n   'name' attribute can\
    \ be followed by the maximum size in octets in\n   parentheses, (size), for values\
    \ of that attribute.  For more details\n   on attribute syntax notation, see the\
    \ descriptions of these attribute\n   syntaxes in Section 5.1.\n   Note: Document\
    \ data included in the operation is not strictly an\n   attribute, but it is treated\
    \ as a special attribute group for\n   ordering purposes.  The only operations\
    \ defined in this document that\n   support supplying the Document data within\
    \ an operation request are\n   Print-Job and Send-Document.  There are no operations\
    \ defined in this\n   document whose responses include Document data.\n   Some\
    \ operations are REQUIRED for IPP objects to support; the others\n   are OPTIONAL\
    \ (see Section 6.2.2).  Therefore, before using an\n   OPTIONAL operation, a Client\
    \ SHOULD first use the REQUIRED\n   Get-Printer-Attributes operation to query\
    \ the Printer's\n   \"operations-supported\" attribute in order to determine which\
    \ OPTIONAL\n   operations are actually supported.  The Client SHOULD NOT use an\n\
    \   OPTIONAL operation that is not supported.  When an IPP object\n   receives\
    \ a request to perform an operation it does not support, it\n   MUST return the\
    \ 'server-error-operation-not-supported' status-code\n   (see Appendix B.1.5.2).\
    \  An IPP object is non-conformant if it does\n   not support a REQUIRED operation.\n"
- title: 4.1.4.  Character Set and Natural Language Operation Attributes
  contents:
  - "4.1.4.  Character Set and Natural Language Operation Attributes\n   Some Job\
    \ and Printer attributes have values that are text strings and\n   names intended\
    \ for human understanding rather than machine\n   understanding (see the 'text'\
    \ and 'name' attribute syntax\n   descriptions in Section 5.1).  The following\
    \ sections describe two\n   special operation attributes called \"attributes-charset\"\
    \ and\n   \"attributes-natural-language\" whose values are used when interpreting\n\
    \   other attributes using the 'text' and 'name' attribute syntaxes.  For\n  \
    \ Job Creation operations, the IPP Printer implementation also saves\n   these\
    \ two attributes with the new Job object as Job Status\n   attributes.\n   The\
    \ \"attributes-charset\" and \"attributes-natural-language\" attributes\n   MUST\
    \ be the first two attributes in every IPP request and response,\n   as part of\
    \ the initial Operation Attributes group of the IPP message.\n   The \"attributes-charset\"\
    \ attribute MUST be the first attribute in the\n   group, and the \"attributes-natural-language\"\
    \ attribute MUST be the\n   second attribute in the group.\n   For the sake of\
    \ brevity in this document, these operation attribute\n   descriptions are not\
    \ repeated with every operation request and\n   response but instead have a reference\
    \ back to this section.\n"
- title: 4.1.4.1.  Request Operation Attributes
  contents:
  - "4.1.4.1.  Request Operation Attributes\n   The Client MUST supply and the Printer\
    \ object MUST support the\n   following REQUIRED operation attributes in every\
    \ IPP operation\n   request:\n   \"attributes-charset\" (charset):\n      This\
    \ operation attribute identifies the charset (coded character\n      set and encoding\
    \ method) used by any 'text' and 'name' attributes\n      that the Client is supplying\
    \ in this request.  It also identifies\n      the charset that the Printer object\
    \ MUST use (if supported) for\n      all 'text' and 'name' attributes and status\
    \ messages that the\n      Printer object returns in the response to this request.\
    \  See\n      Sections 5.1.2 and 5.1.3 for the definitions of the 'text' and\n\
    \      'name' attribute syntaxes.\n      All Clients and IPP objects MUST support\
    \ the 'utf-8' charset\n      [RFC3629] and MAY support additional charsets, provided\
    \ that they\n      are registered with IANA [RFC2978] [IANA-CS].  If the Printer\n\
    \      object does not support the Client-supplied charset value, the\n      Printer\
    \ object MUST reject the request, set the\n      \"attributes-charset\" to 'utf-8'\
    \ in the response, and return the\n      'client-error-charset-not-supported'\
    \ status-code and any 'text' or\n      'name' attributes using the 'utf-8' charset.\
    \  The Printer MAY\n      return any attributes in the Unsupported Attributes\
    \ group (see\n      Sections 4.1.7 and 4.2.1.2).  The Printer object MUST indicate\
    \ the\n      charset(s) supported as the values of the \"charset-supported\"\n\
    \      Printer attribute (see Section 5.4.18), so that the Client can\n      query\
    \ to determine which charset(s) is supported.\n      Note to Client implementors:\
    \ Since IPP objects are only required\n      to support the 'utf-8' charset, in\
    \ order to maximize\n      interoperability with multiple IPP object implementations,\
    \ a\n      Client SHOULD supply 'utf-8' in the \"attributes-charset\" operation\n\
    \      attribute, even though the Client is only passing and able to\n      present\
    \ a simpler charset, such as US-ASCII [RFC20] or ISO-8859-1\n      [ISO8859-1].\
    \  Then the Client will have to filter out, perform\n      charset conversion\
    \ on, or replace those characters that are\n      returned in the response that\
    \ it cannot present to its user.  On\n      the other hand, if both the Client\
    \ and the IPP objects also\n      support a charset in common besides 'utf-8',\
    \ the Client can use\n      that charset in order to avoid charset conversion\
    \ or data loss.\n      See the 'charset' attribute syntax description in Section\
    \ 5.1.8\n      for the syntax and semantic interpretation of the values of this\n\
    \      attribute and for example values.\n   \"attributes-natural-language\" (naturalLanguage):\n\
    \      This operation attribute identifies the natural language [RFC5646]\n  \
    \    used by any 'text' and 'name' attributes that the Client is\n      supplying\
    \ in this request.  This attribute also identifies the\n      natural language\
    \ that the Printer object SHOULD use for all 'text'\n      and 'name' attributes\
    \ and status messages that the Printer object\n      returns in the response to\
    \ this request.  See the\n      'naturalLanguage' attribute syntax description\
    \ in Section 5.1.9\n      for the syntax and semantic interpretation of the values\
    \ of this\n      attribute and for example values.\n      There are no REQUIRED\
    \ natural languages required for the Printer\n      object to support.  However,\
    \ the Printer's\n      \"generated-natural-language-supported\" attribute identifies\
    \ the\n      natural languages supported by the Printer object and any\n     \
    \ contained Jobs for all text strings generated by the IPP object.\n      A Client\
    \ MAY query this attribute to determine which natural\n      language(s) is supported\
    \ for generated messages.\n      For any of the attributes for which the Printer\
    \ object generates\n      text, i.e., for the \"job-state-message\", \"printer-state-message\"\
    ,\n      and status messages (see Section 4.1.6), the Printer object MUST\n  \
    \    be able to generate these text strings in any of its supported\n      natural\
    \ languages.  If the Client requests a natural language that\n      is not supported,\
    \ the Printer object MUST return these generated\n      messages in the Printer's\
    \ configured natural language as specified\n      by the Printer's \"natural-language-configured\"\
    \ attribute (see\n      Section 5.4.19).\n      For other 'text' and 'name' attributes\
    \ supplied by the Client,\n      authentication system, Operator, Administrator,\
    \ or manufacturer\n      (i.e., for \"job-originating-user-name\", \"printer-name\"\
    \ (name),\n      \"printer-location\" (text), \"printer-info\" (text), and\n \
    \     \"printer-make-and-model\" (text)), the Printer object is only\n      required\
    \ to support the configured natural language of the Printer\n      identified\
    \ by the Printer's \"natural-language-configured\"\n      attribute, though support\
    \ of additional natural languages for\n      these attributes is permitted.\n\
    \      For any 'text' or 'name' attribute in the request that is in a\n      different\
    \ natural language than the value supplied in the\n      \"attributes-natural-language\"\
    \ operation attribute, the Client MUST\n      use the Natural Language Override\
    \ mechanism (see Sections 5.1.2.2\n      and 5.1.3.2) for each such attribute\
    \ value supplied.  The Client\n      MAY use the Natural Language Override mechanism\
    \ redundantly, i.e.,\n      use it even when the value is in the same natural\
    \ language as the\n      value supplied in the \"attributes-natural-language\"\
    \ operation\n      attribute of the request.\n      The IPP object MUST accept\
    \ any natural language and any Natural\n      Language Override, whether the IPP\
    \ object supports that natural\n      language or not (and independent of the\
    \ value of the\n      \"ipp-attribute-fidelity\" operation attribute).  That is,\
    \ the IPP\n      object accepts all Client-supplied values no matter what the\n\
    \      values are in the Printer's \"generated-natural-language-supported\"\n\
    \      attribute.  That attribute,\n      \"generated-natural-language-supported\"\
    , only applies to generated\n      messages, not Client-supplied messages.  The\
    \ IPP object MUST\n      remember that natural language for all Client-supplied\
    \ attributes,\n      and when returning those attributes in response to a query,\
    \ the\n      IPP object MUST indicate that natural language.\n      Each value\
    \ whose attribute syntax type is 'text' or 'name' (see\n      Sections 5.1.2 and\
    \ 5.1.3) has an Associated Natural Language.\n      This document does not specify\
    \ how this association is stored in a\n      Printer or Job object.  When such\
    \ a value is encoded in a request\n      or response, the natural language is\
    \ either implicit or explicit:\n      *  In the implicit case, the value contains\
    \ only the text/name\n         value, and the language is specified by the\n \
    \        \"attributes-natural-language\" operation attribute in the\n        \
    \ request or response (see Sections 5.1.2.1 and 5.1.3.1).\n      *  In the explicit\
    \ case (also known as the Natural Language\n         Override case), the value\
    \ contains both the language and the\n         text/name value (see Sections 5.1.2.2\
    \ and 5.1.3.2).\n      For example, the \"job-name\" attribute MAY be supplied\
    \ by the\n      Client in a Job Creation request.  The text value for this\n \
    \     attribute will be in the natural language identified by the\n      \"attribute-natural-language\"\
    \ attribute, or if different, as\n      identified by the Natural Language Override\
    \ mechanism.  If\n      supplied, the IPP object will use the value of the \"\
    job-name\"\n      attribute to populate the Job's \"job-name\" attribute.  Whenever\n\
    \      any Client queries the Job's \"job-name\" attribute, the IPP object\n \
    \     returns the attribute as stored and uses the Natural Language\n      Override\
    \ mechanism to specify the natural language, if it is\n      different from that\
    \ reported in the \"attributes-natural-language\"\n      operation attribute of\
    \ the response.  The IPP object MAY use the\n      Natural Language Override mechanism\
    \ redundantly, i.e., use it even\n      when the value is in the same natural\
    \ language as the value\n      supplied in the \"attributes-natural-language\"\
    \ operation attribute\n      of the response.\n      An IPP object MUST NOT reject\
    \ a request based on a supplied\n      natural language in an \"attributes-natural-language\"\
    \ operation\n      attribute or in any attribute that uses the Natural Language\n\
    \      Override.\n      Note: Supplying 'text' or 'name' attributes with an incompatible\n\
    \      combination of natural language and charset can cause undesired\n     \
    \ behavior.  For example, suppose a Printer supports charsets\n      'utf-8',\
    \ 'iso-8859-1', and 'iso-8859-7'.  Suppose also that it\n      supports natural\
    \ languages 'en' (English), 'fr' (French), and 'el'\n      (Greek).  Although\
    \ the Printer supports the charset 'iso-8859-1'\n      and natural language 'el',\
    \ it probably does not support the\n      combination of Greek text strings using\
    \ the 'iso-8859-1' charset.\n      The Printer handles this apparent incompatibility\
    \ differently,\n      depending on the context in which it occurs:\n      *  In\
    \ a Job Creation request: If the Client supplies a 'text' or\n         'name'\
    \ attribute (for example, the \"job-name\" operation\n         attribute) that\
    \ uses an apparently incompatible combination, it\n         is a Client choice\
    \ that does not affect the Printer or its\n         correct operation.  Therefore,\
    \ the Printer simply accepts the\n         Client-supplied value, stores it with\
    \ the Job, and responds\n         back with the same combination whenever the\
    \ Client (or any\n         Client) queries for that attribute.\n      *  In a\
    \ query-type operation, like Get-Printer-Attributes: If the\n         Client requests\
    \ an apparently incompatible combination, the\n         Printer responds (as described\
    \ in Section 4.1.4.2) using the\n         Printer's configured natural language\
    \ rather than the natural\n         language requested by the Client.\n      In\
    \ either case, the Printer does not reject the request because of\n      the apparent\
    \ incompatibility.  The potential incompatible\n      combination of charset and\
    \ natural language can occur either at\n      the global operation level or at\
    \ the Natural Language Override\n      attribute-by-attribute level.  In addition,\
    \ since the response\n      always includes explicit charset and natural language\
    \ information,\n      there is never any question or ambiguity in how the Client\n\
    \      interprets the response.\n"
- title: 4.1.4.2.  Response Operation Attributes
  contents:
  - "4.1.4.2.  Response Operation Attributes\n   The Printer MUST supply and the Client\
    \ MUST support the following\n   REQUIRED operation attributes in every IPP/1.1\
    \ operation response:\n   \"attributes-charset\" (charset):\n      This operation\
    \ attribute identifies the charset used by any 'text'\n      and 'name' attributes\
    \ that the Printer object is returning in this\n      response.  The value in\
    \ this response MUST be the same value as\n      the \"attributes-charset\" operation\
    \ attribute supplied by the\n      Client in the request.  If this is not possible\
    \ (i.e., the charset\n      requested is not supported), the request would have\
    \ been rejected.\n      See \"attributes-charset\" described in Section 4.1.4.1\
    \ above.\n      If the Printer object supports more than just the 'utf-8' charset,\n\
    \      the Printer object MUST be able to perform code conversion between\n  \
    \    each of the charsets supported on a \"highest fidelity possible\"\n     \
    \ basis in order to return the 'text' and 'name' attributes in the\n      charset\
    \ requested by the Client.  However, some information loss\n      can occur during\
    \ the charset conversion, depending on the charsets\n      involved.  For example,\
    \ depending on implementation, the Printer\n      object can convert from a UTF-8\
    \ 'a' to a US-ASCII 'a' (with no\n      loss of information); from an ISO Latin\
    \ 1 CAPITAL LETTER A WITH\n      ACUTE ACCENT to US-ASCII 'A' (losing the accent);\
    \ or from a UTF-8\n      Japanese Kanji character to some ISO Latin 1 error character\n\
    \      indication such as '?', a decimal code equivalent, or the absence\n   \
    \   of a character.\n      Whether an implementation that supports more than one\
    \ charset\n      stores the data in the charset supplied by the Client or performs\n\
    \      code conversion to one of the other supported charsets depends on\n   \
    \   implementation.  The strategy should try to minimize loss of\n      information\
    \ during code conversion.  On each response, such an\n      implementation converts\
    \ from its internal charset to that\n      requested.\n   \"attributes-natural-language\"\
    \ (naturalLanguage):\n      This operation attribute identifies the natural language\
    \ used by\n      any 'text' and 'name' attributes that the IPP object is returning\n\
    \      in this response.  Unlike the \"attributes-charset\" operation\n      attribute,\
    \ the IPP object MAY return the natural language of the\n      Job object or the\
    \ Printer's configured natural language as\n      identified by the Printer's\
    \ \"natural-language-configured\"\n      attribute, rather than the natural language\
    \ supplied by the\n      Client.  For any 'text' or 'name' attribute or status\
    \ message in\n      the response that is in a different natural language than\
    \ the\n      value returned in the \"attributes-natural-language\" operation\n\
    \      attribute, the IPP object MUST use the Natural Language Override\n    \
    \  mechanism (see Sections 5.1.2.2 and 5.1.3.2) on each attribute\n      value\
    \ returned.  The IPP object MAY use the Natural Language\n      Override mechanism\
    \ redundantly, i.e., use it even when the value\n      is in the same natural\
    \ language as the value supplied in the\n      \"attributes-natural-language\"\
    \ operation attribute of the response.\n"
- title: 4.1.5.  Operation Targets
  contents:
  - "4.1.5.  Operation Targets\n   All IPP operations are directed at IPP objects.\
    \  For Printer\n   operations, the operation is always directed at a Printer object\n\
    \   using one of its URIs, i.e., one of the values in the Printer's\n   \"printer-uri-supported\"\
    \ attribute.  Even if the Printer object\n   supports more than one URI, the Client\
    \ supplies only one URI as the\n   target of the operation.  The Client identifies\
    \ the target object by\n   supplying the correct URI in the \"printer-uri\" operation\
    \ attribute.\n   For Job operations, the operation is directed at either:\n  \
    \ o  The Printer object that created the Job object using the Printer\n      object's\
    \ URI and the Job's numeric identifier (Job ID).  Since the\n      Printer object\
    \ that created the Job object generated the Job ID,\n      it MUST be able to\
    \ correctly associate the Client-supplied Job ID\n      with the correct Job object.\
    \  The Client supplies the Printer's\n      URI in the \"printer-uri\" operation\
    \ attribute and the Job ID in the\n      \"job-id\" operation attribute.\n   o\
    \  The Job object itself using the Job's URI.  In this case, the\n      Client\
    \ identifies the target object by supplying the correct URI\n      in the \"job-uri\"\
    \ (uri) operation attribute (Section 5.3.2).\n   Clients SHOULD send the \"printer-uri\"\
    \ and \"job-id\" operation\n   attributes in Job operations.\n   If the operation\
    \ is directed at the Job object directly using the\n   Job's URI, the Client MUST\
    \ NOT include the redundant \"job-id\"\n   operation attribute.\n   The operation\
    \ target attributes are REQUIRED operation attributes\n   that are included in\
    \ every operation request.  Like the charset and\n   natural language attributes\
    \ (see Section 4.1.4), the operation target\n   attributes are specially ordered\
    \ operation attributes.  In all cases,\n   the operation target attributes immediately\
    \ follow the\n   \"attributes-charset\" and \"attributes-natural-language\" attributes\n\
    \   within the Operation Attributes group; however, the specific ordering\n  \
    \ rules are as follows:\n   o  In the case where there is only one operation target\
    \ attribute\n      (i.e., either only the \"printer-uri\" attribute or only the\n\
    \      \"job-uri\" attribute), that attribute MUST be the third attribute\n  \
    \    in the Operation Attributes group.\n   o  In the case where Job operations\
    \ use two operation target\n      attributes (i.e., the \"printer-uri\" and \"\
    job-id\" attributes), the\n      \"printer-uri\" attribute MUST be the third attribute\
    \ and the\n      \"job-id\" attribute MUST be the fourth attribute.\n   In all\
    \ cases, the target URIs contained within the body of IPP\n   operation requests\
    \ and responses MUST be in absolute format rather\n   than relative format (a\
    \ relative URL identifies a resource with the\n   scope of the HTTP server, but\
    \ does not include scheme, host,\n   or port).\n   The following rules apply to\
    \ the use of port numbers in URIs that\n   identify IPP objects:\n   1.  If the\
    \ URI scheme allows the port number to be explicitly\n       included in the URI\
    \ string, and a port number is specified within\n       the URI, then that port\
    \ number MUST be used by the Client to\n       contact the IPP object.\n   2.\
    \  If the URI scheme allows the port number to be explicitly\n       included\
    \ in the URI string, and a port number is not specified\n       within the URI,\
    \ then the default port number implied by that URI\n       scheme MUST be used\
    \ by the Client to contact the IPP object.\n   3.  If the URI scheme does not\
    \ allow an explicit port number to be\n       specified within the URI, then the\
    \ default port number implied by\n       that URI MUST be used by the Client to\
    \ contact the IPP object.\n   Note: \"Internet Printing Protocol/1.1: IPP URL\
    \ Scheme\" [RFC3510] and\n   \"Internet Printing Protocol (IPP) over HTTPS Transport\
    \ Binding and\n   the 'ipps' URI Scheme\" [RFC7472] define the mapping of IPP\
    \ onto HTTP\n   and HTTPS, respectively, and define and register a default port\n\
    \   number.\n"
- title: 4.1.6.  Operation Response Status-Code Values and Status Messages
  contents:
  - "4.1.6.  Operation Response Status-Code Values and Status Messages\n   Every operation\
    \ response includes a REQUIRED \"status-code\" parameter,\n   SHOULD include the\
    \ \"status-message\" operation attribute, and MAY\n   include the \"detailed-status-message\"\
    \ operation attribute.  The\n   Print-URI and Send-URI response MAY also include\
    \ the\n   \"document-access-error\" operation attribute.\n"
- title: 4.1.6.1.  "status-code" (type2 enum)
  contents:
  - "4.1.6.1.  \"status-code\" (type2 enum)\n   The REQUIRED \"status-code\" parameter\
    \ provides information on the\n   processing of a request.\n   The status-code\
    \ is intended for use by automata.  A Client\n   implementation of IPP SHOULD\
    \ convert status-code values into any\n   localized message that has semantic\
    \ meaning to the End User.\n   The \"status-code\" value is a numeric value that\
    \ has semantic meaning.\n   The \"status-code\" syntax is similar to a \"type2\
    \ enum\" (see\n   Section 5.1 (\"Attribute Syntaxes\")), except that values can\
    \ range\n   only from 0x0000 to 0x7fff.  Appendix B describes and assigns the\n\
    \   status-code values, and suggests a corresponding status message for\n   each\
    \ status-code for use by the Client when the user's natural\n   language is English.\n\
    \   If the Printer performs an operation with no errors and it encounters\n  \
    \ no problems, it MUST return the status-code 'successful-ok' in the\n   response.\
    \  See Appendix B.\n   If the Client supplies unsupported values for the following\n\
    \   parameters or operation attributes, the Printer object MUST reject\n   the\
    \ operation, MAY return the unsupported attribute value in the\n   Unsupported\
    \ Attributes group, and MUST return the indicated\n   status-code:\n   +---------------------+---------------------------------------------+\n\
    \   | Parameter/Attribute | Status-Code                                 |\n  \
    \ +---------------------+---------------------------------------------+\n   |\
    \ version-number      | server-error-version-not-supported          |\n   +---------------------+---------------------------------------------+\n\
    \   | operation-id        | server-error-operation-not-supported        |\n  \
    \ +---------------------+---------------------------------------------+\n   |\
    \ attributes-charset  | client-error-charset-not-supported          |\n   +---------------------+---------------------------------------------+\n\
    \   | compression         | client-error-compression-not-supported      |\n  \
    \ +---------------------+---------------------------------------------+\n   |\
    \ document-format     | client-error-document-format-not-supported  |\n   +---------------------+---------------------------------------------+\n\
    \   | document-uri        | client-error-uri-scheme-not-supported,      |\n  \
    \ |                     | client-error-document-access-error          |\n   +---------------------+---------------------------------------------+\n\
    \               Table 1: Status-Code Values for All Requests\n   If the Client\
    \ supplies unsupported values for other attributes, or\n   unsupported attributes,\
    \ the Printer returns the status-code defined\n   in Section 4.1.7 (\"Unsupported\
    \ Attributes\").\n"
- title: 4.1.6.2.  "status-message" (text(255))
  contents:
  - "4.1.6.2.  \"status-message\" (text(255))\n   The RECOMMENDED \"status-message\"\
    \ operation attribute provides a short\n   textual description of the status of\
    \ the operation.  The\n   \"status-message\" attribute's syntax is \"text(255)\"\
    , so the maximum\n   length is 255 octets (see Section 5.1.2).  The status message\
    \ is\n   intended for the human End User.  If a response does include a\n   \"\
    status-message\" attribute, an IPP Client can examine or display the\n   messages\
    \ in some implementation-specific manner.  The\n   \"status-message\" attribute\
    \ is especially useful for a later version\n   of a Printer to return as supplemental\
    \ information for the human\n   user, to accompany a status-code that an earlier\
    \ version of a Client\n   might not understand.\n   If the Printer supports the\
    \ \"status-message\" operation attribute, it\n   MUST be able to generate this\
    \ message in any of the natural languages\n   identified by the Printer's \"generated-natural-language-supported\"\
    \n   attribute and MUST honor any supported value for the\n   \"attributes-natural-language\"\
    \ operation attribute (Section 4.1.4.1)\n   of the Client request.  Appendix B\
    \ suggests the text for the status\n   message returned by the Printer for use\
    \ with the English natural\n   language.\n   As described in Section 4.1.4.1,\
    \ for any returned 'text' attribute,\n   if there is a choice for generating this\
    \ message, the Printer uses\n   the natural language indicated by the value of\n\
    \   \"attributes-natural-language\" in the Client request, if supported;\n   otherwise,\
    \ the Printer uses the value in the Printer's own\n   \"natural-language-configured\"\
    \ attribute.\n   If the Printer supports the \"status-message\" operation attribute,\
    \ it\n   SHOULD use the REQUIRED 'utf-8' charset to return a status message\n\
    \   for the following error status-code values (see Appendix B):\n   'client-error-bad-request',\
    \ 'client-error-charset-not-supported',\n   'server-error-internal-error',\n \
    \  'server-error-operation-not-supported', and\n   'server-error-version-not-supported'.\
    \  In this case, it MUST set the\n   value of the \"attributes-charset\" operation\
    \ attribute to 'utf-8' in\n   the error response.\n"
- title: 4.1.6.3.  "detailed-status-message" (text(MAX))
  contents:
  - "4.1.6.3.  \"detailed-status-message\" (text(MAX))\n   The OPTIONAL \"detailed-status-message\"\
    \ operation attribute provides\n   additional more-detailed technical and implementation-specific\n\
    \   information about the operation for Administrators or other\n   experienced\
    \ technical people.  The \"detailed-status-message\"\n   attribute's syntax is\
    \ \"text(MAX)\", so the maximum length is\n   1023 octets (see Section 5.1.2).\
    \  If the Printer supports the\n   \"detailed-status-message\" operation attribute,\
    \ the Printer SHOULD\n   localize the message, unless such localization would\
    \ obscure the\n   technical meaning of the message.  Clients MUST NOT attempt\
    \ to parse\n   the value of this attribute.  See the \"document-access-error\"\
    \n   operation attribute (Section 4.1.6.4) for additional errors that a\n   program\
    \ can process.\n"
- title: 4.1.6.4.  "document-access-error" (text(MAX))
  contents:
  - "4.1.6.4.  \"document-access-error\" (text(MAX))\n   This OPTIONAL operation attribute\
    \ provides additional information\n   about any Document access errors encountered\
    \ by the Printer before it\n   returned a response to the Print-URI (Section 4.2.2)\
    \ or Send-URI\n   (Section 4.3.2) operation.  For errors in the protocol identified\
    \ by\n   the URI scheme in the \"document-uri\" operation attribute, such as\n\
    \   'http:' or 'ftp:', the error code is returned in parentheses,\n   followed\
    \ by the URI.  For example:\n   (404) http://www.example.com/filename.pdf\n  \
    \ Most Internet protocols use decimal error codes (unlike IPP), so the\n   ASCII\
    \ error code representation is in decimal.\n"
- title: 4.1.7.  Unsupported Attributes
  contents:
  - "4.1.7.  Unsupported Attributes\n   The Unsupported Attributes group contains\
    \ attributes that are not\n   supported by the operation.  This group is primarily\
    \ for the Job\n   Creation operations, but all operations can return this group.\n\
    \   A Printer MUST include an Unsupported Attributes group in a response\n   if\
    \ the status-code is one of the following:\n   'successful-ok-ignored-or-substituted-attributes',\n\
    \   'successful-ok-conflicting-attributes',\n   'client-error-attributes-or-values-not-supported',\
    \ or\n   'client-error-conflicting-attributes'.\n   If the status-code is one\
    \ of the four specified in the preceding\n   paragraph, the Unsupported Attributes\
    \ group MUST contain all of those\n   attributes and only those attributes that\
    \ are:\n   a.  an operation or Job Template attribute supplied in the request,\n\
    \       and\n   b.  unsupported by the Printer.  See below for details on the\
    \ three\n       categories of \"unsupported\" attributes.\n   If the status-code\
    \ is one of those in Table 1 in Section 4.1.6.1, the\n   OPTIONAL Unsupported\
    \ Attributes group contains the unsupported\n   parameter or attribute indicated\
    \ in that table.\n   If the Printer is not returning any unsupported attributes\
    \ in the\n   response, the Printer SHOULD omit the Unsupported Attributes group\n\
    \   rather than sending an empty group.  However, a Client MUST be able\n   to\
    \ accept an empty group.\n   Unsupported attributes fall into three categories:\n\
    \   1.  The Printer does not support the supplied attribute (no matter\n     \
    \  what the attribute syntax or value).\n   2.  The Printer does support the attribute,\
    \ but it does not support\n       some or all of the particular attribute syntaxes\
    \ or values\n       supplied by the Client, i.e., the Printer does not have those\n\
    \       attribute syntaxes or values in its corresponding \"xxx-supported\"\n\
    \       attribute.\n   3.  The Printer does support the attributes and values\
    \ supplied, but\n       the particular values are in conflict with one another,\
    \ because\n       they violate a constraint, such as not being able to staple\n\
    \       transparencies.\n   In the case of an unsupported attribute name, the\
    \ Printer returns the\n   Client-supplied attribute with a substituted value of\
    \ 'unsupported'.\n   This value's syntax type is \"out-of-band\", and its encoding\
    \ is\n   defined by special rules for \"out-of-band\" values in the Encoding and\n\
    \   Transport document [RFC8010].  Its value indicates no support for the\n  \
    \ attribute itself -- see the beginning of Section 5.1 in this\n   document.\n\
    \   In the case of a supported attribute with one or more unsupported\n   attribute\
    \ syntaxes or values, the Printer simply returns the\n   Client-supplied attribute\
    \ with the unsupported attribute syntaxes or\n   values as supplied by the Client.\
    \  This indicates support for the\n   attribute but no support for that particular\
    \ attribute syntax or\n   value.  If the Client supplies a multi-valued attribute\
    \ with more\n   than one value and the Printer supports the attribute but only\n\
    \   supports a subset of the Client-supplied attribute syntaxes or\n   values,\
    \ the Printer MUST return only those attribute syntaxes or\n   values that are\
    \ unsupported.\n   In the case of two (or more) supported attribute values that\
    \ are in\n   conflict with one another (although each is supported independently,\n\
    \   the values conflict when requested together within the same Job), the\n  \
    \ Printer MUST return all the values that it ignores or substitutes to\n   resolve\
    \ the conflict but not any of the values that it is still\n   using.  The choice\
    \ for exactly how to resolve the conflict is\n   implementation dependent.  See\
    \ Section 4.2.1.2 and Appendix C.  See\n   the Implementor's Guides [RFC3196]\
    \ [PWG5100.19] for examples.\n"
- title: 4.1.8.  Versions
  contents:
  - "4.1.8.  Versions\n   Each operation request and response carries with it a\n\
    \   \"version-number\" parameter.  Each value of the \"version-number\"\n   parameter\
    \ is in the form \"X.Y\" where X is the major version number\n   and Y is the\
    \ minor version number.  By including a version number in\n   the Client request,\
    \ it allows the Client to identify which version of\n   IPP it is interested in\
    \ using, i.e., the version whose conformance\n   requirements the Client can depend\
    \ upon the Printer to meet.\n   If the IPP object does not support that major\
    \ version number supplied\n   by the Client, i.e., the \"major version number\"\
    \ portion of the\n   \"version-number\" parameter does not match any of the values\
    \ of the\n   Printer's \"ipp-versions-supported\" attribute (see Section 5.4.14),\n\
    \   the object MUST respond with a status-code of\n   'server-error-version-not-supported'\
    \ along with the closest version\n   number that is supported (see Appendix B.1.5.4).\
    \  If the major\n   version number is supported but the minor version number is\
    \ not, the\n   IPP object SHOULD accept the request and attempt to perform it\
    \ (or\n   reject the request if the operation is not supported); otherwise, it\n\
    \   rejects the request and returns the\n   'server-error-version-not-supported'\
    \ status-code.  In all cases, the\n   IPP object MUST return the \"version-number\"\
    \ value that it supports\n   that is closest to the version number supplied by\
    \ the Client in the\n   request.\n   There is no version negotiation per se. \
    \ However, if a Client has\n   received a 'server-error-version-not-supported'\
    \ status-code from an\n   IPP object, the Client SHOULD try again with a different\
    \ version\n   number.  A Client MAY also determine the versions supported either\n\
    \   from a directory that conforms to Appendix D or by querying the\n   Printer's\
    \ \"ipp-versions-supported\" attribute (see Section 5.4.14) to\n   determine which\
    \ versions are supported.\n   An IPP/1.1 object implementation MUST support version\
    \ '1.1', i.e.,\n   meet the conformance requirements for IPP/1.1 as specified\
    \ in this\n   document and [RFC8010].  IPP implementations SHOULD accept any\n\
    \   request with the major version '1' or '2', or reject the request if\n   the\
    \ operation is not supported.\n   There is only one notion of \"version number\"\
    \ that covers both IPP\n   Model and IPP protocol changes.  Changes to the major\
    \ version number\n   of the Model and Semantics document can indicate structural\
    \ or\n   syntactic changes that make it impossible for older versions of IPP\n\
    \   Clients and Printers to correctly parse and correctly process the new\n  \
    \ or changed attributes, operations, and responses.  If the major\n   version\
    \ number changes, the minor version number is set to zero.  As\n   an example,\
    \ adding the REQUIRED \"ipp-attribute-fidelity\" attribute to\n   version '1.1'\
    \ (if it had not been part of version '1.0') would have\n   required a change\
    \ to the major version number, since an IPP/1.0\n   Printer would not have processed\
    \ a request with the correct semantics\n   that contained the \"ipp-attribute-fidelity\"\
    \ attribute that it did not\n   know about.  Items that might affect the changing\
    \ of the major\n   version number include any changes to the Model and Semantics\n\
    \   document (this document) or the Encoding and Transport document\n   [RFC8010]\
    \ itself, such as:\n   o  reordering of ordered attributes or attribute sets\n\
    \   o  changes to the syntax of existing attributes\n   o  adding REQUIRED (for\
    \ an IPP object to support) Operation\n      Attributes groups\n   o  adding values\
    \ to existing REQUIRED operation attributes\n   o  adding REQUIRED operations\n\
    \   Changes to the minor version number indicate the addition of new\n   features,\
    \ attributes, and attribute values that might not be\n   understood by all IPP\
    \ objects but that can be ignored if not\n   understood.  Items that might affect\
    \ the changing of the minor\n   version number include any changes to the model\
    \ objects and\n   attributes but not the encoding and transport rules [RFC8010]\
    \ (except\n   adding attribute syntaxes).  Examples of such changes are:\n   o\
    \  grouping all extensions not included in a previous version into a\n      new\
    \ version\n   o  adding new attribute values\n   o  adding new object attributes\n\
    \   o  adding OPTIONAL (for an IPP object to support) operation\n      attributes\
    \ (i.e., those attributes that an IPP object can ignore\n      without confusing\
    \ Clients)\n   o  adding OPTIONAL (for an IPP object to support) Operation\n \
    \     Attributes groups (i.e., those attributes that an IPP object can\n     \
    \ ignore without confusing Clients)\n   o  adding new attribute syntaxes\n   o\
    \  adding OPTIONAL operations\n   o  changing Job attributes or Printer attributes\
    \ from OPTIONAL to\n      REQUIRED or vice versa\n   o  adding OPTIONAL attribute\
    \ syntaxes to an existing attribute\n   The encoding [RFC8010] of the \"version-number\"\
    \ parameter MUST NOT\n   change over any version number (either major or minor).\
    \  This rule\n   guarantees that all future versions will be backwards compatible\
    \ with\n   all previous versions (at least for checking the \"version-number\"\
    \n   parameter).  In addition, any protocol elements (attributes, error\n   codes,\
    \ tags, etc.) that are not carried forward from one version to\n   the next are\
    \ DEPRECATED so that they can never be reused with new\n   semantics.\n   Implementations\
    \ that support a certain version SHOULD support all\n   previous Standards Track\
    \ versions.  As each new version is defined\n   (through the release of a new\
    \ IPP specification document), that\n   version will specify which previous versions\
    \ MUST and which versions\n   SHOULD be supported in compliant implementations.\n"
- title: 4.1.9.  Job Creation Operations
  contents:
  - "4.1.9.  Job Creation Operations\n   In order to \"submit a Print Job\" and create\
    \ a new Job, a Client\n   issues a Job Creation request.  A Job Creation request\
    \ is any one of\n   the following three operation requests:\n   o  The Print-Job\
    \ Request: A Client that wants to submit a Print Job\n      with only a single\
    \ Document can use the Print-Job operation.  The\n      operation allows for the\
    \ Client to \"push\" the Document data to the\n      Printer by including the\
    \ Document data in the request itself.\n      Note that Clients SHOULD instead\
    \ use the Create-Job and\n      Send-Document requests, if supported by the Printer,\
    \ since they\n      allow for Job monitoring and control during submission of\
    \ the\n      Document data.\n   o  The Print-URI Request: A Client that wants\
    \ to submit a Print Job\n      with only a single Document (where the Printer\
    \ \"pulls\" the\n      Document data instead of the Client \"pushing\" the data\
    \ to the\n      Printer) uses the Print-URI operation.  In this case, the Client\n\
    \      includes in the request only a URI reference to the Document data\n   \
    \   (not the Document data itself).\n   o  The Create-Job Request: A Client that\
    \ wants to submit a Print Job\n      with zero or more Documents uses the Create-Job\
    \ operation.  This\n      operation is followed by an arbitrary number of Send-Document\n\
    \      and/or Send-URI operations, each creating another Document for the\n  \
    \    newly created Job.  The Send-Document operation includes the\n      Document\
    \ data in the request (the Client \"pushes\" the Document\n      data to the Printer),\
    \ and the Send-URI operation includes only a\n      URI reference to the Document\
    \ data in the request (the Printer\n      \"pulls\" the Document data from the\
    \ referenced location).  The last\n      Send-Document or Send-URI request for\
    \ a given Job includes a\n      \"last-document\" operation attribute set to 'true'\
    \ indicating that\n      this is the last request.\n   Throughout this document,\
    \ the term \"Job Creation request\" is used to\n   refer to any of these three\
    \ operation requests.\n   A Create-Job operation followed by only one Send-Document\
    \ operation\n   is semantically equivalent to a Print-Job operation; however,\
    \ the\n   Client SHOULD use the Create-Job and Send-Document operations (when\n\
    \   supported) for all Jobs with a single Document to allow for reliable\n   Job\
    \ control and monitoring.  Print-Job is a REQUIRED operation (all\n   implementations\
    \ MUST support it), whereas Create-Job is a RECOMMENDED\n   operation and hence\
    \ some implementations might not support it.\n   Job submission time is the point\
    \ in time when a Client issues a Job\n   Creation request.  The initial state\
    \ of every Job is the 'pending',\n   'pending-held', or 'processing' state (see\
    \ Section 5.3.7).  When the\n   Printer begins processing the Print Job, the Job's\
    \ state moves to\n   'processing'.  This is known as Job processing time.\n  \
    \ At Job submission time and at the time a Validate-Job operation is\n   received,\
    \ the Printer MUST do the following:\n   1.  Process the Client-supplied attributes\
    \ and either accept or\n       reject the request\n   2.  Validate the syntax\
    \ of and support for the scheme of any\n       Client-supplied URI\n   At Job\
    \ submission time, the Printer MUST validate whether the\n   supplied attributes,\
    \ attribute syntaxes, and values are supported by\n   matching them with the Printer's\
    \ corresponding \"xxx-supported\"\n   attributes.  See Section 4.1.7 for details.\
    \  See the Implementor's\n   Guides [RFC3196] [PWG5100.19] for guidance on processing\
    \ Job Creation\n   requests.\n   At Job submission time, the Printer MAY perform\
    \ the validation checks\n   reserved for Job processing time, such as:\n   1.\
    \  Validating the format of the Document data\n   2.  Validating the actual contents\
    \ of any Client-supplied URI\n       (resolve the reference and follow the link\
    \ to the Document data)\n   At Job submission time, these additional Job processing\
    \ time\n   validation checks are essentially useless, since they require\n   actually\
    \ parsing and interpreting the Document data, are not\n   guaranteed to be 100%\
    \ accurate, and MUST be done, yet again, at Job\n   processing time.  Also, in\
    \ the case of a URI, checking for\n   availability at Job submission time does\
    \ not guarantee availability\n   at Job processing time.  In addition, at Job\
    \ processing time, the\n   Printer might discover any of the following conditions\
    \ that were not\n   detectable at Job submission time:\n   o  runtime errors in\
    \ the Document data,\n   o  nested Document data that is in an unsupported format,\n\
    \   o  the URI reference is no longer valid (i.e., the server hosting the\n  \
    \    Document might be down), or\n   o  any other Job processing error.\n   At\
    \ Job submission time, a Printer, especially a non-spooling Printer,\n   MAY accept\
    \ Jobs for which it does not have enough space.  In such a\n   situation, a Printer\
    \ MAY stop reading data from a Client for an\n   indefinite period of time.  A\
    \ Client MUST be prepared for a write\n   operation to block for an indefinite\
    \ period of time (see Section 6.1\n   (\"Client Conformance Requirements\")).\n\
    \   When a Printer has too little space for starting a new Job, it MAY\n   reject\
    \ a new Job Creation request.  In this case, a Printer MUST\n   return a response\
    \ (in reply to the rejected request) with a\n   status-code of 'server-error-busy'\
    \ (see Appendix B.1.5.8), and it MAY\n   close the connection before receiving\
    \ all bytes of the operation.  A\n   Printer SHOULD indicate that it is temporarily\
    \ unable to accept Jobs\n   by setting the 'spool-space-full' value in its\n \
    \  \"printer-state-reasons\" attribute and removing the value when it can\n  \
    \ accept another Job (see Section 5.4.12).\n   When receiving a 'server-error-busy'\
    \ status-code in an operation\n   response, a Client MUST be prepared for the\
    \ Printer to close the\n   connection before the Client has sent all of the data\
    \ (especially for\n   the Print-Job operation).  A Client MUST be prepared to\
    \ keep\n   submitting a Job Creation request until the Printer accepts the Job\n\
    \   Creation request.\n   At Job processing time, since the Printer has already\
    \ responded with\n   a successful status-code in the response to the Job Creation\
    \ request,\n   if the Printer detects an error, the Printer is unable to inform\
    \ the\n   End User of the error with an operation status-code.  In this case,\n\
    \   the Printer, depending on the error, can set the Job's \"job-state\",\n  \
    \ \"job-state-reasons\", and/or \"job-state-message\" attributes to the\n   appropriate\
    \ value(s) so that later queries can report the correct Job\n   status.\n   Note:\
    \ Asynchronous notification of events is defined in \"Internet\n   Printing Protocol\
    \ (IPP): Event Notifications and Subscriptions\"\n   [RFC3995].\n"
- title: 4.2.  Printer Operations
  contents:
  - "4.2.  Printer Operations\n   All Printer operations are directed at Printers.\
    \  A Client MUST\n   always supply the \"printer-uri\" operation attribute in\
    \ order to\n   identify the correct target of the operation.\n"
- title: 4.2.1.  Print-Job Operation
  contents:
  - "4.2.1.  Print-Job Operation\n   This REQUIRED operation allows a Client to submit\
    \ a Print Job with\n   only one Document and supply the Document data (rather\
    \ than just a\n   reference to the data).  See Appendix C for the suggested steps\
    \ for\n   processing Job Creation requests and their operation and Job Template\n\
    \   attributes.\n"
- title: 4.2.1.1.  Print-Job Request
  contents:
  - "4.2.1.1.  Print-Job Request\n   The following groups of attributes are supplied\
    \ as part of the\n   Print-Job request:\n   Group 1: Operation Attributes\n  \
    \    Natural Language and Character Set:\n         The \"attributes-charset\"\
    \ and \"attributes-natural-language\"\n         attributes as described in Section\
    \ 4.1.4.1.  The Printer MUST\n         copy these values to the corresponding\
    \ Job Status attributes\n         described in Sections 5.3.19 and 5.3.20.\n \
    \     Target:\n         The \"printer-uri\" (uri) operation attribute, which is\
    \ the\n         target for this operation as described in Section 4.1.5.\n   \
    \   Requesting User Name:\n         The \"requesting-user-name\" (name(MAX)) attribute\
    \ SHOULD be\n         supplied by the Client as described in Section 9.3.\n  \
    \    \"job-name\" (name(MAX)):\n         The Client MAY supply and the Printer\
    \ MUST support this\n         attribute.  It contains the Client-supplied Job\
    \ name.  If this\n         attribute is supplied by the Client, its value is used\
    \ for the\n         \"job-name\" attribute of the newly created Job.  The Client\
    \ MAY\n         automatically include any information that will help the\n   \
    \      End User distinguish amongst his/her Jobs, such as the name of\n      \
    \   the application program along with information from the\n         Document,\
    \ such as the Document name, Document subject, or\n         source file name.\
    \  If this attribute is not supplied by the\n         Client, the Printer generates\
    \ a name to use in the \"job-name\"\n         attribute of the newly created Job\
    \ (see Section 5.3.5).\n      \"ipp-attribute-fidelity\" (boolean):\n        \
    \ The Client MAY supply and the Printer MUST support this\n         attribute.\
    \  The value 'true' indicates that total fidelity to\n         Client-supplied\
    \ Job Template attributes and values is required;\n         otherwise, the Printer\
    \ MUST reject the Print-Job request.  The\n         value 'false' indicates that\
    \ a reasonable attempt to print the\n         Job is acceptable and the Printer\
    \ MUST accept the Print-Job\n         request.  If not supplied, the Printer assumes\
    \ that the value\n         is 'false'.  All Printers MUST support both types of\
    \ Job\n         processing.  See Appendix C for a full description of\n      \
    \   \"ipp-attribute-fidelity\" and its relationship to other\n         attributes,\
    \ especially the Printer's \"pdl-override-supported\"\n         attribute.\n \
    \     \"document-name\" (name(MAX)):\n         The Client MAY supply and the Printer\
    \ MUST support this\n         attribute.  It contains the Client-supplied Document\
    \ name.  The\n         Document name MAY be different than the Job name.  Typically,\n\
    \         the Client software automatically supplies the Document name on\n  \
    \       behalf of the End User by using a file name or an\n         application-generated\
    \ name.  If this attribute is supplied, its\n         value can be used in a manner\
    \ defined by each implementation.\n         Examples include the following: printed\
    \ along with the Job (Job\n         start sheet, page adornments, etc.), used\
    \ by accounting or\n         resource-tracking management tools, or even stored\
    \ along with\n         the Document as a Document-level attribute.\n      \"compression\"\
    \ (type2 keyword):\n         The Client MAY supply and the Printer MUST support\
    \ this\n         attribute.  The Client-supplied \"compression\" operation\n \
    \        attribute identifies the compression algorithm used on the\n        \
    \ Document data.  The following cases exist:\n         a.  If the Client omits\
    \ this attribute, the Printer MUST assume\n             that the data is not compressed,\
    \ i.e., the Printer follows\n             the rules below as if the Client supplied\
    \ the \"compression\"\n             attribute with a value of 'none'.\n      \
    \   b.  If the Client supplies this attribute but the value is not\n         \
    \    supported by the Printer, i.e., the value is not one of the\n           \
    \  values of the Printer's \"compression-supported\" attribute,\n            \
    \ the Printer MUST reject the request and return the\n             'client-error-compression-not-supported'\
    \ status-code.  See\n             Section 4.1.7 for details on returning unsupported\n\
    \             attributes and values.\n         c.  If the Client supplies the\
    \ attribute and the Printer\n             supports the attribute value, the Printer\
    \ uses the\n             corresponding decompression algorithm on the Document\
    \ data.\n         d.  If the decompression algorithm fails before the Printer\n\
    \             returns an operation response, the Printer MUST reject the\n   \
    \          request and return the 'client-error-compression-error'\n         \
    \    status-code.\n         e.  If the decompression algorithm fails after the\
    \ Printer\n             returns an operation response, the Printer MUST abort\
    \ the\n             Job and add the 'compression-error' value to the Job's\n \
    \            \"job-state-reasons\" attribute.\n         f.  If the decompression\
    \ algorithm succeeds, the Document data\n             MUST then have the format\
    \ specified by the Job's\n             \"document-format\" attribute, if supplied\
    \ (see the\n             \"document-format\" operation attribute definition below).\n\
    \      \"document-format\" (mimeMediaType):\n         The Client MAY supply and\
    \ the Printer MUST support this\n         attribute.  The value identifies the\
    \ format of the supplied\n         Document data.  The following cases exist:\n\
    \         a.  If the Client does not supply this attribute, the Printer\n    \
    \         assumes that the Document data is in the format defined by\n       \
    \      the Printer's \"document-format-default\" attribute (i.e.,\n          \
    \   the Printer follows the rules below as if the Client\n             supplied\
    \ the \"document-format\" attribute with a value equal\n             to the Printer's\
    \ default value).\n         b.  If the Client supplies this attribute but the\
    \ value is not\n             supported by the Printer, i.e., the value is not\
    \ one of the\n             values of the Printer's \"document-format-supported\"\
    \n             attribute, the Printer MUST reject the request and return\n   \
    \          the 'client-error-document-format-not-supported'\n             status-code.\n\
    \         c.  If the Client supplies this attribute and its value is\n       \
    \      'application/octet-stream' (i.e., to be auto-sensed; see\n            \
    \ Section 5.1.10.1), and the format is not one of the\n             Document formats\
    \ that the Printer can auto-sense, and this\n             check occurs before\
    \ the Printer returns an operation\n             response, then the Printer MUST\
    \ reject the request and\n             return the 'client-error-document-format-not-supported'\n\
    \             status-code.\n         d.  If the Client supplies this attribute\
    \ and the value is\n             supported by the Printer, the Printer is capable\
    \ of\n             interpreting the Document data.\n         e.  If interpretation\
    \ of the Document data fails before the\n             Printer returns an operation\
    \ response, the Printer MUST\n             reject the request and return the\n\
    \             'client-error-document-format-error' status-code.\n         f. \
    \ If interpretation of the Document data fails after the\n             Printer\
    \ returns an operation response, the Printer MUST\n             abort the Job\
    \ and add the 'document-format-error' value to\n             the Job's \"job-state-reasons\"\
    \ attribute.\n      \"document-natural-language\" (naturalLanguage):\n       \
    \  The Client MAY supply and the Printer SHOULD support this\n         attribute.\
    \  The value specifies the natural language of the\n         Document content\
    \ for those Document formats that require a\n         specification of the natural\
    \ language in order to properly\n         image the Document.\n      \"job-k-octets\"\
    \ (integer(0:MAX)):\n         The Client MAY supply and the Printer SHOULD support\
    \ this\n         attribute.  The Client-supplied \"job-k-octets\" operation\n\
    \         attribute identifies the total size of the Document(s) in\n        \
    \ K octets being submitted (see Section 5.3.17.1 for the complete\n         semantics).\
    \  If the Client supplies the attribute and the\n         Printer supports the\
    \ attribute, the value of the attribute is\n         used to populate the Job's\
    \ \"job-k-octets\" Job Description\n         attribute.\n         For this attribute\
    \ and the following two attributes\n         (\"job-impressions\" and \"job-media-sheets\"\
    ), if the Client\n         supplies the attribute but the Printer does not support\
    \ the\n         attribute, the Printer ignores the Client-supplied value.  If\n\
    \         the Client supplies the attribute and the Printer supports the\n   \
    \      attribute, and the value is within the range of the\n         corresponding\
    \ Printer's \"xxx-supported\" attribute, the Printer\n         MUST use the value\
    \ to populate the Job's \"xxx\" attribute.  If\n         the Client supplies the\
    \ attribute and the Printer supports the\n         attribute, but the value is\
    \ outside the range of the\n         corresponding Printer's \"xxx-supported\"\
    \ attribute, the Printer\n         MUST copy the attribute and its value to the\
    \ Unsupported\n         Attributes group, reject the request, and return the\n\
    \         'client-error-attributes-or-values-not-supported' status-code.\n   \
    \      If the Client does not supply the attribute, the Printer SHOULD\n     \
    \    populate the corresponding Job attribute if it supports the\n         attribute\
    \ and is able to calculate or discern the correct\n         value.\n      \"job-impressions\"\
    \ (integer(0:MAX)):\n         The Client MAY supply and the Printer SHOULD support\
    \ this\n         attribute.  The Client-supplied \"job-impressions\" operation\n\
    \         attribute identifies the total size in number of Impressions of\n  \
    \       the Document(s) being submitted (see Section 5.3.17.2 for the\n      \
    \   complete semantics).\n         See the last paragraph under \"job-k-octets\"\
    .\n      \"job-media-sheets\" (integer(1:MAX)):\n         The Client MAY supply\
    \ and the Printer SHOULD support this\n         attribute.  The Client-supplied\
    \ \"job-media-sheets\" operation\n         attribute identifies the total number\
    \ of Media Sheets to be\n         produced for this Job (see Section 5.3.17.3\
    \ for the complete\n         semantics).\n         See the last paragraph under\
    \ \"job-k-octets\".\n   Group 2: Job Template Attributes\n      The Client MAY\
    \ supply a set of Job Template attributes as defined\n      in Section 5.2.  If\
    \ the Client is not supplying any Job Template\n      attributes in the request,\
    \ the Client SHOULD omit Group 2 rather\n      than sending an empty group.  However,\
    \ a Printer MUST be able to\n      accept an empty group.\n   Group 3: Document\
    \ Data\n      The Client MUST supply the Document data to be processed.\n   The\
    \ simplest Print-Job request consists of just the\n   \"attributes-charset\" and\
    \ \"attributes-natural-language\" operation\n   attributes, the \"printer-uri\"\
    \ target operation attribute, and the\n   Document data.  In this simple case,\
    \ the Printer:\n   o  creates a new Job containing a single Document,\n   o  stores\
    \ a generated Job name in the \"job-name\" attribute in the\n      natural language\
    \ and charset requested (see Section 4.1.4.1) (if\n      those are supported;\
    \ otherwise, using the Printer's default\n      natural language and charset),\
    \ and\n   o  at Job processing time, uses its corresponding default value\n  \
    \    attributes for the supported Job Template attributes that were not\n    \
    \  supplied by the Client as an IPP attribute or embedded\n      instructions\
    \ in the Document data.\n"
- title: 4.2.1.2.  Print-Job Response
  contents:
  - "4.2.1.2.  Print-Job Response\n   The Printer MUST return to the Client the following\
    \ sets of\n   attributes as part of the Print-Job response:\n   Group 1: Operation\
    \ Attributes\n      Natural Language and Character Set:\n         The \"attributes-charset\"\
    \ and \"attributes-natural-language\"\n         attributes as described in Section\
    \ 4.1.4.2.\n      Status Message:\n         In addition to the REQUIRED status-code\
    \ returned in every\n         response, the response MAY include a \"status-message\"\
    \n         (text(255)) and/or a \"detailed-status-message\" (text(MAX))\n    \
    \     operation attribute as described in Appendix B and\n         Section 4.1.6.\
    \  If the Client supplies unsupported or\n         conflicting Job Template attributes\
    \ or values, the Printer MUST\n         reject or accept the Print-Job request,\
    \ depending on whether\n         the Client supplied a 'true' or 'false' value\
    \ for the\n         \"ipp-attribute-fidelity\" operation attribute.  See the\n\
    \         Implementor's Guides [RFC3196] [PWG5100.19] for guidance on\n      \
    \   processing Job Creation requests.\n   Group 2: Unsupported Attributes\n  \
    \    See Section 4.1.7 for details on returning unsupported attributes.\n    \
    \  The value of \"ipp-attribute-fidelity\" supplied by the Client does\n     \
    \ not affect what attributes the Printer returns in this group.  The\n      value\
    \ of \"ipp-attribute-fidelity\" only affects whether the\n      Print-Job operation\
    \ is accepted or rejected.  If the Job is\n      accepted, the Client can query\
    \ the Job using the\n      Get-Job-Attributes operation, requesting the unsupported\n\
    \      attributes that were returned in the Print-Job response to see\n      which\
    \ attributes were ignored (not stored in the Job) and which\n      attributes\
    \ were stored with other (substituted) values.\n   Group 3: Job Attributes\n \
    \     \"job-id\" (integer(1:MAX)):\n         The Printer MUST return the Job's\
    \ ID in the REQUIRED \"job-id\"\n         Job attribute.  The Client uses this\
    \ \"job-id\" attribute in\n         conjunction with the \"printer-uri\" attribute\
    \ used in the\n         Print-Job request when directing Job operations at the\
    \ Printer.\n      \"job-uri\" (uri):\n         The Printer MUST return the Job's\
    \ URI by returning the contents\n         of the REQUIRED \"job-uri\" Job attribute.\n\
    \      \"job-state\" (type1 enum):\n         The Printer MUST return the Job's\
    \ REQUIRED \"job-state\"\n         attribute.  The value of this attribute along\
    \ with the value of\n         the \"job-state-reasons\" attribute is a \"snapshot\"\
    \ of the new\n         Job's state when the Printer returns the response.\n  \
    \    \"job-state-reasons\" (1setOf type2 keyword):\n         The Printer MUST\
    \ return the Job's REQUIRED \"job-state-reasons\"\n         attribute.\n     \
    \ \"job-state-message\" (text(MAX)):\n         The Printer SHOULD return the Job's\
    \ RECOMMENDED\n         \"job-state-message\" attribute.  If the Printer supports\
    \ this\n         attribute, then it MUST be returned in the response.  If this\n\
    \         attribute is not returned in the response, the Client can\n        \
    \ assume that the \"job-state-message\" attribute is not supported\n         and\
    \ will not be returned in a subsequent Job query.\n      \"number-of-intervening-jobs\"\
    \ (integer(0:MAX)):\n         The Printer SHOULD return the Job's RECOMMENDED\n\
    \         \"number-of-intervening-jobs\" attribute.  If the Printer\n        \
    \ supports this attribute, then it MUST be returned in the\n         response.\
    \  If this attribute is not returned in the response,\n         the Client can\
    \ assume that the \"number-of-intervening-jobs\"\n         attribute is not supported\
    \ and will not be returned in a\n         subsequent Job query.\n   Note: Since\
    \ any Printer state information that affects a Job's state\n   is reflected in\
    \ the \"job-state\" and \"job-state-reasons\" attributes,\n   it is sufficient\
    \ to return only these attributes and no additional\n   Printer Status attributes.\n\
    \   Note: The simplest response consists of just the \"attributes-charset\"\n\
    \   and \"attributes-natural-language\" operation attributes and the\n   \"job-uri\"\
    , \"job-id\", and \"job-state\" Job attributes.  In this\n   simplest case, the\
    \ status-code is 'successful-ok' and there is no\n   \"status-message\" or \"\
    detailed-status-message\" operation attribute.\n"
- title: 4.2.2.  Print-URI Operation
  contents:
  - "4.2.2.  Print-URI Operation\n   This OPTIONAL operation is identical to the Print-Job\
    \ operation\n   (Section 4.2.1), except that a Client supplies a URI reference\
    \ to the\n   Document data using the \"document-uri\" (uri) operation attribute\
    \ (in\n   Group 1) rather than including the Document data itself.  Before\n \
    \  returning the response, the Printer MUST validate that the Printer\n   supports\
    \ the retrieval method (e.g., 'http', 'ftp', etc.) implied by\n   the URI and\
    \ MUST check for valid URI syntax.  If the Client-supplied\n   URI scheme is not\
    \ supported, i.e., the value is not in the Printer's\n   \"referenced-uri-scheme-supported\"\
    \ attribute, the Printer MUST reject\n   the request and return the 'client-error-uri-scheme-not-supported'\n\
    \   status-code.\n   The Printer MAY validate the accessibility of the Document\
    \ as part of\n   the operation, or subsequently.  If the Printer discovers an\n\
    \   accessibility problem before returning an operation response, it MUST\n  \
    \ reject the request and return the\n   'client-error-document-access-error' status-code.\
    \  The Printer MAY\n   also return a specific Document access error code using\
    \ the\n   \"document-access-error\" operation attribute (see Section 4.1.6.4).\n\
    \   If the Printer discovers this Document accessibility problem after\n   accepting\
    \ the request and returning an operation response with one of\n   the successful\
    \ status-code values, the Printer MUST add the\n   \"document-access-error\" value\
    \ to the Job's \"job-state-reasons\"\n   attribute and MAY populate the Job's\
    \ \"job-document-access-errors\" Job\n   Status attribute (see Section 5.3.11).\
    \  See the Implementor's Guides\n   [RFC3196] [PWG5100.19] for guidance on processing\
    \ Job Creation\n   requests.\n   If the Printer supports this operation, it MUST\
    \ support the\n   \"reference-uri-schemes-supported\" Printer attribute (see\n\
    \   Section 5.4.27).\n   It is up to the Printer to interpret the URI and subsequently\
    \ \"pull\"\n   the Document data from the source referenced by the URI string.\n"
- title: 4.2.3.  Validate-Job Operation
  contents:
  - "4.2.3.  Validate-Job Operation\n   This REQUIRED operation is similar to the\
    \ Print-Job operation\n   (Section 4.2.1), except that a Client supplies no Document\
    \ data and\n   the Printer allocates no resources, i.e., it does not create a\
    \ new\n   Job.  This operation is used only to verify the capabilities of a\n\
    \   Printer against whatever attributes are supplied by the Client in the\n  \
    \ Validate-Job request.  By using the Validate-Job operation, a Client\n   can\
    \ validate that an identical Job Creation request (with the\n   Document data)\
    \ would be accepted.  The Validate-Job operation also\n   performs the same security\
    \ negotiation as the Print-Job, Print-URI,\n   and Create-Job operations (see\
    \ Section 9) so that a Client can check\n   that the Client and Printer security\
    \ requirements can be met before\n   performing a Job Creation request.\n   The\
    \ Validate-Job operation does not accept a \"document-uri\" attribute\n   in order\
    \ to allow a Client to check that the same Print-URI operation\n   will be accepted,\
    \ since the Client doesn't send the data with the\n   Print-URI operation.  The\
    \ Client SHOULD just issue the Print-URI\n   request.\n   The Printer returns\
    \ the same status-code values, Operation Attributes\n   (Group 1), and Unsupported\
    \ Attributes (Group 2) as the Print-Job\n   operation.  However, no Job Attributes\
    \ (Group 3) are returned, since\n   no Job is created.\n"
- title: 4.2.4.  Create-Job Operation
  contents:
  - "4.2.4.  Create-Job Operation\n   This RECOMMENDED operation is similar to the\
    \ Print-Job operation\n   (Section 4.2.1), except that in the Create-Job request,\
    \ a Client does\n   not supply Document data or any reference to Document data.\
    \  Also,\n   the Client does not supply any of the \"document-name\",\n   \"document-format\"\
    , \"compression\", or \"document-natural-language\"\n   operation attributes.\
    \  This operation is followed by one or more\n   Send-Document or Send-URI operations.\
    \  In each of those operation\n   requests, the Client MAY supply the \"document-name\"\
    ,\n   \"document-format\", and \"document-natural-language\" attributes for\n\
    \   each Document in the Job.\n   If a Printer supports the Create-Job operation,\
    \ it MUST also support\n   the Send-Document operation.  If the Printer supports\
    \ the Create-Job\n   and Print-URI operations, it MUST also support the Send-URI\n\
    \   operation.\n   If the Printer supports this operation, it MUST support the\n\
    \   \"multiple-operation-time-out\" Printer attribute (see Section 5.4.31).\n\
    \   If the Printer supports this operation, then it MUST support the\n   \"multiple-document-jobs-supported\"\
    \ Printer Description attribute\n   (see Section 5.4.16) and indicate whether\
    \ it supports multiple\n   Documents in a Job.\n   If the Printer supports this\
    \ operation and supports multiple\n   Documents in a Job, then it MUST support\
    \ the\n   \"multiple-document-handling\" Job Template attribute with at least\n\
    \   one value (see Section 5.2.4), and the associated\n   \"multiple-document-handling-default\"\
    \ and\n   \"multiple-document-handling-supported\" Printer attributes\n   (see\
    \ Section 5.2).\n   After the Create-Job operation has completed, the value of\
    \ the\n   \"job-state\" attribute is similar to the \"job-state\" after a Print-Job\n\
    \   operation, even though no Document data has arrived.  A Printer MAY\n   set\
    \ the 'job-data-insufficient' value of the Job's\n   \"job-state-reasons\" attribute\
    \ to indicate that processing cannot\n   begin until sufficient data has arrived\
    \ and set the \"job-state\" to\n   either 'pending' or 'pending-held'.  A non-spooling\
    \ Printer that\n   doesn't implement the 'pending' Job state can set \"job-state\"\
    \ to\n   'processing', even though there is not yet any data to process.\n   See\
    \ Sections 5.3.7 and 5.3.8.\n"
- title: 4.2.5.  Get-Printer-Attributes Operation
  contents:
  - "4.2.5.  Get-Printer-Attributes Operation\n   This REQUIRED operation allows a\
    \ Client to request the values of the\n   attributes of a Printer.  In the request,\
    \ the Client supplies the set\n   of Printer attribute names and/or attribute\
    \ group names in which the\n   requester is interested.  In the response, the\
    \ Printer returns a\n   corresponding attribute set with the appropriate attribute\
    \ values\n   filled in.\n   For Printers, the possible names of attribute groups\
    \ are:\n   o  'job-template': the subset of the Job Template attributes that\n\
    \      apply to a Printer (the last two columns of Table 8 in\n      Section 5.2)\
    \ that the implementation supports for Printers.\n   o  'printer-description':\
    \ the subset of the attributes specified in\n      Section 5.4 that the implementation\
    \ supports for Printers.\n   o  'all': the special group 'all' that includes all\
    \ attributes that\n      the implementation supports for Printers.\n   Since a\
    \ Client MAY request specific attributes or named groups, there\n   is a potential\
    \ for some overlap.  For example, if a Client requests\n   'printer-name' and\
    \ 'all', the Client is actually requesting the\n   \"printer-name\" attribute\
    \ twice: once by naming it explicitly, and\n   once by inclusion in the 'all'\
    \ group.  In such cases, the Printer\n   returns each attribute only once in the\
    \ response even if it is\n   requested multiple times.  The Client SHOULD NOT\
    \ request the same\n   attribute in multiple ways.\n   Printers MUST support all\
    \ group names and MUST return all supported\n   attributes belonging to the group.\n"
- title: 4.2.5.1.  Get-Printer-Attributes Request
  contents:
  - "4.2.5.1.  Get-Printer-Attributes Request\n   The following sets of attributes\
    \ are part of the\n   Get-Printer-Attributes request:\n   Group 1: Operation Attributes\n\
    \      Natural Language and Character Set:\n         The \"attributes-charset\"\
    \ and \"attributes-natural-language\"\n         attributes as described in Section\
    \ 4.1.4.1.\n      Target:\n         The \"printer-uri\" (uri) operation attribute,\
    \ which is the\n         target for this operation as described in Section 4.1.5.\n\
    \      Requesting User Name:\n         The \"requesting-user-name\" (name(MAX))\
    \ attribute SHOULD be\n         supplied by the Client as described in Section\
    \ 9.3.\n      \"requested-attributes\" (1setOf keyword):\n         The Client\
    \ MAY supply a set of attribute names and/or attribute\n         group names in\
    \ whose values the requester is interested.  The\n         Printer MUST support\
    \ this attribute.  If the Client omits this\n         attribute, the Printer MUST\
    \ respond as if this attribute had\n         been supplied with a value of 'all'.\n\
    \      \"document-format\" (mimeMediaType):\n         The Client MAY supply and\
    \ the Printer MUST support this\n         attribute.  It is useful for a Client\
    \ to determine the set of\n         supported attribute values that relate to\
    \ the requested\n         Document format.  The Printer MUST return the attributes\
    \ and\n         values that it uses to validate a Job in a Job Creation or\n \
    \        Validate-Job operation in which this Document format is\n         supplied.\
    \  The Printer SHOULD return only (1) those attributes\n         that are supported\
    \ for the specified format and (2) the\n         attribute values that are supported\
    \ for the specified Document\n         format.  By specifying the Document format,\
    \ the Client can get\n         the Printer to eliminate the attributes and values\
    \ that are not\n         supported for a specific Document format.  For example,\
    \ a\n         Printer might have multiple interpreters to support both\n     \
    \    'application/postscript' (for PostScript) and 'text/plain' (for\n       \
    \  text) Documents.  However, only one of those interpreters might\n         support\
    \ the \"number-up\" Job Template attribute with values of\n         '1', '2',\
    \ and '4'.  The other interpreter might only be able to\n         support the\
    \ \"number-up\" Job Template attribute with a value of\n         '1'.  Thus, a\
    \ Client can use the Get-Printer-Attributes\n         operation to obtain the\
    \ attributes and values that will be used\n         to accept/reject a Job Creation\
    \ request.\n         If the Printer does not distinguish between different sets\
    \ of\n         supported values for each different Document format when\n    \
    \     validating Jobs in the Create-Job, Print-Job, Print-URI, and\n         Validate-Job\
    \ operations, it MUST NOT distinguish between\n         different Document formats\
    \ in the Get-Printer-Attributes\n         operation.  If the Printer does distinguish\
    \ between different\n         sets of supported values for each different Document\
    \ format\n         specified by the Client, this specialization applies only to\n\
    \         the following Printer attributes:\n         +  Printer attributes that\
    \ are Job Template attributes\n            (\"xxx-default\", \"xxx-supported\"\
    , and \"xxx-ready\")\n            (see Table 8 in Section 5.2),\n         +  \"\
    pdl-override-supported\",\n         +  \"compression-supported\",\n         +\
    \  \"job-k-octets-supported\",\n         +  \"job-impressions-supported,\n   \
    \      +  \"job-media-sheets-supported\",\n         +  \"printer-driver-installer\"\
    ,\n         +  \"color-supported\", and\n         +  \"reference-uri-schemes-supported\"\
    \n         The values of all other Printer attributes (including\n         \"\
    document-format-supported\") remain invariant with respect to\n         the Client-supplied\
    \ Document format (except for new Printer\n         Description attributes as\
    \ registered according to Section 7.2).\n         If the Client omits this \"\
    document-format\" operation attribute,\n         the Printer MUST respond as if\
    \ the attribute had been supplied\n         with the value of the Printer's \"\
    document-format-default\"\n         attribute.  Clients SHOULD always supply a\
    \ value for\n         \"document-format\", since the Printer's\n         \"document-format-default\"\
    \ value can be\n         'application/octet-stream', in which case the returned\n\
    \         attributes and values are for the union of the Document formats\n  \
    \       that the Printer can automatically sense.  For more details,\n       \
    \  see the description of the 'mimeMediaType' attribute syntax in\n         Section\
    \ 5.1.10.\n         If the Client supplies a value for the \"document-format\"\
    \n         operation attribute that is not supported by the Printer, i.e.,\n \
    \        is not among the values of the Printer's\n         \"document-format-supported\"\
    \ attribute, the Printer MUST reject\n         the operation and return the\n\
    \         'client-error-document-format-not-supported' status-code.\n"
- title: 4.2.5.2.  Get-Printer-Attributes Response
  contents:
  - "4.2.5.2.  Get-Printer-Attributes Response\n   The Printer returns the following\
    \ sets of attributes as part of the\n   Get-Printer-Attributes response:\n   Group\
    \ 1: Operation Attributes\n      Natural Language and Character Set:\n       \
    \  The \"attributes-charset\" and \"attributes-natural-language\"\n         attributes\
    \ as described in Section 4.1.4.2.\n      Status Message:\n         In addition\
    \ to the REQUIRED status-code returned in every\n         response, the response\
    \ MAY include a \"status-message\"\n         (text(255)) and/or a \"detailed-status-message\"\
    \ (text(MAX))\n         operation attribute as described in Appendix B and\n \
    \        Section 4.1.6.\n   Group 2: Unsupported Attributes\n      See Section\
    \ 4.1.7 for details on returning unsupported attributes.\n      The response MAY\
    \ contain the \"requested-attributes\" operation\n      attribute with any supplied\
    \ values (attribute keywords) that were\n      requested by the Client but are\
    \ not supported by the Printer.  If\n      the Printer does return unsupported\
    \ attributes referenced in the\n      \"requested-attributes\" operation attribute\
    \ and that attribute\n      included group names, such as 'all', the unsupported\
    \ attributes\n      MUST NOT include attributes described in this document but\
    \ not\n      supported by the implementation.\n   Group 3: Printer Attributes\n\
    \      This is the set of requested attributes and their current values.\n   \
    \   The Printer ignores (does not respond with) any requested\n      attribute\
    \ that is not supported.  The Printer MAY respond with a\n      subset of the\
    \ supported attributes and values, depending on the\n      security policy in\
    \ force.  However, the Printer MUST respond with\n      the 'unknown' value for\
    \ any supported attribute (including all\n      REQUIRED attributes) for which\
    \ the Printer does not know the\n      value.  Also, the Printer MUST respond\
    \ with 'no-value' for any\n      supported attribute (including all REQUIRED attributes)\
    \ for which\n      the Administrator has not configured a value.  See the description\n\
    \      of the \"out-of-band\" values in the beginning of Section 5.1.\n"
- title: 4.2.6.  Get-Jobs Operation
  contents:
  - "4.2.6.  Get-Jobs Operation\n   This REQUIRED operation allows a Client to retrieve\
    \ the list of Jobs\n   belonging to the target Printer.  The Client can also supply\
    \ a list\n   of Job attribute names and/or attribute group names.  A group of\
    \ Job\n   attributes will be returned for each Job that is returned.\n   This\
    \ operation is similar to the Get-Job-Attributes operation, except\n   that this\
    \ Get-Jobs operation returns attributes from possibly more\n   than one Job.\n"
- title: 4.2.6.1.  Get-Jobs Request
  contents:
  - "4.2.6.1.  Get-Jobs Request\n   The Client submits the Get-Jobs request to a Printer.\n\
    \   The following groups of attributes are part of the Get-Jobs request:\n   Group\
    \ 1: Operation Attributes\n      Natural Language and Character Set:\n       \
    \  The \"attributes-charset\" and \"attributes-natural-language\"\n         attributes\
    \ as described in Section 4.1.4.1.\n      Target:\n         The \"printer-uri\"\
    \ (uri) operation attribute, which is the\n         target for this operation\
    \ as described in Section 4.1.5.\n      Requesting User Name:\n         The \"\
    requesting-user-name\" (name(MAX)) attribute SHOULD be\n         supplied by the\
    \ Client as described in Section 9.3.\n      \"limit\" (integer(1:MAX)):\n   \
    \      The Client MAY supply and the Printer MUST support this\n         attribute.\
    \  It is an integer value that determines the maximum\n         number of Jobs\
    \ that a Client will receive from the Printer even\n         if \"which-jobs\"\
    \ or \"my-jobs\" (described below) constrain which\n         Jobs are returned.\
    \  The limit is a \"stateless limit\" in that if\n         the value supplied\
    \ by the Client is 'N', then only the first\n         'N' Jobs are returned in\
    \ the Get-Jobs response.  If the Client\n         does not supply this attribute,\
    \ the Printer responds with all\n         applicable Jobs.\n      \"requested-attributes\"\
    \ (1setOf type2 keyword):\n         The Client MAY supply and the Printer MUST\
    \ support this\n         attribute.  It is a set of Job attribute names and/or\
    \ attribute\n         group names in whose values the requester is interested.\
    \  This\n         set of attributes is returned for each Job that is returned.\n\
    \         The allowed attribute group names are the same as those defined\n  \
    \       in the Get-Job-Attributes operation in Section 4.3.4.  If the\n      \
    \   Client does not supply this attribute, the Printer MUST respond\n        \
    \ as if the Client had supplied this attribute with two values:\n         \"job-uri\"\
    \ and \"job-id\".\n      \"which-jobs\" (type2 keyword):\n         The Client\
    \ MAY supply and the Printer MUST support this\n         attribute.  It indicates\
    \ which Jobs MUST be returned by the\n         Printer.  The values for this attribute\
    \ include:\n         +  'completed': Any Job whose state is 'completed', 'canceled',\n\
    \            or 'aborted'.\n         +  'not-completed': Any Job whose state is\
    \ 'pending',\n            'processing', 'processing-stopped', or 'pending-held'.\n\
    \         A Printer MUST support both values.  However, if the\n         implementation\
    \ does not keep Jobs in the 'completed',\n         'canceled', and 'aborted' states,\
    \ then it returns no Jobs when\n         the 'completed' value is supplied.\n\
    \         If a Client supplies some other value that is not supported by\n   \
    \      the Printer, the Printer MUST copy the attribute and the\n         unsupported\
    \ value to the Unsupported Attributes group, reject\n         the request, and\
    \ return the\n         'client-error-attributes-or-values-not-supported' status-code.\n\
    \         If the Client does not supply this attribute, the Printer MUST\n   \
    \      respond as if the Client had supplied the attribute with a\n         value\
    \ of 'not-completed'.\n      \"my-jobs\" (boolean):\n         The Client MAY supply\
    \ and the Printer MUST support this\n         attribute.  It indicates whether\
    \ Jobs from all users or just\n         the Jobs submitted by the requesting user\
    \ of this request MUST\n         be considered as candidate Jobs to be returned\
    \ by the Printer.\n         If the Client does not supply this attribute, the\
    \ Printer MUST\n         respond as if the Client had supplied the attribute with\
    \ a\n         value of 'false', i.e., Jobs from all users.  The means for\n  \
    \       authenticating the requesting user and matching the Jobs is\n        \
    \ described in Section 9.\n"
- title: 4.2.6.2.  Get-Jobs Response
  contents:
  - "4.2.6.2.  Get-Jobs Response\n   The Printer returns all of the Jobs up to the\
    \ number specified by the\n   \"limit\" attribute that match the criteria as defined\
    \ by the attribute\n   values supplied by the Client in the request.  It is possible\
    \ that no\n   Jobs are returned, since there can literally be no Jobs at the\n\
    \   Printer or there can be no Jobs that match the criteria supplied by\n   the\
    \ Client.  If the Client requests any Job attributes at all, there\n   is a set\
    \ of Job Attributes returned for each Job.\n   It is not an error for the Printer\
    \ to return 0 Jobs.  If the response\n   returns 0 Jobs because there are no Jobs\
    \ matching the criteria, and\n   the request would have returned one or more Jobs\
    \ with a status-code\n   of 'successful-ok' if there had been Jobs matching the\
    \ criteria, then\n   the status-code for 0 Jobs MUST be 'successful-ok'.\n   Group\
    \ 1: Operation Attributes\n      Natural Language and Character Set:\n       \
    \  The \"attributes-charset\" and \"attributes-natural-language\"\n         attributes\
    \ as described in Section 4.1.4.2.\n      Status Message:\n         In addition\
    \ to the REQUIRED status-code returned in every\n         response, the response\
    \ MAY include a \"status-message\"\n         (text(255)) and/or a \"detailed-status-message\"\
    \ (text(MAX))\n         operation attribute as described in Appendix B and\n \
    \        Section 4.1.6.\n   Group 2: Unsupported Attributes\n      See Section\
    \ 4.1.7 for details on returning unsupported attributes.\n      The response MAY\
    \ contain the \"requested-attributes\" operation\n      attribute with any supplied\
    \ values (attribute keywords) that were\n      requested by the Client but are\
    \ not supported by the Printer.  If\n      the Printer does return unsupported\
    \ attributes referenced in the\n      \"requested-attributes\" operation attribute\
    \ and that attribute\n      included group names, such as 'all', the unsupported\
    \ attributes\n      MUST NOT include attributes described in this document but\
    \ not\n      supported by the implementation.\n   Groups 3 to N: Job Attributes\n\
    \      The Printer responds with one set of Job Attributes for each\n      returned\
    \ Job.  The Printer ignores (does not respond with) any\n      requested attribute\
    \ or value that is not supported or that is\n      restricted by the security\
    \ policy in force, including whether the\n      requesting user is the user that\
    \ submitted the Job\n      (Job-originating user) or not (see Section 9).  However,\
    \ the\n      Printer MUST respond with the 'unknown' value for any supported\n\
    \      attribute (including all REQUIRED attributes) for which the\n      Printer\
    \ does not know the value, unless it would violate the\n      security policy.\
    \  See the description of the \"out-of-band\" values\n      in the beginning of\
    \ Section 5.1.\n      Jobs are returned in the following order:\n      *  If the\
    \ Client requests all 'completed' Jobs (Jobs in the\n         'completed', 'aborted',\
    \ or 'canceled' states), then the Jobs\n         are returned newest to oldest\
    \ (with respect to actual\n         completion time).\n      *  If the Client\
    \ requests all 'not-completed' Jobs (Jobs in the\n         'pending', 'processing',\
    \ 'pending-held', and\n         'processing-stopped' states), then Jobs are returned\
    \ in\n         relative chronological order of expected time to complete\n   \
    \      (based on whatever scheduling algorithm is configured for the\n       \
    \  Printer).\n"
- title: 4.2.7.  Pause-Printer Operation
  contents:
  - "4.2.7.  Pause-Printer Operation\n   This OPTIONAL operation allows a Client to\
    \ stop the Printer from\n   scheduling Jobs on all its devices.  Depending on\
    \ implementation, the\n   Pause-Printer operation MAY also stop the Printer from\
    \ processing the\n   current Job or Jobs.  Any Job that is currently being printed\
    \ is\n   either (1) stopped as soon as the implementation permits or\n   (2) completed,\
    \ depending on implementation.  The Printer MUST still\n   accept Job Creation\
    \ requests to create new Jobs but MUST prevent any\n   Jobs from entering the\
    \ 'processing' state.\n   If the Pause-Printer operation is supported, then the\
    \ Resume-Printer\n   operation MUST be supported, and vice versa.\n   The IPP\
    \ Printer stops the current Job(s) on its device or devices\n   that were in the\
    \ 'processing' or 'processing-stopped' state as soon\n   as the implementation\
    \ permits.  If the implementation will take\n   appreciable time to stop, the\
    \ IPP Printer adds the 'moving-to-paused'\n   value to the Printer's \"printer-state-reasons\"\
    \ attribute (see\n   Section 5.4.12).  When the device or devices have all stopped,\
    \ the\n   IPP Printer transitions the Printer to the 'stopped' state; removes\n\
    \   the 'moving-to-paused' value, if present; and adds the 'paused' value\n  \
    \ to the Printer's \"printer-state-reasons\" attribute.\n   When the current Job\
    \ or Jobs complete that were in the 'processing'\n   state, the IPP Printer transitions\
    \ them to the 'completed' state.\n   When the current Job or Jobs stop in mid-processing\
    \ that were in the\n   'processing' state, the IPP Printer transitions them to\
    \ the\n   'processing-stopped' state and adds the 'printer-stopped' value to\n\
    \   the Jobs' \"job-state-reasons\" attribute.\n   For any Jobs that are 'pending'\
    \ or 'pending-held', the\n   'printer-stopped' value of the Jobs' \"job-state-reasons\"\
    \ attribute\n   also applies.  However, the IPP Printer MAY update those Jobs'\n\
    \   \"job-state-reasons\" values when those Jobs are queried (so-called\n   \"\
    lazy evaluation\").\n   The IPP Printer MUST accept the request in any state and\
    \ transition\n   the Printer to the indicated new \"printer-state\" before returning,\
    \ as\n   shown in Table 2.\n   Access Rights: The authenticated user (see Section\
    \ 9.3) performing\n   this operation MUST be an Operator or Administrator of the\
    \ Printer\n   (see Sections 1 and 9.5).  Otherwise, the IPP Printer MUST reject\
    \ the\n   operation and return 'client-error-forbidden',\n   'client-error-not-authenticated',\
    \ or 'client-error-not-authorized'\n   as appropriate.\n   +--------------+--------------+-----------------+-------------------+\n\
    \   | Current      | New          | \"printer-state- | IPP Printer's     |\n \
    \  | \"printer-    | \"printer-    | reasons\"        | response status-  |\n\
    \   | state\"       | state\"       |                 | code and action:  |\n\
    \   +--------------+--------------+-----------------+-------------------+\n  \
    \ | 'idle'       | 'stopped'    | 'paused'        | 'successful-ok'   |\n   +--------------+--------------+-----------------+-------------------+\n\
    \   | 'processing' | 'processing' | 'moving-to-     | Option 1:         |\n  \
    \ |              |              | paused'         | 'successful-ok';  |\n   |\
    \              |              |                 | Later, when all   |\n   |  \
    \            |              |                 | output has        |\n   |    \
    \          |              |                 | stopped, the      |\n   |      \
    \        |              |                 | \"printer-state\"   |\n   |      \
    \        |              |                 | becomes           |\n   |        \
    \      |              |                 | 'stopped', and    |\n   |          \
    \    |              |                 | the 'paused'      |\n   |            \
    \  |              |                 | value replaces    |\n   |              |\
    \              |                 | the 'moving-to-   |\n   |              |  \
    \            |                 | paused' value in  |\n   |              |    \
    \          |                 | the \"printer-     |\n   |              |     \
    \         |                 | state-reasons\"    |\n   |              |      \
    \        |                 | attribute         |\n   +--------------+--------------+-----------------+-------------------+\n\
    \   | 'processing' | 'stopped'    | 'paused'        | Option 2:         |\n  \
    \ |              |              |                 | 'successful-ok';  |\n   |\
    \              |              |                 | all device output |\n   |  \
    \            |              |                 | stopped           |\n   |    \
    \          |              |                 | immediately       |\n   +--------------+--------------+-----------------+-------------------+\n\
    \   | 'stopped'    | 'stopped'    | 'paused'        | 'successful-ok'   |\n  \
    \ +--------------+--------------+-----------------+-------------------+\n    \
    \             Table 2: Pause-Printer State Transitions\n"
- title: 4.2.7.1.  Pause-Printer Request
  contents:
  - "4.2.7.1.  Pause-Printer Request\n   The following groups of attributes are part\
    \ of the Pause-Printer\n   request:\n   Group 1: Operation Attributes\n      Natural\
    \ Language and Character Set:\n         The \"attributes-charset\" and \"attributes-natural-language\"\
    \n         attributes as described in Section 4.1.4.1.\n      Target:\n      \
    \   The \"printer-uri\" (uri) operation attribute, which is the\n         target\
    \ for this operation as described in Section 4.1.5.\n      Requesting User Name:\n\
    \         The \"requesting-user-name\" (name(MAX)) attribute SHOULD be\n     \
    \    supplied by the Client as described in Section 9.3.\n"
- title: 4.2.7.2.  Pause-Printer Response
  contents:
  - "4.2.7.2.  Pause-Printer Response\n   The following groups of attributes are part\
    \ of the Pause-Printer\n   response:\n   Group 1: Operation Attributes\n     \
    \ Natural Language and Character Set:\n         The \"attributes-charset\" and\
    \ \"attributes-natural-language\"\n         attributes as described in Section\
    \ 4.1.4.2.\n      Status Message:\n         In addition to the REQUIRED status-code\
    \ returned in every\n         response, the response MAY include a \"status-message\"\
    \n         (text(255)) and/or a \"detailed-status-message\" (text(MAX))\n    \
    \     operation attribute as described in Appendix B and\n         Section 4.1.6.\n\
    \   Group 2: Unsupported Attributes\n      See Section 4.1.7 for details on returning\
    \ unsupported attributes.\n"
- title: 4.2.8.  Resume-Printer Operation
  contents:
  - "4.2.8.  Resume-Printer Operation\n   This OPTIONAL operation allows a Client\
    \ to resume the Printer\n   scheduling Jobs on all its devices.  The Printer MUST\
    \ remove the\n   'paused' and 'moving-to-paused' values from the Printer's\n \
    \  \"printer-state-reasons\" attribute, if present.  If there are no other\n \
    \  reasons to keep a device paused (such as a media jam), the IPP\n   Printer\
    \ is free to transition itself to the 'processing' or 'idle'\n   state, depending\
    \ on whether there are Jobs to be processed or not,\n   respectively, and the\
    \ device(s) resumes processing Jobs.\n   If the Pause-Printer operation is supported,\
    \ then the Resume-Printer\n   operation MUST be supported, and vice versa.\n \
    \  The IPP Printer removes the 'printer-stopped' value from any Job's\n   \"job-state-reasons\"\
    \ attributes contained in that Printer.\n   The IPP Printer MUST accept the request\
    \ in any state and transition\n   the Printer to the indicated new state as shown\
    \ in Table 3.\n   Access Rights: The authenticated user (see Section 9.3) performing\n\
    \   this operation MUST be an Operator or Administrator of the Printer\n   (see\
    \ Sections 1 and 9.5).  Otherwise, the IPP Printer MUST reject the\n   operation\
    \ and return 'client-error-forbidden',\n   'client-error-not-authenticated', or\
    \ 'client-error-not-authorized'\n   as appropriate.\n   The Resume-Printer request\
    \ and Resume-Printer response have the same\n   attribute groups and attributes\
    \ as the Pause-Printer operation (see\n   Sections 4.2.7.1 and 4.2.7.2).\n   +-----------------+-----------------+-------------------------------+\n\
    \   | Current         | New \"printer-   | IPP Printer's response        |\n \
    \  | \"printer-state\" | state\"          | status-code and action:       |\n\
    \   +-----------------+-----------------+-------------------------------+\n  \
    \ | 'idle'          | 'idle'          | 'successful-ok'               |\n   +-----------------+-----------------+-------------------------------+\n\
    \   | 'processing'    | 'processing'    | 'successful-ok'               |\n  \
    \ +-----------------+-----------------+-------------------------------+\n   |\
    \ 'stopped'       | 'processing'    | 'successful-ok', when there   |\n   |  \
    \               |                 | are Jobs to be processed      |\n   +-----------------+-----------------+-------------------------------+\n\
    \   | 'stopped'       | 'idle'          | 'successful-ok', when there   |\n  \
    \ |                 |                 | are no Jobs to be processed   |\n   +-----------------+-----------------+-------------------------------+\n\
    \                 Table 3: Resume-Printer State Transitions\n"
- title: 4.2.9.  Purge-Jobs Operation
  contents:
  - "4.2.9.  Purge-Jobs Operation\n   This DEPRECATED operation allows a Client to\
    \ remove all Jobs from a\n   Printer, regardless of their Job states, including\
    \ Jobs in the\n   Printer's Job History (see Section 5.3.7.2).  After a Purge-Jobs\n\
    \   operation has been performed, a Printer MUST return no Jobs in\n   subsequent\
    \ Get-Job-Attributes and Get-Jobs responses (until new Jobs\n   are submitted).\n\
    \   Note: This operation SHOULD NOT be supported in new implementations,\n   since\
    \ it destroys Printer accounting information.\n   Whether the Purge-Jobs (and\
    \ Get-Jobs) operation affects Jobs that\n   were submitted to the device from\
    \ sources other than the IPP Printer\n   in the same way that the Purge-Jobs operation\
    \ affects Jobs that were\n   submitted to the IPP Printer using IPP depends on\
    \ implementation,\n   i.e., on whether IPP is being used as a universal management\
    \ protocol\n   or just to manage IPP Jobs, respectively.\n   Note: If an Operator\
    \ wants to cancel all Jobs without clearing out\n   the Job History, the Operator\
    \ uses the Cancel-Job operation on each\n   Job instead of using the Purge-Jobs\
    \ operation.\n   If this OPTIONAL operation is supported, the Printer MUST accept\
    \ this\n   operation in any state and transition the Printer to the 'idle'\n \
    \  state.\n   Access Rights: The authenticated user (see Section 9.3) performing\n\
    \   this operation MUST be an Operator or Administrator of the Printer\n   (see\
    \ Sections 1 and 9.5).  Otherwise, the Printer MUST reject the\n   operation and\
    \ return 'client-error-forbidden',\n   'client-error-not-authenticated', and 'client-error-not-authorized'\n\
    \   as appropriate.\n   The Purge-Jobs request and Purge-Jobs response have the\
    \ same\n   attribute groups and attributes as the Pause-Printer operation (see\n\
    \   Sections 4.2.7.1 and 4.2.7.2).\n"
- title: 4.3.  Job Operations
  contents:
  - "4.3.  Job Operations\n   All Job operations are directed at Jobs.  A Client MUST\
    \ always supply\n   some means of identifying the Job object in order to identify\
    \ the\n   correct target of the operation.  That Job identification SHOULD be\n\
    \   the combination of a Printer URI with a Job ID but MAY be the\n   (single)\
    \ Job URI.  The IPP implementation MUST support both forms of\n   identification\
    \ for every Job.\n"
- title: 4.3.1.  Send-Document Operation
  contents:
  - "4.3.1.  Send-Document Operation\n   This RECOMMENDED operation allows a Client\
    \ to add a Document to a Job\n   that was created using the Create-Job operation.\
    \  In the Create-Job\n   response, the Printer returns the Job's URI (the \"job-uri\"\
    \ attribute)\n   and the Job's 32-bit identifier (the \"job-id\" attribute). \
    \ For each\n   new Document that the Client desires to add, the Client uses a\n\
    \   Send-Document operation.  Each Send-Document request contains the\n   entire\
    \ stream of Document data for one Document.\n   If the Printer supports this operation\
    \ but does not support multiple\n   Documents per Job, the Printer MUST reject\
    \ subsequent Send-Document\n   operations supplied with data and return the\n\
    \   'server-error-multiple-document-jobs-not-supported' status-code.\n   However,\
    \ the Printer MUST accept the first Document with a 'true' or\n   'false' value\
    \ for the \"last-document\" operation attribute (see\n   below), so that Clients\
    \ MAY always submit one Document Job with a\n   'false' value for \"last-document\"\
    \ in the first Send-Document and a\n   'true' value for \"last-document\" in the\
    \ second Send-Document (with\n   no data).\n   Since the Create-Job and the send\
    \ operations (Send-Document or\n   Send-URI operations) that follow could occur\
    \ over an arbitrarily long\n   period of time for a particular Job, a Client MUST\
    \ send another send\n   operation within a minimum time interval, as defined by\
    \ the IPP\n   Printer, after the receipt of the previous request for the Job.\
    \  If a\n   Printer supports the Create-Job and Send-Document operations, the\n\
    \   Printer MUST support the \"multiple-operation-time-out\" attribute (see\n\
    \   Section 5.4.31).  This attribute indicates the minimum number of\n   seconds\
    \ the Printer will wait for the next send operation before\n   taking some recovery\
    \ action.\n   A Printer MUST recover from an errant Client that does not supply\
    \ a\n   send operation, sometime after the minimum time interval specified by\n\
    \   the Printer's \"multiple-operation-time-out\" attribute.  Such recovery\n\
    \   MAY include any of the following actions or other recovery actions:\n   1.\
    \  Assume that the Job is an invalid Job, start the process of\n       changing\
    \ the Job state to 'aborted', add the 'aborted-by-system'\n       value to the\
    \ Job's \"job-state-reasons\" attribute (see\n       Section 5.3.8), and clean\
    \ up all resources associated with the\n       Job.  In this case, if another\
    \ send operation is finally\n       received, the Printer responds with a 'client-error-not-possible'\n\
    \       or 'client-error-not-found' status-code, depending on whether the\n  \
    \     Job is still around when the send operation finally arrives.\n   2.  Assume\
    \ that the last send operation received was in fact the last\n       Document\
    \ (as if the \"last-document\" flag had been set to 'true'),\n       close the\
    \ Job, and proceed to process it (i.e., move the Job's\n       state to 'pending').\n\
    \   3.  Assume that the last send operation received was in fact the last\n  \
    \     Document and close the Job, but move it to the 'pending-held'\n       state\
    \ and add the 'submission-interrupted' value to the Job's\n       \"job-state-reasons\"\
    \ attribute (see Section 5.3.8).  This action\n       allows the user or an Operator\
    \ to determine whether to continue\n       processing the Job by moving it back\
    \ to the 'pending' state using\n       the Release-Job operation (see Section\
    \ 4.3.6) or to cancel the\n       Job using the Cancel-Job operation (see Section\
    \ 4.3.3).\n   Each implementation is free to decide the \"best\" action to take,\n\
    \   depending on the following: local policy, whether any Documents have\n   been\
    \ added, whether the implementation spools Jobs or not, and/or any\n   other piece\
    \ of information available to it.  If the choice is to\n   abort the Job, it is\
    \ possible that the Job has already been processed\n   to the point that some\
    \ Media Sheet pages have been printed.\n   Access Rights: The authenticated user\
    \ (see Section 9.3) performing\n   this operation must be either the Job owner\
    \ (as determined in the\n   Create-Job operation) or an Operator or Administrator\
    \ of the Printer\n   (see Sections 1 and 9.5).  Otherwise, the Printer MUST reject\
    \ the\n   operation and return 'client-error-forbidden',\n   'client-error-not-authenticated',\
    \ or 'client-error-not-authorized'\n   as appropriate.\n"
- title: 4.3.1.1.  Send-Document Request
  contents:
  - "4.3.1.1.  Send-Document Request\n   The following attribute sets are part of\
    \ the Send-Document request:\n   Group 1: Operation Attributes\n      Natural\
    \ Language and Character Set:\n         The \"attributes-charset\" and \"attributes-natural-language\"\
    \n         attributes as described in Section 4.1.4.1.\n      Target:\n      \
    \   Either the \"printer-uri\" (uri) plus \"job-id\" (integer(1:MAX)),\n     \
    \    or the \"job-uri\" (uri) operation attribute(s), which define the\n     \
    \    target for this operation as described in Section 4.1.5.\n      Requesting\
    \ User Name:\n         The \"requesting-user-name\" (name(MAX)) attribute SHOULD\
    \ be\n         supplied by the Client as described in Section 9.3.\n      \"document-name\"\
    \ (name(MAX)):\n         The Client MAY supply and the Printer MUST support this\n\
    \         attribute.  It contains the Client-supplied Document name.  The\n  \
    \       Document name MAY be different than the Job name and is not\n        \
    \ guaranteed to be unique across multiple Documents in the same\n         Job.\
    \  Typically, the Client software automatically supplies the\n         Document\
    \ name on behalf of the End User by using a file name or\n         an application-generated\
    \ name.  See the description of the\n         \"document-name\" operation attribute\
    \ in the Print-Job request\n         (Section 4.2.1.1) for more information about\
    \ this attribute.\n      \"compression\" (type2 keyword):\n         See the description\
    \ of \"compression\" for the Print-Job\n         operation in Section 4.2.1.1.\n\
    \      \"document-format\" (mimeMediaType):\n         See the description of \"\
    document-format\" for the Print-Job\n         operation in Section 4.2.1.1.\n\
    \      \"document-natural-language\" (naturalLanguage):\n         The Client MAY\
    \ supply and the Printer MAY support this\n         attribute.  It specifies the\
    \ natural language of the Document\n         content for those Document formats\
    \ that require a specification\n         of the natural language in order to properly\
    \ image the\n         Document.\n      \"last-document\" (boolean):\n        \
    \ The Client MUST supply and the Printer MUST support this\n         attribute.\
    \  It is a boolean flag that is set to 'true' if this\n         is the last Document\
    \ for the Job; otherwise, it is set to\n         'false'.\n   Group 2: Document\
    \ Data\n      The Client MUST supply the Document data if the \"last-document\"\
    \n      flag is set to 'false'.  However, since a Client might not know\n    \
    \  that the previous Document sent with a Send-Document (or Send-URI)\n      operation\
    \ was the last Document (i.e., the \"last-document\"\n      attribute was set\
    \ to 'false'), it is legal to send a Send-Document\n      request with no Document\
    \ data where the \"last-document\" flag is\n      set to 'true'.  Such a request\
    \ MUST NOT increment the value of the\n      Job's \"number-of-documents\" attribute,\
    \ since no real Document was\n      added to the Job.  It is not an error for\
    \ a Client to submit a Job\n      with no actual Document data, i.e., only a single\
    \ Create-Job and\n      Send-Document request with a \"last-document\" operation\
    \ attribute\n      set to 'true' with no Document data.\n"
- title: 4.3.1.2.  Send-Document Response
  contents:
  - "4.3.1.2.  Send-Document Response\n   The following sets of attributes are part\
    \ of the Send-Document\n   response:\n   Group 1: Operation Attributes\n     \
    \ Natural Language and Character Set:\n         The \"attributes-charset\" and\
    \ \"attributes-natural-language\"\n         attributes as described in Section\
    \ 4.1.4.2.\n      Status Message:\n         In addition to the REQUIRED status-code\
    \ returned in every\n         response, the response MAY include a \"status-message\"\
    \n         (text(255)) and/or a \"detailed-status-message\" (text(MAX))\n    \
    \     operation attribute as described in Appendix B and\n         Section 4.1.6.\n\
    \   Group 2: Unsupported Attributes\n      See Section 4.1.7 for details on returning\
    \ unsupported attributes.\n   Group 3: Job Object Attributes\n      This is the\
    \ same set of attributes as those described in the\n      Print-Job response (see\
    \ Section 4.2.1.2).\n"
- title: 4.3.2.  Send-URI Operation
  contents:
  - "4.3.2.  Send-URI Operation\n   This RECOMMENDED operation is identical to the\
    \ Send-Document\n   operation (see Section 4.3.1), except that a Client MUST supply\
    \ a URI\n   reference (\"document-uri\" operation attribute) rather than the\n\
    \   Document data itself.  If a Printer supports this operation, Clients\n   can\
    \ use both Send-URI and Send-Document operations to add new\n   Documents to an\
    \ existing Job.  However, if a Client needs to indicate\n   that the previous\
    \ Send-URI or Send-Document was the last Document,\n   the Client MUST use the\
    \ Send-Document operation with no Document data\n   and the \"last-document\"\
    \ flag set to 'true' (rather than using a\n   Send-URI operation with no \"document-uri\"\
    \ operation attribute).\n   If a Printer supports this operation, it MUST also\
    \ support the\n   Print-URI operation (see Section 4.2.2).\n   The Printer MUST\
    \ validate the syntax and URI scheme of the supplied\n   URI before returning\
    \ a response, just as in the Print-URI operation.\n   The Printer MAY validate\
    \ the accessibility of the Document as part of\n   the operation, or subsequently\
    \ (see Section 4.2.2).\n"
- title: 4.3.3.  Cancel-Job Operation
  contents:
  - "4.3.3.  Cancel-Job Operation\n   This REQUIRED operation allows a Client to cancel\
    \ a Print Job from\n   the time the Job is created up to the time it is completed,\
    \ canceled,\n   or aborted.  Since a Job might already be printing by the time\
    \ a\n   Cancel-Job is received, some Media Sheet pages might be printed\n   before\
    \ the Job is actually terminated.\n   The Printer MUST accept or reject the request\
    \ based on the Job's\n   current state and transition the Job to the indicated\
    \ new state as\n   shown in Table 4.\n   Access Rights: The authenticated user\
    \ (see Section 9.3) performing\n   this operation must be either the Job owner\
    \ or an Operator or\n   Administrator of the Printer (see Sections 1 and 9.5).\
    \  Otherwise,\n   the Printer MUST reject the operation and return\n   'client-error-forbidden',\
    \ 'client-error-not-authenticated', or\n   'client-error-not-authorized' as appropriate.\n\
    \   +-------------------+--------------------+--------------------------+\n  \
    \ | Current \"job-     | New \"job-state\"    | Printer's response       |\n \
    \  | state\"            |                    | status-code and action:  |\n  \
    \ +-------------------+--------------------+--------------------------+\n   |\
    \ 'pending'         | 'canceled'         | 'successful-ok'          |\n   +-------------------+--------------------+--------------------------+\n\
    \   | 'pending-held'    | 'canceled'         | 'successful-ok'          |\n  \
    \ +-------------------+--------------------+--------------------------+\n   |\
    \ 'processing'      | 'canceled'         | 'successful-ok'          |\n   +-------------------+--------------------+--------------------------+\n\
    \   | 'processing'      | 'processing'       | 'successful-ok' (note 1) |\n  \
    \ +-------------------+--------------------+--------------------------+\n   |\
    \ 'processing'      | 'processing'       | 'client-error-not-       |\n   |  \
    \                 |                    | possible' (note 2)       |\n   +-------------------+--------------------+--------------------------+\n\
    \   | 'processing-      | 'canceled'         | 'successful-ok'          |\n  \
    \ | stopped'          |                    |                          |\n   +-------------------+--------------------+--------------------------+\n\
    \   | 'processing-      | 'processing-       | 'successful-ok' (note 1) |\n  \
    \ | stopped'          | stopped'           |                          |\n   +-------------------+--------------------+--------------------------+\n\
    \   | 'processing-      | 'processing-       | 'client-error-not-       |\n  \
    \ | stopped'          | stopped'           | possible' (note 2)       |\n   +-------------------+--------------------+--------------------------+\n\
    \   | 'completed'       | 'completed'        | 'client-error-not-       |\n  \
    \ |                   |                    | possible'                |\n   +-------------------+--------------------+--------------------------+\n\
    \   | 'canceled'        | 'canceled'         | 'client-error-not-       |\n  \
    \ |                   |                    | possible'                |\n   +-------------------+--------------------+--------------------------+\n\
    \   | 'aborted'         | 'aborted'          | 'client-error-not-       |\n  \
    \ |                   |                    | possible'                |\n   +-------------------+--------------------+--------------------------+\n\
    \                   Table 4: Cancel-Job State Transitions\n   Note 1: If the implementation\
    \ requires some measurable time to cancel\n   the Job in the 'processing' or 'processing-stopped'\
    \ Job state, the\n   Printer MUST add the 'processing-to-stop-point' value to\
    \ the Job's\n   \"job-state-reasons\" attribute and then transition the Job to\
    \ the\n   'canceled' state when the processing ceases (see Section 5.3.8).\n \
    \  Note 2: If the Job already has the 'processing-to-stop-point' value\n   in\
    \ its \"job-state-reasons\" attribute, then the Printer MUST reject a\n   Cancel-Job\
    \ operation.\n"
- title: 4.3.3.1.  Cancel-Job Request
  contents:
  - "4.3.3.1.  Cancel-Job Request\n   The following groups of attributes are part\
    \ of the Cancel-Job\n   request:\n   Group 1: Operation Attributes\n      Natural\
    \ Language and Character Set:\n         The \"attributes-charset\" and \"attributes-natural-language\"\
    \n         attributes as described in Section 4.1.4.1.\n      Target:\n      \
    \   Either the \"printer-uri\" (uri) plus \"job-id\" (integer(1:MAX)),\n     \
    \    or the \"job-uri\" (uri) operation attribute(s), which define the\n     \
    \    target for this operation as described in Section 4.1.5.\n      Requesting\
    \ User Name:\n         The \"requesting-user-name\" (name(MAX)) attribute SHOULD\
    \ be\n         supplied by the Client as described in Section 9.3.\n      \"message\"\
    \ (text(127)):\n         The Client MAY supply and the Printer MAY support this\n\
    \         attribute.  It is a message to the Operator.  This \"message\"\n   \
    \      attribute is not the same as the \"job-message-from-operator\"\n      \
    \   attribute.  That attribute is used to report a message from the\n        \
    \ Operator to the End User that queries that attribute.  This\n         \"message\"\
    \ operation attribute is used to send a message from\n         the Client to the\
    \ Operator along with the operation request.\n         How or where to display\
    \ this message to the Operator (if\n         at all) is an implementation decision.\n"
- title: 4.3.3.2.  Cancel-Job Response
  contents:
  - "4.3.3.2.  Cancel-Job Response\n   The following sets of attributes are part of\
    \ the Cancel-Job response:\n   Group 1: Operation Attributes\n      Natural Language\
    \ and Character Set:\n         The \"attributes-charset\" and \"attributes-natural-language\"\
    \n         attributes as described in Section 4.1.4.2.\n      Status Message:\n\
    \         In addition to the REQUIRED status-code returned in every\n        \
    \ response, the response MAY include a \"status-message\"\n         (text(255))\
    \ and/or a \"detailed-status-message\" (text(MAX))\n         operation attribute\
    \ as described in Appendix B and\n         Section 4.1.6.\n   Group 2: Unsupported\
    \ Attributes\n      See Section 4.1.7 for details on returning unsupported attributes.\n\
    \      Once a successful response has been sent, the implementation\n      guarantees\
    \ that the Job will eventually end up in the 'canceled'\n      state.  Between\
    \ the time that the Cancel-Job operation is accepted\n      and when the Job enters\
    \ the 'canceled' job-state (see\n      Section 5.3.7), the \"job-state-reasons\"\
    \ attribute SHOULD contain\n      the 'processing-to-stop-point' value, which\
    \ indicates to later\n      queries that although the Job might still be 'processing'\
    \ it will\n      eventually end up in the 'canceled' state, not the 'completed'\n\
    \      state.\n"
- title: 4.3.4.  Get-Job-Attributes Operation
  contents:
  - "4.3.4.  Get-Job-Attributes Operation\n   This REQUIRED operation allows a Client\
    \ to request the values of\n   attributes of a Job, and it is almost identical\
    \ to the\n   Get-Printer-Attributes operation (see Section 4.2.5).  The only\n\
    \   differences are that the operation is directed at a Job rather than a\n  \
    \ Printer, there is no \"document-format\" operation attribute used when\n   querying\
    \ a Job, and the returned attribute group is a set of Job\n   attributes rather\
    \ than a set of Printer attributes.\n   For Jobs, the possible names of attribute\
    \ groups are:\n   o  'job-template': the subset of the Job Template attributes\
    \ that\n      apply to a Job (the first column of Table 8 in Section 5.2) that\n\
    \      the implementation supports for Jobs.\n   o  'job-description': the subset\
    \ of the Job Description and Status\n      attributes specified in Section 5.3\
    \ that the implementation\n      supports for Jobs.\n   o  'all': the special\
    \ group 'all' that includes all attributes that\n      the implementation supports\
    \ for Jobs.\n   Since a Client MAY request specific attributes or named groups,\
    \ there\n   is a potential for some overlap.  For example, if a Client requests\n\
    \   'job-name' and 'job-description', the Client is actually requesting\n   the\
    \ \"job-name\" attribute once by naming it explicitly, and once by\n   inclusion\
    \ in the 'job-description' group.  In such cases, the Printer\n   returns the\
    \ attribute only once in the response even if it is\n   requested multiple times.\
    \  The Client SHOULD NOT request the same\n   attribute in multiple ways.\n  \
    \ Jobs MUST support all group names and MUST return all supported\n   attributes\
    \ belonging to the group.\n"
- title: 4.3.4.1.  Get-Job-Attributes Request
  contents:
  - "4.3.4.1.  Get-Job-Attributes Request\n   The following groups of attributes are\
    \ part of the Get-Job-Attributes\n   request when the request is directed at a\
    \ Job:\n   Group 1: Operation Attributes\n      Natural Language and Character\
    \ Set:\n         The \"attributes-charset\" and \"attributes-natural-language\"\
    \n         attributes as described in Section 4.1.4.1.\n      Target:\n      \
    \   Either the \"printer-uri\" (uri) plus \"job-id\" (integer(1:MAX)),\n     \
    \    or the \"job-uri\" (uri) operation attribute(s), which define the\n     \
    \    target for this operation as described in Section 4.1.5.\n      Requesting\
    \ User Name:\n         The \"requesting-user-name\" (name(MAX)) attribute SHOULD\
    \ be\n         supplied by the Client as described in Section 9.3.\n      \"requested-attributes\"\
    \ (1setOf keyword):\n         The Client MAY supply and the Printer MUST support\
    \ this\n         attribute.  It is a set of attribute names and/or attribute\n\
    \         group names in whose values the requester is interested.  If\n     \
    \    the Client omits this attribute, the Printer MUST respond as if\n       \
    \  this attribute had been supplied with a value of 'all'.\n"
- title: 4.3.4.2.  Get-Job-Attributes Response
  contents:
  - "4.3.4.2.  Get-Job-Attributes Response\n   The Printer returns the following sets\
    \ of attributes as part of the\n   Get-Job-Attributes response:\n   Group 1: Operation\
    \ Attributes\n      Natural Language and Character Set:\n         The \"attributes-charset\"\
    \ and \"attributes-natural-language\"\n         attributes as described in Section\
    \ 4.1.4.2.\n         \"attributes-natural-language\" MAY be the natural language\
    \ of\n         the Job, rather than the one requested.\n      Status Message:\n\
    \         In addition to the REQUIRED status-code returned in every\n        \
    \ response, the response MAY include a \"status-message\"\n         (text(255))\
    \ and/or a \"detailed-status-message\" (text(MAX))\n         operation attribute\
    \ as described in Appendix B and\n         Section 4.1.6.\n   Group 2: Unsupported\
    \ Attributes\n      See Section 4.1.7 for details on returning unsupported attributes.\n\
    \      The response MAY contain the \"requested-attributes\" operation\n     \
    \ attribute with any supplied values (attribute keywords) that were\n      requested\
    \ by the Client but are not supported by the Printer.  If\n      the Printer does\
    \ return unsupported attributes referenced in the\n      \"requested-attributes\"\
    \ operation attribute and that attribute\n      included group names, such as\
    \ 'all', the unsupported attributes\n      MUST NOT include attributes described\
    \ in this document but not\n      supported by the implementation.\n   Group 3:\
    \ Job Attributes\n      This is the set of requested attributes and their current\
    \ values.\n      The Printer ignores (does not respond with) any requested\n \
    \     attribute or value that is not supported or that is restricted by\n    \
    \  the security policy in force, including whether the requesting\n      user\
    \ is the user that submitted the Job (Job-originating user) or\n      not (see\
    \ Section 9).  However, the Printer MUST respond with the\n      'unknown' value\
    \ for any supported attribute (including all\n      REQUIRED attributes) for which\
    \ the Printer does not know the\n      value, unless it would violate the security\
    \ policy.  See the\n      description of the \"out-of-band\" values in the beginning\
    \ of\n      Section 5.1.\n"
- title: 4.3.5.  Hold-Job Operation
  contents:
  - "4.3.5.  Hold-Job Operation\n   This OPTIONAL operation allows a Client to hold\
    \ a pending Job in the\n   queue so that it is not eligible for scheduling.  If\
    \ the Hold-Job\n   operation is supported, then the Release-Job operation MUST\
    \ be\n   supported, and vice versa.  The OPTIONAL \"job-hold-until\" operation\n\
    \   attribute allows a Client to specify whether to hold the Job\n   indefinitely\
    \ or until a specified time period, if supported.\n   The Printer MUST accept\
    \ or reject the request based on the Job's\n   current state and transition the\
    \ Job to the indicated new state as\n   shown in Table 5.\n   Note: In order to\
    \ keep the Hold-Job operation simple, such a request\n   is rejected when the\
    \ Job is in the 'processing' or\n   'processing-stopped' state.  If an operation\
    \ is needed to hold Jobs\n   while in either of these states, it will be added\
    \ as an additional\n   operation, rather than overloading the Hold-Job operation.\
    \  Then it\n   is clear to Clients by querying the Printer's \"operations-supported\"\
    \n   (see Section 5.4.15) and the Job's \"job-state\" (see Section 5.3.7)\n  \
    \ attributes which operations are possible.\n   Access Rights: The authenticated\
    \ user (see Section 9.3) performing\n   this operation must be either the Job\
    \ owner or an Operator or\n   Administrator of the Printer (see Sections 1 and\
    \ 9.5).  Otherwise,\n   the Printer MUST reject the operation and return\n   'client-error-forbidden',\
    \ 'client-error-not-authenticated', or\n   'client-error-not-authorized' as appropriate.\n\
    \   +-------------------+--------------------+--------------------------+\n  \
    \ | Current \"job-     | New \"job-state\"    | Printer's response       |\n \
    \  | state\"            |                    | status-code and action:  |\n  \
    \ +-------------------+--------------------+--------------------------+\n   |\
    \ 'pending'         | 'pending-held'     | 'successful-ok' (note 1) |\n   +-------------------+--------------------+--------------------------+\n\
    \   | 'pending'         | 'pending'          | 'successful-ok' (note 2) |\n  \
    \ +-------------------+--------------------+--------------------------+\n   |\
    \ 'pending-held'    | 'pending-held'     | 'successful-ok' (note 1) |\n   +-------------------+--------------------+--------------------------+\n\
    \   | 'pending-held'    | 'pending'          | 'successful-ok' (note 2) |\n  \
    \ +-------------------+--------------------+--------------------------+\n   |\
    \ 'processing'      | 'processing'       | 'client-error-not-       |\n   |  \
    \                 |                    | possible'                |\n   +-------------------+--------------------+--------------------------+\n\
    \   | 'processing-      | 'processing-       | 'client-error-not-       |\n  \
    \ | stopped'          | stopped'           | possible'                |\n   +-------------------+--------------------+--------------------------+\n\
    \   | 'completed'       | 'completed'        | 'client-error-not-       |\n  \
    \ |                   |                    | possible'                |\n   +-------------------+--------------------+--------------------------+\n\
    \   | 'canceled'        | 'canceled'         | 'client-error-not-       |\n  \
    \ |                   |                    | possible'                |\n   +-------------------+--------------------+--------------------------+\n\
    \   | 'aborted'         | 'aborted'          | 'client-error-not-       |\n  \
    \ |                   |                    | possible'                |\n   +-------------------+--------------------+--------------------------+\n\
    \                    Table 5: Hold-Job State Transitions\n   Note 1: If the implementation\
    \ supports multiple reasons for a Job to\n   be in the 'pending-held' state, the\
    \ Printer MUST add the\n   \"job-hold-until-specified\" value to the Job's \"\
    job-state-reasons\"\n   attribute.\n   Note 2: If the Printer supports the \"\
    job-hold-until\" operation\n   attribute, but the specified time period has already\
    \ started (or is\n   the 'no-hold' value) and there are no other reasons to hold\
    \ the Job,\n   the Printer MUST make the Job be a candidate for processing\n \
    \  immediately (see Section 5.2.2) by putting the Job in the 'pending'\n   state.\n"
- title: 4.3.5.1.  Hold-Job Request
  contents:
  - "4.3.5.1.  Hold-Job Request\n   The groups and operation attributes are the same\
    \ as those defined for\n   a Cancel-Job request (see Section 4.3.3.1), with the\
    \ addition of the\n   following Group 1 operation attribute:\n      \"job-hold-until\"\
    \ (type2 keyword | name(MAX)):\n      The Client MAY supply and the Printer MUST\
    \ support this operation\n      attribute in a Hold-Job request if it supports\
    \ the\n      \"job-hold-until\" Job Template attribute in Job Creation requests.\n\
    \      See Section 5.2.2.  The Printer SHOULD support the\n      \"job-hold-until\"\
    \ Job Template attribute for use in Job Creation\n      requests with at least\
    \ the 'indefinite' value, if it supports the\n      Hold-Job operation.  Otherwise,\
    \ a Client cannot create a Job and\n      hold it immediately (without picking\
    \ some supported time period in\n      the future).\n      If supplied and supported\
    \ as specified in the Printer's\n      \"job-hold-until-supported\" attribute,\
    \ the Printer copies the\n      supplied operation attribute to the Job, replacing\
    \ the Job's\n      previous \"job-hold-until\" attribute, if present, and makes\
    \ the Job\n      a candidate for scheduling during the supplied named time period.\n\
    \      If supplied but either the \"job-hold-until\" operation attribute\n   \
    \   itself or the value supplied is not supported, the Printer accepts\n     \
    \ the request, returns the unsupported attribute or value in the\n      Unsupported\
    \ Attributes group according to Section 4.1.7, returns\n      the 'successful-ok-ignored-or-substituted-attributes'\
    \ status-code,\n      and holds the Job indefinitely until a Client performs a\n\
    \      subsequent Release-Job operation.\n      If (1) the Client supplies either\
    \ a value that specifies a time\n      period that has already started or the\
    \ 'no-hold' value (meaning\n      don't hold the Job) and (2) the Printer supports\
    \ the\n      \"job-hold-until\" operation attribute and there are no other\n \
    \     reasons to hold the Job, the Printer MUST accept the operation and\n   \
    \   make the Job be a candidate for processing immediately (see\n      Section\
    \ 5.2.2).\n      If the Client does not supply a \"job-hold-until\" operation\n\
    \      attribute in the request, the Printer MUST populate the Job with a\n  \
    \    \"job-hold-until\" attribute with the 'indefinite' value (if the\n      Printer\
    \ supports the \"job-hold-until\" attribute) and hold the Job\n      indefinitely,\
    \ until a Client performs a Release-Job operation.\n"
- title: 4.3.5.2.  Hold-Job Response
  contents:
  - "4.3.5.2.  Hold-Job Response\n   The groups and attributes are the same as those\
    \ defined for a\n   Cancel-Job response (see Section 4.3.3.2).\n"
- title: 4.3.6.  Release-Job Operation
  contents:
  - "4.3.6.  Release-Job Operation\n   This OPTIONAL operation allows a Client to\
    \ release a previously held\n   Job so that it is again eligible for scheduling.\
    \  If the Hold-Job\n   operation is supported, then the Release-Job operation\
    \ MUST be\n   supported, and vice versa.\n   This operation removes the \"job-hold-until\"\
    \ Job attribute, if\n   present, from the Job that had been supplied in the Create-Job\
    \ or\n   most recent Hold-Job or Restart-Job operation and removes its effect\n\
    \   on the Job.  The Printer MUST remove the \"job-hold-until-specified\"\n  \
    \ value from the Job's \"job-state-reasons\" attribute, if present.  See\n   Section\
    \ 5.3.8.\n   The Printer MUST accept or reject the request based on the Job's\n\
    \   current state and transition the Job to the indicated new state as\n   shown\
    \ in Table 6.\n   Access Rights: The authenticated user (see Section 9.3) performing\n\
    \   this operation must be either the Job owner or an Operator or\n   Administrator\
    \ of the Printer (see Sections 1 and 9.5).  Otherwise,\n   the Printer MUST reject\
    \ the operation and return\n   'client-error-forbidden', 'client-error-not-authenticated',\
    \ or\n   'client-error-not-authorized' as appropriate.\n   The Release-Job request\
    \ and Release-Job response have the same\n   attribute groups and attributes as\
    \ the Cancel-Job operation (see\n   Sections 4.3.3.1 and 4.3.3.2).\n   +-------------------+--------------------+--------------------------+\n\
    \   | Current \"job-     | New \"job-state\"    | Printer's response       |\n\
    \   | state\"            |                    | status-code and action:  |\n \
    \  +-------------------+--------------------+--------------------------+\n   |\
    \ 'pending'         | 'pending'          | 'successful-ok'.  No     |\n   |  \
    \                 |                    | effect on the Job.       |\n   +-------------------+--------------------+--------------------------+\n\
    \   | 'pending-held'    | 'pending-held'     | 'successful-ok' (note 1) |\n  \
    \ +-------------------+--------------------+--------------------------+\n   |\
    \ 'pending-held'    | 'pending'          | 'successful-ok'          |\n   +-------------------+--------------------+--------------------------+\n\
    \   | 'processing'      | 'processing'       | 'successful-ok'.  No     |\n  \
    \ |                   |                    | effect on the Job.       |\n   +-------------------+--------------------+--------------------------+\n\
    \   | 'processing-      | 'processing-       | 'successful-ok'.  No     |\n  \
    \ | stopped'          | stopped'           | effect on the Job.       |\n   +-------------------+--------------------+--------------------------+\n\
    \   | 'completed'       | 'completed'        | 'client-error-not-       |\n  \
    \ |                   |                    | possible'                |\n   +-------------------+--------------------+--------------------------+\n\
    \   | 'canceled'        | 'canceled'         | 'client-error-not-       |\n  \
    \ |                   |                    | possible'                |\n   +-------------------+--------------------+--------------------------+\n\
    \   | 'aborted'         | 'aborted'          | 'client-error-not-       |\n  \
    \ |                   |                    | possible'                |\n   +-------------------+--------------------+--------------------------+\n\
    \                  Table 6: Release-Job State Transitions\n   Note 1: If there\
    \ are other reasons to keep the Job in the\n   'pending-held' state, such as 'resources-are-not-ready',\
    \ the Job\n   remains in the 'pending-held' state.  Thus, the 'pending-held' state\n\
    \   is not just for Jobs that have the \"job-hold-until\" attribute applied\n\
    \   to them but is also used for any reason that will keep the Job from\n   being\
    \ a candidate for scheduling and processing, such as\n   'resources-are-not-ready'.\
    \  See the \"job-hold-until\" attribute\n   (Section 5.2.2).\n"
- title: 4.3.7.  Restart-Job Operation
  contents:
  - "4.3.7.  Restart-Job Operation\n   This DEPRECATED operation allows a Client to\
    \ restart a Job that is\n   retained in the queue after processing has completed\
    \ (see\n   Section 5.3.7.2).\n   Note: This operation SHOULD NOT be supported\
    \ in new implementations,\n   since it destroys Printer accounting information.\
    \  The Resubmit-Job\n   operation [PWG5100.11] is the safe replacement for this\
    \ operation and\n   makes a copy of the Job, assigns a new \"job-uri\" and \"\
    job-id\" to the\n   copy, and resets the Job progress attributes in the new copy\
    \ only.\n   The Restart-Job operation moves the Job to the 'pending' or\n   'pending-held'\
    \ Job state and restarts at the beginning on the same\n   Printer with the same\
    \ attribute values.  If any of the Documents in\n   the Job were passed by reference\
    \ (Print-URI or Send-URI), the Printer\n   MUST refetch the data, since the semantics\
    \ of Restart-Job are to\n   repeat all Job processing.  The Job Status attributes\
    \ that accumulate\n   Job progress, such as \"job-impressions-completed\",\n \
    \  \"job-media-sheets-completed\", and \"job-k-octets-processed\", MUST be\n \
    \  reset to 0 so that they give an accurate record of the Job from its\n   restart\
    \ point.  The Job MUST continue to use the same \"job-uri\" and\n   \"job-id\"\
    \ attribute values.\n   The Printer MUST accept or reject the request based on\
    \ the Job's\n   current state and transition the Job to the indicated new state\
    \ as\n   shown in Table 7.\n   Note: In order to prevent a user from inadvertently\
    \ restarting a Job\n   in the middle, the Restart-Job request is rejected when\
    \ the Job is in\n   the 'processing' or 'processing-stopped' state.  If in the\
    \ future an\n   operation is needed to hold or restart Jobs while in either of\
    \ these\n   states, it will be added as an additional operation, rather than\n\
    \   overloading the Restart-Job operation, so that it is clear that the\n   user\
    \ intended that the current Job not be completed.\n   Access Rights: The authenticated\
    \ user (see Section 9.3) performing\n   this operation must be either the Job\
    \ owner or an Operator or\n   Administrator of the Printer (see Sections 1 and\
    \ 9.5).  Otherwise,\n   the Printer MUST reject the operation and return\n   'client-error-forbidden',\
    \ 'client-error-not-authenticated', or\n   'client-error-not-authorized' as appropriate.\n\
    \   +-------------------+--------------------+--------------------------+\n  \
    \ | Current \"job-     | New \"job-state\"    | Printer's response       |\n \
    \  | state\"            |                    | status-code and action:  |\n  \
    \ +-------------------+--------------------+--------------------------+\n   |\
    \ 'pending'         | 'pending'          | 'client-error-not-       |\n   |  \
    \                 |                    | possible'                |\n   +-------------------+--------------------+--------------------------+\n\
    \   | 'pending-held'    | 'pending-held'     | 'client-error-not-       |\n  \
    \ |                   |                    | possible'                |\n   +-------------------+--------------------+--------------------------+\n\
    \   | 'processing'      | 'processing'       | 'client-error-not-       |\n  \
    \ |                   |                    | possible'                |\n   +-------------------+--------------------+--------------------------+\n\
    \   | 'processing-      | 'processing-       | 'client-error-not-       |\n  \
    \ | stopped'          | stopped'           | possible'                |\n   +-------------------+--------------------+--------------------------+\n\
    \   | 'completed'       | 'pending' or       | 'successful-ok' - Job is |\n  \
    \ |                   | 'pending-held'     | started over.            |\n   +-------------------+--------------------+--------------------------+\n\
    \   | 'completed'       | 'completed'        | 'client-error-not-       |\n  \
    \ |                   |                    | possible' - see Rule 1.  |\n   +-------------------+--------------------+--------------------------+\n\
    \   | 'canceled'        | 'pending' or       | 'successful-ok' - Job is |\n  \
    \ |                   | 'pending-held'     | started over.            |\n   +-------------------+--------------------+--------------------------+\n\
    \   | 'canceled'        | 'canceled'         | 'client-error-not-       |\n  \
    \ |                   |                    | possible' - see Rule 1.  |\n   +-------------------+--------------------+--------------------------+\n\
    \   | 'aborted'         | 'pending' or       | 'successful-ok' - Job is |\n  \
    \ |                   | 'pending-held'     | started over.            |\n   +-------------------+--------------------+--------------------------+\n\
    \   | 'aborted'         | 'aborted'          | 'client-error-not-       |\n  \
    \ |                   |                    | possible' - see Rule 1.  |\n   +-------------------+--------------------+--------------------------+\n\
    \                  Table 7: Restart-Job State Transitions\n   Rule 1: If the Job\
    \ Retention Period has expired for the Job in this\n   state, then the Printer\
    \ rejects the operation.  See Section 5.3.7.2.\n"
- title: 4.3.7.1.  Restart-Job Request
  contents:
  - "4.3.7.1.  Restart-Job Request\n   The groups and attributes are the same as those\
    \ defined for a\n   Cancel-Job request (see Section 4.3.3.1), with the addition\
    \ of the\n   following Group 1 operation attribute:\n      \"job-hold-until\"\
    \ (type2 keyword | name(MAX)):\n      The Client MAY supply and the Printer MUST\
    \ support this operation\n      attribute in a Restart-Job request if it supports\
    \ the\n      \"job-hold-until\" Job Template attribute in Job Creation requests.\n\
    \      See Section 5.2.2.\n      If supplied and supported as specified in the\
    \ Printer's\n      \"job-hold-until-supported\" attribute, the Printer copies\
    \ the\n      supplied operation attribute to the Job, replacing the Job's\n  \
    \    previous \"job-hold-until\" attribute, if present, and makes the Job\n  \
    \    a candidate for scheduling during the supplied named time period.\n     \
    \ See Section 5.2.2.\n      If supplied but the value is not supported, the Printer\
    \ accepts\n      the request, returns the unsupported attribute or value in the\n\
    \      Unsupported Attributes group according to Section 4.1.7, returns\n    \
    \  the 'successful-ok-ignored-or-substituted-attributes' status-code,\n      and\
    \ holds the Job indefinitely until a Client performs a\n      subsequent Release-Job\
    \ operation.\n      If supplied but the \"job-hold-until\" operation attribute\
    \ itself is\n      not supported, the Printer accepts the request, returns the\n\
    \      unsupported attribute with the out-of-band 'unsupported' value in\n   \
    \   the Unsupported Attributes group according to Section 4.1.7,\n      returns\
    \ the 'successful-ok-ignored-or-substituted-attributes'\n      status-code, and\
    \ restarts the Job, i.e., ignores the\n      \"job-hold-until\" attribute.\n \
    \     If (1) the Client supplies either a value that specifies a time\n      period\
    \ that has already started or the 'no-hold' value (meaning\n      don't hold the\
    \ Job) and (2) the Printer supports the\n      \"job-hold-until\" operation attribute\
    \ and there are no other\n      reasons to hold the Job, the Printer makes the\
    \ Job a candidate for\n      processing immediately (see Section 5.2.2).\n   \
    \   If the Client does not supply a \"job-hold-until\" operation\n      attribute\
    \ in the request, the Printer removes the \"job-hold-until\"\n      attribute,\
    \ if present, from the Job.  If there are no other\n      reasons to hold the\
    \ Job, the Restart-Job operation makes the Job a\n      candidate for processing\
    \ immediately (see Section 5.2.2).\n"
- title: 4.3.7.2.  Restart-Job Response
  contents:
  - "4.3.7.2.  Restart-Job Response\n   The groups and attributes are the same as\
    \ those defined for a\n   Cancel-Job response (see Section 4.3.3.2).\n"
- title: 5.  Object Attributes
  contents:
  - "5.  Object Attributes\n   This section describes the attributes with their corresponding\n\
    \   attribute syntaxes and values that are part of the IPP Model.  The\n   sections\
    \ below show the objects and their associated attributes that\n   are included\
    \ within the scope of this protocol.  Many of these\n   attributes are derived\
    \ from other relevant documents:\n   o  Document Printing Application (DPA) [ISO10175]\n\
    \   o  Printer MIB v2 [RFC3805]\n   Each attribute is uniquely identified in this\
    \ document using a\n   \"keyword\" (see Section 2.3.7) that is the name of the\
    \ attribute.  The\n   keyword is included in the section title describing that\
    \ attribute.\n   Note: Not only are keywords used to identify attributes, but\
    \ one of\n   the attribute syntaxes described below is \"keyword\" so that some\n\
    \   attributes have 'keyword' values.  Therefore, these attributes are\n   defined\
    \ as having an attribute syntax that is a set of keywords.\n"
- title: 5.1.  Attribute Syntaxes
  contents:
  - "5.1.  Attribute Syntaxes\n   This section defines the basic attribute syntax\
    \ types that all\n   Clients and IPP objects MUST be able to accept in responses\
    \ and\n   accept in requests, respectively.  Each attribute description in\n \
    \  Sections 4 and 5 includes in the section title the name of the\n   attribute\
    \ with its syntax(es) in parentheses.  A conforming\n   implementation of an attribute\
    \ MUST include the semantics of the\n   attribute syntax(es) so identified.  Section\
    \ 7.7 describes how the\n   protocol can be extended with new attribute syntaxes.\n\
    \   The attribute syntaxes are specified in the following subsections,\n   where\
    \ the subsection title is the keyword name of the attribute\n   syntax inside\
    \ the single quotes.  In operation requests and\n   responses, each attribute\
    \ value MUST be represented as one of the\n   attribute syntaxes specified in\
    \ the subsection title for the\n   attribute.  In addition, the value of an attribute\
    \ in a response (but\n   not in a request) MAY be one of the \"out-of-band\" values\n\
    \   (Section 5.1.1) whose special encoding rules are defined in the\n   Encoding\
    \ and Transport document [RFC8010].\n   All attributes in a request MUST have\
    \ one or more values as defined\n   in Sections 5.2, 5.3, and 5.4.  All attributes\
    \ in a response MUST\n   have either (1) one or more values as defined in Sections\
    \ 5.2, 5.3,\n   and 5.4 or (2) a single \"out-of-band\" value.\n   Most attributes\
    \ are defined to have a single attribute syntax.\n   However, a few attributes\
    \ (e.g., \"job-sheet\", \"media\",\n   \"job-hold-until\") are defined to have\
    \ several attribute syntaxes,\n   depending on the value.  These multiple attribute\
    \ syntaxes are\n   separated by the \"|\" character in the subsection title to\
    \ indicate\n   the choice.  Since each value MUST be tagged as to its attribute\n\
    \   syntax in the protocol, a single-valued attribute instance can have\n   any\
    \ one of its attribute syntaxes and a multi-valued attribute\n   instance can\
    \ have a mixture of its defined attribute syntaxes.\n"
- title: 5.1.1.  Out-of-Band Values - 'unknown', 'unsupported', and 'no-value'
  contents:
  - "5.1.1.  Out-of-Band Values - 'unknown', 'unsupported', and 'no-value'\n   This\
    \ document defines three \"out-of-band\" values that are used in\n   place of\
    \ an attribute's defined syntax:\n   o  'unknown': The attribute is supported\
    \ by the IPP object, but the\n      value is unknown to the IPP object for some\
    \ reason.  This\n      out-of-band value is used for attributes that have an intrinsic,\n\
    \      physical value that cannot be determined by the IPP object at a\n     \
    \ given time, e.g., sheet count, geo-location, etc.\n   o  'unsupported': The\
    \ attribute is unsupported by the IPP object.\n      This value MUST be returned\
    \ only as the value of an attribute in\n      the Unsupported Attributes group.\n\
    \   o  'no-value': The attribute is supported by the Printer, but the\n      Administrator\
    \ has not yet configured a value.\n"
- title: 5.1.2.  'text'
  contents:
  - "5.1.2.  'text'\n   A 'text' attribute is an attribute whose value is a sequence\
    \ of zero\n   or more characters encoded in a maximum of 1023 ('MAX') octets.\
    \  MAX\n   is the maximum length for each value of any 'text' attribute.\n   However,\
    \ if an attribute will always contain values whose maximum\n   length is much\
    \ less than MAX, the definition of that attribute will\n   include a qualifier\
    \ that defines the maximum length for values of\n   that attribute.  For example,\
    \ the \"printer-location\" attribute is\n   specified as \"printer-location (text(127))\"\
    .  In this case, text\n   values for \"printer-location\" MUST NOT exceed 127\
    \ octets; if supplied\n   with a longer text string via some external interface\
    \ (other than the\n   protocol), implementations are free to truncate to this\
    \ shorter\n   length limitation.\n   In this document, all 'text' attributes are\
    \ defined using the 'text'\n   syntax.  However, 'text' is used only for brevity;\
    \ the formal\n   interpretation of 'text' is 'textWithoutLanguage | textWithLanguage'.\n\
    \   That is, for any attribute defined in this document using the 'text'\n   attribute\
    \ syntax, all IPP objects and Clients MUST support both the\n   'textWithoutLanguage'\
    \ and 'textWithLanguage' attribute syntaxes.\n   However, in actual usage and\
    \ protocol execution, IPP objects and\n   Clients accept and return only one of\
    \ the two syntaxes per attribute.\n   The syntax 'text' never appears \"on-the-wire\"\
    .\n   Both 'textWithoutLanguage' and 'textWithLanguage' are needed to\n   support\
    \ the real-world needs of interoperability between sites and\n   systems that\
    \ use different natural languages as the basis for human\n   communication.  Generally,\
    \ one natural language applies to all 'text'\n   attributes in a given request\
    \ or response.  The language is indicated\n   by the \"attributes-natural-language\"\
    \ operation attribute defined in\n   Section 4.1.4 or the \"attributes-natural-language\"\
    \ Job attribute\n   defined in Section 5.3.20, and there is no need to identify\
    \ the\n   natural language for each text string on a value-by-value basis.  In\n\
    \   these cases, the attribute syntax 'textWithoutLanguage' is used for\n   'text'\
    \ attributes.  In other cases, the Client needs to supply or the\n   Printer needs\
    \ to return a text value in a natural language that is\n   different from the\
    \ rest of the text values in the request or\n   response.  In these cases, the\
    \ Client or Printer uses the attribute\n   syntax 'textWithLanguage' for 'text'\
    \ attributes (this is the Natural\n   Language Override mechanism described in\
    \ Section 4.1.4).\n   The 'textWithoutLanguage' and 'textWithLanguage' attribute\
    \ syntaxes\n   are described in more detail in the following sections.\n"
- title: 5.1.2.1.  'textWithoutLanguage'
  contents:
  - "5.1.2.1.  'textWithoutLanguage'\n   The 'textWithoutLanguage' syntax indicates\
    \ a value that is a sequence\n   of zero or more characters encoded in a maximum\
    \ of 1023 (MAX) octets.\n   Text strings are encoded using the rules of some charset.\
    \  The\n   Printer MUST support the UTF-8 charset [RFC3629] and MAY support\n\
    \   additional charsets to represent 'text' values, provided that the\n   charsets\
    \ are registered with IANA [IANA-CS].  See Section 5.1.8 for\n   the definition\
    \ of the 'charset' attribute syntax, including\n   restricted semantics and examples\
    \ of charsets.\n"
- title: 5.1.2.2.  'textWithLanguage'
  contents:
  - "5.1.2.2.  'textWithLanguage'\n   The 'textWithLanguage' attribute syntax is a\
    \ compound attribute\n   syntax consisting of two parts: a 'textWithoutLanguage'\
    \ part encoded\n   in a maximum of 1023 (MAX) octets plus an additional\n   'naturalLanguage'\
    \ (see Section 5.1.9) part that overrides the natural\n   language in force. \
    \ The 'naturalLanguage' part explicitly identifies\n   the natural language that\
    \ applies to the text part of that value and\n   that value alone.  For any given\
    \ 'text' attribute, the\n   'textWithoutLanguage' part is limited to the maximum\
    \ length defined\n   for that 'text' attribute, and the 'naturalLanguage' part\
    \ is always\n   limited to 63 (additional) octets.  Using the 'textWithLanguage'\n\
    \   attribute syntax rather than the normal 'textWithoutLanguage' syntax\n   is\
    \ the so-called \"Natural Language Override mechanism\" and MUST be\n   supported\
    \ by all IPP objects and Clients.\n   If the attribute is multi-valued (1setOf\
    \ text), then the\n   'textWithLanguage' attribute syntax MUST be used to explicitly\n\
    \   specify each attribute value whose natural language needs to be\n   overridden.\
    \  Other values in a multi-valued 'text' attribute in a\n   request or a response\
    \ revert to the natural language of the operation\n   attribute.\n   In a Job\
    \ Creation request, the Printer MUST accept and store with the\n   Job any natural\
    \ language in the \"attributes-natural-language\"\n   operation attribute, whether\
    \ the Printer supports that natural\n   language or not.  Furthermore, the Printer\
    \ MUST accept and store any\n   'textWithLanguage' attribute value, whether the\
    \ Printer supports that\n   natural language or not.  These requirements are independent\
    \ of the\n   value of the \"ipp-attribute-fidelity\" operation attribute that\
    \ the\n   Client MAY supply.\n   Example: If the Client supplies the \"attributes-natural-language\"\
    \n   operation attribute with the value 'en' indicating English but the\n   value\
    \ of the \"job-name\" attribute is in French, the Client MUST use\n   the 'textWithLanguage'\
    \ attribute syntax with the following two\n   values:\n      'fr': Natural Language\
    \ Override indicating French\n      'Rapport Mensuel': the Job name in French\n\
    \   See the Encoding and Transport document [RFC8010] for the encoding of\n  \
    \ the two parts and a detailed example of the 'textWithLanguage'\n   attribute\
    \ syntax.\n"
- title: 5.1.3.  'name'
  contents:
  - "5.1.3.  'name'\n   This syntax type is used for user-friendly strings, such as\
    \ a Printer\n   name, that, for humans, are more meaningful than identifiers.\
    \  Names\n   are never translated from one natural language to another.  The\n\
    \   'name' attribute syntax is essentially the same as 'text', including\n   the\
    \ REQUIRED support of UTF-8, except that the sequence of characters\n   is limited\
    \ so that its encoded form MUST NOT exceed 255 (MAX) octets.\n   Also, like 'text',\
    \ 'name' is really an abbreviated notation for\n   either 'nameWithoutLanguage'\
    \ or 'nameWithLanguage'.  That is, all IPP\n   objects and Clients MUST support\
    \ both the 'nameWithoutLanguage' and\n   'nameWithLanguage' attribute syntaxes.\
    \  However, in actual usage and\n   protocol execution, IPP objects and Clients\
    \ accept and return only\n   one of the two syntaxes per attribute.  The syntax\
    \ 'name' never\n   appears \"on-the-wire\".\n   Only the 'text' and 'name' attribute\
    \ syntaxes permit the Natural\n   Language Override mechanism.\n   Some attributes\
    \ are defined as 'type2 keyword | name'.  These\n   attributes support values\
    \ that are either type2 keywords or names.\n   This dual-syntax mechanism enables\
    \ a site Administrator to extend\n   these attributes to legally include values\
    \ that are locally defined\n   by the site Administrator.  Such names are not\
    \ registered with IANA.\n"
- title: 5.1.3.1.  'nameWithoutLanguage'
  contents:
  - "5.1.3.1.  'nameWithoutLanguage'\n   The 'nameWithoutLanguage' syntax indicates\
    \ a value that is a sequence\n   of zero or more characters encoded in a maximum\
    \ of 255 (MAX) octets.\n"
- title: 5.1.3.2.  'nameWithLanguage'
  contents:
  - "5.1.3.2.  'nameWithLanguage'\n   The 'nameWithLanguage' attribute syntax is a\
    \ compound attribute\n   syntax consisting of two parts: a 'nameWithoutLanguage'\
    \ (see\n   Section 5.1.3.1) part plus an additional 'naturalLanguage' (see\n \
    \  Section 5.1.9) part that overrides the natural language in force.\n   The 'naturalLanguage'\
    \ part explicitly identifies the natural language\n   that applies to that name\
    \ value and that name value alone.  For any\n   given 'name' attribute, the 'nameWithoutLanguage'\
    \ part is limited to\n   the maximum length defined for that 'name' attribute,\
    \ and the\n   'naturalLanguage' part is always limited to 63 (additional) octets.\n\
    \   Using the 'nameWithLanguage' attribute syntax rather than the normal\n   'nameWithoutLanguage'\
    \ syntax is the Natural Language Override\n   mechanism and MUST be supported\
    \ by all IPP objects and Clients.\n   The 'nameWithLanguage' attribute syntax\
    \ behaves the same as the\n   'textWithLanguage' syntax.  If a name is in a language\
    \ that is\n   different than the rest of the object or operation, then this\n\
    \   'nameWithLanguage' syntax is used rather than the generic\n   'nameWithoutLanguage'\
    \ syntax.\n   If the attribute is multi-valued (1setOf name), then the\n   'nameWithLanguage'\
    \ attribute syntax MUST be used to explicitly\n   specify each attribute value\
    \ whose natural language needs to be\n   overridden.  Other values in a multi-valued\
    \ 'name' attribute in a\n   request or a response revert to the natural language\
    \ of the operation\n   attribute.\n   In a Job Creation request, the Printer MUST\
    \ accept and store with the\n   Job any natural language in the \"attributes-natural-language\"\
    \n   operation attribute, whether the Printer supports that natural\n   language\
    \ or not.  Furthermore, the Printer MUST accept and store any\n   'nameWithLanguage'\
    \ attribute value, whether the Printer supports that\n   natural language or not.\
    \  These requirements are independent of the\n   value of the \"ipp-attribute-fidelity\"\
    \ operation attribute that the\n   Client MAY supply.\n   Example: If the Client\
    \ supplies the \"attributes-natural-language\"\n   operation attribute with the\
    \ value 'en' indicating English but the\n   \"printer-name\" attribute is in German,\
    \ the Client MUST use the\n   'nameWithLanguage' attribute syntax as follows:\n\
    \      'de': Natural Language Override indicating German\n      'Farbdrucker':\
    \ the Printer name in German\n   See the Encoding and Transport document [RFC8010]\
    \ for the encoding of\n   the two parts and a detailed example of the 'nameWithLanguage'\n\
    \   attribute syntax.\n"
- title: 5.1.3.3.  Matching 'name' Attribute Values
  contents:
  - "5.1.3.3.  Matching 'name' Attribute Values\n   For purposes of matching two 'name'\
    \ attribute values for equality,\n   such as in Job validation (where a Client-supplied\
    \ value for\n   attribute \"xxx\" is checked to see if the value is among the\
    \ values of\n   the Printer's corresponding \"xxx-supported\" attribute), the\
    \ following\n   match rules apply:\n   1.  'keyword' values never match 'name'\
    \ values.\n   2.  'name' ('nameWithoutLanguage' and 'nameWithLanguage') values\n\
    \       match if (1) the name parts match and (2) the Associated\n       Natural\
    \ Language parts (see Section 4.1.4.1) match.  The matching\n       rules are\
    \ as follows:\n       2a.  The name parts match if the two names are identical\n\
    \            character by character, except that it is RECOMMENDED that\n    \
    \        case be ignored as defined in \"i;unicode-casemap - Simple\n        \
    \    Unicode Collation Algorithm\" [RFC5051].  For example,\n            'Ajax-letter-head-white'\
    \ MUST match 'Ajax-letter-head-white'\n            and SHOULD match 'ajax-letter-head-white'\
    \ and\n            'AJAX-LETTER-HEAD-WHITE'.\n       2b.  The Associated Natural\
    \ Language parts match if the shorter\n            of the two meets the syntactic\
    \ requirements defined in\n            Section 2.1 of RFC 5646 [RFC5646] and matches\
    \ (byte for\n            byte, since IPP language tags are lowercase) with the\n\
    \            longer.  For example, 'en' matches 'en', 'en-us', and\n         \
    \   'en-gb' but matches neither 'fr' nor 'e'.\n"
- title: 5.1.4.  'keyword'
  contents:
  - "5.1.4.  'keyword'\n   The 'keyword' attribute syntax is a sequence of characters,\
    \ of length\n   1 to 255, containing only the US-ASCII [RFC20] encoded values\
    \ for\n   lowercase letters (\"a\"-\"z\"), digits (\"0\"-\"9\"), hyphen (\"-\"\
    ), dot\n   (\".\"), and underscore (\"_\").  The first character MUST be a lowercase\n\
    \   letter.  Furthermore, keywords MUST be in US English.\n   This syntax type\
    \ is used for enumerating semantic identifiers of\n   entities in the abstract\
    \ protocol, i.e., entities identified in this\n   document.  Keywords are used\
    \ as attribute names or values of\n   attributes.  Unlike 'text' and 'name' attribute\
    \ values, 'keyword'\n   values MUST NOT use the Natural Language Override mechanism,\
    \ since\n   they MUST always be US-ASCII and US English.\n   Keywords are for\
    \ use in the protocol.  A user interface will likely\n   provide a mapping between\
    \ protocol keywords and displayable\n   user-friendly words and phrases that are\
    \ localized to the natural\n   language of the user.  While the keywords specified\
    \ in this document\n   MAY be displayed to users whose natural language is US\
    \ English, they\n   MAY be mapped to other US English words for US English users,\
    \ since\n   the user interface is outside the scope of this document.\n   In the\
    \ definition for each attribute of this syntax type, the full\n   set of 'keyword'\
    \ values being defined for that attribute is listed.\n   The IANA IPP registry\
    \ will always contain the complete and current\n   list of 'keyword' values for\
    \ the attribute.\n   When a keyword is used to represent an attribute (its name),\
    \ it MUST\n   be unique within the full scope of all IPP objects and attributes.\n\
    \   When a keyword is used to represent a value of an attribute, it MUST\n   be\
    \ unique just within the scope of that attribute.  That is, the same\n   keyword\
    \ MUST NOT be used for two different values within the same\n   attribute to mean\
    \ two different semantic ideas.  However, the same\n   keyword MAY be used across\
    \ two or more attributes, representing\n   different semantic ideas for each attribute.\
    \  Section 7.3 describes\n   how the protocol can be extended with new 'keyword'\
    \ values.  Examples\n   of attribute name keywords are:\n      \"job-name\"\n\
    \      \"attributes-charset\"\n   Note: This document uses \"type1\" and \"type2\"\
    \ prefixes to the\n   \"keyword\" basic syntax to indicate different levels of\
    \ review for\n   extensions (see Section 7.3).\n"
- title: 5.1.5.  'enum'
  contents:
  - "5.1.5.  'enum'\n   The 'enum' attribute syntax is an enumerated integer value\
    \ that is in\n   the range from 1 to 2**31 - 1 (MAX).  Each value has an associated\n\
    \   'keyword' name.  In the definition for each attribute of this syntax\n   type,\
    \ the full set of possible values for that attribute is listed.\n   This syntax\
    \ type is used for attributes for which there are enum\n   values assigned by\
    \ other standards, such as SNMP MIBs.  A number of\n   attribute enum values in\
    \ this document are also used for\n   corresponding attributes in other standards\
    \ [RFC3805].  This syntax\n   type is not used for attributes to which the Administrator\
    \ can assign\n   values.  Section 7.4 describes how the protocol can be extended\
    \ with\n   new enum values.\n   Enum values are for use in the protocol.  A user\
    \ interface will\n   provide a mapping between protocol enum values and displayable\n\
    \   user-friendly words and phrases that are localized to the natural\n   language\
    \ of the user.  While the enum symbols specified in this\n   document MAY be displayed\
    \ to users whose natural language is\n   US English, they MAY be mapped to other\
    \ US English words for\n   US English users, since the user interface is outside\
    \ the scope of\n   this document.\n   Note: Some SNMP MIBs use '2' for 'unknown',\
    \ which corresponds to the\n   IPP \"out-of-band\" value 'unknown'.  See the description\
    \ of the\n   \"out-of-band\" values at the beginning of Section 5.1.  Therefore,\n\
    \   attributes of type 'enum' typically start at '3'.\n   Note: This document\
    \ uses \"type1\" and \"type2\" prefixes to the \"enum\"\n   basic syntax to indicate\
    \ different levels of review for extensions\n   (see Section 7.4).\n"
- title: 5.1.6.  'uri'
  contents:
  - "5.1.6.  'uri'\n   The 'uri' attribute syntax is any valid Uniform Resource Identifier\n\
    \   (URI) [RFC3986].  Most often, URIs are simply Uniform Resource\n   Locators\
    \ (URLs).  The maximum length of URIs used as values of IPP\n   attributes is\
    \ 1023 octets.  Although most other IPP attribute syntax\n   types allow for only\
    \ lowercase values, this attribute syntax type\n   conforms to the case-sensitive\
    \ and case-insensitive rules specified\n   in [RFC3986].  See also [RFC3196] for\
    \ a discussion of case in URIs.\n"
- title: 5.1.7.  'uriScheme'
  contents:
  - "5.1.7.  'uriScheme'\n   The 'uriScheme' attribute syntax is a sequence of characters\n\
    \   representing a URI scheme according to RFC 3986 [RFC3986].  Though\n   RFC\
    \ 3986 requires that the values be case insensitive, IPP requires\n   all lowercase\
    \ values in IPP attributes, to simplify comparing by IPP\n   Clients and Printers.\n\
    \   Standard values for this syntax type include the following keywords:\n   o\
    \  'ipp': for IPP schemed URIs, e.g., \"ipp://example.com/ipp/...\"\n      [RFC3510]\n\
    \   o  'ipps': for IPPS schemed URIs, e.g., \"ipps://example.com/ipp/...\"\n \
    \     [RFC7472]\n   o  'http': for HTTP schemed URIs, e.g., \"http://example.com/path/to/\n\
    \      filename\" [RFC7230]\n   o  'https': for HTTPS schemed URIs, e.g.,\n  \
    \    \"https://example.com/path/to/filename\" [RFC7230]\n   o  'ftp': for FTP\
    \ schemed URIs, e.g., \"ftp://example.com/path/to/\n      filename\" [RFC1738]\n\
    \   o  'mailto': for SMTP schemed URIs, e.g., \"mailto:user@example.com\"\n  \
    \    [RFC6068]\n   o  'file': for file schemed URIs, e.g., \"file:///path/to/filename\"\
    \n      [RFC1738]\n   o  'urn': for Uniform Resource Name schemed URIs, e.g.,\n\
    \      \"urn:uuid:01234567-89ab-cdef-fedc-ba9876543210\" [RFC4122]\n   A Printer\
    \ MAY support any URI 'scheme' that has been registered with\n   IANA [IANA-MT].\
    \  The maximum length of URI 'scheme' values used to\n   represent IPP attribute\
    \ values is 63 octets.\n"
- title: 5.1.8.  'charset'
  contents:
  - "5.1.8.  'charset'\n   The 'charset' attribute syntax is a standard identifier\
    \ for a\n   charset.  A charset is a coded character set and encoding scheme.\n\
    \   Charsets are used for labeling certain Document contents, 'text'\n   attribute\
    \ values, and 'name' attribute values.  The syntax and\n   semantics of this attribute\
    \ syntax are specified in RFC 2046\n   [RFC2046] and contained in the IANA \"\
    Character Sets\" registry\n   [IANA-CS] according to the IANA procedures [RFC2978].\
    \  Though\n   RFC 2046 requires that the values be case-insensitive US-ASCII\n\
    \   [RFC20], IPP requires all lowercase values in IPP attributes, to\n   simplify\
    \ comparing by IPP Clients and Printers.  When a character set\n   in the IANA\
    \ registry has more than one name (alias), the name labeled\n   as \"(preferred\
    \ MIME name)\", if present, MUST be used.\n   The maximum length of 'charset'\
    \ values used to represent IPP\n   attribute values is 63 octets.\n   Some examples\
    \ are:\n   o  'utf-8': ISO 10646 Universal Multiple-Octet Coded Character Set\n\
    \      (UCS) [ISO10646] represented as the UTF-8 [RFC3629] transfer\n      encoding\
    \ scheme in which US-ASCII [RFC20] is a subset charset.\n   o  'us-ascii': 7-bit\
    \ American Standard Code for Information\n      Interchange (ASCII) [RFC20].\n\
    \   o  'iso-8859-1': 8-bit One-Byte Coded Character Set, Latin Alphabet\n    \
    \  No. 1 [ISO8859-1].  That standard defines a coded character set\n      that\
    \ is used by Latin languages in the Western Hemisphere and\n      Western Europe.\
    \  US-ASCII is a subset charset.\n   Some attribute descriptions MAY place additional\
    \ requirements on\n   charset values that can be used, such as REQUIRED values\
    \ that MUST be\n   supported or additional restrictions, such as requiring that\
    \ the\n   charset have US-ASCII as a subset charset.\n"
- title: 5.1.9.  'naturalLanguage'
  contents:
  - "5.1.9.  'naturalLanguage'\n   The 'naturalLanguage' attribute syntax is a standard\
    \ identifier for a\n   natural language and, optionally, a country or region.\
    \  The values\n   for this syntax type are defined by RFC 5646 [RFC5646].  Though\n\
    \   RFC 5646 requires that the values be case-insensitive US-ASCII, IPP\n   requires\
    \ all lowercase values in IPP attributes, to simplify\n   comparing by IPP Clients\
    \ and Printers.  Examples include:\n   o  'en': for English\n   o  'en-us': for\
    \ US English\n   o  'fr': for French\n   o  'de': for German\n   The maximum length\
    \ of 'naturalLanguage' values used to represent IPP\n   attribute values is 63\
    \ octets.\n   Note: While any standard natural language identifier defined in\n\
    \   RFC 5646 can be used, Clients typically only support a subset of\n   these\
    \ identifiers.  When comparing two identifiers or performing\n   lookups, Printers\
    \ SHOULD be prepared to match legacy identifiers with\n   their corresponding\
    \ modern equivalents and vice versa.\n"
- title: 5.1.10.  'mimeMediaType'
  contents:
  - "5.1.10.  'mimeMediaType'\n   The 'mimeMediaType' attribute syntax is the Internet\
    \ media type\n   (sometimes called \"MIME type\") as defined by RFC 2046 [RFC2046]\
    \ and\n   registered according to the procedures of RFC 6838 [RFC6838] for\n \
    \  identifying a Document format.  The value MAY include a charset\n   parameter,\
    \ or some other parameter, depending on the specification of\n   the media type\
    \ in the IANA \"Media Types\" registry [IANA-MT].\n   Although most other IPP\
    \ syntax types allow for only lowercase values,\n   this syntax type allows for\
    \ mixed-case values that are\n   case insensitive.\n   Examples are:\n   o  'text/html':\
    \ An HTML Document\n   o  'text/plain': A plain text Document in US-ASCII (RFC\
    \ 2046\n      indicates that in the absence of the charset parameter MUST mean\n\
    \      US-ASCII rather than simply unspecified) [RFC2046]\n   o  'text/plain;\
    \ charset = US-ASCII': A plain text Document in\n      US-ASCII\n   o  'text/plain;\
    \ charset = ISO-8859-1': A plain text Document in\n      ISO 8859-1 (Latin 1)\
    \ [ISO8859-1]\n   o  'text/plain; charset = utf-8': A plain text Document in ISO\
    \ 10646\n      represented as UTF-8 [RFC3629]\n   o  'application/postscript':\
    \ A PostScript Document [RFC2046]\n   o  'application/vnd.hp-PCL': A PCL Document\
    \ [IANA-MT] (charset escape\n      sequence embedded in the Document data)\n \
    \  o  'application/pdf': Portable Document Format [ISO32000]\n   o  'application/octet-stream':\
    \ Auto-sense - see Section 5.1.10.1\n   The maximum length of a 'mimeMediaType'\
    \ value to represent IPP\n   attribute values is 255 octets.\n"
- title: 5.1.10.1.  'application/octet-stream' - Auto-Sensing the Document Format
  contents:
  - "5.1.10.1.  'application/octet-stream' - Auto-Sensing the Document Format\n  \
    \ One special type is 'application/octet-stream'.  If the Printer\n   supports\
    \ this value, the Printer MUST be capable of auto-sensing the\n   format of the\
    \ Document data using an implementation-dependent method\n   that examines some\
    \ number of octets of the Document data, either as\n   part of the Job Creation\
    \ request and/or at Document processing time.\n   During auto-sensing, a Printer\
    \ can determine that the Document data\n   has a format that the Printer doesn't\
    \ recognize.  If the Printer\n   determines this problem before returning an operation\
    \ response, it\n   rejects the request and returns the\n   'client-error-document-format-not-supported'\
    \ status-code.  If the\n   Printer determines this problem after accepting the\
    \ request and\n   returning an operation response with one of the successful\n\
    \   status-code values, the Printer adds the\n   'unsupported-document-format'\
    \ value to the Job's \"job-state-reasons\"\n   attribute.\n   If the Printer's\
    \ default value attribute \"document-format-default\" is\n   set to 'application/octet-stream',\
    \ the Printer not only supports\n   auto-sensing of the Document format but will\
    \ depend on the result of\n   applying its auto-sensing when the Client does not\
    \ supply the\n   \"document-format\" attribute.  If the Client supplies a Document\n\
    \   format value, the Printer MUST rely on the supplied attribute, rather\n  \
    \ than trust its auto-sensing algorithm.  To summarize:\n   1.  If the Client\
    \ does not supply a Document format value, the\n       Printer MUST rely on its\
    \ default value setting (which can be\n       'application/octet-stream' indicating\
    \ an auto-sensing mechanism).\n   2.  If the Client supplies a value other than\n\
    \       'application/octet-stream', the Client is supplying valid\n       information\
    \ about the format of the Document data and the Printer\n       MUST trust the\
    \ Client-supplied value more than the outcome of\n       applying an automatic\
    \ format detection mechanism.  For example,\n       the Client can request the\
    \ printing of a PostScript file as a\n       'text/plain' Document.  The Printer\
    \ MUST print a text\n       representation of the PostScript commands rather than\
    \ interpret\n       the stream of PostScript commands and print the result.\n\
    \   3.  If the Client supplies a value of 'application/octet-stream', the\n  \
    \     Client is indicating that the Printer MUST use its auto-sensing\n      \
    \ mechanism on the Client-supplied Document data whether\n       auto-sensing\
    \ is the Printer's default or not.\n   Note: Since the auto-sensing algorithm\
    \ is probabilistic, if the\n   Client requests both auto-sensing (\"document-format\"\
    \ set to\n   'application/octet-stream') and true fidelity\n   (\"ipp-attribute-fidelity\"\
    \ set to 'true'), the Printer might not be\n   able to guarantee exactly what\
    \ the End User intended (the\n   auto-sensing algorithm might mistake one Document\
    \ format for\n   another), but it is able to guarantee that its auto-sensing mechanism\n\
    \   will be used.\n"
- title: 5.1.11.  'octetString'
  contents:
  - "5.1.11.  'octetString'\n   The 'octetString' attribute syntax is a sequence of\
    \ octets encoded in\n   a maximum of 1023 octets that is indicated in syntax definitions\n\
    \   using the notation 'octetString(MAX)'.  This syntax type is used for\n   opaque\
    \ data.\n"
- title: 5.1.12.  'boolean'
  contents:
  - "5.1.12.  'boolean'\n   The 'boolean' attribute syntax has only two values: 'true'\
    \ and\n   'false'.\n"
- title: 5.1.13.  'integer'
  contents:
  - "5.1.13.  'integer'\n   The 'integer' attribute syntax is an integer value that\
    \ is in the\n   range from -2**31 (MIN) to 2**31 - 1 (MAX).  Each individual\n\
    \   attribute can specify the range constraint explicitly if the range is\n  \
    \ different from the full range of possible integer values -- for\n   example,\
    \ job-priority (integer(1:100)) for the \"job-priority\"\n   attribute, as shown\
    \ in the title of Section 5.2.1.  However, the\n   enforcement of that additional\
    \ constraint is up to the IPP objects,\n   not the protocol.\n"
- title: 5.1.14.  'rangeOfInteger'
  contents:
  - "5.1.14.  'rangeOfInteger'\n   The 'rangeOfInteger' attribute syntax is an ordered\
    \ pair of integers\n   that defines an inclusive range of integer values.  The\
    \ first integer\n   specifies the lower bound, and the second specifies the upper\
    \ bound.\n   If a range constraint is specified in the attribute definition, i.e.,\n\
    \   'rangeOfInteger(X:Y)' indicating X as a minimum value and Y as a\n   maximum\
    \ value, then the constraint applies to both integers.\n"
- title: 5.1.15.  'dateTime'
  contents:
  - "5.1.15.  'dateTime'\n   The 'dateTime' attribute syntax is a standard, fixed-length,\
    \ 11-octet\n   representation of the \"DateAndTime\" syntax as defined in RFC\
    \ 2579\n   [RFC2579].  RFC 2579 also identifies an 8-octet representation of a\n\
    \   \"DateAndTime\" value, but IPP objects MUST use the 11-octet\n   representation.\
    \  A user interface will provide a mapping between\n   protocol dateTime values\
    \ and displayable user-friendly words or\n   presentation values and phrases that\
    \ are localized to the natural\n   language and date format of the user, including\
    \ time zone.\n"
- title: 5.1.16.  'resolution'
  contents:
  - "5.1.16.  'resolution'\n   The 'resolution' attribute syntax specifies a two-dimensional\n\
    \   resolution in the indicated units.  It consists of three values: a\n   cross-feed\
    \ direction resolution (positive integer value), a feed\n   direction resolution\
    \ (positive integer value), and a units value.\n   The semantics of these three\
    \ components are taken from the suggested\n   values in the Printer MIB [RFC3805].\
    \  That is, the cross-feed\n   direction resolution component is the same as the\n\
    \   prtMarkerAddressabilityXFeedDir object in the Printer MIB, the feed\n   direction\
    \ resolution component is the same as the\n   prtMarkerAddressabilityFeedDir in\
    \ the Printer MIB, and the units\n   component is the same as the prtMarkerAddressabilityUnit\
    \ object in\n   the Printer MIB (namely, '3' indicates dots per inch and '4'\n\
    \   indicates dots per centimeter).  All three values MUST be present\n   even\
    \ if the first two values are the same.  For example, '300',\n   '600', '3' indicates\
    \ a 300-dpi cross-feed direction resolution and a\n   600-dpi feed direction resolution,\
    \ since a '3' indicates dots per\n   inch (dpi).\n"
- title: 5.1.17.  'collection'
  contents:
  - "5.1.17.  'collection'\n   The 'collection' attribute syntax is a container holding\
    \ one or more\n   named values (i.e., attributes), which are called \"member\n\
    \   attributes\".  Each 'collection' attribute definition Document lists\n   the\
    \ mandatory and optional member attributes of each collection\n   value.  A collection\
    \ value is similar to an IPP attribute group in a\n   request or a response, such\
    \ as the Operation Attributes group -- they\n   both consist of a set of attributes.\
    \  Collections can also be nested,\n   i.e., a collection in a collection.\n \
    \  A collection value consists of three separate components:\n   o  A 'begCollection'\
    \ value with an optional octet string value\n      starting the collection,\n\
    \   o  Zero or more member attributes defined using a series of unnamed\n    \
    \  values starting with a 'memberAttrName' value that specifies the\n      member\
    \ attribute name, and\n   o  An 'endCollection' value with an optional name plus\
    \ octet string\n      value finishing the collection.\n"
- title: 5.1.18.  '1setOf X'
  contents:
  - "5.1.18.  '1setOf X'\n   The '1setOf X' attribute syntax is one or more values\
    \ of attribute\n   syntax type X.  This syntax type is used for multi-valued attributes.\n\
    \   The syntax type is called '1setOf' rather than just 'setOf' as a\n   reminder\
    \ that the set of values MUST NOT be empty (i.e., a set of\n   size 0).  Sets\
    \ are normally unordered; however, each attribute\n   description of this type\
    \ can specify that the values MUST be in a\n   certain order for that attribute.\n"
- title: 5.2.  Job Template Attributes
  contents:
  - "5.2.  Job Template Attributes\n   Job Template attributes describe Job processing\
    \ intent.  Clients MAY\n   supply (in Job Creation requests) and Printers SHOULD\
    \ support Job\n   Template attributes.  See Section 2.3.11 for a description of\
    \ support\n   for OPTIONAL attributes.\n   Job Template attributes conform to\
    \ the following rules.  For each Job\n   Template attribute called \"xxx\":\n\
    \   1.  If the Printer supports \"xxx\", then it MUST support both an\n      \
    \ \"xxx-default\" attribute (unless there is a \"No\" in Table 8 below)\n    \
    \   and an \"xxx-supported\" attribute.  If the Printer doesn't support\n    \
    \   \"xxx\", then it MUST support neither an \"xxx-default\" attribute\n     \
    \  nor an \"xxx-supported\" attribute, and it MUST treat an attribute\n      \
    \ \"xxx\" supplied by a Client as unsupported.  An attribute \"xxx\"\n       can\
    \ be supported for some Document formats and not supported for\n       other Document\
    \ formats.  For example, it is expected that a\n       Printer would only support\
    \ \"orientation-requested\" for some\n       Document formats (such as 'text/plain'\
    \ or 'text/html') but not\n       others (such as 'application/postscript').\n\
    \   2.  Clients MAY supply \"xxx\" in a Job Creation request.  If \"xxx\" is\n\
    \       supplied, the Client is indicating a desired Job processing\n       behavior\
    \ for this Job.  When \"xxx\" is not supplied, the Client is\n       indicating\
    \ that the Printer apply its default Job processing\n       behavior at Job processing\
    \ time if the Document content does not\n       contain an embedded instruction\
    \ indicating an xxx-related\n       behavior.\n       Since an Administrator MAY\
    \ change the default value attribute\n       after a Job has been submitted but\
    \ before it has been processed,\n       the default value used by the Printer\
    \ at Job processing time can\n       be different than the default value in effect\
    \ at Job submission\n       time.\n   3.  The \"xxx-supported\" attribute is a\
    \ Printer attribute that\n       describes which Job processing behaviors are\
    \ supported by that\n       Printer.  A Client can query the Printer to find out\
    \ what\n       xxx-related behaviors are supported by inspecting the returned\n\
    \       values of the \"xxx-supported\" attribute.\n       Note: The \"xxx\" in\
    \ each \"xxx-supported\" attribute name is\n       singular, even though an \"\
    xxx-supported\" attribute usually has\n       more than one value, such as \"\
    print-quality-supported\", unless\n       the \"xxx\" Job Template attribute is\
    \ plural, such as \"finishings\"\n       or \"sides\".  In such cases, the \"\
    xxx-supported\" attribute names\n       are \"finishings-supported\" and \"sides-supported\"\
    .\n   4.  The \"xxx-default\" default value attribute describes what will be\n\
    \       done at Job processing time when no other Job processing\n       information\
    \ is supplied by the Client (either explicitly as an\n       IPP attribute in\
    \ the Job Creation request or implicitly as an\n       embedded instruction within\
    \ the Document data).\n   If an application wishes to present an End User with\
    \ a list of\n   supported values from which to choose, the application SHOULD\
    \ query\n   the Printer for its supported value attributes.  The application\n\
    \   SHOULD also query the default value attributes.  If the application\n   then\
    \ limits selectable values to only those values that are\n   supported, the application\
    \ can guarantee that the values supplied by\n   the Client in the Job Creation\
    \ request all fall within the set of\n   supported values at the Printer.  When\
    \ querying the Printer, the\n   Client MAY enumerate each attribute by name in\
    \ the\n   Get-Printer-Attributes request, or the Client MAY just name the\n  \
    \ \"job-template\" group in order to get the complete set of supported\n   attributes\
    \ (both supported and default attributes).\n   The \"finishings\" attribute is\
    \ an example of a Job Template attribute.\n   It can take on a set of values such\
    \ as '4' ('staple'), '5' ('punch'),\n   and/or '6' ('cover'); see Table 10 in\
    \ Section 5.2.6.  A Client can\n   query the Printer for the \"finishings-supported\"\
    \ attribute and the\n   \"finishings-default\" attribute.  The supported attribute\
    \ contains a\n   set of supported values.  The default value attribute contains\
    \ the\n   finishing value(s) that will be used for a new Job if the Client does\n\
    \   not supply a \"finishings\" attribute in the Job Creation request and\n  \
    \ the Document data does not contain any corresponding finishing\n   instructions.\
    \  If the Client does supply the \"finishings\" attribute\n   in the Job Creation\
    \ request, the Printer validates the value or\n   values to make sure that they\
    \ are a subset of the supported values\n   identified in the Printer's \"finishings-supported\"\
    \ attribute.  See\n   Section 4.1.7.\n   Table 8 below summarizes the names and\
    \ relationships for all Job\n   Template attributes.  The first column of the\
    \ table (labeled \"Job\n   Attribute\") shows the name and syntax for each Job\
    \ Template attribute\n   in the Job.  These are the attributes that can optionally\
    \ be supplied\n   by the Client in a Job Creation request.  The last two columns\n\
    \   (labeled \"Printer: Default Value Attribute\" and \"Printer: \"Supported\n\
    \   Values\" Attribute\") show the name and syntax for each Job Template\n   attribute\
    \ in the Printer (the default value attributes and the\n   \"supported values\"\
    \ attributes).  A \"No\" in the table means the\n   Printer MUST NOT support the\
    \ attribute (that is, the attribute is\n   simply not applicable).  For brevity\
    \ in the table, the 'text' and\n   'name' entries do not show the maximum length\
    \ for each attribute.\n   +------------------+----------------------+-------------------------+\n\
    \   | Job Attribute    | Printer: Default     | Printer: \"Supported     |\n \
    \  |                  | Value Attribute      | Values\" Attribute       |\n  \
    \ +------------------+----------------------+-------------------------+\n   |\
    \ job-priority     | job-priority-default | job-priority-supported  |\n   | (integer\
    \ 1:100)  | (integer 1:100)      | (integer 1:100)         |\n   +------------------+----------------------+-------------------------+\n\
    \   | job-hold-until   | job-hold-until-      | job-hold-until-         |\n  \
    \ | (type2 keyword | | default (type2       | supported (1setOf       |\n   |\
    \ name)            | keyword | name)      | (type2 keyword | name)) |\n   +------------------+----------------------+-------------------------+\n\
    \   | job-sheets       | job-sheets-default   | job-sheets-supported    |\n  \
    \ | (type2 keyword | | (type2 keyword |     | (1setOf (type2 keyword  |\n   |\
    \ name)            | name)                | | name))                |\n   +------------------+----------------------+-------------------------+\n\
    \   | multiple-        | multiple-document-   | multiple-document-      |\n  \
    \ | document-        | handling-default     | handling-supported      |\n   |\
    \ handling (type2  | (type2 keyword)      | (1setOf type2 keyword)  |\n   | keyword)\
    \         |                      |                         |\n   +------------------+----------------------+-------------------------+\n\
    \   | copies           | copies-default       | copies-supported        |\n  \
    \ | (integer(1:MAX)) | (integer(1:MAX))     | (rangeOfInteger(1:MAX)) |\n   +------------------+----------------------+-------------------------+\n\
    \   | finishings       | finishings-default   | finishings-supported    |\n  \
    \ | (1setOf type2    | (1setOf type2 enum)  | (1setOf type2 enum)     |\n   |\
    \ enum)            |                      |                         |\n   +------------------+----------------------+-------------------------+\n\
    \   | page-ranges      | No                   | page-ranges-supported   |\n  \
    \ | (1setOf          |                      | (boolean)               |\n   |\
    \ rangeOfInteger   |                      |                         |\n   | (1:MAX))\
    \         |                      |                         |\n   +------------------+----------------------+-------------------------+\n\
    \   | sides (type2     | sides-default (type2 | sides-supported (1setOf |\n  \
    \ | keyword)         | keyword)             | type2 keyword)          |\n   +------------------+----------------------+-------------------------+\n\
    \   | number-up        | number-up-default    | number-up-supported     |\n  \
    \ | (integer(1:MAX)) | (integer(1:MAX))     | (1setOf                 |\n   |\
    \                  |                      | (integer(1:MAX) |       |\n   |  \
    \                |                      | rangeOfInteger(1:MAX))) |\n   +------------------+----------------------+-------------------------+\n\
    \   | orientation-     | orientation-         | orientation-requested-  |\n  \
    \ | requested (type2 | requested-default    | supported (1setOf type2 |\n   |\
    \ enum)            | (type2 enum)         | enum)                   |\n   +------------------+----------------------+-------------------------+\n\
    \   | media (type2     | media-default (type2 | media-supported (1setOf |\n  \
    \ | keyword | name)  | keyword | name)      | (type2 keyword | name)) |\n   |\
    \                  |                      | media-ready (1setOf     |\n   |  \
    \                |                      | (type2 keyword | name)) |\n   +------------------+----------------------+-------------------------+\n\
    \   | printer-         | printer-resolution-  | printer-resolution-     |\n  \
    \ | resolution       | default (resolution) | supported (1setOf       |\n   |\
    \ (resolution)     |                      | resolution)             |\n   +------------------+----------------------+-------------------------+\n\
    \   | print-quality    | print-quality-       | print-quality-supported |\n  \
    \ | (type2 enum)     | default (type2 enum) | (1setOf type2 enum)     |\n   +------------------+----------------------+-------------------------+\n\
    \                     Table 8: Job Template Attributes\n"
- title: 5.2.1.  job-priority (integer(1:100))
  contents:
  - "5.2.1.  job-priority (integer(1:100))\n   This attribute specifies a priority\
    \ for scheduling the Job.  A higher\n   value specifies a higher priority.  The\
    \ value 1 indicates the lowest\n   possible priority.  The value 100 indicates\
    \ the highest possible\n   priority.  Among those Jobs that are ready to print,\
    \ a Printer MUST\n   print all Jobs with a priority value of n before printing\
    \ those with\n   a priority value of n - 1 for all n.\n   If the Printer supports\
    \ this attribute, it MUST always support the\n   full range from 1 to 100.  No\
    \ administrative restrictions are\n   permitted.  This way, an End User can always\
    \ make full use of the\n   entire range with any Printer.  If privileged Jobs\
    \ are implemented\n   outside IPP, they MUST have priorities higher than 100,\
    \ rather than\n   restricting the range available to End Users.\n   If the Client\
    \ does not supply this attribute and this attribute is\n   supported by the Printer,\
    \ the Printer MUST use the value of the\n   Printer's \"job-priority-default\"\
    \ attribute at Job submission time\n   (unlike most Job Template attributes that\
    \ are used if necessary at\n   Job processing time).\n   The syntax for the \"\
    job-priority-supported\" attribute is also\n   integer(1:100).  This single integer\
    \ value indicates the number of\n   priority levels supported.  The Printer MUST\
    \ take the value supplied\n   by the Client and map it to the closest integer\
    \ in a sequence of\n   n integer values that are evenly distributed over the range\
    \ from\n   1 to 100 using the formula:\n      roundToNearestInt((100x + 50) /\
    \ n)\n   where n is the value of \"job-priority-supported\" and x ranges from\n\
    \   0 through (n - 1).\n   For example, if n = 1, the sequence of values is 50;\
    \ if n = 2, the\n   sequence of values is 25 and 75; if n = 3, the sequence of\
    \ values is\n   17, 50, and 83; if n = 10, the sequence of values is 5, 15, 25,\
    \ 35,\n   45, 55, 65, 75, 85, and 95; if n = 100, the sequence of values is\n\
    \   1, 2, 3, ... 100.\n   Table 9 shows how a Printer maps Client-supplied \"\
    job-priority\"\n   values for example values of n.\n                 +--------------+-------+-------+--------+\n\
    \                 | job-priority | n = 1 | n = 2 | n = 10 |\n                \
    \ +--------------+-------+-------+--------+\n                 | 1            |\
    \ 50    | 17    | 5      |\n                 +--------------+-------+-------+--------+\n\
    \                 | 10           | 50    | 17    | 5      |\n                \
    \ +--------------+-------+-------+--------+\n                 | 20           |\
    \ 50    | 17    | 15     |\n                 +--------------+-------+-------+--------+\n\
    \                 | 30           | 50    | 17    | 25     |\n                \
    \ +--------------+-------+-------+--------+\n                 | 40           |\
    \ 50    | 50    | 35     |\n                 +--------------+-------+-------+--------+\n\
    \                 | 50           | 50    | 50    | 45     |\n                \
    \ +--------------+-------+-------+--------+\n                 | 60           |\
    \ 50    | 50    | 55     |\n                 +--------------+-------+-------+--------+\n\
    \                 | 70           | 50    | 50    | 65     |\n                \
    \ +--------------+-------+-------+--------+\n                 | 80           |\
    \ 50    | 83    | 75     |\n                 +--------------+-------+-------+--------+\n\
    \                 | 90           | 50    | 83    | 85     |\n                \
    \ +--------------+-------+-------+--------+\n                 | 100          |\
    \ 50    | 83    | 95     |\n                 +--------------+-------+-------+--------+\n\
    \                      Table 9: \"job-priority\" Values\n"
- title: 5.2.2.  job-hold-until (type2 keyword | name(MAX))
  contents:
  - "5.2.2.  job-hold-until (type2 keyword | name(MAX))\n   This attribute specifies\
    \ the named time period during which the Job\n   MUST become a candidate for printing.\n\
    \   Standard 'keyword' values for named time periods are:\n   o  'no-hold': immediately,\
    \ if there are no other reasons to hold\n      the job\n   o  'indefinite': the\
    \ Job is held indefinitely, until a Client\n      performs a Release-Job (Section\
    \ 4.3.6)\n   o  'day-time': during the day\n   o  'evening': evening\n   o  'night':\
    \ night\n   o  'weekend': weekend\n   o  'second-shift': second shift (after close\
    \ of business)\n   o  'third-shift': third shift (after midnight)\n   An Administrator\
    \ MUST associate allowable print times with a named\n   time period (by means\
    \ outside the scope of this IPP/1.1 document).\n   An Administrator is encouraged\
    \ to pick names that suggest the type of\n   time period.  An Administrator MAY\
    \ define additional values using the\n   'name' or 'keyword' attribute syntax,\
    \ depending on implementation.\n   If the value of this attribute specifies a\
    \ time period that is in the\n   future, the Printer SHOULD add the \"job-hold-until-specified\"\
    \ value\n   to the Job's \"job-state-reasons\" attribute, MUST move the Job to\
    \ the\n   'pending-held' state, and MUST NOT schedule the Job for printing\n \
    \  until the specified time period arrives.\n   When the specified time period\
    \ arrives, the Printer MUST remove the\n   \"job-hold-until-specified\" value\
    \ from the Job's \"job-state-reasons\"\n   attribute, if present.  If there are\
    \ no other Job state reasons that\n   keep the Job in the 'pending-held' state,\
    \ the Printer MUST consider\n   the Job as a candidate for processing by moving\
    \ the Job to the\n   'pending' state.\n   If this Job attribute value is the named\
    \ value 'no-hold' or the\n   specified time period has already started, the Job\
    \ MUST be a\n   candidate for processing immediately.\n   If the Client does not\
    \ supply this attribute and this attribute is\n   supported by the Printer, the\
    \ Printer MUST use the value of the\n   Printer's \"job-hold-until-default\" at\
    \ Job submission time (unlike\n   most Job Template attributes that are used if\
    \ necessary at Job\n   processing time).\n"
- title: 5.2.3.  job-sheets (type2 keyword | name(MAX))
  contents:
  - "5.2.3.  job-sheets (type2 keyword | name(MAX))\n   This attribute determines\
    \ which Job start/end sheet(s), if any, MUST\n   be printed with a Job.\n   Standard\
    \ 'keyword' values are:\n   o  'none': no Job sheet is printed\n   o  'standard':\
    \ one or more site-specific standard Job sheets are\n      printed, e.g., a single\
    \ start sheet or both start and end sheets\n   An Administrator MAY define additional\
    \ values using the 'name' or\n   'keyword' attribute syntax, depending on implementation.\n\
    \   The effect of this attribute on Jobs with multiple Documents MAY be\n   affected\
    \ by the \"multiple-document-handling\" Job attribute\n   (Section 5.2.4), depending\
    \ on the Job sheet semantics.\n"
- title: 5.2.4.  multiple-document-handling (type2 keyword)
  contents:
  - "5.2.4.  multiple-document-handling (type2 keyword)\n   This RECOMMENDED attribute\
    \ controls which Impressions and Media\n   Sheets constitute a Set for copy generation\
    \ and finishing processes.\n   When the value of the \"copies\" attribute exceeds\
    \ '1', it also\n   controls the order in which the copies that result from processing\n\
    \   the Documents are produced.  For the purposes of this explanation, if\n  \
    \ \"a\" represents an instance of Document data, then the result of\n   processing\
    \ the data in Document \"a\" is a sequence of Media Sheets\n   represented by\
    \ \"a(*)\".  This attribute MUST be supported with at\n   least one value if the\
    \ Printer supports multiple Documents per Job\n   (see Sections 4.2.4 and 4.3.1).\n\
    \   Standard 'keyword' values are:\n   o  'single-document': If a Job has multiple\
    \ Documents, say, the\n      Document data is called \"a\" and \"b\", then the\
    \ result of processing\n      all the Document data (a and then b) MUST be treated\
    \ as a single\n      sequence of Media Sheets for finishing processes; that is,\n\
    \      finishing is performed on the concatenation of the sequences\n      a(*),b(*).\
    \  The Printer MUST NOT force the data in each Document\n      instance to be\
    \ formatted onto a new Impression, nor to start a new\n      Impression on a new\
    \ Media Sheet.  If more than one copy is made,\n      the ordering of the sets\
    \ of Media Sheets resulting from processing\n      the Document data MUST be a(*),\
    \ b(*), a(*), b(*), ..., and the\n      Printer MUST force each copy (a(*),b(*))\
    \ to start on a new Media\n      Sheet.\n   o  'separate-documents-uncollated-copies':\
    \ If a Job has multiple\n      Documents, say, the Document data is called \"\
    a\" and \"b\", then the\n      result of processing the data in each Document\
    \ instance MUST be\n      treated as a single sequence of Media Sheets for finishing\n\
    \      processes; that is, the sets a(*) and b(*) would each be finished\n   \
    \   separately.  The Printer MUST force each copy of the result of\n      processing\
    \ the data in a single Document to start on a new Media\n      Sheet.  If more\
    \ than one copy is made, the ordering of the sets of\n      Media Sheets resulting\
    \ from processing the Document data MUST be\n      a(*), a(*), ..., b(*), b(*),\
    \ ... .\n   o  'separate-documents-collated-copies': If a Job has multiple\n \
    \     Documents, say, the Document data is called \"a\" and \"b\", then the\n\
    \      result of processing the data in each Document instance MUST be\n     \
    \ treated as a single sequence of Media Sheets for finishing\n      processes;\
    \ that is, the sets a(*) and b(*) would each be finished\n      separately.  The\
    \ Printer MUST force each copy of the result of\n      processing the data in\
    \ a single Document to start on a new Media\n      Sheet.  If more than one copy\
    \ is made, the ordering of the sets of\n      Media Sheets resulting from processing\
    \ the Document data MUST be\n      a(*), b(*), a(*), b(*), ... .\n   o  'single-document-new-sheet':\
    \ Same as 'single-document', except\n      that the Printer MUST ensure that the\
    \ first Impression of each\n      Document instance in the Job is placed on a\
    \ new Media Sheet.  This\n      value allows multiple Documents to be stapled\
    \ together with a\n      single staple where each Document starts on a new Media\
    \ Sheet.\n   The 'single-document' value is the same as\n   'separate-documents-collated-copies'\
    \ with respect to the ordering of\n   Input Pages, but not Media Sheet generation,\
    \ since 'single-document'\n   will put the first page of the next Document on\
    \ the back side of a\n   Media Sheet if an odd number of pages have been produced\
    \ so far for\n   the Job, while 'separate-documents-collated-copies' always forces\
    \ the\n   next Document or Document copy on to a new Media Sheet.  In addition,\n\
    \   if the \"finishings\" attribute specifies 'staple', then with\n   'single-document',\
    \ Documents a and b are stapled together as a single\n   Set with no regard to\
    \ a new Media Sheet, while with\n   'single-document-new-sheet', Documents a and\
    \ b are stapled together\n   as a single Set but Document b starts on a new Media\
    \ Sheet.  With\n   'separate-documents-uncollated-copies' and\n   'separate-documents-collated-copies',\
    \ Documents a and b are stapled\n   separately.\n   Note: The value 'separate-documents-uncollated-copies'\
    \ produces\n   uncollated Media Sheets within a Set, e.g., when \"copies\" is\
    \ '2' a\n   two-Document Job will be printed as Media Sheets a(1), a(1), a(2),\n\
    \   a(2), ... a(n), a(n), b(1), b(1), ..., b(n), b(n).  All other values\n   produce\
    \ collated Media Sheets within a Set.\n   The relationship of this attribute and\
    \ the other attributes that\n   control Document processing is described in Appendix\
    \ C.3.\n"
- title: 5.2.5.  copies (integer(1:MAX))
  contents:
  - "5.2.5.  copies (integer(1:MAX))\n   This RECOMMENDED attribute specifies the\
    \ number of copies to be\n   printed.\n   On many devices, the supported number\
    \ of collated copies will be\n   limited by the number of physical output bins\
    \ on the device and can\n   be different from the number of uncollated copies\
    \ that can be\n   supported.\n   Note: The effect of this attribute on Jobs with\
    \ multiple Documents is\n   controlled by the \"multiple-document-handling\" Job\
    \ attribute\n   (Section 5.2.4).  The relationship of this attribute and the other\n\
    \   attributes that control Document processing is described in\n   Appendix C.3.\n"
- title: 5.2.6.  finishings (1setOf type2 enum)
  contents:
  - "5.2.6.  finishings (1setOf type2 enum)\n   This RECOMMENDED attribute identifies\
    \ the finishing processes that\n   the Printer uses for each copy of each printed\
    \ Document in the Job.\n   For Jobs with multiple Documents, the \"multiple-document-handling\"\
    \n   attribute determines what constitutes a \"copy\" for purposes of\n   finishing.\n\
    \   Standard enum values defined in this document are listed in Table 10.\n  \
    \ The 'staple-xxx' values are specified with respect to the Document as\n   if\
    \ the Document were in portrait orientation with the origin of each\n   Media\
    \ Sheet at the top left corner.  If the Document is actually in\n   landscape\
    \ or reverse-landscape orientation, the Client supplies the\n   appropriate transformed\
    \ value.  For example, to position a staple in\n   the upper left-hand corner\
    \ of a landscape Document when held for\n   reading, the Client supplies the 'staple-bottom-left'\
    \ value, since\n   landscape is defined as a +90 degree rotation of the image\
    \ with\n   respect to the media from portrait, i.e., counterclockwise.  On the\n\
    \   other hand, to position a staple in the upper left-hand corner of a\n   reverse-landscape\
    \ Document when held for reading, the Client supplies\n   the 'staple-top-right'\
    \ value, since reverse-landscape is defined as\n   a -90 degree rotation of the\
    \ image with respect to the media from\n   portrait, i.e., clockwise.\n   The\
    \ angle (vertical, horizontal, angled) of each staple with respect\n   to the\
    \ Document depends on the implementation, which can in turn\n   depend on the\
    \ value of the attribute.\n   Note: The effect of this attribute on Jobs with\
    \ multiple Documents is\n   controlled by the \"multiple-document-handling\" Job\
    \ attribute\n   (Section 5.2.4).  The relationship of this attribute and the other\n\
    \   attributes that control Document processing is described in\n   Appendix C.3.\n\
    \   Note: The value of '3' ('none') has no effect when combined with any\n   other\
    \ values.\n   Note: The \"finishings-col\" attribute [PWG5100.1] is an alternative\
    \ to\n   the \"finishings\" attribute that allows the Client to specify\n   finishing\
    \ intent in greater detail.\n   +-----------+-------------------------------------------------------+\n\
    \   | Value     | Symbolic Name and Description                         |\n  \
    \ +-----------+-------------------------------------------------------+\n   |\
    \ '3'       | 'none': Perform no finishing.                         |\n   +-----------+-------------------------------------------------------+\n\
    \   | '4'       | 'staple': Bind the Document(s) with one or more       |\n  \
    \ |           | staples.  The exact number and placement of the       |\n   |\
    \           | staples are site defined.                             |\n   +-----------+-------------------------------------------------------+\n\
    \   | '5'       | 'punch': This value indicates that holes are required |\n  \
    \ |           | in the finished Document.  The exact number and       |\n   |\
    \           | placement of the holes are site defined.  The punch   |\n   |  \
    \         | specification MAY be satisfied (in a site-specific    |\n   |    \
    \       | and implementation-specific manner) either by         |\n   |      \
    \     | drilling/punching or by substituting pre-drilled      |\n   |        \
    \   | media.                                                |\n   +-----------+-------------------------------------------------------+\n\
    \   | '6'       | 'cover': This value is specified when it is desired   |\n  \
    \ |           | to select a non-printed (or pre-printed) cover for    |\n   |\
    \           | the Document.  This does not supplant the             |\n   |  \
    \         | specification of a printed cover (on cover stock      |\n   |    \
    \       | medium) by the Document itself.                       |\n   +-----------+-------------------------------------------------------+\n\
    \   | '7'       | 'bind': This value indicates that a binding is to be  |\n  \
    \ |           | applied to the Document; the type and placement of    |\n   |\
    \           | the binding are site defined.                         |\n   +-----------+-------------------------------------------------------+\n\
    \   | '8'       | 'saddle-stitch': Bind the Document(s) with one or     |\n  \
    \ |           | more staples (wire stitches) along the middle fold.   |\n   |\
    \           | The exact number and placement of the staples and the |\n   |  \
    \         | middle fold are implementation defined and/or site    |\n   |    \
    \       | defined.                                              |\n   +-----------+-------------------------------------------------------+\n\
    \   | '9'       | 'edge-stitch': Bind the Document(s) with one or more  |\n  \
    \ |           | staples (wire stitches) along one edge.  The exact    |\n   |\
    \           | number and placement of the staples are               |\n   |  \
    \         | implementation defined and/or site defined.           |\n   +-----------+-------------------------------------------------------+\n\
    \   | '10'-'19' | reserved for future generic finishing enum values.    |\n  \
    \ +-----------+-------------------------------------------------------+\n   |\
    \ '20'      | 'staple-top-left': Bind the Document(s) with one or   |\n   |  \
    \         | more staples in the top left corner.                  |\n   +-----------+-------------------------------------------------------+\n\
    \   | '21'      | 'staple-bottom-left': Bind the Document(s) with one   |\n  \
    \ |           | or more staples in the bottom left corner.            |\n   +-----------+-------------------------------------------------------+\n\
    \   | '22'      | 'staple-top-right': Bind the Document(s) with one or  |\n  \
    \ |           | more staples in the top right corner.                 |\n   +-----------+-------------------------------------------------------+\n\
    \   | '23'      | 'staple-bottom-right': Bind the Document(s) with one  |\n  \
    \ |           | or more staples in the bottom right corner.           |\n   +-----------+-------------------------------------------------------+\n\
    \   | '24'      | 'edge-stitch-left': Bind the Document(s) with one or  |\n  \
    \ |           | more staples (wire stitches) along the left edge.     |\n   |\
    \           | The exact number and placement of the staples are     |\n   |  \
    \         | implementation defined and/or site defined.           |\n   +-----------+-------------------------------------------------------+\n\
    \   | '25'      | 'edge-stitch-top': Bind the Document(s) with one or   |\n  \
    \ |           | more staples (wire stitches) along the top edge.  The |\n   |\
    \           | exact number and placement of the staples are         |\n   |  \
    \         | implementation defined and/or site defined.           |\n   +-----------+-------------------------------------------------------+\n\
    \   | '26'      | 'edge-stitch-right': Bind the Document(s) with one or |\n  \
    \ |           | more staples (wire stitches) along the right edge.    |\n   |\
    \           | The exact number and placement of the staples are     |\n   |  \
    \         | implementation defined and/or site defined.           |\n   +-----------+-------------------------------------------------------+\n\
    \   | '27'      | 'edge-stitch-bottom': Bind the Document(s) with one   |\n  \
    \ |           | or more staples (wire stitches) along the bottom      |\n   |\
    \           | edge.  The exact number and placement of the staples  |\n   |  \
    \         | are implementation defined and/or site defined.       |\n   +-----------+-------------------------------------------------------+\n\
    \   | '28'      | 'staple-dual-left': Bind the Document(s) with two     |\n  \
    \ |           | staples (wire stitches) along the left edge, assuming |\n   |\
    \           | a portrait Document (see above).                      |\n   +-----------+-------------------------------------------------------+\n\
    \   | '29'      | 'staple-dual-top': Bind the Document(s) with two      |\n  \
    \ |           | staples (wire stitches) along the top edge, assuming  |\n   |\
    \           | a portrait Document (see above).                      |\n   +-----------+-------------------------------------------------------+\n\
    \   | '30'      | 'staple-dual-right': Bind the Document(s) with two    |\n  \
    \ |           | staples (wire stitches) along the right edge,         |\n   |\
    \           | assuming a portrait Document (see above).             |\n   +-----------+-------------------------------------------------------+\n\
    \   | '31'      | 'staple-dual-bottom': Bind the Document(s) with two   |\n  \
    \ |           | staples (wire stitches) along the bottom edge,        |\n   |\
    \           | assuming a portrait Document (see above).             |\n   +-----------+-------------------------------------------------------+\n\
    \                    Table 10: \"finishings\" Enum Values\n"
- title: 5.2.7.  page-ranges (1setOf rangeOfInteger(1:MAX))
  contents:
  - "5.2.7.  page-ranges (1setOf rangeOfInteger(1:MAX))\n   This RECOMMENDED attribute\
    \ identifies the range(s) of Input Pages\n   that the Printer uses for each Set\
    \ to be printed prior to imposition\n   of those pages onto Impressions.  Nothing\
    \ is printed for any pages\n   identified that do not exist in the Set/Document(s).\
    \  Ranges MUST be\n   in ascending order (1-3, 5-7, 15-19, etc.) and MUST NOT\
    \ overlap so\n   that a non-spooling Printer can process the Job in a single pass.\
    \  If\n   the ranges are not ascending or are overlapping, the Printer MUST\n\
    \   reject the request and return the 'client-error-bad-request'\n   status-code.\
    \  The attribute is associated with Input Pages and not\n   application-numbered\
    \ pages such as the page numbers found in the\n   headers and/or footers for certain\
    \ word processing applications.\n   For Jobs with multiple Documents, the \"multiple-document-handling\"\
    \n   attribute determines what constitutes a Set for purposes of the\n   specified\
    \ page range(s).  When \"multiple-document-handling\" is\n   'single-document',\
    \ the Printer MUST apply each supplied page range\n   once to the concatenation\
    \ of the Input Pages.  For example, if there\n   are 8 Documents of 10 pages each,\
    \ the page range '41-60' prints the\n   pages in the 5th and 6th Documents as\
    \ a single Document, and none of\n   the pages of the other Documents are printed.\
    \  When\n   \"multiple-document-handling\" is\n   'separate-documents-uncollated-copies'\
    \ or\n   'separate-documents-collated-copies', the Printer MUST apply each\n \
    \  supplied page range repeatedly to each Document copy.  For the same\n   Job,\
    \ the page range '1-3, 10-10' would print the first 3 pages\n   and the 10th page\
    \ of each of the 8 Documents in the Job, as 8\n   separate Sets.\n   \"page-ranges-supported\"\
    \ is a boolean value indicating whether the\n   Printer is capable of supporting\
    \ the printing of page ranges.  This\n   capability can differ from one PDL to\
    \ another.  There is no\n   \"page-ranges-default\" attribute.  If the \"page-ranges\"\
    \ attribute is\n   not supplied by the Client, all pages of the Document are printed.\n\
    \   Note: In many cases, the Client supplies only those Input Pages that\n   need\
    \ to be printed in the Document data, and the \"page-ranges\" Job\n   Template\
    \ attribute is not used.  However, Clients that submit\n   already-generated Document\
    \ data (either static content from some web\n   site or previously submitted content\
    \ the End User wishes to reprint)\n   can use this attribute to print just a subset\
    \ of the pages contained\n   in the Document.  In this case, if a \"page-ranges\"\
    \ value of 'n-m' is\n   specified, the first page to be printed will be page n.\
    \  All\n   subsequent pages of the Document will be printed through and\n   including\
    \ page m.\n   Note: The effect of this attribute on Jobs with multiple Documents\
    \ is\n   controlled by the \"multiple-document-handling\" Job attribute\n   (Section\
    \ 5.2.4).  The relationship of this attribute and the other\n   attributes that\
    \ control Document processing is described in\n   Appendix C.3.\n"
- title: 5.2.8.  sides (type2 keyword)
  contents:
  - "5.2.8.  sides (type2 keyword)\n   This RECOMMENDED attribute specifies how Impressions\
    \ are placed upon\n   the sides of a Media Sheet.\n   The standard 'keyword' values\
    \ are:\n   o  'one-sided': imposes each consecutive Impression upon the same\n\
    \      side of consecutive Media Sheets.\n   o  'two-sided-long-edge': imposes\
    \ each consecutive pair of\n      Impressions upon front and back sides of consecutive\
    \ Media Sheets,\n      such that the orientation of each pair of Impressions on\
    \ the\n      medium would be correct for the reader as if for binding on the\n\
    \      long edge.  This imposition is sometimes called 'duplex' or\n      'head-to-head'.\n\
    \   o  'two-sided-short-edge': imposes each consecutive pair of\n      Impressions\
    \ upon front and back sides of consecutive Media Sheets,\n      such that the\
    \ orientation of each pair of Impressions on the\n      medium would be correct\
    \ for the reader as if for binding on the\n      short edge.  This imposition\
    \ is sometimes called 'tumble' or\n      'head-to-toe'.\n   Note: The effect of\
    \ this attribute on Jobs with multiple Documents is\n   controlled by the \"multiple-document-handling\"\
    \ Job attribute\n   (Section 5.2.4).  The relationship of this attribute and the\
    \ other\n   attributes that control Document processing is described in\n   Appendix\
    \ C.3.\n"
- title: 5.2.9.  number-up (integer(1:MAX))
  contents:
  - "5.2.9.  number-up (integer(1:MAX))\n   This attribute specifies the number of\
    \ Input Pages to impose upon a\n   single Impression.  For example, if the value\
    \ is:\n   o  '1': the Printer MUST place one Input Page on a single Impression.\n\
    \   o  '2': the Printer MUST place two Input Pages on a single\n      Impression.\n\
    \   o  '4': the Printer MUST place four Input Pages on a single\n      Impression.\n\
    \   In all cases, the Printer MAY add some sort of translation, scaling,\n   or\
    \ rotation of Input Pages when imposing them.\n   Note: The effect of this attribute\
    \ on Jobs with multiple Documents is\n   controlled by the \"multiple-document-handling\"\
    \ Job attribute\n   (Section 5.2.4).  The relationship of this attribute and the\
    \ other\n   attributes that control Document processing is described in\n   Appendix\
    \ C.3.\n"
- title: 5.2.10.  orientation-requested (type2 enum)
  contents:
  - "5.2.10.  orientation-requested (type2 enum)\n   This RECOMMENDED attribute indicates\
    \ the desired orientation for\n   printed Input Pages; it does not describe the\
    \ orientation of the\n   Client-supplied Input Pages.\n   For some Document formats\
    \ (such as 'application/postscript'), the\n   desired orientation of the Input\
    \ Pages is sometimes specified within\n   the Document data.  This information\
    \ is generated by a Printer driver\n   prior to the submission of the Print Job.\
    \  Other Document formats\n   such as 'text/plain' do not include the notion of\
    \ desired orientation\n   within the Document data.  In the latter case, it is\
    \ possible for the\n   Printer to bind the desired orientation to the Document\
    \ data after it\n   has been submitted.  Printers MAY only support\n   \"orientation-requested\"\
    \ for some Document formats (e.g., 'text/plain'\n   or 'text/html') but not others\
    \ (e.g., 'application/postscript').\n   This is no different than any other Job\
    \ Template attribute, since\n   Section 5.2, item 1, points out that a Printer\
    \ can support or not\n   support any Job Template attribute based on the Document\
    \ format\n   supplied by the Client.  However, a special mention is made here,\n\
    \   since it is very likely that a Printer will support\n   \"orientation-requested\"\
    \ for only a subset of the supported Document\n   formats.\n   Standard enum values\
    \ are listed in Table 11.\n   Note: The effect of this attribute on Jobs with\
    \ multiple Documents is\n   controlled by the \"multiple-document-handling\" Job\
    \ attribute\n   (Section 5.2.4).  The relationship of this attribute and the other\n\
    \   attributes that control Document processing is described in\n   Appendix C.3.\n\
    \   +-------+-----------------------------------------------------------+\n  \
    \ | Value | Symbolic Name and Description                             |\n   +-------+-----------------------------------------------------------+\n\
    \   | '3'   | 'portrait': The content will be imaged across the short   |\n  \
    \ |       | edge of the medium.                                       |\n   +-------+-----------------------------------------------------------+\n\
    \   | '4'   | 'landscape': The content will be imaged across the long   |\n  \
    \ |       | edge of the medium.  Landscape is defined to be a         |\n   |\
    \       | rotation of the Input Page to be imaged by +90 degrees    |\n   |  \
    \     | with respect to the medium (i.e., counterclockwise) from  |\n   |    \
    \   | the portrait orientation.  Note: The +90 direction was    |\n   |      \
    \ | chosen because simple finishing on the long edge is the   |\n   |       |\
    \ same edge whether portrait or landscape.                  |\n   +-------+-----------------------------------------------------------+\n\
    \   | '5'   | 'reverse-landscape': The content will be imaged across    |\n  \
    \ |       | the long edge of the medium.  Reverse-landscape is        |\n   |\
    \       | defined to be a rotation of the Input Page to be imaged   |\n   |  \
    \     | by -90 degrees with respect to the medium (i.e.,          |\n   |    \
    \   | clockwise) from the portrait orientation.  Note: The      |\n   |      \
    \ | 'reverse-landscape' value was added because some          |\n   |       |\
    \ applications rotate landscape -90 degrees from portrait,  |\n   |       | rather\
    \ than +90 degrees.                                  |\n   +-------+-----------------------------------------------------------+\n\
    \   | '6'   | 'reverse-portrait': The content will be imaged across the |\n  \
    \ |       | short edge of the medium.  Reverse-portrait is defined to |\n   |\
    \       | be a rotation of the Input Page to be imaged by 180       |\n   |  \
    \     | degrees with respect to the medium from the portrait      |\n   |    \
    \   | orientation.  Note: The 'reverse-portrait' value was      |\n   |      \
    \ | added for use with the \"finishings\" attribute in cases    |\n   |      \
    \ | where the opposite edge is desired for finishing a        |\n   |       |\
    \ portrait Document on simple finishing devices that have   |\n   |       | only\
    \ one finishing position.  Thus, a 'text'/plain'       |\n   |       | portrait\
    \ Document can be stapled \"on the right\" by a      |\n   |       | simple finishing\
    \ device, as is common use with some       |\n   |       | Middle Eastern languages\
    \ such as Hebrew.                  |\n   +-------+-----------------------------------------------------------+\n\
    \               Table 11: \"orientation-requested\" Enum Values\n"
- title: 5.2.11.  media (type2 keyword | name(MAX))
  contents:
  - "5.2.11.  media (type2 keyword | name(MAX))\n   This RECOMMENDED attribute identifies\
    \ the medium that the Printer\n   uses for all Impressions of the Job.\n   The\
    \ values for \"media\" historically have included medium names,\n   medium sizes,\
    \ input trays, and electronic forms so that one attribute\n   specifies the media.\
    \  However, the Client SHOULD only use the media\n   attribute to specify medium\
    \ sizes using PWG Media Standardized Names\n   [PWG5101.1].\n   If a Printer supports\
    \ a medium name as a value of this attribute,\n   such a medium name implicitly\
    \ selects an input tray that contains the\n   specified medium.  If a Printer\
    \ supports a medium size as a value of\n   this attribute, such a medium size\
    \ implicitly selects a medium name\n   that in turn implicitly selects an input\
    \ tray that contains the\n   medium with the specified size.  If a Printer supports\
    \ an input tray\n   as the value of this attribute, such an input tray implicitly\
    \ selects\n   the medium that is in that input tray at the time the Job prints.\n\
    \   This case includes manual-feed input trays.  If a Printer supports an\n  \
    \ electronic form as the value of this attribute, such an electronic\n   form\
    \ implicitly selects a medium name that in turn implicitly selects\n   an input\
    \ tray that contains the medium specified by the electronic\n   form.  The electronic\
    \ form also implicitly selects an image that the\n   Printer MUST merge with the\
    \ Document data as it prints each page.\n   PWG Media Standardized Names [PWG5101.1]\
    \ SHOULD be used.  Legacy\n   'keyword' values are taken from ISO DPA [ISO10175],\
    \ the Printer MIB\n   [RFC3805], and ASME-Y14.1M [ASME-Y14.1M].  An Administrator\
    \ MAY\n   define additional values using the 'name' or 'keyword' attribute\n \
    \  syntax, depending on implementation.\n   There is also an additional Printer\
    \ attribute named \"media-ready\",\n   which differs from \"media-supported\"\
    \ in that legal values only\n   include the subset of \"media-supported\" values\
    \ that are physically\n   loaded and ready for printing with no Operator intervention\
    \ required.\n   The relationship of this attribute and the other attributes that\n\
    \   control Document processing is described in Appendix C.3.\n   Note: If supported\
    \ by the Printer, Clients MAY use the alternative\n   \"media-col\" attribute\
    \ [PWG5100.3] [PWG5100.13] to specify medium\n   requirements in greater detail.\n"
- title: 5.2.12.  printer-resolution (resolution)
  contents:
  - "5.2.12.  printer-resolution (resolution)\n   This RECOMMENDED attribute identifies\
    \ the output resolution that the\n   Printer uses for the Job.\n   Note: This\
    \ attribute and the \"print-quality\" attribute\n   (Section 5.2.13) are both\
    \ used to specify the overall output quality\n   of the Job.  If a Client specifies\
    \ conflicting \"printer-resolution\"\n   and \"print-quality\" values, Printers\
    \ SHOULD use the \"print-quality\"\n   value.\n"
- title: 5.2.13.  print-quality (type2 enum)
  contents:
  - "5.2.13.  print-quality (type2 enum)\n   This RECOMMENDED attribute specifies\
    \ the print quality that the\n   Printer uses for the Job.\n   The standard enum\
    \ values are listed in Table 12.\n   Note: This attribute and the \"printer-resolution\"\
    \ attribute\n   (Section 5.2.12) are both used to specify the overall output quality\n\
    \   of the Job.  If a Client specifies conflicting \"printer-resolution\"\n  \
    \ and \"print-quality\" values, Printers SHOULD use the \"print-quality\"\n  \
    \ value.\n    +-------+---------------------------------------------------------+\n\
    \    | Value | Symbolic Name and Description                           |\n   \
    \ +-------+---------------------------------------------------------+\n    | '3'\
    \   | 'draft': lowest quality available on the Printer        |\n    +-------+---------------------------------------------------------+\n\
    \    | '4'   | 'normal': normal or intermediate quality on the Printer |\n   \
    \ +-------+---------------------------------------------------------+\n    | '5'\
    \   | 'high': highest quality available on the Printer        |\n    +-------+---------------------------------------------------------+\n\
    \                   Table 12: \"print-quality\" Enum Values\n"
- title: 5.3.  Job Description and Status Attributes
  contents:
  - "5.3.  Job Description and Status Attributes\n   The attributes in this section\
    \ form the attribute group called\n   \"job-description\".  Tables 13 and 14 summarize\
    \ these attributes.  The\n   third column of each table indicates whether the\
    \ attribute is a\n   REQUIRED attribute that MUST be supported by Printers.  If\
    \ it is not\n   indicated as REQUIRED, then it is OPTIONAL.  The maximum size\
    \ in\n   octets for 'text' and 'name' attributes is indicated in parentheses.\n\
    \             +------------------+----------------+-----------+\n            \
    \ | Attribute        | Syntax         | REQUIRED? |\n             +------------------+----------------+-----------+\n\
    \             | job-impressions  | integer(0:MAX) |           |\n            \
    \ +------------------+----------------+-----------+\n             | job-k-octets\
    \     | integer(0:MAX) |           |\n             +------------------+----------------+-----------+\n\
    \             | job-media-sheets | integer(1:MAX) |           |\n            \
    \ +------------------+----------------+-----------+\n             | job-name \
    \        | name(MAX)      | REQUIRED  |\n             +------------------+----------------+-----------+\n\
    \             Table 13: Job Description Attributes (READ-WRITE)\n   +-----------------------------+-------------------------+-----------+\n\
    \   | Attribute                   | Syntax                  | REQUIRED? |\n  \
    \ +-----------------------------+-------------------------+-----------+\n   |\
    \ attributes-charset          | charset                 | REQUIRED  |\n   +-----------------------------+-------------------------+-----------+\n\
    \   | attributes-natural-language | naturalLanguage         | REQUIRED  |\n  \
    \ +-----------------------------+-------------------------+-----------+\n   |\
    \ date-time-at-completed      | dateTime|unknown|no-    |           |\n   |  \
    \                           | value                   |           |\n   +-----------------------------+-------------------------+-----------+\n\
    \   | date-time-at-creation       | dateTime|unknown        |           |\n  \
    \ +-----------------------------+-------------------------+-----------+\n   |\
    \ date-time-at-processing     | dateTime|unknown|no-    |           |\n   |  \
    \                           | value                   |           |\n   +-----------------------------+-------------------------+-----------+\n\
    \   | job-detailed-status-        | 1setOf text(MAX)        |           |\n  \
    \ | messages                    |                         |           |\n   +-----------------------------+-------------------------+-----------+\n\
    \   | job-document-access-errors  | 1setOf text(MAX)        |           |\n  \
    \ +-----------------------------+-------------------------+-----------+\n   |\
    \ job-id                      | integer(1:MAX)          | REQUIRED  |\n   +-----------------------------+-------------------------+-----------+\n\
    \   | job-impressions-completed   | integer(0:MAX)          |           |\n  \
    \ +-----------------------------+-------------------------+-----------+\n   |\
    \ job-k-octets-processed      | integer(0:MAX)          |           |\n   +-----------------------------+-------------------------+-----------+\n\
    \   | job-media-sheets-completed  | integer(0:MAX)          |           |\n  \
    \ +-----------------------------+-------------------------+-----------+\n   |\
    \ job-message-from-operator   | text(127)               |           |\n   +-----------------------------+-------------------------+-----------+\n\
    \   | job-more-info               | uri                     |           |\n  \
    \ +-----------------------------+-------------------------+-----------+\n   |\
    \ job-originating-user-name   | name(MAX)               | REQUIRED  |\n   +-----------------------------+-------------------------+-----------+\n\
    \   | job-printer-up-time         | integer(1:MAX)          | REQUIRED  |\n  \
    \ +-----------------------------+-------------------------+-----------+\n   |\
    \ job-printer-uri             | uri                     | REQUIRED  |\n   +-----------------------------+-------------------------+-----------+\n\
    \   | job-state                   | type1 enum              | REQUIRED  |\n  \
    \ +-----------------------------+-------------------------+-----------+\n   |\
    \ job-state-message           | text(MAX)               |           |\n   +-----------------------------+-------------------------+-----------+\n\
    \   | job-state-reasons           | 1setOf type2 keyword    | REQUIRED  |\n  \
    \ +-----------------------------+-------------------------+-----------+\n   |\
    \ job-uri                     | uri                     | REQUIRED  |\n   +-----------------------------+-------------------------+-----------+\n\
    \   | number-of-documents         | integer(0:MAX)          |           |\n  \
    \ +-----------------------------+-------------------------+-----------+\n   |\
    \ number-of-intervening-jobs  | integer(0:MAX)          |           |\n   +-----------------------------+-------------------------+-----------+\n\
    \   | output-device-assigned      | name(127)               |           |\n  \
    \ +-----------------------------+-------------------------+-----------+\n   |\
    \ time-at-completed           | integer(MIN:MAX)        | REQUIRED  |\n   +-----------------------------+-------------------------+-----------+\n\
    \   | time-at-creation            | integer(MIN:MAX)        | REQUIRED  |\n  \
    \ +-----------------------------+-------------------------+-----------+\n   |\
    \ time-at-processing          | integer(MIN:MAX)        | REQUIRED  |\n   +-----------------------------+-------------------------+-----------+\n\
    \                Table 14: Job Status Attributes (READ-ONLY)\n"
- title: 5.3.1.  job-id (integer(1:MAX))
  contents:
  - "5.3.1.  job-id (integer(1:MAX))\n   This REQUIRED attribute contains the ID of\
    \ the Job.  The Printer, on\n   receipt of a new Job, generates an ID that identifies\
    \ the new Job on\n   that Printer.  The Printer returns the value of the \"job-id\"\
    \n   attribute as part of the response to a Job Creation request.\n   For a description\
    \ of this attribute and its relationship to the\n   \"job-uri\" and \"job-printer-uri\"\
    \ attributes, see the discussion in\n   Section 3.4 (\"Object Identity\").\n"
- title: 5.3.2.  job-uri (uri)
  contents:
  - "5.3.2.  job-uri (uri)\n   This REQUIRED attribute contains the URI for the Job.\
    \  The Printer,\n   on receipt of a new Job, generates a URI that identifies the\
    \ new Job.\n   The Printer returns the value of the \"job-uri\" attribute as part\
    \ of\n   the response to a Job Creation request.  The precise format of a Job\n\
    \   URI is implementation dependent [RFC3510] [RFC7472].  If the Printer\n   supports\
    \ more than one URI and there is some relationship between the\n   newly formed\
    \ Job URI and the Printer's URI, the Printer uses the\n   Printer URI supplied\
    \ by the Client in the Job Creation request.  For\n   example, if the Job Creation\
    \ request comes in over a secure channel,\n   the new Job URI MUST use the same\
    \ secure channel.  This can be\n   guaranteed because the Printer is responsible\
    \ for generating the Job\n   URI and the Printer is aware of its security configuration\
    \ and policy\n   as well as the Printer URI used in the Job Creation request.\n\
    \   For a description of this attribute and its relationship to the\n   \"job-id\"\
    \ and \"job-printer-uri\" attributes, see the discussion in\n   Section 3.4 (\"\
    Object Identity\").\n"
- title: 5.3.3.  job-printer-uri (uri)
  contents:
  - "5.3.3.  job-printer-uri (uri)\n   This REQUIRED attribute identifies the Printer\
    \ that created this Job.\n   When a Printer creates a Job, it populates this attribute\
    \ with the\n   Printer URI that was used in the Job Creation request.  This\n\
    \   attribute permits a Client to identify the Printer that created this\n   Job\
    \ when only the Job's URI is available to the Client.  The Client\n   queries\
    \ the creating Printer to determine which languages, charsets,\n   and operations\
    \ are supported for this Job.\n   For a description of this attribute and its\
    \ relationship to the\n   \"job-uri\" and \"job-id\" attributes, see the discussion\
    \ in Section 3.4\n   (\"Object Identity\").\n"
- title: 5.3.4.  job-more-info (uri)
  contents:
  - "5.3.4.  job-more-info (uri)\n   Similar to \"printer-more-info\", this attribute\
    \ contains the URI\n   referencing some resource with more information about this\
    \ Job,\n   perhaps an HTML page containing status information about the Job.\n"
- title: 5.3.5.  job-name (name(MAX))
  contents:
  - "5.3.5.  job-name (name(MAX))\n   This REQUIRED attribute is the name of the Job.\
    \  It is a name that is\n   more user friendly than the \"job-uri\" or \"job-id\"\
    \ attribute values.\n   It does not need to be unique between Jobs.  The Job's\
    \ \"job-name\"\n   attribute is set to the value supplied by the Client in the\n\
    \   \"job-name\" operation attribute in the Job Creation request (see\n   Section\
    \ 4.2.1.1).  If, however, the \"job-name\" operation attribute is\n   not supplied\
    \ by the Client in the Job Creation request, the Printer,\n   on creation of the\
    \ Job, MUST generate a name.  The Printer SHOULD\n   generate the value of the\
    \ Job's \"job-name\" attribute from the first\n   of the following sources that\
    \ produces a value: (1) the\n   \"document-name\" operation attribute of the first\
    \ (or only) Document,\n   (2) the \"document-URI\" attribute of the first (or\
    \ only) Document, or\n   (3) any other piece of Job-specific and/or Document data.\n"
- title: 5.3.6.  job-originating-user-name (name(MAX))
  contents:
  - "5.3.6.  job-originating-user-name (name(MAX))\n   This REQUIRED attribute contains\
    \ the name of the End User that\n   submitted the Print Job.  The Printer sets\
    \ this attribute to the most\n   authenticated printable name that it can obtain\
    \ from the\n   authentication service over which the IPP operation was received.\n\
    \   Only if such a name is not available does the Printer use the value\n   supplied\
    \ by the Client in the \"requesting-user-name\" operation\n   attribute of the\
    \ Job Creation request (see Sections 5.4.2, 5.4.3,\n   and 9).\n   Note: The Printer\
    \ needs to keep an internal originating user ID of\n   some form, typically as\
    \ a credential of a principal, with the Job.\n   Since such an internal attribute\
    \ is implementation dependent and not\n   of interest to Clients, it is not specified\
    \ as a Job attribute.  This\n   originating user ID is used for authorization\
    \ checks (if any) on all\n   subsequent operations.\n"
- title: 5.3.7.  job-state (type1 enum)
  contents:
  - "5.3.7.  job-state (type1 enum)\n   This REQUIRED attribute identifies the current\
    \ state of the Job.\n   Even though IPP defines seven values for Job states (plus\
    \ the\n   out-of-band 'unknown' value -- see Section 5.1), implementations only\n\
    \   need to support those states that are appropriate for the particular\n   implementation.\
    \  In other words, a Printer supports only those Job\n   states implemented by\
    \ the Output Device and available to the Printer\n   implementation.\n   Standard\
    \ enum values are listed in Table 15.\n   The final value for this attribute MUST\
    \ be one of the following --\n   'completed', 'canceled', or 'aborted' -- before\
    \ the Printer removes\n   the Job altogether.  The length of time that Jobs remain\
    \ in the\n   'canceled', 'aborted', and 'completed' states depends on\n   implementation.\
    \  See Section 5.3.7.2.\n   Figure 3 shows the normal Job state transitions. \
    \ Normally, a Job\n   progresses from left to right.  Other state transitions\
    \ are unlikely\n   but are not forbidden.  Not shown are the transitions to the\n\
    \   'canceled' state from the 'pending', 'pending-held', and\n   'processing-stopped'\
    \ states.\n                                                      +----> canceled\n\
    \                                                     /\n       +----> pending\
    \  -------> processing ---------+------> completed\n       |         ^       \
    \            ^               \\\n   --->+         |                   |      \
    \          +----> aborted\n       |         v                   v            \
    \   /\n       +----> pending-held    processing-stopped ---+\n               \
    \        Figure 3: IPP Job Life Cycle\n   Jobs reach one of the three terminal\
    \ states -- 'completed',\n   'canceled', or 'aborted' -- after the Jobs have completed\
    \ all\n   activity, including stacking output media, and all Job Status\n   attributes\
    \ have reached their final values for the Job.\n   +--------+----------------------------------------------------------+\n\
    \   | Values | Symbolic Name and Description                            |\n  \
    \ +--------+----------------------------------------------------------+\n   |\
    \ '3'    | 'pending': The Job is a candidate to start processing    |\n   |  \
    \      | but is not yet processing.                               |\n   +--------+----------------------------------------------------------+\n\
    \   | '4'    | 'pending-held': The Job is not a candidate for           |\n  \
    \ |        | processing for any number of reasons but will return to  |\n   |\
    \        | the 'pending' state as soon as the reasons are no longer |\n   |  \
    \      | present.  The Job's \"job-state-reasons\" attribute MUST   |\n   |  \
    \      | indicate why the Job is no longer a candidate for        |\n   |    \
    \    | processing.                                              |\n   +--------+----------------------------------------------------------+\n\
    \   | '5'    | 'processing': One or more of the following: (1) the Job  |\n  \
    \ |        | is using, or is attempting to use, one or more purely    |\n   |\
    \        | software processes that are analyzing, creating, or      |\n   |  \
    \      | interpreting a PDL, etc.; (2) the Job is using, or is    |\n   |    \
    \    | attempting to use, one or more hardware devices that are |\n   |      \
    \  | interpreting a PDL; making marks on a medium; and/or     |\n   |        |\
    \ performing finishing, such as stapling, etc.; (3) the    |\n   |        | Printer\
    \ has made the Job ready for printing, but the     |\n   |        | Output Device\
    \ is not yet printing it, either because the |\n   |        | Job hasn't reached\
    \ the Output Device or because the Job  |\n   |        | is queued in the Output\
    \ Device or some other spooler,    |\n   |        | waiting for the Output Device\
    \ to print it.  When the Job |\n   |        | is in the 'processing' state, the\
    \ entire Job state       |\n   |        | includes the detailed status represented\
    \ in the          |\n   |        | Printer's \"printer-state\", \"printer-state-reasons\"\
    , and  |\n   |        | \"printer-state-message\" attributes.  Implementations\
    \ MAY |\n   |        | include additional values in the Job's \"job-state-   \
    \    |\n   |        | reasons\" attribute to indicate the progress of the Job,\
    \  |\n   |        | such as adding the 'job-printing' value to indicate when |\n\
    \   |        | the Output Device is actually making marks on paper      |\n  \
    \ |        | and/or the 'processing-to-stop-point' value to indicate  |\n   |\
    \        | that the Printer is in the process of canceling or       |\n   |  \
    \      | aborting the Job.                                        |\n   +--------+----------------------------------------------------------+\n\
    \   | '6'    | 'processing-stopped': The Job has stopped while          |\n  \
    \ |        | processing for any number of reasons and will return to  |\n   |\
    \        | the 'processing' state as soon as the reasons are no     |\n   |  \
    \      | longer present.  The Job's \"job-state-reasons\" attribute |\n   |  \
    \      | MAY indicate why the Job has stopped processing.  For    |\n   |    \
    \    | example, if the Output Device is stopped, the 'printer-  |\n   |      \
    \  | stopped' value MAY be included in the Job's \"job-state-  |\n   |       \
    \ | reasons\" attribute.  Note: When an Output Device is      |\n   |        |\
    \ stopped, the device usually indicates its condition in   |\n   |        | human-readable\
    \ form locally at the device.  A Client can |\n   |        | obtain more complete\
    \ device status remotely by querying  |\n   |        | the Printer's \"printer-state\"\
    , \"printer-state-reasons\",  |\n   |        | and \"printer-state-message\" attributes.\
    \                  |\n   +--------+----------------------------------------------------------+\n\
    \   | '7'    | 'canceled':  The Job has been canceled by a Cancel-Job   |\n  \
    \ |        | operation, and the Printer has completed canceling the   |\n   |\
    \        | Job.  All Job Status attributes have reached their final |\n   |  \
    \      | values for the Job.  While the Printer is canceling the  |\n   |    \
    \    | Job, the Job remains in its current state, but the Job's |\n   |      \
    \  | \"job-state-reasons\" attribute SHOULD contain the         |\n   |      \
    \  | 'processing-to-stop-point' value and one of the          |\n   |        |\
    \ 'canceled-by-user', 'canceled-by-operator', or           |\n   |        | 'canceled-at-device'\
    \ values.  When the Job moves to the  |\n   |        | 'canceled' state, the 'processing-to-stop-point'\
    \ value,  |\n   |        | if present, MUST be removed, but 'canceled-by-xxx',\
    \ if   |\n   |        | present, MUST remain.                                \
    \    |\n   +--------+----------------------------------------------------------+\n\
    \   | '8'    | 'aborted': The Job has been aborted by the system,       |\n  \
    \ |        | usually while the Job was in the 'processing' or         |\n   |\
    \        | 'processing-stopped' state, and the Printer has          |\n   |  \
    \      | completed aborting the Job; all Job Status attributes    |\n   |    \
    \    | have reached their final values for the Job.  While the  |\n   |      \
    \  | Printer is aborting the Job, the Job remains in its      |\n   |        |\
    \ current state, but the Job's \"job-state-reasons\"         |\n   |        |\
    \ attribute SHOULD contain the 'processing-to-stop-point'  |\n   |        | and\
    \ 'aborted-by-system' values.  When the Job moves to   |\n   |        | the 'aborted'\
    \ state, the 'processing-to-stop-point'      |\n   |        | value, if present,\
    \ MUST be removed, but the 'aborted-by- |\n   |        | system' value, if present,\
    \ MUST remain.                  |\n   +--------+----------------------------------------------------------+\n\
    \   | '9'    | 'completed': The Job has completed successfully or with  |\n  \
    \ |        | warnings or errors after processing, all of the Job      |\n   |\
    \        | Media Sheets have been successfully stacked in the       |\n   |  \
    \      | appropriate output bin(s), and all Job Status attributes |\n   |    \
    \    | have reached their final values for the Job.  The Job's  |\n   |      \
    \  | \"job-state-reasons\" attribute SHOULD contain one of the  |\n   |      \
    \  | 'completed-successfully', 'completed-with-warnings', or  |\n   |        |\
    \ 'completed-with-errors' values.                          |\n   +--------+----------------------------------------------------------+\n\
    \                     Table 15: \"job-state\" Enum Values\n"
- title: 5.3.7.1.  Forwarding Servers
  contents:
  - "5.3.7.1.  Forwarding Servers\n   As with all other IPP attributes, if the implementation\
    \ cannot\n   determine the correct value for this attribute, it SHOULD respond\n\
    \   with the out-of-band 'unknown' value (see Section 5.1) rather than\n   try\
    \ to guess at some possibly incorrect value and confuse the\n   End User about\
    \ the state of the Job.  For example, if the\n   implementation is just a gateway\
    \ into some printing system from which\n   it can normally get status, but temporarily\
    \ is unable, then the\n   implementation should return the 'unknown' value.  However,\
    \ if the\n   implementation is a gateway to a printing system that never provides\n\
    \   detailed status about the Print Job, the implementation MAY set the\n   IPP\
    \ Job's state to 'completed', provided that it also sets the\n   'queued-in-device'\
    \ value in the Job's \"job-state-reasons\" attribute\n   (see Section 5.3.8).\n"
- title: 5.3.7.2.  Partitioning of Job States
  contents:
  - "5.3.7.2.  Partitioning of Job States\n   This section describes the partitioning\
    \ of the seven Job states into\n   phases: Job Not Completed, Job Retention, Job\
    \ History, and Job\n   Removal.  This section also explains the 'job-restartable'\
    \ value of\n   the \"job-state-reasons\" Job Status attribute for use with the\n\
    \   Restart-Job and Resubmit-Job [PWG5100.11] operations.\n   Job Not Completed:\
    \ When a Job is in the 'pending', 'pending-held',\n   'processing', or 'processing-stopped'\
    \ state, the Job is not\n   completed.\n   Job Retention: When a Job enters one\
    \ of the three terminal Job states\n   -- 'completed', 'canceled', or 'aborted'\
    \ -- the IPP Printer MAY\n   \"retain\" the Job in a restartable condition for\
    \ an implementation-\n   defined time period.  This time period MAY be zero seconds\
    \ and MAY\n   depend on the terminal Job state.  This phase is called \"Job\n\
    \   Retention\".  While in the Job Retention phase, the Job's Document\n   data\
    \ is retained and a Client can restart the Job using the\n   Restart-Job operation.\
    \  If the Printer supports the Restart-Job or\n   Resubmit-Job operation, then\
    \ it SHOULD indicate that the Job is\n   restartable by adding the 'job-restartable'\
    \ value to the Job's\n   \"job-state-reasons\" attribute (see Section 5.3.8) during\
    \ the Job\n   Retention phase.\n   Job History: After the Job Retention phase\
    \ expires for a Job, the\n   Printer deletes the Document data for the Job and\
    \ the Job becomes\n   part of the Job History.  The Printer MAY also delete any\
    \ number of\n   the Job attributes.  Since the Job is no longer restartable, the\n\
    \   Printer MUST remove the 'job-restartable' value from the Job's\n   \"job-state-reasons\"\
    \ attribute, if present.  Printers SHOULD keep the\n   Job in the Job History\
    \ phase for at least 60 seconds to allow Clients\n   to discover the final disposition\
    \ of the Job.\n   Job Removal: After the Job has remained in the Job History for\
    \ an\n   implementation-defined time, such as when the number of Jobs exceeds\n\
    \   a fixed number or after a fixed time period (which MAY be\n   zero seconds),\
    \ the IPP Printer removes the Job from the system.\n   Using the Get-Jobs operation\
    \ and supplying the 'not-completed' value\n   for the \"which-jobs\" operation\
    \ attribute, a Client is requesting Jobs\n   in the Job Not Completed phase. \
    \ Using the Get-Jobs operation and\n   supplying the 'completed' value for the\
    \ \"which-jobs\" operation\n   attribute, a Client is requesting Jobs in the Job\
    \ Retention and Job\n   History phases.  Using the Get-Job-Attributes operation,\
    \ a Client is\n   requesting a Job in any phase except Job Removal.  After Job\
    \ Removal,\n   the Get-Job-Attributes and Get-Jobs operations no longer are capable\n\
    \   of returning any information about a Job.\n"
- title: 5.3.8.  job-state-reasons (1setOf type2 keyword)
  contents:
  - "5.3.8.  job-state-reasons (1setOf type2 keyword)\n   This REQUIRED attribute\
    \ provides additional information about the\n   Job's current state, i.e., information\
    \ that augments the value of the\n   Job's \"job-state\" attribute.\n   These\
    \ values MAY be used with any Job state or states for which the\n   reason makes\
    \ sense.  Some of these value definitions indicate\n   conformance requirements;\
    \ the rest are OPTIONAL.  Furthermore, when\n   implemented, the Printer MUST\
    \ return these values when the reason\n   applies and MUST NOT return them when\
    \ the reason no longer applies,\n   whether the value of the Job's \"job-state\"\
    \ attribute changed or not.\n   When the Job does not have any reasons for being\
    \ in its current\n   state, the value of the Job's \"job-state-reasons\" attribute\
    \ MUST be\n   'none'.\n   Note: While values cannot be added to the \"job-state\"\
    \ attribute\n   without impacting deployed Clients that take actions upon receiving\n\
    \   \"job-state\" values, it is the intent that additional\n   \"job-state-reasons\"\
    \ values can be defined and registered without\n   impacting such deployed Clients.\
    \  In other words, the\n   \"job-state-reasons\" attribute is intended to be extensible.\n\
    \   The following standard 'keyword' values are defined.  For ease of\n   understanding,\
    \ the values are presented in the order in which the\n   reasons are likely to\
    \ occur (if implemented):\n   o  'none': There are no reasons for the Job's current\
    \ state.  This\n      state reason is semantically equivalent to \"job-state-reasons\"\
    \n      without any value and MUST be used when there is no other value,\n   \
    \   since the '1setOf' attribute syntax requires at least one value.\n   o  'job-incoming':\
    \ Either (1) the Printer has accepted the Create-Job\n      operation and is expecting\
    \ additional Send-Document and/or\n      Send-URI operations or (2) the Printer\
    \ is retrieving/accepting\n      Document data as a result of a Print-Job, Print-URI,\n\
    \      Send-Document, or Send-URI operation.\n   o  'job-data-insufficient': The\
    \ Create-Job operation has been\n      accepted by the Printer, but the Printer\
    \ is expecting additional\n      Document data before it can move the Job into\
    \ the 'processing'\n      state.  If a Printer starts processing before it has\
    \ received all\n      data, the Printer removes the 'job-data-insufficient' reason,\
    \ but\n      the 'job-incoming' reason remains.  If a Printer starts processing\n\
    \      after it has received all data, the Printer removes the\n      'job-data-insufficient'\
    \ reason and the 'job-incoming' reason at\n      the same time.\n   o  'document-access-error':\
    \ After accepting a Print-URI or Send-URI\n      request, the Printer could not\
    \ access one or more Documents passed\n      by reference.  This reason is intended\
    \ to cover any file access\n      problem, including 'file does not exist' and\
    \ 'access denied'\n      because of an access control problem.  The Printer MAY\
    \ also\n      indicate the Document access error using the\n      \"job-document-access-errors\"\
    \ Job Status attribute (see\n      Section 5.3.11).  The Printer can (1) abort\
    \ the Job and move the\n      Job to the 'aborted' Job state or (2) print all\
    \ Documents that are\n      accessible and move the Job to the 'completed' Job\
    \ state with the\n      'completed-with-errors' value in the Job's \"job-state-reasons\"\
    \n      attribute.  This value SHOULD be supported if the Print-URI or\n     \
    \ Send-URI operations are supported.\n   o  'submission-interrupted': The Job\
    \ was not completely submitted for\n      some unforeseen reason, such as (1)\
    \ the Printer has crashed before\n      the Job was closed by the Client, (2)\
    \ the Printer or the Document\n      transfer method has crashed in some non-recoverable\
    \ way before the\n      Document data was entirely transferred to the Printer,\
    \ or (3) the\n      Client crashed or failed to close the Job before the time-out\n\
    \      period.  See Section 5.4.31.\n   o  'job-outgoing': The Printer is transmitting\
    \ the Job to the Output\n      Device.\n   o  'job-hold-until-specified': The\
    \ value of the Job's\n      \"job-hold-until\" attribute was specified with a\
    \ time period that\n      is still in the future.  The Job MUST NOT be a candidate\
    \ for\n      processing until this reason is removed and there are no other\n\
    \      reasons to hold the Job.  This value SHOULD be supported if the\n     \
    \ \"job-hold-until\" Job Template attribute is supported.\n   o  'resources-are-not-ready':\
    \ At least one of the resources needed by\n      the Job, such as media, fonts,\
    \ resource objects, etc., is not\n      ready on any of the physical Output Devices\
    \ for which the Job is a\n      candidate.  This condition MAY be detected when\
    \ the Job is\n      accepted, or subsequently while the Job is pending or processing,\n\
    \      depending on implementation.  The Job can remain in its current\n     \
    \ state or be moved to the 'pending-held' state, depending on\n      implementation\
    \ and/or Job scheduling policy.\n   o  'printer-stopped-partly': The value of\
    \ the Printer's\n      \"printer-state-reasons\" attribute contains the value\n\
    \      'stopped-partly'.\n   o  'printer-stopped': The value of the Printer's\
    \ \"printer-state\"\n      attribute is 'stopped'.\n   o  'job-interpreting':\
    \ The Job is in the 'processing' state, but,\n      more specifically, the Printer\
    \ is interpreting the Document data.\n   o  'job-queued': The Job is in the 'processing'\
    \ state, but, more\n      specifically, the Printer has queued the Document data.\n\
    \   o  'job-transforming': The Job is in the 'processing' state, but,\n      more\
    \ specifically, the Printer is interpreting Document data and\n      producing\
    \ another electronic representation.\n   o  'job-queued-for-marker': The Job is\
    \ in any of the 'pending-held',\n      'pending', or 'processing' states, but,\
    \ more specifically, the\n      Printer has completed enough processing of the\
    \ Document to be able\n      to start marking, and the Job is waiting for the\
    \ marker.  Systems\n      that require human intervention to release Jobs using\
    \ the\n      Release-Job operation put the Job into the 'pending-held' Job\n \
    \     state.  Systems that automatically select a Job to use the marker\n    \
    \  put the Job into the 'pending' Job state or keep the Job in the\n      'processing'\
    \ Job state while waiting for the marker, depending on\n      implementation.\
    \  All implementations put the Job into the\n      'processing' state when marking\
    \ does begin.\n   o  'job-printing': The Output Device is marking media.  This\
    \ value is\n      useful for Printers that spend a great deal of time processing\n\
    \      (1) when no marking is happening and they want to show that\n      marking\
    \ is now happening or (2) when the Job is in the process of\n      being canceled\
    \ or aborted while the Job remains in the\n      'processing' state, but the marking\
    \ has not yet stopped so that\n      Impression or sheet counts are still increasing\
    \ for the Job.\n   o  'job-canceled-by-user': The Job was canceled by the owner\
    \ of the\n      Job using the Cancel-Job request, i.e., by a user whose\n    \
    \  authenticated identity is the same as the value of the originating\n      user\
    \ that created the Job, or by some other authorized End User,\n      such as a\
    \ member of the Job owner's security group.  This value\n      SHOULD be supported.\n\
    \   o  'job-canceled-by-operator': The Job was canceled by the Operator\n    \
    \  using the Cancel-Job request, i.e., by a user who has been\n      authenticated\
    \ as having Operator privileges (whether local or\n      remote).  If the security\
    \ policy is to allow anyone to cancel\n      anyone's Job, then this value can\
    \ be used when the Job is canceled\n      by other than the owner of the Job.\
    \  For such a security policy,\n      in effect, everyone is an Operator as far\
    \ as canceling Jobs with\n      IPP is concerned.  This value SHOULD be supported\
    \ if the\n      implementation permits canceling by other than the owner of\n\
    \      the Job.\n   o  'job-canceled-at-device': The Job was canceled by an unidentified\n\
    \      local user, i.e., a user at a console at the device.  This value\n    \
    \  SHOULD be supported if the implementation supports canceling Jobs\n      at\
    \ the console.\n   o  'aborted-by-system': The Job (1) is in the process of being\n\
    \      aborted, (2) has been aborted by the system and placed in the\n      'aborted'\
    \ state, or (3) has been aborted by the system and placed\n      in the 'pending-held'\
    \ state, so that a user or Operator can\n      manually try the Job again.  This\
    \ value SHOULD be supported.\n   o  'unsupported-compression': The Job was aborted\
    \ by the system\n      because the Printer determined, while attempting to decompress\
    \ the\n      Document data, that the compression algorithm is actually not\n \
    \     among those supported by the Printer.  This value MUST be\n      supported,\
    \ since \"compression\" is a REQUIRED operation attribute.\n   o  'compression-error':\
    \ The Job was aborted by the system because the\n      Printer encountered an\
    \ error in the Document data while\n      decompressing it.  If the Printer posts\
    \ this reason, the Document\n      data has already passed any tests that would\
    \ have led to the\n      'unsupported-compression' \"job-state-reasons\" value.\n\
    \   o  'unsupported-document-format': The Job was aborted by the system\n    \
    \  because the Document data's \"document-format\" attribute is not\n      among\
    \ those supported by the Printer.  If the Client specifies\n      \"document-format\"\
    \ as 'application/octet-stream', the Printer MAY\n      abort the Job and post\
    \ this reason even though the\n      \"document-format\" value is among the values\
    \ of the Printer's\n      \"document-format-supported\" Printer attribute but\
    \ not among the\n      auto-sensed Document formats.  This value MUST be supported,\
    \ since\n      \"document-format\" is a REQUIRED operation attribute.\n   o  'document-format-error':\
    \ The Job was aborted by the system because\n      the Printer encountered an\
    \ error in the Document data while\n      processing it.  If the Printer posts\
    \ this reason, the Document\n      data has already passed any tests that would\
    \ have led to the\n      'unsupported-document-format' \"job-state-reasons\" value.\n\
    \   o  'processing-to-stop-point': The requester has issued a Cancel-Job\n   \
    \   operation or the Printer has aborted the Job, but the Printer is\n      still\
    \ performing some actions on the Job until a specified stop\n      point occurs\
    \ or Job termination/cleanup is completed.\n      If the implementation requires\
    \ some measurable time to cancel the\n      Job in the 'processing' or 'processing-stopped'\
    \ Job state, the\n      Printer MUST use this value to indicate that the Printer\
    \ is still\n      performing some actions on the Job while the Job remains in\
    \ the\n      'processing' or 'processing-stopped' state.  Once at the stop\n \
    \     point, the Printer moves the Job from the 'processing' state to\n      the\
    \ 'canceled' or 'aborted' Job state.\n   o  'service-off-line': The Printer is\
    \ offline and accepting no Jobs.\n      All 'pending' Jobs are put into the 'pending-held'\
    \ state.  This\n      situation could be true if the service's or Document transform's\n\
    \      input is impaired or broken.\n   o  'job-completed-successfully': The Job\
    \ completed successfully.\n      This value SHOULD be supported.\n   o  'job-completed-with-warnings':\
    \ The Job completed with warnings.\n      This value SHOULD be supported if the\
    \ implementation detects\n      warnings.\n   o  'job-completed-with-errors':\
    \ The Job completed with errors (and\n      possibly warnings too).  This value\
    \ SHOULD be supported if the\n      implementation detects errors.\n   o  'job-restartable':\
    \ This Job is retained (see Section 5.3.7.2) and\n      is currently able to be\
    \ restarted using the Restart-Job (see\n      Section 4.3.7) or Resubmit-Job [PWG5100.11]\
    \ operation.  If\n      'job-restartable' is a value of the Job's \"job-state-reasons\"\
    \n      attribute, then the Printer MUST accept a Restart-Job operation\n    \
    \  for that Job.  This value SHOULD be supported if the Restart-Job\n      operation\
    \ is supported.\n   o  'queued-in-device': The Job has been forwarded to a device\
    \ or\n      print system that is unable to send back status.  The Printer sets\n\
    \      the Job's \"job-state\" attribute to 'completed' and adds the\n      'queued-in-device'\
    \ value to the Job's \"job-state-reasons\"\n      attribute to indicate that the\
    \ Printer has no additional\n      information about the Job and never will have\
    \ any better\n      information.  See Section 5.3.7.1.\n"
- title: 5.3.9.  job-state-message (text(MAX))
  contents:
  - "5.3.9.  job-state-message (text(MAX))\n   This RECOMMENDED attribute specifies\
    \ information about the\n   \"job-state\" and \"job-state-reasons\" attributes\
    \ in human-readable\n   text.  If the Printer supports this attribute, the Printer\
    \ MUST be\n   able to generate this message in any of the natural languages\n\
    \   identified by the Printer's \"generated-natural-language-supported\"\n   attribute\
    \ (see the \"attributes-natural-language\" operation attribute\n   specified in\
    \ Section 4.1.4.1).\n   The value SHOULD NOT contain additional information not\
    \ contained in\n   the values of the \"job-state\" and \"job-state-reasons\" attributes,\n\
    \   such as interpreter error information.  Otherwise, application\n   programs\
    \ might attempt to parse the (localized) text.  For such\n   additional information,\
    \ such as interpreter errors for application\n   program consumption or specific\
    \ Document access errors, new\n   attributes with 'keyword' values need to be\
    \ developed and registered.\n"
- title: 5.3.10.  job-detailed-status-messages (1setOf text(MAX))
  contents:
  - "5.3.10.  job-detailed-status-messages (1setOf text(MAX))\n   This attribute specifies\
    \ additional detailed and technical\n   information about the Job.  The Printer\
    \ SHOULD localize the message,\n   unless such localization would obscure the\
    \ technical meaning of the\n   message.  Clients MUST NOT attempt to parse the\
    \ value of this\n   attribute.  See \"job-document-access-errors\" (Section 5.3.11)\
    \ for\n   additional errors that a program can process.\n"
- title: 5.3.11.  job-document-access-errors (1setOf text(MAX))
  contents:
  - "5.3.11.  job-document-access-errors (1setOf text(MAX))\n   This attribute provides\
    \ additional information about each Document\n   access error for this Job encountered\
    \ by the Printer after it\n   returned a response to the Print-URI or Send-URI\
    \ operation and\n   subsequently attempted to access document(s) supplied in the\n\
    \   Print-URI or Send-URI operation.  For errors in the protocol that is\n   identified\
    \ by the URI scheme in the \"document-uri\" operation\n   attribute, such as 'http:'\
    \ or 'ftp:', the error code is returned in\n   parentheses, followed by the URI.\
    \  For example:\n   (404) http://www.example.com/filename.pdf\n   Most Internet\
    \ protocols use decimal error codes (unlike IPP), so the\n   ASCII error code\
    \ representation is in decimal.\n"
- title: 5.3.12.  number-of-documents (integer(0:MAX))
  contents:
  - "5.3.12.  number-of-documents (integer(0:MAX))\n   This attribute indicates the\
    \ number of Documents in the Job, i.e.,\n   the number of Send-Document, Send-URI,\
    \ Print-Job, or Print-URI\n   operations that the Printer has accepted for this\
    \ Job, regardless of\n   whether the Document data has reached the Printer.\n\
    \   Implementations supporting the RECOMMENDED Create-Job/Send-Document/\n   Send-URI\
    \ operations SHOULD support this attribute so that Clients can\n   query the number\
    \ of Documents in each Job.\n"
- title: 5.3.13.  output-device-assigned (name(127))
  contents:
  - "5.3.13.  output-device-assigned (name(127))\n   This attribute identifies the\
    \ Output Device to which the Printer has\n   assigned this Job.  If an Output\
    \ Device implements an embedded\n   Printer, the Printer SHOULD set this attribute.\
    \  If a print server\n   implements a Printer, the value MAY be empty (zero-length\
    \ string) or\n   not returned until the Printer assigns an Output Device to the\
    \ Job.\n   This attribute is particularly useful when a single Printer supports\n\
    \   multiple devices (so-called \"fan-out\" -- see Section 3.1).\n"
- title: 5.3.14.  Event Time Job Status Attributes
  contents:
  - "5.3.14.  Event Time Job Status Attributes\n   This section defines the Job Status\
    \ attributes that indicate the time\n   at which certain events occur for a Job.\
    \  If the Job event has not\n   yet occurred, then the Printer MUST return the\
    \ 'no-value' out-of-band\n   value (see the beginning of Section 5.1).  The\n\
    \   \"time-at-xxx (integer)\" attributes represent time as an 'integer'\n   representing\
    \ the number of seconds since the device was powered up\n   (informally called\
    \ \"time ticks\").  The \"date-time-at-xxx (dateTime)\"\n   attributes represent\
    \ time as 'dateTime' representing date and time\n   (including an offset from\
    \ UTC).\n   In order to populate these attributes, the Printer copies the\n  \
    \ value(s) of the following Printer Status attributes at the time the\n   event\
    \ occurs:\n   1.  the value in the Printer's \"printer-up-time\" attribute for\
    \ the\n       \"time-at-xxx (integer)\" attributes.\n   2.  the value in the Printer's\
    \ \"printer-current-time\" attribute for\n       the \"date-time-at-xxx (dateTime)\"\
    \ attributes.\n   If the Printer resets its \"printer-up-time\" attribute to 1\
    \ on\n   power-up (see Section 5.4.29) and has persistent Jobs, then it MUST\n\
    \   change all of those Jobs' \"time-at-xxx (integer)\" (time tick) Job\n   attributes\
    \ whose events have occurred either to:\n   1.  0 to indicate that the event happened\
    \ before the most recent\n       power-up, or\n   2.  the negative of the number\
    \ of seconds before the most recent\n       power-up that the event took place,\
    \ if the Printer knows the\n       exact number of seconds.\n   If a Client queries\
    \ a \"time-at-xxx (integer)\" time tick Job attribute\n   and finds the value\
    \ to be 0 or negative, the Client MUST assume that\n   the event occurred in some\
    \ life other than the Printer's current\n   life.\n   Note: A Printer does not\
    \ change the values of any\n   \"date-time-at-xxx (dateTime)\" Job attributes\
    \ on power-up.\n"
- title: 5.3.14.1.  time-at-creation (integer(MIN:MAX))
  contents:
  - "5.3.14.1.  time-at-creation (integer(MIN:MAX))\n   This REQUIRED attribute indicates\
    \ the time at which the Job was\n   created.\n"
- title: 5.3.14.2.  time-at-processing (integer(MIN:MAX))
  contents:
  - "5.3.14.2.  time-at-processing (integer(MIN:MAX))\n   This REQUIRED attribute\
    \ indicates the time at which the Job first\n   began processing after the Job\
    \ Creation request or the most recent\n   Restart-Job operation.  The out-of-band\
    \ 'no-value' value is returned\n   if the Job has not yet been in the 'processing'\
    \ state (see the\n   beginning of Section 5.1).\n"
- title: 5.3.14.3.  time-at-completed (integer(MIN:MAX))
  contents:
  - "5.3.14.3.  time-at-completed (integer(MIN:MAX))\n   This REQUIRED attribute indicates\
    \ the time at which the Job entered a\n   Terminating State ('completed', 'canceled',\
    \ or 'aborted').  The\n   out-of-band 'no-value' value is returned if the Job\
    \ has not yet\n   completed, been canceled, or aborted (see the beginning of\n\
    \   Section 5.1).\n"
- title: 5.3.14.4.  job-printer-up-time (integer(1:MAX))
  contents:
  - "5.3.14.4.  job-printer-up-time (integer(1:MAX))\n   This REQUIRED Job Status\
    \ attribute indicates the amount of time (in\n   seconds) that the Printer implementation\
    \ has been up and running.\n   This attribute is an alias for the \"printer-up-time\"\
    \ Printer Status\n   attribute (see Section 5.4.29).\n   A Client MAY request\
    \ this attribute in a Get-Job-Attributes or\n   Get-Jobs request and use the value\
    \ returned in combination with other\n   requested Event Time Job Status attributes\
    \ in order to display time\n   attributes to a user.  The difference between this\
    \ attribute and the\n   'integer' value of a \"time-at-xxx\" attribute is the\
    \ number of seconds\n   ago that the \"time-at-xxx\" event occurred.  A Client\
    \ can compute the\n   wall-clock time at which the \"time-at-xxx\" event occurred\
    \ by\n   subtracting this difference from the Client's wall-clock time.\n"
- title: 5.3.14.5.  date-time-at-creation (dateTime|unknown)
  contents:
  - "5.3.14.5.  date-time-at-creation (dateTime|unknown)\n   This RECOMMENDED attribute\
    \ indicates the date and time at which the\n   Job was created.\n"
- title: 5.3.14.6.  date-time-at-processing (dateTime|unknown|no-value)
  contents:
  - "5.3.14.6.  date-time-at-processing (dateTime|unknown|no-value)\n   This RECOMMENDED\
    \ attribute indicates the date and time at which the\n   Job first began processing\
    \ after the Job Creation request or the most\n   recent Restart-Job operation.\n"
- title: 5.3.14.7.  date-time-at-completed (dateTime|unknown|no-value)
  contents:
  - "5.3.14.7.  date-time-at-completed (dateTime|unknown|no-value)\n   This RECOMMENDED\
    \ attribute indicates the date and time at which the\n   Job entered a Terminating\
    \ State ('completed', 'canceled', or\n   'aborted').\n"
- title: 5.3.15.  number-of-intervening-jobs (integer(0:MAX))
  contents:
  - "5.3.15.  number-of-intervening-jobs (integer(0:MAX))\n   This attribute indicates\
    \ the number of Jobs that are \"ahead\" of this\n   Job in the relative chronological\
    \ order of expected time to complete\n   (i.e., the current scheduled order).\
    \  For efficiency, it is only\n   necessary to calculate this value when an operation\
    \ is performed that\n   requests this attribute.\n"
- title: 5.3.16.  job-message-from-operator (text(127))
  contents:
  - "5.3.16.  job-message-from-operator (text(127))\n   This attribute provides a\
    \ message from an Operator, Administrator, or\n   \"intelligent\" process to indicate\
    \ to the End User the reasons for\n   modification or other management action\
    \ taken on a Job.\n"
- title: 5.3.17.  Job Size Attributes
  contents:
  - "5.3.17.  Job Size Attributes\n   This subsection defines Job attributes that\
    \ describe the size of the\n   Job.  These attributes are not intended to be counters;\
    \ they are\n   intended to be useful routing and scheduling information if known.\n\
    \   For these attributes, the Printer can try to compute the value if it\n   is\
    \ not supplied in the Job Creation request.  Even if the Client does\n   supply\
    \ a value for these three attributes in the Job Creation\n   request, the Printer\
    \ MAY choose to change the value if the Printer is\n   able to compute a value\
    \ that is more accurate than the\n   Client-supplied value.  The Printer can determine\
    \ the correct value\n   for these attributes either right at Job submission time\
    \ or at any\n   later point in time.\n"
- title: 5.3.17.1.  job-k-octets (integer(0:MAX))
  contents:
  - "5.3.17.1.  job-k-octets (integer(0:MAX))\n   This attribute specifies the total\
    \ size of the Document(s) in\n   K octets, i.e., in units of 1024 octets requested\
    \ to be processed\n   in the Job.  The value MUST be rounded up, so that a Job\
    \ between\n   1 and 1024 octets MUST be indicated as being 1, 1025 to 2048 MUST\n\
    \   be 2, etc.\n   This value MUST NOT include the multiplicative factors contributed\
    \ by\n   the number of copies specified by the \"copies\" attribute, independent\n\
    \   of whether the device can process multiple copies without making\n   multiple\
    \ passes over the Job or Document data and independent of\n   whether the output\
    \ is collated or not.  Thus, the value is\n   independent of the implementation\
    \ and indicates the size of the\n   Document(s) measured in K octets independent\
    \ of the number of copies.\n   This value also MUST NOT include the multiplicative\
    \ factor due to a\n   copies instruction embedded in the Document data.  If the\
    \ Document\n   data actually includes replications of the Document data, this\
    \ value\n   will include such replication.  In other words, this value is always\n\
    \   the size of the source Document data, rather than a measure of the\n   hardcopy\
    \ output to be produced.\n"
- title: 5.3.17.2.  job-impressions (integer(0:MAX))
  contents:
  - "5.3.17.2.  job-impressions (integer(0:MAX))\n   This RECOMMENDED attribute specifies\
    \ the total size in number of\n   Impressions of the Document(s) being submitted\
    \ (see the definition of\n   \"Impression\" in Section 2.3.4).\n   As with \"\
    job-k-octets\", this value MUST NOT include the\n   multiplicative factors contributed\
    \ by the number of copies specified\n   by the \"copies\" attribute, independent\
    \ of whether the device can\n   process multiple copies without making multiple\
    \ passes over the Job\n   or Document data and independent of whether the output\
    \ is collated or\n   not.  Thus, the value is independent of the implementation\
    \ and\n   reflects the size of the Document(s) measured in Impressions\n   independent\
    \ of the number of copies.\n   As with \"job-k-octets\", this value also MUST\
    \ NOT include the\n   multiplicative factor due to a copies instruction embedded\
    \ in the\n   Document data.  If the Document data actually includes replications\n\
    \   of the Document data, this value will include such replication.  In\n   other\
    \ words, this value is always the number of Impressions in the\n   source Document\
    \ data, rather than a measure of the number of\n   Impressions to be produced\
    \ by the Job.\n"
- title: 5.3.17.3.  job-media-sheets (integer(1:MAX))
  contents:
  - "5.3.17.3.  job-media-sheets (integer(1:MAX))\n   This RECOMMENDED attribute specifies\
    \ the total number of Media Sheets\n   to be produced for this Job.\n   Unlike\
    \ the \"job-k-octets\" and the \"job-impressions\" attributes, this\n   value\
    \ MUST include the multiplicative factors contributed by the\n   number of copies\
    \ specified by the \"copies\" attribute and a 'number of\n   copies' instruction\
    \ embedded in the Document data, if any.  This\n   difference allows the Administrator\
    \ to control the lower and upper\n   bounds of both (1) the size of the Document(s)\
    \ with\n   \"job-k-octets-supported\" and \"job-impressions-supported\" and\n\
    \   (2) the size of the Job with \"job-media-sheets-supported\".\n"
- title: 5.3.18.  Job Progress Attributes
  contents:
  - "5.3.18.  Job Progress Attributes\n   This subsection defines Job attributes that\
    \ describe the progress of\n   the Job.  These attributes are intended to be counters.\
    \  That is, the\n   values for a Job that has not started processing MUST be 0.\
    \  When the\n   Job's \"job-state\" is 'processing' or 'processing-stopped', this\
    \ value\n   is intended to contain the amount of the Job that has been processed\n\
    \   to the time at which the attributes are requested.  When the Job\n   enters\
    \ the 'completed', 'canceled', or 'aborted' states, these values\n   are the final\
    \ values for the Job.\n"
- title: 5.3.18.1.  job-k-octets-processed (integer(0:MAX))
  contents:
  - "5.3.18.1.  job-k-octets-processed (integer(0:MAX))\n   This attribute specifies\
    \ the total number of octets processed in\n   K octets, i.e., in units of 1024\
    \ octets so far.  The value MUST be\n   rounded up, so that a Job between 1 and\
    \ 1024 octets inclusive MUST be\n   indicated as being 1, 1025 to 2048 inclusive\
    \ MUST be 2, etc.\n   For implementations where multiple copies are produced by\
    \ the\n   interpreter with only a single pass over the data, the final value\n\
    \   MUST be equal to the value of the \"job-k-octets\" attribute.  For\n   implementations\
    \ where multiple copies are produced by the interpreter\n   by processing the\
    \ data for each copy, the final value MUST be a\n   multiple of the value of the\
    \ \"job-k-octets\" attribute.\n"
- title: 5.3.18.2.  job-impressions-completed (integer(0:MAX))
  contents:
  - "5.3.18.2.  job-impressions-completed (integer(0:MAX))\n   This RECOMMENDED attribute\
    \ specifies the number of Impressions\n   completed for the Job so far.  For printing\
    \ devices, the Impressions\n   completed includes interpreting, marking, and stacking\
    \ the output.\n"
- title: 5.3.18.3.  job-media-sheets-completed (integer(0:MAX))
  contents:
  - "5.3.18.3.  job-media-sheets-completed (integer(0:MAX))\n   This RECOMMENDED Job\
    \ attribute specifies the number of Media Sheets\n   that have been marked and\
    \ stacked for the entire Job so far, whether\n   those sheets have been processed\
    \ on one side or on both.\n"
- title: 5.3.19.  attributes-charset (charset)
  contents:
  - "5.3.19.  attributes-charset (charset)\n   This REQUIRED attribute is populated\
    \ using the value in the\n   Client-supplied \"attributes-charset\" attribute\
    \ in the Job Creation\n   request.  It identifies the charset (coded character\
    \ set and encoding\n   method) used by any Job attributes with attribute syntaxes\
    \ 'text' and\n   'name' that were supplied by the Client in the Job Creation request.\n\
    \   See Section 4.1.4 for a complete description of the\n   \"attributes-charset\"\
    \ operation attribute.\n   This attribute does not indicate the charset in which\
    \ the 'text' and\n   'name' values are stored internally in the Job.  The internal\
    \ charset\n   is implementation defined.  The Printer MUST convert from whatever\n\
    \   the internal charset is to that being requested in an operation as\n   specified\
    \ in Section 4.1.4.\n"
- title: 5.3.20.  attributes-natural-language (naturalLanguage)
  contents:
  - "5.3.20.  attributes-natural-language (naturalLanguage)\n   This REQUIRED attribute\
    \ is populated using the value in the\n   Client-supplied \"attributes-natural-language\"\
    \ attribute in the Job\n   Creation request.  It identifies the natural language\
    \ used for any\n   Job attributes with attribute syntaxes 'text' and 'name' that\
    \ were\n   supplied by the Client in the Job Creation request.  See\n   Section\
    \ 4.1.4 for a complete description of the\n   \"attributes-natural-language\"\
    \ operation attribute.  See\n   Sections 5.1.2.2 and 5.1.3.2 for how a Natural\
    \ Language Override can\n   be supplied explicitly for each 'text' and 'name'\
    \ attribute value\n   that differs from the value identified by the\n   \"attributes-natural-language\"\
    \ attribute.\n"
- title: 5.4.  Printer Description and Status Attributes
  contents:
  - "5.4.  Printer Description and Status Attributes\n   These attributes form the\
    \ attribute group called\n   \"printer-description\".  Tables 16 and 17 summarize\
    \ these attributes,\n   their syntax, and whether they are REQUIRED for a Printer\
    \ to support.\n   If they are not indicated as REQUIRED, they are OPTIONAL.  The\n\
    \   maximum size in octets for 'text' and 'name' attributes is indicated\n   in\
    \ parentheses.\n   Note: How these attributes are set by an Administrator is outside\
    \ the\n   scope of this document.\n   +-----------------------------+-----------------------+-------------+\n\
    \   | Attribute                   | Syntax                | REQUIRED?   |\n  \
    \ +-----------------------------+-----------------------+-------------+\n   |\
    \ charset-configured          | charset               | REQUIRED    |\n   +-----------------------------+-----------------------+-------------+\n\
    \   | charset-supported           | 1setOf charset        | REQUIRED    |\n  \
    \ +-----------------------------+-----------------------+-------------+\n   |\
    \ color-supported             | boolean               | RECOMMENDED |\n   +-----------------------------+-----------------------+-------------+\n\
    \   | compression-supported       | 1setOf type2 keyword  | REQUIRED    |\n  \
    \ +-----------------------------+-----------------------+-------------+\n   |\
    \ document-format-default     | mimeMediaType         | REQUIRED    |\n   +-----------------------------+-----------------------+-------------+\n\
    \   | document-format-supported   | 1setOf mimeMediaType  | REQUIRED    |\n  \
    \ +-----------------------------+-----------------------+-------------+\n   |\
    \ generated-natural-language- | 1setOf                | REQUIRED    |\n   | supported\
    \                   | naturalLanguage       |             |\n   +-----------------------------+-----------------------+-------------+\n\
    \   | ipp-versions-supported      | 1setOf type2 keyword  | REQUIRED    |\n  \
    \ +-----------------------------+-----------------------+-------------+\n   |\
    \ job-impressions-supported   | rangeOfInteger(0:MAX) | RECOMMENDED |\n   +-----------------------------+-----------------------+-------------+\n\
    \   | job-k-octets-supported      | rangeOfInteger(0:MAX) |             |\n  \
    \ +-----------------------------+-----------------------+-------------+\n   |\
    \ job-media-sheets-supported  | rangeOfInteger(1:MAX) |             |\n   +-----------------------------+-----------------------+-------------+\n\
    \   | multiple-document-jobs-     | boolean               | RECOMMENDED |\n  \
    \ | supported                   |                       |             |\n   +-----------------------------+-----------------------+-------------+\n\
    \   | multiple-operation-time-out | integer(1:MAX)        | RECOMMENDED |\n  \
    \ +-----------------------------+-----------------------+-------------+\n   |\
    \ natural-language-configured | naturalLanguage       | REQUIRED    |\n   +-----------------------------+-----------------------+-------------+\n\
    \   | operations-supported        | 1setOf type2 enum     | REQUIRED    |\n  \
    \ +-----------------------------+-----------------------+-------------+\n   |\
    \ pdl-override-supported      | type2 keyword         | REQUIRED    |\n   +-----------------------------+-----------------------+-------------+\n\
    \   | printer-driver-installer    | uri                   |             |\n  \
    \ +-----------------------------+-----------------------+-------------+\n   |\
    \ printer-info                | text(127)             | RECOMMENDED |\n   +-----------------------------+-----------------------+-------------+\n\
    \   | printer-location            | text(127)             | RECOMMENDED |\n  \
    \ +-----------------------------+-----------------------+-------------+\n   |\
    \ printer-make-and-model      | text(127)             | RECOMMENDED |\n   +-----------------------------+-----------------------+-------------+\n\
    \   | printer-message-from-       | text(127)             |             |\n  \
    \ | operator                    |                       |             |\n   +-----------------------------+-----------------------+-------------+\n\
    \   | printer-more-info-          | uri                   |             |\n  \
    \ | manufacturer                |                       |             |\n   +-----------------------------+-----------------------+-------------+\n\
    \   | printer-name                | name(127)             | REQUIRED    |\n  \
    \ +-----------------------------+-----------------------+-------------+\n   |\
    \ reference-uri-schemes-      | 1setOf uriScheme      |             |\n   | supported\
    \                   |                       |             |\n   +-----------------------------+-----------------------+-------------+\n\
    \           Table 16: Printer Description Attributes (READ-WRITE)\n   +------------------------------+----------------------+-------------+\n\
    \   | Attribute                    | Syntax               | REQUIRED?   |\n  \
    \ +------------------------------+----------------------+-------------+\n   |\
    \ pages-per-minute-color       | integer(0:MAX)       | RECOMMENDED |\n   +------------------------------+----------------------+-------------+\n\
    \   | pages-per-minute             | integer(0:MAX)       | RECOMMENDED |\n  \
    \ +------------------------------+----------------------+-------------+\n   |\
    \ printer-current-time         | dateTime|unknown     | RECOMMENDED |\n   +------------------------------+----------------------+-------------+\n\
    \   | printer-is-accepting-jobs    | boolean              | REQUIRED    |\n  \
    \ +------------------------------+----------------------+-------------+\n   |\
    \ printer-more-info            | uri                  | RECOMMENDED |\n   +------------------------------+----------------------+-------------+\n\
    \   | printer-state                | type1 enum           | REQUIRED    |\n  \
    \ +------------------------------+----------------------+-------------+\n   |\
    \ printer-state-message        | text(MAX)            | RECOMMENDED |\n   +------------------------------+----------------------+-------------+\n\
    \   | printer-state-reasons        | 1setOf type2 keyword | REQUIRED    |\n  \
    \ +------------------------------+----------------------+-------------+\n   |\
    \ printer-up-time              | integer(1:MAX)       | REQUIRED    |\n   +------------------------------+----------------------+-------------+\n\
    \   | printer-uri-supported        | 1setOf uri           | REQUIRED    |\n  \
    \ +------------------------------+----------------------+-------------+\n   |\
    \ queued-job-count             | integer(0:MAX)       | REQUIRED    |\n   +------------------------------+----------------------+-------------+\n\
    \   | uri-authentication-supported | 1setOf type2 keyword | REQUIRED    |\n  \
    \ +------------------------------+----------------------+-------------+\n   |\
    \ uri-security-supported       | 1setOf type2 keyword | REQUIRED    |\n   +------------------------------+----------------------+-------------+\n\
    \              Table 17: Printer Status Attributes (READ-ONLY)\n"
- title: 5.4.1.  printer-uri-supported (1setOf uri)
  contents:
  - "5.4.1.  printer-uri-supported (1setOf uri)\n   This REQUIRED Printer attribute\
    \ contains one or more URIs for the\n   Printer.  It MAY contain more than one\
    \ URI for the Printer.  An\n   Administrator determines a Printer's URIs and configures\
    \ this\n   attribute to contain those URIs by some means outside the scope of\n\
    \   this IPP/1.1 document.  The precise format of the URIs is\n   implementation\
    \ dependent and depends on the protocol.  See\n   Sections 5.4.2 and 5.4.3 for\
    \ a description of the\n   \"uri-authentication-supported\" and \"uri-security-supported\"\
    \n   attributes, both of which are the REQUIRED companion attributes to\n   this\
    \ \"printer-uri-supported\" attribute.  See Sections 3.4 (\"Object\n   Identity\"\
    ) and 9.2 (\"URIs in Operation, Job, and Printer Attributes\")\n   for more information.\n"
- title: 5.4.2.  uri-authentication-supported (1setOf type2 keyword)
  contents:
  - "5.4.2.  uri-authentication-supported (1setOf type2 keyword)\n   This REQUIRED\
    \ Printer attribute MUST have the same cardinality\n   (contain the same number\
    \ of values) as the \"printer-uri-supported\"\n   attribute.  This attribute identifies\
    \ the Client Authentication\n   mechanism associated with each URI listed in the\n\
    \   \"printer-uri-supported\" attribute.  The Printer uses the specified\n   mechanism\
    \ to identify the authenticated user (see Section 9.3).  The\n   \"i-th\" value\
    \ in \"uri-authentication-supported\" corresponds to the\n   \"i-th\" value in\
    \ \"printer-uri-supported\", and it describes the\n   authentication mechanisms\
    \ used by the Printer when accessed via that\n   URI.  See [RFC8010] for more\
    \ details on Client Authentication.\n   The following standard 'keyword' values\
    \ are defined:\n   o  'none': There is no authentication mechanism associated\
    \ with the\n      URI.  The Printer assumes that the authenticated user is\n \
    \     'anonymous'.\n   o  'requesting-user-name': When a Client performs an operation\
    \ whose\n      target is the associated URI, the Printer assumes that the\n  \
    \    authenticated user is specified by the \"requesting-user-name\"\n      operation\
    \ attribute (see Section 9.3).  If the\n      \"requesting-user-name\" attribute\
    \ is absent in a request, the\n      Printer assumes that the authenticated user\
    \ is 'anonymous'.\n   o  'basic': When a Client performs an operation whose target\
    \ is the\n      associated URI, the Printer challenges the Client with HTTP Basic\n\
    \      authentication [RFC7617].  The Printer assumes that the\n      authenticated\
    \ user is the name received via the Basic\n      authentication mechanism.\n \
    \  o  'digest': When a Client performs an operation whose target is the\n    \
    \  associated URI, the Printer challenges the Client with HTTP Digest\n      authentication\
    \ [RFC7616].  The Printer assumes that the\n      authenticated user is the name\
    \ received via the Digest\n      authentication mechanism.\n   o  'certificate':\
    \ When a Client performs an operation whose target is\n      the associated URI,\
    \ the Printer expects the Client to provide an\n      X.509 certificate.  The\
    \ Printer assumes that the authenticated\n      user is one of the textual names\
    \ (Common Name or Subject Alternate\n      Names) contained within the certificate.\n"
- title: 5.4.3.  uri-security-supported (1setOf type2 keyword)
  contents:
  - "5.4.3.  uri-security-supported (1setOf type2 keyword)\n   This REQUIRED Printer\
    \ attribute MUST have the same cardinality\n   (contain the same number of values)\
    \ as the \"printer-uri-supported\"\n   attribute.  This attribute identifies the\
    \ security mechanisms used\n   for each URI listed in the \"printer-uri-supported\"\
    \ attribute.  The\n   \"i-th\" value in \"uri-security-supported\" corresponds\
    \ to the \"i-th\"\n   value in \"printer-uri-supported\", and it describes the\
    \ security\n   mechanisms used for accessing the Printer via that URI.  See\n\
    \   [RFC8010] for more details on security mechanisms.\n   The following standard\
    \ 'keyword' values are defined:\n   o  'none': There are no secure communication\
    \ channel protocols in use\n      for the given URI.\n   o  'tls': TLS [RFC5246]\
    \ [RFC7525] is the secure communications\n      channel protocol in use for the\
    \ given URI.\n   This attribute is orthogonal to the definition of a Client\n\
    \   Authentication mechanism.  Specifically, 'none' does not exclude\n   Client\
    \ Authentication.  See Section 5.4.2.\n   Consider the following example.  For\
    \ a single Printer, an\n   Administrator configures the \"printer-uri-supported\"\
    ,\n   \"uri-authentication-supported\", and \"uri-security-supported\"\n   attributes\
    \ as follows:\n      \"printer-uri-supported\": 'ipp://printer.example.com/ipp/print/\n\
    \      open-use-printer', 'ipp://printer.example.com/ipp/print/\n      restricted-use-printer',\
    \ 'ipps://printer.example.com/ipp/print/\n      private-printer'\n      \"uri-authentication-supported\"\
    : 'none', 'digest', 'basic'\n      \"uri-security-supported\": 'none', 'none',\
    \ 'tls'\n   In this case, one Printer has three URIs.\n   o  For the first URI,\
    \ 'ipp://printer.example.com/ipp/print/\n      open-use-printer', the value 'none'\
    \ in \"uri-security-supported\"\n      indicates that there is no secure channel\
    \ protocol configured to\n      run under HTTP.  The value of 'none' in\n    \
    \  \"uri-authentication-supported\" indicates that all users are\n      'anonymous'.\
    \  There will be no challenge, and the Printer will\n      ignore \"requesting-user-name\"\
    .\n   o  For the second URI, 'ipp://printer.example.com/ipp/print/\n      restricted-use-printer',\
    \ the value 'none' in\n      \"uri-security-supported\" indicates that there is\
    \ no secure channel\n      protocol configured to run under HTTP.  The value of\
    \ 'digest' in\n      \"uri-authentication-supported\" indicates that the Printer\
    \ will\n      issue a challenge and that the Printer will use the name supplied\n\
    \      by the Digest mechanism to determine the authenticated user (see\n    \
    \  Section 9.3).\n   o  For the third URI, 'ipps://printer.example.com/ipp/print/\n\
    \      private-printer', the value 'tls' in \"uri-security-supported\"\n     \
    \ indicates that TLS is being used to secure the channel.  The\n      Client SHOULD\
    \ be prepared to use TLS framing to negotiate an\n      acceptable ciphersuite\
    \ to use while communicating with the\n      Printer.  In this case, the name\
    \ implies the use of a secure\n      communications channel, but the fact is made\
    \ explicit by the\n      presence of the 'tls' value in \"uri-security-supported\"\
    .  The\n      Client does not need to resort to understanding which security\n\
    \      mechanisms it must use by following naming conventions or by\n      parsing\
    \ the URI to determine which security mechanisms are\n      implied.  The value\
    \ of 'basic' in \"uri-authentication-supported\"\n      indicates that the Printer\
    \ will issue a challenge and that the\n      Printer will use the name supplied\
    \ by the Basic mechanism to\n      determine the authenticated user (see Section\
    \ 9.3).  Because this\n      challenge occurs in a TLS session, the channel is\
    \ secure.\n   Some Printers will be configured to support only one channel (either\n\
    \   configured to use TLS access or not) and only one authentication\n   mechanism.\
    \  Such Printers only have one URI listed in the\n   \"printer-uri-supported\"\
    \ attribute.  No matter the configuration of\n   the Printer (whether it has only\
    \ one URI or more than one URI), a\n   Client MUST supply only one URI in the\
    \ target \"printer-uri\" operation\n   attribute.\n"
- title: 5.4.4.  printer-name (name(127))
  contents:
  - "5.4.4.  printer-name (name(127))\n   This REQUIRED Printer attribute contains\
    \ the name of the Printer.  It\n   is a name that is more End User friendly than\
    \ a URI.  An\n   Administrator determines a Printer's name and sets this attribute\
    \ to\n   that name.  This name can be the last part of the Printer's URI, or\n\
    \   it can be unrelated.  In non-US-English locales, a name can contain\n   characters\
    \ that are not allowed in a URI.\n"
- title: 5.4.5.  printer-location (text(127))
  contents:
  - "5.4.5.  printer-location (text(127))\n   This RECOMMENDED Printer attribute identifies\
    \ the location of the\n   device.  This could include things like 'in Room 123A,\
    \ second floor\n   of building XYZ'.\n"
- title: 5.4.6.  printer-info (text(127))
  contents:
  - "5.4.6.  printer-info (text(127))\n   This RECOMMENDED Printer attribute provides\
    \ descriptive information\n   about this Printer.  This could include things like\
    \ 'This printer can\n   be used for printing color transparencies for HR presentations',\
    \ or\n   'Out of courtesy for others, please print only small (1-5 page) jobs\n\
    \   at this printer', or even 'This printer is going away on July 1;\n   please\
    \ find a new printer'.\n"
- title: 5.4.7.  printer-more-info (uri)
  contents:
  - "5.4.7.  printer-more-info (uri)\n   This RECOMMENDED Printer attribute contains\
    \ a URI used to obtain more\n   information about this specific Printer.  For\
    \ example, this could be\n   an HTTP URI referencing an HTML page accessible to\
    \ a web browser.\n   The information obtained from this URI is intended for End\
    \ User\n   consumption.  Features outside the scope of IPP can be accessed from\n\
    \   this URI.  The information is intended to be specific to this Printer\n  \
    \ instance and site-specific services, e.g., Job pricing, services\n   offered,\
    \ and End User assistance.  The device manufacturer can\n   initially populate\
    \ this attribute.\n"
- title: 5.4.8.  printer-driver-installer (uri)
  contents:
  - "5.4.8.  printer-driver-installer (uri)\n   This Printer attribute contains a\
    \ URI to use to locate the driver\n   installer for this Printer.  This attribute\
    \ is intended for\n   consumption by automata.  The mechanics of Printer driver\n\
    \   installation are outside the scope of this document.  The device\n   manufacturer\
    \ can initially populate this attribute.\n"
- title: 5.4.9.  printer-make-and-model (text(127))
  contents:
  - "5.4.9.  printer-make-and-model (text(127))\n   This RECOMMENDED Printer attribute\
    \ identifies the make and model of\n   the device.  The device manufacturer can\
    \ initially populate this\n   attribute.\n"
- title: 5.4.10.  printer-more-info-manufacturer (uri)
  contents:
  - "5.4.10.  printer-more-info-manufacturer (uri)\n   This Printer attribute contains\
    \ a URI used to obtain more information\n   about this type of device.  The information\
    \ obtained from this URI is\n   intended for End User consumption.  Features outside\
    \ the scope of IPP\n   can be accessed from this URI (e.g., latest firmware, upgrades,\n\
    \   Printer drivers, optional features available, details on color\n   support).\
    \  The information is intended to be germane to this Printer\n   without regard\
    \ to site-specific modifications or services.  The\n   device manufacturer can\
    \ initially populate this attribute.\n"
- title: 5.4.11.  printer-state (type1 enum)
  contents:
  - "5.4.11.  printer-state (type1 enum)\n   This REQUIRED Printer attribute identifies\
    \ the current state of the\n   device.  The \"printer-state reasons\" attribute\
    \ augments the\n   \"printer-state\" attribute to give more detailed information\
    \ about the\n   Printer in the given Printer state.\n   A Printer updates this\
    \ attribute continually if asynchronous event\n   notification [RFC3995] is supported.\n\
    \   Standard enum values are defined in Table 18.  Values of\n   \"printer-state-reasons\"\
    , such as 'spool-area-full' and\n   'stopped-partly', MAY be used to provide further\
    \ information.\n   +-------+-----------------------------------------------------------+\n\
    \   | Value | Symbolic Name and Description                             |\n  \
    \ +-------+-----------------------------------------------------------+\n   |\
    \ '3'   | 'idle': Indicates that new Jobs can start processing      |\n   |  \
    \     | without waiting.                                          |\n   +-------+-----------------------------------------------------------+\n\
    \   | '4'   | 'processing': Indicates that Jobs are processing; new     |\n  \
    \ |       | Jobs will wait before processing.                         |\n   +-------+-----------------------------------------------------------+\n\
    \   | '5'   | 'stopped': Indicates that no Jobs can be processed and    |\n  \
    \ |       | intervention is required.                                 |\n   +-------+-----------------------------------------------------------+\n\
    \                   Table 18: \"printer-state\" Enum Values\n"
- title: 5.4.12.  printer-state-reasons (1setOf type2 keyword)
  contents:
  - "5.4.12.  printer-state-reasons (1setOf type2 keyword)\n   This REQUIRED Printer\
    \ attribute supplies additional detail about the\n   device's state.  Some of\
    \ the value definitions indicate conformance\n   requirements; the rest are OPTIONAL.\n\
    \   Each 'keyword' value MAY have a suffix to indicate its level of\n   severity.\
    \  The three levels are 'report' (least severe), 'warning',\n   and 'error' (most\
    \ severe):\n   o  '-report': This suffix indicates that the reason is a \"report\"\
    .\n      An implementation can choose to omit some or all reports.  Some\n   \
    \   reports specify finer granularity about the Printer state; others\n      serve\
    \ as a precursor to a warning.  A report MUST contain nothing\n      that could\
    \ affect the printed output.  Reports correspond to the\n      'other' value for\
    \ the prtAlertSeverityLevel property in the\n      Printer MIB [RFC3805].\n  \
    \ o  '-warning': This suffix indicates that the reason is a \"warning\".\n   \
    \   An implementation can choose to omit some or all warnings.\n      Warnings\
    \ serve as a precursor to an error.  A warning MUST contain\n      nothing that\
    \ prevents a Job from completing, though in some cases\n      the output can be\
    \ of lower quality.  Warnings correspond to the\n      'warning' value for the\
    \ prtAlertSeverityLevel property in the\n      Printer MIB [RFC3805].\n   o  '-error':\
    \ This suffix indicates that the reason is an \"error\".  An\n      implementation\
    \ MUST include all errors.  If this attribute\n      contains one or more errors,\
    \ the Printer MUST be in the 'stopped'\n      state.  Errors correspond to the\
    \ 'critical' value for the\n      prtAlertSeverityLevel property in the Printer\
    \ MIB [RFC3805].\n   If the implementation does not add any one of the three suffixes\
    \ and\n   the value is not 'none', Clients can assume that the reason is an\n\
    \   \"error\" if the Printer is in the 'stopped' state and a \"warning\" if\n\
    \   the Printer is in any other state.\n   If a Printer controls more than one\
    \ Output Device, each value of this\n   attribute MAY apply to one or more of\
    \ the Output Devices.  An error\n   on one Output Device that does not stop the\
    \ Printer as a whole MAY\n   appear as a warning in the Printer's \"printer-state-reasons\"\
    \n   attribute.  If \"printer-state\" for such a Printer has a value of\n   'stopped',\
    \ then there MUST be an error reason among the values in the\n   \"printer-state-reasons\"\
    \ attribute.\n   The following standard 'keyword' values are defined:\n   o  'none':\
    \ There are no reasons.  This state reason is semantically\n      equivalent to\
    \ \"printer-state-reasons\" without any value and MUST\n      be used, since the\
    \ '1setOf' attribute syntax requires at least one\n      value.\n   o  'other':\
    \ The device has detected a condition other than one listed\n      in this document.\n\
    \   o  'connecting-to-device': The Printer has scheduled a Job on the\n      Output\
    \ Device and is in the process of connecting to a shared\n      network Output\
    \ Device (and might not be able to actually start\n      printing the Job for\
    \ an arbitrarily long time, depending on the\n      usage of the Output Device\
    \ by other servers on the network).\n   o  'cover-open': One or more covers on\
    \ the device are open,\n      equivalent to a prtCoverStatus [RFC3805] of 3 (coverOpen).\n\
    \   o  'developer-empty: The device is out of developer.\n   o  'developer-low':\
    \ The device is low on developer.\n   o  'door-open': One or more doors on the\
    \ device are open, equivalent\n      to a prtCoverStatus [RFC3805] of 3 (coverOpen).\n\
    \   o  'fuser-over-temp': The fuser temperature is above normal,\n      equivalent\
    \ to a prtMarkerStatus [RFC3805] of 19 (the sum of\n      \"Unavailable because\
    \ Broken\" (3) and \"Critical Alerts\" (16)).\n   o  'fuser-under-temp': The fuser\
    \ temperature is below normal,\n      equivalent to a prtMarkerStatus [RFC3805]\
    \ of 19 (the sum of\n      \"Unavailable because Broken\" (3) and \"Critical Alerts\"\
    \ (16)).\n   o  'input-tray-missing': One or more input trays are not in the\n\
    \      device, equivalent to a prtInputStatus [RFC3805] of 19 (the sum of\n  \
    \    \"Unavailable because Broken\" (3) and \"Critical Alerts\" (16)).\n   o \
    \ 'interlock-open': One or more interlock devices on the Printer are\n      unlocked,\
    \ equivalent to a prtCoverStatus [RFC3805] of 5\n      (interlockOpen).\n   o\
    \  'interpreter-resource-unavailable': An interpreter resource is\n      unavailable\
    \ (i.e., font, form).\n   o  'marker-supply-empty: The device is out of at least\
    \ one marker\n      supply, e.g., toner, ink, ribbon.\n   o  'marker-supply-low':\
    \ The device is low on at least one marker\n      supply, e.g., toner, ink, ribbon.\n\
    \   o  'marker-waste-almost-full': The device marker supply waste\n      receptacle\
    \ is almost full.\n   o  'marker-waste-full': The device marker supply waste receptacle\
    \ is\n      full.\n   o  'media-empty': At least one input tray is empty, equivalent\
    \ to a\n      prtInputStatus [RFC3805] of 19 (the sum of \"Unavailable because\n\
    \      Broken\" (3) and \"Critical Alerts\" (16)).\n   o  'media-jam': The device\
    \ has a media jam, equivalent to a\n      prtInputStatus [RFC3805] of 19 (the\
    \ sum of \"Unavailable because\n      Broken\" (3) and \"Critical Alerts\" (16)).\n\
    \   o  'media-low': At least one input tray is low on media, equivalent\n    \
    \  to a prtInputStatus [RFC3805] of 8 (Non-Critical Alerts).\n   o  'media-needed':\
    \ A tray has run out of media, equivalent to a\n      prtInputStatus [RFC3805]\
    \ value of 17 (the sum of \"Unavailable and\n      OnRequest\" (1) and \"Critical\
    \ Alerts\" (16)).\n   o  'moving-to-paused': Someone has paused the Printer using\
    \ the\n      Pause-Printer operation (see Section 4.2.7) or other means, but\n\
    \      the device(s) is taking an appreciable time to stop.  Later, when\n   \
    \   all output has stopped, \"printer-state\" becomes 'stopped', and the\n   \
    \   'paused' value replaces the 'moving-to-paused' value in the\n      \"printer-state-reasons\"\
    \ attribute.  This value MUST be supported\n      if the Pause-Printer operation\
    \ is supported and the implementation\n      takes significant time to pause a\
    \ device in certain circumstances.\n   o  'opc-life-over': The optical photo conductor\
    \ is no longer\n      functioning, equivalent to a prtMarkerStatus [RFC3805] of\
    \ 19\n      (the sum of \"Unavailable because Broken\" (3) and\n      \"Critical\
    \ Alerts\" (16)).\n   o  'opc-near-eol': The optical photo conductor is near its\
    \ end of\n      life, equivalent to a prtMarkerStatus [RFC3805] of 8 (Non-Critical\n\
    \      Alerts).\n   o  'output-area-almost-full': One or more output areas are\
    \ almost\n      full, e.g., tray, stacker, collator, equivalent to a\n      prtOutputStatus\
    \ [RFC3805] of 8 (Non-Critical Alerts).\n   o  'output-area-full': One or more\
    \ output areas are full, e.g., tray,\n      stacker, collator, equivalent to a\
    \ prtInputStatus [RFC3805] of 19\n      (the sum of \"Unavailable because Broken\"\
    \ (3) and\n      \"Critical Alerts\" (16)).\n   o  'output-tray-missing': One\
    \ or more output trays are not in the\n      device, equivalent to a prtOutputStatus\
    \ [RFC3805] of 19 (the sum\n      of \"Unavailable because Broken\" (3) and \"\
    Critical Alerts\" (16)).\n   o  'paused': Someone has paused the Printer using\
    \ the Pause-Printer\n      operation (see Section 4.2.7) or other means, and the\
    \ Printer's\n      \"printer-state\" is 'stopped'.  In this state, a Printer MUST\
    \ NOT\n      produce printed output, but it MUST perform other operations\n  \
    \    requested by a Client.  If a Printer had been printing a Job when\n     \
    \ the Printer was paused, the Printer MUST resume printing that Job\n      when\
    \ the Printer is no longer paused and leave no evidence in the\n      printed\
    \ output of such a pause.  This value MUST be supported if\n      the Pause-Printer\
    \ operation is supported.\n   o  'shutdown': Someone has removed a Printer from\
    \ service, and the\n      device can be powered down or physically removed.  In\
    \ this state,\n      a Printer MUST NOT produce printed output, and unless the\
    \ Printer\n      is realized by a print server that is still active, the Printer\n\
    \      MUST perform no other operations requested by a Client, including\n   \
    \   returning this value.  If a Printer had been printing a Job when\n      it\
    \ was shut down, the Printer MAY resume printing that Job when\n      the Printer\
    \ is restarted.  If the Printer resumes printing such a\n      Job, it can leave\
    \ evidence in the printed output of such a\n      shutdown, e.g., the part printed\
    \ before the shutdown can be\n      printed a second time after the shutdown.\n\
    \   o  'spool-area-full': The limit of persistent storage allocated for\n    \
    \  spooling has been reached.  The Printer is temporarily unable to\n      accept\
    \ more Jobs.  The Printer will remove this value when it is\n      able to accept\
    \ more Jobs.  This value SHOULD be used by a\n      non-spooling Printer that\
    \ only accepts one or a small number of\n      Jobs at a time or by a spooling\
    \ Printer that has filled the spool\n      space.\n   o  'stopped-partly': When\
    \ a Printer controls more than one Output\n      Device, this reason indicates\
    \ that one or more Output Devices are\n      stopped.  If the reason is a report,\
    \ fewer than half of the Output\n      Devices are stopped.  If the reason is\
    \ a warning, fewer than all\n      of the Output Devices are stopped.\n   o  'stopping':\
    \ The Printer is in the process of stopping the device\n      and will be stopped\
    \ in a while.  When the device is stopped, the\n      Printer will change the\
    \ Printer's state to 'stopped'.  The\n      'stopping-warning' reason is never\
    \ an error, even for a Printer\n      with a single Output Device.  When an Output\
    \ Device ceases\n      accepting Jobs, the Printer will have this reason while\
    \ the Output\n      Device completes printing.\n   o  'timed-out': The server\
    \ was able to connect to the Output Device\n      (or is always connected) but\
    \ was unable to get a response from the\n      Output Device.\n   o  'toner-empty':\
    \ The device is out of toner.\n   o  'toner-low': The device is low on toner.\n"
- title: 5.4.13.  printer-state-message (text(MAX))
  contents:
  - "5.4.13.  printer-state-message (text(MAX))\n   This RECOMMENDED Printer attribute\
    \ specifies information about the\n   \"printer-state\" and \"printer-state-reasons\"\
    \ attributes in human-\n   readable text.  If the Printer supports this attribute,\
    \ the Printer\n   MUST be able to generate this message in any of the natural\
    \ languages\n   identified by the Printer's \"generated-natural-language-supported\"\
    \n   attribute (see the \"attributes-natural-language\" operation attribute\n\
    \   specified in Section 4.1.4.1).\n"
- title: 5.4.14.  ipp-versions-supported (1setOf type2 keyword)
  contents:
  - "5.4.14.  ipp-versions-supported (1setOf type2 keyword)\n   This REQUIRED attribute\
    \ identifies the IPP version(s) that this\n   Printer supports, including major\
    \ and minor versions, i.e., the\n   version numbers for which this Printer implementation\
    \ meets the\n   conformance requirements.  For version number validation, the\
    \ Printer\n   matches the (2-octet binary) \"version-number\" parameter supplied\
    \ by\n   the Client in each request (see Sections 4.1.1 and 4.1.8) with the\n\
    \   (US-ASCII) 'keyword' values of this attribute.\n   The following standard\
    \ 'keyword' values are defined in this document:\n   o  '1.0': Meets the conformance\
    \ requirements of IPP version 1.0 as\n      specified in RFC 2566 [RFC2566] and\
    \ RFC 2565 [RFC2565], including\n      any extensions registered according to\
    \ Section 7 and any extension\n      defined in this version or any future version\
    \ of the IPP Model and\n      Semantics document (this document) or the IPP Encoding\
    \ and\n      Transport document [RFC8010] following the rules, if any, when the\n\
    \      \"version-number\" parameter is '1.0'.\n   o  '1.1': Meets the conformance\
    \ requirements of IPP version 1.1 as\n      specified in this document and [RFC8010],\
    \ including any extensions\n      registered according to Section 7 and any extension\
    \ defined in any\n      future versions of this document or [RFC8010] following\
    \ the rules,\n      if any, when the \"version-number\" parameter is '1.1'.\n\
    \   Additional values are defined in \"IPP Version 2.0, 2.1, and 2.2\"\n   [PWG5100.12].\n"
- title: 5.4.15.  operations-supported (1setOf type2 enum)
  contents:
  - "5.4.15.  operations-supported (1setOf type2 enum)\n   This REQUIRED Printer attribute\
    \ specifies the set of supported\n   operations for this Printer and contained\
    \ Jobs.\n   This attribute is encoded as any other enum attribute syntax\n   according\
    \ to [RFC8010] as 32 bits.  However, all 32-bit enum values\n   for this attribute\
    \ MUST NOT exceed 0x00007fff, since these same\n   values are also passed in two\
    \ octets in the \"operation-id\" field (see\n   Section 4.1.1) in each Protocol\
    \ request with the two high-order\n   octets omitted in order to indicate the\
    \ operation being performed\n   [RFC8010].\n   Table 19 lists the \"operations-supported\"\
    \ attribute and\n   \"operation-id\" parameter (see Section 4.1.2) enum values\
    \ that are\n   defined in this document.\n   +---------------+---------------------------------------------------+\n\
    \   | Value         | Operation Name                                    |\n  \
    \ +---------------+---------------------------------------------------+\n   |\
    \ 0x0000        | reserved, not used                                |\n   +---------------+---------------------------------------------------+\n\
    \   | 0x0001        | reserved, not used                                |\n  \
    \ +---------------+---------------------------------------------------+\n   |\
    \ 0x0002        | Print-Job                                         |\n   +---------------+---------------------------------------------------+\n\
    \   | 0x0003        | Print-URI                                         |\n  \
    \ +---------------+---------------------------------------------------+\n   |\
    \ 0x0004        | Validate-Job                                      |\n   +---------------+---------------------------------------------------+\n\
    \   | 0x0005        | Create-Job                                        |\n  \
    \ +---------------+---------------------------------------------------+\n   |\
    \ 0x0006        | Send-Document                                     |\n   +---------------+---------------------------------------------------+\n\
    \   | 0x0007        | Send-URI                                          |\n  \
    \ +---------------+---------------------------------------------------+\n   |\
    \ 0x0008        | Cancel-Job                                        |\n   +---------------+---------------------------------------------------+\n\
    \   | 0x0009        | Get-Job-Attributes                                |\n  \
    \ +---------------+---------------------------------------------------+\n   |\
    \ 0x000a        | Get-Jobs                                          |\n   +---------------+---------------------------------------------------+\n\
    \   | 0x000b        | Get-Printer-Attributes                            |\n  \
    \ +---------------+---------------------------------------------------+\n   |\
    \ 0x000c        | Hold-Job                                          |\n   +---------------+---------------------------------------------------+\n\
    \   | 0x000d        | Release-Job                                       |\n  \
    \ +---------------+---------------------------------------------------+\n   |\
    \ 0x000e        | Restart-Job                                       |\n   +---------------+---------------------------------------------------+\n\
    \   | 0x000f        | reserved for a future operation                   |\n  \
    \ +---------------+---------------------------------------------------+\n   |\
    \ 0x0010        | Pause-Printer                                     |\n   +---------------+---------------------------------------------------+\n\
    \   | 0x0011        | Resume-Printer                                    |\n  \
    \ +---------------+---------------------------------------------------+\n   |\
    \ 0x0012        | Purge-Jobs                                        |\n   +---------------+---------------------------------------------------+\n\
    \   | 0x0013-0x3fff | additional registered operations (see the IANA    |\n  \
    \ |               | IPP registry and Section 7.8)                     |\n   +---------------+---------------------------------------------------+\n\
    \   | 0x4000-0x7fff | reserved for vendor extensions (see Section 7.8)  |\n  \
    \ +---------------+---------------------------------------------------+\n    \
    \           Table 19: \"operations-supported\" Enum Values\n"
- title: 5.4.16.  multiple-document-jobs-supported (boolean)
  contents:
  - "5.4.16.  multiple-document-jobs-supported (boolean)\n   This RECOMMENDED Printer\
    \ attribute indicates whether the Printer\n   supports more than one Document\
    \ per Job, i.e., more than one\n   Send-Document operation with Document data\
    \ and/or Send-URI\n   operations.  If the Printer supports the Create-Job and\
    \ Send-Document\n   operations (see Sections 4.2.4 and 4.3.1), it MUST support\
    \ this\n   attribute.\n"
- title: 5.4.17.  charset-configured (charset)
  contents:
  - "5.4.17.  charset-configured (charset)\n   This REQUIRED Printer attribute identifies\
    \ the charset that the\n   Printer has been configured to represent 'text' and\
    \ 'name' Printer\n   attributes that are set by the Operator, Administrator, or\n\
    \   manufacturer, i.e., for \"printer-name\" (name), \"printer-location\"\n  \
    \ (text), \"printer-info\" (text), and \"printer-make-and-model\" (text).\n  \
    \ Therefore, the value of the Printer's \"charset-configured\" attribute\n   MUST\
    \ also be among the values of the Printer's \"charset-supported\"\n   attribute.\n"
- title: 5.4.18.  charset-supported (1setOf charset)
  contents:
  - "5.4.18.  charset-supported (1setOf charset)\n   This REQUIRED Printer attribute\
    \ identifies the set of charsets that\n   the Printer and contained Jobs support\
    \ in attributes with attribute\n   syntaxes 'text' and 'name'.  At least the value\
    \ 'utf-8' MUST be\n   present, since IPP objects MUST support the UTF-8 [RFC3629]\
    \ charset.\n   If a Printer supports a charset, it means that for all attributes\
    \ of\n   syntaxes 'text' and 'name' the Printer MUST (1) accept the charset in\n\
    \   requests and (2) return the charset in responses as needed.\n   If more charsets\
    \ than UTF-8 are supported, the Printer MUST perform\n   charset conversion between\
    \ the charsets as described in\n   Section 4.1.4.2.\n"
- title: 5.4.19.  natural-language-configured (naturalLanguage)
  contents:
  - "5.4.19.  natural-language-configured (naturalLanguage)\n   This REQUIRED Printer\
    \ attribute identifies the natural language that\n   the Printer has been configured\
    \ to represent 'text' and 'name'\n   Printer attributes that are set by the Operator,\
    \ Administrator, or\n   manufacturer, i.e., for \"printer-name\" (name), \"printer-location\"\
    \n   (text), \"printer-info\" (text), and \"printer-make-and-model\" (text).\n\
    \   When returning these Printer attributes, the Printer MAY return them\n   in\
    \ the configured natural language specified by this attribute,\n   instead of\
    \ the natural language requested by the Client in the\n   \"attributes-natural-language\"\
    \ operation attribute.  See\n   Section 4.1.4.1 for the specification of the OPTIONAL\
    \ support for\n   multiple natural languages.  Therefore, the value of the Printer's\n\
    \   \"natural-language-configured\" attribute MUST also be among the values\n\
    \   of the Printer's \"generated-natural-language-supported\" attribute.\n"
- title: 5.4.20.  generated-natural-language-supported (1setOf naturalLanguage)
  contents:
  - "5.4.20.  generated-natural-language-supported (1setOf naturalLanguage)\n   This\
    \ REQUIRED Printer attribute identifies the natural language(s)\n   that the Printer\
    \ and contained Jobs support in attributes with\n   attribute syntaxes 'text'\
    \ and 'name'.  The natural language(s)\n   supported depends on implementation\
    \ and/or configuration.  Unlike\n   charsets, Printers MUST accept requests with\
    \ any natural language or\n   any Natural Language Override whether the natural\
    \ language is\n   supported or not.\n   If a Printer supports a natural language,\
    \ it means that for any of\n   the attributes for which the Printer or Job generates\
    \ messages, i.e.,\n   for the \"job-state-message\" and \"printer-state-message\"\
    \ attributes\n   and operation messages (see Section 4.1.5) in operation responses,\n\
    \   the Printer and Job MUST be able to generate messages in any of the\n   Printer's\
    \ supported natural languages.  See Sections 4.1.4, 5.1.2,\n   and 5.1.3 for the\
    \ definitions of 'text' and 'name' attributes in\n   operation requests and responses.\n\
    \   Note: A Printer that supports multiple natural languages often has\n   separate\
    \ catalogs of messages, one for each natural language\n   supported.\n"
- title: 5.4.21.  document-format-default (mimeMediaType)
  contents:
  - "5.4.21.  document-format-default (mimeMediaType)\n   This REQUIRED Printer attribute\
    \ identifies the Document format that\n   the Printer has been configured to assume\
    \ if the Client does not\n   supply a \"document-format\" operation attribute\
    \ in any of the\n   operation requests that supply Document data.  The standard\
    \ values\n   for this attribute are Internet media types (sometimes called \"\
    MIME\n   media types\").  For further details, see the description of the\n  \
    \ 'mimeMediaType' attribute syntax in Section 5.1.10.\n"
- title: 5.4.22.  document-format-supported (1setOf mimeMediaType)
  contents:
  - "5.4.22.  document-format-supported (1setOf mimeMediaType)\n   This REQUIRED Printer\
    \ attribute identifies the set of Document\n   formats that the Printer and contained\
    \ Jobs can support.  For further\n   details, see the description of the 'mimeMediaType'\
    \ attribute syntax\n   in Section 5.1.10.\n"
- title: 5.4.23.  printer-is-accepting-jobs (boolean)
  contents:
  - "5.4.23.  printer-is-accepting-jobs (boolean)\n   This REQUIRED Printer attribute\
    \ indicates whether the Printer is\n   currently able to accept Jobs, i.e., is\
    \ accepting Print-Job,\n   Print-URI, and Create-Job requests.  If the value is\
    \ 'true', the\n   Printer is accepting Jobs.  If the value is 'false', the Printer\
    \ is\n   currently rejecting any Jobs submitted to it.  In this case, the\n  \
    \ Printer returns the 'server-error-not-accepting-jobs' status-code.\n   This\
    \ value is independent of the \"printer-state\" and\n   \"printer-state-reasons\"\
    \ attributes because its value does not affect\n   the current Job; rather, it\
    \ affects future Jobs.  This attribute,\n   when 'false', causes the Printer to\
    \ reject Jobs even when\n   \"printer-state\" is 'idle' or, when 'true', causes\
    \ the Printer to\n   accept Jobs even when \"printer-state\" is 'stopped'.\n"
- title: 5.4.24.  queued-job-count (integer(0:MAX))
  contents:
  - "5.4.24.  queued-job-count (integer(0:MAX))\n   This REQUIRED Printer attribute\
    \ contains a count of the number of\n   Jobs that are either 'pending', 'processing',\
    \ 'pending-held', or\n   'processing-stopped' and is set by the Printer.\n"
- title: 5.4.25.  printer-message-from-operator (text(127))
  contents:
  - "5.4.25.  printer-message-from-operator (text(127))\n   This Printer attribute\
    \ provides a message from an Operator,\n   Administrator, or \"intelligent\" process\
    \ to indicate to the End User\n   information or status of the Printer, such as\
    \ why it is unavailable\n   or when it is expected to be available.\n"
- title: 5.4.26.  color-supported (boolean)
  contents:
  - "5.4.26.  color-supported (boolean)\n   This RECOMMENDED Printer attribute identifies\
    \ whether the device is\n   capable of any type of color printing at all, including\
    \ highlight\n   color.  All Document instructions having to do with color are\n\
    \   embedded within the Document PDL, although IPP attributes can affect\n   the\
    \ rendering of those colors.\n   Note: End Users are able to determine the nature\
    \ and details of the\n   color support by querying the \"printer-more-info-manufacturer\"\
    \n   Printer attribute.\n"
- title: 5.4.27.  reference-uri-schemes-supported (1setOf uriScheme)
  contents:
  - "5.4.27.  reference-uri-schemes-supported (1setOf uriScheme)\n   This Printer\
    \ attribute specifies which URI schemes are supported for\n   use in the \"document-uri\"\
    \ operation attribute of the Print-URI or\n   Send-URI operations.  If a Printer\
    \ supports these OPTIONAL\n   operations, it MUST support the \"reference-uri-schemes-supported\"\
    \n   Printer attribute with at least the following URI scheme value:\n   o  'ftp':\
    \ The Printer will use an FTP 'get' operation as defined in\n      [RFC959] using\
    \ FTP URLs as defined by [RFC3986].\n   The Printer MAY support other URI schemes\
    \ (see Section 5.1.7).\n"
- title: 5.4.28.  pdl-override-supported (type2 keyword)
  contents:
  - "5.4.28.  pdl-override-supported (type2 keyword)\n   This REQUIRED Printer attribute\
    \ expresses the ability of a particular\n   Printer implementation to override\
    \ Document data instructions with\n   IPP attributes.  The following 'keyword'\
    \ values are defined in this\n   document:\n   o  'attempted': This value indicates\
    \ that the Printer attempts to\n      make the IPP attribute values take precedence\
    \ over embedded\n      instructions in the Document data; however, there is no\
    \ guarantee.\n   o  'not-attempted': This value indicates that the Printer makes\
    \ no\n      attempt to make the IPP attribute values take precedence over\n  \
    \    embedded instructions in the Document data.\n   Appendix C contains a full\
    \ description of how this attribute\n   interacts with and affects other IPP attributes,\
    \ especially the\n   \"ipp-attribute-fidelity\" attribute.\n"
- title: 5.4.29.  printer-up-time (integer(1:MAX))
  contents:
  - "5.4.29.  printer-up-time (integer(1:MAX))\n   This REQUIRED Printer attribute\
    \ indicates the amount of time (in\n   seconds) that this Printer instance has\
    \ been up and running.  The\n   value is a monotonically increasing value starting\
    \ from 1 when the\n   Printer is started up (initialized, booted, etc.).  This\
    \ value is\n   used to populate the Event Time Job Status attributes\n   \"time-at-creation\"\
    , \"time-at-processing\", and \"time-at-completed\"\n   (see Section 5.3.14).\n\
    \   If the Printer goes down at some value 'n' and comes back up, the\n   implementation\
    \ MAY:\n   1.  know how long it has been down and resume at some value greater\n\
    \       than 'n', or\n   2.  restart from 1.\n   In other words, if the device\
    \ or devices that the Printer is\n   representing are restarted or power-cycled,\
    \ the Printer MAY continue\n   counting this value or MAY reset this value to\
    \ 1, depending on\n   implementation.  However, if the Printer software ceases\
    \ running and\n   restarts without knowing the last value for \"printer-up-time\"\
    , the\n   implementation MUST reset this value to 1.  If this value is reset\n\
    \   and the Printer has persistent Jobs, the Printer MUST reset the\n   \"time-at-xxx\
    \ (integer)\" Event Time Job Status attributes according to\n   Section 5.3.14.\
    \  An implementation MAY use both implementation\n   alternatives, depending on\
    \ warm versus cold start, respectively.\n"
- title: 5.4.30.  printer-current-time (dateTime|unknown)
  contents:
  - "5.4.30.  printer-current-time (dateTime|unknown)\n   This RECOMMENDED Printer\
    \ attribute indicates the current date and\n   time.  This value is used to populate\
    \ the Event Time Job Status\n   attributes \"date-time-at-creation\", \"date-time-at-processing\"\
    , and\n   \"date-time-at-completed\" (see Section 5.3.14).\n   This value is obtained\
    \ on a \"best effort\" basis and in practice does\n   not have to be precise in\
    \ order to be useful.  A Printer\n   implementation sets the value of this attribute\
    \ by obtaining the date\n   and time via some implementation-dependent means,\
    \ such as getting the\n   value from a network time server, initialization at\
    \ time of\n   manufacture, or setting by an Administrator.  See [RFC3196] and\n\
    \   [PWG5100.19] for examples.  If an implementation supports this\n   attribute\
    \ and the implementation knows that it has not yet been set,\n   then the implementation\
    \ MUST return the value of this attribute using\n   the out-of-band 'unknown',\
    \ meaning the value is not yet known.  See\n   the beginning of Section 5.1.\n\
    \   The time zone of this attribute might not be the time zone used by\n   people\
    \ located near the Printer or device.  The Client MUST NOT\n   expect the time\
    \ zone of any received 'dateTime' value to be in the\n   time zone of the Client\
    \ or in the time zone of the people located\n   near the Printer.\n   The Client\
    \ SHOULD display any dateTime attributes to the user in the\n   Client's local\
    \ time by converting the 'dateTime' value returned by\n   the server to the time\
    \ zone of the Client, rather than using the time\n   zone returned by the Printer\
    \ in attributes that use the 'dateTime'\n   attribute syntax.\n   Note: Prior\
    \ versions of this document incorrectly specified the use\n   of the 'no-value'\
    \ out-of-band value when the current date and time\n   had not been set.  The\
    \ correct out-of-band value is 'unknown', since\n   there is always an intrinsic\
    \ current date and time.\n"
- title: 5.4.31.  multiple-operation-time-out (integer(1:MAX))
  contents:
  - "5.4.31.  multiple-operation-time-out (integer(1:MAX))\n   This RECOMMENDED Printer\
    \ attribute identifies the minimum time (in\n   seconds) that the Printer waits\
    \ for additional Send-Document or\n   Send-URI operations to follow a still-open\
    \ Job before taking any\n   recovery actions, such as the ones indicated in Section\
    \ 4.3.1.  If\n   the Printer supports the Create-Job and Send-Document operations\
    \ (see\n   Sections 4.2.4 and 4.3.1), it MUST support this attribute.\n   Printers\
    \ SHOULD use a value between '60' and '240' (seconds).  An\n   implementation\
    \ MAY allow an Administrator to set this attribute by\n   means not defined in\
    \ this document.  If so, the Administrator MAY be\n   able to set values outside\
    \ this range.\n"
- title: 5.4.32.  compression-supported (1setOf type2 keyword)
  contents:
  - "5.4.32.  compression-supported (1setOf type2 keyword)\n   This REQUIRED Printer\
    \ attribute identifies the set of supported\n   compression algorithms for Document\
    \ data.  Compression only applies\n   to the Document data; compression does not\
    \ apply to the encoding of\n   the IPP operation itself.  The supported values\
    \ are used to validate\n   the Client-supplied \"compression\" operation attributes\
    \ in Print-Job\n   and Send-Document requests.\n   Standard 'keyword' values defined\
    \ in this document are:\n   o  'none': no compression is used.\n   o  'deflate':\
    \ ZIP inflate/deflate compression technology described in\n      RFC 1951 [RFC1951].\n\
    \   o  'gzip': GNU zip compression technology described in RFC 1952\n      [RFC1952].\n\
    \   o  'compress': UNIX compression technology described in RFC 1977\n      [RFC1977].\n"
- title: 5.4.33.  job-k-octets-supported (rangeOfInteger(0:MAX))
  contents:
  - "5.4.33.  job-k-octets-supported (rangeOfInteger(0:MAX))\n   This Printer attribute\
    \ specifies the upper and lower bounds of total\n   sizes of Jobs in K octets,\
    \ i.e., in units of 1024 octets.  The\n   supported values are used to validate\
    \ the Client-supplied\n   \"job-k-octets\" operation attribute in Job Creation\
    \ requests.  The\n   corresponding Job Description attribute \"job-k-octets\"\
    \ is defined in\n   Section 5.3.17.1.\n"
- title: 5.4.34.  job-impressions-supported (rangeOfInteger(0:MAX))
  contents:
  - "5.4.34.  job-impressions-supported (rangeOfInteger(0:MAX))\n   This RECOMMENDED\
    \ Printer attribute specifies the upper and lower\n   bounds for the number of\
    \ Impressions per Job.  The supported values\n   are used to validate the Client-supplied\
    \ \"job-impressions\" operation\n   attribute in Job Creation requests.  The corresponding\
    \ Job\n   Description attribute \"job-impressions\" is defined in\n   Section\
    \ 5.3.17.2.\n"
- title: 5.4.35.  job-media-sheets-supported (rangeOfInteger(1:MAX))
  contents:
  - "5.4.35.  job-media-sheets-supported (rangeOfInteger(1:MAX))\n   This Printer\
    \ attribute specifies the upper and lower bounds for the\n   number of Media Sheets\
    \ per Job.  The supported values are used to\n   validate the Client-supplied\
    \ \"job-media-sheets\" operation attribute\n   in Job Creation requests.  The\
    \ corresponding Job attribute\n   \"job-media-sheets\" is defined in Section 5.3.17.3.\n"
- title: 5.4.36.  pages-per-minute (integer(0:MAX))
  contents:
  - "5.4.36.  pages-per-minute (integer(0:MAX))\n   This RECOMMENDED Printer attribute\
    \ specifies the nominal number of\n   pages per minute to the nearest whole number\
    \ that can be generated by\n   this Printer (e.g., simplex, black-and-white).\
    \  This attribute is\n   informative, not a service guarantee.  Generally, it\
    \ is the value\n   used in the marketing literature to describe the speed of the\
    \ device.\n   A value of 0 indicates a device that takes more than two minutes\
    \ to\n   process a page.\n"
- title: 5.4.37.  pages-per-minute-color (integer(0:MAX))
  contents:
  - "5.4.37.  pages-per-minute-color (integer(0:MAX))\n   This RECOMMENDED Printer\
    \ attribute specifies the nominal number of\n   pages per minute to the nearest\
    \ whole number that can be generated by\n   this Printer when printing color (e.g.,\
    \ simplex, color).  For\n   purposes of this attribute, the meaning of \"color\"\
    \ is the same as\n   that for the \"color-supported\" attribute; namely, the device\
    \ is\n   capable of any type of color printing at all, including highlight\n \
    \  color.  This attribute is informative, not a service guarantee.\n   Generally,\
    \ it is the value used in the marketing literature to\n   describe the color capabilities\
    \ of this device.\n   A value of 0 indicates a device that takes more than two\
    \ minutes to\n   process a page in color.\n   If a color device has several color\
    \ modes, it MAY use the\n   \"pages-per-minute\" value for this attribute that\
    \ corresponds to the\n   mode that produces the highest number.\n   Printers that\
    \ are black-and-white only MUST NOT support this\n   attribute.  If this attribute\
    \ is present, then the \"color-supported\"\n   Printer Description attribute MUST\
    \ be present and have a 'true'\n   value.\n   The values of the \"pages-per-minute\"\
    \ and \"pages-per-minute-color\"\n   attributes returned by the Get-Printer-Attributes\
    \ operation MAY be\n   affected by the \"document-format\" attribute supplied\
    \ by the Client in\n   the Get-Printer-Attributes request.  In other words, the\n\
    \   implementation MAY have different speeds, depending on the Document\n   format\
    \ being processed.  See Section 4.2.5.1 (\"Get-Printer-Attributes\n   Request\"\
    ).\n"
- title: 6.  Conformance
  contents:
  - "6.  Conformance\n   This section describes conformance issues and requirements.\
    \  This\n   document introduces model entities such as objects, operations,\n\
    \   attributes, attribute syntaxes, and attribute values.  The following\n   sections\
    \ describe the conformance requirements that apply to these\n   model entities.\n"
- title: 6.1.  Client Conformance Requirements
  contents:
  - "6.1.  Client Conformance Requirements\n   This section describes the conformance\
    \ requirements for a Client (see\n   Section 3.1), whether it be:\n   1.  contained\
    \ within software controlled by an End User, e.g.,\n       activated by the \"\
    Print\" menu item in an application that sends\n       IPP requests, or\n   2.\
    \  the print server component that sends IPP requests to either an\n       Output\
    \ Device or another \"downstream\" print server.\n   A conforming Client supports\
    \ all REQUIRED operations as defined in\n   this document.  For each attribute\
    \ included in an operation request,\n   a conforming Client MUST supply a value\
    \ whose type and value syntax\n   conforms to the requirements specified in Sections\
    \ 4 and 5 of this\n   document.  A conforming Client MAY supply any Standards\
    \ Track\n   extensions and/or vendor extensions in an operation request, as long\n\
    \   as the extensions meet the requirements in Section 7.\n   While this document\
    \ does not define conformance requirements for the\n   user interfaces provided\
    \ by IPP Clients or their applications, best\n   practices for user interfaces\
    \ are defined in [PWG5100.19].\n   A Client MUST be able to accept any of the\
    \ attribute syntaxes defined\n   in Section 5.1, including their full range, that\
    \ can be returned to\n   it in a response from a Printer.  In particular, for\
    \ each attribute\n   that the Client supports whose attribute syntax is 'text',\
    \ the Client\n   MUST accept and process both the 'textWithoutLanguage' and\n\
    \   'textWithLanguage' forms.  Similarly, for each attribute that the\n   Client\
    \ supports whose attribute syntax is 'name', the Client MUST\n   accept and process\
    \ both the 'nameWithoutLanguage' and\n   'nameWithLanguage' forms.  For presentation\
    \ purposes, truncation of\n   long attribute values is not recommended.  A recommended\
    \ approach\n   would be for the Client implementation to allow the user to scroll\n\
    \   through long attribute values.\n   A response MAY contain attribute groups,\
    \ attributes, attribute\n   syntaxes, values, and status-code values that the\
    \ Client does not\n   expect.  Therefore, a Client implementation MUST gracefully\
    \ handle\n   such responses and not refuse to interoperate with a conforming\n\
    \   Printer that is returning Standards Track extensions or vendor\n   extensions,\
    \ including attribute groups, attributes, attribute\n   syntaxes, attribute values,\
    \ status-code values, and out-of-band\n   attribute values that conform to Section\
    \ 7.  Clients can choose to\n   ignore any parameters, attribute groups, attributes,\
    \ attribute\n   syntaxes, or values that they do not understand.\n   While a Client\
    \ is sending data to a Printer, it SHOULD do its best to\n   prevent a channel\
    \ from being closed by a lower layer when the channel\n   is blocked (i.e., flow-controlled\
    \ off) for whatever reason, e.g.,\n   'out of paper' or 'Job ahead hasn't freed\
    \ up enough memory'.\n   However, the layer that launched the print submission\
    \ (e.g., an\n   End User) MAY close the channel in order to cancel the Job.  When\
    \ a\n   Client closes a channel, a Printer MAY print all or part of the\n   received\
    \ portion of the Document.  See the Encoding and Transport\n   document [RFC8010]\
    \ for more details.\n   A Client MUST support Client Authentication as defined\
    \ in [RFC8010].\n   A Client SHOULD support Operation Privacy and Server Authentication\n\
    \   as defined in [RFC8010].  See also Section 9 of this document.\n"
- title: 6.2.  IPP Object Conformance Requirements
  contents:
  - "6.2.  IPP Object Conformance Requirements\n   This section specifies the conformance\
    \ requirements for conforming\n   implementations of IPP objects (see Section\
    \ 3).  These requirements\n   apply to an IPP object whether it is:\n   1)  an\
    \ (embedded) device component that accepts IPP requests and\n       controls the\
    \ device, or\n   2)  a component of a print server that accepts IPP requests (where\n\
    \       the print server controls one or more networked devices using IPP\n  \
    \     or other protocols).\n"
- title: 6.2.1.  Objects
  contents:
  - "6.2.1.  Objects\n   Conforming implementations MUST implement all of the model\
    \ objects as\n   defined in this document in the indicated sections:\n   Section\
    \ 3.1 - Printer Object\n   Section 3.2 - Job Object\n"
- title: 6.2.2.  Operations
  contents:
  - "6.2.2.  Operations\n   Conforming IPP object implementations MUST implement all\
    \ of the\n   REQUIRED model operations, including REQUIRED responses, as defined\n\
    \   in this document in the indicated sections.  Table 20 lists the\n   operations\
    \ for a Printer, while Table 21 lists the operations for\n   a Job.\n        \
    \ +----------------------------------------+-------------+\n         | Operation\
    \                              | Conformance |\n         +----------------------------------------+-------------+\n\
    \         | Print-Job (Section 4.2.1)              | REQUIRED    |\n         +----------------------------------------+-------------+\n\
    \         | Print-URI (Section 4.2.2)              | OPTIONAL    |\n         +----------------------------------------+-------------+\n\
    \         | Validate-Job (Section 4.2.3)           | REQUIRED    |\n         +----------------------------------------+-------------+\n\
    \         | Create-Job (Section 4.2.4)             | RECOMMENDED |\n         +----------------------------------------+-------------+\n\
    \         | Get-Printer-Attributes (Section 4.2.5) | REQUIRED    |\n         +----------------------------------------+-------------+\n\
    \         | Get-Jobs (Section 4.2.6)               | REQUIRED    |\n         +----------------------------------------+-------------+\n\
    \         | Pause-Printer (Section 4.2.7)          | OPTIONAL    |\n         +----------------------------------------+-------------+\n\
    \         | Resume-Printer (Section 4.2.8)         | OPTIONAL    |\n         +----------------------------------------+-------------+\n\
    \         | Purge-Jobs (Section 4.2.9)             | SHOULD NOT  |\n         +----------------------------------------+-------------+\n\
    \         Table 20: Conformance Requirements for Printer Operations\n        \
    \   +------------------------------------+-------------+\n           | Operation\
    \                          | Conformance |\n           +------------------------------------+-------------+\n\
    \           | Send-Document (Section 4.3.1)      | RECOMMENDED |\n           +------------------------------------+-------------+\n\
    \           | Send-URI (Section 4.3.2)           | RECOMMENDED |\n           +------------------------------------+-------------+\n\
    \           | Cancel-Job (Section 4.3.3)         | REQUIRED    |\n           +------------------------------------+-------------+\n\
    \           | Get-Job-Attributes (Section 4.3.4) | REQUIRED    |\n           +------------------------------------+-------------+\n\
    \           | Hold-Job (Section 4.3.5)           | OPTIONAL    |\n           +------------------------------------+-------------+\n\
    \           | Release-Job (Section 4.3.6)        | OPTIONAL    |\n           +------------------------------------+-------------+\n\
    \           | Restart-Job (Section 4.3.7)        | SHOULD NOT  |\n           +------------------------------------+-------------+\n\
    \           Table 21: Conformance Requirements for Job Operations\n   Conforming\
    \ IPP objects MUST support all REQUIRED operation attributes\n   and all values\
    \ of such attributes if so indicated in the description.\n   Conforming IPP objects\
    \ MUST ignore all unsupported or unknown\n   operation attributes or Operation\
    \ Attributes groups received in a\n   request but MUST reject a request that contains\
    \ a supported operation\n   attribute that contains an unsupported value.\n  \
    \ Conforming IPP objects MAY return operation responses that contain\n   attribute\
    \ groups, attribute names, attribute syntaxes, attribute\n   values, and status-code\
    \ values that are extensions to this\n   specification.  The additional attribute\
    \ groups MAY occur in any\n   order.\n   The following section on object attributes\
    \ specifies the support\n   required for object attributes.\n"
- title: 6.2.3.  IPP Object Attributes
  contents:
  - "6.2.3.  IPP Object Attributes\n   Conforming IPP objects MUST support all of\
    \ the REQUIRED object\n   attributes, as defined in this document in the indicated\
    \ sections.\n   If an object supports an attribute, it MUST support only those\
    \ values\n   specified in this document or through the extension mechanism\n \
    \  described in Section 6.2.5.  It MAY support any non-empty subset of\n   these\
    \ values.  That is, it MUST support at least one of the specified\n   values and\
    \ at most all of them.\n"
- title: 6.2.4.  Versions
  contents:
  - "6.2.4.  Versions\n   IPP/1.1 Clients MUST meet the conformance requirements for\
    \ Clients\n   specified in this document and [RFC8010].  IPP/1.1 Clients MUST\
    \ be\n   capable of sending requests containing a \"version-number\" parameter\n\
    \   with a value of '1.1'.\n   IPP/1.1 Printer and Job objects MUST meet the conformance\n\
    \   requirements for IPP objects specified in this document and\n   [RFC8010].\
    \  IPP/1.1 objects MUST accept requests containing a\n   \"version-number\" parameter\
    \ with a '1.1' value or reject the request\n   if the operation is not supported.\n\
    \   It is beyond the scope of this specification to mandate conformance\n   with\
    \ other IPP versions.  However, IPP was deliberately designed to\n   make supporting\
    \ different versions easy.  IPP/1.1 Printer\n   implementations MUST:\n   o  decode\
    \ and process any well-formed IPP/1.1 request, and\n   o  respond appropriately\
    \ with a response containing the same\n      \"version-number\" parameter value\
    \ used by the Client in the\n      request.\n   IPP/1.1 Client implementations\
    \ MUST:\n   o  decode and process any well-formed IPP/1.1 response.\n   IPP Clients\
    \ SHOULD try supplying alternate version numbers if they\n   receive a 'server-error-version-not-supported'\
    \ error in a response.\n"
- title: 6.2.5.  Extensions
  contents:
  - "6.2.5.  Extensions\n   A conforming IPP object MAY support Standards Track extensions\
    \ and\n   vendor extensions, as long as the extensions meet the requirements\n\
    \   specified in Section 7.\n   For each attribute included in an operation response,\
    \ a conforming\n   IPP object MUST return a value whose type and value syntax\
    \ conforms\n   to the requirements specified in Sections 4 and 5 of this document.\n"
- title: 6.2.6.  Attribute Syntaxes
  contents:
  - "6.2.6.  Attribute Syntaxes\n   An IPP object MUST be able to accept any of the\
    \ attribute syntaxes\n   defined in Section 5.1, including their full range, in\
    \ any operation\n   in which a Client can supply attributes or the Administrator\
    \ can\n   configure attributes (by means outside the scope of this IPP/1.1\n \
    \  document).  In particular, for each attribute that the IPP object\n   supports\
    \ whose attribute syntax is 'text', the IPP object MUST accept\n   and process\
    \ both the 'textWithoutLanguage' and 'textWithLanguage'\n   forms.  Similarly,\
    \ for each attribute that the IPP object supports\n   whose attribute syntax is\
    \ 'name', the IPP object MUST accept and\n   process both the 'nameWithoutLanguage'\
    \ and 'nameWithLanguage' forms.\n   Furthermore, an IPP object MUST return attributes\
    \ to the Client in\n   operation responses that conform to the syntaxes specified\
    \ in\n   Section 5.1, including their full range if supplied previously by a\n\
    \   Client.\n"
- title: 6.2.7.  Security
  contents:
  - "6.2.7.  Security\n   An IPP Printer implementation SHOULD contain support for\
    \ Client\n   Authentication as defined in the IPP/1.1 Encoding and Transport\n\
    \   document [RFC8010].  A Printer implementation MAY allow an\n   Administrator\
    \ to configure the Printer so that all, some, or none of\n   the users are authenticated.\
    \  See also Section 9 of this document.\n   An IPP Printer implementation SHOULD\
    \ contain support for Operation\n   Privacy and Server Authentication as defined\
    \ in [RFC8010].  A Printer\n   implementation MAY allow an Administrator to configure\
    \ the degree of\n   support for Operation Privacy and Server Authentication. \
    \ See also\n   Section 9 of this document.\n   Security MUST NOT be compromised\
    \ when a Client supplies a lower\n   \"version-number\" parameter in a request.\
    \  For example, if a Printer\n   conforming to IPP/1.1 accepts version '1.0' requests\
    \ and is\n   configured to enforce Digest Authentication, it MUST do the same\
    \ for\n   a version '1.0' request.\n"
- title: 6.3.  Charset and Natural Language Requirements
  contents:
  - "6.3.  Charset and Natural Language Requirements\n   All Clients and IPP objects\
    \ MUST support the 'utf-8' charset as\n   defined in Section 5.1.8.\n   IPP objects\
    \ MUST be able to accept any Client request that correctly\n   uses the \"attributes-natural-language\"\
    \ operation attribute or the\n   Natural Language Override mechanism on any individual\
    \ attribute\n   whether or not the natural language is supported by the IPP object.\n\
    \   If an IPP object supports a natural language, then it MUST be able to\n  \
    \ translate (perhaps by table lookup) all generated 'text' or 'name'\n   attribute\
    \ values into one of the supported languages (see\n   Section 4.1.4).\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   This section describes the procedures for defining\
    \ Standards Track\n   and vendor extensions to this document.  This affects the\
    \ following\n   subregistries of the IANA IPP registry:\n   1.  Objects\n   2.\
    \  Attributes\n   3.  Keyword Attribute Values\n   4.  Enum Attribute Values\n\
    \   5.  Attribute Group Tags\n   6.  Out-of-Band Attribute Value Tags\n   7. \
    \ Attribute Syntaxes\n   8.  Operations\n   9.  Status-Code Values\n   Extensions\
    \ registered for use with IPP are OPTIONAL for Client and\n   IPP object conformance\
    \ to the IPP/1.1 Model and Semantics document\n   (this document).\n   These extension\
    \ procedures are aligned with the guidelines as set\n   forth in \"Guidelines\
    \ for Writing an IANA Considerations Section in\n   RFCs\" [RFC5226].  Appendix\
    \ A describes how to propose new\n   registrations for consideration.  IANA will\
    \ reject registration\n   proposals that leave out required information or do\
    \ not follow the\n   appropriate format described in Appendix A.  The IPP/1.1\
    \ Model and\n   Semantics document can also be extended by an appropriate\n  \
    \ Standards Track document that specifies any of the above extensions.\n   The\
    \ IANA policy (using terms defined in [RFC5226]) for all extensions\n   is Specification\
    \ Required, Expert Review, or First Come First Served\n   as documented in the\
    \ following subsections.  Registrations submitted\n   to IANA are forwarded to\
    \ the IPP Designated Expert(s) who reviews the\n   proposal on a mailing list\
    \ that the Designated Expert(s) keeps for\n   this purpose.  Initially, that list\
    \ is the mailing list used by the\n   PWG IPP WG:\n      ipp@pwg.org\n   The IPP\
    \ Designated Expert(s) is appointed by the IESG Area Director\n   responsible\
    \ for IPP, according to [RFC5226].\n   In addition, the IANA-PRINTER-MIB [RFC3805]\
    \ has been updated to\n   reference this document; the current version is available\
    \ from\n   <http://www.iana.org>.\n"
- title: 7.1.  Object Extensions
  contents:
  - "7.1.  Object Extensions\n   The IANA policy (using terms defined in [RFC5226])\
    \ for object\n   extensions was formerly Expert Review; this document changes\
    \ the\n   policy to Specification Required.\n"
- title: 7.2.  Attribute Extensibility
  contents:
  - "7.2.  Attribute Extensibility\n   Since attribute names are type2 keywords (see\
    \ Section 5.1.4), the\n   IANA policy (using terms defined in [RFC5226]) for attribute\n\
    \   extensions is Expert Review.\n   For vendor attribute extensions, implementors\
    \ SHOULD use keywords\n   with a suitable distinguishing prefix such as 'smiNNN-'\
    \ where NNN is\n   an SMI Private Enterprise Number (PEN) [IANA-PEN].  For example,\
    \ if\n   the company Example Corp. had obtained the SMI PEN 32473, then a\n  \
    \ vendor attribute 'foo' would be 'smi32473-foo'.\n      Note: Prior versions\
    \ of this document recommended using a fully\n      qualified domain name [RFC1035]\
    \ as the prefix (e.g.,\n      'example.com-foo'), and many IPP implementations\
    \ have also used\n      reversed domain names (e.g., 'com.example-foo').  Domain\
    \ names\n      have proven problematic due to the length of some domain names,\n\
    \      parallel use of country-specific domain names (e.g.,\n      'example.co.jp-foo'),\
    \ and changes in ownership of domain names.\n   If a new Printer attribute is\
    \ defined and its values can be affected\n   by a specific Document format, its\
    \ specification needs to contain the\n   following sentence:\n      \"The value\
    \ of this attribute returned in a Get-Printer-Attributes\n      response MAY depend\
    \ on the \"document-format\" attribute supplied\n      (see Section 4.2.5.1) of\
    \ the IPP/1.1 Model and Semantics\n      document.\"\n   If the specification\
    \ does not, then its value in the\n   Get-Printer-Attributes response MUST NOT\
    \ depend on the\n   \"document-format\" attribute supplied in the request.\n \
    \  When a new Job Template attribute is registered, the value of the\n   Printer\
    \ attributes MAY vary with \"document-format\" supplied in the\n   request without\
    \ the specification having to indicate so.\n"
- title: 7.3.  Keyword Extensibility
  contents:
  - "7.3.  Keyword Extensibility\n   The IANA policy (using terms defined in [RFC5226])\
    \ for type1 keyword\n   extensions is Specification Required.  The IANA policy\
    \ for type2\n   keyword extensions is Expert Review.  The IANA policy for vendor\n\
    \   keyword extensions is First Come First Served.  Only attributes using\n  \
    \ the type1 and type2 keyword syntax can be registered in the IANA IPP\n   registry.\n\
    \      Note: The type1 or type2 prefix on the basic attribute syntax is\n    \
    \  provided only to communicate the IANA policy required for\n      registration\
    \ and is not represented in IPP messages.  Both type1\n      and type2 'keyword'\
    \ values are represented using the same\n      'keyword' value tag.\n   For type1\
    \ and type2 keywords, the proposer includes the name of the\n   keyword in the\
    \ registration proposal, and the name is part of the\n   technical review.\n \
    \  For vendor keyword extensions, implementors SHOULD either:\n   a.  follow attribute-specific\
    \ guidance such as the guidance defined\n       in [PWG5101.1], or\n   b.  use\
    \ keywords with a suitable distinguishing prefix, such as\n       'smiNNN-' where\
    \ NNN is an SMI Private Enterprise Number (PEN)\n       [IANA-PEN].\n   For example,\
    \ if the company Example Corp. had obtained the\n   SMI PEN 32473, then a vendor\
    \ keyword 'foo' would be 'smi32473-foo'.\n      Note: Prior versions of this document\
    \ recommended using a fully\n      qualified domain name [RFC1035] as the prefix\
    \ (e.g.,\n      'example.com-foo'), and many IPP implementations have also used\n\
    \      reversed domain names (e.g., 'com.example-foo').  Domain names\n      have\
    \ proven problematic due to the length of some domain names,\n      parallel use\
    \ of country-specific domain names (e.g.,\n      'example.co.jp-foo'), and changes\
    \ in ownership of domain names.\n   When a type2 keyword extension is approved,\
    \ the IPP Designated\n   Expert(s) becomes the point of contact for any future\
    \ maintenance\n   that might be required for that registration.\n"
- title: 7.4.  Enum Extensibility
  contents:
  - "7.4.  Enum Extensibility\n   The IANA policy (using terms defined in [RFC5226])\
    \ for type1 enum\n   extensions is Specification Required.  The IANA policy for\
    \ type2 enum\n   extensions is Expert Review.  The IANA policy for vendor enum\n\
    \   extensions is First Come First Served.  Only attributes using the\n   type1\
    \ and type2 enum syntax can be registered in the IANA IPP\n   registry.\n    \
    \  Note: The type1 or type2 prefix on the basic attribute syntax is\n      provided\
    \ only to communicate the IANA policy required for\n      registration and is\
    \ not represented in IPP messages.  Both type1\n      and type2 enum values are\
    \ represented using the same enum\n      value tag.\n   For vendor enum extensions,\
    \ implementors MUST use values in the\n   reserved integer range, which is 0x40000000\
    \ to 0x7fffffff.\n   Implementors SHOULD consult with the IPP Designated Expert(s)\
    \ to\n   reserve vendor extension value(s) for their usage.\n   When a type1 or\
    \ type2 enum extension is approved, the IPP Designated\n   Expert(s), in consultation\
    \ with IANA, assigns the next available enum\n   number for each enum value.\n\
    \   When a type2 enum extension is approved, the IPP Designated Expert(s)\n  \
    \ becomes the point of contact for any future maintenance that might be\n   required\
    \ for that registration.\n"
- title: 7.5.  Attribute Group Extensibility
  contents:
  - "7.5.  Attribute Group Extensibility\n   The IANA policy (using terms defined\
    \ in [RFC5226]) for attribute\n   group extensions was formerly Expert Review;\
    \ this document changes\n   the policy to Specification Required.\n   For attribute\
    \ groups, the IPP Designated Expert(s), in consultation\n   with IANA, assigns\
    \ the next attribute group tag code in the\n   appropriate range as specified\
    \ in [RFC8010].\n"
- title: 7.6.  Out-of-Band Attribute Value Extensibility
  contents:
  - "7.6.  Out-of-Band Attribute Value Extensibility\n   The IANA policy (using terms\
    \ defined in [RFC5226]) for out-of-band\n   attribute value extensions was formerly\
    \ Expert Review; this document\n   changes the policy to Specification Required.\n\
    \   For out-of-band attribute value tags, the IPP Designated Expert(s),\n   in\
    \ consultation with IANA, assigns the next out-of-band attribute\n   value tag\
    \ code in the appropriate range as specified in [RFC8010].\n"
- title: 7.7.  Attribute Syntax Extensibility
  contents:
  - "7.7.  Attribute Syntax Extensibility\n   The IANA policy (using terms defined\
    \ in [RFC5226]) for attribute\n   syntax extensions was formerly Expert Review;\
    \ this document changes\n   the policy to Specification Required.  The IANA policy\
    \ for vendor\n   attribute syntax extensions (tags 0x40000000 to 0x7fffffff) is\
    \ First\n   Come First Served.  Only attribute syntaxes in the range of\n   0x00000000\
    \ to 0x3fffffff can be registered in the IANA IPP registry.\n   For vendor attribute\
    \ syntax extensions, implementors MUST use values\n   in the reserved integer\
    \ range, which is 0x40000000 to 0x7fffffff.\n   Implementors SHOULD consult with\
    \ the IPP Designated Expert(s) to\n   reserve vendor extension value(s) for their\
    \ usage.\n   For registered attribute syntaxes, the IPP Designated Expert(s),\
    \ in\n   consultation with IANA, assigns the next attribute syntax tag in the\n\
    \   appropriate range as specified in [RFC8010].\n"
- title: 7.8.  Operation Extensibility
  contents:
  - "7.8.  Operation Extensibility\n   The IANA policy (using terms defined in [RFC5226])\
    \ for operation\n   extensions is Expert Review.  The IANA policy for vendor operation\n\
    \   extensions (values 0x4000 to 0x7fff) is First Come First Served.\n   Only\
    \ operation codes in the range of 0x0000 to 0x3fff can be\n   registered in the\
    \ IANA IPP registry.\n   For vendor operation extensions, implementors MUST use\
    \ values in the\n   reserved integer range, which is 0x4000 to 0x7fff.  Implementors\n\
    \   SHOULD consult with the IPP Designated Expert(s) to reserve vendor\n   extension\
    \ value(s) for their usage.\n   For registered operation extensions, the IPP Designated\
    \ Expert(s), in\n   consultation with IANA, assigns the next \"operation-id\"\
    \ code as\n   specified in Section 5.4.15.\n"
- title: 7.9.  Status-Code Extensibility
  contents:
  - "7.9.  Status-Code Extensibility\n   The IANA policy (using terms defined in [RFC5226])\
    \ for status-code\n   extensions is Expert Review.  The IANA policy for vendor\
    \ status-code\n   extensions (codes 0x0n80 to 0x0nff, for n = 0 to 5) is First\
    \ Come\n   First Served.  Only status-code values in the range of 0x0n00 to\n\
    \   0x0n7f can be registered in the IANA IPP registry.\n   The status-code values\
    \ are allocated in ranges as specified in\n   Appendix B for each status-code\
    \ class:\n   \"informational\" - Request received, continuing process\n   \"successful\"\
    \ - The action was successfully received, understood, and\n   accepted\n   \"\
    redirection\" - Further action is taken in order to complete the\n   request\n\
    \   \"client-error\" - The request contains bad syntax or cannot be\n   fulfilled\n\
    \   \"server-error\" - The IPP object failed to fulfill an apparently valid\n\
    \   request\n   For vendor operation status-code extensions, implementors MUST\
    \ use\n   the top of each range (0x0n80 to 0x0nff) as specified in Appendix B.\n\
    \   Implementors SHOULD consult with the IPP Designated Expert(s) to\n   reserve\
    \ vendor extension value(s) for their usage.\n   For registered operation status-code\
    \ values, the IPP Designated\n   Expert(s), in consultation with IANA, assigns\
    \ the next status-code in\n   the appropriate class range as specified in Appendix\
    \ B.\n"
- title: 8.  Internationalization Considerations
  contents:
  - "8.  Internationalization Considerations\n   Some of the attributes have values\
    \ that are text strings and names\n   that are intended for human understanding\
    \ rather than machine\n   understanding (see the 'text' and 'name' attribute syntaxes\
    \ in\n   Sections 5.1.2 and 5.1.3).\n   In each operation request, the Client\n\
    \   o  identifies the charset and natural language of the request that\n     \
    \ affects each supplied 'text' and 'name' attribute value, and\n   o  requests\
    \ the charset and natural language for attributes returned\n      by the IPP object\
    \ in operation responses (as described in\n      Section 4.1.4.1).\n   In addition,\
    \ the Client MAY separately and individually identify the\n   Natural Language\
    \ Override of a supplied 'text' or 'name' attribute\n   using the 'textWithLanguage'\
    \ and 'nameWithLanguage' techniques\n   described in Sections 5.1.2.2 and 5.1.3.2,\
    \ respectively.\n   All IPP objects MUST support the UTF-8 [RFC3629] charset in\
    \ all\n   'text' and 'name' attributes supported.  If an IPP object supports\n\
    \   more than the UTF-8 charset, the object MUST convert between them in\n   order\
    \ to return the requested charset to the Client according to\n   Section 4.1.4.2.\
    \  If an IPP object supports more than one natural\n   language, the object SHOULD\
    \ return 'text' and 'name' values in the\n   natural language requested where\
    \ those values are generated by the\n   Printer (see Section 4.1.4.1).\n   For\
    \ Printers that support multiple charsets and/or multiple natural\n   languages\
    \ in 'text' and 'name' attributes, different Jobs might have\n   been submitted\
    \ in differing charsets and/or natural languages.  All\n   responses MUST be returned\
    \ in the charset requested by the Client.\n   However, the Get-Jobs operation\
    \ uses the 'textWithLanguage' and\n   'nameWithLanguage' mechanisms to identify\
    \ the differing natural\n   languages with each Job attribute returned.\n   The\
    \ Printer also has configured charset and natural language\n   attributes.  The\
    \ Client can query the Printer to determine the list\n   of charsets and natural\
    \ languages supported by the Printer and what\n   the Printer's configured values\
    \ are.  See the \"charset-configured\",\n   \"charset-supported\", \"natural-language-configured\"\
    , and\n   \"generated-natural-language-supported\" Printer Description attributes\n\
    \   for more details.\n   The \"charset-supported\" attribute identifies the supported\
    \ charsets.\n   If a charset is supported, the IPP object MUST be capable of\n\
    \   converting to and from that charset into any other supported charset.\n  \
    \ In many cases, an IPP object will support only one charset, and it\n   MUST\
    \ be the UTF-8 charset.\n   The \"charset-configured\" attribute identifies the\
    \ one supported\n   charset that is the native charset, given the current configuration\n\
    \   of the IPP object (Administrator defined).\n   The \"generated-natural-language-supported\"\
    \ attribute identifies the\n   set of supported natural languages for generated\
    \ messages; it is not\n   related to the set of natural languages that MUST be\
    \ accepted for\n   Client-supplied 'text' and 'name' attributes.  For Client-supplied\n\
    \   'text' and 'name' attributes, an IPP object MUST accept ALL supplied\n   natural\
    \ languages.  For example, if a Client supplies a Job name that\n   is in 'fr-ca'\
    \ but the Printer only generates 'en-us', the Printer\n   object MUST still accept\
    \ the Job name value.\n   The \"natural-language-configured\" attribute identifies\
    \ the one\n   supported natural language for generated messages that is the native\n\
    \   natural language, given the current configuration of the IPP object\n   (Administrator\
    \ defined).\n   Attributes of types 'text' and 'name' are populated from different\n\
    \   sources.  These attributes can be categorized into the following\n   groups\
    \ (depending on the source of the attribute):\n   1.  Some attributes are supplied\
    \ by the Client (e.g., the\n       Client-supplied \"job-name\", \"document-name\"\
    , and\n       \"requesting-user-name\" operation attributes along with the\n \
    \      corresponding Job's \"job-name\" and \"job-originating-user-name\"\n  \
    \     attributes).  The IPP object MUST accept these attributes in any\n     \
    \  natural language no matter what the set of supported languages\n       for\
    \ generated messages.\n   2.  Some attributes are supplied by the Administrator\
    \ (e.g., the\n       Printer's \"printer-name\" and \"printer-location\" attributes).\n\
    \       These can also be in any natural language.  If the natural\n       language\
    \ for these attributes is different than what a Client\n       requests, then\
    \ they MUST be reported using the Natural Language\n       Override mechanism.\n\
    \   3.  Some attributes are supplied by the device manufacturer (e.g.,\n     \
    \  the Printer's \"printer-make-and-model\" attribute).  These can\n       also\
    \ be in any natural language.  If the natural language for\n       these attributes\
    \ is different than what a Client requests, then\n       they MUST be reported\
    \ using the Natural Language Override\n       mechanism.\n   4.  Some attributes\
    \ are supplied by the Operator (e.g., the Job's\n       \"job-message-from-operator\"\
    \ attribute).  These can also be in any\n       natural language.  If the natural\
    \ language for these attributes\n       is different than what a Client requests,\
    \ then they MUST be\n       reported using the Natural Language Override mechanism.\n\
    \   5.  Some attributes are generated by the IPP object (e.g., the Job's\n   \
    \    \"job-state-message\" attribute, the Printer's\n       \"printer-state-message\"\
    \ attribute, and the \"status-message\"\n       operation attribute).  These attributes\
    \ can only be in one of the\n       \"generated-natural-language-supported\" natural\
    \ languages.  If a\n       Client requests some natural language for these attributes\
    \ other\n       than one of the supported values, the IPP object SHOULD respond\n\
    \       using the value of the \"natural-language-configured\" attribute\n   \
    \    (using the Natural Language Override mechanism if needed).\n   The 'text'\
    \ and 'name' attributes specified in this version of this\n   document (additional\
    \ ones will be registered according to the\n   procedures in Section 7) are shown\
    \ in Table 22.\n   +-----------------------------------+-------------------------------+\n\
    \   | Attributes                        | Source                        |\n  \
    \ +-----------------------------------+-------------------------------+\n   |\
    \ Operation Attributes:             |                               |\n   |  \
    \                                 |                               |\n   | job-name\
    \ (name)                   | Client                        |\n   | document-name\
    \ (name)              | Client                        |\n   | requesting-user-name\
    \ (name)       | Client                        |\n   | status-message (text) \
    \            | Job or Printer                |\n   | detailed-status-message (text)\
    \    | Job or Printer (note 1)       |\n   | document-access-error (text)    \
    \  | Job or Printer (note 1)       |\n   |                                   |\
    \                               |\n   | Job Template Attributes:          |  \
    \                             |\n   |                                   |    \
    \                           |\n   | job-hold-until (keyword | name)   | Client\
    \ matches Administrator- |\n   |                                   | configured\
    \                    |\n   | job-hold-until-default (keyword | | Client matches\
    \ Administrator- |\n   | name)                             | configured      \
    \              |\n   | job-hold-until-supported (keyword | Client matches Administrator-\
    \ |\n   | | name)                           | configured                    |\n\
    \   | job-sheets (keyword | name)       | Client matches Administrator- |\n  \
    \ |                                   | configured                    |\n   |\
    \ job-sheets-default (keyword |     | Client matches Administrator- |\n   | name)\
    \                             | configured                    |\n   | job-sheets-supported\
    \ (keyword |   | Client matches Administrator- |\n   | name)                 \
    \            | configured                    |\n   | media (keyword | name)  \
    \          | Client matches Administrator- |\n   |                           \
    \        | configured                    |\n   | media-default (keyword | name)\
    \    | Client matches Administrator- |\n   |                                 \
    \  | configured                    |\n   | media-supported (keyword | name)  |\
    \ Client matches Administrator- |\n   |                                   | configured\
    \                    |\n   | media-ready (keyword | name)      | Client matches\
    \ Administrator- |\n   |                                   | configured      \
    \              |\n   |                                   |                   \
    \            |\n   | Job Description Attributes:       |                     \
    \          |\n   |                                   |                       \
    \        |\n   | job-name (name)                   | Client or Printer       \
    \      |\n   | job-originating-user-name (name)  | Printer                   \
    \    |\n   | job-state-message (text)          | Job or Printer              \
    \  |\n   | output-device-assigned            | Administrator                 |\n\
    \   | (name(127))                       |                               |\n  \
    \ | job-message-from-operator         | Operator                      |\n   |\
    \ (text(127))                       |                               |\n   | job-detailed-status-messages\
    \      | Job or Printer (note 1)       |\n   | (1setOf text)                 \
    \    |                               |\n   | job-document-access-errors      \
    \  | Job or Printer (note 1)       |\n   | (1setOf text)                     |\
    \                               |\n   |                                   |  \
    \                             |\n   | Printer Description Attributes:   |    \
    \                           |\n   |                                   |      \
    \                         |\n   | printer-name (name(127))          | Administrator\
    \                 |\n   | printer-location (text(127))      | Administrator  \
    \               |\n   | printer-info (text(127))          | Administrator    \
    \             |\n   | printer-make-and-model            | Administrator or manufacturer\
    \ |\n   | (text(127))                       |                               |\n\
    \   | printer-state-message (text)      | Printer                       |\n  \
    \ | printer-message-from-operator     | Operator                      |\n   |\
    \ (text(127))                       |                               |\n   +-----------------------------------+-------------------------------+\n\
    \                  Table 22: 'text' and 'name' Attributes\n   Note 1: Neither\
    \ the Printer nor the Client localizes these message\n   attributes, since they\
    \ are intended for use by the Administrator or\n   other experienced technical\
    \ persons.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   It is difficult to anticipate the security risks\
    \ that might exist in\n   any given IPP environment.  For example, if IPP is used\
    \ within a\n   given small business over a private LAN with physical security,\
    \ the\n   risks of exposing Document data can be low enough that the business\n\
    \   will choose not to use encryption on that data.  However, if the\n   connection\
    \ between the Client and the IPP object is over a public\n   network, the Client\
    \ can protect the content of the information during\n   transmission through the\
    \ network with encryption.\n   Furthermore, the value of the information being\
    \ printed can vary from\n   one IPP environment to the next.  Printing payroll\
    \ checks, for\n   example, would have a different value than printing public\n\
    \   information from a file.  There is also the possibility of denial-of-\n  \
    \ service attacks, but denial-of-service attacks against printing\n   resources\
    \ are not well understood, and there are no published\n   precedents regarding\
    \ this scenario.\n   Once the authenticated identity of the requester has been\
    \ supplied to\n   the IPP object, the object uses that identity to enforce any\n\
    \   authorization policy that might be in place.  For example, one site's\n  \
    \ policy might be that only the Job owner is allowed to cancel a Job.\n   The\
    \ details and mechanisms to set up a particular access control\n   policy are\
    \ not part of this document and are typically established\n   via some other type\
    \ of administrative or access control framework.\n   However, there are operation\
    \ status-code values that allow an IPP\n   server to return information back to\
    \ a Client about any potential\n   access control violations for an IPP object.\n\
    \   During a Job Creation request, the Client's identity is recorded in\n   the\
    \ Job object in an implementation-defined attribute.  This\n   information can\
    \ be used to verify a Client's identity for subsequent\n   operations on that\
    \ Job object in order to enforce any access control\n   policy that might be in\
    \ effect.  See Section 9.3 below for more\n   details.  This and other information\
    \ stored in the Job object can\n   also be considered personal or sensitive in\
    \ nature and can be\n   filtered out as part of a configured privacy policy (Section\
    \ 9.4).\n   Since the security levels or the specific threats that an\n   Administrator\
    \ can be concerned with cannot be anticipated, IPP\n   implementations MUST be\
    \ capable of operating with different security\n   mechanisms and security policies\
    \ as required by the individual\n   installation.  Security policies might vary\
    \ from very strong to very\n   weak, or to none at all, and corresponding security\
    \ mechanisms will\n   be required.\n"
- title: 9.1.  Security Scenarios
  contents:
  - "9.1.  Security Scenarios\n   The following sections describe specific security\
    \ attacks for IPP\n   environments.  Where examples are provided, they are illustrative\
    \ of\n   the environment and not an exhaustive set.\n"
- title: 9.1.1.  Client and Server in the Same Security Domain
  contents:
  - "9.1.1.  Client and Server in the Same Security Domain\n   This environment is\
    \ typical of internal networks where traditional\n   office workers print the\
    \ output of personal productivity applications\n   on shared workgroup Printers,\
    \ or where batch applications print their\n   output on large production Printers.\
    \  Although the identity of the\n   user has been authenticated and can be trusted\
    \ in this environment, a\n   user might want to protect the content of a Document\
    \ against such\n   attacks as eavesdropping, replaying, or tampering by using\
    \ a secure\n   transport such as TLS [RFC5246].\n"
- title: 9.1.2.  Client and Server in Different Security Domains
  contents:
  - "9.1.2.  Client and Server in Different Security Domains\n   Examples of this\
    \ environment include printing a Document created by\n   the Client on a publicly\
    \ available Printer, such as at a commercial\n   print shop, or printing a Document\
    \ remotely on a business associate's\n   Printer.  This latter operation is functionally\
    \ equivalent to sending\n   the Document to the business associate as a facsimile.\
    \  Printing\n   sensitive information on a Printer in a different security domain\n\
    \   requires strong security measures.  In this environment,\n   authentication\
    \ of the Printer is required as well as protection\n   against unauthorized use\
    \ of print resources.  Since the Document\n   crosses security domains, protection\
    \ against eavesdropping and\n   Document tampering is also required.  It will\
    \ also be important in\n   this environment to protect Printers against \"spamming\"\
    \ and malicious\n   Document content -- authentication and Document data pre-scanning\
    \ can\n   be used to minimize those threats.\n"
- title: 9.1.3.  Print by Reference
  contents:
  - "9.1.3.  Print by Reference\n   When the Document is not stored on the Client,\
    \ printing can be done\n   by reference.  That is, the print request can contain\
    \ a reference, or\n   pointer, to the Document instead of the actual Document\
    \ itself -- see\n   Sections 4.2.2 and 4.3.2.  Standard methods currently do not\
    \ exist\n   for remote entities to \"assume\" the credentials of a Client for\n\
    \   forwarding requests to a third party.  It is anticipated that print\n   by\
    \ reference will be used to access \"public\" Documents.  Note that\n   sophisticated\
    \ methods for authenticating \"proxies\" are beyond the\n   scope of this IPP/1.1\
    \ document.  Because Printers typically process\n   Jobs serially, print by reference\
    \ is not seen as a serious denial-of-\n   service threat to the referenced servers.\n"
- title: 9.2.  URIs in Operation, Job, and Printer Attributes
  contents:
  - "9.2.  URIs in Operation, Job, and Printer Attributes\n   The \"printer-uri-supported\"\
    \ attribute contains the Printer's URI(s).\n   Its companion attribute, \"uri-security-supported\"\
    , identifies the\n   security mechanism used for each URI listed in the\n   \"\
    printer-uri-supported\" attribute.  For each Printer operation\n   request, a\
    \ Client MUST supply only one URI in the \"printer-uri\"\n   operation attribute.\
    \  In other words, even though the Printer\n   supports more than one URI, the\
    \ Client only interacts with the\n   Printer using one of its URIs.  This duality\
    \ is not needed for Job\n   objects, since Printers will act as the \"factory\"\
    \ for Job objects and\n   a given Printer will, depending on the Printer's security\n\
    \   configuration, generate the correct URI for new Job objects.\n"
- title: 9.3.  URIs for Each Authentication Mechanism
  contents:
  - "9.3.  URIs for Each Authentication Mechanism\n   Each URI has an authentication\
    \ mechanism associated with it.  If the\n   URI is the \"i-th\" element of \"\
    printer-uri-supported\", then the\n   authentication mechanism is the \"i-th\"\
    \ element of\n   \"uri-authentication-supported\".  For a list of possible\n \
    \  authentication mechanisms, see Section 5.4.2.\n   The Printer uses an authentication\
    \ mechanism to determine the name of\n   the user performing an operation.  This\
    \ user is called the\n   \"authenticated user\".  The credibility of authentication\
    \ depends on\n   the mechanism that the Printer uses to obtain the user's name.\
    \  When\n   the authentication mechanism is 'none', all authenticated users are\n\
    \   'anonymous'.\n   During Job Creation requests, the Printer initializes the\
    \ value of\n   the \"job-originating-user-name\" attribute (see Section 5.3.6)\
    \ to be\n   the authenticated user.  The authenticated user in this case is\n\
    \   called the \"Job owner\".\n   If an implementation can be configured to support\
    \ more than one\n   authentication mechanism (see Section 5.4.2), then it MUST\
    \ implement\n   rules for determining equality of authenticated user names that\
    \ have\n   been authenticated via different authentication mechanisms.  One\n\
    \   possible policy is that identical names that are authenticated via\n   different\
    \ mechanisms are different.  For example, a user can cancel\n   his Job only if\
    \ he uses the same authentication mechanism for both\n   Cancel-Job and Print-Job.\
    \  Another policy is that identical names\n   that are authenticated via different\
    \ mechanisms are the same if the\n   authentication mechanism for the later operation\
    \ is not less strong\n   than the authentication mechanism for the earlier Job\
    \ Creation\n   operation.  For example, a user can cancel his Job only if he uses\n\
    \   the same or stronger authentication mechanism for Cancel-Job and\n   Print-Job.\
    \  With this second policy, a Job submitted via\n   'requesting-user-name' authentication\
    \ could be canceled via 'digest'\n   authentication.  With the first policy, the\
    \ Job could not be canceled\n   in this way.\n   A Client is able to determine\
    \ the authentication mechanism used to\n   create a Job.  It is the \"i-th\" value\
    \ of the Printer's\n   \"uri-authentication-supported\" attribute (see Section\
    \ 5.4.2),\n   where \"i\" is the index of the element of the Printer's\n   \"\
    printer-uri-supported\" attribute (see Section 5.4.1) equal to the\n   Job's \"\
    job-printer-uri\" attribute (see Section 5.3.3).\n"
- title: 9.4.  Restricted Queries
  contents:
  - "9.4.  Restricted Queries\n   In many IPP operations, a Client supplies a list\
    \ of attributes to be\n   returned in the response.  For security reasons, an\
    \ IPP object can be\n   configured not to return all attributes (or all values)\
    \ that a Client\n   requests.  The Job attributes returned MAY depend on whether\
    \ the\n   requesting user is the same as the user that submitted the Job.  The\n\
    \   IPP object MAY even return none of the requested attributes.  In such\n  \
    \ cases, the status returned is the same as if the object had returned\n   all\
    \ requested attributes.  The Client cannot tell by such a response\n   whether\
    \ the requested attribute was present or absent in the object.\n"
- title: 9.5.  Operations Performed by Operators and Administrators
  contents:
  - "9.5.  Operations Performed by Operators and Administrators\n   For the three\
    \ Printer operations Pause-Printer, Resume-Printer, and\n   Purge-Jobs (see Sections\
    \ 4.2.7, 4.2.8, and 4.2.9), the requesting\n   user is intended to be an Operator\
    \ or Administrator of the Printer\n   (see Section 1).  Otherwise, the IPP Printer\
    \ MUST reject the\n   operation and return 'client-error-forbidden',\n   'client-error-not-authenticated',\
    \ or 'client-error-not-authorized'\n   as appropriate.  For operations on Jobs,\
    \ the requesting user is\n   intended to be the Job owner or can be an Operator\
    \ or Administrator\n   of the Printer.  The means for authorizing an Operator\
    \ or\n   Administrator of the Printer are not specified in this document.\n"
- title: 9.6.  Queries on Jobs Submitted Using Non-IPP Protocols
  contents:
  - "9.6.  Queries on Jobs Submitted Using Non-IPP Protocols\n   If the device that\
    \ an IPP Printer is representing is able to accept\n   Jobs using other Job submission\
    \ protocols in addition to IPP, such an\n   implementation SHOULD at least allow\
    \ such \"foreign\" Jobs to be\n   queried using Get-Jobs returning \"job-id\"\
    \ and \"job-uri\" as 'unknown'.\n   Such an implementation MAY support all of\
    \ the same IPP Job attributes\n   as for IPP Jobs.  The IPP object returns the\
    \ 'unknown' out-of-band\n   value for any requested attribute of a foreign Job\
    \ that is supported\n   for IPP Jobs but not for foreign Jobs.\n   IPP Printers\
    \ SHOULD also generate \"job-id\" and \"job-uri\" values for\n   such foreign\
    \ Jobs, if possible, so that they can be targets of other\n   IPP operations,\
    \ such as Get-Job-Attributes and Cancel-Job.  Such an\n   implementation also\
    \ needs to deal with the problem of authentication\n   of such foreign Jobs. \
    \ One approach would be to treat all such\n   foreign Jobs as belonging to users\
    \ other than the user of the IPP\n   Client.  Another approach would be for the\
    \ foreign Job to belong to\n   'anonymous' -- then only authenticated Operators\
    \ or Administrators of\n   the IPP Printer could query the foreign Jobs with an\
    \ IPP request.\n   Alternatively, if the security policy is to allow users to\
    \ query\n   other users' Jobs, then the foreign Jobs would also be visible to\
    \ an\n   End User IPP Client using Get-Jobs and Get-Job-Attributes.\n"
- title: 10.  Changes since RFC 2911
  contents:
  - "10.  Changes since RFC 2911\n   The following changes have been made since RFC\
    \ 2911:\n   o  Errata ID 364: Fixed range of \"redirection\" status-code values\
    \ (to\n      0x03xx).\n   o  Errata ID 694: Fixed range of vendor status-code\
    \ values (0x0n80 to\n      0x0nff).\n   o  Errata ID 3072: Reworded multiple-document-handling\
    \ definition,\n      since it also applies to Jobs with a single Document and\
    \ is the\n      only interoperable way to request uncollated copies.\n   o  Errata\
    \ ID 3365: Fixed bad 'nameWithLanguage' maximum length by\n      referencing the\
    \ 'nameWithoutLanguage' section (i.e.,\n      Section 5.1.3.1).\n   o  Errata\
    \ ID 4173: Fixed range of vendor operation codes (0x4000 to\n      0x7fff).\n\
    \   o  Updated obsoleted RFC references.\n   o  Changed the IPP/1.1 Implementor's\
    \ Guide reference to RFC 3196.\n   o  Updated Create-Job, Send-Document, and Send-URI\
    \ to RECOMMENDED.\n   o  Incorporated 'collection' attribute content from RFC\
    \ 3382.\n   o  Obsoleted all attributes and values defined in RFC 3381, as they\n\
    \      do not interact well with the \"finishings\" attribute and have\n     \
    \ never been widely implemented.\n   o  Deprecated the Purge-Jobs and Restart-Job\
    \ operations, which\n      destroy accounting information.\n   o  Dropped type3\
    \ registration procedures.\n   o  Changed the vendor attribute and keyword naming\
    \ recommendations to\n      use SMI Private Enterprise Numbers (\"smiNNN-foo\"\
    ) instead of\n      domain names.\n   o  Split READ-ONLY Job Description and Printer\
    \ Description attributes\n      into Job Status and Printer Status attributes\
    \ to match the current\n      IANA IPP registry organization.\n   o  Referenced\
    \ all IETF and PWG IPP standards.\n   o  Updated OPTIONAL operations, attributes,\
    \ and values to RECOMMENDED\n      for consistency with IPP 2.0, IPP Everywhere,\
    \ and the IPP\n      Implementor's Guide v2.0.\n   o  Removed the appendix on\
    \ media names.  Readers are directed to\n      \"PWG Media Standardized Names\
    \ 2.0 (MSN2)\" [PWG5101.1].\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [ASME-Y14.1M]\n              ASME Y14.1M-2012,\
    \ \"Metric Drawing Sheet Size and Format\",\n              March 2013.\n   [ISO10175]\
    \ ISO/IEC 10175, \"Information technology -- Text and office\n              systems\
    \ -- Document Printing Application (DPA) -- Part 1:\n              Abstract service\
    \ definition and procedures\",\n              September 1996.\n   [ISO10646] ISO/IEC\
    \ 10646:2014, JTC1/SC2, \"Information technology --\n              Universal Coded\
    \ Character Set (UCS)\", September 2014.\n   [ISO8859-1]\n              ISO/IEC\
    \ 8859-1:1998, \"Information technology -- 8-bit\n              single-byte coded\
    \ graphic character sets -- Part 1: Latin\n              alphabet No. 1\", April\
    \ 1998.\n   [PWG5100.1]\n              Sweet, M., \"IPP Finishings 2.0 (FIN)\"\
    , December 2014,\n              <http://ftp.pwg.org/pub/pwg/candidates/\n    \
    \          cs-ippfinishings20-20141219-5100.1.pdf>.\n   [PWG5100.11]\n       \
    \       Hastings, T. and D. Fullman, \"Internet Printing Protocol\n          \
    \    (IPP): Job and Printer Extensions -- Set 2 (JPS2)\",\n              October\
    \ 2010, <http://ftp.pwg.org/pub/pwg/candidates/\n              cs-ippjobprinterext10-20101030-5100.11.pdf>.\n\
    \   [PWG5100.12]\n              Sweet, M. and I. McDonald, \"IPP Version 2.0,\
    \ 2.1, and\n              2.2\", October 2015, <http://ftp.pwg.org/pub/pwg/standards/\n\
    \              std-ipp20-20151030-5100.12.pdf>.\n   [PWG5100.13]\n           \
    \   Sweet, M., McDonald, I., and P. Zehler, \"IPP: Job and\n              Printer\
    \ Extensions -- Set 3 (JPS3)\", July 2012,\n              <http://ftp.pwg.org/pub/pwg/candidates/\n\
    \              cs-ippjobprinterext3v10-20120727-5100.13.pdf>.\n   [PWG5100.14]\n\
    \              Sweet, M., McDonald, I., Mitchell, A., and J. Hutchings,\n    \
    \          \"IPP Everywhere\", January 2013,\n              <http://ftp.pwg.org/pub/pwg/candidates/\n\
    \              cs-ippeve10-20130128-5100.14.pdf>.\n   [PWG5100.15]\n         \
    \     Sweet, M., \"IPP FaxOut Service\", June 2014,\n              <http://ftp.pwg.org/pub/pwg/candidates/\n\
    \              cs-ippfaxout10-20140618-5100.15.pdf>.\n   [PWG5100.16]\n      \
    \        Sweet, M., \"IPP Transaction-Based Printing Extensions\",\n         \
    \     November 2013, <http://ftp.pwg.org/pub/pwg/candidates/\n              cs-ipptrans10-20131108-5100.16.pdf>.\n\
    \   [PWG5100.17]\n              Zehler, P. and M. Sweet, \"IPP Scan Service (SCAN)\"\
    ,\n              September 2014, <http://ftp.pwg.org/pub/pwg/candidates/\n   \
    \           cs-ippscan10-20140918-5100.17.pdf>.\n   [PWG5100.18]\n           \
    \   Sweet, M. and I. McDonald, \"IPP Shared Infrastructure\n              Extensions\
    \ (INFRA)\", June 2015,\n              <http://ftp.pwg.org/pub/pwg/candidates/\n\
    \              cs-ippinfra10-20150619-5100.18.pdf>.\n   [PWG5100.19]\n       \
    \       Kennedy, S., \"IPP Implementor's Guide v2.0 (IG)\",\n              August\
    \ 2015, <http://ftp.pwg.org/pub/pwg/candidates/\n              cs-ippig20-20150821-5100.19.pdf>.\n\
    \   [PWG5100.2]\n              Hastings, T. and R. Bergman, \"Internet Printing\
    \ Protocol\n              (IPP): \"output-bin\" attribute extension\", February\
    \ 2001,\n              <http://ftp.pwg.org/pub/pwg/candidates/\n             \
    \ cs-ippoutputbin10-20010207-5100.2.pdf>.\n   [PWG5100.3]\n              Ocke,\
    \ K. and T. Hastings, \"Internet Printing Protocol\n              (IPP): Production\
    \ Printing Attributes -- Set1\",\n              February 2001, <http://ftp.pwg.org/pub/pwg/candidates/\n\
    \              cs-ippprodprint10-20010212-5100.3.pdf>.\n   [PWG5100.5]\n     \
    \         Carney, D., Hastings, T., and P. Zehler, \"Standard for The\n      \
    \        Internet Printing Protocol (IPP): Document Object\",\n              October\
    \ 2003, <http://ftp.pwg.org/pub/pwg/candidates/\n              cs-ippdocobject10-20031031-5100.5.pdf>.\n\
    \   [PWG5100.6]\n              Zehler, P., Herriot, R., and K. Ocke, \"Standard\
    \ for The\n              Internet Printing Protocol (IPP): Page Overrides\",\n\
    \              October 2003, <http://ftp.pwg.org/pub/pwg/candidates/\n       \
    \       cs-ipppageoverride10-20031031-5100.6.pdf>.\n   [PWG5100.7]\n         \
    \     Hastings, T. and P. Zehler, \"Standard for The Internet\n              Printing\
    \ Protocol (IPP): Job Extensions\", October 2003,\n              <http://ftp.pwg.org/pub/pwg/candidates/\n\
    \              cs-ippjobext10-20031031-5100.7.pdf>.\n   [PWG5100.8]\n        \
    \      Carney, D. and H. Lewis, \"Standard for Internet Printing\n           \
    \   Protocol (IPP): \"-actual\" attributes\", March 2003,\n              <http://ftp.pwg.org/pub/pwg/candidates/\n\
    \              cs-ippactuals10-20030313-5100.8.pdf>.\n   [PWG5100.9]\n       \
    \       McDonald, I. and C. Whittle, \"Internet Printing Protocol\n          \
    \    (IPP): Printer State Extensions v1.0\", July 2009,\n              <http://ftp.pwg.org/pub/pwg/candidates/\n\
    \              cs-ippstate10-20090731-5100.9.pdf>.\n   [PWG5101.1]\n         \
    \     Sweet, M., Bergman, R., and T. Hastings, \"PWG Media\n              Standardized\
    \ Names 2.0 (MSN2)\", March 2013,\n              <http://ftp.pwg.org/pub/pwg/candidates/\n\
    \              cs-pwgmsn20-20130328-5101.1.pdf>.\n   [RFC20]    Cerf, V., \"ASCII\
    \ format for network interchange\", STD 80,\n              RFC 20, DOI 10.17487/RFC0020,\
    \ October 1969,\n              <http://www.rfc-editor.org/info/rfc20>.\n   [RFC793]\
    \   Postel, J., \"Transmission Control Protocol\", STD 7,\n              RFC 793,\
    \ DOI 10.17487/RFC0793, September 1981,\n              <http://www.rfc-editor.org/info/rfc793>.\n\
    \   [RFC1035]  Mockapetris, P., \"Domain names - implementation and\n        \
    \      specification\", STD 13, RFC 1035, DOI 10.17487/RFC1035,\n            \
    \  November 1987, <http://www.rfc-editor.org/info/rfc1035>.\n   [RFC1951]  Deutsch,\
    \ P., \"DEFLATE Compressed Data Format Specification\n              version 1.3\"\
    , RFC 1951, DOI 10.17487/RFC1951, May 1996,\n              <http://www.rfc-editor.org/info/rfc1951>.\n\
    \   [RFC1952]  Deutsch, P., \"GZIP file format specification version 4.3\",\n\
    \              RFC 1952, DOI 10.17487/RFC1952, May 1996,\n              <http://www.rfc-editor.org/info/rfc1952>.\n\
    \   [RFC1977]  Schryver, V., \"PPP BSD Compression Protocol\", RFC 1977,\n   \
    \           DOI 10.17487/RFC1977, August 1996,\n              <http://www.rfc-editor.org/info/rfc1977>.\n\
    \   [RFC2046]  Freed, N. and N. Borenstein, \"Multipurpose Internet Mail\n   \
    \           Extensions (MIME) Part Two: Media Types\", RFC 2046,\n           \
    \   DOI 10.17487/RFC2046, November 1996,\n              <http://www.rfc-editor.org/info/rfc2046>.\n\
    \   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n        \
    \      Requirement Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119,\
    \ March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n   [RFC2818]\
    \  Rescorla, E., \"HTTP Over TLS\", RFC 2818,\n              DOI 10.17487/RFC2818,\
    \ May 2000,\n              <http://www.rfc-editor.org/info/rfc2818>.\n   [RFC3196]\
    \  Hastings, T., Manros, C., Zehler, P., Kugler, C., and H.\n              Holst,\
    \ \"Internet Printing Protocol/1.1: Implementor's\n              Guide\", RFC\
    \ 3196, DOI 10.17487/RFC3196, November 2001,\n              <http://www.rfc-editor.org/info/rfc3196>.\n\
    \   [RFC3380]  Hastings, T., Herriot, R., Kugler, C., and H. Lewis,\n        \
    \      \"Internet Printing Protocol (IPP): Job and Printer Set\n             \
    \ Operations\", RFC 3380, DOI 10.17487/RFC3380,\n              September 2002,\
    \ <http://www.rfc-editor.org/info/rfc3380>.\n   [RFC3510]  Herriot, R. and I.\
    \ McDonald, \"Internet Printing\n              Protocol/1.1: IPP URL Scheme\"\
    , RFC 3510,\n              DOI 10.17487/RFC3510, April 2003,\n              <http://www.rfc-editor.org/info/rfc3510>.\n\
    \   [RFC3629]  Yergeau, F., \"UTF-8, a transformation format of\n            \
    \  ISO 10646\", STD 63, RFC 3629, DOI 10.17487/RFC3629,\n              November\
    \ 2003, <http://www.rfc-editor.org/info/rfc3629>.\n   [RFC3805]  Bergman, R.,\
    \ Lewis, H., and I. McDonald, \"Printer MIB v2\",\n              RFC 3805, DOI\
    \ 10.17487/RFC3805, June 2004,\n              <http://www.rfc-editor.org/info/rfc3805>.\n\
    \   [RFC3986]  Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform\n   \
    \           Resource Identifier (URI): Generic Syntax\", STD 66,\n           \
    \   RFC 3986, DOI 10.17487/RFC3986, January 2005,\n              <http://www.rfc-editor.org/info/rfc3986>.\n\
    \   [RFC3995]  Herriot, R. and T. Hastings, \"Internet Printing Protocol\n   \
    \           (IPP): Event Notifications and Subscriptions\", RFC 3995,\n      \
    \        DOI 10.17487/RFC3995, March 2005,\n              <http://www.rfc-editor.org/info/rfc3995>.\n\
    \   [RFC3996]  Herriot, R., Hastings, T., and H. Lewis, \"Internet\n         \
    \     Printing Protocol (IPP): The 'ippget' Delivery Method for\n            \
    \  Event Notifications\", RFC 3996, DOI 10.17487/RFC3996,\n              March\
    \ 2005, <http://www.rfc-editor.org/info/rfc3996>.\n   [RFC3998]  Kugler, C., Lewis,\
    \ H., and T. Hastings, Ed., \"Internet\n              Printing Protocol (IPP):\
    \ Job and Printer Administrative\n              Operations\", RFC 3998, DOI 10.17487/RFC3998,\
    \ March 2005,\n              <http://www.rfc-editor.org/info/rfc3998>.\n   [RFC5051]\
    \  Crispin, M., \"i;unicode-casemap - Simple Unicode Collation\n             \
    \ Algorithm\", RFC 5051, DOI 10.17487/RFC5051, October 2007,\n              <http://www.rfc-editor.org/info/rfc5051>.\n\
    \   [RFC5234]  Crocker, D., Ed., and P. Overell, \"Augmented BNF for\n       \
    \       Syntax Specifications: ABNF\", STD 68, RFC 5234,\n              DOI 10.17487/RFC5234,\
    \ January 2008,\n              <http://www.rfc-editor.org/info/rfc5234>.\n   [RFC5246]\
    \  Dierks, T. and E. Rescorla, \"The Transport Layer Security\n              (TLS)\
    \ Protocol Version 1.2\", RFC 5246,\n              DOI 10.17487/RFC5246, August\
    \ 2008,\n              <http://www.rfc-editor.org/info/rfc5246>.\n   [RFC5646]\
    \  Phillips, A., Ed., and M. Davis, Ed., \"Tags for\n              Identifying\
    \ Languages\", BCP 47, RFC 5646,\n              DOI 10.17487/RFC5646, September\
    \ 2009,\n              <http://www.rfc-editor.org/info/rfc5646>.\n   [RFC6838]\
    \  Freed, N., Klensin, J., and T. Hansen, \"Media Type\n              Specifications\
    \ and Registration Procedures\", BCP 13,\n              RFC 6838, DOI 10.17487/RFC6838,\
    \ January 2013,\n              <http://www.rfc-editor.org/info/rfc6838>.\n   [RFC7230]\
    \  Fielding, R., Ed., and J. Reschke, Ed., \"Hypertext\n              Transfer\
    \ Protocol (HTTP/1.1): Message Syntax and Routing\",\n              RFC 7230,\
    \ DOI 10.17487/RFC7230, June 2014,\n              <http://www.rfc-editor.org/info/rfc7230>.\n\
    \   [RFC7472]  McDonald, I. and M. Sweet, \"Internet Printing Protocol\n     \
    \         (IPP) over HTTPS Transport Binding and the 'ipps' URI\n            \
    \  Scheme\", RFC 7472, DOI 10.17487/RFC7472, March 2015,\n              <http://www.rfc-editor.org/info/rfc7472>.\n\
    \   [RFC7612]  Fleming, P. and I. McDonald, \"Lightweight Directory Access\n \
    \             Protocol (LDAP): Schema for Printer Services\", RFC 7612,\n    \
    \          DOI 10.17487/RFC7612, June 2015,\n              <http://www.rfc-editor.org/info/rfc7612>.\n\
    \   [RFC7616]  Shekh-Yusef, R., Ed., Ahrens, D., and S. Bremer, \"HTTP\n     \
    \         Digest Access Authentication\", RFC 7616,\n              DOI 10.17487/RFC7616,\
    \ September 2015,\n              <http://www.rfc-editor.org/info/rfc7616>.\n \
    \  [RFC7617]  Reschke, J., \"The 'Basic' HTTP Authentication Scheme\",\n     \
    \         RFC 7617, DOI 10.17487/RFC7617, September 2015,\n              <http://www.rfc-editor.org/info/rfc7617>.\n\
    \   [RFC8010]  Sweet, M. and I. McDonald, \"Internet Printing\n              Protocol/1.1:\
    \ Encoding and Transport\", RFC 8010,\n              DOI 10.17487/RFC8010, January\
    \ 2017,\n              <http://www.rfc-editor.org/info/rfc8010>.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [HTPP]     Barnett, J., Carter, K., and R.\
    \ deBry, \"Internet Print\n              Protocol Proposal: HTPP -- Hypertext\
    \ Print Protocol\n              (HTPP/1.0 Initial Draft)\", October 1996,\n  \
    \            <ftp://ftp.pwg.org/pub/pwg/ipp/historic/htpp/\n              overview.ps.gz>.\n\
    \   [IANA-CS]  IANA, \"Registry of Coded Character Sets\",\n              <http://www.iana.org/assignments/character-sets/>.\n\
    \   [IANA-MT]  IANA, \"Media Types\",\n              <http://www.iana.org/assignments/media-types/>.\n\
    \   [IANA-PEN]\n              IANA, \"Private Enterprise Numbers\",\n        \
    \      <http://www.iana.org/assignments/enterprise-numbers/>.\n   [ISO32000] \"\
    Document management -- Portable document format --\n              Part 1: PDF\
    \ 1.7\", July 2008, <http://www.adobe.com/\n              devnet/acrobat/pdfs/PDF32000_2008.pdf>.\n\
    \   [LDPA]     Isaacson, S., Taylor, D., MacKay, M., Zehler, P.,\n           \
    \   Hastings, T., and C. Manros, \"LDPA - Lightweight Document\n             \
    \ Printing Application\", Proposed Internet-Draft,\n              October 1996,\
    \ <ftp://ftp.pwg.org/pub/pwg/ipp/\n              historic/ldpa/ldpa8.pdf.gz>.\n\
    \   [P1387.4]  Kirk, M., \"POSIX Systems Administration - Part 4: Printing\n \
    \             Interfaces, POSIX 1387.4 D8\", 1998.\n   [PSIS]     Herriot, R.,\
    \ Ed., \"X/Open: A Printing System\n              Interoperability Specification\
    \ (PSIS)\", August 1995.\n   [PWG-IPP-WG]\n              IEEE-ISTO Printer Working\
    \ Group, \"Internet Printing\n              Protocol Workgroup\", <http://www.pwg.org/ipp>.\n\
    \   [RFC959]   Postel, J. and J. Reynolds, \"File Transfer Protocol\",\n     \
    \         STD 9, RFC 959, DOI 10.17487/RFC0959, October 1985,\n              <http://www.rfc-editor.org/info/rfc959>.\n\
    \   [RFC1179]  McLaughlin, L., \"Line printer daemon protocol\", RFC 1179,\n \
    \             DOI 10.17487/RFC1179, August 1990,\n              <http://www.rfc-editor.org/info/rfc1179>.\n\
    \   [RFC1738]  Berners-Lee, T., Masinter, L., and M. McCahill, \"Uniform\n   \
    \           Resource Locators (URL)\", RFC 1738, DOI 10.17487/RFC1738,\n     \
    \         December 1994, <http://www.rfc-editor.org/info/rfc1738>.\n   [RFC2565]\
    \  Herriot, R., Ed., Butler, S., Moore, P., and R. Turner,\n              \"Internet\
    \ Printing Protocol/1.0: Encoding and Transport\",\n              RFC 2565, DOI\
    \ 10.17487/RFC2565, April 1999,\n              <http://www.rfc-editor.org/info/rfc2565>.\n\
    \   [RFC2566]  deBry, R., Hastings, T., Herriot, R., Isaacson, S., and P.\n  \
    \            Powell, \"Internet Printing Protocol/1.0: Model and\n           \
    \   Semantics\", RFC 2566, DOI 10.17487/RFC2566, April 1999,\n              <http://www.rfc-editor.org/info/rfc2566>.\n\
    \   [RFC2567]  Wright, F., \"Design Goals for an Internet Printing\n         \
    \     Protocol\", RFC 2567, DOI 10.17487/RFC2567, April 1999,\n              <http://www.rfc-editor.org/info/rfc2567>.\n\
    \   [RFC2568]  Zilles, S., \"Rationale for the Structure of the Model and\n  \
    \            Protocol for the Internet Printing Protocol\", RFC 2568,\n      \
    \        DOI 10.17487/RFC2568, April 1999,\n              <http://www.rfc-editor.org/info/rfc2568>.\n\
    \   [RFC2569]  Herriot, R., Ed., Hastings, T., Jacobs, N., and J. Martin,\n  \
    \            \"Mapping between LPD and IPP Protocols\", RFC 2569,\n          \
    \    DOI 10.17487/RFC2569, April 1999,\n              <http://www.rfc-editor.org/info/rfc2569>.\n\
    \   [RFC2579]  McCloghrie, K., Ed., Perkins, D., Ed., and J.\n              Schoenwaelder,\
    \ Ed., \"Textual Conventions for SMIv2\",\n              STD 58, RFC 2579, DOI\
    \ 10.17487/RFC2579, April 1999,\n              <http://www.rfc-editor.org/info/rfc2579>.\n\
    \   [RFC2978]  Freed, N. and J. Postel, \"IANA Charset Registration\n        \
    \      Procedures\", BCP 19, RFC 2978, DOI 10.17487/RFC2978,\n              October\
    \ 2000, <http://www.rfc-editor.org/info/rfc2978>.\n   [RFC3239]  Kugler, C., Lewis,\
    \ H., and T. Hastings, \"Internet Printing\n              Protocol (IPP): Requirements\
    \ for Job, Printer, and Device\n              Administrative Operations\", RFC\
    \ 3239,\n              DOI 10.17487/RFC3239, February 2002,\n              <http://www.rfc-editor.org/info/rfc3239>.\n\
    \   [RFC3997]  Hastings, T., Ed., deBry, R., and H. Lewis, \"Internet\n      \
    \        Printing Protocol (IPP): Requirements for IPP\n              Notifications\"\
    , RFC 3997, DOI 10.17487/RFC3997,\n              March 2005, <http://www.rfc-editor.org/info/rfc3997>.\n\
    \   [RFC4122]  Leach, P., Mealling, M., and R. Salz, \"A Universally\n       \
    \       Unique IDentifier (UUID) URN Namespace\", RFC 4122,\n              DOI\
    \ 10.17487/RFC4122, July 2005,\n              <http://www.rfc-editor.org/info/rfc4122>.\n\
    \   [RFC5226]  Narten, T. and H. Alvestrand, \"Guidelines for Writing an\n   \
    \           IANA Considerations Section in RFCs\", BCP 26, RFC 5226,\n       \
    \       DOI 10.17487/RFC5226, May 2008,\n              <http://www.rfc-editor.org/info/rfc5226>.\n\
    \   [RFC6068]  Duerst, M., Masinter, L., and J. Zawinski, \"The 'mailto'\n   \
    \           URI Scheme\", RFC 6068, DOI 10.17487/RFC6068, October 2010,\n    \
    \          <http://www.rfc-editor.org/info/rfc6068>.\n   [RFC7525]  Sheffer, Y.,\
    \ Holz, R., and P. Saint-Andre,\n              \"Recommendations for Secure Use\
    \ of Transport Layer\n              Security (TLS) and Datagram Transport Layer\
    \ Security\n              (DTLS)\", BCP 195, RFC 7525, DOI 10.17487/RFC7525,\n\
    \              May 2015, <http://www.rfc-editor.org/info/rfc7525>.\n   [SWP] \
    \     Moore, P. and S. Butler, \"Simple Web Printing (SWP/1.0)\",\n          \
    \    May 1997, <ftp://ftp.pwg.org/pub/pwg/ipp/new_PRO/\n              swp9705.pdf>.\n"
- title: Appendix A.  Formats for IPP Registration Proposals
  contents:
  - "Appendix A.  Formats for IPP Registration Proposals\n   In order to propose an\
    \ IPP extension for registration, the proposer\n   must submit an application\
    \ to IANA by email to \"iana@iana.org\" or by\n   filling out the appropriate\
    \ form on the IANA web pages\n   (http://www.iana.org).  This section specifies\
    \ the required\n   information and the formats for proposing registrations of\
    \ extensions\n   to IPP as provided in Section 7 for:\n   1.  attributes\n   2.\
    \  type2 'keyword' attribute values\n   3.  type2 'enum' attribute values\n  \
    \ 4.  operations\n   5.  status-code values\n"
- title: A.1.  Attribute Registration
  contents:
  - "A.1.  Attribute Registration\n   Type of registration: attribute\n   Proposed\
    \ keyword name of this attribute:\n   Types of attributes (Document Description,\
    \ Document Status, Document\n   Template, Event Notifications, Job Description,\
    \ Job Status, Job\n   Template, Operation, Printer Description, Printer Status,\n\
    \   Subscription Description, Subscription Status, Subscription\n   Template):\n\
    \   Operations to be used if the attribute is an operation attribute:\n   Object\
    \ (Document, Job, Printer, Subscription, etc. if bound to an\n   object):\n  \
    \ Attribute syntax(es) (include '1setOf' and range; see Section 5.2):\n   If attribute\
    \ syntax is 'keyword' or 'enum', is it type1 or type2?\n   If this is a Printer\
    \ attribute, MAY the value returned depend on\n   \"document-format\"?  (See Section\
    \ 7.2.)\n   If this is a Job Template attribute, how does its specification\n\
    \   depend on the value of the \"multiple-document-handling\" attribute?\n   Specification\
    \ of this attribute (follow the style of Section 5.2):\n   Name of proposer:\n\
    \   Email address of proposer:\n   Note: For attributes, the IPP Designated Expert\
    \ will be the point of\n   contact and change controller for the approved registration\n\
    \   specification, if any maintenance of the registration specification\n   is\
    \ needed.\n"
- title: A.2.  type2 'keyword' Attribute Value Registration
  contents:
  - "A.2.  type2 'keyword' Attribute Value Registration\n   Type of registration:\
    \ type2 keyword attribute value\n   Name of attribute to which this keyword specification\
    \ is to be added:\n   Proposed keyword name of this 'keyword' value:\n   Specification\
    \ of this 'keyword' value (follow the style of\n   Section 5.1.4):\n   Name of\
    \ proposer:\n   Email address of proposer:\n   Note: For type2 keywords, the Designated\
    \ Expert will be the point of\n   contact and change controller for the approved\
    \ registration\n   specification, if any maintenance of the registration specification\n\
    \   is needed.\n"
- title: A.3.  type2 'enum' Attribute Value Registration
  contents:
  - "A.3.  type2 'enum' Attribute Value Registration\n   Type of registration: type2\
    \ enum attribute value\n   Name of attribute to which this enum specification\
    \ is to be added:\n   Keyword symbolic name of this enum value:\n   Numeric value\
    \ (to be assigned by the IPP Designated Expert in\n   consultation with IANA):\n\
    \   Specification of this enum value (follow the style of Section 5.1.5):\n  \
    \ Name of proposer:\n   Email address of proposer:\n   Note: For type2 enums,\
    \ the Designated Expert will be the point of\n   contact and change controller\
    \ for the approved registration\n   specification, if any maintenance of the registration\
    \ specification\n   is needed.\n"
- title: A.4.  Operation Registration
  contents:
  - "A.4.  Operation Registration\n   Type of registration: operation\n   Proposed\
    \ name of this operation:\n   Numeric \"operation-id\" value according to Section\
    \ 5.4.15 (to be\n   assigned by the IPP Designated Expert in consultation with\
    \ IANA):\n   Object Target (Document, Job, Printer, Subscription, etc. that\n\
    \   operation is upon):\n   Specification of this operation (follow the style\
    \ of Section 4):\n   Name of proposer:\n   Email address of proposer:\n   Note:\
    \ For operations, the IPP Designated Expert will be the point of\n   contact and\
    \ change controller for the approved registration\n   specification, if any maintenance\
    \ of the registration specification\n   is needed.\n"
- title: A.5.  Status-Code Registration
  contents:
  - "A.5.  Status-Code Registration\n   Type of registration: status-code\n   Keyword\
    \ symbolic name of this status-code value:\n   Numeric value (to be assigned by\
    \ the IPP Designated Expert in\n   consultation with IANA):\n   Operations that\
    \ this status-code can be used with:\n   Specification of this status-code (follow\
    \ the style of Appendix B):\n   Name of proposer:\n   Email address of proposer:\n\
    \   Note: For status-code values, the Designated Expert will be the point\n  \
    \ of contact and change controller for the approved registration\n   specification,\
    \ if any maintenance of the registration specification\n   is needed.\n"
- title: Appendix B.  Status-Code Values and Suggested Status-Code Messages
  contents:
  - "Appendix B.  Status-Code Values and Suggested Status-Code Messages\n   This section\
    \ defines status-code enum keywords and values that are\n   used to provide semantic\
    \ information on the results of an operation\n   request.  Each operation response\
    \ MUST include a status-code.  The\n   response MAY also contain a status message\
    \ that provides a short\n   textual description of the status.  The status-code\
    \ is intended for\n   use by automata, and the status message is intended for\
    \ the human\n   End User.\n   The prefix of the status keyword defines the class\
    \ of response as\n   follows:\n   \"informational\" - Request received, continuing\
    \ process\n   \"successful\" - The action was successfully received, understood,\
    \ and\n   accepted\n   \"redirection\" - Further action is taken in order to complete\
    \ the\n   request\n   \"client-error\" - The request contains bad syntax or cannot\
    \ be\n   fulfilled\n   \"server-error\" - The IPP object failed to fulfill an\
    \ apparently valid\n   request\n   As with type2 enums, IPP status-code values\
    \ are extensible.\n   Regardless of whether all status-code values are recognized,\
    \ IPP\n   Clients MUST understand the class of any status-code, as indicated by\n\
    \   the prefix, and treat any unrecognized response as being equivalent\n   to\
    \ the first status-code of that class, with the exception that an\n   unrecognized\
    \ response MUST NOT be cached.  For example, if an\n   unrecognized status-code\
    \ of 'client-error-xxx-yyy' is received by the\n   Client, it can safely assume\
    \ that there was something wrong with its\n   request and treat the response as\
    \ if it had received a\n   'client-error-bad-request' status-code.  The name of\
    \ the enum is the\n   suggested status message for US English.\n   See [PWG5100.19]\
    \ for guidelines on presenting status messages to\n   End Users.\n   The status-code\
    \ values range from 0x0000 to 0x7fff.  The value ranges\n   for each status-code\
    \ class are as follows:\n   \"successful\" - 0x0000 to 0x00ff\n   \"informational\"\
    \ - 0x0100 to 0x01ff\n   \"redirection\" - 0x0300 to 0x03ff\n   \"client-error\"\
    \ - 0x0400 to 0x04ff\n   \"server-error\" - 0x0500 to 0x05ff\n   The top half\
    \ (128 values) of each range (0x0n80 to 0x0nff, for n = 0\n   to 5) is reserved\
    \ for vendor use within each status-code class.\n   Values 0x0600 to 0x7fff are\
    \ reserved for future assignment by\n   Standards Track documents and MUST NOT\
    \ be used.\n"
- title: B.1.  Status-Code Values
  contents:
  - "B.1.  Status-Code Values\n   Each status-code is described below.  Appendix B.2\
    \ contains a table\n   that indicates which status-code values apply to which\
    \ operations.\n   The Implementor's Guides [RFC3196] [PWG5100.19] provide guidance\
    \ for\n   processing IPP attributes for all operations, including status-code\n\
    \   values.\n"
- title: B.1.1.  Informational
  contents:
  - "B.1.1.  Informational\n   This class of status-code values indicates a provisional\
    \ response and\n   is to be used for informational purposes only.\n   There are\
    \ no values defined in this document for this class of\n   status-code values.\n"
- title: B.1.2.  Successful Status-Code Values
  contents:
  - "B.1.2.  Successful Status-Code Values\n   This class of status-code values indicates\
    \ that the Client's request\n   was successfully received, understood, and accepted.\n"
- title: B.1.2.1.  successful-ok (0x0000)
  contents:
  - "B.1.2.1.  successful-ok (0x0000)\n   The request has succeeded, and no request\
    \ attributes were substituted\n   or ignored.  In the case of a response to a\
    \ Job Creation request, the\n   'successful-ok' status-code indicates that the\
    \ request was\n   successfully received and validated, and that the Job object\
    \ has been\n   created; it does not indicate that the Job has been processed.\
    \  The\n   transition of the Job object into the 'completed' state is the only\n\
    \   indicator that the Job has been printed.\n"
- title: B.1.2.2.  successful-ok-ignored-or-substituted-attributes (0x0001)
  contents:
  - "B.1.2.2.  successful-ok-ignored-or-substituted-attributes (0x0001)\n   The request\
    \ has succeeded, but some supplied (1) attributes were\n   ignored or (2) unsupported\
    \ values were substituted with supported\n   values or were ignored in order to\
    \ perform the operation without\n   rejecting it.  Unsupported attributes, attribute\
    \ syntaxes, or values\n   MUST be returned in the Unsupported Attributes group\
    \ of the response\n   for all operations.  There is an exception to this rule\
    \ for the query\n   operations Get-Printer-Attributes, Get-Jobs, and Get-Job-Attributes\n\
    \   for the \"requested-attributes\" operation attribute only.  When the\n   supplied\
    \ values of the \"requested-attributes\" operation attribute are\n   requesting\
    \ attributes that are not supported, the IPP object SHOULD\n   return the \"requested-attributes\"\
    \ operation attribute in the\n   Unsupported Attributes group of the response\
    \ (with the unsupported\n   values only).  See Sections 4.1.7 and 4.2.1.2.\n"
- title: B.1.2.3.  successful-ok-conflicting-attributes (0x0002)
  contents:
  - "B.1.2.3.  successful-ok-conflicting-attributes (0x0002)\n   The request has succeeded,\
    \ but some supplied attribute values\n   conflicted with the values of other supplied\
    \ attributes.  Either\n   (1) these conflicting values were substituted with (supported)\
    \ values\n   or (2) the attributes were removed in order to process the Job\n\
    \   without rejecting it.  Attributes or values that conflict with other\n   attributes\
    \ and have been substituted or ignored MUST be returned in\n   the Unsupported\
    \ Attributes group of the response for all operations\n   as supplied by the Client.\
    \  See Sections 4.1.7 and 4.2.1.2.\n"
- title: B.1.3.  Redirection Status-Code Values
  contents:
  - "B.1.3.  Redirection Status-Code Values\n   This class of status-code values indicates\
    \ that further action needs\n   to be taken to fulfill the request.\n   There\
    \ are no values defined in this document for this class of\n   status-code values.\n"
- title: B.1.4.  Client Error Status-Code Values
  contents:
  - "B.1.4.  Client Error Status-Code Values\n   This class of status-code values\
    \ is intended for cases in which the\n   Client seems to have erred.  The IPP\
    \ object SHOULD return a message\n   containing an explanation of the error situation\
    \ and whether it is a\n   temporary or permanent condition.\n"
- title: B.1.4.1.  client-error-bad-request (0x0400)
  contents:
  - "B.1.4.1.  client-error-bad-request (0x0400)\n   The request could not be understood\
    \ by the IPP object due to\n   malformed syntax (such as the value of a fixed-length\
    \ attribute whose\n   length does not match the prescribed length for that attribute\
    \ -- see\n   the Implementor's Guides [RFC3196] [PWG5100.19]).  The IPP\n   application\
    \ SHOULD NOT repeat the request without modifications.\n"
- title: B.1.4.2.  client-error-forbidden (0x0401)
  contents:
  - "B.1.4.2.  client-error-forbidden (0x0401)\n   The IPP object understood the request\
    \ but is refusing to fulfill it.\n   Additional authentication information or\
    \ authorization credentials\n   will not help, and the request SHOULD NOT be repeated.\
    \  This\n   status-code is commonly used when the IPP object does not wish to\n\
    \   reveal exactly why the request has been refused or when no other\n   response\
    \ is applicable.\n"
- title: B.1.4.3.  client-error-not-authenticated (0x0402)
  contents:
  - "B.1.4.3.  client-error-not-authenticated (0x0402)\n   The request requires user\
    \ authentication.  The IPP Client can repeat\n   the request with suitable authentication\
    \ information.  If the request\n   already included authentication information,\
    \ then this status-code\n   indicates that authorization has been refused for\
    \ those credentials.\n   If this response contains the same challenge as the prior\
    \ response\n   and the user agent has already attempted authentication at least\n\
    \   once, then the response message can contain relevant diagnostic\n   information.\
    \  This status-code reveals more information than\n   'client-error-forbidden'.\n"
- title: B.1.4.4.  client-error-not-authorized (0x0403)
  contents:
  - "B.1.4.4.  client-error-not-authorized (0x0403)\n   The requester is not authorized\
    \ to perform the request.  Additional\n   authentication information or authorization\
    \ credentials will not\n   help, and the request SHOULD NOT be repeated.  This\
    \ status-code is\n   used when the IPP object wishes to reveal that the authentication\n\
    \   information is understandable; however, the requester is explicitly\n   not\
    \ authorized to perform the request.  This status-code reveals more\n   information\
    \ than 'client-error-forbidden' and\n   'client-error-not-authenticated'.\n"
- title: B.1.4.5.  client-error-not-possible (0x0404)
  contents:
  - "B.1.4.5.  client-error-not-possible (0x0404)\n   This status-code is used when\
    \ the request is for something that\n   cannot happen.  For example, there might\
    \ be a request to cancel a Job\n   that has already been canceled or aborted by\
    \ the system.  The IPP\n   Client SHOULD NOT repeat the request.\n"
- title: B.1.4.6.  client-error-timeout (0x0405)
  contents:
  - "B.1.4.6.  client-error-timeout (0x0405)\n   The Client did not produce a request\
    \ within the time that the IPP\n   object was prepared to wait.  For example,\
    \ a Client issued a\n   Create-Job operation and then, after a long period of\
    \ time, issued a\n   Send-Document operation; this error status-code was returned\
    \ in\n   response to the Send-Document request (see Section 4.3.1).  The IPP\n\
    \   object might have been forced to clean up resources that had been\n   held\
    \ for the waiting additional Documents.  The IPP object was forced\n   to close\
    \ the Job, since the Client took too long.  The Client\n   SHOULD NOT repeat the\
    \ request without modifications.\n"
- title: B.1.4.7.  client-error-not-found (0x0406)
  contents:
  - "B.1.4.7.  client-error-not-found (0x0406)\n   The IPP object has not found anything\
    \ matching the request URI.  No\n   indication is given of whether the condition\
    \ is temporary or\n   permanent.  For example, a Client with an old reference\
    \ to a Job\n   (a URI) tries to cancel the Job; however, in the meantime the Job\n\
    \   might have been completed and all record of it at the Printer has\n   been\
    \ deleted.  This status-code, 'client-error-not-found', is\n   returned indicating\
    \ that the referenced Job cannot be found.  This\n   error status-code is also\
    \ used when a Client supplies a URI as a\n   reference to the Document data in\
    \ either a Print-URI or Send-URI\n   operation but the Document cannot be found.\n\
    \   In practice, an IPP application should avoid a \"not found\" situation\n \
    \  by first querying and presenting a list of valid Printer URIs and Job\n   URIs\
    \ to the End User.\n"
- title: B.1.4.8.  client-error-gone (0x0407)
  contents:
  - "B.1.4.8.  client-error-gone (0x0407)\n   The requested object is no longer available,\
    \ and no forwarding\n   address is known.  This condition should be considered\
    \ permanent.\n   Clients with link-editing capabilities should delete references\
    \ to\n   the request URI after user approval.  If the IPP object does not know\n\
    \   or has no facility to determine whether or not the condition is\n   permanent,\
    \ the status-code 'client-error-not-found' should be used\n   instead.\n   This\
    \ response is primarily intended to assist the task of maintenance\n   by notifying\
    \ the recipient that the resource is intentionally\n   unavailable and that the\
    \ IPP object Administrator desires that remote\n   links to that resource be removed.\
    \  It is not necessary to mark all\n   permanently unavailable resources as \"\
    gone\" or to keep the mark for\n   any length of time -- that is left to the discretion\
    \ of the IPP\n   object Administrator and/or Printer implementation.\n"
- title: B.1.4.9.  client-error-request-entity-too-large (0x0408)
  contents:
  - "B.1.4.9.  client-error-request-entity-too-large (0x0408)\n   The IPP object is\
    \ refusing to process a request because the request\n   entity is larger than\
    \ the IPP object is willing or able to process.\n   An IPP Printer returns this\
    \ status-code when it limits the size of\n   Print Jobs and it receives a Print\
    \ Job that exceeds that limit or\n   when the attributes are so many that their\
    \ encoding causes the\n   request entity to exceed IPP object capacity.\n"
- title: B.1.4.10.  client-error-request-value-too-long (0x0409)
  contents:
  - "B.1.4.10.  client-error-request-value-too-long (0x0409)\n   The IPP object is\
    \ refusing to service the request because one or more\n   of the Client-supplied\
    \ attributes have a variable-length value that\n   is longer than the maximum\
    \ length specified for that attribute.  The\n   IPP object might not have sufficient\
    \ resources (memory, buffers,\n   etc.) to process (even temporarily), interpret,\
    \ and/or ignore a value\n   larger than the maximum length.  Another use of this\
    \ error code is\n   when the IPP object supports the processing of a large value\
    \ that is\n   less than the maximum length, but during the processing of the\n\
    \   request as a whole, the object can pass the value onto some other\n   system\
    \ component that is not able to accept the large value.  For\n   more details,\
    \ see the Implementor's Guides [RFC3196] [PWG5100.19].\n   Note: For attribute\
    \ values that are URIs, this rare condition is only\n   likely to occur when a\
    \ Client has improperly submitted a request with\n   long query information (e.g.,\
    \ an IPP application allows an End User\n   to enter an invalid URI), when the\
    \ Client has descended into a URI\n   \"black hole\" of redirection (e.g., a redirected\
    \ URI prefix that\n   points to a suffix of itself), or when the IPP object is\
    \ under attack\n   by a Client attempting to exploit security holes present in\
    \ some IPP\n   objects using fixed-length buffers for reading or manipulating\
    \ the\n   request URI.\n"
- title: B.1.4.11.  client-error-document-format-not-supported (0x040a)
  contents:
  - "B.1.4.11.  client-error-document-format-not-supported (0x040a)\n   The IPP object\
    \ is refusing to service the request because the\n   Document data is in a format,\
    \ as specified in the \"document-format\"\n   operation attribute, that is not\
    \ supported by the Printer.  This\n   error is returned independent of the Client-supplied\n\
    \   \"ipp-attribute-fidelity\" attribute.  The Printer MUST return this\n   status-code,\
    \ even if there are other Job Template attributes that are\n   not supported as\
    \ well, since this error is a bigger problem than with\n   Job Template attributes.\
    \  See Sections 4.1.6.1, 4.1.7, and 4.2.1.1.\n"
- title: B.1.4.12.  client-error-attributes-or-values-not-supported (0x040b)
  contents:
  - "B.1.4.12.  client-error-attributes-or-values-not-supported (0x040b)\n   In a\
    \ Job Creation request, if the Printer does not support one or\n   more attributes,\
    \ attribute syntaxes, or attribute values supplied in\n   the request and the\
    \ Client supplied the \"ipp-attribute-fidelity\"\n   operation attribute with\
    \ the 'true' value, the Printer MUST return\n   this status-code.  The Printer\
    \ MUST also return in the Unsupported\n   Attributes group all the attributes\
    \ and/or values supplied by the\n   Client that are not supported.  See Section\
    \ 4.1.7.  Examples would be\n   if the request indicates 'iso-a4' media but that\
    \ media type is not\n   supported by the Printer, or if the Client supplies a\
    \ Job Template\n   attribute and the attribute itself is not even supported by\
    \ the\n   Printer.  If the \"ipp-attribute-fidelity\" attribute is 'false', the\n\
    \   Printer MUST ignore or substitute values for unsupported Job Template\n  \
    \ attributes and values rather than reject the request and return this\n   status-code.\n\
    \   For any operation where a Client requests attributes (such as a\n   Get-Jobs,\
    \ Get-Printer-Attributes, or Get-Job-Attributes operation),\n   if the IPP object\
    \ does not support one or more of the requested\n   attributes, the IPP object\
    \ simply ignores the unsupported requested\n   attributes and processes the request\
    \ as if they had not been\n   supplied, rather than returning this status-code.\
    \  In this case,\n   the IPP object MUST return the\n   'successful-ok-ignored-or-substituted-attributes'\
    \ status-code and\n   SHOULD return the unsupported attributes as values of the\n\
    \   \"requested-attributes\" operation attribute in the Unsupported\n   Attributes\
    \ group (see Appendix B.1.2.2).\n"
- title: B.1.4.13.  client-error-uri-scheme-not-supported (0x040c)
  contents:
  - "B.1.4.13.  client-error-uri-scheme-not-supported (0x040c)\n   The scheme of the\
    \ Client-supplied URI in a Print-URI or a Send-URI\n   operation is not supported.\
    \  See Sections 4.1.6.1 and 4.1.7.\n"
- title: B.1.4.14.  client-error-charset-not-supported (0x040d)
  contents:
  - "B.1.4.14.  client-error-charset-not-supported (0x040d)\n   For any operation,\
    \ if the IPP Printer does not support the charset\n   supplied by the Client in\
    \ the \"attributes-charset\" operation\n   attribute, the Printer MUST reject\
    \ the operation and return this\n   status-code, and any 'text' or 'name' attributes\
    \ using the 'utf-8'\n   charset (Section 4.1.4.1).  See Sections 4.1.6.1 and 4.1.7.\n"
- title: B.1.4.15.  client-error-conflicting-attributes (0x040e)
  contents:
  - "B.1.4.15.  client-error-conflicting-attributes (0x040e)\n   The request is rejected\
    \ because some attribute values conflicted with\n   the values of other attributes\
    \ that this document does not permit to\n   be substituted or ignored.  The Printer\
    \ MUST also return in the\n   Unsupported Attributes group the conflicting attributes\
    \ supplied by\n   the Client.  See Sections 4.1.7 and 4.2.1.2.\n"
- title: B.1.4.16.  client-error-compression-not-supported (0x040f)
  contents:
  - "B.1.4.16.  client-error-compression-not-supported (0x040f)\n   The IPP object\
    \ is refusing to service the request because the\n   Document data, as specified\
    \ in the \"compression\" operation attribute,\n   is compressed in a way that\
    \ is not supported by the Printer.  This\n   error is returned independent of\
    \ the Client-supplied\n   \"ipp-attribute-fidelity\" attribute.  The Printer MUST\
    \ return this\n   status-code, even if there are other Job Template attributes\
    \ that are\n   not supported as well, since this error is a bigger problem than\
    \ with\n   Job Template attributes.  See Sections 4.1.6.1, 4.1.7, and 4.2.1.1.\n"
- title: B.1.4.17.  client-error-compression-error (0x0410)
  contents:
  - "B.1.4.17.  client-error-compression-error (0x0410)\n   The IPP object is refusing\
    \ to service the request because the\n   Document data cannot be decompressed\
    \ when using the algorithm\n   specified by the \"compression\" operation attribute.\
    \  This error is\n   returned independent of the Client-supplied \"ipp-attribute-fidelity\"\
    \n   attribute.  The Printer MUST return this status-code, even if there\n   are\
    \ Job Template attributes that are not supported as well, since\n   this error\
    \ is a bigger problem than with Job Template attributes.\n   See Sections 4.1.7\
    \ and 4.2.1.1.\n"
- title: B.1.4.18.  client-error-document-format-error (0x0411)
  contents:
  - "B.1.4.18.  client-error-document-format-error (0x0411)\n   The IPP object is\
    \ refusing to service the request because the Printer\n   encountered an error\
    \ in the Document data while interpreting it.\n   This error is returned independent\
    \ of the Client-supplied\n   \"ipp-attribute-fidelity\" attribute.  The Printer\
    \ MUST return this\n   status-code, even if there are Job Template attributes\
    \ that are not\n   supported as well, since this error is a bigger problem than\
    \ with Job\n   Template attributes.  See Sections 4.1.7 and 4.2.1.1.\n"
- title: B.1.4.19.  client-error-document-access-error (0x0412)
  contents:
  - "B.1.4.19.  client-error-document-access-error (0x0412)\n   The IPP object is\
    \ refusing to service the Print-URI or Send-URI\n   request because the Printer\
    \ encountered an access error while\n   attempting to validate the accessibility\
    \ of, or access to, the\n   Document data specified in the \"document-uri\" operation\
    \ attribute.\n   The Printer MAY also return a specific Document access error\
    \ code\n   using the \"document-access-error\" operation attribute (see\n   Section\
    \ 4.1.6.4).  This error is returned independent of the\n   Client-supplied \"\
    ipp-attribute-fidelity\" attribute.  The Printer MUST\n   return this status-code,\
    \ even if there are Job Template attributes\n   that are not supported as well,\
    \ since this error is a bigger problem\n   than with Job Template attributes.\
    \  See Sections 4.1.6.1 and 4.1.7.\n"
- title: B.1.5.  Server Error Status-Code Values
  contents:
  - "B.1.5.  Server Error Status-Code Values\n   This class of status-code values\
    \ indicates cases in which the IPP\n   object is aware that it has erred or is\
    \ incapable of performing the\n   request.  The IPP object SHOULD include a message\
    \ containing an\n   explanation of the error situation, and whether it is a temporary\
    \ or\n   permanent condition.\n"
- title: B.1.5.1.  server-error-internal-error (0x0500)
  contents:
  - "B.1.5.1.  server-error-internal-error (0x0500)\n   The IPP object encountered\
    \ an unexpected condition that prevented it\n   from fulfilling the request. \
    \ This error status-code differs from\n   'server-error-temporary-error' in that\
    \ it implies a more permanent\n   type of internal error.  It also differs from\n\
    \   'server-error-device-error' in that it implies an unexpected\n   condition\
    \ (unlike a paper-jam or out-of-toner problem, which is\n   undesirable but expected).\
    \  This error status-code indicates that\n   intervention by a knowledgeable human\
    \ is probably required.\n"
- title: B.1.5.2.  server-error-operation-not-supported (0x0501)
  contents:
  - "B.1.5.2.  server-error-operation-not-supported (0x0501)\n   The IPP object does\
    \ not support the functionality required to fulfill\n   the request.  This is\
    \ the appropriate response when the IPP object\n   does not recognize an operation\
    \ or is not capable of supporting it.\n   See Sections 4.1.6.1 and 4.1.7.\n"
- title: B.1.5.3.  server-error-service-unavailable (0x0502)
  contents:
  - "B.1.5.3.  server-error-service-unavailable (0x0502)\n   The IPP object is currently\
    \ unable to handle the request due to\n   temporary overloading or due to maintenance\
    \ of the IPP object.  The\n   implication is that this is a temporary condition\
    \ that will be\n   alleviated after some delay.  If known, the length of the delay\
    \ can\n   be indicated in the message.  If no delay is given, the IPP\n   application\
    \ should handle the response as it would for a\n   'server-error-temporary-error'\
    \ response.  If the condition is more\n   permanent, the 'client-error-gone' or\
    \ 'client-error-not-found' error\n   status-code could be used.\n"
- title: B.1.5.4.  server-error-version-not-supported (0x0503)
  contents:
  - "B.1.5.4.  server-error-version-not-supported (0x0503)\n   The IPP object does\
    \ not support or refuses to support the IPP version\n   that was supplied as the\
    \ value of the \"version-number\" operation\n   parameter in the request.  The\
    \ IPP object is indicating that it is\n   unable or unwilling to complete the\
    \ request using the same major and\n   minor version number as supplied in the\
    \ request, other than with this\n   error message.  The error response SHOULD\
    \ contain a \"status-message\"\n   attribute (see Section 4.1.6.2) describing\
    \ why that version is not\n   supported and what other versions are supported\
    \ by that IPP object.\n   See Sections 4.1.6.1, 4.1.7, and 4.1.8.\n   The error\
    \ response MUST identify in the \"version-number\" operation\n   parameter the\
    \ closest version number that the IPP object does\n   support.  For example, if\
    \ a Client supplies version '1.0' and an\n   IPP/1.1 object supports version '1.0',\
    \ then it responds with\n   version '1.0' in all responses to such a request.\
    \  If the IPP/1.1\n   object does not support version '1.0', then it should accept\
    \ the\n   request and respond with version '1.1' or can reject the request and\n\
    \   respond with this error code and version '1.1'.  If a Client supplies\n  \
    \ version '1.2', the IPP/1.1 object should accept the request and\n   return version\
    \ '1.1' or can reject the request and respond with this\n   error code and version\
    \ '1.1'.  See Sections 4.1.8 and 5.3.14.\n"
- title: B.1.5.5.  server-error-device-error (0x0504)
  contents:
  - "B.1.5.5.  server-error-device-error (0x0504)\n   A Printer error, such as a paper\
    \ jam, occurs while the IPP object\n   processes a Print or send operation.  The\
    \ response contains the true\n   Job status (the values of the \"job-state\" and\
    \ \"job-state-reasons\"\n   attributes).  Additional information can be returned\
    \ in the OPTIONAL\n   \"job-state-message\" attribute value or in the OPTIONAL\
    \ status message\n   that describes the error in more detail.  This error status-code\
    \ is\n   only returned in situations where the Printer is unable to accept the\n\
    \   Job Creation request because of such a device error.  For example, if\n  \
    \ the Printer is unable to spool and can only accept one Job at a time,\n   the\
    \ reason it might reject a Job Creation request is that the Printer\n   currently\
    \ has a paper jam.  In many cases, however, where the Printer\n   can accept the\
    \ request even though the Printer has some error\n   condition, the 'successful-ok'\
    \ status-code will be returned.  In such\n   a case, the Client would look at\
    \ the returned Job object attributes\n   or later query the Printer to determine\
    \ its state and state reasons.\n"
- title: B.1.5.6.  server-error-temporary-error (0x0505)
  contents:
  - "B.1.5.6.  server-error-temporary-error (0x0505)\n   A temporary error such as\
    \ a buffer-full write error, a memory\n   overflow (i.e., the Document data exceeds\
    \ the memory of the Printer),\n   or a disk-full condition, occurs while the IPP\
    \ Printer processes an\n   operation.  The Client MAY try the unmodified request\
    \ again at some\n   later point in time with an expectation that the temporary\
    \ internal\n   error condition has been cleared.  Alternatively, as an\n   implementation\
    \ option, a Printer MAY delay the response until the\n   temporary condition is\
    \ cleared so that no error is returned.\n"
- title: B.1.5.7.  server-error-not-accepting-jobs (0x0506)
  contents:
  - "B.1.5.7.  server-error-not-accepting-jobs (0x0506)\n   This is a temporary error\
    \ indicating that the Printer is not\n   currently accepting Jobs because the\
    \ Administrator has set the value\n   of the Printer's \"printer-is-accepting-jobs\"\
    \ attribute to 'false' (by\n   means outside the scope of this IPP/1.1 document).\n"
- title: B.1.5.8.  server-error-busy (0x0507)
  contents:
  - "B.1.5.8.  server-error-busy (0x0507)\n   This is a temporary error indicating\
    \ that the Printer is too busy\n   processing Jobs and/or other requests.  The\
    \ Client SHOULD try the\n   unmodified request again at some later point in time\
    \ with an\n   expectation that the temporary busy condition will have been cleared.\n"
- title: B.1.5.9.  server-error-job-canceled (0x0508)
  contents:
  - "B.1.5.9.  server-error-job-canceled (0x0508)\n   This is an error indicating\
    \ that the Job has been canceled by an\n   Operator or the system while the Client\
    \ was transmitting the data to\n   the IPP Printer.  If a \"job-id\" attribute\
    \ and a \"job-uri\" attribute\n   had been created, then they are returned in\
    \ the Print-Job,\n   Send-Document, or Send-URI response as usual; otherwise,\
    \ no \"job-id\"\n   and \"job-uri\" attributes are returned in the response.\n"
- title: B.1.5.10.  server-error-multiple-document-jobs-not-supported (0x0509)
  contents:
  - "B.1.5.10.  server-error-multiple-document-jobs-not-supported (0x0509)\n   The\
    \ IPP object does not support multiple Documents per Job, and a\n   Client attempted\
    \ to supply Document data with a second Send-Document\n   or Send-URI operation.\n"
- title: B.2.  Status-Code Values for IPP Operations
  contents:
  - "B.2.  Status-Code Values for IPP Operations\n   PJ = Print-Job, PU = Print-URI,\
    \ CJ = Create-Job, SD = Send-Document,\n   SU = Send-URI, V = Validate-Job, GA\
    \ = Get-Job-Attributes and\n   Get-Printer-Attributes, GJ = Get-Jobs, C = Cancel-Job\n\
    \                                                  IPP Operations\n   IPP Status\
    \ Keyword                       PJ PU CJ SD SU V GA GJ C\n   ------------------\
    \                       -- -- -- -- -- - -- -- -\n   successful-ok           \
    \                 x  x  x  x  x  x x  x  x\n   successful-ok-ignored-or-substituted-\
    \    x  x  x  x  x  x x  x  x\n        attributes\n   successful-ok-conflicting-attributes\
    \     x  x  x  x  x  x x  x  x\n   client-error-bad-request                 x\
    \  x  x  x  x  x x  x  x\n   client-error-forbidden                   x  x  x\
    \  x  x  x x  x  x\n   client-error-not-authenticated           x  x  x  x  x\
    \  x x  x  x\n   client-error-not-authorized              x  x  x  x  x  x x \
    \ x  x\n   client-error-not-possible                x  x  x  x  x  x x  x  x\n\
    \   client-error-timeout                              x  x\n   client-error-not-found\
    \                   x  x  x  x  x  x x  x  x\n   client-error-gone           \
    \             x  x  x  x  x  x x  x  x\n   client-error-request-entity-too-large\
    \    x  x  x  x  x  x x  x  x\n   client-error-request-value-too-long      x \
    \ x  x  x  x  x x  x  x\n   client-error-document-format-not-        x  x    \
    \ x  x  x x\n        supported\n   client-error-attributes-or-values-not-   x\
    \  x  x  x  x  x x  x  x\n        supported\n   client-error-uri-scheme-not-supported\
    \       x        x\n   client-error-charset-not-supported       x  x  x  x  x\
    \  x x  x  x\n   client-error-conflicting-attributes      x  x  x  x  x  x x \
    \ x  x\n   client-error-compression-not-supported   x  x     x  x  x\n   client-error-compression-error\
    \           x  x     x  x\n   client-error-document-format-error       x  x  \
    \   x  x\n   client-error-document-access-error          x        x\n   server-error-internal-error\
    \              x  x  x  x  x  x x  x  x\n   server-error-operation-not-supported\
    \        x  x  x  x\n   server-error-service-unavailable         x  x  x  x  x\
    \  x x  x  x\n   server-error-version-not-supported       x  x  x  x  x  x x \
    \ x  x\n   server-error-device-error                x  x  x  x  x\n   server-error-temporary-error\
    \             x  x  x  x  x\n   server-error-not-accepting-jobs          x  x\
    \  x        x\n   server-error-busy                        x  x  x  x  x  x x\
    \  x  x\n   server-error-job-canceled                x        x  x\n   server-error-multiple-document-jobs-\
    \              x  x\n          not-supported\n   HJ = Hold-Job, RJ = Release-Job,\
    \ RS = Restart-Job,\n   PP = Pause-Printer, RP = Resume-Printer, PJ = Purge-Jobs\n\
    \                                            IPP Operations (cont.)\n   IPP Status\
    \ Keyword                       HJ RJ RS PP RP PJ\n   ------------------     \
    \                  -- -- -- -- -- --\n   successful-ok                       \
    \     x  x  x  x  x  x\n   successful-ok-ignored-or-substituted-    x  x  x  x\
    \  x  x\n        attributes\n   successful-ok-conflicting-attributes     x  x\
    \  x  x  x  x\n   client-error-bad-request                 x  x  x  x  x  x\n\
    \   client-error-forbidden                   x  x  x  x  x  x\n   client-error-not-authenticated\
    \           x  x  x  x  x  x\n   client-error-not-authorized              x  x\
    \  x  x  x  x\n   client-error-not-possible                x  x  x  x  x  x\n\
    \   client-error-timeout\n   client-error-not-found                   x  x  x\
    \  x  x  x\n   client-error-gone                        x  x  x  x  x  x\n   client-error-request-entity-too-large\
    \    x  x  x  x  x  x\n   client-error-request-value-too-long      x  x  x  x\
    \  x  x\n   client-error-document-format-not-\n        supported\n   client-error-attributes-or-values-not-\
    \   x  x  x  x  x  x\n        supported\n   client-error-uri-scheme-not-supported\n\
    \   client-error-charset-not-supported       x  x  x  x  x  x\n   client-error-conflicting-attributes\
    \      x  x  x  x  x  x\n   client-error-compression-not-supported\n   client-error-compression-error\n\
    \   client-error-document-format-error\n   client-error-document-access-error\n\
    \   server-error-internal-error              x  x  x  x  x  x\n   server-error-operation-not-supported\
    \     x  x  x  x  x  x\n   server-error-service-unavailable         x  x  x  x\
    \  x  x\n   server-error-version-not-supported       x  x  x  x  x  x\n   server-error-device-error\n\
    \   server-error-temporary-error             x  x  x  x  x  x\n   server-error-not-accepting-jobs\n\
    \   server-error-busy                        x  x  x  x  x  x\n   server-error-job-canceled\n\
    \   server-error-multiple-document-jobs-\n          not-supported\n"
- title: Appendix C.  Processing IPP Attributes
  contents:
  - "Appendix C.  Processing IPP Attributes\n   When submitting a Print Job to a Printer,\
    \ the IPP Model allows a\n   Client to supply operation and Job Template attributes\
    \ along with the\n   Document data.  These Job Template attributes in the Job\
    \ Creation\n   request affect the rendering, production, and finishing of the\n\
    \   Documents in the Job.  Similar types of instructions can also be\n   contained\
    \ in the Document data itself.  In addition, the Printer has\n   a set of attributes\
    \ that describe what rendering and finishing\n   processes are supported by that\
    \ Printer.  This model, which allows\n   for flexibility and power, also introduces\
    \ the potential that\n   Client-supplied attributes can conflict with either:\n\
    \   o  what the implementation is capable of realizing (i.e., what the\n     \
    \ Printer supports), or\n   o  the instructions embedded within the Document data\
    \ itself.\n   The following sections describe how these two types of conflicts\
    \ are\n   handled in the IPP Model.\n"
- title: C.1.  Fidelity
  contents:
  - "C.1.  Fidelity\n   If there is a conflict between what the Client requests and\
    \ what a\n   Printer supports, the Client can request one of two possible\n  \
    \ conflict-handling mechanisms:\n   1)  either reject the Job, since the Job cannot\
    \ be processed exactly\n       as specified, or\n   2)  allow the Printer to make\
    \ any changes necessary to proceed with\n       processing the Job the best it\
    \ can.\n   In the first case, the Client is indicating the following to the\n\
    \   Printer: \"Print the Job exactly as specified with no exceptions, and\n  \
    \ if that can't be done, don't even bother printing the Job at all.\"\n   In the\
    \ second case, the Client is indicating the following to the\n   Printer: \"It\
    \ is more important to make sure the Job is printed rather\n   than be processed\
    \ exactly as specified; just make sure the Job is\n   printed even if some Client-supplied\
    \ attributes need to be changed or\n   ignored.\"\n   The IPP Model accounts for\
    \ this situation by introducing an\n   \"ipp-attribute-fidelity\" attribute.\n\
    \   In a Job Creation request, \"ipp-attribute-fidelity\" is a boolean\n   operation\
    \ attribute that MAY be supplied by the Client.  The value\n   'true' indicates\
    \ that total fidelity to Client-supplied Job Template\n   attributes and values\
    \ is required.  The Client is requesting that the\n   Job be printed exactly as\
    \ specified, and if that is not possible,\n   then the Job MUST be rejected rather\
    \ than processed incorrectly.  The\n   value 'false' indicates that a reasonable\
    \ attempt to print the Job is\n   acceptable.  If a Printer does not support some\
    \ of the\n   Client-supplied Job Template attributes or values, the Printer MUST\n\
    \   ignore or replace them with supported values.  The Printer can choose\n  \
    \ to substitute the default value associated with that attribute or use\n   some\
    \ other supported value that is similar to the unsupported\n   requested value.\
    \  For example, if a Client supplies a \"media\" value\n   of 'na_letter_8.5x11in',\
    \ the Printer can choose to substitute\n   'iso_a4_210x297mm' rather than a default\
    \ value of\n   'na_personal_3.625x6.5in'.  If the Client does not supply the\n\
    \   \"ipp-attribute-fidelity\" attribute, the Printer assumes a value of\n   'false'.\n\
    \   Each Printer implementation MUST support both types of \"fidelity\"\n   printing\
    \ (that is, whether the Client supplies a value of 'true' or\n   'false'):\n \
    \  o  If the Client supplies 'false' or does not supply the attribute,\n     \
    \ the Printer MUST always accept the request by ignoring unsupported\n      Job\
    \ Template attributes and by substituting unsupported values of\n      supported\
    \ Job Template attributes with supported values.\n   o  If the Client supplies\
    \ 'true', the Printer MUST reject the request\n      if the Client supplies unsupported\
    \ Job Template attributes.\n   Since a Client can always query a Printer to find\
    \ out exactly what is\n   and is not supported, \"ipp-attribute-fidelity\" set\
    \ to 'false' is\n   useful when:\n   1)  The End User uses a command line interface\
    \ to request attributes\n       that might not be supported.\n   2)  In a GUI\
    \ context, if the End User expects the Job might be moved\n       to another Printer\
    \ and prefers a suboptimal result to nothing\n       at all.\n   3)  The End User\
    \ just wants something reasonable in lieu of nothing\n       at all.\n"
- title: C.2.  Page Description Language (PDL) Override
  contents:
  - "C.2.  Page Description Language (PDL) Override\n   If there is a conflict between\
    \ the value of an IPP Job Template\n   attribute and a corresponding instruction\
    \ in the Document data, the\n   value of the IPP attribute SHOULD take precedence\
    \ over the Document\n   instruction.  Consider the case where a previously formatted\
    \ file of\n   Document data is sent to an IPP Printer.  In this case, if the Client\n\
    \   supplies any attributes at Job submission time, the Client desires\n   that\
    \ those attributes override the embedded instructions.  Consider\n   the case\
    \ where a previously formatted Document has embedded in it\n   commands to load\
    \ 'iso-a4' media.  However, the Document is passed to\n   an End User that only\
    \ has access to a Printer with 'na-letter' media\n   loaded.  That End User most\
    \ likely wants to submit that Document to\n   an IPP Printer with the \"media\"\
    \ Job Template attribute set to\n   'na-letter'.  Attributes supplied at Job submission\
    \ time should take\n   precedence over the embedded PDL instructions.  However,\
    \ until\n   companies that supply Document data interpreters allow a way for\n\
    \   external IPP attributes to take precedence over embedded Job\n   production\
    \ instructions, a Printer might not be able to support the\n   semantics that\
    \ IPP attributes override the embedded instructions.\n   The IPP Model accounts\
    \ for this situation by introducing a\n   \"pdl-override-supported\" attribute\
    \ that describes the Printer's\n   capabilities to override instructions embedded\
    \ in the PDL data\n   stream.  The value of the \"pdl-override-supported\" attribute\
    \ is\n   configured by means outside the scope of this IPP/1.1 document.\n   This\
    \ REQUIRED Printer attribute takes on the following values:\n   o  'attempted':\
    \ This value indicates that the Printer attempts to\n      make the IPP attribute\
    \ values take precedence over embedded\n      instructions in the Document data;\
    \ however, there is no guarantee.\n   o  'not-attempted': This value indicates\
    \ that the Printer makes no\n      attempt to make the IPP attribute values take\
    \ precedence over\n      embedded instructions in the Document data.\n   At Job\
    \ processing time, an implementation that supports the value of\n   'attempted'\
    \ might do one of several different actions:\n   1)  Generate an Output-Device-specific\
    \ command sequence to realize\n       the feature represented by the IPP attribute\
    \ value.\n   2)  Parse the Document data itself and replace the conflicting\n\
    \       embedded instruction with a new embedded instruction that matches\n  \
    \     the intent of the IPP attribute value.\n   3)  Indicate to the Printer that\
    \ external supplied attributes take\n       precedence over embedded instructions\
    \ and then pass the external\n       IPP attribute values to the Document data\
    \ interpreter.\n   4)  Anything else that allows for the semantics that IPP attributes\n\
    \       override embedded Document data instructions.\n   Since 'attempted' does\
    \ not offer any type of guarantee, even though a\n   given Printer might not do\
    \ a very \"good\" job of attempting to ensure\n   that IPP attributes take a higher\
    \ precedence over instructions\n   embedded in the Document data, it would still\
    \ be a conforming\n   implementation.\n   At Job processing time, an implementation\
    \ that supports the value of\n   'not-attempted' might do one of the following\
    \ actions:\n   1)  Simply prepend the Document data with the PDL instruction that\n\
    \       corresponds to the Client-supplied PDL attribute, such that if\n     \
    \  the Document data also has the same PDL instruction it will\n       override\
    \ what the Printer prepended.  In other words, this\n       implementation is\
    \ using the same implementation semantics for the\n       Client-supplied IPP\
    \ attributes as for the Printer defaults.\n   2)  Parse the Document data and\
    \ replace the conflicting embedded\n       instruction with a new embedded instruction\
    \ that approximates,\n       but does not match, the semantic intent of the IPP\
    \ attribute\n       value.\n   Note: The \"ipp-attribute-fidelity\" attribute\
    \ applies to the Printer's\n   ability to either accept or reject other unsupported\
    \ Job Template\n   attributes.  In other words, if \"ipp-attribute-fidelity\"\
    \ is set to\n   'true', a Job is accepted if and only if the Client-supplied Job\n\
    \   Template attributes and values are supported by the Printer.  Whether\n  \
    \ these attributes actually affect the processing of the Job when the\n   Document\
    \ data contains embedded instructions depends on the ability\n   of the Printer\
    \ to override the instructions embedded in the Document\n   data with the semantics\
    \ of the IPP attributes.  If the Document data\n   attributes can be overridden\
    \ (\"pdl-override-supported\" set to\n   'attempted'), the Printer makes an attempt\
    \ to use the IPP attributes\n   when processing the Job.  If the Document data\
    \ attributes cannot be\n   overridden (\"pdl-override-supported\" set to 'not-attempted'),\
    \ the\n   Printer makes no attempt to override the embedded Document data\n  \
    \ instructions with the IPP attributes when processing the Job, and\n   hence,\
    \ the IPP attributes can fail to affect the Job processing and\n   output when\
    \ the corresponding instruction is embedded in the\n   Document data.\n"
- title: C.3.  Using Job Template Attributes during Document Processing
  contents:
  - "C.3.  Using Job Template Attributes during Document Processing\n   The Printer\
    \ uses some of the Job's Job Template attributes during the\n   processing of\
    \ the Document data associated with that Job.  These\n   include, but are not\
    \ limited to, \"orientation-requested\",\n   \"number-up\", \"sides\", \"media\"\
    , and \"copies\".  The processing of each\n   Document in a Job object MUST follow\
    \ the steps below.  These steps\n   are intended only to identify when and how\
    \ attributes are to be used\n   in processing Document data; any alternative steps\
    \ that accomplish\n   the same effect can be used to implement this specification\
    \ document.\n   1.  Using the Client-supplied \"document-format\" attribute or\
    \ some\n       form of Document format detection algorithm (if the value of\n\
    \       \"document-format\" is not specific enough), determine whether the\n \
    \      Document data has already been formatted for printing.  If the\n      \
    \ Document data has been formatted, then go to step 2.  Otherwise,\n       the\
    \ Document data MUST be formatted.  The formatting detection\n       algorithm\
    \ is implementation defined and is not specified by this\n       document.  The\
    \ formatting of the Document data uses the\n       \"orientation-requested\" attribute\
    \ to determine how the formatted\n       print data should be placed on an Input\
    \ Page; see Section 5.2.10\n       for details.\n   2.  The Document data is a\
    \ set of Input Pages in a known media type.\n       The \"page-ranges\" attribute\
    \ is used to select, as specified in\n       Section 5.2.7, a sub-sequence of\
    \ the pages in the print-stream\n       that are to be processed and imaged.\n\
    \   3.  The input for this step is a sequence of Input Pages.  This step\n   \
    \    is controlled by the \"number-up\" attribute.  If the value of\n       \"\
    number-up\" is N, then during the processing of the Input Pages\n       each N\
    \ Input Pages are positioned, as specified in Section 5.2.9,\n       to create\
    \ a single Impression.  If a given Document does not have\n       N more Input\
    \ Pages, then the completion of the Impression is\n       controlled by the \"\
    multiple-document-handling\" attribute as\n       described in Section 5.2.4;\
    \ when the value of this attribute is\n       'single-document' or 'single-document-new-sheet',\
    \ the Input Pages\n       of Document data from subsequent Documents are used\
    \ to complete\n       the Impression.\n   The size (scaling), position (translation),\
    \ and rotation of the Input\n   Pages on the Impression are implementation defined.\
    \  Note that during\n   this process the Input Pages can be rendered to a form\
    \ suitable for\n   placing on the Impression; this rendering is controlled by\
    \ the values\n   of the \"printer-resolution\" and \"print-quality\" attributes\
    \ as\n   described in Sections 5.2.12 and 5.2.13.  In the case where N = 1,\n\
    \   the Impression is nearly the same as the Input Page; the differences\n   would\
    \ only be in the size, position, and rotation of the Input Page\n   and/or any\
    \ decoration, such as a frame for the page, that is added by\n   the implementation.\n\
    \   1.  The collection of Impressions is placed, in sequence, onto sides\n   \
    \    of the Media Sheets.  This placement is controlled by the \"sides\"\n   \
    \    attribute and the orientation of the Input Page, as described in\n      \
    \ Section 5.2.8.  The orientation of the Input Pages affects the\n       orientation\
    \ of the Impression; for example, if \"number-up\" equals\n       2, then, typically,\
    \ two portrait Input Pages become one landscape\n       Impression.  Note that\
    \ the placement of Impressions onto Media\n       Sheets is also controlled by\
    \ the \"multiple-document-handling\"\n       attribute as described in Section\
    \ 5.2.4.\n   2.  The \"copies\" and \"multiple-document-handling\" attributes\
    \ are used\n       to determine how many copies of each Media Sheet are printed\
    \ and\n       in what order.  See Sections 5.2.4 and 5.2.5 for details.\n   3.\
    \  When the correct number of copies are created, the Media Sheets\n       are\
    \ finished according to the values of the \"finishings\"\n       attribute as\
    \ described in Section 5.2.6.  Note that sometimes\n       finishing processes\
    \ can require manual intervention to perform\n       the finishing processes on\
    \ the copies, especially uncollated\n       copies.  This document allows any\
    \ or all of the processing steps\n       to be performed automatically or manually,\
    \ at the discretion of\n       the Printer.\n"
- title: Appendix D.  Generic Directory Schema
  contents:
  - "Appendix D.  Generic Directory Schema\n   This section defines a generic schema\
    \ for an entry in a directory\n   service.  Implementations of this schema are\
    \ defined by \"Lightweight\n   Directory Access Protocol (LDAP): Schema for Printer\
    \ Services\"\n   [RFC7612] and \"IPP Everywhere\" [PWG5100.14].  A directory service\
    \ is\n   a means by which service users can locate service providers.  In IPP\n\
    \   environments, this means that IPP Printers can be registered (either\n   automatically\
    \ or with the help of an Administrator) as entries of\n   type Printer in the\
    \ directory using an implementation-specific\n   mechanism such as entry attributes,\
    \ entry type fields, specific\n   branches, etc.  Directory Clients can search\
    \ or browse for entries of\n   type Printer.  Clients use the directory service\
    \ to find entries\n   based on naming, organizational contexts, or filtered searches\
    \ on\n   attribute values of entries.  For example, a Client can find all\n  \
    \ Printers in the \"Local Department\" context.  Authentication and\n   authorization\
    \ are also often part of a directory service so that an\n   Administrator can\
    \ place limits on End Users so that they are only\n   allowed to find entries\
    \ to which they have certain access rights.\n   IPP itself does not require any\
    \ specific directory service protocol\n   or provider.\n   Note: Some directory\
    \ implementations allow for the notion of\n   \"aliasing\".  That is, one directory\
    \ entry object can appear as\n   multiple directory entry objects with different\
    \ names for each\n   object.  In each case, each alias refers to the same directory\
    \ entry\n   object, which refers to a single IPP Printer.\n   The generic schema\
    \ is a subset of IPP Printer Job Template and\n   Printer Description attributes\
    \ (Sections 5.2 and 5.4).  These\n   attributes are identified as either RECOMMENDED\
    \ or OPTIONAL for the\n   directory entry itself.  This conformance labeling is\
    \ NOT the same\n   conformance labeling applied to the attributes of IPP Printer\n\
    \   objects.  The conformance labeling in this appendix is intended to\n   apply\
    \ to directory templates and to IPP Printer implementations that\n   subscribe\
    \ by adding one or more entries to a directory.  RECOMMENDED\n   attributes SHOULD\
    \ be associated with each directory entry.  OPTIONAL\n   attributes MAY be associated\
    \ with the directory entry (if known or\n   supported).  In addition, all directory\
    \ entry attributes SHOULD\n   reflect the current attribute values for the corresponding\
    \ Printer.\n   As much as possible, the names of attributes in directory schema\
    \ and\n   entries SHOULD be the same as the IPP Printer attribute names as\n \
    \  shown.\n   In order to bridge between the directory service and the IPP Printer,\n\
    \   one of the RECOMMENDED directory entry attributes is the Printer's\n   \"\
    printer-uri-supported\" attribute.  The directory Client queries the\n   \"printer-uri-supported\"\
    \ attribute (or its equivalent) in the\n   directory entry, and then the IPP Client\
    \ addresses the IPP Printer\n   using one of its URIs.  The \"uri-security-supported\"\
    \ attribute\n   identifies the protocol (if any) used to secure a channel.\n \
    \  The attributes in Table 23 define the generic schema for directory\n   entries\
    \ of type Printer.\n   +------------------------------------+-------------+----------------+\n\
    \   | Attribute                          | Conformance | Section        |\n  \
    \ +------------------------------------+-------------+----------------+\n   |\
    \ charset-supported                  | OPTIONAL    | Section 5.4.18 |\n   +------------------------------------+-------------+----------------+\n\
    \   | color-supported                    | RECOMMENDED | Section 5.4.26 |\n  \
    \ +------------------------------------+-------------+----------------+\n   |\
    \ compression-supported              | RECOMMENDED | Section 5.4.32 |\n   +------------------------------------+-------------+----------------+\n\
    \   | document-format-supported          | RECOMMENDED | Section 5.4.22 |\n  \
    \ +------------------------------------+-------------+----------------+\n   |\
    \ finishings-supported               | OPTIONAL    | Section 5.2.6  |\n   +------------------------------------+-------------+----------------+\n\
    \   | generated-natural-language-        | OPTIONAL    | Section 5.4.20 |\n  \
    \ | supported                          |             |                |\n   +------------------------------------+-------------+----------------+\n\
    \   | ipp-versions-supported             | RECOMMENDED | Section 5.4.14 |\n  \
    \ +------------------------------------+-------------+----------------+\n   |\
    \ media-supported                    | RECOMMENDED | Section 5.2.11 |\n   +------------------------------------+-------------+----------------+\n\
    \   | multiple-document-jobs-supported   | OPTIONAL    | Section 5.4.16 |\n  \
    \ +------------------------------------+-------------+----------------+\n   |\
    \ number-up-supported                | OPTIONAL    | Section 5.2.9  |\n   +------------------------------------+-------------+----------------+\n\
    \   | pages-per-minute-color             | OPTIONAL    | Section 5.4.37 |\n  \
    \ +------------------------------------+-------------+----------------+\n   |\
    \ pages-per-minute                   | OPTIONAL    | Section 5.4.36 |\n   +------------------------------------+-------------+----------------+\n\
    \   | print-quality-supported            | OPTIONAL    | Section 5.2.13 |\n  \
    \ +------------------------------------+-------------+----------------+\n   |\
    \ printer-info                       | OPTIONAL    | Section 5.4.6  |\n   +------------------------------------+-------------+----------------+\n\
    \   | printer-location                   | RECOMMENDED | Section 5.4.5  |\n  \
    \ +------------------------------------+-------------+----------------+\n   |\
    \ printer-make-and-model             | RECOMMENDED | Section 5.4.9  |\n   +------------------------------------+-------------+----------------+\n\
    \   | printer-more-info                  | OPTIONAL    | Section 5.4.7  |\n  \
    \ +------------------------------------+-------------+----------------+\n   |\
    \ printer-name                       | RECOMMENDED | Section 5.4.4  |\n   +------------------------------------+-------------+----------------+\n\
    \   | printer-resolution-supported       | OPTIONAL    | Section 5.2.12 |\n  \
    \ +------------------------------------+-------------+----------------+\n   |\
    \ printer-uri-supported              | RECOMMENDED | Section 5.4.1  |\n   +------------------------------------+-------------+----------------+\n\
    \   | sides-supported                    | RECOMMENDED | Section 5.2.8  |\n  \
    \ +------------------------------------+-------------+----------------+\n   |\
    \ uri-authentication-supported       | RECOMMENDED | Section 5.4.2  |\n   +------------------------------------+-------------+----------------+\n\
    \   | uri-security-supported             | RECOMMENDED | Section 5.4.3  |\n  \
    \ +------------------------------------+-------------+----------------+\n    \
    \             Table 23: Attributes in Directory Entries\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The authors would like to acknowledge the following individuals\
    \ for\n   their contributions to the original IPP/1.1 specifications:\n   Roger\
    \ deBry, Tom Hastings (original RFC 2911 editor), Robert Herriot,\n   Scott A.\
    \ Isaacson, Kirk Ocke, Patrick Powell, and Peter Zehler\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Michael Sweet\n   Apple Inc.\n   1 Infinite Loop\n   MS\
    \ 111-HOMC\n   Cupertino, CA  95014\n   United States of America\n   Email: msweet@apple.com\n\
    \   Ira McDonald\n   High North, Inc.\n   PO Box 221\n   Grand Marais, MI  49839\n\
    \   United States of America\n   Phone: +1 906-494-2434\n   Email: blueroofmusic@gmail.com\n"
