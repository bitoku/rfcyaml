- title: __initial_text__
  contents:
  - '                    NFS Version 4.0 Trunking Update

    '
- title: Abstract
  contents:
  - "Abstract\n   In NFS version 4.0, the fs_locations attribute informs clients about\n\
    \   alternate locations of file systems.  An NFS version 4.0 client can\n   use\
    \ this information to handle migration and replication of server\n   file systems.\
    \  This document describes how an NFS version 4.0 client\n   can also use this\
    \ information to discover an NFS version 4.0 server's\n   trunking capabilities.\
    \  This document updates RFC 7530.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8587.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n   2.  Requirements Language . . . . . . . . . . . . . . . .\
    \ . . . .   4\n   3.  Terminology . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .   4\n   4.  Document Organization . . . . . . . . . . . . . . . . . .\
    \ . .   6\n   5.  Changes within Section 8 of RFC 7530  . . . . . . . . . . .\
    \ .   7\n     5.1.  Updated Section \"Location Attributes\"\n           (Currently\
    \ Section 8.1) . . . . . . . . . . . . . . . . .   8\n     5.2.  Updates to \"\
    Uses of Location Information\"\n           (Currently Section 8.4) . . . . . .\
    \ . . . . . . . . . . .   9\n       5.2.1.  Updates to the Introductory Text of\
    \ the Current\n               Section 8.4 . . . . . . . . . . . . . . . . . .\
    \ . . .   9\n       5.2.2.  New Subsection Titled \"Trunking Discovery and\n \
    \              Detection\" (Becomes Section 8.4.1)  . . . . . . . . .  11\n  \
    \     5.2.3.  New Subsection Titled \"Location Attributes and\n              \
    \ Selection of Connection Type\" (Becomes Section 8.4.2)  12\n       5.2.4.  Updated\
    \ Section \"File System Replication\" (Becomes\n               Section 8.4.3 Retitled\
    \ \"File System Replication and\n               Trunking\" . . . . . . . . . .\
    \ . . . . . . . . . . . .  12\n       5.2.5.  Updated Section \"File System Migration\"\
    \ (Becomes\n               Section 8.4.4)  . . . . . . . . . . . . . . . . . .\
    \ .  13\n       5.2.6.  New Subsection Titled \"Interaction of Trunking,\n   \
    \            Migration, and Replication\" (Becomes Section 8.4.5) .  14\n    \
    \ 5.3.  Updated Section \"Location Entries and Server Identity\"\n           (Section\
    \ 8.5) . . . . . . . . . . . . . . . . . . . . . .  16\n   6.  Updates to RFC\
    \ 7530 outside Section 8 . . . . . . . . . . . .  16\n   7.  Updates to the Security\
    \ Considerations Section of RFC 7530  .  16\n   8.  IANA Considerations . . .\
    \ . . . . . . . . . . . . . . . . . .  19\n   9.  Updates to the References Section\
    \ in RFC 7530 . . . . . . . .  19\n   10. References  . . . . . . . . . . . .\
    \ . . . . . . . . . . . . .  20\n     10.1.  Normative References . . . . . .\
    \ . . . . . . . . . . . .  20\n     10.2.  Informative References . . . . . .\
    \ . . . . . . . . . . .  21\n   Appendix A.  Section Classification . . . . .\
    \ . . . . . . . . . .  22\n   Acknowledgments . . . . . . . . . . . . . . . .\
    \ . . . . . . . . .  22\n   Authors' Addresses  . . . . . . . . . . . . . . .\
    \ . . . . . . . .  22\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The NFS version 4.0 specification [RFC7530] defines a migration\n\
    \   feature that enables the transfer of a file system from one server to\n  \
    \ another without disruption of client activity.  There were a number\n   of issues\
    \ with the original definition of this feature, now resolved\n   with the publication\
    \ of [RFC7931].\n   After a migration event, a client must determine whether state\n\
    \   recovery is necessary.  To do this, it needs to determine whether 1)\n   the\
    \ source and destination server addresses represent the same server\n   instance,\
    \ 2) if the client has already established a lease on the\n   destination server\
    \ for other file systems, and 3) if the destination\n   server instance has lock\
    \ state for the migrated file system.\n   As part of addressing this need, [RFC7931]\
    \ introduces trunking into\n   NFS version 4.0 along with a trunking detection\
    \ mechanism.  A\n   trunking detection mechanism enables a client to determine\
    \ whether\n   two distinct network addresses are connected to the same NFS version\n\
    \   4.0 server instance.  Without this knowledge, a client unaware of a\n   trunking\
    \ relationship between paths it is using simultaneously is\n   likely to become\
    \ confused in ways described in [RFC7530].\n   NFSv4.1 was defined with an integral\
    \ means of trunking detection,\n   which is described in [RFC5661].  NFSv4.0 initially\
    \ did not have\n   trunking detection; it was added by [RFC7931].  Nevertheless,\
    \ the use\n   of the concept of server-trunkability is the same in both protocol\n\
    \   versions.\n   File system migration, replication, and referrals are distinct\n\
    \   protocol features.  However, it is not appropriate to treat each of\n   these\
    \ features in isolation.  For example, recovery processing of\n   client migration\
    \ needs to deal with the possibility of multiple\n   server addresses in a returned\
    \ fs_locations attribute.  In addition,\n   the content of the fs_locations attribute,\
    \ which provides both\n   trunking-related and replication information, may change\
    \ over\n   repeated retrievals, requiring an integrated description of how\n \
    \  clients are to deal with such changes.  The issues discussed in the\n   current\
    \ document relate to the interpretation of the fs_locations\n   attribute and\
    \ to the proper client and server handling of changes in\n   fs_locations attribute\
    \ values.\n   Therefore, the goals of the current document are as follows:\n \
    \  o  To provide NFS version 4.0 with a means of finding addresses that\n    \
    \  are trunkable with a given address, i.e., trunking discovery,\n      compatible\
    \ with the means of trunking detection introduced by\n      [RFC7931].  For an\
    \ explanation of trunking detection and\n      discovery, see Section 3.\n   o\
    \  To describe how NFS version 4.0 clients are to handle the presence\n      of\
    \ multiple network addresses associated with the same server when\n      recovering\
    \ from a replication and migration event.\n   o  To describe how NFS version 4.0\
    \ clients are to handle changes in\n      the contents of returned fs_locations\
    \ attributes, including those\n      that indicate changes in the responding NFS\
    \ version 4.0 server's\n      trunking configuration.\n   The current document\
    \ pursues these goals by presenting a set of\n   updates to [RFC7530], as summarized\
    \ in Sections 5 and 6.\n"
- title: 2.  Requirements Language
  contents:
  - "2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n"
- title: 3.  Terminology
  contents:
  - "3.  Terminology\n   Most of the terms related to handling the fs_locations attribute\
    \ are\n   appropriately defined in Section 5.1.  However, there are a few\n  \
    \ terminological issues regarding the use of terms outside the context\n   of\
    \ text updating [RFC7530] that are explained in this section.  Note\n   that the\
    \ definitions of trunking-related terms in Section 5.1 apply\n   throughout this\
    \ document, including in explanatory sections that will\n   not replace any text\
    \ in [RFC7530].\n   Regarding network addresses and the handling of trunking,\
    \ we use the\n   following terminology:\n   o  Each NFSv4 server is assumed to\
    \ have a set of IP addresses to\n      which NFSv4 requests may be sent by clients.\
    \  These are referred\n      to as the server's \"network addresses\".  Access\
    \ to a specific\n      server network address might involve the use of multiple\
    \ network\n      ports, since the ports to be used for particular types of\n \
    \     connections might be required to be different.\n   o  Clients may establish\
    \ connections to NFSv4 servers via one of\n      several connection types, supporting\
    \ the NFSv4 protocol layered on\n      top of an RPC stream transport, as described\
    \ in [RFC5531], or on\n      top of RPC-over-RDMA, as described in [RFC8166].\
    \  The combination\n      of a server network address and a particular connection\
    \ type is\n      referred to as a \"server endpoint\".\n   o  Each network address,\
    \ when combined with a pathname providing the\n      location of a file system\
    \ root directory relative to the\n      associated server root filehandle, defines\
    \ a file system network\n      access path.\n   o  Two network addresses connected\
    \ to the same server are said to be\n      server-trunkable.  Unlike subsequent\
    \ NFSv4 minor versions, NFSv4.0\n      recognizes only a single type of trunking\
    \ relationship between\n      addresses.\n   Discussion of the term \"replica\"\
    \ is complicated for a number of\n   reasons.  Even though the term is used in\
    \ explaining the issues in\n   [RFC7530] that need to be addressed in the current\
    \ document, a full\n   explanation of this term requires explanation of related\
    \ terms\n   connected to the fs_locations attribute, which is provided in\n  \
    \ Section 5.1 of the current document.\n   The term is also used in previous documents\
    \ about NFSv4.0 (i.e.,\n   [RFC7530] and [RFC7931]) with a meaning different from\
    \ that in the\n   current document.  In these documents, each replica is identified\
    \ by\n   a single network access path.  However, in the current document, a\n\
    \   set of network access paths that have server-trunkable network\n   addresses\
    \ and the same root-relative file system pathname is\n   considered to be a single\
    \ replica with multiple network access paths.\n   Although [RFC7931] enables an\
    \ NFSv4.0 client to determine whether two\n   network addresses are server-trunkable,\
    \ it never describes the\n   addresses as connected to a single replica, in effect\
    \ leaving the\n   approach established in [RFC7530].\n   Note that this document,\
    \ except when explaining problems in\n   [RFC7530], always uses the new definition,\
    \ including in text intended\n   to replace existing sections of [RFC7530].\n"
- title: 4.  Document Organization
  contents:
  - "4.  Document Organization\n   The sections of the current document are divided\
    \ into four types\n   based on how they relate to the eventual updating of the\
    \ NFS version\n   4.0 specification.  Once this update is published, NFS version\
    \ 4.0\n   will be specified by multiple documents that need to be read together\n\
    \   until such time as a consolidated replacement specification is\n   produced.\n\
    \   o  The base specification [RFC7530]\n   o  The migration-related update [RFC7931]\n\
    \   o  This document [RFC8587]\n   The section types are as follows.  See Appendix\
    \ A for a\n   classification of each section of the current document.\n   o  An\
    \ explanatory section does not contain any material that is meant\n      to update\
    \ the specification of NFS version 4.0.  Such sections may\n      contain an explanation\
    \ about why and how changes are to be made,\n      but they do not include any\
    \ text that is to update [RFC7530] or\n      appear in an eventual consolidated\
    \ document.\n   o  A replacement section contains text that is to replace and\
    \ thus\n      supersede text within [RFC7530] and then appear in an eventual\n\
    \      consolidated document.  The titles of the replacement sections\n      indicate\
    \ what section of [RFC7530] is to be replaced.\n   o  An additional section contains\
    \ text that, although not replacing\n      anything in [RFC7530], will be part\
    \ of the specification of NFS\n      version 4.0 and will be expected to be part\
    \ of an eventual\n      consolidated document.  The titles of the additional sections\n\
    \      provide an indication of where the new section would appear when\n    \
    \  consolidated with [RFC7530].\n   o  An editing section contains some text that\
    \ replaces text within\n      [RFC7530], although the entire section will not\
    \ consist of such\n      text and will include other text as well.  Such sections\
    \ make\n      relatively minor adjustments in the existing NFS version 4.0\n \
    \     specification, which are expected to be reflected in an eventual\n     \
    \ consolidated document.  Generally, such replacement text appears\n      as a\
    \ quotation, possibly taking the form of an indented set of\n      paragraphs.\n\
    \   Additional and replacement sections sometimes contain references to\n   the\
    \ \"current document\" by which RFC 8587 is meant.  When those\n   sections are\
    \ incorporated in a consolidated document, those\n   references will need to be\
    \ updated to refer to the appropriate\n   sections in that new document.\n"
- title: 5.  Changes within Section 8 of RFC 7530
  contents:
  - "5.  Changes within Section 8 of RFC 7530\n   Most of the updates to [RFC7530]\
    \ that provide support for trunking\n   using the fs_locations attribute apply\
    \ to Section 8 (\"Multi-Server\n   Namespace\") of that document.  In the following\
    \ list, the replacing\n   section refers to its numbering in this document.\n\
    \   o  Section 5.1 replaces Section 8.1 (\"Location Attributes\") of\n      [RFC7530].\
    \  The text in the original section has been reorganized\n      and extended to\
    \ explicitly allow the use of fs_locations to\n      provide trunking-related\
    \ information that appropriately interacts\n      with the migration, replication,\
    \ and referral features of\n      fs_locations.  Terminology used to describe\
    \ the interactions is\n      added.\n   o  Section 5.2 updates Section 8.4 (\"\
    Uses of Location Information\")\n      of [RFC7530].  This section comprises the\
    \ bulk of the updates.\n      Each paragraph of Section 8.4 and its subsections\
    \ have been\n      reviewed to clarify the provision of trunking-related information\n\
    \      using the fs_locations attribute.\n      *  Section 5.2.1 replaces the\
    \ introductory material within\n         Section 8.4 of [RFC7530], i.e., the material\
    \ within Section 8.4\n         exclusive of subsections.\n      *  Section 5.2.2\
    \ is to be added as a new subsection of Section 8.4\n         before the updated\
    \ Section 8.4.1 of [RFC7530].  In a\n         consolidated document, it would\
    \ appear as Section 8.4.1.\n      *  Section 5.2.3 is to be added as a new subsection\
    \ of Section 8.4\n         before the updated Section 8.4.1 of [RFC7530].  In\
    \ a\n         consolidated document, it would appear as Section 8.4.2.\n     \
    \ *  Section 5.2.4 replaces Section 8.4.1 (\"File System\n         Replication\"\
    ) of [RFC7530].  In a consolidated document, it\n         would appear as Section\
    \ 8.4.3.\n      *  Section 5.2.5 replaces Section 8.4.2 (\"File System Migration\"\
    )\n         of [RFC7530].  In a consolidated document, it would appear as\n  \
    \       Section 8.4.4.\n      *  Section 5.2.6 is to be added as a new subsection\
    \ of Section 8.4\n         before Section 8.4.3 of [RFC7530].  In a consolidated\
    \ document,\n         it would appear as Section 8.4.5, while the existing\n \
    \        Section 8.3 would appear as Section 8.4.6.\n   o  Section 5.3 replaces\
    \ Section 8.5 (\"Location Entries and Server\n      Identity\") of [RFC7530].\
    \  The last paragraph of the existing\n      section has been removed.\n"
- title: 5.1.  Updated Section "Location Attributes" (Currently Section 8.1)
  contents:
  - "5.1.  Updated Section \"Location Attributes\" (Currently Section 8.1)\n   The\
    \ fs_locations attribute allows specification of file system\n   locations where\
    \ the data corresponding to a given file system may be\n   accessed.  This attribute\
    \ represents such file system instances as a\n   server address target (as either\
    \ a DNS hostname representing one or\n   more network addresses or as a single\
    \ literal network address)\n   together with the path of that file system within\
    \ the associated\n   single-server namespace.  Individual fs_locations entries\
    \ can express\n   trunkable addresses, locations of file system replicas on other\n\
    \   servers, migration targets, or pure referrals.\n   We introduce the following\
    \ terminology:\n   o  \"Trunking\" is a situation in which multiple network addresses\
    \ are\n      connected to the same NFS server.  Network addresses connected to\n\
    \      the same NFS server instance are said to be \"server-trunkable\".\n   o\
    \  \"Trunking detection\" refers to ways of confirming that two\n      distinct\
    \ network addresses are connected to the same NFSv4 server\n      instance.\n\
    \   o  Trunking discovery is a process by which a client using one\n      network\
    \ address can obtain other candidate addresses that are\n      server-trunkable\
    \ with it.\n   Regarding terminology relating to GETATTR attributes used in trunking\n\
    \   discovery and other multi-server namespace features:\n   o  Location attributes\
    \ include only the fs_locations GETATTR\n      attribute.\n   o  Location entries\
    \ (fs_location4, defined in [RFC7530],\n      Section 2.2.6) are the individual\
    \ file system locations in the\n      fs_locations attribute (defined in [RFC7530],\
    \ Section 2.2.7).  A\n      file system location entry designates a set of network\
    \ addresses\n      to which clients may establish connections.  The entry may\n\
    \      designate multiple such addresses because the server hostname may\n   \
    \   map to multiple network addresses and because multiple connection\n      types\
    \ may be used to communicate with each specified network\n      address.  Such\
    \ addresses provide multiple ways of connecting to a\n      single server.\n \
    \     Clients use the NFSv4.0 trunking detection mechanism [RFC7931] to\n    \
    \  confirm that such addresses are connected to the same server.  The\n      client\
    \ can ignore non-confirmed trunking relationships and treat\n      the corresponding\
    \ addresses as connected to different servers.\n   o  File system location elements\
    \ are derived from file system\n      location entries.  If a file system location\
    \ entry specifies a\n      network address, there is only a single corresponding\
    \ location\n      element.  When a file system location entry contains a hostname,\n\
    \      the client resolves the hostname, producing one file system\n      location\
    \ element for each of the resulting network addresses.\n      Issues regarding\
    \ the trustworthiness of hostname resolutions are\n      further discussed in\
    \ Section 7 of the current document.\n   o  All file system location elements\
    \ consist of a file system\n      location address, which is the network address\
    \ of an interface to\n      a server, and an fs_name, which is the location of\
    \ the file system\n      within the server's pseudo-fs.\n   o  If the server has\
    \ no pseudo-fs and only has a single exported file\n      system at the root filehandle,\
    \ the fs_name may be empty.\n"
- title: 5.2.  Updates to "Uses of Location Information" (Currently Section 8.4)
  contents:
  - "5.2.  Updates to \"Uses of Location Information\" (Currently Section 8.4)\n \
    \  The subsections below provide replacement sections for existing\n   sections\
    \ within Section 8.4 of [RFC7530] or new subsections to be\n   added to that section.\n"
- title: 5.2.1.  Updates to the Introductory Text of the Current Section 8.4
  contents:
  - "5.2.1.  Updates to the Introductory Text of the Current Section 8.4\n   Together\
    \ with the possibility of absent file systems, the\n   fs_locations attribute\
    \ bears file system locations and a number of\n   important facilities that enable\
    \ reliable, manageable, and scalable\n   data access.\n   When a file system is\
    \ present on the queried server, this attribute\n   can provide a set of alternate\
    \ locations that clients may use to\n   access the file system, when necessary.\
    \  Provision of such alternate\n   file system locations is referred to as \"\
    replication\" and is further\n   described in Section 5.2.4 of the current document.\n\
    \   When alternative file system locations are provided, they may\n   represent\
    \ distinct physical copies of the same file system data or\n   separate NFS server\
    \ instances that provide access to the same\n   physical file system.  Another\
    \ possible use of the provision of\n   multiple file system location entries is\
    \ trunking, wherein the file\n   system location entries do not, in fact, represent\
    \ different servers\n   but rather are distinct network paths to the same server.\n\
    \   A client may use file system location elements simultaneously to\n   provide\
    \ higher-performance access to the target file system.  This\n   can be done using\
    \ trunking, although the use of multiple replicas\n   simultaneously is possible.\
    \  To enable simultaneous access, the\n   client utilizes trunking detection and/or\
    \ discovery, further\n   described in Section 5.2.2 of the current document, to\
    \ determine a\n   set of network paths that are server-trunkable with the path\n\
    \   currently being used to access the file system.  Once this\n   determination\
    \ is made, requests may be routed across multiple paths\n   using the existing\
    \ state management mechanism.\n   Multiple replicas may also be used simultaneously,\
    \ typically when\n   accessing read-only datasets.  In this case, each replica\
    \ requires\n   its own state management.  The client performs multiple file opens\
    \ to\n   read the same file content from multiple replicas.\n   When a file system\
    \ is present and subsequently becomes absent,\n   clients can be given the opportunity\
    \ to have continued access to\n   their data at an alternative file system location.\
    \  Transfer of the\n   file system contents to the new file system location is\
    \ referred to\n   as \"migration\".  The client's responsibilities in dealing\
    \ with this\n   transition depend on the specific nature of the new access path\
    \ as\n   well as how and whether data was, in fact, migrated.  See Sections\n\
    \   5.2.5 and 5.2.6 of the current document for details.\n   The fs_locations\
    \ attribute can designate one or more remote file\n   system locations in place\
    \ of an absent file system.  This is known as\n   a \"referral\".  A particularly\
    \ important case is that of a \"pure\n   referral\", in which the absent file\
    \ system has never been present on\n   the NFS server.  Such a referral is a means\
    \ by which a file system\n   located on one server can redirect clients to file\
    \ systems located on\n   other servers, thus enabling the creation of a multi-server\n\
    \   namespace.\n   Because client support for the fs_locations attribute is OPTIONAL,\
    \ a\n   server may (but is not required to) take action to hide migration and\n\
    \   referral events from such clients by acting as a proxy, for example.\n"
- title: 5.2.2.  New Subsection Titled "Trunking Discovery and Detection"
  contents:
  - "5.2.2.  New Subsection Titled \"Trunking Discovery and Detection\"\n        (Becomes\
    \ Section 8.4.1)\n   \"Trunking\" is a situation in which multiple distinct network\n\
    \   addresses are associated with the same NFS server instance.  As a\n   matter\
    \ of convenience, we say that two network addresses connected to\n   the same\
    \ NFS server instance are server-trunkable.  Section 5.4 of\n   [RFC7931] explains\
    \ why NFSv4 clients need to be aware of the NFS\n   server identity to manage\
    \ lease and lock states effectively when\n   multiple connections to the same\
    \ server exist.\n   \"Trunking detection\" refers to a way for an NFSv4 client\
    \ to confirm\n   that two independently acquired network addresses are connected\
    \ to\n   the same NFSv4 server.  Section 5.8 of [RFC7931] describes an\n   OPTIONAL\
    \ means by which it can be determined whether two network\n   addresses correspond\
    \ to the same NFSv4.0 server instance.  Without\n   trunking detection, an NFSv4.0\
    \ client has no other way to confirm\n   that two network addresses are server-trunkable.\n\
    \   In the particular context of NFS version 4.0, trunking detection\n   requires\
    \ that the client support the uniform client ID string (UCS)\n   approach, described\
    \ in Section 5.6 of [RFC7931].  Any NFSv4.0 client\n   that supports migration\
    \ or trunking detection needs to present a\n   uniform client ID string to all\
    \ NFSv4.0 servers.  If it does not do\n   so, it will be unable to perform trunking\
    \ detection.\n   \"Trunking discovery\" is the process by which an NFSv4 client,\
    \ using a\n   hostname or one of an NFSv4 server's network addresses, can obtain\n\
    \   other candidate network addresses that are trunkable with the NFSv4\n   server's\
    \ network address, i.e., a set of addresses that might be\n   connected to the\
    \ same NFSv4 server instance.  An NFSv4.0 client can\n   discover server-trunkable\
    \ network addresses in a number of ways:\n   o  An NFS server's hostname is provided\
    \ either at mount time or in a\n      returned file system location entry.  A\
    \ DNS query of this hostname\n      can return more than one network address.\
    \  The returned network\n      addresses are candidates for trunking.\n   o  Location\
    \ entries returned in an fs_locations attribute can specify\n      network addresses.\
    \  These network addresses are candidates for\n      trunking.\n   When there\
    \ is a means of trunking detection available, an NFSv4.0\n   client can confirm\
    \ that a set of network addresses corresponds to the\n   same NFSv4.0 server instance;\
    \ thus, any of them can be used to access\n   that server.\n"
- title: 5.2.3.  New Subsection Titled "Location Attributes and Selection of
  contents:
  - "5.2.3.  New Subsection Titled \"Location Attributes and Selection of\n      \
    \  Connection Type\" (Becomes Section 8.4.2)\n   NFS version 4.0 may be implemented\
    \ using a number of different types\n   of connections:\n      Stream connections\
    \ may be used to provide RPC service, as\n      described in [RFC5531].\n    \
    \  RDMA-capable connections may be used to provide RPC service, as\n      described\
    \ in [RFC8166].\n   Because of the need to support multiple connection types,\
    \ clients\n   face the issue of determining the proper connection type to use\
    \ when\n   establishing a connection to a server network address.  The\n   fs_locations\
    \ attribute provides no information to support selection\n   of the connection\
    \ type.  As a result, clients supporting multiple\n   connection types need to\
    \ attempt to establish a connection on various\n   connection types, allowing\
    \ it to determine, via a trial-and-error\n   approach, which connection types\
    \ are supported.\n   If a client strongly prefers one connection type, it can\
    \ perform\n   these attempts serially in order of declining preference.  Once\
    \ there\n   is a successful attempt, the established connection can be used.\n\
    \   Note that with this approach, network partitions can result in a\n   sequence\
    \ of long waits for a successful connection.\n   To avoid waiting when there is\
    \ at least one viable network path\n   available, simultaneous attempts to establish\
    \ multiple connection\n   types are possible.  Once a viable connection is established,\
    \ the\n   client discards less-preferred connections.\n"
- title: 5.2.4.  Updated Section "File System Replication" (Becomes Section 8.4.3
  contents:
  - "5.2.4.  Updated Section \"File System Replication\" (Becomes Section 8.4.3\n\
    \        Retitled \"File System Replication and Trunking\"\n   On first access\
    \ to a file system, the client should obtain the value\n   of the set of alternative\
    \ file system locations by interrogating the\n   fs_locations attribute.  Trunking\
    \ discovery and/or detection can then\n   be applied to the file system location\
    \ entries to separate the\n   candidate server-trunkable addresses from the replica\
    \ addresses that\n   provide alternative locations of the file system.  Server-trunkable\n\
    \   addresses may be used simultaneously to provide higher performance\n   through\
    \ the exploitation of multiple paths between the client and\n   target file system.\n\
    \   In the event that server failure, communication problems, or other\n   difficulties\
    \ make continued access to the current file system\n   impossible or otherwise\
    \ impractical, the client can use the\n   alternative file system locations as\
    \ a way to maintain continued\n   access to the file system.  See Section 5.2.6\
    \ of the current document\n   for more detail.\n"
- title: 5.2.5.  Updated Section "File System Migration" (Becomes Section 8.4.4)
  contents:
  - "5.2.5.  Updated Section \"File System Migration\" (Becomes Section 8.4.4)\n \
    \  When a file system is present and becomes absent, clients can be\n   given\
    \ the opportunity to have continued access to their data at an\n   alternative\
    \ file system location specified by the fs_locations\n   attribute.  Typically,\
    \ a client will be accessing the file system in\n   question, get an NFS4ERR_MOVED\
    \ error, and then use the fs_locations\n   attribute to determine the new location\
    \ of the data.  See\n   Section 5.2.6 of the current document for more detail.\n\
    \   Such migration can help provide load balancing or general resource\n   reallocation.\
    \  The protocol does not specify how the file system will\n   be moved between\
    \ servers.  It is anticipated that a number of\n   different server-to-server\
    \ transfer mechanisms might be used, with\n   the choice left to the server implementer.\
    \  The NFSv4 protocol\n   specifies the method used to communicate the migration\
    \ event between\n   the client and server.\n   When the client receives indication\
    \ of a migration event via an\n   NFS4ERR_MOVED error, data propagation to the\
    \ destination server must\n   have already occurred.  Once the client proceeds\
    \ to access the\n   alternate file system location, it must see the same data.\
    \  Where\n   file systems are writable, a change made on the original file system\n\
    \   must be visible on all migration targets.  Where a file system is not\n  \
    \ writable but represents a read-only copy (possibly periodically\n   updated)\
    \ of a writable file system, similar requirements apply to the\n   propagation\
    \ of updates.  Any change visible in the original file\n   system must already\
    \ be effected on all migration targets to avoid any\n   possibility that a client,\
    \ in effecting a transition to the migration\n   target, will see any reversion\
    \ in the file system state.\n"
- title: 5.2.6.  New Subsection Titled "Interaction of Trunking, Migration, and
  contents:
  - "5.2.6.  New Subsection Titled \"Interaction of Trunking, Migration, and\n   \
    \     Replication\" (Becomes Section 8.4.5)\n   When the set of network addresses\
    \ on a server changes in a way that\n   would affect a file system location attribute,\
    \ there are several\n   possible outcomes for clients currently accessing that\
    \ file system.\n   NFS4ERR_MOVED is returned only when the server cannot satisfy\
    \ a\n   request from the client, whether because the file system has been\n  \
    \ migrated to a different server or is only accessible at a different\n   trunked\
    \ address on the same server, or for some other reason.  In\n   cases 1 and 2\
    \ below, NFS4ERR_MOVED is not returned.\n   1.  When the list of network addresses\
    \ is a superset of that\n       previously in effect, there is no need for migration\
    \ or any other\n       sort of client adjustment.  Nevertheless, the client is\
    \ free to\n       use an additional address in the replacement list if that address\n\
    \       provides another path to the same server.  Alternatively, the\n      \
    \ client may treat that address as it does a replica -- to be used\n       if\
    \ the current server addresses become unavailable.\n   2.  When the list of network\
    \ addresses is a subset of that previously\n       in effect, immediate action\
    \ is not needed if an address missing\n       in the replacement list is not currently\
    \ in use by the client.\n       The client should avoid using that address to\
    \ access that file\n       system in the future, whether the address is for a\
    \ replica or an\n       additional path to the server being used.\n   3.  When\
    \ an address being removed is one of a number of paths to the\n       current\
    \ server, the client may continue to use it until\n       NFS4ERR_MOVED is received.\
    \  This is not considered a migration\n       event unless the last available\
    \ path to the server has become\n       unusable.\n   When migration does occur,\
    \ multiple addresses may be in use on the\n   server prior to migration, and multiple\
    \ addresses may be available\n   for use on the destination server.\n   With regard\
    \ to the server in use, a return of NFS4ERR_MOVED may\n   indicate that a particular\
    \ network address is no longer to be used,\n   without implying that migration\
    \ of the file system to a different\n   server is needed.  Clients should not\
    \ conclude that migration has\n   occurred until confirming that all network addresses\
    \ known to be\n   associated with that server are not usable.\n   It should be\
    \ noted that the need to defer this determination is not\n   absolute.  If a client\
    \ is not aware of all network addresses for any\n   reason, it may conclude that\
    \ migration has occurred when it has not\n   and treat a switch to a different\
    \ server address as if it were a\n   migration event.  This is harmless since\
    \ the use of the same server\n   via a new address will appear as a successful\
    \ instance of transparent\n   state migration.\n   Although significant harm cannot\
    \ arise from this misapprehension, it\n   can give rise to disconcerting situations.\
    \  For example, if a lock\n   has been revoked during the address shift, it will\
    \ appear to the\n   client as if the lock has been lost during migration.  When\
    \ such a\n   lock is lost, it is the responsibility of the destination server\
    \ to\n   provide for its recovery via the use of an fs-specific grace period.\n\
    \   With regard to the destination server, it is desirable for the client\n  \
    \ to be aware of all valid network addresses that can be used to access\n   the\
    \ destination server.  However, there is no need for this to be\n   done immediately.\
    \  Implementations can process the additional file\n   system location elements\
    \ in parallel with normal use of the first\n   valid file system location entry\
    \ found to access the destination.\n   Because a file system location attribute\
    \ may include entries relating\n   to the current server, the migration destination,\
    \ and possible\n   replicas to use, scanning for available network addresses that\
    \ might\n   be trunkable with addresses the client has already seen could\n  \
    \ potentially be a long process.  To keep this process as short as\n   possible,\
    \ servers that provide information about trunkable network\n   paths are REQUIRED\
    \ to place file system location entries that\n   represent addresses usable with\
    \ the current server or a migration\n   target before those associated with replicas.\n\
    \   This ordering allows a client to cease scanning for trunkable file\n   system\
    \ location entries once it encounters a file system location\n   element whose\
    \ fs_name differs from the current fs_name or whose\n   address is not server-trunkable\
    \ with the address it is currently\n   using.  Although the possibility exists\
    \ that a client might\n   prematurely cease scanning for trunkable addresses when\
    \ receiving a\n   location attribute from an older server that does not follow\
    \ the\n   ordering constraint above, the harm is expected to be limited since\n\
    \   such servers would not be expected to present information about\n   trunkable\
    \ server access paths.\n"
- title: 5.3.  Updated Section "Location Entries and Server Identity"
  contents:
  - "5.3.  Updated Section \"Location Entries and Server Identity\"\n      (Section\
    \ 8.5)\n   As mentioned above, a single file system location entry may have a\n\
    \   server address target in the form of a DNS hostname that resolves to\n   multiple\
    \ network addresses; it is also possible for multiple file\n   system location\
    \ entries to have their own server address targets that\n   reference the same\
    \ server.\n   When server-trunkable addresses for a server exist, the client may\n\
    \   assume that for each file system in the namespace of a given server\n   network\
    \ address, file systems at corresponding namespace locations\n   exist for each\
    \ of the other server-trunkable network addresses.  It\n   may do this even in\
    \ the absence of explicit listing in fs_locations.\n   Such corresponding file\
    \ system locations can be used as alternative\n   locations, just as those explicitly\
    \ specified via the fs_locations\n   attribute.\n   If a single file system location\
    \ entry designates multiple server IP\n   addresses, the client should choose\
    \ a single one to use.  When two\n   server addresses are designated by a single\
    \ file system location\n   entry and they correspond to different servers, this\
    \ normally\n   indicates some sort of misconfiguration.  The client should avoid\n\
    \   using such file system location entries when alternatives are\n   available.\
    \  When they are not, the client should pick one of the IP\n   addresses and use\
    \ it without using others that are not directed to\n   the same server.\n"
- title: 6.  Updates to RFC 7530 outside Section 8
  contents:
  - "6.  Updates to RFC 7530 outside Section 8\n   Since the existing description\
    \ of NFS4ERR_MOVED in Section 13.1.2.4\n   of [RFC7530] does not take proper account\
    \ of trunking, it needs to be\n   modified by replacing the first two sentences\
    \ of the description with\n   the following material:\n      The file system that\
    \ contains the current filehandle object cannot\n      be accessed using the current\
    \ network address.  It may be\n      accessible using other network addresses\
    \ connected to the same\n      server, it may have been relocated to another server,\
    \ or it may\n      never have been present.\n"
- title: 7.  Updates to the Security Considerations Section of RFC 7530
  contents:
  - "7.  Updates to the Security Considerations Section of RFC 7530\n   The Security\
    \ Considerations section of [RFC7530] needs the additions\n   below to properly\
    \ address some aspects of trunking discovery,\n   referral, migration, and replication.\n\
    \      The possibility that requests to determine the set of network\n      addresses\
    \ corresponding to a given server might be interfered with\n      or have their\
    \ responses corrupted needs to be taken into account.\n      o  When DNS is used\
    \ to convert NFS server hostnames to network\n         addresses and DNSSEC [RFC4033]\
    \ is not available, the validity\n         of the network addresses returned cannot\
    \ be relied upon.\n         However, when the client uses RPCSEC_GSS [RFC7861]\
    \ to access\n         NFS servers, it is possible for mutual authentication to\
    \ detect\n         invalid server addresses.  Other forms of transport layer\n\
    \         security (e.g., [RFC8446]) can also offer strong authentication\n  \
    \       of NFS servers.\n      o  Fetching file system location information SHOULD\
    \ be performed\n         using RPCSEC_GSS with integrity protection, as previously\n\
    \         explained in the Security Considerations section of [RFC7530].\n   \
    \      Making a request of this sort without using strong integrity\n        \
    \ protection permits corruption during the transit of returned\n         file\
    \ system location information.  The client implementer needs\n         to recognize\
    \ that using such information to access an NFS\n         server without use of\
    \ RPCSEC_GSS (e.g., by using AUTH_SYS as\n         defined in [RFC5531]) can result\
    \ in the client interacting with\n         an unverified network address that\
    \ is posing as an NFSv4\n         server.\n      o  Despite the fact that [RFC7530]\
    \ REQUIRES \"implementations\" to\n         provide \"support\" for the use of\
    \ RPCSEC_GSS, it cannot be\n         assumed that use of RPCSEC_GSS is always\
    \ possible between any\n         particular client-server pair.\n      o  Returning\
    \ only network addresses to a client that has no\n         trusted DNS resolution\
    \ service can hamper its ability to use\n         RPCSEC_GSS.\n      Therefore,\
    \ an NFSv4 server SHOULD present file system location\n      entries that correspond\
    \ to file systems on other servers using\n      only hostnames.  This enables\
    \ the client to interrogate the\n      fs_locations on the destination server\
    \ to obtain trunking\n      information (as well as replica information) using\
    \ RPCSEC_GSS with\n      integrity, validating the hostname provided while ensuring\
    \ that\n      the response has not been corrupted.\n      When RPCSEC_GSS is not\
    \ available on an NFS server, returned file\n      system location information\
    \ is subject to corruption during\n      transit and cannot be relied upon.  In\
    \ the case of a client being\n      directed to another server after NFS4ERR_MOVED,\
    \ this could vitiate\n      the authentication provided by the use of RPCSEC_GSS\
    \ on the\n      destination.  Even when RPCSEC_GSS authentication is available\
    \ on\n      the destination, this server might validly represent itself as the\n\
    \      server to which the client was erroneously directed.  Without a\n     \
    \ way to decide whether the server is a valid one, the client can\n      only\
    \ determine, using RPCSEC_GSS, that the server corresponds to\n      the hostname\
    \ provided, with no basis for trusting that server.\n      The client should not\
    \ use such unverified file system location\n      entries as a basis for migration,\
    \ even though RPCSEC_GSS might be\n      available on the destination server.\n\
    \      When a file system location attribute is fetched upon connecting\n    \
    \  with an NFSv4 server, it SHOULD, as stated above, be done using\n      RPCSEC_GSS\
    \ with integrity protection.\n      When file system location information cannot\
    \ be protected in\n      transit, the client can subject it to additional filtering\
    \ to\n      prevent the client from being inappropriately directed.  For\n   \
    \   example, if a range of network addresses can be determined that\n      ensure\
    \ that the servers and clients using AUTH_SYS are subject to\n      appropriate\
    \ constraints (such as physical network isolation and\n      the use of administrative\
    \ controls within the operating systems),\n      then network addresses in this\
    \ range can be used, with others\n      discarded or restricted in their use of\
    \ AUTH_SYS.\n      When neither integrity protection nor filtering is possible,\
    \ it is\n      best for the client to ignore trunking and replica information\
    \ or\n      simply not fetch the file system location information for these\n\
    \      purposes.\n      To summarize considerations regarding the use of RPCSEC_GSS\
    \ in\n      fetching file system location information, consider the following\n\
    \      recommendations for requests to interrogate location information,\n   \
    \   with interrogation approaches on the referring and destination\n      servers\
    \ arrived at separately:\n      o  The use of RPCSEC_GSS with integrity protection\
    \ is RECOMMENDED\n         in all cases, since the absence of integrity protection\
    \ exposes\n         the client to the possibility of the results being modified\
    \ in\n         transit.\n      o  The use of requests issued without RPCSEC_GSS\
    \ (e.g., using\n         AUTH_SYS), while undesirable, might be unavoidable in\
    \ some\n         cases.  Where the use of returned file system location\n    \
    \     information cannot be avoided, it should be subject to\n         filtering\
    \ to eliminate untrusted network addresses.  The\n         specifics will vary\
    \ depending on the degree of network\n         isolation and whether the request\
    \ is to the referring or\n         destination servers.\n      Privacy considerations\
    \ relating to uniform client strings (UCS)\n      versus non-uniform client strings\
    \ (non-UCS), discussed in\n      Section 5.6 of [RFC7931], are also applicable\
    \ to their usage for\n      trunking detection in NFS version 4.0.\n"
- title: 8.  IANA Considerations
  contents:
  - "8.  IANA Considerations\n   This document has no IANA actions.\n"
- title: 9.  Updates to the References Section in RFC 7530
  contents:
  - "9.  Updates to the References Section in RFC 7530\n   The following references\
    \ should be added to the Normative References\n   section of [RFC7530]:\n   [RFC7931]\
    \  Noveck, D., Ed., Shivam, P., Lever, C., and B. Baker,\n              \"NFSv4.0\
    \ Migration: Specification Update\", RFC 7931,\n              DOI 10.17487/RFC7931,\
    \ July 2016,\n              <https://www.rfc-editor.org/info/rfc7931>.\n   [RFC8166]\
    \  Lever, C., Ed., Simpson, W., and T. Talpey, \"Remote\n              Direct\
    \ Memory Access Transport for Remote Procedure\n              Call Version 1\"\
    , RFC 8166, DOI 10.17487/RFC8166,\n              June 2017, <https://www.rfc-editor.org/info/rfc8166>.\n\
    \   The following references should be added to the Informative\n   References\
    \ section of [RFC7530]:\n   [RFC4033]  Arends, R., Austein, R., Larson, M., Massey,\
    \ D.,\n              and S. Rose, \"DNS Security Introduction and\n          \
    \    Requirements\", RFC 4033, DOI 10.17487/RFC4033,\n              March 2005,\
    \ <https://www.rfc-editor.org/info/rfc4033>.\n   [RFC7861]  Adamson, A. and N.\
    \ Williams, \"Remote Procedure Call\n              (RPC) Security Version 3\"\
    , RFC 7861, DOI 10.17487/RFC7861,\n              November 2016, <https://www.rfc-editor.org/info/rfc7861>.\n\
    \   [RFC8446]  Rescorla, E., \"The Transport Layer Security (TLS) Protocol\n \
    \             Version 1.3\", RFC 8446, DOI 10.17487/RFC8446, August 2018,\n  \
    \            <https://www.rfc-editor.org/info/rfc8446>.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC5531]  Thurlow, R., \"RPC: Remote Procedure Call Protocol\n          \
    \    Specification Version 2\", RFC 5531, DOI 10.17487/RFC5531,\n            \
    \  May 2009, <https://www.rfc-editor.org/info/rfc5531>.\n   [RFC7530]  Haynes,\
    \ T., Ed. and D. Noveck, Ed., \"Network File System\n              (NFS) Version\
    \ 4 Protocol\", RFC 7530, DOI 10.17487/RFC7530,\n              March 2015, <https://www.rfc-editor.org/info/rfc7530>.\n\
    \   [RFC7931]  Noveck, D., Ed., Shivam, P., Lever, C., and B. Baker,\n       \
    \       \"NFSv4.0 Migration: Specification Update\", RFC 7931,\n             \
    \ DOI 10.17487/RFC7931, July 2016,\n              <https://www.rfc-editor.org/info/rfc7931>.\n\
    \   [RFC8166]  Lever, C., Ed., Simpson, W., and T. Talpey, \"Remote Direct\n \
    \             Memory Access Transport for Remote Procedure Call Version\n    \
    \          1\", RFC 8166, DOI 10.17487/RFC8166, June 2017,\n              <https://www.rfc-editor.org/info/rfc8166>.\n\
    \   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n     \
    \         2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n        \
    \      May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [RFC4033]  Arends, R., Austein, R., Larson,\
    \ M., Massey, D., and S.\n              Rose, \"DNS Security Introduction and\
    \ Requirements\",\n              RFC 4033, DOI 10.17487/RFC4033, March 2005,\n\
    \              <https://www.rfc-editor.org/info/rfc4033>.\n   [RFC5661]  Shepler,\
    \ S., Ed., Eisler, M., Ed., and D. Noveck, Ed.,\n              \"Network File\
    \ System (NFS) Version 4 Minor Version 1\n              Protocol\", RFC 5661,\
    \ DOI 10.17487/RFC5661, January 2010,\n              <https://www.rfc-editor.org/info/rfc5661>.\n\
    \   [RFC7861]  Adamson, A. and N. Williams, \"Remote Procedure Call (RPC)\n  \
    \            Security Version 3\", RFC 7861, DOI 10.17487/RFC7861,\n         \
    \     November 2016, <https://www.rfc-editor.org/info/rfc7861>.\n   [RFC8446]\
    \  Rescorla, E., \"The Transport Layer Security (TLS) Protocol\n             \
    \ Version 1.3\", RFC 8446, DOI 10.17487/RFC8446, August 2018,\n              <https://www.rfc-editor.org/info/rfc8446>.\n"
- title: Appendix A.  Section Classification
  contents:
  - "Appendix A.  Section Classification\n   All sections of the current document\
    \ are considered explanatory with\n   the following exceptions.\n   o  Sections\
    \ 5.1, 5.2.4, 5.2.5, and 5.3 are replacement sections.\n   o  Sections 5.2.2,\
    \ 5.2.3, and 5.2.6 are additional sections.\n   o  Sections 5.2.1, 6, 7, and Section\
    \ 9 are editing sections.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   The authors wish to thank Andy Adamson, who wrote the original\n\
    \   version of this document.  All the innovation in this document is the\n  \
    \ result of Andy's work, while mistakes are best ascribed to the\n   current authors.\n\
    \   The editor wishes to thank Greg Marsden for his support of this work\n   and\
    \ Robert Thurlow for his review and suggestions.\n   Special thanks go to Transport\
    \ Area Director Spencer Dawkins, NFSV4\n   Working Group Chairs Spencer Shepler\
    \ and Brian Pawlowski, and NFSV4\n   Working Group Secretary Thomas Haynes for\
    \ their ongoing support.  We\n   are also grateful for the thorough review of\
    \ this document by\n   Benjamin Kaduk and Ben Campbell.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Charles Lever (editor)\n   Oracle Corporation\n   United\
    \ States of America\n   Email: chuck.lever@oracle.com\n   David Noveck\n   NetApp\n\
    \   United States of America\n   Email: davenoveck@gmail.com\n"
