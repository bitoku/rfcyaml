- title: __initial_text__
  contents:
  - '                  Bootstrapping WebSockets with HTTP/2

    '
- title: Abstract
  contents:
  - "Abstract\n   This document defines a mechanism for running the WebSocket Protocol\n\
    \   (RFC 6455) over a single stream of an HTTP/2 connection.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8441.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2018 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .   3\n   3.  The SETTINGS_ENABLE_CONNECT_PROTOCOL SETTINGS Parameter\
    \ . . .   3\n   4.  The Extended CONNECT Method . . . . . . . . . . . . . . .\
    \ . .   4\n   5.  Using Extended CONNECT to Bootstrap the WebSocket Protocol \
    \ .   4\n     5.1.  Example . . . . . . . . . . . . . . . . . . . . . . . . .\
    \   6\n   6.  Design Considerations . . . . . . . . . . . . . . . . . . . .  \
    \ 6\n   7.  About Intermediaries  . . . . . . . . . . . . . . . . . . . .   6\n\
    \   8.  Security Considerations . . . . . . . . . . . . . . . . . . .   7\n  \
    \ 9.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   7\n    \
    \ 9.1.  A New HTTP/2 Setting  . . . . . . . . . . . . . . . . . .   7\n     9.2.\
    \  A New HTTP Upgrade Token  . . . . . . . . . . . . . . . .   7\n   10. Normative\
    \ References  . . . . . . . . . . . . . . . . . . . .   8\n   Acknowledgments\
    \ . . . . . . . . . . . . . . . . . . . . . . . . .   8\n   Author's Address \
    \ . . . . . . . . . . . . . . . . . . . . . . . .   8\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Hypertext Transfer Protocol (HTTP) [RFC7230] provides\
    \ compatible\n   resource-level semantics across different versions, but it does\
    \ not\n   offer compatibility at the connection-management level.  Other\n   protocols\
    \ that rely on connection-management details of HTTP, such as\n   WebSockets,\
    \ must be updated for new versions of HTTP.\n   The WebSocket Protocol [RFC6455]\
    \ uses the HTTP/1.1 Upgrade mechanism\n   (Section 6.7 of [RFC7230]) to transition\
    \ a TCP connection from HTTP\n   into a WebSocket connection.  A different approach\
    \ must be taken with\n   HTTP/2 [RFC7540].  Due to its multiplexing nature, HTTP/2\
    \ does not\n   allow connection-wide header fields or status codes, such as the\n\
    \   Upgrade and Connection request-header fields or the 101 (Switching\n   Protocols)\
    \ response code.  These are all required by the [RFC6455]\n   opening handshake.\n\
    \   Being able to bootstrap WebSockets from HTTP/2 allows one TCP\n   connection\
    \ to be shared by both protocols and extends HTTP/2's more\n   efficient use of\
    \ the network to WebSockets.\n   This document extends the HTTP CONNECT method,\
    \ as specified for\n   HTTP/2 in Section 8.3 of [RFC7540].  The extension allows\
    \ the\n   substitution of a new protocol name to connect to rather than the\n\
    \   external host normally used by CONNECT.  The result is a tunnel on a\n   single\
    \ HTTP/2 stream that can carry data for WebSockets (or any other\n   protocol).\
    \  The other streams on the connection may carry more\n   extended CONNECT tunnels,\
    \ traditional HTTP/2 data, or a mixture of\n   both.\n   This tunneled stream\
    \ will be multiplexed with other regular streams\n   on the connection and enjoys\
    \ the normal priority, cancellation, and\n   flow-control features of HTTP/2.\n\
    \   Streams that successfully establish a WebSocket connection using a\n   tunneled\
    \ stream and the modifications to the opening handshake\n   defined in this document\
    \ then use the traditional WebSocket Protocol,\n   treating the stream as if it\
    \ were the TCP connection in that\n   specification.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\"\
    , \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described\
    \ in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all\n\
    \   capitals, as shown here.\n"
- title: 3.  The SETTINGS_ENABLE_CONNECT_PROTOCOL SETTINGS Parameter
  contents:
  - "3.  The SETTINGS_ENABLE_CONNECT_PROTOCOL SETTINGS Parameter\n   This document\
    \ adds a new SETTINGS parameter to those defined by\n   [RFC7540], Section 6.5.2.\n\
    \   The new parameter name is SETTINGS_ENABLE_CONNECT_PROTOCOL.  The\n   value\
    \ of the parameter MUST be 0 or 1.\n   Upon receipt of SETTINGS_ENABLE_CONNECT_PROTOCOL\
    \ with a value of 1, a\n   client MAY use the Extended CONNECT as defined in this\
    \ document when\n   creating new streams.  Receipt of this parameter by a server\
    \ does not\n   have any impact.\n   A sender MUST NOT send a SETTINGS_ENABLE_CONNECT_PROTOCOL\
    \ parameter\n   with the value of 0 after previously sending a value of 1.\n \
    \  Using a SETTINGS parameter to opt into an otherwise incompatible\n   protocol\
    \ change is a use of \"Extending HTTP/2\" defined by Section 5.5\n   of [RFC7540].\
    \  Specifically, the addition a new pseudo-header field,\n   \":protocol\", and\
    \ the change in meaning of the :authority pseudo-\n   header field in Section\
    \ 4 require opt-in negotiation.  If a client\n   were to use the provisions of\
    \ the extended CONNECT method defined in\n   this document without first receiving\
    \ a\n   SETTINGS_ENABLE_CONNECT_PROTOCOL parameter, a non-supporting peer\n  \
    \ would detect a malformed request and generate a stream error\n   (Section 8.1.2.6\
    \ of [RFC7540]).\n"
- title: 4.  The Extended CONNECT Method
  contents:
  - "4.  The Extended CONNECT Method\n   Usage of the CONNECT method in HTTP/2 is\
    \ defined by Section 8.3 of\n   [RFC7540].  This extension modifies the method\
    \ in the following ways:\n   o  A new pseudo-header field :protocol MAY be included\
    \ on request\n      HEADERS indicating the desired protocol to be spoken on the\
    \ tunnel\n      created by CONNECT.  The pseudo-header field is single valued\
    \ and\n      contains a value from the \"Hypertext Transfer Protocol (HTTP)\n\
    \      Upgrade Token Registry\" located at\n      <https://www.iana.org/assignments/http-upgrade-tokens/>\n\
    \   o  On requests that contain the :protocol pseudo-header field, the\n     \
    \ :scheme and :path pseudo-header fields of the target URI (see\n      Section\
    \ 5) MUST also be included.\n   o  On requests bearing the :protocol pseudo-header\
    \ field, the\n      :authority pseudo-header field is interpreted according to\n\
    \      Section 8.1.2.3 of [RFC7540] instead of Section 8.3 of that\n      document.\
    \  In particular, the server MUST NOT create a tunnel to\n      the host indicated\
    \ by the :authority as it would with a CONNECT\n      method request that was\
    \ not modified by this extension.\n   Upon receiving a CONNECT request bearing\
    \ the :protocol pseudo-header\n   field, the server establishes a tunnel to another\
    \ service of the\n   protocol type indicated by the pseudo-header field.  This\
    \ service may\n   or may not be co-located with the server.\n"
- title: 5.  Using Extended CONNECT to Bootstrap the WebSocket Protocol
  contents:
  - "5.  Using Extended CONNECT to Bootstrap the WebSocket Protocol\n   The :protocol\
    \ pseudo-header field MUST be included in the CONNECT\n   request, and it MUST\
    \ have a value of \"websocket\" to initiate a\n   WebSocket connection on an HTTP/2\
    \ stream.  Other HTTP request and\n   response-header fields, such as those for\
    \ manipulating cookies, may\n   be included in the HEADERS with the CONNECT method\
    \ as usual.  This\n   request replaces the GET-based request in [RFC6455] and\
    \ is used to\n   process the WebSockets opening handshake.\n   The scheme of the\
    \ target URI (Section 5.1 of [RFC7230]) MUST be\n   \"https\" for \"wss\"-schemed\
    \ WebSockets and \"http\" for \"ws\"-schemed\n   WebSockets.  The remainder of\
    \ the target URI is the same as the\n   WebSocket URI.  The WebSocket URI is still\
    \ used for proxy\n   autoconfiguration.  The security requirements for the HTTP/2\n\
    \   connection used by this specification are established by [RFC7540]\n   for\
    \ https requests and [RFC8164] for http requests.\n   [RFC6455] requires the use\
    \ of Connection and Upgrade header fields\n   that are not part of HTTP/2.  They\
    \ MUST NOT be included in the\n   CONNECT request defined here.\n   [RFC6455]\
    \ requires the use of a Host header field that is also not\n   part of HTTP/2.\
    \  The Host information is conveyed as part of the\n   :authority pseudo-header\
    \ field, which is required on every HTTP/2\n   transaction.\n   Implementations\
    \ using this extended CONNECT to bootstrap WebSockets\n   do not do the processing\
    \ of the Sec-WebSocket-Key and Sec-WebSocket-\n   Accept header fields of [RFC6455]\
    \ as that functionality has been\n   superseded by the :protocol pseudo-header\
    \ field.\n   The Origin [RFC6454], Sec-WebSocket-Version, Sec-WebSocket-Protocol,\n\
    \   and Sec-WebSocket-Extensions header fields are used in the CONNECT\n   request\
    \ and response-header fields as defined in [RFC6455].  Note\n   that HTTP/1 header\
    \ field names were case insensitive, whereas HTTP/2\n   requires they be encoded\
    \ as lowercase.\n   After successfully processing the opening handshake, the peers\
    \ should\n   proceed with the WebSocket Protocol [RFC6455] using the HTTP/2 stream\n\
    \   from the CONNECT transaction as if it were the TCP connection\n   referred\
    \ to in [RFC6455].  The state of the WebSocket connection at\n   this point is\
    \ OPEN, as defined by [RFC6455], Section 4.1.\n   The HTTP/2 stream closure is\
    \ also analogous to the TCP connection\n   closure of [RFC6455].  Orderly TCP-level\
    \ closures are represented as\n   END_STREAM flags ([RFC7540], Section 6.1). \
    \ RST exceptions are\n   represented with the RST_STREAM frame ([RFC7540], Section\
    \ 6.4) with\n   the CANCEL error code ([RFC7540], Section 7).\n"
- title: 5.1.  Example
  contents:
  - '5.1.  Example

    '
- title: '[[ From Client ]]                       [[ From Server ]]'
  contents:
  - "[[ From Client ]]                       [[ From Server ]]\n                 \
    \                       SETTINGS\n                                        SETTINGS_ENABLE_CONNECT_[..]\
    \ = 1\n"
- title: HEADERS + END_HEADERS
  contents:
  - 'HEADERS + END_HEADERS

    '
- title: :method = CONNECT
  contents:
  - ':method = CONNECT

    '
- title: :protocol = websocket
  contents:
  - ':protocol = websocket

    '
- title: :scheme = https
  contents:
  - ':scheme = https

    '
- title: :path = /chat
  contents:
  - ':path = /chat

    '
- title: :authority = server.example.com
  contents:
  - ':authority = server.example.com

    '
- title: sec-websocket-protocol = chat, superchat
  contents:
  - 'sec-websocket-protocol = chat, superchat

    '
- title: sec-websocket-extensions = permessage-deflate
  contents:
  - 'sec-websocket-extensions = permessage-deflate

    '
- title: sec-websocket-version = 13
  contents:
  - 'sec-websocket-version = 13

    '
- title: origin = http://www.example.com
  contents:
  - "origin = http://www.example.com\n                                        HEADERS\
    \ + END_HEADERS\n                                        :status = 200\n     \
    \                                   sec-websocket-protocol = chat\n"
- title: DATA
  contents:
  - 'DATA

    '
- title: WebSocket Data
  contents:
  - "WebSocket Data\n                                        DATA + END_STREAM\n \
    \                                       WebSocket Data\n"
- title: DATA + END_STREAM
  contents:
  - 'DATA + END_STREAM

    '
- title: WebSocket Data
  contents:
  - 'WebSocket Data

    '
- title: 6.  Design Considerations
  contents:
  - "6.  Design Considerations\n   A more native integration with HTTP/2 is certainly\
    \ possible with\n   larger additions to HTTP/2.  This design was selected to minimize\
    \ the\n   solution complexity while still addressing the primary concern of\n\
    \   running HTTP/2 and WebSockets concurrently.\n"
- title: 7.  About Intermediaries
  contents:
  - "7.  About Intermediaries\n   This document does not change how WebSockets interacts\
    \ with HTTP\n   forward proxies.  If a client wishing to speak WebSockets connects\n\
    \   via HTTP/2 to an HTTP proxy, it should continue to use a traditional\n   CONNECT\
    \ (i.e., not with a :protocol pseudo-header field) to tunnel\n   through that\
    \ proxy to the WebSocket server via HTTP.\n   The resulting version of HTTP on\
    \ that tunnel determines whether\n   WebSockets is initiated directly or via a\
    \ modified CONNECT request\n   described in this document.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   [RFC6455] ensures that non-WebSockets clients,\
    \ especially\n   XMLHttpRequest-based clients, cannot make a WebSocket connection.\n\
    \   Its primary mechanism for doing that is the use of Sec-prefixed\n   request-header\
    \ fields that cannot be created by XMLHttpRequest-based\n   clients.  This specification\
    \ addresses that concern in two ways:\n   o  XMLHttpRequest also prohibits use\
    \ of the CONNECT method in\n      addition to Sec-prefixed request-header fields.\n\
    \   o  The use of a pseudo-header field is something that is connection\n    \
    \  specific, and HTTP/2 never allows a pseudo-header to be created\n      outside\
    \ of the protocol stack.\n   The security considerations of [RFC6455], Section\
    \ 10 continue to\n   apply to the use of the WebSocket Protocol when using this\n\
    \   specification, with the exception of 10.8.  That section is not\n   relevant,\
    \ because it is specific to the bootstrapping handshake that\n   is changed in\
    \ this document.\n"
- title: 9.  IANA Considerations
  contents:
  - '9.  IANA Considerations

    '
- title: 9.1.  A New HTTP/2 Setting
  contents:
  - "9.1.  A New HTTP/2 Setting\n   This document registers an entry in the \"HTTP/2\
    \ Settings\" registry\n   that was established by Section 11.3 of [RFC7540].\n\
    \      Code: 0x8\n      Name: SETTINGS_ENABLE_CONNECT_PROTOCOL\n      Initial\
    \ Value: 0\n      Specification: This document\n"
- title: 9.2.  A New HTTP Upgrade Token
  contents:
  - "9.2.  A New HTTP Upgrade Token\n   This document registers an entry in the \"\
    HTTP Upgrade Tokens\"\n   registry that was established by [RFC7230].\n      Value:\
    \ websocket\n      Description: The Web Socket Protocol\n      Expected Version\
    \ Tokens:\n      References: [RFC6455] [RFC8441]\n"
- title: 10.  Normative References
  contents:
  - "10.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC6454]  Barth, A., \"The Web Origin Concept\", RFC 6454,\n            \
    \  DOI 10.17487/RFC6454, December 2011,\n              <https://www.rfc-editor.org/info/rfc6454>.\n\
    \   [RFC6455]  Fette, I. and A. Melnikov, \"The WebSocket Protocol\",\n      \
    \        RFC 6455, DOI 10.17487/RFC6455, December 2011,\n              <https://www.rfc-editor.org/info/rfc6455>.\n\
    \   [RFC7230]  Fielding, R., Ed. and J. Reschke, Ed., \"Hypertext Transfer\n \
    \             Protocol (HTTP/1.1): Message Syntax and Routing\",\n           \
    \   RFC 7230, DOI 10.17487/RFC7230, June 2014,\n              <https://www.rfc-editor.org/info/rfc7230>.\n\
    \   [RFC7540]  Belshe, M., Peon, R., and M. Thomson, Ed., \"Hypertext\n      \
    \        Transfer Protocol Version 2 (HTTP/2)\", RFC 7540,\n              DOI\
    \ 10.17487/RFC7540, May 2015,\n              <https://www.rfc-editor.org/info/rfc7540>.\n\
    \   [RFC8164]  Nottingham, M. and M. Thomson, \"Opportunistic Security for\n \
    \             HTTP/2\", RFC 8164, DOI 10.17487/RFC8164, May 2017,\n          \
    \    <https://www.rfc-editor.org/info/rfc8164>.\n   [RFC8174]  Leiba, B., \"Ambiguity\
    \ of Uppercase vs Lowercase in RFC\n              2119 Key Words\", BCP 14, RFC\
    \ 8174, DOI 10.17487/RFC8174,\n              May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   The 2017 HTTP Workshop had a very productive discussion that\
    \ helped\n   determine the key problem and acceptable level of solution\n   complexity.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Patrick McManus\n   Mozilla\n   Email: mcmanus@ducksong.com\n"
