- title: __initial_text__
  contents:
  - '                       Telnet Environment Option

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This RFC specifies an IAB standards track protocol for\
    \ the Internet\n   community, and requests discussion and suggestions for improvements.\n\
    \   Please refer to the current edition of the \"IAB Official Protocol\n   Standards\"\
    \ for the standardization state and status of this protocol.\n   Distribution\
    \ of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies a mechanism for passing environment\n  \
    \ information between a telnet client and server.  Use of this\n   mechanism enables\
    \ a telnet user to propagate configuration\n   information to a remote host when\
    \ connecting.\n"
- title: 1.  Command Names and Codes
  contents:
  - "1.  Command Names and Codes\n      ENVIRON         36\n          IS         \
    \      0\n          SEND             1\n          INFO             2\n       \
    \   VAR              0\n          VALUE            1\n          ESC          \
    \    2\n          USERVAR          3\n"
- title: 2.  Command Meanings
  contents:
  - "2.  Command Meanings\n   IAC WILL ENVIRON\n      The sender of this command is\
    \ willing to send environment\n      variables.\n   IAC WONT ENVIRON\n      The\
    \ sender of this command refuses to send environment variables.\n   IAC DO ENVIRON\n\
    \      The sender of this command is willing to receive environment\n      variables.\n\
    \   IAC DONT ENVIRON\n      The sender of this command refuses to accept environment\n\
    \      variables.\n   IAC SB ENVIRON SEND [ type ... [ type ... [ ... ] ] ] IAC\
    \ SE\n      The sender of this command requests that the remote side send its\n\
    \      environment variables.  The \"type\" may be either VAR or USERVAR,\n  \
    \    to indicate either well known or user variable names.  Only the\n      side\
    \ that is DO ENVIRON may initiate a SEND command.  If a list of\n      variables\
    \ is specified, then only those variables should be sent.\n      If no list is\
    \ specified, then the default environment, of both\n      well known and user\
    \ defined variables, should be sent.  If one of\n      the variables has no name,\
    \ then all the variables of that type\n      (well known or user defined)  in\
    \ the default environment should be\n      sent.\n   IAC SB ENVIRON IS type ...\
    \ [ VALUE ... ] [ type ... [ VALUE ... ] [\n   The sender of this command is sending\
    \ environment variables.  This\n      command is sent in response to a SEND request.\
    \  Only the side that\n      is WILL ENVIRON may send an IS command.  The \"type\"\
    /VALUE pairs\n      must be returned in the same order as the SEND request specified\n\
    \      them, and there must be a response for each \"type ...\" explicitly\n \
    \     requested.  The \"type\" will be VAR or USERVAR.  Multiple\n      environment\
    \ variables may be sent.  The characters following a\n      \"type\" up to the\
    \ next \"type\" or VALUE specify the variable name.\n      The characters following\
    \ a VALUE up to the next \"type\" specify the\n      value of the variable.  If\
    \ a \"type\" is not followed by a VALUE\n      (e.g., by another VAR, USERVAR,\
    \ or IAC SE) then that variable is\n      undefined.  If a VALUE is immediately\
    \ followed by a \"type\" or IAC,\n      then the variable is defined, but has\
    \ no value.  If an IAC is\n      contained between the IS and the IAC SE, it must\
    \ be sent as IAC\n      IAC.  If a variable or a value contains a VAR, it must\
    \ be sent as\n      ESC VAR.\n      If a variable or a value contains a USERVAR,\
    \ it must be sent as\n      ESC USERVAR.  If a variable or a value contains a\
    \ VALUE, it must\n      be sent as ESC VALUE.  If a variable or a value contains\
    \ an ESC,\n      it must be sent as ESC ESC.\n   IAC SB ENVIRON INFO type ...\
    \ [ VALUE ... ] [ type ... [ VALUE ... ] [\n   The sender of this command is sending\
    \ information about environment\n      variables that have changed.  It is identical\
    \ to the IS command,\n      except that the command is INFO instead of IS.  Only\
    \ the side that\n      is WILL ENVIRON may send an INFO command.  The INFO command\
    \ is not\n      to be used to send initial information; the SEND/IS sequence is\
    \ to\n      be used for that.  The INFO command is to be used to propagate\n \
    \     changes in environment variables, and may be spontaneously\n      generated.\n"
- title: 3.  Default Specification
  contents:
  - "3.  Default Specification\n   The default specification for this option is\n\
    \      WONT ENVIRON\n      DONT ENVIRON\n   meaning there will not be any exchange\
    \ of environment information.\n"
- title: 4.  Motivation
  contents:
  - "4.  Motivation\n   Many operating systems have startup information and environment\n\
    \   variables that contain information that should be propagated to\n   remote\
    \ machines when Telnet connections are established.  Rather than\n   create a\
    \ new Telnet option each time someone comes up with some new\n   information that\
    \ they need propagated through a Telnet session, but\n   that the Telnet session\
    \ itself doesn't really need to know about,\n   this generic information option\
    \ can be used.\n"
- title: 5.  Well Known Variables
  contents:
  - "5.  Well Known Variables\n   USER        This variable is used to transmit the\
    \ user or account\n               name that the client wishes to log into on the\
    \ remote\n               system.  The format of the value the USER variable is\n\
    \               system dependent, as determined by the remote system.\n   JOB\
    \         This variable is used to transmit the job ID that the\n            \
    \   client wishes to use when logging into the remote system.\n              \
    \ The format of the value the JOB variable is system\n               dependent,\
    \ as determined by the remote system.\n   ACCT        This variable is used to\
    \ transmit the account ID that the\n               client wishes to use when logging\
    \ into the remote system.\n               The format of the value the ACCT variable\
    \ is system\n               dependent, as determined by the remote system.\n \
    \  PRINTER     This variable is used to identify the default location\n      \
    \         for printer output.  Because there does not currently\n            \
    \   exist a standard way of naming a printer on a network,\n               the\
    \ format of this variable is currently undefined.\n   SYSTEMTYPE  This is used\
    \ to transmit the type of operating system on\n               the system that\
    \ sends this variable.  It value is\n               identical to the value of\
    \ the SYSTEM (SYST) command in\n               FTP [2].  The format of the value\
    \ shall have as its\n               first word one of the system names listed\
    \ in the\n               current version of the Assigned Numbers document [3].\n\
    \   DISPLAY     This variable is used to transmit the X display location\n   \
    \            of the client.  The format for the value of the DISPLAY\n       \
    \        variable is:\n                  <host>:<dispnum>[.<screennum>]\n    \
    \           This information is identical to the information passed\n        \
    \       using the Telnet X-DISPLAY-LOCATION option.  If both the\n           \
    \    DISPLAY environment variable, and the\n               X-DISPLAY-LOCATION\
    \ option[4] are received, and they\n               contain conflicting information,\
    \ the most recently\n               received information received should be used.\n\
    \   Because it is impossible to anticipate all variables that users may\n   wish\
    \ to exchange, the USERVAR type is provided to allow users to\n   transmit arbitrary\
    \ variable/value pairs.  The use of an additional\n   type allows implementations\
    \ to distinguish between values derived by\n   the remote host software and values\
    \ supplied by the user.  Paranoid\n   implementations will most likely treat both\
    \ types with an equal level\n   of distrust.  The results of a name-space collision\
    \ between a well-\n   known and a user variable are implementation specific.\n"
- title: 6.  Implementation Rules
  contents:
  - "6.  Implementation Rules\n   WILL and DO are used only at the beginning of the\
    \ connection to\n   obtain and grant permission for future negotiations.\n   Once\
    \ the two hosts have exchanged a WILL and a DO, the sender of the\n   DO ENVIRON\
    \ is free to request that environment variables be sent.\n   Only the sender of\
    \ the DO may send requests (IAC SB ENVIRON SEND IAC\n   SE) and only the sender\
    \ of the WILL may transmit actual environment\n   information (via the IAC SB\
    \ ENVIRON IS ... IAC SE command).  Though\n   this option may be used at anytime\
    \ throughout the life of the telnet\n   connection, the exchange of environment\
    \ information will usually\n   happen at the startup of the connection.  This\
    \ is because many\n   operating systems only have mechanisms for propagating environment\n\
    \   information at process creation, so the information is needed before\n   the\
    \ user logs in.  In this section, anything that is in quotes is\n   shorthand\
    \ for a string of ASCII values.  For example, \"joe\" means the\n   three octet\
    \ sequence (in decimal) 106 111 101.\n   The receiving host is not required to\
    \ put all variables that it\n   receives into the environment.  For example, if\
    \ the client should\n   send across USERVAR \"TERM\" VALUE \"xterm\" as an environment\
    \ variable,\n   and the TERMINAL-TYPE [1] option has already been used to determine\n\
    \   the terminal type, the server may safely ignore the TERM variable.\n   Also,\
    \ some startup information may be used in other ways; for\n   example, the values\
    \ for \"USER\", \"ACCT\" and \"PROJ\" values might be\n   used to decide which\
    \ account to log into, and might never be put into\n   the users environment.\
    \  In general, if the server has already\n   determined the value of an environment\
    \ variable by some more accurate\n   means, or if it does not understand a variable\
    \ name, it may ignore\n   the value sent in the ENVIRON option.  The server may\
    \ also prefer to\n   just put all unknown information into the users environment.\
    \  This is\n   the suggested method of implementation, because it allows the user\n\
    \   the most flexibility.\n   The following is an example of use of the option:\n\
    \       Host1                            Host2\n       IAC DO ENVIRON\n      \
    \                                  IAC WILL ENVIRON\n       [ Host1 is now free\
    \ to request environment information ]\n       IAC SB ENVIRON SEND VAR \"USER\"\
    \n       VAR \"ACCT\" VAR USERVAR IAC SE\n       [ The server has now explicitly\
    \ asked for the USER and ACCT\n         variables, the default set of well known\
    \ environment variables,\n         and the default set of user defined variables.\
    \  Note that the\n         client includes the USER information twice; once because\
    \ it was\n         explicitly asked for, and once because it is part of the\n\
    \         default environment.  ]\n                                        IAC\
    \ SB ENVIRON IS VAR \"USER\"\n                                        VALUE \"\
    joe\" VAR \"ACCT\" VALUE\n                                        \"kernel\" VAR\
    \ \"USER\" VALUE \"joe\"\n                                        VAR \"DISPLAY\"\
    \ VALUE \"foo:0.0\"\n                                        USERVAR \"SHELL\"\
    \ VALUE \"/bin/csh\"\n                                        IAC SE\n   It is\
    \ legal for a client to respond with an empty environment (no\n   data between\
    \ the IAC SB and IAC SE) when no well-defined or user\n   variables are currently\
    \ defined.  For example:\n      IAC SB ENVIRON IS IAC SE\n   is a valid response\
    \ to any of the following:\n         IAC SB ENVIRON SEND IAC SE\n         IAC\
    \ SB ENVIRON SEND VAR IAC SE\n         IAC SB ENVIRON SEND USERVAR IAC SE\n  \
    \       IAC SB ENVIRON SEND VAR USERVAR IAC SE\n   (The last example is equivalent\
    \ to the first...)\n   It is expected that any implementation that supports the\
    \ Telnet\n   ENVIRON option will support all of this specification.\n"
- title: 7.  Security Concerns
  contents:
  - "7.  Security Concerns\n   It is important for an implementor of the ENVIRON option\
    \ to\n   understand the interaction of setting options and the\n   login/authentication\
    \ process. Specifically careful analysis should be\n   done to determine which\
    \ variables are \"safe\" to set prior to having\n   the client login.  An example\
    \ of a bad choice would be permitting a\n   variable to be changed that allows\
    \ an intruder to circumvent or\n   compromise the login/authentication program\
    \ itself.\n"
- title: 8.  References
  contents:
  - "8.  References\n   [1] VanBokkelen, J., \"Telnet Terminal-Type Option\", RFC\
    \ 1091, FTP\n       Software, Inc., February 1989.\n   [2] Postel, J. and J. Reynolds,\
    \ \"File Transfer Protocol (FTP)\", STD\n       9, RFC 959, USC/Information Sciences\
    \ Institute, October 1985.\n   [3] Reynolds, J. and J. Postel, \"Assigned Numbers\"\
    , STD 2, RFC 1340,\n       USC/Information Sciences Institute, July 1992.\n  \
    \ [4] Marcy, G., \"Telnet X Display Location Option\", RFC 1096, Carnegie\n  \
    \     Mellon University, March 1989.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are discussed in Section 7.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   David A. Borman, Editor\n   Cray Research, Inc.\n   655F\
    \ Lone Oak Drive\n   Eagan, MN 55123\n   Phone: (612) 452-6650\n   EMail: dab@CRAY.COM\n\
    \   Mailing List: telnet-ietf@CRAY.COM\n"
- title: Chair's Address
  contents:
  - "Chair's Address\n   The working group can be contacted via the current chair:\n\
    \   Steve Alexander\n   INTERACTIVE Systems Corporation\n   1901 North Naper Boulevard\n\
    \   Naperville, IL 60563-8895\n   Phone: (708) 505-9100 x256\n   EMail: stevea@isc.com\n"
