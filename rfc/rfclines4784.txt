This document describes an existing deployed technology that was developed outside the IETF.
It utilizes the RADIUS Access Reject in order to provision service, which is incompatible with the RADIUS protocol, and practices the sharing of secret keys in public key cryptosystems, which is not a practice the IETF recommends.
The IESG recommends against using this protocol as a basis for solving similar problems in the future.
Abstract The Verizon Wireless Dynamic Mobile IP Key Update procedure is a mechanism for distributing and updating Mobile IP (MIP) cryptographic keys in cdma2000(R) networks (including High Rate Packet Data, which is often referred to as 1xEV DO).
The Dynamic Mobile IP Key Update (DMU) procedure occurs between the MIP Mobile Node (MN) and RADIUS Authentication, Authorization and Accounting (AAA) Server via a cdma2000(R) Packet Data Serving Node (PDSN) that is acting as a Mobile IP Foreign Agent (FA).
cdma2000(R) is a registered trademark of the Telecommunications Industry Association (TIA).
The Verizon Wireless Dynamic Mobile IP Key Update procedure is a mechanism for distributing and updating Mobile IP (MIP) cryptographic keys in cdma2000(R) 1xRTT (1X)
[2] and High Rate Packet Data (HRPD) / 1xEV
The Dynamic Mobile IP Key Update (DMU) procedure occurs between the Mobile IP Mobile Node (MN) and the home RADIUS [4] (or Diameter [5])
Authentication, Authorization and Accounting (AAA)
Server via a cdma2000(R) Packet Data Serving Node (PDSN) that is acting as a Mobile IP Foreign Agent (FA).
(In this document, we use the acronym AAAH to indicate the home AAA server as opposed to an AAA server that may be located in a visited system.)
This procedure is intended to support wireless systems conforming to Telecommunications Industry Association (TIA)
TR 45 Standard IS 835 [6].
DMU, however, could be performed in any MIP network to enable bootstrapping of a shared secret between the Mobile Node (MN) and RADIUS AAA Server.
The DMU procedure utilizes RSA public key cryptography to securely distribute unique MIP keys to potentially millions of cdma2000(R) 1X and HRPD/1xEV
using the same RSA public key.
By leveraging the existing cdma2000(R) 1X authentication process, the Dynamic Mobile IP Key Update process employs a mutual authentication mechanism in which device to network authentication is facilitated using cdma2000(R)
1X challenge response authentication, and network  to device authentication is facilitated using RSA encryption.
By utilizing RSA encryption, the MN (or MN manufacturer) is able to pre generate MIP keys (and the Challenge Handshake Authentication Protocol (CHAP) key) and pre encrypt the MIP keys prior to initiation of the DMU procedure.
By employing this pre computation capability, the DMU process requires less computation (by an order of magnitude) during the key exchange than Diffie Hellman Key Exchange.
Conventions Used in This Document
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "
SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119 [1].
The DMU procedure is basically an authentication and key distribution protocol that is more easily understood by separately describing the mechanism's two functional goals: 1) encrypted key distribution and 2) mutual authentication.
By utilizing RSA public key cryptography, MNs can be pre loaded with a common RSA public (encryption) key (by the MN manufacturer), while the associated RSA Private (decryption) key is securely distributed from the MN manufacturer to a trusted service provider.
Alternatively, a service provider can generate its own RSA public/private key pair and only distribute the RSA public key to MN manufacturers for pre loading of MNs.
During the manufacturing process, the MN manufacturer pre loads each MN with the RSA public key.
When the MN is powered up (or client application initiated), the MN can pre generate and encrypt MIP keys for distribution to the Home RADIUS AAA Server during the DMU process.
Alternatively, the MN manufacturer can pre generate MIP keys, encrypt the MIP key payload, and pre load the MN with multiple encrypted MIP key payloads to enable the DMU procedure.
During the initial registration process (or when the AAA requires MIP key update), the MN: 1) generates the appropriate MIP keys, CHAP key, and authentication information, 2) uses the embedded RSA public key to encrypt the payload information, 3) and appends the payload to the MIP Registration Request.
The Registration Request is sent to the Mobile IP Foreign Agent (FA) via the cellular Base Station (BS) and Packet Data Serving Node (PDSN).
When the RADIUS AAA Server receives the encrypted payload (defined later as MIP Key Data), the AAA Server uses the RSA Private key to decrypt
the payload and recover the MIP keys.
RSA Encrypted Key Distribution 2.2.
Mutual authentication can be achieved by delegation of the MN/device authentication by the RADIUS AAA Server to the cdma2000(R)
1X Home Location Register (HLR) and its associated Authentication Center (AC) [7], while the MN utilizes RSA encryption to authenticate the RADIUS AAA Server.
MN/device authentication via an HLR/AC is based on the assumption that the MN's Mobile Station (MS) has an existing Authentication Key (A key) and Shared Secret Data (SSD) with the cdma2000(R) 1X network.
When MS call origination occurs, the AC authenticates the MS.
If authentication is successful, the BS passes the Mobile Station Identifier (MSID) (e.g., Mobile Identification Number (MIN)) to the PDSN.
The "Authenticated MSID" is then included in the RADIUS Access Request (ARQ) message [4] sent from the PDSN to the RADIUS AAA server.
Because the RADIUS AAA server stores the MSID associated with an MN subscription, the RADIUS AAA server is able to authorize MN access if the "Authenticated MSID" matches the RADIUS AAA MSID, i.e., the RADIUS AAA server is delegating its authentication function to the cdma2000(R) 1X HLR/AC.
RADIUS AAA Server authentication (by the MN) is enabled by including a random number (AAA Authenticator) in the encrypted payload sent from the MN to the RADIUS AAA Server.
Only the possessor of the proper RSA Private key will have the ability to decrypt the payload and recover the unique AAA Authenticator.
If the MN receives the correct AAA Authenticator (returned by the RADIUS AAA Server), the MN is assured that it is not interacting with a false Base Station (BS).
A key/SSD authentication is not available in 1xEV DO, or a particular cdma2000(R) 1X network may not support A key authentication, the DMU procedure also includes a random number (MN Authenticator) generated by the MN (and/or pre loaded by the manufacturer), which enables the RADIUS AAA Server to optionally authenticate the MN (in 1XEV DO network only).
The MN Authenticator is transmitted from the MN to the Home AAA Server within the RSA encrypted MIP Key Data payload to prevent interception and possible re use by an attacker.
Ideally, the MN Authenticator is utilized as a One Time Password; however, RSA encryption allows the MN Authenticator to possibly be re used based on each service provider's key distribution policy.
When the encrypted MIP keys are decrypted at the Home RADIUS AAA Server, the MN Authenticator is also decrypted and compared with a copy of the MN Authenticator stored within the Home RADIUS AAA Server.
The Home RADIUS AAA Server receives a copy of the MN Authenticator out of band (not using the cdma2000(R) network) utilizing one of numerous possible methods outside the scope of the standard.
For example, the MN Authenticator MAY be: 1) read out by a Point of Sale provisioner from the MN, input into the subscriber profile, and delivered, along with the Network Access Identifier (NAI), via the billing/provision system to the Home RADIUS AAA server, 2) verbally communicated to a customer care representative via a call, or 3) input by the user interfacing with an interactive voice recognition server.
The out of band MN Authenticator delivery is not specified in this document to maximize the service provider's implementation flexibility.
It is possible for an unscrupulous provisioner or distribution employee to extract the MN Authenticator prior to the DMU procedure; however, the risk associated with such a disclosure is minimal.
Because the HRPD/1xEV DO MN does not transmit a device identifier during the initial registration process, an attacker, even with a stolen MN Authenticator, cannot correlate the password with a particular MN device or NAI, which is typically provisioned just prior to DMU procedure initiation.
The MN Authenticator is typically generated by a random/pseudorandom number generator within the MN.
MN Authenticator generation is initiated by the MN user; however, it may be initially pre loaded by the manufacturer.
When the MN Authenticator is reset (i.e., a new MN Authenticator is generated), all MIP Data Key payloads using the previous MN Authenticator are discarded and the MN immediately re  encrypts a MIP Key Data payload containing the new MN Authenticator.
The MN Authenticator MUST NOT change unless it is explicitly reset by the MN user.
Thus, the MN will generate new MIP Key Data payloads using the same MN Authenticator until the MN Authenticator is updated.
MN Authenticator and MIP Key Data Payload State Machine
Manufacturer pre load of MN Authenticator is not essential since the MN Authenticator is typically generated by the MN.
However, manufacturer pre load may reduce the provisioner burden of accessing a device such as a modem to recover the MN Authenticator for entry into the service provider provisioning system.
Dynamic MIP Key Update Advantages over OTASP
The DMU procedure has numerous advantages over the current Over the  Air Service Provisioning (OTASP) [8] procedure, including:
In DMU, MIP key distribution occurs directly between the MN and AAA Server at the IP Layer.
This eliminates the need for an interface between the Over the Air Functionality (OTAF) and RADIUS AAA server.
MIP key distribution for cdma2000(R) 1X and HRPD/1xEV DO MN.
DMU facilitates MIP key distribution to an MN in a Relay mode MS.
OTASP only delivers the MIP keys to the MS.
For example, OTASP cannot deliver MIP keys to a Laptop MN interfacing with an MS modem.
Pre encryption of MIP Key Data allows the DMU procedure to be an order of magnitude faster than Diffie Hellman Key Exchange.
In DMU, an MN manufacturer can pre generate MIP keys, pre  encrypt the MIP key payload, and pre load the payload in the MN.
Thus, an MN with limited processing power is never required to use RSA encryption.
An OTASP device is always forced to perform computationally expensive exponentiations during the key update process.
In DMU, the MN is protected against Denial of Service (DOS) attacks in which a false BS changes the MIP key for MNs in its vicinity.
OTASP Diffie Hellman Key Exchange is vulnerable to a false BS DOS attack.
OTASP Diffie Hellman Key Exchange does not utilize mutual authentication.
Detailed DMU Procedure Description and Requirements
The Verizon Wireless Dynamic Mobile IP Update procedure is a secure, yet extremely efficient mechanism for distributing essential MIP cryptographic keys (e.g., MN AAAH key and MN HA key) and the Simple IP CHAP key.
The DMU protocol enables pre computation of the encrypted key material payload, known as MIP Key Data.
The DMU procedure purposely avoids the use of Public Key Infrastructure (PKI) Certificates, greatly enhancing the procedure's efficiency.
RSA Public Key Cryptography RSA public key encryption and decryption MUST be performed in accordance with RFC 3447
[9] PKCS #1: RSA Encryption Version 1.5.
DMU MUST support RSA with a 1024 bit modulus by default.
DMU MAY also support 768 bit or 2048 bit RSA, depending on the MN user's efficiency or security requirements.
RSA computation speed ups using a public RSA exponent that is small or has a small number of nonzero bits (e.g., 65537) are acceptable.
Other Public Key Algorithms DMU does not preclude the use of other public key technologies.
The protocol includes a Public Key Type field that defines the type of encryption used.
Why No Public Key Infrastructure (PKI)?
DMU is designed to maximize the efficiency of Mobile IP (MIP) key distribution for cdma2000(R) MNs.
The use of a public key Certificate would improve the flexibility of the MIP key update process by allowing a Certificate Authority (CA) to vouch for the RSA public key delivered to the MN.
Unfortunately, the use of a public key certificate would significantly reduce the efficiency (speed and overhead) of the MIP key update process.
For instance, each MN must be pre loaded with the CA's public key.
During the MIP key distribution process, the network must first deliver its RSA public key (in a certificate) to the MN.
The MN must then use RSA to decrypt the Certificate's digital signature to verify that the presented RSA public key is legitimate.
Such a process significantly increases the number of exchanges, increases air interface overhead, increases the amount of MN computation, and slows the MIP key update process.
Aside from the operational efficiency issues, there are numerous policy and procedural issues that have previously hampered the deployment of PKI in commercial networks.
On a more theoretical basis, PKI is likely unnecessary for this key distribution model.
PKI is ideal for a Many to Many communications model, such as within the Internet, where many different users interface with many different Websites.
However, in the cellular/PCS Packet Data environment, a Many to One (or few) distribution model exists, in which many users interface with one wireless Carrier to establish their Mobile IP security associations (i.e., cryptographic keys).
The DMU procedure relies on each MN to randomly/pseudo randomly generate the MN AAAH key, MN HA key, and Simple IP CHAP key.
Each MN MUST have the capability to generate random/pseudo random numbers in accordance with the guidelines specified in RFC 4086 "Randomness Requirements for Security".
Although it may be more secure for the network to generate cryptographic keys at the RADIUS AAA server, client cryptographic key generation is acceptable due to the significant efficiency improvement in the update process via pre generation and pre  encryption of the MIP keys.
MIP Key Data Payload MIP cryptographic keys (MN AAAH key and MN HA key) and the Simple IP CHAP key are encapsulated and encrypted into a MIP Key Data Payload (along with the AAA Authenticator and MN Authenticator).
The MIP Key Data Payload is appended to the MN's MIP Registration Request (RRQ) as a MIP Vendor/Organization Specific Extension (VSE)
Mobile IP Vendor/Organization Specific Extensions).
When the PDSN converts the MIP RRQ to a RADIUS Access Request (ARQ) message, the MIP Key Data Payload is converted from a MIP Vendor/Organization Specific Extension to a Vendor Specific RADIUS Attribute (VSA).
Upon receipt of the RADIUS Access Request, the RADIUS AAA Server decrypts the MIP Key Data payload using the RSA private (decryption)
key associated with the RSA public (encryption) used to encrypt the MIP Key Data payload.
The MIP Key Data is defined as follows:
MIP Key Data   RSA Public Key
[MN AAAH key, MN HA key, CHAP key, MN Authenticator, AAA Authenticator], Public Key ID, DMUV
128 bit random MN / RADIUS
128 bit random MN / Home Agent (HA) key (encrypted)
128 bit random Simple IP authentication key (encrypted)
the Simple IP CHAP key is not the same as the AT CHAP key used for A12 Interface authentication [11].
MN Authenticator   24 bit random number (displayed as an 8 decimal digit number).
(To be used for 1xEV DO networks.)
(encrypted) AAA Authenticator   64 bit random number used by MN to authenticate the RADIUS AAA Server.
DMU Version (DMUV)   4 bit identifier of DMU version.
Public Key Identifier (Public Key ID)   PKOID, PKOI, PK Expansion,
Where: Public Key Organization Identifier (PKOID)   8 bit serial number identifier of Public Key Organization (PKO)
that created the Public Key.
Public Key Organization Index (PKOI)   8 bit serial number used at PKO discretion to distinguish different public/private key pairs.
PK Expansion   8 bit field to enable possible expansion of PKOID or PKOI fields.
Algorithm Type and Version (ATV)   4 bit identifier of the algorithm used.
Note: If 1024 bit RSA is used, the encrypted portion of the payload is 1024 bits (128 bytes) long.
With the 28 bit Public Key Identifier and 4 bit DMUV, the total MIP Key Data payload is 132 bytes long.
The wireless service provider or carrier MUST generate the RSA Public/Private key pair(s).
An organization within the service provider MUST be designated by the service provider to generate, manage, protect, and distribute RSA Private keys (to the RADIUS AAA Server) and public keys (to the MN manufacturers) in support of the DMU procedure.
Each RSA public/private key pair, generated by the wireless carrier, MUST be assigned a unique Public Key Identifier in accordance with Section 9.
RSA Private keys MUST be protected from disclosure to unauthorized parties.
The service provider organization with the responsibility of generating the RSA public/private key pairs MUST establish an RSA key management policy to protect the RSA Private (decryption) keys.
RSA public keys MAY be freely distributed to all MN manufacturers (along with the Public Key Identifier).
Because one RSA public key can be distributed to million of MNs, it is acceptable to distribute the RSA public key (and Public Key Identifier) to MN manufacturers via e mail, floppy disk, or a Website.
The preferred method is to simply publish the RSA public key and associated Public Key Identifier in the DMU Requirements document sent to each MN manufacturer/OEM.
When public keys are distributed, the public keys MUST be protected against alteration.
If an invalid public key is programmed into a terminal, the terminal may be denied service because DMU cannot be performed successfully.
RSA Private keys MAY be loaded into the RADIUS AAA server manually.
Access to the RADIUS AAA Server RSA
Private keys MUST be restricted to authorized personnel only.
The wireless service provider MAY accept RSA Private key(s)
(and Public Key Identifier) from MN manufacturers that have preloaded MNs with manufacturer generated RSA public keys.
The RADIUS AAA Server used for DMU MUST support the DMU Procedure.
The AAA Server MUST support RSA public key cryptography and maintain a database of RSA Private (decryption) keys indexed by the Public Key Identifier.
Delivery of the RSA Private key(s) to an AAA Server from the MN manufacturer(s) is outside the scope of this document.
However, RSA Private key(s) delivery via encrypted e mail or physical (mail) delivery is likely acceptable.
Access to the RADIUS AAA Server MUST be limited to authorized personnel only.
The RADIUS AAA Server MUST support 1024 bit RSA decryption.
The RADIUS AAA Server MUST maintain a database of RSA public/private key pair indexed by the Public Key Identifier.
The RADIUS AAA Server MUST support the RADIUS attributes specified in Section 8.
The RADIUS AAA Server MUST support a subscriber specific MIP Update State Field.
When the MIP Update State Field is set to UPDATE KEYS (1), the RADIUS AAA Server MUST initiate the DMU procedure by including the MIP Key Request attribute in an Access Reject message sent to the PDSN.
The MIP Update State Field MAY be set to UPDATE KEYS (1) by the service provider's Billing/Provisioning system based on IT policy.
Upon verification of MN AAA Authentication Extension using the decrypted MN AAA key, the RADIUS AAA Server MUST set the MIP Update State Field to KEYS UPDATED (2).
Upon verification of the MN Authentication Extension on a subsequent RRQ/ARQ, the RADIUS AAA Server MUST set the MIP Update State Field to KEYS VALID (0).
Note that the inclusion of a vendor specific attribute in the Access Reject message is not consistent with Section 5.44 of [4].
A RADIUS AAA server that supports DMU SHOULD NOT include a vendor specific attribute if the corresponding Access Request message was not received from a DMU compliant PDSN.
This use of Access Reject is strongly discouraged for any future work based on this document.
Future work should consider the use of Access Challenge to carry this vendor specific attribute.
The RADIUS AAA Server MUST maintain a MIP Update State Field, for each subscription, in one of three states (0   KEYS VALID, 1   UPDATE KEYS, 2   KEYS UPDATED).
The RADIUS AAA Server MUST decrypt the encrypted portion of the MIP Key Data payload using the appropriate RSA Private (decryption) key.
The RADIUS AAA Server MUST check the MN AAA Authentication Extension of the DMU RRQ using the decrypted MN AAA key.
The RADIUS AAA Server MUST include the AAA Authenticator in the Access Accept as a Vendor Specific RADIUS Attribute.
The RADIUS AAA Server MUST support the MN Authenticator options specified in Section 6.1.
The RADIUS AAA Server MUST comply with DMU Procedure failure operation specified in Section 5.
The RADIUS AAA Server MUST support manual hexadecimal entry of MN AAA key, MN HA key, and Simple IP CHAP key via the AAA GUI for each subscription.
The RADIUS AAA Server MUST provide a mechanism to validate the MIN/International Mobile Subscriber Identity (IMSI).
When the MIN/IMSI validation is on, the RADIUS AAA Server MUST compare the MIN/IMSI sent from the PDSN with the MIN/IMSI in the AAA subscription record/profile.
If the MINs or IMSIs do not match, the RADIUS AAA Server MUST send an Access Reject to the PDSN/FA.
The Access Reject MUST NOT contain a MIP Key Data request When the "Ignore MN Authenticator" bit is not set, the RADIUS AAA Server MUST check whether MN AuthenticatorMN   MN AuthenticatorAAA.
If the MN Authenticators do not match, the RADIUS AAA Server MUST send an Access Reject to the PDSN/FA.
The Access Reject MUST NOT contain a MIP Key Data request.
The RADIUS AAA Server MUST include its PKOID (or another designated PKOID) in the MIP Key Request RADIUS Attribute.
The RADIUS AAA Server MUST compare the PKOID sent in the MIP Key Data RADIUS Attribute with a list of valid PKOIDs in the RADIUS AAA Server.
If the PKOID is not valid, the RADIUS AAA Server MUST send an Access Reject to the PDSN with the "Invalid Public Key" Verizon Wireless RADIUS Vendor Specific Attribute (VSA).
the same RADIUS attribute may be assigned a different Vendor identifier.
Note that the inclusion of a vendor specific attribute in the Access Reject message is not consistent with section 5.44 of [4].
A RADIUS AAA server that supports DMU SHOULD NOT include a vendor specific attribute if the corresponding Access Request message was not received from a DMU compliant PDSN.
This use of Access Reject is strongly discouraged for any future work based on this document.
Future work should consider the use of Access Challenge to carry this vendor specific attribute.
The RADIUS AAA Server MUST support delivery of the MN HA key using 3GPP2 RADIUS VSAs as specified in 3GPP2 X.S0011 005 C.
The 3GPP2 VSAs used are the MN HA Shared Key
(Vendor Type   58) and MN HA Security Parameter Index (SPI)
The RADIUS AAA Server SHOULD always accept an Access Request from a cdma2000(R)
Access Node (AN) for a particular subscriber when the UPDATE KEYS (1) and KEYS UPDATED (2) states are set.
In the KEYS VALID (0) state, the RADIUS AAA Server MUST check the Access Request normally.
The RADIUS AAA Server MUST reject an Access Request with the MIP Key Data RADIUS Attribute
while the RADIUS AAA Server is in the KEYS VALID state, i.e., the AAA MUST NOT allow an unsolicited key update to occur.
The MN manufacturer MUST pre load the Wireless Carrier RSA public key (and Public Key Identifier).
The MN manufacturer MUST pre generate and pre load the MN Authenticator.
The MN MUST support 1024 bit RSA Encryption using the pre loaded RSA public key.
The MN MUST support MN AAA, MN HA, and CHAP random/pseudo random key generation (in accordance with RFC 4086).
The MN MUST support random/pseudo random AAA Authenticator and MN Authenticator generation (in accordance with RFC 4086).
Upon power up of an MN handset or launch of the MN client, the MN MUST check whether a MIP Key Data payload has been computed.
If no MIP Key Data payload exists, the MN MUST generate and store a MIP Key Data payload.
generated MIP Key Data payload.
The MN MUST construct the MIP Key Data payload in accordance with Section 4.5.
The MN MUST initiate the DMU Procedure upon receipt of a MIP Registration Reply (RRP) with the MIP Key Request Verizon Wireless Vendor/Organization Specific Extension (VSE).
Upon receipt of an RRP including the MIP Key Request, the MN MUST check the PKOID sent in the MIP Key Request.
If the MN has a public key associated with the PKOID, the MN MUST encrypt the MIP Key Data payload using that public key.
The MN MUST have the capability to designate one public key as the default public key if the MN supports multiple public keys.
The MN MUST insert the Verizon Wireless MIP Key Data VSE (or another Organization specific MIP Key Data VSE) after the Mobile Home Authentication Extension, but before the MN AAA Authentication Extension.
The MIP Key Data Extension must also be located after the FA Challenge Extension, if present.
Note:  The order of the extensions is important for interoperability.
After the FA receives the Access Accept from the RADIUS AAA server, the FA may strip away all MIP extensions after the Mobile Home Authenticator.
If this occurs, it is not necessary for the HA to process the DMU extensions.
Other compatibility problems have also been identified during testing with FAs from various vendors who place extensions in various locations.
Explicit placement of the extensions eliminates these issues.
Upon initiation of the DMU Procedure, the MN MUST compute the MIP authentication extensions using the newly generated temporary MN AAA and MN HA keys.
Upon receipt of the AAA Authenticator MIP Extension, the MN MUST compare the AAA AuthenticatorMN (sent in the encrypted MIP Key Data payload) with the AAA AuthenticatorAAA (returned by the RADIUS AAA Server).
If both values are the same, the MN MUST designate the temporary MN AAA, MN HA key, and the Simple IP CHAP key as permanent.
The MN MUST set its MIP Update State field to KEYS VALID.
The MN MUST support reset (re generation) of the MN Authenticator by the MN user as specified in Section 6.2.
The MN MUST enable the MN user to view the MN Authenticator.
MN Authenticator (24 bit random number) MUST be displayed as an 8 decimal digit number as specified in Section 6.2.
The MN manufacturer MUST pre load each MN with a unique random 24 bit MN Authenticator.
Upon reset of the MN Authenticator, the MN MUST delete all MIP Key Data payloads based on the old MN Authenticator and generate all subsequent MIP Key Data payloads using the new MN Authenticator (until the MN Authenticator is explicitly re set again by the MN user).
The MN MUST support manual entry of all cryptographic keys such as the MN AAA, MN HA, and Simple IP CHAP key.
MN MUST support hexadecimal digit entry of a 128 bit key.
(Note: certain Simple IP devices only enable ASCII entry of a password as the CHAP key.
It is acceptable for future devices to provide both capabilities, i.e., ASCII for a password or hexadecimal for a key.
The authors recommend the use of strong cryptographic keys.)
The MN MUST support the Verizon Wireless MIP Vendor/Organization  Specific Extensions specified in Section 9.
The MN MUST update the RRQ Identification field when re transmitting the same MIP Key Data in a new RRQ.
The MN MUST comply with the DMU Procedure failure operation specified in Section 5.
The RSA public key MAY be stored in the MN flash memory as a constant while being updatable via software patch.
PDSN / Foreign Agent (FA)
The PDSN MUST support the Verizon Wireless RADIUS Vendor Specific Attributes (VSA) specified in Section 8 and the Verizon Wireless MIP Vendor/Organization Specific Extensions (VSEs) specified in Section 9.
The PDSN MAY support the RADIUS VSAs specified in Section 8 and the MIP VSEs specified in Section 9 using another Organization identifier.
Upon receipt of an Access Reject containing the MIP Key Update Request VSA, PDSN MUST send an RRP to the MN with the MIP Key Request VSE.
The PDSN MUST use the RRP error code   89 (Vendor Specific) and MUST not tear down the PPP session after transmission.
Upon receipt of an Access Reject containing the AAA Authenticator VSA, the PDSN MUST send an RRP with the AAA Authenticator MIP VSE.
The PDSN MUST use the RRP error code   89 (Vendor Specific) and MUST NOT tear down the PPP session after transmission.
Upon receipt of an Access Reject containing the Public Key Invalid VSA, the PDSN MUST send an RRP with the Public Key Invalid MIP VSE.
The PDSN MUST use the RRP error code   89 (Vendor Specific) and MUST NOT tear down the PPP session after transmission.
Note that the inclusion of a vendor specific attribute in the Access Reject message is not consistent with section 5.44 of [4].
A PDSN that supports DMU MUST accept an Access Reject message containing a vendor specific attribute.
This use of Access Reject is strongly discouraged for any future work based on this document.
Future work should consider the use of Access Challenge to carry this vendor  specific attribute.
Upon receipt of an RRQ with the MIP Key Data VSE, the PDSN MUST convert the RRQ to an ARQ with the MIP Key Data VSA.
The PDSN MUST send the ARQ to the RADIUS AAA server.
The PDSN/FA MUST comply with the DMU Procedure failure operation specified in Section 5.
The PDSN/FA MUST include the PKOID from the Access Reject MIP Key Update Request VSA in the MIP Key Request MIP VSE sent to the MN.
The HA MUST support the Verizon Wireless MIP Vendor/Organization  Specific Extensions (VSEs) specified in Section 9.
the HA may not encounter a DMU MIP extension if the FA strips away all extensions after the Mobile Home authentication extension.)
The HA MAY support the MIP VSEs specified in Section 9 using another Organization identifier.
the HA may not encounter a DMU MIP extension if the FA strips away all extensions after the Mobile Home authentication extension.)
The HA MUST support delivery of the MN HA key from the Home RADIUS AAA server using 3GPP2 RADIUS Vendor Specific Attributes (VSA) as specified in 3GPP2 X.S0011 005 C.
The 3GPP2 VSAs used are the MN HA Shared Key
(Vendor Type   58) and the MN HA SPI (Vendor Type   57).
This section provides a flow diagram and detailed description of the process flow involving the Dynamic Mobile IP Update procedure process within the IS 2000 network.
DMU Procedure Flow (part 1)
DMU Procedure Flow (part 2)
DMU Procedure Flow (part 3)
Each step in the Figure 4 DMU Process is described as follows:
Each RSA public/private key pair MUST be generated in accordance with RFC 3447.
Each public/private key pair MUST be assigned a unique Public Key Identifier (PKOID) by its creator.
If the service provider does not generate the public/private key pair and deliver the RSA public key to the MN manufacturer for pre installation in the MN, the MN manufacturer MUST generate the RSA public/private key pair (using a 1024 bit modulus) and pre load all MNs with the RSA public (encryption) key.
The MN manufacturer MUST distribute the RSA Private (decryption) key, in a secure manner, to the appropriate service provider.
Assuming that the cdma2000(R) 1X MN has been provisioned with an A key and SSD, the cdma2000(R) 1X MS initiates a call origination and authenticates itself to the IS 2000 network.
Upon IS 2000 authentication success, the BS sends the "authenticated" MSID (e.g., MIN) to the PDSN.
The MN and PDSN establish a PPP session.
The MN sends a MIP Registration Request (RRQ) to the PDSN.
The PDSN converts the MIP RRQ into a RADIUS Access Request (ARQ) message, includes the MSID in the ARQ, and forwards the ARQ to the Home RADIUS AAA server.
The RADIUS AAA Server compares the authenticated MSID (sent from the PDSN) with the MSID in its subscriber database (associated with the NAI).
If the AAA MIP Update State Field is set to UPDATE KEYS (1), the RADIUS AAA Server rejects Packet Data access and orders a MIP key update.
The RADIUS AAA Server sends an Access Reject (code   3) message to the PDSN with the MIP Key Update Request RADIUS VSA.
The PDSN converts the Access Reject to a MIP Registration Reply (RRP) with a MIP Key Request MIP VSE and sends the RRP to the MN.
The MN sets the MN MIP Update State   UPDATE KEYS.
If the MN has no pre generated and pre encrypted MIP Key Data payload, the MN MUST generate the MN AAA key, MN HA key, Chap key, MN Authenticator, and AAA Authenticator in accordance with RFC 4086.
Except for the Public Key Identifier, all generated values MUST be encrypted using the pre loaded RSA public (encryption) key.
The newly generated MN AAATEMP Key and MN HATEMP MUST be used to calculate the MN AAA and Mobile Home Authentication Extensions for the current RRQ.
the MN MAY pre compute the MIP Key Data payload by checking whether a payload exists during each MN power up or application initiation.
The MN sends the RRQ with MIP Key Data MIP VSE to the PDSN.
The PDSN converts the RRQ to a RADIUS ARQ with MIP Key Data RADIUS VSA and forwards the ARQ to the home RADIUS AAA Server.
The MSID is included in the ARQ.
The RADIUS AAA Server compares the authenticated MSID (sent from the PDSN) with the MSID in its subscriber database (associated with the NAI).
If MSIDPDSN   MSIDAAA, the RADIUS AAA server, using the Public Key Identifier, determines the appropriate RSA Private key and decrypts the encrypted portion of the MIP Key Data payload.
The RADIUS AAA Server verifies the MN AAA Authentication Extension Authenticator using the decrypted MN AAA key.
If successful, the RADIUS AAA Server updates the subscriber profile with the decrypted MN AAA key, MN HA key, and CHAP key.
The RADIUS AAA Server sets the AAA MIP Update State Field to KEYS UPDATED (2).
The RADIUS AAA Server sends an Access Reject with AAA Authenticator RADIUS VSA to the PDSN.
The PDSN converts the Access Reject to a MIP RRP with AAA Authenticator MIP VSE.
If AAA AuthenticatorMN   AAA AuthenticatorAAA, the MN assigns MN AAATEMP to MN AAA key and MN HATEMP to MN HA key (MN MIP Update State   KEYS VALID).
Otherwise, the MN discards the temporary keys.
The MN initiates a new RRQ that is converted to an ARQ by the PDSN and forwarded to the RADIUS AAA Server.
The RADIUS AAA Server verifies the MN AAA Authentication Extension and sets the AAA MIP Update State Field to KEYS VALID (0).
The RADIUS AAA Server sends an Access Accept to the PDSN/FA.
The PDSN/FA sends the RRQ to the Home Agent (HA).
The HA sends an Access Request to the RADIUS AAA Server.
The RADIUS AAA Server sends an Access Accept to the HA with the MN HA key.
The HA verifies the Mobile Home Authentication Extension using the MN HA key.
The HA sends an RRP to the PDSN/FA, which forwards the RRP to the MN.
To improve the robustness of the DMU Procedure to account for interruptions due to UDP message loss, RRQ retransmission, or MN failure, the RADIUS AAA Server MUST maintain a MIP Update State Field, for each subscription, in one of three states (0   KEYS VALID, 1   UPDATE KEYS, 2   KEYS UPDATED).
DMU Failure Call Flow with MN and AAA States
Each step in Figure 5 is described as follows:
If (A) is lost, the MN retransmits (A).
The RADIUS AAA server expects (A).
If the AAA server is in the UPDATE KEYS state, the RADIUS AAA Server sends AR with MIP Key Update Request VSA, and the PDSN/FA sends (B).
If (B) is lost, the MN retransmits (A).
The RADIUS AAA server expects (C).
If it receives (A), the RADIUS AAA Server sends AR with MIP Key Update Request VSA, and the PDSN/FA retransmits (B).
If (C) is lost, the mobile retransmits (C).
The RADIUS AAA server expects (C) and updates the MIP keys appropriately.
The RADIUS AAA server transitions to KEYS UPDATED and commits the MIP Key Data.
The RADIUS AAA Server sends the AR with AAA Authenticator VSA, and the PDSN/FA replies to the MN with (D).
If (D) is lost, the mobile retransmits (C) using the same key data sent previously.
The RADIUS AAA server expects (A) using the same keys.
If the RADIUS AAA server receives (C) with the same keys it received previously, it retransmits the AR with AAA Authenticator VSA and the PDSN replies with (D), containing the AAA Authenticator.
If the RADIUS AAA server receives (C) with different keys than it received previously, the RADIUS AAA Server sends AR with MIP Key Update Request VSA, the PDSN/FA retransmits (B), and the RADIUS AAA server transitions to UPDATE KEYS.
If the RADIUS AAA server receives (A), which fails authentication using the keys sent in (C), the RADIUS AAA Server sends AR with MIP Key Update Request, the PDSN/FA retransmits (B), and the RADIUS AAA server transitions to UPDATE KEYS.
Once the PDSN/FA receives (A), forwards the ARQ to the RADIUS AAA server, and the MN AAA Authenticator is verified using the MN AAA key, the RADIUS AAA Server transitions to the KEYS VALID state and the DMU process is complete.
The AAA DMU state machine is described in Figure 6.
Got MIP Key Data MIP Key Data Figure 6.
RADIUS AAA Server DMU State Machine 6.
Because the DMU Procedure occurs at the IP Layer, the DMU Procedure supports MIP key distribution in either the cdma2000(R) 1X or HRPD/1xEV DO network.
the cdma2000(R) HRPD/1xEV DO network does not provide Radio Access Network (RAN) authentication, the DMU Procedure is more susceptible to a false MN attack (than in an cdma2000(R) 1X network with Cellular Authentication and Voice Encryption (CAVE) RAN authentication).
For this reason, the DMU Procedure has the capability to optionally support device to network authentication using the MN Authenticator.
The method of MN Authenticator delivery to the RADIUS AAA server is outside the scope of this document, allowing service providers the flexibility to determine the most efficient/least intrusive procedure to support MN authentication during the DMU Procedure.
The RADIUS AAA server MUST support three MN Authenticator options: 1.
Depending on other potential authentication/fraud prevention options (outside the scope of the DMU Procedure),
the RADIUS AAA Server MUST have the capability to ignore the MN Authenticator.
For example, when the RADIUS AAA Server decrypts the MIP Key Data payload, the AAA Server silently discards the MN Authenticator.
Pre Update Validation Prior to updating a subscription profile with the delivered MIP keys, the RADIUS AAA Server MUST compare the MN AuthenticatorMN
(delivered via the encrypted MIP Key Data payload) with the MN AuthenticatorAAA (possibly delivered via the service provider customer care or billing/provisioning system).
After the DMU Procedure is complete, the RADIUS AAA Server stores the delivered MN AuthenticatorMN and waits for delivery of the MN AuthenticatorAAA (via Customer Care, interactive voice response (IVR), or some other unspecified process).
Once the MN Authenticator is delivered to the RADIUS AAA Server, the AAA MUST compare the MN AuthenticatorMN (delivered via the encrypted MIP Key Data payload) with the MN AuthenticatorAAA.
If the Authenticators match, the RADIUS AAA Server authorizes access and final update of the MIP keys.
The Mobile Node (MN) MUST store the 24 bit MN Authenticator.
The MN MUST display the MN Authenticator as an 8 decimal digit number (via LCD display on a handset or via a GUI for a modem).
If the MN resides within a handset,
Otherwise, the MN MUST display the MN Authenticator via the device's GUI.
The MN MUST have the capability to reset the MN Authenticator.
In other words, the MN MUST have the capability to randomly/pseudo  randomly generate a new 24 bit MN Authenticator upon user command, in accordance with RFC 4086.
The reset feature mitigates possible compromise of the MN Authenticator during shipment/storage.
If the MN resides within a handset, the user MAY reset the MN Authenticator using the following keypad sequence:
Otherwise, the MN MUST reset the MN Authenticator via the device's GUI.
The MN manufacturer MAY pre load the MN with the MN Authenticator.
For example, by pre loading the MN Authenticator and affixing a sticker with the MN Authenticator (8 decimal digit representation) to the MN (e.g., modem), the point of sale representative does not have to retrieve the MN Authenticator from the MN interface.
The MN MAY maintain a separate primary and secondary queue of MN Authenticator/MIP Key Data Payload pairs.
When the MN user resets the primary MN Authenticator, the MN discards the primary MN Authenticator (and any associated MIP Key Data Payload) and assigns the MN Authenticator in the secondary queue as the primary MN Authenticator (and assigns any associated MIP Key Data Payloads to the primary queue).
This feature enables the user/provisioner to reset the MN Authenticator and immediately initiate the DMU procedure without losing the MIP Key Data Payload pre encryption advantage.
Upon MN Authenticator transfer from the secondary to primary queue, the MN MUST generate a new MN Authenticator and associated MIP Key Data Payload for the secondary queue.
The MN MUST check both the primary and secondary MN Authenticator/MIP Key Data Payload queues upon power up or application initiation.
The MN MUST maintain at least one MN Authenticator/MIP Key Data Payload pair in each queue.
MN Authenticator Support MN authentication using the MN Authenticator gives the service provider the maximum flexibility in determining how to deliver the MN Authenticator to the RADIUS AAA Server.
The method of MN Authenticator delivery is outside the scope of this document.
However, to provide some context as to how the MN Authenticator may support MN authentication/fraud prevention in the HRPD/1xEV DO environment, we describe the following possible provisioning scenario.
When a subscriber initially acquires their HRPD/1xEV DO device and service, the point of sale representative records the subscription information into the billing/provision system via a computer terminal at the point of sale.
The billing/provisioning system delivers certain information to the RADIUS AAA Server (e.g., NAI, MSID, Electronic Serial Number (ESN)) including the MN Authenticator, which the point of sale representative retrieves via the MN device's display.
In the case of a modem, the manufacturer may have pre  loaded the MN Authenticator and placed a copy of the MN Authenticator on a sticker attached to the modem.
The point of sale representative simply copies the 8 decimal digit value of the MN Authenticator into the customer profile.
Once the MN is loaded with the proper NAI and powered up, the MN initiates the DMU Procedure with the RADIUS AAA Server.
The RADIUS AAA Server compares the MN delivered MN Authenticator with the billing system delivered MN Authenticator.
If the authenticators match, the RADIUS AAA Server updates the subscriber profile with the delivered MIP keys and authorizes service.
If the Post Update option is enabled within the RADIUS AAA Server, the RADIUS AAA Server tentatively updates the subscription profile until it receives the MN Authenticator via the billing/provision system.
As another option, the service provider MAY use an IVR system in which the HRPD/1xEV DO subscriber calls a provisioning number and inputs the MN Authenticator.
The IVR system then delivers the MN Authenticator to the RADIUS AAA Server for final validation and Packet Data Access.
The DMU Procedure is designed to maximize the efficiency of MIP key distribution while providing adequate key distribution security.
The following provides a description of potential security vulnerabilities and their relative risk to the DMU Procedure: 7.1.
Cryptographic Key Generation by the MN Because the MN is required to properly generate the MN AAA, MN HA, and CHAP key, the MN must perform cryptographic key generation in accordance with accepted random/pseudo random number generation procedures.
MN manufacturers MUST comply with RFC 4086 [12] guidelines, and service providers SHOULD ensure that manufacturers implement acceptable key generation procedures.
The use of predictable cryptographic keys could be devastating to MIP security.
However, the risk of not using acceptable random/pseudo random key generation is minimal as long as MN manufacturers adhere to RFC 4086 guidelines.
Furthermore, if a key generation flaw is identified, the flaw appears readily correctable via a software patch, minimizing the impact.
Man in the Middle Attack
The DMU procedure is susceptible to a Man in the Middle (MITM) attack; however, such an attack appears relatively complex and expensive.
When Authentication and Key Agreement (AKA) is deployed within cdma2000(R)
1X, the MITM Attack will be eliminated.
The risk of an MITM Attack is minimal due to required expertise, attack expense, and
impending cdma2000(R) 1X mutual authentication protection.
If a particular cdma2000(R) 1X network does not support A key authentication, the MN Authenticator MAY optionally be used.
Because one RSA Private key may be associated with millions of MNs (RSA public key), it is important to protect the RSA Private key from disclosure to unauthorized parties.
If a MN manufacturer is generating the RSA public/private key pair, the MN manufacturer MUST establish adequate security procedures/policies regarding the dissemination of the RSA
Private key to the appropriate service provider.
Private key SHOULD be distributed to a legitimate cdma2000(R) service provider only.
If a service provider is generating their own RSA public/private key pair, the service provider MUST protect the RSA Private key from disclosure to unauthorized parties.
Several vulnerabilities have been identified in certain implementations of RSA; however, they do not appear applicable to the DMU Procedure.
The MN appears to be protected against a false BS denial of service (DOS) attack, since only the proper RADIUS AAA server can recover the AAA Authenticator.
This method of preventing a false base station attack assumes security of the network messaging between the AAA and the serving system, as discussed in Section 7.9.
The cdma2000(R) 1X network appears adequately protected against a false MN by IS 2000 challenge response authentication.
If DMU is used outside the cellular domain, equivalent authentication procedures are required for the same level of security.
AAA Server MAY optionally authenticate the MN using the MN Authenticator to prevent a fraudulent MN activation.
There is no explicit lifetime for the keys distributed by DMU.
The lifetime of the keys distributed by DMU is determined by the system operator through the RADIUS AAA server.
The MN AAA and MN HA key lifetimes can be controlled by initiating an update as needed.
Furthermore, the DMU process is protected against false initiation because the MN cannot initiate DMU.
This makes it unworkable to provide an explicit lifetime to the MN, since the MN cannot take any action to renew the keys after expiration.
The security of the MN HA keys delivered from the RADIUS AAA server to the MIP home agent requires confidentiality for network messages containing such keys.
The specification of security requirements for network messages is the responsibility of the operator, and is outside the scope of this document.
(Note that similar considerations apply to the distribution of Shared Secret Data, which is already transmitted between nodes in the ANSI 41 network.)
If DMU is used outside the domain of a cellular operator, RADIUS security features MAY be used, including the Request Authenticator and Response Authenticator fields defined in [4] and the Message  Authenticator attribute defined in [13].
Three new RADIUS Attributes are required to support the DMU Procedure and are specified as follows:
Type: 26 Length: >9 Verizon Wireless Enterprise/Vendor ID:
12951 MIP Key Update Request:
The Home RADIUS AAA Server includes this attribute to indicate that MIP key update is required.
PKOID of the RADIUS AAA Server
Key data payload containing the encrypted MN AAA key, MN HA key, CHAP key, MN Authenticator, and AAA Authenticator.
This payload also contains the Public Key Identifier.
2 Vendor Length   134 bytes NOTE:
Vendor Length depends on the size of the RSA modulus.
For example, when RSA 512 is used, Vendor Length   70 bytes.
Vendor Value   128 byte RSA encryption payload (when 1024 bit RSA used), which contains encrypted MN AAA key, MN HA key, CHAP key, MN Authenticator, and AAA Authenticator.
The four (4) byte Public Key Identifier is concatenated to the encrypted payload.
The 64 bit AAA Authenticator value decrypted by the Home RADIUS AAA Server.
Vendor Type   3 Vendor Length
10 bytes Vendor Value   decrypted AAA Authenticator from Home RADIUS AAA Server.
The home RADIUS AAA Server includes this attribute to indicate that the public key used by the MN is not valid.
Vendor Type   4 Vendor Length   2 bytes Vendor Value   none.
Note:  An Organization may define RADIUS VSAs using its own Organization identifier.
Verizon Wireless Mobile IP Extensions Three Verizon Wireless Mobile IP Vendor/Organization Specific Extensions (VSEs)
(RFC 3115), required to support the DMU Procedure, are specified as follows:
Type: 38 (CVSE TYPE NUMBER)
Verizon Wireless Vendor ID: 12951 (high order octet is 0 and low order octets are the SMI Network Management Private Enterprise Code of the Vendor in the network byte order, as defined by IANA).
Critical Vendor/Organization Specific Extension MIP Key Request:
The Home RADIUS AAA Server includes this extension to indicate that MIP key update is required.
Length   7 NOTE: The RFC 3115 Editor has stated that the Reserved field is not included in the length determination.
PKOID sent in the RADIUS MIP Key Update Request attribute.
Key data payload containing encrypted MN AAA key, MN HA key, CHAP key, MN Authenticator, and AAA Authenticator.
This payload also contains the Public Key Identifier.
Length depends on the size of the RSA modulus.
For example, when RSA 512 is used, Length   74 bytes.
Vendor CVSE Type   2 Vendor CVSE Value   128 byte RSA encryption payload (when 1024 bit RSA used) which contains encrypted MN AAA key, MN HA key, CHAP key, MN Authenticator, and AAA Authenticator.
The four (4) byte Public Key Identifier and DMUV is concatenated to the encrypted payload.
The 64 bit AAA Authenticator value decrypted by the Home RADIUS AAA Server.
CVSE Value   decrypted AAA Authenticator from the Home RADIUS AAA Server.
The Home RADIUS AAA Server includes this extension to indicate that the public key used by the MN is not valid.
Note:  An Organization may define VSEs using their own Organization identifier.
Public Key Identifier and DMU Version
The Public Key Identifier (Pub Key ID) is used during the Dynamic Mobile IP Update (DMU) procedure to allow the RADIUS AAA Server to distinguish between different public keys (which may be assigned by different manufacturers, service providers, or other organizations).
The Public Key Identifier consists of the PKOID, PKOI, PK Identifier, and ATV fields.
The DMU Version field enables subsequent revisions of the DMU procedure.
Public Key Identifier and DMUV
Each Public Key Organization (PKO) MUST be assigned a Public Key Organization Identifier (PKOID) to enable the RADIUS AAA Server to distinguish between different public keys created by different PKOs (see Table 1).
If a service provider does not provide the MN manufacturer with a (RSA) public key, the manufacturer MUST generate a unique RSA Public/Private key pair and pre load each MN with the RSA public key (1024 bit modulus by default).
The manufacturer MAY share the same RSA Private key with multiple service providers as long as reasonable security procedures are established and maintained (by the manufacturer) to prevent disclosure of the RSA Private (decryption) key to an unauthorized party.
The Public Key Organization Index (PKOI) is an 8 bit field whose value is defined at the discretion of the PKO.
For example, a device manufacturer MAY incrementally assign a new PKOI for each Public/Private key pair when the pair is created.
The PK Expansion field enables support for additional PKOs or expansion of the PKOI.
The DMU Version field allows for DMU Procedure version identification (see Table 2).
The Algorithm Type and Version (ATV) field allows for identification of the public key algorithm and version used (see Table 3).
Public Key Organization Identification Table PKOID
Operadora UNEFON SA de CV
Ltd. Note: 80 through FF will be assigned by the PKOID administrator (Verizion Wireless).
Algorithm Type and Version ATV
The Dynamic Mobile IP Key Update (DMU) Procedure enables the efficient, yet secure, delivery of critical Mobile IP cryptographic keys.
The use of cryptographic keys (and hence, the bootstrapping of such MIP keys using the DMU Procedure) is essential to commercial delivery of Mobile IP service in cdma2000 1xRTT and HRPD/1xEV DO networks or other networks that utilize Mobile IP.
Cleartext Mode Operation DMU supports a cleartext mode for development testing where DMUV   7.
The MIP Key Data payload will assume the same size as if RSA 1024 bit encryption were applied to the payload.
In this mode, the MIP Key Data RADIUS Attribute and MIP Vendor Specific Extension will be 134 bytes and 138 bytes in length, respectively.
Thus, in cleartext mode, the payload MUST consist of 48 bytes of keys (MN AAA, MN HA, and CHAP key), 8 byte AAA Authenticator, 3 byte MN Authenticator.
The next 69 bytes will be padded with "0" bits.
AAAH key, MN HA key, CHAP key, MN Authenticator, AAA Authenticator, Padding (69 bytes), Public Key IDi,
128 bit random MN / RADIUS
128 bit random MN / Home Agent (HA) key.
128 bit random Simple IP authentication key.
AAA Authenticator   64 bit random number used by MN to authenticate the RADIUS AAA Server.
Padding   69 bytes of 0's.
DMU Version (DMUV)   4 bit identifier of DMU version.
Public Key Identifier (Pub  Key ID)
Where: Public Key Organization Identifier (PKOID)   8 bit serial number identifier of the Public Key Organization (PKO) that created the Public Key.
Public Key Organization Index (PKOI)   8 bit serial number used at PKO discretion to distinguish different Public/Private key pairs.
PK Expansion   8 bit field to enable possible expansion of PKOID or PKOI fields.
Algorithm Type and Version (ATV)   4 bit identifier of the algorithm used.
