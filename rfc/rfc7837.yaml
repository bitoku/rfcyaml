- title: __initial_text__
  contents:
  - '        IPv6 Destination Option for Congestion Exposure (ConEx)

    '
- title: Abstract
  contents:
  - "Abstract\n   Congestion Exposure (ConEx) is a mechanism by which senders inform\n\
    \   the network about the congestion encountered by packets earlier in\n   the\
    \ same flow.  This document specifies an IPv6 destination option\n   that is capable\
    \ of carrying ConEx markings in IPv6 datagrams.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for examination, experimental implementation, and\n   evaluation.\n\
    \   This document defines an Experimental Protocol for the Internet\n   community.\
    \  This document is a product of the Internet Engineering\n   Task Force (IETF).\
    \  It represents the consensus of the IETF\n   community.  It has received public\
    \ review and has been approved for\n   publication by the Internet Engineering\
    \ Steering Group (IESG).  Not\n   all documents approved by the IESG are a candidate\
    \ for any level of\n   Internet Standard; see Section 2 of RFC 5741.\n   Information\
    \ about the current status of this document, any errata,\n   and how to provide\
    \ feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7837.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n   2.  Conventions Used in This Document . . . . . . . . . .\
    \ . . . .   3\n   3.  Requirements for the Coding of ConEx in IPv6  . . . . .\
    \ . . .   4\n   4.  ConEx Destination Option (CDO)  . . . . . . . . . . . . .\
    \ . .   5\n   5.  Implementation in the Fast Path of ConEx-Aware Routers  . .\
    \ .   8\n   6.  Tunnel Processing . . . . . . . . . . . . . . . . . . . . . .\
    \   8\n   7.  Compatibility with Use of IPsec . . . . . . . . . . . . . . .  \
    \ 9\n   8.  Mitigating Flooding Attacks by Using Preferential Drop  . . .   9\n\
    \   9.  Security Considerations . . . . . . . . . . . . . . . . . . .  11\n  \
    \ 10. IANA Considerations . . . . . . . . . . . . . . . . . . . . .  11\n   11.\
    \ References  . . . . . . . . . . . . . . . . . . . . . . . . .  11\n     11.1.\
    \  Normative References . . . . . . . . . . . . . . . . . .  11\n     11.2.  Informative\
    \ References . . . . . . . . . . . . . . . . .  12\n   Acknowledgements  . . .\
    \ . . . . . . . . . . . . . . . . . . . . .  13\n   Authors' Addresses  . . .\
    \ . . . . . . . . . . . . . . . . . . . .  13\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Congestion Exposure (ConEx) [RFC7713] is a mechanism by\
    \ which senders\n   inform the network about the congestion encountered by packets\n\
    \   earlier in the same flow.  This document specifies an IPv6\n   destination\
    \ option [RFC2460] that can be used for performing ConEx\n   markings in IPv6\
    \ datagrams.\n   This document specifies the ConEx wire protocol in IPv6.  The\
    \ ConEx\n   information can be used by any network element on the path to, for\n\
    \   example, do traffic management or egress policing.  Additionally,\n   this\
    \ information will potentially be used by an audit function that\n   checks the\
    \ integrity of the sender's signaling.  Further, each\n   transport protocol that\
    \ supports ConEx signaling will need to\n   precisely specify when the transport\
    \ sets ConEx markings (e.g., the\n   behavior for TCP is specified in [RFC7786]).\n\
    \   This document specifies ConEx for IPv6 only.  Due to space\n   limitations\
    \ in the IPv4 header and the risk of options that might be\n   stripped by a middlebox\
    \ in IPv4, the primary goal of the working\n   group was to specify ConEx in IPv6\
    \ for experimentation.\n   This specification is experimental to allow the IETF\
    \ to assess\n   whether the decision to implement the ConEx Signal as a destination\n\
    \   option fulfills the requirements stated in this document, as well as\n   to\
    \ evaluate the proposed encoding of the ConEx Signals as described\n   in [RFC7713].\n\
    \   The duration of this experiment is expected to be no less than two\n   years\
    \ from publication of this document as infrastructure is needed\n   to be set\
    \ up to determine the outcome of this experiment.\n   Experimenting with ConEx\
    \ requires IPv6 traffic.  Even though the\n   amount of IPv6 traffic is growing,\
    \ the traffic mix carried over IPv6\n   is still very different than over IPv4.\
    \  Therefore, it might take\n   longer to find a suitable test scenario where\
    \ only IPv6 traffic is\n   managed using ConEx.\n"
- title: 2.  Conventions Used in This Document
  contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\",\"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 3.  Requirements for the Coding of ConEx in IPv6
  contents:
  - "3.  Requirements for the Coding of ConEx in IPv6\n   A set of requirements for\
    \ an ideal concrete ConEx wire protocol is\n   given in [RFC7713].  The ConEx\
    \ working group recognized that it will\n   be difficult to find an encoding in\
    \ IPv6 that satisfies all\n   requirements.  The choice in this document to implement\
    \ the ConEx\n   information in a destination option aims to satisfy those\n  \
    \ requirements that constrain the placement of ConEx information:\n   R-1:  The\
    \ marking mechanism needs to be visible to all ConEx-capable\n         nodes on\
    \ the path.\n   R-2:  The mechanism needs to be able to traverse nodes that do\
    \ not\n         understand the markings.  This is required to ensure that ConEx\n\
    \         can be incrementally deployed over the Internet.\n   R-3:  The presence\
    \ of the marking mechanism should not significantly\n         alter the processing\
    \ of the packet.  This is required to ensure\n         that ConEx-Marked packets\
    \ do not face any undue delays or drops\n         due to a badly chosen mechanism.\n\
    \   R-4:  The markings should be immutable once set by the sender.  At\n     \
    \    the very least, any tampering should be detectable.\n   Based on these requirements,\
    \ four solutions to implement the ConEx\n   information in the IPv6 header have\
    \ been investigated: hop-by-hop\n   options, destination options, using IPv6 header\
    \ bits (from the flow\n   label), and new extension headers.  After evaluating\
    \ the different\n   solutions, the ConEx working group concluded that the use\
    \ of a\n   destination option would best address these requirements.\n   Hop-by-hop\
    \ options would have been the best solution for carrying\n   ConEx markings if\
    \ they had met requirement R-3.  There is currently\n   some work ongoing in the\
    \ 6MAN working group to address this very\n   issue [HBH-HEADER].  This new behavior\
    \ would address R-3 and would\n   make hop-by-hop options the preferred solution\
    \ for carrying ConEx\n   markings.\n   Choosing to use a destination option does\
    \ not necessarily satisfy the\n   requirement for on-path visibility, because\
    \ it can be encapsulated by\n   additional IP header(s).  Therefore, ConEx-aware\
    \ network devices,\n   including policy or audit devices, might have to follow\
    \ the chaining\n   (extension-) headers into inner IP headers to find ConEx information.\n\
    \   This choice was a compromise between fast-path performance of ConEx-\n   aware\
    \ network nodes and visibility, as discussed in Section 5.\n   Please note that\
    \ the IPv6 specification [RFC2460] does not require or\n   expect intermediate\
    \ nodes to inspect destination options such as the\n   ConEx Destination Option\
    \ (CDO).  This implies that ConEx-aware\n   intermediate nodes following this\
    \ specification need updated\n   extension header processing code to be able read\
    \ the destination\n   options.\n"
- title: 4.  ConEx Destination Option (CDO)
  contents:
  - "4.  ConEx Destination Option (CDO)\n   The CDO is a destination option that can\
    \ be included in IPv6\n   datagrams that are sent by ConEx-aware senders in order\
    \ to inform\n   ConEx-aware nodes on the path about the congestion encountered\
    \ by\n   packets earlier in the same flow or the expected risk of encountering\n\
    \   congestion in the future.  The CDO does not have any alignment\n   requirements.\n\
    \    0                   1                   2\n    0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  Option Type  | Option Length |X|L|E|C|  res  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                 Figure 1: ConEx Destination Option Layout\n   Option Type\n\
    \      8-bit identifier of the type of option.  Set to the value 30\n      (0x1E)\
    \ allocated for experimental work.\n   Option Length\n      8-bit unsigned integer.\
    \  The length of the option in octets\n      (excluding the Option Type and Option\
    \ Length fields).  Set to the\n      value 1.\n   X Bit\n      When this bit is\
    \ set, the transport sender is using ConEx with\n      this packet.  If it is\
    \ not set, the sender is not using ConEx with\n      this packet.\n   L Bit\n\
    \      When this bit is set, the transport sender has experienced a loss.\n  \
    \ E Bit\n      When this bit is set, the transport sender has experienced\n  \
    \    congestion signaled using Explicit Congestion Notification (ECN)\n      [RFC3168].\n\
    \   C Bit\n      When this bit is set, the transport sender is building up\n \
    \     congestion credit in the audit function.\n   Reserved (res)\n      These\
    \ four bits are not used in the current specification.  They\n      are set to\
    \ zero by the sender and are ignored by the receiver.\n   All packets sent over\
    \ a ConEx-capable TCP connection or belonging to\n   the same ConEx-capable flow\
    \ MUST carry the CDO.  The chg bit (the\n   third-highest-order bit) in the CDO\
    \ Option Type field is set to zero,\n   meaning that the CDO option is immutable.\
    \  Network devices with\n   ConEx-aware functions read the flags, but all network\
    \ devices MUST\n   forward the CDO unaltered.\n   The CDO SHOULD be placed as\
    \ the first option in the Destination\n   Option header before the AH [RFC4302]\
    \ and/or Encapsulating Security\n   Payload (ESP) [RFC4303] (if present).  The\
    \ IPsec Authentication\n   Header (AH) MAY be used to verify that the CDO has\
    \ not been modified.\n   If the X bit is zero, all the other three bits are undefined\
    \ and thus\n   MUST be ignored and forwarded unchanged by network nodes.  The\
    \ X bit\n   set to zero means that the connection is ConEx-capable but that this\n\
    \   packet MUST NOT be counted when determining ConEx information in an\n   audit\
    \ function.  This can be the case if no congestion feedback is\n   (currently)\
    \ available, e.g., in TCP if one endpoint has been\n   receiving data but sending\
    \ nothing but pure ACKs (no user data) for\n   some time.  This is because pure\
    \ ACKs do not advance the sequence\n   number, so the TCP endpoint receiving them\
    \ cannot reliably tell\n   whether any have been lost due to congestion.  Pure\
    \ TCP ACKs cannot\n   be ECN-marked either [RFC3168].\n   If the X bit is set,\
    \ any of the other three bits (L, E, or C) might\n   be set.  Whenever one of\
    \ these bits is set, the number of bytes\n   carried by this IP packet (including\
    \ the IP header that directly\n   encapsulates the CDO and everything that IP\
    \ header encapsulates)\n   SHOULD be counted to determine congestion or credit\
    \ information.  In\n   IPv6, the number of bytes can easily be calculated by adding\
    \ the\n   number 40 (length of the IPv6 header in bytes) to the value present\n\
    \   in the Payload Length field in the IPv6 header.\n   The credit signal represents\
    \ potential for congestion.  If a\n   congestion event occurs, a corresponding\
    \ amount of credit is consumed\n   as outlined in [RFC7713].  A ConEx-enabled\
    \ sender SHOULD, therefore,\n   signal sufficient credit in advance of any congestion\
    \ event to cover\n   the (estimated maximum) amount of lost or CE-marked bytes\
    \ that could\n   occur in such a congestion event.  This estimation depends on\
    \ the\n   heuristics used and aggressiveness of the sender when deciding the\n\
    \   appropriate sending rate (congestion control).  Note that the maximum\n  \
    \ congestion risk is that all packets in flight get lost or CE-marked;\n   therefore,\
    \ this would be the most conservative estimation for the\n   congestion risk.\
    \  After a congestion event, if the sender intends to\n   take the same risk again,\
    \ it just needs to replace the consumed\n   credit as non-consumed credit does\
    \ not expire.  For the case of TCP,\n   this is described in detail in [RFC7786].\n\
    \   If the L or E bit is set, a congestion signal in the form of a loss\n   or\
    \ an ECN mark, respectively, was previously experienced by the same\n   connection.\n\
    \   In principle, all of these three bits (L, E, or C) might be set in\n   the\
    \ same packet.  In this case, the packet size MUST be counted once\n   for each\
    \ respective ConEx information counter.\n   If a network node extracts the ConEx\
    \ information from a connection,\n   it is expected to hold this information in\
    \ bytes, e.g., comparing the\n   total number of bytes sent with the number of\
    \ bytes sent with ConEx\n   congestion marks (L or E) to determine the current\
    \ whole path\n   congestion level.  Therefore, a ConEx-aware node that processes\
    \ the\n   CDO MUST use the Payload Length field of the preceding IPv6 header\n\
    \   for byte-based counting.  When a ratio is measured and equally sized\n   packets\
    \ can be assumed, counting the number of packets (instead of\n   the number of\
    \ bytes) should deliver the same result.  But an audit\n   function must be aware\
    \ that this estimation can be quite wrong if,\n   for example, different sized\
    \ packed are sent; thus, it is not\n   reliable.\n   All remaining bits in the\
    \ CDO are reserved for future use (which are\n   currently the last four bits\
    \ of the eight bit option space).  A ConEx\n   sender SHOULD set the reserved\
    \ bits in the CDO to zero.  Other nodes\n   MUST ignore these bits and ConEx-aware\
    \ intermediate nodes MUST\n   forward them unchanged, whatever their values. \
    \ They MAY log the\n   presence of a non-zero Reserved field.\n   The CDO is only\
    \ applicable on unicast or anycast packets (for\n   reasoning, see the note regarding\
    \ item J on multicast at the end of\n   Section 3.3 of [RFC7713]).  A ConEx sender\
    \ MUST NOT send a packet\n   with the CDO to a multicast address.  ConEx-capable\
    \ network nodes\n   MUST treat a multicast packet with the X flag set the same\
    \ as an\n   equivalent packet without the CDO, and they SHOULD forward it\n  \
    \ unchanged.\n   As stated in [RFC7713] (see Section 3.3, item N on network-layer\n\
    \   requirements), protocol specs should describe any warning or error\n   messages\
    \ relevant to the encoding.  There are no warnings or error\n   messages associated\
    \ with the CDO.\n"
- title: 5.  Implementation in the Fast Path of ConEx-Aware Routers
  contents:
  - "5.  Implementation in the Fast Path of ConEx-Aware Routers\n   The ConEx information\
    \ is being encoded into a destination option so\n   that it does not impact forwarding\
    \ performance in the non-ConEx-aware\n   nodes on the path.  Since destination\
    \ options are not usually\n   processed by routers, the existence of the CDO does\
    \ not affect the\n   fast-path processing of the datagram on non-ConEx-aware routers,\n\
    \   i.e., they are not pushed into the slow path towards the control\n   plane\
    \ for exception processing.\n   ConEx-aware nodes still need to process the CDO\
    \ without severely\n   affecting forwarding.  For this to be possible, the ConEx-aware\n\
    \   routers need to quickly ascertain the presence of the CDO and process\n  \
    \ the option if it is present.  To efficiently perform this, the CDO\n   needs\
    \ to be placed in a fairly deterministic location.  In order to\n   facilitate\
    \ forwarding on ConEx-aware routers, ConEx-aware senders\n   that send IPv6 datagrams\
    \ with the CDO SHOULD place the CDO as the\n   first destination option in the\
    \ Destination Option header.\n"
- title: 6.  Tunnel Processing
  contents:
  - "6.  Tunnel Processing\n   As with any destination option, an ingress tunnel endpoint\
    \ will not\n   normally copy the CDO when adding an encapsulating outer IP header.\n\
    \   In general, an ingress tunnel SHOULD NOT copy the CDO to the outer\n   header\
    \ as this would change the number of bytes that would be\n   counted.  However,\
    \ it MAY copy the CDO to the outer header in order\n   to facilitate visibility\
    \ by subsequent on-path ConEx functions if the\n   configuration of the tunnel\
    \ ingress and the ConEx nodes is\n   coordinated.  This trades off the performance\
    \ of ConEx functions\n   against that of tunnel processing.\n   An egress tunnel\
    \ endpoint SHOULD ignore any CDO in the outer header\n   on decapsulation of an\
    \ outer IP header.  The information in any inner\n   CDO will always be considered\
    \ correct, even if it differs from any\n   outer CDO.  Therefore, the decapsulator\
    \ can strip the outer CDO\n   without comparison to the inner.  A decapsulator\
    \ MAY compare the two\n   and MAY log any case where they differ.  However, the\
    \ packet MUST be\n   forwarded irrespective of any such anomaly, given an outer\
    \ CDO is\n   only a performance optimization.\n   A network node that assesses\
    \ ConEx information SHOULD search for\n   encapsulated IP headers until a CDO\
    \ is found.  At any specific\n   network location, the maximum necessary depth\
    \ of search is likely to\n   be the same for all packets between a given set of\
    \ tunnel endpoints.\n"
- title: 7.  Compatibility with Use of IPsec
  contents:
  - "7.  Compatibility with Use of IPsec\n   A network-based attacker could alter\
    \ ConEx information to fool an\n   audit function in a downstream network into\
    \ discarding packets.  If\n   the endpoints are using the IPsec Authentication\
    \ Header (AH)\n   [RFC2460] to detect alteration of IP headers along the path,\
    \ AH will\n   also detect alteration of the CDO header.  Nonetheless, AH protection\n\
    \   will rarely need to be introduced for ConEx, because attacks by one\n   network\
    \ on another are rare if they are traceable.  Other known\n   attacks from one\
    \ network on another, such as TTL expiry attacks, are\n   more damaging to the\
    \ innocent network (because the ConEx audit\n   discards silently) and less traceable\
    \ (because TTL is meant to\n   change, whereas CDO is not).\n   Section 4 specifies\
    \ that the CDO is placed in the Destination Option\n   header before the AH and/or\
    \ ESP headers so that ConEx information\n   remains in the clear if ESP is being\
    \ used to encrypt other\n   transmitted information in transport mode [RFC4301].\
    \  In general, a\n   Destination Option header inside an IPv6 packet can be placed\
    \ in two\n   possible positions, either before the Routing header or after the\n\
    \   ESP/AH headers as described in Section 4.1 of [RFC2460].  If the CDO\n   was\
    \ placed in the latter position and an ESP header was used with\n   encryption,\
    \ ConEx-aware intermediate nodes would not be able to view\n   and interpret the\
    \ CDO, effectively rendering it useless.\n   The IPv6 protocol architecture currently\
    \ does not provide a mechanism\n   for new headers to be copied to the outer IP\
    \ header.  Therefore, if\n   IPsec encryption is used in tunnel mode, ConEx information\
    \ cannot be\n   accessed over the extent of the ESP tunnel.\n   The destination\
    \ IP stack will not usually process the CDO; therefore,\n   the sender can send\
    \ a CDO without checking if the receiver will\n   understand it.  The CDO MUST\
    \ still be forwarded to the destination IP\n   stack, because the destination\
    \ might check the integrity of the whole\n   packet, irrespective of whether it\
    \ understands ConEx.\n"
- title: 8.  Mitigating Flooding Attacks by Using Preferential Drop
  contents:
  - "8.  Mitigating Flooding Attacks by Using Preferential Drop\n   The ideas in this\
    \ section are aspirational, not being essential to\n   the use of ConEx for more\
    \ general traffic management.  However, once\n   CDO information is present, the\
    \ CDO header could optionally also be\n   used in the data plane of any IP-aware\
    \ forwarding node to mitigate\n   flooding attacks.\n   Please note that ConEx\
    \ is an experimental protocol and that any kind\n   of mechanism that reacts to\
    \ information provided by the ConEx\n   protocol needs to be evaluated in experimentation\
    \ as well.  This is\n   also true, or especially true, for the preferential drop\
    \ mechanism\n   described below.\n   Dropping packets preferentially that are\
    \ not ConEx-capable or do not\n   carry a ConEx mark can be beneficial to mitigate\
    \ flooding attacks as\n   ConEx-Marked packets can be assumed to be already restricted\
    \ by a\n   ConEx ingress policer as further described in [RFC7713].  Therefore,\n\
    \   the following ConEx-based preferential dropping scheme is proposed:\n   If\
    \ a router queue experiences a very high load so that it has to drop\n   arriving\
    \ packets, it MAY preferentially drop packets within the same\n   DiffServ Per-Hop\
    \ Behavior (PHB) using the preference order given in\n   Table 1 (1 means drop\
    \ first).  Additionally, if a router implements\n   preferential drop based on\
    \ ConEx, it SHOULD also support ECN marking.\n   Even though preferential dropping\
    \ can be difficult to implement on\n   some hardware, if nowhere else, routers\
    \ at the egress of a network\n   SHOULD implement preferential drop based on ConEx\
    \ markings (stronger\n   than the MAY above).\n                 +----------------------+----------------+\n\
    \                 |                      |   Preference   |\n                \
    \ +----------------------+----------------+\n                 | Not-ConEx or no\
    \ CDO  | 1 (drop first) |\n                 | X (but not L,E or C) |       2 \
    \       |\n                 | X and L,E or C       |       3        |\n      \
    \           +----------------------+----------------+\n                Table 1:\
    \ Drop Preference for ConEx Packets\n   A flooding attack is inherently about\
    \ congestion of a resource.  As\n   load focuses on a victim, upstream queues\
    \ grow, requiring honest\n   sources to pre-load packets with a higher fraction\
    \ of ConEx marks.\n   If ECN marking is supported by downstream queues, preferential\n\
    \   dropping provides the most benefits because, if the queue is so\n   congested\
    \ that it drops traffic, it will be CE-marking 100% of any\n   forwarded traffic.\
    \  Honest sources will therefore be sending 100%\n   ConEx E-marked packets (and\
    \ subject to rate-limiting at an ingress\n   policer).\n   Senders under malicious\
    \ control can either do the same as honest\n   sources and be rate-limited at\
    \ ingress, or they can understate\n   congestion and not set the E bit.\n   If\
    \ the preferential drop ranking is implemented on queues, these\n   queues will\
    \ reserve E/L-marked traffic until last.  So, the traffic\n   from malicious sources\
    \ will all be automatically dropped first.\n   Either way, malicious sources cannot\
    \ send more than honest sources.\n   Therefore, ConEx-based preferential dropping\
    \ as described above\n   discriminates against attack traffic if done as part\
    \ of the overall\n   policing framework as described in [RFC7713].\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   [RFC7713] describes the overall audit framework\
    \ for assuring that\n   ConEx markings truly reflect actual path congestion and\
    \ [CONEX-AUDIT]\n   provides further details on the handling of audit signals.\
    \  This\n   section focuses purely on the security of the encoding chosen for\n\
    \   ConEx markings.\n   The CDO Option Type is defined with a chg bit set to zero\
    \ as\n   described in Section 4.  If IPsec AH is used, a zero chg bit causes\n\
    \   AH to cover the CDO option so that its end-to-end integrity can be\n   verified,\
    \ as explained in Section 4.\n   This document specifies that the Reserved field\
    \ in the CDO must be\n   ignored and forwarded unchanged even if it does not contain\
    \ all\n   zeroes.  The Reserved field is also required to sit outside the\n  \
    \ Encapsulating Security Payload (ESP), at least in transport mode (see\n   Section\
    \ 7).  This allows the sender to use the Reserved field as a\n   4-bit-per-packet\
    \ covert channel to send information to an on-path\n   node outside the control\
    \ of IPsec.  However, a covert channel is only\n   a concern if it can circumvent\
    \ IPsec in tunnel mode and, in the\n   tunnel mode case, ESP would close the covert\
    \ channel as outlined in\n   Section 7.\n"
- title: 10.  IANA Considerations
  contents:
  - "10.  IANA Considerations\n   The IPv6 ConEx destination option is used for carrying\
    \ ConEx\n   markings.  This document uses the experimental option type 0x1E (as\n\
    \   assigned in IANA's \"Destination Options and Hop-by-Hop Options\"\n   registry)\
    \ with the act bits set to 00 and the chg bit set to 0 for\n   realizing this\
    \ option.  No further allocation action is required from\n   IANA at this time.\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC2460]  Deering, S. and R. Hinden, \"Internet Protocol, Version 6\n   \
    \           (IPv6) Specification\", RFC 2460, DOI 10.17487/RFC2460,\n        \
    \      December 1998, <http://www.rfc-editor.org/info/rfc2460>.\n   [RFC3168]\
    \  Ramakrishnan, K., Floyd, S., and D. Black, \"The Addition\n              of\
    \ Explicit Congestion Notification (ECN) to IP\",\n              RFC 3168, DOI\
    \ 10.17487/RFC3168, September 2001,\n              <http://www.rfc-editor.org/info/rfc3168>.\n\
    \   [RFC4301]  Kent, S. and K. Seo, \"Security Architecture for the\n        \
    \      Internet Protocol\", RFC 4301, DOI 10.17487/RFC4301,\n              December\
    \ 2005, <http://www.rfc-editor.org/info/rfc4301>.\n   [RFC4302]  Kent, S., \"\
    IP Authentication Header\", RFC 4302,\n              DOI 10.17487/RFC4302, December\
    \ 2005,\n              <http://www.rfc-editor.org/info/rfc4302>.\n   [RFC4303]\
    \  Kent, S., \"IP Encapsulating Security Payload (ESP)\",\n              RFC 4303,\
    \ DOI 10.17487/RFC4303, December 2005,\n              <http://www.rfc-editor.org/info/rfc4303>.\n\
    \   [RFC7713]  Mathis, M. and B. Briscoe, \"Congestion Exposure (ConEx)\n    \
    \          Concepts, Abstract Mechanism, and Requirements\", RFC 7713,\n     \
    \         DOI 10.17487/RFC7713, December 2015,\n              <http://www.rfc-editor.org/info/rfc7713>.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [CONEX-AUDIT]\n              Wagner, D. and\
    \ M. Kuehlewind, \"Auditing of Congestion\n              Exposure (ConEx) signals\"\
    , Work in Progress,\n              draft-wagner-conex-audit-02, April 2016.\n\
    \   [HBH-HEADER]\n              Baker, F., \"IPv6 Hop-by-Hop Options Extension\
    \ Header\",\n              Work in Progress, draft-ietf-6man-hbh-header-handling-03,\n\
    \              Marcy 2016.\n   [RFC7786]  Kuehlewind, M., Ed. and R. Scheffenegger,\
    \ \"TCP\n              Modifications for Congestion Exposure (ConEx)\", RFC 7786,\n\
    \              DOI 10.17487/RFC7786, May 2016,\n              <http://www.rfc-editor.org/info/rfc7786>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The authors would like to thank David Wagner, Marcelo Bagnulo,\n\
    \   Ingemar Johansson, Joel Halpern, John Leslie, Martin Stiemerling,\n   Robert\
    \ Sparks, Ron Bonica, Brian Haberman, Kathleen Moriarty, Bob\n   Hinden, Ole Troan,\
    \ and Brian Carpenter for the discussions that made\n   this document better.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Suresh Krishnan\n   Ericsson\n   8400 Blvd Decarie\n \
    \  Town of Mount Royal, Quebec\n   Canada\n   Email: suresh.krishnan@ericsson.com\n\
    \   Mirja Kuehlewind\n   ETH Zurich\n   Email: mirja.kuehlewind@tik.ee.ethz.ch\n\
    \   Bob Briscoe\n   Simula Research Laboratory\n   Email: ietf@bobbriscoe.net\n\
    \   URI:   http://bobbriscoe.net/\n   Carlos Ralli Ucendo\n   Telefonica\n   Email:\
    \ ralli@tid.es\n"
