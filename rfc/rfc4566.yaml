- title: __initial_text__
  contents:
  - '                   SDP: Session Description Protocol

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo defines the Session Description Protocol (SDP).  SDP is\n\
    \   intended for describing multimedia sessions for the purposes of\n   session\
    \ announcement, session invitation, and other forms of\n   multimedia session\
    \ initiation.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Glossary of Terms ...............................................3\n  \
    \ 3. Examples of SDP Usage ...........................................4\n    \
    \  3.1. Session Initiation .........................................4\n      3.2.\
    \ Streaming Media ............................................4\n      3.3. Email\
    \ and the World Wide Web ...............................4\n      3.4. Multicast\
    \ Session Announcement .............................4\n   4. Requirements and\
    \ Recommendations ................................5\n      4.1. Media and Transport\
    \ Information ............................6\n      4.2. Timing Information .........................................6\n\
    \      4.3. Private Sessions ...........................................7\n  \
    \    4.4. Obtaining Further Information about a Session ..............7\n    \
    \  4.5. Categorisation .............................................7\n      4.6.\
    \ Internationalisation .......................................7\n   5. SDP Specification\
    \ ...............................................7\n      5.1. Protocol Version\
    \ (\"v=\") ...................................10\n      5.2. Origin (\"o=\") .............................................11\n\
    \      5.3. Session Name (\"s=\") .......................................12\n\
    \      5.4. Session Information (\"i=\") ................................12\n\
    \      5.5. URI (\"u=\") ................................................13\n\
    \      5.6. Email Address and Phone Number (\"e=\" and \"p=\") ............13\n\
    \      5.7. Connection Data (\"c=\") ....................................14\n\
    \      5.8. Bandwidth (\"b=\") ..........................................16\n\
    \      5.9. Timing (\"t=\") .............................................17\n\
    \      5.10. Repeat Times (\"r=\") ......................................18\n\
    \      5.11. Time Zones (\"z=\") ........................................19\n\
    \      5.12. Encryption Keys (\"k=\") ...................................19\n\
    \      5.13. Attributes (\"a=\") ........................................21\n\
    \      5.14. Media Descriptions (\"m=\") ................................22\n\
    \   6. SDP Attributes .................................................24\n  \
    \ 7. Security Considerations ........................................31\n   8.\
    \ IANA Considerations ............................................33\n      8.1.\
    \ The \"application/sdp\" Media Type ..........................33\n      8.2.\
    \ Registration of Parameters ................................34\n           8.2.1.\
    \ Media Types (\"media\") ..............................34\n           8.2.2.\
    \ Transport Protocols (\"proto\") ......................34\n           8.2.3.\
    \ Media Formats (\"fmt\") ..............................35\n           8.2.4.\
    \ Attribute Names (\"att-field\") ......................36\n           8.2.5.\
    \ Bandwidth Specifiers (\"bwtype\") ....................37\n           8.2.6.\
    \ Network Types (\"nettype\") ..........................37\n           8.2.7.\
    \ Address Types (\"addrtype\") .........................38\n           8.2.8.\
    \ Registration Procedure .............................38\n      8.3. Encryption\
    \ Key Access Methods .............................39\n   9. SDP Grammar ....................................................39\n\
    \   10. Summary of Changes from RFC 2327 ..............................44\n  \
    \ 11. Acknowledgements ..............................................45\n   12.\
    \ References ....................................................45\n      12.1.\
    \ Normative References .....................................45\n      12.2. Informative\
    \ References ...................................46\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   When initiating multimedia teleconferences, voice-over-IP\
    \ calls,\n   streaming video, or other sessions, there is a requirement to convey\n\
    \   media details, transport addresses, and other session description\n   metadata\
    \ to the participants.\n   SDP provides a standard representation for such information,\n\
    \   irrespective of how that information is transported.  SDP is purely a\n  \
    \ format for session description -- it does not incorporate a transport\n   protocol,\
    \ and it is intended to use different transport protocols as\n   appropriate,\
    \ including the Session Announcement Protocol [14],\n   Session Initiation Protocol\
    \ [15], Real Time Streaming Protocol [16],\n   electronic mail using the MIME\
    \ extensions, and the Hypertext\n   Transport Protocol.\n   SDP is intended to\
    \ be general purpose so that it can be used in a\n   wide range of network environments\
    \ and applications.  However, it is\n   not intended to support negotiation of\
    \ session content or media\n   encodings: this is viewed as outside the scope\
    \ of session\n   description.\n   This memo obsoletes RFC 2327 [6] and RFC 3266\
    \ [10].  Section 10\n   outlines the changes introduced in this memo.\n"
- title: 2.  Glossary of Terms
  contents:
  - "2.  Glossary of Terms\n   The following terms are used in this document and have\
    \ specific\n   meaning within the context of this document.\n   Conference: A\
    \ multimedia conference is a set of two or more\n      communicating users along\
    \ with the software they are using to\n      communicate.\n   Session: A multimedia\
    \ session is a set of multimedia senders and\n      receivers and the data streams\
    \ flowing from senders to receivers.\n      A multimedia conference is an example\
    \ of a multimedia session.\n   Session Description: A well-defined format for\
    \ conveying sufficient\n      information to discover and participate in a multimedia\
    \ session.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",\
    \ \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [3].\n"
- title: 3.  Examples of SDP Usage
  contents:
  - '3.  Examples of SDP Usage

    '
- title: 3.1.  Session Initiation
  contents:
  - "3.1.  Session Initiation\n   The Session Initiation Protocol (SIP) [15] is an\
    \ application-layer\n   control protocol for creating, modifying, and terminating\
    \ sessions\n   such as Internet multimedia conferences, Internet telephone calls,\n\
    \   and multimedia distribution.  The SIP messages used to create\n   sessions\
    \ carry session descriptions that allow participants to agree\n   on a set of\
    \ compatible media types.  These session descriptions are\n   commonly formatted\
    \ using SDP.  When used with SIP, the offer/answer\n   model [17] provides a limited\
    \ framework for negotiation using SDP.\n"
- title: 3.2.  Streaming Media
  contents:
  - "3.2.  Streaming Media\n   The Real Time Streaming Protocol (RTSP) [16], is an\
    \ application-level\n   protocol for control over the delivery of data with real-time\n\
    \   properties.  RTSP provides an extensible framework to enable\n   controlled,\
    \ on-demand delivery of real-time data, such as audio and\n   video.  An RTSP\
    \ client and server negotiate an appropriate set of\n   parameters for media delivery,\
    \ partially using SDP syntax to describe\n   those parameters.\n"
- title: 3.3.  Email and the World Wide Web
  contents:
  - "3.3.  Email and the World Wide Web\n   Alternative means of conveying session\
    \ descriptions include\n   electronic mail and the World Wide Web (WWW).  For\
    \ both email and WWW\n   distribution, the media type \"application/sdp\" is used.\
    \  This enables\n   the automatic launching of applications for participation\
    \ in the\n   session from the WWW client or mail reader in a standard manner.\n\
    \   Note that announcements of multicast sessions made only via email or\n   the\
    \ WWW do not have the property that the receiver of a session\n   announcement\
    \ can necessarily receive the session because the\n   multicast sessions may be\
    \ restricted in scope, and access to the WWW\n   server or reception of email\
    \ is possible outside this scope.\n"
- title: 3.4.  Multicast Session Announcement
  contents:
  - "3.4.  Multicast Session Announcement\n   In order to assist the advertisement\
    \ of multicast multimedia\n   conferences and other multicast sessions, and to\
    \ communicate the\n   relevant session setup information to prospective participants,\
    \ a\n   distributed session directory may be used.  An instance of such a\n  \
    \ session directory periodically sends packets containing a description\n   of\
    \ the session to a well-known multicast group.  These advertisements\n   are received\
    \ by other session directories such that potential remote\n   participants can\
    \ use the session description to start the tools\n   required to participate in\
    \ the session.\n   One protocol used to implement such a distributed directory\
    \ is the\n   Session Announcement Protocol (SAP) [14].  SDP provides the\n   recommended\
    \ session description format for such session\n   announcements.\n"
- title: 4.  Requirements and Recommendations
  contents:
  - "4.  Requirements and Recommendations\n   The purpose of SDP is to convey information\
    \ about media streams in\n   multimedia sessions to allow the recipients of a\
    \ session description\n   to participate in the session.  SDP is primarily intended\
    \ for use in\n   an internetwork, although it is sufficiently general that it\
    \ can\n   describe conferences in other network environments.  Media streams\n\
    \   can be many-to-many.  Sessions need not be continually active.\n   Thus far,\
    \ multicast-based sessions on the Internet have differed from\n   many other forms\
    \ of conferencing in that anyone receiving the traffic\n   can join the session\
    \ (unless the session traffic is encrypted).  In\n   such an environment, SDP\
    \ serves two primary purposes.  It is a means\n   to communicate the existence\
    \ of a session, and it is a means to\n   convey sufficient information to enable\
    \ joining and participating in\n   the session.  In a unicast environment, only\
    \ the latter purpose is\n   likely to be relevant.\n   An SDP session description\
    \ includes the following:\n   o  Session name and purpose\n   o  Time(s) the session\
    \ is active\n   o  The media comprising the session\n   o  Information needed\
    \ to receive those media (addresses, ports,\n      formats, etc.)\n   As resources\
    \ necessary to participate in a session may be limited,\n   some additional information\
    \ may also be desirable:\n   o  Information about the bandwidth to be used by\
    \ the session\n   o  Contact information for the person responsible for the session\n\
    \   In general, SDP must convey sufficient information to enable\n   applications\
    \ to join a session (with the possible exception of\n   encryption keys) and to\
    \ announce the resources to be used to any\n   non-participants that may need\
    \ to know.  (This latter feature is\n   primarily useful when SDP is used with\
    \ a multicast session\n   announcement protocol.)\n"
- title: 4.1.  Media and Transport Information
  contents:
  - "4.1.  Media and Transport Information\n   An SDP session description includes\
    \ the following media information:\n   o  The type of media (video, audio, etc.)\n\
    \   o  The transport protocol (RTP/UDP/IP, H.320, etc.)\n   o  The format of the\
    \ media (H.261 video, MPEG video, etc.)\n   In addition to media format and transport\
    \ protocol, SDP conveys\n   address and port details.  For an IP multicast session,\
    \ these\n   comprise:\n   o  The multicast group address for media\n   o  The\
    \ transport port for media\n   This address and port are the destination address\
    \ and destination\n   port of the multicast stream, whether being sent, received,\
    \ or both.\n   For unicast IP sessions, the following are conveyed:\n   o  The\
    \ remote address for media\n   o  The remote transport port for media\n   The\
    \ semantics of this address and port depend on the media and\n   transport protocol\
    \ defined.  By default, this SHOULD be the remote\n   address and remote port\
    \ to which data is sent.  Some media types may\n   redefine this behaviour, but\
    \ this is NOT RECOMMENDED since it\n   complicates implementations (including\
    \ middleboxes that must parse\n   the addresses to open Network Address Translation\
    \ (NAT) or firewall\n   pinholes).\n"
- title: 4.2.  Timing Information
  contents:
  - "4.2.  Timing Information\n   Sessions may be either bounded or unbounded in time.\
    \  Whether or not\n   they are bounded, they may be only active at specific times.\
    \  SDP can\n   convey:\n   o  An arbitrary list of start and stop times bounding\
    \ the session\n   o  For each bound, repeat times such as \"every Wednesday at\
    \ 10am for\n      one hour\"\n   This timing information is globally consistent,\
    \ irrespective of local\n   time zone or daylight saving time (see Section 5.9).\n"
- title: 4.3.  Private Sessions
  contents:
  - "4.3.  Private Sessions\n   It is possible to create both public sessions and\
    \ private sessions.\n   SDP itself does not distinguish between these; private\
    \ sessions are\n   typically conveyed by encrypting the session description during\n\
    \   distribution.  The details of how encryption is performed are\n   dependent\
    \ on the mechanism used to convey SDP; mechanisms are\n   currently defined for\
    \ SDP transported using SAP [14] and SIP [15],\n   and others may be defined in\
    \ the future.\n   If a session announcement is private, it is possible to use\
    \ that\n   private announcement to convey encryption keys necessary to decode\n\
    \   each of the media in a conference, including enough information to\n   know\
    \ which encryption scheme is used for each media.\n"
- title: 4.4.  Obtaining Further Information about a Session
  contents:
  - "4.4.  Obtaining Further Information about a Session\n   A session description\
    \ should convey enough information to decide\n   whether or not to participate\
    \ in a session.  SDP may include\n   additional pointers in the form of Uniform\
    \ Resource Identifiers\n   (URIs) for more information about the session.\n"
- title: 4.5.  Categorisation
  contents:
  - "4.5.  Categorisation\n   When many session descriptions are being distributed\
    \ by SAP, or any\n   other advertisement mechanism, it may be desirable to filter\
    \ session\n   announcements that are of interest from those that are not.  SDP\n\
    \   supports a categorisation mechanism for sessions that is capable of\n   being\
    \ automated (the \"a=cat:\" attribute; see Section 6).\n"
- title: 4.6.  Internationalisation
  contents:
  - "4.6.  Internationalisation\n   The SDP specification recommends the use of the\
    \ ISO 10646 character\n   sets in the UTF-8 encoding [5] to allow many different\
    \ languages to\n   be represented.  However, to assist in compact representations,\
    \ SDP\n   also allows other character sets such as ISO 8859-1 to be used when\n\
    \   desired.  Internationalisation only applies to free-text fields\n   (session\
    \ name and background information), and not to SDP as a whole.\n"
- title: 5.  SDP Specification
  contents:
  - "5.  SDP Specification\n   An SDP session description is denoted by the media\
    \ type\n   \"application/sdp\" (See Section 8).\n   An SDP session description\
    \ is entirely textual using the ISO 10646\n   character set in UTF-8 encoding.\
    \  SDP field names and attribute names\n   use only the US-ASCII subset of UTF-8,\
    \ but textual fields and\n   attribute values MAY use the full ISO 10646 character\
    \ set.  Field and\n   attribute values that use the full UTF-8 character set are\
    \ never\n   directly compared, hence there is no requirement for UTF-8\n   normalisation.\
    \  The textual form, as opposed to a binary encoding\n   such as ASN.1 or XDR,\
    \ was chosen to enhance portability, to enable a\n   variety of transports to\
    \ be used, and to allow flexible, text-based\n   toolkits to be used to generate\
    \ and process session descriptions.\n   However, since SDP may be used in environments\
    \ where the maximum\n   permissible size of a session description is limited,\
    \ the encoding is\n   deliberately compact.  Also, since announcements may be\
    \ transported\n   via very unreliable means or damaged by an intermediate caching\n\
    \   server, the encoding was designed with strict order and formatting\n   rules\
    \ so that most errors would result in malformed session\n   announcements that\
    \ could be detected easily and discarded.  This also\n   allows rapid discarding\
    \ of encrypted session announcements for which\n   a receiver does not have the\
    \ correct key.\n   An SDP session description consists of a number of lines of\
    \ text of\n   the form:\n      <type>=<value>\n   where <type> MUST be exactly\
    \ one case-significant character and\n   <value> is structured text whose format\
    \ depends on <type>.  In\n   general, <value> is either a number of fields delimited\
    \ by a single\n   space character or a free format string, and is case-significant\n\
    \   unless a specific field defines otherwise.  Whitespace MUST NOT be\n   used\
    \ on either side of the \"=\" sign.\n   An SDP session description consists of\
    \ a session-level section\n   followed by zero or more media-level sections. \
    \ The session-level\n   part starts with a \"v=\" line and continues to the first\
    \ media-level\n   section.  Each media-level section starts with an \"m=\" line\
    \ and\n   continues to the next media-level section or end of the whole session\n\
    \   description.  In general, session-level values are the default for\n   all\
    \ media unless overridden by an equivalent media-level value.\n   Some lines in\
    \ each description are REQUIRED and some are OPTIONAL,\n   but all MUST appear\
    \ in exactly the order given here (the fixed order\n   greatly enhances error\
    \ detection and allows for a simple parser).\n   OPTIONAL items are marked with\
    \ a \"*\".\n      Session description\n         v=  (protocol version)\n     \
    \    o=  (originator and session identifier)\n         s=  (session name)\n  \
    \       i=* (session information)\n         u=* (URI of description)\n       \
    \  e=* (email address)\n         p=* (phone number)\n         c=* (connection\
    \ information -- not required if included in\n              all media)\n     \
    \    b=* (zero or more bandwidth information lines)\n         One or more time\
    \ descriptions (\"t=\" and \"r=\" lines; see below)\n         z=* (time zone adjustments)\n\
    \         k=* (encryption key)\n         a=* (zero or more session attribute lines)\n\
    \         Zero or more media descriptions\n      Time description\n         t=\
    \  (time the session is active)\n         r=* (zero or more repeat times)\n  \
    \    Media description, if present\n         m=  (media name and transport address)\n\
    \         i=* (media title)\n         c=* (connection information -- optional\
    \ if included at\n              session level)\n         b=* (zero or more bandwidth\
    \ information lines)\n         k=* (encryption key)\n         a=* (zero or more\
    \ media attribute lines)\n   The set of type letters is deliberately small and\
    \ not intended to be\n   extensible -- an SDP parser MUST completely ignore any\
    \ session\n   description that contains a type letter that it does not understand.\n\
    \   The attribute mechanism (\"a=\" described below) is the primary means\n  \
    \ for extending SDP and tailoring it to particular applications or\n   media.\
    \  Some attributes (the ones listed in Section 6 of this memo)\n   have a defined\
    \ meaning, but others may be added on an application-,\n   media-, or session-specific\
    \ basis.  An SDP parser MUST ignore any\n   attribute it doesn't understand.\n\
    \   An SDP session description may contain URIs that reference external\n   content\
    \ in the \"u=\", \"k=\", and \"a=\" lines.  These URIs may be\n   dereferenced\
    \ in some cases, making the session description non-self-\n   contained.\n   The\
    \ connection (\"c=\") and attribute (\"a=\") information in the\n   session-level\
    \ section applies to all the media of that session unless\n   overridden by connection\
    \ information or an attribute of the same name\n   in the media description. \
    \ For instance, in the example below, each\n   media behaves as if it were given\
    \ a \"recvonly\" attribute.\n   An example SDP description is:\n      v=0\n  \
    \    o=jdoe 2890844526 2890842807 IN IP4 10.47.16.5\n      s=SDP Seminar\n   \
    \   i=A Seminar on the session description protocol\n      u=http://www.example.com/seminars/sdp.pdf\n\
    \      e=j.doe@example.com (Jane Doe)\n      c=IN IP4 224.2.17.12/127\n      t=2873397496\
    \ 2873404696\n      a=recvonly\n      m=audio 49170 RTP/AVP 0\n      m=video 51372\
    \ RTP/AVP 99\n      a=rtpmap:99 h263-1998/90000\n   Text fields such as the session\
    \ name and information are octet\n   strings that may contain any octet with the\
    \ exceptions of 0x00 (Nul),\n   0x0a (ASCII newline), and 0x0d (ASCII carriage\
    \ return).  The sequence\n   CRLF (0x0d0a) is used to end a record, although parsers\
    \ SHOULD be\n   tolerant and also accept records terminated with a single newline\n\
    \   character.  If the \"a=charset\" attribute is not present, these octet\n \
    \  strings MUST be interpreted as containing ISO-10646 characters in\n   UTF-8\
    \ encoding (the presence of the \"a=charset\" attribute may force\n   some fields\
    \ to be interpreted differently).\n   A session description can contain domain\
    \ names in the \"o=\", \"u=\",\n   \"e=\", \"c=\", and \"a=\" lines.  Any domain\
    \ name used in SDP MUST comply\n   with [1], [2].  Internationalised domain names\
    \ (IDNs) MUST be\n   represented using the ASCII Compatible Encoding (ACE) form\
    \ defined in\n   [11] and MUST NOT be directly represented in UTF-8 or any other\n\
    \   encoding (this requirement is for compatibility with RFC 2327 and\n   other\
    \ SDP-related standards, which predate the development of\n   internationalised\
    \ domain names).\n"
- title: 5.1.  Protocol Version ("v=")
  contents:
  - "5.1.  Protocol Version (\"v=\")\n      v=0\n   The \"v=\" field gives the version\
    \ of the Session Description Protocol.\n   This memo defines version 0.  There\
    \ is no minor version number.\n"
- title: 5.2.  Origin ("o=")
  contents:
  - "5.2.  Origin (\"o=\")\n      o=<username> <sess-id> <sess-version> <nettype>\
    \ <addrtype>\n        <unicast-address>\n   The \"o=\" field gives the originator\
    \ of the session (her username and\n   the address of the user's host) plus a\
    \ session identifier and version\n   number:\n   <username> is the user's login\
    \ on the originating host, or it is \"-\"\n      if the originating host does\
    \ not support the concept of user IDs.\n      The <username> MUST NOT contain\
    \ spaces.\n   <sess-id> is a numeric string such that the tuple of <username>,\n\
    \      <sess-id>, <nettype>, <addrtype>, and <unicast-address> forms a\n     \
    \ globally unique identifier for the session.  The method of\n      <sess-id>\
    \ allocation is up to the creating tool, but it has been\n      suggested that\
    \ a Network Time Protocol (NTP) format timestamp be\n      used to ensure uniqueness\
    \ [13].\n   <sess-version> is a version number for this session description. \
    \ Its\n      usage is up to the creating tool, so long as <sess-version> is\n\
    \      increased when a modification is made to the session data.  Again,\n  \
    \    it is RECOMMENDED that an NTP format timestamp is used.\n   <nettype> is\
    \ a text string giving the type of network.  Initially\n      \"IN\" is defined\
    \ to have the meaning \"Internet\", but other values\n      MAY be registered\
    \ in the future (see Section 8).\n   <addrtype> is a text string giving the type\
    \ of the address that\n      follows.  Initially \"IP4\" and \"IP6\" are defined,\
    \ but other values\n      MAY be registered in the future (see Section 8).\n \
    \  <unicast-address> is the address of the machine from which the\n      session\
    \ was created.  For an address type of IP4, this is either\n      the fully qualified\
    \ domain name of the machine or the dotted-\n      decimal representation of the\
    \ IP version 4 address of the machine.\n      For an address type of IP6, this\
    \ is either the fully qualified\n      domain name of the machine or the compressed\
    \ textual\n      representation of the IP version 6 address of the machine.  For\n\
    \      both IP4 and IP6, the fully qualified domain name is the form that\n  \
    \    SHOULD be given unless this is unavailable, in which case the\n      globally\
    \ unique address MAY be substituted.  A local IP address\n      MUST NOT be used\
    \ in any context where the SDP description might\n      leave the scope in which\
    \ the address is meaningful (for example, a\n      local address MUST NOT be included\
    \ in an application-level\n      referral that might leave the scope).\n   In\
    \ general, the \"o=\" field serves as a globally unique identifier for\n   this\
    \ version of this session description, and the subfields excepting\n   the version\
    \ taken together identify the session irrespective of any\n   modifications.\n\
    \   For privacy reasons, it is sometimes desirable to obfuscate the\n   username\
    \ and IP address of the session originator.  If this is a\n   concern, an arbitrary\
    \ <username> and private <unicast-address> MAY be\n   chosen to populate the \"\
    o=\" field, provided that these are selected\n   in a manner that does not affect\
    \ the global uniqueness of the field.\n"
- title: 5.3.  Session Name ("s=")
  contents:
  - "5.3.  Session Name (\"s=\")\n      s=<session name>\n   The \"s=\" field is the\
    \ textual session name.  There MUST be one and\n   only one \"s=\" field per session\
    \ description.  The \"s=\" field MUST NOT\n   be empty and SHOULD contain ISO\
    \ 10646 characters (but see also the\n   \"a=charset\" attribute).  If a session\
    \ has no meaningful name, the\n   value \"s= \" SHOULD be used (i.e., a single\
    \ space as the session\n   name).\n"
- title: 5.4.  Session Information ("i=")
  contents:
  - "5.4.  Session Information (\"i=\")\n      i=<session description>\n   The \"\
    i=\" field provides textual information about the session.  There\n   MUST be\
    \ at most one session-level \"i=\" field per session description,\n   and at most\
    \ one \"i=\" field per media.  If the \"a=charset\" attribute\n   is present,\
    \ it specifies the character set used in the \"i=\" field.\n   If the \"a=charset\"\
    \ attribute is not present, the \"i=\" field MUST\n   contain ISO 10646 characters\
    \ in UTF-8 encoding.\n   A single \"i=\" field MAY also be used for each media\
    \ definition.  In\n   media definitions, \"i=\" fields are primarily intended\
    \ for labelling\n   media streams.  As such, they are most likely to be useful\
    \ when a\n   single session has more than one distinct media stream of the same\n\
    \   media type.  An example would be two different whiteboards, one for\n   slides\
    \ and one for feedback and questions.\n   The \"i=\" field is intended to provide\
    \ a free-form human-readable\n   description of the session or the purpose of\
    \ a media stream.  It is\n   not suitable for parsing by automata.\n"
- title: 5.5.  URI ("u=")
  contents:
  - "5.5.  URI (\"u=\")\n      u=<uri>\n   A URI is a Uniform Resource Identifier\
    \ as used by WWW clients [7].\n   The URI should be a pointer to additional information\
    \ about the\n   session.  This field is OPTIONAL, but if it is present it MUST\
    \ be\n   specified before the first media field.  No more than one URI field\n\
    \   is allowed per session description.\n"
- title: 5.6.  Email Address and Phone Number ("e=" and "p=")
  contents:
  - "5.6.  Email Address and Phone Number (\"e=\" and \"p=\")\n      e=<email-address>\n\
    \      p=<phone-number>\n   The \"e=\" and \"p=\" lines specify contact information\
    \ for the person\n   responsible for the conference.  This is not necessarily\
    \ the same\n   person that created the conference announcement.\n   Inclusion\
    \ of an email address or phone number is OPTIONAL.  Note that\n   the previous\
    \ version of SDP specified that either an email field or a\n   phone field MUST\
    \ be specified, but this was widely ignored.  The\n   change brings the specification\
    \ into line with common usage.\n   If an email address or phone number is present,\
    \ it MUST be specified\n   before the first media field.  More than one email\
    \ or phone field can\n   be given for a session description.\n   Phone numbers\
    \ SHOULD be given in the form of an international public\n   telecommunication\
    \ number (see ITU-T Recommendation E.164) preceded by\n   a \"+\".  Spaces and\
    \ hyphens may be used to split up a phone field to\n   aid readability if desired.\
    \  For example:\n      p=+1 617 555-6011\n   Both email addresses and phone numbers\
    \ can have an OPTIONAL free text\n   string associated with them, normally giving\
    \ the name of the person\n   who may be contacted.  This MUST be enclosed in parentheses\
    \ if it is\n   present.  For example:\n      e=j.doe@example.com (Jane Doe)\n\
    \   The alternative RFC 2822 [29] name quoting convention is also allowed\n  \
    \ for both email addresses and phone numbers.  For example:\n      e=Jane Doe\
    \ <j.doe@example.com>\n   The free text string SHOULD be in the ISO-10646 character\
    \ set with\n   UTF-8 encoding, or alternatively in ISO-8859-1 or other encodings\
    \ if\n   the appropriate session-level \"a=charset\" attribute is set.\n"
- title: 5.7.  Connection Data ("c=")
  contents:
  - "5.7.  Connection Data (\"c=\")\n      c=<nettype> <addrtype> <connection-address>\n\
    \   The \"c=\" field contains connection data.\n   A session description MUST\
    \ contain either at least one \"c=\" field in\n   each media description or a\
    \ single \"c=\" field at the session level.\n   It MAY contain a single session-level\
    \ \"c=\" field and additional \"c=\"\n   field(s) per media description, in which\
    \ case the per-media values\n   override the session-level settings for the respective\
    \ media.\n   The first sub-field (\"<nettype>\") is the network type, which is\
    \ a\n   text string giving the type of network.  Initially, \"IN\" is defined\n\
    \   to have the meaning \"Internet\", but other values MAY be registered in\n\
    \   the future (see Section 8).\n   The second sub-field (\"<addrtype>\") is the\
    \ address type.  This allows\n   SDP to be used for sessions that are not IP based.\
    \  This memo only\n   defines IP4 and IP6, but other values MAY be registered\
    \ in the future\n   (see Section 8).\n   The third sub-field (\"<connection-address>\"\
    ) is the connection\n   address.  OPTIONAL sub-fields MAY be added after the connection\n\
    \   address depending on the value of the <addrtype> field.\n   When the <addrtype>\
    \ is IP4 and IP6, the connection address is defined\n   as follows:\n   o  If\
    \ the session is multicast, the connection address will be an IP\n      multicast\
    \ group address.  If the session is not multicast, then\n      the connection\
    \ address contains the unicast IP address of the\n      expected data source or\
    \ data relay or data sink as determined by\n      additional attribute fields.\
    \  It is not expected that unicast\n      addresses will be given in a session\
    \ description that is\n      communicated by a multicast announcement, though\
    \ this is not\n      prohibited.\n   o  Sessions using an IPv4 multicast connection\
    \ address MUST also have\n      a time to live (TTL) value present in addition\
    \ to the multicast\n      address.  The TTL and the address together define the\
    \ scope with\n      which multicast packets sent in this conference will be sent.\
    \  TTL\n      values MUST be in the range 0-255.  Although the TTL MUST be\n \
    \     specified, its use to scope multicast traffic is deprecated;\n      applications\
    \ SHOULD use an administratively scoped address\n      instead.\n   The TTL for\
    \ the session is appended to the address using a slash as a\n   separator.  An\
    \ example is:\n      c=IN IP4 224.2.36.42/127\n   IPv6 multicast does not use\
    \ TTL scoping, and hence the TTL value MUST\n   NOT be present for IPv6 multicast.\
    \  It is expected that IPv6 scoped\n   addresses will be used to limit the scope\
    \ of conferences.\n   Hierarchical or layered encoding schemes are data streams\
    \ where the\n   encoding from a single media source is split into a number of\
    \ layers.\n   The receiver can choose the desired quality (and hence bandwidth)\
    \ by\n   only subscribing to a subset of these layers.  Such layered encodings\n\
    \   are normally transmitted in multiple multicast groups to allow\n   multicast\
    \ pruning.  This technique keeps unwanted traffic from sites\n   only requiring\
    \ certain levels of the hierarchy.  For applications\n   requiring multiple multicast\
    \ groups, we allow the following notation\n   to be used for the connection address:\n\
    \      <base multicast address>[/<ttl>]/<number of addresses>\n   If the number\
    \ of addresses is not given, it is assumed to be one.\n   Multicast addresses\
    \ so assigned are contiguously allocated above the\n   base address, so that,\
    \ for example:\n      c=IN IP4 224.2.1.1/127/3\n   would state that addresses\
    \ 224.2.1.1, 224.2.1.2, and 224.2.1.3 are to\n   be used at a TTL of 127.  This\
    \ is semantically identical to including\n   multiple \"c=\" lines in a media\
    \ description:\n      c=IN IP4 224.2.1.1/127\n      c=IN IP4 224.2.1.2/127\n \
    \     c=IN IP4 224.2.1.3/127\n   Similarly, an IPv6 example would be:\n      c=IN\
    \ IP6 FF15::101/3\n   which is semantically equivalent to:\n      c=IN IP6 FF15::101\n\
    \      c=IN IP6 FF15::102\n      c=IN IP6 FF15::103\n   (remembering that the\
    \ TTL field is not present in IPv6 multicast).\n   Multiple addresses or \"c=\"\
    \ lines MAY be specified on a per-media\n   basis only if they provide multicast\
    \ addresses for different layers\n   in a hierarchical or layered encoding scheme.\
    \  They MUST NOT be\n   specified for a session-level \"c=\" field.\n   The slash\
    \ notation for multiple addresses described above MUST NOT be\n   used for IP\
    \ unicast addresses.\n"
- title: 5.8.  Bandwidth ("b=")
  contents:
  - "5.8.  Bandwidth (\"b=\")\n      b=<bwtype>:<bandwidth>\n   This OPTIONAL field\
    \ denotes the proposed bandwidth to be used by the\n   session or media.  The\
    \ <bwtype> is an alphanumeric modifier giving\n   the meaning of the <bandwidth>\
    \ figure.  Two values are defined in\n   this specification, but other values\
    \ MAY be registered in the future\n   (see Section 8 and [21], [25]):\n   CT If\
    \ the bandwidth of a session or media in a session is different\n      from the\
    \ bandwidth implicit from the scope, a \"b=CT:...\" line\n      SHOULD be supplied\
    \ for the session giving the proposed upper limit\n      to the bandwidth used\
    \ (the \"conference total\" bandwidth).  The\n      primary purpose of this is\
    \ to give an approximate idea as to\n      whether two or more sessions can coexist\
    \ simultaneously.  When\n      using the CT modifier with RTP, if several RTP\
    \ sessions are part\n      of the conference, the conference total refers to total\
    \ bandwidth\n      of all RTP sessions.\n   AS The bandwidth is interpreted to\
    \ be application specific (it will\n      be the application's concept of maximum\
    \ bandwidth).  Normally,\n      this will coincide with what is set on the application's\
    \ \"maximum\n      bandwidth\" control if applicable.  For RTP-based applications,\
    \ AS\n      gives the RTP \"session bandwidth\" as defined in Section 6.2 of\n\
    \      [19].\n   Note that CT gives a total bandwidth figure for all the media\
    \ at all\n   sites.  AS gives a bandwidth figure for a single media at a single\n\
    \   site, although there may be many sites sending simultaneously.\n   A prefix\
    \ \"X-\" is defined for <bwtype> names.  This is intended for\n   experimental\
    \ purposes only.  For example:\n      b=X-YZ:128\n   Use of the \"X-\" prefix\
    \ is NOT RECOMMENDED: instead new modifiers\n   SHOULD be registered with IANA\
    \ in the standard namespace.  SDP\n   parsers MUST ignore bandwidth fields with\
    \ unknown modifiers.\n   Modifiers MUST be alphanumeric and, although no length\
    \ limit is\n   given, it is recommended that they be short.\n   The <bandwidth>\
    \ is interpreted as kilobits per second by default.\n   The definition of a new\
    \ <bwtype> modifier MAY specify that the\n   bandwidth is to be interpreted in\
    \ some alternative unit (the \"CT\" and\n   \"AS\" modifiers defined in this memo\
    \ use the default units).\n"
- title: 5.9.  Timing ("t=")
  contents:
  - "5.9.  Timing (\"t=\")\n      t=<start-time> <stop-time>\n   The \"t=\" lines\
    \ specify the start and stop times for a session.\n   Multiple \"t=\" lines MAY\
    \ be used if a session is active at multiple\n   irregularly spaced times; each\
    \ additional \"t=\" line specifies an\n   additional period of time for which\
    \ the session will be active.  If\n   the session is active at regular times,\
    \ an \"r=\" line (see below)\n   should be used in addition to, and following,\
    \ a \"t=\" line -- in which\n   case the \"t=\" line specifies the start and stop\
    \ times of the repeat\n   sequence.\n   The first and second sub-fields give the\
    \ start and stop times,\n   respectively, for the session.  These values are the\
    \ decimal\n   representation of Network Time Protocol (NTP) time values in seconds\n\
    \   since 1900 [13].  To convert these values to UNIX time, subtract\n   decimal\
    \ 2208988800.\n   NTP timestamps are elsewhere represented by 64-bit values, which\
    \ wrap\n   sometime in the year 2036.  Since SDP uses an arbitrary length\n  \
    \ decimal representation, this should not cause an issue (SDP\n   timestamps MUST\
    \ continue counting seconds since 1900, NTP will use\n   the value modulo the\
    \ 64-bit limit).\n   If the <stop-time> is set to zero, then the session is not\
    \ bounded,\n   though it will not become active until after the <start-time>.\
    \  If\n   the <start-time> is also zero, the session is regarded as permanent.\n\
    \   User interfaces SHOULD strongly discourage the creation of unbounded\n   and\
    \ permanent sessions as they give no information about when the\n   session is\
    \ actually going to terminate, and so make scheduling\n   difficult.\n   The general\
    \ assumption may be made, when displaying unbounded\n   sessions that have not\
    \ timed out to the user, that an unbounded\n   session will only be active until\
    \ half an hour from the current time\n   or the session start time, whichever\
    \ is the later.  If behaviour\n   other than this is required, an end-time SHOULD\
    \ be given and modified\n   as appropriate when new information becomes available\
    \ about when the\n   session should really end.\n   Permanent sessions may be\
    \ shown to the user as never being active\n   unless there are associated repeat\
    \ times that state precisely when\n   the session will be active.\n"
- title: 5.10.  Repeat Times ("r=")
  contents:
  - "5.10.  Repeat Times (\"r=\")\n      r=<repeat interval> <active duration> <offsets\
    \ from start-time>\n   \"r=\" fields specify repeat times for a session.  For\
    \ example, if a\n   session is active at 10am on Monday and 11am on Tuesday for\
    \ one hour\n   each week for three months, then the <start-time> in the\n   corresponding\
    \ \"t=\" field would be the NTP representation of 10am on\n   the first Monday,\
    \ the <repeat interval> would be 1 week, the <active\n   duration> would be 1\
    \ hour, and the offsets would be zero and 25\n   hours.  The corresponding \"\
    t=\" field stop time would be the NTP\n   representation of the end of the last\
    \ session three months later.  By\n   default, all fields are in seconds, so the\
    \ \"r=\" and \"t=\" fields might\n   be the following:\n      t=3034423619 3042462419\n\
    \      r=604800 3600 0 90000\n   To make description more compact, times may also\
    \ be given in units of\n   days, hours, or minutes.  The syntax for these is a\
    \ number\n   immediately followed by a single case-sensitive character.\n   Fractional\
    \ units are not allowed -- a smaller unit should be used\n   instead.  The following\
    \ unit specification characters are allowed:\n      d - days (86400 seconds)\n\
    \      h - hours (3600 seconds)\n      m - minutes (60 seconds)\n      s - seconds\
    \ (allowed for completeness)\n   Thus, the above session announcement could also\
    \ have been written:\n      r=7d 1h 0 25h\n   Monthly and yearly repeats cannot\
    \ be directly specified with a single\n   SDP repeat time; instead, separate \"\
    t=\" fields should be used to\n   explicitly list the session times.\n"
- title: 5.11.  Time Zones ("z=")
  contents:
  - "5.11.  Time Zones (\"z=\")\n      z=<adjustment time> <offset> <adjustment time>\
    \ <offset> ....\n   To schedule a repeated session that spans a change from daylight\n\
    \   saving time to standard time or vice versa, it is necessary to\n   specify\
    \ offsets from the base time.  This is required because\n   different time zones\
    \ change time at different times of day, different\n   countries change to or\
    \ from daylight saving time on different dates,\n   and some countries do not\
    \ have daylight saving time at all.\n   Thus, in order to schedule a session that\
    \ is at the same time winter\n   and summer, it must be possible to specify unambiguously\
    \ by whose\n   time zone a session is scheduled.  To simplify this task for\n\
    \   receivers, we allow the sender to specify the NTP time that a time\n   zone\
    \ adjustment happens and the offset from the time when the session\n   was first\
    \ scheduled.  The \"z=\" field allows the sender to specify a\n   list of these\
    \ adjustment times and offsets from the base time.\n   An example might be the\
    \ following:\n      z=2882844526 -1h 2898848070 0\n   This specifies that at time\
    \ 2882844526, the time base by which the\n   session's repeat times are calculated\
    \ is shifted back by 1 hour, and\n   that at time 2898848070, the session's original\
    \ time base is\n   restored.  Adjustments are always relative to the specified\
    \ start\n   time -- they are not cumulative.  Adjustments apply to all \"t=\"\
    \ and\n   \"r=\" lines in a session description.\n   If a session is likely to\
    \ last several years, it is expected that the\n   session announcement will be\
    \ modified periodically rather than\n   transmit several years' worth of adjustments\
    \ in one session\n   announcement.\n"
- title: 5.12.  Encryption Keys ("k=")
  contents:
  - "5.12.  Encryption Keys (\"k=\")\n      k=<method>\n      k=<method>:<encryption\
    \ key>\n   If transported over a secure and trusted channel, the Session\n   Description\
    \ Protocol MAY be used to convey encryption keys.  A simple\n   mechanism for\
    \ key exchange is provided by the key field (\"k=\"),\n   although this is primarily\
    \ supported for compatibility with older\n   implementations and its use is NOT\
    \ RECOMMENDED.  Work is in progress\n   to define new key exchange mechanisms\
    \ for use with SDP [27] [28], and\n   it is expected that new applications will\
    \ use those mechanisms.\n   A key field is permitted before the first media entry\
    \ (in which case\n   it applies to all media in the session), or for each media\
    \ entry as\n   required.  The format of keys and their usage are outside the scope\n\
    \   of this document, and the key field provides no way to indicate the\n   encryption\
    \ algorithm to be used, key type, or other information about\n   the key: this\
    \ is assumed to be provided by the higher-level protocol\n   using SDP.  If there\
    \ is a need to convey this information within SDP,\n   the extensions mentioned\
    \ previously SHOULD be used.  Many security\n   protocols require two keys: one\
    \ for confidentiality, another for\n   integrity.  This specification does not\
    \ support transfer of two keys.\n   The method indicates the mechanism to be used\
    \ to obtain a usable key\n   by external means, or from the encoded encryption\
    \ key given.  The\n   following methods are defined:\n      k=clear:<encryption\
    \ key>\n         The encryption key is included untransformed in this key field.\n\
    \         This method MUST NOT be used unless it can be guaranteed that\n    \
    \     the SDP is conveyed over a secure channel.  The encryption key\n       \
    \  is interpreted as text according to the charset attribute; use\n         the\
    \ \"k=base64:\" method to convey characters that are otherwise\n         prohibited\
    \ in SDP.\n      k=base64:<encoded encryption key>\n         The encryption key\
    \ is included in this key field but has been\n         base64 encoded [12] because\
    \ it includes characters that are\n         prohibited in SDP.  This method MUST\
    \ NOT be used unless it can\n         be guaranteed that the SDP is conveyed over\
    \ a secure channel.\n      k=uri:<URI to obtain key>\n         A Uniform Resource\
    \ Identifier is included in the key field.\n         The URI refers to the data\
    \ containing the key, and may require\n         additional authentication before\
    \ the key can be returned.  When\n         a request is made to the given URI,\
    \ the reply should specify\n         the encoding for the key.  The URI is often\
    \ an Secure Socket\n         Layer/Transport Layer Security (SSL/TLS)-protected\
    \ HTTP URI\n         (\"https:\"), although this is not required.\n      k=prompt\n\
    \         No key is included in this SDP description, but the session or\n   \
    \      media stream referred to by this key field is encrypted.  The\n       \
    \  user should be prompted for the key when attempting to join the\n         session,\
    \ and this user-supplied key should then be used to\n         decrypt the media\
    \ streams.  The use of user-specified keys is\n         NOT RECOMMENDED, since\
    \ such keys tend to have weak security\n         properties.\n   The key field\
    \ MUST NOT be used unless it can be guaranteed that the\n   SDP is conveyed over\
    \ a secure and trusted channel.  An example of\n   such a channel might be SDP\
    \ embedded inside an S/MIME message or a\n   TLS-protected HTTP session.  It is\
    \ important to ensure that the\n   secure channel is with the party that is authorised\
    \ to join the\n   session, not an intermediary: if a caching proxy server is used,\
    \ it\n   is important to ensure that the proxy is either trusted or unable to\n\
    \   access the SDP.\n"
- title: 5.13.  Attributes ("a=")
  contents:
  - "5.13.  Attributes (\"a=\")\n      a=<attribute>\n      a=<attribute>:<value>\n\
    \   Attributes are the primary means for extending SDP.  Attributes may\n   be\
    \ defined to be used as \"session-level\" attributes, \"media-level\"\n   attributes,\
    \ or both.\n   A media description may have any number of attributes (\"a=\" fields)\n\
    \   that are media specific.  These are referred to as \"media-level\"\n   attributes\
    \ and add information about the media stream.  Attribute\n   fields can also be\
    \ added before the first media field; these\n   \"session-level\" attributes convey\
    \ additional information that applies\n   to the conference as a whole rather\
    \ than to individual media.\n   Attribute fields may be of two forms:\n   o  A\
    \ property attribute is simply of the form \"a=<flag>\".  These are\n      binary\
    \ attributes, and the presence of the attribute conveys that\n      the attribute\
    \ is a property of the session.  An example might be\n      \"a=recvonly\".\n\
    \   o  A value attribute is of the form \"a=<attribute>:<value>\".  For\n    \
    \  example, a whiteboard could have the value attribute \"a=orient:\n      landscape\"\
    \n   Attribute interpretation depends on the media tool being invoked.\n   Thus\
    \ receivers of session descriptions should be configurable in\n   their interpretation\
    \ of session descriptions in general and of\n   attributes in particular.\n  \
    \ Attribute names MUST use the US-ASCII subset of ISO-10646/UTF-8.\n   Attribute\
    \ values are octet strings, and MAY use any octet value\n   except 0x00 (Nul),\
    \ 0x0A (LF), and 0x0D (CR).  By default, attribute\n   values are to be interpreted\
    \ as in ISO-10646 character set with UTF-8\n   encoding.  Unlike other text fields,\
    \ attribute values are NOT\n   normally affected by the \"charset\" attribute\
    \ as this would make\n   comparisons against known values problematic.  However,\
    \ when an\n   attribute is defined, it can be defined to be charset dependent,\
    \ in\n   which case its value should be interpreted in the session charset\n \
    \  rather than in ISO-10646.\n   Attributes MUST be registered with IANA (see\
    \ Section 8).  If an\n   attribute is received that is not understood, it MUST\
    \ be ignored by\n   the receiver.\n"
- title: 5.14.  Media Descriptions ("m=")
  contents:
  - "5.14.  Media Descriptions (\"m=\")\n      m=<media> <port> <proto> <fmt> ...\n\
    \   A session description may contain a number of media descriptions.\n   Each\
    \ media description starts with an \"m=\" field and is terminated by\n   either\
    \ the next \"m=\" field or by the end of the session description.\n   A media\
    \ field has several sub-fields:\n   <media> is the media type.  Currently defined\
    \ media are \"audio\",\n      \"video\", \"text\", \"application\", and \"message\"\
    , although this list\n      may be extended in the future (see Section 8).\n \
    \  <port> is the transport port to which the media stream is sent.  The\n    \
    \  meaning of the transport port depends on the network being used as\n      specified\
    \ in the relevant \"c=\" field, and on the transport\n      protocol defined in\
    \ the <proto> sub-field of the media field.\n      Other ports used by the media\
    \ application (such as the RTP Control\n      Protocol (RTCP) port [19]) MAY be\
    \ derived algorithmically from the\n      base media port or MAY be specified\
    \ in a separate attribute (for\n      example, \"a=rtcp:\" as defined in [22]).\n\
    \      If non-contiguous ports are used or if they don't follow the\n      parity\
    \ rule of even RTP ports and odd RTCP ports, the \"a=rtcp:\"\n      attribute\
    \ MUST be used.  Applications that are requested to send\n      media to a <port>\
    \ that is odd and where the \"a=rtcp:\" is present\n      MUST NOT subtract 1\
    \ from the RTP port: that is, they MUST send the\n      RTP to the port indicated\
    \ in <port> and send the RTCP to the port\n      indicated in the \"a=rtcp\" attribute.\n\
    \      For applications where hierarchically encoded streams are being\n     \
    \ sent to a unicast address, it may be necessary to specify multiple\n      transport\
    \ ports.  This is done using a similar notation to that\n      used for IP multicast\
    \ addresses in the \"c=\" field:\n         m=<media> <port>/<number of ports>\
    \ <proto> <fmt> ...\n      In such a case, the ports used depend on the transport\
    \ protocol.\n      For RTP, the default is that only the even-numbered ports are\
    \ used\n      for data with the corresponding one-higher odd ports used for the\n\
    \      RTCP belonging to the RTP session, and the <number of ports>\n      denoting\
    \ the number of RTP sessions.  For example:\n         m=video 49170/2 RTP/AVP\
    \ 31\n      would specify that ports 49170 and 49171 form one RTP/RTCP pair\n\
    \      and 49172 and 49173 form the second RTP/RTCP pair.  RTP/AVP is the\n  \
    \    transport protocol and 31 is the format (see below).  If non-\n      contiguous\
    \ ports are required, they must be signalled using a\n      separate attribute\
    \ (for example, \"a=rtcp:\" as defined in [22]).\n      If multiple addresses\
    \ are specified in the \"c=\" field and multiple\n      ports are specified in\
    \ the \"m=\" field, a one-to-one mapping from\n      port to the corresponding\
    \ address is implied.  For example:\n         c=IN IP4 224.2.1.1/127/2\n     \
    \    m=video 49170/2 RTP/AVP 31\n      would imply that address 224.2.1.1 is used\
    \ with ports 49170 and\n      49171, and address 224.2.1.2 is used with ports\
    \ 49172 and 49173.\n      The semantics of multiple \"m=\" lines using the same\
    \ transport\n      address are undefined.  This implies that, unlike limited past\n\
    \      practice, there is no implicit grouping defined by such means and\n   \
    \   an explicit grouping framework (for example, [18]) should instead\n      be\
    \ used to express the intended semantics.\n   <proto> is the transport protocol.\
    \  The meaning of the transport\n      protocol is dependent on the address type\
    \ field in the relevant\n      \"c=\" field.  Thus a \"c=\" field of IP4 indicates\
    \ that the transport\n      protocol runs over IP4.  The following transport protocols\
    \ are\n      defined, but may be extended through registration of new protocols\n\
    \      with IANA (see Section 8):\n      *  udp: denotes an unspecified protocol\
    \ running over UDP.\n      *  RTP/AVP: denotes RTP [19] used under the RTP Profile\
    \ for Audio\n         and Video Conferences with Minimal Control [20] running\
    \ over\n         UDP.\n      *  RTP/SAVP: denotes the Secure Real-time Transport\
    \ Protocol [23]\n         running over UDP.\n      The main reason to specify\
    \ the transport protocol in addition to\n      the media format is that the same\
    \ standard media formats may be\n      carried over different transport protocols\
    \ even when the network\n      protocol is the same -- a historical example is\
    \ vat Pulse Code\n      Modulation (PCM) audio and RTP PCM audio; another might\
    \ be TCP/RTP\n      PCM audio.  In addition, relays and monitoring tools that\
    \ are\n      transport-protocol-specific but format-independent are possible.\n\
    \   <fmt> is a media format description.  The fourth and any subsequent\n    \
    \  sub-fields describe the format of the media.  The interpretation\n      of\
    \ the media format depends on the value of the <proto> sub-field.\n      If the\
    \ <proto> sub-field is \"RTP/AVP\" or \"RTP/SAVP\" the <fmt>\n      sub-fields\
    \ contain RTP payload type numbers.  When a list of\n      payload type numbers\
    \ is given, this implies that all of these\n      payload formats MAY be used\
    \ in the session, but the first of these\n      formats SHOULD be used as the\
    \ default format for the session.  For\n      dynamic payload type assignments\
    \ the \"a=rtpmap:\" attribute (see\n      Section 6) SHOULD be used to map from\
    \ an RTP payload type number\n      to a media encoding name that identifies the\
    \ payload format.  The\n      \"a=fmtp:\"  attribute MAY be used to specify format\
    \ parameters (see\n      Section 6).\n      If the <proto> sub-field is \"udp\"\
    \ the <fmt> sub-fields MUST\n      reference a media type describing the format\
    \ under the \"audio\",\n      \"video\", \"text\", \"application\", or \"message\"\
    \ top-level media\n      types.  The media type registration SHOULD define the\
    \ packet\n      format for use with UDP transport.\n      For media using other\
    \ transport protocols, the <fmt> field is\n      protocol specific.  Rules for\
    \ interpretation of the <fmt> sub-\n      field MUST be defined when registering\
    \ new protocols (see Section\n      8.2.2).\n"
- title: 6.  SDP Attributes
  contents:
  - "6.  SDP Attributes\n   The following attributes are defined.  Since application\
    \ writers may\n   add new attributes as they are required, this list is not exhaustive.\n\
    \   Registration procedures for new attributes are defined in Section\n   8.2.4.\n\
    \      a=cat:<category>\n         This attribute gives the dot-separated hierarchical\
    \ category of\n         the session.  This is to enable a receiver to filter unwanted\n\
    \         sessions by category.  There is no central registry of\n         categories.\
    \  It is a session-level attribute, and it is not\n         dependent on charset.\n\
    \      a=keywds:<keywords>\n         Like the cat attribute, this is to assist\
    \ identifying wanted\n         sessions at the receiver.  This allows a receiver\
    \ to select\n         interesting session based on keywords describing the purpose\
    \ of\n         the session; there is no central registry of keywords.  It is a\n\
    \         session-level attribute.  It is a charset-dependent attribute,\n   \
    \      meaning that its value should be interpreted in the charset\n         specified\
    \ for the session description if one is specified, or\n         by default in\
    \ ISO 10646/UTF-8.\n      a=tool:<name and version of tool>\n         This gives\
    \ the name and version number of the tool used to\n         create the session\
    \ description.  It is a session-level\n         attribute, and it is not dependent\
    \ on charset.\n      a=ptime:<packet time>\n         This gives the length of\
    \ time in milliseconds represented by\n         the media in a packet.  This is\
    \ probably only meaningful for\n         audio data, but may be used with other\
    \ media types if it makes\n         sense.  It should not be necessary to know\
    \ ptime to decode RTP\n         or vat audio, and it is intended as a recommendation\
    \ for the\n         encoding/packetisation of audio.  It is a media-level\n  \
    \       attribute, and it is not dependent on charset.\n      a=maxptime:<maximum\
    \ packet time>\n         This gives the maximum amount of media that can be encapsulated\n\
    \         in each packet, expressed as time in milliseconds.  The time\n     \
    \    SHALL be calculated as the sum of the time the media present in\n       \
    \  the packet represents.  For frame-based codecs, the time SHOULD\n         be\
    \ an integer multiple of the frame size.  This attribute is\n         probably\
    \ only meaningful for audio data, but may be used with\n         other media types\
    \ if it makes sense.  It is a media-level\n         attribute, and it is not dependent\
    \ on charset.  Note that this\n         attribute was introduced after RFC 2327,\
    \ and non-updated\n         implementations will ignore this attribute.\n    \
    \  a=rtpmap:<payload type> <encoding name>/<clock rate> [/<encoding\n        \
    \ parameters>]\n         This attribute maps from an RTP payload type number (as\
    \ used in\n         an \"m=\" line) to an encoding name denoting the payload format\n\
    \         to be used.  It also provides information on the clock rate and\n  \
    \       encoding parameters.  It is a media-level attribute that is not\n    \
    \     dependent on charset.\n         Although an RTP profile may make static\
    \ assignments of payload\n         type numbers to payload formats, it is more\
    \ common for that\n         assignment to be done dynamically using \"a=rtpmap:\"\
    \ attributes.\n         As an example of a static payload type, consider u-law\
    \ PCM\n         coded single-channel audio sampled at 8 kHz.  This is\n      \
    \   completely defined in the RTP Audio/Video profile as payload\n         type\
    \ 0, so there is no need for an \"a=rtpmap:\" attribute, and\n         the media\
    \ for such a stream sent to UDP port 49232 can be\n         specified as:\n  \
    \          m=audio 49232 RTP/AVP 0\n         An example of a dynamic payload type\
    \ is 16-bit linear encoded\n         stereo audio sampled at 16 kHz.  If we wish\
    \ to use the dynamic\n         RTP/AVP payload type 98 for this stream, additional\
    \ information\n         is required to decode it:\n            m=audio 49232 RTP/AVP\
    \ 98\n            a=rtpmap:98 L16/16000/2\n         Up to one rtpmap attribute\
    \ can be defined for each media format\n         specified.  Thus, we might have\
    \ the following:\n            m=audio 49230 RTP/AVP 96 97 98\n            a=rtpmap:96\
    \ L8/8000\n            a=rtpmap:97 L16/8000\n            a=rtpmap:98 L16/11025/2\n\
    \         RTP profiles that specify the use of dynamic payload types MUST\n  \
    \       define the set of valid encoding names and/or a means to\n         register\
    \ encoding names if that profile is to be used with SDP.\n         The \"RTP/AVP\"\
    \ and \"RTP/SAVP\" profiles use media subtypes for\n         encoding names, under\
    \ the top-level media type denoted in the\n         \"m=\" line.  In the example\
    \ above, the media types are\n         \"audio/l8\" and \"audio/l16\".\n     \
    \    For audio streams, <encoding parameters> indicates the number\n         of\
    \ audio channels.  This parameter is OPTIONAL and may be\n         omitted if\
    \ the number of channels is one, provided that no\n         additional parameters\
    \ are needed.\n         For video streams, no encoding parameters are currently\n\
    \         specified.\n         Additional encoding parameters MAY be defined in\
    \ the future,\n         but codec-specific parameters SHOULD NOT be added.  Parameters\n\
    \         added to an \"a=rtpmap:\" attribute SHOULD only be those required\n\
    \         for a session directory to make the choice of appropriate media\n  \
    \       to participate in a session.  Codec-specific parameters should\n     \
    \    be added in other attributes (for example, \"a=fmtp:\").\n         Note:\
    \ RTP audio formats typically do not include information\n         about the number\
    \ of samples per packet.  If a non-default (as\n         defined in the RTP Audio/Video\
    \ Profile) packetisation is\n         required, the \"ptime\" attribute is used\
    \ as given above.\n      a=recvonly\n         This specifies that the tools should\
    \ be started in receive-only\n         mode where applicable.  It can be either\
    \ a session- or media-\n         level attribute, and it is not dependent on charset.\
    \  Note that\n         recvonly applies to the media only, not to any associated\n\
    \         control protocol (e.g., an RTP-based system in recvonly mode\n     \
    \    SHOULD still send RTCP packets).\n      a=sendrecv\n         This specifies\
    \ that the tools should be started in send and\n         receive mode.  This is\
    \ necessary for interactive conferences\n         with tools that default to receive-only\
    \ mode.  It can be either\n         a session or media-level attribute, and it\
    \ is not dependent on\n         charset.\n         If none of the attributes \"\
    sendonly\", \"recvonly\", \"inactive\",\n         and \"sendrecv\" is present,\
    \ \"sendrecv\" SHOULD be assumed as the\n         default for sessions that are\
    \ not of the conference type\n         \"broadcast\" or \"H332\" (see below).\n\
    \      a=sendonly\n         This specifies that the tools should be started in\
    \ send-only\n         mode.  An example may be where a different unicast address\
    \ is\n         to be used for a traffic destination than for a traffic source.\n\
    \         In such a case, two media descriptions may be used, one\n         sendonly\
    \ and one recvonly.  It can be either a session- or\n         media-level attribute,\
    \ but would normally only be used as a\n         media attribute.  It is not dependent\
    \ on charset.  Note that\n         sendonly applies only to the media, and any\
    \ associated control\n         protocol (e.g., RTCP) SHOULD still be received\
    \ and processed as\n         normal.\n      a=inactive\n         This specifies\
    \ that the tools should be started in inactive\n         mode.  This is necessary\
    \ for interactive conferences where\n         users can put other users on hold.\
    \  No media is sent over an\n         inactive media stream.  Note that an RTP-based\
    \ system SHOULD\n         still send RTCP, even if started inactive.  It can be\
    \ either a\n         session or media-level attribute, and it is not dependent\
    \ on\n         charset.\n      a=orient:<orientation>\n         Normally this\
    \ is only used for a whiteboard or presentation\n         tool.  It specifies\
    \ the orientation of a the workspace on the\n         screen.  It is a media-level\
    \ attribute.  Permitted values are\n         \"portrait\", \"landscape\", and\
    \ \"seascape\" (upside-down\n         landscape).  It is not dependent on charset.\n\
    \      a=type:<conference type>\n         This specifies the type of the conference.\
    \  Suggested values\n         are \"broadcast\", \"meeting\", \"moderated\", \"\
    test\", and \"H332\".\n         \"recvonly\" should be the default for \"type:broadcast\"\
    \ sessions,\n         \"type:meeting\" should imply \"sendrecv\", and \"type:moderated\"\
    \n         should indicate the use of a floor control tool and that the\n    \
    \     media tools are started so as to mute new sites joining the\n         conference.\n\
    \         Specifying the attribute \"type:H332\" indicates that this\n       \
    \  loosely coupled session is part of an H.332 session as defined\n         in\
    \ the ITU H.332 specification [26].  Media tools should be\n         started \"\
    recvonly\".\n         Specifying the attribute \"type:test\" is suggested as a\
    \ hint\n         that, unless explicitly requested otherwise, receivers can\n\
    \         safely avoid displaying this session description to users.\n       \
    \  The type attribute is a session-level attribute, and it is not\n         dependent\
    \ on charset.\n      a=charset:<character set>\n         This specifies the character\
    \ set to be used to display the\n         session name and information data. \
    \ By default, the ISO-10646\n         character set in UTF-8 encoding is used.\
    \  If a more compact\n         representation is required, other character sets\
    \ may be used.\n         For example, the ISO 8859-1 is specified with the following\
    \ SDP\n         attribute:\n            a=charset:ISO-8859-1\n         This is\
    \ a session-level attribute and is not dependent on\n         charset.  The charset\
    \ specified MUST be one of those registered\n         with IANA, such as ISO-8859-1.\
    \  The character set identifier is\n         a US-ASCII string and MUST be compared\
    \ against the IANA\n         identifiers using a case-insensitive comparison.\
    \  If the\n         identifier is not recognised or not supported, all strings\
    \ that\n         are affected by it SHOULD be regarded as octet strings.\n   \
    \      Note that a character set specified MUST still prohibit the use\n     \
    \    of bytes 0x00 (Nul), 0x0A (LF), and 0x0d (CR).  Character sets\n        \
    \ requiring the use of these characters MUST define a quoting\n         mechanism\
    \ that prevents these bytes from appearing within text\n         fields.\n   \
    \   a=sdplang:<language tag>\n         This can be a session-level attribute or\
    \ a media-level\n         attribute.  As a session-level attribute, it specifies\
    \ the\n         language for the session description.  As a media-level\n    \
    \     attribute, it specifies the language for any media-level SDP\n         information\
    \ field associated with that media.  Multiple sdplang\n         attributes can\
    \ be provided either at session or media level if\n         multiple languages\
    \ in the session description or media use\n         multiple languages, in which\
    \ case the order of the attributes\n         indicates the order of importance\
    \ of the various languages in\n         the session or media from most important\
    \ to least important.\n         In general, sending session descriptions consisting\
    \ of multiple\n         languages is discouraged.  Instead, multiple descriptions\n\
    \         SHOULD be sent describing the session, one in each language.\n     \
    \    However, this is not possible with all transport mechanisms,\n         and\
    \ so multiple sdplang attributes are allowed although NOT\n         RECOMMENDED.\n\
    \         The \"sdplang\" attribute value must be a single RFC 3066\n        \
    \ language tag in US-ASCII [9].  It is not dependent on the\n         charset\
    \ attribute.  An \"sdplang\" attribute SHOULD be specified\n         when a session\
    \ is of sufficient scope to cross geographic\n         boundaries where the language\
    \ of recipients cannot be assumed,\n         or where the session is in a different\
    \ language from the\n         locally assumed norm.\n      a=lang:<language tag>\n\
    \         This can be a session-level attribute or a media-level\n         attribute.\
    \  As a session-level attribute, it specifies the\n         default language for\
    \ the session being described.  As a media-\n         level attribute, it specifies\
    \ the language for that media,\n         overriding any session-level language\
    \ specified.  Multiple lang\n         attributes can be provided either at session\
    \ or media level if\n         the session description or media use multiple languages,\
    \ in\n         which case the order of the attributes indicates the order of\n\
    \         importance of the various languages in the session or media\n      \
    \   from most important to least important.\n         The \"lang\" attribute value\
    \ must be a single RFC 3066 language\n         tag in US-ASCII [9].  It is not\
    \ dependent on the charset\n         attribute.  A \"lang\" attribute SHOULD be\
    \ specified when a\n         session is of sufficient scope to cross geographic\
    \ boundaries\n         where the language of recipients cannot be assumed, or\
    \ where\n         the session is in a different language from the locally assumed\n\
    \         norm.\n      a=framerate:<frame rate>\n         This gives the maximum\
    \ video frame rate in frames/sec.  It is\n         intended as a recommendation\
    \ for the encoding of video data.\n         Decimal representations of fractional\
    \ values using the notation\n         \"<integer>.<fraction>\" are allowed.  It\
    \ is a media-level\n         attribute, defined only for video media, and it is\
    \ not\n         dependent on charset.\n      a=quality:<quality>\n         This\
    \ gives a suggestion for the quality of the encoding as an\n         integer value.\
    \  The intention of the quality attribute for\n         video is to specify a\
    \ non-default trade-off between frame-rate\n         and still-image quality.\
    \  For video, the value is in the range\n         0 to 10, with the following\
    \ suggested meaning:\n            10 - the best still-image quality the compression\
    \ scheme can\n                 give.\n            5  - the default behaviour given\
    \ no quality suggestion.\n            0  - the worst still-image quality the codec\
    \ designer thinks\n                 is still usable.\n         It is a media-level\
    \ attribute, and it is not dependent on\n         charset.\n      a=fmtp:<format>\
    \ <format specific parameters>\n         This attribute allows parameters that\
    \ are specific to a\n         particular format to be conveyed in a way that SDP\
    \ does not\n         have to understand them.  The format must be one of the formats\n\
    \         specified for the media.  Format-specific parameters may be any\n  \
    \       set of parameters required to be conveyed by SDP and given\n         unchanged\
    \ to the media tool that will use this format.  At most\n         one instance\
    \ of this attribute is allowed for each format.\n         It is a media-level\
    \ attribute, and it is not dependent on\n         charset.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   SDP is frequently used with the Session Initiation\
    \ Protocol [15]\n   using the offer/answer model [17] to agree on parameters for\
    \ unicast\n   sessions.  When used in this manner, the security considerations\
    \ of\n   those protocols apply.\n   SDP is a session description format that describes\
    \ multimedia\n   sessions.  Entities receiving and acting upon an SDP message\
    \ SHOULD\n   be aware that a session description cannot be trusted unless it has\n\
    \   been obtained by an authenticated transport protocol from a known and\n  \
    \ trusted source.  Many different transport protocols may be used to\n   distribute\
    \ session description, and the nature of the authentication\n   will differ from\
    \ transport to transport.  For some transports,\n   security features are often\
    \ not deployed.  In case a session\n   description has not been obtained in a\
    \ trusted manner, the endpoint\n   SHOULD exercise care because, among other attacks,\
    \ the media sessions\n   received may not be the intended ones, the destination\
    \ where media is\n   sent to may not be the expected one, any of the parameters\
    \ of the\n   session may be incorrect, or the media security may be compromised.\n\
    \   It is up to the endpoint to make a sensible decision taking into\n   account\
    \ the security risks of the application and the user\n   preferences and may decide\
    \ to ask the user whether or not to accept\n   the session.\n   One transport\
    \ that can be used to distribute session descriptions is\n   the Session Announcement\
    \ Protocol (SAP).  SAP provides both\n   encryption and authentication mechanisms,\
    \ but due to the nature of\n   session announcements it is likely that there are\
    \ many occasions\n   where the originator of a session announcement cannot be\n\
    \   authenticated because the originator is previously unknown to the\n   receiver\
    \ of the announcement and because no common public key\n   infrastructure is available.\n\
    \   On receiving a session description over an unauthenticated transport\n   mechanism\
    \ or from an untrusted party, software parsing the session\n   should take a few\
    \ precautions.  Session descriptions contain\n   information required to start\
    \ software on the receiver's system.\n   Software that parses a session description\
    \ MUST NOT be able to start\n   other software except that which is specifically\
    \ configured as\n   appropriate software to participate in multimedia sessions.\
    \  It is\n   normally considered inappropriate for software parsing a session\n\
    \   description to start, on a user's system, software that is\n   appropriate\
    \ to participate in multimedia sessions, without the user\n   first being informed\
    \ that such software will be started and giving\n   the user's consent.  Thus,\
    \ a session description arriving by session\n   announcement, email, session invitation,\
    \ or WWW page MUST NOT deliver\n   the user into an interactive multimedia session\
    \ unless the user has\n   explicitly pre-authorised such action.  As it is not\
    \ always simple to\n   tell whether or not a session is interactive, applications\
    \ that are\n   unsure should assume sessions are interactive.\n   In this specification,\
    \ there are no attributes that would allow the\n   recipient of a session description\
    \ to be informed to start multimedia\n   tools in a mode where they default to\
    \ transmitting.  Under some\n   circumstances it might be appropriate to define\
    \ such attributes.  If\n   this is done, an application parsing a session description\
    \ containing\n   such attributes SHOULD either ignore them or inform the user\
    \ that\n   joining this session will result in the automatic transmission of\n\
    \   multimedia data.  The default behaviour for an unknown attribute is\n   to\
    \ ignore it.\n   In certain environments, it has become common for intermediary\n\
    \   systems to intercept and analyse session descriptions contained\n   within\
    \ other signalling protocols.  This is done for a range of\n   purposes, including\
    \ but not limited to opening holes in firewalls to\n   allow media streams to\
    \ pass, or to mark, prioritize, or block traffic\n   selectively.  In some cases,\
    \ such intermediary systems may modify the\n   session description, for example,\
    \ to have the contents of the session\n   description match NAT bindings dynamically\
    \ created.  These behaviours\n   are NOT RECOMMENDED unless the session description\
    \ is conveyed in\n   such a manner that allows the intermediary system to conduct\
    \ proper\n   checks to establish the authenticity of the session description,\
    \ and\n   the authority of its source to establish such communication sessions.\n\
    \   SDP by itself does not include sufficient information to enable these\n  \
    \ checks: they depend on the encapsulating protocol (e.g., SIP or\n   RTSP).\n\
    \   Use of the \"k=\" field poses a significant security risk, since it\n   conveys\
    \ session encryption keys in the clear.  SDP MUST NOT be used\n   to convey key\
    \ material, unless it can be guaranteed that the channel\n   over which the SDP\
    \ is delivered is both private and authenticated.\n   Moreover, the \"k=\" line\
    \ provides no way to indicate or negotiate\n   cryptographic key algorithms. \
    \ As it provides for only a single\n   symmetric key, rather than separate keys\
    \ for confidentiality and\n   integrity, its utility is severely limited.  The\
    \ use of the \"k=\" line\n   is NOT RECOMMENDED, as discussed in Section 5.12.\n"
- title: 8.  IANA Considerations
  contents:
  - '8.  IANA Considerations

    '
- title: 8.1.  The "application/sdp" Media Type
  contents:
  - "8.1.  The \"application/sdp\" Media Type\n   One media type registration from\
    \ RFC 2327 is to be updated, as\n   defined below.\n      To: ietf-types@iana.org\n\
    \      Subject: Registration of media type \"application/sdp\"\n      Type name:\
    \ application\n      Subtype name: sdp\n      Required parameters: None.\n   \
    \   Optional parameters: None.\n      Encoding considerations:\n         SDP files\
    \ are primarily UTF-8 format text.  The \"a=charset:\"\n         attribute may\
    \ be used to signal the presence of other\n         character sets in certain\
    \ parts of an SDP file (see\n         Section 6 of RFC 4566).  Arbitrary binary\
    \ content cannot\n         be directly represented in SDP.\n      Security considerations:\n\
    \         See Section 7 of RFC 4566\n      Interoperability considerations:\n\
    \         See RFC 4566\n      Published specification:\n         See RFC 4566\n\
    \      Applications which use this media type:\n         Voice over IP, video\
    \ teleconferencing, streaming media, instant\n         messaging, among others.\
    \  See also Section 3 of RFC 4566.\n      Additional information:\n      Magic\
    \ number(s):   None.\n      File extension(s): The extension \".sdp\" is commonly\
    \ used.\n      Macintosh File Type Code(s): \"sdp \"\n      Person & email address\
    \ to contact for further information:\n         Mark Handley  <M.Handley@cs.ucl.ac.uk>\n\
    \         Colin Perkins <csp@csperkins.org>\n         IETF MMUSIC working group\
    \ <mmusic@ietf.org>\n      Intended usage: COMMON\n      Author/Change controller:\n\
    \         Authors of RFC 4566\n         IETF MMUSIC working group delegated from\
    \ the IESG\n"
- title: 8.2.  Registration of Parameters
  contents:
  - "8.2.  Registration of Parameters\n   There are seven field names that may be\
    \ registered with IANA.  Using\n   the terminology in the SDP specification Backus-Naur\
    \ Form (BNF), they\n   are \"media\", \"proto\", \"fmt\", \"att-field\", \"bwtype\"\
    , \"nettype\", and\n   \"addrtype\".\n"
- title: 8.2.1.  Media Types ("media")
  contents:
  - "8.2.1.  Media Types (\"media\")\n   The set of media types is intended to be\
    \ small and SHOULD NOT be\n   extended except under rare circumstances.  The same\
    \ rules should\n   apply for media names as for top-level media content types,\
    \ and where\n   possible the same name should be registered for SDP as for MIME.\
    \  For\n   media other than existing top-level media content types, a Standards\n\
    \   Track RFC MUST be produced for a new top-level content type to be\n   registered,\
    \ and the registration MUST provide good justification why\n   no existing media\
    \ name is appropriate (the \"Standards Action\" policy\n   of RFC 2434 [8].\n\
    \   This memo registers the media types \"audio\", \"video\", \"text\",\n   \"\
    application\", and \"message\".\n   Note: The media types \"control\" and \"data\"\
    \ were listed as valid in\n   the previous version of this specification [6];\
    \ however, their\n   semantics were never fully specified and they are not widely\
    \ used.\n   These media types have been removed in this specification, although\n\
    \   they still remain valid media type capabilities for a SIP user agent\n   as\
    \ defined in RFC 3840 [24].  If these media types are considered\n   useful in\
    \ the future, a Standards Track RFC MUST be produced to\n   document their use.\
    \  Until that is done, applications SHOULD NOT use\n   these types and SHOULD\
    \ NOT declare support for them in SIP\n   capabilities declarations (even though\
    \ they exist in the registry\n   created by RFC 3840).\n"
- title: 8.2.2.  Transport Protocols ("proto")
  contents:
  - "8.2.2.  Transport Protocols (\"proto\")\n   The \"proto\" field describes the\
    \ transport protocol used.  This SHOULD\n   reference a standards-track protocol\
    \ RFC.  This memo registers three\n   values: \"RTP/AVP\" is a reference to RTP\
    \ [19] used under the RTP\n   Profile for Audio and Video Conferences with Minimal\
    \ Control [20]\n   running over UDP/IP, \"RTP/SAVP\" is a reference to the Secure\
    \ Real-\n   time Transport Protocol [23], and \"udp\" indicates an unspecified\n\
    \   protocol over UDP.\n   If other RTP profiles are defined in the future, their\
    \ \"proto\" name\n   SHOULD be specified in the same manner.  For example, an\
    \ RTP profile\n   whose short name is \"XYZ\" would be denoted by a \"proto\"\
    \ field of\n   \"RTP/XYZ\".\n   New transport protocols SHOULD be registered with\
    \ IANA.\n   Registrations MUST reference an RFC describing the protocol.  Such\
    \ an\n   RFC MAY be Experimental or Informational, although it is preferable\n\
    \   that it be Standards Track.  Registrations MUST also define the rules\n  \
    \ by which their \"fmt\" namespace is managed (see below).\n"
- title: 8.2.3.  Media Formats ("fmt")
  contents:
  - "8.2.3.  Media Formats (\"fmt\")\n   Each transport protocol, defined by the \"\
    proto\" field, has an\n   associated \"fmt\" namespace that describes the media\
    \ formats that may\n   be conveyed by that protocol.  Formats cover all the possible\n\
    \   encodings that might want to be transported in a multimedia session.\n   RTP\
    \ payload formats under the \"RTP/AVP\" and \"RTP/SAVP\" profiles MUST\n   use\
    \ the payload type number as their \"fmt\" value.  If the payload\n   type number\
    \ is dynamically assigned by this session description, an\n   additional \"rtpmap\"\
    \ attribute MUST be included to specify the format\n   name and parameters as\
    \ defined by the media type registration for the\n   payload format.  It is RECOMMENDED\
    \ that other RTP profiles that are\n   registered (in combination with RTP) as\
    \ SDP transport protocols\n   specify the same rules for the \"fmt\" namespace.\n\
    \   For the \"udp\" protocol, new formats SHOULD be registered.  Use of an\n \
    \  existing media subtype for the format is encouraged.  If no media\n   subtype\
    \ exists, it is RECOMMENDED that a suitable one be registered\n   through the\
    \ IETF process [31] by production of, or reference to, a\n   standards-track RFC\
    \ that defines the transport protocol for the\n   format.\n   For other protocols,\
    \ formats MAY be registered according to the rules\n   of the associated \"proto\"\
    \ specification.\n   Registrations of new formats MUST specify which transport\
    \ protocols\n   they apply to.\n"
- title: 8.2.4.  Attribute Names ("att-field")
  contents:
  - "8.2.4.  Attribute Names (\"att-field\")\n   Attribute field names (\"att-field\"\
    ) MUST be registered with IANA and\n   documented, because of noticeable issues\
    \ due to conflicting\n   attributes under the same name.  Unknown attributes in\
    \ SDP are simply\n   ignored, but conflicting ones that fragment the protocol\
    \ are a\n   serious problem.\n   New attribute registrations are accepted according\
    \ to the\n   \"Specification Required\" policy of RFC 2434, provided that the\n\
    \   specification includes the following information:\n   o  contact name, email\
    \ address, and telephone number\n   o  attribute name (as it will appear in SDP)\n\
    \   o  long-form attribute name in English\n   o  type of attribute (session level,\
    \ media level, or both)\n   o  whether the attribute value is subject to the charset\
    \ attribute\n   o  a one-paragraph explanation of the purpose of the attribute\n\
    \   o  a specification of appropriate attribute values for this attribute\n  \
    \ The above is the minimum that IANA will accept.  Attributes that are\n   expected\
    \ to see widespread use and interoperability SHOULD be\n   documented with a standards-track\
    \ RFC that specifies the attribute\n   more precisely.\n   Submitters of registrations\
    \ should ensure that the specification is\n   in the spirit of SDP attributes,\
    \ most notably that the attribute is\n   platform independent in the sense that\
    \ it makes no implicit\n   assumptions about operating systems and does not name\
    \ specific pieces\n   of software in a manner that might inhibit interoperability.\n\
    \   IANA has registered the following initial set of attribute names\n   (\"att-field\"\
    \ values), with definitions as in Section 6 of this memo\n   (these definitions\
    \ update those in RFC 2327):\n      Name      | Session or Media level? | Dependent\
    \ on charset?\n      ----------+-------------------------+----------------------\n\
    \      cat       | Session                 | No\n      keywds    | Session   \
    \              | Yes\n      tool      | Session                 | No\n      ptime\
    \     | Media                   | No\n      maxptime  | Media                \
    \   | No\n      rtpmap    | Media                   | No\n      recvonly  | Either\
    \                  | No\n      sendrecv  | Either                  | No\n    \
    \  sendonly  | Either                  | No\n      inactive  | Either        \
    \          | No\n      orient    | Media                   | No\n      type  \
    \    | Session                 | No\n      charset   | Session               \
    \  | No\n      sdplang   | Either                  | No\n      lang      | Either\
    \                  | No\n      framerate | Media                   | No\n    \
    \  quality   | Media                   | No\n      fmtp      | Media         \
    \          | No\n"
- title: 8.2.5.  Bandwidth Specifiers ("bwtype")
  contents:
  - "8.2.5.  Bandwidth Specifiers (\"bwtype\")\n   A proliferation of bandwidth specifiers\
    \ is strongly discouraged.\n   New bandwidth specifiers (\"bwtype\" fields) MUST\
    \ be registered with\n   IANA.  The submission MUST reference a standards-track\
    \ RFC specifying\n   the semantics of the bandwidth specifier precisely, and indicating\n\
    \   when it should be used, and why the existing registered bandwidth\n   specifiers\
    \ do not suffice.\n   IANA has registered the bandwidth specifiers \"CT\" and\
    \ \"AS\" with\n   definitions as in Section 5.8 of this memo (these definitions\
    \ update\n   those in RFC 2327).\n"
- title: 8.2.6.  Network Types ("nettype")
  contents:
  - "8.2.6.  Network Types (\"nettype\")\n   New network types (the \"nettype\" field)\
    \ may be registered with IANA\n   if SDP needs to be used in the context of non-Internet\
    \ environments.\n   Although these are not normally the preserve of IANA, there\
    \ may be\n   circumstances when an Internet application needs to interoperate\
    \ with\n   a non-Internet application, such as when gatewaying an Internet\n \
    \  telephone call into the Public Switched Telephone Network (PSTN).\n   The number\
    \ of network types should be small and should be rarely\n   extended.  A new network\
    \ type cannot be registered without\n   registering at least one address type\
    \ to be used with that network\n   type.  A new network type registration MUST\
    \ reference an RFC that\n   gives details of the network type and address type\
    \ and specifies how\n   and when they would be used.\n   IANA has registered the\
    \ network type \"IN\" to represent the Internet,\n   with definition as in Sections\
    \ 5.2 and 5.7 of this memo (these\n   definitions update those in RFC 2327).\n"
- title: 8.2.7.  Address Types ("addrtype")
  contents:
  - "8.2.7.  Address Types (\"addrtype\")\n   New address types (\"addrtype\") may\
    \ be registered with IANA.  An\n   address type is only meaningful in the context\
    \ of a network type, and\n   any registration of an address type MUST specify\
    \ a registered network\n   type or be submitted along with a network type registration.\
    \  A new\n   address type registration MUST reference an RFC giving details of\
    \ the\n   syntax of the address type.  Address types are not expected to be\n\
    \   registered frequently.\n   IANA has registered the address types \"IP4\" and\
    \ \"IP6\" with\n   definitions as in Sections 5.2 and 5.7 of this memo (these\n\
    \   definitions update those in RFC 2327).\n"
- title: 8.2.8.  Registration Procedure
  contents:
  - "8.2.8.  Registration Procedure\n   In the RFC documentation that registers SDP\
    \ \"media\", \"proto\", \"fmt\",\n   \"bwtype\", \"nettype\", and \"addrtype\"\
    \ fields, the authors MUST include\n   the following information for IANA to place\
    \ in the appropriate\n   registry:\n   o  contact name, email address, and telephone\
    \ number\n   o  name being registered (as it will appear in SDP)\n   o  long-form\
    \ name in English\n   o  type of name (\"media\", \"proto\", \"fmt\", \"bwtype\"\
    , \"nettype\", or\n      \"addrtype\")\n   o  a one-paragraph explanation of the\
    \ purpose of the registered name\n   o  a reference to the specification for the\
    \ registered name (this\n      will typically be an RFC number)\n   IANA may refer\
    \ any registration to the IESG for review, and may\n   request revisions to be\
    \ made before a registration will be made.\n"
- title: 8.3.  Encryption Key Access Methods
  contents:
  - "8.3.  Encryption Key Access Methods\n   The IANA previously maintained a table\
    \ of SDP encryption key access\n   method (\"enckey\") names.  This table is obsolete,\
    \ since the \"k=\" line\n   is not extensible.  New registrations MUST NOT be\
    \ accepted.\n"
- title: 9.  SDP Grammar
  contents:
  - "9.  SDP Grammar\n   This section provides an Augmented BNF grammar for SDP. \
    \ ABNF is\n   defined in [4].\n   ; SDP Syntax\n   session-description = proto-version\n\
    \                         origin-field\n                         session-name-field\n\
    \                         information-field\n                         uri-field\n\
    \                         email-fields\n                         phone-fields\n\
    \                         connection-field\n                         bandwidth-fields\n\
    \                         time-fields\n                         key-field\n  \
    \                       attribute-fields\n                         media-descriptions\n\
    \   proto-version =       %x76 \"=\" 1*DIGIT CRLF\n                         ;this\
    \ memo describes version 0\n   origin-field =        %x6f \"=\" username SP sess-id\
    \ SP sess-version SP\n                         nettype SP addrtype SP unicast-address\
    \ CRLF\n   session-name-field =  %x73 \"=\" text CRLF\n   information-field =\
    \   [%x69 \"=\" text CRLF]\n   uri-field =           [%x75 \"=\" uri CRLF]\n \
    \  email-fields =        *(%x65 \"=\" email-address CRLF)\n   phone-fields = \
    \       *(%x70 \"=\" phone-number CRLF)\n   connection-field =    [%x63 \"=\"\
    \ nettype SP addrtype SP\n                         connection-address CRLF]\n\
    \                         ;a connection field must be present\n              \
    \           ;in every media description or at the\n                         ;session-level\n\
    \   bandwidth-fields =    *(%x62 \"=\" bwtype \":\" bandwidth CRLF)\n   time-fields\
    \ =         1*( %x74 \"=\" start-time SP stop-time\n                         *(CRLF\
    \ repeat-fields) CRLF)\n                         [zone-adjustments CRLF]\n   repeat-fields\
    \ =       %x72 \"=\" repeat-interval SP typed-time\n                         1*(SP\
    \ typed-time)\n   zone-adjustments =    %x7a \"=\" time SP [\"-\"] typed-time\n\
    \                         *(SP time SP [\"-\"] typed-time)\n   key-field =   \
    \        [%x6b \"=\" key-type CRLF]\n   attribute-fields =    *(%x61 \"=\" attribute\
    \ CRLF)\n   media-descriptions =  *( media-field\n                         information-field\n\
    \                         *connection-field\n                         bandwidth-fields\n\
    \                         key-field\n                         attribute-fields\
    \ )\n   media-field =         %x6d \"=\" media SP port [\"/\" integer]\n     \
    \                    SP proto 1*(SP fmt) CRLF\n   ; sub-rules of 'o='\n   username\
    \ =            non-ws-string\n                         ;pretty wide definition,\
    \ but doesn't\n                         ;include space\n   sess-id =         \
    \    1*DIGIT\n                         ;should be unique for this username/host\n\
    \   sess-version =        1*DIGIT\n   nettype =             token\n          \
    \               ;typically \"IN\"\n   addrtype =            token\n          \
    \               ;typically \"IP4\" or \"IP6\"\n   ; sub-rules of 'u='\n   uri\
    \ =                 URI-reference\n                         ; see RFC 3986\n \
    \  ; sub-rules of 'e=', see RFC 2822 for definitions\n   email-address       \
    \ = address-and-comment / dispname-and-address\n                          / addr-spec\n\
    \   address-and-comment  = addr-spec 1*SP \"(\" 1*email-safe \")\"\n   dispname-and-address\
    \ = 1*email-safe 1*SP \"<\" addr-spec \">\"\n   ; sub-rules of 'p='\n   phone-number\
    \ =        phone *SP \"(\" 1*email-safe \")\" /\n                         1*email-safe\
    \ \"<\" phone \">\" /\n                         phone\n   phone =            \
    \   [\"+\"] DIGIT 1*(SP / \"-\" / DIGIT)\n   ; sub-rules of 'c='\n   connection-address\
    \ =  multicast-address / unicast-address\n   ; sub-rules of 'b='\n   bwtype =\
    \              token\n   bandwidth =           1*DIGIT\n   ; sub-rules of 't='\n\
    \   start-time =          time / \"0\"\n   stop-time =           time / \"0\"\n\
    \   time =                POS-DIGIT 9*DIGIT\n                         ; Decimal\
    \ representation of NTP time in\n                         ; seconds since 1900.\
    \  The representation\n                         ; of NTP time is an unbounded\
    \ length field\n                         ; containing at least 10 digits.  Unlike\
    \ the\n                         ; 64-bit representation used elsewhere, time\n\
    \                         ; in SDP does not wrap in the year 2036.\n   ; sub-rules\
    \ of 'r=' and 'z='\n   repeat-interval =     POS-DIGIT *DIGIT [fixed-len-time-unit]\n\
    \   typed-time =          1*DIGIT [fixed-len-time-unit]\n   fixed-len-time-unit\
    \ = %x64 / %x68 / %x6d / %x73\n   ; sub-rules of 'k='\n   key-type =         \
    \   %x70 %x72 %x6f %x6d %x70 %x74 /     ; \"prompt\"\n                       \
    \  %x63 %x6c %x65 %x61 %x72 \":\" text / ; \"clear:\"\n                      \
    \   %x62 %x61 %x73 %x65 \"64:\" base64 /  ; \"base64:\"\n                    \
    \     %x75 %x72 %x69 \":\" uri              ; \"uri:\"\n   base64      =     \
    \    *base64-unit [base64-pad]\n   base64-unit =         4base64-char\n   base64-pad\
    \  =         2base64-char \"==\" / 3base64-char \"=\"\n   base64-char =      \
    \   ALPHA / DIGIT / \"+\" / \"/\"\n   ; sub-rules of 'a='\n   attribute =    \
    \       (att-field \":\" att-value) / att-field\n   att-field =           token\n\
    \   att-value =           byte-string\n   ; sub-rules of 'm='\n   media =    \
    \           token\n                         ;typically \"audio\", \"video\", \"\
    text\", or\n                         ;\"application\"\n   fmt =              \
    \   token\n                         ;typically an RTP payload type for audio\n\
    \                         ;and video media\n   proto  =              token *(\"\
    /\" token)\n                         ;typically \"RTP/AVP\" or \"udp\"\n   port\
    \ =                1*DIGIT\n   ; generic sub-rules: addressing\n   unicast-address\
    \ =     IP4-address / IP6-address / FQDN / extn-addr\n   multicast-address = \
    \  IP4-multicast / IP6-multicast / FQDN\n                         / extn-addr\n\
    \   IP4-multicast =       m1 3( \".\" decimal-uchar )\n                      \
    \   \"/\" ttl [ \"/\" integer ]\n                         ; IPv4 multicast addresses\
    \ may be in the\n                         ; range 224.0.0.0 to 239.255.255.255\n\
    \   m1 =                  (\"22\" (\"4\"/\"5\"/\"6\"/\"7\"/\"8\"/\"9\")) /\n \
    \                        (\"23\" DIGIT )\n   IP6-multicast =       hexpart [ \"\
    /\" integer ]\n                         ; IPv6 address starting with FF\n   ttl\
    \ =                 (POS-DIGIT *2DIGIT) / \"0\"\n   FQDN =                4*(alpha-numeric\
    \ / \"-\" / \".\")\n                         ; fully qualified domain name as\
    \ specified\n                         ; in RFC 1035 (and updates)\n   IP4-address\
    \ =         b1 3(\".\" decimal-uchar)\n   b1 =                  decimal-uchar\n\
    \                         ; less than \"224\"\n   ; The following is consistent\
    \ with RFC 2373 [30], Appendix B.\n   IP6-address =         hexpart [ \":\" IP4-address\
    \ ]\n   hexpart =             hexseq / hexseq \"::\" [ hexseq ] /\n          \
    \               \"::\" [ hexseq ]\n   hexseq  =             hex4 *( \":\" hex4)\n\
    \   hex4    =             1*4HEXDIG\n   ; Generic for other address families\n\
    \   extn-addr =           non-ws-string\n   ; generic sub-rules: datatypes\n \
    \  text =                byte-string\n                         ;default is to\
    \ interpret this as UTF8 text.\n                         ;ISO 8859-1 requires\
    \ \"a=charset:ISO-8859-1\"\n                         ;session-level attribute\
    \ to be used\n   byte-string =         1*(%x01-09/%x0B-0C/%x0E-FF)\n         \
    \                ;any byte except NUL, CR, or LF\n   non-ws-string =       1*(VCHAR/%x80-FF)\n\
    \                         ;string of visible characters\n   token-char =     \
    \     %x21 / %x23-27 / %x2A-2B / %x2D-2E / %x30-39\n                         /\
    \ %x41-5A / %x5E-7E\n   token =               1*(token-char)\n   email-safe =\
    \          %x01-09/%x0B-0C/%x0E-27/%x2A-3B/%x3D/%x3F-FF\n                    \
    \     ;any byte except NUL, CR, LF, or the quoting\n                         ;characters\
    \ ()<>\n   integer =             POS-DIGIT *DIGIT\n   ; generic sub-rules: primitives\n\
    \   alpha-numeric =       ALPHA / DIGIT\n   POS-DIGIT =           %x31-39 ; 1\
    \ - 9\n   decimal-uchar =       DIGIT\n                         / POS-DIGIT DIGIT\n\
    \                         / (\"1\" 2*(DIGIT))\n                         / (\"\
    2\" (\"0\"/\"1\"/\"2\"/\"3\"/\"4\") DIGIT)\n                         / (\"2\"\
    \ \"5\" (\"0\"/\"1\"/\"2\"/\"3\"/\"4\"/\"5\"))\n   ; external references:\n  \
    \       ; ALPHA, DIGIT, CRLF, SP, VCHAR: from RFC 4234\n         ; URI-reference:\
    \ from RFC 3986\n         ; addr-spec: from RFC 2822\n"
- title: 10.  Summary of Changes from RFC 2327
  contents:
  - "10.  Summary of Changes from RFC 2327\n   The memo has been significantly restructured,\
    \ incorporating a large\n   number of clarifications to the specification in light\
    \ of use.  With\n   the exception of those items noted below, the changes to the\
    \ memo are\n   intended to be backward-compatible clarifications.  However, due\
    \ to\n   inconsistencies and unclear definitions in RFC 2327 it is likely that\n\
    \   some implementations interpreted that memo in ways that differ from\n   this\
    \ version of SDP.\n   The ABNF grammar in Section 9 has been extensively revised\
    \ and\n   updated, correcting a number of mistakes and incorporating the RFC\n\
    \   3266 IPv6 extensions.  Known inconsistencies between the grammar and\n   the\
    \ specification text have been resolved.\n   A media type registration for SDP\
    \ is included.  Requirements for the\n   registration of attributes and other\
    \ parameters with IANA have been\n   clarified and tightened (Section 8).  It\
    \ is noted that \"text\" and\n   \"message\" are valid media types for use with\
    \ SDP, but that \"control\"\n   and \"data\" are under-specified and deprecated.\n\
    \   RFC 2119 terms are now used throughout to specify requirements\n   levels.\
    \  Certain of those requirements, in particular in relation to\n   parameter registration,\
    \ are stricter than those in RFC 2327.\n   The \"RTP/SAVP\" RTP profile and its\
    \ \"fmt\" namespace are registered.\n   The attributes \"a=inactive\" and \"a=maxptime\"\
    \ have been added.\n   RFC 2327 mandated that either \"e=\" or \"p=\" was required.\
    \  Both are\n   now optional, to reflect actual usage.\n   The significant limitations\
    \ of the \"k=\" field are noted, and its use\n   is deprecated.\n   Most uses\
    \ of the \"x-\" prefix notation for experimental parameters are\n   disallowed\
    \ and the other uses are deprecated.\n"
- title: 11.  Acknowledgements
  contents:
  - "11.  Acknowledgements\n   Many people in the IETF Multiparty Multimedia Session\
    \ Control\n   (MMUSIC) working group have made comments and suggestions\n   contributing\
    \ to this document.  In particular, we would like to thank\n   Eve Schooler, Steve\
    \ Casner, Bill Fenner, Allison Mankin, Ross\n   Finlayson, Peter Parnes, Joerg\
    \ Ott, Carsten Bormann, Steve Hanna,\n   Jonathan Lennox, Keith Drage, Sean Olson,\
    \ Bernie Hoeneisen, Jonathan\n   Rosenberg, John Elwell, Flemming Andreasen, Jon\
    \ Peterson, and Spencer\n   Dawkins.\n"
- title: 12.  References
  contents:
  - '12.  References

    '
- title: 12.1.  Normative References
  contents:
  - "12.1.  Normative References\n   [1]   Mockapetris, P., \"Domain names - concepts\
    \ and facilities\", STD\n         13, RFC 1034, November 1987.\n   [2]   Mockapetris,\
    \ P., \"Domain names - implementation and\n         specification\", STD 13, RFC\
    \ 1035, November 1987.\n   [3]   Bradner, S., \"Key words for use in RFCs to Indicate\
    \ Requirement\n         Levels\", BCP 14, RFC 2119, March 1997.\n   [4]   Crocker,\
    \ D., Ed. and P. Overell, \"Augmented BNF for Syntax\n         Specifications:\
    \ ABNF\", RFC 4234, October 2005.\n   [5]   Yergeau, F., \"UTF-8, a transformation\
    \ format of ISO 10646\", STD\n         63, RFC 3629, November 2003.\n   [6]  \
    \ Handley, M. and V. Jacobson, \"SDP: Session Description\n         Protocol\"\
    , RFC 2327, April 1998.\n   [7]   Berners-Lee, T., Fielding, R., and L. Masinter,\
    \ \"Uniform\n         Resource Identifier (URI): Generic Syntax\", STD 66, RFC\
    \ 3986,\n         January 2005.\n   [8]   Narten, T. and H. Alvestrand, \"Guidelines\
    \ for Writing an IANA\n         Considerations Section in RFCs\", BCP 26, RFC\
    \ 2434, October\n         1998.\n   [9]   Alvestrand, H., \"Tags for the Identification\
    \ of Languages\", BCP\n         47, RFC 3066, January 2001.\n   [10]  Olson, S.,\
    \ Camarillo, G., and A. Roach, \"Support for IPv6 in\n         Session Description\
    \ Protocol (SDP)\", RFC 3266, June 2002.\n   [11]  Faltstrom, P., Hoffman, P.,\
    \ and A. Costello,\n         \"Internationalizing Domain Names in Applications\
    \ (IDNA)\", RFC\n         3490, March 2003.\n   [12]  Josefsson, S., \"The Base16,\
    \ Base32, and Base64 Data Encodings\",\n         RFC 3548, July 2003.\n"
- title: 12.2.  Informative References
  contents:
  - "12.2.  Informative References\n   [13]  Mills, D., \"Network Time Protocol (Version\
    \ 3) Specification,\n         Implementation\", RFC 1305, March 1992.\n   [14]\
    \  Handley, M., Perkins, C., and E. Whelan, \"Session Announcement\n         Protocol\"\
    , RFC 2974, October 2000.\n   [15]  Rosenberg, J., Schulzrinne, H., Camarillo,\
    \ G., Johnston, A.,\n         Peterson, J., Sparks, R., Handley, M., and E. Schooler,\
    \ \"SIP:\n         Session Initiation Protocol\", RFC 3261, June 2002.\n   [16]\
    \  Schulzrinne, H., Rao, A., and R. Lanphier, \"Real Time Streaming\n        \
    \ Protocol (RTSP)\", RFC 2326, April 1998.\n   [17]  Rosenberg, J. and H. Schulzrinne,\
    \ \"An Offer/Answer Model with\n         Session Description Protocol (SDP)\"\
    , RFC 3264, June 2002.\n   [18]  Camarillo, G., Eriksson, G., Holler, J., and\
    \ H. Schulzrinne,\n         \"Grouping of Media Lines in the Session Description\
    \ Protocol\n         (SDP)\", RFC 3388, December 2002.\n   [19]  Schulzrinne,\
    \ H., Casner, S., Frederick, R., and V. Jacobson,\n         \"RTP: A Transport\
    \ Protocol for Real-Time Applications\", STD 64,\n         RFC 3550, July 2003.\n\
    \   [20]  Schulzrinne, H. and S. Casner, \"RTP Profile for Audio and Video\n \
    \        Conferences with Minimal Control\", STD 65, RFC 3551, July 2003.\n  \
    \ [21]  Casner, S., \"Session Description Protocol (SDP) Bandwidth\n         Modifiers\
    \ for RTP Control Protocol (RTCP) Bandwidth\", RFC 3556,\n         July 2003.\n\
    \   [22]  Huitema, C., \"Real Time Control Protocol (RTCP) attribute in\n    \
    \     Session Description Protocol (SDP)\", RFC 3605, October 2003.\n   [23] \
    \ Baugher, M., McGrew, D., Naslund, M., Carrara, E., and K.\n         Norrman,\
    \ \"The Secure Real-time Transport Protocol (SRTP)\", RFC\n         3711, March\
    \ 2004.\n   [24]  Rosenberg, J., Schulzrinne, H., and P. Kyzivat, \"Indicating\n\
    \         User Agent Capabilities in the Session Initiation Protocol\n       \
    \  (SIP)\", RFC 3840, August 2004.\n   [25]  Westerlund, M., \"A Transport Independent\
    \ Bandwidth Modifier for\n         the Session Description Protocol (SDP)\", RFC\
    \ 3890, September\n         2004.\n   [26]  International Telecommunication Union,\
    \ \"H.323 extended for\n         loosely coupled conferences\", ITU Recommendation\
    \ H.332,\n         September 1998.\n   [27]  Arkko, J., Carrara, E., Lindholm,\
    \ F., Naslund, M., and K.\n         Norrman, \"Key Management Extensions for Session\
    \ Description\n         Protocol (SDP) and Real Time Streaming Protocol (RTSP)\"\
    , RFC\n         4567, July 2006.\n   [28]  Andreasen, F., Baugher, M., and D.\
    \ Wing, \"Session Description\n         Protocol (SDP) Security Descriptions for\
    \ Media Streams\", RFC\n         4568, July 2006.\n   [29]  Resnick, P., \"Internet\
    \ Message Format\", RFC 2822, April 2001.\n   [30]  Hinden, R. and S. Deering,\
    \ \"IP Version 6 Addressing\n         Architecture\", RFC 2373, July 1998.\n \
    \  [31]  Freed, N. and J. Klensin, \"Media Type Specifications and\n         Registration\
    \ Procedures\", BCP 13, RFC 4288, December 2005.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Mark Handley\n   University College London\n   Department\
    \ of Computer Science\n   Gower Street\n   London  WC1E 6BT\n   UK\n   EMail:\
    \ M.Handley@cs.ucl.ac.uk\n   Van Jacobson\n   Packet Design\n   2465 Latham Street\n\
    \   Mountain View, CA  94040\n   USA\n   EMail: van@packetdesign.com\n   Colin\
    \ Perkins\n   University of Glasgow\n   Department of Computing Science\n   17\
    \ Lilybank Gardens\n   Glasgow  G12 8QQ\n   UK\n   EMail: csp@csperkins.org\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
