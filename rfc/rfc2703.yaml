- title: __initial_text__
  contents:
  - '           Protocol-independent Content Negotiation Framework

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   A number of Internet application protocols have a need to provide\n\
    \   content negotiation for the resources with which they interact.  MIME\n  \
    \ media types [1,2] provide a standard method for handling one major\n   axis\
    \ of variation, but resources also vary in ways which cannot be\n   expressed\
    \ using currently available MIME headers.\n   This memo sets out terminology,\
    \ an abstract framework and goals for\n   protocol-independent content negotiation,\
    \ and identifies some\n   technical issues which may need to be addressed.\n \
    \  The abstract framework does not attempt to specify the content\n   negotiation\
    \ process, but gives an indication of the anticipated scope\n   and form of any\
    \ such specification.  The goals set out the desired\n   properties of a content\
    \ negotiation mechanism.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n     4.1 Generic framework and metadata goals ................12\n\
    \     4.2 Protocol-specific deployment goals ..................12\n   5. Technical\
    \ issues........................................14\n     5.1 Non-message resource\
    \ transfers ......................14\n     5.2 End-to-end vs hop-by-hop negotiations\
    \ ...............14\n     5.3 Third-party negotiation .............................15\n\
    \     5.4 Use of generic directory and resolution services ....15\n     5.5 Billing\
    \ issues ......................................15\n     5.6 Performance considerations\
    \ ..........................15\n     5.7 Confidence levels in negotiated options\
    \ .............16\n   6. Security Considerations.................................16\n\
    \     6.1 Privacy .............................................16\n     6.2 Denial\
    \ of service attacks ...........................17\n     6.3 Mailing list interactions\
    \ ...........................17\n     6.4 Use of security services ............................17\n\
    \     6.5 Disclosure of security weaknesses ...................18\n        6.5.1\
    \ User agent identification.......................18\n        6.5.2 Macro viruses...................................18\n\
    \        6.5.3 Personal vulnerability..........................18\n     6.6 Problems\
    \ of negotiating security ....................18\n   7. Acknowledgements........................................18\n\
    \   8. References..............................................19\n   9. Author's\
    \ Address........................................19\n   10. Full Copyright Statement...............................20\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   A number of Internet application protocols have a need to\
    \ provide\n   content negotiation for the resources with which they interact.\n\
    \   While MIME media types [1, 2] provide a standard method for handling\n   one\
    \ major axis of variation, resources also vary in ways which cannot\n   be expressed\
    \ using currently available MIME headers.\n   This memo sets out terminology,\
    \ a framework and some goals for a\n   protocol-independent content negotiation\
    \ framework, and identifies\n   some technical issues which may need to be addressed.\n\
    \   The framework does not attempt to specify the content negotiation\n   process;\
    \ rather it gives an indication of the anticipated scope and\n   form of any such\
    \ specifications.\n   The statement of goals is intended to set out the desired\
    \ properties\n   of a content negotiation framework, while trying to avoid any\n\
    \   assumption of the form that framework may take.\n"
- title: 1.1 Structure of this document
  contents:
  - "1.1 Structure of this document\n   The main part of this memo addresses four\
    \ main areas:\n   Section 2 defines some of the terms which are used with special\n\
    \   meaning.\n   Section 3 outlines a proposed framework for describing protocol-\n\
    \   independent content negotiation.\n   Section 4 describes various goals for\
    \ content negotiation.\n   Section 5 discusses some of the technical issues which\
    \ are raised by\n   this document, with cross-references to other work where appropriate.\n"
- title: 1.2 Discussion of this document
  contents:
  - "1.2 Discussion of this document\n   Discussion of this document should take place\
    \ on the content\n   negotiation and media feature registration mailing list hosted\
    \ by the\n   Internet Mail Consortium (IMC).\n   Please send comments regarding\
    \ this document to:\n      ietf-medfree@imc.org\n   To subscribe to this list,\
    \ send a message with the body 'subscribe'\n   to \"ietf-medfree-request@imc.org\"\
    .\n   To see what has gone on before you subscribed, please see the mailing\n\
    \   list archive at:\n      http://www.imc.org/ietf-medfree/\n"
- title: 2. Terminology and definitions
  contents:
  - "2. Terminology and definitions\n   This section introduces a number of terms\
    \ which are used with\n   specific meaning in the content negotiation documents.\
    \ Many of these\n   have been copied and adapted from [5].\n   The terms are listed\
    \ in alphabetical order.\n   Capability\n             An attribute of a sender\
    \ or receiver (often the receiver)\n             which indicates an ability to\
    \ generate or process a\n             particular type of message content.\n  \
    \ Characteristic\n             Some description of a sender or receiver which\
    \ indicates a\n             possible capability or preference.\n   Choice message\n\
    \             A choice message returns a representation of some selected\n   \
    \          variant or variants, together with the variant list of the\n      \
    \       negotiable resource. It can be generated when the sender\n           \
    \  has sufficient information to select a variant for the\n             receiver,\
    \ and also requires to inform the receiver about\n             the other variants\
    \ available.\n   Connected mode\n             A mode of operation in which sender\
    \ and receiver are\n             directly connected, and hence are not prevented\
    \ from\n             definitively determining each other's capabilities.  (See\n\
    \             also: Session mode)\n   Content feature\n             (see Feature)\n\
    \   Content negotiation\n             An exchange of information (negotiation\
    \ metadata) which\n             leads to selection of the appropriate representation\n\
    \             (variant) when transferring a data resource.\n   Data resource\n\
    \             A network data object that can be transferred.  Data\n         \
    \    resources may be available in multiple representations\n             (e.g.\
    \ multiple languages, data formats, size, resolutions)\n             or vary in\
    \ other ways.  (See also: Message, Resource)\n   Feature   A piece of information\
    \ about the media handling properties\n             of a message passing system\
    \ component or of a data\n             resource.\n   Feature tag\n           \
    \  A name that identifies a \"feature\".\n   Feature set\n             Information\
    \ about a sender, recipient, data file or other\n             participant in a\
    \ message transfer which describes the set\n             of features that it can\
    \ handle.\n             Where a 'feature' describes a single identified attribute\n\
    \             of a resource, a 'feature set' describes full set of\n         \
    \    possible attributes.\n   List message\n             A list message sends\
    \ the variant list of a negotiable\n             resource, but no variant data.\
    \  It can be generated when\n             the sender does not want to, or is not\
    \ allowed to, send a\n             particular variant.\n   Media feature\n   \
    \          information that indicates facilities assumed to be\n             available\
    \ for the message content to be properly rendered\n             or otherwise presented.\
    \  Media features are not intended to\n             include information that affects\
    \ message transmission.\n   Message   Data which is transmitted from a sender\
    \ to a receiver,\n             together with any encapsulation which may be applied.\n\
    \             Where a data resource is the original data which may be\n      \
    \       available in a number of representations, a message\n             contains\
    \ those representation(s) which are actually\n             transmitted. Negotiation\
    \ metadata is not generally\n             considered to be part of a message.\n\
    \             Message data is distinguished from other transmitted data\n    \
    \         by the fact that its content is fully determined before the\n      \
    \       start of transmission.\n   Negotiated content\n             Message content\
    \ which has been selected by content\n             negotiation.\n   Negotiation\n\
    \             (See: content negotiation)\n   Negotiable resource\n           \
    \  A data resource which has multiple representations\n             (variants)\
    \ associated with it. Selection of an appropriate\n             variant for transmission\
    \ in a message is accomplished by\n             content negotiation between the\
    \ sender and recipient.\n   Negotiation metadata\n             Information which\
    \ is exchanged between the sender and\n             receiver of a message by content\
    \ negotiation in order to\n             determine the variant which should be\
    \ transferred.\n   Neighbouring variant\n             A particular representation\
    \ (variant) of a variant resource\n             which can safely be assumed to\
    \ be subject to the same\n             access controls as the variant resource\
    \ itself. Not all\n             variants of a given variant resource are necessarily\n\
    \             neighbouring variants. The fact that a particular variant\n    \
    \         is or is not a neighbouring variant has implications for\n         \
    \    security considerations when determining whether that\n             variant\
    \ can be sent to a receiver in place of the\n             corresponding variant\
    \ resource. It may also have\n             implications when determining whether\
    \ or not a sender is\n             authorized to transmit a particular variant.\n\
    \   Preference\n             An attribute of a sender or receiver (often the receiver)\n\
    \             which indicates an preference to generate or process one\n     \
    \        particular type of message content over another, even if\n          \
    \   both are possible.\n   Receiver  A system component (device or program) which\
    \ receives a\n             message.\n   Receiver-initiated transmission\n    \
    \         A message transmission which is requested by the eventual\n        \
    \     receiver of the message. Sometimes described as 'pull'\n             messaging.\
    \ E.g. an HTTP GET operation.\n   Resource  A document, data file or facility\
    \ which is accessed or\n             transmitted across a network.  (See also:\
    \ Data resource)\n   Sender    A system component (device or program) which transmits\
    \ a\n             message.\n   Sender-initiated transmission\n             A message\
    \ transmission which is invoked by the sender of\n             the message. Sometimes\
    \ described as 'push' messaging.  E.g.\n             sending an e-mail.\n   Session\
    \ mode\n             A mode of message transmission in which confirmation of\n\
    \             message delivery is received by the sender in the same\n       \
    \      application session (usually the same transport connection)\n         \
    \    that is used to transmit the message.  (See also: connected\n           \
    \  mode, store and forward mode)\n   Store and forward mode\n             A mode\
    \ of message transmission in which the message is held\n             in storage\
    \ for an unknown period of time on message\n             transfer agents before\
    \ being delivered.\n   Syntax    The form used to express some value;  especially\
    \ the format\n             used to express a media feature value, or a feature\
    \ set.\n             (See also: feature value, feature set, type.)\n   Transmission\n\
    \             The process of transferring a message from a sender to a\n     \
    \        receiver.  This may include content negotiation.\n   Type      The range\
    \ of values that can be indicated by some\n             identifier of variable;\
    \  especially the range of values\n             that can be indicated by a feature\
    \ tag.  (See also:\n             feature, syntax.)\n             NOTE:  this differs\
    \ from usage employed by the LDAP/X.500\n             directory community, who\
    \ use the terms \"attribute type\" to\n             describe an identifier for\
    \ a value in a directory entry,\n             and \"attribute syntax\" to describe\
    \ a range of allowed\n             attribute values.\n   User agent\n        \
    \     A system component which prepares and transmits a message,\n           \
    \  or receives a message and displays, prints or otherwise\n             processes\
    \ its contents.\n   Variant   One of several possible representations of a data\n\
    \             resource.\n   Variant list\n             A list containing variant\
    \ descriptions, which can be bound\n             to a negotiable resource.\n \
    \  Variant description\n             A machine-readable description of a variant\
    \ resource,\n             usually found in a variant list.  A variant description\n\
    \             contains a variant resource identifier and various\n           \
    \  attributes which describe properties of the variant.\n   Variant resource\n\
    \             A data resource for which multiple representations\n           \
    \  (variants) are available.\n"
- title: 3. Framework
  contents:
  - "3. Framework\n   For the purposes of this document, message transmission protocol\n\
    \   capabilities are explicitly disregarded:  it is presumed that these\n   will\
    \ be dealt with separately by some orthogonal mechanism.\n   Content negotiation\
    \ covers three elements:\n   1. expressing the capabilities of the sender and\
    \ the data resource to\n      be transmitted (as far as a particular message is\
    \ concerned),\n   2. expressing the capabilities of a receiver (in advance of\
    \ the\n      transmission of the message), and\n   3. a protocol by which capabilities\
    \ are exchanged.\n   These negotiation elements are addressed by a negotiation\
    \ framework\n   incorporating a number of design elements with dependencies shown:\n\
    \             [ Abstract  ]               [   Abstract   ]\n             [negotiation]\
    \               [ negotiation  ]\n             [  process  ]               [ \
    \  metadata   ]\n                   |                            |\n         \
    \          V                            V\n             [Negotiation]        \
    \       [ Negotiation  ]\n             [ protocol  ]               [   metadata\
    \   ]\n             [  binding  ]               [representation]\n           \
    \        |                            |\n                    -------         \
    \     -------\n                           |            |\n                   \
    \        V            V\n                       [Application protocol]\n     \
    \                  [   incorporating    ]\n                       [content negotiation\
    \ ]\n   Within this overall framework, expressing the capabilities of sender\n\
    \   and receiver is covered by negotiation metadata.  The protocol for\n   exchanging\
    \ capabilities is covered by the abstract negotiation\n   framework and its binding\
    \ to a specific application protocol.\n   Application protocol independence is\
    \ addressed by separating the\n   abstract negotiation process and metadata from\
    \ concrete\n   representations and protocol bindings.\n"
- title: 3.1 Abstract framework for content negotiation
  contents:
  - "3.1 Abstract framework for content negotiation\n   The negotiation framework\
    \ provides for an exchange of negotiation\n   metadata between the sender and\
    \ receiver of a message which leads to\n   determination of a data format which\
    \ the sender can provide and the\n   recipient can process.  Thus, there are three\
    \ main elements which are\n   the subjects of the negotiation process and whose\
    \ capabilities are\n   described by the negotiation metadata: the sender, the\
    \ transmitted\n   data file format and the receiver.\n   The life of a data resource\
    \ may be viewed as:\n            (C)     (T)     (F)\n        [A]-->--[S]-->--[R]-->--[U]\n\
    \   where:\n     [A] = author of document\n     (C) = original document content\n\
    \     [S] = message sending system\n     (T) = transmitted data file (representation\
    \ of (C))\n     [R] = receiving system\n     (F) = formatted (rendered) document\
    \ data (presentation of (C))\n     [U] = user or consumer of a document\n   Here,\
    \ it is [S] and [R] who exchange negotiation metadata to decide\n   the form of\
    \ (T), so these elements are the focus of our attention.\n   Negotiation metadata\
    \ provided by [S] would take account of available\n   document content (C) (e.g.\
    \ availability of resource variants) as well\n   as its own possible ability to\
    \ offer that content in a variety of\n   formats.\n   Negotiation metadata provided\
    \ by [R] would similarly take account of\n   the needs and preferences of its\
    \ user [U] as well as its own\n   capabilities to process and render received\
    \ data.\n"
- title: 3.1.1 The negotiation process
  contents:
  - "3.1.1 The negotiation process\n   Negotiation between the sender [S] and the\
    \ receiver [R] consists of a\n   series of negotiation metadata exchanges that\
    \ proceeds until either\n   party determines a specific data file (T) to be transmitted.\
    \  If the\n   sender makes the final determination, it can send the file directly.\n\
    \   Otherwise the receiver must communicate its selection to the sender\n   who\
    \ sends the indicated file.\n   This process implies an open-ended exchange of\
    \ information between\n   sender and receiver.  Not every implementation is expected\
    \ to\n   implement this scheme with the full generality thus implied.  Rather,\n\
    \   it is expected that every concrete negotiation can be viewed as a\n   subset\
    \ of this process.\n   For example, Transparent Content Negotiation (TCN) [5]\
    \ uses a model\n   in which one of the following happens:\n   o  The recipient\
    \ requests a resource with no variants, in which case\n      the sender simply\
    \ sends what is available.\n   o  A variant resource is requested, in which case\
    \ the server replies\n      with a list of available variants, and the client\
    \ chooses one\n      variant from those offered.\n   o  The recipient requests\
    \ a variant resource, and also provides\n      negotiation metadata (in the form\
    \ 'Accept' headers) which allows\n      the server to make a choice on the client's\
    \ behalf.\n   Another, simpler example is that of fax negotiation:  in this case\n\
    \   the intended recipient declares its capabilities, and the sender\n   chooses\
    \ a message variant to match.\n   Each of these can be viewed as a particular\
    \ case of the general\n   negotiation process described above.  Similar observations\
    \ can be\n   made regarding the use of directory services or MIME '\n   Multipart/alternative'\
    \ in conjunction with e-mail message\n   transmission.\n"
- title: 3.2 Abstract model for negotiation metadata
  contents:
  - "3.2 Abstract model for negotiation metadata\n   A simple but general negotiation\
    \ framework has been described, which\n   is based on the exchange of negotiation\
    \ metadata between sender and\n   recipient.  The mechanism by which data is exchanged\
    \ is not important\n   to the abstract negotiation framework, but something does\
    \ need to be\n   said about the general form of the metadata.\n   The terminology\
    \ and definitions section of this document places\n   constraints on the form\
    \ of negotiation metadata, and the descriptions\n   that follow should be read\
    \ in conjunction with the definitions to\n   which they refer.\n   Negotiation\
    \ metadata needs to encompass the following elements:\n   o  Media feature: a\
    \ way to describe attributes of a data resource.\n   o  Feature set: a description\
    \ of a range of possible media feature\n      combinations which can be:  offered\
    \ by a sender;  represented by a\n      data file format;  or processed by a receiver.\n\
    \   o  One or more naming schemes for labelling media features and\n      feature\
    \ sets.  These should be backed up by some kind of\n      registration process\
    \ to ensure uniqueness of names and to\n      encourage a common vocabulary for\
    \ commonly used features.\n   o  A framework of data types for media features,\
    \ indicating the range\n      and properties of value types which can be represented.\n\
    \   o  A way to combine media features into feature sets, capable of\n      expressing\
    \ feature dependencies within a feature set (e.g.\n      640x480 pixel size and\
    \ 256 colours, or 800x600 pixel size and 16\n      colours).\n   o  Some way to\
    \ rank feature sets based upon sender and receiver\n      preferences for different\
    \ feature values.\n"
- title: 3.3 Text representation for negotiation metadata
  contents:
  - "3.3 Text representation for negotiation metadata\n   A concrete textual representation\
    \ for media feature values and\n   feature set descriptions would provide a common\
    \ vocabulary for\n   feature data in text-based protocols like HTTP and SMTP.\n\
    \   In defining a textual representation, the issue of allowable\n   character\
    \ sets needs to be addressed.  Whether or not negotiation\n   metadata needs to\
    \ support a full gamut of international characters\n   will depend upon the framework\
    \ of data types adopted for media\n   features.  As negotiation metadata would\
    \ be used as a protocol\n   element (not directly visible to the user) rather\
    \ than part of the\n   message content, support for extended character sets may\
    \ be not\n   required.\n   A textual representation for negotiation metadata would\
    \ imply a\n   textual representation for media feature names, and also for\n \
    \  expressions of the media feature combining algebra.\n"
- title: 3.4 ASN.1 description of negotiation metadata
  contents:
  - "3.4 ASN.1 description of negotiation metadata\n   For use with non-text-based\
    \ protocols, an ASN.1 description and\n   encoding designation for negotiation\
    \ metadata could be helpful for\n   incorporating the common negotiation framework\
    \ into ASN.1-derived\n   protocols like X.400, X.500, LDAP and SNMP.\n   An ASN.1\
    \ description of negotiation metadata formats suggests that\n   separate media\
    \ feature naming scheme based on ISO object identifiers\n   would be valuable.\n"
- title: 3.5 Protocol binding guidelines
  contents:
  - "3.5 Protocol binding guidelines\n   Specific protocol bindings will be needed\
    \ to use the abstract\n   framework for negotiation.\n   Details of protocol bindings\
    \ would be beyond the scope of this work,\n   but guidelines maybe not.  (SASL\
    \ might provide a useful model here.)\n"
- title: 4. Goals
  contents:
  - "4. Goals\n   These goals are presented in two categories:\n   1. Negotiation\
    \ framework and metadata goals which address the broad\n      goals of negotiation\
    \ in a protocol-independent fashion.\n   2. Specific goals which relate to the\
    \ deployment of negotiation in\n      the context of a specific protocol (e.g.\
    \ relation to HTTP protocol\n      operations, cache interactions, security issues,\
    \ existing HTTP\n      negotiation mechanisms, application to variant selection,\
    \ etc.).\n      These would be addressed by a specific protocol binding for the\n\
    \      negotiation framework.\n"
- title: 4.1 Generic framework and metadata goals
  contents:
  - "4.1 Generic framework and metadata goals\n   o  A common vocabulary for designating\
    \ features and feature sets.\n   o  A stable reference for commonly used features.\n\
    \   o  An extensible framework, to allow rapid and easy adoption of new\n    \
    \  features.\n   o  Permit an indication of quality or preference.\n   o  Capture\
    \ dependencies between feature values\n   o  A uniform framework mechanism for\
    \ exchanging negotiation metadata\n      should be defined that can encompass\
    \ existing negotiable features\n      and is extensible to future (unanticipated)\
    \ features.\n   o  Efficient negotiation should be possible in both receiver\n\
    \      initiated ('pull') and sender initiated ('push') message\n      transfers.\n\
    \   o  The structure of the negotiation procedure framework should stand\n   \
    \   independently of any particular message transfer protocol.\n   o  Be capable\
    \ of addressing the role of content negotiation in\n      fulfilling the communication\
    \ needs of less able computer users.\n"
- title: 4.2 Protocol-specific deployment goals
  contents:
  - "4.2 Protocol-specific deployment goals\n   o  A negotiation should generally\
    \ result in identification of a\n      mutually acceptable form of message data\
    \ to be transferred.\n   o  If capabilities are being sent at times other than\
    \ the time of\n      message transmission, then they should include sufficient\n\
    \      information to allow them to be verified and authenticated.\n   o  A capability\
    \ assertion should clearly identify the party to whom\n      the capabilities\
    \ apply, the party to whom they are being sent, and\n      some indication of\
    \ their date/time or range of validity.  To be\n      secure, capability assertions\
    \ should be protected against\n      interception and substitution of valid data\
    \ by invalid data.\n   o  A request for capability information, if sent other\
    \ than in\n      response to delivery of a message, should clearly identify the\n\
    \      requester, the party whose capabilities are being requested, and\n    \
    \  the time of the request.  It should include sufficient information\n      to\
    \ allow the request to be authenticated.\n   o  In the context of a given application,\
    \ content negotiation may use\n      one or several methods for transmission,\
    \ storage, or distribution\n      of capabilities.\n   o  The negotiation mechanism\
    \ should include a standardized method for\n      associating features with resource\
    \ variants.\n   o  Negotiation should provide a way to indicate provider and\n\
    \      recipient preferences for specific features.\n   o  Negotiation should\
    \ have the minimum possible impact on network\n      resource consumption, particularly\
    \ in terms of bandwidth and\n      number of protocol round-trips required.\n\
    \   o  Systems should protect the privacy of users' profiles and\n      providers'\
    \ inventories of variants.\n   o  Protocol specifications should identify and\
    \ permit mechanisms to\n      verify the reasonable accuracy of any capability\
    \ data provided.\n   o  Negotiation must not significantly jeopardize the overall\n\
    \      operation or integrity of any system in the face of erroneous\n      capability\
    \ data, whether accidentally or maliciously provided.\n   o  Intelligent gateways,\
    \ proxies, or caches should be allowed to\n      participate in the negotiation.\n\
    \   o  Negotiation metadata should be regarded as cacheable, and explicit\n  \
    \    cache control mechanisms provided to forestall the introduction of\n    \
    \  ad-hoc cache-busting techniques.\n   o  Automatic negotiation should not pre-empt\
    \ a user's ability to\n      choose a document format from those available.\n"
- title: 5. Technical issues
  contents:
  - '5. Technical issues

    '
- title: 5.1 Non-message resource transfers
  contents:
  - "5.1 Non-message resource transfers\n   The ideas for generic content negotiation\
    \ have been conceived and\n   developed in the context of message-oriented data\
    \ transmissions.\n   Message data is defined elsewhere as a data whose entire\
    \ content is\n   decided before the start of data transmission.  The following\
    \ are\n   examples of non-message data transfers.\n   o  streamed data,\n   o\
    \  interactive computations,\n   o  real-time data acquisition,\n   Does a proposed\
    \ approach to negotiation based on message data\n   reasonably extend to streamed\
    \ data (e.g. data whose content is not\n   fully determined by the time the first\
    \ data items are transmitted)?\n   It may be that the metadata will be applicable,\
    \ but the abstract\n   negotiation process framework may be insufficient to these\
    \ more\n   demanding circumstances.\n"
- title: 5.2 End-to-end vs hop-by-hop negotiations
  contents:
  - "5.2 End-to-end vs hop-by-hop negotiations\n   Could this distinction place any\
    \ special demands or constraints on a\n   generic negotiation framework, or is\
    \ this simply a protocol issue?\n   o  End-to-end negotiation gives greatest confidence\
    \ in the outcome.\n   o  Hop-by-hop may have advantages in a network of occasionally-\n\
    \      connected systems, but will place additional demands on\n      intervening\
    \ message transmission agents.\n   Hop-by-hop negotiation implies that negotiation\
    \ responses are not\n   necessarily a definitive indication of an endpoint system's\n\
    \   capabilities.  This in turn implies a possible need for time-to-live\n   and\
    \ re-verification mechanisms to flush out stale negotiation data.\n   Note that\
    \ one of the stated goals is to allow proxies and caches to\n   participate in\
    \ the negotiation process, as appropriate.\n"
- title: 5.3 Third-party negotiation
  contents:
  - "5.3 Third-party negotiation\n   An extension of the hop-by-hop vs. end-to-end\
    \ negotiation theme is to\n   consider the implications of allowing any system\
    \ other than an\n   endpoint participant in the message transmission to supply\n\
    \   negotiation metadata.\n   Any use of a third party in the negotiation process\
    \ inevitably\n   increases the possibilities for introducing errors into the\n\
    \   negotiation metadata.\n   One particular example of a third party participant\
    \ in a negotiation\n   process that is frequently suggested is the use of a directory\n\
    \   service using LDAP or similar protocols.  What additional steps need\n   to\
    \ be taken to ensure reasonable reliability of negotiation metadata\n   supplied\
    \ by this means?\n"
- title: 5.4 Use of generic directory and resolution services
  contents:
  - "5.4 Use of generic directory and resolution services\n   It is clearly helpful\
    \ to use existing protocols such as LDAP to\n   exchange content negotiation metadata.\n\
    \   To achieve this, it be necessary to define directory or other schema\n   elements\
    \ which are specific to content negotiation.  For example, an\n   LDAP attribute\
    \ type for a media feature set.\n"
- title: 5.5 Billing issues
  contents:
  - "5.5 Billing issues\n   Negotiation may raise some billing-related issues in some\
    \ contexts\n   because it potentially incurs a two-way exchange of data not\n\
    \   necessarily completed during a single connection.  There is an issue\n   of\
    \ who pays for return messages, etc., in a non-connected environment\n   like\
    \ e-mail or fax.\n"
- title: 5.6 Performance considerations
  contents:
  - "5.6 Performance considerations\n   Negotiation can impact performance in both\
    \ positive and negative\n   ways.\n   The obvious negative impact arises from\
    \ the exchange of additional\n   data which necessarily consumes some additional\
    \ bandwidth.  There is\n   also an issue of round-trip or third-party query delays\
    \ while\n   negotiation metadata is being exchanged before transmission of the\n\
    \   message itself is commenced.\n   Over the Internet, there are some bandwidth/latency\
    \ trade-offs which\n   can be made. For example, in Internet e-mail the MIME type\
    \ '\n   multipart/alternative' can be used to send multiple versions of a\n  \
    \ resource:  this preserves latency by using additional bandwidth to\n   send\
    \ a greater volume of data.  On the other hand, HTTP [7] suggests\n   a negotiation\
    \ mechanism which preserves bandwidth at the cost of\n   introducing a round-trip\
    \ delay (section 12.2, Agent-driven\n   negotiation).\n   To set against the negative\
    \ performance impact of content\n   negotiation, it is to be hoped that overall\
    \ network efficiency is to\n   be improved if it results in the most useful data\
    \ format being\n   delivered to its intended recipient, first time, almost every\
    \ time.\n"
- title: 5.7 Confidence levels in negotiated options
  contents:
  - "5.7 Confidence levels in negotiated options\n   In some cases (e.g. when there\
    \ has been a direct exchange of\n   information with the remote system) the communicating\
    \ parties will\n   have a high degree of confidence in the outcome of a negotiation.\n\
    \   Here, a data exchange can be performed without need for subsequent\n   confirmation\
    \ that the options used were acceptable.\n   In other cases, the options will\
    \ be a best-guess, and it may be\n   necessary to make provision for parties to\
    \ reject the options\n   actually used in preference for some other set.\n   This\
    \ consideration is likely to interact with performance\n   considerations.\n \
    \  A useful pattern, adopted by TCN [5], is to define a negotiation\n   procedure\
    \ which guarantees a correct outcome.  This forms the\n   foundation for a procedure\
    \ which attempts to use easily-obtained but\n   less reliable information in an\
    \ attempt to optimize the negotiation\n   process but that contains checks to\
    \ guarantee the final result will\n   be the same as would have been obtained\
    \ by the full negotiation\n   procedure.  Such procedures sometimes have to resort\
    \ to the original\n   \"full cycle\" negotiation procedure, but in a majority\
    \ of cases are\n   expected to reach their conclusion by an optimized route.\n"
- title: 6. Security Considerations
  contents:
  - "6. Security Considerations\n   The purposes of this section is to identify and\
    \ catalogue some\n   security issues that feature negotiation protocols should\
    \ consider.\n"
- title: 6.1 Privacy
  contents:
  - "6.1 Privacy\n   Privacy may be adversely affected by:\n   o  Unintended disclosure\
    \ of personal information.\n   o  Spoofed requests for negotiation data simply\
    \ for the purposes of\n      gathering information, and not as part of a bona\
    \ fide message\n      transmission.\n"
- title: 6.2 Denial of service attacks
  contents:
  - "6.2 Denial of service attacks\n   Service denial may be caused by:\n   o  Injection\
    \ of false negotiation data.\n   o  Excessive requests for negotiation data\n"
- title: 6.3 Mailing list interactions
  contents:
  - "6.3 Mailing list interactions\n   Content negotiation with final recipients is\
    \ somewhat at odds with\n   normal practice for maintaining lists for redistribution\
    \ of Internet\n   mail.\n   It may be appropriate for a sender to negotiate data\
    \ formats with a\n   list manager, and for a list manager to negotiate with message\n\
    \   recipients.  But the common practice of keeping confidential the\n   identities\
    \ and addresses of mailing list subscribers suggests that\n   end-to-end negotiation\
    \ through a mailing list is not consistent with\n   good security practice.\n"
- title: 6.4 Use of security services
  contents:
  - "6.4 Use of security services\n   Protocols that employ security services for\
    \ message transfer should\n   also apply those services to content negotiation:\n\
    \   o  Authenticated requests for negotiation metadata provide a means\n     \
    \ for a potential recipient to moderate the distribution of media\n      capability\
    \ information.\n   o  Authentication of negotiation metadata provides a means\
    \ for\n      potential message senders to avoid using incorrect information\n\
    \      injected by some other party.\n   o  Encryption of negotiation data may\
    \ help to prevent disclosure of\n      sensitive capability-related information\
    \ to snoopers.\n   o  Conducting a negotiation exchange over an authenticated\
    \ or\n      encrypted protocol session (e.g. SASL), transport connection or\n\
    \      network path (e.g. TLS, IPSEC) can provide for mutual\n      authentication\
    \ of both parties in an exchange of negotiation data.\n"
- title: 6.5 Disclosure of security weaknesses
  contents:
  - '6.5 Disclosure of security weaknesses

    '
- title: 6.5.1 User agent identification
  contents:
  - "6.5.1 User agent identification\n   Disclosure of capability information may\
    \ allow a potential attacker\n   to deduce what message handling agent is used,\
    \ and hence may lead to\n   the exploitation of known security weaknesses in that\
    \ agent.\n"
- title: 6.5.2 Macro viruses
  contents:
  - "6.5.2 Macro viruses\n   Macro viruses are a widespread problem among applications\
    \ such as\n   word processors and spreadsheets.  Knowing which applications a\n\
    \   recipient employs (e.g. by file format) may assist in a malicious\n   attack.\
    \  However, such viruses can be spread easily without such\n   knowledge by sending\
    \ multiple messages, where each message infects a\n   specific application version.\n"
- title: 6.5.3 Personal vulnerability
  contents:
  - "6.5.3 Personal vulnerability\n   One application of content negotiation is to\
    \ enable the delivery of\n   message content that meets specific requirements\
    \ of less able people.\n   Disclosure of this information may make such people\
    \ potential targets\n   for attacks that play on their personal vulnerabilities.\n"
- title: 6.6 Problems of negotiating security
  contents:
  - "6.6 Problems of negotiating security\n   If feature negotiation is used to decide\
    \ upon security-related\n   features to be used, some special problems may be\
    \ created if the\n   negotiation procedure can be subverted to prevent the selection\
    \ of\n   effective security procedures.\n   The security considerations section\
    \ of GSS-API negotiation [8]\n   discusses the use of integrity protecting mechanisms\
    \ with security\n   negotiation.\n"
- title: 7. Acknowledgements
  contents:
  - "7. Acknowledgements\n   Some material in this memo has been derived from earlier\
    \ memos by\n   Koen Holtman, Andrew Mutz, Ted Hardie, Larry Masinter, Dan Wing,\
    \ Neil\n   Joffe.  Matters relating to the importance and relevance of content\n\
    \   negotiation to less-able users were raised by Al Gilman.\n   This memo has\
    \ also been informed by the debates of the IETF \"conneg\"\n   working group.\n"
- title: 8. References
  contents:
  - "8. References\n   [1]  Freed, N. and N. Borenstein, \"Multipurpose Internet Mail\n\
    \        Extensions (MIME) Part 1: Format of Internet message bodies\",\n    \
    \    RFC 2045, November 1996.\n   [2]  Freed, N. and N. Borenstein, \"Multipurpose\
    \ Internet Mail\n        Extensions (MIME) Part 2: Media Types\", RFC 2046, November\
    \ 1996.\n   [3]  Holtman, K., et al., \"The Alternates Header Field\", Work in\n\
    \        Progress.\n   [4]  Hardie, T., \"Scenarios for the Delivery of Negotiated\
    \ Content\",\n        Work in Progress.\n   [5]  Holtman, K. and A. Mutz, \"Transparent\
    \ Content Negotiation in\n        HTTP\", RFC 2295, March 1998.\n   [6]  Wing,\
    \ D., \"Indicating Supported Media Features Using Extensions\n        to DSN and\
    \ MDN\", RFC 2530, March 1999.\n   [7]  Fielding, R., Gettys, J., Mogul, J., Frytyk,\
    \ H. and T. Berners-\n        Lee, \"Hyptertext Transfer Protocol -- HTTP/1.1\"\
    , RFC 2068,\n        January 1997.\n   [8]  Blaize, E. and D. Pinkas, \"The Simple\
    \ and Protected GSS-API\n        Negotiation Mechanism\", RFC 2478, December 1998.\n"
- title: 9. Author's Address
  contents:
  - "9. Author's Address\n   Graham Klyne\n   5th Generation Messaging Ltd.  Content\
    \ Technologies Ltd.\n   5 Watlington Street            1220 Parkview, Arlington\
    \ Business Park\n   Nettlebed                      Theale\n   Henley-on-Thames,\
    \ RG9 5AB      Reading, RG7 4SA\n   United Kingdom                 United Kingdom.\n\
    \   Phone: +44 1491 641 641        +44 118 930 1300\n   Fax:   +44 1491 641 611\
    \        +44 118 930 1301\n   EMail: GK@ACM.ORG\n"
- title: 10. Full Copyright Statement
  contents:
  - "10. Full Copyright Statement\n   Copyright (C) The Internet Society (1999). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
