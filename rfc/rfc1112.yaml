- contents:
  - '                  Host Extensions for IP Multicasting

    '
  title: __initial_text__
- contents:
  - "1. STATUS OF THIS MEMO\n   This memo specifies the extensions required of a host
    implementation\n   of the Internet Protocol (IP) to support multicasting.  It
    is the\n   recommended standard for IP multicasting in the Internet.\n   Distribution
    of this memo is unlimited.\n"
  title: 1. STATUS OF THIS MEMO
- contents:
  - "2. INTRODUCTION\n   IP multicasting is the transmission of an IP datagram to
    a \"host\n   group\", a set of zero or more hosts identified by a single IP\n
    \  destination address.  A multicast datagram is delivered to all\n   members
    of its destination host group with the same \"best-efforts\"\n   reliability as
    regular unicast IP datagrams, i.e., the datagram is\n   not guaranteed to arrive
    intact at all members of the destination\n   group or in the same order relative
    to other datagrams.\n   The membership of a host group is dynamic; that is, hosts
    may join\n   and leave groups at any time.  There is no restriction on the\n   location
    or number of members in a host group.  A host may be a\n   member of more than
    one group at a time.  A host need not be a member\n   of a group to send datagrams
    to it.\n   A host group may be permanent or transient.  A permanent group has
    a\n   well-known, administratively assigned IP address.  It is the address,\n
    \  not the membership of the group, that is permanent; at any time a\n   permanent
    group may have any number of members, even zero.  Those IP\n   multicast addresses
    that are not reserved for permanent groups are\n   available for dynamic assignment
    to transient groups which exist only\n   as long as they have members.\n   Internetwork
    forwarding of IP multicast datagrams is handled by\n   \"multicast routers\" which
    may be co-resident with, or separate from,\n   internet gateways.  A host transmits
    an IP multicast datagram as a\n   local network multicast which reaches all immediately-neighboring\n
    \  members of the destination host group.  If the datagram has an IP\n   time-to-live
    greater than 1, the multicast router(s) attached to the\n   local network take
    responsibility for forwarding it towards all other\n   networks that have members
    of the destination group.  On those other\n   member networks that are reachable
    within the IP time-to-live, an\n   attached multicast router completes delivery
    by transmitting the\n   datagram as a local multicast.\n   This memo specifies
    the extensions required of a host IP\n   implementation to support IP multicasting,
    where a \"host\" is any\n   internet host or gateway other than those acting as
    multicast\n   routers.  The algorithms and protocols used within and between\n
    \  multicast routers are transparent to hosts and will be specified in\n   separate
    documents.  This memo also does not specify how local\n   network multicasting
    is accomplished for all types of network,\n   although it does specify the required
    service interface to an\n   arbitrary local network and gives an Ethernet specification
    as an\n   example.  Specifications for other types of network will be the\n   subject
    of future memos.\n"
  title: 2. INTRODUCTION
- contents:
  - "3. LEVELS OF CONFORMANCE\n   There are three levels of conformance to this specification:\n
    \     Level 0: no support for IP multicasting.\n   There is, at this time, no
    requirement that all IP implementations\n   support IP multicasting.  Level 0
    hosts will, in general, be\n   unaffected by multicast activity.  The only exception
    arises on some\n   types of local network, where the presence of level 1 or 2
    hosts may\n   cause misdelivery of multicast IP datagrams to level 0 hosts.  Such\n
    \  datagrams can easily be identified by the presence of a class D IP\n   address
    in their destination address field; they should be quietly\n   discarded by hosts
    that do not support IP multicasting.  Class D\n   addresses are described in section
    4 of this memo.\n      Level 1: support for sending but not receiving multicast
    IP\n      datagrams.\n   Level 1 allows a host to partake of some multicast-based
    services,\n   such as resource location or status reporting, but it does not allow\n
    \  a host to join any host groups.  An IP implementation may be upgraded\n   from
    level 0 to level 1 very easily and with little new code.  Only\n   sections 4,
    5, and 6 of this memo are applicable to level 1\n   implementations.\n      Level
    2: full support for IP multicasting.\n   Level 2 allows a host to join and leave
    host groups, as well as send\n   IP datagrams to host groups.  It requires implementation
    of the\n   Internet Group Management Protocol (IGMP) and extension of the IP and\n
    \  local network service interfaces within the host.  All of the\n   following
    sections of this memo are applicable to level 2\n   implementations.\n"
  title: 3. LEVELS OF CONFORMANCE
- contents:
  - "4. HOST GROUP ADDRESSES\n   Host groups are identified by class D IP addresses,
    i.e., those with\n   \"1110\" as their high-order four bits.  Class E IP addresses,
    i.e.,\n   those with \"1111\" as their high-order four bits, are reserved for\n
    \  future addressing modes.\n   In Internet standard \"dotted decimal\" notation,
    host group addresses\n   range from 224.0.0.0 to 239.255.255.255.  The address
    224.0.0.0 is\n   guaranteed not to be assigned to any group, and 224.0.0.1 is
    assigned\n   to the permanent group of all IP hosts (including gateways).  This
    is\n   used to address all multicast hosts on the directly connected\n   network.
    \ There is no multicast address (or any other IP address) for\n   all hosts on
    the total Internet.  The addresses of other well-known,\n   permanent groups are
    to be published in \"Assigned Numbers\".\n   Appendix II contains some background
    discussion of several issues\n   related to host group addresses.\n"
  title: 4. HOST GROUP ADDRESSES
- contents:
  - "5. MODEL OF A HOST IP IMPLEMENTATION\n   The multicast extensions to a host IP
    implementation are specified in\n   terms of the layered model illustrated below.
    \ In this model, ICMP\n   and (for level 2 hosts) IGMP are considered to be implemented
    within\n   the IP module, and the mapping of IP addresses to local network\n   addresses
    is considered to be the responsibility of local network\n   modules.  This model
    is for expository purposes only, and should not\n   be construed as constraining
    an actual implementation.\n         |                                                          |\n
    \        |              Upper-Layer Protocol Modules                |\n         |__________________________________________________________|\n
    \     --------------------- IP Service Interface -----------------------\n          __________________________________________________________\n
    \        |                            |              |              |\n         |
    \                           |     ICMP     |     IGMP     |\n         |             IP
    \            |______________|______________|\n         |           Module                                         |\n
    \        |                                                          |\n         |__________________________________________________________|\n
    \     ---------------- Local Network Service Interface -----------------\n          __________________________________________________________\n
    \        |                            |                             |\n         |
    \          Local            | IP-to-local address mapping |\n         |          Network
    \          |         (e.g., ARP)         |\n         |          Modules           |_____________________________|\n
    \        |      (e.g., Ethernet)                                    |\n         |
    \                                                         |\n   To provide level
    1 multicasting, a host IP implementation must\n   support the transmission of
    multicast IP datagrams.  To provide level\n   2 multicasting, a host must also
    support the reception of multicast\n   IP datagrams.  Each of these two new services
    is described in a\n   separate section, below.  For each service, extensions are
    specified\n   for the IP service interface, the IP module, the local network\n
    \  service interface, and an Ethernet local network module.  Extensions\n   to
    local network modules other than Ethernet are mentioned briefly,\n   but are not
    specified in detail.\n"
  title: 5. MODEL OF A HOST IP IMPLEMENTATION
- contents:
  - '6. SENDING MULTICAST IP DATAGRAMS

    '
  title: 6. SENDING MULTICAST IP DATAGRAMS
- contents:
  - "6.1. Extensions to the IP Service Interface\n   Multicast IP datagrams are sent
    using the same \"Send IP\" operation\n   used to send unicast IP datagrams; an
    upper-layer protocol module\n   merely specifies an IP host group address, rather
    than an individual\n   IP address, as the destination.  However, a number of extensions
    may\n   be necessary or desirable.\n   First, the service interface should provide
    a way for the upper-layer\n   protocol to specify the IP time-to-live of an outgoing
    multicast\n   datagram, if such a capability does not already exist.  If the\n
    \  upper-layer protocol chooses not to specify a time-to-live, it should\n   default
    to 1 for all multicast IP datagrams, so that an explicit\n   choice is required
    to multicast beyond a single network.\n   Second, for hosts that may be attached
    to more than one network, the\n   service interface should provide a way for the
    upper-layer protocol\n   to identify which network interface is be used for the
    multicast\n   transmission.  Only one interface is used for the initial\n   transmission;
    multicast routers are responsible for forwarding to any\n   other networks, if
    necessary.  If the upper-layer protocol chooses\n   not to identify an outgoing
    interface, a default interface should be\n   used, preferably under the control
    of system management.\n   Third (level 2 implementations only), for the case in
    which the host\n   is itself a member of a group to which a datagram is being
    sent, the\n   service interface should provide a way for the upper-layer protocol\n
    \  to inhibit local delivery of the datagram; by default, a copy of the\n   datagram
    is looped back.  This is a performance optimization for\n   upper-layer protocols
    that restrict the membership of a group to one\n   process per host (such as a
    routing protocol), or that handle\n   loopback of group communication at a higher
    layer (such as a\n   multicast transport protocol).\n"
  title: 6.1. Extensions to the IP Service Interface
- contents:
  - "6.2. Extensions to the IP Module\n   To support the sending of multicast IP datagrams,
    the IP module must\n   be extended to recognize IP host group addresses when routing\n
    \  outgoing datagrams.  Most IP implementations include the following\n   logic:\n
    \       if IP-destination is on the same local network,\n           send datagram
    locally to IP-destination\n        else\n           send datagram locally to GatewayTo(
    IP-destination )\n   To allow multicast transmissions, the routing logic must
    be changed\n   to:\n        if IP-destination is on the same local network\n        or
    IP-destination is a host group,\n           send datagram locally to IP-destination\n
    \       else\n           send datagram locally to GatewayTo( IP-destination )\n
    \  If the sending host is itself a member of the destination group on\n   the
    outgoing interface, a copy of the outgoing datagram must be\n   looped-back for
    local delivery, unless inhibited by the sender.\n   (Level 2 implementations only.)\n
    \  The IP source address of the outgoing datagram must be one of the\n   individual
    addresses corresponding to the outgoing interface.\n   A host group address must
    never be placed in the source address field\n   or anywhere in a source route
    or record route option of an outgoing\n   IP datagram.\n"
  title: 6.2. Extensions to the IP Module
- contents:
  - "6.3. Extensions to the Local Network Service Interface\n   No change to the local
    network service interface is required to\n   support the sending of multicast
    IP datagrams.  The IP module merely\n   specifies an IP host group destination,
    rather than an individual IP\n   destination, when it invokes the existing \"Send
    Local\" operation.\n"
  title: 6.3. Extensions to the Local Network Service Interface
- contents:
  - "6.4. Extensions to an Ethernet Local Network Module\n   The Ethernet directly
    supports the sending of local multicast packets\n   by allowing multicast addresses
    in the destination field of Ethernet\n   packets.  All that is needed to support
    the sending of multicast IP\n   datagrams is a procedure for mapping IP host group
    addresses to\n   Ethernet multicast addresses.\n   An IP host group address is
    mapped to an Ethernet multicast address\n   by placing the low-order 23-bits of
    the IP address into the low-order\n   23 bits of the Ethernet multicast address
    01-00-5E-00-00-00 (hex).\n   Because there are 28 significant bits in an IP host
    group address,\n   more than one host group address may map to the same Ethernet\n
    \  multicast address.\n"
  title: 6.4. Extensions to an Ethernet Local Network Module
- contents:
  - "6.5. Extensions to Local Network Modules other than Ethernet\n   Other networks
    that directly support multicasting, such as rings or\n   buses conforming to the
    IEEE 802.2 standard, may be handled the same\n   way as Ethernet for the purpose
    of sending multicast IP datagrams.\n   For a network that supports broadcast but
    not multicast, such as the\n   Experimental Ethernet, all IP host group addresses
    may be mapped to a\n   single local broadcast address (at the cost of increased
    overhead on\n   all local hosts).  For a point-to-point link joining two hosts
    (or a\n   host and a multicast router), multicasts should be transmitted\n   exactly
    like unicasts.  For a store-and-forward network like the\n   ARPANET or a public
    X.25 network, all IP host group addresses might\n   be mapped to the well-known
    local address of an IP multicast router;\n   a router on such a network would
    take responsibility for completing\n   multicast delivery within the network as
    well as among networks.\n"
  title: 6.5. Extensions to Local Network Modules other than Ethernet
- contents:
  - '7. RECEIVING MULTICAST IP DATAGRAMS

    '
  title: 7. RECEIVING MULTICAST IP DATAGRAMS
- contents:
  - "7.1. Extensions to the IP Service Interface\n   Incoming multicast IP datagrams
    are received by upper-layer protocol\n   modules using the same \"Receive IP\"
    operation as normal, unicast\n   datagrams.  Selection of a destination upper-layer
    protocol is based\n   on the protocol field in the IP header, regardless of the
    destination\n   IP address.  However, before any datagrams destined to a particular\n
    \  group can be received, an upper-layer protocol must ask the IP module\n   to
    join that group.  Thus, the IP service interface must be extended\n   to provide
    two new operations:\n                 JoinHostGroup  ( group-address, interface
    )\n                 LeaveHostGroup ( group-address, interface )\n   The JoinHostGroup
    operation requests that this host become a member\n   of the host group identified
    by \"group-address\" on the given network\n   interface.  The LeaveGroup operation
    requests that this host give up\n   its membership in the host group identified
    by \"group-address\" on the\n   given network interface.  The interface argument
    may be omitted on\n   hosts that support only one interface.  For hosts that may
    be\n   attached to more than one network, the upper-layer protocol may\n   choose
    to leave the interface unspecified, in which case the request\n   will apply to
    the default interface for sending multicast datagrams\n   (see section 6.1).\n
    \  It is permissible to join the same group on more than one interface,\n   in
    which case duplicate multicast datagrams may be received.  It is\n   also permissible
    for more than one upper-layer protocol to request\n   membership in the same group.\n
    \  Both operations should return immediately (i.e., they are non-\n   blocking
    operations), indicating success or failure.  Either\n   operation may fail due
    to an invalid group address or interface\n   identifier.  JoinHostGroup may fail
    due to lack of local resources.\n   LeaveHostGroup may fail because the host does
    not belong to the given\n   group on the given interface.  LeaveHostGroup may
    succeed, but the\n   membership persist, if more than one upper-layer protocol
    has\n   requested membership in the same group.\n"
  title: 7.1. Extensions to the IP Service Interface
- contents:
  - "7.2. Extensions to the IP Module\n   To support the reception of multicast IP
    datagrams, the IP module\n   must be extended to maintain a list of host group
    memberships\n   associated with each network interface.  An incoming datagram\n
    \  destined to one of those groups is processed exactly the same way as\n   datagrams
    destined to one of the host's individual addresses.\n   Incoming datagrams destined
    to groups to which the host does not\n   belong are discarded without generating
    any error report or log\n   entry.  On hosts with more than one network interface,
    if a datagram\n   arrives via one interface, destined for a group to which the
    host\n   belongs only on a different interface, the datagram is quietly\n   discarded.
    \ (These cases should occur only as a result of inadequate\n   multicast address
    filtering in a local network module.)\n   An incoming datagram is not rejected
    for having an IP time-to-live of\n   1 (i.e., the time-to-live should not automatically
    be decremented on\n   arriving datagrams that are not being forwarded).  An incoming\n
    \  datagram with an IP host group address in its source address field is\n   quietly
    discarded.  An ICMP error message (Destination Unreachable,\n   Time Exceeded,
    Parameter Problem, Source Quench, or Redirect) is\n   never generated in response
    to a datagram destined to an IP host\n   group.\n   The list of host group memberships
    is updated in response to\n   JoinHostGroup and LeaveHostGroup requests from upper-layer
    protocols.\n   Each membership should have an associated reference count or similar\n
    \  mechanism to handle multiple requests to join and leave the same\n   group.
    \ On the first request to join and the last request to leave a\n   group on a
    given interface, the local network module for that\n   interface is notified,
    so that it may update its multicast reception\n   filter (see section 7.3).\n
    \  The IP module must also be extended to implement the IGMP protocol,\n   specified
    in Appendix I. IGMP is used to keep neighboring multicast\n   routers informed
    of the host group memberships present on a\n   particular local network.  To support
    IGMP, every level 2 host must\n   join the \"all-hosts\" group (address 224.0.0.1)
    on each network\n   interface at initialization time and must remain a member
    for as long\n   as the host is active.\n   (Datagrams addressed to the all-hosts
    group are recognized as a\n   special case by the multicast routers and are never
    forwarded beyond\n   a single network, regardless of their time-to-live.  Thus,
    the all-\n   hosts address may not be used as an internet-wide broadcast address.\n
    \  For the purpose of IGMP, membership in the all-hosts group is really\n   necessary
    only while the host belongs to at least one other group.\n   However, it is specified
    that the host shall remain a member of the\n   all-hosts group at all times because
    (1) it is simpler, (2) the\n   frequency of reception of unnecessary IGMP queries
    should be low\n   enough that overhead is negligible, and (3) the all-hosts address
    may\n   serve other routing-oriented purposes, such as advertising the\n   presence
    of gateways or resolving local addresses.)\n"
  title: 7.2. Extensions to the IP Module
- contents:
  - "7.3. Extensions to the Local Network Service Interface\n   Incoming local network
    multicast packets are delivered to the IP\n   module using the same \"Receive
    Local\" operation as local network\n   unicast packets.  To allow the IP module
    to tell the local network\n   module which multicast packets to accept, the local
    network service\n   interface is extended to provide two new operations:\n                      JoinLocalGroup
    \ ( group-address )\n                      LeaveLocalGroup ( group-address )\n
    \  where \"group-address\" is an IP host group address.  The\n   JoinLocalGroup
    operation requests the local network module to accept\n   and deliver up subsequently
    arriving packets destined to the given IP\n   host group address.  The LeaveLocalGroup
    operation requests the local\n   network module to stop delivering up packets
    destined to the given IP\n   host group address.  The local network module is
    expected to map the\n   IP host group addresses to local network addresses as
    required to\n   update its multicast reception filter.  Any local network module
    is\n   free to ignore LeaveLocalGroup requests, and may deliver up packets\n   destined
    to more addresses than just those specified in\n   JoinLocalGroup requests, if
    it is unable to filter incoming packets\n   adequately.\n   The local network
    module must not deliver up any multicast packets\n   that were transmitted from
    that module; loopback of multicasts is\n   handled at the IP layer or higher.\n"
  title: 7.3. Extensions to the Local Network Service Interface
- contents:
  - "7.4. Extensions to an Ethernet Local Network Module\n   To support the reception
    of multicast IP datagrams, an Ethernet\n   module must be able to receive packets
    addressed to the Ethernet\n   multicast addresses that correspond to the host's
    IP host group\n   addresses.  It is highly desirable to take advantage of any
    address\n   filtering capabilities that the Ethernet hardware interface may have,\n
    \  so that the host receives only those packets that are destined to it.\n   Unfortunately,
    many current Ethernet interfaces have a small limit on\n   the number of addresses
    that the hardware can be configured to\n   recognize.  Nevertheless, an implementation
    must be capable of\n   listening on an arbitrary number of Ethernet multicast
    addresses,\n   which may mean \"opening up\" the address filter to accept all\n
    \  multicast packets during those periods when the number of addresses\n   exceeds
    the limit of the filter.\n   For interfaces with inadequate hardware address filtering,
    it may be\n   desirable (for performance reasons) to perform Ethernet address\n
    \  filtering within the software of the Ethernet module.  This is not\n   mandatory,
    however, because the IP module performs its own filtering\n   based on IP destination
    addresses.\n"
  title: 7.4. Extensions to an Ethernet Local Network Module
- contents:
  - "7.5. Extensions to Local Network Modules other than Ethernet\n   Other multicast
    networks, such as IEEE 802.2 networks, can be handled\n   the same way as Ethernet
    for the purpose of receiving multicast IP\n   datagrams.  For pure broadcast networks,
    such as the Experimental\n   Ethernet, all incoming broadcast packets can be accepted
    and passed\n   to the IP module for IP-level filtering.  On point-to-point or\n
    \  store-and-forward networks, multicast IP datagrams will arrive as\n   local
    network unicasts, so no change to the local network module\n   should be necessary.\n"
  title: 7.5. Extensions to Local Network Modules other than Ethernet
- contents:
  - "APPENDIX I. INTERNET GROUP MANAGEMENT PROTOCOL (IGMP)\n   The Internet Group
    Management Protocol (IGMP) is used by IP hosts to\n   report their host group
    memberships to any immediately-neighboring\n   multicast routers.  IGMP is an
    asymmetric protocol and is specified\n   here from the point of view of a host,
    rather than a multicast\n   router.  (IGMP may also be used, symmetrically or
    asymmetrically,\n   between multicast routers.  Such use is not specified here.)\n
    \  Like ICMP, IGMP is a integral part of IP.  It is required to be\n   implemented
    by all hosts conforming to level 2 of the IP multicasting\n   specification.  IGMP
    messages are encapsulated in IP datagrams, with\n   an IP protocol number of 2.
    \ All IGMP messages of concern to hosts\n   have the following format:\n       0
    \                  1                   2                   3\n       0 1 2 3 4
    5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |Version| Type  |    Unused     |           Checksum            |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |                         Group Address                         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     Version\n         This memo specifies version 1 of IGMP.  Version 0 is specified\n
    \        in RFC-988 and is now obsolete.\n      Type\n         There are two types
    of IGMP message of concern to hosts:\n            1 = Host Membership Query\n
    \           2 = Host Membership Report\n      Unused\n         Unused field, zeroed
    when sent, ignored when received.\n      Checksum\n         The checksum is the
    16-bit one's complement of the one's\n         complement sum of the 8-octet IGMP
    message.  For computing\n         the checksum, the checksum field is zeroed.\n
    \     Group Address\n         In a Host Membership Query message, the group address
    field\n         is zeroed when sent, ignored when received.\n         In a Host
    Membership Report message, the group address field\n         holds the IP host
    group address of the group being reported.\n"
  title: APPENDIX I. INTERNET GROUP MANAGEMENT PROTOCOL (IGMP)
- contents:
  - "Informal Protocol Description\n   Multicast routers send Host Membership Query
    messages (hereinafter\n   called Queries) to discover which host groups have members
    on their\n   attached local networks.  Queries are addressed to the all-hosts\n
    \  group (address 224.0.0.1), and carry an IP time-to-live of 1.\n   Hosts respond
    to a Query by generating Host Membership Reports\n   (hereinafter called Reports),
    reporting each host group to which they\n   belong on the network interface from
    which the Query was received.\n   In order to avoid an \"implosion\" of concurrent
    Reports and to reduce\n   the total number of Reports transmitted, two techniques
    are used:\n      1. When a host receives a Query, rather than sending Reports\n
    \        immediately, it starts a report delay timer for each of its\n         group
    memberships on the network interface of the incoming\n         Query.  Each timer
    is set to a different, randomly-chosen\n         value between zero and D seconds.
    \ When a timer expires, a\n         Report is generated for the corresponding
    host group.  Thus,\n         Reports are spread out over a D second interval instead
    of\n         all occurring at once.\n      2. A Report is sent with an IP destination
    address equal to the\n         host group address being reported, and with an
    IP\n         time-to-live of 1, so that other members of the same group on\n         the
    same network can overhear the Report.  If a host hears a\n         Report for
    a group to which it belongs on that network, the\n         host stops its own
    timer for that group and does not generate\n         a Report for that group.
    \ Thus, in the normal case, only one\n         Report will be generated for each
    group present on the\n         network, by the member host whose delay timer expires
    first.\n         Note that the multicast routers receive all IP multicast\n         datagrams,
    and therefore need not be addressed explicitly.\n         Further note that the
    routers need not know which hosts\n         belong to a group, only that at least
    one host belongs to a\n         group on a particular network.\n   There are two
    exceptions to the behavior described above.  First, if\n   a report delay timer
    is already running for a group membership when a\n   Query is received, that timer
    is not reset to a new random value, but\n   rather allowed to continue running
    with its current value.  Second, a\n   report delay timer is never set for a host's
    membership in the all-\n   hosts group (224.0.0.1), and that membership is never
    reported.\n   If a host uses a pseudo-random number generator to compute the\n
    \  reporting delays, one of the host's own individual IP address should\n   be
    used as part of the seed for the generator, to reduce the chance\n   of multiple
    hosts generating the same sequence of delays.\n   A host should confirm that a
    received Report has the same IP host\n   group address in its IP destination field
    and its IGMP group address\n   field, to ensure that the host's own Report is
    not cancelled by an\n   erroneous received Report.  A host should quietly discard
    any IGMP\n   message of type other than Host Membership Query or Host Membership\n
    \  Report.\n   Multicast routers send Queries periodically to refresh their\n
    \  knowledge of memberships present on a particular network.  If no\n   Reports
    are received for a particular group after some number of\n   Queries, the routers
    assume that that group has no local members and\n   that they need not forward
    remotely-originated multicasts for that\n   group onto the local network.  Queries
    are normally sent infrequently\n   (no more than once a minute) so as to keep
    the IGMP overhead on hosts\n   and networks very low.  However, when a multicast
    router starts up,\n   it may issue several closely-spaced Queries in order to
    build up its\n   knowledge of local memberships quickly.\n   When a host joins
    a new group, it should immediately transmit a\n   Report for that group, rather
    than waiting for a Query, in case it is\n   the first member of that group on
    the network.  To cover the\n   possibility of the initial Report being lost or
    damaged, it is\n   recommended that it be repeated once or twice after short delays.
    \ (A\n   simple way to accomplish this is to act as if a Query had been\n   received
    for that group only, setting the group's random report delay\n   timer.  The state
    transition diagram below illustrates this\n   approach.)\n   Note that, on a network
    with no multicast routers present, the only\n   IGMP traffic is the one or more
    Reports sent whenever a host joins a\n   new group.\n"
  title: Informal Protocol Description
- contents:
  - "State Transition Diagram\n   IGMP behavior is more formally specified by the
    state transition\n   diagram below.  A host may be in one of three possible states,
    with\n   respect to any single IP host group on any single network interface:\n
    \     - Non-Member state, when the host does not belong to the group\n        on
    the interface.  This is the initial state for all\n        memberships on all
    network interfaces; it requires no storage\n        in the host.\n      - Delaying
    Member state, when the host belongs to the group on\n        the interface and
    has a report delay timer running for that\n        membership.\n      - Idle Member
    state, when the host belongs to the group on the\n        interface and does not
    have a report delay timer running for\n        that membership.\n   There are
    five significant events that can cause IGMP state\n   transitions:\n      - \"join
    group\" occurs when the host decides to join the group on\n        the interface.
    \ It may occur only in the Non-Member state.\n      - \"leave group\" occurs when
    the host decides to leave the group\n        on the interface.  It may occur only
    in the Delaying Member\n        and Idle Member states.\n      - \"query received\"
    occurs when the host receives a valid IGMP\n        Host Membership Query message.
    \ To be valid, the Query message\n        must be at least 8 octets long, have
    a correct IGMP\n        checksum and have an IP destination address of 224.0.0.1.\n
    \       A single Query applies to all memberships on the\n        interface from
    which the Query is received.  It is ignored for\n        memberships in the Non-Member
    or Delaying Member state.\n      - \"report received\" occurs when the host receives
    a valid IGMP\n        Host Membership Report message.  To be valid, the Report\n
    \       message must be at least 8 octets long, have a correct IGMP\n        checksum,
    and contain the same IP host group address in its IP\n        destination field
    and its IGMP group address field.  A Report\n        applies only to the membership
    in the group identified by the\n        Report, on the interface from which the
    Report is received.\n        It is ignored for memberships in the Non-Member or
    Idle Member\n        state.\n      - \"timer expired\" occurs when the report
    delay timer for the\n        group on the interface expires.  It may occur only
    in the\n        Delaying Member state.\n   All other events, such as receiving
    invalid IGMP messages, or IGMP\n   messages other than Query or Report, are ignored
    in all states.\n   There are three possible actions that may be taken in response
    to the\n   above events:\n      - \"send report\" for the group on the interface.\n
    \     - \"start timer\" for the group on the interface, using a random\n        delay
    value between 0 and D seconds.\n      - \"stop timer\" for the group on the interface.\n
    \  In the following diagram, each state transition arc is labelled with\n   the
    event that causes the transition, and, in parentheses, any\n   actions taken during
    the transition.\n                              ________________\n                             |
    \               |\n                             |                |\n                             |
    \               |\n                             |                |\n                   --------->|
    \  Non-Member   |<---------\n                  |          |                |          |\n
    \                 |          |                |          |\n                  |
    \         |                |          |\n                  |          |________________|
    \         |\n                  |                   |                  |\n                  |
    leave group       | join group       | leave group\n                  | (stop
    timer)      |(send report,     |\n                  |                   | start
    timer)     |\n          ________|________           |          ________|________\n
    \        |                 |<---------          |                 |\n         |
    \                |                    |                 |\n         |                 |<-------------------|
    \                |\n         |                 |   query received   |                 |\n
    \        | Delaying Member |    (start timer)   |   Idle Member   |\n         |
    \                |------------------->|                 |\n         |                 |
    \  report received  |                 |\n         |                 |    (stop
    timer)    |                 |\n         |_________________|------------------->|_________________|\n
    \                               timer expired\n                                (send
    report)\n   The all-hosts group (address 224.0.0.1) is handled as a special case.\n
    \  The host starts in Idle Member state for that group on every\n   interface,
    never transitions to another state, and never sends a\n   report for that group.\n"
  title: State Transition Diagram
- contents:
  - "Protocol Parameters\n   The maximum report delay, D, is 10 seconds.\n"
  title: Protocol Parameters
- contents:
  - "APPENDIX II. HOST GROUP ADDRESS ISSUES\n   This appendix is not part of the IP
    multicasting specification, but\n   provides background discussion of several
    issues related to IP host\n   group addresses.\n"
  title: APPENDIX II. HOST GROUP ADDRESS ISSUES
- contents:
  - "Group Address Binding\n   The binding of IP host group addresses to physical
    hosts may be\n   considered a generalization of the binding of IP unicast addresses.\n
    \  An IP unicast address is statically bound to a single local network\n   interface
    on a single IP network.  An IP host group address is\n   dynamically bound to
    a set of local network interfaces on a set of IP\n   networks.\n   It is important
    to understand that an IP host group address is NOT\n   bound to a set of IP unicast
    addresses.  The multicast routers do not\n   need to maintain a list of individual
    members of each host group.\n   For example, a multicast router attached to an
    Ethernet need\n   associate only a single Ethernet multicast address with each
    host\n   group having local members, rather than a list of the members'\n   individual
    IP or Ethernet addresses.\n"
  title: Group Address Binding
- contents:
  - "Allocation of Transient Host Group Addresses\n   This memo does not specify how
    transient group address are allocated.\n   It is anticipated that different portions
    of the IP transient host\n   group address space will be allocated using different
    techniques.\n   For example, there may be a number of servers that can be contacted\n
    \  to acquire a new transient group address.  Some higher-level\n   protocols
    (such as VMTP, specified in RFC-1045) may generate higher-\n   level transient
    \"process group\" or \"entity group\" addresses which are\n   then algorithmically
    mapped to a subset of the IP transient host\n   group addresses, similarly to
    the way that IP host group addresses\n   are mapped to Ethernet multicast addresses.
    \ A portion of the IP\n   group address space may be set aside for random allocation
    by\n   applications that can tolerate occasional collisions with other\n   multicast
    users, perhaps generating new addresses until a suitably\n   \"quiet\" one is
    found.\n   In general, a host cannot assume that datagrams sent to any host\n
    \  group address will reach only the intended hosts, or that datagrams\n   received
    as a member of a transient host group are intended for the\n   recipient.  Misdelivery
    must be detected at a level above IP, using\n   higher-level identifiers or authentication
    tokens.  Information\n   transmitted to a host group address should be encrypted
    or governed\n   by administrative routing controls if the sender is concerned
    about\n   unwanted listeners.\n"
  title: Allocation of Transient Host Group Addresses
- contents:
  - "Author's Address\n   Steve Deering\n   Stanford University\n   Computer Science
    Department\n   Stanford, CA 94305-2140\n   Phone: (415) 723-9427\n   EMail: deering@PESCADERO.STANFORD.EDU\n"
  title: Author's Address
