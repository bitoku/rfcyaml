- title: __initial_text__
  contents:
  - "          RADIUS (Remote Authentication Dial In User Service)\n          Support\
    \ For Extensible Authentication Protocol (EAP)\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines Remote Authentication Dial In User Service\n\
    \   (RADIUS) support for the Extensible Authentication Protocol (EAP), an\n  \
    \ authentication framework which supports multiple authentication\n   mechanisms.\
    \  In the proposed scheme, the Network Access Server (NAS)\n   forwards EAP packets\
    \ to and from the RADIUS server, encapsulated\n   within EAP-Message attributes.\
    \  This has the advantage of allowing\n   the NAS to support any EAP authentication\
    \ method, without the need\n   for method-specific code, which resides on the\
    \ RADIUS server.  While\n   EAP was originally developed for use with PPP, it\
    \ is now also in use\n   with IEEE 802.\n   This document updates RFC 2869.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n       1.1.  Specification of Requirements. . . . . . . . .\
    \ . . . . .  3\n       1.2.  Terminology. . . . . . . . . . . . . . . . . . .\
    \ . . . .  3\n   2.  RADIUS Support for EAP . . . . . . . . . . . . . . . . .\
    \ . . .  4\n       2.1.  Protocol Overview. . . . . . . . . . . . . . . . . .\
    \ . .  5\n       2.2.  Invalid Packets. . . . . . . . . . . . . . . . . . . .\
    \ .  9\n       2.3.  Retransmission . . . . . . . . . . . . . . . . . . . . .\
    \ 10\n       2.4.  Fragmentation. . . . . . . . . . . . . . . . . . . . . . 10\n\
    \       2.5.  Alternative uses . . . . . . . . . . . . . . . . . . . . 11\n  \
    \     2.6.  Usage Guidelines . . . . . . . . . . . . . . . . . . . . 11\n   3.\
    \  Attributes . . . . . . . . . . . . . . . . . . . . . . . . . . 14\n       3.1.\
    \  EAP-Message. . . . . . . . . . . . . . . . . . . . . . . 15\n       3.2.  Message-Authenticator.\
    \ . . . . . . . . . . . . . . . . . 16\n       3.3.  Table of Attributes. . .\
    \ . . . . . . . . . . . . . . . . 18\n   4.  Security Considerations. . . . .\
    \ . . . . . . . . . . . . . . . 19\n       4.1.  Security Requirements. . . .\
    \ . . . . . . . . . . . . . . 19\n       4.2.  Security Protocol. . . . . . .\
    \ . . . . . . . . . . . . . 20\n       4.3.  Security Issues. . . . . . . . .\
    \ . . . . . . . . . . . . 22\n   5.  IANA Considerations. . . . . . . . . . .\
    \ . . . . . . . . . . . 30\n   6.  References . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . 30\n       6.1.  Normative References . . . . . . . . .\
    \ . . . . . . . . . 30\n       6.2.  Informative References . . . . . . . . .\
    \ . . . . . . . . 32\n   Appendix A - Examples. . . . . . . . . . . . . . . .\
    \ . . . . . . . 34\n   Appendix B - Change Log. . . . . . . . . . . . . . . .\
    \ . . . . . . 43\n   Intellectual Property Statement. . . . . . . . . . . . .\
    \ . . . . . 44\n   Acknowledgements . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . 44\n   Authors' Addresses . . . . . . . . . . . . . . . . . . . . .\
    \ . . . 45\n   Full Copyright Statement . . . . . . . . . . . . . . . . . . .\
    \ . . 46\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Remote Authentication Dial In User Service (RADIUS)\
    \ is an\n   authentication, authorization and accounting protocol used to control\n\
    \   network access.  RADIUS authentication and authorization is specified\n  \
    \ in [RFC2865], and RADIUS accounting is specified in [RFC2866]; RADIUS\n   over\
    \ IPv6 is specified in [RFC3162].\n   The Extensible Authentication Protocol (EAP),\
    \ defined in [RFC2284],\n   is an authentication framework which supports multiple\
    \ authentication\n   mechanisms.  EAP may be used on dedicated links, switched\
    \ circuits,\n   and wired as well as wireless links.\n   To date, EAP has been\
    \ implemented with hosts and routers that connect\n   via switched circuits or\
    \ dial-up lines using PPP [RFC1661].  It has\n   also been implemented with bridges\
    \ supporting [IEEE802].  EAP\n   encapsulation on IEEE 802 wired media is described\
    \ in [IEEE8021X].\n   RADIUS attributes are comprised of variable length Type-Length-Value\n\
    \   3-tuples.  New attribute values can be added without disturbing\n   existing\
    \ implementations of the protocol.  This specification\n   describes RADIUS attributes\
    \ supporting the Extensible Authentication\n   Protocol (EAP): EAP-Message and\
    \ Message-Authenticator.  These\n   attributes now have extensive field experience.\
    \  The purpose of this\n   document is to provide clarification and resolve interoperability\n\
    \   issues.\n   As noted in [RFC2865], a Network Access Server (NAS) that does\
    \ not\n   implement a given service MUST NOT implement the RADIUS attributes\n\
    \   for that service.  This implies that a NAS that is unable to offer\n   EAP\
    \ service MUST NOT implement the RADIUS attributes for EAP.  A NAS\n   MUST treat\
    \ a RADIUS Access-Accept requesting an unavailable service\n   as an Access-Reject\
    \ instead.\n"
- title: 1.1.  Specification of Requirements
  contents:
  - "1.1.  Specification of Requirements\n   In this document, several words are used\
    \ to signify the requirements\n   of the specification.  These words are often\
    \ capitalized.  The key\n   words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\", \"SHOULD\",\n   \"SHOULD NOT\", \"RECOMMENDED\",  \"MAY\", and\
    \ \"OPTIONAL\" in this document\n   are to be interpreted as described in [RFC2119].\n"
- title: 1.2.  Terminology
  contents:
  - "1.2.  Terminology\n   This document frequently uses the following terms:\n  \
    \ authenticator\n             The end of the link requiring the authentication.\
    \  Also\n             known as the Network Access Server (NAS) or RADIUS client.\n\
    \             Within IEEE 802.1X terminology, the term Authenticator is\n    \
    \         used.\n   peer      The other end of the point-to-point link (PPP),\n\
    \             point-to-point LAN segment (IEEE 802.1X) or wireless link,\n   \
    \          which is being authenticated by the authenticator.  In IEEE\n     \
    \        802.1X, this end is known as the Supplicant.\n   authentication server\n\
    \             An authentication server is an entity that provides an\n       \
    \      authentication service to an authenticator (NAS).  This\n             service\
    \ verifies from the credentials provided by the peer,\n             the claim\
    \ of identity made by the peer; it also may provide\n             credentials\
    \ allowing the peer to verify the identity of the\n             authentication\
    \ server.  Within this document it is assumed\n             that the NAS operates\
    \ as a pass-through, forwarding EAP\n             packets between the RADIUS server\
    \ and the EAP peer.\n             Therefore the RADIUS server operates as an authentication\n\
    \             server.\n   silently discard\n             This means the implementation\
    \ discards the packet without\n             further processing.  The implementation\
    \ SHOULD provide the\n             capability of logging the error, including\
    \ the contents of\n             the silently discarded packet, and SHOULD record\
    \ the event\n             in a statistics counter.\n   displayable message\n \
    \            This is interpreted to be a human readable string of\n          \
    \   characters, and MUST NOT affect operation of the protocol.\n             The\
    \ message encoding MUST follow the UTF-8 transformation\n             format [RFC2279].\n\
    \   Network Access Server (NAS)\n             The device providing access to the\
    \ network.  Also known as\n             the Authenticator (IEEE 802.1X or EAP\
    \ terminology) or\n             RADIUS client.\n   service   The NAS provides\
    \ a service to the user, such as IEEE 802 or\n             PPP.\n   session  \
    \ Each service provided by the NAS to a peer constitutes a\n             session,\
    \ with the beginning of the session defined as the\n             point where service\
    \ is first provided and the end of the\n             session defined as the point\
    \ where service is ended.  A\n             peer may have multiple sessions in\
    \ parallel or series if\n             the NAS supports that, with each session\
    \ generating a\n             separate start and stop accounting record.\n"
- title: 2.  RADIUS Support for EAP
  contents:
  - "2.  RADIUS Support for EAP\n   The Extensible Authentication Protocol (EAP),\
    \ described in [RFC2284],\n   provides a standard mechanism for support of additional\n\
    \   authentication methods without the NAS to be upgraded to support each\n  \
    \ new method.  Through the use of EAP, support for a number of\n   authentication\
    \ schemes may be added, including smart cards, Kerberos\n   [RFC1510], Public\
    \ Key [RFC2716], One Time Passwords [RFC2284], and\n   others.\n   One of the\
    \ advantages of the EAP architecture is its flexibility.\n   EAP is used to select\
    \ a specific authentication mechanism.  Rather\n   than requiring the NAS to be\
    \ updated to support each new\n   authentication method, EAP permits the use of\
    \ an authentication\n   server implementing authentication methods, with the NAS\
    \ acting as a\n   pass-through for some or all methods and peers.\n   A NAS MAY\
    \ authenticate local peers while at the same time acting as a\n   pass-through\
    \ for non-local peers and authentication methods it does\n   not implement locally.\
    \  A NAS implementing this specification is not\n   required to use RADIUS to\
    \ authenticate every peer.  However, once the\n   NAS begins acting as a pass-through\
    \ for a particular session, it can\n   no longer perform local authentication\
    \ for that session.\n   In order to support EAP within RADIUS, two new attributes,\n\
    \   EAP-Message and Message-Authenticator, are introduced in this\n   document.\
    \  This section describes how these new attributes may be\n   used for providing\
    \ EAP support within RADIUS.\n"
- title: 2.1.  Protocol Overview
  contents:
  - "2.1.  Protocol Overview\n   In RADIUS/EAP, RADIUS is used to shuttle RADIUS-encapsulated\
    \ EAP\n   Packets between the NAS and an authentication server.\n   The authenticating\
    \ peer and the NAS begin the EAP conversation by\n   negotiating use of EAP. \
    \ Once EAP has been negotiated, the NAS SHOULD\n   send an initial EAP-Request\
    \ message to the authenticating peer.  This\n   will typically be an EAP-Request/Identity,\
    \ although it could be an\n   EAP-Request for an authentication method (Types\
    \ 4 and greater).  A\n   NAS MAY be configured to initiate with a default authentication\n\
    \   method.  This is useful in cases where the identity is determined by\n   another\
    \ means (such as Called-Station-Id, Calling-Station-Id and/or\n   Originating-Line-Info);\
    \ where a single authentication method is\n   required, which includes its own\
    \ identity exchange; where identity\n   hiding is desired, so that the identity\
    \ is not requested until after\n   a protected channel has been set up.\n   The\
    \ peer replies with an EAP-Response.  The NAS MAY determine from\n   the Response\
    \ that it should proceed with local authentication.\n   Alternatively, the NAS\
    \ MAY act as a pass-through, encapsulating the\n   EAP-Response within EAP-Message\
    \ attribute(s) sent to the RADIUS\n   server within a RADIUS Access-Request packet.\
    \  If the NAS sends an\n   EAP-Request/Identity message as the initial packet,\
    \ the peer responds\n   with an EAP-Response/Identity.  The NAS may determine\
    \ that the peer\n   is local and proceed with local authentication.  If no match\
    \ is found\n   against the list of local users, the NAS encapsulates the\n   EAP-Response/Identity\
    \ message within an EAP-Message attribute,\n   enclosed within an Access-Request\
    \ packet.\n   On receiving a valid Access-Request packet containing EAP-Message\n\
    \   attribute(s), a RADIUS server compliant with this specification and\n   wishing\
    \ to authenticate with EAP MUST respond with an\n   Access-Challenge packet containing\
    \ EAP-Message attribute(s).  If the\n   RADIUS server does not support EAP or\
    \ does not wish to authenticate\n   with EAP, it MUST respond with an Access-Reject.\n\
    \   EAP-Message attribute(s) encapsulate a single EAP packet which the\n   NAS\
    \ decapsulates and passes on to the authenticating peer.  The peer\n   then responds\
    \ with an EAP-Response packet, which the NAS encapsulates\n   within an Access-Request\
    \ containing EAP-Message attribute(s).  EAP is\n   a 'lock step' protocol, so\
    \ that other than the initial Request, a new\n   Request cannot be sent prior\
    \ to receiving a valid Response.\n   The conversation continues until either a\
    \ RADIUS Access-Reject or\n   Access-Accept packet is received from the RADIUS\
    \ server.  Reception\n   of a RADIUS Access-Reject packet MUST result in the NAS\
    \ denying\n   access to the authenticating peer.  A RADIUS Access-Accept packet\n\
    \   successfully ends the authentication phase.  The NAS MUST NOT\n   \"manufacture\"\
    \ a Success or Failure packet as the result of a timeout.\n   After a suitable\
    \ number of timeouts have elapsed, the NAS SHOULD\n   instead end the EAP conversation.\n\
    \   Using RADIUS, the NAS can act as a pass-through for an EAP\n   conversation\
    \ between the peer and authentication server, without\n   needing to implement\
    \ the EAP method used between them.  Where the NAS\n   initiates the conversation\
    \ by sending an EAP-Request for an\n   authentication method, it may not be required\
    \ that the NAS fully\n   implement the EAP method reflected in the initial EAP-Request.\n\
    \   Depending on the initial method, it may be sufficient for the NAS to\n   be\
    \ configured with the initial packet to be sent to the peer, and for\n   the NAS\
    \ to act as a pass-through for subsequent messages.  Note that\n   since the NAS\
    \ only encapsulates the EAP-Response in its initial\n   Access-Request, the initial\
    \ EAP-Request within the authentication\n   method is not available to the RADIUS\
    \ server.  For the RADIUS server\n   to be able to continue the conversation,\
    \ either the initial\n   EAP-Request is vestigial, so that the RADIUS server need\
    \ not be aware\n   of it, or the relevant information from the initial EAP-Request\
    \ (such\n   as a nonce) is reflected in the initial EAP-Response, so that the\n\
    \   RADIUS server can obtain it without having received the initial\n   EAP-Request.\n\
    \   Where the initial EAP-Request sent by the NAS is for an\n   authentication\
    \ Type (4 or greater), the peer MAY respond with a Nak\n   indicating that it\
    \ would prefer another authentication method that is\n   not implemented locally.\
    \  In this case, the NAS SHOULD send\n   Access-Request encapsulating the received\
    \ EAP-Response/Nak.  This\n   provides the RADIUS server with a hint about the\
    \ authentication\n   method(s) preferred by the peer, although it does not provide\n\
    \   information on the Type of the original Request.  It also provides\n   the\
    \ server with the Identifier used in the initial EAP-Request, so\n   that Identifier\
    \ conflicts can be avoided.\n   In order to evaluate whether the alternatives\
    \ preferred by the\n   authenticating peer are allowed, the RADIUS server will\
    \ typically\n   respond with an Access-Challenge containing EAP-Message attribute(s)\n\
    \   encapsulating an EAP-Request/Identity (Type 1).  This allows the\n   RADIUS\
    \ server to determine the peer identity, so as to be able to\n   retrieve the\
    \ associated authentication policy.  Alternatively, an\n   EAP-Request for an\
    \ authentication method (Type 4 or greater) could be\n   sent.  Since the RADIUS\
    \ server may not be aware of the Type of the\n   initial EAP-Request, it is possible\
    \ for the RADIUS server to choose\n   an unacceptable method, and for the peer\
    \ to respond with another Nak.\n   In order to permit non-EAP aware RADIUS proxies\
    \ to forward the\n   Access-Request packet, if the NAS initially sends an\n  \
    \ EAP-Request/Identity message to the peer, the NAS MUST copy the\n   contents\
    \ of the Type-Data field of the EAP-Response/Identity received\n   from the peer\
    \ into the User-Name attribute and MUST include the\n   Type-Data field of the\
    \ EAP-Response/Identity in the User-Name\n   attribute in every subsequent Access-Request.\
    \  Since RADIUS proxies\n   are assumed to act as a pass-through, they cannot\
    \ be expected to\n   parse an EAP-Response/Identity encapsulated within EAP-Message\n\
    \   attribute(s).  If the NAS initially sends an EAP-Request for an\n   authentication\
    \ method, and the peer identity cannot be determined\n   from the EAP-Response,\
    \ then the User-Name attribute SHOULD be\n   determined by another means.  As\
    \ noted in [RFC2865] Section 5.6, it\n   is recommended that Access-Requests use\
    \ the value of the\n   Calling-Station-Id as the value of the User-Name attribute.\n\
    \   Having the NAS send the initial EAP-Request packet has a number of\n   advantages:\n\
    \   [1]  It saves a round trip between the NAS and RADIUS server.\n   [2]  An\
    \ Access-Request is only sent to the RADIUS server if the\n        authenticating\
    \ peer sends an EAP-Response, confirming that it\n        supports EAP.  In situations\
    \ where peers may be EAP unaware,\n        initiating a RADIUS Access-Request\
    \ on a \"carrier sense\" or\n        \"media up\" indication may result in many\
    \ authentication\n        exchanges that cannot complete successfully.  For example,\
    \ on\n        wired networks [IEEE8021X] Supplicants typically do not initiate\n\
    \        the 802.1X conversation with an EAPOL-Start.  Therefore an IEEE\n   \
    \     802.1X-enabled bridge may not be able to determine whether the\n       \
    \ peer supports EAP until it receives a Response to the initial\n        EAP-Request.\n\
    \   [3]  It allows some peers to be authenticated locally.\n   Although having\
    \ the NAS send the initial EAP-Request packet has\n   substantial advantages,\
    \ this technique cannot be universally\n   employed.  There are circumstances\
    \ in which the peer identity is\n   already known (such as when authentication\
    \ and accounting is handled\n   based on Called-Station-Id, Calling-Station-Id\
    \ and/or\n   Originating-Line-Info), but where the appropriate EAP method may\
    \ vary\n   based on that identity.\n   Rather than sending an initial EAP-Request\
    \ packet to the\n   authenticating peer, on detecting the presence of the peer,\
    \ the NAS\n   MAY send an Access-Request packet to the RADIUS server containing\
    \ an\n   EAP-Message attribute signifying EAP-Start.  The RADIUS server will\n\
    \   typically respond with an Access-Challenge containing EAP-Message\n   attribute(s)\
    \ encapsulating an EAP-Request/Identity (Type 1).\n   However, an EAP-Request\
    \ for an authentication method (Type 4 or\n   greater) can also be sent by the\
    \ server.\n   EAP-Start is indicated by sending an EAP-Message attribute with\
    \ a\n   length of 2 (no data).  The Calling-Station-Id SHOULD be included in\n\
    \   the User-Name attribute.  This may result in a RADIUS Access-Request\n   being\
    \ sent by the NAS to the RADIUS server without first confirming\n   that the peer\
    \ supports EAP.  Since this technique can result in a\n   large number of uncompleted\
    \ RADIUS conversations, in situations where\n   EAP unaware peers are common,\
    \ or where peer support for EAP cannot be\n   determined on initial contact (e.g.\
    \ [IEEE8021X] Supplicants not\n   initiating the conversation with an EAPOL-Start)\
    \ it SHOULD NOT be\n   employed by default.\n   For proxied RADIUS requests, there\
    \ are two methods of processing.  If\n   the domain is determined based on the\
    \ Calling-Station-Id,\n   Called-Station-Id and/or Originating-Line-Info, the\
    \ RADIUS server may\n   proxy the initial RADIUS Access-Request/EAP-Start.  If\
    \ the realm is\n   determined based on the peer identity, the local RADIUS server\
    \ MUST\n   respond with a RADIUS Access-Challenge including an EAP-Message\n \
    \  attribute encapsulating an EAP-Request/Identity packet.  The response\n   from\
    \ the authenticating peer SHOULD be proxied to the final\n   authentication server.\n\
    \   If an Access-Request is sent to a RADIUS server which does not\n   support\
    \ the EAP-Message attribute, then an Access-Reject MUST be sent\n   in response.\
    \  On receiving an Access-Reject, the NAS MUST deny access\n   to the authenticating\
    \ peer.\n"
- title: 2.2.  Invalid Packets
  contents:
  - "2.2.  Invalid Packets\n   While acting as a pass-through, the NAS MUST validate\
    \ the EAP header\n   fields (Code, Identifier, Length) prior to forwarding an\
    \ EAP packet\n   to or from the RADIUS server.  On receiving an EAP packet from\
    \ the\n   peer, the NAS checks the Code (2) and Length fields, and matches the\n\
    \   Identifier value against the current Identifier, supplied by the\n   RADIUS\
    \ server in the most recently validated EAP-Request.  On\n   receiving an EAP\
    \ packet from the RADIUS server (encapsulated within\n   an Access-Challenge),\
    \ the NAS checks the Code (1) and Length fields,\n   then updates the current\
    \ Identifier value.  Pending EAP Responses\n   that do not match the current Identifier\
    \ value are silently discarded\n   by the NAS.\n   Since EAP method fields (Type,\
    \ Type-Data) are typically not validated\n   by a NAS operating as a pass-through,\
    \ despite these checks it is\n   possible for a NAS to forward an invalid EAP\
    \ packet to or from the\n   RADIUS server.  A RADIUS server receiving EAP-Message\
    \ attribute(s) it\n   does not understand SHOULD make the determination of whether\
    \ the\n   error is fatal or non-fatal based on the EAP Type.  A RADIUS server\n\
    \   determining that a fatal error has occurred MUST send an\n   Access-Reject\
    \ containing an EAP-Message attribute encapsulating\n   EAP-Failure.\n   A RADIUS\
    \ server determining that a non-fatal error has occurred MAY\n   send an Access-Challenge\
    \ to the NAS including EAP-Message\n   attribute(s) as well as an Error-Cause\
    \ attribute [RFC3576] with value\n   202 (decimal), \"Invalid EAP Packet (Ignored)\"\
    .  The Access-Challenge\n   SHOULD encapsulate within EAP-Message attribute(s)\
    \ the most recently\n   sent EAP-Request packet (including the same Identifier\
    \ value).  On\n   receiving such an Access-Challenge, a NAS implementing previous\n\
    \   versions of this specification will decapsulate the EAP-Request and\n   send\
    \ it to the peer, which will retransmit the EAP-Response.\n   A NAS compliant\
    \ with this specification, on receiving an\n   Access-Challenge with an Error-Cause\
    \ attribute of value 202 (decimal)\n   SHOULD discard the EAP-Response packet\
    \ most recently transmitted to\n   the RADIUS server and check whether additional\
    \ EAP-Response packets\n   have been received matching the current Identifier\
    \ value.  If so, a\n   new EAP-Response packet, if available, MUST be sent to\
    \ the RADIUS\n   server within an Access-Request, and the EAP-Message attribute(s)\n\
    \   included within the Access-Challenge are silently discarded.  If no\n   EAP-Response\
    \ packet is available, then the EAP-Request encapsulated\n   within the Access-Challenge\
    \ is sent to the peer, and the\n   retransmission timer is reset.\n   In order\
    \ to provide protection against Denial of Service (DoS)\n   attacks, it is advisable\
    \ for the NAS to allocate a finite buffer for\n   EAP packets received from the\
    \ peer, and to discard packets according\n   to an appropriate policy once that\
    \ buffer has been exceeded.  Also,\n   the RADIUS server is advised to permit\
    \ only a modest number of\n   invalid EAP packets within a single session, prior\
    \ to terminating the\n   session with an Access-Reject.  By default a value of\
    \ 5 invalid EAP\n   packets is recommended.\n"
- title: 2.3.  Retransmission
  contents:
  - "2.3.  Retransmission\n   As noted in [RFC2284], if an EAP packet is lost in transit\
    \ between\n   the authenticating peer and the NAS (or vice versa), the NAS will\n\
    \   retransmit.\n   It may be necessary to adjust retransmission strategies and\n\
    \   authentication timeouts in certain cases.  For example, when a token\n   card\
    \ is used additional time may be required to allow the user to\n   find the card\
    \ and enter the token.  Since the NAS will typically not\n   have knowledge of\
    \ the required parameters, these need to be provided\n   by the RADIUS server.\
    \  This can be accomplished by inclusion of\n   Session-Timeout attribute within\
    \ the Access-Challenge packet.\n   If Session-Timeout is present in an Access-Challenge\
    \ packet that also\n   contains an EAP-Message, the value of the Session-Timeout\
    \ is used to\n   set the EAP retransmission timer for that EAP Request, and that\n\
    \   Request alone.  Once the EAP-Request has been sent, the NAS sets the\n   retransmission\
    \ timer, and if it expires without having received an\n   EAP-Response corresponding\
    \ to the Request, then the EAP-Request is\n   retransmitted.\n"
- title: 2.4.  Fragmentation
  contents:
  - "2.4.  Fragmentation\n   Using the EAP-Message attribute, it is possible for the\
    \ RADIUS server\n   to encapsulate an EAP packet that is larger than the MTU on\
    \ the link\n   between the NAS and the peer.  Since it is not possible for the\n\
    \   RADIUS server to use MTU discovery to ascertain the link MTU, the\n   Framed-MTU\
    \ attribute may be included in an Access-Request packet\n   containing an EAP-Message\
    \ attribute so as to provide the RADIUS\n   server with this information.  A RADIUS\
    \ server having received a\n   Framed-MTU attribute in an Access-Request packet\
    \ MUST NOT send any\n   subsequent packet in this EAP conversation containing\
    \ EAP-Message\n   attributes whose values, when concatenated, exceed the length\n\
    \   specified by the Framed-MTU value, taking the link type (specified by\n  \
    \ the NAS-Port-Type attribute) into account.  For example, as noted in\n   [RFC3580]\
    \ Section 3.10, for a NAS-Port-Type value of IEEE 802.11, the\n   RADIUS server\
    \ may send an EAP packet as large as Framed-MTU minus\n   four (4) octets, taking\
    \ into account the additional overhead for the\n   IEEE 802.1X Version (1), Type\
    \ (1) and Body Length (2) fields.\n"
- title: 2.5.  Alternative Uses
  contents:
  - "2.5.  Alternative Uses\n   Currently the conversation between security servers\
    \ and the RADIUS\n   server is often proprietary because of lack of standardization.\
    \  In\n   order to increase standardization and provide interoperability\n   between\
    \ RADIUS vendors and  security vendors, it is recommended that\n   RADIUS- encapsulated\
    \ EAP be used for this conversation.\n   This has the advantage of allowing the\
    \ RADIUS server to support EAP\n   without the need for authentication-specific\
    \ code within the RADIUS\n   server.  Authentication-specific code can then reside\
    \ on a security\n   server instead.\n   In the case where RADIUS-encapsulated\
    \ EAP is used in a conversation\n   between a RADIUS server and a security server,\
    \ the security server\n   will typically return an Access-Accept message without\
    \ inclusion of\n   the expected attributes currently returned in an Access-Accept.\
    \  This\n   means that the RADIUS server MUST add these attributes prior to\n\
    \   sending an Access-Accept message to the NAS.\n"
- title: 2.6.  Usage Guidelines
  contents:
  - '2.6.  Usage Guidelines

    '
- title: 2.6.1.  Identifier Space
  contents:
  - "2.6.1.  Identifier Space\n   In EAP, each session has its own unique Identifier\
    \ space.  RADIUS\n   server implementations MUST be able to distinguish between\
    \ EAP\n   packets with the same Identifier existing within distinct sessions,\n\
    \   originating on the same NAS.  For this purpose, sessions can be\n   distinguished\
    \ based on NAS and session identification attributes.\n   NAS identification attributes\
    \ include NAS-Identifier,\n   NAS-IPv6-Address and NAS-IPv4-Address.  Session\
    \ identification\n   attributes include User-Name, NAS-Port, NAS-Port-Type, NAS-Port-Id,\n\
    \   Called-Station-Id, Calling-Station-Id and Originating-Line-Info.\n"
- title: 2.6.2.  Role Reversal
  contents:
  - "2.6.2.  Role Reversal\n   Since EAP is a peer-to-peer protocol, an independent\
    \ and simultaneous\n   authentication may take place in the reverse direction.\
    \  Both peers\n   may act as authenticators and authenticatees at the same time.\n\
    \   However, role reversal is not supported by this specification.  A\n   RADIUS\
    \ server MUST respond to an Access-Request encapsulating an\n   EAP-Request with\
    \ an Access-Reject.  In order to avoid retransmissions\n   by the peer, the Access-Reject\
    \ SHOULD include an EAP-Response/Nak\n   packet indicating no preferred method,\
    \ encapsulated within\n   EAP-Message attribute(s).\n"
- title: 2.6.3.  Conflicting Messages
  contents:
  - "2.6.3.  Conflicting Messages\n   The NAS MUST make its access control decision\
    \ based solely on the\n   RADIUS Packet Type (Access-Accept/Access-Reject).  The\
    \ access control\n   decision MUST NOT be based on the contents of the EAP packet\n\
    \   encapsulated in one or more EAP-Message attributes, if present.\n   Access-Accept\
    \ packets SHOULD have only one EAP-Message attribute in\n   them, containing EAP\
    \ Success; similarly, Access-Reject packets SHOULD\n   have only one EAP-Message\
    \ attribute in them, containing EAP Failure.\n   Where the encapsulated EAP packet\
    \ does not match the result implied\n   by the RADIUS Packet Type, the combination\
    \ is likely to cause\n   confusion, because the NAS and peer will arrive at different\n\
    \   conclusions as to the outcome of the authentication.\n   For example, if the\
    \ NAS receives an Access-Reject with an\n   encapsulated EAP Success, it will\
    \ not grant access to the peer.\n   However, on receiving the EAP Success, the\
    \ peer will be lead to\n   believe that it authenticated successfully.\n   If\
    \ the NAS receives an Access-Accept with an encapsulated EAP\n   Failure, it will\
    \ grant access to the peer.  However, on receiving an\n   EAP Failure, the peer\
    \ will be lead to believe that it failed\n   authentication.  If no EAP-Message\
    \ attribute is included within an\n   Access-Accept or Access-Reject, then the\
    \ peer may not be informed as\n   to the outcome of the authentication, while\
    \ the NAS will take action\n   to allow or deny access.\n   As described in [RFC2284],\
    \ the EAP Success and Failure packets are\n   not acknowledged, and these packets\
    \ terminate the EAP conversation.\n   As a result, if these packets are encapsulated\
    \ within an\n   Access-Challenge, no response will be received, and therefore\
    \ the NAS\n   will send no further Access-Requests to the RADIUS server for the\n\
    \   session.  As a result, the RADIUS server will not indicate to the NAS\n  \
    \ whether to allow or deny access, while the peer will be informed as\n   to the\
    \ outcome of the authentication.\n   To avoid these conflicts, the following combinations\
    \ SHOULD NOT be\n   sent by a RADIUS server:\n      Access-Accept/EAP-Message/EAP\
    \ Failure\n      Access-Accept/no EAP-Message attribute\n      Access-Accept/EAP-Start\n\
    \      Access-Reject/EAP-Message/EAP Success\n      Access-Reject/no EAP-Message\
    \ attribute\n      Access-Reject/EAP-Start\n      Access-Challenge/EAP-Message/EAP\
    \ Success\n      Access-Challenge/EAP-Message/EAP Failure\n      Access-Challenge/no\
    \ EAP-Message attribute\n      Access-Challenge/EAP-Start\n   Since the responsibility\
    \ for avoiding conflicts lies with the RADIUS\n   server, the NAS MUST NOT \"\
    manufacture\" EAP packets in order to\n   correct contradictory messages that\
    \ it receives.  This behavior,\n   originally mandated within [IEEE8021X], will\
    \ be deprecated in the\n   future.\n"
- title: 2.6.4.  Priority
  contents:
  - "2.6.4.  Priority\n   A RADIUS Access-Accept or Access-Reject packet may contain\
    \ EAP-\n   Message attribute(s). In order to ensure the correct processing of\n\
    \   RADIUS packets, the NAS MUST first process the attributes, including\n   the\
    \ EAP-Message attribute(s), prior to processing the Accept/Reject\n   indication.\n"
- title: 2.6.5.  Displayable Messages
  contents:
  - "2.6.5.  Displayable Messages\n   The Reply-Message attribute, defined in [RFC2865],\
    \ Section 5.18,\n   indicates text which may be displayed to the peer.  This is\
    \ similar\n   in concept to EAP Notification, defined in [RFC2284].  When sending\
    \ a\n   displayable message to a NAS during an EAP conversation, the RADIUS\n\
    \   server MUST encapsulate displayable messages within\n   EAP-Message/EAP-Request/Notification\
    \ attribute(s).  Reply-Message\n   attribute(s) MUST NOT be included in any RADIUS\
    \ message containing an\n   EAP-Message attribute.  An EAP-Message/EAP-Request/Notification\n\
    \   SHOULD NOT be included within an Access-Accept or Access-Reject\n   packet.\n\
    \   In some existing implementations, a NAS receiving Reply-Message\n   attribute(s)\
    \ copies the Text field(s) into the Type-Data field of an\n   EAP-Request/Notification\
    \ packet, fills in the Identifier field, and\n   sends this to the peer.  However,\
    \ several issues arise from this:\n   [1]  Unexpected Responses.  On receiving\
    \ an EAP-Request/Notification,\n        the peer will send an EAP-Response/Notification,\
    \ and the NAS\n        will pass this on to the RADIUS server, encapsulated within\n\
    \        EAP-Message attribute(s).  However, the RADIUS server may not be\n  \
    \      expecting an Access-Request containing an\n        EAP-Message/EAP-Response/Notification\
    \ attribute.\n        For example, consider what happens when a Reply-Message\
    \ is\n        included within an Access-Accept or Access-Reject packet with no\n\
    \        EAP-Message attribute(s) present.  If the value of the\n        Reply-Message\
    \ attribute is copied into the Type-Data of an\n        EAP-Request/Notification\
    \ and sent to the peer, this will result\n        in an Access-Request containing\
    \ an\n        EAP-Message/EAP-Response/Notification attribute being sent by\n\
    \        the NAS to the RADIUS server.  Since an Access-Accept or\n        Access-Reject\
    \ packet terminates the RADIUS conversation, such an\n        Access-Request would\
    \ not be expected, and could be interpreted\n        as the start of another conversation.\n\
    \   [2]  Identifier conflicts.  While the EAP-Request/Notification is an\n   \
    \     EAP packet containing an Identifier field, the Reply-Message\n        attribute\
    \ does not contain an Identifier field.  As a result, a\n        NAS receiving\
    \ a Reply-Message attribute and wishing to translate\n        this to an EAP-Request/Notification\
    \ will need to choose an\n        Identifier value.  It is possible that the chosen\
    \ Identifier\n        value will conflict with a value chosen by the RADIUS server\
    \ for\n        another packet within the EAP conversation, potentially causing\n\
    \        confusion between a new packet and a retransmission.\n   To avoid these\
    \ problems, a NAS receiving a Reply-Message attribute\n   from the RADIUS server\
    \ SHOULD silently discard the attribute, rather\n   than attempting to translate\
    \ it to an EAP Notification Request.\n"
- title: 3.  Attributes
  contents:
  - "3.  Attributes\n   The NAS-Port or NAS-Port-Id attributes SHOULD be included\
    \ by the NAS\n   in Access-Request packets, and either NAS-Identifier, NAS-IP-Address\n\
    \   or NAS-IPv6-Address attributes MUST be included.  In order to permit\n   forwarding\
    \ of the Access-Reply by EAP-unaware proxies, if a User-Name\n   attribute was\
    \ included in an Access-Request, the RADIUS server MUST\n   include the User-Name\
    \ attribute in subsequent Access-Accept packets.\n   Without the User-Name attribute,\
    \ accounting and billing becomes\n   difficult to manage.  The User-Name attribute\
    \ within the Access-\n   Accept packet need not be the same as the User-Name attribute\
    \ in the\n   Access-Request.\n"
- title: 3.1.  EAP-Message
  contents:
  - "3.1.  EAP-Message\n   Description\n      This attribute encapsulates EAP [RFC2284]\
    \ packets so as to allow\n      the NAS to authenticate peers via EAP without\
    \ having to understand\n      the EAP method it is passing through.\n      The\
    \ NAS places EAP messages received from the authenticating peer\n      into one\
    \ or more EAP-Message attributes and forwards them to the\n      RADIUS server\
    \ within an Access-Request message.  If multiple\n      EAP-Message attributes\
    \ are contained within an Access-Request or\n      Access-Challenge packet, they\
    \ MUST be in order and they MUST be\n      consecutive attributes in the Access-Request\
    \ or Access-Challenge\n      packet.  The RADIUS server can return EAP-Message\
    \ attributes in\n      Access-Challenge, Access-Accept and Access-Reject packets.\n\
    \      When RADIUS is used to enable EAP authentication, Access-Request,\n   \
    \   Access-Challenge, Access-Accept, and Access-Reject packets SHOULD\n      contain\
    \ one or more EAP-Message attributes.  Where more than one\n      EAP-Message\
    \ attribute is included, it is assumed that the\n      attributes are to be concatenated\
    \ to form a single EAP packet.\n      Multiple EAP packets MUST NOT be encoded\
    \ within EAP-Message\n      attributes contained within a single Access-Challenge,\n\
    \      Access-Accept, Access-Reject or Access-Request packet.\n      It is expected\
    \ that EAP will be used to implement a variety of\n      authentication methods,\
    \ including methods involving strong\n      cryptography.  In order to prevent\
    \ attackers from subverting EAP\n      by attacking RADIUS/EAP, (for example,\
    \ by modifying EAP Success or\n      EAP Failure packets) it is necessary that\
    \ RADIUS provide\n      per-packet authentication and integrity protection.\n\
    \      Therefore the Message-Authenticator attribute MUST be used to\n      protect\
    \ all Access-Request, Access-Challenge, Access-Accept, and\n      Access-Reject\
    \ packets containing an EAP-Message attribute.\n      Access-Request packets including\
    \ EAP-Message attribute(s) without\n      a Message-Authenticator attribute SHOULD\
    \ be silently discarded by\n      the RADIUS server.  A RADIUS server supporting\
    \ the EAP-Message\n      attribute MUST calculate the correct value of the\n \
    \     Message-Authenticator and MUST silently discard the packet if it\n     \
    \ does not match the value sent.  A RADIUS server not supporting the\n      EAP-Message\
    \ attribute MUST return an Access-Reject if it receives\n      an Access-Request\
    \ containing an EAP-Message attribute.\n      Access-Challenge, Access-Accept,\
    \ or Access-Reject packets\n      including EAP-Message attribute(s) without a\
    \ Message-Authenticator\n      attribute SHOULD be silently discarded by the NAS.\
    \  A NAS\n      supporting the EAP-Message attribute MUST calculate the correct\n\
    \      value of the Message-Authenticator and MUST silently discard the\n    \
    \  packet if it does not match the value sent.\n      A summary of the EAP-Message\
    \ attribute format is shown below.  The\n      fields are transmitted from left\
    \ to right.\n       0                   1                   2\n       0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     Type      |    Length     |     String...\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      79 for EAP-Message\n   Length\n      >= 3\n   String\n      The\
    \ String field contains an EAP packet, as defined in [RFC2284].\n      If multiple\
    \ EAP-Message attributes are present in a packet their\n      values should be\
    \ concatenated; this allows EAP packets longer than\n      253 octets to be transported\
    \ by RADIUS.\n"
- title: 3.2.  Message-Authenticator
  contents:
  - "3.2.  Message-Authenticator\n   Description\n      This attribute MAY be used\
    \ to authenticate and integrity-protect\n      Access-Requests in order to prevent\
    \ spoofing.  It MAY be used in\n      any Access-Request.  It MUST be used in\
    \ any Access-Request,\n      Access-Accept, Access-Reject or Access-Challenge\
    \ that includes an\n      EAP-Message attribute.\n      A RADIUS server receiving\
    \ an Access-Request with a\n      Message-Authenticator attribute present MUST\
    \ calculate the correct\n      value of the Message-Authenticator and silently\
    \ discard the packet\n      if it does not match the value sent.\n      A RADIUS\
    \ client receiving an Access-Accept, Access-Reject or\n      Access-Challenge\
    \ with a Message-Authenticator attribute present\n      MUST calculate the correct\
    \ value of the Message-Authenticator and\n      silently discard the packet if\
    \ it does not match the value sent.\n      This attribute is not required in Access-Requests\
    \ which include\n      the User-Password attribute, but is useful for preventing\
    \ attacks\n      on other types of authentication.  This attribute is intended\
    \ to\n      thwart attempts by an attacker to setup a \"rogue\" NAS, and perform\n\
    \      online dictionary attacks against the RADIUS server.  It does not\n   \
    \   afford protection against \"offline\" attacks where the attacker\n      intercepts\
    \ packets containing (for example) CHAP challenge and\n      response, and performs\
    \ a dictionary attack against those packets\n      offline.\n      A summary of\
    \ the Message-Authenticator attribute format is shown\n      below.  The fields\
    \ are transmitted from left to right.\n       0                   1          \
    \         2\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     Type      |    Length     |     String...\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      80 for Message-Authenticator\n   Length\n      18\n   String\n\
    \      When present in an Access-Request packet, Message-Authenticator is\n  \
    \    an HMAC-MD5 [RFC2104] hash of the entire Access-Request packet,\n      including\
    \ Type, ID, Length and Authenticator, using the shared\n      secret as the key,\
    \ as follows.\n      Message-Authenticator = HMAC-MD5 (Type, Identifier, Length,\n\
    \      Request Authenticator, Attributes)\n      When the message integrity check\
    \ is calculated the signature\n      string should be considered to be sixteen\
    \ octets of zero.\n      For Access-Challenge, Access-Accept, and Access-Reject\
    \ packets,\n      the Message-Authenticator is calculated as follows, using the\n\
    \      Request-Authenticator from the Access-Request this packet is in\n     \
    \ reply to:\n      Message-Authenticator = HMAC-MD5 (Type, Identifier, Length,\n\
    \      Request Authenticator, Attributes)\n      When the message integrity check\
    \ is calculated the signature\n      string should be considered to be sixteen\
    \ octets of zero.  The\n      shared secret is used as the key for the HMAC-MD5\
    \ message\n      integrity check.  The Message-Authenticator is calculated and\n\
    \      inserted in the packet before the Response Authenticator is\n      calculated.\n"
- title: 3.3.  Table of Attributes
  contents:
  - "3.3.  Table of Attributes\n   The following table provides a guide to which attributes\
    \ may be found\n   in packets including EAP-Message attribute(s), and in what\
    \ quantity.\n   The EAP-Message and Message-Authenticator attributes specified\
    \ in\n   this document MUST NOT be present in an Accounting-Request.  If a\n \
    \  table entry is omitted, the values found in [RFC2548], [RFC2865],\n   [RFC2868],\
    \ [RFC2869] and [RFC3162] should be assumed.\n"
- title: 'Request  Accept  Reject  Challenge   #    Attribute'
  contents:
  - 'Request  Accept  Reject  Challenge   #    Attribute

    '
- title: 0-1      0-1     0       0            1   User-Name
  contents:
  - '0-1      0-1     0       0            1   User-Name

    '
- title: 0        0       0       0            2   User-Password [Note 1]
  contents:
  - '0        0       0       0            2   User-Password [Note 1]

    '
- title: 0        0       0       0            3   CHAP-Password [Note 1]
  contents:
  - '0        0       0       0            3   CHAP-Password [Note 1]

    '
- title: 0        0       0       0           18   Reply-Message
  contents:
  - '0        0       0       0           18   Reply-Message

    '
- title: 0        0       0       0           60   CHAP-Challenge
  contents:
  - '0        0       0       0           60   CHAP-Challenge

    '
- title: 0        0       0       0           70   ARAP-Password [Note 1]
  contents:
  - '0        0       0       0           70   ARAP-Password [Note 1]

    '
- title: 0        0       0       0           75   Password-Retry
  contents:
  - '0        0       0       0           75   Password-Retry

    '
- title: 1+       1+      1+      1+          79   EAP-Message [Note 1]
  contents:
  - '1+       1+      1+      1+          79   EAP-Message [Note 1]

    '
- title: 1        1       1       1           80   Message-Authenticator [Note 1]
  contents:
  - '1        1       1       1           80   Message-Authenticator [Note 1]

    '
- title: 0-1      0       0       0           94   Originating-Line-Info [Note 3]
  contents:
  - '0-1      0       0       0           94   Originating-Line-Info [Note 3]

    '
- title: 0        0       0-1     0-1        101   Error-Cause [Note 2]
  contents:
  - '0        0       0-1     0-1        101   Error-Cause [Note 2]

    '
- title: 'Request  Accept  Reject  Challenge   #    Attribute'
  contents:
  - "Request  Accept  Reject  Challenge   #    Attribute\n   [Note 1] An Access-Request\
    \ that contains either a User-Password or\n   CHAP-Password or ARAP-Password or\
    \ one or more EAP-Message attributes\n   MUST NOT contain more than one type of\
    \ those four attributes.  If it\n   does not contain any of those four attributes,\
    \ it SHOULD contain a\n   Message-Authenticator.  If any packet type contains\
    \ an EAP-Message\n   attribute it MUST also contain a Message-Authenticator. \
    \ A RADIUS\n   server receiving an Access-Request not containing any of those\
    \ four\n   attributes and also not containing a Message-Authenticator attribute\n\
    \   SHOULD silently discard it.\n   [Note 2] The Error-Cause attribute is defined\
    \ in [RFC3576].\n   [Note 3] The Originating-Line-Info attribute is defined in\
    \ [NASREQ].\n   The following table defines the meaning of the above table entries.\n\
    \   0     This attribute MUST NOT be present.\n   0+    Zero or more instances\
    \ of this attribute MAY be present.\n   0-1   Zero or one instance of this attribute\
    \ MAY be present.\n   1     Exactly one instance of this attribute MUST be present.\n\
    \   1+    One or more of these attributes MUST be present.\n"
- title: 4.  Security Considerations
  contents:
  - '4.  Security Considerations

    '
- title: 4.1.  Security Requirements
  contents:
  - "4.1.  Security Requirements\n   RADIUS/EAP is used in order to provide authentication\
    \ and\n   authorization for network access.  As a result, both the RADIUS and\n\
    \   EAP portions of the conversation are potential targets of an attack.\n   Threats\
    \ are discussed in [RFC2607], [RFC2865], and [RFC3162].\n   Examples include:\n\
    \   [1]  An adversary may attempt to acquire confidential data and\n        identities\
    \ by snooping RADIUS packets.\n   [2]  An adversary may attempt to modify packets\
    \ containing RADIUS\n        messages.\n   [3]  An adversary may attempt to inject\
    \ packets into a RADIUS\n        conversation.\n   [4]  An adversary may launch\
    \ a dictionary attack against the RADIUS\n        shared secret.\n   [5]  An adversary\
    \ may launch a known plaintext attack, hoping to\n        recover the key stream\
    \ corresponding to a Request Authenticator.\n   [6]  An adversary may attempt\
    \ to replay a RADIUS exchange.\n   [7]  An adversary may attempt to disrupt the\
    \ EAP negotiation, in\n        order to weaken the authentication, or gain access\
    \ to peer\n        passwords.\n   [8]  An authenticated NAS may attempt to forge\
    \ NAS or session\n        identification attributes,\n   [9]  A rogue (unauthenticated)\
    \ NAS may attempt to impersonate a\n        legitimate NAS.\n   [10] An attacker\
    \ may attempt to act as a man-in-the-middle.\n   To address these threats, it\
    \ is necessary to support confidentiality,\n   data origin authentication, integrity,\
    \ and replay protection on a\n   per-packet basis.  Bi-directional authentication\
    \ between the RADIUS\n   client and server also needs to be provided.  There is\
    \ no requirement\n   that the identities of RADIUS clients and servers be kept\n\
    \   confidential (e.g., from a passive eavesdropper).\n"
- title: 4.2.  Security Protocol
  contents:
  - "4.2.  Security Protocol\n   To address the security vulnerabilities of RADIUS/EAP,\n\
    \   implementations of this specification SHOULD support IPsec [RFC2401]\n   along\
    \ with IKE [RFC2409] for key management.  IPsec ESP [RFC2406]\n   with non-null\
    \ transform SHOULD be supported, and IPsec ESP with a\n   non-null encryption\
    \ transform and authentication support SHOULD be\n   used to provide per-packet\
    \ confidentiality, authentication, integrity\n   and replay protection.  IKE SHOULD\
    \ be used for key management.\n   Within RADIUS [RFC2865], a shared secret is\
    \ used for hiding of\n   attributes such as User-Password, as well as in computation\
    \ of the\n   Response Authenticator.  In RADIUS accounting [RFC2866], the shared\n\
    \   secret is used in computation of both the Request Authenticator and\n   the\
    \ Response Authenticator.\n   Since in RADIUS a shared secret is used to provide\
    \ confidentiality as\n   well as integrity protection and authentication, only\
    \ use of IPsec\n   ESP with a non-null transform can provide security services\n\
    \   sufficient to substitute for RADIUS application-layer security.\n   Therefore,\
    \ where IPSEC AH or ESP null is used, it will typically\n   still be necessary\
    \ to configure a RADIUS shared secret.\n   Where RADIUS is run over IPsec ESP\
    \ with a non-null transform, the\n   secret shared between the NAS and the RADIUS\
    \ server MAY NOT be\n   configured.  In this case, a shared secret of zero length\
    \ MUST be\n   assumed.  However, a RADIUS server that cannot know whether incoming\n\
    \   traffic is IPsec-protected MUST be configured with a non-null RADIUS\n   shared\
    \ secret.\n   When IPsec ESP is used with RADIUS, per-packet authentication,\n\
    \   integrity and replay protection MUST be used.  3DES-CBC MUST be\n   supported\
    \ as an encryption transform and AES-CBC SHOULD be supported.\n   AES-CBC SHOULD\
    \ be offered as a preferred encryption transform if\n   supported.  HMAC-SHA1-96\
    \ MUST be supported as an authentication\n   transform.  DES-CBC SHOULD NOT be\
    \ used as the encryption transform.\n   A typical IPsec policy for an IPsec-capable\
    \ RADIUS client is\n   \"Initiate IPsec, from me to any destination port UDP 1812\"\
    .  This\n   causes an IPsec SA to be set up by the RADIUS client prior to sending\n\
    \   RADIUS traffic.  If some RADIUS servers contacted by the client do\n   not\
    \ support IPsec, then a more granular policy will be required:\n   \"Initiate\
    \ IPsec, from me to IPsec-Capable-RADIUS-Server, destination\n   port UDP 1812\"\
    .\n   For an IPsec-capable RADIUS server, a typical IPsec policy is \"Accept\n\
    \   IPsec, from any to me, destination port 1812\".  This causes the\n   RADIUS\
    \ server to accept (but not require) use of IPsec.  It may not\n   be appropriate\
    \ to require IPsec for all RADIUS clients connecting to\n   an IPsec-enabled RADIUS\
    \ server, since some RADIUS clients may not\n   support IPsec.\n   Where IPsec\
    \ is used for security, and no RADIUS shared secret is\n   configured, it is important\
    \ that the RADIUS client and server perform\n   an authorization check.  Before\
    \ enabling a host to act as a RADIUS\n   client, the RADIUS server SHOULD check\
    \ whether the host is authorized\n   to provide network access.  Similarly, before\
    \ enabling a host to act\n   as a RADIUS server, the RADIUS client SHOULD check\
    \ whether the host\n   is authorized for that role.\n   RADIUS servers can be\
    \ configured with the IP addresses (for IKE\n   Aggressive Mode with pre-shared\
    \ keys) or FQDNs (for certificate\n   authentication) of RADIUS clients.  Alternatively,\
    \ if a separate\n   Certification Authority (CA) exists for RADIUS clients, then\
    \ the\n   RADIUS server can configure this CA as a trust anchor [RFC3280] for\n\
    \   use with IPsec.\n   Similarly, RADIUS clients can be configured with the IP\
    \ addresses\n   (for IKE Aggressive Mode with pre-shared keys) or FQDNs (for\n\
    \   certificate authentication) of RADIUS servers.  Alternatively, if a\n   separate\
    \ CA exists for RADIUS servers, then the RADIUS client can\n   configure this\
    \ CA as a trust anchor for use with IPsec.\n   Since unlike SSL/TLS, IKE does\
    \ not permit certificate policies to be\n   set on a per-port basis, certificate\
    \ policies need to apply to all\n   uses of IPsec on RADIUS clients and servers.\
    \  In IPsec deployments\n   supporting only certificate authentication, a management\
    \ station\n   initiating an IPsec-protected telnet session to the RADIUS server\n\
    \   would need to obtain a certificate chaining to the RADIUS client CA.\n   Issuing\
    \ such a certificate might not be appropriate if the management\n   station was\
    \ not authorized as a RADIUS client.\n   Where RADIUS clients may obtain their\
    \ IP address dynamically (such as\n   an Access Point supporting DHCP), IKE Main\
    \ Mode with pre-shared keys\n   [RFC2409] SHOULD NOT be used, since this requires\
    \ use of a group\n   pre-shared key; instead, Aggressive Mode SHOULD be used.\
    \  IKEv2, a\n   work in progress, may address this issue in the future.  Where\
    \ RADIUS\n   client addresses are statically assigned, either Aggressive Mode\
    \ or\n   Main Mode MAY be used.  With certificate authentication, Main Mode\n\
    \   SHOULD be used.\n   Care needs to be taken with IKE Phase 1 Identity Payload\
    \ selection in\n   order to enable mapping of identities to pre-shared keys even\
    \ with\n   Aggressive Mode.  Where the ID_IPV4_ADDR or ID_IPV6_ADDR Identity\n\
    \   Payloads are used and addresses are dynamically assigned, mapping of\n   identities\
    \ to keys is not possible, so that group pre-shared keys are\n   still a practical\
    \ necessity.  As a result, the ID_FQDN identity\n   payload SHOULD be employed\
    \ in situations where Aggressive mode is\n   utilized along with pre-shared keys\
    \ and IP addresses are dynamically\n   assigned.  This approach also has other\
    \ advantages, since it allows\n   the RADIUS server and client to configure themselves\
    \ based on the\n   fully qualified domain name of their peers.\n   Note that with\
    \ IPsec, security services are negotiated at the\n   granularity of an IPsec SA,\
    \ so that RADIUS exchanges requiring a set\n   of security services different\
    \ from those negotiated with existing\n   IPsec SAs will need to negotiate a new\
    \ IPsec SA.  Separate IPsec SAs\n   are also advisable where quality of service\
    \ considerations dictate\n   different handling RADIUS conversations.  Attempting\
    \ to apply\n   different quality of service to connections handled by the same\
    \ IPsec\n   SA can result in reordering, and falling outside the replay window.\n\
    \   For a discussion of the issues, see [RFC2983].\n"
- title: 4.3.  Security Issues
  contents:
  - "4.3.  Security Issues\n   This section provides more detail on the vulnerabilities\
    \ identified\n   in Section 4.1., and how they may be mitigated.  Vulnerabilities\n\
    \   include:\n   Privacy issues\n   Spoofing and hijacking\n   Dictionary attacks\n\
    \   Known plaintext attacks\n   Replay attacks\n   Negotiation attacks\n   Impersonation\n\
    \   Man in the middle attacks\n   Separation of authenticator and authentication\
    \ server\n   Multiple databases\n"
- title: 4.3.1.  Privacy Issues
  contents:
  - "4.3.1.  Privacy Issues\n   Since RADIUS messages may contain the User-Name attribute\
    \ as well as\n   NAS-IP-Address or NAS-Identifier attributes, an attacker snooping\
    \ on\n   RADIUS traffic may be able to determine the geographic location of\n\
    \   peers in real time.  In wireless networks, it is often assumed that\n   RADIUS\
    \ traffic is physically secure, since it typically travels over\n   the wired\
    \ network and that this limits the release of location\n   information.\n   However,\
    \ it is possible for an authenticated attacker to spoof ARP\n   packets [RFC826]\
    \ so as to cause diversion of RADIUS traffic onto the\n   wireless network.  In\
    \ this way an attacker may obtain RADIUS packets\n   from which it can glean peer\
    \ location information, or which it can\n   subject to a known plaintext or offline\
    \ dictionary attack.  To\n   address these vulnerabilities, implementations of\
    \ this specification\n   SHOULD use IPsec ESP with non-null transform and per-packet\n\
    \   encryption, authentication, integrity and replay protection to\n   protect\
    \ both RADIUS authentication [RFC2865] and accounting [RFC2866]\n   traffic, as\
    \ described in Section 4.2.\n"
- title: 4.3.2.  Spoofing and Hijacking
  contents:
  - "4.3.2.  Spoofing and Hijacking\n   Access-Request packets with a User-Password\
    \ attribute establish the\n   identity of both the user and the NAS sending the\
    \ Access-Request,\n   because of the way the shared secret between the NAS and\
    \ RADIUS\n   server is used.  Access-Request packets with CHAP-Password or\n \
    \  EAP-Message attributes do not have a User-Password attribute.  As a\n   result,\
    \ the Message-Authenticator attribute SHOULD be used in\n   Access-Request packets\
    \ that do not have a User-Password attribute, in\n   order to establish the identity\
    \ of the NAS sending the request.\n   An attacker may attempt to inject packets\
    \ into the conversation\n   between the NAS and the RADIUS server, or between\
    \ the RADIUS server\n   and the security server.  RADIUS [RFC2865] does not support\n\
    \   encryption other than attribute hiding.  As described in [RFC2865],\n   only\
    \ Access-Reply and Access-Challenge packets are integrity\n   protected.  Moreover,\
    \ the per-packet authentication and integrity\n   protection mechanism described\
    \ in [RFC2865] has known weaknesses\n   [MD5Attack], making it a tempting target\
    \ for attackers looking to\n   subvert RADIUS/EAP.\n   To provide stronger security,\
    \ the Message-Authenticator attribute\n   MUST be used in all RADIUS packets containing\
    \ an EAP-Message\n   attribute.  Implementations of this specification SHOULD\
    \ use IPsec\n   ESP with non-null transform and per-packet encryption,\n   authentication,\
    \ integrity and replay protection, as described in\n   Section 4.2.\n"
- title: 4.3.3.  Dictionary Attacks
  contents:
  - "4.3.3.  Dictionary Attacks\n   The RADIUS shared secret is vulnerable to offline\
    \ dictionary attack,\n   based on capture of the Response Authenticator or\n \
    \  Message-Authenticator attribute.  In order to decrease the level of\n   vulnerability,\
    \ [RFC2865] recommends:\n      The secret (password shared between the client\
    \ and the RADIUS\n      server) SHOULD be at least as large and unguessable as\
    \ a\n      well-chosen password.  It is preferred that the secret be at least\n\
    \      16 octets.\n   The risk of an offline dictionary attack can be further\
    \ reduced by\n   employing IPsec ESP with non-null transform in order to encrypt\
    \ the\n   RADIUS conversation, as described in Section 4.2.\n"
- title: 4.3.4.  Known Plaintext Attacks
  contents:
  - "4.3.4.  Known Plaintext Attacks\n   Since EAP [RFC2284] does not support PAP,\
    \ the RADIUS User-Password\n   attribute is not used to carry hidden user passwords\
    \ within\n   RADIUS/EAP conversations.  The User-Password hiding mechanism,\n\
    \   defined in [RFC2865] utilizes MD5, defined in [RFC1321], in order to\n   generate\
    \ a key stream based on the RADIUS shared secret and the\n   Request  Authenticator.\
    \  Where PAP is in use, it is possible to\n   collect key streams corresponding\
    \ to a given Request Authenticator\n   value, by capturing RADIUS conversations\
    \ corresponding to a PAP\n   authentication attempt, using a known password. \
    \ Since the\n   User-Password is known, the key stream corresponding to a given\n\
    \   Request Authenticator can be determined and stored.\n   Since the key stream\
    \ may have been determined previously from a known\n   plaintext attack, if the\
    \ Request Authenticator repeats, attributes\n   encrypted using the RADIUS attribute\
    \ hiding mechanism should be\n   considered compromised.  In addition to the User-Password\
    \ attribute,\n   which is not used with EAP, this includes attributes such as\n\
    \   Tunnel-Password [RFC2868, section 3.5] and MS-MPPE-Send-Key and\n   MS-MPPE-Recv-Key\
    \ attributes [RFC2548, section 2.4], which include a\n   Salt field as part of\
    \ the hiding algorithm.\n   To avoid this, [RFC2865], Section 3 advises:\n   \
    \   Since it is expected that the same secret MAY be used to\n      authenticate\
    \ with servers in disparate geographic regions, the\n      Request Authenticator\
    \ field SHOULD exhibit global and temporal\n      uniqueness.\n   Where the Request\
    \ Authenticator repeats, the Salt field defined in\n   [RFC2548], Section 2.4\
    \ does not provide protection against\n   compromise.  This is because MD5 [RFC1321],\
    \ rather than HMAC-MD5\n   [RFC2104], is used to generate the key stream, which\
    \ is calculated\n   from the 128-bit RADIUS shared secret (S), the  128-bit Request\n\
    \   Authenticator (R), and the Salt field (A), using the formula b(1) =\n   MD5(S\
    \ + R + A).  Since the Salt field is placed at the end, if the\n   Request Authenticator\
    \ were to repeat on a network where PAP is in\n   use, then the salted keystream\
    \ could be calculated from the\n   User-Password keystream by continuing the MD5\
    \ calculation based on\n   the Salt field (A), which is sent in the clear.\n \
    \  Even though EAP does not support PAP authentication, a security\n   vulnerability\
    \ can still exist where the same RADIUS shared secret is\n   used for hiding User-Password\
    \ as well as other attributes.  This can\n   occur, for example, if the same RADIUS\
    \ proxy handles authentication\n   requests for both EAP and PAP.\n   The threat\
    \ can be mitigated by protecting RADIUS with IPsec ESP with\n   non-null transform,\
    \ as described in Section 4.2.  Where RADIUS shared\n   secrets are configured,\
    \ the RADIUS shared secret used by a NAS\n   supporting EAP MUST NOT be reused\
    \ by a NAS utilizing the\n   User-Password attribute, since improper shared secret\
    \ hygiene could\n   lead to compromise of hidden attributes.\n"
- title: 4.3.5.  Replay Attacks
  contents:
  - "4.3.5.  Replay Attacks\n   The RADIUS protocol provides only limited support\
    \ for replay\n   protection.  RADIUS Access-Requests include liveness via the\
    \ 128-bit\n   Request Authenticator.  However, the Request Authenticator is not\
    \ a\n   replay counter.  Since RADIUS servers may not maintain a cache of\n  \
    \ previous Request Authenticators, the Request Authenticator does not\n   provide\
    \ replay protection.\n   RADIUS accounting [RFC2866] does not support replay protection\
    \ at the\n   protocol level.  Due to the need to support failover between RADIUS\n\
    \   accounting servers, protocol-based replay protection is not\n   sufficient\
    \ to prevent duplicate accounting records.  However, once\n   accepted by the\
    \ accounting server, duplicate accounting records can\n   be detected by use of\
    \ the the Acct-Session-Id [RFC2866, section 5.5]\n   and Event-Timestamp [RFC2869,\
    \ section 5.3] attributes.\n   Unlike RADIUS authentication, RADIUS accounting\
    \ does not use the\n   Request Authenticator as a nonce.  Instead, the Request\
    \ Authenticator\n   contains an MD5 hash calculated over the Code, Identifier,\
    \ Length,\n   and request attributes of the Accounting Request packet, plus the\n\
    \   shared secret.  The Response Authenticator also contains an MD5 hash\n   calculated\
    \ over the Code, Identifier and Length, the Request\n   Authenticator field from\
    \ the Accounting-Request packet being replied\n   to, the response attributes\
    \ and the shared secret.\n   Since the Accounting Response Authenticator depends\
    \ in part on the\n   Accounting Request Authenticator, it is not possible to replay\
    \ an\n   Accounting-Response unless the Request Authenticator repeats.  While\n\
    \   it is possible to utilize EAP methods such as EAP TLS [RFC2716] which\n  \
    \ include liveness checks on both sides, not all EAP messages will\n   include\
    \ liveness so that this provides incomplete protection.\n   Strong replay protection\
    \ for RADIUS authentication and accounting can\n   be provided by enabling IPsec\
    \ replay protection with RADIUS, as\n   described in Section 4.2.\n"
- title: 4.3.6.  Negotiation Attacks
  contents:
  - "4.3.6.  Negotiation Attacks\n   In a negotiation attack a rogue NAS, tunnel server,\
    \ RADIUS proxy or\n   RADIUS server attempts to cause the authenticating peer\
    \ to choose a\n   less secure authentication method.  For example, a session that\
    \ would\n   normally be authenticated with EAP would instead be authenticated\
    \ via\n   CHAP or PAP; alternatively, a connection that would normally be\n  \
    \ authenticated via a more secure EAP method such as EAP-TLS [RFC2716]\n   might\
    \ be made to occur via a less secure EAP method, such as\n   MD5-Challenge.  The\
    \ threat posed by rogue devices, once thought to be\n   remote, has gained currency\
    \ given compromises of telephone company\n   switching systems, such as those\
    \ described in [Masters].\n   Protection against negotiation attacks requires\
    \ the elimination of\n   downward negotiations.  The RADIUS exchange may be further\
    \ protected\n   by use of IPsec, as described in Section 4.2.  Alternatively,\
    \ where\n   IPsec is not used, the vulnerability can be mitigated via\n   implementation\
    \ of per-connection policy on the part of the\n   authenticating peer, and per-peer\
    \ policy on the part of the RADIUS\n   server.  For the authenticating peer, authentication\
    \ policy should be\n   set on a per-connection basis.  Per-connection policy allows\
    \ an\n   authenticating peer to negotiate a strong EAP method when connecting\n\
    \   to one service, while negotiating a weaker EAP method for another\n   service.\n\
    \   With per-connection policy, an authenticating peer will only attempt\n   to\
    \ negotiate EAP for a session in which EAP support is expected.  As\n   a result,\
    \ there is a presumption that an authenticating peer\n   selecting EAP requires\
    \ that level of security.  If it cannot be\n   provided, it is likely that there\
    \ is some kind of misconfiguration,\n   or even that the authenticating peer is\
    \ contacting the wrong server.\n   Should the NAS not be able to negotiate EAP,\
    \ or should the\n   EAP-Request sent by the NAS be of a different EAP type than\
    \ what is\n   expected, the authenticating peer MUST disconnect.  An authenticating\n\
    \   peer expecting EAP to be negotiated for a session MUST NOT negotiate\n   a\
    \ weaker method, such as CHAP or PAP.  In wireless networks, the\n   service advertisement\
    \ itself may be spoof-able, so that an attacker\n   could fool the peer into negotiating\
    \ an authentication method\n   suitable for a less secure network.\n   For a NAS,\
    \ it may not be possible to determine whether a peer is\n   required to authenticate\
    \ with EAP until the peer's identity is known.\n   For example, for shared-uses\
    \ NASes it is possible for one reseller to\n   implement EAP while another does\
    \ not.  Alternatively, some peer might\n   be authenticated locally by the NAS\
    \ while other peers are\n   authenticated via RADIUS.  In such cases, if any peers\
    \ of the NAS\n   MUST do EAP, then the NAS MUST attempt to negotiate EAP for every\n\
    \   session.  This avoids forcing a peer to support more than one\n   authentication\
    \ type, which could weaken security.\n   If CHAP is negotiated, the NAS will pass\
    \ the User-Name and\n   CHAP-Password attributes to the RADIUS server in an Access-Request\n\
    \   packet.  If the peer is not required to use EAP, then the RADIUS\n   server\
    \ will respond with an Access-Accept or Access-Reject packet as\n   appropriate.\
    \  However, if CHAP has been negotiated but EAP is\n   required, the RADIUS server\
    \ MUST respond with an Access-Reject,\n   rather than an Access-Challenge/EAP-Message/EAP-Request\
    \ packet.  The\n   authenticating peer MUST refuse to renegotiate authentication,\
    \ even\n   if the renegotiation is from CHAP to EAP.\n   If EAP is negotiated\
    \ but is not supported by the RADIUS proxy or\n   server, then the server or proxy\
    \ MUST respond with an Access-Reject.\n   In these cases, a PPP NAS MUST send\
    \ an LCP-Terminate and disconnect\n   the peer.  This is the correct behavior\
    \ since the authenticating peer\n   is expecting EAP to be negotiated, and that\
    \ expectation cannot be\n   fulfilled.  An EAP-capable authenticating peer MUST\
    \ refuse to\n   renegotiate the authentication protocol if EAP had initially been\n\
    \   negotiated.  Note that problems with a non-EAP capable RADIUS proxy\n   could\
    \ prove difficult to diagnose, since a peer connecting from one\n   location (with\
    \ an EAP-capable proxy) might be able to successfully\n   authenticate via EAP,\
    \ while the same peer connecting at another\n   location (and encountering an\
    \ EAP-incapable proxy) might be\n   consistently disconnected.\n"
- title: 4.3.7.  Impersonation
  contents:
  - "4.3.7.  Impersonation\n   [RFC2865] Section 3 states:\n      A RADIUS server\
    \ MUST use the source IP address of the RADIUS UDP\n      packet to decide which\
    \ shared secret to use, so that RADIUS\n      requests can be proxied.\n   When\
    \ RADIUS requests are forwarded by a proxy, the NAS-IP-Address or\n   NAS-IPv6-Address\
    \ attributes may not match the source address.  Since\n   the NAS-Identifier attribute\
    \ need not contain an FQDN, this attribute\n   also may not correspond to the\
    \ source address, even indirectly, with\n   or without a proxy present.\n   As\
    \ a result, the authenticity check performed by a RADIUS server or\n   proxy does\
    \ not verify the correctness of NAS identification\n   attributes.  This makes\
    \ it possible for a rogue NAS to forge\n   NAS-IP-Address, NAS-IPv6-Address or\
    \ NAS-Identifier attributes within\n   a RADIUS Access-Request in order to impersonate\
    \ another NAS.  It is\n   also possible for a rogue NAS to forge session identification\n\
    \   attributes such as Called-Station-Id, Calling-Station-Id, and\n   Originating-Line-Info.\n\
    \   This could fool the RADIUS server into subsequently sending\n   Disconnect\
    \ or CoA-Request messages [RFC3576] containing forged\n   session identification\
    \ attributes to a NAS targeted by an attacker.\n   To address these vulnerabilities\
    \ RADIUS proxies SHOULD check whether\n   NAS identification attributes (NAS-IP-Address,\
    \ NAS-IPv6-Address,\n   NAS-Identifier) match the source address of packets originating\
    \ from\n   the NAS.  Where a match is not found, an Access-Reject SHOULD be\n\
    \   sent, and an error SHOULD be logged.\n   However, such a check may not always\
    \ be possible.  Since the\n   NAS-Identifier attribute need not correspond to\
    \ an FQDN, it may not\n   be resolvable to an IP address to be matched against\
    \ the source\n   address.  Also, where a NAT exists between the RADIUS client\
    \ and\n   proxy, checking the NAS-IP-Address or NAS-IPv6-Address attributes may\n\
    \   not be feasible.\n   To allow verification of NAS and session identification\
    \ parameters,\n   EAP methods can support the secure exchange of these parameters\n\
    \   between the EAP peer and EAP server.  NAS identification attributes\n   include\
    \ NAS-IP-Address, NAS-IPv6-Address and Called-Station-Id;\n   session identification\
    \ attributes include User-Name and\n   Calling-Station-Id.  The secure exchange\
    \ of these parameters between\n   the EAP peer and server enables the RADIUS server\
    \ to check whether\n   the attributes provided by the NAS match those provided\
    \ by the peer;\n   similarly, the peer can check the parameters provided by the\
    \ NAS\n   against those provided by the EAP server.  This enables detection of\n\
    \   a rogue NAS.\n"
- title: 4.3.8.  Man in the Middle Attacks
  contents:
  - "4.3.8.  Man in the Middle Attacks\n   RADIUS only provides security on a hop-by-hop\
    \ basis, even where IPsec\n   is used.  As a result, an attacker gaining control\
    \ of a RADIUS proxy\n   could attempt to modify EAP packets in transit.  To protect\
    \ against\n   this, EAP methods SHOULD incorporate their own per-packet integrity\n\
    \   protection and authentication mechanisms.\n"
- title: 4.3.9.  Separation of Authenticator and Authentication Server
  contents:
  - "4.3.9.  Separation of Authenticator and Authentication Server\n   As noted in\
    \ [RFC2716], it is possible for the EAP peer and\n   authenticator to mutually\
    \ authenticate, and derive a Master Session\n   Key (MSK) for a ciphersuite used\
    \ to protect subsequent data traffic.\n   This does not present an issue on the\
    \ peer, since the peer and EAP\n   client reside on the same machine; all that\
    \ is required is for the\n   EAP client module to derive and pass a Transient\
    \ Session Key (TSK) to\n   the ciphersuite module.\n   The situation is more complex\
    \ when EAP is used with RADIUS, since the\n   authenticator and authentication\
    \ server may not reside on the same\n   host.\n   In the case where the authenticator\
    \ and authentication server reside\n   on different machines, there are several\
    \ implications for security.\n   First, mutual authentication will occur between\
    \ the peer and the\n   authentication server, not between the peer and the authenticator.\n\
    \   This means that it is not possible for the peer to validate the\n   identity\
    \ of the NAS or tunnel server that it is speaking to, using\n   EAP alone.\n \
    \  As described in Section 4.2, when RADIUS/EAP is used to encapsulate\n   EAP\
    \ packets, IPsec SHOULD be used to provide per-packet\n   authentication, integrity,\
    \ replay protection and confidentiality.\n   The Message-Authenticator attribute\
    \ is also required in RADIUS\n   Access-Requests containing an EAP-Message attribute\
    \ sent from the NAS\n   or tunnel server to the RADIUS server.  Since the\n  \
    \ Message-Authenticator attribute involves an HMAC-MD5 message\n   integrity check,\
    \ it is possible for the RADIUS server to verify the\n   integrity of the Access-Request\
    \ as well as the NAS or tunnel server's\n   identity, even where IPsec is not\
    \ used.  Similarly, Access-Challenge\n   packets containing an EAP-Message attribute\
    \ sent from the RADIUS\n   server to the NAS are also authenticated and integrity\
    \ protected\n   using an HMAC-MD5 message integrity check, enabling the NAS or\
    \ tunnel\n   server to determine the integrity of the packet and verify the\n\
    \   identity of the RADIUS server, even where IPsec is not used.\n   Moreover,\
    \ EAP packets sent using methods that contain their own\n   integrity protection\
    \ cannot be successfully modified by a rogue NAS\n   or tunnel server.\n   The\
    \ second issue that arises where the authenticator and\n   authentication server\
    \ reside on separate hosts is that the EAP Master\n   Session Key (MSK) negotiated\
    \ between the peer and authentication\n   server will need to be transmitted to\
    \ the authenticator.  Therefore a\n   mechanism needs to be provided to transmit\
    \ the MSK from the\n   authentication server to the NAS or tunnel server that\
    \ needs it.  The\n   specification of the key transport and wrapping mechanism\
    \ is outside\n   the scope of this document.  However, it is expected that the\n\
    \   wrapping mechanism will provide confidentiality, integrity and replay\n  \
    \ protection, and data origin authentication.\n"
- title: 4.3.10.  Multiple Databases
  contents:
  - "4.3.10.  Multiple Databases\n   In many cases a security server will be deployed\
    \ along with a RADIUS\n   server in order to provide EAP services.  Unless the\
    \ security server\n   also functions as a RADIUS server, two separate user databases\
    \ will\n   exist, each containing information about the security requirements\n\
    \   for the user.  This represents a weakness, since security may be\n   compromised\
    \ by a successful attack on either of the servers, or their\n   databases.  With\
    \ multiple user databases, adding a new user may\n   require multiple operations,\
    \ increasing the chances for error.  The\n   problems are further magnified in\
    \ the case where user information is\n   also being kept in an LDAP server.  In\
    \ this case, three stores of\n   user information may exist.\n   In order to address\
    \ these threats, consolidation of databases is\n   recommended.  This can be achieved\
    \ by having both the RADIUS server\n   and security server store information in\
    \ the same database; by having\n   the security server provide a full RADIUS implementation;\
    \ or by\n   consolidating both the  security server and the RADIUS server onto\n\
    \   the same machine.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   This specification does not create any new registries,\
    \ or define any\n   new RADIUS attributes or values.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC1321]      Rivest, R., \"The MD5 Message-Digest\
    \ Algorithm\", RFC\n                  1321, April 1992.\n   [RFC2104]      Krawczyk,\
    \ H., Bellare, M. and R. Canetti, \"HMAC:\n                  Keyed-Hashing for\
    \ Message Authentication\", RFC 2104,\n                  February 1997.\n   [RFC2119]\
    \      Bradner, S., \"Key words for use in RFCs to Indicate\n                \
    \  Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2279]      Yergeau,\
    \ F., \"UTF-8, a transformation format of ISO\n                  10646\", RFC\
    \ 2279, January 1998.\n   [RFC2284]      Blunk, L. and J. Vollbrecht, \"PPP Extensible\n\
    \                  Authentication Protocol (EAP)\", RFC 2284, March 1998.\n  \
    \ [RFC2401]      Atkinson, R. and S. Kent, \"Security Architecture for\n     \
    \             the Internet Protocol\", RFC 2401, November 1998.\n   [RFC2406]\
    \      Kent, S. and R. Atkinson, \"IP Encapsulating Security\n               \
    \   Payload (ESP)\", RFC 2406, November 1998.\n   [RFC2409]      Harkins, D. and\
    \ D. Carrel, \"The Internet Key Exchange\n                  (IKE)\", RFC 2409,\
    \ November 1998.\n   [RFC2486]      Aboba, B. and M. Beadles, \"The Network Access\n\
    \                  Identifier\", RFC 2486, January 1999.\n   [RFC2865]      Rigney,\
    \ C., Willens, S., Rubens, A. and W. Simpson,\n                  \"Remote Authentication\
    \ Dial In User Service (RADIUS)\",\n                  RFC 2865, June 2000.\n \
    \  [RFC2988]      Paxson, V. and M. Allman, \"Computing TCP's\n              \
    \    Retransmission Timer\", RFC 2988, November 2000.\n   [RFC3162]      Aboba,\
    \ B., Zorn, G. and D. Mitton, \"RADIUS and IP6\",\n                  RFC 3162,\
    \ August 2001.\n   [RFC3280]      Housley, R., Polk, W., Ford, W. and D. Solo,\
    \ \"Internet\n                  X.509 Public Key Infrastructure Certificate and\n\
    \                  Certificate Revocation List (CRL) Profile\", RFC 3280,\n  \
    \                April 2002.\n   [RFC3576]      Chiba, M., Dommety, G., Eklund,\
    \ M., Mitton, D. and B.\n                  Aboba, \"Dynamic Authorization Extensions\
    \ to Remote\n                  Authentication Dial In User Service (RADIUS)\"\
    , RFC\n                  3576, July 2003.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [RFC826]       Plummer, D., \"An Ethernet Address\
    \ Resolution\n                  Protocol\", STD 37, RFC 826, November 1982.\n\
    \   [RFC1510]      Kohl, J. and C. Neuman, \"The Kerberos Network\n          \
    \        Authentication Service (V5)\", RFC 1510, September\n                \
    \  1993.\n   [RFC1661]      Simpson, W., \"The Point-to-Point Protocol (PPP)\"\
    , STD\n                  51, RFC 1661, July 1994.\n   [RFC2548]      Zorn, G.,\
    \ \"Microsoft Vendor-specific RADIUS\n                  Attributes\", RFC 2548,\
    \ March 1999.\n   [RFC2607]      Aboba, B. and J. Vollbrecht, \"Proxy Chaining\
    \ and\n                  Policy Implementation in Roaming\", RFC 2607, June\n\
    \                  1999.\n   [RFC2716]      Aboba, B. and D. Simon,\"PPP EAP TLS\
    \ Authentication\n                  Protocol\", RFC 2716, October 1999.\n   [RFC2866]\
    \      Rigney, C., \"RADIUS Accounting\", RFC 2866, June 2000.\n   [RFC2867] \
    \     Zorn, G., Aboba, B. and D. Mitton, \"RADIUS Accounting\n               \
    \   Modifications for Tunnel Protocol Support\", RFC 2867,\n                 \
    \ June 2000.\n   [RFC2868]      Zorn, G., Leifer, D., Rubens, A., Shriver, J.,\n\
    \                  Holdrege, M. and I. Goyret, \"RADIUS Attributes for\n     \
    \             Tunnel Protocol Support\", RFC 2868, June 2000.\n   [RFC2869]  \
    \    Rigney, C., Willats, W. and P. Calhoun, \"RADIUS\n                  Extensions\"\
    , RFC 2869, June 2000.\n   [RFC2983]      Black, D. \"Differentiated Services\
    \ and Tunnels\", RFC\n                  2983, October 2000.\n   [RFC3580]    \
    \  Congdon, P., Aboba, B., Smith, A., Zorn, G. and J.\n                  Roese,\
    \ \"IEEE 802.1X Remote Authentication Dial In User\n                  Service\
    \ (RADIUS) Usage Guidelines\", RFC 3580,\n                  September 2003.\n\
    \   [IEEE802]      IEEE Standards for Local and Metropolitan Area\n          \
    \        Networks:  Overview and Architecture, ANSI/IEEE Std\n               \
    \   802, 1990.\n   [IEEE8021X]    IEEE Standards for Local and Metropolitan Area\n\
    \                  Networks:  Port based Network Access Control, IEEE Std\n  \
    \                802.1X-2001, June 2001.\n   [MD5Attack]    Dobbertin, H., \"\
    The Status of MD5 After a Recent\n                  Attack\", CryptoBytes Vol.2\
    \ No.2, Summer 1996.\n   [Masters]      Slatalla, M. and  J. Quittner, \"Masters\
    \ of Deception.\"\n                  HarperCollins, New York, 1995.\n   [NASREQ]\
    \       Calhoun, P., et al., \"Diameter Network Access Server\n              \
    \    Application\", Work in Progress.\n"
- title: Appendix A - Examples
  contents:
  - "Appendix A - Examples\n   The examples below illustrate conversations between\
    \ an authenticating\n   peer, NAS, and RADIUS server.  The OTP and EAP-TLS protocols\
    \ are used\n   only for illustrative purposes; other authentication protocols\
    \ could\n   also have been used, although they might show somewhat different\n\
    \   behavior.\n   Where the NAS sends an EAP-Request/Identity as the initial packet,\n\
    \   the exchange appears as follows:\n"
- title: Authenticating peer     NAS                    RADIUS server
  contents:
  - 'Authenticating peer     NAS                    RADIUS server

    '
- title: '-------------------     ---                    -------------'
  contents:
  - "-------------------     ---                    -------------\n              \
    \          <- EAP-Request/\n                        Identity\n"
- title: EAP-Response/
  contents:
  - 'EAP-Response/

    '
- title: Identity (MyID) ->
  contents:
  - "Identity (MyID) ->\n                        RADIUS Access-Request/\n        \
    \                EAP-Message/EAP-Response/\n                        (MyID) ->\n\
    \                                               <- RADIUS\n                  \
    \                             Access-Challenge/\n                            \
    \                   EAP-Message/EAP-Request\n                                \
    \               OTP/OTP Challenge\n                        <- EAP-Request/\n \
    \                       OTP/OTP Challenge\n"
- title: EAP-Response/
  contents:
  - 'EAP-Response/

    '
- title: OTP, OTPpw ->
  contents:
  - "OTP, OTPpw ->\n                        RADIUS Access-Request/\n             \
    \           EAP-Message/EAP-Response/\n                        OTP, OTPpw ->\n\
    \                                                <- RADIUS\n                 \
    \                               Access-Accept/\n                             \
    \                   EAP-Message/EAP-Success\n                                \
    \                (other attributes)\n                        <- EAP-Success\n\
    \   In the case where the NAS initiates with an EAP-Request for EAP TLS\n   [RFC2716],\
    \ and the identity is determined based on the contents of\n   the client certificate,\
    \ the exchange will appear as follows:\n"
- title: Authenticating peer     NAS                    RADIUS server
  contents:
  - 'Authenticating peer     NAS                    RADIUS server

    '
- title: '-------------------     ---                    -------------'
  contents:
  - "-------------------     ---                    -------------\n              \
    \          <- EAP-Request/\n                        EAP-Type=EAP-TLS\n       \
    \                 (TLS Start, S bit set)\n"
- title: EAP-Response/
  contents:
  - 'EAP-Response/

    '
- title: EAP-Type=EAP-TLS
  contents:
  - 'EAP-Type=EAP-TLS

    '
- title: (TLS client_hello)->
  contents:
  - "(TLS client_hello)->\n                        RADIUS Access-Request/\n      \
    \                  EAP-Message/EAP-Response/\n                        EAP-Type=EAP-TLS->\n\
    \                                              <-RADIUS Access-Challenge/\n  \
    \                                            EAP-Message/\n                  \
    \                            EAP-Request/\n                                  \
    \            EAP-Type=EAP-TLS\n                         <- EAP-Request/\n    \
    \                     EAP-Type=EAP-TLS\n                         (TLS server_hello,\n\
    \                         TLS certificate,\n                   [TLS server_key_exchange,]\n\
    \                   [TLS certificate_request,]\n                       TLS server_hello_done)\n"
- title: EAP-Response/
  contents:
  - 'EAP-Response/

    '
- title: EAP-Type=EAP-TLS
  contents:
  - 'EAP-Type=EAP-TLS

    '
- title: (TLS certificate,
  contents:
  - '(TLS certificate,

    '
- title: TLS client_key_exchange,
  contents:
  - 'TLS client_key_exchange,

    '
- title: '[TLS certificate_verify,]'
  contents:
  - '[TLS certificate_verify,]

    '
- title: TLS change_cipher_spec,
  contents:
  - 'TLS change_cipher_spec,

    '
- title: TLS finished)->
  contents:
  - "TLS finished)->\n                        RADIUS Access-Request/\n           \
    \             EAP-Message/EAP-Response/\n                        EAP-Type=EAP-TLS->\n\
    \                                              <-RADIUS Access-Challenge/\n  \
    \                                            EAP-Message/\n                  \
    \                            EAP-Request/\n                                  \
    \            EAP-Type=EAP-TLS\n                        <- EAP-Request/\n     \
    \                   EAP-Type=EAP-TLS\n                        (TLS change_cipher_spec,\n\
    \                        TLS finished)\n"
- title: EAP-Response/
  contents:
  - 'EAP-Response/

    '
- title: EAP-Type=EAP-TLS ->
  contents:
  - "EAP-Type=EAP-TLS ->\n                        RADIUS Access-Request/\n       \
    \                 EAP-Message/EAP-Response/\n                        EAP-Type=EAP-TLS->\n\
    \                                              <-RADIUS Access-Accept/\n     \
    \                                         EAP-Message/EAP-Success\n          \
    \                                    (other attributes)\n                    \
    \    <- EAP-Success\n   In the case where the NAS first sends an EAP-Start packet\
    \ to the\n   RADIUS server,  the conversation would appear as follows:\n"
- title: Authenticating peer     NAS                    RADIUS server
  contents:
  - 'Authenticating peer     NAS                    RADIUS server

    '
- title: '-------------------     ---                    -------------'
  contents:
  - "-------------------     ---                    -------------\n              \
    \          RADIUS Access-Request/\n                        EAP-Message/Start ->\n\
    \                                               <- RADIUS\n                  \
    \                             Access-Challenge/\n                            \
    \                   EAP-Message/EAP-Request/\n                               \
    \                Identity\n                        <- EAP-Request/\n         \
    \               Identity\n"
- title: EAP-Response/
  contents:
  - 'EAP-Response/

    '
- title: Identity (MyID) ->
  contents:
  - "Identity (MyID) ->\n                        RADIUS Access-Request/\n        \
    \                EAP-Message/EAP-Response/\n                        Identity (MyID)\
    \ ->\n                                                <- RADIUS\n            \
    \                                    Access-Challenge/\n                     \
    \                           EAP-Message/EAP-Request/\n                       \
    \                         OTP/OTP Challenge\n                        <- EAP-Request/\n\
    \                        OTP/OTP Challenge\n"
- title: EAP-Response/
  contents:
  - 'EAP-Response/

    '
- title: OTP, OTPpw ->
  contents:
  - "OTP, OTPpw ->\n                        RADIUS Access-Request/\n             \
    \           EAP-Message/EAP-Response/\n                        OTP, OTPpw ->\n\
    \                                                <- RADIUS\n                 \
    \                               Access-Accept/\n                             \
    \                   EAP-Message/EAP-Success\n                                \
    \                (other attributes)\n                        <- EAP-Success\n\
    \   In the case where the NAS initiates with an EAP-Request for EAP TLS\n   [RFC2716],\
    \ but the peer responds with a Nak, indicating that it would\n   prefer another\
    \ method not implemented locally on the NAS, the\n   exchange will appear as follows:\n"
- title: Authenticating peer     NAS                    RADIUS server
  contents:
  - 'Authenticating peer     NAS                    RADIUS server

    '
- title: '-------------------     ---                    -------------'
  contents:
  - "-------------------     ---                    -------------\n              \
    \          <- EAP-Request/\n                        EAP-Type=EAP-TLS\n       \
    \                 (TLS Start, S bit set)\n"
- title: EAP-Response/
  contents:
  - 'EAP-Response/

    '
- title: EAP-Type=Nak
  contents:
  - 'EAP-Type=Nak

    '
- title: (Alternative(s))->
  contents:
  - "(Alternative(s))->\n                        RADIUS Access-Request/\n        \
    \                EAP-Message/EAP-Response/\n                        Nak ->\n \
    \                                              <- RADIUS\n                   \
    \                            Access-Challenge/\n                             \
    \                  EAP-Message/EAP-Request/\n                                \
    \               Identity\n                        <- EAP-Request/\n          \
    \              Identity\n"
- title: EAP-Response/
  contents:
  - 'EAP-Response/

    '
- title: Identity (MyID) ->
  contents:
  - "Identity (MyID) ->\n                        RADIUS Access-Request/\n        \
    \                EAP-Message/EAP-Response/\n                        (MyID) ->\n\
    \                                               <- RADIUS\n                  \
    \                             Access-Challenge/\n                            \
    \                   EAP-Message/EAP-Request\n                                \
    \               OTP/OTP Challenge\n                        <- EAP-Request/\n \
    \                       OTP/OTP Challenge\n"
- title: EAP-Response/
  contents:
  - 'EAP-Response/

    '
- title: OTP, OTPpw ->
  contents:
  - "OTP, OTPpw ->\n                        RADIUS Access-Request/\n             \
    \           EAP-Message/EAP-Response/\n                        OTP, OTPpw ->\n\
    \                                                <- RADIUS\n                 \
    \                               Access-Accept/\n                             \
    \                   EAP-Message/EAP-Success\n                                \
    \                (other attributes)\n                        <- EAP-Success\n\
    \   In the case where the authenticating peer attempts to authenticate\n   the\
    \ NAS, the conversation would appear as follows:\n"
- title: Authenticating peer     NAS                    RADIUS Server
  contents:
  - 'Authenticating peer     NAS                    RADIUS Server

    '
- title: '-------------------     ---                    -------------'
  contents:
  - '-------------------     ---                    -------------

    '
- title: EAP-Request/
  contents:
  - 'EAP-Request/

    '
- title: Challenge, MD5 ->
  contents:
  - "Challenge, MD5 ->\n                        RADIUS Access-Request/\n         \
    \               EAP-Message/EAP-Request/\n                        Challenge, MD5\
    \ ->\n                                                <- RADIUS\n            \
    \                                    Access-Reject/\n                        \
    \                        EAP-Message/\n                                      \
    \          EAP-Response/\n                                                Nak\
    \ (no alternative)\n                        <- EAP-Response/Nak\n            \
    \             (no alternative)\n"
- title: EAP-Failure ->
  contents:
  - "EAP-Failure ->\n   In the case where an invalid EAP Response is inserted by an\
    \ attacker,\n   the conversation would appear as follows:\n"
- title: Authenticating peer     NAS                    RADIUS server
  contents:
  - 'Authenticating peer     NAS                    RADIUS server

    '
- title: '-------------------     ---                    -------------'
  contents:
  - "-------------------     ---                    -------------\n              \
    \          <- EAP-Request/\n                        EAP-Type=Foo\n"
- title: EAP-Response/
  contents:
  - 'EAP-Response/

    '
- title: EAP-Type=Foo ->
  contents:
  - "EAP-Type=Foo ->\n                        RADIUS Access-Request/\n           \
    \             EAP-Message/EAP-Response/\n                        EAP-Type=Foo\
    \ ->\n                                               <- RADIUS\n             \
    \                                  Access-Challenge/\n                       \
    \                        EAP-Message/EAP-Request/\n                          \
    \                     EAP-Type=Foo\n                        <- EAP-Request/\n\
    \                        EAP-Type=Foo\n"
- title: 'Attacker spoof:'
  contents:
  - 'Attacker spoof:

    '
- title: EAP-Response/
  contents:
  - 'EAP-Response/

    '
- title: EAP-Type=Bar ->
  contents:
  - 'EAP-Type=Bar ->

    '
- title: 'Good guy:'
  contents:
  - 'Good guy:

    '
- title: EAP-Response/
  contents:
  - 'EAP-Response/

    '
- title: EAP-Type=Foo ->
  contents:
  - "EAP-Type=Foo ->\n                        RADIUS Access-Request/\n           \
    \             EAP-Message/EAP-Response/\n                        EAP-Type=Bar\
    \ ->\n                                               <- RADIUS\n             \
    \                                  Access-Challenge/\n                       \
    \                        EAP-Message/EAP-Request/\n                          \
    \                     EAP-Type=Foo,\n                                        \
    \       Error-Cause=\"Invalid EAP\n                                          \
    \      Packet (Ignored)\"\n                        RADIUS Access-Request/\n  \
    \                      EAP-Message/EAP-Response/\n                        EAP-Type=Foo\
    \ ->\n                                               <- Access-Accept/\n     \
    \                                          EAP-Message/Success\n             \
    \           <- EAP Success\n   In the case where the client fails EAP authentication,\
    \ and an error\n   message is sent prior to disconnection, the conversation would\
    \ appear\n   as follows:\n"
- title: Authenticating peer     NAS                    RADIUS server
  contents:
  - 'Authenticating peer     NAS                    RADIUS server

    '
- title: '-------------------     ---                    -------------'
  contents:
  - "-------------------     ---                    -------------\n              \
    \          RADIUS Access-Request/\n                        EAP-Message/Start ->\n\
    \                                               <- RADIUS\n                  \
    \                             Access-Challenge/\n                            \
    \                   EAP-Message/EAP-Response/\n                              \
    \                 Identity\n                        <- EAP-Request/\n        \
    \                Identity\n"
- title: EAP-Response/
  contents:
  - 'EAP-Response/

    '
- title: Identity (MyID) ->
  contents:
  - "Identity (MyID) ->\n                        RADIUS Access-Request/\n        \
    \                EAP-Message/EAP-Response/\n                        (MyID) ->\n\
    \                                                <- RADIUS\n                 \
    \                               Access-Challenge/\n                          \
    \                      EAP-Message/EAP-Request\n                             \
    \                   OTP/OTP Challenge\n                        <- EAP-Request/\n\
    \                        OTP/OTP Challenge\n"
- title: EAP-Response/
  contents:
  - 'EAP-Response/

    '
- title: OTP, OTPpw ->
  contents:
  - "OTP, OTPpw ->\n                        RADIUS Access-Request/\n             \
    \           EAP-Message/EAP-Response/\n                        OTP, OTPpw ->\n\
    \                                                <- RADIUS\n                 \
    \                               Access-Challenge/\n                          \
    \                      EAP-Message/EAP-Request/\n                            \
    \                    Notification\n                        <- EAP-Request/\n \
    \                          Notification\n"
- title: EAP-Response/
  contents:
  - 'EAP-Response/

    '
- title: Notification ->
  contents:
  - "Notification ->\n                        RADIUS Access-Request/\n           \
    \             EAP-Message/EAP-Response/\n                        Notification\
    \ ->\n                                                 <- RADIUS\n           \
    \                                      Access-Reject/\n                      \
    \                           EAP-Message/EAP-Failure\n                        <-\
    \ EAP-Failure\n                        (client disconnected)\n   In the case that\
    \ the RADIUS server or proxy does not support EAP-\n   Message, but no error message\
    \ is sent, the conversation would appear\n   as follows:\n"
- title: Authenticating peer     NAS                       RADIUS server
  contents:
  - 'Authenticating peer     NAS                       RADIUS server

    '
- title: '-------------------     ---                       -------------'
  contents:
  - "-------------------     ---                       -------------\n           \
    \             RADIUS Access-Request/\n                        EAP-Message/Start\
    \ ->\n                                                  <- RADIUS\n          \
    \                                        Access-Reject\n                     \
    \   (User Disconnected)\n"
- title: In the case where the local RADIUS server does support EAP-Message, but
  contents:
  - 'In the case where the local RADIUS server does support EAP-Message, but

    '
- title: the remote RADIUS server does not, the conversation would appear as
  contents:
  - 'the remote RADIUS server does not, the conversation would appear as

    '
- title: 'follows:'
  contents:
  - 'follows:

    '
- title: Authenticating peer     NAS                       RADIUS server
  contents:
  - 'Authenticating peer     NAS                       RADIUS server

    '
- title: '-------------------     ---                       -------------'
  contents:
  - "-------------------     ---                       -------------\n           \
    \             RADIUS Access-Request/\n                        EAP-Message/Start\
    \ ->\n                                                  <- RADIUS\n          \
    \                                        Access-Challenge/\n                 \
    \                                 EAP-Message/\n                             \
    \                     EAP-Response/\n                                        \
    \          Identity\n                        <- EAP-Request/\n               \
    \         Identity\n"
- title: EAP-Response/
  contents:
  - 'EAP-Response/

    '
- title: Identity
  contents:
  - 'Identity

    '
- title: (MyID) ->
  contents:
  - "(MyID) ->\n                        RADIUS Access-Request/\n                 \
    \       EAP-Message/EAP-Response/\n                        (MyID) ->\n       \
    \                                           <- RADIUS\n                      \
    \                            Access-Reject\n                                 \
    \                 (proxied from remote\n                                     \
    \              RADIUS server)\n                        (User Disconnected)\n \
    \  In the case where PPP is the link and the authenticating peer does\n   not\
    \ support EAP, but where EAP is required for that user, the\n   conversation would\
    \ appear as follows:\n"
- title: Authenticating peer     NAS                       RADIUS server
  contents:
  - 'Authenticating peer     NAS                       RADIUS server

    '
- title: '-------------------     ---                       -------------'
  contents:
  - "-------------------     ---                       -------------\n           \
    \             <- PPP LCP Request-EAP\n                        auth\n"
- title: PPP LCP NAK-EAP
  contents:
  - 'PPP LCP NAK-EAP

    '
- title: auth ->
  contents:
  - "auth ->\n                        <- PPP LCP Request-CHAP\n                  \
    \      auth\n"
- title: PPP LCP ACK-CHAP
  contents:
  - 'PPP LCP ACK-CHAP

    '
- title: auth ->
  contents:
  - "auth ->\n                        <- PPP CHAP Challenge\n"
- title: PPP CHAP Response ->
  contents:
  - "PPP CHAP Response ->\n                        RADIUS Access-Request/\n      \
    \                  User-Name,\n                        CHAP-Password ->\n    \
    \                                              <- RADIUS\n                   \
    \                               Access-Reject\n                        <-  PPP\
    \ LCP Terminate\n                        (User Disconnected)\n"
- title: In the case where PPP is the link, the NAS does not support EAP, but
  contents:
  - 'In the case where PPP is the link, the NAS does not support EAP, but

    '
- title: where EAP is required for that user, the conversation would appear as
  contents:
  - 'where EAP is required for that user, the conversation would appear as

    '
- title: 'follows:'
  contents:
  - 'follows:

    '
- title: Authenticating peer     NAS                       RADIUS server
  contents:
  - 'Authenticating peer     NAS                       RADIUS server

    '
- title: '-------------------     ---                       -------------'
  contents:
  - "-------------------     ---                       -------------\n           \
    \             <- PPP LCP Request-CHAP\n                        auth\n"
- title: PP LCP ACK-CHAP
  contents:
  - 'PP LCP ACK-CHAP

    '
- title: auth ->
  contents:
  - "auth ->\n                        <- PPP CHAP Challenge\n"
- title: PPP CHAP Response ->
  contents:
  - "PPP CHAP Response ->\n                        RADIUS Access-Request/\n      \
    \                  User-Name,\n                        CHAP-Password ->\n    \
    \                                             <- RADIUS\n                    \
    \                             Access-Reject\n                        <-  PPP LCP\
    \ Terminate\n                        (User Disconnected)\n"
- title: Appendix B - Change Log
  contents:
  - "Appendix B - Change Log\n   The following changes have been made from RFC 2869:\n\
    \   A NAS may simultaneously support both local authentication and\n   pass-through;\
    \ once the NAS enters pass-through mode within a session,\n   it cannot revert\
    \ back to local authentication.  Also EAP is\n   explicitly described as a 'lock\
    \ step' protocol. (Section 2).\n   The NAS may initiate with an EAP-Request for\
    \ an authentication Type.\n   If the Request is NAK'd, the NAS should send an\
    \ initial\n   Access-Request with an EAP-Message attribute containing an\n   EAP-Response/Nak.\n\
    \   The RADIUS server may treat an invalid EAP Response as a non-fatal\n   error\
    \ (Section 2.2)\n   For use with RADIUS/EAP, the Password-Retry (Section 2.3)\
    \ and\n   Reply-Message (2.6.5) attributes are deprecated.\n   Each EAP session\
    \ has a unique Identifier space (Section 2.6.1).\n   Role reversal is not supported\
    \ (Section 2.6.2).\n   Message combinations (e.g. Access-Accept/EAP-Failure) that\
    \ conflict\n   are discouraged (Section 2.6.3).\n   Only a single EAP packet may\
    \ be encapsulated within a RADIUS message\n   (Section 3.1).\n   An Access-Request\
    \ lacking explicit authentication as well as a\n   Message- Authenticator attribute\
    \ SHOULD be silently discarded\n   (Section 3.3).\n   The Originating-Line-Info\
    \ attribute is supported (Section 3.3).\n   IPsec ESP with non-null transform\
    \ SHOULD be used and the usage model\n   is described in detail (Section 4.2).\n\
    \   Additional discussion of security vulnerabilities (Section 4.1) and\n   potential\
    \ fixes (Section 4.3).\n   Separated normative (Section 6.1) and informative (Section\
    \ 6.2)\n   references.\n   Added additional examples (Appendix A): a NAS initiating\
    \ with an\n   EAP-Request for an authentication Type; attempted role reversal.\n"
- title: Intellectual Property Statement
  contents:
  - "Intellectual Property Statement\n   The IETF takes no position regarding the\
    \ validity or scope of any\n   intellectual property or other rights that might\
    \ be claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; neither does it represent that it\n   has\
    \ made any effort to identify any such rights.  Information on the\n   IETF's\
    \ procedures with respect to rights in standards-track and\n   standards-related\
    \ documentation can be found in BCP-11.  Copies of\n   claims of rights made available\
    \ for publication and any assurances of\n   licenses to be made available, or\
    \ the result of an attempt made to\n   obtain a general license or permission\
    \ for the use of such\n   proprietary rights by implementors or users of this\
    \ specification can\n   be obtained from the IETF Secretariat.\n   The IETF invites\
    \ any interested party to bring to its attention any\n   copyrights, patents or\
    \ patent applications, or other proprietary\n   rights which may cover technology\
    \ that may be required to practice\n   this standard.  Please address the information\
    \ to the IETF Executive\n   Director.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   Thanks to Dave Dawson and Karl Fox of Ascend, Glen Zorn of\
    \ Cisco\n   Systems, Jari Arkko of Ericsson and Ashwin Palekar, Tim Moore and\n\
    \   Narendra Gidwani of Microsoft for useful discussions of this problem\n   space.\
    \  The authors would also like to acknowledge Tony Jeffree,\n   Chair of IEEE\
    \ 802.1 for his assistance in resolving RADIUS/EAP issues\n   in IEEE 802.1X-2001.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Bernard Aboba\n   Microsoft Corporation\n   One Microsoft\
    \ Way\n   Redmond, WA 98052\n   Phone:  +1 425 706 6605\n   Fax:    +1 425 936\
    \ 7329\n   EMail:   bernarda@microsoft.com\n   Pat R. Calhoun\n   Airespace\n\
    \   110 Nortech Parkway\n   San Jose, California, 95134\n   USA\n   Phone:  +1\
    \ 408 635 2023\n   Fax:    +1 408 635 2020\n   EMail:  pcalhoun@airespace.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2003).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assignees.\n\
    \   This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
