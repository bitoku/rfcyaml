- title: __initial_text__
  contents:
  - '         Dynamic Host Configuration Protocol (DHCP) Leasequery

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   A Dynamic Host Configuration Protocol version 4 (DHCPv4) server\
    \ is\n   the authoritative source of IP addresses that it has provided to\n  \
    \ DHCPv4 clients.  Other processes and devices that already make use of\n   DHCPv4\
    \ may need to access this information.  The leasequery protocol\n   provides these\
    \ processes and devices a lightweight way to access IP\n   address information.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Terminology .....................................................5\n  \
    \ 3. Background ......................................................7\n   4.\
    \ Design Goals ....................................................7\n      4.1.\
    \ Broadcast ARP Is Undesirable ...............................7\n      4.2. SNMP\
    \ and LDAP Are Not Appropriate ..........................8\n      4.3. DHCP Relay\
    \ Agent Functionality Is Common ...................8\n      4.4. DHCP Servers\
    \ Are a Reliable Source of Location\n           Information ................................................9\n\
    \      4.5. Minimal Additional Configuration Is Required ...............9\n  \
    \ 5. Protocol Overview ...............................................9\n   6.\
    \ Protocol Details ...............................................12\n      6.1.\
    \ Definitions Required for DHCPLEASEQUERY Processing ........12\n      6.2. Sending\
    \ the DHCPLEASEQUERY Message ........................14\n      6.3. Receiving\
    \ the DHCPLEASEQUERY Message ......................15\n      6.4. Responding to\
    \ the DHCPLEASEQUERY Message ..................16\n      6.5. Receiving a DHCPLEASEUNASSIGNED,\
    \ DHCPLEASEACTIVE, or\n           DHCPLEASEUNKNOWN Message ..................................20\n\
    \      6.6. Receiving No Response to the DHCPLEASEQUERY Message .......21\n  \
    \    6.7. Lease Binding Data Storage Requirements ...................22\n    \
    \  6.8. Using the DHCPLEASEQUERY Message with Multiple\n           DHCP Servers\
    \ ..............................................23\n   7. Security Considerations\
    \ ........................................23\n   8. IANA Considerations ............................................24\n\
    \   9. Acknowledgements ...............................................24\n  \
    \ 10. References ....................................................25\n    \
    \  10.1. Normative References .....................................25\n      10.2.\
    \ Informative References ...................................25\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   A DHCPv4 server contains considerable authoritative information\n\
    \   concerning the IP addresses it has leased to DHCP clients.  Sometimes\n  \
    \ devices or other processes may need access to this information.  In\n   some\
    \ cases, these devices or processes already have the capability to\n   send and\
    \ receive DHCP packets, and so the leasequery protocol is\n   designed to give\
    \ these processes and devices a low-overhead way to\n   access such information.\n\
    \   For example, access concentrators that act as DHCP relay agents\n   sometimes\
    \ derive information important to their operation by\n   extracting data out of\
    \ the DHCP packets they forward, a process known\n   as \"gleaning\".  Unfortunately,\
    \ the typical access concentrator loses\n   its gleaned information when the access\
    \ concentrator is rebooted or\n   is replaced.  This memo proposes that when gleaned\
    \ DHCP information\n   is not available, the access concentrator/relay agent can\
    \ obtain the\n   location information directly from the DHCP server(s) using the\n\
    \   DHCPLEASEQUERY message.\n   To continue this example in more depth, in many\
    \ broadband access\n   networks, the access concentrator needs to associate an\
    \ IP address\n   lease to the correct endpoint location, which includes knowledge\
    \ of\n   the host hardware address, the port or virtual circuit that leads to\n\
    \   the host, and/or the hardware address of the intervening subscriber\n   modem.\
    \  This is particularly important when one or more IP subnets\n   are shared among\
    \ many ports, circuits, and modems.  Representative\n   cable and DSL environments\
    \ are depicted in Figures 1 and 2 below.\n           +--------+     +---------------+\n\
    \           |  DHCP  |     |  DOCSIS CMTS  |\n           | Server |-...-|  or\
    \ DVB INA   |-------------------\n           +--------+     | (Relay Agent) |\
    \      |          |\n                          +---------------+  +------+   \
    \ +------+\n                                             |Modem1|    |Modem2|\n\
    \                                             +------+    +------+\n         \
    \                                       |         |    |\n                   \
    \                         +-----+  +-----+ +-----+\n                         \
    \                   |Host1|  |Host2| |Host3|\n                               \
    \             +-----+  +-----+ +-----+\n               Figure 1: Cable Environment\
    \ for DHCPLEASEQUERY\n           +--------+     +---------------+\n          \
    \ |  DHCP  |     |  DSL Access   |     +-------+\n           | Server |-...-|\
    \ Concentrator  |-...-| DSLAM |\n           +--------+     | (Relay Agent) | \
    \    +-------+\n                          +---------------+      |     |\n   \
    \                                        +------+   +------+\n               \
    \                            |Modem1|   |Modem2|\n                           \
    \                +------+   +------+\n                                       \
    \       |        |    |\n                                          +-----+  +-----+\
    \ +-----+\n                                          |Host1|  |Host2| |Host3|\n\
    \                                          +-----+  +-----+ +-----+\n        \
    \       Figure 2: DSL Environment for DHCPLEASEQUERY\n   Knowledge of this location\
    \ information can benefit the access\n   concentrator in several ways:\n     \
    \ 1.  The access concentrator can forward traffic to the access\n          network\
    \ using the correct access network port, down the\n          correct virtual circuit,\
    \ through the correct modem, to the\n          correct hardware address.\n   \
    \   2.  The access concentrator can perform IP source address\n          verification\
    \ of datagrams received from the access network.\n          The verification may\
    \ be based on the datagram source hardware\n          address, the incoming access\
    \ network port, the incoming\n          virtual circuit, and/or the transmitting\
    \ modem.\n      3.  The access concentrator can encrypt datagrams that can only\
    \ be\n          decrypted by the correct modem, using mechanisms such as [BPI]\n\
    \          or [BPI+].\n   The access concentrator in this example obtains the\
    \ location\n   information primarily from \"gleaning\" information from DHCP server\n\
    \   responses sent through the relay agent.  When location information is\n  \
    \ not available from \"gleaning\", e.g., because the access concentrator\n   has\
    \ rebooted, the access concentrator can query the DHCP server(s)\n   for location\
    \ information using the DHCPLEASEQUERY message defined in\n   this document.\n\
    \   The DHCPLEASEQUERY message is a new DHCP message type transmitted\n   from\
    \ a DHCP relay agent to a DHCP server.  A DHCPLEASEQUERY-aware\n   relay agent\
    \ sends the DHCPLEASEQUERY message when it needs to know\n   the location of an\
    \ IP endpoint.  The DHCPLEASEQUERY-aware DHCP server\n   replies with a DHCPLEASEUNASSIGNED,\
    \ DHCPLEASEACTIVE, or\n   DHCPLEASEUNKNOWN message.  The DHCPLEASEACTIVE response\
    \ to a\n   DHCPLEASEQUERY message allows the relay agent to determine the IP\n\
    \   endpoint location and the remaining duration of the IP address lease.\n  \
    \ The DHCPLEASEUNASSIGNED is similar to a DHCPLEASEACTIVE message, but\n   indicates\
    \ that there is no currently active lease on the resultant IP\n   address but\
    \ that this DHCP server is authoritative for this IP\n   address.  The DHCPLEASEUNKNOWN\
    \ message indicates that the DHCP server\n   has no knowledge of the information\
    \ specified in the query (e.g., IP\n   address, MAC address, or Client-identifier\
    \ option).\n   The DHCPLEASEQUERY message does not presuppose a particular use\
    \ for\n   the information it returns -- it is simply designed to return\n   information\
    \ for which the DHCP server is an authoritative source to a\n   client that requests\
    \ that information.  It is designed to make it\n   straightforward for processes\
    \ and devices that already interpret DHCP\n   packets to access information from\
    \ the DHCP server.\n   This document specifies an extension specifically to the\
    \ DHCPv4\n   protocol [RFC2131].  Given the nature of the DHCPv6 protocol\n  \
    \ [RFC3315], there is no effective way to make the DHCPLEASEQUERY\n   message\
    \ interaction common between DHCPv4 and DHCPv6 even should the\n   desire to do\
    \ so exist.\n   The DHCPLEASEQUERY message was the result of a set of specific\
    \ real-\n   world implementation needs that appeared many years after the DHCPv4\n\
    \   protocol was in wide use.  Furthermore, at the time of this writing,\n   the\
    \ DHCPv6 protocol has yet to be widely deployed.  The needs of\n   access concentrators\
    \ in yet to be determined DHCPv6 deployment\n   scenarios are difficult to estimate.\
    \  If a DHCPLEASEQUERY-like\n   function is necessary in DHCPv6, many of the ideas\
    \ of this document\n   will probably be applicable, while others may not.  We\
    \ have been\n   cautioned against designing protocol capabilities for which there\
    \ is\n   only an imagined consumer, and that is all that exists today in the\n\
    \   realm of DHCPLEASEQUERY for DHCPv6.\n   Thus, this document applies only to\
    \ DHCPv4, and for clarity we have\n   not appended DHCPv4 to every appearance\
    \ of several common terms.  In\n   this document, all references to IP addresses\
    \ should be taken to mean\n   IPv4 addresses, and all references to DHCP servers\
    \ and DHCP clients\n   should be taken to mean DHCPv4 servers and DHCPv4 clients.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [RFC2119].\n   This document uses the following terms:\n        o \"access\
    \ concentrator\"\n          An access concentrator is a router or switch at the\
    \ broadband\n          access provider's edge of a public broadband access network.\n\
    \          This document assumes that the access concentrator includes\n     \
    \     the DHCP relay agent functionality.\n        o \"DHCP client\"\n       \
    \   A DHCP client is an Internet host using DHCP to obtain\n          configuration\
    \ parameters such as a network address.\n        o \"DHCP relay agent\"\n    \
    \      A DHCP relay agent is a third-party agent that transfers\n          Bootstrap\
    \ Protocol (BOOTP) and DHCP messages between clients\n          and servers residing\
    \ on different subnets, per [RFC951] and\n          [RFC1542].\n        o \"DHCP\
    \ server\"\n          A DHCP server is an Internet host that returns configuration\n\
    \          parameters to DHCP clients.\n        o \"downstream\"\n          Downstream\
    \ is the direction from the access concentrator\n          towards the broadband\
    \ subscriber.\n        o \"gleaning\"\n          Gleaning is the extraction of\
    \ location information from DHCP\n          messages, as the messages are forwarded\
    \ by the DHCP relay\n          agent function.\n        o \"location information\"\
    \n          Location information is information needed by the access\n       \
    \   concentrator to forward traffic to a broadband-accessible\n          host.\
    \  This information includes knowledge of the host\n          hardware address,\
    \ the port or virtual circuit that leads to\n          the host, and/or the hardware\
    \ address of the intervening\n          subscriber modem.\n        o \"MAC address\"\
    \n          In the context of a DHCP packet, a MAC address consists of the\n \
    \         following fields: hardware type \"htype\", hardware length\n       \
    \   \"hlen\", and client hardware address \"chaddr\".\n        o \"stable storage\"\
    \n          Every DHCP server is assumed to have some form of what is\n      \
    \    called \"stable storage\".  Stable storage is used to hold\n          information\
    \ concerning IP address bindings (among other\n          things) so that this\
    \ information is not lost in the event of a\n          server failure that requires\
    \ restart of the server.\n        o \"upstream\"\n          Upstream is the direction\
    \ from the broadband subscriber\n          towards the access concentrator.\n"
- title: 3.  Background
  contents:
  - "3.  Background\n   The focus of this document is to enable processes and devices\
    \ that\n   wish to access information from the DHCP server in a lightweight and\n\
    \   convenient manner.  It is especially appropriate for processes and\n   devices\
    \ that already interpret DHCP packets.\n   One important motivating example is\
    \ that the DHCPLEASEQUERY message\n   allows access concentrators to send DHCPLEASEQUERY\
    \ messages to DHCP\n   servers to obtain location information of broadband access\
    \ network\n   devices.\n   This document assumes that many access concentrators\
    \ have an embedded\n   DHCP relay agent functionality.  Typical access concentrators\
    \ include\n   DOCSIS Cable Modem Termination Systems (CMTSs) [DOCSIS], DVB\n \
    \  Interactive Network Adapters (INAs) [EUROMODEM], and DSL Access\n   Concentrators.\n\
    \   The DHCPLEASEQUERY message is an extension to the DHCP protocol\n   [RFC2131].\n\
    \   The DHCPLEASEQUERY message is a query message only and does not\n   affect\
    \ the state of the IP address or the binding information\n   associated with it.\n"
- title: 4.  Design Goals
  contents:
  - "4.  Design Goals\n   The goal of this document is to provide a lightweight mechanism\
    \ for\n   processes or devices to access information contained in the DHCP\n \
    \  server.  It is designed to allow processes and devices that already\n   process\
    \ and interpret DHCP messages to access this information in a\n   rapid and lightweight\
    \ manner.\n   Some of this information might be acquired in a different way, and\n\
    \   the following sections discuss some of these alternative approaches.\n"
- title: 4.1.  Broadcast ARP Is Undesirable
  contents:
  - "4.1.  Broadcast ARP Is Undesirable\n   The access concentrator can transmit a\
    \ broadcast Address Resolution\n   Protocol (ARP) Request [RFC826], and observe\
    \ the origin and contents\n   of the ARP Reply, to reconstruct the location information.\n\
    \   The ARP mechanism is undesirable for three reasons:\n      1.  the burden\
    \ on the access concentrator to transmit over\n          multiple access ports\
    \ and virtual circuits (assuming that IP\n          subnets span multiple ports\
    \ or virtual circuits),\n      2.  the burden on the numerous subscriber hosts\
    \ to receive and\n          process the broadcast, and\n      3.  the ease by\
    \ which a malicious host can misrepresent itself as\n          the IP endpoint.\n"
- title: 4.2.  SNMP and LDAP Are Not Appropriate
  contents:
  - "4.2.  SNMP and LDAP Are Not Appropriate\n   Access concentrator implementations\
    \ typically do not have Simple\n   Network Management Protocol (SNMP) management\
    \ client interfaces nor\n   Lightweight Directory Access Protocol (LDAP) client\
    \ interfaces\n   (although they typically do include SNMP management agents).\
    \  This is\n   one reason why this document does not leverage the proposed DHCP\n\
    \   Server MIB [DHCPMIB].\n   The DHCP Server MIB effort [DHCPMIB] grew out of\
    \ traffic engineering\n   and troubleshooting activities at large DHCP installations,\
    \ and is\n   primarily intended as a method of gathering performance statistics\n\
    \   about servers the load presented to them.\n   Despite the presence in the\
    \ proposed DHCPv4 server MIB of objects\n   that report configuration and status\
    \ information, the MIB is intended\n   to provide more generic, server-wide aggregated\
    \ or summarized data.\n   DHCPLEASEQUERY is intended to provide detailed, specific\
    \ information\n   about individual leases at a level that would be difficult or\n\
    \   impossible to shoehorn into a MIB.\n   From an implementation standpoint,\
    \ the DHCPLEASEQUERY message is not\n   required to be supported by all DHCPv4\
    \ servers.  Since it appears\n   that defining optional MIB objects and objects\
    \ for optional features\n   in a MIB is discouraged, trying to support DHCPLEASEQUERY\n\
    \   functionality optionally through a MIB would be similarly discouraged\n  \
    \ from an SNMP MIB standpoint.\n"
- title: 4.3.  DHCP Relay Agent Functionality Is Common
  contents:
  - "4.3.  DHCP Relay Agent Functionality Is Common\n   Access concentrators commonly\
    \ act as DHCP relay agents.  Furthermore,\n   many access concentrators already\
    \ glean location information from\n   DHCP server responses, as part of the relay\
    \ agent function.\n   The gleaning mechanism as a technique to determine the IP\
    \ addresses\n   valid for a particular downstream link is preferred over other\n\
    \   mechanisms (ARP, SNMP, LDAP) because of the lack of additional\n   network\
    \ traffic, but sometimes gleaning information can be\n   incomplete.  The access\
    \ concentrator usually cannot glean information\n   from any DHCP unicast (i.e.,\
    \ non-relayed) messages due to performance\n   reasons.  Furthermore, the DHCP-gleaned\
    \ location information often\n   does not persist across access concentrator reboots\
    \ (due to lack of\n   stable storage), and almost never persists across concentrator\n\
    \   replacements.\n"
- title: 4.4.  DHCP Servers Are a Reliable Source of Location Information
  contents:
  - "4.4.  DHCP Servers Are a Reliable Source of Location Information\n   DHCP servers\
    \ are the most reliable source of location information for\n   access concentrators,\
    \ particularly when the location information is\n   dynamic and not reproducible\
    \ by algorithmic means (e.g., when a\n   single IP subnet extends behind many\
    \ broadband modems).  DHCP servers\n   participate in all IP lease transactions\
    \ (and therefore in all\n   location information updates) with DHCP clients, whereas\
    \ access\n   concentrators sometimes miss some important lease transactions.\n\
    \   An access concentrator can be configured with the IP addresses of\n   multiple\
    \ different DHCP servers, so that no one DHCP server is a\n   single point of\
    \ failure.\n"
- title: 4.5.  Minimal Additional Configuration Is Required
  contents:
  - "4.5.  Minimal Additional Configuration Is Required\n   Access concentrators can\
    \ usually query the same set of DHCP servers\n   used for forwarding by the relay\
    \ agent, thus minimizing configuration\n   requirements.\n"
- title: 5.  Protocol Overview
  contents:
  - "5.  Protocol Overview\n   In the following discussion of the DHCPLEASEQUERY message,\
    \ the client\n   of the message is assumed to be an access concentrator.  Note\
    \ that\n   access concentrators are not the only allowed (or required) consumers\n\
    \   of the information provided by the DHCPLEASEQUERY message, but they\n   do\
    \ give readers a concrete feel for how the message might be used.\n   The access\
    \ concentrator initiates all DHCPLEASEQUERY message\n   conversations.  This document\
    \ assumes that the access concentrator\n   gleans location information in its\
    \ DHCP relay agent function.\n   However, the location information is usually\
    \ unavailable after the\n   reboot or replacement of the access concentrator.\n\
    \   Suppose the access concentrator is a router, and further suppose that\n  \
    \ the router receives an IP datagram to forward downstream to the\n   public broadband\
    \ access network.  If the location information for the\n   downstream next hop\
    \ is missing, the access concentrator sends one or\n   more DHCPLEASEQUERY message(s),\
    \ each containing the IP address of the\n   downstream next hop in the \"ciaddr\"\
    \ field.\n   This query will then be answered by returning the information current\n\
    \   when this client's lease was last granted or renewed, allowing the\n   access\
    \ concentrator to forward the IP datagram.\n   An alternative approach is to send\
    \ in a DHCPLEASEQUERY message with\n   the \"ciaddr\" field empty and the MAC\
    \ address (i.e., \"htype\", \"hlen\",\n   and \"chaddr\" fields) with a valid\
    \ MAC address or a Client-identifier\n   option (option 61) appearing in the options\
    \ area.  In this case, the\n   DHCP server must return an IP address in the ciaddr\
    \ if it has any\n   record of the client described by the Client-identifier or\
    \ MAC\n   address.  In the absence of specific configuration information to the\n\
    \   contrary (see Section 6.4), it SHOULD be the IP address with the\n   latest\
    \ client-last-transaction-time associated with the client\n   described by the\
    \ MAC address or Client-identifier option.\n   The DHCP servers that implement\
    \ this protocol always send a response\n   to the DHCPLEASEQUERY message: either\
    \ a DHCPLEASEUNASSIGNED,\n   DHCPLEASEACTIVE, or DHCPLEASEUNKNOWN.  The reasons\
    \ why a\n   DHCPLEASEUNASSIGNED, DHCPLEASEACTIVE, or DHCPLEASEUNKNOWN message\n\
    \   might be generated are explained in the specific query regimes,\n   below.\n\
    \   Servers that do not implement the DHCPLEASEQUERY message SHOULD\n   simply\
    \ not respond.\n   The DHCPLEASEQUERY message can support three query regimes:\
    \  A server\n   that implements the DHCPLEASEQUERY message must implement all\
    \ three\n   query regimes.\n      o Query by IP address:\n        For this query,\
    \ the requester supplies only an IP address in the\n        DHCPLEASEQUERY message.\
    \  The DHCP server will return any\n        information that it has on the most\
    \ recent client to have been\n        assigned that IP address.\n        The DHCP\
    \ server replies with a DHCPLEASEUNASSIGNED or\n        DHCPLEASEACTIVE message\
    \ if the IP address in the DHCPLEASEQUERY\n        message corresponds to an IP\
    \ address about which the server has\n        definitive information (i.e., it\
    \ is authorized to lease this IP\n        address).  The server replies with a\
    \ DHCPLEASEUNKNOWN message if\n        the server does not have definitive information\
    \ concerning the\n        address in the DHCPLEASEQUERY message.\n      o Query\
    \ by MAC address:\n        For this query, the requester supplies only a MAC address\
    \ in the\n        DHCPLEASEQUERY message.  The DHCP server will return any\n \
    \       information that it has on the IP address most recently accessed\n   \
    \     by a client with that MAC address.  In addition, it may supply\n       \
    \ additional IP addresses that have been associated with that MAC\n        address\
    \ in different subnets.  Information about these bindings\n        can then be\
    \ found using the Query by IP Address, described\n        above.\n        The\
    \ DHCP server replies with a DHCPLEASEACTIVE message if the\n        MAC address\
    \ in the DHCPLEASEQUERY message corresponds to a MAC\n        address with an\
    \ active lease on an IP address in this server.\n        The server replies with\
    \ a DHCPLEASEUNKNOWN message if the server\n        does not presently have an\
    \ active lease by a client with this\n        MAC address in this DHCP server.\n\
    \      o Query by Client-identifier option:\n        For this query, the requester\
    \ supplies only a Client-identifier\n        option in the DHCPLEASEQUERY message.\
    \  The DHCP server will\n        return any information that it has on the IP\
    \ address most\n        recently accessed by a client with that Client-identifier.\
    \  In\n        addition, it may supply additional IP addresses that have been\n\
    \        associated with Client-identifier in different subnets.\n        Information\
    \ about these bindings can then be found using the\n        Query by IP Address,\
    \ described above.\n        The DHCP server replies with a DHCPLEASEACTIVE message\
    \ if the\n        Client-identifier in the DHCPLEASEQUERY message currently has\
    \ an\n        active lease on an IP address in this DHCP server.  The server\n\
    \        replies with a DHCPLEASEUNKNOWN message if the server does not\n    \
    \    have an active lease by a client with this Client-identifier.\n   For many\
    \ DHCP servers, the query by IP address is likely to be the\n   most efficient\
    \ form of leasequery.  This is the form of\n   DHCPLEASEQUERY that SHOULD be used\
    \ if possible.\n   The DHCPLEASEUNASSIGNED or DHCPLEASEACTIVE message reply must\
    \ always\n   contain the IP address in the \"ciaddr\" field.  The DHCPLEASEACTIVE\n\
    \   message SHOULD contain the physical address of the IP address lease\n   owner\
    \ in the \"htype\", \"hlen\", and \"chaddr\" fields.  The Parameter\n   Request\
    \ List (option 55) can be used to request specific options to\n   be returned\
    \ about the IP address in the ciaddr.  The reply often\n   contains the time until\
    \ expiration of the lease, and the original\n   contents of the Relay Agent Information\
    \ option [RFC3046].  The access\n   concentrator uses the \"chaddr\" field and\
    \ Relay Agent Information\n   option to construct location information, which\
    \ can be cached on the\n   access concentrator until lease expiration.\n   Any\
    \ DHCP server that supports the DHCPLEASEQUERY message SHOULD save\n   the information\
    \ from the most recent Relay Agent Information option\n   (option 82) [RFC3046]\
    \ associated with every IP address that it\n   serves.  It is assumed that most\
    \ clients that generate the\n   DHCPLEASEQUERY message will ask for the Relay\
    \ Agent Information\n   option (option 82) in the Parameter Request List (option\
    \ 55), and so\n   supporting the DHCPLEASEQUERY message without having the Relay\
    \ Agent\n   Information option around to return to the client is likely to be\n\
    \   less than helpful.\n   A server that implements DHCPLEASEQUERY SHOULD also\
    \ save the\n   information on the most recent Vendor class identifier, option\
    \ 60,\n   associated with each IP address, since this option is also likely to\n\
    \   be requested by clients sending the DHCPLEASEQUERY message.\n"
- title: 6.  Protocol Details
  contents:
  - '6.  Protocol Details

    '
- title: 6.1.  Definitions Required for DHCPLEASEQUERY Processing
  contents:
  - "6.1.  Definitions Required for DHCPLEASEQUERY Processing\n   The operation of\
    \ the DHCPLEASEQUERY message requires the definition\n   of the following new\
    \ and extended values for the DHCP packet beyond\n   those defined by [RFC2131]\
    \ and [RFC2132].  See also Section 8, IANA\n   Considerations.\n      1.  The\
    \ message type option (option 53) from [RFC2132] requires\n          four new\
    \ values: one for the DHCPLEASEQUERY message itself and\n          one for each\
    \ of its three possible responses\n          DHCPLEASEUNASSIGNED, DHCPLEASEACTIVE,\
    \ DHCPLEASEUNKNOWN.  The\n          values of these message types are shown below\
    \ in an extension\n          of the table from section 9.6 of [RFC2132]:\n   \
    \                      Value   Message Type\n                         -----  \
    \ ------------\n                           10    DHCPLEASEQUERY\n            \
    \               11    DHCPLEASEUNASSIGNED\n                           12    DHCPLEASEUNKNOWN\n\
    \                           13    DHCPLEASEACTIVE\n      2.  There is a new option,\
    \ the client-last-transaction-time:\n          client-last-transaction-time\n\
    \          This option allows the receiver to determine the time of the\n    \
    \      most recent access of the client.  It is particularly useful\n        \
    \  when DHCPLEASEACTIVE messages from two different DHCP servers\n          need\
    \ to be compared, although it can be useful in other\n          situations.  The\
    \ value is a duration in seconds from the\n          current time into the past\
    \ when this IP address was most\n          recently the subject of communication\
    \ between the client and\n          the DHCP server.\n          This MUST NOT\
    \ be an absolute time.  This MUST NOT be an\n          absolute number of seconds\
    \ since Jan. 1, 1970.  Instead, this\n          MUST be an integer number of seconds\
    \ in the past from the time\n          the DHCPLEASEACTIVE message is sent that\
    \ the client last dealt\n          with this server about this IP address.  In\
    \ the same way that\n          the IP Address Lease Time option (option 51) encodes\
    \ a lease\n          time that is a number of seconds into the future from the\
    \ time\n          the message was sent, this option encodes a value that is a\n\
    \          number of seconds into the past from when the message was\n       \
    \   sent.\n          The code for the this option is 91.  The length of the this\n\
    \          option is 4 octets.\n              Code   Len      Seconds in the past\n\
    \             +-----+-----+-----+-----+-----+-----+\n             |  91 |  4 \
    \ |  t1 |  t2 |  t3 |  t4 |\n             +-----+-----+-----+-----+-----+-----+\n\
    \      3.  There in a second new option, the associated-ip option:\n         \
    \ associated-ip\n          This option is used to return all of the IP addresses\n\
    \          associated with the DHCP client specified in a particular\n       \
    \   DHCPLEASEQUERY message.\n          The code for this option is 92.  The minimum\
    \ length for this\n          option is 4 octets, and the length MUST always be\
    \ a multiple\n          of 4.\n              Code   Len         Address 1    \
    \           Address 2\n             +-----+-----+-----+-----+-----+-----+-----+-----+--\n\
    \             |  92 |  n  |  a1 |  a2 |  a3 |  a4 |  a1 |  a2 |  ...\n       \
    \      +-----+-----+-----+-----+-----+-----+-----+-----+--\n"
- title: 6.2.  Sending the DHCPLEASEQUERY Message
  contents:
  - "6.2.  Sending the DHCPLEASEQUERY Message\n   The DHCPLEASEQUERY message is typically\
    \ sent by an access\n   concentrator.  The DHCPLEASEQUERY message uses the DHCP\
    \ message\n   format as described in [RFC2131], and uses message number 10 in\
    \ the\n   DHCP Message Type option (option 53).  The DHCPLEASEQUERY message has\n\
    \   the following pertinent message contents:\n     o The giaddr MUST be set to\
    \ the IP address of the requester (i.e.,\n       the access concentrator).  The\
    \ giaddr is independent of the\n       \"ciaddr\" field to be searched -- it is\
    \ simply the return address\n       of the DHCPLEASEUNASSIGNED, DHCPLEASEACTIVE,\
    \ or DHCPLEASEUNKNOWN\n       message from the DHCP server.\n       Note that\
    \ this use of the giaddr is consistent with the\n       definition of giaddr in\
    \ [RFC2131], where the giaddr is always\n       used as the return address of\
    \ the DHCP response message.  In some\n       (but not all) contexts in RFC 2131,\
    \ the giaddr is used as the\n       \"key\" to access the appropriate address\
    \ pool.  The DHCPLEASEQUERY\n       message is one of those cases where the giaddr\
    \ MUST NOT be used\n       as such a \"key\".\n     o The Parameter Request List\
    \ option (option 55) SHOULD be set to\n       the options of interest to the requester.\
    \  The interesting\n       options are likely to include the IP Address Lease\
    \ Time option\n       (option 51), the Relay Agent Information option (option\
    \ 82), and\n       possibly the Vendor class identifier option (option 60).  In\
    \ the\n       absence of a Parameter Request List option, the server SHOULD\n\
    \       return the same options it would return for a DHCPREQUEST message\n  \
    \     that didn't contain a DHCPLEASEQUERY message, which includes\n       those\
    \ mandated by Section 4.3.1 of [RFC2131] as well as any\n       options that the\
    \ server was configured to always return to a\n       client.\n   Additional details\
    \ concerning different query types are:\n      o Query by IP address:\n      \
    \  The values of htype, hlen, and chaddr MUST be set to zero.\n        The \"\
    ciaddr\" field MUST be set to the IP address of the lease to\n        be queried.\n\
    \        The Client-identifier option (option 61) MUST NOT appear in the\n   \
    \     packet.\n      o Query by MAC address:\n        The values of htype, hlen,\
    \ and chaddr MUST be set to the value\n        of the MAC address to search for.\n\
    \        The \"ciaddr\" field MUST be set to zero.\n        The Client-identifier\
    \ option (option 61) MUST NOT appear in the\n        packet.\n      o Query by\
    \ Client-identifier option:\n        There MUST be a Client-identifier option\
    \ (option 61) in the\n        DHCPLEASEQUERY message.\n        The \"ciaddr\"\
    \ field MUST be set to zero.\n        The values of htype, hlen, and chaddr MUST\
    \ be set to zero.\n   The DHCPLEASEQUERY message SHOULD be sent to a DHCP server\
    \ which is\n   known to possess authoritative information concerning the IP address.\n\
    \   The DHCPLEASEQUERY message MAY be sent to more than one DHCP server,\n   and\
    \ in the absence of information concerning which DHCP server might\n   possess\
    \ authoritative information concerning the IP address, it\n   SHOULD be sent to\
    \ all DHCP servers configured for the associated\n   relay agent (if any are known).\n\
    \   Any device expecting to use a DHCPLEASEQUERY message SHOULD ensure\n   that\
    \ the Relay Agent Info option that it uses contains information\n   that unambiguously\
    \ identifies the device.\n"
- title: 6.3.  Receiving the DHCPLEASEQUERY Message
  contents:
  - "6.3.  Receiving the DHCPLEASEQUERY Message\n   A server that implements the DHCPLEASEQUERY\
    \ message MUST implement\n   all three query regimes: query by IP address, query\
    \ by MAC address,\n   and query by Client-identifier.\n   A DHCPLEASEQUERY message\
    \ MUST have a non-zero giaddr.  The\n   DHCPLEASEQUERY message MUST have exactly\
    \ one of the following: a\n   non-zero ciaddr, a non-zero htype/hlen/chaddr, or\
    \ a Client-identifier\n   option.\n   The DHCP server that receives a DHCPLEASEQUERY\
    \ message MUST base its\n   response on the particular data item used in the query.\n\
    \   The giaddr is used only for the destination address of any generated\n   response\
    \ and, while required, is not otherwise used in generating the\n   response to\
    \ the DHCPLEASEQUERY message.  It MUST NOT be used to\n   restrict the processing\
    \ of the query in any way, and MUST NOT be used\n   locate a subnet to which the\
    \ ciaddr (if any) must belong.\n   Note that this use of the giaddr is consistent\
    \ with the definition of\n   giaddr in [RFC2131], where the giaddr is always used\
    \ as the return\n   address of the DHCP response message.  In some (but not all)\
    \ contexts\n   in RFC 2131, the giaddr is used as the \"key\" to access the\n\
    \   appropriate address pool.  The DHCPLEASEQUERY message is one of those\n  \
    \ cases where the giaddr MUST NOT be used as such a \"key\".\n"
- title: 6.4.  Responding to the DHCPLEASEQUERY Message
  contents:
  - "6.4.  Responding to the DHCPLEASEQUERY Message\n   There are three possible responses\
    \ to a DHCPLEASEQUERY message:\n      o DHCPLEASEUNASSIGNED\n        The server\
    \ MUST respond with a DHCPLEASEUNASSIGNED message if\n        this server has\
    \ information about the IP address, but there is\n        no active lease for\
    \ the IP address.  The DHCPLEASEUNASSIGNED\n        message is only returned for\
    \ a query by IP address, and\n        indicates that the server manages this IP\
    \ address, but there is\n        no currently active lease on this IP address.\n\
    \      o DHCPLEASEUNKNOWN\n        The DHCPLEASEUNKNOWN message indicates that\
    \ the server does not\n        manage the IP address or the client specified in\
    \ the\n        DHCPLEASEQUERY message does not currently have a lease on an IP\n\
    \        address.\n        When responding with a DHCPLEASEUNKNOWN, the DHCP server\
    \ MUST\n        NOT include other DHCP options in the response.\n      o DHCPLEASEACTIVE\n\
    \        The DHCPLEASEACTIVE message indicates that the server not only\n    \
    \    knows about the IP address and client specified in the\n        DHCPLEASEACTIVE\
    \ message, but also knows that there is an active\n        lease by that client\
    \ for that IP address.\n        The server MUST respond with a DHCPLEASEACTIVE\
    \ message when the\n        IP address returned in the \"ciaddr\" field is currently\
    \ leased.\n"
- title: 6.4.1.  Determining the IP address about Which to Respond
  contents:
  - "6.4.1.  Determining the IP address about Which to Respond\n   Since the response\
    \ to a DHCPLEASEQUERY request can only contain full\n   information about one\
    \ IP address -- the one that appears in the\n   \"ciaddr\" field -- determination\
    \ of which IP address about which to\n   respond is a key issue.  Of course, the\
    \ values of additional IP\n   addresses for which a client has a lease must also\
    \ be returned in the\n   associated-ip option (Section 6.1, #3).  This is the\
    \ only information\n   returned not directly associated with the IP address in\
    \ the \"ciaddr\"\n   field.\n   In the event that an IP address appears in the\
    \ \"ciaddr\" field of a\n   DHCPLEASEQUERY message, if that IP address is one\
    \ managed by the DHCP\n   server, then that IP address MUST be set in the \"ciaddr\"\
    \ field of a\n   DHCPLEASEUNASSIGNED message.\n   If the IP address is not managed\
    \ by the DHCP server, then a\n   DHCPLEASEUNKNOWN message must be returned.\n\
    \   If the \"ciaddr\" field of the DHCPLEASEQUERY is zero, then the\n   DHCPLEASEQUERY\
    \ message is a query by Client-identifier or MAC\n   address.  In this case, the\
    \ client's identity is any client that has\n   proffered an identical Client-identifier\
    \ option (if the Client-\n   identifier option appears in the DHCPLEASEQUERY message),\
    \ or an\n   identical MAC address (if the MAC address fields in the\n   DHCPLEASEQUERY\
    \ message are non-zero).  This client matching approach\n   will, for the purposes\
    \ of this section, be described as \"Client-\n   identifier or MAC address\".\n\
    \   If the \"ciaddr\" field is zero in a DHCPLEASEQUERY message, then the\n  \
    \ IP address placed in the \"ciaddr\" field of a DHCPLEASEACTIVE message\n   MUST\
    \ be that of an IP address for which the client that most recently\n   used the\
    \ IP address matches the Client-identifier or MAC address\n   specified in the\
    \ DHCPLEASEQUERY message.\n   If there is only a single IP address that fulfills\
    \ this criteria,\n   then it MUST be placed in the \"ciaddr\" field of the DHCPLEASEACTIVE\n\
    \   message.\n   In the case where more than one IP address has been accessed\
    \ by the\n   client specified by the MAC address or Client-identifier option,\
    \ then\n   the DHCP server MUST return the IP address returned to the client in\n\
    \   the most recent transaction with the client unless the DHCP server\n   has\
    \ been configured by the server administrator to use some other\n   preference\
    \ mechanism.\n   If, after all of the above processing, no value is set in the\n\
    \   \"ciaddr\" field of the DHCPLEASEUNASSIGNED or DHCPLEASEACTIVE message,\n\
    \   then a DHCPLEASEUNKNOWN message MUST be returned instead.\n"
- title: 6.4.2.  Building a DHCPLEASEUNASSIGNED or DHCPLEASEACTIVE Message Once
  contents:
  - "6.4.2.  Building a DHCPLEASEUNASSIGNED or DHCPLEASEACTIVE Message Once\n    \
    \    the \"ciaddr\" Field Is Set\n   Once the \"ciaddr\" field of the DHCPLEASEUNASSIGNED\
    \ is set, the\n   processing for a DHCPLEASEUNASSIGNED message is complete.  No\
    \ other\n   options are returned for the DHCPLEASEUNASSIGNED message.\n   For\
    \ the DHCPLEASEACTIVE message, the rest of the processing largely\n   involves\
    \ returning information about the IP address specified in the\n   \"ciaddr\" field.\n\
    \   The IP address in the \"ciaddr\" field of the DHCPLEASEUNASSIGNED or\n   DHCPLEASEACTIVE\
    \ message MUST be one for which this server is\n   responsible (or a DHCPLEASEUNKNOWN\
    \ message would be have already been\n   returned early in the processing described\
    \ in the previous section).\n   The MAC address of the DHCPLEASEACTIVE message\
    \ MUST be set to the\n   values that identify the client associated with the IP\
    \ address in the\n   \"ciaddr\" field of the DHCPLEASEUNASSIGNED message.\n  \
    \ If the Client-identifier option (option 61) is specified in the\n   Parameter\
    \ Request List option (option 55), then the Client-identifier\n   (if any) of\
    \ the client associated with the IP address in the \"ciaddr\"\n   field SHOULD\
    \ be returned in the DHCPLEASEACTIVE message.\n   In the case where more than\
    \ one IP address has been involved in a\n   DHCP message exchange with the client\
    \ specified by the MAC address\n   and/or Client-identifier option, then the list\
    \ of all of the IP\n   addresses MUST be returned in the associated-ip option,\
    \ whether or\n   not that option was requested as part of the Parameter Request\
    \ List\n   option.\n   If the IP Address Lease Time option (option 51) is specified\
    \ in the\n   Parameter Request List and if there is a currently valid lease for\n\
    \   the IP address specified in the ciaddr, then the DHCP server MUST\n   return\
    \ this option in the DHCPLEASEACTIVE message with its value\n   equal to the time\
    \ remaining until lease expiration.  If there is no\n   valid lease for the IP\
    \ address, then the server MUST NOT return the\n   IP Address Lease Time option\
    \ (option 51).\n   A request for the Renewal (T1) Time Value option or the Rebinding\n\
    \   (T2) Time Value option in the Parameter Request List of the\n   DHCPLEASEQUERY\
    \ message MUST be handled like the IP Address Lease Time\n   option is handled.\
    \  If there is a valid lease and these times are not\n   yet in the past, then\
    \ the DHCP server SHOULD return these options\n   (when requested) with the remaining\
    \ time until renewal or rebinding,\n   respectively.  If these times are already\
    \ in the past, or if there is\n   not currently a valid lease for this IP address,\
    \ the DHCP server MUST\n   NOT return these options.\n   If the Relay Agent Information\
    \ (option 82) is specified in the\n   Parameter Request List, then the information\
    \ contained in the most\n   recent Relay Agent Information option received from\
    \ the relay agent\n   associated with this IP address MUST be included in the\n\
    \   DHCPLEASEACTIVE message.\n   The DHCPLEASEACTIVE message SHOULD include the\
    \ values of all other\n   options not specifically discussed above that were requested\
    \ in the\n   Parameter Request List of the DHCPLEASEQUERY message and that are\n\
    \   acceptable to return based on the list of \"non-sensitive options\",\n   discussed\
    \ below.\n   DHCP servers SHOULD be configurable with a list of \"non-sensitive\n\
    \   options\" that can be returned to the client when specified in the\n   Parameter\
    \ Request List of the DHCPLEASEQUERY message.  Any option not\n   on this list\
    \ SHOULD NOT be returned to a client, even if requested by\n   that client.\n\
    \   The DHCP server uses information from its lease binding database to\n   supply\
    \ the DHCPLEASEACTIVE option values.  The values of the options\n   that were\
    \ returned to the DHCP client would generally be preferred,\n   but in the absence\
    \ of those, options that were sent in DHCP client\n   requests would be acceptable.\n\
    \   In some cases, the Relay Agent Information option in an incoming\n   DHCPREQUEST\
    \ packet is used to help determine the options returned to\n   the DHCP client\
    \ that sent the DHCPREQUEST.  When responding to a\n   DHCPLEASEQUERY message,\
    \ the DHCP server MUST use the saved Relay\n   Agent Information option just like\
    \ it did when responding to the DHCP\n   client in order to determine the values\
    \ of any options requested by\n   the DHCPLEASEQUERY message.  The goal is to\
    \ return the same option\n   values to the DHCPLEASEQUERY as those that were returned\
    \ to the\n   DHCPDISCOVER or DHCPREQUEST from the DHCP client (unless otherwise\n\
    \   specified, above).\n   In the event that two servers are cooperating to provide\
    \ a high-\n   availability DHCP server, as supported by [RFC2131], they would\
    \ have\n   to communicate some information about IP address bindings to each\n\
    \   other.  In order to properly support the DHCPLEASEQUERY message,\n   these\
    \ servers MUST ensure that they communicate the Relay Agent\n   Information option\
    \ information to each other in addition to any other\n   IP address binding information.\n"
- title: 6.4.3.  Sending a DHCPLEASEUNASSIGNED, DHCPLEASEACTIVE, or
  contents:
  - "6.4.3.  Sending a DHCPLEASEUNASSIGNED, DHCPLEASEACTIVE, or\n        DHCPLEASEUNKNOWN\
    \ Message\n   The server expects a giaddr in the DHCPLEASEQUERY message, and\n\
    \   unicasts the DHCPLEASEUNASSIGNED, DHCPLEASEACTIVE, or\n   DHCPLEASEUNKNOWN\
    \ message to the giaddr.  If the \"giaddr\" field is\n   zero, then the DHCP server\
    \ MUST NOT reply to the DHCPLEASEQUERY\n   message.\n"
- title: 6.5.  Receiving a DHCPLEASEUNASSIGNED, DHCPLEASEACTIVE, or
  contents:
  - "6.5.  Receiving a DHCPLEASEUNASSIGNED, DHCPLEASEACTIVE, or\n      DHCPLEASEUNKNOWN\
    \ Message\n   When a DHCPLEASEACTIVE message is received in response to the\n\
    \   DHCPLEASEQUERY message, it means that there is a currently active\n   lease\
    \ for this IP address in this DHCP server.  The access\n   concentrator SHOULD\
    \ use the information in the \"htype\", \"hlen\", and\n   \"chaddr\" fields of\
    \ the DHCPLEASEACTIVE as well as any Relay Agent\n   Information option information\
    \ included in the packet to refresh its\n   location information for this IP address.\n\
    \   When a DHCPLEASEUNASSIGNED message is received in response to the\n   DHCPLEASEQUERY\
    \ message, that means that there is no currently active\n   lease for the IP address\
    \ present in the DHCP server, but that this\n   server does in fact manage that\
    \ IP address.  In this case, the access\n   concentrator SHOULD cache this information\
    \ in order to prevent\n   unacceptable loads on the access concentrator and the\
    \ DHCP server in\n   the face of a malicious or seriously compromised device downstream\
    \ of\n   the access concentrator.  This caching could be as simple as simply\n\
    \   setting a bit saying that a response was received from a server that\n   knew\
    \ about this IP address but that there was no current lease.  This\n   would,\
    \ of course, need to be cleared when the access concentrator\n   next \"gleaned\"\
    \ that a lease for this IP address came into existence.\n   In either case, when\
    \ a DHCPLEASEUNASSIGNED or DHCPLEASEACTIVE message\n   is received in response\
    \ to a DHCPLEASEQUERY message, it means that\n   the DHCP server that responded\
    \ is a DHCP server that manages the IP\n   address present in the ciaddr, and\
    \ the Relay Agent SHOULD cache this\n   information for later use.\n   When a\
    \ DHCPLEASEUNKNOWN message is received by an access concentrator\n   that has\
    \ sent out a DHCPLEASEQUERY message, it means that the DHCP\n   server contacted\
    \ supports the DHCPLEASEQUERY message but that the\n   DHCP server does not have\
    \ definitive information concerning the IP\n   address contained in the \"ciaddr\"\
    \ field of the DHCPLEASEQUERY\n   message.  If there is no IP address in the \"\
    ciaddr\" field of the\n   DHCPLEASEQUERY message, then a DHCPLEASEUNKNOWN message\
    \ means that\n   the DHCP server does not have definitive information concerning\
    \ the\n   DHCP client specified in the \"hlen\", \"htype\", and \"chaddr\" fields\
    \ or\n   the Client-identifier option of the DHCPLEASEQUERY message.\n   The access\
    \ concentrator SHOULD cache this information, but only for a\n   relatively short\
    \ lifetime, approximately 5 minutes.\n   Having cached this information, the access\
    \ concentrator SHOULD only\n   infrequently direct a DHCPLEASEQUERY message to\
    \ a DHCP server that\n   responded to a DHCPLEASEQUERY message for a particular\
    \ \"ciaddr\" field\n   with a DHCPLEASEUNKNOWN.\n"
- title: 6.6.  Receiving No Response to the DHCPLEASEQUERY Message
  contents:
  - "6.6.  Receiving No Response to the DHCPLEASEQUERY Message\n   When an access\
    \ concentrator receives no response to a DHCPLEASEQUERY\n   message, there are\
    \ several possible reasons:\n     o The DHCPLEASEQUERY or a corresponding DHCPLEASEUNASSIGNED,\n\
    \       DHCPLEASEACTIVE, or DHCPLEASEUNKNOWN was lost during transmission\n  \
    \     or the DHCPLEASEQUERY arrived at the DHCP server but it was\n       dropped\
    \ because the server was too busy.\n     o The DHCP server doesn't support DHCPLEASEQUERY.\n\
    \   In the first of the cases above, a retransmission of the\n   DHCPLEASEQUERY\
    \ would be appropriate, but in the second of the two\n   cases, a retransmission\
    \ would not be appropriate.  There is no way to\n   tell these two cases apart\
    \ (other than, perhaps, because of a DHCP\n   server's response to other DHCPLEASEQUERY\
    \ messages indicating that it\n   does or does not support the DHCPLEASEQUERY\
    \ message).\n   An access concentrator that utilizes the DHCPLEASEQUERY message\n\
    \   SHOULD attempt to resend DHCPLEASEQUERY messages to servers that do\n   not\
    \ respond to them using a backoff algorithm for the retry time that\n   approximates\
    \ an exponential backoff.  The access concentrator SHOULD\n   adjust the backoff\
    \ approach such that DHCPLEASEQUERY messages do not\n   arrive at a server that\
    \ is not otherwise known to support the\n   DHCPLEASEQUERY message at a rate of\
    \ more than approximately one\n   packet every 10 seconds, and yet (if the access\
    \ concentrator needs to\n   send DHCPLEASEQUERY messages) not less than one DHCPLEASEQUERY\
    \ per 70\n   seconds.\n   In practice, this approach would probably best be handled\
    \ by a per-\n   server timer that is restarted whenever a response to a\n   DHCPLEASEQUERY\
    \ message is received, and expires after one minute.\n   The per-server timer\
    \ would start off expired, and in the expired\n   state only one DHCPLEASEQUERY\
    \ message would be queued for the\n   associated server.\n   All DHCPLEASEQUERY\
    \ messages SHOULD use the exponential backoff\n   algorithm specified in Section\
    \ 4.1 of [RFC2131].\n   Thus, in the initial state, the per-server timer is expired,\
    \ and a\n   single DHCPLEASEQUERY message is queued for each server.  After the\n\
    \   first response to a DHCPLEASEQUERY message, the per-server timer is\n   started.\
    \  At that time, multiple DHCPLEASEQUERY messages can be sent\n   in parallel\
    \ to the DHCP server, though the total number SHOULD be\n   limited to 100 or\
    \ 200, to avoid swamping the DHCP server.  Each of\n   these messages uses the\
    \ [RFC2131] exponential backoff algorithm.\n   Every time a response to any of\
    \ these messages is received, the per-\n   server timer is reset and starts counting\
    \ again up to one minute.  In\n   the event the per-server timer goes off, then\
    \ all outstanding\n   messages SHOULD be dropped except for a single DHCPLEASEQUERY\
    \ message\n   that is used to poll the server at approximately 64-second intervals\n\
    \   until such time as another (or the first) response to the\n   DHCPLEASEQUERY\
    \ is received.\n   In the event that there is no DHCPLEASEQUERY traffic for one\
    \ minute,\n   then the per-server timer will expire.  After that time, there will\n\
    \   only be one DHCPLEASEQUERY message allowed to be outstanding to that\n   server\
    \ until a response to that message is received.\n"
- title: 6.7.  Lease Binding Data Storage Requirements
  contents:
  - "6.7.  Lease Binding Data Storage Requirements\n   DHCP server implementations\
    \ that implement the DHCPLEASEQUERY\n   capability MUST save the most recent Relay\
    \ Agent Information option\n   from the most recent DHCPREQUEST packet for two\
    \ reasons.  First, it\n   is almost certain to be requested by in the dhcp-parameter-request-\n\
    \   list option in any DHCPLEASEQUERY request.  Second, the saved Relay\n   Agent\
    \ Information option may be necessary to determine the value of\n   other options\
    \ given to the DHCP client, if these are requested by the\n   dhcp-parameter-request\
    \ list in the DHCPLEASEQUERY request.\n   This is a list of the information that\
    \ is required to successfully\n   implement\n      o relay-agent-info option from\
    \ client packet: MUST store with\n        binding.\n      o client-last-transaction-time\
    \ of last client interaction: MUST\n        store with binding.\n      o vendor-class-id:\
    \ SHOULD store with binding.\n   These data storage requirements are minimally\
    \ larger than those\n   required for normal operation of the DHCP protocol, as\
    \ required to\n   properly implement [RFC2131].\n"
- title: 6.8.  Using the DHCPLEASEQUERY Message with Multiple DHCP Servers
  contents:
  - "6.8.  Using the DHCPLEASEQUERY Message with Multiple DHCP Servers\n   When using\
    \ the DHCPLEASEQUERY message in an environment where\n   multiple DHCP servers\
    \ may contain authoritative information about the\n   same IP address (such as\
    \ when two DHCP servers are cooperating to\n   provide a high-availability DHCP\
    \ service), multiple, possibly\n   conflicting, responses might be received.\n\
    \   In this case, some information in the response packet SHOULD be used\n   to\
    \ decide among the various responses.  The client-last-transaction-\n   time (if\
    \ it is available) can be used to decide which server has more\n   recent information\
    \ concerning the IP address returned in the \"ciaddr\"\n   field.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   Access concentrators that use DHCP gleaning,\
    \ refreshed with\n   DHCPLEASEQUERY messages, will maintain accurate location\
    \ information.\n   Location information accuracy ensures that the access concentrator\n\
    \   can forward data traffic to the intended location in the broadband\n   access\
    \ network, can perform IP source address verification of\n   datagrams from the\
    \ access network, and can encrypt traffic that can\n   only be decrypted by the\
    \ intended access modem (e.g., [BPI] and\n   [BPI+]).  As a result, the access\
    \ concentrator does not need to\n   depend on ARP broadcasts across the access\
    \ network, which is\n   susceptible to malicious hosts that masquerade as the\
    \ intended IP\n   endpoints.  Thus, the DHCPLEASEQUERY message allows an access\n\
    \   concentrator to provide considerably enhanced security.\n   DHCP servers SHOULD\
    \ prevent exposure of location information\n   (particularly the mapping of hardware\
    \ address to IP address lease,\n   which can be an invasion of broadband subscriber\
    \ privacy) by\n   employing the techniques detailed in [RFC3118], \"Authentication\
    \ for\n   DHCP Messages\".\n   This RFC describes how a DHCP client interacts\
    \ with a DHCP server.\n   Access concentrators that send the DHCPLEASEQUERY message\
    \ are\n   essentially DHCP clients for the purposes of the DHCPLEASEQUERY\n  \
    \ message, even though they perform the functions of a DHCP relay agent\n   as\
    \ well.  Thus, [RFC3118] is an appropriate mechanism for\n   DHCPLEASEQUERY messages.\n\
    \   Since [RFC3118] discusses the normal DHCP client interaction,\n   consisting\
    \ of a DHCPDISCOVER, DHCPOFFER, DHCPREQUEST, and DHCPACK, it\n   is necessary\
    \ to transpose the operations described in [RFC3118] to\n   the DHCPLEASEQUERY\
    \ domain.  The operations described in [RFC3118] for\n   DHCPDISCOVER are performed\
    \ for DHCPLEASEQUERY, and the operations\n   described for DHCPOFFER are performed\
    \ for DHCPLEASEUNASSIGNED,\n   DHCPLEASEACTIVE, and DHCPLEASEUNKNOWN messages.\n\
    \   Access concentrators SHOULD minimize potential denial of service\n   attacks\
    \ on the DHCP servers by minimizing the generation of\n   DHCPLEASEQUERY messages.\
    \  In particular, the access concentrator\n   SHOULD employ negative caching (i.e.,\
    \ cache DHCPLEASEUNASSIGNED,\n   DHCPLEASEACTIVE, and DHCPLEASEUNKNOWN responses\
    \ to DHCPLEASEQUERY\n   messages) and ciaddr restriction (i.e., don't send a DHCPLEASEQUERY\n\
    \   message with a ciaddr outside of the range of the attached broadband\n   access\
    \ networks).  Together, these mechanisms limit the access\n   concentrator to\
    \ transmitting one DHCPLEASEQUERY message (excluding\n   message retries) per\
    \ legitimate broadband access network IP address\n   after a reboot event.\n \
    \  DHCP servers supporting the DHCPLEASEQUERY message SHOULD ensure that\n   they\
    \ cannot be successfully attacked by being flooded with large\n   quantities of\
    \ DHCPLEASEQUERY messages in a short time.\n   In some environments, it may be\
    \ appropriate to configure a DHCP\n   server with the IP addresses of the relay\
    \ agents for which it may\n   respond to DHCPLEASEQUERY messages, thereby allowing\
    \ it to respond\n   only to requests from only a handful of relay agents.  This\
    \ does not\n   provide any true security, but may be useful to thwart\n   unsophisticated\
    \ attacks of various sorts.\n"
- title: 8.  IANA Considerations
  contents:
  - "8.  IANA Considerations\n   IANA has assigned six values for this document. \
    \ See Section 6.1 for\n   details.  There are four new messages types, which are\
    \ the value of\n   the message type option (option 53) from [RFC2132].  The value\
    \ for\n   DHCPLEASEQUERY is 10, the value for DHCPLEASEUNASSIGNED is 11, the\n\
    \   value for DHCPLEASEUNKNOWN is 12, and the value for DHCPLEASEACTIVE\n   is\
    \ 13.  Finally, there are two new DHCP option defined; the client-\n   last-transaction-time\
    \ option -- option code 91, and the associated-ip\n   option -- option code 92.\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   Jim Forster, Joe Ng, Guenter Roeck, and Mark Stapp contributed\n\
    \   greatly to the initial creation of the DHCPLEASEQUERY message.\n   Patrick\
    \ Guelat suggested several improvements to support static IP\n   addressing. \
    \ Thomas Narten made many suggestions for improvements.\n   Russ Housley pressed\
    \ effectively for increased security capabilities,\n   and Ted Hardie suggested\
    \ ways to minimize undesired information\n   leakage.  Bert Wijnen suggested we\
    \ clarify our focus to DHCPv4 and\n   distinguish our approach from that of the\
    \ DHCP MIB.  R. Barr Hibbs,\n   one of the authors of the DHCP MIB, supplied information\
    \ to\n   effectively distinguish that effort from DHCPLEASEQUERY.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC2119]   Bradner, S., \"Key words for use\
    \ in RFCs to Indicate\n               Requirement Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n   [RFC2131]   Droms, R., \"Dynamic Host Configuration Protocol\"\
    , RFC\n               2131, March 1997.\n   [RFC3046]   Patrick, M., \"DHCP Relay\
    \ Agent Information Option\", RFC\n               3046, January 2001.\n   [RFC3118]\
    \   Droms, R. and W. Arbaugh, \"Authentication for DHCP\n               Messages\"\
    , RFC 3118, June 2001.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [RFC826]    Plummer, D., \"Ethernet Address\
    \ Resolution Protocol: Or\n               converting network protocol addresses\
    \ to 48.bit Ethernet\n               address for transmission on Ethernet hardware\"\
    , STD 37,\n               RFC 826, November 1982.\n   [RFC951]    Croft, W. and\
    \ J. Gilmore, \"Bootstrap Protocol\", RFC 951,\n               September 1985.\n\
    \   [RFC1542]   Wimer, W., \"Clarifications and Extensions for the\n         \
    \      Bootstrap Protocol\", RFC 1542, October 1993.\n   [RFC2132]   Alexander,\
    \ S. and R. Droms, \"DHCP Options and BOOTP\n               Vendor Extensions\"\
    , RFC 2132, March 1997.\n   [RFC3315]   Droms, R., Bound, J., Volz, B., Lemon,\
    \ T., Perkins, C.,\n               and M. Carney, \"Dynamic Host Configuration\
    \ Protocol for\n               IPv6 (DHCPv6)\", RFC 3315, July 2003.\n   [BPI]\
    \       SCTE Data Standards Subcommittee, \"Data-Over-Cable\n               Service\
    \ Interface Specifications: DOCSIS 1.0 Baseline\n               Privacy Interface\
    \ Specification SCTE 22-2 2002\", 2002,\n               available at http://www.scte.org/standards/.\n\
    \   [BPI+]      CableLabs, \"Data-Over-Cable Service Interface\n             \
    \  Specifications: Baseline Privacy Plus Interface\n               Specification\
    \ CM-SP-BPI+_I12-050812\", August 2005,\n               available at http://www.cablemodem.com/.\n\
    \   [DHCPMIB]   Hibbs, R., Waters, G., \"Dynamic Host Configuration\n        \
    \       Protocol (DHCP) Server MIB\", Work in Progress, February\n           \
    \    2004.\n   [DOCSIS]    SCTE Data Standards Subcommittee, \"Data-Over-Cable\n\
    \               Service Interface Specifications: DOCSIS 1.0 Radio\n         \
    \      Frequency Interface Specification SCTE 22-1 2002\", 2002,\n           \
    \    available at http://www.scte.org/standards/.\n   [EUROMODEM] ECCA, \"Technical\
    \ Specification of a European Cable Modem\n               for digital bi-directional\
    \ communications via cable\n               networks\", Version 1.0, May 1999.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Rich Woundy\n   Comcast Cable\n   27 Industrial Ave.\n\
    \   Chelmsford, MA  01824\n   Phone: (978) 244-4010\n   EMail: richard_woundy@cable.comcast.com\n\
    \   Kim Kinnear\n   Cisco Systems\n   1414 Massachusetts Ave\n   Boxborough, MA\
    \ 01719\n   Phone: (978) 936-0000\n   EMail: kkinnear@cisco.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
