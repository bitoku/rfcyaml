- title: __initial_text__
  contents:
  - "       A Real-time Transport Protocol (RTP) Header Extension for\n          \
    \       Client-to-Mixer Audio Level Indication\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines a mechanism by which packets of Real-time\n\
    \   Transport Protocol (RTP) audio streams can indicate, in an RTP header\n  \
    \ extension, the audio level of the audio sample carried in the RTP\n   packet.\
    \  In large conferences, this can reduce the load on an audio\n   mixer or other\
    \ middlebox that wants to forward only a few of the\n   loudest audio streams,\
    \ without requiring it to decode and measure\n   every stream that is received.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6464.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Terminology .....................................................3\n  \
    \ 3. Audio Levels ....................................................3\n   4.\
    \ Signaling (Setup) Information ...................................5\n   5. Considerations\
    \ on Use ...........................................6\n   6. Security Considerations\
    \ .........................................6\n   7. IANA Considerations .............................................7\n\
    \   8. References ......................................................7\n  \
    \    8.1. Normative References .......................................7\n    \
    \  8.2. Informative References .....................................8\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   In a centralized Real-time Transport Protocol (RTP) [RFC3550]\
    \ audio\n   conference, an audio mixer or forwarder receives audio streams from\n\
    \   many or all of the conference participants.  It then selectively\n   forwards\
    \ some of them to other participants in the conference.  In\n   large conferences,\
    \ it is possible that such a server might be\n   receiving a large number of streams,\
    \ of which only a few are intended\n   to be forwarded to the other conference\
    \ participants.\n   In such a scenario, in order to pick the audio streams to\
    \ forward, a\n   centralized server needs to decode, measure audio levels, and\n\
    \   possibly perform voice activity detection on audio data from a large\n   number\
    \ of streams.  The need for such processing limits the size or\n   number of conferences\
    \ such a server can support.\n   As an alternative, this document defines an RTP\
    \ header extension\n   [RFC5285] through which senders of audio packets can indicate\
    \ the\n   audio level of the packets' payload, reducing the processing load for\n\
    \   a server.\n   The header extension in this document is different than, but\n\
    \   complementary with, the one defined in [RFC6465], which defines a\n   mechanism\
    \ by which audio mixers can indicate to clients the levels of\n   the contributing\
    \ sources that made up the mixed audio.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [RFC2119] and\n   indicate requirement levels for compliant implementations.\n"
- title: 3.  Audio Levels
  contents:
  - "3.  Audio Levels\n   The audio level header extension carries the level of the\
    \ audio in\n   the RTP [RFC3550] payload of the packet with which it is associated.\n\
    \   This information is carried in an RTP header extension element as\n   defined\
    \ by \"A General Mechanism for RTP Header Extensions\" [RFC5285].\n   The payload\
    \ of the audio level header extension element can be\n   encoded using either\
    \ the one-byte or two-byte header defined in\n   [RFC5285].  Figures 1 and 2 show\
    \ sample audio level encodings with\n   each of these header formats.\n      \
    \              0                   1\n                    0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5\n                   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n        \
    \           |  ID   | len=0 |V| level       |\n                   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \              Figure 1: Sample Audio Level Encoding Using the\n             \
    \             One-Byte Header Format\n      0                   1            \
    \       2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |      ID       |     len=1     |V|    level    |    0 (pad)    |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n        \
    \      Figure 2: Sample Audio Level Encoding Using the\n                     \
    \     Two-Byte Header Format\n   Note that, as indicated in [RFC5285], the length\
    \ field in the one-\n   byte header format takes the value 0 to indicate that\
    \ 1 byte follows.\n   In the two-byte header format, on the other hand, the length\
    \ field\n   takes the value of 1.\n   The magnitude of the audio level itself\
    \ is packed into the seven\n   least significant bits of the single byte of the\
    \ header extension,\n   shown in Figures 1 and 2.  The least significant bit of\
    \ the audio\n   level magnitude is packed into the least significant bit of the\
    \ byte.\n   The most significant bit of the byte is used as a separate flag bit\n\
    \   \"V\", defined below.\n   The audio level is expressed in -dBov, with values\
    \ from 0 to 127\n   representing 0 to -127 dBov. dBov is the level, in decibels,\
    \ relative\n   to the overload point of the system, i.e., the highest-intensity\n\
    \   signal encodable by the payload format.  (Note: Representation\n   relative\
    \ to the overload point of a system is particularly useful for\n   digital implementations,\
    \ since one does not need to know the relative\n   calibration of the analog circuitry.)\
    \  For example, in the case of\n   u-law (audio/pcmu) audio [ITU.G711], the 0\
    \ dBov reference would be a\n   square wave with values +/- 8031.  (This translates\
    \ to 6.18 dBm0,\n   relative to u-law's dBm0 definition in Table 6 of [ITU.G711].)\n\
    \   The audio level for digital silence -- for a muted audio source, for\n   example\
    \ -- MUST be represented as 127 (-127 dBov), regardless of the\n   dynamic range\
    \ of the encoded audio format.\n   The audio level header extension only carries\
    \ the level of the audio\n   in the RTP payload of the packet with which it is\
    \ associated, with no\n   long-term averaging or smoothing applied.  For payload\
    \ formats that\n   contain extra error-correction bits or loss-concealment information,\n\
    \   the level corresponds only to the data that would result from the\n   payload's\
    \ normal decoding process, not what it would produce under\n   error or packet\
    \ loss concealment.  The level is measured as a root\n   mean square of all the\
    \ samples in the audio encoded by the packet.\n   To simplify implementation of\
    \ the encoding procedures described here,\n   Appendix A of [RFC6465] provides\
    \ a sample Java implementation of an\n   audio level calculator that helps obtain\
    \ such values from raw linear\n   Pulse Code Modulation (PCM) audio samples.\n\
    \   In addition, a flag bit (labeled \"V\") optionally indicates whether\n   the\
    \ encoder believes the audio packet contains voice activity.  If\n   the V bit\
    \ is in use, the value 1 indicates that the encoder believes\n   the audio packet\
    \ contains voice activity, and the value 0 indicates\n   that the encoder believes\
    \ it does not.  (The voice activity detection\n   algorithm is unspecified and\
    \ left implementation-specific.)  If the V\n   bit is not in use, its value is\
    \ unspecified and MUST be ignored by\n   receivers.  The use of the V bit is signaled\
    \ using the extension\n   attribute \"vad\", discussed in Section 4.\n   When\
    \ this header extension is used with RTP data sent using the RTP\n   Payload for\
    \ Redundant Audio Data [RFC2198], the header's data\n   describes the contents\
    \ of the primary encoding.\n      Note: This audio level is defined in the same\
    \ manner as is audio\n      noise level in the RTP Payload Comfort Noise specification\n\
    \      [RFC3389].  In [RFC3389], the overall magnitude of the noise level\n  \
    \    in comfort noise is encoded into the first byte of the payload,\n      with\
    \ spectral information about the noise in subsequent bytes.\n      This specification's\
    \ audio level parameter is defined so as to be\n      identical to the comfort\
    \ noise payload's noise-level byte.\n"
- title: 4.  Signaling (Setup) Information
  contents:
  - "4.  Signaling (Setup) Information\n   The URI for declaring this header extension\
    \ in an extmap attribute is\n   \"urn:ietf:params:rtp-hdrext:ssrc-audio-level\"\
    .\n   It has a single extension attribute, named \"vad\".  It takes the form\n\
    \   \"vad=on\" or \"vad=off\".  If the header extension element is signaled\n\
    \   with \"vad=on\", the V bit described in Section 3 is in use, and MUST\n  \
    \ be set by senders.  If the header extension element is signaled with\n   \"\
    vad=off\", the V bit is not in use, and its value MUST be ignored by\n   receivers.\
    \  If the vad extension attribute is not specified, the\n   default is \"vad=on\"\
    .\n   An example attribute line in the Session Description Protocol (SDP)\n  \
    \ for a conference might hence be:\n      a=extmap:6 urn:ietf:params:rtp-hdrext:ssrc-audio-level\
    \ vad=on\n   The vad extension attribute only controls the semantics of this\n\
    \   header extension attribute, and does not make any statement about\n   whether\
    \ the sender is using any other voice activity detection\n   features, such as\
    \ discontinuous transmission, comfort noise, or\n   silence suppression.\n   Using\
    \ the mechanisms of [RFC5285], an endpoint MAY signal multiple\n   instances of\
    \ the header extension element, with different values of\n   the vad attribute,\
    \ so long as these instances use different values\n   for the extension identifier.\
    \  However, again following the rules of\n   [RFC5285], the semantics chosen for\
    \ a header extension element\n   (including its vad setting) for a particular\
    \ extension identifier\n   value MUST NOT be changed within an RTP session.\n"
- title: 5.  Considerations on Use
  contents:
  - "5.  Considerations on Use\n   Mixers and forwarders generally ought not base\
    \ audio forwarding\n   decisions directly on packet-by-packet audio level information,\
    \ but\n   rather ought to apply some analysis of the audio levels and trends.\n\
    \   This general rule applies whether audio levels are provided by\n   endpoints\
    \ (as defined in this document), or are calculated at a\n   server, as would be\
    \ done in the absence of this information.  This\n   section discusses several\
    \ issues that mixers and forwarders may wish\n   to take into account.  (Note\
    \ that this section provides design\n   guidance only, and is not normative.)\n\
    \   First of all, audio levels generally ought to be measured over longer\n  \
    \ intervals than that of a single audio packet.  In order to avoid\n   false-positives\
    \ for short bursts of sound (such as a cough or a\n   dropped microphone), it\
    \ is often useful to require that a\n   participant's audio level be maintained\
    \ for some period of time\n   before considering it to be \"real\"; i.e., some\
    \ type of low-pass\n   filter ought to be applied to the audio levels.  Note,\
    \ though, that\n   such filtering must be balanced with the need to avoid clipping\
    \ of\n   the beginning of a speaker's speech.\n   Additionally, different participants\
    \ may have their audio input set\n   differently.  It may be useful to apply some\
    \ sort of automatic gain\n   control to the audio levels.  There are a number\
    \ of possible\n   approaches to achieving this, e.g., by measuring peak audio\
    \ levels,\n   by average audio levels during speech, or by measuring background\n\
    \   audio levels (average audio levels during non-speech).\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   A malicious endpoint could choose to set the\
    \ values in this header\n   extension falsely, so as to falsely claim that audio\
    \ or voice is or\n   is not present.  It is not clear what could be gained by\
    \ falsely\n   claiming that audio is not present, but an endpoint falsely claiming\n\
    \   that audio is present, or falsely exaggerating its reported levels,\n   could\
    \ perform a denial-of-service attack on an audio conference, so\n   as to send\
    \ silence to suppress other conference members' audio, or\n   could dominate a\
    \ conference by seizing its speaker-selection\n   algorithm.  Thus, if a device\
    \ relies on audio level data from\n   untrusted endpoints, it SHOULD periodically\
    \ audit the level\n   information transmitted, taking appropriate corrective action\
    \ against\n   endpoints that appear to be sending incorrect data.  (However, as\
    \ it\n   is valid for an endpoint to choose to measure audio levels prior to\n\
    \   encoding, some degree of discrepancy could be present.  This would\n   not\
    \ indicate that an endpoint is malicious.)\n   In the Secure Real-time Transport\
    \ Protocol (SRTP) [RFC3711], RTP\n   header extensions are authenticated but not\
    \ encrypted.  When this\n   header extension is used, audio levels are therefore\
    \ visible on a\n   packet-by-packet basis to an attacker passively observing the\
    \ audio\n   stream.  As discussed in [SRTP-VBR-AUDIO], such an attacker might\
    \ be\n   able to infer information about the conversation, possibly with\n   phoneme-level\
    \ resolution.  In scenarios where this is a concern,\n   additional mechanisms\
    \ MUST be used to protect the confidentiality of\n   the header extension.  This\
    \ mechanism could be header extension\n   encryption [SRTP-ENCR-HDR], or a lower-level\
    \ security and\n   authentication mechanism such as IPsec [RFC4301].\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   This document defines a new extension URI in the\
    \ RTP Compact Header\n   Extensions subregistry of the Real-Time Transport Protocol\
    \ (RTP)\n   Parameters registry, according to the following data:\n      Extension\
    \ URI: urn:ietf:params:rtp-hdrext:ssrc-audio-level\n      Description:   Audio\
    \ Level\n      Contact:       jonathan@vidyo.com\n      Reference:     RFC 6464\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2198]  Perkins, C., Kouvelas, I., Hodson, O., Hardman, V.,\n \
    \             Handley, M., Bolot, J., Vega-Garcia, A., and S. Fosse-\n       \
    \       Parisis, \"RTP Payload for Redundant Audio Data\", RFC 2198,\n       \
    \       September 1997.\n   [RFC3550]  Schulzrinne, H., Casner, S., Frederick,\
    \ R., and V.\n              Jacobson, \"RTP: A Transport Protocol for Real-Time\n\
    \              Applications\", STD 64, RFC 3550, July 2003.\n   [RFC5285]  Singer,\
    \ D. and H. Desineni, \"A General Mechanism for RTP\n              Header Extensions\"\
    , RFC 5285, July 2008.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [ITU.G711] International Telecommunication Union,\
    \ \"Pulse Code\n              Modulation (PCM) of Voice Frequencies\",\n     \
    \         ITU-T Recommendation G.711, November 1988.\n   [RFC3389]  Zopf, R.,\
    \ \"Real-time Transport Protocol (RTP) Payload for\n              Comfort Noise\
    \ (CN)\", RFC 3389, September 2002.\n   [RFC3711]  Baugher, M., McGrew, D., Naslund,\
    \ M., Carrara, E., and K.\n              Norrman, \"The Secure Real-time Transport\
    \ Protocol (SRTP)\",\n              RFC 3711, March 2004.\n   [RFC4301]  Kent,\
    \ S. and K. Seo, \"Security Architecture for the\n              Internet Protocol\"\
    , RFC 4301, December 2005.\n   [RFC6465]  Ivov, E., Ed., Marocco, E., Ed., and\
    \ J. Lennox,\n              \"A Real-time Transport Protocol (RTP) Header Extension\
    \ for\n              Mixer-to-Client Audio Level Indication\", RFC 6465,\n   \
    \           December 2011.\n   [SRTP-ENCR-HDR]\n              Lennox, J., \"Encryption\
    \ of Header Extensions in the Secure\n              Real-Time Transport Protocol\
    \ (SRTP)\", Work in Progress,\n              October 2011.\n   [SRTP-VBR-AUDIO]\n\
    \              Perkins, C. and JM. Valin, \"Guidelines for the use of\n      \
    \        Variable Bit Rate Audio with Secure RTP\", Work\n              in Progress,\
    \ July 2011.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Jonathan Lennox (editor)\n   Vidyo, Inc.\n   433 Hackensack\
    \ Avenue\n   Seventh Floor\n   Hackensack, NJ  07601\n   US\n   EMail: jonathan@vidyo.com\n\
    \   Emil Ivov\n   Jitsi\n   Strasbourg  67000\n   France\n   EMail: emcho@jitsi.org\n\
    \   Enrico Marocco\n   Telecom Italia\n   Via G. Reiss Romoli, 274\n   Turin \
    \ 10148\n   Italy\n   EMail: enrico.marocco@telecomitalia.it\n"
