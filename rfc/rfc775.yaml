- title: __initial_text__
  contents:
  - "      RFC 775          Directory oriented FTP commands        Page 1\n\t\t  \
    \     DIRECTORY ORIENTED FTP COMMANDS\n\t\t\t David Mankins (dm@bbn-unix)\n\t\t\
    \t Dan Franklin (dan@bbn-unix)\n\t\t\t  A. D. Owen (ADOwen@bbnd)\n      As a part\
    \ of the Remote Site Maintenance (RSM) project for  ARPA,\n      BBN  has installed\
    \ and maintains the software of several DEC PDP-\n      11s running the Unix operating\
    \ system.  Since Unix  has  a  tree-\n      like  directory  structure,  in  which\
    \ directories are as easy to\n      manipulate as ordinary files, we  have  found\
    \  it  convenient  to\n      expand  the  FTP  servers  on  these machines to\
    \ include commands\n      which deal with the creation of  directories.   Since\
    \  there  are\n      other  hosts  on  the  ARPA net which have tree-like directories,\n\
    \      including Tops-20 and  Multics,  we  have  tried  to  make  these\n   \
    \   commands as general as possible.\n      We have added four commands to our\
    \ server:\n\t   XMKD child\n\t\t\t Make a directory with the name \"child\".\n\
    \t   XRMD child\n\t\t\t Remove the directory with the name \"child\".\n\t   XPWD\n\
    \t\t\t Print the current working directory.\n\t   XCUP\n\t\t\t Change to the parent\
    \ of  the  current  working\n\t\t\t directory.\n      The  \"child\"  argument\
    \  should  be   created   (removed)   as   a\n      subdirectory of the current\
    \ working directory, unless the \"child\"\n      string contains sufficient information\
    \ to  specify  otherwise  to\n      the server, e.g., \"child\" is an absolute\
    \ pathname (in Multics and\n      Unix), or child is something like \"<abso.lute.path>\"\
    \ to Tops-20.\n      RFC 775          Directory oriented FTP commands        Page\
    \ 2\n\t\t\t\t REPLY CODES\n      The XCUP command is a special case of XCWD, and\
    \  is  included  to\n      simplify   the   implementation   of  programs  for\
    \  transferring\n      directory  trees  between  operating  systems  having \
    \  different\n      syntaxes for naming the parent directory.  Therefore we recommend\n\
    \      that the reply codes for XCUP be identical to the reply codes  of\n   \
    \   XCWD.\n      Similarly,  we  recommend  that  the  reply  codes  for  XRMD\
    \  be\n      identical to the reply codes for its file analogue, DELE.\n     \
    \ The reply codes for XMKD, however, are a bit more complicated.  A\n      freshly\
    \ created directory will probably be the object of a future\n      XCWD command.\
    \  Unfortunately, the argument to XMKD may not always\n      be  a suitable argument\
    \ for XCWD.  This is the case, for example,\n      when a  Tops-20  subdirectory\
    \  is  created  by  giving  just  the\n      subdirectory  name.   That  is, \
    \ with  a  Tops-20 server FTP, the\n      command sequence\n\t\t\t\t XMKD MYDIR\n\
    \t\t\t\t XCWD MYDIR\n      will fail.  The new directory may only  be  referred\
    \  to  by  its\n      \"absolute\"  name;  e.g.,  if  the  XMKD command above\
    \ were issued\n      while  connected  to   the   directory   <DFRANKLIN>,   the\
    \   new\n      subdirectory   could   only   be   referred   to   by   the  name\n\
    \      <DFRANKLIN.MYDIR>.\n      Even on Unix and Multics, however, the argument\
    \ given to XMKD may\n      not  be  suitable.   If  it  is a \"relative\" pathname\
    \ (that is, a\n      pathname which is interpreted relative to the current directory),\n\
    \      the  user would need to be in the same current directory in order\n   \
    \   to reach the subdirectory.  Depending on  the  application,  this\n      may\
    \ be inconvenient.  It is not very robust in any case.\n      To solve these problems,\
    \ upon successful completion  of  an  XMKD\n      command, the server should return\
    \ a line of the form:\n\t       257<space>\"<directory-name>\"<space><commentary>\n\
    \      That is, the server will tell the user what string  to  use  when\n   \
    \   referring  to  the  created  directory.   The  directory name can\n      contain\
    \ any character; embedded double-quotes should  be  escaped\n      RFC 775   \
    \       Directory oriented FTP commands        Page 3\n      by double-quotes\
    \ (the \"quote-doubling\" convention).\n      For example, a  user  connects \
    \ to  the  directory  /usr/dm,  and\n      creates a subdirectory, named child:\n\
    \t\t  XCWD /usr/dm\n\t\t  200 directory changed to /usr/dm\n\t\t  XMKD child\n\
    \t\t  257 \"/usr/dm/child\" directory created\n      An example with an embedded\
    \ double quote:\n\t\t  XMKD foo\"bar\n\t\t  257 \"/usr/dm/foo\"\"bar\" directory\
    \ created\n\t\t  XCWD /usr/dm/foo\"bar\n\t\t  200 directory changed to /usr/dm/foo\"\
    bar\n      We  feel that the prior existence of a subdirectory with the same\n\
    \      name  should be interpreted as an error, and have implemented our\n   \
    \   server to give an \"access denied\" error reply in  that case.\n\t\t  CWD\
    \ /usr/dm\n\t\t  200 directory changed to /usr/dm\n\t\t  XMKD child\n\t\t  521-\"\
    /usr/dm/child\" directory already exists;\n\t\t  521    taking no action.\n  \
    \    We recommend that failure replies for XMKD be  analogous  to  its\n     \
    \ file  creating  cousin, STOR.  Also, we recommend that an \"access\n      denied\"\
    \ return be given if a file name with the same name as  the\n      subdirectory\
    \  will conflict with the creation of the subdirectory\n      (this is a problem\
    \ on Unix, but shouldn't be one on Tops-20).\n      Essentially because the XPWD\
    \ command returns  the  same  type  of\n      information  as  the successful\
    \ XMKD command, we have implemented\n      the successful XPWD command to use\
    \ the 257 reply code as well.\n      We present here a summary of the proposed\
    \  reply  codes  for  the\n      experimental  commands.   The codes given outside\
    \ parentheses are\n      consistent with RFC 691; i.e.,  are  for  the  old  protocol,\
    \  as\n      updated  by  the  suggestions  in  that RFC.  The server and user\n\
    \      programs at BBN-Unix currently implement these codes.  Reply  257\n   \
    \   is  the  only new code.  Reply codes shown within parentheses are\n      for\
    \ the \"new\" ftp protocol, most recently documented in RFC  765.\n      RFC 775\
    \          Directory oriented FTP commands        Page 4\n      The invented code\
    \ for the RFC 765 Protocol is 251.\n      Command:\n\t      reply code      explanation\n\
    \      XMKD                    create directory\n\t      257 (251) \"pathname\"\
    \ created\n\t      521 (450) \"pathname\" already exists\n\t      506 (502) action\
    \ not implemented\n\t      521 (450) access denied\n\t      550 (501) bad pathname\
    \ syntax or ambiguous\n\t      425 (451) random file system error\n      XCUP\
    \                    change directory to\n\t\t\t\t      superior of current one\n\
    \t      200 (200) working directory changed\n\t      506 (502) action not implemented\n\
    \t      507 (551) no superior directory\n\t      521 (450) access denied\n\t \
    \     425 (451) random file system error\n      XRMD                    remove\
    \ directory\n\t      224 (250) deleted ok\n\t      506 (502) action not implemented\n\
    \t      521 (450) access denied\n\t      550 (501) bad pathname syntax or ambiguous\n\
    \t      425 (451) random file system error\n      XPWD                    print\
    \ current working\n\t\t\t\t      directory\n\t      257 (251) \"pathname\"\n\t\
    \      425 (451) random file system error\n\t      506 (502) action not implemented\n\
    \      RFC 775          Directory oriented FTP commands        Page 5\n\t\t\t\t\
    \ SUBTLETIES\n      Because these  commands  will  be  most  useful  in  transferring\n\
    \      subtrees  from  one  machine  to another, we must stress the fact\n   \
    \   that the argument to XMKD is to be interpreted as a sub-directory\n      of\
    \  the  current  working  directory,  unless  it contains enough\n      information\
    \ for  the  destination  host  to  tell  otherwise.   A\n      hypothetical example\
    \ of its use in the Tops-20 world:\n\t\t  XCWD <some.where>\n\t      200 Working\
    \ directory changed\n\t\t  XMKD overrainbow\n\t\t  257 \"<some.where.overrainbow>\"\
    \ directory created\n\t\t  XCWD overrainbow\n\t\t  431 No such directory\n\t\t\
    \  XCWD <some.where.overrainbow>\n\t\t  200 Working directory changed\n\t\t  XCWD\
    \ <some.where>\n\t\t  200 Working directory changed to <some.where>\n\t\t  XMKD\
    \ <unambiguous>\n\t\t  257 \"<unambiguous>\" directory created\n\t\t  XCWD <unambiguous>\n\
    \      Note that the first example results  in  a  subdirectory  of  the\n   \
    \   connected  directory.   In  contrast,  the argument in the second\n      example\
    \ contains enough information for Tops-20 to tell that  the\n      <unambiguous>\
    \ directory is a top-level directory.  Note also that\n      in  the  first  example\
    \  the  user  \"violated\"  the  protocol  by\n      attempting  to  access  the\
    \ freshly created directory with a name\n      other than the one returned  by\
    \  Tops-20.   Problems  could  have\n      resulted  in this case had there been\
    \ an <overrainbow> directory;\n      this is an ambiguity inherent in  some  Tops-20\
    \  implementations.\n      Similar  considerations  apply to the XRMD command.\
    \  The point is\n      this: except where to do so would violate  a  host's  conventions\n\
    \      for  denoting relative versus absolute pathnames, the host should\n   \
    \   treat  the  operands  of  the   XMKD   and   XRMD   commands   as\n      subdirectories.\
    \   The  257  reply to the XMKD command must always\n      contain the absolute\
    \ pathname of the created directory.\n\t\t\t\t References\n      File Transfer\
    \ Protocol (RFC 765), Postel,  J., June 1980\n      RFC 775          Directory\
    \ oriented FTP commands        Page 6\n      CWD Command of FTP (RFC 697), Lieb,\
    \ J., NIC 32963, 14 July 1975\n      One More Try on the FTP (RFC 691), Harvey,\
    \ B., NIC 32700, 28  May\n      1975\n      Revised FTP Reply Codes (RFC 640),\
    \  Postel,  J.,  N.  Neigus,  K.\n"
