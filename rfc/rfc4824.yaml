- title: __initial_text__
  contents:
  - "                   The Transmission of IP Datagrams\n            over the Semaphore\
    \ Flag Signaling System (SFSS)\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2007).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies a method for encapsulating and transmitting\n\
    \   IPv4/IPv6 packets over the Semaphore Flag Signal System (SFSS).\n"
- title: Table of Contents
  contents:
  - 'Table of Contents

    '
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document specifies IP-SFS, a method for the encapsulation\
    \ and\n   transmission of IPv4/IPv6 packets over the Semaphore Flag Signaling\n\
    \   System (SFSS).  The SFSS is an internationally recognized alphabetic\n   communication\
    \ system based upon the waving of a pair of hand-held\n   flags [JCroft, Wikipedia].\
    \  Under the SFSS, each alphabetic character\n   or control signal is indicated\
    \ by a particular flag pattern, called a\n   Semaphore Flag Signal (SFS).\n  \
    \ IP-SFS provides reliable transmission of IP datagrams over a half-\n   duplex\
    \ channel between two interfaces.  At the physical layer, SFSS\n   uses optical\
    \ transmission, normally through the atmosphere using\n   solar illumination and\
    \ line-of-sight photonics.  A control protocol\n   (Section 4) allows each interface\
    \ to contend for transmission on the\n   common channel.\n   This specification\
    \ defines only unicast transmission.  Broadcast is\n   theoretically possible,\
    \ but there are some physical restrictions on\n   channel direction dispersion.\
    \  This is a topic for future study.\n   The diagram in Figure 1 illustrates the\
    \ place of the SFSS in the\n   Internet protocol hierarchy.\n             +-----+\
    \     +-----+       +-----+\n             | TCP |     | UDP |  ...  |     |  Host\
    \ Layer\n             +-----+     +-----+       +-----+\n                |   \
    \        |             |\n             +-------------------------------+\n   \
    \          |    Internet Protocol & ICMP   |  Internet Layer\n             +-------------------------------+\n\
    \                            |\n             +-------------------------------+\n\
    \             |             SFSS              |  Link Layer\n             +-------------------------------+\n\
    \                     Figure 1: Protocol Relationships\n"
- title: 2.  Definitions
  contents:
  - "2.  Definitions\n   Link:    A link consists of two (2) interfaces that share\
    \ a common\n            subnet.\n   Link Partner:\n            The opposite interface.\n\
    \   Session: The transmission of an entire IP datagram.\n   SFS:     One Semaphore\
    \ Flag Signal, i.e., one flag pattern (Section\n            3.2).\n   SFSS:  \
    \  The Semaphore Flag Signaling System.\n   IP-SFS:  IP over Semaphore Flag Signaling\
    \ System.\n"
- title: 3.  Protocol Discussion
  contents:
  - "3.  Protocol Discussion\n   IP-SFS adapts the standard SFSS to encode an alphabet\
    \ of 16 signals\n   (flag patterns) to represent data values 0-15 (Section 3.2.1)\
    \ and 9\n   signals to represent control functions (Section 3.2.2).  With 16 data\n\
    \   signals, IP-SFS transmission is based upon 4-bit nibbles, two per\n   octet.\
    \  Each of the signal patterns defined in Section 3.2 is called\n   an SFS.\n"
- title: 3.1.  IP-SFS Frame Description
  contents:
  - "3.1.  IP-SFS Frame Description\n   IP datagrams are formatted into IP-SFS frames\
    \ by adding IP-SFS\n   headers and trailers.  Figure 2 shows the format of one\
    \ IP-SFS frame.\n   The frame is delimited by a control SFS called FST (Frame\
    \ Start) and\n   a control SFS called FEN (Frame End).  It is composed of a series\
    \ of\n   4-bit nibbles, one per SFS.\n   An IP datagram will be fragmented into\
    \ multiple successive IP-SFS\n   frames if necessary.  When an IP datagram is\
    \ fragmented into N\n   frames, the first frame will be sent with frame number\
    \ N-1, the\n   second with frame number N-2, ..., and the last with frame number\
    \ 0.\n              0        1        2        3\n          +--------+--------+--------+--------+--------+\n\
    \          |   FST  |Protocol|CksumTyp|Frame No|Frame No|\n          +--------+--------+--------+--------+--------+\n\
    \                   |                                   |\n                  \
    \ //       DATA  Payload              //\n                   |               \
    \                    |\n                   +--------+--------+--------+--------+---------+\n\
    \                   |  CRC   |  CRC   |  CRC   |  CRC   |   FEN   |\n        \
    \           +--------+--------+--------+--------+---------+\n            Note\
    \ that each field represents one SFS or 4 bits.\n                       Figure\
    \ 2: IP-SFS Frame Format\n   FST:       Frame Start control SFS\n   Protocol:\
    \  4 bits -- Internetwork-layer protocol code\n       0      None.\n       1 \
    \     For IPv4.\n       2      For IPv6.\n       3      For IPv4 frame gzip-compressed.\n\
    \       4      For IPv6 frame gzip-compressed.\n       5...15 Reserved for future\
    \ use.\n   CksumTyp:  4 bits (one data SFS) -- Checksum Type\n       0      none.\n\
    \       1      CCITT CRC 16 (polynomial: x^16 + x^12 + x^5+1).\n       2...15\
    \ Reserved for future use.\n   Frame No:  8 bits (2 data SFSs):\n            \
    \  Frame number for fragmented IP datagram.\n   DATA:      0 to 510 data SFSs\
    \ (Section 3.2.1) representing 0 to 255\n              octets of payload.\n  \
    \ CRC:       16 bits as four data SFSs.\n              CRC checksum.  Preset to\
    \ 0xFFFF.  One's complement of\n              checksum is transmitted.\n   FEN:\
    \       Frame ENd control SFS.\n   The number of transmitted SFSs per minute (Spm)\
    \ depends on the\n   experience of participating interfaces.  Resulting link speed\
    \ in bits\n   per second for IP-SFS is (Spm/60)*4, not counting framing overhead.\n"
- title: 3.2.  SFS Coding
  contents:
  - "3.2.  SFS Coding\n   Data signals and control signals are based upon standard\
    \ SFS\n   encoding, as described by [JCroft], [Wikipedia], and other sources on\n\
    \   the Internet.  The 16 data signals are interpreted as 4-bit nibbles,\n   while\
    \ the 9 control signals are used for data link control.\n   IP-SFS defines the\
    \ 16 data signals by the original SFSS encodings for\n   letters A to P and the\
    \ 9 control signals represented by SFSS\n   encodings Q to X.\n"
- title: 3.3.  IP-SFS Data Signals
  contents:
  - "3.3.  IP-SFS Data Signals\n   Figure 3 illustrates the 16 SFSs used to transmit\
    \ data frames over\n   the link.  The illustrations show each SFS as seen from\
    \ the receiving\n   side.\n                   SFS        0     __0      \\0  \
    \    |0\n                             /||      ||      ||      ||\n          \
    \                   / \\     / \\     / \\     / \\\n                        \
    \      A       B       C       D\n                   IP-SFS    0x00    0x01  \
    \  0x02    0x03\n                   -----------------------------------------\n\
    \                   SFS        0/      0__     0     __0\n                   \
    \          ||      ||      ||\\     /|\n                             / \\    \
    \ / \\     / \\     / \\\n                              E       F       G    \
    \   H\n                   IP-SFS    0x04    0x05    0x06    0x07\n           \
    \        -----------------------------------------\n                   SFS   \
    \    \\0      |0__     0|      0/\n                             /|       |   \
    \   /|      /|\n                             / \\     / \\     / \\     / \\\n\
    \                              I       J       K       L\n                   IP-SFS\
    \    0x08    0x09    0x0A    0x0B\n                   -----------------------------------------\n\
    \                   SFS        0__     0     _\\0     __0|\n                 \
    \            /|      /|\\      |       |\n                             / \\  \
    \   / \\     / \\     / \\\n                              M       N       O  \
    \     P\n                   IP-SFS    0x0C    0x0D    0x0E    0x0F\n         \
    \             Figure 3: IP-SFS Data Signals.\n"
- title: 3.4.  IP-SFS Control Signals
  contents:
  - "3.4.  IP-SFS Control Signals\n   Nine control signals are used to signal special\
    \ IP-SFS conditions.\n   Their meanings are listed in Figure 4.  The illustrations\
    \ show each\n   SFS as seen from the receiving side.\n                   SFS \
    \     __0/    __0__   __0      \\0|\n                              |       | \
    \      |\\      |\n                             / \\     / \\     / \\     / \\\
    \n                              Q       R       S       T\n                  \
    \ IP-SFS    FST     FEN     SUN     FUN\n                   -----------------------------------------\n\
    \                   SFS       \\0/     \\0__     0/_     0/\n                \
    \              |       |       |       |\\\n                             / \\\
    \     / \\     / \\     / \\\n                              U       V       W\
    \       X\n                   IP-SFS    ACK     KAL     NAK     RTR\n        \
    \           -----------------------------------------\n                   SFS\
    \        0__     0__\n                             /|       |\\\n            \
    \                 / \\     / \\\n                              Y       Z\n   \
    \                IP-SFS    RTT    unused\n                   -----------------------------------------\n\
    \                   SFS      _\\0/_\n                             /|\\\n     \
    \                        / \\\n                            Error\n           \
    \        IP-SFS   unused\n                     Figure 4: IP-SFS Control Signals.\n\
    \   FST: Frame STart.  Signals the start of a new frame.\n   FEN: Frame ENd. \
    \ Signals the end of one frame.\n   SUN: Signal UNdo.  Cancels the transmission\
    \ of one or more individual\n        SFSs within the current frame.  This signal\
    \ will be\n        unacknowledged by the receiver.\n   FUN: Frame UNdo.  As long\
    \ as Frame ENd is not sent, the transmitter\n        or the receiver may send\
    \ a FUN to restart the transmission of\n        the current frame.  This signal\
    \ will be unacknowledged and may\n        be ignored by the receiver.\n   ACK:\
    \ Frame ACK.  Acknowledges reception of one frame.\n   KAL: KeepALive.  Keep a\
    \ connection alive.  Is to be transmitted in\n        State Idle at a frequency\
    \ of at least KAL_FREQ (see\n        Section 4.2).  This signal will be unacknowledged.\n\
    \   NAK: Frame No AcK.  The frame received is incorrect.\n   RTR: Ready To Receive.\
    \  Receiver acknowledges it is ready to receive.\n   RTT: Ready To Transmit. \
    \ Sender requests permission to initiate\n        transmission.\n"
- title: 3.5.  Protocol Limitations
  contents:
  - "3.5.  Protocol Limitations\n   Due to the physical characteristics of the transfer\
    \ channel, bit\n   error rates are expected to be in the range of 1e-3 (boy scout)\
    \ to\n   1e-4 (professional sailor), and also depend a number of physical\n  \
    \ factors.  Poor visibility due to weather conditions or lack of\n   illumination\
    \ (e.g., night time) can drastically increase the error\n   rate.\n   IP-SFS provides\
    \ no means to handle frame reordering or dual\n   (multiple) frame reception.\
    \  Thus, the protocol is not suitable in\n   environments where interfaces are\
    \ moving fast and/or when the path of\n   light is long.\n"
- title: 3.6.  Implementation Limitations
  contents:
  - "3.6.  Implementation Limitations\n   Maximum payload per frame: 510 SFS (0...510)\
    \ nibbles (0 to 255\n   octets)\n   Maximum SFS per frame: 518\n   Maximum frames\
    \ per session: 255 (0...254)\n"
- title: 4.  Interface Discussion
  contents:
  - "4.  Interface Discussion\n   An interface is constructed through the participation\
    \ of one or more\n   humans.  A knowledge of the SFSS is recommended, but its\
    \ absence can\n   be compensated by a well-designed GUI.\n"
- title: 4.1.  Data Link Control
  contents:
  - "4.1.  Data Link Control\n   This section describes the control protocol used\
    \ to allocate the\n   half-duplex data link to either interface.\n   Interfaces\
    \ know three States: Idle, Transmitting (TX), and Receiving\n   (RX).\n"
- title: 4.2.  Establishing a Connection
  contents:
  - "4.2.  Establishing a Connection\n   IP-SFS is strictly point-to-point.  Unless\
    \ interface members are\n   acquainted with each other, a brief introduction of\
    \ both sides is\n   suggested prior to setting up a link to reduce the likelihood\
    \ of\n   interface-spoofing attacks.\n   Interfaces must agree on two different\
    \ IP addresses on the same\n   subnet.\n   Interfaces are free to negotiate any\
    \ period of time as TIMEOUT.\n   Possible values for TIMEOUT are the time it takes\
    \ to smoke a\n   cigarette or the time it takes to drink a glass of water.  If\n\
    \   negotiation fails, TIMEOUT defaults to 60 seconds.\n   The same procedure\
    \ may be applied for the KeepALive FReQuency\n   (KAL_FRQ).  The period of KAL_FRQ\
    \ (1/KAL_FRQ) should be at least\n   5*TIMEOUT.\n"
- title: 4.3.   State Idle
  contents:
  - "4.3.   State Idle\n   Interfaces in State Idle must be ready to send an IP datagram\n\
    \   provided by a local higher-level protocol or to receive a datagram\n   from\
    \ the link-partner.  Interfaces in State Idle must send keep-alive\n   signals\
    \ KAL at a frequency of at least KAL_FRQ.\n   There are no further definitions\
    \ for State Idle, but we recommend\n   staying away from alcoholic beverages or\
    \ other types of drugs that\n   could lead to an increased number of FUN and/or\
    \ SUN signals, a\n   decrease in bandwidth, or an increase of line latency.\n\
    \   If the number of IP datagrams in the transmission queue is >0, the\n   interface\
    \ may try to initiate a session by sending an RTT to the link\n   partner.  If\
    \ the link partner ready to receive, it returns an RTR\n   signal.\n"
- title: 4.4.  Session Initiation
  contents:
  - "4.4.  Session Initiation\n   An interface receiving a datagram from an Internet\
    \ layer protocol\n   level may start signaling RTT.\n   If the link partner does\
    \ not respond with RTR within TIMEOUT, or the\n   link partner responds with RTT,\
    \ the interface switches to State Idle\n   for a random period of time between\
    \ 2 seconds and TIMEOUT, before\n   resending the RTT.\n   If the link partner\
    \ transmits RTR, the interface transmits the number\n   of IP-SFS frames to be\
    \ transmitted in this session as two SFSs\n   followed by another RTT.  If the\
    \ link partner does not transmit the\n   same number of IP-SFS frames followed\
    \ by RTR within 3*TIMEOUT, the\n   interface switches to State Idle.\n   If the\
    \ link partner transmits the same number of IP-SFS frames\n   followed by RTR,\
    \ the interface switches to State Transmitting.\n   Unless obstructed through\
    \ environmental noise or great distance,\n   hollering can be used to request\
    \ line discipline from the link\n   partner in State Idle.  The use of cellphones\
    \ is also an option,\n   whereas throwing objects or using guns is not recommended,\
    \ since it\n   could result in interface damage or destruction.  This would be\n\
    \   counterproductive.\n"
- title: 4.5.  State Transmitting
  contents:
  - "4.5.  State Transmitting\n   Transmission of one IP-SFS frame starts with FST.\
    \  After FST and\n   before FEN have been transmitted, the interface may acknowledge\
    \ a\n   received FUN and restart the transmission of the active frame or\n   discard\
    \ the signal and continue transmission of the active IP-SFS\n   frame.\n   If\
    \ an error occurs by transmitting a wrong data SFS, the interface\n   may invalidate\
    \ the last data SFS by transmitting SUN followed by the\n   correct signal.  A\
    \ series of incorrectly transmitted data SFSs may be\n   invalidated by sending\
    \ a SUN for each invalid SFS, effectively back-\n   spacing the sequence.\n  \
    \ Control SFSs cannot be invalidated.\n   If an error occurs, the interface may\
    \ also transmit FUN and restart\n   transmission of the active IP-SFS frame.\n\
    \   Whether the interfaces choose SUN or FUN for error correction is up\n   to\
    \ the interface, but it is suggested to use SUN for a single invalid\n   SFS,\
    \ and FUN whenever the interface failed to transmit several SFSs\n   in a row.\n\
    \   After FEN has been transmitted, the transmitting interface waits for\n   the\
    \ link partner to transmit ACK or NAK.\n   If ACK has been received, the transmitting\
    \ interface removes the\n   active frame and starts transmitting the next IP-SFS\
    \ frame.  If no\n   frames are left, the interface switches to State Idle.\n \
    \  If NAK has been received, the transmission failed, and the interface\n   must\
    \ start transmitting the active frame again.\n   If the link partner does not\
    \ transmit ACK or NAK within TIMEOUT, the\n   transmission failed, and the interface\
    \ must start retransmitting the\n   active IP-SFS frame.\n   If transmission of\
    \ the same IP-SFS frame fails 5 times, the interface\n   leaves the IP datagram\
    \ in the transmission queue and switches to\n   State Idle.\n"
- title: 4.6.  State Receiving
  contents:
  - "4.6.  State Receiving\n   In State Receiving, the interface stores each SFS received\
    \ from the\n   link partner in the receiving queue in the order of appearance.\n\
    \   After FST and before FEN have been received, the interface may\n   transmit\
    \ FUN at any time to request a retransmission of the entire\n   IP-SFS frame.\n\
    \   If the time between two received SFSs exceeds TIMEOUT, the receiving\n   interface\
    \ must discard all data from the active IP-SFS frame and may\n   additionally\
    \ transmit FUN.  If the link partner does not continue\n   transmitting within\
    \ a second TIMEOUT period, the interface must clear\n   the receiving queue and\
    \ switch to State Idle.\n   If the interface receives SUN from the link partner,\
    \ it must discard\n   the last received data SFS (if any).  If N SUNs are received\
    \ in a\n   row, then the last N data SFS must be discarded, unless there are no\n\
    \   more data SFS in the frame.  If there are no more data SFS in the\n   frame\
    \ to be discarded, the SUN signal must be ignored by the\n   interface.\n   If\
    \ the receiving interface receives FUN from the link partner, it is\n   free to\
    \ discard the frame received thus far.  We suggest honoring FUN\n   since discarding\
    \ the signal will decrease bandwidth.\n   After FEN has been received, the receiving\
    \ interface evaluates the\n   checksum.  If the checksum is good, the interface\
    \ transmits ACK.  If\n   the Frame Number of the active frame is 0, the interface\
    \ passes the\n   entire data from the receiving queue to the higher level protocol,\n\
    \   clears the receiving queue, and switches to State Idle.\n   If the checksum\
    \ is incorrect, the interface transmits NAK.\n"
- title: 4.7.  Terminating a Connection
  contents:
  - "4.7.  Terminating a Connection\n   If the interface is in State Idle and the\
    \ link partner did not\n   transmit any kind of SFS for at least five times 1/KAL_FRQ,\
    \ the\n   connection is terminated and the interfaces are free to disband.\n"
- title: 4.8.  Further Remarks
  contents:
  - "4.8.  Further Remarks\n   Interfaces are connected to computer hardware by means\
    \ of a suitable\n   input device (RX) and a suitable output device (TX).  Possible\n\
    \   devices include keyboard, mouse, and monitor.  Other means of\n   connection\
    \ are subject to availability and budget.\n   Although it is theoretically possible\
    \ to combine the TX and RX parts\n   of an interface in one human being, we suggest\
    \ dividing the\n   operations among at least two people per interface.  For longer\n\
    \   transmissions (multimedia streaming, video conferencing, etc.),\n   consider\
    \ rotating and providing substitutes.\n   Bandwidth tends to vary.  Typically\
    \ TX starts at about 2-4 bits/s and\n   will decrease over time due to exhaustion\
    \ and lack of concentration.\n   When an interface in TX State signals at a rate\
    \ higher than the RX\n   interface is able to receive, signal loss occurs.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   By its nature of line-of-sight signaling, IP-SFS\
    \ is considered\n   insecure.  The transmission of sensitive data over IP-SFS\
    \ is strongly\n   discouraged unless security is provided by higher level protocols.\n\
    \   Interfaces tend to keep data in their memory.  There is no way to\n   determine\
    \ the lifetime of data in memory.  As a side effect, data\n   might show up in\
    \ unwanted locations at undesired times.\n   We are currently not aware of a technique\
    \ to reliably delete data\n   from interfaces' memory without permanent interface\
    \ destruction.\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   We thank Eva Ursprung and Doris Jauk-Hinz from Womyn's\
    \ Art Support\n   (WAS), Anita Hofer, Reni Hofmueller, Ulla Klopf, Nicole Pruckermayr,\n\
    \   Manfred Rittler, Martin Schitter, and Bob Braden for all their\n   contributions\
    \ and support of this project.\n"
- title: 7.  References
  contents:
  - "7.  References\n   [JCroft]     Croft, J., \"Semaphore Flag Signalling System\"\
    ,\n                <http://www.anbg.gov.au/flags/semaphore.html>.\n   [Wikipedia]\
    \  Wikipedia, \"Modern semaphore\", <http://\n                en.wikipedia.org/wiki/Semaphore#Modern_semaphore>.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Jogi Hofmueller (editor)\n   Brockmanngasse 65\n   Graz\
    \  8010\n   AT\n   EMail: ip-sfs@mur.at\n   Aaron Bachmann (editor)\n   Ulmgasse\
    \ 14 C\n   Graz  8053\n   AT\n   EMail: ip-sfs@mur.at\n   IOhannes zmoelnig (editor)\n\
    \   Goethestrasse 9\n   Graz  8010\n   AT\n   EMail: ip-sfs@mur.at\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
