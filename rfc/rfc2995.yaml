- title: __initial_text__
  contents:
  - '         Pre-SPIRITS Implementations of PSTN-initiated Services

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document contains information relevant to the work underway\
    \ in\n   The Services in the PSTN/IN Requesting InTernet Services (SPIRITS)\n\
    \   Working Group.  It describes four existing implementations of\n   SPIRITS-like\
    \ services from Korea Telecom, Lucent Technologies, NEC,\n   and Telia in cooperation\
    \ with Nortel Networks.  SPIRITS-like services\n   are those originating in the\
    \ Public Switched Telephone Network (PSTN)\n   and necessitating the interactions\
    \ of the Internet and PSTN.\n   Surveying the implementations, we can make the\
    \ following\n   observations:\n      o  The ICW service plays the role of a benchmark\
    \ service.  All\n         four implementations can support ICW, with three specifically\n\
    \         designed for it.\n      o  Session Initiation Protocol (SIP) is used\
    \ in most of the\n         implementations as the base communications protocol\
    \ between the\n         PSTN and Internet.  (NEC's implementation is the only\
    \ exception\n         that uses a proprietary protocol.  Nevertheless, NEC has\
    \ a plan\n         to support SIP together with the extensions for SPIRITS\n \
    \        services.)\n      o  All implementations use IN-based solutions for the\
    \ PSTN part.\n   It is clear that not all pre-SPIRITS implementations inter-operate\n\
    \   with each other.  It is also clear that not all SIP-based\n   implementations\
    \ inter-operate with each other given that they do not\n   support the same version\
    \ of SIP.  It is a task of the SPIRITS Working\n   Group to define the inter-networking\
    \ interfaces that will support\n   interoperation of the future implementations\
    \ of SPIRITS services.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ................................................\
    \  3\n   2. Service Description of Internet Call Waiting ................  4\n\
    \   3. Korea Telecom's ICW Implementation ..........................  5\n   3.1.\
    \ Overview ..................................................  5\n   3.2. Network\
    \ Architecture ......................................  6\n   3.3. Network Entities\
    \ ..........................................  7\n   3.3.1. SSP .....................................................\
    \  7\n   3.3.2. SCP .....................................................  7\n\
    \   3.3.3. IP ......................................................  7\n   3.3.4.\
    \ ICW Server System .......................................  7\n   3.3.5. ICW\
    \ Client System .......................................  8\n   3.3.6. Firewall\
    \ ................................................  9\n   3.4. Network Interfaces\
    \ ........................................  9\n   3.5. Protocols .................................................\
    \  9\n   3.5.1. Intelligent Network Application Part Protocol (INAP) ....  9\n\
    \   3.5.2. PINT Protocol ...........................................  9\n   3.6.\
    \  Example Scenarios ........................................ 11\n   3.6.1. ICW\
    \ Service Subscription ................................ 11\n   3.6.2. ICW Client\
    \ Installation ................................. 11\n   3.6.3. ICW Service Activation\
    \ .................................. 12\n   3.6.4. Incoming Call Notification\
    \ .............................. 14\n   3.6.5. Incoming Call Processing ................................\
    \ 15\n   3.6.5.1. Accept the Call ....................................... 16\n\
    \   3.6.5.2. Forward the Call to Another Number .................... 18\n   3.6.6.\
    \ ICW service De-activation ............................... 20\n   4. The Lucent\
    \ Technologies Online Communications Center ........ 21\n   4.1 Overview ...................................................\
    \ 21\n   4.2. Architecture .............................................. 22\n\
    \   4.3. Protocol and Operations Considerations .................... 25\n   5.\
    \ NEC's Implementation ........................................ 28\n   5.1. Overview\
    \ .................................................. 28\n   5.2. Architecture\
    \ and Overall Call Flow ........................ 29\n   5.3. Interfaces and Protocols\
    \ .................................. 31\n   5.3.1. SCP (SPIRITS Client)-SPIRITS\
    \ Server Interface ........... 31\n   5.3.1.1. Connecting to SPIRITS Services\
    \ ........................ 31\n   5.3.1.2. Message Types .........................................\
    \ 31\n   5.3.1.2.1 Connection Management Message Type ................... 31\n\
    \   5.3.1.2.2. Data Message Type ................................... 33\n   5.3.2.\
    \ SPIRITS Server-ICW Client Application Interface ......... 34\n   5.3.3. Secure\
    \ Reliable Hybrid Datagram Session Protocol\n   (SRHDSP) for Use  ..............................................\
    \ 35\n   5.3.3.1. Overview .............................................. 35\n\
    \   5.3.3.2. Session Initiation .................................... 35\n   5.3.3.3.\
    \ Secure Reliable Datagram Transport .................... 36\n   5.3.3.4. Session\
    \ closure ....................................... 36\n   6. Telia/Nortel's Implementation\
    \ ............................... 36\n   6.1. Overview ..................................................\
    \ 36\n   6.2. Architecture and Protocols ................................ 37\n\
    \   6.3. Security .................................................. 39\n   7.\
    \ Security Considerations ..................................... 40\n   8. Conclusion\
    \ .................................................. 40\n   9. References ..................................................\
    \ 41\n   10. Authors' Addresses ......................................... 41\n\
    \   11. Full Copyright Statement ................................... 44\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   This document contains information relevant to the work underway\
    \ in\n   The Services in the PSTN/IN Requesting InTernet Services (SPIRITS)\n\
    \   Working Group.  It describes four existing implementations of\n   SPIRITS-like\
    \ services from Korea Telecom, Lucent Technologies, NEC,\n   and Telia in cooperation\
    \ with Nortel Networks.  SPIRITS-like services\n   are those originating in the\
    \ Public Switched Telephone Network (PSTN)\n   and necessitating the interactions\
    \ of the Internet and PSTN.\n   Invariably supported by the implementations examined\
    \ in this document\n   is the Internet Call Waiting (ICW) service.  With ICW,\
    \ service\n   subscribers, while using their telephone lines for Internet access,\n\
    \   can be notified of incoming voice calls and specify how to handle the\n  \
    \ calls over the same telephone lines.\n   The document first gives a detailed\
    \ description of the ICW service.\n   Then it proceeds to discuss each of the\
    \ four implementations.  The\n   final sections of the document contains security\
    \ considerations, the\n   conclusion and references.\n   It is important to note\
    \ that even though the term \"SPIRITS server\" is\n   used throughout the document,\
    \ it has no universal meaning.  Its\n   connotation depends on the context and\
    \ varies from implementation to\n   implementation.\n"
- title: 2. Service Description of Internet Call Waiting
  contents:
  - "2. Service Description of Internet Call Waiting\n   Internet call waiting is\
    \ the single service that is specifically\n   supported by all the implementations\
    \ in question.  In a nutshell, the\n   service enables a subscriber engaged in\
    \ an Internet dial-up session\n   to\n   o  be notified of an incoming call to\
    \ the very same telephone line\n      that is being used for the Internet connection;\n\
    \   o  specify the desirable treatment of the call; and\n   o  have the call handled\
    \ as specified.\n   The details of the ICW service lie in the ways that a waiting\
    \ call\n   can be treated, which vary from implementation to implementation. \
    \ In\n   this section, we describe the features that are supported by at least\n\
    \   one of the implementations.  They are as follows:\n   o  Incoming Call Notification\
    \ - The subscriber is notified of an\n      incoming call over the Internet, without\
    \ having any effect on the\n      telephone line that is being used by the modem.\
    \  When a call comes\n      in, the subscriber is presented with a pop-up dialog\
    \ box on the\n      PC.  The dialog box may display any combination of the calling\n\
    \      party number, calling party name, and calling time.  Note that the\n  \
    \    display of the calling party name (or number) requires the\n      availability\
    \ of the caller name (or number) delivery feature.\n   o  Online Incoming Call\
    \ Disposition - Once informed of the incoming\n      call, the subscriber has\
    \ various options (indicated in the pop-up\n      window) for handling the call.\
    \  Possible options are:\n    + Accepting the call over the PSTN line, thus terminating\
    \ the\n      Internet (modem) connection\n    + Accepting the call over the Internet\
    \ using Voice over IP (VoIP)\n    + Rejecting the call\n    + Playing a pre-recorded\
    \ message to the calling party and\n      disconnecting the call\n    + Forwarding\
    \ the call to voice mail\n    + Forwarding the call to another number\n    + Rejecting\
    \ (or Forwarding) on no Response - If the subscriber fails\n      to respond within\
    \ a certain period time after the dialog box has\n      been displayed, the incoming\
    \ call can be either rejected or\n      handled based on the treatment pre-defined\
    \ by the subscriber.\n   o  Automatic Incoming Call Disposition - Incoming calls\
    \ are\n      automatically handled based on dispositions pre-defined by the\n\
    \      subscriber without his or her real-time intervention.  The\n      subscriber\
    \ can pre-define the default disposition (e.g., re-\n      directed to voice mail)\
    \ for general calls as well as customized\n      dispositions for calls from specific\
    \ numbers.  In the latter case,\n      the subscriber selects a particular disposition\
    \ for each\n      originating number and stores this information in a profile.\
    \  When\n      a call comes in, the subscriber won't be presented the call but\n\
    \      can examine the treatment and outcome of the call from the caller\n   \
    \   log (as described in the call logging bullet).  Naturally, this\n      feature\
    \ also allows the subscriber to specify the desired\n      treatment for calls\
    \ originating from private or unpublished\n      numbers.\n   o  Multiple Call\
    \ Handling - Multiple calls can arrive during call\n      disposition processing.\
    \  With multiple call handling, the\n      subscriber is notified of the multiple\
    \ calls one by one.\n   o  Call Logging - A detailed log of the incoming calls\
    \ processed\n      during the ICW service is kept.  Typical information recorded\
    \ in\n      the log include the incoming call date and time, calling party\n \
    \     number, calling party name, and call disposition.\n"
- title: 3. Korea Telecom's ICW Implementation
  contents:
  - '3. Korea Telecom''s ICW Implementation

    '
- title: 3.1. Overview
  contents:
  - "3.1. Overview\n   Korea Telecom's ICW implementation supports most of the features\n\
    \   described in Section 2.  (The major exception is the feature of\n   receiving\
    \ the incoming call over the Internet using voice over IP.)\n   In addition, the\
    \ Korea Telecom implementation supports flexible\n   activation and de-activation\
    \ of the ICW service:\n   o  Automatic Activation/De-activation - When Internet\
    \ dial-up\n      connection is set up, the ICW service is activated or de-activated\n\
    \      automatically.\n   o  Manual Activation/De-activation - The subscriber\
    \ can de-activate\n      the ICW service manually when call notification is not\
    \ desired\n      during the Internet dial-up session and activate it when needed.\n"
- title: 3.2. Network Architecture
  contents:
  - "3.2. Network Architecture\n   Figure 1 depicts the network architecture of the\
    \ Korea Telecom ICW\n   service.  The Service Switching Point (SSP), Service Control\
    \ Point\n   (SCP), and Intelligent Peripheral (IP) are legacy PSTN IN elements\n\
    \   based on IN CS-1.  In contrast, both the ICW Server System and the\n   ICW\
    \ Client System are new network elements that are installed in the\n   Internet\
    \ domain to support of the ICW service.\n     +---------------------------+  \
    \    |     +--------------+\n     |+--------+propr-+---------+| PINT |     |(Proxy\
    \ Server)|  PINT\n     ||(ICW SL)|ietary|(UAC/UAS)||--- -||-----|     ICW    \
    \  |----+\n     ||SCF/SDF |------|  SCGF   ||   firewall |Server System |    |\n\
    \     |+--------+ i/f  +---------+|      |     +------------- +    |\n     | \
    \          SCP             |      |                         |\n     +------+--------------+-----+\
    \      |                         |\n            |INAP          |INAP        |\
    \              firewall=====\n            |              |            |      \
    \                   |\n        +---+---+      +---+---+                      \
    \            |\n        |  IP   |      |  SSP  |                             \
    \     |\n        +-------+      +---+---+                        +-------------+\n\
    \                           |                   +---+    |  (UAC/UAS)  |\n   \
    \                    +---+---+              ||   ||   |    ICW      |\n      \
    \       |---------|  LEX  |--------------  + +     |Client System|\n         \
    \  +---+       +-------+               +++++----+-------------+\n          ||\
    \   ||                             (callee)\n            + +                 \
    \          ICW Subscriber's Phone and PC\n           +++++\n         (caller)\n\
    \                INAP : Intelligent Network Application Protocol\n           \
    \     PINT : PSTN/Internet Interworking Protocol\n                SL   : Service\
    \ Logic\n                UAS  : User Agent Server\n                UAC  : User\
    \ Agent Client\n     Figure 1: Network Architecture of the Korea Telecom ICW Service\n"
- title: 3.3. Network Entities
  contents:
  - '3.3. Network Entities

    '
- title: 3.3.1. SSP
  contents:
  - "3.3.1. SSP\n   The SSP performs the Service Switching Function (SSF) and Call\n\
    \   Control Function (CCF).  When detecting that the called party is busy\n  \
    \ (T_Busy), the SSP sends a query to the SCP and processes the call\n   under\
    \ the control of the SCP.\n"
- title: 3.3.2. SCP
  contents:
  - "3.3.2. SCP\n   The SCP performs the Service Control Function (SCF) and Service\
    \ Data\n   Function (SDF).  It, when queried, instructs the SSP to process the\n\
    \   call based on the service logic.  In the case of the ICW service, the\n  \
    \ service logic ultimately governs the notification of a waiting call\n   to an\
    \ online ICW subscriber and the disposition of the call.  In\n   addition, the\
    \ SCP performs the Service Control Gateway Function\n   (SCGF) for protocol inter-working\
    \ between the PSTN/IN and Internet.\n   It translates the SIP message from the\
    \ ICW Server to the service\n   control interface message and vise versa.  The\
    \ SCGF is an IP end\n   point and behaves as a UAS (User Agent server) or UAC\
    \ (User Agent\n   client).\n"
- title: 3.3.3. IP
  contents:
  - "3.3.3. IP\n   The IP contains Service Resource Function (SRF).  It, when necessary,\n\
    \   plays announcements to the calling party during the ICW service\n   before/after\
    \ receiving the response from the ICW subscriber and\n   records the calling party\
    \ number or voice message from the calling\n   party when the call is forwarded\
    \ to the Voice Mail System (VMS).\n"
- title: 3.3.4. ICW Server System
  contents:
  - "3.3.4. ICW Server System\n   The ICW Server system serves as a SIP proxy or a\
    \ redirect server for\n   message routing between the ICW Client and SCGF.  The\
    \ ICW Server is\n   also responsible for managing the ICW Clients that are connected\
    \ to\n   it.  When an ICW Client (subscriber) sends a registration request for\n\
    \   the ICW service, the ICW Server relays that request to the SCP, waits\n  \
    \ for the result of authorization from the SCP, and registers the\n   authorized\
    \ subscriber in its data base.  In addition, the ICW Server\n   monitors the connection\
    \ status of the registered ICW Clients.  As\n   soon as a client deactivates the\
    \ ICW service or terminates the\n   Internet connection, the ICW Server detects\
    \ the status change and\n   deactivates the ICW service for the client.  Finally,\
    \ the ICW Server\n   manages profiles for each ICW subscribers as well as logs\
    \ all the\n   call processing results.\n"
- title: 3.3.5. ICW Client System
  contents:
  - "3.3.5. ICW Client System\n   The ICW Client System is an application program\
    \ running on the\n   subscriber's PC.  Launched as soon as the subscriber powers\
    \ on the\n   PC, it monitors the Internet connection status of the PC (or\n  \
    \ subscriber).  Upon the subscriber's connection to the Internet, the\n   ICW\
    \ Client sends a REGISTRATION request to the SCGF via the ICW\n   Server and then\
    \ eventually to the SCP.  In this capacity, the ICW\n   Client acts as a UAC to\
    \ the SCGF, which acts as a UAS.  Thereafter it\n   notifies the ICW Server periodically\
    \ of the connection status of the\n   subscriber.\n   The ICW Client is also responsible\
    \ for popping up a dialog box on the\n   subscriber's PC to announce an incoming\
    \ call.  The dialog box\n   displays the number and name of calling party, calling\
    \ time, and the\n   call processing options (including Accept, Reject, Forward\
    \ to another\n   number or VMS).  After the subscriber selects the option, the\
    \ ICW\n   Client sends it to the SCP.  In this capacity, the ICW Client acts as\n\
    \   a UAS.\n   Depending on the pre-defined ICW Service Profile, the ICW Client\
    \ may\n   screen the incoming call before notifying the subscriber.\n   The ICW\
    \ Client manages the ICW Service Profile, which contains the\n   following fields:\n\
    \   o  Subscriber Information (including, Name, Directory Number,\n      Password)\n\
    \   o  Service Status (Activation/De-activation)\n   o  Automatic Call Processing\
    \ Method\n    + Call Processing Method on No Answer (Reject/Forward/VMS) - The\n\
    \      call is automatically handled by the method if the subscriber\n      doesn't\
    \ respond after a pre-defined period of time.\n    + Do Not Disturb Mode (On/Off)\
    \ - When this is set on, the subscriber\n      won't be notified of the incoming\
    \ calls.\n    + Call Processing Method on Do Not Disturb (Reject/Forward/VMS)\n\
    \    + Call Processing List by Calling Party Numbers\n      (Accept/Reject/Forward/VMS)\
    \ - Calls originated from a number on\n      the list are handled by the associated\
    \ call processing method.\n   o  The ICW Client records the call processing method\
    \ and the result\n      for each incoming call in a log file on the subscriber's\
    \ PC.  The\n      call record in the call log contains the following information:\n\
    \   - Calling Time\n   - Calling Party Number\n   - Calling Party Name (optional)\n\
    \   - Call Processing Method (Accept/Reject/Forward/Forward to VMS)\n   - Result\
    \ (Success/Fail)\n"
- title: 3.3.6. Firewall
  contents:
  - "3.3.6. Firewall\n   Packet Filtering Firewall Systems are between the ICW server\
    \ and\n   clients as well as between the SCGF and ICW server for accessing the\n\
    \   Korea Telecom IN Nodes.\n"
- title: 3.4. Network Interfaces
  contents:
  - "3.4. Network Interfaces\n   o  The SCF-SDF, SCF-SSF, and SCF-SRF interfaces are\
    \ the same as\n      existing PSTN IN Interfaces based on the KT INAP CS-1.\n\
    \   o  The SCGF-SCF interface relays requests either from the IN or the\n    \
    \  Internet and is implemented based on the internal API of the SCP.\n   o  The\
    \ SCGF-ICW Server and ICW Server-ICW Client interfaces are\n      implemented\
    \ based on the PINT Service Protocol V.1.  We adopted\n      UAS-Proxy-UAC relationships\
    \ as shown in Figure 2.\n           +---------+        +-------------+       \
    \ +---------+\n           |(UAC/UAS)|PINT 1.0|   (Proxy)   |PINT 1.0|(UAC/UAS)|\n\
    \           |         |--------|     ICW     |--------|   ICW   |\n          \
    \ |  SCGF   |        |    Server   |        |  Client |\n           +---------+\
    \        +-------------+        +---------+\n                  Figure 2: PINT\
    \ Protocol Architecture\n"
- title: 3.5. Protocols
  contents:
  - '3.5. Protocols

    '
- title: 3.5.1. Intelligent Network Application Part Protocol (INAP)
  contents:
  - "3.5.1. Intelligent Network Application Part Protocol (INAP)\n   The SCP, SSP,\
    \ and IP support the KT INAP V1.0, which is based on\n   ITU-T INAP CS-1 with\
    \ the incorporation of two INAP CS-2 messages [PRM\n   (PromptAndReceiveMessage)\
    \ and EM (EraseMessage)] for recording the\n   voice message.\n"
- title: 3.5.2. PINT Protocol
  contents:
  - "3.5.2. PINT Protocol\n   The ICW service uses the PINT Service Protocol 1.0 [1]\
    \ for\n   communications between the SCP and the ICW Server System, and between\n\
    \   the ICW Server System and the ICW Client System.  Developed in the\n   IETF\
    \ PINT Working Group for invoking telephone services from an IP\n   network, the\
    \ PINT Service Protocol 1.0 specifies a set of\n   enhancements to SIP 2.0 and\
    \ SDP.\n   Summarized below are the elements of the PINT Service Protocol 1.0\n\
    \   relevant to the Korea Telecom ICW implementation:\n      o REGISTER\n    \
    \  The REGISTER method is used to inform the SCP of the connection\n      status\
    \ of an ICW subscriber.  With this method, the ICW Client\n      sends to the\
    \ ICW Server the IP address (of the PC) and phone\n      number of the subscriber\
    \ when the subscriber is first connected to\n      the Internet.  The ICW server\
    \ relays the information to the SCP,\n      which updates the data base (if the\
    \ subscriber is authorized), and\n      in the end sends a registration acknowledgment\
    \ to the ICW Server\n      and then the Client.  After the subscriber is connected\
    \ to the\n      Internet, the ICW Client sends a REGISTER request to the ICW\n\
    \      Server periodically at a pre-defined interval (e.g., 20 seconds)\n    \
    \  to indicate its connection status.  The request is not relayed to\n      the\
    \ SCP.  The ICW Server only checks if it is from the authorized\n      subscriber.\
    \  Finally, when the subscriber terminates the Internet\n      connection, the\
    \ Client sends the last REGISTER request to the SCP\n      via the ICW Server.\
    \  If the REGISTER request does not arrive\n      during the pre-defined interval,\
    \ the ICW Server can also detect\n      the change of the connection status of\
    \ the ICW Client.\n      o INVITE\n      The SCP uses the INVITE method to notify\
    \ the ICW Client, via the\n      ICW Server, of an incoming call.\n      o ACK\n\
    \      Both the SCP and the ICW Server use the ACK method to confirm the\n   \
    \   receipt of the final responses to their requests.\n      o BYE\n      The\
    \ BYE method terminates a service session.  In addition to this\n      original\
    \ usage, we use the value (success or failure) of the\n      Subject header to\
    \ indicate the result of the desired disposition\n      of an incoming call in\
    \ the PSTN.\n      o CANCEL\n      When the calling party releases the call before\
    \ the called party\n      responds, the SCP sends a CANCEL request to the ICW\
    \ Client to\n      cancel the INVITE request that it sent previously.\n      o\
    \ OPTION\n      This method is not used in the KT implementation.\n      o Responses\n\
    \      The SCP responds to a REGISTER request with one of the status\n      codes\
    \ and associated comments below:\n      . 100 Trying: Trying\n      . 200 OK:\
    \ Registered\n      The ICW Client responds to an INVITE request with one of the\n\
    \      status codes and associated comments below:\n      . 100 Trying: Trying\n\
    \      . 200 OK: Accept the Call\n      . 303 see other: Forward the Call to Another\
    \ Number\n      . 380 alternative service: Forward the Call to the VMS\n     \
    \ . 603 decline: Reject the Call\n"
- title: 3.6.  Example Scenarios
  contents:
  - '3.6.  Example Scenarios

    '
- title: 3.6.1. ICW Service Subscription
  contents:
  - "3.6.1. ICW Service Subscription\n   Access to the Korea Telecom ICW service is\
    \ by subscription.  Here\n   Korea Telecom serves as both the PSTN operator and\
    \ IN-based ICW\n   service provider.  Note that the subscription data need to\
    \ be loaded\n   onto the relevant SSPs, including the local ones that may not\
    \ be\n   operated by Korea Telecom.\n"
- title: 3.6.2. ICW Client Installation
  contents:
  - "3.6.2. ICW Client Installation\n   An ICW subscriber should install the ICW Client\
    \ program in his or her\n   PC.  The ICW Client is automatically activated to\
    \ run as a daemon\n   process when the subscriber's PC is turned on.  The Client\
    \ monitors\n   the Internet connection status of the subscriber.\n"
- title: 3.6.3. ICW Service Activation
  contents:
  - "3.6.3. ICW Service Activation\n   When the subscriber initiates the Internet\
    \ connection or activates\n   the ICW service manually, the ICW service is activated.\
    \  That is done\n   by sending a REGISTER request with the directory number and\
    \ IP\n   address from the ICW Client to the SCP through the ICW Server.\n"
- title: ICW Subscriber ICW Server    SCGF        SCF/SDF     SSF/CCF    Calling
  contents:
  - 'ICW Subscriber ICW Server    SCGF        SCF/SDF     SSF/CCF    Calling

    '
- title: ICW Client                                                        party
  contents:
  - "ICW Client                                                        party\n (DN1/IP1)\
    \      (IP2)        (IP3)                                 (DN2)\n     |      \
    \      |            |            |            |            |\n    0A         \
    \   |            |            |            |            |\n    0BREG(DN1,IP1)|\
    \            |            |            |            |\n  1  |----------->|REG(DN1,IP1)|\
    \            |            |            |\n  2  |            |----------->|   \
    \         |            |            |\n     |            |           2A      \
    \      |            |            |\n     |            |            |reg(DN1,IP1)|\
    \            |            |\n  3  |            |            |-.-.-.-.-.->|   \
    \         |            |\n     |            |            |           3A      \
    \      |            |\n     |            |            |   reg ok  3B         \
    \   |            |\n  4  |            |            |<-.-.-.-.-.-|            |\
    \            |\n     |            |   200 OK  4A            |            |   \
    \         |\n  5  |            |<-----------|            |            |      \
    \      |\n     |   200 OK  5A            |            |            |         \
    \   |\n  6  |<-----------|            |            |            |            |\n\
    \    6A            |            |            |            |            |\n   \
    \  |            |            |            |            |            |\n    ----->\
    \ PINT Protocol          -.-.-> SCP Internal API\n    --.--> INAP Protocol   \
    \       +++++> ISUP Protocol\n    =====> Bearer\n                  Figure 3: ICW\
    \ Service Activation\n   As depicted in Figure 3, the relevant information flows\
    \ are as\n   follows:\n   (0A) The ICW subscriber dials the ISP access number\
    \ and establishes a\n   PPP connection.\n   (0B) The ICW Client detects the PPP\
    \ connection.\n   1. The ICW Client sends a registration request to the ICW Server\
    \ in\n   order to register the IP address-DN relationship for the dial-up\n  \
    \ connection.\n   2. The ICW Server relays registration request to the SCGF.\n\
    \   2A. The SCGF translates the user registration information from the\n   SIP\
    \ message to the SCP internal API message.\n   3. The SCGF relays the user registration\
    \ message to the SCF/SDF.\n   3A. The SCF/SDF authorizes the subscriber with the\
    \ directory number\n   based on the user registration information.\n   3B. The\
    \ SCF/SDF stores the IP address of the ICW Client and sets the\n   status to \"\
    Internet on-line.\"\n   4. The SCF/SDF sends the result of registration to the\
    \ SCF/SCGF.\n   4A. The SCGF translates the user registration response of the\
    \ SCP\n   internal API message to the PINT message.\n   5. The SCGF relays the\
    \ user registration response to the ICW Server.\n   5A. The ICW Server records\
    \ the user registration information and the\n   Internet on-line status for the\
    \ subscriber in the data base.\n   6. The ICW Server sends the user registration\
    \ response to the ICW\n   Client.\n   6A. The ICW Client notifies the subscriber\
    \ that the registration is\n   completed successfully and the ICW service is in\
    \ the active state.\n"
- title: 3.5.4. Incoming Call Notification
  contents:
  - "3.5.4. Incoming Call Notification\n   When a calling party makes a call to the\
    \ ICW subscriber, the SCP\n   notifies the ICW Client of the incoming call and\
    \ waits for the\n   subscriber's response.\n"
- title: ICW Subscriber ICW Server    SCGF        SCF/SDF     SSF/CCF    Calling
  contents:
  - 'ICW Subscriber ICW Server    SCGF        SCF/SDF     SSF/CCF    Calling

    '
- title: ICW Client                                                        party
  contents:
  - "ICW Client                                                        party\n (DN1/IP1)\
    \      (IP2)        (IP3)                                 (DN2)\n     |      \
    \      |            |            |            |            |\n     |         \
    \   |            |            |           setup(DN1,DN2)|\n  1  |            |\
    \            |            |            |<+++++++++++|\n     |            |   \
    \         |            |           1A            |\n     |            |      \
    \      |          IDP(T-busy,DN1)|            |\n  2  |            |         \
    \   |            |<--.--.--.--|            |\n     |            |            |\
    \           2A            |            |\n     |            |            |   \
    \        2B            |            |\n     |            |            |      \
    \     2C            |            |\n     |            |        noti(DN1,IP1,DN2)|\
    \            |            |\n  3  |            |            |<-.-.-.-.-.-|   \
    \         |            |\n     |            |           3A            |      \
    \      |            |\n     |         INV(DN1,IP1,DN2)|            |         \
    \   |            |\n  4  |            |<-----------|            |            |\
    \            |\n     |           4A            |            |            |   \
    \         |\n     |            | 100 Trying |            |            |      \
    \      |\n  5  |            |----------->|            |            |         \
    \   |\n  INV(DN1,IP1,DN2)|            |            |            |            |\n\
    \  6  |<-----------|            |            |            |            |\n   \
    \ 6A            |            |            |            |            |\n     |\
    \ 100 Trying |            |            |            |            |\n  7  |----------->|\
    \            |            |            |            |\n     |            |   \
    \         |            |            |            |\n       -----> PINT Protocol\
    \             -.-.-> SCP Internal API\n       --.--> INAP Protocol           \
    \  +++++> ISUP Protocol\n       =====> Bearer\n                  Figure 4: Incoming\
    \ Call Notification\n   As depicted in Figure 4, the relevant information flows\
    \ are as\n   follows:\n   1. The calling party at DN2 (a telephone user) makes\
    \ a call to the\n   ICW subscriber (PC user) at DN1.  The connection is set up\
    \ using the\n   existing ISDN signaling.\n   1A. The SSF/CCF detects that the\
    \ callee (the ICW subscriber) is busy.\n   2. The SSF/CCF sends InitialDP (T_Busy)\
    \ to the SCF/SDF.\n   2A. The SCF/SDF determines whether the user at DN1 is PSTN\
    \ on-line or\n   Internet on-line.  (The SCF/SDF executes the KT Telephone Mail\n\
    \   Service logic in the PSTN on-line case and the ICW service Logic in\n   the\
    \ Internet on-line case.)\n   2B. The SCF/SDF retrieves the IP address corresponding\
    \ to DN1.\n   2C. The SCF/SDF may play an announcement to the calling party, while\n\
    \   waiting for the response of the called party.\n   3. The SCF sends an incoming\
    \ call notification to the SCGF.\n   3A. The SCGF translates the incoming call\
    \ notification from the SCP\n   internal format to the PINT format.\n   4. The\
    \ SCGF relays the notification to the ICW Server.\n   4A. The ICW Server double-checks\
    \ the subscriber's status using the\n   ICW subscribers profile in its own data\
    \ base.\n   5. The ICW Server sends trying message to the SCGF.\n   6. The ICW\
    \ Server relays the notification to the ICW Client.\n   6A. The ICW Client consults\
    \ the ICW service profile to see if there\n   is a pre-defined call disposition\
    \ for the incoming call.  If so, then\n   the procedure for automatic call processing\
    \ is performed.\n   6B. If there is no pre-defined call disposition for the incoming\n\
    \   call, the subscriber is notified of the call via a pop-up dialog box.\n  \
    \ 7. The ICW Client sends trying message to the ICW Server.\n"
- title: 3.6.5. Incoming Call Processing
  contents:
  - "3.6.5. Incoming Call Processing\n   The incoming call can be accepted, rejected,\
    \ forwarded to another\n   number, or forwarded to the VMS depending on the on-the-fly\
    \ or pre-\n   defined choice of the subscriber.  This section describes the\n\
    \   information flows for the cases of \"Accept the call\" and \"Forward the\n\
    \   call to another number.\"\n"
- title: 3.5.5.1. Accept the Call
  contents:
  - '3.5.5.1. Accept the Call

    '
- title: ICW Subscriber ICW Server    SCGF        SCF/SDF     SSF/CCF    Calling
  contents:
  - 'ICW Subscriber ICW Server    SCGF        SCF/SDF     SSF/CCF    Calling

    '
- title: ICW Client                                                        party
  contents:
  - "ICW Client                                                        party\n (DN1/IP1)\
    \      (IP2)        (IP3)                                 (DN2)\n     |      \
    \      |            |            |            |            |\n    0A   200 OK\
    \   |            |            |            |            |\n  1  |----------->|\
    \            |            |            |            |\n    1A            |   \
    \         |            |            |            |\n    1B            |   200\
    \ OK   |            |            |            |\n  2  |            |----------->|\
    \            |            |            |\n     |            |    ACK    2A   \
    \         |            |            |\n  3  |            |<-----------|      \
    \      |            |            |\n     |            |            |Accept(DN1,IP1,DN2)\
    \      |            |\n  4  |            |            |-.-.-.-.-.->|         \
    \   |            |\n     |            |            |            |Connect(DN1,DN2)\
    \         |\n  5  |            |            |            |--.--.--.-->|      \
    \      |\n     |            |            |           Setup(DN1,DN2)|         \
    \   |\n  6  |<++++++++++++++++++++++++++++++++++++++++++++++++++|            |\n\
    \     |<==============================6A==============================>|\n   \
    \  |            |            |            |    ERB     |            |\n  7  |\
    \            |            |            |<--.--.--.--|            |\n     |   \
    \         |            |     ok     |            |            |\n  8  |      \
    \      |            |<-.-.-.-.-.-|            |            |\n     |         \
    \   |           8A            |            |            |\n     |            |\
    \    BYE     |            |            |            |\n  9  |            |<-----------|\
    \            |            |            |\n     |           9A            |   \
    \         |            |            |\n     |            |            |      \
    \      |            |            |\n       -----> PINT Protocol             -.-.->\
    \ SCP Internal API\n       --.--> INAP Protocol             +++++> ISUP Protocol\n\
    \       =====> Bearer\n           Figure 5: Incoming Call Processing - Accept\
    \ the Call\n   As depicted in Figure 5, the relevant information flows are as\n\
    \   follows:\n   0A. The ICW subscriber chooses to \"Accept\" the incoming call.\n\
    \   1. The ICW Client sends the \"Accept\" indication to the ICW Server.\n   1A.\
    \ The ICW Client records the subscriber's selection for the\n   incoming call\
    \ in the call log.\n   1B. The ICW Client terminates the subscriber's Internet\
    \ connection.\n   2. The ICW Server sends an \"Accept\" message to the SCGF.\n\
    \   2A. The SCGF translates the \"Accept\" message to an SCP internal API\n  \
    \ message.\n   3. The SCGF sends an \"ACK\" message to the ICW Server.\n   4.\
    \ The SCGF sends the \"Accept\" message to the SCF.\n   5. The SCF instructs the\
    \ SSF/CCF to route the call to DN1.\n   6. The SSF/CCF initiates the connection\
    \ setup to DN1.\n   6A. The bearer connection between the calling party (DN2)\
    \ and the ICW\n   subscriber(DN1) is set up.\n   7. The connection result is returned\
    \ to the SCF through ERB.\n   8. The SCF sends a call completion message to the\
    \ SCGF.\n   8A. The SCGF translates the call completion message to a PINT\n  \
    \ message.\n   9. The SCGF sends a \"BYE\" message to the ICW Server.\n   9A.\
    \ The ICW Server records the call completion result in the log\n   file.\n"
- title: 3.5.5.2. Forward the Call to Another Number
  contents:
  - '3.5.5.2. Forward the Call to Another Number

    '
- title: ICW Subscriber ICW Server SCGF     SCF/SDF    SSF/CCF    Calling Another
  contents:
  - 'ICW Subscriber ICW Server SCGF     SCF/SDF    SSF/CCF    Calling Another

    '
- title: ICW Client                                                party   Phone
  contents:
  - "ICW Client                                                party   Phone\n (DN1/IP1)\
    \     (IP2)      (IP3)                           (DN2)    (DN3)\n     |      \
    \    |          |          |          |          |         |\n    0A         \
    \ |          |          |          |          |         |\n     |303 SeeOther\
    \         |          |          |          |         |\n  1  |--------->|    \
    \      |          |          |          |         |\n    1A    ACK   |       \
    \   |          |          |          |         |\n  2  |<---------|303 SeeOther\
    \         |          |          |         |\n  3  |          |--------->|    \
    \      |          |          |         |\n     |          |    ACK  3A       \
    \   |          |          |         |\n  4  |          |<---------|Connect(DN2,DN3)\
    \     |          |         |\n  5  |          |          |-.-.-.-.->|        \
    \  |          |         |\n     |          |          |          |Connect(DN2,DN3)\
    \     |         |\n  6  |          |          |          |.--.--.-->|        \
    \  |         |\n     |          |          |          |          |Setup(DN2,DN3)\
    \      |\n  7  |          |          |          |          ++++++++++++++++++++>|\n\
    \  8  |          |          |          |   ERB    |          |<===5A==>|\n   \
    \  |          |          |          |<--.--.--.|          |         |\n     |\
    \          |          |    ok    |          |          |         |\n  9  |   \
    \       |          |<-.-.-.-.-|          |          |         |\n     |      \
    \    |   BYE   9A          |          |          |         |\n 10  |         \
    \ |<---------|          |          |          |         |\n     |  BYE    10A\
    \         |          |          |          |         |\n 11  |<---------|    \
    \      |          |          |          |         |\n    11A         |       \
    \   |          |          |          |         |\n     |          |          |\
    \          |          |          |         |\n       -----> PINT Protocol    \
    \         -.-.-> SCP Internal API\n       --.--> INAP Protocol             +++++>\
    \ ISUP Protocol\n       =====> Bearer\n  Figure 6: Incoming Call Processing -\
    \ Forward the Call to Another\n   As depicted in Figure 6, the relevant information\
    \ flows are as\n   follows:\n   0A. The ICW subscriber chooses to \"Forward to\
    \ another number (DN3)\"\n   for the incoming call.\n   1. The ICW Client sends\
    \ the \"Forward to another number\" indication to\n   the ICW Server.\n   1A.\
    \ The ICW Client records the subscriber's selection for the\n   incoming call\
    \ in the call log.\n   2. The ICW Server sends an \"ACK\" message to the ICW Client.\n\
    \   3. The ICW Server relays the \"Forward to another number\" message to\n  \
    \ the SCGF.\n   3A. The SCGF translates the \"Forward to another number\" message\
    \ to an\n   SCP internal API message.\n   4. The SCGF sends an \"ACK\" message\
    \ to the ICW Server.\n   5. The SCGF sends the \"Forward to another number\" message\
    \ to the SCF.\n   6. The SCF instructs the SSF/CCF to route the call to DN3.\n\
    \   7. The SSF/CCF initiates the connection setup to DN3.\n   7A. The bearer connection\
    \ between the calling party (DN2) and the new\n   termination number (DN3) is\
    \ set up.\n   8. The connection result is returned to the SCF through ERB.\n \
    \  9. The SCF sends a call completion message to the SCGF.\n   9A. The SCGF translates\
    \ the call completion message to a PINT\n   message.\n   10. The SCGF sends the\
    \ call completion message to the ICW Server.\n   10A. The ICW Server records the\
    \ call completion result in the log\n   file.\n   11. The ICW Server sends the\
    \ success of \"Forwarding to another\n   number\" to the ICW Client.\n   11A.\
    \ The ICW Client records the call completion result in the log\n   file.\n"
- title: 3.6.6. ICW service De-activation
  contents:
  - "3.6.6. ICW service De-activation\n   The SCP de-activates the ICW service for\
    \ a subscriber either upon the\n   termination of the subscriber's Internet connection\
    \ or upon the\n   subscriber's manual request.  In this section, we illustrate\
    \ the\n   former scenario.\n"
- title: ICW Subscriber ICW Server    SCGF        SCF/SDF     SSF/CCF    Calling
  contents:
  - 'ICW Subscriber ICW Server    SCGF        SCF/SDF     SSF/CCF    Calling

    '
- title: ICW Client                                                        party
  contents:
  - "ICW Client                                                        party\n (DN1/IP1)\
    \      (IP2)        (IP3)                                (DN2)\n     |       \
    \     |            |            |            |            |\n    0A          \
    \  |            |            |            |            |\n     |           0B\
    \            |            |            |            |\n     |            |Unreg(DN1,IP1)\
    \           |            |            |\n  1  |            |----------->|    \
    \        |            |            |\n     |            |           1A       \
    \     |            |            |\n     |            |            |Unreg(DN1,IP1)\
    \           |            |\n  2  |            |            |-.-.-.-.-.->|    \
    \        |            |\n     |            |            |           2A       \
    \     |            |\n     |            |            |     ok    2B          \
    \  |            |\n  3  |            |            |<-.-.-.-.-.-|            |\
    \            |\n     |            |           3A            |            |   \
    \         |\n     |            |   200 OK   |            |            |      \
    \      |\n  4  |            |<-----------|            |            |         \
    \   |\n     |           4A            |            |            |            |\n\
    \     |            |            |            |            |            |\n   \
    \    -----> PINT Protocol             -.-.-> SCP Internal API\n       --.--> INAP\
    \ Protocol             +++++> ISUP Protocol\n       =====> Bearer\n          \
    \       Figure 7: ICW Service De-activation\n   As depicted in Figure 7, the relevant\
    \ information flows are as\n   follows:\n   0A. The ICW subscriber terminates\
    \ the Internet connection.\n   0B. The ICW Server determines that the Internet\
    \ connection has been\n   terminated when it does not receive the periodic on-line\
    \ notification\n   from the ICW Client.\n   1. The ICW Server sends an un-register\
    \ message to the SCGF.\n   1A. The SCGF translates the un-register message to\
    \ an SCP internal\n   API message.\n   2. The SCGF sends the un-register message\
    \ to the SCF.\n   2A. The SCF/SDF authorizes the subscriber with the directory\
    \ number\n   based on the un-registration information.\n   2B. The SCF/SDF records\
    \ the Internet off-line status for that ICW\n   Client.\n   3. The SCF/SDF sends\
    \ a user un-registration response to the SCF/SCGF.\n   3B. The SCGF translates\
    \ the user un-registration response to a PINT\n   message.\n   4. The SCGF relays\
    \ the user un-registration response to the ICW\n   Server.\n   4A. The ICW Server\
    \ records the Internet off-line status for the ICW\n   Client (subscriber) in\
    \ the data base.\n"
- title: 4. The Lucent Technologies Online Communications Center
  contents:
  - '4. The Lucent Technologies Online Communications Center

    '
- title: 4.1 Overview
  contents:
  - "4.1 Overview\n   The Lucent Technologies Online Communications Center (OCC) is\
    \ an\n   Intelligent Network (IN)-based platform that supports the Internet\n\
    \   call waiting service.  Its basic components are the OCC Server and\n   OCC\
    \ Client, which are described in detail in the Architecture\n   section.  The\
    \ OCC Server interacts with the PSTN entities over the\n   secure intranet via\
    \ plain-text Session Initiation Protocol (SIP)\n   messages [2].  With the PC\
    \ Client, the OCC Server interacts via\n   encrypted SIP messages.\n   The OCC\
    \ Server run-time environment effectively consists of two\n   multi-threaded processes\
    \ responsible for Call Registration and Call\n   Notification services, respectively.\n\
    \   OCC call registration services are initiated from an end-user's PC\n   (or\
    \ Internet appliance).  With those, a subscriber registers his or\n   her end-points\
    \ and activates the notification services.  (The\n   registration services are\
    \ not, strictly speaking, SPIRITS services\n   but rather have a flavor of PINT\
    \ services.)\n   All OCC call notification services are PSTN-initiated.  One common\n\
    \   feature of these services is that of informing the user of the\n   incoming\
    \ telephone call via the Internet, without having any effect\n   on the line already\
    \ used by the modem.  (A typical call waiting tone\n   would interrupt the Internet\
    \ connection, and it is a standard\n   practice to disable the  \"old\" PSTN call\
    \ waiting service for the\n   duration of the call in support of the Internet\
    \ connection between\n   the end-user and the ISP.)\n   When a call comes in,\
    \ the user is presented with a pop-up dialog box,\n   which displays the caller's\
    \ number (if available), name (again, if\n   available), as well as the time of\
    \ the call.  If the called party\n   does not initiate an action within a specified\
    \ period of time the\n   call is rejected.\n   As far as the disposition of the\
    \ call is concerned, OCC supports all\n   the features described in Section 2.\n"
- title: 4.2. Architecture
  contents:
  - "4.2. Architecture\n               +------------+\n               | Compact  \
    \  |            +-------------+\n               | Service    |            | Service\
    \     |\n         +-----| Node (CSN) |            | Management  |\n         |\
    \     | OCC Server |            | System (SMS)|\n         |     | OCC CSN SPA|\
    \            +-------------+\n         |     +-------:--|-+                  \
    \ |\n         |             |  +-------------[ IP INTRANET ]---------+\n     \
    \  ===== firewall  :                                        |\n         |    \
    \         |                                        |\n         |          +-------+\
    \                               +-------+\n         |          |Central|-..-..-..-..-..-..-..-..-..-..-|Service|\n\
    \         |      +-%-|Office |-..-..-:                       |Control|\n     \
    \    |      |   +---|---+       |                       |Point  |\n         |\
    \      %       |           :                       | (SCP) |\n         |     \
    \ |    +--|---+   +-------+    +----------+   |OCC SCP|\n         |      %   \
    \ |  PC  |   | VoIP  |    | VoIP     |   |  SPA  |\n         |      |    |OCC\
    \ Cl|   |Gateway|    |Gatekeeper|   +-------+\n         |      %    +------+ \
    \  +---|---+    +-----|----+\n         |      |                 ===== firewall\
    \ =====\n         |      %                   |              |\n         |    \
    \  |   +---------------|---+          |\n         |      +-%-|               \
    \    |----------+\n         +----------|  I N T E R N E T  |\n               \
    \     |                   |\n                    +-------------------+\n     \
    \          Figure 8: The Lucent OCC Physical Architecture\n   Figure 8 depicts\
    \ the joint PSTN/Internet physical architecture\n   relevant to the OCC operation.\
    \  The Compact Service Node (CSN) and\n   SCP are Lucent's implementations of\
    \ the ITU-T IN Recommendations (in\n   particular, the Recommendation Q.1205 where\
    \ these entities are\n   defined) augmented by the requirements of Bellcore's\
    \ Advanced\n   Intelligent Network (AIN) Release 1.0) and equipped with other\n\
    \   features.  The Central Office (CO) may be any switch supporting the\n   Integrated\
    \ Services Digital Network (ISDN) Primary Rate Interface\n   (PRI) and the call\
    \ forwarding feature that would allow it to\n   interwork with the CSN.  Alternatively,\
    \ in order to interwork with\n   the SCP, it needs to be an IN Service Switching\
    \ Point (SSP).  In the\n   latter case, the central office is connected to the\
    \ SCP via the\n   signaling system No. 7 (SS7) and INAP at the application layer.\n\
    \   The Service Management System (SMS) is responsible for provisioning\n   of\
    \ the SCPs, CSNs, and central offices.  In particular, for IN\n   support of the\
    \ Internet Call Waiting, it must provision the Central\n   Office to direct a\
    \ terminating attempt query to the subsystem number\n   corresponding to the OCC\
    \ SCP SPA based on the Termination Attempt\n   Trigger (TAT).  In addition, the\
    \ Subscriber Directory Number (DN),\n   Personal Identification Number (PIN) and\
    \ Language ID are provisioned\n   for each subscriber into the OCC Subscriber\
    \ entry of the SCP Real\n   Time Data Base (RTDB).  Figure 9 shows the structure\
    \ of an RTDB\n   entry.\n      +-------------------------------------------------------+\n\
    \      |DN | PIN | IP Address | Session Key | CNF | Language ID|\n      +-------------------------------------------------------+\n\
    \      Field Descriptions:\n      (DN) Directory Number - the subscriber's telephone\
    \ number\n      (PIN) Personal Identification Number - the subscriber's password\n\
    \      IP Address - Internet Protocol Address of the subscriber\n      (CNF) Call\
    \ Notification In Progress Flag (boolean) - the flag\n      indicating if an attempt\
    \ to notify the subscriber of a call is\n      currently in progress\n      Session\
    \ Key - unique identifier for the current registration session\n      of the subscriber\n\
    \      Language ID - language identifier for the subscriber\n          Figure\
    \ 9: Structure of the RTDB Subscriber Record\n   The Central Office, SMS, CSN,\
    \ and SCP are the only PSTN elements of\n   the architecture.  The other elements\
    \ are VoIP Gateway and Gatekeeper\n   defined in the ITU-T Recommendation H.323,\
    \ whose roles are to\n   establish and provide the part of the voice path over\
    \ IP.  The\n   Central Office is explicitly connected to the VoIP Gateway via\
    \ the\n   ISDN PRI connection.  In this architecture, CSN, VoIP Gateway, and\n\
    \   VoIP Gatekeeper are the only entities connected to the Internet, with\n  \
    \ each respective connection protected by a firewall.  The CSN and SCP\n   are\
    \ interconnected via a secure IP Intranet.  There may be more than\n   one CSN\
    \ or SCP (or both) (and the SCPs come in mated pairs\n   interconnected by X.25,\
    \ anyway) in a network, but these details are\n   not essential to the level of\
    \ description chosen for this document.\n   However, we note that load balancing\
    \ and adaptation to failures by\n   the use of alternative nodes is incorporated\
    \ into the architecture.\n   When someone attempts to call the subscriber, the\
    \ central office\n   serving that subscriber interrupts normal termination processing\
    \ and\n   notifies the SCP which, in turn, can check whether that subscriber\n\
    \   has registered that he (or she) is logged onto the Internet.\n   Exploiting\
    \ the standardized layering of service logic that\n   characterizes the intelligent\
    \ network, the central office will do\n   this without requiring the installation\
    \ or development of any central\n   office software specific to OCC.  The central\
    \ office is simply\n   provisioned to query the SCP when there is a termination\
    \ attempt\n   (i.e., TAT) directed to the subscriber's directory number.  (Note\n\
    \   that the Central Office has no bearer circuit connection to the SCP,\n   only\
    \ a signaling one over SS7).\n   TCP/IP communication between the SCP and CSN\
    \ utilizes a secure\n   intranet.  The subscriber, of course, is assumed to have\
    \ access only\n   to the Internet.\n   The intelligent network entities, the SCP\
    \ and CSN, do have OCC\n   related software.  The OCC server is implemented on\
    \ the CSN.  In\n   addition, one service package application (SPA) is installed\
    \ on the\n   SCP.  Another SPA is located in the CSN and is needed only when the\n\
    \   subscriber elects to accept an incoming call using voice over IP.\n   The\
    \ OCC Server is a collection of Java servers on the CSN whose\n   responsibilities\
    \ include:\n   o  Listening for incoming Call Notification (TCP/IP) messages from\n\
    \      the SCP SPA.\n   o  De-multiplexing/multiplexing incoming Call Notification\
    \ messages\n      sent from the SCP SPA.\n   o  Relaying messages between the\
    \ OCC Client and the SCP SPA.\n   o  Listening for and authentication of OCC Client\
    \ requests for\n      service registration.\n   o  Handling encryption/decryption\
    \ of messages exchanged with the OCC\n      Client, and generating session-specific\
    \ encryption/decryption\n      keys.\n   The OCC Client is a collection of software\
    \ components that run on the\n   Subscriber's PC.  Its components include the\
    \ SIP User Agent Server\n   (which handles the exchange of SIP messages with the\
    \ OCC Server and\n   invokes the Call Notification pop-up window) and a daemon\
    \ process\n   that monitors the Point-to-Point Protocol (PPP) actions and is\n\
    \   responsible for starting and stopping the SIP User Agent Server.\n"
- title: 4.3. Protocol and Operations Considerations
  contents:
  - "4.3. Protocol and Operations Considerations\n   The OCC Server uses distinct\
    \ TCP/IP ports configured on the CSN to\n   o  Listen for incoming SIP REGISTER\
    \ messages (in support of\n      registration service) sent from the OCC Client.\n\
    \   o  Listen for incoming SIP INVITE messages (in support of call\n      notification\
    \ service) sent from the SCP.\n   During call notification, the SCP SPA is the\
    \ client and thus is\n   started after the OCC Server has been started.  The SCP\
    \ SPA and OCC\n   Server exchange SIP messages over TCP/IP (via the Secure Intranet)\n\
    \   using a \"nailed-up\" connection which is initiated by the SCP SPA.\n   This\
    \ connection is initiated at the time the SCP SPA receives the\n   very first\
    \ SIP REGISTER request from the OCC Server, and must prevail\n   for as long as\
    \ the SPA is in the in-service state.  The SCP SPA also\n   supports restarting\
    \ the connection after any failure condition.\n   The OCC Server supports multithreading.\
    \  For each Call\n   Notification/Call Disposition event, a separate thread is\
    \ used to\n   handle the call.  This model supports multi-threading on a \"per\n\
    \   message\" basis where every start message (SIP INVITE) received from\n   the\
    \ SCP SPA uses a separate thread of control to handle the call.\n   Subsequent\
    \ messages containing the same session Call-ID (which\n   includes the SPA's instance\
    \ known as \"call_index\" and the SCP\n   hostname) as the original start message\
    \ is routed to the same thread\n   that previously handled the respective initiating\
    \ message.\n   The OCC Server dynamically opens a new TCP/IP socket with the OCC\n\
    \   Client for each Call Notification/Call Disposition session.  This\n   socket\
    \ connection uses the IP address and a pre-configured port on\n   the PC running\
    \ the OCC Client software.\n   For session registration, the OCC Server dynamically\
    \ opens TCP/IP\n   sessions with the SCP SPA.  The SCP SPA listens at a pre-configured\n\
    \   port to incoming SIP REGISTER messages sent by OCC Clients via the\n   OCC\
    \ Server.  To exchange SIP messages with the OCC Server, the OCC\n   Client dynamically\
    \ opens a TCP/IP socket connection with the OCC\n   Server using a pre-configured\
    \ port number on the CSN and the CSN's IP\n   address.\n   For the VoIP Scenario,\
    \ the CSN SPA, acting as a client, dynamically\n   opens TCP/IP sessions with\
    \ the SCP that handled the initial TAT\n   query.  As soon as the CSN SPA has\
    \ successfully made the correlation\n   and connected the two incoming call legs\
    \ pertaining to a VoIP call\n   back, the SIP 180 RINGING message will be sent\
    \ back to the SCP SPA\n   running on the actual SCP that instructed the SSP to\
    \ forward the\n   Caller to the CSN.  This SIP message, which contains the VoIP\
    \ Call\n   Back DN dialed by one of the bridged call legs, is an indication to\n\
    \   the SCP SPA that the VoIP Call Back DN is freed up.\n   A typical subscription\
    \ scenario works like as follows:\n   1. Each VoIP Gateway is provisioned with\
    \ a list of authorized VoIP\n      Call Back DNs, each terminating on a particular\
    \ CSN.  These\n      special DNs are used when an on-line subscriber elects to\
    \ receive\n      an incoming call via VoIP.  In particular, they assist in routing\n\
    \      an outgoing call from the subscriber's NetMeeting to the\n      particular\
    \ CSN to which the SCP is (roughly concurrently)\n      forwarding the incoming\
    \ call.  (These two calls are joined in the\n      CSN to connect the incoming\
    \ call to the subscriber's Netmeeting\n      client.)  Furthermore, these special\
    \ DNs permits that CSN to\n      associate, and hence bridge, the correct pair\
    \ of call legs to join\n      the party calling the subscriber to the call from\
    \ the subscriber's\n      NetMeeting client.\n   2. The subscriber calls a PSTN\
    \ service provider and signs up for the\n      service.\n   3. An active Terminating\
    \ Attempt Trigger (TAT) is assigned to the\n      subscriber's DN at the subscriber's\
    \ central office.\n   4. The PSTN service provider uses the SMS to create a record\
    \ for the\n      subscriber and provision the Subscriber DN and PIN in the OCC\
    \ RTDB\n      table in the SCP.\n   5. The subscriber is provided with the OCC\
    \ Client software, a PIN and\n      a file containing the OCC Server IP Addresses.\n\
    \   Finally, we describe the particular scenario of the OCC Call\n   Disposition\
    \ that involves voice over IP, which proceeds as follows:\n   1. The OCC subscriber\
    \ clicks on \"Accept VoIP\".\n   2.  The OCC Client sends a \"SIP 380 Alternative\
    \ Service\" message to\n       the OCC Server.  This message includes a reference\
    \ to the Call\n       Back DN which will ultimately be used by the CSN to associate\
    \ the\n       call leg (soon to be initiated by the subscriber's NetMeeting)\n\
    \       connecting to the subscriber (via the VoIP gateway) with the PSTN\n  \
    \     call leg connecting to the calling party.\n   3.  The OCC Server closes\
    \ the TCP/IP session with the OCC Client and\n       sends to the SCP SPA the\
    \ \"SIP 380 Alternative Service\" message\n       which includes the Call Back\
    \ DN.\n   4.  The SCP SPA instructs the Central Office to forward the call\n \
    \      incoming to the subscriber to the CSN.  This instruction includes\n   \
    \    the Call Back DN.\n   5.  The SSP forwards the Caller to the CSN referencing\
    \ the Call Back\n       DN.  Note that the Call Back DN, originally assigned to\
    \ the OCC\n       client by the SCP when the subscriber was alerted to the presence\n\
    \       of an incoming call attempt, flowed next to the OCC server when\n    \
    \   the client elected to receive the call via VoIP, then to the SCP,\n      \
    \ then to the central office in association with a SCP command to\n       forward\
    \ the incoming call to the CSN, then to the OCC server on\n       the CSN in association\
    \ with that forwarded call.\n   6.  Meanwhile, the OCC Client extracts 1) the\
    \ VoIP Call Back DN from\n       the SIP INVITE message received during Call Notification\
    \ and 2)\n       the H323UID and H323PIN values from its properties file and\n\
    \       updates the 'netmtg.cnf' file.\n   7.  The NetMeeting application is launched\
    \ and sets up a connection\n       with the VoIP Gateway.\n   8.  Once a connection\
    \ is established between NetMeeting and the VoIP\n       Gateway, NetMeeting initiates\
    \ a phone call - passing to the VoIP\n       Gateway the Call Back DN as the destination\
    \ DN.\n   9.  The VoIP Gateway consults the VoIP Gatekeeper and authenticates\n\
    \       the NetMeeting call by verifying the H323UID and H323PIN values,\n   \
    \    and by ensuring the called DN (i.e., Call Back DN) is authorized\n      \
    \ for use.\n   10. After passing the authentication step, the VoIP Gateway dials\n\
    \       (via PSTN) the Call Back DN and gets connected to the CSN.  The\n    \
    \   CSN notes that it was reached by the particular Call Back DN.\n   11. The\
    \ CSN bridges the Calling and Called parties together by\n       matching on the\
    \ basis of the Call Back DN.\n   12. The CSN notifies the SCP (SIP 180 Ringing)\
    \ of status and\n       references the Call Back DN so that the SCP can reuse\
    \ it for\n       other calls.\n   13. If the central office supports that two\
    \ B-channel transfer\n       (Lucent, Nortel, and perhaps other central office\
    \ vender's do),\n       an optimization is possible.  The CSN can have the central\
    \ office\n       rearrange the topology of the newly connected call in such a\
    \ way\n       that it flows only through the central office and no longer\n  \
    \     through the CSN.\n"
- title: 5. NEC's Implementation
  contents:
  - '5. NEC''s Implementation

    '
- title: 5.1. Overview
  contents:
  - "5.1. Overview\n   The NEC implementation of the ICW service is based on IN. \
    \ Via a\n   SPIRITS server and an ICW client, incoming calls will be presented\
    \ to\n   the user via a pop-up screen dialogue box.  This dialogue box informs\n\
    \   the user of the call arrival time and the calling party's number and\n   name\
    \ (if available).  The arrival of the call is also indicated with\n   an accompanied\
    \ audible indication.\n   The pop-up dialogue box offers the user various call\
    \ management\n   options.  Selecting a call management option allows the user\
    \ to\n   answer the call, forward it to another destination or to  voice mail,\n\
    \   or ignore it.\n   The user will be able to customize their service through\
    \ various\n   service set-up options.  All calls presented to the user during\
    \ an\n   Internet session will be recorded in a call log.\n   Other features include\
    \ Multiple call arrival management with which\n   each new call arrival will generate\
    \ its own pop-up dialogue box and\n   audible indication.\n"
- title: 5.2. Architecture and Overall Call Flow
  contents:
  - "5.2. Architecture and Overall Call Flow\n   Figure 10 depicts the NEC ICW system.\n\
    \                    ====================================\n                  \
    \  ||         I n t e r n e t         ||\n                    ||             \
    \                    ||\n                    ====================================\n\
    \                     /                    |        \\\n                    :\
    \ (p1)                :         : (p2)\n                   /                 \
    \     |          \\\n                +-------+             +------------+   +-----+\n\
    \                |SPIRITS|             |    ISP     |   | W3S |\n            \
    \    |Server |             |    ISP     |   | W3S |\n                +-------+\
    \             +------------+   +-----+\n                   :                 \
    \     :\n   Internet        |                      :\n   PSTN/IN         |(p0)\
    \                  :\n                   :                      :\n          \
    \         |          ============:======\n                +------+ (p3) ||  +-----+\
    \ :     ||\n                |  SCP |-..-..-..-| SSP | :     ||\n             \
    \   +------+      ||  +-----+ :     ||\n                              || (p4)|\
    \    :     ||\n   +-------+                  ||     :    :     ||\n   | ICW  \
    \ | (p1)+-----+      ||     |    :     ||\n   |Client |.....| M/D |............+------+\
    \    ||\n   +-------+ (p2)+-----+      ||    |  CO  |    ||\n                --------------------|\
    \      |-------\n               /              ||    +------+    || \\\n     /--\\\
    \     /               ||     P S T N    ||  \\        /--\\\n    ()/\\()   / \
    \               ===================    \\      ()/\\()\n    _/__\\___/       \
    \                                  \\______/__\\_\n   ICW Subscriber         \
    \                            Calling Party\n   Legend:\n             ISP :  Internet\
    \ Service Provider\n             W3S :  WWW Server\n             SCP :  Service\
    \ Control Point(acts as SPIRITS Client)\n             SSP :  Service Switching\
    \ Point\n             CO :  Central Office\n             M/D :  Modem\n   Traffic:\n\
    \             --- : PSTN Voice Traffic\n             ... : PPP(IP traffic)\n \
    \            -..-: Signaling Traffic\n   Interfaces:\n              p0 : SPIRITS\
    \ Server-SCP(SPIRITS Client) interface\n              p1 : SPIRITS Server-ICW\
    \ Client interface\n              p2 : ICW Client-W3S interface\n            \
    \       (Web access through HTTP)\n              p3 : SCP-SSP interface(INAP)\n\
    \              p4 : SSP-CO interface(ISUP)\n                    Figure 10: the\
    \ NEC ICW system\n   The description below provides the necessary steps to initiate\
    \ the\n   ICW service on a CO line, and how the ICW service is applied to an\n\
    \   incoming call based on the above architecture:\n   1.  The CO line is primed\
    \ for the ICW service when the customer\n      connects to their ISP by inserting\
    \ a special activation code\n      (e.g., *54) prefix in front of the ISP Directory\
    \ Number.\n   2.  The ICW service is activated when the user opens a secured\n\
    \      session from an ICW client to the SPIRITS server.  Once a session\n   \
    \   is open, the SPIRITS server will know the relationship between the\n     \
    \ line and the PC (i.e., it will know the Directory Number of the\n      user's\
    \ Internet line and the user's IP Address).\n   3.  When a call arrives at a busy\
    \ Internet line, the SSP will trigger\n      the ICW service.  The SCP which acts\
    \ as the SPIRITS client will\n      inform the SPIRITS server that a call is terminating\
    \ to a busy\n      Internet line.  The message will include the Caller ID and\
    \ Calling\n      Line Identify Restriction (CLIR) Status of the calling party,\
    \ and\n      DN of the busy line.\n   4.  The SPIRITS server will verify that\
    \ if an ICW session has been\n      established for the busy line.  If so, the\
    \ SPIRITS server will\n      communicate with the user's ICW client application.\
    \  The user will\n      receive a real-time pop-up dialogue box including the\
    \ Calling Name\n      and Number of the Calling Party if available.  The user\
    \ will then\n      select one of the following call management options:\n    \
    \  - Answer the call (the Internet connection will be automatically\n        dropped\
    \ and the phone will ring)\n      - Send the call to Voice Mail\n      - Forward\
    \ the call to another destination\n      - Ignore the call\n   5.  When the Internet\
    \ user has made a selection, the ICW client\n      application will transmit this\
    \ to the SPIRITS server.  The SPIRITS\n      server will instruct the PSTN via\
    \ the SCP how to handle the call.\n"
- title: 5.3. Interfaces and Protocols
  contents:
  - '5.3. Interfaces and Protocols

    '
- title: 5.3.1. SCP (SPIRITS Client)-SPIRITS Server Interface
  contents:
  - '5.3.1. SCP (SPIRITS Client)-SPIRITS Server Interface

    '
- title: 5.3.1.1. Connecting to SPIRITS Services
  contents:
  - "5.3.1.1. Connecting to SPIRITS Services\n   The physical connection between the\
    \ SCP and the SPIRITS server will\n   be via a LAN/WAN.  The logical connection\
    \ will use the UDP/IP\n   communications as defined in RFC 768 and RFC 1122.\n\
    \   If a socket connection is not currently established, the SCP will\n   periodically\
    \ try to open a connection.  The SCP routing tables will\n   be configured so\
    \ that all available connections to a SPIRITS server\n   are used.\n"
- title: 5.3.1.2. Message Types
  contents:
  - "5.3.1.2. Message Types\n   Two different types of message are used between the\
    \ SCP and the\n   SPIRITS server: \"Connection Management Message Type\" and the\
    \ \"Data\n   Message Type\".  These messages will carry the remote operation\n\
    \   messages which are based on ITU-T Q.1228 SCF-SCF interface with some\n   NEC\
    \ proprietary extensions.\n   NEC also has a plan to support SIP/SDP-based protocols\
    \ for the SPIR-\n   ITS client-server interface in the near future.\n"
- title: 5.3.1.2.1 Connection Management Message Type
  contents:
  - "5.3.1.2.1 Connection Management Message Type\n   Connection management messages\
    \ are to support functions related to\n   the opening and closing of connections\
    \ and monitoring connections to\n   ensure reliable communications are maintained\
    \ between the SCP and a\n   SPIRITS server.  The SCP is responsible for establishing\
    \ a connection\n   to a SPIRITS server.  A connection can be closed by either\
    \ the SCP or\n   the SPIRITS server.\n   The \"Connection Management Message Type\"\
    \ includes the following\n   operations:\n   - scfBind - scfUnbind - activitytest\n\
    \   Opening a Connection\n   If a connection is not open to an SPIRITS server,\
    \ the SCP will\n   periodically try to open a connection until it is opened. \
    \ If after a\n   pre-determined number of attempts the connection is not opened,\
    \ the\n   socket connection will be released and then re-established and then\n\
    \   the attempt to open the connection will be repeated.\n   The sequence for\
    \ opening a connection is:\n   1. SCP will transmit a scfBind invokation message\
    \ to the SPIRITS\n   server.  This message also carries the version information\
    \ and\n   activity test interval.\n   2. The SPIRITS server, upon receiving an\
    \ invokation of the scfBind\n   from a particular SCP, will reset all the data\
    \ concerning the\n   connection and then responds with either a return result\
    \ containing\n   the Web Server Identification number or a return error with a\
    \ reason.\n   3. When the SCP receives a return result, if the ID number does\
    \ not\n   match the number configured in the SCP, then a scfUnbind will be sent\n\
    \   indicating the wrong ID number.  If the SCP receives nothing or a\n   return\
    \ error is received, then the scfBind will be retried after a\n   pre-determined\
    \ period of time.\n   4. Once the SCP has received a return result, the SCP will\
    \ send\n   Handling Information Request or Activity Test.\n   Upon receiving an\
    \ invokation of activityTest, the SPIRITS server\n   should reply with a return\
    \ result of activityTest.  If the SPIRITS\n   server does not receive any invokation\
    \ messages of Handling\n   Information Request or Activity Test from the SCP for\
    \ four times the\n   Activity Test Interval value in milliseconds, the SPIRITS\
    \ server\n   should then close the connection.\n   To close a connection an invokation\
    \ of the scfUnbind is sent by\n   either the SCP or SPIRITS server to the remote\
    \ end.  When an\n   invokation message of the scfUnbind is received, the receiving\
    \ end\n   should terminate the connection.\n   scfBind\n   The scfBind operation\
    \ is used to open the connection between the SCP\n   and the SPIRITS server. \
    \ The SCP will send the SPIRITS server an\n   invokation of the scfBind to establish\
    \ an association.  If the\n   SPIRITS server is ready to handle the request then\
    \ it should respond\n   with a return result.\n   The return result of scfBind\
    \ contains the identifier of the SPIRITS\n   server.  If the SCP receives the\
    \ return result where the\n   identification of the SPIRITS server does not match\
    \ that registered\n   against the SPIRITS server, then the SCP will send an invokation\
    \ of\n   the scfUnbind indicating an incorrect identifier was received.\n   If\
    \ the SPIRITS server is not ready to handle the request or cannot\n   handle the\
    \ version, then it should respond with a return error.\n   scfUnbind\n   The scfUnbind\
    \ operation is used to close the connection between the\n   SCP and the SPIRITS\
    \ server.  Either the SCP or the SPIRITS server can\n   invoke this operation.\n\
    \   Upon receiving an invokation message the receiving end should\n   terminate\
    \ the connection.\n   activityTest\n   If the SCP has not sent a Data Message\
    \ for the time period specified\n   by the \"Activity Test Interval\", it will\
    \ send an invokation message\n   of activityTest.  When the SPIRITS server receives\
    \ such an\n   invokation, it will reply with a return result message of\n   activityTest.\n\
    \   Its contents should be retained by the SPIRITS server.  They are to\n   be\
    \ echoed back in the return result so that the message reply time\n   can be calculated.\n"
- title: 5.3.1.2.2. Data Message Type
  contents:
  - "5.3.1.2.2. Data Message Type\n   SCPs use the following operations, which are\
    \ sent to the SPIRITS\n   server via a Data-Message-Type message, to request execution\
    \ of some\n   service procedure or notification of an event that takes place at\
    \ the\n   SCPs:\n   o handlingInformationRequest\n     The handlingInformationRequest\
    \ message will request a SPIRITS\n     server the execution of some service procedure.\n\
    \   o handlingInformationResult\n     The handlingInformationResult message will\
    \ show the SCP the result\n     of the execution, which was carried out by the\
    \ SPIRITS server.\n   o confirmedNotificationProvided\n     The confirmedNotificationProvided\
    \ message will indicate to the\n     SPIRITS server of an event, which takes place\
    \ at the SCP.  If the\n     confirmedNotificationProvided indicating 'caller abandon'\
    \ is\n     received, the SPIRITS server will inform the client of the caller\n\
    \     abandon and send the SCP a return result for the\n     confirmedNotificationProvided.\n\
    \     The invoked operation has always a response which is either a\n     return\
    \ result of the operation or an invokation of another\n     operation.\n     If\
    \ a Data Message is not replied to within a pre-determined time\n     out period\
    \ then the message will be resent a number of specified\n     times.  Once the\
    \ number of times has been exceeded, if another node\n     exists, the message\
    \ will be sent to another node if it is\n     available.  If all available SPIRITS\
    \ servers have been queried then\n     Message Time out will be returned to the\
    \ calling process.\n     If an invokation of the handlingInformationResult is\
    \ received with\n     the cause=63 (Service not available), the\n     handlingInformationRequest\
    \ will be sent to another node if it is\n     available.  If all available SPIRITS\
    \ severs have been queried then\n     cause=63 will be returned to the calling\
    \ process.\n"
- title: 5.3.2. SPIRITS Server-ICW Client Application Interface
  contents:
  - "5.3.2. SPIRITS Server-ICW Client Application Interface\n   The following is a\
    \ list of the application messages that are sent via\n   the secure protocol (refer\
    \ to section 5.3.3):\n   o VersionInfo (ICW client -> SPIRITS server)\n     Indicate\
    \ the current version of ICW client software.  The SPIRITS\n     server uses this\
    \ information to determine if the client software is\n     out of date.\n   o\
    \ VersionInfoAck (SPIRITS server -> ICW client)\n     If the VersionInfo message\
    \ from an ICW client indicates to a\n     SPIRITS server that it is an out of\
    \ date version, the URL\n     information is returned within the VersionInfoAck\
    \ message for use\n     in downloading the newer version.  If the client software\
    \ is up to\n     date, the message simply indicates so and does not include any\
    \ URL\n     information.\n   o CallArrival (SPIRITS server -> ICW client)\n  \
    \   Sent by the server to tell the client someone has called the DN.\n   o CallID\n\
    \     An identifier for this call.  Unique in the domain of this\n     client/server\
    \ session.\n   o CallingNumber\n   o CallingName\n     The name of the calling\
    \ party is sent to the Client Application\n     from the SPIRITS server.  When\
    \ available, the name is sent as a\n     15-character string.  If the name is\
    \ unavailable it is sent as\n     \"Name Unavailable\".  If the calling party\
    \ has CLIR set, it is sent\n     as empty (\" \").\n   o CallConnect (ICW client\
    \ -> SPIRITS server)\n     If a corresponding CallConnect is not received within\
    \ a certain\n     period after sending a CallArrival, the SPIRITS server will\
    \ behave\n     as though a CallConnect, Handling=Ignore had been received.\n \
    \  o CallLost (SPIRITS server -> ICW client)\n     Sent by server to cancel a\
    \ CallArrival before a CallConnect is\n     received by the server.\n"
- title: 5.3.3. Secure Reliable Hybrid Datagram Session Protocol (SRHDSP) for Use
  contents:
  - "5.3.3. Secure Reliable Hybrid Datagram Session Protocol (SRHDSP) for Use\n  \
    \     Between ICW Client Application and SPIRITS Server\n"
- title: 5.3.3.1. Overview
  contents:
  - "5.3.3.1. Overview\n   In principle the solution involves session initiation over\
    \ SSL\n   (meeting requirements for standards based security) after which the\n\
    \   SSL session is closed, thereby reducing the number of simultaneous\n   TCP/IP\
    \ sessions.  The rest of the session is communicated over\n   UDP/IP, secured\
    \ using keys and other parameters exchanged securely\n   during the SSL session.\n"
- title: 5.3.3.2. Session Initiation
  contents:
  - "5.3.3.2. Session Initiation\n   The ICW client initiates an SRHDSP session, by\
    \ reserving a UDP/IP\n   port, and opening an SSL session with the service (e.g.,\
    \ ICW) on the\n   service's well known SSL/TCP port.  After establishing the SSL\n\
    \   Session, the ICW client sends the server its IP address, the reserved\n  \
    \ UDP port number, and the set of supported symmetric key algorithms.\n   The\
    \ server responds with a symmetric key algorithm chosen from the\n   set, the\
    \ server's UDP port for further communication, heartbeat\n   period, and the value\
    \ to use for the sequencing window.\n   The client then generates a symmetric\
    \ key using the selected\n   algorithm and transmits this to the server.  The\
    \ SSL session is then\n   closed and the SRHDSP session is considered open.\n"
- title: 5.3.3.3. Secure Reliable Datagram Transport
  contents:
  - "5.3.3.3. Secure Reliable Datagram Transport\n   Application, and subsequent session\
    \ management messages use symmetric\n   signaling.  That is, the signaling is\
    \ the same whether the client is\n   sending a message or the server is sending\
    \ a message.\n   The message packets are transmitted securely.  The protocol corrects\n\
    \   for lost, duplicated and out of sequence packets.\n"
- title: 5.3.3.4. Session closure
  contents:
  - "5.3.3.4. Session closure\n   The client or server may close the session.\n  \
    \ A session is closed using a Close message including the next sequence\n   number,\
    \ and encrypted with the agreed key.\n   The receiver, on processing (as opposed\
    \ to receiving) a Close\n   message, should set a timer, when the timer expires\
    \ all details of\n   the session should be forgotten.  The timer is to allow for\n\
    \   retransmission of the close if the Ack gets lost, we still need to be\n  \
    \ able to decrypt the subsequent retransmission and re-acknowledgment.\n   If\
    \ any message other than a close is received after a close is\n   processed, it\
    \ is ignored.\n"
- title: 6. Telia/Nortel's Implementation
  contents:
  - '6. Telia/Nortel''s Implementation

    '
- title: 6.1. Overview
  contents:
  - "6.1. Overview\n   The system implemented by Telia in cooperation with Nortel\
    \ Networks\n   is designed to support services that execute before the end-to-end\n\
    \   media sessions are established.  These services include, for example:\n  \
    \ - call transfer and number portability for redirecting calls\n   - call waiting\
    \ and call offering for announcing a pending call\n   - call screening and don't\
    \ disturb for filtering incoming calls\n   - automatic call distribution and 800-services\
    \ for selecting\n     termination point\n   The Telia/Nortel system aims to allow\
    \ service providers to develop\n   the services mentioned above.  Presently, prototypes\
    \ for online\n   incoming call disposition and automatic incoming call disposition\n\
    \   (described in Section 2) have been developed to prove the concept.\n   In\
    \ the Telia/Nortel architecture, services run on top of SIP Redirect\n   Servers.\
    \  The distributed nature of SIP enables these servers to be\n   hosted, for example,\
    \ by an enterprise server, a Service Provider's\n   server cluster, a user's desktop\
    \ PC, or even by a hand-held cordless\n   device.\n   The SIP Redirect Server\
    \ receives a SIP INVITE message for each call\n   regardless of which network\
    \ the call is being set up in.  The server\n   MAY apply any kind of service logic\
    \ in order to decide on how to\n   respond to the invitation.  Service logic may\
    \ interact with the user\n   to allow the user to specify how to handle a call\
    \ such as described\n   in Section 2.  This, however, is not the focus of the\
    \ Telia/Nortel\n   system.\n"
- title: 6.2. Architecture and Protocols
  contents:
  - "6.2. Architecture and Protocols\n   The general idea behind the architecture\
    \ is to create services as if\n   all communication was based on IP and all clients\
    \ and servers were\n   SIP enabled.  This of cause is not true in existing\n \
    \  telecommunications networks.  Hence, a new type of network element,\n   the\
    \ Service Control Gateways (SCG) hides the true situation from the\n   services.\n\
    \   SCGs convert network-specific call control signaling to SIP messages\n   and\
    \ vice versa.  A SCG behaves as a regular SIP User Agent (UA)\n   towards the\
    \ services and as a network-specific service control node\n   in the network where\
    \ the call is being set up.  For example, when\n   connecting to a GSM network,\
    \ the SCG can play the role of an SCP or a\n   MAP or an ISUP proxy.  The specific\
    \ role depends on what service\n   triggers are being used in the GSM network.\n\
    \   SCGs handle protocol conversions but not address translation, such as\n  \
    \ telephone number to SIP URL, which is handled by a regular SIP Server\n   to\
    \ keep the SCG as simple as possible.\n   Consider a service example of number\
    \ portability.  A conventional\n   number portability implementation in a mobile\
    \ Circuit Switched\n   Network (CSN) uses INAP messages to carry number queries\
    \ to a\n   network-internal data base application.  Here, a SCG and a high-\n\
    \   performance SIP Redirect Server, referred to as the Number Server\n   (NS),\
    \ have replaced the data base typically located in an SCP.  (See\n   Figure 11.)\n\
    \   +-----------+  INAP  +-----+  SIP  +--------------------------+\n   |  CSN\
    \ node |--------| SCG |-------| NS (SIP Redirect Server) |\n   +-----------+ \
    \       +-----+       +--------------------------+\n             Figure 11: An\
    \ Architecture for Number Portability\n   The INAP IDP message that carries the\
    \ number query is converted to a\n   SIP INVITE message by the SCG and is then\
    \ forwarded to the NS (SIP\n   Redirect Server).\n   If the called number is not\
    \ registered, then the NS will return \"404\n   Not Found\".  The SCG interprets\
    \ this as \"non ported number\" and\n   returns a CON message to the CSN network,\
    \ making it connect the call\n   to the called number.\n   If the number is ported\
    \ and hence registered, then the NS will return\n   \"301 Moved Permanently\"\
    \ with a TEL URL (routing number) in the\n   contact field.  The SCG then returns\
    \ a CON message to the CSN\n   network, making it connect the call to the number\
    \ that was conveyed\n   in the contact field.\n   The solution above enables the\
    \ same Number Server to provide Number\n   Portability to multiple networks by\
    \ means of using multiple SCGs.\n   If we make the SIP server in the number portability\
    \ example operate\n   in proxy mode for selected numbers, then it will become\
    \ a kind of\n   service router, able to relay number queries to any SIP-Redirect-\n\
    \   Server-based service anywhere, provided there is an IP connection to\n   the\
    \ host in concern. Figure 12 shows the arrangement.\n   +------+ INAP +-----+\
    \ SIP +----------------+ SIP +----------+\n   |  CSN |------| SCG |-----|    \
    \   NS       |-----| Service  |\n   | node |      |     |     |(redirect/proxy)|\
    \     |(redirect)|\n   +------+      +-----+     +----------------+     +----------+\n\
    \             Figure 12: SIP-Based Service Router\n   Suppose that we connect\
    \ a value-added service, such as a Personal\n   Call Filtering service hosted\
    \ by a user's desktop PC, to a certain\n   telephone number.  The INAP IDP message\
    \ is converted to a SIP INVITE\n   message by the SCG and is then forwarded to\
    \ the NS, just as in the\n   previous example.  However, in this case, the number\
    \ is registered\n   with a reference to a SIP URL.  This makes the Number Server\
    \ proxy\n   the SIP INVITE message to the registered URL, which is the address\
    \ of\n   the service.\n   The service responds as a SIP Redirect Server and the\
    \ Personal Call\n   Filtering service logic determines the response.  The NS sends\
    \ the\n   response back to the SCG which converts the response to an\n   appropriate\
    \ INAP message.  The response from the service is typically\n   \"302 Moved Temporarily\"\
    \ with a telephone number in the Contact field.\n   If the response is 301 or\
    \ 302, as the examples above suggest, then a\n   telephone number is carried in\
    \ the contact field.  If the user can be\n   reached via several different addresses,\
    \ then all of them SHOULD be\n   added to the response by means of multiple contact\
    \ fields.  The SCG\n   then selects an address that is valid for the node or application\n\
    \   that issued the number query.\n   As illustrated by the service examples,\
    \ the Telia/Nortel system aims\n   to allow the introduction of multi-network\
    \ services without requiring\n   multi-protocol support.  The services hence operate\
    \ in the same way\n   regardless of in which network the call is made and common\
    \ IP\n   services can be shared across heterogeneous networks.\n   +-----------+\
    \   +-------+ SIP +----+    ......  SIP +-----------+\n   | Network 1 |---| SCG\
    \ 1 |-----|    |---:      :-----| Service A |\n   +-----------+   +-------+  \
    \   |    |   :      :     +-----------+\n                                 |  \
    \  |   :      :\n   +-----------+   +-------+ SIP |    |   :      : SIP +-----------+\n\
    \   | Network 2 |---| SCG 2 |-----| NS |---:      :-----| Service B |\n   +-----------+\
    \   +-------+     |    |   : Any  :     +-----------+\n                      \
    \           |    |   :  IP  :\n   +-----------+   +-------+ SIP |    |   : net-\
    \ : SIP +-----------+\n   | Network n |---| SCG n |-----|    |---: work :-----|\
    \ Service C |\n   +-----------+   +-------+     +----+   :      :     +-----------+\n\
    \                                          :      :\n   +--------+           \
    \     SIP          :      : SIP +-----------+\n   | SIP UA |-----------------------------:\
    \      :-----| Service x |\n   +--------+                             '......'\
    \     +-----------+\n   Figure 13: Interconnecting Heterogeneous Networks via\
    \ SIP\n"
- title: 6.3. Security
  contents:
  - "6.3. Security\n   The Telia/Nortel architecture uses security mechanisms available\
    \ to\n   ordinary SIP services, implemented as they would be in a pure SIP\n \
    \  network.  The architecture described here does not impose any\n   additional\
    \ security considerations.\n   General security issues that must be considered\
    \ include\n   interconnection of two different networks.  SCGs must therefore\n\
    \   include mechanisms that prevent destructive service control signaling\n  \
    \ from one network to the other.  For example, a firewall-type\n   mechanism that\
    \ can block a denial-of- service attack from an Internet\n   user toward the PSTN.\n"
- title: 7. Security Considerations
  contents:
  - "7. Security Considerations\n   Overall, the SPIRITS security requirements are\
    \ essentially the same\n   as those for PINT [3, 4], which include, for example:\n\
    \      + Protection of the PSTN from attacks from the Internet.\n      + Peer\
    \ entity authentication to allow a communicating entity to\n      prove its identity\
    \ to another in the network.\n      + Authorization and access control to verify\
    \ if a network entity\n      is allowed to use a network resource.\n      + Confidentiality\
    \ to avoid disclosure of information (e.g., the\n      end user profile information\
    \ and data) without the permission of\n      its owner.\n      + Non-repudiation\
    \ to account for all operations in case of doubt\n      or dispute.\n   As seen\
    \ in the previous sections, most implementations examined in\n   this document\
    \ have employed means (e.g., firewalls and encryption) to\n   meet these requirements.\
    \  The means are, however, different from\n   implementation to implementation.\n"
- title: 8. Conclusion
  contents:
  - "8. Conclusion\n   This document has provided information relevant to the development\
    \ of\n   inter-networking interfaces between the PSTN and Internet for\n   supporting\
    \ SPIRITS services.  Specifically, it described four\n   existing implementations\
    \ of SPIRITS-like services.  Surveying these\n   implementations, we can make\
    \ the following observations:\n   o  The ICW service plays the role of a benchmark\
    \ service.  All four\n      implementations can support ICW, with three specifically\
    \ designed\n      for it.\n   o  SIP is used in most of the implementations as\
    \ the based\n      communications protocol between the PSTN and Internet.  (NEC's\n\
    \      implementation is the only exception that uses a proprietary\n      protocol.\
    \  Nevertheless, NEC has a plan to support SIP together\n      with the extensions\
    \ for SPIRITS services.)\n   o  All implementations use IN-based solutions for\
    \ the PSTN part.\n   It is clear that not all pre-SPIRITS implementations inter-operate\n\
    \   with each other.  It is also clear that not all SIP-based\n   implementations\
    \ inter-operate with each other given that they do not\n   support the same version\
    \ of SIP.  It is a task of the SPIRITS Working\n   Group to define the inter-networking\
    \ interfaces that will support\n   inter-operation of the future implementations\
    \ of SPIRITS services.\n"
- title: 9. References
  contents:
  - "9. References\n   [1] Petrack, S. and L. Conroy, \"The PINT Service Protocol:\
    \ Extensions\n       to SIP and SDP for IP Access to Telephone Call Services\"\
    , RFC\n       2848, June 2000.\n   [2] Handley, H., Schulzrinne, H., Schooler,\
    \ E. and J. Rosenberg,\n       \"SIP:  Session Initiation Protocol\", RFC 2543,\
    \ March 1999.\n   [3] Lu, H. (Ed.), Krishnaswamy, M., Conroy, L., Bellovin, S.,\
    \ Burg,\n       F., DeSimone, A., Tewani, F., Davidson, D., Schulzrinne, H. and\n\
    \       K. Vishwanathan, \"Toward the PSTN/Internet Inter-Networking--\n     \
    \  Pre-PINT Implementations\", RFC 2458, November 1998.\n"
- title: 10. Authors' Addresses
  contents:
  - "10. Authors' Addresses\n   Igor Faynberg\n   Lucent Technologies\n   Room 4L-334\n\
    \   101 Crawfords Corner Road\n   Holmdel, NJ,  USA 07733-3030\n   Phone: +1 732\
    \ 949 0137\n   EMail: faynberg@lucent.com\n   Hui-Lan Lu\n   Lucent Technologies\n\
    \   Room 4L-317\n   101 Crawfords Corner Road\n   Holmdel, NJ,  USA 07733-3030\n\
    \   Phone: +1 732 949 0321\n   EMail: huilanlu@lucent.com\n   John Voelker\n \
    \  Lucent Technologies\n   Room 1A-417\n   263 Shuman Blvd PO Box 3050\n   Naperville,\
    \ IL,  USA 60566-7050\n   Phone: +1 630 713 5538\n   EMail: jvoelker@lucent.com\n\
    \   Mark Weissman\n   Lucent Technologies\n   Room NE406B\n   200 Lucent Lane\n\
    \   Cary, NC, USA 27511-6035\n   Phone: +1 919 463 3258\n   EMail: maw1@lucent.com\n\
    \   Weizhong Zhang\n   Lucent Technologies\n   Room 01-A5-17\n   2000 Regency\
    \ Parkway\n   Cary, NC,  USA 27511-8506\n   Phone: +1 919 380-6638\n   EMail:\
    \ wzz@lucent.com\n   Sung-Yurn Rhim\n   Korea Telecom\n   17 Woomyun-dong\n  \
    \ Seocho-gu, Seoul, Korea\n   Phone: +82 2 526 6172\n   EMail: syrhim@kt.co.kr\n\
    \   Jinkyung Hwang\n   Korea Telecom\n   17 Woomyun-dong\n   Seocho-gu, Seoul,\
    \ Korea\n   Phone: +82 2 526 6830\n   EMail: jkhwang@kt.co.kr\n   Shinji. Ago\n\
    \   NEC Corporation\n   1131, Hinode, Abiko,\n   Chiba, 270-1198, Japan\n   Phone:\
    \ +81 471 85 7412\n   EMail: ago@ssf.abk.nec.co.jp\n   S. Moeenuddin\n   NEC America,\
    \ Inc\n   1525 Walnut Hill Lane,\n   Irving, TX,  USA 75038\n   Phone: +1 972\
    \ 518 5102\n   EMail: moeen@asl.dl.nec.com\n   S. Hadvani\n   NEC America, Inc\n\
    \   1525 Walnut Hill Lane,\n   Irving, TX,  USA 75038\n   Phone: +1 972 518 3628\n\
    \   EMail: hadvani@asl.dl.nec.com\n   Soren Nyckelgard\n   Telia Research\n  \
    \ Chalmers Teknikpark\n   41288 Gothenburg\n   Sweden\n   EMail: soren.m.nyckelgard@telia.se\n\
    \   John Yoakum\n   Nortel Networks\n   507 Airport Blvd, Suite 115,\n   Morrisville,\
    \ NC, USA  27560\n   EMail: yoakum@nortelnetworks.com\n   Lewis Robart\n   Nortel\
    \ Networks\n   P.O. Box 402\n   Ogdensburg, NY, USA  13669\n   EMail: robart@nortelnetworks.com\n"
- title: 11. Full Copyright Statement
  contents:
  - "11. Full Copyright Statement\n   Copyright (C) The Internet Society (2000). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
