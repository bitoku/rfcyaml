- title: __initial_text__
  contents:
  - '        Using Microsoft Word to create Internet Drafts and RFCs

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2002).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes the steps to configure the Microsoft Word\n\
    \   application to produce documents in Internet Draft and RFC format.\n"
- title: Table of Contents
  contents:
  - 'Table of Contents

    '
- title: 1. Overview
  contents:
  - "1. Overview\n   This document describes the steps to create a Microsoft Word\
    \ 97 or\n   later template to assist those producing Internet drafts.  The\n \
    \  resulting configuration allows for simple WYSIWYG editing of drafts\n   and\
    \ RFCs while producing output that is in accordance with IETF draft\n   and RFC\
    \ submission specifications.  (72 Characters per line, 58 lines\n   per page,\
    \ each line terminated by a CRLF, and each page followed by a\n   LF, etc.)  Using\
    \ Word's text justification and table capabilities may\n   facilitate creating\
    \ ASCII stick drawings.\n   While the authors happen to have been employed by\
    \ Microsoft during\n   much of this document's evolution, it is not a product\
    \ of Microsoft\n   and is unsupported.\n   Included is a detailed description\
    \ of how the RFC Text and RFC\n   Heading styles are defined.  This should prove\
    \ useful to those\n   wishing to do further customization work or to create a\
    \ similar\n   template for other versions of Microsoft Word.\n   It also includes\
    \ a description and the source of the CRLF.EXE program\n   that is used to create\
    \ the final text file output.  Feedback about\n   this program is consistent with\
    \ the fact that each version of Windows\n   has a slightly different Generic Printer\
    \ driver.  Since this document\n   will not be kept current with every Windows\
    \ revision, the code sample\n   is provided as a basis for personal customizations.\n\
    \   Copies of the template in Microsoft Word format and the CRLF.EXE\n   program\
    \ can be found at:\n   ftp://ftp.ietf.org/internet-drafts/2-Word.template.rtf\n\
    \   ftp://ftp.ietf.org/internet-drafts/crlf.exe\n   ftp://ftp.rfc-editor.org/in-notes/rfc-editor/2-Word.template.rtf\n\
    \   ftp://ftp.rfc-editor.org/in-notes/rfc-editor/crlf.exe\n   While the process\
    \ described in this document can be used to create\n   Word format documents,\
    \ using the editions of Microsoft Word for\n   Windows or the Apple Macintosh,\
    \ the actual text format file for\n   submission to the I-D or RFC editors is\
    \ only available from the\n   Windows edition.  This limitation is due to the\
    \ lack of a Generic\n   Printer driver for the Macintosh.\n"
- title: 2. Conventions used in this document
  contents:
  - "2. Conventions used in this document\n   In this document the steps for walking\
    \ a pull-down tree are indented\n   on subsequent lines.  This allows abbreviation\
    \ rather than a barrage\n   of 'then click' or 'select' strings in a paragraph\
    \ form.  Example:\n         Help\n            About Microsoft Word\n"
- title: 3. Instructions for producing Internet drafts and RFCs
  contents:
  - "3. Instructions for producing Internet drafts and RFCs\n   1) Microsoft Word's\
    \ \"auto-formatting\" can result in some undesired\n      characters when creating\
    \ the IETF standardized format.  (I.e., it\n      will insert special characters\
    \ for quotation marks, add special\n      formatting when creating lists, etc,\
    \ which will appear as\n      unintelligible character sequences when displayed\
    \ by plain-text\n      readers.)  To avoid this, turn off \"auto formatting.\"\
    \n         Tools\n            Autocorrect\n      On the property pages, 'AutoFormat'\
    \ and 'AutoFormat As You Type',\n      turn off all of the auto formatting options.\
    \  If you forget, or\n      frequently switch between IETF format and not, typing\
    \ a ^Z after\n      each auto-format event will undo the formatting change.  This\
    \ of\n      course requires awareness of the event.\n   2) Two special styles\
    \ need to be defined: RFC Heading and RFC Text.\n      If you choose automatic\
    \ reference numbering or table of contents\n      (defined below), the style for\
    \ Endnote Reference, Endnote Text,\n      and TOC need to be modified.  The entire\
    \ draft must be written\n      using these styles for the spacing to come out\
    \ correctly.\n      This RFC has been produced using the styles & procedures defined\n\
    \      within.  You may follow the instructions below for creating the\n     \
    \ RFC Heading and RFC Text styles or simply acquire a copy of the MS\n      Word\
    \ (.rtf) file from one of the locations above, delete the body\n      text, insert\
    \ your rfc text and apply the styles to the body and\n      headers as appropriate.\n\
    \      *** Do not use bold, underlining, italics, etc., or you will lose\n   \
    \   the WYSIWYG editing feature since these settings affect the number\n     \
    \ of characters that can occur on a line.  When the resulting\n      Internet\
    \ draft is saved as plain text, all that formatting will be\n      lost anyway.\
    \ ***\n   3) Print the document to the Generic Text Printer, and save the\n  \
    \    output to file.  If you do not have the Generic Text Printer\n      driver\
    \ installed, install it from the Control Panel.  (Printers,\n      Add Printer,\
    \ local/My Computer, any LPT port (you will be printing\n      to a file), select\
    \ Generic, Generic/Text Only from the combo box).\n      When you print to a file,\
    \ a pop-up will ask for the file name.\n   4) Run the CRLF program in a DOS window\
    \ to automatically add carriage\n      returns.\n         Usage is CRLF <source>\
    \ <destination>\n      Where <source> is the name of the file produced by printing\
    \ to the\n      generic text printer, and <destination> is the name of the text\n\
    \      draft you are producing.  An example (where the files CRLF.EXE and\n  \
    \    draft-00.prn are in the C:/TEMP directory) would be:\n         cd c:/temp\n\
    \         crlf draft-00.prn draft-00.txt\n   5) Check to see if any non-ASCII\
    \ characters have slipped in by\n      viewing the document with a simple text\
    \ viewer.  The Unix program\n      'less'[1] will highlight non-ASCII characters.\
    \  If a non-Microsoft\n      operating systems is not available, the Notepad program\
    \ will\n      display and not-try to re-interpret any special characters.\n"
- title: 3.1 Defining Microsoft Word Page Layout and Styles
  contents:
  - "3.1 Defining Microsoft Word Page Layout and Styles\n   These are settings used\
    \ to define the RFC Text and RFC Heading\n   styles.  Note: the menu options to\
    \ set these are enclosed in\n   parenthesis and are listed for Microsoft Word\
    \ 97.  They may differ\n   slightly for other versions of Microsoft Word.\n  \
    \ 1) Set measurement units to points.\n      Tools\n         Options\n       \
    \     General\n               Measurement units = points\n   2) Set margins as\
    \ follows: (File, Page Setup, Margins)\n      Top:         24 pts\n      Bottom:\
    \      0 pts\n      Left:        0 pts\n      Right:       93.6 pts\n      Gutter:\
    \      0 pts\n      Header:      0 pts\n      Footer:      0 pts\n   The right\
    \ margin is what determines 72 characters per line.  Using 12\n   pt font, 10\
    \ chars/inch, 72 chars = 7.2\".  Using paper that is 8.5\"\n   wide.  8.5\" -\
    \ 7.2\" = 1.3\" = 93.6 pts   If you get \"one or more\n   margins are outside\
    \ the printable area\" message, select Ignore.  This\n   seems to depend on the\
    \ printer you currently have selected.\n   3) Set paper size as follows:\n   \
    \   File\n         Page Setup\n            Paper Size\n               Width: \
    \ 612 pt (8.5\")\n               Height: 660 pt (12pt * 55 lines per page)\n \
    \  The height of the paper is what determines 55 lines per page.\n   4) Set headers/footers\
    \ to be different for the first page.\n      File\n         Page Setup\n     \
    \       Layout\n   5) Define a RFC Heading Style.\n      Format\n         Style\n\
    \            New\n   RFC Heading: Heading1 + Font:  Courier New, 12pt, Not Bold,\
    \ Line\n   spacing exactly 12pt., Space before 0 pt after 0 pt, Level 1\n   NOTE:\
    \ Line Spacing Exactly 12pt is very important.  Set this through\n   Format: Paragraph\n\
    \   Additional Heading levels can be defined by repeating this step and\n   incrementing\
    \ the Level #.  If Numbered Headings are desired:\n      Format\n         Bullets\
    \ and Numbering\n            Outline Numbered\n               Select preferred\
    \ style\n               Customize\n                  More\n                  \
    \   Link level to style RFC Heading\n   6) Define a RFC Text Style.\n      Format\n\
    \         Style\n            New\n   RFC Text: Normal+Font: Courier New, 12pt,\
    \ Indent: Left 21.6pt, Line\n   Spacing Exactly 12 pt.\n   Line Spacing and indent\
    \ are set through Format, Paragraph.  This\n   leaves a 3 character left indent\
    \ for the RFC text\n   7) Fix the Header Style.\n      Format\n         Style\n\
    \            Header\n   Header:  Normal+Font: Courier New, 12pt, Line Spacing\
    \ Exactly 12pt,\n   Clear the tabs previously defined, and add Tabs 252 pt Centered,\
    \ 504\n   pt Right Flush\n   8) Fix the Footer Style.\n      Format\n        \
    \ Style\n            Footer\n   Footer:  Normal+Font: Courier New, 12pt, Line\
    \ Spacing Exactly 12pt,\n   Tabs 252 pt Centered, 504 pt Right Flush\n   9) Define\
    \ your headers and footers for the first page.\n      View\n         Headers\n\
    \         (  on first page)\n      Header: No Header\n      Footer:  Blank line\n\
    \               Blank line\n      AuthorName <tab> <tab> [Page <page number field>]\n\
    \   10) Define subsequent headers and footers.\n      View\n         Headers\n\
    \            (on second page)\n      Header: <tab> Title <tab> Month, Year\n \
    \              Blank line\n               Blank line\n      Footer:  Blank line\n\
    \               Blank line\n      AuthorName <tab> Expiration <tab> [Page <page\
    \ number field>]\n   11) Set Tabs to be every three spaces.\n      Format\n  \
    \       Style\n            RFC Text\n               Tabs: Left 21.6, 43.2, 64.8,\
    \ 86.4, 108, 129.6,\n               151.2,172.8, 194.4, 216, 237.6, 259.2, 280.8,\n\
    \               302.4, 324, 345.6,367.2, 388.8, 410.4, 432,\n               453.6,\
    \ 475.2, 496.8\n   12) Fix the Table-of-contents Styles.  Repeat for each level.\n\
    \      Format\n         Style\n               TOC1: RFC text +, Automatically\
    \ update, Clear all tabs,\n                  Add tab Rt. Flush, 504pt, ... leader\n\
    \               TOC2: RFC text + Indent: Left 43.2pt,\n                  Automatically\
    \ update, Clear all tabs,\n                  Add tab Rt. Flush, 504pt, ... leader\n\
    \               TOC3: RFC text + Indent: Left 64.8pt,\n                  Automatically\
    \ update, Clear all tabs,\n                  Add tab Rt. Flush, 504pt, ... leader\n"
- title: 3.2 Positioning the document identifiers on the first page
  contents:
  - "3.2 Positioning the document identifiers on the first page\n   The 'Table' tool\
    \ can be used to assist with justification of the\n   document identifiers on\
    \ the first page.  Each cell in the table\n   maintains its own justification\
    \ characteristics, so getting left and\n   right justification on the same line\
    \ is simplified.  On the Toolbar\n   select the icon that looks like a grid with\
    \ a dark bar across the\n   top.  This will pop-up a table array.  Drag the mouse\
    \ across to\n   select the number of rows and columns (for the opening header\
    \ 4 rows\n   x 2 columns, unless there are several authors).  Select the table\n\
    \   that was just inserted by click-and-hold in the left margin, and then\n  \
    \ clear the boarders.\n      Format\n         Borders and Shading\n          \
    \  None\n   Select the cells on the right (position the cursor just above the\
    \ top\n   cell, when the cursor becomes an arrow pointing down, click) and set\n\
    \   justification right.  (The default is to take justification from the\n   line\
    \ it is being positioned on, so the left column shouldn't need\n   changing.)\n\
    \      Format\n         Paragraph\n            Right\n   If necessary, move the\
    \ center divider to the right for the document\n   title.  Select the left column\
    \ of cells, then position the cursor\n   over the dividing line.  When it changes\
    \ to parallel bars with\n   right/left arrows, click-and-hold, then drag the line\
    \ as necessary.\n"
- title: 3.3 Automatic date
  contents:
  - "3.3 Automatic date\n   For those who frequently update drafts, and find they\
    \ occasionally\n   forget to update the current save and expire dates, there is\
    \ a way to\n   automate those fields.  While it is rather complex to set up the\n\
    \   expire-month field, it only needs to be done once in a template file,\n  \
    \ and all future drafts benefit.\n   To automatically set the current date on\
    \ save, select the lower right\n   cell in the table created above, and insert\
    \ the save date.\n      Insert\n         Field\n            Date and Time\n  \
    \             SaveDate\n               In the box below the sample \"field codes\"\
    ,\n                  modify as necessary to make it look like:\n             \
    \     - SAVEDATE \\@ \"MMMM YYYY\" - (between the -'s).\n               OK\n \
    \  The field will have a gray background on the screen, but will not\n   affect\
    \ the printed version.  Double click on the field, copy, and\n   then replace\
    \ the Month, Year in the header (10 in Layout Styles\n   above) with a paste.\n\
    \   Setting up the expire-date is similar, but requires inserting nested\n   fields.\
    \  Select the location for the month then insert an IF field.\n      Insert\n\
    \         Field\n            MailMerge\n               IF\n               OK\n\
    \   This will result in an error.  Right click on the error message, and\n   select\
    \ Toggle Field Codes.  This will allow further editing.  Select\n   the space\
    \ after the initial IF, then insert another field: SaveDate\n   (as above but\
    \ this time only the month digit is used \"M\").  Right\n   click on the number\
    \ it inserts and Toggle Field Codes again.  Follow\n   the right brace } with\
    \ =, then the month to test, followed by the\n   month name 6 months later.  At\
    \ this point loop and insert another IF,\n   until all 12 are done.  Follow the\
    \ last one with a \"\" to complete the\n   syntax.  The resulting expanded field\
    \ code will look like:\n   { IF { SAVEDATE  \\@ \"M\" \\* MERGEFORMAT } = 1 July\
    \ { IF { SAVEDATE  \\@\n   \"M\" \\* MERGEFORMAT } = 2 August { IF { SAVEDATE\
    \  \\@ \"M\" \\*\n   MERGEFORMAT } = 3 September { IF { SAVEDATE  \\@ \"M\" \\\
    * MERGEFORMAT} =\n   4 October { IF { SAVEDATE  \\@ \"M\" \\* MERGEFORMAT } =\
    \ 5 November { IF\n   { SAVEDATE  \\@ \"M\" \\* MERGEFORMAT } = 6 December { IF\
    \ { SAVEDATE  \\@\n   \"M\" \\* MERGEFORMAT } = 7 January { IF { SAVEDATE  \\\
    @ \"M\" \\*\n   MERGEFORMAT } = 8 February { IF { SAVEDATE  \\@ \"M\" \\* MERGEFORMAT\
    \ } =\n   9 March { IF { SAVEDATE  \\@ \"M\" \\* MERGEFORMAT } = 10 April { IF\
    \ {\n   SAVEDATE  \\@ \"M\" \\* MERGEFORMAT } = 11 May { IF { SAVEDATE  \\@ \"\
    M\" \\*\n   MERGEFORMAT } = 12 June \"\" \\* MERGEFORMAT } \\* MERGEFORMAT } \\\
    *\n   MERGEFORMAT } \\* MERGEFORMAT } \\* MERGEFORMAT } \\* MERGEFORMAT } \\*\n\
    \   MERGEFORMAT } \\* MERGEFORMAT } \\* MERGEFORMAT } \\* MERGEFORMAT } \\*\n\
    \   MERGEFORMAT } \\* MERGEFORMAT }\n   Space over and set the expire-year with\
    \ a field in a similar manner.\n   This time there are only 2 IF fields, comparing\
    \ halves of the year.\n   The printed value on true will be the SaveDate year\
    \ value and the\n   expanded result will look like:\n   { IF { SAVEDATE \\@ \"\
    M\" \\* MERGEFORMAT } < 7 { SAVEDATE \\@ \"YYYY\" \\*\n   MERGEFORMAT } { IF {\
    \ SAVEDATE \\@ \"M\" \\* MERGEFORMAT } > 6 { = {\n   SAVEDATE \\@ \"YYYY\" \\\
    * MERGEFORMAT } + 1 \\*MERGEFORMAT } \"\" \\*\n   MERGEFORMAT }\n   Revert the\
    \ field codes to normal text by right click, Toggle Field\n   Codes or Update\
    \ Field.  Select both of these fields by clicking on\n   one, then shift click\
    \ on the other.  Copy, then paste in the footer\n   (9 & 10 in Layout Styles above),\
    \ replacing the Month, Year.\n"
- title: 3.4 Automatic reference numbering
  contents:
  - "3.4 Automatic reference numbering\n   To support automatic updates of reference\
    \ numbers, make the following\n   changes.  (Requires the document to be a single\
    \ section prior to the\n   Reference heading.)\n   1) Insert a section break on\
    \ the line after Reference heading.\n      Insert\n         Break\n          \
    \  Section Break\n               Continuous\n   2) Format the style of the Endnote\
    \ References and Text.\n      Format\n         Style\n            Endnote reference\n\
    \            Modify\n               Based on 'underlying paragraph'\n        \
    \       Format Font\n               clear the check box for 'superscript'\n  \
    \          Endnote text\n            Modify\n               Based on 'RFC text'\n\
    \               Format Paragraph\n               Indentation\n               \
    \   Left    21.6\n               Special\n                  Hanging 21.6\n   3)\
    \ Set up the location of the references, and number style.\n      Insert\n   \
    \      Footnote\n            Endnote\n            Autonumber\n            Options\n\
    \               Place at 'End of section'\n               Numeric style '1,2,3'\n\
    \   4) Select the location for the first reference.  Between the user\n   typed\
    \ [ ] characters, insert an endnote.\n      Insert\n         Footnote (endnote\
    \ will already be selected,\n             as will auto 1,2,3)\n         OK\n \
    \  When the endnote is inserted, the lower pane will appear.  Type in\n   the\
    \ text describing the reference.  The first time a reference is\n   inserted,\
    \ the Endnote Separator should be cleared (the continuation\n   separator may\
    \ need it as well).  Find the pull down, just above the\n   reference text, and\
    \ change it to each of the options to make sure all\n   but the 'All Endnotes'\
    \ are cleared.\n      Endnote Separator\n         Select and delete any text\n\
    \   The reference number in the text and the endnote table will\n   automatically\
    \ track as changes are made.  If the endnote window is\n   closed and changes\
    \ need to be made, select:\n      View\n         Footnotes\n   To automatically\
    \ add updated cross-references for previous footnotes,\n   select the location\
    \ of the cross-reference.  Between the user typed\n   [ ] characters insert a\
    \ cross-reference.\n      Insert\n         Cross-reference\n            Select\
    \ reference type 'endnote'\n            Clear the checkbox for 'Insert as hyperlink'\n\
    \            Select the reference from the endnote list\n            Insert\n"
- title: '4. Final fixup: the CRLF program'
  contents:
  - "4. Final fixup: the CRLF program\n   Each line needs to be terminated by a CRLF,\
    \ but when printing your\n   document to the Generic Text Printer driver, some\
    \ blank lines will be\n   terminated only with a line feed.  Consider a traditional\
    \ text line\n   printer, printing a line of text, followed by 3 blank lines. \
    \ The\n   output would look as follows:\n   Line of Text<CR><LF><LF><LF>.\n  \
    \ This was done because there was no need to move the print carriage\n   head\
    \ for the blank lines, only line feeds were necessary.\n   The following example\
    \ provides the source for a CRLF fixup program.\n   /***************************************************************\n\
    \    * CRLF.C - Sample source code to format documents produced by\n    * the\
    \ MS Word IETF template so that they comply to IETF draft\n    * and RFC guidelines\n\
    \    * Change CR/FF ; FF/CR/LF ; FF/LF ; CR/FF/CR/LF  into CR/LF/FF\n    ***************************************************************/\n\
    \      #include <stdio.h>\n      #include <io.h>\n      #include <fcntl.h>\n \
    \     #include <sys/types.h>\n      #include <sys/stat.h>\n      #include <memory.h>\n\
    \      #include <string.h>\n      #include <stdlib.h>\n      #define CR 13\n \
    \     #define LF 10\n      #define FF 12\n      #define TRUE 1\n      #define\
    \ FALSE 0\n      typedef int BOOL;\n      int main(int argc, char *argv[])\n \
    \     {\n           int fSrc, fDest;\n           int iNumBytesRead;\n        \
    \   int iNumLines;\n           char cr = CR;\n           char lf = LF;\n     \
    \      char ff = FF;\n           unsigned char buff[3];\n           BOOL bPrecedingCR\
    \ = FALSE;\n           BOOL bPrecedingLF = FALSE;\n           BOOL bPrecedingFF\
    \ = FALSE;\n           if(argc != 3)\n           {\n                   printf(\"\
    Usage:\\n\\n\");\n                   printf(\"    crlf <srcfile> <dstfile>\\n\\\
    n\");\n                   return 0;\n           }\n      fSrc = open(argv[1],\
    \ O_RDONLY | O_BINARY);\n      fDest = open(argv[2], O_CREAT | O_RDWR | O_BINARY\
    \ |\n         O_TRUNC, S_IREAD | S_IWRITE);\n      if(fSrc == -1)\n      {\n \
    \        printf(\"Could not open file (%s) for reading.\\n\",\n              \
    \    argv[1]);\n               printf( strerror(errno));\n                   return\
    \ 0;\n           }\n           if(fDest == -1)\n           {\n               \
    \    printf(\"Count not open file (%s) for writing.\\n\",\n                  argv[2]);\n\
    \               printf( strerror(errno));\n                   return 0;\n    \
    \       }\n           // Using the MS Word with the generic text printer, an\n\
    \           // extra CR LF starts the file.  Skip over these first 2\n       \
    \    // bytes,\n           iNumBytesRead = _read(fSrc, buff, 2);\n         bPrecedingCR\
    \ = FALSE;\n         bPrecedingLF = TRUE;\n         bPrecedingFF = FALSE;\n  \
    \       iNumLines = 0;\n           // Prepare to parse through the file\n    \
    \       iNumBytesRead = _read(fSrc, buff, 1);\n           while(iNumBytesRead\
    \ > 0)\n           {\n            if (buff[0] == FF)\n            {\n        \
    \       // Found FF\n               if (bPrecedingCR == TRUE)\n              \
    \ {\n                  // Some drivers write CR/FF w/o LF\n                  //\
    \ Insert LF between\n                  _write(fDest, &lf, 1);\n              \
    \    _write(fDest, &(buff[0]), 1);\n               }\n               else if (bPrecedingLF\
    \ == TRUE)\n               {\n                  // If driver writes LF/FF, assume\
    \ preceding CR\n               }\n               else if (bPrecedingFF == TRUE)\n\
    \               {\n                  // If we just set FF from line count, ignore\
    \ this\n                  // one\n               }\n               else if (bPrecedingLF\
    \ == FALSE && bPrecedingCR == FALSE)\n               {\n                  // Some\
    \ drivers write FF alone ; insert CR/LF\n                  // for RFC rule of\
    \ FF on line by itself\n                  _write(fDest, &cr, 1);\n           \
    \       _write(fDest, &lf, 1);\n                  _write(fDest, &(buff[0]), 1);\n\
    \               }\n               // reset flags\n               bPrecedingFF\
    \ = TRUE;\n               bPrecedingCR = FALSE;\n               bPrecedingLF =\
    \ FALSE;\n               iNumLines = 0;\n            }\n            else if (buff[0]\
    \ == CR)\n            {\n               // Found CR\n               if (bPrecedingFF\
    \ == TRUE)\n               {\n                  // Some drivers write CR/FF/CR/LF\n\
    \                  // ignore second CR/LF as it creates a 59th line\n        \
    \       }\n               else\n               {\n                  // This CR\
    \ counts\n                  bPrecedingCR = TRUE;\n                  bPrecedingLF\
    \ = FALSE;\n                  bPrecedingFF = FALSE;\n                  if (++iNumLines\
    \ < 59)\n                  {\n                     // Not end of page write it\
    \ out\n                     _write(fDest, &(buff[0]), 1);\n                  }\n\
    \                  else\n                  {\n                     // Some drivers\
    \ write 66 lines per page as LF\n                     // write end of page & skip\
    \ to next CR in LF test\n                     _write(fDest, &cr, 1);\n       \
    \              _write(fDest, &lf, 1);\n                     _write(fDest, &ff,\
    \ 1);\n                     bPrecedingFF = TRUE;\n                     bPrecedingCR\
    \ = FALSE;\n                     bPrecedingLF = FALSE;\n                     iNumLines\
    \ = 0;\n                  }\n               }\n            }\n            else\
    \ if (buff[0] == LF && bPrecedingFF == TRUE)\n            {\n               //\
    \ Ignore up LF to next CR\n            }\n            else if (buff[0] == LF &&\
    \ bPrecedingCR == TRUE)\n            {\n               // Found a LF after a preceding\
    \ CR\n               // write it out and reset flags\n               bPrecedingLF\
    \ = TRUE;\n               bPrecedingCR = FALSE;\n               bPrecedingFF =\
    \ FALSE;\n               _write(fDest, &(buff[0]), 1);\n            }\n      \
    \      else if (buff[0] == LF && bPrecedingCR == FALSE)\n            {\n     \
    \          // Found a LF without a preceding CR\n               if (bPrecedingLF\
    \ == TRUE)\n               {\n                  // Inject a CR to precede the\
    \ LF only\n                  // if still in the first col\n                  if\
    \ (++iNumLines < 59)\n                  {\n                     // Not end of\
    \ page write it out\n                     _write(fDest, &cr, 1);\n           \
    \          _write(fDest, &(buff[0]), 1);\n                     bPrecedingLF =\
    \ TRUE;\n                  }\n                  else\n                  {\n  \
    \                   // Driver writing longer than page\n                     //\
    \ write end of page & skip to next CR\n                     _write(fDest, &cr,\
    \ 1);\n                     _write(fDest, &lf, 1);\n                     _write(fDest,\
    \ &ff, 1);\n                     iNumLines = 0;\n                     bPrecedingFF\
    \ = TRUE;\n                     bPrecedingCR = FALSE;\n                     bPrecedingLF\
    \ = FALSE;\n                  }\n               }\n               else\n     \
    \          {\n                  //ignore the random LF and clear flag\n      \
    \            bPrecedingLF = FALSE;\n               }\n            }\n        \
    \    else\n            {\n               // Other text, write it out and clear\
    \ flags\n               bPrecedingCR = FALSE;\n               bPrecedingLF = FALSE;\n\
    \               bPrecedingFF = FALSE;\n               _write(fDest, &(buff[0]),\
    \ 1);\n            }\n            // Read next byte\n            iNumBytesRead\
    \ = _read(fSrc, &buff[0], 1);\n         }\n         _close(fSrc);\n         _close(fDest);\n\
    \         return 0;\n      }\n"
- title: 5. Known problems
  contents:
  - '5. Known problems

    '
- title: 5.1 Margins
  contents:
  - "5.1 Margins\n   During the development of this document there were reports that\
    \ some\n   version combinations of Windows and Word cut off characters on the\n\
    \   left.  One approach to resolve this is to set the left and right\n   margins\
    \ to 36 and 57.6, thus shifting the text right.  If text\n   clipping was not\
    \ a problem for the version combination, these values\n   produce leading spaces.\
    \  This doesn't affect the overall appearance,\n   but makes the file larger than\
    \ necessary, and violates the RFC line\n   length rule.  Adjustment of the margins\
    \ for any specific version\n   combination of Windows and Word will have to be\
    \ locally appropriate;\n   just make sure to move both in equal increments of\
    \ 12 to the point\n   where all characters appear.\n"
- title: 5.2 Printing
  contents:
  - "5.2 Printing\n   If you try to print the draft you are working on from within\n\
    \   Microsoft Word to an actual printer (not to a file using the Generic\n   Text\
    \ printer driver), you may receive an error message indicating the\n   margins\
    \ are outside of the printable area of the printer.   If you\n   continue printing,\
    \ the first 2 characters of each heading will be\n   truncated.  It is recommended\
    \ that you produce a printed copy of the\n   draft you are working on by using\
    \ the CRLF program to produce a text\n   file, and then redirect it to a printer\
    \ (so that you do not need to\n   deal with other programs like NOTEPAD, etc.\
    \ adding their own\n   margins.) Example:\n   -  Print to a file using the generic\
    \ text printer\n   -  CRLF draft.prn draft.txt\n   -  NET USE lpt1 <\\\\printername\\\
    sharename>\n   -  TYPE draft.txt > LPT1\n   As an alternative, if the final draft.txt\
    \ file is opened with Word,\n   setting all 4 margins to .65\" will position it\
    \ on the page.\n   File\n      Page Setup\n      Top    .65\n      Bottom .65\n\
    \      Left   .65\n      Right  .65\n"
- title: 5.3 The Underscore character
  contents:
  - "5.3 The Underscore character\n   If you use the underscore character \"_\" within\
    \ the RFC Text and RFC\n   Heading style, it will not be displayed on most screens.\
    \  (It appears\n   as a blank space.)  It will print correctly and will appear\
    \ as an\n   underscore character in the final draft output.\n"
- title: 6. Formal Syntax
  contents:
  - "6. Formal Syntax\n   The formal definition of RFC format is defined in RFC 2223\
    \ [2] and\n   Internet Draft instructions are available at [3].\n"
- title: 7. Security Considerations
  contents:
  - "7. Security Considerations\n   Caution is advised when opening any document that\
    \ may contain a macro\n   virus.  The template files originally provided to the\
    \ Internet-drafts\n   & RFC editors did not contain any macros, and unless tampered\
    \ with,\n   should not now.  If there are concerns about using the template doc\n\
    \   file, the instructions provided here will allow the creation of one\n   from\
    \ scratch.  Further details about Microsoft Word macro virus\n   concerns are\
    \ available at: http://www.microsoft.com/.  To find the\n   current documents,\
    \ search for 'macro virus'.\n"
- title: References
  contents:
  - "References\n   [1] http://www.greenwoodsoftware.com/less/\n   [2] Postel, J.\
    \ and J. Reynolds, \"Instructions to RFC Authors\", RFC\n       2223, October\
    \ 1997.\n   [3] http://www.ietf.org/ietf/1id-guidelines.txt\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The authors would like to acknowledge the comments from\
    \ around the\n   community in helping refine this document.  We would like to\
    \ give\n   particular recognition to DJ Son and Aaron Falk, of the RFC Editor\n\
    \   staff, for aligning the details of this document with the current RFC\n  \
    \ Editor process.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Mike Gahrns\n   Microsoft\n   One Microsoft Way\n   Redmond,\
    \ Wa. USA\n   Phone:  1-425-936-9833\n   EMail:  mikega@microsoft.com\n   Tony\
    \ Hain\n   Cisco\n   500 108th Ave\n   Bellevue, Wa. USA\n   Phone:  1-425-468-1061\n\
    \   EMail:  ahain@cisco.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2002).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
