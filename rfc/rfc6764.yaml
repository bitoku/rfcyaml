- title: __initial_text__
  contents:
  - "            Locating Services for Calendaring Extensions to\n        WebDAV (CalDAV)\
    \ and vCard Extensions to WebDAV (CardDAV)\n"
- title: Abstract
  contents:
  - "Abstract\n   This specification describes how DNS SRV records, DNS TXT records,\n\
    \   and well-known URIs can be used together or separately to locate\n   CalDAV\
    \ (Calendaring Extensions to Web Distributed Authoring and\n   Versioning (WebDAV))\
    \ or CardDAV (vCard Extensions to WebDAV)\n   services.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6764.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2013 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Conventions Used in This Document ...............................3\n  \
    \ 3. CalDAV SRV Service Labels .......................................3\n   4.\
    \ CalDAV and CardDAV Service TXT Records ..........................4\n   5. CalDAV\
    \ and CardDAV Service Well-Known URI .......................4\n      5.1. Example:\
    \ Well-Known URI Redirects to Actual\n           \"Context Path\" .............................................5\n\
    \   6. Client \"Bootstrapping\" Procedures ...............................5\n\
    \   7. Guidance for Service Providers ..................................8\n  \
    \ 8. Security Considerations .........................................9\n   9.\
    \ IANA Considerations .............................................9\n      9.1.\
    \ Well-Known URI Registrations ...............................9\n           9.1.1.\
    \ caldav Well-Known URI Registration .................10\n           9.1.2. carddav\
    \ Well-Known URI Registration ................10\n      9.2. Service Name Registrations\
    \ ................................10\n           9.2.1. caldav Service Name Registration\
    \ ...................10\n           9.2.2. caldavs Service Name Registration ..................11\n\
    \           9.2.3. carddav Service Name Registration ..................11\n  \
    \         9.2.4. carddavs Service Name Registration .................12\n   10.\
    \ Acknowledgments ...............................................12\n   11. References\
    \ ....................................................12\n      11.1. Normative\
    \ References .....................................12\n      11.2. Informative\
    \ References ...................................14\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   [RFC4791] defines the CalDAV calendar access protocol, based\
    \ on HTTP\n   [RFC2616], for accessing calendar data stored on a server.  CalDAV\n\
    \   clients need to be able to discover appropriate CalDAV servers within\n  \
    \ their local area network and at other domains, e.g., to minimize the\n   need\
    \ for end users to know specific details such as the fully\n   qualified domain\
    \ name (FQDN) and port number for their servers.\n   [RFC6352] defines the CardDAV\
    \ address book access protocol based on\n   HTTP [RFC2616], for accessing contact\
    \ data stored on a server.  As\n   with CalDAV, clients also need to be able to\
    \ discover CardDAV\n   servers.\n   [RFC2782] defines a DNS-based service discovery\
    \ protocol that has\n   been widely adopted as a means of locating particular\
    \ services within\n   a local area network and beyond, using DNS SRV Resource\
    \ Records\n   (RRs).  This has been enhanced to provide additional service meta-\n\
    \   data by use of DNS TXT RRs as per [RFC6763].\n   This specification defines\
    \ new SRV service types for the CalDAV\n   protocol and gives an example of how\
    \ clients can use this together\n   with other protocol features to enable simple\
    \ client configuration.\n   SRV service types for CardDAV are already defined\
    \ in Section 11 of\n   [RFC6352].\n   Another issue with CalDAV or CardDAV service\
    \ discovery is that the\n   service might not be located at the \"root\" URI of\
    \ the HTTP server\n   hosting it.  Thus, a client needs to be able to determine\
    \ the\n   complete path component of the Request-URI to use in HTTP requests:\n\
    \   the \"context path\".  For example, if CalDAV is implemented as a\n   \"servlet\"\
    \ in a web server \"container\", the servlet \"context path\"\n   might be \"\
    /caldav/\".  So the URI for the CalDAV service would be,\n   e.g., \"http://caldav.example.com/caldav/\"\
    \ rather than\n   \"http://caldav.example.com/\".  SRV RRs by themselves only\
    \ provide an\n   FQDN and port number for the service, not a path.  Since the\
    \ client\n   \"bootstrapping\" process requires initial access to the \"context\
    \ path\"\n   of the service, there needs to be a simple way for clients to also\n\
    \   discover what that path is.\n   This specification makes use of the \"well-known\
    \ URI\" feature\n   [RFC5785] of HTTP servers to provide a well-known URI for\
    \ CalDAV or\n   CardDAV services that clients can use.  The well-known URI will\
    \ point\n   to a resource on the server that is simply a \"stub\" resource that\n\
    \   provides a redirect to the actual \"context path\" resource\n   representing\
    \ the service endpoint.\n"
- title: 2.  Conventions Used in This Document
  contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 3.  CalDAV SRV Service Labels
  contents:
  - "3.  CalDAV SRV Service Labels\n   This specification adds two SRV service labels\
    \ for use with CalDAV:\n   _caldav:   Identifies a CalDAV server that uses HTTP\
    \ without\n      Transport Layer Security (TLS) [RFC2818].\n   _caldavs:  Identifies\
    \ a CalDAV server that uses HTTP with TLS\n      [RFC2818].\n   Clients MUST honor\
    \ Priority and Weight values in the SRV RRs, as\n   described by [RFC2782].\n\
    \   Example: service record for server without TLS\n       _caldav._tcp     SRV\
    \ 0 1 80 calendar.example.com.\n   Example: service record for server with TLS\n\
    \       _caldavs._tcp    SRV 0 1 443 calendar.example.com.\n"
- title: 4.  CalDAV and CardDAV Service TXT Records
  contents:
  - "4.  CalDAV and CardDAV Service TXT Records\n   When SRV RRs are used to advertise\
    \ CalDAV and CardDAV services, it is\n   also convenient to be able to specify\
    \ a \"context path\" in the DNS to\n   be retrieved at the same time.  To enable\
    \ that, this specification\n   uses a TXT RR that follows the syntax defined in\
    \ Section 6 of\n   [RFC6763] and defines a \"path\" key for use in that record.\
    \  The value\n   of the key MUST be the actual \"context path\" to the corresponding\n\
    \   service on the server.\n   A site might provide TXT records in addition to\
    \ SRV records for each\n   service.  When present, clients MUST use the \"path\"\
    \ value as the\n   \"context path\" for the service in HTTP requests.  When not\
    \ present,\n   clients use the \".well-known\" URI approach described next.\n\
    \   Example: text record for service with TLS\n       _caldavs._tcp    TXT path=/caldav\n"
- title: 5.  CalDAV and CardDAV Service Well-Known URI
  contents:
  - "5.  CalDAV and CardDAV Service Well-Known URI\n   Two \".well-known\" URIs are\
    \ registered by this specification for\n   CalDAV and CardDAV services, \"caldav\"\
    \ and \"carddav\" respectively (see\n   Section 9).  These URIs point to a resource\
    \ that the client can use\n   as the initial \"context path\" for the service\
    \ they are trying to\n   connect to.  The server MUST redirect HTTP requests for\
    \ that resource\n   to the actual \"context path\" using one of the available\
    \ mechanisms\n   provided by HTTP (e.g., using a 301, 303, or 307 response). \
    \ Clients\n   MUST handle HTTP redirects on the \".well-known\" URI.  Servers\
    \ MUST\n   NOT locate the actual CalDAV or CardDAV service endpoint at the\n \
    \  \".well-known\" URI as per Section 1.1 of [RFC5785].\n   Servers SHOULD set\
    \ an appropriate Cache-Control header value (as per\n   Section 14.9 of [RFC2616])\
    \ in the redirect response to ensure caching\n   occurs or does not occur as needed\
    \ or as required by the type of\n   response generated.  For example, if it is\
    \ anticipated that the\n   location of the redirect might change over time, then\
    \ a \"no-cache\"\n   value would be used.\n   To facilitate \"context paths\"\
    \ that might differ from user to user,\n   the server MAY require authentication\
    \ when a client tries to access\n   the \".well-known\" URI (i.e., the server\
    \ would return a 401 status\n   response to the unauthenticated request from the\
    \ client, then return\n   the redirect response only after a successful authentication\
    \ by the\n   client).\n"
- title: '5.1.  Example: Well-Known URI Redirects to Actual "Context Path"'
  contents:
  - "5.1.  Example: Well-Known URI Redirects to Actual \"Context Path\"\n   A CalDAV\
    \ server has a \"context path\" that is \"/servlet/caldav\".  The\n   client will\
    \ use \"/.well-known/caldav\" as the path for its\n   \"bootstrapping\" process\
    \ after it has first found the FQDN and port\n   number via an SRV lookup or via\
    \ manual entry of information by the\n   user, from which the client can parse\
    \ suitable information.  When the\n   client makes an HTTP request against \"\
    /.well-known/caldav\", the\n   server would issue an HTTP redirect response with\
    \ a Location response\n   header using the path \"/servlet/caldav\".  The client\
    \ would then\n   \"follow\" this redirect to the new resource and continue making\
    \ HTTP\n   requests there to complete its \"bootstrapping\" process.\n"
- title: 6.  Client "Bootstrapping" Procedures
  contents:
  - "6.  Client \"Bootstrapping\" Procedures\n   This section describes a procedure\
    \ that CalDAV or CardDAV clients\n   SHOULD use to do their initial configuration\
    \ based on minimal user\n   input.  The goal is to determine an http: or https:\
    \ URI that\n   describes the full path to the user's principal-URL [RFC3744].\n\
    \   1.  Processing user input:\n       *  For a CalDAV server:\n          +  Minimal\
    \ input from a user would consist of a calendar user\n             address and\
    \ a password.  A calendar user address is defined\n             by iCalendar [RFC5545]\
    \ to be a URI [RFC3986].  Provided a\n             user identifier and a domain\
    \ name can be extracted from the\n             URI, this simple \"bootstrapping\"\
    \ configuration can be done.\n          +  If the calendar user address is a \"\
    mailto:\" [RFC6068] URI,\n             the \"mailbox\" portion of the URI is examined,\
    \ and the\n             \"local-part\" and \"domain\" portions are extracted.\n\
    \          +  If the calendar user address is an \"http:\" [RFC2616] or\n    \
    \         \"https:\" [RFC2818] URI, the \"userinfo\" and \"host\" portion\n  \
    \           of the URI [RFC3986] is extracted.\n       *  For a CardDAV server:\n\
    \          +  Minimal input from a user would consist of their email\n       \
    \      address [RFC5322] for the domain where the CardDAV service\n          \
    \   is hosted, and a password.  The \"mailbox\" portion of the\n             email\
    \ address is examined, and the \"local-part\" and\n             \"domain\" portions\
    \ are extracted.\n   2.  Determination of service FQDN and port number:\n    \
    \   *  An SRV lookup for _caldavs._tcp (for CalDAV) or _carddavs._tcp\n      \
    \    (for CardDAV) is done with the extracted \"domain\" as the\n          service\
    \ domain.\n       *  If no result is found, the client can try _caldav._tcp (for\n\
    \          CalDAV) or _carddav._tcp (for CardDAV) provided non-TLS\n         \
    \ connections are appropriate.\n       *  If an SRV record is returned, the client\
    \ extracts the target\n          FQDN and port number.  If multiple SRV records\
    \ are returned,\n          the client MUST use the Priority and Weight fields\
    \ in the\n          record to determine which one to pick (as per [RFC2782]).\n\
    \       *  If an SRV record is not found, the client will need to prompt\n   \
    \       the user to enter the FQDN and port number information\n          directly\
    \ or use some other heuristic, for example, using the\n          extracted \"\
    domain\" as the FQDN and default HTTPS or HTTP port\n          numbers.  In this\
    \ situation, clients MUST first attempt an\n          HTTP connection with TLS.\n\
    \   3.  Determination of initial \"context path\":\n       *  When an SRV lookup\
    \ is done and a valid SRV record returned,\n          the client MUST also query\
    \ for a corresponding TXT record and\n          check for the presence of a \"\
    path\" key in its response.  If\n          present, the value of the \"path\"\
    \ key is used for the initial\n          \"context path\".\n       *  When an\
    \ initial \"context path\" has not been determined from a\n          TXT record,\
    \ the initial \"context path\" is taken to be\n          \"/.well-known/caldav\"\
    \ (for CalDAV) or \"/.well-known/carddav\"\n          (for CardDAV).\n       *\
    \  If the initial \"context path\" derived from a TXT record\n          generates\
    \ HTTP errors when targeted by requests, the client\n          SHOULD repeat its\
    \ \"bootstrapping\" procedure using the\n          appropriate \".well-known\"\
    \ URI instead.\n   4.  Determination of user identifier:\n       *  The client\
    \ will need to make authenticated HTTP requests to\n          the service.  Typically,\
    \ a \"user identifier\" is required for\n          some form of user/password\
    \ authentication.  When a user\n          identifier is required, clients MUST\
    \ first use the \"mailbox\"\n          portion of the calendar user address provided\
    \ by the user in\n          the case of a \"mailto:\" address and, if that results\
    \ in an\n          authentication failure, SHOULD fall back to using the \"local-\n\
    \          part\" extracted from the \"mailto:\" address.  For an \"http:\" or\n\
    \          \"https:\" calendar user address, the \"userinfo\" portion is used\n\
    \          as the user identifier for authentication.  This is in line\n     \
    \     with the guidance outlined in Section 7.  If these user\n          identifiers\
    \ result in authentication failure, the client\n          SHOULD prompt the user\
    \ for a valid identifier.\n   5.  Connecting to the service:\n       *  Subsequent\
    \ to configuration, the client will make HTTP\n          requests to the service.\
    \  When using \"_caldavs\" or \"_carddavs\"\n          services, a TLS negotiation\
    \ is done immediately upon\n          connection.  The client MUST do certificate\
    \ verification using\n          the procedure outlined in Section 6 of [RFC6125]\
    \ in regard to\n          verification with an SRV RR as the starting point.\n\
    \       *  The client does a \"PROPFIND\" [RFC4918] request with the\n       \
    \   request URI set to the initial \"context path\".  The body of\n          the\
    \ request SHOULD include the DAV:current-user-principal\n          [RFC5397] property\
    \ as one of the properties to return.  Note\n          that clients MUST properly\
    \ handle HTTP redirect responses for\n          the request.  The server will\
    \ use the HTTP authentication\n          procedure outlined in [RFC2617] or use\
    \ some other appropriate\n          authentication schemes to authenticate the\
    \ user.\n       *  If the server returns a 404 (\"Not Found\") HTTP status response\n\
    \          to the request on the initial \"context path\", clients MAY try\n \
    \         repeating the request on the \"root\" URI \"/\" or prompt the user\n\
    \          for a suitable path.\n       *  If the DAV:current-user-principal property\
    \ is returned on the\n          request, the client uses that value for the principal-URL\
    \ of\n          the authenticated user.  With that, it can execute a\n       \
    \   \"PROPFIND\" request on the principal-URL and discover\n          additional\
    \ properties for configuration (e.g., calendar or\n          address book \"home\"\
    \ collections).\n       *  If the DAV:current-user-principal property is not returned,\n\
    \          then the client will need to request the principal-URL path\n     \
    \     from the user in order to continue with configuration.\n   Once a successful\
    \ account discovery step has been done, clients\n   SHOULD cache the service details\
    \ that were successfully used (user\n   identity, principal-URL with full scheme/host/port\
    \ details) and reuse\n   those when connecting again at a later time.\n   If a\
    \ subsequent connection attempt fails, or authentication fails\n   persistently,\
    \ clients SHOULD retry the SRV lookup and account\n   discovery to \"refresh\"\
    \ the cached data.\n"
- title: 7.  Guidance for Service Providers
  contents:
  - "7.  Guidance for Service Providers\n   Service providers wanting to offer CalDAV\
    \ or CardDAV services that\n   can be configured by clients using SRV records\
    \ need to follow certain\n   procedures to ensure proper operation.\n   o  CalDAV\
    \ or CardDAV servers SHOULD be configured to allow\n      authentication with\
    \ calendar user addresses (just taking the\n      \"mailbox\" portion of any \"\
    mailto:\" URI) or email addresses\n      respectively, or with \"user identifiers\"\
    \ extracted from them.  In\n      the former case, the addresses MUST NOT conflict\
    \ with other forms\n      of a permitted user login name.  In the latter case,\
    \ the extracted\n      \"user identifiers\" need to be unique across the server\
    \ and MUST\n      NOT conflict with any login name on the server.\n   o  Servers\
    \ MUST force authentication for \"PROPFIND\" requests that\n      retrieve the\
    \ DAV:current-user-principal property to ensure that\n      the value of the DAV:current-user-principal\
    \ property returned\n      corresponds to the principal-URL of the user making\
    \ the request.\n   o  If the service provider uses TLS, the service provider MUST\
    \ ensure\n      a certificate is installed that can be verified by clients using\n\
    \      the procedure outlined in Section 6 of [RFC6125] in regard to\n      verification\
    \ with an SRV RR as the starting point.  In particular,\n      certificates SHOULD\
    \ include SRV-ID and DNS-ID identifiers as\n      appropriate, as described in\
    \ Section 8.\n   o  Service providers should install the appropriate SRV records\
    \ for\n      the offered services and optionally include TXT records.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   Clients that support TLS as defined by [RFC2818]\
    \ SHOULD try the\n   \"_caldavs\" or \"_carddavs\" services first before trying\
    \ the \"_caldav\"\n   or \"_carddav\" services respectively.  If a user has explicitly\n\
    \   requested a connection with TLS, the client MUST NOT use any service\n   information\
    \ returned for the \"_caldav\" or \"_carddav\" services.\n   Clients MUST follow\
    \ the certificate-verification process specified in\n   [RFC6125].\n   A malicious\
    \ attacker with access to the DNS server data, or that is\n   able to get spoofed\
    \ answers cached in a recursive resolver, can\n   potentially cause clients to\
    \ connect to any server chosen by the\n   attacker.  In the absence of a secure\
    \ DNS option, clients SHOULD\n   check that the target FQDN returned in the SRV\
    \ record matches the\n   original service domain that was queried.  If the target\
    \ FQDN is not\n   in the queried domain, clients SHOULD verify with the user that\
    \ the\n   SRV target FQDN is suitable for use before executing any connections\n\
    \   to the host.  Alternatively, if TLS is being used for the service,\n   clients\
    \ MUST use the procedure outlined in Section 6 of [RFC6125] to\n   verify the\
    \ service.  When the target FQDN does not match the original\n   service domain\
    \ that was queried, clients MUST check the SRV-ID\n   identifier in the server's\
    \ certificate.  If the FQDN does match,\n   clients MUST check any SRV-ID identifiers\
    \ in the server's certificate\n   or, if no SRV-ID identifiers are present, MUST\
    \ check the DNS-ID\n   identifiers in the server's certificate.\n   Implementations\
    \ of TLS [RFC5246], used as the basis for TLS\n   ([RFC2818]), typically support\
    \ multiple versions of the protocol as\n   well as the older SSL (Secure Sockets\
    \ Layer) protocol.  Because of\n   known security vulnerabilities, clients and\
    \ servers MUST NOT request,\n   offer, or use SSL 2.0.  See Appendix E.2 of [RFC5246]\
    \ for further\n   details.\n"
- title: 9.  IANA Considerations
  contents:
  - '9.  IANA Considerations

    '
- title: 9.1.  Well-Known URI Registrations
  contents:
  - "9.1.  Well-Known URI Registrations\n   This document defines two \".well-known\"\
    \ URIs using the registration\n   procedure and template from Section 5.1 of [RFC5785].\n"
- title: 9.1.1.  caldav Well-Known URI Registration
  contents:
  - "9.1.1.  caldav Well-Known URI Registration\n   URI suffix:  caldav\n   Change\
    \ controller:  IETF\n   Specification document(s):  This RFC\n   Related information:\
    \  See also [RFC4791].\n"
- title: 9.1.2.  carddav Well-Known URI Registration
  contents:
  - "9.1.2.  carddav Well-Known URI Registration\n   URI suffix:  carddav\n   Change\
    \ controller:  IETF\n   Specification document(s):  This RFC\n   Related information:\
    \  See also [RFC6352].\n"
- title: 9.2.  Service Name Registrations
  contents:
  - "9.2.  Service Name Registrations\n   This document registers four new service\
    \ names as per [RFC6335].  Two\n   are defined in this document, and two are defined\
    \ in [RFC6352],\n   Section 11.\n"
- title: 9.2.1.  caldav Service Name Registration
  contents:
  - "9.2.1.  caldav Service Name Registration\n   Service Name:  caldav\n   Transport\
    \ Protocol(s):  TCP\n   Assignee:  IESG <iesg@ietf.org>\n   Contact:  IETF Chair\
    \ <chair@ietf.org>\n   Description:  Calendaring Extensions to WebDAV (CalDAV)\
    \ - non-TLS\n   Reference:  [RFC6764]\n   Assignment Note:  This is an extension\
    \ of the http service.  Defined\n      TXT keys: path=<context path>\n"
- title: 9.2.2.  caldavs Service Name Registration
  contents:
  - "9.2.2.  caldavs Service Name Registration\n   Service Name:  caldavs\n   Transport\
    \ Protocol(s):  TCP\n   Assignee:  IESG <iesg@ietf.org>\n   Contact:  IETF Chair\
    \ <chair@ietf.org>\n   Description:  Calendaring Extensions to WebDAV (CalDAV)\
    \ - over TLS\n   Reference:  [RFC6764]\n   Assignment Note:  This is an extension\
    \ of the https service.  Defined\n      TXT keys: path=<context path>\n"
- title: 9.2.3.  carddav Service Name Registration
  contents:
  - "9.2.3.  carddav Service Name Registration\n   Service Name:  carddav\n   Transport\
    \ Protocol(s):  TCP\n   Assignee:  IESG <iesg@ietf.org>\n   Contact:  IETF Chair\
    \ <chair@ietf.org>\n   Description:  vCard Extensions to WebDAV (CardDAV) - non-TLS\n\
    \   Reference:  [RFC6352]\n   Assignment Note:  This is an extension of the http\
    \ service.  Defined\n      TXT keys: path=<context path>\n"
- title: 9.2.4.  carddavs Service Name Registration
  contents:
  - "9.2.4.  carddavs Service Name Registration\n   Service Name:  carddavs\n   Transport\
    \ Protocol(s):  TCP\n   Assignee:  IESG <iesg@ietf.org>\n   Contact:  IETF Chair\
    \ <chair@ietf.org>\n   Description:  vCard Extensions to WebDAV (CardDAV) - over\
    \ TLS\n   Reference:  [RFC6352]\n   Assignment Note:  This is an extension of\
    \ the https service.  Defined\n      TXT keys: path=<context path>\n"
- title: 10.  Acknowledgments
  contents:
  - "10.  Acknowledgments\n   This specification was suggested by discussion that\
    \ took place within\n   the Calendaring and Scheduling Consortium's CalDAV Technical\n\
    \   Committee.  The author thanks the following for their contributions:\n   Stuart\
    \ Cheshire, Bernard Desruisseaux, Eran Hammer-Lahav, Helge Hess,\n   Arnaud Quillaud,\
    \ Wilfredo Sanchez, and Joe Touch.\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2616]  Fielding, R., Gettys, J., Mogul, J., Frystyk, H.,\n   \
    \           Masinter, L., Leach, P., and T. Berners-Lee, \"Hypertext\n       \
    \       Transfer Protocol -- HTTP/1.1\", RFC 2616, June 1999.\n   [RFC2617]  Franks,\
    \ J., Hallam-Baker, P., Hostetler, J., Lawrence, S.,\n              Leach, P.,\
    \ Luotonen, A., and L. Stewart, \"HTTP\n              Authentication: Basic and\
    \ Digest Access Authentication\",\n              RFC 2617, June 1999.\n   [RFC2782]\
    \  Gulbrandsen, A., Vixie, P., and L. Esibov, \"A DNS RR for\n              specifying\
    \ the location of services (DNS SRV)\", RFC 2782,\n              February 2000.\n\
    \   [RFC2818]  Rescorla, E., \"HTTP Over TLS\", RFC 2818, May 2000.\n   [RFC3744]\
    \  Clemm, G., Reschke, J., Sedlar, E., and J. Whitehead, \"Web\n             \
    \ Distributed Authoring and Versioning (WebDAV)\n              Access Control\
    \ Protocol\", RFC 3744, May 2004.\n   [RFC3986]  Berners-Lee, T., Fielding, R.,\
    \ and L. Masinter, \"Uniform\n              Resource Identifier (URI): Generic\
    \ Syntax\", STD 66,\n              RFC 3986, January 2005.\n   [RFC4791]  Daboo,\
    \ C., Desruisseaux, B., and L. Dusseault,\n              \"Calendaring Extensions\
    \ to WebDAV (CalDAV)\", RFC 4791,\n              March 2007.\n   [RFC4918]  Dusseault,\
    \ L., \"HTTP Extensions for Web Distributed\n              Authoring and Versioning\
    \ (WebDAV)\", RFC 4918, June 2007.\n   [RFC5246]  Dierks, T. and E. Rescorla,\
    \ \"The Transport Layer Security\n              (TLS) Protocol Version 1.2\",\
    \ RFC 5246, August 2008.\n   [RFC5322]  Resnick, P., Ed., \"Internet Message Format\"\
    , RFC 5322,\n              October 2008.\n   [RFC5397]  Sanchez, W. and C. Daboo,\
    \ \"WebDAV Current Principal\n              Extension\", RFC 5397, December 2008.\n\
    \   [RFC5785]  Nottingham, M. and E. Hammer-Lahav, \"Defining Well-Known\n   \
    \           Uniform Resource Identifiers (URIs)\", RFC 5785,\n              April\
    \ 2010.\n   [RFC6068]  Duerst, M., Masinter, L., and J. Zawinski, \"The 'mailto'\n\
    \              URI Scheme\", RFC 6068, October 2010.\n   [RFC6125]  Saint-Andre,\
    \ P. and J. Hodges, \"Representation and\n              Verification of Domain-Based\
    \ Application Service Identity\n              within Internet Public Key Infrastructure\
    \ Using X.509\n              (PKIX) Certificates in the Context of Transport Layer\n\
    \              Security (TLS)\", RFC 6125, March 2011.\n   [RFC6335]  Cotton,\
    \ M., Eggert, L., Touch, J., Westerlund, M., and S.\n              Cheshire, \"\
    Internet Assigned Numbers Authority (IANA)\n              Procedures for the Management\
    \ of the Service Name and\n              Transport Protocol Port Number Registry\"\
    , BCP 165,\n              RFC 6335, August 2011.\n   [RFC6352]  Daboo, C., \"\
    CardDAV: vCard Extensions to Web Distributed\n              Authoring and Versioning\
    \ (WebDAV)\", RFC 6352, August 2011.\n   [RFC6763]  Cheshire, S. and M. Krochmal,\
    \ \"DNS-Based Service\n              Discovery\", RFC 6763, February 2013.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [RFC5545]  Desruisseaux, B., \"Internet Calendaring\
    \ and Scheduling\n              Core Object Specification (iCalendar)\", RFC 5545,\n\
    \              September 2009.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Cyrus Daboo\n   Apple Inc.\n   1 Infinite Loop\n   Cupertino,\
    \ CA  95014\n   USA\n   EMail: cyrus@daboo.name\n   URI:   http://www.apple.com/\n"
