- title: __initial_text__
  contents:
  - '         Transmission of IPv6 Packets over Token Ring Networks

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This memo specifies the MTU and frame format for transmission\
    \ of IPv6\n   packets on Token Ring networks. It also specifies the method of\n\
    \   forming IPv6 link-local addresses on Token Ring networks and the\n   content\
    \ of the Source/Target Link-layer Address option used the\n   Router Solicitation,\
    \ Router Advertisement, Redirect, Neighbor\n   Solicitation and Neighbor Advertisement\
    \ messages when those messages\n   are transmitted on a Token Ring network.\n\
    \   Implementors should be careful to note that Token Ring adaptors\n   assume\
    \ addresses are in non-canonical rather than canonical format,\n   requiring that\
    \ special care be taken to insure that addresses are\n   processed correctly.\
    \ See [CANON] for more details.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [KWORD].\n"
- title: 2.  Maximum Transmission Unit
  contents:
  - "2.  Maximum Transmission Unit\n   IEEE 802.5 networks have a maximum frame size\
    \ based on the maximum\n   time a node may hold the token. This time depends on\
    \ many factors\n   including the data signaling rate and the number of nodes on\
    \ the\n   ring. Because the maximum frame size varies, implementations must\n\
    \   rely on manual configuration or router advertisements [DISC] to\n   determine\
    \ actual MTU sizes. Common default values include\n   approximately 2000, 4000,\
    \ and 8000 octets.\n   In the absence of any other information, an implementation\
    \ should use\n   a default MTU of 1500 octets. This size offers compatibility\
    \ with all\n   common 802.5 defaults, as well as with Ethernet LANs in an\n  \
    \ environment using transparent bridging.\n   In an environment using source route\
    \ bridging, the process of\n   discovering the MAC-level path to a neighbor can\
    \ yield the MTU for\n   the path to that neighbor. The information is contained\
    \ in the\n   largest frame (LF) subfield of the routing information field. This\n\
    \   field limits the size of the information field of frames to that\n   destination,\
    \ and that information field includes both the LLC [LLC]\n   header and the IPv6\
    \ datagram. Since, for IPv6, the LLC header is\n   always 8 octets in length,\
    \ the IPv6 MTU can be found by subtracting 8\n   from the maximum frame size defined\
    \ by the LF subfield. If an\n   implementation uses this information to determine\
    \ MTU sizes, it must\n   maintain separate MTU values for each neighbor.\n   A\
    \ detailed list of the LF values and the resulting maximum frame size\n   can\
    \ be found in [BRIDGE]. To illustrate the calculation of IPv6 MTU,\n   the following\
    \ table lists several common values. Note that some of\n   the 802.1D LF values\
    \ would result in an IP MTU less than 1280 bytes.\n   This size is less than the\
    \ IPv6 minimum, and communication across\n   paths with those MTUs is generally\
    \ not possible using IPv6.\n           LF (base)  LF (extension)  MAC MTU  IP\
    \ MTU\n             001           000         1470     1462\n             010\
    \           000         2052     2044\n             011           000        \
    \ 4399     4391\n             100           000         8130     8122\n      \
    \       101           000         11407    11399\n             110           000\
    \         17749    17741\n             111           000         41600    41592\n\
    \   When presented with conflicting MTU values from several sources, an\n   implementation\
    \ should choose from those sources according to the\n   following priorities:\n\
    \      1.  Largest Frame values from source route bridging\n           (only for\
    \ specific, unicast destinations), but only if not\n           greater than value\
    \ from any router advertisements\n      2.  Router advertisements, but only if\
    \ not greater than any manual\n           configuration (including DHCP)\n   \
    \   3.  Manual configuration (including DHCP)\n      4.  Default of 1500\n"
- title: 3.   Frame Format
  contents:
  - "3.   Frame Format\n   IPv6 packets are transmitted in LLC/SNAP frames.  The data\
    \ field\n   contains the IPv6 header and payload. The following figure shows a\n\
    \   complete 802.5 frame containing an IPv6 datagram.\n      +-------+-------+-------+-------+\n\
    \      |  SD   |  AC   |  FC   |       |\n      +-----------------------+    \
    \   |\n      |      Destination Address      |\n      |       +-----------------------+\n\
    \      |       |     Source            |\n      +-------+    Address    +-------+\n\
    \      |                       | DSAP  |\n      +-------+-------+-------+-------+\n\
    \      | SSAP  |  CTL  |      OUI      |\n      +-------+-------+-------+-------+\n\
    \      |  OUI  |   EtherType   |       |\n      +-------+---------------+    \
    \   |\n      |                               |\n      ~  IPv6 header and payload...\
    \   ~\n      |                               |\n      +-------------------------------+\n\
    \      |              FCS              |\n      +-------+-------+---------------+\n\
    \      |  ED   |  FS   |\n      +-------+-------+\n   Token Ring Header Fields\n\
    \      SD:  Starting Delimiter\n      AC:  Access Control\n      FC:  Frame Control\n\
    \      Destination Address: 48-bit IEEE address of destination\n           station\n\
    \      Source Address: 48-bit IEEE address of source station\n      DSAP: Destination\
    \ Service Access Point (for LLC/SNAP\n           format, shall always contain\
    \ the value 0xAA)\n      SSAP: Source Service Access Point (for LLC/SNAP format,\n\
    \           shall always contain the value 0xAA)\n      CTL: Control Field (for\
    \ Unnumbered Information, shall\n           always contain the value 0x03)\n \
    \     OUI: Organizationally Unique Identifier (for EtherType\n           encoding,\
    \ shall always contain the value 0x000000)\n      EtherType: Protocol type of\
    \ encapsulated payload (for\n           IPv6, shall always contain the value 0x86DD)\n\
    \      FCS: Frame Check Sequence\n      ED:  Ending Delimiter\n      FS:  Frame\
    \ Status\n   In the presence of source route bridges, a routing information field\n\
    \   (RIF) may appear immediately after the source address. A RIF is\n   present\
    \ in frames when the most significant bit of the source address\n   is set to\
    \ one. (This is the bit whose position corresponds to that of\n   the Individual/Group\
    \ bit in the Destination Address.)\n   The RIF is a variable-length field that\
    \ (when present) contains a\n   two-octet Routing Control (RC) header, followed\
    \ by zero or more two-\n   octet Route Designator fields:\n                  \
    \           0                   1\n                             0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5\n                            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       Routing Control:     |Bcast| Length  |D|  LF   |rsvd |\n             \
    \               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       Route Designator 1:\
    \  |    Segment 1          |Bridge1|\n                            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                            ~              ...              ~\n             \
    \               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       Route Designator N:\
    \  |    Segment N          |BridgeN|\n         (0 <= N <= 7)      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       Route Designator Fields:\n       Bcast:    Broadcast Indicator, Defined\
    \ values:\n                 10x: All Routes Explorer\n                 11x: Spanning\
    \ Tree Explorer\n                 0xx: Specifically Routed Frame\n       Length:\
    \  Total length of RIF field in octets\n       D:   Direction of source route.\
    \ A value of 0 means that\n            the left-to-right sequence of Route Designators\n\
    \            provides the path from the sender to recipient. A\n            value\
    \ of 0 indicates the sequence goes from\n            recipient to sender.\n  \
    \     LF:  Largest Frame\n       rsvd: Reserved\n   On transmission, the Route\
    \ Designator fields give the sequence of\n   (bridge, LAN segment) numbers the\
    \ packet is to traverse. It is the\n   responsibility of the sender to provide\
    \ this sequence for\n   Specifically Routed Frames, i.e., unicast IP datagrams.\n"
- title: 4.  Stateless Autoconfiguration
  contents:
  - "4.  Stateless Autoconfiguration\n   The Interface Identifier [AARCH] for a Token\
    \ Ring interface is based\n   on the EUI-64 identifier [EUI64] derived from the\
    \ interface's built-\n   in 48-bit IEEE 802 address. The OUI of the Token Ring\
    \ address (the\n   first three octets) becomes the company_id of the EUI-64 (the\
    \ first\n   three octets). The fourth and fifth octets of the EUI are set to the\n\
    \   fixed value FFFE hexadecimal. The last three octets of the Token Ring\n  \
    \ address become the last three octets of the EUI-64.\n   The Interface Identifier\
    \ is then formed from the EUI-64 by\n   complementing the \"Universal/Local\"\
    \ (U/L) bit, which is the next-to-\n   lowest order bit of the first octet of\
    \ the EUI-64.  Complementing\n   this bit will generally change a 0 value to a\
    \ 1, since an interface's\n   built-in address is expected to be from a universally\
    \ administered\n   address space and hence have a globally unique value.  A universally\n\
    \   administered IEEE 802 address or an EUI-64 is signified by a 0 in the\n  \
    \ U/L bit position, while a globally unique IPv6 Interface Identifier\n   is signified\
    \ by a 1 in the corresponding position.  For further\n   discussion on this point,\
    \ see [AARCH].\n   For example, the Interface Identifier for a Token Ring interface\n\
    \   whose built-in address is, in hexadecimal and in canonical bit order,\n  \
    \                           34-56-78-9A-BC-DE\n   would be\n                 \
    \        36-56-78-FF-FE-9A-BC-DE.\n   A different MAC address set manually or\
    \ by software should not be\n   used to derive the Interface Identifier. If such\
    \ a MAC address must\n   be used, its global uniqueness property should be reflected\
    \ in the\n   value of the U/L bit.\n   An IPv6 address prefix used for stateless\
    \ autoconfiguration of a\n   Token Ring interface must have a length of 64 bits.\n"
- title: 5.  Link-Local Address
  contents:
  - "5.  Link-Local Address\n   The IPv6 link-local address [AARCH] for a Token Ring\
    \ interface is\n   formed by appending the Interface Identifer, as defined above,\
    \ to the\n   prefix FE80::/64.\n     10 bits            54 bits              \
    \    64 bits\n   +----------+-----------------------+----------------------------+\n\
    \   |1111111010|         (zeros)       |    Interface Identifier    |\n   +----------+-----------------------+----------------------------+\n"
- title: 6.  Address Mapping -- Unicast
  contents:
  - "6.  Address Mapping -- Unicast\n   The procedure for mapping unicast IPv6 addresses\
    \ into Token Ring\n   link-layer addresses is described in [DISC]. The Source/Target\
    \ Link-\n   layer Address option has the following form when the link layer is\n\
    \   Token Ring.\n               0                   1\n               0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5\n              +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n \
    \             |     Type      |    Length     |\n              +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \              |                               |\n              +-         Token\
    \ Ring          -+\n              |                               |\n        \
    \      +-           Address           -+\n              |                    \
    \           |\n              +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      Option fields:\n\
    \         Type:     1 for Source Link-layer address.\n                   2 for\
    \ Target Link-layer address.\n         Length:  1 (in units of 8 octets).\n  \
    \       Token Ring Address: The 48 bit Token Ring IEEE 802\n            address,\
    \ in canonical bit order. This is the address the\n            interface currently\
    \ responds to, and may be different from\n            the built-in address used\
    \ to derive the Interface\n            Identifier.\n            When source routing\
    \ bridges are used, the source route for\n            the path to a destination\
    \ can be extracted from the RIF\n            field of received Neighbor Advertisement\
    \ messages. Note that\n            the RIF field of received packets can be reversed\
    \ into a\n            source route suitable for transmitting return traffic by\n\
    \            toggling the value of the 'D' bit and insuring that the\n       \
    \     Bcast field is set to indicate a Specifically Routed Frame.\n"
- title: 7.  Address Mapping -- Multicast
  contents:
  - "7.  Address Mapping -- Multicast\n   All IPv6 packets with multicast destination\
    \ addresses are transmitted\n   to Token Ring functional addresses. The following\
    \ table shows the\n   specific mapping between the IPv6 addresses and Token Ring\
    \ functional\n   addresses (in canonical form). Note that protocols other than\
    \ IPv6\n   may use these same functional addresses, so all Token Ring frames\n\
    \   destined to these functional addresses are not guaranteed to be IPv6\n   datagrams.\n\
    \   MAC Addr (canonical)       IPv6 Multicast Addresses\n   03-00-80-00-00-00\
    \  All-Nodes (FF01::1 and FF02::1) and\n                      solicited node (FF02:0:0:0:0:1:FFXX:XXXX)\n\
    \                      addresses\n   03-00-40-00-00-00  All-Routers addresses\
    \ (FF0X::2)\n   03-00-00-80-00-00  any other multicast address with three\n  \
    \                    least significant bits = 000\n   03-00-00-40-00-00  any other\
    \ multicast address with three\n                      least significant bits =\
    \ 001\n   03-00-00-20-00-00  any other multicast address with three\n        \
    \              least significant bits = 010\n   03-00-00-10-00-00  any other multicast\
    \ address with three\n                      least significant bits = 011\n   03-00-00-08-00-00\
    \  any other multicast address with three\n                       least significant\
    \ bits = 100\n   03-00-00-04-00-00  any other multicast address with three\n \
    \                      least significant bits = 101\n   03-00-00-02-00-00  any\
    \ other multicast address with three\n                       least significant\
    \ bits = 110\n   03-00-00-01-00-00  any other multicast address with three\n \
    \                      least significant bits = 111\n   In a bridged token ring\
    \ network, all multicast packets SHOULD be sent\n   with a RIF header specifying\
    \ the use of the Spanning Tree Explorer.\n   Note: it is believed that some (very)\
    \ old bridge implementations do\n   not properly support the Spanning Tree Explorer\
    \ mechanism.  In such\n   environments, multicast traffic sent through bridges\
    \ must use a RIF\n   with the All Routes Explorer. Consequently, an implementation\
    \ MAY\n   wish to allow the sending of IP multicast traffic using an All Routes\n\
    \   Explorer. However, such an ability must be configurable by a system\n   administrator\
    \ and the default setting of the switch MUST be to use\n   the Spanning Tree Explorer.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   Token Ring, like most broadcast LAN technologies,\
    \ has inherent\n   security vulnerabilities. For example, any sender can claim\
    \ the\n   identity of another and forge traffic. It is the responsibility of\n\
    \   higher layers to take appropriate steps in those environments where\n   such\
    \ vulnerabilities are unacceptable.\n"
- title: 9.  Acknowledgments
  contents:
  - "9.  Acknowledgments\n   Several members of the IEEE 802.5 Working Group contributed\
    \ their\n   knowledge and experience to the drafting of this specification,\n\
    \   including Jim, Andrew Draper, George Lin, John Messenger, Kirk\n   Preiss,\
    \ and Trevor Warwick. The author would also like to thank many\n   members of\
    \ the IPng working group for their advice and suggestions,\n   including Ran Atkinson,\
    \ Scott Bradner, Steve Deering, Francis Dupont,\n   Robert Elz, and Matt Thomas.\
    \ A special thanks is due Steve Wise, who\n   gave the most relevant advice of\
    \ all by actually trying to implement\n   this specification while it was in progress.\n"
- title: 10.  References
  contents:
  - "10.  References\n   [802.5]   8802-5 : 1995 (ISO/IEC) [ANSI/IEEE 802.5, 1995\n\
    \             Edition] Information technology--Telecommunications and\n      \
    \       information exchange between systems--Local and\n             metropolitan\
    \ area networks--Specific requirements-- Part 5:\n             Token ring access\
    \ method and physical layer specification.\n   [AARCH]   Hinden, R. and S. Deering,\
    \ \"IP Version 6 Addressing\n             Architecture\", RFC 2373, July 1998.\n\
    \   [ACONF]   Thomson, S. and T. Narten, \"IPv6 Stateless Address\n          \
    \   Autoconfiguration\", RFC 2462, December 1998.\n   [BRIDGE]  10038: 1993 (ISO/IEC)\
    \ [ANSI/IEEE Std 802.1D, 1993 Edition]\n             Information technology--Telecommunications\
    \ and information\n             exchange between systems--Local area networks--Media\
    \ access\n             control (MAC) bridges.\n   [CANON]   Narten, T. and C.\
    \ Burton, \"A Caution on Canonical Bit Order\n             Of Link-Layer Addresses\"\
    , RFC 2469, December 1998.\n   [CONF]    Thomson, S. and T. Narten, \"IPv6 Stateless\
    \ Address\n             Autoconfiguration\", RFC 1971, August 1996.\n   [DISC]\
    \    Narten, T., Nordmark, E. and W. Simpson, \"Neighbor\n             Discovery\
    \ for IP Version 6 (IPv6)\", RFC 2461, December\n             1998.\n   [EUI64]\
    \  \"64-Bit Global Identifier Format Tutorial\", http:\n             //standards.ieee.org/db/oui/tutorials/EUI64.html.\n\
    \   [IPV6]    Deering, S. and R. Hinden, \"Internet Protocol, Version 6\n    \
    \         (IPv6) Specification\", RFC 2460, December 1998.\n   [KWORD]   Bradner,\
    \ S., \"Key words for use in RFCs to Indicate\n             Requirement Levels,\"\
    \ BCP 14, RFC 2119, March 1997.\n   [LLC]     8802-2 : 1994 (ISO/IEC) [ANSI/IEEE\
    \ 802.2, 1994 Edition]\n             Information technology--Telecommunications\
    \ and information\n             exchange between systems--Local and Metropolitan\
    \ area\n             networks--Specific requirements-- Part 2: Logical link\n\
    \             control.\n"
- title: 11.  Authors' Addresses
  contents:
  - "11.  Authors' Addresses\n   Matt Crawford\n   Fermilab MS 368\n   PO Box 500\n\
    \   Batavia, IL 60510 USA\n   Phone: +1 630 840 3461\n   EMail: crawdad@fnal.gov\n\
    \   Thomas Narten\n   IBM Corporation\n   P.O. Box 12195\n   Research Triangle\
    \ Park, NC 27709-2195 USA\n   Phone: +1 919 254 7798\n   EMail: narten@raleigh.ibm.com\n\
    \   Stephen Thomas\n   TransNexus\n   430 Tenth Street NW Suite N204\n   Atlanta,\
    \ GA 30318 USA\n   Phone: +1 404 872 4745\n   EMail: stephen.thomas@transnexus.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (1998).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
