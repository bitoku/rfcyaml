This document describes the Remote Operations and Abstract Syntax for the operation of the Network Time Protocol (NTP) over an ISO OSI stack.
NTP itself is documented in great detail in RFC 1119.
The motivation behind the implementation of a Remote Operations Service implementation of NTP is fourfold.
The inclusion of a useful service to an OSI environment.
The feasibility of automatically checking a ROS/ASN.1 specification, and automatically generating code to implement the protocol.
The feasibility of running NTP on connection oriented network services (CONS or X.25), and consequentially, the ability to use connection success or failure to optimise reachability discovery.
The generalisation of the last point: the use of ROS makes NTP independent of the underlying communications architecture.
The need for time synchronisation is clear, and RFC 1119 indicates a few of the necessary uses of this service.
However, it is becoming clear that OSI applications are very much in need of this service too.
Not just in the local context but across the wide area.
For example much of the strong authentication outlined in X.511 is based on encrypted packets with time stamps to indicate how long the packet is valid for.
If two hosts have clocks that are not closely synchronised, the host with the faster clock will be more prone to cryptographic attacks from the slower, and the slower host will possibly find it is unauthentable.
A similar problem occurs with the X.500 directory and the service control limiting the time allowed for the search.
Authentication between NTP peers and between clients and servers is not addressed here, as the choice of mechanism is still the subject of some debate.
The NTP application functions exactly as in RFC 1119.
The use of remote operations and the underlying Application support means that for NTP daemons to peer with one another, they send an A  ASSOCIATE.REQUEST, and receive an A ASSOCIATE.INDICATION.
On successful association, they subsequently periodically invoke the appropriate Remote Operation with the appropriate parameters at the appropriate frequency.
On failure, they mark the peer as unreachable.
The states that an ntp daemon records for each peer are enhanced from RFC 1119 to include: Connected: this indicates the host is connected with its peer and synchronisation data is being exchanged.
Connecting: this state indicates that a connection is in progress.
Hosts at large distances may take several seconds to connect, and such blocking can perturb the exchange of data with other hosts.
Therefore, the connection is made asynchronously.
Accepting: this state indicates that a connection is being accepted from another host, but the necessary negotiation of transport session etc has not been fulfilled yet.
This is another asynchronous part.
Disconnected: this state is reached if the remote host cannot be contacted.
The use of a connection oriented service means that the operation of the NTP algorithm is slightly different.
This stems firstly from some necessary adjustments made to the protocol and secondly from some optimisations that are possible through the use of connections.
Firstly, the reachability of the host can be directly determined.
The NTP protocol maintains a shift register to determine if it is likely that a peer is still responding and exchanging data.
This works by recording over the last eight transfers how many responses have been received.
If there have been no responses to the last eight packets, then the host is deemed unreachable.
Naturally, with a connection to the remote host, the reachability is immediately determinable.
Either a connection is established or the connection is broken or not yet made.
For this reason it is not necessary to rely on the shift register to determine reachability.
Secondly, there are a large number of optimisations that can be made by use of the connection oriented mode.
The NTP packet format can be broken into several categories.
Protocol data Of these classes of data, only the first (a) is necessary to maintain the synchronisation between hosts.
Information such as protocol version and the precision of the local clock are not likely to vary over the lifetime of the connection.
Likewise the authentication if in use need only be done at connection establishment and is not necessarily required for every packet.
For these reason, the NTP protocol can be simplified slightly to remove this information.
This can be seen in the specification for the Packet in Appendix A. 4.
Although on first inspection it might be thought that a high speed network is necessary for accurate synchronisation, this is not the case.
What is more important is the dispersion of the packet traversal times.
It is normally the case that a low speed network with little variance in packet transit times will give better results than a high speed network with large differences in individual packet transit times.
This would lead us to think that connection oriented networks with resource allocation done at connection time might lead to higher accuracies than connectionless networks which can suffer large swings in packet transit time under high loading.
Implementation Model Ideally, the implementor will provide interoperability between the existing UDP based NTP service, and a ROS based service.
To this end, the internal records that hold NTP state information, can be kept the same as existing implementations, and for optimisation reasons, the internal representations of NTP packets can be the same.
Translation between these and appropriate ROS/ASN concrete encodings can be provided by automatic translators such as Rosy [ISODE].
The way in which the data fields in the Packet described in Appendix A is unchanged from RFC 1119.
This simplifies implementations based on existing ones, and encourages interworking.
Discussion From the limited testing of this model so far done, the results would seem to indicate that the ROS based model running over an X.25 service is of similar reliability as the UDP model.
Until further experimentation can be performed, specific data can not be given.
However, in the UK where the most common method of time synchronisation is the system administrators watch and typing in the time to the nearest minute, this method is clearly far superior.
Connection management is transparent to NTP since it is implemented beneath the Remote Operations Service.
However, an NTP implementation must have access to the status of connections, and uses this not only for reachability information but also to find the information gleaned at connect time and no longer exchanged in NTP operations.
There are a number of UK sites running NTP over ROS over X.25 with an earlier ROS specification, with at least one site peering both over ROS with UK sites on X.25, and over UDP with US Internet sites.
The table below shows the reachabilities, delays, offsets and dispersions for the central UK site peering with 2 JANET sites (IP addresses not meaningful, but shown as 126.0.0.1), and three US sites.
basic exchange packet Packet ::
Security Considerations Security issues are not discussed in this memo.
