- title: __initial_text__
  contents:
  - '   Session Description Protocol (SDP) Simple Capability Declaration

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2002).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines a set of Session Description Protocol (SDP)\n\
    \   attributes that enables SDP to provide a minimal and backwards\n   compatible\
    \ capability declaration mechanism.  Such capability\n   declarations can be used\
    \ as input to a subsequent session\n   negotiation, which is done by means outside\
    \ the scope of this\n   document.  This provides a simple and limited solution\
    \ to the general\n   capability negotiation problem being addressed by the next\
    \ generation\n   of SDP, also known as SDPng.\n"
- title: 1. Conventions Used in this Document
  contents:
  - "1. Conventions Used in this Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    ,  \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC-2119 [2].\n"
- title: 2. Introduction
  contents:
  - "2. Introduction\n   The Session Description Protocol (SDP) [3] describes multimedia\n\
    \   sessions for the purposes of session announcement, session\n   invitation,\
    \ and other forms of multimedia session initiation.  SDP\n   was not intended\
    \ to provide capability negotiation.  However, as the\n   need for this has become\
    \ increasingly important, work has begun on a\n   \"next generation SDP\" (SDPng)\
    \ [4,5] that supports both session\n   description and capability negotiation.\
    \  SDPng is not anticipated to\n   be backwards compatible with SDP and work on\
    \ SDPng is currently in\n   the early stages.  However, several other protocols,\
    \ e.g. SIP [6] and\n   Media Gateway Control Protocol (MGCP) [7], use SDP and\
    \ are likely to\n   continue doing so for the foreseeable future.  Nevertheless,\
    \ in many\n   cases these signaling protocols have an urgent need for some limited\n\
    \   form of capability negotiation.\n   For example, an endpoint may support G.711\
    \ audio (over RTP) as well\n   as T.38 fax relay (over UDP or TCP).  Unless the\
    \ endpoint is willing\n   to support two media streams at the same time, this\
    \ cannot currently\n   be expressed in SDP.  Another example involves support\
    \ for multiple\n   codecs.  An endpoint indicates this by including all the codecs\
    \ in\n   the \"m=\" line in the session description.  However, the endpoint\n\
    \   thereby also commits to simultaneous support for each of these\n   codecs.\
    \  In practice, Digital Signal Processor (DSP) memory and\n   processing power\
    \ limitations may not make this feasible.\n   As noted in [4], the problem with\
    \ SDP is that media descriptions are\n   used to describe session parameters as\
    \ well as capabilities without a\n   clear distinction between the two.\n   In\
    \ this document, we define a minimal and backwards compatible\n   capability declaration\
    \ feature in SDP by defining a set of new SDP\n   attributes.  Together, these\
    \ attributes define a capability set,\n   which consists of a capability set sequence\
    \ number followed by one or\n   more capability descriptions.  Each capability\
    \ description in the set\n   contains information about supported media formats,\
    \ but the endpoint\n   is not committing to use any of these.  In order to actually\
    \ use a\n   declared capability, session negotiation will have to be done by\n\
    \   means outside the scope of this document, e.g., using the\n   offer/answer\
    \ model [8].\n   It should be noted that the mechanism is not intended to solve\
    \ the\n   general capability negotiation problem targeted by SDPng.  It is\n \
    \  merely intended as a simple and limited solution to the most urgent\n   problems\
    \ facing current users of SDP.\n"
- title: 3. Simple Capability Declaration Attributes
  contents:
  - "3. Simple Capability Declaration Attributes\n   The SDP Simple Capability Declaration\
    \ (simcap) is defined by a set of\n   SDP attributes.  Together, these attributes\
    \ form a capability set\n   which describes the complete media capabilities of\
    \ the endpoint.  Any\n   previous capability sets issued by the endpoint for the\
    \ session in\n   question no longer apply.  The capability set consists of a sequence\n\
    \   number and one or more capability descriptions.  Each such capability\n  \
    \ description describes the media type and media formats supported and\n   may\
    \ include one or more capability parameters to further define the\n   capability.\
    \  A session description MUST NOT contain more than one\n   capability set, however\
    \ the capability set can describe capabilities\n   at both the session and media\
    \ level.  Capability descriptions\n   provided at the session level apply to all\
    \ media streams of the media\n   type indicated, whereas capability descriptions\
    \ provided at the media\n   level apply to that particular media stream only.\
    \  We refer to these\n   respectively as session capabilities and media stream\
    \ capabilities.\n   A media stream capability may or may not be of the same media\
    \ type as\n   the media stream to which it applies.\n   The capability set MUST\
    \ begin with a single sequence number followed\n   by one or more capability descriptions\
    \ listing all media formats the\n   endpoint is currently able and willing to\
    \ support.  More\n   specifically, if a media format is included in a media (\"\
    m=\") line,\n   then by definition the media format MUST be included in either\
    \ a\n   session capability or a media stream capability for that media line.\n\
    \   The endpoint MAY include additional media formats in a capability if\n   it\
    \ is capable of supporting those media formats in a session with its\n   peer.\
    \  An endpoint MUST NOT include capabilities it knows it cannot\n   use in a particular\
    \ session.  An endpoint receiving a capability set\n   from another endpoint MAY\
    \ use any of the media formats included in\n   that capability set in a later\
    \ attempt to negotiate media streams\n   with the other endpoint, e.g., using\
    \ the offer/answer model [8].  If\n   a new capability set is received from the\
    \ other endpoint, the old\n   capability set MUST NOT be used any longer.  Session\
    \ capabilities can\n   be used for any media streams of the indicated media type,\
    \ whereas\n   media stream capabilities can only be used for their associated\
    \ media\n   line.  However, an endpoint receiving a capability set with a given\n\
    \   media format MUST NOT assume that a subsequent attempt to negotiate a\n  \
    \ media stream using just this media format will succeed.\n   The individual capability\
    \ descriptions in a capability set can be\n   provided contiguously or they can\
    \ be scattered throughout the session\n   description.  The first capability description\
    \ MUST, however, follow\n   immediately after the sequence number.\n   The sequence\
    \ number is on the form:\n     a=sqn: <sqn-num>\n   where <sqn-num> is an integer\
    \ between 0 and 255 (both included).  The\n   initial sequence number MUST be\
    \ 0 (zero) and it MUST be incremented\n   by 1 modulo 256 with each new capability\
    \ set issued by the endpoint.\n   Receivers may not necessarily see all capability\
    \ sets issued and\n   hence MUST NOT reject a capability set due to gaps in sequence\n\
    \   numbers.  The sequence number MUST either be provided as a session-\n   level\
    \ or media-level attribute, however there MUST NOT be more than\n   one occurrence\
    \ of the sequence number attribute in the session\n   description (since there\
    \ cannot be more than one capability set).\n   Each capability description in\
    \ the capability set is on the form:\n     a=cdsc: <cap-num> <media> <transport>\
    \ <fmt list>\n   where <cap-num> is an integer between 1 and 255 (both included)\
    \ used\n   to number the capabilities, and <media>, <transport>, and <fmt list>\n\
    \   are defined as in the SDP \"m=\" line.  The capability description\n   refers\
    \ to a send and receive capability by default.  When generating\n   a capability\
    \ set, the capability number MUST start with 1 in the\n   first capability description,\
    \ and be incremented by the number of\n   media formats in the <fmt list> for\
    \ each subsequent capability\n   description.  The media formats in the <fmt list>\
    \ are numbered from\n   left to right.  Receivers of a capability set MUST NOT,\
    \ however,\n   reject capability descriptions due to gaps in the capability numbers.\n\
    \   The capability number provides a convenient handle within the context\n  \
    \ of the capability set (as referenced by the sequence number) which\n   may be\
    \ used to reference a particular capability by means outside of\n   this specification.\n\
    \   A capability description can include one or more capability parameter\n  \
    \ lines on the form:\n     a=cpar: <cap-par>\n     a=cparmin: <cap-par>\n    \
    \ a=cparmax: <cap-par>\n   where <cap-par> is either bandwidth information (\"\
    b=\") or an\n   attribute (\"a=\") in its full  '<type>=<value>' form (see [3]).\
    \  A\n   capability parameter line provides additional parameters for the\n  \
    \ preceding \"cdsc\" attribute line.  Capability parameter lines for a\n   capability\
    \ description SHOULD immediately follow the \"cdsc\" line they\n   refer to. \
    \ Nevertheless, the capability description includes all\n   capability parameter\
    \ lines until the next capability description\n   (\"cdsc\") or media (\"m=\"\
    ) line in the session description.\n   The \"cpar\" attribute should normally\
    \ be used when capability\n   parameter values are to be specified. When provided,\
    \ it means that\n   the endpoint is declaring that it supports the media formats\
    \ in the\n   preceding \"cdsc\" line in accordance with the <cap-par> value\n\
    \   specified.  This can, for example, be used to specify \"fmtp\"\n   parameters.\
    \  If a session negotiation is attempted without\n   considering the <cap-par>\
    \ value, it may fail due to lack of endpoint\n   support.  A capability description\
    \ may contain zero, one, or more\n   \"cpar\" attribute lines describing either\
    \ the same or different\n   parameters.  Describing the same parameter more than\
    \ once can be used\n   to specify alternatives.\n   Where a minimum numerical\
    \ value is to be specified, the \"cparmin\"\n   attribute should be used.  There\
    \ may be zero, one, or more \"cparmin\"\n   attribute lines in a capability description,\
    \ however a given\n   parameter MUST NOT be described by a \"cparmin\" attribute\
    \ more than\n   once.\n   Where a maximum numerical value is to be specified,\
    \ the \"cparmax\"\n   attribute should be used.  There may be zero, one, or more\
    \ \"cparmax\"\n   attribute lines in a capability description, however a given\n\
    \   parameter MUST NOT be described by a \"cparmax\" attribute more than\n   once.\n\
    \   Ranges of numerical values can be expressed by using a \"cparmin\" and\n \
    \  a \"cparmax\" attribute for a given parameter.  It follows from the\n   previous\
    \ rules, that only a single range can be specified for a given\n   parameter.\n\
    \   Capability descriptions may be provided at both the session-level and\n  \
    \ media-level.  A capability description provided at the session-level\n   applies\
    \ to all the media streams of the indicated media type in the\n   session description.\
    \  A capability description provided at the\n   media-level only applies to that\
    \ particular media stream (regardless\n   of media type).  If a capability description\
    \ with media type X is\n   provided at the session-level, and there are no media\
    \ streams of type\n   X in the session description, then it is undefined which\
    \ of the media\n   streams the capability description applies to (except if there\
    \ is\n   only one media stream).  It is therefore RECOMMENDED, that such\n   capabilities\
    \ are provided at the media-level instead.\n   Below we show an example session\
    \ description using the above simple\n   capability declaration mechanism:\n \
    \    v=0\n     o=- 25678 753849 IN IP4 128.96.41.1\n     s=\n     c=IN IP4 128.96.41.1\n\
    \     t=0 0\n     m=audio 3456 RTP/AVP 18 96\n     a=rtpmap:96 telephone-event\n\
    \     a=fmtp:96 0-15,32-35\n     a=sqn: 0\n     a=cdsc: 1 audio RTP/AVP 0 18 96\n\
    \     a=cpar: a=fmtp:96 0-16,32-35\n     a=cdsc: 4 image udptl t38\n     a=cdsc:\
    \ 5 image tcp t38\n   The sender of this session description is currently prepared\
    \ to send\n   and receive G.729 audio as well as telephone-events 0-15 and 32-35.\n\
    \   The sender is furthermore capable of supporting:\n   *  PCMU encoding for\
    \ the audio media stream,\n   *  telephone events 0-16 and 32-35,\n   *  T.38\
    \ fax relay using udp or tcp (see [9]).\n   Note, that the first capability number\
    \ specified is 1, whereas the\n   next is 4 since three media formats were included\
    \ in the first\n   capability description.  Also note that the rtpmap for payload\
    \ type\n   96 was not included in the capability description, as it was already\n\
    \   specified for the media (\"m=\") line.  Conversely, it would of course\n \
    \  not have been valid to provide the rtpmap in the capability\n   description\
    \ and then omit the \"a=rtpmap\" line.\n   Below, we show another example of the\
    \ simple capability declaration\n   mechanism, this time with multiple media streams:\n\
    \     v=0\n     o=- 25678 753849 IN IP4 128.96.41.1\n     s=\n     c=IN IP4 128.96.41.1\n\
    \     t=0 0\n     m=audio 3456 RTP/AVP 18\n     a=sqn: 0\n     a=cdsc: 1 audio\
    \ RTP/AVP 0 18\n     m=video 3458 RTP/AVP 31\n     a=cdsc: 3 video RTP/AVP 31\
    \ 34\n   The sender of this session description is currently prepared to send\n\
    \   and receive G.729 audio and H.261 video.  The sender is furthermore\n   capable\
    \ of supporting:\n   *  PCMU encoding for the audio media stream,\n   *  H.263\
    \ for the video media stream.\n   Note that the first capability number specified\
    \ is 1, whereas the\n   next is 3, since two media formats were included in the\
    \ first\n   capability description.  Also note that the sequence number applies\n\
    \   to the entire capability set, i.e. both audio and video, and hence is\n  \
    \ only supplied once.  Finally, note that the media formats 18 and 31\n   are\
    \ listed in both the media lines and the capability set as\n   required.  The\
    \ above session description could have equally been\n   supplied as follows:\n\
    \     v=0\n     o=- 25678 753849 IN IP4 128.96.41.1\n     s=\n     c=IN IP4 128.96.41.1\n\
    \     t=0 0\n     a=sqn: 0\n     a=cdsc: 1 audio RTP/AVP 0 18\n     a=cdsc: 3\
    \ video RTP/AVP 31 34\n     m=audio 3456 RTP/AVP 18\n     m=video 3458 RTP/AVP\
    \ 31\n   i.e., with the capability set provided at the session-level.\n"
- title: 4. Security Considerations
  contents:
  - "4. Security Considerations\n   Capability negotiation of security-sensitive parameters\
    \ is a delicate\n   process, and should not be done without careful evaluation\
    \ of the\n   design, including the possible susceptibility to downgrade attacks.\n\
    \   Use of capability re-negotiation may make the session susceptible to\n   denial\
    \ of service, without design care as to authentication.\n"
- title: 5. IANA Considerations
  contents:
  - "5. IANA Considerations\n   This document defines the following new SDP parameters\
    \ of type \"att-\n   field\" (attribute names):\n   Attribute name:      sqn\n\
    \   Long form name:      Sequence number.\n   Type of attribute:   Session-level\
    \ and media-level.\n   Subject to charset:  No.\n   Purpose:             Capability\
    \ set numbering.\n   Appropriate values:  See Section 3.\n   Attribute name: \
    \     cdsc\n   Long form name:      Capability description.\n   Type of attribute:\
    \   Session-level and media-level.\n   Subject to charset:  No.\n   Purpose: \
    \            Describe capabilities in a capability set.\n   Appropriate values:\
    \  See Section 3.\n   Attribute name:      cpar\n   Long form name:      Capability\
    \ parameter line.\n   Type of attribute:   Session-level and media-level.\n  \
    \ Subject to charset:  No.\n   Purpose:             Provide capability description\
    \ parameters.\n   Appropriate values:  See Section 3.\n   Attribute name:    \
    \  cparmin\n   Long form name:      Minimum capability parameter line.\n   Type\
    \ of attribute:   Session-level and media-level.\n   Subject to charset:  No.\n\
    \   Purpose:             Provide minimum capability description\n            \
    \            parameters.\n   Appropriate values:  See Section 3.\n   Attribute\
    \ name:      cparmax\n   Long form name:      Maximum capability parameter line.\n\
    \   Type of attribute:   Session-level and media-level.\n   Subject to charset:\
    \  No.\n   Purpose:             Provide maximum capability description\n     \
    \                   parameters.\n   Appropriate values:  See Section 3.\n"
- title: 6. Normative References
  contents:
  - "6. Normative References\n   [1] Bradner, S., \"The Internet Standards Process\
    \ -- Revision 3\", BCP\n       9, RFC 2026, October 1996.\n   [2] Bradner, S.,\
    \ \"Key words for use in RFCs to Indicate Requirement\n       Levels\", BCP 14,\
    \ RFC 2119, March 1997.\n   [3] Handley, M. and V. Jacobson, \"SDP: session description\
    \ protocol\",\n       Request for Comments 2327, April 1998.\n"
- title: 7. Informative References
  contents:
  - "7. Informative References\n   [4] Kutscher, Ott, Bormann and Curcio, \"Requirements\
    \ for Session\n       Description and Capability Negotiation\", Work in Progress.\n\
    \   [5] Kutscher, Ott and Borman, \"Session Description and Capability\n     \
    \  Negotiation\", Work in Progress.\n   [6] Handley, M., Schulzrinne, H., Schooler,\
    \ E. and J. Rosenberg,\n       \"SIP: session initiation protocol\", RFC 2543,\
    \ March 1999.\n   [7] Arango, M., Dugan, A., Elliott, I., Huitema, C. and S. Pickett,\n\
    \       \"Media Gateway Control Protocol (MGCP) Version 1.0\", RFC 2705,\n   \
    \    October 1999.\n   [8] Rosenberg, J. and H. Schulzrinne, \"An Offer/Answer\
    \ Model with\n       SDP\", Work in Progress.\n   [9] ITU-T Recommendation T.38\
    \ Annex D, \"SIP/SDP Call Establishment\n       Procedures\".\n"
- title: 8. Acknowledgments
  contents:
  - "8. Acknowledgments\n   This work draws upon the ongoing work on SDPng in the\
    \ IETF MMUSIC\n   Working Group; in particular [4].  Furthermore this work was\
    \ inspired\n   by the CableLabs PacketCable project.  The author would like to\n\
    \   recognize and thank Joerg Ott and Jonathan Rosenberg who provided\n   many\
    \ detailed comments and suggestions to improve this specification.\n   Colin Perkins,\
    \ Orit Levin and Tom Taylor provided valuable feedback\n   as well.\n"
- title: 9. Author's Address
  contents:
  - "9. Author's Address\n   Flemming Andreasen\n   Cisco Systems\n   499 Thornall\
    \ Street, 8th floor\n   Edison, NJ\n   EMail: fandreas@cisco.com\n"
- title: 10. Full Copyright Statement
  contents:
  - "10. Full Copyright Statement\n   Copyright (C) The Internet Society (2002). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
