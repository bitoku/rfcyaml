- contents:
  - '                    Multicast Address Allocation MIB

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This memo defines a portion of the Management Information Base (MIB)\n
    \  for use with network management protocols in the Internet community.\n   In
    particular, it describes managed objects used for managing\n   multicast address
    allocation.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .
    . . . . . .  2\n   2.  The Internet-Standard Management Framework . . . . . .
    . . . .  2\n   3.  Overview . . . . . . . . . . . . . . . . . . . . . . . . .
    . .  2\n       3.1.  Protocol-independent objects . . . . . . . . . . . . . .
    \ 3\n       3.2.  Protocol-specific objects. . . . . . . . . . . . . . . .  3\n
    \  4.  Definitions. . . . . . . . . . . . . . . . . . . . . . . . . .  4\n   5.
    \ IANA Considerations. . . . . . . . . . . . . . . . . . . . . . 32\n   6.  Security
    Considerations. . . . . . . . . . . . . . . . . . . . 33\n   7.  Acknowledgements
    . . . . . . . . . . . . . . . . . . . . . . . 34\n   8.  Intellectual Property
    Statement. . . . . . . . . . . . . . . . 34\n   9.  References . . . . . . . .
    . . . . . . . . . . . . . . . . . . 35\n       9.1.  Normative References . .
    . . . . . . . . . . . . . . . . 35\n       9.2.  Informative References . . .
    . . . . . . . . . . . . . . 35\n   10. Author's Address . . . . . . . . . . .
    . . . . . . . . . . . . 36\n   11. Full Copyright Statement . . . . . . . . .
    . . . . . . . . . . 37\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This document defines a Management Information Base (MIB)
    module for\n   managing multicast address allocation in a protocol-independent\n
    \  manner, as well as for managing specific protocols used in allocating\n   multicast
    addresses.  The protocol-independent objects in this MIB\n   apply to all multicast
    address allocation servers (MAASs) and\n   clients, as described in [ARCH], including
    those that allocate\n   source-specific multicast addresses for the local machine.\n
    \  The protocol-specific objects in this MIB include objects related to\n   the
    Multicast Address Dynamic Client Allocation Protocol (MADCAP)\n   [MADCAP].  Interactions
    with the Multicast-scope Zone Announcement\n   Protocol (MZAP) [MZAP] are also
    noted where appropriate.\n"
  title: 1.  Introduction
- contents:
  - "2.  The Internet-Standard Management Framework\n   For a detailed overview of
    the documents that describe the current\n   Internet-Standard Management Framework,
    please refer to section 7 of\n   RFC 3410 [RFC3410].\n   Managed objects are accessed
    via a virtual information store, termed\n   the Management Information Base or
    MIB.  MIB objects are generally\n   accessed through the Simple Network Management
    Protocol (SNMP).\n   Objects in the MIB are defined using the mechanisms defined
    in the\n   Structure of Management Information (SMI).  This memo specifies a MIB\n
    \  module that is compliant to the SMIv2, which is described in STD 58,\n   RFC
    2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58, RFC 2580\n   [RFC2580].\n"
  title: 2.  The Internet-Standard Management Framework
- contents:
  - "3.  Overview\n   The purpose of this MIB module is to provide the ability to
    configure\n   and monitor the status of multicast address allocation within the\n
    \  local domain.\n   Some important monitoring questions which can be answered
    by this MIB\n   module include:\n      o  How full is scope X?\n      o  Who's
    using up the space?\n      o  Who allocated a given address A?\n      o  Are requests
    being met?\n   This MIB module is divided into two primary sections:\n      o
    \ Protocol-independent objects relevant to all multicast address\n         allocation
    servers and clients.\n      o  Protocol-specific objects related to the MADCAP
    client-server\n         protocol.\n"
  - contents:
    - "3.1.  Protocol-independent objects\n   The protocol-independent objects consist
      of one \"capabilities\" scalar\n   and five tables.  The tables are:\n      o
      \ The Scope Table contains information on the multicast scopes\n         known
      to a multicast address allocation server.  This table\n         allows configuring
      scopes, and viewing what scopes are known to\n         the local system after
      being configured elsewhere.\n      o  The Scope Name Table contains the names
      of the multicast\n         scopes.  This table logically extends the Scope Table
      with the\n         list of scope names in various languages for each scope.\n
      \     o  The Allocation Range Table contains the address ranges out of\n         which
      the device may allocate addresses.  It also allows\n         answering the questions
      \"How full is scope X?\" and \"Are\n         requests being met?\"\n      o
      \ The Request Table contains the requests for address\n         allocations,
      and allows answering the question \"Who's using up\n         the space?\"\n
      \     o  The Address Table contains the blocks of addresses which have\n         been
      allocated, and together with the Request Table, allows\n         answering the
      question \"Who allocated a given address A?\"\n"
    title: 3.1.  Protocol-independent objects
  - contents:
    - "3.2.  Protocol-specific objects\n   The MADCAP objects consist of a group of
      (scalar) configuration\n   parameters, and a group of (scalar) statistics.\n"
    title: 3.2.  Protocol-specific objects
  title: 3.  Overview
- contents:
  - '4.  Definitions

    '
  - 'MALLOC-MIB DEFINITIONS ::= BEGIN

    '
  - "IMPORTS\n    MODULE-IDENTITY, OBJECT-TYPE, OBJECT-IDENTITY, mib-2,\n    Unsigned32,
    Gauge32, Counter32         FROM SNMPv2-SMI\n    RowStatus, TruthValue, StorageType
    \    FROM SNMPv2-TC\n    MODULE-COMPLIANCE, OBJECT-GROUP        FROM SNMPv2-CONF\n
    \   InetAddress, InetAddressType           FROM INET-ADDRESS-MIB\n    LanguageTag
    \                           FROM IPMROUTE-STD-MIB\n    SnmpAdminString                        FROM
    SNMP-FRAMEWORK-MIB\n    IANAscopeSource, IANAmallocRangeSource FROM IANA-MALLOC-MIB;\n"
  - "mallocMIB MODULE-IDENTITY\n    LAST-UPDATED \"200306090000Z\" -- June 9, 2003\n
    \   ORGANIZATION \"IETF MALLOC Working Group\"\n    CONTACT-INFO\n            \"
    WG-EMail:   malloc@catarina.usc.edu\n              Subscribe:  malloc-request@catarina.usc.edu\n
    \             Archive:    catarina.usc.edu/pub/multicast/malloc/\n              Co-chair/editor:\n
    \             Dave Thaler\n              Microsoft Corporation\n              One
    Microsoft Way\n              Redmond, WA 98052\n              EMail: dthaler@microsoft.com\n
    \             Co-chair:\n              Steve Hanna\n              Sun Microsystems,
    Inc.\n              One Network Drive\n              Burlington, MA 01803\n              EMail:
    steve.hanna@sun.com\"\n    DESCRIPTION\n            \"The MIB module for management
    of multicast address\n            allocation.\n            Copyright (C) The Internet
    Society (2003).  This version of\n            this MIB module is part of RFC 3559;
    see the RFC itself for\n            full legal notices.\"\n    -- revision log\n
    \   REVISION     \"200306090000Z\" -- June 9, 2003\n    DESCRIPTION\n            \"Initial
    version, published as RFC 3559.\"\n    ::= { mib-2 101 }\n"
  - 'mallocMIBObjects OBJECT IDENTIFIER ::= { mallocMIB 1 }

    '
  - 'malloc      OBJECT IDENTIFIER ::= { mallocMIBObjects 1 }

    '
  - 'madcap      OBJECT IDENTIFIER ::= { mallocMIBObjects 2 }

    '
  - '--

    '
  - '-- scalars

    '
  - '--

    '
  - "mallocCapabilities OBJECT-TYPE\n    SYNTAX     BITS {\n                   startTime(0),\n
    \                  serverMobility(1),\n                   retryAfter(2)\n               }\n
    \   MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n            \"This
    object describes the capabilities which a client or\n            server supports.
    \ The startTime bit indicates that\n            allocations with a future start
    time are supported.  The\n            serverMobility bit indicates that allocations
    can be renewed\n            or released from a server other than the one granting
    the\n            original allocation.  The retryAfter bit indicates support\n
    \           for a waiting state where the client may check back at a\n            later
    time to get the status of its request.\"\n    ::= { malloc 1 }\n"
  - '--

    '
  - '-- the Scope Table

    '
  - '--

    '
  - "mallocScopeTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF MallocScopeEntry\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The (conceptual)
    table containing information on multicast\n            scopes from which addresses
    may be allocated.  Entries in\n            this table may be dynamically discovered
    via some other\n            protocol, such as MZAP, or may be statically configured,\n
    \           such as in an isolated network environment.  Each scope is\n            associated
    with a range of multicast addresses, and ranges\n            for different rows
    must be disjoint.\"\n    ::= { malloc 2 }\n"
  - "mallocScopeEntry OBJECT-TYPE\n    SYNTAX     MallocScopeEntry\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"An entry
    (conceptual row) containing the information on a\n            particular multicast
    scope.\"\n    INDEX      { mallocScopeAddressType, mallocScopeFirstAddress }\n
    \   ::= { mallocScopeTable 1 }\n"
  - "MallocScopeEntry ::= SEQUENCE {\n    mallocScopeAddressType          InetAddressType,\n
    \   mallocScopeFirstAddress         InetAddress,\n    mallocScopeLastAddress          InetAddress,\n
    \   mallocScopeHopLimit             Unsigned32,\n    mallocScopeStatus               RowStatus,\n
    \   mallocScopeSource               IANAscopeSource,\n    mallocScopeDivisible
    \           TruthValue,\n    mallocScopeServerAddressType    InetAddressType,\n
    \   mallocScopeServerAddress        InetAddress,\n    mallocScopeSSM                  TruthValue,\n
    \   mallocScopeStorage              StorageType\n"
  - '}

    '
  - "mallocScopeAddressType OBJECT-TYPE\n    SYNTAX     InetAddressType\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The type
    of the addresses in the multicast scope range.\n            Legal values correspond
    to the subset of address families\n            for which multicast address allocation
    is supported.\"\n    ::= { mallocScopeEntry 1 }\n"
  - "mallocScopeFirstAddress OBJECT-TYPE\n    SYNTAX     InetAddress (SIZE(0..20))\n
    \   MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The
    first address in the multicast scope range.  The type\n            of this address
    is determined by the value of the\n            mallocScopeAddressType object.\"\n
    \   ::= { mallocScopeEntry 2 }\n"
  - "mallocScopeLastAddress OBJECT-TYPE\n    SYNTAX     InetAddress (SIZE(0..20))\n
    \   MAX-ACCESS read-create\n    STATUS     current\n    DESCRIPTION\n            \"The
    last address in the multicast scope range.  The type of\n            this address
    is determined by the value of the\n            mallocScopeAddressType object.\"\n
    \   ::= { mallocScopeEntry 3 }\n"
  - "mallocScopeHopLimit OBJECT-TYPE\n    SYNTAX     Unsigned32 (0..255)\n    MAX-ACCESS
    read-create\n    STATUS     current\n    DESCRIPTION\n            \"The default
    IPv4 TTL or IPv6 hop limit which applications\n            should use for groups
    within the scope.\"\n    DEFVAL     { 255 }\n    ::= { mallocScopeEntry 4 }\n"
  - "mallocScopeStatus OBJECT-TYPE\n    SYNTAX     RowStatus\n    MAX-ACCESS read-create\n
    \   STATUS     current\n    DESCRIPTION\n            \"The status of this row,
    by which new entries may be\n            created, or old entries deleted from
    this table.  If write\n            access is supported, the other writable objects
    in this\n            table may be modified even while the status is `active'.\"\n
    \   ::= { mallocScopeEntry 5 }\n"
  - "mallocScopeSource OBJECT-TYPE\n    SYNTAX     IANAscopeSource\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The method by
    which this entry was learned.\"\n    ::= { mallocScopeEntry 6 }\n"
  - "mallocScopeDivisible OBJECT-TYPE\n    SYNTAX     TruthValue\n    MAX-ACCESS read-create\n
    \   STATUS     current\n    DESCRIPTION\n            \"If false, the server may
    allocate addresses out of the\n            entire range.  If true, the server
    must not allocate\n            addresses out of the entire range, but may only
    allocate\n            addresses out of a subrange learned via another method.\n
    \           Creating or deleting a scope which is not divisible has the\n            side
    effect of creating or deleting the corresponding entry\n            in the mallocAllocRangeTable.
    \ Deleting a scope which is\n            divisible has the side effect of deleting
    any corresponding\n            entries in the mallocAllocRangeTable, and the\n
    \           mallocRequestTable.\"\n    DEFVAL     { false }\n    ::= { mallocScopeEntry
    7 }\n"
  - "mallocScopeServerAddressType OBJECT-TYPE\n    SYNTAX     InetAddressType\n    MAX-ACCESS
    read-create\n    STATUS     current\n    DESCRIPTION\n            \"The type of
    the address of a multicast address allocation\n            server to which a request
    may be sent.\"\n    DEFVAL { unknown }\n    ::= { mallocScopeEntry 8 }\n"
  - "mallocScopeServerAddress OBJECT-TYPE\n    SYNTAX     InetAddress\n    MAX-ACCESS
    read-create\n    STATUS     current\n    DESCRIPTION\n            \"The address
    of a multicast address allocation server to\n            which a request may be
    sent.  The default value is an zero-\n            length address, indicating that
    no server is known.  The\n            type of this address is determined by the
    value of the\n            mallocScopeServerAddressType object.\"\n    DEFVAL {
    ''h } -- the empty string\n    ::= { mallocScopeEntry 9 }\n"
  - "mallocScopeSSM OBJECT-TYPE\n    SYNTAX     TruthValue\n    MAX-ACCESS read-create\n
    \   STATUS     current\n    DESCRIPTION\n            \"Indicates whether the scope
    is a Source-Specific Multicast\n            (SSM) range.\"\n    DEFVAL     { false
    }\n    ::= { mallocScopeEntry 10 }\n"
  - "mallocScopeStorage OBJECT-TYPE\n    SYNTAX     StorageType\n    MAX-ACCESS read-create\n
    \   STATUS     current\n    DESCRIPTION\n            \"The storage type for this
    conceptual row.  Conceptual rows\n            having the value 'permanent' need
    not allow write-access to\n            any columnar objects in the row.\"\n    DEFVAL
    \    { nonVolatile }\n    ::= { mallocScopeEntry 11 }\n"
  - '--

    '
  - '-- the Scope Name Table

    '
  - '--

    '
  - "mallocScopeNameTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF MallocScopeNameEntry\n
    \   MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The
    (conceptual) table containing information on multicast\n            scope names.
    \ Entries in this table may be dynamically\n            discovered via some other
    protocol, such as MZAP, or may be\n            statically configured, such as
    in an isolated network\n            environment.\"\n    ::= { malloc 3 }\n"
  - "mallocScopeNameEntry OBJECT-TYPE\n    SYNTAX     MallocScopeNameEntry\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"An entry
    (conceptual row) containing the information on a\n            particular multicast
    scope name.\"\n    INDEX      { mallocScopeAddressType, mallocScopeFirstAddress,\n
    \                IMPLIED mallocScopeNameLangName }\n    ::= { mallocScopeNameTable
    1 }\n"
  - "MallocScopeNameEntry ::= SEQUENCE {\n    mallocScopeNameLangName         LanguageTag,\n
    \   mallocScopeNameScopeName        SnmpAdminString,\n    mallocScopeNameDefault
    \         TruthValue,\n    mallocScopeNameStatus           RowStatus,\n    mallocScopeNameStorage
    \         StorageType\n"
  - '}

    '
  - "mallocScopeNameLangName OBJECT-TYPE\n    SYNTAX     LanguageTag (SIZE(1..94))\n
    \   MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The
    RFC 3066 language tag for the language of the scope\n            name.\"\n    ::=
    { mallocScopeNameEntry 1 }\n"
  - "mallocScopeNameScopeName OBJECT-TYPE\n    SYNTAX     SnmpAdminString\n    MAX-ACCESS
    read-create\n    STATUS     current\n    DESCRIPTION\n            \"The textual
    name associated with the multicast scope.  The\n            value of this object
    should be suitable for displaying to\n            end-users, such as when allocating
    a multicast address in\n            this scope.  If the scope is an IPv4 scope,
    and no name is\n            specified, the default value of this object should
    be the\n            string 239.x.x.x/y with x and y replaced appropriately to\n
    \           describe the address and mask length associated with the\n            scope.
    \ If the scope is an IPv6 scope, and no name is\n            specified, the default
    value of this object should\n            generically describe the scope level
    (e.g., site).\"\n    ::= { mallocScopeNameEntry 2 }\n"
  - "mallocScopeNameDefault OBJECT-TYPE\n    SYNTAX     TruthValue\n    MAX-ACCESS
    read-create\n    STATUS     current\n    DESCRIPTION\n            \"If true, indicates
    a preference that the name in the\n            associated language should be used
    by applications if no\n            name is available in a desired language.\"\n
    \   DEFVAL     { false }\n    ::= { mallocScopeNameEntry 3 }\n"
  - "mallocScopeNameStatus OBJECT-TYPE\n    SYNTAX     RowStatus\n    MAX-ACCESS read-create\n
    \   STATUS     current\n    DESCRIPTION\n            \"The status of this row,
    by which new entries may be\n            created, or old entries deleted from
    this table.  If write\n            access is supported, the other writable objects
    in this\n            table may be modified even while the status is `active'.\"\n
    \   ::= { mallocScopeNameEntry 4 }\n"
  - "mallocScopeNameStorage OBJECT-TYPE\n    SYNTAX     StorageType\n    MAX-ACCESS
    read-create\n    STATUS     current\n    DESCRIPTION\n            \"The storage
    type for this conceptual row.  Conceptual rows\n            having the value 'permanent'
    need not allow write-access to\n            any columnar objects in the row.\"\n
    \   DEFVAL     { nonVolatile }\n    ::= { mallocScopeNameEntry 5 }\n"
  - '--

    '
  - '-- the Allocation Range Table

    '
  - '--

    '
  - "mallocAllocRangeTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF MallocAllocRangeEntry\n
    \   MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The
    (conceptual) table containing information on subranges\n            of addresses
    from which the device may allocate addresses,\n            if it is a MAAS.  If
    the device is a Prefix Coordinator, any\n            ranges which the device is
    advertising to MAAS's will be in\n            this table.  Note that the device
    may be both a MAAS and a\n            Prefix Coordinator.\n            Address
    ranges for different rows must be disjoint, and must\n            be contained
    with the address range of the corresponding row\n            of the mallocScopeTable.\n
    \           Deleting an allocation range has the side effect of deleting\n            any
    entries within that range from the mallocAddressTable.\"\n    ::= { malloc 4 }\n"
  - "mallocAllocRangeEntry OBJECT-TYPE\n    SYNTAX     MallocAllocRangeEntry\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"An entry
    (conceptual row) containing the information on a\n            particular allocation
    range.\"\n    INDEX      { mallocScopeAddressType, mallocScopeFirstAddress,\n
    \                mallocAllocRangeFirstAddress }\n    ::= { mallocAllocRangeTable
    1 }\n"
  - "MallocAllocRangeEntry ::= SEQUENCE {\n    mallocAllocRangeFirstAddress        InetAddress,\n
    \   mallocAllocRangeLastAddress         InetAddress,\n    mallocAllocRangeStatus
    \             RowStatus,\n    mallocAllocRangeSource              IANAmallocRangeSource,\n
    \   mallocAllocRangeLifetime            Unsigned32,\n    mallocAllocRangeMaxLeaseAddrs
    \      Unsigned32,\n    mallocAllocRangeMaxLeaseTime        Unsigned32,\n    mallocAllocRangeNumAllocatedAddrs
    \  Gauge32,\n    mallocAllocRangeNumOfferedAddrs     Gauge32,\n    mallocAllocRangeNumWaitingAddrs
    \    Gauge32,\n    mallocAllocRangeNumTryingAddrs      Gauge32,\n    mallocAllocRangeAdvertisable
    \       TruthValue,\n    mallocAllocRangeTotalAllocatedAddrs Gauge32,\n    mallocAllocRangeTotalRequestedAddrs
    Gauge32,\n    mallocAllocRangeStorage             StorageType\n"
  - '}

    '
  - "mallocAllocRangeFirstAddress OBJECT-TYPE\n    SYNTAX     InetAddress (SIZE(0..20))\n
    \   MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The
    first address in the allocation range.  The type of\n            this address
    is determined by the value of the\n            mallocScopeAddressType object.\"\n
    \   ::= { mallocAllocRangeEntry 1 }\n"
  - "mallocAllocRangeLastAddress OBJECT-TYPE\n    SYNTAX     InetAddress (SIZE(0..20))\n
    \   MAX-ACCESS read-create\n    STATUS     current\n    DESCRIPTION\n            \"The
    last address in the allocation range.  The type of this\n            address is
    determined by the value of the\n            mallocScopeAddressType object.\"\n
    \   ::= { mallocAllocRangeEntry 2 }\n"
  - "mallocAllocRangeStatus OBJECT-TYPE\n    SYNTAX     RowStatus\n    MAX-ACCESS
    read-create\n    STATUS     current\n    DESCRIPTION\n            \"The status
    of this row, by which new entries may be\n            created, or old entries
    deleted from this table.  If write\n            access is supported, the other
    writable objects in this\n            table may be modified even while the status
    is `active'.\"\n    ::= { mallocAllocRangeEntry 3 }\n"
  - "mallocAllocRangeSource OBJECT-TYPE\n    SYNTAX     IANAmallocRangeSource\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The means by
    which this entry was learned.\"\n    ::= { mallocAllocRangeEntry 4 }\n"
  - "mallocAllocRangeLifetime OBJECT-TYPE\n    SYNTAX     Unsigned32\n    UNITS      \"seconds\"\n
    \   MAX-ACCESS read-create\n    STATUS     current\n    DESCRIPTION\n            \"The
    number of seconds remaining in the lifetime of the\n            (sub)range out
    of which addresses are being allocated.  A\n            value of 0 indicates that
    the range is not subject to\n            aging.\"\n    DEFVAL     { 0 }\n    ::=
    { mallocAllocRangeEntry 5 }\n"
  - "mallocAllocRangeMaxLeaseAddrs OBJECT-TYPE\n    SYNTAX     Unsigned32\n    MAX-ACCESS
    read-create\n    STATUS     current\n    DESCRIPTION\n            \"The maximum
    number of addresses which the server is willing\n            to grant for each
    future request in this range.  A value of\n            0 means that no specific
    limit is enforced, as long as the\n            server has valid addresses to allocate.\"\n
    \   DEFVAL { 0 }\n    ::= { mallocAllocRangeEntry 6 }\n"
  - "mallocAllocRangeMaxLeaseTime OBJECT-TYPE\n    SYNTAX     Unsigned32\n    UNITS
    \     \"seconds\"\n    MAX-ACCESS read-create\n    STATUS     current\n    DESCRIPTION\n
    \           \"The maximum lifetime which the server will grant for future\n            requests
    in this range.  A value of 0 means that no\n            additional limit is enforced
    beyond that of\n            mallocAllocRangeLifetime.\"\n    DEFVAL { 0 }\n    ::=
    { mallocAllocRangeEntry 7 }\n"
  - "mallocAllocRangeNumAllocatedAddrs OBJECT-TYPE\n    SYNTAX     Gauge32\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The number of
    addresses in the range which have been\n            allocated.  This value can
    be used to determine the current\n            address space utilization within
    the scoped range.  This\n            should match the total number of addresses
    for this scope\n            covered by entries in the mallocAddressTable.\"\n
    \   ::= { mallocAllocRangeEntry 8 }\n"
  - "mallocAllocRangeNumOfferedAddrs OBJECT-TYPE\n    SYNTAX     Gauge32\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The number of
    addresses in the range which have been\n            offered.  This number should
    match the sum of\n            mallocRequestNumAddrs for all entries in the\n            mallocRequestTable
    in the offered state.  Together with\n            mallocAllocRangeNumAllocatedAddrs
    and\n            mallocAllocRangeNumTryingAddrs, this can be used to\n            determine
    the address space utilization within the scoped\n            range in the immediate
    future.\"\n    ::= { mallocAllocRangeEntry 9 }\n"
  - "mallocAllocRangeNumWaitingAddrs OBJECT-TYPE\n    SYNTAX     Gauge32\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The number of
    addresses in the range which have been\n            requested, but whose state
    is waiting, while the server\n            attempts to acquire more address space.\"\n
    \   ::= { mallocAllocRangeEntry 10 }\n"
  - "mallocAllocRangeNumTryingAddrs OBJECT-TYPE\n    SYNTAX     Gauge32\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The number of
    addresses in the scope covered by entries in\n            the mallocRequestTable
    in the trying state.\"\n    ::= { mallocAllocRangeEntry 11 }\n"
  - "mallocAllocRangeAdvertisable OBJECT-TYPE\n    SYNTAX     TruthValue\n    MAX-ACCESS
    read-create\n    STATUS     current\n    DESCRIPTION\n            \"The value
    of this object is true if the range is eligible\n            to be advertised
    to other MAASs.  When the row is first\n            created, the default value
    of this object is true if the\n            scope is divisible, and is false otherwise.\"\n
    \   ::= { mallocAllocRangeEntry 12 }\n"
  - "mallocAllocRangeTotalAllocatedAddrs OBJECT-TYPE\n    SYNTAX     Gauge32\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The approximate
    number of addresses in the range which have\n            been allocated by any
    MAAS, as determined by a Prefix\n            Coordinator.  This object need only
    be present if\n            mallocAllocRangeAdvertisable is true.  If the number
    is\n            unknown, a value of 0 may be reported.\"\n    ::= { mallocAllocRangeEntry
    13 }\n"
  - "mallocAllocRangeTotalRequestedAddrs OBJECT-TYPE\n    SYNTAX     Gauge32\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The approximate
    number of addresses in the range for which\n            there is potential demand
    among MAASs, as determined by a\n            Prefix Coordinator.  This object
    need only be present if\n            mallocAllocRangeAdvertisable is true.  If
    the number is\n            unknown, a value of 0 may be reported.\"\n    ::= {
    mallocAllocRangeEntry 14 }\n"
  - "mallocAllocRangeStorage OBJECT-TYPE\n    SYNTAX     StorageType\n    MAX-ACCESS
    read-create\n    STATUS     current\n    DESCRIPTION\n            \"The storage
    type for this conceptual row.  Conceptual rows\n            having the value 'permanent'
    need not allow write-access to\n            any columnar objects in the row.\"\n
    \   DEFVAL     { nonVolatile }\n    ::= { mallocAllocRangeEntry 15 }\n"
  - '--

    '
  - '-- the Request Table

    '
  - '--

    '
  - "mallocRequestTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF MallocRequestEntry\n
    \   MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The
    (conceptual) table containing information on allocation\n            requests,
    whether allocated or in progress.  This table may\n            also be used to
    determine which clients are responsible for\n            high address space utilization
    within a given scope.\n            Entries in this table reflect requests dynamically
    received\n            by an address allocation protocol.\"\n    ::= { malloc 5
    }\n"
  - "mallocRequestEntry OBJECT-TYPE\n    SYNTAX     MallocRequestEntry\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"An entry
    (conceptual row) containing the information on a\n            particular allocation
    request.\"\n    INDEX      { mallocRequestId }\n    ::= { mallocRequestTable 1
    }\n"
  - "MallocRequestEntry ::= SEQUENCE {\n    mallocRequestId                      Unsigned32,\n
    \   mallocRequestScopeAddressType        InetAddressType,\n    mallocRequestScopeFirstAddress
    \      InetAddress,\n    mallocRequestStartTime               Unsigned32,\n    mallocRequestEndTime
    \                Unsigned32,\n    mallocRequestNumAddrs                Unsigned32,\n
    \   mallocRequestState                   INTEGER,\n    mallocRequestClientAddressType
    \      InetAddressType,\n    mallocRequestClientAddress           InetAddress,\n
    \   mallocRequestServerAddressType       InetAddressType,\n    mallocRequestServerAddress
    \          InetAddress,\n    mallocRequestLeaseIdentifier         OCTET STRING\n"
  - '}

    '
  - "mallocRequestId OBJECT-TYPE\n    SYNTAX     Unsigned32 (1..4294967295)\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"An arbitrary
    value identifying this row.\"\n    ::= { mallocRequestEntry 1 }\n"
  - "mallocRequestScopeAddressType OBJECT-TYPE\n    SYNTAX     InetAddressType\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The type of
    the first address of the scope to which the\n            request applies.  Legal
    values correspond to the subset of\n            address families for which multicast
    address allocation is\n            supported.\"\n    ::= { mallocRequestEntry
    2 }\n"
  - "mallocRequestScopeFirstAddress OBJECT-TYPE\n    SYNTAX     InetAddress\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The first address
    of the scope to which the request\n            applies.  This must match mallocScopeFirstAddress
    for some\n            row in the mallocScopeTable.  The type of this address is\n
    \           determined by the value of the mallocRequestScopeAddressType\n            object.\"\n
    \   ::= { mallocRequestEntry 3 }\n"
  - "mallocRequestStartTime OBJECT-TYPE\n    SYNTAX     Unsigned32\n    UNITS      \"seconds\"\n
    \   MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n            \"The
    number of seconds remaining before the start time of\n            the request.
    \ A value of 0 means that the allocation is\n            currently in effect.\"\n
    \   ::= { mallocRequestEntry 4 }\n"
  - "mallocRequestEndTime OBJECT-TYPE\n    SYNTAX     Unsigned32\n    UNITS      \"seconds\"\n
    \   MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n            \"The
    number of seconds remaining before the end time of the\n            request.\"\n
    \   ::= { mallocRequestEntry 5 }\n"
  - "mallocRequestNumAddrs OBJECT-TYPE\n    SYNTAX     Unsigned32\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The number of
    addresses requested.  If the addresses have\n            been allocated, this
    number should match the total number of\n            addresses for this request
    covered by entries in the\n            mallocAddressTable.\"\n    ::= { mallocRequestEntry
    6 }\n"
  - "mallocRequestState OBJECT-TYPE\n    SYNTAX     INTEGER {\n                   allocated(1),\n
    \                  offered(2),   -- tentatively allocated\n                   waiting(3),
    \  -- waiting for more space\n                   trying(4)     -- working on allocating\n
    \              }\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n
    \           \"The state of the request.  A value of allocated(1)\n            indicates
    that one or more entries for this request are\n            present in the mallocAddressTable.
    \ A value of offered(2)\n            indicates that addresses have been offered
    to the client\n            (e.g. via a MADCAP OFFER message), but the allocation
    has\n            not been committed.  A value of waiting(3) indicates that\n            the
    allocation is blocked while the server attempts to\n            acquire more space
    from which it can allocate addresses.  A\n            value of trying(4) means
    that no addresses have been offered\n            to the client, but that an attempt
    to allocate is in\n            progress.\"\n    ::= { mallocRequestEntry 7 }\n"
  - "mallocRequestClientAddressType OBJECT-TYPE\n    SYNTAX     InetAddressType\n
    \   MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n            \"The
    type of the address of the client that (last) requested\n            this allocation.\"\n
    \   ::= { mallocRequestEntry 8 }\n"
  - "mallocRequestClientAddress OBJECT-TYPE\n    SYNTAX     InetAddress\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The address
    of the client that (last) requested this\n            allocation.  The type of
    this address is determined by the\n            value of the mallocRequestClientAddressType
    object.\"\n    ::= { mallocRequestEntry 9 }\n"
  - "mallocRequestServerAddressType OBJECT-TYPE\n    SYNTAX     InetAddressType\n
    \   MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n            \"The
    type of the address of the server to which the request\n            was (last)
    sent.\"\n    ::= { mallocRequestEntry 10 }\n"
  - "mallocRequestServerAddress OBJECT-TYPE\n    SYNTAX     InetAddress\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The address
    of the server to which the request was (last)\n            sent.  The type of
    this address is determined by the value\n            of the mallocRequestServerAddressType
    object.\"\n    ::= { mallocRequestEntry 11 }\n"
  - "mallocRequestLeaseIdentifier OBJECT-TYPE\n    SYNTAX     OCTET STRING (SIZE (0..255))\n
    \   MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n            \"The
    Lease Identifier of this request.  If the allocation\n            mechanism in
    use does not use Lease Identifiers, then the\n            value is a 0-length
    string.\"\n    ::= { mallocRequestEntry 12 }\n"
  - '--

    '
  - '-- the Address Table

    '
  - '--

    '
  - "mallocAddressTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF MallocAddressEntry\n
    \   MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The
    (conceptual) table containing information on blocks of\n            allocated
    addresses.  This table may be used to map a given\n            multicast group
    address to the associated request.\"\n    ::= { malloc 6 }\n"
  - "mallocAddressEntry OBJECT-TYPE\n    SYNTAX     MallocAddressEntry\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"An entry
    (conceptual row) containing the information on a\n            particular block
    of allocated addresses.  The block of\n            addresses covered by each entry
    in this table must fall\n            within a range corresponding to an entry
    in the\n            mallocAllocRangeTable.\"\n    INDEX      { mallocAddressAddressType,
    mallocAddressFirstAddress }\n    ::= { mallocAddressTable 1 }\n"
  - "MallocAddressEntry ::= SEQUENCE {\n    mallocAddressAddressType             InetAddressType,\n
    \   mallocAddressFirstAddress            InetAddress,\n    mallocAddressNumAddrs
    \               Unsigned32,\n    mallocAddressRequestId               Unsigned32\n"
  - '}

    '
  - "mallocAddressAddressType OBJECT-TYPE\n    SYNTAX     InetAddressType\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The type
    of the first address in the allocated block.\n            Legal values correspond
    to the subset of address families\n            for which multicast address allocation
    is supported.\"\n    ::= { mallocAddressEntry 1 }\n"
  - "mallocAddressFirstAddress OBJECT-TYPE\n    SYNTAX     InetAddress (SIZE(0..20))\n
    \   MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n            \"The
    first address in the allocated block.  The type of this\n            address is
    determined by the value of the\n            mallocAddressAddressType object.\"\n
    \   ::= { mallocAddressEntry 2 }\n"
  - "mallocAddressNumAddrs OBJECT-TYPE\n    SYNTAX     Unsigned32\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The number of
    addresses in the allocated block.\"\n    ::= { mallocAddressEntry 3 }\n"
  - "mallocAddressRequestId OBJECT-TYPE\n    SYNTAX     Unsigned32\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The index of
    the request which caused this block of\n            addresses to be allocated.
    \ This value must match the value\n            of mallocRequestId for some entry
    in the\n            mallocRequestTable.\"\n    ::= { mallocAddressEntry 4 }\n"
  - '--

    '
  - '-- MADCAP-specific objects

    '
  - '--

    '
  - "madcapConfig OBJECT-IDENTITY\n    STATUS     current\n    DESCRIPTION\n            \"Group
    of objects that count various MADCAP events.\"\n    ::= { madcap 1 }\n"
  - "madcapConfigExtraAllocationTime OBJECT-TYPE\n    SYNTAX     Unsigned32\n    UNITS
    \     \"seconds\"\n    MAX-ACCESS read-write\n    STATUS     current\n    DESCRIPTION\n
    \           \"The amount of extra time on either side of a lease which\n            the
    MADCAP server allocates to allow for clock skew among\n            clients.\"\n
    \   ::= { madcapConfig 1 }\n"
  - "madcapConfigNoResponseDelay OBJECT-TYPE\n    SYNTAX     Unsigned32\n    UNITS
    \     \"seconds\"\n    MAX-ACCESS read-write\n    STATUS     current\n    DESCRIPTION\n
    \           \"The amount of time the MADCAP client allows for receiving a\n            response
    from a MADCAP server.\"\n    ::= { madcapConfig 2 }\n"
  - "madcapConfigOfferHold OBJECT-TYPE\n    SYNTAX     Unsigned32\n    UNITS      \"seconds\"\n
    \   MAX-ACCESS read-write\n    STATUS     current\n    DESCRIPTION\n            \"The
    amount of time the MADCAP server will reserve an\n            address for after
    sending an OFFER message in anticipation\n            of receiving a REQUEST message.\"\n
    \   ::= { madcapConfig 3 }\n"
  - "madcapConfigResponseCacheInterval OBJECT-TYPE\n    SYNTAX     Unsigned32 (0..300)\n
    \   UNITS      \"seconds\"\n    MAX-ACCESS read-write\n    STATUS     current\n
    \   DESCRIPTION\n            \"The amount of time the MADCAP server uses to detect\n
    \           duplicate messages.\"\n    ::= { madcapConfig 4 }\n"
  - "madcapConfigClockSkewAllowance OBJECT-TYPE\n    SYNTAX     Unsigned32\n    UNITS
    \     \"seconds\"\n    MAX-ACCESS read-write\n    STATUS     current\n    DESCRIPTION\n
    \           \"The clock skew threshold used by the MADCAP server to\n            generate
    Excessive Clock Skew errors.\"\n    ::= { madcapConfig 5 }\n"
  - "madcapCounters OBJECT-IDENTITY\n    STATUS     current\n    DESCRIPTION\n            \"A
    group of objects that count various MADCAP events.\"\n    ::= { madcap 2 }\n"
  - "madcapTotalErrors OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n
    \   STATUS     current\n    DESCRIPTION\n            \"The total number of transactions
    for which the MADCAP\n            server has detected an error of any type, regardless
    of\n            whether the server ignored the request or generated a NAK.\"\n
    \   ::= { madcapCounters 1 }\n"
  - "madcapRequestsDenied OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n
    \   STATUS     current\n    DESCRIPTION\n            \"The number of valid requests
    for which the MADCAP server\n            could not complete an allocation, regardless
    of whether NAKs\n            were sent.  This corresponds to the Valid Request
    Could Not\n            Be Completed error code in MADCAP.\"\n    ::= { madcapCounters
    2 }\n"
  - "madcapInvalidRequests OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n
    \   STATUS     current\n    DESCRIPTION\n            \"The number of invalid requests
    received by the MADCAP\n            server, regardless of whether NAKs were sent.
    \ This\n            corresponds to the Invalid Request error code in MADCAP.\"\n
    \   ::= { madcapCounters 3 }\n"
  - "madcapExcessiveClockSkews OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n            \"The number of
    requests received by the MADCAP server with\n            an excessive clock skew,
    regardless of whether NAKs were\n            sent.  This corresponds to the Excessive
    Clock Skew error\n            code in MADCAP.\"\n    ::= { madcapCounters 4 }\n"
  - "madcapBadLeaseIds OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n
    \   STATUS     current\n    DESCRIPTION\n            \"The number of requests
    received by the MADCAP server with\n            an unrecognized Lease Identifier,
    regardless of whether NAKs\n            were sent.  This corresponds to the Lease
    Identifier Not\n            Recognized error code in MADCAP.\"\n    ::= { madcapCounters
    5 }\n"
  - "madcapDiscovers OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n
    \   STATUS     current\n    DESCRIPTION\n            \"The number of DISCOVER
    messages received by the MADCAP\n            server.\"\n    ::= { madcapCounters
    6 }\n"
  - "madcapInforms OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n
    \   STATUS     current\n    DESCRIPTION\n            \"The number of INFORM messages
    received by the MADCAP\n            server.\"\n    ::= { madcapCounters 7 }\n"
  - "madcapRequests OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n
    \   STATUS     current\n    DESCRIPTION\n            \"The number of REQUEST messages
    received by the MADCAP\n            server.\"\n    ::= { madcapCounters 8 }\n"
  - "madcapRenews OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n
    \   STATUS     current\n    DESCRIPTION\n            \"The number of RENEW messages
    received by the MADCAP\n            server.\"\n    ::= { madcapCounters 9 }\n"
  - "madcapReleases OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n
    \   STATUS     current\n    DESCRIPTION\n            \"The number of RELEASE messages
    received by the MADCAP\n            server.\"\n    ::= { madcapCounters 10 }\n"
  - '-- conformance information

    '
  - 'mallocConformance  OBJECT IDENTIFIER ::= { mallocMIB 2 }

    '
  - 'mallocCompliances  OBJECT IDENTIFIER ::= { mallocConformance 1 }

    '
  - 'mallocGroups       OBJECT IDENTIFIER ::= { mallocConformance 2 }

    '
  - '-- compliance statements

    '
  - "mallocServerReadOnlyCompliance MODULE-COMPLIANCE\n    STATUS  current\n    DESCRIPTION\n
    \           \"The compliance statement for multicast address allocation\n            servers
    implementing the MALLOC MIB without support for\n            read-create (i.e.,
    in read-only mode).  Such a server can\n            then be monitored but can
    not be configured with this MIB.\"\n    MODULE  -- this module\n    MANDATORY-GROUPS
    { mallocBasicGroup,\n                       mallocServerGroup }\n        OBJECT
    \     mallocScopeLastAddress\n        MIN-ACCESS  read-only\n        DESCRIPTION\n
    \           \"Write access is not required.\"\n        OBJECT      mallocScopeHopLimit\n
    \       MIN-ACCESS  read-only\n        DESCRIPTION\n            \"Write access
    is not required.\"\n        OBJECT      mallocScopeStatus\n        MIN-ACCESS
    \ read-only\n        DESCRIPTION\n            \"Write access is not required.\"\n
    \       OBJECT      mallocScopeDivisible\n        MIN-ACCESS  read-only\n        DESCRIPTION\n
    \           \"Write access is not required.\"\n        OBJECT      mallocScopeSSM\n
    \       MIN-ACCESS  read-only\n        DESCRIPTION\n            \"Write access
    is not required.\"\n        OBJECT      mallocScopeStorage\n        MIN-ACCESS
    \ read-only\n        DESCRIPTION\n            \"Write access is not required.\"\n
    \       OBJECT      mallocScopeNameScopeName\n        MIN-ACCESS  read-only\n
    \       DESCRIPTION\n            \"Write access is not required.\"\n        OBJECT
    \     mallocScopeNameDefault\n        MIN-ACCESS  read-only\n        DESCRIPTION\n
    \           \"Write access is not required.\"\n        OBJECT      mallocScopeNameStatus\n
    \       MIN-ACCESS  read-only\n        DESCRIPTION\n            \"Write access
    is not required.\"\n        OBJECT      mallocScopeNameStorage\n        MIN-ACCESS
    \ read-only\n        DESCRIPTION\n            \"Write access is not required.\"\n
    \       OBJECT      mallocAllocRangeLastAddress\n        MIN-ACCESS  read-only\n
    \       DESCRIPTION\n            \"Write access is not required.\"\n        OBJECT
    \     mallocAllocRangeStatus\n        MIN-ACCESS  read-only\n        DESCRIPTION\n
    \           \"Write access is not required.\"\n        OBJECT      mallocAllocRangeLifetime\n
    \       MIN-ACCESS  read-only\n        DESCRIPTION\n            \"Write access
    is not required.\"\n        OBJECT      mallocAllocRangeMaxLeaseAddrs\n        MIN-ACCESS
    \ read-only\n        DESCRIPTION\n            \"Write access is not required.\"\n
    \       OBJECT      mallocAllocRangeMaxLeaseTime\n        MIN-ACCESS  read-only\n
    \       DESCRIPTION\n            \"Write access is not required.\"\n        OBJECT
    \     mallocAllocRangeStorage\n        MIN-ACCESS  read-only\n        DESCRIPTION\n
    \           \"Write access is not required.\"\n    GROUP  madcapServerGroup\n
    \   DESCRIPTION\n            \"This group is mandatory for servers which implement
    the\n            MADCAP client-server protocol.\"\n        OBJECT      madcapConfigExtraAllocationTime\n
    \       MIN-ACCESS  read-only\n        DESCRIPTION\n            \"Write access
    is not required.\"\n        OBJECT      madcapConfigOfferHold\n        MIN-ACCESS
    \ read-only\n        DESCRIPTION\n            \"Write access is not required.\"\n
    \       OBJECT      madcapConfigResponseCacheInterval\n        MIN-ACCESS  read-only\n
    \       DESCRIPTION\n            \"Write access is not required.\"\n        OBJECT
    \     madcapConfigClockSkewAllowance\n        MIN-ACCESS  read-only\n        DESCRIPTION\n
    \           \"Write access is not required.\"\n   ::= { mallocCompliances 1 }\n"
  - "mallocClientReadOnlyCompliance MODULE-COMPLIANCE\n    STATUS  current\n    DESCRIPTION\n
    \           \"The compliance statement for clients implementing the\n            MALLOC
    MIB without support for read-create (i.e., in read-\n            only mode).  Such
    clients can then be monitored but can not\n            be configured with this
    MIB.\"\n    MODULE  -- this module\n    MANDATORY-GROUPS { mallocBasicGroup,\n
    \                      mallocClientGroup }\n    GROUP  mallocClientScopeGroup\n
    \   DESCRIPTION\n            \"This group is mandatory for clients which maintain
    a list\n            of multicast scopes.\"\n        OBJECT      mallocScopeLastAddress\n
    \       MIN-ACCESS  read-only\n        DESCRIPTION\n            \"Write access
    is not required.\"\n        OBJECT      mallocScopeHopLimit\n        MIN-ACCESS
    \ read-only\n        DESCRIPTION\n            \"Write access is not required.\"\n
    \       OBJECT      mallocScopeStatus\n        MIN-ACCESS  read-only\n        DESCRIPTION\n
    \           \"Write access is not required.\"\n        OBJECT      mallocScopeServerAddressType\n
    \       MIN-ACCESS  read-only\n        DESCRIPTION\n            \"Write access
    is not required.\"\n        OBJECT      mallocScopeServerAddress\n        MIN-ACCESS
    \ read-only\n        DESCRIPTION\n            \"Write access is not required.\"\n
    \       OBJECT      mallocScopeSSM\n        MIN-ACCESS  read-only\n        DESCRIPTION\n
    \           \"Write access is not required.\"\n        OBJECT      mallocScopeStorage\n
    \       MIN-ACCESS  read-only\n        DESCRIPTION\n            \"Write access
    is not required.\"\n    GROUP  madcapClientGroup\n    DESCRIPTION\n            \"This
    group is mandatory for clients which implement the\n            MADCAP client-server
    protocol.\"\n        OBJECT      madcapConfigNoResponseDelay\n        MIN-ACCESS
    \ read-only\n        DESCRIPTION\n            \"Write access is not required.\"\n
    \  ::= { mallocCompliances 2 }\n"
  - "mallocPrefixCoordinatorReadOnlyCompliance MODULE-COMPLIANCE\n    STATUS  current\n
    \   DESCRIPTION\n            \"The compliance statement for prefix coordinators\n
    \           implementing the MALLOC MIB without support for read-create\n            (i.e.,
    in read-only mode).  Such devices can then be\n            monitored but can not
    be configured with this MIB.\"\n    MODULE  -- this module\n    MANDATORY-GROUPS
    { mallocBasicGroup,\n                       mallocPrefixCoordinatorGroup }\n        OBJECT
    \     mallocScopeLastAddress\n        MIN-ACCESS  read-only\n        DESCRIPTION\n
    \           \"Write access is not required.\"\n        OBJECT      mallocScopeDivisible\n
    \       MIN-ACCESS  read-only\n        DESCRIPTION\n            \"Write access
    is not required.\"\n        OBJECT      mallocAllocRangeLastAddress\n        MIN-ACCESS
    \ read-only\n        DESCRIPTION\n            \"Write access is not required.\"\n
    \       OBJECT      mallocAllocRangeStatus\n        MIN-ACCESS  read-only\n        DESCRIPTION\n
    \           \"Write access is not required.\"\n        OBJECT      mallocAllocRangeLifetime\n
    \       MIN-ACCESS  read-only\n        DESCRIPTION\n            \"Write access
    is not required.\"\n        OBJECT      mallocAllocRangeAdvertisable\n        MIN-ACCESS
    \ read-only\n        DESCRIPTION\n            \"Write access is not required.\"\n
    \       OBJECT      mallocAllocRangeStorage\n        MIN-ACCESS  read-only\n        DESCRIPTION\n
    \           \"Write access is not required.\"\n   ::= { mallocCompliances 3 }\n"
  - "mallocServerFullCompliance MODULE-COMPLIANCE\n    STATUS  current\n    DESCRIPTION\n
    \           \"The compliance statement for multicast address allocation\n            servers
    implementing the MALLOC MIB with support for read-\n            create.  Such
    servers can then be both monitored and\n            configured with this MIB.\"\n
    \   MODULE  -- this module\n    MANDATORY-GROUPS { mallocBasicGroup,\n                       mallocServerGroup
    }\n    GROUP  madcapServerGroup\n    DESCRIPTION\n            \"This group is
    mandatory for servers which implement the\n            MADCAP client-server protocol.\"\n
    \  ::= { mallocCompliances 4 }\n"
  - "mallocClientFullCompliance MODULE-COMPLIANCE\n    STATUS  current\n    DESCRIPTION\n
    \           \"The compliance statement for hosts implementing the MALLOC\n            MIB
    with support for read-create.  Such clients can then be\n            both monitored
    and configured with this MIB.\"\n    MODULE  -- this module\n    MANDATORY-GROUPS
    { mallocBasicGroup,\n                       mallocClientGroup }\n    GROUP  mallocClientScopeGroup\n
    \   DESCRIPTION\n            \"This group is mandatory for clients which maintain
    a list\n            of multicast scopes.\"\n    GROUP  madcapClientGroup\n    DESCRIPTION\n
    \           \"This group is mandatory for clients which implement the\n            MADCAP
    client-server protocol.\"\n   ::= { mallocCompliances 5 }\n"
  - "mallocPrefixCoordinatorFullCompliance MODULE-COMPLIANCE\n    STATUS  current\n
    \   DESCRIPTION\n            \"The compliance statement for prefix coordinators\n
    \           implementing the MALLOC MIB with support for read-create.\n            Such
    devices can then be both monitored and configured with\n            this MIB.\"\n
    \   MODULE  -- this module\n    MANDATORY-GROUPS { mallocBasicGroup,\n                       mallocPrefixCoordinatorGroup
    }\n   ::= { mallocCompliances 6 }\n"
  - '-- units of conformance

    '
  - "mallocBasicGroup OBJECT-GROUP\n        OBJECTS { mallocCapabilities, mallocRequestScopeAddressType,\n
    \                 mallocRequestScopeFirstAddress,\n                  mallocRequestStartTime,\n
    \                 mallocRequestEndTime, mallocRequestNumAddrs,\n                  mallocRequestState,\n
    \                 mallocAddressNumAddrs, mallocAddressRequestId\n                }\n
    \       STATUS  current\n        DESCRIPTION\n            \"The basic collection
    of objects providing management of IP\n            multicast address allocation.\"\n
    \  ::= { mallocGroups 1 }\n"
  - "mallocServerGroup OBJECT-GROUP\n        OBJECTS { mallocScopeLastAddress, mallocScopeHopLimit,\n
    \                 mallocScopeSSM, mallocScopeStatus, mallocScopeStorage,\n                  mallocAllocRangeLastAddress,
    mallocAllocRangeLifetime,\n                  mallocAllocRangeNumAllocatedAddrs,\n
    \                 mallocAllocRangeNumOfferedAddrs,\n                  mallocAllocRangeNumWaitingAddrs,\n
    \                 mallocAllocRangeNumTryingAddrs,\n                  mallocAllocRangeMaxLeaseAddrs,\n
    \                 mallocAllocRangeMaxLeaseTime, mallocAllocRangeSource,\n                  mallocAllocRangeStatus,
    mallocAllocRangeStorage,\n                  mallocScopeDivisible, mallocScopeSource,\n
    \                 mallocScopeNameScopeName, mallocScopeNameDefault,\n                  mallocScopeNameStatus,
    mallocScopeNameStorage,\n                  mallocRequestClientAddressType,\n                  mallocRequestClientAddress\n
    \               }\n        STATUS  current\n        DESCRIPTION\n            \"A
    collection of objects providing management of multicast\n            address allocation
    in servers.\"\n   ::= { mallocGroups 2 }\n"
  - "mallocClientGroup OBJECT-GROUP\n        OBJECTS { mallocRequestServerAddressType,\n
    \                 mallocRequestServerAddress }\n        STATUS  current\n        DESCRIPTION\n
    \           \"A collection of objects providing management of multicast\n            address
    allocation in clients.\"\n   ::= { mallocGroups 3 }\n"
  - "madcapServerGroup OBJECT-GROUP\n        OBJECTS { madcapConfigClockSkewAllowance,\n
    \          madcapConfigExtraAllocationTime, madcapConfigOfferHold,\n           madcapConfigResponseCacheInterval,\n
    \          madcapTotalErrors, madcapRequestsDenied,\n           madcapInvalidRequests,
    madcapBadLeaseIds,\n           madcapExcessiveClockSkews, madcapDiscovers,\n           madcapInforms,
    madcapRequests,\n           madcapRenews, madcapReleases }\n        STATUS  current\n
    \       DESCRIPTION\n            \"A collection of objects providing management
    of MADCAP\n            servers.\"\n   ::= { mallocGroups 4 }\n"
  - "madcapClientGroup OBJECT-GROUP\n    OBJECTS { mallocRequestLeaseIdentifier,\n
    \             madcapConfigNoResponseDelay }\n    STATUS  current\n    DESCRIPTION\n
    \           \"A collection of objects providing management of MADCAP\n            clients.\"\n
    \  ::= { mallocGroups 5 }\n"
  - "mallocClientScopeGroup OBJECT-GROUP\n    OBJECTS { mallocScopeLastAddress, mallocScopeHopLimit,\n
    \             mallocScopeStatus, mallocScopeStorage, mallocScopeSource,\n              mallocScopeServerAddressType,
    mallocScopeServerAddress,\n              mallocScopeSSM, mallocScopeNameScopeName,\n
    \             mallocScopeNameDefault, mallocScopeNameStatus,\n              mallocScopeNameStorage
    }\n    STATUS  current\n    DESCRIPTION\n            \"A collection of objects
    providing management of multicast\n            scope information in clients.\"\n
    \  ::= { mallocGroups 6 }\n"
  - "mallocPrefixCoordinatorGroup OBJECT-GROUP\n    OBJECTS { mallocAllocRangeLastAddress,
    mallocAllocRangeLifetime,\n              mallocAllocRangeStatus, mallocAllocRangeStorage,\n
    \             mallocAllocRangeSource,\n              mallocAllocRangeTotalAllocatedAddrs,\n
    \             mallocAllocRangeTotalRequestedAddrs,\n              mallocAllocRangeAdvertisable,
    mallocScopeLastAddress,\n              mallocScopeDivisible, mallocScopeSource
    }\n    STATUS  current\n    DESCRIPTION\n            \"A collection of objects
    for managing Prefix Coordinators.\"\n    ::= { mallocGroups 7 }\n"
  - 'END

    '
  title: 4.  Definitions
- contents:
  - "5.  IANA Considerations\n   The IANAscopeSource and IANAmallocRangeSource textual
    conventions are\n   imported from the IANA-MALLOC-MIB.  The purpose of defining
    these\n   textual conventions in a separate MIB module is to allow additional\n
    \  values to be defined without having to issue a new version of this\n   document.
    \ The Internet Assigned Numbers Authority (IANA) is\n   responsible for the assignment
    of all Internet numbers, including\n   various SNMP-related numbers; it will administer
    the values\n   associated with these textual conventions.\n   The rules for additions
    or changes to the IANA-MALLOC-MIB are\n   outlined in the DESCRIPTION clause associated
    with its MODULE-\n   IDENTITY statement.\n   The current versions of the IANA-MALLOC-MIB
    can be accessed from the\n   IANA home page at: \"http://www.iana.org/\".\n"
  title: 5.  IANA Considerations
- contents:
  - "6.  Security Considerations\n   There are a number of management objects defined
    in this MIB module\n   with a MAX-ACCESS clause of read-write and/or read-create.
    \ Such\n   objects may be considered sensitive or vulnerable in some network\n
    \  environments.  The support for SET operations in a non-secure\n   environment
    without proper protection can have a negative effect on\n   network operations.
    \ These are the tables and objects and their\n   sensitivity/vulnerability:\n
    \  mallocScopeTable,mallocAllocRangeTable:\n      Unauthorized modifications to
    these tables can result in denial of\n      service by not being able to allocate
    and use multicast addresses,\n      allocating too many addresses, allocating
    addresses that other\n      organizations are already using, or causing applications
    to use a\n      hop limit that results in extra bandwidth usage.\n   mallocScopeNameTable:\n
    \     Unauthorized modifications to this table can result in incorrect\n      or
    misleading scope names being presented to users, resulting in\n      potentially
    using the wrong scope for application data.\n   madcapConfigExtraAllocationTime,madcapConfigOfferHold:\n
    \     Unauthorized modifications to these objects can result in\n      reservations
    lasting too long, potentially resulting in denial of\n      service if allocation
    ranges are small.\n   madcapConfigNoResponseDelay:\n      Unauthorized modifications
    can result in a client not being able\n      to allocate multicast addresses.\n
    \  Some of the readable objects in this MIB module (i.e., objects with a\n   MAX-ACCESS
    other than not-accessible) may be considered sensitive or\n   vulnerable in some
    network environments.  It is thus important to\n   control GET and/or NOTIFY access
    to these objects and possibly to\n   encrypt the values of these objects when
    sending them over the\n   network via SNMP.  These are the tables and objects
    and their\n   sensitivity/vulnerability:\n   mallocRequestLeaseIdentifier:\n      If
    address allocation servers are configured to allow renewal or\n      release purely
    on the basis of knowledge of the Lease Identifier,\n      then unauthorized read
    access to mallocRequestLeaseIdentifier can\n      be used in a denial-of-service
    attack.\n   SNMP versions prior to SNMPv3 did not include adequate security.\n
    \  Even if the network itself is secure (for example by using IPSec),\n   there
    is no control as to who on the secure network is allowed to\n   access and GET/SET
    (read/change/create/delete) the objects in this\n   MIB module.\n   It is RECOMMENDED
    that implementers consider the security features as\n   provided by the SNMPv3
    framework (see [RFC3410], section 8),\n   including full support for the SNMPv3
    cryptographic mechanisms (for\n   authentication and privacy).\n   Further, deployment
    of SNMP versions prior to SNMPv3 is NOT\n   RECOMMENDED.  Instead, it is RECOMMENDED
    to deploy SNMPv3 and to\n   enable cryptographic security.  It is then a customer/operator\n
    \  responsibility to ensure that the SNMP entity giving access to an\n   instance
    of this MIB module is properly configured for only those\n   principals (users)
    with legitimate rights to have access to GET or\n   SET (change/create/delete)
    objects.\n"
  title: 6.  Security Considerations
- contents:
  - "7.  Acknowledgements\n   This MIB module was updated based on feedback from the
    IETF's\n   Multicast Address Allocation (MALLOC) Working Group.  Lars Viklund,\n
    \  Frank Strauss, and Mike Heard provided helpful feedback on this\n   document.\n"
  title: 7.  Acknowledgements
- contents:
  - "8.  Intellectual Property Statement\n   The IETF takes no position regarding
    the validity or scope of any\n   intellectual property or other rights that might
    be claimed to\n   pertain to the implementation or use of the technology described
    in\n   this document or the extent to which any license under such rights\n   might
    or might not be available; neither does it represent that it\n   has made any
    effort to identify any such rights.  Information on the\n   IETF's procedures
    with respect to rights in standards-track and\n   standards-related documentation
    can be found in BCP-11.  Copies of\n   claims of rights made available for publication
    and any assurances of\n   licenses to be made available, or the result of an attempt
    made to\n   obtain a general license or permission for the use of such\n   proprietary
    rights by implementors or users of this specification can\n   be obtained from
    the IETF Secretariat.\n   The IETF invites any interested party to bring to its
    attention any\n   copyrights, patents or patent applications, or other proprietary\n
    \  rights which may cover technology that may be required to practice\n   this
    standard.  Please address the information to the IETF Executive\n   Director.\n"
  title: 8.  Intellectual Property Statement
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [ARCH]    Thaler, D., Handley, M. and D. Estrin,
      \"The Internet\n             Multicast Address Allocation Architecture\", RFC
      2908,\n             September 2000.\n   [MADCAP]  Hanna, S., Patel, B. and M.
      Shah, \"Multicast Address\n             Dynamic Client Allocation Protocol (MADCAP)\",
      RFC 2730,\n             December 1999.\n   [RFC2578] McCloghrie, K., Perkins,
      D., Schoenwaelder, J., Case, J.,\n             Rose, M. and S. Waldbusser, \"Structure
      of Management\n             Information Version 2 (SMIv2)\", STD 58, RFC 2578,
      April\n             1999.\n   [RFC2579] McCloghrie, K., Perkins, D., Schoenwaelder,
      J., Case, J.,\n             Rose, M. and S. Waldbusser, \"Textual Conventions
      for\n             SMIv2\", STD 58, RFC 2579, April 1999.\n   [RFC2580] McCloghrie,
      K., Perkins, D., Schoenwaelder, J., Case, J.,\n             Rose, M. and S.
      Waldbusser, \"Conformance Statements for\n             SMIv2\", STD 58, RFC
      2580, April 1999.\n   [RFC2932] McCloghrie, K., Farinacci, D. and D. Thaler,
      \"IPv4\n             Multicast Routing MIB\", RFC 2932, October 2000.\n   [RFC3291]
      Daniele, M., Haberman, B., Routhier, S. and J.\n             Schoenwaelder,
      \"Textual Conventions for Internet Network\n             Addresses\", RFC 3291,
      May 2002.\n   [RFC3411] Harrington, D., Presuhn, R. and B. Wijnen, \"An Architecture\n
      \            for Describing Simple Network Management Protocol (SNMP)\n             Management
      Frameworks\", STD 62, RFC 3411, December 2002.\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2.  Informative References\n   [IPSEC]   Kent, S. and R. Atkinson, \"Security
      Architecture for the\n             Internet Protocol\", RFC 2401, November 1998.\n
      \  [MZAP]    Handley, M., Thaler, D. and R. Kermode, \"Multicast-Scope\n             Zone
      Announcement Protocol (MZAP)\", RFC 2776, February\n             2000.\n   [RFC3410]
      Case, J., Mundy, R., Partain, D. and B. Stewart,\n             \"Introduction
      and Applicability Statements for Internet\n             Standard Management
      Framework\", RFC 3410, December 2002.\n"
    title: 9.2.  Informative References
  title: 9.  References
- contents:
  - "10.  Author's Address\n   Dave Thaler\n   Microsoft Corporation\n   One Microsoft
    Way\n   Redmond, WA  98052-6399\n   Phone: +1 425 703 8835\n   EMail: dthaler@microsoft.com\n"
  title: 10.  Author's Address
- contents:
  - "11.  Full Copyright Statement\n   Copyright (C) The Internet Society (2003).
    \ All Rights Reserved.\n   This document and translations of it may be copied
    and furnished to\n   others, and derivative works that comment on or otherwise
    explain it\n   or assist in its implementation may be prepared, copied, published\n
    \  and distributed, in whole or in part, without restriction of any\n   kind,
    provided that the above copyright notice and this paragraph are\n   included on
    all such copies and derivative works.  However, this\n   document itself may not
    be modified in any way, such as by removing\n   the copyright notice or references
    to the Internet Society or other\n   Internet organizations, except as needed
    for the purpose of\n   developing Internet standards in which case the procedures
    for\n   copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: 11.  Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
