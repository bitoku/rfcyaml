- contents:
  - '           Using BGP to Bind MPLS Labels to Address Prefixes

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This document specifies a set of procedures for using BGP to\n   advertise
    that a specified router has bound a specified MPLS label\n   (or a specified sequence
    of MPLS labels organized as a contiguous\n   part of a label stack) to a specified
    address prefix.  This can be\n   done by sending a BGP UPDATE message whose Network
    Layer Reachability\n   Information field contains both the prefix and the MPLS
    label(s) and\n   whose Next Hop field identifies the node at which said prefix
    is\n   bound to said label(s).  This document obsoletes RFC 3107.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8277.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   2\n   2.  Using BGP to Bind an Address Prefix to One or More MPLS\n
    \      Labels  . . . . . . . . . . . . . . . . . . . . . . . . . . .   4\n     2.1.
    \ Multiple Labels Capability  . . . . . . . . . . . . . . .   6\n     2.2.  NLRI
    Encoding When the Multiple Labels Capability Is\n           Not Used  . . . .
    . . . . . . . . . . . . . . . . . . . .   8\n     2.3.  NLRI Encoding When the
    Multiple Labels Capability Is Used  10\n     2.4.  How to Explicitly Withdraw
    the Binding of a Label to a\n           Prefix  . . . . . . . . . . . . . . .
    . . . . . . . . . .  12\n     2.5.  Changing the Label That Is Bound to a Prefix
    \ . . . . . .  13\n   3.  Installing and/or Propagating SAFI-4 or SAFI-128 Routes
    . . .  14\n     3.1.  Comparability of Routes . . . . . . . . . . . . . . . .
    .  14\n     3.2.  Modification of Label(s) Field When Propagating . . . . .  14\n
    \      3.2.1.  When the Next Hop Field Is Unchanged  . . . . . . . .  14\n       3.2.2.
    \ When the Next Hop Field Is Changed  . . . . . . . . .  15\n   4.  Data Plane
    \ . . . . . . . . . . . . . . . . . . . . . . . . .  16\n   5.  Relationship between
    SAFI-4 and SAFI-1 Routes . . . . . . . .  18\n   6.  IANA Considerations . . .
    . . . . . . . . . . . . . . . . . .  19\n   7.  Security Considerations . . .
    . . . . . . . . . . . . . . . .  19\n   8.  References  . . . . . . . . . . .
    . . . . . . . . . . . . . .  20\n     8.1.  Normative References  . . . . . .
    . . . . . . . . . . . .  20\n     8.2.  Informative References  . . . . . . .
    . . . . . . . . . .  22\n   Acknowledgements  . . . . . . . . . . . . . . . .
    . . . . . . . .  23\n   Author's Address  . . . . . . . . . . . . . . . . . .
    . . . . . .  23\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   [RFC3107] specifies encodings and procedures for using BGP
    to\n   indicate that a particular router has bound either a single MPLS\n   label
    or a sequence of MPLS labels to a particular address prefix.\n   (A sequence of
    labels would be organized as a contiguous part of an\n   MPLS label stack as specified
    in [RFC3031] and [RFC3032].)  This is\n   done by sending a BGP UPDATE message
    whose Network Layer Reachability\n   Information field contains both the prefix
    and the MPLS label(s) and\n   whose Next Hop field identifies the node at which
    said prefix is\n   bound to said label(s).  Each such UPDATE also advertises a
    path to\n   the specified prefix via the specified next hop.\n   Although there
    are many implementations and deployments of [RFC3107],\n   there are a number
    of issues with it that have impeded\n   interoperability in the past and may potentially
    impede\n   interoperability in the future:\n   o  Although [RFC3107] specifies
    an encoding that allows a sequence of\n      MPLS labels (rather than just a single
    label) to be bound to a\n      prefix, it does not specify the semantics of binding
    a sequence of\n      labels to a prefix.\n   o  Many implementations of [RFC3107]
    assume that only one label will\n      be bound to a prefix, and cannot properly
    process a BGP UPDATE\n      message that binds a sequence of labels to a prefix.
    \ Thus, an\n      implementation attempting to provide this feature is likely
    to\n      experience problems interoperating with other implementations.\n   o
    \ The procedures in [RFC3107] for withdrawing the binding of a label\n      or
    sequence of labels to a prefix are not specified clearly and\n      correctly.\n
    \  o  [RFC3107] specifies an optional feature, known as \"Advertising\n      Multiple
    Routes to a Destination\", that, to the best of the\n      author's knowledge,
    has never been implemented as specified.  The\n      functionality that this feature
    was intended to provide can and\n      has been implemented in a different way
    using the procedures of\n      [RFC7911], which were not available at the time
    that [RFC3107] was\n      written.  In [RFC3107], this feature was controlled
    by a BGP\n      Capability Code that has never been implemented and is now\n      deprecated;
    see Section 6.\n   o  It is possible for a BGP speaker to receive two BGP UPDATEs
    that\n      advertise paths to the same address prefix, where one UPDATE binds\n
    \     a label (or sequence of labels) to the prefix and the other does\n      not.
    \ [RFC3107] is silent on the issue of how the presence of two\n      such UPDATEs
    impacts the BGP decision process and does not say\n      explicitly whether one
    or the other or both of these UPDATEs\n      should be propagated.  This has led
    different implementations to\n      handle this situation in different ways.\n
    \  o  Much of [RFC3107] applies to the VPN-IPv4 ([RFC4364]) and VPN-IPv6\n      ([RFC4659])
    address families, but those address families are not\n      mentioned in it.\n
    \  This document replaces and obsoletes [RFC3107].  It defines a new BGP\n   Capability
    to be used when binding a sequence of labels to a prefix;\n   by using this Capability,
    the interoperability problems alluded to\n   above can be avoided.  This document
    also removes the unimplemented\n   \"Advertising Multiple Routes to a Destination\"
    feature (see Section 4\n   of [RFC3107]), while specifying how to use [RFC7911]
    to provide the\n   same functionality.  This document also addresses the issue
    of the\n   how UPDATEs that bind labels to a given prefix interact with UPDATEs\n
    \  that advertise paths to that prefix but do not bind labels to it.\n   However,
    for backwards compatibility, it declares most of these\n   interactions to be
    matters of local policy.\n   The places where this specification differs from
    [RFC3107] are\n   indicated in the text.  It is believed that implementations
    that\n   conform to the current document will interoperate correctly with\n   existing
    deployed implementations of [RFC3107].\n   The key words \"MUST\", \"MUST NOT\",
    \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
    \"NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be
    interpreted as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when,
    they appear in all\n   capitals, as shown here.\n"
  title: 1.  Introduction
- contents:
  - "2.  Using BGP to Bind an Address Prefix to One or More MPLS Labels\n   BGP may
    be used to advertise that a particular node (call it N) has\n   bound a particular
    MPLS label, or a particular sequence of MPLS\n   labels (organized as a contiguous
    part of an MPLS label stack), to a\n   particular address prefix.  This is done
    by sending a Multiprotocol\n   BGP UPDATE message, i.e., an UPDATE message with
    an MP_REACH_NLRI\n   attribute as specified in [RFC4760].  The Network Address
    of Next Hop\n   field of that attribute contains an IP address of node N.  The\n
    \  label(s) and the prefix are encoded in the Network Layer Reachability\n   Information
    (NLRI) field of the MP_REACH_NLRI.  The encoding of the\n   NLRI field is specified
    in Sections 2.2 and 2.3.\n   If the prefix is an IPv4 address prefix or a VPN-IPv4
    ([RFC4364])\n   address prefix, the Address Family Identifier (AFI) of the\n   MP_REACH_NLRI
    attribute is set to 1.  If the prefix is an IPv6\n   address prefix or a VPN-IPv6
    prefix ([RFC4659]), the AFI is set to 2.\n   If the prefix is an IPv4 address
    prefix or an IPv6 address prefix,\n   the Subsequent Address Family Identifier
    (SAFI) field is set to 4.\n   If the prefix is a VPN-IPv4 address prefix or a
    VPN-IPv6 address\n   prefix, the SAFI is set to 128.\n   The use of SAFI 4 or
    SAFI 128 when the AFI is other than 1 or 2 is\n   outside the scope of this document.\n
    \  This document does not specify the format of the Network Address of\n   Next
    Hop field of the MP_REACH_NLRI attribute.  The format of the\n   Next Hop field
    depends upon a number of factors and is discussed in a\n   number of other RFCs:
    see [RFC4364], [RFC4659], [RFC4798], and\n   [RFC5549].\n   There are a variety
    of applications that make use of alternative\n   methods of using BGP to advertise
    MPLS label bindings: see, e.g.,\n   [RFC7432], [RFC6514], or [TUNNEL-ENCAPS].
    \ The method described in\n   the current document is not claimed to be the only
    way of using BGP\n   to advertise MPLS label bindings.  Discussion of which method
    to use\n   for which application is outside the scope of the current document.\n
    \  In the remainder of this document, we will use the term \"SAFI-x\n   UPDATE\"
    to refer to a BGP UPDATE message containing an MP_REACH_NLRI\n   attribute or
    an MP_UNREACH_NLRI attribute ([RFC4760]) whose SAFI\n   field contains the value
    x.\n   This document defines a BGP Optional Capabilities parameter\n   ([RFC5492])
    known as the Multiple Labels Capability.\n   o  Unless this Capability is sent
    on a given BGP session by both of\n      that session's BGP speakers, a SAFI-4
    or SAFI-128 UPDATE message\n      sent on that session from either speaker MUST
    bind a prefix to\n      only a single label and MUST use the encoding of Section
    2.2.\n   o  If this Capability is sent by both BGP speakers on a given\n      session,
    an UPDATE message on that session, from either speaker,\n      MUST use the encoding
    of Section 2.3 and MAY bind a prefix to a\n      sequence of more than one label.\n
    \  The encoding of the Multiple Labels Capability is specified in\n   Section
    2.1.\n   Procedures for explicitly withdrawing a label binding are given in\n
    \  Section 2.4.  Procedures for changing the label(s) bound to a given\n   prefix
    by a given node are given in Section 2.5.\n   Procedures for propagating SAFI-4
    and SAFI-128 UPDATEs are discussed\n   in Section 3.\n   When a BGP speaker installs
    and propagates a SAFI-4 or SAFI-128\n   UPDATE, and if it changes the value of
    the Network Address of Next\n   Hop field, it must program its data plane appropriately.
    \ This is\n   discussed in Section 4.\n"
  - contents:
    - "2.1.  Multiple Labels Capability\n   [RFC5492] defines the \"Capabilities Optional
      Parameter\".  A BGP\n   speaker can include a Capabilities Optional Parameter
      in a BGP OPEN\n   message.  The Capabilities Optional Parameter is a triple
      that\n   includes a one-octet Capability Code, a one-octet Capability length,\n
      \  and a variable-length Capability Value.\n   This document defines a Capability
      Code known as the Multiple Labels\n   Capability code.  IANA has assigned value
      8 to this Capability Code.\n   (This Capability Code is new to this document
      and does not appear in\n   [RFC3107].)\n   If a BGP speaker has not sent the
      Multiple Labels Capability in its\n   BGP OPEN message on a particular BGP session,
      or if it has not\n   received the Multiple Labels Capability in the BGP OPEN
      message from\n   its peer on that BGP session, that BGP speaker MUST NOT send
      on that\n   session any UPDATE message that binds more than one MPLS label to
      any\n   given prefix.  Further, when advertising the binding of a single\n   label
      to a prefix, the BGP speaker MUST use the encoding specified in\n   Section
      2.2.\n   The value field of the Multiple Labels Capability (shown in Figure
      1)\n   consists of one or more triples, where each triple consists of four\n
      \  octets.  The first two octets of a triple specify an AFI value, the\n   third
      octet specifies a SAFI value, and the fourth specifies a Count.\n   If one of
      the triples is <AFI, SAFI, Count>, the Count is the maximum\n   number of labels
      that the BGP speaker sending the Capability can\n   process in a received UPDATE
      of the specified AFI/SAFI.  If the Count\n   is 255, then no limit has been
      placed on the number of labels that\n   can be processed in a received UPDATE
      of the specified AFI/SAFI.\n   Any implementation that sends a Multiple Labels
      Capability MUST be\n   able to support at least two labels in the NLRI.  However,
      there may\n   be deployment scenarios in which a larger number of labels is
      needed.\n      0                   1                   2                   3\n
      \     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    |              AFI              |    SAFI       |    Count      ~\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    ~              AFI              |    SAFI       |    Count      |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \           Figure 1: Value Field of Multiple Labels Capability\n   If the Capability
      contains more than one triple with a given AFI/\n   SAFI, all but the first
      MUST be ignored.\n   A triple of the form <AFI=x, SAFI=y, Count=0> or\n   <AFI=x,
      SAFI=y, Count=1> MUST NOT be sent.  If such a triple is\n   received, it MUST
      be ignored.\n   A Multiple Labels Capability whose length is not a multiple
      of four\n   MUST be considered to be malformed.\n   \"Graceful Restart Mechanism
      for BGP\" [RFC4724] describes a procedure\n   that allows routes learned over
      a given BGP session to be maintained\n   when the session fails and then restarts.
      \ This procedure requires\n   the entire RIB to be transmitted when the session
      restarts.  If the\n   Multiple Labels Capability for a given AFI/SAFI was exchanged
      on the\n   failed session but has not been exchanged on the restarted session,\n
      \  then any prefixes advertised in that AFI/SAFI with multiple labels\n   MUST
      be explicitly withdrawn.  Similarly, if the maximum label count\n   (specified
      in the Capability for a given AFI/SAFI) is reduced, any\n   prefixes advertised
      with more labels than are valid for the current\n   session MUST be explicitly
      withdrawn.\n   \"Accelerated Routing Convergence for BGP Graceful Restart\"\n
      \  [Enhanced-GR] describes another procedure that allows the routes\n   learned
      over a given BGP session to be maintained when the session\n   fails and then
      restarts.  These procedures MUST NOT be applied if\n   either of the following
      conditions hold:\n   o  The Multiple Labels Capability for a given AFI/SAFI
      had been\n      exchanged prior to the restart but has not been exchanged on
      the\n      restarted session.\n   o  The Multiple Labels Capability for a given
      AFI/SAFI had been\n      exchanged with a given Count prior to the restart but
      have been\n      exchanged with a smaller count on the restarted session.\n
      \  If either of these conditions hold, the complete set of routes for\n   the
      given AFI/SAFI MUST be exchanged.\n   If a BGP OPEN message contains multiple
      copies of the Multiple Labels\n   Capability, only the first copy is significant;
      subsequent copies\n   MUST be ignored.\n   If (a) a BGP speaker has sent the
      Multiple Labels Capability in its\n   BGP OPEN message for a particular BGP
      session, (b) it has received\n   the Multiple Labels Capability in its peer's
      BGP OPEN message for\n   that session, and (c) both Capabilities specify AFI/SAFI
      x/y, then\n   when using an UPDATE of AFI x and SAFI y to advertise the binding
      of\n   a label or sequence of labels to a given prefix, the BGP speaker MUST\n
      \  use the encoding of Section 2.3.  This encoding MUST be used even if\n   only
      one label is being bound to a given prefix.\n   If both BGP speakers of a given
      BGP session have sent the Multiple\n   Labels Capability, but AFI/SAFI x/y has
      not been specified in both\n   Capabilities, then UPDATEs of AFI/SAFI x/y on
      that session MUST use\n   the encoding of Section 2.2, and such UPDATEs can
      only bind one label\n   to a prefix.\n   A BGP speaker SHOULD NOT send an UPDATE
      that binds more labels to a\n   given prefix than its peer is capable of receiving,
      as specified in\n   the Multiple Labels Capability sent by that peer.  If a
      BGP speaker\n   receives an UPDATE that binds more labels to a given prefix
      than the\n   number of labels the BGP speaker is prepared to receive (as announced\n
      \  in its Multiple Labels Capability), the BGP speaker MUST apply the\n   \"treat-as-withdraw\"
      strategy of [RFC7606] to that UPDATE.\n   Notwithstanding the number of labels
      that a BGP speaker has claimed\n   to be able to receive, its peer MUST NOT
      attempt to send more labels\n   than can be properly encoded in the NLRI field
      of the MP_REACH_NLRI\n   attribute.  Please note that there is only a limited
      amount of space\n   in the NLRI field for labels:\n   o  per [RFC4760], the
      size of this field is limited to 255 bits (not\n      255 octets), including
      the number of bits in the prefix;\n   o  in a SAFI-128 UPDATE, the prefix is
      at least 64 bits long and may\n      be as long as 192 bits (e.g., in a VPN-IPv6
      host route).\n"
    title: 2.1.  Multiple Labels Capability
  - contents:
    - "2.2.  NLRI Encoding When the Multiple Labels Capability Is Not Used\n   If
      the Multiple Labels Capability has not been both sent and received\n   on a
      given BGP session, then in a BGP UPDATE on that session whose\n   MP_REACH_NLRI
      attribute contains one of the AFI/SAFI combinations\n   specified in Section
      2, the NLRI field is encoded as shown in\n   Figure 2:\n      0                   1
      \                  2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3
      4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    |    Length     |                 Label                 |Rsrv |S|\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    |                          Prefix                               ~\n     ~
      \                                                              |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \                      Figure 2: NLRI with One Label\n   - Length:\n      The
      Length field consists of a single octet.  It specifies the\n      length in
      bits of the remainder of the NLRI field.\n      Note that the length will always
      be the sum of 20 (number of bits\n      in Label field), plus 3 (number of bits
      in Rsrv field), plus 1\n      (number of bits in S field), plus the length in
      bits of the\n      prefix.\n      In an MP_REACH_NLRI attribute whose AFI/SAFI
      is 1/4, the prefix\n      length will be 32 bits or less.  In an MP_REACH_NLRI
      attribute\n      whose AFI/SAFI is 2/4, the prefix length will be 128 bits or
      less.\n      In an MP_REACH_NLRI attribute whose SAFI is 128, the prefix will\n
      \     be 96 bits or less if the AFI is 1 and will be 192 bits or less if\n      the
      AFI is 2.\n      As specified in [RFC4760], the actual length of the NLRI field\n
      \     will be the number of bits specified in the Length field, rounded\n      up
      to the nearest integral number of octets.\n   - Label:\n      The Label field
      is a 20-bit field containing an MPLS label value\n      (see [RFC3032]).\n   -
      Rsrv:\n      This 3-bit field SHOULD be set to zero on transmission and MUST
      be\n      ignored on reception.\n   - S:\n      This 1-bit field MUST be set
      to one on transmission and MUST be\n      ignored on reception.\n   Note that
      the UPDATE message not only advertises the binding between\n   the prefix and
      the label, it also advertises a path to the prefix via\n   the node identified
      in the Network Address of Next Hop field of the\n   MP_REACH_NLRI attribute.\n
      \  [RFC3107] requires that if only a single label is bound to a prefix,\n   the
      S bit must be set.  If the S bit is not set, [RFC3107] specifies\n   that additional
      labels will appear in the NLRI.  However, some\n   implementations assume that
      the NLRI will contain only a single label\n   and thus do not check the setting
      of the S bit.  The procedures\n   specified in the current document will interwork
      with such\n   implementations.  As long as the Multiple Labels Capability is
      not\n   sent and received by both BGP speakers on a given BGP session, this\n
      \  document REQUIRES that only one label be specified in the NLRI, that\n   the
      S bit be set on transmission, and that it be ignored on\n   reception.\n   If
      the procedures of [RFC7911] are being used, a four-octet \"path\n   identifier\"
      (as defined in Section 3 of [RFC7911]) is part of the\n   NLRI and precedes
      the Length field.\n"
    title: 2.2.  NLRI Encoding When the Multiple Labels Capability Is Not Used
  - contents:
    - "2.3.  NLRI Encoding When the Multiple Labels Capability Is Used\n   If the
      Multiple Labels Capability has been both sent and received on\n   a given BGP
      session, then in a BGP UPDATE on that session whose\n   MP_REACH_NLRI attribute
      contains one of the AFI/SAFI combinations\n   specified in Section 2, the NLRI
      field is encoded as shown in\n   Figure 3:\n      0                   1                   2
      \                    3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2
      3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+\n     |    Length     |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    |                 Label                 |Rsrv |S~\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    ~                 Label                 |Rsrv |S|\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    |                          Prefix                               ~\n     ~
      \                                                              |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \                   Figure 3: NLRI with Multiple Labels\n   - Length:\n      The
      Length field consists of a single octet.  It specifies the\n      length in
      bits of the remainder of the NLRI field.\n      Note that for each label, the
      length is increased by 24 bits (20\n      bits in the Label field, plus 3 bits
      in the Rsrv field, plus 1 S\n      bit).\n      In an MP_REACH_NLRI attribute
      whose AFI/SAFI is 1/4, the prefix\n      length will be 32 bits or less.  In
      an MP_REACH_NLRI attribute\n      whose AFI/SAFI is 2/4, the prefix length will
      be 128 bits or less.\n      In an MP_REACH_NLRI attribute whose SAFI is 128,
      the prefix will\n      be 96 bits or less if the AFI is 1 and will be 192 bits
      or less if\n      the AFI is 2.\n      As specified in [RFC4760], the actual
      length of the NLRI field\n      will be the number of bits specified in the
      Length field rounded\n      up to the nearest integral number of octets.\n   -
      Label:\n      The Label field is a 20-bit field containing an MPLS label value\n
      \     (see [RFC3032]).\n   - Rsrv:\n      This 3-bit field SHOULD be set to
      zero on transmission and MUST be\n      ignored on reception.\n   - S:\n      In
      all labels except the last (i.e., in all labels except the one\n      immediately
      preceding the prefix), the S bit MUST be 0.  In the\n      last label, the S
      bit MUST be 1.\n      Note that failure to set the S bit in the last label will
      make it\n      impossible to parse the NLRI correctly.  See Section 3, paragraph\n
      \     j of [RFC7606] for a discussion of error handling when the NLRI\n      cannot
      be parsed.\n   Note that the UPDATE message not only advertises the binding
      between\n   the prefix and the labels, it also advertises a path to the prefix\n
      \  via the node identified in the Next Hop field of the MP_REACH_NLRI\n   attribute.\n
      \  If the procedures of [RFC7911] are being used, a four-octet \"path\n   identifier\"
      (as defined in Section 3 of [RFC7911]) is part of the\n   NLRI and precedes
      the Length field.\n"
    title: 2.3.  NLRI Encoding When the Multiple Labels Capability Is Used
  - contents:
    - "2.4.  How to Explicitly Withdraw the Binding of a Label to a Prefix\n   Suppose
      a BGP speaker has announced, on a given BGP session, the\n   binding of a given
      label or sequence of labels to a given prefix.\n   Suppose it now wishes to
      withdraw that binding.  To do so, it may\n   send a BGP UPDATE message with
      an MP_UNREACH_NLRI attribute.  The\n   NLRI field of this attribute is encoded
      as follows:\n      0                   1                   2                   3\n
      \     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    |    Length     |        Compatibility                          |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    |                          Prefix                               ~\n     ~
      \                                                              |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \                      Figure 4: NLRI for Withdrawal\n   Upon transmission,
      the Compatibility field SHOULD be set to 0x800000.\n   Upon reception, the value
      of the Compatibility field MUST be ignored.\n   This encoding is used for explicitly
      withdrawing the binding (on a\n   given BGP session) between the specified prefix
      and whatever label or\n   sequence of labels had previously been bound by the
      procedures of\n   this document to that prefix on the given session.  This encoding
      is\n   used whether or not the Multiple Labels Capability has been sent or\n
      \  received on the session.  Note that label/prefix bindings that were\n   not
      advertised on the given session cannot be withdrawn by this\n   method.  (However,
      if the bindings were advertised on a previous\n   session with the same peer,
      and the current session is the result of\n   a \"graceful restart\" ([RFC4724])
      of the previous session, then this\n   withdrawal method may be used.)\n   When
      using an MP_UNREACH_NLRI attribute to withdraw a route whose\n   NLRI was previously
      specified in an MP_REACH_NLRI attribute, the\n   lengths and values of the respective
      prefixes must match, and the\n   respective AFI/SAFIs must match.  If the procedures
      of [RFC7911] are\n   being used, the respective values of the \"path identifier\"
      fields\n   must match as well.  Note that the prefix length is not the same
      as\n   the NLRI length; to determine the prefix length of a prefix in an\n   MP_UNREACH_NLRI,
      the length of the Compatibility field must be\n   subtracted from the length
      of the NLRI.\n   An explicit withdrawal in a SAFI-x UPDATE on a given BGP session
      not\n   only withdraws the binding between the prefix and the label(s), it\n
      \  also withdraws the path to that prefix that was previously advertised\n   in
      a SAFI-x UPDATE on that session.\n   [RFC3107] made it possible to specify a
      particular label value in the\n   Compatibility field.  However, the functionality
      that required the\n   presence of a particular label value (or sequence of label
      values)\n   was never implemented, and that functionality is not present in
      the\n   current document.  Hence, the value of this field is of no\n   significance;
      there is never any reason for this field to contain a\n   label value or a sequence
      of label values.\n   [RFC3107] also made it possible to withdraw a binding without\n
      \  specifying the label explicitly, by setting the Compatibility field\n   to
      0x800000.  However, some implementations set it to 0x000000.  In\n   order to
      ensure backwards compatibility, it is RECOMMENDED by this\n   document that
      the Compatibility field be set to 0x800000, but it is\n   REQUIRED that it be
      ignored upon reception.\n"
    title: 2.4.  How to Explicitly Withdraw the Binding of a Label to a Prefix
  - contents:
    - "2.5.  Changing the Label That Is Bound to a Prefix\n   Suppose a BGP speaker,
      S1, has received on a given BGP session, a\n   SAFI-4 or SAFI-128 UPDATE, U1,
      that specifies label (or sequence of\n   labels) L1, prefix P, and next hop
      N1.  As specified above, this\n   indicates that label (or sequence of labels)
      L1 is bound to prefix P\n   at node N1.  Suppose that S1 now receives, on the
      same session, an\n   UPDATE, U2, of the same AFI/SAFI, that specifies label
      (or sequence\n   of labels) L2, prefix P, and the same next hop, N1.\n   o  If
      [RFC7911] is not being used, UPDATE U2 MUST be interpreted as\n      meaning
      that L2 is now bound to P at N1 and that L1 is no longer\n      bound to P at
      N1.  That is, the UPDATE U1 is implicitly withdrawn\n      and is replaced by
      UPDATE U2.\n   o  Suppose that [RFC7911] is being used, that UPDATE U1 has Path\n
      \     Identifier I1, and that UPDATE U2 has Path Identifier I2.\n      *  If
      I1 is the same as I2, UPDATE U2 MUST be interpreted as\n         meaning that
      L2 is now bound to P at N1 and that L1 is no\n         longer bound to P at
      N1.  UPDATE U1 is implicitly withdrawn.\n      *  If I1 is not the same as I2,
      U2 MUST be interpreted as meaning\n         that L2 is now bound to P at N1,
      but U2 MUST NOT be interpreted\n         as meaning that L1 is no longer bound
      to P at N1.  Under\n         certain conditions (specification of which is outside
      the scope\n         of this document), S1 may choose to load-balance traffic\n
      \        between the path represented by U1 and the path represented by\n         U2.
      \ To send traffic on the path represented by U1, S1 uses the\n         label(s)
      advertised in U1; to send traffic on the path\n         represented by U2, S1
      uses the label(s) advertised in U2.\n         (Although these two paths have
      the same next hop, one must\n         suppose that they diverge further downstream.)\n
      \  Suppose a BGP speaker, S1, has received, on a given BGP session, a\n   SAFI-4
      or SAFI-128 UPDATE that specifies label L1, prefix P, and next\n   hop N1.  Suppose
      that S1 now receives, on a different BGP session, an\n   UPDATE of the same
      AFI/SAFI, that specifies label L2, prefix P, and\n   the same next hop, N1.
      \ BGP speaker S1 SHOULD treat this as an\n   indication that N1 has at least
      two paths to P, and S1 MAY use this\n   fact to do load-balancing of any traffic
      that it has to send to P.\n   Note that this section discusses only the case
      where two UPDATEs have\n   the same next hop.  Procedures for the case where
      two UPDATEs have\n   different next hops are adequately described in [RFC4271].\n"
    title: 2.5.  Changing the Label That Is Bound to a Prefix
  title: 2.  Using BGP to Bind an Address Prefix to One or More MPLS Labels
- contents:
  - '3.  Installing and/or Propagating SAFI-4 or SAFI-128 Routes

    '
  - contents:
    - "3.1.  Comparability of Routes\n   Suppose a BGP speaker has received two SAFI-4
      UPDATEs specifying the\n   same Prefix and that either:\n   o  the two UPDATEs
      are received on different BGP sessions; or\n   o  the two UPDATEs are received
      on the same session, add-paths is\n      used on that session, and the NLRIs
      of the two UPDATEs have\n      different path identifiers.\n   These two routes
      MUST be considered to be comparable, even if they\n   specify different labels.
      \ Thus, the BGP best-path selection\n   procedures (see Section 9.1 of [RFC4271])
      are applied to select one\n   of them as the better path.  If the procedures
      of [RFC7911] are not\n   being used on a particular BGP session, only the best
      path is\n   propagated on that session.  If the procedures of [RFC7911] are
      being\n   used on a particular BGP session, then both paths may be propagated\n
      \  on that session, though with different path identifiers.\n   The same applies
      to SAFI-128 routes.\n"
    title: 3.1.  Comparability of Routes
  - contents:
    - '3.2.  Modification of Label(s) Field When Propagating

      '
    - contents:
      - "3.2.1.  When the Next Hop Field Is Unchanged\n   When a SAFI-4 or SAFI-128
        route is propagated, if the Network Address\n   of Next Hop field is left
        unchanged, the Label field(s) MUST also be\n   left unchanged.\n   Note that
        a given route MUST NOT be propagated to a given peer if the\n   route's NLRI
        has multiple labels, but the Multiple Labels Capability\n   was not negotiated
        with the peer.  Similarly, a given route MUST NOT\n   be propagated to a given
        peer if the route's NLRI has more labels\n   than the peer has announced (through
        its Multiple Labels Capability)\n   that it can handle.  In either case, if
        a previous route with the\n   same AFI, SAFI, and prefix (but with fewer labels)
        has already been\n   propagated to the peer, that route MUST be withdrawn
        from that peer\n   using the procedure specified in Section 2.4.\n"
      title: 3.2.1.  When the Next Hop Field Is Unchanged
    - contents:
      - "3.2.2.  When the Next Hop Field Is Changed\n   If the Network Address of
        Next Hop field is changed before a SAFI-4\n   or SAFI-128 route is propagated,
        the Label field(s) of the propagated\n   route MUST contain the label(s) that
        is (are) bound to the prefix at\n   the new next hop.\n   Suppose BGP speaker
        S1 has received an UPDATE that binds a particular\n   sequence of one or more
        labels to a particular prefix.  If S1 chooses\n   to propagate this route
        after changing its next hop, S1 may change\n   the label in any of the following
        ways, depending upon local policy:\n   o  A single label may be replaced by
        a single label of the same or\n      different value.\n   o  A sequence of
        multiple labels may be replaced by a single label.\n   o  A single label may
        be replaced by a sequence of multiple labels.\n   o  A sequence of multiple
        labels may be replaced by a sequence of\n      multiple labels; the number
        of labels may be left the same or may\n      be changed.\n   Of course, when
        deciding whether to propagate, to a given BGP peer,\n   an UPDATE binding
        a sequence of more than one label, a BGP speaker\n   must attend to the information
        provided by the Multiple Labels\n   Capability (see Section 2.1).  A BGP speaker
        MUST NOT send multiple\n   labels to a peer with which it has not exchanged
        the Multiple Labels\n   Capability and MUST NOT send more labels to a given
        peer than the\n   peer has announced (via the Multiple Labels Capability)
        than it can\n   handle.\n   It is possible that a BGP speaker's local policy
        will tell it to\n   encode N labels in a given route's NLRI before propagating
        the route,\n   but that one of the BGP speaker's peers cannot handle N labels
        in the\n   NLRI.  In this case, the BGP speaker has two choices:\n   o  It
        can propagate the route to the given peer with fewer than N\n      labels;
        however, whether this makes sense, and if so, how to\n      choose the labels,
        is also a matter of local policy.\n   o  It can decide not to propagate the
        route to the given peer.  In\n      that case, if a previous route with the
        same AFI, SAFI, and prefix\n      (but with fewer labels) has already been
        propagated to that peer,\n      that route MUST be withdrawn from that peer
        using the procedure of\n      Section 2.4.\n"
      title: 3.2.2.  When the Next Hop Field Is Changed
    title: 3.2.  Modification of Label(s) Field When Propagating
  title: 3.  Installing and/or Propagating SAFI-4 or SAFI-128 Routes
- contents:
  - "4.  Data Plane\n   In the following, we will use the phrase \"node S tunnels
    packet P to\n   node N\", where packet P is an MPLS packet.  By this phrase, we
    mean\n   that node S encapsulates packet P and causes packet P to be delivered\n
    \  to node N in such a way that P's label stack before encapsulation\n   will
    be seen unchanged by N but will not be seen by the nodes (if\n   any) between
    S and N.\n   If the tunnel is a Label Switched Path (LSP), encapsulating the\n
    \  packet may be as simple as pushing on another MPLS label.  If node N\n   is
    a Layer 2 adjacency of node S, a Layer 2 encapsulation may be all\n   that is
    needed.  Other sorts of tunnels (e.g., IP tunnels, GRE\n   tunnels, UDP tunnels)
    may also be used, depending upon the particular\n   deployment scenario.\n   Suppose
    BGP speaker S1 receives a SAFI-4 or SAFI-128 BGP UPDATE with\n   an MP_REACH_NLRI
    specifying label L1, prefix P, and next hop N1, and\n   suppose S1 installs this
    route as its (or one of its) best path(s)\n   towards P.  And suppose S1 propagates
    this route after changing the\n   next hop to itself and changing the label to
    L2.  Suppose further\n   that S1 receives an MPLS data packet and, in the process
    of\n   forwarding that MPLS data packet, S1 sees label L2 rise to the top of\n
    \  the packet's label stack.  Then, to forward the packet further, S1\n   must
    replace L2 with L1 as the top entry in the packet's label stack,\n   and S1 must
    then tunnel the packet to N1.\n   Suppose that the route received by S1 specified
    not a single label,\n   but a sequence of k labels <L11, L12, ..., L1k> where
    L11 is the\n   first label appearing in the NLRI, and L1k is the last.  And suppose\n
    \  again that S1 propagates this route after changing the next hop to\n   itself
    and changing the Label field to the single label L2.  Suppose\n   further that
    S1 receives an MPLS data packet, and in the process of\n   forwarding that MPLS
    data packet, S1 sees label L2 rise to the top of\n   the packet's label stack.
    \ In this case, instead of simply replacing\n   L2 with L1, S1 removes L2 from
    the top of the label stack and then\n   pushes labels L1k through L11 onto the
    label stack such that L11 is\n   now at the top of the label stack.  Then, S1
    must tunnel the packet\n   to N1.  (Note that L1k will not be at the bottom of
    the packet's\n   label stack and hence will not have the \"bottom of stack\" bit
    set\n   unless L2 had previously been at the bottom of the packet's label\n   stack.)\n
    \  The above paragraph assumes that when S1 propagates a SAFI-4 or\n   SAFI-128
    route after setting the next hop to itself, it replaces the\n   label or labels
    specified in the NLRI of that route with a single\n   label.  However, it is also
    possible, as determined by local policy,\n   for a BGP speaker to specify multiple
    labels when it propagates a\n   SAFI-4 or SAFI-128 route after setting the next
    hop to itself.\n   Suppose, for example, that S1 supports context labels ([RFC5331]).\n
    \  Let L21 be a context label supported by S1, and let L22 be a label\n   that
    is in the label space identified (at S1) by L21.  Suppose S1\n   receives a SAFI-4
    or SAFI-128 UPDATE whose prefix is P, whose Label\n   field is <L11, L12, ...,
    L1k> and whose next hop is N1.  Before\n   propagating the UPDATE, S1 may set
    the next hop to itself (by\n   replacing N1 with S1) and may replace the label
    stack <L11, L12, ...,\n   L1k> with the pair of labels <L21, L22>.\n   In this
    case, if S1 receives an MPLS data packet whose top label is\n   L21 and whose
    second label is L22, S1 will remove both L21 and L22\n   from the label stack
    and replace them with <L11, L12, ..., L1k>.\n   Note that the fact that L21 is
    a context label is known only to S1;\n   other BGP speakers do not know how S1
    will interpret L21 (or L22).\n   The ability to replace one or more labels by
    one or more labels can\n   provide great flexibility, but it must be done carefully.
    \ Let's\n   suppose again that S1 receives an UPDATE that specifies prefix P,\n
    \  label stack <L11, L12, ..., L1k>, and next hop N1.  And suppose that\n   S1
    propagates this UPDATE to BGP speaker S2 after setting next hop\n   self and after
    replacing the Label field with <L21, L22, ..., L2k>.\n   Finally, suppose that
    S1 programs its data plane so that when it\n   processes a received MPLS packet
    whose top label is L21, it replaces\n   L21 with <L11, L12, ..., L1k> and then
    tunnels the packet to N1.\n   In this case, BGP speaker S2 will have received
    a route with prefix\n   P, Label field <L21, L22, ..., L2k>, and next hop S1.
    \ If S2 decides\n   to forward an IP packet according to this route, it will push
    <L21,\n   L22, ..., L2k> onto the packet's label stack and tunnel the packet to\n
    \  S1.  S1 will replace L21 with <L11, L12, ..., L1k> and will tunnel\n   the
    packet to N1.  N1 will receive the packet with the following\n   label stack:
    <L11, L12, ..., L1k, L22, ..., L2k>.  While this may be\n   useful in certain
    scenarios, it may provide unintended results in\n   other scenarios.\n   Procedures
    for choosing, setting up, maintaining, or determining the\n   liveness of a particular
    tunnel or type of tunnel are outside the\n   scope of this document.\n   When
    pushing labels onto a packet's label stack, the Time-to-Live\n   (TTL) field ([RFC3032],
    [RFC3443]) and the Traffic Class (TC) field\n   ([RFC3032], [RFC5462]) of each
    label stack entry must, of course, be\n   set.  This document does not specify
    any set of rules for setting\n   these fields; that is a matter of local policy.\n
    \  This document does not specify any new rules for processing the label\n   stack
    of an incoming data packet.\n   It is a matter of local policy whether SAFI-4
    routes can be used as\n   the basis for forwarding IP packets or whether SAFI-4
    routes can only\n   be used for forwarding MPLS packets.  If BGP speaker S1 is
    forwarding\n   IP packets according to SAFI-4 routes, then consider an IP packet\n
    \  with destination address D, such that P is the \"longest prefix match\"\n   for
    D from among the routes that are being used to forward IP\n   packets.  And suppose
    the packet is being forwarded according to a\n   SAFI-4 route whose prefix is
    P, whose next hop is N1 and whose\n   sequence of labels is L1.  To forward the
    packet according to this\n   route, S1 must create a label stack for the packet,
    push on the\n   sequence of labels L1, and then tunnel the packet to N1.\n"
  title: 4.  Data Plane
- contents:
  - "5.  Relationship between SAFI-4 and SAFI-1 Routes\n   It is possible that a BGP
    speaker will receive both a SAFI-1 route\n   for prefix P and a SAFI-4 route for
    prefix P.  Different\n   implementations treat this situation in different ways.\n
    \  For example, some implementations may regard SAFI-1 routes and SAFI-4\n   routes
    as completely independent and may treat them in a \"ships in\n   the night\" fashion.
    \ In this case, best-path selection for the two\n   SAFIs is independent, and
    there will be a best SAFI-1 route to P as\n   well as a best SAFI-4 route to P.
    \ Which packets get forwarded\n   according to the routes of which SAFI is then
    a matter of local\n   policy.\n   Other implementations may treat the SAFI-1 and
    SAFI-4 routes for a\n   given prefix as comparable, such that the best route to
    prefix P is\n   either a SAFI-1 route or a SAFI-4 route but not both.  In such\n
    \  implementations, if load-balancing is done among a set of equal cost\n   routes,
    some of the equal cost routes may be SAFI-1 routes and some\n   may be SAFI-4
    routes.  Whether this is allowed is, again, a matter of\n   local policy.\n   Some
    implementations may allow a single BGP session to carry UPDATEs\n   of both SAFI-1
    and SAFI-4; other implementations may disallow this.\n   Some implementations
    that allow both SAFIs on the same session may\n   treat the receipt of a SAFI-1
    route for prefix P on a given session\n   as an implicit withdrawal of a previous
    SAFI-4 route for prefix P on\n   that session, and vice versa.  Other implementations
    may have\n   different behavior.\n   A BGP speaker may receive a SAFI-4 route
    over a given BGP session but\n   may have other BGP sessions for which SAFI-4
    is not enabled.  In this\n   case, the BGP speaker MAY convert the SAFI-4 route
    to a SAFI-1 route\n   and then propagate the result over the session on which
    SAFI-4 is not\n   enabled.  Whether this is done is a matter of local policy.\n
    \  These differences in the behavior of different implementations may\n   result
    in unexpected behavior or lack of interoperability.  In some\n   cases, it may
    be difficult or impossible to achieve the desired\n   policies with certain implementations
    or combinations of\n   implementations.\n"
  title: 5.  Relationship between SAFI-4 and SAFI-1 Routes
- contents:
  - "6.  IANA Considerations\n   IANA has assigned value 8 for Multiple Labels Capability
    in the BGP\n   \"Capability Codes\" registry, with this document as the reference.\n
    \  IANA has modified the BGP \"Capability Codes\" registry to mark value 4\n   (\"Multiple
    routes to a destination capability\") as deprecated, with\n   this document as
    the reference.\n   IANA has changed the reference for SAFI 4 in the \"Subsequent
    Address\n   Family Identifiers (SAFI) Parameters\" registry to this document.\n
    \  Also, IANA has added this document as a reference for SAFI 128 in\n   that
    same registry.\n"
  title: 6.  IANA Considerations
- contents:
  - "7.  Security Considerations\n   The security considerations of BGP (as specified
    in [RFC4271]) apply.\n   If a BGP implementation that is not conformant with the
    current\n   document encodes multiple labels in the NLRI but has not sent and\n
    \  received the Multiple Labels Capability, a BGP implementation that\n   does
    conform with the current document will likely reset the BGP\n   session.\n   This
    document specifies that certain data packets be \"tunneled\" from\n   one BGP
    speaker to another.  This requires that the packets be\n   encapsulated while
    in flight.  This document does not specify the\n   encapsulation to be used.  However,
    if a particular encapsulation is\n   used, the security considerations of that
    encapsulation are\n   applicable.\n   If a particular tunnel encapsulation does
    not provide integrity and\n   authentication, it is possible that a data packet's
    label stack can\n   be modified, through error or malfeasance, while the packet
    is in\n   flight.  This can result in misdelivery of the packet.  It should be\n
    \  noted that the tunnel encapsulation (MPLS) most commonly used in\n   deployments
    of this specification does not provide integrity or\n   authentication; neither
    do the other tunnel encapsulations mentioned\n   in Section 4.\n   There are various
    techniques one can use to constrain the\n   distribution of BGP UPDATE messages.
    \ If a BGP UPDATE advertises the\n   binding of a particular label or set of labels
    to a particular\n   address prefix, such techniques can be used to control the
    set of BGP\n   speakers that are intended to learn of that binding.  However,
    if BGP\n   sessions do not provide privacy, other routers may learn of that\n
    \  binding.\n   When a BGP speaker processes a received MPLS data packet whose
    top\n   label it advertised, there is no guarantee that the label in question\n
    \  was put on the packet by a router that was intended to know about\n   that
    label binding.  If a BGP speaker is using the procedures of this\n   document,
    it may be useful for that speaker to distinguish its\n   \"internal\" interfaces
    from its \"external\" interfaces and to avoid\n   advertising the same labels
    to BGP speakers reached on internal\n   interfaces as to BGP speakers reached
    on external interfaces.  Then,\n   a data packet can be discarded if its top label
    was not advertised\n   over the type of interface from which the packet was received.
    \ This\n   reduces the likelihood of forwarding packets whose labels have been\n
    \  \"spoofed\" by untrusted sources.\n"
  title: 7.  Security Considerations
- contents:
  - '8.  References

    '
  - contents:
    - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC3031]  Rosen, E., Viswanathan, A., and R. Callon, \"Multiprotocol\n              Label
      Switching Architecture\", RFC 3031,\n              DOI 10.17487/RFC3031, January
      2001,\n              <https://www.rfc-editor.org/info/rfc3031>.\n   [RFC3032]
      \ Rosen, E., Tappan, D., Fedorkow, G., Rekhter, Y.,\n              Farinacci,
      D., Li, T., and A. Conta, \"MPLS Label Stack\n              Encoding\", RFC
      3032, DOI 10.17487/RFC3032, January 2001,\n              <https://www.rfc-editor.org/info/rfc3032>.\n
      \  [RFC3107]  Rekhter, Y. and E. Rosen, \"Carrying Label Information in\n              BGP-4\",
      RFC 3107, DOI 10.17487/RFC3107, May 2001,\n              <https://www.rfc-editor.org/info/rfc3107>.\n
      \  [RFC3443]  Agarwal, P. and B. Akyol, \"Time To Live (TTL) Processing\n              in
      Multi-Protocol Label Switching (MPLS) Networks\",\n              RFC 3443, DOI
      10.17487/RFC3443, January 2003,\n              <https://www.rfc-editor.org/info/rfc3443>.\n
      \  [RFC4271]  Rekhter, Y., Ed., Li, T., Ed., and S. Hares, Ed., \"A\n              Border
      Gateway Protocol 4 (BGP-4)\", RFC 4271,\n              DOI 10.17487/RFC4271,
      January 2006,\n              <https://www.rfc-editor.org/info/rfc4271>.\n   [RFC4364]
      \ Rosen, E. and Y. Rekhter, \"BGP/MPLS IP Virtual Private\n              Networks
      (VPNs)\", RFC 4364, DOI 10.17487/RFC4364, February\n              2006, <https://www.rfc-editor.org/info/rfc4364>.\n
      \  [RFC4659]  De Clercq, J., Ooms, D., Carugi, M., and F. Le Faucheur,\n              \"BGP-MPLS
      IP Virtual Private Network (VPN) Extension for\n              IPv6 VPN\", RFC
      4659, DOI 10.17487/RFC4659, September 2006,\n              <https://www.rfc-editor.org/info/rfc4659>.\n
      \  [RFC4760]  Bates, T., Chandra, R., Katz, D., and Y. Rekhter,\n              \"Multiprotocol
      Extensions for BGP-4\", RFC 4760,\n              DOI 10.17487/RFC4760, January
      2007,\n              <https://www.rfc-editor.org/info/rfc4760>.\n   [RFC4798]
      \ De Clercq, J., Ooms, D., Prevost, S., and F. Le Faucheur,\n              \"Connecting
      IPv6 Islands over IPv4 MPLS Using IPv6\n              Provider Edge Routers
      (6PE)\", RFC 4798,\n              DOI 10.17487/RFC4798, February 2007,\n              <https://www.rfc-editor.org/info/rfc4798>.\n
      \  [RFC5462]  Andersson, L. and R. Asati, \"Multiprotocol Label Switching\n
      \             (MPLS) Label Stack Entry: \"EXP\" Field Renamed to \"Traffic\n
      \             Class\" Field\", RFC 5462, DOI 10.17487/RFC5462, February\n              2009,
      <https://www.rfc-editor.org/info/rfc5462>.\n   [RFC5492]  Scudder, J. and R.
      Chandra, \"Capabilities Advertisement\n              with BGP-4\", RFC 5492,
      DOI 10.17487/RFC5492, February\n              2009, <https://www.rfc-editor.org/info/rfc5492>.\n
      \  [RFC5549]  Le Faucheur, F. and E. Rosen, \"Advertising IPv4 Network\n              Layer
      Reachability Information with an IPv6 Next Hop\",\n              RFC 5549, DOI
      10.17487/RFC5549, May 2009,\n              <https://www.rfc-editor.org/info/rfc5549>.\n
      \  [RFC7606]  Chen, E., Ed., Scudder, J., Ed., Mohapatra, P., and K.\n              Patel,
      \"Revised Error Handling for BGP UPDATE Messages\",\n              RFC 7606,
      DOI 10.17487/RFC7606, August 2015,\n              <https://www.rfc-editor.org/info/rfc7606>.\n
      \  [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119
      Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,
      <https://www.rfc-editor.org/info/rfc8174>.\n"
    title: 8.1.  Normative References
  - contents:
    - "8.2.  Informative References\n   [Enhanced-GR]\n              Patel, K., Chen,
      E., Fernando, R., and J. Scudder,\n              \"Accelerated Routing Convergence
      for BGP Graceful\n              Restart\", Work in Progress,\n              draft-ietf-idr-enhanced-gr-06,
      June 2016.\n   [RFC4724]  Sangli, S., Chen, E., Fernando, R., Scudder, J., and
      Y.\n              Rekhter, \"Graceful Restart Mechanism for BGP\", RFC 4724,\n
      \             DOI 10.17487/RFC4724, January 2007,\n              <https://www.rfc-editor.org/info/rfc4724>.\n
      \  [RFC5331]  Aggarwal, R., Rekhter, Y., and E. Rosen, \"MPLS Upstream\n              Label
      Assignment and Context-Specific Label Space\",\n              RFC 5331, DOI
      10.17487/RFC5331, August 2008,\n              <https://www.rfc-editor.org/info/rfc5331>.\n
      \  [RFC6514]  Aggarwal, R., Rosen, E., Morin, T., and Y. Rekhter, \"BGP\n              Encodings
      and Procedures for Multicast in MPLS/BGP IP\n              VPNs\", RFC 6514,
      DOI 10.17487/RFC6514, February 2012,\n              <https://www.rfc-editor.org/info/rfc6514>.\n
      \  [RFC7432]  Sajassi, A., Ed., Aggarwal, R., Bitar, N., Isaac, A.,\n              Uttaro,
      J., Drake, J., and W. Henderickx, \"BGP MPLS-Based\n              Ethernet VPN\",
      RFC 7432, DOI 10.17487/RFC7432, February\n              2015, <https://www.rfc-editor.org/info/rfc7432>.\n
      \  [RFC7911]  Walton, D., Retana, A., Chen, E., and J. Scudder,\n              \"Advertisement
      of Multiple Paths in BGP\", RFC 7911,\n              DOI 10.17487/RFC7911, July
      2016,\n              <https://www.rfc-editor.org/info/rfc7911>.\n   [TUNNEL-ENCAPS]\n
      \             Rosen, E., Patel, K., and G. Velde, \"The BGP Tunnel\n              Encapsulation
      Attribute\", Work in Progress,\n              draft-ietf-idr-tunnel-encaps-07,
      July 2017.\n"
    title: 8.2.  Informative References
  title: 8.  References
- contents:
  - "Acknowledgements\n   This document obsoletes RFC 3107.  We wish to thank Yakov
    Rekhter,\n   co-author of RFC 3107, for his work on that document.  We also wish\n
    \  to thank Ravi Chandra, Enke Chen, Srihari R. Sangli, Eric Gray, and\n   Liam
    Casey for their review of and comments on that document.\n   We thank Alexander
    Okonnikov and David Lamparter for pointing out a\n   number of the errors in RFC
    3107.\n   We wish to thank Lili Wang and Kaliraj Vairavakkalai for their help\n
    \  and advice during the preparation of this document.\n   We also thank Mach
    Chen, Bruno Decraene, Jie Dong, Adrian Farrel,\n   Jeff Haas, Jonathan Hardwick,
    Jakob Heitz, Alexander Okonnikov, Keyur\n   Patel, Kevin Wang, and Lucy Yong for
    their review of and comments on\n   this document.\n"
  title: Acknowledgements
- contents:
  - "Author's Address\n   Eric C. Rosen\n   Juniper Networks, Inc.\n   10 Technology
    Park Drive\n   Westford, Massachusetts  01886\n   United States of America\n   Email:
    erosen@juniper.net\n"
  title: Author's Address
