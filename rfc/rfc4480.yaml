- contents:
  - "                 RPID: Rich Presence Extensions to the\n                Presence
    Information Data Format (PIDF)\n"
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   The Presence Information Data Format (PIDF) defines a basic format\n
    \  for representing presence information for a presentity.  This format\n   defines
    a textual note, an indication of availability (open or\n   closed) and a Uniform
    Resource Identifier (URI) for communication.\n   The Rich Presence Information
    Data format (RPID) described here is an\n   extension that adds optional elements
    to the Presence Information\n   Data Format (PIDF).  These extensions provide
    additional information\n   about the presentity and its contacts.  The information
    is designed\n   so that much of it can be derived automatically, e.g., from calendar\n
    \  files or user activity.\n   This extension includes information about what
    the person is doing, a\n   grouping identifier for a tuple, when a service or
    device was last\n   used, the type of place a person is in, what media communications\n
    \  might remain private, the relationship of a service tuple to another\n   presentity,
    the person's mood, the time zone it is located in, the\n   type of service it
    offers, an icon reflecting the presentity's\n   status, and the overall role of
    the presentity.\n   These extensions include presence information for persons,
    services\n   (tuples), and devices.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n
    \  2. Terminology and Conventions .....................................4\n   3.
    RPID Elements ...................................................4\n      3.1.
    Overview ...................................................4\n      3.2. Activities
    Element .........................................7\n      3.3. Class Element .............................................10\n
    \     3.4. Device Identifier .........................................10\n      3.5.
    Mood Element ..............................................10\n      3.6. Place-is
    Element ..........................................12\n      3.7. Place-type Element
    ........................................13\n      3.8. Privacy Element ...........................................14\n
    \     3.9. Relationship Element ......................................15\n      3.10.
    Service Class ............................................15\n      3.11. Sphere
    Element ...........................................16\n      3.12. Status-Icon
    Element ......................................16\n      3.13. Time Offset ..............................................17\n
    \     3.14. User-Input Element .......................................17\n   4.
    Example ........................................................18\n   5. XML
    Schema Definitions .........................................20\n      5.1. urn:ietf:params:xml:ns:pidf:rpid
    ..........................20\n   6. Extending RPID .................................................30\n
    \  7. IANA Considerations ............................................31\n      7.1.
    URN Sub-Namespace Registration for ........................31\n           'urn:ietf:params:xml:ns:pidf:rpid'\n
    \     7.2. Schema Registration for Schema ............................32\n           'urn:ietf:params:xml:ns:pidf:status:rpid'\n
    \  8. Internationalization Considerations ............................32\n   9.
    Security Considerations ........................................32\n   10. References
    ....................................................33\n      10.1. Normative
    References .....................................33\n      10.2. Informative References
    ...................................34\n   Appendix A.  Acknowledgements .....................................35\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The Presence Information Data Format (PIDF) definition [8]
    describes\n   a basic presence information data format, encoded as an Extensible\n
    \  Markup Language (XML) [9] (SCHEMA-1 [10]) (SCHEMA-2 [11]), for\n   exchanging
    presence information in systems compliant with the common\n   model for presence
    and instant messaging [5].  It consists of a\n   <presence> root element, zero
    or more <tuple> elements carrying\n   presence information including a Uniform
    Resource Identifier (URI)\n   for communication, zero or more <note> elements,
    and zero or more\n   extension elements from other name spaces.  Each tuple defines
    a\n   basic status of either \"open\" or \"closed\".\n   However, it is frequently
    useful to convey additional information\n   about a user that needs to be interpreted
    by an automata, and is\n   therefore not appropriate to be placed in the <note>
    element of the\n   PIDF document, which is typically intended for the human observer.\n
    \  Therefore, this specification defines extensions to the PIDF document\n   format
    for conveying richer presence information.  Generally, the\n   extensions have
    been chosen to provide features common in existing\n   presence systems at the
    time of writing, in addition to elements that\n   could readily be derived automatically
    from existing sources of\n   presence, such as calendaring systems or communication
    devices, or\n   sources describing the user's current physical environment.\n
    \  The presence data model [16] defines the concepts of service, device,\n   and
    person as the data elements that are used to model the state of a\n   presentity.
    \ (The term \"presentity\" is defined in RFC 2778 [5] and\n   abbreviates presence
    entity.  A presentity provides presence\n   information to a presence service.)
    \ Services are encoded using the\n   <tuple> element, defined in PIDF; devices
    and persons are represented\n   by the <device> and <person> XML elements, respectively,
    defined in\n   the data model [16].  However, neither PIDF nor the data model\n
    \  defines presence attributes beyond the <basic> status element.\n   This specification
    defines additional presence attributes to describe\n   person, service, and device
    data elements, summarized as \"Rich\n   Presence Information Data format for presence\"
    (RPID).  These\n   attributes are specified by XML elements that extend the PIDF
    <tuple>\n   element and the <device> and <person> elements defined in the data\n
    \  model.\n   This extension has two main goals:\n   1.  Provide rich presence
    information that is at least as powerful as\n       common commercial presence
    systems.  Such feature-parity\n       simplifies transition to systems complying
    with the Common\n       Profile for Instant Messaging (CPIM) [14], both in terms
    of user\n       acceptance and protocol conversion.\n   2.  Maintain backward-compatibility
    with PIDF, so that PIDF-only\n       watchers and gateways can continue to function
    properly,\n       naturally without access to the functionality described here.\n
    \  We make no assumptions as to how the information in the RPID elements\n   is
    generated.  Experience has shown that users are not always\n   diligent about
    updating their presence status.  Thus, we want to make\n   it as easy as possible
    to derive RPID information from other\n   information sources, such as personal
    calendars, the status of\n   communication devices such as telephones, typing
    activity, and\n   physical presence detectors as commonly found in energy-management\n
    \  systems.\n   Many of the elements correspond to data commonly found in personal\n
    \  calendars.  Thus, we attempted to align some of the extensions with\n   the
    usage found in calendar formats such as iCal [13].\n   The information in a presence
    document can be generated by a single\n   entity or can be composed from information
    published by multiple\n   entities.\n   Note that PIDF documents and this extension
    can be used in two\n   different contexts, namely, by the presentity to publish
    its presence\n   status and by the presence server to notify some set of watchers.\n
    \  The presence server MAY compose, translate, or filter the published\n   presence
    state before delivering customized presence information to\n   the watcher.  For
    example, it may merge presence information from\n   multiple presence user agents,
    remove whole elements, translate\n   values in elements, or remove information
    from elements.  Mechanisms\n   that filter calls and other communications to the
    presentity can\n   subscribe to this presence information just like a regular
    watcher\n   and in turn generate automated rules, such as scripts [15], that\n
    \  govern the actual communications behavior of the presentity.  Details\n   are
    described in the data model document.\n   Since RPID is a PIDF XML document, it
    also uses the content type\n   application/pidf+xml.\n"
  title: 1.  Introduction
- contents:
  - "2.  Terminology and Conventions\n   This memo makes use of the vocabulary defined
    in the IMPP model\n   document [5].  Terms such as CLOSED, INSTANT MESSAGE, OPEN,
    PRESENCE\n   SERVICE, PRESENTITY, WATCHER, and WATCHER USER AGENT in the memo
    are\n   used in the same meaning as defined therein.\n   The key words MUST, MUST
    NOT, REQUIRED, SHOULD, SHOULD NOT,\n   RECOMMENDED, MAY, and OPTIONAL in this
    document are to be interpreted\n   as described in BCP 14, RFC 2119 [1].\n"
  title: 2.  Terminology and Conventions
- contents:
  - '3.  RPID Elements

    '
  - contents:
    - "3.1.  Overview\n   Some of the RPID elements describe services, some devices,
      and some\n   the person.  As such, they either extend <tuple>, <device>, or\n
      \  <person>, respectively.  Below, we summarize the RPID elements.  The\n   next
      sections will then provide more detailed descriptions.\n   activities:  The
      <activities> status element enumerates what the\n      person is doing.\n   class:
      \ An identifier that groups similar person elements, devices,\n      or services.\n
      \  deviceID:  A device identifier in a tuple references a <device>\n      element,
      indicating that this device contributes to the service\n      described by the
      tuple.\n   mood:  The <mood> status element indicates the mood of the person.\n
      \  place-is:  The <place-is> status element reports on the properties of\n      the
      place the presentity is currently at, such as the levels of\n      light and
      noise.\n   place-type:  The <place-type> status elements reports the type of\n
      \     place the person is located in, such as 'classroom' or 'home'.\n   privacy:
      \ The <privacy> element distinguishes whether the\n      communication service
      is likely to be observable by other parties.\n   relationship:  When a service
      is likely to reach a user besides the\n      person associated with the presentity,
      the relationship indicates\n      how that user relates to the person.\n   service-class:
      \ The <service-class> element describes whether the\n      service is delivered
      electronically, is a postal or delivery\n      service, or describes in-person
      communications.\n   sphere:  The <sphere> element characterizes the overall
      current role\n      of the presentity.\n   status-icon:  The <status-icon> element
      depicts the current status of\n      the person or service.\n   time-offset:
      \ The <time-offset> status element quantifies the time\n      zone the person
      is in, expressed as the number of minutes away\n      from UTC.\n   user-input:
      \ The <user-input> element records the user-input or usage\n      state of the
      service or device, based on human user input.\n   The 'From/until?' column in
      Table 1 indicates by an 'x' that the\n   element can take 'from' and 'until'
      attributes.  An 'x' in the\n   'Note?' column marks elements that can include
      a <note> element.  The\n   usage of these elements within the <person>, <tuple>,
      and <device>\n   elements is shown in columns 4 through 6.  An 'x' in the respective\n
      \  column indicates that the RPID element MAY appear as a child of that\n   element.\n
      +-----------------+------------+------+----------+---------+----------+\n |
      Element         | From/until | Note | <person> | <tuple> | <device> |\n |                 |
      ?          | ?    |          |         |          |\n +-----------------+------------+------+----------+---------+----------+\n
      | <activities>    |      x     |   x  |     x    |         |          |\n |
      <class>         |            |      |     x    |    x    |     x    |\n | <deviceID>
      \     |            |      |          |    x    |          |\n | <mood>          |
      \     x     |   x  |     x    |         |          |\n | <place-is>      |      x
      \    |   x  |     x    |         |          |\n | <place-type>    |      x     |
      \  x  |     x    |         |          |\n | <privacy>       |      x     |   x
      \ |     x    |    x    |          |\n | <relationship>  |            |   x  |
      \         |    x    |          |\n | <service-class> |            |   x  |          |
      \   x    |          |\n | <sphere>        |      x     |      |     x    |         |
      \         |\n | <status-icon>   |      x     |      |     x    |    x    |          |\n
      | <time-offset>   |      x     |      |     x    |         |          |\n |
      <user-input>    |            |      |     x    |    x    |     x    |\n +-----------------+------------+------+----------+---------+----------+\n
      \                                 Table 1\n   In general, it is unlikely that
      a presentity will publish or announce\n   all of these elements at the same
      time.  Rather, these elements were\n   chosen to give the presentity maximum
      flexibility in deriving this\n   information from existing sources, such as
      calendaring tools, device\n   activity sensors, or location trackers, as well
      as to manually\n   configure this information.  In either case, there is no
      guarantee\n   that the information is accurate, as users forget to update calendars\n
      \  or may not always adjust the presence information manually.\n   The namespace
      URIs for these elements defined by this specification\n   are URNs [2], using
      the namespace identifier 'ietf' defined by [4]\n   and extended by [6]:\n      urn:ietf:params:xml:ns:pidf:rpid\n
      \  The elements marked with the value 'x' in column 2 of Table 1 MAY be\n   qualified
      with the 'from' and 'until' attributes to describe the\n   absolute time when
      the element assumed this value and the absolute\n   time until which this element
      is expected to be valid.  Note that\n   there can be multiple elements of the
      same type, whose time ranges\n   SHOULD NOT overlap.\n   Elements MAY contain
      an 'id' attribute that allows to uniquely\n   reference the element.\n   Enumerations
      can be extended by elements from other namespaces, as\n   described in Section
      6.  The <activities>, <mood>, and <place-type>\n   elements can also take <other>
      elements containing text, for custom\n   free-text values specific to an application.\n
      \  All elements described in this document are optional within PIDF\n   documents.\n"
    title: 3.1.  Overview
  - contents:
    - "3.2.  Activities Element\n   The <activities> element describes what the person
      is currently\n   doing, expressed as an enumeration of activity-describing elements.\n
      \  A person can be engaged in multiple activities at the same time,\n   e.g.,
      traveling and having a meal.  The <activities> element can be\n   quite helpful
      to the watcher in judging how appropriate a\n   communication attempt is and
      which means of communications is most\n   likely to succeed and not annoy the
      person.  The activity indications\n   correspond roughly to the category field
      in calendar entries, such as\n   Section 4.8.1.2 of RFC 2445 [13].\n   An activities
      enumeration consists of one or more elements using\n   elements drawn from the
      list below, a string enclosed in the <other>\n   element, or IANA-registered
      values from other namespaces (Section 7).\n   If a person publishes an activity
      of \"permanent-absence\", it is\n   likely that all services will report a status
      of CLOSED.  In general,\n   services MAY advertise either service status for
      any activity value.\n   Activities such as <appointment>, <breakfast>, <dinner>,
      <holiday>,\n   <lunch>, <meal>, <meeting>, <performance>, <travel>, or <vacation>\n
      \  can often be derived from calendar information.\n   appointment:  The person
      has a calendar appointment, without\n      specifying exactly of what type.
      \ This activity is indicated if\n      more detailed information is not available
      or the person chooses\n      not to reveal more information.\n   away:  The
      person is physically away from all interactive\n      communication devices.
      \ This activity element was included since\n      it can often be derived automatically
      from security systems,\n      energy management systems, or entry badge systems.
      \ Although this\n      activity would typically be associated with a status
      of CLOSED\n      across all services, a person may declare himself or herself
      away\n      to discourage communication, but indicate that he or she still can\n
      \     be reached if needed.  However, communication attempts might reach\n      an
      answering service, for example.\n   breakfast:  The person is eating the first
      meal of the day, usually\n      eaten in the morning.\n   busy:  The person
      is busy, without further details.  Although this\n      activity would typically
      be associated with a status of CLOSED\n      across all services, a person may
      declare himself or herself busy\n      to discourage communication, but indicate
      that he or she still can\n      be reached if needed.\n   dinner:  The person
      is having his or her main meal of the day, eaten\n      in the evening or at
      midday.\n   holiday:  This is a scheduled national or local holiday.\n   in-transit:
      \ The person is riding in a vehicle, such as a car, but\n      not steering.
      \ The <place-type> element provides more specific\n      information about the
      type of conveyance the person is using.\n   looking-for-work:  The presentity
      is looking for (paid) work.\n   lunch:  The person is eating his or her midday
      meal.\n   meal:  The person is scheduled for a meal, without specifying whether\n
      \     it is breakfast, lunch, or dinner, or some other meal.\n   meeting:  The
      person is in an assembly or gathering of people, as for\n      a business, social,
      or religious purpose.  A meeting is a sub-\n      class of an appointment.\n
      \  on-the-phone:  The person is talking on the telephone.  This activity\n      is
      included since it can often be derived automatically.\n   other:  The person
      is engaged in an activity with no defined\n      representation as an <activities>
      element.  The enclosed string\n      describes the activity in plain text.\n
      \  performance:  A performance is a sub-class of an appointment and\n      includes
      musical, theatrical, and cinematic performances as well\n      as lectures.
      \ It is distinguished from a meeting by the fact that\n      the person may
      either be lecturing or be in the audience, with a\n      potentially large number
      of other people, making interruptions\n      particularly noticeable.\n   permanent-absence:
      \ The person will not return for the foreseeable\n      future, e.g., because
      it is no longer working for the company.\n      This activity is associated
      with a status of CLOSED across all\n      services.\n   playing:  The person
      is occupying himself or herself in amusement,\n      sport, or other recreation.\n
      \  presentation:  The person is giving a presentation, lecture, or\n      participating
      in a formal round-table discussion.\n   shopping:  The person is visiting stores
      in search of goods or\n      services.\n   sleeping:  This activity category
      can often be generated\n      automatically from a calendar, local time information,
      or\n      biometric data.\n   spectator:  The person is observing an event,
      such as a sports event.\n   steering:  The person is controlling a vehicle,
      watercraft, or plane.\n   travel:  The person is on a business or personal trip,
      but not\n      necessarily in-transit.\n   tv:  The person is watching television.\n
      \  unknown:  The activity of the person is unknown.  This element is\n      generally
      not used together with other activities.\n   vacation:  A period of time devoted
      to pleasure, rest, or relaxation.\n   working:  The presentity is engaged in,
      typically paid, labor, as\n      part of a profession or job.\n   worship:  The
      presentity is participating in religious rites.\n   The <activities> element
      MAY be qualified with the 'from' and 'until'\n   attributes as described in
      Section 3.1.\n   Example:\n     <activities>\n       <note>Enjoying the morning
      paper</note>\n       <vacation/>\n       <breakfast/>\n       <other>reading</other>\n
      \    </activities>\n"
    title: 3.2.  Activities Element
  - contents:
    - "3.3.  Class Element\n   The <class> element describes the class of the service,
      device, or\n   person.  Multiple elements can have the same class name within
      a\n   presence document, but each person, service, or device can only have\n
      \  one class label.  The naming of classes is left to the presentity.\n   The
      presentity can use this information to group similar services,\n   devices,
      or person elements or to convey information that the\n   presence agent can
      use for filtering or authorization.  This\n   information is not generally presented
      to the watcher user interface.\n   The <class> element MUST NOT be qualified
      with the 'from' and 'until'\n   attributes as described in Section 3.1.\n"
    title: 3.3.  Class Element
  - contents:
    - "3.4.  Device Identifier\n   The <deviceID> element in the <tuple> element references
      the device\n   that provides a particular service.  The element is defined\n
      \  syntactically in the data model [16] schema.  One service can be\n   provided
      by multiple devices, so that each service tuple may contain\n   zero or more
      <deviceID> elements.  There is no significance in the\n   order of these elements.\n
      \  The <deviceID> element MUST NOT be qualified with the 'from' and\n   'until'
      attributes as described in Section 3.1.\n"
    title: 3.4.  Device Identifier
  - contents:
    - "3.5.  Mood Element\n   The <mood> element describes the mood of the presentity.
      \ The mood\n   values are enumerated chosen by the presentity.  The mood itself
      is\n   provided as the element name of a defined child element of the <mood>\n
      \  element (e.g., <happy/>); one such child element is REQUIRED.  The\n   user
      MAY also specify a natural-language description of, or reason\n   for, the mood
      in the <note> child of the <mood> element, which is\n   OPTIONAL.  (This definition
      follows the Jabber Extension JEP-107.)\n   It is RECOMMENDED that an implementation
      support the mood values\n   proposed in Jabber Extension JEP-0107, which in
      turn are a superset\n   of the Wireless Village [18] mood values and the values
      enumerated in\n   the Affective Knowledge Representation that has been defined
      by\n   Lisetti [17]:\n   A mood enumeration consists of one or more elements
      using elements\n   drawn from the list below, a string enclosed in the <other>
      element,\n   or IANA-registered values from other namespaces (Section 7).\n
      \  The <mood> element MAY be qualified with the 'from' and 'until'\n   attributes
      as described in Section 3.1.\n   o  afraid\n   o  amazed\n   o  angry\n   o
      \ annoyed\n   o  anxious\n   o  ashamed\n   o  bored\n   o  brave\n   o  calm\n
      \  o  cold\n   o  confused\n   o  contented\n   o  cranky\n   o  curious\n   o
      \ depressed\n   o  disappointed\n   o  disgusted\n   o  distracted\n   o  embarrassed\n
      \  o  excited\n   o  flirtatious\n   o  frustrated\n   o  grumpy\n   o  guilty\n
      \  o  happy\n   o  hot\n   o  humbled\n   o  humiliated\n   o  hungry\n   o
      \ hurt\n   o  impressed\n   o  in_awe\n   o  in_love\n   o  indignant\n   o
      \ interested\n   o  invincible\n   o  jealous\n   o  lonely\n   o  mean\n   o
      \ moody\n   o  nervous\n   o  neutral\n   o  offended\n   o  other\n   o  playful\n
      \  o  proud\n   o  relieved\n   o  remorseful\n   o  restless\n   o  sad\n   o
      \ sarcastic\n   o  serious\n   o  shocked\n   o  shy\n   o  sick\n   o  sleepy\n
      \  o  stressed\n   o  surprised\n   o  thirsty\n   o  unknown\n   o  worried\n
      \  Example:\n     <mood>\n       <note>I'm ready for the bar BOF!</note>\n       <sleepy/>\n
      \      <thirsty/>\n     </mood>\n"
    title: 3.5.  Mood Element
  - contents:
    - "3.6.  Place-is Element\n   The <place-is> element describes properties of the
      place the person\n   is currently at.  This offers the watcher an indication
      of what kind\n   of communication is likely to be successful.  Each major media
      type\n   has its own set of attributes.  Omitting the element indicates that\n
      \  the property is unknown.\n   For audio, we define the following attributes:\n
      \  noisy:  The person is in a place with a level of background noise\n      that
      makes audio communications difficult.\n   ok:  The environmental conditions
      are suitable for audio\n      communications.\n   quiet:  The person is in a
      place such as a library, restaurant, place\n      of worship, or theater that
      discourages noise, conversation, and\n      other distractions.\n   unknown:
      \ The place attributes for audio are unknown.\n   For video, we define the following
      attributes:\n   toobright:  The person is in a bright place, sufficient for
      good\n      rendering on video.\n   ok:  The environmental conditions are suitable
      for video.\n   dark:  The person is in a dark place, and thus the camera may
      not be\n      able to capture a good image.\n   unknown:  The place attributes
      for video are unknown.\n   For text (real-time text and instant messaging),
      we define\n   uncomfortable:  Typing or other text entry is uncomfortable.\n
      \  inappropriate:  Typing or other text entry is inappropriate, e.g.,\n      since
      the user is in a vehicle or house of worship.\n   ok:  The environmental conditions
      are suitable for text-based\n      communications.\n   unknown:  The place attributes
      for text are unknown.\n   This list can be augmented by free-text values in
      a note or\n   additional IANA-registered values (Section 7).\n   The <place-is>
      element contains other elements, e.g.,\n     <place-is>\n       <audio>\n         <noisy
      />\n       </audio>\n       <video>\n         <dark />\n       </video>\n     </place-is>\n
      \  The <place-is> element MAY be qualified with the 'from' and 'until'\n   attributes
      as described in Section 3.1.\n"
    title: 3.6.  Place-is Element
  - contents:
    - "3.7.  Place-type Element\n   The <place-type> element describes the type of
      place the person is\n   currently at.  This offers the watcher an indication
      of what kind of\n   communication is likely to be appropriate.  The initial
      set of values\n   is contained in RFC 4589 [12].\n   This list can be augmented
      by free-text values or additional IANA-\n   registered values as described in
      RFC 4589.\n   The <place-type> element is a choice of elements, as in\n     <place-type>\n
      \         <pt:street/>\n     </place-type>\n   The <place-type> element MAY
      be qualified with the 'from' and 'until'\n   attributes as described in Section
      3.1.\n"
    title: 3.7.  Place-type Element
  - contents:
    - "3.8.  Privacy Element\n   The <privacy> element indicates which types of communication
      third\n   parties in the vicinity of the presentity are unlikely to be able
      to\n   intercept accidentally or intentionally.  This does not in any way\n
      \  describe the privacy properties of the electronic communication\n   channel,
      e.g., properties of the encryption algorithm or the network\n   protocol used.\n
      \  audio: Inappropriate individuals are not likely to overhear audio\n      communications.\n
      \  text:  Inappropriate individuals are not likely to see text\n      communications.\n
      \  unknown:  This information is unknown.\n   video:  Inappropriate individuals
      are not likely to see video\n      communications.\n      The <privacy> element
      can be used by logic executing on the\n      watcher or by a composer to filter,
      sort and label tuples.  For\n      example, a composer may have rules that limit
      the publication of\n      tuples labeled \"private\" to a select subset of the
      watchers.\n   The <privacy> element MAY be qualified with the 'from' and 'until'\n
      \  attributes as described in Section 3.1.\n   Example:\n     <privacy>\n       <text/>\n
      \      <audio/>\n     </privacy>\n"
    title: 3.8.  Privacy Element
  - contents:
    - "3.9.  Relationship Element\n   The <relationship> element extends <tuple> and
      designates the type of\n   relationship an alternate contact has with the presentity.
      \ This\n   element is provided only if the tuple refers to somebody other than\n
      \  the presentity.  Relationship values include \"family\", \"friend\",\n   \"associate\"
      (e.g., for a colleague), \"assistant\", \"supervisor\",\n   \"self\", and \"unknown\".
      \ The default is \"self\".\n   If a relationship is indicated, the URI in the
      <contact> element\n   refers to the entity, such as the assistant, that has
      a relationship\n   to the presentity, not the presentity itself.\n   Like tuples
      without a <relationship> qualifier, the <contact> element\n   for tuples labeled
      with a relationship can contain either a\n   communication URI such as \"im\",
      \"sip\", \"sips\", \"h323\", \"tel\", or\n   \"mailto\", or a presence URI,
      such as \"pres\" or \"sip\".\n   Example:\n     <relationship>\n       <friend/>\n
      \    </relationship>\n"
    title: 3.9.  Relationship Element
  - contents:
    - "3.10.  Service Class\n   The <service-class> element extends <tuple> and designates
      the type\n   of service offered.\n   electronic:  Delivery of information by
      electronic means, i.e.,\n      without delivering physical objects.  Examples
      include telephone,\n      fax, email, instant messaging, and SMS.\n   postal:
      \ Delivery by the postal service, e.g., as a letter, parcel,\n      or postcard.
      \ Delivery could be to a post office box or central\n      mailroom rather than
      the presentity's office location, for\n      example.\n   courier:  Delivery
      by messenger, overnight delivery, or courier.\n      Courier-delivered messages
      are usually delivered to a receptionist\n      rather than, say, a mailroom
      or receiving department.\n   freight:  Delivery by freight carrier, typically
      of larger objects\n      that are not sent by postal mail or courier.  The recipient
      is\n      often the shipping department or a loading dock.\n   in-person:  Describes
      the coordinates for visits in person, as by a\n      visitor, i.e., usually
      somebody's office or residence.\n   unknown:  The type of service is unknown.\n
      \  Electronic service is implied if omitted.  The service types\n   'postal',
      'courier', 'freight', and 'in-person' MUST NOT be used\n   unless the contact
      URI is empty.  Additional data elements defined\n   elsewhere describe the physical
      service delivery address for the in-\n   person, postal, or delivery services.
      \ Such addresses might be\n   specified in geospatial coordinates, civic addresses,
      or some\n   specialized address format, e.g., for interstellar addresses or
      a\n   company-specific delivery system.\n   Example:\n     <service-class><postal/></service-class>\n"
    title: 3.10.  Service Class
  - contents:
    - "3.11.  Sphere Element\n   The <sphere> element designates the current state
      and role that the\n   person plays.  For example, it might describe whether
      the person is\n   in a work mode, at home, or participating in activities related
      to\n   some other organization such as the IETF or a church.  This document\n
      \  does not define names for these spheres except for two common ones,\n   \"work\"
      and \"home\", as well as \"unknown\".\n   Spheres allow the person to easily
      turn on or off certain rules that\n   depend on what groups of people should
      be made aware of the person's\n   status.  For example, if the person is a Boy
      Scout leader, he might\n   set the sphere to \"scouting\" and then have a rule
      set that allows\n   other scout masters in his troop to see his presence status.
      \ As soon\n   as he switches his status to \"work\", \"home\", or some other
      sphere,\n   the fellow scouts would lose access.\n   The <sphere> element MAY
      be qualified with the 'from' and 'until'\n   attributes as described in Section
      3.1.\n   Example:\n     <sphere>\n       <home/>\n     </sphere>\n"
    title: 3.11.  Sphere Element
  - contents:
    - "3.12.  Status-Icon Element\n   The <status-icon> element includes a URI pointing
      to an image (icon)\n   representing the current status of the person or service.
      \ The\n   watcher MAY use this information to represent the status in a\n   graphical
      user interface.  Presentities SHOULD provide images of\n   sizes and aspect
      ratios that are appropriate for rendering as an\n   icon.  Support for JPEG,
      PNG, and GIF formats is RECOMMENDED.\n   Watchers resolving the URI MUST validate
      whether the local copy of\n   the icon is current when receiving a notification,
      using the standard\n   cache control mechanism in the URI-identified retrieval
      protocol.\n   Example:\n     <status-icon>http://www.example.com/playing.gif</status-icon>\n"
    title: 3.12.  Status-Icon Element
  - contents:
    - "3.13.  Time Offset\n   The <time-offset> element describes the number of minutes
      of offset\n   from UTC at the person's current location.  A positive number\n
      \  indicates that the local time-of-day is ahead (i.e., east of)\n   Universal
      Time, while a negative number indicates that the local\n   time-of-day is behind
      (i.e., west of) Universal Time.  Transitions\n   into and out of daylight savings
      time may temporarily cause a\n   difference between the true offset from UTC
      and the time offset\n   element.\n   An optional attribute, description, can
      be used to describe the\n   offset, e.g., by labeling the time zone.  This description
      is meant\n   for human consumption.\n   Publishers on mobile devices SHOULD
      NOT publish this information\n   unless they know the time offset information
      to reflect the current\n   location.  (For example, many laptop users do not
      update their time\n   zone when traveling.)  Publishers SHOULD update the information\n
      \  whenever they discover that their UTC offset has changed.\n   Example:\n
      \    <time-offset description=\"America/New_York\">-300\n     </time-offset>\n"
    title: 3.13.  Time Offset
  - contents:
    - "3.14.  User-Input Element\n   The <user-input> element records the user-input
      or usage state of the\n   service or device, based on human user input, e.g.,
      keyboard,\n   pointing device, or voice.  If contained in a <person> element,
      it\n   summarizes any user input activity across all services and devices\n
      \  operated by the presentity.  The mechanism for such aggregation is\n   beyond
      the scope of this document, but generally reflects the most\n   recent user
      input across all devices and services.  The element can\n   assume one of two
      values, namely, 'active' or 'idle', with an\n   optional 'last-input' attribute
      that records when the last user input\n   was received.  An optional 'idle-threshold'
      element records how long\n   the presentity will wait before reporting the service
      or device to be\n   idle, measured in seconds.\n   (A two-state model was chosen
      since it would otherwise be necessary\n   to send repeated last-input updates
      during continuous activity.)\n   A service that wants to indicate user input
      activity sends a <user-\n   input> 'active' indication when the user has provided
      user input\n   within a configurable interval of time, the idle-threshold.  If
      the\n   user ceases to provide input and the idle-threshold has elapsed, the\n
      \  tuple is marked with a <user-input> 'idle' indication instead,\n   optionally
      including the time of last activity in the 'last-input'\n   attribute.  An example
      is below:\n     <user-input idle-threshold=\"600\"\n       last-input=\"2004-10-21T13:20:00.000-05:00\">idle</user-input>\n
      \  Depending on device or service capabilities, user input may be\n   detected
      only for a particular application, i.e., when the\n   application has user focus
      or when a user has sent a message or\n   placed a call, or can be based on user
      input across all applications\n   running on one end system.\n   The <user-input>
      element may be used by a watcher, typically in\n   combination with other data,
      to estimate how likely a user is to\n   answer when contacting the service.
      \ A tuple that has not been used\n   in a while may still be OPEN, but a watcher
      may choose to first\n   contact a URI in a tuple that is both OPEN and has been
      used more\n   recently.\n   The <user-input> attribute can be omitted if the
      presentity wants to\n   indicate that the device has not been used for a while,
      but does not\n   want to reveal the precise duration, as in the following:\n
      \    <user-input>idle</user-input>\n   Configuration MUST include the option
      to omit the 'last-input'\n   attribute.\n"
    title: 3.14.  User-Input Element
  title: 3.  RPID Elements
- contents:
  - "4.  Example\n   The example below describes the presentity\n   'pres:someone@example.com',
    which has a SIP contact,\n   'sip:someone@example.com', representing a service.
    \ It also has a\n   device contact, as an email box.  The presentity is in a meeting,
    in\n   a public office setting.  The 'until' information indicates that he\n   will
    be there until 5:30 pm local time.  The presentity also has an\n   assistant,
    sip:secretary@example.com, who happens to be available for\n   communications.\n
    \   <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n      <presence xmlns=\"urn:ietf:params:xml:ns:pidf\"\n
    \       xmlns:dm=\"urn:ietf:params:xml:ns:pidf:data-model\"\n        xmlns:lt=\"urn:ietf:params:xml:ns:location-type\"\n
    \       xmlns:rpid=\"urn:ietf:params:xml:ns:pidf:rpid\"\n        entity=\"pres:someone@example.com\">\n
    \    <tuple id=\"bs35r9\">\n       <status>\n         <basic>open</basic>\n       </status>\n
    \      <dm:deviceID>urn:device:0003ba4811e3</dm:deviceID>\n       <rpid:relationship><rpid:self/></rpid:relationship>\n
    \      <rpid:service-class><rpid:electronic/></rpid:service-class>\n       <contact
    priority=\"0.8\">im:someone@mobile.example.net</contact>\n       <note xml:lang=\"en\">Don't
    Disturb Please!</note>\n       <note xml:lang=\"fr\">Ne derangez pas, s'il vous
    plait</note>\n       <timestamp>2005-10-27T16:49:29Z</timestamp>\n     </tuple>\n
    \    <tuple id=\"ty4658\">\n       <status>\n         <basic>open</basic>\n       </status>\n
    \      <rpid:relationship><rpid:assistant/></rpid:relationship>\n       <contact
    priority=\"1.0\">mailto:secretary@example.com</contact>\n     </tuple>\n     <tuple
    id=\"eg92n8\">\n       <status>\n         <basic>open</basic>\n       </status>\n
    \      <dm:deviceID>urn:x-mac:0003ba4811e3</dm:deviceID>\n       <rpid:class>email</rpid:class>\n
    \      <rpid:service-class><rpid:electronic/></rpid:service-class>\n       <rpid:status-icon>http://example.com/mail.png</rpid:status-icon>\n
    \      <contact priority=\"1.0\">mailto:someone@example.com</contact>\n     </tuple>\n
    \    <note>I'll be in Tokyo next week</note>\n     <dm:device id=\"pc147\">\n
    \      <rpid:user-input idle-threshold=\"600\"\n         last-input=\"2004-10-21T13:20:00-05:00\">idle</rpid:user-input>\n
    \      <dm:deviceID>urn:device:0003ba4811e3</dm:deviceID>\n       <dm:note>PC</dm:note>\n
    \    </dm:device>\n     <dm:person id=\"p1\">\n       <rpid:activities from=\"2005-05-30T12:00:00+05:00\"\n
    \         until=\"2005-05-30T17:00:00+05:00\">\n          <rpid:note>Far away</rpid:note>\n
    \         <rpid:away/>\n       </rpid:activities>\n       <rpid:class>calendar</rpid:class>\n
    \      <rpid:mood>\n         <rpid:angry/>\n         <rpid:other>brooding</rpid:other>\n
    \      </rpid:mood>\n       <rpid:place-is>\n          <rpid:audio>\n             <rpid:noisy/>\n
    \         </rpid:audio>\n       </rpid:place-is>\n       <rpid:place-type><lt:residence/></rpid:place-type>\n
    \      <rpid:privacy><rpid:unknown/></rpid:privacy>\n       <rpid:sphere>bowling
    league</rpid:sphere>\n       <rpid:status-icon>http://example.com/play.gif</rpid:status-icon>\n
    \      <rpid:time-offset>-240</rpid:time-offset>\n       <dm:note>Scoring 120</dm:note>\n
    \      <dm:timestamp>2005-05-30T16:09:44+05:00</dm:timestamp>\n     </dm:person>\n
    \  </presence>\n"
  title: 4.  Example
- contents:
  - "5.  XML Schema Definitions\n   The RPID schema is shown below.  Due to limitations
    in composing\n   schemas, not all XML documents that validate against the schema
    below\n   are semantically valid RPID documents.  In particular, the schema\n
    \  allows each element to appear anyhere in PIDF or data-model elements;\n   Table
    1 restricts where these elements can appear for semantically\n   valid RPID documents.
    \ Elements that do not have from/until\n   parameters MUST NOT appear more than
    once in each <person>, <tuple>,\n   or <device>.\n"
  - contents:
    - "5.1.  urn:ietf:params:xml:ns:pidf:rpid\n   <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n
      \  <xs:schema targetNamespace=\"urn:ietf:params:xml:ns:pidf:rpid\"\n      xmlns=\"urn:ietf:params:xml:ns:pidf:rpid\"\n
      \     xmlns:dm=\"urn:ietf:params:xml:ns:pidf:data-model\"\n      xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n
      \     elementFormDefault=\"qualified\"\n      attributeFormDefault=\"unqualified\">\n
      \    <xs:simpleType name=\"activeIdle\">\n       <xs:restriction base=\"xs:string\">\n
      \        <xs:enumeration value=\"active\"/>\n         <xs:enumeration value=\"idle\"/>\n
      \      </xs:restriction>\n     </xs:simpleType>\n     <xs:element name=\"activities\">\n
      \      <xs:annotation>\n         <xs:documentation>\n           Describes what
      the person is currently doing, expressed as\n           an enumeration of activity-describing
      elements.  A person\n           can be engaged in multiple activities at the
      same time,\n           e.g., traveling and having a meal.\n         </xs:documentation>\n
      \      </xs:annotation>\n       <xs:complexType>\n         <xs:sequence>\n           <xs:element
      name=\"note\" type=\"Note_t\" minOccurs=\"0\"\n              maxOccurs=\"unbounded\"
      />\n           <xs:choice>\n             <xs:element name=\"unknown\" type=\"empty\"
      minOccurs=\"0\"/>\n             <xs:sequence maxOccurs=\"unbounded\">\n               <xs:choice>\n
      \                <xs:element name=\"appointment\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"away\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"breakfast\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"busy\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"dinner\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"holiday\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"in-transit\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"looking-for-work\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"meal\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"meeting\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"on-the-phone\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"performance\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"permanent-absence\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"playing\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"presentation\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"shopping\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"sleeping\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"spectator\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"steering\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"travel\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"tv\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"vacation\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"working\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"worship\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"other\"\n                   type=\"Note_t\"
      />\n                 <xs:any namespace=\"##other\"\n                   maxOccurs=\"unbounded\"
      processContents=\"lax\"/>\n               </xs:choice>\n             </xs:sequence>\n
      \          </xs:choice>\n         </xs:sequence>\n         <xs:attributeGroup
      ref=\"fromUntil\"/>\n         <xs:attribute name=\"id\" type=\"xs:ID\"/>\n         <xs:anyAttribute
      namespace=\"##any\" processContents=\"lax\"/>\n       </xs:complexType>\n     </xs:element>\n
      \    <xs:element name=\"class\" type=\"xs:token\">\n       <xs:annotation>\n
      \        <xs:documentation>\n           Describes the class of the service,
      device or person.\n         </xs:documentation>\n       </xs:annotation>\n     </xs:element>\n
      \    <xs:element name=\"mood\">\n       <xs:annotation>\n         <xs:documentation>\n
      \          Describes the mood of the presentity.\n         </xs:documentation>\n
      \      </xs:annotation>\n       <xs:complexType>\n         <xs:sequence>\n           <xs:element
      name=\"note\" type=\"Note_t\" minOccurs=\"0\"\n           maxOccurs=\"unbounded\"
      />\n           <xs:choice>\n             <xs:element name=\"unknown\" type=\"empty\"/>\n
      \            <xs:sequence maxOccurs=\"unbounded\">\n               <xs:choice>\n
      \                <xs:element name=\"afraid\"\n                   type=\"empty\"/>\n
      \                <xs:element name=\"amazed\"\n                   type=\"empty\"/>\n
      \                <xs:element name=\"angry\"\n                   type=\"empty\"/>\n
      \                <xs:element name=\"annoyed\"\n                   type=\"empty\"/>\n
      \                <xs:element name=\"anxious\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"ashamed\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"bored\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"brave\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"calm\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"cold\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"confused\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"contented\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"cranky\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"curious\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"depressed\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"disappointed\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"disgusted\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"distracted\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"embarrassed\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"excited\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"flirtatious\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"frustrated\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"grumpy\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"guilty\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"happy\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"hot\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"humbled\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"humiliated\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"hungry\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"hurt\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"impressed\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"in_awe\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"in_love\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"indignant\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"interested\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"invincible\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"jealous\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"lonely\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"mean\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"moody\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"nervous\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"neutral\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"offended\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"playful\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"proud\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"relieved\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"remorseful\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"restless\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"sad\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"sarcastic\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"serious\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"shocked\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"shy\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"sick\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"sleepy\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"stressed\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"surprised\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"thirsty\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"worried\"\n                   type=\"empty\"
      />\n                 <xs:element name=\"other\"\n                   type=\"Note_t\"
      />\n                 <xs:any namespace=\"##other\"\n                   maxOccurs=\"unbounded\"
      processContents=\"lax\"/>\n               </xs:choice>\n             </xs:sequence>\n
      \          </xs:choice>\n         </xs:sequence>\n         <xs:attributeGroup
      ref=\"fromUntil\"/>\n         <xs:attribute name=\"id\" type=\"xs:ID\"/>\n         <xs:anyAttribute
      namespace=\"##any\" processContents=\"lax\"/>\n       </xs:complexType>\n     </xs:element>\n
      \    <xs:element name=\"place-is\">\n       <xs:complexType>\n         <xs:sequence>\n
      \          <xs:element name=\"note\" type=\"Note_t\" minOccurs=\"0\"\n              maxOccurs=\"unbounded\"
      />\n           <xs:element name=\"audio\" minOccurs=\"0\">\n             <xs:complexType>\n
      \              <xs:choice>\n                 <xs:element name=\"noisy\" type=\"empty\"
      />\n                 <xs:element name=\"ok\" type=\"empty\" />\n                 <xs:element
      name=\"quiet\" type=\"empty\" />\n                 <xs:element name=\"unknown\"
      type=\"empty\" />\n               </xs:choice>\n             </xs:complexType>\n
      \          </xs:element>\n           <xs:element name=\"video\" minOccurs=\"0\">\n
      \            <xs:complexType>\n               <xs:choice>\n                 <xs:element
      name=\"toobright\" type=\"empty\" />\n                 <xs:element name=\"ok\"
      type=\"empty\" />\n                 <xs:element name=\"dark\" type=\"empty\"
      />\n                 <xs:element name=\"unknown\" type=\"empty\" />\n               </xs:choice>\n
      \            </xs:complexType>\n           </xs:element>\n           <xs:element
      name=\"text\" minOccurs=\"0\">\n             <xs:complexType>\n               <xs:choice>\n
      \                <xs:element name=\"uncomfortable\" type=\"empty\" />\n                 <xs:element
      name=\"inappropriate\" type=\"empty\" />\n                 <xs:element name=\"ok\"
      type=\"empty\" />\n                 <xs:element name=\"unknown\" type=\"empty\"
      />\n               </xs:choice>\n             </xs:complexType>\n           </xs:element>\n
      \        </xs:sequence>\n         <xs:attributeGroup ref=\"fromUntil\"/>\n         <xs:attribute
      name=\"id\" type=\"xs:ID\"/>\n         <xs:anyAttribute namespace=\"##any\"
      processContents=\"lax\"/>\n       </xs:complexType>\n     </xs:element>\n    <xs:element
      name=\"place-type\">\n        <xs:annotation>\n          <xs:documentation>\n
      \           Describes the type of place the person is currently at.\n          </xs:documentation>\n
      \       </xs:annotation>\n        <xs:complexType>\n          <xs:sequence>\n
      \           <xs:element name=\"note\" type=\"Note_t\" minOccurs=\"0\"\n               maxOccurs=\"unbounded\"
      />\n            <xs:choice>\n              <xs:element name=\"other\" type=\"Note_t\"/>\n
      \             <xs:any namespace=\"##other\" maxOccurs=\"unbounded\"\n                processContents=\"lax\"/>\n
      \           </xs:choice>\n          </xs:sequence>\n          <xs:attributeGroup
      ref=\"fromUntil\"/>\n          <xs:attribute name=\"id\" type=\"xs:ID\"/>\n
      \         <xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n        </xs:complexType>\n
      \     </xs:element>\n     <xs:element name=\"privacy\">\n       <xs:annotation>\n
      \         <xs:documentation>\n            Indicates which type of communication
      third parties in the\n            vicinity of the presentity are unlikely to
      be able to\n            intercept accidentally or intentionally.\n          </xs:documentation>\n
      \      </xs:annotation>\n       <xs:complexType>\n         <xs:sequence>\n           <xs:element
      name=\"note\" type=\"Note_t\" minOccurs=\"0\"\n              maxOccurs=\"unbounded\"
      />\n           <xs:choice>\n             <xs:element name=\"unknown\" type=\"empty\"/>\n
      \            <xs:sequence minOccurs=\"1\">\n               <xs:element name=\"audio\"
      type=\"empty\" minOccurs=\"0\"/>\n               <xs:element name=\"text\" type=\"empty\"
      minOccurs=\"0\"/>\n               <xs:element name=\"video\" type=\"empty\"
      minOccurs=\"0\"/>\n               <xs:any namespace=\"##other\" minOccurs=\"0\"\n
      \                 maxOccurs=\"unbounded\" processContents=\"lax\"/>\n             </xs:sequence>\n
      \          </xs:choice>\n         </xs:sequence>\n         <xs:attributeGroup
      ref=\"fromUntil\"/>\n         <xs:attribute name=\"id\" type=\"xs:ID\"/>\n         <xs:anyAttribute
      namespace=\"##any\" processContents=\"lax\"/>\n       </xs:complexType>\n     </xs:element>\n
      \    <xs:element name=\"relationship\">\n         <xs:annotation>\n            <xs:documentation>\n
      \             Designates the type of relationship an alternate contact\n              has
      with the presentity.\n            </xs:documentation>\n         </xs:annotation>\n
      \        <xs:complexType>\n           <xs:sequence>\n             <xs:element
      name=\"note\" type=\"Note_t\" minOccurs=\"0\"\n                maxOccurs=\"unbounded\"
      />\n             <xs:choice>\n                <xs:element name=\"assistant\"
      type=\"empty\" />\n                <xs:element name=\"associate\" type=\"empty\"
      />\n                <xs:element name=\"family\" type=\"empty\" />\n                <xs:element
      name=\"friend\" type=\"empty\" />\n                <xs:element name=\"other\"
      type=\"Note_t\" minOccurs=\"0\" />\n                <xs:element name=\"self\"
      type=\"empty\" />\n                <xs:element name=\"supervisor\" type=\"empty\"
      />\n                <xs:element name=\"unknown\" type=\"empty\" />\n                <xs:any
      namespace=\"##other\" maxOccurs=\"unbounded\"\n                  processContents=\"lax\"/>\n
      \            </xs:choice>\n           </xs:sequence>\n         </xs:complexType>\n
      \    </xs:element>\n     <xs:element name=\"service-class\">\n       <xs:annotation>\n
      \        <xs:documentation>\n           Designates the type of service offered.\n
      \        </xs:documentation>\n       </xs:annotation>\n       <xs:complexType>\n
      \        <xs:sequence>\n           <xs:element name=\"note\" type=\"Note_t\"
      minOccurs=\"0\"\n              maxOccurs=\"unbounded\" />\n           <xs:choice>\n
      \            <xs:element name=\"courier\" type=\"empty\" />\n             <xs:element
      name=\"electronic\" type=\"empty\" />\n             <xs:element name=\"freight\"
      type=\"empty\" />\n             <xs:element name=\"in-person\" type=\"empty\"
      />\n             <xs:element name=\"postal\" type=\"empty\" />\n             <xs:element
      name=\"unknown\" type=\"empty\" />\n             <xs:any namespace=\"##other\"
      maxOccurs=\"unbounded\"\n               processContents=\"lax\"/>\n           </xs:choice>\n
      \        </xs:sequence>\n       </xs:complexType>\n     </xs:element>\n     <xs:element
      name=\"sphere\">\n       <xs:annotation>\n         <xs:documentation>\n           Designates
      the current state and role that the person plays.\n         </xs:documentation>\n
      \      </xs:annotation>\n       <xs:complexType>\n         <xs:choice minOccurs=\"0\">\n
      \          <xs:element name=\"home\" type=\"empty\" />\n           <xs:element
      name=\"work\" type=\"empty\" />\n           <xs:element name=\"unknown\" type=\"empty\"
      />\n           <xs:any namespace=\"##other\" maxOccurs=\"unbounded\"\n              processContents=\"lax\"/>\n
      \        </xs:choice>\n         <xs:attributeGroup ref=\"fromUntil\"/>\n         <xs:attribute
      name=\"id\" type=\"xs:ID\"/>\n         <xs:anyAttribute namespace=\"##any\"
      processContents=\"lax\"/>\n       </xs:complexType>\n     </xs:element>\n     <xs:element
      name=\"status-icon\">\n       <xs:annotation>\n         <xs:documentation>\n
      \          A URI pointing to an image (icon) representing the current\n           status
      of the person or service.\n         </xs:documentation>\n       </xs:annotation>\n
      \      <xs:complexType>\n         <xs:simpleContent>\n           <xs:extension
      base=\"xs:anyURI\">\n             <xs:attributeGroup ref=\"fromUntil\"/>\n             <xs:attribute
      name=\"id\" type=\"xs:ID\"/>\n             <xs:anyAttribute namespace=\"##any\"
      processContents=\"lax\"/>\n           </xs:extension>\n         </xs:simpleContent>\n
      \      </xs:complexType>\n     </xs:element>\n     <xs:element name=\"time-offset\">\n
      \      <xs:annotation>\n         <xs:documentation>\n           Describes the
      number of minutes of offset from UTC at the\n           user's current location.\n
      \        </xs:documentation>\n       </xs:annotation>\n       <xs:complexType>\n
      \        <xs:simpleContent>\n           <xs:extension base=\"xs:integer\">\n
      \            <xs:attributeGroup ref=\"fromUntil\"/>\n             <xs:attribute
      name=\"description\"\n                type=\"xs:string\"/>\n             <xs:attribute
      name=\"id\" type=\"xs:ID\"/>\n             <xs:anyAttribute namespace=\"##any\"
      processContents=\"lax\"/>\n           </xs:extension>\n         </xs:simpleContent>\n
      \      </xs:complexType>\n     </xs:element>\n     <xs:element name=\"user-input\">\n
      \      <xs:annotation>\n         <xs:documentation>\n           Records the
      user-input or usage state of the service or\n           device.\n         </xs:documentation>\n
      \      </xs:annotation>\n       <xs:complexType>\n           <xs:simpleContent>\n
      \            <xs:extension base=\"activeIdle\">\n               <xs:attribute
      name=\"idle-threshold\"\n                 type=\"xs:positiveInteger\"/>\n               <xs:attribute
      name=\"last-input\" type=\"xs:dateTime\"/>\n               <xs:attribute name=\"id\"
      type=\"xs:ID\"/>\n               <xs:anyAttribute namespace=\"##any\"\n                 processContents=\"lax\"/>\n
      \            </xs:extension>\n           </xs:simpleContent>\n       </xs:complexType>\n
      \    </xs:element>\n   </xs:schema>\n"
    title: 5.1.  urn:ietf:params:xml:ns:pidf:rpid
  title: 5.  XML Schema Definitions
- contents:
  - "6.  Extending RPID\n   Any developer can introduce their own element names, avoiding\n
    \  conflict by choosing an appropriate namespace URI.  To add new\n   standardized
    elements to the enumerations <activities>, <mood>,\n   <privacy>, <relationship>
    and <service-class>, the extension process\n   described in PIDF [9] is followed,
    i.e., such extensions would use\n   namespace designators such as urn:ietf:params:xml:ns:pidf:ext,
    where\n   'ext' is the name of the extension.  Any new values for the <place-\n
    \  type> element are assigned according to [12] and are given a\n   namespace
    designator at their time of registration.\n   To avoid the unnecessary proliferation
    of XML namespaces containing a\n   single element, groups of element registrations
    for each of these\n   enumerations, such as <privacy>, SHOULD be bundled into
    a single\n   namespace rather than assigning a new namespace to each new element.\n"
  title: 6.  Extending RPID
- contents:
  - '7.  IANA Considerations

    '
  - contents:
    - "7.1.  URN Sub-Namespace Registration for\n      'urn:ietf:params:xml:ns:pidf:rpid'\n
      \  URI:  urn:ietf:params:xml:ns:pidf:rpid\n   Description:  This is the XML
      namespace for XML elements defined by\n      RFC 4480 to describe rich presence
      information extensions for the\n      status element in the PIDF presence document
      format in the\n      application/pidf+xml content type.\n   Registrant Contact:
      \ IETF, SIMPLE working group, simple@ietf.org,\n      Henning Schulzrinne, hgs@cs.columbia.edu\n
      \  XML:\n    BEGIN\n      <?xml version=\"1.0\"?>\n      <!DOCTYPE html PUBLIC
      \"-//W3C//DTD XHTML Basic 1.0//EN\"\n      \"http://www.w3.org/TR/xhtml-basic/xhtml-basic10.dtd\">\n
      \     <html xmlns=\"http://www.w3.org/1999/xhtml\n      <head>\n           <meta
      http-equiv=\"content-type\"\n           content=\"text/html;charset=iso-8859-1\"/>\n
      \          <title>RPID: Rich Presence Extensions to the Presence\n             Information
      Data Format (PIDF)</title>\n      </head>\n      <body>\n          <h1>Namespace
      for rich presence extension</h1>\n          <h2>urn:ietf:params:xml:ns:pidf:rpid</h2>\n
      \         <p>See <a href=\"http://www.rfc-editor.org/rfc/rfc4480.txt\">\n              RFC&4480;</a>.</p>\n
      \      </body>\n       </html>\n      END\n"
    title: 7.1.  URN Sub-Namespace Registration for
  - contents:
    - "7.2.  Schema Registration for Schema\n      'urn:ietf:params:xml:ns:pidf:status:rpid'\n
      \  URI:  urn:ietf:params:xml:ns:pidf:status:rpid\n   Registrant Contact:  IESG\n
      \  XML:  See Section 5\n   Note that this document does not need a new content
      type.  It\n   inherits the content type from [8], namely, application/pidf+xml.\n"
    title: 7.2.  Schema Registration for Schema
  title: 7.  IANA Considerations
- contents:
  - "8.  Internationalization Considerations\n   RPID contains mostly tokens that
    are meant for consumption by\n   programs, not directly by humans.  Programs are
    expected to translate\n   those tokens into language-appropriate text strings
    according to the\n   preferences of the watcher.\n   Some elements may contain
    <note> and <other> elements that can\n   contain free text.  These elements SHOULD
    be labeled with the 'xml:\n   lang' attribute to indicate their language and script.
    \ The\n   specification allows multiple occurrences of these elements so that\n
    \  the presentity can convey <note> and <other> elements in multiple\n   scripts
    and languages.  If no 'xml:lang' attribute is provided, the\n   default value
    is \"i-default\" [3].\n   Since RPID is represented in XML, it provides native
    support for\n   encoding information using the Unicode character set and its more\n
    \  compact representations including UTF-8.  Conformant XML processors\n   recognize
    both UTF-8 and UTF-16.  Though XML includes provisions to\n   identify and use
    other character encodings through use of an\n   \"encoding\" attribute in an <?xml?>
    declaration, use of UTF-8 is\n   RECOMMENDED in environments where parser encoding
    support\n   incompatibility exists.\n   A description of time-zone considerations
    can be found in\n   Section 3.13.\n"
  title: 8.  Internationalization Considerations
- contents:
  - "9.  Security Considerations\n   The security considerations in [8] apply, as
    well as [7].  Compared\n   to PIDF, this presence document format reveals additional
    information\n   about presentities that can be highly sensitive.  Beyond traditional\n
    \  security measures to protect confidentiality and integrity, systems\n   should
    offer a means to selectively reveal information to particular\n   watchers and
    to inspect the information that is being published,\n   particularly if it is
    generated automatically from other sources,\n   such as calendars or sensors.\n
    \  Like any reference to an external object, the <status-icon> may allow\n   the
    presentity to induce the watcher to retrieve data from a third\n   party (content
    indirection attack), thus either retrieving harmful\n   content or adding to the
    server load of the referenced resource.\n"
  title: 9.  Security Considerations
- contents:
  - '10.  References

    '
  - contents:
    - "10.1.  Normative References\n   [1]   Bradner, S., \"Key words for use in RFCs
      to Indicate Requirement\n         Levels\", BCP 14, RFC 2119, March 1997.\n
      \  [2]   Moats, R., \"URN Syntax\", RFC 2141, May 1997.\n   [3]   Alvestrand,
      H., \"IETF Policy on Character Sets and Languages\",\n         BCP 18, RFC 2277,
      January 1998.\n   [4]   Moats, R., \"A URN Namespace for IETF Documents\", RFC
      2648,\n         August 1999.\n   [5]   Day, M., Rosenberg, J., and H. Sugano,
      \"A Model for Presence\n         and Instant Messaging\", RFC 2778, February
      2000.\n   [6]   Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688,\n
      \        January 2004.\n   [7]   Rosenberg, J., \"A Presence Event Package for
      the Session\n         Initiation Protocol (SIP)\", RFC 3856, August 2004.\n
      \  [8]   Sugano, H., Fujimoto, S., Klyne, G., Bateman, A., Carr, W., and\n         J.
      Peterson, \"Presence Information Data Format (PIDF)\", RFC\n         3863, August
      2004.\n   [9]   Yergeau, F., Paoli, J., Sperberg-McQueen, C., Bray, T., and
      E.\n         Maler, \"Extensible Markup Language (XML) 1.0 (Third Edition),\"\n
      \        W3C REC REC-xml-20040204, February 2004.\n   [10]  Maloney, M., Beech,
      D., Thompson, H., and N. Mendelsohn, \"XML\n         Schema Part 1: Structures
      Second Edition\", W3C REC REC-\n         xmlschema-1-20041028, October 2004.\n
      \  [11]  Malhotra, A. and P. Biron, \"XML Schema Part 2: Datatypes Second\n
      \        Edition\", W3C REC REC-xmlschema-2-20041028, October 2004.\n   [12]
      \ Schulzrinne, H. and H. Tschofenig, \"Location Types Registry\",\n         RFC
      4589, July 2006.\n"
    title: 10.1.  Normative References
  - contents:
    - "10.2.  Informative References\n   [13]  Dawson, F. and D. Stenerson, \"Internet
      Calendaring and\n         Scheduling Core Object Specification (iCalendar)\",
      RFC 2445,\n         November 1998.\n   [14]  Peterson, J., \"Common Profile
      for Instant Messaging (CPIM)\",\n         RFC 3860, August 2004.\n   [15]  Lennox,
      J., Wu, X., and H. Schulzrinne, \"Call Processing\n         Language (CPL):
      A Language for User Control of Internet\n         Telephony Services\", RFC
      3880, October 2004.\n   [16]  Rosenberg, J., \"A Data Model for Presence\",
      RFC 4479, July\n         2006.\n   [17]  Lisetti, C., \"Personality, Affect,
      and Emotion Taxonomy for\n         Socially Intelligent Agents\", Proceedings
      of FLAIRS 2002, 2002.\n   [18]  Open Mobile Alliance, \"The Wireless Village
      Initiative:\n         Presence Attributes 1.1\", Recommendation WV-29, 2004.\n"
    title: 10.2.  Informative References
  title: 10.  References
- contents:
  - "Appendix A.  Acknowledgements\n   The document reflects the discussion on the
    SIMPLE mailing list, with\n   contributions from many individuals.  David L. Black,
    Miguel Garcia,\n   Avshalom Houri, Markus Isomaki, Rick Jones, Hisham Khartabil,\n
    \  Jonathan Lennox, Eva-Maria Leppanen, Mikko Lonnfors, Rohan Mahy,\n   Miguel
    Marcia, Andrew Newton, Aki Niemi, Jon Peterson, and Brian\n   Rosen provided detailed
    comments and suggestions.  Xiaotao Wu\n   assisted with schema testing.  Jari
    Urpalainen provided valuable\n   advice on XML schema issues.\n"
  title: Appendix A.  Acknowledgements
- contents:
  - "Authors' Addresses\n   Henning Schulzrinne\n   Columbia University\n   Department
    of Computer Science\n   450 Computer Science Building\n   New York, NY  10027\n
    \  US\n   Phone: +1 212 939 7042\n   EMail: hgs+simple@cs.columbia.edu\n   URI:
    \  http://www.cs.columbia.edu\n   Vijay Gurbani\n   Lucent\n   2000 Naperville
    Rd.\n   Room 6G-440\n   Naperville, IL  60566-7033\n   US\n   EMail: vkg@lucent.com\n
    \  Paul Kyzivat\n   Cisco Systems\n   BXB500 C2-2\n   1414 Massachusetts Avenue\n
    \  Boxborough, MA  01719\n   US\n   EMail: pkyzivat@cisco.com\n   Jonathan Rosenberg\n
    \  Cisco Systems\n   600 Lanidex Plaza\n   Parsippany, NJ  07054-2711\n   US\n
    \  EMail: jdrosen@cisco.com\n"
  title: Authors' Addresses
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This
    document is subject to the rights, licenses and restrictions\n   contained in
    BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n
    \  This document and the information contained herein are provided on an\n   \"AS
    IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING TASK FORCE
    DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT LIMITED TO
    ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT INFRINGE ANY
    RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n
    \  Administrative Support Activity (IASA).\n"
  title: Acknowledgement
