- contents:
  - "  Path Computation Element Communication Protocol (PCEP) Requirements\n  and
    Protocol Extensions in Support of Global Concurrent Optimization\n"
  title: __initial_text__
- contents:
  - "Abstract\n   The Path Computation Element Communication Protocol (PCEP) allows\n
    \  Path Computation Clients (PCCs) to request path computations from\n   Path
    Computation Elements (PCEs), and lets the PCEs return responses.\n   When computing
    or reoptimizing the routes of a set of Traffic\n   Engineering Label Switched
    Paths (TE LSPs) through a network, it may\n   be advantageous to perform bulk
    path computations in order to avoid\n   blocking problems and to achieve more
    optimal network-wide solutions.\n   Such bulk optimization is termed Global Concurrent
    Optimization\n   (GCO).  A GCO is able to simultaneously consider the entire topology\n
    \  of the network and the complete set of existing TE LSPs, and their\n   respective
    constraints, and look to optimize or reoptimize the entire\n   network to satisfy
    all constraints for all TE LSPs.  A GCO may also\n   be applied to some subset
    of the TE LSPs in a network.  The GCO\n   application is primarily a Network Management
    System (NMS) solution.\n   This document provides application-specific requirements
    and the PCEP\n   extensions in support of GCO applications.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents
    in effect on the date of\n   publication of this document (http://trustee.ietf.org/license-info).\n
    \  Please review these documents carefully, as they describe your rights\n   and
    restrictions with respect to this document.\n   This document may contain material
    from IETF Documents or IETF\n   Contributions published or made publicly available
    before November\n   10, 2008.  The person(s) controlling the copyright in some
    of this\n   material may not have granted the IETF Trust the right to allow\n
    \  modifications of such material outside the IETF Standards Process.\n   Without
    obtaining an adequate license from the person(s) controlling\n   the copyright
    in such materials, this document may not be modified\n   outside the IETF Standards
    Process, and derivative works of it may\n   not be created outside the IETF Standards
    Process, except to format\n   it for publication as an RFC or to translate it
    into languages other\n   than English.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n
    \  2. Terminology .....................................................6\n   3.
    Applicability of Global Concurrent Optimization (GCO) ...........6\n      3.1.
    Application of the PCE Architecture ........................7\n      3.2. Greenfield
    Optimization ....................................8\n           3.2.1. Single-Layer
    Traffic Engineering ....................8\n           3.2.2. Multi-Layer Traffic
    Engineering .....................8\n      3.3. Reoptimization of Existing Networks
    ........................8\n           3.3.1. Reconfiguration of the Virtual Network\n
    \                 Topology (VNT) ......................................9\n           3.3.2.
    Traffic Migration ...................................9\n   4. PCECP Requirements
    .............................................10\n   5. Protocol Extensions for
    Support of Global Concurrent\n      Optimization ...................................................13\n
    \     5.1. Global Objective Function (GOF) Specification .............14\n      5.2.
    Indication of Global Concurrent Optimization Requests .....15\n      5.3. Request
    for the Order of TE LSP ...........................15\n      5.4. The Order Response
    ........................................16\n      5.5. GLOBAL CONSTRAINTS (GC)
    Object ............................17\n      5.6. Error Indicator ...........................................18\n
    \     5.7. NO-PATH Indicator .........................................19\n   6.
    Manageability Considerations ...................................19\n      6.1.
    Control of Function and Policy ............................19\n      6.2. Information
    and Data Models (e.g., MIB Module) ............20\n      6.3. Liveness Detection
    and Monitoring .........................20\n      6.4. Verifying Correct Operation
    ...............................20\n      6.5. Requirements on Other Protocols
    and Functional\n           Components ................................................20\n
    \     6.6. Impact on Network Operation ...............................20\n   7.
    Security Considerations ........................................21\n   8. IANA
    Considerations ............................................21\n      8.1. Request
    Parameter Bit Flags ...............................21\n      8.2. New PCEP TLV
    ..............................................21\n      8.3. New Flag in PCE-CAP-FLAGS
    Sub-TLV in PCED .................22\n      8.4. New PCEP Object ...........................................22\n
    \     8.5. New PCEP Error Codes ......................................22\n           8.5.1.
    New Error-Values for Existing Error-Types ..........22\n           8.5.2. New
    Error-Types and Error-Values ...................23\n      8.6. New No-Path Reasons
    .......................................23\n   9. References .....................................................23\n
    \     9.1. Normative References ......................................23\n      9.2.
    Informative References ....................................24\n   10. Acknowledgments
    ...............................................24\n   Appendix A. RBNF Code Fragments
    ...................................25\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   [RFC4655] defines the Path Computation Element (PCE)-based\n
    \  architecture and explains how a PCE may compute Label Switched Paths\n   (LSPs)
    in Multiprotocol Label Switching Traffic Engineering (MPLS-TE)\n   and Generalized
    MPLS (GMPLS) networks at the request of Path\n   Computation Clients (PCCs).  A
    PCC is shown to be any network\n   component that makes such a request and may
    be, for instance, a Label\n   Switching Router (LSR) or a Network Management System
    (NMS).  The\n   PCE, itself, is shown to be located anywhere within the network,
    and\n   it may be within an LSR, an NMS or Operational Support System (OSS),\n
    \  or may be an independent network server.\n   The PCE Communication Protocol
    (PCEP) is the communication protocol\n   used between PCC and PCE, and it may
    also be used between cooperating\n   PCEs.  [RFC4657] sets out generic protocol
    requirements for PCEP.\n   Additional application-specific requirements for PCEP
    are defined in\n   separate documents.\n   This document provides a set of requirements
    and PCEP extensions in\n   support of concurrent path computation applications.
    \ A concurrent\n   path computation is a path computation application where a
    set of TE\n   paths are computed concurrently in order to efficiently utilize\n
    \  network resources.  The computation method involved with a concurrent\n   path
    computation is referred to as \"global concurrent optimization\"\n   in this document.
    \ Appropriate computation algorithms to perform this\n   type of optimization
    are out of the scope of this document.\n   The Global Concurrent Optimization
    (GCO) application is primarily an\n   NMS or a PCE-Server-based solution.  Owing
    to complex synchronization\n   issues associated with GCO applications, the management-based
    PCE\n   architecture defined in Section 5.5 of [RFC4655] is considered as the\n
    \  most suitable usage to support GCO application.  This does not\n   preclude
    other architectural alternatives to support GCO application,\n   but they are
    NOT RECOMMENDED.  For instance, GCO might be enabled by\n   distributed LSRs through
    complex synchronization mechanisms.\n   However, this approach might suffer from
    significant synchronization\n   overhead between the PCE and each of the PCCs.
    \ It would likely\n   affect the network stability and hence significantly diminish
    the\n   benefits of deploying PCEs.\n   The need for global concurrent path computation
    may also arise when\n   network operators need to establish a set of TE LSPs in
    their network\n   planning process.  It is also envisioned that network operators
    might\n   require global concurrent path computation in the event of\n   catastrophic
    network failures, where a set of TE LSPs need to be\n   optimally rerouted.  The
    nature of this work promotes the use of such\n   systems for off-line processing.
    \ Online application of this work\n   should only be considered with proven empirical
    validation.\n   As new TE LSPs are added or removed from the network over time,
    the\n   global network resources become fragmented and the existing placement\n
    \  of TE LSPs within the network no longer provides optimal use of the\n   available
    capacity.  A global concurrent path computation is able to\n   simultaneously
    consider the entire topology of the network and the\n   complete set of existing
    TE LSPs and their respective constraints,\n   and is able to look to reoptimize
    the entire network to satisfy all\n   constraints for all TE LSPs.  Alternatively,
    the application may\n   consider a subset of the TE LSPs and/or a subset of the
    network\n   topology.  Note that other preemption can also help reduce the\n   fragmentation
    issues.\n   While GCO is applicable to any simultaneous request for multiple TE\n
    \  LSPs (for example, a request for end-to-end protection), it is NOT\n   RECOMMENDED
    that global concurrent reoptimization would be applied in\n   a network (such
    as an MPLS-TE network) that contains a very large\n   number of very low bandwidth
    or zero bandwidth TE LSPs since the\n   large scope of the problem and the small
    benefit of concurrent\n   reoptimization relative to single TE LSP reoptimization
    is unlikely\n   to make the process worthwhile.  Further, applying global concurrent\n
    \  reoptimization in a network with a high rate of change of TE LSPs\n   (churn)
    is NOT RECOMMENDED because of the likelihood that TE LSPs\n   would change before
    they could be globally reoptimized.  Global\n   reoptimization is more applicable
    to stable networks such as\n   transport networks or those with long-term TE LSP
    tunnels.\n   The main focus of this document is to highlight the PCC-PCE\n   communication
    needs in support of a concurrent path computation\n   application and to define
    protocol extensions to meet those needs.\n   The PCC-PCE requirements addressed
    herein are specific to the context\n   where the PCE is a specialized PCE that
    is capable of performing\n   computations in support of GCO.  Discovery of such
    capabilities might\n   be desirable and could be achieved through extensions to
    the PCE\n   discovery mechanisms [RFC4674], [RFC5088], [RFC5089]; but, that is\n
    \  out of the scope of this document.\n   It is to be noted that Backward Recursive
    Path Computation (BRPC)\n   [RFC5441] is a multi-PCE path computation technique
    used to compute a\n   shortest constrained inter-domain path, whereas this ID
    specifies a\n   technique where a set of path computation requests are bundled
    and\n   sent to a PCE with the objective of \"optimizing\" the set of computed\n
    \  paths.\n"
  title: 1.  Introduction
- contents:
  - "2.  Terminology\n   Most of the terminology used in this document is explained
    in\n   [RFC4655].  A few key terms are repeated here for clarity.\n   PCC: Path
    Computation Client.  Any client application requesting a\n   path computation
    to be performed by a Path Computation Element.\n   PCE: Path Computation Element.
    \ An entity (component, application, or\n   network node) that is capable of computing
    a network path or route\n   based on a network graph and applying computational
    constraints.\n   TED: Traffic Engineering Database.  The TED contains the topology
    and\n   resource information of the domain.  The TED may be fed by IGP\n   extensions
    or potentially by other means.\n   PCECP: The PCE Communication Protocol.  PCECP
    is the generic abstract\n   idea of a protocol that is used to communicate path
    computation\n   requests from a PCC to a PCE and to return computed paths from
    the\n   PCE to the PCC.  The PCECP can also be used between cooperating PCEs.\n
    \  PCEP: The PCE communication Protocol.  PCEP is the actual protocol\n   that
    implements the PCECP idea.\n   GCO: Global Concurrent Optimization.  A concurrent
    path computation\n   application where a set of TE paths are computed concurrently
    in\n   order to optimize network resources.  A GCO path computation is able\n
    \  to simultaneously consider the entire topology of the network and the\n   complete
    set of existing TE LSPs, and their respective constraints,\n   and look to optimize
    or reoptimize the entire network to satisfy all\n   constraints for all TE LSPs.
    \ A GCO path computation can also provide\n   an optimal way to migrate from an
    existing set of TE LSPs to a\n   reoptimized set (Morphing Problem).\n   The key
    words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\",
    \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document
    are to be interpreted as described in RFC 2119 [RFC2119].\n   These terms are
    used to specify requirements in this document.\n"
  title: 2.  Terminology
- contents:
  - "3.  Applicability of Global Concurrent Optimization (GCO)\n   This section discusses
    the PCE architecture to which GCO is applied.\n   It also discusses various application
    scenarios for which global\n   concurrent path computation may be applied.\n"
  - contents:
    - "3.1.  Application of the PCE Architecture\n   Figure 1 shows the PCE-based
      network architecture as defined in\n   [RFC4655] to which GCO application is
      applied.  It must be observed\n   that the PCC is not necessarily an LSR [RFC4655].
      \ The GCO\n   application is primarily an NMS-based solution in which an NMS
      plays\n   the function of the PCC.  Although Figure 1 shows the PCE as remote\n
      \  from the NMS, it might be collocated with the NMS.  Note that in the\n   collocated
      case, there is no need for a standard communication\n   protocol; this can rely
      on internal APIs.\n                                         -----------\n                  Application
      \          |   -----   |\n                    Request             |  | TED |
      \ |\n                       |                |   -----   |\n                       v
      \               |     |     |\n                 ------------- Request/ |     v
      \    |\n                |     PCC     | Response|   -----   |\n                |
      (NMS/Server)|<--------+> | PCE |  |\n                |             |         |
      \  -----   |\n                 -------------           -----------\n               Service
      |\n               Request |\n                       v\n                  ----------
      \ Signaling   ----------\n                 | Head-End | Protocol   | Adjacent
      |\n                 |  Node    |<---------->|   Node   |\n                  ----------
      \             ----------\n                         Figure 1: PCE-Based Architecture
      for\n                            Global Concurrent Optimization\n   Upon receipt
      of an application request (e.g., a traffic demand matrix\n   is provided to
      the NMS by the operator's network planning procedure),\n   the NMS requests
      a global concurrent path computation from the PCE.\n   The PCE then computes
      the requested paths concurrently applying some\n   algorithms.  Various algorithms
      and computation techniques have been\n   proposed to perform this function.
      \ Specification of such algorithms\n   or techniques is outside the scope of
      this document.\n   When the requested path computation completes, the PCE sends
      the\n   resulting paths back to the NMS.  The NMS then supplies the head-end\n
      \  LSRs with a fully computed explicit path for each TE LSP that needs\n   to
      be established.\n"
    title: 3.1.  Application of the PCE Architecture
  - contents:
    - "3.2.  Greenfield Optimization\n   Greenfield optimization is a special case
      of GCO application when\n   there are no TE LSPs already set up in the network.
      \ The need for\n   greenfield optimization arises when the network planner wants
      to make\n   use of a computation server to plan the TE LSPs that will be\n   provisioned
      in the network.  Note that greenfield operation is a\n   one-time optimization.
      \ When network conditions change due to failure\n   or other changes, then the
      reoptimization mode of operation will kick\n   in.\n   When a new TE network
      needs to be provisioned from a greenfield\n   perspective, a set of TE LSPs
      needs to be created based on traffic\n   demand, network topology, service constraints,
      and network resources.\n   In this scenario, the ability to perform concurrent
      computation is\n   desirable, or required, to utilize network resources in an
      optimal\n   manner and avoid blocking.\n"
    - contents:
      - "3.2.1.  Single-Layer Traffic Engineering\n   Greenfield optimization can
        be applied when layer-specific TE LSPs\n   need to be created from a greenfield
        perspective.  For example, an\n   MPLS-TE network can be planned based on
        Layer 3 specific traffic\n   demands, the network topology, and available
        network resources.\n   Greenfield optimization for single-layer traffic engineering
        can be\n   applied to optical transport networks such as Synchronous Digital\n
        \  Hierarchy/Synchronous Optical Network (SDH/SONET), Ethernet\n   Transport,
        Wavelength Division Multiplexing (WDM), etc.\n"
      title: 3.2.1.  Single-Layer Traffic Engineering
    - contents:
      - "3.2.2.  Multi-Layer Traffic Engineering\n   Greenfield optimization is not
        limited to single-layer traffic\n   engineering.  It can also be applied to
        multi-layer traffic\n   engineering [PCE-MLN].  The network resources and
        topology (of both\n   the client and server layers) can be considered simultaneously
        in\n   setting up a set of TE LSPs that traverse the layer boundary.\n"
      title: 3.2.2.  Multi-Layer Traffic Engineering
    title: 3.2.  Greenfield Optimization
  - contents:
    - "3.3.  Reoptimization of Existing Networks\n   The need for global concurrent
      path computation may arise in existing\n   networks.  When an existing TE LSP
      network experiences sub-optimal\n   use of its resources, the need for reoptimization
      or reconfiguration\n   may arise.  The scope of reoptimization and reconfiguration
      may vary\n   depending on particular situations.  The scope of reoptimization
      may\n   be limited to bandwidth modification to an existing TE LSP.  However,\n
      \  it could well be that a set of TE LSPs may need to be reoptimized\n   concurrently.
      \ In an extreme case, the TE LSPs may need to be\n   globally reoptimized.\n
      \  In loaded networks, with large size TE LSPs, a sequential\n   reoptimization
      may not produce substantial improvements in terms of\n   overall network optimization.
      \ Sequential reoptimization refers to a\n   path computation method that computes
      the reoptimized path of one TE\n   LSP at a time without giving any consideration
      to the other TE LSPs\n   that need to be reoptimized in the network.  The potential
      for\n   network-wide gains from reoptimization of TE LSPs sequentially is\n
      \  dependent upon the network usage and size of the TE LSPs being\n   optimized.
      \ However, the key point remains: computing the reoptimized\n   path of one
      TE LSP at a time without giving any consideration to the\n   other TE LSPs in
      the network could result in sub-optimal use of\n   network resources.  This
      may be far more visible in an optical\n   network with a low ratio of potential
      TE LSPs per link, and far less\n   visible in packet networks with micro-flow
      TE LSPs.\n   With regards to applicability of GCO in the event of catastrophic\n
      \  failures, there may be a real benefit in computing the paths of the\n   TE
      LSPs as a set rather than computing new paths from the head-end\n   LSRs in
      a distributed manner.  Distributed jittering is a technique\n   that could prevent
      race condition (i.e., competing for the same\n   resource from different head-end
      LSRs) with a distributed\n   computation.  GCO provides an alternative way that
      could also prevent\n   race condition in a centralized manner.  However, a centralized\n
      \  system will typically suffer from a slower response time than a\n   distributed
      system.\n"
    - contents:
      - "3.3.1.  Reconfiguration of the Virtual Network Topology (VNT)\n   Reconfiguration
        of the VNT [RFC5212] [PCE-MLN] is a typical\n   application scenario where
        global concurrent path computation may be\n   applicable.  Triggers for VNT
        reconfiguration, such as traffic demand\n   changes, network failures, and
        topological configuration changes may\n   require a set of existing TE LSPs
        to be re-computed.\n"
      title: 3.3.1.  Reconfiguration of the Virtual Network Topology (VNT)
    - contents:
      - "3.3.2.  Traffic Migration\n   When migrating from one set of TE LSPs to a
        reoptimized set of TE\n   LSPs, it is important that the traffic be moved
        without causing\n   disruption.  Various techniques exist in MPLS and GMPLS,
        such as\n   make-before-break [RFC3209], to establish the new TE LSPs before\n
        \  tearing down the old TE LSPs.  When multiple TE LSP routes are\n   changed
        according to the computed results, some of the TE LSPs may be\n   disrupted
        due to the resource constraints.  In other words, it may\n   prove to be impossible
        to perform a direct migration from the old TE\n   LSPs to the new optimal
        TE LSPs without disrupting traffic because\n   there are insufficient network
        resources to support both sets of TE\n   LSPs when make-before-break is used.
        \ However, a PCE may be able to\n   determine a sequence of make-before-break
        replacement of individual\n   TE LSPs or small sets of TE LSPs so that the
        full set of TE LSPs can\n   be migrated without any disruption.  This scenario
        assumes that the\n   bandwidth of existing TE LSP is kept during the migration,
        which is\n   required in optical networks.  In packet networks, this assumption\n
        \  can be relaxed as the bandwidth of temporary TE LSPs during migration\n
        \  can be zeroed.\n   It may be the case that the reoptimization is radical.
        \ This could\n   mean that it is not possible to apply make-before-break in
        any order\n   to migrate from the old TE LSPs to the new TE LSPs.  In this
        case, a\n   migration strategy is required that may necessitate TE LSPs being\n
        \  rerouted using make-before-break onto temporary paths in order to\n   make
        space for the full reoptimization.  A PCE might indicate the\n   order in
        which reoptimized TE LSPs must be established and take over\n   from the old
        TE LSPs, and it may indicate a series of different\n   temporary paths that
        must be used.  Alternatively, the PCE might\n   perform the global reoptimization
        as a series of sub-reoptimizations\n   by reoptimizing subsets of the total
        set of TE LSPs.\n   The benefit of this multi-step rerouting includes minimization
        of\n   traffic disruption and optimization gain.  However, this approach may\n
        \  imply some transient packets desequencing, jitter, as well as control\n
        \  plane stress.\n   Note also that during reoptimization, traffic disruption
        may be\n   allowed for some TE LSPs carrying low priority services (e.g.,\n
        \  Internet traffic) and not allowed for some TE LSPs carrying mission\n   critical
        services (e.g., voice traffic).\n"
      title: 3.3.2.  Traffic Migration
    title: 3.3.  Reoptimization of Existing Networks
  title: 3.  Applicability of Global Concurrent Optimization (GCO)
- contents:
  - "4.  PCECP Requirements\n   This section provides the PCECP requirements to support
    global\n   concurrent path computation applications.  The requirements specified\n
    \  here should be regarded as application-specific requirements and are\n   justifiable
    based on the extensibility clause found in Section 6.1.14\n   of [RFC4657]:\n
    \     The PCECP MUST support the requirements specified in the\n      application-specific
    requirements documents.  The PCECP MUST also\n      allow extensions as more PCE
    applications will be introduced in\n      the future.\n   It is also to be noted
    that some of the requirements discussed in\n   this section have already been
    discussed in the PCECP requirement\n   document [RFC4657].  For example, Section
    5.1.16 in [RFC4657]\n   provides a list of generic constraints while Section 5.1.17
    in\n   [RFC4657] provides a list of generic objective functions that MUST be\n
    \  supported by the PCECP.  While using such generic requirements as the\n   baseline,
    this section provides application-specific requirements in\n   the context of
    global concurrent path computation and in a more\n   detailed level than the generic
    requirements.\n   The PCEP SHOULD support the following capabilities either via\n
    \  creation of new objects and/or modification of existing objects where\n   applicable.\n
    \  o  An indicator to convey that the request is for a global concurrent\n      path
    computation.  This indicator is necessary to ensure\n      consistency in applying
    global objectives and global constraints\n      in all path computations.  Note:
    This requirement is covered by\n      \"synchronized path computation\" in [RFC4655]
    and [RFC4657].\n      However, an explicit indicator to request a global concurrent\n
    \     optimization is a new requirement.\n   o  A Global Objective Function (GOF)
    field in which to specify the\n      global objective function.  The global objective
    function is the\n      overarching objective function to which all individual
    path\n      computation requests are subjected in order to find a globally\n      optimal
    solution.  Note that this requirement is covered by\n      \"synchronized objective
    functions\" in Section 5.1.7 [RFC4657] and\n      that [RFC5541] defined three
    global objective functions as\n      follows.  A list of available global objective
    functions SHOULD\n      include the following objective functions at the minimum
    and\n      SHOULD be expandable for future addition:\n      *  Minimize aggregate
    Bandwidth Consumption (MBC)\n      *  Minimize the load of the Most Loaded Link
    (MLL)\n      *  Minimize Cumulative Cost of a set of paths (MCC)\n   o  A Global
    Constraints (GC) field in which to specify the list of\n      global constraints
    to which all the requested path computations\n      should be subjected.  This
    list SHOULD include the following\n      constraints at the minimum and SHOULD
    be expandable for future\n      addition:\n      *  Maximum link utilization value
    -- This value indicates the\n         highest possible link utilization percentage
    set for each link.\n         (Note: to avoid floating point numbers, the values
    should be\n         integer values.)\n      *  Minimum link utilization value
    -- This value indicates the\n         lowest possible link utilization percentage
    set for each link.\n         (Note: same as above.)\n      *  Overbooking factor
    -- The overbooking factor allows the\n         reserved bandwidth to be overbooked
    on each link beyond its\n         physical capacity limit.\n      *  Maximum number
    of hops for all the TE LSPs -- This is the\n         largest number of hops that
    any TE LSP can have.  Note that\n         this constraint can also be provided
    on a per-TE-LSP basis (as\n         requested in [RFC4657] and defined in [RFC5440]).\n
    \     *  Exclusion of links/nodes in all TE LSP path computation (i.e.,\n         all
    TE LSPs should not include the specified links/nodes in\n         their paths).
    \ Note that this constraint can also be provided\n         on a per-TE-LSP basis
    (as requested in [RFC4657] and defined in\n         [RFC5440]).\n      *  An indication
    should be available in a path computation\n         response that further reoptimization
    may only become available\n         once existing traffic has been moved to the
    new TE LSPs.\n   o  A Global Concurrent Vector (GCV) field in which to specify
    all the\n      individual path computation requests that are subject to\n      concurrent
    path computation and subject to the global objective\n      function and all of
    the global constraints.  Note that this\n      requirement is entirely fulfilled
    by the SVEC object in the PCEP\n      specification [RFC5440].  Since the SVEC
    object as defined in\n      [RFC5440] allows identifying a set of concurrent path
    requests,\n      the SVEC can be reused to specify all the individual concurrent\n
    \     path requests for a global concurrent optimization.\n   o  An indicator
    field in which to indicate the outcome of the\n      request.  When the PCE cannot
    find a feasible solution with the\n      initial request, the reason for failure
    SHOULD be indicated.  This\n      requirement is partially covered by [RFC4657],
    but not in this\n      level of detail.  The following indicators SHOULD be supported
    at\n      the minimum:\n      *  no feasible solution found.  Note that this is
    already covered\n         in [RFC5440].\n      *  memory overflow.\n      *  PCE
    too busy.  Note that this is already covered in [RFC5440].\n      *  PCE not capable
    of concurrent reoptimization.\n      *  no migration path available.\n      *
    \ administrative privileges do not allow global reoptimization.\n   o  In order
    to minimize disruption associated with bulk path\n      provisioning, the following
    requirements MUST be supported:\n      *  The request message MUST allow requesting
    the PCE to provide\n         the order in which TE LSPs should be reoptimized
    (i.e., the\n         migration path) in order to minimize traffic disruption during\n
    \        the migration.  That is, the request message MUST allow\n         indicating
    to the PCE that the set of paths that will be\n         provided in the response
    message (PCRep) has to be ordered.\n      *  In response to the \"ordering\" request
    from the PCC, the PCE\n         MUST be able to indicate in the response message
    (PCRep) the\n         order in which TE LSPs should be reoptimized so as to minimize\n
    \        traffic disruption.  It should indicate for each request the\n         order
    in which the old TE LSP should be removed and the order\n         in which the
    new TE LSP should be setup.  If the removal order\n         is lower than the
    setup order, this means that make-before-\n         break cannot be done for this
    request.  It MAY also be\n         desirable to have the PCE indicate whether
    ordering is in fact\n         required or not.\n      *  During a migration, it
    may not be possible to do a make-before-\n         break for all existing TE LSPs.
    \ The request message MUST allow\n         indicating for each request whether
    make-before-break is\n         required (e.g., voice traffic) or break-before-make
    is\n         acceptable (e.g., Internet traffic).  The response message must\n
    \        allow indicating TE LSPs for which make-before-break\n         reoptimization
    is not possible (this will be deduced from the\n         TE LSP setup and deletion
    orders).\n"
  title: 4.  PCECP Requirements
- contents:
  - "5.  Protocol Extensions for Support of Global Concurrent Optimization\n   This
    section provides protocol extensions for support of global\n   concurrent optimization.
    \ Protocol extensions discussed in this\n   section are built on [RFC5440].\n
    \  The format of a PCReq message after incorporating new requirements\n   for
    support of global concurrent optimization is as follows.  The\n   message format
    uses Reduced Backus-Naur Format as defined in\n   [RFC5511].  Please see Appendix
    A for a full set of RBNF fragments\n   defined in this document and the necessary
    code license.\n   <PCReq Message> ::= <Common Header>\n                       [<svec-list>]\n
    \                      <request-list>\n   The <svec-list> is changed as follows:\n
    \  <svec-list> ::= <SVEC>\n                   [<OF>]\n                   [<GC>]\n
    \                  [<XRO>]\n                   [<svec-list>]\n   Note that three
    optional objects are added, following the SVEC\n   object:  the OF (Objective
    Function) object, which is defined in\n   [RFC5541], the GC (Global Constraints)
    object, which is defined in\n   this document (Section 5.5), as well as the eXclude
    Route Object\n   (XRO), which is defined in [RFC5521].  The placement of the OF
    object\n   (in which the global objective function is specified) in the SVEC-\n
    \  list is defined in [RFC5541].  Details of this change will be\n   discussed
    in the following sections.\n   Note also that when the XRO is global to an SVEC,
    and F-bit is set,\n   it SHOULD be allowed to specify multiple Record Route Objects
    in the\n   PCReq message.\n"
  - contents:
    - "5.1.  Global Objective Function (GOF) Specification\n   The global objective
      function can be specified in the PCEP Objective\n   Function (OF) object, defined
      in [RFC5541].  The OF object includes a\n   16-bit Objective Function identifier.
      \ As discussed in [RFC5541],\n   Objective Function identifier code points are
      managed by IANA.\n   Three global objective functions defined in [RFC5541] are
      used in the\n   context of GCO.\n      Function\n      Code       Description\n
      \      4         Minimize aggregate Bandwidth Consumption (MBC)\n       5         Minimize
      the load of the Most Loaded Link (MLL)*\n       6         Minimize the Cumulative
      Cost of a set of paths (MCC)\n   * Note: This can be achieved by the following
      objective function:\n     minimize max over all links {A(i)/C(i)} where C(i)
      is the link\n     capacity for link i, and A(i) is the total bandwidth allocated
      on\n     link i.\n"
    title: 5.1.  Global Objective Function (GOF) Specification
  - contents:
    - "5.2.  Indication of Global Concurrent Optimization Requests\n   All the path
      requests in this application should be indicated so that\n   the global objective
      function and all of the global constraints are\n   applied to each of the requested
      path computation.  This can be\n   indicated implicitly by placing the GCO related
      objects (OF, GC, or\n   XRO) after the SVEC object.  That is, if any of these
      objects follows\n   the SVEC object in the PCReq message, all of the requested
      path\n   computations specified in the SVEC object are subject to OF, GC, or\n
      \  XRO.\n"
    title: 5.2.  Indication of Global Concurrent Optimization Requests
  - contents:
    - "5.3.  Request for the Order of TE LSP\n   In order to minimize disruption associated
      with bulk path\n   provisioning, the PCC may indicate to the PCE that the response
      MUST\n   be ordered.  That is, the PCE has to include the order in which TE\n
      \  LSPs MUST be moved so as to minimize traffic disruption.  To support\n   such
      indication a new flag, the D flag, is defined in the RP object\n   as follows:\n
      \  D-bit (orDer - 1 bit): when set, in a PCReq message, the requesting\n   PCC
      requires the PCE to specify in the PCRep message the order in\n   which this
      particular path request is to be provisioned relative to\n   other requests.\n
      \  To support the determination of whether make-before-break\n   optimization
      is required, a new flag, the M flag, is defined in the\n   RP object as follows.\n
      \  M-bit (Make-before-break - 1 bit): when set, this indicates that a\n   make-before-break
      reoptimization is required for this request.\n   When the M-bit is not set,
      this implies that a break-before-make\n   reoptimization is allowed for this
      request.  Note that the M-bit can\n   be set only if the R (Reoptimization)
      flag is set.\n   Two new bit flags are defined to be carried in the Flags field
      in the\n   RP object.\n   Bit 21 (M-bit): When set, make-before-break is required.\n
      \  Bit 22 (D-bit): When set, report of the request order is required.\n"
    title: 5.3.  Request for the Order of TE LSP
  - contents:
    - "5.4.  The Order Response\n   The PCE MUST specify the order number in response
      to the Order\n   Request made by the PCC in the PCReq message if so requested
      by the\n   setting of the D-bit in the RP object in the PCReq message.  To\n
      \  support such an ordering indication, a new optional TLV, the Order\n   TLV,
      is defined in the RP object.\n   The Order TLV is an optional TLV in the RP
      object, that indicates the\n   order in which the old TE LSP must be removed
      and the new TE LSP must\n   be setup during a reoptimization.  It is carried
      in the PCRep message\n   in response to a reoptimization request.\n   The Order
      TLV MUST be included in the RP object in the PCRep message\n   if the D-bit
      is set in the RP object in the PCReq message.\n   The format of the Order TLV
      is as follows:\n      0                   1                   2                   3\n
      \     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |              Type             |             Length            |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |                          Delete Order                         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |                           Setup Order                         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \       Figure 2: The Order TLV in the RP Object in the PCRep Message\n   Type:
      5\n   Length: Variable\n   Delete Order: 32-bit integer that indicates the order
      in which the\n   old TE LSP should be removed.\n   Setup Order: 32-bit integer
      that indicates the order in which the new\n   TE LSP should be setup.\n   The
      delete order SHOULD NOT be equal to the setup order.  If the\n   delete order
      is higher than the setup order, this means that the\n   reoptimization can be
      done in a make-before-break manner, else it\n   cannot be done in a make-before-break
      manner.\n   For a new TE LSP, the delete order is not applicable.  The value
      0 is\n   designated to specify this case.  When the value of the delete order\n
      \  is 0, it implies that the resulting TE LSP is a new TE LSP.\n   To illustrate
      this, consider a network with two established TE LSPs:\n   R1 with path P1,
      and R2 with path P2.  During a reoptimization, the\n   PCE may provide the following
      ordered reply:\n   R1, path P1', remove order 1, setup order 4\n   R2, path
      P2', remove order 3, setup order 2\n   This indicates that the NMS should do
      the following sequence of\n   tasks:\n   1: Remove path P1\n   2: Set up path
      P2'\n   3: Remove path P2\n   4: Set up path P1'\n   That is, R1 is reoptimized
      in a break-before-make manner and R2 in a\n   make-before-break manner.\n"
    title: 5.4.  The Order Response
  - contents:
    - "5.5.  GLOBAL CONSTRAINTS (GC) Object\n   The GLOBAL CONSTRAINTS (GC) Object
      is used in a PCReq message to\n   specify the necessary global constraints that
      should be applied to\n   all individual path computations for a global concurrent
      path\n   optimization request.\n   GLOBAL-CONSTRAINTS Object-Class is 24.\n
      \  Global Constraints Object-Type is 1.\n   The format of the GC object body
      that includes the global constraints\n   is as follows:\n      0                   1
      \                  2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3
      4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |    MH         |    MU         |    mU         |    OB         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |                                                               |\n      //
      \                        Optional TLV(s)                     //\n      |                                                               |\n
      \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                       Figure
      3: GC Body Object Format\n   MH (Max Hop: 8 bits): 8-bit integer that indicates
      the maximum hop\n   count for all the TE LSPs.\n   MU (Max Utilization Percentage:
      8 bits) : 8-bit integer that\n   indicates the upper-bound utilization percentage
      by which all links\n   should be bound.  Utilization = (Link Capacity - Allocated
      Bandwidth\n   on the Link)/ Link Capacity.  MU is intended to be an integer
      that\n   can only be between 0 and 100.\n   mU (minimum Utilization Percentage:
      8 bits) : 8-bit integer that\n   indicates the lower-bound utilization percentage
      by which all links\n   should be bound.  mU is intended to be an integer that
      can only be\n   between 0 and 100.\n   OB (Over Booking factor Percentage: 8
      bits) : 8-bit integer that\n   indicates the overbooking percentage that allows
      the reserved\n   bandwidth to be overbooked on each link beyond its physical
      capacity\n   limit.  The value, for example, 10% means that 110 Mbps can be\n
      \  reserved on a 100 Mbps link.\n   The exclusion of the list of nodes/links
      from a global path\n   computation can be done by including the XRO object following
      the GC\n   object in the new SVEC-list definition.\n   Optional TLVs may be
      included within the GC object body to specify\n   additional global constraints.
      \ The TLV format and processing is\n   consistent with Section 7.1 of RFC 5440.
      \ Any TLVs will be allocated\n   from the \"PCEP TLV Type Indicators\" registry.
      \ Note that no TLVs are\n   defined in this document.\n"
    title: 5.5.  GLOBAL CONSTRAINTS (GC) Object
  - contents:
    - "5.6.  Error Indicator\n   To indicate errors associated with the global concurrent
      path\n   optimization request, a new Error-Type (14) and subsequent error-\n
      \  values are defined as follows for inclusion in the PCEP-ERROR Object:\n   A
      new Error-Type (15) and subsequent error-values are defined as\n   follows:\n
      \  Error-Type=15; Error-value=1: if a PCE receives a global concurrent\n   path
      optimization request and the PCE is not capable of processing\n   the request
      due to insufficient memory, the PCE MUST send a PCErr\n   message with a PCEP-ERROR
      Object (Error-Type=15) and an Error-value\n   (Error-value=1).  The PCE stops
      processing the request.  The\n   corresponding global concurrent path optimization
      request MUST be\n   cancelled at the PCC.\n   Error-Type=15; Error-value=2:
      if a PCE receives a global concurrent\n   path optimization request and the
      PCE is not capable of global\n   concurrent optimization, the PCE MUST send
      a PCErr message with a\n   PCEP-ERROR Object (Error-Type=15) and an Error-value
      (Error-value=2).\n   The PCE stops processing the request.  The corresponding
      global\n   concurrent path optimization MUST be cancelled at the PCC.\n   To
      indicate an error associated with policy violation, a new error\n   value \"global
      concurrent optimization not allowed\" should be added to\n   an existing error
      code for policy violation (Error-Type=5) as defined\n   in [RFC5440].\n   Error-Type=5;
      Error-value=5: if a PCE receives a global concurrent\n   path optimization request
      that is not compliant with administrative\n   privileges (i.e., the PCE policy
      does not support global concurrent\n   optimization), the PCE sends a PCErr
      message with a PCEP-ERROR Object\n   (Error-Type=5) and an Error-value (Error-value=5).
      \ The PCE stops the\n   processing the request.  The corresponding global concurrent
      path\n   computation MUST be cancelled at the PCC.\n"
    title: 5.6.  Error Indicator
  - contents:
    - "5.7.  NO-PATH Indicator\n   To communicate the reason(s) for not being able
      to find global\n   concurrent path computation, the NO-PATH object can be used
      in the\n   PCRep message.  The format of the NO-PATH object body is defined
      in\n   [RFC5440].  The object may contain a NO-PATH-VECTOR TLV to provide\n
      \  additional information about why a path computation has failed.\n   Two new
      bit flags are defined to be carried in the Flags field in the\n   NO-PATH-VECTOR
      TLV carried in the NO-PATH Object.\n   Bit 6: When set, the PCE indicates that
      no migration path was found.\n   Bit 7: When set, the PCE indicates no feasible
      solution was found\n   that meets all the constraints associated with global
      concurrent path\n   optimization in the PCRep message.\n"
    title: 5.7.  NO-PATH Indicator
  title: 5.  Protocol Extensions for Support of Global Concurrent Optimization
- contents:
  - "6.  Manageability Considerations\n   Manageability of global concurrent path
    computation with PCE must\n   address the following considerations:\n"
  - contents:
    - "6.1.  Control of Function and Policy\n   In addition to the parameters already
      listed in Section 8.1 of\n   [RFC5440], a PCEP implementation SHOULD allow configuring
      the\n   following PCEP session parameters on a PCC:\n   o  The ability to send
      a GCO request.\n   In addition to the parameters already listed in Section 8.1
      of\n   [RFC5440], a PCEP implementation SHOULD allow configuring the\n   following
      PCEP session parameters on a PCE:\n   o  The support for Global Concurrent Optimization.\n
      \  o  The maximum number of synchronized path requests per request\n      message.\n
      \  o  A set of GCO specific policies (authorized sender, request rate\n      limiter,
      etc.).\n   These parameters may be configured as default parameters for any
      PCEP\n   session the PCEP speaker participates in, or may apply to a specific\n
      \  session with a given PCEP peer or a specific group of sessions with a\n   specific
      group of PCEP peers.\n"
    title: 6.1.  Control of Function and Policy
  - contents:
    - "6.2.  Information and Data Models (e.g., MIB Module)\n   Extensions to the
      PCEP MIB module defined in [PCEP-MIB] should be\n   defined, so as to cover
      the GCO information introduced in this\n   document.\n"
    title: 6.2.  Information and Data Models (e.g., MIB Module)
  - contents:
    - "6.3.  Liveness Detection and Monitoring\n   Mechanisms defined in this document
      do not imply any new liveness\n   detection and monitoring requirements in addition
      to those already\n   listed in Section 8.3 of [RFC5440].\n"
    title: 6.3.  Liveness Detection and Monitoring
  - contents:
    - "6.4.  Verifying Correct Operation\n   Mechanisms defined in this document do
      not imply any new verification\n   requirements in addition to those already
      listed in Section 8.4 of\n   [RFC5440]\n"
    title: 6.4.  Verifying Correct Operation
  - contents:
    - "6.5.  Requirements on Other Protocols and Functional Components\n   The PCE
      Discovery mechanisms ([RFC5088] and [RFC5089]) may be used to\n   advertise
      global concurrent path computation capabilities to PCCs.  A\n   new flag (value=9)
      in PCE-CAP-FLAGs Sub-TLV has been assigned to be\n   able to indicate GCO capability.\n"
    title: 6.5.  Requirements on Other Protocols and Functional Components
  - contents:
    - "6.6.  Impact on Network Operation\n   Mechanisms defined in this document do
      not imply any new network\n   operation requirements in addition to those already
      listed in Section\n   8.6 of [RFC5440].\n"
    title: 6.6.  Impact on Network Operation
  title: 6.  Manageability Considerations
- contents:
  - "7.  Security Considerations\n   When global reoptimization is applied to an active
    network, it could\n   be extremely disruptive.  Although the real security and
    policy\n   issues apply at the NMS, if the wrong results are returned to the\n
    \  NMS, the wrong actions may be taken in the network.  Therefore, it is\n   very
    important that the operator issuing the commands has sufficient\n   authority
    and is authenticated, and that the computation request is\n   subject to appropriate
    policy.\n   The mechanism defined in [RFC5440] to secure a PCEP session can be\n
    \  used to secure global concurrent path computation requests/responses.\n"
  title: 7.  Security Considerations
- contents:
  - "8.  IANA Considerations\n   IANA maintains a registry of PCEP parameters.  IANA
    has made\n   allocations from the sub-registries as described in the following\n
    \  sections.\n"
  - contents:
    - "8.1.  Request Parameter Bit Flags\n   As described in Section 5.3, two new
      bit flags are defined for\n   inclusion in the Flags field of the RP object.
      \ IANA has made the\n   following allocations from the \"RP Object Flag Field\"
      sub-registry.\n      Bit      Description                         Reference\n
      \     21       Make-before-break (M-bit)           [RFC5557]\n      22       Report
      the request order (D-bit)    [RFC5557]\n"
    title: 8.1.  Request Parameter Bit Flags
  - contents:
    - "8.2.  New PCEP TLV\n   As described in Section 5.4, a new PCEP TLV is defined
      to indicate\n   the setup and delete order of TE LSPs in a GCO.  IANA has made
      the\n   following allocation from the \"PCEP TLV Type Indicators\" sub-\n   registry.\n
      \     TLV Type        Meaning                 Reference\n      5               Order
      TLV               [RFC5557]\n"
    title: 8.2.  New PCEP TLV
  - contents:
    - "8.3.  New Flag in PCE-CAP-FLAGS Sub-TLV in PCED\n   As described in Section
      6.5, a new PCE-CAP-FLAGS Sub-TLV is defined\n   to indicate a GCO capability.
      \ IANA has made the following allocation\n   from the \"Path Computation Element
      (PCE) Capability Flags\" sub-\n   registry, which was created by Section 7.2
      of RFC 5088.  It is an\n   OSPF registry.\n      FLAG            Meaning                                Reference\n
      \     9               Global Concurrent Optimization (GCO)   [RFC5557]\n"
    title: 8.3.  New Flag in PCE-CAP-FLAGS Sub-TLV in PCED
  - contents:
    - "8.4.  New PCEP Object\n   As descried in Section 5.5, a new PCEP object is
      defined to carry\n   global constraints.  IANA has made the following allocation
      from the\n   \"PCEP Objects\" sub-registry.\n      Object  Name                                            Reference\n
      \     Class\n      24      GLOBAL-CONSTRAINTS                              [RFC5557]\n
      \                 Object-Type\n                  1: Global Constraints                       [RFC5557]\n"
    title: 8.4.  New PCEP Object
  - contents:
    - "8.5.  New PCEP Error Codes\n   As described in Section 5.6, new PCEP error
      codes are defined for GCO\n   errors.  IANA has made allocations from the \"PCEP-ERROR
      Object Error\n   Types and Values\" sub-registry as set out in the following
      sections.\n"
    - contents:
      - "8.5.1.  New Error-Values for Existing Error-Types\n      Error-\n      Type
        \   Meaning                                         Reference\n      5       Policy
        violation\n                Error-value=5:                                [RFC5557]\n
        \                 Global concurrent optimization not allowed\n"
      title: 8.5.1.  New Error-Values for Existing Error-Types
    - contents:
      - "8.5.2.  New Error-Types and Error-Values\n      Error-\n      Type    Meaning
        \                                        Reference\n      15      Global Concurrent
        Optimization Error            [RFC5557]\n                Error-value=1:\n
        \                 Insufficient memory                         [RFC5557]\n
        \               Error-value=2:\n                  Global concurrent optimization
        not supported\n                                                              [RFC5557]\n"
      title: 8.5.2.  New Error-Types and Error-Values
    title: 8.5.  New PCEP Error Codes
  - contents:
    - "8.6.  New No-Path Reasons\n   IANA has made the following allocations from
      the \"NO-PATH-VECTOR TLV\n   Flag Field\" sub-registry for bit flags carried
      in the NO-PATH-VECTOR\n   TLV in the PCEP NO-PATH object as described in Section
      5.7.\n      Bit\n      Number          Name                         Reference\n
      \     25              No GCO solution found        [RFC5557]\n      26              No
      GCO migration path found  [RFC5557]\n"
    title: 8.6.  New No-Path Reasons
  title: 8.  IANA Considerations
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [RFC5441]  Vasseur, JP., Ed., Zhang, R., Bitar,
      N., and JL. Le Roux,\n              \"A Backward-Recursive PCE-Based Computation
      (BRPC)\n              Procedure to Compute Shortest Constrained Inter-Domain\n
      \             Traffic Engineering Label Switched Paths\", RFC 5441, April\n
      \             2009.\n   [RFC5541]  Le Roux, JL., Vasseur, JP., and Y. Lee, \"Encoding
      of\n              Objective Functions in Path Computation Element\n              Communication
      Protocol (PCEP)\", RFC 5541, May 2009.\n   [RFC5521]  Oki, E., Takeda, T., and
      A. Farrel, \"Extensions to the\n              Path Computation Element Communication
      Protocol (PCEP) for\n              Route Exclusions\", RFC 5521, April 2009.\n
      \  [RFC5440]  Vasseur, JP., Ed., and JL. Le Roux, Ed., \"Path Computation\n
      \             Element (PCE) Communication Protocol (PCEP)\", RFC 5440,\n              March
      2009.\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n
      \             Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC3209]
      \ Awduche, D., Berger, L., Gan, D., Li, T., Srinivasan, V.,\n              and
      G. Swallow, \"RSVP-TE: Extensions to RSVP for LSP\n              Tunnels\",
      RFC 3209, December 2001.\n   [RFC5088]  Le Roux, JL., Ed., Vasseur, JP., Ed.,
      Ikejiri, Y., and R.\n              Zhang, \"OSPF Protocol Extensions for Path
      Computation\n              Element (PCE) Discovery\", RFC 5088, January 2008.\n
      \  [RFC5089]  Le Roux, JL., Ed., Vasseur, JP., Ed., Ikejiri, Y., and R.\n              Zhang,
      \"IS-IS Protocol Extensions for Path Computation\n              Element (PCE)
      Discovery\", RFC 5089, January 2008.\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2.  Informative References\n   [PCE-MLN]  Oki, E., Takeda, T., Le Roux, JL.,
      and A. Farrel,\n              \"Framework for PCE-Based Inter-Layer MPLS and
      GMPLS\n              Traffic Engineering\", Work in Progress, March 2009.\n
      \  [PCEP-MIB] Koushik, K. and E. Stephan, \"PCE communication protocol\n              (PCEP)
      Management Information Base\", Work in Progress,\n              November 2008.\n
      \  [RFC5511]  Farrel, A., \"Routing Backus-Naur Form (RBNF): A Syntax\n              Used
      to Form Encoding Rules in Various Routing Protocol\n              Specifications\",
      RFC 5511, April 2009.\n   [RFC4655]  Farrel, A., Vasseur, J.-P., and J. Ash,
      \"A Path\n              Computation Element (PCE)-Based Architecture\", RFC
      4655,\n              August 2006.\n   [RFC4657]  Ash, J., Ed., and J. Le Roux,
      Ed., \"Path Computation\n              Element (PCE) Communication Protocol
      Generic\n              Requirements\", RFC 4657, September 2006.\n   [RFC4674]
      \ Le Roux, J., Ed., \"Requirements for Path Computation\n              Element
      (PCE) Discovery\", RFC 4674, October 2006.\n   [RFC5212]  Shiomoto, K., Papadimitriou,
      D., Le Roux, JL., Vigoureux,\n              M., and D. Brungard, \"Requirements
      for GMPLS-Based Multi-\n              Region and Multi-Layer Networks (MRN/MLN)\",
      RFC 5212, July\n              2008.\n"
    title: 9.2.  Informative References
  title: 9.  References
- contents:
  - "10.  Acknowledgments\n   We would like to thank Jerry Ash, Adrian Farrel, J-P
    Vasseur, Ning\n   So, Lucy Yong, and Fabien Verhaeghe for their useful comments
    and\n   suggestions.\n"
  title: 10.  Acknowledgments
- contents:
  - "Appendix A.  RBNF Code Fragments\n   Copyright (c) 2009 IETF Trust and the persons
    identified as authors\n   of the code.  All rights reserved.\n   Redistribution
    and use in source and binary forms, with or without\n   modification, are permitted
    provided that the following conditions\n   are met:\n   - Redistributions of source
    code must retain the above copyright\n     notice, this list of conditions and
    the following disclaimer.\n   - Redistributions in binary form must reproduce
    the above copyright\n     notice, this list of conditions and the following disclaimer
    in the\n     documentation and/or other materials provided with the\n     distribution.\n
    \  - Neither the name of Internet Society, IETF or IETF Trust, nor the\n     names
    of specific contributors, may be used to endorse or promote\n     products derived
    from this software without specific prior written\n     permission.\n   THIS SOFTWARE
    IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n   LIMITED TO, THE IMPLIED
    WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n   A PARTICULAR PURPOSE ARE DISCLAIMED.
    \ IN NO EVENT SHALL THE COPYRIGHT\n   OWNER OR CONTRIBUTORS BE LIABLE FOR ANY
    DIRECT, INDIRECT, INCIDENTAL,\n   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
    (INCLUDING, BUT NOT\n   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
    LOSS OF USE,\n   DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
    ON ANY\n   THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n
    \  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n   OF
    THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n   <PCReq Message>
    ::= <Common Header>\n                       [<svec-list>]\n                       <request-list>\n
    \  <svec-list> ::= <SVEC>\n                   [<OF>]\n                   [<GC>]\n
    \                  [<XRO>]\n                   [<svec-list>]\n"
  title: Appendix A.  RBNF Code Fragments
- contents:
  - "Authors' Addresses\n   Young Lee\n   Huawei\n   1700 Alma Drive, Suite 100\n
    \  Plano, TX  75075\n   US\n   Phone: +1 972 509 5599 x2240\n   Fax:   +1 469
    229 5397\n   EMail: ylee@huawei.com\n   JL Le Roux\n   France Telecom\n   2, Avenue
    Pierre-Marzin\n   Lannion  22307\n   FRANCE\n   EMail: jeanlouis.leroux@orange-ftgroup.com\n
    \  Daniel King\n   Old Dog Consulting\n   United Kingdom\n   EMail: daniel@olddog.co.uk\n
    \  Eiji Oki\n   University of Electro-Communications\n   1-5-1 Chofugaoka\n   Chofu,
    Tokyo  182-8585\n   JAPAN\n   EMail: oki@ice.uec.ac.jp\n"
  title: Authors' Addresses
