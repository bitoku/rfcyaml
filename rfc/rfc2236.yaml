- title: __initial_text__
  contents:
  - '             Internet Group Management Protocol, Version 2

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1997).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo documents IGMPv2, used by IP hosts to report their\n \
    \  multicast group memberships to routers.  It updates STD 5, RFC 1112.\n   IGMPv2\
    \ allows group membership termination to be quickly reported to\n   the routing\
    \ protocol, which is important for high-bandwidth multicast\n   groups and/or\
    \ subnets with highly volatile group membership.\n   This document is a product\
    \ of the Inter-Domain Multicast Routing\n   working group within the Internet\
    \ Engineering Task Force.  Comments\n   are solicited and should be addressed\
    \ to the working group's mailing\n   list at idmr@cs.ucl.ac.uk and/or the author(s).\n"
- title: 1.  Definitions
  contents:
  - "1.  Definitions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",  \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [RFC 2119].\n"
- title: 2.  Introduction
  contents:
  - "2.  Introduction\n   The Internet Group Management Protocol (IGMP) is used by\
    \ IP hosts to\n   report their multicast group memberships to any immediately-\n\
    \   neighboring multicast routers.  This memo describes only the use of\n   IGMP\
    \ between hosts and routers to determine group membership.\n   Routers that are\
    \ members of multicast groups are expected to behave\n   as hosts as well as routers,\
    \ and may even respond to their own\n   queries.  IGMP may also be used between\
    \ routers, but such use is not\n   specified here.\n   Like ICMP, IGMP is a integral\
    \ part of IP.  It is required to be\n   implemented by all hosts wishing to receive\
    \ IP multicasts.  IGMP\n   messages are encapsulated in IP datagrams, with an\
    \ IP protocol number\n   of 2.  All IGMP messages described in this document are\
    \ sent with IP\n   TTL 1, and contain the IP Router Alert option [RFC 2113] in\
    \ their IP\n   header.  All IGMP messages of concern to hosts have the following\n\
    \   format:\n    0                   1                   2                   3\n\
    \    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      Type     | Max Resp Time |           Checksum            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                         Group Address                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 2.1.  Type
  contents:
  - "2.1.  Type\n   There are three types of IGMP messages of concern to the host-\n\
    \   router interaction:\n   0x11 = Membership Query\n        There are two sub-types\
    \ of Membership Query messages:\n        - General Query, used to learn which\
    \ groups have members on an\n          attached network.\n        - Group-Specific\
    \ Query, used to learn if a particular group\n          has any members on an\
    \ attached network.\n        These two messages are differentiated by the Group\
    \ Address, as\n        described in section 1.4 .  Membership Query messages are\n\
    \        referred to simply as \"Query\" messages.\n   0x16 = Version 2 Membership\
    \ Report\n   0x17 = Leave Group\n   There is an additional type of message, for\
    \ backwards-compatibility\n   with IGMPv1:\n   0x12 = Version 1 Membership Report\n\
    \   This document refers to Membership Reports simply as \"Reports\".  When\n\
    \   no version is specified, the statement applies equally to both\n   versions.\n\
    \   Unrecognized message types should be silently ignored.  New message\n   types\
    \ may be used by newer versions of IGMP, by multicast routing\n   protocols, or\
    \ other uses.\n"
- title: 2.2.  Max Response Time
  contents:
  - "2.2.  Max Response Time\n   The Max Response Time field is meaningful only in\
    \ Membership Query\n   messages, and specifies the maximum allowed time before\
    \ sending a\n   responding report in units of 1/10 second.  In all other messages,\
    \ it\n   is set to zero by the sender and ignored by receivers.\n   Varying this\
    \ setting allows IGMPv2 routers to tune the \"leave\n   latency\" (the time between\
    \ the moment the last host leaves a group\n   and when the routing protocol is\
    \ notified that there are no more\n   members), as discussed in section 7.8. \
    \ It also allows tuning of the\n   burstiness of IGMP traffic on a subnet, as\
    \ discussed in section 7.3.\n"
- title: 2.3.  Checksum
  contents:
  - "2.3.  Checksum\n   The checksum is the 16-bit one's complement of the one's complement\n\
    \   sum of the whole IGMP message (the entire IP payload).  For computing\n  \
    \ the checksum, the checksum field is set to zero.  When transmitting\n   packets,\
    \ the checksum MUST be computed and inserted into this field.\n   When receiving\
    \ packets, the checksum MUST be verified before\n   processing a packet.\n"
- title: 2.4.  Group Address
  contents:
  - "2.4.  Group Address\n   In a Membership Query message, the group address field\
    \ is set to zero\n   when sending a General Query, and set to the group address\
    \ being\n   queried when sending a Group-Specific Query.\n   In a Membership Report\
    \ or Leave Group message, the group address\n   field holds the IP multicast group\
    \ address of the group being\n   reported or left.\n"
- title: 2.5.  Other fields
  contents:
  - "2.5.  Other fields\n   Note that IGMP messages may be longer than 8 octets, especially\n\
    \   future backwards-compatible versions of IGMP.  As long as the Type is\n  \
    \ one that is recognized, an IGMPv2 implementation MUST ignore anything\n   past\
    \ the first 8 octets while processing the packet.  However, the\n   IGMP checksum\
    \ is always computed over the whole IP payload, not just\n   over the first 8\
    \ octets.\n"
- title: 3.  Protocol Description
  contents:
  - "3.  Protocol Description\n   Note that defaults for timer values are described\
    \ later in this\n   document.  Timer and counter names appear in square brackets.\n\
    \   The term \"interface\" is sometimes used in this document to mean \"the\n\
    \   primary interface on an attached network\"; if a router has multiple\n   physical\
    \ interfaces on a single network this protocol need only run\n   on one of them.\
    \  Hosts, on the other hand, need to perform their\n   actions on all interfaces\
    \ that have memberships associated with them.\n   Multicast routers use IGMP to\
    \ learn which groups have members on each\n   of their attached physical networks.\
    \  A multicast router keeps a list\n   of multicast group memberships for each\
    \ attached network, and a timer\n   for each membership.  \"Multicast group memberships\"\
    \ means the\n   presence of at least one member of a multicast group on a given\n\
    \   attached network, not a list of all of the members.  With respect to\n   each\
    \ of its attached networks, a multicast router may assume one of\n   two roles:\
    \ Querier or Non-Querier.  There is normally only one\n   Querier per physical\
    \ network.  All multicast routers start up as a\n   Querier on each attached network.\
    \  If a multicast router hears a\n   Query message from a router with a lower\
    \ IP address, it MUST become a\n   Non-Querier on that network.  If a router has\
    \ not heard a Query\n   message from another router for [Other Querier Present\
    \ Interval], it\n   resumes the role of Querier.  Routers periodically [Query\
    \ Interval]\n   send a General Query on each attached network for which this router\n\
    \   is the Querier, to solicit membership information.  On startup, a\n   router\
    \ SHOULD send [Startup Query Count] General Queries spaced\n   closely together\
    \ [Startup Query Interval] in order to quickly and\n   reliably determine membership\
    \ information.  A General Query is\n   addressed to the all-systems multicast\
    \ group (224.0.0.1), has a Group\n   Address field of 0, and has a Max Response\
    \ Time of [Query Response\n   Interval].\n   When a host receives a General Query,\
    \ it sets delay timers for each\n   group (excluding the all-systems group) of\
    \ which it is a member on\n   the interface from which it received the query.\
    \  Each timer is set to\n   a different random value, using the highest clock\
    \ granularity\n   available on the host, selected from the range (0, Max Response\
    \ Time]\n   with Max Response Time as specified in the Query packet.  When a host\n\
    \   receives a Group-Specific Query, it sets a delay timer to a random\n   value\
    \ selected from the range (0, Max Response Time] as above for the\n   group being\
    \ queried if it is a member on the interface from which it\n   received the query.\
    \  If a timer for the group is already running, it\n   is reset to the random\
    \ value only if the requested Max Response Time\n   is less than the remaining\
    \ value of the running timer.  When a\n   group's timer expires, the host multicasts\
    \ a Version 2 Membership\n   Report to the group, with IP TTL of 1.  If the host\
    \ receives another\n   host's Report (version 1 or 2) while it has a timer running,\
    \ it stops\n   its timer for the specified group and does not send a Report, in\n\
    \   order to suppress duplicate Reports.\n   When a router receives a Report,\
    \ it adds the group being reported to\n   the list of multicast group memberships\
    \ on the network on which it\n   received the Report and sets the timer for the\
    \ membership to the\n   [Group Membership Interval].  Repeated Reports refresh\
    \ the timer.  If\n   no Reports are received for a particular group before this\
    \ timer has\n   expired, the router assumes that the group has no local members\
    \ and\n   that it need not forward remotely-originated multicasts for that\n \
    \  group onto the attached network.\n   When a host joins a multicast group, it\
    \ should immediately transmit\n   an unsolicited Version 2 Membership Report for\
    \ that group, in case it\n   is the first member of that group on the network.\
    \  To cover the\n   possibility of the initial Membership Report being lost or\
    \ damaged,\n   it is recommended that it be repeated once or twice after short\n\
    \   delays [Unsolicited Report Interval].  (A simple way to accomplish\n   this\
    \ is to send the initial Version 2 Membership Report and then act\n   as if a\
    \ Group-Specific Query was received for that group, and set a\n   timer appropriately).\n\
    \   When a host leaves a multicast group, if it was the last host to\n   reply\
    \ to a Query with a Membership Report for that group, it SHOULD\n   send a Leave\
    \ Group message to the all-routers multicast group\n   (224.0.0.2). If it was\
    \ not the last host to reply to a Query, it MAY\n   send nothing as there must\
    \ be another member on the subnet.  This is\n   an optimization to reduce traffic;\
    \ a host without sufficient storage\n   to remember whether or not it was the\
    \ last host to reply MAY always\n   send a Leave Group message when it leaves\
    \ a group.  Routers SHOULD\n   accept a Leave Group message addressed to the group\
    \ being left, in\n   order to accommodate implementations of an earlier version\
    \ of this\n   standard.  Leave Group messages are addressed to the all-routers\n\
    \   group because other group members have no need to know that a host\n   has\
    \ left the group, but it does no harm to address the message to the\n   group.\n\
    \   When a Querier receives a Leave Group message for a group that has\n   group\
    \ members on the reception interface, it sends [Last Member Query\n   Count] Group-Specific\
    \ Queries every [Last Member Query Interval] to\n   the group being left.  These\
    \ Group-Specific Queries have their Max\n   Response time set to [Last Member\
    \ Query Interval].  If no Reports are\n   received after the response time of\
    \ the last query expires, the\n   routers assume that the group has no local members,\
    \ as above.  Any\n   Querier to non-Querier transition is ignored during this\
    \ time; the\n   same router keeps sending the Group-Specific Queries.\n   Non-Queriers\
    \ MUST ignore Leave Group messages, and Queriers SHOULD\n   ignore Leave Group\
    \ messages for which there are no group members on\n   the reception interface.\n\
    \   When a non-Querier receives a Group-Specific Query message, if its\n   existing\
    \ group membership timer is greater than [Last Member Query\n   Count] times the\
    \ Max Response Time specified in the message, it sets\n   its group membership\
    \ timer to that value.\n"
- title: 4.  Compatibility with IGMPv1 Routers
  contents:
  - "4.  Compatibility with IGMPv1 Routers\n   An IGMPv2 host may be placed on a subnet\
    \ where the Querier router has\n   not yet been upgraded to IGMPv2.  The following\
    \ requirements apply:\n        The IGMPv1 router will send General Queries with\
    \ the Max\n        Response Time set to 0.  This MUST be interpreted as a value\
    \ of\n        100 (10 seconds).\n        The IGMPv1 router expects Version 1 Membership\
    \ Reports in\n        response to its Queries, and will not pay attention to Version\
    \ 2\n        Membership Reports.  Therefore, a state variable MUST be kept\n \
    \       for each interface, describing whether the multicast Querier on\n    \
    \    that interface is running IGMPv1 or IGMPv2.  This variable MUST\n       \
    \ be based upon whether or not an IGMPv1 query was heard in the\n        last\
    \ [Version 1 Router Present Timeout] seconds, and MUST NOT be\n        based upon\
    \ the type of the last Query heard.  This state\n        variable MUST be used\
    \ to decide what type of Membership Reports\n        to send for unsolicited Membership\
    \ Reports as well as Membership\n        Reports in response to Queries.\n   \
    \     An IGMPv2 host MAY suppress Leave Group messages on a network\n        where\
    \ the Querier is using IGMPv1.\n   An IGMPv2 router may be placed on a subnet\
    \ where at least one router\n   on the subnet has not yet been upgraded to IGMPv2.\
    \  The following\n   requirements apply:\n        If any IGMPv1 routers are present,\
    \ the querier MUST use IGMPv1.\n        The use of IGMPv1 must be administratively\
    \ configured, as there\n        is no reliable way of dynamically determining\
    \ whether IGMPv1\n        routers are present on a network.  Implementations MAY\
    \ provide a\n        way for system administrators to enable the use of IGMPv1\
    \ on\n        their routers; in the absence of explicit configuration, the\n \
    \       configuration MUST default to IGMPv2.  When in IGMPv1 mode,\n        routers\
    \ MUST send Periodic Queries with a Max Response Time of\n        0, and MUST\
    \ ignore Leave Group messages.  They SHOULD also warn\n        about receiving\
    \ an IGMPv2 query, although such warnings MUST be\n        rate-limited.\n   \
    \     If a router is not explicitly configured to use IGMPv1 and hears\n     \
    \   an IGMPv1 Query, it SHOULD log a warning.  These warnings MUST\n        be\
    \ rate-limited.\n"
- title: 5.  Compatibility with IGMPv1 Hosts
  contents:
  - "5.  Compatibility with IGMPv1 Hosts\n   An IGMPv2 host may be placed on a subnet\
    \ where there are hosts that\n   have not yet been upgraded to IGMPv2.  The following\
    \ requirement\n   applies:\n        The host MUST allow its Membership Report\
    \ to be suppressed by\n        either a Version 1 Membership Report or a Version\
    \ 2 Membership\n        Report.\n   An IGMPv2 router may be placed on a subnet\
    \ where there are hosts that\n   have not yet been upgraded to IGMPv2.  The following\
    \ requirements\n   apply:\n        If a router receives a Version 1 Membership\
    \ Report, it MUST set\n        a timer to note that there are version 1 hosts\
    \ present which are\n        members of the group for which it heard the report.\
    \  This timer\n        should be the same as the [Group Membership Interval].\n\
    \        If there are version 1 hosts present for a particular group, a\n    \
    \    router MUST ignore any Leave Group messages that it receives for\n      \
    \  that group.\n"
- title: 6.  Host State Diagram
  contents:
  - "6.  Host State Diagram\n   Host behavior is more formally specified by the state\
    \ transition\n   diagram below.  A host may be in one of three possible states\
    \ with\n   respect to any single IP multicast group on any single network\n  \
    \ interface:\n   - \"Non-Member\" state, when the host does not belong to the\
    \ group on\n     the interface.  This is the initial state for all memberships\
    \ on\n     all network interfaces; it requires no storage in the host.\n   - \"\
    Delaying Member\" state, when the host belongs to the group on the\n     interface\
    \ and has a report delay timer running for that membership.\n   - \"Idle Member\"\
    \ state, when the host belongs to the group on the\n     interface and does not\
    \ have a report delay timer running for that\n     membership.\n   There are five\
    \ significant events that can cause IGMP state\n   transitions:\n   - \"join group\"\
    \ occurs when the host decides to join the group on the\n     interface.  It may\
    \ occur only in the Non-Member state.\n   - \"leave group\" occurs when the host\
    \ decides to leave the group on\n     the interface.  It may occur only in the\
    \ Delaying Member and Idle\n     Member states.\n   - \"query received\" occurs\
    \ when the host receives either a valid\n     General Membership Query message,\
    \ or a valid Group-Specific\n     Membership Query message.  To be valid, the\
    \ Query message must be\n     at least 8 octets long, and have a correct IGMP\
    \ checksum.  The\n     group address in the IGMP header must either be zero (a\
    \ General\n     Query) or a valid multicast group address (a Group-Specific Query).\n\
    \     A General Query applies to all memberships on the interface from\n     which\
    \ the Query is received.  A Group-Specific Query applies to\n     membership in\
    \ a single group on the interface from which the Query\n     is received.  Queries\
    \ are ignored for memberships in the Non-Member\n     state.\n   - \"report received\"\
    \ occurs when the host receives a valid IGMP\n     Membership Report message (Version\
    \ 1 or Version 2).  To be valid,\n     the Report message must be at least 8 octets\
    \ long and have a\n     correct IGMP checksum.  A Membership Report applies only\
    \ to the\n     membership in the group identified by the Membership Report, on\
    \ the\n     interface from which the Membership Report is received.  It is\n \
    \    ignored for memberships in the Non-Member or Idle Member state.\n   - \"\
    timer expired\" occurs when the report delay timer for the group on\n     the\
    \ interface expires.  It may occur only in the Delaying Member\n     state.\n\
    \   All other events, such as receiving invalid IGMP messages, or IGMP\n   messages\
    \ other than Query or Report, are ignored in all states.\n   There are seven possible\
    \ actions that may be taken in response to the\n   above events:\n   - \"send\
    \ report\" for the group on the interface.  The type of report\n     is determined\
    \ by the state of the interface.  The Report Message is\n     sent to the group\
    \ being reported.\n   - \"send leave\" for the group on the interface.  If the\
    \ interface\n     state says the Querier is running IGMPv1, this action SHOULD\
    \ be\n     skipped.  If the flag saying we were the last host to report is\n \
    \    cleared, this action MAY be skipped.  The Leave Message is sent to\n    \
    \ the ALL-ROUTERS group (224.0.0.2).\n   - \"set flag\" that we were the last\
    \ host to send a report for this\n     group.\n   - \"clear flag\" since we were\
    \ not the last host to send a report for\n     this group.\n   - \"start timer\"\
    \ for the group on the interface, using a delay value\n     chosen uniformly from\
    \ the interval (0, Max Response Time], where\n     Max Response time is specified\
    \ in the Query.  If this is an\n     unsolicited Report, the timer is set to a\
    \ delay value chosen\n     uniformly from the interval (0, [Unsolicited Report\
    \ Interval] ].\n   - \"reset timer\" for the group on the interface to a new value,\
    \ using\n     a delay value chosen uniformly from the interval (0, Max Response\n\
    \     Time], as described in \"start timer\".\n   - \"stop timer\" for the group\
    \ on the interface.\n   In all of the following state diagrams, each state transition\
    \ arc is\n   labeled with the event that causes the transition, and, in\n   parentheses,\
    \ any actions taken during the transition.  Note that the\n   transition is always\
    \ triggered by the event; even if the action is\n   conditional, the transition\
    \ still occurs.\n                              ________________\n            \
    \                 |                |\n                             |         \
    \       |\n                             |                |\n                 \
    \            |                |\n                   --------->|   Non-Member \
    \  |<---------\n                  |          |                |          |\n \
    \                 |          |                |          |\n                 \
    \ |          |                |          |\n                  |          |________________|\
    \          |\n                  |                   |                  |\n   \
    \               | leave group       | join group       | leave group\n       \
    \           | (stop timer,      |(send report,     | (send leave\n           \
    \       |  send leave if    | set flag,        |  if flag set)\n             \
    \     |  flag set)        | start timer)     |\n          ________|________  \
    \         |          ________|________\n         |                 |<---------\
    \          |                 |\n         |                 |                 \
    \   |                 |\n         |                 |<-------------------|   \
    \              |\n         |                 |   query received   |          \
    \       |\n         | Delaying Member |    (start timer)   |   Idle Member   |\n\
    \    ---->|                 |------------------->|                 |\n   |   \
    \  |                 |   report received  |                 |\n   |     |    \
    \             |    (stop timer,    |                 |\n   |     |           \
    \      |     clear flag)    |                 |\n   |     |_________________|------------------->|_________________|\n\
    \   | query received    |        timer expired\n   | (reset timer if   |     \
    \   (send report,\n   |  Max Resp Time    |         set flag)\n   |  < current\
    \ timer) |\n    -------------------\n   The all-systems group (address 224.0.0.1)\
    \ is handled as a special\n   case.  The host starts in Idle Member state for\
    \ that group on every\n   interface, never transitions to another state, and never\
    \ sends a\n   report for that group.\n   In addition, a host may be in one of\
    \ two possible states with respect\n   to any single network interface:\n   -\
    \ \"No IGMPv1 Router Present\", when the host has not heard an IGMPv1\n     style\
    \ query for the [Version 1 Router Present Timeout].  This is\n     the initial\
    \ state.\n   - \"IGMPv1 Router Present\", when the host has heard an IGMPv1 style\n\
    \     query within the [Version 1 Router Present Timeout].\n   There are two events\
    \ that can cause state transitions:\n   - \"IGMPv1 query received\", when the\
    \ host receives a query with the\n     Max Response Time field set to 0.\n   -\
    \ \"timer expires\", when the timer set to note the presence of an\n     IGMPv1\
    \ router expires.\n   And a single action that can be triggered by an event:\n\
    \   - \"set timer\", setting the timer to its maximum value [Version 1\n     Router\
    \ Present Timeout] and (re)starting it.\n                              ________________\n\
    \                             |                |\n                           \
    \  |                |\n                             |   No IGMPv1    |\n     \
    \                        |     Router     |\n                             |  \
    \  Present     |\n                             |                |\n          \
    \              ---->|                |----\n                       |     |   \
    \             |    |\n                       |     |________________|    |\n \
    \        timer expires |                           | IGMPv1 query\n          \
    \             |      ________________     | received\n                       |\
    \     |                |    | (set timer)\n                       |     |    \
    \            |    |\n                       |     |                |    |\n  \
    \                      -----|     IGMPv1     |<---\n                         \
    \    |     Router     |\n                             |    Present     |\n   \
    \                          |                |\n                        ---->|\
    \                |----\n                       |     |________________|    |\n\
    \                       |                           |\n                      \
    \ | IGMPv1 query received     |\n                       | (set timer)        \
    \       |\n                        ---------------------------\n"
- title: 7.  Router State Diagram
  contents:
  - "7.  Router State Diagram\n   Router behavior is more formally specified by the\
    \ state transition\n   diagrams below.\n   A router may be in one of two possible\
    \ states with respect to any\n   single attached network:\n   - \"Querier\", when\
    \ this router is designated to transmit IGMP\n     Membership Queries on this\
    \ network.\n   - \"Non-Querier\", when there is another router designated to transmit\n\
    \     IGMP membership Queries on this network.\n   The following three events\
    \ can cause the router to change states:\n   - \"query timer expired\" occurs\
    \ when the timer set for query\n     transmission expires.\n   - \"query received\
    \ from a router with a lower IP address\" occurs when\n     an IGMP Membership\
    \ Query is received from a router on the same\n     network with a lower IP address.\n\
    \   - \"other querier present timer expired\" occurs when the timer set to\n \
    \    note the presence of another querier with a lower IP address on the\n   \
    \  network expires.\n   There are three actions that may be taken in response\
    \ to the above\n   events:\n   - \"start general query timer\" for the attached\
    \ network.\n   - \"start other querier present timer\" for the attached network\
    \ [Other\n     Querier Present Interval].\n   - \"send general query\" on the\
    \ attached network.  The General Query is\n     sent to the all-systems group\
    \ (224.0.0.1), and has a Max Response\n     Time of [Query Response Interval].\n\
    \                                      --------------------------------\n    \
    \                          _______|________  gen. query timer      |\n  ---------\
    \                  |                |        expired        |\n | Initial |---------------->|\
    \                | (send general query,  |\n  ---------  (send gen. q.,  |   \
    \             |  set gen. q. timer)   |\n        set initial gen. q.  |      \
    \          |<----------------------\n              timer)         |    Querier\
    \     |\n                             |                |\n                   \
    \     -----|                |<---\n                       |     |            \
    \    |    |\n                       |     |________________|    |\n query received\
    \ from a |                           | other querier\n router with a lower   |\
    \                           | present timer\n IP address            |        \
    \                   | expired\n (set other querier    |      ________________\
    \     | (send general\n  present timer)       |     |                |    |  query,set\
    \ gen.\n                       |     |                |    |  q. timer)\n    \
    \                   |     |                |    |\n                        ---->|\
    \      Non       |----\n                             |    Querier     |\n    \
    \                         |                |\n                             | \
    \               |\n                        ---->|                |----\n     \
    \                  |     |________________|    |\n                       | query\
    \ received from a     |\n                       | router with a lower IP    |\n\
    \                       | address                   |\n                      \
    \ | (set other querier        |\n                       |  present timer)    \
    \       |\n                        ---------------------------\n   A router should\
    \ start in the Initial state on all attached networks,\n   and immediately move\
    \ to Querier state.\n   In addition, to keep track of which groups have members,\
    \ a router may\n   be in one of four possible states with respect to any single\
    \ IP\n   multicast group on any single attached network:\n   - \"No Members Present\"\
    \ state, when there are no hosts on the network\n     which have sent reports\
    \ for this multicast group.  This is the\n     initial state for all groups on\
    \ the router; it requires no storage\n     in the router.\n   - \"Members Present\"\
    \ state, when there is a host on the network which\n     has sent a Membership\
    \ Report for this multicast group.\n   - \"Version 1 Members Present\" state,\
    \ when there is an IGMPv1 host on\n     the network which has sent a Version 1\
    \ Membership Report for this\n     multicast group.\n   - \"Checking Membership\"\
    \ state, when the router has received a\n     Leave Group message but has not\
    \ yet heard a Membership Report for\n     the multicast group.\n   There are six\
    \ significant events that can cause router state\n   transitions:\n   - \"v2 report\
    \ received\" occurs when the router receives a Version 2\n     Membership Report\
    \ for the group on the interface.  To be valid, the\n     Report message must\
    \ be at least 8 octets long and must have a\n     correct IGMP checksum.\n   -\
    \ \"v1 report received\" occurs when the router receives a Version 1\n     Membership\
    \ report for the group on the interface.  The same\n     validity requirements\
    \ apply.\n   - \"leave received\" occurs when the router receives an IGMP Group\n\
    \     Leave message for the group on the interface.  To be valid, the\n     Leave\
    \ message must be at least 8 octets long and must have a\n     correct IGMP checksum.\n\
    \   - \"timer expired\" occurs when the timer set for a group membership\n   \
    \  expires.\n   - \"retransmit timer expired\" occurs when the timer set to retransmit\n\
    \     a group-specific Membership Query expires.\n   - \"v1 host timer expired\"\
    \ occurs when the timer set to note the\n     presence of version 1 hosts as group\
    \ members expires.\n   There are six possible actions that may be taken in response\
    \ to the\n   above events:\n   - \"start timer\" for the group membership on the\
    \ interface - also\n     resets the timer to its initial value [Group Membership\
    \ Interval]\n     if the timer is currently running.\n   - \"start timer*\" for\
    \ the group membership on the interface - this\n     alternate action sets the\
    \ timer to [Last Member Query Interval] *\n     [Last Member Query Count] if this\
    \ router is a Querier, or the [Max\n     Response Time] in the packet * [Last\
    \ Member Query Count] if this\n     router is a non-Querier.\n   - \"start retransmit\
    \ timer\" for the group membership on the interface\n     [Last Member Query Interval].\n\
    \   - \"start v1 host timer\" for the group membership on the interface,\n   \
    \  also resets the timer to its initial value [Group Membership\n     Interval]\
    \ if the timer is currently running.\n   - \"send group-specific query\" for the\
    \ group on the attached network.\n     The Group-Specific Query is sent to the\
    \ group being queried, and\n     has a Max Response Time of [Last Member Query\
    \ Interval].\n   - \"notify routing +\" notify the routing protocol that there\
    \ are\n     members of this group on this connected network.\n   - \"notify routing\
    \ -\" notify the routing protocol that there are no\n     longer any members of\
    \ this group on this connected network.\n     The state diagram for a router in\
    \ Querier state follows:\n                              ________________\n ----------------------------|\
    \                |<-----------------------\n"
- title: '|                            |                |timer expired           |'
  contents:
  - '|                            |                |timer expired           |

    '
- title: '|               timer expired|                |(notify routing -,      |'
  contents:
  - '|               timer expired|                |(notify routing -,      |

    '
- title: '|          (notify routing -)|   No Members   |clear rxmt tmr)         |'
  contents:
  - '|          (notify routing -)|   No Members   |clear rxmt tmr)         |

    '
- title: '|                    ------->|    Present     |<-------                |'
  contents:
  - '|                    ------->|    Present     |<-------                |

    '
- title: '|                   |        |                |       |                |'
  contents:
  - '|                   |        |                |       |                |

    '
- title: '|v1 report rec''d    |        |                |       |  ------------  |'
  contents:
  - '|v1 report rec''d    |        |                |       |  ------------  |

    '
- title: '|(notify routing +, |        |________________|       | | rexmt timer| |'
  contents:
  - '|(notify routing +, |        |________________|       | | rexmt timer| |

    '
- title: '| start timer,      |                    |            | |  expired   | |'
  contents:
  - '| start timer,      |                    |            | |  expired   | |

    '
- title: '| start v1 host     |  v2 report received|            | | (send g-s  | |'
  contents:
  - '| start v1 host     |  v2 report received|            | | (send g-s  | |

    '
- title: '|  timer)           |  (notify routing +,|            | |  query,    | |'
  contents:
  - '|  timer)           |  (notify routing +,|            | |  query,    | |

    '
- title: '|                   |        start timer)|            | |  st rxmt   | |'
  contents:
  - '|                   |        start timer)|            | |  st rxmt   | |

    '
- title: '|         __________|______              |       _____|_|______  tmr)| |'
  contents:
  - '|         __________|______              |       _____|_|______  tmr)| |

    '
- title: '|        |                 |<------------       |              |     | |'
  contents:
  - '|        |                 |<------------       |              |     | |

    '
- title: '|        |                 |                    |              |<----- |'
  contents:
  - '|        |                 |                    |              |<----- |

    '
- title: '|        |                 | v2 report received |              |       |'
  contents:
  - '|        |                 | v2 report received |              |       |

    '
- title: '|        |                 | (start timer)      |              |       |'
  contents:
  - '|        |                 | (start timer)      |              |       |

    '
- title: '|        | Members Present |<-------------------|    Checking  |       |'
  contents:
  - '|        | Members Present |<-------------------|    Checking  |       |

    '
- title: '|  ----->|                 | leave received     |   Membership |       |'
  contents:
  - '|  ----->|                 | leave received     |   Membership |       |

    '
- title: '| |      |                 | (start timer*,     |              |       |'
  contents:
  - '| |      |                 | (start timer*,     |              |       |

    '
- title: '| |      |                 |  start rexmt timer,|              |       |'
  contents:
  - '| |      |                 |  start rexmt timer,|              |       |

    '
- title: '| |      |                 |  send g-s query)   |              |       |'
  contents:
  - '| |      |                 |  send g-s query)   |              |       |

    '
- title: '| |  --->|                 |------------------->|              |       |'
  contents:
  - '| |  --->|                 |------------------->|              |       |

    '
- title: '| | |    |_________________|                    |______________|       |'
  contents:
  - '| | |    |_________________|                    |______________|       |

    '
- title: '| | |v2 report rec''d |  |                          |                   |'
  contents:
  - '| | |v2 report rec''d |  |                          |                   |

    '
- title: '| | |(start timer)   |  |v1 report rec''d           |v1 report rec''d    |'
  contents:
  - '| | |(start timer)   |  |v1 report rec''d           |v1 report rec''d    |

    '
- title: '| |  ----------------   |(start timer,             |(start timer,      |'
  contents:
  - '| |  ----------------   |(start timer,             |(start timer,      |

    '
- title: '| |v1 host              | start v1 host timer)     | start v1 host     |'
  contents:
  - '| |v1 host              | start v1 host timer)     | start v1 host     |

    '
- title: '| |tmr    ______________V__                        | timer)            |'
  contents:
  - '| |tmr    ______________V__                        | timer)            |

    '
- title: '| |exp''d |                 |<----------------------                    |'
  contents:
  - '| |exp''d |                 |<----------------------                    |

    '
- title: '|  ------|                 |                                           |'
  contents:
  - '|  ------|                 |                                           |

    '
- title: '|        |    Version 1    |timer expired                              |'
  contents:
  - '|        |    Version 1    |timer expired                              |

    '
- title: '|        | Members Present |(notify routing -)                         |'
  contents:
  - "|        | Members Present |(notify routing -)                         |\n ------->|\
    \                 |-------------------------------------------\n         |   \
    \              |<--------------------\n ------->|_________________| v1 report\
    \ rec'd     |\n"
- title: '| v2 report rec''d |   |   (start timer,          |'
  contents:
  - '| v2 report rec''d |   |   (start timer,          |

    '
- title: '| (start timer)   |   |    start v1 host timer)  |'
  contents:
  - "| (start timer)   |   |    start v1 host timer)  |\n -----------------     --------------------------\n\
    \   The state diagram for a router in  Non-Querier  state  is  similar,\n   but\
    \ non-Queriers do not send any messages and are only driven by\n   message reception.Note\
    \ that non-Queriers do not care whether a\n   Membership Report message is Version\
    \ 1 or Version 2.\n                              ________________\n          \
    \                   |                |\n                             |       \
    \         |\n                timer expired|                |timer expired\n  \
    \         (notify routing -)|   No Members   |(notify routing -)\n           \
    \        --------->|    Present     |<---------\n                  |         \
    \ |                |          |\n                  |          |              \
    \  |          |\n                  |          |                |          |\n\
    \                  |          |________________|          |\n                \
    \  |                   |                  |\n                  |             \
    \      |report received   |\n                  |                   |(notify routing\
    \ +,|\n                  |                   | start timer)     |\n          ________|________\
    \           |          ________|________\n         |                 |<---------\
    \          |                 |\n         |                 |  report received\
    \   |                 |\n         |                 |  (start timer)     |   \
    \              |\n         | Members Present |<-------------------|     Checking\
    \    |\n         |                 | g-s query rec'd    |    Membership   |\n\
    \         |                 | (start timer*)     |                 |\n    ---->|\
    \                 |------------------->|                 |\n   |     |_________________|\
    \                    |_________________|\n   | report received |\n   | (start\
    \ timer)   |\n    -----------------\n"
- title: 8.  List of timers and default values
  contents:
  - "8.  List of timers and default values\n   Most of these timers are  configurable.\
    \   If  non-default  settings\n   are used,  they MUST be consistent among all\
    \ routers on a single\n   link.  Note that parentheses are used to  group  expressions\
    \  to\n   make  the  algebra clear.\n"
- title: 8.1.  Robustness Variable
  contents:
  - "8.1.  Robustness Variable\n   The Robustness Variable allows tuning for the expected\
    \ packet loss on\n   a subnet.  If a subnet is expected to be lossy, the Robustness\n\
    \   Variable may be increased.  IGMP is robust to (Robustness Variable-1)\n  \
    \ packet losses.  The Robustness Variable MUST NOT be zero, and SHOULD\n   NOT\
    \ be one.  Default: 2\n"
- title: 8.2.  Query Interval
  contents:
  - "8.2.  Query Interval\n   The Query Interval is the interval between General Queries\
    \ sent  by\n   the Querier.  Default: 125 seconds.\n   By varying the [Query Interval],\
    \ an administrator may tune the number\n   of IGMP messages on the subnet; larger\
    \ values cause IGMP Queries to\n   be sent less often.\n"
- title: 8.3.  Query Response Interval
  contents:
  - "8.3.  Query Response Interval\n   The Max Response Time inserted into the periodic\
    \ General Queries.\n   Default: 100 (10 seconds)\n   By varying the [Query Response\
    \ Interval], an administrator may tune\n   the burstiness of IGMP messages on\
    \ the subnet; larger values make the\n   traffic less bursty, as host responses\
    \ are spread out over a larger\n   interval.  The number of seconds represented\
    \ by the [Query Response\n   Interval] must be less than the [Query Interval].\n"
- title: 8.4.  Group Membership Interval
  contents:
  - "8.4.  Group Membership Interval\n   The Group Membership Interval is the amount\
    \ of time that must pass\n   before a multicast router decides there are no more\
    \ members of a\n   group on a network.  This value MUST be ((the Robustness Variable)\n\
    \   times (the Query Interval)) plus (one Query Response Interval).\n"
- title: 8.5.  Other Querier Present Interval
  contents:
  - "8.5.  Other Querier Present Interval\n   The Other Querier Present Interval is\
    \ the length of time that must\n   pass before a multicast router decides that\
    \ there is no longer\n   another multicast router which should be the querier.\
    \  This value\n   MUST be ((the Robustness Variable) times (the Query Interval))\
    \ plus\n   (one half of one Query Response Interval).\n"
- title: 8.6.  Startup Query Interval
  contents:
  - "8.6.  Startup Query Interval\n   The Startup Query Interval is the interval between\
    \ General Queries\n   sent by a Querier on startup.  Default: 1/4 the Query Interval.\n"
- title: 8.7.  Startup Query Count
  contents:
  - "8.7.  Startup Query Count\n   The Startup Query Count is the number of Queries\
    \ sent out on startup,\n   separated by the Startup Query Interval.  Default:\
    \ the Robustness\n   Variable.\n"
- title: 8.8.  Last Member Query Interval
  contents:
  - "8.8.  Last Member Query Interval\n   The Last Member Query Interval is the Max\
    \ Response Time inserted into\n   Group-Specific Queries sent in response to Leave\
    \ Group messages, and\n   is also the amount of time between Group-Specific Query\
    \ messages.\n   Default: 10 (1 second)\n   This value may be tuned to modify the\
    \ \"leave latency\" of the network.\n   A reduced value results in reduced time\
    \ to detect the loss of the\n   last member of a group.\n"
- title: 8.9.  Last Member Query Count
  contents:
  - "8.9.  Last Member Query Count\n   The Last Member Query Count is the number of\
    \ Group-Specific Queries\n   sent before the router assumes there are no local\
    \ members.  Default:\n   the Robustness Variable.\n"
- title: 8.10.  Unsolicited Report Interval
  contents:
  - "8.10.  Unsolicited Report Interval\n   The Unsolicited Report Interval is the\
    \ time between repetitions of a\n   host's initial report of membership in a group.\
    \  Default: 10 seconds.\n"
- title: 8.11.  Version 1 Router Present Timeout
  contents:
  - "8.11.  Version 1 Router Present Timeout\n   The Version 1 Router Present Timeout\
    \ is how long a host must wait\n   after hearing a Version 1 Query before it may\
    \ send any IGMPv2\n   messages.  Value: 400 seconds.\n"
- title: 9.  Message destinations
  contents:
  - "9.  Message destinations\n   This information is provided elsewhere in the document,\
    \ but is\n   summarized here for convenience.\n   Message Type               \
    \   Destination Group\n   ------------                  -----------------\n  \
    \ General Query                 ALL-SYSTEMS (224.0.0.1)\n   Group-Specific Query\
    \          The group being queried\n   Membership Report             The group\
    \ being reported\n   Leave Message                 ALL-ROUTERS (224.0.0.2)\n \
    \    Note: in older (i.e., non-standard and now obsolete) versions of\n     IGMPv2,\
    \ hosts send Leave Messages to the group being left.  A\n     router SHOULD accept\
    \ Leave Messages addressed to the group being\n     left in the interests of backwards\
    \ compatibility with such hosts.\n     In all cases, however, hosts MUST send\
    \ to the ALL-ROUTERS address\n     to be compliant with this specification.\n"
- title: 10.  Security Considerations
  contents:
  - "10.  Security Considerations\n   We consider the ramifications of a forged message\
    \ of each type.\n   Query Message:\n     A forged Query message from a machine\
    \ with a lower IP address than\n     the current Querier will cause Querier duties\
    \ to be assigned to the\n     forger.  If the forger then sends no more Query\
    \ messages, other\n     routers' Other Querier Present timer will time out and\
    \ one will\n     resume the role of Querier.  During this time, if the forger\n\
    \     ignores Leave Messages, traffic might flow to groups with no\n     members\
    \ for up to [Group Membership Interval].\n     A forged Query message sent to\
    \ a group with members will cause the\n     hosts which are members of the group\
    \ to report their memberships.\n     This causes a small amount of extra traffic\
    \ on the LAN, but causes\n     no protocol problems.\n   Report messages:\n  \
    \   A forged Report message may cause multicast routers to think there\n     are\
    \ members of a group on a subnet when there are not.  Forged\n     Report messages\
    \ from the local subnet are meaningless, since\n     joining a group on a host\
    \ is generally an unprivileged operation,\n     so a local user may trivially\
    \ gain the same result without forging\n     any messages.  Forged Report messages\
    \ from external sources are\n     more troublesome; there are two defenses against\
    \ externally forged\n     Reports:\n     - Ignore the Report if you cannot identify\
    \ the source\n       address of the packet as belonging to a subnet assigned to\
    \ the\n       interface on which the packet was received.  This solution means\n\
    \       that Reports sent by mobile hosts without addresses on the local\n   \
    \    subnet will be ignored.\n     - Ignore Report messages without Router Alert\
    \ options [RFC 2113],\n       and require that routers not forward Report messages.\
    \  (The\n       requirement is not a requirement of generalized filtering in the\n\
    \       forwarding path, since the packets already have Router Alert\n       options\
    \ in them).  This solution breaks backwards compatibility\n       with implementations\
    \ of earlier versions of this specification\n       which did not require Router\
    \ Alert.\n     A forged Version 1 Report Message may put a router into \"version\
    \ 1\n     members present\" state for a particular group, meaning that the\n \
    \    router will ignore Leave messages.  This can cause traffic to flow\n    \
    \ to groups with no members for up to [Group Membership Interval].\n     There\
    \ are two defenses against forged v1 Reports:\n     - To defend against externally\
    \ sourced v1 Reports, ignore the\n       Report if you cannot identify the source\
    \ address of the packet as\n       belonging to a subnet assigned to the interface\
    \ on which the\n       packet was received.  This solution means that v1 Reports\
    \ sent by\n       mobile hosts without addresses on the local subnet will be\n\
    \       ignored.\n     - Provide routers with a configuration switch to ignore\
    \ Version 1\n       messages completely.  This breaks automatic compatibility\
    \ with\n       Version 1 hosts, so should only be used in situations where \"\
    fast\n       leave\" is critical.  This solution protects against forged\n   \
    \    version 1 reports from the local subnet as well.\n   Leave message:\n   \
    \  A forged Leave message will cause the Querier to send out Group-\n     Specific\
    \ Queries for the group in question.  This causes extra\n     processing on each\
    \ router and on each member of the group, but can\n     not cause loss of desired\
    \ traffic.  There are two defenses against\n     externally forged Leave messages:\n\
    \     - Ignore the Leave message if you cannot identify the source\n       address\
    \ of the packet as belonging to a subnet assigned to the\n       interface on\
    \ which the packet was received.  This solution means\n       that Leave messages\
    \ sent by mobile hosts without addresses on the\n       local subnet will be ignored.\n\
    \     - Ignore Leave messages without Router Alert options [RFC 2113],\n     \
    \  and require that routers not forward Leave messages.  (The\n       requirement\
    \ is not a requirement of generalized filtering in the\n       forwarding path,\
    \ since the packets already have Router Alert\n       options in them).  This\
    \ solution breaks backwards compatibility\n       with implementations of earlier\
    \ versions of this specification\n       which did not require Router Alert.\n"
- title: 11.  Acknowledgments
  contents:
  - "11.  Acknowledgments\n   IGMPv2 was designed by Rosen Sharma and Steve Deering.\n"
- title: 12.  References
  contents:
  - "12.  References\n   RFC 2119       Bradner, S., \"Key words for use in RFCs to\
    \ Indicate\n                  Requirement Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   RFC 2113       Katz, D., \"IP Router Alert Option,\" RFC 2113,\n         \
    \         February 1997.\n   RFC 1112       Deering, S., \"Host Extensions for\
    \ IP Multicasting\",\n                  STD 5, RFC 1112, August 1989.\n"
- title: 13.  Appendix I - Changes from IGMPv1
  contents:
  - "13.  Appendix I - Changes from IGMPv1\n   The IGMPv1 \"Version\" and \"Type\"\
    \ fields are combined into a single\n   \"Type\" field.\n   A new IGMP Type is\
    \ assigned to Version 2 Membership Report messages,\n   so a router may tell the\
    \ difference between an IGMPv1 and IGMPv2 host\n   report.\n   A new IGMP Type\
    \ is created for the IGMPv2 Leave Group message.\n   The Membership Query message\
    \ is changed so that a previously unused\n   field contains a new value, the Max\
    \ Response Time.\n   The IGMPv2 spec now specifies a querier election mechanism.\
    \  In\n   IGMPv1, the querier election was left up to the multicast routing\n\
    \   protocol, and different protocols used different mechanisms.  This\n   could\
    \ result in more than one querier per network, so the election\n   mechanism has\
    \ been standardized in IGMPv2.  However, this means that\n   care must be taken\
    \ when an IGMPv2 router is trying to coexist with an\n   IGMPv1 router that uses\
    \ a different querier election mechanism.  In\n   particular, it means that an\
    \ IGMPv2 router must be able to act as an\n   IGMPv1 router on a particular network\
    \ if configured to do so.  The\n   actions required include:\n   - Set the Max\
    \ Response Time field to 0 in all queries.\n   - Ignore Leave Group messages.\n\
    \   The IGMPv2 spec relaxes the requirements on validity-checking for\n   Membership\
    \ Queries and Membership Reports.  When upgrading an\n   implementation, be sure\
    \ to remove any checks that do not belong.\n   The IGMPv2 spec requires the presence\
    \ of the IP Router Alert option\n   [RFC 2113] in all packets described in this\
    \ memo.\n"
- title: 14.  Author's Address
  contents:
  - "14.  Author's Address\n   William C. Fenner\n   Xerox PARC\n   3333 Coyote Hill\
    \ Road\n   Palo Alto, CA 94304\n   Phone: +1 650 812 4816\n   EMail: fenner@parc.xerox.com\n"
- title: 15.  Full Copyright Statement
  contents:
  - "15.  Full Copyright Statement\n   Copyright (C) The Internet Society (1997).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
