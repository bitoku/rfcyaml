- title: __initial_text__
  contents:
  - "                          Corrections to RFC 560\n          Remote Controlled\
    \ Transmission & Echoing TELNET Option\n   [This RFC contains corrections to RFC\
    \ 560 (NIC -- 18492,) which\n   described the Remote Controlled Transmission and\
    \ Echoing TELNET\n   Option.  A completely updated version of 18492 has been journalized\n\
    \   and will be included in the Protocols Notebook.  These new\n   specifications\
    \ for RCTE are in NIC document (19859,).]          2\n   Section 1 of the RCTE\
    \ Option specification (18492,2a:gy) was supposed\n   to include the name and\
    \ code for the option.  The code was\n   accidentally left out.  That statement\
    \ should read:\n      RCTE  7                                                \
    \      3a\n   Section 2 should include the End of Subnegotiation Parameter, at\
    \ the\n   end of the subnegotiation parameter specification (18492,2b5:gy).\n\
    \   All examples in the option specifications, showing RCTE SB commands,\n   should\
    \ also show the IAC SE parameter. (The revised RCTE\n   specifications have been\
    \ so changed.) Section 2 should be changed so\n   that it reads:             \
    \                                     4\n      IAC SB RCTE <cmd> [BC1 BC2] [TC1\
    \ TC2] IAC SE                 4a\n   The sample scenario, in Section 5.D (18492,2e4:gy),\
    \ should be\n   modified to reflect the kind of asynchrony of events that can\
    \ occur\n   with the RCTE protocol.  The updated RCTE specifications (in --\n\
    \   19859,1e4:gy) now reflects this.                                5\n   In RFC\
    \ 563 (18755,) John Davidson criticizes RCTE's apparent failure\n   to allow Net\
    \ I/O and server computation to overlap.             6\n   I agree with John's\
    \ criticisms and feel that the following should fix\n   the problem:         \
    \                                           7\n   1. Change 5.A (18492,2e1)  \
    \                                     7a\n      from:                        \
    \                                7a1\n         Overview of Interaction       \
    \                            7a1a\n      to:                                 \
    \                         7a2\n         Overview of User Terminal Printing Action\
    \ & Control       7a2a\n   2. Change 5.B.5.a (18492,2e2e1)                   \
    \              7b\n      from:                                               \
    \         7b1\n         A Transmission character is one which REQUIRES the User\
    \ Host to\n         transmit all text accumulated up to and including its\n  \
    \       occurrence. (For Net efficiency, User hosts are DISCOURAGED\n        \
    \ from sending before the occurrence of a Transmission\n         character). \
    \                                              7b1a\n      to:               \
    \                                           7b2\n         A Transmission character\
    \ is one which RECOMMENDS that the Using\n         Host transmit all text accumulated\
    \ up to and including its\n         occurrence. (For Net efficiency, Using hosts\
    \ are DISCOURAGED\n         from sending before the occurrence of a Transmission\
    \ character,\n         as defined at the moment the character is typed).\n   \
    \      7b2a\n   3. Change 5.B.5.b (18492,2e2e2)                              \
    \   7c\n      from:                                                        7c1\n\
    \         A Break character has the effect of a Transmission character,\n    \
    \     but also causes the Using host to stop its print/discard action\n      \
    \   upon the User's input text, until directed to do otherwise by\n         another\
    \ IAC SB RCTE <cmd> IAC SE command from the Serving host.\n         Break characters\
    \ therefore define printing units.  \"Break\n         character\" as used in this\
    \ document does NOT mean Telnet Break\n         character.            7c1a\n \
    \     to:                                                          7c2\n     \
    \    A Break character REQUIRES that the Using host transmit all\n         text\
    \ accumulated up to and including its occurrence and also\n         causes the\
    \ Using host to stop its print/discard action upon the\n         User's input\
    \ text, until directed to do otherwise by another\n         IAC SB RCTE <cmd>\
    \ IAC SE command from the Serving host.  Break\n         characters therefore\
    \ define printing units.  \"Break character\"\n         as used in this document\
    \ does NOT mean Telnet Break character.\n         7c2a\n   4. Change 5.B.6 (18492,2e2f)\
    \                                    7d\n      from:                         \
    \                               7d1\n         Input from the terminal is (hopefully)\
    \ buffered up to the\n         occurrence of a Transmission or Break character;\
    \ and the input\n         text is echoed or not echoed, up to the occurrence of\
    \ a Break\n         Character.  The most recent RCTE command determines the echo,\n\
    \         Transmission and Break actions.                 7d1a\n      to:    \
    \                                                      7d2\n         Input from\
    \ the terminal is (hopefully) buffered into units\n         ending with a Transmission\
    \ or Break character; and echoing of\n         input text is suspended after the\
    \ occurrence of a Break\n         Character and until receipt of a Break Reset\
    \ command from the\n         Serving host.  The most recent RCTE Break reset command\n\
    \         determines the Break actions.                             7d2a\n   5.\
    \ Change 5.C.4 (18492,2e3d)                                    7e\n      FROM:\
    \                                                        7e1\n         A severe\
    \ (User) site-dependent problem will be buffering type-\n         ahead input\
    \ from the terminal.  It is possible, especially in\n         the case of TIPS,\
    \ that the input buffer will overflow often.\n         If the receiving (serving)\
    \ host will permit, the accumulated\n         text should be transmitted at this\
    \ point.  If the text cannot\n         be transmitted and further typing by the\
    \ user will result in\n         lost text, the user should be notified.    7e1a\n\
    \      to:                                                          7e2\n    \
    \     Buffering Problems and Transmission vs. Printing Constraints:\n        \
    \ 7e2a\n            There are NO mandatory transmission constraints.  The Using\n\
    \            host is allowed to send a character a time, though this\n       \
    \     would be a waste of RCTE.  The Transmission Classes commands\n         \
    \   are GUIDELINES, so deviating from them, as when the User's\n            buffer\
    \ gets full, is allowed.               7e2a1\n            Additionally, the Using\
    \ host may send a Break Class\n            character, without knowing that it\
    \ is one (as with type-\n            ahead).                                 \
    \          7e2a2\n            The problem with buffering occurs when printing\
    \ on the\n            user's terminal must be suspended, after the user has typed\n\
    \            a currently valid Break Character and until a Break Reset\n     \
    \       command is received from the serving host.  During this\n            time,\
    \ the user may be typing merrily along.  The text being\n            typed may\
    \ be SENT, but may not yet be PRINTED.   7e2a3\n            The more standard\
    \ problem of filling the transmission\n            buffer, while awaiting an ALLOC\
    \ from the Serving host, may\n            also occur, but this problem is well\
    \ known to implementors\n            and in no way special to RCTE.          \
    \  7e2a4\n            In any case, when the buffer does fill and further text\n\
    \            typed by the user will be lost, the user should be notified.\n  \
    \          7e2a5\n   6. And add 5.C.5, 5.C.6, 5.C.7, 5.C.8, and 5.C.9 as follows:\
    \    7f\n      (5) The Serving and Using hosts must carefully synchronize Break\n\
    \          Class Reset commands with the transmission of Break\n          characters.\
    \  Except at the beginning of an interaction, the\n          Serving host MAY\
    \ ONLY send a Break Reset command in response\n          to the User host's having\
    \ sent a Break character as defined at\n          that time.  This should establish\
    \ a one-to-one correspondence\n          between them.  (A <cmd> value of zero,\
    \ in this context, is\n          interpreted as a Break Classes reset to the same\
    \ class(es) as\n          before.) The Reset command may be preceded by terminal\
    \ output.\n          7f1\n      (6) Text should be buffered by the User host until\
    \ the user types\n          a character which belongs to the transmission class\
    \ in force\n          at THE MOMENT THE CHARACTER IS TYPED.            7f2\n \
    \     (7) Transmission Class Reset commands may be sent by the Serving\n     \
    \     host at ANY TIME.  If they are frequently sent separate from\n         \
    \ Break Class Reset commands, it will probably be better to exit\n          from\
    \ RCTE and enter regular character at a time transmission.\n          7f3\n  \
    \    8) It is not immediately clear what the Using host should do with\n     \
    \     currently buffered text, when a Transmission Classes Reset\n          command\
    \ is received.  The buffering is according to the\n          previous Transmission\
    \ Classes scheme.                 7f4\n          The Using host clearly should\
    \ NOT simply wait until a\n          Transmission character (according to the\
    \ new scheme) is typed.\n          7f4a\n          Either the buffered text should\
    \ be rescanned, under the new\n          scheme;                             \
    \                      7f4b\n          Or the buffered text should simply be sent\
    \ as a group.  This\n          is the simpler approach, and probably quite adequate.\
    \     7f4c\n      9) It is possible to define NO BREAK CHARACTERS except TELNET\n\
    \          commands (IAC ...).  This might actually be useful, as in the\n   \
    \       case of transmitting on carriage-return, with the Using host\n       \
    \   echoing (a controlled half-duplex).                  7f5\n          Having\
    \ the using host send a Telnet Command will allow the\n          serving host\
    \ to know when he may reset the Break classes, but\n          the mechanism is\
    \ awkward and probably should be avoided.\n          b 7e2\n"
