- title: __initial_text__
  contents:
  - "                        A Proferred Official ICP\nBy Initial Connection Protocol\
    \ (ICP), I mean a third level protocol\nwhich is initiated by a user process at\
    \ one site in order to contact a\nserver process at another site.  Typically,\
    \ the user process will be a\nTelnet and the server process will be a logger,\
    \ but there may be other\ncases.\nIn this RFC, I wish to describe a family of\
    \ ICPs suitable for\nestablishing one pair of connections (one in each direction)\
    \ between any\nuser process and any server process, and to propose further a particular\n\
    subset of this family as the standard ICP for connecting user processes\nto loggers\
    \ on systems which accept teletype-like devices.\nNotation\nWe have no standard\
    \ notation for describing system calls which initiate\nand close connections or\
    \ cause data to be sent, so I will use the\nfollowing ad hoc notation.\nInit (local\
    \ = l, foreign = f, size = s)\n   causes the local Host to attempt to establish\
    \ a connection between\n   socket l at the local Host and socket f, with a byte\
    \ size of s for\n   the connection.\n   l is a 32 bit local socket number,\n \
    \  f is a 40 bit foreign socket number, the high-order eight bits\n   of which\
    \ specify the foreign Host, and\n   s is an eight bit non-zero byte size.\n  \
    \ The sum of l and f must be odd.\nListen (local = l, size = s)\n   causes the\
    \ local Host to wait for a request for connection to local\n   socket l with byte\
    \ size s.  The process will be woken when a\n   connection is established.  The\
    \ parameters l and s are the same as\n   for Init.\n   The data named by d is\
    \ sent over the connection attached to local\n   socket l. l must be a send socket\
    \ attached to a connection.  d is the\n   name of a data area.\nReceive (socket\
    \ = l, data = d)\n   The receive side counterpart to send.\nClose (socket = l)\n\
    \   Any connection currently attached to a local socket l is closed.\nA Family\
    \ of ICPs\nBriefly, a server process at a site attaches a well-advertised send\n\
    socket L and listens.  A user process initiates connection to L from its\nreceive\
    \ socket U.  The byte size for this connection is 32.  The server\nprocess then\
    \ transmits a 32-bit even number S and closes the connection.\nThe 32-bit number\
    \ S and its successor, S+1, are the socket number the\nserver will use.  The final\
    \ steps are for sockets S and S+1 at the\nserver site to be connected to sockets\
    \ U+1 and U respectively at the\nuser site.\nUsing the notation, the server executes\
    \ the following sequence:\n   Listen (socket = L, size = 32)\n   [Wait until a\
    \ user connects]\n   Send (socket = L, data = S)\n   Close (socket = L)\n   Init\
    \ (local = S, foreign = U+1, size = Bu)\n   Init (local = S+1, foreign = U, size\
    \ = Bs)\nThe user executes the following:\n   Init (local = U, foreign = L, size\
    \ = 32)\n   Receive (socket = U, data = S)\n   Close (socket = U)\n   Init (local\
    \ = U+1, foreign = S, size = Bu)\n   Init (local = U, foreign = S+1, size = Bs)\n\
    Note that L is a send socket (odd), while S and U are receive sockets\n(even).\
    \  Where L, S or U are used as values of local, they are 32-bit\nnumbers; where\
    \ they are values of foreign, they are 40-bit numbers.  The\nparameters Bs and\
    \ Bu are the byte sizes to be sent by the server and\nuser, respectively.\n  \
    \ (a) L is a send socket,\n   (b) Bs and Bu are legal byte sizes, and\n   (c)\
    \ for each L there is only on pair of associated byte sizes.\nThis last restriction\
    \ prevents two distinct services from being\navailable through the same socket\
    \ and distinguished only by the byte\nsizes.\nTelnet ICP\nFor connecting teletype-like\
    \ users, i.e. interactive and ASCII, to Hosts\nserving such users, I propose an\
    \ ICP of the form described above and\ncharacterized by L = 1, Bs = Bu = 8. [There\
    \ has been some confusion\nabout socket numbers.  Here I specifically mean L =\
    \ X00000001]\nFormalities\nI propose that the Telnet ICP be made official.  Comments\
    \ should be\npublished before the May NWG meeting, the subject will be discussed\n\
    there, and we will decide there to accept or reject this protocol.\n       [ This\
    \ RFC was put into machine readable form for entry ]\n          [ into the online\
    \ RFC archives by Jeff Sorte 5/97 ]\n"
