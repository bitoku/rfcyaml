- title: __initial_text__
  contents:
  - '      Directory Assistance Problem and High-Level Design Proposal

    '
- title: Abstract
  contents:
  - "Abstract\n   Edge TRILL (Transparent Interconnection of Lots of Links) switches\n\
    \   currently learn the mapping between MAC (Media Access Control)\n   addresses\
    \ and their egress TRILL switch by observing the data packets\n   they ingress\
    \ or egress or by the TRILL ESADI (End-Station Address\n   Distribution Information)\
    \ protocol.  When an ingress TRILL switch\n   receives a data frame for a destination\
    \ address (MAC&Label) that the\n   switch does not know, the data frame is flooded\
    \ within the frame's\n   Data Label across the TRILL campus.\n   This document\
    \ describes the framework for using directory services to\n   assist edge TRILL\
    \ switches in reducing multi-destination frames,\n   particularly unknown unicast\
    \ frames flooding, and ARP/ND (Address\n   Resolution Protocol / Neighbor Discovery),\
    \ thus improving TRILL\n   network scalability and security.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7067.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2013 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Terminology .....................................................4\n  \
    \ 3. Impact of Massive Number of End Stations ........................5\n    \
    \  3.1. Issues of Flooding-Based Learning in Data Centers ..........5\n      3.2.\
    \ Two Examples ...............................................6\n   4. Benefits\
    \ of Directory-Assisted TRILL Edge .......................7\n   5. Generic Operation\
    \ of Directory Assistance .......................8\n      5.1. Information in\
    \ Directory for Edge RBridges .................8\n      5.2. Push Model and Requirements\
    \ ................................9\n      5.3. Pull Model and Requirements ...............................11\n\
    \   6. Recommendation .................................................12\n  \
    \ 7. Security Considerations ........................................12\n   8.\
    \ Acknowledgements ...............................................13\n   9. Informative\
    \ References .........................................14\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Edge TRILL (Transparent Interconnection of Lots of Links)\
    \ switches\n   (devices implementing [RFC6325], also known as RBridges) currently\n\
    \   learn the mapping between destination MAC addresses and their egress\n   TRILL\
    \ switch by observing data packets or by the ESADI (End-Station\n   Address Distribution\
    \ Information) protocol.  When an ingress RBridge\n   (Routing Bridge) receives\
    \ a data frame for a destination address\n   (MAC&Label) that RBridge does not\
    \ know, the data frame is flooded\n   within that Data Label across the TRILL\
    \ campus. (Data Labels are\n   VLANs or FGLs (Fine-Grained Labels [FGL]).\n  \
    \ This document describes a framework for using directory services in\n   environments\
    \ where such services are available, such as typical data\n   centers, to assist\
    \ edge TRILL switches.  This assistance can reduce\n   multi-destination frames,\
    \ particularly ARP [RFC826], ND [RFC4861],\n   and unknown unicast, thus improving\
    \ TRILL network scalability.  In\n   addition, the information provided by a directory\
    \ can be more secure\n   than that learned from the data plane (see Section 7).\n\
    \   Data centers, especially Internet and/or multi-tenant data centers,\n   tend\
    \ to have a large number of end stations with a wide variety of\n   applications.\
    \  Their networks differ from enterprise campus networks\n   in several ways that\
    \ make them attractive for the use of directory\n   assistance, in particular:\n\
    \   1. Data center topology is often based on racks and rows.\n      Furthermore,\
    \ a Server/VM (virtual machine) Management System\n      orchestrates the assignment\
    \ of guest operating systems to servers,\n      racks, and rows; it is not done\
    \ at random.  So, the information\n      necessary for a directory is normally\
    \ available from that\n      Management System.\n   2. Rapid workload shifting\
    \ in data centers can accelerate the\n      frequency of the physical servers\
    \ being reloaded with different\n      applications.  Sometimes, applications\
    \ loaded into one physical\n      server at different times can belong to different\
    \ subnets.  When a\n      VM is moved to a new location or when a server is loaded\
    \ with a\n      new application with different IP/MAC addresses, it is more likely\n\
    \      that the destination address of data packets sent out from those\n    \
    \  VMs are unknown to their attached edge RBridges.\n   3. With server virtualization,\
    \ there is an increasing trend to\n      dynamically create or delete VMs when\
    \ the demand for resources\n      changes, to move VMs from overloaded servers\
    \ to less loaded\n      servers, or to aggregate VMs onto fewer servers when demand\
    \ is\n      light.  This results in the more frequent occurrence of multiple\n\
    \      subnets on the same port at the same time and a higher change rate\n  \
    \    for VMs than for physical servers.\n   Both items 2 and 3 above can lead\
    \ to applications in one subnet being\n   placed in different locations (racks\
    \ or rows) or one rack having\n   applications belonging to different subnets.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The terms \"VLAN\" and \"Data Label\" are used interchangeably\
    \ with\n   \"Subnet\" in this document, because it is common to map one subnet\
    \ to\n   one VLAN or FGL.\n   Bridge:  Device compliant with IEEE Std 802.1Q-2011\
    \ [802.1Q].\n   Data Label:  VLAN or FGL\n   EoR:     End-of-Row switches in a\
    \ data center.  Also known as\n            aggregation switches.\n   End Station:\
    \  Guest OS running on a physical server or on a virtual\n            machine.\
    \  An end station in this document has at least one\n            IP address, at\
    \ least one MAC address, and is connected to a\n            network.\n   FGL:\
    \     Fine-Grained Label [FGL]\n   IS-IS:   Intermediate System to Intermediate\
    \ System routing protocol.\n            TRILL uses IS-IS [IS-IS] [RFC6326].\n\
    \   RBridge: \"Routing Bridge\", an alternate name for a TRILL switch.\n   ToR:\
    \     Top-of-Rack switches in a data center.  Also known as access\n         \
    \   switches in some data centers.\n   TRILL:   Transparent Interconnection of\
    \ Lots of Links [RFC6325]\n   TRILL Switch:  A device implementing the TRILL protocol\
    \ [RFC6325].\n   VM:      Virtual Machine\n"
- title: 3.  Impact of Massive Number of End Stations
  contents:
  - "3.  Impact of Massive Number of End Stations\n   This section discusses the impact\
    \ of a massive number of end stations\n   in a TRILL campus using Data Centers\
    \ as an example.\n"
- title: 3.1.  Issues of Flooding-Based Learning in Data Centers
  contents:
  - "3.1.  Issues of Flooding-Based Learning in Data Centers\n   It is common for\
    \ Data Center networks to have multiple tiers of\n   switches, for example, one\
    \ or two Access Switches for each server\n   rack (ToR), aggregation switches\
    \ for some rows (or EoR switches), and\n   some core switches to interconnect\
    \ the aggregation switches.  Many\n   aggregation switches deployed in data centers\
    \ have high port density.\n   It is not uncommon to see aggregation switches interconnecting\n\
    \   hundreds of ToR switches.\n                       +-------+         +------+\n\
    \                     +/------+ |       +/-----+ |\n                     | Aggr11|\
    \ + ----- |AggrN1| +    EoR switches\n                     +---+---+/        +------+/\n\
    \                      /     \\            /      \\\n                     / \
    \      \\          /        \\\n                  +---+    +---+      +---+  \
    \   +---+\n                  |T11|... |T1x|      |T21| ..  |T2y| ToR switches\n\
    \                  +---+    +---+      +---+     +---+\n                    |\
    \        |          |         |\n                  +-|-+    +-|-+      +-|-+ \
    \    +-|-+\n                  |   |... |   |      |   | ..  |   |\n          \
    \        +---+    +---+      +---+     +---+ Server racks\n                  |\
    \   |... |   |      |   | ..  |   |\n                  +---+    +---+      +---+\
    \     +---+\n                  |   |... |   |      |   | ..  |   |\n         \
    \         +---+    +---+      +---+     +---+\n               Figure 1: Typical\
    \ Data Center Network Design\n   The following problems could occur when TRILL\
    \ is deployed in a data\n   center with a large number of end stations and when\
    \ the end stations\n   in one subnet/Label are placed under multiple edge RBridges:\n\
    \      -  Unnecessary filling of slots in the MAC address learning table\n   \
    \      of edge RBridges, e.g., RBridge T11, due to T11 receiving\n         broadcast/multicast\
    \ traffic (e.g., ARP/ND, cluster multicast,\n         etc.) from end stations\
    \ under other edge RBridges that are not\n         actually communicating with\
    \ any end stations attached to T11.\n      -  Packets being flooded across a TRILL\
    \ campus when their\n         destination MAC addresses are not in the ingress\
    \ RBridge's MAC\n         address to the egress RBridge cache.\n"
- title: 3.2.  Two Examples
  contents:
  - "3.2.  Two Examples\n   Consider a data center with 1,600 server racks.  Each\
    \ server rack has\n   at least one ToR switch.  The ToR switches are further divided\
    \ into 8\n   groups, with each group being connected by a set of aggregation\n\
    \   switches.  There could be 4 to 8 aggregation switches in each set to\n   achieve\
    \ load sharing for traffic to/from server racks.  Let's\n   consider the following\
    \ two scenarios for the TRILL campus boundary if\n   TRILL is deployed in this\
    \ data center environment:\n      -  Scenario #1: TRILL campus boundary starts\
    \ at the ToR switches:\n         If each server rack has one ToR, there are 1,600\
    \ edge RBridges.\n         If each rack has two ToR switches, then there will\
    \ be 3,200\n         edge RBridges.\n         In this scenario, the TRILL campus\
    \ will have more than 1,600\n         (or 3,200) + 8*4 (or 8*8) nodes, which is\
    \ a large IS-IS area.\n         Even though a mesh IS-IS area can scale up to\
    \ thousands of\n         nodes, it is challenging for aggregation switches to\
    \ handle\n         IS-IS link state advertisement among hundreds of parallel\n\
    \         ports.\n         If each ToR has 40 downstream ports facing servers\
    \ and each\n         server has 10 VMs, there could be 40*10 = 400 end stations\n\
    \         attached.  If those end stations belong to 8 Labels, then the\n    \
    \     total number of MAC&Label entries learned by each edge RBridge\n       \
    \  in the worst case might be 400*8 = 3,200, which is not a large\n         number.\n\
    \      -  Scenario #2: TRILL campus boundary starts at the aggregation\n     \
    \    switches:\n         With the same assumptions as before, the number of nodes\
    \ in the\n         TRILL campus will be less than 100, and aggregation switches\n\
    \         don't have to handle IS-IS link state advertisements among\n       \
    \  hundreds of parallel ports.\n         However, the number of MAC&Label <->\
    \ Egress RBridge mapping\n         entries to be learned and managed by the RBridge\
    \ edge node can\n         be very large.  In the example above, each edge RBridge\
    \ has 200\n         edge ports facing the ToR switches.  If each ToR has 40\n\
    \         downstream ports facing servers and each server has 10 VMs,\n      \
    \   there could be 200*40*10 = 80,000 end stations attached.  If\n         all\
    \ those end stations belong to 1,600 Labels (50 per Data\n         Label) and\
    \ each Data Label has 200 end stations, then under the\n         worst-case scenario,\
    \ the total number of MAC&Label entries to\n         be learned by each edge RBridge\
    \ can be 1,600*200=320,000, which\n         is very large.\n"
- title: 4.  Benefits of Directory-Assisted TRILL Edge
  contents:
  - "4.  Benefits of Directory-Assisted TRILL Edge\n   In some environments, particularly\
    \ data centers, the assignment of\n   applications to servers, including rack\
    \ and row selection, is\n   orchestrated by Server (or VM) Management System(s).\
    \  That is, there\n   is a database or multiple databases that have the knowledge\
    \ of where\n   each application is placed.  If the application location information\n\
    \   can be fed to RBridge edge nodes through some form of directory\n   service,\
    \ then there is much less chance of RBridge edge nodes\n   receiving unknown MAC\
    \ destination addresses, therefore less chance of\n   flooding.\n   Avoiding unknown\
    \ unicast address flooding to the TRILL campus is\n   especially valuable in the\
    \ data center environment, because there is\n   a higher chance of an edge RBridge\
    \ receiving packets with an unknown\n   unicast destination address and broadcast/multicast\
    \ messages due to\n   VM migration and servers being loaded with different applications.\n\
    \   When a VM is moved to a new location or a server is loaded with a new\n  \
    \ application with a different IP/MAC addresses, it is more likely that\n   the\
    \ destination address of data packets sent out from those VMs is\n   unknown to\
    \ their attached edge RBridges.  In addition, gratuitous ARP\n   (IPv4 [RFC826])\
    \ or Unsolicited Neighbor Advertisement (IPv6\n   [RFC4861]) sent out from those\
    \ newly migrated or activated VMs have\n   to be flooded to other edge RBridges\
    \ that have VMs in the same\n   subnets.\n   The benefits of using directory assistance\
    \ include:\n      -  Avoids flooding an unknown unicast destination address across\n\
    \         the TRILL campus.  The directory-enforced MAC&Label <-> Egress\n   \
    \      RBridge mapping table can determine if a data packet needs to\n       \
    \  be forwarded across the TRILL campus.\n         When multiple RBridge edge\
    \ ports are connected to end stations\n         (servers/VMs), possibly via bridged\
    \ LANs, a directory-assisted\n         edge RBridge won't need to flood unknown\
    \ unicast destination\n         data frames to all ports of the edge RBridges\
    \ in the frame's\n         Data Label when it ingresses a frame.  It can depend\
    \ on the\n         directory to locate the destination.  When the directory\n\
    \         doesn't have the needed information, the frames can be dropped\n   \
    \      or flooded depending on the policy configured.\n      -  Reduces flooding\
    \ of decapsulated Ethernet frames with an\n         unknown MAC destination address\
    \ to a bridged LAN connected to\n         RBridge edge ports.\n         When an\
    \ RBridge receives a unicast TRILL data packet whose\n         destination Nickname\
    \ matches with its own, the normal procedure\n         is for the RBridge to decapsulate\
    \ it and forward the\n         decapsulated Ethernet frame to the directly attached\
    \ bridged\n         LAN.  If the destination MAC is unknown, the RBridge floods\
    \ the\n         decapsulated Ethernet frame out all ports in the frame's Data\n\
    \         Label.  With directory assistance, the egress RBridge can\n        \
    \ determine if the MAC destination address in a frame matches any\n         end\
    \ stations attached via the bridged LAN.  Frames can be\n         discarded if\
    \ their destination addresses do not match.\n      -  Reduces the amount of MAC&Label\
    \ <-> Egress RBridge mapping\n         maintained by edge RBridges.  There is\
    \ no need for an edge\n         RBridge to keep MAC entries of remote end stations\
    \ that don't\n         communicate with the end stations locally attached.\n \
    \     -  Eliminates ARP/ND being broadcast or multicast through the\n        \
    \ TRILL core.\n      -  Provides some protection against spoofing of source addresses\n\
    \         (see Section 7).\n"
- title: 5.  Generic Operation of Directory Assistance
  contents:
  - "5.  Generic Operation of Directory Assistance\n   There are two different models\
    \ for directory assistance to edge\n   RBridges: Push Model and Pull Model.  The\
    \ directory information is\n   described in Section 5.1 below, while Section 5.2\
    \ discusses Push\n   Model requirements, and Section 5.3 Pull Model requirements.\n"
- title: 5.1.  Information in Directory for Edge RBridges
  contents:
  - "5.1.  Information in Directory for Edge RBridges\n   To achieve the benefits\
    \ of directory assistance for TRILL, the\n   corresponding Directory Server entries\
    \ will need, at a minimum, the\n   following logical data structure:\n   [IP,\
    \ MAC, Data Label, {list of attached RBridge nicknames}, {list of\n   interested\
    \ RBridges}]\n   The {list of attached RBridges} are the edge RBridges to which\
    \ the\n   host (or VM) is attached as specified by the [IP, MAC, Data Label] in\n\
    \   the entry.  The {list of interested RBridges} are the remote RBridges\n  \
    \ that might have attached hosts that communicate with the host in this\n   entry.\n\
    \   When a host has multiple IP addresses, there will be multiple\n   entries.\n\
    \   The {list of interested RBridges} could get populated when an RBridge\n  \
    \ queries for information, or information is pushed from a Directory\n   Server.\
    \  The list is used to notify those RBridges when the host\n   (specified by the\
    \ [IP, MAC, Data Label]) in the entry changes its\n   RBridge attachment.  An\
    \ explicit list in the directory is not needed\n   as long as the interested RBridges\
    \ can be determined.\n"
- title: 5.2.  Push Model and Requirements
  contents:
  - "5.2.  Push Model and Requirements\n   Under this model, Directory Server(s) push\
    \ the MAC&Label <-> Egress\n   RBridge mapping for all the end stations that might\
    \ communicate with\n   end stations attached to an RBridge edge node.  If the\
    \ packet's\n   destination address can't be found in the MAC&Label <-> Egress\n\
    \   RBridge table, the Ingress RBridge could be configured to:\n      simply drop\
    \ a data packet,\n      flood it to the TRILL campus, or\n      start the pull\
    \ process to get information from the Pull Directory\n      Server(s).\n   It\
    \ may not be necessary for every edge RBridge to get the entire\n   mapping table\
    \ for all the end stations in a campus.  There are many\n   ways to narrow the\
    \ full set down to a smaller set of remote end\n   stations that communicate with\
    \ end stations attached to an edge\n   RBridge.  A simple approach is to only\
    \ push the mapping for the Data\n   Labels that have active end stations under\
    \ an edge RBridge.  This\n   approach can reduce the number of mapping entries\
    \ being pushed.\n   However, the Push Model will usually push more entries of\
    \ MAC&Label\n   <-> Egress RBridge mapping to an edge RBridges than needed.  Under\n\
    \   the normal process of edge RBridge cache aging and unknown\n   destination\
    \ address flooding, rarely used mapping entries would have\n   been removed. \
    \ But it can be difficult for Directory Servers to\n   predict the communication\
    \ patterns among applications within one Data\n   Label.  Therefore, it is likely\
    \ that the Directory Servers will push\n   down all the MAC&Label entries if there\
    \ are end stations in the Data\n   Label attached to the edge RBridge.  This is\
    \ a disadvantage of the\n   Push Model compared with the Pull Model described\
    \ below.\n   In the Push Model, it is necessary to have a way for an RBridge node\n\
    \   to request Directory Server(s) to push the mapping entries.  This\n   method\
    \ should at least include the Data Labels enabled on the\n   RBridge, so that\
    \ the Directory Server doesn't need to push down the\n   entire set of mapping\
    \ entries for all the end stations in the campus.\n   An RBridge must be able\
    \ to get mapping entries when it is initialized\n   or restarted.\n   The Push\
    \ Model's detailed method and any handshake mechanism between\n   an RBridge and\
    \ Directory Server(s) is beyond the scope of this\n   framework document.\n  \
    \ When a Directory Server needs to push a large number of entries to\n   edge\
    \ RBridges, efficient data organization should be considered, for\n   example,\
    \ with one edge RBridge nickname being associated with all the\n   attached end\
    \ stations' MAC addresses and Data Labels.  As shown in\n   Table 1 below, to\
    \ make the data more compact, a representation can be\n   used where a nickname\
    \ need only occur once for a set of Labels, each\n   of which occurs only once\
    \ and each of which is associated with a set\n   of multiple IP and MAC address\
    \ pairs.  It would be much more bulky to\n   have each IP and MAC address pair\
    \ separately accompanied by its Label\n   and by the nickname of the RBridge by\
    \ which it is reachable.\n         +------------+---------+--------------------------------+\n\
    \         | Nickname1  |Label-1  | IP/MAC1, IP/MAC2, ,, IP/MACn   |\n        \
    \ |            |-------- +--------------------------------+\n         |      \
    \      |Label-2  | IP/MAC1, IP/MAC2, ,, IP/MACn   |\n         |            |--------\
    \ +--------------------------------+\n         |            |  ...... | IP/MAC1,\
    \ IP/MAC2, ,, IP/MACn   |\n         +------------+-------- +--------------------------------+\n\
    \         | Nickname2  |Label-1  | IP/MAC1, IP/MAC2, ,, IP/MACn   |\n        \
    \ |            |-------- +--------------------------------+\n         |      \
    \      |Label-2  | IP/MAC1, IP/MAC2, ,,IP/MACn    |\n         |            |--------\
    \ +--------------------------------+\n         |            |         | IP/MAC1,\
    \ IP/MAC2, ,, IP/MACn   |\n         +------------+-------- +--------------------------------+\n\
    \         | -------    |-------- +--------------------------------+\n        \
    \ |            |         | IP/MAC1, IP/MAC2, ,, IP/MACn   |\n         +------------+--------\
    \ +--------------------------------+\n           Table 1: Summarized Table Pushed\
    \ Down from Directory\n   Whenever there is any change in MAC&Label <-> Egress\
    \ RBridge mapping\n   that can be triggered by end stations being added, moved,\
    \ or\n   decommissioned, an incremental update can be sent to the edge\n   RBridges\
    \ that are impacted by the change.  Therefore, something like\n   a sequence number\
    \ has to be maintained by Directory Servers and\n   RBridges.  Detailed mechanisms\
    \ will be specified in a separate\n   document.\n"
- title: 5.3.  Pull Model and Requirements
  contents:
  - "5.3.  Pull Model and Requirements\n   Under this model, an RBridge pulls the\
    \ MAC&Label <-> Egress RBridge\n   mapping entry from the Directory Server when\
    \ its cache doesn't have\n   the entry.  There are a couple of possibilities for\
    \ triggering the\n   pulling process:\n      -  The RBridge edge node can send\
    \ a pull request whenever it\n         receives an unknown MAC destination, or\n\
    \      -  The RBridge edge node can intercept all ARP/ND requests and\n      \
    \   forward them or appropriate requests to the Directory Server(s)\n        \
    \ that has the information on where the target end stations are\n         located.\n\
    \   The Pull Directory response could indicate that the address being\n   queried\
    \ is unknown or that the requestor is administratively\n   prohibited from getting\
    \ an informative response.\n   By using a Pull Directory, a frame with an unknown\
    \ MAC destination\n   address doesn't have to be flooded across the TRILL campus\
    \ and the\n   ARP/ND requests don't have to be broadcast or multicast across the\n\
    \   TRILL campus.\n   The ingress RBridge can cache the response pulled from the\
    \ directory.\n   The timer for such a cache should be short in an environment\
    \ where\n   VMs move frequently.  The cache timer could be configured by the\n\
    \   Management System or sent along with the Pulled reply by the\n   Directory\
    \ Server(s).  It is important that the cached information be\n   kept consistent\
    \ with the actual placement of addresses in the campus;\n   therefore, there needs\
    \ to be some mechanism by which RBridges that\n   have pulled information that\
    \ has not expired can be informed when\n   that information changes or becomes\
    \ invalid for other reasons.\n   One advantage of the Pull Model is that edge\
    \ RBridges can age out\n   MAC&Label entries if they haven't been used for a certain\
    \ configured\n   period of time or a period of time provided by the directory.\n\
    \   Therefore, each edge RBridge will only keep the entries that are\n   frequently\
    \ used, so its mapping table size will be smaller.  Edge\n   RBridges would query\
    \ the Directory Server(s) for unknown MAC\n   destination addresses in data frames\
    \ or ARP/ND and cache the\n   response.  When end stations attached to remote\
    \ edge RBridges rarely\n   communicate with the locally attached end stations,\
    \ the corresponding\n   MAC&VLAN entries would be aged out from the RBridge's\
    \ cache.\n   An RBridge waiting for a response from Directory Servers upon\n \
    \  receiving a data frame with an unknown destination address is similar\n   to\
    \ an Layer-3/Layer-2 boundary router waiting for an ARP or ND\n   response upon\
    \ receiving an IP data packet whose destination IP is not\n   in the router's\
    \ IP/MAC cache table.  Most deployed routers today do\n   hold the packet and\
    \ send ARP/ND requests to the target upon receiving\n   a packet with a destination\
    \ IP not in its IP-to-MAC cache.  When\n   ARP/ND replies are received, the router\
    \ will send the data packet to\n   the target.  This practice minimizes flooding\
    \ when targets don't\n   exist in the subnet.\n   When the target doesn't exist\
    \ in the subnet, routers generally resend\n   an ARP/ND request a few more times\
    \ before dropping the packets.  So,\n   if the target doesn't exist in the subnet,\
    \ the router's holding time\n   to wait for an ARP/ND response can be longer than\
    \ the time taken by\n   the Pull Model to get IP-to-MAC mapping from a Directory\
    \ Server.\n   RBridges with mapping entries being pushed from a Directory Server\n\
    \   can be configured to use the Pull Model for targets that don't exist\n   in\
    \ the mapping data being pushed.\n   A separate document will specify the detailed\
    \ messages and mechanism\n   for RBridges to pull information from Directory Server(s).\n"
- title: 6.  Recommendation
  contents:
  - "6.  Recommendation\n   TRILL should provide a directory-assisted approach.  This\
    \ document\n   describes a basic framework for directory assistance to RBridge\
    \ edge\n   nodes.  More detailed mechanisms will be described in a separate\n\
    \   document or documents.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   For general TRILL security considerations, see\
    \ Section 6 of\n   [RFC6325].\n   Accurate mapping of IP addresses into MAC addresses\
    \ and of MAC\n   addresses to the RBridges from which they are reachable is important\n\
    \   to the correct delivery of information.  The security of specific\n   directory-assisted\
    \ mechanisms for delivering such information will be\n   discussed in the document\
    \ or documents specifying those mechanisms.\n   A directory-assisted TRILL edge\
    \ can be used to substantially improve\n   the security of a TRILL campus over\
    \ TRILL's default MAC address\n   learning from the data plane.  Assume S is an\
    \ end station attached to\n   RB1 trying to spoof a target end station T and that\
    \ T is attached to\n   RB2.  Perhaps S wants to steal traffic intended for T or\
    \ forge\n   traffic as if it was from T.\n   With that default TRILL data-plane\
    \ learning as described in\n   [RFC6325], S can impersonate T or any other end\
    \ station in the same\n   Data Label (VLAN or FGL [FGL]) as S and possibly other\
    \ Data Labels,\n   depending on how tightly VLAN admission and Appointed Forwarders\n\
    \   [RFC6439] are configured at the port by which S is connected to RB1.\n   S\
    \ can just send native frames with the forged source MAC addresses of\n   T, perhaps\
    \ broadcast frames for maximum effectiveness.  With this\n   technique, S will\
    \ frequently receive traffic intended for T and S can\n   easily forge traffic\
    \ as being from T.\n   Such spoofing can be prevented to the extent that the network\n\
    \   RBridges (1) use trusted directory services as described above in\n   this\
    \ document, (2) discard native frames received from a local end\n   station when\
    \ the directory says that end stations should be remote,\n   and, (3) when appropriate,\
    \ intercept ARP and ND messages and respond\n   locally.  Under these circumstances,\
    \ S would be limited to spoofing\n   targets on the same RBridge as the ingress\
    \ RBridge for S (that is,\n   RB1 = RB2).  RB1 would still need to learn which\
    \ local end stations\n   were attached to which port, and S could confuse RB1\
    \ by sending\n   frames with the forged source MAC address of other end stations\
    \ on\n   RB1.  Although it would also still be restricted to frames in a VLAN\n\
    \   that would both be admitted by S's port of attachment and for which\n   that\
    \ port is an Appointed Forwarder.\n   Security against spoofing could be even\
    \ further strengthened by\n   adding port of attachment information to the directory\
    \ and discarding\n   native frames that are received on the wrong port.  This\
    \ would limit\n   S to spoofing targets that were on the same link as S and in\
    \ a VLAN\n   admitted by the port of that link's attachment to RB1 and for which\n\
    \   that port is an Appointed Forwarder (or, if the link is multiply\n   connected,\
    \ in the same way at all of the ports by which the link is\n   attached to an\
    \ RBridge).\n   Even without directory services, secure ND [RFC3971] or use of\
    \ secure\n   ESADI (as described in [ESADI]) may also be helpful to security.\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   Thanks for comments and review from the following:\n\
    \   Sam Aldrin, David Black, Charlie Kaufman, Yizhou Li, and Erik\n   Nordmark\n"
- title: 9.  Informative References
  contents:
  - "9.  Informative References\n   [802.1Q]   IEEE Std 802.1Q-2011, \"IEEE Standard\
    \ for Local and\n              metropolitan area networks - Virtual Bridged Local\
    \ Area\n              Networks\", May 2011.\n   [IS-IS]    ISO/IEC, \"Intermediate\
    \ System to Intermediate System\n              intra-domain routeing information\
    \ exchange protocol for\n              use in conjunction with the protocol for\
    \ providing the\n              connectionless-mode network service (ISO 8473)\"\
    , ISO/IEC\n              10589:2002.\n   [RFC826]   Plummer, D., \"Ethernet Address\
    \ Resolution Protocol: Or\n              Converting Network Protocol Addresses\
    \ to 48.bit Ethernet\n              Address for Transmission on Ethernet Hardware\"\
    , STD 37,\n              RFC 826, November 1982.\n   [RFC3971]  Arkko, J., Ed.,\
    \ Kempf, J., Zill, B., and P. Nikander,\n              \"SEcure Neighbor Discovery\
    \ (SEND)\", RFC 3971, March 2005.\n   [RFC4861]  Narten, T., Nordmark, E., Simpson,\
    \ W., and H. Soliman,\n              \"Neighbor Discovery for IP version 6 (IPv6)\"\
    , RFC 4861,\n              September 2007.\n   [RFC6325]  Perlman, R., Eastlake\
    \ 3rd, D., Dutt, D., Gai, S., and A.\n              Ghanwani, \"Routing Bridges\
    \ (RBridges): Base Protocol\n              Specification\", RFC 6325, July 2011.\n\
    \   [RFC6326]  Eastlake, D., Banerjee, A., Dutt, D., Perlman, R., and A.\n   \
    \           Ghanwani, \"Transparent Interconnection of Lots of Links\n       \
    \       (TRILL) Use of IS-IS\", RFC 6326, July 2011.\n   [RFC6439]  Perlman, R.,\
    \ Eastlake, D., Li, Y., Banerjee, A., and F.\n              Hu, \"Routing Bridges\
    \ (RBridges): Appointed Forwarders\",\n              RFC 6439, November 2011.\n\
    \   [ESADI]    Zhai, H., Hu, F., Perlman, R., Eastlake 3rd, D., and O.\n     \
    \         Stokes, \"TRILL (Transparent Interconnection of Lots of\n          \
    \    Links): ESADI (End Station Address Distribution\n              Information)\
    \ Protocol\", Work in Progress, July 2013.\n   [FGL]      Eastlake 3rd, D., Zhang,\
    \ M., Agarwal, P., Perlman, R., and\n              D. Dutt, \"TRILL (Transparent\
    \ Interconnection of Lots of\n              Links): Fine-Grained Labeling\", Work\
    \ in Progress, May\n              2013.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Linda Dunbar\n   Huawei Technologies\n   5430 Legacy Drive,\
    \ Suite #175\n   Plano, TX 75024, USA\n   Phone: +1-469-277-5840\n   EMail: ldunbar@huawei.com\n\
    \   Donald Eastlake\n   Huawei Technologies\n   155 Beaver Street\n   Milford,\
    \ MA 01757 USA\n   Phone: +1-508-333-2270\n   EMail: d3e3e3@gmail.com\n   Radia\
    \ Perlman\n   Intel Labs\n   2200 Mission College Blvd.\n   Santa Clara, CA 95054-1549\
    \ USA\n   Phone: +1-408-765-8080\n   EMail: Radia@alum.mit.edu\n   Igor Gashinsky\n\
    \   Yahoo\n   45 West 18th Street 6th floor\n   New York, NY 10011 USA\n   EMail:\
    \ igor@yahoo-inc.com\n"
