- title: __initial_text__
  contents:
  - "              Recommended Simple Security Capabilities in\n                 Customer\
    \ Premises Equipment (CPE) for\n              Providing Residential IPv6 Internet\
    \ Service\n"
- title: Abstract
  contents:
  - "Abstract\n   This document identifies a set of recommendations for the makers\
    \ of\n   devices and describes how to provide for \"simple security\"\n   capabilities\
    \ at the perimeter of local-area IPv6 networks in\n   Internet-enabled homes and\
    \ small offices.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6092.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Special Language ...........................................3\n  \
    \    1.2. Use of Normative Keywords ..................................3\n   2.\
    \ Overview ........................................................4\n      2.1.\
    \ Basic Sanitation ...........................................5\n      2.2. Internet\
    \ Layer Protocols ...................................5\n      2.3. Transport Layer\
    \ Protocols ..................................6\n   3. Detailed Recommendations\
    \ ........................................6\n      3.1. Stateless Filters ..........................................7\n\
    \      3.2. Connection-Free Filters ....................................8\n  \
    \         3.2.1. Internet Control and Management .....................8\n    \
    \       3.2.2. Upper-Layer Transport Protocols .....................8\n      \
    \     3.2.3. UDP Filters ........................................10\n        \
    \   3.2.4. IPsec and Internet Key Exchange (IKE) ..............11\n          \
    \ 3.2.5. Mobility Support in IPv6 ...........................12\n      3.3. Connection-Oriented\
    \ Filters ...............................13\n           3.3.1. TCP Filters ........................................14\n\
    \           3.3.2. SCTP Filters .......................................17\n  \
    \         3.3.3. DCCP Filters .......................................20\n    \
    \       3.3.4. Level 3 Multihoming Shim Protocol for IPv6\n                  (Shim6)\
    \ ............................................23\n      3.4. Passive Listeners\
    \ .........................................23\n      3.5. Management Applications\
    \ ...................................24\n   4. Summary of Recommendations .....................................25\n\
    \   5. Contributors ...................................................31\n  \
    \ 6. Security Considerations ........................................32\n   7.\
    \ References .....................................................33\n      7.1.\
    \ Normative References ......................................33\n      7.2. Informative\
    \ References ....................................35\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Some IPv6 gateway devices that enable delivery of Internet\
    \ services\n   in residential and small-office settings may be augmented with\n\
    \   \"simple security\" capabilities as described in \"Local Network\n   Protection\
    \ for IPv6\" [RFC4864].  In general, these capabilities cause\n   packets to be\
    \ discarded in an attempt to make local networks and the\n   Internet more secure.\
    \  However, it is worth noting that some packets\n   sent by legitimate applications\
    \ may also be discarded in this\n   process, affecting reliability and ease of\
    \ use for these\n   applications.\n   There is a constructive tension between\
    \ the desires of users for\n   transparent end-to-end connectivity on the one\
    \ hand, and the need for\n   local-area network administrators to detect and prevent\
    \ intrusion by\n   unauthorized public Internet users on the other.  This document\
    \ is\n   intended to highlight reasonable limitations on end-to-end\n   transparency\
    \ where security considerations are deemed important to\n   promote local and\
    \ Internet security.\n   The reader is cautioned always to remember that the typical\n\
    \   residential or small-office network administrator has no expertise\n   whatsoever\
    \ in Internet engineering.  Configuration interfaces for\n   router/gateway appliances\
    \ marketed toward them should be easy to\n   understand and even easier to ignore.\
    \  In particular, extra care\n   should be used in the design of baseline operating\
    \ modes for\n   unconfigured devices, since most devices will never be changed\
    \ from\n   their factory configurations.\n"
- title: 1.1.  Special Language
  contents:
  - "1.1.  Special Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n   Additionally, the key word \"DEFAULT\" is to be interpreted\
    \ in this\n   document as pertaining to a configuration as applied by a vendor,\n\
    \   prior to the administrator changing it for its initial activation.\n"
- title: 1.2.  Use of Normative Keywords
  contents:
  - "1.2.  Use of Normative Keywords\n      NOTE WELL: This document is not a standard,\
    \ and conformance with\n      it is not required in order to claim conformance\
    \ with IETF\n      standards for IPv6.  It uses the normative keywords defined\
    \ in the\n      previous section only for precision.\n   Particular attention\
    \ is drawn to recommendation REC-49, which calls\n   for an easy way to set a\
    \ gateway to a transparent mode of operation.\n"
- title: 2.  Overview
  contents:
  - "2.  Overview\n   For the purposes of this document, residential Internet gateways\
    \ are\n   assumed to be fairly simple devices with a limited subset of the full\n\
    \   range of possible features.  They function as default routers\n   [RFC4294]\
    \ for a single local-area network, e.g., an Ethernet network,\n   a Wi-Fi network,\
    \ or a bridge between two or more such segments.  They\n   have only one interface\
    \ by which they can access the Internet service\n   at any one time, using any\
    \ of several possible sub-IP mechanisms,\n   including tunnels and transition\
    \ mechanisms.\n   In referring to the security capabilities of residential gateways,\
    \ it\n   is reasonable to distinguish between their \"interior\" network, i.e.,\n\
    \   the local-area network, and their \"exterior\" networks, e.g., the\n   public\
    \ Internet and the networks of Internet service providers.  This\n   document\
    \ is concerned only with the behavior of IP packet filters\n   that police the\
    \ flow of traffic between the interior IPv6 network and\n   the exterior IPv6\
    \ networks of residential Internet gateways.\n   The operational goals of security\
    \ capabilities in Internet gateways\n   are described with more detail in \"Local\
    \ Network Protection for IPv6\"\n   [RFC4864], but they can be summarized as follows.\n\
    \   o  Check all traffic to and from the public Internet for basic\n      sanity,\
    \ e.g., filter for spoofs and misdirected (sometimes called\n      \"Martian\"\
    ) packets [RFC4949].\n   o  Allow tracking of application usage by source and\
    \ destination\n      network addresses and ports.\n   o  Provide a barrier against\
    \ untrusted external influences on the\n      interior network by requiring filter\
    \ state to be activated by\n      traffic originating at interior network nodes.\n\
    \   o  Allow manually configured exceptions to the stateful filtering\n      rules\
    \ according to network administrative policy.\n   o  Isolate local network DHCPv6\
    \ and DNS resolver services from the\n      public Internet.\n   Prior to the\
    \ widespread availability of IPv6 Internet service, homes\n   and small offices\
    \ often used private IPv4 network address realms\n   [RFC1918] with Network Address\
    \ Translation (NAT) functions deployed\n   to present all the hosts on the interior\
    \ network as a single host to\n   the Internet service provider.  The stateful\
    \ packet filtering\n   behavior of NAT set user expectations that persist today\
    \ with\n   residential IPv6 service.  \"Local Network Protection for IPv6\"\n\
    \   [RFC4864] recommends applying stateful packet filtering at\n   residential\
    \ IPv6 gateways that conforms to the user expectations\n   already in place.\n\
    \   Conventional stateful packet filters activate new states as a side\n   effect\
    \ of forwarding outbound flow initiations from interior network\n   nodes.  This\
    \ requires applications to have advance knowledge of the\n   addresses of exterior\
    \ nodes with which they expect to communicate.\n   Several proposals are currently\
    \ under consideration for allowing\n   applications to solicit inbound traffic\
    \ from exterior nodes without\n   advance knowledge of their addresses.  While\
    \ consensus within the\n   Internet engineering community has emerged that such\
    \ protocols are\n   necessary to implement in residential IPv6 gateways, the best\
    \ current\n   practice has not yet been established.\n"
- title: 2.1.  Basic Sanitation
  contents:
  - "2.1.  Basic Sanitation\n   In addition to the functions required of all IPv6\
    \ routers [RFC4294],\n   residential gateways are expected to have basic stateless\
    \ filters for\n   prohibiting certain kinds of traffic with invalid headers, e.g.,\n\
    \   \"Martian\" packets, spoofs, routing header type code zero, etc.  (See\n \
    \  Section 3.1 for more details.)\n   Conversely, simple Internet gateways are\
    \ not expected to prohibit the\n   development of new applications.  In particular,\
    \ packets with end-to-\n   end network security and routing extension headers\
    \ for mobility are\n   expected to pass Internet gateways freely.\n   Finally,\
    \ Internet gateways that route multicast traffic are expected\n   to implement\
    \ appropriate filters for multicast traffic to limit the\n   scope of multicast\
    \ groups that span the demarcation between\n   residential networks and service\
    \ provider networks.\n"
- title: 2.2.  Internet Layer Protocols
  contents:
  - "2.2.  Internet Layer Protocols\n   As virtual private networking tunnels are\
    \ regarded as an unacceptably\n   wide attack surface, this document recommends\
    \ that the DEFAULT\n   operating mode for residential IPv6 simple security be\
    \ to treat\n   Generic Packet Tunneling [RFC2473] and similar protocols as opaque\n\
    \   transport layers, i.e., inbound tunnel initiations are denied and\n   outbound\
    \ tunnel initiations are accepted.\n   IPsec transport and tunnel modes are explicitly\
    \ secured by\n   definition, so this document recommends that the DEFAULT operating\n\
    \   mode permit IPsec.  To facilitate the use of IPsec in support of IPv6\n  \
    \ mobility, the Internet Key Exchange (IKE) protocol [RFC5996] and the\n   Host\
    \ Identity Protocol (HIP) [RFC5201] should also be permitted in\n   the DEFAULT\
    \ operating mode.\n"
- title: 2.3.  Transport Layer Protocols
  contents:
  - "2.3.  Transport Layer Protocols\n   IPv6 simple security functions are principally\
    \ concerned with the\n   stateful filtering of the Internet Control Message Protocol\
    \ (ICMPv6)\n   [RFC4443] and transport layers like the User Datagram Protocol\
    \ (UDP)\n   [RFC0768], the Lightweight User Datagram Protocol (UDP-Lite)\n   [RFC3828],\
    \ the Transmission Control Protocol (TCP) [RFC0793], the\n   Stream Control Transmission\
    \ Protocol (SCTP) [RFC4960], the Datagram\n   Congestion Control Protocol (DCCP)\
    \ [RFC4340], and potentially any\n   standards-track transport protocols to be\
    \ defined in the future.\n   The general operating principle is that transport\
    \ layer traffic is\n   not forwarded into the interior network of a residential\
    \ IPv6 gateway\n   unless it has been solicited explicitly by interior transport\n\
    \   endpoints, e.g., by matching the reverse path for previously\n   forwarded\
    \ outbound traffic, or by matching configured exceptions set\n   by the network\
    \ administrator.  All other traffic is expected to be\n   discarded or rejected\
    \ with an ICMPv6 error message to indicate the\n   traffic is administratively\
    \ prohibited.\n"
- title: 3.  Detailed Recommendations
  contents:
  - "3.  Detailed Recommendations\n   This section describes the specific recommendations\
    \ made by this\n   document in full detail.  Section 4 is a summary.\n   Some\
    \ recommended filters are to be applied to all traffic that passes\n   through\
    \ residential Internet gateways regardless of the direction\n   they are to be\
    \ forwarded.  Other recommended filters are intended to\n   be sensitive to the\
    \ \"direction\" of traffic flows.  Applied to\n   bidirectional transport flows,\
    \ \"direction\" has a specific meaning in\n   this document.\n   Packets are said\
    \ to be \"outbound\" if they originate at nodes located\n   in the interior network\
    \ for exterior destinations, and \"inbound\" if\n   they arrive from exterior\
    \ sources with interior destinations.\n   Flows are said to be \"outbound\" if\
    \ the originator of the initial\n   packet in any given transport association\
    \ is an interior node and one\n   or more of the participants are located in the\
    \ exterior.  Flows are\n   said to be \"inbound\" if the originator of the initial\
    \ packet is an\n   exterior node and one or more of the participants are nodes\
    \ on the\n   interior network.\n"
- title: 3.1.  Stateless Filters
  contents:
  - "3.1.  Stateless Filters\n   Certain kinds of IPv6 packets MUST NOT be forwarded\
    \ in either\n   direction by residential Internet gateways regardless of network\n\
    \   state.  These include packets with multicast source addresses,\n   packets\
    \ to destinations with certain non-routable and/or reserved\n   prefixes, and\
    \ packets with deprecated extension headers.\n   Other stateless filters are recommended\
    \ to implement ingress\n   filtering (see [RFC2827] and [RFC3704]), to enforce\
    \ multicast scope\n   boundaries, and to isolate certain local network services\
    \ from the\n   public Internet.\n   REC-1: Packets bearing multicast source addresses\
    \ in their outer IPv6\n   headers MUST NOT be forwarded or transmitted on any\
    \ interface.\n   REC-2: Packets bearing multicast destination addresses in their\
    \ outer\n   IPv6 headers of equal or narrower scope (see \"IPv6 Scoped Address\n\
    \   Architecture\" [RFC4007]) than the configured scope boundary level of\n  \
    \ the gateway MUST NOT be forwarded in any direction.  The DEFAULT\n   scope boundary\
    \ level SHOULD be organization-local scope, and it\n   SHOULD be configurable\
    \ by the network administrator.\n   REC-3: Packets bearing source and/or destination\
    \ addresses forbidden\n   to appear in the outer headers of packets transmitted\
    \ over the public\n   Internet MUST NOT be forwarded.  In particular, site-local\
    \ addresses\n   are deprecated by [RFC3879], and [RFC5156] explicitly forbids\
    \ the use\n   of address blocks of types IPv4-Mapped Addresses, IPv4-Compatible\n\
    \   Addresses, Documentation Prefix, and Overlay Routable Cryptographic\n   Hash\
    \ IDentifiers (ORCHID).\n   REC-4: Packets bearing deprecated extension headers\
    \ prior to their\n   first upper-layer-protocol header SHOULD NOT be forwarded\
    \ or\n   transmitted on any interface.  In particular, all packets with\n   routing\
    \ extension header type 0 [RFC2460] preceding the first upper-\n   layer-protocol\
    \ header MUST NOT be forwarded.  See [RFC5095] for\n   additional background.\n\
    \   REC-5: Outbound packets MUST NOT be forwarded if the source address\n   in\
    \ their outer IPv6 header does not have a unicast prefix configured\n   for use\
    \ by globally reachable nodes on the interior network.\n   REC-6: Inbound packets\
    \ MUST NOT be forwarded if the source address in\n   their outer IPv6 header has\
    \ a global unicast prefix assigned for use\n   by globally reachable nodes on\
    \ the interior network.\n   REC-7: By DEFAULT, packets with unique local source\
    \ and/or\n   destination addresses [RFC4193] SHOULD NOT be forwarded to or from\n\
    \   the exterior network.\n   REC-8: By DEFAULT, inbound DNS queries received\
    \ on exterior\n   interfaces MUST NOT be processed by any integrated DNS resolving\n\
    \   server.\n   REC-9: Inbound DHCPv6 discovery packets [RFC3315] received on\n\
    \   exterior interfaces MUST NOT be processed by any integrated DHCPv6\n   server\
    \ or relay agent.\n      NOTE WELL: Nothing in this document relieves residential\
    \ Internet\n      gateways, when processing headers to identify valid sequences\
    \ of\n      upper-layer transport packets, from any of the requirements of the\n\
    \      \"Internet Protocol, Version 6 (IPv6) Specification\" [RFC2460],\n    \
    \  including any and all future updates and revisions.\n"
- title: 3.2.  Connection-Free Filters
  contents:
  - "3.2.  Connection-Free Filters\n   Some Internet applications use connection-free\
    \ transport protocols\n   with no release semantics, e.g., UDP.  These protocols\
    \ pose a special\n   difficulty for stateful packet filters because most of the\n\
    \   application state is not carried at the transport level.  State\n   records\
    \ are created when communication is initiated and are abandoned\n   when no further\
    \ communication is detected after some period of time.\n"
- title: 3.2.1.  Internet Control and Management
  contents:
  - "3.2.1.  Internet Control and Management\n   Recommendations for filtering ICMPv6\
    \ messages in firewall devices are\n   described separately in [RFC4890] and apply\
    \ to residential gateways,\n   with the additional recommendation that incoming\
    \ \"Destination\n   Unreachable\" and \"Packet Too Big\" error messages that don't\
    \ match any\n   filtering state should be dropped.\n   REC-10: IPv6 gateways SHOULD\
    \ NOT forward ICMPv6 \"Destination\n   Unreachable\" and \"Packet Too Big\" messages\
    \ containing IP headers that\n   do not match generic upper-layer transport state\
    \ records.\n"
- title: 3.2.2.  Upper-Layer Transport Protocols
  contents:
  - "3.2.2.  Upper-Layer Transport Protocols\n   Residential IPv6 gateways are not\
    \ expected to prohibit the use of\n   applications to be developed using future\
    \ upper-layer transport\n   protocols.  In particular, transport protocols not\
    \ otherwise\n   discussed in subsequent sections of this document are expected\
    \ to be\n   treated consistently, i.e., as having connection-free semantics and\n\
    \   no special requirements to inspect the transport headers.\n   In general,\
    \ upper-layer transport filter state records are expected\n   to be created when\
    \ an interior endpoint sends a packet to an exterior\n   address.  The filter\
    \ allocates (or reuses) a record for the duration\n   of communications, with\
    \ an idle timer to delete the state record when\n   no further communications\
    \ are detected.\n   One key aspect of how a packet filter behaves is the way it\
    \ evaluates\n   the exterior address of an endpoint when applying a filtering\
    \ rule.\n   A gateway is said to have \"endpoint-independent filtering\" behavior\n\
    \   when the exterior address is not evaluated when matching a packet\n   with\
    \ a flow.  A gateway is said to have \"address-dependent filtering\"\n   behavior\
    \ when the exterior address of a packet is required to match\n   the exterior\
    \ address for its flow.\n   REC-11: If application transparency is most important,\
    \ then a\n   stateful packet filter SHOULD have \"endpoint-independent filtering\"\
    \n   behavior for generic upper-layer transport protocols.  If a more\n   stringent\
    \ filtering behavior is most important, then a filter SHOULD\n   have \"address-dependent\
    \ filtering\" behavior.  The filtering behavior\n   MAY be an option configurable\
    \ by the network administrator, and it\n   MAY be independent of the filtering\
    \ behavior for other protocols.\n   Filtering behavior SHOULD be endpoint independent\
    \ by DEFAULT in\n   gateways intended for provisioning without service-provider\n\
    \   management.\n   REC-12: Filter state records for generic upper-layer transport\n\
    \   protocols MUST NOT be deleted or recycled until an idle timer not\n   less\
    \ than two minutes has expired without having forwarded a packet\n   matching\
    \ the state in some configurable amount of time.  By DEFAULT,\n   the idle timer\
    \ for such state records is five minutes.\n   The Internet security community\
    \ is never completely at rest.  New\n   attack surfaces, and vulnerabilities in\
    \ them, are typically\n   discovered faster than they can be patched by normal\
    \ equipment\n   upgrade cycles.  It's therefore important for vendors of residential\n\
    \   gateway equipment to provide automatic software updates to patch\n   vulnerabilities\
    \ as they are discovered.\n   REC-13: Residential IPv6 gateways SHOULD provide\
    \ a convenient means\n   to update their firmware securely, for the installation\
    \ of security\n   patches and other manufacturer-recommended changes.\n   Vendors\
    \ can expect users and operators to have differing viewpoints\n   on the maintenance\
    \ of patches, with some preferring automatic update\n   and some preferring manual\
    \ procedures.  Those preferring automatic\n   update may also prefer either to\
    \ download from a vendor site or from\n   one managed by their network provider.\
    \  To handle the disparity,\n   vendors are advised to provide both manual and\
    \ automatic options.  In\n   the automatic case, they would do well to facilitate\n\
    \   pre-configuration of the download URL and a means of validating the\n   software\
    \ image, such as a certificate.\n"
- title: 3.2.3.  UDP Filters
  contents:
  - "3.2.3.  UDP Filters\n   \"Network Address Translation (NAT) Behavioral Requirements\
    \ for\n   Unicast UDP\" [RFC4787] defines the terminology and best current\n \
    \  practice for stateful filtering of UDP applications in IPv4 with NAT,\n   which\
    \ serves as the model for behavioral requirements for simple UDP\n   security\
    \ in IPv6 gateways, notwithstanding the requirements related\n   specifically\
    \ to network address translation.\n   An interior endpoint initiates a UDP flow\
    \ through a stateful packet\n   filter by sending a packet to an exterior address.\
    \  The filter\n   allocates (or reuses) a filter state record for the duration\
    \ of the\n   flow.  The state record defines the interior and exterior IP\n  \
    \ addresses and ports used between all packets in the flow.\n   State records\
    \ for UDP flows remain active while they are in use and\n   are only abandoned\
    \ after an idle period of some time.\n   REC-14: A state record for a UDP flow\
    \ where both source and\n   destination ports are outside the well-known port\
    \ range\n   (ports 0-1023) MUST NOT expire in less than two minutes of idle time.\n\
    \   The value of the UDP state record idle timer MAY be configurable.\n   The\
    \ DEFAULT is five minutes.\n   REC-15: A state record for a UDP flow where one\
    \ or both of the source\n   and destination ports are in the well-known port range\
    \ (ports 0-1023)\n   MAY expire after a period of idle time shorter than two minutes\
    \ to\n   facilitate the operation of the IANA-registered service assigned to\n\
    \   the port in question.\n   As [RFC4787] notes, outbound refresh is necessary\
    \ for allowing the\n   interior endpoint to keep the state record alive.  Inbound\
    \ refresh\n   may be useful for applications with no outbound UDP traffic.\n \
    \  However, allowing inbound refresh can allow an attacker in the\n   exterior\
    \ or a misbehaving application to keep a state record alive\n   indefinitely.\
    \  This could be a security risk.  Also, if the process\n   is repeated with different\
    \ ports, over time, it could use up all the\n   state record memory and resources\
    \ in the filter.\n   REC-16: A state record for a UDP flow MUST be refreshed when\
    \ a packet\n   is forwarded from the interior to the exterior, and it MAY be\n\
    \   refreshed when a packet is forwarded in the reverse direction.\n   As described\
    \ in Section 5 of [RFC4787], the connection-free semantics\n   of UDP pose a difficulty\
    \ for packet filters in trying to recognize\n   which packets comprise an application\
    \ flow and which are unsolicited.\n   Various strategies have been used in IPv4/NAT\
    \ gateways with differing\n   effects.\n   REC-17: If application transparency\
    \ is most important, then a\n   stateful packet filter SHOULD have \"endpoint-independent\
    \ filtering\"\n   behavior for UDP.  If a more stringent filtering behavior is\
    \ most\n   important, then a filter SHOULD have \"address-dependent filtering\"\
    \n   behavior.  The filtering behavior MAY be an option configurable by\n   the\
    \ network administrator, and it MAY be independent of the filtering\n   behavior\
    \ for TCP and other protocols.  Filtering behavior SHOULD be\n   endpoint independent\
    \ by DEFAULT in gateways intended for provisioning\n   without service-provider\
    \ management.\n   Application mechanisms may depend on the reception of ICMPv6\
    \ error\n   messages triggered by the transmission of UDP messages.  One such\n\
    \   mechanism is path MTU discovery [RFC1981].\n   REC-18: If a gateway forwards\
    \ a UDP flow, it MUST also forward ICMPv6\n   \"Destination Unreachable\" and\
    \ \"Packet Too Big\" messages containing\n   UDP headers that match the flow state\
    \ record.\n   REC-19: Receipt of any sort of ICMPv6 message MUST NOT terminate\
    \ the\n   state record for a UDP flow.\n   REC-20: UDP-Lite flows [RFC3828] SHOULD\
    \ be handled in the same way as\n   UDP flows, except that the upper-layer transport\
    \ protocol identifier\n   for UDP-Lite is not the same as UDP; therefore, UDP\
    \ packets MUST NOT\n   match UDP-Lite state records, and vice versa.\n"
- title: 3.2.4.  IPsec and Internet Key Exchange (IKE)
  contents:
  - "3.2.4.  IPsec and Internet Key Exchange (IKE)\n   The Internet Protocol security\
    \ (IPsec) suite offers greater\n   flexibility and better overall security than\
    \ the simple security of\n   stateful packet filtering at network perimeters.\
    \  Therefore,\n   residential IPv6 gateways need not prohibit IPsec traffic flows.\n\
    \   REC-21: In their DEFAULT operating mode, IPv6 gateways MUST NOT\n   prohibit\
    \ the forwarding of packets, to and from legitimate node\n   addresses, with destination\
    \ extension headers of type \"Authentication\n   Header (AH)\" [RFC4302] in their\
    \ outer IP extension header chain.\n   REC-22: In their DEFAULT operating mode,\
    \ IPv6 gateways MUST NOT\n   prohibit the forwarding of packets, to and from legitimate\
    \ node\n   addresses, with an upper-layer protocol of type \"Encapsulating\n \
    \  Security Payload (ESP)\" [RFC4303] in their outer IP extension header\n   chain.\n\
    \   REC-23: If a gateway forwards an ESP flow, it MUST also forward (in\n   the\
    \ reverse direction) ICMPv6 \"Destination Unreachable\" and \"Packet\n   Too Big\"\
    \ messages containing ESP headers that match the flow state\n   record.\n   Internet\
    \ Key Exchange (IKE) is a secure mechanism for performing\n   mutual authentication,\
    \ exchanging cryptographic material, and\n   establishing IPsec Security Associations\
    \ between peers.  Residential\n   IPv6 gateways are expected to facilitate the\
    \ use of IPsec security\n   policies by allowing inbound IKE flows.\n   REC-24:\
    \ In their DEFAULT operating mode, IPv6 gateways MUST NOT\n   prohibit the forwarding\
    \ of any UDP packets, to and from legitimate\n   node addresses, with a destination\
    \ port of 500, i.e., the port\n   reserved by IANA for the Internet Key Exchange\
    \ (IKE) protocol\n   [RFC5996].\n   REC-25: In all operating modes, IPv6 gateways\
    \ SHOULD use filter state\n   records for Encapsulating Security Payload (ESP)\
    \ [RFC4303] that are\n   indexable by a 3-tuple comprising the interior node address,\
    \ the\n   exterior node address, and the ESP protocol identifier.  In\n   particular,\
    \ the IPv4/NAT method of indexing state records also by the\n   security parameters\
    \ index (SPI) SHOULD NOT be used.  Likewise, any\n   mechanism that depends on\
    \ detection of Internet Key Exchange (IKE)\n   [RFC5996] initiations SHOULD NOT\
    \ be used.\n   The Host Identity Protocol (HIP) is a secure mechanism for\n  \
    \ establishing host identity and secure communications between\n   authenticated\
    \ hosts.  Residential IPv6 gateways need not prohibit\n   inbound HIP flows.\n\
    \   REC-26: In their DEFAULT operating mode, IPv6 gateways MUST NOT\n   prohibit\
    \ the forwarding of packets, to and from legitimate node\n   addresses, with destination\
    \ extension headers of type \"Host Identity\n   Protocol (HIP)\" [RFC5201] in\
    \ their outer IP extension header chain.\n"
- title: 3.2.5.  Mobility Support in IPv6
  contents:
  - "3.2.5.  Mobility Support in IPv6\n   Mobility support in IPv6 [RFC3775] relies\
    \ on the use of an\n   encapsulation mechanism in flows between mobile nodes and\
    \ their\n   correspondent nodes, involving the use of the Type 2 IPv6 Routing\n\
    \   Header, the Home Address destination header option, and the Mobility\n   extension\
    \ header.  In contrast to mobility support in IPv4, mobility\n   is a standard\
    \ feature of IPv6, and no security benefit is generally\n   to be gained by denying\
    \ communications with either interior or\n   exterior mobile nodes.\n   Not all\
    \ usage scenarios of mobility support in IPv6 are expected to\n   be compatible\
    \ with IPv6 simple security.  In particular, exterior\n   mobile nodes are expected\
    \ to be prohibited from establishing bindings\n   with interior correspondent\
    \ nodes by the filtering of unsolicited\n   inbound Mobility Header messages,\
    \ unless they are the subject of an\n   IPsec security policy.\n   REC-27: The\
    \ state records for flows initiated by outbound packets\n   that bear a Home Address\
    \ destination option [RFC3775] are\n   distinguished by the addition of the home\
    \ address of the flow as well\n   as the interior care-of address.  IPv6 gateways\
    \ MUST NOT prohibit the\n   forwarding of any inbound packets bearing type 2 routing\
    \ headers,\n   which otherwise match a flow state record, and where A) the address\n\
    \   in the destination field of the IPv6 header matches the interior\n   care-of\
    \ address of the flow, and B) the Home Address field in the\n   Type 2 Routing\
    \ Header matches the home address of the flow.\n   REC-28: Valid sequences of\
    \ Mobility Header [RFC3775] packets MUST be\n   forwarded for all outbound and\
    \ explicitly permitted inbound Mobility\n   Header flows.\n   REC-29: If a gateway\
    \ forwards a Mobility Header [RFC3775] flow, then\n   it MUST also forward, in\
    \ both directions, the IPv4 and IPv6 packets\n   that are encapsulated in IPv6\
    \ associated with the tunnel between the\n   home agent and the correspondent\
    \ node.\n   REC-30: If a gateway forwards a Mobility Header [RFC3775] flow, then\n\
    \   it MUST also forward (in the reverse direction) ICMPv6 \"Destination\n   Unreachable\"\
    \ and \"Packet Too Big\" messages containing any headers\n   that match the associated\
    \ flow state records.\n"
- title: 3.3.  Connection-Oriented Filters
  contents:
  - "3.3.  Connection-Oriented Filters\n   Most Internet applications use connection-oriented\
    \ transport\n   protocols with orderly release semantics.  These protocols include\n\
    \   TCP, SCTP, DCCP, and potentially any future IETF Standards-Track\n   transport\
    \ protocols that use such semantics.  Stateful packet filters\n   track the state\
    \ of individual transport flows and prohibit the\n   forwarding of packets that\
    \ do not match the state of an active flow\n   and do not conform to a rule for\
    \ the automatic creation of such\n   state.\n"
- title: 3.3.1.  TCP Filters
  contents:
  - "3.3.1.  TCP Filters\n   An interior endpoint initiates a TCP flow through a stateful\
    \ packet\n   filter by sending a SYN packet.  The filter allocates (or reuses)\
    \ a\n   filter state record for the flow.  The state record defines the\n   interior\
    \ and exterior IP addresses and ports used for forwarding all\n   packets for\
    \ that flow.\n   Some peer-to-peer applications use an alternate method of connection\n\
    \   initiation termed \"simultaneous-open\" ([RFC0793], Figure 8) to\n   traverse\
    \ stateful filters.  In the simultaneous-open mode of\n   operation, both peers\
    \ send SYN packets for the same TCP flow.  The\n   SYN packets cross in the network.\
    \  Upon receiving the other end's SYN\n   packet, each end responds with a SYN-ACK\
    \ packet, which also cross in\n   the network.  The connection is established\
    \ at each endpoint once the\n   SYN-ACK packets are received.\n   To provide stateful\
    \ packet filtering service for TCP, it is necessary\n   for a filter to receive,\
    \ process, and forward all packets for a flow\n   that conform to valid transitions\
    \ of the TCP state machine\n   ([RFC0793], Figure 6).\n   REC-31: All valid sequences\
    \ of TCP packets (defined in [RFC0793])\n   MUST be forwarded for outbound flows\
    \ and explicitly permitted inbound\n   flows.  In particular, both the normal\
    \ TCP 3-way handshake mode of\n   operation and the simultaneous-open mode of\
    \ operation MUST be\n   supported.\n   It is possible to reconstruct enough of\
    \ the state of a TCP flow to\n   allow forwarding between an interior and exterior\
    \ node, even when the\n   filter starts operating after TCP enters the established\
    \ state.  In\n   this case, because the filter has not seen the TCP window-scale\n\
    \   option, it is not possible for the filter to enforce the TCP window\n   invariant\
    \ by dropping out-of-window segments.\n   REC-32: The TCP window invariant MUST\
    \ NOT be enforced on flows for\n   which the filter did not detect whether the\
    \ window-scale option (see\n   [RFC1323]) was sent in the 3-way handshake or simultaneous-open.\n\
    \   A stateful filter can allow an existing state record to be reused by\n   an\
    \ externally initiated flow if its security policy permits.  Several\n   different\
    \ policies are possible, as described in [RFC4787] and\n   extended in [RFC5382].\n\
    \   REC-33: If application transparency is most important, then a\n   stateful\
    \ packet filter SHOULD have \"endpoint-independent filtering\"\n   behavior for\
    \ TCP.  If a more stringent filtering behavior is most\n   important, then a filter\
    \ SHOULD have \"address-dependent filtering\"\n   behavior.  The filtering behavior\
    \ MAY be an option configurable by\n   the network administrator, and it MAY be\
    \ independent of the filtering\n   behavior for UDP and other protocols.  Filtering\
    \ behavior SHOULD be\n   endpoint independent by DEFAULT in gateways intended\
    \ for provisioning\n   without service-provider management.\n   If an inbound\
    \ SYN packet is filtered, either because a corresponding\n   state record does\
    \ not exist or because of the filter's normal\n   behavior, a filter has two basic\
    \ choices: to discard the packet\n   silently, or to signal an error to the sender.\
    \  Signaling an error\n   through ICMPv6 messages allows the sender to detect\
    \ that the SYN did\n   not reach the intended destination.  Discarding the packet,\
    \ on the\n   other hand, allows applications to perform simultaneous-open more\n\
    \   reliably.  A more detailed discussion of this issue can be found in\n   [RFC5382],\
    \ but the basic outcome of it is that filters need to wait\n   on signaling errors\
    \ until simultaneous-open will not be impaired.\n   REC-34: By DEFAULT, a gateway\
    \ MUST respond with an ICMPv6\n   \"Destination Unreachable\" error code 1 (Communication\
    \ with\n   destination administratively prohibited) to any unsolicited inbound\n\
    \   SYN packet after waiting at least 6 seconds without first forwarding\n   the\
    \ associated outbound SYN or SYN/ACK from the interior peer.\n   A TCP filter\
    \ maintains state associated with in-progress connections\n   and established\
    \ flows.  Because of this, a filter is susceptible to a\n   resource-exhaustion\
    \ attack whereby an attacker (or virus) on the\n   interior attempts to cause\
    \ the filter to exhaust its capacity for\n   creating state records.  To defend\
    \ against such attacks, a filter\n   needs to abandon unused state records after\
    \ a sufficiently long\n   period of idleness.\n   A common method used for TCP\
    \ filters in IPv4/NAT gateways is to\n   abandon preferentially flow state records\
    \ for crashed endpoints,\n   followed by closed flows and partially open flows.\
    \  A gateway can\n   check if an endpoint for a session has crashed by sending\
    \ a TCP keep-\n   alive packet on behalf of the other endpoint and receiving a\
    \ TCP RST\n   packet in response.  If the gateway cannot determine whether the\n\
    \   endpoint is active, then the associated state record needs to be\n   retained\
    \ until the TCP flow has been idle for some time.\n      Note: An established\
    \ TCP flow can stay idle (but live)\n      indefinitely; hence, there is no fixed\
    \ value for an idle-timeout\n      that accommodates all applications.  However,\
    \ a large idle-timeout\n      motivated by recommendations in [RFC1122] and [RFC4294]\
    \ can reduce\n      the chances of abandoning a live flow.\n   TCP flows can stay\
    \ in the established phase indefinitely without\n   exchanging packets.  Some\
    \ end-hosts can be configured to send keep-\n   alive packets on such idle flows;\
    \ by default, such packets are sent\n   every two hours, if enabled [RFC1122].\
    \  Consequently, a filter that\n   waits for slightly over two hours can detect\
    \ idle flows with keep-\n   alive packets being sent at the default rate.  TCP\
    \ flows in the\n   partially open or closing phases, on the other hand, can stay\
    \ idle\n   for at most four minutes while waiting for in-flight packets to be\n\
    \   delivered [RFC1122].\n   The \"established flow idle-timeout\" for a stateful\
    \ packet filter is\n   defined as the minimum time a TCP flow in the established\
    \ phase must\n   remain idle before the filter considers the associated state\
    \ record a\n   candidate for collection.  The \"transitory flow idle-timeout\"\
    \ for a\n   filter is defined as the minimum time a TCP flow in the partially\n\
    \   open or closing phases must remain idle before the filter considers\n   the\
    \ associated state record a candidate for collection.  TCP flows in\n   the TIME-WAIT\
    \ state are not affected by the \"transitory flow idle-\n   timeout\" parameter.\n\
    \   REC-35: If a gateway cannot determine whether the endpoints of a TCP\n   flow\
    \ are active, then it MAY abandon the state record if it has been\n   idle for\
    \ some time.  In such cases, the value of the \"established\n   flow idle-timeout\"\
    \ MUST NOT be less than two hours four minutes, as\n   discussed in [RFC5382].\
    \  The value of the \"transitory flow idle-\n   timeout\" MUST NOT be less than\
    \ four minutes.  The value of the idle-\n   timeouts MAY be configurable by the\
    \ network administrator.\n   Behavior for handling RST packets or TCP flows in\
    \ the TIME-WAIT state\n   is left unspecified.  A gateway MAY hold state for a\
    \ flow in the\n   TIME-WAIT state to accommodate retransmissions of the last ACK.\n\
    \   However, since the TIME-WAIT state is commonly encountered by\n   interior\
    \ endpoints properly closing the TCP flow, holding state for a\n   closed flow\
    \ can limit the throughput of flows through a gateway with\n   limited resources.\
    \  [RFC1337] discusses hazards associated with\n   TIME-WAIT assassination.\n\
    \   The handling of non-SYN packets for which there is no active state\n   record\
    \ is left unspecified.  Such packets can be received if the\n   gateway abandons\
    \ a live flow, or abandons a flow in the TIME-WAIT\n   state before the four-minute\
    \ TIME-WAIT period expires.  The decision\n   either to discard or to respond\
    \ with an ICMPv6 \"Destination\n   Unreachable\" error code 1 (Communication with\
    \ destination\n   administratively prohibited) is left up to the implementation.\n\
    \   Behavior for notifying endpoints when abandoning live flows is left\n   unspecified.\
    \  When a gateway abandons a live flow, for example due to\n   a timeout expiring,\
    \ the filter MAY send a TCP RST packet to each\n   endpoint on behalf of the other.\
    \  Sending a RST notification allows\n   endpoint applications to recover more\
    \ quickly; however, notifying\n   endpoints might not always be possible if, for\
    \ example, state records\n   are lost due to power interruption.\n   Several TCP\
    \ mechanisms depend on the reception of ICMPv6 error\n   messages triggered by\
    \ the transmission of TCP segments.  One such\n   mechanism is path MTU discovery,\
    \ which is required for correct\n   operation of TCP.\n   REC-36: If a gateway\
    \ forwards a TCP flow, it MUST also forward ICMPv6\n   \"Destination Unreachable\"\
    \ and \"Packet Too Big\" messages containing\n   TCP headers that match the flow\
    \ state record.\n   REC-37: Receipt of any sort of ICMPv6 message MUST NOT terminate\
    \ the\n   state record for a TCP flow.\n"
- title: 3.3.2.  SCTP Filters
  contents:
  - "3.3.2.  SCTP Filters\n   Because Stream Control Transmission Protocol (SCTP)\
    \ [RFC4960] flows\n   can be terminated at multiple network addresses, IPv6 simple\
    \ security\n   functions cannot achieve full transparency for SCTP applications.\
    \  In\n   multipath traversal scenarios, full transparency requires\n   coordination\
    \ between all the packet filter processes in the various\n   paths between the\
    \ endpoint network addresses.  Such coordination is\n   not \"simple\", and it\
    \ is, therefore, beyond the scope of this\n   recommendation.\n   However, some\
    \ SCTP applications are capable of tolerating the\n   inherent unipath restriction\
    \ of IPv6 simple security, even in\n   multipath traversal scenarios.  They expect\
    \ connection-oriented\n   filtering behaviors similar to those for TCP, but at\
    \ the level of\n   SCTP associations, not stream connections.  This section describes\n\
    \   specific recommendations for SCTP filtering for such traversal\n   scenarios.\n\
    \   An interior endpoint initiates SCTP associations through a stateful\n   packet\
    \ filter by sending a packet comprising a single INIT chunk.\n   The filter allocates\
    \ (or reuses) a filter state record for the\n   association.  The state record\
    \ defines the interior and exterior IP\n   addresses and the observed verification\
    \ tag used for forwarding\n   packets in that association.\n   Some peer-to-peer\
    \ SCTP applications use an alternate method of\n   association initiation, termed\
    \ \"simultaneous-open\", to traverse\n   stateful filters.  In the simultaneous-open\
    \ mode of operation, both\n   peers send INIT chunks at the same time to establish\
    \ an association.\n   Upon receiving the other end's INIT chunk, each end responds\
    \ with an\n   INIT-ACK packet, which is expected to traverse the same path in\n\
    \   reverse.  Because only one SCTP association may exist between any two\n  \
    \ network addresses, one of the peers in the simultaneous-open mode of\n   operation\
    \ will send an ERROR or ABORT chunk along with the INIT-ACK\n   chunk.  The association\
    \ is established at each endpoint once an\n   INIT-ACK chunk without an ERROR\
    \ or ABORT chunk is received at one\n   end.\n   To provide stateful packet filtering\
    \ service for SCTP, it is\n   necessary for a filter to receive, process, and\
    \ forward all packets\n   for an association that conform to valid transitions\
    \ of the SCTP\n   state machine ([RFC4960], Figure 3).\n   REC-38: All valid sequences\
    \ of SCTP packets (defined in [RFC4960])\n   MUST be forwarded for outbound associations\
    \ and explicitly permitted\n   inbound associations.  In particular, both the\
    \ normal SCTP\n   association establishment and the simultaneous-open mode of\
    \ operation\n   MUST be supported.\n   If an inbound INIT packet is filtered,\
    \ either because a corresponding\n   state record does not exist or because of\
    \ the filter's normal\n   behavior, a filter has two basic choices: to discard\
    \ the packet\n   silently, or to signal an error to the sender.  Signaling an\
    \ error\n   through ICMPv6 messages allows the sender to detect that the INIT\n\
    \   packet did not reach the intended destination.  Discarding the\n   packet,\
    \ on the other hand, allows applications to perform\n   simultaneous-open more\
    \ reliably.  Delays in signaling errors can\n   prevent the impairment of the\
    \ simultaneous-open mode of operation.\n   REC-39: By DEFAULT, a gateway MUST\
    \ respond with an ICMPv6\n   \"Destination Unreachable\" error code 1 (Communication\
    \ with\n   destination administratively prohibited), to any unsolicited inbound\n\
    \   INIT packet after waiting at least 6 seconds without first forwarding\n  \
    \ the associated outbound INIT from the interior peer.\n   An SCTP filter maintains\
    \ state associated with in-progress and\n   established associations.  Because\
    \ of this, a filter is susceptible\n   to a resource-exhaustion attack whereby\
    \ an attacker (or virus) on the\n   interior attempts to cause the filter to exhaust\
    \ its capacity for\n   creating state records.  To defend against such attacks,\
    \ a filter\n   needs to abandon unused state records after a sufficiently long\n\
    \   period of idleness.\n   A common method used for TCP filters in IPv4/NAT gateways\
    \ is to\n   abandon preferentially sessions for crashed endpoints, followed by\n\
    \   closed associations and partially opened associations.  A similar\n   method\
    \ is an option for SCTP filters in IPv6 gateways.  A gateway can\n   check if\
    \ an endpoint for an association has crashed by sending\n   HEARTBEAT chunks and\
    \ looking for the HEARTBEAT ACK response.  If the\n   gateway cannot determine\
    \ whether the endpoint is active, then the\n   associated state record needs to\
    \ be retained until the SCTP\n   association has been idle for some time.\n  \
    \    Note: An established SCTP association can stay idle (but live)\n      indefinitely;\
    \ hence, there is no fixed value of an idle-timeout\n      that accommodates all\
    \ applications.  However, a large idle-timeout\n      motivated by recommendations\
    \ in [RFC4294] can reduce the chances\n      of abandoning a live association.\n\
    \   SCTP associations can stay in the ESTABLISHED state indefinitely\n   without\
    \ exchanging packets.  Some end-hosts can be configured to send\n   HEARTBEAT\
    \ chunks on such idle associations, but [RFC4960] does not\n   specify (or even\
    \ suggest) a default time interval.  A filter that\n   waits for slightly over\
    \ two hours can detect idle associations with\n   HEARTBEAT packets being sent\
    \ at the same rate as most hosts use for\n   TCP keep-alive, which is a reasonably\
    \ similar system for this\n   purpose.  SCTP associations in the partially open\
    \ or closing states,\n   on the other hand, can stay idle for at most four minutes\
    \ while\n   waiting for in-flight packets to be delivered (assuming the suggested\n\
    \   SCTP protocol parameter values in Section 15 of [RFC4960]).\n   The \"established\
    \ association idle-timeout\" for a stateful packet\n   filter is defined as the\
    \ minimum time an SCTP association in the\n   established phase must remain idle\
    \ before the filter considers the\n   corresponding state record a candidate for\
    \ collection.  The\n   \"transitory association idle-timeout\" for a filter is\
    \ defined as the\n   minimum time an SCTP association in the partially open or\
    \ closing\n   phases must remain idle before the filter considers the corresponding\n\
    \   state record a candidate for collection.\n   REC-40: If a gateway cannot determine\
    \ whether the endpoints of an\n   SCTP association are active, then it MAY abandon\
    \ the state record if\n   it has been idle for some time.  In such cases, the\
    \ value of the\n   \"established association idle-timeout\" MUST NOT be less than\n\
    \   two hours four minutes.  The value of the \"transitory association\n   idle-timeout\"\
    \ MUST NOT be less than four minutes.  The value of the\n   idle-timeouts MAY\
    \ be configurable by the network administrator.\n   Behavior for handling ERROR\
    \ and ABORT packets is left unspecified.  A\n   gateway MAY hold state for an\
    \ association after its closing phases\n   have completed to accommodate retransmissions\
    \ of its final SHUTDOWN\n   ACK packets.  However, holding state for a closed\
    \ association can\n   limit the throughput of associations traversing a gateway\
    \ with\n   limited resources.  The discussion in [RFC1337] regarding the hazards\n\
    \   of TIME-WAIT assassination is relevant.\n   The handling of inbound non-INIT\
    \ packets for which there is no active\n   state record is left unspecified. \
    \ Such packets can be received if\n   the gateway abandons a live flow, or abandons\
    \ an association in the\n   closing states before the transitory association idle-timeout\n\
    \   expires.  The decision either to discard or to respond with an ICMPv6\n  \
    \ \"Destination Unreachable\" error code 1 (Communication with\n   destination\
    \ administratively prohibited) is left to the\n   implementation.\n   Behavior\
    \ for notifying endpoints when abandoning live associations is\n   left unspecified.\
    \  When a gateway abandons a live association, for\n   example due to a timeout\
    \ expiring, the filter MAY send an ABORT\n   packet to each endpoint on behalf\
    \ of the other.  Sending an ABORT\n   notification allows endpoint applications\
    \ to recover more quickly;\n   however, notifying endpoints might not always be\
    \ possible if, for\n   example, state records are lost due to power interruption.\n\
    \   Several SCTP mechanisms depend on the reception of ICMPv6 error\n   messages\
    \ triggered by the transmission of SCTP packets.\n   REC-41: If a gateway forwards\
    \ an SCTP association, it MUST also\n   forward ICMPv6 \"Destination Unreachable\"\
    \ and \"Packet Too Big\"\n   messages containing SCTP headers that match the association\
    \ state\n   record.\n   REC-42: Receipt of any sort of ICMPv6 message MUST NOT\
    \ terminate the\n   state record for an SCTP association.\n"
- title: 3.3.3.  DCCP Filters
  contents:
  - "3.3.3.  DCCP Filters\n   The connection semantics described in the \"Datagram\
    \ Congestion\n   Control Protocol (DCCP)\" [RFC4340] are very similar to those\
    \ of TCP.\n   An interior endpoint initiates a DCCP flow through a stateful packet\n\
    \   filter by sending a DCCP-Request packet.  Simultaneous-open is not\n   defined\
    \ for DCCP.\n   In order to provide stateful packet filtering service for DCCP,\
    \ it is\n   necessary for a filter to receive, process, and forward all packets\n\
    \   for a flow that conform to valid transitions of the DCCP state\n   machine\
    \ ([RFC4340], Section 8).\n   REC-43: All valid sequences of DCCP packets (defined\
    \ in [RFC4340])\n   MUST be forwarded for all flows to exterior servers, and for\
    \ any\n   flows to interior servers that have explicitly permitted service\n \
    \  codes.\n   It is possible to reconstruct enough of the state of a DCCP flow\
    \ to\n   allow forwarding between an interior and exterior node, even when the\n\
    \   filter starts operating after DCCP enters the OPEN state.  Also, a\n   filter\
    \ can allow an existing state record to be reused by an\n   externally initiated\
    \ flow if its security policy permits.  As with\n   TCP, several different policies\
    \ are possible, with a good discussion\n   of the issue involved presented in\
    \ [RFC4787] and extended in\n   [RFC5382].\n   If an inbound DCCP-Request packet\
    \ is filtered, either because a\n   corresponding state record does not already\
    \ exist for it or because\n   of the filter's normal behavior of refusing flows\
    \ not explicitly\n   permitted, then a filter has two basic choices: to discard\
    \ the packet\n   silently, or to signal an error to the sender.  Signaling an\
    \ error\n   through ICMPv6 messages allows the sender to detect that the\n   DCCP-Request\
    \ did not reach the intended destination.  Discarding the\n   packet, on the other\
    \ hand, only delays the failure to connect and\n   provides no measurable security.\n\
    \   A DCCP filter maintains state associated with in-progress connections\n  \
    \ and established flows.  Because of this, a filter is susceptible to a\n   resource-exhaustion\
    \ attack whereby an attacker (or virus) on the\n   interior attempts to cause\
    \ the filter to exhaust its capacity for\n   creating state records.  To prevent\
    \ such an attack, a filter needs to\n   abandon unused state records after a sufficiently\
    \ long period of\n   idleness.\n   A common method used for TCP filters in IPv4/NAT\
    \ gateways is to\n   abandon preferentially sessions for crashed endpoints, followed\
    \ by\n   closed TCP flows and partially open flows.  No such method exists for\n\
    \   DCCP, and flows can stay in the OPEN phase indefinitely without\n   exchanging\
    \ packets.  Hence, there is no fixed value for an idle-\n   timeout that accommodates\
    \ all applications.  However, a large idle-\n   timeout motivated by recommendations\
    \ in [RFC4294] can reduce the\n   chances of abandoning a live flow.\n   DCCP\
    \ flows in the partially open or closing phases can stay idle for\n   at most\
    \ eight minutes while waiting for in-flight packets to be\n   delivered.\n   The\
    \ \"open flow idle-timeout\" for a stateful packet filter is defined\n   as the\
    \ minimum time a DCCP flow in the open state must remain idle\n   before the filter\
    \ considers the associated state record a candidate\n   for collection.  The \"\
    transitory flow idle-timeout\" for a filter is\n   defined as the minimum time\
    \ a DCCP flow in the partially open or\n   closing phases must remain idle before\
    \ the filter considers the\n   associated state record a candidate for collection.\
    \  DCCP flows in\n   the TIMEWAIT state are not affected by the \"transitory flow\
    \ idle-\n   timeout\" parameter.\n   REC-44: A gateway MAY abandon a DCCP state\
    \ record if it has been idle\n   for some time.  In such cases, the value of the\
    \ \"open flow idle-\n   timeout\" MUST NOT be less than two hours four minutes.\
    \  The value of\n   the \"transitory flow idle-timeout\" MUST NOT be less than\
    \ eight\n   minutes.  The value of the idle-timeouts MAY be configurable by the\n\
    \   network administrator.\n   Behavior for handling DCCP-Reset packets or flows\
    \ in the TIMEWAIT\n   state is left unspecified.  A gateway MAY hold state for\
    \ a flow in\n   the TIMEWAIT state to accommodate retransmissions of the last\n\
    \   DCCP-Reset.  However, since the TIMEWAIT state is commonly\n   encountered\
    \ by interior endpoints properly closing the DCCP flow,\n   holding state for\
    \ a closed flow can limit the throughput of flows\n   through a gateway with limited\
    \ resources.  [RFC1337] discusses\n   hazards associated with TIME-WAIT assassination\
    \ in TCP, and similar\n   hazards exist for DCCP.\n   The handling of non-SYN\
    \ packets for which there is no active state\n   record is left unspecified. \
    \ Such packets can be received if the\n   gateway abandons a live flow, or abandons\
    \ a flow in the TIMEWAIT\n   state before the four-minute 2MSL period (two times\
    \ the maximum\n   segment lifetime [RFC4340]) expires.  The decision either to\
    \ discard\n   or to respond with an ICMPv6 \"Destination Unreachable\" error code\
    \ 1\n   (Communication with destination administratively prohibited) is left\n\
    \   up to the implementation.\n   Behavior for notifying endpoints when abandoning\
    \ live flows is left\n   unspecified.  When a gateway abandons a live flow, for\
    \ example due to\n   a timeout expiring, the filter MAY send a DCCP-Reset packet\
    \ to each\n   endpoint on behalf of the other.  Sending a DCCP-Reset notification\n\
    \   allows endpoint applications to recover more quickly; however,\n   notifying\
    \ endpoints might not always be possible if, for example,\n   state records are\
    \ lost due to power interruption.\n   Several DCCP mechanisms depend on the reception\
    \ of ICMPv6 error\n   messages triggered by the transmission of DCCP packets.\
    \  One such\n   mechanism is path MTU discovery, which is required for correct\n\
    \   operation.\n   REC-45: If an Internet gateway forwards a DCCP flow, it MUST\
    \ also\n   forward ICMPv6 \"Destination Unreachable\" and \"Packet Too Big\"\n\
    \   messages containing DCCP headers that match the flow state record.\n   REC-46:\
    \ Receipt of any sort of ICMPv6 message MUST NOT terminate the\n   state record\
    \ for a DCCP flow.\n"
- title: 3.3.4.  Level 3 Multihoming Shim Protocol for IPv6 (Shim6)
  contents:
  - "3.3.4.  Level 3 Multihoming Shim Protocol for IPv6 (Shim6)\n   While IPv6 simple\
    \ security is applicable to residential networks with\n   only one Internet service\
    \ provider at a time, the use of the Level 3\n   Multihoming Shim Protocol for\
    \ IPv6 (Shim6) [RFC5533] is necessary for\n   communications with some multihomed\
    \ exterior destinations.  No\n   special recommendations are made in this document\
    \ for processing the\n   Shim6 message format (protocol 140) beyond the recommendations\
    \ in\n   Section 3.2.2.  The content of the Shim6 payload extension header may\n\
    \   be ignored.\n   REC-47: Valid sequences of packets bearing Shim6 payload extension\n\
    \   headers in their outer IP extension header chains MUST be forwarded\n   for\
    \ all outbound and explicitly permitted flows.  The content of the\n   Shim6 payload\
    \ extension header MAY be ignored for the purpose of\n   state tracking.\n"
- title: 3.4.  Passive Listeners
  contents:
  - "3.4.  Passive Listeners\n   Some applications expect to solicit traffic from\
    \ exterior nodes\n   without advance knowledge of the exterior addresses of their\
    \ peers.\n   This requirement is met by IPv4/NAT gateways, typically by the use\
    \ of\n   either the NAT Port Mapping Protocol [NAT-PMP] or the Universal Plug\n\
    \   and Play Internet Gateway Device [UPnP-IGD] standardized device\n   control\
    \ protocol.  On IPv4/NAT networks connected by gateways without\n   such services,\
    \ applications must use techniques like Session\n   Traversal Utilities for NAT\
    \ (STUN) [RFC5389] to obtain and maintain\n   connectivity, despite the translation\
    \ and filtering effects of NAT.\n   While NAT for IPv6 is unlikely to be used\
    \ in most residential\n   gateways, the simple security functions recommended\
    \ by this document,\n   and their filtering effects, are derived from comparable\
    \ functions\n   already in widespread use on the IPv4 Internet.  A similar barrier\
    \ to\n   communication at passive listeners is a natural outcome of the\n   deployment\
    \ of NAT for IPv6.  To avoid the need for IPv6 applications\n   to use techniques\
    \ like STUN for opening and maintaining dynamic\n   filter state, something similar\
    \ to NAT-PMP and UPnP-IGD, but without\n   actually supporting NAT, could be deployed.\
    \  Alas, no consensus has\n   yet emerged in the Internet engineering community\
    \ as to what is most\n   appropriate for residential IPv6 usage scenarios.\n \
    \  One proposal that has been offered is the Application Listener\n   Discovery\
    \ Protocol [WOODYATT-ALD] document.  It remains to be seen\n   whether the Internet\
    \ Gateway Device profile of the Universal Plug and\n   Play protocol will be extended\
    \ for IPv6.  Other proposals of note\n   include the Middlebox Communication Protocol\
    \ [RFC5189] and the Next\n   Steps in Signaling framework [RFC4080].  Until a\
    \ consensus emerges\n   around a specific method, the following recommendations\
    \ are the best\n   guidance available.\n   REC-48: Internet gateways with IPv6\
    \ simple security capabilities\n   SHOULD implement a protocol to permit applications\
    \ to solicit inbound\n   traffic without advance knowledge of the addresses of\
    \ exterior nodes\n   with which they expect to communicate.\n   REC-49: Internet\
    \ gateways with IPv6 simple security capabilities MUST\n   provide an easily selected\
    \ configuration option that permits a\n   \"transparent mode\" of operation that\
    \ forwards all unsolicited flows\n   regardless of forwarding direction, i.e.,\
    \ not to use the IPv6 simple\n   security capabilities of the gateway.  The transparent\
    \ mode of\n   operation MAY be the default configuration.\n   In general, \"transparent\
    \ mode\" will enable more flexibility and\n   reliability for applications that\
    \ require devices to be contacted\n   inside the home directly, particularly in\
    \ the absence of a protocol\n   as described in REC-48.  Operating in transparent\
    \ mode may come at\n   the expense of security if there are IPv6 nodes in the\
    \ home that do\n   not have their own host-based firewall capability and require\
    \ a\n   firewall in the gateway in order not to be compromised.\n"
- title: 3.5.  Management Applications
  contents:
  - "3.5.  Management Applications\n   Subscriber-managed residential gateways are\
    \ unlikely ever to be\n   completely zero-configuration, but their administrators\
    \ will very\n   often possess no particular expertise in Internet engineering.\
    \  In\n   general, the specification of management interfaces for residential\n\
    \   gateways is out of scope for this document, but the security of\n   subscriber-managed\
    \ gateways merits special attention here.\n   REC-50: By DEFAULT, subscriber-managed\
    \ residential gateways MUST NOT\n   offer management application services to the\
    \ exterior network.\n"
- title: 4.  Summary of Recommendations
  contents:
  - "4.  Summary of Recommendations\n   This section collects all of the recommendations\
    \ made in this\n   document into a convenient list.\n   REC-1   Packets bearing\
    \ multicast source addresses in their outer\n           IPv6 headers MUST NOT\
    \ be forwarded or transmitted on any\n           interface.\n   REC-2   Packets\
    \ bearing multicast destination addresses in their\n           outer IPv6 headers\
    \ of equal or narrower scope (see \"IPv6\n           Scoped Address Architecture\"\
    \ [RFC4007]) than the configured\n           scope boundary level of the gateway\
    \ MUST NOT be forwarded in\n           any direction.  The DEFAULT scope boundary\
    \ level SHOULD be\n           organization-local scope, and it SHOULD be configurable\
    \ by\n           the network administrator.\n   REC-3   Packets bearing source\
    \ and/or destination addresses forbidden\n           to appear in the outer headers\
    \ of packets transmitted over\n           the public Internet MUST NOT be forwarded.\
    \  In particular,\n           site-local addresses are deprecated by [RFC3879],\
    \ and\n           [RFC5156] explicitly forbids the use of address blocks of\n\
    \           types IPv4-Mapped Addresses, IPv4-Compatible Addresses,\n        \
    \   Documentation Prefix, and Overlay Routable Cryptographic Hash\n          \
    \ IDentifiers (ORCHID).\n   REC-4   Packets bearing deprecated extension headers\
    \ prior to their\n           first upper-layer-protocol header SHOULD NOT be forwarded\
    \ or\n           transmitted on any interface.  In particular, all packets\n \
    \          with routing extension header type 0 [RFC2460] preceding the\n    \
    \       first upper-layer-protocol header MUST NOT be forwarded.  See\n      \
    \     [RFC5095] for additional background.\n   REC-5   Outbound packets MUST NOT\
    \ be forwarded if the source address\n           in their outer IPv6 header does\
    \ not have a unicast prefix\n           configured for use by globally reachable\
    \ nodes on the\n           interior network.\n   REC-6   Inbound packets MUST\
    \ NOT be forwarded if the source address\n           in their outer IPv6 header\
    \ has a global unicast prefix\n           assigned for use by globally reachable\
    \ nodes on the interior\n           network.\n   REC-7   By DEFAULT, packets with\
    \ unique local source and/or\n           destination addresses [RFC4193] SHOULD\
    \ NOT be forwarded to or\n           from the exterior network.\n   REC-8   By\
    \ DEFAULT, inbound DNS queries received on exterior\n           interfaces MUST\
    \ NOT be processed by any integrated DNS\n           resolving server.\n   REC-9\
    \   Inbound DHCPv6 discovery packets [RFC3315] received on\n           exterior\
    \ interfaces MUST NOT be processed by any integrated\n           DHCPv6 server\
    \ or relay agent.\n   REC-10  IPv6 gateways SHOULD NOT forward ICMPv6 \"Destination\n\
    \           Unreachable\" and \"Packet Too Big\" messages containing IP\n    \
    \       headers that do not match generic upper-layer transport state\n      \
    \     records.\n   REC-11  If application transparency is most important, then\
    \ a\n           stateful packet filter SHOULD have \"endpoint-independent\n  \
    \         filtering\" behavior for generic upper-layer transport\n           protocols.\
    \  If a more stringent filtering behavior is most\n           important, then\
    \ a filter SHOULD have \"address-dependent\n           filtering\" behavior. \
    \ The filtering behavior MAY be an option\n           configurable by the network\
    \ administrator, and it MAY be\n           independent of the filtering behavior\
    \ for other protocols.\n           Filtering behavior SHOULD be endpoint independent\
    \ by DEFAULT\n           in gateways intended for provisioning without service-\n\
    \           provider management.\n   REC-12  Filter state records for generic\
    \ upper-layer transport\n           protocols MUST NOT be deleted or recycled\
    \ until an idle timer\n           not less than two minutes has expired without\
    \ having\n           forwarded a packet matching the state in some configurable\n\
    \           amount of time.  By DEFAULT, the idle timer for such state\n     \
    \      records is five minutes.\n   REC-13  Residential IPv6 gateways SHOULD provide\
    \ a convenient means\n           to update their firmware securely, for the installation\
    \ of\n           security patches and other manufacturer-recommended changes.\n\
    \   REC-14  A state record for a UDP flow where both source and\n           destination\
    \ ports are outside the well-known port range\n           (ports 0-1023) MUST\
    \ NOT expire in less than two minutes of\n           idle time.  The value of\
    \ the UDP state record idle timer MAY\n           be configurable.  The DEFAULT\
    \ is five minutes.\n   REC-15  A state record for a UDP flow where one or both\
    \ of the source\n           and destination ports are in the well-known port range\n\
    \           (ports 0-1023) MAY expire after a period of idle time shorter\n  \
    \         than two minutes to facilitate the operation of the IANA-\n        \
    \   registered service assigned to the port in question.\n   REC-16  A state record\
    \ for a UDP flow MUST be refreshed when a packet\n           is forwarded from\
    \ the interior to the exterior, and it MAY be\n           refreshed when a packet\
    \ is forwarded in the reverse\n           direction.\n   REC-17  If application\
    \ transparency is most important, then a\n           stateful packet filter SHOULD\
    \ have \"endpoint-independent\n           filtering\" behavior for UDP.  If a\
    \ more stringent filtering\n           behavior is most important, then a filter\
    \ SHOULD have\n           \"address-dependent filtering\" behavior.  The filtering\n\
    \           behavior MAY be an option configurable by the network\n          \
    \ administrator, and it MAY be independent of the filtering\n           behavior\
    \ for TCP and other protocols.  Filtering behavior\n           SHOULD be endpoint\
    \ independent by DEFAULT in gateways\n           intended for provisioning without\
    \ service-provider\n           management.\n   REC-18  If a gateway forwards a\
    \ UDP flow, it MUST also forward ICMPv6\n           \"Destination Unreachable\"\
    \ and \"Packet Too Big\" messages\n           containing UDP headers that match\
    \ the flow state record.\n   REC-19  Receipt of any sort of ICMPv6 message MUST\
    \ NOT terminate the\n           state record for a UDP flow.\n   REC-20  UDP-Lite\
    \ flows [RFC3828] SHOULD be handled in the same way as\n           UDP flows,\
    \ except that the upper-layer transport protocol\n           identifier for UDP-Lite\
    \ is not the same as UDP; therefore,\n           UDP packets MUST NOT match UDP-Lite\
    \ state records, and vice\n           versa.\n   REC-21  In their DEFAULT operating\
    \ mode, IPv6 gateways MUST NOT\n           prohibit the forwarding of packets,\
    \ to and from legitimate\n           node addresses, with destination extension\
    \ headers of type\n           \"Authentication Header (AH)\" [RFC4302] in their\
    \ outer IP\n           extension header chain.\n   REC-22  In their DEFAULT operating\
    \ mode, IPv6 gateways MUST NOT\n           prohibit the forwarding of packets,\
    \ to and from legitimate\n           node addresses, with an upper-layer protocol\
    \ of type\n           \"Encapsulating Security Payload (ESP)\" [RFC4303] in their\n\
    \           outer IP extension header chain.\n   REC-23  If a gateway forwards\
    \ an ESP flow, it MUST also forward (in\n           the reverse direction) ICMPv6\
    \ \"Destination Unreachable\" and\n           \"Packet Too Big\" messages containing\
    \ ESP headers that match\n           the flow state record.\n   REC-24  In their\
    \ DEFAULT operating mode, IPv6 gateways MUST NOT\n           prohibit the forwarding\
    \ of any UDP packets, to and from\n           legitimate node addresses, with\
    \ a destination port of 500,\n           i.e., the port reserved by IANA for the\
    \ Internet Key Exchange\n           (IKE) Protocol [RFC5996].\n   REC-25  In all\
    \ operating modes, IPv6 gateways SHOULD use filter state\n           records for\
    \ Encapsulating Security Payload (ESP) [RFC4303]\n           that are indexable\
    \ by a 3-tuple comprising the interior node\n           address, the exterior\
    \ node address, and the ESP protocol\n           identifier.  In particular, the\
    \ IPv4/NAT method of indexing\n           state records also by security parameters\
    \ index (SPI) SHOULD\n           NOT be used.  Likewise, any mechanism that depends\
    \ on\n           detection of Internet Key Exchange (IKE) [RFC5996]\n        \
    \   initiations SHOULD NOT be used.\n   REC-26  In their DEFAULT operating mode,\
    \ IPv6 gateways MUST NOT\n           prohibit the forwarding of packets, to and\
    \ from legitimate\n           node addresses, with destination extension headers\
    \ of type\n           \"Host Identity Protocol (HIP)\" [RFC5201] in their outer\
    \ IP\n           extension header chain.\n   REC-27  The state records for flows\
    \ initiated by outbound packets\n           that bear a Home Address destination\
    \ option [RFC3775] are\n           distinguished by the addition of the home address\
    \ of the flow\n           as well as the interior care-of address.  IPv6 gateways\
    \ MUST\n           NOT prohibit the forwarding of any inbound packets bearing\n\
    \           type 2 routing headers, which otherwise match a flow state\n     \
    \      record, and where A) the address in the destination field of\n        \
    \   the IPv6 header matches the interior care-of address of the\n           flow,\
    \ and B) the Home Address field in the Type 2 Routing\n           Header matches\
    \ the home address of the flow.\n   REC-28  Valid sequences of Mobility Header\
    \ [RFC3775] packets MUST be\n           forwarded for all outbound and explicitly\
    \ permitted inbound\n           Mobility Header flows.\n   REC-29  If a gateway\
    \ forwards a Mobility Header [RFC3775] flow, then\n           it MUST also forward,\
    \ in both directions, the IPv4 and IPv6\n           packets that are encapsulated\
    \ in IPv6 associated with the\n           tunnel between the home agent and the\
    \ correspondent node.\n   REC-30  If a gateway forwards a Mobility Header [RFC3775]\
    \ flow, then\n           it MUST also forward (in the reverse direction) ICMPv6\n\
    \           \"Destination Unreachable\" and \"Packet Too Big\" messages\n    \
    \       containing any headers that match the associated flow state\n        \
    \   records.\n   REC-31  All valid sequences of TCP packets (defined in [RFC0793])\n\
    \           MUST be forwarded for outbound flows and explicitly permitted\n  \
    \         inbound flows.  In particular, both the normal TCP 3-way\n         \
    \  handshake mode of operation and the simultaneous-open mode of\n           operation\
    \ MUST be supported.\n   REC-32  The TCP window invariant MUST NOT be enforced\
    \ on flows for\n           which the filter did not detect whether the window-scale\n\
    \           option (see [RFC1323]) was sent in the 3-way handshake or\n      \
    \     simultaneous-open.\n   REC-33  If application transparency is most important,\
    \ then a\n           stateful packet filter SHOULD have \"endpoint-independent\n\
    \           filtering\" behavior for TCP.  If a more stringent filtering\n   \
    \        behavior is most important, then a filter SHOULD have\n           \"\
    address-dependent filtering\" behavior.  The filtering\n           behavior MAY\
    \ be an option configurable by the network\n           administrator, and it MAY\
    \ be independent of the filtering\n           behavior for UDP and other protocols.\
    \  Filtering behavior\n           SHOULD be endpoint independent by DEFAULT in\
    \ gateways\n           intended for provisioning without service-provider\n  \
    \         management.\n   REC-34  By DEFAULT, a gateway MUST respond with an ICMPv6\n\
    \           \"Destination Unreachable\" error code 1 (Communication with\n   \
    \        destination administratively prohibited), to any unsolicited\n      \
    \     inbound SYN packet after waiting at least 6 seconds without\n          \
    \ first forwarding the associated outbound SYN or SYN/ACK from\n           the\
    \ interior peer.\n   REC-35  If a gateway cannot determine whether the endpoints\
    \ of a TCP\n           flow are active, then it MAY abandon the state record if\
    \ it\n           has been idle for some time.  In such cases, the value of the\n\
    \           \"established flow idle-timeout\" MUST NOT be less than\n        \
    \   two hours four minutes, as discussed in [RFC5382].  The value\n          \
    \ of the \"transitory flow idle-timeout\" MUST NOT be less than\n           four\
    \ minutes.  The value of the idle-timeouts MAY be\n           configurable by\
    \ the network administrator.\n   REC-36  If a gateway forwards a TCP flow, it\
    \ MUST also forward ICMPv6\n           \"Destination Unreachable\" and \"Packet\
    \ Too Big\" messages\n           containing TCP headers that match the flow state\
    \ record.\n   REC-37  Receipt of any sort of ICMPv6 message MUST NOT terminate\
    \ the\n           state record for a TCP flow.\n   REC-38  All valid sequences\
    \ of SCTP packets (defined in [RFC4960])\n           MUST be forwarded for outbound\
    \ associations and explicitly\n           permitted inbound associations.  In\
    \ particular, both the\n           normal SCTP association establishment and the\
    \ simultaneous-\n           open mode of operation MUST be supported.\n   REC-39\
    \  By DEFAULT, a gateway MUST respond with an ICMPv6\n           \"Destination\
    \ Unreachable\" error code 1 (Communication with\n           destination administratively\
    \ prohibited) to any unsolicited\n           inbound INIT packet after waiting\
    \ at least 6 seconds without\n           first forwarding the associated outbound\
    \ INIT from the\n           interior peer.\n   REC-40  If a gateway cannot determine\
    \ whether the endpoints of an\n           SCTP association are active, then it\
    \ MAY abandon the state\n           record if it has been idle for some time.\
    \  In such cases, the\n           value of the \"established association idle-timeout\"\
    \ MUST NOT\n           be less than two hours four minutes.  The value of the\n\
    \           \"transitory association idle-timeout\" MUST NOT be less than\n  \
    \         four minutes.  The value of the idle-timeouts MAY be\n           configurable\
    \ by the network administrator.\n   REC-41  If a gateway forwards an SCTP association,\
    \ it MUST also\n           forward ICMPv6 \"Destination Unreachable\" and \"Packet\
    \ Too Big\"\n           messages containing SCTP headers that match the association\n\
    \           state record.\n   REC-42  Receipt of any sort of ICMPv6 message MUST\
    \ NOT terminate the\n           state record for an SCTP association.\n   REC-43\
    \  All valid sequences of DCCP packets (defined in [RFC4340])\n           MUST\
    \ be forwarded for all flows to exterior servers, and for\n           any flows\
    \ to interior servers with explicitly permitted\n           service codes.\n \
    \  REC-44  A gateway MAY abandon a DCCP state record if it has been\n        \
    \   idle for some time.  In such cases, the value of the \"open\n           flow\
    \ idle-timeout\" MUST NOT be less than two hours\n           four minutes.  The\
    \ value of the \"transitory flow idle-\n           timeout\" MUST NOT be less\
    \ than eight minutes.  The value of\n           the idle-timeouts MAY be configurable\
    \ by the network\n           administrator.\n   REC-45  If an Internet gateway\
    \ forwards a DCCP flow, it MUST also\n           forward ICMPv6 \"Destination\
    \ Unreachable\" and \"Packet Too Big\"\n           messages containing DCCP headers\
    \ that match the flow state\n           record.\n   REC-46  Receipt of any sort\
    \ of ICMPv6 message MUST NOT terminate the\n           state record for a DCCP\
    \ flow.\n   REC-47  Valid sequences of packets bearing Shim6 payload extension\n\
    \           headers in their outer IP extension header chains MUST be\n      \
    \     forwarded for all outbound and explicitly permitted flows.\n           The\
    \ content of the Shim6 payload extension header MAY be\n           ignored for\
    \ the purpose of state tracking.\n   REC-48  Internet gateways with IPv6 simple\
    \ security capabilities\n           SHOULD implement a protocol to permit applications\
    \ to solicit\n           inbound traffic without advance knowledge of the addresses\
    \ of\n           exterior nodes with which they expect to communicate.\n   REC-49\
    \  Internet gateways with IPv6 simple security capabilities MUST\n           provide\
    \ an easily selected configuration option that permits\n           a \"transparent\
    \ mode\" of operation that forwards all\n           unsolicited flows regardless\
    \ of forwarding direction, i.e.,\n           not to use the IPv6 simple security\
    \ capabilities of the\n           gateway.  The transparent mode of operation\
    \ MAY be the\n           default configuration.\n   REC-50  By DEFAULT, subscriber-managed\
    \ residential gateways MUST NOT\n           offer management application services\
    \ to the exterior\n           network.\n"
- title: 5.  Contributors
  contents:
  - "5.  Contributors\n   Comments and criticisms during the development of this document\
    \ were\n   received from the following IETF participants:\n            +-------------------+----------------------------+\n\
    \            | Jari Arkko        | Ran Atkinson               |\n            |\
    \ Fred Baker        | Norbert Bollow             |\n            | Cameron Byrne\
    \     | Brian Carpenter            |\n            | Remi Despres      | Arnaud\
    \ Ebalard             |\n            | Fabrice Fontaine  | Jun-ichiro \"itojun\"\
    \ Hagino |\n            | Thomas Herbst     | Christian Huitema          |\n \
    \           | Joel Jaeggli      | Cullen Jennings            |\n            |\
    \ Suresh Krishnan   | Erik Kline                 |\n            | Julien Laganier\
    \   | Kurt Erik Lindqvist        |\n            | Mohamed Boucadair | Keith Moore\
    \                |\n            | Robert Moskowitz  | Teemu Savolainen       \
    \    |\n            | Hemant Singh      | Yaron Sheffer              |\n     \
    \       | Mark Townsley     | Iljitsch van Beijnum       |\n            | Magnus\
    \ Westerlund | Dan Wing                   |\n            +-------------------+----------------------------+\n\
    \   The editor thanks them all for their contributions.\n   It must be noted that\
    \ a substantial portion of the text describing\n   the detailed requirements for\
    \ TCP and UDP filtering is derived or\n   transposed from [RFC4787] and [RFC5382].\
    \  The editors of those\n   documents, Francois Audet and Saikat Guha, also deserve\
    \ substantial\n   credit for the form of the present document.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   The IPv6 stateful filtering behavior described\
    \ in this document is\n   intended to be similar in function to the filtering\
    \ behavior of\n   commonly used IPv4/NAT gateways, which have been widely sold\
    \ as a\n   security tool for residential and small-office/home-office networks.\n\
    \   As noted in the Security Considerations section of [RFC2993], the\n   true\
    \ impact of these tools may be a reduction in security.  It may be\n   generally\
    \ assumed that the impacts discussed in that document related\n   to filtering\
    \ (and not translation) are to be expected with the simple\n   IPv6 security mechanisms\
    \ described here.\n   In particular, it is worth noting that stateful filters\
    \ create the\n   illusion of a security barrier, but without the managed intent\
    \ of a\n   firewall.  Appropriate security mechanisms implemented in the end\n\
    \   nodes, in conjunction with the [RFC4864] local network protection\n   methods,\
    \ function without reliance on network layer hacks and\n   transport filters that\
    \ may change over time.  Also, defined security\n   barriers assume that threats\
    \ originate in the exterior, which may\n   lead to practices that result in applications\
    \ being fully exposed to\n   interior attack and which therefore make breaches\
    \ much easier.\n   The security functions described in this document may be considered\n\
    \   redundant in the event that all IPv6 hosts using a particular gateway\n  \
    \ have their own IPv6 host firewall capabilities enabled.  At the time\n   of\
    \ this writing, the vast majority of commercially available\n   operating systems\
    \ with support for IPv6 include IPv6 host firewall\n   capability.\n   Also worth\
    \ noting explicitly, a practical side-effect of the\n   recommendations in Section\
    \ 3.2.4, to allow inbound IPsec and IKE\n   flows from exterior to interior, is\
    \ to facilitate more transparent\n   communication by the use of an unauthenticated\
    \ mode of IPsec, as\n   described in \"Better-Than-Nothing-Security: An Unauthenticated\
    \ Mode\n   of IPsec\" [RFC5386], and this may be a departure from expectations\
    \ of\n   transparency set by traditional IPv4/NAT residential gateways.\n   Finally,\
    \ residential gateways that implement simple security\n   functions are a bastion\
    \ between the interior and the exterior, and\n   therefore are a target of denial-of-service\
    \ attacks against the\n   interior network itself by processes designed to consume\
    \ the\n   resources of the gateway, e.g., a ping or SYN flood.  Gateways should\n\
    \   employ the same sorts of protection techniques as application servers\n  \
    \ on the Internet.\n   The IETF makes no statement, expressed or implied, as to\
    \ whether\n   using the capabilities described in this document ultimately improves\n\
    \   security for any individual users or for the Internet community as a\n   whole.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC0768]   Postel, J., \"User Datagram Protocol\"\
    , STD 6, RFC 768,\n               August 1980.\n   [RFC0793]   Postel, J., \"\
    Transmission Control Protocol\", STD 7,\n               RFC 793, September 1981.\n\
    \   [RFC1323]   Jacobson, V., Braden, B., and D. Borman, \"TCP Extensions\n  \
    \             for High Performance\", RFC 1323, May 1992.\n   [RFC2119]   Bradner,\
    \ S., \"Key words for use in RFCs to Indicate\n               Requirement Levels\"\
    , BCP 14, RFC 2119, March 1997.\n   [RFC2460]   Deering, S. and R. Hinden, \"\
    Internet Protocol, Version 6\n               (IPv6) Specification\", RFC 2460,\
    \ December 1998.\n   [RFC3315]   Droms, R., Bound, J., Volz, B., Lemon, T., Perkins,\
    \ C.,\n               and M. Carney, \"Dynamic Host Configuration Protocol for\n\
    \               IPv6 (DHCPv6)\", RFC 3315, July 2003.\n   [RFC3775]   Johnson,\
    \ D., Perkins, C., and J. Arkko, \"Mobility Support\n               in IPv6\"\
    , RFC 3775, June 2004.\n   [RFC3828]   Larzon, L-A., Degermark, M., Pink, S.,\
    \ Jonsson, L-E., and\n               G. Fairhurst, \"The Lightweight User Datagram\
    \ Protocol\n               (UDP-Lite)\", RFC 3828, July 2004.\n   [RFC3879]  \
    \ Huitema, C. and B. Carpenter, \"Deprecating Site Local\n               Addresses\"\
    , RFC 3879, September 2004.\n   [RFC4007]   Deering, S., Haberman, B., Jinmei,\
    \ T., Nordmark, E., and\n               B. Zill, \"IPv6 Scoped Address Architecture\"\
    , RFC 4007,\n               March 2005.\n   [RFC4193]   Hinden, R. and B. Haberman,\
    \ \"Unique Local IPv6 Unicast\n               Addresses\", RFC 4193, October 2005.\n\
    \   [RFC4302]   Kent, S., \"IP Authentication Header\", RFC 4302,\n          \
    \     December 2005.\n   [RFC4303]   Kent, S., \"IP Encapsulating Security Payload\
    \ (ESP)\",\n               RFC 4303, December 2005.\n   [RFC4340]   Kohler, E.,\
    \ Handley, M., and S. Floyd, \"Datagram\n               Congestion Control Protocol\
    \ (DCCP)\", RFC 4340,\n               March 2006.\n   [RFC4443]   Conta, A., Deering,\
    \ S., and M. Gupta, \"Internet Control\n               Message Protocol (ICMPv6)\
    \ for the Internet Protocol\n               Version 6 (IPv6) Specification\",\
    \ RFC 4443, March 2006.\n   [RFC4787]   Audet, F. and C. Jennings, \"Network Address\
    \ Translation\n               (NAT) Behavioral Requirements for Unicast UDP\"\
    , BCP 127,\n               RFC 4787, January 2007.\n   [RFC4890]   Davies, E.\
    \ and J. Mohacsi, \"Recommendations for Filtering\n               ICMPv6 Messages\
    \ in Firewalls\", RFC 4890, May 2007.\n   [RFC4960]   Stewart, R., \"Stream Control\
    \ Transmission Protocol\",\n               RFC 4960, September 2007.\n   [RFC5095]\
    \   Abley, J., Savola, P., and G. Neville-Neil, \"Deprecation\n              \
    \ of Type 0 Routing Headers in IPv6\", RFC 5095,\n               December 2007.\n\
    \   [RFC5156]   Blanchet, M., \"Special-Use IPv6 Addresses\", RFC 5156,\n    \
    \           April 2008.\n   [RFC5201]   Moskowitz, R., Nikander, P., Jokela, P.,\
    \ and T.\n               Henderson, \"Host Identity Protocol\", RFC 5201,\n  \
    \             April 2008.\n   [RFC5996]   Kaufman, C., Hoffman, P., Nir, Y., and\
    \ P. Eronen,\n               \"Internet Key Exchange Protocol Version 2 (IKEv2)\"\
    ,\n               RFC 5996, September 2010.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [NAT-PMP]   Cheshire, S., Krochmal, M., and\
    \ K. Sekar, \"NAT Port\n               Mapping Protocol (NAT-PMP)\", Work in Progress,\n\
    \               April 2008.\n   [RFC1122]   Braden, R., \"Requirements for Internet\
    \ Hosts -\n               Communication Layers\", STD 3, RFC 1122, October 1989.\n\
    \   [RFC1337]   Braden, B., \"TIME-WAIT Assassination Hazards in TCP\",\n    \
    \           RFC 1337, May 1992.\n   [RFC1918]   Rekhter, Y., Moskowitz, R., Karrenberg,\
    \ D., Groot, G.,\n               and E. Lear, \"Address Allocation for Private\
    \ Internets\",\n               BCP 5, RFC 1918, February 1996.\n   [RFC1981] \
    \  McCann, J., Deering, S., and J. Mogul, \"Path MTU\n               Discovery\
    \ for IP version 6\", RFC 1981, August 1996.\n   [RFC2473]   Conta, A. and S.\
    \ Deering, \"Generic Packet Tunneling in\n               IPv6 Specification\"\
    , RFC 2473, December 1998.\n   [RFC2827]   Ferguson, P. and D. Senie, \"Network\
    \ Ingress Filtering:\n               Defeating Denial of Service Attacks which\
    \ employ IP\n               Source Address Spoofing\", BCP 38, RFC 2827, May 2000.\n\
    \   [RFC2993]   Hain, T., \"Architectural Implications of NAT\", RFC 2993,\n \
    \              November 2000.\n   [RFC3704]   Baker, F. and P. Savola, \"Ingress\
    \ Filtering for\n               Multihomed Networks\", BCP 84, RFC 3704, March\
    \ 2004.\n   [RFC4080]   Hancock, R., Karagiannis, G., Loughney, J., and S. Van\n\
    \               den Bosch, \"Next Steps in Signaling (NSIS): Framework\",\n  \
    \             RFC 4080, June 2005.\n   [RFC4294]   Loughney, J., \"IPv6 Node Requirements\"\
    , RFC 4294,\n               April 2006.\n   [RFC4864]   Van de Velde, G., Hain,\
    \ T., Droms, R., Carpenter, B., and\n               E. Klein, \"Local Network\
    \ Protection for IPv6\", RFC 4864,\n               May 2007.\n   [RFC4949]   Shirey,\
    \ R., \"Internet Security Glossary, Version 2\",\n               RFC 4949, August\
    \ 2007.\n   [RFC5189]   Stiemerling, M., Quittek, J., and T. Taylor, \"Middlebox\n\
    \               Communication (MIDCOM) Protocol Semantics\", RFC 5189,\n     \
    \          March 2008.\n   [RFC5382]   Guha, S., Biswas, K., Ford, B., Sivakumar,\
    \ S., and P.\n               Srisuresh, \"NAT Behavioral Requirements for TCP\"\
    ,\n               BCP 142, RFC 5382, October 2008.\n   [RFC5386]   Williams, N.\
    \ and M. Richardson, \"Better-Than-Nothing\n               Security: An Unauthenticated\
    \ Mode of IPsec\", RFC 5386,\n               November 2008.\n   [RFC5389]   Rosenberg,\
    \ J., Mahy, R., Matthews, P., and D. Wing,\n               \"Session Traversal\
    \ Utilities for NAT (STUN)\", RFC 5389,\n               October 2008.\n   [RFC5533]\
    \   Nordmark, E. and M. Bagnulo, \"Shim6: Level 3 Multihoming\n              \
    \ Shim Protocol for IPv6\", RFC 5533, June 2009.\n   [UPnP-IGD]  UPnP Forum, \"\
    Universal Plug and Play Internet Gateway\n               Device Standardized Device\
    \ Control Protocol\",\n               September 2010, <http://upnp.org/specs/gw/igd2/>.\n\
    \   [WOODYATT-ALD]\n               Woodyatt, J., \"Application Listener Discovery\
    \ (ALD) for\n               IPv6\", Work in Progress, July 2008.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   James Woodyatt (editor)\n   Apple Inc.\n   1 Infinite Loop\n\
    \   Cupertino, CA  95014\n   US\n   EMail: jhw@apple.com\n"
