This memo describes a simple method of encoding PSTN addresses in the local part of Internet email addresses, along with an extension mechanism to allow encoding of additional standard attributes needed for email gateways to PSTN based services.
As with all Internet mail addresses, the left hand side (local  part) of an address generated according to this specification, is not to be interpreted except by the MTA that is named on the right hand side (domain).
Since the very first e mail
to PSTN services gateway appeared, a number of different methods to specify a PSTN address as an e mail address have been used by implementors.
Two major objectives for this were enable an e mail user to access these services from his/her e mail interface; enable some kind of "PSTN over e mail service" transport, to reduce the costs of PSTN long distance transmissions, and use the existing e mail infrastructure.
This memo describes the MINIMAL addressing method to encode PSTN addresses into e mail addresses and the standard extension mechanism to allow definition of further standard elements.
The opposite problem, i.e. to allow a traditional numeric only PSTN device user to access the e mail transport service, is not discussed here.
All implementations supporting this PSTN over e mail service MUST support as a minimum the specification described in this document.
The generic complex case of converting the whole PSTN addressing into e mail is out of scope in this minimal specification: there is some work in progress in the field, where also a number of standard optional extensions are being defined.
In this document the formal definitions are described using ABNF syntax, as defined into [7].
We will also use some of the "CORE DEFINITIONS" defined in "APPENDIX A CORE" of that document.
The exact meaning of the capitalised words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT",
The minimal specification of a PSTN address in e mail address is as follows:
; service selector MUST be handled as a case ; INSENSITIVE string by implementations.
Specifications adopting the "pstn address" definition MUST define a unique case insensitive "service selector" element to identify the specific messaging service involved.
These specifications MUST also define which minimal "qualif type1" extensions, if any, MUST be supported for the specified service.
Implementations confirming to these minimal requirements specification are allowed to ingnore any other non minimal extensions address element which can be present in the "pstn address".
However, conforming implementations MUST preserve all "qualif type1" address elements they receive.
As such, all "pstn address" extensions elements MUST be defined in the "qualif type1" form.
The use of other dialling schemas for PSTN numbers (like private numbering plans or local dialling conventions) is also allowed.
However, this does not preclude nor remove the minimal compulsory requirement to support the "global phone" syntax as defined above.
The specification of these different dialling schemas is out of scope for this minimal specification.
User specification of PSTN e mail addresses will be facilitated if they can insert these separators between dial elements like digits etc.
For this reason we allow them in the syntax the written sep element.
Use of the written sep elements is allowed, but not recommended.
Any occurences of written sep elements in a pstn mbox MUST be ignored by all conformant implementations.
User Agents SHOULD remove written sep elements before submitting messages to the Message Transport System.
Some examples of a minimal "pstn address" VOICE  3940226338 FAX  12027653000/T33S 6377
The e mail address of the I pstn device: mta
" has an e mail address, or to be more exact, a name which enables a mail system to identify it on the e mail global system.
We will call this "mta I pstn" mta
For "domain" strings used in SMTP transmissions, the string MUST conform to the requirements of that standard's <domain> specifications [1], [3].
For "domain" strings used in message content headers, the string MUST conform to the requirements of the relevant standards [2], [3].
Note: in both cases, the standards permit use of "domain names" or "domain literals" in addresses.
The complete structure used to transfer a minimal PSTN address over the Internet e mail transport system is called "pstn email".
This object is a an e mail address which conforms to RFC822 [2] and RFC1123 [3]
"addr spec" syntax, with some extra structure which allows the PSTN number to be identified.
Implementations MUST accept the optional slashes but SHOULD NOT generate them.
Gateways are allowed to strip them off when converting to Internet mail addressing.
It is essential to remind that "pstn address" element MUST strictly follow the "quoting rules" spcified in the relevant standards [2], [3].
In case a particular service requires multiple subaddresses (in any form defined by the specific standard specification for that service), and these subaddresses need to be given on the same "pstn  mbox", multiple "pstn email" elements will be used.
Implementors' note: The UA could accept multiple subaddress elements for the same global phone, but it must generate multiple "pstn mbox" elements when passing the message to the MTA.
Some examples of "pstn email" VOICE  3940226338@worldvoice.com FAX  1.202.7653000/T33S 6377@faxserv.org /SMS
This proposal creates a minimal standard encoding for PSTN addresses within the global e mail transport system and defines the standard extension mechanism to be used to introduce specific new elements.
The proposal requires no changes to existing e mail software.
Each specific PSTN service using this proposal MUST define its own "service selector" specification and MUST define the eventual other "qualif type1" elements to be supported for its minimal addressing specification.
An example is in reference [13].
This document specifies a means by which PSTN addresses can be encoded into e mail addresses.
As routing of e mail messages is determined by Domain Name System (DNS) information, a successful attack on this service could force the mail path via some particular gateway or message transfer agent where mail security can be affected by compromised software.
There are several means by which an attacker might be able to deliver incorrect mail routing information to a client.
These include: (a) compromise of a DNS server, (b) generating a counterfeit response to a client's DNS query, (c)
returning incorrect "additional information" in response to an unrelated query.
Clients SHOULD ensure that mail routing is based only on authoritative answers.
Once DNS Security mechanisms [5] become more widely deployed, clients SHOULD employ those mechanisms to verify the authenticity and integrity of mail routing records.
