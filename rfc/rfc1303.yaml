- title: __initial_text__
  contents:
  - '             A Convention for Describing SNMP-based Agents

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard.  Distribution of this memo is\n\
    \   unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo suggests a straight-forward approach towards describing\n\
    \   SNMP-based agents.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. The Network Management Framework ............................\
    \    2\n   2. Objects .....................................................  \
    \  2\n   3. Describing Agents ...........................................    3\n\
    \   3.1 Definitions ................................................    4\n  \
    \ 3.2 Mapping of the MODULE-CONFORMANCE macro ....................    5\n   3.2.1\
    \ Mapping of the LAST-UPDATED clause .......................    6\n   3.2.2 Mapping\
    \ of the PRODUCT-RELEASE clause ....................    6\n   3.2.3 Mapping of\
    \ the DESCRIPTION clause ........................    6\n   3.2.4 Mapping of the\
    \ SUPPORTS clause ...........................    6\n   3.2.4.1 Mapping of the\
    \ INCLUDES clause .........................    6\n   3.2.4.2 Mapping of the VARIATION\
    \ clause ........................    6\n   3.2.4.2.1 Mapping of the SYNTAX clause\
    \ .........................    6\n   3.2.4.2.2 Mapping of the WRITE-SYNTAX clause\
    \ ...................    7\n   3.2.4.2.3 Mapping of the ACCESS clause .........................\
    \    7\n   3.2.4.2.4 Mapping of the CREATION-REQUIRES clause ..............  \
    \  7\n   3.2.4.2.5 Mapping of the DEFVAL clause .........................    7\n\
    \   3.2.4.2.6 Mapping of the DESCRIPTION clause ....................    7\n  \
    \ 3.3 Refined Syntax .............................................    7\n   3.4\
    \ Usage Example ..............................................    8\n   4. Acknowledgements\
    \ ............................................   11\n   5. References ..................................................\
    \   11\n   6. Security Considerations......................................  \
    \ 12\n   7. Authors' Addresses...........................................   12\n"
- title: 1.  The Network Management Framework
  contents:
  - "1.  The Network Management Framework\n   The Internet-standard Network Management\
    \ Framework consists of\n   three components.  They are:\n   RFC 1155 [1] which\
    \ defines the SMI, the mechanisms used for\n   describing and naming objects for\
    \ the purpose of management.\n   RFC 1212 [2] defines a more concise description\
    \ mechanism,\n   which is wholly consistent with the SMI.\n   RFC 1213 [3] which\
    \ defines MIB-II, the core set of managed\n   objects for the Internet suite of\
    \ protocols.\n   RFC 1157 [4] which defines the SNMP, the protocol used for\n\
    \   network access to managed objects.\n   The Framework permits new objects to\
    \ be defined for the\n   purpose of experimentation and evaluation.\n"
- title: 2.  Objects
  contents:
  - "2.  Objects\n   Managed objects are accessed via a virtual information store,\n\
    \   termed the Management Information Base or MIB.  Within a given\n   MIB module,\
    \ objects are defined using RFC 1212's OBJECT-TYPE\n   macro.  At a minimum, each\
    \ object has a name, a syntax, an\n   access-level, and an implementation-status.\n\
    \   The name is an object identifier, an administratively assigned\n   name, which\
    \ specifies an object type.  The object type\n   together with an object instance\
    \ serves to uniquely identify a\n   specific instantiation of the object.  For\
    \ human convenience,\n   we often use a textual string, termed the OBJECT DESCRIPTOR,\n\
    \   to also refer to the object type.\n   The syntax of an object type defines\
    \ the abstract data\n   structure corresponding to that object type.  The ASN.1[5]\n\
    \   language is used for this purpose.  However, RFC 1155\n   purposely restricts\
    \ the ASN.1 constructs which may be used.\n   These restrictions are explicitly\
    \ made for simplicity.\n   The access-level of an object type defines whether\
    \ it makes\n   \"protocol sense\" to read and/or write the value of an instance\n\
    \   of the object type.  (This access-level is independent of any\n   administrative\
    \ authorization policy.)\n   The implementation-status of an object type indicates\
    \ whether\n   the object is mandatory, optional, obsolete, or deprecated.\n"
- title: 3.  Describing Agents
  contents:
  - "3.  Describing Agents\n   When a MIB module is written, it is divided into units\
    \ of\n   conformance termed groups.  If an agent claims conformance to\n   a group,\
    \ then it must implement each and every object within\n   that group.  Of course,\
    \ for whatever reason, an agent may\n   implement only a subset of the groups\
    \ within a MIB module.  In\n   addition, the definition of some MIB objects leave\
    \ some\n   aspects of the definition to the discretion of an implementor.\n  \
    \ Practical experience has demonstrated a need for concisely\n   describing the\
    \ capabilities of an agent with regards to the\n   MIB groups that it implements.\
    \  This memo defines a new macro,\n   MODULE-CONFORMANCE, which allows an agent\
    \ implementor to\n   describe the precise level of support which an agent claims\
    \ in\n   regards to a MIB group, and to bind that description to the\n   sysObjectID\
    \ associated with the agent.  In particular, some\n   objects may have restricted\
    \ or augmented syntax or access-\n   levels.\n   If the MODULE-CONFORMANCE invocation\
    \ is given to a\n   management-station implementor, then that implementor can\n\
    \   build management applications which optimize themselves when\n   communicating\
    \ with a particular agent.  For example, the\n   management-station can maintain\
    \ a database of these\n   invocations.  When a management-station interacts with\
    \ an\n   agent, it retrieves the agent's sysObjectID.  Based on this,\n   it consults\
    \ the database.  If an entry is found, then the\n   management application can\
    \ optimize its behavior accordingly.\n   This binding to sysObjectId may not always\
    \ suffice to define\n   all MIB objects to which an agent can provide access.\
    \ In\n   particular, this situation occurs where the agent dynamically\n   learns\
    \ of the objects it supports, for example, an agent\n   supporting SMUX peers\
    \ via the SMUX protocol [6]. In these\n   situations, additional MIB objects beyond\
    \ sysObjectID must be\n   used to name other invocations of the MODULE-CONFORMANCE\
    \ macro\n   to augment the description of MIB support provided by the\n   agent.\
    \ For example, if an agent's sysObjectID indicates that\n   it supports the SMUX\
    \ MIB, then each instance of smuxPidentity\n   will indicate another MODULE-CONFORMANCE\
    \ invocation which is\n   dynamically being supported by the agent.\n"
- title: 3.1.  Definitions
  contents:
  - "3.1.  Definitions\n   RFC-1303 DEFINITIONS ::= BEGIN\n       IMPORTS\n      \
    \     ObjectName, ObjectSyntax\n               FROM RFC1155-SMI\n           DisplayString\n\
    \               FROM RFC1213-MIB;\n       MODULE-CONFORMANCE MACRO ::=\n     \
    \  BEGIN\n           TYPE NOTATION ::=\n                             \"LAST-UPDATED\"\
    \n                                 value(update      UTCTime)\n              \
    \               \"PRODUCT-RELEASE\"\n                                 value(release\
    \     DisplayString)\n                             \"DESCRIPTION\"\n         \
    \                        value(description DisplayString)\n                  \
    \           ModulePart\n           VALUE NOTATION ::=      -- agent's sysObjectID\
    \ --\n                             value(VALUE ObjectName)\n           ModulePart\
    \ ::=    Modules\n                           | empty\n           Modules ::= \
    \      Module\n                           | Modules Module\n           Module\
    \ ::=                   -- name of module --\n                             \"\
    SUPPORTS\" ModuleName\n                             \"INCLUDES\" \"{\" Groups\
    \ \"}\"\n                             VariationPart\n           ModuleName ::=\
    \    identifier ModuleIdentifier\n           ModuleIdentifier ::=\n          \
    \                   value (moduleID OBJECT IDENTIFIER)\n                     \
    \      | empty\n           Groups ::=        Group\n                         \
    \  | Groups \",\" Group\n           Group ::=         value(group OBJECT IDENTIFIER)\n\
    \           VariationPart ::= Variations\n                           | empty\n\
    \           Variations ::=    Variation\n                           | Variations\
    \ Variation\n           Variation ::=     \"VARIATION\" value(object ObjectName)\n\
    \                             Syntax WriteSyntax Access\n                    \
    \         Creation DefaultValue\n                             \"DESCRIPTION\"\n\
    \                                 value(limitext DisplayString)\n           --\
    \ must be a refinement for object's SYNTAX\n           Syntax ::=        \"SYNTAX\"\
    \ type(SYNTAX)\n                           | empty\n           -- must be a refinement\
    \ for object's SYNTAX\n           WriteSyntax ::=   \"WRITE-SYNTAX\" type(WriteSYNTAX)\n\
    \                           | empty\n           Access ::=        \"ACCESS\" AccessValue\n\
    \                           | empty\n           AccessValue ::=   \"read-only\"\
    \n                           | \"read-write\"\n                           | \"\
    write-only\"\n                           | \"not-accessible\"\n           Creation\
    \ ::=      \"CREATION-REQUIRES\" \"{\" Cells \"}\"\n           Cells ::=     \
    \    Cell\n                           | Cells \",\" Cell\n           Cell ::=\
    \          value(cell ObjectName)\n           DefaultValue ::=  \"DEFVAL\"\n \
    \                            \"{\" value (defval ObjectSyntax) \"}\"\n       \
    \                    | empty\n       END\n   END\n"
- title: 3.2.  Mapping of the MODULE-CONFORMANCE macro
  contents:
  - "3.2.  Mapping of the MODULE-CONFORMANCE macro\n   It should be noted that the\
    \ expansion of the MODULE-CONFORMANCE macro\n   is something which conceptually\
    \ happens during implementation and not\n   during run-time.\n"
- title: 3.2.1.  Mapping of the LAST-UPDATED clause
  contents:
  - "3.2.1.  Mapping of the LAST-UPDATED clause\n   The LAST-UPDATED clause, which\
    \ must be present, contains the date and\n   time that this definition was last\
    \ edited.\n"
- title: 3.2.2.  Mapping of the PRODUCT-RELEASE clause
  contents:
  - "3.2.2.  Mapping of the PRODUCT-RELEASE clause\n   The PRODUCT-RELEASE clause,\
    \ which must be present, contains a textual\n   description of the product release\
    \ which includes this agent.\n"
- title: 3.2.3.  Mapping of the DESCRIPTION clause
  contents:
  - "3.2.3.  Mapping of the DESCRIPTION clause\n   The DESCRIPTION clause, which must\
    \ be present, contains a textual\n   description of this agent.\n"
- title: 3.2.4.  Mapping of the SUPPORTS clause
  contents:
  - "3.2.4.  Mapping of the SUPPORTS clause\n   The SUPPORTS clause, which need not\
    \ be present, is repeatedly used to\n   name each MIB module for which the agent\
    \ claims a complete or partial\n   implementation.  Each MIB module is named by\
    \ its module name, and\n   optionally, by its associated OBJECT IDENTIFIER as\
    \ well.  (Note that\n   only a few MIB modules have had OBJECT IDENTIFIERs assigned\
    \ to them.)\n"
- title: 3.2.4.1.  Mapping of the INCLUDES clause
  contents:
  - "3.2.4.1.  Mapping of the INCLUDES clause\n   The INCLUDES clause, which must\
    \ be present for each use of the\n   SUPPORTS clause, is used to name each MIB\
    \ group associated with the\n   SUPPORT clause, which the agent claims to implement.\n"
- title: 3.2.4.2.  Mapping of the VARIATION clause
  contents:
  - "3.2.4.2.  Mapping of the VARIATION clause\n   The VARIATION clause, which need\
    \ not be present, is repeatedly used\n   to name each MIB object which the agent\
    \ implements in some variant or\n   refined fashion.\n"
- title: 3.2.4.2.1.  Mapping of the SYNTAX clause
  contents:
  - "3.2.4.2.1.  Mapping of the SYNTAX clause\n   The SYNTAX clause, which need not\
    \ be present, is used to provide a\n   refined SYNTAX for the object named in\
    \ the correspondent VARIATION\n   clause.  Note that if this clause and a WRITE-SYNTAX\
    \ clause are both\n   present, then this clause only applies when instances of\
    \ the object\n   named in the correspondent VARIATION clause are read.\n   Consult\
    \ Section 3.3 for more information on refined syntax.\n"
- title: 3.2.4.2.2.  Mapping of the WRITE-SYNTAX clause
  contents:
  - "3.2.4.2.2.  Mapping of the WRITE-SYNTAX clause\n   The WRITE-SYNTAX clause, which\
    \ need not be present, is used to\n   provide a refined SYNTAX for the object\
    \ named in the correspondent\n   VARIATION clause when instances of that object\
    \ are written.\n   Consult Section 3.3 for more information on refined syntax.\n"
- title: 3.2.4.2.3.  Mapping of the ACCESS clause
  contents:
  - "3.2.4.2.3.  Mapping of the ACCESS clause\n   The ACCESS clause, which need not\
    \ be present, is used to provide a\n   refined ACCESS for the object named in\
    \ the correspondent VARIATION\n   clause.\n"
- title: 3.2.4.2.4.  Mapping of the CREATION-REQUIRES clause
  contents:
  - "3.2.4.2.4.  Mapping of the CREATION-REQUIRES clause\n   The CREATION-REQUIRES\
    \ clause, which need not be present, is used to\n   name the columnar objects\
    \ of a conceptual row to which values must be\n   explicitly assigned, by a SNMP\
    \ Set operation, before the agent will\n   create new instances of objects in\
    \ that row.  This clause must not be\n   present unless the object named in the\
    \ correspondent VARIATION clause\n   is a conceptual row, i.e., has a syntax which\
    \ resolves to a SEQUENCE\n   containing columnar objects.  The objects named in\
    \ the value of this\n   clause usually will refer to columnar objects in that\
    \ row.  However,\n   objects unrelated to the conceptual row may also be specified.\n\
    \   The absence of this clause for a particular conceptual row indicates\n   that\
    \ the agent does not support the creation, via SNMP operations, of\n   new object\
    \ instances in that row.\n"
- title: 3.2.4.2.5.  Mapping of the DEFVAL clause
  contents:
  - "3.2.4.2.5.  Mapping of the DEFVAL clause\n   The DEFVAL clause, which need not\
    \ be present, is used to provide a\n   refined DEFVAL value for the object named\
    \ in the correspondent\n   VARIATION clause.  The semantics of this value are\
    \ identical to those\n   of the OBJECT-TYPE macro's DEFVAL clause [2].\n"
- title: 3.2.4.2.6.  Mapping of the DESCRIPTION clause
  contents:
  - "3.2.4.2.6.  Mapping of the DESCRIPTION clause\n   The DESCRIPTION clause, which\
    \ must be present for each use of the\n   VARIATION clause, contains a textual\
    \ description of the variant or\n   refined implementation.\n"
- title: 3.3.  Refined Syntax
  contents:
  - "3.3.  Refined Syntax\n   The SYNTAX and WRITE-SYNTAX clauses allow an object's\
    \ Syntax to be\n   refined.  However, not all refinements of syntax are appropriate.\
    \  In\n   particular,\n   (1)  the object's primitive or application type (as\
    \ defined in\n        the SMI [1]) must not be changed;\n   (2)  an object defined\
    \ with an SMI type of OBJECT IDENTIFIER,\n        IpAddress, Counter, or TimeTicks\
    \ cannot be refined; and,\n   (3)  an object defined to have a specific set of\
    \ values (e.g.,\n        an INTEGER with named values) cannot have additional\n\
    \        values defined for it.\n"
- title: 3.4.  Usage Example
  contents:
  - "3.4.  Usage Example\n   Consider how one might document the 4BSD/ISODE \"Secure\"\
    \ SNMP\n   agent:\n   FourBSD-ISODE   DEFINITIONS ::= BEGIN\n   IMPORTS\n    \
    \   MODULE-CONFORMANCE\n           FROM RFC-1303\n       -- everything --\n  \
    \         FROM RFCxxxx-MIB\n       -- everything --\n           FROM RFC1213-MIB\n\
    \       -- everything --\n           FROM UNIX-MIB\n       -- everything --\n\
    \           FROM EVAL-MIB;\n   fourBSD-isode-support MODULE-CONFORMANCE\n    \
    \   LAST-UPDATED        \"9201252354Z\"\n       PRODUCT-RELEASE     \"ISODE 7.0\
    \ + 'Secure' SNMP\n                            upgrade for SunOS 4.1\"\n     \
    \  DESCRIPTION         \"4BSD/ISODE 'Secure' SNMP\"\n       SUPPORTS         \
    \   RFCxxxx-MIB -- SNMP Party MIB --\n           INCLUDES        { partyPublic,\
    \ partyPrivate }\n       SUPPORTS            RFC1213-MIB\n           INCLUDES\
    \        { system, interfaces, at, ip, icmp,\n                             tcp,\
    \ udp, snmp }\n           VARIATION       atEntry\n               CREATION-REQUIRES\
    \ { atPhysAddress }\n               DESCRIPTION \"Address mappings on 4BSD require\n\
    \                            both protocol and media addresses\"\n           VARIATION\
    \       ifAdminStatus\n               SYNTAX      INTEGER { up(1), down(2) }\n\
    \               DESCRIPTION \"Unable to set test mode on 4BSD\"\n           VARIATION\
    \       ifOperStatus\n               SYNTAX      INTEGER { up(1), down(2) }\n\
    \               DESCRIPTION \"Information limited on 4BSD\"\n           VARIATION\
    \       ipDefaultTTL\n               SYNTAX      INTEGER { maxttl(255) }\n   \
    \            DESCRIPTION \"Hard-wired on 4BSD\"\n           VARIATION       ipInAddrErrors\n\
    \               ACCESS      not-accessible\n               DESCRIPTION \"Information\
    \ not available on 4BSD\"\n           VARIATION       ipInDiscards\n         \
    \      ACCESS      not-accessible\n               DESCRIPTION \"Information not\
    \ available on 4BSD\"\n           VARIATION       ipRouteEntry\n             \
    \  CREATION-REQUIRES { ipRouteNextHop }\n               DESCRIPTION \"Routes on\
    \ 4BSD require both\n                            destination and next-hop\"\n\
    \           VARIATION       ipRouteType\n               SYNTAX       INTEGER {\
    \ direct(3), indirect(4) }\n               WRITE-SYNTAX INTEGER { invalid(2),\
    \ direct(3),\n                                      indirect(4) }\n          \
    \     DESCRIPTION \"Information limited on 4BSD\"\n           VARIATION      \
    \ ipRouteProto\n               SYNTAX      INTEGER { other(1), icmp (4) }\n  \
    \             DESCRIPTION \"Information limited on 4BSD\"\n           VARIATION\
    \       ipRouteAge\n               ACCESS      not-accessible\n              \
    \ DESCRIPTION \"Information not available on 4BSD\"\n           VARIATION    \
    \   ipNetToMediaEntry\n               CREATION-REQUIRES { ipNetToMediaPhysAddress\
    \ }\n               DESCRIPTION \"Address mappings on 4BSD require\n         \
    \                   both protocol and media addresses\"\n           VARIATION\
    \       ipNetToMediaType\n               SYNTAX       INTEGER { dynamic(3), static(4)\
    \ }\n               WRITE-SYNTAX INTEGER { invalid(2), dynamic(3),\n         \
    \                             static(4) }\n               DESCRIPTION \"Information\
    \ limited on 4BSD\"\n           VARIATION       tcpConnState\n               ACCESS\
    \      read-only\n               DESCRIPTION \"Unable to set this on 4BSD\"\n\
    \           VARIATION       tcpInErrs\n               ACCESS      not-accessible\n\
    \               DESCRIPTION \"Information not available on 4BSD\"\n          \
    \ VARIATION       tcpOutRsts\n               ACCESS      not-accessible\n    \
    \           DESCRIPTION \"Information not available on 4BSD\"\n       SUPPORTS\
    \            UNIX-MIB\n           INCLUDES        { agents, mbuf, netstat }\n\
    \       SUPPORTS            EVAL-MIB\n           INCLUDES        { functions,\
    \ expressions }\n       ::= { fourBSD-isode 6 6 }\n   END\n   According to this\
    \ invocation, an agent with a sysObjectID of\n        { fourBSD-isode 6 6 }\n\
    \   supports four MIB modules.\n   From the SNMP Party MIB, all the objects contained\
    \ in the partyPublic\n   and partyPrivate groups are supported, without variation.\n\
    \   From MIB-II, all groups except the egp group are supported.  However,\n  \
    \ the objects\n        ipInAddrErrors\n        ipInDiscards\n        ipRouteAge\n\
    \        tcpInErrs\n        tcpOutRsts\n   are not available, whilst the objects\n\
    \        ifAdminStatus\n        ifOperStatus\n        ipDefaultTTL\n        ipRouteType\n\
    \        ipRouteProto\n        ipNetToMediaType\n   have a restricted syntax,\
    \ and the object\n        tcpConnState\n   is available only for reading.  Note\
    \ that in the case of the objects\n        ipRouteType\n        ipNetToMediaType\n\
    \   the set of values which may be read is different than the set of\n   values\
    \ which may be written.  Finally, when creating a new row in the\n   atTable,\
    \ the set-request must create an instance of atPhysAddress.\n   Similarly, when\
    \ creating a new row in the ipRouteTable, the set-\n   request must create an\
    \ instance of ipRouteNextHop.  Similarly, when\n   creating a new row in the ipNetToMediaTable,\
    \ the set-request must\n   create an instance of ipNetToMediaPhysAddress.\n  \
    \ From the UNIX-MIB, all the objects contained in the agents, mbuf, and\n   netstat\
    \ groups are supported, without variation.\n   From the EVAL-MIB, all the objects\
    \ contained in the functions and\n   expressions groups are supported, without\
    \ variation.\n"
- title: 4.  Acknowledgements
  contents:
  - "4.  Acknowledgements\n   The authors gratefully acknowledge the comments of Mark\
    \ van der Pol\n   of Hughes LAN Systems, and David T. Perkins of SynOptics\n \
    \  Communications.\n"
- title: 5.  References
  contents:
  - "5.  References\n   [1]  Rose M., and K. McCloghrie, \"Structure and Identification\
    \ of\n        Management Information for TCP/IP-based internets\", RFC 1155,\n\
    \        Performance Systems International, Hughes LAN Systems, May 1990.\n  \
    \ [2]  Rose, M., and K. McCloghrie, Editors, \"Concise MIB Definitions\",\n  \
    \      RFC 1212, Performance Systems International, Hughes LAN Systems,\n    \
    \    March 1991.\n   [3]  McCloghrie K., and M. Rose, Editors, \"Management Information\n\
    \        Base forNetwork Management of TCP/IP-based internets\", RFC 1213,\n \
    \       Performance Systems International, March 1991.\n   [4]  Case, J., Fedor,\
    \ M., Schoffstall, M., and J. Davin, \"Simple\n        Network Management Protocol\
    \ (SNMP), RFC 1157, SNMP Research,\n        Performance Systems International,\
    \ Performance Systems\n        International, MIT Laboratory for Computer Science,\
    \ May 1990.\n   [5]  Information processing systems - Open Systems Interconnection\
    \ -\n        Specification of Abstract Syntax Notation One (ASN.1),\n        International\
    \ Organization for Standardization, International\n        Standard 8824, December\
    \ 1987.\n   [6]  Rose, M., \"SNMP MUX Protocol and MIB\", RFC 1227, Performance\n\
    \        Systems International, May 1991.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: 7.  Authors' Addresses
  contents:
  - "7.  Authors' Addresses\n   Keith McCloghrie\n   Hughes LAN Systems\n   1225 Charleston\
    \ Road\n   Mountain View, CA 94043\n   Phone: (415) 966-7934\n   EMail: kzm@hls.com\n\
    \   Marshall T. Rose\n   Dover Beach Consulting, Inc.\n   420 Whisman Court\n\
    \   Mountain View, CA  94043-2112\n   Phone: (415) 968-1052\n   EMail: mrose@dbc.mtview.ca.us\n"
