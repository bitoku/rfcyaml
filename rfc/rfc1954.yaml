- title: __initial_text__
  contents:
  - "          Transmission of Flow Labelled IPv4 on ATM Data Links\n            \
    \              Ipsilon Version 1.0\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document provides information for the Internet community.\
    \  This\n   memo does not specify an Internet standard of any kind.  Distribution\n\
    \   of this memo is unlimited.\n   This note documents a private protocol for\
    \ IPv4-based flows.  This\n   protocol is NOT the product of an IETF working group\
    \ nor is it a\n   standards track document. It has not necessarily benefited from\
    \ the\n   widespread and in depth community review that standards track\n   documents\
    \ receive.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies the manner for transmitting IPv4 datagrams\n\
    \   over an ATM data link, both in a default manner and in the presence\n   of\
    \ flow labelling via Ipsilon Flow Management Protocol [IFMP].\n"
- title: Table of Contents
  contents:
  - 'Table of Contents

    '
- title: Introduction
  contents:
  - "Introduction\n   This document specifies the manner for transmitting IPv4 datagrams\n\
    \   over an ATM data link, both in a default manner and in the presence\n   of\
    \ flow labelling via Ipsilon Flow Management Protocol [IFMP].  ATM\n   specific\
    \ functions such as OAM cells, the CLP bit, and ABR RM cells\n   are not used.\
    \  There are no reserved VCIs other than VPI = 0, VCI =\n   0, which indicates\
    \ an unassigned cell; and VPI = 0, VCI = 15, which\n   is used for the default\
    \ encapsulation.  IFMP messages must be sent\n   using the default encapsulation.\n"
- title: 1. Labels
  contents:
  - "1. Labels\n   Labels, as carried by IFMP, are realized on an ATM data link as\n\
    \   specific VPI/VCIs.  The format of the Label field for ATM labels is:\n   \
    \ 0                   1                   2                   3\n    0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |Reservd|          VPI          |             VCI               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The low order 16 bits of the label correspond to the VCI, with the\n   least\
    \ significant bit of the Label field corresponding to the least\n   significant\
    \ bit of the VCI.  If the link cannot support a full 16 bit\n   VCI the unused\
    \ bits of the VCI must be the most significant bits and\n   they must be set to\
    \ zero.\n   The next 12 higher order bits of the label correspond to the VPI,\n\
    \   with the least significant of these bits corresponding to the least\n   significant\
    \ bit of the VPI.  If the link cannot support a full 12 bit\n   VPI, then the\
    \ unused bits of the VPI must be the most significant\n   bits and they must be\
    \ set to zero.  The most significant four bits of\n   the label are reserved.\
    \  They should be set to zero by the sender and\n   ignored by the receiver.\n"
- title: 2. Default Encapsulation
  contents:
  - "2. Default Encapsulation\n   The default encapsulation for IPv4 packets on ATM\
    \ data links is the\n   LLC/SNAP encapsulation specified in section 4.1 \"LLC\
    \ encapsulation\n   for routed protocols\" of RFC 1483 [RFC1483].  Such frames\
    \ begin with\n   the octets 0xAA 0xAA 0x03 0x00 0x00 0x00 0x08 0x00 (the LLC/SNAP\n\
    \   header for IPv4).  The LLC/SNAP header is prefixed to the IP datagram\n  \
    \ and the entire packet is encapsulated within the payload of an AAL-5\n   CPCS-PDU\
    \ as specified in RFC 1483 and illustrated below:\n    0                   1 \
    \                  2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |               LLC (0xAA-AA-03)                |               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \               |\n   |                   SNAP (0x00-00-00-08-00)            \
    \         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   ~  \
    \                       IPv4 Datagram                         ~\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   Pad (0 - 47 octets)                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +  \
    \             AAL-5 CPCS-PDU Trailer (8 octets)               +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The maximum transmission unit (MTU) of an IPv4 datagram using the\n   default\
    \ encapsulation is 1500 octets.\n   Frames using the default encapsulation are\
    \ sent to: VPI = 0, VCI =\n   15.\n"
- title: 3. Flow Type 0 Encapsulation
  contents:
  - "3. Flow Type 0 Encapsulation\n   All IPv4 frames using Flow Type 0 are encapsulated\
    \ within the payload\n   of an AAL-5 CPCS-PDU.  This is the null encapsulation\
    \ of section 5.1\n   \"VC based multiplexing of routed protocols\" from RFC 1483\
    \ [RFC1483].\n   There is no LLC/SNAP header.  The first octet of the frame\n\
    \   corresponds to the first octet of the IPv4 datagram (i.e., the octet\n   that\
    \ contains the IP version number (4) and Internet Header Length\n   (IHL) ). \
    \ The IP datagram is encapsulated within the payload of an\n   AAL-5 CPCS-PDU\
    \ as specified in RFC 1483 and illustrated below:\n    0                   1 \
    \                  2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   ~  \
    \                       IPv4 Datagram                         ~\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     Pad (0 - 47 octets)                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +  \
    \              AAL-5 CPCS-PDU Trailer (8 octets)              +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The MTU of an IPv4 datagram using Flow Type 0 encapsulation is 1500\n   octets.\n\
    \   Frames using Flow Type 0 encapsulation are sent to the VPI/VCI\n   specified\
    \ in the Label field of the corresponding IFMP Flow Type 0\n   Redirect message\
    \ element [IFMP].\n"
- title: 4. Flow Type 1 Encapsulation
  contents:
  - "4. Flow Type 1 Encapsulation\n   All IPv4 frames using Flow Type 1 are encapsulated\
    \ directly in the\n   payload of an AAL-5 CPCS-PDU.  This is the null encapsulation\
    \ of\n   section 5.1 \"VC based multiplexing of routed protocols\" from RFC 1483\n\
    \   [RFC1483].  There is no LLC/SNAP header.  Also, the following fields\n   of\
    \ the IP header are not transmitted: Version, Internet Header Length\n   (IHL),\
    \ Type of Service (TOS), Time to Live (TTL), Protocol, Source\n   Address, and\
    \ Destination Address.  In addition, the first 4 octets\n   immediately following\
    \ the IP header (as determined by the IHL field)\n   are not transmitted.  (These\
    \ 4 octets correspond to the source and\n   destination ports for TCP and UDP\
    \ datagrams.)  The value of the Total\n   Length field is not changed; it remains\
    \ the total length of the IP\n   datagram before the above fields were removed.\
    \  The transmitted value\n   of the Checksum field is the checksum value that\
    \ would have been\n   computed for the entire IP header if the TTL field had been\
    \ set to\n   zero (i.e., the actual value of the TTL field is \"subtracted\",\
    \ using\n   one's-complement arithmetic, from the Checksum before transmission).\n\
    \   The IP datagram is encapsulated within the payload of an AAL-5 CPCS-\n   PDU\
    \ as specified in RFC 1483 and illustrated below:\n    0                   1 \
    \                  2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |         Total Length          |        Identification         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |Flags|     Fragment Offset     |           Checksum            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   ~  \
    \                           Data                              ~\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     Pad (0 - 47 octets)                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +  \
    \              AAL-5 CPCS-PDU Trailer (8 octets)              +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The MTU of the IPv4 datagram using Flow Type 1 encapsulation is 1484\n   octets\
    \ (1500 octets minus the 16 octets specified above).\n   Frames using Flow Type\
    \ 1 encapsulation are sent to the VPI/VCI\n   specified in the Label field of\
    \ the corresponding IFMP Flow Type 1\n   redirect message element [IFMP].\n"
- title: 5. Flow Type 2 Encapsulation
  contents:
  - "5. Flow Type 2 Encapsulation\n   All IPv4 frames using Flow Type 2 are encapsulated\
    \ directly in the\n   payload of an AAL-5 CPCS-PDU.  This is the null encapsulation\
    \ of\n   section 5.1 \"VC based multiplexing of routed protocols\" from RFC 1483\n\
    \   [RFC1483].  There is no LLC/SNAP header.  Also, the following fields\n   of\
    \ the IP header are not transmitted: Version, Internet Header Length\n   (IHL),\
    \ Time to Live (TTL), Source Address, and Destination Address.\n   The first 4\
    \ octets immediately following the IP header (as determined\n   by the IHL field)\
    \ are transmitted.  (These 4 octets correspond to the\n   source and destination\
    \ ports for TCP and UDP datagrams.) The value of\n   the Total Length field is\
    \ not changed; it remains the total length of\n   the IP datagram before the above\
    \ fields were removed.  The\n   transmitted value of the Checksum field is the\
    \ checksum value that\n   would have been computed for the entire IP header if\
    \ the TTL field\n   had been set to zero (i.e., the actual value of the TTL field\
    \ is\n   \"subtracted\", using one's-complement arithmetic, from the Checksum\n\
    \   before transmission).\n   The IP datagram is encapsulated within the payload\
    \ of an AAL-5 CPCS-\n   PDU as specified in RFC 1483 and illustrated below:\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   Reserved    |Type of Service|         Total Length          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        Identification         |Flags|     Fragment Offset     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   Reserved    |   Protocol    |           Checksum            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   ~  \
    \                           Data                              ~\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     Pad (0 - 47 octets)                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +  \
    \              AAL-5 CPCS-PDU Trailer (8 octets)              +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The Reserved fields are not used and should be set to zero by the\n   sender\
    \ and ignored by the receiver.\n   The MTU of the IPv4 datagram using Flow Type\
    \ 2 encapsulation is 1492\n   octets (1500 octets minus the 8 octets specified\
    \ above).\n   Frames using Flow Type 2 encapsulation are sent to the VPI/VCI\n\
    \   specified in the Label field of the corresponding IFMP Flow Type 2\n   redirect\
    \ message element [IFMP].\n"
- title: References
  contents:
  - "References\n      [IFMP] Newman, P., et. al., \"Ipsilon Flow Management Protocol\n\
    \                Specification for IPv Version 1.0\", Ipsilon Networks\n     \
    \           Inc., RFC 1953, May 1996.\n      [RFC1483] Heinanen, J., \"Multiprotocol\
    \ Encapsulation over ATM\n                Adaptation Layer 5\", RFC 1483, July\
    \ 1993.\n"
- title: SECURITY CONSIDERATIONS
  contents:
  - "SECURITY CONSIDERATIONS\n   Security issues are not discussed in this document.\n"
- title: AUTHORS' ADDRESSES
  contents:
  - "AUTHORS' ADDRESSES\n   Peter Newman                        Phone: +1 (415) 846-4603\n\
    \   Ipsilon Networks, Inc.              EMail: pn@ipsilon.com\n   W. L. Edwards,\
    \ Chief Scientist      Phone:  +1 (913) 534 5334\n   Sprint                  \
    \            EMail:  texas@sprintcorp.com\n   Robert M. Hinden               \
    \     Phone: +1 (415) 846-4604\n   Ipsilon Networks, Inc.              EMail:\
    \ hinden@ipsilon.com\n   Eric Hoffman                        Phone: +1 (415) 846-4610\n\
    \   Ipsilon Networks, Inc.              EMail: hoffman@ipsilon.com\n   Fong Ching\
    \ Liaw                     Phone: +1 (415) 846-4607\n   Ipsilon Networks, Inc.\
    \              EMail: fong@ipsilon.com\n   Tom Lyon                          \
    \  Phone: +1 (415) 846-4601\n   Ipsilon Networks, Inc.              EMail: pugs@ipsilon.com\n\
    \   Greg Minshall                       Phone: +1 (415) 846-4605\n   Ipsilon Networks,\
    \ Inc.              EMail: minshall@ipsilon.com\n"
- title: 'Ipsilon Networks, Inc. is located at:'
  contents:
  - "Ipsilon Networks, Inc. is located at:\n   2191 East Bayshore Road\n   Suite 100\n\
    \   Palo Alto, CA 94303\n   USA\n"
- title: 'Sprint is located at:'
  contents:
  - "Sprint is located at:\n   Sprint\n   Sprint Technology Services - Long Distance\
    \ Division\n   9300 Metcalf Avenue\n   Mailstop KSOPKB0802\n   Overland Park,\
    \ KS 66212-6333\n   USA\n"
