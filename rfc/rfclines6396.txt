Abstract This document describes the MRT format for routing information export.
This format was developed in concert with the Multi threaded Routing Toolkit (MRT) from whence the format takes it name.
The format can be used to export routing protocol messages, state changes, and routing information base contents.
Introduction Researchers and engineers often wish to analyze network behavior by studying routing protocol transactions and routing information base snapshots.
To this end, the MRT record format was developed to encapsulate, export, and archive this information in a standardized data representation.
The BGP routing protocol, in particular, has been the subject of extensive study and analysis, which have been significantly aided by the availability of the MRT format.
Two examples of large scale MRT  based BGP archival projects include the University of Oregon Route Views Project and the RIPE NCC Routing Information Service (RIS).
The MRT format was initially defined in the MRT Programmer's Guide [MRT PROG GUIDE].
Subsequent extensions were made in the GNU Zebra software routing suite and the Sprint Advanced Technology Labs Python Routing Toolkit (PyRT).
Further extensions may be introduced at a later date through additional definitions of the MRT Type field and Subtype fields.
A number of MRT record types listed in the MRT Programmer's Guide [MRT PROG GUIDE] are not known to have been implemented and, in some cases, were incompletely specified.
Further, several types were employed in early MRT implementations, but saw limited use and were updated by improved versions.
These types are considered to be deprecated and are documented in the Deprecated MRT Types (Appendix B) section at the end of this document.
The deprecated types consist of codes 0 through 10 inclusive.
Some of the deprecated types may be of interest to researchers examining historical MRT format archives.
Fields which contain multi octet numeric values are encoded in network octet order from most significant octet to least significant octet.
Fields that contain routing message fields are encoded in the same order as they appear in the packet contents.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].
All MRT format records have a Common Header that consists of a Timestamp, Type, Subtype, and Length field.
The header is followed by a Message field.
The MRT Common Header is illustrated below.
MRT Common Header Header Field Descriptions:
Timestamp: A 4 octet field whose integer value is the number of seconds, excluding leap seconds, elapsed since midnight proleptic Coordinated Universal Time (UTC).
This representation of time is sometimes called "UNIX time" [POSIX].
This time format cannot represent time values prior to January 1, 1970.
The latest UTC time value that can be represented by a 4 octet integer value is 03:14:07 on January 19, 2038, which is represented by the hexadecimal value 7FFFFFFF.
Implementations that wish to create MRT records after this date will need to provide an alternate EPOCH time base for the Timestamp field.
Mechanisms for indicating this alternate EPOCH are currently outside the scope of this document.
A 2 octet field that indicates the Type of information contained in the Message field.
Types 0 through 4 are informational messages pertaining to the state of an MRT collector, while Types 5 and higher are used to convey routing information.
A 2 octet field that is used to further distinguish message information within a particular record Type.
Length: A 4 octet message length field.
The Length field contains the number of octets within the message.
The Length field does not include the length of the MRT Common Header.
The contents of this field are context dependent upon the Type and Subtype fields.
Extended Timestamp MRT Header Several MRT format record types support a variant type with an extended timestamp field.
The purpose of this field is to support measurements at sub second resolutions.
This field, Microsecond Timestamp, contains an unsigned 32BIT offset value in microseconds, which is added to the Timestamp field value.
The Timestamp field remains as defined in the MRT Common Header.
The Microsecond Timestamp immediately follows the Length field in the MRT Common Header and precedes all other fields in the message.
The Microsecond Timestamp is included in the computation of the Length field value.
The Extended Timestamp MRT Header is illustrated below.
Extended Timestamp MRT Header 4.
The following MRT Types are currently defined for the MRT format.
The MRT Types that contain the " ET" suffix in their names identify those types that use an Extended Timestamp MRT Header.
The Subtype and Message fields in these types remain as defined for the MRT Types of the same name without the " ET" suffix.
This type supports the OSPFv2 protocol as defined in RFC 2328 [RFC2328].
It is used to encode the exchange of OSPF protocol packets.
The format of the MRT Message field for the OSPFv2 Type is as follows:
The Remote IP Address field contains the Source IPv4 [RFC0791] address from the IP header of the OSPF message.
The Local IP Address contains the Destination IPv4 address from the IP header.
The OSPF Message Contents field contains the complete contents of the OSPF packet following the IP header.
The TABLE DUMP Type is used to encode the contents of a BGP Routing Information Base (RIB).
Each RIB entry is encoded in a distinct sequential MRT record.
It is RECOMMENDED that new MRT encoding implementations use the TABLE DUMP V2 Type (see below) instead of the TABLE DUMP Type due to limitations in this type.
However, due to the significant volume of historical data encoded with this type, MRT decoding applications MAY wish to support this type.
The Subtype field is used to encode whether the RIB entry contains IPv4 or IPv6
There are two possible values for the Subtype as shown below.
The format of the TABLE DUMP Type is illustrated below.
The View Number field is normally 0 and is intended for cases where an implementation may have multiple RIB views (such as a route server).
In cases where multiple RIB views are present, an implementation MAY use the View Number field to distinguish entries from each view.
The Sequence Number field is a simple incremental counter for each RIB entry.
A typical RIB dump will exceed the 16 bit bounds of this counter, and an implementation SHOULD simply wrap back to zero and continue incrementing the counter in such cases.
The Prefix field contains the IP address of a particular RIB entry.
The size of this field is dependent on the value of the Subtype for this record.
The AFI IPv4 Subtype value specifies an Address Family Identifier (AFI) type of IPv4 [IANA AF].
It specifies a Prefix field length of 4 octets.
For AFI IPv6, it is 16 octets in length.
The Prefix Length field indicates the length in bits of the prefix mask for the preceding Prefix field.
The Status octet is unused in the TABLE DUMP Type and SHOULD be set to 1.
The Originated Time contains the 4 octet time at which this prefix was heard.
The value represents the time in seconds since 1 January 1970 00:00:00 UTC.
The Peer IP Address field is the IP address of the peer that provided the update for this RIB entry.
As with the Prefix field, the size of this field is dependent on the Subtype.
AFI IPv4 indicates a 4 octet field and an IPv4 address, while a Subtype of AFI IPv6 requires a 16 octet field and an IPv6 address.
The Peer AS field contains the 2 octet Autonomous System (AS) number of the peer.
The TABLE DUMP Type does not permit 4 byte Peer AS numbers, nor does it allow the AFI of the peer IP to differ from the AFI of the Prefix field.
The TABLE DUMP V2 Type MUST be used in these situations.
Attribute Length contains the length of the Attribute field and is 2 octets.
The BGP Attribute field contains the BGP attribute information for the RIB entry.
The AS PATH attribute MUST only consist of 2 byte AS numbers.
The TABLE DUMP V2 supports 4 byte AS numbers in the AS PATH attribute.
The TABLE DUMP V2 Type updates the TABLE DUMP Type to include 4 byte Autonomous System Number (ASN) support and full support for BGP multiprotocol extensions.
It also improves upon the space efficiency of the TABLE DUMP Type by employing an index table for peers and permitting a single MRT record per Network Layer Reachability Information (NLRI) entry.
The following subtypes are used with the TABLE DUMP V2 Type.
2    RIB IPV4 UNICAST 3
RIB IPV4 MULTICAST 4    RIB IPV6 UNICAST 5    RIB IPV6 MULTICAST 6    RIB GENERIC
An initial PEER INDEX TABLE MRT record provides the BGP ID of the collector, an OPTIONAL view name, and a list of indexed peers.
Following the PEER INDEX TABLE MRT record, a series of MRT records is used to encode RIB table entries.
This series of MRT records uses subtypes 2 6 and is separate from the PEER INDEX TABLE MRT record itself and includes full MRT record headers.
The RIB entry MRT records MUST immediately follow the PEER INDEX TABLE MRT record.
The header of the PEER INDEX TABLE Subtype is shown below.
The View Name is OPTIONAL and, if not present, the View Name Length MUST be set to 0.
The View Name encoding MUST follow the UTF 8 transformation format [RFC3629].
The format of the Peer Entries is shown below.
The PEER INDEX TABLE record contains Peer Count number of Peer Entries.
The Peer Type, Peer BGP ID, Peer IP Address, and Peer AS fields are repeated as indicated by the Peer Count field.
The position of the peer in the PEER INDEX TABLE is used as an index in the subsequent TABLE DUMP V2 MRT records.
The index number begins with 0.
The Peer Type field is a bit field that encodes the type of the AS and IP address as identified by the A and I bits, respectively, below.
0 1 2 3 4 5 6 7
Peer AS number size:  0
16 bits, 1   32 bits Bit 7:
The MRT records that follow the PEER INDEX TABLE MRT record consist of the subtypes listed below and contain the actual RIB table entries.
They include a header that specifies a sequence number, an NLRI field, and a count of the number of RIB entries contained within the record.
The AFI/SAFI specific RIB Subtypes consist of the RIB IPV4 UNICAST, RIB IPV4 MULTICAST, RIB IPV6 UNICAST, and RIB IPV6 MULTICAST Subtypes.
These specific RIB table entries are given their own MRT TABLE DUMP V2 subtypes as they are the most common type of RIB table instances, and providing specific MRT subtypes for them permits more compact encodings.
These subtypes permit a single MRT record to encode multiple RIB table entries for a single prefix.
The Prefix Length and Prefix fields are encoded in the same manner as the BGP NLRI encoding for IPv4 and IPv6 prefixes.
Namely, the Prefix field contains address prefixes followed by enough trailing bits to make the end of the field fall on an octet boundary.
The value of trailing bits is irrelevant. 0
Figure 8: RIB Entry Header 4.3.3.
The RIB GENERIC header is shown below.
It is used to cover RIB entries that do not fall under the common case entries defined above.
It consists of an AFI, Subsequent AFI (SAFI), and a single NLRI entry.
The NLRI information is specific to the AFI and SAFI values.
An implementation that does not recognize particular AFI and SAFI values SHOULD discard the remainder of the MRT record. 0
Figure 9: RIB GENERIC Entry Header 4.3.4.
The RIB Entries are repeated Entry Count times.
These entries share a common format as shown below.
They include a Peer Index from the PEER INDEX TABLE MRT record, an originated time for the RIB Entry, and the BGP path attribute length and attributes.
All AS numbers in the AS PATH attribute MUST be encoded as 4 byte AS numbers.
There is one exception to the encoding of BGP attributes for the BGP MP REACH NLRI attribute (BGP Type Code 14)
Since the AFI, SAFI, and NLRI information is already encoded in the RIB Entry Header or RIB GENERIC Entry Header, only the Next Hop Address Length and Next Hop Address fields are included.
The Reserved field is omitted.
The attribute length is also adjusted to reflect only the length of the Next Hop Address Length and Next Hop Address fields.
This type was initially defined in the Zebra software package for the BGP protocol with multiprotocol extension support as defined by RFC 4760
The BGP4MP Type has six Subtypes, which are defined as follows:
0    BGP4MP STATE CHANGE 1    BGP4MP MESSAGE 4    BGP4MP MESSAGE AS4 5    BGP4MP
STATE CHANGE AS4 6    BGP4MP MESSAGE LOCAL 7    BGP4MP MESSAGE
This message is used to encode state changes in the BGP finite state machine (FSM).
The BGP FSM states are encoded in the Old State and New State fields to indicate the previous and current state.
In some cases, the Peer AS Number may be undefined.
In such cases, the value of this field MAY be set to zero.
The format is illustrated below:
The FSM states are defined in RFC 4271 [RFC4271], Section 8.2.2.
Both the Old State value and the New State value are encoded as 2 octet numbers.
The state values are defined numerically as follows: 1    Idle 2    Connect 3    Active 4
OpenSent 5    OpenConfirm 6    Established
The BGP4MP STATE CHANGE message also includes Interface Index and Address Family fields.
The Interface Index provides the interface number of the peering session.
The index value is OPTIONAL and MAY be zero if unknown or unsupported.
The Address Family indicates what types of addresses are in the address fields.
At present, the following AFI Types are supported: 1    AFI IPv4 2    AFI IPv6 4.4.2.
This subtype is used to encode BGP messages.
It can be used to encode any Type of BGP message.
The entire BGP message is encapsulated in the BGP Message field, including the 16 octet marker, the 2 octet length, and the 1 octet type fields.
The BGP4MP MESSAGE Subtype does not support 4 byte AS numbers.
The AS PATH contained in these messages MUST only consist of 2 byte AS numbers.
The BGP4MP MESSAGE AS4 Subtype updates the BGP4MP MESSAGE Subtype in order to support 4 byte AS numbers.
The BGP4MP MESSAGE fields are shown below:
The Interface Index provides the interface number of the peering session.
The index value is OPTIONAL and MAY be zero if unknown or unsupported.
The Address Family indicates what types of addresses are in the subsequent address fields.
At present, the following AFI Types are supported: 1    AFI IPv4 2    AFI IPv6
The Address Family value only applies to the IP addresses contained in the MRT header.
The BGP4MP MESSAGE Subtype is otherwise transparent to the contents of the actual message that may contain any valid AFI/SAFI values.
Only one BGP message SHALL be encoded in the BGP4MP MESSAGE Subtype.
This subtype updates the BGP4MP MESSAGE Subtype to support 4 byte AS numbers.
The BGP4MP MESSAGE AS4 Subtype is otherwise identical to the BGP4MP MESSAGE Subtype.
The AS PATH in these messages MUST only consist of 4 byte AS numbers.
BGP4MP MESSAGE AS4 Subtype 4.4.4.
BGP4MP STATE CHANGE AS4 Subtype
This subtype updates the BGP4MP STATE CHANGE Subtype to support 4 byte AS numbers.
As with the BGP4MP STATE CHANGE Subtype, the BGP FSM states are encoded in the Old State and New State fields to indicate the previous and current state.
Aside from the extension of the Peer and Local AS Number fields to 4 bytes, this subtype is otherwise identical to the BGP4MP STATE CHANGE Subtype.
The BGP4MP STATE CHANGE AS4 fields are shown below:
BGP4MP STATE CHANGE AS4 Subtype 4.4.5.
BGP4MP MESSAGE LOCAL Subtype Implementations of MRT have largely focused on collecting remotely generated BGP messages in a passive route collector role.
However, for active BGP implementations, it can be useful to archive locally generated BGP messages in addition to remote messages.
This subtype is added to indicate a locally generated BGP message.
The fields remain identical to the BGP4MP MESSAGE type including the Peer and Local IP and AS fields.
The Local fields continue to refer to the local IP and AS number of the collector that generated the BGP message, and the Peer IP and AS fields refer to the recipient of the generated BGP messages.
BGP4MP MESSAGE AS4 LOCAL Subtype
As with the BGP4MP MESSAGE LOCAL type, this type indicates locally generated messages.
The fields are identical to the BGP4MP MESSAGE AS4 message type.
This type supports the IS IS routing protocol as defined in RFC 1195 [RFC1195].
There is no Type specific header for the ISIS Type.
The Subtype code for this type is undefined.
The ISIS PDU directly follows the MRT Common Header fields.
The OSPFv3 Type extends the original OSPFv2 Type to support IPv6 addresses for the OSPFv3 protocol as defined in RFC 5340 [RFC5340].
The format of the MRT Message field for the OSPFv3 Type is as follows:
This section provides guidance to the Internet Assigned Numbers Authority (IANA) regarding registration of values related to the MRT specification, in accordance with BCP 26, RFC 5226 [RFC5226].
There are two name spaces in MRT that have been registered: Type Codes and Subtype Codes.
Type Codes and Subtype Codes are each 16 bits in length.
MRT is not intended as a general purpose specification for protocol information export, and allocations should not be made for purposes unrelated to routing protocol information export.
The following policies are used here with the meanings defined in BCP 26: "Specification Required", "IETF Consensus", "Experimental Use", "First Come First Served".
Assignments consist of a name and the value.
Type Codes Type Codes have a range from 0 to 65535, of which 0 64 are reserved.
New Type Codes MUST be allocated starting at 65.
Type Codes 65 511 are assigned by IETF Review.
Type Codes 512 2047 are assigned based on Specification Required.
Type Codes 2048 64511 are available on a First Come First Served policy.
Type Codes 64512 65534 are available for Experimental Use.
The Type Code Value 65535 is reserved.
Subtype Codes Subtype Codes have a range from 0 to 65535.
Subtype definitions are specific to a particular Type Code definition.
New Subtype Code definitions must reference an existing Type Code to which the Subtype belongs.
Subtype assignments follow the assignment rules for the Type Codes to which they belong.
See Appendix B.2.5 BGP4PLUS 01
See Section 4.2 TABLE DUMP V2
Defined BGP, BGP4PLUS, and BGP4PLUS 01 Subtype Codes
This document defines the following message Subtype Codes for the BGP, BGP4PLUS, and BGP4PLUS 01
See Appendix B.2.1 BGP STATE CHANGE
See Appendix B.2.1 BGP SYNC
See Appendix B.2.1 BGP KEEPALIVE
Defined TABLE DUMP Subtype Codes
Defined TABLE DUMP V2 Subtype Codes
This document defines the following message Subtype Codes for the TABLE DUMP V2
Section 4.3 RIB IPV4 UNICAST
Section 4.3 RIB IPV6 UNICAST
Defined BGP4MP and BGP4MP ET Subtype Codes
Section 4.4 BGP4MP STATE CHANGE AS4
See Section 4.4 BGP4MP MESSAGE AS4 LOCAL 7
The MRT Format utilizes a structure that can store routing protocol information data.
The fields defined in the MRT specification are of a descriptive nature and provide information that is useful to facilitate the analysis of routing data.
As such, the fields currently defined in the MRT specification do not in themselves create additional security risks, since the fields are not used to induce any particular behavior by the recipient application.
Some information contained in an MRT data structure might be considered sensitive or private.
For example, a BGP peer that sends a message to an MRT enabled router might not expect that message to be shared beyond the AS to which it is sent.
Information that could be considered sensitive includes BGP peer IP addresses, BGP Next Hop IP addresses, and BGP Path Attributes.
Such information could be useful to mount attacks against the BGP protocol and routing infrastructure.
[RFC4272] examines a number of weaknesses in the BGP protocol that could potentially be exploited.
An organization that intends to use the MRT structure to export routing information beyond the domain where it is normally accessible (
e.g., publishing MRT dumps for use by researchers) should verify with any peers whose information might be included, and possibly remove sensitive fields.
The proposed geolocation extension to MRT could reveal the location of an MRT router's peers [GEOMRT].
This appendix, which is not normative, contains MRT encoding examples.
The following example shows the encoding for an MRT record type of BGP4MP and subtype BGP4MP MESSAGE AS4.
The Peer AS and Local AS numbers are encoded in 4 byte fields due to the use of the BGP4MP MESSAGE AS4 subtype.
The encoded BGP Update is shown in hexadecimal.
The AS numbers in the ASPATH in the BGP Update are encoded as 4 byte values in accord with the MRT BGP4MP MESSAGE AS4 subtype.
00 00 00 1f 40
02 0e 02 03 00 00
fb f6 40 03 04 c6 33 64 55 c0 08 04
fb f0 00 0e 18
MRT BGP4MP MESSAGE AS4 Example
The contents of the BGP Update Message above are as follows:
The following example displays the encoding for an MRT record type of TABLE DUMP V2 and subtype PEER INDEX TABLE.
The table in this example contains 2 entries. 0
1300475700 epoch sec (2011 03 18 19:15:00)
: MRT PEER INDEX TABLE Example
The following example displays the encoding for an MRT record type of TABLE DUMP V2 and subtype RIB IPV6 UNICAST.
This entry applies to the NLRI prefix of 2001:0DB8::/32.
There is a single entry for this prefix.
The entry applies to the peer identified by index location 15 in a preceding MRT PEER INDEX TABLE record. 0
1300475700 epoch sec (2011 03 18 19:15:00)
50 02 00 0e 02 03 00 00
fb f6 80 0e 2b 00
02 01 20 20 01 0d b8 00
87 fe 80 00 00 00 00 00
12 f2 ff fe 9f 1b 00 00 00
20 20 01 0d b8 Figure 19
: MRT RIB IPV6 UNICAST Example
The contents of the BGP Path Attribute field above are as follows:
64496 64511 64502 MP REACH NLRI(IPv6 Unicast)
BGP Path Attribute Contents Appendix B.  Deprecated MRT Types
This appendix lists deprecated MRT types.
These types are documented for informational purposes.
The initial MRT format defined five Informational Type records.
These records were intended to signal the state of an MRT data collector and do not contain routing information.
These records were intended for use when MRT records were sent over a network to a remote repository store.
However, MRT record repository stores have traditionally resided on the same device as the collector, and these Informational Types are not known to be implemented.
Further, transport mechanisms for MRT records are considered to be outside the scope of this document.
The Message field MAY contain an OPTIONAL string for diagnostic purposes.
The message string encoding MUST follow the UTF 8 transformation format [RFC3629].
The Subtype field is unused for these Types and SHOULD be set to 0.
The MRT Informational Types are defined below: 0    NULL 1    START 2    DIE 3
I AM DEAD 4    PEER DOWN
The NULL Type message causes no operation.
The START Type indicates that a collector is about to begin generating MRT records.
The DIE Type signals a remote MRT repository that it SHOULD stop accepting messages.
I AM DEAD MRT record indicates that a collector has shut down and has stopped generating MRT records.
The PEER DOWN message was intended to indicate that a collector had lost association with a BGP peer.
However, the MRT format provides BGP state change message types that duplicate this functionality.
Other Deprecated MRT Types 5    BGP 6    RIP 7    IDRP 8    RIPNG 9
The BGP Type indicates that the Message field contains BGP routing information.
The BGP routing protocol is defined in RFC 4271 [RFC4271].
The information in the message is dependent on the Subtype value.
The BGP Type and all associated Subtypes below are considered to be deprecated by the BGP4MP Type.
The following BGP Subtypes are defined for the MRT BGP Type.
As with the BGP Type itself, they are all considered to be deprecated. 0
BGP NULL 1    BGP UPDATE
3    BGP STATE CHANGE 4    BGP SYNC
5    BGP OPEN 6    BGP NOTIFY
The BGP NULL Subtype is a reserved Subtype.
The BGP UPDATE Subtype is used to encode BGP UPDATE messages.
The format of the MRT Message field for this subtype is as follows:
The BGP UPDATE Contents include the entire BGP UPDATE message, which follows the BGP Message Header.
The BGP Message Header itself is not included.
The Peer AS Number and IP Address fields contain the AS number and IP address of the remote system that is generating the BGP UPDATE messages.
The Local AS Number and IP Address fields contain the AS number and IP address of the local collector system that is archiving the messages.
PREF UPDATE Subtype is not defined.
The BGP STATE CHANGE Subtype is used to reflect changes in the BGP finite state machine.
These FSM states are defined in RFC 4271 [RFC4271], Section 8.2.2.
Both the Old State value and the New State value are encoded as 2 octet numbers.
The state values are defined numerically as follows: 1    Idle 2    Connect 3    Active 4
OpenSent 5    OpenConfirm 6    Established
BGP STATE CHANGE Subtype B.2.1.5.
The BGP SYNC Subtype was intended to convey a system file name where BGP Table Dump messages MAY be recorded.
The View Number was to correspond to the View Number provided in the TABLE DUMP Type records.
There are no known implementations of this subtype, and it SHOULD be ignored.
The following format applies to this subtype:
The File Name is terminated with a NULL (0) character.
The BGP OPEN Subtype is used to encode BGP OPEN messages.
The format of the MRT Message field for this subtype is the same as the BGP UPDATE; however, the last field contains the contents of the BGP OPEN message.
The BGP NOTIFY Subtype is used to encode BGP NOTIFICATION messages.
The format of the MRT Message field for this subtype is the same as the BGP UPDATE; however, the last field contains the contents of the BGP NOTIFICATION message.
The BGP KEEPALIVE Subtype is used to encode BGP KEEPALIVE messages.
The format of the MRT Message field for this subtype is the same as the BGP UPDATE; however, the last field contains no information.
The RIP Type is used to export RIP packets as defined in RFC 2453
The Subtype field is currently reserved for this type and SHOULD be set to 0.
The format of the MRT Message field for the RIP Type is as follows:
Figure 24: RIP Type B.2.3.
The IDRP Type was intended to be used to export Inter Domain Routing Protocol (IDRP) information as defined in the ISO/IEC 10747 standard.
However, this type has seen no known use, and there are no details on protocol encoding for this type.
The RIPNG Type is used to export RIPNG protocol packets as defined in RFC 2080
The RIPNG protocol updates the RIP protocol to support IPv6.
The Subtype field is currently reserved for this type and SHOULD be set to 0.
The format of the MRT Message field for the RIPNG Type is as follows:
BGP4PLUS 01 Types were defined to support IPv6 BGP routing information.
The BGP4PLUS Type was specified based on the initial Internet Draft that became RFC 4760, "Multiprotocol Extensions to BGP 4".
The BGP4PLUS 01 Type was specified to correspond to the  01 revision of that Internet Draft.
The two Types share the same definitions in terms of their MRT format specifications.
The Subtype field definitions are shared with the BGP Type; however, the address fields in the BGP UPDATE, BGP OPEN, BGP NOTIFY, BGP KEEPALIVE, and BGP STATE CHANGE Subtype records are extended to 16 octets for IPv6 addresses.
As with the BGP Type,
the BGP4PLUS and BGP4PLUS 01 Types are deprecated as they were superseded by the BGP4MP Type.
The following two subtypes of the BGP4MP Type are considered to be deprecated.
ENTRY 3    BGP4MP SNAPSHOT B.2.6.1.
This subtype is similar to the TABLE DUMP Type and is used to record RIB table entries.
It was intended to include true multiprotocol support.
However, this subtype does not support 4 byte AS numbers and has not been widely implemented.
This subtype was intended to convey a system file name where BGP4MP ENTRY records MAY be recorded.
It is similar to the BGP SYNC Subtype and is deprecated.
