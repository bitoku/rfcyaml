- contents:
  - '                 YANG Data Model for Network Instances

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This document defines a network instance module.  This module can
    be\n   used to manage the virtual resource partitioning that may be present\n
    \  on a network device.  Examples of common industry terms for virtual\n   resource
    partitioning are VPN Routing and Forwarding (VRF) instances\n   and Virtual Switch
    Instances (VSIs).\n   The YANG data model in this document conforms to the Network\n
    \  Management Datastore Architecture (NMDA) defined in RFC 8342.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8529.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   3\n     1.1.  Terminology . . . . . . . . . . . . . . . . . . . .
    . . .   4\n   2.  Overview  . . . . . . . . . . . . . . . . . . . . . . . . .
    .   4\n   3.  Network Instances . . . . . . . . . . . . . . . . . . . . . .   6\n
    \    3.1.  NI Types and Mount Points . . . . . . . . . . . . . . . .   7\n       3.1.1.
    \ Well-Known Mount Points . . . . . . . . . . . . . . .   8\n       3.1.2.  NI
    Type Example . . . . . . . . . . . . . . . . . . .   9\n     3.2.  NIs and Interfaces
    \ . . . . . . . . . . . . . . . . . . .   9\n     3.3.  Network Instance Management
    . . . . . . . . . . . . . . .  11\n     3.4.  Network Instance Instantiation  .
    . . . . . . . . . . . .  14\n   4.  Security Considerations . . . . . . . . .
    . . . . . . . . . .  14\n   5.  IANA Considerations . . . . . . . . . . . . .
    . . . . . . . .  15\n   6.  Network Instance Model  . . . . . . . . . . . . .
    . . . . . .  16\n   7.  References  . . . . . . . . . . . . . . . . . . . . .
    . . . .  22\n     7.1.  Normative References  . . . . . . . . . . . . . . . .
    . .  22\n     7.2.  Informative References  . . . . . . . . . . . . . . . . .
    \ 23\n   Appendix A.  Example NI Usage . . . . . . . . . . . . . . . . . .  25\n
    \    A.1.  Configuration Data  . . . . . . . . . . . . . . . . . . .  25\n     A.2.
    \ State Data - Non-NMDA Version . . . . . . . . . . . . . .  28\n     A.3.  State
    Data - NMDA Version . . . . . . . . . . . . . . . .  35\n   Acknowledgments .
    . . . . . . . . . . . . . . . . . . . . . . . .  44\n   Authors' Addresses  .
    . . . . . . . . . . . . . . . . . . . . . .  44\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This document defines the second of two new modules that
    are defined\n   to support the configuration and operation of network devices
    that\n   allow for the partitioning of resources from both, or either,\n   management
    and networking perspectives.  Both leverage the YANG\n   functionality enabled
    by YANG Schema Mount [RFC8528].\n   The YANG data model in this document conforms
    to the Network\n   Management Datastore Architecture defined in [RFC8342].\n   The
    first form of resource partitioning provides a logical\n   partitioning of a network
    device where each partition is separately\n   managed as essentially an independent
    network element that is\n   \"hosted\" by the base network device.  These hosted
    network elements\n   are referred to as logical network elements, or LNEs, and
    are\n   supported by the logical-network-element module defined in [RFC8530].\n
    \  That module is used to identify LNEs and associate resources from the\n   network
    device with each LNE.  LNEs themselves are represented in\n   YANG as independent
    network devices; each is accessed independently.\n   Examples of vendor terminology
    for an LNE include logical system or\n   logical router and virtual switch, chassis,
    or fabric.\n   The second form, which is defined in this document, provides support\n
    \  for what are commonly referred to as VPN Routing and Forwarding (VRF)\n   instances
    as well as Virtual Switch Instances (VSI); see [RFC4026]\n   and [RFC4664].  In
    this form of resource partitioning, multiple\n   control-plane and forwarding/bridging
    instances are provided by and\n   managed through a single (physical or logical)
    network device.  This\n   form of resource partitioning is referred to as a Network
    Instance\n   (NI) and is supported by the network instance module defined below.\n
    \  Configuration and operation of each network instance is always via\n   the
    network device and the network instance module.\n   One notable difference between
    the LNE model and the NI model is that\n   the NI model provides a framework for
    VRF and VSI management.  This\n   document envisions the separate definition of
    models specific to VRF\n   and VSI -- i.e., L3 and L2 VPN -- technology.  An example
    of such can\n   be found in the emerging L3VPN model defined in [YANG-L3VPN] and
    the\n   examples discussed below.\n"
  - contents:
    - "1.1.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
      \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\",
      \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described
      in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all\n
      \  capitals, as shown here.\n   Readers are expected to be familiar with terms
      and concepts of YANG\n   [RFC7950] and YANG Schema Mount [RFC8528].\n   This
      document uses the graphical representation of data models\n   defined in [RFC8340].\n"
    title: 1.1.  Terminology
  title: 1.  Introduction
- contents:
  - "2.  Overview\n   In this document, we consider network devices that support protocols\n
    \  and functions defined within the IETF -- e.g., routers, firewalls,\n   and
    hosts.  Such devices may be physical or virtual, e.g., a classic\n   router with
    custom hardware or one residing within a server-based\n   virtual machine implementing
    a virtual network function (VNF).  Each\n   device may subdivide their resources
    into logical network elements\n   (LNEs), each of which provides a managed logical
    device.  Examples of\n   vendor terminology for an LNE include logical system
    or logical\n   router and virtual switch, chassis, or fabric.  Each LNE may also\n
    \  support VRF and VSI functions, which are referred to below as network\n   instances
    (NIs).  This breakdown is represented in Figure 1.\n              ,''''''''''''''''''''''''''''''''''''''''''''''`.\n
    \             |      Network Device (Physical or Virtual)     |\n              |
    .....................   ..................... |\n              | :  Logical Network
    \ :   :  Logical Network  : |\n              | :      Element      :   :      Element
    \     : |\n              | :+-----+-----+-----+:   :+-----+-----+-----+: |\n              |
    :| Net | Net | Net |:   :| Net | Net | Net |: |\n              | :|Inst.|Inst.|Inst.|:
    \  :|Inst.|Inst.|Inst.|: |\n              | :+-----+-----+-----+:   :+-----+-----+-----+:
    |\n              | :  | |   | |   | |  :   :  | |   | |   | |  : |\n              |
    :..|.|...|.|...|.|..:   :..|.|...|.|...|.|..: |\n              |    | |   | |
    \  | |         | |   | |   | |    |\n               `'''|'|'''|'|'''|'|'''''''''|'|'''|'|'''|'|'''''\n
    \                  | |   | |   | |         | |   | |   | |\n                      Interfaces
    \             Interfaces\n                    Figure 1: Module Element Relationships\n
    \  A model for LNEs is described in [RFC8530], and the model for NIs is\n   covered
    in Section 3 of this document.\n   The current interface management model [RFC8343]
    is impacted by the\n   definition of LNEs and NIs.  This document and [RFC8530]
    define\n   augmentations to the interface module to support LNEs and NIs.\n   The
    network instance model supports the configuration of VRFs and\n   VSIs.  Each
    instance is supported by information that relates to the\n   device -- for example,
    the route target used when advertising VRF\n   routes via the mechanisms defined
    in [RFC4364], and information that\n   relates to the internal operation of the
    NI, such as for routing\n   protocols [RFC8349] and OSPF [YANG-OSPF].  This document
    defines the\n   network instance module that provides a basis for the management
    of\n   both types of information.\n   NI information that relates to the device,
    including the assignment\n   of interfaces to NIs, is defined as part of this
    document.  The\n   defined module also provides a placeholder for the definition
    of\n   NI-technology-specific information both at the device level and for\n   NI
    internal operation.  Information related to NI internal operation\n   is supported
    via schema mount [RFC8528] and mounting appropriate\n   modules under the mount
    point.  Well-known mount points are defined\n   for L3VPN, L2VPN, and L2+L3VPN
    NI types.\n"
  title: 2.  Overview
- contents:
  - "3.  Network Instances\n   The network instance container is used to represent
    VRFs and VSIs.\n   VRFs and VSIs are commonly used to isolate routing and switching\n
    \  domains -- for example, to create virtual private networks, each with\n   their
    own active protocols and routing/switching policies.  The model\n   supports both
    core/provider and virtual instances.  Core/provider\n   instance information is
    accessible at the top level of the server,\n   while virtual instance information
    is accessible under the root\n   schema mount points.\n   module: ietf-network-instance\n
    \    +--rw network-instances\n        +--rw network-instance* [name]\n           +--rw
    name           string\n           +--rw enabled?       boolean\n           +--rw
    description?   string\n           +--rw (ni-type)?\n           +--rw (root-type)\n
    \             +--:(vrf-root)\n              |  +--mp vrf-root\n              +--:(vsi-root)\n
    \             |  +--mp vsi-root\n              +--:(vv-root)\n                 +--mp
    vv-root\n   augment /if:interfaces/if:interface:\n     +--rw bind-ni-name?   ->
    /network-instances/network-instance/name\n   augment /if:interfaces/if:interface/ip:ipv4:\n
    \    +--rw bind-ni-name?   -> /network-instances/network-instance/name\n   augment
    /if:interfaces/if:interface/ip:ipv6:\n     +--rw bind-ni-name?   -> /network-instances/network-instance/name\n
    \  notifications:\n     +---n bind-ni-name-failed\n        +--ro name          ->
    /if:interfaces/interface/name\n        +--ro interface\n        |  +--ro bind-ni-name?\n
    \       |                  -> /if:interfaces/interface/ni:bind-ni-name\n        +--ro
    ipv4\n        |  +--ro bind-ni-name?\n        |          -> /if:interfaces/interface/ip:ipv4/ni:bind-ni-name\n
    \       +--ro ipv6\n        |  +--ro bind-ni-name?\n        |          -> /if:interfaces/interface/ip:ipv6/ni:bind-ni-name\n
    \       +--ro error-info?   string\n   A network instance is identified by a \"name\"
    string.  This string is\n   used both as an index within the network instance
    module and to\n   associate resources with a network instance, as shown above
    in the\n   interface augmentation.  The ni-type and root-type choice statements\n
    \  are used to support different types of L2 and L3 VPN technologies.\n   The
    bind-ni-name-failed notification is used in certain failure\n   cases.\n"
  - contents:
    - "3.1.  NI Types and Mount Points\n   The network instance module is structured
      to facilitate the\n   definition of information models for specific types of
      VRFs and VSIs\n   using augmentations.  For example, the information needed
      to support\n   L2VPN, such as VPLS and EVPN, are likely to be quite different.\n
      \  Example models under development that could be restructured to take\n   advantage
      on NIs include models for L3VPNs [YANG-L3VPN] and L2VPNs\n   [YANG-L2VPN].\n
      \  Documents defining new YANG data models for the support of specific\n   types
      of network instances should augment the network instance\n   module.  The basic
      structure that should be used for such\n   augmentations includes a case statement
      with containers for\n   configuration and state data and, when needed, a type-specific
      mount\n   point.  Generally, NI types are expected to not need to define type-\n
      \  specific mount points but rather reuse one of the well-known mount\n   points,
      as defined in the next section.  The following is an example\n   type-specific
      augmentation:\n    augment \"/ni:network-instances/ni:network-instance/ni:ni-type\"
      {\n      case l3vpn {\n        container l3vpn {\n            ...\n        }\n
      \       container l3vpn-state {\n            ...\n        }\n      }\n    }\n"
    - contents:
      - "3.1.1.  Well-Known Mount Points\n   YANG Schema Mount [RFC8528] identifies
        mount points by name within a\n   module.  This definition allows for the
        definition of mount points\n   whose schema can be shared across NI types.
        \ As discussed above,\n   ni-types largely differ in the configuration information
        needed in\n   the core/top-level instance to support the NI, rather than in
        the\n   information represented within an NI.  This allows the use of shared\n
        \  mount points across certain NI types.\n   The expectation is that there
        are actually very few different schemas\n   that need to be defined to support
        NIs for an implementation.  In\n   particular, it is expected that the following
        three forms of NI\n   schema are needed, and each can be defined with a well-known
        mount\n   point that can be reused by future modules defining NI types.\n
        \  The three well-known mount points are:\n   vrf-root\n      vrf-root is
        intended for use with L3VPN-type NI types.\n   vsi-root\n      vsi-root is
        intended for use with L2VPN-type Ni types.\n   vv-root\n      vv-root is intended
        for use with NI types that simultaneously\n      support L2VPN bridging and
        L3VPN routing capabilities.\n   Future model definitions should use the above
        mount points whenever\n   possible.  When a well-known mount point isn't appropriate,
        a model\n   may define a type-specific mount point via augmentation.\n"
      title: 3.1.1.  Well-Known Mount Points
    - contents:
      - "3.1.2.  NI Type Example\n   The following is an example of an L3VPN VRF using
        a hypothetical\n   augmentation to the network instance schema defined in
        [YANG-L3VPN].\n   More detailed examples can be found in Appendix A.\n   module:
        ietf-network-instance\n     +--rw network-instances\n        +--rw network-instance*
        [name]\n           +--rw name           string\n           +--rw enabled?
        \      boolean\n           +--rw description?   string\n           +--rw (ni-type)?\n
        \          |  +--:(l3vpn)\n           |     +--rw l3vpn:l3vpn\n           |
        \    |  ... // config data\n           |     +--ro l3vpn:l3vpn-state\n           |
        \    |  ... // state data\n           +--rw (root-type)\n              +--:(vrf-root)\n
        \                +--mp vrf-root\n                    +--rw rt:routing/\n                    |
        \ +--rw router-id?                 yang:dotted-quad\n                    |
        \ +--rw control-plane-protocols\n                    |     +--rw control-plane-protocol*
        [type name]\n                    |     +--rw ospf:ospf\n                    |
        \         +--rw area* [area-id]\n                    |             +--rw interfaces\n
        \                   |                +--rw interface* [name]\n                    |
        \                  +--rw name if:interface-ref\n                    |                   +--rw
        cost?   uint16\n                    +--ro if:interfaces@\n                    |
        \ ...\n   This shows YANG Routing Management [RFC8349] and YANG OSPF\n   [YANG-OSPF]
        as mounted modules.  The mounted modules can reference\n   interface information
        via a parent-reference to the containers\n   defined in [RFC8343].\n"
      title: 3.1.2.  NI Type Example
    title: 3.1.  NI Types and Mount Points
  - contents:
    - "3.2.  NIs and Interfaces\n   Interfaces are a crucial part of any network device's
      configuration\n   and operational state.  They generally include a combination
      of raw\n   physical interfaces, link-layer interfaces, addressing configuration,\n
      \  and logical interfaces that may not be tied to any physical\n   interface.
      \ Several system services and Layer 2 and Layer 3 protocols\n   may also associate
      configuration or operational state data with\n   different types of interfaces
      (these relationships are not shown for\n   simplicity).  The interface management
      model is defined by [RFC8343].\n   As shown below, the network instance module
      augments the existing\n   interface management model by adding a name that is
      used on interface\n   or sub-interface types to identify an associated network
      instance.\n   Similarly, this name is also added for IPv4 and IPv6 types, as\n
      \  defined in [RFC8344].\n   The following is an example of envisioned usage.
      \ The interfaces\n   container includes a number of commonly used components
      as examples:\n   module: ietf-interfaces\n      +--rw interfaces\n      |  +--rw
      interface* [name]\n      |     +--rw name                        string\n      |
      \    +--rw ip:ipv4!\n      |     |  +--rw ip:enabled?                      boolean\n
      \     |     |  +--rw ip:forwarding?                   boolean\n      |     |
      \ +--rw ip:mtu?                          uint16\n      |     |  +--rw ip:address*
      [ip]\n      |     |  |  +--rw ip:ip               inet:ipv4-address-no-zone\n
      \     |     |  |  +--rw (ip:subnet)\n      |     |  |     +--:(ip:prefix-length)\n
      \     |     |  |     |  +--rw ip:prefix-length?   uint8\n      |     |  |     +--:(ip:netmask)\n
      \     |     |  |        +--rw ip:netmask?         yang:dotted-quad\n      |
      \    |  +--rw ip:neighbor* [ip]\n      |     |  |  +--rw ip:ip                  inet:ipv4-address-no-zone\n
      \     |     |  |  +--rw ip:link-layer-address yang:phys-address\n      |     |
      \ +--rw ni:bind-network-instance-name?   string\n      |     +--rw ni:bind-network-instance-name?
      \  string\n   The \"ietf-interfaces\" module [RFC8343] is structured to include
      all\n   interfaces in a flat list, without regard to virtual instances (e.g.,\n
      \  VRFs) supported on the device.  The bind-network-instance-name leaf\n   provides
      the association between an interface and its associated NI\n   (e.g., VRF or
      VSI).  Note that as currently defined, to assign an\n   interface to both an
      LNE and an NI, the interface would first be\n   assigned to the LNE using the
      mechanisms defined in [RFC8530] and\n   then, within that LNE's interface module,
      the LNE's representation of\n   that interface would be assigned to an NI.\n"
    title: 3.2.  NIs and Interfaces
  - contents:
    - "3.3.  Network Instance Management\n   Modules that may be used to represent
      network instance information\n   will be available under the \"root\" mount
      point specific to the\n   ni-type.  The \"shared-schema\" method defined in
      the \"ietf-yang-\n   schema-mount\" module [RFC8528] MUST be used to identify
      accessible\n   modules.  A future version of this document could relax this\n
      \  requirement.  Mounted modules SHOULD be defined with access, via the\n   appropriate
      schema mount parent-references [RFC8528], to device\n   resources such as interfaces.
      \ An implementation MAY choose to\n   restrict parent-referenced information
      to information related to a\n   specific instance.  For example, it might only
      allow references to\n   interfaces that have a \"bind-network-instance-name\"
      that is identical\n   to the instance's \"name\".\n   All modules that represent
      control-plane and data-plane information\n   may be present at the \"root\"
      mount point and accessible via paths\n   modified per [RFC8528].  The list of
      available modules is expected to\n   be implementation dependent, as is the
      method used by an\n   implementation to support NIs.\n   For example, the following
      could be used to define the data\n   organization of the example NI shown in
      Section 3.1.2:\n     \"ietf-yang-schema-mount:schema-mounts\": {\n       \"mount-point\":
      [\n         {\n           \"module\": \"ietf-network-instance\",\n           \"label\":
      \"vrf-root\",\n           \"shared-schema\": {\n             \"parent-reference\":
      [\n               \"/*[namespace-uri() = 'urn:ietf:...:ietf-interfaces']\"\n
      \            ]\n           }\n         }\n       ]\n     }\n   Module data identified
      according to the ietf-yang-schema-mount module\n   will be instantiated under
      the mount point identified under\n   \"mount-point\".  These modules will be
      able to reference information\n   for nodes belonging to top-level modules that
      are identified under\n   \"parent-reference\".  Parent-referenced information
      is available to\n   clients via their top-level paths only and not under the
      associated\n   mount point.\n   To allow a client to understand the previously
      mentioned instance\n   restrictions on parent-referenced information, an implementation
      MAY\n   represent such restrictions in the \"parent-reference\" leaf-list.  For\n
      \  example:\n     \"namespace\": [\n       {\n         \"prefix\": \"if\",\n
      \        \"uri\": \"urn:ietf:params:xml:ns:yang:ietf-interfaces\"\n       },\n
      \      {\n         \"prefix\": \"ni\",\n         \"uri\": \"urn:ietf:params:xml:ns:yang:ietf-network-instance\"\n
      \      }\n     ],\n     \"mount-point\": [\n       {\n         \"module\": \"ietf-network-instance\",\n
      \        \"label\": \"vrf-root\",\n         \"shared-schema\": {\n           \"parent-reference\":
      [\n             \"/if:interfaces/if:interface\n                [ni:bind-network-instance-name
      = current()/../ni:name]\",\n             \"/if:interfaces/if:interface/ip:ipv4\n
      \               [ni:bind-network-instance-name = current()/../ni:name]\",\n
      \            \"/if:interfaces/if:interface/ip:ipv6\n                [ni:bind-network-instance-name
      = current()/../ni:name]\"\n           ]\n         }\n       }\n     ],\n   The
      same such \"parent-reference\" restrictions for non-NMDA\n   implementations
      can be represented based on [RFC8343] and [RFC8344]\n   as:\n     \"namespace\":
      [\n       {\n         \"prefix\": \"if\",\n         \"uri\": \"urn:ietf:params:xml:ns:yang:ietf-interfaces\"\n
      \      },\n       {\n         \"prefix\": \"ni\",\n         \"uri\": \"urn:ietf:params:xml:ns:yang:ietf-network-instance\"\n
      \      }\n     ],\n     \"mount-point\": [\n       {\n         \"module\": \"ietf-network-instance\",\n
      \        \"label\": \"vrf-root\",\n         \"shared-schema\": {\n           \"parent-reference\":
      [\n             \"/if:interfaces/if:interface\n                [ni:bind-network-instance-name
      = current()/../ni:name]\",\n             \"/if:interfaces-state/if:interface\n
      \               [if:name = /if:interfaces/if:interface\n                  [ni:bind-ni-name
      = current()/../ni:name]/if:name]\",\n             \"/if:interfaces/if:interface/ip:ipv4\n
      \               [ni:bind-network-instance-name = current()/../ni:name]\",\n
      \            \"/if:interfaces-state/if:interface/ip:ipv4\n                [if:name
      = /if:interfaces/if:interface/ip:ipv4\n                  [ni:bind-ni-name =
      current()/../ni:name]/if:name]\",\n             \"/if:interfaces/if:interface/ip:ipv6\n
      \               [ni:bind-network-instance-name = current()/../ni:name]\",\n
      \            \"/if:interfaces-state/if:interface/ip:ipv6\n                [if:name
      = /if:interfaces/if:interface/ip:ipv6\n                  [ni:bind-ni-name =
      current()/../ni:name]/if:name]\"\n           ]\n         }\n       }\n     ],\n"
    title: 3.3.  Network Instance Management
  - contents:
    - "3.4.  Network Instance Instantiation\n   Network instances may be controlled
      by clients using existing list\n   operations.  When a list entry is created,
      a new instance is\n   instantiated.  The models mounted under an NI root are
      expected to be\n   dependent on the server implementation.  When a list entry
      is\n   deleted, an existing network instance is destroyed.  For more\n   information,
      see Section 7.8.6 of [RFC7950].\n   Once instantiated, host network device resources
      can be associated\n   with the new NI.  As previously mentioned, this document
      augments\n   ietf-interfaces with the bind-ni-name leaf to support such\n   associations
      for interfaces.  When a bind-ni-name is set to a valid\n   NI name, an implementation
      MUST take whatever steps are internally\n   necessary to assign the interface
      to the NI or provide an error\n   message (defined below) with an indication
      of why the assignment\n   failed.  It is possible for the assignment to fail
      while processing\n   the set operation or after asynchronous processing.  Error\n
      \  notification in the latter case is supported via a notification.\n"
    title: 3.4.  Network Instance Instantiation
  title: 3.  Network Instances
- contents:
  - "4.  Security Considerations\n   The YANG modules specified in this document define
    a schema for data\n   that is designed to be accessed via network management protocols
    such\n   as NETCONF [RFC6241] or RESTCONF [RFC8040].  The lowest NETCONF layer\n
    \  is the secure transport layer, and the mandatory-to-implement secure\n   transport
    is Secure Shell (SSH) [RFC6242].  The lowest RESTCONF layer\n   is HTTPS, and
    the mandatory-to-implement secure transport is TLS\n   [RFC8446].\n   The Network
    Configuration Access Control Model (NACM) [RFC8341]\n   provides the means to
    restrict access for particular NETCONF or\n   RESTCONF users to a preconfigured
    subset of all available NETCONF or\n   RESTCONF protocol operations and content.\n
    \  There are two different sets of security considerations to consider\n   in
    the context of this document.  One set is security related to\n   information
    contained within mounted modules.  The security\n   considerations for mounted
    modules are not substantively changed\n   based on the information being accessible
    within the context of an\n   NI.  For example, when considering the modules defined
    in [RFC8349],\n   the security considerations identified in that document are
    equally\n   applicable, whether those modules are accessed at a server's root
    or\n   under an NI instance's root node.\n   The second area for consideration
    is information contained in the NI\n   module itself.  NI information represents
    network configuration and\n   route distribution policy information.  As such,
    the security of this\n   information is important, but it is fundamentally no
    different than\n   any other interface or routing configuration information that
    has\n   already been covered in [RFC8343] and [RFC8349].\n   The vulnerable \"config
    true\" parameters and subtrees are the\n   following:\n   /network-instances/network-instance:
    \ This list specifies the network\n      instances and the related control plane
    protocols configured on a\n      device.\n   /if:interfaces/if:interface/*/bind-network-instance-name:
    \ This leaf\n      indicates the NI instance to which an interface is assigned.\n
    \  Unauthorized access to any of these lists can adversely affect the\n   routing
    subsystem of both the local device and the network.  This may\n   lead to network
    malfunctions, delivery of packets to inappropriate\n   destinations, and other
    problems.\n"
  title: 4.  Security Considerations
- contents:
  - "5.  IANA Considerations\n   This document registers a URI in the \"IETF XML Registry\"
    [RFC3688].\n        URI: urn:ietf:params:xml:ns:yang:ietf-network-instance\n        Registrant
    Contact: The IESG.\n        XML: N/A, the requested URI is an XML namespace.\n
    \  This document registers a YANG module in the \"YANG Module Names\"\n   registry
    [RFC6020].\n     name:        ietf-network-instance\n     namespace:   urn:ietf:params:xml:ns:yang:ietf-network-instance\n
    \    prefix:      ni\n     reference:   RFC 8529\n"
  title: 5.  IANA Considerations
- contents:
  - "6.  Network Instance Model\n   The structure of the model defined in this document
    is described by\n   the YANG module below.\n   <CODE BEGINS> file \"ietf-network-instance@2019-01-21.yang\"\n
    \  module ietf-network-instance {\n     yang-version 1.1;\n     namespace \"urn:ietf:params:xml:ns:yang:ietf-network-instance\";\n
    \    prefix ni;\n     // import some basic types\n     import ietf-interfaces
    {\n       prefix if;\n       reference\n         \"RFC 8343: A YANG Data Model
    for Interface Management\";\n     }\n     import ietf-ip {\n       prefix ip;\n
    \      reference\n         \"RFC 8344: A YANG Data Model for IP Management\";\n
    \    }\n     import ietf-yang-schema-mount {\n       prefix yangmnt;\n       reference\n
    \        \"RFC 8528: YANG Schema Mount\";\n     }\n     organization\n       \"IETF
    Routing Area (rtgwg) Working Group\";\n     contact\n       \"WG Web:   <https://datatracker.ietf.org/wg/rtgwg>\n
    \       WG List:  <mailto:rtgwg@ietf.org>\n        Author:   Lou Berger\n                  <mailto:lberger@labn.net>\n
    \       Author:   Christian Hopps\n                  <mailto:chopps@chopps.org>\n
    \       Author:   Acee Lindem\n                  <mailto:acee@cisco.com>\n        Author:
    \  Dean Bogdanovic\n                  <mailto:ivandean@gmail.com>\";\n     description\n
    \      \"This module is used to support multiple network instances\n        within
    a single physical or virtual device.  Network\n        instances are commonly
    known as VRFs (VPN Routing and\n        Forwarding) and VSIs (Virtual Switching
    Instances).\n        The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL',\n
    \       'SHALL NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED',\n        'NOT RECOMMENDED',
    'MAY', and 'OPTIONAL' in this document\n        are to be interpreted as described
    in BCP 14 (RFC 2119)\n        (RFC 8174) when, and only when, they appear in all
    capitals,\n         as shown here.\n        Copyright (c) 2019 IETF Trust and
    the persons identified as\n        authors of the code.  All rights reserved.\n
    \       Redistribution and use in source and binary forms, with or\n        without
    modification, is permitted pursuant to, and subject\n        to the license terms
    contained in, the Simplified BSD\n        License set forth in Section 4.c of
    the IETF Trust's Legal\n        Provisions Relating to IETF Documents\n        (https://trustee.ietf.org/license-info).\n
    \       This version of this YANG module is part of RFC 8529; see\n        the
    RFC itself for full legal notices.\";\n     revision 2019-01-21 {\n       description\n
    \        \"Initial revision.\";\n       reference\n         \"RFC 8529\";\n     }\n
    \    // top-level device definition statements\n     container network-instances
    {\n       description\n         \"Network instances, each of which consists of\n
    \         VRFs and/or VSIs.\";\n       reference\n         \"RFC 8349: A YANG
    Data Model for Routing Management\";\n       list network-instance {\n         key
    \"name\";\n         description\n           \"List of network instances.\";\n
    \        leaf name {\n           type string;\n           mandatory true;\n           description\n
    \            \"device-scoped identifier for the network\n              instance.\";\n
    \        }\n         leaf enabled {\n           type boolean;\n           default
    \"true\";\n           description\n             \"Flag indicating whether or not
    the network\n              instance is enabled.\";\n         }\n         leaf
    description {\n           type string;\n           description\n             \"Description
    of the network instance\n              and its intended purpose.\";\n         }\n
    \        choice ni-type {\n           description\n             \"This node serves
    as an anchor point for different types\n              of network instances.  Each
    'case' is expected to\n              differ in terms of the information needed
    in the\n              parent/core to support the NI and may differ in their\n
    \             mounted-schema definition.  When the mounted schema is\n              not
    expected to be the same for a specific type of NI,\n              a mount point
    should be defined.\";\n         }\n         choice root-type {\n           mandatory
    true;\n           description\n             \"Well-known mount points.\";\n           container
    vrf-root {\n             description\n               \"Container for mount point.\";\n
    \            yangmnt:mount-point \"vrf-root\" {\n               description\n
    \                \"Root for L3VPN-type models.  This will typically\n                  not
    be an inline-type mount point.\";\n             }\n           }\n           container
    vsi-root {\n             description\n               \"Container for mount point.\";\n
    \            yangmnt:mount-point \"vsi-root\" {\n               description\n
    \                \"Root for L2VPN-type models.  This will typically\n                  not
    be an inline-type mount point.\";\n             }\n           }\n           container
    vv-root {\n             description\n               \"Container for mount point.\";\n
    \            yangmnt:mount-point \"vv-root\" {\n               description\n                 \"Root
    models that support both L2VPN-type bridging\n                  and L3VPN-type
    routing.  This will typically\n                  not be an inline-type mount point.\";\n
    \            }\n           }\n         }\n       }\n     }\n     // augment statements\n
    \    augment \"/if:interfaces/if:interface\" {\n       description\n         \"Add
    a node for the identification of the network\n          instance associated with
    the information configured\n          on a interface.\n          Note that a standard
    error will be returned if the\n          identified leafref isn't present.  If
    an interface cannot\n          be assigned for any other reason, the operation
    SHALL fail\n          with an error-tag of 'operation-failed' and an\n          error-app-tag
    of 'ni-assignment-failed'.  A meaningful\n          error-info that indicates
    the source of the assignment\n          failure SHOULD also be provided.\";\n
    \      leaf bind-ni-name {\n         type leafref {\n           path \"/network-instances/network-instance/name\";\n
    \        }\n         description\n           \"Network instance to which an interface
    is bound.\";\n       }\n     }\n     augment \"/if:interfaces/if:interface/ip:ipv4\"
    {\n       description\n         \"Add a node for the identification of the network\n
    \         instance associated with the information configured\n          on an
    IPv4 interface.\n          Note that a standard error will be returned if the\n
    \         identified leafref isn't present.  If an interface cannot\n          be
    assigned for any other reason, the operation SHALL fail\n          with an error-tag
    of 'operation-failed' and an\n          error-app-tag of 'ni-assignment-failed'.
    \ A meaningful\n          error-info that indicates the source of the assignment\n
    \         failure SHOULD also be provided.\";\n       leaf bind-ni-name {\n         type
    leafref {\n           path \"/network-instances/network-instance/name\";\n         }\n
    \        description\n           \"Network instance to which IPv4 interface is
    bound.\";\n       }\n     }\n     augment \"/if:interfaces/if:interface/ip:ipv6\"
    {\n       description\n         \"Add a node for the identification of the network\n
    \         instance associated with the information configured\n          on an
    IPv6 interface.\n          Note that a standard error will be returned if the\n
    \         identified leafref isn't present.  If an interface cannot\n          be
    assigned for any other reason, the operation SHALL fail\n          with an error-tag
    of 'operation-failed' and an\n          error-app-tag of 'ni-assignment-failed'.
    \ A meaningful\n          error-info that indicates the source of the assignment\n
    \         failure SHOULD also be provided.\";\n       leaf bind-ni-name {\n         type
    leafref {\n           path \"/network-instances/network-instance/name\";\n         }\n
    \        description\n           \"Network instance to which IPv6 interface is
    bound.\";\n       }\n     }\n     // notification statements\n     notification
    bind-ni-name-failed {\n       description\n         \"Indicates an error in the
    association of an interface to an\n          NI.  Only generated after success
    is initially returned when\n          bind-ni-name is set.\n          Note: Some
    errors may need to be reported for multiple\n          associations, e.g., a single
    error may need to be reported\n          for an IPv4 and an IPv6 bind-ni-name.\n
    \         At least one container with a bind-ni-name leaf MUST be\n          included
    in this notification.\";\n       leaf name {\n         type leafref {\n           path
    \"/if:interfaces/if:interface/if:name\";\n         }\n         mandatory true;\n
    \        description\n           \"Contains the interface name associated with
    the\n            failure.\";\n       }\n       container interface {\n         description\n
    \          \"Generic interface type.\";\n         leaf bind-ni-name {\n           type
    leafref {\n             path \"/if:interfaces/if:interface\"\n                +
    \"/ni:bind-ni-name\";\n           }\n           description\n             \"Contains
    the bind-ni-name associated with the\n              failure.\";\n         }\n
    \      }\n       container ipv4 {\n         description\n           \"IPv4 interface
    type.\";\n         leaf bind-ni-name {\n           type leafref {\n             path
    \"/if:interfaces/if:interface/ip:ipv4/ni:bind-ni-name\";\n           }\n           description\n
    \            \"Contains the bind-ni-name associated with the\n              failure.\";\n
    \        }\n       }\n       container ipv6 {\n         description\n           \"IPv6
    interface type.\";\n         leaf bind-ni-name {\n           type leafref {\n
    \            path \"/if:interfaces/if:interface/ip:ipv6\"\n                + \"/ni:bind-ni-name\";\n
    \          }\n           description\n             \"Contains the bind-ni-name
    associated with the\n              failure.\";\n         }\n       }\n       leaf
    error-info {\n         type string;\n         description\n           \"Optionally,
    indicates the source of the assignment\n            failure.\";\n       }\n     }\n
    \  }\n   <CODE ENDS>\n"
  title: 6.  Network Instance Model
- contents:
  - '7.  References

    '
  - contents:
    - "7.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC3688]  Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688,\n              DOI
      10.17487/RFC3688, January 2004,\n              <https://www.rfc-editor.org/info/rfc3688>.\n
      \  [RFC6020]  Bjorklund, M., Ed., \"YANG - A Data Modeling Language for\n              the
      Network Configuration Protocol (NETCONF)\", RFC 6020,\n              DOI 10.17487/RFC6020,
      October 2010,\n              <https://www.rfc-editor.org/info/rfc6020>.\n   [RFC6241]
      \ Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,\n              and
      A. Bierman, Ed., \"Network Configuration Protocol\n              (NETCONF)\",
      RFC 6241, DOI 10.17487/RFC6241, June 2011,\n              <https://www.rfc-editor.org/info/rfc6241>.\n
      \  [RFC6242]  Wasserman, M., \"Using the NETCONF Protocol over Secure\n              Shell
      (SSH)\", RFC 6242, DOI 10.17487/RFC6242, June 2011,\n              <https://www.rfc-editor.org/info/rfc6242>.\n
      \  [RFC8040]  Bierman, A., Bjorklund, M., and K. Watsen, \"RESTCONF\n              Protocol\",
      RFC 8040, DOI 10.17487/RFC8040, January 2017,\n              <https://www.rfc-editor.org/info/rfc8040>.\n
      \  [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119
      Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,
      <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8340]  Bjorklund, M. and
      L. Berger, Ed., \"YANG Tree Diagrams\",\n              BCP 215, RFC 8340, DOI
      10.17487/RFC8340, March 2018,\n              <https://www.rfc-editor.org/info/rfc8340>.\n
      \  [RFC8341]  Bierman, A. and M. Bjorklund, \"Network Configuration\n              Access
      Control Model\", STD 91, RFC 8341,\n              DOI 10.17487/RFC8341, March
      2018,\n              <https://www.rfc-editor.org/info/rfc8341>.\n   [RFC8342]
      \ Bjorklund, M., Schoenwaelder, J., Shafer, P., Watsen, K.,\n              and
      R. Wilton, \"Network Management Datastore Architecture\n              (NMDA)\",
      RFC 8342, DOI 10.17487/RFC8342, March 2018,\n              <https://www.rfc-editor.org/info/rfc8342>.\n
      \  [RFC8343]  Bjorklund, M., \"A YANG Data Model for Interface\n              Management\",
      RFC 8343, DOI 10.17487/RFC8343, March 2018,\n              <https://www.rfc-editor.org/info/rfc8343>.\n
      \  [RFC8344]  Bjorklund, M., \"A YANG Data Model for IP Management\",\n              RFC
      8344, DOI 10.17487/RFC8344, March 2018,\n              <https://www.rfc-editor.org/info/rfc8344>.\n
      \  [RFC8446]  Rescorla, E., \"The Transport Layer Security (TLS) Protocol\n
      \             Version 1.3\", RFC 8446, DOI 10.17487/RFC8446, August 2018,\n
      \             <https://www.rfc-editor.org/info/rfc8446>.\n   [RFC8528]  Bjorklund,
      M. and L. Lhotka, \"YANG Schema Mount\",\n              RFC 8528, DOI 10.17487/RFC8528,
      March 2019,\n              <https://www.rfc-editor.org/info/rfc8528>.\n"
    title: 7.1.  Normative References
  - contents:
    - "7.2.  Informative References\n   [RFC4026]  Andersson, L. and T. Madsen, \"Provider
      Provisioned Virtual\n              Private Network (VPN) Terminology\", RFC
      4026,\n              DOI 10.17487/RFC4026, March 2005,\n              <https://www.rfc-editor.org/info/rfc4026>.\n
      \  [RFC4364]  Rosen, E. and Y. Rekhter, \"BGP/MPLS IP Virtual Private\n              Networks
      (VPNs)\", RFC 4364, DOI 10.17487/RFC4364, February\n              2006, <https://www.rfc-editor.org/info/rfc4364>.\n
      \  [RFC4664]  Andersson, L., Ed. and E. Rosen, Ed., \"Framework for Layer\n
      \             2 Virtual Private Networks (L2VPNs)\", RFC 4664,\n              DOI
      10.17487/RFC4664, September 2006,\n              <https://www.rfc-editor.org/info/rfc4664>.\n
      \  [RFC7950]  Bjorklund, M., Ed., \"The YANG 1.1 Data Modeling Language\",\n
      \             RFC 7950, DOI 10.17487/RFC7950, August 2016,\n              <https://www.rfc-editor.org/info/rfc7950>.\n
      \  [RFC8349]  Lhotka, L., Lindem, A., and Y. Qu, \"A YANG Data Model for\n              Routing
      Management (NMDA Version)\", RFC 8349,\n              DOI 10.17487/RFC8349,
      March 2018,\n              <https://www.rfc-editor.org/info/rfc8349>.\n   [RFC8530]
      \ Berger, L., Hopps, C., Lindem, A., Bogdanovic, D., and X.\n              Liu,
      \"YANG Model for Logical Network Elements\", RFC 8530,\n              DOI 10.17487/RFC8530,
      March 2019.\n   [YANG-L2VPN]\n              Shah, H., Brissette, P., Chen, I.,
      Hussain, I., Wen, B.,\n              and K. Tiruveedhula, \"YANG Data Model
      for MPLS-based\n              L2VPN\", Work in Progress, draft-ietf-bess-l2vpn-yang-09,\n
      \             October 2018.\n   [YANG-L3VPN]\n              Jain, D., Patel,
      K., Brissette, P., Li, Z., Zhuang, S.,\n              Liu, X., Haas, J., Esale,
      S., and B. Wen, \"Yang Data Model\n              for BGP/MPLS L3 VPNs\", Work
      in Progress, draft-ietf-bess-\n              l3vpn-yang-04, October 2018.\n
      \  [YANG-NETWORK]\n              Lindem, A., Berger, L., Bogdanovic, D., and
      C. Hopps,\n              \"Network Device YANG Logical Organization\", Work
      in\n              Progress, draft-ietf-rtgwg-device-model-02, March 2017.\n
      \  [YANG-OSPF]\n              Yeung, D., Qu, Y., Zhang, Z., Chen, I., and A.
      Lindem,\n              \"YANG Data Model for OSPF Protocol\", Work in Progress,\n
      \             draft-ietf-ospf-yang-21, January 2019.\n"
    title: 7.2.  Informative References
  title: 7.  References
- contents:
  - "Appendix A.  Example NI Usage\n   The following subsections provide example uses
    of NIs.\n"
  - contents:
    - "A.1.  Configuration Data\n   The following shows an example where two customer-specific
      network\n   instances are configured:\n   {\n     \"ietf-network-instance:network-instances\":
      {\n       \"network-instance\": [\n         {\n           \"name\": \"vrf-red\",\n
      \          \"vrf-root\": {\n             \"ietf-routing:routing\": {\n               \"router-id\":
      \"192.0.2.1\",\n               \"control-plane-protocols\": {\n                 \"control-plane-protocol\":
      [\n                   {\n                     \"type\": \"ietf-routing:ospf\",\n
      \                    \"name\": \"1\",\n                     \"ietf-ospf:ospf\":
      {\n                       \"af\": \"ipv4\",\n                       \"areas\":
      {\n                         \"area\": [\n                           {\n                             \"area-id\":
      \"203.0.113.1\",\n                             \"interfaces\": {\n                               \"interface\":
      [\n                                 {\n                                   \"name\":
      \"eth1\",\n                                   \"cost\": 10\n                                 }\n
      \                              ]\n                             }\n                           }\n
      \                        ]\n                       }\n                     }\n
      \                  }\n                 ]\n               }\n             }\n
      \          }\n         },\n         {\n           \"name\": \"vrf-blue\",\n
      \          \"vrf-root\": {\n             \"ietf-routing:routing\": {\n               \"router-id\":
      \"192.0.2.2\",\n               \"control-plane-protocols\": {\n                 \"control-plane-protocol\":
      [\n                   {\n                     \"type\": \"ietf-routing:ospf\",\n
      \                    \"name\": \"1\",\n                     \"ietf-ospf:ospf\":
      {\n                       \"af\": \"ipv4\",\n                       \"areas\":
      {\n                         \"area\": [\n                           {\n                             \"area-id\":
      \"203.0.113.1\",\n                             \"interfaces\": {\n                               \"interface\":
      [\n                                 {\n                                   \"name\":
      \"eth2\",\n                                   \"cost\": 10\n                                 }\n
      \                              ]\n                             }\n                           }\n
      \                        ]\n                       }\n                     }\n
      \                  }\n                 ]\n               }\n             }\n
      \          }\n         }\n       ]\n     },\n     \"ietf-interfaces:interfaces\":
      {\n       \"interface\": [\n         {\n           \"name\": \"eth0\",\n           \"type\":
      \"iana-if-type:ethernetCsmacd\",\n           \"ietf-ip:ipv4\": {\n             \"address\":
      [\n               {\n                 \"ip\": \"192.0.2.10\",\n                 \"prefix-length\":
      24\n               }\n             ]\n           },\n           \"ietf-ip:ipv6\":
      {\n             \"address\": [\n               {\n                 \"ip\": \"2001:db8:0:2::10\",\n
      \                \"prefix-length\": 64\n               }\n             ]\n           }\n
      \        },\n         {\n           \"name\": \"eth1\",\n           \"type\":
      \"iana-if-type:ethernetCsmacd\",\n           \"ietf-ip:ipv4\": {\n             \"address\":
      [\n               {\n                 \"ip\": \"192.0.2.11\",\n                 \"prefix-length\":
      24\n               }\n             ]\n           },\n           \"ietf-ip:ipv6\":
      {\n             \"address\": [\n               {\n                 \"ip\": \"2001:db8:0:2::11\",\n
      \                \"prefix-length\": 64\n               }\n             ]\n           },\n
      \          \"ietf-network-instance:bind-network-instance-name\": \"vrf-red\"\n
      \        },\n         {\n           \"name\": \"eth2\",\n           \"type\":
      \"iana-if-type:ethernetCsmacd\",\n           \"ietf-ip:ipv4\": {\n             \"address\":
      [\n               {\n                 \"ip\": \"192.0.2.11\",\n                 \"prefix-length\":
      24\n               }\n             ]\n           },\n           \"ietf-ip:ipv6\":
      {\n             \"address\": [\n               {\n                 \"ip\": \"2001:db8:0:2::11\",\n
      \                \"prefix-length\": 64\n               }\n             ]\n           },\n
      \          \"ietf-network-instance:bind-network-instance-name\":\n           \"vrf-blue\"\n
      \        }\n       ]\n     },\n     \"ietf-system:system\": {\n       \"authentication\":
      {\n         \"user\": [\n           {\n             \"name\": \"john\",\n             \"password\":
      \"$0$password\"\n           }\n         ]\n       }\n     }\n   }\n"
    title: A.1.  Configuration Data
  - contents:
    - "A.2.  State Data - Non-NMDA Version\n   The following shows state data for
      the configuration example above\n   based on [RFC8343], [RFC8344], and [RFC8349].\n"
    - "{\n  \"ietf-network-instance:network-instances\": {\n    \"network-instance\":
      [\n      {\n        \"name\": \"vrf-red\",\n        \"vrf-root\": {\n          \"ietf-yang-library:modules-state\":
      {\n            \"module-set-id\": \"123e4567-e89b-12d3-a456-426655440000\",\n
      \           \"module\": [\n              {\n                \"name\": \"ietf-yang-library\",\n
      \               \"revision\": \"2019-01-04\",\n                \"namespace\":\n
      \                 \"urn:ietf:params:xml:ns:yang:ietf-yang-library\",\n                \"conformance-type\":
      \"implement\"\n              },\n              {\n                \"name\":
      \"ietf-ospf\",\n                \"revision\": \"2019-01-24\",\n                \"namespace\":
      \"urn:ietf:params:xml:ns:yang:ietf-ospf\",\n                \"conformance-type\":
      \"implement\"\n              },\n              {\n                \"name\":
      \"ietf-routing\",\n                \"revision\": \"2018-03-13\",\n                \"namespace\":
      \"urn:ietf:params:xml:ns:yang:ietf-routing\",\n                \"conformance-type\":
      \"implement\"\n              }\n            ]\n          },\n          \"ietf-routing:routing-state\":
      {\n            \"router-id\": \"192.0.2.1\",\n            \"control-plane-protocols\":
      {\n              \"control-plane-protocol\": [\n                {\n                  \"type\":
      \"ietf-routing:ospf\",\n                  \"name\": \"1\",\n                  \"ietf-ospf:ospf\":
      {\n                    \"af\": \"ipv4\",\n                    \"areas\": {\n
      \                     \"area\": [\n                        {\n                          \"area-id\":
      \"203.0.113.1\",\n                          \"interfaces\": {\n                            \"interface\":
      [\n                              {\n                                \"name\":
      \"eth1\",\n                                \"cost\": 10\n                              }\n
      \                           ]\n                          }\n                        }\n
      \                     ]\n                    }\n                  }\n                }\n
      \             ]\n            }\n          }\n        }\n      },\n      {\n
      \       \"name\": \"vrf-blue\",\n        \"vrf-root\": {\n          \"ietf-yang-library:modules-state\":
      {\n            \"module-set-id\": \"123e4567-e89b-12d3-a456-426655440000\",\n
      \           \"module\": [\n              {\n                \"name\": \"ietf-yang-library\",\n
      \               \"revision\": \"2019-01-04\",\n                \"namespace\":\n
      \                 \"urn:ietf:params:xml:ns:yang:ietf-yang-library\",\n                \"conformance-type\":
      \"implement\"\n              },\n              {\n                \"name\":
      \"ietf-ospf\",\n                \"revision\": \"2019-01-24\",\n                \"namespace\":
      \"urn:ietf:params:xml:ns:yang:ietf-ospf\",\n                \"conformance-type\":
      \"implement\"\n              },\n              {\n                \"name\":
      \"ietf-routing\",\n                \"revision\": \"2018-03-13\",\n                \"namespace\":
      \"urn:ietf:params:xml:ns:yang:ietf-routing\",\n                \"conformance-type\":
      \"implement\"\n              }\n            ]\n          },\n          \"ietf-routing:routing-state\":
      {\n            \"router-id\": \"192.0.2.2\",\n            \"control-plane-protocols\":
      {\n              \"control-plane-protocol\": [\n                {\n                  \"type\":
      \"ietf-routing:ospf\",\n                  \"name\": \"1\",\n                  \"ietf-ospf:ospf\":
      {\n                    \"af\": \"ipv4\",\n                    \"areas\": {\n
      \                     \"area\": [\n                        {\n                          \"area-id\":
      \"203.0.113.1\",\n                          \"interfaces\": {\n                            \"interface\":
      [\n                              {\n                                \"name\":
      \"eth2\",\n                                \"cost\": 10\n                              }\n
      \                           ]\n                          }\n                        }\n
      \                     ]\n                    }\n                  }\n                }\n
      \             ]\n            }\n          }\n        }\n      }\n    ]\n  },\n
      \ \"ietf-interfaces:interfaces-state\": {\n    \"interface\": [\n      {\n        \"name\":
      \"eth0\",\n        \"type\": \"iana-if-type:ethernetCsmacd\",\n        \"oper-status\":
      \"up\",\n        \"phys-address\": \"00:01:02:A1:B1:C0\",\n        \"statistics\":
      {\n          \"discontinuity-time\": \"2017-06-26T12:34:56-05:00\"\n        },\n
      \       \"ietf-ip:ipv4\": {\n          \"address\": [\n            {\n              \"ip\":
      \"192.0.2.10\",\n              \"prefix-length\": 24\n            }\n          ]\n
      \       },\n        \"ietf-ip:ipv6\": {\n          \"address\": [\n            {\n
      \             \"ip\": \"2001:db8:0:2::10\",\n              \"prefix-length\":
      64\n            }\n          ]\n        }\n      },\n      {\n        \"name\":
      \"eth1\",\n        \"type\": \"iana-if-type:ethernetCsmacd\",\n        \"oper-status\":
      \"up\",\n        \"phys-address\": \"00:01:02:A1:B1:C1\",\n        \"statistics\":
      {\n          \"discontinuity-time\": \"2017-06-26T12:34:56-05:00\"\n        },\n
      \       \"ietf-ip:ipv4\": {\n          \"address\": [\n            {\n              \"ip\":
      \"192.0.2.11\",\n              \"prefix-length\": 24\n            }\n          ]\n
      \       },\n        \"ietf-ip:ipv6\": {\n          \"address\": [\n            {\n
      \             \"ip\": \"2001:db8:0:2::11\",\n              \"prefix-length\":
      64\n            }\n          ]\n        }\n      },\n      {\n        \"name\":
      \"eth2\",\n        \"type\": \"iana-if-type:ethernetCsmacd\",\n        \"oper-status\":
      \"up\",\n        \"phys-address\": \"00:01:02:A1:B1:C2\",\n        \"statistics\":
      {\n          \"discontinuity-time\": \"2017-06-26T12:34:56-05:00\"\n        },\n
      \       \"ietf-ip:ipv4\": {\n          \"address\": [\n            {\n              \"ip\":
      \"192.0.2.11\",\n              \"prefix-length\": 24\n            }\n          ]\n
      \       },\n        \"ietf-ip:ipv6\": {\n          \"address\": [\n            {\n
      \             \"ip\": \"2001:db8:0:2::11\",\n              \"prefix-length\":
      64\n            }\n          ]\n        }\n      }\n    ]\n  },\n  \"ietf-system:system-state\":
      {\n    \"platform\": {\n      \"os-name\": \"NetworkOS\"\n    }\n  },\n  \"ietf-yang-library:modules-state\":
      {\n    \"module-set-id\": \"123e4567-e89b-12d3-a456-426655440000\",\n    \"module\":
      [\n      {\n        \"name\": \"iana-if-type\",\n        \"revision\": \"2018-07-03\",\n
      \       \"namespace\": \"urn:ietf:params:xml:ns:yang:iana-if-type\",\n        \"conformance-type\":
      \"import\"\n      },\n      {\n        \"name\": \"ietf-inet-types\",\n        \"revision\":
      \"2013-07-15\",\n        \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-inet-types\",\n
      \       \"conformance-type\": \"import\"\n      },\n      {\n        \"name\":
      \"ietf-interfaces\",\n        \"revision\": \"2018-02-20\",\n        \"feature\":
      [\n          \"arbitrary-names\",\n          \"pre-provisioning\"\n        ],\n
      \       \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-interfaces\",\n        \"conformance-type\":
      \"implement\"\n      },\n      {\n        \"name\": \"ietf-ip\",\n        \"revision\":
      \"2018-01-09\",\n        \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-ip\",\n
      \       \"conformance-type\": \"implement\"\n      },\n      {\n        \"name\":
      \"ietf-network-instance\",\n        \"revision\": \"2018-02-03\",\n        \"feature\":
      [\n          \"bind-network-instance-name\"\n        ],\n        \"namespace\":\n
      \         \"urn:ietf:params:xml:ns:yang:ietf-network-instance\",\n        \"conformance-type\":
      \"implement\"\n      },\n      {\n        \"name\": \"ietf-ospf\",\n        \"revision\":
      \"2019-01-24\",\n        \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-ospf\",\n
      \       \"conformance-type\": \"implement\"\n      },\n      {\n        \"name\":
      \"ietf-routing\",\n        \"revision\": \"2018-03-13\",\n        \"namespace\":
      \"urn:ietf:params:xml:ns:yang:ietf-routing\",\n        \"conformance-type\":
      \"implement\"\n      },\n      {\n        \"name\": \"ietf-system\",\n        \"revision\":
      \"2014-08-06\",\n        \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-system\",\n
      \       \"conformance-type\": \"implement\"\n      },\n      {\n        \"name\":
      \"ietf-yang-library\",\n        \"revision\": \"2019-01-04\",\n        \"namespace\":
      \"urn:ietf:params:xml:ns:yang:ietf-yang-library\",\n        \"conformance-type\":
      \"implement\"\n      },\n      {\n        \"name\": \"ietf-yang-schema-mount\",\n
      \       \"revision\": \"2019-01-14\",\n        \"namespace\":\n          \"urn:ietf:params:xml:ns:yang:ietf-yang-schema-mount\",\n
      \       \"conformance-type\": \"implement\"\n      },\n      {\n        \"name\":
      \"ietf-yang-types\",\n        \"revision\": \"2013-07-15\",\n        \"namespace\":
      \"urn:ietf:params:xml:ns:yang:ietf-yang-types\",\n        \"conformance-type\":
      \"import\"\n      }\n    ]\n  },\n  \"ietf-yang-schema-mount:schema-mounts\":
      {\n    \"mount-point\": [\n      {\n        \"module\": \"ietf-network-instance\",\n
      \       \"label\": \"vrf-root\",\n        \"shared-schema\": {\n          \"parent-reference\":
      [\n            \"/*[namespace-uri() = 'urn:ietf:...:ietf-interfaces']\"\n          ]\n
      \       }\n      }\n    ]\n  }\n"
    - '}

      '
    title: A.2.  State Data - Non-NMDA Version
  - contents:
    - "A.3.  State Data - NMDA Version\n   The following shows state data for the
      configuration example above\n   based on [RFC8343], [RFC8344], and [RFC8349].\n
      \ {\n    \"ietf-network-instance:network-instances\": {\n      \"network-instance\":
      [\n        {\n          \"name\": \"vrf-red\",\n          \"vrf-root\": {\n
      \           \"ietf-yang-library:yang-library\": {\n              \"content-id\":
      \"41e2ab5dc325f6d86f743e8da3de323f1a61a801\",\n              \"module-set\":
      [\n                {\n                  \"name\": \"ni-modules\",\n                  \"module\":
      [\n                    {\n                      \"name\": \"ietf-yang-library\",\n
      \                     \"revision\": \"2019-01-04\",\n                      \"namespace\":\n
      \                       \"urn:ietf:params:xml:ns:yang:ietf-yang-library\"\n
      \                   },\n                    {\n                      \"name\":
      \"ietf-ospf\",\n                      \"revision\": \"2019-01-24\",\n                      \"namespace\":\n
      \                       \"urn:ietf:params:xml:ns:yang:ietf-ospf\"\n                    },\n
      \                   {\n                      \"name\": \"ietf-routing\",\n                      \"revision\":
      \"2018-03-13\",\n                      \"namespace\":\n                        \"urn:ietf:params:xml:ns:yang:ietf-routing\"\n
      \                   }\n                  ],\n                  \"import-only-module\":
      [\n                    {\n                      \"name\": \"ietf-inet-types\",\n
      \                     \"revision\": \"2013-07-15\",\n                      \"namespace\":\n
      \                       \"urn:ietf:params:xml:ns:yang:ietf-inet-types\"\n                    },\n
      \                   {\n                      \"name\": \"ietf-yang-types\",\n
      \                     \"revision\": \"2013-07-15\",\n                      \"namespace\":\n
      \                       \"urn:ietf:params:xml:ns:yang:ietf-yang-types\"\n                    },\n
      \                   {\n                      \"name\": \"ietf-datastores\",\n
      \                     \"revision\": \"2018-02-14\",\n                      \"namespace\":\n
      \                       \"urn:ietf:params:xml:ns:yang:ietf-datastores\"\n                    }\n
      \                 ]\n                }\n              ],\n              \"schema\":
      [\n                {\n                  \"name\": \"ni-schema\",\n                  \"module-set\":
      [ \"ni-modules\" ]\n                }\n              ],\n              \"datastore\":
      [\n                {\n                  \"name\": \"ietf-datastores:running\",\n
      \                 \"schema\": \"ni-schema\"\n                },\n                {\n
      \                 \"name\": \"ietf-datastores:operational\",\n                  \"schema\":
      \"ni-schema\"\n                }\n              ]\n            },\n            \"ietf-routing:routing\":
      {\n              \"router-id\": \"192.0.2.1\",\n              \"control-plane-protocols\":
      {\n                \"control-plane-protocol\": [\n                  {\n                    \"type\":
      \"ietf-routing:ospf\",\n                    \"name\": \"1\",\n                    \"ietf-ospf:ospf\":
      {\n                      \"af\": \"ipv4\",\n                      \"areas\":
      {\n                        \"area\": [\n                          {\n                            \"area-id\":
      \"203.0.113.1\",\n                            \"interfaces\": {\n                              \"interface\":
      [\n                                {\n                                  \"name\":
      \"eth1\",\n                                  \"cost\": 10\n                                }\n
      \                             ]\n                            }\n                          }\n
      \                       ]\n                      }\n                    }\n
      \                 }\n                ]\n              }\n            }\n          }\n
      \       },\n        {\n          \"name\": \"vrf-blue\",\n          \"vrf-root\":
      {\n            \"ietf-yang-library:yang-library\": {\n              \"checksum\":
      \"41e2ab5dc325f6d86f743e8da3de323f1a61a801\",\n              \"module-set\":
      [\n                {\n                  \"name\": \"ni-modules\",\n                  \"module\":
      [\n                    {\n                      \"name\": \"ietf-yang-library\",\n
      \                     \"revision\": \"2019-01-04\",\n                      \"namespace\":\n
      \                       \"urn:ietf:params:xml:ns:yang:ietf-yang-library\",\n
      \                     \"conformance-type\": \"implement\"\n                    },\n
      \                   {\n                      \"name\": \"ietf-ospf\",\n                      \"revision\":
      \"2019-01-24\",\n                      \"namespace\":\n                        \"urn:ietf:params:xml:ns:yang:ietf-ospf\",\n
      \                     \"conformance-type\": \"implement\"\n                    },\n
      \                   {\n                      \"name\": \"ietf-routing\",\n                      \"revision\":
      \"2018-03-13\",\n                      \"namespace\":\n                        \"urn:ietf:params:xml:ns:yang:ietf-routing\",\n
      \                     \"conformance-type\": \"implement\"\n                    }\n
      \                 ],\n                  \"import-only-module\": [\n                    {\n
      \                     \"name\": \"ietf-inet-types\",\n                      \"revision\":
      \"2013-07-15\",\n                      \"namespace\":\n                        \"urn:ietf:params:xml:ns:yang:ietf-inet-types\"\n
      \                   },\n                    {\n                      \"name\":
      \"ietf-yang-types\",\n                      \"revision\": \"2013-07-15\",\n
      \                     \"namespace\":\n                        \"urn:ietf:params:xml:ns:yang:ietf-yang-types\"\n
      \                   },\n                    {\n                      \"name\":
      \"ietf-datastores\",\n                      \"revision\": \"2018-02-14\",\n
      \                     \"namespace\":\n                        \"urn:ietf:params:xml:ns:yang:ietf-datastores\"\n
      \                   }\n                  ]\n                }\n              ],\n
      \             \"schema\": [\n                {\n                  \"name\":
      \"ni-schema\",\n                  \"module-set\": [ \"ni-modules\" ]\n                }\n
      \             ],\n              \"datastore\": [\n                {\n                  \"name\":
      \"ietf-datastores:running\",\n                  \"schema\": \"ni-schema\"\n
      \               },\n                {\n                  \"name\": \"ietf-datastores:operational\",\n
      \                 \"schema\": \"ni-schema\"\n                }\n              ]\n
      \           },\n            \"ietf-routing:routing\": {\n              \"router-id\":
      \"192.0.2.2\",\n              \"control-plane-protocols\": {\n                \"control-plane-protocol\":
      [\n                  {\n                    \"type\": \"ietf-routing:ospf\",\n
      \                   \"name\": \"1\",\n                    \"ietf-ospf:ospf\":
      {\n                      \"af\": \"ipv4\",\n                      \"areas\":
      {\n                        \"area\": [\n                          {\n                            \"area-id\":
      \"203.0.113.1\",\n                            \"interfaces\": {\n                              \"interface\":
      [\n                                {\n                                  \"name\":
      \"eth2\",\n                                  \"cost\": 10\n                                }\n
      \                             ]\n                            }\n                          }\n
      \                       ]\n                      }\n                    }\n
      \                 }\n                ]\n              }\n            }\n          }\n
      \       }\n      ]\n    },\n    \"ietf-interfaces:interfaces\": {\n      \"interface\":
      [\n        {\n          \"name\": \"eth0\",\n          \"type\": \"iana-if-type:ethernetCsmacd\",\n
      \         \"oper-status\": \"up\",\n          \"phys-address\": \"00:01:02:A1:B1:C0\",\n
      \         \"statistics\": {\n            \"discontinuity-time\": \"2017-06-26T12:34:56-05:00\"\n
      \         },\n          \"ietf-ip:ipv4\": {\n            \"address\": [\n              {\n
      \               \"ip\": \"192.0.2.10\",\n                \"prefix-length\":
      24\n              }\n            ]\n          },\n          \"ietf-ip:ipv6\":
      {\n            \"address\": [\n              {\n                \"ip\": \"2001:db8:0:2::10\",\n
      \               \"prefix-length\": 64\n              }\n            ]\n          }\n
      \       },\n        {\n          \"name\": \"eth1\",\n          \"type\": \"iana-if-type:ethernetCsmacd\",\n
      \         \"oper-status\": \"up\",\n          \"phys-address\": \"00:01:02:A1:B1:C1\",\n
      \         \"statistics\": {\n            \"discontinuity-time\": \"2017-06-26T12:34:56-05:00\"\n
      \         },\n          \"ietf-ip:ipv4\": {\n            \"address\": [\n              {\n
      \               \"ip\": \"192.0.2.11\",\n                \"prefix-length\":
      24\n              }\n            ]\n          },\n          \"ietf-ip:ipv6\":
      {\n            \"address\": [\n              {\n                \"ip\": \"2001:db8:0:2::11\",\n
      \               \"prefix-length\": 64\n              }\n            ]\n          }\n
      \       },\n        {\n          \"name\": \"eth2\",\n          \"type\": \"iana-if-type:ethernetCsmacd\",\n
      \         \"oper-status\": \"up\",\n          \"phys-address\": \"00:01:02:A1:B1:C2\",\n
      \         \"statistics\": {\n            \"discontinuity-time\": \"2017-06-26T12:34:56-05:00\"\n
      \         },\n          \"ietf-ip:ipv4\": {\n            \"address\": [\n              {\n
      \               \"ip\": \"192.0.2.11\",\n                \"prefix-length\":
      24\n              }\n            ]\n          },\n          \"ietf-ip:ipv6\":
      {\n            \"address\": [\n              {\n                \"ip\": \"2001:db8:0:2::11\",\n
      \               \"prefix-length\": 64\n              }\n            ]\n          }\n
      \       }\n      ]\n    },\n    \"ietf-system:system-state\": {\n      \"platform\":
      {\n        \"os-name\": \"NetworkOS\"\n      }\n    },\n    \"ietf-yang-library:yang-library\":
      {\n      \"content-id\": \"75a43df9bd56b92aacc156a2958fbe12312fb285\",\n      \"module-set\":
      [\n        {\n          \"name\": \"host-modules\",\n          \"module\": [\n
      \           {\n              \"name\": \"ietf-interfaces\",\n              \"revision\":
      \"2018-02-20\",\n              \"feature\": [\n                \"arbitrary-names\",\n
      \               \"pre-provisioning\"\n              ],\n              \"namespace\":\n
      \               \"urn:ietf:params:xml:ns:yang:ietf-interfaces\"\n            },\n
      \           {\n              \"name\": \"ietf-ip\",\n              \"revision\":
      \"2018-01-09\",\n              \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-ip\"\n
      \           },\n            {\n              \"name\": \"ietf-network-instance\",\n
      \             \"revision\": \"2018-02-03\",\n              \"feature\": [\n
      \               \"bind-network-instance-name\"\n              ],\n              \"namespace\":\n
      \               \"urn:ietf:params:xml:ns:yang:ietf-network-instance\"\n            },\n
      \           {\n              \"name\": \"ietf-ospf\",\n              \"revision\":
      \"2019-01-24\",\n              \"namespace\":\n                \"urn:ietf:params:xml:ns:yang:ietf-ospf\"\n
      \           },\n            {\n              \"name\": \"ietf-routing\",\n              \"revision\":
      \"2018-03-13\",\n              \"namespace\":\n              \"urn:ietf:params:xml:ns:yang:ietf-routing\"\n
      \           },\n            {\n              \"name\": \"ietf-system\",\n              \"revision\":
      \"2014-08-06\",\n              \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-system\"\n
      \           },\n            {\n              \"name\": \"ietf-yang-library\",\n
      \             \"revision\": \"2019-01-04\",\n              \"namespace\":\n
      \               \"urn:ietf:params:xml:ns:yang:ietf-yang-library\"\n            },\n
      \           {\n              \"name\": \"ietf-yang-schema-mount\",\n              \"revision\":
      \"2019-01-14\",\n              \"namespace\":\n                \"urn:ietf:params:xml:ns:yang:ietf-yang-schema-mount\"\n
      \           }\n          ],\n          \"import-only-module\": [\n            {\n
      \             \"name\": \"iana-if-type\",\n              \"revision\": \"2018-07-03\",\n
      \             \"namespace\": \"urn:ietf:params:xml:ns:yang:iana-if-type\"\n
      \           },\n            {\n              \"name\": \"ietf-inet-types\",\n
      \             \"revision\": \"2013-07-15\",\n              \"namespace\":\n
      \               \"urn:ietf:params:xml:ns:yang:ietf-inet-types\"\n            },\n
      \           {\n              \"name\": \"ietf-yang-types\",\n              \"revision\":
      \"2013-07-15\",\n              \"namespace\":\n                \"urn:ietf:params:xml:ns:yang:ietf-yang-types\"\n
      \           },\n            {\n              \"name\": \"ietf-datastores\",\n
      \             \"revision\": \"2018-02-14\",\n              \"namespace\":\n
      \               \"urn:ietf:params:xml:ns:yang:ietf-datastores\"\n            }\n
      \         ]\n        }\n      ],\n      \"schema\": [\n        {\n          \"name\":
      \"host-schema\",\n          \"module-set\": [ \"host-modules\" ]\n        }\n
      \     ],\n      \"datastore\": [\n        {\n          \"name\": \"ietf-datastores:running\",\n
      \         \"schema\": \"host-schema\"\n        },\n        {\n          \"name\":
      \"ietf-datastores:operational\",\n          \"schema\": \"host-schema\"\n        }\n
      \     ]\n    },\n    \"ietf-yang-schema-mount:schema-mounts\": {\n      \"mount-point\":
      [\n        {\n          \"module\": \"ietf-network-instance\",\n          \"label\":
      \"vrf-root\",\n          \"shared-schema\": {\n            \"parent-reference\":
      [\n              \"/*[namespace-uri() = 'urn:ietf:...:ietf-interfaces']\"\n
      \           ]\n          }\n        }\n      ]\n    }\n  }\n"
    title: A.3.  State Data - NMDA Version
  title: Appendix A.  Example NI Usage
- contents:
  - "Acknowledgments\n   The Routing Area Yang Architecture design team members included
    Acee\n   Lindem, Anees Shaikh, Christian Hopps, Dean Bogdanovic, Lou Berger,\n
    \  Qin Wu, Rob Shakir, Stephane Litkowski, and Yan Gang.  Martin\n   Bjorklund
    and John Scudder provided useful review comments.\n   This document was motivated
    by, and derived from, \"Network Device\n   YANG Logical Organization\" [YANG-NETWORK].\n
    \  Thanks for Area Director and IETF last-call comments from Alia Atlas,\n   Liang
    Xia, Benoit Claise, and Adam Roach.\n"
  title: Acknowledgments
- contents:
  - "Authors' Addresses\n   Lou Berger\n   LabN Consulting, L.L.C.\n   Email: lberger@labn.net\n
    \  Christian Hopps\n   LabN Consulting, L.L.C.\n   Email: chopps@chopps.org\n
    \  Acee Lindem\n   Cisco Systems\n   301 Midenhall Way\n   Cary, NC  27513\n   United
    States of America\n   Email: acee@cisco.com\n   Dean Bogdanovic\n   Volta Networks\n
    \  Email: ivandean@gmail.com\n   Xufeng Liu\n   Volta Networks\n   Email: xufeng.liu.ietf@gmail.com\n"
  title: Authors' Addresses
