- title: __initial_text__
  contents:
  - "                   Internet Printing Protocol (IPP):\n          The 'ippget'\
    \ Delivery Method for Event Notifications\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes an extension to the Internet Printing\n\
    \   Protocol1.1: Model and Semantics (RFC 2911, RFC 2910).  This document\n  \
    \ specifies the 'ippget' Pull Delivery Method for use with the\n   \"Internet\
    \ Printing Protocol (IPP): Event Notifications and\n   Subscriptions\" specification\
    \ (RFC 3995).  This IPPGET Delivery Method\n   is REQUIRED for all clients and\
    \ Printers that support RFC 3995.  The\n   Notification Recipient, acting as a\
    \ client, fetches (pulls) Event\n   Notifications by using the Get-Notifications\
    \ operation defined in\n   this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.   Introduction. . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n   2.   Terminology . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  3\n        2.1.  Conformance Terminology . . . . . . . . . . . .\
    \ . . . .  4\n        2.2.  Other Terminology . . . . . . . . . . . . . . . .\
    \ . . .  4\n   3.   Model and Operation . . . . . . . . . . . . . . . . . . .\
    \ . .  4\n   4.   General Information . . . . . . . . . . . . . . . . . . . .\
    \ .  5\n   5.   Get-Notifications Operation . . . . . . . . . . . . . . . . .\
    \  7\n        5.1.  Get-Notifications Request . . . . . . . . . . . . . . .  8\n\
    \              5.1.1.  notify-subscription-ids (1setOf integer(1:MAX))  8\n  \
    \            5.1.2.  notify-sequence-numbers (1setOf integer(1:MAX))  9\n    \
    \          5.1.3.  notify-wait (boolean) . . . . . . . . . . . . . 10\n      \
    \  5.2.  Get-Notifications Response. . . . . . . . . . . . . . . 10\n        \
    \      5.2.1.  notify-get-interval (integer(0:MAX)). . . . . . 13\n          \
    \    5.2.2.  printer-up-time (integer(1:MAX)). . . . . . . . 14\n   6.   Additional\
    \ Information about Subscription Template Attributes 17\n        6.1.  notify-pull-method\
    \ (type2 keyword). . . . . . . . . . . 17\n   7.   Subscription Description Attributes\
    \ . . . . . . . . . . . . . 18\n   8.   Additional Printer Description Attributes\
    \ . . . . . . . . . . 18\n        8.1.  ippget-event-life (integer(15:MAX)) .\
    \ . . . . . . . . . 18\n   9.   New Values for Existing Printer Description Attributes.\
    \ . . . 19\n        9.1.  notify-pull-method-supported (1setOf type2 keyword)\
    \ . . 19\n        9.2.  operations-supported (1setOf type2 enum). . . . . . .\
    \ . 19\n   10.  New Status Codes. . . . . . . . . . . . . . . . . . . . . . .\
    \ 19\n        10.1.  successful-ok-events-complete (0x0007) . . . . . . . . 20\n\
    \   11.  Encoding and Transport. . . . . . . . . . . . . . . . . . . . 20\n  \
    \ 12.  Conformance Requirements. . . . . . . . . . . . . . . . . . . 21\n    \
    \    12.1.  Conformance for IPP Printers . . . . . . . . . . . . . 21\n      \
    \  12.2.  Conformance for IPP Clients. . . . . . . . . . . . . . 22\n   13.  Normative\
    \ References. . . . . . . . . . . . . . . . . . . . . 23\n   14.  Informative\
    \ References. . . . . . . . . . . . . . . . . . . . 23\n   15.  IANA Considerations\
    \ . . . . . . . . . . . . . . . . . . . . . 24\n        15.1.  Attribute Registrations.\
    \ . . . . . . . . . . . . . . . 24\n        15.2.  Delivery Method and Additional\
    \ Keyword Attribute Value\n               registrations for Existing Attributes.\
    \ . . . . . . . . 24\n        15.3.  Additional Enum Attribute Values . . . .\
    \ . . . . . . . 25\n        15.4.  Operation Registrations. . . . . . . . . .\
    \ . . . . . . 25\n        15.5.  Status Code Registrations. . . . . . . . . .\
    \ . . . . . 25\n   16.  Internationalization Considerations . . . . . . . . .\
    \ . . . . 25\n   17.  Security Considerations . . . . . . . . . . . . . . . .\
    \ . . . 26\n        17.1.  Notification Recipient Client Access Rights. . . .\
    \ . . 26\n        17.2.  Printer Security Threats . . . . . . . . . . . . . .\
    \ . 27\n        17.3.  Notification Recipient Security Threats. . . . . . . .\
    \ 27\n        17.4.  Security Requirements for Printers . . . . . . . . . . 27\n\
    \        17.5.  Security Requirements for clients. . . . . . . . . . . 28\n  \
    \ 18.  Description of Base IPP Documents (Informative) . . . . . . . 28\n   19.\
    \  Contributors. . . . . . . . . . . . . . . . . . . . . . . . . 29\n   Authors'\
    \ Addresses . . . . . . . . . . . . . . . . . . . . . . . . 30\n   Full Copyright\
    \ Statement . . . . . . . . . . . . . . . . . . . . . 31\n"
- title: Table of Tables
  contents:
  - "Table of Tables\n   Table 1.  Information about the Delivery Method. . . . .\
    \ . . . . .  5\n   Table 2.  Combinations of \"notify-wait\", \"status-code\"\
    , and\n             \"notify-get-interval\". . . . . . . . . . . . . . . . . .\
    \ 13\n   Table 3.  Attributes in Event Notification Content . . . . . . . . 15\n\
    \   Table 4.  Additional Attributes in Event Notification Content for\n      \
    \       Job Events . . . . . . . . . . . . . . . . . . . . . . . 16\n   Table\
    \ 5.  Combinations of Events and Subscribed Events for \"job-\n             impressions-completed\"\
    \ . . . . . . . . . . . . . . . . . 17\n   Table 6.  Additional Attributes in\
    \ Event Notification Content for\n             Printer Events . . . . . . . .\
    \ . . . . . . . . . . . . . 17\n   Table 7.  Operation-id Assignments . . . .\
    \ . . . . . . . . . . . . 19\n   Table 8.  The \"event-notification-attributes-tag\"\
    \ Value. . . . . . 21\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document describes an extension to the Internet Printing\n\
    \   Protocol/1.1: Model and Semantics [RFC 2911], [RFC 2910].  This\n   document\
    \ specifies the 'ippget' Pull Delivery Method for use with the\n   \"Internet\
    \ Printing Protocol (IPP): Event Notifications and\n   Subscriptions\" specification\
    \ [RFC3995].  This IPPGET Delivery Method\n   is REQUIRED for all clients and\
    \ Printers that support [RFC3995].  The\n   Notification Recipient, acting as\
    \ a client, fetches (pulls) Event\n   Notifications by using the Get-Notifications\
    \ operation defined in\n   this document.  For a description of the base IPP documents,\
    \ see\n   section 21 of this document.  For a description of the IPP Event\n \
    \  Notification Model, see [RFC3995].\n   With this Pull Delivery Method, when\
    \ an Event occurs, the Printer\n   saves the Event Notification for a period of\
    \ time called the Event\n   Life.  The Notification Recipient fetches (pulls)\
    \ the Event\n   Notifications by using the Get-Notifications operation.  This\n\
    \   operation causes the Printer to return all Event Notifications held\n   for\
    \ the specified Subscription object(s).  If the Notification\n   Recipient has\
    \ selected the Event Wait Mode option to wait for\n   additional Event Notifications,\
    \ the Printer MAY continue to return\n   Event Notifications to the Notification\
    \ Recipient as asynchronous\n   Get-Notification responses as Events occur using\
    \ the transaction\n   originated by the Notification Recipient.\n   The Notification\
    \ Recipient can terminate Event Wait Mode (without\n   closing the connection)\
    \ by supplying the \"notify-wait\" (boolean)\n   attribute with a 'false' value\
    \ in a subsequent Get-Notifications\n   request.  Similarly, the Printer can terminate\
    \ Event Wait Mode\n   (without closing the connection) by returning the \"notify-get-\n\
    \   interval\" (integer) operation attribute in a Get-Notifications\n   response\
    \ that tells the Notification Recipient how long to wait\n   before trying again.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   This section defines the following terms that are used throughout\n\
    \   this document:\n"
- title: 2.1.  Conformance Terminology
  contents:
  - "2.1.  Conformance Terminology\n   Capitalized terms such as MUST, MUST NOT, REQUIRED,\
    \ SHOULD, SHOULD\n   NOT, MAY, NEED NOT, and OPTIONAL have special meaning relating\
    \ to\n   conformance as defined in [RFC2119] and [RFC2911], section 12.1.  If\n\
    \   an implementation supports the extension defined in this document,\n   then\
    \ these terms apply; otherwise, they do not.  These terms define\n   conformance\
    \ to this document only; they do not affect conformance to\n   other documents,\
    \ unless it is explicitly stated otherwise.\n"
- title: 2.2.  Other terminology
  contents:
  - "2.2.  Other terminology\n   This document uses the same terminology as [RFC2911],\
    \ including\n   \"client\", \"Printer\", \"Job\", \"attribute\", \"attribute value\"\
    ,\n   \"keyword\", \"operation\", \"request\", \"response\", and \"support\",\
    \ with\n   the same meanings.  This document also uses terminology defined in\n\
    \   [RFC3995], such as \"Subscription (object)\", \"Notification Recipient\",\n\
    \   \"Event\", \"Event Notification\", \"Compound Event Notification\", \"Event\n\
    \   Life\", and \"Event Notification Attribute Group\", with the same\n   meanings.\
    \  In addition, this document defines the following terms for\n   use in this\
    \ document:\n   Event Wait Mode: The mode requested by a Notification Recipient\n\
    \       client in its Get-Notifications Request and granted by a Printer\n   \
    \    to keep the connection open while the Printer sends subsequent\n       Get-Notification\
    \ operation responses to the Notification\n       Recipient in the form of Event\
    \ Notifications as they occur.\n"
- title: 3.  Model and Operation
  contents:
  - "3.  Model and Operation\n   In a Subscription Creation Operation, when the \"\
    notify-pull-method\"\n   attribute is present and has the \"ippget\" keyword value,\
    \ the client\n   is requesting that the Printer use the \"ippget\" Pull Delivery\
    \ Method\n   for the Event Notifications associated with the new Subscription\n\
    \   Object.\n   When an Event occurs, the Printer MUST generate an Event Notification\n\
    \   and MUST assign it the Event Life.  The Printer MUST hold an Event\n   Notification\
    \ for its assigned Event Life.\n   When a Notification Recipient wants to receive\
    \ Event Notifications\n   for a Subscription object, it performs the Get-Notifications\n\
    \   operation supplying the Subscription object's subscription-id, which\n   causes\
    \ the Printer to return all un-expired Event Notifications held\n   for that Subscription\
    \ object.  If the Notification Recipient has\n   selected the Event Wait Mode\
    \ option to wait for additional Event\n   Notifications, the response to the Get-Notifications\
    \ request\n   continues indefinitely as the Printer continues to send Event\n\
    \   Notifications in the response as Events occur for that Subscription\n   object.\n\
    \   When the Notification Recipient requests Event Notifications for\n   Per-Job\
    \ Subscription Objects, the Notification Recipient typically\n   performs the\
    \ Get-Notifications operation within a second of\n   performing the Subscription\
    \ Creation operation.  Because the Printer\n   MUST save Event Notifications for\
    \ at least 15 seconds (see section\n   8.1), the Notification Recipient is unlikely\
    \ to miss any Event\n   Notifications that occur between the Subscription Creation\
    \ and the\n   Get-Notifications operation.\n   The 'ippget' Delivery Method is\
    \ designed primarily for (1) a client\n   that wants to get Events (from the job's\
    \ Per-Job Subscription object)\n   for a job that it has submitted and (2) a privileged\
    \ client that\n   wants to get all job or printer Events from a Per-Printer\n\
    \   Subscription object.\n"
- title: 4.  General Information
  contents:
  - "4.  General Information\n   If a Printer supports this Delivery Method, the following\
    \ are its\n   characteristics.\n              Table 1.  Information about the\
    \ Delivery Method\n   Document Method Conformance Requirement    Delivery Method\n\
    \   Realization\n   1.  What is the URL scheme name for the     'ippget' keyword\
    \ method\n       Push Delivery Method, or the keyword     name\n       method\
    \ name for the Pull Delivery\n       Method?\n   2.  Is the Delivery Method REQUIRED,\
    \        REQUIRED\n       RECOMMENDED, or OPTIONAL for an IPP\n       Printer\
    \ to support?\n   3.  What transport and delivery protocols   IPP with one new\n\
    \       does the Printer use to deliver the     operation.\n       Event Notification\
    \ Content; i.e.,\n       what is the entire network stack?\n   4.  Can several\
    \ Event Notifications be      Yes.\n       combined into a Compound Event\n  \
    \     Notification?\n   5.  Is the Delivery Method initiated by     This Delivery\
    \ Method is\n       the Notification Recipient (pull),      a pull method with\n\
    \       or by the Printer (push)?               aspects of a push\n          \
    \                                     method, though the\n                   \
    \                            Printer does not\n                              \
    \                 initiate the operation.\n   6.  Is the Event Notification content\
    \       Machine Consumable.\n       Machine Consumable or Human\n       Consumable?\n\
    \   7.  What section in this document answers   Section 5.\n       the following\
    \ questions? For a Machine\n       Consumable Event Notification, what is\n  \
    \     the representation and encoding of\n       values defined in section 9.1\
    \ of\n       [RFC3995], and what are the\n       conformance requirements thereof?\
    \ For\n       a Human Consumable Event Notification,\n       what is the representation\
    \ and\n       encoding of pieces of information\n       defined in section 9.2\
    \ of\n       [RFC3995], and the conformance\n       requirements thereof?\n  \
    \ 8.  What are the latency and reliability    Same as IPP and the\n       of the\
    \ transport and delivery           underlying HTTP\n       protocol?         \
    \                      transport.\n   9.  What are the security aspects of the\
    \    Same as IPP and the\n       transport and delivery protocol;        underlying\
    \ HTTP\n       e.g., how it is handled in              transport and in the\n\
    \       firewalls?                              same direction, so no\n      \
    \                                         new firewall\n                     \
    \                          considerations.\n   10. What are the content length\
    \             None.\n       restrictions?\n   11. What are the additional values\
    \ or       None.\n       pieces of information that a Printer\n       sends in\
    \ an Event Notification content\n       and the conformance requirements\n   \
    \    thereof?\n   12. What are the additional Subscription    None.\n       Template\
    \ and/or Subscription\n       Description attributes and the\n       conformance\
    \ requirements thereof?\n   13. What are the additional Printer         \"ipp-event-life\"\
    \n       Description attributes and the          (integer (15: MAX))\n       conformance\
    \ requirements thereof?\n"
- title: 5.  Get-Notifications Operation
  contents:
  - "5.  Get-Notifications Operation\n   This operation is issued by a client acting\
    \ in the role of a\n   Notification Recipient requesting the Printer to return\
    \ all Event\n   Notifications held for the identified Subscription object(s).\n\
    \   A Printer MUST support this operation, MUST accept the request in any\n  \
    \ state (see [RFC2911] \"printer-state\" and \"printer-state-reasons\"\n   attributes),\
    \ and MUST remain in the same state with the same\n   \"printer-state-reasons\"\
    \ values.\n   When a Printer performs this operation, it MUST return all and only\n\
    \   those Event Notifications\n   1.  whose associated Subscription Object's \"\
    notify-subscription-id\"\n       Subscription Description attribute equals one\
    \ of the values of\n       the \"notify-subscription-ids\" (1setOf integer(1:MAX))\
    \ operation\n       attribute AND\n   2.  whose associated Subscription Object\
    \ contains the \"notify-pull-\n       method\" attribute and it has the 'ippget'\
    \ keyword value, AND\n   3.  whose \"notify-sequence-number\" is equal to or greater\
    \ than the\n       corresponding value of the \"notify-sequence-numbers\" (1setOf\n\
    \       integer(1:MAX)) operation attribute if supplied AND\n   4.  whose Event\
    \ Life has not yet expired AND\n   5.  where the Notification Recipient client\
    \ has read-access rights to\n       the identified Subscription Object (see Access\
    \ Rights paragraph\n       below).\n   The Notification Recipient client MUST\
    \ either (a) request Event Wait\n   Mode by supplying the \"notify-wait\" operation\
    \ attribute with a 'true'\n   value or (b) suppress Event Wait Mode by omitting\
    \ the \"notify-wait\"\n   operation attribute or by supplying it with a 'false'\
    \ value.  To\n   terminate Event Wait Mode subsequently, the Notification Recipient\n\
    \   client MUST close the connection.  To terminate Event Wait Mode, the\n   Printer\
    \ MUST either (a) return the \"notify-get-interval\" operation\n   attribute in\
    \ a Get-Notifications response (RECOMMENDED behavior) or\n   (b) close the connection.\
    \  The \"notify-get-interval\" operation\n   attributes tell the Notification\
    \ Recipient how long to wait before\n   trying a subsequent Get-Notifications\
    \ request.\n   Access Rights: The authenticated user (see [RFC2911], section 8.3)\n\
    \   performing this operation MUST be (1) the owner of each Subscription\n   Object\
    \ identified by the \"notify-subscription-ids\" operation\n   attribute (see section\
    \ 5.1.1), (2) an operator or administrator of\n   the Printer (see [RFC2911],\
    \ sections 1 and 8.5), or (3) otherwise\n   authorized by the Printer's administrator-configured\
    \ security policy\n   to request Event Notifications from the target Subscription\n\
    \   Object(s).  Otherwise, the IPP Printer MUST reject the operation and\n   return:\
    \ 'client-error-forbidden', 'client-error-not-authenticated',\n   or 'client-error-not-authorized'\
    \ status code, as appropriate.\n   Furthermore, the Printer's security policy\
    \ MAY limit the attributes\n   returned by the Get-Notifications operation, in\
    \ a manner similar to\n   that of the Get-Job-Attributes operation (see [RFC2911],\
    \ end of\n   section 3.3.4.2).\n"
- title: 5.1.  Get-Notifications Request
  contents:
  - "5.1.  Get-Notifications Request\n   The following groups of attributes are part\
    \ of the Get-Notifications\n   Request:\n   Group 1: Operation Attributes\n  \
    \    Natural Language and Character Set:\n         The \"attributes-charset\"\
    \ and \"attributes-natural-language\"\n         attributes, as described in [RFC2911],\
    \ section 3.1.4.1.\n      Target:\n         The \"printer-uri\" (uri) operation\
    \ attribute that is the target\n         for this operation as described in [RFC2911],\
    \ section 3.1.5.\n      Requesting User Name:\n         The \"requesting-user-name\"\
    \ (name(MAX)) attribute SHOULD be\n         supplied by the client as described\
    \ in [RFC2911], section 8.3.\n"
- title: 5.1.1.  notify-subscription-ids (1setOf integer(1:MAX))
  contents:
  - "5.1.1.  notify-subscription-ids (1setOf integer(1:MAX))\n   This attribute identifies\
    \ one or more Subscription objects for which\n   Events are requested.  The client\
    \ MUST supply this attribute with at\n   least one value.  The Printer object\
    \ MUST support this attribute with\n   multiple values.\n   If no Subscription\
    \ Object exists with the supplied identifier, or if\n   the identified Subscription\
    \ Object does not contain the \"notify-\n   pull-method\" attribute with the 'ippget'\
    \ keyword value, the Printer\n   MUST return the 'client-error-not-found' status\
    \ code.\n         Note:  The name of both the \"notify-subscription-ids\" and\n\
    \         \"notify-sequence-numbers\" end in 's', as they are multi-valued.\n\
    \         However, there are other occurrences of these attribute names\n    \
    \     without the 's' that are single valued.\n"
- title: 5.1.2.  notify-sequence-numbers (1setOf integer(1:MAX))
  contents:
  - "5.1.2.  notify-sequence-numbers (1setOf integer(1:MAX))\n   This attribute specifies\
    \ one or more of the lowest Event Notification\n   sequence number values for\
    \ the Subscription objects identified by the\n   corresponding values of the \"\
    notify-subscription-ids\" operation\n   attribute.  The Notification Recipient\
    \ SHOULD supply this attribute,\n   and the number of values SHOULD be the same\
    \ as that of the \"notify-\n   subscriptions-ids\" attribute.  The Printer MUST\
    \ support this\n   attribute with multiple values.\n   The Printer MUST NOT return\
    \ Notification Events with lower sequence\n   numbers for the corresponding Subscription\
    \ object.  Therefore, by\n   supplying the proper values for this attribute the\
    \ Notification\n   Recipient can prevent getting the same Event Notifications\
    \ from a\n   Subscription object that were returned on a previous Get-\n   Notifications\
    \ request.  The Notification Recipient SHOULD remember\n   the highest \"notify-sequence-number\"\
    \ value returned for each\n   Subscription object requested and SHOULD pass that\
    \ value for each\n   requested Subscription object on the next Get-Notifications\
    \ request.\n   If the Notification Recipient supplies fewer values for this\n\
    \   attribute (including omitting this attribute) than it does for the\n   \"\
    notify-subscription-ids\" operation attribute, the Printer assumes a\n   '1' value\
    \ for each missing value.  A value of '1' causes the Printer\n   to return any\
    \ un-expired Event Notification for that Subscription\n   object, as '1' is the\
    \ lowest possible sequence number.  If the\n   Notification Recipient supplies\
    \ more values for this attribute than\n   the number of values for the \"notify-subscription-ids\"\
    \ operation\n   attribute, the Printer ignores the extra values.\n   Note: If\
    \ a Notification Recipient performs two consecutive Get-\n   Notifications operations\
    \ with the same value for \"notify-sequence-\n   number\" (or omits the attribute),\
    \ the time stamp value of the first\n   Event Notification in the second Get-Notifications\
    \ Response may be\n   less than that of the time stamp of the last Event Notification\
    \ in\n   the first Get-Notification Response.  This happens because the\n   Printer\
    \ sends all unexpired Event Notifications with an equal or\n   higher sequence\
    \ number according to the ordering specified in\n   [RFC3995], and some Event\
    \ Notifications from the first Get-\n   Notifications operation may not have expired\
    \ by the time the second\n   Get-Notifications operation occurs.\n"
- title: 5.1.3.  notify-wait (boolean)
  contents:
  - "5.1.3.  notify-wait (boolean)\n   This value indicates whether the Notification\
    \ Recipient wants Event\n   Wait Mode.  The client MAY supply this attribute.\
    \  The Printer object\n   MUST support both values of this attribute.\n   If the\
    \ client supplies the 'false' value or omits this attribute, the\n   client is\
    \ not requesting Event Wait Mode.  If the value is 'true',\n   the client is requesting\
    \ Event Wait Mode.  See the beginning of\n   section 5.2 for the rules for Event\
    \ Wait Mode.\n"
- title: 5.2.  Get-Notifications Response
  contents:
  - "5.2.  Get-Notifications Response\n   The Printer has the following options for\
    \ responding to a Get-\n   Notifications Request:\n   1.  The Printer can reject\
    \ the request and return the 'server-error-\n       busy' status code if the Printer\
    \ is too busy to accept this\n       operation at this time.  In this case, the\
    \ Printer MUST return\n       the \"get-notify-interval\" operation attribute\
    \ to indicate when\n       the client SHOULD try again.\n   2.  If the Notification\
    \ Recipient did not request Event Wait Mode\n       (\"notify-wait-mode\" = 'false'\
    \ or omitted), the Printer MUST\n       immediately return whatever Event Notifications\
    \ it currently\n       holds in the requested Subscription object(s) and MUST\
    \ return the\n       \"notify-get-interval\" operation attribute with the number\
    \ of\n       seconds from now, at which the Notification Recipient SHOULD\n  \
    \     repeat the Get-Notifications Request to get future Event\n       Notifications.\n\
    \   3.  If the Notification Recipient requested Event Wait Mode\n       (\"notify-wait-mode\"\
    \ = 'true'), the Printer MUST immediately\n       return whatever Event Notifications\
    \ it currently holds in the\n       requested Subscription object(s) and MUST\
    \ continue to return\n       Event Notifications as they occur until all the requested\n\
    \       Subscription Objects are canceled.  A Subscription Object is\n       canceled\
    \ either via the Cancel-Subscription operation or by the\n       Printer (e.g.,\
    \ the Subscription Object is canceled when the\n       associated Job completes\
    \ and is no longer in the Job Retention or\n       Job History phase; see the\
    \ \"ippget-event-life (integer(15:MAX))\"\n       attribute discussion in section\
    \ 8.1).\n       However, the Printer MAY decide to terminate Event Wait Mode at\n\
    \       any time, including in the first response.  In this case, the\n      \
    \ Printer MUST return the \"notify-get-interval\" operation\n       attribute.\
    \  This attribute indicates that the Printer wishes to\n       leave Event Wait\
    \ Mode and the number of seconds in the future\n       that the Notification Recipient\
    \ SHOULD try the Get-Notifications\n       operation again.  The Notification\
    \ Recipient MUST accept this\n       response and MUST disconnect.  If the Notification\
    \ Recipient does\n       not disconnect, the Printer SHOULD do so.\n   From the\
    \ Notification Recipient's view, the response appears as an\n   initial burst\
    \ of data, which includes the Operation Attributes Group\n   and one Event Notification\
    \ Attributes Group per Event Notification\n   that the Printer is holding.  After\
    \ the initial burst of data, if the\n   Notification Recipient has selected the\
    \ Event Wait Mode option to\n   wait for additional Event Notifications, the Notification\
    \ Recipient\n   receives occasional Event Notification Attribute Groups.  Proxy\n\
    \   servers may delay some Event Notifications or cause time-outs to\n   occur.\
    \  The client MUST be prepared to perform the Get-Notifications\n   operation\
    \ again when time-outs occur.\n   Each attribute is encoded by using the IPP rules\
    \ for encoding\n   attributes [RFC2910] and MAY be encoded in any order.  Note:\
    \  the\n   Get-Jobs response in [RFC2911] acts as a model for encoding multiple\n\
    \   groups of attributes.  See section 11 for the encoding and transport\n   rules.\n\
    \   The following groups of attributes are part of the Get-Notifications\n   Response:\n\
    \   Group 1: Operation Attributes\n      Status Message:  In addition to the REQUIRED\
    \ status code returned\n         in every response, the response OPTIONALLY includes\
    \ a \"status-\n         message\" (text(255)) and/or a \"detailed-status-message\"\
    \n         (text(MAX)) operation attribute, as described in [RFC2911],\n     \
    \    sections 13 and 3.1.6.\n         The Printer can return any status codes\
    \ defined in [RFC2911].\n         If the status code is not 'successful-xxx',\
    \ the Printer MUST\n         NOT return any Event Notification Attribute groups.\
    \  The\n         following are descriptions of the important status codes:\n \
    \           successful-ok: The response contains all Event Notification\n    \
    \           associated with the specified subscription-ids that had\n        \
    \       been supplied in the \"notify-subscription-ids\" operation\n         \
    \      attribute in the request.  If the requested Subscription\n            \
    \   Objects have no associated Event Notification, the\n               response\
    \ MUST contain zero Event Notifications.\n            successful-ok-events-complete:\
    \  Indicates when this return\n               is the last return for all Subscription\
    \ objects that\n               match the request, whether or not Event Notifications\
    \ are\n               returned.  This condition occurs for Event Wait Mode with\n\
    \               Notification Recipients waiting for responses when (1)\n     \
    \          the Subscription Object is canceled with a Cancel-\n              \
    \ Subscription operation, (2) the Subscription Object is\n               deleted,\
    \ when the Per-Printer Subscription lease time\n               expires, or (3)\
    \ the 'job-completed' event occurs for a\n               Per-Job Subscription.\
    \  This condition also occurs for a\n               Get-Notifications request\
    \ that a Notification Recipient\n               makes after the job completes,\
    \ but before the Event Life\n               expires.  See section 10.1.\n    \
    \        client-error-not-found: The Printer has no Subscription\n           \
    \    Objects whose \"notify-subscription-id\" attribute equals\n             \
    \  any of the values of the \"notify-subscription-ids\"\n               operation\
    \ attribute supplied, or the identified\n               Subscription Object does\
    \ not contain the \"notify-pull-\n               method\" attribute with the 'ippget'\
    \ keyword value.\n            server-error-busy: The Printer is too busy to accept\
    \ this\n               operation.  The Printer SHOULD return the \"notify-get-\n\
    \               interval\" operation attribute in the Operation Attributes\n \
    \              of the response; then the Notification Recipient SHOULD\n     \
    \          wait for the number of seconds specified by the \"notify-\n       \
    \        get-interval\" operation attribute before performing this\n         \
    \      operation again.  If the \"notify-get-interval\" Operation\n          \
    \     Attribute is not present, the Notification Recipient\n               SHOULD\
    \ use the normal network back-off algorithms to\n               determine when\
    \ to perform this operation again.\n      Natural Language and Character Set:\n\
    \         The \"attributes-charset\" and \"attributes-natural-language\"\n   \
    \      attributes, as described in [RFC2911], section 3.1.4.2.\n         The Printer\
    \ MUST use the values of \"notify-charset\" and\n         \"notify-natural-language\"\
    , respectively, from one Subscription\n         Object associated with the Event\
    \ Notifications in this\n         response.\n         Normally, there is only\
    \ one matched Subscription Object, or the\n         value of the \"notify-charset\"\
    \ and \"notify-natural-language\"\n         attributes is the same in all Subscription\
    \ Objects.  If not,\n         the Printer MUST pick one Subscription Object from\
    \ which to\n         obtain the value of these attributes.  The algorithm for\n\
    \         picking the Subscription Object is implementation dependent.\n     \
    \    The choice of natural language is not critical, because 'text'\n        \
    \ and 'name' values can override the \"attributes-natural-\n         language\"\
    \ operation attribute.  The Printer's choice of charset\n         is critical\
    \ because a bad choice may leave it unable to send\n         some 'text' and 'name'\
    \ values accurately.\n"
- title: 5.2.1.  notify-get-interval (integer(0:MAX))
  contents:
  - "5.2.1.  notify-get-interval (integer(0:MAX))\n   The value of this operation\
    \ attribute is the number of seconds that\n   the Notification Recipient SHOULD\
    \ wait before trying the Get-\n   Notifications operation again.  The Printer\
    \ MUST return this\n   operation attribute if (1) it is too busy to return events,\
    \ (2) the\n   Notification Recipient client did not request Event Wait Mode, or\
    \ (3)\n   the Printer is terminating Event Wait Mode.  The client MUST accept\n\
    \   this attribute and SHOULD reissue the Get-Notifications operation\n   (with\
    \ or without \"notify-wait\" = 'true') at the indicated number of\n   seconds\
    \ in the future in order to get more Event Notifications  This\n   value is intended\
    \ to help the client be a good network citizen.\n   The value of this attribute\
    \ MUST be at least as large as that of the\n   Printer's \"ippget-event-life\"\
    \ Printer Description attribute (see\n   section 8.1).  The Printer MAY return\
    \ a value that is larger than\n   that of the \"ippget-event-life\" Printer Description\
    \ attribute\n   provided that the Printer increases the Event Life for this\n\
    \   Subscription object so that Notification Recipients taking account of\n  \
    \ the larger value and polling with a longer interval will not miss\n   events.\
    \  Note:  Implementing such an algorithm requires some hidden\n   attributes in\
    \ the Subscription object that are IMPLEMENTATION\n   DEPENDENT.\n   If the Printer\
    \ wants to remain in Event Wait Mode, then the Printer\n   MUST NOT return this\
    \ attribute in the response.\n   Here is a complete table of combinations of \"\
    notify-wait\", \"status-\n   code\", \"notify-get-interval\", and Event Notification\
    \ Attributes\n   Groups for Get-Notification initial (Wait and No Wait) Responses\
    \ and\n   subsequent Event Wait Mode Responses (which may stay in Event Wait\n\
    \   Mode or may request the Notification Recipient to leave Event Wait\n   Mode):\n\
    \       Table 2.  Combinations of \"notify-wait\", \"status-code\", and\n    \
    \                       \"notify-get-interval\"\n         Client sends:  Printer\
    \ returns:  Printer       Event\n                                          returns:\
    \      Notification\n         \"notify-wait\"  \"status-code\"     \"notify-get-\
    \  Attribute\n                                          interval\"     Groups\n\
    \         1.  'false'*   'successful-ok'   MUST return N maybe\n         2.  'false'*\
    \   'not-found'       MUST NOT      MUST NOT\n         3.  'false'*   'busy' \
    \           MUST return N MUST NOT\n         4.  'false'*   'events-         \
    \ MUST NOT      'job-\n                        complete'                     \
    \   completed'\n         5.  'true'     'successful-ok'   MUST NOT      MUST\n\
    \         6.  'true'     'successful-ok'   MUST return N maybe\n         7.  'true'\
    \     'not-found'       MUST NOT      MUST NOT\n         8.  'true'     'busy'\
    \            MUST return N MUST NOT\n         9.  'true'     'events-        \
    \  MUST NOT      'job-\n                        complete'                    \
    \    completed' or\n                                                         maybe\
    \ other\n         * 'false' or client omits the \"notify-wait\" attribute.\n \
    \        Explanation:\n         1-4:  Client does not request Event Wait Mode.\n\
    \         5-9:  Client requests Event Wait Mode.\n         2,7:  Subscription\
    \ object not found, or was canceled earlier;\n               client should NOT\
    \ try again.\n         3,8:  Server busy, tells client to try later; client should\
    \ try\n               again in N seconds.\n         4:    Client polled after\
    \ job completed, but before Event Life\n               expired, and got the 'job-completed'\
    \ event, so the client\n               shouldn't bother trying again; client should\
    \ NOT try\n               again later.\n         5:    Printer returns one or\
    \ more Event Notifications and is OK\n               to stay in Event Wait Mode;\
    \ the client waits for more\n               Event Notifications to be returned.\n\
    \         6:    Printer wants to leave Event Wait mode.  Can happen on\n     \
    \          the first response (with or without Event Notifications)\n        \
    \       or happen on a subsequent response with or without Event\n           \
    \    Notifications; the client SHOULD try again in N seconds.\n         9:   \
    \ Either (1) the printer returns 'job-completed' event, or\n               (2)\
    \ the Subscription Object was canceled by either a\n               Cancel-Job\
    \ or a Per-Printer Subscription expired without\n               being renewed.\
    \  For case (1), at least one Event\n               Notification MUST be returned;\
    \ for case (2), it is\n               unlikely that any Event Notifications are\
    \ returned, and\n               the client should NOT try again.\n"
- title: 5.2.2.  printer-up-time (integer(1:MAX))
  contents:
  - "5.2.2.  printer-up-time (integer(1:MAX))\n   The value of this attribute is the\
    \ Printer's \"printer-up-time\"\n   attribute at the time when the Printer sends\
    \ this response.  The\n   Printer MUST return this attribute.  Because each Event\
    \ Notification\n   also contains the value of this attribute when the event occurred,\n\
    \   the value of this attribute lets a Notification Recipient know when\n   each\
    \ Event Notification occurred relative to the time of this\n   response.\n   Group\
    \ 2: Unsupported Attributes\n         See [RFC2911], section 3.1.7, for details\
    \ on returning\n         Unsupported Attributes.\n   Group 3 through N: Event\
    \ Notification Attributes\n         The Printer responds with one Event Notification\
    \ Attributes\n         Group per matched Event Notification.  The entire response\
    \ is\n         considered a single Compound Event Notification (see\n        \
    \ [RFC3995]).  The matched Event Notifications are all un-expired\n         Event\
    \ Notifications associated with the matched Subscription\n         Objects and\
    \ MUST follow the \"Event Notification Ordering\"\n         requirements for Event\
    \ Notifications within a Compound Event\n         Notification specified in [RFC3995]\
    \ section 9.  In other words,\n         the Printer MUST order these Event Notification\
    \ groups in\n         ascending time stamp (and sequence number) order for a\n\
    \         Subscription object.  If Event Notifications for multiple\n        \
    \ Subscription objects are being returned, the Notification\n         Events for\
    \ the next Subscription object follow in ascending\n         time stamp order,\
    \ etc.\n         Each Event Notification Group MUST contain all of attributes\n\
    \         specified in section 9.1 (\"Content of Machine Consumable Event\n  \
    \       Notifications\") of [RFC3995], with exceptions denoted by\n         asterisks\
    \ in the tables below.\n         The tables below are identical to those in section\
    \ 9.1\n         (\"Content of Machine Consumable Event Notifications\") of\n \
    \        [RFC3995], except that each cell in the \"Sends\" column is a\n     \
    \    \"MUST\".\n         If more than one Event Notification is being returned\
    \ and the\n         status of each is not the same, then the Printer MUST return\
    \ a\n         \"notify-status-code\" attribute in each Event Notification\n  \
    \       Attributes group to indicate the differing status values.\n         For\
    \ an Event Notification for all Events, the Printer includes\n         the attributes\
    \ shown in Table 3.\n               Table 3.  Attributes in Event Notification\
    \ Content\n   Source Value                              Sends     Source Object\n\
    \   notify-subscription-id (integer(1:MAX))   MUST      Subscription\n   notify-printer-uri\
    \ (uri)                  MUST      Subscription\n   notify-subscribed-event (type2\
    \ keyword)   MUST      Event\n                                               \
    \         Notification\n   printer-up-time (integer(1:MAX)) *        MUST    \
    \  Printer\n   printer-current-time (dateTime)           MUST **   Printer\n \
    \  notify-sequence-number (integer (0:MAX))  MUST      Subscription\n   notify-charset\
    \ (charset)                  MUST      Subscription\n   notify-natural-language\
    \ (naturalLanguage) MUST      Subscription\n   notify-user-data (octetString(63))\
    \        MUST ***  Subscription\n   notify-text (text)                       \
    \ MUST      Event\n                                                        Notification\n\
    \   attributes from the \"notify-attributes\"   MUST **** Printer\n   attribute\n\
    \   attributes from the \"notify-attributes\"   MUST **** Job\n   attribute\n\
    \   attributes from the \"notify-attributes\"   MUST **** Subscription\n   attribute\n\
    \      * As specified in [RFC3995] section 9, the value of the\n      \"printer-up-time\"\
    \ attribute sent in each Event Notification\n      MUST be the time at which the\
    \ Event occurred, not the time at\n      which the Event Notification was sent.\n\
    \      ** The Printer MUST send the \"printer-current-time\" attribute\n     \
    \ if and only if it supports the \"printer-current-time\" attribute\n      on\
    \ the Printer object.\n      *** If the associated Subscription Object does not\
    \ contain a\n      \"notify-user-data\" attribute, the Printer MUST send an\n\
    \      octet-string of length 0.\n      **** If the \"notify-attributes\" attribute\
    \ is present on the\n      Subscription Object, the Printer MUST send all attributes\n\
    \      specified by the \"notify-attributes\" attribute.  Note:  If the\n    \
    \  Printer doesn't support the \"notify-attributes\" attribute, it\n      is not\
    \ present on the associated Subscription Object.\n      For Event Notifications\
    \ for Job Events, the Printer includes\n      the additional attributes shown\
    \ in Table 4.\n     Table 4.  Additional Attributes in Event Notification Content\
    \ for\n                                Job Events\n   Source Value           \
    \                       Sends  Source Object\n   job-id (integer(1:MAX))     \
    \                  MUST   Job\n   job-state (type1 enum)                     \
    \   MUST   Job\n   job-state-reasons (1setOf type2 keyword)      MUST   Job\n\
    \   job-impressions-completed (integer(0:MAX))    MUST * Job\n      *  The Printer\
    \ MUST send the \"job-impressions-completed\" attribute\n      in an Event Notification\
    \ only for the combinations of Events and\n      Subscribed Events shown in Table\
    \ 5.\n        Table 5.  Combinations of Events and Subscribed Events for\n   \
    \                    \"job-impressions-completed\"\n   Job Event             \
    \    Subscribed Job Event\n   'job-progress'            'job-progress'\n   'job-completed'\
    \           'job-completed'\n   'job-completed'           'job-state-changed'\n\
    \      For Event Notification for Printer Events, the Printer includes\n     \
    \ the additional attributes shown in Table 6.\n     Table 6.  Additional Attributes\
    \ in Event Notification Content for\n                              Printer Events\n\
    \   Source Value                                  Sends   Source\n   Object\n\
    \   printer-state (type1 enum)                    MUST    Printer\n   printer-state-reasons\
    \ (1setOf type2 keyword)  MUST    Printer\n   printer-is-accepting-jobs (boolean)\
    \           MUST    Printer\n"
- title: 6.  Additional Information about Subscription Template Attributes
  contents:
  - "6.  Additional Information about Subscription Template Attributes\n   The 'ippget'\
    \ Delivery Method does not define any addition\n   Subscription Template attributes\
    \ and has the conformance requirements\n   for Subscription Template attributes\
    \ defined in [RFC3995].  This\n   section defines additional information about\
    \ Subscription Template\n   attributes defined in [RFC3995].\n"
- title: 6.1.  notify-pull-method (type2 keyword)
  contents:
  - "6.1.  notify-pull-method (type2 keyword)\n   This Subscription Template attribute\
    \ identifies the Pull Delivery\n   Method to be used for the Subscription Object\
    \ (see [RFC3995]).  To\n   support the 'ippget' Pull Delivery Method defined in\
    \ this document,\n   the Printer MUST support this attribute with the following\
    \ keyword\n   value:\n     'ippget':  Indicates that the 'ippget' Pull Delivery\
    \ Method is to\n       be used for this Subscription Object.\n"
- title: 7.  Subscription Description Attributes
  contents:
  - "7.  Subscription Description Attributes\n   The 'ippget' Delivery Method has\
    \ the conformance requirements for\n   Subscription Description attributes defined\
    \ in [RFC3995].  The\n   'ippget' Delivery Method does not define any addition\
    \ Subscription\n   Description attributes.\n"
- title: 8.  Additional Printer Description Attributes
  contents:
  - "8.  Additional Printer Description Attributes\n   This section defines additional\
    \ Printer Description attributes for\n   use with the 'ippget' Delivery Method.\n"
- title: 8.1.  ippget-event-life (integer(15:MAX))
  contents:
  - "8.1.  ippget-event-life (integer(15:MAX))\n   This Printer Description attribute\
    \ specifies the Event Life value\n   that the Printer assigns to each Event; i.e.,\
    \ the number of seconds\n   after an Event occurs during which a Printer will\
    \ return that Event\n   in an Event Notification in a Get-Notifications response.\
    \  After the\n   Event Life expires for the Event, the Printer MAY no longer return\
    \ an\n   Event Notification for that Event in a Get-Notifications response.\n\
    \   The Printer MUST support this attribute if it supports the 'ippget'\n   Delivery\
    \ Method.  The value MUST be 15 or more (at least 15 seconds),\n   and 60 (seconds)\
    \ is the RECOMMENDED value to align with the PWG Job\n   Monitoring MIB [RFC2707]\
    \ jmGeneralJobPersistence and\n   jmGeneralAttributePersistence objects.\n   For\
    \ example, assume the following:\n   1.  A client performs a Job Creation operation\
    \ that creates a\n       Subscription Object associated with the 'ippget' Delivery\
    \ Method;\n   2.  An Event associated with the new Job occurs immediately after\
    \ the\n       Subscription Object is created;\n   3.  the same client or some\
    \ other client performs a Get-Notifications\n       operation so that the client\
    \ is connected N seconds after the Job\n       Creation operation.\n   Then, if\
    \ N is less than the value of this attribute, the client(s)\n   performing the\
    \ Get-Notifications operations can expect not to miss\n   any Event-Notifications,\
    \ barring some unforeseen lack of memory space\n   in the Printer.  Note:  The\
    \ client MUST initiate the Get-\n   Notifications at a time that is sufficiently\
    \ less that N seconds to\n   account for network latency so that it is connected\
    \ to the Printer\n   before N seconds elapses.\n   If a Printer supports the 'ippget'\
    \ Delivery Method, it MUST keep\n   'completed', 'canceled', or 'aborted' Job\
    \ objects in the Job\n   Retention and/or Job History phases for at least as long\
    \ as this\n   attribute's value.  The Printer MAY retain jobs longer that this\n\
    \   value.  See [RFC2911], section 4.3.7.1, and the discussion in\n   [RFC3995]\
    \ (regarding the 'job-completed' event).  The latter explains\n   that a Notification\
    \ Recipient can query the Job after receiving a\n   'job-completed' Event Notification\
    \ in order to find out other\n   information about the job that is 'completed',\
    \ 'aborted', or\n   'canceled'.  However, this attribute has no effect on the\
    \ Cancel-\n   Subscription operation, which deletes the Subscription object\n\
    \   immediately whether or not it contains the \"notify-pull-method\"\n   attribute\
    \ with the 'ippget' keyword value.  Immediately thereafter,\n   subsequent Get-Notifications\
    \ Responses MUST NOT contain Event\n   Notifications associated with the canceled\
    \ Subscription object.\n"
- title: 9.  New Values for Existing Printer Description Attributes
  contents:
  - "9.  New Values for Existing Printer Description Attributes\n   This section defines\
    \ additional values for existing Printer\n   Description attributes as defined\
    \ in [RFC3995].\n"
- title: 9.1.  notify-pull-method-supported (1setOf type2 keyword)
  contents:
  - "9.1.  notify-pull-method-supported (1setOf type2 keyword)\n   The following keyword\
    \ value for the \"notify-pull-method-supported\"\n   attribute is added in order\
    \ to support the new Delivery Method\n   defined in this document:\n      'ippget':\
    \   The IPP Notification Pull Delivery Method defined in\n        this document.\n"
- title: 9.2.  operations-supported (1setOf type2 enum)
  contents:
  - "9.2.  operations-supported (1setOf type2 enum)\n   Table 7 lists the \"operation-id\"\
    \ value defined in order to support\n   the new Get-Notifications operation defined\
    \ in this document.\n                    Table 7.  Operation-id Assignments\n\
    \      Value       Operation Name\n      0x001C      Get-Notifications\n"
- title: 10.  New Status Codes
  contents:
  - "10.  New Status Codes\n   The following status code is defined as an extension\
    \ for this\n   Delivery Method and is returned as the status code of the Get-\n\
    \   Notifications operation in Group 1 or Group 3 to N (see section 5.2).\n"
- title: 10.1.  successful-ok-events-complete (0x0007)
  contents:
  - "10.1.  successful-ok-events-complete (0x0007)\n   The Printer MUST return the\
    \ 'successful-ok-events-complete' status\n   code to indicate when this Get-Notifications\
    \ response is the last\n   response for a Subscription object, whether or not\
    \ there are Event\n   Notifications being returned.  This condition occurs for\
    \ Event Wait\n   Mode with Notification Recipients waiting for responses when\
    \ (1) the\n   Subscription Object is canceled with a Cancel-Subscription operation,\n\
    \   (2) the Subscription object is deleted, when the Per-Printer\n   Subscription\
    \ lease time expires, or (3) the 'job-completed' event\n   occurs for a Per-Job\
    \ Subscription.  This condition also occurs for a\n   Get-Notifications request\
    \ that a Notification Recipient makes after\n   the job completes, but before\
    \ the Event Life expires.\n"
- title: 11.  Encoding and Transport
  contents:
  - "11.  Encoding and Transport\n   This section defines the encoding and transport\
    \ considerations for\n   this Delivery Method based on [RFC2910].\n   The encoding\
    \ of a Get-Notifications Response is modeled after the\n   Get-Jobs Response (see\
    \ [RFC2911]).  In a Get-Notifications Response,\n   each Event Notification Attributes\
    \ Group MUST start with an 'event-\n   notification-attributes-tag' (see the section\
    \ \"Encodings of\n   Additional Attribute Tags\" in [RFC3995]), and end with an\
    \ 'end-of-\n   attributes-tag'.  In addition, for Event Wait Mode the multi-\n\
    \   part/related is used to separate each multiple response (in time) to\n   a\
    \ single Get-Notifications Request.\n   The Printer returns Get-Notification Response\
    \ as follows:\n   1.  If the Notification Recipient client did not request Event\
    \ Wait\n       Mode (\"notify-wait\" = 'false' or omitted), the Printer ends the\n\
    \       response with an 'end-of-attributes-tag' (see [RFC2911], Get-Jobs\n  \
    \     encoding), as with any operation response.\n   2.  If the Notification Recipient\
    \ client requests Event Wait Mode\n       (\"notify-wait\" = 'true') and the Printer\
    \ wishes to honor the\n       request, the Printer MUST return the response as\
    \ an\n       application/ipp part inside a multi-part/related MIME media type.\n\
    \       When one or more additional Events occur, the Printer returns\n      \
    \ each as an additional Event Notification Group using a separate\n       application/ipp\
    \ part under the multi-part/related type.\n   3.  If the client requested Event\
    \ Wait Mode (\"notify-wait\" = 'true'),\n       but the Printer does not wish\
    \ to honor the request in the initial\n       response and wants the client explicitly\
    \ polled for Event\n       Notifications, the Printer MUST return the \"notify-get-interval\"\
    \n       operation attribute (see section 5.2.1).  The Printer returns the\n \
    \      response as an application/ipp part that MAY be inside an multi-\n    \
    \   part/related type.  The client MUST accept this response and\n       reissue\
    \ the Get-Notifications request in the future indicated by\n       the value of\
    \ the \"notify-get-interval\" attribute value.\n   4.  If the client requested\
    \ Event Wait Mode (\"notify-wait\" = 'true'),\n       and the Printer initially\
    \ honored the request but later wishes to\n       leave Event Wait Mode,  the\
    \ Printer MUST return the \"notify-get-\n       interval\" operation attribute\
    \ (see section 5.2.1).  The Printer\n       returns the response as an application/ipp\
    \ part that MUST be\n       inside an multi-part/related type.\n   NOTE:  If a\
    \ Notification Recipient fails to receive a response, it\n   can ask the Printer\
    \ for the same Event Notifications again.  The\n   Notification Recipient will\
    \ receive the same Event Notifications that\n   it should have received the first\
    \ time, except for those Event\n   Notifications that have expired in the meantime.\n\
    \   The Printer MAY chunk the responses, but this has no significance to\n   the\
    \ IPP semantics.\n   This notification delivery method uses the IPP transport\
    \ and encoding\n   [RFC2910] for the Get-Notifications operation with the following\n\
    \   extension, allocated in [RFC3995]:\n          Table 8.  The \"event-notification-attributes-tag\"\
    \ Value\n      Tag Value (Hex)   Meaning\n      0x07              \"event-notification-attributes-tag\"\
    \n"
- title: 12.  Conformance Requirements
  contents:
  - "12.  Conformance Requirements\n   This section lists the conformance requirements\
    \ for clients and\n   Printers.\n"
- title: 12.1.  Conformance for IPP Printers
  contents:
  - "12.1.  Conformance for IPP Printers\n   It is OPTIONAL for a Printer to support\
    \ IPP Notifications as defined\n   in [RFC3995].  However, if a Printer supports\
    \ IPP Notifications, the\n   Printer MUST support the 'ippget' Delivery Method,\
    \ as defined in this\n   document, as one of its Delivery Methods.  IPP Printers\
    \ that conform\n   to this specification\n   1.  MUST meet the conformance requirements\
    \ defined in [RFC3995] for a\n       Pull Delivery Method;\n   2.  MUST support\
    \ the Get-Notifications operation defined in section\n       5, including Event\
    \ Wait Mode;\n   3.  MUST support the Subscription Template object attributes,\
    \ as\n       defined in section 6;\n   4.  MUST support the Subscription Description\
    \ object attributes, as\n       defined in section 7;\n   5.  MUST support the\
    \ \"ippget-event-life\" Printer Description\n       attribute defined in section\
    \ 8.1, including retaining jobs in the\n       Job Retention and/or Job History\
    \ phases for at least as long as\n       the value specified by the Printer's\
    \ \"ippget-event-life\";\n   6.  MUST support the additional values for IPP/1.1\
    \ Printer\n       Description attributes defined in section 9;\n   7.  MUST support\
    \ the 'successful-ok-events-complete' status code, as\n       described in section\
    \ 10.1;\n   8.  MUST listen for the IPP Get-Notifications operation requests on\n\
    \       IANA-assigned well-known port 631, unless explicitly configured\n    \
    \   by system administrators or site policies;\n   9.  SHOULD NOT listen for IPP\
    \ Get-Notifications operation requests on\n       any other port, unless explicitly\
    \ configured by system\n       administrators or site policies; and\n   10. MUST\
    \ meet the security conformance requirements stated in section\n       18.4.\n"
- title: 12.2.  Conformance for IPP Clients
  contents:
  - "12.2.  Conformance for IPP Clients\n   It is OPTIONAL for an IPP Client to support\
    \ IPP Notifications as\n   defined in [RFC3995].  However, if a client supports\
    \ IPP\n   Notifications, the client MUST support the 'ippget' Delivery Method\n\
    \   as defined in this document as one of its Delivery Methods.  IPP\n   Clients\
    \ that conform to this specification:\n   1.  MUST create Subscription Objects\
    \ by sending Subscription Creation\n       operation requests containing the \"\
    notify-pull-method\" attribute\n       (as opposed to the \"notify-recipient-uri\"\
    \ attribute) using the\n       'ippget' keyword value (see sections 6.1 and 15.2);\n\
    \   2.  MUST send IPP Get-Notifications operation requests (see section\n    \
    \   5.1) via the port specified in the associated 'ipp' URL (if\n       present)\
    \ or otherwise via IANA-assigned well-known port 631;\n   3.  MUST convert the\
    \ associated 'ipp' URLs for use in IPP Get-\n       Notifications operation to\
    \ their corresponding 'http' URL forms\n       for use in the HTTP layer, according\
    \ to the rules in section 5,\n       \"IPP URL Scheme\", in [RFC2910]; and\n \
    \  4.  MUST meet the security conformance requirements stated in section\n   \
    \    18.5.\n"
- title: 13.  Normative References
  contents:
  - "13.  Normative References\n   [RFC2119]    Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n                Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2910]    Herriot, R., Butler, S., Moore, P., Turner, R., and J.\n\
    \                Wenn, \"Internet Printing Protocol/1.1: Encoding and\n      \
    \          Transport\", RFC 2910, September 2000.\n   [RFC2911]    Hastings, T.,\
    \ Herriot, R., deBry, R., Isaacson, S., and\n                P. Powell, \"Internet\
    \ Printing Protocol/1.1: Model and\n                Semantics\", RFC 2911, September\
    \ 2000.\n   [RFC3995]   Herriot, R. and T. Hastings, \"Internet Printing Protocol\n\
    \                (IPP): Event Notifications and Subscriptions\", RFC 3995,\n \
    \               March 2005.\n"
- title: 14.  Informative References
  contents:
  - "14.  Informative References\n   [RFC2565]    Herriot, R., Butler, S., Moore,\
    \ P., and R. Turner,\n                \"Internet Printing Protocol/1.0: Encoding\
    \ and\n                Transport\", RFC 2565, April 1999.\n   [RFC2566]    deBry,\
    \ R., Hastings, T., Herriot, R., Isaacson, S., and\n                P. Powell,\
    \ \"Internet Printing Protocol/1.0: Model and\n                Semantics\", RFC\
    \ 2566, April 1999.\n   [RFC2567]    Wright, F., \"Design Goals for an Internet\
    \ Printing\n                Protocol\", RFC 2567, April 1999.\n   [RFC2568]  \
    \  Zilles, S., \"Rationale for the Structure of the Model\n                and\
    \ Protocol for the Internet Printing Protocol\", RFC\n                2568, April\
    \ 1999.\n   [RFC2569]    Herriot, R., Hastings, T., Jacobs, N., and J. Martin,\n\
    \                \"Mapping between LPD and IPP Protocols\", RFC 2569, April\n\
    \                1999.\n   [RFC2616]    Fielding,  R., Gettys, J., Mogul, J.,\
    \ Frystyk, H.,\n                Masinter, L., Leach, P., and T. Berners-Lee, \"\
    Hypertext\n                Transfer Protocol -- HTTP/1.1\", RFC 2616, June 1999.\n\
    \   [RFC2707]    Bergman, R., Hastings, T., Isaacson, S., and H. Lewis,\n    \
    \            \"Job Monitoring MIB - V1.0\", RFC 2707, November 1999.\n   [RFC3196]\
    \    Hastings, T., Manros, C., Zehler, P., Kugler, C., and H.\n              \
    \  Holst, \"Internet Printing Protocol/1.1: Implementor's\n                Guide\"\
    , RFC 3196, November 2001.\n   [RFC3997]    Hastings, T., Ed., deBry, R., and\
    \ H. Lewis, \"Internet\n                Printing Protocol (IPP): Requirements\
    \ for IPP\n                Notifications\", RFC 3997, March 2005.\n"
- title: 15.  IANA Considerations
  contents:
  - "15.  IANA Considerations\n   This section contains the exact information that\
    \ the IANA has added\n   to the IPP Registries according to the procedures defined\
    \ in\n   [RFC2911], section 6.  These registrations have been published in the\n\
    \   http://www.iana.org/assignments/ipp-registrations registry.\n"
- title: 15.1.  Attribute Registrations
  contents:
  - "15.1.  Attribute Registrations\n   The following table lists the attributes defined\
    \ in this document.\n   This has been registered according to the procedures in\
    \ RFC 2911\n   [RFC2911] section 6.2.\n   Printer Description attributes:    \
    \            Reference   Section\n   -------------------------------         \
    \       ---------   -------\n   ippget-event-life (integer(15:MAX))          \
    \  [RFC3996]   8.1\n"
- title: 15.2.  Delivery Method and Additional Keyword Attribute Value
  contents:
  - "15.2.  Delivery Method and Additional Keyword Attribute Value\n       Registrations\
    \ for Existing Attributes\n   This section lists additional keyword attribute\
    \ value registrations\n   for use with existing attributes defined in other documents.\
    \  These\n   have been registered according to the procedures in [RFC2911],\n\
    \   section 6.1.  According to [RFC3995], section 24.7.3, Pull Delivery\n   Method\
    \ registrations are the keyword attribute value registrations\n   for the \"notify-pull-method\"\
    \ and \"notify-pull-method-supported\"\n   attributes.\n   Attribute (attribute\
    \ syntax)\n     Values                                       Reference   Section\n\
    \     -----------------------                      ---------   -------\n   notify-pull-method\
    \ (type2 keyword)             [RFC3995]   5.3.2\n   notify-pull-method-supported\
    \ (1setOf type2 keyword)\n                                                  [RFC3995]\
    \   5.3.2.1\n     ippget                                       [RFC3996]   9.1\n"
- title: 15.3.  Additional Enum Attribute Values
  contents:
  - "15.3.  Additional Enum Attribute Values\n   The following table lists the enum\
    \ attribute values defined in this\n   document.  These have been registered according\
    \ to the procedures in\n   [RFC2911], section 6.1.\n   Attribute (attribute syntax)\n\
    \     Value    Name                                Reference   Section\n     ------\
    \   -----------------------------       ---------   -------\n   operations-supported\
    \ (1setOf type2 enum)       [RFC2911]   4.4.15\n     0x001C   Get-Notifications\
    \                   [RFC3996]   9.2\n"
- title: 15.4.  Operation Registrations
  contents:
  - "15.4.  Operation Registrations\n   The following table lists the operations defined\
    \ in this document.\n   This has been registered according to the procedures in\
    \ RFC 2911\n   [RFC2911] section 6.4.\n   Operations:                        \
    \            Reference   Section\n   -----------                             \
    \       ---------   -------\n   Get-Notifications                            \
    \  [RFC3996]   5\n"
- title: 15.5.  Status Code Registrations
  contents:
  - "15.5.  Status Code Registrations\n   The following table lists the status codes\
    \ defined in this document.\n   This has been registered according to the procedures\
    \ in [RFC2911],\n   section 6.6.\n   Status codes:                           \
    \       Reference  Section\n   -------------                                 \
    \ ---------  -------\n   successful-ok-events-complete (0x0007)         [RFC3996]\
    \  10.1\n"
- title: 16.  Internationalization Considerations
  contents:
  - "16.  Internationalization Considerations\n   The IPP Printer MUST localize the\
    \ \"notify-text\" attribute as\n   specified in section 14 of [RFC3995].\n   In\
    \ addition, when the client receives the Get-Notifications response,\n   it is\
    \ expected to localize the attributes that have the 'keyword'\n   attribute syntax\
    \ according to the charset and natural language\n   requested in the Get-Notifications\
    \ request.\n"
- title: 17.  Security Considerations
  contents:
  - "17.  Security Considerations\n   The IPP Model and Semantics document [RFC2911,\
    \ section 8] discusses\n   high-level security requirements (Client Authentication,\
    \ Server\n   Authentication and Operation Privacy).  The IPP Transport and\n \
    \  Encoding document [RFC2910, section 8] discusses the security\n   requirements\
    \ for the IPP protocol.  Client Authentication is the\n   mechanism by which the\
    \ client proves its identity to the server in a\n   secure manner.  Server Authentication\
    \ is the mechanism by which the\n   server proves its identity to the client in\
    \ a secure manner.\n   Operation Privacy is defined as a mechanism for protecting\
    \ operations\n   from eavesdropping.\n   The 'ippget' Delivery Method with its\
    \ Get-Notifications operations\n   leverages the security mechanism that are used\
    \ in IPP/1.1 [RFC2910\n   and RFC2911] without adding any additional security\
    \ mechanisms in\n   order to maintain the same security support as IPP/1.1.\n\
    \   The access control model for the Get-Notifications operation defined\n   in\
    \ this document is the same as the access control model for the\n   Get-Job-Attributes\
    \ operation (see [RFC2911], section 3.2.6).  The\n   primary difference is that\
    \ a Get-Notifications operation is directed\n   at Subscription Objects rather\
    \ than at Job objects, and a returned\n   attribute group contains Event Notification\
    \ attributes rather than\n   Job object attributes.\n"
- title: 17.1.  Notification Recipient Client Access Rights
  contents:
  - "17.1.  Notification Recipient Client Access Rights\n   The Notification Recipient\
    \ client MUST have the following access\n   rights to the Subscription object(s)\
    \ targeted by the Get-\n   Notifications operation request:\n      The authenticated\
    \ user (see [RFC2911], section 8.3) performing\n      this operation MUST be (1)\
    \ the owner of each Subscription Object\n      identified by the \"notify-subscription-ids\"\
    \ operation attribute\n      (see section 5.1.1), (2) an operator or administrator\
    \ of the\n      Printer (see [RFC2911], sections 1 and 8.5), or (3) otherwise\n\
    \      authorized by the Printer's administrator-configured security\n      policy\
    \ to request Event Notifications from the target Subscription\n      Object(s).\
    \  Furthermore, the Printer's security policy MAY limit\n      the attributes\
    \ returned by the Get-Notifications operation, in a\n      manner similar to that\
    \ of the Get-Job-Attributes operation (see\n      [RFC2911], end of section 3.3.4.2).\n"
- title: 17.2.  Printer Security Threats
  contents:
  - "17.2.  Printer Security Threats\n   Because the Get-Notifications operation is\
    \ sent in the same direction\n   as are Job Creation operations, usually by the\
    \ same client, this\n   Event Notification Delivery Method poses no additional\n\
    \   authentication, authorization, privacy, firewall, or port assignment\n   issues\
    \ above those for the IPP Get-Job-Attributes and Get-Printer-\n   Attributes operations\
    \ (see [RFC2911], sections 3.2.6 and 3.2.5).\n"
- title: 17.3.  Notification Recipient Security Threats
  contents:
  - "17.3.  Notification Recipient Security Threats\n   Unwanted Events Notifications\
    \ (spam):  Unlike Push Event Notification\n   Delivery Methods in which the IPP\
    \ Printer initiates the Event\n   Notification, with the Pull Delivery Method\
    \ defined in this document,\n   the Notification Recipient is the client that\
    \ initiates the Get-\n   Notifications operation (see section 5).  Therefore,\
    \ with this method\n   there is no chance of \"spam\" notifications.\n   Note:\
    \  When a client stays connected to a Printer by using the Event\n   Wait Mode\
    \ (see section 5.1.3) in order to receive Event Notifications\n   as they occur,\
    \ it can close down the IPP connection at any time and\n   so can avoid future\
    \ unwanted Event Notifications at any time.\n   It is true that the client has\
    \ control over whether to ask for Event\n   Notifications.  However, if the client\
    \ subscribes to an event and\n   does a Get-Notifications request, it gets all\
    \ events for the\n   Subscription Object in the sequence number range (see section\
    \ 5.1.2),\n   not just those it wants.  If a client subscribes to a Per-Printer\n\
    \   Subscription job event, such as 'job-completed', and someone then\n   starts\
    \ and cancels thousands of jobs, the client would have to\n   receive these events\
    \ in addition to those it is interested in.  A\n   client can protect itself better\
    \ by subscribing to its own jobs by\n   using a Per-Job Subscription, rather than\
    \ create a Per-Printer\n   subscription whose Job events apply to all jobs.\n"
- title: 17.4.  Security Requirements for Printers
  contents:
  - "17.4.  Security Requirements for Printers\n   For the Get-Notifications operation\
    \ defined in this document, the\n   same Printer conformance requirements apply\
    \ for supporting and using\n   Client Authentication, Server Authentication and\
    \ Operation Privacy as\n   stated in [RFC2910] section 8 for all IPP operations.\n"
- title: 17.5.  Security Requirements for Clients
  contents:
  - "17.5.  Security Requirements for Clients\n   For the Get-Notifications operation\
    \ defined in this document, the\n   same client conformance requirements apply\
    \ for supporting and using\n   Client Authentication, Server Authentication, and\
    \ Operation Privacy\n   as stated in [RFC2910], section 8, for all IPP operations.\n"
- title: 18.  Description of Base IPP Documents (Informative)
  contents:
  - "18.  Description of Base IPP Documents (Informative)\n   The base set of IPP\
    \ documents includes the following:\n     Design Goals for an Internet Printing\
    \ Protocol [RFC2567]\n     Rationale for the Structure and Model and Protocol\
    \ for the Internet\n       Printing Protocol [RFC2568]\n     Internet Printing\
    \ Protocol/1.1: Model and Semantics [RFC2911]\n     Internet Printing Protocol/1.1:\
    \ Encoding and Transport [RFC2910]\n     Internet Printing Protocol/1.1: Implementer's\
    \ Guide [RFC3196]\n     Mapping between LPD and IPP Protocols [RFC2569]\n   \"\
    Design Goals for an Internet Printing Protocol\" takes a broad look\n   at distributed\
    \ printing functionality, and it enumerates real-life\n   scenarios that help\
    \ clarify the features that need to be included in\n   a printing protocol for\
    \ the Internet.  It identifies requirements for\n   three types of users: end\
    \ users, operators, and administrators.  It\n   calls out a subset of end user\
    \ requirements that are satisfied in\n   IPP/1.0 [RFC2566, RFC2565].  A few OPTIONAL\
    \ operator operations have\n   been added to IPP/1.1.\n   \"Rationale for the\
    \ Structure and Model and Protocol for the Internet\n   Printing Protocol\" describes\
    \ IPP from a high-level view, defines a\n   roadmap for the various documents\
    \ that form the suite of IPP\n   specification documents, and gives background\
    \ and rationale for the\n   IETF working group's major decisions.\n   \"Internet\
    \ Printing Protocol/1.1: Model and Semantics\" describes a\n   simplified model\
    \ with abstract objects, their attributes, and their\n   operations that are independent\
    \ of encoding and transport.  It\n   introduces a Printer and a Job object.  The\
    \ Job object optionally\n   supports multiple documents per Job.  It also addresses\
    \ security,\n   internationalization, and directory issues.\n   \"Internet Printing\
    \ Protocol/1.1: Encoding and Transport\" is a formal\n   mapping of the abstract\
    \ operations and attributes defined in the\n   model document onto HTTP/1.1 [RFC2616].\
    \  It defines the encoding\n   rules for a new Internet MIME media type called\
    \ \"application/ipp\".\n   This document also defines the rules for transporting\
    \ over HTTP a\n   message body whose Content-Type is \"application/ipp\".  This\
    \ document\n   defines the 'ipp' scheme for identifying IPP printers and jobs.\n\
    \   \"Internet Printing Protocol/1.1: Implementer's Guide\" gives insight\n  \
    \ and advice to implementers of IPP clients and IPP objects.  It is\n   intended\
    \ to help them understand IPP/1.1 and some of the\n   considerations that may\
    \ assist them in the design of their client\n   and/or IPP object implementations.\
    \  For example, a typical order of\n   processing requests is given, including\
    \ error checking.  Motivation\n   for some of the specification decisions is also\
    \ included.\n   \"Mapping between LPD and IPP Protocols\" gives some advice to\n\
    \   implementers of gateways between IPP and LPD (Line Printer Daemon)\n   implementations.\n"
- title: 19.  Contributors
  contents:
  - "19.  Contributors\n   Carl Kugler and Harry Lewis contributed the basic idea\
    \ of in-band\n   \"smart polling\" coupled with multiple responses for a single\n\
    \   operation on the same connection, with one response for each event as\n  \
    \ it occurs.  Without their continual persuasion, we would not have\n   arrived\
    \ at this Delivery Method specification and would not have been\n   able to agree\
    \ on a single REQUIRED Delivery Method for IPP.\n   Carl Kugler\n   IBM Corporation\n\
    \   6300 Diagonal Highway\n   Boulder, CO 80301\n   EMail: kugler@us.ibm.com\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Robert Herriot\n   Global Workflow Solutions\n   706 Colorado\
    \ Ave.\n   Palo Alto, CA 94303\n   Phone: 650-324-4000\n   EMail: bob@herriot.com\n\
    \   Thomas N. Hastings\n   Xerox Corporation\n   710 S Aviation Blvd.  ESAE 242\n\
    \   El Segundo CA 90245\n   Phone: 310-333-6413\n   Fax:   310-333-6342\n   EMail:\
    \ hastings@cp10.es.xerox.com\n   Harry Lewis\n   IBM Corporation\n   6300 Diagonal\
    \ Hwy\n   Boulder, CO 80301\n   Phone: (303) 924-5337\n   EMail: harryl@us.ibm.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
