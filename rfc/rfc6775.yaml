- title: __initial_text__
  contents:
  - "    Neighbor Discovery Optimization for IPv6 over Low-Power Wireless\n      \
    \             Personal Area Networks (6LoWPANs)\n"
- title: Abstract
  contents:
  - "Abstract\n   The IETF work in IPv6 over Low-power Wireless Personal Area Network\n\
    \   (6LoWPAN) defines 6LoWPANs such as IEEE 802.15.4.  This and other\n   similar\
    \ link technologies have limited or no usage of multicast\n   signaling due to\
    \ energy conservation.  In addition, the wireless\n   network may not strictly\
    \ follow the traditional concept of IP subnets\n   and IP links.  IPv6 Neighbor\
    \ Discovery was not designed for non-\n   transitive wireless links, as its reliance\
    \ on the traditional IPv6\n   link concept and its heavy use of multicast make\
    \ it inefficient and\n   sometimes impractical in a low-power and lossy network.\
    \  This\n   document describes simple optimizations to IPv6 Neighbor Discovery,\n\
    \   its addressing mechanisms, and duplicate address detection for Low-\n   power\
    \ Wireless Personal Area Networks and similar networks.  The\n   document thus\
    \ updates RFC 4944 to specify the use of the\n   optimizations defined here.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6775.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \      1.1. The Shortcomings of IPv6 Neighbor Discovery ................5\n  \
    \    1.2. Applicability ..............................................6\n    \
    \  1.3. Goals and Assumptions ......................................7\n      1.4.\
    \ Substitutable Features .....................................8\n   2. Terminology\
    \ .....................................................9\n   3. Protocol Overview\
    \ ..............................................11\n      3.1. Extensions to RFC\
    \ 4861 ....................................11\n      3.2. Address Assignment ........................................12\n\
    \      3.3. Host-to-Router Interaction ................................13\n  \
    \    3.4. Router-to-Router Interaction ..............................14\n    \
    \  3.5. Neighbor Cache Management .................................14\n   4. New\
    \ Neighbor Discovery Options and Messages ....................15\n      4.1. Address\
    \ Registration Option ...............................15\n      4.2. 6LoWPAN Context\
    \ Option ....................................17\n      4.3. Authoritative Border\
    \ Router Option ........................19\n      4.4. Duplicate Address Messages\
    \ ................................20\n   5. Host Behavior ..................................................22\n\
    \      5.1. Forbidden Actions .........................................22\n  \
    \    5.2. Interface Initialization ..................................22\n    \
    \  5.3. Sending a Router Solicitation .............................23\n      5.4.\
    \ Processing a Router Advertisement .........................23\n           5.4.1.\
    \ Address Configuration ..............................23\n           5.4.2. Storing\
    \ Contexts ...................................24\n           5.4.3. Maintaining\
    \ Prefix and Context Information .........24\n      5.5. Registration and Neighbor\
    \ Unreachability Detection ........25\n           5.5.1. Sending a Neighbor Solicitation\
    \ ....................25\n           5.5.2. Processing a Neighbor Advertisement\
    \ ................25\n           5.5.3. Recovering from Failures ...........................26\n\
    \      5.6. Next-Hop Determination ....................................26\n  \
    \    5.7. Address Resolution ........................................27\n    \
    \  5.8. Sleeping ..................................................27\n      \
    \     5.8.1. Picking an Appropriate Registration Lifetime .......27\n        \
    \   5.8.2. Behavior on Wakeup .................................28\n   6. Router\
    \ Behavior for 6LRs and 6LBRs .............................28\n      6.1. Forbidden\
    \ Actions .........................................28\n      6.2. Interface Initialization\
    \ ..................................29\n      6.3. Processing a Router Solicitation\
    \ ..........................29\n      6.4. Periodic Router Advertisements ............................30\n\
    \      6.5. Processing a Neighbor Solicitation ........................30\n  \
    \         6.5.1. Checking for Duplicates ............................30\n    \
    \       6.5.2. Returning Address Registration Errors ..............31\n      \
    \     6.5.3. Updating the Neighbor Cache ........................31\n        \
    \   6.5.4. Next-Hop Determination .............................32\n          \
    \ 6.5.5. Address Resolution between Routers .................32\n   7. Border\
    \ Router Behavior .........................................32\n      7.1. Prefix\
    \ Determination ......................................33\n      7.2. Context Configuration\
    \ and Management ......................33\n   8. Substitutable Feature Behavior\
    \ .................................34\n      8.1. Multihop Prefix and Context\
    \ Distribution ..................34\n           8.1.1. 6LBRs Sending Router Advertisements\
    \ ................35\n           8.1.2. Routers Sending Router Solicitations ...............35\n\
    \           8.1.3. Routers Processing Router Advertisements ...........35\n  \
    \         8.1.4. Storing the Information ............................36\n    \
    \       8.1.5. Sending Router Advertisements ......................36\n      8.2.\
    \ Multihop Duplicate Address Detection ......................37\n           8.2.1.\
    \ Message Validation for DAR and DAC .................38\n           8.2.2. Conceptual\
    \ Data Structures .........................39\n           8.2.3. 6LR Sending a\
    \ Duplicate Address Request ............39\n           8.2.4. 6LBR Receiving a\
    \ Duplicate Address Request .........39\n           8.2.5. Processing a Duplicate\
    \ Address Confirmation ........40\n           8.2.6. Recovering from Failures\
    \ ...........................40\n   9. Protocol Constants .............................................41\n\
    \   10. Examples ......................................................42\n  \
    \    10.1. Message Examples .........................................42\n    \
    \  10.2. Host Bootstrapping Example ...............................43\n      \
    \     10.2.1. Host Bootstrapping Messages .......................45\n      10.3.\
    \ Router Interaction Example ...............................46\n           10.3.1.\
    \ Bootstrapping a Router ............................46\n           10.3.2. Updating\
    \ the Neighbor Cache .......................47\n   11. Security Considerations\
    \ .......................................47\n   12. IANA Considerations ...........................................48\n\
    \   13. Interaction with Other Neighbor Discovery Extensions ..........49\n  \
    \ 14. Guidelines for New Features ...................................49\n   15.\
    \ Acknowledgments ...............................................52\n   16. References\
    \ ....................................................52\n      16.1. Normative\
    \ References .....................................52\n      16.2. Informative\
    \ References ...................................53\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The IPv6-over-IEEE 802.15.4 [RFC4944] document specifies\
    \ how IPv6 is\n   carried over an IEEE 802.15.4 network with the help of an adaptation\n\
    \   layer that sits between the Media Access Control (MAC) layer and the\n   IP\
    \ network layer.  A link in a Low-power Wireless Personal Area\n   Network (LoWPAN)\
    \ is characterized as lossy, low-power, low-bit-rate,\n   short-range; with many\
    \ nodes saving energy with long sleep periods.\n   Multicast as used in IPv6 Neighbor\
    \ Discovery (ND) [RFC4861] is not\n   desirable in such a wireless low-power and\
    \ lossy network.  Moreover,\n   LoWPAN links are asymmetric and non-transitive\
    \ in nature.  A LoWPAN\n   is potentially composed of a large number of overlapping\
    \ radio\n   ranges.  Although a given radio range has broadcast capabilities,\
    \ the\n   aggregation of these is a complex Non-Broadcast Multiple Access\n  \
    \ (NBMA) [RFC2491] structure with generally no LoWPAN-wide multicast\n   capabilities.\
    \  Link-local scope is in reality defined by reachability\n   and radio strength.\
    \  Thus, we can consider a LoWPAN to be made up of\n   links with undetermined\
    \ connectivity properties as in [RFC5889],\n   along with the corresponding address\
    \ model assumptions defined\n   therein.\n   This specification introduces the\
    \ following optimizations to IPv6\n   Neighbor Discovery [RFC4861] specifically\
    \ aimed at low-power and\n   lossy networks such as LoWPANs:\n   o  Host-initiated\
    \ interactions to allow for sleeping hosts.\n   o  Elimination of multicast-based\
    \ address resolution for hosts.\n   o  A host address registration feature using\
    \ a new option in unicast\n      Neighbor Solicitation (NS) and Neighbor Advertisement\
    \ (NA)\n      messages.\n   o  A new Neighbor Discovery option to distribute 6LoWPAN\
    \ header\n      compression context to hosts.\n   o  Multihop distribution of\
    \ prefix and 6LoWPAN header compression\n      context.\n   o  Multihop Duplicate\
    \ Address Detection (DAD), which uses two new\n      ICMPv6 message types.\n \
    \  The two multihop items can be substituted by a routing protocol\n   mechanism\
    \ if that is desired; see Section 1.4.\n   The document defines three new ICMPv6\
    \ message options: the Address\n   Registration Option (ARO), the Authoritative\
    \ Border Router Option\n   (ABRO), and the 6LoWPAN Context Option (6CO).  It also\
    \ defines two\n   new ICMPv6 message types: the Duplicate Address Request (DAR)\
    \ and the\n   Duplicate Address Confirmation (DAC).\n"
- title: 1.1.  The Shortcomings of IPv6 Neighbor Discovery
  contents:
  - "1.1.  The Shortcomings of IPv6 Neighbor Discovery\n   IPv6 Neighbor Discovery\
    \ [RFC4861] provides several important\n   mechanisms used for router discovery,\
    \ address resolution, Duplicate\n   Address Detection, and Redirect messages,\
    \ along with prefix and\n   parameter discovery.\n   Following power-on and initialization\
    \ of the network in IPv6 Ethernet\n   networks, a node joins the solicited-node\
    \ multicast address on the\n   interface and then performs Duplicate Address Detection\
    \ (DAD) for the\n   acquired link-local address by sending a solicited-node multicast\n\
    \   message to the link.  After that, it sends multicast messages to the\n   all-routers\
    \ multicast address to solicit Router Advertisements (RAs).\n   If the host receives\
    \ a valid RA with the A (autonomous address\n   configuration) flag, it autoconfigures\
    \ the IPv6 address with the\n   advertised prefix in the RA message.  Besides\
    \ this, the IPv6 routers\n   usually send RAs periodically on the network.  RAs\
    \ are sent to the\n   all-nodes multicast address.  Nodes send Neighbor Solicitation/\n\
    \   Neighbor Advertisement messages to resolve the IPv6 address of the\n   destination\
    \ on the link.  The Neighbor Solicitation messages used for\n   address resolution\
    \ are multicast.  The Duplicate Address Detection\n   procedure and the use of\
    \ periodic Router Advertisement messages\n   assume that the nodes are powered\
    \ on and reachable most of the time.\n   In Neighbor Discovery, the routers find\
    \ the hosts by assuming that a\n   subnet prefix maps to one broadcast domain,\
    \ and then they multicast\n   Neighbor Solicitation messages to find the host\
    \ and its link-layer\n   address.  Furthermore, the DAD use of multicast assumes\
    \ that all\n   hosts that autoconfigure IPv6 addresses from the same prefix can\
    \ be\n   reached using link-local multicast messages.\n   Note that the L (on-link)\
    \ bit in the Prefix Information Option (PIO)\n   can be set to zero in Neighbor\
    \ Discovery, which makes the host not\n   use multicast Neighbor Solicitation\
    \ (NS) messages for address\n   resolution of other hosts, but routers still use\
    \ multicast NS\n   messages to find the hosts.\n   Due to the lossy nature of\
    \ wireless communication and a changing\n   radio environment, the IPv6-link node-set\
    \ may change due to external\n   physical factors.  Thus, the link is often unstable,\
    \ and the nodes\n   appear to be moving without necessarily moving physically.\n\
    \   A LoWPAN can use two types of link-layer addresses: 16-bit short\n   addresses\
    \ and 64-bit unique addresses as defined in [RFC4944].\n   Moreover, the available\
    \ link-layer payload size is on the order of\n   less than 100 bytes; thus, header\
    \ compression is very useful.\n   Considering the above characteristics in a LoWPAN,\
    \ and the IPv6\n   Neighbor Discovery [RFC4861] protocol design, some optimizations\
    \ and\n   extensions to Neighbor Discovery are useful for the wide deployment\n\
    \   of IPv6 over low-power and lossy networks (example: 6LoWPAN and other\n  \
    \ homogeneous low-power networks).\n"
- title: 1.2.  Applicability
  contents:
  - "1.2.  Applicability\n   In its Section 1, [RFC4861] foresees a document that\
    \ covers operating\n   IP over a particular link type and defines an exception\
    \ to the\n   otherwise general applicability of unmodified [RFC4861].  The present\n\
    \   specification improves the usage of IPv6 Neighbor Discovery for\n   LoWPANs\
    \ in order to save energy and processing power of such nodes.\n   This document\
    \ thus updates [RFC4944] to specify the use of the\n   optimizations defined here.\n\
    \   The applicability of this specification is limited to LoWPANs where\n   all\
    \ nodes on the subnet implement these optimizations in a\n   homogeneous way.\
    \  Although it is noted that some of these\n   optimizations may be useful outside\
    \ of 6LoWPANs, for example, in\n   general IPv6 low-power and lossy networks and\
    \ possibly even in\n   combination with [RFC4861], the usage of such combinations\
    \ is out of\n   scope of this document.\n   In this document, we specify a set\
    \ of behaviors between hosts and\n   routers in LoWPANs.  An implementation that\
    \ adheres to this document\n   MUST implement those behaviors.  The document also\
    \ specifies a set of\n   behaviors (multihop prefix or context dissemination and,\
    \ separately,\n   multihop Duplicate Address Detection) that are needed in route-over\n\
    \   configurations.  An implementation of this specification MUST support\n  \
    \ those pieces, unless the implementation supports some alternative\n   (\"substitute\"\
    ) from some other specification.\n   The optimizations described in this document\
    \ apply to different\n   topologies.  They are most useful for route-over and\
    \ mesh-under\n   configurations in Mesh topologies.  However, Star topology\n\
    \   configurations will also benefit from the optimizations due to\n   reduced\
    \ signaling, robust handling of the non-transitive link, and\n   header compression\
    \ context information.\n"
- title: 1.3.  Goals and Assumptions
  contents:
  - "1.3.  Goals and Assumptions\n   The document has the following main goals and\
    \ assumptions.\n   Goals:\n   o  Optimize Neighbor Discovery with a mechanism\
    \ that is minimal yet\n      sufficient for the operation in both mesh-under and\
    \ route-over\n      configurations.\n   o  Minimize signaling by avoiding the\
    \ use of multicast flooding and\n      reducing the use of link-scope multicast\
    \ messages.\n   o  Optimize the interfaces between hosts and their default routers.\n\
    \   o  Provide support for sleeping hosts.\n   o  Disseminate context information\
    \ to hosts as needed by 6LoWPAN\n      header compression [RFC6282].\n   o  Disseminate\
    \ context information and prefix information from the\n      border to all routers\
    \ in a LoWPAN.\n   o  Provide a multihop Duplicate Address Detection mechanism\
    \ suitable\n      for route-over LoWPANs.\n   Assumptions:\n   o  64-bit Extended\
    \ Unique Identifier (EUI-64) [EUI64] addresses are\n      globally unique, and\
    \ the LoWPAN is homogeneous.\n   o  All nodes in the network have an EUI-64 Interface\
    \ ID in order to\n      do address autoconfiguration and detect duplicate addresses.\n\
    \   o  The link-layer technology is assumed to be low-power and lossy,\n     \
    \ exhibiting undetermined connectivity, such as IEEE 802.15.4\n      [RFC4944].\
    \  However, the address registration mechanism might be\n      useful for other\
    \ link-layer technologies.\n   o  A 6LoWPAN is configured to share one or more\
    \ global IPv6 address\n      prefixes to enable hosts to move between routers\
    \ in the LoWPAN\n      without changing their IPv6 addresses.\n   o  When using\
    \ the multihop DAD mechanism (Section 8.2), each 6LoWPAN\n      Router (6LR) registers\
    \ with all the 6LoWPAN Border Routers (6LBRs)\n      available in the LoWPAN.\n\
    \   o  If IEEE 802.15.4 16-bit short addresses are used, then some\n      technique\
    \ is used to ensure the uniqueness of those link-layer\n      addresses.  That\
    \ could be done using DHCPv6, Address Registration\n      Option-based Duplicate\
    \ Address Detection (specified in\n      Section 8.2), or other techniques outside\
    \ of the scope of this\n      document.\n   o  In order to preserve the uniqueness\
    \ of addresses (see Section 5.4\n      of [RFC4862]) not derived from an EUI-64,\
    \ they must be either\n      assigned or checked for duplicates in the same way\
    \ throughout the\n      LoWPAN.  This can be done using DHCPv6 for assignment\
    \ and/or using\n      the Duplicate Address Detection mechanism specified in Section\
    \ 8.2\n      (or any other protocols developed for that purpose).\n   o  In order\
    \ for 6LoWPAN header compression [RFC6282] to operate\n      correctly, the compression\
    \ context must match for all the hosts,\n      6LRs, and 6LBRs that can send,\
    \ receive, or forward a given packet.\n      If Section 8.1 is used to distribute\
    \ context information, this\n      implies that all the 6LBRs must coordinate\
    \ the context information\n      they distribute within a single LoWPAN.\n   o\
    \  This specification describes the operation of ND within a single\n      LoWPAN.\
    \  The participation of a node in multiple LoWPANs\n      simultaneously may be\
    \ possible but is out of scope of this\n      document.\n   o  Since the LoWPAN\
    \ shares its prefix(es) throughout the network,\n      mobility of nodes within\
    \ the LoWPAN is transparent.  Inter-LoWPAN\n      mobility is out of scope of\
    \ this document.\n"
- title: 1.4.  Substitutable Features
  contents:
  - "1.4.  Substitutable Features\n   This document defines the optimization of Neighbor\
    \ Discovery messages\n   for the host-router interface and introduces two new\
    \ mechanisms in a\n   route-over topology.\n   Unless specified otherwise (in\
    \ a document that defines a routing\n   protocol that is used in a 6LoWPAN), this\
    \ document applies to\n   networks with any routing protocol.  However, because\
    \ the routing\n   protocol may provide good alternate mechanisms, this document\
    \ defines\n   certain features as \"substitutable\", meaning they can be substituted\n\
    \   by a routing protocol specification that provides mechanisms\n   achieving\
    \ the same overall effect.\n   The features that are substitutable (individually\
    \ or in a group):\n   o  Multihop distribution of prefix and 6LoWPAN header compression\n\
    \      context\n   o  Multihop Duplicate Address Detection\n   Thus, multihop\
    \ prefix distribution (the ABRO) and the 6LoWPAN Context\n   Option (6CO) for\
    \ distributing header compression contexts go hand in\n   hand.  If substitution\
    \ is intended for one of them, then both of them\n   MUST be substituted.\n  \
    \ Guidelines for feature implementation and deployment are provided in\n   Section\
    \ 14.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n\
    \   This specification requires readers to be familiar with all the terms\n  \
    \ and concepts that are discussed in \"Neighbor Discovery for IP\n   version 6\
    \ (IPv6)\" [RFC4861], \"IPv6 Stateless Address\n   Autoconfiguration\" [RFC4862],\
    \ \"IPv6 over Low-Power Wireless Personal\n   Area Networks (6LoWPANs): Overview,\
    \ Assumptions, Problem Statement,\n   and Goals\" [RFC4919], \"Transmission of\
    \ IPv6 Packets over IEEE\n   802.15.4 Networks\" [RFC4944], and \"IP Addressing\
    \ Model in Ad Hoc\n   Networks\" [RFC5889].\n   This specification makes extensive\
    \ use of the same terminology\n   defined in [RFC4861], unless otherwise defined\
    \ below.\n   6LoWPAN link:\n      A wireless link determined by single IP hop\
    \ reachability of\n      neighboring nodes.  These are considered links with undetermined\n\
    \      connectivity properties as in [RFC5889].\n   6LoWPAN Node (6LN):\n    \
    \  A 6LoWPAN node is any host or router participating in a LoWPAN.\n      This\
    \ term is used when referring to situations in which either a\n      host or router\
    \ can play the role described.\n   6LoWPAN Router (6LR):\n      An intermediate\
    \ router in the LoWPAN that is able to send and\n      receive Router Advertisements\
    \ (RAs) and Router Solicitations (RSs)\n      as well as forward and route IPv6\
    \ packets.  6LoWPAN routers are\n      present only in route-over topologies.\n\
    \   6LoWPAN Border Router (6LBR):\n      A border router located at the junction\
    \ of separate 6LoWPAN\n      networks or between a 6LoWPAN network and another\
    \ IP network.\n      There may be one or more 6LBRs at the 6LoWPAN network boundary.\
    \  A\n      6LBR is the responsible authority for IPv6 prefix propagation for\n\
    \      the 6LoWPAN network it is serving.  An isolated LoWPAN also\n      contains\
    \ a 6LBR in the network, which provides the prefix(es) for\n      the isolated\
    \ network.\n   Router:\n      Either a 6LR or a 6LBR.  Note that nothing in this\
    \ document\n      precludes a node being a router on some interfaces and a host\
    \ on\n      other interfaces as allowed by [RFC2460].\n   Mesh-under:\n      A\
    \ topology where nodes are connected to a 6LBR through a mesh\n      using link-layer\
    \ forwarding.  Thus, in a mesh-under configuration,\n      all IPv6 hosts in a\
    \ LoWPAN are only one IP hop away from the 6LBR.\n      This topology simulates\
    \ the typical IP-subnet topology with one\n      router with multiple nodes in\
    \ the same subnet.\n   Route-over:\n      A topology where hosts are connected\
    \ to the 6LBR through the use\n      of intermediate layer-3 (IP) routing.  Here,\
    \ hosts are typically\n      multiple IP hops away from a 6LBR.  The route-over\
    \ topology\n      typically consists of a 6LBR, a set of 6LRs, and hosts.\n  \
    \ Non-transitive link:\n      A link that exhibits asymmetric reachability as\
    \ defined in\n      Section 2.2 of [RFC4861].\n   IP-over-foo document:\n    \
    \  A specification that covers operating IP over a particular link\n      type,\
    \ for example, [RFC4944] \"Transmission of IPv6 Packets over\n      IEEE 802.15.4\
    \ Networks\".\n   Header compression context:\n      Address information shared\
    \ across a LoWPAN and used by 6LoWPAN\n      header compression [RFC6282] to enable\
    \ the elision of information\n      that would otherwise be sent repeatedly. \
    \ In a \"context\", a\n      (potentially partial) address is associated with\
    \ a Context\n      Identifier (CID), which is then used in header compression\
    \ as a\n      shortcut for (parts of) a source or destination address.\n   Registration:\n\
    \      The process during which a LoWPAN node sends a Neighbor\n      Solicitation\
    \ message with an Address Registration Option to a\n      router creating a Neighbor\
    \ Cache Entry (NCE) for the LoWPAN node\n      with a specific timeout.  Thus,\
    \ for 6LoWPAN routers, the Neighbor\n      Cache doesn't behave like a cache.\
    \  Instead, it behaves as a\n      registry of all the host addresses that are\
    \ attached to the\n      router.\n"
- title: 3.  Protocol Overview
  contents:
  - "3.  Protocol Overview\n   These Neighbor Discovery optimizations are applicable\
    \ to both\n   mesh-under and route-over configurations.  In a mesh-under\n   configuration,\
    \ only 6LoWPAN Border Routers and hosts exist; there are\n   no 6LoWPAN routers\
    \ in mesh-under topologies.\n   The most important part of the optimizations is\
    \ the evolved host-to-\n   router interaction that allows for sleeping nodes and\
    \ avoids using\n   multicast Neighbor Discovery messages except for the case of\
    \ a host\n   finding an initial set of default routers, and redoing such\n   determination\
    \ when that set of routers have become unreachable.\n   The protocol also provides\
    \ for header compression [RFC6282] by\n   carrying header compression information\
    \ in a new option in Router\n   Advertisement messages.\n   In addition, there\
    \ are separate mechanisms that can be used between\n   6LRs and 6LBRs to perform\
    \ multihop Duplicate Address Detection and\n   distribution of the prefix and\
    \ compression context information from\n   the 6LBRs to all the 6LRs, which in\
    \ turn use normal Neighbor\n   Discovery mechanisms to convey this information\
    \ to the hosts.\n   The protocol is designed so that the host-to-router interaction\
    \ is\n   not affected by the configuration of the 6LoWPAN; the host-to-router\n\
    \   interaction is the same in a mesh-under and route-over configuration.\n"
- title: 3.1.  Extensions to RFC 4861
  contents:
  - "3.1.  Extensions to RFC 4861\n   This document specifies the following optimizations\
    \ and extensions to\n   IPv6 Neighbor Discovery [RFC4861]:\n   o  Host-initiated\
    \ refresh of Router Advertisement information.  This\n      removes the need for\
    \ periodic or unsolicited Router Advertisements\n      from routers to hosts.\n\
    \   o  No Duplicate Address Detection (DAD) is performed if EUI-64-based\n   \
    \   IPv6 addresses are used (as these addresses are assumed to be\n      globally\
    \ unique).\n   o  DAD is optional if DHCPv6 is used to assign addresses.\n   o\
    \  A new address registration mechanism using a new Address\n      Registration\
    \ Option between hosts and routers.  This removes the\n      need for routers\
    \ to use multicast Neighbor Solicitations to find\n      hosts and supports sleeping\
    \ hosts.  This also enables the same\n      IPv6 address prefix(es) to be used\
    \ across a route-over 6LoWPAN.\n      It provides the host-to-router interface\
    \ for Duplicate Address\n      Detection.\n   o  A new Router Advertisement option,\
    \ the 6LoWPAN Context Option, for\n      context information used by 6LoWPAN header\
    \ compression.\n   o  A new mechanism to perform Duplicate Address Detection across\
    \ a\n      route-over 6LoWPAN using the new Duplicate Address Request and\n  \
    \    Duplicate Address Confirmation messages.\n   o  New mechanisms to distribute\
    \ prefixes and context information\n      across a route-over network that uses\
    \ a new Authoritative Border\n      Router Option to control the flooding of configuration\
    \ changes.\n   o  A few new default protocol constants are introduced, and some\n\
    \      existing Neighbor Discovery protocol constants are tuned.\n"
- title: 3.2.  Address Assignment
  contents:
  - "3.2.  Address Assignment\n   Hosts in a 6LoWPAN configure their IPv6 addresses\
    \ as specified in\n   [RFC4861] and [RFC4862] based on the information received\
    \ in Router\n   Advertisement messages.  The use of the M (managed address\n \
    \  configuration) flag in this optimization is, however, more\n   restrictive\
    \ than in [RFC4861].  When the M flag is set, a host is\n   assumed to use DHCPv6\
    \ to assign any non-EUI-64 addresses.  When the M\n   flag is not set, the nodes\
    \ in the LoWPAN support Duplicate Address\n   Detection; thus, a host can then\
    \ safely use the address registration\n   mechanism to check non-EUI-64 addresses\
    \ for uniqueness.\n   6LRs MAY use the same mechanisms to configure their IPv6\
    \ addresses.\n   The 6LBRs are responsible for managing the prefix(es) assigned\
    \ to the\n   6LoWPAN, using manual configuration, DHCPv6 Prefix Delegation\n \
    \  [RFC3633], or other mechanisms.  In an isolated LoWPAN, a Unique\n   Local\
    \ Address (ULA) [RFC4193] prefix SHOULD be generated by the 6LBR.\n"
- title: 3.3.  Host-to-Router Interaction
  contents:
  - "3.3.  Host-to-Router Interaction\n   A host sends Router Solicitation messages\
    \ at startup and also when\n   the Neighbor Unreachability Detection (NUD) of\
    \ one of its default\n   routers fails.\n   Hosts receive Router Advertisement\
    \ messages typically containing the\n   Authoritative Border Router Option (ABRO)\
    \ and may optionally contain\n   one or more 6LoWPAN Context Options (6COs) in\
    \ addition to the\n   existing Prefix Information Options (PIOs) as described\
    \ in [RFC4861].\n   When a host has configured a non-link-local IPv6 address,\
    \ it\n   registers that address with one or more of its default routers using\n\
    \   the Address Registration Option (ARO) in an NS message.  The host\n   chooses\
    \ a lifetime of the registration and repeats the ARO\n   periodically (before\
    \ the lifetime runs out) to maintain the\n   registration.  The lifetime should\
    \ be chosen in such a way as to\n   maintain the registration even while a host\
    \ is sleeping.  Likewise,\n   mobile nodes that often change their point of attachment\
    \ should use a\n   suitably short lifetime.  See Section 5.5 for registration\
    \ details\n   and Section 9 for protocol constants.\n   The registration fails\
    \ when an ARO is returned to the host with a\n   non-zero Status.  One reason\
    \ may be that the router determines that\n   the IPv6 address is already used\
    \ by another host, i.e., is used by a\n   host with a different EUI-64.  This\
    \ can be used to support\n   non-EUI-64-based addresses such as temporary IPv6\
    \ addresses [RFC4941]\n   or addresses based on an Interface ID that is an IEEE\
    \ 802.15.4 16-bit\n   short address.  Failure can also occur if the Neighbor Cache\
    \ on that\n   router is full.\n   The re-registration of an address can be combined\
    \ with Neighbor\n   Unreachability Detection (NUD) of the router, since both use\
    \ unicast\n   Neighbor Solicitation messages.  This makes things efficient when\
    \ a\n   host wakes up to send a packet and needs to both perform NUD to check\n\
    \   that the router is still reachable and refresh its registration with\n   the\
    \ router.\n   The response to an address registration might not be immediate,\
    \ since\n   in route-over configurations the 6LR might perform Duplicate Address\n\
    \   Detection against the 6LBR.  A host retransmits the Address\n   Registration\
    \ Option until it is acknowledged by the receipt of an\n   Address Registration\
    \ Option.\n   As part of the optimizations, address resolution is not performed\
    \ by\n   multicasting Neighbor Solicitation messages as in [RFC4861].\n   Instead,\
    \ the routers maintain Neighbor Cache Entries for all\n   registered IPv6 addresses.\
    \  If the address is not in the Neighbor\n   Cache in the router, then the address\
    \ either doesn't exist, is\n   assigned to a host attached to some other router\
    \ in the 6LoWPAN, or\n   is external to the 6LoWPAN.  In a route-over configuration,\
    \ the\n   routing protocol is used to route such packets toward the\n   destination.\n"
- title: 3.4.  Router-to-Router Interaction
  contents:
  - "3.4.  Router-to-Router Interaction\n   The new router-to-router interaction is\
    \ only for the route-over\n   configuration where 6LRs are present.  See also\
    \ Section 1.4.\n   6LRs MUST act like a host during system startup and prefix\n\
    \   configuration by sending Router Solicitation messages and\n   autoconfiguring\
    \ their IPv6 addresses, unlike routers in [RFC4861].\n   When multihop prefix\
    \ and context dissemination are used, then the\n   6LRs store the ABRO, 6CO, and\
    \ prefix information received (directly\n   or indirectly) from the 6LBRs and\
    \ redistribute this information in\n   the Router Advertisement they send to other\
    \ 6LRs or send to hosts in\n   response to a Router Solicitation.  There is a\
    \ Version Number field\n   in the ABRO (see Section 4.3), which is used to limit\
    \ the flooding of\n   updated information between the 6LRs.\n   A 6LR can perform\
    \ Duplicate Address Detection against one or more\n   6LBRs using the new Duplicate\
    \ Address Request (DAR) and Duplicate\n   Address Confirmation (DAC) messages,\
    \ which carry the information from\n   the Address Registration Option.  The DAR\
    \ and DAC messages will be\n   forwarded between the 6LR and 6LBRs; thus, the\
    \ [RFC4861] rule for\n   checking hop limit=255 does not apply to the DAR and\
    \ DAC messages.\n   Those multihop DAD messages MUST NOT modify any Neighbor Cache\n\
    \   Entries on the routers, since we do not have the security benefits\n   provided\
    \ by the hop limit=255 check.\n"
- title: 3.5.  Neighbor Cache Management
  contents:
  - "3.5.  Neighbor Cache Management\n   The use of explicit registrations with lifetimes,\
    \ plus the desire to\n   not multicast Neighbor Solicitation messages for hosts,\
    \ imply that we\n   manage the Neighbor Cache Entries (NCEs) slightly differently\
    \ than in\n   [RFC4861].  This results in three different types of NCEs, and the\n\
    \   types specify how those entries can be removed:\n   Garbage-collectible: \
    \ Entries that are subject to the normal rules in\n                         [RFC4861]\
    \ that allow for garbage collection\n                         when low on memory.\n\
    \   Registered:           Entries that have an explicit registered\n         \
    \                lifetime and are kept until this lifetime\n                 \
    \        expires or they are explicitly unregistered.\n   Tentative:         \
    \   Entries that are temporary with a short\n                         lifetime,\
    \ which typically get converted to\n                         Registered entries.\n\
    \   Note that the type of the NCE is orthogonal to the states specified\n   in\
    \ [RFC4861].\n   When a host interacts with a router by sending Router Solicitations,\n\
    \   this results in a Tentative NCE.  Once a router has successfully had\n   a\
    \ node register with it, the result is a Registered NCE.  When\n   routers send\
    \ RAs to hosts, and when routers receive RA messages or\n   receive multicast\
    \ NS messages from other routers, the result is\n   Garbage-collectible NCEs.\
    \  There can only be one kind of NCE for an\n   IP address at a time.\n   Neighbor\
    \ Cache Entries on routers can additionally be added or\n   deleted by a routing\
    \ protocol used in the 6LoWPAN.  This is useful if\n   the routing protocol carries\
    \ the link-layer addresses of the\n   neighboring routers.  Depending on the details\
    \ of such routing\n   protocols, such NCEs could be either Registered or\n   Garbage-collectible.\n"
- title: 4.  New Neighbor Discovery Options and Messages
  contents:
  - "4.  New Neighbor Discovery Options and Messages\n   This section defines new\
    \ Neighbor Discovery message options used by\n   this specification.  The Address\
    \ Registration Option is used by\n   hosts, whereas the Authoritative Border Router\
    \ Option and 6LoWPAN\n   Context Option are used in the substitutable router-to-router\n\
    \   interaction.  This section also defines the new router-to-router\n   Duplicate\
    \ Address Request and Duplicate Address Confirmation\n   messages.\n"
- title: 4.1.  Address Registration Option
  contents:
  - "4.1.  Address Registration Option\n   The routers need to know the set of host\
    \ IP addresses that are\n   directly reachable and their corresponding link-layer\
    \ addresses.\n   This needs to be maintained as the radio reachability changes.\
    \  For\n   this purpose, an Address Registration Option (ARO) is introduced,\n\
    \   which can be included in unicast NS messages sent by hosts.  Thus, it\n  \
    \ can be included in the unicast NS messages that a host sends as part\n   of\
    \ NUD to determine that it can still reach a default router.  The\n   ARO is used\
    \ by the receiving router to reliably maintain its Neighbor\n   Cache.  The same\
    \ option is included in corresponding NA messages with\n   a Status field indicating\
    \ the success or failure of the registration.\n   This option is always host initiated.\n\
    \   The information contained in the ARO is also included in the multihop\n  \
    \ DAR and DAC messages used between 6LRs and 6LBRs, but the option\n   itself\
    \ is not used in those messages.\n   The ARO is required for reliability and power\
    \ saving.  The lifetime\n   field provides flexibility to the host to register\
    \ an address that\n   should be usable (continue to be advertised by the 6LR in\
    \ the routing\n   protocol, etc.) during its intended sleep schedule.\n   The\
    \ sender of the NS also includes the EUI-64 [EUI64] of the\n   interface from\
    \ which it is registering an address.  This is used as a\n   unique ID for the\
    \ detection of duplicate addresses.  It is used to\n   tell the difference between\
    \ the same node re-registering its address\n   and a different node (with a different\
    \ EUI-64) registering an address\n   that is already in use by someone else. \
    \ The EUI-64 is also used to\n   deliver an NA carrying an error Status code to\
    \ the EUI-64-based\n   link-local IPv6 address of the host (see Section 6.5.2).\n\
    \   When the ARO is used by hosts, an SLLAO (Source Link-Layer Address\n   Option)\
    \ [RFC4861] MUST be included, and the address that is to be\n   registered MUST\
    \ be the IPv6 source address of the NS message.\n    0                   1   \
    \                2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |   Length = 2  |    Status     |   Reserved    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           Reserved            |     Registration Lifetime     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +  \
    \                          EUI-64                             +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Fields:\n   Type:                   33\n   Length:                 8-bit unsigned\
    \ integer.  The length of the\n                           option in units of 8\
    \ bytes.  Always 2.\n   Status:                 8-bit unsigned integer.  Indicates\
    \ the status\n                           of a registration in the NA response.\
    \  MUST\n                           be set to 0 in NS messages.  See below.\n\
    \   Reserved:               This field is unused.  It MUST be initialized\n  \
    \                         to zero by the sender and MUST be ignored by\n     \
    \                      the receiver.\n   Registration Lifetime:  16-bit unsigned\
    \ integer.  The amount of time\n                           in units of 60 seconds\
    \ that the router should\n                           retain the NCE for the sender\
    \ of the NS that\n                           includes this option.\n   EUI-64:\
    \                 64 bits.  This field is used to uniquely\n                 \
    \          identify the interface of the Registered\n                        \
    \   Address by including the EUI-64 identifier\n                           [EUI64]\
    \ assigned to it unmodified.\n   The Status values used in NAs are:\n        \
    \  +--------+--------------------------------------------+\n          | Status\
    \ |                 Description                |\n          +--------+--------------------------------------------+\n\
    \          |    0   |                   Success                  |\n         \
    \ |    1   |              Duplicate Address             |\n          |    2  \
    \ |             Neighbor Cache Full            |\n          |  3-255 | Allocated\
    \ using Standards Action [RFC5226] |\n          +--------+--------------------------------------------+\n\
    \                                  Table 1\n"
- title: 4.2.  6LoWPAN Context Option
  contents:
  - "4.2.  6LoWPAN Context Option\n   The 6LoWPAN Context Option (6CO) carries prefix\
    \ information for\n   LoWPAN header compression and is similar to the PIO of [RFC4861].\n\
    \   However, the prefixes can be remote as well as local to the LoWPAN,\n   since\
    \ header compression potentially applies to all IPv6 addresses.\n   This option\
    \ allows for the dissemination of multiple contexts\n   identified by a CID for\
    \ use as specified in [RFC6282].  A context may\n   be a prefix of any length\
    \ or an address (/128), and up to 16 6COs may\n   be carried in an RA message.\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |     Length    |Context Length | Res |C|  CID  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |            Reserved           |         Valid Lifetime        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   .                                                               .\n   .  \
    \                     Context Prefix                          .\n   .        \
    \                                                       .\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                  Figure 1: 6LoWPAN Context Option Format\n   Type:         \
    \   34\n   Length:          8-bit unsigned integer.  The length of the option\n\
    \                    (including the Type and Length fields) in units of\n    \
    \                8 bytes.  May be 2 or 3, depending on the length of\n       \
    \             the Context Prefix field.\n   Context Length:  8-bit unsigned integer.\
    \  The number of leading bits\n                    in the Context Prefix field\
    \ that are valid.  The\n                    value ranges from 0 to 128.  If it\
    \ is more than 64,\n                    then the Length MUST be 3.\n   C:    \
    \           1-bit context Compression flag.  This flag indicates\n           \
    \         if the context is valid for use in compression.  A\n               \
    \     context that is not valid MUST NOT be used for\n                    compression\
    \ but SHOULD be used in decompression in\n                    case another compressor\
    \ has not yet received the\n                    updated context information. \
    \ This flag is used to\n                    manage the context life cycle based\
    \ on the\n                    recommendations in Section 7.2.\n   CID:       \
    \      4-bit Context Identifier for this prefix\n                    information.\
    \  The CID is used by context-based\n                    header compression as\
    \ specified in [RFC6282].  The\n                    list of CIDs for a LoWPAN\
    \ is configured on the 6LBR\n                    that originates the context information\
    \ for the\n                    6LoWPAN.\n   Res, Reserved:   This field is unused.\
    \  It MUST be initialized to\n                    zero by the sender and MUST\
    \ be ignored by the\n                    receiver.\n   Valid Lifetime:  16-bit\
    \ unsigned integer.  The length of time in\n                    units of 60 seconds\
    \ (relative to the time the packet\n                    is received) that the\
    \ context is valid for the\n                    purpose of header compression\
    \ or decompression.  A\n                    value of all zero bits (0x0) indicates\
    \ that this\n                    context entry MUST be removed immediately.\n\
    \   Context Prefix:  The IPv6 prefix or address corresponding to the CID\n   \
    \                 field.  The valid length of this field is included\n       \
    \             in the Context Length field.  This field is padded\n           \
    \         with zeros in order to make the option a multiple of\n             \
    \       8 bytes.\n"
- title: 4.3.  Authoritative Border Router Option
  contents:
  - "4.3.  Authoritative Border Router Option\n   The Authoritative Border Router\
    \ Option (ABRO) is needed when RA\n   messages are used to disseminate prefixes\
    \ and context information\n   across a route-over topology.  In this case, 6LRs\
    \ receive PIOs from\n   other 6LRs.  This implies that a 6LR can't just let the\
    \ most recently\n   received RA win.  In order to be able to reliably add and\
    \ remove\n   prefixes from the 6LoWPAN, we need to carry information from the\n\
    \   authoritative 6LBR.  This is done by introducing a version number\n   that\
    \ the 6LBR sets and that 6LRs propagate as they propagate the\n   prefix and context\
    \ information with this ABRO.  When there are\n   multiple 6LBRs, they would have\
    \ separate version number spaces.\n   Thus, this option needs to carry the IP\
    \ address of the 6LBR that\n   originated that set of information.\n   The ABRO\
    \ MUST be included in all RA messages in the case when RAs are\n   used to propagate\
    \ information between routers (as described in\n   Section 8.2).\n    0      \
    \             1                   2                   3\n    0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |  Length = 3   |          Version Low          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |          Version High         |        Valid Lifetime         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +  \
    \                                                             +\n   |        \
    \                                                       |\n   +              \
    \            6LBR Address                         +\n   |                    \
    \                                           |\n   +                          \
    \                                     +\n   |                                \
    \                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Fields:\n   Type:                       35\n   Length:                   \
    \  8-bit unsigned integer.  The length of\n                               the\
    \ option in units of 8 bytes.\n                               Always 3.\n   Version\
    \ Low, Version High:  Together, Version Low and Version High\n               \
    \                constitute the Version Number field, a\n                    \
    \           32-bit unsigned integer where Version Low\n                      \
    \         is the least significant 16 bits and\n                             \
    \  Version High is the most significant\n                               16 bits.\
    \  The version number\n                               corresponding to this set\
    \ of information\n                               contained in the RA message.\
    \  The\n                               authoritative 6LBR originating the prefix\n\
    \                               increases this version number each time\n    \
    \                           its set of prefix or context information\n       \
    \                        changes.\n   Valid Lifetime:             16-bit unsigned\
    \ integer.  The length of\n                               time in units of 60\
    \ seconds (relative to\n                               the time the packet is\
    \ received) that\n                               this set of border router information\
    \ is\n                               valid.  A value of all zero bits (0x0)\n\
    \                               assumes a default value of 10,000\n          \
    \                     (~one week).\n   Reserved:                   This field\
    \ is unused.  It MUST be\n                               initialized to zero by\
    \ the sender and\n                               MUST be ignored by the receiver.\n\
    \   6LBR Address:               IPv6 address of the 6LBR that is the\n       \
    \                        origin of the included version number.\n"
- title: 4.4.  Duplicate Address Messages
  contents:
  - "4.4.  Duplicate Address Messages\n   For the multihop DAD exchanges between a\
    \ 6LR and 6LBR as specified in\n   Section 8.2, there are two new ICMPv6 message\
    \ types called the\n   Duplicate Address Request (DAR) and the Duplicate Address\n\
    \   Confirmation (DAC).  We avoid reusing the NS and NA messages for this\n  \
    \ purpose, since these messages are not subject to the hop limit=255\n   check\
    \ as they are forwarded by intermediate 6LRs.  The information\n   contained in\
    \ the messages is otherwise the same as would be in an NS\n   carrying an ARO,\
    \ with the message format inlining the fields that are\n   in the ARO.\n   The\
    \ DAR and DAC use the same message format with different ICMPv6\n   type values,\
    \ and the Status field is only meaningful in the DAC\n   message.\n    0     \
    \              1                   2                   3\n    0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |     Code      |          Checksum             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Status     |   Reserved    |     Registration Lifetime     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +  \
    \                          EUI-64                             +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +  \
    \                                                             +\n   |        \
    \                                                       |\n   +              \
    \         Registered Address                      +\n   |                    \
    \                                           |\n   +                          \
    \                                     +\n   |                                \
    \                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   IP fields:\n   IPv6 Source:            A non-link-local address of the sending\n\
    \                           router.\n   IPv6 Destination:       In a DAR, a non-link-local\
    \ address of a 6LBR.\n                           In a DAC, this is just the source\
    \ from the\n                           DAR.\n   Hop Limit:              Set to\
    \ MULTIHOP_HOPLIMIT on transmit.  MUST\n                           be ignored\
    \ on receipt.\n   ICMP Fields:\n   Type:                   157 for the DAR and\
    \ 158 for the DAC.\n   Code:                   Set to zero on transmit.  MUST\
    \ be ignored on\n                           receipt.\n   Checksum:           \
    \    The ICMP checksum.  See [RFC4443].\n   Status:                 8-bit unsigned\
    \ integer.  Indicates the status\n                           of a registration\
    \ in the DAC.  MUST be set to\n                           0 in the DAR.  See Table\
    \ 1.\n   Reserved:               This field is unused.  It MUST be initialized\n\
    \                           to zero by the sender and MUST be ignored by\n   \
    \                        the receiver.\n   Registration Lifetime:  16-bit unsigned\
    \ integer.  The amount of time\n                           in units of 60 seconds\
    \ that the 6LBR should\n                           retain the DAD table entry\
    \ (Section 8.2.2)\n                           for the Registered Address.  A value\
    \ of 0\n                           indicates in a DAR that the DAD table entry\n\
    \                           should be removed.\n   EUI-64:                 64\
    \ bits.  This field is used to uniquely\n                           identify the\
    \ interface of the Registered\n                           Address by including\
    \ the EUI-64 identifier\n                           [EUI64] assigned to it unmodified.\n\
    \   Registered Address:     128-bit field.  Carries the host address that\n  \
    \                         was contained in the IPv6 Source field in the\n    \
    \                       NS that contained the ARO sent by the host.\n"
- title: 5.  Host Behavior
  contents:
  - "5.  Host Behavior\n   Hosts in a LoWPAN use the ARO in the NS messages they send\
    \ as a way\n   to maintain the Neighbor Cache in the routers, thereby removing\
    \ the\n   need for multicast NSs to do address resolution.  Unlike in\n   [RFC4861],\
    \ the hosts initiate updating the information they receive\n   in RAs by sending\
    \ RSs before the information expires.  Finally, when\n   NUD indicates that one\
    \ or all default routers have become\n   unreachable, then the host uses RSs to\
    \ find a new set of default\n   routers.\n"
- title: 5.1.  Forbidden Actions
  contents:
  - "5.1.  Forbidden Actions\n   A host MUST NOT multicast an NS message.\n"
- title: 5.2.  Interface Initialization
  contents:
  - "5.2.  Interface Initialization\n   When the interface on a host is initialized,\
    \ it follows the\n   specification in [RFC4861].  A link-local address is formed\
    \ based on\n   the EUI-64 identifier [EUI64] assigned to the interface as per\n\
    \   [RFC4944] or the appropriate IP-over-foo document for the link, and\n   then\
    \ the host sends RS messages as described in [RFC4861]\n   Section 6.3.7.\n  \
    \ There is no need to join the solicited-node multicast address, since\n   nobody\
    \ multicasts NSs in this type of network.  A host MUST join the\n   all-nodes\
    \ multicast address.\n"
- title: 5.3.  Sending a Router Solicitation
  contents:
  - "5.3.  Sending a Router Solicitation\n   The RS is formatted as specified in [RFC4861]\
    \ and sent to the IPv6\n   all-routers multicast address (see [RFC4861] Section\
    \ 6.3.7 for\n   details).  An SLLAO MUST be included to enable unicast RAs in\n\
    \   response.  An unspecified source address MUST NOT be used in RS\n   messages.\n\
    \   If the link layer supports a way to send packets to some kind of\n   all-routers\
    \ anycast link-layer address, then that MAY be used to\n   convey these packets\
    \ to a router.\n   Since hosts do not depend on multicast RAs to discover routers,\
    \ the\n   hosts need to intelligently retransmit RSs whenever the default\n  \
    \ router list is empty, one of its default routers becomes unreachable,\n   or\
    \ the lifetime of the prefixes and contexts in the previous RA is\n   about to\
    \ expire.  The RECOMMENDED rate of retransmissions is to\n   initially send up\
    \ to 3 (MAX_RTR_SOLICITATIONS) RS messages separated\n   by at least 10 seconds\
    \ (RTR_SOLICITATION_INTERVAL) as specified in\n   [RFC4861], and then switch to\
    \ slower retransmissions.  After the\n   initial retransmissions, the host SHOULD\
    \ do truncated binary\n   exponential backoff [ETHERNET] of the retransmission\
    \ timer for each\n   subsequent retransmission, truncating the increase of the\n\
    \   retransmission timer at 60 seconds (MAX_RTR_SOLICITATION_INTERVAL).\n   In\
    \ all cases, the RS retransmissions are terminated when an RA is\n   received.\
    \  See Section 9 for protocol constants.\n"
- title: 5.4.  Processing a Router Advertisement
  contents:
  - "5.4.  Processing a Router Advertisement\n   The processing of RAs is as in [RFC4861],\
    \ with the addition of\n   handling the 6CO and triggering address registration\
    \ when a new\n   address has been configured.  Furthermore, the SLLAO MUST be\
    \ included\n   in the RA.  Unlike in [RFC4861], the maximum value of the RA Router\n\
    \   Lifetime field MAY be up to 0xFFFF (approximately 18 hours).\n   Should the\
    \ host erroneously receive a PIO with the L (on-link) flag\n   set, then that\
    \ PIO MUST be ignored.\n"
- title: 5.4.1.  Address Configuration
  contents:
  - "5.4.1.  Address Configuration\n   Address configuration follows [RFC4862].  For\
    \ an address not derived\n   from an EUI-64, the M flag of the RA determines how\
    \ the address can\n   be configured.  If the M flag is set in the RA, then DHCPv6\
    \ MUST be\n   used to assign the address.  If the M flag is not set, then the\n\
    \   address can be configured by any other means (and duplicate detection\n  \
    \ is performed as part of the registration process).\n   Once an address has been\
    \ configured, it will be registered by\n   unicasting an NS with an ARO to one\
    \ or more routers.\n"
- title: 5.4.2.  Storing Contexts
  contents:
  - "5.4.2.  Storing Contexts\n   The host maintains a conceptual data structure for\
    \ the context\n   information it receives from the routers.  This structure is\
    \ called\n   the context table.  It includes the CID, the prefix (from the Context\n\
    \   Prefix field in the 6CO), the Compression bit, and the Valid\n   Lifetime.\
    \  A context table entry that has the Compression bit clear\n   is used for decompression\
    \ when receiving packets but MUST NOT be used\n   for compression when sending\
    \ packets.\n   When a 6CO is received in an RA, it is used to add or update the\n\
    \   information in the context table.  If the CID field in the 6CO\n   matches\
    \ an existing context table entry, then that entry is updated\n   with the information\
    \ in the 6CO.  If the Valid Lifetime field in the\n   6CO is zero, then the entry\
    \ is immediately deleted.\n   If there is no matching entry in the context table,\
    \ and the Valid\n   Lifetime field is non-zero, then a new context is added to\
    \ the\n   context table.  The 6CO is used to update the created entry.\n   When\
    \ the 6LBR changes the context information, a host might not\n   immediately notice.\
    \  And in the worst case, a host might have stale\n   context information.  For\
    \ this reason, 6LBRs use the recommendations\n   in Section 7.2 for carefully\
    \ managing the context life cycle.  Nodes\n   should be careful about using header\
    \ compression in RA messages that\n   include 6COs.\n"
- title: 5.4.3.  Maintaining Prefix and Context Information
  contents:
  - "5.4.3.  Maintaining Prefix and Context Information\n   The prefix information\
    \ is timed out as specified in [RFC4861].  When\n   the Valid Lifetime for a context\
    \ table entry expires, the entry is\n   placed in a receive-only mode, which is\
    \ the equivalent of receiving a\n   6CO for that context with C=0.  The entry\
    \ is held in receive-only\n   mode for a period of twice the default Router Lifetime,\
    \ after which\n   the entry is removed.\n   A host should inspect the various\
    \ lifetimes to determine when it\n   should next initiate sending an RS to ask\
    \ for any updates to the\n   information.  The lifetimes that matter are the default\
    \ Router\n   Lifetime, the Valid Lifetime in the PIOs, and the Valid Lifetime\
    \ in\n   the 6CO.  The host SHOULD unicast one or more RSs to the router well\n\
    \   before the shortest of those lifetimes (across all the prefixes and\n   all\
    \ the contexts) expires and then switch to multicast RS messages if\n   there\
    \ is no response to the unicasts.  The retransmission behavior\n   for the RSs\
    \ is specified in Section 5.3.\n"
- title: 5.5.  Registration and Neighbor Unreachability Detection
  contents:
  - "5.5.  Registration and Neighbor Unreachability Detection\n   Hosts send unicast\
    \ NS messages to register their IPv6 addresses, and\n   also to do NUD to verify\
    \ that their default routers are still\n   reachable.  The registration is performed\
    \ by the host including an\n   ARO in the NS it sends.  Even if the host doesn't\
    \ have data to send,\n   but is expecting others to try to send packets to the\
    \ host, the host\n   needs to maintain its NCEs in the routers.  This is done\
    \ by sending\n   NS messages with an ARO to the router well in advance of the\n\
    \   Registration Lifetime expiring.  NS messages are retransmitted up to\n   MAX_UNICAST_SOLICIT\
    \ times using a minimum timeout of RETRANS_TIMER\n   until the host receives an\
    \ NA message with an ARO.\n   Hosts that receive RA messages from multiple default\
    \ routers SHOULD\n   attempt to register with more than one of them in order to\
    \ increase\n   the robustness of the network.\n   Note that NUD probes can be\
    \ suppressed by reachability confirmations\n   from transport protocols or applications\
    \ as specified in [RFC4861].\n   When a host knows it will no longer use a router\
    \ it is registered to,\n   it SHOULD de-register with the router by sending an\
    \ NS with an ARO\n   containing a lifetime of 0.  To handle the case when a host\
    \ loses\n   connectivity with the default router involuntarily, the host SHOULD\n\
    \   use a suitably low Registration Lifetime.\n"
- title: 5.5.1.  Sending a Neighbor Solicitation
  contents:
  - "5.5.1.  Sending a Neighbor Solicitation\n   The host triggers sending NS messages\
    \ containing an ARO when a new\n   address is configured, when it discovers a\
    \ new default router, or\n   well before the Registration Lifetime expires.  Such\
    \ an NS MUST\n   include an SLLAO, since the router needs to record the link-layer\n\
    \   address of the host.  An unspecified source address MUST NOT be used\n   in\
    \ NS messages.\n"
- title: 5.5.2.  Processing a Neighbor Advertisement
  contents:
  - "5.5.2.  Processing a Neighbor Advertisement\n   A host handles NA messages as\
    \ specified in [RFC4861], with added\n   logic described in this section for handling\
    \ the ARO.\n   In addition to the normal validation of an NA and its options,\
    \ the\n   ARO (if present) is verified as follows.  If the Length field is not\n\
    \   two, the option is silently ignored.  If the EUI-64 field does not\n   match\
    \ the EUI-64 of the interface, the option is silently ignored.\n   If the Status\
    \ field is zero, then the address registration was\n   successful.  The host saves\
    \ the Registration Lifetime from the ARO\n   for use to trigger a new NS well\
    \ before the lifetime expires.  If the\n   Status field is not equal to zero,\
    \ the address registration has\n   failed.\n"
- title: 5.5.3.  Recovering from Failures
  contents:
  - "5.5.3.  Recovering from Failures\n   The procedure for maintaining reachability\
    \ information about a\n   neighbor is the same as in [RFC4861] Section 7.3, with\
    \ the exception\n   that address resolution is not performed.\n   The address\
    \ registration procedure may fail for two reasons: no\n   response to NSs is received\
    \ (NUD failure), or an ARO with a failure\n   Status (Status > 0) is received.\
    \  In the case of NUD failure, the\n   entry for that router will be removed;\
    \ thus, address registration is\n   no longer of importance.  When an ARO with\
    \ a non-zero Status field is\n   received, this indicates that registration for\
    \ that address has\n   failed.  A failure Status of one indicates that a duplicate\
    \ address\n   was detected, and the procedure described in [RFC4862] Section 5.4.5\n\
    \   is followed.  The host MUST NOT use the address it tried to register.\n  \
    \ If the host has valid registrations with other routers, these MUST be\n   removed\
    \ by registering with each using a zero ARO lifetime.\n   A Status code of two\
    \ indicates that the Neighbor Cache of that router\n   is full.  In this case,\
    \ the host SHOULD remove this router from its\n   default router list and attempt\
    \ to register with another router.  If\n   the host's default router list is empty,\
    \ it needs to revert to\n   sending RSs as specified in Section 5.3.\n   Other\
    \ failure codes may be defined in future documents.\n"
- title: 5.6.  Next-Hop Determination
  contents:
  - "5.6.  Next-Hop Determination\n   The IP address of the next hop for a destination\
    \ is determined as\n   follows.  Destinations to the link-local prefix (fe80::)\
    \ are always\n   sent on the link to that destination.  It is assumed that link-local\n\
    \   addresses are formed as specified in Section 5.2 from the EUI-64, and\n  \
    \ address resolution is not performed.  Packets are sent to link-local\n   destinations\
    \ by reversing the procedure in Appendix A of [RFC4291].\n   Multicast addresses\
    \ are considered to be on-link and are resolved as\n   specified in [RFC4944]\
    \ or the appropriate IP-over-foo document.  Note\n   that [RFC4944] only defines\
    \ how to represent a multicast destination\n   address in the LoWPAN header. \
    \ Support for multicast scopes larger\n   than link-local needs an appropriate\
    \ multicast routing algorithm.\n   All other prefixes are assumed to be off-link\
    \ [RFC5889].  Anycast\n   addresses are always considered to be off-link.  They\
    \ are therefore\n   sent to one of the routers in the default router list.\n \
    \  A LoWPAN node is not required to maintain a minimum of one buffer per\n   neighbor\
    \ as specified in [RFC4861], since packets are never queued\n   while waiting\
    \ for address resolution.\n"
- title: 5.7.  Address Resolution
  contents:
  - "5.7.  Address Resolution\n   The address registration mechanism and the SLLAO\
    \ in RA messages\n   provide sufficient a priori state in routers and hosts to\
    \ resolve an\n   IPv6 address to its associated link-layer address.  As all prefixes\n\
    \   except the link-local prefix and multicast addresses are always\n   assumed\
    \ to be off-link, multicast-based address resolution between\n   neighbors is\
    \ not needed.\n   Link-layer addresses for neighbors are stored in NCEs [RFC4861].\
    \  In\n   order to achieve LoWPAN compression, most global addresses are formed\n\
    \   using a link-layer address.  Thus, a host can reduce memory usage by\n   optimizing\
    \ for this case and only storing link-layer address\n   information if it differs\
    \ from the link-layer address corresponding\n   to the Interface ID of the IPv6\
    \ address (i.e., differs in more than\n   the on-link/global bit being inverted).\n"
- title: 5.8.  Sleeping
  contents:
  - "5.8.  Sleeping\n   It is often advantageous for battery-powered hosts in LoWPANs\
    \ to keep\n   a low duty cycle.  The optimizations described in this document\n\
    \   enable hosts to sleep, as further described in this section.  Routers\n  \
    \ may want to cache traffic destined to a host that is sleeping, but\n   such\
    \ functionality is out of the scope of this document.\n"
- title: 5.8.1.  Picking an Appropriate Registration Lifetime
  contents:
  - "5.8.1.  Picking an Appropriate Registration Lifetime\n   As all ND messages are\
    \ initiated by the hosts, this allows a host to\n   sleep or otherwise be unreachable\
    \ between NS/NA message exchanges.\n   The ARO attached to NS messages indicates\
    \ to a router to keep the NCE\n   for that address valid for the period in the\
    \ Registration Lifetime\n   field.  A host should choose a sleep time appropriate\
    \ for its energy\n   characteristics and set a Registration Lifetime larger than\
    \ the sleep\n   time to ensure that the registration is renewed successfully\n\
    \   (considering, for example, clock drift and additional time for\n   potential\
    \ retransmissions of the re-registration).  External\n   configuration of a host\
    \ should also consider the stability of the\n   network (how quickly the topology\
    \ changes) when choosing its sleep\n   time (and thus Registration Lifetime).\
    \  A dynamic network requires a\n   shorter sleep time so that routers don't keep\
    \ invalid NCEs for nodes\n   longer than necessary.\n"
- title: 5.8.2.  Behavior on Wakeup
  contents:
  - "5.8.2.  Behavior on Wakeup\n   When a host wakes up from a sleep period, it SHOULD\
    \ refresh its\n   current address registrations that will time out before the\
    \ next\n   wakeup.  This is done by sending NS messages with an ARO as described\n\
    \   in Section 5.5.1.  The host may also need to refresh its prefix and\n   context\
    \ information by sending a new unicast RS (the maximum Router\n   Lifetime is\
    \ about 18 hours, whereas the maximum Registration Lifetime\n   is about 45.5\
    \ days).  If after wakeup the host (using NUD) determines\n   that some or all\
    \ previous default routers have become unreachable,\n   then the host will send\
    \ multicast RSs to discover new default\n   router(s) and restart the address\
    \ registration process.\n"
- title: 6.  Router Behavior for 6LRs and 6LBRs
  contents:
  - "6.  Router Behavior for 6LRs and 6LBRs\n   Both 6LRs and 6LBRs maintain the Neighbor\
    \ Cache [RFC4861] based on\n   the AROs they receive in NA messages from hosts,\
    \ ND packets from\n   other nodes, and, potentially, a routing protocol used in\
    \ the 6LoWPAN\n   as outlined in Section 3.5.\n   The routers SHOULD NOT garbage-collect\
    \ Registered NCEs (see\n   Section 3.4), since they need to retain them until\
    \ the Registration\n   Lifetime expires.  Similarly, if NUD on the router determines\
    \ that\n   the host is UNREACHABLE (based on the logic in [RFC4861]), the NCE\n\
    \   SHOULD NOT be deleted but rather retained until the Registration\n   Lifetime\
    \ expires.  A renewed ARO should mark the cache entry as\n   STALE.  Thus, for\
    \ 6LoWPAN routers, the Neighbor Cache doesn't behave\n   like a cache.  Instead,\
    \ it behaves as a registry of all the host\n   addresses that are attached to\
    \ the router.\n   Routers MAY implement the Default Router Preference (Prf) extension\n\
    \   [RFC4191] and use that to indicate to the host whether the router is\n   a\
    \ 6LBR or a 6LR.  If this is implemented, then 6LRs with no route to\n   a border\
    \ router MUST set Prf to (11) for low preference, other 6LRs\n   MUST set Prf\
    \ to (00) for normal preference, and 6LBRs MUST set Prf to\n   (01) for high preference.\n"
- title: 6.1.  Forbidden Actions
  contents:
  - "6.1.  Forbidden Actions\n   Even if a router in a route-over topology can reach\
    \ both a host and\n   another target, because of radio propagation it generally\
    \ cannot know\n   whether the host can directly reach the other target.  Therefore,\
    \ it\n   cannot assume that Redirect will actually work from one host to\n   another.\
    \  Therefore, it SHOULD NOT send Redirect messages.  The only\n   potential exception\
    \ to this \"SHOULD NOT\" is when the deployment/\n   implementation has a way\
    \ to know how the host can reach the intended\n   target.  Hence, it is RECOMMENDED\
    \ that the implementation by default\n   does not send Redirect messages but can\
    \ be configurable when the\n   deployment calls for this.  In contrast, for mesh-under\
    \ topologies,\n   the same considerations about Redirects apply as in [RFC4861].\n\
    \   A router MUST NOT set the L (on-link) flag in the PIOs, since that\n   might\
    \ trigger hosts to send multicast NSs.\n"
- title: 6.2.  Interface Initialization
  contents:
  - "6.2.  Interface Initialization\n   The 6LBR router interface initialization behavior\
    \ is the same as in\n   [RFC4861].  However, in a dynamic configuration scenario\
    \ (see\n   Section 8.1), a 6LR comes up as a non-router and waits to receive the\n\
    \   advertisement for configuring its own interface address first, before\n  \
    \ setting its interfaces to be advertising interfaces and turning into\n   a router.\n"
- title: 6.3.  Processing a Router Solicitation
  contents:
  - "6.3.  Processing a Router Solicitation\n   A router processes RS messages as\
    \ specified in [RFC4861].  The\n   differences relate to the inclusion of ABROs\
    \ in the RA messages and\n   the exclusive use of unicast RAs.  If a 6LR has received\
    \ an ABRO from\n   a 6LBR, then it will include that option unmodified in the\
    \ RA\n   messages it sends.  And, if the 6LR has received RAs -- whether with\n\
    \   the same prefixes and context information or different -- from a\n   different\
    \ 6LBR, then it will need to keep those prefixes and that\n   context information\
    \ separately so that the RAs the 6LR sends will\n   maintain the association between\
    \ the ABRO and the prefixes and\n   context information.  The router can tell\
    \ which 6LBR originated the\n   prefixes and context information from the 6LBR\
    \ Address field in the\n   ABRO.  When a router has information tied to multiple\
    \ ABROs, a single\n   RS will result in multiple RAs each containing a different\
    \ ABRO.\n   When the ABRO Valid Lifetime associated with a 6LBR times out, all\n\
    \   information related to that 6LBR MUST be removed.  As an\n   implementation\
    \ note, it is recommended that RAs are sent sufficiently\n   more frequently than\
    \ the ABRO Valid Lifetime so that missing an RA\n   does not result in removing\
    \ all information related to a 6LBR.\n   An RS might be received from a host that\
    \ has not yet registered its\n   address with the router.  Thus, the router MUST\
    \ NOT modify an\n   existing NCE based on the SLLAO from the RS.  However, a router\
    \ MAY\n   create a Tentative NCE based on the SLLAO.  Such a Tentative NCE\n \
    \  SHOULD be timed out in TENTATIVE_NCE_LIFETIME seconds, unless a\n   registration\
    \ converts it into a Registered NCE.\n   A 6LR or 6LBR MUST include an SLLAO in\
    \ the RAs it sends; this is\n   required so that the hosts will know the link-layer\
    \ address of the\n   router.  Unlike in [RFC4861], the maximum value of the RA\
    \ Router\n   Lifetime field MAY be up to 0xFFFF (approximately 18 hours).\n  \
    \ Unlike [RFC4861], which suggests multicast RAs, this specification\n   improves\
    \ the exchange by always unicasting RAs in response to RSs.\n   This is possible,\
    \ since the RS always includes an SLLAO, which is\n   used by the router to unicast\
    \ the RA.\n"
- title: 6.4.  Periodic Router Advertisements
  contents:
  - "6.4.  Periodic Router Advertisements\n   A router does not need to send any periodic\
    \ RA messages, since the\n   hosts will solicit updated information by sending\
    \ RSs before the\n   lifetimes expire.\n   However, if the routers use RAs to\
    \ distribute prefix and/or context\n   information across a route-over topology,\
    \ that might require periodic\n   RA messages.  Such RAs are sent using the configurable\n\
    \   MinRtrAdvInterval and MaxRtrAdvInterval as per [RFC4861].\n"
- title: 6.5.  Processing a Neighbor Solicitation
  contents:
  - "6.5.  Processing a Neighbor Solicitation\n   A router handles NS messages as\
    \ specified in [RFC4861], with added\n   logic described in this section for handling\
    \ the ARO.\n   In addition to the normal validation of an NS and its options,\
    \ the\n   ARO is verified as follows (if present).  If the Length field is not\n\
    \   two, or if the Status field is not zero, then the NS is silently\n   ignored.\n\
    \   If the source address of the NS is the unspecified address, or if no\n   SLLAO\
    \ is included, then any included ARO is ignored, that is, the NS\n   is processed\
    \ as if it did not contain an ARO.\n"
- title: 6.5.1.  Checking for Duplicates
  contents:
  - "6.5.1.  Checking for Duplicates\n   If the NS contains a valid ARO, then the\
    \ router inspects its Neighbor\n   Cache on the arriving interface to see if it\
    \ is a duplicate.  It\n   isn't a duplicate if (1) there is no NCE for the IPv6\
    \ source address\n   of the NS or (2) there is such an NCE and the EUI-64 is the\
    \ same.\n   Otherwise, it is a duplicate address.  Note that if multihop DAD\n\
    \   (Section 8.2) is used, then the checks are slightly different, to\n   take\
    \ into account Tentative NCEs.  In the case where it is a\n   duplicate address,\
    \ then the router responds with a unicast NA message\n   with the ARO Status field\
    \ set to one (to indicate that the address is\n   a duplicate) as described in\
    \ Section 6.5.2.  In this case, there is\n   no modification to the Neighbor Cache.\n"
- title: 6.5.2.  Returning Address Registration Errors
  contents:
  - "6.5.2.  Returning Address Registration Errors\n   Address registration errors\
    \ are not sent back to the source address\n   of the NS due to a possible risk\
    \ of L2 address collision.  Instead,\n   the NA is sent to the link-local IPv6\
    \ address with the Interface ID\n   part derived from the EUI-64 field of the\
    \ ARO as per [RFC4944].  In\n   particular, this means that the universal/local\
    \ bit needs to be\n   inverted.  The NA is formatted with a copy of the ARO from\
    \ the NS,\n   but with the Status field set to indicate the appropriate error.\n\
    \   The error is sent to the link-local address with the Interface ID\n   derived\
    \ from the EUI-64.  Thus, if the ARO was from and for a short\n   address, the\
    \ L2 destination address for the NA with the ARO error\n   will be the 64-bit\
    \ unique address.\n"
- title: 6.5.3.  Updating the Neighbor Cache
  contents:
  - "6.5.3.  Updating the Neighbor Cache\n   If the ARO did not result in a duplicate\
    \ address being detected as\n   above, then if the Registration Lifetime is non-zero\
    \ the router\n   creates (if it didn't exist) or updates (otherwise) an NCE for\
    \ the\n   IPv6 source address of the NS.  If the Neighbor Cache is full and a\n\
    \   new entry needs to be created, then the router responds with a\n   unicast\
    \ NA with the ARO Status field set to two (to indicate that the\n   router's Neighbor\
    \ Cache is full) as described in Section 6.5.2.\n   The Registration Lifetime\
    \ and the EUI-64 are recorded in the NCE.  A\n   unicast NA is then sent in response\
    \ to the NS.  This NA SHOULD\n   include a copy of the ARO, with the Status field\
    \ set to zero.  A\n   TLLAO (Target Link-Layer Address Option) [RFC4861] is not\
    \ required in\n   the NA, since the host already knows the router's link-layer\
    \ address\n   from RAs.\n   If the ARO contains a zero Registration Lifetime,\
    \ then any existing\n   NCE for the IPv6 source address of the NS MUST be deleted\
    \ and an NA\n   sent as above.\n   Should the Registration Lifetime in an NCE\
    \ expire, then the router\n   MUST delete the cache entry.\n   The addition and\
    \ removal of Registered NCEs would result in notifying\n   the routing protocol.\n\
    \   Note: If the substitutable multihop DAD (Section 8.2) is used, then\n   the\
    \ updating of the Neighbor Cache is slightly different due to\n   Tentative NCEs.\n"
- title: 6.5.4.  Next-Hop Determination
  contents:
  - "6.5.4.  Next-Hop Determination\n   In order to deliver a packet destined for\
    \ a 6LN registered with a\n   router, next-hop determination is slightly different\
    \ for routers than\n   for hosts (see Section 5.6).  The routing table is checked\
    \ to\n   determine the next-hop IP address.  A Registered NCE determines if\n\
    \   the next-hop IP address is on-link.  It is the responsibility of the\n   routing\
    \ protocol of the router to maintain on-link information about\n   its registered\
    \ neighbors.  Tentative NCEs MUST NOT be used to\n   determine on-link status\
    \ of the registered nodes.\n"
- title: 6.5.5.  Address Resolution between Routers
  contents:
  - "6.5.5.  Address Resolution between Routers\n   There needs to be a mechanism\
    \ somewhere for the routers to discover\n   each other's link-layer addresses.\
    \  If the routing protocol used\n   between the routers provides this, then there\
    \ is no need for the\n   routers to use the ARO between each other.  Otherwise,\
    \ the routers\n   SHOULD use the ARO.  When routers use the ARO to register with\
    \ each\n   other and multihop DAD (Section 8.2) is in use, then care must be\n\
    \   taken to ensure that there isn't a flood of ARO-carrying messages\n   sent\
    \ to the 6LBR as each router hears an ARO from their neighboring\n   routers.\
    \  The details for this scenario are out of scope of this\n   document.\n   Routers\
    \ MAY also use multicast NSs as in [RFC4861] to resolve each\n   others link-layer\
    \ addresses.  Thus, routers MAY multicast NSs for\n   other routers, for example,\
    \ as a result of receiving some routing\n   protocol update.  Routers MUST respond\
    \ to multicast NSs.  This\n   implies that routers MUST join the solicited-node\
    \ multicast addresses\n   as specified in [RFC4861].\n"
- title: 7.  Border Router Behavior
  contents:
  - "7.  Border Router Behavior\n   A 6LBR handles the sending of RAs and processing\
    \ of NSs from hosts as\n   specified above in Section 6.  A 6LBR SHOULD always\
    \ include an ABRO\n   in the RAs it sends, listing itself as the 6LBR address.\
    \  This\n   requires that the 6LBR maintain the version number in stable storage\n\
    \   and increase the version number when some information in its RAs\n   changes.\
    \  The information whose change affects the version is in the\n   PIOs (the prefixes\
    \ or their lifetimes) and in the 6CO (the prefixes,\n   CIDs, or lifetimes).\n\
    \   In addition, a 6LBR is somehow configured with the prefix or prefixes\n  \
    \ that are assigned to the LoWPAN and advertises those in RAs as in\n   [RFC4861].\
    \  In the case of route-over, those prefixes can be\n   disseminated to all the\
    \ 6LRs using the technique discussed in\n   Section 8.1.  However, there might\
    \ be mechanisms outside of the scope\n   of this document that can be used as\
    \ a substitute for prefix\n   dissemination in the route-over topology (see Section\
    \ 1.4).\n   If the 6LoWPAN uses header compression [RFC6282] with context, then\n\
    \   the 6LBR needs to manage the CIDs and advertise those in RAs by\n   including\
    \ 6COs in its RAs so that directly attached hosts are\n   informed about the CIDs.\
    \  Below, we specify things to consider when\n   the 6LBR needs to add, remove,\
    \ or change the context information.  In\n   the case of route-over, the context\
    \ information is disseminated to\n   all the 6LRs using the technique discussed\
    \ in Section 8, unless a\n   different specification provides a substitute for\
    \ this multihop\n   distribution.\n"
- title: 7.1.  Prefix Determination
  contents:
  - "7.1.  Prefix Determination\n   The prefix or prefixes used in a LoWPAN can be\
    \ manually configured or\n   can be acquired using DHCPv6 Prefix Delegation [RFC3633].\
    \  For a\n   LoWPAN that is isolated from the network either permanently or\n\
    \   occasionally, the 6LBR can assign a ULA prefix using [RFC4193].  The\n   ULA\
    \ prefix should be stored in stable storage so that the same prefix\n   is used\
    \ after a failure of the 6LBR.  If the LoWPAN has multiple\n   6LBRs, then they\
    \ should be configured with the same set of prefixes.\n   The set of prefixes\
    \ is included in the RA messages as specified in\n   [RFC4861].\n"
- title: 7.2.  Context Configuration and Management
  contents:
  - "7.2.  Context Configuration and Management\n   If the LoWPAN uses header compression\
    \ [RFC6282] with context, then\n   the 6LBR must be configured with context information\
    \ and related\n   CIDs.  If the LoWPAN has multiple 6LBRs, then they MUST be configured\n\
    \   with the same context information and CIDs.  As noted in [RFC6282],\n   maintaining\
    \ consistency of context information is crucial for\n   ensuring that packets\
    \ will be decompressed correctly.\n   The context information carried in RA messages\
    \ originates at 6LBRs\n   and must be disseminated to all the routers and hosts\
    \ within the\n   LoWPAN.  RAs include one 6CO for each context.\n   For the dissemination\
    \ of context information using the 6CO, a strict\n   life cycle SHOULD be used\
    \ in order to ensure that the context\n   information stays synchronized throughout\
    \ the LoWPAN.  New context\n   information SHOULD be introduced into the LoWPAN\
    \ with C=0, to ensure\n   that it is known by all nodes that may have to perform\
    \ header\n   decompression based on this context information.  Only when it is\n\
    \   reasonable to assume that this information was successfully\n   disseminated\
    \ SHOULD an option with C=1 be sent, enabling the actual\n   use of the context\
    \ information for compression.\n   Conversely, to avoid the situation where nodes\
    \ send packets that make\n   use of previous values of contexts -- which would\
    \ result in ambiguity\n   when receiving a packet that uses a recently changed\
    \ context -- old\n   values of a context SHOULD be taken out of use for a while\
    \ before new\n   values are assigned to this specific context.  That is, in\n\
    \   preparation for a change of context information, its dissemination\n   SHOULD\
    \ continue for at least MIN_CONTEXT_CHANGE_DELAY with C=0.  Only\n   when it is\
    \ reasonable to assume that the fact that the context is now\n   invalid was successfully\
    \ disseminated should the CID be taken out of\n   dissemination or reused with\
    \ a different Context Prefix field.  In\n   the latter case, dissemination of\
    \ the new value again SHOULD start\n   with C=0, as above.\n"
- title: 8.  Substitutable Feature Behavior
  contents:
  - "8.  Substitutable Feature Behavior\n   Normally, in a 6LoWPAN multihop network,\
    \ the RA messages are used to\n   disseminate prefixes and context information\
    \ to all the 6LRs in a\n   route-over topology.  If all routers are configured\
    \ to use a\n   substitute mechanism for such information distribution, any remaining\n\
    \   use of the 6LoWPAN-ND mechanisms is governed by the substitute\n   specification.\n\
    \   There is also the option for a 6LR to perform multihop DAD (for IPv6\n   addresses\
    \ not derived from an EUI-64) against a 6LBR in a route-over\n   topology by using\
    \ the DAR and DAC messages.  This is substitutable\n   because there might be\
    \ other ways to either allocate a unique\n   address, such as DHCPv6 [RFC3315],\
    \ or use other future mechanisms for\n   multihop DAD.  Again, in this case, any\
    \ remaining use of the\n   6LoWPAN-ND mechanisms is governed by the substitute\
    \ specification.\n   To be clear: Implementations MUST support the features described\
    \ in\n   Sections 8.1 and 8.2, unless the implementation supports some\n   alternative\
    \ (\"substitute\") from some other specification.\n"
- title: 8.1.  Multihop Prefix and Context Distribution
  contents:
  - "8.1.  Multihop Prefix and Context Distribution\n   The multihop distribution\
    \ relies on RS messages and RA messages sent\n   between routers, and using the\
    \ ABRO version number to control the\n   propagation of the information (prefixes\
    \ and context information)\n   that is being sent in the RAs.\n   This multihop\
    \ distribution mechanism can handle arbitrary information\n   from an arbitrary\
    \ number of 6LBRs.  However, the semantics of the\n   context information requires\
    \ that all the 6LNs use the same\n   information whether they send, forward, or\
    \ receive compressed\n   packets.  Thus, the manager of the 6LBRs needs to somehow\
    \ ensure that\n   the context information is in synchrony across the 6LBRs.  This\
    \ can\n   be handled in different ways.  One possible way to ensure it is to\n\
    \   treat the context and prefix information as originating from some\n   logical\
    \ or virtual source, which in essence means that it looks like\n   the information\
    \ is distributed from a single source.\n   If a set of 6LBRs behave as a single\
    \ one (using mechanisms out of\n   scope of this document) so that the prefixes\
    \ and contexts and the\n   ABRO version number will be the same from all the 6LBRs,\
    \ then those\n   6LBRs can pick a single IP address to use in the ABRO.\n"
- title: 8.1.1.  6LBRs Sending Router Advertisements
  contents:
  - "8.1.1.  6LBRs Sending Router Advertisements\n   6LBRs supporting multihop prefix\
    \ and context distribution MUST\n   include an ABRO in each of their RAs.  The\
    \ ABRO Version Number field\n   is used to keep prefix and context information\
    \ consistent throughout\n   the LoWPAN, along with the guidelines in Section 7.2.\
    \  Each time any\n   information in the set of PIOs or 6COs changes, the ABRO\
    \ version is\n   increased by one.\n   This requires that the 6LBR maintain the\
    \ PIO, 6CO, and ABRO Version\n   Number in stable storage, since an old version\
    \ number will be\n   silently ignored by the 6LRs.\n"
- title: 8.1.2.  Routers Sending Router Solicitations
  contents:
  - "8.1.2.  Routers Sending Router Solicitations\n   In a 6LoWPAN, unless substituted,\
    \ multihop distribution is done using\n   RA messages.  Thus, on interface initialization,\
    \ a router (6LR) MUST\n   send RS messages following the rules specified for hosts\
    \ in\n   [RFC4861].  This in turn will cause the routers to respond with RA\n\
    \   messages that can then be used to initially seed the prefix and\n   context\
    \ information.\n"
- title: 8.1.3.  Routers Processing Router Advertisements
  contents:
  - "8.1.3.  Routers Processing Router Advertisements\n   If multihop distribution\
    \ is not done using RA messages, then the\n   routers follow [RFC4861], which\
    \ states that they merely do some\n   consistency checks; in this case, nothing\
    \ in Section 8.1 applies.\n   Otherwise, the routers will check and record the\
    \ prefix and context\n   information from the received RAs, and use that information\
    \ as\n   follows.\n   If a received RA does not contain an ABRO, then the RA MUST\
    \ be\n   silently ignored.\n   The router uses the 6LBR Address field in the ABRO\
    \ to check if it has\n   previously received information from the 6LBR.  If it\
    \ finds no such\n   information, then it just records the 6LBR address, Version,\
    \ Valid\n   Lifetime, and the associated prefixes and context information.  If\n\
    \   the 6LBR is previously known, then the Version Number field MUST be\n   compared\
    \ against the recorded version number for that 6LBR.  If the\n   version number\
    \ received in the packet is less than the stored version\n   number, then the\
    \ information in the RA is silently ignored.\n   Otherwise, the recorded information\
    \ and version number are updated.\n"
- title: 8.1.4.  Storing the Information
  contents:
  - "8.1.4.  Storing the Information\n   The router keeps state for each 6LBR that\
    \ it sees with an ABRO.  This\n   includes the version number, the Valid Lifetime,\
    \ and the complete set\n   of PIOs and 6COs.  The prefixes are timed out based\
    \ on the Valid\n   Lifetime in the PIO.  The Context Prefix is timed out based\
    \ on the\n   Valid Lifetime in the 6CO.\n   While the prefixes and context information\
    \ are stored in the router,\n   their valid and preferred lifetimes are decremented\
    \ as time passes.\n   This ensures that when the router is in turn later advertising\
    \ that\n   information in the RAs it sends, the 'expiry time' doesn't\n   accidentally\
    \ move further into the future.  For example, if a 6CO\n   with a Valid Lifetime\
    \ of 10 minutes is received at time T, and the\n   router includes this in an\
    \ RA it sends at time T+5 minutes, the Valid\n   Lifetime in the 6CO it sends\
    \ will be only 5 minutes.\n"
- title: 8.1.5.  Sending Router Advertisements
  contents:
  - "8.1.5.  Sending Router Advertisements\n   When multihop distribution is performed\
    \ using RA messages, the\n   routers MUST ensure that the ABRO always stays together\
    \ with the\n   prefixes and context information received with that ABRO.  Thus,\
    \ if\n   the router has received prefix P1 with an ABRO saying it is from one\n\
    \   6LBR, and prefix P2 from another 6LBR, then the router MUST NOT\n   include\
    \ the two prefixes in the same RA message.  Prefix P1 MUST be\n   in an RA that\
    \ includes an ABRO from the first 6LBR, etc.  Note that\n   multiple 6LBRs might\
    \ advertise the same prefix and context\n   information, but they still need to\
    \ be associated with the 6LBRs that\n   advertised them.\n   The routers periodically\
    \ send RAs as in [RFC4861].  This is for the\n   benefit of the other routers\
    \ receiving the prefixes and context\n   information.  The routers also respond\
    \ to RSs by unicasting RA\n   messages.  In both cases, the above constraint of\
    \ keeping the ABRO\n   together with 'its' prefixes and context information applies.\n\
    \   When a router receives new information from a 6LBR, that is, either\n   it\
    \ hears from a new 6LBR (a new 6LBR address in the ABRO) or the ABRO\n   version\
    \ number of an existing 6LBR has increased, then it is useful\n   to send out\
    \ a few triggered updates.  The recommendation is to behave\n   the same as when\
    \ an interface has become an advertising interface as\n   described in [RFC4861],\
    \ that is, send up to three RA messages.  This\n   ensures rapid propagation of\
    \ new information to all the 6LRs.\n"
- title: 8.2.  Multihop Duplicate Address Detection
  contents:
  - "8.2.  Multihop Duplicate Address Detection\n   The ARO can be used, in addition\
    \ to registering an address in a 6LR,\n   to have the 6LR verify that the address\
    \ isn't used by some other host\n   known to the 6LR.  However, that isn't sufficient\
    \ in a route-over\n   topology (or in a LoWPAN with multiple 6LBRs), since some\
    \ host\n   attached to another 6LR could be using the same address.  There might\n\
    \   be different ways for the 6LRs to coordinate such duplicate address\n   detection\
    \ in the future, or addresses could be assigned using a\n   DHCPv6 server that\
    \ verifies uniqueness as part of the assignment.\n   This specification offers\
    \ a substitutable simple technique for 6LRs\n   and 6LBRs to perform DAD that\
    \ reuses the information from the ARO in\n   the DAR and DAC messages.  This technique\
    \ is not needed when the\n   Interface ID in the address is based on an EUI-64,\
    \ since those are\n   assumed to be globally unique.  The technique assumes that\
    \ either the\n   6LRs register with all the 6LBRs or the network uses some out-of-\n\
    \   scope mechanism to keep the DAD tables in the 6LBRs synchronized.\n   The\
    \ multihop DAD mechanism is used synchronously the first time an\n   address is\
    \ registered with a particular 6LR.  That is, the ARO is not\n   returned to the\
    \ host until multihop DAD has been completed against\n   the 6LBRs.  For existing\
    \ registrations in the 6LR, multihop DAD needs\n   to be repeated against the\
    \ 6LBRs to ensure that the entry for the\n   address in the 6LBRs does not time\
    \ out, but that can be done\n   asynchronously with the response to the hosts.\
    \  One method to achieve\n   this is to track how much is left of the lifetime\
    \ the 6LR registered\n   with the 6LBRs and to re-register with the 6LBR when\
    \ this lifetime is\n   about to run out.\n   For synchronous multihop DAD, the\
    \ 6LR performs some additional checks\n   to ensure that it has an NCE it can\
    \ use to respond to the host when\n   it receives a response from a 6LBR.  This\
    \ consists of checking for an\n   already existing (Tentative or Registered) NCE\
    \ for the Registered\n   Address with a different EUI-64.  If such a Registered\
    \ NCE exists,\n   then the 6LR SHOULD respond that the address is a duplicate.\
    \  If such\n   a Tentative NCE exists, then the 6LR SHOULD silently ignore the\
    \ ARO,\n   thereby relying on the host retransmitting the ARO.  This is needed\n\
    \   to handle the case when multiple hosts try to register the same IPv6\n   address\
    \ at the same time.  If no NCE exists, then the 6LR MUST create\n   a Tentative\
    \ NCE with the EUI-64 and the SLLAO.  This entry will be\n   used to send the\
    \ response to the host when the 6LBR responds\n   positively.\n   When a 6LR receives\
    \ an NS containing an ARO with a non-zero\n   Registration Lifetime and it has\
    \ no existing Registered NCE, then\n   with this mechanism the 6LR will invoke\
    \ synchronous multihop DAD.\n   The 6LR will unicast a DAR message to one or more\
    \ 6LBRs, where the\n   DAR contains the host's address in the Registered Address\
    \ field.  The\n   DAR will be forwarded by 6LRs until it reaches the 6LBR; hence,\
    \ its\n   IPv6 Hop Limit field will not be 255 when received by the 6LBR.  The\n\
    \   6LBR will respond with a DAC message, which will have a hop limit\n   less\
    \ than 255 when it reaches the 6LR.\n   When the 6LR receives the DAC from the\
    \ 6LBR, it will look for a\n   matching (same IP address and EUI-64) (Tentative\
    \ or Registered) NCE.\n   If no such entry is found, then the DAC is silently\
    \ ignored.  If an\n   entry is found and the DAC had Status=0, then the 6LR will\
    \ mark the\n   Tentative NCE as Registered.  In all cases, when an entry is found,\n\
    \   then the 6LR will respond to the host with an NA, copying the Status\n   and\
    \ EUI-64 fields from the DAC to an ARO in the NA.  In case the\n   status is an\
    \ error, then the destination IP address of the NA is\n   derived from the EUI-64\
    \ field of the DAC.\n   A Tentative NCE SHOULD be timed out TENTATIVE_NCE_LIFETIME\
    \ seconds\n   after it was created in order to allow for another host to attempt\
    \ to\n   register the IPv6 address.\n"
- title: 8.2.1.  Message Validation for DAR and DAC
  contents:
  - "8.2.1.  Message Validation for DAR and DAC\n   A node MUST silently discard any\
    \ received DAR and DAC messages for\n   which at least one of the following validity\
    \ checks is not satisfied:\n   o  If the message includes an IP Authentication\
    \ Header, the message\n      authenticates correctly.\n   o  ICMP Checksum is\
    \ valid.\n   o  ICMP Code is 0.\n   o  ICMP Length (derived from the IP length)\
    \ is 32 or more bytes.\n   o  The Registered Address is not a multicast address.\n\
    \   o  All included options have a length that is greater than zero.\n   o  The\
    \ IP source address is not the unspecified address, nor is it a\n      multicast\
    \ address.\n   The contents of the Reserved field and of any unrecognized options\n\
    \   MUST be ignored.  Future backward-compatible changes to the protocol\n   may\
    \ specify the contents of the Reserved field or add new options;\n   backward-incompatible\
    \ changes may use different Code values.\n   Note that due to the forwarding of\
    \ the DAR and DAC messages between\n   the 6LR and 6LBR, there is no hop-limit\
    \ check on receipt for these\n   ICMPv6 message types.\n"
- title: 8.2.2.  Conceptual Data Structures
  contents:
  - "8.2.2.  Conceptual Data Structures\n   A 6LBR implementing multihop DAD needs\
    \ to maintain some state\n   separate from the Neighbor Cache.  We call this conceptual\
    \ data\n   structure the DAD table.  It is indexed by the IPv6 address -- the\n\
    \   Registered Address in the DAR -- and contains the EUI-64 and the\n   Registration\
    \ Lifetime of the host that is using that address.\n"
- title: 8.2.3.  6LR Sending a Duplicate Address Request
  contents:
  - "8.2.3.  6LR Sending a Duplicate Address Request\n   When a 6LR that implements\
    \ multihop DAD receives an NS from a host,\n   and subject to the above checks,\
    \ the 6LR forms and sends a DAR to at\n   least one 6LBR.  The DAR contains the\
    \ following information:\n   o  In the IPv6 source address, a global address of\
    \ the 6LR.\n   o  In the IPv6 destination address, the address of the 6LBR.\n\
    \   o  In the IPv6 hop limit, MULTIHOP_HOPLIMIT.\n   o  The Status field MUST\
    \ be set to zero.\n   o  The EUI-64 and Registration Lifetime are copied from\
    \ the ARO\n      received from the host.\n   o  The Registered Address set to\
    \ the IPv6 address of the host, that\n      is, the sender of the triggering NS.\n\
    \   When a 6LR receives an NS from a host with a zero Registration\n   Lifetime,\
    \ then, in addition to removing the NCE for the host as\n   specified in Section\
    \ 6, a DAR is sent to the 6LBRs as above.\n   A router MUST NOT modify the Neighbor\
    \ Cache as a result of receiving\n   a DAR.\n"
- title: 8.2.4.  6LBR Receiving a Duplicate Address Request
  contents:
  - "8.2.4.  6LBR Receiving a Duplicate Address Request\n   When a 6LBR that implements\
    \ the substitutable multihop DAD receives a\n   DAR from a 6LR, it performs the\
    \ message validation specified in\n   Section 8.2.1.  If the DAR is valid, the\
    \ 6LBR proceeds to look for\n   the Registration Address in the DAD table.  If\
    \ an entry is found and\n   the recorded EUI-64 is different than the EUI-64 in\
    \ the DAR, then it\n   returns a DAC NA with the Status set to 1 ('Duplicate Address').\n\
    \   Otherwise, it returns a DAC with Status set to zero and updates the\n   lifetime.\n\
    \   If no entry is found in the DAD table and the Registration Lifetime\n   is\
    \ non-zero, then an entry is created and the EUI-64 and Registered\n   Address\
    \ from the DAR are stored in that entry.\n   If an entry is found in the DAD table,\
    \ the EUI-64 matches, and the\n   Registration Lifetime is zero, then the entry\
    \ is deleted from the\n   table.\n   In both of the above cases, the 6LBR forms\
    \ a DAC with the information\n   copied from the DAR and the Status field is set\
    \ to zero.  The DAC is\n   sent back to the 6LR, i.e., back to the source of the\
    \ DAR.  The IPv6\n   hop limit is set to MULTIHOP_HOPLIMIT.\n"
- title: 8.2.5.  Processing a Duplicate Address Confirmation
  contents:
  - "8.2.5.  Processing a Duplicate Address Confirmation\n   When a 6LR implementing\
    \ multihop DAD receives a DAC message, then it\n   first validates the message\
    \ per Section 8.2.1.  For a valid DAC, if\n   there is no Tentative NCE matching\
    \ the Registered Address and EUI-64,\n   then the DAC is silently ignored.  Otherwise,\
    \ the information in the\n   DAC and in the Tentative NCE is used to form an NA\
    \ to send to the\n   host.  The Status code is copied from the DAC to the ARO\
    \ that is sent\n   to the host.  In the case where the DAC indicates an error\
    \ (the\n   Status is non-zero), the NA is returned to the host as described in\n\
    \   Section 6.5.2, and the Tentative NCE for the Registered Address is\n   removed.\
    \  Otherwise, it is made into a Registered NCE.\n   A router MUST NOT modify the\
    \ Neighbor Cache as a result of receiving\n   a DAC, unless there is a Tentative\
    \ NCE matching the IPv6 address and\n   EUI-64.\n"
- title: 8.2.6.  Recovering from Failures
  contents:
  - "8.2.6.  Recovering from Failures\n   If there is no response from a 6LBR after\
    \ RETRANS_TIMER [RFC4861],\n   then the 6LR would retransmit the DAR to the 6LBR\
    \ up to\n   MAX_UNICAST_SOLICIT [RFC4861] times.  After this, the 6LR SHOULD\n\
    \   respond to the host with an ARO Status of zero.\n"
- title: 9.  Protocol Constants
  contents:
  - "9.  Protocol Constants\n   This section defines the relevant protocol constants\
    \ used in this\n   document based on a subset of [RFC4861] constants.  \"*\" indicates\n\
    \   constants modified from [RFC4861], and \"+\" indicates new constants.\n  \
    \ Additional protocol constants are defined in Section 4.\n   6LBR Constants:\n\
    \   MIN_CONTEXT_CHANGE_DELAY+               300 seconds\n   6LR Constants:\n \
    \  MAX_RTR_ADVERTISEMENTS                  3 transmissions\n   MIN_DELAY_BETWEEN_RAS*\
    \                  10 seconds\n   MAX_RA_DELAY_TIME*                      2 seconds\n\
    \   TENTATIVE_NCE_LIFETIME+                 20 seconds\n   Router Constants:\n\
    \   MULTIHOP_HOPLIMIT+                      64\n   Host Constants:\n   RTR_SOLICITATION_INTERVAL*\
    \              10 seconds\n   MAX_RTR_SOLICITATIONS                   3 transmissions\n\
    \   MAX_RTR_SOLICITATION_INTERVAL+          60 seconds\n"
- title: 10.  Examples
  contents:
  - '10.  Examples

    '
- title: 10.1.  Message Examples
  contents:
  - "10.1.  Message Examples\n   STEP\n      6LN                                 \
    \                       6LR\n       |                                        \
    \                  |\n   1.  |       ---------- Router Solicitation -------->\
    \           |\n       |                       [SLLAO]                        \
    \    |\n       |                                                          |\n\
    \   2.  |       <-------- Router Advertisement ---------           |\n       |\
    \              [PIO + 6CO + ABRO + SLLAO]                  |\n     Figure 2: Basic\
    \ Router Solicitation/Router Advertisement Exchange\n                     between\
    \ a Node and a 6LR or 6LBR\n      6LN                                        \
    \                6LR\n       |                                               \
    \           |\n   1.  |       ------- NS with Address Registration ------>   \
    \    |\n       |                     [ARO + SLLAO]                        |\n\
    \       |                                                          |\n   2.  |\
    \       <----- NA with Address Registration --------       |\n       |       \
    \            [ARO with Status]                      |\n             Figure 3:\
    \ Neighbor Discovery Address Registration\n      6LN                         \
    \  6LR                          6LBR\n       |                             | \
    \                            |\n   1.  | --- NS with Address Reg --> |       \
    \                      |\n       |      [ARO + SLLAO]          |             \
    \                |\n       |                             |                   \
    \          |\n   2.  |                             | ----------- DAR ---------->\
    \ |\n       |                             |                             |\n  \
    \ 3.  |                             | <---------- DAC ----------- |\n       |\
    \                             |                             |\n   4.  | <-- NA\
    \ with Address Reg --- |                             |\n       |      [ARO with\
    \ Status]      |\n    Figure 4: Neighbor Discovery Address Registration with Multihop\
    \ DAD\n"
- title: 10.2.  Host Bootstrapping Example
  contents:
  - "10.2.  Host Bootstrapping Example\n   The following example describes the address\
    \ bootstrapping scenarios\n   using the improved ND mechanisms specified in this\
    \ document.  It is\n   assumed that the 6LN first performs a sequence of operations\
    \ in order\n   to get secure access at the link layer of the LoWPAN and obtain\
    \ a key\n   for link-layer security.  The methods of how to establish link-layer\n\
    \   security are out of scope of this document.  In this example, an IEEE\n  \
    \ 802.15.4 6LN forms a 16-bit short IPv6 address without using DHCPv6\n   (i.e.,\
    \ the M flag is not set in the RAs).\n   1.  After obtaining link-layer security,\
    \ a 6LN assigns a link-local\n       IPv6 address to itself.  A link-local IPv6\
    \ address is configured\n       based on the 6LN's EUI-64 link-layer address formed\
    \ as per\n       [RFC4944].\n   2.  Next, the 6LN determines one or more default\
    \ routers in the\n       network by sending an RS to the all-routers multicast\
    \ address\n       with the SLLAO set to its EUI-64 link-local address.  If the\
    \ 6LN\n       was able to obtain the link-layer address of a router through its\n\
    \       link-layer operations, then the 6LN may form a link-local\n       destination\
    \ IPv6 address for the router and send it a unicast RS.\n       The 6LR responds\
    \ with a unicast RA to the IP source address using\n       the SLLAO from the\
    \ RS (it may have created a Tentative NCE).  See\n       Figure 2.\n   3.  In\
    \ order to communicate more than one IP hop away, the 6LN\n       configures a\
    \ global IPv6 address.  In order to save overhead,\n       this 6LN wishes to\
    \ configure its IPv6 address based on a 16-bit\n       short address as per [RFC4944].\
    \  As the network is unmanaged\n       (M flag not set in the RA), the 6LN randomly\
    \ chooses a 16-bit\n       link-layer address and forms a Tentative IPv6 address\
    \ from it.\n   4.  Next, the 6LN registers that address with one or more of its\n\
    \       default routers by sending a unicast NS message with an ARO\n       containing\
    \ its Tentative global IPv6 address to register, the\n       Registration Lifetime,\
    \ and its EUI-64.  An SLLAO is also included\n       with the link-layer address\
    \ corresponding to the address being\n       registered.  If a successful (Status\
    \ 0) NA message is received,\n       the address can then be used, and the 6LN\
    \ assumes that it has\n       been successfully checked for duplicates.  If a\
    \ duplicate address\n       (Status 1) NA message is received, the 6LN then removes\
    \ the\n       temporary IPv6 address and 16-bit link-layer address and goes\n\
    \       back to step 3.  If a Neighbor Cache Full (Status 2) message is\n    \
    \   received, the 6LN attempts to register with another default\n       router\
    \ or, if none, goes back to step 2.  See Figure 3.  Note\n       that an NA message\
    \ returning an error would be sent back to the\n       link-local EUI-64-based\
    \ IPv6 address of the 6LN instead of the\n       16-bit (duplicate) address.\n\
    \   5.  The 6LN now performs maintenance by sending a new NS address\n       registration\
    \ before the lifetime expires.\n   If multihop DAD and multihop prefix and context\
    \ distribution are\n   used, the effect of the 6LRs and hosts following the above\n\
    \   bootstrapping process is a \"wavefront\" of 6LRs and hosts being\n   configured,\
    \ spreading outward from the 6LBRs: First, the hosts and\n   6LRs that can directly\
    \ reach a 6LBR would receive one or more RAs and\n   then configure and register\
    \ their IPv6 addresses.  Once that is done,\n   they would enable the routing\
    \ protocol and start sending out RAs.\n   That would result in a new set of 6LRs\
    \ and hosts to receive responses\n   to their RSs, form and register their addresses,\
    \ etc.  That repeats\n   until all of the 6LRs and hosts have been configured.\n"
- title: 10.2.1.  Host Bootstrapping Messages
  contents:
  - "10.2.1.  Host Bootstrapping Messages\n   This section provides specific message\
    \ examples related to the\n   bootstrapping process described above.  When discussing\
    \ messages, the\n   following notation is used:\n   LL64:  Link-local address\
    \ based on the EUI-64, which is also the\n      802.15.4 long address.\n   GP16:\
    \  Global address based on the 802.15.4 short address.  This\n      address may\
    \ not be unique.\n   GP64:  Global addresses derived from the EUI-64 address as\
    \ specified\n      in [RFC4944].\n   MAC64:  EUI-64 address used as the link-layer\
    \ address.\n   MAC16:  IEEE 802.15.4 16-bit short address.\n   Note that some\
    \ implementations may use LL64 and GP16 style addresses\n   instead of LL64 and\
    \ GP64.  In the following, we will show an example\n   message flow as to how\
    \ a node uses LL64 to register a GP16 address\n   for multihop DAD verification.\n\
    \    6LN-----RS-------->6LR\n     Src= LL64 (6LN)\n     Dst= all-router-link-scope-multicast\n\
    \     SLLAO= MAC64 (6LN)\n    6LR------RA--------->6LN\n     Src= LL64 (6LR)\n\
    \     Dst= LL64 (6LN)\n   Note: Source address of RA must be a link-local\n  \
    \ address (Section 4.2 of RFC 4861).\n    6LN-------NS Reg------>6LR\n     Src=\
    \ GP16 (6LN)\n     Dst= LL64 (6LR)\n     ARO\n     SLLAO= MAC16 (6LN)\n    6LR---------DAR----->6LBR\n\
    \     Src= GP64 or GP16 (6LR)\n     Dst= GP64 or GP16 (6LBR)\n     Registered\
    \ Address= GP16 (6LN) and EUI-64 (6LN)\n    6LBR-------DAC--------->6LR\n    \
    \ Src= GP64 or GP16 (6LBR)\n     Dst= GP64 or GP16 (6LR)\n     Copy of information\
    \ from DAR\n    If Status is a success:\n    6LR ---------NA-Reg------->6LN\n\
    \     Src= LL64 (6LR)\n     Dst= GP16 (6LN)\n     ARO with Status = 0\n    If\
    \ Status is not a success:\n    6LR ---------NA-Reg-------->6LN\n     Src= LL64\
    \ (6LR)\n     Dst= LL64 (6LN) --> Derived from the EUI-64 of ARO\n     ARO with\
    \ Status > 0\n                Figure 5: Detailed Message Address Examples\n"
- title: 10.3.  Router Interaction Example
  contents:
  - "10.3.  Router Interaction Example\n   In the route-over topology, when a routing\
    \ protocol is run across\n   6LRs, the bootstrapping and Neighbor Cache management\
    \ are handled a\n   little differently.  The description in this paragraph provides\
    \ only\n   a guideline for an implementation.\n   At the initialization of a 6LR,\
    \ it may choose to bootstrap as a host\n   with the help of a parent 6LR if the\
    \ substitutable multihop DAD is\n   performed with the 6LBR.  The Neighbor Cache\
    \ management of a router\n   and address resolution among the neighboring routers\
    \ are described in\n   Sections 6.5.3 and 6.5.5, respectively.  In this example,\
    \ we assume\n   that the neighboring 6LoWPAN link is secure.\n"
- title: 10.3.1.  Bootstrapping a Router
  contents:
  - "10.3.1.  Bootstrapping a Router\n   In this scenario, the bootstrapping 6LR,\
    \ 'R1', is multiple hops away\n   from the 6LBR and surrounded by other 6LR neighbors.\
    \  Initially, R1\n   behaves as a host.  It sends a multicast RS and receives\
    \ an RA from\n   one or more neighboring 6LRs.  R1 picks one 6LR as its temporary\n\
    \   default router and performs address resolution via this default\n   router.\
    \  Note that if multihop DAD is not required (e.g., in a\n   managed network or\
    \ using EUI-64-based addresses), then it does not\n   need to pick a temporary\
    \ default router; however, it may still want\n   to send the initial RS message\
    \ if it wants to autoconfigure its\n   address with the global prefix disseminated\
    \ by the 6LBR.\n   Based on the information received in the RAs, R1 updates its\
    \ cache\n   with entries for all the neighboring 6LRs.  Upon completion of the\n\
    \   address registration, the bootstrapping router deletes the temporary\n   entry\
    \ of the default router, and the routing protocol is started.\n   Also note that\
    \ R1 may refresh its multihop DAD registration directly\n   with the 6LBR (using\
    \ the next-hop neighboring 6LR determined by the\n   routing protocol for reaching\
    \ the 6LBR).\n"
- title: 10.3.2.  Updating the Neighbor Cache
  contents:
  - "10.3.2.  Updating the Neighbor Cache\n   In this example, there are three 6LRs:\
    \ R1, R2, and R3.  Initially,\n   when R2 boots, it sees only R1, and accordingly\
    \ R2 creates an NCE for\n   R1.  Now assume that R2 receives a valid routing update\
    \ from router\n   R3.  R2 does not have any NCE for R3.  If the implementation\
    \ of R2\n   supports detecting link-layer addresses from the routing information\n\
    \   packets, then it directly updates its Neighbor Cache using that\n   link-layer\
    \ information.  If this is not possible, then R2 should\n   perform multicast\
    \ NS with the source set with its link-local or\n   global address, depending\
    \ on the scope of the source IP address\n   received in the routing update packet.\
    \  The target address of the NS\n   message is the source IPv6 address of the\
    \ received routing update\n   packet.  The format of the NS message is as described\
    \ in Section 4.3\n   of [RFC4861].\n   More generally, any 6LR that receives a\
    \ valid route update from a\n   neighboring router for which it does not have\
    \ any NCE is required to\n   update its Neighbor Cache as described above.\n \
    \  The router (6LR and 6LBR) IP addresses learned via ND are not\n   redistributed\
    \ to the routing protocol.\n"
- title: 11.  Security Considerations
  contents:
  - "11.  Security Considerations\n   The security considerations of IPv6 ND [RFC4861]\
    \ and address\n   autoconfiguration [RFC4862] apply.  Additional considerations\
    \ can be\n   found in [RFC3756].\n   There is a slight modification to those considerations,\
    \ due to the\n   fact that in this specification the M flag in the RAs disables\
    \ the\n   use of stateless address autoconfiguration for addresses not derived\n\
    \   from EUI-64.  Thus, a rogue router on the link can force the use of\n   only\
    \ DHCP for short addresses, whereas in [RFC4861] and [RFC4862] the\n   rogue router\
    \ could only cause the addition of DHCP and not disable\n   stateless address\
    \ autoconfiguration for short addresses.\n   This specification assumes that the\
    \ link layer is sufficiently\n   protected -- for instance, by using MAC-sublayer\
    \ cryptography.  Thus,\n   its threat model is no different from that of IPv6\
    \ ND [RFC4861].  The\n   first trust model listed in Section 3 of [RFC3756] applies\
    \ here.\n   However, any future 6LoWPAN security protocol that applies to ND for\n\
    \   the 6LoWPAN protocol is out of scope of this document.\n   The multihop DAD\
    \ mechanisms rely on DAR and DAC messages that are\n   forwarded by 6LRs, and\
    \ as a result the hop_limit=255 check on the\n   receiver does not apply to those\
    \ messages.  This implies that any\n   node on the Internet could successfully\
    \ send such messages.  We avoid\n   any additional security issues due to this\
    \ by requiring that the\n   routers never modify the NCE due to such messages,\
    \ and that they\n   discard them unless they are received on an interface that\
    \ has been\n   explicitly configured to use these optimizations.\n   In some future\
    \ deployments, one might want to use SEcure Neighbor\n   Discovery (SEND) [RFC3971]\
    \ [RFC3972].  This is possible with the ARO\n   as sent between hosts and routers,\
    \ since the address that is being\n   registered is the IPv6 source address of\
    \ the NS and SEND verifies the\n   IPv6 source address of the packet.  Applying\
    \ SEND to the router-to-\n   router communication in this document is out of scope.\n"
- title: 12.  IANA Considerations
  contents:
  - "12.  IANA Considerations\n   This document registers three new ND option types\
    \ under the\n   subregistry \"IPv6 Neighbor Discovery Option Formats\":\n   o\
    \  Address Registration Option (33)\n   o  6LoWPAN Context Option (34)\n   o \
    \ Authoritative Border Router Option (35)\n   The document registers two new ICMPv6\
    \ \"type\" numbers under the\n   subregistry \"ICMPv6 \"type\" Numbers\":\n  \
    \ o  Duplicate Address Request (157)\n   o  Duplicate Address Confirmation (158)\n\
    \   IANA has also created a new subregistry for the Status values of the\n   Address\
    \ Registration Option, under the ICMPv6 parameters registry.\n   Address Registration\
    \ Option Status Values registry:\n   o  Possible values are 8-bit unsigned integers\
    \ (0..255).\n   o  Registration procedure is \"Standards Action\" [RFC5226].\n\
    \   o  Initial allocation is as indicated in Table 2:\n          +--------+--------------------------------------------+\n\
    \          | Status |                 Description                |\n         \
    \ +--------+--------------------------------------------+\n          |    0  \
    \ |                   Success                  |\n          |    1   |       \
    \       Duplicate Address             |\n          |    2   |             Neighbor\
    \ Cache Full            |\n          |  3-255 | Allocated using Standards Action\
    \ [RFC5226] |\n          +--------+--------------------------------------------+\n\
    \                                  Table 2\n"
- title: 13.  Interaction with Other Neighbor Discovery Extensions
  contents:
  - "13.  Interaction with Other Neighbor Discovery Extensions\n   There are two classes\
    \ of ND extensions that interact with this\n   specification in different ways.\n\
    \   One class encompasses extensions to the DAD mechanisms in [RFC4861]\n   and\
    \ [RFC4862].  An example of this is Optimistic DAD [RFC4429].  Such\n   extensions\
    \ do not apply when this specification is being used, since\n   it uses ARO for\
    \ DAD (which is neither optimistic nor pessimistic --\n   always one round trip\
    \ to the router to check DAD).\n   All other (non-DAD) ND extensions, be they\
    \ path selection types like\n   default router preferences [RFC4191], configuration\
    \ types like DNS\n   configuration [RFC6106], or other types like Detecting Network\n\
    \   Attachment [RFC6059], are completely orthogonal to this specification\n  \
    \ and will work as is.\n"
- title: 14.  Guidelines for New Features
  contents:
  - "14.  Guidelines for New Features\n   This section discusses guidelines of new\
    \ protocol features defined in\n   this document.  It also sets some expectations\
    \ for implementation and\n   deployment of these features.  This section is informative\
    \ in nature:\n   it does not override the detailed specifications of the previous\n\
    \   sections but summarizes them and presents them in a compact form, to\n   be\
    \ used as checklists.  The checklists act as guidelines to indicate\n   the possible\
    \ importance of a feature in terms of a deployment as per\n   information available\
    \ as of the writing of the document.  Note that\n   in some cases the deployment\
    \ is 'SHOULD' where the implementation is\n   a 'MUST'.  This is due to the presence\
    \ of substitutable features; the\n   deployment may use alternative methods for\
    \ those.  Therefore,\n   implementing a configuration knob is recommended for\
    \ the\n   substitutable features.  The lists emphasize conciseness over\n   completeness.\n\
    \   +----------+-----------------------------------+--------+-----------+\n  \
    \ | Section  | Description                       | Deploy | Implement |\n   +----------+-----------------------------------+--------+-----------+\n\
    \   | 3.1      | Host-initiated RA                 | MUST   | MUST      |\n  \
    \ | 3.2      | EUI-64-based IPv6 address         | MUST   | MUST      |\n   |\
    \          | 16-bit MAC-based address          | MAY    | SHOULD    |\n   |  \
    \        | Other non-unique addresses        | MAY    | MAY       |\n   | 3.3\
    \      | Host-initiated RS                 | MUST   | MUST      |\n   |      \
    \    | ABRO processing                   | SHOULD | MUST      |\n   | 4.1    \
    \  | Registration with ARO             | MUST   | MUST      |\n   | 4.2, 5.4 |\
    \ 6CO                               | SHOULD | SHOULD    |\n   | 5.2      | Joining\
    \ solicited-node multicast  | N/A    | N/A       |\n   |          | Joining all-nodes\
    \ multicast       | MUST   | MUST      |\n   |          | Using link-layer indication\
    \ for   | MAY    | MAY       |\n   |          | NUD                          \
    \     |        |           |\n   | 5.5      | 6LoWPAN-ND NUD                 \
    \   | MUST   | MUST      |\n   | 5.8.2    | Behavior on wakeup               \
    \ | SHOULD | SHOULD    |\n   +----------+-----------------------------------+--------+-----------+\n\
    \           Table 3: Guideline for 6LoWPAN-ND Features for Hosts\n   +---------------+-------------------------+------------+------------+\n\
    \   | Section       | Description             | Deploy     | Implement  |\n  \
    \ +---------------+-------------------------+------------+------------+\n   |\
    \ 3.1           | Periodic RA             | SHOULD NOT | SHOULD NOT |\n   | 3.2\
    \           | Address assignment      | SHOULD     | MUST       |\n   |      \
    \         | during startup          |            |            |\n   | 3.3    \
    \       | Supporting EUI-64-based | MUST       | MUST       |\n   |          \
    \     | MAC hosts               |            |            |\n   |            \
    \   | Supporting 16-bit MAC   | MAY        | SHOULD     |\n   |              \
    \ | hosts                   |            |            |\n   | 3.4, 4.3,     |\
    \ ABRO processing/sending | SHOULD     | MUST       |\n   | 8.1.3, 8.1.4  |  \
    \                       |            |            |\n   | 8.1           | Multihop\
    \ prefix storing | SHOULD     | MUST       |\n   |               | and redistribution\
    \      |            |            |\n   | 3.5           | Tentative NCE       \
    \    | MUST       | MUST       |\n   | 8.2           | Multihop DAD          \
    \  | SHOULD     | MUST       |\n   | 4.1, 6.5,     | ARO support             |\
    \ MUST       | MUST       |\n   | 6.5.1 - 6.5.5 |                         |  \
    \          |            |\n   | 4.2           | 6CO                     | SHOULD\
    \     | SHOULD     |\n   | 6.3           | Process RS/ABRO         | MUST    \
    \   | MUST       |\n   +---------------+-------------------------+------------+------------+\n\
    \             Table 4: Guideline for 6LR Features in 6LoWPAN-ND\n   +--------------+--------------------------+------------+------------+\n\
    \   | Section      | Description              | Deploy     | Implement  |\n  \
    \ +--------------+--------------------------+------------+------------+\n   |\
    \ 3.1          | Periodic RA              | SHOULD NOT | SHOULD NOT |\n   | 3.2\
    \          | Address autoconf on      | MUST NOT   | MUST NOT   |\n   |      \
    \        | router interface         |            |            |\n   | 3.3    \
    \      | EUI-64 MAC support on    | MUST       | MUST       |\n   |          \
    \    | 6LoWPAN interface        |            |            |\n   | 8.1 - 8.1.1,\
    \ | Multihop prefix          | SHOULD     | MUST       |\n   | 8.1.5        |\
    \ distribution             |            |            |\n   | 8.2          | Multihop\
    \ DAD             | SHOULD     | MUST       |\n   +--------------+--------------------------+------------+------------+\n\
    \            Table 5: Guideline for 6LBR Features in 6LoWPAN-ND\n"
- title: 15.  Acknowledgments
  contents:
  - "15.  Acknowledgments\n   The authors thank Pascal Thubert, Jonathan Hui, Richard\
    \ Kelsey, Geoff\n   Mulligan, Julien Abeille, Alexandru Petrescu, Peter Siklosi,\
    \ Pieter\n   De Mil, Fred Baker, Anthony Schoofs, Phil Roberts, Daniel Gavelle,\n\
    \   Joseph Reddy, Robert Cragie, Mathilde Durvy, Colin O'Flynn, Dario\n   Tedeschi,\
    \ Esko Dijk, and Joakim Eriksson for useful discussions and\n   comments that\
    \ have helped shape and improve this document.\n   Additionally, the authors would\
    \ like to recognize Pascal Thubert for\n   contributing the original registration\
    \ idea and for extensive\n   contributions to earlier versions of the document,\
    \ Jonathan Hui for\n   original ideas on prefix/context distribution and extensive\n\
    \   contributions to earlier versions of the document, Colin O'Flynn for\n   useful\
    \ \"Error-to\" suggestions (Section 6.5.2) and for contributions\n   to the Examples\
    \ section, Geoff Mulligan for suggesting the use of\n   address registration as\
    \ part of existing IPv6 ND messages, and\n   Mathilde Durvy for helping to clarify\
    \ router interaction.\n"
- title: 16.  References
  contents:
  - '16.  References

    '
- title: 16.1.  Normative References
  contents:
  - "16.1.  Normative References\n   [ETHERNET]\n              \"IEEE Standard for\
    \ Information technology -\n              Telecommunications and information exchange\
    \ between\n              systems - Local and metropolitan area networks - Specific\n\
    \              requirements - Part 3: Carrier Sense Multiple Access with\n   \
    \           Collision Detection (CSMA/CD) Access Method and Physical\n       \
    \       Layer Specifications\", IEEE Std 802.3-2008, December 2008,\n        \
    \      <http://standards.ieee.org/getieee802/download/\n              802.3-2008_section1.pdf>.\n\
    \   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n        \
    \      Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2460]  Deering,\
    \ S. and R. Hinden, \"Internet Protocol, Version 6\n              (IPv6) Specification\"\
    , RFC 2460, December 1998.\n   [RFC2491]  Armitage, G., Schulter, P., Jork, M.,\
    \ and G. Harter, \"IPv6\n              over Non-Broadcast Multiple Access (NBMA)\
    \ networks\",\n              RFC 2491, January 1999.\n   [RFC4191]  Draves, R.\
    \ and D. Thaler, \"Default Router Preferences and\n              More-Specific\
    \ Routes\", RFC 4191, November 2005.\n   [RFC4193]  Hinden, R. and B. Haberman,\
    \ \"Unique Local IPv6 Unicast\n              Addresses\", RFC 4193, October 2005.\n\
    \   [RFC4291]  Hinden, R. and S. Deering, \"IP Version 6 Addressing\n        \
    \      Architecture\", RFC 4291, February 2006.\n   [RFC4443]  Conta, A., Deering,\
    \ S., and M. Gupta, \"Internet Control\n              Message Protocol (ICMPv6)\
    \ for the Internet Protocol\n              Version 6 (IPv6) Specification\", RFC\
    \ 4443, March 2006.\n   [RFC4861]  Narten, T., Nordmark, E., Simpson, W., and\
    \ H. Soliman,\n              \"Neighbor Discovery for IP version 6 (IPv6)\", RFC\
    \ 4861,\n              September 2007.\n   [RFC4862]  Thomson, S., Narten, T.,\
    \ and T. Jinmei, \"IPv6 Stateless\n              Address Autoconfiguration\",\
    \ RFC 4862, September 2007.\n   [RFC4944]  Montenegro, G., Kushalnagar, N., Hui,\
    \ J., and D. Culler,\n              \"Transmission of IPv6 Packets over IEEE 802.15.4\n\
    \              Networks\", RFC 4944, September 2007.\n   [RFC5226]  Narten, T.\
    \ and H. Alvestrand, \"Guidelines for Writing an\n              IANA Considerations\
    \ Section in RFCs\", BCP 26, RFC 5226,\n              May 2008.\n   [RFC6282]\
    \  Hui, J. and P. Thubert, \"Compression Format for IPv6\n              Datagrams\
    \ over IEEE 802.15.4-Based Networks\", RFC 6282,\n              September 2011.\n"
- title: 16.2.  Informative References
  contents:
  - "16.2.  Informative References\n   [EUI64]    IEEE, \"Guidelines for 64-bit Global\
    \ Identifier\n              (EUI-64(TM)) Registration Authority\", <http://\n\
    \              standards.ieee.org/regauth/oui/tutorials/EUI64.html>.\n   [RFC3315]\
    \  Droms, R., Bound, J., Volz, B., Lemon, T., Perkins, C.,\n              and\
    \ M. Carney, \"Dynamic Host Configuration Protocol for\n              IPv6 (DHCPv6)\"\
    , RFC 3315, July 2003.\n   [RFC3633]  Troan, O. and R. Droms, \"IPv6 Prefix Options\
    \ for Dynamic\n              Host Configuration Protocol (DHCP) version 6\", RFC\
    \ 3633,\n              December 2003.\n   [RFC3756]  Nikander, P., Kempf, J.,\
    \ and E. Nordmark, \"IPv6 Neighbor\n              Discovery (ND) Trust Models\
    \ and Threats\", RFC 3756,\n              May 2004.\n   [RFC3971]  Arkko, J.,\
    \ Kempf, J., Zill, B., and P. Nikander, \"SEcure\n              Neighbor Discovery\
    \ (SEND)\", RFC 3971, March 2005.\n   [RFC3972]  Aura, T., \"Cryptographically\
    \ Generated Addresses (CGA)\",\n              RFC 3972, March 2005.\n   [RFC4429]\
    \  Moore, N., \"Optimistic Duplicate Address Detection (DAD)\n              for\
    \ IPv6\", RFC 4429, April 2006.\n   [RFC4919]  Kushalnagar, N., Montenegro, G.,\
    \ and C. Schumacher, \"IPv6\n              over Low-Power Wireless Personal Area\
    \ Networks (6LoWPANs):\n              Overview, Assumptions, Problem Statement,\
    \ and Goals\",\n              RFC 4919, August 2007.\n   [RFC4941]  Narten, T.,\
    \ Draves, R., and S. Krishnan, \"Privacy\n              Extensions for Stateless\
    \ Address Autoconfiguration in\n              IPv6\", RFC 4941, September 2007.\n\
    \   [RFC5889]  Baccelli, E. and M. Townsley, \"IP Addressing Model in Ad\n   \
    \           Hoc Networks\", RFC 5889, September 2010.\n   [RFC6059]  Krishnan,\
    \ S. and G. Daley, \"Simple Procedures for\n              Detecting Network Attachment\
    \ in IPv6\", RFC 6059,\n              November 2010.\n   [RFC6106]  Jeong, J.,\
    \ Park, S., Beloeil, L., and S. Madanapalli,\n              \"IPv6 Router Advertisement\
    \ Options for DNS Configuration\",\n              RFC 6106, November 2010.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Zach Shelby (editor)\n   Sensinode\n   Konekuja 2\n  \
    \ Oulu  90620\n   Finland\n   Phone: +358407796297\n   EMail: zach@sensinode.com\n\
    \   Samita Chakrabarti\n   Ericsson\n   EMail: samita.chakrabarti@ericsson.com\n\
    \   Erik Nordmark\n   Cisco Systems\n   EMail: nordmark@cisco.com\n   Carsten\
    \ Bormann\n   Universitaet Bremen TZI\n   Postfach 330440\n   Bremen  D-28359\n\
    \   Germany\n   Phone: +49-421-218-63921\n   EMail: cabo@tzi.org\n"
