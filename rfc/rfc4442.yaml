- title: __initial_text__
  contents:
  - "                             Bootstrapping\n      Timed Efficient Stream Loss-Tolerant\
    \ Authentication (TESLA)\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   TESLA, the Timed Efficient Stream Loss-tolerant Authentication\n\
    \   protocol, provides source authentication in multicast scenarios.\n   TESLA\
    \ is an efficient protocol with low communication and computation\n   overhead\
    \ that scales to large numbers of receivers and also tolerates\n   packet loss.\
    \  TESLA is based on loose time synchronization between\n   the sender and the\
    \ receivers.  Source authentication is realized in\n   TESLA by using Message\
    \ Authentication Code (MAC) chaining.  The use\n   of TESLA within the Secure\
    \ Real-time Transport Protocol (SRTP) has\n   been published, targeting multicast\
    \ authentication in scenarios where\n   SRTP is applied to protect the multimedia\
    \ data.  This solution\n   assumes that TESLA parameters are made available by\
    \ out-of-band\n   mechanisms.\n   This document specifies payloads for the Multimedia\
    \ Internet Keying\n   (MIKEY) protocol for bootstrapping TESLA for source authentication\
    \ of\n   secure group communications using SRTP.  TESLA may be bootstrapped\n\
    \   using one of the MIKEY key management approaches, e.g., by using a\n   digitally\
    \ signed MIKEY message sent via unicast, multicast, or\n   broadcast.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Terminology .....................................................4\n  \
    \ 3. TESLA Parameter Overview ........................................4\n   4.\
    \ Parameter Encoding within MIKEY .................................6\n      4.1.\
    \ Security Policy (SP) Payload ...............................6\n      4.2. TESLA\
    \ Policy ...............................................7\n      4.3. Time Synchronization\
    \ .......................................8\n      4.4. Key Data Transport within\
    \ MIKEY's General\n           Extension Payload .........................................10\n\
    \   5. Security Considerations ........................................11\n  \
    \    5.1. Man-in-the-Middle Attack ..................................11\n    \
    \  5.2. Downgrading Attack ........................................12\n      5.3.\
    \ Denial of Service Attack ..................................12\n      5.4. Replay\
    \ Attack .............................................13\n      5.5. Traffic Analysis\
    \ ..........................................13\n   6. IANA Considerations ............................................14\n\
    \   7. Acknowledgements ...............................................15\n  \
    \ 8. References .....................................................16\n    \
    \  8.1. Normative References ......................................16\n      8.2.\
    \ Informative References ....................................16\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   In many multicast, broadcast, and unicast communication\
    \ scenarios, it\n   is necessary to guarantee that a received message has been\
    \ sent from\n   a dedicated source and has not been altered in transit.  In unicast\n\
    \   communication, commonly a pairwise security association exists that\n   enables\
    \ the validation of message integrity and data origin.  The\n   approach in group-based\
    \ communication is different, as here a key is\n   normally shared between the\
    \ members of a group and thus may not be\n   used for data origin authentication.\
    \  As in some applications a\n   dedicated identification of a sender is required,\
    \ there exists the\n   requirement to support data origin authentication also\
    \ in multicast\n   scenarios.  One of the methods supporting this is TESLA [RFC4082].\n\
    \   TESLA provides source authentication in multicast scenarios by using\n   MAC\
    \ chaining.  It is based on loose time synchronization between the\n   sender\
    \ and the receivers.\n   [RFC4383] describes extensions for SRTP [RFC3711] in\
    \ order to support\n   TESLA [RFC4082] for source authentication in multicast\
    \ scenarios.\n   SRTP needs dedicated cryptographic context describing the security\n\
    \   parameter and security policy per multimedia session to be protected.\n  \
    \ This cryptographic context needs to be enhanced with a set of TESLA\n   parameters.\
    \  It is necessary to provide these parameters before the\n   actual multicast\
    \ session starts.  [RFC4383] does not address the\n   bootstrapping for these\
    \ parameters.\n   This document details bootstrapping of TESLA parameters in terms\
    \ of\n   parameter distribution for TESLA policy as well as the initial key,\n\
    \   using the Multimedia Internet Keying (MIKEY) [RFC3830] protocol.\n   MIKEY\
    \ defines an authentication and key management framework that can\n   be used\
    \ for real-time applications (both for peer-to-peer\n   communication and group\
    \ communication).  In particular, [RFC3830] is\n   defined in a way that is intended\
    \ to support SRTP in the first place\n   but is open to enhancements to be used\
    \ for other purposes too.\n   Following the description in [RFC3830], MIKEY is\
    \ targeted for point-\n   to-point as well as group communication.  In the context\
    \ of group\n   communication, an administrator entity can distribute session keys\
    \ to\n   the associated entities participating in the communication session.\n\
    \   This scenario is also applicable for TESLA where one entity may\n   provide\
    \ information to many others in a way that the integrity of the\n   communicated\
    \ information can be assured.  The combination of MIKEY\n   and TESLA supports\
    \ this group-based approach by utilizing the MIKEY\n   framework to distribute\
    \ TESLA parameter information to all involved\n   entities.  Note that this document\
    \ focuses only on the distribution\n   of the parameters, not on the generation\
    \ of those parameters.\n   MIKEY [RFC3830] itself describes three authentication\
    \ and key\n   exchange protocols (symmetric key encryption, public key encryption,\n\
    \   and signed Diffie-Hellman).  Extensions to the MIKEY key exchange\n   methods\
    \ have been defined.  A fourth key distribution method is\n   provided by [DHHMAC]\
    \ and describes a symmetrically protected Diffie-\n   Hellman key agreement. \
    \ A further option has been proposed in [RSA-R]\n   that describes an enhanced\
    \ asymmetric exchange variant, also\n   supporting inband certificate exchange.\
    \  All the different key\n   management schemes mentioned above may be used to\
    \ provide the TESLA\n   parameters.  The required TESLA parameters to be exchanged\
    \ are\n   already described in [RFC4383], while this document describes their\n\
    \   transport within MIKEY.\n   The following security requirements have to be\
    \ placed on the exchange\n   of TESLA parameters:\n   o  Authentication and Integrity\
    \ MUST be provided when sending the\n      TESLA parameters, especially for the\
    \ initial key.\n   o  Confidentiality MAY be provided for the TESLA parameters.\n\
    \   These security requirements apply to the TESLA bootstrapping\n   procedure\
    \ only.  Security requirements for applications using TESLA\n   are beyond the\
    \ scope of this document.  Security aspects that relate\n   to TESLA itself are\
    \ described in [RFC4082], and security issues for\n   TESLA usage for SRTP are\
    \ covered in [RFC4383].\n   It is important to note that this document is one\
    \ piece of a complete\n   solution.  Assuming that media traffic is to be secured\
    \ using TESLA\n   as described in [RFC4383], then (a) keying material and (b)\n\
    \   parameters for TESLA are required.  This document contributes the\n   parameters\
    \ and the authentication methods used in MIKEY to provide\n   the keying material.\
    \  The parameter exchange for TESLA also needs to\n   be secured against tampering.\
    \  This protection is also provided by\n   MIKEY.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [RFC2119].\n"
- title: 3.  TESLA Parameter Overview
  contents:
  - "3.  TESLA Parameter Overview\n   According to [RFC4383], a number of transform-dependent\
    \ parameters\n   need to be provided for proper TESLA operation.  The complete\
    \ list of\n   parameters can be found in Section 4.3 of [RFC4383].  Note that\n\
    \   parameter 10 of [RFC4383], describing the lag of the receiver clock\n   relative\
    \ to the sender clock, is omitted in this document since it\n   can be computed.\n\
    \   MIKEY already requires synchronized clocks, which also provides for\n   synchronization\
    \ for TESLA.  Moreover, Section 4.3 states an option to\n   use MIKEY for clock\
    \ drift determination between the sender and\n   receiver.  Thus, this parameter\
    \ does not need to be transmitted in\n   MIKEY directly.\n   The information in\
    \ brackets provides the default values as specified\n   in Section 6.2 of [RFC4383].\n\
    \   1.   An identifier for the PRF (TESLA PRF), implementing the one-way\n   \
    \     function F(x) in TESLA (to derive the keys in the chain), and\n        the\
    \ one-way function F'(x) in TESLA (to derive the keys for the\n        TESLA MAC,\
    \ from the keys in the chain), e.g., to indicate the\n        keyed hash function\
    \ (default HMAC-SHA1).\n   2.   A non-negative integer, determining the length\
    \ of the F output,\n        i.e., the length of the keys in the chain, which is\
    \ also the key\n        disclosed in an SRTP packet if TESLA is used in the SRTP\
    \ context\n        (default 160 bit).\n   3.   A non-negative integer, determining\
    \ the length of the output of\n        F', i.e., the length of the key for the\
    \ TESLA MAC (default 160\n        bit).\n   4.   An identifier for the TESLA MAC\
    \ that accepts the output of F'(x)\n        as its key, e.g., to indicate a keyed\
    \ hashing function (default\n        HMAC-SHA1).\n   5.   A non-negative integer,\
    \ determining the length of the output of\n        the TESLA MAC (default 80 bit).\n\
    \   6.   The beginning of the session for which a key will be applied.\n   7.\
    \   The interval duration (in milliseconds) for which a dedicated\n        key\
    \ will be used.\n   8.   The key disclosure delay (in number of intervals) characterizes\n\
    \        the period after which the key will be sent to the involved\n       \
    \ entities (e.g., as part of SRTP packets).\n   9.   Non-negative integer, determining\
    \ the length of the key chain,\n        which is determined based on the expected\
    \ duration of the\n        stream.\n   10.  The initial key of the chain to which\
    \ the sender has committed\n        himself.\n"
- title: 4.  Parameter Encoding within MIKEY
  contents:
  - "4.  Parameter Encoding within MIKEY\n   As mentioned in Section 3, TESLA parameters\
    \ need to be transported\n   before actually starting a session.  MIKEY currently\
    \ only defines a\n   payload for transporting the SRTP policy (see Section 6.10\
    \ of\n   [RFC3830]).  This section describes the enhancement of MIKEY to allow\n\
    \   the transport of a TESLA policy and additionally the initial TESLA\n   key.\n"
- title: 4.1.  Security Policy (SP) Payload
  contents:
  - "4.1.  Security Policy (SP) Payload\n   The Security Policy payload defines a\
    \ set of policies that apply to a\n   specific security protocol.  The definition\
    \ here relies on the\n   security policy payload definition in [RFC3830].\n  \
    \  0                   1                   2                   3\n    0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ! Next payload  ! Policy no     ! Prot type     ! Policy param  ~\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ~ length (cont) ! Policy param                                  ~\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      *  Next payload (8 bits):\n         Identifies the payload that is added\
    \ after\n         this payload.  See Section 6.1 of [RFC3830] for\n         more\
    \ details.\n      *  Policy no (8 bits):\n         Each security policy payload\
    \ must be given a\n         distinct number for the current MIKEY session by the\n\
    \         local peer.  This number is used to map a cryptographic session\n  \
    \       to a specific policy (see also Section 6.1.1 of [RFC3830]).\n      * \
    \ Prot type (8 bits):\n         This value defines the security protocol.\n  \
    \       A second value needs to be defined as shown below:\n         (MIKEY already\
    \ defines the value 0.)\n         Prot type     | Value |\n         ---------------------------\n\
    \         SRTP          |     0 |\n         TESLA         |     1 |\n      * \
    \ Policy param length (16 bits):\n         This field defines the total length\
    \ of the\n         policy parameters for the selected security protocol.\n   \
    \   *  Policy param (variable length):\n         This field defines the policy\
    \ for the specific\n         security protocol.\n   The Policy param part is built\
    \ up by a set of Type/Length/Value (TLV)\n   payloads.  For each security protocol,\
    \ a set of possible type/value\n   pairs can be negotiated as defined.\n    0\
    \                   1                   2                   3\n    0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ! Type          ! Length        ! Value                         ~\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      *  Type (8 bits):\n         Specifies the type of the parameter.\n    \
    \  *  Length (8 bits):\n         Specifies the length of the Value field (in bytes).\n\
    \      *  Value (variable length):\n         Specifies the value of the parameter.\n"
- title: 4.2.  TESLA Policy
  contents:
  - "4.2.  TESLA Policy\n   This policy specifies the parameters for TESLA.  The types/values\n\
    \   that can be negotiated are defined by the following table.  The\n   concrete\
    \ default values are taken from [RFC4383], but other values\n   may also be used:\n\
    \      Type | Meaning                                | Possible values\n     \
    \ ---------------------------------------------------------------\n         1\
    \ | PRF identifier for f and f', realising | see below\n             F(x) and\
    \ F'(x)\n         2 | Length of PRF f' output                | 160\n         3\
    \ | Identifier for the TESLA MAC           | see below\n         4 | Length of\
    \ TESLA MAC output             | 80 (truncated)\n         5 | Start of session\
    \                       | in bytes\n         6 | Interval duration (in msec) \
    \           | in bytes\n         7 | Key disclosure delay                   |\
    \ in bytes\n         8 | Key chain length (number of intervals) | in bytes\n \
    \        9 | Local timestamp media receiver         | see below\n   The time values\
    \ stated in items 5 and 9 SHALL be transported in NTP-\n   UTC format, which is\
    \ one of the three options described in Section\n   6.6 of [RFC3830].  A four-byte\
    \ integer value for policy item 6 and a\n   two-byte integer value for policy\
    \ item 7 are RECOMMENDED, carrying\n   interval duration and key disclosure delay.\
    \  Policy type 9 stated\n   above is optional and SHOULD be used if the time synchronization\n\
    \   described in Section 4.3, point two, is used.  Otherwise, it SHOULD\n   be\
    \ omitted.\n      For the PRF realizing F(x) and F'(x), a one-byte length is\n\
    \      sufficient.  The currently defined possible values are:\n        TESLA\
    \ PRF F(x), F'(x)  | Value\n        ------------------------------\n        HMAC-SHA1\
    \              |  0\n      For the TESLA MAC, a one-byte length is enough.\n \
    \     The currently defined possible values are:\n        TESLA MAC       | Value\n\
    \        -----------------------\n        HMAC-SHA1       |  0\n"
- title: 4.3.  Time Synchronization
  contents:
  - "4.3.  Time Synchronization\n   MIKEY as well as TESLA require the time synchronization\
    \ of the\n   communicating peers.  MIKEY requires time synchronization to provide\n\
    \   timestamp-based replay protection for the one-roundtrip\n   authentication\
    \ and key exchange protocols.  TESLA, on the other hand,\n   needs this information\
    \ to determine the clock drift between the\n   senders and the receivers in order\
    \ to release the disclosed key\n   appropriately.  Two alternatives are available\
    \ for time\n   synchronization:\n   1.  Usage of out-of-band synchronization using\
    \ NTP [RFC1305].  This\n       approach is already recommended within [RFC3830].\
    \  The advantage\n       of this approach is the option to use the MIKEY key management\n\
    \       variants that perform within a half-roundtrip.  The disadvantage\n   \
    \    is the required time synchronization via an additional protocol.\n   2. \
    \ [RFC4082] also sketches a possible inband synchronization in\n       Section\
    \ 3.3.1.  This approach is summarized here in the context\n       of MIKEY.  Note\
    \ that here the actual TESLA policy payload is\n       transmitted as part of\
    \ the MIKEY responder message.\n       *  The data receiver, which would be the\
    \ MIKEY initiator, sets\n          the local time parameter t_r and sends it as\
    \ part of the\n          timestamp payload as described in [RFC3830].  This value\
    \ t_r\n          needs to be stored locally.\n       *  Upon receipt of the MIKEY\
    \ initiator message, the data sender\n          replies with the MIKEY responder\
    \ message, setting the local\n          time stamp at data receiver (parameter\
    \ 11) to the value t_r\n          received in the MIKEY initiator message, and\
    \ sets his local\n          time as a 64-bit UTC value t_s in the timestamp payload\
    \ as\n          described in [RFC3830].\n           MIKEY initiator message\n\
    \           [MIKEY parameter incl. local timestamp (t_r)]\n           ------------------>\n\
    \           MIKEY responder message\n           [MIKEY parameter incl. local timestamp\
    \ (t_s), TESLA policy\n            payload, received local time stamp t_r]\n \
    \          <------------------\n       *  Upon receiving the MIKEY responder message\
    \ the data receiver\n          sets D_t = t_s - t_r + S, where S is an estimated\
    \ bound on the\n          clock drift throughout the duration of the session.\n\
    \       This approach has the advantage that it does not require an\n       additional\
    \ time synchronization protocol.  The disadvantage is\n       the necessity to\
    \ perform a full MIKEY handshake, to enable\n       correct parameter transport.\
    \  Moreover this approach is direction\n       dependent, as it may only be applied\
    \ if the media receiver is\n       also the MIKEY initiator.\n   Out-of-band synchronization\
    \ using NTP (i.e., alternative 1) is the\n   RECOMMENDED approach for clock synchronization.\
    \  In scenarios where\n   the media receiver is also the MIKEY initiator piggybacking\
    \ timestamp\n   information in MIKEY (i.e., alternative 2) MAY be used to allow\
    \ for\n   inband determination of the clock drift between sender and receiver.\n"
- title: 4.4.  Key Data Transport within MIKEY's General Extension Payload
  contents:
  - "4.4.  Key Data Transport within MIKEY's General Extension Payload\n   The General\
    \ Extensions Payload was defined to allow possible\n   extensions to MIKEY without\
    \ the need for defining a completely new\n   payload each time.  This payload\
    \ can be used in any MIKEY message and\n   is part of the authenticated/signed\
    \ data part.\n    0                   1                   2                  \
    \ 3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ! Next payload  ! Type          ! Length                        !\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ! Data                                                          ~\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      *  Next payload (8 bits):\n         Identifies the payload following this\
    \ payload.\n      *  Type (8 bits):\n         Identifies the type of general payload.\n\
    \         MIKEY already defines the values 0 and 1.\n         This document introduces\
    \ a new value (2).\n         Type          | Value | Comments\n         ----------------------------------------------------\n\
    \         Vendor ID     |     0 | Vendor specific byte string\n         SDP IDs\
    \       |     1 | List of SDP key mgmt IDs\n         TESLA I-Key   |     2 | TESLA\
    \ initial key\n      *  Length (16 bits):\n         The length in bytes of the\
    \ Data field.\n      *  Data (variable length):\n         The general payload\
    \ data.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   The security properties of multi-media data in\
    \ a multicast\n   environment depends on a number of building blocks.\n   SRTP-TESLA\
    \ [RFC4383] describes extensions for SRTP [RFC3711] in order\n   to support TESLA\
    \ [RFC4082] for source authentication in multicast\n   scenarios.  As such, security\
    \ considerations described with TESLA\n   (see [PCST] and [RFC4082]), the TESLA\
    \ SRTP mapping [RFC4383], and\n   SRTP [RFC3711] itself are relevant in this context.\n\
    \   Furthermore, since this document details bootstrapping of TESLA using\n  \
    \ the Multimedia Internet Keying (MIKEY) [RFC3830] protocol, the\n   security\
    \ considerations of MIKEY are applicable to this document.\n   As a summary, in\
    \ order for a multi-media application to support\n   TESLA, the following protocol\
    \ interactions (in relationship to this\n   document) are necessary:\n   o  MIKEY\
    \ [RFC3830] is executed between the desired entities to\n      perform authentication\
    \ and a secure distribution of keying\n      material.  In order to subsequently\
    \ use TESLA, the parameters\n      described in this document are distributed\
    \ using MIKEY.  MIKEY\n      itself uses another protocol for parameter transport,\
    \ namely, the\n      Session Description Protocol (SDP) [RFC2327].  SDP might\
    \ again be\n      used within Session Initiation Protocol (SIP, [RFC3261]) to\
    \ set up\n      a session between the desired entities.\n   o  After the algorithms,\
    \ parameters, and session keys are available\n      at the respective communication\
    \ entities, data traffic protection\n      via SRTP-TESLA [RFC4383] can be used.\
    \  SRTP-TESLA itself applies\n      TESLA to the SRTP protocol, and as such the\
    \ processing guidelines\n      of TESLA need to be followed.\n"
- title: 5.1.  Man-in-the-Middle Attack
  contents:
  - "5.1.  Man-in-the-Middle Attack\n   Threat:\n      The exchange of security-related\
    \ parameters and algorithms without\n      mutual authentication of the two peers\
    \ can allow an adversary to\n      perform a man-in-the-middle attack.  The mechanisms\
    \ described in\n      this document do not themselves provide such an authentication\
    \ and\n      integrity protection.\n   Countermeasures:\n      Throughout the\
    \ document, it is assumed that the parameter exchange\n      is secured using\
    \ another protocol, i.e., the exchange parameters\n      and algorithms are part\
    \ of a authentication and key exchange\n      protocol (namely, MIKEY).  Source\
    \ authentication of group and\n      multicast communication cannot be provided\
    \ for the data traffic if\n      the prior signaling exchange did not provide\
    \ facilities to\n      authenticate the source.  Using an authentication protocol\
    \ that\n      does not provide session keys as part of a successful protocol\n\
    \      exchange will make it impossible to derive the necessary\n      parameters\
    \ required by TESLA.  MIKEY provides session key\n      establishment.  Additionally,\
    \ the exchange of parameters and\n      algorithms MUST be authenticated and integrity\
    \ protected.  The\n      security protection of the parameter exchange needs to\
    \ provide the\n      same level or a higher level of security.\n"
- title: 5.2.  Downgrading Attack
  contents:
  - "5.2.  Downgrading Attack\n   Threat:\n      The exchange of security-related\
    \ parameters and algorithms is\n      always subject to downgrading whereby an\
    \ adversary modifies some\n      (or all) of the provided parameters.  For example,\
    \ a few\n      parameters require that a supported hash algorithm be listed. \
    \ To\n      mount an attack, the adversary has to modify the list of provided\n\
    \      algorithms and to select the weakest one.\n   Countermeasures:\n      TESLA\
    \ parameter bootstrapping MUST be integrity protected to\n      prevent modification\
    \ of the parameters and their values.\n      Moreover, since unmodified parameters\
    \ from an unknown source are\n      not useful, authentication MUST be provided.\
    \  This functionality\n      is not provided by mechanisms described in this document.\n\
    \      Instead, the capabilities of the underlying authentication and key\n  \
    \    exchange protocol (MIKEY) are reused for this purpose.\n"
- title: 5.3.  Denial of Service Attack
  contents:
  - "5.3.  Denial of Service Attack\n   Threat:\n      An adversary might want to\
    \ modify parameters exchanged between the\n      communicating entities in order\
    \ to establish different state\n      information at the respective communication\
    \ entities.  For\n      example, an adversary might want to modify the key disclosure\n\
    \      delay or the interval duration in order to disrupt the\n      communication\
    \ at a later state since the TESLA algorithm assumes\n      that the participating\
    \ communication entities know the same\n      parameter set.\n   Countermeasures:\n\
    \      The exchanged parameters and the parameters and algorithms MUST be\n  \
    \    integrity protected to allow the recipient to detect whether an\n      adversary\
    \ attempted to modify the exchanged information.\n      Authentication and key\
    \ exchange algorithms provided by MIKEY offer\n      this protection.\n"
- title: 5.4.  Replay Attack
  contents:
  - "5.4.  Replay Attack\n   Threat:\n      An adversary who is able to eavesdrop\
    \ on one or multiple protocol\n      exchanges (MIKEY exchanges with the parameters\
    \ described in this\n      document) might be able to replay the payloads in a\
    \ later protocol\n      exchange.  If the recipients accept the parameters and\
    \ algorithms\n      (or even the messages that carry these payloads), then a denial\
    \ of\n      service, downgrading, or a man-in-the-middle attack might be the\n\
    \      consequence (depending on the entire set of replayed attributes\n     \
    \ and messages).\n   Countermeasures:\n      In order to prevent replay attacks,\
    \ a freshness guarantee MUST be\n      provided.  As such, the TESLA bootstrapping\
    \ message exchange MUST\n      be unique and fresh, and the corresponding authentication\
    \ and key\n      exchange protocol MUST provide the same properties.  In fact,\
    \ it\n      is essential to derive a unique and fresh session key as part of\n\
    \      the authentication and key exchange protocol run that MUST be\n      bound\
    \ to the protocol session.  This includes the exchanged\n      parameters.\n"
- title: 5.5.  Traffic Analysis
  contents:
  - "5.5.  Traffic Analysis\n   Threat:\n      An adversary might be able to learn\
    \ parameters and algorithms if\n      he is located along the signaling path.\
    \  This information can then\n      later be used to mount attacks against the\
    \ end-to-end multimedia\n      communication.  In some high-security and military\
    \ environments,\n      it might even be desirable not to reveal information about\
    \ the\n      used parameters to make it more difficult to launch an attack.\n\
    \   Countermeasures:\n      Confidentiality protection can be provided by a subset\
    \ of the\n      available MIKEY authentication and key exchange protocols, namely,\n\
    \      those providing public key encryption and symmetric key\n      encryption.\
    \  The initial hash key, which is also one of the TESLA\n      bootstrapping parameters,\
    \ does not require confidentiality\n      protection due to the properties of\
    \ a hash chain.\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   This document requires an IANA registration for the\
    \ following\n   attributes.  The registries are provided by MIKEY [RFC3830].\n\
    \   Prot Type:\n      This attribute specifies the protocol type for the security\n\
    \      protocol as described in Section 4.1.\n   Type:\n      Identifies the type\
    \ of the general payload.  The General\n      Extensions Payload was defined to\
    \ allow possible extensions to\n      MIKEY without the need for defining a completely\
    \ new payload each\n      time.  Section 4.4 describes this attribute in more\
    \ detail.\n   Following the policies outlined in [RFC3830], the values in the\
    \ range\n   up to 240 (including 240) for the above attributes are assigned after\n\
    \   expert review by the MSEC working group or its designated successor.\n   The\
    \ values in the range from 241 to 255 are reserved for private use.\n   The IANA\
    \ has added the following attributes and their respective\n   values to an existing\
    \ registry created in [RFC3830]:\n   Prot Type:\n            Prot Type     | Value\
    \ | Description\n            -----------------------------------------------------\n\
    \            TESLA         |     1 | TESLA as a security protocol\n   The value\
    \ of 1 for the 'Prot Type' must be added to the 'Prot type'\n   registry created\
    \ by [RFC3830].\n   Type:\n            Type          | Value | Description\n \
    \           -------------------------------------------\n            TESLA I-Key\
    \   |     2 | TESLA initial key\n   The value of 2 for the 'Type' must be added\
    \ to the 'Type' registry\n   created by [RFC3830].  The values of 0 and 1 are\
    \ already registered\n   in [RFC3830].\n   Also, the IANA has created two new\
    \ registries:\n   TESLA-PRF: Pseudo-random Function (PRF) used in the TESLA policy:\n\
    \      This attribute specifies values for pseudo-random functions used\n    \
    \  in the TESLA policy (see Section 4.2).\n   TESLA-MAC: MAC Function used in\
    \ TESLA:\n      This attribute specifies values for pseudo-random functions used\n\
    \      in the TESLA policy (see Section 4.2).\n   Following the policies outlined\
    \ in [RFC2434], the values for the\n   TESLA-PRF and the TESLA-MAC registry in\
    \ the range up to 240\n   (including 240) for the above attributes are assigned\
    \ after expert\n   review by the MSEC working group or its designated successor.\
    \  The\n   values in the range from 241 to 255 are reserved for private use.\n\
    \   IANA has added the following values to the TESLA-PRF and the\n   TESLA-MAC\
    \ registry:\n   TESLA-PRF:\n            PRF Function     | Value\n           \
    \ --------------------------\n            HMAC-SHA1        |  0\n   TESLA-MAC:\n\
    \            MAC Function     | Value\n            --------------------------\n\
    \            HMAC-SHA1        |  0\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   The authors would like to thank Mark Baugher and Ran\
    \ Canetti for the\n   discussions in context of time synchronization.  Additionally,\
    \ we\n   would like to thank Lakshminath Dondeti, Russ Housley, and Allison\n\
    \   Mankin for their document reviews and for their guidance.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2434]  Narten, T. and H. Alvestrand, \"Guidelines for Writing\
    \ an\n              IANA Considerations Section in RFCs\", BCP 26, RFC 2434,\n\
    \              October 1998.\n   [RFC3830]  Arkko, J., Carrara, E., Lindholm,\
    \ F., Naslund, M., and K.\n              Norrman, \"MIKEY: Multimedia Internet\
    \ KEYing\", RFC 3830,\n              August 2004.\n   [RFC4082]  Perrig, A., Song,\
    \ D., Canetti, R., Tygar, J., and B.\n              Briscoe, \"Timed Efficient\
    \ Stream Loss-Tolerant\n              Authentication (TESLA): Multicast Source\
    \ Authentication\n              Transform Introduction\", RFC 4082, June 2005.\n\
    \   [RFC4383]  Baugher, M. and E. Carrara, \"The Use of Timed Efficient\n    \
    \          Stream Loss-Tolerant Authentication (TESLA) in the Secure\n       \
    \       Real-time Transport Protocol (SRTP)\", RFC 4383,\n              February\
    \ 2006.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [DHHMAC]   Euchner, M., \"HMAC-authenticated\
    \ Diffie-Hellman for\n              MIKEY\", Work in Progress, April 2005.\n \
    \  [PCST]     Perrig, A., Canetti, R., Song, D., and D. Tygar,\n             \
    \ \"Efficient and Secure Source Authentication for\n              Multicast\"\
    , in Proc. of Network and Distributed System\n              Security Symposium\
    \ NDSS 2001, pp. 35-46, 2001.\n   [RFC1305]  Mills, D., \"Network Time Protocol\
    \ (Version 3)\n              Specification, Implementation\", RFC 1305, March\
    \ 1992.\n   [RFC2327]  Handley, M. and V. Jacobson, \"SDP: Session Description\n\
    \              Protocol\", RFC 2327, April 1998.\n   [RFC3261]  Rosenberg, J.,\
    \ Schulzrinne, H., Camarillo, G., Johnston,\n              A., Peterson, J., Sparks,\
    \ R., Handley, M., and E.\n              Schooler, \"SIP: Session Initiation Protocol\"\
    , RFC 3261,\n              June 2002.\n   [RFC3711]  Baugher, M., McGrew, D.,\
    \ Naslund, M., Carrara, E., and K.\n              Norrman, \"The Secure Real-time\
    \ Transport Protocol (SRTP)\",\n              RFC 3711, March 2004.\n   [RSA-R]\
    \    Ignjatic, D., \"An additional mode of key distribution in\n             \
    \ MIKEY: MIKEY-RSA-R\", Work in Progress, February 2006.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Steffen Fries\n   Siemens\n   Otto-Hahn-Ring 6\n   Munich,\
    \ Bavaria  81739\n   Germany\n   EMail: steffen.fries@siemens.com\n   Hannes Tschofenig\n\
    \   Siemens\n   Otto-Hahn-Ring 6\n   Munich, Bavaria  81739\n   Germany\n   EMail:\
    \ Hannes.Tschofenig@siemens.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
