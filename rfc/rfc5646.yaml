- title: __initial_text__
  contents:
  - '                     Tags for Identifying Languages

    '
- title: Abstract
  contents:
  - "Abstract\n   This document describes the structure, content, construction, and\n\
    \   semantics of language tags for use in cases where it is desirable to\n   indicate\
    \ the language used in an information object.  It also\n   describes how to register\
    \ values for use in language tags and the\n   creation of user-defined extensions\
    \ for private interchange.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet Best Current Practices\
    \ for the\n   Internet Community, and requests discussion and suggestions for\n\
    \   improvements.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\
    \ in effect on the date of\n   publication of this document (http://trustee.ietf.org/license-info).\n\
    \   Please review these documents carefully, as they describe your rights\n  \
    \ and restrictions with respect to this document.\n   This document may contain\
    \ material from IETF Documents or IETF\n   Contributions published or made publicly\
    \ available before November\n   10, 2008.  The person(s) controlling the copyright\
    \ in some of this\n   material may not have granted the IETF Trust the right to\
    \ allow\n   modifications of such material outside the IETF Standards Process.\n\
    \   Without obtaining an adequate license from the person(s) controlling\n   the\
    \ copyright in such materials, this document may not be modified\n   outside the\
    \ IETF Standards Process, and derivative works of it may\n   not be created outside\
    \ the IETF Standards Process, except to format\n   it for publication as an RFC\
    \ or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n   2.  The Language Tag . . . . . . . . . . . . . . . . . .\
    \ . . . . .  4\n     2.1.  Syntax . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .  4\n       2.1.1.  Formatting of Language Tags  . . . . . . . . . .\
    \ . . .  6\n     2.2.  Language Subtag Sources and Interpretation . . . . . .\
    \ . .  8\n       2.2.1.  Primary Language Subtag . . . . . . . . . . . . . . .\
    \ . 9\n       2.2.2.  Extended Language Subtags  . . . . . . . . . . . . . . 11\n\
    \       2.2.3.  Script Subtag  . . . . . . . . . . . . . . . . . . . . 12\n  \
    \     2.2.4.  Region Subtag  . . . . . . . . . . . . . . . . . . . . 13\n    \
    \   2.2.5.  Variant Subtags  . . . . . . . . . . . . . . . . . . . 15\n      \
    \ 2.2.6.  Extension Subtags  . . . . . . . . . . . . . . . . . . 16\n       2.2.7.\
    \  Private Use Subtags  . . . . . . . . . . . . . . . . . 18\n       2.2.8.  Grandfathered\
    \ and Redundant Registrations  . . . . . . 18\n       2.2.9.  Classes of Conformance\
    \ . . . . . . . . . . . . . . . . 19\n   3.  Registry Format and Maintenance \
    \ . . . . . . . . . . . . . . . 21\n     3.1.  Format of the IANA Language Subtag\
    \ Registry  . . . . . . . 21\n       3.1.1.  File Format  . . . . . . . . . .\
    \ . . . . . . . . . . . 21\n       3.1.2.  Record and Field Definitions . . .\
    \ . . . . . . . . . . 23\n       3.1.3.  Type Field . . . . . . . . . . . . .\
    \ . . . . . . . . . 26\n       3.1.4.  Subtag and Tag Fields  . . . . . . . .\
    \ . . . . . . . . 26\n       3.1.5.  Description Field  . . . . . . . . . . .\
    \ . . . . . . . 26\n       3.1.6.  Deprecated Field . . . . . . . . . . . . .\
    \ . . . . . . 28\n       3.1.7.  Preferred-Value Field  . . . . . . . . . . .\
    \ . . . . . 28\n       3.1.8.  Prefix Field . . . . . . . . . . . . . . . . .\
    \ . . . . 31\n       3.1.9.  Suppress-Script Field  . . . . . . . . . . . . .\
    \ . . . 32\n       3.1.10. Macrolanguage Field  . . . . . . . . . . . . . . .\
    \ . . 32\n       3.1.11. Scope Field  . . . . . . . . . . . . . . . . . . . .\
    \ . 33\n       3.1.12. Comments Field . . . . . . . . . . . . . . . . . . . .\
    \ 34\n     3.2.  Language Subtag Reviewer . . . . . . . . . . . . . . . . . 35\n\
    \     3.3.  Maintenance of the Registry  . . . . . . . . . . . . . . . 35\n  \
    \   3.4.  Stability of IANA Registry Entries . . . . . . . . . . . . 36\n    \
    \ 3.5.  Registration Procedure for Subtags . . . . . . . . . . . . 41\n     3.6.\
    \  Possibilities for Registration . . . . . . . . . . . . . . 46\n     3.7.  Extensions\
    \ and the Extensions Registry . . . . . . . . . . 49\n     3.8.  Update of the\
    \ Language Subtag Registry . . . . . . . . . . 52\n     3.9.  Applicability of\
    \ the Subtag Registry . . . . . . . . . . . 52\n   4.  Formation and Processing\
    \ of Language Tags  . . . . . . . . . . 53\n     4.1.  Choice of Language Tag\
    \ . . . . . . . . . . . . . . . . . . 53\n       4.1.1.  Tagging Encompassed Languages\
    \  . . . . . . . . . . . . 58\n       4.1.2.  Using Extended Language Subtags\
    \  . . . . . . . . . . . 59\n     4.2.  Meaning of the Language Tag  . . . . .\
    \ . . . . . . . . . . 61\n     4.3.  Lists of Languages . . . . . . . . . . .\
    \ . . . . . . . . . 63\n     4.4.  Length Considerations  . . . . . . . . . .\
    \ . . . . . . . . 63\n       4.4.1.  Working with Limited Buffer Sizes  . . .\
    \ . . . . . . . 64\n       4.4.2.  Truncation of Language Tags  . . . . . . .\
    \ . . . . . . 65\n     4.5.  Canonicalization of Language Tags  . . . . . . .\
    \ . . . . . 66\n     4.6.  Considerations for Private Use Subtags . . . . . .\
    \ . . . . 68\n   5.  IANA Considerations  . . . . . . . . . . . . . . . . . .\
    \ . . . 69\n     5.1.  Language Subtag Registry . . . . . . . . . . . . . . .\
    \ . . 69\n     5.2.  Extensions Registry  . . . . . . . . . . . . . . . . . .\
    \ . 71\n   6.  Security Considerations  . . . . . . . . . . . . . . . . . . .\
    \ 71\n   7.  Character Set Considerations . . . . . . . . . . . . . . . . . 72\n\
    \   8.  Changes from RFC 4646  . . . . . . . . . . . . . . . . . . . . 73\n  \
    \ 9.  References . . . . . . . . . . . . . . . . . . . . . . . . . . 76\n    \
    \ 9.1.  Normative References . . . . . . . . . . . . . . . . . . . 76\n     9.2.\
    \  Informative References . . . . . . . . . . . . . . . . . . 78\n   Appendix\
    \ A.  Examples of Language Tags (Informative) . . . . . . . 80\n   Appendix B.\
    \  Examples of Registration Forms  . . . . . . . . . . . 82\n   Appendix C.  Acknowledgements\
    \  . . . . . . . . . . . . . . . . . . 83\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Human beings on our planet have, past and present, used\
    \ a number of\n   languages.  There are many reasons why one would want to identify\
    \ the\n   language used when presenting or requesting information.\n   The language\
    \ of an information item or a user's language preferences\n   often need to be\
    \ identified so that appropriate processing can be\n   applied.  For example,\
    \ the user's language preferences in a Web\n   browser can be used to select Web\
    \ pages appropriately.  Language\n   information can also be used to select among\
    \ tools (such as\n   dictionaries) to assist in the processing or understanding\
    \ of content\n   in different languages.  Knowledge about the particular language\
    \ used\n   by some piece of information content might be useful or even required\n\
    \   by some types of processing, for example, spell-checking, computer-\n   synthesized\
    \ speech, Braille transcription, or high-quality print\n   renderings.\n   One\
    \ means of indicating the language used is by labeling the\n   information content\
    \ with an identifier or \"tag\".  These tags can also\n   be used to specify the\
    \ user's preferences when selecting information\n   content or to label additional\
    \ attributes of content and associated\n   resources.\n   Sometimes language tags\
    \ are used to indicate additional language\n   attributes of content.  For example,\
    \ indicating specific information\n   about the dialect, writing system, or orthography\
    \ used in a document\n   or resource may enable the user to obtain information\
    \ in a form that\n   they can understand, or it can be important in processing\
    \ or\n   rendering the given content into an appropriate form or style.\n   This\
    \ document specifies a particular identifier mechanism (the\n   language tag)\
    \ and a registration function for values to be used to\n   form tags.  It also\
    \ defines a mechanism for private use values and\n   future extensions.\n   This\
    \ document replaces [RFC4646] (which obsoleted [RFC3066] which, in\n   turn, replaced\
    \ [RFC1766]).  This document, in combination with\n   [RFC4647], comprises BCP\
    \ 47.  For a list of changes in this document,\n   see Section 8.\n   The key\
    \ words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"\
    SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n\
    \   document are to be interpreted as described in [RFC2119].\n"
- title: 2.  The Language Tag
  contents:
  - "2.  The Language Tag\n   Language tags are used to help identify languages, whether\
    \ spoken,\n   written, signed, or otherwise signaled, for the purpose of\n   communication.\
    \  This includes constructed and artificial languages\n   but excludes languages\
    \ not intended primarily for human\n   communication, such as programming languages.\n"
- title: 2.1.  Syntax
  contents:
  - "2.1.  Syntax\n   A language tag is composed from a sequence of one or more \"\
    subtags\",\n   each of which refines or narrows the range of language identified\
    \ by\n   the overall tag.  Subtags, in turn, are a sequence of alphanumeric\n\
    \   characters (letters and digits), distinguished and separated from\n   other\
    \ subtags in a tag by a hyphen (\"-\", [Unicode] U+002D).\n   There are different\
    \ types of subtag, each of which is distinguished\n   by length, position in the\
    \ tag, and content: each subtag's type can\n   be recognized solely by these features.\
    \  This makes it possible to\n   extract and assign some semantic information\
    \ to the subtags, even if\n   the specific subtag values are not recognized. \
    \ Thus, a language tag\n   processor need not have a list of valid tags or subtags\
    \ (that is, a\n   copy of some version of the IANA Language Subtag Registry) in\
    \ order\n   to perform common searching and matching operations.  The only\n \
    \  exceptions to this ability to infer meaning from subtag structure are\n   the\
    \ grandfathered tags listed in the productions 'regular' and\n   'irregular' below.\
    \  These tags were registered under [RFC3066] and\n   are a fixed list that can\
    \ never change.\n   The syntax of the language tag in ABNF [RFC5234] is:\n Language-Tag\
    \  = langtag             ; normal language tags\n               / privateuse \
    \         ; private use tag\n               / grandfathered       ; grandfathered\
    \ tags\n langtag       = language\n                 [\"-\" script]\n         \
    \        [\"-\" region]\n                 *(\"-\" variant)\n                 *(\"\
    -\" extension)\n                 [\"-\" privateuse]\n language      = 2*3ALPHA\
    \            ; shortest ISO 639 code\n                 [\"-\" extlang]       ;\
    \ sometimes followed by\n                                     ; extended language\
    \ subtags\n               / 4ALPHA              ; or reserved for future use\n\
    \               / 5*8ALPHA            ; or registered language subtag\n extlang\
    \       = 3ALPHA              ; selected ISO 639 codes\n                 *2(\"\
    -\" 3ALPHA)      ; permanently reserved\n script        = 4ALPHA             \
    \ ; ISO 15924 code\n region        = 2ALPHA              ; ISO 3166-1 code\n \
    \              / 3DIGIT              ; UN M.49 code\n variant       = 5*8alphanum\
    \         ; registered variants\n               / (DIGIT 3alphanum)\n extension\
    \     = singleton 1*(\"-\" (2*8alphanum))\n                                  \
    \   ; Single alphanumerics\n                                     ; \"x\" reserved\
    \ for private use\n singleton     = DIGIT               ; 0 - 9\n            \
    \   / %x41-57             ; A - W\n               / %x59-5A             ; Y -\
    \ Z\n               / %x61-77             ; a - w\n               / %x79-7A  \
    \           ; y - z\n privateuse    = \"x\" 1*(\"-\" (1*8alphanum))\n grandfathered\
    \ = irregular           ; non-redundant tags registered\n               / regular\
    \             ; during the RFC 3066 era\n irregular     = \"en-GB-oed\"      \
    \   ; irregular tags do not match\n               / \"i-ami\"             ; the\
    \ 'langtag' production and\n               / \"i-bnn\"             ; would not\
    \ otherwise be\n               / \"i-default\"         ; considered 'well-formed'\n\
    \               / \"i-enochian\"        ; These tags are all valid,\n        \
    \       / \"i-hak\"             ; but most are deprecated\n               / \"\
    i-klingon\"         ; in favor of more modern\n               / \"i-lux\"    \
    \         ; subtags or subtag\n               / \"i-mingo\"           ; combination\n\
    \               / \"i-navajo\"\n               / \"i-pwn\"\n               / \"\
    i-tao\"\n               / \"i-tay\"\n               / \"i-tsu\"\n            \
    \   / \"sgn-BE-FR\"\n               / \"sgn-BE-NL\"\n               / \"sgn-CH-DE\"\
    \n regular       = \"art-lojban\"        ; these tags match the 'langtag'\n  \
    \             / \"cel-gaulish\"       ; production, but their subtags\n      \
    \         / \"no-bok\"            ; are not extended language\n              \
    \ / \"no-nyn\"            ; or variant subtags: their meaning\n              \
    \ / \"zh-guoyu\"          ; is defined by their registration\n               /\
    \ \"zh-hakka\"          ; and all of these are deprecated\n               / \"\
    zh-min\"            ; in favor of a more modern\n               / \"zh-min-nan\"\
    \        ; subtag or sequence of subtags\n               / \"zh-xiang\"\n alphanum\
    \      = (ALPHA / DIGIT)     ; letters and numbers\n                        Figure\
    \ 1: Language Tag ABNF\n   For examples of language tags, see Appendix A.\n  \
    \ All subtags have a maximum length of eight characters.  Whitespace is\n   not\
    \ permitted in a language tag.  There is a subtlety in the ABNF\n   production\
    \ 'variant': a variant starting with a digit has a minimum\n   length of four\
    \ characters, while those starting with a letter have a\n   minimum length of\
    \ five characters.\n   Although [RFC5234] refers to octets, the language tags\
    \ described in\n   this document are sequences of characters from the US-ASCII\
    \ [ISO646]\n   repertoire.  Language tags MAY be used in documents and applications\n\
    \   that use other encodings, so long as these encompass the relevant\n   part\
    \ of the US-ASCII repertoire.  An example of this would be an XML\n   document\
    \ that uses the UTF-16LE [RFC2781] encoding of [Unicode].\n"
- title: 2.1.1.  Formatting of Language Tags
  contents:
  - "2.1.1.  Formatting of Language Tags\n   At all times, language tags and their\
    \ subtags, including private use\n   and extensions, are to be treated as case\
    \ insensitive: there exist\n   conventions for the capitalization of some of the\
    \ subtags, but these\n   MUST NOT be taken to carry meaning.\n   Thus, the tag\
    \ \"mn-Cyrl-MN\" is not distinct from \"MN-cYRL-mn\" or \"mN-\n   cYrL-Mn\" (or\
    \ any other combination), and each of these variations\n   conveys the same meaning:\
    \ Mongolian written in the Cyrillic script as\n   used in Mongolia.\n   The ABNF\
    \ syntax also does not distinguish between upper- and\n   lowercase: the uppercase\
    \ US-ASCII letters in the range 'A' through\n   'Z' are always considered equivalent\
    \ and mapped directly to their US-\n   ASCII lowercase equivalents in the range\
    \ 'a' through 'z'.  So the tag\n   \"I-AMI\" is considered equivalent to that\
    \ value \"i-ami\" in the\n   'irregular' production.\n   Although case distinctions\
    \ do not carry meaning in language tags,\n   consistent formatting and presentation\
    \ of language tags will aid\n   users.  The format of subtags in the registry\
    \ is RECOMMENDED as the\n   form to use in language tags.  This format generally\
    \ corresponds to\n   the common conventions for the various ISO standards from\
    \ which the\n   subtags are derived.\n   These conventions include:\n   o  [ISO639-1]\
    \ recommends that language codes be written in lowercase\n      ('mn' Mongolian).\n\
    \   o  [ISO15924] recommends that script codes use lowercase with the\n      initial\
    \ letter capitalized ('Cyrl' Cyrillic).\n   o  [ISO3166-1] recommends that country\
    \ codes be capitalized ('MN'\n      Mongolia).\n   An implementation can reproduce\
    \ this format without accessing the\n   registry as follows.  All subtags, including\
    \ extension and private\n   use subtags, use lowercase letters with two exceptions:\
    \ two-letter\n   and four-letter subtags that neither appear at the start of the\
    \ tag\n   nor occur after singletons.  Such two-letter subtags are all\n   uppercase\
    \ (as in the tags \"en-CA-x-ca\" or \"sgn-BE-FR\") and four-\n   letter subtags\
    \ are titlecase (as in the tag \"az-Latn-x-latn\").\n   Note: Case folding of\
    \ ASCII letters in certain locales, unless\n   carefully handled, sometimes produces\
    \ non-ASCII character values.\n   The Unicode Character Database file \"SpecialCasing.txt\"\
    \n   [SpecialCasing] defines the specific cases that are known to cause\n   problems\
    \ with this.  In particular, the letter 'i' (U+0069) in\n   Turkish and Azerbaijani\
    \ is uppercased to U+0130 (LATIN CAPITAL LETTER\n   I WITH DOT ABOVE).  Implementers\
    \ SHOULD specify a locale-neutral\n   casing operation to ensure that case folding\
    \ of subtags does not\n   produce this value, which is illegal in language tags.\
    \  For example,\n   if one were to uppercase the region subtag 'in' using Turkish\
    \ locale\n   rules, the sequence U+0130 U+004E would result, instead of the\n\
    \   expected 'IN'.\n"
- title: 2.2.  Language Subtag Sources and Interpretation
  contents:
  - "2.2.  Language Subtag Sources and Interpretation\n   The namespace of language\
    \ tags and their subtags is administered by\n   the Internet Assigned Numbers\
    \ Authority (IANA) according to the rules\n   in Section 5 of this document. \
    \ The Language Subtag Registry\n   maintained by IANA is the source for valid\
    \ subtags: other standards\n   referenced in this section provide the source material\
    \ for that\n   registry.\n   Terminology used in this document:\n   o  \"Tag\"\
    \ refers to a complete language tag, such as \"sr-Latn-RS\" or\n      \"az-Arab-IR\"\
    .  Examples of tags in this document are enclosed in\n      double-quotes (\"\
    en-US\").\n   o  \"Subtag\" refers to a specific section of a tag, delimited by\
    \ a\n      hyphen, such as the subtags 'zh', 'Hant', and 'CN' in the tag \"zh-\n\
    \      Hant-CN\".  Examples of subtags in this document are enclosed in\n    \
    \  single quotes ('Hant').\n   o  \"Code\" refers to values defined in external\
    \ standards (and that\n      are used as subtags in this document).  For example,\
    \ 'Hant' is an\n      [ISO15924] script code that was used to define the 'Hant'\
    \ script\n      subtag for use in a language tag.  Examples of codes in this\n\
    \      document are enclosed in single quotes ('en', 'Hant').\n   Language tags\
    \ are designed so that each subtag type has unique length\n   and content restrictions.\
    \  These make identification of the subtag's\n   type possible, even if the content\
    \ of the subtag itself is\n   unrecognized.  This allows tags to be parsed and\
    \ processed without\n   reference to the latest version of the underlying standards\
    \ or the\n   IANA registry and makes the associated exception handling when\n\
    \   parsing tags simpler.\n   Some of the subtags in the IANA registry do not\
    \ come from an\n   underlying standard.  These can only appear in specific positions\
    \ in\n   a tag: they can only occur as primary language subtags or as variant\n\
    \   subtags.\n   Sequences of private use and extension subtags MUST occur at\
    \ the end\n   of the sequence of subtags and MUST NOT be interspersed with subtags\n\
    \   defined elsewhere in this document.  These sequences are introduced\n   by\
    \ single-character subtags, which are reserved as follows:\n   o  The single-letter\
    \ subtag 'x' introduces a sequence of private use\n      subtags.  The interpretation\
    \ of any private use subtag is defined\n      solely by private agreement and\
    \ is not defined by the rules in\n      this section or in any standard or registry\
    \ defined in this\n      document.\n   o  The single-letter subtag 'i' is used\
    \ by some grandfathered tags,\n      such as \"i-default\", where it always appears\
    \ in the first position\n      and cannot be confused with an extension.\n   o\
    \  All other single-letter and single-digit subtags are reserved to\n      introduce\
    \ standardized extension subtag sequences as described in\n      Section 3.7.\n"
- title: 2.2.1.  Primary Language Subtag
  contents:
  - "2.2.1.  Primary Language Subtag\n   The primary language subtag is the first\
    \ subtag in a language tag and\n   cannot be omitted, with two exceptions:\n \
    \  o  The single-character subtag 'x' as the primary subtag indicates\n      that\
    \ the language tag consists solely of subtags whose meaning is\n      defined\
    \ by private agreement.  For example, in the tag \"x-fr-CH\",\n      the subtags\
    \ 'fr' and 'CH' do not represent the French language or\n      the country of\
    \ Switzerland (or any other value in the IANA\n      registry) unless there is\
    \ a private agreement in place to do so.\n      See Section 4.6.\n   o  The single-character\
    \ subtag 'i' is used by some grandfathered tags\n      (see Section 2.2.8) such\
    \ as \"i-klingon\" and \"i-bnn\".  (Other\n      grandfathered tags have a primary\
    \ language subtag in their first\n      position.)\n   The following rules apply\
    \ to the primary language subtag:\n   1.  Two-character primary language subtags\
    \ were defined in the IANA\n       registry according to the assignments found\
    \ in the standard \"ISO\n       639-1:2002, Codes for the representation of names\
    \ of languages --\n       Part 1: Alpha-2 code\" [ISO639-1], or using assignments\n\
    \       subsequently made by the ISO 639-1 registration authority (RA) or\n  \
    \     governing standardization bodies.\n   2.  Three-character primary language\
    \ subtags in the IANA registry\n       were defined according to the assignments\
    \ found in one of these\n       additional ISO 639 parts or assignments subsequently\
    \ made by the\n       relevant ISO 639 registration authorities or governing\n\
    \       standardization bodies:\n       A.  \"ISO 639-2:1998 - Codes for the representation\
    \ of names of\n           languages -- Part 2: Alpha-3 code - edition 1\" [ISO639-2]\n\
    \       B.  \"ISO 639-3:2007 - Codes for the representation of names of\n    \
    \       languages -- Part 3: Alpha-3 code for comprehensive coverage\n       \
    \    of languages\" [ISO639-3]\n       C.  \"ISO 639-5:2008 - Codes for the representation\
    \ of names of\n           languages -- Part 5: Alpha-3 code for language families\
    \ and\n           groups\" [ISO639-5]\n   3.  The subtags in the range 'qaa' through\
    \ 'qtz' are reserved for\n       private use in language tags.  These subtags\
    \ correspond to codes\n       reserved by ISO 639-2 for private use.  These codes\
    \ MAY be used\n       for non-registered primary language subtags (instead of\
    \ using\n       private use subtags following 'x-').  Please refer to Section\
    \ 4.6\n       for more information on private use subtags.\n   4.  Four-character\
    \ language subtags are reserved for possible future\n       standardization.\n\
    \   5.  Any language subtags of five to eight characters in length in the\n  \
    \     IANA registry were defined via the registration process in\n       Section\
    \ 3.5 and MAY be used to form the primary language subtag.\n       An example\
    \ of what such a registration might include is the\n       grandfathered IANA\
    \ registration \"i-enochian\".  The subtag\n       'enochian' could be registered\
    \ in the IANA registry as a primary\n       language subtag (assuming that ISO\
    \ 639 does not register this\n       language first), making tags such as \"enochian-AQ\"\
    \ and \"enochian-\n       Latn\" valid.\n       At the time this document was\
    \ created, there were no examples of\n       this kind of subtag.  Future registrations\
    \ of this type are\n       discouraged: an attempt to register any new proposed\
    \ primary\n       language MUST be made to the ISO 639 registration authority.\n\
    \       Proposals rejected by the ISO 639 registration authority are\n       unlikely\
    \ to meet the criteria for primary language subtags and\n       are thus unlikely\
    \ to be registered.\n   6.  Other values MUST NOT be assigned to the primary subtag\
    \ except by\n       revision or update of this document.\n   When languages have\
    \ both an ISO 639-1 two-character code and a three-\n   character code (assigned\
    \ by ISO 639-2, ISO 639-3, or ISO 639-5), only\n   the ISO 639-1 two-character\
    \ code is defined in the IANA registry.\n   When a language has no ISO 639-1 two-character\
    \ code and the ISO\n   639-2/T (Terminology) code and the ISO 639-2/B (Bibliographic)\
    \ code\n   for that language differ, only the Terminology code is defined in the\n\
    \   IANA registry.  At the time this document was created, all languages\n   that\
    \ had both kinds of three-character codes were also assigned a\n   two-character\
    \ code; it is expected that future assignments of this\n   nature will not occur.\n\
    \   In order to avoid instability in the canonical form of tags, if a\n   two-character\
    \ code is added to ISO 639-1 for a language for which a\n   three-character code\
    \ was already included in either ISO 639-2 or ISO\n   639-3, the two-character\
    \ code MUST NOT be registered.  See\n   Section 3.4.\n   For example, if some\
    \ content were tagged with 'haw' (Hawaiian), which\n   currently has no two-character\
    \ code, the tag would not need to be\n   changed if ISO 639-1 were to assign a\
    \ two-character code to the\n   Hawaiian language at a later date.\n   To avoid\
    \ these problems with versioning and subtag choice (as\n   experienced during\
    \ the transition between RFC 1766 and RFC 3066), as\n   well as to ensure the\
    \ canonical nature of subtags defined by this\n   document, the ISO 639 Registration\
    \ Authority Joint Advisory Committee\n   (ISO 639/RA-JAC) has included the following\
    \ statement in\n   [iso639.prin]:\n      \"A language code already in ISO 639-2\
    \ at the point of freezing ISO\n      639-1 shall not later be added to ISO 639-1.\
    \  This is to ensure\n      consistency in usage over time, since users are directed\
    \ in\n      Internet applications to employ the alpha-3 code when an alpha-2\n\
    \      code for that language is not available.\"\n"
- title: 2.2.2.  Extended Language Subtags
  contents:
  - "2.2.2.  Extended Language Subtags\n   Extended language subtags are used to identify\
    \ certain specially\n   selected languages that, for various historical and compatibility\n\
    \   reasons, are closely identified with or tagged using an existing\n   primary\
    \ language subtag.  Extended language subtags are always used\n   with their enclosing\
    \ primary language subtag (indicated with a\n   'Prefix' field in the registry)\
    \ when used to form the language tag.\n   All languages that have an extended\
    \ language subtag in the registry\n   also have an identical primary language\
    \ subtag record in the\n   registry.  This primary language subtag is RECOMMENDED\
    \ for forming\n   the language tag.  The following rules apply to the extended\
    \ language\n   subtags:\n   1.  Extended language subtags consist solely of three-letter\
    \ subtags.\n       All extended language subtag records defined in the registry\
    \ were\n       defined according to the assignments found in [ISO639-3].\n   \
    \    Language collections and groupings, such as defined in\n       [ISO639-5],\
    \ are specifically excluded from being extended\n       language subtags.\n  \
    \ 2.  Extended language subtag records MUST include exactly one\n       'Prefix'\
    \ field indicating an appropriate subtag or sequence of\n       subtags for that\
    \ extended language subtag.\n   3.  Extended language subtag records MUST include\
    \ a 'Preferred-\n       Value'.  The 'Preferred-Value' and 'Subtag' fields MUST\
    \ be\n       identical.\n   4.  Although the ABNF production 'extlang' permits\
    \ up to three\n       extended language tags in the language tag, extended language\n\
    \       subtags MUST NOT include another extended language subtag in\n       their\
    \ 'Prefix'.  That is, the second and third extended language\n       subtag positions\
    \ in a language tag are permanently reserved and\n       tags that include those\
    \ subtags in that position are, and will\n       always remain, invalid.\n   For\
    \ example, the macrolanguage Chinese ('zh') encompasses a number of\n   languages.\
    \  For compatibility reasons, each of these languages has\n   both a primary and\
    \ extended language subtag in the registry.  A few\n   selected examples of these\
    \ include Gan Chinese ('gan'), Cantonese\n   Chinese ('yue'), and Mandarin Chinese\
    \ ('cmn').  Each is encompassed\n   by the macrolanguage 'zh' (Chinese).  Therefore,\
    \ they each have the\n   prefix \"zh\" in their registry records.  Thus, Gan Chinese\
    \ is\n   represented with tags beginning \"zh-gan\" or \"gan\", Cantonese with\n\
    \   tags beginning either \"yue\" or \"zh-yue\", and Mandarin Chinese with\n \
    \  \"zh-cmn\" or \"cmn\".  The language subtag 'zh' can still be used\n   without\
    \ an extended language subtag to label a resource as some\n   unspecified variety\
    \ of Chinese, while the primary language subtag\n   ('gan', 'yue', 'cmn') is preferred\
    \ to using the extended language\n   form (\"zh-gan\", \"zh-yue\", \"zh-cmn\"\
    ).\n"
- title: 2.2.3.  Script Subtag
  contents:
  - "2.2.3.  Script Subtag\n   Script subtags are used to indicate the script or writing\
    \ system\n   variations that distinguish the written forms of a language or its\n\
    \   dialects.  The following rules apply to the script subtags:\n   1.  Script\
    \ subtags MUST follow any primary and extended language\n       subtags and MUST\
    \ precede any other type of subtag.\n   2.  Script subtags consist of four letters\
    \ and were defined according\n       to the assignments found in [ISO15924] (\"\
    Information and\n       documentation -- Codes for the representation of names\
    \ of\n       scripts\"), or subsequently assigned by the ISO 15924 registration\n\
    \       authority or governing standardization bodies.  Only codes\n       assigned\
    \ by ISO 15924 will be considered for registration.\n   3.  The script subtags\
    \ 'Qaaa' through 'Qabx' are reserved for private\n       use in language tags.\
    \  These subtags correspond to codes reserved\n       by ISO 15924 for private\
    \ use.  These codes MAY be used for non-\n       registered script values.  Please\
    \ refer to Section 4.6 for more\n       information on private use subtags.\n\
    \   4.  There MUST be at most one script subtag in a language tag, and\n     \
    \  the script subtag SHOULD be omitted when it adds no\n       distinguishing\
    \ value to the tag or when the primary or extended\n       language subtag's record\
    \ in the subtag registry includes a\n       'Suppress-Script' field listing the\
    \ applicable script subtag.\n   For example: \"sr-Latn\" represents Serbian written\
    \ using the Latin\n   script.\n"
- title: 2.2.4.  Region Subtag
  contents:
  - "2.2.4.  Region Subtag\n   Region subtags are used to indicate linguistic variations\
    \ associated\n   with or appropriate to a specific country, territory, or region.\n\
    \   Typically, a region subtag is used to indicate variations such as\n   regional\
    \ dialects or usage, or region-specific spelling conventions.\n   It can also\
    \ be used to indicate that content is expressed in a way\n   that is appropriate\
    \ for use throughout a region, for instance,\n   Spanish content tailored to be\
    \ useful throughout Latin America.\n   The following rules apply to the region\
    \ subtags:\n   1.  Region subtags MUST follow any primary language, extended\n\
    \       language, or script subtags and MUST precede any other type of\n     \
    \  subtag.\n   2.  Two-letter region subtags were defined according to the\n \
    \      assignments found in [ISO3166-1] (\"Codes for the representation\n    \
    \   of names of countries and their subdivisions -- Part 1: Country\n       codes\"\
    ), using the list of alpha-2 country codes or using\n       assignments subsequently\
    \ made by the ISO 3166-1 maintenance\n       agency or governing standardization\
    \ bodies.  In addition, the\n       codes that are \"exceptionally reserved\"\
    \ (as opposed to\n       \"assigned\") in ISO 3166-1 were also defined in the\
    \ registry, with\n       the exception of 'UK', which is an exact synonym for\
    \ the assigned\n       code 'GB'.\n   3.  The region subtags 'AA', 'QM'-'QZ',\
    \ 'XA'-'XZ', and 'ZZ' are\n       reserved for private use in language tags. \
    \ These subtags\n       correspond to codes reserved by ISO 3166 for private use.\
    \  These\n       codes MAY be used for private use region subtags (instead of\n\
    \       using a private use subtag sequence).  Please refer to\n       Section\
    \ 4.6 for more information on private use subtags.\n   4.  Three-character region\
    \ subtags consist solely of digit (number)\n       characters and were defined\
    \ according to the assignments found in\n       the UN Standard Country or Area\
    \ Codes for Statistical  Use\n       [UN_M.49] or assignments subsequently made\
    \ by the governing\n       standards body.  Not all of the UN M.49 codes are defined\
    \ in the\n       IANA registry.  The following rules define which codes are\n\
    \       entered into the registry as valid subtags:\n       A.  UN numeric codes\
    \ assigned to 'macro-geographical\n           (continental)' or sub-regions MUST\
    \ be registered in the\n           registry.  These codes are not associated with\
    \ an assigned\n           ISO 3166-1 alpha-2 code and represent supra-national\
    \ areas,\n           usually covering more than one nation, state, province, or\n\
    \           territory.\n       B.  UN numeric codes for 'economic groupings' or\
    \ 'other\n           groupings' MUST NOT be registered in the IANA registry and\n\
    \           MUST NOT be used to form language tags.\n       C.  When ISO 3166-1\
    \ reassigns a code formerly used for one\n           country or area to another\
    \ country or area and that code\n           already is present in the registry,\
    \ the UN numeric code for\n           that country or area MUST be registered\
    \ in the registry as\n           described in Section 3.4 and MUST be used to\
    \ form language\n           tags that represent the country or region for which\
    \ it is\n           defined (rather than the recycled ISO 3166-1 code).\n    \
    \   D.  UN numeric codes for countries or areas for which there is an\n      \
    \     associated ISO 3166-1 alpha-2 code in the registry MUST NOT\n          \
    \ be entered into the registry and MUST NOT be used to form\n           language\
    \ tags.  Note that the ISO 3166-based subtag in the\n           registry MUST\
    \ actually be associated with the UN M.49 code in\n           question.\n    \
    \   E.  For historical reasons, the UN numeric code 830 (Channel\n           Islands),\
    \ which was not registered at the time this document\n           was adopted and\
    \ had, at that time, no corresponding ISO\n           3166-1 code, MAY be entered\
    \ into the IANA registry via the\n           process described in Section 3.5,\
    \ provided no ISO 3166-1 code\n           with that exact meaning has been previously\
    \ registered.\n       F.  All other UN numeric codes for countries or areas that\
    \ do not\n           have an associated ISO 3166-1 alpha-2 code MUST NOT be\n\
    \           entered into the registry and MUST NOT be used to form\n         \
    \  language tags.  For more information about these codes, see\n           Section\
    \ 3.4.\n   5.  The alphanumeric codes in Appendix X of the UN document MUST NOT\n\
    \       be entered into the registry and MUST NOT be used to form\n       language\
    \ tags.  (At the time this document was created, these\n       values matched\
    \ the ISO 3166-1 alpha-2 codes.)\n   6.  There MUST be at most one region subtag\
    \ in a language tag and the\n       region subtag MAY be omitted, as when it adds\
    \ no distinguishing\n       value to the tag.\n   For example:\n      \"de-AT\"\
    \ represents German ('de') as used in Austria ('AT').\n      \"sr-Latn-RS\" represents\
    \ Serbian ('sr') written using Latin script\n      ('Latn') as used in Serbia\
    \ ('RS').\n      \"es-419\" represents Spanish ('es') appropriate to the UN-defined\n\
    \      Latin America and Caribbean region ('419').\n"
- title: 2.2.5.  Variant Subtags
  contents:
  - "2.2.5.  Variant Subtags\n   Variant subtags are used to indicate additional,\
    \ well-recognized\n   variations that define a language or its dialects that are\
    \ not\n   covered by other available subtags.  The following rules apply to the\n\
    \   variant subtags:\n   1.  Variant subtags MUST follow any primary language,\
    \ extended\n       language, script, or region subtags and MUST precede any\n\
    \       extension or private use subtag sequences.\n   2.  Variant subtags, as\
    \ a collection, are not associated with any\n       particular external standard.\
    \  The meaning of variant subtags in\n       the registry is defined in the course\
    \ of the registration process\n       defined in Section 3.5.  Note that any particular\
    \ variant subtag\n       might be associated with some external standard.  However,\n\
    \       association with a standard is not required for registration.\n   3. \
    \ More than one variant MAY be used to form the language tag.\n   4.  Variant\
    \ subtags MUST be registered with IANA according to the\n       rules in Section\
    \ 3.5 of this document before being used to form\n       language tags.  In order\
    \ to distinguish variants from other types\n       of subtags, registrations MUST\
    \ meet the following length and\n       content restrictions:\n       1.  Variant\
    \ subtags that begin with a letter (a-z, A-Z) MUST be\n           at least five\
    \ characters long.\n       2.  Variant subtags that begin with a digit (0-9) MUST\
    \ be at\n           least four characters long.\n   5.  The same variant subtag\
    \ MUST NOT be used more than once within a\n       language tag.\n       *  For\
    \ example, the tag \"de-DE-1901-1901\" is not valid.\n   Variant subtag records\
    \ in the Language Subtag Registry MAY include\n   one or more 'Prefix' (Section\
    \ 3.1.8) fields.  Each 'Prefix' indicates\n   a suitable sequence of subtags for\
    \ forming (with other subtags, as\n   appropriate) a language tag when using the\
    \ variant.\n   Most variants that share a prefix are mutually exclusive.  For\n\
    \   example, the German orthographic variations '1996' and '1901' SHOULD\n   NOT\
    \ be used in the same tag, as they represent the dates of different\n   spelling\
    \ reforms.  A variant that can meaningfully be used in\n   combination with another\
    \ variant SHOULD include a 'Prefix' field in\n   its registry record that lists\
    \ that other variant.  For example, if\n   another German variant 'example' were\
    \ created that made sense to use\n   with '1996', then 'example' should include\
    \ two 'Prefix' fields: \"de\"\n   and \"de-1996\".\n   For example:\n      \"\
    sl-nedis\" represents the Natisone or Nadiza dialect of Slovenian.\n      \"de-CH-1996\"\
    \ represents German as used in Switzerland and as\n      written using the spelling\
    \ reform beginning in the year 1996 C.E.\n"
- title: 2.2.6.  Extension Subtags
  contents:
  - "2.2.6.  Extension Subtags\n   Extensions provide a mechanism for extending language\
    \ tags for use in\n   various applications.  They are intended to identify information\
    \ that\n   is commonly used in association with languages or language tags but\n\
    \   that is not part of language identification.  See Section 3.7.  The\n   following\
    \ rules apply to extensions:\n   1.  An extension MUST follow at least a primary\
    \ language subtag.\n       That is, a language tag cannot begin with an extension.\n\
    \       Extensions extend language tags, they do not override or replace\n   \
    \    them.  For example, \"a-value\" is not a well-formed language tag,\n    \
    \   while \"de-a-value\" is.  Note that extensions cannot be used in\n       tags\
    \ that are entirely private use (that is, tags starting with\n       \"x-\").\n\
    \   2.  Extension subtags are separated from the other subtags defined in\n  \
    \     this document by a single-character subtag (called a\n       \"singleton\"\
    ).  The singleton MUST be one allocated to a\n       registration authority via\
    \ the mechanism described in Section 3.7\n       and MUST NOT be the letter 'x',\
    \ which is reserved for private use\n       subtag sequences.\n   3.  Each singleton\
    \ subtag MUST appear at most one time in each tag\n       (other than as a private\
    \ use subtag).  That is, singleton subtags\n       MUST NOT be repeated.  For\
    \ example, the tag \"en-a-bbb-a-ccc\" is\n       invalid because the subtag 'a'\
    \ appears twice.  Note that the tag\n       \"en-a-bbb-x-a-ccc\" is valid because\
    \ the second appearance of the\n       singleton 'a' is in a private use sequence.\n\
    \   4.  Extension subtags MUST meet whatever requirements are set by the\n   \
    \    document that defines their singleton prefix and whatever\n       requirements\
    \ are provided by the maintaining authority.  Note\n       that there might not\
    \ be a registry of these subtags and\n       validating processors are not required\
    \ to validate extensions.\n   5.  Each extension subtag MUST be from two to eight\
    \ characters long\n       and consist solely of letters or digits, with each subtag\n\
    \       separated by a single '-'.  Case distinctions are ignored in\n       extensions\
    \ (as with any language subtag) and normalized subtags\n       of this type are\
    \ expected to be in lowercase.\n   6.  Each singleton MUST be followed by at least\
    \ one extension subtag.\n       For example, the tag \"tlh-a-b-foo\" is invalid\
    \ because the first\n       singleton 'a' is followed immediately by another singleton\
    \ 'b'.\n   7.  Extension subtags MUST follow all primary language, extended\n\
    \       language, script, region, and variant subtags in a tag and MUST\n    \
    \   precede any private use subtag sequences.\n   8.  All subtags following the\
    \ singleton and before another singleton\n       are part of the extension.  Example:\
    \ In the tag \"fr-a-Latn\", the\n       subtag 'Latn' does not represent the script\
    \ subtag 'Latn' defined\n       in the IANA Language Subtag Registry.  Its meaning\
    \ is defined by\n       the extension 'a'.\n   9.  In the event that more than\
    \ one extension appears in a single\n       tag, the tag SHOULD be canonicalized\
    \ as described in Section 4.5,\n       by ordering the various extension sequences\
    \ into case-insensitive\n       ASCII order.\n   For example, if an extension\
    \ were defined for the singleton 'r' and\n   it defined the subtags shown, then\
    \ the following tag would be a valid\n   example: \"en-Latn-GB-boont-r-extended-sequence-x-private\"\
    .\n"
- title: 2.2.7.  Private Use Subtags
  contents:
  - "2.2.7.  Private Use Subtags\n   Private use subtags are used to indicate distinctions\
    \ in language\n   that are important in a given context by private agreement.\
    \  The\n   following rules apply to private use subtags:\n   1.  Private use subtags\
    \ are separated from the other subtags defined\n       in this document by the\
    \ reserved single-character subtag 'x'.\n   2.  Private use subtags MUST conform\
    \ to the format and content\n       constraints defined in the ABNF for all subtags;\
    \ that is, they\n       MUST consist solely of letters and digits and not exceed\
    \ eight\n       characters in length.\n   3.  Private use subtags MUST follow\
    \ all primary language, extended\n       language, script, region, variant, and\
    \ extension subtags in the\n       tag.  Another way of saying this is that all\
    \ subtags following\n       the singleton 'x' MUST be considered private use.\
    \  Example: The\n       subtag 'US' in the tag \"en-x-US\" is a private use subtag.\n\
    \   4.  A tag MAY consist entirely of private use subtags.\n   5.  No source is\
    \ defined for private use subtags.  Use of private use\n       subtags is by private\
    \ agreement only.\n   6.  Private use subtags are NOT RECOMMENDED where alternatives\
    \ exist\n       or for general interchange.  See Section 4.6 for more information\n\
    \       on private use subtag choice.\n   For example, suppose a group of scholars\
    \ is studying some texts in\n   medieval Greek.  They might agree to use some\
    \ collection of private\n   use subtags to identify different styles of writing\
    \ in the texts.\n   For example, they might use 'el-x-koine' for documents in\
    \ the\n   \"common\" style while using 'el-x-attic' for other documents that\n\
    \   mimic the Attic style.  These subtags would not be recognized by\n   outside\
    \ processes or systems, but might be useful in categorizing\n   various texts\
    \ for study by those in the group.\n   In the registry, there are also subtags\
    \ derived from codes reserved\n   by ISO 639, ISO 15924, or ISO 3166 for private\
    \ use.  Do not confuse\n   these with private use subtag sequences following the\
    \ subtag 'x'.\n   See Section 4.6.\n"
- title: 2.2.8.  Grandfathered and Redundant Registrations
  contents:
  - "2.2.8.  Grandfathered and Redundant Registrations\n   Prior to RFC 4646, whole\
    \ language tags were registered according to\n   the rules in RFC 1766 and/or\
    \ RFC 3066.  All of these registered tags\n   remain valid as language tags.\n\
    \   Many of these registered tags were made redundant by the advent of\n   either\
    \ RFC 4646 or this document.  A redundant tag is a grandfathered\n   registration\
    \ whose individual subtags appear with the same semantic\n   meaning in the registry.\
    \  For example, the tag \"zh-Hant\" (Traditional\n   Chinese) can now be composed\
    \ from the subtags 'zh' (Chinese) and\n   'Hant' (Han script traditional variant).\
    \  These redundant tags are\n   maintained in the registry as records of type\
    \ 'redundant', mostly as\n   a matter of historical curiosity.\n   The remainder\
    \ of the previously registered tags are \"grandfathered\".\n   These tags are\
    \ classified into two groups: 'regular' and 'irregular'.\n   Grandfathered tags\
    \ that (appear to) match the 'langtag' production in\n   Figure 1 are considered\
    \ 'regular' grandfathered tags.  These tags\n   contain one or more subtags that\
    \ either do not individually appear in\n   the registry or appear but with a different\
    \ semantic meaning: each\n   tag, in its entirety, represents a language or collection\
    \ of\n   languages.\n   Grandfathered tags that do not match the 'langtag' production\
    \ in the\n   ABNF and would otherwise be invalid are considered 'irregular'\n\
    \   grandfathered tags.  With the exception of \"en-GB-oed\", which is a\n   variant\
    \ of \"en-GB\", each of them, in its entirety, represents a\n   language.\n  \
    \ Many of the grandfathered tags have been superseded by the subsequent\n   addition\
    \ of new subtags: each superseded record contains a\n   'Preferred-Value' field\
    \ that ought to be used to form language tags\n   representing that value.  For\
    \ example, the tag \"art-lojban\" is\n   superseded by the primary language subtag\
    \ 'jbo'.\n"
- title: 2.2.9.  Classes of Conformance
  contents:
  - "2.2.9.  Classes of Conformance\n   Implementations sometimes need to describe\
    \ their capabilities with\n   regard to the rules and practices described in this\
    \ document.  Tags\n   can be checked or verified in a number of ways, but two\
    \ particular\n   classes of tag conformance are formally defined here.\n   A tag\
    \ is considered \"well-formed\" if it conforms to the ABNF\n   (Section 2.1).\
    \  Language tags may be well-formed in terms of syntax\n   but not valid in terms\
    \ of content.  However, many operations\n   involving language tags work well\
    \ without knowing anything about the\n   meaning or validity of the subtags.\n\
    \   A tag is considered \"valid\" if it satisfies these conditions:\n   o  The\
    \ tag is well-formed.\n   o  Either the tag is in the list of grandfathered tags\
    \ or all of its\n      primary language, extended language, script, region, and\
    \ variant\n      subtags appear in the IANA Language Subtag Registry as of the\n\
    \      particular registry date.\n   o  There are no duplicate variant subtags.\n\
    \   o  There are no duplicate singleton (extension) subtags.\n   Note that a tag's\
    \ validity depends on the date of the registry used\n   to validate the tag. \
    \ A more recent copy of the registry might\n   contain a subtag that an older\
    \ version does not.\n   A tag is considered valid for a given extension (Section\
    \ 3.7) (as of\n   a particular version, revision, and date) if it meets the criteria\n\
    \   for \"valid\" above and also satisfies this condition:\n      Each subtag\
    \ used in the extension part of the tag is valid\n      according to the extension.\n\
    \   Older specifications or language tag implementations sometimes\n   reference\
    \ [RFC3066].  A wider array of tags was considered well-\n   formed under that\
    \ document.  Any tags that were valid for use under\n   RFC 3066 are both well-formed\
    \ and valid under this document's syntax;\n   only invalid or illegal tags were\
    \ well-formed under the earlier\n   definition but no longer are.  The language\
    \ tag syntax under RFC 3066\n   was:\n       obs-language-tag = primary-subtag\
    \ *( \"-\" subtag )\n       primary-subtag   = 1*8ALPHA\n       subtag       \
    \    = 1*8(ALPHA / DIGIT)\n                  Figure 2: RFC 3066 Language Tag Syntax\n\
    \   Subtags designated for private use as well as private use sequences\n   introduced\
    \ by the 'x' subtag are available for cases in which no\n   assigned subtags are\
    \ available and registration is not a suitable\n   option.  For example, one might\
    \ use a tag such as \"no-QQ\", where 'QQ'\n   is one of a range of private use\
    \ ISO 3166-1 codes to indicate an\n   otherwise undefined region.  Users MUST\
    \ NOT assign language tags that\n   use subtags that do not appear in the registry\
    \ other than in private\n   use sequences (such as the subtag 'personal' in the\
    \ tag \"en-x-\n   personal\").  Besides not being valid, the user also risks collision\n\
    \   with a future possible assignment or registrations.\n   Note well: although\
    \ the 'Language-Tag' production appearing in this\n   document is functionally\
    \ equivalent to the one in [RFC4646], it has\n   been changed to prevent certain\
    \ errors in well-formedness arising\n   from the old 'grandfathered' production.\n"
- title: 3.  Registry Format and Maintenance
  contents:
  - "3.  Registry Format and Maintenance\n   The IANA Language Subtag Registry (\"\
    the registry\") contains a\n   comprehensive list of all of the subtags valid\
    \ in language tags.\n   This allows implementers a straightforward and reliable\
    \ way to\n   validate language tags.  The registry will be maintained so that,\n\
    \   except for extension subtags, it is possible to validate all of the\n   subtags\
    \ that appear in a language tag under the provisions of this\n   document or its\
    \ revisions or successors.  In addition, the meaning of\n   the various subtags\
    \ will be unambiguous and stable over time.  (The\n   meaning of private use subtags,\
    \ of course, is not defined by the\n   registry.)\n   This section defines the\
    \ registry along with the maintenance and\n   update procedures associated with\
    \ it, as well as a registry for\n   extensions to language tags (Section 3.7).\n"
- title: 3.1.  Format of the IANA Language Subtag Registry
  contents:
  - "3.1.  Format of the IANA Language Subtag Registry\n   The IANA Language Subtag\
    \ Registry is a machine-readable file in the\n   format described in this section,\
    \ plus copies of the registration\n   forms approved in accordance with the process\
    \ described in\n   Section 3.5.\n   The existing registration forms for grandfathered\
    \ and redundant tags\n   taken from RFC 3066 have been maintained as part of the\
    \ obsolete RFC\n   3066 registry.  The subtags added to the registry by either\
    \ [RFC4645]\n   or [RFC5645] do not have separate registration forms (so no forms\
    \ are\n   archived for these additions).\n"
- title: 3.1.1.  File Format
  contents:
  - "3.1.1.  File Format\n   The registry is a [Unicode] text file and consists of\
    \ a series of\n   records in a format based on \"record-jar\" (described in\n\
    \   [record-jar]).  Each record, in turn, consists of a series of fields\n   that\
    \ describe the various subtags and tags.  The actual registry file\n   is encoded\
    \ using the UTF-8 [RFC3629] character encoding.\n   Each field can be considered\
    \ a single, logical line of characters.\n   Each field contains a \"field-name\"\
    \ and a \"field-body\".  These are\n   separated by a \"field-separator\".  The\
    \ field-separator is a COLON\n   character (U+003A) plus any surrounding whitespace.\
    \  Each field is\n   terminated by the newline sequence CRLF.  The text in each\
    \ field MUST\n   be in Unicode Normalization Form C (NFC).\n   A collection of\
    \ fields forms a \"record\".  Records are separated by\n   lines containing only\
    \ the sequence \"%%\" (U+0025 U+0025).\n   Although fields are logically a single\
    \ line of text, each line of\n   text in the file format is limited to 72 bytes\
    \ in length.  To\n   accommodate this, the field-body can be split into a multiple-line\n\
    \   representation; this is called \"folding\".  Folding is done according\n \
    \  to customary conventions for line-wrapping.  This is typically on\n   whitespace\
    \ boundaries, but can occur between other characters when\n   the value does not\
    \ include spaces, such as when a language does not\n   use whitespace between\
    \ words.  In any event, there MUST NOT be breaks\n   inside a multibyte UTF-8\
    \ sequence or in the middle of a combining\n   character sequence.  For more information,\
    \ see [UAX14].\n   Although the file format uses the Unicode character set and\
    \ the file\n   itself is encoded using the UTF-8 encoding, fields are restricted\
    \ to\n   the printable characters from the US-ASCII [ISO646] repertoire unless\n\
    \   otherwise indicated in the description of a specific field\n   (Section 3.1.2).\n\
    \   The format of the registry is described by the following ABNF\n   [RFC5234].\
    \  Character numbers (code points) are taken from Unicode,\n   and terminals in\
    \ the ABNF productions are in terms of characters\n   rather than bytes.\n   registry\
    \   = record *(\"%%\" CRLF record)\n   record     = 1*field\n   field      = (\
    \ field-name field-sep field-body CRLF )\n   field-name = (ALPHA / DIGIT) [*(ALPHA\
    \ / DIGIT / \"-\") (ALPHA / DIGIT)]\n   field-sep  = *SP \":\" *SP\n   field-body\
    \ = *([[*SP CRLF] 1*SP] 1*CHARS)\n   CHARS      = (%x21-10FFFF)      ; Unicode\
    \ code points\n                      Figure 3: Registry Format ABNF\n   The sequence\
    \ '..'  (U+002E U+002E) in a field-body denotes a range of\n   values.  Such a\
    \ range represents all subtags of the same length that\n   are in alphabetic or\
    \ numeric order within that range, including the\n   values explicitly mentioned.\
    \  For example, 'a..c' denotes the values\n   'a', 'b', and 'c', and '11..13'\
    \ denotes the values '11', '12', and\n   '13'.\n   All fields whose field-body\
    \ contains a date value use the \"full-date\"\n   format specified in [RFC3339].\
    \  For example, \"2004-06-28\" represents\n   June 28, 2004, in the Gregorian\
    \ calendar.\n"
- title: 3.1.2.  Record and Field Definitions
  contents:
  - "3.1.2.  Record and Field Definitions\n   There are three types of records in\
    \ the registry: \"File-Date\",\n   \"Subtag\", and \"Tag\".\n   The first record\
    \ in the registry is always the \"File-Date\" record.\n   This record occurs only\
    \ once in the file and contains a single field\n   whose field-name is \"File-Date\"\
    .  The field-body of this record\n   contains a date (see Section 5.1), making\
    \ it possible to easily\n   recognize different versions of the registry.\n  \
    \ File-Date: 2004-06-28\n   %%\n                 Figure 4: Example of the File-Date\
    \ Record\n   Subsequent records contain multiple fields and represent information\n\
    \   about either subtags or tags.  Both types of records have an\n   identical\
    \ structure, except that \"Subtag\" records contain a field\n   with a field-name\
    \ of \"Subtag\", while, unsurprisingly, \"Tag\" records\n   contain a field with\
    \ a field-name of \"Tag\".  Field-names MUST NOT\n   occur more than once per\
    \ record, with the exception of the\n   'Description', 'Comments', and 'Prefix'\
    \ fields.\n   Each record MUST contain at least one of each of the following\n\
    \   fields:\n   o  'Type'\n      *  Type's field-body MUST consist of one of the\
    \ following strings:\n         \"language\", \"extlang\", \"script\", \"region\"\
    , \"variant\",\n         \"grandfathered\", and \"redundant\"; it denotes the\
    \ type of tag or\n         subtag.\n   o  Either 'Subtag' or 'Tag'\n      *  Subtag's\
    \ field-body contains the subtag being defined.  This\n         field MUST appear\
    \ in all records whose 'Type' has one of these\n         values: \"language\"\
    , \"extlang\", \"script\", \"region\", or\n         \"variant\".\n      *  Tag's\
    \ field-body contains a complete language tag.  This field\n         MUST appear\
    \ in all records whose 'Type' has one of these\n         values: \"grandfathered\"\
    \ or \"redundant\".  If the 'Type' is\n         \"grandfathered\", then the 'Tag'\
    \ field-body will be one of the\n         tags listed in either the 'regular'\
    \ or 'irregular' production\n         found in Section 2.1.\n   o  'Description'\n\
    \      *  Description's field-body contains a non-normative description\n    \
    \     of the subtag or tag.\n   o  'Added'\n      *  Added's field-body contains\
    \ the date the record was registered\n         or, in the case of grandfathered\
    \ or redundant tags, the date\n         the corresponding tag was registered under\
    \ the rules of\n         [RFC1766] or [RFC3066].\n   Each record MAY also contain\
    \ the following fields:\n   o  'Deprecated'\n      *  Deprecated's field-body\
    \ contains the date the record was\n         deprecated.  In some cases, this\
    \ value is earlier than that of\n         the 'Added' field in the same record.\
    \  That is, the date of\n         deprecation preceded the addition of the record\
    \ to the\n         registry.\n   o  'Preferred-Value'\n      *  Preferred-Value's\
    \ field-body contains a canonical mapping from\n         this record's value to\
    \ a modern equivalent that is preferred in\n         its place.  Depending on\
    \ the value of the 'Type' field, this\n         value can take different forms:\n\
    \         +  For fields of type 'language', 'Preferred-Value' contains\n     \
    \       the primary language subtag that is preferred when forming\n         \
    \   the language tag.\n         +  For fields of type 'script', 'region', or 'variant',\n\
    \            'Preferred-Value' contains the subtag of the same type that\n   \
    \         is preferred for forming the language tag.\n         +  For fields of\
    \ type 'extlang', 'grandfathered', or\n            'redundant', 'Preferred-Value'\
    \ contains an \"extended\n            language range\" [RFC4647] that is preferred\
    \ for forming the\n            language tag.  That is, the preferred language\
    \ tag will\n            contain, in order, each of the subtags that appears in\
    \ the\n            'Preferred-Value'; additional fields can be included in a\n\
    \            language tag, as described elsewhere in this document.  For\n   \
    \         example, the replacement for the grandfathered tag \"zh-min-\n     \
    \       nan\" (Min Nan Chinese) is \"nan\", which can be used as the\n       \
    \     basis for tags such as \"nan-Hant\" or \"nan-TW\" (note that the\n     \
    \       extended language subtag form such as \"zh-nan-Hant\" or \"zh-\n     \
    \       nan-TW\" can also be used).\n   o  'Prefix'\n      *  Prefix's field-body\
    \ contains a valid language tag that is\n         RECOMMENDED as one possible\
    \ prefix to this record's subtag.\n         This field MAY appear in records whose\
    \ 'Type' field-body is\n         either 'extlang' or 'variant' (it MUST NOT appear\
    \ in any other\n         record type).\n   o  'Suppress-Script'\n      *  Suppress-Script's\
    \ field-body contains a script subtag that\n         SHOULD NOT be used to form\
    \ language tags with the associated\n         primary or extended language subtag.\
    \  This field MUST appear\n         only in records whose 'Type' field-body is\
    \ 'language' or\n         'extlang'.  See Section 4.1.\n   o  'Macrolanguage'\n\
    \      *  Macrolanguage's field-body contains a primary language subtag\n    \
    \     defined by ISO 639 as the \"macrolanguage\" that encompasses this\n    \
    \     language subtag.  This field MUST appear only in records whose\n       \
    \  'Type' field-body is either 'language' or 'extlang'.\n   o  'Scope'\n     \
    \ *  Scope's field-body contains information about a primary or\n         extended\
    \ language subtag indicating the type of language code\n         according to\
    \ ISO 639.  The values permitted in this field are\n         \"macrolanguage\"\
    , \"collection\", \"special\", and \"private-use\".\n         This field only\
    \ appears in records whose 'Type' field-body is\n         either 'language' or\
    \ 'extlang'.  When this field is omitted,\n         the language is an individual\
    \ language.\n   o  'Comments'\n      *  Comments's field-body contains additional\
    \ information about the\n         subtag, as deemed appropriate for understanding\
    \ the registry\n         and implementing language tags using the subtag or tag.\n\
    \   Future versions of this document might add additional fields to the\n   registry;\
    \ implementations SHOULD ignore fields found in the registry\n   that are not\
    \ defined in this document.\n"
- title: 3.1.3.  Type Field
  contents:
  - "3.1.3.  Type Field\n   The field 'Type' contains the string identifying the record\
    \ type in\n   which it appears.  Values for the 'Type' field-body are: \"language\"\
    \n   (Section 2.2.1); \"extlang\" (Section 2.2.2); \"script\" (Section 2.2.3);\n\
    \   \"region\" (Section 2.2.4); \"variant\" (Section 2.2.5); \"grandfathered\"\
    \n   or \"redundant\" (Section 2.2.8).\n"
- title: 3.1.4.  Subtag and Tag Fields
  contents:
  - "3.1.4.  Subtag and Tag Fields\n   The field 'Subtag' contains the subtag defined\
    \ in the record.  The\n   field 'Tag' appears in records whose 'Type' is either\
    \ 'grandfathered'\n   or 'redundant' and contains a tag registered under [RFC3066].\n\
    \   The 'Subtag' field-body MUST follow the casing conventions described\n   in\
    \ Section 2.1.1.  All subtags use lowercase letters in the field-\n   body, with\
    \ two exceptions:\n      Subtags whose 'Type' field is 'script' (in other words,\
    \ subtags\n      defined by ISO 15924) MUST use titlecase.\n      Subtags whose\
    \ 'Type' field is 'region' (in other words, the non-\n      numeric region subtags\
    \ defined by ISO 3166-1) MUST use all\n      uppercase.\n   The 'Tag' field-body\
    \ MUST be formatted according to the rules\n   described in Section 2.1.1.\n"
- title: 3.1.5.  Description Field
  contents:
  - "3.1.5.  Description Field\n   The field 'Description' contains a description\
    \ of the tag or subtag\n   in the record.  The 'Description' field MAY appear\
    \ more than once per\n   record.  The 'Description' field MAY include the full\
    \ range of\n   Unicode characters.  At least one of the 'Description' fields MUST\
    \ be\n   written or transcribed into the Latin script; additional\n   'Description'\
    \ fields MAY be in any script or language.\n   The 'Description' field is used\
    \ for identification purposes.\n   Descriptions SHOULD contain all and only that\
    \ information necessary\n   to distinguish one subtag from others with which it\
    \ might be\n   confused.  They are not intended to provide general background\n\
    \   information or to provide all possible alternate names or\n   designations.\
    \  'Description' fields don't necessarily represent the\n   actual native name\
    \ of the item in the record, nor are any of the\n   descriptions guaranteed to\
    \ be in any particular language (such as\n   English or French, for example).\n\
    \   Descriptions in the registry that correspond to ISO 639, ISO 15924,\n   ISO\
    \ 3166-1, or UN M.49 codes are intended only to indicate the\n   meaning of that\
    \ identifier as defined in the source standard at the\n   time it was added to\
    \ the registry or as subsequently modified, within\n   the bounds of the stability\
    \ rules (Section 3.4), via subsequent\n   registration.  The 'Description' does\
    \ not replace the content of the\n   source standard itself.  'Description' fields\
    \ are not intended to be\n   the localized English names for the subtags.  Localization\
    \ or\n   translation of language tag and subtag descriptions is out of scope\n\
    \   of this document.\n   For subtags taken from a source standard (such as ISO\
    \ 639 or ISO\n   15924), the 'Description' fields in the record are also initially\n\
    \   taken from that source standard.  Multiple descriptions in the source\n  \
    \ standard are split into separate 'Description' fields.  The source\n   standard's\
    \ descriptions MAY be edited or modified, either prior to\n   insertion or via\
    \ the registration process, and additional or\n   extraneous descriptions omitted\
    \ or removed.  Each 'Description' field\n   MUST be unique within the record in\
    \ which it appears, and formatting\n   variations of the same description SHOULD\
    \ NOT occur in that specific\n   record.  For example, while the ISO 639-1 code\
    \ 'fy' has both the\n   description \"Western Frisian\" and the description \"\
    Frisian, Western\"\n   in that standard, only one of these descriptions appears\
    \ in the\n   registry.\n   To help ensure that users do not become confused about\
    \ which subtag\n   to use, 'Description' fields assigned to a record of any specific\n\
    \   type ('language', 'extlang', 'script', and so on) MUST be unique\n   within\
    \ that given record type with the following exception: if a\n   particular 'Description'\
    \ field occurs in multiple records of a given\n   type, then at most one of the\
    \ records can omit the 'Deprecated'\n   field.  All deprecated records that share\
    \ a 'Description' MUST have\n   the same 'Preferred-Value', and all non-deprecated\
    \ records MUST be\n   that 'Preferred-Value'.  This means that two records of\
    \ the same type\n   that share a 'Description' are also semantically equivalent\
    \ and no\n   more than one record with a given 'Description' is preferred for\
    \ that\n   meaning.\n   For example, consider the 'language' subtags 'zza' (Zaza)\
    \ and 'diq'\n   (Dimli).  It so happens that 'zza' is a macrolanguage enclosing\
    \ 'diq'\n   and thus also has a description in ISO 639-3 of \"Dimli\".  This\n\
    \   description was edited to read \"Dimli (macrolanguage)\" in the\n   registry\
    \ record for 'zza' to prevent a collision.\n   By contrast, the subtags 'he' and\
    \ 'iw' share a 'Description' value of\n   \"Hebrew\"; this is permitted because\
    \ 'iw' is deprecated and its\n   'Preferred-Value' is 'he'.\n   For fields of\
    \ type 'language', the first 'Description' field\n   appearing in the registry\
    \ corresponds whenever possible to the\n   Reference Name assigned by ISO 639-3.\
    \  This helps facilitate cross-\n   referencing between ISO 639 and the registry.\n\
    \   When creating or updating a record due to the action of one of the\n   source\
    \ standards, the Language Subtag Reviewer MAY edit descriptions\n   to correct\
    \ irregularities in formatting (such as misspellings,\n   inappropriate apostrophes\
    \ or other punctuation, or excessive or\n   missing spaces) prior to submitting\
    \ the proposed record to the\n   ietf-languages@iana.org list for consideration.\n"
- title: 3.1.6.  Deprecated Field
  contents:
  - "3.1.6.  Deprecated Field\n   The field 'Deprecated' contains the date the record\
    \ was deprecated\n   and MAY be added, changed, or removed from any record via\
    \ the\n   maintenance process described in Section 3.3 or via the registration\n\
    \   process described in Section 3.5.  Usually, the addition of a\n   'Deprecated'\
    \ field is due to the action of one of the standards\n   bodies, such as ISO 3166,\
    \ withdrawing a code.  Although valid in\n   language tags, subtags and tags with\
    \ a 'Deprecated' field are\n   deprecated, and validating processors SHOULD NOT\
    \ generate these\n   subtags.  Note that a record that contains a 'Deprecated'\
    \ field and\n   no corresponding 'Preferred-Value' field has no replacement mapping.\n\
    \   In some historical cases, it might not have been possible to\n   reconstruct\
    \ the original deprecation date.  For these cases, an\n   approximate date appears\
    \ in the registry.  Some subtags and some\n   grandfathered or redundant tags\
    \ were deprecated before the initial\n   creation of the registry.  The exact\
    \ rules for this appear in Section\n   2 of [RFC4645].  Note that these records\
    \ have a 'Deprecated' field\n   with an earlier date then the corresponding 'Added'\
    \ field!\n"
- title: 3.1.7.  Preferred-Value Field
  contents:
  - "3.1.7.  Preferred-Value Field\n   The field 'Preferred-Value' contains a mapping\
    \ between the record in\n   which it appears and another tag or subtag (depending\
    \ on the record's\n   'Type').  The value in this field is used for canonicalization\
    \ (see\n   Section 4.5).  In cases where the subtag or tag also has a\n   'Deprecated'\
    \ field, then the 'Preferred-Value' is RECOMMENDED as the\n   best choice to represent\
    \ the value of this record when selecting a\n   language tag.\n   Records containing\
    \ a 'Preferred-Value' fall into one of these four\n   groups:\n   1.  ISO 639\
    \ language codes that were later withdrawn in favor of\n       other codes.  These\
    \ values are mostly a historical curiosity.\n       The 'he'/'iw' pairing above\
    \ is an example of this.\n   2.  Subtags (with types other than language or extlang)\
    \ taken from\n       codes or values that have been withdrawn in favor of a new\
    \ code.\n       In particular, this applies to region subtags taken from ISO\n\
    \       3166-1, because sometimes a country will change its name or\n       administration\
    \ in such a way that warrants a new region code.  In\n       some cases, countries\
    \ have reverted to an older name, which might\n       already be encoded.  For\
    \ example, the subtag 'ZR' (Zaire) was\n       replaced by the subtag 'CD' (Democratic\
    \ Republic of the Congo)\n       when that country's name was changed.\n   3.\
    \  Tags or subtags that have become obsolete because the values they\n       represent\
    \ were later encoded.  Many of the grandfathered or\n       redundant tags were\
    \ later encoded by ISO 639, for example, and\n       fall into this grouping.\
    \  For example, \"i-klingon\" was deprecated\n       when the subtag 'tlh' was\
    \ added.  The record for \"i-klingon\" has\n       a 'Preferred-Value' of 'tlh'.\n\
    \   4.  Extended language subtags always have a mapping to their\n       identical\
    \ primary language subtag.  For example, the extended\n       language subtag\
    \ 'yue' (Cantonese) can be used to form the tag\n       \"zh-yue\".  It has a\
    \ 'Preferred-Value' mapping to the primary\n       language subtag 'yue', meaning\
    \ that a tag such as\n       \"zh-yue-Hant-HK\" can be canonicalized to \"yue-Hant-HK\"\
    .\n   Records other than those of type 'extlang' that contain a 'Preferred-\n\
    \   Value' field MUST also have a 'Deprecated' field.  This field\n   contains\
    \ the date on which the tag or subtag was deprecated in favor\n   of the preferred\
    \ value.\n   For records of type 'extlang', the 'Preferred-Value' field appears\n\
    \   without a corresponding 'Deprecated' field.  An implementation MAY\n   ignore\
    \ these preferred value mappings, although if it ignores the\n   mapping, it SHOULD\
    \ do so consistently.  It SHOULD also treat the\n   'Preferred-Value' as equivalent\
    \ to the mapped item.  For example, the\n   tags \"zh-yue-Hant-HK\" and \"yue-Hant-HK\"\
    \ are semantically equivalent\n   and ought to be treated as if they were the\
    \ same tag.\n   Occasionally, the deprecated code is preferred in certain contexts.\n\
    \   For example, both \"iw\" and \"he\" can be used in the Java programming\n\
    \   language, but \"he\" is converted on input to \"iw\", which is thus the\n\
    \   canonical form in Java.\n   'Preferred-Value' mappings in records of type\
    \ 'region' sometimes do\n   not represent exactly the same meaning as the original\
    \ value.  There\n   are many reasons for a country code to be changed, and the\
    \ effect\n   this has on the formation of language tags will depend on the nature\n\
    \   of the change in question.  For example, the region subtag 'YD'\n   (Democratic\
    \ Yemen) was deprecated in favor of the subtag 'YE' (Yemen)\n   when those two\
    \ countries unified in 1990.\n   A 'Preferred-Value' MAY be added to, changed,\
    \ or removed from records\n   according to the rules in Section 3.3.  Addition,\
    \ modification, or\n   removal of a 'Preferred-Value' field in a record does not\
    \ imply that\n   content using the affected subtag needs to be retagged.\n   The\
    \ 'Preferred-Value' fields in records of type \"grandfathered\" and\n   \"redundant\"\
    \ each contain an \"extended language range\" [RFC4647] that\n   is strongly RECOMMENDED\
    \ for use in place of the record's value.  In\n   many cases, these mappings were\
    \ created via deprecation of the tags\n   during the period before [RFC4646] was\
    \ adopted.  For example, the tag\n   \"no-nyn\" was deprecated in favor of the\
    \ ISO 639-1-defined language\n   code 'nn'.\n   The 'Preferred-Value' field in\
    \ subtag records of type \"extlang\" also\n   contains an \"extended language\
    \ range\".  This allows the subtag to be\n   deprecated in favor of either a single\
    \ primary language subtag or a\n   new language-extlang sequence.\n   Usually,\
    \ the addition, removal, or change of a 'Preferred-Value'\n   field for a subtag\
    \ is done to reflect changes in one of the source\n   standards.  For example,\
    \ if an ISO 3166-1 region code is deprecated\n   in favor of another code, that\
    \ SHOULD result in the addition of a\n   'Preferred-Value' field.\n   Changes\
    \ to one subtag can affect other subtags as well: when\n   proposing changes to\
    \ the registry, the Language Subtag Reviewer MUST\n   review the registry for\
    \ such effects and propose the necessary\n   changes using the process in Section\
    \ 3.5, although anyone MAY request\n   such changes.  For example:\n      Suppose\
    \ that subtag 'XX' has a 'Preferred-Value' of 'YY'.  If 'YY'\n      later changes\
    \ to have a 'Preferred-Value' of 'ZZ', then the\n      'Preferred-Value' for 'XX'\
    \ MUST also change to be 'ZZ'.\n      Suppose that a registered language subtag\
    \ 'dialect' represents a\n      language not yet available in any part of ISO\
    \ 639.  The later\n      addition of a corresponding language code in ISO 639\
    \ SHOULD result\n      in the addition of a 'Preferred-Value' for 'dialect'.\n"
- title: 3.1.8.  Prefix Field
  contents:
  - "3.1.8.  Prefix Field\n   The field 'Prefix' contains a valid language tag that\
    \ is RECOMMENDED\n   as one possible prefix to this record's subtag, perhaps with\
    \ other\n   subtags.  That is, when including an extended language or a variant\n\
    \   subtag that has at least one 'Prefix' in a language tag, the\n   resulting\
    \ tag SHOULD match at least one of the subtag's 'Prefix'\n   fields using the\
    \ \"Extended Filtering\" algorithm (see [RFC4647]), and\n   each of the subtags\
    \ in that 'Prefix' SHOULD appear before the subtag\n   itself.\n   The 'Prefix'\
    \ field MUST appear exactly once in a record of type\n   'extlang'.  The 'Prefix'\
    \ field MAY appear multiple times (or not at\n   all) in records of type 'variant'.\
    \  Additional fields of this type\n   MAY be added to a 'variant' record via the\
    \ registration process,\n   provided the 'variant' record already has at least\
    \ one 'Prefix'\n   field.\n   Each 'Prefix' field indicates a particular sequence\
    \ of subtags that\n   form a meaningful tag with this subtag.  For example, the\
    \ extended\n   language subtag 'cmn' (Mandarin Chinese) only makes sense with\
    \ its\n   prefix 'zh' (Chinese).  Similarly, 'rozaj' (Resian, a dialect of\n \
    \  Slovenian) would be appropriate when used with its prefix 'sl'\n   (Slovenian),\
    \ while tags such as \"is-1994\" are not appropriate (and\n   probably not meaningful).\
    \  Although the 'Prefix' for 'rozaj' is \"sl\",\n   other subtags might appear\
    \ between them.  For example, the tag \"sl-\n   IT-rozaj\" (Slovenian, Italy,\
    \ Resian) matches the 'Prefix' \"sl\".\n   The 'Prefix' also indicates when variant\
    \ subtags make sense when used\n   together (many that otherwise share a 'Prefix'\
    \ are mutually\n   exclusive) and what the relative ordering of variants is supposed\
    \ to\n   be.  For example, the variant '1994' (Standardized Resian\n   orthography)\
    \ has several 'Prefix' fields in the registry (\"sl-rozaj\",\n   \"sl-rozaj-biske\"\
    , \"sl-rozaj-njiva\", \"sl-rozaj-osojs\", and \"sl-rozaj-\n   solba\").  This\
    \ indicates not only that '1994' is appropriate to use\n   with each of these\
    \ five Resian variant subtags ('rozaj', 'biske',\n   'njiva', 'osojs', and 'solba'),\
    \ but also that it SHOULD appear\n   following any of these variants in a tag.\
    \  Thus, the language tag\n   ought to take the form \"sl-rozaj-biske-1994\",\
    \ rather than \"sl-1994-\n   rozaj-biske\" or \"sl-rozaj-1994-biske\".\n   If\
    \ a record includes no 'Prefix' field, a 'Prefix' field MUST NOT be\n   added\
    \ to the record at a later date.  Otherwise, changes (additions,\n   deletions,\
    \ or modifications) to the set of 'Prefix' fields MAY be\n   registered, as long\
    \ as they strictly widen the range of language tags\n   that are recommended.\
    \  For example, a 'Prefix' with the value \"be-\n   Latn\" (Belarusian, Latin\
    \ script) could be replaced by the value \"be\"\n   (Belarusian) but not by the\
    \ value \"ru-Latn\" (Russian, Latin script)\n   or the value \"be-Latn-BY\" (Belarusian,\
    \ Latin script, Belarus), since\n   these latter either change or narrow the range\
    \ of suggested tags.\n   The field-body of the 'Prefix' field MUST NOT conflict\
    \ with any\n   'Prefix' already registered for a given record.  Such a conflict\n\
    \   would occur when no valid tag could be constructed that would contain\n  \
    \ the prefix, such as when two subtags each have a 'Prefix' that\n   contains\
    \ the other subtag.  For example, suppose that the subtag\n   'avariant' has the\
    \ prefix \"es-bvariant\".  Then the subtag 'bvariant'\n   cannot be assigned the\
    \ prefix 'avariant', for that would require a\n   tag of the form \"es-avariant-bvariant-avariant\"\
    , which would not be\n   valid.\n"
- title: 3.1.9.  Suppress-Script Field
  contents:
  - "3.1.9.  Suppress-Script Field\n   The field 'Suppress-Script' contains a script\
    \ subtag (whose record\n   appears in the registry).  The field 'Suppress-Script'\
    \ MUST appear\n   only in records whose 'Type' field-body is either 'language'\
    \ or\n   'extlang'.  This field MUST NOT appear more than one time in a\n   record.\n\
    \   This field indicates a script used to write the overwhelming majority\n  \
    \ of documents for the given language.  The subtag for such a script\n   therefore\
    \ adds no distinguishing information to a language tag and\n   thus SHOULD NOT\
    \ be used for most documents in that language.\n   Omitting the script subtag\
    \ indicated by this field helps ensure\n   greater compatibility between the language\
    \ tags generated according\n   to the rules in this document and language tags\
    \ and tag processors or\n   consumers based on RFC 3066.  For example, virtually\
    \ all Icelandic\n   documents are written in the Latin script, making the subtag\
    \ 'Latn'\n   redundant in the tag \"is-Latn\".\n   Many language subtag records\
    \ do not have a 'Suppress-Script' field.\n   The lack of a 'Suppress-Script' might\
    \ indicate that the language is\n   customarily written in more than one script\
    \ or that the language is\n   not customarily written at all.  It might also mean\
    \ that sufficient\n   information was not available when the record was created\
    \ and thus\n   remains a candidate for future registration.\n"
- title: 3.1.10.  Macrolanguage Field
  contents:
  - "3.1.10.  Macrolanguage Field\n   The field 'Macrolanguage' contains a primary\
    \ language subtag (whose\n   record appears in the registry).  This field indicates\
    \ a language\n   that encompasses this subtag's language according to assignments\
    \ made\n   by ISO 639-3.\n   ISO 639-3 labels some languages in the registry as\
    \ \"macrolanguages\".\n   ISO 639-3 defines the term \"macrolanguage\" to mean\
    \ \"clusters of\n   closely-related language varieties that [...] can be considered\n\
    \   distinct individual languages, yet in certain usage contexts a single\n  \
    \ language identity for all is needed\".  These correspond to codes\n   registered\
    \ in ISO 639-2 as individual languages that were found to\n   correspond to more\
    \ than one language in ISO 639-3.\n   A language contained within a macrolanguage\
    \ is called an \"encompassed\n   language\".  The record for each encompassed\
    \ language contains a\n   'Macrolanguage' field in the registry; the macrolanguages\
    \ themselves\n   are not specially marked.  Note that some encompassed languages\
    \ have\n   ISO 639-1 or ISO 639-2 codes.\n   The 'Macrolanguage' field can only\
    \ occur in records of type\n   'language' or 'extlang'.  Only values assigned\
    \ by ISO 639-3 will be\n   considered for inclusion.  'Macrolanguage' fields MAY\
    \ be added or\n   removed via the normal registration process whenever ISO 639-3\n\
    \   defines new values or withdraws old values.  Macrolanguages are\n   informational,\
    \ and MAY be removed or changed if ISO 639-3 changes the\n   values.  For more\
    \ information on the use of this field and choosing\n   between macrolanguage\
    \ and encompassed language subtags, see\n   Section 4.1.1.\n   For example, the\
    \ language subtags 'nb' (Norwegian Bokmal) and 'nn'\n   (Norwegian Nynorsk) each\
    \ have a 'Macrolanguage' field with a value of\n   'no' (Norwegian).  For more\
    \ information, see Section 4.1.\n"
- title: 3.1.11.  Scope Field
  contents:
  - "3.1.11.  Scope Field\n   The field 'Scope' contains classification information\
    \ about a primary\n   or extended language subtag derived from ISO 639.  Most\
    \ languages\n   have a scope of 'individual', which means that the language is\
    \ not a\n   macrolanguage, collection, special code, or private use.  That is,\
    \ it\n   is what one would normally consider to be 'a language'.  Any primary\n\
    \   or extended language subtag that has no 'Scope' field is an\n   individual\
    \ language.\n   'Scope' information can sometimes be helpful in selecting language\n\
    \   tags, since it indicates the purpose or \"scope\" of the code\n   assignment\
    \ within ISO 639.  The available values are:\n   o  'macrolanguage' - Indicates\
    \ a macrolanguage as defined by ISO\n      639-3 (see Section 3.1.10).  A macrolanguage\
    \ is a cluster of\n      closely related languages that are sometimes considered\
    \ to be a\n      single language.\n   o  'collection' - Indicates a subtag that\
    \ represents a collection of\n      languages, typically related by some type\
    \ of historical,\n      geographical, or linguistic association.  Unlike a macrolanguage,\n\
    \      a collection can contain languages that are only loosely related\n    \
    \  and a collection cannot be used interchangeably with languages\n      that\
    \ belong to it.\n   o  'special' - Indicates a special language code.  These are\
    \ subtags\n      used for identifying linguistic attributes not particularly\n\
    \      associated with a concrete language.  These include codes for when\n  \
    \    the language is undetermined or for non-linguistic content.\n   o  'private-use'\
    \ - Indicates a code reserved for private use in the\n      underlying standard.\
    \  Subtags with this scope can be used to\n      indicate a primary language for\
    \ which no ISO 639 or registered\n      assignment exists.\n   The 'Scope' field\
    \ MAY appear in records of type 'language' or\n   'extlang'.  Note that many of\
    \ the prefixes for extended language\n   subtags will have a 'Scope' of 'macrolanguage'\
    \ (although some will\n   not) and that many languages that have a 'Scope' of\
    \ 'macrolanguage'\n   will have extended language subtags associated with them.\n\
    \   The 'Scope' field MAY be added, modified, or removed via the\n   registration\
    \ process, provided the change mirrors changes made by ISO\n   639 to the assignment's\
    \ classification.  Such a change is expected to\n   be rare.\n   For example,\
    \ the primary language subtag 'zh' (Chinese) has a 'Scope'\n   of 'macrolanguage',\
    \ while its enclosed language 'nan' (Min Nan\n   Chinese) has a 'Scope' of 'individual'.\
    \  The special value 'und'\n   (Undetermined) has a 'Scope' of 'special'.  The\
    \ ISO 639-5 collection\n   'gem' (Germanic languages) has a 'Scope' of 'collection'.\n"
- title: 3.1.12.  Comments Field
  contents:
  - "3.1.12.  Comments Field\n   The field 'Comments' contains additional information\
    \ about the record\n   and MAY appear more than once per record.  The field-body\
    \ MAY include\n   the full range of Unicode characters and is not restricted to\
    \ any\n   particular script.  This field MAY be inserted or changed via the\n\
    \   registration process, and no guarantee of stability is provided.\n   The content\
    \ of this field is not restricted, except by the need to\n   register the information,\
    \ the suitability of the request, and by\n   reasonable practical size limitations.\
    \  The primary reason for the\n   'Comments' field is subtag identification --\
    \ to help distinguish the\n   subtag from others with which it might be confused\
    \ as an aid to\n   usage.  Large amounts of information about the use, history,\
    \ or\n   general background of a subtag are frowned upon, as these generally\n\
    \   belong in a registration request rather than in the registry.\n"
- title: 3.2.  Language Subtag Reviewer
  contents:
  - "3.2.  Language Subtag Reviewer\n   The Language Subtag Reviewer moderates the\
    \ ietf-languages@iana.org\n   mailing list, responds to requests for registration,\
    \ and performs the\n   other registry maintenance duties described in Section\
    \ 3.3.  Only the\n   Language Subtag Reviewer is permitted to request IANA to\
    \ change,\n   update, or add records to the Language Subtag Registry.  The Language\n\
    \   Subtag Reviewer MAY delegate list moderation and other clerical\n   duties\
    \ as needed.\n   The Language Subtag Reviewer is appointed by the IESG for an\n\
    \   indefinite term, subject to removal or replacement at the IESG's\n   discretion.\
    \  The IESG will solicit nominees for the position (upon\n   adoption of this\
    \ document or upon a vacancy) and then solicit\n   feedback on the nominees' qualifications.\
    \  Qualified candidates\n   should be familiar with BCP 47 and its requirements;\
    \ be willing to\n   fairly, responsively, and judiciously administer the registration\n\
    \   process; and be suitably informed about the issues of language\n   identification\
    \ so that the reviewer can assess the claims and draw\n   upon the contributions\
    \ of language experts and subtag requesters.\n   The subsequent performance or\
    \ decisions of the Language Subtag\n   Reviewer MAY be appealed to the IESG under\
    \ the same rules as other\n   IETF decisions (see [RFC2026]).  The IESG can reverse\
    \ or overturn the\n   decisions of the Language Subtag Reviewer, provide guidance,\
    \ or take\n   other appropriate actions.\n"
- title: 3.3.  Maintenance of the Registry
  contents:
  - "3.3.  Maintenance of the Registry\n   Maintenance of the registry requires that,\
    \ as codes are assigned or\n   withdrawn by ISO 639, ISO 15924, ISO 3166, and\
    \ UN M.49, the Language\n   Subtag Reviewer MUST evaluate each change and determine\
    \ the\n   appropriate course of action according to the rules in this document.\n\
    \   Such updates follow the registration process described in\n   Section 3.5.\
    \  Usually, the Language Subtag Reviewer will start the\n   process for the new\
    \ or updated record by filling in the registration\n   form and submitting it.\
    \  If a change to one of these standards takes\n   place and the Language Subtag\
    \ Reviewer does not do this in a timely\n   manner, then any interested party\
    \ MAY submit the form.  Thereafter,\n   the registration process continues normally.\n\
    \   Note that some registrations affect other subtags--perhaps more than\n   one--as\
    \ when a region subtag is being deprecated in favor of a new\n   value.  The Language\
    \ Subtag Reviewer is responsible for ensuring that\n   any such changes are properly\
    \ registered, with each change requiring\n   its own registration form.\n   The\
    \ Language Subtag Reviewer MUST ensure that new subtags meet the\n   requirements\
    \ elsewhere in this document (and most especially in\n   Section 3.4) or submit\
    \ an appropriate registration form for an\n   alternate subtag as described in\
    \ that section.  Each individual\n   subtag affected by a change MUST be sent\
    \ to the\n   ietf-languages@iana.org list with its own registration form and in\
    \ a\n   separate message.\n"
- title: 3.4.  Stability of IANA Registry Entries
  contents:
  - "3.4.  Stability of IANA Registry Entries\n   The stability of entries and their\
    \ meaning in the registry is\n   critical to the long-term stability of language\
    \ tags.  The rules in\n   this section guarantee that a specific language tag's\
    \ meaning is\n   stable over time and will not change.\n   These rules specifically\
    \ deal with how changes to codes (including\n   withdrawal and deprecation of\
    \ codes) maintained by ISO 639, ISO\n   15924, ISO 3166, and UN M.49 are reflected\
    \ in the IANA Language\n   Subtag Registry.  Assignments to the IANA Language\
    \ Subtag Registry\n   MUST follow the following stability rules:\n   1.   Values\
    \ in the fields 'Type', 'Subtag', 'Tag', and 'Added' MUST\n        NOT be changed\
    \ and are guaranteed to be stable over time.\n   2.   Values in the fields 'Preferred-Value'\
    \ and 'Deprecated' MAY be\n        added, altered, or removed via the registration\
    \ process.  These\n        changes SHOULD be limited to changes necessary to mirror\
    \ changes\n        in one of the underlying standards (ISO 639, ISO 15924, ISO\n\
    \        3166-1, or UN M.49) and typically alteration or removal of a\n      \
    \  'Preferred-Value' is limited specifically to region codes.\n   3.   Values\
    \ in the 'Description' field MUST NOT be changed in a way\n        that would\
    \ invalidate any existing tags.  The description MAY be\n        broadened somewhat\
    \ in scope, changed to add information, or\n        adapted to the most common\
    \ modern usage.  For example, countries\n        occasionally change their names;\
    \ a historical example of this is\n        \"Upper Volta\" changing to \"Burkina\
    \ Faso\".\n   4.   Values in the field 'Prefix' MAY be added to existing records\
    \ of\n        type 'variant' via the registration process, provided the\n    \
    \    'variant' already has at least one 'Prefix'.  A 'Prefix' field\n        SHALL\
    \ NOT be registered for any 'variant' that has no existing\n        'Prefix' field.\
    \  If a prefix is added to a variant record,\n        'Comment' fields MAY be\
    \ used to explain different usages with\n        the various prefixes.\n   5.\
    \   Values in the field 'Prefix' in records of type 'variant' MAY\n        also\
    \ be modified, so long as the modifications broaden the set\n        of prefixes.\
    \  That is, a prefix MAY be replaced by one of its\n        own prefixes.  For\
    \ example, the prefix \"en-US\" could be replaced\n        by \"en\", but not\
    \ by the prefixes \"en-Latn\", \"fr\", or \"en-US-\n        boont\".  If one of\
    \ those prefix values were needed, it would\n        have to be separately registered.\n\
    \   6.   Values in the field 'Prefix' in records of type 'extlang' MUST\n    \
    \    NOT be added, modified, or removed.\n   7.   The field 'Prefix' MUST NOT\
    \ be removed from any record in which\n        it appears.  This field SHOULD\
    \ be included in the initial\n        registration of any records of type 'variant'\
    \ and MUST be\n        included in any records of type 'extlang'.\n   8.   The\
    \ field 'Comments' MAY be added, changed, modified, or removed\n        via the\
    \ registration process or any of the processes or\n        considerations described\
    \ in this section.\n   9.   The field 'Suppress-Script' MAY be added or removed\
    \ via the\n        registration process.\n   10.  The field 'Macrolanguage' MAY\
    \ be added or removed via the\n        registration process, but only in response\
    \ to changes made by\n        ISO 639.  The 'Macrolanguage' field appears whenever\
    \ a language\n        has a corresponding macrolanguage in ISO 639.  That is,\
    \ the\n        'Macrolanguage' fields in the registry exactly match those of\n\
    \        ISO 639.  No other macrolanguage mappings will be considered for\n  \
    \      registration.\n   11.  The field 'Scope' MAY be added or removed from a\
    \ primary or\n        extended language subtag after initial registration, and\
    \ it MAY\n        be modified in order to match any changes made by ISO 639.\n\
    \        Changes to the 'Scope' field MUST mirror changes made by ISO\n      \
    \  639.  Note that primary or extended language subtags whose\n        records\
    \ do not contain a 'Scope' field (that is, most of them)\n        are individual\
    \ languages as described in Section 3.1.11.\n   12.  Primary and extended language\
    \ subtags (other than independently\n        registered values created using the\
    \ registration process) are\n        created according to the assignments of the\
    \ various parts of ISO\n        639, as follows:\n        A.  Codes assigned by\
    \ ISO 639-1 that do not conflict with\n            existing two-letter primary\
    \ language subtags and that have\n            no corresponding three-letter primary\
    \ defined in the\n            registry are entered into the IANA registry as new\
    \ records\n            of type 'language'.  Note that languages given an ISO 639-1\n\
    \            code cannot be given extended language subtags, even if\n       \
    \     encompassed by a macrolanguage.\n        B.  Codes assigned by ISO 639-3\
    \ or ISO 639-5 that do not\n            conflict with existing three-letter primary\
    \ language subtags\n            and that do not have ISO 639-1 codes assigned\
    \ (or expected\n            to be assigned) are entered into the IANA registry\
    \ as new\n            records of type 'language'.  Note that these two standards\n\
    \            now comprise a superset of ISO 639-2 codes.  Codes that have\n  \
    \          a defined 'macrolanguage' mapping at the time of their\n          \
    \  registration MUST contain a 'Macrolanguage' field.\n        C.  Codes assigned\
    \ by ISO 639-3 MAY also be considered for an\n            extended language subtag\
    \ registration.  Note that they MUST\n            be assigned a primary language\
    \ subtag record of type\n            'language' even when an 'extlang' record\
    \ is proposed.  When\n            considering extended language subtag assignment,\
    \ these\n            criteria apply:\n            1.  If a language has a macrolanguage\
    \ mapping, and that\n                macrolanguage has other encompassed languages\
    \ that are\n                assigned extended language subtags, then the new\n\
    \                language SHOULD have an 'extlang' record assigned to it\n   \
    \             as well.  For example, any language with a macrolanguage\n     \
    \           of 'zh' or 'ar' would be assigned an 'extlang' record.\n         \
    \   2.  'Extlang' records SHOULD NOT be created for languages if\n           \
    \     other languages encompassed by the macrolanguage do not\n              \
    \  also include 'extlang' records.  For example, if a new\n                Serbo-Croatian\
    \ ('sh') language were registered, it would\n                not get an extlang\
    \ record because other languages\n                encompassed, such as Serbian\
    \ ('sr'), do not include one\n                in the registry.\n            3.\
    \  Sign languages SHOULD have an 'extlang' record with a\n                'Prefix'\
    \ of 'sgn'.\n            4.  'Extlang' records MUST NOT be created for items already\n\
    \                in the registry.  Extended language subtags will only be\n  \
    \              considered at the time of initial registration.\n            5.\
    \  Extended language subtag records MUST include the fields\n                'Prefix'\
    \ and 'Preferred-Value' with field values\n                assigned as described\
    \ in Section 2.2.2.\n        D.  Any other codes assigned by ISO 639-2 that do\
    \ not conflict\n            with existing three-letter primary or extended language\n\
    \            subtags and that do not have ISO 639-1 two-letter codes\n       \
    \     assigned are entered into the IANA registry as new records\n           \
    \ of type 'language'.  This type of registration is not\n            supposed\
    \ to occur in the future.\n   13.  Codes assigned by ISO 15924 and ISO 3166-1\
    \ that do not conflict\n        with existing subtags of the associated type and\
    \ whose meaning\n        is not the same as an existing subtag of the same type\
    \ are\n        entered into the IANA registry as new records.\n   14.  Codes assigned\
    \ by ISO 639, ISO 15924, or ISO 3166-1 that are\n        withdrawn by their respective\
    \ maintenance or registration\n        authority remain valid in language tags.\
    \  A 'Deprecated' field\n        containing the date of withdrawal MUST be added\
    \ to the record.\n        If a new record of the same type is added that represents\
    \ a\n        replacement value, then a 'Preferred-Value' field MAY also be\n \
    \       added.  The registration process MAY be used to add comments\n       \
    \ about the withdrawal of the code by the respective standard.\n           For\
    \ example: the region code 'TL' was assigned to the country\n           'Timor-Leste',\
    \ replacing the code 'TP' (which was assigned to\n           'East Timor' when\
    \ it was under administration by Portugal).\n           The subtag 'TP' remains\
    \ valid in language tags, but its\n           record contains the 'Preferred-Value'\
    \ of 'TL' and its field\n           'Deprecated' contains the date the new code\
    \ was assigned\n           ('2004-07-06').\n   15.  Codes assigned by ISO 639,\
    \ ISO 15924, or ISO 3166-1 that\n        conflict with existing subtags of the\
    \ associated type, including\n        subtags that are deprecated, MUST NOT be\
    \ entered into the\n        registry.  The following additional considerations\
    \ apply to\n        subtag values that are reassigned:\n        A.  For ISO 639\
    \ codes, if the newly assigned code's meaning is\n            not represented\
    \ by a subtag in the IANA registry, the\n            Language Subtag Reviewer,\
    \ as described in Section 3.5, SHALL\n            prepare a proposal for entering\
    \ in the IANA registry, as\n            soon as practical, a registered language\
    \ subtag as an\n            alternate value for the new code.  The form of the\n\
    \            registered language subtag will be at the discretion of the\n   \
    \         Language Subtag Reviewer and MUST conform to other\n            restrictions\
    \ on language subtags in this document.\n        B.  For all subtags whose meaning\
    \ is derived from an external\n            standard (that is, by ISO 639, ISO\
    \ 15924, ISO 3166-1, or UN\n            M.49), if a new meaning is assigned to\
    \ an existing code and\n            the new meaning broadens the meaning of that\
    \ code, then the\n            meaning for the associated subtag MAY be changed\
    \ to match.\n            The meaning of a subtag MUST NOT be narrowed, however,\
    \ as\n            this can result in an unknown proportion of the existing\n \
    \           uses of a subtag becoming invalid.  Note: the ISO 639\n          \
    \  registration authority (RA) has adopted a similar stability\n            policy.\n\
    \        C.  For ISO 15924 codes, if the newly assigned code's meaning is\n  \
    \          not represented by a subtag in the IANA registry, the\n           \
    \ Language Subtag Reviewer, as described in Section 3.5, SHALL\n            prepare\
    \ a proposal for entering in the IANA registry, as\n            soon as practical,\
    \ a registered variant subtag as an\n            alternate value for the new code.\
    \  The form of the\n            registered variant subtag will be at the discretion\
    \ of the\n            Language Subtag Reviewer and MUST conform to other\n   \
    \         restrictions on variant subtags in this document.\n        D.  For ISO\
    \ 3166-1 codes, if the newly assigned code's meaning\n            is associated\
    \ with the same UN M.49 code as another 'region'\n            subtag, then the\
    \ existing region subtag remains as the\n            preferred value for that\
    \ region and no new entry is created.\n            A comment MAY be added to the\
    \ existing region subtag\n            indicating the relationship to the new ISO\
    \ 3166-1 code.\n        E.  For ISO 3166-1 codes, if the newly assigned code's\
    \ meaning\n            is associated with a UN M.49 code that is not represented\
    \ by\n            an existing region subtag, then the Language Subtag\n      \
    \      Reviewer, as described in Section 3.5, SHALL prepare a\n            proposal\
    \ for entering the appropriate UN M.49 country code\n            as an entry in\
    \ the IANA registry.\n        F.  For ISO 3166-1 codes, if there is no associated\
    \ UN numeric\n            code, then the Language Subtag Reviewer SHALL petition\
    \ the\n            UN to create one.  If there is no response from the UN\n  \
    \          within 90 days of the request being sent, the Language\n          \
    \  Subtag Reviewer SHALL prepare a proposal for entering in the\n            IANA\
    \ registry, as soon as practical, a registered variant\n            subtag as\
    \ an alternate value for the new code.  The form of\n            the registered\
    \ variant subtag will be at the discretion of\n            the Language Subtag\
    \ Reviewer and MUST conform to other\n            restrictions on variant subtags\
    \ in this document.  This\n            situation is very unlikely to ever occur.\n\
    \   16.  UN M.49 has codes for both \"countries and areas\" (such as '276'\n \
    \       for Germany) and \"geographical regions and sub-regions\" (such as\n \
    \       '150' for Europe).  UN M.49 country or area codes for which\n        there\
    \ is no corresponding ISO 3166-1 code MUST NOT be\n        registered, except\
    \ as a surrogate for an ISO 3166-1 code that is\n        blocked from registration\
    \ by an existing subtag.\n        If such a code becomes necessary, then the maintenance\
    \ agency\n        for ISO 3166-1 SHALL first be petitioned to assign a code to\
    \ the\n        region.  If the petition for a code assignment by ISO 3166-1 is\n\
    \        refused or not acted on in a timely manner, the registration\n      \
    \  process described in Section 3.5 can then be used to register\n        the\
    \ corresponding UN M.49 code.  This way, UN M.49 codes remain\n        available\
    \ as the value of last resort in cases where ISO 3166-1\n        reassigns a deprecated\
    \ value in the registry.\n   17.  The redundant and grandfathered entries together\
    \ form the\n        complete list of tags registered under [RFC3066].  The redundant\n\
    \        tags are those previously registered tags that can now be formed\n  \
    \      using the subtags defined in the registry.  The grandfathered\n       \
    \ entries include those that can never be legal because they are\n        'irregular'\
    \ (that is, they do not match the 'langtag' production\n        in Figure 1),\
    \ are limited by rule (subtags such as 'nyn' and\n        'min' look like the\
    \ extlang production, but cannot be registered\n        as extended language subtags),\
    \ or their subtags are\n        inappropriate for registration.  All of the grandfathered\
    \ tags\n        are listed in either the 'regular' or the 'irregular'\n      \
    \  productions in the ABNF.  Under [RFC4646] it was possible for\n        grandfathered\
    \ tags to become redundant.  However, all of the\n        tags for which this\
    \ was possible became redundant before this\n        document was produced.  So\
    \ the set of redundant and\n        grandfathered tags is now permanent and immutable:\
    \ new entries\n        of either type MUST NOT be added and existing entries MUST\
    \ NOT\n        be removed.  The decision-making process about which tags were\n\
    \        initially grandfathered and which were made redundant is\n        described\
    \ in [RFC4645].\n        Many of the grandfathered tags are deprecated -- indeed,\
    \ they\n        were deprecated even before [RFC4646].  For example, the tag\n\
    \        \"art-lojban\" was deprecated in favor of the primary language\n    \
    \    subtag 'jbo'.  These tags could have been made 'redundant' by\n        registering\
    \ some of their subtags as 'variants'.  The 'variant-\n        like' subtags in\
    \ the grandfathered registrations SHALL NOT be\n        registered in the future,\
    \ even with a similar or identical\n        meaning.\n"
- title: 3.5.  Registration Procedure for Subtags
  contents:
  - "3.5.  Registration Procedure for Subtags\n   The procedure given here MUST be\
    \ used by anyone who wants to use a\n   subtag not currently in the IANA Language\
    \ Subtag Registry or who\n   wishes to add, modify, update, or remove information\
    \ in existing\n   records as permitted by this document.\n   Only subtags of type\
    \ 'language' and 'variant' will be considered for\n   independent registration\
    \ of new subtags.  Subtags needed for\n   stability and subtags necessary to keep\
    \ the registry synchronized\n   with ISO 639, ISO 15924, ISO 3166, and UN M.49\
    \ within the limits\n   defined by this document also use this process, as described\
    \ in\n   Section 3.3 and subject to stability provisions as described in\n   Section\
    \ 3.4.\n   Registration requests are accepted relating to information in the\n\
    \   'Comments', 'Deprecated', 'Description', 'Prefix', 'Preferred-Value',\n  \
    \ 'Macrolanguage', or 'Suppress-Script' fields in a subtag's record as\n   described\
    \ in Section 3.4.  Changes to all other fields in the IANA\n   registry are NOT\
    \ permitted.\n   Registering a new subtag or requesting modifications to an existing\n\
    \   tag or subtag starts with the requester filling out the registration\n   form\
    \ reproduced below.  Note that each response is not limited in\n   size so that\
    \ the request can adequately describe the registration.\n   The fields in the\
    \ \"Record Requested\" section need to follow the\n   requirements in Section\
    \ 3.1 before the record will be approved.\n   LANGUAGE SUBTAG REGISTRATION FORM\n\
    \   1. Name of requester:\n   2. E-mail address of requester:\n   3. Record Requested:\n\
    \      Type:\n      Subtag:\n      Description:\n      Prefix:\n      Preferred-Value:\n\
    \      Deprecated:\n      Suppress-Script:\n      Macrolanguage:\n      Comments:\n\
    \   4. Intended meaning of the subtag:\n   5. Reference to published description\n\
    \      of the language (book or article):\n   6. Any other relevant information:\n\
    \              Figure 5: The Language Subtag Registration Form\n   Examples of\
    \ completed registration forms can be found in Appendix B.\n   A complete list\
    \ of approved registration forms is online through\n   http://www.iana.org; readers\
    \ should note that the Language Tag\n   Registry is now obsolete and should instead\
    \ look for the Language\n   Subtag Registry.\n   The subtag registration form\
    \ MUST be sent to\n   <ietf-languages@iana.org>.  Registration requests receive\
    \ a two-week\n   review period before being approved and submitted to IANA for\n\
    \   inclusion in the registry.  If modifications are made to the request\n   during\
    \ the course of the registration process (such as corrections to\n   meet the\
    \ requirements in Section 3.1 or to make the 'Description'\n   fields unique for\
    \ the given record type), the modified form MUST also\n   be sent to <ietf-languages@iana.org>\
    \ at least one week prior to\n   submission to IANA.\n   The ietf-languages list\
    \ is an open list and can be joined by sending\n   a request to <ietf-languages-request@iana.org>.\
    \  The list can be\n   hosted by IANA or any third party at the request of IESG.\n\
    \   Before forwarding any registration to IANA, the Language Subtag\n   Reviewer\
    \ MUST ensure that all requirements in this document are met.\n   This includes\
    \ ensuring that values in the 'Subtag' field match case\n   according to the description\
    \ in Section 3.1.4 and that 'Description'\n   fields are unique for the given\
    \ record type as described in\n   Section 3.1.5.  The Reviewer MUST also ensure\
    \ that an appropriate\n   File-Date record is included in the request, to assist\
    \ IANA when\n   updating the registry (see Section 5.1).\n   Some fields in both\
    \ the registration form as well as the registry\n   record itself permit the use\
    \ of non-ASCII characters.  Registration\n   requests SHOULD use the UTF-8 encoding\
    \ for consistency and clarity.\n   However, since some mail clients do not support\
    \ this encoding, other\n   encodings MAY be used for the registration request.\
    \  The Language\n   Subtag Reviewer is responsible for ensuring that the proper\
    \ Unicode\n   characters appear in both the archived request form and the registry\n\
    \   record.  In the case of a transcription or encoding error by IANA,\n   the\
    \ Language Subtag Reviewer will request that the registry be\n   repaired, providing\
    \ any necessary information to assist IANA.\n   Extended language subtags (type\
    \ 'extlang'), by definition, are always\n   encompassed by another language. \
    \ All records of type 'extlang' MUST,\n   therefore, contain a 'Prefix' field\
    \ at the time of registration.\n   This 'Prefix' field can never be altered or\
    \ removed, and requests to\n   do so MUST be rejected.\n   Variant subtags are\
    \ usually registered for use with a particular\n   range of language tags, and\
    \ variant subtags based on the terminology\n   of the language to which they are\
    \ apply are encouraged.  For example,\n   the subtag 'rozaj' (Resian) is intended\
    \ for use with language tags\n   that start with the primary language subtag \"\
    sl\" (Slovenian), since\n   Resian is a dialect of Slovenian.  Thus, the subtag\
    \ 'rozaj' would be\n   appropriate in tags such as \"sl-Latn-rozaj\" or \"sl-IT-rozaj\"\
    .  This\n   information is stored in the 'Prefix' field in the registry.  Variant\n\
    \   registration requests SHOULD include at least one 'Prefix' field in\n   the\
    \ registration form.\n   Requests to assign an additional record of a given type\
    \ with an\n   existing subtag value MUST be rejected.  For example, the variant\n\
    \   subtag 'rozaj' already exists in the registry, so adding a second\n   record\
    \ of type 'variant' with the subtag 'rozaj' is prohibited.\n   The 'Prefix' field\
    \ for a given registered variant subtag exists in\n   the IANA registry as a guide\
    \ to usage.  Additional 'Prefix' fields\n   MAY be added by filing an additional\
    \ registration form.  In that\n   form, the \"Any other relevant information:\"\
    \ field MUST indicate that\n   it is the addition of a prefix.\n   Requests to\
    \ add a 'Prefix' field to a variant subtag that imply a\n   different semantic\
    \ meaning SHOULD be rejected.  For example, a\n   request to add the prefix \"\
    de\" to the subtag '1994' so that the tag\n   \"de-1994\" represented some German\
    \ dialect or orthographic form would\n   be rejected.  The '1994' subtag represents\
    \ a particular Slovenian\n   orthography, and the additional registration would\
    \ change or blur the\n   semantic meaning assigned to the subtag.  A separate\
    \ subtag SHOULD be\n   proposed instead.\n   Requests to add a 'Prefix' to a variant\
    \ subtag that has no current\n   'Prefix' field MUST be rejected.  Variants are\
    \ registered with no\n   prefix because they are potentially useful with many\
    \ or even all\n   languages.  Adding one or more 'Prefix' fields would be potentially\n\
    \   harmful to the use of the variant, since it dramatically reduces the\n   scope\
    \ of the subtag (which is not allowed under the stability rules\n   (Section 3.4)\
    \ as opposed to broadening the scope of the subtag, which\n   is what the addition\
    \ of a 'Prefix' normally does.  An example of such\n   a \"no-prefix\" variant\
    \ is the subtag 'fonipa', which represents the\n   International Phonetic Alphabet,\
    \ a scheme that can be used to\n   transcribe many languages.\n   The 'Description'\
    \ fields provided in the request MUST contain at\n   least one description written\
    \ or transcribed into the Latin script;\n   the request MAY also include additional\
    \ 'Description' fields in any\n   script or language.  The 'Description' field\
    \ is used for\n   identification purposes and doesn't necessarily represent the\
    \ actual\n   native name of the language or variation.  It also doesn't have to\
    \ be\n   in any particular language, but SHOULD be both suitable and\n   sufficient\
    \ to identify the item in the record.  The Language Subtag\n   Reviewer will check\
    \ and edit any proposed 'Description' fields so as\n   to ensure uniqueness and\
    \ prevent collisions with 'Description' fields\n   in other records of the same\
    \ type.  If this occurs in an independent\n   registration request, the Language\
    \ Subtag Reviewer MUST resubmit the\n   record to <ietf-languages@iana.org>, treating\
    \ it as a modification of\n   a request due to discussion, as described in Section\
    \ 3.5, unless the\n   request's sole purpose is to introduce a duplicate 'Description'\n\
    \   field, in which case the request SHALL be rejected.\n   The 'Description'\
    \ field is not guaranteed to be stable.  Corrections\n   or clarifications of\
    \ intent are examples of possible changes.\n   Attempts to provide translations\
    \ or transcriptions of entries in the\n   registry (which, by definition, provide\
    \ no new information) are\n   unlikely to be approved.\n   Soon after the two-week\
    \ review period has passed, the Language Subtag\n   Reviewer MUST take one of\
    \ the following actions:\n   o  Explicitly accept the request and forward the\
    \ form containing the\n      record to be inserted or modified to <iana@iana.org>\
    \ according to\n      the procedure described in Section 3.3.\n   o  Explicitly\
    \ reject the request because of significant objections\n      raised on the list\
    \ or due to problems with constraints in this\n      document (which MUST be explicitly\
    \ cited).\n   o  Extend the review period by granting an additional two-week\n\
    \      increment to permit further discussion.  After each two-week\n      increment,\
    \ the Language Subtag Reviewer MUST indicate on the list\n      whether the registration\
    \ has been accepted, rejected, or extended.\n   Note that the Language Subtag\
    \ Reviewer MAY raise objections on the\n   list if he or she so desires.  The\
    \ important thing is that the\n   objection MUST be made publicly.\n   Sometimes\
    \ the request needs to be modified as a result of discussion\n   during the review\
    \ period or due to requirements in this document.\n   The applicant, Language\
    \ Subtag Reviewer, or others MAY submit a\n   modified version of the completed\
    \ registration form, which will be\n   considered in lieu of the original request\
    \ with the explicit approval\n   of the applicant.  Such changes do not restart\
    \ the two-week\n   discussion period, although an application containing the final\n\
    \   record submitted to IANA MUST appear on the list at least one week\n   prior\
    \ to the Language Subtag Reviewer forwarding the record to IANA.\n   The applicant\
    \ MAY modify a rejected application with more appropriate\n   or additional information\
    \ and submit it again; this starts a new two-\n   week comment period.\n   Registrations\
    \ initiated due to the provisions of Section 3.3 or\n   Section 3.4 SHALL NOT\
    \ be rejected altogether (since they have to\n   ultimately appear in the registry)\
    \ and SHOULD be completed as quickly\n   as possible.  The review process allows\
    \ list members to comment on\n   the specific information in the form and the\
    \ record it contains and\n   thus help ensure that it is correct and consistent.\
    \  The Language\n   Subtag Reviewer MAY reject a specific version of the form,\
    \ but MUST\n   propose a suitable replacement, extending the review period as\n\
    \   described above, until the form is in a format worthy of the\n   reviewer's\
    \ approval and meets with rough consensus of the list.\n   Decisions made by the\
    \ Language Subtag Reviewer MAY be appealed to the\n   IESG [RFC2028] under the\
    \ same rules as other IETF decisions\n   [RFC2026].  This includes a decision\
    \ to extend the review period or\n   the failure to announce a decision in a clear\
    \ and timely manner.\n   The approved records appear in the Language Subtag Registry.\
    \  The\n   approved registration forms are available online from\n   http://www.iana.org.\n\
    \   Updates or changes to existing records follow the same procedure as\n   new\
    \ registrations.  The Language Subtag Reviewer decides whether\n   there is consensus\
    \ to update the registration following the two-week\n   review period; normally,\
    \ objections by the original registrant will\n   carry extra weight in forming\
    \ such a consensus.\n   Registrations are permanent and stable.  Once registered,\
    \ subtags\n   will not be removed from the registry and will remain a valid way\
    \ in\n   which to specify a specific language or variant.\n   Note: The purpose\
    \ of the \"Reference to published description\" section\n   in the registration\
    \ form is to aid in verifying whether a language is\n   registered or to which\
    \ language or language variation a particular\n   subtag refers.  In most cases,\
    \ reference to an authoritative grammar\n   or dictionary of that language will\
    \ be useful; in cases where no such\n   work exists, other well-known works describing\
    \ that language or in\n   that language MAY be appropriate.  The Language Subtag\
    \ Reviewer\n   decides what constitutes \"good enough\" reference material.  This\n\
    \   requirement is not intended to exclude particular languages or\n   dialects\
    \ due to the size of the speaker population or lack of a\n   standardized orthography.\
    \  Minority languages will be considered\n   equally on their own merits.\n"
- title: 3.6.  Possibilities for Registration
  contents:
  - "3.6.  Possibilities for Registration\n   Possibilities for registration of subtags\
    \ or information about\n   subtags include:\n   o  Primary language subtags for\
    \ languages not listed in ISO 639 that\n      are not variants of any listed or\
    \ registered language MAY be\n      registered.  At the time this document was\
    \ created, there were no\n      examples of this form of subtag.  Before attempting\
    \ to register a\n      language subtag, there MUST be an attempt to register the\
    \ language\n      with ISO 639.  Subtags MUST NOT be registered for languages\n\
    \      defined by codes that exist in ISO 639-1, ISO 639-2, or ISO 639-3;\n  \
    \    that are under consideration by the ISO 639 registration\n      authorities;\
    \ or that have never been attempted for registration\n      with those authorities.\
    \  If ISO 639 has previously rejected a\n      language for registration, it is\
    \ reasonable to assume that there\n      must be additional, very compelling evidence\
    \ of need before it\n      will be registered as a primary language subtag in\
    \ the IANA\n      registry (to the extent that it is very unlikely that any subtags\n\
    \      will be registered of this type).\n   o  Dialect or other divisions or\
    \ variations within a language, its\n      orthography, writing system, regional\
    \ or historical usage,\n      transliteration or other transformation, or distinguishing\n\
    \      variation MAY be registered as variant subtags.  An example is the\n  \
    \    'rozaj' subtag (the Resian dialect of Slovenian).\n   o  The addition or\
    \ maintenance of fields (generally of an\n      informational nature) in tag or\
    \ subtag records as described in\n      Section 3.1 is allowed.  Such changes\
    \ are subject to the stability\n      provisions in Section 3.4.  This includes\
    \ 'Description',\n      'Comments', 'Deprecated', and 'Preferred-Value' fields\
    \ for\n      obsolete or withdrawn codes, or the addition of 'Suppress-Script'\n\
    \      or 'Macrolanguage' fields to primary language subtags, as well as\n   \
    \   other changes permitted by this document, such as the addition of\n      an\
    \ appropriate 'Prefix' field to a variant subtag.\n   o  The addition of records\
    \ and related field value changes necessary\n      to reflect assignments made\
    \ by ISO 639, ISO 15924, ISO 3166-1, and\n      UN M.49 as described in Section\
    \ 3.4 is allowed.\n   Subtags proposed for registration that would cause all or\
    \ part of a\n   grandfathered tag to become redundant but whose meaning conflicts\n\
    \   with or alters the meaning of the grandfathered tag MUST be rejected.\n  \
    \ This document leaves the decision on what subtags or changes to\n   subtags\
    \ are appropriate (or not) to the registration process\n   described in Section\
    \ 3.5.\n   Note: Four-character primary language subtags are reserved to allow\n\
    \   for the possibility of alpha4 codes in some future addition to the\n   ISO\
    \ 639 family of standards.\n   ISO 639 defines a registration authority for additions\
    \ to and changes\n   in the list of languages in ISO 639.  This agency is:\n \
    \  International Information Centre for Terminology (Infoterm)\n   Aichholzgasse\
    \ 6/12, AT-1120\n   Wien, Austria\n   Phone: +43 1 26 75 35 Ext. 312 Fax: +43\
    \ 1 216 32 72\n   ISO 639-2 defines a registration authority for additions to\
    \ and\n   changes in the list of languages in ISO 639-2.  This agency is:\n  \
    \ Library of Congress\n   Network Development and MARC Standards Office\n   Washington,\
    \ DC 20540, USA\n   Phone: +1 202 707 6237 Fax: +1 202 707 0115\n   URL: http://www.loc.gov/standards/iso639-2\n\
    \   ISO 639-3 defines a registration authority for additions to and\n   changes\
    \ in the list of languages in ISO 639-3.  This agency is:\n   SIL International\n\
    \   ISO 639-3 Registrar\n   7500 W. Camp Wisdom Rd.\n   Dallas, TX 75236, USA\n\
    \   Phone: +1 972 708 7400, ext. 2293\n   Fax: +1 972 708 7546\n   Email: iso639-3@sil.org\n\
    \   URL: http://www.sil.org/iso639-3\n   ISO 639-5 defines a registration authority\
    \ for additions to and\n   changes in the list of languages in ISO 639-5.  This\
    \ agency is the\n   same as for ISO 639-2 and is:\n   Library of Congress\n  \
    \ Network Development and MARC Standards Office\n   Washington, DC 20540, USA\n\
    \   Phone: +1 202 707 6237\n   Fax: +1 202 707 0115\n   URL: http://www.loc.gov/standards/iso639-5\n\
    \   The maintenance agency for ISO 3166-1 (country codes) is:\n   ISO 3166 Maintenance\
    \ Agency\n   c/o International Organization for Standardization\n   Case postale\
    \ 56\n   CH-1211 Geneva 20, Switzerland\n   Phone: +41 22 749 72 33 Fax: +41 22\
    \ 749 73 49\n   URL: http://www.iso.org/iso/en/prods-services/iso3166ma/index.html\n\
    \   The registration authority for ISO 15924 (script codes) is:\n   Unicode Consortium\n\
    \   Box 391476\n   Mountain View, CA 94039-1476, USA\n   URL: http://www.unicode.org/iso15924\n\
    \   The Statistics Division of the United Nations Secretariat maintains\n   the\
    \ Standard Country or Area Codes for Statistical Use and can be\n   reached at:\n\
    \   Statistical Services Branch\n   Statistics Division\n   United Nations, Room\
    \ DC2-1620\n   New York, NY 10017, USA\n   Fax: +1-212-963-0623\n   Email: statistics@un.org\n\
    \   URL: http://unstats.un.org/unsd/methods/m49/m49alpha.htm\n"
- title: 3.7.  Extensions and the Extensions Registry
  contents:
  - "3.7.  Extensions and the Extensions Registry\n   Extension subtags are those\
    \ introduced by single-character subtags\n   (\"singletons\") other than 'x'.\
    \  They are reserved for the generation\n   of identifiers that contain a language\
    \ component and are compatible\n   with applications that understand language\
    \ tags.\n   The structure and form of extensions are defined by this document\
    \ so\n   that implementations can be created that are forward compatible with\n\
    \   applications that might be created using singletons in the future.\n   In\
    \ addition, defining a mechanism for maintaining singletons will\n   lend stability\
    \ to this document by reducing the likely need for\n   future revisions or updates.\n\
    \   Single-character subtags are assigned by IANA using the \"IETF Review\"\n\
    \   policy defined by [RFC5226].  This policy requires the development of\n  \
    \ an RFC, which SHALL define the name, purpose, processes, and\n   procedures\
    \ for maintaining the subtags.  The maintaining or\n   registering authority,\
    \ including name, contact email, discussion list\n   email, and URL location of\
    \ the registry, MUST be indicated clearly in\n   the RFC.  The RFC MUST specify\
    \ or include each of the following:\n   o  The specification MUST reference the\
    \ specific version or revision\n      of this document that governs its creation\
    \ and MUST reference this\n      section of this document.\n   o  The specification\
    \ and all subtags defined by the specification\n      MUST follow the ABNF and\
    \ other rules for the formation of tags and\n      subtags as defined in this\
    \ document.  In particular, it MUST\n      specify that case is not significant\
    \ and that subtags MUST NOT\n      exceed eight characters in length.\n   o  The\
    \ specification MUST specify a canonical representation.\n   o  The specification\
    \ of valid subtags MUST be available over the\n      Internet and at no cost.\n\
    \   o  The specification MUST be in the public domain or available via a\n   \
    \   royalty-free license acceptable to the IETF and specified in the\n      RFC.\n\
    \   o  The specification MUST be versioned, and each version of the\n      specification\
    \ MUST be numbered, dated, and stable.\n   o  The specification MUST be stable.\
    \  That is, extension subtags,\n      once defined by a specification, MUST NOT\
    \ be retracted or change\n      in meaning in any substantial way.\n   o  The\
    \ specification MUST include, in a separate section, the\n      registration form\
    \ reproduced in this section (below) to be used in\n      registering the extension\
    \ upon publication as an RFC.\n   o  IANA MUST be informed of changes to the contact\
    \ information and\n      URL for the specification.\n   IANA will maintain a registry\
    \ of allocated single-character\n   (singleton) subtags.  This registry MUST use\
    \ the record-jar format\n   described by the ABNF in Section 3.1.1.  Upon publication\
    \ of an\n   extension as an RFC, the maintaining authority defined in the RFC\n\
    \   MUST forward this registration form to <iesg@ietf.org>, who MUST\n   forward\
    \ the request to <iana@iana.org>.  The maintaining authority of\n   the extension\
    \ MUST maintain the accuracy of the record by sending an\n   updated full copy\
    \ of the record to <iana@iana.org> with the subject\n   line \"LANGUAGE TAG EXTENSION\
    \ UPDATE\" whenever content changes.  Only\n   the 'Comments', 'Contact_Email',\
    \ 'Mailing_List', and 'URL' fields MAY\n   be modified in these updates.\n   Failure\
    \ to maintain this record, maintain the corresponding registry,\n   or meet other\
    \ conditions imposed by this section of this document MAY\n   be appealed to the\
    \ IESG [RFC2028] under the same rules as other IETF\n   decisions (see [RFC2026])\
    \ and MAY result in the authority to maintain\n   the extension being withdrawn\
    \ or reassigned by the IESG.\n   %%\n   Identifier:\n   Description:\n   Comments:\n\
    \   Added:\n   RFC:\n   Authority:\n   Contact_Email:\n   Mailing_List:\n   URL:\n\
    \   %%\n    Figure 6: Format of Records in the Language Tag Extensions Registry\n\
    \   'Identifier' contains the single-character subtag (singleton)\n   assigned\
    \ to the extension.  The Internet-Draft submitted to define\n   the extension\
    \ SHOULD specify which letter or digit to use, although\n   the IESG MAY change\
    \ the assignment when approving the RFC.\n   'Description' contains the name and\
    \ description of the extension.\n   'Comments' is an OPTIONAL field and MAY contain\
    \ a broader description\n   of the extension.\n   'Added' contains the date the\
    \ extension's RFC was published in the\n   \"full-date\" format specified in [RFC3339].\
    \  For example: 2004-06-28\n   represents June 28, 2004, in the Gregorian calendar.\n\
    \   'RFC' contains the RFC number assigned to the extension.\n   'Authority' contains\
    \ the name of the maintaining authority for the\n   extension.\n   'Contact_Email'\
    \ contains the email address used to contact the\n   maintaining authority.\n\
    \   'Mailing_List' contains the URL or subscription email address of the\n   mailing\
    \ list used by the maintaining authority.\n   'URL' contains the URL of the registry\
    \ for this extension.\n   The determination of whether an Internet-Draft meets\
    \ the above\n   conditions and the decision to grant or withhold such authority\
    \ rests\n   solely with the IESG and is subject to the normal review and appeals\n\
    \   process associated with the RFC process.\n   Extension authors are strongly\
    \ cautioned that many (including most\n   well-formed) processors will be unaware\
    \ of any special relationships\n   or meaning inherent in the order of extension\
    \ subtags.  Extension\n   authors SHOULD avoid subtag relationships or canonicalization\n\
    \   mechanisms that interfere with matching or with length restrictions\n   that\
    \ sometimes exist in common protocols where the extension is used.\n   In particular,\
    \ applications MAY truncate the subtags in doing\n   matching or in fitting into\
    \ limited lengths, so it is RECOMMENDED\n   that the most significant information\
    \ be in the most significant\n   (left-most) subtags and that the specification\
    \ gracefully handle\n   truncated subtags.\n   When a language tag is to be used\
    \ in a specific, known protocol, it\n   is RECOMMENDED that the language tag not\
    \ contain extensions not\n   supported by that protocol.  In addition, note that\
    \ some protocols\n   MAY impose upper limits on the length of the strings used\
    \ to store or\n   transport the language tag.\n"
- title: 3.8.  Update of the Language Subtag Registry
  contents:
  - "3.8.  Update of the Language Subtag Registry\n   After the adoption of this document,\
    \ the IANA Language Subtag\n   Registry needed an update so that it would contain\
    \ the complete set\n   of subtags valid in a language tag.  [RFC5645] describes\
    \ the process\n   used to create this update.\n   Registrations that are in process\
    \ under the rules defined in\n   [RFC4646] when this document is adopted MUST\
    \ be completed under the\n   rules contained in this document.\n"
- title: 3.9.  Applicability of the Subtag Registry
  contents:
  - "3.9.  Applicability of the Subtag Registry\n   The Language Subtag Registry is\
    \ the source of data elements used to\n   construct language tags, following the\
    \ rules described in this\n   document.  Language tags are designed for indicating\
    \ linguistic\n   attributes of various content, including not only text but also\
    \ most\n   media formats, such as video or audio.  They also form the basis for\n\
    \   language and locale negotiation in various protocols and APIs.\n   The registry\
    \ is therefore applicable to many applications that need\n   some form of language\
    \ identification, with these limitations:\n   o  It is not designed to be the\
    \ sole data source in the creation of a\n      language-selection user interface.\
    \  For example, the registry does\n      not contain translations for subtag descriptions\
    \ or for tags\n      composed from the subtags.  Sources for localized data based\
    \ on\n      the registry are generally available, notably [CLDR].  Nor does\n\
    \      the registry indicate which subtag combinations are particularly\n    \
    \  useful or relevant.\n   o  It does not provide information indicating relationships\
    \ between\n      different languages, such as might be used in a user interface\
    \ to\n      select language tags hierarchically, regionally, or on some other\n\
    \      organizational model.\n   o  It does not supply information about potential\
    \ overlap between\n      different language tags, as the notion of what constitutes\
    \ a\n      language is not precise: several different language tags might be\n\
    \      reasonable choices for the same given piece of content.\n   o  It does\
    \ not contain information about appropriate fallback choices\n      when performing\
    \ language negotiation.  A good fallback language\n      might be linguistically\
    \ unrelated to the specified language.  The\n      fact that one language is often\
    \ used as a fallback language for\n      another is usually a result of outside\
    \ factors, such as geography,\n      history, or culture -- factors that might\
    \ not apply in all cases.\n      For example, most people who use Breton (a Celtic\
    \ language used in\n      the Northwest of France) would probably prefer to be\
    \ served French\n      (a Romance language) if Breton isn't available.\n"
- title: 4.  Formation and Processing of Language Tags
  contents:
  - "4.  Formation and Processing of Language Tags\n   This section addresses how\
    \ to use the information in the registry\n   with the tag syntax to choose, form,\
    \ and process language tags.\n"
- title: 4.1.  Choice of Language Tag
  contents:
  - "4.1.  Choice of Language Tag\n   The guiding principle in forming language tags\
    \ is to \"tag content\n   wisely.\"  Sometimes there is a choice between several\
    \ possible tags\n   for the same content.  The choice of which tag to use depends\
    \ on the\n   content and application in question, and some amount of judgment\n\
    \   might be necessary when selecting a tag.\n   Interoperability is best served\
    \ when the same language tag is used\n   consistently to represent the same language.\
    \  If an application has\n   requirements that make the rules here inapplicable,\
    \ then that\n   application risks damaging interoperability.  It is strongly\n\
    \   RECOMMENDED that users not define their own rules for language tag\n   choice.\n\
    \   Standards, protocols, and applications that reference this document\n   normatively\
    \ but apply different rules to the ones given in this\n   section MUST specify\
    \ how language tag selection varies from the\n   guidelines given here.\n   To\
    \ ensure consistent backward compatibility, this document contains\n   several\
    \ provisions to account for potential instability in the\n   standards used to\
    \ define the subtags that make up language tags.\n   These provisions mean that\
    \ no valid language tag can become invalid,\n   nor will a language tag have a\
    \ narrower scope in the future (it may\n   have a broader scope).  The most appropriate\
    \ language tag for a given\n   application or content item might evolve over time,\
    \ but once applied,\n   the tag itself cannot become invalid or have its meaning\
    \ wholly\n   change.\n   A subtag SHOULD only be used when it adds useful distinguishing\n\
    \   information to the tag.  Extraneous subtags interfere with the\n   meaning,\
    \ understanding, and processing of language tags.  In\n   particular, users and\
    \ implementations SHOULD follow the 'Prefix' and\n   'Suppress-Script' fields\
    \ in the registry (defined in Section 3.1):\n   these fields provide guidance\
    \ on when specific additional subtags\n   SHOULD be used or avoided in a language\
    \ tag.\n   The choice of subtags used to form a language tag SHOULD follow these\n\
    \   guidelines:\n   1.  Use as precise a tag as possible, but no more specific\
    \ than is\n       justified.  Avoid using subtags that are not important for\n\
    \       distinguishing content in an application.\n       *  For example, 'de'\
    \ might suffice for tagging an email written\n          in German, while \"de-CH-1996\"\
    \ is probably unnecessarily\n          precise for such a task.\n       *  Note\
    \ that some subtag sequences might not represent the\n          language a casual\
    \ user might expect.  For example, the Swiss\n          German (Schweizerdeutsch)\
    \ language is represented by \"gsw-CH\"\n          and not by \"de-CH\".  This\
    \ latter tag represents German ('de')\n          as used in Switzerland ('CH'),\
    \ also known as Swiss High German\n          (Schweizer Hochdeutsch).  Both are\
    \ real languages, and\n          distinguishing between them could be important\
    \ to an\n          application.\n   2.  The script subtag SHOULD NOT be used to\
    \ form language tags unless\n       the script adds some distinguishing information\
    \ to the tag.\n       Script subtags were first formally defined in [RFC4646].\
    \  Their\n       use can affect matching and subtag identification for\n     \
    \  implementations of [RFC1766] or [RFC3066] (which are obsoleted by\n       this\
    \ document), as these subtags appear between the primary\n       language and\
    \ region subtags.  Some applications can benefit from\n       the use of script\
    \ subtags in language tags, as long as the use is\n       consistent for a given\
    \ context.  Script subtags are never\n       appropriate for unwritten content\
    \ (such as audio recordings).\n       The field 'Suppress-Script' in the primary\
    \ or extended language\n       record in the registry indicates script subtags\
    \ that do not add\n       distinguishing information for most applications; this\
    \ field\n       defines when users SHOULD NOT include a script subtag with a\n\
    \       particular primary language subtag.\n       For example, if an implementation\
    \ selects content using Basic\n       Filtering [RFC4647] (originally described\
    \ in Section 14.4 of\n       [RFC2616]) and the user requested the language range\
    \ \"en-US\",\n       content labeled \"en-Latn-US\" will not match the request\
    \ and thus\n       not be selected.  Therefore, it is important to know when script\n\
    \       subtags will customarily be used and when they ought not be used.\n  \
    \     For example:\n       *  The subtag 'Latn' should not be used with the primary\
    \ language\n          'en' because nearly all English documents are written in\
    \ the\n          Latin script and it adds no distinguishing information.\n   \
    \       However, if a document were written in English mixing Latin\n        \
    \  script with another script such as Braille ('Brai'), then it\n          might\
    \ be appropriate to choose to indicate both scripts to aid\n          in content\
    \ selection, such as the application of a style\n          sheet.\n       *  When\
    \ labeling content that is unwritten (such as a recording\n          of human\
    \ speech), the script subtag should not be used, even\n          if the language\
    \ is customarily written in several scripts.\n          Thus, the subtitles to\
    \ a movie might use the tag \"uz-Arab\"\n          (Uzbek, Arabic script), but\
    \ the audio track for the same\n          language would be tagged simply \"uz\"\
    .  (The tag \"uz-Zxxx\"\n          could also be used where content is not written,\
    \ as the subtag\n          'Zxxx' represents the \"Code for unwritten documents\"\
    .)\n   3.  If a tag or subtag has a 'Preferred-Value' field in its registry\n\
    \       entry, then the value of that field SHOULD be used to form the\n     \
    \  language tag in preference to the tag or subtag in which the\n       preferred\
    \ value appears.\n       *  For example, use 'jbo' for Lojban in preference to\
    \ the\n          grandfathered tag \"art-lojban\".\n   4.  Use subtags or sequences\
    \ of subtags for individual languages in\n       preference to subtags for language\
    \ collections.  A \"language\n       collection\" is a group of languages that\
    \ are descended from a\n       common ancestor, are spoken in the same geographical\
    \ area, or are\n       otherwise related.  Certain language collections are assigned\n\
    \       codes by [ISO639-5] (and some of these [ISO639-5] codes are also\n   \
    \    defined as collections in [ISO639-2]).  These codes are included\n      \
    \ as primary language subtags in the registry.  Subtags for a\n       language\
    \ collection in the registry have a 'Scope' field with a\n       value of 'collection'.\
    \  A subtag for a language collection is\n       always preferred to less specific\
    \ alternatives such as 'mul' and\n       'und' (see below), and a subtag representing\
    \ a language\n       collection MAY be used when more specific language information\
    \ is\n       not available.  However, most users and implementations do not\n\
    \       know there is a relationship between the collection and its\n       individual\
    \ languages.  In addition, the relationship between the\n       individual languages\
    \ in the collection is not well defined; in\n       particular, the languages\
    \ are usually not mutually intelligible.\n       Since the subtags are different,\
    \ a request for the collection\n       will typically only produce items tagged\
    \ with the collection's\n       subtag, not items tagged with subtags for the\
    \ individual\n       languages contained in the collection.\n       *  For example,\
    \ collections are interpreted inclusively, so the\n          subtag 'gem' (Germanic\
    \ languages) could, but SHOULD NOT, be\n          used with content that would\
    \ be better tagged with \"en\"\n          (English), \"de\" (German), or \"gsw\"\
    \ (Swiss German, Alemannic).\n          While 'gem' collects all of these (and\
    \ other) languages, most\n          implementations will not match 'gem' to the\
    \ individual\n          languages; thus, using the subtag will not produce the\
    \ desired\n          result.\n   5.  [ISO639-2] has defined several codes included\
    \ in the subtag\n       registry that require additional care when choosing language\n\
    \       tags.  In most of these cases, where omitting the language tag is\n  \
    \     permitted, such omission is preferable to using these codes.\n       Language\
    \ tags SHOULD NOT incorporate these subtags as a prefix,\n       unless the additional\
    \ information conveys some value to the\n       application.\n       *  The 'mul'\
    \ (Multiple) primary language subtag identifies\n          content in multiple\
    \ languages.  This subtag SHOULD NOT be used\n          when a list of languages\
    \ or individual tags for each content\n          element can be used instead.\
    \  For example, the 'Content-\n          Language' header [RFC3282] allows a list\
    \ of languages to be\n          used, not just a single language tag.\n      \
    \ *  The 'und' (Undetermined) primary language subtag identifies\n          linguistic\
    \ content whose language is not determined.  This\n          subtag SHOULD NOT\
    \ be used unless a language tag is required\n          and language information\
    \ is not available or cannot be\n          determined.  Omitting the language\
    \ tag (where permitted) is\n          preferred.  The 'und' subtag might be useful\
    \ for protocols\n          that require a language tag to be provided or where\
    \ a primary\n          language subtag is required (such as in \"und-Latn\").\
    \  The\n          'und' subtag MAY also be useful when matching language tags\
    \ in\n          certain situations.\n       *  The 'zxx' (Non-Linguistic, Not\
    \ Applicable) primary language\n          subtag identifies content for which\
    \ a language classification\n          is inappropriate or does not apply.  Some\
    \ examples might\n          include instrumental or electronic music; sound recordings\n\
    \          consisting of nonverbal sounds; audiovisual materials with no\n   \
    \       narration, dialog, printed titles, or subtitles; machine-\n          readable\
    \ data files consisting of machine languages or\n          character codes; or\
    \ programming source code.\n       *  The 'mis' (Uncoded) primary language subtag\
    \ identifies content\n          whose language is known but that does not currently\
    \ have a\n          corresponding subtag.  This subtag SHOULD NOT be used.\n \
    \         Because the addition of other codes in the future can render\n     \
    \     its application invalid, it is inherently unstable and hence\n         \
    \ incompatible with the stability goals of BCP 47.  It is always\n          preferable\
    \ to use other subtags: either 'und' or (with prior\n          agreement) private\
    \ use subtags.\n   6.  Use variant subtags sparingly and in the correct order.\
    \  Most\n       variant subtags have one or more 'Prefix' fields in the registry\n\
    \       that express the list of subtags with which they are appropriate.\n  \
    \     Variants SHOULD only be used with subtags that appear in one of\n      \
    \ these 'Prefix' fields.  If a variant lists a second variant in\n       one of\
    \ its 'Prefix' fields, the first variant SHOULD appear\n       directly after\
    \ the second variant in any language tag where both\n       occur.  General purpose\
    \ variants (those with no 'Prefix' fields\n       at all) SHOULD appear after\
    \ any other variant subtags.  Order any\n       remaining variants by placing\
    \ the most significant subtag first.\n       If none of the subtags is more significant\
    \ or no relationship can\n       be determined, alphabetize the subtags.  Because\
    \ variants are\n       very specialized, using many of them together generally\
    \ makes the\n       tag so narrow as to override the additional precision gained.\n\
    \       Putting the subtags into another order interferes with\n       interoperability,\
    \ as well as the overall interpretation of the\n       tag.\n       For example:\n\
    \       *  The tag \"en-scotland-fonipa\" (English, Scottish dialect, IPA\n  \
    \        phonetic transcription) is correctly ordered because\n          'scotland'\
    \ has a 'Prefix' of \"en\", while 'fonipa' has no\n          'Prefix' field.\n\
    \       *  The tag \"sl-IT-rozaj-biske-1994\" is correctly ordered: 'rozaj'\n\
    \          lists \"sl\" as its sole 'Prefix'; 'biske' lists \"sl-rozaj\" as\n\
    \          its sole 'Prefix'.  The subtag '1994' has several prefixes,\n     \
    \     including \"sl-rozaj\".  However, it follows both 'rozaj' and\n        \
    \  'biske' because one of its 'Prefix' fields is \"sl-rozaj-\n          biske\"\
    .\n   7.  The grandfathered tag \"i-default\" (Default Language) was\n       originally\
    \ registered according to [RFC1766] to meet the needs of\n       [RFC2277].  It\
    \ is not used to indicate a specific language, but\n       rather to identify\
    \ the condition or content used where the\n       language preferences of the\
    \ user cannot be established.  It\n       SHOULD NOT be used except as a means\
    \ of labeling the default\n       content for applications or protocols that require\
    \ default\n       language content to be labeled with that specific tag.  It MAY\n\
    \       also be used by an application or protocol to identify when the\n    \
    \   default language content is being returned.\n"
- title: 4.1.1.  Tagging Encompassed Languages
  contents:
  - "4.1.1.  Tagging Encompassed Languages\n   Some primary language records in the\
    \ registry have a 'Macrolanguage'\n   field (Section 3.1.10) that contains a mapping\
    \ from each \"encompassed\n   language\" to its macrolanguage.  The 'Macrolanguage'\
    \ mapping doesn't\n   define what the relationship between the encompassed language\
    \ and its\n   macrolanguage is, nor does it define how languages encompassed by\
    \ the\n   same macrolanguage are related to each other.  Two different\n   languages\
    \ encompassed by the same macrolanguage may differ from one\n   another more than,\
    \ say, French and Spanish do.\n   A few specific macrolanguages, such as Chinese\
    \ ('zh') and Arabic\n   ('ar'), are handled differently.  See Section 4.1.2.\n\
    \   The more specific encompassed language subtag SHOULD be used to form\n   the\
    \ language tag, although either the macrolanguage's primary\n   language subtag\
    \ or the encompassed language's subtag MAY be used.\n   This means, for example,\
    \ tagging Plains Cree with 'crk' rather than\n   'cr' (Cree), and so forth.\n\
    \   Each macrolanguage subtag's scope, by definition, includes all of its\n  \
    \ encompassed languages.  Since the relationship between encompassed\n   languages\
    \ varies, users cannot assume that the macrolanguage subtag\n   means any particular\
    \ encompassed language, nor that any given pair of\n   encompassed languages are\
    \ mutually intelligible or otherwise\n   interchangeable.\n   Applications MAY\
    \ use macrolanguage information to improve matching or\n   language negotiation.\
    \  For example, the information that 'sr'\n   (Serbian) and 'hr' (Croatian) share\
    \ a macrolanguage expresses a\n   closer relation between those languages than\
    \ between, say, 'sr'\n   (Serbian) and 'ma' (Macedonian).  However, this relationship\
    \ is not\n   guaranteed nor is it exclusive.  For example, Romanian ('ro') and\n\
    \   Moldavian ('mo') do not share a macrolanguage, but are far more\n   closely\
    \ related to each other than Cantonese ('yue') and Wu ('wuu'),\n   which do share\
    \ a macrolanguage.\n"
- title: 4.1.2.  Using Extended Language Subtags
  contents:
  - "4.1.2.  Using Extended Language Subtags\n   To accommodate language tag forms\
    \ used prior to the adoption of this\n   document, language tags provide a special\
    \ compatibility mechanism:\n   the extended language subtag.  Selected languages\
    \ have been provided\n   with both primary and extended language subtags.  These\
    \ include\n   macrolanguages, such as Malay ('ms') and Uzbek ('uz'), that have\
    \ a\n   specific dominant variety that is generally synonymous with the\n   macrolanguage.\
    \  Other languages, such as the Chinese ('zh') and\n   Arabic ('ar') macrolanguages\
    \ and the various sign languages ('sgn'),\n   have traditionally used their primary\
    \ language subtag, possibly\n   coupled with various region subtags or as part\
    \ of a registered\n   grandfathered tag, to indicate the language.\n   With the\
    \ adoption of this document, specific ISO 639-3 subtags became\n   available to\
    \ identify the languages contained within these diverse\n   language families\
    \ or groupings.  This presents a choice of language\n   tags where previously\
    \ none existed:\n   o  Each encompassed language's subtag SHOULD be used as the\
    \ primary\n      language subtag.  For example, a document in Mandarin Chinese\n\
    \      would be tagged \"cmn\" (the subtag for Mandarin Chinese) in\n      preference\
    \ to \"zh\" (Chinese).\n   o  If compatibility is desired or needed, the encompassed\
    \ subtag MAY\n      be used as an extended language subtag.  For example, a document\n\
    \      in Mandarin Chinese could be tagged \"zh-cmn\" instead of either\n    \
    \  \"cmn\" or \"zh\".\n   o  The macrolanguage or prefixing subtag MAY still be\
    \ used to form\n      the tag instead of the more specific encompassed language\
    \ subtag.\n      That is, tags such as \"zh-HK\" or \"sgn-RU\" are still valid.\n\
    \   Chinese ('zh') provides a useful illustration of this.  In the past,\n   various\
    \ content has used tags beginning with the 'zh' subtag, with\n   application-specific\
    \ meaning being associated with region codes,\n   private use sequences, or grandfathered\
    \ registered values.  This is\n   because historically only the macrolanguage\
    \ subtag 'zh' was available\n   for forming language tags.  However, the languages\
    \ encompassed by the\n   Chinese subtag 'zh' are, in the main, not mutually intelligible\
    \ when\n   spoken, and the written forms of these languages also show wide\n \
    \  variation in form and usage.\n   To provide compatibility, Chinese languages\
    \ encompassed by the 'zh'\n   subtag are in the registry both as primary language\
    \ subtags and as\n   extended language subtags.  For example, the ISO 639-3 code\
    \ for\n   Cantonese is 'yue'.  Content in Cantonese might historically have\n\
    \   used a tag such as \"zh-HK\" (since Cantonese is commonly spoken in\n   Hong\
    \ Kong), although that tag actually means any type of Chinese as\n   used in Hong\
    \ Kong.  With the availability of ISO 639-3 codes in the\n   registry, content\
    \ in Cantonese can be directly tagged using the 'yue'\n   subtag.  The content\
    \ can use it as a primary language subtag, as in\n   the tag \"yue-HK\" (Cantonese,\
    \ Hong Kong).  Or it can use an extended\n   language subtag with 'zh', as in\
    \ the tag \"zh-yue-Hant\" (Chinese,\n   Cantonese, Traditional script).\n   As\
    \ noted above, applications can choose to use the macrolanguage\n   subtag to\
    \ form the tag instead of using the more specific encompassed\n   language subtag.\
    \  For example, an application with large quantities\n   of data already using\
    \ tags with the 'zh' (Chinese) subtag might\n   continue to use this more general\
    \ subtag even for new data, even\n   though the content could be more precisely\
    \ tagged with 'cmn'\n   (Mandarin), 'yue' (Cantonese), 'wuu' (Wu), and so on.\
    \  Similarly, an\n   application already using tags that start with the 'ar' (Arabic)\n\
    \   subtag might continue to use this more general subtag even for new\n   data,\
    \ which could be more precisely tagged with 'arb' (Standard\n   Arabic).\n   In\
    \ some cases, the encompassed languages had tags registered for them\n   during\
    \ the RFC 3066 era.  Those grandfathered tags not already\n   deprecated or rendered\
    \ redundant were deprecated in the registry upon\n   adoption of this document.\
    \  As grandfathered values, they remain\n   valid for use, and some content or\
    \ applications might use them.  As\n   with other grandfathered tags, since implementations\
    \ might not be\n   able to associate the grandfathered tags with the encompassed\n\
    \   language subtag equivalents that are recommended by this document,\n   implementations\
    \ are encouraged to canonicalize tags for comparison\n   purposes.  Some examples\
    \ of this include the tags \"zh-hakka\" (Hakka)\n   and \"zh-guoyu\" (Mandarin\
    \ or Standard Chinese).\n   Sign languages share a mode of communication rather\
    \ than a linguistic\n   heritage.  There are many sign languages that have developed\n\
    \   independently, and the subtag 'sgn' indicates only the presence of a\n   sign\
    \ language.  A number of sign languages also had grandfathered\n   tags registered\
    \ for them during the RFC 3066 era.  For example, the\n   grandfathered tag \"\
    sgn-US\" was registered to represent 'American Sign\n   Language' specifically,\
    \ without reference to the United States.  This\n   is still valid, but deprecated:\
    \ a document in American Sign Language\n   can be labeled either \"ase\" or \"\
    sgn-ase\" (the 'ase' subtag is for the\n   language called 'American Sign Language').\n"
- title: 4.2.  Meaning of the Language Tag
  contents:
  - "4.2.  Meaning of the Language Tag\n   The meaning of a language tag is related\
    \ to the meaning of the\n   subtags that it contains.  Each subtag, in turn, implies\
    \ a certain\n   range of expectations one might have for related content, although\
    \ it\n   is not a guarantee.  For example, the use of a script subtag such as\n\
    \   'Arab' (Arabic script) does not mean that the content contains only\n   Arabic\
    \ characters.  It does mean that the language involved is\n   predominantly in\
    \ the Arabic script.  Thus, a language tag and its\n   subtags can encompass a\
    \ very wide range of variation and yet remain\n   appropriate in each particular\
    \ instance.\n   Validity of a tag is not the only factor determining its usefulness.\n\
    \   While every valid tag has a meaning, it might not represent any real-\n  \
    \ world language usage.  This is unavoidable in a system in which\n   subtags\
    \ can be combined freely.  For example, tags such as\n   \"ar-Cyrl-CO\" (Arabic,\
    \ Cyrillic script, as used in Colombia) or \"tlh-\n   Kore-AQ-fonipa\" (Klingon,\
    \ Korean script, as used in Antarctica, IPA\n   phonetic transcription) are both\
    \ valid and unlikely to represent a\n   useful combination of language attributes.\n\
    \   The meaning of a given tag doesn't depend on the context in which it\n   appears.\
    \  The relationship between a tag's meaning and the\n   information objects to\
    \ which that tag is applied, however, can vary.\n   o  For a single information\
    \ object, the associated language tags\n      might be interpreted as the set\
    \ of languages that is necessary for\n      a complete comprehension of the complete\
    \ object.  Example: Plain\n      text documents.\n   o  For an aggregation of\
    \ information objects, the associated language\n      tags could be taken as the\
    \ set of languages used inside components\n      of that aggregation.  Examples:\
    \ Document stores and libraries.\n   o  For information objects whose purpose\
    \ is to provide alternatives,\n      the associated language tags could be regarded\
    \ as a hint that the\n      content is provided in several languages and that\
    \ one has to\n      inspect each of the alternatives in order to find its language\
    \ or\n      languages.  In this case, the presence of multiple tags might not\n\
    \      mean that one needs to be multilingual to get complete\n      understanding\
    \ of the document.  Example: MIME multipart/\n      alternative [RFC2046].\n \
    \  o  For markup languages, such as HTML and XML, language information\n     \
    \ can be added to each part of the document identified by the markup\n      structure\
    \ (including the whole document itself).  For example, one\n      could write\
    \ <span lang=\"fr\">C'est la vie.</span> inside a German\n      document; the\
    \ German-speaking user could then access a French-\n      German dictionary to\
    \ find out what the marked section meant.  If\n      the user were listening to\
    \ that document through a speech\n      synthesis interface, this formation could\
    \ be used to signal the\n      synthesizer to appropriately apply French text-to-speech\n\
    \      pronunciation rules to that span of text, instead of applying the\n   \
    \   inappropriate German rules.\n   o  For markup languages and document formats\
    \ that allow the audience\n      to be identified, a language tag could indicate\
    \ the audience(s)\n      appropriate for that document.  For example, the same\
    \ HTML\n      document described in the preceding bullet might have an HTTP\n\
    \      header \"Content-Language: de\" to indicate that the intended\n      audience\
    \ for the file is German (even though three words appear\n      and are identified\
    \ as being in French within it).\n   o  For systems and APIs, language tags form\
    \ the basis for most\n      implementations of locale identifiers.  For example,\
    \ see Unicode's\n      CLDR (Common Locale Data Repository) (see UTS #35 [UTS35])\n\
    \      project.\n   Language tags are related when they contain a similar sequence\
    \ of\n   subtags.  For example, if a language tag B contains language tag A as\n\
    \   a prefix, then B is typically \"narrower\" or \"more specific\" than A.\n\
    \   Thus, \"zh-Hant-TW\" is more specific than \"zh-Hant\".\n   This relationship\
    \ is not guaranteed in all cases: specifically,\n   languages that begin with\
    \ the same sequence of subtags are NOT\n   guaranteed to be mutually intelligible,\
    \ although they might be.  For\n   example, the tag \"az\" shares a prefix with\
    \ both \"az-Latn\"\n   (Azerbaijani written using the Latin script) and \"az-Cyrl\"\
    \n   (Azerbaijani written using the Cyrillic script).  A person fluent in\n  \
    \ one script might not be able to read the other, even though the\n   linguistic\
    \ content (e.g., what would be heard if both texts were read\n   aloud) might\
    \ be identical.  Content tagged as \"az\" most probably is\n   written in just\
    \ one script and thus might not be intelligible to a\n   reader familiar with\
    \ the other script.\n   Similarly, not all subtags specify an actual distinction\
    \ in language.\n   For example, the tags \"en-US\" and \"en-CA\" mean, roughly,\
    \ English with\n   features generally thought to be characteristic of the United\
    \ States\n   and Canada, respectively.  They do not imply that a significant\n\
    \   dialectical boundary exists between any arbitrarily selected point in\n  \
    \ the United States and any arbitrarily selected point in Canada.\n   Neither\
    \ does a particular region subtag imply that linguistic\n   distinctions do not\
    \ exist within that region.\n"
- title: 4.3.  Lists of Languages
  contents:
  - "4.3.  Lists of Languages\n   In some applications, a single content item might\
    \ best be associated\n   with more than one language tag.  Examples of such a\
    \ usage include:\n   o  Content items that contain multiple, distinct varieties.\
    \  Often\n      this is used to indicate an appropriate audience for a given\n\
    \      content item when multiple choices might be appropriate.  Examples\n  \
    \    of this could include:\n      *  Metadata about the appropriate audience\
    \ for a movie title.  For\n         example, a DVD might label its individual\
    \ audio tracks 'de'\n         (German), 'fr' (French), and 'es' (Spanish), but\
    \ the overall\n         title would list \"de, fr, es\" as its overall audience.\n\
    \      *  A French/English, English/French dictionary tagged as both \"en\"\n\
    \         and \"fr\" to specify that it applies equally to French and\n      \
    \   English.\n      *  A side-by-side or interlinear translation of a document,\
    \ as is\n         commonly done with classical works in Latin or Greek.\n   o\
    \  Content items that contain a single language but that require\n      multiple\
    \ levels of specificity.  For example, a library might wish\n      to classify\
    \ a particular work as both Norwegian ('no') and as\n      Nynorsk ('nn') for\
    \ audiences capable of appreciating the\n      distinction or needing to select\
    \ content more narrowly.\n"
- title: 4.4.  Length Considerations
  contents:
  - "4.4.  Length Considerations\n   There is no defined upper limit on the size of\
    \ language tags.  While\n   historically most language tags have consisted of\
    \ language and region\n   subtags with a combined total length of up to six characters,\
    \ larger\n   tags have always been both possible and have actually appeared in\n\
    \   use.\n   Neither the language tag syntax nor other requirements in this\n\
    \   document impose a fixed upper limit on the number of subtags in a\n   language\
    \ tag (and thus an upper bound on the size of a tag).  The\n   language tag syntax\
    \ suggests that, depending on the specific\n   language, more subtags (and thus\
    \ a longer tag) are sometimes\n   necessary to completely identify the language\
    \ for certain\n   applications; thus, it is possible to envision long or complex\
    \ subtag\n   sequences.\n"
- title: 4.4.1.  Working with Limited Buffer Sizes
  contents:
  - "4.4.1.  Working with Limited Buffer Sizes\n   Some applications and protocols\
    \ are forced to allocate fixed buffer\n   sizes or otherwise limit the length\
    \ of a language tag.  A conformant\n   implementation or specification MAY refuse\
    \ to support the storage of\n   language tags that exceed a specified length.\
    \  Any such limitation\n   SHOULD be clearly documented, and such documentation\
    \ SHOULD include\n   what happens to longer tags (for example, whether an error\
    \ value is\n   generated or the language tag is truncated).  A protocol that allows\n\
    \   tags to be truncated at an arbitrary limit, without giving any\n   indication\
    \ of what that limit is, has the potential to cause harm by\n   changing the meaning\
    \ of tags in substantial ways.\n   In practice, most language tags do not require\
    \ more than a few\n   subtags and will not approach reasonably sized buffer limitations;\n\
    \   see Section 4.1.\n   Some specifications or protocols have limits on tag length\
    \ but do not\n   have a fixed length limitation.  For example, [RFC2231] has no\n\
    \   explicit length limitation: the length available for the language tag\n  \
    \ is constrained by the length of other header components (such as the\n   charset's\
    \ name) coupled with the 76-character limit in [RFC2047].\n   Thus, the \"limit\"\
    \ might be 50 or more characters, but it could\n   potentially be quite small.\n\
    \   The considerations for assigning a buffer limit are:\n      Implementations\
    \ SHOULD NOT truncate language tags unless the\n      meaning of the tag is purposefully\
    \ being changed, or unless the\n      tag does not fit into a limited buffer size\
    \ specified by a\n      protocol for storage or transmission.\n      Implementations\
    \ SHOULD warn the user when a tag is truncated since\n      truncation changes\
    \ the semantic meaning of the tag.\n      Implementations of protocols or specifications\
    \ that are space\n      constrained but do not have a fixed limit SHOULD use the\
    \ longest\n      possible tag in preference to truncation.\n      Protocols or\
    \ specifications that specify limited buffer sizes for\n      language tags MUST\
    \ allow for language tags of at least 35\n      characters.  Note that [RFC4646]\
    \ recommended a minimum field size\n      of 42 characters because it included\
    \ all three elements of the\n      'extlang' production.  Two of these are now\
    \ permanently reserved,\n      so a registered primary language subtag of the\
    \ maximum length of 8\n      characters is now longer than the longest language-extlang\n\
    \      combination.  Protocols or specifications that commonly use\n      extensions\
    \ or private use subtags might wish to reserve or\n      recommend a longer \"\
    minimum buffer\" size.\n   The following illustration shows how the 35-character\
    \ recommendation\n   was derived:\n   language      =  8 ; longest allowed registered\
    \ value\n                      ;   longer than primary+extlang\n             \
    \         ;   which requires 7 characters\n   script        =  5 ; if not suppressed:\
    \ see Section 4.1\n   region        =  4 ; UN M.49 numeric region code\n     \
    \                 ;   ISO 3166-1 codes require 3\n   variant1      =  9 ; needs\
    \ 'language' as a prefix\n   variant2      =  9 ; very rare, as it needs\n   \
    \                   ;   'language-variant1' as a prefix\n   total         = 35\
    \ characters\n              Figure 7: Derivation of the Limit on Tag Length\n"
- title: 4.4.2.  Truncation of Language Tags
  contents:
  - "4.4.2.  Truncation of Language Tags\n   Truncation of a language tag alters the\
    \ meaning of the tag, and thus\n   SHOULD be avoided.  However, truncation of\
    \ language tags is sometimes\n   necessary due to limited buffer sizes.  Such\
    \ truncation MUST NOT\n   permit a subtag to be chopped off in the middle or the\
    \ formation of\n   invalid tags (for example, one ending with the \"-\" character).\n\
    \   This means that applications or protocols that truncate tags MUST do\n   so\
    \ by progressively removing subtags along with their preceding \"-\"\n   from\
    \ the right side of the language tag until the tag is short enough\n   for the\
    \ given buffer.  If the resulting tag ends with a single-\n   character subtag,\
    \ that subtag and its preceding \"-\" MUST also be\n   removed.  For example:\n\
    \   Tag to truncate: zh-Latn-CN-variant1-a-extend1-x-wadegile-private1\n   1.\
    \ zh-Latn-CN-variant1-a-extend1-x-wadegile\n   2. zh-Latn-CN-variant1-a-extend1\n\
    \   3. zh-Latn-CN-variant1\n   4. zh-Latn-CN\n   5. zh-Latn\n   6. zh\n      \
    \              Figure 8: Example of Tag Truncation\n"
- title: 4.5.  Canonicalization of Language Tags
  contents:
  - "4.5.  Canonicalization of Language Tags\n   Since a particular language tag can\
    \ be used by many processes,\n   language tags SHOULD always be created or generated\
    \ in canonical\n   form.\n   A language tag is in 'canonical form' when the tag\
    \ is well-formed\n   according to the rules in Sections 2.1 and 2.2 and it has\
    \ been\n   canonicalized by applying each of the following steps in order, using\n\
    \   data from the IANA registry (see Section 3.1):\n   1.  Extension sequences\
    \ are ordered into case-insensitive ASCII order\n       by singleton subtag.\n\
    \       *  For example, the subtag sequence '-a-babble' comes before\n       \
    \   '-b-warble'.\n   2.  Redundant or grandfathered tags are replaced by their\
    \ 'Preferred-\n       Value', if there is one.\n       *  The field-body of the\
    \ 'Preferred-Value' for grandfathered and\n          redundant tags is an \"extended\
    \ language range\" [RFC4647] and\n          might consist of more than one subtag.\n\
    \       *  'Preferred-Value' fields in the registry provide mappings from\n  \
    \        deprecated tags to modern equivalents.  Many of these were\n        \
    \  created before the adoption of this document (such as the\n          mapping\
    \ of \"no-nyn\" to \"nn\" or \"i-klingon\" to \"tlh\").  Others\n          are\
    \ the result of later registrations or additions to the\n          registry as\
    \ permitted or required by this document (for\n          example, \"zh-hakka\"\
    \ was deprecated in favor of the ISO 639-3\n          code 'hak' when this document\
    \ was adopted).\n   3.  Subtags are replaced by their 'Preferred-Value', if there\
    \ is one.\n       For extlangs, the original primary language subtag is also\n\
    \       replaced if there is a primary language subtag in the 'Preferred-\n  \
    \     Value'.\n       *  The field-body of the 'Preferred-Value' for extlangs\
    \ is an\n          \"extended language range\" and typically maps to a primary\n\
    \          language subtag.  For example, the subtag sequence \"zh-hak\"\n   \
    \       (Chinese, Hakka) is replaced with the subtag 'hak' (Hakka).\n       *\
    \  Most of the non-extlang subtags are either Region subtags\n          where\
    \ the country name or designation has changed or clerical\n          corrections\
    \ to ISO 639-1.\n   The canonical form contains no 'extlang' subtags.  There is\
    \ an\n   alternate 'extlang form' that maintains or reinstates extlang\n   subtags.\
    \  This form can be useful in environments where the presence\n   of the 'Prefix'\
    \ subtag is considered beneficial in matching or\n   selection (see Section 4.1.2).\n\
    \   A language tag is in 'extlang form' when the tag is well-formed\n   according\
    \ to the rules in Sections 2.1 and 2.2 and it has been\n   processed by applying\
    \ each of the following two steps in order, using\n   data from the IANA registry:\n\
    \   1.  The language tag is first transformed into canonical form, as\n      \
    \ described above.\n   2.  If the language tag starts with a primary language\
    \ subtag that is\n       also an extlang subtag, then the language tag is prepended\
    \ with\n       the extlang's 'Prefix'.\n       *  For example, \"hak-CN\" (Hakka,\
    \ China) has the primary language\n          subtag 'hak', which in turn has an\
    \ 'extlang' record with a\n          'Prefix' 'zh' (Chinese).  The extlang form\
    \ is \"zh-hak-CN\"\n          (Chinese, Hakka, China).\n       *  Note that Step\
    \ 2 (prepending a prefix) can restore a subtag\n          that was removed by\
    \ Step 1 (canonicalizing).\n   Example: The language tag \"en-a-aaa-b-ccc-bbb-x-xyz\"\
    \ is in canonical\n   form, while \"en-b-ccc-bbb-a-aaa-X-xyz\" is well-formed\
    \ and potentially\n   valid (extensions 'a' and 'b' are not defined as of the\
    \ publication\n   of this document) but not in canonical form (the extensions\
    \ are not\n   in alphabetical order).\n   Example: Although the tag \"en-BU\"\
    \ (English as used in Burma)\n   maintains its validity, the language tag \"en-BU\"\
    \ is not in canonical\n   form because the 'BU' subtag has a canonical mapping\
    \ to 'MM'\n   (Myanmar).\n   Canonicalization of language tags does not imply\
    \ anything about the\n   use of upper- or lowercase letters when processing or\
    \ comparing\n   subtags (and as described in Section 2.1).  All comparisons MUST\
    \ be\n   performed in a case-insensitive manner.\n   When performing canonicalization\
    \ of language tags, processors MAY\n   regularize the case of the subtags (that\
    \ is, this process is\n   OPTIONAL), following the case used in the registry (see\n\
    \   Section 2.1.1).\n   If more than one variant appears within a tag, processors\
    \ MAY reorder\n   the variants to obtain better matching behavior or more consistent\n\
    \   presentation.  Reordering of the variants SHOULD follow the\n   recommendations\
    \ for variant ordering in Section 4.1.\n   If the field 'Deprecated' appears in\
    \ a registry record without an\n   accompanying 'Preferred-Value' field, then\
    \ that tag or subtag is\n   deprecated without a replacement.  These values are\
    \ canonical when\n   they appear in a language tag.  However, tags that include\
    \ these\n   values SHOULD NOT be selected by users or generated by\n   implementations.\n\
    \   An extension MUST define any relationships that exist between the\n   various\
    \ subtags in the extension and thus MAY define an alternate\n   canonicalization\
    \ scheme for the extension's subtags.  Extensions MAY\n   define how the order\
    \ of the extension's subtags is interpreted.  For\n   example, an extension could\
    \ define that its subtags are in canonical\n   order when the subtags are placed\
    \ into ASCII order: that is, \"en-a-\n   aaa-bbb-ccc\" instead of \"en-a-ccc-bbb-aaa\"\
    .  Another extension might\n   define that the order of the subtags influences\
    \ their semantic\n   meaning (so that \"en-b-ccc-bbb-aaa\" has a different value\
    \ from \"en-b-\n   aaa-bbb-ccc\").  However, extension specifications SHOULD be\
    \ designed\n   so that they are tolerant of the typical processes described in\n\
    \   Section 3.7.\n"
- title: 4.6.  Considerations for Private Use Subtags
  contents:
  - "4.6.  Considerations for Private Use Subtags\n   Private use subtags, like all\
    \ other subtags, MUST conform to the\n   format and content constraints in the\
    \ ABNF.  Private use subtags have\n   no meaning outside the private agreement\
    \ between the parties that\n   intend to use or exchange language tags that employ\
    \ them.  The same\n   subtags MAY be used with a different meaning under a separate\
    \ private\n   agreement.  They SHOULD NOT be used where alternatives exist and\n\
    \   SHOULD NOT be used in content or protocols intended for general use.\n   Private\
    \ use subtags are simply useless for information exchange\n   without prior arrangement.\
    \  The value and semantic meaning of private\n   use tags and of the subtags used\
    \ within such a language tag are not\n   defined by this document.\n   Private\
    \ use sequences introduced by the 'x' singleton are completely\n   opaque to users\
    \ or implementations outside of the private use\n   agreement.  So, in addition\
    \ to private use subtag sequences\n   introduced by the singleton subtag 'x',\
    \ the Language Subtag Registry\n   provides private use language, script, and\
    \ region subtags derived\n   from the private use codes assigned by the underlying\
    \ standards.\n   These subtags are valid for use in forming language tags; they\
    \ are\n   RECOMMENDED over the 'x' singleton private use subtag sequences\n  \
    \ because they convey more information via their linkage to the\n   language tag's\
    \ inherent structure.\n   For example, the region subtags 'AA', 'ZZ', and those\
    \ in the ranges\n   'QM'-'QZ' and 'XA'-'XZ' (derived from the ISO 3166-1 private\
    \ use\n   codes) can be used to form a language tag.  A tag such as\n   \"zh-Hans-XQ\"\
    \ conveys a great deal of public, interchangeable\n   information about the language\
    \ material (that it is Chinese in the\n   simplified Chinese script and is suitable\
    \ for some geographic region\n   'XQ').  While the precise geographic region is\
    \ not known outside of\n   private agreement, the tag conveys far more information\
    \ than an\n   opaque tag such as \"x-somelang\" or even \"zh-Hans-x-xq\" (where\
    \ the\n   'xq' subtag's meaning is entirely opaque).\n   However, in some cases\
    \ content tagged with private use subtags can\n   interact with other systems\
    \ in a different and possibly unsuitable\n   manner compared to tags that use\
    \ opaque, privately defined subtags,\n   so the choice of the best approach sometimes\
    \ depends on the\n   particular domain in question.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   This section deals with the processes and requirements\
    \ necessary for\n   IANA to maintain the subtag and extension registries as defined\
    \ by\n   this document and in accordance with the requirements of [RFC5226].\n\
    \   The impact on the IANA maintainers of the two registries defined by\n   this\
    \ document will be a small increase in the frequency of new\n   entries or updates.\
    \  IANA also is required to create a new mailing\n   list (described below in\
    \ Section 5.1) to announce registry changes\n   and updates.\n"
- title: 5.1.  Language Subtag Registry
  contents:
  - "5.1.  Language Subtag Registry\n   IANA updated the registry using instructions\
    \ and content provided in\n   a companion document [RFC5645].  The criteria and\
    \ process for\n   selecting the updated set of records are described in that document.\n\
    \   The updated set of records represents no impact on IANA, since the\n   work\
    \ to create it will be performed externally.\n   Future work on the Language Subtag\
    \ Registry includes the following\n   activities:\n   o  Inserting or replacing\
    \ whole records.  These records are\n      preformatted for IANA by the Language\
    \ Subtag Reviewer, as\n      described in Section 3.3.\n   o  Archiving and making\
    \ publicly available the registration forms.\n   o  Announcing each updated version\
    \ of the registry on the\n      \"ietf-languages-announcements@iana.org\" mailing\
    \ list.\n   Each registration form sent to IANA contains a single record for\n\
    \   incorporation into the registry.  The form will be sent to\n   <iana@iana.org>\
    \ by the Language Subtag Reviewer.  It will have a\n   subject line indicating\
    \ whether the enclosed form represents an\n   insertion of a new record (indicated\
    \ by the word \"INSERT\" in the\n   subject line) or a replacement of an existing\
    \ record (indicated by\n   the word \"MODIFY\" in the subject line).  At no time\
    \ can a record be\n   deleted from the registry.\n   IANA will extract the record\
    \ from the form and place the inserted or\n   modified record into the appropriate\
    \ section of the Language Subtag\n   Registry, grouping the records by their 'Type'\
    \ field.  Inserted\n   records can be placed anywhere within the appropriate section;\
    \ there\n   is no guarantee that the registry's records will be placed in any\n\
    \   particular order except that they will always be grouped by 'Type'.\n   Modified\
    \ records overwrite the record they replace.\n   Whenever an entry is created\
    \ or modified in the registry, the 'File-\n   Date' record at the start of the\
    \ registry is updated to reflect the\n   most recent modification date.  The date\
    \ format SHALL be the \"full-\n   date\" format of [RFC3339].  The date SHALL\
    \ be the date on which that\n   version of the registry was first published by\
    \ IANA.  There SHALL be\n   at most one version of the registry published in a\
    \ day.  A 'File-\n   Date' record is also included in each request to IANA to\
    \ insert or\n   modify records, indicating the acceptance date of the records\
    \ in the\n   request.\n   The updated registry file MUST use the UTF-8 character\
    \ encoding, and\n   IANA MUST check the registry file for proper encoding.  Non-ASCII\n\
    \   characters can be sent to IANA by attaching the registration form to\n   the\
    \ email message or by using various encodings in the mail message\n   body (UTF-8\
    \ is recommended).  IANA will verify any unclear or\n   corrupted characters with\
    \ the Language Subtag Reviewer prior to\n   posting the updated registry.\n  \
    \ IANA will also archive and make publicly available from\n   http://www.iana.org\
    \ each registration form.  Note that multiple\n   registrations can pertain to\
    \ the same record in the registry.\n   Developers who are dependent upon the Language\
    \ Subtag Registry\n   sometimes would like to be informed of changes in the registry\
    \ so\n   that they can update their implementations.  When any change is made\n\
    \   to the Language Subtag Registry, IANA will send an announcement\n   message\
    \ to <ietf-languages-announcements@iana.org> (a self-\n   subscribing list to\
    \ which only IANA can post).\n"
- title: 5.2.  Extensions Registry
  contents:
  - "5.2.  Extensions Registry\n   The Language Tag Extensions Registry can contain\
    \ at most 35 records,\n   and thus changes to this registry are expected to be\
    \ very infrequent.\n   Future work by IANA on the Language Tag Extensions Registry\
    \ is\n   limited to two cases.  First, the IESG MAY request that new records\n\
    \   be inserted into this registry from time to time.  These requests\n   MUST\
    \ include the record to insert in the exact format described in\n   Section 3.7.\
    \  In addition, there MAY be occasional requests from the\n   maintaining authority\
    \ for a specific extension to update the contact\n   information or URLs in the\
    \ record.  These requests MUST include the\n   complete, updated record.  IANA\
    \ is not responsible for validating the\n   information provided, only that it\
    \ is properly formatted.  IANA\n   SHOULD take reasonable steps to ascertain that\
    \ the request comes from\n   the maintaining authority named in the record present\
    \ in the\n   registry.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   Language tags used in content negotiation, like\
    \ any other information\n   exchanged on the Internet, might be a source of concern\
    \ because they\n   might be used to infer the nationality of the sender, and thus\n\
    \   identify potential targets for surveillance.\n   This is a special case of\
    \ the general problem that anything sent is\n   visible to the receiving party\
    \ and possibly to third parties as well.\n   It is useful to be aware that such\
    \ concerns can exist in some cases.\n   The evaluation of the exact magnitude\
    \ of the threat, and any possible\n   countermeasures, is left to each application\
    \ protocol (see BCP 72\n   [RFC3552] for best current practice guidance on security\
    \ threats and\n   defenses).\n   The language tag associated with a particular\
    \ information item is of\n   no consequence whatsoever in determining whether\
    \ that content might\n   contain possible homographs.  The fact that a text is\
    \ tagged as being\n   in one language or using a particular script subtag provides\
    \ no\n   assurance whatsoever that it does not contain characters from scripts\n\
    \   other than the one(s) associated with or specified by that language\n   tag.\n\
    \   Since there is no limit to the number of variant, private use, and\n   extension\
    \ subtags, and consequently no limit on the possible length\n   of a tag, implementations\
    \ need to guard against buffer overflow\n   attacks.  See Section 4.4 for details\
    \ on language tag truncation,\n   which can occur as a consequence of defenses\
    \ against buffer overflow.\n   To prevent denial-of-service attacks, applications\
    \ SHOULD NOT depend\n   on either the Language Subtag Registry or the Language\
    \ Tag Extensions\n   Registry being always accessible.  Additionally, although\
    \ the\n   specification of valid subtags for an extension (see Section 3.7)\n\
    \   MUST be available over the Internet, implementations SHOULD NOT\n   mechanically\
    \ depend on those sources being always accessible.\n   The registries specified\
    \ in this document are not suitable for\n   frequent or real-time access to, or\
    \ retrieval of, the full registry\n   contents.  Most applications do not need\
    \ registry data at all.  For\n   others, being able to validate or canonicalize\
    \ language tags as of a\n   particular registry date will be sufficient, as the\
    \ registry contents\n   change only occasionally.  Changes are announced to\n\
    \   <ietf-languages-announcements@iana.org>.  This mailing list is\n   intended\
    \ for interested organizations and individuals, not for bulk\n   subscription\
    \ to trigger automatic software updates.  The size of the\n   registry makes it\
    \ unsuitable for automatic software updates.\n   Implementers considering integrating\
    \ the Language Subtag Registry in\n   an automatic updating scheme are strongly\
    \ advised to distribute only\n   suitably encoded differences, and only via their\
    \ own infrastructure\n   -- not directly from IANA.\n   Changes, or the absence\
    \ thereof, can also easily be detected by\n   looking at the 'File-Date' record\
    \ at the start of the registry, or by\n   using features of the protocol used\
    \ for downloading, without having\n   to download the full registry.  At the time\
    \ of publication of this\n   document, IANA is making the Language Tag Registry\
    \ available over\n   HTTP 1.1.  The proper way to update a local copy of the Language\n\
    \   Subtag Registry using HTTP 1.1 is to use a conditional GET [RFC2616].\n"
- title: 7.  Character Set Considerations
  contents:
  - "7.  Character Set Considerations\n   The syntax in this document requires that\
    \ language tags use only the\n   characters A-Z, a-z, 0-9, and HYPHEN-MINUS, which\
    \ are present in most\n   character sets, so the composition of language tags\
    \ shouldn't have\n   any character set issues.\n   The rendering of text based\
    \ on the language tag is not addressed\n   here.  Historically, some processes\
    \ have relied on the use of\n   character set/encoding information (or other external\
    \ information) in\n   order to infer how a specific string of characters should\
    \ be\n   rendered.  Notably, this applies to language- and culture-specific\n\
    \   variations of Han ideographs as used in Japanese, Chinese, and\n   Korean,\
    \ where use of, for example, a Japanese character encoding such\n   as EUC-JP\
    \ implies that the text itself is in Japanese.  When language\n   tags are applied\
    \ to spans of text, rendering engines might be able to\n   use that information\
    \ to better select fonts or make other rendering\n   choices, particularly where\
    \ languages with distinct writing\n   traditions use the same characters.\n"
- title: 8.  Changes from RFC 4646
  contents:
  - "8.  Changes from RFC 4646\n   The main goal for this revision of RFC 4646 was\
    \ to incorporate two\n   new parts of ISO 639 (ISO 639-3 and ISO 639-5) and their\
    \ attendant\n   sets of language codes into the IANA Language Subtag Registry.\
    \  This\n   permits the identification of many more languages and language\n \
    \  collections than previously supported.\n   The specific changes in this document\
    \ to meet these goals are:\n   o  Defined the incorporation of ISO 639-3 and ISO\
    \ 639-5 codes for use\n      as primary and extended language subtags.  It also\
    \ permanently\n      reserves and disallows the use of additional 'extlang' subtags.\n\
    \      The changes necessary to achieve this were:\n      *  Modified the ABNF\
    \ comments.\n      *  Updated various registration and stability requirements\n\
    \         sections to reference ISO 639-3 and ISO 639-5 in addition to\n     \
    \    ISO 639-1 and ISO 639-2.\n      *  Edited the text to eliminate references\
    \ to extended language\n         subtags where they are no longer used.\n    \
    \  *  Explained the change in the section on extended language\n         subtags.\n\
    \   o  Changed the ABNF related to grandfathered tags.  The irregular\n      tags\
    \ are now listed.  Well-formed grandfathered tags are now\n      described by\
    \ the 'langtag' production, and the 'grandfathered'\n      production was removed\
    \ as a result.  Also: added description of\n      both types of grandfathered\
    \ tags to Section 2.2.8.\n   o  Added the paragraph on \"collections\" to Section\
    \ 4.1.\n   o  Changed the capitalization rules for 'Tag' fields in Section 3.1.\n\
    \   o  Split Section 3.1 up into subsections.\n   o  Modified Section 3.5 to allow\
    \ 'Suppress-Script' fields to be\n      added, modified, or removed via the registration\
    \ process.  This\n      was an erratum from RFC 4646.\n   o  Modified examples\
    \ that used region code 'CS' (formerly Serbia and\n      Montenegro) to use 'RS'\
    \ (Serbia) instead.\n   o  Modified the rules for creating and maintaining record\n\
    \      'Description' fields to prevent duplicates, including inverted\n      duplicates.\n\
    \   o  Removed the lengthy description of why RFC 4646 was created from\n    \
    \  this section, which also caused the removal of the reference to\n      XML\
    \ Schema.\n   o  Modified the text in Section 2.1 to place more emphasis on the\n\
    \      fact that language tags are not case sensitive.\n   o  Replaced the example\
    \ \"fr-Latn-CA\" in Section 2.1 with \"sr-Latn-RS\"\n      and \"az-Arab-IR\"\
    \ because \"fr-Latn-CA\" doesn't respect the\n      'Suppress-Script' on 'Latn'\
    \ with 'fr'.\n   o  Changed the requirements for well-formedness to make singleton\n\
    \      repetition checking optional (it is required for validity\n      checking)\
    \ in Section 2.2.9.\n   o  Changed the text in Section 2.2.9 referring to grandfathered\n\
    \      checking to note that the list is now included in the ABNF.\n   o  Modified\
    \ and added text to Section 3.2.  The job description was\n      placed first.\
    \  A note was added making clear that the Language\n      Subtag Reviewer may\
    \ delegate various non-critical duties,\n      including list moderation.  Finally,\
    \ additional text was added to\n      make the appointment process clear and to\
    \ clarify that decisions\n      and performance of the reviewer are appealable.\n\
    \   o  Added text to Section 3.5 clarifying that the\n      ietf-languages@iana.org\
    \ list is operated by whomever the IESG\n      appoints.\n   o  Added text to\
    \ Section 3.1.5 clarifying that the first Description\n      in a 'language' record\
    \ matches the corresponding Reference Name\n      for the language in ISO 639-3.\n\
    \   o  Modified Section 2.2.9 to define classes of conformance related to\n  \
    \    specific tags (formerly 'well-formed' and 'valid' referred to\n      implementations).\
    \  Notes were added about the removal of 'extlang'\n      from the ABNF provided\
    \ in RFC 4646, allowing for well-formedness\n      using this older definition.\
    \  Reference to RFC 3066 well-\n      formedness was also added.\n   o  Added\
    \ text to the end of Section 3.1.2 noting that future versions\n      of this\
    \ document might add new field types to the registry format\n      and recommending\
    \ that implementations ignore any unrecognized\n      fields.\n   o  Added text\
    \ about what the lack of a 'Suppress-Script' field means\n      in a record to\
    \ Section 3.1.9.\n   o  Added text allowing the correction of misspellings and\
    \ typographic\n      errors to Section 3.1.5.\n   o  Added text to Section 3.1.8\
    \ disallowing 'Prefix' field conflicts\n      (such as circular prefix references).\n\
    \   o  Modified text in Section 3.5 to require the subtag reviewer to\n      announce\
    \ his/her decision (or extension) following the two-week\n      period.  Also\
    \ clarified that any decision or failure to decide can\n      be appealed.\n \
    \  o  Modified text in Section 4.1 to include the (heretofore anecdotal)\n   \
    \   guiding principle of tag choice, and clarifying the non-use of\n      script\
    \ subtags in non-written applications.\n   o  Prohibited multiple use of the same\
    \ variant in a tag (i.e., \"de-\n      1901-1901\").  Previously, this was only\
    \ a recommendation\n      (\"SHOULD\").\n   o  Removed inappropriate [RFC2119]\
    \ language from the illustration in\n      Section 4.4.1.\n   o  Replaced the\
    \ example of deprecating \"zh-guoyu\" with \"zh-\n      hakka\"->\"hak\" in Section\
    \ 4.5, noting that it was this document\n      that caused the change.\n   o \
    \ Replaced the section in Section 4.1 dealing with \"mul\"/\"und\" to\n      include\
    \ the subtags 'zxx' and 'mis', as well as the tag\n      \"i-default\".  A normative\
    \ reference to RFC 2277 was added.\n   o  Added text to Section 3.5 clarifying\
    \ that any modifications of a\n      registration request must be sent to the\
    \ <ietf-languages@iana.org>\n      list before submission to IANA.\n   o  Changed\
    \ the ABNF for the record-jar format from using the LWSP\n      production to\
    \ use a folding whitespace production similar to obs-\n      FWS in [RFC5234].\
    \  This effectively prevents unintentional blank\n      lines inside a field.\n\
    \   o  Clarified and revised text in Sections 3.3, 3.5, and 5.1 to\n      clarify\
    \ that the Language Subtag Reviewer sends the complete\n      registration forms\
    \ to IANA, that IANA extracts the record from the\n      form, and that the forms\
    \ must also be archived separately from the\n      registry.\n   o  Added text\
    \ to Section 5 requiring IANA to send an announcement to\n      an ietf-languages-announcements\
    \ list whenever the registry is\n      updated.\n   o  Modification of the registry\
    \ to use UTF-8 as its character\n      encoding.  This also entails additional\
    \ instructions to IANA and\n      the Language Subtag Reviewer in the registration\
    \ process.\n   o  Modified the rules in Section 2.2.4 so that \"exceptionally\n\
    \      reserved\" ISO 3166-1 codes other than 'UK' were included into the\n  \
    \    registry.  In particular, this allows the code 'EU' (European\n      Union)\
    \ to be used to form language tags or (more commonly) for\n      applications\
    \ that use the registry for region codes to reference\n      this subtag.\n  \
    \ o  Modified the IANA considerations section (Section 5) to remove\n      unnecessary\
    \ normative [RFC2119] language.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [ISO15924]       International Organization for\
    \ Standardization, \"ISO\n                    15924:2004.  Information and documentation\
    \ -- Codes\n                    for the representation of names of scripts\",\n\
    \                    January 2004.\n   [ISO3166-1]      International Organization\
    \ for Standardization, \"ISO\n                    3166-1:2006.  Codes for the\
    \ representation of names\n                    of countries and their subdivisions\
    \ -- Part 1:\n                    Country codes\", November 2006.\n   [ISO639-1]\
    \       International Organization for Standardization, \"ISO\n              \
    \      639-1:2002.  Codes for the representation of names\n                  \
    \  of languages -- Part 1: Alpha-2 code\", July 2002.\n   [ISO639-2]       International\
    \ Organization for Standardization, \"ISO\n                    639-2:1998.  Codes\
    \ for the representation of names\n                    of languages -- Part 2:\
    \ Alpha-3 code\", October 1998.\n   [ISO639-3]       International Organization\
    \ for Standardization, \"ISO\n                    639-3:2007.  Codes for the representation\
    \ of names\n                    of languages - Part 3: Alpha-3 code for\n    \
    \                comprehensive coverage of languages\", February 2007.\n   [ISO639-5]\
    \       International Organization for Standardization, \"ISO\n              \
    \      639-5:2008. Codes for the representation of names of\n                \
    \    languages -- Part 5: Alpha-3 code for language\n                    families\
    \ and groups\", May 2008.\n   [ISO646]         International Organization for\
    \ Standardization,\n                    \"ISO/IEC 646:1991, Information technology\
    \ -- ISO\n                    7-bit coded character set for information\n    \
    \                interchange.\", 1991.\n   [RFC2026]        Bradner, S., \"The\
    \ Internet Standards Process --\n                    Revision 3\", BCP 9, RFC\
    \ 2026, October 1996.\n   [RFC2119]        Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n                    Requirement Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n   [RFC2277]        Alvestrand, H., \"IETF Policy on Character\
    \ Sets and\n                    Languages\", BCP 18, RFC 2277, January 1998.\n\
    \   [RFC3339]        Klyne, G., Ed. and C. Newman, \"Date and Time on the\n  \
    \                  Internet: Timestamps\", RFC 3339, July 2002.\n   [RFC4647]\
    \        Phillips, A. and M. Davis, \"Matching of Language\n                 \
    \   Tags\", BCP 47, RFC 4647, September 2006.\n   [RFC5226]        Narten, T.\
    \ and H. Alvestrand, \"Guidelines for\n                    Writing an IANA Considerations\
    \ Section in RFCs\",\n                    BCP 26, RFC 5226, May 2008.\n   [RFC5234]\
    \        Crocker, D. and P. Overell, \"Augmented BNF for\n                   \
    \ Syntax Specifications: ABNF\", STD 68, RFC 5234,\n                    January\
    \ 2008.\n   [SpecialCasing]  The Unicode Consoritum, \"Unicode Character Database,\n\
    \                    Special Casing Properties\", March 2008, <http://\n     \
    \               unicode.org/Public/UNIDATA/SpecialCasing.txt>.\n   [UAX14]   \
    \       Freitag, A., \"Unicode Standard Annex #14: Line\n                    Breaking\
    \ Properties\", August 2006,\n                    <http://www.unicode.org/reports/tr14/>.\n\
    \   [UN_M.49]        Statistics Division, United Nations, \"Standard\n       \
    \             Country or Area Codes for Statistical Use\", Revision\n        \
    \            4 (United Nations publication, Sales No. 98.XVII.9,\n           \
    \         June 1999.\n   [Unicode]        Unicode Consortium, \"The Unicode Consortium.\
    \ The\n                    Unicode Standard, Version 5.0, (Boston, MA, Addison-\n\
    \                    Wesley, 2003. ISBN 0-321-49081-0)\", January 2007.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [CLDR]           \"The Common Locale Data Repository\
    \ Project\",\n                    <http://cldr.unicode.org>.\n   [RFC1766]   \
    \     Alvestrand, H., \"Tags for the Identification of\n                    Languages\"\
    , RFC 1766, March 1995.\n   [RFC2028]        Hovey, R. and S. Bradner, \"The Organizations\n\
    \                    Involved in the IETF Standards Process\", BCP 11,\n     \
    \               RFC 2028, October 1996.\n   [RFC2046]        Freed, N. and N.\
    \ Borenstein, \"Multipurpose Internet\n                    Mail Extensions (MIME)\
    \ Part Two: Media Types\",\n                    RFC 2046, November 1996.\n   [RFC2047]\
    \        Moore, K., \"MIME (Multipurpose Internet Mail\n                    Extensions)\
    \ Part Three: Message Header Extensions\n                    for Non-ASCII Text\"\
    , RFC 2047, November 1996.\n   [RFC2231]        Freed, N. and K. Moore, \"MIME\
    \ Parameter Value and\n                    Encoded Word Extensions:\n        \
    \            Character Sets, Languages, and Continuations\",\n               \
    \     RFC 2231, November 1997.\n   [RFC2616]        Fielding, R., Gettys, J.,\
    \ Mogul, J., Frystyk, H.,\n                    Masinter, L., Leach, P., and T.\
    \ Berners-Lee,\n                    \"Hypertext Transfer Protocol -- HTTP/1.1\"\
    , RFC 2616,\n                    June 1999.\n   [RFC2781]        Hoffman, P. and\
    \ F. Yergeau, \"UTF-16, an encoding of\n                    ISO 10646\", RFC 2781,\
    \ February 2000.\n   [RFC3066]        Alvestrand, H., \"Tags for the Identification\
    \ of\n                    Languages\", RFC 3066, January 2001.\n   [RFC3282] \
    \       Alvestrand, H., \"Content Language Headers\",\n                    RFC\
    \ 3282, May 2002.\n   [RFC3552]        Rescorla, E. and B. Korver, \"Guidelines\
    \ for Writing\n                    RFC Text on Security Considerations\", BCP\
    \ 72,\n                    RFC 3552, July 2003.\n   [RFC3629]        Yergeau,\
    \ F., \"UTF-8, a transformation format of ISO\n                    10646\", STD\
    \ 63, RFC 3629, November 2003.\n   [RFC4645]        Ewell, D., \"Initial Language\
    \ Subtag Registry\",\n                    RFC 4645, September 2006.\n   [RFC4646]\
    \        Phillips, A. and M. Davis, \"Tags for Identifying\n                 \
    \   Languages\", BCP 47, RFC 4646, September 2006.\n   [RFC5645]        Ewell,\
    \ D., Ed., \"Update to the Language Subtag\n                    Registry\", September\
    \ 2009.\n   [UTS35]          Davis, M., \"Unicode Technical Standard #35: Locale\n\
    \                    Data Markup Language (LDML)\", December 2007,\n         \
    \           <http://www.unicode.org/reports/tr35/>.\n   [iso639.prin]    ISO 639\
    \ Joint Advisory Committee, \"ISO 639 Joint\n                    Advisory Committee:\
    \  Working principles for ISO 639\n                    maintenance\", March 2000,\
    \ <http://www.loc.gov/\n                    standards/iso639-2/iso639jac_n3r.html>.\n\
    \   [record-jar]     Raymond, E., \"The Art of Unix Programming\", 2003,\n   \
    \                 <urn:isbn:0-13-142901-9>.\n"
- title: Appendix A.  Examples of Language Tags (Informative)
  contents:
  - "Appendix A.  Examples of Language Tags (Informative)\n   Simple language subtag:\n\
    \      de (German)\n      fr (French)\n      ja (Japanese)\n      i-enochian (example\
    \ of a grandfathered tag)\n   Language subtag plus Script subtag:\n      zh-Hant\
    \ (Chinese written using the Traditional Chinese script)\n      zh-Hans (Chinese\
    \ written using the Simplified Chinese script)\n      sr-Cyrl (Serbian written\
    \ using the Cyrillic script)\n      sr-Latn (Serbian written using the Latin script)\n\
    \   Extended language subtags and their primary language subtag\n   counterparts:\n\
    \      zh-cmn-Hans-CN (Chinese, Mandarin, Simplified script, as used in\n    \
    \  China)\n      cmn-Hans-CN (Mandarin Chinese, Simplified script, as used in\n\
    \      China)\n      zh-yue-HK (Chinese, Cantonese, as used in Hong Kong SAR)\n\
    \      yue-HK (Cantonese Chinese, as used in Hong Kong SAR)\n   Language-Script-Region:\n\
    \      zh-Hans-CN (Chinese written using the Simplified script as used in\n  \
    \    mainland China)\n      sr-Latn-RS (Serbian written using the Latin script\
    \ as used in\n      Serbia)\n   Language-Variant:\n      sl-rozaj (Resian dialect\
    \ of Slovenian)\n      sl-rozaj-biske (San Giorgio dialect of Resian dialect of\n\
    \      Slovenian)\n      sl-nedis (Nadiza dialect of Slovenian)\n   Language-Region-Variant:\n\
    \      de-CH-1901 (German as used in Switzerland using the 1901 variant\n    \
    \  [orthography])\n      sl-IT-nedis (Slovenian as used in Italy, Nadiza dialect)\n\
    \   Language-Script-Region-Variant:\n      hy-Latn-IT-arevela (Eastern Armenian\
    \ written in Latin script, as\n      used in Italy)\n   Language-Region:\n   \
    \   de-DE (German for Germany)\n      en-US (English as used in the United States)\n\
    \      es-419 (Spanish appropriate for the Latin America and Caribbean\n     \
    \ region using the UN region code)\n   Private use subtags:\n      de-CH-x-phonebk\n\
    \      az-Arab-x-AZE-derbend\n   Private use registry values:\n      x-whatever\
    \ (private use using the singleton 'x')\n      qaa-Qaaa-QM-x-southern (all private\
    \ tags)\n      de-Qaaa (German, with a private script)\n      sr-Latn-QM (Serbian,\
    \ Latin script, private region)\n      sr-Qaaa-RS (Serbian, private script, for\
    \ Serbia)\n   Tags that use extensions (examples ONLY -- extensions MUST be defined\n\
    \   by revision or update to this document, or by RFC):\n      en-US-u-islamcal\n\
    \      zh-CN-a-myext-x-private\n      en-a-myext-b-another\n   Some Invalid Tags:\n\
    \      de-419-DE (two region tags)\n      a-DE (use of a single-character subtag\
    \ in primary position; note\n      that there are a few grandfathered tags that\
    \ start with \"i-\" that\n      are valid)\n      ar-a-aaa-b-bbb-a-ccc (two extensions\
    \ with same single-letter\n      prefix)\n"
- title: Appendix B.  Examples of Registration Forms
  contents:
  - "Appendix B.  Examples of Registration Forms\n   LANGUAGE SUBTAG REGISTRATION\
    \ FORM\n   1. Name of requester: Han Steenwijk\n   2. E-mail address of requester:\
    \ han.steenwijk @ unipd.it\n   3. Record Requested:\n   Type:        variant\n\
    \   Subtag:      biske\n   Description: The San Giorgio dialect of Resian\n  \
    \ Description: The Bila dialect of Resian\n   Prefix:      sl-rozaj\n   Comments:\
    \    The dialect of San Giorgio/Bila is one of the\n      four major local dialects\
    \ of Resian\n   4. Intended meaning of the subtag:\n   The local variety of Resian\
    \ as spoken in San Giorgio/Bila\n   5. Reference to published description of the\
    \ language (book or\n   article):\n    -- Jan I.N. Baudouin de Courtenay - Opyt\
    \ fonetiki rez'janskich\n   govorov, Varsava - Peterburg: Vende - Kozancikov,\
    \ 1875.\n   LANGUAGE SUBTAG REGISTRATION FORM\n   1. Name of requester: Jaska\
    \ Zedlik\n   2. E-mail address of requester: jz53 @ zedlik.com\n   3. Record Requested:\n\
    \   Type:   variant\n   Subtag: tarask\n   Description: Belarusian in Taraskievica\
    \ orthography\n   Prefix: be\n   Comments: The subtag represents Branislau Taraskievic's\
    \ Belarusian\n     orthography as published in \"Bielaruski klasycny pravapis\"\
    \ by\n     Juras Buslakou, Vincuk Viacorka, Zmicier Sanko, and Zmicier Sauka\n\
    \     (Vilnia-Miensk 2005).\n   4. Intended meaning of the subtag:\n   The subtag\
    \ is intended to represent the Belarusian orthography as\n   published in \"Bielaruski\
    \ klasycny pravapis\" by Juras Buslakou, Vincuk\n   Viacorka, Zmicier Sanko, and\
    \ Zmicier Sauka (Vilnia-Miensk 2005).\n   5. Reference to published description\
    \ of the language (book or\n   article):\n   Taraskievic, Branislau. Bielaruskaja\
    \ gramatyka dla skol. Vilnia: Vyd.\n   \"Bielaruskaha kamitetu\", 1929, 5th edition.\n\
    \   Buslakou, Juras; Viacorka, Vincuk; Sanko, Zmicier; Sauka, Zmicier.\n   Bielaruski\
    \ klasycny pravapis. Vilnia-Miensk, 2005.\n   6. Any other relevant information:\n\
    \   Belarusian in Taraskievica orthography became widely used, especially\n  \
    \ in Belarusian-speaking Internet segment, but besides this some books\n   and\
    \ newspapers are also printed using this orthography of Belarusian.\n"
- title: Appendix C.  Acknowledgements
  contents:
  - "Appendix C.  Acknowledgements\n   Any list of contributors is bound to be incomplete;\
    \ please regard the\n   following as only a selection from the group of people\
    \ who have\n   contributed to make this document what it is today.\n   The contributors\
    \ to RFC 4646, RFC 4647, RFC 3066, and RFC 1766, the\n   precursors of this document,\
    \ made enormous contributions directly or\n   indirectly to this document and\
    \ are generally responsible for the\n   success of language tags.\n   The following\
    \ people contributed to this document:\n   Stephane Bortzmeyer, Karen Broome,\
    \ Peter Constable, John Cowan,\n   Martin Duerst, Frank Ellerman, Doug Ewell,\
    \ Deborah Garside, Marion\n   Gunn, Alfred Hoenes, Kent Karlsson, Chris Newman,\
    \ Randy Presuhn,\n   Stephen Silver, Shawn Steele, and many, many others.\n  \
    \ Very special thanks must go to Harald Tveit Alvestrand, who\n   originated RFCs\
    \ 1766 and 3066, and without whom this document would\n   not have been possible.\n\
    \   Special thanks go to Michael Everson, who served as the Language Tag\n   Reviewer\
    \ for almost the entire RFC 1766/RFC 3066 period, as well as\n   the Language\
    \ Subtag Reviewer since the adoption of RFC 4646.\n   Special thanks also go to\
    \ Doug Ewell, for his production of the first\n   complete subtag registry, his\
    \ work to support and maintain new\n   registrations, and his careful editorship\
    \ of both RFC 4645 and\n   [RFC5645].\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Addison Phillips (editor)\n   Lab126\n   EMail: addison@inter-locale.com\n\
    \   URI:   http://www.inter-locale.com\n   Mark Davis (editor)\n   Google\n  \
    \ EMail: markdavis@google.com\n"
