- title: __initial_text__
  contents:
  - '                   Privacy Considerations for DHCPv6

    '
- title: Abstract
  contents:
  - "Abstract\n   DHCPv6 is a protocol that is used to provide addressing and\n  \
    \ configuration information to IPv6 hosts.  This document describes the\n   privacy\
    \ issues associated with the use of DHCPv6 by Internet users.\n   It is intended\
    \ to be an analysis of the present situation and does\n   not propose any solutions.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7824.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \   2. Terminology .....................................................4\n  \
    \ 3. Identifiers in DHCPv6 Options and Fields ........................5\n    \
    \  3.1. Source IPv6 Address ........................................5\n      3.2.\
    \ DUID .......................................................5\n      3.3. Client\
    \ Identifier Option ...................................6\n      3.4. IA_NA, IA_TA,\
    \ IA_PD, IA Address, and IA Prefix Options .....6\n      3.5. Client FQDN Option\
    \ .........................................6\n      3.6. Client Link-Layer Address\
    \ Option ...........................7\n      3.7. Option Request Option ......................................7\n\
    \      3.8. Vendor Class and Vendor-Specific Information Options .......7\n  \
    \    3.9. Civic Location Option ......................................8\n    \
    \  3.10. Coordinate-Based Location Option ..........................8\n      3.11.\
    \ Client System Architecture Type Option ....................8\n      3.12. Relay\
    \ Agent Options .......................................8\n           3.12.1. Subscriber-ID\
    \ Option ...............................9\n           3.12.2. Interface ID Option\
    \ ................................9\n           3.12.3. Remote ID Option ...................................9\n\
    \           3.12.4. Relay-ID Option ....................................9\n  \
    \ 4. Existing Mechanisms That Affect Privacy ........................10\n    \
    \  4.1. Temporary Addresses .......................................10\n      4.2.\
    \ DNS Updates ...............................................10\n      4.3. Allocation\
    \ Strategies .....................................10\n   5. Attacks ........................................................12\n\
    \      5.1. Device Type Discovery (Fingerprinting) ....................12\n  \
    \    5.2. Operating System Discovery (Fingerprinting) ...............12\n    \
    \  5.3. Finding Location Information ..............................12\n      5.4.\
    \ Finding Previously Visited Networks .......................13\n      5.5. Finding\
    \ a Stable Identity .................................13\n      5.6. Pervasive\
    \ Monitoring ......................................13\n      5.7. Finding a Client's\
    \ IP Address or Hostname .................14\n      5.8. Correlation of Activities\
    \ over Time .......................14\n      5.9. Location Tracking .........................................14\n\
    \      5.10. Leasequery and Bulk Leasequery ...........................15\n  \
    \ 6. Security Considerations ........................................15\n   7.\
    \ Privacy Considerations .........................................15\n   8. References\
    \ .....................................................16\n      8.1. Normative\
    \ References ......................................16\n      8.2. Informative\
    \ References ....................................16\n   Acknowledgements ..................................................18\n\
    \   Authors' Addresses ................................................18\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   DHCPv6 [RFC3315] is a protocol that is used to provide addressing\
    \ and\n   configuration information to IPv6 hosts.  DHCPv6 uses several\n   identifiers\
    \ that could become a source for gleaning information about\n   the IPv6 host.\
    \  This information may include device type, operating\n   system information,\
    \ location(s) that the device may have previously\n   visited, etc.  This document\
    \ discusses the various identifiers used\n   by DHCPv6 and the potential privacy\
    \ issues [RFC6973].  In particular,\n   it also takes into consideration the problem\
    \ of pervasive monitoring\n   [RFC7258].\n   Future works may propose protocol\
    \ changes to fix the privacy issues\n   that have been analyzed in this document.\
    \  See [RFC7844] for one of\n   such changes.  Protocol changes are out of scope\
    \ for this document.\n   The primary focus of this document is around privacy\
    \ considerations\n   for clients to support client mobility and connection to\
    \ random\n   networks.  The privacy of DHCPv6 servers and relay agents are\n \
    \  considered less important as they are typically open for public\n   services.\
    \  And, it is generally assumed that communication from the\n   relay agent to\
    \ the server is protected from casual snooping, as that\n   communication occurs\
    \ in the provider's backbone.  Nevertheless, the\n   topics involving relay agents\
    \ and servers are explored to some\n   degree.  However, future work may want\
    \ to further explore privacy of\n   DHCPv6 servers and relay agents.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   Naming conventions from [RFC3315] and other DHCPv6-related\
    \ RFCs are\n   used throughout this document.  In addition, the following term\
    \ is\n   used:\n   Stable identifier:  Any property disclosed by a DHCPv6 client\
    \ that\n           does not change over time or changes very infrequently and\
    \ is\n           unique for said client in a given context.  Examples include\n\
    \           Media Access Control (MAC) address, client-id, and a\n           hostname.\
    \  Some identifiers may be considered stable only\n           under certain conditions;\
    \ for example, one client\n           implementation may keep its client-id stored\
    \ in stable\n           storage whereas another may generate it on the fly and\
    \ use a\n           different one after each boot.  Stable identifiers may or\
    \ may\n           not be globally unique.\n"
- title: 3.  Identifiers in DHCPv6 Options and Fields
  contents:
  - "3.  Identifiers in DHCPv6 Options and Fields\n   In DHCPv6, there are many options\
    \ that include identification\n   information or that can be used to extract identification\
    \ information\n   about the client.  This section enumerates various options or\
    \ fields\n   and the identifiers conveyed in them, which can be used to disclose\n\
    \   client identification.  The attacks that are enabled by such\n   disclosures\
    \ are detailed in Section 5.\n"
- title: 3.1.  Source IPv6 Address
  contents:
  - "3.1.  Source IPv6 Address\n   Although an IPv6 link-local address is technically\
    \ not a part of\n   DHCPv6, it appears in the DHCPv6 transmissions, so it is mentioned\n\
    \   here for completeness.\n   If the client does not use privacy extensions (see\
    \ [RFC4941]) or\n   similar solutions and its IPv6 link-local address is based\
    \ on a\n   physical link-layer address, this information is disclosed to the\n\
    \   DHCPv6 server and to anyone who manages to intercept this\n   transmission.\n\
    \   There are multiple cases where IPv6 link-local addresses are used in\n   DHCPv6.\
    \  Initial client transmissions are always sent from the IPv6\n   link-local addresses\
    \ even when the server unicast option (see\n   Sections 22.12 and 18 of [RFC3315]\
    \ for details) is enabled.  If there\n   are relay agents, they forward the client's\
    \ traffic wrapped in Relay-\n   forward and store original source IPv6 address\
    \ in peer-address field.\n"
- title: 3.2.  DUID
  contents:
  - "3.2.  DUID\n   Each DHCPv6 client and server has a DHCP Unique Identifier (DUID)\n\
    \   [RFC3315].  The DUID is designed to be unique across all DHCPv6\n   clients\
    \ and servers and to remain stable after it has been initially\n   generated.\
    \  The DUID can be of different forms.  Commonly used forms\n   are based on the\
    \ link-layer address of one of the device's network\n   interfaces (with or without\
    \ a timestamp) [RFC3315], or on the\n   Universally Unique IDentifier (UUID) [RFC6355].\
    \  The default type,\n   defined in Section 9.2 of [RFC3315] is DUID-LLT that\
    \ is based on\n   link-layer address.  It is commonly implemented in most popular\n\
    \   clients.\n   It is important to understand DUID life cycle.  Clients and servers\n\
    \   are expected to generate their DUID once (during first operation) and\n  \
    \ store it in a non-volatile storage or use the same deterministic\n   algorithm\
    \ to generate the same DUID value again.  This means that\n   most implementations\
    \ will use the available link-layer address during\n   their first boot.  Even\
    \ if the administrator enables link-layer\n   address randomization, it is likely\
    \ that it was not yet enabled\n   during the first device boot.  Hence, the original,\
    \ unobfuscated\n   link-layer address will likely end up being announced as the\
    \ client\n   DUID, even if the link-layer address has changed (or even if being\n\
    \   changed on a periodic basis).  The exposure of the original link-\n   layer\
    \ address in DUID will also undermine other privacy extensions\n   such as [RFC4941].\n"
- title: 3.3.  Client Identifier Option
  contents:
  - "3.3.  Client Identifier Option\n   The Client Identifier option (OPTION_CLIENTID)\
    \ [RFC3315] is used to\n   carry the DUID of a DHCPv6 client between a client\
    \ and a server.\n   There is an analogous Server Identifier Option, but it is\
    \ not as\n   interesting in the privacy context (unless a host can be convinced\
    \ to\n   start acting as a server).  See Section 3.2 for relevant discussion\n\
    \   about DUIDs.\n"
- title: 3.4.  IA_NA, IA_TA, IA_PD, IA Address, and IA Prefix Options
  contents:
  - "3.4.  IA_NA, IA_TA, IA_PD, IA Address, and IA Prefix Options\n   The Identity\
    \ Association for Non-temporary Addresses (IA_NA) option\n   [RFC3315] is used\
    \ to carry the parameters and any non-temporary\n   addresses associated with\
    \ the given IA_NA.  The Identity Association\n   for Temporary Addresses (IA_TA)\
    \ option [RFC3315] is analogous to the\n   IA_NA option but is used for temporary\
    \ addresses.  The IA Address\n   option [RFC3315] is used to specify IPv6 addresses\
    \ associated with an\n   IA_NA or an IA_TA and is encapsulated within the Options\
    \ field of\n   such an IA_NA or IA_TA option.  The Identity Association for Prefix\n\
    \   Delegation (IA_PD) [RFC3633] option is used to carry the prefixes\n   that\
    \ are assigned to the requesting router.  IA Prefix option\n   [RFC3633] is used\
    \ to specify IPv6 prefixes associated with an IA_PD\n   and is encapsulated within\
    \ the Options field of such an IA_PD option.\n   To differentiate between instances\
    \ of the same type of IA containers\n   for a client, each IA_NA, IA_TA, and IA_PD\
    \ options have an IAID field\n   with a unique value for a given IA type.  It\
    \ is up to the client to\n   pick unique IAID values.  At least one popular implementation\
    \ uses\n   the last four octets of the link-layer address.  In most cases, that\n\
    \   means that merely two bytes are missing for a full link-layer address\n  \
    \ reconstruction.  However, the first three octets in a typical link-\n   layer\
    \ address are vendor identifiers.  That can be determined with a\n   high level\
    \ of certainty using other means, thus allowing full link-\n   layer address discovery.\n"
- title: 3.5.  Client FQDN Option
  contents:
  - "3.5.  Client FQDN Option\n   The Client Fully Qualified Domain Name (FQDN) option\
    \ [RFC4704] is\n   used by DHCPv6 clients and servers to exchange information\
    \ about the\n   client's FQDN and about who has the responsibility for updating\
    \ the\n   DNS with the associated AAAA and PTR RRs.\n   A client can use this\
    \ option to convey all or part of its domain name\n   to a DHCPv6 server for the\
    \ IPv6-address-to-FQDN mapping.  In most\n   cases, a client sends its hostname\
    \ as a hint for the server.  The\n   DHCPv6 server may be configured to modify\
    \ the supplied name or to\n   substitute a different name.  The server should\
    \ send its notion of\n   the complete FQDN for the client in the Domain Name field.\n"
- title: 3.6.  Client Link-Layer Address Option
  contents:
  - "3.6.  Client Link-Layer Address Option\n   The client link-layer address option\
    \ [RFC6939] is used by first-hop\n   DHCPv6 relays to provide the client's link-layer\
    \ address towards the\n   server.\n   DHCPv6 relay agents that receive messages\
    \ originating from clients\n   may include the link-layer source address of the\
    \ received DHCPv6\n   message in the client link-layer address option, in relayed\
    \ DHCPv6\n   Relay-forward messages.\n"
- title: 3.7.  Option Request Option
  contents:
  - "3.7.  Option Request Option\n   DHCPv6 clients include an Option Request option\
    \ [RFC3315] in DHCPv6\n   messages to inform the server about options the client\
    \ wants the\n   server to send to the client.\n   The contents of an Option Request\
    \ option are the option codes for\n   options requested by the client.  The client\
    \ may additionally include\n   instances of those options that are identified\
    \ in the Option Request\n   option, with data values as hints to the server about\
    \ parameter\n   values the client would like to have returned.\n"
- title: 3.8.  Vendor Class and Vendor-Specific Information Options
  contents:
  - "3.8.  Vendor Class and Vendor-Specific Information Options\n   The Vendor Class\
    \ option, defined in Section 22.16 of [RFC3315], is\n   used by a DHCPv6 client\
    \ to identify the vendor that manufactured the\n   hardware on which the client\
    \ is running.\n   The Vendor-specific information option, defined in Section 22.17\
    \ of\n   [RFC3315], includes enterprise number, which identifies the client's\n\
    \   vendor and often includes a number of additional parameters that are\n   specific\
    \ to a given vendor.  That may include any type of information\n   the vendor\
    \ deems useful.  It should be noted that this information\n   may be present (and\
    \ different) in both directions: client-to-server\n   and server-to-client communications.\n\
    \   The information contained in the data area of this option is\n   contained\
    \ in one or more opaque fields that identify details of the\n   hardware configuration,\
    \ for example, the version of the operating\n   system the client is running or\
    \ the amount of memory installed on the\n   client.\n"
- title: 3.9.  Civic Location Option
  contents:
  - "3.9.  Civic Location Option\n   DHCPv6 servers use the Civic Location option\
    \ [RFC4776] to deliver\n   location information (the civic and postal addresses)\
    \ from the DHCPv6\n   server to DHCPv6 clients.  It may refer to three locations:\
    \ the\n   location of the DHCPv6 server, the location of the network element\n\
    \   believed to be closest to the client, or the location of the client,\n   identified\
    \ by the \"what\" element within the option.\n"
- title: 3.10.  Coordinate-Based Location Option
  contents:
  - "3.10.  Coordinate-Based Location Option\n   The GeoLoc options [RFC6225] are\
    \ used by the DHCPv6 server to provide\n   coordinate-based geographic location\
    \ information to DHCPv6 clients.\n   They enable a DHCPv6 client to obtain its\
    \ location.\n"
- title: 3.11.  Client System Architecture Type Option
  contents:
  - "3.11.  Client System Architecture Type Option\n   The Client System Architecture\
    \ Type option [RFC5970] is used by the\n   DHCPv6 client to send a list of supported\
    \ architecture types to the\n   DHCPv6 server.  It is used by clients that must\
    \ be booted using the\n   network rather than from local storage, so the server\
    \ can decide\n   which boot file should be provided to the client.\n"
- title: 3.12.  Relay Agent Options
  contents:
  - "3.12.  Relay Agent Options\n   A DHCPv6 relay agent may include a number of options.\
    \  Those options\n   contain information that can be used to identify the client.\
    \  Those\n   options are almost exclusively exchanged between the relay agent\
    \ and\n   the server, thus never leaving the operators network.  In particular,\n\
    \   they're almost never present in the last wireless hop in case of WiFi\n  \
    \ networks.  The only exception to that rule is somewhat infrequently\n   used\
    \ Relay-Supplied Options option [RFC6422].  This fact implies that\n   the threat-model-related\
    \ relay options are slightly different.\n   Traffic sniffing at the last hop and\
    \ related class of attacks\n   typically do not apply.  On the other hand, all\
    \ attacks that involve\n   the operator's infrastructure (either willing or coerced\
    \ cooperation\n   or infrastructure being compromised) usually apply.\n   The\
    \ following subsections describe various options inserted by the\n   relay agents.\n"
- title: 3.12.1.  Subscriber-ID Option
  contents:
  - "3.12.1.  Subscriber-ID Option\n   A DHCPv6 relay may include a Subscriber-ID\
    \ option [RFC4580] to\n   associate some provider-specific information with clients'\
    \ DHCPv6\n   messages that is independent of the physical network configuration.\n\
    \   In many deployments, the relay agent that inserts this option is\n   configured\
    \ to use client's link-layer address as Subscriber-ID.\n"
- title: 3.12.2.  Interface ID Option
  contents:
  - "3.12.2.  Interface ID Option\n   A DHCPv6 relay includes the Interface ID option\
    \ [RFC3315] to identify\n   the interface on which it received the client message\
    \ that is being\n   relayed.\n   Although, in principle, the Interface ID can\
    \ be arbitrarily long with\n   completely random values, it is sometimes a text\
    \ string that includes\n   the relay agent name followed by the interface name.\
    \  This can be\n   used for fingerprinting the relay or determining a client's\
    \ point of\n   attachment.\n"
- title: 3.12.3.  Remote ID Option
  contents:
  - "3.12.3.  Remote ID Option\n   A DHCPv6 relay includes a Remote ID option [RFC4649]\
    \ to identify the\n   remote host end of the circuit.\n   The remote-id is vendor\
    \ specific, for which the vendor is indicated\n   in the enterprise-number field.\
    \  The remote-id field may encode the\n   information that identified DHCPv6 clients:\n\
    \   o  a \"caller ID\" telephone number for dial-up connection\n   o  a \"user\
    \ name\" prompted for by a Remote Access Server\n   o  a remote caller ATM address\
    \ o a \"modem ID\" of a cable data modem\n   o  the remote IP address of a point-to-point\
    \ link\n   o  an interface or port identifier\n"
- title: 3.12.4.  Relay-ID Option
  contents:
  - "3.12.4.  Relay-ID Option\n   Relay agent may include Relay-ID option [RFC5460],\
    \ which contains a\n   unique relay agent identifier.  While its intended use\
    \ is to provide\n   additional information for the server, so it would be able\
    \ to respond\n   to leasequeries later, this information can be also used to identify\n\
    \   a client's location within the network.\n"
- title: 4.  Existing Mechanisms That Affect Privacy
  contents:
  - "4.  Existing Mechanisms That Affect Privacy\n   This section describes deployed\
    \ DHCPv6 mechanisms that can affect\n   privacy.\n"
- title: 4.1.  Temporary Addresses
  contents:
  - "4.1.  Temporary Addresses\n   [RFC3315] defines a mechanism for a client to request\
    \ temporary\n   addresses.  The idea behind temporary addresses is that a client\
    \ can\n   request a temporary address for a specific purpose, use it, and then\n\
    \   never renew it (i.e., let it expire).\n   There are a number of serious issues,\
    \ both related to protocol and\n   its implementations, that make temporary addresses\
    \ nearly useless for\n   their original goal.  First, [RFC3315] does not include\
    \ T1 and T2\n   renewal timers in IA_TA (a container for temporary addresses).\n\
    \   However, in Section 18.1.3, it explicitly mentions that temporary\n   addresses\
    \ can be renewed.  Client implementations may mistakenly\n   renew temporary addresses\
    \ if they are not careful (i.e., by including\n   the IA_TA with the same IAID\
    \ in Renew or Rebind requests, rather than\n   a new IAID -- see Section 22.5\
    \ of [RFC3315]), thus forfeiting short\n   liveness.  [RFC4704] does not explicitly\
    \ prohibit servers from\n   updating DNS for assigned temporary addresses, and\
    \ there are\n   implementations that can be configured to do that.  However, this\
    \ is\n   not advised as publishing a client's IPv6 address in DNS that is\n  \
    \ publicly available is a major privacy breach.\n"
- title: 4.2.  DNS Updates
  contents:
  - "4.2.  DNS Updates\n   The Client FQDN option [RFC4704] used along with DNS UPDATE\
    \ [RFC2136]\n   defines a mechanism that allows both clients and the server to\
    \ insert\n   information about clients into the DNS domain.  Both forward (AAAA)\n\
    \   and reverse (PTR) resource records can be updated.  This allows other\n  \
    \ nodes to conveniently refer to a host, despite the fact that its IPv6\n   address\
    \ may be changing.\n   This mechanism exposes two important pieces of information:\
    \ the\n   current address (which can be mapped to current location) and a\n  \
    \ client's hostname.  The stable hostname can then by used to correlate\n   the\
    \ client across different network attachments even when its IPv6\n   address keeps\
    \ changing.\n"
- title: 4.3.  Allocation Strategies
  contents:
  - "4.3.  Allocation Strategies\n   A DHCPv6 server running in typical, stateful\
    \ mode is given a task of\n   managing one or more pools of IPv6 resources (currently\
    \ non-temporary\n   addresses, temporary addresses and/or prefixes, but more resource\n\
    \   types may be defined in the future).  When a client requests a\n   resource,\
    \ the server must pick a resource out of the configured pool.\n   Depending on\
    \ the server's implementation, various allocation\n   strategies are possible.\
    \  Choices in this regard may have privacy\n   implications.\n   Iterative allocation:\
    \  a server may choose to allocate addresses one\n      by one.  That strategy\
    \ has the benefit of being very fast, thus\n      being favored in deployments\
    \ that prefer performance.  However, it\n      makes the resources very predictable.\
    \  Also, since the resources\n      allocated tend to be clustered at the beginning\
    \ of an available\n      pool, it makes scanning attacks much easier.\n   Identifier-based\
    \ allocation:  some server implementations use a fixed\n      identifier for a\
    \ specific client, seemingly taken from the\n      client's MAC address when available\
    \ or some lower bits of client's\n      source IPv6 address.  This has a property\
    \ of being convenient for\n      converting IP address to/from other identifiers,\
    \ especially if the\n      identifier is or contains a MAC address.  It is also\
    \ convenient,\n      as a returning client is very likely to get the same address,\
    \ even\n      if the server does not retain the client's previous address.\n \
    \     Those properties are convenient for system administrators, so\n      DHCPv6\
    \ server implementors are sometimes requested to implement\n      it.  There is\
    \ at least one implementation that supports it.  The\n      downside of such allocation\
    \ is that the client now discloses its\n      identifier in its IPv6 address to\
    \ all services to which it\n      connects.  That means that attacks related to\
    \ the correlation of\n      activities over time, location tracking, address scanning,\
    \ and OS/\n      vendor discovery apply.\n   Hash allocation:  an extension of\
    \ identifier-based allocation.\n      Instead of using the identifier directly,\
    \ it is hashed first.  If\n      the hash is implemented correctly, it removes\
    \ the flaw of\n      disclosing the identifier, a property that eliminates\n \
    \     susceptibility to address scanning and OS/vendor discovery.  If\n      the\
    \ hash is poorly implemented (e.g., can be reversed), it\n      introduces no\
    \ improvement over identifier-based allocation.  Even\n      a well-implemented\
    \ hash does not mitigate the threat of\n      correlation over time.\n   Random\
    \ allocation:  a server can pick a resource pseudorandomly out\n      of an available\
    \ pool.  This allocation scheme essentially prevents\n      returning clients\
    \ from getting the same address or prefix again.\n      On the other hand, it\
    \ is beneficial from a privacy perspective as\n      addresses and prefixes generated\
    \ that way are not susceptible to\n      correlation attacks, OS/vendor discovery\
    \ attacks, or identity\n      discovery attacks.  Note that even though the address\
    \ or prefix\n      itself may be resilient to a given attack, the client may still\
    \ be\n      susceptible if additional information is disclosed other way; for\n\
    \      example, the client's address may be randomized, but it still can\n   \
    \   leak its MAC address in the Client Identifier option.\n   Other allocation\
    \ strategies may be implemented.\n"
- title: 5.  Attacks
  contents:
  - '5.  Attacks

    '
- title: 5.1.  Device Type Discovery (Fingerprinting)
  contents:
  - "5.1.  Device Type Discovery (Fingerprinting)\n   The type of device used by the\
    \ client can be guessed by the attacker\n   using the Vendor Class option, Vendor-specific\
    \ information option,\n   the client link-layer address option, and by parsing\
    \ the Client\n   Identifier option.  All of those options may contain OUI\n  \
    \ (Organizationally Unique Identifier) that represents the device's\n   vendor.\
    \  That knowledge can be used for device-specific vulnerability\n   exploitation\
    \ attacks.  See Section 3.4 of [RFC7721] for a discussion\n   about this type\
    \ of attack.\n"
- title: 5.2.  Operating System Discovery (Fingerprinting)
  contents:
  - "5.2.  Operating System Discovery (Fingerprinting)\n   The operating system running\
    \ on a client can be guessed using the\n   Vendor Class option, the Vendor-specific\
    \ information option, the\n   Client System Architecture Type option, or by using\
    \ fingerprinting\n   techniques on the combination of options requested using\
    \ the Option\n   Request option.\n"
- title: 5.3.  Finding Location Information
  contents:
  - "5.3.  Finding Location Information\n   The physical location information can\
    \ be obtained by the attacker by\n   many means.  The most direct way to obtain\
    \ this information is by\n   looking into a message originating from the server\
    \ that contains the\n   Civic Location or GeoLoc options.  It can also be indirectly\
    \ inferred\n   using the Remote ID option, the Interface ID option (e.g., if an\n\
    \   access circuit on an Access Node corresponds to a civic location), or\n  \
    \ the Subscriber-ID option (if the attacker has access to subscriber\n   info).\n\
    \   Another way to discover a client's physical location is to use\n   geolocation\
    \ services.  Those services typically map IP prefixes into\n   geographical locations.\
    \  The services are usually based on known\n   locations of the subnet, so they\
    \ may reveal a client's location to\n   the extent of the network to which it\
    \ is connected, if they can\n   locate the network.  However, they usually are\
    \ not able to discover\n   specific physical location within a network.  That\
    \ is not always true\n   and it depends on the quality of the a priori information\
    \ available\n   in the geolocation services databases.  It should be noted that\
    \ this\n   threat is general to the DHCPv6 mechanism.  Regardless of the\n   allocation\
    \ strategy used by the DHCPv6 server implementation, the\n   addresses assigned\
    \ will always belong to the subnet the server is\n   configured to manage.  Cases\
    \ of using ULAs (Unique Local Addresses)\n   assigned by the DHCPv6 server are\
    \ out of scope for this document.\n"
- title: 5.4.  Finding Previously Visited Networks
  contents:
  - "5.4.  Finding Previously Visited Networks\n   When DHCPv6 clients reconnect to\
    \ a network, they attempt to obtain\n   the same address they used when they previously\
    \ attached to that\n   network.  They do this by putting the previously assigned\
    \ address(es)\n   in the IA Address option(s).  [RFC3315] does not exclude IA_TA\
    \ in\n   such a case, so it is possible that a client implementation includes\n\
    \   an address contained in an IA_TA for the Confirm message.  By\n   observing\
    \ these addresses, an attacker can identify the network the\n   client had previously\
    \ visited.\n"
- title: 5.5.  Finding a Stable Identity
  contents:
  - "5.5.  Finding a Stable Identity\n   An attacker might use a stable identity gleaned\
    \ from DHCPv6 messages\n   to correlate activities of a given client on unrelated\
    \ networks.  The\n   Client FQDN option, the Subscriber-ID option, and the Client\
    \ ID\n   option can serve as long-lived identifiers of DHCPv6 clients.  The\n\
    \   Client FQDN option can also provide an identity that can easily be\n   correlated\
    \ with web server activity logs.\n   It should be noted that in the general case,\
    \ the MAC addresses as\n   such are not available in the DHCPv6 packets.  Therefore,\
    \ they cannot\n   be used directly in a reliable way.  However, they may become\n\
    \   indirectly available using other mechanisms: the client-id contains\n   the\
    \ link-local address if DUID-LL or DUID-LLT types are used, the\n   source IPv6\
    \ address may use an EUI-64 that contains a MAC address,\n   some access technologies\
    \ may specify a MAC address in dedicated\n   options (e.g., cable modems use MAC\
    \ addresses in Data Over Cable\n   Service Interface Specification (DOCSIS) options).\
    \  Relay agents may\n   insert additional information that is used to help the\
    \ server to\n   identify the client.  This could be the Remote-Id option, Subscriber-\n\
    \   ID option, client link-layer address option or Vendor-specific\n   information\
    \ options.  Options inserted by relay agents usually\n   traverse only the relay-server\
    \ path, so they typically can't be\n   eavesdropped by intercepting the client's\
    \ transmissions.  This\n   depends on the actual deployment model and used access\
    \ technologies.\n"
- title: 5.6.  Pervasive Monitoring
  contents:
  - "5.6.  Pervasive Monitoring\n   Pervasive Monitoring (PM) is widespread (and often\
    \ covert)\n   surveillance through intrusive gathering of protocol artifacts,\n\
    \   including application content or protocol metadata such as headers.\n   Active\
    \ or passive wiretaps and traffic analysis, (e.g., correlation,\n   timing or\
    \ measuring packet sizes) or subverting the cryptographic\n   keys used to secure\
    \ protocols can also be used as part of pervasive\n   monitoring.  PM is distinguished\
    \ by being indiscriminate and very\n   large scale; it does not necessarily introduce\
    \ new types of technical\n   compromise.  See [RFC7258] for a discussion about\
    \ PM.\n   In the DHCPv6 context, the PM approach can be used to collect any\n\
    \   identifiers discussed in Section 3.  DHCPv4 and DHCPv6 are especially\n  \
    \ susceptible as the initial message sent (SOLICIT in the case of\n   DHCPv6)\
    \ is one of the very first packets sent when visiting a\n   network.  Furthermore,\
    \ in certain cases, this packet can be logged\n   even on networks that do not\
    \ support IPv6 (some implementations\n   initiate DHCPv6 even without receiving\
    \ RA with M or O bits set).\n   This may be an easily overlooked attack vector\
    \ when an IPv6-capable\n   device connects to an IPv4-only network, gains only\
    \ IPv4\n   connectivity, but still leaks its stable identifiers over DHCPv6.\n\
    \   Using the PM approach, the attacks discussed in Sections 5.1, 5.2,\n   5.3,\
    \ 5.4, 5.5, 5.7, 5.8, and possibly 5.9, apply.\n"
- title: 5.7.  Finding a Client's IP Address or Hostname
  contents:
  - "5.7.  Finding a Client's IP Address or Hostname\n   Many DHCPv6 deployments use\
    \ DNS Updates [RFC4704] that put client's\n   information (current IP address,\
    \ client's hostname) into the DNS,\n   where it is easily accessible by anyone\
    \ interested.  Client ID is\n   also disclosed, albeit in not an easily accessible\
    \ form (SHA-256\n   digest of the client-id).  As SHA-256 is considered irreversible,\n\
    \   DHCID can't be converted back to client-id.  However, SHA-256 digest\n   can\
    \ be used as an unique identifier that is accessible by any host.\n"
- title: 5.8.  Correlation of Activities over Time
  contents:
  - "5.8.  Correlation of Activities over Time\n   As with other identifiers, an IPv6\
    \ address can be used to correlate\n   the activities of a host for at least as\
    \ long as the lifetime of the\n   address.  If that address was generated from\
    \ some other, stable\n   identifier and that generation scheme can be deduced\
    \ by an attacker,\n   the duration of the correlation attack extends to that of\
    \ the\n   identifier.  In many cases, its lifetime is equal to the lifetime of\n\
    \   the device itself.  See Section 3.1 of [RFC7721] for detailed\n   discussion.\n"
- title: 5.9.  Location Tracking
  contents:
  - "5.9.  Location Tracking\n   If a stable identifier is used for assigning an address\
    \ and such\n   mapping is discovered by an attacker (e.g., a server that uses\
    \ IEEE-\n   identifier-based IID to generate an IPv6 address), all scenarios\n\
    \   discussed in Section 3.2 of [RFC7721] apply.  In particular, both\n   passive\
    \ (a service that the client connects to can log the client's\n   address and\
    \ draw conclusions regarding its location and movement\n   patterns based on the\
    \ prefix it is connecting from) and active (an\n   attacker can send ICMPv6 echo\
    \ requests or other probe packets to\n   networks of suspected client locations)\
    \ can be used.  To give a\n   specific example, by accessing a social portal from\n\
    \   tomek-laptop.coffee.somecity.com.example,\n   tomek-laptop.mycompany.com.example,\
    \ and\n   tomek-laptop.myisp.example.com, the portal administrator can draw\n\
    \   conclusions about tomek-laptop's owner's current location and his\n   habits.\n"
- title: 5.10.  Leasequery and Bulk Leasequery
  contents:
  - "5.10.  Leasequery and Bulk Leasequery\n   Attackers may masquerade as an access\
    \ concentrator, either as a\n   DHCPv6 relay agent or as a DHCPv6 client, to obtain\
    \ location\n   information directly from the DHCPv6 server(s) using the DHCPv6\n\
    \   Leasequery [RFC5007] mechanism.\n   Location information is information needed\
    \ by the access concentrator\n   to forward traffic to a broadband-accessible\
    \ host.  This information\n   includes knowledge of the host hardware address,\
    \ the port or virtual\n   circuit that leads to the host, and/or the hardware\
    \ address of the\n   intervening subscriber modem.\n   Furthermore, the attackers\
    \ may use the DHCPv6 bulk leasequery\n   [RFC5460] mechanism to obtain bulk information\
    \ about DHCPv6 bindings,\n   even without knowing the target bindings.\n   Additionally,\
    \ active leasequery [RFC7653] is a mechanism for\n   subscribing to DHCPv6 lease\
    \ update changes in near real-time.  The\n   intent of this mechanism is to update\
    \ an operator's database;\n   however, if the mechanism is misused, an attacker\
    \ could defeat the\n   server's authentication mechanisms and subscribe to all\
    \ updates.  He\n   then could continue receiving updates, without any need for\
    \ local\n   presence.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   In current practice, the client privacy and client\
    \ authentication are\n   mutually exclusive.  The client authentication procedure\
    \ reveals\n   additional client information in their certificates/identifiers.\n\
    \   Full privacy for the clients may mean the clients are also anonymous\n   to\
    \ the server and the network.\n"
- title: 7.  Privacy Considerations
  contents:
  - "7.  Privacy Considerations\n   This document in its entirety discusses privacy\
    \ considerations in\n   DHCPv6.  As such, no dedicated discussion is needed.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC3315]  Droms, R., Ed., Bound, J., Volz, B.,\
    \ Lemon, T., Perkins,\n              C., and M. Carney, \"Dynamic Host Configuration\
    \ Protocol\n              for IPv6 (DHCPv6)\", RFC 3315, DOI 10.17487/RFC3315,\
    \ July\n              2003, <http://www.rfc-editor.org/info/rfc3315>.\n   [RFC6973]\
    \  Cooper, A., Tschofenig, H., Aboba, B., Peterson, J.,\n              Morris,\
    \ J., Hansen, M., and R. Smith, \"Privacy\n              Considerations for Internet\
    \ Protocols\", RFC 6973,\n              DOI 10.17487/RFC6973, July 2013,\n   \
    \           <http://www.rfc-editor.org/info/rfc6973>.\n   [RFC7258]  Farrell,\
    \ S. and H. Tschofenig, \"Pervasive Monitoring Is an\n              Attack\",\
    \ BCP 188, RFC 7258, DOI 10.17487/RFC7258, May\n              2014, <http://www.rfc-editor.org/info/rfc7258>.\n\
    \   [RFC7721]  Cooper, A., Gont, F., and D. Thaler, \"Security and Privacy\n \
    \             Considerations for IPv6 Address Generation Mechanisms\",\n     \
    \         RFC 7721, DOI 10.17487/RFC7721, March 2016,\n              <http://www.rfc-editor.org/info/rfc7721>.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [RFC2136]  Vixie, P., Ed., Thomson, S., Rekhter,\
    \ Y., and J. Bound,\n              \"Dynamic Updates in the Domain Name System\
    \ (DNS UPDATE)\",\n              RFC 2136, DOI 10.17487/RFC2136, April 1997,\n\
    \              <http://www.rfc-editor.org/info/rfc2136>.\n   [RFC3633]  Troan,\
    \ O. and R. Droms, \"IPv6 Prefix Options for Dynamic\n              Host Configuration\
    \ Protocol (DHCP) version 6\", RFC 3633,\n              DOI 10.17487/RFC3633,\
    \ December 2003,\n              <http://www.rfc-editor.org/info/rfc3633>.\n  \
    \ [RFC4580]  Volz, B., \"Dynamic Host Configuration Protocol for IPv6\n      \
    \        (DHCPv6) Relay Agent Subscriber-ID Option\", RFC 4580,\n            \
    \  DOI 10.17487/RFC4580, June 2006,\n              <http://www.rfc-editor.org/info/rfc4580>.\n\
    \   [RFC4649]  Volz, B., \"Dynamic Host Configuration Protocol for IPv6\n    \
    \          (DHCPv6) Relay Agent Remote-ID Option\", RFC 4649,\n              DOI\
    \ 10.17487/RFC4649, August 2006,\n              <http://www.rfc-editor.org/info/rfc4649>.\n\
    \   [RFC4704]  Volz, B., \"The Dynamic Host Configuration Protocol for\n     \
    \         IPv6 (DHCPv6) Client Fully Qualified Domain Name (FQDN)\n          \
    \    Option\", RFC 4704, DOI 10.17487/RFC4704, October 2006,\n              <http://www.rfc-editor.org/info/rfc4704>.\n\
    \   [RFC4776]  Schulzrinne, H., \"Dynamic Host Configuration Protocol\n      \
    \        (DHCPv4 and DHCPv6) Option for Civic Addresses\n              Configuration\
    \ Information\", RFC 4776,\n              DOI 10.17487/RFC4776, November 2006,\n\
    \              <http://www.rfc-editor.org/info/rfc4776>.\n   [RFC4941]  Narten,\
    \ T., Draves, R., and S. Krishnan, \"Privacy\n              Extensions for Stateless\
    \ Address Autoconfiguration in\n              IPv6\", RFC 4941, DOI 10.17487/RFC4941,\
    \ September 2007,\n              <http://www.rfc-editor.org/info/rfc4941>.\n \
    \  [RFC5007]  Brzozowski, J., Kinnear, K., Volz, B., and S. Zeng,\n          \
    \    \"DHCPv6 Leasequery\", RFC 5007, DOI 10.17487/RFC5007,\n              September\
    \ 2007, <http://www.rfc-editor.org/info/rfc5007>.\n   [RFC5460]  Stapp, M., \"\
    DHCPv6 Bulk Leasequery\", RFC 5460,\n              DOI 10.17487/RFC5460, February\
    \ 2009,\n              <http://www.rfc-editor.org/info/rfc5460>.\n   [RFC5970]\
    \  Huth, T., Freimann, J., Zimmer, V., and D. Thaler, \"DHCPv6\n             \
    \ Options for Network Boot\", RFC 5970, DOI 10.17487/RFC5970,\n              September\
    \ 2010, <http://www.rfc-editor.org/info/rfc5970>.\n   [RFC6225]  Polk, J., Linsner,\
    \ M., Thomson, M., and B. Aboba, Ed.,\n              \"Dynamic Host Configuration\
    \ Protocol Options for\n              Coordinate-Based Location Configuration\
    \ Information\",\n              RFC 6225, DOI 10.17487/RFC6225, July 2011,\n \
    \             <http://www.rfc-editor.org/info/rfc6225>.\n   [RFC6355]  Narten,\
    \ T. and J. Johnson, \"Definition of the UUID-Based\n              DHCPv6 Unique\
    \ Identifier (DUID-UUID)\", RFC 6355,\n              DOI 10.17487/RFC6355, August\
    \ 2011,\n              <http://www.rfc-editor.org/info/rfc6355>.\n   [RFC6422]\
    \  Lemon, T. and Q. Wu, \"Relay-Supplied DHCP Options\",\n              RFC 6422,\
    \ DOI 10.17487/RFC6422, December 2011,\n              <http://www.rfc-editor.org/info/rfc6422>.\n\
    \   [RFC6939]  Halwasia, G., Bhandari, S., and W. Dec, \"Client Link-Layer\n \
    \             Address Option in DHCPv6\", RFC 6939, DOI 10.17487/RFC6939,\n  \
    \            May 2013, <http://www.rfc-editor.org/info/rfc6939>.\n   [RFC7653]\
    \  Raghuvanshi, D., Kinnear, K., and D. Kukrety, \"DHCPv6\n              Active\
    \ Leasequery\", RFC 7653, DOI 10.17487/RFC7653,\n              October 2015, <http://www.rfc-editor.org/info/rfc7653>.\n\
    \   [RFC7844]  Huitema, C., Mrugalski, T., and S. Krishnan, \"Anonymity\n    \
    \          Profile for DHCP Clients\", RFC 7844, DOI 10.17487/RFC7844,\n     \
    \         May 2016, <http://www.rfc-editor.org/info/rfc7844>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The authors would like to thank Stephen Farrell, Ted Lemon,\
    \ Ines\n   Robles, Russ White, Christian Schaefer, Jinmei Tatuya, Bernie Volz,\n\
    \   Marcin Siodelski, Christian Huitema, Brian Haberman, Robert Sparks,\n   Peter\
    \ Yee, Ben Campbell, and other members of DHC WG for their\n   valuable comments.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Suresh Krishnan\n   Ericsson\n   8400 Decarie Blvd.\n\
    \   Town of Mount Royal, QC\n   Canada\n   Phone: +1 514 345 7900 x42871\n   Email:\
    \ suresh.krishnan@ericsson.com\n   Tomek Mrugalski\n   Internet Systems Consortium,\
    \ Inc.\n   950 Charter Street\n   Redwood City, CA  94063\n   United States\n\
    \   Email: tomasz.mrugalski@gmail.com\n   Sheng Jiang\n   Huawei Technologies\
    \ Co., Ltd.\n   Q14, Huawei Campus, No.156 BeiQing Road\n   Hai-Dian District,\
    \ Beijing  100095\n   China\n   Email: jiangsheng@huawei.com\n"
