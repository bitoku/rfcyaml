- title: __initial_text__
  contents:
  - '                             NFS URL Scheme

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1997).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   A new URL scheme, 'nfs' is defined.  It is used to refer to files\
    \ and\n   directories on NFS servers using the general URL syntax defined in\n\
    \   RFC 1738, \"Uniform Resource Locators (URL)\".\n   This scheme uses the public\
    \ filehandle and multi-component lookup\n   [RFC2054, RFC2055] to access server\
    \ data with a minimum of protocol\n   overhead.\n   The NFS protocol provides\
    \ access to shared filesystems across\n   networks.  It is designed to be machine,\
    \ operating system, network\n   architecture, and transport protocol independent.\
    \  The protocol\n   currently exists in two versions: version 2 [RFC1094] and\
    \ version 3\n   [RFC1813], both built on ONC RPC [RFC1831] at its associated eXternal\n\
    \   Data Representation (XDR) [RFC1832] and Binding Protocol [RFC1833].\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n      1.    URL Syntax . . . . . . . . . . . . . . . . . .\
    \ . . . . .  2\n      2.    URL Evaluation . . . . . . . . . . . . . . . . . .\
    \ . . .  2\n      3.    Server Connection  . . . . . . . . . . . . . . . . . .\
    \ .  2\n      4.    NFS Version  . . . . . . . . . . . . . . . . . . . . . . \
    \ 2\n      5.    Public Filehandle  . . . . . . . . . . . . . . . . . . .  3\n\
    \      5.1     NFS Version 2 Public Filehandle  . . . . . . . . . . .  3\n   \
    \   5.2     NFS Version 3 Public Filehandle  . . . . . . . . . . .  3\n      6.\
    \    Multi-component Lookup . . . . . . . . . . . . . . . . .  3\n      6.1  \
    \   Absolute vs Relative Pathname  . . . . . . . . . . . .  4\n      6.2     Symbolic\
    \ Links . . . . . . . . . . . . . . . . . . . .  5\n      7.    Mount Protocol\
    \ . . . . . . . . . . . . . . . . . . . . .  6\n      8.    Bibliography . . .\
    \ . . . . . . . . . . . . . . . . . . .  7\n      9.    Security Considerations\
    \  . . . . . . . . . . . . . . . .  8\n      10.   BNF for NFS URL Scheme . .\
    \ . . . . . . . . . . . . . . .  9\n      11.   Acknowledgements . . . . . . .\
    \ . . . . . . . . . . . . . 10\n      12.   Author's Address . . . . . . . . .\
    \ . . . . . . . . . . . 10\n      13.   Full Copyright Statement . . . . . . .\
    \ . . . . . . . . . 11\n"
- title: 1. URL Syntax
  contents:
  - "1. URL Syntax\n   An NFS URL is based on the Common Internet Scheme Syntax described\
    \ in\n   section 3.1 of RFC 1738.  It has the general form:\n        nfs://<host>:<port><url-path>\n\
    \   The \":<port>\" part is optional.  If omitted then port 2049 is\n   assumed.\
    \  The <url-path> is also optional.\n   The <url-path> is a hierarchical directory\
    \ path of the form\n   /<directory>/<directory>/<directory>/.../<name>. The <url-path>\
    \ must\n   consist only of characters within the US-ASCII character set.  Within\n\
    \   a <directory> or <name> component the character \"/\" is reserved and\n  \
    \ must be encoded as described in Section 2.2 of RFC 1738.  If <url-\n   path>\
    \ is omitted or consists solely of \"/\", it must default to the\n   path \".\"\
    .\n"
- title: 2. URL Evaluation
  contents:
  - "2. URL Evaluation\n   A client must evaluate an NFS URL by a method known as\
    \ WebNFS\n   [RFC2054, RFC2055]. This method provides easy passage through\n \
    \  firewalls and proxy servers, as well as using a minimum number of\n   messages.\
    \  The WebNFS method is defined for NFS versions 2 and 3. It\n   assumes that\
    \ the server registers on TCP or UDP port 2049 and\n   supports the public filehandle\
    \ and multi-component lookup semantics\n   as described in the following sections.\n"
- title: 3. Server Connection
  contents:
  - "3. Server Connection\n   The client must first attempt to create a TCP connection\
    \ to <host>\n   using the <port> specified.  If :<port> is omitted, then port\
    \ 2049\n   will be used.  If the server refuses the TCP connection, then the\n\
    \   client will use UDP.\n"
- title: 4. NFS Version
  contents:
  - "4. NFS Version\n   The client must first attempt to use NFS version 3.  If the\
    \ server\n   returns an RPC PROG_MISMATCH error then the client must assume that\n\
    \   NFS version 3 is not supported, and retry the operation with an NFS\n   version\
    \ 2 public filehandle.\n"
- title: 5. Public Filehandle
  contents:
  - "5. Public Filehandle\n   NFS filehandles are normally created by the server and\
    \ used to\n   identify uniquely a particular file or directory on the server.\
    \  The\n   client does not normally create filehandles or have any knowledge of\n\
    \   the contents of a filehandle.\n   The public filehandle is an an exception.\
    \  It is an NFS filehandle\n   with a reserved value and special semantics that\
    \ allow an initial\n   filehandle to be obtained.  A WebNFS client uses the public\n\
    \   filehandle as an initial filehandle rather than using the MOUNT\n   protocol.\
    \  Since NFS version 2 and version 3 have different\n   filehandle formats, the\
    \ public filehandle is defined differently for\n   each.\n   The public filehandle\
    \ is a zero filehandle.  For NFS version 2 this\n   is a filehandle with 32 zero\
    \ octets.  A version 3 public filehandle\n   has zero length.\n"
- title: 5.1 NFS Version 2 Public Filehandle
  contents:
  - "5.1 NFS Version 2 Public Filehandle\n   A version 2 filehandle is defined in\
    \ RFC 1094 as an opaque value\n   occupying 32 octets.  A version 2 public filehandle\
    \ has a zero in\n   each octet, i.e. all zeros.\n    1                       \
    \                                      32\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 5.2 NFS Version 3 Public Filehandle
  contents:
  - "5.2 NFS Version 3 Public Filehandle\n   A version 3 filehandle is defined in\
    \ RFC 1813 as a variable length\n   opaque value occupying up to 64 octets.  The\
    \ length of the filehandle\n   is indicated by an integer value contained in a\
    \ 4 octet value which\n   describes the number of valid octets that follow. A\
    \ version 3 public\n   filehandle has a length of zero.\n   +-+-+-+-+\n   |  \
    \ 0   |\n   +-+-+-+-+\n"
- title: 6. Multi-component Lookup
  contents:
  - "6. Multi-component Lookup\n   Normally the NFS LOOKUP request (version 2 or 3)\
    \ takes a directory\n   filehandle along with the name of a directory member,\
    \ and returns the\n   filehandle of the directory member.  If a client needs to\
    \ evaluate a\n   pathname that contains a sequence of components, then beginning\
    \ with\n   the directory filehandle of the first component it must issue a\n \
    \  series of LOOKUP requests one component at a time.  For instance,\n   evaluation\
    \ of the path  \"a/b/c\" will generate separate LOOKUP\n   requests for each component\
    \ of the pathname \"a\", \"b\", and \"c\".\n   A LOOKUP request that uses the\
    \ public filehandle can provide a\n   pathname containing multiple components.\
    \  The server is expected to\n   evaluate the entire pathname and return a filehandle\
    \ for the final\n   component.\n   For example, rather than evaluate the path\
    \ \"a/b/c\" as:\n        LOOKUP  FH=0x0  \"a\"  --->\n                       \
    \      <---  FH=0x1\n        LOOKUP  FH=0x1  \"b\"  --->\n                   \
    \          <---  FH=0x2\n        LOOKUP  FH=0x2  \"c\"  --->\n               \
    \              <---  FH=0x3\n   Relative to the public filehandle these three\
    \ LOOKUP\n   requests can be replaced by a single multi-component\n   lookup:\n\
    \        LOOKUP  FH=0x0  \"a/b/c\"  --->\n                                 <---\
    \  FH=0x3\n   Multi-component lookup is supported only for LOOKUP requests relative\n\
    \   to the public filehandle.\n   The <url-path> of the NFS URL must be evaluated\
    \ as a multi-component\n   lookup. This implies that the path components are delimited\
    \ by\n   slashes and the characters that make up the path must be in the\n   printable\
    \ US-ASCII character set. Characters not in the \"unreserved\"\n   set (see BNF\
    \ description below) may be included in pathname\n   components but must be escaped.\n\
    \   If the <url-path> is empty or consists solely of \"/\", the client must\n\
    \   send a multi-component lookup for the pathname \".\".\n"
- title: 6.1 Absolute vs. Relative Pathname
  contents:
  - "6.1 Absolute vs. Relative Pathname\n   A multi-component pathname that begins\
    \ with a slash character is\n   considered \"absolute\" and will be evaluated\
    \ relative to the server's\n   root.  A pathname that does not begin with a slash\
    \ is \"relative\" and\n   will be evaluated relative to the directory with which\
    \ the public\n   filehandle is associated.\n   Note that the initial \"/\" that\
    \ introduces the <url-path> of an NFS\n   URL must not be passed to the server\
    \ for multi-component lookup since\n   the pathname is to be evaluated relative\
    \ to the public filehandle\n   directory.  For example, if the public filehandle\
    \ is associated with\n   the server's directory \"/a/b/c\" then the URL:\n   \
    \     nfs://server/d/e/f\n   will be evaluated with a multi-component lookup of\
    \ the path\n   \"d/e/f\" relative to the server's directory \"/a/b/c\" while\n\
    \   the URL:\n        nfs://server//a/b/c/d/e/f\n   will locate the same file\
    \ with an absolute multi-component lookup of\n   the path \"/a/b/c/d/e/f\" relative\
    \ to the server's filesystem root.\n   Notice that a double slash is required\
    \ at the beginning of the path.\n   Not all WebNFS servers can support arbitrary\
    \ use of absolute paths.\n   Clearly, the server must not return a filehandle\
    \ if the path\n   identifies a file or directory that is not exported by the server.\n\
    \   In addition, some servers will not return a filehandle if the path\n   names\
    \ a file or directory in an exported filesystem different from\n   the one that\
    \ is associated with the public filehandle.\n"
- title: 6.2 Symbolic Links
  contents:
  - "6.2 Symbolic Links\n   The NFS protocol supports symbolic links, which are the\
    \ filesystem\n   equivalent of a relative URL. If a WebNFS client retrieves a\n\
    \   filehandle for a symbolic link (as indicated by the file type\n   attribute)\
    \ then it should send a READLINK request to the server to\n   retrieve the path\
    \ comprising the symbolic link.\n   This path should then be combined with the\
    \ URL which referenced the\n   symbolic link according to the rules described\
    \ in RFC 1808.  If the\n   relative URL in the symbolic link text is to be resolved\
    \ successfully\n   then it must contain only ASCII characters and conform to the\
    \ syntax\n   described in RFC 1808.  Note that this allows a symbolic link to\n\
    \   contain an entire URL and it may specify a scheme that is not\n   necessarily\
    \ an NFS URL.\n   A symbolic link path that begins with a slash will be evaluated\
    \ as an\n   absolute path relative to the directory associated with the public\n\
    \   filehandle which may not be the same as the server's system root\n   directory.\
    \  If symbolic links with absolute paths are to be evaluated\n   correctly on\
    \ both client and server then the public filehandle must\n   be associated with\
    \ the system root directory.\n   For example, if the symbolic link is named by\
    \ the URL\n        nfs://server/a/b\n   then the following examples show how a\
    \ new URL can be\n   formed from the symbolic link text:\n         c         \
    \             = nfs://server/a/c\n         c/d                    = nfs://server/a/c/d\n\
    \         ../c                   = nfs://server/c\n         /c/d             \
    \      = nfs://server/c/d\n         nfs://server2/a/b      = nfs://server2/a/b\n"
- title: 7. Mount Protocol
  contents:
  - "7. Mount Protocol\n   The NFS URL may have limited use for naming files on servers\
    \ that do\n   not support the public filehandle and multi-component lookup.\n\
    \   If the server returns an NFS3ERR_STALE, NFS3ERR_INVAL, or\n   NFS3ERR_BADHANDLE\
    \ error in response to the client's use of a public\n   filehandle, then the client\
    \ should attempt to resolve the <url-path>\n   to a filehandle using the MOUNT\
    \ protocol.\n   Version 1 of the MOUNT protocol is described in Appendix A of\
    \ RFC\n   1094 and version 3 in Appendix I of RFC 1813. Version 2 of the MOUNT\n\
    \   protocol is identical to version 1 except for the addition of a\n   procedure\
    \ MOUNTPROC_PATHCONF which returns POSIX pathconf information\n   from the server.\n\
    \   Note that the pathname sent to the server in the MOUNTPROC_MNT\n   request\
    \ is assumed to be a server native path, rather than a slash-\n   separated path\
    \ described by RFC 1738.  Hence, the MOUNT protocol can\n   reasonably be expected\
    \ to map a <url-path> to a filehandle only on\n   servers that support slash-separated\
    \ ASCII native paths.  In general,\n   servers that do not support WebNFS access\
    \ or slash-separated ASCII\n   native paths should not advertise NFS URLs.\n \
    \  At this point the client must already have some indication as to\n   which\
    \ version of the NFS protocol is supported on the server.  Since\n   the filehandle\
    \ format differs between NFS versions 2 and 3, the\n   client must select the\
    \ appropriate version of the MOUNT protocol.\n   MOUNT versions 1 and 2 return\
    \ only NFS version 2 filehandles, whereas\n   MOUNT version 3 returns NFS version\
    \ 3 filehandles.\n   Unlike the NFS service, the MOUNT service is not registered\
    \ on a\n   well-known port.  The client must use the PORTMAP service to locate\n\
    \   the server's MOUNT port before it can transmit a MOUNTPROC_MNT\n   request\
    \ to retrieve the filehandle corresponding to the requested\n   path.\n      \
    \ Client                                       Server\n       ------         \
    \                              ------\n       -------------- MOUNT port ? -------------->\
    \  Portmapper\n       <-------------- Port=984 ------------------\n       -------\
    \ Filehandle for /export/foo ?  ---->  Mountd @ port 984\n       <--------- Filehandle=0xf82455ce0..\
    \  ------\n   NFS servers commonly use a client's successful MOUNTPROC_MNT request\n\
    \   request as an indication that the client has \"mounted\" the filesystem\n\
    \   and may maintain this information in a file that lists the\n   filesystems\
    \ that clients currently have mounted.  This information is\n   removed from the\
    \ file when the client transmits an MOUNTPROC_UMNT\n   request.  Upon receiving\
    \ a successful reply to a MOUNTPROC_MNT\n   request, a WebNFS client should send\
    \ a MOUNTPROC_UMNT request to\n   prevent an accumulation of \"mounted\" records\
    \ on the server.\n"
- title: 8.0 Bibliography
  contents:
  - "8.0 Bibliography\n   [RFC1738]       Berners-Lee, T., Masinter, L. and M. McCahill,\n\
    \                   \"Uniform Resource Locators (URL),\" RFC 1738,\n         \
    \          December 1994.\n   [RFC1808]       Fielding, R., \"Relative Uniform\
    \ Resource Locators,\"\n                   RFC 1808, June 1995.\n   [RFC1831]\
    \       Srinivasan, R., \"RPC: Remote Procedure Call\n                   Protocol\
    \ Specification Version 2,\" RFC 1831,\n                   August 1995.\n   [RFC1832]\
    \       Srinivasan, R., \"XDR: External Data Representation\n                \
    \   Standard,\" RFC 1832, August 1995.\n   [RFC1833]       Srinivasan, R., \"\
    Binding Protocols for ONC RPC\n                   Version 2,\" RFC 1833, August\
    \ 1995.\n   [RFC1094]       Sun Microsystems, Inc., \"Network Filesystem\n   \
    \                Specification,\" RFC 1094, March 1989.\n   [RFC1813]       Callaghan,\
    \ B., Pawlowski, B. and P. Staubach,\n                   \"NFS Version 3 Protocol\
    \ Specification,\" RFC 1813,\n                   June 1995.\n   [RFC2054]    \
    \   Callaghan, B., \"WebNFS Client Specification,\"\n                   RFC 2054,\
    \ October 1996.\n   [RFC2055]       Callaghan, B., \"WebNFS Server Specification,\"\
    \n                   RFC 2055, October 1996.\n   [Sandberg]      Sandberg, R.,\
    \ D. Goldberg, S. Kleiman, D. Walsh,\n                   B.  Lyon, \"Design and\
    \ Implementation of the Sun\n                   Network Filesystem,\" USENIX Conference\n\
    \                   Proceedings, USENIX Association, Berkeley, CA,\n         \
    \          Summer 1985.  The basic paper describing the\n                   SunOS\
    \ implementation of the NFS version 2\n                   protocol, and discusses\
    \ the goals, protocol\n                   specification and trade-offs.\n   [X/OpenNFS]\
    \     X/Open Company, Ltd., X/Open CAE Specification:\n                   Protocols\
    \ for X/Open Internetworking: XNFS,\n                   X/Open Company, Ltd.,\
    \ Apex Plaza, Forbury Road,\n                   Reading Berkshire, RG1 1AX, United\
    \ Kingdom,\n                   1991.  This is an indispensable reference for\n\
    \                   the NFS and accompanying protocols, including\n          \
    \         the Lock Manager and the Portmapper.\n   [X/OpenPCNFS]   X/Open Company,\
    \ Ltd., X/Open CAE Specification:\n                   Protocols for X/Open Internetworking:\
    \ (PC)NFS,\n                   Developer's Specification, X/Open Company, Ltd.,\n\
    \                   Apex Plaza, Forbury Road, Reading Berkshire, RG1\n       \
    \            1AX, United Kingdom, 1991.  This is an\n                   indispensable\
    \ reference for NFS protocol and\n                   accompanying protocols, including\
    \ the Lock Manager\n                   and the Portmapper.\n"
- title: 9. Security Considerations
  contents:
  - "9. Security Considerations\n   Since the WebNFS server features are based on\
    \ NFS protocol versions 2\n   and 3, the RPC based security considerations described\
    \ in RFC 1094,\n   RFC 1831, and RFC 1832 apply here also.\n   Server implementors\
    \ should be careful when implementing multi-\n   component lookup that the client\
    \ cannot obtain unauthorized access to\n   files or directories. For example:\
    \ a path that includes multiple\n   occurrences of \"../\" may locate a filesystem\
    \ outside of the exported\n   filesystem associated with the public filehandle.\n\
    \   Clients and servers may separately negotiate secure connection\n   schemes\
    \ for authentication, data integrity, and privacy.\n"
- title: 10. BNF for NFS URL Scheme
  contents:
  - "10. BNF for NFS URL Scheme\n   The syntax of the NFS URL is a subset of the Generic\
    \ URL syntax\n   described in RFC 1738.  An NFS URL does not include user or password\n\
    \   components, nor does it recognize \"?\" query or \"#\" fragment\n   components.\n\
    \      nfsURL        = \"nfs\" \":\" relativeURL\n      relativeURL   = net_path\
    \ | abs_path | rel_path\n      net_path      = \"//\" hostport [ abs_path ]\n\
    \      abs_path      = \"/\"  rel_path\n      rel_path      = [ path_segments\
    \ ]\n      hostport      = host [ \":\" port ]\n      host          = hostname\
    \ | hostnumber\n      hostname      = *( domainlabel \".\" ) toplabel\n      domainlabel\
    \   = alphanum | alphanum *( alphanum | \"-\" ) alphanum\n      toplabel     \
    \ = alpha | alpha *( alphanum | \"-\" ) alphanum\n      hostnumber    = 1*digit\
    \ \".\" 1*digit \".\" 1*digit \".\" 1*digit\n      port          = *digit\n  \
    \    url-path      = [ \"/\" ] path_segments\n      path_segments = segment *(\
    \ \"/\" segment )\n      segment       = *pchar\n      pchar         = unreserved\
    \ | escaped | \":\" | \"@\" | \"&\" | \"=\" | \"+\"\n      reserved      = \"\
    ;\" | \"/\" | \"?\" | \":\" | \"@\" | \"&\" | \"=\" | \"+\"\n      unreserved\
    \    = alpha | digit | mark\n      mark          = \"$\" | \"-\" | \"_\" | \"\
    .\" | \"!\" | \"~\" |\n                      \"*\" | \"'\" | \"(\" | \")\" | \"\
    ,\"\n      escaped       = \"%\" hex hex\n      hex           = digit | \"A\"\
    \ | \"B\" | \"C\" | \"D\" | \"E\" | \"F\" |\n                              \"\
    a\" | \"b\" | \"c\" | \"d\" | \"e\" | \"f\"\n      alphanum      = alpha | digit\n\
    \      alpha         = lowalpha | upalpha\n      lowalpha = \"a\" | \"b\" | \"\
    c\" | \"d\" | \"e\" | \"f\" | \"g\" | \"h\" | \"i\" |\n                 \"j\"\
    \ | \"k\" | \"l\" | \"m\" | \"n\" | \"o\" | \"p\" | \"q\" | \"r\" |\n        \
    \         \"s\" | \"t\" | \"u\" | \"v\" | \"w\" | \"x\" | \"y\" | \"z\"\n    \
    \  upalpha  = \"A\" | \"B\" | \"C\" | \"D\" | \"E\" | \"F\" | \"G\" | \"H\" |\
    \ \"I\" |\n                 \"J\" | \"K\" | \"L\" | \"M\" | \"N\" | \"O\" | \"\
    P\" | \"Q\" | \"R\" |\n                 \"S\" | \"T\" | \"U\" | \"V\" | \"W\"\
    \ | \"X\" | \"Y\" | \"Z\"\n      digit    = \"0\" | \"1\" | \"2\" | \"3\" | \"\
    4\" | \"5\" | \"6\" | \"7\" |\n                 \"8\" | \"9\"\n"
- title: 11. Acknowledgements
  contents:
  - "11. Acknowledgements\n   This specification was extensively reviewed by the NFS\
    \ group at\n   SunSoft and brainstormed by Michael Eisler.\n"
- title: 12. Author's Address
  contents:
  - "12. Author's Address\n   Address comments related to this RFC to:\n      brent@eng.sun.com\n\
    \   Brent Callaghan\n   Sun Microsystems, Inc.\n   Mailstop Mpk17-201,\n   901\
    \ San Antonio Road,\n   Palo Alto, California 94303\n   Phone: 1-415-786-5067\n\
    \   EMail: brent.callaghan@eng.sun.com\n   Fax:   1-415-786-5896\n"
- title: 13.  Full Copyright Statement
  contents:
  - "13.  Full Copyright Statement\n   Copyright (C) The Internet Society (1997).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implmentation may be prepared, copied, published\n\
    \   andand distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\"\n"
