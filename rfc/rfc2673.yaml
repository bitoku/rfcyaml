- title: __initial_text__
  contents:
  - '                Binary Labels in the Domain Name System

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
- title: 1.  Introduction and Terminology
  contents:
  - "1.  Introduction and Terminology\n   This document defines a \"Bit-String Label\"\
    \ which may appear within\n   domain names.  This new label type compactly represents\
    \ a sequence of\n   \"One-Bit Labels\" and enables resource records to be stored\
    \ at any\n   bit-boundary in a binary-named section of the domain name tree.\n\
    \   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\"\
    ,\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in\
    \ this\n   document are to be interpreted as described in [KWORD].\n"
- title: 2.  Motivation
  contents:
  - "2.  Motivation\n   Binary labels are intended to efficiently solve the problem\
    \ of\n   storing data and delegating authority on arbitrary boundaries when\n\
    \   the structure of underlying name space is most naturally represented\n   in\
    \ binary.\n"
- title: 3.  Label Format
  contents:
  - "3.  Label Format\n   Up to 256 One-Bit Labels can be grouped into a single Bit-String\n\
    \   Label.  Within a Bit-String Label the most significant or \"highest\n   level\"\
    \ bit appears first.  This is unlike the ordering of DNS labels\n   themselves,\
    \ which has the least significant or \"lowest level\" label\n   first.  Nonetheless,\
    \ this ordering seems to be the most natural and\n   efficient for representing\
    \ binary labels.\n   Among consecutive Bit-String Labels, the bits in the first-appearing\n\
    \   label are less significant or \"at a lower level\" than the bits in\n   subsequent\
    \ Bit-String Labels, just as ASCII labels are ordered.\n"
- title: 3.1.  Encoding
  contents:
  - "3.1.  Encoding\n      0                   1                   2\n      0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2     . . .\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-//+-+-+-+-+-+-+\n\
    \     |0 1|    ELT    |     Count     |           Label ...         |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+//-+-+-+-+-+-+-+\n\
    \   (Each tic mark represents one bit.)\n   ELT       000001 binary, the six-bit\
    \ extended label type [EDNS0]\n             assigned to the Bit-String Label.\n\
    \   Count     The number of significant bits in the Label field.  A Count\n  \
    \           value of zero indicates that 256 bits are significant.\n         \
    \    (Thus the null label representing the DNS root cannot be\n             represented\
    \ as a Bit String Label.)\n   Label     The bit string representing a sequence\
    \ of One-Bit Labels,\n             with the most significant bit first.  That\
    \ is, the One-Bit\n             Label in position 17 in the diagram above represents\
    \ a\n             subdomain of the domain represented by the One-Bit Label in\n\
    \             position 16, and so on.\n             The Label field is padded\
    \ on the right with zero to seven\n             pad bits to make the entire field\
    \ occupy an integral number\n             of octets.  These pad bits MUST be zero\
    \ on transmission and\n             ignored on reception.\n   A sequence of bits\
    \ may be split into two or more Bit-String Labels,\n   but the division points\
    \ have no significance and need not be\n   preserved.  An excessively clever server\
    \ implementation might split\n   Bit-String Labels so as to maximize the effectiveness\
    \ of message\n   compression [DNSIS].  A simpler server might divide Bit-String\
    \ Labels\n   at zone boundaries, if any zone boundaries happen to fall between\n\
    \   One-Bit Labels.\n"
- title: 3.2.  Textual Representation
  contents:
  - "3.2.  Textual Representation\n   A Bit-String Label is represented in text --\
    \ in a zone file, for\n   example -- as a <bit-spec> surrounded by the delimiters\
    \ \"\\[\" and \"]\".\n   The <bit-spec> is either a dotted quad or a base indicator\
    \ and a\n   sequence of digits appropriate to that base, optionally followed by\
    \ a\n   slash and a length.  The base indicators are \"b\", \"o\" and \"x\",\n\
    \   denoting base 2, 8 and 16 respectively.  The length counts the\n   significant\
    \ bits and MUST be between 1 and 32, inclusive, after a\n   dotted quad, or between\
    \ 1 and 256, inclusive, after one of the other\n   forms.  If the length is omitted,\
    \ the implicit length is 32 for a\n   dotted quad or 1, 3 or 4 times the number\
    \ of binary, octal or\n   hexadecimal digits supplied, respectively, for the other\
    \ forms.\n   In augmented Backus-Naur form [ABNF],\n     bit-string-label =  \"\
    \\[\" bit-spec \"]\"\n     bit-spec         =  bit-data [ \"/\" length ]\n   \
    \                    / dotted-quad [ \"/\" slength ]\n     bit-data         =\
    \  \"x\" 1*64HEXDIG\n                       / \"o\" 1*86OCTDIG\n             \
    \          / \"b\" 1*256BIT\n     dotted-quad      =  decbyte \".\" decbyte \"\
    .\" decbyte \".\" decbyte\n     decbyte          =  1*3DIGIT\n     length    \
    \       =  NZDIGIT *2DIGIT\n     slength          =  NZDIGIT [ DIGIT ]\n     OCTDIG\
    \           =  %x30-37\n     NZDIGIT          =  %x31-39\n   If a <length> is\
    \ present, the number of digits in the <bit-data> MUST\n   be just sufficient\
    \ to contain the number of bits specified by the\n   <length>.  If there are insignificant\
    \ bits in a final hexadecimal or\n   octal digit, they MUST be zero.  A <dotted-quad>\
    \ always has all four\n   parts even if the associated <slength> is less than\
    \ 24, but, like the\n   other forms, insignificant bits MUST be zero.\n   Each\
    \ number represented by a <decbyte> must be between 0 and 255,\n   inclusive.\n\
    \   The number represented by <length> must be between 1 and 256\n   inclusive.\n\
    \   The number represented by <slength> must be between 1 and 32\n   inclusive.\n\
    \   When the textual form of a Bit-String Label is generated by machine,\n   the\
    \ length SHOULD be explicit, not implicit.\n"
- title: 3.2.1.  Examples
  contents:
  - "3.2.1.  Examples\n   The following four textual forms represent the same Bit-String\
    \ Label.\n                             \\[b11010000011101]\n                 \
    \            \\[o64072/14]\n                             \\[xd074/14]\n      \
    \                       \\[208.116.0.0/14]\n   The following represents two consecutive\
    \ Bit-String Labels which\n   denote the same relative point in the DNS tree as\
    \ any of the above\n   single Bit-String Labels.\n                           \
    \  \\[b11101].\\[o640]\n"
- title: 3.3.  Canonical Representation and Sort Order
  contents:
  - "3.3.  Canonical Representation and Sort Order\n   Both the wire form and the\
    \ text form of binary labels have a degree\n   of flexibility in their grouping\
    \ into multiple consecutive Bit-String\n   Labels.  For generating and checking\
    \ DNS signature records [DNSSEC]\n   binary labels must be in a predictable form.\
    \  This canonical form is\n   defined as the form which has the fewest possible\
    \ Bit-String Labels\n   and in which all except possibly the first (least significant)\
    \ label\n   in any sequence of consecutive Bit-String Labels is of maximum\n \
    \  length.\n   For example, the canonical form of any sequence of up to 256 One-Bit\n\
    \   Labels has a single Bit-String Label, and the canonical form of a\n   sequence\
    \ of 513 to 768 One-Bit Labels has three Bit-String Labels of\n   which the second\
    \ and third contain 256 label bits.\n   The canonical sort order of domain names\
    \ [DNSSEC] is extended to\n   encompass binary labels as follows.  Sorting is\
    \ still label-by-label,\n   from most to least significant, where a label may\
    \ now be a One-Bit\n   Label or a standard (code 00) label.  Any One-Bit Label\
    \ sorts before\n   any standard label, and a 0 bit sorts before a 1 bit.  The\
    \ absence of\n   a label sorts before any label, as specified in [DNSSEC].\n \
    \  For example, the following domain names are correctly sorted.\n           \
    \              foo.example\n                         \\[b1].foo.example\n    \
    \                     \\[b100].foo.example\n                         \\[b101].foo.example\n\
    \                         bravo.\\[b10].foo.example\n                        \
    \ alpha.foo.example\n"
- title: 4.  Processing Rules
  contents:
  - "4.  Processing Rules\n   A One-Bit Label never matches any other kind of label.\
    \  In\n   particular, the DNS labels represented by the single ASCII characters\n\
    \   \"0\" and \"1\" do not match One-Bit Labels represented by the bit values\n\
    \   0 and 1.\n"
- title: 5.  Discussion
  contents:
  - "5.  Discussion\n   A Count of zero in the wire-form represents a 256-bit sequence,\
    \ not\n   to optimize that particular case, but to make it completely\n   impossible\
    \ to have a zero-bit label.\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   This document defines one Extended Label Type, termed\
    \ the Bit-String\n   Label, and requests registration of the code point 000001\
    \ binary in\n   the space defined by [EDNS0].\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   All security considerations which apply to traditional\
    \ ASCII DNS\n   labels apply equally to binary labels.  he canonicalization and\n\
    \   sorting rules of section 3.3 allow these to be addressed by DNS\n   Security\
    \ [DNSSEC].\n"
- title: 8.  References
  contents:
  - "8.  References\n   [ABNF]   Crocker, D. and P. Overell, \"Augmented BNF for Syntax\n\
    \            Specifications: ABNF\", RFC 2234, November 1997.\n   [DNSIS]  Mockapetris,\
    \ P., \"Domain names - implementation and\n            specification\", STD 13,\
    \ RFC 1035, November 1987.\n   [DNSSEC] Eastlake, D., 3rd, C. Kaufman, \"Domain\
    \ Name System Security\n            Extensions\", RFC 2065, January 1997\n   [EDNS0]\
    \  Vixie, P., \"Extension mechanisms for DNS (EDNS0)\", RFC 2671,\n          \
    \  August 1999.\n   [KWORD]  Bradner, S., \"Key words for use in RFCs to Indicate\n\
    \            Requirement Levels,\" BCP 14, RFC 2119, March 1997.\n"
- title: 9.  Author's Address
  contents:
  - "9.  Author's Address\n   Matt Crawford\n   Fermilab MS 368\n   PO Box 500\n \
    \  Batavia, IL 60510\n   USA\n   Phone: +1 630 840-3461\n   EMail: crawdad@fnal.gov\n"
- title: 10.  Full Copyright Statement
  contents:
  - "10.  Full Copyright Statement\n   Copyright (C) The Internet Society (1999).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
