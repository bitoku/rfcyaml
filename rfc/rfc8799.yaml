- title: __initial_text__
  contents:
  - ''
- title: Independent Submission                                      B. Carpenter
  contents:
  - "Independent Submission                                      B. Carpenter\n  \
    \               Limited Domains and Internet Protocols\n"
- title: Abstract
  contents:
  - "Abstract\n   There is a noticeable trend towards network behaviors and semantics\n\
    \   that are specific to a particular set of requirements applied within\n   a\
    \ limited region of the Internet.  Policies, default parameters, the\n   options\
    \ supported, the style of network management, and security\n   requirements may\
    \ vary between such limited regions.  This document\n   reviews examples of such\
    \ limited domains (also known as controlled\n   environments), notes emerging\
    \ solutions, and includes a related\n   taxonomy.  It then briefly discusses the\
    \ standardization of protocols\n   for limited domains.  Finally, it shows the\
    \ need for a precise\n   definition of \"limited domain membership\" and for mechanisms\
    \ to allow\n   nodes to join a domain securely and to find other members, including\n\
    \   boundary nodes.\n   This document is the product of the research of the authors.\
    \  It has\n   been produced through discussions and consultation within the IETF\n\
    \   but is not the product of IETF consensus.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This is a contribution to\
    \ the RFC Series, independently of any other\n   RFC stream.  The RFC Editor has\
    \ chosen to publish this document at\n   its discretion and makes no statement\
    \ about its value for\n   implementation or deployment.  Documents approved for\
    \ publication by\n   the RFC Editor are not candidates for any level of Internet\
    \ Standard;\n   see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   https://www.rfc-editor.org/info/rfc8799.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2020 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction\n   2.  Failure Modes in Today's Internet\n\
    \   3.  Examples of Limited Domain Requirements\n   4.  Examples of Limited Domain\
    \ Solutions\n   5.  The Scope of Protocols in Limited Domains\n   6.  Functional\
    \ Requirements of Limited Domains\n   7.  Security Considerations\n   8.  IANA\
    \ Considerations\n   9.  Informative References\n   Appendix A.  Taxonomy of Limited\
    \ Domains\n     A.1.  Domain as a Whole\n     A.2.  Individual Nodes\n     A.3.\
    \  Domain Boundary\n     A.4.  Topology\n     A.5.  Technology\n     A.6.  Connection\
    \ to the Internet\n     A.7.  Security, Trust, and Privacy Model\n     A.8.  Operations\n\
    \     A.9.  Making Use of This Taxonomy\n   Acknowledgements\n   Contributors\n\
    \   Authors' Addresses\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   As the Internet continues to grow and diversify, with a\
    \ realistic\n   prospect of tens of billions of nodes being connected directly\
    \ and\n   indirectly, there is a noticeable trend towards network-specific and\n\
    \   local requirements, behaviors, and semantics.  The word \"local\"\n   should\
    \ be understood in a special sense, however.  In some cases, it\n   may refer\
    \ to geographical and physical locality -- all the nodes in a\n   single building,\
    \ on a single campus, or in a given vehicle.  In other\n   cases, it may refer\
    \ to a defined set of users or nodes distributed\n   over a much wider area, but\
    \ drawn together by a single virtual\n   network over the Internet, or a single\
    \ physical network running in\n   parallel with the Internet.  We expand on these\
    \ possibilities below.\n   To capture the topic, this document refers to such\
    \ networks as\n   \"limited domains\".  Of course, a similar situation may arise\
    \ for a\n   network that is completely disconnected from the Internet, but that\n\
    \   is not our direct concern here.  However, it should not be forgotten\n   that\
    \ interoperability is needed even within a disconnected network.\n   Some people\
    \ have concerns about splintering of the Internet along\n   political or linguistic\
    \ boundaries by mechanisms that block the free\n   flow of information.  That\
    \ is not the topic of this document, which\n   does not discuss filtering mechanisms\
    \ (see [RFC7754]) and does not\n   apply to protocols that are designed for use\
    \ across the whole\n   Internet.  It is only concerned with domains that have\
    \ specific\n   technical requirements.\n   The word \"domain\" in this document\
    \ does not refer to naming domains\n   in the DNS, although in some cases, a limited\
    \ domain might\n   incidentally be congruent with a DNS domain.  In particular,\
    \ with a\n   \"split horizon\" DNS configuration [RFC6950], the split might be\
    \ at\n   the edge of a limited domain.  A recent proposal for defining\n   definite\
    \ perimeters within the DNS namespace [DNS-PERIMETER] might\n   also be considered\
    \ to be a limited domain mechanism.\n   Another term that has been used in some\
    \ contexts is \"controlled\n   environment\".  For example, [RFC8085] uses this\
    \ to delimit the\n   operational scope within which a particular tunnel encapsulation\n\
    \   might be used.  A specific example is GRE-in-UDP encapsulation\n   [RFC8086],\
    \ which explicitly states that \"The controlled environment\n   has less restrictive\
    \ requirements than the general Internet.\"  For\n   example, non-congestion-controlled\
    \ traffic might be acceptable within\n   the controlled environment.  The same\
    \ phrase has been used to delimit\n   the useful scope of quality-of-service protocols\
    \ [RFC6398].  It is\n   not necessarily the case that protocols will fail to operate\
    \ outside\n   the controlled environment, but rather that they might not operate\n\
    \   optimally.  In this document, we assume that \"limited domain\" and\n   \"\
    controlled environment\" mean the same thing in practice.  The term\n   \"managed\
    \ network\" has been used in a similar way, e.g., [RFC6947].\n   In the context\
    \ of secure multicast, a \"group domain of\n   interpretation\" is defined by\
    \ [RFC6407].\n   Yet more definitions of types of domains are to be found in the\n\
    \   routing area, such as [RFC4397], [RFC4427], and [RFC4655].  We\n   conclude\
    \ that the notion of a limited domain is very widespread in\n   many aspects of\
    \ Internet technology.\n   The requirements of limited domains will depend on\
    \ the deployment\n   scenario.  Policies, default parameters, and the options\
    \ supported\n   may vary.  Also, the style of network management may vary between\
    \ a\n   completely unmanaged network, one with fully autonomic management,\n \
    \  one with traditional central management, and mixtures of the above.\n   Finally,\
    \ the requirements and solutions for security and privacy may\n   vary.\n   This\
    \ document analyzes and discusses some of the consequences of this\n   trend and\
    \ how it may impact the idea of universal interoperability in\n   the Internet.\
    \  First, we list examples of limited domain scenarios\n   and of technical solutions\
    \ for limited domains, with the main focus\n   being the Internet layer of the\
    \ protocol stack.  An appendix provides\n   a taxonomy of the features to be found\
    \ in limited domains.  With this\n   background, we discuss the resulting challenge\
    \ to the idea that all\n   Internet standards must be universal in scope and applicability.\
    \  To\n   the contrary, we assert that some protocols, although needing to be\n\
    \   standardized and interoperable, also need to be specifically limited\n   in\
    \ their applicability.  This implies that the concepts of a limited\n   domain,\
    \ and of its membership, need to be formalized and supported by\n   secure mechanisms.\
    \  While this document does not propose a design for\n   such mechanisms, it does\
    \ outline some functional requirements.\n   This document is the product of the\
    \ research of the authors.  It has\n   been produced through discussions and consultation\
    \ within the IETF\n   but is not the product of IETF consensus.\n"
- title: 2.  Failure Modes in Today's Internet
  contents:
  - "2.  Failure Modes in Today's Internet\n   Today, the Internet does not have a\
    \ well-defined concept of limited\n   domains.  One result of this is that certain\
    \ protocols and features\n   fail on certain paths.  Earlier analyses of this\
    \ topic have focused\n   either on the loss of transparency of the Internet [RFC2775]\n\
    \   [RFC4924] or on the middleboxes responsible for that loss [RFC3234]\n   [RFC7663]\
    \ [RFC8517].  Unfortunately, the problems persist both in\n   application protocols\
    \ and even in very fundamental mechanisms.  For\n   example, the Internet is not\
    \ transparent to IPv6 extension headers\n   [RFC7872], and Path MTU Discovery\
    \ has been unreliable for many years\n   [RFC2923] [RFC4821].  IP fragmentation\
    \ is also unreliable\n   [FRAG-FRAGILE], and problems in TCP MSS negotiation have\
    \ been\n   reported [IPV6-USE-MINMTU].\n   On the security side, the widespread\
    \ insertion of firewalls at domain\n   boundaries that are perceived by humans\
    \ but unknown to protocols\n   results in arbitrary failure modes as far as the\
    \ application layer is\n   concerned.  There are operational recommendations and\
    \ practices that\n   effectively guarantee arbitrary failures in realistic scenarios\n\
    \   [IPV6-EXT-HEADERS].\n   Domain boundaries that are defined administratively\
    \ (e.g., by address\n   filtering rules in routers) are prone to leakage caused\
    \ by human\n   error, especially if the limited domain traffic appears otherwise\n\
    \   normal to the boundary routers.  In this case, the network operator\n   needs\
    \ to take active steps to protect the boundary.  This form of\n   leakage is much\
    \ less likely if nodes must be explicitly configured to\n   handle a given limited-domain\
    \ protocol, for example, by installing a\n   specific protocol handler.\n   Investigations\
    \ of the unreliability of IP fragmentation\n   [FRAG-FRAGILE] and the filtering\
    \ of IPv6 extension headers [RFC7872]\n   strongly suggest that at least for some\
    \ protocol elements,\n   transparency is a lost cause and middleboxes are here\
    \ to stay.  In\n   the following two sections, we show that some application\n\
    \   environments require protocol features that cannot, or should not,\n   cross\
    \ the whole Internet.\n"
- title: 3.  Examples of Limited Domain Requirements
  contents:
  - "3.  Examples of Limited Domain Requirements\n   This section describes various\
    \ examples where limited domain\n   requirements can easily be identified, either\
    \ based on an application\n   scenario or on a technical imperative.  It is, of\
    \ course, not a\n   complete list, and it is presented in an arbitrary order,\
    \ loosely\n   from smaller to bigger.\n   1.   A home network.  It will be mainly\
    \ unmanaged, constructed by a\n        non-specialist.  It must work with devices\
    \ \"out of the box\" as\n        shipped by their manufacturers and must create\
    \ adequate security\n        by default.  Remote access may be required.  The\
    \ requirements\n        and applicable principles are summarized in [RFC7368].\n\
    \   2.   A small office network.  This is sometimes very similar to a\n      \
    \  home network, if whoever is in charge has little or no\n        specialist\
    \ knowledge, but may have differing security and\n        privacy requirements.\
    \  In other cases, it may be professionally\n        constructed using recommended\
    \ products and configurations but\n        operate unmanaged.  Remote access may\
    \ be required.\n   3.   A vehicle network.  This will be designed by the vehicle\n\
    \        manufacturer but may include devices added by the vehicle's\n       \
    \ owner or operator.  Parts of the network will have demanding\n        performance\
    \ and reliability requirements with implications for\n        human safety.  Remote\
    \ access may be required to certain\n        functions but absolutely forbidden\
    \ for others.  Communication\n        with other vehicles, roadside infrastructure,\
    \ and external data\n        sources will be required.  See [IPWAVE-NETWORKING]\
    \ for a survey\n        of use cases.\n   4.   Supervisory Control And Data Acquisition\
    \ (SCADA) networks and\n        other hard real-time networks.  These will exhibit\
    \ specific\n        technical requirements, including tough real-time performance\n\
    \        targets.  See, for example, [RFC8578] for numerous use cases.\n     \
    \   An example is a building services network.  This will be\n        designed\
    \ specifically for a particular building but using\n        standard components.\
    \  Additional devices may need to be added at\n        any time.  Parts of the\
    \ network may have demanding reliability\n        requirements with implications\
    \ for human safety.  Remote access\n        may be required to certain functions\
    \ but absolutely forbidden\n        for others.  An extreme example is a network\
    \ used for virtual\n        reality or augmented reality applications where the\
    \ latency\n        requirements are very stringent.\n   5.   Sensor networks.\
    \  The two preceding cases will all include\n        sensors, but some networks\
    \ may be specifically limited to\n        sensors and the collection and processing\
    \ of sensor data.  They\n        may be in remote or technically challenging locations\
    \ and\n        installed by non-specialists.\n   6.   Internet-of-Things (IoT)\
    \ networks.  While this term is very\n        flexible and covers many innovative\
    \ types of networks, including\n        ad hoc networks that are formed spontaneously\
    \ and some\n        applications of 5G technology, it seems reasonable to expect\n\
    \        that IoT edge networks will have special requirements and\n        protocols\
    \ that are useful only within a specific domain, and\n        that these protocols\
    \ cannot, and for security reasons should\n        not, run over the Internet\
    \ as a whole.\n   7.   Constrained Networks.  An important subclass of IoT networks\n\
    \        consists of constrained networks [RFC7228] in which the nodes\n     \
    \   are limited in power consumption and communications bandwidth\n        and\
    \ are therefore limited to using very frugal protocols.\n   8.   Delay-tolerant\
    \ networks.  These may consist of domains that are\n        relatively isolated\
    \ and constrained in power (e.g., deep space\n        networks) and are connected\
    \ only intermittently to the outside,\n        with a very long latency on such\
    \ connections [RFC4838].\n        Clearly, the protocol requirements and possibilities\
    \ are very\n        specialized in such networks.\n   9.   \"Traditional\" enterprise\
    \ and campus networks, which may be\n        spread over many kilometers and over\
    \ multiple separate sites,\n        with multiple connections to the Internet.\
    \  Interestingly, the\n        IETF appears never to have analyzed this long-established\
    \ class\n        of networks in a general way, except in connection with IPv6\n\
    \        deployment (e.g., [RFC7381]).\n   10.  Unsuitable standards.  A situation\
    \ that can arise in an\n        enterprise network is that the Internet-wide solution\
    \ for a\n        particular requirement may either fail locally or be much more\n\
    \        complicated than is necessary.  An example is that the\n        complexity\
    \ induced by a mechanism such as Interactive\n        Connectivity Establishment\
    \ (ICE) [RFC8445] is not justified\n        within such a network.  Furthermore,\
    \ ICE cannot be used in some\n        cases because candidate addresses are not\
    \ known before a call is\n        established, so a different local solution is\
    \ essential\n        [RFC6947].\n   11.  Managed wide-area networks run by service\
    \ providers for\n        enterprise services such as Layer 2 (Ethernet, etc.)\
    \ point-to-\n        point pseudowires, multipoint Layer 2 Ethernet VPNs using\n\
    \        Virtual Private LAN Service (VPLS) or Ethernet VPN (EVPN), and\n    \
    \    Layer 3 IP VPNs.  These are generally characterized by service-\n       \
    \ level agreements for availability, packet loss, and possibly\n        multicast\
    \ service.  These are different from the previous case\n        in that they mostly\
    \ run over MPLS infrastructures, and the\n        requirements for these services\
    \ are well defined by the IETF.\n   12.  Data centers and hosting centers, or\
    \ distributed services acting\n        as such centers.  These will have high\
    \ performance, security,\n        and privacy requirements and will typically\
    \ include large\n        numbers of independent \"tenant\" networks overlaid on\
    \ shared\n        infrastructure.\n   13.  Content Delivery Networks (CDNs), comprising\
    \ distributed data\n        centers and the paths between them, spanning thousands\
    \ of\n        kilometers, with numerous connections to the Internet.\n   14. \
    \ Massive Web Service Provider Networks.  This is a small class of\n        networks\
    \ with well-known trademarked names, combining aspects of\n        distributed\
    \ enterprise networks, data centers, and CDNs.  They\n        have their own international\
    \ networks bypassing the generic\n        carriers.  Like CDNs, they have numerous\
    \ connections to the\n        Internet, typically offering a tailored service\
    \ in each economy.\n   Three other aspects, while not tied to specific network\
    \ types, also\n   strongly depend on the concept of limited domains:\n   1.  Many\
    \ of the above types of networks may be extended throughout\n       the Internet\
    \ by a variety of virtual private network (VPN)\n       techniques.  Therefore,\
    \ we argue that limited domains may overlap\n       each other in an arbitrary\
    \ fashion by use of virtualization\n       techniques.  As noted above in the\
    \ discussion of controlled\n       environments, specific tunneling and encapsulation\
    \ techniques may\n       be tailored for use within a given domain.\n   2.  Intent-Based\
    \ Networking.  In this concept, a network domain is\n       configured and managed\
    \ in accordance with an abstract policy\n       known as \"Intent\" to ensure\
    \ that the network performs as required\n       [IBN-CONCEPTS].  Whatever technologies\
    \ are used to support this\n       will be applied within the domain boundary,\
    \ even if the services\n       supported in the domain are globally accessible.\n\
    \   3.  Network Slicing.  A network slice is a form of virtual network\n     \
    \  that consists of a managed set of resources carved off from a\n       larger\
    \ network [ENHANCED-VPN].  This is expected to be\n       significant in 5G deployments\
    \ [USER-PLANE-PROTOCOL].  Whatever\n       technologies are used to support slicing\
    \ will require a clear\n       definition of the boundary of a given slice within\
    \ a larger\n       domain.\n   While it is clearly desirable to use common solutions,\
    \ and therefore\n   common standards, wherever possible, it is increasingly difficult\
    \ to\n   do so while satisfying the widely varying requirements outlined\n   above.\
    \  However, there is a tendency when new protocols and protocol\n   extensions\
    \ are proposed to always ask the question \"How will this\n   work across the\
    \ open Internet?\"  This document suggests that this is\n   not always the best\
    \ question.  There are protocols and extensions\n   that are not intended to work\
    \ across the open Internet.  On the\n   contrary, their requirements and semantics\
    \ are specifically limited\n   (in the sense defined above).\n   A common argument\
    \ is that if a protocol is intended for limited use,\n   the chances are very\
    \ high that it will in fact be used (or misused)\n   in other scenarios including\
    \ the so-called open Internet.  This is\n   undoubtedly true and means that limited\
    \ use is not an excuse for bad\n   design or poor security.  In fact, a limited\
    \ use requirement\n   potentially adds complexity to both the protocol and its\
    \ security\n   design, as discussed later.\n   Nevertheless, because of the diversity\
    \ of limited domains with\n   specific requirements that is now emerging, specific\
    \ standards (and\n   ad hoc standards) will probably emerge for different types\
    \ of\n   domains.  There will be attempts to capture each market sector, but\n\
    \   the market will demand standardized solutions within each sector.  In\n  \
    \ addition, operational choices will be made that can in fact only work\n   within\
    \ a limited domain.  The history of RSVP [RFC2205] illustrates\n   that a standard\
    \ defined as if it could work over the open Internet\n   might not in fact do\
    \ so.  In general, we can no longer assume that a\n   protocol designed according\
    \ to classical Internet guidelines will in\n   fact work reliably across the network\
    \ as a whole.  However, the \"open\n   Internet\" must remain as the universal\
    \ method of interconnection.\n   Reconciling these two aspects is a major challenge.\n"
- title: 4.  Examples of Limited Domain Solutions
  contents:
  - "4.  Examples of Limited Domain Solutions\n   This section lists various examples\
    \ of specific limited domain\n   solutions that have been proposed or defined.\
    \  It intentionally does\n   not include Layer 2 technology solutions, which by\
    \ definition apply\n   to limited domains.  It is worth noting, however, that\
    \ with recent\n   developments such as Transparent Interconnection of Lots of\
    \ Links\n   (TRILL) [RFC6325] or Shortest Path Bridging [SPB], Layer 2 domains\n\
    \   may become very large.\n   1.   Differentiated Services.  This mechanism [RFC2474]\
    \ allows a\n        network to assign locally significant values to the 6-bit\n\
    \        Differentiated Services Code Point field in any IP packet.\n        Although\
    \ there are some recommended code point values for\n        specific per-hop queue\
    \ management behaviors, these are\n        specifically intended to be domain-specific\
    \ code points with\n        traffic being classified, conditioned, and mapped\
    \ or re-marked\n        at domain boundaries (unless there is an inter-domain\
    \ agreement\n        that makes mapping or re-marking unnecessary).\n   2.   Integrated\
    \ Services.  Although it is not intrinsic in the design\n        of RSVP [RFC2205],\
    \ it is clear from many years' experience that\n        Integrated Services can\
    \ only be deployed successfully within a\n        limited domain that is configured\
    \ with adequate equipment and\n        resources.\n   3.   Network function virtualization.\
    \  As described in [RFC8568],\n        this general concept is an open research\
    \ topic in which virtual\n        network functions are orchestrated as part of\
    \ a distributed\n        system.  Inevitably, such orchestration applies to an\n\
    \        administrative domain of some kind, even though cross-domain\n      \
    \  orchestration is also a research area.\n   4.   Service Function Chaining (SFC).\
    \  This technique [RFC7665]\n        assumes that services within a network are\
    \ constructed as\n        sequences of individual service functions within a specific\
    \ SFC-\n        enabled domain such as a 5G domain.  As that RFC states:\n   \
    \     \"Specific features may need to be enforced at the boundaries of\n     \
    \   an SFC-enabled domain, for example to avoid leaking SFC\n        information\"\
    .  A Network Service Header (NSH) [RFC8300] is used\n        to encapsulate packets\
    \ flowing through the service function\n        chain: \"The intended scope of\
    \ the NSH is for use within a single\n        provider's operational domain.\"\
    \n   5.   Firewall and Service Tickets (FAST).  Such tickets would\n        accompany\
    \ a packet to claim the right to traverse a network or\n        request a specific\
    \ network service [FAST].  They would only be\n        meaningful within a particular\
    \ domain.\n   6.   Data Center Network Virtualization Overlays.  A common\n  \
    \      requirement in data centers that host many tenants (clients) is\n     \
    \   to provide each one with a secure private network, all running\n        over\
    \ the same physical infrastructure.  [RFC8151] describes\n        various use\
    \ cases for this, and specifications are under\n        development.  These include\
    \ use cases in which the tenant\n        network is physically split over several\
    \ data centers, but which\n        must appear to the user as a single secure\
    \ domain.\n   7.   Segment Routing.  This is a technique that \"steers a packet\n\
    \        through an ordered list of instructions, called segments\"\n        [RFC8402].\
    \  The semantics of these instructions are explicitly\n        local to a segment\
    \ routing domain or even to a single node.\n        Technically, these segments\
    \ or instructions are represented as\n        an MPLS label or an IPv6 address,\
    \ which clearly adds a semantic\n        interpretation to them within the domain.\n\
    \   8.   Autonomic Networking.  As explained in [REF-MODEL], an autonomic\n  \
    \      network is also a security domain within which an autonomic\n        control\
    \ plane [ACP] is used by autonomic service agents.  These\n        agents manage\
    \ technical objectives, which may be locally\n        defined, subject to domain-wide\
    \ policy.  Thus, the domain\n        boundary is important for both security and\
    \ protocol purposes.\n   9.   Homenet.  As shown in [RFC7368], a home networking\
    \ domain has\n        specific protocol needs that differ from those in an enterprise\n\
    \        network or the Internet as a whole.  These include the Home\n       \
    \ Network Control Protocol (HNCP) [RFC7788] and a naming and\n        discovery\
    \ solution [HOMENET-NAMING].\n   10.  Creative uses of IPv6 features.  As IPv6\
    \ enters more general\n        use, engineers notice that it has much more flexibility\
    \ than\n        IPv4.  Innovative suggestions have been made for:\n        * \
    \ The flow label, e.g., [RFC6294].\n        *  Extension headers, e.g., for segment\
    \ routing [RFC8754] or\n           Operations, Administration, and Maintenance\
    \ (OAM) marking\n           [IPV6-ALT-MARK].\n        *  Meaningful address bits,\
    \ e.g., [EMBEDDED-SEMANTICS].  Also,\n           segment routing uses IPv6 addresses\
    \ as segment identifiers\n           with specific local meanings [RFC8402].\n\
    \        *  If segment routing is used for network programming\n           [SRV6-NETWORK],\
    \ IPv6 extension headers can support rather\n           complex local functionality.\n\
    \        The case of the extension header is particularly interesting,\n     \
    \   since its existence has been a major \"selling point\" for IPv6,\n       \
    \ but new extension headers are notorious for being virtually\n        impossible\
    \ to deploy across the whole Internet [RFC7045]\n        [RFC7872].  It is worth\
    \ noting that extension header filtering\n        is considered an important security\
    \ issue [IPV6-EXT-HEADERS].\n        There is considerable appetite among vendors\
    \ or operators to\n        have flexibility in defining extension headers for\
    \ use in\n        limited or specialized domains, e.g., [IPV6-SRH], [BIGIP], and\n\
    \        [APP-AWARE].  Locally significant hop-by-hop options are also\n     \
    \   envisaged, that would be understood by routers inside a domain\n        but\
    \ not elsewhere, e.g., [IN-SITU-OAM].\n   11.  Deterministic Networking (DetNet).\
    \  The Deterministic Networking\n        Architecture [RFC8655] and encapsulation\
    \ [DETNET-DATA-PLANE] aim\n        to support flows with extremely low data loss\
    \ rates and bounded\n        latency but only within a part of the network that\
    \ is \"DetNet\n        aware\".  Thus, as for Differentiated Services above, the\
    \ concept\n        of a domain is fundamental.\n   12.  Provisioning Domains (PvDs).\
    \  An architecture for Multiple\n        Provisioning Domains has been defined\
    \ [RFC7556] to allow hosts\n        attached to multiple networks to learn explicit\
    \ details about\n        the services provided by each of those networks.\n  \
    \ 13.  Address Scopes.  For completeness, we mention that, particularly\n    \
    \    in IPv6, some addresses have explicitly limited scope.  In\n        particular,\
    \ link-local addresses are limited to a single\n        physical link [RFC4291],\
    \ and Unique Local Addresses [RFC4193]\n        are limited to a somewhat loosely\
    \ defined local site scope.\n        Previously, site-local addresses were defined,\
    \ but they were\n        obsoleted precisely because of \"the fuzzy nature of\
    \ the site\n        concept\" [RFC3879].  Multicast addresses also have explicit\n\
    \        scoping [RFC4291].\n   14.  As an application-layer example, consider\
    \ streaming services\n        such as IPTV infrastructures that rely on standard\
    \ protocols,\n        but for which access is not globally available.\n   All\
    \ of these suggestions are only viable within a specified domain.\n   Nevertheless,\
    \ all of them are clearly intended for multivendor\n   implementation on thousands\
    \ or millions of network domains, so\n   interoperable standardization would be\
    \ beneficial.  This argument\n   might seem irrelevant to private or proprietary\
    \ implementations, but\n   these have a strong tendency to become de facto standards\
    \ if they\n   succeed, so the arguments of this document still apply.\n"
- title: 5.  The Scope of Protocols in Limited Domains
  contents:
  - "5.  The Scope of Protocols in Limited Domains\n   One consequence of the deployment\
    \ of limited domains in the Internet\n   is that some protocols will be designed,\
    \ extended, or configured so\n   that they only work correctly between end systems\
    \ in such domains.\n   This is to some extent encouraged by some existing standards\
    \ and by\n   the assignment of code points for local or experimental use.  In\
    \ any\n   case, it cannot be prevented.  Also, by endorsing efforts such as\n\
    \   Service Function Chaining, Segment Routing, and Deterministic\n   Networking,\
    \ the IETF is in effect encouraging such deployments.\n   Furthermore, it seems\
    \ inevitable, if the Internet of Things becomes\n   reality, that millions of\
    \ edge networks containing completely novel\n   types of nodes will be connected\
    \ to the Internet; each one of these\n   edge networks will be a limited domain.\n\
    \   It is therefore appropriate to discuss whether protocols or protocol\n   extensions\
    \ should sometimes be standardized to interoperate only\n   within a limited-domain\
    \ boundary.  Such protocols would not be\n   required to interoperate across the\
    \ Internet as a whole.  Various\n   scenarios could then arise if there are multiple\
    \ domains using the\n   limited-domain protocol in question:\n   A.  If a domain\
    \ is split into two parts connected over the Internet\n       directly at the\
    \ IP layer (i.e., with no tunnel encapsulating the\n       packets), a limited-domain\
    \ protocol could be operated between\n       those two parts regardless of its\
    \ special nature, as long as it\n       respects standard IP formats and is not\
    \ arbitrarily blocked by\n       firewalls.  A simple example is any protocol\
    \ using a port number\n       assigned to a specific non-IETF protocol.\n    \
    \   Such a protocol could reasonably be described as an \"inter-\n       domain\"\
    \ protocol because the Internet is transparent to it, even\n       if it is meaningless\
    \ except in the two limited domains.  This is,\n       of course, nothing new\
    \ in the Internet architecture.\n   B.  If a limited-domain protocol does not\
    \ respect standard IP formats\n       (for example, if it includes a non-standard\
    \ IPv6 extension\n       header), it could not be operated between two domains\
    \ connected\n       over the Internet directly at the IP layer.\n       Such a\
    \ protocol could reasonably be described as an \"intra-\n       domain\" protocol,\
    \ and the Internet is opaque to it.\n   C.  If a limited-domain protocol is clearly\
    \ specified to be invalid\n       outside its domain of origin, neither scenario\
    \ A nor B applies.\n       The only solution would be a single virtual domain.\
    \  For example,\n       an encapsulating tunnel between two domains could be used\
    \ to\n       create the virtual domain.  Also, nodes at the domain boundary\n\
    \       must drop all packets using the limited-domain protocol.\n   D.  If a\
    \ limited-domain protocol has domain-specific variants, such\n       that implementations\
    \ in different domains could not interoperate\n       if those domains were unified\
    \ by some mechanism as in scenario C,\n       the protocol is not interoperable\
    \ in the normal sense.  If two\n       domains using it were merged, the protocol\
    \ might fail\n       unpredictably.  A simple example is any protocol using a\
    \ port\n       number assigned for experimental use.  Related issues are\n   \
    \    discussed in [RFC5704], including the complex example of\n       Transport\
    \ MPLS.\n   To provide a widespread example, consider Differentiated Services\n\
    \   [RFC2474].  A packet containing any value whatsoever in the 6 bits of\n  \
    \ the Differentiated Services Code Point (DSCP) is well formed and\n   falls into\
    \ scenario A.  However, because the semantics of DSCP values\n   are locally significant,\
    \ the packet also falls into scenario D.  In\n   fact, Differentiated Services\
    \ are only interoperable across domain\n   boundaries if there is a corresponding\
    \ agreement between the\n   operators; otherwise, a specific gateway function\
    \ is required for\n   meaningful interoperability.  Much more detailed discussion\
    \ is found\n   in [RFC2474] and [RFC8100].\n   To provide a provocative example,\
    \ consider the proposal in [IPV6-SRH]\n   that the restrictions in [RFC8200] should\
    \ be relaxed to allow IPv6\n   extension headers to be inserted on the fly in\
    \ IPv6 packets.  If this\n   is done in such a way that the affected packets can\
    \ never leave the\n   specific limited domain in which they were modified, scenario\
    \ C\n   applies.  If the semantic content of the inserted headers is locally\n\
    \   defined, scenario D also applies.  In neither case is the Internet\n   outside\
    \ the limited domain disturbed.  However, inside the domain,\n   nodes must understand\
    \ the variant protocol.  Unless it is\n   standardized as a formal version, with\
    \ all the complexity that\n   implies [RFC6709], the nodes must all be non-standard\
    \ to the extent\n   of understanding the variant protocol.  For the example of\
    \ IPv6\n   header insertion, that means non-compliance with [RFC8200] within the\n\
    \   domain, even if the inserted headers are themselves fully compliant.\n   Apart\
    \ from the issue of formal compliance, such deviations from\n   documented standard\
    \ behavior might lead to significant debugging\n   issues.  The possible practical\
    \ impact of the header insertion\n   example is explored in [IN-FLIGHT-IPV6].\n\
    \   The FAST proposal mentioned in Section 4, Paragraph 2, Item 5 is also\n  \
    \ an interesting case study.  The semantics of FAST tickets [FAST] have\n   limited\
    \ scope.  However, they are designed in a way that, in\n   principle, allows them\
    \ to traverse the open Internet, as standardized\n   IPv6 hop-by-hop options or\
    \ even as a proposed form of IPv4 extension\n   header [IPV4-EXT-HEADERS].  Whether\
    \ such options can be used reliably\n   across the open Internet remains unclear\
    \ [IPV6-EXT-HEADERS].\n   We conclude that it is reasonable to explicitly define\
    \ limited-domain\n   protocols, either as standards or as proprietary mechanisms,\
    \ as long\n   as they describe which of the above scenarios apply and they clarify\n\
    \   how the domain is defined.  As long as all relevant standards are\n   respected\
    \ outside the domain boundary, a well-specified limited-\n   domain protocol need\
    \ not damage the rest of the Internet.  However,\n   as described in the next\
    \ section, mechanisms are needed to support\n   domain membership operations.\n\
    \   Note that this conclusion is not a recommendation to abandon the\n   normal\
    \ goal that a standardized protocol should be global in scope\n   and able to\
    \ interoperate across the open Internet.  It is simply a\n   recognition that\
    \ this will not always be the case.\n"
- title: 6.  Functional Requirements of Limited Domains
  contents:
  - "6.  Functional Requirements of Limited Domains\n   Noting that limited-domain\
    \ protocols have been defined in the past,\n   and that others will undoubtedly\
    \ be defined in the future, it is\n   useful to consider how a protocol can be\
    \ made aware of the domain\n   within which it operates and how the domain boundary\
    \ nodes can be\n   identified.  As the taxonomy in Appendix A shows, there are\
    \ numerous\n   aspects to a domain.  However, we can identify some generally\n\
    \   required features and functions that would apply partially or\n   completely\
    \ to many cases.\n   Today, where limited domains exist, they are essentially\
    \ created by\n   careful configuration of boundary routers and firewalls.  If\
    \ a domain\n   is characterized by one or more address prefixes, address assignment\n\
    \   to hosts must also be carefully managed.  This is an error-prone\n   method,\
    \ and a combination of configuration errors and default routing\n   can lead to\
    \ unwanted traffic escaping the domain.  Our basic\n   assumption is therefore\
    \ that it should be possible for domains to be\n   created and managed automatically,\
    \ with minimal human configuration.\n   We now discuss requirements for automating\
    \ domain creation and\n   management.\n   First, if we drew a topology map, any\
    \ given domain -- virtual or\n   physical -- will have a well-defined boundary\
    \ between \"inside\" and\n   \"outside\".  However, that boundary in itself has\
    \ no technical\n   meaning.  What matters in reality is whether a node is a member\
    \ of\n   the domain and whether it is at the boundary between the domain and\n\
    \   the rest of the Internet.  Thus, the boundary in itself does not need\n  \
    \ to be identified, but boundary nodes face both inwards and outwards.\n   Inside\
    \ the domain, a sending node needs to know whether it is sending\n   to an inside\
    \ or outside destination, and a receiving node needs to\n   know whether a packet\
    \ originated inside or outside.  Also, a boundary\n   node needs to know which\
    \ of its interfaces are inward facing or\n   outward facing.  It is irrelevant\
    \ whether the interfaces involved are\n   physical or virtual.\n   To underline\
    \ that domain boundaries need to be identifiable, consider\n   the statement from\
    \ the Deterministic Networking Problem Statement\n   [RFC8557] that \"there is\
    \ still a lack of clarity regarding the limits\n   of a domain where a deterministic\
    \ path can be set up\".  This remark\n   can certainly be generalized.\n   With\
    \ this perspective, we can list some general functional\n   requirements.  An\
    \ underlying assumption here is that domain\n   membership operations should be\
    \ cryptographically secured; a domain\n   without such security cannot be reliably\
    \ protected from attack.\n   1.   Domain Identity.  A domain must have a unique\
    \ and verifiable\n        identifier; effectively, this should be a public key\
    \ for the\n        domain.  Without this, there is no way to secure domain\n \
    \       operations and domain membership.  The holder of the\n        corresponding\
    \ private key becomes the trust anchor for the\n        domain.\n   2.   Nesting.\
    \  It must be possible for domains to be nested (see, for\n        example, the\
    \ network-slicing example mentioned above).\n   3.   Overlapping.  It must be\
    \ possible for nodes and links to be in\n        more than one domain (see, for\
    \ example, the case of PvDs\n        mentioned above).\n   4.   Node Eligibility.\
    \  It must be possible for a node to determine\n        which domain(s) it can\
    \ potentially join and on which\n        interface(s).\n   5.   Secure Enrollment.\
    \  A node must be able to enroll in a given\n        domain via secure node identification\
    \ and to acquire relevant\n        security credentials (authorization) for operations\
    \ within the\n        domain.  If a node has multiple physical or virtual interfaces,\n\
    \        individual enrollment for each interface may be required.\n   6.   Withdrawal.\
    \  A node must be able to cancel enrollment in a given\n        domain.\n   7.\
    \   Dynamic Membership.  Optionally, a node should be able to\n        temporarily\
    \ leave or rejoin a domain (i.e., enrollment is\n        persistent but membership\
    \ is intermittent).\n   8.   Role, implying authorization to perform a certain\
    \ set of\n        actions.  A node must have a verifiable role.  In the simplest\n\
    \        case, the role choices are \"interior node\" and \"boundary node\".\n\
    \        In a boundary node, individual interfaces may have different\n      \
    \  roles, e.g., \"inward facing\" and \"outward facing\".\n   9.   Peer Verification.\
    \  A node must be able to verify whether\n        another node is a member of\
    \ the domain.\n   10.  Role Verification.  A node should be able to learn the\
    \ verified\n        role of another node.  In particular, it should be possible\
    \ for\n        a node to find boundary nodes (interfacing to the Internet).\n\
    \   11.  Domain Data.  In a domain with management requirements, it must\n   \
    \     be possible for a node to acquire domain policy and/or domain\n        configuration\
    \ data.  This would include, for example, filtering\n        policy to ensure\
    \ that inappropriate packets do not leave the\n        domain.\n   These requirements\
    \ could form the basis for further analysis and\n   solution design.\n   Another\
    \ aspect is whether individual packets within a limited domain\n   need to carry\
    \ any sort of indicator that they belong to that domain\n   or whether this information\
    \ will be implicit in the IP addresses of\n   the packet.  A related question\
    \ is whether individual packets need\n   cryptographic authentication.  This topic\
    \ is for further study.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   As noted above, a protocol intended for limited\
    \ use may well be\n   inadvertently used on the open Internet, so limited use\
    \ is not an\n   excuse for poor security.  In fact, a limited use requirement\n\
    \   potentially adds complexity to the security design.\n   Often, the boundary\
    \ of a limited domain will also act as a security\n   boundary.  In particular,\
    \ it will serve as a trust boundary and as a\n   boundary of authority for defining\
    \ capabilities.  For example,\n   segment routing [RFC8402] explicitly uses the\
    \ concept of a \"trusted\n   domain\" in this way.  Within the boundary, limited-domain\
    \ protocols\n   or protocol features will be useful, but they will in many cases\
    \ be\n   meaningless or harmful if they enter or leave the domain.\n   The boundary\
    \ also serves to provide confidentiality and privacy for\n   operational parameters\
    \ that the operator does not wish to reveal.\n   Note that this is distinct from\
    \ privacy protection for individual\n   users within the domain.\n   The security\
    \ model for a limited-scope protocol must allow for the\n   boundary and in particular\
    \ for a trust model that changes at the\n   boundary.  Typically, credentials\
    \ will need to be signed by a domain-\n   specific authority.\n"
- title: 8.  IANA Considerations
  contents:
  - "8.  IANA Considerations\n   This document has no IANA actions.\n"
- title: 9.  Informative References
  contents:
  - "9.  Informative References\n   [ACP]      Eckert, T., Behringer, M., and S. Bjarnason,\
    \ \"An Autonomic\n              Control Plane (ACP)\", Work in Progress, Internet-Draft,\n\
    \              draft-ietf-anima-autonomic-control-plane-27, 2 July 2020,\n   \
    \           <https://tools.ietf.org/html/draft-ietf-anima-autonomic-\n       \
    \       control-plane-27>.\n   [APP-AWARE]\n              Li, Z., Peng, S., Li,\
    \ C., Xie, C., Voyer, D., Li, X., Liu,\n              P., Liu, C., and K. Ebisawa,\
    \ \"Application-aware IPv6\n              Networking (APN6) Encapsulation\", Work\
    \ in Progress,\n              Internet-Draft, draft-li-6man-app-aware-ipv6-network-02,\
    \ 2\n              July 2020, <https://tools.ietf.org/html/draft-li-6man-app-\n\
    \              aware-ipv6-network-02>.\n   [BIGIP]    Li, R., \"HUAWEI - Big IP\
    \ Initiative\", 2018,\n              <https://www.iaria.org/announcements/HuaweiBigIP.pdf>.\n\
    \   [DETNET-DATA-PLANE]\n              Varga, B., Farkas, J., Berger, L., Malis,\
    \ A., and S.\n              Bryant, \"DetNet Data Plane Framework\", Work in Progress,\n\
    \              Internet-Draft, draft-ietf-detnet-data-plane-framework-06,\n  \
    \            6 May 2020, <https://tools.ietf.org/html/draft-ietf-\n          \
    \    detnet-data-plane-framework-06>.\n   [DNS-PERIMETER]\n              Crocker,\
    \ D. and T. Adams, \"DNS Perimeter Overlay\", Work in\n              Progress,\
    \ Internet-Draft, draft-dcrocker-dns-perimeter-01,\n              11 June 2019,\
    \ <https://tools.ietf.org/html/draft-dcrocker-\n              dns-perimeter-01>.\n\
    \   [EMBEDDED-SEMANTICS]\n              Jiang, S., Qiong, Q., Farrer, I., Bo,\
    \ Y., and T. Yang,\n              \"Analysis of Semantic Embedded IPv6 Address\
    \ Schemas\", Work\n              in Progress, Internet-Draft, draft-jiang-semantic-prefix-\n\
    \              06, 15 July 2013, <https://tools.ietf.org/html/draft-\n       \
    \       jiang-semantic-prefix-06>.\n   [ENHANCED-VPN]\n              Dong, J.,\
    \ Bryant, S., Li, Z., Miyasaka, T., and Y. Lee, \"A\n              Framework for\
    \ Enhanced Virtual Private Networks (VPN+)\n              Service\", Work in Progress,\
    \ Internet-Draft, draft-ietf-\n              teas-enhanced-vpn-06, 13 July 2020,\n\
    \              <https://tools.ietf.org/html/draft-ietf-teas-enhanced-vpn-\n  \
    \            06>.\n   [FAST]     Herbert, T., \"Firewall and Service Tickets\"\
    , Work in\n              Progress, Internet-Draft, draft-herbert-fast-04, 10 April\n\
    \              2019, <https://tools.ietf.org/html/draft-herbert-fast-04>.\n  \
    \ [FRAG-FRAGILE]\n              Bonica, R., Baker, F., Huston, G., Hinden, R.,\
    \ Troan, O.,\n              and F. Gont, \"IP Fragmentation Considered Fragile\"\
    , Work\n              in Progress, Internet-Draft, draft-ietf-intarea-frag-\n\
    \              fragile-17, 30 September 2019,\n              <https://tools.ietf.org/html/draft-ietf-intarea-frag-\n\
    \              fragile-17>.\n   [HOMENET-NAMING]\n              Lemon, T., Migault,\
    \ D., and S. Cheshire, \"Homenet Naming\n              and Service Discovery Architecture\"\
    , Work in Progress,\n              Internet-Draft, draft-ietf-homenet-simple-naming-03,\
    \ 23\n              October 2018, <https://tools.ietf.org/html/draft-ietf-\n \
    \             homenet-simple-naming-03>.\n   [IBN-CONCEPTS]\n              Clemm,\
    \ A., Ciavaglia, L., Granville, L., and J. Tantsura,\n              \"Intent-Based\
    \ Networking - Concepts and Definitions\", Work\n              in Progress, Internet-Draft,\
    \ draft-irtf-nmrg-ibn-concepts-\n              definitions-01, 9 March 2020,\n\
    \              <https://tools.ietf.org/html/draft-irtf-nmrg-ibn-concepts-\n  \
    \            definitions-01>.\n   [IN-FLIGHT-IPV6]\n              Smith, M., Kottapalli,\
    \ N., Bonica, R., Gont, F., and T.\n              Herbert, \"In-Flight IPv6 Extension\
    \ Header Insertion\n              Considered Harmful\", Work in Progress, Internet-Draft,\n\
    \              draft-smith-6man-in-flight-eh-insertion-harmful-02, 30 May\n  \
    \            2020, <https://tools.ietf.org/html/draft-smith-6man-in-\n       \
    \       flight-eh-insertion-harmful-02>.\n   [IN-SITU-OAM]\n              Bhandari,\
    \ S., Brockners, F., Pignataro, C., Gredler, H.,\n              Leddy, J., Youell,\
    \ S., Mizrahi, T., Kfir, A., Gafni, B.,\n              Lapukhov, P., Spiegel,\
    \ M., Krishnan, S., and R. Asati,\n              \"In-situ OAM IPv6 Options\"\
    , Work in Progress, Internet-\n              Draft, draft-ietf-ippm-ioam-ipv6-options-02,\
    \ 13 July 2020,\n              <https://tools.ietf.org/html/draft-ietf-ippm-ioam-ipv6-\n\
    \              options-02>.\n   [IPV4-EXT-HEADERS]\n              Herbert, T.,\
    \ \"IPv4 Extension Headers and Flow Label\", Work\n              in Progress,\
    \ Internet-Draft, draft-herbert-ipv4-eh-01, 2\n              May 2019,\n     \
    \         <https://tools.ietf.org/html/draft-herbert-ipv4-eh-01>.\n   [IPV6-ALT-MARK]\n\
    \              Fioccola, G., Zhou, T., Cociglio, M., Qin, F., and R.\n       \
    \       Pang, \"IPv6 Application of the Alternate Marking Method\",\n        \
    \      Work in Progress, Internet-Draft, draft-ietf-6man-ipv6-\n             \
    \ alt-mark-01, 22 June 2020, <https://tools.ietf.org/html/\n              draft-ietf-6man-ipv6-alt-mark-01>.\n\
    \   [IPV6-EXT-HEADERS]\n              Gont, F. and W. LIU, \"Recommendations on\
    \ the Filtering of\n              IPv6 Packets Containing IPv6 Extension Headers\"\
    , Work in\n              Progress, Internet-Draft, draft-ietf-opsec-ipv6-eh-\n\
    \              filtering-06, 2 July 2018, <https://tools.ietf.org/html/\n    \
    \          draft-ietf-opsec-ipv6-eh-filtering-06>.\n   [IPV6-SRH] Voyer, D., Filsfils,\
    \ C., Dukes, D., Matsushima, S., Leddy,\n              J., Li, Z., and J. Guichard,\
    \ \"Deployments With Insertion\n              of IPv6 Segment Routing Headers\"\
    , Work in Progress,\n              Internet-Draft, draft-voyer-6man-extension-header-\n\
    \              insertion-09, 19 May 2020, <https://tools.ietf.org/html/\n    \
    \          draft-voyer-6man-extension-header-insertion-09>.\n   [IPV6-USE-MINMTU]\n\
    \              Andrews, M., \"TCP Fails To Respect IPV6_USE_MIN_MTU\", Work\n\
    \              in Progress, Internet-Draft, draft-andrews-tcp-and-ipv6-\n    \
    \          use-minmtu-04, 18 October 2015,\n              <https://tools.ietf.org/html/draft-andrews-tcp-and-ipv6-\n\
    \              use-minmtu-04>.\n   [IPWAVE-NETWORKING]\n              Jeong, J.,\
    \ \"IPv6 Wireless Access in Vehicular Environments\n              (IPWAVE): Problem\
    \ Statement and Use Cases\", Work in\n              Progress, Internet-Draft,\
    \ draft-ietf-ipwave-vehicular-\n              networking-16, 7 July 2020, <https://tools.ietf.org/html/\n\
    \              draft-ietf-ipwave-vehicular-networking-16>.\n   [REF-MODEL]\n \
    \             Behringer, M., Carpenter, B., Eckert, T., Ciavaglia, L.,\n     \
    \         and J. Nobre, \"A Reference Model for Autonomic\n              Networking\"\
    , Work in Progress, Internet-Draft, draft-ietf-\n              anima-reference-model-10,\
    \ 22 November 2018,\n              <https://tools.ietf.org/html/draft-ietf-anima-reference-\n\
    \              model-10>.\n   [RFC2205]  Braden, R., Ed., Zhang, L., Berson, S.,\
    \ Herzog, S., and S.\n              Jamin, \"Resource ReSerVation Protocol (RSVP)\
    \ -- Version 1\n              Functional Specification\", RFC 2205, DOI 10.17487/RFC2205,\n\
    \              September 1997, <https://www.rfc-editor.org/info/rfc2205>.\n  \
    \ [RFC2474]  Nichols, K., Blake, S., Baker, F., and D. Black,\n              \"\
    Definition of the Differentiated Services Field (DS\n              Field) in the\
    \ IPv4 and IPv6 Headers\", RFC 2474,\n              DOI 10.17487/RFC2474, December\
    \ 1998,\n              <https://www.rfc-editor.org/info/rfc2474>.\n   [RFC2775]\
    \  Carpenter, B., \"Internet Transparency\", RFC 2775,\n              DOI 10.17487/RFC2775,\
    \ February 2000,\n              <https://www.rfc-editor.org/info/rfc2775>.\n \
    \  [RFC2923]  Lahey, K., \"TCP Problems with Path MTU Discovery\",\n         \
    \     RFC 2923, DOI 10.17487/RFC2923, September 2000,\n              <https://www.rfc-editor.org/info/rfc2923>.\n\
    \   [RFC3234]  Carpenter, B. and S. Brim, \"Middleboxes: Taxonomy and\n      \
    \        Issues\", RFC 3234, DOI 10.17487/RFC3234, February 2002,\n          \
    \    <https://www.rfc-editor.org/info/rfc3234>.\n   [RFC3879]  Huitema, C. and\
    \ B. Carpenter, \"Deprecating Site Local\n              Addresses\", RFC 3879,\
    \ DOI 10.17487/RFC3879, September\n              2004, <https://www.rfc-editor.org/info/rfc3879>.\n\
    \   [RFC4193]  Hinden, R. and B. Haberman, \"Unique Local IPv6 Unicast\n     \
    \         Addresses\", RFC 4193, DOI 10.17487/RFC4193, October 2005,\n       \
    \       <https://www.rfc-editor.org/info/rfc4193>.\n   [RFC4291]  Hinden, R. and\
    \ S. Deering, \"IP Version 6 Addressing\n              Architecture\", RFC 4291,\
    \ DOI 10.17487/RFC4291, February\n              2006, <https://www.rfc-editor.org/info/rfc4291>.\n\
    \   [RFC4397]  Bryskin, I. and A. Farrel, \"A Lexicography for the\n         \
    \     Interpretation of Generalized Multiprotocol Label\n              Switching\
    \ (GMPLS) Terminology within the Context of the\n              ITU-T's Automatically\
    \ Switched Optical Network (ASON)\n              Architecture\", RFC 4397, DOI\
    \ 10.17487/RFC4397, February\n              2006, <https://www.rfc-editor.org/info/rfc4397>.\n\
    \   [RFC4427]  Mannie, E., Ed. and D. Papadimitriou, Ed., \"Recovery\n       \
    \       (Protection and Restoration) Terminology for Generalized\n           \
    \   Multi-Protocol Label Switching (GMPLS)\", RFC 4427,\n              DOI 10.17487/RFC4427,\
    \ March 2006,\n              <https://www.rfc-editor.org/info/rfc4427>.\n   [RFC4655]\
    \  Farrel, A., Vasseur, J.-P., and J. Ash, \"A Path\n              Computation\
    \ Element (PCE)-Based Architecture\", RFC 4655,\n              DOI 10.17487/RFC4655,\
    \ August 2006,\n              <https://www.rfc-editor.org/info/rfc4655>.\n   [RFC4821]\
    \  Mathis, M. and J. Heffner, \"Packetization Layer Path MTU\n              Discovery\"\
    , RFC 4821, DOI 10.17487/RFC4821, March 2007,\n              <https://www.rfc-editor.org/info/rfc4821>.\n\
    \   [RFC4838]  Cerf, V., Burleigh, S., Hooke, A., Torgerson, L., Durst,\n    \
    \          R., Scott, K., Fall, K., and H. Weiss, \"Delay-Tolerant\n         \
    \     Networking Architecture\", RFC 4838, DOI 10.17487/RFC4838,\n           \
    \   April 2007, <https://www.rfc-editor.org/info/rfc4838>.\n   [RFC4924]  Aboba,\
    \ B., Ed. and E. Davies, \"Reflections on Internet\n              Transparency\"\
    , RFC 4924, DOI 10.17487/RFC4924, July 2007,\n              <https://www.rfc-editor.org/info/rfc4924>.\n\
    \   [RFC5704]  Bryant, S., Ed., Morrow, M., Ed., and IAB, \"Uncoordinated\n  \
    \            Protocol Development Considered Harmful\", RFC 5704,\n          \
    \    DOI 10.17487/RFC5704, November 2009,\n              <https://www.rfc-editor.org/info/rfc5704>.\n\
    \   [RFC6294]  Hu, Q. and B. Carpenter, \"Survey of Proposed Use Cases for\n \
    \             the IPv6 Flow Label\", RFC 6294, DOI 10.17487/RFC6294, June\n  \
    \            2011, <https://www.rfc-editor.org/info/rfc6294>.\n   [RFC6325]  Perlman,\
    \ R., Eastlake 3rd, D., Dutt, D., Gai, S., and A.\n              Ghanwani, \"\
    Routing Bridges (RBridges): Base Protocol\n              Specification\", RFC\
    \ 6325, DOI 10.17487/RFC6325, July 2011,\n              <https://www.rfc-editor.org/info/rfc6325>.\n\
    \   [RFC6398]  Le Faucheur, F., Ed., \"IP Router Alert Considerations and\n  \
    \            Usage\", BCP 168, RFC 6398, DOI 10.17487/RFC6398, October\n     \
    \         2011, <https://www.rfc-editor.org/info/rfc6398>.\n   [RFC6407]  Weis,\
    \ B., Rowles, S., and T. Hardjono, \"The Group Domain\n              of Interpretation\"\
    , RFC 6407, DOI 10.17487/RFC6407,\n              October 2011, <https://www.rfc-editor.org/info/rfc6407>.\n\
    \   [RFC6709]  Carpenter, B., Aboba, B., Ed., and S. Cheshire, \"Design\n    \
    \          Considerations for Protocol Extensions\", RFC 6709,\n             \
    \ DOI 10.17487/RFC6709, September 2012,\n              <https://www.rfc-editor.org/info/rfc6709>.\n\
    \   [RFC6947]  Boucadair, M., Kaplan, H., Gilman, R., and S.\n              Veikkolainen,\
    \ \"The Session Description Protocol (SDP)\n              Alternate Connectivity\
    \ (ALTC) Attribute\", RFC 6947,\n              DOI 10.17487/RFC6947, May 2013,\n\
    \              <https://www.rfc-editor.org/info/rfc6947>.\n   [RFC6950]  Peterson,\
    \ J., Kolkman, O., Tschofenig, H., and B. Aboba,\n              \"Architectural\
    \ Considerations on Application Features in\n              the DNS\", RFC 6950,\
    \ DOI 10.17487/RFC6950, October 2013,\n              <https://www.rfc-editor.org/info/rfc6950>.\n\
    \   [RFC7045]  Carpenter, B. and S. Jiang, \"Transmission and Processing\n   \
    \           of IPv6 Extension Headers\", RFC 7045,\n              DOI 10.17487/RFC7045,\
    \ December 2013,\n              <https://www.rfc-editor.org/info/rfc7045>.\n \
    \  [RFC7228]  Bormann, C., Ersue, M., and A. Keranen, \"Terminology for\n    \
    \          Constrained-Node Networks\", RFC 7228,\n              DOI 10.17487/RFC7228,\
    \ May 2014,\n              <https://www.rfc-editor.org/info/rfc7228>.\n   [RFC7368]\
    \  Chown, T., Ed., Arkko, J., Brandt, A., Troan, O., and J.\n              Weil,\
    \ \"IPv6 Home Networking Architecture Principles\",\n              RFC 7368, DOI\
    \ 10.17487/RFC7368, October 2014,\n              <https://www.rfc-editor.org/info/rfc7368>.\n\
    \   [RFC7381]  Chittimaneni, K., Chown, T., Howard, L., Kuarsingh, V.,\n     \
    \         Pouffary, Y., and E. Vyncke, \"Enterprise IPv6 Deployment\n        \
    \      Guidelines\", RFC 7381, DOI 10.17487/RFC7381, October 2014,\n         \
    \     <https://www.rfc-editor.org/info/rfc7381>.\n   [RFC7556]  Anipko, D., Ed.,\
    \ \"Multiple Provisioning Domain\n              Architecture\", RFC 7556, DOI\
    \ 10.17487/RFC7556, June 2015,\n              <https://www.rfc-editor.org/info/rfc7556>.\n\
    \   [RFC7663]  Trammell, B., Ed. and M. Kuehlewind, Ed., \"Report from the\n \
    \             IAB Workshop on Stack Evolution in a Middlebox Internet\n      \
    \        (SEMI)\", RFC 7663, DOI 10.17487/RFC7663, October 2015,\n           \
    \   <https://www.rfc-editor.org/info/rfc7663>.\n   [RFC7665]  Halpern, J., Ed.\
    \ and C. Pignataro, Ed., \"Service Function\n              Chaining (SFC) Architecture\"\
    , RFC 7665,\n              DOI 10.17487/RFC7665, October 2015,\n             \
    \ <https://www.rfc-editor.org/info/rfc7665>.\n   [RFC7754]  Barnes, R., Cooper,\
    \ A., Kolkman, O., Thaler, D., and E.\n              Nordmark, \"Technical Considerations\
    \ for Internet Service\n              Blocking and Filtering\", RFC 7754, DOI\
    \ 10.17487/RFC7754,\n              March 2016, <https://www.rfc-editor.org/info/rfc7754>.\n\
    \   [RFC7788]  Stenberg, M., Barth, S., and P. Pfister, \"Home Networking\n  \
    \            Control Protocol\", RFC 7788, DOI 10.17487/RFC7788, April\n     \
    \         2016, <https://www.rfc-editor.org/info/rfc7788>.\n   [RFC7872]  Gont,\
    \ F., Linkova, J., Chown, T., and W. Liu,\n              \"Observations on the\
    \ Dropping of Packets with IPv6\n              Extension Headers in the Real World\"\
    , RFC 7872,\n              DOI 10.17487/RFC7872, June 2016,\n              <https://www.rfc-editor.org/info/rfc7872>.\n\
    \   [RFC8085]  Eggert, L., Fairhurst, G., and G. Shepherd, \"UDP Usage\n     \
    \         Guidelines\", BCP 145, RFC 8085, DOI 10.17487/RFC8085,\n           \
    \   March 2017, <https://www.rfc-editor.org/info/rfc8085>.\n   [RFC8086]  Yong,\
    \ L., Ed., Crabbe, E., Xu, X., and T. Herbert, \"GRE-\n              in-UDP Encapsulation\"\
    , RFC 8086, DOI 10.17487/RFC8086,\n              March 2017, <https://www.rfc-editor.org/info/rfc8086>.\n\
    \   [RFC8100]  Geib, R., Ed. and D. Black, \"Diffserv-Interconnection\n      \
    \        Classes and Practice\", RFC 8100, DOI 10.17487/RFC8100,\n           \
    \   March 2017, <https://www.rfc-editor.org/info/rfc8100>.\n   [RFC8151]  Yong,\
    \ L., Dunbar, L., Toy, M., Isaac, A., and V. Manral,\n              \"Use Cases\
    \ for Data Center Network Virtualization Overlay\n              Networks\", RFC\
    \ 8151, DOI 10.17487/RFC8151, May 2017,\n              <https://www.rfc-editor.org/info/rfc8151>.\n\
    \   [RFC8200]  Deering, S. and R. Hinden, \"Internet Protocol, Version 6\n   \
    \           (IPv6) Specification\", STD 86, RFC 8200,\n              DOI 10.17487/RFC8200,\
    \ July 2017,\n              <https://www.rfc-editor.org/info/rfc8200>.\n   [RFC8300]\
    \  Quinn, P., Ed., Elzur, U., Ed., and C. Pignataro, Ed.,\n              \"Network\
    \ Service Header (NSH)\", RFC 8300,\n              DOI 10.17487/RFC8300, January\
    \ 2018,\n              <https://www.rfc-editor.org/info/rfc8300>.\n   [RFC8402]\
    \  Filsfils, C., Ed., Previdi, S., Ed., Ginsberg, L.,\n              Decraene,\
    \ B., Litkowski, S., and R. Shakir, \"Segment\n              Routing Architecture\"\
    , RFC 8402, DOI 10.17487/RFC8402,\n              July 2018, <https://www.rfc-editor.org/info/rfc8402>.\n\
    \   [RFC8445]  Keranen, A., Holmberg, C., and J. Rosenberg, \"Interactive\n  \
    \            Connectivity Establishment (ICE): A Protocol for Network\n      \
    \        Address Translator (NAT) Traversal\", RFC 8445,\n              DOI 10.17487/RFC8445,\
    \ July 2018,\n              <https://www.rfc-editor.org/info/rfc8445>.\n   [RFC8517]\
    \  Dolson, D., Ed., Snellman, J., Boucadair, M., Ed., and C.\n              Jacquenet,\
    \ \"An Inventory of Transport-Centric Functions\n              Provided by Middleboxes:\
    \ An Operator Perspective\",\n              RFC 8517, DOI 10.17487/RFC8517, February\
    \ 2019,\n              <https://www.rfc-editor.org/info/rfc8517>.\n   [RFC8557]\
    \  Finn, N. and P. Thubert, \"Deterministic Networking Problem\n             \
    \ Statement\", RFC 8557, DOI 10.17487/RFC8557, May 2019,\n              <https://www.rfc-editor.org/info/rfc8557>.\n\
    \   [RFC8568]  Bernardos, CJ., Rahman, A., Zuniga, JC., Contreras, LM.,\n    \
    \          Aranda, P., and P. Lynch, \"Network Virtualization Research\n     \
    \         Challenges\", RFC 8568, DOI 10.17487/RFC8568, April 2019,\n        \
    \      <https://www.rfc-editor.org/info/rfc8568>.\n   [RFC8578]  Grossman, E.,\
    \ Ed., \"Deterministic Networking Use Cases\",\n              RFC 8578, DOI 10.17487/RFC8578,\
    \ May 2019,\n              <https://www.rfc-editor.org/info/rfc8578>.\n   [RFC8655]\
    \  Finn, N., Thubert, P., Varga, B., and J. Farkas,\n              \"Deterministic\
    \ Networking Architecture\", RFC 8655,\n              DOI 10.17487/RFC8655, October\
    \ 2019,\n              <https://www.rfc-editor.org/info/rfc8655>.\n   [RFC8754]\
    \  Filsfils, C., Ed., Dukes, D., Ed., Previdi, S., Leddy, J.,\n              Matsushima,\
    \ S., and D. Voyer, \"IPv6 Segment Routing Header\n              (SRH)\", RFC\
    \ 8754, DOI 10.17487/RFC8754, March 2020,\n              <https://www.rfc-editor.org/info/rfc8754>.\n\
    \   [SPB]      \"IEEE Standard for Local and metropolitan area networks -\n  \
    \            Bridges and Bridged Networks\",\n              DOI 10.1109/IEEESTD.2018.8403927,\
    \ IEEE 802.1Q-2018, July\n              2018, <https://ieeexplore.ieee.org/document/8403927>.\n\
    \   [SRV6-NETWORK]\n              Filsfils, C., Camarillo, P., Leddy, J., Voyer,\
    \ D.,\n              Matsushima, S., and Z. Li, \"SRv6 Network Programming\",\n\
    \              Work in Progress, Internet-Draft, draft-ietf-spring-srv6-\n   \
    \           network-programming-16, 27 June 2020,\n              <https://tools.ietf.org/html/draft-ietf-spring-srv6-\n\
    \              network-programming-16>.\n   [USER-PLANE-PROTOCOL]\n          \
    \    Homma, S., Miyasaka, T., Matsushima, S., and D. Voyer,\n              \"\
    User Plane Protocol and Architectural Analysis on 3GPP 5G\n              System\"\
    , Work in Progress, Internet-Draft, draft-ietf-dmm-\n              5g-uplane-analysis-03,\
    \ 3 November 2019,\n              <https://tools.ietf.org/html/draft-ietf-dmm-5g-uplane-\n\
    \              analysis-03>.\n"
- title: Appendix A.  Taxonomy of Limited Domains
  contents:
  - "Appendix A.  Taxonomy of Limited Domains\n   This appendix develops a taxonomy\
    \ for describing limited domains.\n   Several major aspects are considered in\
    \ this taxonomy:\n   *  The domain as a whole\n   *  The individual nodes\n  \
    \ *  The domain boundary\n   *  The domain's topology\n   *  The domain's technology\n\
    \   *  How the domain connects to the Internet\n   *  The security, trust, and\
    \ privacy model\n   *  Operations\n   The following sub-sections analyze each\
    \ of these aspects.\n"
- title: A.1.  Domain as a Whole
  contents:
  - "A.1.  Domain as a Whole\n   *  Why does the domain exist? (e.g., human choice,\
    \ administrative\n      policy, orchestration requirements, technical requirements\
    \ such as\n      operational partitioning for scaling reasons)\n   *  If there\
    \ are special requirements, are they at Layer 2, Layer 3,\n      or an upper layer?\n\
    \   *  Where does the domain lie on the spectrum between completely\n      managed\
    \ by humans and completely autonomic?\n   *  If managed, what style of management\
    \ applies?  (Manual\n      configuration, automated configuration, orchestration?)\n\
    \   *  Is there a policy model?  (Intent, configuration policies?)\n   *  Does\
    \ the domain provide controlled or paid service or open access?\n"
- title: A.2.  Individual Nodes
  contents:
  - "A.2.  Individual Nodes\n   *  Is a domain member a complete node or only one\
    \ interface of a\n      node?\n   *  Are nodes permanent members of a given domain,\
    \ or are join and\n      leave operations possible?\n   *  Are nodes physical\
    \ or virtual devices?\n   *  Are virtual nodes general purpose or limited to specific\n\
    \      functions, applications, or users?\n   *  Are nodes constrained (by battery,\
    \ etc.)?\n   *  Are devices installed \"out of the box\" or pre-configured?\n"
- title: A.3.  Domain Boundary
  contents:
  - "A.3.  Domain Boundary\n   *  How is the domain boundary identified or defined?\n\
    \   *  Is the domain boundary fixed or dynamic?\n   *  Are boundary nodes special,\
    \ or can any node be at the boundary?\n"
- title: A.4.  Topology
  contents:
  - "A.4.  Topology\n   *  Is the domain a subset of a Layer 2 or 3 connectivity domain?\n\
    \   *  Does the domain overlap other domains?  (In other words, is a node\n  \
    \    allowed to be a member of multiple domains?)\n   *  Does the domain match\
    \ physical topology, or does it have a virtual\n      (overlay) topology?\n  \
    \ *  Is the domain in a single building, vehicle, or campus?  Or is it\n     \
    \ distributed?\n   *  If distributed, are the interconnections private or over\
    \ the\n      Internet?\n   *  In IP addressing terms, is the domain Link local,\
    \ Site local, or\n      Global?\n   *  Does the scope of IP unicast or multicast\
    \ addresses map to the\n      domain boundary?\n"
- title: A.5.  Technology
  contents:
  - "A.5.  Technology\n   *  What routing protocol(s) or different forwarding mechanisms\
    \ (MPLS\n      or other non-IP mechanism) are used?\n   *  In an overlay domain,\
    \ what overlay technique is used (L2VPN,\n      L3VPN, etc.)?\n   *  Are there\
    \ specific QoS requirements?\n   *  Link latency - Normal or long latency links?\n\
    \   *  Mobility - Are nodes mobile?  Is the whole network mobile?\n   *  Which\
    \ specific technologies, such as those in Section 4, are\n      applicable?\n"
- title: A.6.  Connection to the Internet
  contents:
  - "A.6.  Connection to the Internet\n   *  Is the Internet connection permanent\
    \ or intermittent?  (Never\n      connected is out of scope.)\n   *  What traffic\
    \ is blocked, in and out?\n   *  What traffic is allowed, in and out?\n   *  What\
    \ traffic is transformed, in and out?\n   *  Is secure and privileged remote access\
    \ needed?\n   *  Does the domain allow unprivileged remote sessions?\n"
- title: A.7.  Security, Trust, and Privacy Model
  contents:
  - "A.7.  Security, Trust, and Privacy Model\n   *  Must domain members be authorized?\n\
    \   *  Are all nodes in the domain at the same trust level?\n   *  Is traffic\
    \ authenticated?\n   *  Is traffic encrypted?\n   *  What is hidden from the outside?\n"
- title: A.8.  Operations
  contents:
  - "A.8.  Operations\n   *  Safety level - Does the domain have a critical (human)\
    \ safety\n      role?\n   *  Reliability requirement - Normal or 99.999%?\n  \
    \ *  Environment - Hazardous conditions?\n   *  Installation - Are specialists\
    \ needed?\n   *  Service visits - Easy, difficult, or impossible?\n   *  Software/firmware\
    \ updates - Possible or impossible?\n"
- title: A.9.  Making Use of This Taxonomy
  contents:
  - "A.9.  Making Use of This Taxonomy\n   This taxonomy could be used to design or\
    \ analyze a specific type of\n   limited domain.  For the present document, it\
    \ is intended only to\n   form a background to the scope of protocols used in\
    \ limited domains\n   and the mechanisms required to securely define domain membership\
    \ and\n   properties.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   Useful comments were received from Amelia Andersdotter,\
    \ Edward\n   Birrane, David Black, Ron Bonica, Mohamed Boucadair, Tim Chown,\n\
    \   Darren Dukes, Donald Eastlake, Adrian Farrel, Tom Herbert, Ben Kaduk,\n  \
    \ John Klensin, Mirja Kuehlewind, Warren Kumari, Andy Malis, Michael\n   Richardson,\
    \ Mark Smith, Rick Taylor, Niels ten Oever, and others.\n"
- title: Contributors
  contents:
  - "Contributors\n   Sheng Jiang\n   Huawei Technologies\n   Q14, Huawei Campus\n\
    \   No. 156 Beiqing Road\n   Hai-Dian District, Beijing\n   100095\n   China\n\
    \   Email: jiangsheng@huawei.com\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Brian Carpenter\n   The University of Auckland\n   School\
    \ of Computer Science\n   University of Auckland\n   PB 92019\n   Auckland 1142\n\
    \   New Zealand\n   Email: brian.e.carpenter@gmail.com\n   Bing Liu\n   Huawei\
    \ Technologies\n   Q14, Huawei Campus\n   No. 156 Beiqing Road\n   Hai-Dian District,\
    \ Beijing\n   100095\n"
