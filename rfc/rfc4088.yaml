- title: __initial_text__
  contents:
  - "           Uniform Resource Identifier (URI) Scheme for the\n               Simple\
    \ Network Management Protocol (SNMP)\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   The Simple Network Management Protocol (SNMP) and the Internet\n\
    \   Standard Management Framework are widely used for the management of\n   communication\
    \ devices, creating a need to specify SNMP access\n   (including access to SNMP\
    \ MIB object instances) from non-SNMP\n   management environments.  For example,\
    \ when out-of-band IP management\n   is used via a separate management interface\
    \ (e.g., for a device that\n   does not support in-band IP access), a uniform\
    \ way to indicate how to\n   contact the device for management is needed.  Uniform\
    \ Resource\n   Identifiers (URIs) fit this need well, as they allow a single text\n\
    \   string to indicate a management access communication endpoint for a\n   wide\
    \ variety of IP-based protocols.\n   This document defines a URI scheme so that\
    \ SNMP can be designated as\n   the protocol used for management.  The scheme\
    \ also allows a URI to\n   designate one or more MIB object instances.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction..................................................\
    \  2\n   2. Usage.........................................................  3\n\
    \   3. Syntax of an SNMP URI.........................................  4\n   \
    \   3.1. Relative Reference Considerations........................  5\n   4. Semantics\
    \ and Operations......................................  6\n      4.1. SNMP Service\
    \ URIs........................................  6\n      4.2. SNMP Object URIs.........................................\
    \  7\n           4.2.1. SNMP Object URI Data Access.......................  8\n\
    \      4.3. OID Groups in SNMP URIs.................................. 10\n   \
    \   4.4. Interoperability Considerations.......................... 10\n   5. Examples......................................................\
    \ 11\n   6. Security Considerations....................................... 12\n\
    \      6.1. SNMP URI to SNMP Gateway Security Considerations......... 13\n   7.\
    \ IANA Considerations........................................... 14\n   8. Normative\
    \ References.......................................... 14\n   9. Informative References........................................\
    \ 15\n   10. Acknowledgements............................................. 16\n\
    \   Appendix A. Registration Template................................ 17\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   SNMP and the Internet-Standard Management Framework were\
    \ originally\n   devised to manage IP devices via in-band means, in which management\n\
    \   access is primarily via the same interface(s) used to send and\n   receive\
    \ IP traffic.  SNMP's wide adoption has resulted in its use for\n   managing communication\
    \ devices that do not support in-band IP access\n   (e.g., Fibre Channel devices);\
    \ a separate out-of-band IP interface is\n   often used for management.  URIs\
    \ provide a convenient way to locate\n   that interface and specify the protocol\
    \ to be used for management;\n   one possible scenario is for an in-band query\
    \ to return a URI that\n   indicates how the device is managed.  This document\
    \ specifies a URI\n   scheme to permit SNMP (including a specific SNMP context)\
    \ to be\n   designated as the management protocol by such a URI.  This scheme\n\
    \   also allows a URI to refer to specific object instances within an\n   SNMP\
    \ MIB.\n   For a detailed overview of the documents that describe the current\n\
    \   Internet-Standard Management Framework, please refer to Section 7 of\n   [RFC3410].\n\
    \   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\"\
    ,\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in\
    \ this\n   document are to be interpreted as described in [RFC2119].\n"
- title: 2.  Usage
  contents:
  - "2.  Usage\n   There are two major classes of SNMP URI usage: configuration and\n\
    \   gateways between SNMP and other protocols that use SNMP URIs.\n   An SNMP\
    \ URI used for configuration indicates the location of\n   management information\
    \ as part of the configuration of an application\n   containing an SNMP manager.\
    \  The URI can be obtained from a\n   configuration file or may be provided by\
    \ a managed device (see\n   Section 1 for an example).  Management information\
    \ is exchanged\n   between the SNMP manager and agent, but it does not flow beyond\
    \ the\n   manager, as shown in the following diagram:\n                      \
    \         ***********  SNMP-Request   *********\n                            \
    \   *         *================>*       *\n                URI ---------->* Manager\
    \ *                 * Agent *\n                               *         *<================*\
    \       *\n                               ***********  SNMP-Response  *********\n\
    \                                    ^\n                                    |\n\
    \      Other Config Info ------------+\n   Additional configuration information\
    \ (e.g., a security secret or key)\n   may be provided via an interface other\
    \ than that used for the URI.\n   For example, when a managed device provides\
    \ an SNMP URI in an\n   unprotected fashion, that device should not provide a\
    \ secret or key\n   required to use the URI.  The secret or key should instead\
    \ be pre-\n   configured in or pre-authorized to the manager; see Section 6.\n\
    \   For gateway usage, clients employ SNMP URIs to request management\n   information\
    \ via an SNMP URI to SNMP gateway (also called an SNMP\n   gateway in this document).\
    \  The SNMP manager within the SNMP gateway\n   accesses the management information\
    \ and returns it to the requesting\n   client, as shown in the following diagram:\n\
    \                                SNMP gateway\n           **********     URI \
    \   ***********  SNMP-Request   *********\n           *        *===========>*\
    \         *================>*       *\n           * Client *            * Manager\
    \ *                 * Agent *\n           *        *<===========*         *<================*\
    \       *\n           **********    Info    ***********  SNMP-Response  *********\n\
    \                                    ^\n                                    |\n\
    \      Other Config Info ------------+\n   Additional configuration information\
    \ (e.g., security secrets or keys)\n   may be provided via an interface other\
    \ than that used for the URI.\n   For example, some types of security information,\
    \ including secrets\n   and keys, should be pre-configured in or pre-authorized\
    \ to the\n   manager rather than be provided by the client; see Section 6.\n"
- title: 3.  Syntax of an SNMP URI
  contents:
  - "3.  Syntax of an SNMP URI\n   An SNMP URI has the following ABNF [RFC2234] syntax,\
    \ based on the\n   ABNF syntax rules for userinfo, host, port, and (path) segment\
    \ in\n   [RFC3986] and the ABNF syntax rule for HEXDIG in [RFC2234]:\n      snmp-uri\
    \        = \"snmp://\" snmp-authority [ context [ oids ]]\n      snmp-authority\
    \  = [ securityName \"@\" ] host [ \":\" port ]\n      securityName    = userinfo\
    \    ; SNMP securityName\n      context         = \"/\" contextName [ \";\" contextEngineID\
    \ ]\n      contextName     = segment     ; SNMP contextName\n      contextEngineID\
    \ = 1*(HEXDIG HEXDIG)    ; SNMP contextEngineID\n      oids            = \"/\"\
    \ ( oid / oid-group ) [ suffix ]\n      oid-group       = \"(\" oid *( \",\" oid\
    \ ) \")\"\n      oid             = < as specified by [RFC 3061] >\n      suffix\
    \          = \"+\" / \".*\"\n   The userinfo and (path) segment ABNF rules are\
    \ reused for syntax\n   only.  In contrast, host and port have both the syntax\
    \ and semantics\n   specified in [RFC3986].  See [RFC3411] for the semantics of\n\
    \   securityName, contextEngineID, and contextName.\n   The snmp-authority syntax\
    \ matches the URI authority syntax in Section\n   3.2 of [RFC3986], with the additional\
    \ restriction that the userinfo\n   component of an authority (when present) MUST\
    \ be an SNMP\n   securityName.  If the securityName is empty or not given, the\
    \ entity\n   making use of an SNMP URI is expected to know what SNMP securityName\n\
    \   to use if one is required.  Inclusion of authentication information\n   (e.g.,\
    \ passwords) in URIs has been deprecated (see Section 3.2.1 of\n   [RFC3986]),\
    \ so any secret or key required for SNMP access must be\n   provided via other\
    \ means that may be out-of-band with respect to\n   communication of the URI.\
    \  If the port is empty or not given, port\n   161 is assumed.\n   If the contextName\
    \ is empty or not given, the zero-length string (\"\")\n   is assumed, as it is\
    \ the default SNMP context.  An SNMP\n   contextEngineID is a variable-format\
    \ binary element that is usually\n   discovered by an SNMP manager.  An SNMP URI\
    \ encodes a contextEngineID\n   as hexadecimal digits corresponding to a sequence\
    \ of bytes.  If the\n   contextEngineID is empty or not given, the context engine\
    \ is to be\n   discovered by querying the SNMP agent at the specified host and\
    \ port;\n   see Section 4.1 below.  The contextEngineID component of the URI\n\
    \   SHOULD be present if more than one context engine at the designated\n   host\
    \ and port supports the designated context.\n   An SNMP URI that designates the\
    \ default SNMP context (\"\") MAY end\n   with the \"/\" character that introduces\
    \ the contextName component.  An\n   SNMP URI MUST NOT end with the \"/\" character\
    \ that introduces an oid\n   or oid-group component, as the empty string is not\
    \ a valid OID for\n   SNMP.\n   The encoding rules specified in [RFC3986] MUST\
    \ be used for SNMP URIs,\n   including the use of percent encoding (\"%\" followed\
    \ by two hex\n   digits) as needed to represent characters defined as reserved\
    \ in\n   [RFC3986] and any characters not allowed in a URI.  SNMP permits any\n\
    \   UTF-8 character to be used in a securityName or contextName; all\n   multi-byte\
    \ UTF-8 characters in an SNMP URI MUST be percent encoded as\n   specified in\
    \ Sections 2.1 and 2.5 of [RFC3986].  These requirements\n   are a consequence\
    \ of reusing the ABNF syntax rules for userinfo and\n   segment from [RFC3986].\n\
    \   SNMP URIs will generally be short enough to avoid implementation\n   string-length\
    \ limits (e.g., that may occur at 255 characters).  Such\n   limits may be a concern\
    \ for large OID groups; relative references to\n   URIs (see Section 4.2 of [RFC3986])\
    \ may provide an alternative in\n   some circumstances.\n   Use of IP addresses\
    \ in SNMP URIs is acceptable in situations where\n   dependence on availability\
    \ of DNS service is undesirable or must be\n   avoided; otherwise, IP addresses\
    \ should not be used (see [RFC1900]\n   for further explanation).\n"
- title: 3.1.  Relative Reference Considerations
  contents:
  - "3.1.  Relative Reference Considerations\n   Use of the SNMP default context (zero-length\
    \ string) within an SNMP\n   URI can result in a second instance of \"//\" in\
    \ the URI, such as the\n   following:\n      snmp://<host>//<oid>\n   This is\
    \ allowed by [RFC3986] syntax; if a URI parser does not handle\n   the second\
    \ \"//\" correctly, the parser is broken and needs to be\n   fixed.  This example\
    \ is important because use of the SNMP default\n   context in SNMP URIs is expected\
    \ to be common.\n   On the other hand, the second occurrence of \"//\" in an absolute\
    \ SNMP\n   URI affects usage of relative references to that URI (see Section 4.2\n\
    \   of [RFC3986]) because a \"//\" at the start of a relative reference\n   always\
    \ introduces a URI authority component (host plus optional\n   userinfo and/or\
    \ port; see [RFC3986]).  Specifically, a relative\n   reference of the form //<oid2>\
    \ will not work, because the \"//\" will\n   cause <oid2> to be parsed as a URI\
    \ authority, resulting in a syntax\n   error when the parser fails to find a host\
    \ in <oid2> .  To avoid this\n   problem, relative references that start with\
    \ \"//\" but do not contain\n   a URI authority component MUST NOT be used.  Functionality\
    \ equivalent\n   to any such forbidden relative reference can be obtained by prefixing\n\
    \   \".\" or \"..\" to the forbidden relative reference (e.g., ..//<oid2>).\n\
    \   The prefix to use depends on the base URI.\n"
- title: 4.  Semantics and Operations
  contents:
  - "4.  Semantics and Operations\n   An SNMP URI that does not include any OIDs is\
    \ called an SNMP service\n   URI because it designates a communication endpoint\
    \ for access to SNMP\n   management service.  An SNMP URI that includes one or\
    \ more OIDs is\n   called an SNMP object URI because it designates one or more\
    \ object\n   instances in an SNMP MIB.  The expected means of using an SNMP URI\
    \ is\n   to employ an SNMP manager to access the SNMP context designated by\n\
    \   the URI via the SNMP agent at the host and port designated by the\n   URI.\n"
- title: 4.1.  SNMP Service URIs
  contents:
  - "4.1.  SNMP Service URIs\n   An SNMP service URI does not designate a data object,\
    \ but rather an\n   SNMP context to be accessed by a service; the telnet URI scheme\n\
    \   [RFC1738] is another example of URIs that designate service access.\n   If\
    \ the contextName in the URI is empty or not given, \"\" (the zero-\n   length\
    \ string) is assumed, as it is the default SNMP context.\n   If a contextEngineID\
    \ is given in an SNMP service URI, the context\n   engine that it designates is\
    \ to be used.  If the contextEngineID is\n   empty or not given in the URI, the\
    \ context engine is to be\n   discovered; the context engine to be used is the\
    \ one that supports\n   the context designated by the URI.  The contextEngineID\
    \ component of\n   the URI SHOULD be present if more than one context engine at\
    \ the\n   designated host and port supports the designated context.\n   Many common\
    \ uses of SNMP URIs are expected to omit (i.e., default)\n   the contextEngineID\
    \ because they do not involve SNMP proxy agents,\n   which are the most common\
    \ reason for multiple SNMP context engines to\n   exist at a single host and port.\
    \  Specifically, when an SNMP agent is\n   local to the network interface that\
    \ it manages, the agent will\n   usually have only one context engine, in which\
    \ case it is safe to\n   omit the contextEngineID component of an SNMP URI.  In\
    \ addition, many\n   SNMP agents that are local to a network interface support\
    \ only the\n   default SNMP context (zero-length string).\n"
- title: 4.2.  SNMP Object URIs
  contents:
  - "4.2.  SNMP Object URIs\n   An SNMP object URI contains one or more OIDs.  The\
    \ URI is used by\n   first separating the OID or OID group (including its preceding\
    \ slash\n   plus any parentheses and suffix) and then processing the resulting\n\
    \   SNMP service URI as specified in Section 4.1 (above) to determine the\n  \
    \ SNMP context to be accessed.  The OID or OID group is then used to\n   generate\
    \ SNMP operations directed to that SNMP context.\n   The semantics of an SNMP\
    \ object URI depend on whether the OID or OID\n   group has a suffix and what\
    \ that suffix is.  There are three possible\n   formats; in each case, the MIB\
    \ object instances are designated within\n   the SNMP context specified by the\
    \ service URI portion of the SNMP\n   object URI.  The semantics of an SNMP object\
    \ URI that contains a\n   single OID are as follows:\n      (1) An OID without\
    \ a suffix designates the MIB object instance\n          named by the OID.\n \
    \     (2) An OID with a \"+\" suffix designates the lexically next MIB\n     \
    \     object instance following the OID.\n      (3) An OID with a \".*\" suffix\
    \ designates the set of MIB object\n          instances for which the OID is a\
    \ strict lexical prefix; this\n          does not include the MIB object instance\
    \ named by the OID.\n   An OID group in an SNMP URI consists of a set of OIDs\
    \ in parentheses.\n   In each case, the OID group semantics are the extension\
    \ of the single\n   OID semantics to each OID in the group (e.g., a URI with a\
    \ \"+\" suffix\n   designates the set of MIB object instances consisting of the\n\
    \   lexically next instance for each OID in the OID group).\n   When there is\
    \ a choice among URI formats to designate the same MIB\n   object instance or\
    \ instances, the above list is in order of\n   preference (no suffix is most preferable),\
    \ as it runs from most\n   precise to least precise.  This is because an OID without\
    \ a suffix\n   precisely designates an object instance, whereas a \"+\" suffix\n\
    \   designates the next object instance, which may change, and the \".*\"\n  \
    \ suffix could designate multiple object instances.  Multiple\n   syntactically\
    \ distinct SNMP URIs SHOULD NOT be used to designate the\n   same MIB object instance\
    \ or set of instances, as this may cause\n   unexpected results in URI-based systems\
    \ that use string comparison to\n   test URIs for equality.\n   SNMP object URIs\
    \ designate the data to be accessed, as opposed to the\n   specific SNMP operations\
    \ to be used for access; Section 4.2.1\n   provides examples of how SNMP operations\
    \ can be used to access data\n   for SNMP object URIs.  Nonetheless, any applicable\
    \ SNMP operation,\n   including GetBulk, MAY be used to access data for all or\
    \ part of one\n   or more SNMP object URIs (e.g., via use of multiple variable\
    \ bindings\n   in a single operation); it is not necessary to use the specific\n\
    \   operations described in Section 4.2.1 as long as the results\n   (returned\
    \ variable bindings or error) could have been obtained by\n   following Section\
    \ 4.2.1's descriptions.  The use of relative\n   references that do not change\
    \ the contextName (i.e., ./<oid>) should\n   be viewed as a hint that optimization\
    \ of SNMP access across multiple\n   SNMP URIs may be possible.\n   An SNMP object\
    \ URI MAY also be used to specify a MIB object instance\n   or instances to be\
    \ written; this causes generation of an SNMP Set\n   operation instead of a Get.\
    \  The \"+\" and \".*\" suffixes MUST NOT be\n   used in this case; any attempt\
    \ to do so is an error that MUST NOT\n   generate any SNMP Set operations.  Values\
    \ to be written to the MIB\n   object instance or instances are not specified\
    \ within an SNMP object\n   URI.\n   SNMP object URIs designate data in SNMP MIBs\
    \ and hence do not provide\n   the means to generate all possible SNMP protocol\
    \ operations.  For\n   example, data access for an SNMP object URI cannot directly\
    \ generate\n   either Snmpv2-Trap or InformRequest notifications, although side\n\
    \   effects of data access could cause such notifications (depending on\n   the\
    \ MIB).  In addition, whether and how GetBulk is used for an SNMP\n   object URI\
    \ with a \".*\" suffix is implementation specific.\n"
- title: 4.2.1.  SNMP Object URI Data Access
  contents:
  - "4.2.1.  SNMP Object URI Data Access\n   Data access based on an SNMP object URI\
    \ returns an SNMP variable\n   binding for each MIB object instance designated\
    \ by the URI, or an\n   SNMP error if the operation fails.  An SNMP variable binding\
    \ binds a\n   variable name (OID) to a value or an SNMP exception (see [RFC3416]).\n\
    \   The SNMP operation or operations needed to access data designated by\n   an\
    \ SNMP object URI depend on the OID or OID group suffix or absence\n   thereof.\
    \  The following descriptions are not the only method of\n   performing data access\
    \ for an SNMP object URI; any suitable SNMP\n   operations may be used as long\
    \ as the results (returned variable\n   bindings or error) are functionally equivalent.\n\
    \      (1) For an OID or OID group without a suffix, an SNMP Get\n          operation\
    \ is generated using each OID as a variable binding\n          name.  If an SNMP\
    \ error occurs, that error is the result of\n          URI data access; otherwise,\
    \ the returned variable binding or\n          bindings are the result of URI data\
    \ access.  Note that any\n          returned variable binding may contain an SNMP\
    \ \"noSuchObject\"\n          or \"noSuchInstance\" exception.\n      (2) For\
    \ an OID or OID group with a \"+\" suffix, an SNMP GetNext\n          operation\
    \ is generated using each OID as a variable binding\n          name.  If an SNMP\
    \ error occurs, that error is the result of\n          URI data access; otherwise,\
    \ the returned variable binding or\n          bindings are the result of URI data\
    \ access.  Note that any\n          returned variable binding may contain an SNMP\
    \ \"endOfMibView\"\n          exception.\n      (3) For an OID or OID group with\
    \ a \".*\" suffix, an SNMP GetNext\n          operation is initially generated\
    \ using each OID as a variable\n          binding name.  If the result is an SNMP\
    \ error, that error is\n          the result of URI data access.  If all returned\
    \ variable\n          bindings contain either a) an OID for which the corresponding\n\
    \          URI OID is not a lexical prefix or b) an SNMP \"endOfMibView\"\n  \
    \        exception, then the returned variable bindings are the result\n     \
    \     of URI data access.\n          Otherwise, the results of the GetNext operation\
    \ are saved, and\n          another SNMP GetNext operation is generated using\
    \ the newly\n          returned OIDs as variable binding names.  This is repeated\n\
    \          (save the results and generate a GetNext with newly returned\n    \
    \      OIDs as variable binding names) until all the returned\n          variable\
    \ bindings from a GetNext contain either a) an OID for\n          which the corresponding\
    \ URI OID is not a lexical prefix or b)\n          an SNMP \"endOfMibView\" exception.\
    \  The results from all of the\n          GetNext operations are combined to become\
    \ the overall result\n          of URI data access; this may include variable\
    \ bindings whose\n          OID is not a lexical extension of the corresponding\
    \ URI OID.\n          If the OID subtrees (set of OIDs for which a specific URI\
    \ OID\n          is a lexical prefix) are not the same size for all OIDs in the\n\
    \          OID group, the largest subtree determines when this iteration\n   \
    \       ends.  SNMP GetBulk operations MAY be used to optimize this\n        \
    \  iterated access.\n          Whenever a returned variable binding contains an\
    \ OID for which\n          the corresponding URI OID is not a lexical prefix or\
    \ an SNMP\n          \"endOfMibView\" exception, iteration of that element of\
    \ the OID\n          group MAY cease, reducing the number of variable bindings\
    \ used\n          in subsequent GetNext operations.  In this case, the results\n\
    \          of URI data access for the SNMP URI will not consist entirely\n   \
    \       of OID-group-sized sets of variable bindings.  Even if this\n        \
    \  does not occur, the last variable binding returned for each\n          member\
    \ of the OID group will generally contain an SNMP\n          \"endOfMibView\"\
    \ exception or an OID for which the corresponding\n          URI OID is not a\
    \ lexical prefix.\n"
- title: 4.3.  OID Groups in SNMP URIs
  contents:
  - "4.3.  OID Groups in SNMP URIs\n   Parenthesized OID groups in SNMP URIs are intended\
    \ to support MIB\n   object instances for which access via a single SNMP operation\
    \ is\n   required to ensure consistent results.  Therefore, the OIDs within an\n\
    \   OID group in an SNMP URI SHOULD be accessed by a single SNMP\n   operation\
    \ containing a variable binding corresponding to each OID in\n   the group.  A\
    \ specific example involves the InetAddress and\n   InetAddressType textual conventions\
    \ defined in [RFC4001], for which\n   the format of an InetAddress instance is\
    \ specified by an associated\n   InetAddressType instance.  If two such associated\
    \ instances are read\n   via separate SNMP operations, the resulting values could\
    \ be\n   inconsistent (e.g., due to an intervening Set), causing the\n   InetAddress\
    \ value to be interpreted incorrectly.\n   This single operation requirement (\"\
    SHOULD\") also applies to each OID\n   group resulting from iterated access for\
    \ an SNMP URI with a \".*\"\n   suffix.  When members of an SNMP URI OID group\
    \ differ in the number\n   of OIDs for which each is a lexical prefix, this iteration\
    \ may\n   overrun by returning numerous variable bindings for which the\n   corresponding\
    \ OID in the OID group is not a lexical prefix.  Such\n   overrun can be avoided\
    \ by using relative references within the same\n   context (i.e., ./<oid>.* )\
    \ when it is not important to access\n   multiple MIB object instances in a single\
    \ SNMP operation.\n"
- title: 4.4.  Interoperability Considerations
  contents:
  - "4.4.  Interoperability Considerations\n   This document defines a transport-independent\
    \ \"snmp\" scheme that is\n   intended to accommodate SNMP transports other than\
    \ UDP.  UDP is the\n   default transport for access to information specified by\
    \ an SNMP URI\n   for backward compatibility with existing usage, but other transports\n\
    \   MAY be used.  If more than one transport can be used (e.g., SNMP over\n  \
    \ TCP [RFC3430] in addition to SNMP over UDP), the information or SNMP\n   service\
    \ access designated by an SNMP URI SHOULD NOT depend on which\n   transport is\
    \ used (for SNMP over TCP, this is implied by Section 2 of\n   [RFC3430]).\n \
    \  An SNMP URI designates use of SNMPv3 as specified by [RFC3416],\n   [RFC3417],\
    \ and related documents, but older versions of SNMP MAY be\n   used in accordance\
    \ with [RFC3584] when usage of such older versions\n   is unavoidable.  For SNMPv1\
    \ and SNMPv2c, the securityName,\n   contextName, and contextEngineID elements\
    \ of an SNMP URI are mapped\n   to/from the community name, as described in [RFC3584].\
    \  When the\n   community name is kept secret as a weak form of authentication,\
    \ this\n   mapping should be configured so that these three elements do not\n\
    \   reveal information about the community name.  If this is not done,\n   then\
    \ any SNMP URI component that would disclose significant\n   information about\
    \ a secret community name SHOULD be omitted.  Note\n   that some community names\
    \ contain reserved characters (e.g., \"@\")\n   that require percent encoding\
    \ when they are used in an SNMP URI.\n   SNMP versions (e.g., v3) have been omitted\
    \ from the SNMP URI scheme\n   to permit use of older versions of SNMP, as well\
    \ as any possible\n   future successor to SNMPv3.\n"
- title: 5.  Examples
  contents:
  - "5.  Examples\n      snmp://example.com\n   This example designates the default\
    \ SNMP context at the SNMP agent at\n   port 161 of host example.com .\n     \
    \ snmp://tester5@example.com:8161\n   This example designates the default SNMP\
    \ context at the SNMP agent at\n   port 8161 of host example.com and indicates\
    \ that the SNMP\n   securityName \"tester5\" is to be used to access that agent.\
    \  A\n   possible reason to use a non-standard port is for testing a new\n   version\
    \ of SNMP agent code.\n      snmp://example.com/bridge1\n   This example designates\
    \ the \"bridge1\" SNMP context at example.com.\n   Because the contextEngineID\
    \ component of the URI is omitted, there\n   SHOULD be at most one SNMP context\
    \ engine at example.com that\n   supports the \"bridge1\" context.\n      snmp://example.com/bridge1;800002b804616263\n\
    \   This example designates the \"bridge1\" context at snmp.example.com via\n\
    \   the SNMP context engine 800002b804616263 (string representation of a\n   hexadecimal\
    \ value).  This avoids ambiguity if any other context\n   engine supports a \"\
    bridge1\" context.  The above two examples are\n   based on the figure in Section\
    \ 3.3 of [RFC3411].\n      snmp://example.com//1.3.6.1.2.1.1.3.0\n      snmp://example.com//1.3.6.1.2.1.1.3+\n\
    \      snmp://example.com//1.3.6.1.2.1.1.3.*\n   These three examples all designate\
    \ the sysUpTime.0 object instance in\n   the SNMPv2-MIB or RFC1213-MIB for the\
    \ default SNMP context (\"\") at\n   example.com as sysUpTime.0 is:\n      a)\
    \ designated directly by OID 1.3.6.1.2.1.1.3.0,\n      b) the lexically next MIB\
    \ object instance after the OID\n         1.3.6.1.2.1.1.3, and\n      c) the only\
    \ MIB object instance whose OID has 1.3.6.1.2.1.1.3 as a\n         lexical prefix.\n\
    \   These three examples are provided for illustrative purposes only, as\n   multiple\
    \ syntactically distinct URIs SHOULD NOT be used to designate\n   the same MIB\
    \ object instance, in order to avoid unexpected results in\n   URI-based systems\
    \ that use string comparison to test URIs for\n   equality.\n      snmp://example.com/bridge1/1.3.6.1.2.1.2.2.1.8.*\n\
    \   This example designates the ifOperStatus column of the IF-MIB in the\n   bridge1\
    \ SNMP context at example.com.\n      snmp://example.com//(1.3.6.1.2.1.2.2.1.7,1.3.6.1.2.1.2.2.1.8).*\n\
    \   This example designates all (ifAdminStatus, ifOperStatus) pairs in\n   the\
    \ IF-MIB in the default SNMP context at example.com.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   An intended use of this URI scheme is designation\
    \ of the location of\n   management access to communication devices.  Such location\n\
    \   information may be considered sensitive in some environments, making\n   it\
    \ important to control access to this information and possibly even\n   to encrypt\
    \ it when it is sent over the network.  All uses of this URI\n   scheme should\
    \ provide security mechanisms appropriate to the\n   environments in which such\
    \ uses are likely to be deployed.\n   The SNMP architecture includes control of\
    \ access to management\n   information (see Section 4.3 of [RFC3411]).  An SNMP\
    \ URI does not\n   contain sufficient security information to obtain access in\
    \ all\n   situations, as the SNMP URI syntax is incapable of encoding SNMP\n \
    \  securityModels, SNMP securityLevels, and credential or keying\n   information\
    \ for SNMP securityNames.  Other means are necessary to\n   provide such information;\
    \ one possibility is out-of-band pre-\n   configuration of the SNMP manager, as\
    \ shown in the diagrams in\n   Section 2.\n   By itself, the presence of a securityName\
    \ in an SNMP URI does not\n   authorize use of that securityName to access management\
    \ information.\n   Instead, the SNMP manager SHOULD match the securityName in\
    \ the URI to\n   an SNMP securityName and associated security information that\
    \ have\n   been pre-configured for use by the manager.  If an SNMP URI contains\n\
    \   a securityName that the SNMP manager is not provisioned to use, SNMP\n   operations\
    \ for that URI SHOULD NOT be generated.\n   SNMP versions prior to SNMPv3 did\
    \ not include adequate security.\n   Even if the network itself is secure (for\
    \ example, via use of IPsec),\n   there is no control over who on the secure network\
    \ is allowed to\n   access and GET/SET (read/change/create/delete) the objects\
    \ in MIB\n   modules.  It is RECOMMENDED that implementers consider the security\n\
    \   features provided by the SNMPv3 framework (see [RFC3410], Section 8,\n   for\
    \ an overview), including full support for SNMPv3 cryptographic\n   mechanisms\
    \ (for authentication and privacy).  This is of additional\n   importance for\
    \ MIB elements considered sensitive or vulnerable\n   because GETs have side effects.\n\
    \   Further, deployment of SNMP versions prior to SNMPv3 is NOT\n   RECOMMENDED.\
    \  Instead, it is RECOMMENDED to deploy SNMPv3 and to\n   enable cryptographic\
    \ security.  It is then a customer/operator\n   responsibility to ensure that\
    \ the SNMP entity giving access to a MIB\n   module instance is properly configured\
    \ to give access to the objects\n   only to those principals (users) that have\
    \ legitimate rights to\n   indeed GET or SET (read/change/create/delete) them.\n"
- title: 6.1.  SNMP URI to SNMP Gateway Security Considerations
  contents:
  - "6.1.  SNMP URI to SNMP Gateway Security Considerations\n   Additional security\
    \ considerations apply to SNMP gateways that\n   generate SNMP operations for\
    \ SNMP URIs and return the results to\n   clients (see Section 2) because management\
    \ information is\n   communicated beyond the SNMP framework.  In general, an SNMP\
    \ gateway\n   should have some knowledge of the structure and function of the\n\
    \   management information that it accesses via SNMP.  Among other\n   benefits,\
    \ this allows an SNMP gateway to avoid SNMP access control\n   failures because\
    \ the gateway can reject an SNMP URI that will cause\n   such failures before\
    \ generating any SNMP operations.\n   SNMP gateways SHOULD impose authorization\
    \ or access-control checks on\n   all clients.  If an SNMP gateway does not impose\
    \ authorization or\n   access controls, the gateway MUST NOT automatically obtain\
    \ or use\n   SNMP authentication material for arbitrary securityNames, as doing\
    \ so\n   would defeat SNMP's access controls.  Instead, all SNMP gateways\n  \
    \ SHOULD authenticate each client and check the client's authorization\n   to\
    \ use a securityName in an SNMP URI before using the securityName on\n   behalf\
    \ of that client.\n   An SNMP gateway is also responsible for ensuring that all\
    \ of its\n   communication is appropriately secured.  Specifically, an SNMP\n\
    \   gateway SHOULD ensure that communication of management information\n   with\
    \ any client is protected to at least the SNMP securityLevel used\n   for the\
    \ corresponding SNMP access (see Section 3.4.3 of [RFC3411] for\n   more information\
    \ on securityLevel).  If the client provides SNMP\n   security information, the\
    \ SNMP gateway SHOULD authenticate the client\n   and SHOULD ensure that an authenticated\
    \ cryptographic integrity check\n   is used for that communication to prevent\
    \ modification of the\n   security information.  In addition, if a client provides\
    \ any key or\n   secret, the SNMP gateway SHOULD ensure that encryption is used\
    \ in\n   addition to the integrity check for that communication to prevent\n \
    \  disclosure of keys or secrets.\n   There are management objects defined in\
    \ SNMP MIBs whose MAX-ACCESS is\n   read-write and/or read-create.  Such objects\
    \ may be considered\n   sensitive or vulnerable in some network environments.\
    \  SNMP gateway\n   support for SNMP SET operations in a non-secure environment\
    \ without\n   proper protection can have a negative effect on network operations.\n\
    \   The individual MIB module specifications, and especially their\n   security\
    \ considerations, should be consulted for further information.\n   Some readable\
    \ objects in some MIB modules (i.e., objects with a MAX-\n   ACCESS other than\
    \ not-accessible) may be considered sensitive or\n   vulnerable in some network\
    \ environments.  It is thus important to\n   control even GET access to these\
    \ objects via an SNMP gateway and\n   possibly to even encrypt the values of these\
    \ objects when they are\n   sent over the network.  The individual MIB module\
    \ specifications, and\n   especially their security considerations, should be\
    \ consulted for\n   further information.  This consideration also applies to objects\
    \ for\n   which read operations have side effects.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   The IANA has registered the URL registration template\
    \ found in\n   Appendix A in accordance with [RFC2717].\n"
- title: 8.  Normative References
  contents:
  - "8.  Normative References\n   [RFC2119] Bradner, S., \"Key words for use in RFCs\
    \ to Indicate\n             Requirement Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [RFC2234] Crocker, D. and P. Overell, \"Augmented BNF for Syntax\n       \
    \      Specifications: ABNF\", RFC 2234, November 1997.\n   [RFC3061] Mealling,\
    \ M., \"A URN Namespace of Object Identifiers\", RFC\n             3061, February\
    \ 2001.\n   [RFC3411] Harrington, D., Presuhn, R., and B. Wijnen, \"An\n     \
    \        Architecture for Describing Simple Network Management\n             Protocol\
    \ (SNMP) Management Frameworks\", STD 62, RFC 3411,\n             December 2002.\n\
    \   [RFC3416] Presuhn, R., \"Version 2 of the Protocol Operations for the\n  \
    \           Simple Network Management Protocol (SNMP)\", STD 62, RFC\n       \
    \      3416, December 2002.\n   [RFC3417] Presuhn, R., \"Transport Mappings for\
    \ the Simple Network\n             Management Protocol (SNMP)\", STD 62, RFC 3417,\
    \ December\n             2002.\n   [RFC3584] Frye, R., Levi, D., Routhier, S.,\
    \ and B. Wijnen,\n             \"Coexistence between Version 1, Version 2, and\
    \ Version 3 of\n             the Internet-standard Network Management Framework\"\
    , BCP\n             74, RFC 3584, August 2003.\n   [RFC3986] Berners-Lee, T.,\
    \ Fielding, R., and L. Masinter, \"Uniform\n             Resource Identifier (URI):\
    \ Generic Syntax\", STD 66, RFC\n             3986, January 2005.\n"
- title: 9.  Informative References
  contents:
  - "9.  Informative References\n   [RFC1738] Berners-Lee, T., Masinter, L., and M.\
    \ McCahill, \"Uniform\n             Resource Locators (URL)\", RFC 1738, December\
    \ 1994.\n   [RFC1900] Carpenter, B. and Y. Rekhter, \"Renumbering Needs Work\"\
    , RFC\n             1900, February 1996.\n   [RFC2717] Petke, R. and I. King,\
    \ \"Registration Procedures for URL\n             Scheme Names\", BCP 35, RFC\
    \ 2717, November 1999.\n   [RFC3410] Case, J., Mundy, R., Partain, D., and B.\
    \ Stewart,\n             \"Introduction and Applicability Statements for Internet-\n\
    \             Standard Management Framework\", RFC 3410, December 2002.\n   [RFC3430]\
    \ Schoenwaelder, J., \"Simple Network Management Protocol Over\n             Transmission\
    \ Control Protocol Transport Mapping\", RFC 3430,\n             December 2002.\n\
    \   [RFC3617] Lear, E., \"Uniform Resource Identifier (URI) Scheme and\n     \
    \        Applicability Statement for the Trivial File Transfer\n             Protocol\
    \ (TFTP)\", RFC 3617, October 2003.\n   [RFC4001] Daniele, M., Haberman, B., Routhier,\
    \ S., and J.\n             Schoenwaelder, \"Textual Conventions for Internet Network\n\
    \             Addresses\", RFC 4001, February 2005.\n"
- title: 10.  Acknowledgements
  contents:
  - "10.  Acknowledgements\n   Portions of this document were adapted from Eliot Lear's\
    \ TFTP URI\n   scheme specification [RFC3617].  Portions of the security\n   considerations\
    \ were adapted from the widely used security\n   considerations \"boilerplate\"\
    \ for MIB modules.  Comments from Ted\n   Hardie, Michael Mealing, Larry Masinter,\
    \ Frank Strauss, Bert Wijnen,\n   Steve Bellovin, the mreview@ops.ietf.org mailing\
    \ list and the\n   uri@w3c.org mailing list on earlier versions of this document\
    \ have\n   resulted in significant improvements and are gratefully acknowledged.\n"
- title: Appendix A.  Registration Template
  contents:
  - "Appendix A.  Registration Template\n   URL scheme name: snmp\n   URL scheme syntax:\
    \ Section 3\n   Character encoding considerations: Section 3\n   Intended usage:\
    \ Sections 1 and 2\n   Applications and/or protocols which use this scheme: SNMP,\
    \ all\n      versions, see [RFC3410] and [RFC3584].  Also SNMP over TCP,\n   \
    \   see [RFC3430].\n   Interoperability considerations: Section 4.4\n   Security\
    \ considerations: Section 6\n   Relevant publications: See [RFC3410] for list.\
    \  Also [RFC3430]\n      and [RFC3584].\n   Contact: David L. Black, see below\n\
    \   Author/Change Controller: IESG\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   David L. Black\n   EMC Corporation\n   176 South Street\n\
    \   Hopkinton, MA 01748\n   Phone: +1 (508) 293-7953\n   EMail: black_david@emc.com\n\
    \   Keith McCloghrie\n   Cisco Systems, Inc.\n   170 West Tasman Drive\n   San\
    \ Jose, CA USA 95134\n   Phone: +1 (408) 526-5260\n   EMail: kzm@cisco.com\n \
    \  Juergen Schoenwaelder\n   International University Bremen\n   P.O. Box 750\
    \ 561\n   28725 Bremen\n   Germany\n   Phone: +49 421 200 3587\n   EMail: j.schoenwaelder@iu-bremen.de\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
