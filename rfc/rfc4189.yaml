- title: __initial_text__
  contents:
  - "              Requirements for End-to-Middle Security for\n                 the\
    \ Session Initiation Protocol (SIP)\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   A Session Initiation Protocol (SIP) User Agent (UA) does not always\n\
    \   trust all intermediaries in its request path to inspect its message\n   bodies\
    \ and/or headers contained in its message.  The UA might want to\n   protect the\
    \ message bodies and/or headers from intermediaries, except\n   those that provide\
    \ services based on its content.  This situation\n   requires a mechanism called\
    \ \"end-to-middle security\" to secure the\n   information passed between the\
    \ UA and intermediaries, which does not\n   interfere with end-to-end security.\
    \  This document defines a set of\n   requirements for a mechanism to achieve\
    \ end-to-middle security.\n"
- title: Table of Contents
  contents:
  - 'Table of Contents

    '
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Session Initiation Protocol (SIP) [2] supports hop-by-hop\n\
    \   security using Transport Layer Security (TLS) [3] and end-to-end\n   security\
    \ using Secure MIME (S/MIME) [4].  Use of TLS assumes that a\n   SIP UA trusts\
    \ all proxy servers along its request path to inspect the\n   message bodies contained\
    \ in the message, and use of S/MIME assumes\n   that a SIP UA does not  trust\
    \ any proxy servers to do so.\n   However, there is a model in which trusted and\
    \ partially-trusted\n   proxy servers are mixed along a message path.  The partially-trusted\n\
    \   proxy servers are only trusted to provide SIP routing, but these\n   proxy\
    \ servers are not trusted by users to inspect its data, except\n   the routing\
    \ headers.  A hop-by-hop confidentiality service using TLS\n   is not suitable\
    \ for this model.  An end-to-end confidentiality\n   service using S/MIME is also\
    \ not suitable when the intermediaries\n   provide services based on reading the\
    \ message bodies and/or headers.\n   This problem is described in Section 23 of\
    \ [2].\n   In some cases, a UA might want to protect its message bodies and/or\n\
    \   headers from proxy servers along its request path, except from those\n   that\
    \ provide services based on reading its message bodies and/or\n   headers.  Conversely,\
    \ a proxy server might want to view the message\n   bodies and/or headers to sufficiently\
    \ provide these services.  Such\n   proxy servers are not always the first hop\
    \ from the UA.  This\n   situation requires a security mechanism to secure message\
    \ bodies\n   and/or headers between the UA and the proxy servers, while disclosing\n\
    \   information to those that need it.  We call this \"end-to-middle\n   security\"\
    .\n"
- title: 1.1.  Conventions Used in This Document
  contents:
  - "1.1.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC-2119 [1].\n"
- title: 2.  Use Cases
  contents:
  - '2.  Use Cases

    '
- title: 2.1.  Examples of Scenarios
  contents:
  - "2.1.  Examples of Scenarios\n   We describe here examples of scenarios in which\
    \ trusted and\n   partially-trusted proxy servers both exist in a message path.\
    \  These\n   situations demonstrate the reasons why end-to-middle security is\n\
    \   required.\n   In the following example, User #1 does not know the security\
    \ policies\n   or services provided by Proxy server #1 (Proxy#1).  User #1 sends\
    \ a\n   MESSAGE [5] request including S/MIME-encrypted message content for\n \
    \  end-to-end security, as shown in Figure 1, while Proxy #1 rejects the\n   request\
    \ based on its strict security policy that prohibits the\n   forwarding of unknown\
    \ data.\n               Home network\n               +---------------------+\n\
    \               | +-----+     +-----+ |   +-----+     +-----+\n   User #1-----|\
    \ |  C  |-----| [C] |-----| [C] |-----|  C  |-----User #2\n               | +-----+\
    \     +-----+ |   +-----+     +-----+\n               | UA #1      Proxy #1 |\
    \   Proxy #2     UA #2\n               +---------------------+\n   C:   Content\
    \ that UA #1 allows the entity to inspect\n   [C]: Content that UA #1 prevents\
    \ the entity from inspecting\n   Figure 1: Deployment example #1\n   In the second\
    \ example, Proxy server #1 is the home proxy server of\n   User #1 using UA #1.\
    \  User #1 communicates with User #2 through Proxy\n   #1 and Proxy #2, as shown\
    \ in Figure 2.  Although User #1 already\n   knows Proxy #1's security policy,\
    \ which requires the inspection of\n   the content of the MESSAGE request, User\
    \ #1 does not know whether\n   Proxy #2 is trustworthy, and thus wants to protect\
    \ the message bodies\n   in the request.  To accomplish this, UA #1 will need\
    \ to be able to\n   grant a trusted intermediary (Proxy #1) to inspect message\
    \ bodies,\n   while preserving their confidentiality from other intermediaries\n\
    \   (Proxy #2).\n   Even if UA #1's request message authorizes Proxy #1 to inspect\
    \ the\n   message bodies, UA #1 is unable to authorize the same proxy server to\n\
    \   inspect the message bodies in subsequent MESSAGE requests from UA #2.\n  \
    \            Home network\n              +---------------------+\n           \
    \   | +-----+     +-----+ |   +-----+     +-----+\n  User #1-----| |  C  |-----|\
    \  C  |-----| [C] |-----|  C  |----- User #2\n              | +-----+     +-----+\
    \ |   +-----+     +-----+\n              | UA #1      Proxy #1 |   Proxy #2  \
    \   UA #2\n              +---------------------+\n   C:   Content that UA #1 needs\
    \ to disclose\n   [C]: Content that UA #1 needs to protect\n   Figure 2: Deployment\
    \ example #2\n   In the third example, User #1 connects UA #1 to a proxy server\
    \ in a\n   visited (potentially insecure) network, e.g., a hotspot service or\
    \ a\n   roaming service.  Since User #1 wants to utilize certain home network\n\
    \   services, UA #1 connects to a home proxy server, Proxy #1.  However,\n   UA\
    \ #1 must connect to Proxy #1 via the proxy server of the visited\n   network\
    \ (Proxy A), because User #1 must follow the policy of that\n   network.  Proxy\
    \ A performs access control based on the destination\n   addresses of calls. \
    \ User #1 only trusts Proxy A to route requests,\n   not to inspect the message\
    \ bodies the requests contain, as shown in\n   Figure 3.  User #1 trusts Proxy\
    \ #1 both to route the requests and to\n   inspect the message bodies.\n   The\
    \ same problems as in the second example also exist here.\n               Visited\
    \ network\n              +---------------------+\n              | +-----+    \
    \ +-----+ |   +-----+     +-----+     +-----+\n   User #1 -- | |  C  |-----| [C]\
    \ |-----|  C  |-----| [C] |-----|  C  |\n              | +-----+     +-----+ |\
    \   +-----+     +-----+     +-----+\n              | UA #1       Proxy A |   Proxy\
    \ #1     Proxy #2    UA #2\n              +---------------------+\n   C:   Content\
    \ that UA #1 needs to disclose\n   [C]: Content that UA #1 needs to protect\n\
    \   Figure 3: Deployment example #3\n"
- title: 2.2.  Service Examples
  contents:
  - "2.2.  Service Examples\n   We describe here several services that require end-to-middle\n\
    \   security.\n"
- title: 2.2.1.  Logging Services for Instant Messages
  contents:
  - "2.2.1.  Logging Services for Instant Messages\n   Logging Services are provided\
    \ by the archiving function, which is\n   located in the proxy server, that logs\
    \ the message content exchanged\n   between UAs.  The archiving function could\
    \ be located at the\n   originator network and/or the destination network.  When\
    \ the content\n   of an instant message contains private information, UACs (UA\
    \ Clients)\n   encrypt the content for the UASes (UA Servers).  The archiving\n\
    \   function needs to log the content in a message body in bidirectional\n   MESSAGE\
    \ requests in such a way that the data is decipherable.  The\n   archiving function\
    \ also needs a way to verify the data integrity of\n   the content before logging.\n\
    \   This service might be deployed in financial networks, health care\n   service\
    \ provider's networks, as well as other networks in which\n   archiving communication\
    \ is required by their security policies.\n"
- title: 2.2.2.  Non-emergency Call Routing Based on the Location Object
  contents:
  - "2.2.2.  Non-emergency Call Routing Based on the Location Object\n   The Location\
    \ Object [6] includes a person's geographical location\n   information that is\
    \ privacy-sensitive.  Some proxy servers will have\n   the ability to provide\
    \ routing based on the geographical location\n   information.  When UAs want to\
    \ employ location-based routing in\n   non-emergency situations, the UAs need\
    \ to connect to the proxy\n   servers with such a capability and disclose the\
    \ geographical location\n   information contained in the message body of the INVITE\
    \ request,\n   while protecting it from other proxy servers along the request\
    \ path.\n   The Location Object also needs to be verified for data integrity by\n\
    \   the proxy servers before location-based routing is applied.\n   Sometimes\
    \ the UACs want to send the Location Object to the UASes.\n   This is another\
    \ good example that presents the need for UACs to\n   simultaneously send secure\
    \ data to a proxy server and to the UASes.\n"
- title: 2.2.3.  User Authentication
  contents:
  - '2.2.3.  User Authentication

    '
- title: 2.2.3.1.  User Authentication Using the AIBs
  contents:
  - "2.2.3.1.  User Authentication Using the AIBs\n   The Authenticated Identity Bodies\
    \ (AIBs) [7] is a digitally-signed\n   data that is used for identifying users.\
    \  Proxy servers that need to\n   authenticate a user, verify the signature. \
    \ When the originator needs\n   anonymity, the user identity in the AIB is encrypted\
    \ before being\n   signed.  Proxy servers that authenticate the user need to decrypt\
    \ the\n   body in order to view the user identity in the AIB.  Such proxy\n  \
    \ servers can be located adjacently and/or non-adjacently to the UA.\n   The AIB\
    \ could be included in all request/response messages.  The\n   proxy server needs\
    \ to view it in request messages in order to\n   authenticate users.  Another\
    \ proxy server sometimes needs to view it\n   in response messages for user authentication.\n"
- title: 2.2.3.2.  User Authentication in HTTP Digest Authentication
  contents:
  - "2.2.3.2.  User Authentication in HTTP Digest Authentication\n   User authentication\
    \ data for HTTP Digest authentication [8] includes\n   potentially private information,\
    \ such as a user name.  The user\n   authentication data can be set only in a\
    \ SIP header of request\n   messages.  This information needs to be transmitted\
    \ securely to\n   servers that authenticate users, located either adjacently and/or\n\
    \   non-adjacently to the UA.\n"
- title: 2.2.4.  Media-related Services
  contents:
  - "2.2.4.  Media-related Services\n   Firewall traversal is an example of services\
    \ based on media\n   information in a message body, such as the Session Description\n\
    \   Protocol (SDP) [9].  A firewall entity that supports the SIP\n   protocol,\
    \ or a midcom [10] agent co-located with a proxy server,\n   controls a firewall\
    \ based on the address and port information of\n   media streams in the SDP offer/answer.\
    \  The address and port\n   information in the SDP needs to be transmitted securely\
    \ to recipient\n   UAs and the proxy server operating as a midcom agent.  Therefore,\n\
    \   there is a need for a proxy server to be able to decrypt the SDP, as\n   well\
    \ as to verify the integrity of the SDP.\n   When the SDP includes key parameters\
    \ for Secure RTP (SRTP) [11], the\n   key parameters need to be encrypted only\
    \ for end-to-end\n   confidentiality.\n"
- title: 3.  Scope of End-to-Middle Security
  contents:
  - "3.  Scope of End-to-Middle Security\n   End-to-middle security consists of user\
    \ authentication, data\n   integrity, and data confidentiality.  Providing data\
    \ integrity\n   requires authenticating peer who creates the data.  However, this\n\
    \   document only describes requirements for data confidentiality and\n   data\
    \ integrity, since end-to-middle authentication is covered by\n   existing mechanisms\
    \ such as HTTP Digest authentication, S/MIME\n   Cryptographic Message Syntax\
    \ (CMS) SignedData body [12], or an AIB.\n   As for data integrity, the CMS SignedData\
    \ body can be used for\n   verification of the data integrity and authentication\
    \ of the signer\n   by any entities.  The CMS SignedData body can be used for\
    \ end-to-\n   middle security and end-to-end security simultaneously.  However,\
    \ a\n   proxy server generally does not verify the data integrity using the\n\
    \   CMS SignedData body, and there is no way for a UA to request the\n   proxy\
    \ server to verify the message.  Therefore, some new mechanisms\n   are needed\
    \ to achieve data integrity for end-to-middle security.\n   This document mainly\
    \ discusses requirements for data confidentiality\n   and the integrity of end-to-middle\
    \ security.\n"
- title: 4.  Requirements for a Solution
  contents:
  - "4.  Requirements for a Solution\n   We describe here requirements for a solution.\
    \  The requirements are\n   mainly applied during the phase of a dialog creation\
    \ or sending a\n   MESSAGE request.\n"
- title: 4.1.  General Requirements
  contents:
  - "4.1.  General Requirements\n   The following are general requirements for end-to-middle\n\
    \   confidentiality and integrity.\n   REQ-GEN-1: The solution SHOULD have little\
    \ impact on the way a UA\n              handles S/MIME-secured messages.\n   REQ-GEN-2:\
    \ It SHOULD NOT have an impact on proxy servers that do not\n              provide\
    \ services based on S/MIME-secured bodies in terms\n              of handling\
    \ the existing SIP headers.\n   REQ-GEN-3: It SHOULD NOT violate the standardized\
    \ mechanism of proxy\n              servers in terms of handling message bodies.\n\
    \   REQ-GEN-4: It SHOULD allow a UA to discover security policies of\n       \
    \       proxy servers.  Security policies imply what data is\n              needed\
    \ to disclose and/or verify in a message.\n                 This requirement is\
    \ necessary when the UA does not know\n                 statically which proxy\
    \ servers or domains need\n                 disclosing data and/or verification.\n"
- title: 4.2.  Requirements for End-to-Middle Confidentiality
  contents:
  - "4.2.  Requirements for End-to-Middle Confidentiality\n   REQ-CONF-1: The solution\
    \ MUST allow encrypted data to be shared with\n               the recipient UA\
    \ and a proxy server, when a UA wants.\n   REQ-CONF-2: It MUST NOT violate end-to-end\
    \ encryption when the\n               encrypted data does not need to be shared\
    \ with any proxy\n               servers.\n   REQ-CONF-3: It SHOULD allow a UA\
    \ to request a proxy server to view\n               specific message bodies. \
    \ The request itself SHOULD be\n               secure; namely it SHOULD be authenticated\
    \ for the UA and\n               verified for the data integrity.\n   REQ-CONF-4:\
    \ It MAY allow a UA to request that the recipient UA\n               disclose\
    \ information to the proxy server to which the\n               requesting UA is\
    \ initially disclosing information.  The\n               request itself SHOULD\
    \ be secure; namely it SHOULD be\n               authenticated for the UA and\
    \ verified for the data\n               integrity.\n                  This requirement\
    \ is necessary when a provider\n                  operating the proxy server allows\
    \ its security\n                  policies to be revealed to the provider serving\
    \ the\n                  recipient UA.\n"
- title: 4.3.  Requirements for End-to-Middle Integrity
  contents:
  - "4.3.  Requirements for End-to-Middle Integrity\n   This section enumerates the\
    \ requirements for the end-to-middle\n   integrity.  Verifying the data integrity\
    \ requires checking that the\n   data is created by the authenticated user and\
    \ not forged by a\n   malicious user.  Therefore, verification of the data integrity\n\
    \   requires the user authentication.\n   REQ-INT-1: The solution SHOULD work\
    \ even when the SIP end-to-end\n              authentication and integrity services\
    \ are enabled.\n   REQ-INT-2: It SHOULD allow a UA to request a proxy server to\
    \ verify\n              specific message bodies and authenticate the user.  The\n\
    \              request itself SHOULD be secure; namely it SHOULD be\n        \
    \      authenticated for the UA and verified for the data\n              integrity.\n\
    \   REQ-INT-3: It SHOULD allow a UA to request the recipient UA to send\n    \
    \          the verification data of the same information that the\n          \
    \    requesting UA is providing to the proxy server.  The\n              request\
    \ itself SHOULD be secure; namely it SHOULD be\n              authenticated for\
    \ the UA and verified for the data\n              integrity.\n               \
    \  This requirement is necessary when a provider operating\n                 the\
    \ proxy server allows its security policies to be\n                 revealed to\
    \ the provider serving the recipient UA.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   This document describes the requirements for\
    \ confidentiality and\n   integrity between a UA and a proxy server.  Although\
    \ this document\n   does not cover any requirements for authentication, verifying\
    \ the\n   data integrity requires peer authentication.  Also, peer\n   authentication\
    \ is important in order to prevent attacks from\n   malicious users and servers.\n\
    \   The end-to-middle security requires additional processing on message\n   bodies,\
    \ such as unpacking MIME structure, data decryption, and/or\n   signature verification\
    \ to proxy servers.  Therefore, the proxy\n   servers that enable end-to-middle\
    \ security are vulnerable to a\n   Denial-of-Services attack.  A threat model\
    \ is where a malicious user\n   sends many complicated-MIME-structure messages\
    \ to a proxy server,\n   containing user authentication data obtained by eavesdropping.\n\
    \   Another threat model is where a malicious proxy server sends many\n   complicated-MIME-structure\
    \ messages to a proxy server, containing the\n   source IP address and the Via\
    \ header of an adjacent proxy server.\n   These attacks will slow down the overall\
    \ performance of target proxy\n   servers.\n   To prevent these attacks, user\
    \ and server authentication mechanisms\n   need to be protected against replay\
    \ attacks, or the user and server\n   authentication always need to be executed\
    \ simultaneously with\n   protection of data integrity.  In order to prevent these\
    \ attacks, the\n   following requirements should be met.\n   o  The solution MUST\
    \ support mutual authentication, data\n      confidentiality, and data integrity\
    \ protection between a UA and a\n      proxy server.\n   o  It SHOULD support\
    \ protection against a replay attack for user\n      authentication.\n   o  It\
    \ SHOULD simultaneously support user authentication and data\n      integrity\
    \ protection.\n         These last two requirements are met by HTTP Digest\n \
    \        authentication.\n   o  It MUST support mutual authentication, data confidentiality,\
    \ and\n      data integrity protection between proxy servers.\n   o  It SHOULD\
    \ support protection against a replay attack for server\n      authentication.\n\
    \   o  It SHOULD simultaneously support server authentication and data\n     \
    \ integrity protection.\n         These last three requirements are met by TLS.\n"
- title: 6.  Acknowledgments
  contents:
  - "6.  Acknowledgments\n   The authors would like to thank to Rohan Mahy and Cullen\
    \ Jennings for\n   their initial support of this concept, and to Jon Peterson,\
    \ Gonzalo\n   Camarillo, Sean Olson, Mark Baugher, Mary Barnes, and others for\n\
    \   their reviews and constructive comments.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [1]  Bradner, S., \"Key words for use in RFCs\
    \ to Indicate Requirement\n        Levels\", BCP 14, RFC 2119, March 1997.\n \
    \  [2]  Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston, A.,\n       \
    \ Peterson, J., Sparks, R., Handley, M., and E. Schooler, \"SIP:\n        Session\
    \ Initiation Protocol\", RFC 3261, June 2002.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [3]  Dierks, T. and C. Allen, \"The TLS Protocol\
    \ Version 1.0\", RFC\n        2246, January 1999.\n   [4]  Ramsdell, B., \"Secure/Multipurpose\
    \ Internet Mail Extensions\n        (S/MIME) Version 3.1 Certificate Handling\"\
    , RFC 3850, July 2004.\n   [5]  Campbell, B., Rosenberg, J., Schulzrinne, H.,\
    \ Huitema, C., and\n        D. Gurle, \"Session Initiation Protocol (SIP) Extension\
    \ for\n        Instant Messaging\", RFC 3428, December 2002.\n   [6]  Peterson,\
    \ J., \"A Presence-based GEOPRIV Location Object Format\",\n        RFC 4119,\
    \ October 2005.\n   [7]  Peterson, J., \"Session Initiation Protocol (SIP) Authenticated\n\
    \        Identity Body (AIB) Format\", RFC 3893, September 2004.\n   [8]  Franks,\
    \ J., Hallam-Baker, P., Hostetler, J., Lawrence, S.,\n        Leach, P., Luotonen,\
    \ A., and L. Stewart, \"HTTP Authentication:\n        Basic and Digest Access\
    \ Authentication\", RFC 2617, June 1999.\n   [9]  Handley, M. and V. Jacobson,\
    \ \"SDP: Session Description\n        Protocol\", RFC 2327, April 1998.\n   [10]\
    \ Srisuresh, P., Kuthan, J., Rosenberg, J., Molitor, A., and A.\n        Rayhan,\
    \ \"Middlebox communication architecture and framework\",\n        RFC 3303, August\
    \ 2002.\n   [11] Baugher, M., McGrew, D., Naslund, M., Carrara, E., and K.\n \
    \       Norrman, \"The Secure Real-time Transport Protocol (SRTP)\", RFC\n   \
    \     3711, March 2004.\n   [12] Housley, R., \"Cryptographic Message Syntax (CMS)\"\
    , RFC 3852,\n        July 2004.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Kumiko Ono\n   Network Service Systems Laboratories\n\
    \   NTT Corporation\n   9-11, Midori-Cho 3-Chome\n   Musashino-shi, Tokyo  180-8585\n\
    \   Japan\n   EMail: ono.kumiko@lab.ntt.co.jp, kumiko@cs.columbia.edu\n   Shinya\
    \ Tachimoto\n   Network Service Systems Laboratories\n   NTT Corporation\n   9-11,\
    \ Midori-Cho 3-Chome\n   Musashino-shi, Tokyo  180-8585\n   Japan\n   EMail: tachimoto.shinya@lab.ntt.co.jp\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
