- title: __initial_text__
  contents:
  - " Using POST to Add Members to Web Distributed Authoring and Versioning\n    \
    \                      (WebDAV) Collections\n"
- title: Abstract
  contents:
  - "Abstract\n   The Hypertext Transfer Protocol (HTTP) Extensions for the Web\n\
    \   Distributed Authoring and Versioning (WebDAV) do not define the\n   behavior\
    \ for the \"POST\" method when applied to collections, as the\n   base specification\
    \ (HTTP) leaves implementers lots of freedom for the\n   semantics of \"POST\"\
    .\n   This has led to a situation where many WebDAV servers do not\n   implement\
    \ POST for collections at all, although it is well suited to\n   be used for the\
    \ purpose of adding new members to a collection, where\n   the server remains\
    \ in control of the newly assigned URL.  In fact,\n   the Atom Publishing Protocol\
    \ (AtomPub) uses POST exactly for that\n   purpose.  On the other hand, WebDAV-based\
    \ protocols, such as the\n   Calendaring Extensions to WebDAV (CalDAV), frequently\
    \ require clients\n   to pick a unique URL, although the server could easily perform\
    \ that\n   task.\n   This specification defines a discovery mechanism through\
    \ which\n   servers can advertise support for POST requests with the\n   aforementioned\
    \ \"add collection member\" semantics.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5995.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Terminology .....................................................4\n  \
    \ 3. Protocol Extension ..............................................4\n    \
    \  3.1. Definition of \"Add-Member\" URI .............................5\n    \
    \  3.2. Discovery ..................................................6\n      \
    \     3.2.1. DAV:add-member Property (Protected) .................6\n        \
    \   3.2.2. Example .............................................6\n      3.3.\
    \ Relation to AtomPub's \"Slug\" Header Field ..................7\n      3.4.\
    \ Example Operation ..........................................7\n   4. Additional\
    \ Semantics for Existing Methods .......................8\n      4.1. Additional\
    \ Preconditions ...................................8\n      4.2. Example: Failed\
    \ PUT Request ................................8\n   5. Relationship to WebDAV\
    \ Access Control Protocol ..................9\n   6. Internationalization Considerations\
    \ .............................9\n   7. Security Considerations .........................................9\n\
    \   8. Acknowledgements ...............................................10\n  \
    \ 9. References .....................................................10\n    \
    \  9.1. Normative References ......................................10\n      9.2.\
    \ Informative References ....................................11\n   Index .............................................................11\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Hypertext Transfer Protocol (HTTP) Extensions for the\
    \ Web\n   Distributed Authoring and Versioning (WebDAV) ([RFC4918],\n   Section\
    \ 9.5) do not define the behavior for the \"POST\" method when\n   applied to\
    \ collections, as the base specification (HTTP) leaves\n   implementers lots of\
    \ freedom for the semantics of \"POST\":\n      9.5 POST for Collections\n   \
    \   Since by definition the actual function performed by POST is\n      determined\
    \ by the server and often depends on the particular\n      resource, the behavior\
    \ of POST when applied to collections cannot\n      be meaningfully modified because\
    \ it is largely undefined.  Thus,\n      the semantics of POST are unmodified\
    \ when applied to a collection.\n   This has led to a situation where many WebDAV\
    \ servers do not\n   implement POST for collections at all, although it is well\
    \ suited to\n   be used for the purpose of adding new members to a collection,\
    \ where\n   the server remains in control of the newly assigned URL.  In fact,\n\
    \   the Atom Publishing Protocol (AtomPub) uses POST exactly for that\n   purpose\
    \ ([RFC5023], Section 9.2):\n      9.2 Creating Resources with POST\n      To\
    \ add members to a Collection, clients send POST requests to the\n      URI of\
    \ the Collection.\n   On the other hand, WebDAV-based protocols, such as Calendaring\n\
    \   Extensions to WebDAV (CalDAV), frequently require clients to pick a\n   unique\
    \ URL, although the server could easily perform that task\n   ([RFC4791], Section\
    \ 5.3.2):\n      5.3.2 Creating Calendar Object Resources\n      ...\n      When\
    \ servers create new resources, it's not hard for the server to\n      choose\
    \ an unmapped URI.  It's slightly tougher for clients,\n      because a client\
    \ might not want to examine all resources in the\n      collection and might not\
    \ want to lock the entire collection to\n      ensure that a new resource isn't\
    \ created with a name collision.\n      (...)\n   Letting the server choose the\
    \ member URI not only is a simplification\n   for certain types of clients, but\
    \ can also reduce the complexity of\n   the server (in that it doesn't need to\
    \ persist an additional client-\n   supplied identifier where it already has an\
    \ internal one like a\n   Universally Unique Identifier (UUID) or a primary key).\n\
    \      Note: The vCard Extensions to WebDAV (CardDAV) ([CARDDAV]) suffer\n   \
    \   from the same issue, and may be able to take advantage of this\n      specification.\n\
    \   This specification defines a discovery mechanism through which\n   servers\
    \ can advertise support for POST requests with the\n   aforementioned \"add collection\
    \ member\" semantics.\n   This specification deliberately only addresses the use\
    \ case of\n   creating new non-collection resources.  It was not a goal for this\n\
    \   specification to supply the same functionality for creating\n   collection\
    \ resources (MKCOL) or for other operations that require the\n   client to specify\
    \ a new URL (LOCK, MOVE, or COPY).\n      Note: The author previously proposed\
    \ a new HTTP method for exactly\n      this purpose ([ADDMEMBER]), but quite a\
    \ few reviewers pointed out\n      that this would duplicate the original semantics\
    \ of POST.  Thus,\n      this proposal, which avoids adding a new HTTP method,\
    \ is made.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The terminology used here follows that in the WebDAV specification\n\
    \   ([RFC4918]).\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n\
    \   This document uses XML DTD fragments ([XML]) as a purely notational\n   convention.\
    \  In particular:\n   o  Element ordering is irrelevant.\n   o  Extension elements/attributes\
    \ (elements/attributes not already\n      defined as valid child elements) may\
    \ be added anywhere, except\n      when explicitly stated otherwise.\n      Note:\
    \ This specification defines new properties and precondition\n      names in the\
    \ \"DAV:\" namespace, which the WebDAV specification\n      reserves for use by\
    \ the IETF ([RFC4918], Section 21.1).  However,\n      there was rough consensus\
    \ in the WebDAV community that the\n      specification is of general applicability\
    \ to other WebDAV-related\n      standards efforts, and thus deserves inclusion\
    \ into the base\n      namespace.\n"
- title: 3.  Protocol Extension
  contents:
  - "3.  Protocol Extension\n   Due to the reasons stated in Section 1, clients cannot\
    \ rely on a\n   specific server behavior when POST is applied to a collection.\
    \  This\n   problem is addressed by this specification by allowing servers to\n\
    \   advertise a URI that has the desired \"add member\" semantics.\n   Servers\
    \ that already use POST for a different purpose can just expose\n   a separate\
    \ URI.  Other servers can just advertise the collection's\n   own URI, thus avoiding\
    \ minting another URI for a limited purpose.\n"
- title: 3.1.  Definition of "Add-Member" URI
  contents:
  - "3.1.  Definition of \"Add-Member\" URI\n   The \"Add-Member\" URI of a WebDAV\
    \ collection is a URI that will accept\n   HTTP POST requests, and will interpret\
    \ these as requests to store the\n   enclosed entity as a new internal member\
    \ of the collection (see\n   Section 3 of [RFC4918] for the definition of \"internal\
    \ member\").  It\n   MUST identify a resource on the same server as the WebDAV\
    \ collection\n   (the host and port components ([RFC2616], Section 3.2.2) of the\
    \ URIs\n   must match).\n   If there are preconditions related to creating a resource\
    \ in the\n   collection using a PUT request, then those same preconditions apply\n\
    \   to the new POST request behavior, and the same HTTP response body\n   will\
    \ be returned on failure.\n   The URI of the newly created resource is returned\
    \ in the HTTP\n   Location response header field ([RFC2616], Section 14.30).\n\
    \      Note: The fact that a server advertises an \"Add-Member\" URI does\n  \
    \    not imply any special semantics of the collection itself.  For\n      instance,\
    \ member URIs assigned by the server are not necessarily\n      unique over time\
    \ (a member URI may be assigned again to a new\n      resource when it previously\
    \ was removed).\n      Note: The \"Add-Member\" URI can be identical to the collection's\n\
    \      URI (in which case the server just advertises the fact that POST\n    \
    \  to the WebDAV collection's URI is supported as defined within this\n      specification).\
    \  But it can also be different from it, in which\n      case it doesn't need\
    \ to have any relation to the collection's URI.\n      Given a collection URI\
    \ of\n      /docs/collection/\n      any of the URIs below might occur as \"Add-Member\"\
    \ URIs:\n      /docs/collection/\n      /docs/collection/;post\n      /docs/collection;post/\n\
    \      /docs/collection/&post\n      /post-service?path=/collection/\n      The\
    \ remainder of the document uses the same format just for\n      reasons of consistency;\
    \ any other HTTP URI on the same server\n      would do as well.\n"
- title: 3.2.  Discovery
  contents:
  - '3.2.  Discovery

    '
- title: 3.2.1.  DAV:add-member Property (Protected)
  contents:
  - "3.2.1.  DAV:add-member Property (Protected)\n   DAV:add-member is a protected\
    \ property (see [RFC4918], Section 15)\n   defined on WebDAV collections, and\
    \ contains the \"Add-Member\" URI for\n   that collection (embedded inside a DAV:href\
    \ element).\n   <!ELEMENT add-member (href)>\n   <!-- href: defined in [RFC4918],\
    \ Section 14.7 -->\n   A PROPFIND/allprop request SHOULD NOT return this property\
    \ (see\n   [RFC4918], Section 9.1).  Servers MUST implement the DAV:supported-\n\
    \   live-property-set property defined in Section 3.1.4 of [RFC3253], and\n  \
    \ report the property DAV:add-member as a supported live property.\n"
- title: 3.2.2.  Example
  contents:
  - "3.2.2.  Example\n   >>Request\n   PROPFIND /collection/ HTTP/1.1\n   Host: example.com\n\
    \   Content-Type: application/xml; charset=\"utf-8\"\n   Content-Length: 118\n\
    \   <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n   <propfind xmlns=\"DAV:\">\n\
    \     <prop>\n       <add-member/>\n     </prop>\n   </propfind>\n   >>Response\n\
    \   HTTP/1.1 207 Multi-Status\n   Content-Type: application/xml; charset=\"utf-8\"\
    \n   Content-Length: 340\n   <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n   <multistatus\
    \ xmlns=\"DAV:\">\n     <response>\n       <href>/collection/</href>\n       <propstat>\n\
    \         <prop>\n           <add-member>\n             <href>/collection;add-member/</href>\n\
    \           </add-member>\n         </prop>\n         <status>HTTP/1.1 200 OK</status>\n\
    \       </propstat>\n     </response>\n   </multistatus>\n   In this case, the\
    \ server has minted a separate URI for the purpose of\n   adding new content.\n"
- title: 3.3.  Relation to AtomPub's "Slug" Header Field
  contents:
  - "3.3.  Relation to AtomPub's \"Slug\" Header Field\n   In the AtomPub protocol,\
    \ clients can use the entity header field\n   \"Slug\" to suggest parts of the\
    \ URI to be created (see [RFC5023],\n   Section 9.7).  Note that servers are free\
    \ to ignore this suggestion,\n   or to use whatever algorithm makes sense to generate\
    \ the new URI.\n   The same applies to the extension defined here: clients can\
    \ use the\n   \"Slug\" header field, as by definition it is a generic HTTP header\n\
    \   field.  Servers should process it exactly in the way defined by\n   AtomPub.\n"
- title: 3.4.  Example Operation
  contents:
  - "3.4.  Example Operation\n   >>Request\n   POST /collection;add-member/ HTTP/1.1\n\
    \   Host: example.com\n   Content-Type: text/plain\n   Slug: Sample Title\n  \
    \ Content-Length: 12\n   Sample text.\n   >>Response\n   HTTP/1.1 201 Created\n\
    \   Location: http://example.com/collection/sample%20title\n"
- title: 4.  Additional Semantics for Existing Methods
  contents:
  - "4.  Additional Semantics for Existing Methods\n   One important use case for\
    \ this specification is collections that act\n   as WebDAV collections for the\
    \ purpose of read access (PROPFIND\n   Depth 1/Infinity), but which only support\
    \ internal member URIs\n   assigned by the server.  These collections will not\
    \ allow a client to\n   create a new member using methods like PUT, MKCOL, LOCK,\
    \ COPY, or\n   MOVE.  Therefore, this specification defines a new precondition\
    \ name\n   ([RFC4918], Section 16) that can be used to provide the client with\n\
    \   additional information regarding exactly why the request failed.\n      Note:\
    \ Although the precondition defined below can be used for\n      methods other\
    \ than PUT, the \"Add-Member\" mechanism defined by this\n      specification\
    \ deliberately is restricted to PUT.\n"
- title: 4.1.  Additional Preconditions
  contents:
  - "4.1.  Additional Preconditions\n   (DAV:allow-client-defined-URI): the server\
    \ allows clients to specify\n   the last path segment for newly created resources.\n\
    \   The precondition element MAY contain an add-member-uri XML element\n   specifying\
    \ the \"Add-Member\" URI associated with the collection, on\n   which the creation\
    \ of a new child resource was attempted:\n   <!ELEMENT allow-client-defined-uri\
    \ (add-member?)>\n"
- title: '4.2.  Example: Failed PUT Request'
  contents:
  - "4.2.  Example: Failed PUT Request\n   In this example, the client tries to use\
    \ PUT to create a new internal\n   member of /collection/.\n   >>Request\n   PUT\
    \ /collection/new.txt HTTP/1.1\n   Host: example.com\n   Content-Type: text/plain\n\
    \   Content-Length: 12\n   Sample text.\n   >>Response\n   HTTP/1.1 405 Method\
    \ Not Allowed\n   Allow: GET, HEAD, TRACE, PROPFIND, COPY, MOVE\n   Content-Type:\
    \ application/xml; charset=UTF-8\n   Content-Length: 172\n   <error xmlns=\"DAV:\"\
    >\n     <allow-client-defined-uri>\n       <add-member>\n         <href>/collection;add-member/</href>\n\
    \       </add-member>\n     </allow-client-defined-uri>\n   </error>\n   The request\
    \ fails with a 405 (Method Not Allowed) status, but also\n   provides the reason,\
    \ and a pointer to the \"Add-Member\" URI in the\n   response body.\n"
- title: 5.  Relationship to WebDAV Access Control Protocol
  contents:
  - "5.  Relationship to WebDAV Access Control Protocol\n   The WebDAV Access Control\
    \ Protocol specification requires the DAV:\n   bind privilege to be granted on\
    \ a collection for the client to be\n   able to add new collection members ([RFC3744],\
    \ Section 3.9).\n   Consistent with that, a server MUST reject a POST request\
    \ to the Add-\n   Member URI of a collection, unless the principal executing the\n\
    \   request is granted DAV:bind privilege on the associated WebDAV\n   collection\
    \ resource.\n"
- title: 6.  Internationalization Considerations
  contents:
  - "6.  Internationalization Considerations\n   This document does not introduce\
    \ any new internationalization\n   considerations beyond those discussed in Section\
    \ 19 of [RFC4918].\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   Security considerations applicable to HTTP [RFC2616],\
    \ WebDAV\n   [RFC4918], and XML [XML] apply for this specification as well,\n\
    \   namely, Section 20 of [RFC4918] and Section 7 of [RFC3470].\n   Furthermore,\
    \ servers should be aware that deriving the member path\n   from the data being\
    \ stored in the resource could potentially expose\n   confidential information.\
    \  This could even be the case when only a\n   hash code of the content is used.\n\
    \   In addition, on servers that do not support this specification, a\n   malevolent\
    \ user could set the DAV:add-member URI as a custom\n   property, tricking other\
    \ users to post content to an entirely\n   different URI.  Clients can protect\
    \ themselves against this\n   scenario by\n   o  not following DAV:add-member\
    \ URIs to different servers, and/or\n   o  verifying that the DAV:add-member property\
    \ is indeed a live\n      property (this can be achieved by testing the DAV:supported-live-\n\
    \      property-set property, or by checking whether DAV:add-member is\n     \
    \ returned upon PROPFIND/allprop).\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   This document has benefited from thoughtful discussion\
    \ by Cyrus Daboo\n   and Bernard Desruisseaux.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC2119]   Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n               Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2616]   Fielding, R., Gettys, J., Mogul, J., Frystyk, H.,\n  \
    \             Masinter, L., Leach, P., and T. Berners-Lee, \"Hypertext\n     \
    \          Transfer Protocol -- HTTP/1.1\", RFC 2616, June 1999.\n   [RFC3253]\
    \   Clemm, G., Amsden, J., Ellison, T., Kaler, C., and J.\n               Whitehead,\
    \ \"Versioning Extensions to WebDAV (Web\n               Distributed Authoring\
    \ and Versioning)\", RFC 3253,\n               March 2002.\n   [RFC3744]   Clemm,\
    \ G., Reschke, J., Sedlar, E., and J. Whitehead,\n               \"Web Distributed\
    \ Authoring and Versioning (WebDAV) Access\n               Control Protocol\"\
    , RFC 3744, May 2004.\n   [RFC4918]   Dusseault, L., Ed., \"HTTP Extensions for\
    \ Web Distributed\n               Authoring and Versioning (WebDAV)\", RFC 4918,\
    \ June 2007.\n   [XML]       Bray, T., Paoli, J., Sperberg-McQueen, C., Maler,\
    \ E., and\n               F. Yergeau, \"Extensible Markup Language (XML) 1.0 (Fifth\n\
    \               Edition)\", W3C REC-xml-20081126, November 2008,\n           \
    \    <http://www.w3.org/TR/2008/REC-xml-20081126/>.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [ADDMEMBER] Reschke, J., \"The HTTP ADDMEMBER\
    \ Method\", Work\n               in Progress, February 2005.\n   [CARDDAV]   Daboo,\
    \ C., \"vCard Extensions to WebDAV (CardDAV)\", Work\n               in Progress,\
    \ November 2009.\n   [RFC3470]   Hollenbeck, S., Rose, M., and L. Masinter, \"\
    Guidelines\n               for the Use of Extensible Markup Language (XML) within\n\
    \               IETF Protocols\", BCP 70, RFC 3470, January 2003.\n   [RFC4791]\
    \   Daboo, C., Desruisseaux, B., and L. Dusseault,\n               \"Calendaring\
    \ Extensions to WebDAV (CalDAV)\", RFC 4791,\n               March 2007.\n   [RFC5023]\
    \   Gregorio, J., Ed. and B. de hOra, Ed., \"The Atom\n               Publishing\
    \ Protocol\", RFC 5023, October 2007.\n"
- title: Index
  contents:
  - "Index\n   A\n      Add-Member URI  5\n   C\n      Condition Names\n         DAV:allow-client-defined-URI\
    \ (pre)  8\n      COPY method\n         Additional Preconditions  8\n   D\n  \
    \    DAV:allow-client-defined-URI  8\n   L\n      LOCK method\n         Additional\
    \ Preconditions  8\n   M\n      MKCOL method\n         Additional Preconditions\
    \  8\n      MOVE method\n         Additional Preconditions  8\n   P\n      PUT\
    \ method\n         Additional Preconditions  8\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Julian F. Reschke\n   greenbytes GmbH\n   Hafenweg 16\n\
    \   Muenster, NW  48155\n   Germany\n   Phone: +49 251 2807760\n   EMail: julian.reschke@greenbytes.de\n\
    \   URI:   http://greenbytes.de/tech/webdav/\n"
