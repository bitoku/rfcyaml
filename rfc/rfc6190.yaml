- contents:
  - '              RTP Payload Format for Scalable Video Coding

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This memo describes an RTP payload format for Scalable Video Coding\n
    \  (SVC) as defined in Annex G of ITU-T Recommendation H.264, which is\n   technically
    identical to Amendment 3 of ISO/IEC International\n   Standard 14496-10.  The
    RTP payload format allows for packetization\n   of one or more Network Abstraction
    Layer (NAL) units in each RTP\n   packet payload, as well as fragmentation of
    a NAL unit in multiple\n   RTP packets.  Furthermore, it supports transmission
    of an SVC stream\n   over a single as well as multiple RTP sessions.  The payload
    format\n   defines a new media subtype name \"H264-SVC\", but is still backward\n
    \  compatible to RFC 6184 since the base layer, when encapsulated in its\n   own
    RTP stream, must use the H.264 media subtype name (\"H264\") and\n   the packetization
    method specified in RFC 6184.  The payload format\n   has wide applicability in
    videoconferencing, Internet video\n   streaming, and high-bitrate entertainment-quality
    video, among\n   others.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6190.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n   This document may contain
    material from IETF Documents or IETF\n   Contributions published or made publicly
    available before November\n   10, 2008.  The person(s) controlling the copyright
    in some of this\n   material may not have granted the IETF Trust the right to
    allow\n   modifications of such material outside the IETF Standards Process.\n
    \  Without obtaining an adequate license from the person(s) controlling\n   the
    copyright in such materials, this document may not be modified\n   outside the
    IETF Standards Process, and derivative works of it may\n   not be created outside
    the IETF Standards Process, except to format\n   it for publication as an RFC
    or to translate it into languages other\n   than English.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................5\n
    \     1.1. The SVC Codec ..............................................6\n           1.1.1.
    Overview ............................................6\n           1.1.2. Parameter
    Sets ......................................8\n           1.1.3. NAL Unit Header
    .....................................9\n      1.2. Overview of the Payload Format
    ............................12\n           1.2.1. Design Principles ..................................12\n
    \          1.2.2. Transmission Modes and Packetization Modes .........13\n           1.2.3.
    New Payload Structures .............................15\n   2. Conventions ....................................................16\n
    \  3. Definitions and Abbreviations ..................................16\n      3.1.
    Definitions ...............................................16\n           3.1.1.
    Definitions from the SVC Specification .............16\n           3.1.2. Definitions
    Specific to This Memo ..................18\n      3.2. Abbreviations .............................................22\n
    \  4. RTP Payload Format .............................................23\n      4.1.
    RTP Header Usage ..........................................23\n      4.2. NAL
    Unit Extension and Header Usage .......................23\n           4.2.1. NAL
    Unit Extension .................................23\n           4.2.2. NAL Unit
    Header Usage ..............................24\n      4.3. Payload Structures ........................................25\n
    \     4.4. Transmission Modes ........................................28\n      4.5.
    Packetization Modes .......................................28\n           4.5.1.
    Packetization Modes for Single-Session\n                  Transmission .......................................28\n
    \          4.5.2. Packetization Modes for Multi-Session\n                  Transmission
    .......................................29\n      4.6. Single NAL Unit Packets
    ...................................32\n      4.7. Aggregation Packets .......................................33\n
    \          4.7.1. Non-Interleaved Multi-Time Aggregation\n                  Packets
    (NI-MTAPs) .................................33\n      4.8. Fragmentation Units
    (FUs) .................................35\n      4.9. Payload Content Scalability
    Information (PACSI) NAL Unit ..35\n      4.10. Empty NAL unit ...........................................43\n
    \     4.11. Decoding Order Number (DON) ..............................43\n           4.11.1.
    Cross-Session DON (CS-DON) for\n                   Multi-Session Transmission
    ........................43\n   5. Packetization Rules ............................................45\n
    \     5.1. Packetization Rules for Single-Session Transmission .......45\n      5.2.
    Packetization Rules for Multi-Session Transmission ........46\n           5.2.1.
    NI-T/NI-TC Packetization Rules .....................47\n           5.2.2. NI-C/NI-TC
    Packetization Rules .....................49\n           5.2.3. I-C Packetization
    Rules ............................50\n           5.2.4. Packetization Rules for
    Non-VCL NAL Units ..........50\n           5.2.5. Packetization Rules for Prefix
    NAL Units ...........51\n   6. De-Packetization Process .......................................51\n
    \     6.1. De-Packetization Process for Single-Session Transmission ..51\n      6.2.
    De-Packetization Process for Multi-Session Transmission ...51\n           6.2.1.
    Decoding Order Recovery for the NI-T and\n                  NI-TC Modes ........................................52\n
    \                 6.2.1.1. Informative Algorithm for NI-T\n                           Decoding
    Order Recovery within\n                           an Access Unit ............................55\n
    \          6.2.2. Decoding Order Recovery for the NI-C,\n                  NI-TC,
    and I-C Modes ...............................57\n   7. Payload Format Parameters
    ......................................59\n      7.1. Media Type Registration ...................................60\n
    \     7.2. SDP Parameters ............................................75\n           7.2.1.
    Mapping of Payload Type Parameters to SDP ..........75\n           7.2.2. Usage
    with the SDP Offer/Answer Model ..............76\n           7.2.3. Dependency
    Signaling in Multi-Session\n                  Transmission .......................................84\n
    \          7.2.4. Usage in Declarative Session Descriptions ..........85\n      7.3.
    Examples ..................................................86\n           7.3.1.
    Example for Offering a Single SVC Session ..........86\n           7.3.2. Example
    for Offering a Single SVC Session Using\n                  scalable-layer-id ..................................87\n
    \          7.3.3. Example for Offering Multiple Sessions in MST ......87\n           7.3.4.
    Example for Offering Multiple Sessions in\n                  MST Including Operation
    with Answerer Using\n                  scalable-layer-id ..................................89\n
    \          7.3.5. Example for Negotiating an SVC Stream with\n                  a
    Constrained Base Layer in SST ....................90\n      7.4. Parameter Set
    Considerations ..............................91\n   8. Security Considerations
    ........................................91\n   9. Congestion Control .............................................92\n
    \  10. IANA Considerations ...........................................93\n   11.
    Informative Appendix: Application Examples ....................93\n      11.1.
    Introduction .............................................93\n      11.2. Layered
    Multicast ........................................93\n      11.3. Streaming ................................................94\n
    \     11.4. Videoconferencing (Unicast to MANE, Unicast to\n            Endpoints)
    ...............................................95\n      11.5. Mobile TV (Multicast
    to MANE, Unicast to Endpoint) .......96\n   12. Acknowledgements ..............................................97\n
    \  13. References ....................................................97\n      13.1.
    Normative References .....................................97\n      13.2. Informative
    References ...................................98\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This memo specifies an RTP [RFC3550] payload format for
    the Scalable\n   Video Coding (SVC) extension of the H.264/AVC video coding standard.\n
    \  SVC is specified in Amendment 3 to ISO/IEC 14496 Part 10\n   [ISO/IEC14496-10]
    and equivalently in Annex G of ITU-T Rec. H.264\n   [H.264].  In this memo, unless
    explicitly stated otherwise,\n   \"H.264/AVC\" refers to the specification of
    [H.264] excluding Annex G.\n   SVC covers the entire application range of H.264/AVC,
    from low-\n   bitrate mobile applications, to High-Definition Television (HDTV)\n
    \  broadcasting, and even Digital Cinema that requires nearly lossless\n   coding
    and hundreds of megabits per second.  The scalability features\n   that SVC adds
    to H.264/AVC enable several system-level\n   functionalities related to the ability
    of a system to adapt the\n   signal to different system conditions with no or
    minimal processing.\n   The adaptation relates both to the capabilities of potentially\n
    \  heterogeneous receivers (differing in screen resolution, processing\n   speed,
    etc.), and to differing or time-varying network conditions.\n   The adaptation
    can be performed at the source, the destination, or in\n   intermediate media-aware
    network elements (MANEs).  The payload\n   format specified in this memo exposes
    these system-level\n   functionalities so that system designers can take direct
    advantage of\n   these features.\n      Informative note: Since SVC streams contain,
    by design, a sub-\n      stream that is compliant with H.264/AVC, it is trivial
    for a MANE\n      to filter the stream so that all SVC-specific information is\n
    \     removed.  This memo, in fact, defines a media type parameter\n      (sprop-avc-ready,
    Section 7.2) that indicates whether or not the\n      stream can be converted
    to one compliant with [RFC6184] by\n      eliminating RTP packets, and rewriting
    RTP Control Protocol (RTCP)\n      to match the changes to the RTP packet stream
    as specified in\n      Section 7 of [RFC3550].\n   This memo defines two basic
    modes for transmission of SVC data,\n   single-session transmission (SST) and
    multi-session transmission\n   (MST).  In SST, a single RTP session is used for
    the transmission of\n   all scalability layers comprising an SVC bitstream; in
    MST, the\n   scalability layers are transported on different RTP sessions.  In\n
    \  SST, packetization is a straightforward extension of [RFC6184].  For\n   MST,
    four different modes are defined in this memo.  They differ on\n   whether or
    not they allow interleaving, i.e., transmitting Network\n   Abstraction Layer
    (NAL) units in an order different than the decoding\n   order, and by the technique
    used to effect inter-session NAL unit\n   decoding order recovery.  Decoding order
    recovery is performed using\n   either inter-session timestamp alignment [RFC3550]
    or cross-session\n   decoding order numbers (CS-DONs).  One of the MST modes supports
    both\n   decoding order recovery techniques, so that receivers can select\n   their
    preferred technique.  More details can be found in Section\n   1.2.2.\n   This
    memo further defines three new NAL unit types.  The first type\n   is the payload
    content scalability information (PACSI) NAL unit,\n   which is used to provide
    an informative summary of the scalability\n   information of the data contained
    in an RTP packet, as well as\n   ancillary data (e.g., CS-DON values).  The second
    and third new NAL\n   unit types are the empty NAL unit and the non-interleaved
    multi-time\n   aggregation packet (NI-MTAP) NAL unit.  The empty NAL unit is used
    to\n   ensure inter-session timestamp alignment required for decoding order\n
    \  recovery in MST.  The NI-MTAP is used as a new payload structure\n   allowing
    the grouping of NAL units of different time instances in\n   decoding order.  More
    details about the new packet structures can be\n   found in Section 1.2.3.\n   This
    memo also defines the signaling support for SVC transport over\n   RTP, including
    a new media subtype name (H264-SVC).\n   A non-normative overview of the SVC codec
    and the payload is given in\n   the remainder of this section.\n"
  - contents:
    - '1.1.  The SVC Codec

      '
    - contents:
      - "1.1.1.  Overview\n   SVC defines a coded video representation in which a
        given bitstream\n   offers representations of the source material at different
        levels of\n   fidelity (hence the term \"scalable\").  Scalable video coding\n
        \  bitstreams, or scalable bitstreams, are constructed in a pyramidal\n   fashion:
        the coding process creates bitstream components that improve\n   the fidelity
        of hierarchically lower components.\n   The fidelity dimensions offered by
        SVC are spatial (picture size),\n   quality (or Signal-to-Noise Ratio (SNR)),
        and temporal (pictures per\n   second).  Bitstream components associated with
        a given level of\n   spatial, quality, and temporal fidelity are identified
        using\n   corresponding parameters in the bitstream: dependency_id, quality_id,\n
        \  and temporal_id (see also Section 1.1.3).  The fidelity identifiers\n   have
        integer values, where higher values designate components that\n   are higher
        in the hierarchy.  It is noted that SVC offers significant\n   flexibility
        in terms of how an encoder may choose to structure the\n   dependencies between
        the various components.  Decoding of a\n   particular component requires the
        availability of all the components\n   it depends upon, either directly, or
        indirectly.  An operation point\n   of an SVC bitstream consists of the bitstream
        components required to\n   be able to decode a particular dependency_id, quality_id,
        and\n   temporal_id combination.\n   The term \"layer\" is used in various
        contexts in this memo.  For\n   example, in the terms \"Video Coding Layer\"
        and \"Network Abstraction\n   Layer\" it refers to conceptual organization
        levels.  When referring\n   to bitstream syntax elements such as block layer
        or macroblock layer,\n   it refers to hierarchical bitstream structure levels.
        \ When used in\n   the context of bitstream scalability, e.g., \"AVC base
        layer\", it\n   refers to a level of representation fidelity of the source
        signal\n   with a specific set of NAL units included.  The correct\n   interpretation
        is supported by providing the appropriate context.\n   SVC maintains the bitstream
        organization introduced in H.264/AVC.\n   Specifically, all bitstream components
        are encapsulated in Network\n   Abstraction Layer (NAL) units, which are organized
        as Access Units\n   (AUs).  An AU is associated with a single sampling instance
        in time.\n   A subset of the NAL unit types correspond to the Video Coding
        Layer\n   (VCL), and contain the coded picture data associated with the source\n
        \  content.  Non-VCL NAL units carry ancillary data that may be\n   necessary
        for decoding (e.g., parameter sets as explained below) or\n   that facilitate
        certain system operations but are not needed by the\n   decoding process itself.
        \ Coded picture data at the various fidelity\n   dimensions are organized
        in slices.  Within one AU, a coded picture\n   of an operation point consists
        of all the coded slices required for\n   decoding up to the particular combination
        of dependency_id and\n   quality_id values at the time instance corresponding
        to the AU.\n   It is noted that the concept of temporal scalability is already\n
        \  present in H.264/AVC, as profiles defined in Annex A of [H.264]\n   already
        support it.  Specifically, in H.264/AVC, the concept of sub-\n   sequences
        has been introduced to allow optional use of temporal\n   layers through Supplemental
        Enhancement Information (SEI) messages.\n   SVC extends this approach by exposing
        the temporal scalability\n   information using the temporal_id parameter,
        alongside (and unified\n   with) the dependency_id and quality_id values that
        are used for\n   spatial and quality scalability, respectively.  For coded
        picture\n   data defined in Annex G of [H.264], this is accomplished by using
        a\n   new type of NAL unit, namely, coded slice in scalable extension NAL\n
        \  unit (type 20), where the fidelity parameters are part of its header.\n
        \  For coded picture data that follow H.264/AVC, and to ensure\n   compatibility
        with existing H.264/AVC decoders, another new type of\n   NAL unit, namely,
        prefix NAL unit (type 14), has been defined to\n   carry this header information.
        \ SVC additionally specifies a third\n   new type of NAL unit, namely, subset
        sequence parameter set NAL unit\n   (type 15), to contain sequence parameter
        set information for quality\n   and spatial enhancement layers.  All these
        three newly specified NAL\n   unit types (14, 15, and 20) are among those
        reserved in H.264/AVC and\n   are to be ignored by decoders conforming to
        one or more of the\n   profiles specified in Annex A of [H.264].\n   Within
        an AU, the VCL NAL units associated with a given dependency_id\n   and quality_id
        are referred to as a \"layer representation\".  The\n   layer representation
        corresponding to the lowest values of\n   dependency_id and quality_id (i.e.,
        zero for both) is compliant by\n   design to H.264/AVC.  The set of VCL and
        associated non-VCL NAL units\n   across all AUs in a bitstream associated
        with a particular\n   combination of values of dependency_id and quality_id,
        and regardless\n   of the value of temporal_id, is conceptually a scalable
        layer.  For\n   backward compatibility with H.264/AVC, it is important to\n
        \  differentiate, however, whether or not SVC-specific NAL units are\n   present
        in a given bitstream.  This is particularly important for the\n   lowest fidelity
        values in terms of dependency_id and quality_id (zero\n   for both), as the
        corresponding VCL data are compliant with\n   H.264/AVC, and may or may not
        be accompanied by associated prefix NAL\n   units.  This memo therefore uses
        the term \"AVC base layer\" to\n   designate the layer that does not contain
        SVC-specific NAL units, and\n   \"SVC base layer\" to designate the same layer
        but with the addition of\n   the associated SVC prefix NAL units.  Note that
        the SVC specification\n   uses the term \"base layer\" for what in this memo
        will be referred to\n   as \"AVC base layer\".  Similarly, it is also important
        to be able to\n   differentiate, within a layer, the temporal fidelity components
        it\n   contains.  This memo uses the term \"T0\" to indicate, within a\n   particular
        layer, the subset that contains the NAL units associated\n   with temporal_id
        equal to 0.\n   SNR scalability in SVC is offered in two different ways.  In
        what is\n   called coarse-grain scalability (CGS), scalability is provided
        by\n   including or excluding a complete layer when decoding a particular\n
        \  bitstream.  In contrast, in medium-grain scalability (MGS),\n   scalability
        is provided by selectively omitting the decoding of\n   specific NAL units
        belonging to MGS layers.  The selection of the NAL\n   units to omit can be
        based on fixed-length fields present in the NAL\n   unit header (see also
        Sections 1.1.3 and 4.2).\n"
      title: 1.1.1.  Overview
    - contents:
      - "1.1.2.  Parameter Sets\n   SVC maintains the parameter sets concept in H.264/AVC
        and introduces\n   a new type of sequence parameter set, referred to as the
        subset\n   sequence parameter set [H.264].  Subset sequence parameter sets
        have\n   NAL unit type equal to 15, which is different from the NAL unit type\n
        \  value (7) of sequence parameter sets.  VCL NAL units of NAL unit type\n
        \  1 to 5 must only (indirectly) refer to sequence parameter sets, while\n
        \  VCL NAL units of NAL unit type 20 must only (indirectly) refer to\n   subset
        sequence parameter sets.  The references are indirect because\n   VCL NAL
        units refer to picture parameter sets (in their slice\n   header), which in
        turn refer to regular or subset sequence parameter\n   sets.  Subset sequence
        parameter sets use a separate identifier value\n   space than sequence parameter
        sets.\n   In SVC, coded picture data from different layers may use the same
        or\n   different sequence and picture parameter sets.  Let the variable DQId\n
        \  be equal to dependency_id * 16 + quality_id.  At any time instant\n   during
        the decoding process there is one active sequence parameter\n   set for the
        layer representation with the highest value of DQId and\n   one or more active
        layer SVC sequence parameter set(s) for layer\n   representations with lower
        values of DQId.  The active sequence\n   parameter set or an active layer
        SVC sequence parameter set remains\n   unchanged throughout a coded video
        sequence in the scalable layer in\n   which the active sequence parameter
        set or active layer SVC sequence\n   parameter set is referred to.  This means
        that the referred sequence\n   parameter set or subset sequence parameter
        set can only change at\n   instantaneous decoding refresh (IDR) access units
        for any layer.  At\n   any time instant during the decoding process there
        may be one active\n   picture parameter set (for the layer representation
        with the highest\n   value of DQId) and one or more active layer picture parameter
        set(s)\n   (for layer representations with lower values of DQId).  The active\n
        \  picture parameter set or an active layer picture parameter set\n   remains
        unchanged throughout a layer representation in which the\n   active picture
        parameter set or active layer picture parameter set is\n   referred to, but
        may change from one AU to the next.\n"
      title: 1.1.2.  Parameter Sets
    - contents:
      - "1.1.3.  NAL Unit Header\n   SVC extends the one-byte H.264/AVC NAL unit header
        by three\n   additional octets for NAL units of types 14 and 20.  The header\n
        \  indicates the type of the NAL unit, the (potential) presence of bit\n   errors
        or syntax violations in the NAL unit payload, information\n   regarding the
        relative importance of the NAL unit for the decoding\n   process, the layer
        identification information, and other fields as\n   discussed below.\n   The
        syntax and semantics of the NAL unit header are specified in\n   [H.264],
        but the essential properties of the NAL unit header are\n   summarized below
        for convenience.\n   The first byte of the NAL unit header has the following
        format (the\n   bit fields are the same as defined for the one-byte H.264/AVC
        NAL\n   unit header, while the semantics of some fields have changed\n   slightly,
        in a backward-compatible way):\n         +---------------+\n         |0|1|2|3|4|5|6|7|\n
        \        +-+-+-+-+-+-+-+-+\n         |F|NRI|  Type   |\n         +---------------+\n
        \  The semantics of the components of the NAL unit type octet, as\n   specified
        in [H.264], are described briefly below.  In addition to\n   the name and
        size of each field, the corresponding syntax element\n   name in [H.264] is
        also provided.\n   F:    1 bit\n         forbidden_zero_bit.  H.264/AVC declares
        a value of 1 as a\n         syntax violation.\n   NRI:  2 bits\n         nal_ref_idc.
        \ A value of \"00\" (in binary form) indicates that\n         the content
        of the NAL unit is not used to reconstruct\n         reference pictures for
        future prediction.  Such NAL units can\n         be discarded without risking
        the integrity of the reference\n         pictures in the same layer.  A value
        greater than \"00\"\n         indicates that the decoding of the NAL unit
        is required to\n         maintain the integrity of reference pictures in the
        same layer\n         or that the NAL unit contains parameter sets.\n   Type:
        5 bits\n         nal_unit_type.  This component specifies the NAL unit type
        as\n         defined in Table 7-1 of [H.264], and later within this memo.\n
        \        For a reference of all currently defined NAL unit types and\n         their
        semantics, please refer to Section 7.4.1 in [H.264].\n         In H.264/AVC,
        NAL unit types 14, 15, and 20 are reserved for\n         future extensions.
        \ SVC uses these three NAL unit types as\n         follows: NAL unit type
        14 is used for prefix NAL unit, NAL unit\n         type 15 is used for subset
        sequence parameter set, and NAL unit\n         type 20 is used for coded slice
        in scalable extension (see\n         Section 7.4.1 in [H.264]).  NAL unit
        types 14 and 20 indicate\n         the presence of three additional octets
        in the NAL unit header,\n         as shown below.\n            +---------------+---------------+---------------+\n
        \           |0|1|2|3|4|5|6|7|0|1|2|3|4|5|6|7|0|1|2|3|4|5|6|7|\n            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \           |R|I|   PRID    |N| DID |  QID  | TID |U|D|O| RR|\n            +---------------+---------------+---------------+\n
        \  R:    1 bit\n         reserved_one_bit.  Reserved bit for future extension.
        \ R must\n         be equal to 1.  The value of R must be ignored by decoders.\n
        \  I:    1 bit\n         idr_flag.  This component specifies whether the layer\n
        \        representation is an instantaneous decoding refresh (IDR) layer\n
        \        representation (when equal to 1) or not (when equal to 0).\n   PRID:
        6 bits\n         priority_id.  This flag specifies a priority identifier for
        the\n         NAL unit.  A lower value of PRID indicates a higher priority.\n
        \  N:    1 bit\n         no_inter_layer_pred_flag.  This flag specifies, when
        present in\n         a coded slice NAL unit, whether inter-layer prediction
        may be\n         used for decoding the coded slice (when equal to 1) or not\n
        \        (when equal to 0).\n   DID:  3 bits\n         dependency_id.  This
        component indicates the inter-layer coding\n         dependency level of a
        layer representation.  At any access\n         unit, a layer representation
        with a given dependency_id may be\n         used for inter-layer prediction
        for coding of a layer\n         representation with a higher dependency_id,
        while a layer\n         representation with a given dependency_id shall not
        be used for\n         inter-layer prediction for coding of a layer representation\n
        \        with a lower dependency_id.\n   QID:  4 bits\n         quality_id.
        \ This component indicates the quality level of an\n         MGS layer representation.
        \ At any access unit and for identical\n         dependency_id values, a layer
        representation with quality_id\n         equal to ql uses a layer representation
        with quality_id equal\n         to ql-1 for inter-layer prediction.\n   TID:
        \ 3 bits\n         temporal_id.  This component indicates the temporal level
        of a\n         layer representation.  The temporal_id is associated with the\n
        \        frame rate, with lower values of _temporal_id corresponding to\n
        \        lower frame rates.  A layer representation at a given\n         temporal_id
        typically depends on layer representations with\n         lower temporal_id
        values, but it never depends on layer\n         representations with higher
        temporal_id values.\n   U:    1 bit\n         use_ref_base_pic_flag.  A value
        of 1 indicates that only\n         reference base pictures are used during
        the inter prediction\n         process.  A value of 0 indicates that the reference
        base\n         pictures are not used during the inter prediction process.\n
        \  D:    1 bit\n         discardable_flag.  A value of 1 indicates that the
        current NAL\n         unit is not used for decoding NAL units with values
        of\n         dependency_id higher than the one of the current NAL unit, in\n
        \        the current and all subsequent access units.  Such NAL units\n         can
        be discarded without risking the integrity of layers with\n         higher
        dependency_id values.  discardable_flag equal to 0\n         indicates that
        the decoding of the NAL unit is required to\n         maintain the integrity
        of layers with higher dependency_id.\n   O:    1 bit\n         output_flag:
        Affects the decoded picture output process as\n         defined in Annex C
        of [H.264].\n   RR:   2 bits\n         reserved_three_2bits.  Reserved bits
        for future extension.  RR\n         MUST be equal to \"11\" (in binary form).
        \ The value of RR must\n         be ignored by decoders.\n   This memo extends
        the semantics of F, NRI, I, PRID, DID, QID, TID, U,\n   and D per Annex G
        of [H.264] as described in Section 4.2.\n"
      title: 1.1.3.  NAL Unit Header
    title: 1.1.  The SVC Codec
  - contents:
    - "1.2.  Overview of the Payload Format\n   Similar to [RFC6184], this payload
      format can only be used to carry\n   the raw NAL unit stream over RTP and not
      the bytestream format\n   specified in Annex B of [H.264].\n   The design principles,
      transmission modes, and packetization modes as\n   well as new payload structures
      are summarized in this section.  It is\n   assumed that the reader is familiar
      with the terminology and concepts\n   defined in [RFC6184].\n"
    - contents:
      - "1.2.1.  Design Principles\n   The following design principles have been observed
        for this payload\n   format:\n   o  Backward compatibility with [RFC6184]
        wherever possible.\n   o  The SVC base layer or any H.264/AVC compatible subset
        of the SVC\n      base layer, when transmitted in its own RTP stream, must
        be\n      encapsulated using [RFC6184].  This ensures that such an RTP\n      stream
        can be understood by [RFC6184] receivers.\n   o  Media-aware network elements
        (MANEs) as defined in [RFC6184] are\n      signaling-aware, rely on signaling
        information, and have state.\n   o  MANEs can aggregate multiple RTP streams,
        possibly from multiple\n      RTP sessions.\n   o  MANEs can perform media-aware
        stream thinning (selective\n      elimination of packets or portions thereof).
        \ By using the payload\n      header information identifying layers within
        an RTP session, MANEs\n      are able to remove packets or portions thereof
        from the incoming\n      RTP packet stream.  This implies rewriting the RTP
        headers of the\n      outgoing packet stream, and rewriting of RTCP packets
        as specified\n      in Section 7 of [RFC3550].\n"
      title: 1.2.1.  Design Principles
    - contents:
      - "1.2.2.  Transmission Modes and Packetization Modes\n   This memo allows the
        packetization of SVC data for both single-\n   session transmission (SST)
        and multi-session transmission (MST).  In\n   the case of SST all SVC data
        are carried in a single RTP session.  In\n   the case of MST two or more RTP
        sessions are used to carry the SVC\n   data, in accordance with the MST-specific
        packetization modes defined\n   in this memo, which are based on the packetization
        modes defined in\n   [RFC6184].  In MST, each RTP session is associated with
        one RTP\n   stream, which may carry one or more layers.\n   The base layer
        is, by design, compatible to H.264/AVC.  During\n   transmission, the associated
        prefix NAL units, which are introduced\n   by SVC and, when present, are ignored
        by H.264/AVC decoders, may be\n   encapsulated within the same RTP packet
        stream as the H.264/AVC VCL\n   NAL units or in a different RTP packet stream
        (when MST is used).\n   For convenience, the term \"AVC base layer\" is used
        to refer to the\n   base layer without prefix NAL units, while the term \"SVC
        base layer\"\n   is used to refer to the base layer with prefix NAL units.\n
        \  Furthermore, the base layer may have multiple temporal components\n   (i.e.,
        supporting different frame rates).  As a result, the lowest\n   temporal component
        (\"T0\") of the AVC or SVC base layer is used as the\n   starting point of
        the SVC bitstream hierarchy.\n   This memo allows encapsulating in a given
        RTP stream any of the\n   following three alternatives of layer combinations:\n
        \  1. the T0 AVC base layer or the T0 SVC base layer only;\n   2. one or more
        enhancement layers only; or\n   3. the T0 SVC base layer, and one or more
        enhancement layers.\n   SST should be used in point-to-point unicast applications
        and, in\n   general, whenever the potential benefit of using multiple RTP\n
        \  sessions does not justify the added complexity.  When SST is used,\n   the
        layer combination cases 1 and 3 above can be used.  When an\n   H.264/AVC
        compatible subset of the SVC base layer is transmitted\n   using SST, the
        packetization of [RFC6184] must be used, thus ensuring\n   compatibility with
        [RFC6184] receivers.  When, however, one or more\n   SVC quality or spatial
        enhancement layers are transmitted using SST,\n   the packetization defined
        in this memo must be used.  In SST, any of\n   the three [RFC6184] packetization
        modes, namely, single NAL unit\n   mode, non-interleaved mode, and interleaved
        mode, can be used.\n   MST should be used in a multicast session when different
        receivers\n   may request different layers of the scalable bitstream.  An
        operation\n   point for an SVC bitstream, as defined in this memo, corresponds
        to a\n   set of layers that together conform to one of the profiles defined
        in\n   Annex A or G of [H.264] and, when decoded, offer a representation of\n
        \  the original video at a certain fidelity.  The number of streams used\n
        \  in MST should be at least equal to the number of operation points\n   that
        may be requested by the receivers.  Depending on the\n   application, this
        may result in each layer being carried in its own\n   RTP session, or in having
        multiple layers encapsulated within one RTP\n   session.\n      Informative
        note: Layered multicast is a term commonly used to\n      describe the application
        where multicast is used to transmit\n      layered or scalable data that has
        been encapsulated into more than\n      one RTP session.  This application
        allows different receivers in\n      the multicast session to receive different
        operation points of the\n      scalable bitstream.  Layered multicast, among
        other application\n      examples, is discussed in more detail in Section
        11.2.\n   When MST is used, any of the three layer combinations above can
        be\n   used for each of the sessions.  When an H.264/AVC compatible subset\n
        \  of the SVC base layer is transmitted in its own session in MST, the\n   packetization
        of [RFC6184] must be used, such that [RFC6184]\n   receivers can be part of
        the MST and receive only this session.  For\n   MST, this memo defines four
        different MST-specific packetization\n   modes, namely, non-interleaved timestamp
        (NI-T) based mode, non-\n   interleaved CS-DON (NI-C) based mode, non-interleaved
        combined\n   timestamp and CS-DON mode (NI-TC), and interleaved CS-DON (I-C)
        based\n   mode (detailed in Section 4.5.2).  The modes differ depending on\n
        \  whether the SVC data are allowed to be interleaved, i.e., to be\n   transmitted
        in an order different than the intended decoding order,\n   and they also
        differ in the mechanisms provided in order to recover\n   the correct decoding
        order of the NAL units across the multiple RTP\n   sessions.  These four MST
        modes reuse the packetization modes\n   introduced in [RFC6184] for the packetization
        of NAL units in each of\n   their individual RTP sessions.\n   As the names
        of the MST packetization modes imply, the NI-T, NI-C,\n   and NI-TC modes
        do not allow interleaved transmission, while the I-C\n   mode allows interleaved
        transmission.  With any of the three non-\n   interleaved MST packetization
        modes, legacy [RFC6184] receivers with\n   implementation of the non-interleaved
        mode specified in [RFC6184] can\n   join a multi-session transmission of SVC,
        to receive the base RTP\n   session encapsulated according to [RFC6184].\n"
      title: 1.2.2.  Transmission Modes and Packetization Modes
    - contents:
      - "1.2.3.  New Payload Structures\n   [RFC6184] specifies three basic payload
        structures, namely, single\n   NAL unit packet, aggregation packet, and fragmentation
        unit.\n   Depending on the basic payload structure, an RTP packet may contain
        a\n   NAL unit not aggregating other NAL units, one or more NAL units\n   aggregated
        in another NAL unit, or a fragment of a NAL unit not\n   aggregating other
        NAL units.  Each NAL unit of a type specified in\n   [H.264] (i.e., 1 to 23,
        inclusive) may be carried in its entirety in\n   a single NAL unit packet,
        may be aggregated in an aggregation packet,\n   or may be fragmented and carried
        in a number of fragmentation unit\n   packets.  To enable aggregation or fragmentation
        of NAL units while\n   still ensuring that the RTP packet payload is only
        composed of NAL\n   units, [RFC6184] introduced six new NAL unit types (24-29)
        to be used\n   as payload structures, selected from the NAL unit types left\n
        \  unspecified in [H.264].\n   This memo reuses all the payload structures
        used in [RFC6184].\n   Furthermore, three new types of NAL units are defined:
        payload\n   content scalability information (PACSI) NAL unit, empty NAL unit,
        and\n   non-interleaved multi-time aggregation packet (NI-MTAP) (specified
        in\n   Sections 4.9, 4.10, and 4.7.1, respectively).\n   PACSI NAL units may
        be used for the following purposes:\n   o  To enable MANEs to decide whether
        to forward, process, or discard\n      aggregation packets, by checking in
        PACSI NAL units the\n      scalability information and other characteristics
        of the\n      aggregated NAL units, rather than looking into the aggregated
        NAL\n      units themselves, which are defined by the video coding\n      specification.\n
        \  o  To enable correct decoding order recovery in MST using the NI-C or\n
        \     NI-TC mode, with the help of the CS-DON information included in\n      PACSI
        NAL units.\n   o  To improve resilience to packet losses, e.g., by utilizing
        the\n      following data or information included in PACSI NAL units:\n      repeated
        Supplemental Enhancement Information (SEI) messages,\n      information regarding
        the start and end of layer representations,\n      and the indices to layer
        representations of the lowest temporal\n      subset.\n   Empty NAL units
        may be used to enable correct decoding order recovery\n   in MST using the
        NI-T or NI-TC mode.  NI-MTAP NAL units may be used\n   to aggregate NAL units
        from multiple access units but without\n   interleaving.\n"
      title: 1.2.3.  New Payload Structures
    title: 1.2.  Overview of the Payload Format
  title: 1.  Introduction
- contents:
  - "2.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"
    in this\n   document are to be interpreted as described in BCP 14, RFC 2119\n
    \  [RFC2119].\n   This specification uses the notion of setting and clearing a
    bit when\n   bit fields are handled.  Setting a bit is the same as assigning that\n
    \  bit the value of 1 (On).  Clearing a bit is the same as assigning\n   that
    bit the value of 0 (Off).\n"
  title: 2.  Conventions
- contents:
  - '3.  Definitions and Abbreviations

    '
  - contents:
    - "3.1.  Definitions\n   This document uses the terms and definitions of [H.264].
      \ Section\n   3.1.1 lists relevant definitions copied from [H.264] for convenience.\n
      \  When there is discrepancy, the definitions in [H.264] take\n   precedence.
      \ Section 3.1.2 gives definitions specific to this memo.\n   Some of the definitions
      in Section 3.1.2 are also present in\n   [RFC6184] and copied here with slight
      adaptations as needed.\n"
    - contents:
      - "3.1.1.  Definitions from the SVC Specification\n   access unit: A set of
        NAL units always containing exactly one primary\n   coded picture.  In addition
        to the primary coded picture, an access\n   unit may also contain one or more
        redundant coded pictures, one\n   auxiliary coded picture, or other NAL units
        not containing slices or\n   slice data partitions of a coded picture.  The
        decoding of an access\n   unit always results in a decoded picture.\n   base
        layer: A bitstream subset that contains all the NAL units with\n   the nal_unit_type
        syntax element equal to 1 or 5 of the bitstream and\n   does not contain any
        NAL unit with the nal_unit_type syntax element\n   equal to 14, 15, or 20
        and conforms to one or more of the profiles\n   specified in Annex A of [H.264].\n
        \  base quality layer representation: The layer representation of the\n   target
        dependency representation of an access unit that is associated\n   with the
        quality_id syntax element equal to 0.\n   coded video sequence: A sequence
        of access units that consists, in\n   decoding order, of an IDR access unit
        followed by zero or more non-\n   IDR access units including all subsequent
        access units up to but not\n   including any subsequent IDR access unit.\n
        \  dependency representation: A subset of Video Coding Layer (VCL) NAL\n   units
        within an access unit that are associated with the same value\n   of the dependency_id
        syntax element, which is provided as part of the\n   NAL unit header or by
        an associated prefix NAL unit.  A dependency\n   representation consists of
        one or more layer representations.\n   IDR access unit: An access unit in
        which the primary coded picture is\n   an IDR picture.\n   IDR picture: Instantaneous
        decoding refresh picture.  A coded picture\n   in which all slices of the
        target dependency representation within\n   the access unit are I or EI slices
        that causes the decoding process\n   to mark all reference pictures as \"unused
        for reference\" immediately\n   after decoding the IDR picture.  After the
        decoding of an IDR picture\n   all following coded pictures in decoding order
        can be decoded without\n   inter prediction from any picture decoded prior
        to the IDR picture.\n   The first picture of each coded video sequence is
        an IDR picture.\n   layer representation: A subset of VCL NAL units within
        an access unit\n   that are associated with the same values of the dependency_id
        and\n   quality_id syntax elements, which are provided as part of the VCL
        NAL\n   unit header or by an associated prefix NAL unit.  One or more layer\n
        \  representations represent a dependency representation.\n   prefix NAL unit:
        A NAL unit with nal_unit_type equal to 14 that\n   immediately precedes in
        decoding order a NAL unit with nal_unit_type\n   equal to 1, 5, or 12.  The
        NAL unit that immediately succeeds in\n   decoding order the prefix NAL unit
        is referred to as the associated\n   NAL unit.  The prefix NAL unit contains
        data associated with the\n   associated NAL unit, which are considered to
        be part of the\n   associated NAL unit.\n   reference base picture: A reference
        picture that is obtained by\n   decoding a base quality layer representation
        with the nal_ref_idc\n   syntax element not equal to 0 and the store_ref_base_pic_flag
        syntax\n   element equal to 1 of an access unit and all layer representations
        of\n   the access unit that are referred to by inter-layer prediction of the\n
        \  base quality layer representation.  A reference base picture is not\n   an
        output of the decoding process, but the samples of a reference\n   base picture
        may be used for inter prediction in the decoding process\n   of subsequent
        pictures in decoding order.  Reference base picture is\n   a collective term
        for a reference base field or a reference base\n   frame.\n   scalable bitstream:
        A bitstream with the property that one or more\n   bitstream subsets that
        are not identical to the scalable bitstream\n   form another bitstream that
        conforms to the SVC specification\n   [H.264].\n   target dependency representation:
        The dependency representation of an\n   access unit that is associated with
        the largest value of the\n   dependency_id syntax element for all dependency
        representations of\n   the access unit.\n   target layer representation: The
        layer representation of the target\n   dependency representation of an access
        unit that is associated with\n   the largest value of the quality_id syntax
        element for all layer\n   representations of the target dependency representation
        of the access\n   unit.\n"
      title: 3.1.1.  Definitions from the SVC Specification
    - contents:
      - "3.1.2.  Definitions Specific to This Memo\n   anchor layer representation:
        An anchor layer representation is such a\n   layer representation that, if
        decoding of the operation point\n   corresponding to the layer starts from
        the access unit containing\n   this layer representation, all the following
        layer representations of\n   the layer, in output order, can be correctly
        decoded.  The output\n   order is defined in [H.264] as the order in which
        decoded pictures\n   are output from the decoded picture buffer of the decoder.
        \ As H.264\n   does not specify the picture display process, this more general
        term\n   is used instead of display order.  An anchor layer representation
        is\n   a random access point to the layer the anchor layer representation\n
        \  belongs.  However, some layer representations, succeeding an anchor\n   layer
        representation in decoding order but preceding the anchor layer\n   representation
        in output order, may refer to earlier layer\n   representations for inter
        prediction, and hence the decoding may be\n   incorrect if random access is
        performed at the anchor layer\n   representation.\n   AVC base layer: The
        subset of the SVC base layer in which all prefix\n   NAL units (type 14) are
        removed.  Note that this is equivalent to the\n   term \"base layer\" as defined
        in Annex G of [H.264].\n   base RTP session: When multi-session transmission
        is used, the RTP\n   session that carries the RTP stream containing the T0
        AVC base layer\n   or the T0 SVC base layer, and zero or more enhancement
        layers.  This\n   RTP session does not depend on any other RTP session as
        indicated by\n   mechanisms defined in Section 7.2.3.  The base RTP session
        may carry\n   NAL units of NAL unit type equal to 14 and 15.\n   decoding
        order number (DON): A field in the payload structure or a\n   derived variable
        indicating NAL unit decoding order.  Values of DON\n   are in the range of
        0 to 65535, inclusive.  After reaching the\n   maximum value, the value of
        DON wraps around to 0.  Note that this\n   definition also exists in [RFC6184]
        in exactly the same form.\n   Empty NAL unit: A NAL unit with NAL unit type
        equal to 31 and sub-\n   type equal to 1.  An empty NAL unit consists of only
        the two-byte NAL\n   unit header with an empty payload.\n   enhancement RTP
        session: When multi-session transmission is used, an\n   RTP session that
        is not the base RTP session.  An enhancement RTP\n   session typically contains
        an RTP stream that depends on at least one\n   other RTP session as indicated
        by mechanisms defined in Section\n   7.2.3.  A lower RTP session to an enhancement
        RTP session is an RTP\n   session on which the enhancement RTP session depends.
        \ The lowest RTP\n   session for a receiver is the RTP session that does not
        depend on any\n   other RTP session received by the receiver.  The highest
        RTP session\n   for a receiver is the RTP session on which no other RTP session\n
        \  received by the receiver depends.\n   cross-session decoding order number
        (CS-DON): A derived variable\n   indicating NAL unit decoding order number
        over all NAL units within\n   all the session-multiplexed RTP sessions that
        carry the same SVC\n   bitstream.\n   default level: The level indicated by
        the profile-level-id parameter.\n   In Session Description Protocol (SDP)
        Offer/Answer, the level is\n   downgradable, i.e., the answer may either use
        the default level or a\n   lower level.  Note that this definition also exists
        in [RFC6184] in a\n   slightly different form.\n   default sub-profile: The
        subset of coding tools, which may be all\n   coding tools of one profile or
        the common subset of coding tools of\n   more than one profile, indicated
        by the profile-level-id parameter.\n   In SDP Offer/Answer, the default sub-profile
        must be used in a\n   symmetric manner, i.e., the answer must either use the
        same sub-\n   profile as the offer or reject the offer.  Note that this definition\n
        \  also exists in [RFC6184] in a slightly different form.\n   enhancement
        layer: A layer in which at least one of the values of\n   dependency_id or
        quality_id is higher than 0, or a layer in which\n   none of the NAL units
        is associated with the value of temporal_id\n   equal to 0.  An operation
        point constructed using the maximum\n   temporal_id, dependency_id, and quality_id
        values associated with an\n   enhancement layer may or may not conform to
        one or more of the\n   profiles specified in Annex A of [H.264].\n   H.264/AVC
        compatible: The property of a bitstream subset of\n   conforming to one or
        more of the profiles specified in Annex A of\n   [H.264].\n   intra layer
        representation:  A layer representation that contains\n   only slices that
        use intra prediction, and hence do not refer to any\n   earlier layer representation
        in decoding order in the same layer.\n   Note that in SVC intra prediction
        includes intra-layer intra\n   prediction as well as inter-layer intra prediction.\n
        \  layer: A bitstream subset in which all NAL units of type 1, 5, 12,\n   14,
        or 20 have the same values of dependency_id and quality_id,\n   either directly
        through their NAL unit header (for NAL units of type\n   14 or 20) or through
        association to a prefix (type 14) NAL unit (for\n   NAL unit type 1, 5, or
        12).  A layer may contain NAL units associated\n   with more than one values
        of temporal_id.\n   media-aware network element (MANE): A network element,
        such as a\n   middlebox or application layer gateway that is capable of parsing\n
        \  certain aspects of the RTP payload headers or the RTP payload and\n   reacting
        to their contents.  Note that this definition also exists in\n   [RFC6184]
        in exactly the same form.\n      Informative note: The concept of a MANE goes
        beyond normal routers\n      or gateways in that a MANE has to be aware of
        the signaling (e.g.,\n      to learn about the payload type mappings of the
        media streams),\n      and in that it has to be trusted when working with
        Secure Real-\n      time Transport Protocol (SRTP).  The advantage of using
        MANEs is\n      that they allow packets to be dropped according to the needs
        of\n      the media coding.  For example, if a MANE has to drop packets due\n
        \     to congestion on a certain link, it can identify and remove those\n
        \     packets whose elimination produces the least adverse effect on the\n
        \     user experience.  After dropping packets, MANEs must rewrite RTCP\n
        \     packets to match the changes to the RTP packet stream as specified\n
        \     in Section 7 of [RFC3550].\n   multi-session transmission: The transmission
        mode in which the SVC\n   stream is transmitted over multiple RTP sessions.
        \ Dependency between\n   RTP sessions MUST be signaled according to Section
        7.2.3 of this\n   memo.\n   NAL unit decoding order: A NAL unit order that
        conforms to the\n   constraints on NAL unit order given in Section G.7.4.1.2
        in [H.264].\n   Note that this definition also exists in [RFC6184] in a slightly\n
        \  different form.\n   NALU-time: The value that the RTP timestamp would have
        if the NAL\n   unit would be transported in its own RTP packet.  Note that
        this\n   definition also exists in [RFC6184] in exactly the same form.\n   operation
        point: An operation point is identified by a set of values\n   of temporal_id,
        dependency_id, and quality_id.  A bitstream\n   corresponding to an operation
        point can be constructed by removing\n   all NAL units associated with a higher
        value of dependency_id, and\n   all NAL units associated with the same value
        of dependency_id but\n   higher values of quality_id or temporal_id.  An operation
        point\n   bitstream conforms to at least one of the profiles defined in Annex
        A\n   or G of [H.264], and offers a representation of the original video\n
        \  signal at a certain fidelity.\n      Informative note: Additional NAL units
        may be removed (with lower\n      dependency_id or same dependency_id but
        lower quality_id) if they\n      are not required for decoding the bitstream
        at the particular\n      operation point.  The resulting bitstream, however,
        may no longer\n      conform to any of the profiles defined in Annex A or
        G of [H.264].\n   operation point representation: The set of all NAL units
        of an\n   operation point within the same access unit.\n   RTP packet stream:
        A sequence of RTP packets with increasing sequence\n   numbers (except for
        wrap-around), identical payload type and\n   identical SSRC (Synchronization
        Source), carried in one RTP session.\n   Within the scope of this memo, one
        RTP packet stream is utilized to\n   transport one or more layers.\n   single-session
        transmission: The transmission mode in which the SVC\n   bitstream is transmitted
        over a single RTP session.\n   SVC base layer: The layer that includes all
        NAL units associated with\n   dependency_id and quality_id values both equal
        to 0, including prefix\n   NAL units (NAL unit type 14).\n   SVC enhancement
        layer: A layer in which at least one of the values of\n   dependency_id or
        quality_id is higher than 0.  An operation point\n   constructed using the
        maximum dependency_id and quality_id values and\n   any temporal_id value
        associated with an SVC enhancement layer does\n   not conform to any of the
        profiles specified in Annex A of [H.264].\n   SVC NAL unit: A NAL unit of
        NAL unit type 14, 15, or 20 as specified\n   in Annex G of [H.264].\n   SVC
        NAL unit header: A four-byte header resulting from the addition\n   of a three-byte
        SVC-specific header extension added in NAL unit types\n   14 and 20.\n   SVC
        RTP session: Either the base RTP session or an enhancement RTP\n   session.\n
        \  T0 AVC base layer: A subset of the AVC base layer constructed by\n   removing
        all VCL NAL units associated with temporal_id values higher\n   than 0 and
        non-VCL NAL units and SEI messages associated only with\n   the VCL NAL units
        being removed.\n   T0 SVC base layer: A subset of the SVC base layer constructed
        by\n   removing all VCL NAL units associated with temporal_id values higher\n
        \  than 0 as well as prefix NAL units, non-VCL NAL units, and SEI\n   messages
        associated only with the VCL NAL units being removed.\n   transmission order:
        The order of packets in ascending RTP sequence\n   number order (in modulo
        arithmetic).  Within an aggregation packet,\n   the NAL unit transmission
        order is the same as the order of\n   appearance of NAL units in the packet.
        \ Note that this definition\n   also exists in [RFC6184] in exactly the same
        form.\n"
      title: 3.1.2.  Definitions Specific to This Memo
    title: 3.1.  Definitions
  - contents:
    - "3.2.  Abbreviations\n   In addition to the abbreviations defined in [RFC6184],
      the following\n   abbreviations are used in this memo.\n      CGS:        Coarse-Grain
      Scalability\n      CS-DON:     Cross-Session Decoding Order Number\n      MGS:
      \       Medium-Grain Scalability\n      MST:        Multi-Session Transmission\n
      \     PACSI:      Payload Content Scalability Information\n      SST:        Single-Session
      Transmission\n      SNR:        Signal-to-Noise Ratio\n      SVC:        Scalable
      Video Coding\n"
    title: 3.2.  Abbreviations
  title: 3.  Definitions and Abbreviations
- contents:
  - '4.  RTP Payload Format

    '
  - contents:
    - "4.1.  RTP Header Usage\n   In addition to Section 5.1 of [RFC6184], the following
      rules apply.\n   o Setting of the M bit:\n   The M bit of an RTP packet for
      which the packet payload is an NI-MTAP\n   MUST be equal to 1 if the last NAL
      unit, in decoding order, of the\n   access unit associated with the RTP timestamp
      is contained in the\n   packet.\n   o Setting of the RTP timestamp:\n   For
      an RTP packet for which the packet payload is an empty NAL unit,\n   the RTP
      timestamp must be set according to Section 4.10.\n   For an RTP packet for which
      the packet payload is a PACSI NAL unit,\n   the RTP timestamp MUST be equal
      to the NALU-time of the next non-\n   PACSI NAL unit in transmission order.
      \ Recall that the NALU-time of a\n   NAL unit in an MTAP is defined in [RFC6184]
      as the value that the RTP\n   timestamp would have if that NAL unit would be
      transported in its own\n   RTP packet.\n   o Setting of the SSRC:\n   For both
      SST and MST, the SSRC values MUST be set according to\n   [RFC3550].\n"
    title: 4.1.  RTP Header Usage
  - contents:
    - '4.2.  NAL Unit Extension and Header Usage

      '
    - contents:
      - "4.2.1.  NAL Unit Extension\n   This memo specifies a NAL unit extension mechanism
        to allow for\n   introduction of new types of NAL units, beyond the three
        NAL unit\n   types left undefined in [RFC6184] (i.e., 0, 30, and 31).  The\n
        \  extension mechanism utilizes the NAL unit type value 31 and is\n   specified
        as follows.  When the NAL unit type value is equal to 31,\n   the one-byte
        NAL unit header consisting of the F, NRI, and Type\n   fields as specified
        in Section 1.1.3 is extended by one additional\n   octet, which consists of
        a 5-bit field named Subtype and three 1-bit\n   fields named J, K, and L,
        respectively.  The additional octet is\n   shown in the following figure.\n
        \        +---------------+\n         |0|1|2|3|4|5|6|7|\n         +-+-+-+-+-+-+-+-+\n
        \        | Subtype |J|K|L|\n         +---------------+\n   The Subtype value
        determines the (extended) NAL unit type of this NAL\n   unit.  The interpretation
        of the fields J, K, and L depends on the\n   Subtype.  The semantics of the
        fields are as follows.\n   When Subtype is equal to 1, the NAL unit is an
        empty NAL unit as\n   specified in Section 4.10.  When Subtype is equal to
        2, the NAL unit\n   is an NI-MTAP NAL unit as specified in Section 4.7.1.
        \ All other\n   values of Subtype (0, 3-31) are reserved for future extensions,
        and\n   receivers MUST ignore the entire NAL unit when Subtype is equal to\n
        \  any of these reserved values.\n"
      title: 4.2.1.  NAL Unit Extension
    - contents:
      - "4.2.2.  NAL Unit Header Usage\n   The structure and semantics of the NAL
        unit header according to the\n   H.264 specification [H.264] were introduced
        in Section 1.1.3.  This\n   section specifies the extended semantics of the
        NAL unit header\n   fields F, NRI, I, PRID, DID, QID, TID, U, and D, according
        to this\n   memo.  When the Type field is equal to 31, the semantics of the\n
        \  fields in the extension NAL unit header were specified in Section\n   4.2.1.\n
        \  The semantics of F specified in Section 5.3 of [RFC6184] also apply\n   in
        this memo.  That is, a value of 0 for F indicates that the NAL\n   unit type
        octet and payload should not contain bit errors or other\n   syntax violations,
        whereas a value of 1 for F indicates that the NAL\n   unit type octet and
        payload may contain bit errors or other syntax\n   violations.  MANEs SHOULD
        set the F bit to indicate bit errors in the\n   NAL unit.\n   For NRI, for
        a bitstream conforming to one of the profiles defined in\n   Annex A of [H.264]
        and transported using [RFC6184], the semantics\n   specified in Section 5.3
        of [RFC6184] apply, i.e., NRI also indicates\n   the relative importance of
        NAL units.  For a bitstream conforming to\n   one of the profiles defined
        in Annex G of [H.264] and transported\n   using this memo, in addition to
        the semantics specified in Annex G of\n   [H.264], NRI also indicates the
        relative importance of NAL units\n   within a layer.\n   For I, in addition
        to the semantics specified in Annex G of [H.264],\n   according to this memo,
        MANEs MAY use this information to protect NAL\n   units with I equal to 1
        better than NAL units with I equal to 0.\n   MANEs MAY also utilize information
        of NAL units with I equal to 1 to\n   decide when to forward more packets
        for an RTP packet stream.  For\n   example, when it is detected that spatial
        layer switching has\n   happened such that the operation point has changed
        to a higher value\n   of DID, MANEs MAY start to forward NAL units with the
        higher value of\n   DID only after forwarding a NAL unit with I equal to 1
        with the\n   higher value of DID.\n   Note that, in the context of this section,
        \"protecting a NAL unit\"\n   means any RTP or network transport mechanism
        that could improve the\n   probability of successful delivery of the packet
        conveying the NAL\n   unit, including applying a Quality of Service (QoS)
        enabled network,\n   Forward Error Correction (FEC), retransmissions, and
        advanced\n   scheduling behavior, whenever possible.\n   For PRID, the semantics
        specified in Annex G of [H.264] apply.  Note\n   that MANEs implementing unequal
        error protection MAY use this\n   information to protect NAL units with smaller
        PRID values better than\n   those with larger PRID values, for example, by
        including only the\n   more important NAL units in a FEC protection mechanism.
        \ The\n   importance for the decoding process decreases as the PRID value\n
        \  increases.\n   For DID, QID, or TID, in addition to the semantics specified
        in Annex\n   G of [H.264], according to this memo, values of DID, QID, or
        TID\n   indicate the relative importance in their respective dimension.  A\n
        \  lower value of DID, QID, or TID indicates a higher importance if the\n
        \  other two components are identical.  MANEs MAY use this information\n   to
        protect more important NAL units better than less important NAL\n   units.\n
        \  For U, in addition to the semantics specified in Annex G of [H.264],\n
        \  according to this memo, MANEs MAY use this information to protect NAL\n
        \  units with U equal to 1 better than NAL units with U equal to 0.\n   For
        D, in addition to the semantics specified in Annex G of [H.264],\n   according
        to this memo, MANEs MAY use this information to determine\n   whether a given
        NAL unit is required for successfully decoding a\n   certain Operation Point
        of the SVC bitstream, hence to decide whether\n   to forward the NAL unit.\n"
      title: 4.2.2.  NAL Unit Header Usage
    title: 4.2.  NAL Unit Extension and Header Usage
  - contents:
    - "4.3.  Payload Structures\n   The NAL unit structure is central to H.264/AVC,
      [RFC6184], as well as\n   SVC and this memo.  In H.264/AVC and SVC, all coded
      bits for\n   representing a video signal are encapsulated in NAL units.  In\n
      \  [RFC6184], each RTP packet payload is structured as a NAL unit, which\n   contains
      one or a part of one NAL unit specified in H.264/AVC, or\n   aggregates one
      or more NAL units specified in H.264/AVC.\n   [RFC6184] specifies three basic
      payload structures (in Section 5.2 of\n   [RFC6184]): single NAL unit packet,
      aggregation packet, fragmentation\n   unit, and six new types (24 to 29) of
      NAL units.  The value of the\n   Type field of the RTP packet payload header
      (i.e., the first byte of\n   the payload) may be equal to any value from 1 to
      23 for a single NAL\n   unit packet, any value from 24 to 27 for an aggregation
      packet, and\n   28 or 29 for a fragmentation unit.\n   In addition to the NAL
      unit types defined originally for H.264/AVC,\n   SVC defines three new NAL unit
      types specifically for SVC: coded\n   slice in scalable extension NAL units
      (type 20), prefix NAL units\n   (type 14), and subset sequence parameter set
      NAL units (type 15), as\n   described in Section 1.1.\n   This memo further
      introduces three new types of NAL units, PACSI NAL\n   unit (NAL unit type 30)
      as specified in Section 4.9, empty NAL unit\n   (type 31, subtype 1) as specified
      in Section 4.10, and NI-MTAP NAL\n   unit (type 31, subtype 2) as specified
      in Section 4.7.1.\n   The RTP packet payload structure in [RFC6184] is maintained
      with\n   slight extensions in this memo, as follows.  Each RTP packet payload\n
      \  is still structured as a NAL unit, which contains one or a part of\n   one
      NAL unit specified in H.264/AVC and SVC, or contains one PACSI\n   NAL unit
      or one empty NAL unit, or aggregates zero or more NAL units\n   specified in
      H.264/AVC and SVC, zero or one PACSI NAL unit, and zero\n   or more empty NAL
      units.\n   In this memo, one of the three basic payload structures,\n   fragmentation
      unit, remains the same as in [RFC6184], and the other\n   two, single NAL unit
      packet and aggregation packet, are extended as\n   follows.  The value of the
      Type field of the payload header may be\n   equal to any value from 1 to 23,
      inclusive, and 30 to 31, inclusive,\n   for a single NAL unit packet, and any
      value from 24 to 27, inclusive,\n   and 31, for an aggregation packet.  When
      the Type field of the\n   payload header is equal to 31 and the Subtype field
      of the payload\n   header is equal to 2, the packet is an aggregation packet
      (containing\n   an NI-MTAP NAL unit).  When the Type field of the payload header
      is\n   equal to 31 and the Subtype field of the payload header is equal to\n
      \  1, the packet is a single NAL unit packet (containing an empty NAL\n   unit).\n
      \  Note that, in this memo, the length of the payload header varies\n   depending
      on the value of the Type field in the first byte of the RTP\n   packet payload.
      \ If the value is equal to 14, 20, or 30, the first\n   four bytes of the packet
      payload form the payload header; otherwise,\n   if the value is equal to 31,
      the first two bytes of the payload form\n   the payload header; otherwise, the
      payload header is the first byte\n   of the packet payload.\n   Table 1 lists
      the NAL unit types introduced in SVC and this memo and\n   where they are described
      in this memo.  Table 2 summarizes the basic\n   payload structure types for
      all NAL unit types when they are directly\n   used as RTP packet payloads according
      to this memo.  Table 3\n   summarizes the NAL unit types allowed to be aggregated
      (i.e., used as\n   aggregation units in aggregation packets) or fragmented (i.e.,\n
      \  carried in fragmentation units) according to this memo.\n   Table 1.  NAL
      unit types introduced in SVC and this memo\n   Type  Subtype  NAL Unit Name
      \               Section Numbers\n   -----------------------------------------------------------\n
      \  14     -       Prefix NAL unit                    1.1\n   15     -       Subset
      sequence parameter set      1.1\n   20     -       Coded slice in scalable extension
      \ 1.1\n   30     -       PACSI NAL unit                     4.9\n   31     0
      \      reserved                           4.2.1\n   31     1       Empty NAL
      unit                     4.10\n   31     2       NI-MTAP                            4.7.1\n
      \  31     3-31    reserved                           4.2.1\n   Table 2.  Basic
      payload structure types for all NAL unit\n   types when they are directly used
      as RTP packet payloads\n   Type   Subtype    Basic Payload Structure\n   ------------------------------------------\n
      \  0      -          reserved\n   1-23   -          Single NAL Unit Packet\n
      \  24-27  -          Aggregation Packet\n   28-29  -          Fragmentation
      Unit\n   30     -          Single NAL Unit Packet\n   31     0          reserved\n
      \  31     1          Single NAL Unit Packet\n   31     2          Aggregation
      Packet\n   31     3-31       reserved\n   Table 3.  Summary of the NAL unit
      types allowed to be\n   aggregated or fragmented (yes = allowed, no = disallowed,\n
      \  - = not applicable/not specified)\n   Type  Subtype STAP-A STAP-B MTAP16
      MTAP24 FU-A FU-B NI-MTAP\n   -------------------------------------------------------------\n
      \  0     -          -      -      -      -     -     -     -\n   1-23  -        yes
      \   yes    yes    yes   yes   yes   yes\n   24-29 -         no     no     no
      \    no    no    no    no\n   30    -        yes    yes    yes    yes    no
      \   no   yes\n   31    0          -      -      -      -     -     -     -\n
      \  31    1        yes     no     no     no    no    no   yes\n   31    2         no
      \    no     no     no    no    no    no\n   31    3-31       -      -      -
      \     -     -     -     -\n"
    title: 4.3.  Payload Structures
  - contents:
    - "4.4.  Transmission Modes\n   This memo enables transmission of an SVC bitstream
      over one or more\n   RTP sessions.  If only one RTP session is used for transmission
      of\n   the SVC bitstream, the transmission mode is referred to as single-\n
      \  session transmission (SST); otherwise (more than one RTP session is\n   used
      for transmission of the SVC bitstream), the transmission mode is\n   referred
      to as multi-session transmission (MST).\n   SST SHOULD be used for point-to-point
      unicast scenarios, while MST\n   SHOULD be used for point-to-multipoint multicast
      scenarios where\n   different receivers requires different operation points
      of the same\n   SVC bitstream, to improve bandwidth utilizing efficiency.\n
      \  If the OPTIONAL mst-mode media type parameter (see Section 7.1) is\n   not
      present, SST MUST be used; otherwise (mst-mode is present), MST\n   MUST be
      used.\n"
    title: 4.4.  Transmission Modes
  - contents:
    - '4.5.  Packetization Modes

      '
    - contents:
      - "4.5.1.  Packetization Modes for Single-Session Transmission\n   When SST
        is in use, Section 5.4 of [RFC6184] applies with the\n   following extensions.\n
        \  The packetization modes specified in Section 5.4 of [RFC6184],\n   namely,
        single NAL unit mode, non-interleaved mode, and interleaved\n   mode, are
        also referred to as session packetization modes.  Table 4\n   summarizes the
        allowed session packetization modes for SST.\n   Table 4.  Summary of allowed
        session packetization modes\n   (denoted as \"Session Mode\" for simplicity)
        for SST (yes =\n   allowed, no = disallowed)\n   Session Mode               Allowed\n
        \  -------------------------------------\n   Single NAL Unit Mode         yes\n
        \  Non-Interleaved Mode         yes\n   Interleaved Mode             yes\n
        \  For NAL unit types in the range of 0 to 29, inclusive, the NAL unit\n   types
        allowed to be directly used as packet payloads for each session\n   packetization
        mode are the same as specified in Section 5.4 of\n   [RFC6184].  For other
        NAL unit types, which are newly introduced in\n   this memo, the NAL unit
        types allowed to be directly used as packet\n   payloads for each session
        packetization mode are summarized in Table\n   5.\n   Table 5.  New NAL unit
        types allowed to be directly used\n   as packet payloads for each session
        packetization mode\n   (yes = allowed, no = disallowed, - = not applicable/not
        specified)\n   Type   Subtype    Single NAL    Non-Interleaved    Interleaved\n
        \                    Unit Mode           Mode             Mode\n   -------------------------------------------------------------\n
        \  30     -            yes               no               no\n   31     0
        \             -                -                -\n   31     1            yes
        \             yes               no\n   31     2             no              yes
        \              no\n   31     3-31           -                -                -\n"
      title: 4.5.1.  Packetization Modes for Single-Session Transmission
    - contents:
      - "4.5.2.  Packetization Modes for Multi-Session Transmission\n   For MST, this
        memo specifies four MST packetization modes:\n   o  Non-interleaved timestamp
        based mode (NI-T);\n   o  Non-interleaved cross-session decoding order number
        (CS-DON) based\n      mode (NI-C);\n   o  Non-interleaved combined timestamp
        and CS-DON mode (NI-TC); and\n   o  Interleaved CS-DON (I-C) mode.\n   These
        four modes differ in two ways.  First, they differ in terms of\n   whether
        NAL units are required to be transmitted within each RTP\n   session in decoding
        order (i.e., non-interleaved), or they are\n   allowed to be transmitted in
        a different order (i.e., interleaved).\n   Second, they differ in the mechanisms
        they provide in order to\n   recover the correct decoding order of the NAL
        units across all RTP\n   sessions involved.\n   The NI-T, NI-C, and NI-TC
        modes do not allow interleaving, and are\n   thus targeted for systems that
        require relatively low end-to-end\n   latency, e.g., conversational systems.
        \ The I-C mode allows\n   interleaving and is thus targeted for systems that
        do not require\n   very low end-to-end latency.  The benefits of interleaving
        are the\n   same as that of the interleaved mode specified in [RFC6184].\n
        \  The NI-T mode uses timestamps to recover the decoding order of NAL\n   units,
        whereas the NI-C and I-C modes both use the CS-DON mechanism\n   (explained
        later) to do so.  The NI-TC mode provides both timestamps\n   and the CS-DON
        method; receivers in this case may choose to use\n   either method for performing
        decoding order recovery.  The MST\n   packetization mode in use MUST be signaled
        by the value of the\n   OPTIONAL mst-mode media type parameter.  The used
        MST packetization\n   mode governs which session packetization modes are allowed
        in the\n   associated RTP sessions, which in turn govern which NAL unit types\n
        \  are allowed to be directly used as RTP packet payloads.\n   Table 6 summarizes
        the allowed session packetization modes for NI-T,\n   NI-C, and NI-TC.  Table
        7 summarizes the allowed session\n   packetization modes for I-C.\n   Table
        6.  Summary of allowed session packetization modes\n   (denoted as \"Session
        Mode\" for simplicity) for NI-T, NI-C, and\n   NI-TC (yes = allowed, no =
        disallowed)\n   Session Mode            Base Session    Enhancement Session\n
        \  -----------------------------------------------------------\n   Single
        NAL Unit Mode         yes             no\n   Non-Interleaved Mode         yes
        \           yes\n   Interleaved Mode              no             no\n   Table
        7.  Summary of allowed session packetization modes\n   (denoted as \"Session
        Mode\" for simplicity) for I-C\n   (yes = allowed, no = disallowed)\n   Session
        Mode            Base Session    Enhancement Session\n   -----------------------------------------------------------\n
        \  Single NAL Unit Mode          no             no\n   Non-Interleaved Mode
        \         no             no\n   Interleaved Mode             yes            yes\n
        \  For NAL unit types in the range of 0 to 29, inclusive, the NAL unit\n   types
        allowed to be directly used as packet payloads for each session\n   packetization
        mode are the same as specified in Section 5.4 of\n   [RFC6184].  For other
        NAL unit types, which are newly introduced in\n   this memo, the NAL unit
        types allowed to be directly used as packet\n   payloads for each allowed
        session packetization mode for NI-T, NI-C,\n   NI-TC, and I-C are summarized
        in Tables 8, 9, 10, and 11,\n   respectively.\n   Table 8.  New NAL unit types
        allowed to be directly used\n   as packet payloads for each allowed session
        packetization\n   mode when NI-T is in use (yes = allowed, no = disallowed,\n
        \  - = not applicable/not specified)\n   Type   Subtype    Single NAL    Non-Interleaved\n
        \                    Unit Mode           Mode\n   ---------------------------------------------------\n
        \  30     -            yes               no\n   31     0              -                -\n
        \  31     1            yes              yes\n   31     2             no              yes\n
        \  31     3-31           -                -\n   Table 9.  New NAL unit types
        allowed to be directly used\n   as packet payloads for each allowed session
        packetization\n   mode when NI-C is in use (yes = allowed, no = disallowed,\n
        \  - = not applicable/not specified)\n   Type   Subtype    Single NAL    Non-Interleaved\n
        \                    Unit Mode           Mode\n   ---------------------------------------------------\n
        \  30     -            yes              yes\n   31     0              -                -\n
        \  31     1             no               no\n   31     2             no              yes\n
        \  31     3-31           -                -\n   Table 10.  New NAL unit types
        allowed to be directly used\n   as packet payloads for each allowed session
        packetization\n   mode when NI-TC is in use (yes = allowed, no = disallowed,\n
        \  - = not applicable/not specified)\n   Type   Subtype    Single NAL    Non-Interleaved\n
        \                    Unit Mode           Mode\n   ---------------------------------------------------\n
        \  30     -            yes              yes\n   31     0              -                -\n
        \  31     1             yes             yes\n   31     2             no              yes\n
        \  31     3-31           -                -\n   Table 11.  New NAL unit types
        allowed to be directly used\n   as packet payloads for the allowed session
        packetization\n   mode when I-C is in use (yes = allowed, no = disallowed,\n
        \  - = not applicable/not specified)\n   Type   Subtype    Interleaved Mode\n
        \  ------------------------------------\n   30     -               no\n   31
        \    0                -\n   31     1               no\n   31     2               no\n
        \  31     3-31             -\n   When MST is in use and the MST packetization
        mode in use is NI-C,\n   empty NAL units (type 31, subtype 1) MUST NOT be
        used, i.e., no RTP\n   packet is allowed to contain one or more empty NAL
        units.\n   When MST is in use and the MST packetization mode in use is I-C,
        both\n   empty NAL units (type 31, subtype 1) and NI-MTAP NAL units (type
        31,\n   subtype 2) MUST NOT be used, i.e., no RTP packet is allowed to\n   contain
        one or more empty NAL units or an NI-MTAP NAL unit.\n"
      title: 4.5.2.  Packetization Modes for Multi-Session Transmission
    title: 4.5.  Packetization Modes
  - contents:
    - "4.6.  Single NAL Unit Packets\n   Section 5.6 of [RFC6184] applies with the
      following extensions.\n   The payload of a single NAL unit packet MAY be a PACSI
      NAL unit (Type\n   30) or an empty NAL unit (Type 31 and Subtype 1), in addition
      to a\n   NAL unit with NAL unit type equal to any value from 1 to 23,\n   inclusive.\n
      \  If the Type field of the first byte of the payload is not equal to\n   31,
      the payload header is the first byte of the payload.  Otherwise,\n   (the Type
      field of the first byte of the payload is equal to 31), the\n   payload header
      is the first two bytes of the payload.\n"
    title: 4.6.  Single NAL Unit Packets
  - contents:
    - "4.7.  Aggregation Packets\n   In addition to Section 5.7 of [RFC6184], the
      following applies in\n   this memo.\n"
    - contents:
      - "4.7.1.  Non-Interleaved Multi-Time Aggregation Packets (NI-MTAPs)\n   One
        new NAL unit type introduced in this memo is the non-interleaved\n   multi-time
        aggregation packet (NI-MTAP).  An NI-MTAP consists of one\n   or more non-interleaved
        multi-time aggregation units.\n   The NAL units contained in NI-MTAPs MUST
        be aggregated in decoding\n   order.\n   A non-interleaved multi-time aggregation
        unit for the NI-MTAP\n   consists of 16 bits of unsigned size information
        of the following NAL\n   unit (in network byte order), and 16 bits (in network
        byte order) of\n   timestamp offset (TS offset) for the NAL unit.  The structure
        is\n   presented in Figure 1.  The starting or ending position of an\n   aggregation
        unit within a packet may or may not be on a 32-bit word\n   boundary.  The
        NAL units in the NI-MTAP are ordered in NAL unit\n   decoding order.\n   The
        Type field of the NI-MTAP MUST be set equal to \"31\".\n   The F bit MUST
        be set to 0 if all the F bits of the aggregated NAL\n   units are zero; otherwise,
        it MUST be set to 1.\n   The value of NRI MUST be the maximum value of NRI
        across all NAL\n   units carried in the NI-MTAP packet.\n   The field Subtype
        MUST be equal to 2.\n   If the field J is equal to 1, the optional DON field
        MUST be present\n   for each of the non-interleaved multi-time aggregation
        units.  For\n   SST, the J field MUST be equal to 0.  For MST, in the NI-T
        mode the J\n   field MUST be equal to 0, whereas in the NI-C or NI-TC mode
        the J\n   field MUST be equal to 1.  When the NI-C or NI-TC mode is in use,
        the\n   DON field, when present, MUST represent the CS-DON value for the\n
        \  particular NAL unit as defined in Section 6.2.2.\n   The fields K and L
        MUST be both equal to 0.\n    0                   1                   2                   3\n
        \   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  :        NAL unit size          |        TS offset              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |        DON (optional)         |                               |\n   |-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        \   NAL unit                   |\n   |                                                               |\n
        \  |                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |
        \                              :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Figure
        1.  Non-interleaved multi-time aggregation unit for NI-MTAP\n   Let TS be
        the RTP timestamp of the packet carrying the NAL unit.\n   Recall that the
        NALU-time of a NAL unit in an MTAP is defined in\n   [RFC6184] as the value
        that the RTP timestamp would have if that NAL\n   unit would be transported
        in its own RTP packet.  The timestamp\n   offset field MUST be set to a value
        equal to the value of the\n   following formula:\n      if NALU-time >= TS,
        TS offset = NALU-time - TS\n      else, TS offset = NALU-time + (2^32 - TS)\n
        \  For the \"earliest\" multi-time aggregation unit in an NI-MTAP, the\n   timestamp
        offset MUST be zero.  Hence, the RTP timestamp of the NI-\n   MTAP itself
        is identical to the earliest NALU-time.\n      Informative note: The \"earliest\"
        multi-time aggregation unit is\n      the one that would have the smallest
        extended RTP timestamp among\n      all the aggregation units of an NI-MTAP
        if the aggregation units\n      were encapsulated in single NAL unit packets.
        \ An extended\n      timestamp is a timestamp that has more than 32 bits and
        is capable\n      of counting the wraparound of the timestamp field, thus
        enabling\n      one to determine the smallest value if the timestamp wraps.
        \ Such\n      an \"earliest\" aggregation unit may or may not be the first
        one in\n      the order in which the aggregation units are encapsulated in
        an\n      NI-MTAP.  The \"earliest\" NAL unit need not be the same as the\n
        \     first NAL unit in the NAL unit decoding order either.\n   Figure 2 presents
        an example of an RTP packet that contains an NI-\n   MTAP that contains two
        non-interleaved multi-time aggregation units,\n   labeled as 1 and 2 in the
        figure.\n    0                   1                   2                   3\n
        \   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |                          RTP Header                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |F|NRI|  Type   | Subtype |J|K|L|                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        \                              |\n   |                                                               |\n
        \  |        Non-interleaved multi-time aggregation unit #1         |\n   :
        \                                                              :\n   |                                 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |                                 |  Non-interleaved multi-time |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        \                            |\n   |                      aggregation unit
        #2                      |\n   :                                                               :\n
        \  |                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |
        \                              :...OPTIONAL RTP padding        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  Figure 2.  An RTP packet including an NI-MTAP containing two\n   non-interleaved
        multi-time aggregation units\n"
      title: 4.7.1.  Non-Interleaved Multi-Time Aggregation Packets (NI-MTAPs)
    title: 4.7.  Aggregation Packets
  - contents:
    - "4.8.  Fragmentation Units (FUs)\n   Section 5.8 of [RFC6184] applies.\n      Informative
      note: In case a NAL unit with the four-byte SVC NAL\n      unit header is fragmented,
      the three-byte SVC-specific header\n      extension is considered as part of
      the NAL unit payload.  That is,\n      the three-byte SVC-specific header extension
      is only available in\n      the first fragment of the fragmented NAL unit.\n"
    title: 4.8.  Fragmentation Units (FUs)
  - contents:
    - "4.9.  Payload Content Scalability Information (PACSI) NAL Unit\n   Another
      new type of NAL unit specified in this memo is the payload\n   content scalability
      information (PACSI) NAL unit.  The Type field of\n   PACSI NAL units MUST be
      equal to 30 (a NAL unit type value left\n   unspecified in [H.264] and [RFC6184]).
      \ A PACSI NAL unit MAY be\n   carried in a single NAL unit packet or an aggregation
      packet, and\n   MUST NOT be fragmented.\n   PACSI NAL units may be used for
      the following purposes:\n   o  To enable MANEs to decide whether to forward,
      process, or discard\n      aggregation packets, by checking in PACSI NAL units
      the\n      scalability information and other characteristics of the\n      aggregated
      NAL units, rather than looking into the aggregated NAL\n      units themselves,
      which are defined by the video coding\n      specification;\n   o  To enable
      correct decoding order recovery in MST using the NI-C or\n      NI-TC mode,
      with the help of the CS-DON information included in\n      PACSI NAL units;
      and\n   o  To improve resilience to packet losses, e.g., by utilizing the\n
      \     following data or information included in PACSI NAL units:\n      repeated
      Supplemental Enhancement Information (SEI) messages,\n      information regarding
      the start and end of layer representations,\n      and the indices to layer
      representations of the lowest temporal\n      subset.\n   PACSI NAL units MAY
      be ignored in the NI-T mode without affecting the\n   decoding order recovery
      process.\n   When a PACSI NAL unit is present in an aggregation packet, the\n
      \  following applies.\n   o  The PACSI NAL unit MUST be the first aggregated
      NAL unit in the\n      aggregation packet.\n   o  There MUST be at least one
      additional aggregated NAL unit in the\n      aggregation packet.\n   o  The
      RTP header fields and the payload header fields of the\n      aggregation packet
      are set as if the PACSI NAL unit was not\n      included in the aggregation
      packet.\n   o  If the aggregation packet is an MTAP16, MTAP24, or NI-MTAP with\n
      \     the J field equal to 1, the decoding order number (DON) for the\n      PACSI
      NAL unit MUST be set to indicate that the PACSI NAL unit has\n      an identical
      DON to the first NAL unit in decoding order among the\n      remaining NAL units
      in the aggregation packet.\n   When a PACSI NAL unit is included in a single
      NAL unit packet, it is\n   associated with the next non-PACSI NAL unit in transmission
      order,\n   and the RTP header fields of the packet are set as if the next non-\n
      \  PACSI NAL unit in transmission order was included in a single NAL\n   unit
      packet.\n   The PACSI NAL unit structure is as follows.  The first four octets\n
      \  are exactly the same as the four-byte SVC NAL unit header discussed\n   in
      Section 1.1.3.  They are followed by one octet containing several\n   flags,
      then five optional octets, and finally zero or more SEI NAL\n   units.  Each
      SEI NAL unit is preceded by a 16-bit unsigned size field\n   (in network byte
      order) that indicates the size of the following NAL\n   unit in bytes (excluding
      these two octets, but including the NAL unit\n   header octet of the SEI NAL
      unit).  Figure 3 illustrates the PACSI\n   NAL unit structure and an example
      of a PACSI NAL unit containing two\n   SEI NAL units.\n    0                   1
      \                  2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
      5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |F|NRI|  Type   |R|I|   PRID    |N| DID |  QID  | TID |U|D|O| RR|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |X|Y|T|A|P|C|S|E| TL0PICIDX (o) |        IDRPICID (o)           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |          DONC (o)             |        NAL unit size 1        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                                                               |\n   |                 SEI
      NAL unit 1                                |\n   |                                                               |\n
      \  |               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |               |
      \       NAL unit size 2        |               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      \              |\n   |                                                               |\n
      \  |            SEI NAL unit 2                                     |\n   |                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  Figure 3.  PACSI NAL unit structure.  Fields suffixed by\n   \"(o)\" are
      OPTIONAL.\n   The bits A, P, and C are specified only if the bit X is equal
      to 1.\n   The bits S and E are specified, and the fields TL0PICIDX and IDRPICID\n
      \  are present, only if the bit Y is equal to 1.  The field DONC is\n   present
      only if the bit T is equal to 1.  The field T MUST be equal\n   to 0 if the
      PACSI NAL unit is contained in an STAP-B, MTAP16, MTAP24,\n   or NI-MTAP with
      the J field equal to 1.\n   The values of the fields in PACSI NAL unit MUST
      be set as follows.\n   o  The F bit MUST be set to 1 if the F bit in at least
      one of the\n      remaining NAL units in the aggregation packet is equal to
      1 (when\n      the PACSI NAL unit is included in an aggregation packet) or if
      the\n      next non-PACSI NAL unit in transmission order has the F bit equal\n
      \     to 1 (when the PACSI NAL unit is included in a single NAL unit\n      packet).
      \ Otherwise, the F bit MUST be set to 0.\n   o  The NRI field MUST be set to
      the highest value of NRI field among\n      all the remaining NAL units in the
      aggregation packet (when the\n      PACSI NAL unit is included in an aggregation
      packet) or the value\n      of the NRI field of the next non-PACSI NAL unit
      in transmission\n      order (when the PACSI NAL unit is included in a single
      NAL unit\n      packet).\n   o  The Type field MUST be set to 30.\n   o  The
      R bit MUST be set to 1.  Receivers MUST ignore the value of R.\n   o  The I
      bit MUST be set to 1 if the I bit of at least one of the\n      remaining NAL
      units in the aggregation packet is equal to 1 (when\n      the PACSI NAL unit
      is included in an aggregation packet) or if the\n      I bit of the next non-PACSI
      NAL unit in transmission order is\n      equal to 1 (when the PACSI NAL unit
      is included in a single NAL\n      unit packet).  Otherwise, the I bit MUST
      be set to 0.\n   o  The PRID field MUST be set to the lowest value of the PRID
      values\n      of the remaining NAL units in the aggregation packet (when the\n
      \     PACSI NAL unit is included in an aggregation packet) or the PRID\n      value
      of the next non-PACSI NAL unit in transmission order (when\n      the PACSI
      NAL unit is included in a single NAL unit packet).\n   o  The N bit MUST be
      set to 1 if the N bit of all the remaining NAL\n      units in the aggregation
      packet is equal to 1 (when the PACSI NAL\n      unit is included in an aggregation
      packet) or if the N bit of the\n      next non-PACSI NAL unit in transmission
      order is equal to 1 (when\n      the PACSI NAL unit is included in a single
      NAL unit packet).\n      Otherwise, the N bit MUST be set to 0.\n   o  The DID
      field MUST be set to the lowest value of the DID values of\n      the remaining
      NAL units in the aggregation packet (when the PACSI\n      NAL unit is included
      in an aggregation packet) or the DID value of\n      the next non-PACSI NAL
      unit in transmission order (when the PACSI\n      NAL unit is included in a
      single NAL unit packet).\n   o  The QID field MUST be set to the lowest value
      of the QID values of\n      the remaining NAL units with the lowest value of
      DID in the\n      aggregation packet (when the PACSI NAL unit is included in
      an\n      aggregation packet) or the QID value of the next non-PACSI NAL\n      unit
      in transmission order (when the PACSI NAL unit is included in\n      a single
      NAL unit packet).\n   o  The TID field MUST be set to the lowest value of the
      TID values of\n      the remaining NAL units with the lowest value of DID in
      the\n      aggregation packet (when the PACSI NAL unit is included in an\n      aggregation
      packet) or the TID value of the next non-PACSI NAL\n      unit in transmission
      order (when the PACSI NAL unit is included in\n      a single NAL unit packet).\n
      \  o  The U bit MUST be set to 1 if the U bit of at least one of the\n      remaining
      NAL units in the aggregation packet is equal to 1 (when\n      the PACSI NAL
      unit is included in an aggregation packet) or if the\n      U bit of the next
      non-PACSI NAL unit in transmission order is\n      equal to 1 (when the PACSI
      NAL unit is included in a single NAL\n      unit packet).  Otherwise, the U
      bit MUST be set to 0.\n   o  The D bit MUST be set to 1 if the D value of all
      the remaining NAL\n      units in the aggregation packet is equal to 1 (when
      the PACSI NAL\n      unit is included in an aggregation packet) or if the D
      bit of the\n      next non-PACSI NAL unit in transmission order is equal to
      1 (when\n      the PACSI NAL unit is included in a single NAL unit packet).\n
      \     Otherwise, the D bit MUST be set to 0.\n   o  The O bit MUST be set to
      1 if the O bit of at least one of the\n      remaining NAL units in the aggregation
      packet is equal to 1 (when\n      the PACSI NAL unit is included in an aggregation
      packet) or if the\n      O bit of the next non-PACSI NAL unit in transmission
      order is\n      equal to 1 (when the PACSI NAL unit is included in a single
      NAL\n      unit packet).  Otherwise, the O bit MUST be set to 0.\n   o  The
      RR field MUST be set to \"11\" (in binary form).  Receivers MUST\n      ignore
      the value of RR.\n   o  If the X bit is equal to 1, the bits A, P, and C are
      specified as\n      below.  Otherwise, the bits A, P, and C are unspecified,
      and\n      receivers MUST ignore the values of these bits.  The X bit SHOULD\n
      \     be identical for all the PACSI NAL units in all the RTP sessions\n      carrying
      the same SVC bitstream.\n   o  If the Y bit is equal to 1, the OPTIONAL fields
      TL0PICIDX and\n      IDRPICID MUST be present and specified as below, and the
      bits S\n      and E are also specified as below.  Otherwise, the fields\n      TL0PICIDX
      and IDRPICID MUST NOT be present, while the S and E bits\n      are unspecified
      and receivers MUST ignore the values of these\n      bits.  The Y bit MUST be
      identical for all the PACSI NAL units in\n      all the RTP sessions carrying
      the same SVC bitstream.  The Y bit\n      MUST be equal to 0 when the parameter
      packetization-mode is equal\n      to 2.\n   o  If the T bit is equal to 1,
      the OPTIONAL field DONC MUST be\n      present and specified as below.  Otherwise,
      the field DONC MUST\n      NOT be present.  The field T MUST be equal to 0 if
      the PACSI NAL\n      unit is contained in an STAP-B, MTAP16, MTAP24, or NI-MTAP.\n
      \  o  The A bit MUST be set to 1 if at least one of the remaining NAL\n      units
      in the aggregation packet belongs to an anchor layer\n      representation (when
      the PACSI NAL unit is included in an\n      aggregation packet) or if the next
      non-PACSI NAL unit in\n      transmission order belongs to an anchor layer representation
      (when\n      the PACSI NAL unit is included in a single NAL unit packet).\n
      \     Otherwise, the A bit MUST be set to 0.\n      Informative note: The A
      bit indicates whether CGS or spatial layer\n      switching at a non-IDR layer
      representation (a layer\n      representation with nal_unit_type not equal to
      5 and idr_flag not\n      equal to 1) can be performed.  With some picture coding
      structures\n      a non-IDR intra layer representation can be used for random\n
      \     access.  Compared to using only IDR layer representations, higher\n      coding
      efficiency can be achieved.  The H.264/AVC or SVC solution\n      to indicate
      the random accessibility of a non-IDR intra layer\n      representation is using
      a recovery point SEI message.  The A bit\n      offers direct access to this
      information, without having to parse\n      the recovery point SEI message,
      which may be buried deeply in an\n      SEI NAL unit.  Furthermore, the SEI
      message may or may not be\n      present in the bitstream.\n   o  The P bit
      MUST be set to 1 if all the remaining NAL units in the\n      aggregation packet
      have redundant_pic_cnt greater than 0 (when the\n      PACSI NAL unit is included
      in an aggregation packet) or the next\n      non-PACSI NAL unit in transmission
      order has redundant_pic_cnt\n      greater than 0 (when the PACSI NAL unit is
      included in a single\n      NAL unit packet).  Otherwise, the P bit MUST be
      set to 0.\n      Informative note: The P bit indicates whether a packet can
      be\n      discarded because it contains only redundant slice NAL units.\n      Without
      this bit, the corresponding information can be obtained\n      from the syntax
      element redundant_pic_cnt, which is contained in\n      the variable-length
      coded slice header.\n   o  The C bit MUST be set to 1 if at least one of the
      remaining NAL\n      units in the aggregation packet belongs to an intra layer\n
      \     representation (when the PACSI NAL unit is included in an\n      aggregation
      packet) or if the next non-PACSI NAL unit in\n      transmission order belongs
      to an intra layer representation (when\n      the PACSI NAL unit is included
      in a single NAL unit packet).\n      Otherwise, the C bit MUST be set to 0.\n
      \     Informative note: The C bit indicates whether a packet contains\n      intra
      slices, which may be the only packets to be forwarded, e.g.,\n      when the
      network conditions are particularly adverse.\n   o  The S bit MUST be set to
      1, if the first NAL unit following the\n      PACSI NAL unit in an aggregation
      packet is the first VCL NAL unit,\n      in decoding order, of a layer representation
      (when the PACSI NAL\n      unit is included in an aggregation packet) or if
      the next non-\n      PACSI NAL unit in transmission order is the first VCL NAL
      unit, in\n      decoding order, of a layer representation(when the PACSI NAL
      unit\n      is included in a single NAL unit packet).  Otherwise, the S bit\n
      \     MUST be set to 0.\n   o  The E bit MUST be set to 1, if the last NAL unit
      following the\n      PACSI NAL unit in an aggregation packet is the last VCL
      NAL unit,\n      in decoding order, of a layer representation (when the PACSI
      NAL\n      unit is included in an aggregation packet) or if the next non-\n
      \     PACSI NAL unit in transmission order is the last VCL NAL unit, in\n      decoding
      order, of a layer representation (when the PACSI NAL unit\n      is included
      in a single NAL unit packet).  Otherwise, the E bit\n      MUST be set to 0.\n
      \     Informative note: In an aggregation packet it is always possible\n      to
      detect the beginning or end of a layer representation by\n      detecting changes
      in the values of dependency_id, quality_id, and\n      temporal_id in NAL unit
      headers, except from the first and last\n      NAL units of a packet.  The S
      or E bits are used to provide this\n      information, for both single NAL unit
      and aggregation packets, so\n      that previous or following packets do not
      have to be examined.\n      This enables MANEs to detect slice loss and take
      proper action\n      such as requesting a retransmission as soon as possible,
      as well\n      as to allow efficient playout buffer handling similarly to the
      M\n      bit present in the RTP header.  The M bit in the RTP header still\n
      \     indicates the end of an access unit, not the end of a layer\n      representation.\n
      \  o  When present, the TL0PICIDX field MUST be set to equal to\n      tl0_dep_rep_idx
      as specified in Annex G of [H.264] for the layer\n      representation containing
      the first NAL unit following the PACSI\n      NAL unit in the aggregation packet
      (when the PACSI NAL unit is\n      included in an aggregation packet) or containing
      the next non-\n      PACSI NAL unit in transmission order (when the PACSI NAL
      unit is\n      included in a single NAL unit packet).\n   o  When present, the
      IDRPICID field MUST be set to equal to\n      effective_idr_pic_id as specified
      in Annex G of [H.264] for the\n      layer representation containing the first
      NAL unit following the\n      PACSI NAL unit in the aggregation packet (when
      the PACSI NAL unit\n      is included in an aggregation packet) or containing
      the next non-\n      PACSI NAL unit in transmission order (when the PACSI NAL
      unit is\n      included in a single NAL unit packet).\n      Informative note:
      The TL0PICIDX and IDRPICID fields enable the\n      detection of the loss of
      layer representations in the most\n      important temporal layer (with temporal_id
      equal to 0) by\n      receivers as well as MANEs.  SVC provides a solution that
      uses SEI\n      messages, which are harder to parse and may or may not be present\n
      \     in the bitstream.  When the PACSI NAL unit is part of an NI-MTAP\n      packet,
      it is possible to infer the correct values of\n      tl0_dep_rep_idx and idr_pic_id
      for all layer representations\n      contained in the NI-MTAP by following the
      rules that specify how\n      these parameters are set as given in Annex G of
      [H.264] and by\n      detecting the different layer representations contained
      in the NI-\n      MTAP packet by detecting changes in the values of dependency_id_,\n
      \     quality_id, and temporal_id in the NAL unit headers as well as\n      using
      the S and E flags.  The only exception is if NAL units of an\n      IDR picture
      are present in the NI-MTAP in a position other than\n      the first NAL unit
      following the PACSI NAL unit, in which case the\n      value of idr_pic_id cannot
      be inferred.  In this case the NAL unit\n      has to be partially parsed to
      obtain the idr_pic_id.  Note that,\n      due to the large size of IDR pictures,
      their inclusion in an NI-\n      MTAP, and especially in a position other than
      the first NAL unit\n      following the PACSI NAL unit, may be neither practical
      nor useful.\n   o  When present, the field DONC indicates the cross-session
      decoding\n      order number (CS-DON) for the first of the remaining NAL units
      in\n      the aggregation packet (when the PACSI NAL unit is included in an\n
      \     aggregation packet) or the CS-DON of the next non-PACSI NAL unit\n      in
      transmission order (when the PACSI NAL unit is included in a\n      single NAL
      unit packet).  CS-DON is further discussed in Section\n      4.11.\n   The PACSI
      NAL unit MAY include a subset of the SEI NAL units\n   associated with the access
      unit to which the first non-PACSI NAL unit\n   in the aggregation packet belongs,
      and MUST NOT contain SEI NAL units\n   associated with any other access unit.\n
      \     Informative note:  In H.264/AVC and SVC, within each access unit,\n      SEI
      NAL units must appear before any VCL NAL unit in decoding\n      order.  Therefore,
      without using PACSI NAL units, SEI messages are\n      typically only conveyed
      in the first of the packets carrying an\n      access unit.  Senders may repeat
      SEI NAL units in PACSI NAL units,\n      so that they are repeated in more than
      one packet and thus\n      increase robustness against packet losses.  Receivers
      may use the\n      repeated SEI messages in place of missing SEI messages.\n
      \  For a PACSI NAL unit included in an aggregation packet, an SEI\n   message
      SHOULD NOT be included in the PACSI NAL unit and also\n   included in one of
      the remaining NAL units contained in the same\n   aggregation packet.\n"
    title: 4.9.  Payload Content Scalability Information (PACSI) NAL Unit
  - contents:
    - "4.10.  Empty NAL unit\n   An empty NAL unit MAY be included in a single NAL
      unit packet, an\n   STAP-A or an NI-MTAP packet.  Empty NAL units MUST have
      an RTP\n   timestamp (when transported in a single NAL unit packet) or NALU-\n
      \  time (when transported in an aggregation packet) that is associated\n   with
      an access unit for which there exists at least one NAL unit of\n   type 1, 5,
      or 20.  When MST is used, the type 1, 5, or 20 NAL unit\n   may be in a different
      RTP session.  Empty NAL units may be used in\n   the decoding order recovery
      process of the NI-T mode as described in\n   Section 5.2.1.\n   The packet structure
      is shown in the following figure.\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |F|NRI|
      \ Type   | Subtype |J|K|L|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Figure
      4.  Empty NAL unit structure.\n   The fields MUST be set as follows:\n     F
      MUST be equal to 0\n     NRI MUST be equal to 3\n     Type MUST be equal to
      31\n     Subtype MUST be equal to 1\n     J MUST be equal to 0\n     K MUST
      be equal to 0\n     L MUST be equal to 0\n"
    title: 4.10.  Empty NAL unit
  - contents:
    - "4.11.  Decoding Order Number (DON)\n   The DON concept is introduced in [RFC6184]
      and is used to recover the\n   decoding order when interleaving is used within
      a single session.\n   Section 5.5 of [RFC6184] applies when using SST.\n   When
      using MST, it is necessary to recover the decoding order across\n   the various
      RTP sessions regardless if interleaving is used or not.\n   In addition to the
      timestamp mechanism described later, the CS-DON\n   mechanism is an extension
      of the DON facility that can be used for\n   this purpose, and is defined in
      the following section.\n"
    - contents:
      - "4.11.1.  Cross-Session DON (CS-DON) for Multi-Session Transmission\n   The
        cross-session decoding order number (CS-DON) is a number that\n   indicates
        the decoding order of NAL units across all RTP sessions\n   involved in MST.
        \ It is similar to the DON concept in [RFC6184], but\n   contrary to [RFC6184]
        where the DON was used only for interleaved\n   packetization, in this memo
        it is used not only in the interleaved\n   MST mode (I-C) but also in two
        of the non-interleaved MST modes (NI-C\n   and NI-TC).\n   When the NI-C or
        NI-TC MST modes are in use, the packetization of\n   each session MUST be
        as specified in Section 5.2.2.  In PACSI NAL\n   units the CS-DON value is
        explicitly coded in the field DONC.  For\n   non-PACSI NAL units the CS-DON
        value is derived as follows.  Let SN\n   indicate the RTP sequence number
        of a packet.\n   o  For each non-PACSI NAL unit carried in a session using
        the single\n      NAL unit session packetization mode, the CS-DON value of
        the NAL\n      unit is equal to (DONC_prev_PACSI + SN_diff - 1) % 65536, wherein\n
        \     \"%\" is the modulo operation, DONC_prev_PACSI is the DONC value of\n
        \     the previous PACSI NAL unit with the same NALU-time as the current\n
        \     NAL unit, and SN_diff is calculated as follows:\n         if SN1 > SN2,
        SN_diff = SN1 - SN2\n         else SN_diff = SN2 + 65536 - SN1\n      where
        SN1 and SN2 are the SNs of the current NAL unit and the\n      previous PACSI
        NAL unit with the same NALU-time, respectively.\n   o  For non-PACSI NAL units
        carried in a session using the non-\n      interleaved session packetization
        mode, the CS-DON value of each\n      non-PACSI NAL unit is derived as follows.\n
        \        For a non-PACSI NAL unit in a single NAL unit packet, the\n         following
        applies.\n            If the previous PACSI NAL unit is contained in a single
        NAL\n            unit packet, the CS-DON value of the NAL unit is calculated\n
        \           as above;\n            otherwise (the previous PACSI NAL unit
        is contained in an\n            STAP-A packet), the CS-DON value of the NAL
        unit is\n            calculated as above, with DONC_prev_PACSI being replaced
        by\n            the CS-DON value of the previous non-PACSI NAL unit in\n            decoding
        order (i.e., the CS-DON value of the last NAL unit\n            of the STAP-A
        packet).\n         For a non-PACSI NAL unit in an STAP-A packet, the following\n
        \        applies.\n            If the non-PACSI NAL unit is the first non-PACSI
        NAL unit in\n            the STAP-A packet, the CS-DON value of the NAL unit
        is equal\n            to DONC of the PACSI NAL unit in the STAP-A packet;\n
        \           otherwise (the non-PACSI NAL unit is not the first non-\n            PACSI
        NAL unit in the STAP-A packet), the CS-DON value of\n            the NAL unit
        is equal to: (the CS-DON value of the previous\n            non-PACSI NAL
        unit in decoding order + 1) % 65536, wherein\n            \"%\" is the modulo
        operation.\n         For a non-PACSI NAL unit in a number of FU-A packets,
        the CS-\n         DON value of the NAL unit is calculated the same way as
        when\n         the single NAL unit session packetization mode is in use, with\n
        \        SN1 being the SN value of the first FU-A packet.\n         For a
        non-PACSI NAL unit in an NI-MTAP packet, the CS-DON value\n         is equal
        to the value of the DON field of the non-interleaved\n         multi-time
        aggregation unit.\n   When the I-C MST packetization mode is in use, the DON
        values derived\n   according to [RFC6184] for all the NAL units in each of
        the RTP\n   sessions MUST indicate CS-DON values.\n"
      title: 4.11.1.  Cross-Session DON (CS-DON) for Multi-Session Transmission
    title: 4.11.  Decoding Order Number (DON)
  title: 4.  RTP Payload Format
- contents:
  - "5.  Packetization Rules\n   Section 6 of [RFC6184] applies in this memo, with
    the following\n   additions.\n"
  - contents:
    - "5.1.  Packetization Rules for Single-Session Transmission\n   All receivers
      MUST support the single NAL unit packetization mode to\n   provide backward
      compatibility to endpoints supporting only the\n   single NAL unit mode of [RFC6184].
      \ However, the use of single NAL\n   unit packetization mode (packetization-mode
      equal to 0) SHOULD be\n   avoided whenever possible, because encapsulating NAL
      units of small\n   sizes in their own packets (e.g., small NAL units containing\n
      \  parameter sets, prefix NAL units, or SEI messages) is less efficient\n   due
      to the packet header overhead.\n   All receivers MUST support the non-interleaved
      mode.\n      Informative note: The non-interleaved mode of [RFC6184] does allow\n
      \     an application to encapsulate a single NAL unit in a single RTP\n      packet.
      \ Historically, the single NAL unit mode has been included\n      in [RFC6184]
      only for compatibility with ITU-T Rec. H.241 Annex A\n      [H.241].  There
      is no point in carrying this historic ballast\n      towards a new application
      space such as the one provided with SVC.\n      The implementation complexity
      increase for supporting the\n      additional mechanisms of the non-interleaved
      mode (namely, STAP-A\n      and FU-A) is minor, whereas the benefits are significant.
      \ As a\n      result, the support of STAP-A and FU-A is required.  Additionally,\n
      \     support for two of the three NAL unit types defined in this memo,\n      namely,
      empty NAL units and NI-MTAP is needed, as specified in\n      Section 4.5.1.\n
      \  A NAL unit of small size SHOULD be encapsulated in an aggregation\n   packet
      together with one or more other NAL units.  For example, non-\n   VCL NAL units
      such as access unit delimiters, parameter sets, or SEI\n   NAL units are typically
      small.\n   A prefix NAL unit and the NAL unit with which it is associated, and\n
      \  which follows the prefix NAL unit in decoding order, SHOULD be\n   included
      in the same aggregation packet whenever an aggregation\n   packet is used for
      the associated NAL unit, unless this would violate\n   session MTU constraints
      or if fragmentation units are used for the\n   associated NAL unit.\n      Informative
      note: Although the prefix NAL unit is ignored by an\n      H.264/AVC decoder,
      it is necessary in the SVC decoding process.\n      Given the small size of
      the prefix NAL unit, it is best if it is\n      transported in the same RTP
      packet as its associated NAL unit.\n   When only an H.264/AVC compatible subset
      of the SVC base layer is\n   transmitted in an RTP session, the subset MUST
      be encapsulated\n   according to [RFC6184].  This way, an [RFC6184] receiver
      will be able\n   to receive the H.264/AVC compatible bitstream subset.\n   When
      a set of layers including one or more SVC enhancement layers is\n   transmitted
      in an RTP session, the set SHOULD be carried in one RTP\n   stream that SHOULD
      be encapsulated according to this memo.\n"
    title: 5.1.  Packetization Rules for Single-Session Transmission
  - contents:
    - "5.2.  Packetization Rules for Multi-Session Transmission\n   When MST is used,
      the packetization rules specified in Section 5.1\n   still apply.  In addition,
      the following packetization rules MUST be\n   followed, to ensure that decoding
      order of NAL units carried in the\n   sessions can be correctly recovered for
      each of the MST packetization\n   modes using the de-packetization process specified
      in Section 6.2.\n   The NI-T and NI-TC modes both use timestamps to recover
      the decoding\n   order.  In order to be able to do so, it is necessary for the
      RTP\n   packet stream to contain data for all sampling instances of a given\n
      \  RTP session in all enhancement RTP sessions that depend on the given\n   RTP
      session.  The NI-C and I-C modes do not have this limitation, and\n   use the
      CS-DON values as a means to explicitly indicate decoding\n   order, either directly
      coded in PACSI NAL units, or inferred from\n   them using the packetization
      rules.  It is noted that the NI-TC mode\n   offers both alternatives and it
      is up to the receiver to select which\n   one to use.\n"
    - contents:
      - "5.2.1.  NI-T/NI-TC Packetization Rules\n   When using the NI-T mode and a
        PACSI NAL unit is present, the T bit\n   MUST be equal to 0, i.e., the DONC
        field MUST NOT be present.\n   When using the NI-T mode, the optional parameters
        sprop-mst-remux-\n   buf-size, sprop-remux-buf-req, remux-buf-cap, sprop-remux-init-buf-\n
        \  time, sprop-mst-max-don-diff MUST NOT be present.\n   When the NI-T or
        NI-TC MST mode is in use, the following applies.\n   If one or more NAL units
        of an access unit of sampling time instance\n   t is present in RTP session
        A, then one or more NAL units of the same\n   access unit MUST be present
        in any enhancement RTP session that\n   depends on RTP session A.\n      Informative
        note: The mapping between RTP and NTP format\n      timestamps is conveyed
        in RTCP SR packets.  In addition, the\n      mechanisms for faster media timestamp
        synchronization discussed in\n      [RFC6051] may be used to speed up the
        acquisition of the RTP-to-\n      wall-clock mapping.\n      Informative note:
        The rule above may require the insertion of NAL\n      units, typically when
        temporal scalability is used, i.e., an\n      enhancement RTP session does
        not contain any NAL units for an\n      access unit with a particular NTP
        timestamp (media timestamp),\n      which, however, is present in a lower
        enhancement RTP session or\n      the base RTP session.  There are two ways
        to insert additional NAL\n      units in order to satisfy this rule:\n      -
        One option for adding additional NAL units is to use empty NAL\n        units
        (defined in Section 4.10), which can be used by the\n        process described
        in Section 6.2.1 for the access unit\n        reordering process.\n      -
        Additional NAL units may also be added by the encoder itself,\n        for
        example, by transmitting coded data that simply instruct the\n        decoder
        to repeat the previous picture.  This option, however,\n        may be difficult
        to use with pre-encoded content.\n   If a packet must be inserted in order
        to satisfy the above rule,\n   e.g., in case of a MANE generating multiple
        RTP streams out of a\n   single RTP stream, the inserted packet must have
        an RTP timestamp\n   that maps to the same wall-clock time (in NTP format)
        as the one of\n   the RTP timestamp of any packet of the access unit present
        in any\n   lower enhancement RTP session or the base RTP session.  This is
        easy\n   to accomplish if the NAL unit or the packet can be inserted at the\n
        \  time of the RTP stream generation, since the media timestamp (NTP\n   timestamp)
        must be the same for the inserted packet and the packet of\n   the corresponding
        access unit.  If there is no knowledge of the media\n   time at RTP stream
        generation or if the RTP streams are not generated\n   at the same instance,
        this can be also applied later in the\n   transmission process.  In this case
        the NTP timestamp of the inserted\n   packet can be calculated as follows.\n
        \  Assume that a packet A2 of an access unit with RTP timestamp TS_A2 is\n
        \  present in base RTP session A, and that no packet of that access unit\n
        \  is present in enhancement RTP session B, as shown in Figure 5.  Thus,\n
        \  a packet B2 must be inserted into session B following the rule above.\n
        \  The most recent RTCP sender report in session A carries NTP timestamp\n
        \  NTP_A and the RTP timestamp TS_A.  The sender report in session B\n   with
        a lower NTP timestamp than NTP_A is NTP_B, and carries the RTP\n   timestamp
        TS_B.\n     RTP  session B:..B0........B1........(B2)......................\n
        \    RTCP session B:.....SR(NTP_B,TS_B).............................\n     RTP
        \ session A:..A0........A1........A2........................\n     RTCP session
        A:..................SR(NTP_A,TS_A)................\n     -----------------|--x------|-----x---|------------------------>\n
        \                                                             NTP time\n     --------------------+<---------->+<->+------------------------>\n
        \                              t1       t2              RTP TS(B) time\n   Figure
        5.  Example calculation of RTP timestamp for packet\n   insertion in an enhancement
        layer RTP session\n   The vertical bars (\"|\")in the NTP time line in the
        figure above\n   indicate that access unit data is present in at least one
        of the\n   sessions.  The \"x\" marks indicate the times of the sender reports.\n
        \  The RTP timestamp time line for session B, shown right below the NTP\n
        \  time line, indicates two time segments, t1 and t2. t1 is the time\n   difference
        between the sender reports between the two sessions,\n   expressed in RTP
        timestamp clock ticks, and t2 is the time difference\n   from the session
        A sender report to the A2 packet, again expressed in\n   RTP timestamp clock
        ticks.  The sum of these differences is added to\n   the RTP timestamp of
        the session report from session B in order to\n   derive the correct RTP timestamp
        for the inserted packet B2.  In\n   other words:\n     TS_B2 = TS_B + t1 +
        t2\n   Let toRTP() be a function that calculates the RTP time difference (in\n
        \  clock ticks of the used clock) given an NTP timestamp difference, and\n
        \  effRTPdiff() be a function that calculates the effective difference\n   between
        two timestamps, including wraparounds:\n     effRTPdiff( ts1, ts2 ):\n         if(
        ts1 <= ts2 ) then\n             effRTPdiff := ts1-ts2\n         else\n             effRTPDiff
        := (4294967296 + ts2) - ts1\n   We have:\n     t1 = toRTP(NTP_A - NTP_B) and
        t2 = effRTPdiff(TS_A2, TS_A)\n   Hence in order to generate the RTP timestamp
        TS_B2 for the inserted\n   packet B2, the RTP timestamp for packet B2 TS_B2
        can be calculated as\n   follows.\n     TS_B2 =  TS_B + toRTP(NTP_A - NTP_B)
        +  effRTPdiff(TS_A2, TS_A)\n"
      title: 5.2.1.  NI-T/NI-TC Packetization Rules
    - contents:
      - "5.2.2.  NI-C/NI-TC Packetization Rules\n   When the NI-C or NI-TC MST mode
        is in use, the following applies for\n   each of the RTP sessions.\n   o  For
        each single NAL unit packet containing a non-PACSI NAL unit,\n      the previous
        packet, if present, MUST have the same RTP timestamp\n      as the single
        NAL unit packet, and the following applies.\n      o  If the NALU-time of
        the non-PACSI NAL unit is not equal to the\n         NALU-time of the previous
        non-PACSI NAL unit in decoding order,\n         the previous packet MUST contain
        a PACSI NAL unit containing\n         the DONC field.\n   o  In an STAP-A
        packet the first NAL unit in the STAP-A packet MUST\n      be a PACSI NAL
        unit containing the DONC field.\n   o  For an FU-A packet the previous packet
        MUST have the same RTP\n      timestamp as the FU-A packet, and the following
        applies.\n      o If the FU-A packet is the start of the fragmented NAL unit,
        the\n         following applies.\n         o  If the NALU-time of the fragmented
        NAL unit is not equal to\n            the NALU-time of the previous non-PACSI
        NAL unit in decoding\n            order, the previous packet MUST contain
        a PACSI NAL unit\n            containing the DONC field;\n         o  Otherwise,
        (the NALU-time of the fragmented NAL unit is\n            equal to the NALU-time
        of the previous non-PACSI NAL unit in\n            decoding order), the previous
        packet MAY contain a PACSI NAL\n            unit containing the DONC field.\n
        \     o  Otherwise, if the FU-A packet is the end of the fragmented NAL\n
        \        unit, the following applies.\n         o  If the next non-PACSI NAL
        unit in decoding order has NALU-\n            time equal to the NALU-time
        of the fragmented NAL unit, and\n            is carried in a number of FU-A
        packets or a single NAL unit\n            packet, the next packet MUST be
        a single NAL unit packet\n            containing a PACSI NAL unit containing
        the DONC field.\n         o  Otherwise (the FU-A packet is neither the start
        nor the end\n            of the fragmented NAL unit), the previous packet
        MUST be a\n            FU-A packet.\n   o  For each single NAL unit packet
        containing a PACSI NAL unit, if\n      present, the PACSI NAL unit MUST contain
        the DONC field.\n   o  When the optional media type parameter sprop-mst-csdon-always-\n
        \     present is equal to 1, the session packetization mode in use MUST\n
        \     be the non-interleaved mode, and only STAP-A and NI-MTAP packets\n      can
        be used.\n"
      title: 5.2.2.  NI-C/NI-TC Packetization Rules
    - contents:
      - "5.2.3.  I-C Packetization Rules\n   When the I-C MST packetization mode is
        in use, the following applies.\n   o  When a PACSI NAL unit is present, the
        T bit MUST be equal to 0,\n      i.e., the DONC field is not present, and
        the Y bit MUST be equal\n      to 0, i.e., the TL0PICIDX and IDRPICID are
        not present.\n"
      title: 5.2.3.  I-C Packetization Rules
    - contents:
      - "5.2.4.  Packetization Rules for Non-VCL NAL Units\n   NAL units that do not
        directly encode video slices are known in H.264\n   as non-VCL NAL units.
        \ Non-VCL units that are only used by, or only\n   relevant to, enhancement
        RTP sessions SHOULD be sent in the lowest\n   session to which they are relevant.\n
        \  Some senders, however, such as those sending pre-encoded data, may be\n
        \  unable to easily determine which non-VCL units are relevant to which\n
        \  session.  Thus, non-VCL NAL units MAY, instead, be sent in a session\n
        \  on which the session using these non-VCL NAL units depends (e.g., the\n
        \  base RTP session).\n   If a non-VCL unit is relevant to more than one RTP
        session, neither\n   of which depends on the other(s), the NAL unit MAY be
        sent in another\n   session on which all these sessions depend.\n"
      title: 5.2.4.  Packetization Rules for Non-VCL NAL Units
    - contents:
      - "5.2.5.  Packetization Rules for Prefix NAL Units\n   Section 5.1 of this
        memo applies, with the following addition.  If\n   the base layer is sent
        in a base RTP session using [RFC6184], prefix\n   NAL units MAY be sent in
        the lowest enhancement RTP session rather\n   than in the base RTP session.\n"
      title: 5.2.5.  Packetization Rules for Prefix NAL Units
    title: 5.2.  Packetization Rules for Multi-Session Transmission
  title: 5.  Packetization Rules
- contents:
  - '6.  De-Packetization Process

    '
  - contents:
    - "6.1.  De-Packetization Process for Single-Session Transmission\n   For single-session
      transmission, where a single RTP session is used,\n   the de-packetization process
      specified in Section 7 of [RFC6184]\n   applies.\n"
    title: 6.1.  De-Packetization Process for Single-Session Transmission
  - contents:
    - "6.2.  De-Packetization Process for Multi-Session Transmission\n   For multi-session
      transmission, where more than one RTP session is\n   used to receive data from
      the same SVC bitstream, the de-\n   packetization process is specified as follows.\n
      \  As for a single RTP session, the general concept behind the de-\n   packetization
      process is to reorder NAL units from transmission order\n   to the NAL unit
      decoding order.\n   The sessions to be received MUST be identified by mechanisms\n
      \  specified in Section 7.2.3.  An enhancement RTP session typically\n   contains
      an RTP stream that depends on at least one other RTP\n   session, as indicated
      by mechanisms defined in Section 7.2.3.  A\n   lower RTP session to an enhancement
      RTP session is an RTP session on\n   which the enhancement RTP session depends.
      \ The lowest RTP session\n   for a receiver is the base RTP session, which does
      not depend on any\n   other RTP session received by the receiver.  The highest
      RTP session\n   for a receiver is the RTP session on which no other RTP session\n
      \  received by the receiver depends.\n   For each of the RTP sessions, the RTP
      reception process as specified\n   in RFC 3550 is applied.  Then the received
      packets are passed into\n   the payload de-packetization process as defined
      in this memo.\n   The decoding order of the NAL units carried in all the associated
      RTP\n   sessions is then recovered by applying one of the following\n   subsections,
      depending on which of the MST packetization modes is in\n   use.\n"
    - contents:
      - "6.2.1.  Decoding Order Recovery for the NI-T and NI-TC Modes\n   The following
        process MUST be applied when the NI-T packetization\n   mode is in use.  The
        following process MAY be applied when the NI-TC\n   packetization mode is
        in use.\n   The process is based on RTP session dependency signaling, RTP\n
        \  sequence numbers, and timestamps.\n   The decoding order of NAL units within
        an RTP packet stream in RTP\n   session is given by the ordering of sequence
        numbers SN of the RTP\n   packets that contain the NAL units, and the order
        of appearance of\n   NAL units within a packet.\n   Timing information according
        to the media timestamp TS, i.e., the NTP\n   timestamp as derived from the
        RTP timestamp of an RTP packet, is\n   associated with all NAL units contained
        in the same RTP packet\n   received in an RTP session.\n   For NI-MTAP packets
        the NALU-time is derived for each contained NAL\n   unit by using the \"TS
        offset\" value in the NI-MTAP packet as defined\n   in Section 4.10, and is
        used instead of the RTP packet timestamp to\n   derive the media timestamp,
        e.g., using the NTP wall clock as\n   provided via RTCP sender reports.  NAL
        units contained in\n   fragmentation packets are handled as defragmented,
        entire NAL units\n   with their own media timestamps.  All NAL units associated
        with the\n   same value of media timestamp TS are part of the same access
        unit\n   AU(TS).  Any empty NAL units SHOULD be kept as, effectively, access\n
        \  unit indicators in the reordering process.  Empty NAL units and PACSI\n
        \  NAL units SHOULD be removed before passing access unit data to the\n   decoder.\n
        \     Informative note: These empty NAL units are used to associate NAL\n
        \     units present in other RTP sessions with RTP sessions not\n      containing
        any data for an access unit of a particular time\n      instance.  They act
        as access unit indicators in sessions that\n      would otherwise contain
        no data for the particular access unit.\n      The presence of these NAL units
        is ensured by the packetization\n      rules in Section 5.2.1.\n   It is assumed
        that the receiver has established an operation point\n   (DID, QID, and TID
        values), and has identified the highest\n   enhancement RTP session for this
        operation point.  The decoding order\n   of NAL units from multiple RTP streams
        in multiple RTP sessions MUST\n   be recovered into a single sequence of NAL
        units, grouped into access\n   units, by performing any process equivalent
        to the following steps.\n   The general process is described in Section 4.2
        of [RFC6051].  For\n   convenience the instructions of [RFC6051] are repeated
        and applied to\n   NAL units rather than to full RTP packets.  Additionally,
        SVC-\n   specific extensions to the procedure in Section 4.2.  of [RFC6051]\n
        \  are presented in the following list:\n      o  The process should be started
        with the NAL units received in\n         the highest RTP session with the
        first media timestamp TS (in\n         NTP format) available in the session's
        (de-jittering) buffer.\n         It is assumed that packets in the de-jittering
        buffer are\n         already stored in RTP sequence number order.\n      o
        \ Collect all NAL units associated with the same value of media\n         timestamp
        TS, starting from the highest RTP session, from all\n         the (de-jittering)
        buffers of the received RTP sessions.  The\n         collected NAL units will
        be those associated with the access\n         unit AU(TS).\n      o  Place
        the collected NAL units in the order of session\n         dependency as derived
        by the dependency indication as specified\n         in Section 7.2.3, starting
        from the lowest RTP session.\n      o  Place the session ordered NAL units
        in decoding order within\n         the particular access unit by satisfying
        the NAL unit ordering\n         rules for SVC access units, as described in
        the informative\n         algorithm provided in Section 6.2.1.1.\n      o
        \ Remove NI-MTAP and any PACSI NAL units from the access unit\n         AU(TS).\n
        \     o  The access units can then be transferred to the decoder.\n         Access
        units AU(TS) are transferred to the decoder in the order\n         of appearance
        (given by the order of RTP sequence numbers) of\n         media timestamp
        values TS in the highest RTP session associated\n         with access unit
        AU(TS).\n            Informative note: Due to packet loss it is possible that
        not\n            all sessions may have NAL units present for the media\n            timestamp
        value TS present in the highest RTP session.  In\n            such a case,
        an algorithm may: a) proceed to the next\n            complete access unit
        with NAL units present in all the\n            received RTP sessions; or b)
        consider a new highest RTP\n            session, the highest RTP session for
        which the access unit\n            is complete, and apply the process above.
        \ The algorithm may\n            return to the original highest RTP session
        when a complete\n            and error-free access unit that contains NAL
        units in all\n            the sessions is received.\n   The following gives
        an informative example.\n   The example shown in Figure 6 refers to three
        RTP sessions A, B, and\n   C containing an SVC bitstream transmitted as 3
        sources.  In the\n   example, the dependency signaling (described in Section
        7.2.3)\n   indicates that session A is the base RTP session, B is the first\n
        \  enhancement RTP session and depends on A, and C is the second\n   enhancement
        RTP session and depends on A and B.  A hierarchical\n   picture coding prediction
        structure is used, in which session A has\n   the lowest frame rate and sessions
        B and C have the same but higher\n   frame rate.\n   The figure shows NAL
        units contained in RTP packets that are stored\n   in the de-jittering buffer
        at the receiver for session de-\n   packetization.  The NAL units are already
        reordered according to\n   their RTP sequence number order and, if within
        an aggregation packet,\n   according to the order of their appearance within
        the aggregation\n   packet.  The figure indicates for the received NAL units
        the decoding\n   order within the sessions, as well as the associated media
        (NTP)\n   timestamps (\"TS[..]\").  NAL units of the same access unit within
        a\n   session are grouped by \"(.,.)\" and share the same media timestamp
        TS,\n   which is shown at the bottom of the figure.  Note that the timestamps\n
        \  are not in increasing order since, in this example, the decoding\n   order
        is different from the output/display order.\n   The process first proceeds
        to the NAL units associated with the first\n   media timestamp TS[1] present
        in the highest session C and\n   removes/ignores all preceding (in decoding
        order) NAL units to NAL\n   units with TS[1] in each of the de-jittering buffers
        of RTP sessions\n   A, B, and C.  Then, starting from session C, the first
        media\n   timestamp available in decoding order (TS[1]) is selected and NAL\n
        \  units starting from RTP session A, and sessions B and C are placed in\n
        \  order of the RTP session dependency as required by Section 7.2.3 of\n   this
        memo (in the example for TS[1]: first session B and then session\n   C) into
        the access unit AU(TS[1]) associated with media timestamp\n   TS[1].  Then
        the next media timestamp TS[3] in order of appearance in\n   the highest RTP
        session C is processed and the process described\n   above is repeated.  Note
        that there may be access units with no NAL\n   units present, e.g., in the
        lowest RTP session A (see, e.g., TS[1]).\n   With TS[8], the first access
        unit with NAL units present in all the\n   RTP sessions appears in the buffers.\n
        \  C: ------------(1,2)-(3,4)--(5)---(6)---(7,8)(9,10)-(11)--(12)----\n        |
        \    |     |     |     |     |      |    |     |      |\n   B: -(1,2)-(3,4)-(5)---(6)--(7,8)-(9,10)-(11)-(12)--(13,14)(15,15)-\n
        \       |     |                 |     |                 |      |\n   A: -------(1)---------------(2)---(3)---------------(4)----(5)----\n
        \  ---------------------------------------------------decoding order-->\n
        \  TS: [4]   [2]   [1]   [3]   [8]   [6]   [5]   [7]   [12]   [10]\n   Key:\n
        \  A, B, C                - RTP sessions\n   Integer values in \"()\" - NAL
        unit decoding order within RTP session\n   \"( )\"                  - groups
        the NAL units of an access unit\n                            in an RTP session\n
        \  \"|\"                    - indicates corresponding NAL units of the\n                            same
        access unit AU(TS[..]) in the RTP\n                            sessions\n
        \  Integer values in \"[]\" - media timestamp TS, sampling time\n                            as
        derived, e.g., from NTP timestamp\n                            associated
        with the access unit AU(TS[..]),\n                            consisting of
        NAL units in the sessions\n                            above each TS value.\n
        \  Figure 6.  Example of decoding order recovery in multi-source\n   transmission.\n"
      - contents:
        - "6.2.1.1.  Informative Algorithm for NI-T Decoding Order Recovery within\n
          \         an Access Unit\n   Within an access unit, the [H.264] specification
          (Sections 7.4.1.2.3\n   and G.7.4.1.2.3) constrains the valid decoding order
          of NAL units.\n   These constraints make it possible to reconstruct a valid
          decoding\n   order for the NAL units of an access unit based only on the
          order of\n   NAL units in each session, the NAL unit headers, and Supplemental\n
          \  Enhancement Information message headers.\n   This section specifies an
          informative algorithm to reconstruct a\n   valid decoding order for NAL
          units within an access unit.  Other NAL\n   unit orderings may also be valid;
          however, any compliant NAL unit\n   ordering will describe the same video
          stream and ancillary data as\n   the one produced by this algorithm.\n   An
          actual implementation, of course, needs only to behave \"as if\"\n   this
          reordering is done.  In particular, NAL units that are discarded\n   by
          an implementation's decoding process do not need to be reordered.\n   In
          this algorithm, NAL units within an access unit are first ordered\n   by
          NAL unit type, in the order specified in Table 12 below, except\n   from
          NAL unit type 14, which is handled specially as described in the\n   table.
          \ NAL units of the same type are then ordered as specified for\n   the type,
          if necessary.\n   For the purposes of this algorithm, \"session order\"
          is the order of\n   NAL units implied by their transmission order within
          an RTP session.\n   For the non-interleaved and single NAL unit modes, this
          is the RTP\n   sequence number order coupled with the order of NAL units
          within an\n   aggregation unit.\n   Table 12.  Ordering of NAL unit types
          within an Access Unit\n    Type    Description / Comments\n   -----------------------------------------------------------\n
          \    9      Access unit delimiter\n     7      Sequence parameter set\n
          \    13     Sequence parameter set extension\n     15     Subset sequence
          parameter set\n     8      Picture parameter set\n     16-18  Reserved\n
          \    6      Supplemental enhancement information (SEI)\n            If an
          SEI message with a first payload of 0 (Buffering\n            Period) is
          present, it must be the first SEI message.\n            If SEI messages
          with a Scalable Nesting (30) payload and\n            a nested payload of
          0 (Buffering Period) are present,\n            these then follow the first
          SEI message.  Such an SEI\n            message with the all_layer_representations_in_au_flag\n
          \           equal to 1 is placed first, followed by any others,\n            sorted
          in increasing order of DQId.\n            All other SEI messages follow
          in any order.\n     14     Prefix NAL unit in scalable extension\n     1
          \     Coded slice of a non-IDR picture\n     5      Coded slice of an IDR
          picture\n            NAL units of type 1 or 5 will be sent within only a\n
          \           single session for any given access unit.  They are\n            placed
          in session order.  (Note: Any given access unit\n            will contain
          only NAL units of type 1 or type 5, not\n            both.)\n            If
          NAL units of type 14 are present, every NAL unit of\n            type 1
          or 5 is prefixed by a NAL unit of type 14.  (Note:\n            Within an
          access unit, every NAL unit of type 14 is\n            identical, so correlation
          of type 14 NAL units with the\n            other NAL units is not necessary.)\n
          \    12     Filler data\n            The only restriction of filler data
          NAL units within an\n            access unit is that they shall not precede
          the first VCL\n            NAL unit with the same access unit.\n     19
          \    Coded slice of an auxiliary coded picture without\n            partitioning\n
          \           These NAL units will be sent within only a single\n            session
          for any given access unit, and are placed in\n            session order.\n
          \     20    Coded slice in scalable extension\n      21-23 Reserved\n            Type
          20 NAL units are placed in increasing order of DQId.\n            Within
          each DQId value, they are placed in session order.\n            (Note: SVC
          slices with a given DQId value will be sent\n            within only a single
          session for any given access unit.)\n            Type 21-23 NAL units are
          placed immediately following\n            the non-reserved-type VCL NAL
          unit they follow in\n            session order.\n     10     End of sequence\n
          \    11     End of stream\n"
        title: 6.2.1.1.  Informative Algorithm for NI-T Decoding Order Recovery within
      title: 6.2.1.  Decoding Order Recovery for the NI-T and NI-TC Modes
    - contents:
      - "6.2.2.  Decoding Order Recovery for the NI-C, NI-TC, and I-C Modes\n   The
        following process MUST be used when either the NI-C or I-C MST\n   packetization
        mode is in use.  The following process MAY be applied\n   when the NI-TC MST
        packetization mode is in use.\n   The RTP packets output from the RTP-level
        reception processing for\n   each session are placed into a re-multiplexing
        buffer.\n   It is RECOMMENDED to set the size of the re-multiplexing buffer
        (in\n   bytes) equal to or greater than the value of the sprop-remux-buf-req\n
        \  media type parameter of the highest RTP session the receiver\n   receives.\n
        \  The CS-DON value is calculated and stored for each NAL unit.\n      Informative
        note: The CS-DON value of a NAL unit may rely on\n      information carried
        in another packet than the packet containing\n      the NAL unit.  This happens,
        e.g., when the CS-DON values need to\n      be derived for non-PACSI NAL units
        contained in single NAL unit\n      packets, as the single NAL unit packets
        themselves do not contain\n      CS-DON information.  In this case, when no
        packet containing\n      required CS-DON information is received for a NAL
        unit, this NAL\n      unit has to be discarded by the receiver as it cannot
        be fed to\n      the decoder in the correct order.  When the optional media
        type\n      parameter sprop-mst-csdon-always-present is equal to 1, no such\n
        \     dependency exists, i.e., the CS-DON value of any particular NAL\n      unit
        can be derived solely according to information in the packet\n      containing
        the NAL unit, and therefore, the receiver does not need\n      to discard
        any received NAL units.\n   The receiver operation is described below with
        the help of the\n   following functions and constants:\n   o  Function AbsDON
        is specified in Section 8.1 of [RFC6184].\n   o  Function don_diff is specified
        in Section 5.5 of [RFC6184].\n   o  Constant N is the value of the OPTIONAL
        sprop-mst-remux-buf-size\n      media type parameter of the highest RTP session
        incremented by 1.\n   Initial buffering lasts until one of the following conditions
        is\n   fulfilled:\n   o  There are N or more VCL NAL units in the re-multiplexing
        buffer.\n   o  If sprop-mst-max-don-diff of the highest RTP session is present,\n
        \     don_diff(m,n) is greater than the value of sprop-mst-max-don-diff\n
        \     of the highest RTP session, where n corresponds to the NAL unit\n      having
        the greatest value of AbsDON among the received NAL units\n      and m corresponds
        to the NAL unit having the smallest value of\n      AbsDON among the received
        NAL units.\n   o  Initial buffering has lasted for the duration equal to or
        greater\n      than the value of the OPTIONAL sprop-remux-init-buf-time media\n
        \     type parameter of the highest RTP session.\n   The NAL units to be removed
        from the re-multiplexing buffer are\n   determined as follows:\n   o  If the
        re-multiplexing buffer contains at least N VCL NAL units,\n      NAL units
        are removed from the re-multiplexing buffer and passed\n      to the decoder
        in the order specified below until the buffer\n      contains N-1 VCL NAL
        units.\n   o  If sprop-mst-max-don-diff of the highest RTP session is present,\n
        \     all NAL units m for which don_diff(m,n) is greater than sprop-\n      max-don-diff
        of the highest RTP session are removed from the re-\n      multiplexing buffer
        and passed to the decoder in the order\n      specified below.  Herein, n
        corresponds to the NAL unit having the\n      greatest value of AbsDON among
        the NAL units in the re-\n      multiplexing buffer.\n   The order in which
        NAL units are passed to the decoder is specified\n   as follows:\n   o  Let
        PDON be a variable that is initialized to 0 at the beginning\n      of the
        RTP sessions.\n   o  For each NAL unit associated with a value of CS-DON,
        a CS-DON\n      distance is calculated as follows.  If the value of CS-DON
        of the\n      NAL unit is larger than the value of PDON, the CS-DON distance
        is\n      equal to CS-DON - PDON.  Otherwise, the CS-DON distance is equal\n
        \     to 65535 - PDON + CS-DON + 1.\n   o  NAL units are delivered to the
        decoder in increasing order of CS-\n      DON distance.  If several NAL units
        share the same value of CS-\n      DON distance, they can be passed to the
        decoder in any order.\n   o  When a desired number of NAL units have been
        passed to the\n      decoder, the value of PDON is set to the value of CS-DON
        for the\n      last NAL unit passed to the decoder.\n"
      title: 6.2.2.  Decoding Order Recovery for the NI-C, NI-TC, and I-C Modes
    title: 6.2.  De-Packetization Process for Multi-Session Transmission
  title: 6.  De-Packetization Process
- contents:
  - "7.  Payload Format Parameters\n   This section specifies the parameters that
    MAY be used to select\n   optional features of the payload format and certain
    features of the\n   bitstream.  The parameters are specified here as part of the
    media\n   type registration for the SVC codec.  A mapping of the parameters\n
    \  into the Session Description Protocol (SDP) [RFC4566] is also\n   provided
    for applications that use SDP.  Equivalent parameters could\n   be defined elsewhere
    for use with control protocols that do not use\n   SDP.\n   Some parameters provide
    a receiver with the properties of the stream\n   that will be sent.  The names
    of all these parameters start with\n   \"sprop\" for stream properties.  Some
    of these \"sprop\" parameters are\n   limited by other payload or codec configuration
    parameters.  For\n   example, the sprop-parameter-sets parameter is constrained
    by the\n   profile-level-id parameter.  The media sender selects all \"sprop\"\n
    \  parameters rather than the receiver.  This uncommon characteristic of\n   the
    \"sprop\" parameters may be incompatible with some signaling\n   protocol concepts,
    in which case the use of these parameters SHOULD\n   be avoided.\n"
  - contents:
    - "7.1.  Media Type Registration\n   The media subtype for the SVC codec has been
      allocated from the IETF\n   tree.\n   The receiver MUST ignore any unspecified
      parameter.\n      Informative note: Requiring that the receiver ignore unspecified\n
      \     parameters allows for backward compatibility of future extensions.\n      For
      example, if a future specification that is backward compatible\n      to this
      specification specifies some new parameters, then a\n      receiver according
      to this specification is capable of receiving\n      data per the new payload
      but ignoring those parameters newly\n      specified in the new payload specification.
      \ This provision is\n      also present in [RFC6184].\n   Media Type name:     video\n
      \  Media subtype name:  H264-SVC\n   Required parameters: none\n   OPTIONAL
      parameters:\n      In the following definitions of parameters, \"the stream\"
      or \"the\n      NAL unit stream\" refers to all NAL units conveyed in the current\n
      \     RTP session in SST, and all NAL units conveyed in the current RTP\n      session
      and all NAL units conveyed in other RTP sessions that the\n      current RTP
      session depends on in MST.\n      profile-level-id:\n         A base16 [RFC4648]
      (hexadecimal) representation of the\n         following three bytes in the sequence
      parameter set or subset\n         sequence parameter set NAL unit specified
      in [H.264]: 1)\n         profile_idc; 2) a byte herein referred to as profile-iop,\n
      \        composed of the values of constraint_set0_flag,\n         constraint_set1_flag,
      constraint_set2_flag,\n         constraint_set3_flag, constraint_set4_flag,\n
      \        constraint_set5_flag, and reserved_zero_2bits, in bit-\n         significance
      order, starting from the most-significant bit, and\n         3) level_idc.  Note
      that reserved_zero_2bits is required to be\n         equal to 0 in [H.264],
      but other values for it may be specified\n         in the future by ITU-T or
      ISO/IEC.\n         The profile-level-id parameter indicates the default sub-\n
      \        profile, i.e., the subset of coding tools that may have been\n         used
      to generate the stream or that the receiver supports, and\n         the default
      level of the stream or the one that the receiver\n         supports.\n         The
      default sub-profile is indicated collectively by the\n         profile_idc byte
      and some fields in the profile-iop byte.\n         Depending on the values of
      the fields in the profile-iop byte,\n         the default sub-profile may be
      the same set of coding tools\n         supported by one profile, or a common
      subset of coding tools of\n         multiple profiles, as specified in Subsection
      G.7.4.2.1.1 of\n         [H.264].  The default level is indicated by the level_idc
      byte,\n         and, when profile_idc is equal to 66, 77, or 88 (the Baseline,\n
      \        Main, or Extended profile) and level_idc is equal to 11,\n         additionally
      by bit 4 (constraint_set3_flag) of the profile-iop\n         byte.  When profile_idc
      is equal to 66, 77, or 88 (the\n         Baseline, Main, or Extended profile)
      and level_idc is equal to\n         11, and bit 4 (constraint_set3_flag) of
      the profile-iop byte is\n         equal to 1, the default level is Level 1b.\n
      \        Table 13 lists all profiles defined in Annexes A and G of\n         [H.264]
      and, for each of the profiles, the possible\n         combinations of profile_idc
      and profile-iop that represent the\n         same sub-profile.\n         Table
      13.  Combinations of profile_idc and profile-iop\n         representing the
      same sub-profile corresponding to the full set\n         of coding tools supported
      by one profile.  In the following, x\n         may be either 0 or 1, while the
      profile names are indicated as\n         follows.  CB: Constrained Baseline
      profile, B: Baseline\n         profile, M: Main profile, E: Extended profile,
      H: High profile,\n         H10: High 10 profile, H42: High 4:2:2 profile, H44:
      High 4:4:4\n         Predictive profile, H10I: High 10 Intra profile, H42I:
      High\n         4:2:2 Intra profile, H44I: High 4:4:4 Intra profile, C44I:\n
      \        CAVLC 4:4:4 Intra profile, SB: Scalable Baseline profile, SH:\n         Scalable
      High profile, and SHI: Scalable High Intra profile.\n         Profile     profile_idc
      \            profile-iop\n                         (hexadecimal)           (binary)\n
      \            CB          42 (B)                  x1xx0000\n               same
      as:  4D (M)                  1xxx0000\n               same as:  58 (E)                  11xx0000\n
      \            B           42 (B)                  x0xx0000\n               same
      as:  58 (E)                  10xx0000\n             M           4D (M)                  0x0x0000\n
      \            E           58                      00xx0000\n             H           64
      \                     00000000\n             H10         6E                      00000000\n
      \            H42         7A                      00000000\n             H44
      \        F4                      00000000\n             H10I        6E                      00010000\n
      \            H42I        7A                      00010000\n             H44I
      \       F4                      00010000\n             C44I        2C                      00010000\n
      \            SB          53                      x0000000\n             SH          56
      \                     0x000000\n             SHI         56                      0x010000\n
      \        For example, in the table above, profile_idc equal to 58\n         (Extended)
      with profile-iop equal to 11xx0000 indicates the\n         same sub-profile
      corresponding to profile_idc equal to 42\n         (Baseline) with profile-iop
      equal to x1xx0000.  Note that other\n         combinations of profile_idc and
      profile-iop (not listed in\n         Table 13) may represent a sub-profile equivalent
      to the common\n         subset of coding tools for more than one profile.  Note
      also\n         that a decoder conforming to a certain profile may be able to\n
      \        decode bitstreams conforming to other profiles.\n         If profile-level-id
      is used to indicate stream properties, it\n         indicates that, to decode
      the stream, the minimum subset of\n         coding tools a decoder has to support
      is the default sub-\n         profile, and the lowest level the decoder has
      to support is the\n         default level.\n         If the profile-level-id
      parameter is used for capability\n         exchange or session setup, it indicates
      the subset of coding\n         tools, which is equal to the default sub-profile,
      that the\n         codec supports for both receiving and sending.  If max-recv-\n
      \        level is not present, the default level from profile-level-id\n         indicates
      the highest level the codec wishes to support.  If\n         max-recv-level
      is present, it indicates the highest level the\n         codec supports for
      receiving.  For either receiving or sending,\n         all levels that are lower
      than the highest level supported MUST\n         also be supported.\n            Informative
      note: Capability exchange and session setup\n            procedures should provide
      means to list the capabilities for\n            each supported sub-profile separately.
      \ For example, the\n            one-of-N codec selection procedure of the SDP
      Offer/Answer\n            model can be used (Section 10.2 of [RFC3264]).  The
      one-of-N\n            codec selection procedure may also be used to provide\n
      \           different combinations of profile_idc and profile-iop that\n            represent
      the same sub-profile.  When there are many\n            different combinations
      of profile_idc and profile-iop that\n            represent the same sub-profile,
      using the one-of-N codec\n            selection procedure may result in a fairly
      large SDP\n            message.  Therefore, a receiver should understand the\n
      \           different equivalent combinations of profile_idc and\n            profile-iop
      that represent the same sub-profile, and be\n            ready to accept an
      offer using any of the equivalent\n            combinations.\n         If no
      profile-level-id is present, the Baseline Profile without\n         additional
      constraints at Level 1 MUST be implied.\n      max-recv-level:\n         This
      parameter MAY be used to indicate the highest level a\n         receiver supports
      when the highest level is higher than the\n         default level (the level
      indicated by profile-level-id).  The\n         value of max-recv-level is a
      base16 (hexadecimal)\n         representation of the two bytes after the syntax
      element\n         profile_idc in the sequence parameter set NAL unit specified
      in\n         [H.264]: profile-iop (as defined above) and level_idc.  If (the\n
      \        level_idc byte of max-recv-level is equal to 11 and bit 4 of\n         the
      profile-iop byte of max-recv-level is equal to 1) or (the\n         level_idc
      byte of max-recv-level is equal to 9 and bit 4 of the\n         profile-iop
      byte of max-recv-level is equal to 0), the highest\n         level the receiver
      supports is Level 1b.  Otherwise, the\n         highest level the receiver supports
      is equal to the level_idc\n         byte of max-recv-level divided by 10.\n
      \        max-recv-level MUST NOT be present if the highest level the\n         receiver
      supports is not higher than the default level.\n      max-recv-base-level:\n
      \        This parameter MAY be used to indicate the highest level a\n         receiver
      supports for the base layer when negotiating an SVC\n         stream.  The value
      of max-recv-base-level is a base16\n         (hexadecimal) representation of
      the two bytes after the syntax\n         element profile_idc in the sequence
      parameter set NAL unit\n         specified in [H.264]: profile-iop (as defined
      above) and\n         level_idc.  If (the level_idc byte of max-recv-level is
      equal\n         to 11 and bit 4 of the profile-iop byte of max-recv-level is\n
      \        equal to 1) or (the level_idc byte of max-recv-level is equal\n         to
      9 and bit 4 of the profile-iop byte of max-recv-level is\n         equal to
      0), the highest level the receiver supports for the\n         base layer is
      Level 1b. Otherwise, the highest level the\n         receiver supports for the
      base layer is equal to the level_idc\n         byte of max-recv-level divided
      by 10.\n      max-mbps, max-fs, max-cpb, max-dpb, and max-br:\n         The
      common properties of these parameters are specified in\n         [RFC6184].\n
      \     max-mbps: This parameter is as specified in [RFC6184].\n      max-fs:
      This parameter is as specified in [RFC6184].\n      max-cpb: The value of max-cpb
      is an integer indicating the maximum\n         coded picture buffer size in
      units of 1000 bits for the VCL HRD\n         parameters and in units of 1200
      bits for the NAL HRD\n         parameters.  Note that this parameter does not
      use units of\n         cpbBrVclFactor and cpbBrNALFactor (see Table A-1 of [H.264]).\n
      \        The max-cpb parameter signals that the receiver has more memory\n         than
      the minimum amount of coded picture buffer memory required\n         by the
      signaled highest level conveyed in the value of the\n         profile-level-id
      parameter or the max-recv-level parameter.\n         When max-cpb is signaled,
      the receiver MUST be able to decode\n         NAL unit streams that conform
      to the signaled highest level,\n         with the exception that the MaxCPB
      value in Table A-1 of\n         [H.264] for the signaled highest level is replaced
      with the\n         value of max-cpb (after taking cpbBrVclFactor and\n         cpbBrNALFactor
      into consideration when needed).  The value of\n         max-cpb (after taking
      cpbBrVclFactor and cpbBrNALFactor into\n         consideration when needed)
      MUST be greater than or equal to the\n         value of MaxCPB given in Table
      A-1 of [H.264] for the highest\n         level.  Senders MAY use this knowledge
      to construct coded video\n         streams with greater variation of bitrate
      than can be achieved\n         with the MaxCPB value in Table A-1 of [H.264].\n
      \           Informative note: The coded picture buffer is used in the\n            Hypothetical
      Reference Decoder (HRD, Annex C) of [H.264].\n            The use of the HRD
      is recommended in SVC encoders to verify\n            that the produced bitstream
      conforms to the standard and to\n            control the output bitrate.  Thus,
      the coded picture buffer\n            is conceptually independent of any other
      potential buffers\n            in the receiver, including de-interleaving, re-multiplexing,\n
      \           and de-jitter buffers.  The coded picture buffer need not be\n            implemented
      in decoders as specified in Annex C of [H.264];\n            standard-compliant
      decoders can have any buffering\n            arrangements provided that they
      can decode standard-\n            compliant bitstreams.  Thus, in practice,
      the input buffer\n            for video decoder can be integrated with the de-\n
      \           interleaving, re-multiplexing, and de-jitter buffers of the\n            receiver.\n
      \     max-dpb: This parameter is as specified in [RFC6184].\n      max-br: The
      value of max-br is an integer indicating the maximum\n         video bitrate
      in units of 1000 bits per second for the VCL HRD\n         parameters and in
      units of 1200 bits per second for the NAL HRD\n         parameters.  Note that
      this parameter does not use units of\n         cpbBrVclFactor and cpbBrNALFactor
      (see Table A-1 of [H.264]).\n         The max-br parameter signals that the
      video decoder of the\n         receiver is capable of decoding video at a higher
      bitrate than\n         is required by the signaled highest level conveyed in
      the value\n         of the profile-level-id parameter or the max-recv-level\n
      \        parameter.\n         When max-br is signaled, the video codec of the
      receiver MUST\n         be able to decode NAL unit streams that conform to the
      signaled\n         highest level, with the following exceptions in the limits\n
      \        specified by the highest level:\n         o  The value of max-br (after
      taking cpbBrVclFactor and\n            cpbBrNALFactor into consideration when
      needed) replaces the\n            MaxBR value in Table A-1 of [H.264] for the
      highest level.\n         o  When the max-cpb parameter is not present, the result
      of the\n            following formula replaces the value of MaxCPB in Table
      A-1\n            of [H.264]: (MaxCPB of the signaled level) * max-br / (MaxBR\n
      \           of the signaled highest level).\n         For example, if a receiver
      signals capability for Main profile\n         Level 1.2 with max-br equal to
      1550, this indicates a maximum\n         video bitrate of 1550 kbits/sec for
      VCL HRD parameters, a\n         maximum video bitrate of 1860 kbits/sec for
      NAL HRD parameters,\n         and a CPB size of 4036458 bits (1550000 / 384000
      * 1000 *\n         1000).\n         The value of max-br (after taking cpbBrVclFactor
      and\n         cpbBrNALFactor into consideration when needed) MUST be greater\n
      \        than or equal to the value MaxBR given in Table A-1 of [H.264]\n         for
      the signaled highest level.\n         Senders MAY use this knowledge to send
      higher-bitrate video as\n         allowed in the level definition of SVC, to
      achieve improved\n         video quality.\n            Informative note: This
      parameter was added primarily to\n            complement a similar codepoint
      in the ITU-T Recommendation\n            H.245, so as to facilitate signaling
      gateway designs.  No\n            assumption can be made from the value of this
      parameter that\n            the network is capable of handling such bitrates
      at any\n            given time.  In particular, no conclusion can be drawn that\n
      \           the signaled bitrate is possible under congestion control\n            constraints.\n
      \     redundant-pic-cap:\n         This parameter is as specified in [RFC6184].\n
      \     sprop-parameter-sets:\n         This parameter MAY be used to convey any
      sequence parameter\n         set, subset sequence parameter set, and picture
      parameter set\n         NAL units (herein referred to as the initial parameter
      set NAL\n         units) that can be placed in the NAL unit stream to precede
      any\n         other NAL units in decoding order and that are associated with\n
      \        the default level of profile-level-id.  The parameter MUST NOT\n         be
      used to indicate codec capability in any capability exchange\n         procedure.
      \ The value of the parameter is a comma (',')\n         separated list of base64
      [RFC4648] representations of the\n         parameter set NAL units as specified
      in Sections 7.3.2.1,\n         7.3.2.2, and G.7.3.2.1 of [H.264].  Note that
      the number of\n         bytes in a parameter set NAL unit is typically less
      than 10,\n         but a picture parameter set NAL unit can contain several\n
      \        hundreds of bytes.\n            Informative note: When several payload
      types are offered in\n            the SDP Offer/Answer model, each with its
      own sprop-\n            parameter-sets parameter, then the receiver cannot assume\n
      \           that those parameter sets do not use conflicting storage\n            locations
      (i.e., identical values of parameter set\n            identifiers).  Therefore,
      a receiver should buffer all\n            sprop-parameter-sets and make them
      available to the decoder\n            instance that decodes a certain payload
      type.\n      sprop-level-parameter-sets:\n         This parameter MAY be used
      to convey any sequence, subset\n         sequence, and picture parameter set
      NAL units (herein referred\n         to as the initial parameter set NAL units)
      that can be placed\n         in the NAL unit stream to precede any other NAL
      units in\n         decoding order and that are associated with one or more levels\n
      \        different than the default level of profile-level-id.  The\n         parameter
      MUST NOT be used to indicate codec capability in any\n         capability exchange
      procedure.\n         The sprop-level-parameter-sets parameter contains parameter\n
      \        sets for one or more levels that are different than the default\n         level.
      \ All parameter sets targeted for use when one level of\n         the default
      sub-profile is accepted by a receiver are clustered\n         and prefixed with
      a three-byte field that has the same syntax\n         as profile-level-id.  This
      enables the receiver to install the\n         parameter sets for the accepted
      level and discard the rest.\n         The three-byte field is named PLId, and
      all parameter sets\n         associated with one level are named PSL, which
      has the same\n         syntax as sprop-parameter-sets.  Parameter sets for each
      level\n         are represented in the form of PLId:PSL, i.e., PLId followed
      by\n         a colon (':') and the base64 [RFC4648] representation of the\n
      \        initial parameter set NAL units for the level.  Each pair of\n         PLId:PSL
      is also separated by a colon.  Note that a PSL can\n         contain multiple
      parameter sets for that level, separated with\n         commas (',').\n         The
      subset of coding tools indicated by each PLId field MUST be\n         equal
      to the default sub-profile, and the level indicated by\n         each PLId field
      MUST be different than the default level.\n            Informative note: This
      parameter allows for efficient level\n            downgrade or upgrade in SDP
      Offer/Answer and out-of-band\n            transport of parameter sets, simultaneously.\n
      \     in-band-parameter-sets:\n         This parameter MAY be used to indicate
      a receiver capability.\n         The value MAY be equal to either 0 or 1.  The
      value 1 indicates\n         that the receiver discards out-of-band parameter
      sets in sprop-\n         parameter-sets and sprop-level-parameter-sets, therefore
      the\n         sender MUST transmit all parameter sets in-band.  The value 0\n
      \        indicates that the receiver utilizes out-of-band parameter sets\n         included
      in sprop-parameter-sets and/or sprop-level-parameter-\n         sets.  However,
      in this case, the sender MAY still choose to\n         send parameter sets in-band.
      \ When the parameter is not\n         present, this receiver capability is not
      specified, and\n         therefore the sender MAY send out-of-band parameter
      sets only,\n         or it MAY send in-band-parameter-sets only, or it MAY send\n
      \        both.\n      packetization-mode:\n         This parameter is as specified
      in [RFC6184].  When the mst-mode\n         parameter is present, the value of
      this parameter is\n         additionally constrained as follows.  If mst-mode
      is equal to\n         \"NI-T\", \"NI-C\", or \"NI-TC\", packetization-mode MUST
      NOT be\n         equal to 2.  Otherwise, (mst-mode is equal to \"I-C\"),\n         packetization-mode
      MUST be equal to 2.\n      sprop-interleaving-depth:\n         This parameter
      is as specified in [RFC6184].\n      sprop-deint-buf-req:\n         This parameter
      is as specified in [RFC6184].\n      deint-buf-cap:\n         This parameter
      is as specified in [RFC6184].\n      sprop-init-buf-time:\n         This parameter
      is as specified in [RFC6184].\n      sprop-max-don-diff:\n         This parameter
      is as specified in [RFC6184].\n      max-rcmd-nalu-size:\n         This parameter
      is as specified in [RFC6184].\n      mst-mode:\n         This parameter MAY
      be used to signal the properties of a NAL\n         unit stream or the capabilities
      of a receiver implementation.\n         If this parameter is present, multi-session
      transmission MUST\n         be used.  Otherwise (this parameter is not present),
      single-\n         session transmission MUST be used.  When this parameter is\n
      \        present, the following applies.  When the value of mst-mode is\n         equal
      to \"NI-T\", the NI-T mode MUST be used.  When the value of\n         mst-mode
      is equal to \"NI-C\", the NI-C mode MUST be used.  When\n         the value
      of mst-mode is equal to \"NI-TC\", the NI-TC mode MUST\n         be used.  When
      the value of mst-mode is equal to \"I-C\", the I-C\n         mode MUST be used.
      \ The value of mst-mode MUST have one of the\n         following tokens: \"NI-T\",
      \"NI-C\", \"NI-TC\", or \"I-C\".\n         All RTP sessions in an MST MUST have
      the same value of mst-\n         mode.\n      sprop-mst-csdon-always-present:\n
      \        This parameter MUST NOT be present when mst-mode is not present\n         or
      the value of mst-mode is equal to \"NI-T\" or \"I-C\".  This\n         parameter
      signals the properties of the NAL unit stream.  When\n         sprop-mst-csdon-always-present
      is present and the value is\n         equal to 1, packetization-mode MUST be
      equal to 1, and all the\n         RTP packets carrying the NAL unit stream MUST
      be STAP-A packets\n         containing a PACSI NAL unit that further contains
      the DONC\n         field or NI-MTAP packets with the J field equal to 1.  When\n
      \        sprop-mst-csdon-always-present is present and the value is\n         equal
      to 1, the CS-DON value of any particular NAL unit can be\n         derived solely
      according to information in the packet\n         containing the NAL unit.\n
      \        When sprop-mst-csdon-always-present is present in the current\n         RTP
      session, it MUST be present also in all the RTP sessions\n         the current
      RTP session depends on and the value of sprop-mst-\n         csdon-always-present
      is identical for the current RTP session\n         and all the RTP sessions
      on which the current RTP session\n         depends.\n      sprop-mst-remux-buf-size:\n
      \        This parameter MUST NOT be present when mst-mode is not present\n         or
      the value of mst-mode is equal to \"NI-T\".  This parameter\n         MUST be
      present when mst-mode is present and the value of mst-\n         mode is equal
      to \"NI-C\", \"NI-TC\", or \"I-C\".\n         This parameter signals the properties
      of the NAL unit stream.\n         It MUST be set to a value one less than the
      minimum re-\n         multiplexing buffer size (in NAL units), so that it is\n
      \        guaranteed that receivers can reconstruct NAL unit decoding\n         order
      as specified in Subsection 6.2.2.\n         The value of sprop-mst-remux-buf-size
      MUST be an integer in the\n         range of 0 to 32767, inclusive.\n      sprop-remux-buf-req:\n
      \        This parameter MUST NOT be present when mst-mode is not present\n         or
      the value of mst-mode is equal to \"NI-T\".  It MUST be\n         present when
      mst-mode is present and the value of mst-mode is\n         equal to \"NI-C\",
      \"NI-TC\", or \"I-C\".\n         sprop-remux-buf-req signals the required size
      of the re-\n         multiplexing buffer for the NAL unit stream.  It is guaranteed\n
      \        that receivers can recover the decoding order of the received\n         NAL
      units from the current RTP session and the RTP sessions the\n         current
      RTP session depends on as specified in Section 6.2.2,\n         when the re-multiplexing
      buffer size is of at least the value\n         of sprop-remux-buf-req in units
      of bytes.\n         The value of sprop-remux-buf-req MUST be an integer in the\n
      \        range of 0 to 4294967295, inclusive.\n      remux-buf-cap:\n         This
      parameter MUST NOT be present when mst-mode is not present\n         or the
      value of mst-mode is equal to \"NI-T\".  This parameter\n         MAY be used
      to signal the capabilities of a receiver\n         implementation and indicates
      the amount of re-multiplexing\n         buffer space in units of bytes that
      the receiver has available\n         for recovering the NAL unit decoding order
      as specified in\n         Section 6.2.2.  A receiver is able to handle any NAL
      unit\n         stream for which the value of the sprop-remux-buf-req parameter\n
      \        is smaller than or equal to this parameter.\n         If the parameter
      is not present, then a value of 0 MUST be used\n         for remux-buf-cap.
      \ The value of remux-buf-cap MUST be an\n         integer in the range of 0
      to 4294967295, inclusive.\n      sprop-remux-init-buf-time:\n         This parameter
      MAY be used to signal the properties of the NAL\n         unit stream.  The
      parameter MUST NOT be present if mst-mode is\n         not present or the value
      of mst-mode is equal to \"NI-T\".\n         The parameter signals the initial
      buffering time that a\n         receiver MUST wait before starting to recover
      the NAL unit\n         decoding order as specified in Section 6.2.2 of this
      memo.\n         The parameter is coded as a non-negative base10 integer\n         representation
      in clock ticks of a 90-kHz clock.  If the\n         parameter is not present,
      then no initial buffering time value\n         is defined.  Otherwise, the value
      of sprop-remux-init-buf-time\n         MUST be an integer in the range of 0
      to 4294967295, inclusive.\n      sprop-mst-max-don-diff:\n         This parameter
      MAY be used to signal the properties of the NAL\n         unit stream.  It MUST
      NOT be used to signal transmitter or\n         receiver or codec capabilities.
      \ The parameter MUST NOT be\n         present if mst-mode is not present or
      the value of mst-mode is\n         equal to \"NI-T\".  sprop-mst-max-don-diff
      is an integer in the\n         range of 0 to 32767, inclusive.  If sprop-mst-max-don-diff
      is\n         not present, the value of the parameter is unspecified.  sprop-\n
      \        mst-max-don-diff is calculated same as sprop-max-don-diff as\n         specified
      in [RFC6184], with decoding order number being\n         replaced by cross-session
      decoding order number.\n      sprop-scalability-info:\n         This parameter
      MAY be used to convey the NAL unit containing\n         the scalability information
      SEI message as specified in Annex G\n         of [H.264].  This parameter MAY
      be used to signal the contained\n         layers of an SVC bitstream.  The parameter
      MUST NOT be used to\n         indicate codec capability in any capability exchange
      procedure.\n         The value of the parameter is the base64 [RFC4648]\n         representation
      of the NAL unit containing the scalability\n         information SEI message.
      \ If present, the NAL unit MUST contain\n         only one SEI message that
      is a scalability information SEI\n         message.\n         This parameter
      MAY be used in an offering or declarative SDP\n         message to indicate
      what layers (operation points) can be\n         provided.  A receiver MAY indicate
      its choice of one layer\n         using the optional media type parameter scalable-layer-id.\n
      \     scalable-layer-id:\n         This parameter MAY be used to signal a receiver's
      choice of the\n         offers or declared operation points or layers using
      sprop-\n         scalability-info or sprop-operation-point-info.  The value
      of\n         scalable-layer-id is a base16 representation of the layer_id[ i\n
      \        ] syntax element in the scalability information SEI message as\n         specified
      in Annex G of [H.264] or layer-ID contained in sprop-\n         operation-point-info.\n
      \     sprop-operation-point-info:\n         This parameter MAY be used to describe
      the operation points of\n         an RTP session.  The value of this parameter
      consists of a\n         comma-separated list of operation-point-description
      vectors.\n         The values given by the operation-point-description vectors
      are\n         the same as, or are derived from, the values that would be\n         given
      for a scalable layer in the scalability information SEI\n         message as
      specified in Annex G of [H.264], where the term\n         scalable layer in
      the scalability information SEI message\n         refers to all NAL units associated
      with the same values of\n         temporal_id, dependency_id, and quality_id.
      \ In this memo, such\n         a set of NAL units is called an operation point.\n
      \        Each operation-point-description vector has ten elements,\n         provided
      as a comma-separated list of values as defined below.\n         The first value
      of the operation-point-description vector is\n         preceded by a '<', and
      the last value of the operation-point-\n         description vector is followed
      by a '>'.  If the sprop-\n         operation-point-info is followed by exactly
      one operation-\n         point-description vector, this describes the highest
      operation\n         point contained in the RTP session.  If there are two or
      more\n         operation-point-description vectors, the first describes the\n
      \        lowest and the last describes the highest operation point\n         contained
      in the RTP session.\n         The values given by the operation-point-description
      vector are\n         as follows, in the order listed:\n          - layer-ID:
      This value specifies the layer identifier of the\n            operation point,
      which is identical to the layer_id that\n            would be indicated (for
      the same values of dependency_id,\n            quality_id, and temporal_id)
      in the scalability information\n            SEI message.  This field MAY be
      empty, indicating that the\n            value is unspecified.  When there are
      multiple operation-\n            point-description vectors with layer-ID, the
      values of\n            layer-ID do not need to be consecutive.\n          -
      temporal-ID: This value specifies the temporal_id of the\n            operation
      point.  This field MUST NOT be empty.\n          - dependency-ID: This values
      specifies the dependency_id of\n            the operation point.  This field
      MUST NOT be empty.\n          - quality-ID: This values specifies the quality_id
      of the\n            operation point.  This field MUST NOT be empty.\n          -
      profile-level-ID: This value specifies the profile-level-idc\n            of
      the operation point in the base16 format.  The default\n            sub-profile
      or default level indicated by the parameter\n            profile-level-ID in
      the sprop-operation-point-info vector\n            SHALL be equal to or lower
      than the default sub-profile or\n            default level indicated by profile-level-id,
      which may be\n            either present or the default value is taken.  This
      field\n            MAY be empty, indicating that the value is unspecified.\n
      \         - avg-framerate: This value specifies the average frame rate\n            of
      the operation point.  This value is given as an integer\n            in frames
      per 256 seconds.  The field MAY be empty,\n            indicating that the value
      is unspecified.\n          - width: This value specifies the width dimension
      in pixels of\n            decoded frames for the operation point.  This parameter
      is\n            not directly given in the scalability information SEI\n            message.
      \ This field MAY be empty, indicating that the value\n            is unspecified.\n
      \         - height: This value gives the height dimension in pixels of\n            decoded
      frames for the operation point.  This parameter is\n            not directly
      given in the scalability information SEI.  This\n            field MAY be empty,
      indicating that the value is\n            unspecified.\n          - avg-bitrate:
      This value specifies the average bitrate of the\n            operation point.
      \ This parameter is given as an integer in\n            kbits per second over
      the entire stream.  Note that this\n            parameter is provided in the
      scalability information SEI\n            message in bits per second and calculated
      over a variable\n            time window.  This field MAY be empty, indicating
      that the\n            value is unspecified.\n          - max-bitrate: This value
      specifies the maximum bitrate of the\n            operation point.  This parameter
      is given as an integer in\n            kbits per second and describes the maximum
      bitrate per each\n            one-second window.  Note that this parameter is
      provided in\n            the scalability information SEI message in bits per
      second\n            and is calculated over a variable time window.  This field\n
      \           MAY be empty, indicating that the value is unspecified.\n            Similarly
      to sprop-scalability-info, this parameter MAY be\n            used in an offering
      or declarative SDP message to indicate\n            what layers (operation points)
      can be provided.  A receiver\n            MAY indicate its choice of the highest
      layer it wants to\n            send and/or receive using the optional media
      type parameter\n            scalable-layer-id.\n      sprop-no-NAL-reordering-required:\n
      \        This parameter MAY be used to signal the properties of the NAL\n         unit
      stream.  This parameter MUST NOT be present when mst-mode\n         is not present
      or the value of mst-mode is not equal to \"NI-T\".\n         The presence of
      this parameter indicates that no reordering of\n         non-VCL or VCL NAL
      units is required for the decoding order\n         recovery process.\n      sprop-avc-ready:\n
      \        This parameter MAY be used to indicate the properties of the\n         NAL
      unit stream.  The presence of this parameter indicates that\n         the RTP
      session, if used in SST, or used in MST combined with\n         other RTP sessions
      also with this parameter present, can be\n         processed by a [RFC6184]
      receiver.  This parameter MAY be used\n         with RTP sessions with media
      subtype H264-SVC.\n      Encoding considerations:\n         This media type
      is framed and binary; see Section 4.8 of RFC\n         4288 [RFC4288].\n      Security
      considerations:\n         See Section 8 of RFC 6190.\n      Published specification:\n
      \        Please refer to RFC 6190 and its Section 13.\n      Additional information:\n
      \        none\n      File extensions:     none\n      Macintosh file type code:
      none\n      Object identifier or OID: none\n      Person & email address to
      contact for further information:\n         Ye-Kui Wang, yekui.wang@huawei.com\n
      \     Intended usage:      COMMON\n      Restrictions on usage:\n         This
      media type depends on RTP framing, and hence is only\n         defined for transfer
      via RTP [RFC3550].  Transport within other\n         framing protocols is not
      defined at this time.\n      Interoperability considerations:\n         The
      media subtype name contains \"SVC\" to avoid potential\n         conflict with
      RFC 3984 and its potential future replacement RTP\n         payload format for
      H.264 non-SVC profiles.\n      Applications that use this media type:\n         Real-time
      video applications like video streaming, video\n         telephony, and video
      conferencing.\n      Author:\n         Ye-Kui Wang, yekui.wang@huawei.com\n
      \     Change controller:\n         IETF Audio/Video Transport working group
      delegated from the\n         IESG.\n"
    title: 7.1.  Media Type Registration
  - contents:
    - '7.2.  SDP Parameters

      '
    - contents:
      - "7.2.1.  Mapping of Payload Type Parameters to SDP\n   The media type video/H264-SVC
        string is mapped to fields in the\n   Session Description Protocol (SDP) as
        follows:\n   o  The media name in the \"m=\" line of SDP MUST be video.\n
        \  o  The encoding name in the \"a=rtpmap\" line of SDP MUST be H264-SVC\n
        \     (the media subtype).\n   o  The clock rate in the \"a=rtpmap\" line
        MUST be 90000.\n   o  The OPTIONAL parameters profile-level-id, max-recv-level,
        max-\n      recv-base-level, max-mbps, max-fs, max-cpb, max-dpb, max-br,\n
        \     redundant-pic-cap, in-band-parameter-sets, packetization-mode,\n      sprop-interleaving-depth,
        deint-buf-cap, sprop-deint-buf-req,\n      sprop-init-buf-time, sprop-max-don-diff,
        max-rcmd-nalu-size, mst-\n      mode, sprop-mst-csdon-always-present, sprop-mst-remux-buf-size,\n
        \     sprop-remux-buf-req, remux-buf-cap, sprop-remux-init-buf-time,\n      sprop-mst-max-don-diff,
        and scalable-layer-id, when present, MUST\n      be included in the \"a=fmtp\"
        line of SDP.  These parameters are\n      expressed as a media type string,
        in the form of a semicolon-\n      separated list of parameter=value pairs.\n
        \  o  The OPTIONAL parameters sprop-parameter-sets, sprop-level-\n      parameter-sets,
        sprop-scalability-info, sprop-operation-point-\n      info, sprop-no-NAL-reordering-required,
        and sprop-avc-ready, when\n      present, MUST be included in the \"a=fmtp\"
        line of SDP or conveyed\n      using the \"fmtp\" source attribute as specified
        in Section 6.3 of\n      [RFC5576].  For a particular media format (i.e.,
        RTP payload\n      type), a sprop-parameter-sets or sprop-level-parameter-sets
        MUST\n      NOT be both included in the \"a=fmtp\" line of SDP and conveyed\n
        \     using the \"fmtp\" source attribute.  When included in the \"a=fmtp\"\n
        \     line of SDP, these parameters are expressed as a media type\n      string,
        in the form of a semicolon-separated list of\n      parameter=value pairs.
        \ When conveyed using the \"fmtp\" source\n      attribute, these parameters
        are only associated with the given\n      source and payload type as parts
        of the \"fmtp\" source attribute.\n            Informative note: Conveyance
        of sprop-parameter-sets and\n            sprop-level-parameter-sets using
        the \"fmtp\" source attribute\n            allows for out-of-band transport
        of parameter sets in\n            topologies like Topo-Video-switch-MCU [RFC5117].\n"
      title: 7.2.1.  Mapping of Payload Type Parameters to SDP
    - contents:
      - "7.2.2.  Usage with the SDP Offer/Answer Model\n   When an SVC stream (with
        media subtype H264-SVC) is offered over RTP\n   using SDP in an Offer/Answer
        model [RFC3264] for negotiation for\n   unicast usage, the following limitations
        and rules apply:\n   o  The parameters identifying a media format configuration
        for SVC\n      are profile-level-id, packetization-mode, and mst-mode.  These\n
        \     media configuration parameters (except for the level part of\n      profile-level-id)
        MUST be used symmetrically when the answerer\n      does not include scalable-layer-id
        in the answer; i.e., the\n      answerer MUST either maintain all configuration
        parameters or\n      remove the media format (payload type) completely, if
        one or more\n      of the parameter values are not supported.  Note that the
        level\n      part of profile-level-id includes level_idc, and, for indication\n
        \     of level 1b when profile_idc is equal to 66, 77, or 88, bit 4\n      (constraint_set3_flag)
        of profile-iop.  The level part of profile-\n      level-id is changeable.\n
        \        Informative note: The requirement for symmetric use does not\n         apply
        for the level part of profile-level-id, and does not\n         apply for the
        other stream properties and capability\n         parameters.\n         Informative
        note: In [H.264], all the levels except for Level\n         1b are equal to
        the value of level_idc divided by 10.  Level 1b\n         is a level higher
        than Level 1.0 but lower than Level 1.1, and\n         is signaled in an ad
        hoc manner.  For the Baseline, Main, and\n         Extended profiles (with
        profile_idc equal to 66, 77, and 88,\n         respectively), Level 1b is
        indicated by level_idc equal to 11\n         (i.e., the same as level 1.1)
        and constraint_set3_flag equal to\n         1.  For other profiles, Level
        1b is indicated by level_idc\n         equal to 9 (but note that Level 1b
        for these profiles is still\n         higher than Level 1, which has level_idc
        equal to 10, and lower\n         than Level 1.1).  In SDP Offer/Answer, an
        answer may indicate a\n         level equal to or lower than the level indicated
        in the offer.\n         Due to the ad hoc indication of Level 1b, offerers
        and\n         answerers must check the value of bit 4 (constraint_set3_flag)\n
        \        of the middle octet of the parameter profile-level-id, when\n         profile_idc
        is equal to 66, 77, or 88 and level_idc is equal to\n         11.\n      To
        simplify handling and matching of these configurations, the\n      same RTP
        payload type number used in the offer should also be used\n      in the answer,
        as specified in [RFC3264].  The same RTP payload\n      type number used in
        the offer MUST also be used in the answer when\n      the answer includes
        scalable-layer-id.  When the answer does not\n      include scalable-layer-id,
        the answer MUST NOT contain a payload\n      type number used in the offer
        unless the configuration is exactly\n      the same as in the offer or the
        configuration in the answer only\n      differs from that in the offer with
        a level lower than the default\n      level offered.\n         Informative
        note: When an offerer receives an answer that does\n         not include scalable-layer-id
        it has to compare payload types\n         not declared in the offer based
        on the media type (i.e.,\n         video/H264-SVC) and the above media configuration
        parameters\n         with any payload types it has already declared.  This
        will\n         enable it to determine whether the configuration in question
        is\n         new or if it is equivalent to configuration already offered,\n
        \        since a different payload type number may be used in the\n         answer.\n
        \     Since an SVC stream may contain multiple operation points, a\n      facility
        is provided so that an answerer can select a different\n      operation point
        than the entire SVC stream.  Specifically,\n      different operation points
        MAY be described using the sprop-\n      scalability-info or sprop-operation-point-info
        parameters.  The\n      first one carries the entire scalability information
        SEI message\n      defined in Annex G of [H.264], whereas the second one may
        be\n      derived, e.g., as a subset of this SEI message that only contains\n
        \     key information about an operation point.  Operation points, in\n      both
        cases, are associated with a layer identifier.\n      If such information
        (sprop-operation-point-info or sprop-\n      scalability-info) is provided
        in an offer, an answerer MAY select\n      from the various operation points
        offered in the sprop-\n      scalability-information or sprop-operation-point-info
        parameters\n      by including scalable-layer-id in the answer.  By this,
        the\n      answerer indicates its selection of a particular operation point\n
        \     in the received and/or in the sent stream.  When such operation\n      point
        selection takes place, i.e., the answerer includes scalable-\n      layer-id
        in the answer, the media configuration parameters MUST\n      NOT be present
        in the answer.  Rather, the media configuration\n      that the answerer will
        use for receiving and/or sending is the one\n      used for the selected operation
        point as indicated in the offer.\n         Informative note: The ability to
        perform operation point\n         selection enables a receiver to utilize
        the scalable nature of\n         an SVC stream.\n   o  The parameter max-recv-level,
        when present, declares the highest\n      level supported for receiving.  In
        case max-recv-level is not\n      present, the highest level supported for
        receiving is equal to the\n      default level indicated by the level part
        of profile-level-id.\n      max-recv-level, when present, MUST be higher than
        the default\n      level.\n   o  The parameter max-recv-base-level, when present,
        declares the\n      highest level of the base layer supported for receiving.
        \ When\n      max-recv-base-level is not present, the highest level supported\n
        \     for the base layer is not constrained separately from the SVC\n      stream
        containing the base layer.  The endpoint at the other side\n      MUST NOT
        send a scalable stream for which the base layer is of a\n      level higher
        than max-recv-base-level.  Parameters declaring\n      receiver capabilities
        above the default level (max-mbps, max-\n      smbps, max-fs, max-cpb, max-dpb,
        max-br, and max-recv-level) do\n      not apply to the base layer when max-recv-base-level
        is present.\n   o  The parameters sprop-deint-buf-req, sprop-interleaving-depth,\n
        \     sprop-max-don-diff, sprop-init-buf-time, sprop-mst-csdon-always-\n      present,
        sprop-remux-buf-req, sprop-mst-remux-buf-size, sprop-\n      remux-init-buf-time,
        sprop-mst-max-don-diff, sprop-scalability-\n      information, sprop-operation-point-info,
        sprop-no-NAL-reordering-\n      required, and sprop-avc-ready describe the
        properties of the NAL\n      unit stream that the offerer or answerer is sending
        for the media\n      format configuration.  This differs from the normal usage
        of the\n      Offer/Answer parameters: normally such parameters declare the\n
        \     properties of the stream that the offerer or the answerer is able\n
        \     to receive.  When dealing with SVC, the offerer assumes that the\n      answerer
        will be able to receive media encoded using the\n      configuration being
        offered.\n         Informative note: The above parameters apply for any stream\n
        \        sent by the declaring entity with the same configuration; i.e.,\n
        \        they are dependent on their source.  Rather than being bound to\n
        \        the payload type, the values may have to be applied to another\n
        \        payload type when being sent, as they apply for the\n         configuration.\n
        \  o  The capability parameters max-mbps, max-fs, max-cpb, max-dpb, max-\n
        \     br, redundant-pic-cap, and max-rcmd-nalu-size MAY be used to\n      declare
        further capabilities of the offerer or answerer for\n      receiving.  These
        parameters MUST NOT be present when the\n      direction attribute is sendonly,
        and the parameters describe the\n      limitations of what the offerer or
        answerer accepts for receiving\n      streams.\n   o  When mst-mode is not
        present and packetization-mode is equal to 2,\n      the following applies.\n
        \     o  An offerer has to include the size of the de-interleaving\n         buffer,
        sprop-deint-buf-req, in the offer.  To enable the\n         offerer and answerer
        to inform each other about their\n         capabilities for de-interleaving
        buffering, both parties are\n         RECOMMENDED to include deint-buf-cap.
        \ It is also RECOMMENDED\n         to consider offering multiple payload types
        with different\n         buffering requirements when the capabilities of the
        receiver\n         are unknown.\n   o  When mst-mode is present and equal
        to \"NI-C\", \"NI-TC\", or \"I-C\",\n      the following applies.\n      o
        \ An offerer has to include sprop-remux-buf-req in the offer.  To\n         enable
        the offerer and answerer to inform each other about\n         their capabilities
        for re-multiplexing buffering, both parties\n         are RECOMMENDED to include
        remux-buf-cap.  It is also\n         RECOMMENDED to consider offering multiple
        payload types with\n         different buffering requirements when the capabilities
        of the\n         receiver are unknown.\n   o  The sprop-parameter-sets or
        sprop-level-parameter-sets parameter,\n      when present (included in the
        \"a=fmtp\" line of SDP or conveyed\n      using the \"fmtp\" source attribute
        as specified in Section 6.3 of\n      [RFC5576]), is used for out-of-band
        transport of parameter sets.\n      However, when out-of-band transport of
        parameter sets is used,\n      parameter sets MAY still be additionally transported
        in-band.\n      The answerer MAY use either out-of-band or in-band transport
        of\n      parameter sets for the stream it is sending, regardless of whether\n
        \     out-of-band parameter sets transport has been used in the offerer-\n
        \     to-answerer direction.  Parameter sets included in an answer are\n      independent
        of those parameter sets included in the offer, as they\n      are used for
        decoding two different video streams, one from the\n      answerer to the
        offerer, and the other in the opposite direction.\n      The following rules
        apply to transport of parameter sets in the\n      offerer-to-answerer direction.\n
        \     o  An offer MAY include either or both of sprop-parameter- sets\n         and
        sprop-level-parameter-sets.  If neither sprop-parameter-\n         sets nor
        sprop-level-parameter-sets is present in the offer,\n         then only in-band
        transport of parameter sets is used.\n      o  If the answer includes in-band-parameter-sets
        equal to 1, then\n         the offerer MUST transmit parameter sets in-band.
        \ Otherwise,\n         the following applies.\n         o  If the level to
        use in the offerer-to-answerer direction is\n            equal to the default
        level in the offer, the following\n            applies.\n               The
        answerer MUST be prepared to use the parameter sets\n               included
        in sprop-parameter-sets, when present, for\n               decoding the incoming
        NAL unit stream, and ignore sprop-\n               level-parameter-sets, when
        present.\n               When sprop-parameter-sets is not present in the offer,\n
        \              in-band transport of parameter sets MUST be used.\n         o
        \ Otherwise (the level to use in the offerer-to-answerer\n            direction
        is not equal to the default level in the offer),\n            the following
        applies.\n               The answerer MUST be prepared to use the parameter
        sets\n               that are included in sprop-level-parameter-sets for the\n
        \              accepted level (i.e., the default level in the answer,\n               which
        is also the level to use in the offerer-to-answerer\n               direction),
        when present, for decoding the incoming NAL\n               unit stream, and
        ignore all other parameter sets included\n               in sprop-level-parameter-sets
        and sprop-parameter-sets,\n               when present.\n               When
        no parameter sets for the accepted level are present\n               in the
        sprop-level-parameter-sets, in-band transport of\n               parameter
        sets MUST be used.\n      The following rules apply to transport of parameter
        sets in the\n      answerer-to-offerer direction.\n      o  An answer MAY
        include either sprop-parameter-sets or sprop-\n         level-parameter-sets,
        but MUST NOT include both of the two.  If\n         neither sprop-parameter-sets
        nor sprop-level-parameter-sets is\n         present in the answer, then only
        in-band transport of parameter\n         sets is used.\n      o  If the offer
        includes in-band-parameter-sets equal to 1, then\n         the answerer MUST
        NOT include sprop-parameter-sets or sprop-\n         level-parameter-sets
        in the answer and MUST transmit parameter\n         sets in-band.  Otherwise,
        the following applies.\n         o  If the level to use in the answerer-to-offerer
        direction is\n            equal to the default level in the answer, the following\n
        \           applies.\n               The offerer MUST be prepared to use the
        parameter sets\n               included in sprop-parameter-sets, when present,
        for\n               decoding the incoming NAL unit stream, and ignore sprop-\n
        \              level-parameter-sets, when present.\n               When sprop-parameter-sets
        is not present in the answer,\n               the answerer MUST transmit parameter
        sets in-band.\n         o  Otherwise (the level to use in the answerer-to-offerer\n
        \           direction is not equal to the default level in the answer),\n
        \           the following applies.\n               The offerer MUST be prepared
        to use the parameter sets\n               that are included in sprop-level-parameter-sets
        for the\n               level to use in the answerer-to-offerer direction,
        when\n               present in the answer, for decoding the incoming NAL
        unit\n               stream, and ignore all other parameter sets included
        in\n               sprop-level-parameter-sets and sprop-parameter-sets, when\n
        \              present in the answer.\n               When no parameter sets
        for the level to use in the\n               answerer-to-offerer direction
        are present in sprop-level-\n               parameter-sets in the answer,
        the answerer MUST transmit\n               parameter sets in-band.\n      When
        sprop-parameter-sets or sprop-level-parameter-sets is\n      conveyed using
        the \"fmtp\" source attribute as specified in Section\n      6.3 of [RFC5576],
        the receiver of the parameters MUST store the\n      parameter sets included
        in the sprop-parameter-sets or sprop-\n      level-parameter-sets for the
        accepted level and associate them to\n      the source given as a part of
        the \"fmtp\" source attribute.\n      Parameter sets associated with one source
        MUST only be used to\n      decode NAL units conveyed in RTP packets from
        the same source.\n      When this mechanism is in use, SSRC collision detection
        and\n      resolution MUST be performed as specified in [RFC5576].\n         Informative
        note: Conveyance of sprop-parameter-sets and sprop-\n         level-parameter-sets
        using the \"fmtp\" source attribute may be\n         used in topologies like
        Topo-Video-switch-MCU [RFC5117] to\n         enable out-of-band transport
        of parameter sets.\n   For streams being delivered over multicast, the following
        rules\n   apply:\n   o  The media format configuration is identified by profile-level-
        id,\n      including the level part, packetization-mode, and mst-mode.  These\n
        \     media format configuration parameters (including the level part of\n
        \     profile-level-id) MUST be used symmetrically; i.e., the answerer\n      MUST
        either maintain all configuration parameters or remove the\n      media format
        (payload type) completely.  Note that this implies\n      that the level part
        of profile-level-id for Offer/Answer in\n      multicast is not changeable.\n
        \     To simplify handling and matching of these configurations, the\n      same
        RTP payload type number used in the offer should also be used\n      in the
        answer, as specified in [RFC3264].  An answer MUST NOT\n      contain a payload
        type number used in the offer unless the\n      configuration is the same
        as in the offer.\n   o  Parameter sets received MUST be associated with the
        originating\n      source, and MUST be only used in decoding the incoming
        NAL unit\n      stream from the same source.\n   o  The rules for other parameters
        are the same as above for unicast\n      as long as the above rules are obeyed.\n
        \  Table 14 lists the interpretation of all the parameters that MUST be\n
        \  used for the various combinations of offer, answer, and direction\n   attributes.
        \ Note that the two columns wherein the scalable-layer-id\n   parameter is
        used only apply to answers, whereas the other columns\n   apply to both offers
        and answers.\n   Table 14.  Interpretation of parameters for various combinations
        of\n   offers, answers, direction attributes, with and without scalable-\n
        \  layer-id.  Columns that do not indicate offer or answer apply to\n   both.\n
        \                                      sendonly --+\n          answer: recvonly,scalable-layer-id
        --+  |\n           recvonly w/o scalable-layer-id --+  |  |\n   answer: sendrecv,
        scalable-layer-id --+  |  |  |\n     sendrecv w/o scalable-layer-id --+  |
        \ |  |  |\n                                      |  |  |  |  |\n   profile-level-id
        \                  C  X  C  X  P\n   max-recv-level                     R
        \ R  R  R  -\n   max-recv-base-level                R  R  R  R  -\n   packetization-mode
        \                C  X  C  X  P\n   mst-mode                           C  X
        \ C  X  P\n   sprop-avc-ready                    P  P  -  -  P\n   sprop-deint-buf-req
        \               P  P  -  -  P\n   sprop-init-buf-time                P  P
        \ -  -  P\n   sprop-interleaving-depth           P  P  -  -  P\n   sprop-max-don-diff
        \                P  P  -  -  P\n   sprop-mst-csdon-always-present     P  P
        \ -  -  P\n   sprop-mst-max-don-diff             P  P  -  -  P\n   sprop-mst-remux-buf-size
        \          P  P  -  -  P\n   sprop-no-NAL-reordering-required   P  P  -  -
        \ P\n   sprop-operation-point-info         P  P  -  -  P\n   sprop-remux-buf-req
        \               P  P  -  -  P\n   sprop-remux-init-buf-time          P  P
        \ -  -  P\n   sprop-scalability-info             P  P  -  -  P\n   deint-buf-cap
        \                     R  R  R  R  -\n   max-br                             R
        \ R  R  R  -\n   max-cpb                            R  R  R  R  -\n   max-dpb
        \                           R  R  R  R  -\n   max-fs                             R
        \ R  R  R  -\n   max-mbps                           R  R  R  R  -\n   max-rcmd-nalu-size
        \                R  R  R  R  -\n   redundant-pic-cap                  R  R
        \ R  R  -\n   remux-buf-cap                      R  R  R  R  -\n   in-band-parameter-sets
        \            R  R  R  R  -\n   sprop-parameter-sets               S  S  -
        \ -  S\n   sprop-level-parameter-sets         S  S  -  -  S\n   scalable-layer-id
        \                 X  O  X  O  -\n   Legend:\n   C: configuration for sending
        and receiving streams\n   P: properties of the stream to be sent\n   R: receiver
        capabilities\n   S: out-of-band parameter sets\n   O: operation point selection\n
        \  X: MUST NOT be present\n   -: not usable, when present SHOULD be ignored\n
        \  Parameters used for declaring receiver capabilities are in general\n   downgradable;
        i.e., they express the upper limit for a sender's\n   possible behavior.  Thus,
        a sender MAY select to set its encoder\n   using only lower/lesser or equal
        values of these parameters.\n   Parameters declaring a configuration point
        are not changeable, with\n   the exception of the level part of the profile-level-id
        parameter for\n   unicast usage.  This expresses values a receiver expects
        to be used\n   and must be used verbatim on the sender side.  If level downgrading\n
        \  (for profile-level-id) is used, an answerer MUST NOT include the\n   scalable-layer-id
        parameter.\n   When a sender's capabilities are declared, and non-downgradable\n
        \  parameters are used in this declaration, then these parameters\n   express
        a configuration that is acceptable for the sender to receive\n   streams.
        \ In order to achieve high interoperability levels, it is\n   often advisable
        to offer multiple alternative configurations, e.g.,\n   for the packetization
        mode.  It is impossible to offer multiple\n   configurations in a single payload
        type.  Thus, when multiple\n   configuration offers are made, each offer requires
        its own RTP\n   payload type associated with the offer.\n   A receiver SHOULD
        understand all media type parameters, even if it\n   only supports a subset
        of the payload format's functionality.  This\n   ensures that a receiver is
        capable of understanding when an offer to\n   receive media can be downgraded
        to what is supported by the receiver\n   of the offer.\n   An answerer MAY
        extend the offer with additional media format\n   configurations.  However,
        to enable their usage, in most cases a\n   second offer is required from the
        offerer to provide the stream\n   property parameters that the media sender
        will use.  This also has\n   the effect that the offerer has to be able to
        receive this media\n   format configuration, not only to send it.\n   If an
        offerer wishes to have non-symmetric capabilities between\n   sending and
        receiving, the offerer can allow asymmetric levels via\n   level-asymmetry-allowed
        equal to 1.  Alternatively, the offerer can\n   offer different RTP sessions,
        i.e., different media lines declared as\n   \"recvonly\" and \"sendonly\",
        respectively.  This may have further\n   implications on the system, and may
        require additional external\n   semantics to associate the two media lines.\n"
      title: 7.2.2.  Usage with the SDP Offer/Answer Model
    - contents:
      - "7.2.3.  Dependency Signaling in Multi-Session Transmission\n   If MST is
        used, the rules on signaling media decoding dependency in\n   SDP as defined
        in [RFC5583] apply.  The rules on \"hierarchical or\n   layered encoding\"
        with multicast in Section 5.7 of [RFC4566] do not\n   apply, i.e., the notation
        for Connection Data \"c=\" SHALL NOT be used\n   with more than one address.
        \ Additionally, the order of dependencies\n   of the RTP sessions indicated
        by the \"a=depend\" attribute as defined\n   in [RFC5583] MUST represent the
        decoding order of the VC) NAL units\n   in an access unit, i.e., the order
        of session dependency is given\n   from the base or the lowest enhancement
        RTP session (the most\n   important) to the highest enhancement RTP session
        (the least\n   important).\n"
      title: 7.2.3.  Dependency Signaling in Multi-Session Transmission
    - contents:
      - "7.2.4.  Usage in Declarative Session Descriptions\n   When SVC over RTP is
        offered with SDP in a declarative style, as in\n   Real Time Streaming Protocol
        (RTSP) [RFC2326] or Session Announcement\n   Protocol (SAP) [RFC2974], the
        following considerations are necessary.\n   o  All parameters capable of indicating
        both stream properties and\n      receiver capabilities are used to indicate
        only stream properties.\n      For example, in this case, the parameter profile-level-id
        declares\n      the values used by the stream, not the capabilities for receiving\n
        \     streams.  This results in that the following interpretation of the\n
        \     parameters MUST be used:\n      Declaring actual configuration or stream
        properties:\n         - profile-level-id\n         - packetization-mode\n
        \        - mst-mode\n         - sprop-deint-buf-req\n         - sprop-interleaving-depth\n
        \        - sprop-max-don-diff\n         - sprop-init-buf-time\n         -
        sprop-mst-csdon-always-present\n         - sprop-mst-remux-buf-size\n         -
        sprop-remux-buf-req\n         - sprop-remux-init-buf-time\n         - sprop-mst-max-don-diff\n
        \        - sprop-scalability-info\n         - sprop-operation-point-info\n
        \        - sprop-no-NAL-reordering-required\n         - sprop-avc-ready\n
        \     Out-of-band transporting of parameter sets:\n         - sprop-parameter-sets\n
        \        - sprop-level-parameter-sets\n      Not usable (when present, they
        SHOULD be ignored):\n         - max-mbps\n         - max-fs\n         - max-cpb\n
        \        - max-dpb\n         - max-br\n         - max-recv-level\n         -
        max-recv-base-level\n         - redundant-pic-cap\n         - max-rcmd-nalu-size\n
        \        - deint-buf-cap\n         - remux-buf-cap\n         - scalable-layer-id\n
        \  o  A receiver of the SDP is required to support all parameters and\n      values
        of the parameters provided; otherwise, the receiver MUST\n      reject (RTSP)
        or not participate in (SAP) the session.  It falls\n      on the creator of
        the session to use values that are expected to\n      be supported by the
        receiving application.\n"
      title: 7.2.4.  Usage in Declarative Session Descriptions
    title: 7.2.  SDP Parameters
  - contents:
    - "7.3.  Examples\n   In the following examples, \"{data}\" is used to indicate
      a data string\n   encoded as base64.\n"
    - contents:
      - "7.3.1.  Example for Offering a Single SVC Session\n   Example 1: The offerer
        offers one video media description including\n   two RTP payload types.  The
        first payload type offers H264, and the\n   second offers H264-SVC.  Both
        payload types have different fmtp\n   parameters as profile-level-id, packetization-mode,
        and sprop-\n   parameter-sets.\n      Offerer -> Answerer SDP message:\n      m=video
        20000 RTP/AVP 97 96\n      a=rtpmap:96 H264/90000\n      a=fmtp:96 profile-level-id=4de00a;
        packetization-mode=0;\n       sprop-parameter-sets={sps0},{pps0};\n      a=rtpmap:97
        H264-SVC/90000\n      a=fmtp:97 profile-level-id=53000c; packetization-mode=1;\n
        \      sprop-parameter-sets={sps0},{pps0},{sps1},{pps1};\n   If the answerer
        does not support media subtype H264-SVC, it can issue\n   an answer accepting
        only the base layer offer (payload type 96).  In\n   the following example,
        the receiver supports H264-SVC, so it lists\n   payload type 97 first as the
        preferred option.\n      Answerer -> Offerer SDP message:\n      m=video 40000
        RTP/AVP 97 96\n      a=rtpmap:96 H264/90000\n      a=fmtp:96 profile-level-id=4de00a;
        packetization-mode=0;\n       sprop-parameter-sets={sps2},{pps2};\n      a=rtpmap:97
        H264-SVC/90000\n      a=fmtp:97 profile-level-id=53000c; packetization-mode=1;\n
        \      sprop-parameter-sets={sps2},{pps2},{sps3},{pps3};\n"
      title: 7.3.1.  Example for Offering a Single SVC Session
    - contents:
      - "7.3.2.  Example for Offering a Single SVC Session Using\n        scalable-layer-id\n
        \  Example 2: Offerer offers the same media configurations as shown in\n   the
        example above for receiving and sending the stream, but using a\n   single
        RTP payload type and including sprop-operation-point-info.\n      Offerer
        -> Answerer SDP message:\n      m=video 20000 RTP/AVP 97\n      a=rtpmap:97
        H264-SVC/90000\n      a=fmtp:97 profile-level-id=53000c; packetization-mode=1;\n
        \      sprop-parameter-sets={sps0},{sps1},{pps0},{pps1};\n       sprop-operation-point-info=<1,0,0,0,4de00a,3200,176,144,128,\n
        \     256>,<2,1,1,0,53000c,6400,352,288,256,512>;\n   In this example, the
        receiver supports H264-SVC and chooses the lower\n   operation point offered
        in the RTP payload type for sending and\n   receiving the stream.\n      Answerer
        -> Offerer SDP message:\n      m=video 40000 RTP/AVP 97\n      a=rtpmap:97
        H264-SVC/90000\n      a=fmtp:97 sprop-parameter-sets={sps2},{sps3},{pps2},{pps3};\n
        \      scalable-layer-id=1;\n   In an equivalent example showing the use of
        sprop-scalability-info\n   instead using the sprop-operation-point-info, the
        sprop-operation-\n   point-info would be exchanged by the sprop-scalability-info
        followed\n   by the binary (base16) representation of the Scalability Information\n
        \  SEI message.\n"
      title: 7.3.2.  Example for Offering a Single SVC Session Using
    - contents:
      - "7.3.3.  Example for Offering Multiple Sessions in MST\n   Example 3: In this
        example, the offerer offers a multi-session\n   transmission with up to three
        sessions.  The base session media\n   description includes payload types that
        are backward compatible with\n   [RFC6184], and three different payload types
        are offered.  The other\n   two media are using payload types with media subtype
        H264-SVC.  In\n   each media description, different values of profile-level-id,\n
        \  packetization-mode, mst-mode, and sprop-parameter-sets are offered.\n      Offerer
        -> Answerer SDP message:\n      a=group:DDP L1 L2 L3\n      m=video 20000
        RTP/AVP 96 97 98\n      a=rtpmap:96 H264/90000\n      a=fmtp:96 profile-level-id=4de00a;
        packetization-mode=0;\n       mst-mode=NI-T; sprop-parameter-sets={sps0},{pps0};\n
        \     a=rtpmap:97 H264/90000\n      a=fmtp:97 profile-level-id=4de00a; packetization-mode=1;\n
        \      mst-mode=NI-TC; sprop-parameter-sets={sps0},{pps0};\n      a=rtpmap:98
        H264/90000\n      a=fmtp:98 profile-level-id=4de00a; packetization-mode=2;\n
        \      mst-mode=I-C; init-buf-time=156320;\n       sprop-parameter-sets={sps0},{pps0};\n
        \     a=mid:L1\n      m=video 20002 RTP/AVP 99 100\n      a=rtpmap:99 H264-SVC/90000\n
        \     a=fmtp:99 profile-level-id=53000c; packetization-mode=1;\n       mst-mode=NI-T;
        sprop-parameter-sets={sps1},{pps1};\n      a=rtpmap:100 H264-SVC/90000\n      a=fmtp:100
        profile-level-id=53000c; packetization-mode=2;\n       mst-mode=I-C; sprop-parameter-sets={sps1},{pps1};\n
        \     a=mid:L2\n      a=depend:99 lay L1:96,97; 100 lay L1:98\n      m=video
        20004 RTP/AVP 101\n      a=rtpmap:101 H264-SVC/90000\n      a=fmtp:101 profile-level-id=53001F;
        packetization-mode=1;\n       mst-mode=NI-T; sprop-parameter-sets={sps2},{pps2};\n
        \     a=mid:L3\n      a=depend:101 lay L1:96,97 L2:99\n   It is assumed that
        in this example the answerer only supports the NI-\n   T mode for multi-session
        transmission.  For this reason, it chooses\n   the corresponding payload type
        (96) for the base RTP session.  For\n   the two enhancement RTP sessions,
        the answerer also chooses the\n   payload types that use the NI-T mode (99
        and 101).\n      Answerer -> Offerer SDP message:\n      a=group:DDP L1 L2
        L3\n      m=video 40000 RTP/AVP 96\n      a=rtpmap:96 H264/90000\n      a=fmtp:96
        profile-level-id=4de00a; packetization-mode=0;\n       mst-mode=NI-T; sprop-parameter-sets={sps3},{pps3};\n
        \     a=mid:L1\n      m=video 40002 RTP/AVP 99\n      a=rtpmap:99 H264-SVC/90000\n
        \     a=fmtp:99 profile-level-id=53000c; packetization-mode=1;\n       mst-mode=NI-T;
        sprop-parameter-sets={sps4},{pps4};\n      a=mid:L2\n      a=depend:99 lay
        L1:96\n      m=video 40004 RTP/AVP 101\n      a=rtpmap:101 H264-SVC/90000\n
        \     a=fmtp:101 profile-level-id=53001F; packetization-mode=1;\n       mst-mode=NI-T;
        sprop-parameter-sets={sps5},{pps5};\n      a=mid:L3\n      a=depend:101 lay
        L1:96 L2:99\n"
      title: 7.3.3.  Example for Offering Multiple Sessions in MST
    - contents:
      - "7.3.4.  Example for Offering Multiple Sessions in MST Including\n        Operation
        with Answerer Using scalable-layer-id\n   Example 4: In this example, the
        offerer offers a multi-session\n   transmission of three layers with up to
        two sessions.  The base\n   session media description has a payload type that
        is backward\n   compatible with [RFC6184].  Note that no parameter sets are
        provided,\n   in which case in-band transport must be used.  The other media\n
        \  description contains two enhancement layers and uses the media\n   subtype
        H264-SVC.  It includes two operation point definitions.\n      Offerer ->
        Answerer SDP message:\n      a=group:DDP L1 L2\n      m=video 20000 RTP/AVP
        96\n      a=rtpmap:96 H264/90000\n      a=fmtp:96 profile-level-id=4de00a;
        packetization-mode=0;\n       mst-mode=NI-T;\n      a=mid:L1\n      m=video
        20002 RTP/AVP 97\n      a=rtpmap:97 H264-SVC/90000\n      a=fmtp:97 profile-level-id=53001F;
        packetization-mode=1;\n       mst-mode=NI-TC; sprop-operation-point-info=<2,0,1,0,53000c,\n
        \     3200,352,288,384,512>,<3,1,2,0,53001F,6400,704,576,768,1024>;\n      a=mid:L2\n
        \     a=depend:97 lay L1:96\n   It is assumed that the answerer wants to send
        and receive the base\n   layer (payload type 96), but it only wants to send
        and receive the\n   lower enhancement layer, i.e., the one with layer id equal
        to 2.  For\n   this reason, the response will include the selection of the
        desired\n   layer by setting scalable-layer-id equal to 2.  Note that the
        answer\n   only includes the scalable-layer-id information.  The answer could\n
        \  include sprop-parameter-sets in the response.\n      Answerer -> Offerer
        SDP message:\n      a=group:DDP L1 L2\n      m=video 40000 RTP/AVP 96\n      a=rtpmap:96
        H264/90000\n      a=fmtp:96 profile-level-id=4de00a; packetization-mode=0;\n
        \      mst-mode=NI-T;\n      a=mid:L1\n      m=video 40002 RTP/AVP 97\n      a=rtpmap:97
        H264-SVC/90000\n      a=fmtp:97 scalable-layer-id=2;\n      a=mid:L2\n      a=depend:97
        lay L1:96\n"
      title: 7.3.4.  Example for Offering Multiple Sessions in MST Including
    - contents:
      - "7.3.5.  Example for Negotiating an SVC Stream with a Constrained Base\n        Layer
        in SST\n   Example 5: The offerer (Alice) offers one video description including\n
        \  two RTP payload types with differing levels and packetization modes.\n
        \     Offerer -> Answerer SDP message:\n      m=video 20000 RTP/AVP 97 96\n
        \     a=rtpmap:96 H264-SVC/90000\n      a=fmtp:96 profile-level-id=53001e;
        packetization-mode=0;\n      a=rtpmap:97 H264-SVC/90000\n      a=fmtp:97 profile-level-id=53001f;
        packetization-mode=1;\n   The answerer (Bridge) chooses packetization mode
        1, and indicates\n   that it would receive an SVC stream with the base layer
        being\n   constrained.\n      Answerer -> Offerer SDP message:\n      m=video
        40000 RTP/AVP 97\n      a=rtpmap:97 H264-SVC/90000\n      a=fmtp:97 profile-level-id=53001f;
        packetization-mode=1;\n        max-recv-base-level=000d\n   The answering
        endpoint must send an SVC stream at Level 3.1.  Since\n   the offering endpoint
        did not declare max-recv-base-level, the base\n   layer of the SVC stream
        the answering endpoint must send is not\n   specifically constrained.  The
        offering endpoint (Alice) must send an\n   SVC stream at Level 3.1, for which
        the base layer must be of a level\n   not higher than Level 1.3.\n"
      title: 7.3.5.  Example for Negotiating an SVC Stream with a Constrained Base
    title: 7.3.  Examples
  - contents:
    - "7.4.  Parameter Set Considerations\n   Section 8.4 of [RFC6184] applies in
      this memo, with the following\n   applies additionally for multi-session transmission
      (MST).\n   In MST, regardless of out-of-band or in-band transport of parameter\n
      \  sets are in use, parameter sets required for decoding NAL units\n   carried
      in one particular RTP session SHOULD be carried in the same\n   session, MAY
      be carried in a session that the particular RTP session\n   depends on, and
      MUST NOT be carried in a session that the particular\n   RTP session does not
      depend on.\n"
    title: 7.4.  Parameter Set Considerations
  title: 7.  Payload Format Parameters
- contents:
  - "8.  Security Considerations\n   The security considerations of the RTP Payload
    Format for H.264 Video\n   specification [RFC6184] apply.  Additionally, the following
    applies.\n   Decoders MUST exercise caution with respect to the handling of\n
    \  reserved NAL unit types and reserved SEI messages, particularly if\n   they
    contain active elements, and MUST restrict their domain of\n   applicability to
    the presentation containing the stream.  The safest\n   way is to simply discard
    these NAL units and SEI messages.\n   When integrity protection is applied to
    a stream, care MUST be taken\n   that the stream being transported may be scalable;
    hence a receiver\n   may be able to access only part of the entire stream.\n   End-to-end
    security with either authentication, integrity, or\n   confidentiality protection
    will prevent a MANE from performing media-\n   aware operations other than discarding
    complete packets.  And in the\n   case of confidentiality protection it will even
    be prevented from\n   performing discarding of packets in a media-aware way.  To
    allow any\n   MANE to perform its operations, it will be required to be a trusted\n
    \  entity that is included in the security context establishment.  This\n   applies
    both for the media path and for the RTCP path, if RTCP\n   packets need to be
    rewritten.\n"
  title: 8.  Security Considerations
- contents:
  - "9.  Congestion Control\n   Within any given RTP session carrying payload according
    to this\n   specification, the provisions of Section 10 of [RFC6184] apply.\n
    \  Reducing the session bitrate is possible by one or more of the\n   following
    means:\n   a) Within the highest layer identified by the DID field remove any\n
    \     NAL units with QID higher than a certain value.\n   b) Remove all NAL units
    with TID higher than a certain value.\n   c) Remove all NAL units associated with
    a DID higher than a certain\n      value.\n         Informative note: Removal
    of all coded slice NAL units\n         associated with DIDs higher than a certain
    value in the entire\n         stream is required in order to preserve conformance
    of the\n         resulting SVC stream.\n   d) Utilize the PRID field to indicate
    the relative importance of NAL\n      units, and remove all NAL units associated
    with a PRID higher than\n      a certain value.  Note that the use of the PRID
    is application-\n      specific.\n   e) Remove NAL units or entire packets according
    to application-\n      specific rules.  The result will depend on the particular
    coding\n      structure used as well as any additional application-specific\n
    \     functionality (e.g., concealment performed at the receiving\n      decoder).
    \ In general, this will result in the reception of a non-\n      conforming bitstream
    and hence the decoder behavior is not\n      specified by [H.264].  Significant
    artifacts may therefore appear\n      in the decoded output if the particular
    decoder implementation\n      does not take appropriate action in response to
    congestion\n      control.\n      Informative note: The discussion above is centered
    on NAL units\n      rather than packets, primarily because that is the level where\n
    \     senders can meaningfully manipulate the scalable bitstream.  The\n      mapping
    of NAL units to RTP packets is fairly flexible when using\n      aggregation packets.
    \ Depending on the nature of the congestion\n      control algorithm, the \"dimension\"
    of congestion measurement\n      (packet count or bitrate) and reaction to it
    (reducing packet\n      count or bitrate or both) can be adjusted accordingly.\n
    \  All aforementioned means are available to the RTP sender, regardless\n   of
    whether that sender is located in the sending endpoint or in a\n   mixer-based
    MANE.\n   When a translator-based MANE is employed, then the MANE MAY\n   manipulate
    the session only on the MANE's outgoing path, so that the\n   sensed end-to-end
    congestion falls within the permissible envelope.\n   As with all translators,
    in this case, the MANE needs to rewrite RTCP\n   RRs to reflect the manipulations
    it has performed on the session.\n      Informative note: Applications MAY also
    implement, in addition or\n      separately, other congestion control mechanisms,
    e.g., as\n      described in [RFC5775] and [Yan].\n"
  title: 9.  Congestion Control
- contents:
  - "10.  IANA Considerations\n   A new media type, as specified in Section 7.1 of
    this memo, has been\n   registered with IANA.\n"
  title: 10.  IANA Considerations
- contents:
  - '11.  Informative Appendix: Application Examples

    '
  - contents:
    - "11.1.  Introduction\n   Scalable video coding is a concept that has been around
      since at\n   least MPEG-2 [MPEG2], which goes back as early as 1993.\n   Nevertheless,
      it has never gained wide acceptance, perhaps partly\n   because applications
      didn't materialize in the form envisioned during\n   standardization.\n   ISO/IEC
      MPEG and ITU-T VCEG, respectively, performed a requirement\n   analysis for
      the SVC project.  The MPEG and VCEG requirement\n   documents are available
      in [JVT-N026] and [JVT-N027], respectively.\n   The following introduces four
      main application scenarios that the\n   authors consider relevant and that are
      implementable with this\n   specification.\n"
    title: 11.1.  Introduction
  - contents:
    - "11.2.  Layered Multicast\n   This well-understood form of the use of layered
      coding [McCanne]\n   implies that all layers are individually conveyed in their
      own RTP\n   packet streams, each carried in its own RTP session using the IP\n
      \  (multicast) address and port number as the single demultiplexing\n   point.
      \ Receivers \"tune\" into the layers by subscribing to the IP\n   multicast,
      normally by using IGMP [IGMP].  Depending on the\n   application scenario, it
      is also possible to convey a number of\n   layers in one RTP session, when finer
      operation points within the\n   subset of layers are not needed.\n   Layered
      multicast has the great advantage of simplicity and easy\n   implementation.
      \ However, it has also the great disadvantage of\n   utilizing many different
      transport addresses.  While the authors\n   consider this not to be a major
      problem for a professionally\n   maintained content server, receiving client
      endpoints need to open\n   many ports to IP multicast addresses in their firewalls.
      \ This is a\n   practical problem from a firewall and network address translation\n
      \  (NAT) viewpoint.  Furthermore, even today IP multicast is not as\n   widely
      deployed as many wish.\n   The authors consider layered multicast an important
      application\n   scenario for the following reasons.  First, it is well understood
      and\n   the implementation constraints are well known.  Second, there may\n
      \  well be large-scale IP networks outside the immediate Internet\n   context
      that may wish to employ layered multicast in the future.  One\n   possible example
      could be a combination of content creation and core-\n   network distribution
      for the various mobile TV services, e.g., those\n   being developed by 3GPP
      (MBMS) [MBMS] and DVB (DVB-H) [DVB-H].\n"
    title: 11.2.  Layered Multicast
  - contents:
    - "11.3.  Streaming\n   In this scenario, a streaming server has a repository
      of stored SVC\n   coded layers for a given content.  At the time of streaming,
      and\n   according to the capabilities, connectivity, and congestion situation\n
      \  of the client(s), the streaming server generates and serves a\n   scalable
      stream.  Both unicast and multicast serving is possible.  At\n   the same time,
      the streaming server may use the same repository of\n   stored layers to compose
      different streams (with a different set of\n   layers) intended for other audiences.\n
      \  As every endpoint receives only a single SVC RTP session, the number\n   of
      firewall pinholes can be optimized to one.\n   The main difference between this
      scenario and straightforward\n   simulcasting lies in the architecture and the
      requirements of the\n   streaming server, and is therefore out of the scope
      of IETF\n   standardization.  However, compelling arguments can be made why
      such\n   a streaming server design makes sense.  One possible argument is\n
      \  related to storage space and channel bandwidth.  Another is bandwidth\n   adaptability
      without transcoding -- a considerable advantage in a\n   congestion controlled
      network.  When the streaming server learns\n   about congestion, it can reduce
      the sending bitrate by choosing fewer\n   layers when composing the layered
      stream; see Section 9.  SVC is\n   designed to gracefully support both bandwidth
      ramp-down and bandwidth\n   ramp-up with a considerable dynamic range.  This
      payload format is\n   designed to allow for bandwidth flexibility in the mentioned
      sense.\n   While, in theory, a transcoding step could achieve a similar dynamic\n
      \  range, the computational demands are impractically high and video\n   quality
      is typically lowered -- therefore, few (if any) streaming\n   servers implement
      full transcoding.\n"
    title: 11.3.  Streaming
  - contents:
    - "11.4.  Videoconferencing (Unicast to MANE, Unicast to Endpoints)\n   Videoconferencing
      has traditionally relied on Multipoint Control\n   Units (MCUs).  These units
      connect endpoints in a star configuration\n   and operate as follows.  Coded
      video is transmitted from each\n   endpoint to the MCU, where it is decoded,
      scaled, and composited to\n   construct output frames, which are then re-encoded
      and transmitted to\n   the endpoint(s).  In systems supporting personalized
      layout (each\n   user is allowed to select the layout of his/her screen), the\n
      \  compositing and encoding process is performed for each of the\n   receiving
      endpoints.  Even without personalized layout, rate matching\n   still requires
      that the encoding process at the MCU is performed\n   separately for each endpoint.
      \ As a result, MCUs have considerable\n   complexity and introduce significant
      delay.  The cascaded encodings\n   also reduce the video quality.  Particularly
      for multipoint\n   connections, interactive communication is cumbersome as the
      end-to-\n   end delay is very high [G.114].  A simpler architecture is the\n
      \  switching MCU, in which one of the incoming video streams is\n   redirected
      to the receiving endpoints.  Obviously, only one user at a\n   time can be seen
      and rate matching cannot be performed, thus forcing\n   all transmitting endpoints
      to transmit at the lowest bit rate\n   available in the MCU-to-endpoint connections.\n
      \  With scalable video coding the MCU can be replaced with an\n   application-level
      router (ALR): this unit simply selects which\n   incoming packets should be
      transmitted to which of the receiving\n   endpoints [Eleft].  In such a system,
      each endpoint performs its own\n   composition of the incoming video streams.
      \ Assuming, for example, a\n   system that uses spatial scalability with two
      layers, personalized\n   layout is equivalent to instructing the ALR to only
      send the required\n   packets for the corresponding resolution to the particular
      endpoint.\n   Similarly, rate matching at the ALR for a particular endpoint
      can be\n   performed by selecting an appropriate subset of the incoming video\n
      \  packets to transmit to the particular endpoint.  Personalized layout\n   and
      rate matching thus become routing decisions, and require no\n   signal processing.
      \ Note that scalability also allows participants to\n   enjoy the best video
      quality afforded by their links, i.e., users no\n   longer have to be forced
      to operate at the quality supported by the\n   weakest endpoint.  Most importantly,
      the ALR has an insignificant\n   contribution to the end-to-end delay, typically
      an order of magnitude\n   less than an MCU.  This makes it possible to have
      fully interactive\n   multipoint conferences with even a very large number of
      participants.\n   There are significant advantages as well in terms of error
      resilience\n   and, in fact, error tolerance can be increased by nearly an order
      of\n   magnitude here as well (e.g., using unequal error protection).\n   Finally,
      the very low delay of an ALR allows these systems to be\n   cascaded, with significant
      benefits in terms of system design and\n   deployment.  Cascading of traditional
      MCUs is impossible due to the\n   very high delay that even a single MCU introduces.\n
      \  Scalable video coding enables a very significant paradigm shift in\n   videoconferencing
      systems, bringing the complexity of video\n   communication systems (particularly
      the servers residing within the\n   network) in line with other types of network
      applications.\n"
    title: 11.4.  Videoconferencing (Unicast to MANE, Unicast to Endpoints)
  - contents:
    - "11.5.  Mobile TV (Multicast to MANE, Unicast to Endpoint)\n   This scenario
      is a bit more complex, and designed to optimize the\n   network traffic in a
      core network, while still requiring only a\n   single pinhole in the endpoint's
      firewall.  One of its key\n   applications is the mobile TV market.\n   Consider
      a large private IP network, e.g., the core network of the\n   Third Generation
      Partnership Project (3GPP).  Streaming servers\n   within this core network
      can be assumed to be professionally\n   maintained.  It is assumed that these
      servers can have many ports\n   open to the network and that layered multicast
      is a real option.\n   Therefore, the streaming server multicasts SVC scalable
      layers,\n   instead of simulcasting different representations of the same content\n
      \  at different bitrates.\n   Also consider many endpoints of different classes.
      \ Some of these\n   endpoints may lack the processing power or the display size
      to\n   meaningfully decode all layers; others may have these capabilities.\n
      \  Users of some endpoints may wish not to pay for high quality and are\n   happy
      with a base service, which may be cheaper or even free.  Other\n   users are
      willing to pay for high quality.  Finally, some connected\n   users may have
      a bandwidth problem in that they can't receive the\n   bandwidth they would
      want to receive -- be it through congestion,\n   connectivity, change of service
      quality, or for whatever other\n   reasons.  However, all these users have in
      common that they don't\n   want to be exposed too much, and therefore the number
      of firewall\n   pinholes needs to be small.\n   This situation can be handled
      best by introducing middleboxes close\n   to the edge of the core network, which
      receive the layered multicast\n   streams and compose the single SVC scalable
      bitstream according to\n   the needs of the endpoint connected.  These middleboxes
      are called\n   MANEs throughout this specification.  In practice, the authors\n
      \  envision the MANE to be part of (or at least physically and\n   topologically
      close to) the base station of a mobile network, where\n   all the signaling
      and media traffic necessarily are multiplexed on\n   the same physical link.\n
      \  MANEs necessarily need to be fairly complex devices.  They certainly\n   need
      to understand the signaling, so, for example, to associate the\n   payload type
      octet in the RTP header with the SVC payload type.\n   A MANE may aggregate
      multiple RTP streams, possibly from multiple RTP\n   sessions, thus to reduce
      the number of firewall pinholes required at\n   the endpoints, or may optimize
      the outgoing RTP stream to the MTU\n   size of the outgoing path by utilizing
      the aggregation and\n   fragmentation mechanisms of this memo.  This type of
      MANE is\n   conceptually easy to implement and can offer powerful features,\n
      \  primarily because it necessarily can \"see\" the payload (including the\n
      \  RTP payload headers), utilize the wealth of layering information\n   available
      therein, and manipulate it.\n   A MANE can also perform stream thinning, in
      order to adhere to\n   congestion control principles as discussed in Section
      9.  While the\n   implementation of the forward (media) channel of such a MANE
      appears\n   to be comparatively simple, the need to rewrite RTCP RRs makes even\n
      \  such a MANE a complex device.\n   While the implementation complexity of
      either case of a MANE, as\n   discussed above, is fairly high, the computational
      demands are\n   comparatively low.\n"
    title: 11.5.  Mobile TV (Multicast to MANE, Unicast to Endpoint)
  title: '11.  Informative Appendix: Application Examples'
- contents:
  - "12.  Acknowledgements\n   Miska Hannuksela contributed significantly to the designs
    of the\n   PACSI NAL unit and the NI-C mode for decoding order recovery.  Roni\n
    \  Even organized and coordinated the design team for the development of\n   this
    memo, and provided valuable comments.  Jonathan Lennox\n   contributed to the
    NAL unit reordering algorithm for MST and provided\n   input on several parts
    of this memo.  Peter Amon, Sam Ganesan, Mike\n   Nilsson, Colin Perkins, and Thomas
    Wiegand were members of the design\n   team and provided valuable contributions.
    \ Magnus Westerlund has also\n   made valuable comments.  Charles Eckel and Stuart
    Taylor provided\n   valuable comments after the first WGLC for this document.
    \ Xiaohui\n   (Joanne) Wei helped improving Table 13 and the SDP examples.\n   The
    work of Thomas Schierl has been supported by the European\n   Commission under
    contract number FP7-ICT-248036, project COAST.\n"
  title: 12.  Acknowledgements
- contents:
  - '13.  References

    '
  - contents:
    - "13.1.  Normative References\n   [H.264]    ITU-T Recommendation H.264, \"Advanced
      video coding for\n              generic audiovisual services\", March 2010.\n
      \  [RFC6184]  Wang, Y.-K., Even, R., Kristensen, T., and R. Jesup, \"RTP\n              Payload
      Format for H.264 Video\", RFC 6184, May 2011.\n   [ISO/IEC14496-10]\n              ISO/IEC
      International Standard 14496-10:2005.\n   [RFC2119]  Bradner, S., \"Key words
      for use in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC
      2119, March 1997.\n   [RFC3264]  Rosenberg, J. and H. Schulzrinne, \"An Offer/Answer
      Model\n              with Session Description Protocol (SDP)\", RFC 3264, June\n
      \             2002.\n   [RFC3550]  Schulzrinne, H., Casner, S., Frederick, R.,
      and V.\n              Jacobson, \"RTP: A Transport Protocol for Real-Time\n
      \             Applications\", STD 64, RFC 3550, July 2003.\n   [RFC4288]  Freed,
      N. and J. Klensin, \"Media Type Specifications and\n              Registration
      Procedures\", BCP 13, RFC 4288, December 2005.\n   [RFC4566]  Handley, M., Jacobson,
      V., and C. Perkins, \"SDP: Session\n              Description Protocol\", RFC
      4566, July 2006.\n   [RFC4648]  Josefsson, S., \"The Base16, Base32, and Base64
      Data\n              Encodings\", RFC 4648, October 2006.\n   [RFC5576]  Lennox,
      J., Ott, J., and T. Schierl, \"Source-Specific\n              Media Attributes
      in the Session Description Protocol\n              (SDP)\", RFC 5576, June 2009.\n
      \  [RFC5583]  Schierl, T. and S. Wenger, \"Signaling Media Decoding\n              Dependency
      in the Session Description Protocol (SDP)\", RFC\n              5583, July 2009.\n
      \  [RFC6051]  Perkins, C. and T. Schierl, \"Rapid Synchronisation of RTP\n              Flows\",
      RFC 6051, November 2010.\n"
    title: 13.1.  Normative References
  - contents:
    - "13.2.  Informative References\n   [DVB-H]    DVB - Digital Video Broadcasting
      (DVB); DVB-H\n              Implementation Guidelines, ETSI TR 102 377, 2005.\n
      \  [Eleft]    Eleftheriadis, A., R. Civanlar, and O. Shapiro,\n              \"Multipoint
      Videoconferencing with Scalable Video Coding\",\n              Journal of Zhejiang
      University SCIENCE A, Vol. 7, Nr. 5,\n              April 2006, pp. 696-705.
      (Proceedings of the Packet Video\n              2006 Workshop.)\n   [G.114]
      \   ITU-T Rec. G.114, \"One-way transmission time\", May 2003.\n   [H.241]    ITU-T
      Rec. H.241, \"Extended video procedures and control\n              signals for
      H.300-series terminals\", May 2006.\n   [IGMP]     Cain, B., Deering, S., Kouvelas,
      I., Fenner, B., and A.\n              Thyagarajan, \"Internet Group Management
      Protocol, Version\n              3\", RFC 3376, October 2002.\n   [JVT-N026]
      Ohm J.-R., Koenen, R., and Chiariglione, L. (ed.), \"SVC\n              requirements
      specified by MPEG (ISO/IEC JTC1 SC29 WG11)\",\n              JVT-N026, available
      from http://ftp3.itu.ch/av-arch/\n              jvt-site/2005_01_HongKong/JVT-N026.doc,
      Hong Kong, China,\n              January 2005.\n   [JVT-N027] Sullivan, G. and
      Wiegand, T. (ed.), \"SVC requirements\n              specified by VCEG (ITU-T
      SG16 Q.6)\", JVT-N027, available\n              from http://ftp3.itu.int/av-arch/\n
      \             jvt-site/2005_01_HongKong/JVT-N027.doc, Hong Kong, China,\n              January
      2005.\n   [McCanne]  McCanne, S., Jacobson, V., and Vetterli, M., \"Receiver-\n
      \             driven layered multicast\", in Proc. of ACM SIGCOMM'96,\n              pages
      117-130, Stanford, CA, August 1996.\n   [MBMS]     3GPP - Technical Specification
      Group Services and System\n              Aspects; Multimedia Broadcast/Multicast
      Service (MBMS);\n              Protocols and codecs (Release 6), December 2005.\n
      \  [MPEG2]    ISO/IEC International Standard 13818-2:1993.\n   [RFC2326]  Schulzrinne,
      H., Rao, A., and R. Lanphier, \"Real Time\n              Streaming Protocol
      (RTSP)\", RFC 2326, April 1998.\n   [RFC2974]  Handley, M., Perkins, C., and
      E. Whelan, \"Session\n              Announcement Protocol\", RFC 2974, October
      2000.\n   [RFC5117]  Westerlund, M. and S. Wenger, \"RTP Topologies\", RFC 5117,\n
      \             January 2008.\n   [RFC5775]  Luby, M., Watson, M., and L. Vicisano,
      \"Asynchronous\n              Layered Coding (ALC) Protocol Instantiation\",
      RFC 5775,\n              April 2010.\n   [Yan]      Yan, J., Katrinis, K., May,
      M., and Plattner, R., \"Media-\n              and TCP-friendly congestion control
      for scalable video\n              streams\", in IEEE Trans. Multimedia, pages
      196-206, April\n              2006.\n"
    title: 13.2.  Informative References
  title: 13.  References
- contents:
  - "Authors' Addresses\n   Stephan Wenger\n   2400 Skyfarm Dr.\n   Hillsborough,
    CA 94010\n   USA\n   Phone: +1-415-713-5473\n   EMail: stewe@stewe.org\n   Ye-Kui
    Wang\n   Huawei Technologies\n   400 Crossing Blvd, 2nd Floor\n   Bridgewater,
    NJ 08807\n   USA\n   Phone: +1-908-541-3518\n   EMail: yekui.wang@huawei.com\n
    \  Thomas Schierl\n   Fraunhofer HHI\n   Einsteinufer 37\n   D-10587 Berlin\n
    \  Germany\n   Phone: +49-30-31002-227\n   EMail: ts@thomas-schierl.de\n   Alex
    Eleftheriadis\n   Vidyo, Inc.\n   433 Hackensack Ave.\n   Hackensack, NJ 07601\n
    \  USA\n   Phone: +1-201-467-5135\n   EMail: alex@vidyo.com\n"
  title: Authors' Addresses
