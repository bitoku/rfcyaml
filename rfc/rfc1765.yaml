- title: __initial_text__
  contents:
  - '                         OSPF Database Overflow

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  This memo does not specify an Internet standard of any\n   kind.\
    \  Discussion and suggestions for improvement are requested.\n   Distribution\
    \ of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   Proper operation of the OSPF protocol requires that all OSPF routers\n\
    \   maintain an identical copy of the OSPF link-state database.  However,\n  \
    \ when the size of the link-state database becomes very large, some\n   routers\
    \ may be unable to keep the entire database due to resource\n   shortages; we\
    \ term this \"database overflow\". When database overflow\n   is anticipated,\
    \ the routers with limited resources can be\n   accommodated by configuring OSPF\
    \ stub areas and NSSAs. This memo\n   details a way of gracefully handling unanticipated\
    \ database\n   overflows.\n   This memo is a product of the OSPF Working Group.\
    \ Please send\n   comments to ospf@gated.cornell.edu.\n"
- title: Table of Contents
  contents:
  - 'Table of Contents

    '
- title: 1.  Overview
  contents:
  - "1.  Overview\n   OSPF requires that all OSPF routers within a single area maintain\
    \ an\n   identical copy of the OSPF link-state database.  However, when the\n\
    \   size of the link-state database becomes very large, some routers may\n   be\
    \ unable to keep the entire database due to resource shortages; we\n   term this\
    \ \"database overflow\". For example, a regional network may\n   have a very large\
    \ OSPF database because it is importing a large\n   number of external routes\
    \ into OSPF. Unless database overflow is\n   handled correctly, routers will end\
    \ up with inconsistent views of the\n   network, possibly leading to incorrect\
    \ routing.\n   One way of handling database overflow is to encase routers having\n\
    \   limited resources within OSPF stub areas (see Section 3.6 of [1]) or\n   NSSAs\
    \ ([2]).  AS-external-LSAs are omitted from these areas' link-\n   state databases,\
    \ thereby controlling database size.\n   However, unexpected database overflows\
    \ cannot be handled in the above\n   manner.  This memo describes a way of dynamically\
    \ limiting database\n   size under overflow conditions. The basic mechanism is\
    \ as follows:\n    (1) A parameter, ospfExtLsdbLimit, is configured in each router\n\
    \        indicating the maximum number of AS-external-LSAs (excluding\n      \
    \  those describing the default route) that are allowed in the\n        link-state\
    \ database. This parameter must be the same in all\n        routers in the routing\
    \ domain (see Section 2.1); synchronization\n        of the parameter is achieved\
    \ via network management.\n    (2) In any router's database, the number of AS-external-LSAs\n\
    \        (excluding default) is never allowed to exceed ospfExtLsdbLimit.\n  \
    \      If a router receives a non-default AS-external-LSA that would\n       \
    \ cause the limit of ospfExtLsdbLimit to be exceeded, it drops the\n        LSA\
    \ and does NOT acknowledge it.\n    (3) If the number of non-default AS-external-LSAs\
    \ in a router's\n        database hits ospfExtLsdbLimit, the router a) flushes\
    \ all non-\n        default AS-external-LSAs that it has itself originated (see\n\
    \        Section 2.2) and b) goes into \"OverflowState\".\n    (4) While in OverflowState,\
    \ the router refuses to originate any\n        non-default AS-external-LSAs (see\
    \ Section 2.3.2).\n    (5) Optionally, the router can attempt to leave OverflowState\
    \ after\n        the configurable parameter ospfExitOverflowInterval has elapsed\n\
    \        since entering OverflowState (see Section 2.4). Only at this\n      \
    \  point can the router resume originating non-default AS-\n        external-LSAs.\n\
    \   The reason for limiting non-default AS-external-LSAs, but not other\n   LSA\
    \ types, is twofold. First of all, the non-default AS-external LSAs\n   are the\
    \ most likely to dominate database size in those networks with\n   huge databases\
    \ (e.g., regional networks; see [5]). Second, the non-\n   default AS-external-LSAs\
    \ can be viewed as \"optional\" in the following\n   sense: the router can probably\
    \ be monitored/reconfigured without\n   them. (However, using similar strategies,\
    \ other LSA types can also be\n   limited; see Section 5.)\n   The method of dealing\
    \ with database overflow described herein has the\n   following desirable properties:\n\
    \    o   After a short period of convergence, all routers will have\n        identical\
    \ link-state databases. This database will contain less\n        than ospfExtLsdbLimit\
    \ non-default AS-external-LSAs.\n    o   At all times, routing WITHIN the OSPF\
    \ Autonomous System will\n        remain intact. Among other things, this means\
    \ that the routers\n        will continue to be manageable.\n    o   Default routing\
    \ to external destinations will also remain\n        intact. This hopefully will\
    \ mean that a large amount of external\n        connectivity will be preserved,\
    \ although possibly taking less\n        efficient routes.\n    o   If parameter\
    \ ospfExitOverflowInterval is configured, the OSPF\n        system will recover\
    \ fully and automatically (i.e., without\n        network management intervention)\
    \ from transient database\n        overflow conditions (see Section 2.4).\n"
- title: 2.  Implementation details
  contents:
  - "2.  Implementation details\n   This section describes the mechanism for dealing\
    \ with database\n   overflow in more detail. The section is organized around the\
    \ concept\n   OverflowState, describing how routers enter the OverflowState, the\n\
    \   operation of the router while in OverflowState, and when the router\n   leaves\
    \ OverflowState.\n   2.1.  Configuration\n      The following configuration parameters\
    \ are added to support the\n      database overflow functionality. These parameters\
    \ are set by\n      network management.\n        ospfExtLsdbLimit\n          \
    \  When the number of non-default AS-external-LSAs in a\n            router's\
    \ link-state database reaches ospfExtLsdbLimit, the\n            router enters\
    \ OverflowState. The router never holds more\n            than ospfExtLsdbLimit\
    \ non-default AS-external-LSAs in its\n            database.\n            ospfExtLsdbLimit\
    \ MUST be set identically in all routers\n            attached to the OSPF backbone\
    \ and/or any \"regular\" OSPF\n            area. (This memo does not pertain to\
    \ routers contained\n            within OSPF stub areas nor NSSAs, since such\
    \ routers do not\n            receive AS-external-LSAs.) If ospfExtLsdbLimit is\
    \ not set\n            identically in all routers, then when the database\n  \
    \          overflows: 1) the routers will NOT converge on a common\n         \
    \   link-state database, 2) incorrect routing, possibly\n            including\
    \ routing loops, will result and 3) constant\n            retransmission of AS-external-LSAs\
    \ will occur. Identical\n            setting of ospfExtLsdbLimit is achieved/ensured\
    \ by network\n            management.\n            When ospfExtLsdbLimit is set\
    \ in a router, the router must\n            have some way to guarantee that it\
    \ can hold that many non-\n            default AS-external-LSAs in its link-state\
    \ database. One way\n            of doing this is to preallocate resources (e.g.,\
    \ memory) for\n            the configured number of LSAs.\n        ospfExitOverflowInterval\n\
    \            The number of seconds that, after entering OverflowState, a\n   \
    \         router will attempt to leave OverflowState. This allows the\n      \
    \      router to again originate non-default AS-external-LSAs. When\n        \
    \    set to 0, the router will not leave OverflowState until\n            restarted.\
    \ The default setting for ospfExitOverflowInterval\n            is 0.\n      \
    \      It is not necessary for ospfExitOverflowInterval to be\n            configured\
    \ the same in all routers. A smaller value may be\n            configured in those\
    \ routers that originate the \"more\n            important\" AS-external-LSAs.\
    \ In fact, setting\n            ospfExitOverflowInterval the same may cause problems,\
    \ as\n            multiple routers attempt to leave OverflowState\n          \
    \  simultaneously. For this reason, the value of\n            ospfExitOverflowInterval\
    \ must be \"jittered\" by randomly\n            varying its value within the range\
    \ of plus or minus 10\n            percent before using.\n   2.2.  Entering OverflowState\n\
    \      The router enters OverflowState when the number of non-default\n      AS-external-LSAs\
    \ in the database hits ospfExtLsdbLimit. There are\n      two cases when this\
    \ can occur. First, when receiving an LSA during\n      flooding. In this case,\
    \ an LSA which does not already have a\n      database instance is added in Step\
    \ 5 of Section 13 of [1].  The\n      second case is when the router originates\
    \ a non-default AS-\n      external-LSA itself.\n      Whenever the router enters\
    \ OverflowState it flushes all non-\n      default AS-external-LSAs that it itself\
    \ had originated. Flushing\n      is accomplished through the premature aging\
    \ scheme described in\n      Section 14.1 of [1].  Only self-originated LSAs are\
    \ flushed; those\n      originated by other routers are kept in the link-state\
    \ database.\n   2.3.  Operation while in OverflowState\n      While in OverflowState,\
    \ the flooding and origination of non-\n      default AS-external-LSAs are modified\
    \ in the following fashion.\n      2.3.1.  Modifications to Flooding\n       \
    \  Flooding while in OverflowState is modified as follows. If in\n         Step\
    \ 5 of Section 13 of [1], a non-default AS-external-LSA has\n         been received\
    \ that a) has no current database instance and b)\n         would cause the count\
    \ of non-default AS-external-LSAs to exceed\n         ospfExtLsdbLimit, then that\
    \ LSA is discarded. Such an LSA is\n         not installed in the link-state database,\
    \ nor is it\n         acknowledged.\n         When all routers have identical\
    \ values for ospfExtLsdbLimit (as\n         required), the above flooding modification\
    \ will only be invoked\n         during a short period of convergence. During\
    \ convergence, there\n         will be retransmissions of LSAs. However, after\
    \ convergence the\n         retransmissions will cease, as the routers settle\
    \ on a database\n         having less than ospfExtLsdbLimit non-default As-external-LSAs.\n\
    \         In OverflowState, non-default AS-external-LSAs ARE still\n         accepted\
    \ in the following conditions:\n            (1) If the LSA updates an LSA that\
    \ currently exists in the\n                router's link-state database.\n   \
    \         (2) LSAs having LS age of MaxAge are always accepted. The\n        \
    \        processing of these LSAs follows the procedures\n                described\
    \ in Sections 13 and 14 of [1].\n            (3) If adding the LSA to the router's\
    \ database would keep\n                the number of non-default AS-external-LSAs\
    \ less than or\n                equal to ospfExtLsdbLimit, the LSA is accepted.\n\
    \      2.3.2.  Originating AS-external-LSAs\n         Originating AS-external-LSAs\
    \ is described in Section 12.4.5 of\n         [1].  When a router is in OverflowState,\
    \ it does not originate\n         non-default AS-external-LSAs. In other words,\
    \ the only AS-\n         external-LSAs originated by a router in OverflowState\
    \ have Link\n         State ID 0.0.0.0.\n      2.3.3.  Receiving self-originated\
    \ LSAs\n         Receiving self-originated LSAs is described in Section 13.4 of\n\
    \         [1].  When in OverflowState, a router receiving a self-\n         originated\
    \ non-default AS-external-LSA responds by flushing it\n         from the routing\
    \ domain using the premature aging scheme\n         described in Section 14.1\
    \ of [1].\n   2.4.  Leaving OverflowState\n      If ospfExitOverflowInterval is\
    \ non-zero, then as soon as a router\n      enters OverflowState, it sets a timer\
    \ equal to the value of\n      ospfExitOverflowInterval (plus or minus a random\
    \ value in the\n      range of 10 percent). When this timer fires, the router\
    \ leaves\n      OverflowState and begins originating non-default AS-external-LSAs\n\
    \      again.\n      This allows a router to automatically recover from transient\n\
    \      overflow conditions. For example, an AS boundary router that\n      imports\
    \ a great many AS-external-LSAs may crash. Other routers may\n      then start\
    \ importing the routes, but until the crashed AS boundary\n      router is either\
    \ a) restarted or b) its AS-external-LSAs age out,\n      there will be a much\
    \ larger database than usual.  Since such an\n      overflow is guaranteed to\
    \ go away in MaxAge seconds (1 hour),\n      automatic recovery may be appropriate\
    \ (and fast enough) if the\n      overflow happens off-hours.\n      As soon as\
    \ the router leaves OverflowState, it is again eligible\n      to reenter OverflowState\
    \ according to the text of Section 2.2.\n"
- title: 3.  An example
  contents:
  - "3.  An example\n   As an example, suppose that a router implements the database\
    \ overflow\n   logic, and that its ospfExtLsdbLimit is 10,000 and its\n   ospfExitOverflowInterval\
    \ is set to 600 seconds. Suppose further that\n   the router itself is originating\
    \ 400 non-default AS-external-LSAs,\n   and that the current number of non-default\
    \ AS-external-LSAs in the\n   router's database is equal to 9,997.\n   Next, it\
    \ receives a Link State Update packet from a neighbor,\n   containing 6 non-default\
    \ AS-external-LSAs, none of which have current\n   database copies.  The first\
    \ two LSAs are then installed in the\n   database. The third LSA is also installed\
    \ in the database, but causes\n   the router to go into OverflowState.  Going\
    \ into OverflowState causes\n   the router to flush (via premature aging) its\
    \ 400 self-originated\n   non-default LSAs. However, these 400 LSAs are still\
    \ considered to be\n   part of the link-state database until their re-flooding\
    \ (with age set\n   to MaxAge) is acknowledged (see Section 14 of [1]); for this\
    \ reason,\n   the last three LSAs in the received update are discarded without\n\
    \   being acknowledged.\n   After some small period of time all routers will converge\
    \ on a common\n   database, having less than 10,000 non-default AS-external-LSAs.\n\
    \   During this convergence period there may be some link-state\n   retransmissions;\
    \ for example, the sender of the above Link State\n   Update packet may retransmit\
    \ the three LSAs that were discarded. If\n   this retransmission happens after\
    \ the flushing of the 400 self-\n   originated LSAs is acknowledged, the 3 LSAs\
    \ will then be accepted.\n   Going into OverflowState also causes the router to\
    \ set a timer that\n   will fire some time between 540 and 660 seconds later.\
    \ When this\n   timer fires, the router will leave OverflowState and re-originate\
    \ its\n   400 non-default AS-external-LSAs, provided that the current database\n\
    \   has less than 9600 (10,000 - 400) non-default AS-external-LSAs. If\n   there\
    \ are more than 9600, the timer is simply restarted.\n"
- title: 4.  Administrative response to database overflow
  contents:
  - "4.  Administrative response to database overflow\n   Once the link-state database\
    \ has overflowed, it may take intervention\n   by network management before all\
    \ routing is restored.  (If the\n   overflow condition is transient, routing may\
    \ be restored\n   automatically; see Section 2.4 for details.) An overflow condition\
    \ is\n   indicated by SNMP traps (see Appendix B). Possible responses by a\n \
    \  network manager may include:\n    o   Increasing the value of ospfExtLsdbLimit.\
    \ Perhaps it had been\n        set too conservatively, and the routers are able\
    \ to support\n        larger databases than they are currently configured for.\n\
    \    o   Isolating routers having limited resources within OSPF stub\n       \
    \ areas or NSSAs.  This would allow increasing the value of\n        ospfExtLsdbLimit\
    \ in the remaining routers.\n    o   Reevaluating the need to import certain external\
    \ routes. If\n        ospfExtLsdbLimit cannot be increased, the network manager\
    \ will\n        want to make sure that the more important routes continue to be\n\
    \        imported; this is accomplished by turning off the importing of\n    \
    \    less important routes.\n"
- title: 5.  Operational experience
  contents:
  - "5.  Operational experience\n   The database overflow scheme described in this\
    \ memo has been\n   implemented in the Proteon router for a number of years, with\
    \ the\n   following differences. First, the router did not leave OverflowState\n\
    \   until it was restarted (i.e., ospfExitOverflowInterval was always 0).\n  \
    \ Second, default AS-external-LSAs were not separated from non-default\n   AS-external-LSAs.\
    \ Operationally the scheme performed as expected:\n   during overflow conditions,\
    \ the routers converged on a common\n   database having less than a configured\
    \ number of AS-external-LSAs.\n"
- title: 6.  Possible enhancements
  contents:
  - "6.  Possible enhancements\n   Possible enhancements to the overflow scheme include\
    \ the following:\n    o   Other LSA types, with the exception of the transit LSAs\n\
    \        (router-LSAs and network-LSAs), could be limited in a similar\n     \
    \   fashion. For example, one could limit the number of summary-\n        LSAs,\
    \ or group-membership-LSAs (see [6]).\n    o   Rather than flushing all of its\
    \ non-default AS-external-LSAs\n        when entering OverflowState, a router\
    \ could flush a fixed number\n        whenever the database size hits ospfExtLsdbLimit.\
    \ This would\n        allow the router to prioritize its AS-external-LSAs, flushing\n\
    \        the least important ones first.\n"
- title: A. Related MIB parameters
  contents:
  - "A. Related MIB parameters\n   The following OSPF MIB variables have been defined\
    \ to support the\n   database overflow procedure described in this memo (see [4]\
    \ for more\n   information):\n    ospfExtLsdbLimit\n        As in Section 2.1\
    \ of this memo, the maximum number of non-\n        default AS-external-LSAs that\
    \ can be stored within the database.\n        If set to -1, there is no limit.\n\
    \    ospfExitOverflowInterval\n        As in Section 2.1 of this memo, the number\
    \ of seconds that,\n        after entering OverflowState, a router will attempt\
    \ to leave\n        OverflowState. This allows the router to again originate non-\n\
    \        default AS-external-LSAs.  When set to 0, the router will not\n     \
    \   leave OverflowState until restarted.\n    ospfLsdbOverflow\n        A trap\
    \ indicating that the number of non-default AS-external-\n        LSAs has exceeded\
    \ or equaled ospfExtLsdbLimit. In other words,\n        this trap indicates that\
    \ the router is entering OverflowState.\n    ospfLsdbApproachingOverflow\n   \
    \     A trap indicating that the number of non-default AS-external-\n        LSAs\
    \ has exceeded ninety percent of \"ospfExtLsdbLimit\".\n"
- title: References
  contents:
  - "References\n   [1] Moy, J., \"OSPF Version 2\", RFC 1583, Proteon, Inc., March\
    \ 1994.\n   [2] Coltun, R., and V. Fuller, \"The OSPF NSSA Option\", RFC 1587,\n\
    \       RainbowBridge Communications, Stanford University, March 1994.\n   [3]\
    \ Moy, J., Editor, \"OSPF Protocol Analysis\", RFC 1245, Proteon,\n       Inc.,\
    \ July 1991.\n   [4] Baker F., and R. Coltun, \"OSPF Version 2 Management Information\n\
    \       Base\", Work in Progress.\n   [5] Moy, J., Editor, \"Experience with the\
    \ OSPF Protocol\", RFC 1246,\n       Proteon, Inc., July 1991.\n   [6] Moy, J.,\
    \ \"Multicast Extensions to OSPF\", RFC 1584, Proteon, Inc.,\n       March 1994.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   John Moy\n   Cascade Communications Corp.\n   5 Carlisle\
    \ Road\n   Westford, MA 01886\n   Phone: 508-692-2600 Ext. 394\n   Fax:   508-692-9214\n\
    \   EMail: jmoy@casc.com\n"
