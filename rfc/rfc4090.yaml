- title: __initial_text__
  contents:
  - '           Fast Reroute Extensions to RSVP-TE for LSP Tunnels

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines RSVP-TE extensions to establish backup label-\n\
    \   switched path (LSP) tunnels for local repair of LSP tunnels.  These\n   mechanisms\
    \ enable the re-direction of traffic onto backup LSP tunnels\n   in 10s of milliseconds,\
    \ in the event of a failure.\n   Two methods are defined here.  The one-to-one\
    \ backup method creates\n   detour LSPs for each protected LSP at each potential\
    \ point of local\n   repair.  The facility backup method creates a bypass tunnel\
    \ to\n   protect a potential failure point; by taking advantage of MPLS label\n\
    \   stacking, this bypass tunnel can protect a set of LSPs that have\n   similar\
    \ backup constraints.  Both methods can be used to protect\n   links and nodes\
    \ during network failure.  The described behavior and\n   extensions to RSVP allow\
    \ nodes to implement either method or both and\n   to interoperate in a mixed\
    \ network.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction ...................................................3\n\
    \       1.1.  Background ...............................................4\n  \
    \ 2.  Terminology ....................................................4\n   3.\
    \  Local Repair Techniques ........................................6\n       3.1.\
    \  One-to-One Backup ........................................6\n       3.2.  Facility\
    \ Backup ..........................................7\n   4.  RSVP Extensions ................................................8\n\
    \       4.1.  FAST_REROUTE Object ......................................8\n  \
    \     4.2.  DETOUR Object ...........................................11\n    \
    \         4.2.1. DETOUR Object for IPv4 Address ...................11\n      \
    \       4.2.2. DETOUR Object for IPv6 Address ...................12\n       4.3.\
    \  SESSION_ATTRIBUTE Flags .................................13\n       4.4.  RRO\
    \ IPv4/IPv6 Sub-object Flags ..........................14\n   5.  Head-End Behavior\
    \ .............................................15\n   6.  Point of Local Repair\
    \ (PLR) Behavior ..........................16\n       6.1.  Signaling a Backup\
    \ Path .................................17\n             6.1.1. Backup Path Identification:\
    \ Sender\n                    Template-Specific ................................19\n\
    \             6.1.2. Backup Path Identification: Path-Specific ........19\n  \
    \     6.2.  Procedures for Backup Path Computation ..................20\n    \
    \   6.3.  Signaling Backups for One-to-One Protection .............21\n      \
    \       6.3.1. Make-before-Break with Detour LSPs ...............22\n        \
    \     6.3.2. Message Handling .................................23\n          \
    \   6.3.3. Local Reroute of Traffic onto Detour LSP .........23\n        6.4.\
    \ Signaling for Facility Protection .......................24\n             6.4.1.\
    \ Discovering Downstream Labels ....................24\n             6.4.2. Procedures\
    \ for the PLR before Local Repair .......24\n             6.4.3. Procedures for\
    \ the PLR during Local Repair .......25\n             6.4.4. Processing Backup\
    \ Tunnel's ERO ...................26\n        6.5. PLR Procedures during Local\
    \ Repair ......................26\n             6.5.1. Notification of Local Repair\
    \ .....................26\n             6.5.2. Revertive Behavior ...............................27\n\
    \   7.  Merge Node Behavior ...........................................28\n  \
    \     7.1.  Handling Backup Path Messages before Failure ............28\n    \
    \         7.1.1. Merging Backup Paths using the Sender\n                    Template-Specific\
    \ Method .........................29\n             7.1.2. Merging Detours using\
    \ the Path-Specific Method ...29\n             7.1.3. Message Handling for Merged\
    \ Detours ..............31\n       7.2.  Handling Failures .......................................31\n\
    \   8.  Behavior of All LSRs ..........................................32\n  \
    \     8.1.  Merging Detours in the Path-Specific Method .............32\n   9.\
    \  Security Considerations .......................................33\n   10. IANA\
    \ Considerations ...........................................33\n   11. Contributors\
    \ ..................................................35\n   12. Acknowledgments\
    \ ...............................................36\n   13. Normative References\
    \ ..........................................36\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document extends RSVP [RSVP] to establish backup label-switched\n\
    \   path (LSP) tunnels for the local repair of LSP tunnels.  This\n   extension\
    \ will meet the needs of real-time applications such as voice\n   over IP, for\
    \ which user traffic should be redirected onto backup LSP\n   tunnels in 10s of\
    \ milliseconds.  This timing requirement can be\n   satisfied by computing and\
    \ signaling backup LSP tunnels in advance of\n   failure and by re-directing traffic\
    \ as close to the failure point as\n   possible.  In this way, the time for redirection\
    \ includes no path\n   computation and no signaling delays, including delays to\
    \ propagate\n   failure notification between label-switched routers (LSRs).  Speed\
    \ of\n   repair is the primary advantage of the methods and extensions\n   described\
    \ here.  The term local repair is used when referring to\n   techniques that re-direct\
    \ traffic to a backup LSP tunnel in response\n   to a local failure.\n   A protected\
    \ LSP is an explicitly-routed LSP that is provided with\n   protection.  The repair\
    \ methods described here are applicable only to\n   explicitly-routed LSPs.  Application\
    \ of these methods to LSPs that\n   dynamically change their routes, such as LSPs\
    \ used in unicast IGP\n   routing, is beyond the scope of this document.\n   Section\
    \ 2 covers new terminology used in this document.  Section 3\n   describes two\
    \ basic methods for creating backup LSPs.  Section 4\n   describes the RSVP protocol\
    \ extensions to support local protection.\n   Section 5 presents the behavior\
    \ of an LSR that seeks to request local\n   protection for an LSP.  The behavior\
    \ of a potential point of local\n   repair (PLR) is given in Section 6, which\
    \ describes how to determine\n   the appropriate strategy for protecting an LSP\
    \ and how to implement\n   each of the strategies.  Section 7 describes the behavior\
    \ of a merge\n   node, the LSR where a protected LSP and its backup LSP rejoin.\n\
    \   Finally, Section 8 discusses the required behavior of other nodes in\n   the\
    \ network.\n   The methods discussed in this document depend upon three assumptions:\n\
    \      o    An LSR that is on the path of a protected LSP should always\n    \
    \       assume that it is a merge point.  This is necessary because\n        \
    \   the facility backup method does not signal backups through a\n           bypass\
    \ tunnel before failure.\n      o    If the one-to-one backup method is used and\
    \ a DETOUR object\n           is included, the LSRs in the traffic-engineered\
    \ network\n           should support the DETOUR object.  This is necessary so\
    \ that\n           the Path message containing the DETOUR object is not\n    \
    \       rejected.\n      o    Understanding the DETOUR object is required to support\
    \ the\n           path-specific method, which requires that LSRs in the\n    \
    \       traffic-engineered network be capable of merging detours.\n"
- title: 1.1.  Background
  contents:
  - "1.1.  Background\n   Several years before work began on this document, operational\n\
    \   networks had deployed two independent methods of doing fast reroute;\n   these\
    \ methods are called here one-to-one backup and facility backup.\n   Vendors trying\
    \ to support both methods experienced compatibility\n   problems in attempting\
    \ to produce a single implementation capable of\n   interoperating with both methods.\
    \  There are technical tradeoffs\n   between the methods.  These tradeoffs are\
    \ so topologically dependent\n   that the community has not converged on a single\
    \ approach.\n   This document rationalizes the RSVP signaling for both methods\
    \ so\n   that any implementation can recognize all fast reroute requests and\n\
    \   clearly respond.  The response may be positive if the method can be\n   performed,\
    \ or it may be a clear error to inform the requester to seek\n   alternate backup\
    \ means.  This document also allows a single\n   implementation to support both\
    \ methods, thereby providing a range of\n   capabilities.  The described behavior\
    \ and extensions to RSVP allow\n   LERs and LSRs to implement either method or\
    \ both.\n   While the two methods could in principle be used in a single network,\n\
    \   it is expected that operators will continue to deploy either one or\n   the\
    \ other.  The goal of this document is to standardize the RSVP\n   signaling so\
    \ that a network composed of LSRs that implement both\n   methods or a network\
    \ composed of some LSRs that support one method\n   and others that support both\
    \ can properly signal among those LSRs to\n   achieve fast restoration.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC2119\
    \ [RFC-WORDS].\n   The reader is assumed to be familiar with the terminology in\
    \ [RSVP]\n   and [RSVP-TE].\n      LSR: Label-Switch Router.\n      LSP: An MPLS\
    \ Label-Switched Path.  In this document, an LSP will\n            always be explicitly\
    \ routed.\n      Local Repair: Techniques used to repair LSP tunnels quickly when\
    \ a\n            node or link along the LSP's path fails.\n      PLR: Point of\
    \ Local Repair.  The head-end LSR of a backup tunnel\n            or a detour\
    \ LSP.\n      One-to-One Backup: A local repair method in which a backup LSP is\n\
    \            separately created for each protected LSP at a PLR.\n      Facility\
    \ Backup: A local repair method in which a bypass tunnel is\n            used\
    \ to protect one or more protected LSPs that traverse the\n            PLR, the\
    \ resource being protected, and the Merge Point in\n            that order.\n\
    \      Protected LSP: An LSP is said to be protected at a given hop if it\n  \
    \          has one or multiple associated backup tunnels originating at\n    \
    \        that hop.\n      Detour LSP: The LSP that is used to re-route traffic\
    \ around a\n            failure in one-to-one backup.\n      Bypass Tunnel: An\
    \ LSP that is used to protect a set of LSPs\n            passing over a common\
    \ facility.\n      Backup Tunnel: The LSP that is used to backup up one of the\
    \ many\n            LSPs in many-to-one backup.\n      NHOP Bypass Tunnel: Next-Hop\
    \ Bypass Tunnel.  A backup tunnel that\n            bypasses a single link of\
    \ the protected LSP.\n      NNHOP Bypass Tunnel: Next-Next-Hop Bypass Tunnel.\
    \  A backup tunnel\n            that bypasses a single node of the protected LSP.\n\
    \      Backup Path: The LSP that is responsible for backing up one\n         \
    \   protected LSP.  A backup path refers to either a detour LSP\n            or\
    \ a backup tunnel.\n      MP: Merge Point.  The LSR where one or more backup tunnels\
    \ rejoin\n            the path of the protected LSP downstream of the potential\n\
    \            failure.  The same LSR may be both an MP and a PLR\n            simultaneously.\n\
    \      DMP: Detour Merge Point.  In the case of one-to-one backup, this\n    \
    \        is an LSR where multiple detours converge.  Only one detour\n       \
    \     is signaled beyond that LSR.\n      Reroutable LSP: Any LSP for which the\
    \ head-end LSR requests local\n            protection.  See Section 5 for more\
    \ detail.\n      CSPF: Constraint-based Shortest Path First.\n      SRLG Disjoint:\
    \ A path is considered to be SRLG disjoint from a\n            given link or node\
    \ if the path does not use any links or\n            nodes which belong to the\
    \ same SRLG as that given link or\n            node.\n"
- title: 3.  Local Repair Techniques
  contents:
  - "3.  Local Repair Techniques\n   Two different methods for local protection are\
    \ described.  In the\n   one-to-one backup method, a PLR computes a separate backup\
    \ LSP,\n   called a detour LSP, for each LSP that the PLR protects.  In the\n\
    \   facility backup method, the PLR creates a single bypass tunnel that\n   can\
    \ be used to protect multiple LSPs.\n"
- title: 3.1.  One-to-One Backup
  contents:
  - "3.1.  One-to-One Backup\n   In the one-to-one backup method, a label-switched\
    \ path is established\n   that intersects the original LSP somewhere downstream\
    \ of the point of\n   link or node failure.  A separate backup LSP is established\
    \ for each\n   LSP that is backed up.\n              [R1]----[R2]----[R3]------[R4]------[R5]\n\
    \                  \\       \\       \\    /    \\    /\n                   [R6]----[R7]----[R8]------[R9]\n\
    \              Protected LSP:  [R1->R2->R3->R4->R5]\n              R1's Backup:\
    \    [R1->R6->R7->R8->R3]\n              R2's Backup:    [R2->R7->R8->R4]\n  \
    \            R3's Backup:    [R3->R8->R9->R5]\n              R4's Backup:    [R4->R9->R5]\n\
    \              Example 1.  One-to-One Backup Technique\n   In the simple topology\
    \ shown in Example 1, the protected LSP runs\n   from R1 to R5.  R2 can provide\
    \ user traffic protection by creating a\n   partial backup LSP that merges with\
    \ the protected LSP at R4.  We\n   refer to a partial one-to-one backup LSP [R2->R7->R8->R4]\
    \ as a\n   detour.\n   To protect an LSP that traverses N nodes fully, there could\
    \ be as\n   many as (N - 1) detours.  Example 1 shows the paths for the detours\n\
    \   necessary to protect fully the LSP in the example.  To minimize the\n   number\
    \ of LSPs in the network, it is desirable to merge a detour back\n   to its protected\
    \ LSP, when feasible.  When a detour LSP intersects\n   its protected LSP at an\
    \ LSR with the same outgoing interface, it will\n   be merged.\n   When a failure\
    \ occurs along the protected LSP, the PLR redirects\n   traffic onto the local\
    \ detour.  For instance, if the link [R2->R3]\n   fails in Example 1, R2 will\
    \ switch traffic received from R1 onto the\n   protected LSP along link [R2->R7],\
    \ using the label received when R2\n   created the detour.  When R4 receives traffic\
    \ with the label provided\n   for R2's detour, R4 will switch that traffic onto\
    \ link [R4-R5], using\n   the label received from R5 for the protected LSP.  At\
    \ no point does\n   the depth of the label stack increase as a result of the detour.\n\
    \   While R2 is using its detour, traffic will take the path\n   [R1->R2->R7->R8->R4->R5].\n"
- title: 3.2.  Facility Backup
  contents:
  - "3.2.  Facility Backup\n   The facility backup method takes advantage of the MPLS\
    \ label stack.\n   Instead of creating a separate LSP for every backed-up LSP,\
    \ a single\n   LSP is created that serves to back up a set of LSPs.  We call such\
    \ an\n   LSP tunnel a bypass tunnel.\n   The bypass tunnel must intersect the\
    \ path of the original LSP(s)\n   somewhere downstream of the PLR.  Naturally,\
    \ this constrains the set\n   of LSPs being backed up via that bypass tunnel to\
    \ those that pass\n   through some common downstream node.  All LSPs that pass\
    \ through the\n   point of local repair and through this common node that do not\
    \ also\n   use the facilities involved in the bypass tunnel are candidates for\n\
    \   this set of LSPs.\n                 [R8]\n                     \\\n      \
    \         [R1]---[R2]----[R3]-----[R4]---[R5]\n                          \\  \
    \         /    \\\n                           [R6]===[R7]      [R9]\n        \
    \        Protected LSP 1:   [R1->R2->R3->R4->R5]\n                Protected LSP\
    \ 2:   [R8->R2->R3->R4]\n                Protected LSP 3:   [R2->R3->R4->R9]\n\
    \                Bypass LSP Tunnel: [R2->R6->R7->R4]\n                    Example\
    \ 2.  Facility Backup Technique\n   In Example 2, R2 has built a bypass tunnel\
    \ that protects against the\n   failure of link [R2->R3] and node [R3].  The doubled\
    \ lines represent\n   this tunnel.  This technique provides a scalability improvement,\
    \ in\n   that the same bypass tunnel can also be used to protect LSPs from any\n\
    \   of R1, R2, or R8 to any of R4, R5, or R9.  Example 2 describes three\n   different\
    \ protected LSPs that are using the same bypass tunnel for\n   protection.\n \
    \  As with the one-to-one method, there could be as many as (N-1) bypass\n   tunnels\
    \ to fully protect an LSP that traverses N nodes.  However,\n   each of those\
    \ bypass tunnels could protect a set of LSPs.\n   When a failure occurs along\
    \ a protected LSP, the PLR redirects\n   traffic into the appropriate bypass tunnel.\
    \  For instance, if link\n   [R2->R3] fails in Example 2, R2 will switch traffic\
    \ received from R1\n   on the protected LSP onto link [R2->R6].  The label will\
    \ be switched\n   for one which will be understood by R4 to indicate the protected\
    \ LSP,\n   and the bypass tunnel's label will then be pushed onto the label-\n\
    \   stack of the redirected packets.  If penultimate-hop-popping is used,\n  \
    \ the merge point in Example 2, R4, will receive the redirected packet\n   with\
    \ a label indicating the protected LSP that the packet is to\n   follow.  If penultimate-hop-popping\
    \ is not used, R4 will pop the\n   bypass tunnel's label and examine the label\
    \ underneath to determine\n   the protected LSP that the packet is to follow.\
    \  When R2 is using the\n   bypass tunnel for protected LSP 1, the traffic takes\
    \ the path\n   [R1->R2->R6->R7->R4->R5]; the bypass tunnel is the connection between\n\
    \   R2 and R4.\n"
- title: 4.  RSVP Extensions
  contents:
  - "4.  RSVP Extensions\n   This specification defines two additional objects, FAST_REROUTE\
    \ and\n   DETOUR, to extend RSVP-TE for fast-reroute signaling.  These new\n \
    \  objects are backward compatible with LSRs that do not recognize them\n   (see\
    \ section 3.10 in [RSVP]).  Both objects can only be carried in\n   RSVP Path\
    \ messages.\n   The SESSION_ATTRIBUTE and RECORD_ROUTE objects are also extended\
    \ to\n   support bandwidth and node protection features.\n"
- title: 4.1.  FAST_REROUTE Object
  contents:
  - "4.1.  FAST_REROUTE Object\n   The FAST_REROUTE object is used to control the\
    \ backup used for the\n   protected LSP.  This specifies the setup and hold priorities,\
    \ session\n   attribute filters, and bandwidth to be used for protection.  It\
    \ also\n   allows a specific local protection method to be requested.  This\n\
    \   object MUST only be inserted into the PATH message by the head-end\n   LER\
    \ and MUST NOT be changed by downstream LSRs.  The FAST_REROUTE\n   object has\
    \ the following format:\n      Class-Num = 205\n      C-Type = 1\n           \
    \  0             1             2             3\n      +-------------+-------------+-------------+-------------+\n\
    \      |       Length (bytes)      |  Class-Num  |   C-Type    |\n      +-------------+-------------+-------------+-------------+\n\
    \      | Setup Prio  | Hold Prio   | Hop-limit   |    Flags    |\n      +-------------+-------------+-------------+-------------+\n\
    \      |                  Bandwidth                            |\n      +-------------+-------------+-------------+-------------+\n\
    \      |                  Include-any                          |\n      +-------------+-------------+-------------+-------------+\n\
    \      |                  Exclude-any                          |\n      +-------------+-------------+-------------+-------------+\n\
    \      |                  Include-all                          |\n      +-------------+-------------+-------------+-------------+\n\
    \      Setup Priority\n         The priority of the backup path with respect to\
    \ taking\n         resources, in the range 0 to 7.  The value 0 is the highest\n\
    \         priority.  Setup Priority is used in deciding whether this\n       \
    \  session can preempt another session.  See [RSVP-TE] for the\n         usage\
    \ on priority.\n      Holding Priority\n         The priority of the backup path\
    \ with respect to holding\n         resources, in the range 0 to 7.  The value\
    \ 0 is the highest\n         priority.  Holding Priority is used in deciding whether\
    \ this\n         session can be preempted by another session.  See [RSVP-TE] for\n\
    \         the usage on priority.\n      Hop-limit\n         The maximum number\
    \ of extra hops the backup path is allowed to\n         take, from current node\
    \ (a PLR) to an MP, with PLR and MP\n         excluded from the count.  For example,\
    \ hop-limit of 0 means\n         that only direct links between PLR and MP can\
    \ be considered.\n      Flags\n         0x01  One-to-One Backup Desired\n    \
    \        Requests protection via the one-to-one backup method.\n         0x02\
    \  Facility Backup Desired\n            Requests protection via the facility backup\
    \ method.\n      Bandwidth\n         Bandwidth estimate; 32-bit IEEE floating\
    \ point integer, in\n         bytes per second.\n      Exclude-any\n         A\
    \ 32-bit vector representing a set of attribute filters\n         associated with\
    \ a backup path, any of which renders a link\n         unacceptable.\n      Include-any\n\
    \         A 32-bit vector representing a set of attribute filters\n         associated\
    \ with a backup path, any of which renders a link\n         acceptable (with respect\
    \ to this test).  A null set (all bits\n         set to zero) automatically passes.\n\
    \      Include-all\n         A 32-bit vector representing a set of attribute filters\n\
    \         associated with a backup path, all of which must be present for\n  \
    \       a link to be acceptable (with respect to this test).  A null\n       \
    \  set (all bits set to zero) automatically passes.\n   The two high-order bits\
    \ of the Class-Num (11) cause nodes that do not\n   understand the object to ignore\
    \ it and pass it forward unchanged.\n   For informational purposes, a different\
    \ C-Type value and format for\n   the FAST_REROUTE object are specified below.\
    \  This is used by legacy\n   implementations.  The meaning of the fields is the\
    \ same as that\n   described for C-Type 1.\n      Class-Num = 205\n      C-Type\
    \ = 7\n             0             1             2             3\n      +-------------+-------------+-------------+-------------+\n\
    \      |       Length (bytes)      |  Class-Num  |   C-Type    |\n      +-------------+-------------+-------------+-------------+\n\
    \      | Setup Prio  | Hold Prio   | Hop-limit   | Reserved    |\n      +-------------+-------------+-------------+-------------+\n\
    \      |                  Bandwidth                            |\n      +-------------+-------------+-------------+-------------+\n\
    \      |                  Include-any                          |\n      +-------------+-------------+-------------+-------------+\n\
    \      |                  Exclude-any                          |\n      +-------------+-------------+-------------+-------------+\n\
    \   Unknown C-Types should be treated as specified in [RSVP] Section\n   3.10.\n"
- title: 4.2.  DETOUR Object
  contents:
  - "4.2.  DETOUR Object\n   The DETOUR object is used in the one-to-one backup method\
    \ to identify\n   detour LSPs.\n"
- title: 4.2.1.  DETOUR Object for IPv4 Address
  contents:
  - "4.2.1.  DETOUR Object for IPv4 Address\n      Class-Num = 63\n      C-Type =\
    \ 7\n            0             1              2             3\n       +-------------+-------------+-------------+-------------+\n\
    \       |       Length (bytes)      |  Class-Num  |   C-Type    |\n       +-------------+-------------+-------------+-------------+\n\
    \       |                      PLR_ID  1                        |\n       +-------------+-------------+-------------+-------------+\n\
    \       |                    Avoid_Node_ID 1                    |\n       +-------------+-------------+-------------+-------------+\n\
    \      //                        ....                          //\n       +-------------+-------------+-------------+-------------+\n\
    \       |                      PLR_ID  n                        |\n       +-------------+-------------+-------------+-------------+\n\
    \       |                    Avoid_Node_ID  n                   |\n       +-------------+-------------+-------------+-------------+\n\
    \      PLR_ID  (1 - n)\n         IPv4 address identifying the PLR that is the\
    \ beginning point of\n         the detour.  Any local address on the PLR can be\
    \ used.\n      Avoid_Node_ID  (1 - n)\n         IPv4 address identifying the immediate\
    \ downstream node that the\n         PLR is trying to avoid.  Any local address\
    \ of the downstream\n         node can be used.  This field is mandatory and is\
    \ used by the\n         MP for the merging rules discussed below.\n"
- title: 4.2.2.  DETOUR Object for IPv6 Address
  contents:
  - "4.2.2.  DETOUR Object for IPv6 Address\n      Class-Num = 63\n      C-Type =\
    \ 8\n             0             1              2             3\n        +-------------+-------------+-------------+-------------+\n\
    \        |       Length (bytes)      |  Class-Num  |   C-Type    |\n        +-------------+-------------+-------------+-------------+\n\
    \        |                      PLR_ID  1                        |\n        +-------------+-------------+-------------+-------------+\n\
    \        |                      PLR_ID  1 (continued)            |\n        +-------------+-------------+-------------+-------------+\n\
    \        |                      PLR_ID  1 (continued)            |\n        +-------------+-------------+-------------+-------------+\n\
    \        |                      PLR_ID  1 (continued)            |\n        +-------------+-------------+-------------+-------------+\n\
    \        |                    Avoid_Node_ID 1                    |\n        +-------------+-------------+-------------+-------------+\n\
    \        |                    Avoid_Node_ID 1 (continued)        |\n        +-------------+-------------+-------------+-------------+\n\
    \        |                    Avoid_Node_ID 1 (continued)        |\n        +-------------+-------------+-------------+-------------+\n\
    \        |                    Avoid_Node_ID 1 (continued)        |\n        +-------------+-------------+-------------+-------------+\n\
    \       //                        ....                          //\n        +-------------+-------------+-------------+-------------+\n\
    \      PLR_ID  (1 - n)\n         An IPv6 128-bit unicast host address identifying\
    \ the PLR that\n         is the beginning point of the detour.  Any local address\
    \ on the\n         PLR can be used.\n      Avoid_Node_ID  (1 - n)\n         An\
    \ IPv6 128-bit unicast host address identifying the immediate\n         downstream\
    \ node that the PLR is trying to avoid.  Any local\n         address on the downstream\
    \ node can be used.  This field is\n         mandatory and is used by the MP for\
    \ the merging rules discussed\n         below.\n   There can be more than one\
    \ pair of (PLR_ID, Avoid_Node_ID) entries in\n   a DETOUR object.  If detour merging\
    \ is desired, after each merging\n   operation, the Detour Merge Point should\
    \ combine all the merged\n   detours in subsequent Path messages.\n   The high-order\
    \ bit of the Class-Num is zero; LSRs that do not support\n   the DETOUR objects\
    \ MUST reject any Path message containing a DETOUR\n   object and send a PathErr\
    \ to notify the PLR.  This PathErr SHOULD be\n   generated as specified in [RSVP]\
    \ for unknown objects with a Class-Num\n   of the form \"0bbbbbbb\".\n   Unknown\
    \ C-Types should be treated as specified in [RSVP] Section\n   3.10.\n"
- title: 4.3.  SESSION_ATTRIBUTE Flags
  contents:
  - "4.3.  SESSION_ATTRIBUTE Flags\n   To request bandwidth and node protection explicitly,\
    \ two new flags\n   are defined in the SESSION_ATTRIBUTE object.\n   For both\
    \ C-Type 1 and 7, the SESSION_ATTRIBUTE object currently has\n   the following\
    \ flags defined [RSVP-TE]:\n      Local protection desired:   0x01\n         This\
    \ flag permits transit routers to use a local repair\n         mechanism that\
    \ may result in violation of the explicit route\n         object.  When a fault\
    \ is detected on an adjacent downstream\n         link or node, a transit node\
    \ may reroute traffic for fast\n         service restoration.\n      Label recording\
    \ desired:   0x02\n         This flag indicates that label information should\
    \ be included\n         when doing a route record.\n      SE Style desired:  \
    \ 0x04\n         This flag indicates that the tunnel ingress node may choose to\n\
    \         reroute this tunnel without tearing it down.  A tunnel egress\n    \
    \     node SHOULD use the SE Style when responding with a Resv\n         message.\
    \  When requesting fast reroute, the head-end LSR SHOULD\n         set this flag;\
    \ this is not necessary for the path-specific\n         method of the one-to-one\
    \ backup method.\n   The following new flags are defined:\n      Bandwidth protection\
    \ desired:  0x08\n         This flag indicates to the PLRs along the protected\
    \ LSP path\n         that a backup path with a bandwidth guarantee is desired.\
    \  The\n         bandwidth to be guaranteed is that of the protected LSP, if no\n\
    \         FAST_REROUTE object is included in the PATH message; if a\n        \
    \ FAST_REROUTE object is in the PATH message, then the bandwidth\n         specified\
    \ therein is to be guaranteed.\n      Node protection desired: 0x10\n        \
    \ This flag indicates to the PLRs along a protected LSP path that\n         a\
    \ backup path that bypasses at least the next node of the\n         protected\
    \ LSP is desired.\n"
- title: 4.4.  RRO IPv4/IPv6 Sub-object Flags
  contents:
  - "4.4.  RRO IPv4/IPv6 Sub-object Flags\n   To report whether bandwidth and/or node\
    \ protection are provided as\n   requested, we define two new flags in the RRO\
    \ IPv4 sub-object.\n   The RRO IPv4 and IPv6 address sub-objects currently have\
    \ the\n   following flags defined [RSVP-TE]:\n      Local protection available:\
    \  0x01\n         Indicates that the link downstream of this node is protected\n\
    \         via a local repair mechanism, which can be either one-to-one or\n  \
    \       facility backup.\n      Local protection in use:  0x02\n         Indicates\
    \ that a local repair mechanism is in use to maintain\n         this tunnel (usually\
    \ in the face of an outage of the link it\n         was previously routed over,\
    \ or an outage of the neighboring\n         node).\n   Two new flags are defined:\n\
    \      Bandwidth protection:  0x04\n         The PLR will set this bit when the\
    \ protected LSP has a backup\n         path that is guaranteed to provide the\
    \ desired bandwidth that\n         is specified in the FAST_REROUTE object or\
    \ the bandwidth of the\n         protected LSP, if no FAST_REROUTE object was\
    \ included.  The PLR\n         may set this whenever the desired bandwidth is\
    \ guaranteed; the\n         PLR MUST set this flag when the desired bandwidth\
    \ is guaranteed\n         and the \"bandwidth protection desired\" flag was set\
    \ in the\n         SESSION_ATTRIBUTE object.  If the requested bandwidth is not\n\
    \         guaranteed, the PLR MUST NOT set this flag.\n      Node protection:\
    \  0x08\n         The PLR will set this bit when the protected LSP has a backup\n\
    \         path that provides protection against a failure of the next LSR\n  \
    \       along the protected LSP.  The PLR may set this whenever node\n       \
    \  protection is provided by the protected LSP's backup path; the\n         PLR\
    \ MUST set this flag when the node protection is provided and\n         the \"\
    node protection desired\" flag was set in the\n         SESSION_ATTRIBUTE object.\
    \  If node protection is not provided,\n         the PLR MUST NOT set this flag.\
    \  Thus, if a PLR could only set\n         up a link-protection backup path, the\
    \ \"Local protection\n         available\" bit will be set, but the \"Node protection\"\
    \ bit will\n         be cleared.\n"
- title: 5.  Head-End Behavior
  contents:
  - "5.  Head-End Behavior\n   The head-end of an LSP determines whether local protection\
    \ should be\n   requested for that LSP and which local protection method is desired\n\
    \   for the protected LSP.  The head-end also determines what constraints\n  \
    \ should be requested for the backup paths of a protected LSP.\n   To indicate\
    \ that an LSP should be locally protected, the head-end LSR\n   MUST either set\
    \ the \"local protection desired\" flag in the\n   SESSION_ATTRIBUTE object or\
    \ include a FAST_REROUTE object in the PATH\n   message, or both.  The \"local\
    \ protection desired\" flag in the\n   SESSION_ATTRIBUTE object SHOULD always\
    \ be set.  If a head-end LSR\n   signals a FAST_REROUTE object, it MUST be stored\
    \ for Path refreshes.\n   The head-end LSR of a protected LSP MUST set the \"\
    label recording\n   desired\" flag in the SESSION_ATTRIBUTE object.  This facilitates\
    \ the\n   use of the facility backup method.  If node protection is desired,\n\
    \   the head-end LSR should set the \"node protection desired\" flag in the\n\
    \   SESSION_ATTRIBUTE object; otherwise, this flag should be cleared.\n   Similarly,\
    \ if a guarantee of bandwidth protection is desired, then\n   the \"bandwidth\
    \ protection desired\" flag in the SESSION_ATTRIBUTE\n   object should be set;\
    \ otherwise, this flag should be cleared.  If the\n   head-end LSR determines\
    \ that control of the backup paths for the\n   protected LSP is desired, then\
    \ the LSR should include the\n   FAST_REROUTE object.  The PLRs will use the attribute\
    \ filters,\n   bandwidth, hop-limit, and priorities to determine the backup paths.\n\
    \   If the head-end LSR desires that the one-to-one backup method be used\n  \
    \ for the protected LSP, then the head-end LSR should include a\n   FAST_REROUTE\
    \ object and set the \"one-to-one backup desired\" flag.  If\n   the head-end\
    \ LSR desires that the protected LSP be protected via the\n   facility backup\
    \ method, then the head-end LSR should include a\n   FAST_REROUTE object and set\
    \ the \"facility backup desired\" flag.  The\n   lack of a FAST_REROUTE object,\
    \ or having both these flags clear,\n   should be treated by PLRs as a lack of\
    \ preference.  If both flags are\n   set, a PLR may use either method or both.\n\
    \   The head-end LSR of a protected LSP MUST support the additional flags\n  \
    \ defined in Section 4.4 being set or clear in the RRO IPv4 and IPv6\n   sub-objects.\
    \  The head-end LSR of a protected LSP MUST support the\n   RRO Label sub-object.\n\
    \   If the head-end LSR of an LSP determines that local protection is\n   newly\
    \ desired, this SHOULD be signaled via make-before-break.\n"
- title: 6.  Point of Local Repair (PLR) Behavior
  contents:
  - "6.  Point of Local Repair (PLR) Behavior\n   Every LSR along a protected LSP\
    \ (except the egress) MUST follow the\n   PLR behavior described in this document.\n\
    \   A PLR SHOULD support the FAST_REROUTE object, the \"local protection\n   desired\"\
    , \"label recording desired\", \"node protection desired\", and\n   \"bandwidth\
    \ protection desired\" flags in the SESSION_ATTRIBUTE object,\n   and the \"local\
    \ protection available\", \"local protection in use\",\n   \"bandwidth protection\"\
    , and \"node protection\" flags in the RRO IPv4\n   and IPv6 sub-objects.  A PLR\
    \ MAY support the DETOUR object.\n   A PLR MUST consider an LSP to have asked\
    \ for local protection if the\n   \"local protection desired\" flag is set in\
    \ the SESSION_ATTRIBUTE\n   object and/or the FAST_REROUTE object is included.\
    \  If the\n   FAST_REROUTE object is included, a PLR SHOULD consider providing\n\
    \   one-to-one protection if the \"one-to-one desired\" is set, and it\n   SHOULD\
    \ consider providing facility backup if the \"facility backup\n   desired\" flag\
    \ is set.  If the \"node protection desired\" flag is set,\n   the PLR SHOULD\
    \ try to provide node protection; if this is not\n   feasible, the PLR SHOULD\
    \ then try to provide link protection.  If the\n   \"bandwidth protection guaranteed\"\
    \ flag is set, the PLR SHOULD try to\n   provide a bandwidth guarantee; if this\
    \ is not feasible, the PLR\n   SHOULD then try to provide a backup without a guarantee\
    \ of the full\n   bandwidth.\n   The following treatment for the RRO IPv4 or IPv6\
    \ sub-object's flags\n   must be followed if an RRO is included in the protected\
    \ LSP's RESV\n   message.  Based on this additional information, the head-end\
    \ may take\n   appropriate actions.\n    - Until a PLR has a backup path available,\
    \ the PLR MUST clear the\n      relevant four flags in the corresponding RRO IPv4\
    \ or IPv6 sub-\n      object.\n    - Whenever the PLR has a backup path available,\
    \ the PLR MUST set the\n      \"local protection available\" flag.  If no established\
    \ one-to-one\n      backup LSP or bypass tunnel exists, or if the one-to-one LSP\
    \ and\n      the bypass tunnel is in \"DOWN\" state, the PLR MUST clear the\n\
    \      \"local protection available\" flag in its IPv4 (or IPv6) address\n   \
    \   sub-object of the RRO and SHOULD send the updated RESV.\n    - The PLR MUST\
    \ clear the \"local protection in use\" flag unless it is\n      actively redirecting\
    \ traffic into the backup path instead of along\n      the protected LSP.\n  \
    \  - The PLR SHOULD also set the \"node protection\" flag if the backup\n    \
    \  path protects against the failure of the immediate downstream\n      node,\
    \ and, if the path does not, the PLR SHOULD clear the \"node\n      protection\"\
    \ flag.  This MUST be done if the \"node protection\n      desired\" flag was\
    \ set in the SESSION_ATTRIBUTE object.\n    - The PLR SHOULD set the \"bandwidth\
    \ protection\" flag if the backup\n      path offers a bandwidth guarantee, and,\
    \ if the path does not, the\n      PLR SHOULD clear the \"bandwidth protection\"\
    \ flag.  This MUST be\n      done if the \"bandwidth protection desired\" flag\
    \ was set in the\n      SESSION_ATTRIBUTE object.\n"
- title: 6.1.  Signaling a Backup Path
  contents:
  - "6.1.  Signaling a Backup Path\n   A number of objectives must be met to obtain\
    \ a satisfactory signaling\n   solution.  These are summarized as follows:\n \
    \     1. Unambiguously and uniquely identifying backup paths.\n      2. Unambiguously\
    \ associating protected LSPs with their backup\n         paths.\n      3. Working\
    \ with both global and non-global label spaces.\n      4. Allowing merging of\
    \ backup paths.\n      5. Maintaining RSVP state during and after fail-over.\n\
    \   LSP tunnels are identified by a combination of the SESSION and\n   SENDER_TEMPLATE\
    \ objects [RSVP-TE].  The relevant fields are as\n   follows.\n      IPv4 (or\
    \ IPv6) tunnel end point address\n         IPv4 (or IPv6) address of the egress\
    \ node for the tunnel.\n      Tunnel ID\n         A 16-bit identifier used in\
    \ the SESSION that remains constant\n         over the life of the tunnel.\n \
    \     Extended Tunnel ID\n         A 32-bit (IPv4) or 128-bit (IPv6) identifier\
    \ used in the\n         SESSION that remains constant over the life of the tunnel.\n\
    \         Normally it is set to all zero.  Ingress nodes that wish to\n      \
    \   narrow the scope of a SESSION to the ingress-egress pair may\n         place\
    \ their IP address here as a globally unique identifier.\n      IPv4 (or IPv6)\
    \ tunnel sender address\n         IPv4 (or IPv6) address for a sender node.\n\
    \      LSP ID\n         A 16-bit identifier used in the SENDER_TEMPLATE and the\n\
    \         FILTER_SPEC, which can be changed to allow a sender to share\n     \
    \    resources with itself.\n   The first three of these are in the SESSION object\
    \ and are the basic\n   identification for the tunnel.  Setting the \"Extended\
    \ Tunnel ID\" to\n   an IP address of the head-end LSR allows the scope of the\
    \ SESSION to\n   be narrowed to only LSPs sent by that LSR.  A backup LSP is\n\
    \   considered part of the same session as its protected LSP; therefore\n   these\
    \ three cannot be varied.\n   The last two are in the SENDER_TEMPLATE.  Multiple\
    \ LSPs in the same\n   SESSION may be protected and may take different routes;\
    \ this is\n   common when a tunnel is rerouted using make-before-break.  A backup\n\
    \   path must be clearly identified with its protected LSP to allow\n   correct\
    \ merging and state treatment.  Therefore, a backup path must\n   inherit its\
    \ LSP ID from the associated protected LSP.  Thus, the only\n   field in the SESSION\
    \ and SENDER_TEMPLATE objects that could be varied\n   between a backup path and\
    \ a protected LSP is the \"IPv4 (or IPv6)\n   tunnel sender address\" in the SENDER_TEMPLATE.\n\
    \   There are two different methods to uniquely identify a backup path,\n   described\
    \ below.\n"
- title: '6.1.1.  Backup Path Identification: Sender Template-Specific'
  contents:
  - "6.1.1.  Backup Path Identification: Sender Template-Specific\n   In this approach,\
    \ the SESSION object and the LSP_ID are copied from\n   the protected LSP.  The\
    \ \"IPv4 tunnel sender address\" is set to an\n   address of the PLR.  If the\
    \ head-end of a tunnel is also acting as\n   the PLR, it MUST choose an IP address\
    \ different from the one used in\n   the SENDER_TEMPLATE of the original LSP tunnel.\n\
    \   When the sender template-specific approach is used, the protected\n   LSPs\
    \ and the backup paths SHOULD use the Shared Explicit (SE) style.\n   This allows\
    \ bandwidth sharing between multiple backup paths.  The\n   backup paths and the\
    \ protected LSP MAY be merged by the Detour Merge\n   Points, when the ERO from\
    \ the MP to the egress is the same on each\n   LSP to be merged, as specified\
    \ in [RSVP-TE].\n"
- title: '6.1.2.  Backup Path Identification: Path-Specific'
  contents:
  - "6.1.2.  Backup Path Identification: Path-Specific\n   In this approach, rather\
    \ than vary the SESSION or SENDER_TEMPLATE\n   objects, an implementation uses\
    \ a new object, the DETOUR object, to\n   distinguish between PATH messages for\
    \ a backup path and the protected\n   LSP.\n   Thus, the backup paths use the\
    \ same SESSION and SENDER_TEMPLATE\n   objects as the ones used in the protected\
    \ LSP.  The presence of a\n   DETOUR object in Path messages signifies a backup\
    \ path; the presence\n   of a FAST_REROUTE object and/or the \"local protection\
    \ requested\" flag\n   in the SESSION_ATTRIBUTE object indicates a protected LSP.\n\
    \   In the path message-specific approach, an LSR merges Path messages\n   that\
    \ are received with the same SESSION and SENDER_TEMPLATE objects\n   and that\
    \ also have the same next-hop object.  Without this behavior,\n   it would be\
    \ impossible to associate the multiple RESV messages with\n   the backup paths.\
    \  However, this merging behavior reduces the total\n   number of RSVP states\
    \ inside the network at the expense of merging\n   LSPs with different EROs.\n"
- title: 6.2.  Procedures for Backup Path Computation
  contents:
  - "6.2.  Procedures for Backup Path Computation\n   Before a PLR can create a detour\
    \ or a bypass tunnel, the desired\n   explicit route must be determined.  This\
    \ can be done using a CSPF\n   (Constraint-based Shortest Path First) computation.\
    \  Before this CSPF\n   computation, the following information must be collected\
    \ at a PLR:\n      - The list of downstream nodes that the protected LSP passes\n\
    \        through.  This information is readily available from the\n        RECORD_ROUTE\
    \ objects during LSP setup.  This information is also\n        available from\
    \ the ERO.  However, if the ERO contains loose\n        sub-objects, the ERO may\
    \ not provide adequate information.\n      - The downstream links/nodes that we\
    \ want to protect against.\n        Once again, this information is learned from\
    \ the RECORD_ROUTE\n        objects.  Whether node protection is desired is determined\
    \ by\n        the \"node protection\" flag in the SESSION_ATTRIBUTE object and\n\
    \        local policy.\n      - The upstream uni-directional links that the protected\
    \ LSP passes\n        through.  This information is learned from the RECORD_ROUTE\n\
    \        objects; it is only needed for setting up one-to-one protection.\n  \
    \      In the path-specific method, it is necessary to avoid the detour\n    \
    \    and the protected LSP sharing a common next-hop upstream of the\n       \
    \ failure.  In the sender template-specific mode, this same\n        restriction\
    \ is necessary to avoid sharing bandwidth between the\n        detour and its\
    \ protected LSP, where that bandwidth has been\n        reserved only once.\n\
    \      - The link attribute filters to be applied.  These are derived\n      \
    \  from the FAST_REROUTE object, if it is included in the PATH\n        message,\
    \ or from the SESSION_ATTRIBUTE object otherwise.\n      - The bandwidth to be\
    \ used is found in the FAST_REROUTE object, if\n        it is included in the\
    \ PATH message, or in the SESSION_ATTRIBUTE\n        object otherwise.  Local\
    \ policy may modify the bandwidth to be\n        reserved.\n      - The hop-limit,\
    \ if a FAST_REROUTE object was included in the PATH\n        message.\n   When\
    \ a CSPF algorithm is used to compute the backup route, the\n   following constraints\
    \ must be satisfied:\n      - For detour LSPs, the destination MUST be the tail-end\
    \ of the\n        protected LSP.  For bypass tunnels (Section 7), the destination\n\
    \        MUST be the address of the MP.\n      - When one-to-one protection is\
    \ set up by using the path-specific\n        method, a detour MUST not traverse\
    \ the upstream links of the\n        protected LSP in the same direction.  This\
    \ prevents the\n        possibility of early merging of the detour into the protected\n\
    \        LSP.  When one-to-one protection is set up using the sender-\n      \
    \  template-specific method, a detour should not traverse the\n        upstream\
    \ links of the protected LSP in the same direction.  This\n        prevents sharing\
    \ the bandwidth between a protected LSP and its\n        backup upstream of the\
    \ failure where the bandwidth would be used\n        twice in the event of a failure.\n\
    \      - The backup LSP cannot traverse the downstream node and/or link\n    \
    \    whose failure is being protected against.  Note that if the PLR\n       \
    \ is the penultimate hop, node protection is not possible, and\n        only the\
    \ downstream link can be avoided.  The backup path may be\n        computed to\
    \ be SRLG disjoint from the downstream node and/or\n        link being avoided.\n\
    \      - The backup path must satisfy the resource requirements of the\n     \
    \   protected LSP.  This includes the link attribute filters,\n        bandwidth,\
    \ and hop limits determined from the FAST_REROUTE\n        object and the SESSION_ATTRIBUTE\
    \ object.\n   If such computation succeeds, the PLR should attempt to establish\
    \ a\n   backup path.  The PLR may schedule a re-computation at a later time\n\
    \   to discover better paths that might have emerged.  If for any reason,\n  \
    \ the PLR is unable to bring up a backup path, it must schedule a retry\n   at\
    \ a later time.\n"
- title: 6.3.  Signaling Backups for One-to-One Protection
  contents:
  - "6.3.  Signaling Backups for One-to-One Protection\n   Once a PLR has decided\
    \ to protect an LSP locally with one-to-one\n   backup and has identified the\
    \ desired path, it signals for the\n   detour.\n   The following describes the\
    \ transformation to be performed upon the\n   protected LSP's PATH message to\
    \ create the detour LSP's PATH message.\n      - If the sender template-specific\
    \ method is to be used, then the\n        PLR MUST change the \"IPv4 (or IPv6)\
    \ tunnel sender address\" of\n        the SENDER_TEMPLATE to an address belonging\
    \ to the PLR that is\n        not the same as that used for the protected LSP.\
    \  Additionally,\n        the DETOUR object MAY be added to the PATH message.\n\
    \      - If the path-specific method is to be used, then the PLR MUST add\n  \
    \      a DETOUR object to the PATH message.\n      - The SESSION_ATTRIBUTE flags\
    \ \"Local protection desired\",\n        \"Bandwidth protection desired\", and\
    \ \"Node protection desired\"\n        MUST be cleared.  The \"Label recording\
    \ desired\" flag MAY be\n        modified.  If the Path Message contained a FAST_REROUTE\
    \ object\n        and the ERO is not completely strict, the Include-any, Exclude-\n\
    \        any, and Include-all fields of the FAST_REROUTE object SHOULD be\n  \
    \      copied to the corresponding fields of the SESSION_ATTRIBUTE\n        object.\n\
    \      - If the protected LSP's Path message contained a FAST_REROUTE\n      \
    \  object, this object MUST be removed from the detour LSP's PATH\n        message.\n\
    \      - The PLR MUST generate an EXPLICIT_ROUTE object toward the\n        egress.\
    \  First, the PLR must remove all sub-objects preceding\n        the first address\
    \ belonging to the Merge Point.  Then the PLR\n        SHOULD add sub-objects\
    \ corresponding to the desired backup path\n        between the PLR and the MP.\n\
    \      - The SENDER_TSPEC object SHOULD contain the bandwidth information\n  \
    \      from the received FAST_REROUTE object, if included in the\n        protected\
    \ LSP's PATH message.\n      - The RSVP_HOP object containing one of the PLR's\
    \ IP address.\n      - The detour LSPs MUST use the same reservation style as\
    \ the\n        protected LSP.  This must be correctly reflected in the\n     \
    \   SESSION_ATTRIBUTE object.\n     Detour LSPs operate like regular LSPs.  Once\
    \ a detour path is\n     successfully computed and the detour LSP is established,\
    \ the PLR\n     need not compute detour routes again, unless (1) the contents\
    \ of\n     FAST_REROUTE have changed or (2) the downstream interface and/or\n\
    \     the nexthop router for a protected LSP has changed.  The PLR may\n     recompute\
    \ detour routes at any time.\n"
- title: 6.3.1.  Make-before-Break with Detour LSPs
  contents:
  - "6.3.1.  Make-before-Break with Detour LSPs\n   If the sender template-specific\
    \ method is used, it is possible to do\n   make-before-break with detour LSPs.\
    \  This is done using two different\n   IP addresses belonging to the PLR (which\
    \ were not used in the\n   SENDER_TEMPLATE of the protected LSP).  If the current\
    \ detour LSP\n   uses the first IP address in its SENDER_TEMPLATE, then the new\
    \ detour\n   LSP should be signaled by using the second IP address in its\n  \
    \ SENDER_TEMPLATE.  Once the new detour LSP has been created, the\n   current\
    \ detour LSP can be torn down.  By alternating the use of these\n   IP addresses,\
    \ the current and new detour LSPs will have different\n   SENDER_TEMPLATES and,\
    \ thus, different state in the downstream LSRs.\n   This make-before-break mechanism,\
    \ which changes the PLR IP address in\n   the DETOUR object instead, is not feasible\
    \ with the path-specific\n   method, as the PATH messages for new and current\
    \ detour LSPs may be\n   merged if they share a common next-hop.\n"
- title: 6.3.2.  Message Handling
  contents:
  - "6.3.2.  Message Handling\n   LSRs must process the detour LSPs independently\
    \ of the protected LSPs\n   to avoid triggering the LSP loop detection procedure\
    \ described in\n   [RSVP-TE].\n   The PLR MUST not mix the messages for the protected\
    \ and the detour\n   LSPs.  When a PLR receives Resv, ResvTear, and PathErr messages\
    \ from\n   the downstream detour destination, the messages MUST not be forwarded\n\
    \   upstream.  Similarly, when a PLR receives ResvErr and ResvConf\n   messages\
    \ from a protected LSP, it MUST not propagate them onto the\n   associated detour\
    \ LSP.\n   A session tear-down request is normally originated by the sender via\n\
    \   PathTear messages.  When a PLR node receives a PathTear message from\n   upstream,\
    \ it MUST delete both the protected and the detour LSPs.  The\n   PathTear messages\
    \ MUST propagate to both protected and detour LSPs.\n   During error conditions,\
    \ the LSRs may send ResvTear messages to fix\n   problems on the failing path.\
    \  When a PLR node receives the ResvTear\n   messages from downstream for a protected\
    \ LSP, as long as a detour is\n   up, the ResvTear messages MUST not be sent further\
    \ upstream.\n   PathErrs should be treated similarly.\n"
- title: 6.3.3.  Local Reroute of Traffic onto Detour LSP
  contents:
  - "6.3.3.  Local Reroute of Traffic onto Detour LSP\n   When the PLR detects a failure\
    \ on the protected LSP, the PLR MUST\n   rapidly switch packets to the protected\
    \ LSP's backup LSP instead of\n   to the protected LSP's normal out-segment. \
    \ The goal of this method\n   is to effect the redirection within 10s of milliseconds.\n\
    \               L32      L33      L34      L35\n           R1-------R2-------R3-------R4-------R5\n\
    \                    |                 |\n               L46  |              \
    \   | L44\n                    |       L47       |\n                    R6----------------R7\n\
    \            Protected LSP: [R1->R2->R3->R4->R5]\n            Detour LSP:    [R2->R6->R7->R4]\n\
    \                 Example 3.  Redirect to Detour\n   In Example 3, if the link\
    \ [R2->R3] fails, R2 would do the following.\n   Any traffic received on link\
    \ [R1->R2] with label L32 would be sent on\n   link [R2->R6] with label L46 (along\
    \ the detour LSP) instead of on\n   link [R3->R4] with label L34 (along the protected\
    \ LSP).  The merge\n   point R4 would recognize that packets received on link\
    \ [R7->R4] with\n   label L44 should be sent on link [R4->R5] with label L35 and\
    \ that\n   they should be merged with the protected LSP.\n"
- title: 6.4.  Signaling for Facility Protection
  contents:
  - "6.4.  Signaling for Facility Protection\n   A PLR may use one or more bypass\
    \ tunnels to protect against the\n   failure of a link and/or a node.  These bypass\
    \ tunnels may be set up\n   in advance or may be dynamically created as new protected\
    \ LSPs are\n   signaled.\n"
- title: 6.4.1.  Discovering Downstream Labels
  contents:
  - "6.4.1.  Discovering Downstream Labels\n   To support facility backup, the PLR\
    \ must determine a label that will\n   indicate to the MP that packets received\
    \ with that label should be\n   switched along the protected LSP.  This can be\
    \ done without\n   explicitly signaling the backup path if the MP uses a label\
    \ space\n   global to that LSR.\n   As described in Section 6, the head-end LSR\
    \ MUST set the \"label\n   recording requested\" flag in the SESSION_ATTRIBUTE\
    \ object for LSPs\n   requesting local protection.  This will cause (as specified\
    \ in\n   [RSVP-TE]) all LSRs to record their INBOUND labels and to note via a\n\
    \   flag whether the label is global to the LSR.  Thus, when a protected\n   LSP\
    \ is first signaled through a PLR, the PLR can examine the RRO in\n   the Resv\
    \ message and learn about the incoming labels that are used by\n   all downstream\
    \ nodes for this LSP\n   When MPs use per-interface label spaces, the PLR must\
    \ send Path\n   messages (for each protected LSP using a bypass tunnel) via that\n\
    \   bypass tunnel prior to the failure in order to discover the\n   appropriate\
    \ MP label.  The signaling procedures for this are in\n   Section 6.4.3 below.\n"
- title: 6.4.2.  Procedures for the PLR before Local Repair
  contents:
  - "6.4.2.  Procedures for the PLR before Local Repair\n   A PLR that determines\
    \ to use facility-backup to protect a given LSP\n   should select a bypass tunnel\
    \ to use, taking into account whether\n   node protection is to be provided, what\
    \ bandwidth was requested,\n   whether a bandwidth guarantee is desired, and what\
    \ link attribute\n   filters were specified in the FAST_REROUTE object.  The selection\
    \ of\n   a bypass tunnel for a protected LSP is performed by the PLR when the\n\
    \   LSP is first set up.\n"
- title: 6.4.3.  Procedures for the PLR during Local Repair
  contents:
  - "6.4.3.  Procedures for the PLR during Local Repair\n   When the PLR detects a\
    \ link or/and node failure condition, it has to\n   reroute the data traffic onto\
    \ the bypass tunnel and to start sending\n   the control traffic for the protected\
    \ LSP onto the bypass tunnel.\n   The backup tunnel is identified by using the\
    \ sender template-specific\n   method.  The procedures to follow are similar to\
    \ those described in\n   Section 6.3.\n      - The SESSION is unchanged.\n   \
    \   - The SESSION_ATTRIBUTE is unchanged except as follows:  The\n        \"Local\
    \ protection desired\", \"Bandwidth protection desired\", and\n        \"Node\
    \ protection desired\" flags SHOULD be cleared.  The \"Label\n        recording\
    \ desired\" MAY be modified.\n      - The IPv4 (or IPv6) tunnel sender address\
    \ of the SENDER_TEMPLATE\n        is set to an address belonging to the PLR.\n\
    \      - The RSVP_HOP object MUST contain an IP source address belonging\n   \
    \     to the PLR.  Consequently, the MP will send messages back to the\n     \
    \   PLR with that IP address as the destination.\n      - The PLR MUST generate\
    \ an EXPLICIT_ROUTE object toward the\n        egress.  Detailed ERO processing\
    \ is described below.\n      - The RRO object may have to be updated as described\
    \ in Section\n        6.5.\n   The PLR sends Path, PathTear, and ResvConf messages\
    \ via the backup\n   tunnel.  The MP sends Resv, ResvTear, and PathErr messages\
    \ by sending\n   them directly to the address in the RSVP_HOP object, as specified\
    \ in\n   [RSVP].\n   If it is necessary to signal the backup prior to failure\
    \ to determine\n   the MP label to use, then the same Path message is sent.  In\
    \ this\n   case, the PLR SHOULD continue to send Path messages for the protected\n\
    \   LSP along the normal route.  PathTear messages should be duplicated,\n   with\
    \ one sent along the normal route and one sent through the bypass\n   tunnel.\
    \  The MP should duplicate the Resv and ResvTear messages and\n   send them to\
    \ both the PLR and the LSR indicated by the protected\n   LSP's RSVP_HOP object.\n"
- title: 6.4.4.  Processing Backup Tunnel's ERO
  contents:
  - "6.4.4.  Processing Backup Tunnel's ERO\n   Procedures for ERO processing are\
    \ described in [RSVP-TE].  This\n   section describes additional ERO update procedures\
    \ for Path messages\n   that are sent over bypass tunnels.  If normal ERO processing\
    \ rules\n   were followed, the Merge Point would examine the first sub-object\
    \ and\n   likely reject it (Bad initial sub-object).  This is because the\n  \
    \ unmodified ERO might contain the IP address of a bypassed node (in\n   the case\
    \ of a NNHOP Bypass Tunnel) or of an interface that is\n   currently down (in\
    \ the case of a NHOP Backup Tunnel).  For this\n   reason, the PLR invokes the\
    \ following ERO procedures before sending a\n   Path message via a bypass tunnel.\n\
    \      Sub-objects belonging to abstract nodes that precede the Merge\n      Point\
    \ are removed, along with the first sub-object belonging to\n      the MP.  A\
    \ sub-object identifying the Backup Tunnel destination is\n      then added.\n\
    \      More specifically, the PLR MUST:\n         - remove all the sub-objects\
    \ proceeding the first address\n           belonging to the MP, and\n        \
    \ - replace this first MP address with an IP address of the MP.\n           (Note\
    \ that this could be same address that was just removed.)\n"
- title: 6.5.  PLR Procedures during Local Repair
  contents:
  - "6.5.  PLR Procedures during Local Repair\n   In addition to the method-specific\
    \ signaling and packet treatment,\n   there is common signaling that should be\
    \ followed.\n   During fast reroute, for each protected LSP containing an RRO\
    \ object,\n   the PLR obtains the RRO from the protected LSP's stored RESV.  The\n\
    \   PLR MUST update the IPv4 or IPv6 sub-object it inserted into the RRO\n   by\
    \ setting the \"Local protection in use\" and \"Local Protection\n   Available\"\
    \ flags.\n"
- title: 6.5.1.  Notification of Local Repair
  contents:
  - "6.5.1.  Notification of Local Repair\n   In many situations, the route used during\
    \ local repair will be less\n   than optimal.  The purpose of local repair is\
    \ to keep high priority\n   and loss-sensitive traffic flowing while a more optimal\
    \ re-routing of\n   the tunnel can be effected by the head-end of the tunnel.\
    \  Thus, the\n   head-end has to know of the failure so that it may re-signal\
    \ an\n   optimal LSP.\n   To provide this notification, the PLR SHOULD send a\
    \ Path Error\n   message with error code of \"Notify\" (Error code = 25) and an\
    \ error\n   value field of ss00 cccc cccc cccc, where ss=00 and the sub-code =\
    \ 3\n   (\"Tunnel locally repaired\") (see [RSVP-TE]).\n   Additionally, a head-end\
    \ may detect that an LSP has to be moved to a\n   more optimal path by noticing\
    \ failures reported via the IGP.  Note\n   that in the case of inter-area TE LSP\
    \ (TE LSP spanning areas), the\n   head-end LSR will have to rely exclusively\
    \ on Path Error messages to\n   be informed of failures in another area.\n"
- title: 6.5.2.  Revertive Behavior
  contents:
  - "6.5.2.  Revertive Behavior\n   Upon a failure event, a protected TE LSP is locally\
    \ repaired by the\n   PLR.  There are two basic strategies for restoring the TE\
    \ LSP to a\n   full working path.\n    - Global revertive mode: The head-end LSR\
    \ of each tunnel is\n      responsible for reoptimizing the TE LSPs that used\
    \ the failed\n      resource.  There are several potential reoptimization triggers:\n\
    \      RSVP error messages, inspection of OSPF LSAs or ISIS LSPs, and\n      timers.\
    \  Note that this re-optimization process may proceed as\n      soon as the failure\
    \ is detected.  It is not tied to the\n      restoration of the failed resource.\n\
    \    - Local revertive mode: Upon detecting that the resource is\n      restored,\
    \ the PLR re-signals each of the TE LSPs that used to be\n      routed over the\
    \ restored resource.  Every TE LSP successfully\n      re-signaled along the restored\
    \ resource is switched back.\n   There are several circumstances in which a local\
    \ revertive mode might\n   not be desirable.  In the case of resource flapping\
    \ (not an uncommon\n   failure type), this could generate multiple traffic disruptions.\n\
    \   Therefore, in the local revertive mode, the PLR should implement a\n   means\
    \ to dampen the re-signaling process in order to limit potential\n   disruptions\
    \ due to flapping.\n   In the local revertive mode, any TE LSP will be switched\
    \ back,\n   without any distinction, whereas in the global revertive mode, the\n\
    \   decision to reuse the restored resource is made by the head-end LSR\n   based\
    \ on the TE LSP attributes.  When the head-end learns of the\n   failure, it may\
    \ reoptimize the protected LSP tunnel along a different\n   and more optimal path,\
    \ as it has a more complete view of the\n   resources and TE LSP constraints.\
    \  This means that the old LSP that\n   has been reverted to may no longer be\
    \ optimal.  Note that in the case\n   of inter-area LSP, where the TE LSP path\
    \ computation might be done on\n   some Path Computation Element, the reoptimization\
    \ process can\n   still be triggered on the Head-End LSP.  The local revertive\
    \ mode\n   is optional.\n   However, there are circumstances in which the head-end\
    \ does not have\n   the ability to reroute the TE LSP (e.g., if the protected\
    \ LSP is\n   pinned down, as may be desirable if the paths are determined by using\n\
    \   an off-line optimization tool), or if the head-end does not have the\n   complete\
    \ TE topology information (depending on the path computation\n   scenario).  In\
    \ those cases, the local revertive mode might be an\n   interesting option.\n\
    \   The globally revertive mode SHOULD always be used.  Note that a link\n   or\
    \ node \"failure\" may be due to the facility being permanently taken\n   out\
    \ of service.  Local revertive mode is optional.  When used in\n   combination,\
    \ the global mode may rely solely on timers to do the\n   reoptimization.  When\
    \ local revertive mode is not used, head-end LSRs\n   SHOULD react to RSVP error\
    \ messages and/or IGP indications in order\n   to make a timely response.\n  \
    \ Interoperability: If a PLR is configured with the local revertive\n   mode but\
    \ the MP is not, any attempt from the PLR to resignal the TE\n   LSP over the\
    \ restored resource will fail, as the MP will not send any\n   Resv message. \
    \ The PLR will still refresh the TE LSP over the backup\n   tunnel.  The TE LSP\
    \ will not revert to the restored resource;\n   instead, it will continue to use\
    \ the backup until it is re-optimized.\n"
- title: 7.  Merge Node Behavior
  contents:
  - "7.  Merge Node Behavior\n   An LSR is a Merge Point if it receives the Path message\
    \ for a\n   protected LSP and one or more messages for a backup LSP that is\n\
    \   merged into that protected LSP.  In the one-to-one backup method, the\n  \
    \ LSR is aware that it is a merge node prior to failure.  In the\n   facility\
    \ backup method, the LSR may not know that it is a Merge Point\n   until a failure\
    \ occurs and it receives a backup LSP's Path message.\n   Therefore, an LSR that\
    \ is on the path of a protected LSP SHOULD\n   always assume that it is a merge\
    \ point.\n   When a MP receives a backup LSP's Path message through a bypass\n\
    \   tunnel, the Send_TTL in the Common Header may not match the TTL of\n   the\
    \ IP packet within which the Path message was transported.  This is\n   expected\
    \ behavior.\n"
- title: 7.1.  Handling Backup Path Messages before Failure
  contents:
  - "7.1.  Handling Backup Path Messages before Failure\n   There are two circumstances\
    \ in which a Merge Point will receive Path\n   messages for a backup path prior\
    \ to failure.  In the first case, if a\n   PLR is providing local protection via\
    \ the one-to-one backup method,\n   the detour will be signaled and must be properly\
    \ handled by the MP.\n   In this case, the backup LSP may be signaled via the\
    \ sender\n   template-specific method or via the path-specific method.\n   In\
    \ the second case, if the Merge Point does not provide labels global\n   to the\
    \ MP and record them in a Label sub-object of the RRO, or if the\n   PLR does\
    \ not use such recorded information, the PLR may signal the\n   backup path as\
    \ described in Section 6.4.1.  This will determine the\n   label to use if the\
    \ PLR is providing protection according to the\n   facility backup method.  In\
    \ this case, the backup LSP is signaled via\n   the sender template-specific method.\n\
    \   The reception of a backup LSP's path message does not indicate that a\n  \
    \ failure has occurred or that the incoming protected LSP will no\n   longer be\
    \ used.\n"
- title: 7.1.1.  Merging Backup Paths using the Sender Template-Specific Method
  contents:
  - "7.1.1.  Merging Backup Paths using the Sender Template-Specific Method\n   An\
    \ LSR may receive multiple Path messages for one or more backup LSPs\n   and,\
    \ possibly, for the protected LSP.  Each of these Path messages\n   will have\
    \ a different SENDER_TEMPLATE.  The protected LSP can be\n   recognized because\
    \ it will include the FAST_REROUTE object or have\n   the \"local protection desired\"\
    \ flag set in the SESSION_ATTRIBUTE\n   object, or both.\n   If the outgoing interface\
    \ and next-hop LSR are the same, then the\n   Path messages are eligible for merging.\
    \  Similarly to the\n   specification in [RSVP-TE] for merging of RESV messages,\
    \ only Path\n   messages whose ERO from that LSR to the egress is the same can\
    \ be\n   merged.  If merging occurs and one of the Path messages merged was\n\
    \   for the protected LSP, then the final Path message to be sent MUST be\n  \
    \ that of the protected LSP.  This merges the backup LSPs into the\n   protected\
    \ LSP at that LSR.  Once the final Path message has been\n   identified, the MP\
    \ MUST start to refresh it downstream periodically.\n   If merging occurs and\
    \ all the Path messages were for backup LSPs,\n   then the DETOUR object, if any,\
    \ should be altered as specified in\n   Section 8.1\n"
- title: 7.1.2.  Merging Detours using the Path-Specific Method
  contents:
  - "7.1.2.  Merging Detours using the Path-Specific Method\n   An LSR (that is, an\
    \ MP) may receive multiple Path messages from\n   different interfaces with identical\
    \ SESSION and SENDER_TEMPLATE\n   objects.  In this case, Path state merging is\
    \ REQUIRED.  The merging\n   rule is as follows:\n   If all Path messages have\
    \ neither a FAST_REROUTE nor a DETOUR object,\n   or if the MP is the egress of\
    \ the LSP, no merging is required.  The\n   messages are processed according to\
    \ [RSVP-TE].\n   Otherwise, the MP MUST record the Path state and the incoming\n\
    \   interface.  If the Path messages do not share an outgoing interface\n   and\
    \ a next-hop LSR, the MP MUST consider them to be independent LSPs\n   and MUST\
    \ NOT merge them.\n   For all the Path messages that share the same outgoing interface\
    \ and\n   next-hop LSR, the MP runs the following procedure to create a Path\n\
    \   message to forward downstream.\n     1. If one or more of the Path messages\
    \ is for the protected LSP (a\n        protected LSP is one originated from this\
    \ node, or with the\n        FAST_REROUTE object, or without the DETOUR object),\
    \ one of these\n        must become the chosen Path message.  There could be more\
    \ than\n        one; in that case, which one to forward is a local decision.\n\
    \        Quit.\n     2. From the remaining set of Detour Path messages, eliminate\
    \ from\n        consideration those that traverse nodes that others want to\n\
    \        avoid.\n     3. If several still remain, which one to forward is a local\n\
    \        decision.  If none remain, then the MP MAY try to find a new\n      \
    \  route that avoids all nodes that merging Detour Paths want to\n        avoid;\
    \ it will forward a Path message with that ERO.\n   Once the final Path message\
    \ has been identified, the MP MUST start to\n   refresh it downstream periodically.\
    \  Other LSPs are considered merged\n   at this node.  For bandwidth reservations\
    \ on the outgoing link, any\n   merging should be considered to have occurred\
    \ before bandwidth is\n   reserved.  Thus, even though Fixed Filter style is specified,\n\
    \   multiple detours and/or their protected LSP (which are to be merged\n   due\
    \ to sharing an outgoing interface and next-hop LSR) will reserve\n   only the\
    \ bandwidth of the final Path message on that outgoing\n   interface.\n   If no\
    \ merged Path message can be constructed, the MP SHOULD send a\n   PathErr in\
    \ response to the most recently received detour Path\n   message.  If a protected\
    \ Path is chosen to be forwarded but it\n   traverses nodes that some detours\
    \ want to avoid, PathErrs SHOULD be\n   sent in response to those detour Paths\
    \ which cannot merge.\n"
- title: 7.1.2.1.  An Example of Path Message Merging
  contents:
  - "7.1.2.1.  An Example of Path Message Merging\n                R7---R8---R9-\\\
    \n                |    |    |   \\\n           R1---R2---R3---R4---R5---R6\n \
    \          Protected LSP:  [R1->R2->R3->R4->R5->R6]\n           R2's Detour: \
    \   [R2->R7->R8->R9->R4->R5->R6]\n           R3's Detour:    [R3->R8->R9->R5->R6]\n\
    \           Example 4.  Path Message Merging\n   In Example 4, R8 will receive\
    \ Path messages that have the same\n   SESSION and SENDER_TEMPLATE from detours\
    \ for R2 and R3.  During\n   merging at R8, because detour R3 has a shorter ERO\
    \ path length (that\n   is, ERO is [R9->R5->R6], and path length is 3), R8 will\
    \ select it as\n   the final LSP and will only propagate its Path messages downstream.\n\
    \   Upon receiving a Resv (or a ResvTear) message, R8 must relay the\n   messages\
    \ toward both R2 and R3.\n   R5 has to merge as well, and it will select the main\
    \ LSP, since it\n   has the FAST_REROUTE object.  Thus, the detour LSP terminates\
    \ at R5.\n"
- title: 7.1.3.  Message Handling for Merged Detours
  contents:
  - "7.1.3.  Message Handling for Merged Detours\n   When an LSR receives a ResvTear\
    \ for an LSP, the LSR must determine\n   whether it has an alternate associated\
    \ LSP.  For instance, if the\n   ResvTear was received for a protected LSP but\
    \ an associated backup\n   LSP has not received a ResvTear, then the LSR has an\
    \ alternate\n   associated LSP.  If the LSR does not have an alternate associated\n\
    \   LSP, then the MP MUST propagate the ResvTear toward the LSP's\n   ingress,\
    \ and, for each backup LSP merged into that LSP at this LSR,\n   the ResvTear\
    \ SHOULD also be propagated along the backup LSP.\n   The MP may receive PathTear\
    \ messages for some of the merging LSPs.\n   PathTear messages SHOULD NOT be propagated\
    \ downstream until the MP\n   has received PathTear messages for each of the merged\
    \ LSPs.  However,\n   the fact that one or more of the merged LSPs has been torn\
    \ down\n   should be reflected in the downstream message, such as by changing\n\
    \   the DETOUR object, if there is one.\n"
- title: 7.2.  Handling Failures
  contents:
  - "7.2.  Handling Failures\n   When a downstream LSR detects a local link failure,\
    \ for any protected\n   LSPs routed over the failed link, Path and Resv state\
    \ MUST NOT be\n   cleared, and PathTear and ResvErr messages MUST NOT be sent\n\
    \   immediately.  If this is not the case, then the facility backup\n   method\
    \ will not work.  Furthermore, a downstream LSR SHOULD reset the\n   refresh timers\
    \ for these LSPs as if they had just been refreshed.\n   This is to allow time\
    \ for the PLR to begin refreshing state via the\n   bypass tunnel.  State MUST\
    \ be removed if it has not been refreshed\n   before the refresh timer expires.\
    \  This allows the facility backup\n   method to work without requiring that it\
    \ signal backup paths through\n   the bypass tunnel before failure.\n   After\
    \ a failure has occurred, the MP must still send Resv messages\n   for the backup\
    \ LSPs associated with the protected LSPs that have\n   failed.  If the backup\
    \ LSP was sent through a bypass tunnel, then the\n   PHOP object in its Path message\
    \ will have the IP address of the\n   associated PLR.  This will ensure that Resv\
    \ state is refreshed.\n   Once the local link has recovered, the MP may or may\
    \ not accept Path\n   messages for existing protected LSPs that had failed over\
    \ to their\n   backup.\n"
- title: 8.  Behavior of All LSRs
  contents:
  - "8.  Behavior of All LSRs\n   The objects and methods defined in this document\
    \ require behavior\n   from all LSRs in the traffic-engineered network, even if\
    \ an LSR is\n   not along the path of a protected LSP.\n   First, if a DETOUR\
    \ object is included in the backup LSP's path\n   message for the sender template-specific\
    \ method, the LSRs in the\n   traffic-engineered network should support the DETOUR\
    \ object.\n   Second, if the path-specific method is to be supported for the one-\n\
    \   to-one backup method, it is necessary that the LSRs in the traffic-\n   engineered\
    \ network be capable of merging detours as specified in\n   Section 8.1.\n   It\
    \ is possible to avoid specific LSRs that do not support this\n   behavior by\
    \ assigning a link attribute to all the links of those LSPs\n   and then requesting\
    \ that backup paths exclude this link attribute.\n"
- title: 8.1.  Merging Detours in the Path-Specific Method
  contents:
  - "8.1.  Merging Detours in the Path-Specific Method\n   If multiple Path Messages\
    \ for different detours are received with the\n   same SESSION, SENDER_TEMPLATE,\
    \ outgoing interface, and next-hop LSR,\n   then the LSR must function as a Detour\
    \ Merge Point and merge the\n   detour Path Messages.  This merging should occur\
    \ as specified in\n   Section 7.1.2 and shown in Example 4.\n   In addition, it\
    \ is necessary to update the DETOUR object to reflect\n   the merging that has\
    \ taken place.  This is done using the following\n   algorithm to format the outgoing\
    \ DETOUR object for the final LSP:\n     - Combine all the (PLR_ID, Avoid_Node_ID)\
    \ pairs from all the DETOUR\n       objects of all merged LSPs into a new object.\
    \  Ordering is\n       insignificant.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   This document does not introduce new security\
    \ issues.  The security\n   considerations pertaining to the original RSVP protocol\
    \ [RSVP] remain\n   relevant.\n   Note that the facility backup method requires\
    \ that a PLR and its\n   selected merge point trust RSVP messages received from\
    \ each other.\n"
- title: 10.  IANA Considerations
  contents:
  - "10.  IANA Considerations\n   IANA [RFC-IANA] has assigned the following RSVP\
    \ Class Numbers for\n   objects defined in this document.\n"
- title: 10.1.  DETOUR Object
  contents:
  - "10.1.  DETOUR Object\n   IANA has assigned:\n      63  DETOUR\n          Class\
    \ Types or C-Types:\n             7  IPv4\n             8  IPv6\n   Future C-Types\
    \ will be assigned using the following guidelines:\n       C-Types 0 through 127\
    \ are assigned by Standards Action.\n       C-Types 128 through 191 are assigned\
    \ by Expert Review.\n       C-Types 192 through 255 are reserved for Vendor Private\
    \ Use.\n   For C-Types in the range 192 through 255, the first four octets of\n\
    \   the DETOUR object after the C-Type must be the Vendor's SMI Network\n   Management\
    \ Private Enterprise Code (see [ENT]) in network byte order.\n"
- title: 10.2.  FAST_REROUTE Object
  contents:
  - "10.2.  FAST_REROUTE Object\n   IANA has assigned:\n      205  FAST_REROUTE\n\
    \           Class Types or C-Types:\n             1   FAST_REROUTE Type 1\n  \
    \           7   RESERVED\n   In the FAST_REROUTE object, C-Type 7 is reserved\
    \ as it is still used\n   by pre-standard implementations.  Future C-Types will\
    \ be assigned\n   using the following guidelines:\n       C-Types 0 through 127\
    \ are assigned by Standards Action.\n       C-Types 128 through 191 are assigned\
    \ by Expert Review.\n       C-Types 192 through 255 are reserved for Vendor Private\
    \ Use.\n   For C-Types in the range 192 through 255, the first four octets of\n\
    \   the FAST_REROUTE object after the C-Type must be the Vendor's SMI\n   Network\
    \ Management Private Enterprise Code (see [ENT]) in network\n   byte order.\n"
- title: 11.  Contributors
  contents:
  - "11.  Contributors\n   This document was written by George Swallow, Ping Pan,\
    \ Alia Atlas,\n   Jean Philippe Vasseur, Markus Jork, Der-Hwa Gan, and Dave Cooper.\n\
    \   Jean Philippe Vasseur\n   Cisco Systems, Inc.\n   300 Beaver Brook Road\n\
    \   Boxborough, MA 01719\n   USA\n   Phone:  +1 978 497 6238\n   EMail: jpv@cisco.com\n\
    \   Markus Jork\n   Quarry Technologies\n   8 New England Executive Park\n   Burlington,\
    \ MA 01803\n   USA\n   Phone: +1 781 359 5071\n   EMail: mjork@quarrytech.com\n\
    \   Der-Hwa Gan\n   Juniper Networks\n   1194 N.Mathilda Ave\n   Sunnyvale, CA\
    \ 94089\n   USA\n   Phone: +1 408 745 2074\n   EMail: dhg@juniper.net\n   Dave\
    \ Cooper\n   Global Crossing\n   960 Hamlin Court\n   Sunnyvale, CA 94089\n  \
    \ USA\n   Phone: +1 916 415 0437\n   EMail: dcooper@gblx.net\n"
- title: 12.  Acknowledgments
  contents:
  - "12.  Acknowledgments\n   We would like to acknowledge input and helpful comments\
    \ from Rob\n   Goguen, Tony Li, Yakov Rekhter and Curtis Villamizar.  Especially,\
    \ we\n   thank those, who have been involved in interoperability testing and\n\
    \   field trails, and provided invaluable ideas and suggestions.  They\n   are\
    \ Rob Goguen, Carol Iturralde, Brook Bailey, Safaa Hasan, Richard\n   Southern,\
    \ and Bijan Jabbari.\n"
- title: 13.  Normative References
  contents:
  - "13.  Normative References\n   [RSVP]       Braden, R., Zhang, L., Berson, S.,\
    \ Herzog, S., and S.\n                Jamin, \"Resource ReSerVation Protocol (RSVP)\
    \ -- Version\n                1 Functional Specification\", RFC 2205, September\
    \ 1997.\n   [RSVP-TE]    Awduche, D., Berger, L., Gan, D., Li, T., Srinivasan,\n\
    \                V., and G. Swallow, \"RSVP-TE: Extensions to RSVP for LSP\n \
    \               Tunnels\", RFC 3209, December 2001.\n   [RFC-WORDS]  Bradner,\
    \ S., \"Key words for use in RFCs to Indicate\n                Requirement Levels\"\
    , BCP 14, RFC 2119, March 1997.\n   [RFC-IANA]   Narten, T. and H. Alvestrand,\
    \ \"Guidelines for Writing an\n                IANA Considerations Section in\
    \ RFCs\", BCP 26, RFC 2434,\n                October 1998.\n   [ENT]        IANA\
    \ PRIVATE ENTERPRISE NUMBERS,\n                http://www.iana.org/assignments/enterprise-numbers\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   George Swallow\n   Cisco Systems, Inc.\n   300 Beaver\
    \ Brook Road\n   Boxborough, MA 01719\n   USA\n   Phone:  +1 978 244 8143\n  \
    \ EMail:  swallow@cisco.com\n   Ping Pan\n   Hammerhead Systems\n   640 Clyde\
    \ Court\n   Mountain View, CA 94043\n   USA\n   EMail: ppan@hammerheadsystems.com\n\
    \   Alia Atlas\n   Avici Systems\n   101 Billerica Avenue\n   N. Billerica, MA\
    \ 01862\n   USA\n   Phone: +1 978 964 2070\n   EMail: aatlas@avici.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
