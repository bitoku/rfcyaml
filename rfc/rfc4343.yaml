- title: __initial_text__
  contents:
  - '       Domain Name System (DNS) Case Insensitivity Clarification

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   Domain Name System (DNS) names are \"case insensitive\".  This document\n\
    \   explains exactly what that means and provides a clear specification\n   of\
    \ the rules.  This clarification updates RFCs 1034, 1035, and 2181.\n"
- title: Table of Contents
  contents:
  - 'Table of Contents

    '
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Domain Name System (DNS) is the global hierarchical\
    \ replicated\n   distributed database system for Internet addressing, mail proxy,\
    \ and\n   other information.  Each node in the DNS tree has a name consisting\n\
    \   of zero or more labels [STD13, RFC1591, RFC2606] that are treated in\n   a\
    \ case insensitive fashion.  This document clarifies the meaning of\n   \"case\
    \ insensitive\" for the DNS.  This clarification updates RFCs\n   1034, 1035 [STD13],\
    \ and [RFC2181].\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
- title: 2.  Case Insensitivity of DNS Labels
  contents:
  - "2.  Case Insensitivity of DNS Labels\n   DNS was specified in the era of [ASCII].\
    \  DNS names were expected to\n   look like most host names or Internet email\
    \ address right halves (the\n   part after the at-sign, \"@\") or to be numeric,\
    \ as in the in-addr.arpa\n   part of the DNS name space.  For example,\n     \
    \  foo.example.net.\n       aol.com.\n       www.gnu.ai.mit.edu.\n   or  69.2.0.192.in-addr.arpa.\n\
    \   Case-varied alternatives to the above [RFC3092] would be DNS names\n   like\n\
    \       Foo.ExamplE.net.\n       AOL.COM.\n       WWW.gnu.AI.mit.EDU.\n   or \
    \ 69.2.0.192.in-ADDR.ARPA.\n   However, the individual octets of which DNS names\
    \ consist are not\n   limited to valid ASCII character codes.  They are 8-bit\
    \ bytes, and\n   all values are allowed.  Many applications, however, interpret\
    \ them\n   as ASCII characters.\n"
- title: 2.1.  Escaping Unusual DNS Label Octets
  contents:
  - "2.1.  Escaping Unusual DNS Label Octets\n   In Master Files [STD13] and other\
    \ human-readable and -writable ASCII\n   contexts, an escape is needed for the\
    \ byte value for period (0x2E,\n   \".\") and all octet values outside of the\
    \ inclusive range from 0x21\n   (\"!\") to 0x7E (\"~\").  That is to say, 0x2E\
    \ and all octet values in\n   the two inclusive ranges from 0x00 to 0x20 and from\
    \ 0x7F to 0xFF.\n   One typographic convention for octets that do not correspond\
    \ to an\n   ASCII printing graphic is to use a back-slash followed by the value\n\
    \   of the octet as an unsigned integer represented by exactly three\n   decimal\
    \ digits.\n   The same convention can be used for printing ASCII characters so\
    \ that\n   they will be treated as a normal label character.  This includes the\n\
    \   back-slash character used in this convention itself, which can be\n   expressed\
    \ as \\092 or \\\\, and the special label separator period\n   (\".\"), which\
    \ can be expressed as and \\046 or \\.  It is advisable to\n   avoid using a backslash\
    \ to quote an immediately following non-\n   printing ASCII character code to\
    \ avoid implementation difficulties.\n   A back-slash followed by only one or\
    \ two decimal digits is undefined.\n   A back-slash followed by four decimal digits\
    \ produces two octets, the\n   first octet having the value of the first three\
    \ digits considered as\n   a decimal number, and the second octet being the character\
    \ code for\n   the fourth decimal digit.\n"
- title: 2.2.  Example Labels with Escapes
  contents:
  - "2.2.  Example Labels with Escapes\n   The first example below shows embedded\
    \ spaces and a period (\".\")\n   within a label.  The second one shows a 5-octet\
    \ label where the\n   second octet has all bits zero, the third is a backslash,\
    \ and the\n   fourth octet has all bits one.\n         Donald\\032E\\.\\032Eastlake\\\
    0323rd.example.\n   and   a\\000\\\\\\255z.example.\n"
- title: 3.  Name Lookup, Label Types, and CLASS
  contents:
  - "3.  Name Lookup, Label Types, and CLASS\n   According to the original DNS design\
    \ decision, comparisons on name\n   lookup for DNS queries should be case insensitive\
    \ [STD13].  That is\n   to say, a lookup string octet with a value in the inclusive\
    \ range\n   from 0x41 to 0x5A, the uppercase ASCII letters, MUST match the\n \
    \  identical value and also match the corresponding value in the\n   inclusive\
    \ range from 0x61 to 0x7A, the lowercase ASCII letters.  A\n   lookup string octet\
    \ with a lowercase ASCII letter value MUST\n   similarly match the identical value\
    \ and also match the corresponding\n   value in the uppercase ASCII letter range.\n\
    \   (Historical note: The terms \"uppercase\" and \"lowercase\" were invented\n\
    \   after movable type.  The terms originally referred to the two font\n   trays\
    \ for storing, in partitioned areas, the different physical type\n   elements.\
    \  Before movable type, the nearest equivalent terms were\n   \"majuscule\" and\
    \ \"minuscule\".)\n   One way to implement this rule would be to subtract 0x20\
    \ from all\n   octets in the inclusive range from 0x61 to 0x7A before comparing\n\
    \   octets.  Such an operation is commonly known as \"case folding\", but\n  \
    \ implementation via case folding is not required.  Note that the DNS\n   case\
    \ insensitivity does NOT correspond to the case folding specified\n   in [ISO-8859-1]\
    \ or [ISO-8859-2].  For example, the octets 0xDD (\\221)\n   and 0xFD (\\253)\
    \ do NOT match, although in other contexts, where they\n   are interpreted as\
    \ the upper- and lower-case version of \"Y\" with an\n   acute accent, they might.\n"
- title: 3.1.  Original DNS Label Types
  contents:
  - "3.1.  Original DNS Label Types\n   DNS labels in wire-encoded names have a type\
    \ associated with them.\n   The original DNS standard [STD13] had only two types:\
    \ ASCII labels,\n   with a length from zero to 63 octets, and indirect (or compression)\n\
    \   labels, which consist of an offset pointer to a name location\n   elsewhere\
    \ in the wire encoding on a DNS message.  (The ASCII label of\n   length zero\
    \ is reserved for use as the name of the root node of the\n   name tree.)  ASCII\
    \ labels follow the ASCII case conventions described\n   herein and, as stated\
    \ above, can actually contain arbitrary byte\n   values.  Indirect labels are,\
    \ in effect, replaced by the name to\n   which they point, which is then treated\
    \ with the case insensitivity\n   rules in this document.\n"
- title: 3.2.  Extended Label Type Case Insensitivity Considerations
  contents:
  - "3.2.  Extended Label Type Case Insensitivity Considerations\n   DNS was extended\
    \ by [RFC2671] so that additional label type numbers\n   would be available. \
    \ (The only such type defined so far is the BINARY\n   type [RFC2673], which is\
    \ now Experimental [RFC3363].)\n   The ASCII case insensitivity conventions only\
    \ apply to ASCII labels;\n   that is to say, label type 0x0, whether appearing\
    \ directly or invoked\n   by indirect labels.\n"
- title: 3.3.  CLASS Case Insensitivity Considerations
  contents:
  - "3.3.  CLASS Case Insensitivity Considerations\n   As described in [STD13] and\
    \ [RFC2929], DNS has an additional axis for\n   data location called CLASS.  The\
    \ only CLASS in global use at this\n   time is the \"IN\" (Internet) CLASS.\n\
    \   The handling of DNS label case is not CLASS dependent.  With the\n   original\
    \ design of DNS, it was intended that a recursive DNS resolver\n   be able to\
    \ handle new CLASSes that were unknown at the time of its\n   implementation.\
    \  This requires uniform handling of label case\n   insensitivity.  Should it\
    \ become desirable, for example, to allocate\n   a CLASS with \"case sensitive\
    \ ASCII labels\", it would be necessary to\n   allocate a new label type for these\
    \ labels.\n"
- title: 4.  Case on Input and Output
  contents:
  - "4.  Case on Input and Output\n   While ASCII label comparisons are case insensitive,\
    \ [STD13] says case\n   MUST be preserved on output and preserved when convenient\
    \ on input.\n   However, this means less than it would appear, since the preservation\n\
    \   of case on output is NOT required when output is optimized by the use\n  \
    \ of indirect labels, as explained below.\n"
- title: 4.1.  DNS Output Case Preservation
  contents:
  - "4.1.  DNS Output Case Preservation\n   [STD13] views the DNS namespace as a node\
    \ tree.  ASCII output is as\n   if a name were marshaled by taking the label on\
    \ the node whose name\n   is to be output, converting it to a typographically\
    \ encoded ASCII\n   string, walking up the tree outputting each label encountered,\
    \ and\n   preceding all labels but the first with a period (\".\").  Wire output\n\
    \   follows the same sequence, but each label is wire encoded, and no\n   periods\
    \ are inserted.  No \"case conversion\" or \"case folding\" is done\n   during\
    \ such output operations, thus \"preserving\" case.  However, to\n   optimize\
    \ output, indirect labels may be used to point to names\n   elsewhere in the DNS\
    \ answer.  In determining whether the name to be\n   pointed to (for example,\
    \ the QNAME) is the \"same\" as the remainder of\n   the name being optimized,\
    \ the case insensitive comparison specified\n   above is done.  Thus, such optimization\
    \ may easily destroy the output\n   preservation of case.  This type of optimization\
    \ is commonly called\n   \"name compression\".\n"
- title: 4.2.  DNS Input Case Preservation
  contents:
  - "4.2.  DNS Input Case Preservation\n   Originally, DNS data came from an ASCII\
    \ Master File as defined in\n   [STD13] or a zone transfer.  DNS Dynamic update\
    \ and incremental zone\n   transfers [RFC1995] have been added as a source of\
    \ DNS data [RFC2136,\n   RFC3007].  When a node in the DNS name tree is created\
    \ by any of such\n   inputs, no case conversion is done.  Thus, the case of ASCII\
    \ labels\n   is preserved if they are for nodes being created.  However, when\
    \ a\n   name label is input for a node that already exists in DNS data being\n\
    \   held, the situation is more complex.  Implementations are free to\n   retain\
    \ the case first loaded for such a label, to allow new input to\n   override the\
    \ old case, or even to maintain separate copies preserving\n   the input case.\n\
    \   For example, if data with owner name \"foo.bar.example\" [RFC3092] is\n  \
    \ loaded and then later data with owner name \"xyz.BAR.example\" is\n   input,\
    \ the name of the label on the \"bar.example\" node (i.e., \"bar\")\n   might\
    \ or might not be changed to \"BAR\" in the DNS stored data.  Thus,\n   later\
    \ retrieval of data stored under \"xyz.bar.example\" in this case\n   can use\
    \ \"xyz.BAR.example\" in all returned data, use \"xyz.bar.example\"\n   in all\
    \ returned data, or even, when more than one RR is being\n   returned, use a mixture\
    \ of these two capitalizations.  This last case\n   is unlikely, as optimization\
    \ of answer length through indirect labels\n   tends to cause only one copy of\
    \ the name tail (\"bar.example\" or\n   \"BAR.example\") to be used for all returned\
    \ RRs.  Note that none of\n   this has any effect on the number or completeness\
    \ of the RR set\n   returned, only on the case of the names in the RR set returned.\n\
    \   The same considerations apply when inputting multiple data records\n   with\
    \ owner names differing only in case.  For example, if an \"A\"\n   record is\
    \ the first resource record stored under owner name\n   \"xyz.BAR.example\" and\
    \ then a second \"A\" record is stored under\n   \"XYZ.BAR.example\", the second\
    \ MAY be stored with the first (lower\n   case initial label) name, the second\
    \ MAY override the first so that\n   only an uppercase initial label is retained,\
    \ or both capitalizations\n   MAY be kept in the DNS stored data.  In any case,\
    \ a retrieval with\n   either capitalization will retrieve all RRs with either\n\
    \   capitalization.\n   Note that the order of insertion into a server database\
    \ of the DNS\n   name tree nodes that appear in a Master File is not defined so\
    \ that\n   the results of inconsistent capitalization in a Master File are\n \
    \  unpredictable output capitalization.\n"
- title: 5.  Internationalized Domain Names
  contents:
  - "5.  Internationalized Domain Names\n   A scheme has been adopted for \"internationalized\
    \ domain names\" and\n   \"internationalized labels\" as described in [RFC3490,\
    \ RFC3454,\n   RFC3491, and RFC3492].  It makes most of [UNICODE] available through\n\
    \   a separate application level transformation from internationalized\n   domain\
    \ name to DNS domain name and from DNS domain name to\n   internationalized domain\
    \ name.  Any case insensitivity that\n   internationalized domain names and labels\
    \ have varies depending on\n   the script and is handled entirely as part of the\
    \ transformation\n   described in [RFC3454] and [RFC3491], which should be seen\
    \ for\n   further details.  This is not a part of the DNS as standardized in\n\
    \   STD 13.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   The equivalence of certain DNS label types with\
    \ case differences, as\n   clarified in this document, can lead to security problems.\
    \  For\n   example, a user could be confused by believing that two domain names\n\
    \   differing only in case were actually different names.\n   Furthermore, a domain\
    \ name may be used in contexts other than the\n   DNS.  It could be used as a\
    \ case sensitive index into some database\n   or file system.  Or it could be\
    \ interpreted as binary data by some\n   integrity or authentication code system.\
    \  These problems can usually\n   be handled by using a standardized or \"canonical\"\
    \ form of the DNS\n   ASCII type labels; that is, always mapping the ASCII letter\
    \ value\n   octets in ASCII labels to some specific pre-chosen case, either\n\
    \   uppercase or lower case.  An example of a canonical form for domain\n   names\
    \ (and also a canonical ordering for them) appears in Section 6\n   of [RFC4034].\
    \  See also [RFC3597].\n   Finally, a non-DNS name may be stored into DNS with\
    \ the false\n   expectation that case will always be preserved.  For example,\n\
    \   although this would be quite rare, on a system with case sensitive\n   email\
    \ address local parts, an attempt to store two Responsible Person\n   (RP) [RFC1183]\
    \ records that differed only in case would probably\n   produce unexpected results\
    \ that might have security implications.\n   That is because the entire email\
    \ address, including the possibly case\n   sensitive local or left-hand part,\
    \ is encoded into a DNS name in a\n   readable fashion where the case of some\
    \ letters might be changed on\n   output as described above.\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   The contributions to this document by Rob Austein, Olafur\n\
    \   Gudmundsson, Daniel J. Anderson, Alan Barrett, Marc Blanchet, Dana,\n   Andreas\
    \ Gustafsson, Andrew Main, Thomas Narten, and Scott Seligman\n   are gratefully\
    \ acknowledged.\n"
- title: Normative References
  contents:
  - "Normative References\n   [ASCII]      ANSI, \"USA Standard Code for Information\
    \ Interchange\",\n                X3.4, American National Standards Institute:\
    \ New York,\n                1968.\n   [RFC1995]    Ohta, M., \"Incremental Zone\
    \ Transfer in DNS\", RFC 1995,\n                August 1996.\n   [RFC2119]   \
    \ Bradner, S., \"Key words for use in RFCs to Indicate\n                Requirement\
    \ Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2136]    Vixie, P., Thomson,\
    \  S., Rekhter, Y., and J. Bound,\n                \"Dynamic Updates in the Domain\
    \ Name System (DNS\n                UPDATE)\", RFC 2136, April 1997.\n   [RFC2181]\
    \     Elz, R. and R. Bush, \"Clarifications to the DNS\n                Specification\"\
    , RFC 2181, July 1997.\n   [RFC3007]    Wellington, B., \"Secure Domain Name System\
    \ (DNS) Dynamic\n                Update\", RFC 3007, November 2000.\n   [RFC3597]\
    \    Gustafsson, A., \"Handling of Unknown DNS Resource Record\n             \
    \   (RR) Types\", RFC 3597, September 2003.\n   [RFC4034]    Arends, R., Austein,\
    \ R., Larson, M., Massey, D., and S.\n                Rose, \"Resource Records\
    \ for the DNS Security\n                Extensions\", RFC 4034, March 2005.\n\
    \   [STD13]      Mockapetris, P., \"Domain names - concepts and\n            \
    \    facilities\", STD 13, RFC 1034, November 1987.\n                Mockapetris,\
    \ P., \"Domain names - implementation and\n                specification\", STD\
    \ 13, RFC 1035, November 1987.\n"
- title: Informative References
  contents:
  - "Informative References\n   [ISO-8859-1] International Standards Organization,\
    \ Standard for\n                Character Encodings, Latin-1.\n   [ISO-8859-2]\
    \ International Standards Organization, Standard for\n                Character\
    \ Encodings, Latin-2.\n   [RFC1183]    Everhart, C., Mamakos, L., Ullmann, R.,\
    \ and P.\n                Mockapetris, \"New DNS RR Definitions\", RFC 1183, October\n\
    \                1990.\n   [RFC1591]    Postel, J., \"Domain Name System Structure\
    \ and\n                Delegation\", RFC 1591, March 1994.\n   [RFC2606]    Eastlake\
    \ 3rd, D. and A. Panitz, \"Reserved Top Level DNS\n                Names\", BCP\
    \ 32, RFC 2606, June 1999.\n   [RFC2929]    Eastlake 3rd, D., Brunner-Williams,\
    \ E., and B. Manning,\n                \"Domain Name System (DNS) IANA Considerations\"\
    , BCP 42,\n                RFC 2929, September 2000.\n   [RFC2671]    Vixie, P.,\
    \ \"Extension Mechanisms for DNS (EDNS0)\", RFC\n                2671, August\
    \ 1999.\n   [RFC2673]    Crawford, M., \"Binary Labels in the Domain Name System\"\
    ,\n                RFC 2673, August 1999.\n   [RFC3092]    Eastlake 3rd, D., Manros,\
    \ C., and E. Raymond, \"Etymology\n                of \"Foo\"\", RFC 3092, 1 April\
    \ 2001.\n   [RFC3363]    Bush, R., Durand, A., Fink, B., Gudmundsson, O., and\
    \ T.\n                Hain, \"Representing Internet Protocol version 6 (IPv6)\n\
    \                Addresses in the Domain Name System (DNS)\", RFC 3363,\n    \
    \            August 2002.\n   [RFC3454]    Hoffman, P. and M. Blanchet, \"Preparation\
    \ of\n                Internationalized Strings (\"stringprep\")\", RFC 3454,\n\
    \                December 2002.\n   [RFC3490]    Faltstrom, P., Hoffman, P., and\
    \ A. Costello,\n                \"Internationalizing Domain Names in Applications\n\
    \                (IDNA)\", RFC 3490, March 2003.\n   [RFC3491]    Hoffman, P.\
    \ and M. Blanchet, \"Nameprep: A Stringprep\n                Profile for Internationalized\
    \ Domain Names (IDN)\", RFC\n                3491, March 2003.\n   [RFC3492] \
    \   Costello, A., \"Punycode: A Bootstring encoding of\n                Unicode\
    \ for Internationalized Domain Names in\n                Applications (IDNA)\"\
    , RFC 3492, March 2003.\n   [UNICODE]    The Unicode Consortium, \"The Unicode\
    \ Standard\",\n                <http://www.unicode.org/unicode/standard/standard.html>.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Donald E. Eastlake 3rd\n   Motorola Laboratories\n   155\
    \ Beaver Street\n   Milford, MA 01757 USA\n   Phone: +1 508-786-7554 (w)\n   EMail:\
    \ Donald.Eastlake@motorola.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
