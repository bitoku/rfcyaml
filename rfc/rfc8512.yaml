- title: __initial_text__
  contents:
  - "                           A YANG Module for\n Network Address Translation (NAT)\
    \ and Network Prefix Translation (NPT)\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines a YANG module for the Network Address\n  \
    \ Translation (NAT) function.\n   Network Address Translation from IPv4 to IPv4\
    \ (NAT44), Network\n   Address and Protocol Translation from IPv6 Clients to IPv4\
    \ Servers\n   (NAT64), customer-side translator (CLAT), Stateless IP/ICMP\n  \
    \ Translation (SIIT), Explicit Address Mappings (EAM) for SIIT,\n   IPv6-to-IPv6\
    \ Network Prefix Translation (NPTv6), and Destination NAT\n   are covered in this\
    \ document.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8512.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   4\n     1.1.  Terminology . . . . . . . . . . . . . . . . . . .\
    \ . . . .   4\n   2.  Overview of the NAT YANG Data Model . . . . . . . . . .\
    \ . . .   6\n     2.1.  Overview  . . . . . . . . . . . . . . . . . . . . . .\
    \ . .   6\n     2.2.  Various Translation Flavors . . . . . . . . . . . . . .\
    \ .   7\n     2.3.  TCP/UDP/ICMP NAT Behavioral Requirements  . . . . . . . .\
    \   8\n     2.4.  Other Transport Protocols . . . . . . . . . . . . . . . .  \
    \ 8\n     2.5.  IP Addresses Used for Translation . . . . . . . . . . . .   9\n\
    \     2.6.  Port-Set Assignment . . . . . . . . . . . . . . . . . . .   9\n  \
    \   2.7.  Port-Restricted IP Addresses  . . . . . . . . . . . . . .   9\n    \
    \ 2.8.  NAT Mapping Entries . . . . . . . . . . . . . . . . . . .  10\n     2.9.\
    \  Resource Limits . . . . . . . . . . . . . . . . . . . . .  13\n     2.10. Binding\
    \ the NAT Function to an External Interface . . . .  16\n     2.11. Relationship\
    \ to NATV2-MIB . . . . . . . . . . . . . . . .  16\n     2.12. Tree Structure\
    \  . . . . . . . . . . . . . . . . . . . . .  17\n   3.  NAT YANG Module . . .\
    \ . . . . . . . . . . . . . . . . . . . .  24\n   4.  Security Considerations\
    \ . . . . . . . . . . . . . . . . . . .  68\n   5.  IANA Considerations . . .\
    \ . . . . . . . . . . . . . . . . . .  70\n   6.  References  . . . . . . . .\
    \ . . . . . . . . . . . . . . . . .  70\n     6.1.  Normative References  . .\
    \ . . . . . . . . . . . . . . . .  70\n     6.2.  Informative References  . .\
    \ . . . . . . . . . . . . . . .  73\n   Appendix A.  Some Examples  . . . . .\
    \ . . . . . . . . . . . . . .  75\n     A.1.  Traditional NAT44 . . . . . . .\
    \ . . . . . . . . . . . . .  75\n     A.2.  Carrier Grade NAT (CGN) . . . . .\
    \ . . . . . . . . . . . .  76\n     A.3.  CGN Pass-Through  . . . . . . . . .\
    \ . . . . . . . . . . .  80\n     A.4.  NAT64 . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . .  80\n     A.5.  Stateless IP/ICMP Translation (SIIT)  .\
    \ . . . . . . . . .  81\n     A.6.  Explicit Address Mappings (EAM) for Stateless\
    \ IP/ICMP\n           Translation (SIIT)  . . . . . . . . . . . . . . . . . .\
    \ .  82\n     A.7.  Static Mappings with Port Ranges  . . . . . . . . . . . .\
    \  85\n     A.8.  Static Mappings with IP Prefixes  . . . . . . . . . . . .  86\n\
    \     A.9.  Destination NAT . . . . . . . . . . . . . . . . . . . . .  86\n  \
    \   A.10. Customer-Side Translator (CLAT) . . . . . . . . . . . . .  89\n    \
    \ A.11. IPv6 Network Prefix Translation (NPTv6) . . . . . . . . .  90\n   Acknowledgements\
    \  . . . . . . . . . . . . . . . . . . . . . . . .  93\n   Authors' Addresses\
    \  . . . . . . . . . . . . . . . . . . . . . . .  94\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document defines a data model for Network Address Translation\n\
    \   (NAT) and Network Prefix Translation (NPT) capabilities using the\n   YANG\
    \ data modeling language [RFC7950].\n   Traditional NAT is defined in [RFC2663],\
    \ while Carrier Grade NAT\n   (CGN) is defined in [RFC6888].  Unlike traditional\
    \ NAT, the CGN is\n   used to optimize the usage of global IP address space at\
    \ the scale of\n   a domain: a CGN is not managed by end users but by service\
    \ providers\n   instead.  This document covers both traditional NATs and CGNs.\n\
    \   This document also covers NAT64 [RFC6146], customer-side translator\n   (CLAT)\
    \ [RFC6877], Stateless IP/ICMP Translation (SIIT) [RFC7915],\n   Explicit Address\
    \ Mappings (EAM) for SIIT [RFC7757], IPv6 Network\n   Prefix Translation (NPTv6)\
    \ [RFC6296], and Destination NAT.  The full\n   set of translation schemes that\
    \ are in scope is included in\n   Section 2.2.\n   Some examples are provided\
    \ in Appendix A.  These examples are not\n   intended to be exhaustive.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   This document makes use of the following terms:\n   o \
    \ Basic Network Address Translation from IPv4 to IPv4 (NAT44):\n      translation\
    \ is limited to IP addresses alone (Section 2.1 of\n      [RFC3022]).\n   o  Network\
    \ Address Port Translator (NAPT): translation in NAPT is\n      extended to include\
    \ IP addresses and transport identifiers (such\n      as a TCP/UDP port or ICMP\
    \ query ID); refer to Section 2.2 of\n      [RFC3022].  A NAPT may use an extra\
    \ identifier, in addition to the\n      five transport tuples, to disambiguate\
    \ bindings [RFC6619].\n   o  Destination NAT: is a translation that acts on the\
    \ destination IP\n      address and/or destination port number.  This flavor is\
    \ usually\n      deployed in load balancers or at devices in front of public\n\
    \      servers.\n   o  Port-restricted IPv4 address: an IPv4 address with a restricted\n\
    \      port set.  Multiple hosts may share the same IPv4 address;\n      however,\
    \ their port sets must not overlap [RFC7596].\n   o  Restricted port set: a non-overlapping\
    \ range of allowed external\n      ports to use for NAT operation.  Source ports\
    \ of IPv4 packets\n      translated by a NAT must belong to the assigned port\
    \ set.  The\n      port set is used for all port-aware IP protocols [RFC7596].\n\
    \   o  Internal host: a host that may need to use a translation\n      capability\
    \ to send to and receive traffic from the Internet.\n   o  Internal address/prefix:\
    \ the IP address/prefix of an internal\n      host.\n   o  External address: the\
    \ IP address/prefix assigned by a translator\n      to an internal host; this\
    \ is the address that will be seen by a\n      remote host on the Internet.\n\
    \   o  Mapping: denotes a state at the translator that is necessary for\n    \
    \  network address and/or port translation.\n   o  Dynamic implicit mapping: is\
    \ created implicitly as a side effect\n      of processing a packet (e.g., an\
    \ initial TCP SYN packet) that\n      requires a new mapping.  A validity lifetime\
    \ is associated with\n      this mapping.\n   o  Dynamic explicit mapping: is\
    \ created as a result of an explicit\n      request, e.g., a Port Control Protocol\
    \ (PCP) message [RFC6887].  A\n      validity lifetime is associated with this\
    \ mapping.\n   o  Static explicit mapping: is created using, e.g., a command-line\n\
    \      interface (CLI).  This mapping is likely to be maintained by the\n    \
    \  NAT function till an explicit action is executed to remove it.\n   The usage\
    \ of the term NAT in this document refers to any translation\n   flavor (NAT44,\
    \ NAT64, etc.) indifferently.\n   This document uses the term \"session\" as defined\
    \ in [RFC2663] and\n   [RFC6146] for NAT64.\n   This document follows the guidelines\
    \ of [RFC8407], uses the common\n   YANG types defined in [RFC6991], and adopts\
    \ the Network Management\n   Datastore Architecture (NMDA).  The meaning of the\
    \ symbols in tree\n   diagrams is defined in [RFC8340].\n"
- title: 2.  Overview of the NAT YANG Data Model
  contents:
  - '2.  Overview of the NAT YANG Data Model

    '
- title: 2.1.  Overview
  contents:
  - "2.1.  Overview\n   The NAT YANG module is designed to cover dynamic implicit\
    \ mappings\n   and static explicit mappings.  The required functionality to instruct\n\
    \   dynamic explicit mappings is defined in separate documents such as\n   [YANG-PCP].\
    \  Considerations about instructing by explicit dynamic\n   means (e.g., [RFC6887],\
    \ [RFC6736], or [RFC8045]) are out of scope.\n   As a reminder, REQ-9 of [RFC6888]\
    \ requires that a CGN must implement\n   a protocol giving subscribers explicit\
    \ control over NAT mappings;\n   that protocol should be the Port Control Protocol\
    \ [RFC6887].\n   A single NAT device can have multiple NAT instances; each of\
    \ these\n   instances can be provided with its own policies (e.g., be responsible\n\
    \   for serving a group of hosts).  This document does not make any\n   assumption\
    \ about how internal hosts or flows are associated with a\n   given NAT instance.\n\
    \   The NAT YANG module assumes that each NAT instance can be enabled/\n   disabled,\
    \ be provisioned with a specific set of configuration data,\n   and maintain its\
    \ own mapping tables.\n   The NAT YANG module allows for a NAT instance to be\
    \ provided with\n   multiple NAT policies (/nat/instances/instance/policy).  The\
    \ document\n   does not make any assumption about how flows are associated with\
    \ a\n   given NAT policy of a given NAT instance.  Classification filters are\n\
    \   out of scope.\n   Defining multiple NAT instances or configuring multiple\
    \ NAT policies\n   within one single NAT instance is implementation and deployment\n\
    \   specific.\n   This YANG module does not provide any method to instruct a NAT\n\
    \   function to enable the logging feature or to specify the information\n   to\
    \ be logged for administrative or regulatory reasons (Section 2.3 of\n   [RFC6908]\
    \ and REQ-12 of [RFC6888]).  Those considerations are out of\n   the scope of\
    \ this document.\n"
- title: 2.2.  Various Translation Flavors
  contents:
  - "2.2.  Various Translation Flavors\n   The following translation modes are supported:\n\
    \   o  Basic NAT44\n   o  NAPT\n   o  Destination NAT\n   o  Port-restricted NAT\n\
    \   o  Stateful NAT64 (including with destination-based Pref64::/n\n      [RFC7050])\n\
    \   o  SIIT\n   o  CLAT\n   o  EAM\n   o  NPTv6\n   o  Combination of Basic NAT/NAPT\
    \ and Destination NAT\n   o  Combination of port-restricted and Destination NAT\n\
    \   o  Combination of NAT64 and EAM\n   o  Stateful and Stateless NAT64\n   [RFC8513]\
    \ specifies an extension to the NAT YANG module to support\n   Dual-Stack Lite\
    \ (DS-Lite).\n   The YANG \"feature\" statement is used to indicate which of the\n\
    \   different translation modes is relevant for a specific data node.\n   Table\
    \ 1 lists defined features:\n            +---------------------------------+--------------+\n\
    \            |                Translation Mode | YANG Feature |\n            +---------------------------------+--------------+\n\
    \            |                     Basic NAT44 | basic-nat44  |\n            |\
    \                            NAPT | napt44       |\n            |            \
    \     Destination NAT | dst-nat      |\n            |                  Stateful\
    \ NAT64 | nat64        |\n            | Stateless IPv4/IPv6 Translation | siit\
    \         |\n            |                            CLAT | clat         |\n\
    \            |                             EAM | eam          |\n            |\
    \                           NPTv6 | nptv6        |\n            +---------------------------------+--------------+\n\
    \                        Table 1: NAT YANG Features\n   The following translation\
    \ modes do not require that dedicated\n   features be defined:\n   o  Port-restricted\
    \ NAT: This mode corresponds to supplying port-\n      restriction policies to\
    \ a NAPT or NAT64 (port-set-restrict).\n   o  Combination of Basic NAT/NAPT and\
    \ Destination NAT: This mode\n      corresponds to setting 'dst-nat-enable' for\
    \ Basic NAT44 or NAPT.\n   o  Combination of port-restricted and Destination NAT:\
    \ This mode can\n      be achieved by configuring a NAPT with port restriction\
    \ policies\n      (port-set-restrict) together with a destination IP address pool\n\
    \      (dst-ip-address-pool).\n   o  Combination of NAT64 and EAM: This mode corresponds\
    \ to configuring\n      static mappings for NAT64.\n   o  Stateful and stateless\
    \ NAT64: A NAT64 implementation can be\n      instructed to behave in the stateless\
    \ mode for a given prefix by\n      setting the parameter (nat64-prefixes/stateless-enable).\
    \  A NAT64\n      implementation may behave in both stateful and stateless modes\
    \ if,\n      in addition to appropriately setting the parameter\n      (nat64-prefixes/stateless-enable),\
    \ an external IPv4 address pool\n      is configured.\n   The NAT YANG module\
    \ provides a method to retrieve the capabilities of\n   a NAT instance (including\
    \ a list of supported translation modes, a\n   list of supported protocols, the\
    \ supported NAT mapping types, the\n   supported NAT filtering types, the behavior\
    \ for handling fragments\n   (all, out-of-order, in-order), and the support statuses\
    \ for the\n   following: port restriction, port range allocation, port parity\n\
    \   preservation, and port preservation).\n"
- title: 2.3.  TCP/UDP/ICMP NAT Behavioral Requirements
  contents:
  - "2.3.  TCP/UDP/ICMP NAT Behavioral Requirements\n   This document assumes NAT\
    \ behavioral recommendations for UDP\n   [RFC4787], TCP [RFC5382], and ICMP [RFC5508]\
    \ are enabled by default.\n   Furthermore, the NAT YANG module relies upon the\
    \ recommendations\n   detailed in [RFC6888] and [RFC7857].\n"
- title: 2.4.  Other Transport Protocols
  contents:
  - "2.4.  Other Transport Protocols\n   The module is structured to support protocols\
    \ other than UDP, TCP,\n   and ICMP.  Concretely, the module allows the operator\
    \ to enable\n   translation for other transport protocols when required\n   (/nat/instances/instance/policy/transport-protocols).\
    \  Moreover, the\n   mapping table is designed so that it can indicate any transport\n\
    \   protocol.  For example, this module may be used to manage a NAT\n   capable\
    \ of the Datagram Congestion Control Protocol (DCCP) that\n   adheres to [RFC5597].\n\
    \   Future extensions may be needed to cover NAT-related considerations\n   that\
    \ are specific to other transport protocols such as the Stream\n   Control Transmission\
    \ Protocol (SCTP) [NAT-SUPP].  Typically, the\n   mapping entry can be extended\
    \ to record two optional SCTP-specific\n   parameters: the Internal Verification\
    \ Tag (Int-VTag) and External\n   Verification Tag (Ext-VTag).\n   This document\
    \ only specifies transport-protocol-specific timers for\n   UDP, TCP, and ICMP.\
    \  While some timers could potentially be\n   generalized for other connection-oriented\
    \ protocols, this document\n   does not follow such an approach because there\
    \ is no standard\n   document specifying such generic behavior.  Future documents\
    \ may be\n   edited to clarify how to reuse TCP-specific timers when needed.\n"
- title: 2.5.  IP Addresses Used for Translation
  contents:
  - "2.5.  IP Addresses Used for Translation\n   The NAT YANG module assumes that\
    \ blocks of IP external addresses\n   (external-ip-address-pool) can be provisioned\
    \ to the NAT function.\n   These blocks may be contiguous or not.\n   This behavior\
    \ is aligned with [RFC6888], which specifies that a NAT\n   function should not\
    \ have any limitations on the size or the\n   contiguity of the external address\
    \ pool.  In particular, the NAT\n   function must be configurable with contiguous\
    \ or non-contiguous\n   external IPv4 address ranges.  To accommodate traditional\
    \ NAT, the\n   module allows for a single IP address to be configured for external-\n\
    \   ip-address-pool.\n   Likewise, one or multiple IP address pools may be configured\
    \ for\n   Destination NAT (dst-ip-address-pool).\n"
- title: 2.6.  Port-Set Assignment
  contents:
  - "2.6.  Port-Set Assignment\n   Port numbers can be assigned by a NAT individually\
    \ (that is, a single\n   port is assigned on a per-session basis), but this port\
    \ allocation\n   scheme may not be optimal for logging purposes (Section 12 of\n\
    \   [RFC6269]).  A NAT function should be able to assign port sets (e.g.,\n  \
    \ [RFC7753]) to optimize the volume of the logging data (REQ-14 of\n   [RFC6888]).\
    \  Both allocation schemes are supported in the NAT YANG\n   module.\n   When\
    \ port-set assignment is activated (i.e., port-allocation-\n   type==port-range-allocation),\
    \ the NAT can be provided with the size\n   of the port set to be assigned (port-set-size).\n"
- title: 2.7.  Port-Restricted IP Addresses
  contents:
  - "2.7.  Port-Restricted IP Addresses\n   Some NATs restrict the source port numbers\
    \ (e.g., Lightweight 4over6\n   [RFC7596] and Mapping of Address and Port with\
    \ Encapsulation (MAP-E)\n   [RFC7597]).  Two schemes of port-set assignments (port-set-restrict)\n\
    \   are supported in this document:\n   o  Simple port range: is defined by two\
    \ port values, the start and\n      the end of the port range [RFC8045].\n   o\
    \  Algorithmic: an algorithm is defined in [RFC7597] to characterize\n      the\
    \ set of ports that can be used.\n"
- title: 2.8.  NAT Mapping Entries
  contents:
  - "2.8.  NAT Mapping Entries\n   A TCP/UDP mapping entry maintains an association\
    \ between the\n   following information:\n      (internal-src-address, internal-src-port)\
    \ (internal-dst-address,\n      internal-dst-port) <=> (external-src-address,\
    \ external-src-port)\n      (external-dst-address, external-dst-port)\n   An ICMP\
    \ mapping entry maintains an association between the following\n   information:\n\
    \      (internal-src-address, internal-dst-address, internal ICMP/ICMPv6\n   \
    \   identifier) <=> (external-src-address, external-dst-address,\n      external\
    \ ICMP/ICMPv6 identifier)\n   As a reminder, all the ICMP Query messages contain\
    \ an 'Identifier'\n   field, which is referred to in this document as the 'ICMP\n\
    \   Identifier'.\n   To cover TCP, UDP, and ICMP, the NAT YANG module assumes\
    \ the\n   following structure of a mapping entry:\n   type:   Indicates how the\
    \ mapping was instantiated.  For example, it\n      may indicate whether a mapping\
    \ is dynamically instantiated by a\n      packet or statically configured.\n \
    \  transport-protocol:  Indicates the transport protocol (e.g., UDP,\n      TCP,\
    \ and ICMP) of a given mapping.\n   internal-src-address:  Indicates the source\
    \ IP address/prefix as used\n      by an internal host.\n   internal-src-port:\
    \  Indicates the source port number (or ICMP\n      identifier) as used by an\
    \ internal host.\n   external-src-address:   Indicates the source IP address/prefix\
    \ as\n      assigned by the NAT.\n   external-src-port:   Indicates the source\
    \ port number (or ICMP\n      identifier) as assigned by the NAT.\n   internal-dst-address:\
    \  Indicates the destination IP address/prefix as\n      used by an internal host\
    \ when sending a packet to a remote host.\n   internal-dst-port:   Indicates the\
    \ destination port number as used by\n      an internal host when sending a packet\
    \ to a remote host.\n   external-dst-address:  Indicates the destination IP address/prefix\n\
    \      used by a NAT when processing a packet issued by an internal host\n   \
    \   towards a remote host.\n   external-dst-port:   Indicates the destination\
    \ port number used by a\n      NAT when processing a packet issued by an internal\
    \ host towards a\n      remote host.\n   In order to cover both NAT64 and NAT44\
    \ flavors, the NAT mapping\n   structure allows for the inclusion of an IPv4 or\
    \ an IPv6 address as\n   an internal IP address.  Remaining fields are common\
    \ to both NAT\n   schemes.\n   For example, the mapping that will be created by\
    \ a NAT64 upon receipt\n   of a TCP SYN from source address 2001:db8:aaaa::1 and\
    \ source port\n   number 25636 to destination IP address 2001:db8:1234::198.51.100.1\n\
    \   and destination port number 8080 is shown in Table 2.  This example\n   assumes\
    \ Endpoint-Dependent Mapping (EDM).\n   +-----------------------+-------------------------------------------+\n\
    \   |         Mapping Entry | Value                                     |\n  \
    \ |             Attribute |                                           |\n   +-----------------------+-------------------------------------------+\n\
    \   |                  type | dynamic implicit mapping                  |\n  \
    \ |    transport-protocol | 6 (TCP)                                   |\n   |\
    \  internal-src-address | 2001:db8:aaaa::1                          |\n   |  \
    \   internal-src-port | 25636                                     |\n   |  external-src-address\
    \ | T (an IPv4 address configured on the      |\n   |                       |\
    \ NAT64)                                    |\n   |     external-src-port | t\
    \ (a port number that is chosen by the    |\n   |                       | NAT64)\
    \                                    |\n   |  internal-dst-address | 2001:db8:1234::198.51.100.1\
    \               |\n   |     internal-dst-port | 8080                         \
    \             |\n   |  external-dst-address | 198.51.100.1                   \
    \           |\n   |     external-dst-port | 8080                             \
    \         |\n   +-----------------------+-------------------------------------------+\n\
    \                 Table 2: Example of an EDM NAT64 Mapping\n   The mappings that\
    \ will be created by a NAT44 upon receipt of an ICMP\n   request from source address\
    \ 198.51.100.1 and ICMP identifier (ID1) to\n   destination IP address 198.51.100.11\
    \ is depicted in Table 3.  This\n   example assumes Endpoint-Independent Mapping\
    \ (EIM).\n   +----------------------+--------------------------------------------+\n\
    \   |        Mapping-Entry | Value                                      |\n  \
    \ |            Attribute |                                            |\n   +----------------------+--------------------------------------------+\n\
    \   |                 type | dynamic implicit mapping                   |\n  \
    \ |   transport-protocol | 1 (ICMP)                                   |\n   |\
    \ internal-src-address | 198.51.100.1                               |\n   |  \
    \  internal-src-port | ID1                                        |\n   | external-src-address\
    \ | T (an IPv4 address configured on the       |\n   |                      |\
    \ NAT44)                                     |\n   |    external-src-port | ID2\
    \ (an ICMP identifier that is chosen by  |\n   |                      | the NAT44)\
    \                                 |\n   +----------------------+--------------------------------------------+\n\
    \              Table 3: Example of an EIM NAT44 Mapping Entry\n   The mapping\
    \ that will be created by a NAT64 (EIM mode) upon receipt\n   of an ICMP request\
    \ from source address 2001:db8:aaaa::1 and ICMP\n   identifier (ID1) to destination\
    \ IP address\n   2001:db8:1234::198.51.100.1 is shown in Table 4.\n   +----------------------+--------------------------------------------+\n\
    \   |        Mapping-Entry | Value                                      |\n  \
    \ |            Attribute |                                            |\n   +----------------------+--------------------------------------------+\n\
    \   |                 type | dynamic implicit mapping                   |\n  \
    \ |   transport-protocol | 58 (ICMPv6)                                |\n   |\
    \ internal-src-address | 2001:db8:aaaa::1                           |\n   |  \
    \  internal-src-port | ID1                                        |\n   | external-src-address\
    \ | T (an IPv4 address configured on the       |\n   |                      |\
    \ NAT64)                                     |\n   |    external-src-port | ID2\
    \ (an ICMP identifier that is chosen by  |\n   |                      | the NAT64)\
    \                                 |\n   +----------------------+--------------------------------------------+\n\
    \              Table 4: Example of an EIM NAT64 Mapping Entry\n   Note that a\
    \ mapping table is maintained only for stateful NAT\n   functions.  Particularly:\n\
    \   o  No mapping table is maintained for NPTv6 given that it is\n      stateless\
    \ and transport-agnostic.\n   o  The double translations are stateless in CLAT\
    \ if a dedicated IPv6\n      prefix is provided for CLAT.  If not, a stateful\
    \ NAT44 will be\n      required.\n   o  No per-flow mapping is maintained for\
    \ EAM [RFC7757].\n   o  No mapping table is maintained for Stateless IPv4/IPv6\n\
    \      translation.  As a reminder, in such deployments, internal IPv6\n     \
    \ nodes are addressed using IPv4-translatable IPv6 addresses, which\n      enable\
    \ them to be accessed by IPv4 nodes [RFC6052].\n"
- title: 2.9.  Resource Limits
  contents:
  - "2.9.  Resource Limits\n   In order to comply with CGN deployments in particular,\
    \ the NAT YANG\n   module allows limiting the number of external ports per subscriber\n\
    \   (port-quota) and the amount of state memory allocated per mapping and\n  \
    \ per subscriber (mapping-limits and connection-limits).  According to\n   [RFC6888],\
    \ the module is designed to allow for the following:\n   o  Per-subscriber limits\
    \ are configurable by the NAT administrator.\n   o  Per-subscriber limits are\
    \ configurable independently per the\n      transport protocol.\n   o  Administrator-adjustable\
    \ thresholds to prevent a single subscriber\n      from consuming excessive CPU\
    \ resources from the NAT (e.g., rate-\n      limit the subscriber's creation of\
    \ new mappings) can be\n      configured.\n   Table 5 lists the various limits\
    \ that can be set using the NAT YANG\n   module.  Once a limit is reached, packets\
    \ that would normally trigger\n   new port mappings or be translated because they\
    \ match existing\n   mappings, are dropped by the translator.\n   +-------------------+-----------------------------------------------+\n\
    \   | Limit             | Description                                   |\n  \
    \ +-------------------+-----------------------------------------------+\n   |\
    \ port-quota        | Specifies a port quota to be assigned per     |\n   |  \
    \                 | subscriber.  It corresponds to the maximum    |\n   |    \
    \               | number of ports to be used by a subscriber.   |\n   |      \
    \             | The port quota can be configured to apply to  |\n   |        \
    \           | all protocols or to a specific protocol.      |\n   |          \
    \         | Distinct port quota may be configured per     |\n   |            \
    \       | protocol.                                     |\n   +-------------------+-----------------------------------------------+\n\
    \   | fragments-limit   | In order to prevent denial-of-service (DoS)   |\n  \
    \ |                   | attacks that can be caused by fragments, this |\n   |\
    \                   | parameter is used to limit the number of out- |\n   |  \
    \                 | of-order fragments that can be handled by a   |\n   |    \
    \               | translator.                                   |\n   +-------------------+-----------------------------------------------+\n\
    \   | mapping-limits    | This parameter can be used to control the     |\n  \
    \ |                   | maximum number of subscribers that can be     |\n   |\
    \                   | serviced by a NAT instance (limit-subscriber) |\n   |  \
    \                 | and the maximum number of address and/or port |\n   |    \
    \               | mappings that can be maintained by a NAT      |\n   |      \
    \             | instance (limit-address-mappings and limit-   |\n   |        \
    \           | port-mappings).  Also, limits specific to     |\n   |          \
    \         | protocols (e.g., TCP, UDP, ICMP) can also be  |\n   |            \
    \       | specified (limit-per-protocol).               |\n   +-------------------+-----------------------------------------------+\n\
    \   | connection-limits | In order to prevent exhausting the resources  |\n  \
    \ |                   | of a NAT implementation and to ensure         |\n   |\
    \                   | fairness usage among subscribers, various     |\n   |  \
    \                 | rate limits can be specified.  Rate-limiting  |\n   |    \
    \               | can be enforced per subscriber (limit-        |\n   |      \
    \             | subscriber), per NAT instance (limit-per-     |\n   |        \
    \           | instance), and/or be specified for each       |\n   |          \
    \         | supported protocol (limit-per-protocol).      |\n   +-------------------+-----------------------------------------------+\n\
    \                            Table 5: NAT Limits\n   Table 6 describes limits\
    \ that, once exceeded, will trigger\n   notifications to be generated:\n   +--------------------------+----------------------------------------+\n\
    \   | Notification Threshold   | Description                            |\n  \
    \ +--------------------------+----------------------------------------+\n   |\
    \ high-threshold           | Used to notify high address            |\n   |  \
    \                        | utilization of a given pool.  When     |\n   |    \
    \                      | exceeded, a nat-pool-event             |\n   |      \
    \                    | notification will be generated.        |\n   +--------------------------+----------------------------------------+\n\
    \   | low-threshold            | Used to notify low address utilization |\n  \
    \ |                          | of a given pool.  An administrator is  |\n   |\
    \                          | supposed to configure low-threshold so |\n   |  \
    \                        | that it can reflect an abnormal usage  |\n   |    \
    \                      | of NAT resources.  When exceeded, a    |\n   |      \
    \                    | nat-pool-event notification will be    |\n   |        \
    \                  | generated.                             |\n   +--------------------------+----------------------------------------+\n\
    \   | notify-addresses-usage   | Used to notify high address            |\n  \
    \ |                          | utilization of all pools configured to |\n   |\
    \                          | a NAT instance.  When exceeded, a nat- |\n   |  \
    \                        | instance-event will be generated.      |\n   +--------------------------+----------------------------------------+\n\
    \   | notify-ports-usage       | Used to notify high port allocation    |\n  \
    \ |                          | taking into account all pools          |\n   |\
    \                          | configured to a NAT instance.  When    |\n   |  \
    \                        | exceeded, a nat-instance-event         |\n   |    \
    \                      | notification will be generated.        |\n   +--------------------------+----------------------------------------+\n\
    \   | notify-subscribers-limit | Used to notify a high number of active |\n  \
    \ |                          | subscribers that are serviced by a NAT |\n   |\
    \                          | instance.  When exceeded, a nat-       |\n   |  \
    \                        | instance-event notification will be    |\n   |    \
    \                      | generated.                             |\n   +--------------------------+----------------------------------------+\n\
    \                     Table 6: Notification Thresholds\n   In order to prevent\
    \ a NAT implementation from generating frequent\n   notifications, the NAT YANG\
    \ module supports the following limits\n   (Table 7) used to control how frequent\
    \ notifications can be\n   generated.  That is, notifications are subject to rate-limiting\n\
    \   imposed by these intervals.\n   +-------------------------------------+-----------------------------+\n\
    \   | Interval                            | Description                 |\n  \
    \ +-------------------------------------+-----------------------------+\n   |\
    \ notify-pool-usage/notify-interval   | Indicates the minimum       |\n   |  \
    \                                   | number of seconds between   |\n   |    \
    \                                 | successive notifications    |\n   |      \
    \                               | for a given address pool.   |\n   +-------------------------------------+-----------------------------+\n\
    \   | notification-limits/notify-interval | Indicates the minimum       |\n  \
    \ |                                     | number of seconds between   |\n   |\
    \                                     | successive notifications    |\n   |  \
    \                                   | for a NAT instance.         |\n   +-------------------------------------+-----------------------------+\n\
    \                      Table 7: Notification Intervals\n"
- title: 2.10.  Binding the NAT Function to an External Interface
  contents:
  - "2.10.  Binding the NAT Function to an External Interface\n   The module is designed\
    \ to specify an external realm on which the NAT\n   function must be applied (external-realm).\
    \  The module supports\n   indicating an interface as an external realm [RFC8343],\
    \ but the\n   module is extensible so that other choices can be indicated in the\n\
    \   future (e.g., Virtual Routing and Forwarding (VRF) instance).\n   Distinct\
    \ external realms can be provided as a function of the NAT\n   policy (see, for\
    \ example, Section 4 of [RFC7289]).\n   If no external realm is provided, this\
    \ assumes that the system is\n   able to determine the external interface (VRF\
    \ instance, etc.) on\n   which the NAT will be applied.  Typically, the WAN and\
    \ LAN interfaces\n   of Customer Premises Equipment (CPE) are determined by the\
    \ CPE.\n"
- title: 2.11.  Relationship to NATV2-MIB
  contents:
  - "2.11.  Relationship to NATV2-MIB\n   Section of 5.1 of [RFC7659] indicates that\
    \ the NATV2-MIB assumes that\n   the following information is configured on the\
    \ NAT by some means,\n   which is not specified in [RFC7659]:\n   o  The set of\
    \ address realms to which the device connects.\n   o  For the CGN case, per-subscriber\
    \ information including the\n      subscriber index, address realm, assigned prefix\
    \ or address, and\n      (possibly) policies regarding address pool selection\
    \ in the\n      various possible address realms to which the subscriber may\n\
    \      connect.\n   o  The set of NAT instances running on the device, identified\
    \ by NAT\n      instance index and name.\n   o  The port mapping, filtering, pooling,\
    \ and fragment behaviors for\n      each NAT instance.\n   o  The set of protocols\
    \ supported by each NAT instance.\n   o  Address pools for each NAT instance,\
    \ including for each pool the\n      pool index, address realm, and minimum and\
    \ maximum port numbers.\n   o  Static address and port mapping entries.\n   All\
    \ the above parameters can be configured by means of the NAT YANG\n   module.\n\
    \   Unlike the NATV2-MIB, the NAT YANG module allows the configuration of\n  \
    \ multiple policies per NAT instance.\n"
- title: 2.12.  Tree Structure
  contents:
  - "2.12.  Tree Structure\n   The tree structure of the NAT YANG module is provided\
    \ below:\n  module: ietf-nat\n    +--rw nat\n       +--rw instances\n        \
    \  +--rw instance* [id]\n             +--rw id                       uint32\n\
    \             +--rw name?                    string\n             +--rw enable?\
    \                  boolean\n             +--ro capabilities\n             |  +--ro\
    \ nat-flavor*\n             |  |       identityref\n             |  +--ro per-interface-binding*\n\
    \             |  |       enumeration\n             |  +--ro transport-protocols*\
    \ [protocol-id]\n             |  |  +--ro protocol-id      uint8\n           \
    \  |  |  +--ro protocol-name?   string\n             |  +--ro restricted-port-support?\n\
    \             |  |       boolean\n             |  +--ro static-mapping-support?\n\
    \             |  |       boolean\n             |  +--ro port-randomization-support?\n\
    \             |  |       boolean\n             |  +--ro port-range-allocation-support?\n\
    \             |  |       boolean\n             |  +--ro port-preservation-suport?\n\
    \             |  |       boolean\n             |  +--ro port-parity-preservation-support?\n\
    \             |  |       boolean\n             |  +--ro address-roundrobin-support?\n\
    \             |  |       boolean\n             |  +--ro paired-address-pooling-support?\n\
    \             |  |       boolean\n             |  +--ro endpoint-independent-mapping-support?\n\
    \             |  |       boolean\n             |  +--ro address-dependent-mapping-support?\n\
    \             |  |       boolean\n             |  +--ro address-and-port-dependent-mapping-support?\n\
    \             |  |       boolean\n             |  +--ro endpoint-independent-filtering-support?\n\
    \             |  |       boolean\n             |  +--ro address-dependent-filtering?\n\
    \             |  |       boolean\n             |  +--ro address-and-port-dependent-filtering?\n\
    \             |  |       boolean\n             |  +--ro fragment-behavior?\n \
    \            |          enumeration\n             +--rw type?                \
    \    identityref\n             +--rw per-interface-binding?   enumeration\n  \
    \           +--rw nat-pass-through* [id]\n             |       {basic-nat44 or\
    \ napt44 or dst-nat}?\n             |  +--rw id        uint32\n             |\
    \  +--rw prefix    inet:ip-prefix\n             |  +--rw port?     inet:port-number\n\
    \             +--rw policy* [id]\n             |  +--rw id                   \
    \       uint32\n             |  +--rw clat-parameters {clat}?\n             |\
    \  |  +--rw clat-ipv6-prefixes* [ipv6-prefix]\n             |  |  |  +--rw ipv6-prefix\
    \    inet:ipv6-prefix\n             |  |  +--rw ipv4-prefixes* [ipv4-prefix]\n\
    \             |  |     +--rw ipv4-prefix    inet:ipv4-prefix\n             | \
    \ +--rw nptv6-prefixes* [internal-ipv6-prefix] {nptv6}?\n             |  |  +--rw\
    \ internal-ipv6-prefix    inet:ipv6-prefix\n             |  |  +--rw external-ipv6-prefix\
    \    inet:ipv6-prefix\n             |  +--rw eam* [ipv4-prefix] {eam}?\n     \
    \        |  |  +--rw ipv4-prefix    inet:ipv4-prefix\n             |  |  +--rw\
    \ ipv6-prefix    inet:ipv6-prefix\n             |  +--rw nat64-prefixes* [nat64-prefix]\n\
    \             |  |       {siit or nat64 or clat}?\n             |  |  +--rw nat64-prefix\
    \               inet:ipv6-prefix\n             |  |  +--rw destination-ipv4-prefix*\
    \ [ipv4-prefix]\n             |  |  |  +--rw ipv4-prefix    inet:ipv4-prefix\n\
    \             |  |  +--rw stateless-enable?          boolean\n             | \
    \ +--rw external-ip-address-pool* [pool-id]\n             |  |       {basic-nat44\
    \ or napt44 or nat64}?\n             |  |  +--rw pool-id             uint32\n\
    \             |  |  +--rw external-ip-pool    inet:ipv4-prefix\n             |\
    \  +--rw port-set-restrict {napt44 or nat64}?\n             |  |  +--rw (port-type)?\n\
    \             |  |     +--:(port-range)\n             |  |     |  +--rw start-port-number?\
    \   inet:port-number\n             |  |     |  +--rw end-port-number?     inet:port-number\n\
    \             |  |     +--:(port-set-algo)\n             |  |        +--rw psid-offset?\
    \         uint8\n             |  |        +--rw psid-len             uint8\n \
    \            |  |        +--rw psid                 uint16\n             |  +--rw\
    \ dst-nat-enable?             boolean\n             |  |       {basic-nat44 or\
    \ napt44}?\n             |  +--rw dst-ip-address-pool* [pool-id] {dst-nat}?\n\
    \             |  |  +--rw pool-id            uint32\n             |  |  +--rw\
    \ dst-in-ip-pool?    inet:ip-prefix\n             |  |  +--rw dst-out-ip-pool\
    \    inet:ip-prefix\n             |  +--rw transport-protocols* [protocol-id]\n\
    \             |  |       {napt44 or nat64 or dst-nat}?\n             |  |  +--rw\
    \ protocol-id      uint8\n             |  |  +--rw protocol-name?   string\n \
    \            |  +--rw subscriber-mask-v6?         uint8\n             |  +--rw\
    \ subscriber-match* [match-id]\n             |  |       {basic-nat44 or napt44\
    \ or dst-nat}?\n             |  |  +--rw match-id    uint32\n             |  |\
    \  +--rw subnet      inet:ip-prefix\n             |  +--rw address-allocation-type?\
    \    enumeration\n             |  +--rw port-allocation-type?       enumeration\n\
    \             |  |       {napt44 or nat64}?\n             |  +--rw mapping-type?\
    \               enumeration\n             |  |       {napt44 or nat64}?\n    \
    \         |  +--rw filtering-type?             enumeration\n             |  |\
    \       {napt44 or nat64}?\n             |  +--rw fragment-behavior?         \
    \ enumeration\n             |  |       {napt44 or nat64}?\n             |  +--rw\
    \ port-quota* [quota-type] {napt44 or nat64}?\n             |  |  +--rw port-limit?\
    \   uint16\n             |  |  +--rw quota-type    uint8\n             |  +--rw\
    \ port-set {napt44 or nat64}?\n             |  |  +--rw port-set-size       uint16\n\
    \             |  |  +--rw port-set-timeout?   uint32\n             |  +--rw timers\
    \ {napt44 or nat64}?\n             |  |  +--rw udp-timeout?               uint32\n\
    \             |  |  +--rw tcp-idle-timeout?          uint32\n             |  |\
    \  +--rw tcp-trans-open-timeout?    uint32\n             |  |  +--rw tcp-trans-close-timeout?\
    \   uint32\n             |  |  +--rw tcp-in-syn-timeout?        uint32\n     \
    \        |  |  +--rw fragment-min-timeout?      uint32\n             |  |  +--rw\
    \ icmp-timeout?              uint32\n             |  |  +--rw per-port-timeout*\
    \ [port-number]\n             |  |  |  +--rw port-number    inet:port-number\n\
    \             |  |  |  +--rw protocol?      uint32\n             |  |  |  +--rw\
    \ timeout        uint32\n             |  |  +--rw hold-down-timeout?         uint32\n\
    \             |  |  +--rw hold-down-max?             uint32\n             |  +--rw\
    \ fragments-limit?            uint32\n             |  +--rw algs* [name]\n   \
    \          |  |  +--rw name                  string\n             |  |  +--rw\
    \ transport-protocol?   uint32\n             |  |  +--rw dst-transport-port\n\
    \             |  |  |  +--rw start-port-number?   inet:port-number\n         \
    \    |  |  |  +--rw end-port-number?     inet:port-number\n             |  | \
    \ +--rw src-transport-port\n             |  |  |  +--rw start-port-number?   inet:port-number\n\
    \             |  |  |  +--rw end-port-number?     inet:port-number\n         \
    \    |  |  +--rw status?               boolean\n             |  +--rw all-algs-enable?\
    \            boolean\n             |  +--rw notify-pool-usage\n             |\
    \  |       {basic-nat44 or napt44 or nat64}?\n             |  |  +--rw pool-id?\
    \           uint32\n             |  |  +--rw low-threshold?    percent\n     \
    \        |  |  +--rw high-threshold?     percent\n             |  |  +--rw notify-interval?\
    \   uint32\n             |  +--rw external-realm\n             |     +--rw (realm-type)?\n\
    \             |        +--:(interface)\n             |           +--rw external-interface?\
    \   if:interface-ref\n             +--rw mapping-limits {napt44 or nat64}?\n \
    \            |  +--rw limit-subscribers?        uint32\n             |  +--rw\
    \ limit-address-mappings?   uint32\n             |  +--rw limit-port-mappings?\
    \      uint32\n             |  +--rw limit-per-protocol* [protocol-id]\n     \
    \        |          {napt44 or nat64 or dst-nat}?\n             |     +--rw protocol-id\
    \    uint8\n             |     +--rw limit?         uint32\n             +--rw\
    \ connection-limits\n             |       {basic-nat44 or napt44 or nat64}?\n\
    \             |  +--rw limit-per-subscriber?   uint32\n             |  +--rw limit-per-instance?\
    \     uint32\n             |  +--rw limit-per-protocol* [protocol-id]\n      \
    \       |          {napt44 or nat64}?\n             |     +--rw protocol-id  \
    \  uint8\n             |     +--rw limit?         uint32\n             +--rw notification-limits\n\
    \             |  +--rw notify-interval?            uint32\n             |  | \
    \      {basic-nat44 or napt44 or nat64}?\n             |  +--rw notify-addresses-usage?\
    \     percent\n             |  |       {basic-nat44 or napt44 or nat64}?\n   \
    \          |  +--rw notify-ports-usage?         percent\n             |  |   \
    \    {napt44 or nat64}?\n             |  +--rw notify-subscribers-limit?   uint32\n\
    \             |          {basic-nat44 or napt44 or nat64}?\n             +--rw\
    \ mapping-table\n             |  |{basic-nat44 or napt44 or nat64 or clat or dst-nat}?\n\
    \             |  +--rw mapping-entry* [index]\n             |     +--rw index\
    \                   uint32\n             |     +--rw type?                   enumeration\n\
    \             |     +--rw transport-protocol?     uint8\n             |     +--rw\
    \ internal-src-address?   inet:ip-prefix\n             |     +--rw internal-src-port\n\
    \             |     |  +--rw start-port-number?   inet:port-number\n         \
    \    |     |  +--rw end-port-number?     inet:port-number\n             |    \
    \ +--rw external-src-address?   inet:ip-prefix\n             |     +--rw external-src-port\n\
    \             |     |  +--rw start-port-number?   inet:port-number\n         \
    \    |     |  +--rw end-port-number?     inet:port-number\n             |    \
    \ +--rw internal-dst-address?   inet:ip-prefix\n             |     +--rw internal-dst-port\n\
    \             |     |  +--rw start-port-number?   inet:port-number\n         \
    \    |     |  +--rw end-port-number?     inet:port-number\n             |    \
    \ +--rw external-dst-address?   inet:ip-prefix\n             |     +--rw external-dst-port\n\
    \             |     |  +--rw start-port-number?   inet:port-number\n         \
    \    |     |  +--rw end-port-number?     inet:port-number\n             |    \
    \ +--rw lifetime?               uint32\n             +--ro statistics\n      \
    \          +--ro discontinuity-time     yang:date-and-time\n                +--ro\
    \ traffic-statistics\n                |  +--ro sent-packets?\n               \
    \ |  |       yang:zero-based-counter64\n                |  +--ro sent-bytes?\n\
    \                |  |       yang:zero-based-counter64\n                |  +--ro\
    \ rcvd-packets?\n                |  |       yang:zero-based-counter64\n      \
    \          |  +--ro rcvd-bytes?\n                |  |       yang:zero-based-counter64\n\
    \                |  +--ro dropped-packets?\n                |  |       yang:zero-based-counter64\n\
    \                |  +--ro dropped-bytes?\n                |  |       yang:zero-based-counter64\n\
    \                |  +--ro dropped-fragments?\n                |  |       yang:zero-based-counter64\n\
    \                |  |       {napt44 or nat64}?\n                |  +--ro dropped-address-limit-packets?\n\
    \                |  |       yang:zero-based-counter64\n                |  |  \
    \     {basic-nat44 or napt44 or nat64}?\n                |  +--ro dropped-address-limit-bytes?\n\
    \                |  |       yang:zero-based-counter64\n                |  |  \
    \     {basic-nat44 or napt44 or nat64}?\n                |  +--ro dropped-address-packets?\n\
    \                |  |       yang:zero-based-counter64\n                |  |  \
    \     {basic-nat44 or napt44 or nat64}?\n                |  +--ro dropped-address-bytes?\n\
    \                |  |       yang:zero-based-counter64\n                |  |  \
    \     {basic-nat44 or napt44 or nat64}?\n                |  +--ro dropped-port-limit-packets?\n\
    \                |  |       yang:zero-based-counter64\n                |  |  \
    \     {napt44 or nat64}?\n                |  +--ro dropped-port-limit-bytes?\n\
    \                |  |       yang:zero-based-counter64\n                |  |  \
    \     {napt44 or nat64}?\n                |  +--ro dropped-port-packets?\n   \
    \             |  |       yang:zero-based-counter64\n                |  |     \
    \  {napt44 or nat64}?\n                |  +--ro dropped-port-bytes?\n        \
    \        |  |       yang:zero-based-counter64\n                |  |       {napt44\
    \ or nat64}?\n                |  +--ro dropped-subscriber-limit-packets?\n   \
    \             |  |       yang:zero-based-counter64\n                |  |     \
    \  {basic-nat44 or napt44 or nat64}?\n                |  +--ro dropped-subscriber-limit-bytes?\n\
    \                |          yang:zero-based-counter64\n                |     \
    \     {basic-nat44 or napt44 or nat64}?\n                +--ro mappings-statistics\n\
    \                |  +--ro total-active-subscribers?   yang:gauge32\n         \
    \       |  |       {basic-nat44 or napt44 or nat64}?\n                |  +--ro\
    \ total-address-mappings?     yang:gauge32\n                |  |{basic-nat44 or\
    \ napt44 or nat64 or clat or dst-nat}?\n                |  +--ro total-port-mappings?\
    \        yang:gauge32\n                |  |       {napt44 or nat64}?\n       \
    \         |  +--ro total-per-protocol* [protocol-id]\n                |      \
    \    {napt44 or nat64}?\n                |     +--ro protocol-id    uint8\n  \
    \              |     +--ro total?         yang:gauge32\n                +--ro\
    \ pools-stats {basic-nat44 or napt44 or nat64}?\n                   +--ro addresses-allocated?\
    \   yang:gauge32\n                   +--ro addresses-free?        yang:gauge32\n\
    \                   +--ro ports-stats {napt44 or nat64}?\n                   |\
    \  +--ro ports-allocated?   yang:gauge32\n                   |  +--ro ports-free?\
    \        yang:gauge32\n                   +--ro per-pool-stats* [pool-id]\n  \
    \                    |    {basic-nat44 or napt44 or nat64}?\n                \
    \      +--ro pool-id               uint32\n                      +--ro discontinuity-time\
    \    yang:date-and-time\n                      +--ro pool-stats\n            \
    \          |  +--ro addresses-allocated?   yang:gauge32\n                    \
    \  |  +--ro addresses-free?        yang:gauge32\n                      +--ro port-stats\
    \ {napt44 or nat64}?\n                         +--ro ports-allocated?   yang:gauge32\n\
    \                         +--ro ports-free?        yang:gauge32\n    notifications:\n\
    \      +---n nat-pool-event {basic-nat44 or napt44 or nat64}?\n      |  +--ro\
    \ id        -> /nat/instances/instance/id\n      |  +--ro policy-id?\n      |\
    \  |       -> /nat/instances/instance/policy/id\n      |  +--ro pool-id\n    \
    \  |  |       -> /nat/instances/instance/policy/\n      |  |            external-ip-address-pool/pool-id\n\
    \      |  +--ro notify-pool-threshold    percent\n      +---n nat-instance-event\
    \ {basic-nat44 or napt44 or nat64}?\n         +--ro id\n         |       -> /nat/instances/instance/id\n\
    \         +--ro notify-subscribers-threshold?   uint32\n         +--ro notify-addresses-threshold?\
    \     percent\n         +--ro notify-ports-threshold?         percent\n"
- title: 3.  NAT YANG Module
  contents:
  - "3.  NAT YANG Module\n <CODE BEGINS> file \"ietf-nat@2019-01-10.yang\"\n module\
    \ ietf-nat {\n  yang-version 1.1;\n  namespace \"urn:ietf:params:xml:ns:yang:ietf-nat\"\
    ;\n  prefix nat;\n  import ietf-inet-types {\n    prefix inet;\n    reference\n\
    \      \"Section 4 of RFC 6991\";\n  }\n  import ietf-yang-types {\n    prefix\
    \ yang;\n    reference\n      \"Section 3 of RFC 6991\";\n  }\n  import ietf-interfaces\
    \ {\n    prefix if;\n    reference\n      \"RFC 8343: A YANG Data Model for Interface\
    \ Management\";\n  }\n  organization\n    \"IETF OPSAWG (Operations and Management\
    \ Area Working Group)\";\n  contact\n    \"WG Web:   <https://datatracker.ietf.org/wg/opsawg/>\n\
    \     WG List:  <mailto:opsawg@ietf.org>\n     Editor:  Mohamed Boucadair\n  \
    \            <mailto:mohamed.boucadair@orange.com>\n     Author:  Senthil Sivakumar\n\
    \              <mailto:ssenthil@cisco.com>\n     Author:  Christian Jacquenet\n\
    \              <mailto:christian.jacquenet@orange.com>\n     Author:  Suresh Vinapamula\n\
    \              <mailto:sureshk@juniper.net>\n     Author:  Qin Wu\n          \
    \    <mailto:bill.wu@huawei.com>\";\n  description\n    \"This module is a YANG\
    \ module for NAT implementations.\n     NAT44, Network Address and Protocol Translation\
    \ from IPv6\n     Clients to IPv4 Servers (NAT64), customer-side translator\n\
    \     (CLAT), Stateless IP/ICMP Translation (SIIT), Explicit\n     Address Mappings\
    \ (EAM) for SIIT, IPv6 Network Prefix\n     Translation (NPTv6), and Destination\
    \ NAT are covered.\n     Copyright (c) 2018 IETF Trust and the persons identified\
    \ as\n     authors of the code.  All rights reserved.\n     Redistribution and\
    \ use in source and binary forms, with or\n     without modification, is permitted\
    \ pursuant to, and subject\n     to the license terms contained in, the Simplified\
    \ BSD License\n     set forth in Section 4.c of the IETF Trust's Legal Provisions\n\
    \     Relating to IETF Documents\n     (http://trustee.ietf.org/license-info).\n\
    \     This version of this YANG module is part of RFC 8512; see\n     the RFC\
    \ itself for full legal notices.\";\n  revision 2019-01-10 {\n    description\n\
    \      \"Initial revision.\";\n    reference\n      \"RFC 8512: A YANG Module\
    \ for Network Address Translation\n                 (NAT) and Network Prefix Translation\
    \ (NPT)\";\n  }\n  /*\n   * Definitions\n   */\n  typedef percent {\n    type\
    \ uint8 {\n      range \"0 .. 100\";\n    }\n    description\n      \"Percentage\"\
    ;\n  }\n  /*\n   * Features\n   */\n  feature basic-nat44 {\n    description\n\
    \      \"Basic NAT44 translation is limited to IP addresses alone.\";\n    reference\n\
    \      \"RFC 3022: Traditional IP Network Address Translator\n               \
    \  (Traditional NAT)\";\n  }\n  feature napt44 {\n    description\n      \"Network\
    \ Address Port Translator (NAPT): translation is\n       extended to include IP\
    \ addresses and transport identifiers\n       (such as a TCP/UDP port or ICMP\
    \ query ID).\n       If the internal IP address is not sufficient to uniquely\n\
    \       disambiguate NAPT44 mappings, an additional attribute is\n       required.\
    \  For example, that additional attribute may\n       be an IPv6 address (a.k.a.,\
    \ DS-Lite) or\n       a Layer 2 identifier (a.k.a., Per-Interface NAT)\";\n  \
    \  reference\n      \"RFC 3022: Traditional IP Network Address Translator\n  \
    \               (Traditional NAT)\";\n  }\n  feature dst-nat {\n    description\n\
    \      \"Destination NAT is a translation that acts on the destination\n     \
    \  IP address and/or destination port number.  This flavor is\n       usually\
    \ deployed in load balancers or at devices\n       in front of public servers.\"\
    ;\n  }\n  feature nat64 {\n    description\n      \"NAT64 translation allows IPv6-only\
    \ clients to contact IPv4\n       servers using, e.g., UDP, TCP, or ICMP.  One\
    \ or more\n       public IPv4 addresses assigned to a NAT64 translator are\n \
    \      shared among several IPv6-only clients.\";\n    reference\n      \"RFC\
    \ 6146: Stateful NAT64: Network Address and Protocol\n                 Translation\
    \ from IPv6 Clients to IPv4 Servers\";\n  }\n  feature siit {\n    description\n\
    \      \"The Stateless IP/ICMP Translation Algorithm (SIIT), which\n       translates\
    \ between IPv4 and IPv6 packet headers (including\n       ICMP headers).\n   \
    \    In the stateless mode, an IP/ICMP translator converts IPv4\n       addresses\
    \ to IPv6, and vice versa, solely based on the\n       configuration of the stateless\
    \ IP/ICMP translator and\n       information contained within the packet being\
    \ translated.\n       The translator must support the stateless address mapping\n\
    \       algorithm defined in RFC 6052, which is the default behavior.\";\n   \
    \ reference\n      \"RFC 7915: IP/ICMP Translation Algorithm\";\n  }\n  feature\
    \ clat {\n    description\n      \"CLAT is customer-side translator that algorithmically\n\
    \       translates 1:1 private IPv4 addresses to global IPv6\n       addresses,\
    \ and vice versa.\n       When a dedicated /64 prefix is not available for translation\n\
    \       from DHCPv6-PD, the CLAT may perform NAT44 for all IPv4 LAN\n       packets\
    \ so that all the LAN-originated IPv4 packets appear\n       from a single IPv4\
    \ address and are then statelessly translated\n       to one interface IPv6 address\
    \ that is claimed by the CLAT via\n       the Neighbor Discovery Protocol (NDP)\
    \ and defended with\n       Duplicate Address Detection.\";\n    reference\n \
    \     \"RFC 6877: 464XLAT: Combination of Stateful and\n                 Stateless\
    \ Translation\";\n  }\n  feature eam {\n    description\n      \"Explicit Address\
    \ Mapping (EAM) is a bidirectional coupling\n       between an IPv4 prefix and\
    \ an IPv6 prefix.\";\n    reference\n      \"RFC 7757: Explicit Address Mappings\
    \ for Stateless IP/ICMP\n                 Translation\";\n  }\n  feature nptv6\
    \ {\n    description\n      \"NPTv6 is a stateless transport-agnostic IPv6-to-IPv6\n\
    \       prefix translation.\";\n    reference\n      \"RFC 6296: IPv6-to-IPv6\
    \ Network Prefix Translation\";\n  }\n  /*\n   * Identities\n   */\n  identity\
    \ nat-type {\n    description\n      \"Base identity for nat type.\";\n  }\n \
    \ identity basic-nat44 {\n    base nat:nat-type;\n    description\n      \"Identity\
    \ for Basic NAT support.\";\n    reference\n      \"RFC 3022: Traditional IP Network\
    \ Address Translator\n                 (Traditional NAT)\";\n  }\n  identity napt44\
    \ {\n    base nat:nat-type;\n    description\n      \"Identity for NAPT support.\"\
    ;\n    reference\n      \"RFC 3022: Traditional IP Network Address Translator\n\
    \                 (Traditional NAT)\";\n  }\n  identity dst-nat {\n    base nat:nat-type;\n\
    \    description\n      \"Identity for Destination NAT support.\";\n  }\n  identity\
    \ nat64 {\n    base nat:nat-type;\n    description\n      \"Identity for NAT64\
    \ support.\";\n    reference\n      \"RFC 6146: Stateful NAT64: Network Address\
    \ and Protocol\n                 Translation from IPv6 Clients to IPv4 Servers\"\
    ;\n  }\n  identity siit {\n    base nat:nat-type;\n    description\n      \"Identity\
    \ for SIIT support.\";\n    reference\n      \"RFC 7915: IP/ICMP Translation Algorithm\"\
    ;\n  }\n  identity clat {\n    base nat:nat-type;\n    description\n      \"Identity\
    \ for CLAT support.\";\n    reference\n      \"RFC 6877: 464XLAT: Combination\
    \ of Stateful and Stateless\n                 Translation\";\n  }\n  identity\
    \ eam {\n    base nat:nat-type;\n    description\n      \"Identity for EAM support.\"\
    ;\n    reference\n      \"RFC 7757: Explicit Address Mappings for Stateless IP/ICMP\n\
    \                 Translation\";\n  }\n  identity nptv6 {\n    base nat:nat-type;\n\
    \    description\n      \"Identity for NPTv6 support.\";\n    reference\n    \
    \  \"RFC 6296: IPv6-to-IPv6 Network Prefix Translation\";\n  }\n  /*\n   * Grouping\n\
    \   */\n  grouping port-number {\n    description\n      \"An individual port\
    \ number or a range of ports.\n       When only start-port-number is present,\n\
    \       it represents a single port number.\";\n    leaf start-port-number {\n\
    \      type inet:port-number;\n      description\n        \"Beginning of the port\
    \ range.\";\n      reference\n        \"Section 3.2.9 of RFC 8045\";\n    }\n\
    \    leaf end-port-number {\n      type inet:port-number;\n      must '. >= ../start-port-number'\
    \ {\n        error-message\n          \"The end-port-number must be greater than\
    \ or\n           equal to start-port-number.\";\n      }\n      description\n\
    \        \"End of the port range.\";\n      reference\n        \"Section 3.2.10\
    \ of RFC 8045\";\n    }\n  }\n  grouping port-set {\n    description\n      \"\
    Indicates a set of port numbers.\n       It may be a simple port range, or use\
    \ the Port Set\n       Identifier (PSID) algorithm to represent a range of\n \
    \      transport-layer port numbers that will be used by a\n       NAPT.\";\n\
    \    choice port-type {\n      default \"port-range\";\n      description\n  \
    \      \"Port type: port-range or port-set-algo.\";\n      case port-range {\n\
    \        uses port-number;\n      }\n      case port-set-algo {\n        leaf\
    \ psid-offset {\n          type uint8 {\n            range \"0..15\";\n      \
    \    }\n          description\n            \"The number of offset bits (a.k.a.,\
    \ 'a' bits).\n             Specifies the numeric value for the excluded port\n\
    \             range/offset bits.\n             Allowed values are between 0 and\
    \ 15.\";\n          reference\n            \"Section 5.1 of RFC 7597\";\n    \
    \    }\n        leaf psid-len {\n          type uint8 {\n            range \"\
    0..15\";\n          }\n          mandatory true;\n          description\n    \
    \        \"The length of PSID, representing the sharing\n             ratio for\
    \ an IPv4 address.\n             (also known as 'k').\n             The address-sharing\
    \ ratio would be 2^k.\";\n          reference\n            \"Section 5.1 of RFC\
    \ 7597\";\n        }\n        leaf psid {\n          type uint16;\n          mandatory\
    \ true;\n          description\n            \"PSID value, which identifies a set\n\
    \             of ports algorithmically.\";\n          reference\n            \"\
    Section 5.1 of RFC 7597\";\n        }\n      }\n      reference\n        \"RFC\
    \ 7597: Mapping of Address and Port with\n                   Encapsulation (MAP-E)\"\
    ;\n    }\n  }\n  grouping mapping-entry {\n    description\n      \"NAT mapping\
    \ entry.\n       If an attribute is not stored in the mapping/session table,\n\
    \       it means the corresponding field of a packet that\n       matches this\
    \ entry is not rewritten by the NAT or this\n       information is not required\
    \ for NAT filtering purposes.\";\n    leaf index {\n      type uint32;\n     \
    \ description\n        \"A unique identifier of a mapping entry.  This identifier\n\
    \         can be automatically assigned by the NAT instance or be\n         explicitly\
    \ configured.\";\n    }\n    leaf type {\n      type enumeration {\n        enum\
    \ static {\n          description\n            \"The mapping entry is explicitly\
    \ configured\n             (e.g., via a command-line interface).\";\n        }\n\
    \        enum dynamic-implicit {\n          description\n            \"This mapping\
    \ is created implicitly as a side effect\n             of processing a packet\
    \ that requires a new mapping.\";\n        }\n        enum dynamic-explicit {\n\
    \          description\n            \"This mapping is created as a result of an\
    \ explicit\n             request, e.g., a PCP message.\";\n        }\n      }\n\
    \      description\n        \"Indicates the type of a mapping entry.  For example,\n\
    \         a mapping can be: static, implicit dynamic,\n         or explicit dynamic.\"\
    ;\n    }\n    leaf transport-protocol {\n      type uint8;\n      description\n\
    \        \"The upper-layer protocol associated with this mapping.\n         Values\
    \ are taken from the IANA Protocol Numbers registry:\n         <https://www.iana.org/assignments/protocol-numbers/>.\n\
    \         For example, this field contains 6 for TCP,\n         17 for UDP, 33\
    \ for DCCP, or 132 for SCTP.\n         If this leaf is not instantiated, then\
    \ the mapping\n         applies to any protocol.\";\n    }\n    leaf internal-src-address\
    \ {\n      type inet:ip-prefix;\n      description\n        \"Corresponds to the\
    \ source IPv4/IPv6 address/prefix\n         of the packet received on an internal\
    \ interface.\";\n    }\n    container internal-src-port {\n      description\n\
    \        \"Corresponds to the source port of the packet received\n         on\
    \ an internal interface.\n         It is also used to indicate the internal source\
    \ ICMP\n         identifier.\n         As a reminder, all the ICMP Query messages\
    \ contain\n         an 'Identifier' field, which is referred to in this\n    \
    \     document as the 'ICMP Identifier'.\";\n      uses port-number;\n    }\n\
    \    leaf external-src-address {\n      type inet:ip-prefix;\n      description\n\
    \        \"Source IP address/prefix of the packet sent on an\n         external\
    \ interface of the NAT.\";\n    }\n    container external-src-port {\n      description\n\
    \        \"Source port of the packet sent on an external\n         interface of\
    \ the NAT.\n         It is also used to indicate the external source ICMP\n  \
    \       identifier.\";\n      uses port-number;\n    }\n    leaf internal-dst-address\
    \ {\n      type inet:ip-prefix;\n      description\n        \"Corresponds to the\
    \ destination IP address/prefix\n         of the packet received on an internal\
    \ interface\n         of the NAT.\n         For example, some NAT implementations\
    \ support\n         the translation of both source and destination\n         addresses\
    \ and port numbers, sometimes referred to\n         as 'Twice NAT'.\";\n    }\n\
    \    container internal-dst-port {\n      description\n        \"Corresponds to\
    \ the destination port of the\n         IP packet received on the internal interface.\n\
    \         It is also used to include the internal\n         destination ICMP identifier.\"\
    ;\n      uses port-number;\n    }\n    leaf external-dst-address {\n      type\
    \ inet:ip-prefix;\n      description\n        \"Corresponds to the destination\
    \ IP address/prefix\n         of the packet sent on an external interface\n  \
    \       of the NAT.\";\n    }\n    container external-dst-port {\n      description\n\
    \        \"Corresponds to the destination port number of\n         the packet\
    \ sent on the external interface\n         of the NAT.\n         It is also used\
    \ to include the external\n         destination ICMP identifier.\";\n      uses\
    \ port-number;\n    }\n    leaf lifetime {\n      type uint32;\n      units \"\
    seconds\";\n      description\n        \"When specified, it is used to track the\
    \ connection that is\n         fully formed (e.g., once the three-way handshake\n\
    \         TCP is completed) or the duration for maintaining\n         an explicit\
    \ mapping alive.  The mapping entry will be\n         removed by the NAT instance\
    \ once this lifetime is expired.\n         When reported in a get operation, the\
    \ lifetime indicates\n         the remaining validity lifetime.\n         Static\
    \ mappings may not be associated with a\n         lifetime.  If no lifetime is\
    \ associated with a\n         static mapping, an explicit action is required to\n\
    \         remove that mapping.\";\n    }\n  }\n  /*\n   * NAT Module\n   */\n\
    \  container nat {\n    description\n      \"NAT module\";\n    container instances\
    \ {\n      description\n        \"NAT instances\";\n      list instance {\n  \
    \      key \"id\";\n        description\n          \"A NAT instance.  This identifier\
    \ can be automatically\n           assigned or explicitly configured.\";\n   \
    \     leaf id {\n          type uint32;\n          must '. >= 1';\n          description\n\
    \            \"NAT instance identifier.\n             The identifier must be greater\
    \ than zero.\";\n          reference\n            \"RFC 7659: Definitions of Managed\
    \ Objects for Network\n                       Address Translators (NATs)\";\n\
    \        }\n        leaf name {\n          type string;\n          description\n\
    \            \"A name associated with the NAT instance.\";\n          reference\n\
    \            \"RFC 7659: Definitions of Managed Objects for Network\n        \
    \               Address Translators (NATs)\";\n        }\n        leaf enable\
    \ {\n          type boolean;\n          description\n            \"Status of the\
    \ NAT instance.\";\n        }\n        container capabilities {\n          config\
    \ false;\n          description\n            \"NAT capabilities.\";\n        \
    \  leaf-list nat-flavor {\n            type identityref {\n              base\
    \ nat-type;\n            }\n            description\n              \"Supported\
    \ translation type(s).\";\n          }\n          leaf-list per-interface-binding\
    \ {\n            type enumeration {\n              enum unsupported {\n      \
    \          description\n                  \"No capability to associate a NAT binding\
    \ with\n                   an extra identifier.\";\n              }\n        \
    \      enum layer-2 {\n                description\n                  \"The NAT\
    \ instance is able to associate a mapping with\n                   a Layer 2 identifier.\"\
    ;\n              }\n              enum dslite {\n                description\n\
    \                  \"The NAT instance is able to associate a mapping with\n  \
    \                 an IPv6 address (a.k.a., DS-Lite).\";\n              }\n   \
    \         }\n            description\n              \"Indicates the capability\
    \ of a NAT to associate a\n               particular NAT session not only with\
    \ the five\n               tuples used for the transport connection on both\n\
    \               sides of the NAT but also with the internal\n               interface\
    \ on which the user device is\n               connected to the NAT.\";\n     \
    \       reference\n              \"Section 4 of RFC 6619\";\n          }\n   \
    \       list transport-protocols {\n            key \"protocol-id\";\n       \
    \     description\n              \"List of supported protocols.\";\n         \
    \   leaf protocol-id {\n              type uint8;\n              mandatory true;\n\
    \              description\n                \"The upper-layer protocol associated\
    \ with a mapping.\n                 Values are taken from the IANA Protocol Numbers\n\
    \                 registry.\n                 For example, this field contains\
    \ 6 for TCP,\n                 17 for UDP, 33 for DCCP, or 132 for SCTP.\";\n\
    \            }\n            leaf protocol-name {\n              type string;\n\
    \              description\n                \"The name of the upper-layer protocol\
    \ associated\n                 with this mapping.\n                 For example,\
    \ TCP, UDP, DCCP, and SCTP.\";\n            }\n          }\n          leaf restricted-port-support\
    \ {\n            type boolean;\n            description\n              \"Indicates\
    \ source port NAT restriction support.\";\n            reference\n           \
    \   \"RFC 7596: Lightweight 4over6: An Extension to\n                        \
    \ the Dual-Stack Lite Architecture\";\n          }\n          leaf static-mapping-support\
    \ {\n            type boolean;\n            description\n              \"Indicates\
    \ whether static mappings are supported.\";\n          }\n          leaf port-randomization-support\
    \ {\n            type boolean;\n            description\n              \"Indicates\
    \ whether port randomization is supported.\";\n            reference\n       \
    \       \"Section 4.2.1 of RFC 4787\";\n          }\n          leaf port-range-allocation-support\
    \ {\n            type boolean;\n            description\n              \"Indicates\
    \ whether port range allocation is supported.\";\n            reference\n    \
    \          \"Section 1.1 of RFC 7753\";\n          }\n          leaf port-preservation-suport\
    \ {\n            type boolean;\n            description\n              \"Indicates\
    \ whether port preservation is supported.\";\n            reference\n        \
    \      \"Section 4.2.1 of RFC 4787\";\n          }\n          leaf port-parity-preservation-support\
    \ {\n            type boolean;\n            description\n              \"Indicates\
    \ whether port parity preservation is\n               supported.\";\n        \
    \    reference\n              \"Section 8 of RFC 7857\";\n          }\n      \
    \    leaf address-roundrobin-support {\n            type boolean;\n          \
    \  description\n              \"Indicates whether address allocation round robin\
    \ is\n               supported.\";\n          }\n          leaf paired-address-pooling-support\
    \ {\n            type boolean;\n            description\n              \"Indicates\
    \ whether paired-address-pooling is\n               supported\";\n           \
    \ reference\n              \"REQ-2 of RFC 4787\";\n          }\n          leaf\
    \ endpoint-independent-mapping-support {\n            type boolean;\n        \
    \    description\n              \"Indicates whether endpoint-independent-\n  \
    \             mapping is supported.\";\n            reference\n              \"\
    Section 4 of RFC 4787\";\n          }\n          leaf address-dependent-mapping-support\
    \ {\n            type boolean;\n            description\n              \"Indicates\
    \ whether address-dependent-mapping is\n               supported.\";\n       \
    \     reference\n              \"Section 4 of RFC 4787\";\n          }\n     \
    \     leaf address-and-port-dependent-mapping-support {\n            type boolean;\n\
    \            description\n              \"Indicates whether address-and-port-dependent-mapping\
    \ is\n               supported.\";\n            reference\n              \"Section\
    \ 4 of RFC 4787\";\n          }\n          leaf endpoint-independent-filtering-support\
    \ {\n            type boolean;\n            description\n              \"Indicates\
    \ whether endpoint-independent-filtering is\n               supported.\";\n  \
    \          reference\n              \"Section 5 of RFC 4787\";\n          }\n\
    \          leaf address-dependent-filtering {\n            type boolean;\n   \
    \         description\n              \"Indicates whether address-dependent-filtering\
    \ is\n               supported.\";\n            reference\n              \"Section\
    \ 5 of RFC 4787\";\n          }\n          leaf address-and-port-dependent-filtering\
    \ {\n            type boolean;\n            description\n              \"Indicates\
    \ whether address-and-port-dependent is\n               supported.\";\n      \
    \      reference\n              \"Section 5 of RFC 4787\";\n          }\n    \
    \      leaf fragment-behavior {\n            type enumeration {\n            \
    \  enum unsupported {\n                description\n                  \"No capability\
    \ to translate incoming fragments.\n                   All received fragments\
    \ are dropped.\";\n              }\n              enum in-order {\n          \
    \      description\n                  \"The NAT instance is able to translate\
    \ fragments\n                   only if they are received in order.  That is,\
    \ in\n                   particular the header is in the first packet.\n     \
    \              Fragments received out of order are dropped. \";\n            \
    \  }\n              enum out-of-order {\n                description\n       \
    \           \"The NAT instance is able to translate a fragment even\n        \
    \           if it is received out of order.\n                   This behavior\
    \ is recommended.\";\n                reference\n                  \"REQ-14 of\
    \ RFC 4787\";\n              }\n            }\n            description\n     \
    \         \"The fragment behavior is the NAT instance's capability to\n      \
    \         translate fragments received on the external interface of\n        \
    \       the NAT.\";\n          }\n        }\n        leaf type {\n          type\
    \ identityref {\n            base nat-type;\n          }\n          description\n\
    \            \"Specify the translation type.  Particularly useful when\n     \
    \        multiple translation flavors are supported.\n             If one type\
    \ is supported by a NAT, this parameter is by\n             default set to that\
    \ type.\";\n        }\n        leaf per-interface-binding {\n          type enumeration\
    \ {\n            enum disabled {\n              description\n                \"\
    Disable the capability to associate an extra identifier\n                 with\
    \ NAT mappings.\";\n            }\n            enum layer-2 {\n              description\n\
    \                \"The NAT instance is able to associate a mapping with\n    \
    \             a Layer 2 identifier.\";\n            }\n            enum dslite\
    \ {\n              description\n                \"The NAT instance is able to\
    \ associate a mapping with\n                 an IPv6 address (a.k.a., DS-Lite).\"\
    ;\n            }\n          }\n          description\n            \"A NAT that\
    \ associates a particular NAT session not\n             only with the five tuples\
    \ used for the transport\n             connection on both sides of the NAT but\
    \ also with\n             the internal interface on which the user device is\n\
    \             connected to the NAT.\n             If supported, this mode of operation\
    \ should be\n             configurable, and it should be disabled by default in\n\
    \             general-purpose NAT devices.\n             If one single per-interface\
    \ binding behavior is\n             supported by a NAT, this parameter is by default\
    \ set to\n             that behavior.\";\n          reference\n            \"\
    Section 4 of RFC 6619\";\n        }\n        list nat-pass-through {\n       \
    \   if-feature \"basic-nat44 or napt44 or dst-nat\";\n          key \"id\";\n\
    \          description\n            \"IP prefix NAT pass-through.\";\n       \
    \   leaf id {\n            type uint32;\n            description\n           \
    \   \"An identifier of the IP prefix pass-through.\";\n          }\n         \
    \ leaf prefix {\n            type inet:ip-prefix;\n            mandatory true;\n\
    \            description\n              \"The IP addresses that match should not\
    \ be translated.\n               It must be possible to administratively turn\n\
    \               off translation for specific destination addresses\n         \
    \      and/or ports.\";\n            reference\n              \"REQ-6 of RFC 6888\"\
    ;\n          }\n          leaf port {\n            type inet:port-number;\n  \
    \          description\n              \"It must be possible to administratively\
    \ turn off\n               translation for specific destination addresses\n  \
    \             and/or ports.\n               If no prefix is defined, the NAT pass-through\
    \ bound\n               to a given port applies for any destination address.\"\
    ;\n            reference\n              \"REQ-6 of RFC 6888\";\n          }\n\
    \        }\n        list policy {\n          key \"id\";\n          description\n\
    \            \"NAT parameters for a given instance\";\n          leaf id {\n \
    \           type uint32;\n            description\n              \"An identifier\
    \ of the NAT policy.  It must be unique\n               within the NAT instance.\"\
    ;\n          }\n          container clat-parameters {\n            if-feature\
    \ \"clat\";\n            description\n              \"CLAT parameters.\";\n  \
    \          list clat-ipv6-prefixes {\n              key \"ipv6-prefix\";\n   \
    \           description\n                \"464XLAT double-translation treatment\
    \ is stateless\n                 when a dedicated /64 is available for translation\n\
    \                 on the CLAT.  Otherwise, the CLAT will have both\n         \
    \        stateful and stateless translation since it requires\n              \
    \   NAT44 from the LAN to a single IPv4 address and then\n                 stateless\
    \ translation to a single IPv6 address.\";\n              reference\n        \
    \        \"RFC 6877: 464XLAT: Combination of Stateful and\n                  \
    \         Stateless Translation\";\n              leaf ipv6-prefix {\n       \
    \         type inet:ipv6-prefix;\n                description\n              \
    \    \"An IPv6 prefix used for CLAT.\";\n              }\n            }\n    \
    \        list ipv4-prefixes {\n              key \"ipv4-prefix\";\n          \
    \    description\n                \"Pool of IPv4 addresses used for CLAT.\n  \
    \               192.0.0.0/29 is the IPv4 service continuity prefix.\";\n     \
    \         reference\n                \"RFC 7335: IPv4 Service Continuity Prefix\"\
    ;\n              leaf ipv4-prefix {\n                type inet:ipv4-prefix;\n\
    \                description\n                  \"464XLAT double-translation treatment\
    \ is\n                   stateless when a dedicated /64 is available\n       \
    \            for translation on the CLAT.  Otherwise, the\n                  \
    \ CLAT will have both stateful and stateless\n                   translation since\
    \ it requires NAT44 from the\n                   LAN to a single IPv4 address\
    \ and then stateless\n                   translation to a single IPv6 address.\n\
    \                   The CLAT performs NAT44 for all IPv4 LAN\n               \
    \    packets so that all the LAN-originated IPv4\n                   packets appear\
    \ from a single IPv4 address\n                   and are then statelessly translated\
    \ to one\n                   interface IPv6 address that is claimed by\n     \
    \              the CLAT.\n                   An IPv4 address from this pool is\
    \ also\n                   provided to an application that makes\n           \
    \        use of literals.\";\n                reference\n                  \"\
    RFC 6877: 464XLAT: Combination of Stateful and\n                             Stateless\
    \ Translation\";\n              }\n            }\n          }\n          list\
    \ nptv6-prefixes {\n            if-feature \"nptv6\";\n            key \"internal-ipv6-prefix\"\
    ;\n            description\n              \"Provides one or a list of (internal\
    \ IPv6 prefix,\n               external IPv6 prefix) required for NPTv6.\n   \
    \            In its simplest form, NPTv6 interconnects two\n               network\
    \ links: one is an 'internal' network\n               link attached to a leaf\
    \ network within a single\n               administrative domain, and the other\
    \ is an\n               'external' network with connectivity to the\n        \
    \       global Internet.\";\n            reference\n              \"RFC 6296:\
    \ IPv6-to-IPv6 Network Prefix Translation\";\n            leaf internal-ipv6-prefix\
    \ {\n              type inet:ipv6-prefix;\n              mandatory true;\n   \
    \           description\n                \"An IPv6 prefix used by an internal\
    \ interface of\n                 NPTv6.\";\n              reference\n        \
    \        \"RFC 6296: IPv6-to-IPv6 Network Prefix Translation\";\n            }\n\
    \            leaf external-ipv6-prefix {\n              type inet:ipv6-prefix;\n\
    \              mandatory true;\n              description\n                \"\
    An IPv6 prefix used by the external interface of\n                 NPTv6.\";\n\
    \              reference\n                \"RFC 6296: IPv6-to-IPv6 Network Prefix\
    \ Translation\";\n            }\n          }\n          list eam {\n         \
    \   if-feature \"eam\";\n            key \"ipv4-prefix\";\n            description\n\
    \              \"The Explicit Address Mapping Table is a conceptual\n        \
    \       table in which each row represents an EAM.\n               Each EAM describes\
    \ a mapping between IPv4 and IPv6\n               prefixes/addresses.\";\n   \
    \         reference\n              \"Section 3.1 of RFC 7757\";\n            leaf\
    \ ipv4-prefix {\n              type inet:ipv4-prefix;\n              mandatory\
    \ true;\n              description\n                \"The IPv4 prefix of an EAM.\"\
    ;\n              reference\n                \"Section 3.2 of RFC 7757\";\n   \
    \         }\n            leaf ipv6-prefix {\n              type inet:ipv6-prefix;\n\
    \              mandatory true;\n              description\n                \"\
    The IPv6 prefix of an EAM.\";\n              reference\n                \"Section\
    \ 3.2 of RFC 7757\";\n            }\n          }\n          list nat64-prefixes\
    \ {\n            if-feature \"siit or nat64 or clat\";\n            key \"nat64-prefix\"\
    ;\n            description\n              \"Provides one or a list of NAT64 prefixes\n\
    \               with or without a list of destination IPv4 prefixes.\n       \
    \        It allows mapping IPv4 address ranges to IPv6 prefixes.\n           \
    \    For example:\n               192.0.2.0/24 is mapped to 2001:db8:122:300::/56.\n\
    \               198.51.100.0/24 is mapped to 2001:db8:122::/48.\";\n         \
    \   reference\n              \"Section 5.1 of RFC 7050\";\n            leaf nat64-prefix\
    \ {\n              type inet:ipv6-prefix;\n              mandatory true;\n   \
    \           description\n                \"A NAT64 prefix.  Can be a Network-Specific\
    \ Prefix (NSP)\n                 or a Well-Known Prefix (WKP).\n             \
    \    Organizations deploying stateless IPv4/IPv6 translation\n               \
    \  should assign an NSP to their IPv4/IPv6 translation\n                 service.\n\
    \                 For stateless NAT64, IPv4-translatable IPv6 addresses\n    \
    \             must use the selected NSP.\n                 Both IPv4-translatable\
    \ IPv6 addresses and\n                 IPv4-converted IPv6 addresses should use\n\
    \                 the same prefix.\";\n              reference\n             \
    \   \"Sections 3.3 and 3.4 of RFC 6052\";\n            }\n            list destination-ipv4-prefix\
    \ {\n              key \"ipv4-prefix\";\n              description\n         \
    \       \"An IPv4 prefix/address.\";\n              leaf ipv4-prefix {\n     \
    \           type inet:ipv4-prefix;\n                description\n            \
    \      \"An IPv4 address/prefix.\";\n              }\n            }\n        \
    \    leaf stateless-enable {\n              type boolean;\n              default\
    \ \"false\";\n              description\n                \"Enable explicitly stateless\
    \ NAT64.\";\n            }\n          }\n          list external-ip-address-pool\
    \ {\n            if-feature \"basic-nat44 or napt44 or nat64\";\n            key\
    \ \"pool-id\";\n            description\n              \"Pool of external IP addresses\
    \ used to service internal\n               hosts.\n               A pool is a\
    \ set of IP prefixes.\";\n            leaf pool-id {\n              type uint32;\n\
    \              must '. >= 1';\n              description\n                \"An\
    \ identifier that uniquely identifies the address pool\n                 within\
    \ a NAT instance.\n                 The identifier must be greater than zero.\"\
    ;\n              reference\n                \"RFC 7659: Definitions of Managed\
    \ Objects for\n                           Network Address Translators (NATs)\"\
    ;\n            }\n            leaf external-ip-pool {\n              type inet:ipv4-prefix;\n\
    \              mandatory true;\n              description\n                \"\
    An IPv4 prefix used for NAT purposes.\";\n            }\n          }\n       \
    \   container port-set-restrict {\n            if-feature \"napt44 or nat64\"\
    ;\n            description\n              \"Configures contiguous and non-contiguous\
    \ port ranges.\n               The port set is used to restrict the external source\n\
    \               port numbers used by the translator.\";\n            uses port-set;\n\
    \          }\n          leaf dst-nat-enable {\n            if-feature \"basic-nat44\
    \ or napt44\";\n            type boolean;\n            default \"false\";\n  \
    \          description\n              \"Enable/disable Destination NAT.\n    \
    \           A NAT44 may be configured to enable Destination\n               NAT,\
    \ too.\";\n          }\n          list dst-ip-address-pool {\n            if-feature\
    \ \"dst-nat\";\n            key \"pool-id\";\n            description\n      \
    \        \"Pool of IP addresses used for Destination NAT.\";\n            leaf\
    \ pool-id {\n              type uint32;\n              description\n         \
    \       \"An identifier of the address pool.\";\n            }\n            leaf\
    \ dst-in-ip-pool {\n              type inet:ip-prefix;\n              description\n\
    \                \"Is used to identify an internal destination\n             \
    \    IP prefix/address to be translated.\";\n            }\n            leaf dst-out-ip-pool\
    \ {\n              type inet:ip-prefix;\n              mandatory true;\n     \
    \         description\n                \"IP address/prefix used for Destination\
    \ NAT.\";\n            }\n          }\n          list transport-protocols {\n\
    \            if-feature \"napt44 or nat64 or dst-nat\";\n            key \"protocol-id\"\
    ;\n            description\n              \"Configure the transport protocols\
    \ to be handled by\n               the translator.\n               TCP and UDP\
    \ are supported by default.\";\n            leaf protocol-id {\n             \
    \ type uint8;\n              mandatory true;\n              description\n    \
    \            \"The upper-layer protocol associated with this\n               \
    \  mapping.\n                 Values are taken from the IANA Protocol Numbers\n\
    \                 registry.\n                 For example, this field contains\
    \ 6 for TCP,\n                 17 for UDP, 33 for DCCP, or 132 for SCTP.\";\n\
    \            }\n            leaf protocol-name {\n              type string;\n\
    \              description\n                \"The name of the upper-layer protocol\
    \ associated\n                 with this mapping.\n                 For example,\
    \ TCP, UDP, DCCP, and SCTP.\";\n            }\n          }\n          leaf subscriber-mask-v6\
    \ {\n            type uint8 {\n              range \"0 .. 128\";\n           \
    \ }\n            description\n              \"The subscriber mask is an integer\
    \ that indicates\n               the length of significant bits to be applied\
    \ on\n               the source IPv6 address (internal side) to\n            \
    \   unambiguously identify a user device (e.g., CPE).\n               Subscriber\
    \ mask is a system-wide configuration\n               parameter that is used to\
    \ enforce generic\n               per-subscriber policies (e.g., port-quota).\n\
    \               The enforcement of these generic policies does not\n         \
    \      require the configuration of every subscriber's\n               prefix.\n\
    \               Example: suppose the 2001:db8:100:100::/56 prefix\n          \
    \     is assigned to a NAT64-serviced CPE.  Suppose also\n               that\
    \ 2001:db8:100:100::1 is the IPv6 address used\n               by the client that\
    \ resides in that CPE.  When the\n               NAT64 receives a packet from\
    \ this client,\n               it applies the subscriber-mask-v6 (e.g., 56) on\n\
    \               the source IPv6 address to compute the associated\n          \
    \     prefix for this client (2001:db8:100:100::/56).\n               Then, the\
    \ NAT64 enforces policies based on that\n               prefix (2001:db8:100:100::/56),\
    \ not on the exact\n               source IPv6 address.\";\n          }\n    \
    \      list subscriber-match {\n            if-feature \"basic-nat44 or napt44\
    \ or dst-nat\";\n            key \"match-id\";\n            description\n    \
    \          \"IP prefix match.\n               A subscriber is identified by a\
    \ subnet.\";\n            leaf match-id {\n              type uint32;\n      \
    \        description\n                \"An identifier of the subscriber match.\"\
    ;\n            }\n            leaf subnet {\n              type inet:ip-prefix;\n\
    \              mandatory true;\n              description\n                \"\
    The IP address subnets that match\n                 should be translated.  For\
    \ example, all addresses\n                 that belong to the 192.0.2.0/24 prefix\
    \ must\n                 be processed by the NAT.\";\n            }\n        \
    \  }\n          leaf address-allocation-type {\n            type enumeration {\n\
    \              enum arbitrary {\n                if-feature \"basic-nat44 or napt44\
    \ or nat64\";\n                description\n                  \"Arbitrary pooling\
    \ behavior means that the NAT\n                   instance may create the new\
    \ port mapping using any\n                   address in the pool that has a free\
    \ port for the\n                   protocol concerned.\";\n              }\n \
    \             enum roundrobin {\n                if-feature \"basic-nat44 or napt44\
    \ or nat64\";\n                description\n                  \"Round-robin allocation.\"\
    ;\n              }\n              enum paired {\n                if-feature \"\
    napt44 or nat64\";\n                description\n                  \"Paired address\
    \ pooling informs the NAT\n                   that all the flows from an internal\
    \ IP\n                   address must be assigned the same external\n        \
    \           address.  This is the recommended behavior\n                   for\
    \ NAPT/NAT64.\";\n                reference\n                  \"RFC 4787: Network\
    \ Address Translation (NAT)\n                             Behavioral Requirements\
    \ for Unicast UDP\";\n              }\n            }\n            description\n\
    \              \"Specifies how external IP addresses are allocated.\";\n     \
    \     }\n          leaf port-allocation-type {\n            if-feature \"napt44\
    \ or nat64\";\n            type enumeration {\n              enum random {\n \
    \               description\n                  \"Port randomization is enabled.\
    \  A NAT port allocation\n                   scheme should make it hard for attackers\
    \ to guess\n                   port numbers\";\n                reference\n  \
    \                \"REQ-15 of RFC 6888\";\n              }\n              enum\
    \ port-preservation {\n                description\n                  \"Indicates\
    \ whether the NAT should preserve the\n                   internal port number.\"\
    ;\n              }\n              enum port-parity-preservation {\n          \
    \      description\n                  \"Indicates whether the NAT should preserve\
    \ the port\n                   parity of the internal port number.\";\n      \
    \        }\n              enum port-range-allocation {\n                description\n\
    \                  \"Indicates whether the NAT assigns a range of ports\n    \
    \               for an internal host.  This scheme allows the\n              \
    \     minimizing of the log volume.\";\n                reference\n          \
    \        \"REQ-14 of RFC 6888\";\n              }\n            }\n           \
    \ description\n              \"Indicates the type of port allocation.\";\n   \
    \       }\n          leaf mapping-type {\n            if-feature \"napt44 or nat64\"\
    ;\n            type enumeration {\n              enum eim {\n                description\n\
    \                  \"endpoint-independent-mapping.\";\n                reference\n\
    \                  \"Section 4 of RFC 4787\";\n              }\n             \
    \ enum adm {\n                description\n                  \"address-dependent-mapping.\"\
    ;\n                reference\n                  \"Section 4 of RFC 4787\";\n \
    \             }\n              enum edm {\n                description\n     \
    \             \"address-and-port-dependent-mapping.\";\n                reference\n\
    \                  \"Section 4 of RFC 4787\";\n              }\n            }\n\
    \            description\n              \"Indicates the type of NAT mapping.\"\
    ;\n          }\n          leaf filtering-type {\n            if-feature \"napt44\
    \ or nat64\";\n            type enumeration {\n              enum eif {\n    \
    \            description\n                  \"endpoint-independent-filtering.\"\
    ;\n                reference\n                  \"Section 5 of RFC 4787\";\n \
    \             }\n              enum adf {\n                description\n     \
    \             \"address-dependent-filtering.\";\n                reference\n \
    \                 \"Section 5 of RFC 4787\";\n              }\n              enum\
    \ edf {\n                description\n                  \"address-and-port-dependent-filtering\"\
    ;\n                reference\n                  \"Section 5 of RFC 4787\";\n \
    \             }\n            }\n            description\n              \"Indicates\
    \ the type of NAT filtering.\";\n          }\n          leaf fragment-behavior\
    \ {\n            if-feature \"napt44 or nat64\";\n            type enumeration\
    \ {\n              enum drop-all {\n                description\n            \
    \      \"All received fragments are dropped.\";\n              }\n           \
    \   enum in-order {\n                description\n                  \"Translate\
    \ fragments only if they are received\n                   in order.\";\n     \
    \         }\n              enum out-of-order {\n                description\n\
    \                  \"Translate a fragment even if it is received out\n       \
    \            of order.\n                   This behavior is recommended.\";\n\
    \                reference\n                  \"REQ-14 of RFC 4787\";\n      \
    \        }\n            }\n            description\n              \"The fragment\
    \ behavior instructs the NAT about the\n               behavior to follow to translate\
    \ fragments received\n               on the external interface of the NAT.\";\n\
    \          }\n          list port-quota {\n            if-feature \"napt44 or\
    \ nat64\";\n            key \"quota-type\";\n            description\n       \
    \       \"Configures a port quota to be assigned per subscriber.\n           \
    \    It corresponds to the maximum number of ports to be\n               used\
    \ by a subscriber.\";\n            leaf port-limit {\n              type uint16;\n\
    \              description\n                \"Configures a port quota to be assigned\
    \ per subscriber.\n                 It corresponds to the maximum number of ports\
    \ to be\n                 used by a subscriber.\";\n              reference\n\
    \                \"REQ-4 of RFC 6888\";\n            }\n            leaf quota-type\
    \ {\n              type uint8;\n              description\n                \"\
    Indicates whether the port quota applies to\n                 all protocols (0)\
    \ or to a specific protocol.\";\n            }\n          }\n          container\
    \ port-set {\n            when \"../port-allocation-type = 'port-range-allocation'\"\
    ;\n            if-feature \"napt44 or nat64\";\n            description\n    \
    \          \"Manages port-set assignments.\";\n            leaf port-set-size\
    \ {\n              type uint16;\n              mandatory true;\n             \
    \ description\n                \"Indicates the size of assigned port sets.\";\n\
    \            }\n            leaf port-set-timeout {\n              type uint32;\n\
    \              units \"seconds\";\n              description\n               \
    \ \"inactivity timeout for port sets.\";\n            }\n          }\n       \
    \   container timers {\n            if-feature \"napt44 or nat64\";\n        \
    \    description\n              \"Configure values of various timeouts.\";\n \
    \           leaf udp-timeout {\n              type uint32;\n              units\
    \ \"seconds\";\n              default \"300\";\n              description\n  \
    \              \"UDP inactivity timeout.  That is the time a mapping\n       \
    \          will stay active without packets traversing the NAT.\";\n         \
    \     reference\n                \"RFC 4787: Network Address Translation (NAT)\n\
    \                           Behavioral Requirements for Unicast UDP\";\n     \
    \       }\n            leaf tcp-idle-timeout {\n              type uint32;\n \
    \             units \"seconds\";\n              default \"7440\";\n          \
    \    description\n                \"TCP idle timeout should be 2 hours and 4 minutes.\"\
    ;\n              reference\n                \"RFC 5382: NAT Behavioral Requirements\
    \ for TCP\";\n            }\n            leaf tcp-trans-open-timeout {\n     \
    \         type uint32;\n              units \"seconds\";\n              default\
    \ \"240\";\n              description\n                \"The value of the transitory\
    \ open connection\n                 idle-timeout.\n                 A NAT should\
    \ provide different configurable\n                 parameters for configuring\
    \ the open and\n                 closing idle timeouts.\n                 To accommodate\
    \ deployments that consider\n                 a partially open timeout of 4 minutes\
    \ as being\n                 excessive from a security standpoint, a NAT may\n\
    \                 allow the configured timeout to be less than\n             \
    \    4 minutes.\n                 However, a minimum default transitory connection\n\
    \                 idle-timeout of 4 minutes is recommended.\";\n             \
    \ reference\n                \"Section 2.1 of RFC 7857\";\n            }\n   \
    \         leaf tcp-trans-close-timeout {\n              type uint32;\n       \
    \       units \"seconds\";\n              default \"240\";\n              description\n\
    \                \"The value of the transitory close connection\n            \
    \     idle-timeout.\n                 A NAT should provide different configurable\n\
    \                 parameters for configuring the open and\n                 closing\
    \ idle timeouts.\";\n              reference\n                \"Section 2.1 of\
    \ RFC 7857\";\n            }\n            leaf tcp-in-syn-timeout {\n        \
    \      type uint32;\n              units \"seconds\";\n              default \"\
    6\";\n              description\n                \"A NAT must not respond to an\
    \ unsolicited\n                 inbound SYN packet for at least 6 seconds\n  \
    \               after the packet is received.  If during\n                 this\
    \ interval the NAT receives and translates\n                 an outbound SYN for\
    \ the connection the NAT\n                 must silently drop the original unsolicited\n\
    \                 inbound SYN packet.\";\n              reference\n          \
    \      \"RFC 5382 NAT Behavioral Requirements for TCP\";\n            }\n    \
    \        leaf fragment-min-timeout {\n              when \"../../fragment-behavior='out-of-order'\"\
    ;\n              type uint32;\n              units \"seconds\";\n            \
    \  default \"2\";\n              description\n                \"As long as the\
    \ NAT has available resources,\n                 the NAT allows the fragments\
    \ to arrive\n                 over the fragment-min-timeout interval.\n      \
    \           The default value is inspired from RFC 6146.\";\n            }\n \
    \           leaf icmp-timeout {\n              type uint32;\n              units\
    \ \"seconds\";\n              default \"60\";\n              description\n   \
    \             \"An ICMP Query session timer must not expire\n                \
    \ in less than 60 seconds.  It is recommended\n                 that the ICMP\
    \ Query session timer be made\n                 configurable\";\n            \
    \  reference\n                \"RFC 5508: NAT Behavioral Requirements for ICMP\"\
    ;\n            }\n            list per-port-timeout {\n              key \"port-number\"\
    ;\n              description\n                \"Some NATs are configurable with\
    \ short timeouts\n                 for some ports, e.g., as 10 seconds on\n  \
    \               port 53 (DNS) and 123 (NTP), and longer timeouts\n           \
    \      on other ports.\";\n              leaf port-number {\n                type\
    \ inet:port-number;\n                description\n                  \"A port number.\"\
    ;\n              }\n              leaf protocol {\n                type uint8;\n\
    \                description\n                  \"The upper-layer protocol associated\
    \ with this port.\n                   Values are taken from the IANA Protocol\
    \ Numbers\n                   registry.\n                   If no protocol is\
    \ indicated, it means 'any\n                   protocol'.\";\n              }\n\
    \              leaf timeout {\n                type uint32;\n                units\
    \ \"seconds\";\n                mandatory true;\n                description\n\
    \                  \"Timeout for this port number\";\n              }\n      \
    \      }\n            leaf hold-down-timeout {\n              type uint32;\n \
    \             units \"seconds\";\n              default \"120\";\n           \
    \   description\n                \"Hold-down timer.\n                 Ports in\
    \ the hold-down pool are not reassigned until\n                 hold-down-timeout\
    \ expires.\n                 The length of time and the maximum number of ports\
    \ in\n                 this state must be configurable by the administrator.\n\
    \                 This is necessary in order to prevent collisions\n         \
    \        between old and new mappings and sessions.  It ensures\n            \
    \     that all established sessions are broken instead of\n                 redirected\
    \ to a different peer.\";\n              reference\n                \"REQ-8 of\
    \ RFC 6888\";\n            }\n            leaf hold-down-max {\n             \
    \ type uint32;\n              description\n                \"Maximum ports in\
    \ the hold-down port pool.\";\n              reference\n                \"REQ-8\
    \ of RFC 6888\";\n            }\n          }\n          leaf fragments-limit {\n\
    \            when \"../fragment-behavior='out-of-order'\";\n            type uint32;\n\
    \            description\n              \"Limits the number of out-of-order fragments\
    \ that can\n               be handled.\";\n            reference\n           \
    \   \"Section 11 of RFC 4787\";\n          }\n          list algs {\n        \
    \    key \"name\";\n            description\n              \"Features related\
    \ to the Application Layer\n               Gateway (ALG).\";\n            leaf\
    \ name {\n              type string;\n              description\n            \
    \    \"The name of the ALG.\";\n            }\n            leaf transport-protocol\
    \ {\n              type uint32;\n              description\n                \"\
    The transport protocol used by the ALG\n                 (e.g., TCP and UDP).\"\
    ;\n            }\n            container dst-transport-port {\n              uses\
    \ port-number;\n              description\n                \"The destination port\
    \ number(s) used by the ALG.\n                 For example,\n                \
    \   - 21 for the FTP ALG\n                   - 53 for the DNS ALG.\";\n      \
    \      }\n            container src-transport-port {\n              uses port-number;\n\
    \              description\n                \"The source port number(s) used by\
    \ the ALG.\";\n            }\n            leaf status {\n              type boolean;\n\
    \              description\n                \"Enable/disable the ALG.\";\n   \
    \         }\n          }\n          leaf all-algs-enable {\n            type boolean;\n\
    \            description\n              \"Disable/enable all ALGs.\n         \
    \      When specified, this parameter overrides the one\n               that may\
    \ be indicated, eventually, by the 'status'\n               of an individual ALG.\"\
    ;\n          }\n          container notify-pool-usage {\n            if-feature\
    \ \"basic-nat44 or napt44 or nat64\";\n            description\n             \
    \ \"Notification of pool usage when certain criteria\n               are met.\"\
    ;\n            leaf pool-id {\n              type uint32;\n              description\n\
    \                \"Pool-ID for which the notification criteria\n             \
    \    is defined\";\n            }\n            leaf low-threshold {\n        \
    \      type percent;\n              description\n                \"Notification\
    \ must be generated when the defined low\n                 threshold is reached.\n\
    \                 For example, if a notification is required when the\n      \
    \           pool utilization reaches below 10%, this\n                 configuration\
    \ parameter must be set to 10.\n                 0% indicates that low-threshold\
    \ notification is\n                 disabled.\";\n            }\n            leaf\
    \ high-threshold {\n              type percent;\n              must '. >= ../low-threshold'\
    \ {\n                error-message\n                  \"The high threshold must\
    \ be greater than or equal\n                   to the low threshold.\";\n    \
    \          }\n              description\n                \"Notification must be\
    \ generated when the defined high\n                 threshold is reached.\n  \
    \               For example, if a notification is required when the\n        \
    \         pool utilization reaches 90%, this configuration\n                 parameter\
    \ must be set to 90.\n                 Setting the same value as low-threshold\
    \ is equivalent\n                 to disabling high-threshold notification.\"\
    ;\n            }\n            leaf notify-interval {\n              type uint32\
    \ {\n                range \"1 .. 3600\";\n              }\n              units\
    \ \"seconds\";\n              default \"20\";\n              description\n   \
    \             \"Minimum number of seconds between successive\n               \
    \  notifications for this pool.\";\n              reference\n                \"\
    RFC 7659: Definitions of Managed Objects for\n                           Network\
    \ Address Translators (NATs)\";\n            }\n          }\n          container\
    \ external-realm {\n            description\n              \"Identifies the external\
    \ realm of the NAT instance.\";\n            choice realm-type {\n           \
    \   description\n                \"Can be an interface, VRF instance, etc.\";\n\
    \              case interface {\n                description\n               \
    \   \"External interface.\";\n                leaf external-interface {\n    \
    \              type if:interface-ref;\n                  description\n       \
    \             \"Name of the external interface.\";\n                }\n      \
    \        }\n            }\n          }\n        }\n        container mapping-limits\
    \ {\n          if-feature \"napt44 or nat64\";\n          description\n      \
    \      \"Information about the configuration parameters that\n             limits\
    \ the mappings based upon various criteria.\";\n          leaf limit-subscribers\
    \ {\n            type uint32;\n            description\n              \"Maximum\
    \ number of subscribers that can be serviced\n               by a NAT instance.\n\
    \               A subscriber is identified by a given prefix.\";\n           \
    \ reference\n              \"RFC 7659: Definitions of Managed Objects for\n  \
    \                       Network Address Translators (NATs)\";\n          }\n \
    \         leaf limit-address-mappings {\n            type uint32;\n          \
    \  description\n              \"Maximum number of address mappings that can be\n\
    \               handled by a NAT instance.\n               When this limit is\
    \ reached, packets that would\n               normally trigger translation will\
    \ be dropped.\";\n            reference\n              \"RFC 7659: Definitions\
    \ of Managed Objects for\n                         Network Address Translators\
    \ (NATs)\";\n          }\n          leaf limit-port-mappings {\n            type\
    \ uint32;\n            description\n              \"Maximum number of port mappings\
    \ that can be handled\n               by a NAT instance.\n               When\
    \ this limit is reached, packets that would\n               normally trigger translation\
    \ will be dropped.\";\n            reference\n              \"RFC 7659: Definitions\
    \ of Managed Objects for\n                         Network Address Translators\
    \ (NATs)\";\n          }\n          list limit-per-protocol {\n            if-feature\
    \ \"napt44 or nat64 or dst-nat\";\n            key \"protocol-id\";\n        \
    \    description\n              \"Configure limits per transport protocol\";\n\
    \            leaf protocol-id {\n              type uint8;\n              mandatory\
    \ true;\n              description\n                \"The upper-layer protocol.\n\
    \                 Values are taken from the IANA Protocol Numbers\n          \
    \       registry.\n                 For example, this field contains 6 for TCP,\n\
    \                 17 for UDP, 33 for DCCP, or 132 for SCTP.\";\n            }\n\
    \            leaf limit {\n              type uint32;\n              description\n\
    \                \"Maximum number of protocol-specific NAT mappings\n        \
    \         per instance.\";\n            }\n          }\n        }\n        container\
    \ connection-limits {\n          if-feature \"basic-nat44 or napt44 or nat64\"\
    ;\n          description\n            \"Information about the configuration parameters\
    \ that\n             rate-limit the translation based upon various criteria.\"\
    ;\n          leaf limit-per-subscriber {\n            type uint32;\n         \
    \   units \"bits/second\";\n            description\n              \"Rate-limit\
    \ the number of new mappings and sessions\n               per subscriber.\";\n\
    \          }\n          leaf limit-per-instance {\n            type uint32;\n\
    \            units \"bits/second\";\n            description\n              \"\
    Rate-limit the number of new mappings and sessions\n               per instance.\"\
    ;\n          }\n          list limit-per-protocol {\n            if-feature \"\
    napt44 or nat64\";\n            key \"protocol-id\";\n            description\n\
    \              \"Configure limits per transport protocol\";\n            leaf\
    \ protocol-id {\n              type uint8;\n              mandatory true;\n  \
    \            description\n                \"The upper-layer protocol.\n      \
    \           Values are taken from the IANA Protocol Numbers\n                \
    \ registry.\n                 For example, this field contains 6 for TCP,\n  \
    \               17 for UDP, 33 for DCCP, or 132 for SCTP.\";\n            }\n\
    \            leaf limit {\n              type uint32;\n              description\n\
    \                \"Limit the number of protocol-specific mappings\n          \
    \       and sessions per instance.\";\n            }\n          }\n        }\n\
    \        container notification-limits {\n          description\n            \"\
    Sets notification limits.\";\n          leaf notify-interval {\n            if-feature\
    \ \"basic-nat44 or napt44 or nat64\";\n            type uint32 {\n           \
    \   range \"1 .. 3600\";\n            }\n            units \"seconds\";\n    \
    \        default \"10\";\n            description\n              \"Minimum number\
    \ of seconds between successive\n               notifications for this NAT instance.\"\
    ;\n            reference\n              \"RFC 7659: Definitions of Managed Objects\
    \ for\n                         Network Address Translators (NATs)\";\n      \
    \    }\n          leaf notify-addresses-usage {\n            if-feature \"basic-nat44\
    \ or napt44 or nat64\";\n            type percent;\n            description\n\
    \              \"Notification of address mappings usage over\n               the\
    \ whole NAT instance.\n               Notification must be generated when the\
    \ defined\n               threshold is reached.\n               For example, if\
    \ a notification is required when\n               the address mappings utilization\
    \ reaches 90%,\n               this configuration parameter must be set\n    \
    \           to 90.\";\n          }\n          leaf notify-ports-usage {\n    \
    \        if-feature \"napt44 or nat64\";\n            type percent;\n        \
    \    description\n              \"Notification of port mappings usage over the\n\
    \               whole NAT instance.\n               Notification must be generated\
    \ when the defined\n               threshold is reached.\n               For example,\
    \ if a notification is required when\n               the port mappings utilization\
    \ reaches 90%, this\n               configuration parameter must be set to 90.\"\
    ;\n          }\n          leaf notify-subscribers-limit {\n            if-feature\
    \ \"basic-nat44 or napt44 or nat64\";\n            type uint32;\n            description\n\
    \              \"Notification of active subscribers per NAT\n               instance.\n\
    \               Notification must be generated when the defined\n            \
    \   threshold is reached.\";\n          }\n        }\n        container mapping-table\
    \ {\n          if-feature \"basic-nat44 or napt44 or nat64 \"\n              \
    \     + \"or clat or dst-nat\";\n          description\n            \"NAT mapping\
    \ table.  Applicable for functions that maintain\n             static and/or dynamic\
    \ mappings, such as NAT44, Destination\n             NAT, NAT64, or CLAT.\";\n\
    \          list mapping-entry {\n            key \"index\";\n            description\n\
    \              \"NAT mapping entry.\";\n            uses mapping-entry;\n    \
    \      }\n        }\n        container statistics {\n          config false;\n\
    \          description\n            \"Statistics related to the NAT instance.\"\
    ;\n          leaf discontinuity-time {\n            type yang:date-and-time;\n\
    \            mandatory true;\n            description\n              \"The time\
    \ on the most recent occasion at which the NAT\n               instance suffered\
    \ a discontinuity.  This must be\n               initialized when the NAT instance\
    \ is configured\n               or rebooted.\";\n          }\n          container\
    \ traffic-statistics {\n            description\n              \"Generic traffic\
    \ statistics.\";\n            leaf sent-packets {\n              type yang:zero-based-counter64;\n\
    \              description\n                \"Number of packets sent.\";\n   \
    \         }\n            leaf sent-bytes {\n              type yang:zero-based-counter64;\n\
    \              units \"bytes\";\n              description\n                \"\
    Counter for sent traffic in bytes.\";\n            }\n            leaf rcvd-packets\
    \ {\n              type yang:zero-based-counter64;\n              description\n\
    \                \"Number of received packets.\";\n            }\n           \
    \ leaf rcvd-bytes {\n              type yang:zero-based-counter64;\n         \
    \     units \"bytes\";\n              description\n                \"Counter for\
    \ received traffic in bytes.\";\n            }\n            leaf dropped-packets\
    \ {\n              type yang:zero-based-counter64;\n              description\n\
    \                \"Number of dropped packets.\";\n            }\n            leaf\
    \ dropped-bytes {\n              type yang:zero-based-counter64;\n           \
    \   units \"bytes\";\n              description\n                \"Counter for\
    \ dropped traffic in bytes.\";\n            }\n            leaf dropped-fragments\
    \ {\n              if-feature \"napt44 or nat64\";\n              type yang:zero-based-counter64;\n\
    \              description\n                \"Number of dropped fragments on the\
    \ external realm.\";\n            }\n            leaf dropped-address-limit-packets\
    \ {\n              if-feature \"basic-nat44 or napt44 or nat64\";\n          \
    \    type yang:zero-based-counter64;\n              description\n            \
    \    \"Number of dropped packets because an address limit\n                  is\
    \ reached.\";\n            }\n            leaf dropped-address-limit-bytes {\n\
    \              if-feature \"basic-nat44 or napt44 or nat64\";\n              type\
    \ yang:zero-based-counter64;\n              units \"bytes\";\n              description\n\
    \                \"Counter of dropped packets because an address limit\n     \
    \             is reached, in bytes.\";\n            }\n            leaf dropped-address-packets\
    \ {\n              if-feature \"basic-nat44 or napt44 or nat64\";\n          \
    \    type yang:zero-based-counter64;\n              description\n            \
    \    \"Number of dropped packets because no address is\n                 available\
    \ for allocation.\";\n            }\n            leaf dropped-address-bytes {\n\
    \              if-feature \"basic-nat44 or napt44 or nat64\";\n              type\
    \ yang:zero-based-counter64;\n              units \"bytes\";\n              description\n\
    \                \"Counter of dropped packets because no address is\n        \
    \         available for allocation, in bytes.\";\n            }\n            leaf\
    \ dropped-port-limit-packets {\n              if-feature \"napt44 or nat64\";\n\
    \              type yang:zero-based-counter64;\n              description\n  \
    \              \"Number of dropped packets because a port limit\n            \
    \     is reached.\";\n            }\n            leaf dropped-port-limit-bytes\
    \ {\n              if-feature \"napt44 or nat64\";\n              type yang:zero-based-counter64;\n\
    \              units \"bytes\";\n              description\n                \"\
    Counter of dropped packets because a port limit\n                 is reached,\
    \ in bytes.\";\n            }\n            leaf dropped-port-packets {\n     \
    \         if-feature \"napt44 or nat64\";\n              type yang:zero-based-counter64;\n\
    \              description\n                \"Number of dropped packets because\
    \ no port is\n                 available for allocation.\";\n            }\n \
    \           leaf dropped-port-bytes {\n              if-feature \"napt44 or nat64\"\
    ;\n              type yang:zero-based-counter64;\n              units \"bytes\"\
    ;\n              description\n                \"Counter of dropped packets because\
    \ no port is\n                 available for allocation, in bytes.\";\n      \
    \      }\n            leaf dropped-subscriber-limit-packets {\n              if-feature\
    \ \"basic-nat44 or napt44 or nat64\";\n              type yang:zero-based-counter64;\n\
    \              description\n                \"Number of dropped packets because\
    \ the subscriber\n                 limit per instance is reached.\";\n       \
    \     }\n            leaf dropped-subscriber-limit-bytes {\n              if-feature\
    \ \"basic-nat44 or napt44 or nat64\";\n              type yang:zero-based-counter64;\n\
    \              units \"bytes\";\n              description\n                \"\
    Counter of dropped packets because the subscriber\n                  limit per\
    \ instance is reached, in bytes.\";\n            }\n          }\n          container\
    \ mappings-statistics {\n            description\n              \"Mappings statistics.\"\
    ;\n            leaf total-active-subscribers {\n              if-feature \"basic-nat44\
    \ or napt44 or nat64\";\n              type yang:gauge32;\n              description\n\
    \                \"Total number of active subscribers (that is,\n            \
    \     subscribers for which the NAT maintains active\n                 mappings).\n\
    \                 A subscriber is identified by a subnet,\n                 subscriber-mask,\
    \ etc.\";\n            }\n            leaf total-address-mappings {\n        \
    \      if-feature \"basic-nat44 or napt44 or nat64 \"\n                      \
    \ + \"or clat or dst-nat\";\n              type yang:gauge32;\n              description\n\
    \                \"Total number of address mappings present at a given\n     \
    \            time.  It includes both static and dynamic mappings.\";\n       \
    \       reference\n                \"Section 3.3.8 of RFC 7659\";\n          \
    \  }\n            leaf total-port-mappings {\n              if-feature \"napt44\
    \ or nat64\";\n              type yang:gauge32;\n              description\n \
    \               \"Total number of NAT port mappings present at\n             \
    \    a given time.  It includes both static and dynamic\n                 mappings.\"\
    ;\n              reference\n                \"Section 3.3.9 of RFC 7659\";\n \
    \           }\n            list total-per-protocol {\n              if-feature\
    \ \"napt44 or nat64\";\n              key \"protocol-id\";\n              description\n\
    \                \"Total mappings for each enabled/supported protocol.\";\n  \
    \            leaf protocol-id {\n                type uint8;\n               \
    \ mandatory true;\n                description\n                  \"The upper-layer\
    \ protocol.\n                   For example, this field contains 6 for TCP,\n\
    \                   17 for UDP, 33 for DCCP, or 132 for SCTP.\";\n           \
    \   }\n              leaf total {\n                type yang:gauge32;\n      \
    \          description\n                  \"Total number of a protocol-specific\
    \ mappings present\n                   at a given time.  The protocol is identified\
    \ by\n                   protocol-id.\";\n              }\n            }\n   \
    \       }\n          container pools-stats {\n            if-feature \"basic-nat44\
    \ or napt44 or nat64\";\n            description\n              \"Statistics related\
    \ to address/prefix pools\n               usage\";\n            leaf addresses-allocated\
    \ {\n              type yang:gauge32;\n              description\n           \
    \     \"Number of all allocated addresses.\";\n            }\n            leaf\
    \ addresses-free {\n              type yang:gauge32;\n              description\n\
    \                \"Number of unallocated addresses of all pools at\n         \
    \        a given time.  The sum of unallocated and allocated\n               \
    \  addresses is the total number of addresses of\n                 the pools.\"\
    ;\n            }\n            container ports-stats {\n              if-feature\
    \ \"napt44 or nat64\";\n              description\n                \"Statistics\
    \ related to port numbers usage.\";\n              leaf ports-allocated {\n  \
    \              type yang:gauge32;\n                description\n             \
    \     \"Number of allocated ports from all pools.\";\n              }\n      \
    \        leaf ports-free {\n                type yang:gauge32;\n             \
    \   description\n                  \"Number of unallocated addresses from all\
    \ pools.\";\n              }\n            }\n            list per-pool-stats {\n\
    \              if-feature \"basic-nat44 or napt44 or nat64\";\n              key\
    \ \"pool-id\";\n              description\n                \"Statistics related\
    \ to address/prefix pool usage\";\n              leaf pool-id {\n            \
    \    type uint32;\n                description\n                  \"Unique identifier\
    \ that represents a pool of\n                   addresses/prefixes.\";\n     \
    \         }\n              leaf discontinuity-time {\n                type yang:date-and-time;\n\
    \                mandatory true;\n                description\n              \
    \    \"The time on the most recent occasion at which this\n                  \
    \ pool counter suffered a discontinuity.  This must\n                   be initialized\
    \ when the address pool is\n                   configured.\";\n              }\n\
    \              container pool-stats {\n                description\n         \
    \         \"Statistics related to address/prefix pool usage\";\n             \
    \   leaf addresses-allocated {\n                  type yang:gauge32;\n       \
    \           description\n                    \"Number of allocated addresses from\
    \ this pool.\";\n                }\n                leaf addresses-free {\n  \
    \                type yang:gauge32;\n                  description\n         \
    \           \"Number of unallocated addresses in this pool.\";\n             \
    \   }\n              }\n              container port-stats {\n               \
    \ if-feature \"napt44 or nat64\";\n                description\n             \
    \     \"Statistics related to port numbers usage.\";\n                leaf ports-allocated\
    \ {\n                  type yang:gauge32;\n                  description\n   \
    \                 \"Number of allocated ports from this pool.\";\n           \
    \     }\n                leaf ports-free {\n                  type yang:gauge32;\n\
    \                  description\n                    \"Number of unallocated addresses\
    \ from this pool.\";\n                }\n              }\n            }\n    \
    \      }\n        }\n      }\n    }\n  }\n  /*\n   * Notifications\n   */\n  notification\
    \ nat-pool-event {\n    if-feature \"basic-nat44 or napt44 or nat64\";\n    description\n\
    \      \"Notifications must be generated when the defined high/low\n       threshold\
    \ is reached.  Related configuration parameters\n       must be provided to trigger\
    \ the notifications.\";\n    leaf id {\n      type leafref {\n        path \"\
    /nat/instances/instance/id\";\n      }\n      mandatory true;\n      description\n\
    \        \"NAT instance identifier.\";\n    }\n    leaf policy-id {\n      type\
    \ leafref {\n        path \"/nat/instances/instance/policy/id\";\n      }\n  \
    \    description\n        \"Policy identifier.\";\n    }\n    leaf pool-id {\n\
    \      type leafref {\n        path \"/nat/instances/instance/policy\"\n     \
    \      + \"/external-ip-address-pool/pool-id\";\n      }\n      mandatory true;\n\
    \      description\n        \"Pool Identifier.\";\n    }\n    leaf notify-pool-threshold\
    \ {\n      type percent;\n      mandatory true;\n      description\n        \"\
    A threshold (high threshold or low threshold) has\n         been fired.\";\n \
    \   }\n  }\n  notification nat-instance-event {\n    if-feature \"basic-nat44\
    \ or napt44 or nat64\";\n    description\n      \"Notifications must be generated\
    \ when notify-addresses-usage\n       and/or notify-ports-usage thresholds are\
    \ reached.\";\n    leaf id {\n      type leafref {\n        path \"/nat/instances/instance/id\"\
    ;\n      }\n      mandatory true;\n      description\n        \"NAT instance identifier.\"\
    ;\n    }\n    leaf notify-subscribers-threshold {\n      type uint32;\n      description\n\
    \        \"The notify-subscribers-limit threshold has been fired.\";\n    }\n\
    \    leaf notify-addresses-threshold {\n      type percent;\n      description\n\
    \        \"The notify-addresses-usage threshold has been fired.\";\n    }\n  \
    \  leaf notify-ports-threshold {\n      type percent;\n      description\n   \
    \     \"The notify-ports-usage threshold has been fired.\";\n    }\n  }\n }\n\
    \ <CODE ENDS>\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   Security considerations related to address and\
    \ prefix translation are\n   discussed in [RFC6888], [RFC6146], [RFC6877], [RFC6296],\
    \ and\n   [RFC7757].\n   The YANG module specified in this document defines a\
    \ schema for data\n   that is designed to be accessed via network management protocols\
    \ such\n   as NETCONF [RFC6241] or RESTCONF [RFC8040].  The lowest NETCONF layer\n\
    \   is the secure transport layer, and the mandatory-to-implement secure\n   transport\
    \ is Secure Shell (SSH) [RFC6242].  The lowest RESTCONF layer\n   is HTTPS, and\
    \ the mandatory-to-implement secure transport is TLS\n   [RFC8446].\n   The Network\
    \ Configuration Access Control Model (NACM) [RFC8341]\n   provides the means to\
    \ restrict access for particular NETCONF or\n   RESTCONF users to a preconfigured\
    \ subset of all available NETCONF or\n   RESTCONF protocol operations and content.\n\
    \   All data nodes defined in the YANG module that can be created,\n   modified,\
    \ and deleted (i.e., config true, which is the default) are\n   considered sensitive.\
    \  Write operations (e.g., edit-config) applied\n   to these data nodes without\
    \ proper protection can negatively affect\n   network operations.  The NAT YANG\
    \ module provides a method to set\n   parameters to prevent a user from aggressively\
    \ using NAT resources\n   (port-quota), rate-limit connections as a guard against\
    \ DoS, or to\n   enable notifications so that appropriate measures are enforced\
    \ to\n   anticipate traffic drops.  Nevertheless, an attacker who is able to\n\
    \   access the NAT can undertake various attacks, such as:\n   o  Set a high or\
    \ low resource limit to cause a DoS attack:\n      *  /nat/instances/instance/policy/port-quota\n\
    \      *  /nat/instances/instance/policy/fragments-limit\n      *  /nat/instances/instance/mapping-limits\n\
    \      *  /nat/instances/instance/connection-limits\n   o  Set a low notification\
    \ threshold to cause useless notifications to\n      be generated:\n      *  /nat/instances/instance/policy/notify-pool-usage/high-threshold\n\
    \      *  /nat/instances/instance/notification-limits/notify-addresses-\n    \
    \     usage\n      *  /nat/instances/instance/notification-limits/notify-ports-usage\n\
    \      *  /nat/instances/instance/notification-limits/notify-subscribers-\n  \
    \       limit\n   o  Set an arbitrarily high threshold, which may lead to the\n\
    \      deactivation of notifications:\n      *  /nat/instances/instance/policy/notify-pool-usage/high-threshold\n\
    \      *  /nat/instances/instance/notification-limits/notify-addresses-\n    \
    \     usage\n      *  /nat/instances/instance/notification-limits/notify-ports-usage\n\
    \      *  /nat/instances/instance/notification-limits/notify-subscribers-\n  \
    \       limit\n   o  Set a low notification interval and a low notification threshold\n\
    \      to induce useless notifications to be generated:\n      *  /nat/instances/instance/policy/notify-pool-usage/notify-\n\
    \         interval\n      *  /nat/instances/instance/notification-limits/notify-interval\n\
    \   o  Access to privacy data maintained in the mapping table.  Such data\n  \
    \    can be misused to track the activity of a host:\n      *  /nat/instances/instance/mapping-table\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   IANA has registered the following URI in the \"ns\"\
    \ subregistry within\n   the \"IETF XML Registry\" [RFC3688]:\n            URI:\
    \ urn:ietf:params:xml:ns:yang:ietf-nat\n            Registrant Contact: The IESG.\n\
    \            XML: N/A; the requested URI is an XML namespace.\n   IANA has registered\
    \ the following YANG module in the \"YANG Module\n   Names\" subregistry [RFC7950]\
    \ within the \"YANG Parameters\" registry.\n            name: ietf-nat\n     \
    \       namespace: urn:ietf:params:xml:ns:yang:ietf-nat\n            prefix: nat\n\
    \            reference: RFC 8512\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC3688]  Mealling, M., \"The IETF XML Registry\"\
    , BCP 81, RFC 3688,\n              DOI 10.17487/RFC3688, January 2004,\n     \
    \         <https://www.rfc-editor.org/info/rfc3688>.\n   [RFC4787]  Audet, F.,\
    \ Ed. and C. Jennings, \"Network Address\n              Translation (NAT) Behavioral\
    \ Requirements for Unicast\n              UDP\", BCP 127, RFC 4787, DOI 10.17487/RFC4787,\
    \ January\n              2007, <https://www.rfc-editor.org/info/rfc4787>.\n  \
    \ [RFC5382]  Guha, S., Ed., Biswas, K., Ford, B., Sivakumar, S., and\n       \
    \       P. Srisuresh, \"NAT Behavioral Requirements for TCP\",\n             \
    \ BCP 142, RFC 5382, DOI 10.17487/RFC5382, October 2008,\n              <https://www.rfc-editor.org/info/rfc5382>.\n\
    \   [RFC5508]  Srisuresh, P., Ford, B., Sivakumar, S., and S. Guha, \"NAT\n  \
    \            Behavioral Requirements for ICMP\", BCP 148, RFC 5508,\n        \
    \      DOI 10.17487/RFC5508, April 2009,\n              <https://www.rfc-editor.org/info/rfc5508>.\n\
    \   [RFC6052]  Bao, C., Huitema, C., Bagnulo, M., Boucadair, M., and\n       \
    \       X. Li, \"IPv6 Addressing of IPv4/IPv6 Translators\",\n              RFC\
    \ 6052, DOI 10.17487/RFC6052, October 2010,\n              <https://www.rfc-editor.org/info/rfc6052>.\n\
    \   [RFC6146]  Bagnulo, M., Matthews, P., and I. van Beijnum, \"Stateful\n   \
    \           NAT64: Network Address and Protocol Translation from IPv6\n      \
    \        Clients to IPv4 Servers\", RFC 6146, DOI 10.17487/RFC6146,\n        \
    \      April 2011, <https://www.rfc-editor.org/info/rfc6146>.\n   [RFC6241]  Enns,\
    \ R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,\n              and A. Bierman,\
    \ Ed., \"Network Configuration Protocol\n              (NETCONF)\", RFC 6241,\
    \ DOI 10.17487/RFC6241, June 2011,\n              <https://www.rfc-editor.org/info/rfc6241>.\n\
    \   [RFC6242]  Wasserman, M., \"Using the NETCONF Protocol over Secure\n     \
    \         Shell (SSH)\", RFC 6242, DOI 10.17487/RFC6242, June 2011,\n        \
    \      <https://www.rfc-editor.org/info/rfc6242>.\n   [RFC6296]  Wasserman, M.\
    \ and F. Baker, \"IPv6-to-IPv6 Network Prefix\n              Translation\", RFC\
    \ 6296, DOI 10.17487/RFC6296, June 2011,\n              <https://www.rfc-editor.org/info/rfc6296>.\n\
    \   [RFC6619]  Arkko, J., Eggert, L., and M. Townsley, \"Scalable\n          \
    \    Operation of Address Translators with Per-Interface\n              Bindings\"\
    , RFC 6619, DOI 10.17487/RFC6619, June 2012,\n              <https://www.rfc-editor.org/info/rfc6619>.\n\
    \   [RFC6877]  Mawatari, M., Kawashima, M., and C. Byrne, \"464XLAT:\n       \
    \       Combination of Stateful and Stateless Translation\",\n              RFC\
    \ 6877, DOI 10.17487/RFC6877, April 2013,\n              <https://www.rfc-editor.org/info/rfc6877>.\n\
    \   [RFC6888]  Perreault, S., Ed., Yamagata, I., Miyakawa, S., Nakagawa,\n   \
    \           A., and H. Ashida, \"Common Requirements for Carrier-Grade\n     \
    \         NATs (CGNs)\", BCP 127, RFC 6888, DOI 10.17487/RFC6888,\n          \
    \    April 2013, <https://www.rfc-editor.org/info/rfc6888>.\n   [RFC6991]  Schoenwaelder,\
    \ J., Ed., \"Common YANG Data Types\",\n              RFC 6991, DOI 10.17487/RFC6991,\
    \ July 2013,\n              <https://www.rfc-editor.org/info/rfc6991>.\n   [RFC7596]\
    \  Cui, Y., Sun, Q., Boucadair, M., Tsou, T., Lee, Y., and\n              I. Farrer,\
    \ \"Lightweight 4over6: An Extension to the Dual-\n              Stack Lite Architecture\"\
    , RFC 7596, DOI 10.17487/RFC7596,\n              July 2015, <https://www.rfc-editor.org/info/rfc7596>.\n\
    \   [RFC7597]  Troan, O., Ed., Dec, W., Li, X., Bao, C., Matsushima, S.,\n   \
    \           Murakami, T., and T. Taylor, Ed., \"Mapping of Address and\n     \
    \         Port with Encapsulation (MAP-E)\", RFC 7597,\n              DOI 10.17487/RFC7597,\
    \ July 2015,\n              <https://www.rfc-editor.org/info/rfc7597>.\n   [RFC7757]\
    \  Anderson, T. and A. Leiva Popper, \"Explicit Address\n              Mappings\
    \ for Stateless IP/ICMP Translation\", RFC 7757,\n              DOI 10.17487/RFC7757,\
    \ February 2016,\n              <https://www.rfc-editor.org/info/rfc7757>.\n \
    \  [RFC7857]  Penno, R., Perreault, S., Boucadair, M., Ed., Sivakumar,\n     \
    \         S., and K. Naito, \"Updates to Network Address Translation\n       \
    \       (NAT) Behavioral Requirements\", BCP 127, RFC 7857,\n              DOI\
    \ 10.17487/RFC7857, April 2016,\n              <https://www.rfc-editor.org/info/rfc7857>.\n\
    \   [RFC7915]  Bao, C., Li, X., Baker, F., Anderson, T., and F. Gont,\n      \
    \        \"IP/ICMP Translation Algorithm\", RFC 7915,\n              DOI 10.17487/RFC7915,\
    \ June 2016,\n              <https://www.rfc-editor.org/info/rfc7915>.\n   [RFC7950]\
    \  Bjorklund, M., Ed., \"The YANG 1.1 Data Modeling Language\",\n            \
    \  RFC 7950, DOI 10.17487/RFC7950, August 2016,\n              <https://www.rfc-editor.org/info/rfc7950>.\n\
    \   [RFC8040]  Bierman, A., Bjorklund, M., and K. Watsen, \"RESTCONF\n       \
    \       Protocol\", RFC 8040, DOI 10.17487/RFC8040, January 2017,\n          \
    \    <https://www.rfc-editor.org/info/rfc8040>.\n   [RFC8341]  Bierman, A. and\
    \ M. Bjorklund, \"Network Configuration\n              Access Control Model\"\
    , STD 91, RFC 8341,\n              DOI 10.17487/RFC8341, March 2018,\n       \
    \       <https://www.rfc-editor.org/info/rfc8341>.\n   [RFC8343]  Bjorklund, M.,\
    \ \"A YANG Data Model for Interface\n              Management\", RFC 8343, DOI\
    \ 10.17487/RFC8343, March 2018,\n              <https://www.rfc-editor.org/info/rfc8343>.\n\
    \   [RFC8446]  Rescorla, E., \"The Transport Layer Security (TLS) Protocol\n \
    \             Version 1.3\", RFC 8446, DOI 10.17487/RFC8446, August 2018,\n  \
    \            <https://www.rfc-editor.org/info/rfc8446>.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [NAT-SUPP]\n              Stewart, R., Tuexen,\
    \ M., and I. Ruengeler, \"Stream Control\n              Transmission Protocol\
    \ (SCTP) Network Address Translation\n              Support\", Work in Progress,\
    \ draft-ietf-tsvwg-natsupp-12,\n              July 2018.\n   [RFC2663]  Srisuresh,\
    \ P. and M. Holdrege, \"IP Network Address\n              Translator (NAT) Terminology\
    \ and Considerations\",\n              RFC 2663, DOI 10.17487/RFC2663, August\
    \ 1999,\n              <https://www.rfc-editor.org/info/rfc2663>.\n   [RFC3022]\
    \  Srisuresh, P. and K. Egevang, \"Traditional IP Network\n              Address\
    \ Translator (Traditional NAT)\", RFC 3022,\n              DOI 10.17487/RFC3022,\
    \ January 2001,\n              <https://www.rfc-editor.org/info/rfc3022>.\n  \
    \ [RFC5597]  Denis-Courmont, R., \"Network Address Translation (NAT)\n       \
    \       Behavioral Requirements for the Datagram Congestion\n              Control\
    \ Protocol\", BCP 150, RFC 5597,\n              DOI 10.17487/RFC5597, September\
    \ 2009,\n              <https://www.rfc-editor.org/info/rfc5597>.\n   [RFC6269]\
    \  Ford, M., Ed., Boucadair, M., Durand, A., Levis, P., and\n              P.\
    \ Roberts, \"Issues with IP Address Sharing\", RFC 6269,\n              DOI 10.17487/RFC6269,\
    \ June 2011,\n              <https://www.rfc-editor.org/info/rfc6269>.\n   [RFC6736]\
    \  Brockners, F., Bhandari, S., Singh, V., and V. Fajardo,\n              \"Diameter\
    \ Network Address and Port Translation Control\n              Application\", RFC\
    \ 6736, DOI 10.17487/RFC6736, October\n              2012, <https://www.rfc-editor.org/info/rfc6736>.\n\
    \   [RFC6887]  Wing, D., Ed., Cheshire, S., Boucadair, M., Penno, R., and\n  \
    \            P. Selkirk, \"Port Control Protocol (PCP)\", RFC 6887,\n        \
    \      DOI 10.17487/RFC6887, April 2013,\n              <https://www.rfc-editor.org/info/rfc6887>.\n\
    \   [RFC6908]  Lee, Y., Maglione, R., Williams, C., Jacquenet, C., and\n     \
    \         M. Boucadair, \"Deployment Considerations for Dual-Stack\n         \
    \     Lite\", RFC 6908, DOI 10.17487/RFC6908, March 2013,\n              <https://www.rfc-editor.org/info/rfc6908>.\n\
    \   [RFC7050]  Savolainen, T., Korhonen, J., and D. Wing, \"Discovery of\n   \
    \           the IPv6 Prefix Used for IPv6 Address Synthesis\",\n             \
    \ RFC 7050, DOI 10.17487/RFC7050, November 2013,\n              <https://www.rfc-editor.org/info/rfc7050>.\n\
    \   [RFC7289]  Kuarsingh, V., Ed. and J. Cianfarani, \"Carrier-Grade NAT\n   \
    \           (CGN) Deployment with BGP/MPLS IP VPNs\", RFC 7289,\n            \
    \  DOI 10.17487/RFC7289, June 2014,\n              <https://www.rfc-editor.org/info/rfc7289>.\n\
    \   [RFC7335]  Byrne, C., \"IPv4 Service Continuity Prefix\", RFC 7335,\n    \
    \          DOI 10.17487/RFC7335, August 2014,\n              <https://www.rfc-editor.org/info/rfc7335>.\n\
    \   [RFC7659]  Perreault, S., Tsou, T., Sivakumar, S., and T. Taylor,\n      \
    \        \"Definitions of Managed Objects for Network Address\n              Translators\
    \ (NATs)\", RFC 7659, DOI 10.17487/RFC7659,\n              October 2015, <https://www.rfc-editor.org/info/rfc7659>.\n\
    \   [RFC7753]  Sun, Q., Boucadair, M., Sivakumar, S., Zhou, C., Tsou, T.,\n  \
    \            and S. Perreault, \"Port Control Protocol (PCP) Extension\n     \
    \         for Port-Set Allocation\", RFC 7753, DOI 10.17487/RFC7753,\n       \
    \       February 2016, <https://www.rfc-editor.org/info/rfc7753>.\n   [RFC8045]\
    \  Cheng, D., Korhonen, J., Boucadair, M., and S. Sivakumar,\n              \"\
    RADIUS Extensions for IP Port Configuration and\n              Reporting\", RFC\
    \ 8045, DOI 10.17487/RFC8045, January 2017,\n              <https://www.rfc-editor.org/info/rfc8045>.\n\
    \   [RFC8340]  Bjorklund, M. and L. Berger, Ed., \"YANG Tree Diagrams\",\n   \
    \           BCP 215, RFC 8340, DOI 10.17487/RFC8340, March 2018,\n           \
    \   <https://www.rfc-editor.org/info/rfc8340>.\n   [RFC8407]  Bierman, A., \"\
    Guidelines for Authors and Reviewers of\n              Documents Containing YANG\
    \ Data Models\", BCP 216, RFC 8407,\n              DOI 10.17487/RFC8407, October\
    \ 2018,\n              <https://www.rfc-editor.org/info/rfc8407>.\n   [RFC8513]\
    \  Boucadair, M., Jacquenet, C., and S. Sivakumar, \"A YANG\n              Data\
    \ Model for Dual-Stack Lite (DS-Lite)\", RFC 8513,\n              DOI 10.17487/RFC8513,\
    \ January 2019,\n              <https://www.rfc-editor.org/info/rfc8513>.\n  \
    \ [YANG-PCP] Boucadair, M., Jacquenet, C., Sivakumar, S., and\n              S.\
    \ Vinapamula, \"YANG Modules for the Port Control Protocol\n              (PCP)\"\
    , Work in Progress, draft-boucadair-pcp-yang-05,\n              October 2017.\n"
- title: Appendix A.  Some Examples
  contents:
  - "Appendix A.  Some Examples\n   This section provides a non-exhaustive set of\
    \ examples to illustrate\n   the use of the NAT YANG module.\n"
- title: A.1.  Traditional NAT44
  contents:
  - "A.1.  Traditional NAT44\n   Traditional NAT44 is a Basic NAT44 or NAPT that is\
    \ used to share the\n   same IPv4 address among hosts that are owned by the same\
    \ subscriber.\n   This is typically the NAT that is embedded in CPE devices.\n\
    \   This NAT is usually provided with one single external IPv4 address;\n   disambiguating\
    \ connections is achieved by rewriting the source port\n   number.  The XML snippet\
    \ to configure the external IPv4 address in\n   such case together with a mapping\
    \ entry is depicted below:\n   <instances>\n     <instance>\n       <id>1</id>\n\
    \       <name>NAT_Subscriber_A</name>\n        ....\n       <external-ip-address-pool>\n\
    \         <pool-id>1</pool-id>\n           <external-ip-pool>\n             198.51.100.1/32\n\
    \           </external-ip-pool>\n         </external-ip-address-pool>\n      \
    \   ....\n       <mapping-table>\n         ....\n         <external-src-address>\n\
    \           198.51.100.1/32\n         </external-src-address>\n           ....\n\
    \       </mapping-table>\n     </instance>\n   </instances>\n   The following\
    \ shows the XML excerpt depicting a dynamic UDP mapping\n   entry maintained by\
    \ a traditional NAPT44.  In reference to this\n   example, the UDP packet received\
    \ with a source IPv4 address\n   (192.0.2.1) and source port number (1568) is\
    \ translated into a UDP\n   packet having a source IPv4 address (198.51.100.1)\
    \ and source port\n   (15000).  The remaining lifetime of this mapping is 300\
    \ seconds.\n   <mapping-entry>\n     <index>15</index>\n     <type>\n       dynamic-explicit\n\
    \     </type>\n     <transport-protocol>\n       17\n     </transport-protocol>\n\
    \     <internal-src-address>\n       192.0.2.1/32\n     </internal-src-address>\n\
    \     <internal-src-port>\n       <start-port-number>\n         1568\n       </start-port-number>\n\
    \     </internal-src-port>\n     <external-src-address>\n       198.51.100.1/32\n\
    \     </external-src-address>\n     <external-src-port>\n       <start-port-number>\n\
    \         15000\n       </start-port-number>\n     </external-src-port>\n    \
    \ <lifetime>\n       300\n     </lifetime>\n   </mapping-entry>\n"
- title: A.2.  Carrier Grade NAT (CGN)
  contents:
  - "A.2.  Carrier Grade NAT (CGN)\n   The following XML snippet shows the example\
    \ of the capabilities\n   supported by a CGN as retrieved using NETCONF.\n   <capabilities>\n\
    \     <nat-flavor>napt44</nat-flavor>\n     <transport-protocols>\n       <protocol-id>1</protocol-id>\n\
    \     </transport-protocols>\n     <transport-protocols>\n       <protocol-id>6</protocol-id>\n\
    \     </transport-protocols>\n     <transport-protocols>\n       <protocol-id>17</protocol-id>\n\
    \     </transport-protocols>\n     <restricted-port-support>\n       false\n \
    \    </restricted-port-support>\n     <static-mapping-support>\n       true\n\
    \     </static-mapping-support>\n     <port-randomization-support>\n       true\n\
    \     </port-randomization-support>\n     <port-range-allocation-support>\n  \
    \     true\n     </port-range-allocation-support>\n     <port-preservation-suport>\n\
    \       true\n     </port-preservation-suport>\n     <port-parity-preservation-support>\n\
    \       false\n     </port-parity-preservation-support>\n     <address-roundrobin-support>\n\
    \       true\n     </address-roundrobin-support>\n     <paired-address-pooling-support>\n\
    \       true\n     </paired-address-pooling-support>\n     <endpoint-independent-mapping-support>\n\
    \       true\n     </endpoint-independent-mapping-support>\n     <address-dependent-mapping-support>\n\
    \       true\n     </address-dependent-mapping-support>\n     <address-and-port-dependent-mapping-support>\n\
    \       true\n     </address-and-port-dependent-mapping-support>\n     <endpoint-independent-filtering-support>\n\
    \       true\n     </endpoint-independent-filtering-support>\n     <address-dependent-filtering>\n\
    \       true\n     </address-dependent-filtering>\n     <address-and-port-dependent-filtering>\n\
    \       true\n     </address-and-port-dependent-filtering>\n   </capabilities>\n\
    \   The following XML snippet shows the example of a CGN that is\n   provisioned\
    \ with one contiguous pool of external IPv4 addresses\n   (198.51.100.0/24). \
    \ Further, the CGN is instructed to limit the\n   number of allocated ports per\
    \ subscriber to 1024.  Ports can be\n   allocated by the CGN by assigning ranges\
    \ of 256 ports (that is, a\n   subscriber can be allocated up to four port ranges\
    \ of 256 ports\n   each).\n   <instances>\n     <instance>\n       <id>1</id>\n\
    \       <name>myCGN</name>\n       ....\n       <external-ip-address-pool>\n \
    \        <pool-id>1</pool-id>\n         <external-ip-pool>\n           198.51.100.0/24\n\
    \         </external-ip-pool>\n       </external-ip-address-pool>\n       <port-quota>\n\
    \         <port-limit>\n           1024\n         </port-limit>\n         <quota-type\
    \ >\n           all\n         </quota-type >\n       </port-quota>\n         <port-allocation-type>\n\
    \           port-range-allocation\n         </port-allocation-type>\n        \
    \ <port-set>\n           <port-set-size>\n             256\n           </port-set-size>\n\
    \         </port-set>\n       ....\n     </instance>\n   </instances>\n   An administrator\
    \ may decide to allocate one single port range per\n   subscriber (e.g., a port\
    \ range of 1024 ports) as shown below:\n   <instances>\n     <instance>\n    \
    \   <id>1</id>\n       <name>myCGN</name>\n       ....\n       <external-ip-address-pool>\n\
    \         <pool-id>1</pool-id>\n         <external-ip-pool>\n           198.51.100.0/24\n\
    \         </external-ip-pool>\n       </external-ip-address-pool>\n       <port-quota>\n\
    \         <port-limit>\n           1024\n         </port-limit>\n         <quota-type\
    \ >\n           all\n         </quota-type >\n       </port-quota>\n         <port-allocation-type>\n\
    \           port-range-allocation\n         </port-allocation-type>\n        \
    \ <port-set>\n           <port-set-size>\n             1024\n           </port-set-size>\n\
    \         </port-set>\n       ....\n     </instance>\n   </instances>\n"
- title: A.3.  CGN Pass-Through
  contents:
  - "A.3.  CGN Pass-Through\n   Figure 1 illustrates an example of the CGN pass-through\
    \ feature.\n                     X1:x1            X1':x1'            X2:x2\n \
    \                    +---+from X1:x1  +---+from X1:x1    +---+\n             \
    \        | C |  to X2:x2  |   |  to X2:x2    | S |\n                     | l |>>>>>>>>>>>>|\
    \ C |>>>>>>>>>>>>>>| e |\n                     | i |            | G |        \
    \      | r |\n                     | e |<<<<<<<<<<<<| N |<<<<<<<<<<<<<<| v |\n\
    \                     | n |from X2:x2  |   |from X2:x2    | e |\n            \
    \         | t |  to X1:x1  |   |  to X1:x1    | r |\n                     +---+\
    \            +---+              +---+\n                        Figure 1: CGN Pass-Through\n\
    \   For example, in order to disable NAT for communications issued by the\n  \
    \ client (192.0.2.1), the following configuration parameter must be\n   set:\n\
    \   <nat-pass-through>\n     ...\n     <prefix>192.0.2.1/32</prefix>\n     ...\n\
    \   </nat-pass-through>\n"
- title: A.4.  NAT64
  contents:
  - "A.4.  NAT64\n   Let's consider the example of a NAT64 that should use\n   2001:db8:122:300::/56\
    \ to perform IPv6 address synthesis [RFC6052].\n   The XML snippet to configure\
    \ the NAT64 prefix in such case is\n   depicted below:\n   <nat64-prefixes>\n\
    \     <nat64-prefix>\n       2001:db8:122:300::/56\n     </nat64-prefix>\n   </nat64-prefixes>\n\
    \   Let's now consider the example of a NAT64 that should use\n   2001:db8:122::/48\
    \ to perform IPv6 address synthesis [RFC6052] only if\n   the destination address\
    \ matches 198.51.100.0/24.  The XML snippet to\n   configure the NAT64 prefix\
    \ in such case is shown below:\n   <nat64-prefixes>\n     <nat64-prefix>\n   \
    \    2001:db8:122::/48\n     </nat64-prefix>\n     <destination-ipv4-prefix>\n\
    \       <ipv4-prefix>\n         198.51.100.0/24\n       </ipv4-prefix>\n     </destination-ipv4-prefix>\n\
    \   </nat64-prefixes>\n"
- title: A.5.  Stateless IP/ICMP Translation (SIIT)
  contents:
  - "A.5.  Stateless IP/ICMP Translation (SIIT)\n   Let's consider the example of\
    \ a stateless translator that is\n   configured with 2001:db8:100::/40 to perform\
    \ IPv6 address synthesis\n   [RFC6052].  Similar to the NAT64 case, the XML snippet\
    \ to configure\n   the NAT64 prefix in such case is depicted below:\n   <nat64-prefixes>\n\
    \     <nat64-prefix>\n       2001:db8:100::/40\n     </nat64-prefix>\n   </nat64-prefixes>\n\
    \   When the translator receives an IPv6 packet, for example, with a\n   source\
    \ address (2001:db8:1c0:2:21::) and destination address\n   (2001:db8:1c6:3364:2::),\
    \ it extracts embedded IPv4 addresses\n   following rules per RFC 6052 with 2001:db8:100::/40\
    \ as the NSP:\n   o  192.0.2.33 is extracted from 2001:db8:1c0:2:21::\n   o  198.51.100.2\
    \ is extracted from 2001:db8:1c6:3364:2::\n   The translator transforms the IPv6\
    \ header into an IPv4 header using\n   the IP/ICMP Translation Algorithm [RFC7915].\
    \  The IPv4 packets will\n   include 192.0.2.33 as the source address and 198.51.100.2\
    \ as the\n   destination address.\n   Also, a NAT64 can be instructed to behave\
    \ in the stateless mode by\n   providing the following configuration.  The same\
    \ NAT64 prefix is used\n   for constructing both IPv4-translatable IPv6 addresses\
    \ and\n   IPv4-converted IPv6 addresses (see Section 3.3 of [RFC6052]).\n   <nat64-prefixes>\n\
    \     <nat64-prefix>\n       2001:db8:122:300::/56\n     </nat64-prefix>\n   \
    \  <stateless-enable>\n       true\n     </stateless-enable>\n   </nat64-prefixes>\n"
- title: A.6.  Explicit Address Mappings (EAM) for Stateless IP/ICMP Translation
  contents:
  - "A.6.  Explicit Address Mappings (EAM) for Stateless IP/ICMP Translation\n   \
    \   (SIIT)\n   As specified in [RFC7757], an EAM consists of an IPv4 prefix and\
    \ an\n   IPv6 prefix.  Let's consider the set of EAM examples in Table 8.\n  \
    \                +----------------+----------------------+\n                 \
    \ |  IPv4 Prefix   |     IPv6 Prefix      |\n                  +----------------+----------------------+\n\
    \                  | 192.0.2.1      | 2001:db8:aaaa::      |\n               \
    \   | 192.0.2.2/32   | 2001:db8:bbbb::b/128 |\n                  | 192.0.2.16/28\
    \  | 2001:db8:cccc::/124  |\n                  | 192.0.2.128/26 | 2001:db8:dddd::/64\
    \   |\n                  | 192.0.2.192/29 | 2001:db8:eeee:8::/62 |\n         \
    \         | 192.0.2.224/31 | 64:ff9b::/127        |\n                  +----------------+----------------------+\n\
    \                        Table 8: EAM Examples (RFC 7757)\n   The following XML\
    \ excerpt illustrates how these EAMs can be\n   configured using the NAT YANG\
    \ module:\n   <eam>\n     <ipv4-prefix>\n       192.0.2.1/32\n     </ipv4-prefix>\n\
    \     <ipv6-prefix>\n       2001:db8:aaaa::/128\n     </ipv6-prefix>\n   </eam>\n\
    \   <eam>\n     <ipv4-prefix>\n       192.0.2.2/32\n     </ipv4-prefix>\n    \
    \ <ipv6-prefix>\n       2001:db8:bbbb::b/128\n     </ipv6-prefix>\n   </eam>\n\
    \   <eam>\n     <ipv4-prefix>\n       192.0.2.16/28\n     </ipv4-prefix>\n   \
    \  <ipv6-prefix>\n       2001:db8:cccc::/124\n     </ipv6-prefix>\n   </eam>\n\
    \   <eam>\n     <ipv4-prefix>\n       192.0.2.128/26\n     </ipv4-prefix>\n  \
    \   <ipv6-prefix>\n       2001:db8:dddd::/64\n     </ipv6-prefix>\n   </eam>\n\
    \   <eam>\n     <ipv4-prefix>\n       192.0.2.192/29\n     </ipv4-prefix>\n  \
    \   <ipv6-prefix>\n       2001:db8:eeee:8::/62\n     </ipv6-prefix>\n   </eam>\n\
    \   <eam>\n     <ipv4-prefix>\n       192.0.2.224/31\n     </ipv4-prefix>\n  \
    \   <ipv6-prefix>\n       64:ff9b::/127\n     </ipv6-prefix>\n   </eam>\n   EAMs\
    \ may be enabled jointly with stateful NAT64.  This example shows\n   a NAT64\
    \ function that supports static mappings:\n   <capabilities>\n     <nat-flavor>\n\
    \       nat64\n     </nat-flavor>\n     <static-mapping-support>\n       true\n\
    \     </static-mapping-support>\n     <port-randomization-support>\n       true\n\
    \     </port-randomization-support>\n     <port-range-allocation-support>\n  \
    \     true\n     </port-range-allocation-support>\n     <port-preservation-suport>\n\
    \       true\n     </port-preservation-suport>\n     <address-roundrobin-support>\n\
    \       true\n     </address-roundrobin-support>\n     <paired-address-pooling-support>\n\
    \       true\n     </paired-address-pooling-support>\n     <endpoint-independent-mapping-support>\n\
    \       true\n     </endpoint-independent-mapping-support>\n     <endpoint-independent-filtering-support>\n\
    \       true\n     </endpoint-independent-filtering-support>\n   </capabilities>\n"
- title: A.7.  Static Mappings with Port Ranges
  contents:
  - "A.7.  Static Mappings with Port Ranges\n   The following example shows a static\
    \ mapping that instructs a NAT to\n   translate packets issued from 192.0.2.1\
    \ and with source ports in the\n   100-500 range to 198.51.100.1:1100-1500.\n\
    \   <mapping-entry>\n     <index>1</index>\n     <type>\n       static\n     </type>\n\
    \     <transport-protocol>\n       6\n     </transport-protocol>\n     <internal-src-address>\n\
    \       192.0.2.1/32\n     </internal-src-address>\n     <internal-src-port>\n\
    \       <start-port-number>\n         100\n       </start-port-number>\n     \
    \  <end-port-number>\n         500\n       </end-port-number>\n     </internal-src-port>\n\
    \     <external-src-address>\n       198.51.100.1/32\n     </external-src-address>\n\
    \     <external-src-port>\n       <start-port-number>\n         1100\n       </start-port-number>\n\
    \       <end-port-number>\n         1500\n       </end-port-number>\n     </external-src-port>\n\
    \     ...\n   </mapping-entry>\n"
- title: A.8.  Static Mappings with IP Prefixes
  contents:
  - "A.8.  Static Mappings with IP Prefixes\n   The following example shows a static\
    \ mapping that instructs a NAT to\n   translate TCP packets issued from 192.0.2.0/24\
    \ to 198.51.100.0/24.\n   <mapping-entry>\n     <index>1</index>\n     <type>\n\
    \       static\n     </type>\n     <transport-protocol>\n       6\n     </transport-protocol>\n\
    \     <internal-src-address>\n       192.0.2.0/24\n     </internal-src-address>\n\
    \     <external-src-address>\n       198.51.100.0/24\n     </external-src-address>\n\
    \     ...\n   </mapping-entry>\n"
- title: A.9.  Destination NAT
  contents:
  - "A.9.  Destination NAT\n   The following XML snippet shows an example of a Destination\
    \ NAT that\n   is instructed to translate all packets having 192.0.2.1 as a\n\
    \   destination IP address to 198.51.100.1.\n   <dst-ip-address-pool>\n     <pool-id>1</pool-id>\n\
    \     <dst-in-ip-pool>\n       192.0.2.1/32\n     </dst-in-ip-pool>\n     <dst-out-ip-pool>\n\
    \       198.51.100.1/32\n     </dst-out-ip-pool>\n   </dst-ip-address-pool>\n\
    \   In order to instruct a NAT to translate TCP packets destined to\n   '192.0.2.1:80'\
    \ to '198.51.100.1:8080', the following XML snippet\n   shows the static mapping\
    \ configured on the NAT:\n   <mapping-entry>\n     <index>1568</index>\n     <type>\n\
    \       static\n     </type>\n     <transport-protocol>\n       6\n     </transport-protocol>\n\
    \     <internal-dst-address>\n       192.0.2.1/32\n     </internal-dst-address>\n\
    \     <internal-dst-port>\n       <start-port-number>\n         80\n       </start-port-number>\n\
    \     </internal-dst-port>\n     <external-dst-address>\n       198.51.100.1/32\n\
    \     </external-dst-address>\n     <external-dst-port>\n       <start-port-number>\n\
    \         8080\n       </start-port-number>\n     </external-dst-port>\n   </mapping-entry>\n\
    \   In order to instruct a NAT to translate TCP packets destined to\n   '192.0.2.1:80'\
    \ (HTTP traffic) to 198.51.100.1 and '192.0.2.1:22' (SSH\n   traffic) to 198.51.100.2,\
    \ the following XML snippet shows the static\n   mappings configured on the NAT:\n\
    \   <mapping-entry>\n     <index>123</index>\n     <type>\n       static\n   \
    \  </type>\n     <transport-protocol>\n       6\n     </transport-protocol>\n\
    \     <internal-dst-address>\n       192.0.2.1/32\n     </internal-dst-address>\n\
    \     <internal-dst-port>\n       <start-port-number>\n         80\n       </start-port-number>\n\
    \     </internal-dst-port>\n     <external-dst-address>\n       198.51.100.1/32\n\
    \     </external-dst-address>\n     ...\n   </mapping-entry>\n   <mapping-entry>\n\
    \     <index>1236</index>\n     <type>\n       static\n     </type>\n     <transport-protocol>\n\
    \        6\n     </transport-protocol>\n     <internal-dst-address>\n       192.0.2.1/32\n\
    \     </internal-dst-address>\n     <internal-dst-port>\n       <start-port-number>\n\
    \         22\n       </start-port-number>\n     </internal-dst-port>\n     <external-dst-address>\n\
    \       198.51.100.2/32\n     </external-dst-address>\n     ...\n   </mapping-entry>\n\
    \   The NAT may also be instructed to proceed with both source and\n   Destination\
    \ NAT.  To do so, in addition to the above example to\n   configure Destination\
    \ NAT, the NAT may be provided, for example with\n   a pool of external IP addresses\
    \ (198.51.100.0/24) to use for source\n   address translation.  An example of\
    \ the corresponding XML snippet is\n   provided hereafter:\n   <external-ip-address-pool>\n\
    \     <pool-id>1</pool-id>\n     <external-ip-pool>\n       198.51.100.0/24\n\
    \     </external-ip-pool>\n   </external-ip-address-pool>\n   Instead of providing\
    \ an external IP address to share, the NAT may be\n   configured with static mapping\
    \ entries that modify the internal IP\n   address and/or port number.\n"
- title: A.10.  Customer-Side Translator (CLAT)
  contents:
  - "A.10.  Customer-Side Translator (CLAT)\n   The following XML snippet shows the\
    \ example of a CLAT that is\n   configured with 2001:db8:1234::/96 as a PLAT-side\
    \ IPv6 prefix and\n   2001:db8:aaaa::/96 as a CLAT-side IPv6 prefix.  The CLAT\
    \ is also\n   provided with 192.0.0.1/32 (which is selected from the IPv4 service\n\
    \   continuity prefix defined in [RFC7335]).\n   <clat-ipv6-prefixes>\n     <ipv6-prefix>\n\
    \       2001:db8:aaaa::/96\n     </ipv6-prefix>\n   </clat-ipv6-prefixes>\n  \
    \ <clat-ipv4-prefixes>\n     <ipv4-prefix>\n       192.0.0.1/32\n     </ipv4-prefix>\n\
    \   </clat-ipv4-prefixes>\n   <nat64-prefixes>\n     <nat64-prefix>\n       2001:db8:1234::/96\n\
    \     </nat64-prefix>\n   </nat64-prefixes>\n"
- title: A.11.  IPv6 Network Prefix Translation (NPTv6)
  contents:
  - "A.11.  IPv6 Network Prefix Translation (NPTv6)\n   Let's consider the example\
    \ of an NPTv6 translator that should rewrite\n   packets with the source prefix\
    \ (fd03:c03a:ecab::/48) with the\n   external prefix (2001:db8:1::/48).  The internal\
    \ interface is \"eth0\"\n   while the external interface is \"eth1\" (Figure 2).\n\
    \                  External Network:  Prefix = 2001:db8:1::/48\n             \
    \         --------------------------------------\n                           \
    \             |\n                                        |eth1\n             \
    \                    +-------------+\n                             eth4|     NPTv6\
    \   |eth2\n                         ...-----|             |------...\n       \
    \                          +-------------+\n                                 \
    \       |eth0\n                                        |\n                   \
    \   --------------------------------------\n                  Internal Network:\
    \  Prefix = fd03:c03a:ecab::/48\n                        Figure 2: Example of\
    \ NPTv6\n   The XML snippet to configure NPTv6 prefixes in such case is depicted\n\
    \   below:\n   <nptv6-prefixes>\n     <internal-ipv6-prefix>\n       fd03:c03a:ecab::/48\n\
    \     </internal-ipv6-prefix>\n     <external-ipv6-prefix>\n       2001:db8:1::/48\n\
    \     </external-ipv6-prefix>\n   </nptv6-prefixes>\n   ...\n   <external-realm>\n\
    \     <external-interface>\n       eth1\n     </external-interface>\n   </external-realm>\n\
    \   Figure 3 shows an example of an NPTv6 translator that interconnects\n   two\
    \ internal networks (fd03:c03a:ecab::/48 and fda8:d5cb:14f3::/48);\n   each is\
    \ translated using a dedicated prefix (2001:db8:1::/48 and\n   2001:db8:6666::/48,\
    \ respectively).\n                     Internal Prefix = fda8:d5cb:14f3::/48\n\
    \                     --------------------------------------\n               \
    \           V            |      External Prefix\n                          V \
    \           |eth1   2001:db8:1::/48\n                          V        +---------+\
    \      ^\n                          V        |  NPTv6  |      ^\n            \
    \              V        |         |      ^\n                          V      \
    \  +---------+      ^\n                 External Prefix       |eth0        ^\n\
    \                 2001:db8:6666::/48    |            ^\n                     --------------------------------------\n\
    \                     Internal Prefix = fd03:c03a:ecab::/48\n                \
    \  Figure 3: Connecting Two Peer Networks\n   To that aim, the following configuration\
    \ is provided to the NPTv6\n   translator:\n   <policy>\n     <id>1</id>\n   \
    \  <nptv6-prefixes>\n       <internal-ipv6-prefix>\n         fd03:c03a:ecab::/48\n\
    \       </internal-ipv6-prefix>\n       <external-ipv6-prefix>\n         2001:db8:1::/48\n\
    \       </external-ipv6-prefix>\n     </nptv6-prefixes>\n     <external-realm>\n\
    \       <external-interface>\n         eth1\n       </external-interface>\n  \
    \   </external-realm>\n   </policy>\n   <policy>\n     <id>2</id>\n     <nptv6-prefixes>\n\
    \       <internal-ipv6-prefix>\n         fda8:d5cb:14f3::/48\n       </internal-ipv6-prefix>\n\
    \       <external-ipv6-prefix>\n         2001:db8:6666::/48\n       </external-ipv6-prefix>\n\
    \     </nptv6-prefixes>\n     <external-realm>\n       <external-interface>\n\
    \         eth0\n       </external-interface>\n     </external-realm>\n   </policy>\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   Many thanks to Dan Wing, Tianran Zhou, Tom Petch, Warren\
    \ Kumari, and\n   Benjamin Kaduk for their review.\n   Thanks to Juergen Schoenwaelder\
    \ for the comments on the YANG\n   structure and the suggestion to use NMDA. \
    \ Mahesh Jethanandani\n   provided useful comments.\n   Thanks to Lee Howard and\
    \ Jordi Palet for the CLAT comments, Fred\n   Baker for the NPTv6 comments, Tore\
    \ Anderson for the EAM SIIT review,\n   and Kristian Poscic for the CGN review.\n\
    \   Special thanks to Maros Marsalek and Marek Gradzki for sharing their\n   comments\
    \ based on the FD.io implementation of this module\n   (https://git.fd.io/hc2vpp/tree/nat/nat-api/src/main/yang).\n\
    \   Rajiv Asati suggested clarifying how the module applies for both\n   stateless\
    \ and stateful NAT64.\n   Juergen Schoenwaelder provided an early YANG Doctors\
    \ review.  Many\n   thanks to him.\n   Thanks to Roni Even, Mach(Guoyi) Chen,\
    \ Tim Chown, and Stephen Farrell\n   for the directorates review.  Igor Ryzhov\
    \ identified a nit in one\n   example.\n   Mirja Kuehlewind made a comment about\
    \ the reuse of some TCP timers\n   for any connection-oriented protocol.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Mohamed Boucadair (editor)\n   Orange\n   Rennes  35000\n\
    \   France\n   Email: mohamed.boucadair@orange.com\n   Senthil Sivakumar\n   Cisco\
    \ Systems\n   7100-8 Kit Creek Road\n   Research Triangle Park, North Carolina\
    \  27709\n   United States of America\n   Phone: +1 919 392 5158\n   Email: ssenthil@cisco.com\n\
    \   Christian Jacquenet\n   Orange\n   Rennes  35000\n   France\n   Email: christian.jacquenet@orange.com\n\
    \   Suresh Vinapamula\n   Juniper Networks\n   1133 Innovation Way\n   Sunnyvale\
    \  94089\n   United States of America\n   Email: sureshk@juniper.net\n   Qin Wu\n\
    \   Huawei\n   101 Software Avenue, Yuhua District\n   Nanjing, Jiangsu  210012\n\
    \   China\n   Email: bill.wu@huawei.com\n"
