- contents:
  - '           RTP Payload for Timed Text Markup Language (TTML)

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This memo describes a Real-time Transport Protocol (RTP) payload\n
    \  format for Timed Text Markup Language (TTML), an XML-based timed text\n   format
    from W3C.  This payload format is specifically targeted at\n   streaming workflows
    using TTML.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8759.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2020 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction\n   2.  Conventions and Definitions\n
    \  3.  Media Format Description\n     3.1.  Relation to Other Text Payload Types\n
    \    3.2.  TTML2\n   4.  Payload Format\n     4.1.  RTP Header Usage\n     4.2.
    \ Payload Data\n   5.  Payload Content Restrictions\n   6.  Payload Processing
    Requirements\n     6.1.  TTML Processor Profile\n       6.1.1.  Feature Extension
    Designation\n       6.1.2.  Processor Profile Document\n       6.1.3.  Processor
    Profile Signalling\n   7.  Payload Examples\n   8.  Fragmentation of TTML Documents\n
    \  9.  Protection against Loss of Data\n   10. Congestion Control Considerations\n
    \  11. Payload Format Parameters\n     11.1.  Clock Rate\n     11.2.  Session
    Description Protocol (SDP) Considerations\n       11.2.1.  Examples\n   12. IANA
    Considerations\n   13. Security Considerations\n   14. Normative References\n
    \  15. Informative References\n   Acknowledgements\n   Author's Address\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   TTML (Timed Text Markup Language) [TTML2] is a media type
    for\n   describing timed text, such as closed captions and subtitles in\n   television
    workflows or broadcasts, as XML.  This document specifies\n   how TTML should
    be mapped into an RTP stream in streaming workflows,\n   including (but not restricted
    to) those described in the television-\n   broadcast-oriented European Broadcasting
    Union Timed Text (EBU-TT)\n   Part 3 [TECH3370] specification.  This document
    does not define a\n   media type for TTML but makes use of the existing application/\n
    \  ttml+xml media type [TTML-MTPR].\n"
  title: 1.  Introduction
- contents:
  - "2.  Conventions and Definitions\n   Unless otherwise stated, the term \"document\"
    refers to the TTML\n   document being transmitted in the payload of the RTP packet(s).\n
    \  The term \"word\" refers to a data word aligned to a specified number\n   of
    bits in a computing sense and not to linguistic words that might\n   appear in
    the transported text.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT
    RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted
    as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear
    in all\n   capitals, as shown here.\n"
  title: 2.  Conventions and Definitions
- contents:
  - '3.  Media Format Description

    '
  - contents:
    - "3.1.  Relation to Other Text Payload Types\n   Prior payload types for text
      are not suited to the carriage of closed\n   captions in television workflows.
      \ \"RTP Payload for Text\n   Conversation\" [RFC4103] is intended for low data
      rate conversation\n   with its own session management and minimal formatting
      capabilities.\n   \"Definition of Events for Modem, Fax, and Text Telephony
      Signals\"\n   [RFC4734] deals in large parts with the control signalling of\n
      \  facsimile and other systems.  \"RTP Payload Format for 3rd Generation\n   Partnership
      Project (3GPP) Timed Text\" [RFC4396] describes the\n   carriage of a timed
      text format with much more restricted formatting\n   capabilities than TTML.
      \ The lack of an existing format for TTML or\n   generic XML has necessitated
      the creation of this payload format.\n"
    title: 3.1.  Relation to Other Text Payload Types
  - contents:
    - "3.2.  TTML2\n   TTML2 (Timed Text Markup Language, Version 2) [TTML2] is an
      XML-based\n   markup language for describing textual information with associated\n
      \  timing metadata.  One of its primary use cases is the description of\n   subtitles
      and closed captions.  A number of profiles exist that adapt\n   TTML2 for use
      in specific contexts [TTML-MTPR].  These include both\n   file-based and streaming
      workflows.\n"
    title: 3.2.  TTML2
  title: 3.  Media Format Description
- contents:
  - "4.  Payload Format\n   In addition to the required RTP headers, the payload contains
    a\n   section for the TTML document being transmitted (User Data Words) and\n
    \  a field for the length of that data.  Each RTP payload contains one\n   or
    part of one TTML document.\n   A representation of the payload format for TTML
    is Figure 1.\n    0                   1                   2                   3\n
    \   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   |V=2|P|X|
    CC    |M|    PT       |        Sequence Number        |\n   |                           Timestamp
    \                          |\n   |           Synchronization Source (SSRC) Identifier
    \           |\n   |           Reserved            |             Length            |\n
    \  |                       User Data Words...\n                   Figure 1: RTP
    Payload Format for TTML\n"
  - contents:
    - "4.1.  RTP Header Usage\n   RTP packet header fields SHALL be interpreted, as
      per [RFC3550], with\n   the following specifics:\n   Marker Bit (M): 1 bit\n
      \     The marker bit is set to \"1\" to indicate the last packet of a\n      document.
      \ Otherwise, set to \"0\".  Note: The first packet might\n      also be the
      last.\n   Timestamp: 32 bits\n      The RTP Timestamp encodes the epoch of the
      TTML document in User\n      Data Words.  Further detail on its usage may be
      found in\n      Section 6.  The clock frequency used is dependent on the\n      application
      and is specified in the media type rate parameter, as\n      per Section 11.1.
      \ Documents spread across multiple packets MUST\n      use the same timestamp
      but different consecutive Sequence Numbers.\n      Sequential documents MUST
      NOT use the same timestamp.  Because\n      packets do not represent any constant
      duration, the timestamp\n      cannot be used to directly infer packet loss.\n
      \  Reserved: 16 bits\n      These bits are reserved for future use and MUST
      be set to 0x0 and\n      ignored upon reception.\n   Length: 16 bits\n      The
      length of User Data Words in bytes.\n   User Data Words: The length of User
      Data Words MUST match the\n   value specified in the Length field\n      The
      User Data Words section contains the text of the whole\n      document being
      transmitted or a part of the document being\n      transmitted.  Documents using
      character encodings where characters\n      are not represented by a single
      byte MUST be serialised in big-\n      endian order, a.k.a., network byte order.
      \ Where a document will\n      not fit within the Path MTU, it may be fragmented
      across multiple\n      packets.  Further detail on fragmentation may be found
      in\n      Section 8.\n"
    title: 4.1.  RTP Header Usage
  - contents:
    - "4.2.  Payload Data\n   TTML documents define a series of changes to text over
      time.  TTML\n   documents carried in User Data Words are encoded in accordance
      with\n   one or more of the defined TTML profiles specified in the TTML\n   registry
      [TTML-MTPR].  These profiles specify the document structure\n   used, systems
      models, timing, and other considerations.  TTML\n   profiles may restrict the
      complexity of the changes, and operational\n   requirements may limit the maximum
      duration of TTML documents by a\n   deployment configuration.  Both of these
      cases are out of scope of\n   this document.\n   Documents carried over RTP
      MUST conform to the following profile, in\n   addition to any others used.\n"
    title: 4.2.  Payload Data
  title: 4.  Payload Format
- contents:
  - "5.  Payload Content Restrictions\n   This section defines constraints on the
    content of TTML documents\n   carried over RTP.\n   Multiple TTML subtitle streams
    MUST NOT be interleaved in a single\n   RTP stream.\n   The TTML document instance's
    root \"tt\" element in the\n   \"http://www.w3.org/ns/ttml\" namespace MUST include
    a \"timeBase\"\n   attribute in the \"http://www.w3.org/ns/ttml#parameter\" namespace\n
    \  containing the value \"media\".\n   This is equivalent to the TTML2 content
    profile definition document\n   in Figure 2.\n   <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n
    \  <profile xmlns=\"http://www.w3.org/ns/ttml#parameter\"\n       xmlns:ttm=\"http://www.w3.org/ns/ttml#metadata\"\n
    \      xmlns:tt=\"http://www.w3.org/ns/ttml\"\n       type=\"content\"\n       designator=\"urn:ietf:rfc:8759#content\"\n
    \      combine=\"mostRestrictive\">\n       <features xml:base=\"http://www.w3.org/ns/ttml/feature/\">\n
    \          <tt:metadata>\n               <ttm:desc>\n                   This document
    is a minimal TTML2 content profile\n                   definition document intended
    to express the\n                   minimal requirements to apply when carrying
    TTML\n                   over RTP.\n               </ttm:desc>\n           </tt:metadata>\n
    \          <feature value=\"required\">#timeBase-media</feature>\n           <feature
    value=\"prohibited\">#timeBase-smpte</feature>\n           <feature value=\"prohibited\">#timeBase-clock</feature>\n
    \      </features>\n   </profile>\n      Figure 2: TTML2 Content Profile Definition
    for Documents Carried\n"
  title: 5.  Payload Content Restrictions
- contents:
  - "6.  Payload Processing Requirements\n   This section defines constraints on the
    processing of the TTML\n   documents carried over RTP.\n   If a TTML document
    is assessed to be invalid, then it MUST be\n   discarded.  This includes empty
    documents, i.e., those of zero\n   length.  When processing a valid document,
    the following requirements\n   apply.\n   Each TTML document becomes active at
    its epoch E.  E MUST be set to\n   the RTP Timestamp in the header of the RTP
    packet carrying the TTML\n   document.  Computed TTML media times are offset relative
    to E, in\n   accordance with Section I.2 of [TTML2].\n   When processing a sequence
    of TTML documents, where each is delivered\n   in the same RTP stream, exactly
    zero or one document SHALL be\n   considered active at each moment in the RTP
    time line.  In the event\n   that a document D_(n-1) with E_(n-1) is active, and
    document D_(n) is\n   delivered with E_(n) where E_(n-1) < E_(n), processing of
    D_(n-1)\n   MUST be stopped at E_(n) and processing of D_(n) MUST begin.\n   When
    all defined content within a document has ended, then processing\n   of the document
    MAY be stopped.  This can be tested by constructing\n   the intermediate synchronic
    document sequence from the document, as\n   defined by [TTML2].  If the last intermediate
    synchronic document in\n   the sequence is both active and contains no region
    elements, then all\n   defined content within the document has ended.\n   As described
    above, the RTP Timestamp does not specify the exact\n   timing of the media in
    this payload format.  Additionally, documents\n   may be fragmented across multiple
    packets.  This renders the RTCP\n   jitter calculation unusable.\n"
  - contents:
    - '6.1.  TTML Processor Profile

      '
    - contents:
      - "6.1.1.  Feature Extension Designation\n   This specification defines the
        following TTML feature extension\n   designation:\n      \"urn:ietf:rfc:8759#rtp-relative-media-time\"\n
        \  The namespace \"urn:ietf:rfc:8759\" is as defined by [RFC2648].\n   A TTML
        content processor supports the \"#rtp-relative-media-time\"\n   feature extension
        if it processes media times in accordance with the\n   payload processing
        requirements specified in this document, i.e.,\n   that the epoch E is set
        to the time equivalent to the RTP Timestamp,\n   as detailed above in Section
        6.\n"
      title: 6.1.1.  Feature Extension Designation
    - contents:
      - "6.1.2.  Processor Profile Document\n   The required syntax and semantics
        declared in the minimal TTML2\n   processor profile in Figure 3 MUST be supported
        by the receiver, as\n   signified by those \"feature\" or \"extension\" elements
        whose \"value\"\n   attribute is set to \"required\".\n   <?xml version=\"1.0\"
        encoding=\"UTF-8\"?>\n   <profile xmlns=\"http://www.w3.org/ns/ttml#parameter\"\n
        \      xmlns:ttm=\"http://www.w3.org/ns/ttml#metadata\"\n       xmlns:tt=\"http://www.w3.org/ns/ttml\"\n
        \      type=\"processor\"\n       designator=\"urn:ietf:rfc:8759#processor\"\n
        \      combine=\"mostRestrictive\">\n       <features xml:base=\"http://www.w3.org/ns/ttml/feature/\">\n
        \          <tt:metadata>\n               <ttm:desc>\n                   This
        document is a minimal TTML2 processor profile\n                   definition
        document intended to express the\n                   minimal requirements
        of a TTML processor able to\n                   process TTML delivered over
        RTP according to\n                   RFC 8759.\n               </ttm:desc>\n
        \          </tt:metadata>\n           <feature value=\"required\">#timeBase-media</feature>\n
        \          <feature value=\"optional\">\n               #profile-full-version-2\n
        \          </feature>\n       </features>\n       <extensions xml:base=\"urn:ietf:rfc:8759\">\n
        \          <extension restricts=\"#timeBase-media\" value=\"required\">\n
        \              #rtp-relative-media-time\n           </extension>\n       </extensions>\n
        \  </profile>\n        Figure 3: TTML2 Processor Profile Definition for Processing\n
        \                        Documents Carried over RTP\n   Note that this requirement
        does not imply that the receiver needs to\n   support either TTML1 or TTML2
        profile processing, i.e., the TTML2\n   \"#profile-full-version-2\" feature
        or any of its dependent features.\n"
      title: 6.1.2.  Processor Profile Document
    - contents:
      - "6.1.3.  Processor Profile Signalling\n   The \"codecs\" media type parameter
        MUST specify at least one processor\n   profile.  Short codes for TTML profiles
        are registered at\n   [TTML-MTPR].  The processor profiles specified in \"codecs\"
        MUST be\n   compatible with the processor profile specified in this document.\n
        \  Where multiple options exist in \"codecs\" for possible processor\n   profile
        combinations (i.e., separated by \"|\" operator), every\n   permitted option
        MUST be compatible with the processor profile\n   specified in this document.
        \ Where processor profiles (other than the\n   one specified in this document)
        are advertised in the \"codecs\"\n   parameter, the requirements of the processor
        profile specified in\n   this document MAY be signalled, additionally using
        the \"+\" operator\n   with its registered short code.\n   A processor profile
        (X) is compatible with the processor profile\n   specified here (P) if X includes
        all the features and extensions in P\n   (identified by their character content)
        and the \"value\" attribute of\n   each is, at least, as restrictive as the
        \"value\" attribute of the\n   feature or extension in P that has the same
        character content.  The\n   term \"restrictive\" here is as defined in Section
        6 of [TTML2].\n"
      title: 6.1.3.  Processor Profile Signalling
    title: 6.1.  TTML Processor Profile
  title: 6.  Payload Processing Requirements
- contents:
  - "7.  Payload Examples\n   Figure 4 is an example of a valid TTML document that
    may be carried\n   using the payload format described in this document.\n   <?xml
    version=\"1.0\" encoding=\"UTF-8\"?>\n   <tt xml:lang=\"en\"\n    xmlns=\"http://www.w3.org/ns/ttml\"\n
    \   xmlns:ttm=\"http://www.w3.org/ns/ttml#metadata\"\n    xmlns:ttp=\"http://www.w3.org/ns/ttml#parameter\"\n
    \   xmlns:tts=\"http://www.w3.org/ns/ttml#styling\"\n    ttp:timeBase=\"media\"\n
    \   >\n     <head>\n       <metadata>\n         <ttm:title>Timed Text TTML Example</ttm:title>\n
    \        <ttm:copyright>The Authors (c) 2006</ttm:copyright>\n       </metadata>\n
    \      <styling>\n         <!--\n           s1 specifies default color, font,
    and text alignment\n         -->\n         <style xml:id=\"s1\"\n           tts:color=\"white\"\n
    \          tts:fontFamily=\"proportionalSansSerif\"\n           tts:fontSize=\"100%\"\n
    \          tts:textAlign=\"center\"\n         />\n       </styling>\n       <layout>\n
    \        <region xml:id=\"subtitleArea\"\n           style=\"s1\"\n           tts:extent=\"78%
    11%\"\n           tts:padding=\"1% 5%\"\n           tts:backgroundColor=\"black\"\n
    \          tts:displayAlign=\"after\"\n         />\n       </layout>\n     </head>\n
    \    <body region=\"subtitleArea\">\n       <div>\n         <p xml:id=\"subtitle1\"
    dur=\"5.0s\" style=\"s1\">\n           How truly delightful!\n         </p>\n
    \      </div>\n     </body>\n   </tt>\n                      Figure 4: Example
    TTML Document\n"
  title: 7.  Payload Examples
- contents:
  - "8.  Fragmentation of TTML Documents\n   Many of the use cases for TTML are low
    bit-rate with RTP packets\n   expected to fit within the Path MTU.  However, some
    documents may\n   exceed the Path MTU.  In these cases, they may be split between\n
    \  multiple packets.  Where fragmentation is used, the following\n   guidelines
    MUST be followed:\n   *  It is RECOMMENDED that documents be fragmented as seldom
    as\n      possible, i.e., the least possible number of fragments is created\n
    \     out of a document.\n   *  Text strings MUST split at character boundaries.
    \ This enables\n      decoding of partial documents.  As a consequence, document\n
    \     fragmentation requires knowledge of the UTF-8/UTF-16 encoding\n      formats
    to determine character boundaries.\n   *  Document fragments SHOULD be protected
    against packet losses.\n      More information can be found in Section 9.\n   When
    a document spans more than one RTP packet, the entire document\n   is obtained
    by concatenating User Data Words from each consecutive\n   contributing packet
    in ascending order of Sequence Number.\n   As described in Section 6, only zero
    or one TTML document may be\n   active at any point in time.  As such, there MUST
    only be one\n   document transmitted for a given RTP Timestamp.  Furthermore,
    as\n   stated in Section 4.1, the marker bit MUST be set for a packet\n   containing
    the last fragment of a document.  A packet following one\n   where the marker
    bit is set contains the first fragment of a new\n   document.  The first fragment
    might also be the last.\n"
  title: 8.  Fragmentation of TTML Documents
- contents:
  - "9.  Protection against Loss of Data\n   Consideration must be devoted to keeping
    loss of documents due to\n   packet loss within acceptable limits.  What is deemed
    acceptable\n   limits is dependent on the TTML profile(s) used and use case, among\n
    \  other things.  As such, specific limits are outside the scope of this\n   document.\n
    \  Documents MAY be sent without additional protection if end-to-end\n   network
    conditions guarantee that document loss will be within\n   acceptable limits under
    all anticipated load conditions.  Where such\n   guarantees cannot be provided,
    implementations MUST use a mechanism\n   to protect against packet loss.  Potential
    mechanisms include Forward\n   Error Correction (FEC) [RFC5109], retransmission
    [RFC4588],\n   duplication [ST2022-7], or an equivalent technique.\n"
  title: 9.  Protection against Loss of Data
- contents:
  - "10.  Congestion Control Considerations\n   Congestion control for RTP SHALL be
    used in accordance with [RFC3550]\n   and with any applicable RTP profile, e.g.,
    [RFC3551].  \"Multimedia\n   Congestion Control: Circuit Breakers for Unicast
    RTP Sessions\"\n   [RFC8083] is an update to \"RTP: A Transport Protocol for Real-time\n
    \  Applications\" [RFC3550], which defines criteria for when one is\n   required
    to stop sending RTP packet streams.  Applications\n   implementing this standard
    MUST comply with [RFC8083], with\n   particular attention paid to Section 4.4
    on Media Usability.\n   [RFC8085] provides additional information on the best
    practices for\n   applying congestion control to UDP streams.\n"
  title: 10.  Congestion Control Considerations
- contents:
  - "11.  Payload Format Parameters\n   This RTP payload format is identified using
    the existing application/\n   ttml+xml media type as registered with IANA [IANA]
    and defined in\n   [TTML-MTPR].\n"
  - contents:
    - "11.1.  Clock Rate\n   The default clock rate for TTML over RTP is 1000 Hz.
      \ The clock rate\n   SHOULD be included in any advertisements of the RTP stream
      where\n   possible.  This parameter has not been added to the media type\n   definition
      as it is not applicable to TTML usage other than within\n   RTP streams.  In
      other contexts, timing is defined within the TTML\n   document.\n   When choosing
      a clock rate, implementers should consider what other\n   media their TTML streams
      may be used in conjunction with (e.g., video\n   or audio).  In these situations,
      it is RECOMMENDED that streams use\n   the same clock source and clock rate
      as the related media.  As TTML\n   streams may be aperiodic, implementers should
      also consider the\n   frequency range over which they expect packets to be sent
      and the\n   temporal resolution required.\n"
    title: 11.1.  Clock Rate
  - contents:
    - "11.2.  Session Description Protocol (SDP) Considerations\n   The mapping of
      the application/ttml+xml media type and its parameters\n   [TTML-MTPR] SHALL
      be done according to Section 3 of [RFC4855].\n   *  The type name \"application\"
      goes in SDP \"m=\" as the media name.\n   *  The media subtype \"ttml+xml\"
      goes in SDP \"a=rtpmap\" as the\n      encoding name.\n   *  The clock rate
      also goes in \"a=rtpmap\" as the clock rate.\n   Additional format-specific
      parameters, as described in the media type\n   specification, SHALL be included
      in the SDP file in \"a=fmtp\" as a\n   semicolon-separated list of \"parameter=value\"
      pairs, as described in\n   [RFC4855].  The \"codecs\" parameter MUST be included
      in the \"a=fmtp\"\n   line of the SDP file.  Specific requirements for the \"codecs\"\n
      \  parameter are included in Section 6.1.3.\n"
    - contents:
      - "11.2.1.  Examples\n   A sample SDP mapping is presented in Figure 5.\n   m=application
        30000 RTP/AVP 112\n   a=rtpmap:112 ttml+xml/90000\n   a=fmtp:112 charset=utf-8;codecs=im2t\n
        \                      Figure 5: Example SDP Mapping\n   In this example,
        a dynamic payload type 112 is used.  The 90 kHz RTP\n   timestamp rate is
        specified in the \"a=rtpmap\" line after the subtype.\n   The codecs parameter
        defined in the \"a=fmtp\" line indicates that the\n   TTML data conforms to
        Internet Media and Captions (IMSC) 1.1 Text\n   profile [TTML-IMSC1.1].\n"
      title: 11.2.1.  Examples
    title: 11.2.  Session Description Protocol (SDP) Considerations
  title: 11.  Payload Format Parameters
- contents:
  - "12.  IANA Considerations\n   This document has no IANA actions.\n"
  title: 12.  IANA Considerations
- contents:
  - "13.  Security Considerations\n   RTP packets using the payload format defined
    in this specification\n   are subject to the security considerations discussed
    in the RTP\n   specification [RFC3550] and in any applicable RTP profile, such
    as\n   RTP/AVP [RFC3551], RTP/AVPF [RFC4585], RTP/SAVP [RFC3711], or RTP/\n   SAVPF
    [RFC5124].  However, as \"Securing the RTP Protocol Framework:\n   Why RTP Does
    Not Mandate a Single Media Security Solution\" [RFC7202]\n   discusses, it is
    not an RTP payload format's responsibility to\n   discuss or mandate what solutions
    are used to meet the basic security\n   goals (like confidentiality, integrity,
    and source authenticity) for\n   RTP in general.  This responsibility lays on
    anyone using RTP in an\n   application.  They can find guidance on available security
    mechanisms\n   and important considerations in \"Options for Securing RTP Sessions\"\n
    \  [RFC7201].  Applications SHOULD use one or more appropriate strong\n   security
    mechanisms.  The rest of this Security Considerations\n   section discusses the
    security impacting properties of the payload\n   format itself.\n   To avoid potential
    buffer overflow attacks, receivers should take\n   care to validate that the User
    Data Words in the RTP payload are of\n   the appropriate length (using the Length
    field).\n   This payload format places no specific restrictions on the size of\n
    \  TTML documents that may be transmitted.  As such, malicious\n   implementations
    could be used to perform denial-of-service (DoS)\n   attacks.  [RFC4732] provides
    more information on DoS attacks and\n   describes some mitigation strategies.
    \ Implementers should take into\n   consideration that the size and frequency
    of documents transmitted\n   using this format may vary over time.  As such, sender\n
    \  implementations should avoid producing streams that exhibit DoS-like\n   behaviour,
    and receivers should avoid false identification of a\n   legitimate stream as
    malicious.\n   As with other XML types and as noted in Section 10 of \"XML Media\n
    \  Types\" [RFC7303], repeated expansion of maliciously constructed XML\n   entities
    can be used to consume large amounts of memory, which may\n   cause XML processors
    in constrained environments to fail.\n   In addition, because of the extensibility
    features for TTML and of\n   XML in general, it is possible that \"application/ttml+xml\"
    may\n   describe content that has security implications beyond those\n   described
    here.  However, TTML does not provide for any sort of\n   active or executable
    content, and if the processor follows only the\n   normative semantics of the
    published specification, this content will\n   be outside TTML namespaces and
    may be ignored.  Only in the case\n   where the processor recognizes and processes
    the additional content\n   or where further processing of that content is dispatched
    to other\n   processors would security issues potentially arise.  And in that\n
    \  case, they would fall outside the domain of this RTP payload format\n   and
    the application/ttml+xml registration document.\n   Although not prohibited, there
    are no expectations that XML\n   signatures or encryption would normally be employed.\n
    \  Further information related to privacy and security at a document\n   level
    can be found in Appendix P of [TTML2].\n"
  title: 13.  Security Considerations
- contents:
  - "14.  Normative References\n   [IANA]     IANA, \"Media Types\",\n              <https://www.iana.org/assignments/media-types>.\n
    \  [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement
    Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n
    \             <https://www.rfc-editor.org/info/rfc2119>.\n   [RFC3550]  Schulzrinne,
    H., Casner, S., Frederick, R., and V.\n              Jacobson, \"RTP: A Transport
    Protocol for Real-Time\n              Applications\", STD 64, RFC 3550, DOI 10.17487/RFC3550,\n
    \             July 2003, <https://www.rfc-editor.org/info/rfc3550>.\n   [RFC4103]
    \ Hellstrom, G. and P. Jones, \"RTP Payload for Text\n              Conversation\",
    RFC 4103, DOI 10.17487/RFC4103, June 2005,\n              <https://www.rfc-editor.org/info/rfc4103>.\n
    \  [RFC4855]  Casner, S., \"Media Type Registration of RTP Payload\n              Formats\",
    RFC 4855, DOI 10.17487/RFC4855, February 2007,\n              <https://www.rfc-editor.org/info/rfc4855>.\n
    \  [RFC7303]  Thompson, H. and C. Lilley, \"XML Media Types\", RFC 7303,\n              DOI
    10.17487/RFC7303, July 2014,\n              <https://www.rfc-editor.org/info/rfc7303>.\n
    \  [RFC8083]  Perkins, C. and V. Singh, \"Multimedia Congestion Control:\n              Circuit
    Breakers for Unicast RTP Sessions\", RFC 8083,\n              DOI 10.17487/RFC8083,
    March 2017,\n              <https://www.rfc-editor.org/info/rfc8083>.\n   [RFC8085]
    \ Eggert, L., Fairhurst, G., and G. Shepherd, \"UDP Usage\n              Guidelines\",
    BCP 145, RFC 8085, DOI 10.17487/RFC8085,\n              March 2017, <https://www.rfc-editor.org/info/rfc8085>.\n
    \  [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119
    Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,
    <https://www.rfc-editor.org/info/rfc8174>.\n   [TECH3370] European Broadcasting
    Union, \"EBU-TT, Part 3, Live\n              Subtitling Applications: System Model
    and Content Profile\n              for Authoring and Contribution\", EBU-TT Part
    3, Tech 3370,\n              May 2017, <https://tech.ebu.ch/publications/tech3370>.\n
    \  [TTML-MTPR]\n              Adams, G., Ed. and M. Dolan, Ed., \"TTML Media Type\n
    \             Definition and Profile Registry\", W3C Working Group Note,\n              April
    2019,\n              <https://www.w3.org/TR/ttml-profile-registry/>.\n   [TTML2]
    \   Adams, G., Ed. and C. Concolato, Ed., \"Timed Text Markup\n              Language
    2 (TTML2)\", W3C Recommendation REC-\n              ttml2-20181108, November 2018,\n
    \             <https://www.w3.org/TR/ttml2/>.\n"
  title: 14.  Normative References
- contents:
  - "15.  Informative References\n   [RFC2648]  Moats, R., \"A URN Namespace for IETF
    Documents\", RFC 2648,\n              DOI 10.17487/RFC2648, August 1999,\n              <https://www.rfc-editor.org/info/rfc2648>.\n
    \  [RFC3551]  Schulzrinne, H. and S. Casner, \"RTP Profile for Audio and\n              Video
    Conferences with Minimal Control\", STD 65, RFC 3551,\n              DOI 10.17487/RFC3551,
    July 2003,\n              <https://www.rfc-editor.org/info/rfc3551>.\n   [RFC3711]
    \ Baugher, M., McGrew, D., Naslund, M., Carrara, E., and K.\n              Norrman,
    \"The Secure Real-time Transport Protocol (SRTP)\",\n              RFC 3711, DOI
    10.17487/RFC3711, March 2004,\n              <https://www.rfc-editor.org/info/rfc3711>.\n
    \  [RFC4396]  Rey, J. and Y. Matsui, \"RTP Payload Format for 3rd\n              Generation
    Partnership Project (3GPP) Timed Text\",\n              RFC 4396, DOI 10.17487/RFC4396,
    February 2006,\n              <https://www.rfc-editor.org/info/rfc4396>.\n   [RFC4585]
    \ Ott, J., Wenger, S., Sato, N., Burmeister, C., and J. Rey,\n              \"Extended
    RTP Profile for Real-time Transport Control\n              Protocol (RTCP)-Based
    Feedback (RTP/AVPF)\", RFC 4585,\n              DOI 10.17487/RFC4585, July 2006,\n
    \             <https://www.rfc-editor.org/info/rfc4585>.\n   [RFC4588]  Rey, J.,
    Leon, D., Miyazaki, A., Varsa, V., and R.\n              Hakenberg, \"RTP Retransmission
    Payload Format\", RFC 4588,\n              DOI 10.17487/RFC4588, July 2006,\n
    \             <https://www.rfc-editor.org/info/rfc4588>.\n   [RFC4732]  Handley,
    M., Ed., Rescorla, E., Ed., and IAB, \"Internet\n              Denial-of-Service
    Considerations\", RFC 4732,\n              DOI 10.17487/RFC4732, December 2006,\n
    \             <https://www.rfc-editor.org/info/rfc4732>.\n   [RFC4734]  Schulzrinne,
    H. and T. Taylor, \"Definition of Events for\n              Modem, Fax, and Text
    Telephony Signals\", RFC 4734,\n              DOI 10.17487/RFC4734, December 2006,\n
    \             <https://www.rfc-editor.org/info/rfc4734>.\n   [RFC5109]  Li, A.,
    Ed., \"RTP Payload Format for Generic Forward Error\n              Correction\",
    RFC 5109, DOI 10.17487/RFC5109, December\n              2007, <https://www.rfc-editor.org/info/rfc5109>.\n
    \  [RFC5124]  Ott, J. and E. Carrara, \"Extended Secure RTP Profile for\n              Real-time
    Transport Control Protocol (RTCP)-Based Feedback\n              (RTP/SAVPF)\",
    RFC 5124, DOI 10.17487/RFC5124, February\n              2008, <https://www.rfc-editor.org/info/rfc5124>.\n
    \  [RFC7201]  Westerlund, M. and C. Perkins, \"Options for Securing RTP\n              Sessions\",
    RFC 7201, DOI 10.17487/RFC7201, April 2014,\n              <https://www.rfc-editor.org/info/rfc7201>.\n
    \  [RFC7202]  Perkins, C. and M. Westerlund, \"Securing the RTP\n              Framework:
    Why RTP Does Not Mandate a Single Media\n              Security Solution\", RFC
    7202, DOI 10.17487/RFC7202, April\n              2014, <https://www.rfc-editor.org/info/rfc7202>.\n
    \  [ST2022-7] SMPTE, \"Seamless Protection Switching of RTP Datagrams\",\n              ST
    2022-7:2019, DOI 10.5594/SMPTE.ST2022-7.2019, May 2019,\n              <https://ieeexplore.ieee.org/document/8716822>.\n
    \  [TTML-IMSC1.1]\n              Lemieux, P., Ed., \"TTML Profiles for Internet
    Media\n              Subtitles and Captions 1.1\", W3C Recommendation REC-ttml-\n
    \             imsc1.1-20181108, November 2018,\n              <https://www.w3.org/TR/ttml-imsc1.1/>.\n"
  title: 15.  Informative References
- contents:
  - "Acknowledgements\n   Thanks to Nigel Megitt, James Gruessing, Robert Wadge, Andrew
    Bonney,\n   James Weaver, John Fletcher, Frans de Jong, and Willem Vermost for\n
    \  their valuable feedback throughout the development of this document.\n   Thanks
    to the W3C Timed Text Working Group and EBU Timed Text Working\n   Group for their
    substantial efforts in developing the timed text\n   format this payload format
    is intended to carry.\n"
  title: Acknowledgements
- contents:
  - "Author's Address\n   James Sandford\n   British Broadcasting Corporation\n   Dock
    House, MediaCityUK\n   Salford\n   United Kingdom\n"
  title: Author's Address
