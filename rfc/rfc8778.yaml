- title: __initial_text__
  contents:
  - "   Use of the HSS/LMS Hash-Based Signature Algorithm with CBOR Object\n     \
    \                Signing and Encryption (COSE)\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies the conventions for using the Hierarchical\n\
    \   Signature System (HSS) / Leighton-Micali Signature (LMS) hash-based\n   signature\
    \ algorithm with the CBOR Object Signing and Encryption\n   (COSE) syntax.  The\
    \ HSS/LMS algorithm is one form of hash-based\n   digital signature; it is described\
    \ in RFC 8554.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8778.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2020 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction\n     1.1.  Motivation\n     1.2.  Terminology\n\
    \   2.  LMS Digital Signature Algorithm Overview\n     2.1.  Hierarchical Signature\
    \ System (HSS)\n     2.2.  Leighton-Micali Signature (LMS)\n     2.3.  Leighton-Micali\
    \ One-Time Signature (LM-OTS) Algorithm\n   3.  Hash-Based Signature Algorithm\
    \ Identifiers\n   4.  Security Considerations\n   5.  Operational Considerations\n\
    \   6.  IANA Considerations\n     6.1.  COSE Algorithms Registry Entry\n     6.2.\
    \  COSE Key Types Registry Entry\n     6.3.  COSE Key Type Parameters Registry\
    \ Entry\n   7.  References\n     7.1.  Normative References\n     7.2.  Informative\
    \ References\n   Appendix A.  Examples\n     A.1.  Example COSE Full Message Signature\n\
    \     A.2.  Example COSE_Sign1 Message\n   Acknowledgements\n   Author's Address\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document specifies the conventions for using the Hierarchical\n\
    \   Signature System (HSS) / Leighton-Micali Signature (LMS) hash-based\n   signature\
    \ algorithm with the CBOR Object Signing and Encryption\n   (COSE) [RFC8152] syntax.\
    \  The LMS system provides a one-time digital\n   signature that is a variant\
    \ of Merkle Tree Signatures (MTS).  The HSS\n   is built on top of the LMS system\
    \ to efficiently scale for a larger\n   number of signatures.  The HSS/LMS algorithm\
    \ is one form of a hash-\n   based digital signature, and it is described in [HASHSIG].\
    \  The HSS/\n   LMS signature algorithm can only be used for a fixed number of\n\
    \   signing operations.  The number of signing operations depends upon\n   the\
    \ size of the tree.  The HSS/LMS signature algorithm uses small\n   public keys,\
    \ and it has low computational cost; however, the\n   signatures are quite large.\
    \  The HSS/LMS private key can be very\n   small when the signer is willing to\
    \ perform additional computation at\n   signing time; alternatively, the private\
    \ key can consume additional\n   memory and provide a faster signing time.  The\
    \ HSS/LMS signatures\n   [HASHSIG] are currently defined to use exclusively SHA-256\
    \ [SHS].\n"
- title: 1.1.  Motivation
  contents:
  - "1.1.  Motivation\n   Recent advances in cryptanalysis [BH2013] and progress in\
    \ the\n   development of quantum computers [NAS2019] pose a threat to widely\n\
    \   deployed digital signature algorithms.  As a result, there is a need\n   to\
    \ prepare for a day that cryptosystems, such as RSA and DSA, that\n   depend on\
    \ discrete logarithm and factoring cannot be depended upon.\n   If large-scale\
    \ quantum computers are ever built, these computers will\n   have more than a\
    \ trivial number of quantum bits (qubits), and they\n   will be able to break\
    \ many of the public-key cryptosystems currently\n   in use.  A post-quantum cryptosystem\
    \ [PQC] is a system that is secure\n   against such large-scale quantum computers.\
    \  When it will be feasible\n   to build such computers is open to conjecture;\
    \ however, RSA\n   [RFC8017], DSA [DSS], Elliptic Curve Digital Signature Algorithm\n\
    \   (ECDSA) [DSS], and Edwards-curve Digital Signature Algorithm (EdDSA)\n   [RFC8032]\
    \ are all vulnerable if large-scale quantum computers come to\n   pass.\n   Since\
    \ the HSS/LMS signature algorithm does not depend on the\n   difficulty of discrete\
    \ logarithm or factoring, the HSS/LMS signature\n   algorithm is considered to\
    \ be post-quantum secure.  The use of HSS/\n   LMS hash-based signatures to protect\
    \ software update distribution\n   will allow the deployment of future software\
    \ that implements new\n   cryptosystems.  By deploying HSS/LMS today, authentication\
    \ and\n   integrity protection of the future software can be provided, even if\n\
    \   advances break current digital-signature mechanisms.\n"
- title: 1.2.  Terminology
  contents:
  - "1.2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT\
    \ RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n"
- title: 2.  LMS Digital Signature Algorithm Overview
  contents:
  - "2.  LMS Digital Signature Algorithm Overview\n   This specification makes use\
    \ of the hash-based signature algorithm\n   specified in [HASHSIG], which is the\
    \ Leighton and Micali adaptation\n   [LM] of the original Lamport-Diffie-Winternitz-Merkle\
    \ one-time\n   signature system [M1979][M1987][M1989a][M1989b].\n   The hash-based\
    \ signature algorithm has three major components:\n   *  Hierarchical Signature\
    \ System (HSS) -- see Section 2.1\n   *  Leighton-Micali Signature (LMS) -- see\
    \ Section 2.2\n   *  Leighton-Micali One-time Signature (LM-OTS) Algorithm-- see\n\
    \      Section 2.3\n   As implied by the name, the hash-based signature algorithm\
    \ depends on\n   a collision-resistant hash function.  The hash-based signature\n\
    \   algorithm specified in [HASHSIG] currently makes use of the SHA-256\n   one-way\
    \ hash function [SHS], but it also establishes an IANA registry\n   to permit\
    \ the registration of additional one-way hash functions in\n   the future.\n"
- title: 2.1.  Hierarchical Signature System (HSS)
  contents:
  - "2.1.  Hierarchical Signature System (HSS)\n   The hash-based signature algorithm\
    \ specified in [HASHSIG] uses a\n   hierarchy of trees.  The N-time Hierarchical\
    \ Signature System (HSS)\n   allows subordinate trees to be generated when needed\
    \ by the signer.\n   Otherwise, generation of the entire tree might take weeks\
    \ or longer.\n   An HSS signature, as specified in [HASHSIG], carries the number\
    \ of\n   signed public keys (Nspk), followed by that number of signed public\n\
    \   keys, followed by the LMS signature, as described in Section 2.2.\n   The\
    \ public key for the topmost LMS tree is the public key of the HSS\n   system.\
    \  The LMS private key in the parent tree signs the LMS public\n   key in the\
    \ child tree, and the LMS private key in the bottom-most\n   tree signs the actual\
    \ message.  The signature over the public key and\n   the signature over the actual\
    \ message are LMS signatures, as\n   described in Section 2.2.\n   The elements\
    \ of the HSS signature value for a stand-alone tree (a top\n   tree with no children)\
    \ can be summarized as:\n      u32str(0) ||\n      lms_signature  /* signature\
    \ of message */\n   where the notation comes from [HASHSIG].\n   The elements\
    \ of the HSS signature value for a tree with Nspk signed\n   public keys can be\
    \ summarized as:\n      u32str(Nspk) ||\n      signed_public_key[0] ||\n     \
    \ signed_public_key[1] ||\n         ...\n      signed_public_key[Nspk-2] ||\n\
    \      signed_public_key[Nspk-1] ||\n      lms_signature  /* signature of message\
    \ */\n   As defined in Section 3.3 of [HASHSIG], a signed_public_key is the\n\
    \   lms_signature over the public key followed by the public key itself.\n   Note\
    \ that Nspk is the number of levels in the hierarchy of trees\n   minus 1.\n"
- title: 2.2.  Leighton-Micali Signature (LMS)
  contents:
  - "2.2.  Leighton-Micali Signature (LMS)\n   Subordinate LMS trees are placed in\
    \ the HSS structure, as discussed\n   in Section 2.1.  Each tree in the hash-based\
    \ signature algorithm\n   specified in [HASHSIG] uses the Leighton-Micali Signature\
    \ (LMS)\n   system.  LMS systems have two parameters.  The first parameter is\
    \ the\n   height of the tree, h, which is the number of levels in the tree\n \
    \  minus one.  The [HASHSIG] includes support for five values of this\n   parameter:\
    \ h=5, h=10, h=15, h=20, and h=25.  Note that there are 2^h\n   leaves in the\
    \ tree.  The second parameter is the number of bytes\n   output by the hash function,\
    \ m, which is the amount of data\n   associated with each node in the tree.  The\
    \ [HASHSIG] specification\n   supports only SHA-256 with m=32.  An IANA registry\
    \ is defined so that\n   other hash functions could be used in the future.\n \
    \  The [HASHSIG] specification supports five tree sizes:\n   *  LMS_SHA256_M32_H5\n\
    \   *  LMS_SHA256_M32_H10\n   *  LMS_SHA256_M32_H15\n   *  LMS_SHA256_M32_H20\n\
    \   *  LMS_SHA256_M32_H25\n   The [HASHSIG] specification establishes an IANA\
    \ registry to permit\n   the registration of additional hash functions and additional\
    \ tree\n   sizes in the future.\n   The [HASHSIG] specification defines the value\
    \ I as the private key\n   identifier, and the same I value is used for all computations\
    \ with\n   the same LMS tree.  The value I is also available in the public key.\n\
    \   In addition, the [HASHSIG] specification defines the value T[r] as\n   the\
    \ m-byte string associated with the ith node in the LMS tree, and\n   the nodes\
    \ are indexed from 1 to 2^(h+1)-1.  Thus, T[1] is the m-byte\n   string associated\
    \ with the root of the LMS tree.\n   The LMS public key can be summarized as:\n\
    \      u32str(lms_algorithm_type) || u32str(otstype) || I || T[1]\n   As specified\
    \ in [HASHSIG], the LMS signature consists of four\n   elements:\n   *  the number\
    \ of the leaf associated with the LM-OTS signature,\n   *  an LM-OTS signature,\
    \ as described in Section 2.3,\n   *  a type code indicating the particular LMS\
    \ algorithm, and\n   *  an array of values that is associated with the path through\
    \ the\n      tree from the leaf associated with the LM-OTS signature to the\n\
    \      root.\n   The array of values contains the siblings of the nodes on the\
    \ path\n   from the leaf to the root but does not contain the nodes on the path\n\
    \   itself.  The array for a tree with height h will have h values.  The\n   first\
    \ value is the sibling of the leaf, the next value is the sibling\n   of the parent\
    \ of the leaf, and so on up the path to the root.\n   The four elements of the\
    \ LMS signature value can be summarized as:\n      u32str(q) ||\n      ots_signature\
    \ ||\n      u32str(type) ||\n      path[0] || path[1] || ... || path[h-1]\n"
- title: 2.3.  Leighton-Micali One-Time Signature (LM-OTS) Algorithm
  contents:
  - "2.3.  Leighton-Micali One-Time Signature (LM-OTS) Algorithm\n   The hash-based\
    \ signature algorithm depends on a one-time signature\n   method.  This specification\
    \ makes use of the Leighton-Micali One-time\n   Signature (LM-OTS) Algorithm [HASHSIG].\
    \  An LM-OTS has five\n   parameters:\n   n:    The number of bytes output by\
    \ the hash function.  For SHA-256\n         [SHS], n=32.\n   H:    A preimage-resistant\
    \ hash function that accepts byte strings of\n         any length and returns\
    \ an n-byte string.\n   w:    The width in bits of the Winternitz coefficients.\
    \  [HASHSIG]\n         supports four values for this parameter: w=1, w=2, w=4,\
    \ and\n         w=8.\n   p:    The number of n-byte string elements that make\
    \ up the LM-OTS\n         signature.\n   ls:   The number of left-shift bits used\
    \ in the checksum function,\n         which is defined in Section 4.4 of [HASHSIG].\n\
    \   The values of p and ls are dependent on the choices of the parameters\n  \
    \ n and w, as described in Appendix B of [HASHSIG].\n   The [HASHSIG] specification\
    \ supports four LM-OTS variants:\n   *  LMOTS_SHA256_N32_W1\n   *  LMOTS_SHA256_N32_W2\n\
    \   *  LMOTS_SHA256_N32_W4\n   *  LMOTS_SHA256_N32_W8\n   The [HASHSIG] specification\
    \ establishes an IANA registry to permit\n   the registration of additional hash\
    \ functions and additional\n   parameter sets in the future.\n   Signing involves\
    \ the generation of C, which is an n-byte random\n   value.\n   The LM-OTS signature\
    \ value can be summarized as the identifier of the\n   LM-OTS variant, the random\
    \ value, and a sequence of hash values (y[0]\n   through y[p-1]), as described\
    \ in Section 4.5 of [HASHSIG]:\n      u32str(otstype) || C || y[0] || ... || y[p-1]\n"
- title: 3.  Hash-Based Signature Algorithm Identifiers
  contents:
  - "3.  Hash-Based Signature Algorithm Identifiers\n   The CBOR Object Signing and\
    \ Encryption (COSE) [RFC8152] supports two\n   signature algorithm schemes.  This\
    \ specification makes use of the\n   signature with appendix scheme for hash-based\
    \ signatures.\n   The signature value is a large byte string, as described in\n\
    \   Section 2.  The byte string is designed for easy parsing.  The HSS,\n   LMS,\
    \ and LM-OTS components of the signature value format include\n   counters and\
    \ type codes that indirectly provide all of the\n   information that is needed\
    \ to parse the byte string during signature\n   validation.\n   When using a COSE\
    \ key for this algorithm, the following checks are\n   made:\n   *  The 'kty'\
    \ field MUST be 'HSS-LMS'.\n   *  If the 'alg' field is present, it MUST be 'HSS-LMS'.\n\
    \   *  If the 'key_ops' field is present, it MUST include 'sign' when\n      creating\
    \ a hash-based signature.\n   *  If the 'key_ops' field is present, it MUST include\
    \ 'verify' when\n      verifying a hash-based signature.\n   *  If the 'kid' field\
    \ is present, it MAY be used to identify the top\n      of the HSS tree.  In [HASHSIG],\
    \ this identifier is called 'I', and\n      it is the 16-byte identifier of the\
    \ LMS public key for the tree.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   The security considerations from [RFC8152] and\
    \ [HASHSIG] are relevant\n   to implementations of this specification.\n   There\
    \ are a number of security considerations that need to be taken\n   into account\
    \ by implementers of this specification.\n   Implementations MUST protect the\
    \ private keys.  Compromise of the\n   private keys may result in the ability\
    \ to forge signatures.  Along\n   with the private key, the implementation MUST\
    \ keep track of which\n   leaf nodes in the tree have been used.  Loss of integrity\
    \ of this\n   tracking data can cause a one-time key to be used more than once.\
    \  As\n   a result, when a private key and the tracking data are stored on\n \
    \  nonvolatile media or in a virtual machine environment, failed writes,\n   virtual\
    \ machine snapshotting or cloning, and other operational\n   concerns must be\
    \ considered to ensure confidentiality and integrity.\n   When generating an LMS\
    \ key pair, an implementation MUST generate each\n   key pair independently of\
    \ all other key pairs in the HSS tree.\n   An implementation MUST ensure that\
    \ an LM-OTS private key is used to\n   generate a signature only one time and\
    \ ensure that it cannot be used\n   for any other purpose.\n   The generation\
    \ of private keys relies on random numbers.  The use of\n   inadequate pseudorandom\
    \ number generators (PRNGs) to generate these\n   values can result in little\
    \ or no security.  An attacker may find it\n   much easier to reproduce the PRNG\
    \ environment that produced the keys,\n   searching the resulting small set of\
    \ possibilities rather than brute-\n   force searching the whole key space.  The\
    \ generation of quality\n   random numbers is difficult, and [RFC4086] offers\
    \ important guidance\n   in this area.\n   The generation of hash-based signatures\
    \ also depends on random\n   numbers.  While the consequences of an inadequate\
    \ PRNG to generate\n   these values is much less severe than in the generation\
    \ of private\n   keys, the guidance in [RFC4086] remains important.\n"
- title: 5.  Operational Considerations
  contents:
  - "5.  Operational Considerations\n   The public key for the hash-based signature\
    \ is the key at the root of\n   Hierarchical Signature System (HSS).  In the absence\
    \ of a public key\n   infrastructure [RFC5280], this public key is a trust anchor,\
    \ and the\n   number of signatures that can be generated is bounded by the size\
    \ of\n   the overall HSS set of trees.  When all of the LM-OTS signatures have\n\
    \   been used to produce a signature, then the establishment of a new\n   trust\
    \ anchor is required.\n   To ensure that none of the tree nodes are used to generate\
    \ more than\n   one signature, the signer maintains state across different\n \
    \  invocations of the signing algorithm.  Section 9.2 of [HASHSIG]\n   offers\
    \ some practical implementation approaches around this\n   statefulness.  In some\
    \ of these approaches, nodes are sacrificed to\n   ensure that none are used more\
    \ than once.  As a result, the total\n   number of signatures that can be generated\
    \ might be less than the\n   overall HSS set of trees.\n   A COSE Key Type Parameter\
    \ for encoding the HSS/LMS private key and\n   the state about which tree nodes\
    \ have been used is deliberately not\n   defined.  It was not defined to avoid\
    \ creating the ability to save\n   the private key and state, generate one or\
    \ more signatures, and then\n   restore the private key and state.  Such a restoration\
    \ operation\n   provides disastrous opportunities for tree node reuse.\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   IANA has added entries for the HSS/LMS hash-based\
    \ signature algorithm\n   in the \"COSE Algorithms\" registry and added HSS/LMS\
    \ hash-based\n   signature public keys in the \"COSE Key Types\" registry and\
    \ the \"COSE\n   Key Type Parameters\" registry.\n"
- title: 6.1.  COSE Algorithms Registry Entry
  contents:
  - "6.1.  COSE Algorithms Registry Entry\n   The new entry in the \"COSE Algorithms\"\
    \ registry [IANA] appears as\n   follows:\n   Name:  HSS-LMS\n   Value:  -46\n\
    \   Description:  HSS/LMS hash-based digital signature\n   Reference:  RFC 8778\n\
    \   Recommended:  Yes\n"
- title: 6.2.  COSE Key Types Registry Entry
  contents:
  - "6.2.  COSE Key Types Registry Entry\n   The new entry in the \"COSE Key Types\"\
    \ registry [IANA] appears as\n   follows:\n   Name:  HSS-LMS\n   Value:  5\n \
    \  Description:  Public key for HSS/LMS hash-based digital signature\n   Reference:\
    \  RFC 8778\n"
- title: 6.3.  COSE Key Type Parameters Registry Entry
  contents:
  - "6.3.  COSE Key Type Parameters Registry Entry\n   The new entry in the \"COSE\
    \ Key Type Parameters\" registry [IANA]\n   appears as follows:\n   Key Type:\
    \  5\n   Name:  pub\n   Label:  -1\n   CBOR Type:  bstr\n   Description:  Public\
    \ key for HSS/LMS hash-based digital signature\n   Reference:  RFC 8778\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [HASHSIG]  McGrew, D., Curcio, M., and S. Fluhrer,\
    \ \"Leighton-Micali\n              Hash-Based Signatures\", RFC 8554, DOI 10.17487/RFC8554,\n\
    \              April 2019, <https://www.rfc-editor.org/info/rfc8554>.\n   [RFC2119]\
    \  Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement\
    \ Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n\
    \              <https://www.rfc-editor.org/info/rfc2119>.\n   [RFC8152]  Schaad,\
    \ J., \"CBOR Object Signing and Encryption (COSE)\",\n              RFC 8152,\
    \ DOI 10.17487/RFC8152, July 2017,\n              <https://www.rfc-editor.org/info/rfc8152>.\n\
    \   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n     \
    \         2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n        \
    \      May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n   [SHS]      National\
    \ Institute of Standards and Technology (NIST),\n              \"Secure Hash Standard\"\
    , FIPS Publication 180-4,\n              DOI 10.6028/NIST.FIPS.180-4, August 2015,\n\
    \              <https://doi.org/10.6028/NIST.FIPS.180-4>.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [BH2013]   Ptacek, T., Ritter, T., Samuel, J.,\
    \ and A. Stamos, \"The\n              Factoring Dead: Preparing for the Cryptopocalypse\"\
    , August\n              2013, <https://media.blackhat.com/us-13/us-13-Stamos-The-\n\
    \              Factoring-Dead.pdf>.\n   [DSS]      National Institute of Standards\
    \ and Technology (NIST),\n              \"Digital Signature Standard (DSS)\",\
    \ FIPS\n              Publication 186-4, DOI 10.6028/NIST.FIPS.186-4, July 2013,\n\
    \              <https://doi.org/10.6028/NIST.FIPS.186-4>.\n   [IANA]     IANA,\
    \ \"CBOR Object Signing and Encryption (COSE)\",\n              <https://www.iana.org/assignments/cose>.\n\
    \   [LM]       Leighton, F. and S. Micali, \"Large provably fast and\n       \
    \       secure digital signature schemes from secure hash\n              functions\"\
    , U.S. Patent 5,432,852, July 1995.\n   [M1979]    Merkle, R., \"Secrecy, Authentication,\
    \ and Public Key\n              Systems\", Information Systems Laboratory, Stanford\n\
    \              University, Technical Report No. 1979-1, June 1979.\n   [M1987]\
    \    Merkle, R., \"A Digital Signature Based on a Conventional\n             \
    \ Encryption Function\", Advances in Cryptology -- CRYPTO '87\n              Proceedings,\
    \ Lecture Notes in Computer Science, Volume\n              291, DOI 10.1007/3-540-48184-2_32,\
    \ 1988,\n              <https://doi.org/10.1007/3-540-48184-2_32>.\n   [M1989a]\
    \   Merkle, R., \"A Certified Digital Signature\", Advances in\n             \
    \ Cryptology -- CRYPTO '89 Proceedings, Lecture Notes in\n              Computer\
    \ Science, Volume 435,\n              DOI 10.1007/0-387-34805-0_21, 1990,\n  \
    \            <https://doi.org/10.1007/0-387-34805-0_21>.\n   [M1989b]   Merkle,\
    \ R., \"One Way Hash Functions and DES\", Advances in\n              Cryptology\
    \ -- CRYPTO '89 Proceedings, Lecture Notes in\n              Computer Science,\
    \ Volume 435,\n              DOI 10.1007/0-387-34805-0_40, 1990,\n           \
    \   <https://doi.org/10.1007/0-387-34805-0_40>.\n   [NAS2019]  National Academies\
    \ of Sciences, Engineering, and Medicine,\n              \"Quantum Computing:\
    \ Progress and Prospects\", The National\n              Academies Press, DOI 10.17226/25196,\
    \ 2019,\n              <http://dx.doi.org/10.17226/25196>.\n   [PQC]      Bernstein,\
    \ D., \"Introduction to post-quantum\n              cryptography\", DOI 10.1007/978-3-540-88702-7_1,\
    \ 2009,\n              <http://www.pqcrypto.org/www.springer.com/cda/content/\n\
    \              document/cda_downloaddocument/9783540887010-c1.pdf>.\n   [RFC4086]\
    \  Eastlake 3rd, D., Schiller, J., and S. Crocker,\n              \"Randomness\
    \ Requirements for Security\", BCP 106, RFC 4086,\n              DOI 10.17487/RFC4086,\
    \ June 2005,\n              <https://www.rfc-editor.org/info/rfc4086>.\n   [RFC5280]\
    \  Cooper, D., Santesson, S., Farrell, S., Boeyen, S.,\n              Housley,\
    \ R., and W. Polk, \"Internet X.509 Public Key\n              Infrastructure Certificate\
    \ and Certificate Revocation List\n              (CRL) Profile\", RFC 5280, DOI\
    \ 10.17487/RFC5280, May 2008,\n              <https://www.rfc-editor.org/info/rfc5280>.\n\
    \   [RFC8017]  Moriarty, K., Ed., Kaliski, B., Jonsson, J., and A. Rusch,\n  \
    \            \"PKCS #1: RSA Cryptography Specifications Version 2.2\",\n     \
    \         RFC 8017, DOI 10.17487/RFC8017, November 2016,\n              <https://www.rfc-editor.org/info/rfc8017>.\n\
    \   [RFC8032]  Josefsson, S. and I. Liusvaara, \"Edwards-Curve Digital\n     \
    \         Signature Algorithm (EdDSA)\", RFC 8032,\n              DOI 10.17487/RFC8032,\
    \ January 2017,\n              <https://www.rfc-editor.org/info/rfc8032>.\n  \
    \ [RFC8610]  Birkholz, H., Vigano, C., and C. Bormann, \"Concise Data\n      \
    \        Definition Language (CDDL): A Notational Convention to\n            \
    \  Express Concise Binary Object Representation (CBOR) and\n              JSON\
    \ Data Structures\", RFC 8610, DOI 10.17487/RFC8610,\n              June 2019,\
    \ <https://www.rfc-editor.org/info/rfc8610>.\n"
- title: Appendix A.  Examples
  contents:
  - "Appendix A.  Examples\n   This appendix provides a non-normative example of a\
    \ COSE full message\n   signature and an example of a COSE_Sign1 message.  This\
    \ section is\n   formatted according to the extended CBOR diagnostic format defined\
    \ by\n   [RFC8610].\n   The programs that were used to generate the examples can\
    \ be found at\n   <https://github.com/cose-wg/Examples>.\n"
- title: A.1.  Example COSE Full Message Signature
  contents:
  - "A.1.  Example COSE Full Message Signature\n   This section provides an example\
    \ of a COSE full message signature.\n   The size of binary file is 2560 bytes.\n\
    \   98(\n     [\n       / protected / h'a10300' / {\n           \\ content type\
    \ \\ 3:0\n         } / ,\n       / unprotected / {},\n       / payload / 'This\
    \ is the content.',\n       / signatures / [\n         [\n           / protected\
    \ / h'a101382d' / {\n               \\ alg \\ 1:-46 \\ HSS-LMS \\\n          \
    \   } / ,\n           / unprotected / {\n             / kid / 4:'ItsBig'\n   \
    \        },\n           / signature / h'00000000000000010000000391291de76ce6e24d1e2a\n\
    \   9b60266519bc8ce889f814deb0fc00edd3129de3ab9b6bfa3bf47d007d844af7db74\n   9ea97215e82f456cbdd473812c6a042ae39539898752c89b60a276ec8a9feab900e2\n\
    \   5bdfe0ab8e773aa1c36ae214d67c65bb68630450a5db2c7c6403b77f6a9bf4d30a02\n   19db5cced884d7514f3cbd19220020bf3045b0e5c6955b32864f16f97da02f0cbfea\n\
    \   70458b07032e30b0342d75b8f3dc6871442e6384b10f559f5dc594a214924c48ccc3\n   37078665653fc740340428138b0fb5154f2f2cb291ad05ace7acae60031b2d09b2f4\n\
    \   17712d1c01e34b165af2e070f5a521a85a5fb3dd2a6288947bcbd5e2265d3670bd61\n   92eb2bf643964e2783d84aec343f8e3571e4fcf09cbeea94e80470aa7252d1c733a5\n\
    \   535907e66c7b9f0b88b159dc2a7370ee47f13e7e134d3d05e5f53fac640b784a9b0f\n   183fe14217325626f487cc8d8cb9eaf0abb174ee0b7076cf39c45037cefdf3f1e61b\n\
    \   5174581214c09870b72c39737ec4c46a96199b66cad2990bcbe5bb1abfde99107c7f\n   7289395bf2a433598ede0b1969f23db949afb5b4d33831dae6c641a6355f8f9bf16c\n\
    \   dffc4bf86891b93a557c2152ac8a1de51c995344cc10cc4bc9ecfbb4e418bed0f334\n   af165339e6725dc4fc1e995521e1be8a566d59b57cd130903b42d07087d63646ef8f\n\
    \   c1e9e9071bb67a123fdec3f37638cdaf0f4bf3084074069171c17885b9431ad908d3\n   6a6f8a826256d2aa34f8aa0731a357c060db8e80fefd61b1c323890e640633b98d17\n\
    \   5d4d6ebff800a71cfc864ec02837de9d0e079f0f400acafd56805cb273e631ba395d\n   23e86acf6eae63181a5afe1f0a361cbbd5fefeb7db0c95591ec3128e80dfbea9ca0f\n\
    \   89fc035d761c05d41e7a010892c42e8e2af62aa604f4e214c0bb08075481f9cc307a\n   555adf333b9424f209b89f161032e413b047ae5ab0aa15643bb4c643446d2c9829eb\n\
    \   256e7375ce9639047a24a44f4da446b7359556f3ab3484c56511c68a140dc0531f65\n   3105800d9f20990d4ebdc5ceea918d7ae95c0d7ec69a00d6a936b25fc19b9dfc5561\n\
    \   400f046191136c367038d6a9d0e0ae30dcdc4733712cbd5a2aee35315eff5c1a7e08\n   5b68c5cf0c64c495df2ca6f030db04480a2e11d4a0a0dbf29d9463d5b9e41e346e49\n\
    \   c894d5e43993c834c4746309c886d6131f2f92155ca1160bac9660802a947b5aba94\n   b35357d13fdf02d2aeabef568912f68ae5d3a60214f6d00c4dd9f0af09eb0bf961cd\n\
    \   9f27251d46899c28d87080ba2ead3e8193f51a789706ec32aacee9f4b14eeca91a25\n   2fe894b30dc3938abbbe7d217948cae79ce3adb4d7d7df6756f3099f2543ed3b522b\n\
    \   acab257503c9e07fcd32cc32fa9aa17977ec05bc5fe0f5954d51f160f52d33f93166\n   af68aa90261b3f5ad273adacf2d0cb5b0c5402bfa62da67a52dcddfa463e72d2c005\n\
    \   f1ac0ea3cb62364ee3419333612e07bf685006137a592e2fcd58398265c4ff9e11e7\n   0c2b79152e4604b4f94676e955bcff4dfc429a8a88728b95bfc2826e25ba6eab9cfb\n\
    \   066c9911693efff242f7b51c3cb88546143b8ab2142dd3c9bda55d16fe3084a86b74\n   3f294dd9d0aa84f3ce3b083a5879a4762a756e9b41f4bdf8b71418073b0a0d4a9c13\n\
    \   1882455ece23e50324c5feea217920b0f3109dcbdc81762e41b7ca271efac8e39cc2\n   6ebe085abdbf6b314a38929799fb7feebee2e20b97056ed17ef3881e6e89330314dd\n\
    \   7e9c629c46dfdb925c7c5f5d243f159d964691745cd46579fd0696479e1c49cbd2af\n   879a2bce8576619cca7b6e516e6c94c1087441a81f11b9a83535b24ddc725a81a9d1\n\
    \   ff62da2804c8d84c6e382065574282ea1f23eaf648cfa9767afb098fd81654d76133\n   f5f39bcc762c9bc31f7f4665cc0efa929b5c05dedd76143c63dc7018ab130c108ea9\n\
    \   01be32b9d911b66da13a1528c32a9694c899a772f8e1fe00c17eceb343e737d72cba\n   06cf5ddac9a4d3df7ef391cf6595a6d8c14b0d80f93023b1b3d4371239da98b67a1b\n\
    \   6a379422616282a16e8d1f97a130baf21e572bcca91abb760eac6957f9b1b05e49e2\n   d181874ac6dd160d1c717b73bd28ef55f08d47466d5aef754814c7e206fa9e2ec533\n\
    \   85d14d52f7769d95ea50524ffb20dc7275b04d71d1967e3bbc6ed481f1fc5a15e78a\n   1fd967d96045625645dbd173cccdd97661e995ce47d6b3ead96ee6d006a5ce6f4c97\n\
    \   77fe2e3f91bebe877cac8c6486dfce0315dc71bbb93879759b8981c5ff2e11deb809\n   abf4280ee93d1711e73645b410acb518538ce3d4bda1e355c988f068165668e99d6a\n\
    \   8de356b4b13298036ad05d526c4a5e2591612a477b7e86550adde128cd71ee651d44\n   99699000a02979e42bbccf32c83b1eb0ff99aa4d352e20e0b3382422df2c2ed4ce90\n\
    \   c94cf1a359e92ef971dc6db06047a333c2ebe827eb6d5f2811fdbe0bf0f12bf2094e\n   0dcd8e418f3f691a60ceb0cefb6f45f47883d6b9f320950e91266740c6dbfad6b3cf\n\
    \   e56de0aa6658b0dc893bb6e49e6294537a7878e86cfc8e6c150675db1a89d188ea6e\n   fe7d88ff57b39b8610e392811ee097ca61c4841e0fbd346ed3ff6a5e412acb0d9f13\n\
    \   022df2e7fdaa8e0face7366c8ffe6f446995b564fc3d59c70fecdb60a25e28650417\n   157f43f3e72c3afc601509641cfd099a78130e1f7ba8333502ad4f036f46411a43d0\n\
    \   35e2ca0ed0c346d9aac5df05196c95c38e6e52763ed896b6d02464a910dda6cca340\n   24e3b9c3723d26e2886ad724dd56ea285e8e4b60beec924d55dd700c38877b74552f\n\
    \   ea1f8741579b02061416131db390f628522885236b51f7aef23167d3a5fe5eadcd88\n   b0e99b2b6bc56b0dea4fb22146294766c28e5e7c834dbdcb6bfdd7bd8455252522ff\n\
    \   2e974f6fd3fda176749b7cdced5b9aba092b2982c89cb7d2b36348928c8f01170618\n   ecff14d9e0eed9d88d97e38bcf7a837f674be5243fc624c8afd3d105f462bfa939b8\n\
    \   143a3a98f78fbb8c915e00bdbbf707b12c45784f4d1cb1426b583a0d5fbec1f5ea6d\n   0067c090168cb788e532aca770c7be366ec07e7808f1892b00000006ed1ce8c6e437\n\
    \   918d43fba7bd9385694c41182703f6b7f704deedd9384ba6f8bc362c948646b3c984\n   8803e6d9ba1f7d3967f709cddd35dc77d60356f0c36808900b491cb4ecbbabec128e\n\
    \   7c81a46e62a67b57640a0a78be1cbf7dd9d419a10cd8686d16621a80816bfdb5bdc5\n   6211d72ca70b81f1117d129529a7570cf79cf52a7028a48538ecdd3b38d3d5d62d26\n\
    \   246595c4fb73a525a5ed2c30524ebb1d8cc82e0c19bc4977c6898ff95fd3d310b0ba\n   e71696cef93c6a552456bf96e9d075e383bb7543c675842bafbfc7cdb88483b3276c\n\
    \   29d4f0a341c2d406e40d4653b7e4d045851acf6a0a0ea9c710b805cced4635ee8c10\n   7362f0fc8d80c14d0ac49c516703d26d14752f34c1c0d2c4247581c18c2cf4de48e9\n\
    \   ce949be7c888e9caebe4a415e291fd107d21dc1f084b1158208249f28f4f7c7e931b\n   a7b3bd0d824a4570'\n\
    \         ]\n       ]\n     ]\n   )\n"
- title: A.2.  Example COSE_Sign1 Message
  contents:
  - "A.2.  Example COSE_Sign1 Message\n   This section provides an example of a COSE_Sign1\
    \ message.\n   The size of binary file is 2552 bytes.\n   18(\n     [\n      \
    \ / protected / h'a101382d' / {\n           \\ alg \\ 1:-46 \\ HSS-LMS \\\n  \
    \       } / ,\n       / unprotected / {\n         / kid / 4:'ItsBig'\n       },\n\
    \       / payload / 'This is the content.',\n       / signature / h'00000000000000000000000391291de76ce6e24d1e2a9b60\n\
    \   266519bc8ce889f814deb0fc00edd3129de3ab9b9aa5b5ac783bdf0fe689f57fb204\n   f1992dbc1ce2484f316c74bce3f2094cfa8e96a4a9548cead0f78ee5d549510d1910\n\
    \   f647320448ae27ecce77249802a0c39c645bf8db08573af52c93d91fd0e217f245c7\n   52c176b81514eb6e3067e0fbb329225eaa88c7d21635e32ae84213f89018cb06f1b8\n\
    \   4e61eac348b690d7c6265c19f9d868952d99826aecd417b5279dd674cd951c306016\n   cfee4fee3bfcf5ee5a5ad08b5b4f53bc93995f26cfe7c0c1c5ba2574c1f2d8470993\n\
    \   e8bd47ef9b9cf309ef895226e92be60683459009611defbb9a43217956a0ab2959bb\n   da0feca39de37e7c4a6cd8a5314d6b02b377406d5a5e589e91feaa9f2e4ec1682ba1\n\
    \   f633c7784499323e40da651f71d3c19e38c634d898b0c508324c0bfcf7c5f0a8c014\n   b4af200a739f96cddba94daf86ce80c76158d4f5cf3cd2ba9f1393df47e556887f91\n\
    \   68540485242a05ec6bcc76659ec3d0d2fedae3fd1608a701c226f5fd83c9b1ed3152\n   ddac7426c30e3390bec8f1da6174abe8d3568c9b76b149eb077d61ac15b8fb11b8ce\n\
    \   5f9d14e448e216f375e1f96a52d39619459b131026143e8809bad408f5ef66cd3da2\n   27431e68670c0b4b2c3801e1e9025b1ebed218e0956967158ccc274c704adcd8cc23\n\
    \   c149a89eda25478742dadc15f233844535e4021000b5d557313d4f271875680e6d5e\n   7f6681fdd19f8b9a748cabb2377aac1387fdb80e618eb7d69a368729ca9a092af91e\n\
    \   be1c584c35fe62734d1d53d10b35dd02093a201c889ad37a558b610f1ab00179a11f\n   881600e944cedc47a7ae6d828009d7c61ffea9dd5aa5406408e2e85dc056e47b5758\n\
    \   9eaba18e792f4631af62d4588a1818167274273c69e7a0735be5dada7e224e3b178b\n   3b093212eb74e762f564a26d577aa22ebd8c7b4a999419908e2f2d9c8689dc923905\n\
    \   c198b9ee335d1e0de6d689655f446dffea997b6e58f5f648415233ede3b9d8a2db29\n   e8c3dde5d8dbd55e6348cd9f421783db090e087de46425d62d513597b00d7de32fad\n\
    \   87752a79cee8b2a38b1e0f2562836721cbbfba20f131130c009a436b93a0bb44fcbb\n   86228b1bf1a35f4fc626817924eaebd5b78d64a7970d18dade90cf0ad759b1c45d95\n\
    \   3c08cd1189685077c5a56069da0944669d797496f8f886fea6f792598db2ac66b657\n   af838ed3c3a914dffbb164170a1f63250b125eda53ecaeaf6ee0d2b8a3c804104d7e\n\
    \   d575b66469bc59f37eec6c6f6fb19e0f7ea02d7c85306230063adb58950589f6ffaf\n   f1407233828ae0dfbe5889e5de00bb640a4bc24c3f704488fa669676a9ebbbed399b\n\
    \   8a9ac0ee4cc944f864b21f642e04f610319ac9271f8bd820e77e41dac6553d234d94\n   80e26142c0fa37416651d6450e1f2082bd0213d6783e1ae3cc5c5af677c3316e173b\n\
    \   a4716d6bc8a9d89383f8b025a0859b99a43daeaf8ddaed46d223b9b503651a67560b\n   feb2f35ba544722620ec4086dcc77e6e87bb53f1f18c38368662be460ede31325cae\n\
    \   aebf018a6fa9d32e3c3a6898e15fe114dcce51241c61afabc36de3608b4d342712a8\n   33615c6131e89e1d46b713d9638a08b5a768d53af0298b9c874ded7084358223840c\n\
    \   2e78cd6fbfca695279a4c1883bb7de81b04a069de8277f7f5109c16938347a643713\n   c9ac36fffc8bf141e899f48bc25c7b636d43bebcfa7742d4e1462263e56732ad2021\n\
    \   eef8ce84023c4959cfd250343d62074724907de9d49ea2f6c968fd9e9bf28feafcdc\n   81702108805dec60f2781272d2425a6ee29c66122d2c557867c1a5aed82131e06fc3\n\
    \   84ecf49017e1c9d6cf63b9f2285ccf890cbb9bbf796e0fd02101948b7ef663849367\n   7b33fd787d9d3fc2c7cc7babc21af8c748afb80cf86b45dc89f0b9c7959621e85b98\n\
    \   b542dc263db9255273bb9054a7f194748f28373ba123d73fc71fef43e7e2ac9a8000\n   8e85cf2f04aa433075dfc54c4de24a341ebf7cf1e6b383dbba85898fdc368017fd67\n\
    \   c153e7a991a3a3cee6dae4fbe2fe6f25a8df314140a8176c8e6fd0c6f042ca66eb6a\n   bba9a2502bb6dfa52960ae86a942a673e4e45439594fefcd2974e20554d1dc70b8e0\n\
    \   34fd1787801343d5f6edc95ce0348c25727c771526e3fd4effb5f16e25a1ea3dcd82\n   82e778e91ae9b339a5013c77fd6ea2432704e293f5e82a24121c73900bea4b4ef14a\n\
    \   2adc1ab3c68224bae1de9c61a48b84e84c1b0e83701be3d988012a24fa40268c8d6e\n   f1fd2818ae8e4b6f52f89beab6bfdd1ff1b7ecd573edff3703b800b5b2a206f451f1\n\
    \   bf2713b4ae9085bd7fe34ad4306a290e4cdb7817ee9ab7ccfb816d002b619f77d46d\n   7dd0f8eefe10f5c0f9723ffdb14ca75a185543770f41508b9983d5eed78225bc6e21\n\
    \   f876bfdd08fe8bc63e0cb253c7dfc67c330897c515244f3f631682f2141eba48ca86\n   dfff9206f78edcb9dec4b2371aeddbe141ef96a10957e29a94747c4438fb30b14d37\n\
    \   e7428eb7fbe4f9d870e72f35f55847f230374bdf56dcae6c129b4468ebaedc340ff4\n   cc160c6b410e2d8989488ac8ef9a9febbf65ad4fdfba532a8122ef82dc1a4ffc361c\n\
    \   bf9f752b36aa9821683d5f3f5842f90134eb423d5cbc76858b4c0a7ba798ec94a089\n   fdb24b5b25f42d7b6bb8192f07b98eb2de1fe7bc8b6c740fa5cde6fb4890d2f17916\n\
    \   64a96c25a0a71a541025b5ec825eed91f393505473e21d0620177993982e6c1b6bf9\n   1b777b5ab5739b84946c518c7e6aa0e689e9ad1d34e6ef6ca0e709c4aefecd6f2594\n\
    \   b017940742aceb72c5a52d7d47a3a74f9d09eb84cf82b349de32278a771cebc31ebc\n   580c09b11799b1f0e6d11d75b17e389d259c531f957a1e699250711df2e36f64f21c\n\
    \   92eff698a392d92df0b2f91991408a076b83149e025a9ffba1ff1caed916a2fc1ac5\n   d3081c30b5c64b7d677c314b6e76ac20ed8bb4a4c0eb465ae5c0c265969264b27e6d\n\
    \   54c266f79e58e2fa6a381069090bec00189562abcf831adc86a05a2fc7ffaa70dbd3\n   fa60e09d447cd76b2ff2b851c38e72650ade093ba8bd000000067b95de445abf8916\n\
    \   1dff4b91a4a9e3bf156a39a4660f98f06bf3f017686d9dfc362c948646b3c9848803\n   e6d9ba1f7d3967f709cddd35dc77d60356f0c36808900b491cb4ecbbabec128e7c81\n\
    \   a46e62a67b57640a0a78be1cbf7dd9d419a10cd8686d16621a80816bfdb5bdc56211\n   d72ca70b81f1117d129529a7570cf79cf52a7028a48538ecdd3b38d3d5d62d262465\n\
    \   95c4fb73a525a5ed2c30524ebb1d8cc82e0c19bc4977c6898ff95fd3d310b0bae716\n   96cef93c6a552456bf96e9d075e383bb7543c675842bafbfc7cdb88483b3276c29d4\n\
    \   f0a341c2d406e40d4653b7e4d045851acf6a0a0ea9c710b805cced4635ee8c107362\n   f0fc8d80c14d0ac49c516703d26d14752f34c1c0d2c4247581c18c2cf4de48e9ce94\n\
    \   9be7c888e9caebe4a415e291fd107d21dc1f084b1158208249f28f4f7c7e931ba7b3\n   bd0d824a4570'\n\
    \     ]\n   )\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   Many thanks to Roman Danyliw, Elwyn Davies, Scott Fluhrer,\
    \ Ben Kaduk,\n   Laurence Lundblade, John Mattsson, Jim Schaad, and Tony Putman\
    \ for\n   their valuable review and insights.  In addition, an extra special\n\
    \   thank you to Jim Schaad for generating the examples in Appendix A.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Russ Housley\n   Vigil Security, LLC\n   516 Dranesville\
    \ Road\n   Herndon, VA 20170\n"
