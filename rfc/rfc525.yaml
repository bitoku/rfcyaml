- title: __initial_text__
  contents:
  - "                      MIT-MATHLAB MEETS UCSB-OLS:\n                     An Example\
    \ of Resource Sharing\n"
- title: I. Introduction
  contents:
  - "I. Introduction\n   A. Resource Sharing, A Comment\n      Non-trivial resource\
    \ sharing among dissimilar system is a much\n      discussed concept which, to\
    \ date, has seen only a few real\n      applications.  [See NIC 13538, \"1972\
    \ Summary of Research\n      Activities (UTAH) for description of Tony Hearn's\
    \ TENEX-CCN\n      Programming Link.]  The first attempts have utilized the most\n\
    \      easily accessible communication paths, (TELNET and RJS) and the\n     \
    \ most universal representations of numbers (byte-oriented numeric\n      characters\
    \ in scientific notation).  Future schemes will probably\n      be more efficient\
    \ through standardized data and control protocols,\n      but even with the existing\
    \ approaches users are gaining experience\n      with combinations of resources\
    \ previously not available.\n   B. The MATHLAB/UCSB-OLS Experiment\n      MATHLAB\
    \ [1] and OLS are powerful mathematics systems which cover\n      essentially\
    \ non-intersecting areas of mathematical endeavor.\n      MATHLAB (or MACSYMA)\
    \ contains a high-powered symbolic manipulation\n      system.  OLS is a highly\
    \ interactive numeric and graphics system\n      which, through user programs,\
    \ allows rapid formulation and\n      evaluation of problem solutions.  Prior\
    \ to this experiment, users\n      have dealt with problems symbolically on MATHLAB\
    \ or numerically\n      and graphically on OLS.  Lacking an interconnecting data\
    \ path,\n      users have been left to pencil and paper translation between the\n\
    \      two systems.\n      The goal of the MATHLAB-OLS experiment is to provide\
    \ an automated\n      path whereby expressions at MATHLAB may be translated into\
    \ User\n      Programs at UCSB.  Thus the user is able to experiment freely with\n\
    \      the numeric, graphic, and symbolic aspects of mathematic problems.\n"
- title: II.  THE RESOURCES
  contents:
  - "II.  THE RESOURCES\n   To understand this particular case of resource sharing,\
    \ it is first\n   necessary to understand, to some degree, the resources being\
    \ shared.\n   This paper does not attempt to deal with all of the resources\n\
    \   available at both sites (UCSB and MIT).  Only the applicable shared\n   resources\
    \ are discussed briefly.  In the section discussing\n   possibilities for additions\
    \ (Section V) some available unshared\n   resources are presented, along with\
    \ their possible shared\n   applications.  The current implementation is limited\
    \ to evaluation of\n   real functions.  A description of the capabilities at the\
    \ two sites\n   follows.\n   A. Graphical and Numeric Computation Capabilities\
    \ at UCSB\n      To get a graph of a function on the OLS, it is necessary only\
    \ to\n      specify the function with a series of button-pushes.  For example,\n\
    \      to get a plot on sin(x), the \"program\"\n              II REAL SIN x DISPLAY\
    \ RETURN\n      will display a plot of sin(x) versus X, provided that X has been\n\
    \      defined as a vector containing values over the range which it is\n    \
    \  desired to plot.  For a more complete description of OLS see NIC\n      5748,\
    \ \"The OLS User's Manual\".  Programs in OLS, or sequences of\n      button-pushes\
    \ can be stored under USER level keys, i.e. the above\n      program could be\
    \ defined as USER LI (+) [2], and the user could\n      display, modify, and look\
    \ at various values of the SIN function\n      over different ranges by simply\
    \ setting up the desired value of\n      the the vector X, and then typing USER\
    \ LI (+).  The number of\n      elements in such a vector is variable, up to a\
    \ maximum of 873\n      (default value is 51).  The vector containing the result\
    \ can be\n      stored under a letter key, i.e. Y, and can be looked at by typing\n\
    \      DISPLAY Y.\n      Scaling of plots on the OLS is automatic for best fit,\
    \ or can be\n      controlled.  Upon default, however, it is often desirable to\
    \ look\n      at plots of several functions on a common scale.  This can be done\n\
    \      on the OLS, and the graphs will be overlayed.  OLS graphical\n      capabilities\
    \ are available to users at UCSB on the Culler-Fried\n      terminals, and to\
    \ Network users using a special graphics socket at\n      UCSB.  See NIC 15747,\
    \ RFC 503 \"Socket Number List\".  For Network\n      users without Culler-Fried\
    \ keyboards, see NIC 7546, RFC 216\n      \"TELNET Access to UCSB's On-Line System\"\
    .\n   B. Symbolic Manipulations Available at MATHLAB\n      MATHLAB'S MACSYMA\
    \ provides the capability to do many symbolic\n      manipulations in a very straightforward\
    \ and easy-to-learn manner.\n      Included in these manipulations are:\n    \
    \     1) Symbolic integration and differentiation of certain\n            functions.\n\
    \         2) Solutions to equations and systems of equations.\n         3) Laplace\
    \ and inverse-Laplace transforms of certain functions\n         4) Certain series\
    \ expansions.\n         5) Rational simplification of rational functions.\n  \
    \ For a more complete description, see \"The MACSYMA User's Manual\" by\n   the\
    \ MATHLAB Group at Project MAC-MIT.\n"
- title: III.  A DESCRIPTION OF THE CURRENT IMPLEMENTATION
  contents:
  - "III.  A DESCRIPTION OF THE CURRENT IMPLEMENTATION\n   A variety of programs are\
    \ used to make up a system to effect this\n   transfer of data.\n      1) Two\
    \ functions are defined in Lisp-like language which are\n         loaded into\
    \ MACSYMA after login in order to facilitate saving a\n         list of expressions\
    \ to retrieve later to UCSB, and to write\n         this list out to a disk file\
    \ at MATHLAB for later retrieval.\n      2) A set of OLS user programs create\
    \ the batch job which actually\n         performs the retrieval, translation,\
    \ and storage of these\n         expressions on a specified file on some OLS user\
    \ directory.\n      3) The program which actually performs the connection to MATHLAB\n\
    \         retrieves the expressions, translates and stores into the OLS\n    \
    \     is written in PL/1 and exists as a load module on disk at UCSB.\n   The\
    \ sequence of operations required in order to retrieve expressions\n   using these\
    \ various programs is outlined below:\n      1) The user makes a connection to\
    \ MIT-MATHLAB in the conventional\n         manner.  This can be done either through\
    \ UCSB-OLS, or through\n         other TELNET programs, or from a TIP.\n     \
    \ 2) The user logs in at MATHLAB, calls up MACSYMA, and loads the\n         file\
    \ into the MACSYMA system which facilitates retrieval.\n         (Contains ADDLIST\
    \ and SAVE functions.)\n      3) The user performs the desired manipulations at\
    \ MATHLAB, and\n         saves up a list of line numbers as he goes along using\
    \ the\n         ADDLIST function.  These line numbers represent those\n      \
    \   expressions he wishes to retrieve.  The format for ADDLIST is\n         ADDLIST('<LINE\
    \ NUMBER>).\n      4) When the user has completed all the manipulations he wishes\
    \ to\n         do he saves them on the MIT-MATHLAB disk. (Using SAVE\n       \
    \  function.) The format for SAVE function is SAVE(<filename 1>).\n         This\
    \ function writes out, in horizontal form, the list of line\n         numbers\
    \ in the order the ADDLIST function was invoked to the\n         MIT disk.  The\
    \ filename will be <filename 1>BATCH.  SAVE also\n         appends a question\
    \ mark on the end of the file as an end-of-\n         file indicator.\n      5)\
    \ USER disconnect from MATHLAB.\n      6) User connects to and logs into OLS,\
    \ and loads a file containing\n         the user programs which produce a virtual\
    \ job deck for the\n         batch system.  A sequence of questions are given\
    \ to the user by\n         these programs regarding accounting information, and\
    \ the source\n         file at MIT, and the destination file at at UCSB.  The\
    \ batch\n         job gets submitted automatically, and the transfer and\n   \
    \      translation is done.\n      7) After the transfer is completed, the destination\
    \ file may be\n         loaded into OLS, and the results may be displayed and\
    \ numerical\n         manipulations can take place.\n   The form of these user\
    \ programs, as they are returned is as follows:\n         LII REAL LOAD (  function\
    \  )\n   Therefore in order to look at a graph of one of these functions, it\n\
    \   is necessary to set up values of various constants, as well as a\n   range\
    \ of values of the independent variable.  It is also necessary to\n   request\
    \ a display of the function.  This can be done by typing\n   DISPLAY RETURN. \
    \ It should be noted that the function does exist at\n   the time directly after\
    \ the user program is called and may be stored\n   under any of the alphabetical\
    \ keys on the OLS.  Storing several of\n   these functions under alphabetical\
    \ keys will allow them to be called\n   up for plotting on a common scale.  For\
    \ example, if the functions\n   were stored under the keys A, B, and C, they could\
    \ be displayed on a\n   common scale by typing DISPLAY ABC RETURN.\n"
- title: IV.  LIMITATIONS
  contents:
  - "IV.  LIMITATIONS\n      A. The program as it stands can only transfer expressions.\n\
    \         Equations or functions are not implemented.\n      B. Variable and constant\
    \ names at MIT can contain more than one\n         letter, but the current implementation\
    \ recognizes only one-\n         letter variable names.\n      C. The program\
    \ as it stands does not handle complex numbers.\n      D. The user is subject\
    \ to failures of three independent systems in\n         order to complete the\
    \ transfer: the UCSB 360/75, the Network,\n         and the PDP-10 at MIT.  This\
    \ has not proven to be a serious\n         constraint.\n      E. Software changes\
    \ at either site can cause difficulties since\n         the programs are written\
    \ assuming that things won't change.\n         Anyone who has ever had a program\
    \ that works knows what system\n         changes or intermittent glitches can\
    \ do to foul things up.\n         With two systems and a Network things are at\
    \ least four times\n         as difficult.  Thanks are due to Jeffrey Golden at\
    \ PROJECT MAC\n         for helping with ironing things out at MATHLAB, and the\
    \ UCSB\n         Computer Center for their patience with many I/O bound jobs.\n"
- title: V. POSSIBILITIES FOR ADDITIONS
  contents:
  - "V. POSSIBILITIES FOR ADDITIONS\n      A. Recognition of complex numbers, possibly\
    \ for use with LII\n         COMPLEX on the OLS.\n      B. Addition to translation\
    \ tables of WMPTALK for recognition of\n         SUM, COSH, SINH, INTEGRATE, DIFF,\
    \ etc. (Often MATHLAB will not\n         be able to perform an integral or derivative,\
    \ in which case it\n         will come back with INTEGRATE (Expression) as its\
    \ answer.)\n      C. An OLS Utilities package for allowing users to more easily\n\
    \         manipulate the numerical vectors describing the\n         expressions,i.e.,\
    \ setting up linear and logarithmic sweeps for\n         the various plots, describing\
    \ the scale of the plots on the OLS\n         screens.\n      D. The ability to\
    \ have an OLS program written from a MATHLAB\n         function, including IF,\
    \ THEN, ELSE, DO,etc.  This would most\n         likely require a more sophisticated\
    \ parse than is done in the\n         current implementation.\n"
- title: EXAMPLE
  contents:
  - "EXAMPLE\n   An example is included in which a UCSB user:\n      A. Logs into\
    \ MATHLAB,\n      B. Initializes the \"SAVE\" function,\n      C. Generates a\
    \ polynomial function and its derivative and\n         integral,\n      D. Logs\
    \ out of MATHLAB,\n      E. Creates the retrieval job,\n      F. Waits and then\
    \ displays the resultant user programs,\n      G. and, finally, creates the X\
    \ variable and plots the functions.\n   Although the sample OLS manipulations\
    \ are very simple ones it should\n   be noted that the user could compare the\
    \ retrieved functions with\n   numerical models or even use the functions as subroutines\
    \ in higher\n   level algorithms.  Usage of this combined numeric-symbolic system\
    \ is\n   limited to the imagination of the user.\n   The example follows:\n  \
    \ USER TELNET                    Connection to MATHLAB from UCSB\n   LOGIN TO\
    \ MIT-ML                     \"II LOG MIT-ML RETURN\"\n   MIT MATHLAB PDP-10\n\
    \   ML ITS.796. DDT.514.\n   9. USERS\n   :LOGIN WMP                         \
    \     Login to MIT-MATHLAB.\n   :MACSYMA                                Call up\
    \ MACSYMA\n   THIS IS MACSYMA 212\n   USE \" INSTEAD OF ?\n   SEE UPDATE > MACSYM;\n\
    \   FIX 212 DSK MACSYM BEING LOADED\n   LOADING DONE\n   (C1) BATCH(BATCH,UTILS);\
    \                Load BATCH UTILS file.\n   (UREAD BATCH UTILS DSK WMP) FILE NOT\
    \ FOUND\n   (C2) BATCH(BATCH,UTILS,DSK,UCSB);\n   (C2) LISTX:();\n   (D2)    \
    \                                ()\n   (C3) ADDLIST(X):=LISTX:CONS(X,LISTX);\n\
    \   (D3)                   ADDLIST(X) := (LISTX : CONS(X, LISTX))\n   (C4) SAVE(FILENAME):=APPLY(STRINGOUT,APPEND(\n\
    \              CONS((FILENAME,BATCH,DSK,UCSB),REVERSE(LISTX)),(\"?\")));\n   (D4)\
    \ SAVE(FILENAME) :=\n        APPLY(STRINGOUT,APPEND(CONS((FILENAME, BATCH, DSK,\
    \ UCSB),\n        REVERSE(LISTX)),(?)))\n   (D5)                             \
    \             BATCH DONE\n   (C6) (X**2+3)/(X+1);\n                          \
    \                      2\n                                               X  +\
    \ 3\n   (D6)                                        -------\n                \
    \                                X + 1\n   (C7) INTEGRATE(%,X);\n   SIN FASL DSK\
    \ MACSYM BEING LOADED\n   LOADING DONE                                2\n    \
    \                                          X  - 2 X\n   (D7)                 \
    \                     ----------  + 4 LOG(X + 1)\n                           \
    \                     2\n   (C8) ADDLIST('D6);\n   (D8)                      \
    \                 (D6)\n   (C9) ADDLIST('D7);\n   (D9)                       \
    \        (D7, D6)   Use ADDLIST function\n                                   \
    \     to save line numbers D6 and D7.\n   (C10) DIFF(D6,X);\n                \
    \                              2\n                                     2 X   \
    \  X  + 3\n   (D10)                            ----  -  ------\n             \
    \                        X+1          2\n                                    \
    \         (X+1)\n   (C11) ADDLIST('D10);\n   (D11)                      (D10,\
    \ D7, D6)   Use ADDLIST function to\n                                        \
    \      save line number D10.\n   (C12) SAVE(MYFILE);\n   (D12)               \
    \      (D6, D7, D10, ?)  Write list of lines out\n                           \
    \                       to a disk file using\n   (C13) *********Z     Leave MACSYMA\
    \                   SAVE function.\n   25156)    .IOT 1,1\n   :LISTF UCSB\n  \
    \ DSK UCSB\n   FREE BLCCKS UO #1 241 U1 #3 345 U2 #5 379\n   3    ATTN     BATCH\
    \  1  5/23/73  13:53:11\n   1    BATCH    UTILS  1  5/23/73  13:11:43\n   3  \
    \  DEMO     WMP    1  5/26/73  15:29:26\n   5    DEMO1    BATCH  1  4/29/73  22:41:17\n\
    \   1    DEMO99   BATCH  1  5/25/73  00:07:15\n   5    MYFILE   BATCH  1  5/31/73\
    \  12:41:50 <-- file is in directory\n   1    _MSGS_   UCSB   0  5/26/73  21:13:53\
    \     at MATHLAB\n   :LOGOUT\n                                               Logout\
    \ and disconnect.\n   -------------------------------------------------------------------\n\
    \   ML ITS 796 CONSOLE 24 FREE. 12:42:35\n   DISCONNECTION COMPLETE\n   WORK AREAS\
    \ UPDATED                         Load Retrieval program\n   LOAD MATHLAB    \
    \                         \"SYST LOAD MATHLAB RETURN\"\n   FILE LOADED\n     \
    \                                     \"USER LO (+)\"\n   RETRIEVE EXPRESSIONS\n\
    \   --------------------\n   MATHLAB FILE? (EXP)\n   -->MYFILE-->MYFILE.     \
    \               \"MYFILE ENTER\"\n   OLS FILE?  (MYFILE)\n   -->demo11-->demo11\
    \                     \"demo11 ENTER\"\n   OLS FILE\n   PROTECT CODE?  ()    \
    \                  \"demo11 ENTER\"\n   -->DEMO-->demo11\n   BATCH JOBNAME? (MYFILE)\
    \                \"PARSET ENTER\"\n   -->PARSET-->PARSET.\n   PRESS ENTER TO SUBMIT\
    \ JOB              \"ENTER\"\n   VOLUME NEEDED=\n   JOB SUBMITTED\n   JOB TO RETRIEVE\
    \ MATHLAB\n   EXPRESSIONS IS NOW IN\n   UCSB-MOD75 BATCH QUEUE.    Some time elapses\
    \ and batch job is run.\n                              Load the retrieved program.\n\
    \   WORK AREAS UPDATED         \"SYST LOAD demo11 RETURN\"\n   LOAD demo11\n \
    \  FILE LOADED\n                          Display the returned expressions.\n\
    \   (USER LI (+))                    \"USER I DISPLAY (+)\"\n   ------------------------------------------------------------------\n\
    \   LII REAL LOAD ((X**2 (+)  3)/(X (+) 1)):\n   (USER LI (-))               \
    \     \"USER I DISPLAY (-)\"\n   LII REAL LOAD ((X**2 (-) 2*X)/2 + 4* LOG (X (+)\
    \ 1)):\n   ------------------------------------------------------------------\n\
    \   (USER L1 (*))                      \"USER I DISPLAY (*)\"\n   LII REAL LOAD\
    \ (2*X/(X (+) 1) <> (X**2 (+) 3)/(X (+) 1)**2):\n   USER LI SQ UNDEFINED     \
    \        \"USER DISPLAY SQ\"\n   [The following figure is available in the .ps\
    \ and .pdf version of\n   this document:]\n   Sample OLS Curves Generated for\
    \ -.5 < x < 4.5\n                                       -   -\n"
- title: Endnotes
  contents:
  - "Endnotes\n [1]  Supported on a PDP-10 System at MIT and available for the use\
    \ at\n      UCSB by the way of APRA Network.\n [2] [In this memo, the notation\
    \ \"(+)\", \"(-)\", and \"(*)\" has been\n      substituted for a circle enclosing\
    \ a +, -, and * symbol,\n      respectively.]\n           [This RFC was put into\
    \ machine readable form for entry]\n      [into the online RFC archives by Helene\
    \ Morin, Via Genie 12/1999]\n"
