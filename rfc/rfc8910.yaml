- contents:
  - ' Captive-Portal Identification in DHCP and Router Advertisements (RAs)

    '
  title: __initial_text__
- contents:
  - "Abstract\n   In many environments offering short-term or temporary Internet access\n
    \  (such as coffee shops), it is common to start new connections in a\n   captive
    portal mode.  This highly restricts what the user can do\n   until the user has
    satisfied the captive portal conditions.\n   This document describes a DHCPv4
    and DHCPv6 option and a Router\n   Advertisement (RA) option to inform clients
    that they are behind some\n   sort of captive portal enforcement device, and that
    they will need to\n   satisfy the Captive Portal conditions to get Internet access.
    \ It is\n   not a full solution to address all of the issues that clients may\n
    \  have with captive portals; it is designed to be one component of a\n   standardized
    approach for hosts to interact with such portals.  While\n   this document defines
    how the network operator may convey the captive\n   portal API endpoint to hosts,
    the specific methods of satisfying and\n   interacting with the captive portal
    are out of scope of this\n   document.\n   This document replaces RFC 7710, which
    used DHCP code point 160.  Due\n   to a conflict, this document specifies 114.
    \ Consequently, this\n   document also updates RFC 3679.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8910.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2020 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction\n     1.1.  Requirements Notation\n   2.
    \ The Captive-Portal Option\n     2.1.  IPv4 DHCP Option\n     2.2.  IPv6 DHCP
    Option\n     2.3.  The Captive-Portal IPv6 RA Option\n   3.  Precedence of API
    URIs\n   4.  IANA Considerations\n     4.1.  Captive Portal Unrestricted Identifier\n
    \    4.2.  BOOTP Vendor Extensions and DHCP Options Code Change\n     4.3.  Update
    DHCPv6 and IPv6 ND Options Registries\n   5.  Security Considerations\n   6.  References\n
    \    6.1.  Normative References\n     6.2.  Informative References\n   Appendix
    A.  Changes from RFC 7710\n   Appendix B.  Observations from IETF 106 Network
    Experiment\n   Acknowledgements\n   Authors' Addresses\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   In many environments, users need to connect to a captive
    portal\n   device and agree to an Acceptable Use Policy (AUP) and/or provide\n
    \  billing information before they can access the Internet.  Regardless\n   of
    how that mechanism operates, this document provides functionality\n   to allow
    the client to know when it is behind a captive portal and\n   how to contact it.\n
    \  In order to present users with the payment or AUP pages, a captive\n   portal
    enforcement device presently has to intercept the user's\n   connections and redirect
    the user to a captive portal server, using\n   methods that are very similar to
    man-in-the-middle (MITM) attacks.\n   As increasing focus is placed on security,
    and end nodes adopt a more\n   secure stance, these interception techniques will
    become less\n   effective and/or more intrusive.\n   This document describes a
    DHCPv4 [RFC2131] and DHCPv6 [RFC8415]\n   option (Captive-Portal) and an IPv6
    Router Advertisement (RA)\n   [RFC4861] option that informs clients that they
    are behind a captive\n   portal enforcement device and the API endpoint that the
    host can\n   contact for more information.\n   This document replaces RFC 7710
    [RFC7710], which used DHCP code point\n   160.  Due to a conflict, this document
    specifies 114.  Consequently,\n   this document also updates [RFC3679].\n"
  - contents:
    - "1.1.  Requirements Notation\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
      \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT
      RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted
      as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear
      in all\n   capitals, as shown here.\n"
    title: 1.1.  Requirements Notation
  title: 1.  Introduction
- contents:
  - "2.  The Captive-Portal Option\n   The Captive-Portal DHCP/RA Option informs the
    client that it may be\n   behind a captive portal and provides the URI to access
    an API as\n   defined by [RFC8908].  This is primarily intended to improve the
    user\n   experience by showing the user the captive portal information faster\n
    \  and more reliably.  Note that, for the foreseeable future, captive\n   portals
    will still need to implement interception techniques to serve\n   legacy clients,
    and clients will need to perform probing to detect\n   captive portals; nonetheless,
    the mechanism provided by this document\n   provides a more reliable and performant
    way to do so, and is\n   therefore the preferred mechanism for captive portal
    detection.\n   Clients that support the Captive Portal DHCP option SHOULD include\n
    \  the option in the Parameter Request List in DHCPREQUEST messages.\n   DHCP
    servers MAY send the Captive Portal option without any explicit\n   request.\n
    \  In order to support multiple \"classes\" of clients (e.g., IPv4 only,\n   IPv6
    only with DHCPv6 ([RFC8415]), and IPv6 only with RA), the\n   captive network
    can provision the client with the URI via multiple\n   methods (IPv4 DHCP, IPv6
    DHCP, and IPv6 RA).  The captive portal\n   operator SHOULD ensure that the URIs
    provisioned by each method are\n   identical to reduce the chance of operational
    problems.  As the\n   maximum length of the URI that can be carried in IPv4 DHCP
    is 255\n   bytes, URIs longer than this SHOULD NOT be provisioned by any of the\n
    \  IPv6 options described in this document.  In IPv6-only environments,\n   this
    restriction can be relaxed.\n   In all variants of this option, the URI MUST be
    that of the captive\n   portal API endpoint ([RFC8908]).\n   A captive portal
    MAY do content negotiation (Section 3.4 of\n   [RFC7231]) and attempt to redirect
    clients querying without an\n   explicit indication of support for the captive
    portal API content\n   type (i.e., without application/capport+json listed explicitly\n
    \  anywhere within an Accept header field as described in Section 5.3 of\n   [RFC7231]).
    \ In so doing, the captive portal SHOULD redirect the\n   client to the value
    associated with the \"user-portal-url\" API key.\n   When performing such content
    negotiation (Section 3.4 of [RFC7231]),\n   implementors of captive portals need
    to keep in mind that such\n   responses might be cached, and therefore SHOULD
    include an\n   appropriate Vary header field (Section 7.1.4 of [RFC7231]) or set
    the\n   Cache-Control header field in any responses to \"private\" or a more\n
    \  restrictive value such as \"no-store\" (Section 5.2.2.3 of [RFC7234]).\n   The
    URI SHOULD NOT contain an IP address literal.  Exceptions to this\n   might include
    networks with only one operational IP address family\n   where DNS is either not
    available or not fully functional until the\n   captive portal has been satisfied.
    \ Use of IP Address certificates\n   ([RFC3779]) adds considerations that are
    out of scope for this\n   document.\n   Networks with no captive portals may explicitly
    indicate this\n   condition by using this option with the IANA-assigned URI for
    this\n   purpose.  Clients observing the URI value\n   \"urn:ietf:params:capport:unrestricted\"
    may forego time-consuming\n   forms of captive portal detection.\n"
  - contents:
    - "2.1.  IPv4 DHCP Option\n   The format of the IPv4 Captive-Portal DHCP option
      is shown below.\n       0                   1                   2                   3\n
      \      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      |
      Code          | Len           | URI (variable length) ...     |\n      .                   ...URI
      continued...                         .\n               Figure 1: Captive-Portal
      DHCPv4 Option Format\n      Code:  The Captive-Portal DHCPv4 Option (114) (one
      octet).\n      Len:  The length (one octet), in octets, of the URI.\n      URI:
      \ The URI for the captive portal API endpoint to which the\n         user should
      connect (encoded following the rules in [RFC3986]).\n   See Section 2 of [RFC2132]
      for more on the format of IPv4 DHCP\n   options.\n   Note that the URI parameter
      is not null terminated.\n"
    title: 2.1.  IPv4 DHCP Option
  - contents:
    - "2.2.  IPv6 DHCP Option\n   The format of the IPv6 Captive-Portal DHCP option
      is shown below.\n       0                   1                   2                   3\n
      \      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      |
      \         option-code          |          option-len           |\n      .                      URI
      (variable length)                    .\n               Figure 2: Captive-Portal
      DHCPv6 Option Format\n      option-code:  The Captive-Portal DHCPv6 Option (103)
      (two octets).\n      option-len:  The unsigned 16-bit length, in octets, of
      the URI.\n      URI:  The URI for the captive portal API endpoint to which the\n
      \        user should connect (encoded following the rules in [RFC3986]).\n   See
      Section 5.7 of [RFC7227] for more examples of DHCP Options with\n   URIs.  See
      Section 21.1 of [RFC8415] for more on the format of IPv6\n   DHCP options.\n
      \  Note that the URI parameter is not null terminated.\n   As the maximum length
      of the URI that can be carried in IPv4 DHCP is\n   255 bytes, URIs longer than
      this SHOULD NOT be provisioned via IPv6\n   DHCP options.\n"
    title: 2.2.  IPv6 DHCP Option
  - contents:
    - "2.3.  The Captive-Portal IPv6 RA Option\n   This section describes the Captive-Portal
      Router Advertisement\n   option.\n       0                   1                   2
      \                  3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3
      4 5 6 7 8 9 0 1\n      |     Type      |     Length    |              URI              .\n
      \                Figure 3: Captive-Portal RA Option Format\n      Type:  37\n
      \     Length:  8-bit unsigned integer.  The length of the option\n         (including
      the Type and Length fields) in units of 8 bytes.\n      URI:  The URI for the
      captive portal API endpoint to which the\n         user should connect.  This
      MUST be padded with NUL (0x00) to\n         make the total option length (including
      the Type and Length\n         fields) a multiple of 8 bytes.\n   Note that the
      URI parameter is not guaranteed to be null terminated.\n   As the maximum length
      of the URI that can be carried in IPv4 DHCP is\n   255 bytes, URIs longer than
      this SHOULD NOT be provisioned via IPv6\n   RA options.\n"
    title: 2.3.  The Captive-Portal IPv6 RA Option
  title: 2.  The Captive-Portal Option
- contents:
  - "3.  Precedence of API URIs\n   A device may learn about Captive Portal API URIs
    through more than\n   one of (or indeed all of) the above options.  Implementations
    can\n   select their own precedence order (e.g., prefer one of the IPv6\n   options
    before the DHCPv4 option, or vice versa, et cetera).\n   If the URIs learned via
    more than one option described in Section 2\n   are not all identical, this condition
    should be logged for the device\n   owner or administrator; it is a network configuration
    error if the\n   learned URIs are not all identical.\n"
  title: 3.  Precedence of API URIs
- contents:
  - "4.  IANA Considerations\n   IANA has registered a new IETF URN protocol parameter
    ([RFC3553]).\n   IANA has also reallocated two DHCPv4 option codes (see Appendix
    B for\n   background) and updated the references for previously registered\n   DHCPv6
    and IPv6 ND options.\n"
  - contents:
    - "4.1.  Captive Portal Unrestricted Identifier\n   IANA has registered a new
      entry in the \"IETF URN Sub-namespace for\n   Registered Protocol Parameter
      Identifiers\" registry defined in\n   [RFC3553]:\n   Registered Parameter Identifier:
      \ capport:unrestricted\n   Reference:  RFC 8910\n   IANA Registry Reference:
      \ RFC 8910\n   Only one value is defined (see URN above).  No hierarchy is defined\n
      \  and, therefore, no sub-namespace registrations are possible.\n"
    title: 4.1.  Captive Portal Unrestricted Identifier
  - contents:
    - "4.2.  BOOTP Vendor Extensions and DHCP Options Code Change\n   IANA has updated
      the \"BOOTP Vendor Extensions and DHCP Options\"\n   registry (https://www.iana.org/assignments/bootp-dhcp-parameters)
      as\n   follows.\n   Tag:  114\n   Name:  DHCP Captive-Portal\n   Data Length:
      \ N\n   Meaning:  DHCP Captive-Portal\n   Reference:  RFC 8910\n   Tag:  160\n
      \  Name:  Unassigned\n   Data Length:\n   Meaning:  Previously assigned by [RFC7710];
      known to also be used by\n      Polycom.\n   Reference:  [RFC7710] RFC 8910\n"
    title: 4.2.  BOOTP Vendor Extensions and DHCP Options Code Change
  - contents:
    - "4.3.  Update DHCPv6 and IPv6 ND Options Registries\n   IANA has updated the
      DHCPv6 (103 - DHCP Captive-Portal) and IPv6 ND\n   (37 - DHCP Captive-Portal)
      options previously registered in [RFC7710]\n   to reference this document.\n"
    title: 4.3.  Update DHCPv6 and IPv6 ND Options Registries
  title: 4.  IANA Considerations
- contents:
  - "5.  Security Considerations\n   By removing or reducing the need for captive
    portals to perform MITM\n   hijacking, this mechanism improves security by making
    the portal and\n   its actions visible, rather than hidden, and reduces the likelihood\n
    \  that users will disable useful security safeguards like DNSSEC\n   validation,
    VPNs, etc. in order to interact with the captive portal.\n   In addition, because
    the system knows that it is behind a captive\n   portal, it can know not to send
    cookies, credentials, etc.  By\n   handing out a URI that is protected with TLS,
    the captive portal\n   operator can attempt to reassure the user that the captive
    portal is\n   not malicious.\n   Clients processing these options SHOULD validate
    that the option's\n   contents conform to the validation requirements for URIs,
    including\n   those described in [RFC3986].\n   Each of the options described
    in this document is presented to a node\n   using the same protocols used to provision
    other information critical\n   to the node's successful configuration on a network.
    \ The security\n   considerations applicable to each of these provisioning mechanisms\n
    \  also apply when the node is attempting to learn the information\n   conveyed
    in these options.  In the absence of security measures like\n   RA-Guard ([RFC6105],
    [RFC7113]) or DHCPv6-Shield [RFC7610], an\n   attacker could inject, modify, or
    block DHCP messages or RAs.\n   An attacker with the ability to inject DHCP messages
    or RAs could\n   include an option from this document to force users to contact
    an\n   address of the attacker's choosing.  An attacker with this capability\n
    \  could simply list themselves as the default gateway (and so intercept\n   all
    the victim's traffic); this does not provide them with\n   significantly more
    capabilities, but because this document removes\n   the need for interception,
    the attacker may have an easier time\n   performing the attack.\n   However, as
    the operating systems and application(s) that make use of\n   this information
    know that they are connecting to a captive portal\n   device (as opposed to intercepted
    connections where the OS/\n   application may not know that they are connecting
    to a captive portal\n   or hostile device), they can render the page in a sandboxed\n
    \  environment and take other precautions such as clearly labeling the\n   page
    as untrusted.  The means of sandboxing and a user interface\n   presenting this
    information is not covered in this document; by its\n   nature, it is implementation
    specific and best left to the\n   application and user interface designers.\n
    \  Devices and systems that automatically connect to an open network\n   could
    potentially be tracked using the techniques described in this\n   document (forcing
    the user to continually resatisfy the Captive\n   Portal conditions or exposing
    their browser fingerprint).  However,\n   similar tracking can already be performed
    with the presently common\n   captive portal mechanisms, so this technique does
    not give the\n   attackers more capabilities.\n   Captive portals are increasingly
    hijacking TLS connections to force\n   browsers to talk to the portal.  Providing
    the portal's URI via a\n   DHCP or RA option is a cleaner technique, and reduces
    user\n   expectations of being hijacked; this may improve security by making\n
    \  users more reluctant to accept TLS hijacking, which can be performed\n   from
    beyond the network associated with the captive portal.\n"
  title: 5.  Security Considerations
- contents:
  - '6.  References

    '
  - contents:
    - "6.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC2131]  Droms, R., \"Dynamic Host Configuration Protocol\",\n              RFC
      2131, DOI 10.17487/RFC2131, March 1997,\n              <https://www.rfc-editor.org/info/rfc2131>.\n
      \  [RFC2132]  Alexander, S. and R. Droms, \"DHCP Options and BOOTP Vendor\n
      \             Extensions\", RFC 2132, DOI 10.17487/RFC2132, March 1997,\n              <https://www.rfc-editor.org/info/rfc2132>.\n
      \  [RFC3553]  Mealling, M., Masinter, L., Hardie, T., and G. Klyne, \"An\n              IETF
      URN Sub-namespace for Registered Protocol\n              Parameters\", BCP 73,
      RFC 3553, DOI 10.17487/RFC3553, June\n              2003, <https://www.rfc-editor.org/info/rfc3553>.\n
      \  [RFC3986]  Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform\n              Resource
      Identifier (URI): Generic Syntax\", STD 66,\n              RFC 3986, DOI 10.17487/RFC3986,
      January 2005,\n              <https://www.rfc-editor.org/info/rfc3986>.\n   [RFC4861]
      \ Narten, T., Nordmark, E., Simpson, W., and H. Soliman,\n              \"Neighbor
      Discovery for IP version 6 (IPv6)\", RFC 4861,\n              DOI 10.17487/RFC4861,
      September 2007,\n              <https://www.rfc-editor.org/info/rfc4861>.\n
      \  [RFC7227]  Hankins, D., Mrugalski, T., Siodelski, M., Jiang, S., and\n              S.
      Krishnan, \"Guidelines for Creating New DHCPv6 Options\",\n              BCP
      187, RFC 7227, DOI 10.17487/RFC7227, May 2014,\n              <https://www.rfc-editor.org/info/rfc7227>.\n
      \  [RFC7231]  Fielding, R., Ed. and J. Reschke, Ed., \"Hypertext Transfer\n
      \             Protocol (HTTP/1.1): Semantics and Content\", RFC 7231,\n              DOI
      10.17487/RFC7231, June 2014,\n              <https://www.rfc-editor.org/info/rfc7231>.\n
      \  [RFC7234]  Fielding, R., Ed., Nottingham, M., Ed., and J. Reschke,\n              Ed.,
      \"Hypertext Transfer Protocol (HTTP/1.1): Caching\",\n              RFC 7234,
      DOI 10.17487/RFC7234, June 2014,\n              <https://www.rfc-editor.org/info/rfc7234>.\n
      \  [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119
      Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,
      <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8415]  Mrugalski, T., Siodelski,
      M., Volz, B., Yourtchenko, A.,\n              Richardson, M., Jiang, S., Lemon,
      T., and T. Winters,\n              \"Dynamic Host Configuration Protocol for
      IPv6 (DHCPv6)\",\n              RFC 8415, DOI 10.17487/RFC8415, November 2018,\n
      \             <https://www.rfc-editor.org/info/rfc8415>.\n"
    title: 6.1.  Normative References
  - contents:
    - "6.2.  Informative References\n   [RFC3679]  Droms, R., \"Unused Dynamic Host
      Configuration Protocol\n              (DHCP) Option Codes\", RFC 3679, DOI 10.17487/RFC3679,\n
      \             January 2004, <https://www.rfc-editor.org/info/rfc3679>.\n   [RFC3779]
      \ Lynn, C., Kent, S., and K. Seo, \"X.509 Extensions for IP\n              Addresses
      and AS Identifiers\", RFC 3779,\n              DOI 10.17487/RFC3779, June 2004,\n
      \             <https://www.rfc-editor.org/info/rfc3779>.\n   [RFC6105]  Levy-Abegnoli,
      E., Van de Velde, G., Popoviciu, C., and J.\n              Mohacsi, \"IPv6 Router
      Advertisement Guard\", RFC 6105,\n              DOI 10.17487/RFC6105, February
      2011,\n              <https://www.rfc-editor.org/info/rfc6105>.\n   [RFC7113]
      \ Gont, F., \"Implementation Advice for IPv6 Router\n              Advertisement
      Guard (RA-Guard)\", RFC 7113,\n              DOI 10.17487/RFC7113, February
      2014,\n              <https://www.rfc-editor.org/info/rfc7113>.\n   [RFC7610]
      \ Gont, F., Liu, W., and G. Van de Velde, \"DHCPv6-Shield:\n              Protecting
      against Rogue DHCPv6 Servers\", BCP 199,\n              RFC 7610, DOI 10.17487/RFC7610,
      August 2015,\n              <https://www.rfc-editor.org/info/rfc7610>.\n   [RFC7710]
      \ Kumari, W., Gudmundsson, O., Ebersman, P., and S. Sheng,\n              \"Captive-Portal
      Identification Using DHCP or Router\n              Advertisements (RAs)\", RFC
      7710, DOI 10.17487/RFC7710,\n              December 2015, <https://www.rfc-editor.org/info/rfc7710>.\n
      \  [RFC8908]  Pauly, T., Ed. and D. Thakore, Ed., \"Captive Portal API\",\n
      \             RFC 8908, DOI 10.17487/RFC8908, September 2020,\n              <https://www.rfc-editor.org/info/rfc8908>.\n"
    title: 6.2.  Informative References
  title: 6.  References
- contents:
  - "Appendix A.  Changes from RFC 7710\n   This document incorporates the following
    changes from [RFC7710].\n   1.  Clarified that IP string literals are NOT RECOMMENDED.\n
    \  2.  Clarified that the option URI MUST be that of the captive portal\n       API
    endpoint.\n   3.  Clarified that captive portals MAY do content negotiation.\n
    \  4.  Added text about Captive Portal API URI precedence in the event\n       of
    a network configuration error.\n   5.  Added urn:ietf:params:capport:unrestricted
    URN.\n   6.  Noted that the DHCPv4 Option Code changed from 160 to 114.\n"
  title: Appendix A.  Changes from RFC 7710
- contents:
  - "Appendix B.  Observations from IETF 106 Network Experiment\n   During IETF 106
    in Singapore, an experiment\n   (https://tickets.meeting.ietf.org/wiki/IETF106network#Experiments)\n
    \  enabling clients compatible with the Captive Portal API to discover a\n   venue-info-url
    (see experiment description\n   (https://tickets.meeting.ietf.org/wiki/CAPPORT)
    for more detail)\n   revealed that some Polycom devices on the same network made
    use of\n   DHCPv4 option code 160 for other purposes\n   (https://community.polycom.com/t5/VoIP-SIP-Phones/DHCP-\n
    \  Standardization-160-vs-66/td-p/72577).\n   The presence of DHCPv4 Option code
    160 holding a value indicating the\n   Captive Portal API URL caused these devices
    to not function as\n   desired.  For this reason, IANA has deprecated option code
    160 and\n   allocated a different value to be used for the Captive Portal API\n
    \  URL.\n"
  title: Appendix B.  Observations from IETF 106 Network Experiment
- contents:
  - "Acknowledgements\n   This document is a -bis of RFC 7710.  Thanks to all of the
    original\n   authors (Warren Kumari, Olafur Gudmundsson, Paul Ebersman, and Steve\n
    \  Sheng) and original contributors.\n   Also thanks to the CAPPORT WG for all
    of the discussion and\n   improvements, including contributions and review from
    Joe Clarke,\n   Lorenzo Colitti, Dave Dolson, Hans Kuhn, Kyle Larose, Clemens\n
    \  Schimpe, Martin Thomson, Michael Richardson, Remi Nguyen Van, Subash\n   Tirupachur
    Comerica, Bernie Volz, and Tommy Pauly.\n"
  title: Acknowledgements
- contents:
  - "Authors' Addresses\n   Warren Kumari\n   Google\n   1600 Amphitheatre Parkway\n
    \  Mountain View, CA 94043\n   United States of America\n   Email: warren@kumari.net\n
    \  Erik Kline\n   Loon\n   1600 Amphitheatre Parkway\n   Mountain View, CA 94043\n"
  title: Authors' Addresses
