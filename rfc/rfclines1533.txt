Abstract The Dynamic Host Configuration Protocol (DHCP) [1] provides a framework for passing configuration information to hosts on a TCP/IP network.
Configuration parameters and other control information are carried in tagged data items that are stored in the "options" field of the DHCP message.
The data items themselves are also called "options.
" This document specifies the current set of DHCP options.
This document will be periodically updated as new options are defined.
Each superseding document will include the entire current list of valid options.
All of the vendor information extensions defined in RFC 1497 [2] may be used as DHCP options.
The definitions given in RFC 1497 are included in this document, which supersedes RFC 1497.
All of the DHCP options defined in this document, except for those specific to DHCP as defined in section 9, may be used as BOOTP vendor information extensions.
This document specifies options for use with both the Dynamic Host Configuration Protocol and the Bootstrap Protocol.
The full description of DHCP packet formats may be found in the DHCP specification document [1], and the full description of BOOTP packet formats may be found in the BOOTP specification document [3].
This document defines the format of information in the last field of DHCP packets ('options')
and of BOOTP packets ('vend').
The remainder of this section defines a generalized use of this area for giving information useful to a wide class of machines, operating systems and configurations.
Sites with a single DHCP or BOOTP server that is shared among heterogeneous clients may choose to define other, site  specific formats for the use of the 'options' field.
Section 2 of this memo describes the formats of DHCP options and BOOTP vendor extensions.
Section 3 describes options defined in previous documents for use with BOOTP (all may also be used with DHCP).
Sections 4 8 define new options intended for use with both DHCP and BOOTP.
Section 9 defines options used only in DHCP.
References further describing most of the options defined in sections 2 6 can be found in section 12.
The use of the options defined in section 9 is described in the DHCP specification [1].
Information on registering new options is contained in section 10.
BOOTP Extension/DHCP Option Field Format DHCP options have the same format as the BOOTP "vendor extensions" defined in RFC 1497 [2].
Options may be fixed length or variable length.
All options begin with a tag octet, which uniquely identifies the option.
Fixed length options without data consist of only a tag octet.
Only options 0 and 255 are fixed length.
All other options are variable length with a length octet following the tag octet.
The value of the length octet does not include the two octets specifying the tag and length.
The length octet is followed by "length" octets of data.
In the case of some variable length options the length field is a constant but must still be specified.
Any options defined subsequent to this document should contain a length octet even if the length is fixed or zero.
All multi octet quantities are in network byte order.
When used with BOOTP, the first four octets of the vendor information field have been assigned to the "magic cookie" (as suggested in RFC 951).
This field identifies the mode in which the succeeding data is to be interpreted.
The value of the magic cookie is the 4 octet dotted decimal 99.130.83.99 (or hexadecimal number 63.82.53.63) in network byte order.
All of the "vendor extensions" defined in RFC 1497 are also DHCP options.
Option codes 128 to 254 (decimal) are reserved for site specific options.
Except for the options in section 9, all options may be used with either DHCP or BOOTP.
Many of these options have their default values specified in other documents.
In particular, RFC 1122 [4] specifies default values for most IP and TCP configuration parameters.
This section lists the vendor extensions as defined in RFC 1497.
They are defined here for completeness.
The pad option can be used to cause subsequent fields to align on word boundaries.
The code for the pad option is 0, and its length is 1 octet.
The end option marks the end of valid information in the vendor field.
Subsequent octets should be filled with pad options.
The code for the end option is 255, and its length is 1 octet.
The subnet mask option specifies the client's subnet mask as per RFC 950 [5].
If both the subnet mask and the router option are specified in a DHCP reply, the subnet mask option MUST be first.
The code for the subnet mask option is 1, and its length is 4 octets.
The time offset field specifies the offset of the client's subnet in seconds from Coordinated Universal Time (UTC).
The offset is expressed as a signed 32 bit integer.
The code for the time offset option is 2, and its length is 4 octets.
The router option specifies a list of IP addresses for routers on the client's subnet.
Routers SHOULD be listed in order of preference.
The code for the router option is 3.
The minimum length for the router option is 4 octets, and the length MUST always be a multiple of 4.
The time server option specifies a list of RFC 868 [6] time servers available to the client.
Servers SHOULD be listed in order of preference.
The code for the time server option is 4.
The minimum length for this option is 4 octets, and the length MUST always be a multiple of 4.
The name server option specifies a list of IEN 116 [7] name servers available to the client.
Servers SHOULD be listed in order of preference.
The code for the name server option is 5.
The minimum length for this option is 4 octets, and the length MUST always be a multiple of 4.
The domain name server option specifies a list of Domain Name System (STD 13, RFC 1035 [8])
name servers available to the client.
Servers SHOULD be listed in order of preference.
The code for the domain name server option is 6.
The minimum length for this option is 4 octets, and the length MUST always be a multiple of 4.
The log server option specifies a list of MIT LCS UDP log servers available to the client.
Servers SHOULD be listed in order of preference.
The code for the log server option is 7.
The minimum length for this option is 4 octets, and the length MUST always be a multiple of 4.
The cookie server option specifies a list of RFC 865 [9] cookie servers available to the client.
Servers SHOULD be listed in order of preference.
The code for the log server option is 8.
The minimum length for this option is 4 octets, and the length MUST always be a multiple of 4.
The LPR server option specifies a list of RFC 1179 [10] line printer servers available to the client.
Servers SHOULD be listed in order of preference.
The code for the LPR server option is 9.
The minimum length for this option is 4 octets, and the length MUST always be a multiple of 4.
Impress Server Option The Impress server option specifies a list of Imagen Impress servers available to the client.
Servers SHOULD be listed in order of preference.
The code for the Impress server option is 10.
The minimum length for this option is 4 octets, and the length MUST always be a multiple of 4.
This option specifies a list of RFC 887 [11] Resource Location servers available to the client.
Servers SHOULD be listed in order of preference.
The code for this option is 11.
The minimum length for this option is 4 octets, and the length MUST always be a multiple of 4.
This option specifies the name of the client.
The name may or may not be qualified with the local domain name (see section 3.17 for the preferred way to retrieve the domain name).
See RFC 1035 for character set restrictions.
The code for this option is 12, and its minimum length is 1.
This option specifies the length in 512 octet blocks of the default boot image for the client.
The file length is specified as an unsigned 16 bit integer.
The code for this option is 13, and its length is 2.
This option specifies the path name of a file to which the client's core image should be dumped in the event the client crashes.
The path is formatted as a character string consisting of characters from the NVT ASCII character set.
The code for this option is 14.
Its minimum length is 1.
This option specifies the domain name that client should use when resolving hostnames via the Domain Name System.
The code for this option is 15.
Its minimum length is 1.
This specifies the IP address of the client's swap server.
The code for this option is 16 and its length is 4.
This option specifies the path name that contains the client's root disk.
The path is formatted as a character string consisting of characters from the NVT ASCII character set.
The code for this option is 17.
Its minimum length is 1.
Extensions Path A string to specify a file, retrievable via TFTP, which contains information which can be interpreted in the same way as the 64 octet vendor extension field within the BOOTP response, with the following exceptions: the length of the file is unconstrained; all references to Tag 18 (i.e., instances of the BOOTP Extensions Path field) within the file are ignored.
The code for this option is 18.
Its minimum length is 1.
IP Layer Parameters per Host
This section details the options that affect the operation of the IP layer on a per host basis.
This option specifies whether the client should configure its IP layer for packet forwarding.
A value of 0 means disable IP forwarding, and a value of 1 means enable IP forwarding.
The code for this option is 19, and its length is 1.
Non Local Source Routing Enable/Disable Option
This option specifies whether the client should configure its IP layer to allow forwarding of datagrams with non local source routes (see Section 3.3.5 of [4] for a discussion of this topic).
A value of 0 means disallow forwarding of such datagrams, and a value of 1 means allow forwarding.
The code for this option is 20, and its length is 1.
This option specifies policy filters for non local source routing.
The filters consist of a list of IP addresses and masks which specify destination/mask pairs with which to filter incoming source routes.
Any source routed datagram whose next hop address does not match one of the filters should be discarded by the client.
See [4] for further information.
The code for this option is 21.
The minimum length of this option is 8, and the length MUST be a multiple of 8.
This option specifies the maximum size datagram that the client should be prepared to reassemble.
The size is specified as a 16 bit unsigned integer.
The minimum value legal value is 576.
The code for this option is 22, and its length is 2.
Default IP Time to live This option specifies the default time to live that the client should use on outgoing datagrams.
The TTL is specified as an octet with a value between 1 and 255.
The code for this option is 23, and its length is 1.
Path MTU Aging Timeout Option
This option specifies the timeout (in seconds) to use when aging Path MTU values discovered by the mechanism defined in RFC 1191 [12].
The timeout is specified as a 32 bit unsigned integer.
The code for this option is 24, and its length is 4.
Path MTU Plateau Table Option
This option specifies a table of MTU sizes to use when performing Path MTU Discovery as defined in RFC 1191.
The table is formatted as a list of 16 bit unsigned integers, ordered from smallest to largest.
The minimum MTU value cannot be smaller than 68.
The code for this option is 25.
Its minimum length is 2, and the length MUST be a multiple of 2.
IP Layer Parameters per Interface
This section details the options that affect the operation of the IP layer on a per interface basis.
It is expected that a client can issue multiple requests, one per interface, in order to configure interfaces with their specific parameters.
This option specifies the MTU to use on this interface.
The MTU is specified as a 16 bit unsigned integer.
The minimum legal value for the MTU is 68.
The code for this option is 26, and its length is 2.
All Subnets are Local Option
This option specifies whether or not the client may assume that all subnets of the IP network to which the client is connected use the same MTU as the subnet of that network to which the client is directly connected.
A value of 1 indicates that all subnets share the same MTU.
A value of 0 means that the client should assume that some subnets of the directly connected network may have smaller MTUs.
The code for this option is 27, and its length is 1.
This option specifies the broadcast address in use on the client's subnet.
Legal values for broadcast addresses are specified in section 3.2.1.3 of [4].
The code for this option is 28, and its length is 4.
This option specifies whether or not the client should perform subnet mask discovery using ICMP.
A value of 0 indicates that the client should not perform mask discovery.
A value of 1 means that the client should perform mask discovery.
The code for this option is 29, and its length is 1.
This option specifies whether or not the client should respond to subnet mask requests using ICMP.
A value of 0 indicates that the client should not respond.
A value of 1 means that the client should respond.
The code for this option is 30, and its length is 1.
This option specifies whether or not the client should solicit routers using the Router Discovery mechanism defined in RFC 1256 [13].
A value of 0 indicates that the client should not perform router discovery.
A value of 1 means that the client should perform router discovery.
The code for this option is 31, and its length is 1.
This option specifies the address to which the client should transmit router solicitation requests.
The code for this option is 32, and its length is 4.
This option specifies a list of static routes that the client should install in its routing cache.
If multiple routes to the same destination are specified, they are listed in descending order of priority.
The routes consist of a list of IP address pairs.
The first address is the destination address, and the second address is the router for the destination.
The default route (0.0.0.0) is an illegal destination for a static route.
See section 3.5 for information about the router option.
The code for this option is 33.
The minimum length of this option is 8, and the length MUST be a multiple of 8.
Link Layer Parameters per Interface
This section lists the options that affect the operation of the data link layer on a per interface basis.
This option specifies whether or not the client should negotiate the use of trailers (RFC 893 [14]) when using the ARP protocol.
A value of 0 indicates that the client should not attempt to use trailers.
A value of 1 means that the client should attempt to use trailers.
The code for this option is 34, and its length is 1.
This option specifies the timeout in seconds for ARP cache entries.
The time is specified as a 32 bit unsigned integer.
The code for this option is 35, and its length is 4.
This option specifies whether or not the client should use Ethernet Version 2 (RFC 894 [15]) or IEEE 802.3
(RFC 1042 [16]) encapsulation if the interface is an Ethernet.
A value of 0 indicates that the client should use RFC 894 encapsulation.
A value of 1 means that the client should use RFC 1042 encapsulation.
The code for this option is 36, and its length is 1.
This section lists the options that affect the operation of the TCP layer on a per interface basis.
This option specifies the default TTL that the client should use when sending TCP segments.
The value is represented as an 8 bit unsigned integer.
The minimum value is 1.
The code for this option is 37, and its length is 1.
This option specifies the interval (in seconds) that the client TCP should wait before sending a keepalive message on a TCP connection.
The time is specified as a 32 bit unsigned integer.
A value of zero indicates that the client should not generate keepalive messages on connections unless specifically requested by an application.
The code for this option is 38, and its length is 4.
This option specifies the whether or not the client should send TCP keepalive messages with a octet of garbage for compatibility with older implementations.
A value of 0 indicates that a garbage octet should not be sent.
A value of 1 indicates that a garbage octet should be sent.
The code for this option is 39, and its length is 1.
This section details some miscellaneous options used to configure miscellaneous applications and services.
Network Information Service Domain Option
This option specifies the name of the client's NIS [17] domain.
The domain is formatted as a character string consisting of characters from the NVT ASCII character set.
The code for this option is 40.
Its minimum length is 1.
This option specifies a list of IP addresses indicating NIS servers available to the client.
Servers SHOULD be listed in order of preference.
The code for this option is 41.
Its minimum length is 4, and the length MUST be a multiple of 4.
Network Time Protocol Servers Option
This option specifies a list of IP addresses indicating NTP [18] servers available to the client.
Servers SHOULD be listed in order of preference.
The code for this option is 42.
Its minimum length is 4, and the length MUST be a multiple of 4.
This option is used by clients and servers to exchange vendor  specific information.
The information is an opaque object of n octets, presumably interpreted by vendor specific code on the clients and servers.
The definition of this information is vendor specific.
The vendor is indicated in the class identifier option.
Servers not equipped to interpret the vendor specific information sent by a client MUST ignore it (although it may be reported).
Clients which do not receive desired vendor specific information SHOULD make an attempt to operate without it, although they may do so (and announce they are doing so) in a degraded mode.
If a vendor potentially encodes more than one item of information in this option, then the vendor SHOULD encode the option using "Encapsulated vendor specific options" as described below: The Encapsulated vendor specific options field SHOULD be encoded as a sequence of code/length/value fields of identical syntax to the DHCP options field with the following exceptions: 1) There SHOULD NOT be a "magic cookie" field in the encapsulated vendor specific extensions field.
2) Codes other than 0 or 255 MAY be redefined by the vendor within the encapsulated vendor specific extensions field, but SHOULD conform to the tag length value syntax defined in section 2.
Code 255 (END), if present, signifies the end of the encapsulated vendor extensions, not the end of the vendor extensions field.
If no code 255 is present, then the end of the enclosing vendor specific information field is taken as the end of the encapsulated vendor specific extensions field.
The code for this option is 43 and its minimum length is 1.
Code   Len   Vendor specific information
When encapsulated vendor specific extensions are used, the information bytes 1 n have the following format: Code   Len   Data item
NetBIOS over TCP/IP Name Server Option
The NetBIOS name server (NBNS) option specifies a list of RFC 1001/1002 [19]
[20] NBNS name servers listed in order of preference.
The code for this option is 44.
The minimum length of the option is 4 octets, and the length must always be a multiple of 4.
NetBIOS over TCP/IP Datagram Distribution Server Option
The NetBIOS datagram distribution server (NBDD) option specifies a list of RFC 1001/1002 NBDD servers listed in order of preference.
The code for this option is 45.
The minimum length of the option is 4 octets, and the length must always be a multiple of 4.
NetBIOS over TCP/IP Node Type Option
The NetBIOS node type option allows NetBIOS over TCP/IP clients which are configurable to be configured as described in RFC 1001/1002.
The value is specified as a single octet which identifies the client type as follows:
In the above chart, the notation '0x' indicates a number in base 16 (hexadecimal).
The code for this option is 46.
The length of this option is always 1.
NetBIOS over TCP/IP Scope Option
The NetBIOS scope option specifies the NetBIOS over TCP/IP scope parameter for the client as specified in RFC 1001/1002.
See [19], [20], and [8] for character set restrictions.
The code for this option is 47.
The minimum length of this option is 1.
X Window System Font Server Option
This option specifies a list of X Window System [21]
Font servers available to the client.
Servers SHOULD be listed in order of preference.
The code for this option is 48.
The minimum length of this option is 4 octets, and the length MUST be a multiple of 4.
X Window System Display Manager Option
This option specifies a list of IP addresses of systems that are running the X Window System Display Manager and are available to the client.
Addresses SHOULD be listed in order of preference.
The code for the this option is 49.
The minimum length of this option is 4, and the length MUST be a multiple of 4.
This section details the options that are specific to DHCP.
This option is used in a client request (DHCPDISCOVER) to allow the client to request that a particular IP address be assigned.
The code for this option is 50, and its length is 4.
This option is used in a client request (DHCPDISCOVER or DHCPREQUEST) to allow the client to request a lease time for the IP address.
In a server reply (DHCPOFFER), a DHCP server uses this option to specify the lease time it is willing to offer.
The time is in units of seconds, and is specified as a 32 bit unsigned integer.
The code for this option is 51, and its length is 4.
This option is used to indicate that the DHCP "sname" or "file" fields are being overloaded by using them to carry DHCP options.
A DHCP server inserts this option if the returned parameters will exceed the usual space allotted for options.
If this option is present, the client interprets the specified additional fields after it concludes interpretation of the standard option fields.
The code for this option is 52, and its length is 1.
This option is used to convey the type of the DHCP message.
The code for this option is 53, and its length is 1.
Legal values for this option are:
This option is used in DHCPOFFER and DHCPREQUEST messages, and may optionally be included in the DHCPACK and DHCPNAK messages.
DHCP servers include this option in the DHCPOFFER in order to allow the client to distinguish between lease offers.
DHCP clients indicate which of several lease offers is being accepted by including this option in a DHCPREQUEST message.
The identifier is the IP address of the selected server.
The code for this option is 54, and its length is 4.
This option is used by a DHCP client to request values for specified configuration parameters.
The list of requested parameters is specified as n octets, where each octet is a valid DHCP option code as defined in this document.
The client MAY list the options in order of preference.
The DHCP server is not required to return the options in the requested order, but MUST try to insert the requested options in the order requested by the client.
The code for this option is 55.
Its minimum length is 1.
This option is used by a DHCP server to provide an error message to a DHCP client in a DHCPNAK message in the event of a failure.
A client may use this option in a DHCPDECLINE message to indicate the why the client declined the offered parameters.
The message consists of n octets of NVT ASCII text, which the client may display on an available output device.
The code for this option is 56 and its minimum length is 1.
This option specifies the maximum length DHCP message that it is willing to accept.
The length is specified as an unsigned 16 bit integer.
A client may use the maximum DHCP message size option in DHCPDISCOVER or DHCPREQUEST messages, but should not use the option in DHCPDECLINE messages.
The code for this option is 57, and its length is 2.
The minimum legal value is 576 octets.
This option specifies the time interval from address assignment until the client transitions to the RENEWING state.
The value is in units of seconds, and is specified as a 32 bit unsigned integer.
The code for this option is 58, and its length is 4.
This option specifies the time interval from address assignment until the client transitions to the REBINDING state.
The value is in units of seconds, and is specified as a 32 bit unsigned integer.
The code for this option is 59, and its length is 4.
This option is used by DHCP clients to optionally identify the type and configuration of a DHCP client.
The information is a string of n octets, interpreted by servers.
Vendors and sites may choose to define specific class identifiers to convey particular configuration or other identification information about a client.
For example, the identifier may encode the client's hardware configuration.
Servers not equipped to interpret the class specific information sent by a client MUST ignore it (although it may be reported).
The code for this option is 60, and its minimum length is 1.
This option is used by DHCP clients to specify their unique identifier.
DHCP servers use this value to index their database of address bindings.
This value is expected to be unique for all clients in an administrative domain.
Identifiers consist of a type value pair, similar to
the It is expected that this field will typically contain a hardware type and hardware address, but this is not required.
Current legal values for hardware types are defined in [22].
The code for this option is 61, and its minimum length is 2.
Extensions Additional generic data fields may be registered by contacting: Internet Assigned Numbers Authority (IANA)
USC/Information Sciences Institute 4676 Admiralty Way
Marina del Rey, California  90292 6695 or by email as: iana@isi.edu Implementation specific use of undefined generic types (those in the range 61 127) may conflict with other implementations, and registration is required.
Security Considerations Security issues are not discussed in this memo.
