Abstract This document updates RFC 4055.
It updates the conventions for using the RSA Encryption Scheme Optimal Asymmetric Encryption Padding (RSAES OAEP)
key transport algorithm in the Internet X.509 Public Key Infrastructure (PKI).
Specifically, it updates the conventions for algorithm parameters in an X.509 certificate's subjectPublicKeyInfo field.
Introduction RFC 4055 specifies conventions for using the RSA Encryption Scheme Optimal Asymmetric Encryption Padding (RSAES OAEP)
key transport algorithm in the Internet X.509 Public Key Infrastructure (PKI).
It provides algorithm identifiers and parameters for RSAES OAEP.
This document updates the conventions for RSAES OAEP parameters in the subjectPublicKeyInfo field of an X.509 certificate.
The PKIX WG Elliptic Curve Cryptography (ECC) design team recommended that Key Derivation Functions (KDFs) should not be constrained within a certificate; rather, KDF constraints should be negotiated in protocols that need to employ certificates.
Only two paragraphs in [RFC4055] discuss RSAES OAEP parameters in X.509 certificates: the second paragraph of Section 4 and the first paragraph of Section 4.1.
This document only updates these two paragraphs.
Section 3 updates the second paragraph in Section 4 of [RFC4055], while Section 4 updates the second paragraph in Section 4.1 of [RFC4055].
"Old:" prefaces the text to be replaced and "New:" prefaces the replacement text.
This document also replaces incorrect references to the publicKeyAlgorithms field in Section 3 with references to the parameters field in the subjectPublicKeyInfo algorithm field.
Section 3 also rewords the second and third paragraphs for clarity.
Conventions Used in This Document
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "
SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].
Changes to Section 3 (Second and Third Paragraphs)
This change clarifies the placement of RSASSA PSS params in the signature, signatureAlgorithm, and subjectPublicKeyInfo fields for certification authority (CA) and end entity (EE) certificates.
It also clarifies the placement of RSASSA PSS params in the signatureAlgorithm field in certificate revocation lists (CRLs).
Old: CAs that issue certificates with the id RSASSA PSS algorithm identifier SHOULD require the presence of parameters in the publicKeyAlgorithms field if the cA boolean flag is set in the basic constraints certificate extension.
CAs MAY require that the parameters be present in the publicKeyAlgorithms field for end entity certificates.
CAs that use the RSASSA PSS algorithm for signing certificates SHOULD include RSASSA PSS params in the subjectPublicKeyInfo algorithm parameters in their own certificates.
CAs that use the RSASSA PSS algorithm for signing certificates or CRLs MUST include RSASSA PSS  params in the signatureAlgorithm parameters in the TBSCertificate or TBSCertList structures.
When the id RSASSA PSS object identifier appears in the TBSCertificate or TBSCertList signature algorithm field, then the RSASSA PSS params structure MUST be included in the TBSCertificate or TBSCertList signature parameters field.
When the id RSASSA PSS object identifier appears in the TBSCertificate subjectPublicKeyInfo algorithm field of CA certificates, then the parameters field SHOULD include the RSASSA  PSS params structure.
When the id RSASSA PSS object identifier appears in the TBSCertificate subjectPublicKeyInfo algorithm field of EE certificates, then the parameters field MAY include the RSASSA  PSS params structure.
All certificates and CRLs signed by a CA that supports the id RSASSA
PSS algorithm MUST include the RSASSA PSS params in the signatureAlgorithm parameters in Certificate and CertList structures, respectively.
Changes to Section 4 (Second Paragraph)
This change prohibits the inclusion of RSAES OAEP params in the subjectPublicKeyInfo field.
This was done because a)
it does not affect interoperability and b)
it aligns with PKIX practice to not include limitations on how the public key can be used in subjectPublicKeyInfo.
A poll of implementers was taken and there were no objections to this change as it did not affect current implementations.
Old: CAs that issue certificates with the id RSAES OAEP algorithm identifier SHOULD require the presence of parameters in the publicKeyAlgorithms field for all certificates.
Entities that use a certificate with a publicKeyAlgorithm value of id RSA OAEP where the parameters are absent
SHOULD use the default set of parameters for RSAES OAEP params.
Entities that use a certificate with a publicKeyAlgorithm value of rsaEncryption SHOULD use the default set of parameters for RSAES OAEP params.
New: CAs that issue certificates with the id RSAES OAEP algorithm identifier MUST NOT include parameters in the subjectPublicKeyInfo algorithm field.
Changes to Section 4.1 (First Paragraph)
This change prohibits the inclusion of parameters in the subjectPublicKeyInfo field.
This was done because a)
it does not affect interoperability and b)
it aligns with PKIX practice to not include limitations on how the public key can be used in subjectPublicKeyInfo.
A poll of implementers was taken and there were no objections to this change as it did not affect current implementations.
Old: When id RSAES OAEP is used in an AlgorithmIdentifier, the parameters MUST employ the RSAES OAEP params syntax.
The parameters may be either absent or present when used as subject public key information.
The parameters MUST be present when used in the algorithm identifier associated with an encrypted value.
New: When id RSAES OAEP is used in an AlgorithmIdentifier, the parameters MUST employ the RSAES OAEP params syntax.
The parameters MUST be absent when used in the subjectPublicKeyInfo field.
The parameters MUST be present when used in the algorithm identifier associated with an encrypted value.
The security considerations from [RFC4055] apply.
If the RSAES OAEP params are negotiated, then the negotiation mechanism needs to provide integrity for these parameters.
For example, an S/MIME Agent can advertise their capabilities in the SMIMECapabilities attribute, which is either a signed attribute [RFC5751] or a certificate extension [RFC4262].
