- title: __initial_text__
  contents:
  - "   Generic Security Service Application Program Interface (GSS-API):\n      \
    \               Delegate if Approved by Policy\n"
- title: Abstract
  contents:
  - "Abstract\n   Several Generic Security Service Application Program Interface\n\
    \   (GSS-API) applications work in a multi-tiered architecture, where the\n  \
    \ server takes advantage of delegated user credentials to act on behalf\n   of\
    \ the user and contact additional servers.  In effect, the server\n   acts as\
    \ an agent on behalf of the user.  Examples include web\n   applications that\
    \ need to access e-mail or file servers, including\n   CIFS (Common Internet File\
    \ System) file servers.  However, delegating\n   the user credentials to a party\
    \ who is not sufficiently trusted is\n   problematic from a security standpoint.\
    \  Kerberos provides a flag\n   called OK-AS-DELEGATE that allows the administrator\
    \ of a Kerberos\n   realm to communicate that a particular service is trusted\
    \ for\n   delegation.  This specification adds support for this flag and\n   similar\
    \ facilities in other authentication mechanisms to GSS-API (RFC\n   2743).\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5896.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . 2\n   2.  Requirements Notation . . . . . . . . . . . . . . . .\
    \ . . . . . 3\n   3.  GSS-API flag, C binding . . . . . . . . . . . . . . . .\
    \ . . . . 3\n   4.  GSS-API Behavior  . . . . . . . . . . . . . . . . . . . .\
    \ . . . 3\n   5.  Kerberos GSS-API Behavior . . . . . . . . . . . . . . . . .\
    \ . . 4\n   6.  Rationale . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . 4\n   7.  Security Considerations . . . . . . . . . . . . . . . . . . . .\
    \ 5\n   8.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . . . 5\n\
    \   9.  Normative References  . . . . . . . . . . . . . . . . . . . . . 5\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Several GSS-API applications work in a multi-tiered architecture,\n\
    \   where the server takes advantage of delegated user credentials to act\n  \
    \ on behalf of the user and contact additional servers.  In effect, the\n   server\
    \ acts as an agent on behalf of the user.  Examples include web\n   applications\
    \ that need to access e-mail or file servers, including\n   CIFS file servers.\
    \  However, delegating user credentials to a party\n   who is not sufficiently\
    \ trusted is problematic from a security\n   standpoint.\n   Today, GSS-API [RFC2743]\
    \ leaves the determination of whether\n   delegation is desired to the client\
    \ application.  An application\n   requests delegation by setting the deleg_req_flag\
    \ when calling\n   init_sec_context.  This requires client applications to know\
    \ what\n   services should be trusted for delegation.\n   However, blindly delegating\
    \ to services for applications that do not\n   need delegation is problematic.\
    \  In some cases, a central authority\n   is in a better position than the client\
    \ application to know what\n   services should receive delegation.  Some GSS-API\
    \ mechanisms have a\n   facility to allow an administrator to communicate that\
    \ a particular\n   service is an appropriate target for delegation.  For example,\
    \ a\n   Kerberos [RFC4121] KDC can set the OK-AS-DELEGATE flag in issued\n   tickets\
    \ as such an indication.  It is desirable to expose this\n   knowledge to the\
    \ GSS-API client so the client can request delegation\n   if and only if central\
    \ policy recommends delegation to the given\n   service.\n   This specification\
    \ adds a new input flag to gss_init_sec_context() to\n   request delegation when\
    \ approved by central policy.  In addition, a\n   constant value to be used in\
    \ the GSS-API C bindings [RFC2744] is\n   defined.  Finally, the behavior for\
    \ the Kerberos mechanism [RFC4121]\n   is specified.\n"
- title: 2.  Requirements Notation
  contents:
  - "2.  Requirements Notation\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 3.  GSS-API flag, C binding
  contents:
  - "3.  GSS-API flag, C binding\n   The gss_init_sec_context API is extended to gain\
    \ a new input flag,\n   deleg_policy_req_flag, and a new output flag, deleg_policy_state\n\
    \   BOOLEAN.  If the deleg_policy_req_flag is set, then delegation SHOULD\n  \
    \ be performed if recommended by central policy.  When delegation was\n   recommended\
    \ by the central policy and when delegation was done, the\n   output flag deleg_policy_state\
    \ will be set.\n   In addition, the C bindings are extended to define the following\n\
    \   constant to represent both deleg_policy_req_flag and\n   deleg_policy_state\
    \ (just like GSS_C_DELEG_FLAG maps to two flags).\n   #define GSS_C_DELEG_POLICY_FLAG\
    \ 32768\n"
- title: 4.  GSS-API Behavior
  contents:
  - "4.  GSS-API Behavior\n   As before, if the deleg_req_flag is set, the GSS-API\
    \ mechanism will\n   attempt delegation of user credentials.  When delegation\
    \ is\n   successful, deleg_state will return TRUE in both the initiator and\n\
    \   acceptor output state (gss_init_sec_context and\n   gss_accept_sec_context,\
    \ respectively).\n   Similarly, if the deleg_policy_req_flag is set, then the\
    \ GSS-API\n   mechanism will attempt delegation if the mechanism-specific policy\n\
    \   recommends to do so.  When delegation is allowed and successful,\n   deleg_state\
    \ will return TRUE in both initiator and acceptor output\n   state.  In addition,\
    \ deleg_policy_state will be set in the initiator\n   output state.\n   If the\
    \ initiator sets both the deleg_req_flag and\n   deleg_policy_req_flag, delegation\
    \ will be attempted unconditionally.\n   When delegation is successful, deleg_state\
    \ will return TRUE in the\n   initiator and acceptor.  When delegation was successful,\
    \ the\n   deleg_state will return TRUE in the initiator and acceptor.\n   Additionally,\
    \ if the mechanism-specific policy recommended\n   delegation, the deleg_policy_state\
    \ will additionally return TRUE for\n   the initiator (only).\n   Note that deleg_policy_req_flag\
    \ and deleg_policy_state apply the\n   initiator only.  Their state is never sent\
    \ over the wire.\n"
- title: 5.  Kerberos GSS-API Behavior
  contents:
  - "5.  Kerberos GSS-API Behavior\n   If the initiator sets the deleg_policy_req_flag\
    \ (and not\n   deleg_req_flag), the Kerberos GSS-API mechanism MUST only delegate\
    \ if\n   OK-AS-DELEGATE is set [RFC4120] in the service ticket.  Other policy\n\
    \   checks MAY be applied.  If the initiator sets deleg_req_flag (and not\n  \
    \ deleg_policy_req_flag), the behavior will be as defined by [RFC2743].\n   If\
    \ the initiator set both the deleg_req_flag and\n   deleg_policy_req_flag, delegation\
    \ will be attempted unconditionally.\n   [RFC4120] does not adequately describe\
    \ the behavior of the OK-AS-\n   DELEGATE flag in a cross realm environment. \
    \ This document clarifies\n   that behavior.  If the initiator sets the deleg_policy_req_flag,\
    \ the\n   GSS-API Kerberos mechanism MUST examine the OK-AS-DELEGATE flag in\n\
    \   the service ticket, and it MUST examine all cross realm tickets in\n   the\
    \ traversal from the user's initial ticket-granting-ticket (TGT) to\n   the service\
    \ ticket.  If any of the intermediate cross realm TGTs do\n   not have the OK-AS-DELEGATE\
    \ flag set, the mechanism MUST NOT delegate\n   credentials.\n"
- title: 6.  Rationale
  contents:
  - "6.  Rationale\n   Strictly speaking, the deleg_req_flag behavior in [RFC2743]\
    \ could be\n   interpreted the same as deleg_policy_req_flag is described in this\n\
    \   document.  However, in practice, the new flag is required because\n   existing\
    \ applications and user expectations depend upon GSS-API\n   mechanism implementations\
    \ without the described behavior, i.e., they\n   do not respect OK-AS-DELEGATE.\n\
    \   In hind sight, the deleg_req_flag should not have been implemented to\n  \
    \ mean unconditional delegation.  Such promiscuous delegation reduces\n   overall\
    \ security by unnecessarily exposing user credentials,\n   including to hosts\
    \ and services that the user has no reason to trust.\n   Today there are Kerberos\
    \ implementations that do not support the OK-\n   AS-DELEGATE flag in the Kerberos\
    \ database.  If the implementation of\n   the deleg_req_flag were changed to honor\
    \ the OK-AS-DELEGATE flag,\n   users who deploy new client software would never\
    \ achieve credential\n   delegation because the KDC would never issue a ticket\
    \ with the OK-AS-\n   DELEGATE flag set.  Changing the client software behavior\
    \ in this way\n   would cause a negative user experience for those users.  This\
    \ is\n   compounded by the fact that users often deploy new software without\n\
    \   coordinating with site administrators.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   This document introduces a flag that allows the\
    \ client to get help\n   from the KDC in determining to which servers one should\
    \ delegate\n   credentials, and the servers to which the client can delegate.\n\
    \   The new flag deleg_policy_req_flag is not communicated over the wire,\n  \
    \ and thus does not present a new opportunity for spoofing or\n   downgrading\
    \ policy in and of itself.\n   Mechanisms should use a trusted/authenticated means\
    \ of determining\n   delegation policy, and it must not be spoofable on the network.\n\
    \   Delegating the user's TGT is still too powerful and dangerous.\n   Ideally,\
    \ one would delegate specific service tickets, but this is out\n   of scope of\
    \ this document.\n   A client's failure to specify deleg_policy_req_flag can at\
    \ worst\n   result in NOT delegating credentials.  This means that the client\n\
    \   does not expand its trust, which is generally safer than the\n   alternative.\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   Thanks to Disco Vince Giffin, Thomas Maslen, Ken Raeburn,\
    \ Martin Rex,\n   Alexey Melnikov, Jacques Vidrine, Tom Yu, Hilarie Orman, and\
    \ Shawn\n   Emery for reviewing the document and providing suggestions for\n \
    \  improvements.\n"
- title: 9.  Normative References
  contents:
  - "9.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs\
    \ to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [RFC2743]  Linn, J., \"Generic Security Service Application Program\n    \
    \          Interface Version 2, Update 1\", RFC 2743, January 2000.\n   [RFC2744]\
    \  Wray, J., \"Generic Security Service API Version 2 :\n              C-bindings\"\
    , RFC 2744, January 2000.\n   [RFC4120]  Neuman, C., Yu, T., Hartman, S., and\
    \ K. Raeburn, \"The\n              Kerberos Network Authentication Service (V5)\"\
    , RFC 4120,\n              July 2005.\n   [RFC4121]  Zhu, L., Jaganathan, K.,\
    \ and S. Hartman, \"The Kerberos\n              Version 5 Generic Security Service\
    \ Application Program\n              Interface (GSS-API) Mechanism: Version 2\"\
    , RFC 4121,\n              July 2005.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Love Hornquist Astrand\n   Apple, Inc.\n   EMail: lha@apple.com\n\
    \   Sam Hartman\n   Painless Security, LLC\n   EMail: hartmans-ietf@mit.edu\n"
