- title: __initial_text__
  contents:
  - '             An Expedited Forwarding PHB (Per-Hop Behavior)

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2001).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines a PHB (per-hop behavior) called Expedited\n\
    \   Forwarding (EF).  The PHB is a basic building block in the\n   Differentiated\
    \ Services architecture.  EF is intended to provide a\n   building block for low\
    \ delay, low jitter and low loss services by\n   ensuring that the EF aggregate\
    \ is served at a certain configured\n   rate.  This document obsoletes RFC 2598.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1      Introduction  ...........................................\
    \   2\n   1.1    Relationship to RFC 2598  ...............................   3\n\
    \   2      Definition of EF PHB  ...................................   3\n   2.1\
    \    Intuitive Description of EF  ............................   3\n   2.2   \
    \ Formal Definition of the EF PHB  ........................   5\n   2.3    Figures\
    \ of merit  .......................................   8\n   2.4    Delay and jitter\
    \  .......................................   8\n   2.5    Loss  ...................................................\
    \   9\n   2.6    Microflow misordering  ..................................   9\n\
    \   2.7    Recommended codepoint for this PHB  .....................   9\n   2.8\
    \    Mutability  .............................................  10\n   2.9   \
    \ Tunneling  ..............................................  10\n   2.10   Interaction\
    \ with other PHBs  ............................  10\n   3      Security Considerations\
    \  ................................  10\n   4      IANA Considerations  ....................................\
    \  11\n   5      Acknowledgments  ........................................  11\n\
    \   6      References  .............................................  11\n   Appendix:\
    \ Implementation Examples ..............................  12\n   Authors' Addresses\
    \ .............................................  14\n   Full Copyright Statement\
    \ .......................................  16\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   Network nodes that implement the differentiated services\
    \ enhancements\n   to IP use a codepoint in the IP header to select a per-hop\
    \ behavior\n   (PHB) as the specific forwarding treatment for that packet [3,\
    \ 4].\n   This memo describes a particular PHB called expedited forwarding\n \
    \  (EF).\n   The intent of the EF PHB is to provide a building block for low loss,\n\
    \   low delay, and low jitter services.  The details of exactly how to\n   build\
    \ such services are outside the scope of this specification.\n   The dominant\
    \ causes of delay in packet networks are fixed propagation\n   delays (e.g. those\
    \ arising from speed-of-light delays) on wide area\n   links and queuing delays\
    \ in switches and routers.  Since propagation\n   delays are a fixed property\
    \ of the topology, delay and jitter are\n   minimized when queuing delays are\
    \ minimized.  In this context, jitter\n   is defined as the variation between\
    \ maximum and minimum delay.  The\n   intent of the EF PHB is to provide a PHB\
    \ in which suitably marked\n   packets usually encounter short or empty queues.\
    \  Furthermore, if\n   queues remain short relative to the buffer space available,\
    \ packet\n   loss is also kept to a minimum.\n   To ensure that queues encountered\
    \ by EF packets are usually short, it\n   is necessary to ensure that the service\
    \ rate of EF packets on a given\n   output interface exceeds their arrival rate\
    \ at that interface over\n   long and short time intervals, independent of the\
    \ load of other\n   (non-EF) traffic.  This specification defines a PHB in which\
    \ EF\n   packets are guaranteed to receive service at or above a configured\n\
    \   rate and provides a means to quantify the accuracy with which this\n   service\
    \ rate is delivered over any time interval.  It also provides a\n   means to quantify\
    \ the maximum delay and jitter that a packet may\n   experience under bounded\
    \ operating conditions.\n   Note that the EF PHB only defines the behavior of\
    \ a single node.  The\n   specification of behavior of a collection of nodes is\
    \ outside the\n   scope of this document.  A Per-Domain Behavior (PDB) specification\n\
    \   [7] may provide such information.\n   When a DS-compliant node claims to implement\
    \ the EF PHB, the\n   implementation MUST conform to the specification given in\
    \ this\n   document.  However, the EF PHB is not a mandatory part of the\n   Differentiated\
    \ Services architecture - a node is NOT REQUIRED to\n   implement the EF PHB in\
    \ order to be considered DS-compliant.\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [2].\n"
- title: 1.1. Relationship to RFC 2598
  contents:
  - "1.1. Relationship to RFC 2598\n   This document replaces RFC 2598 [1].  The main\
    \ difference is that it\n   adds mathematical formalism to give a more rigorous\
    \ definition of the\n   behavior described.  The full rationale for this is given\
    \ in [6].\n"
- title: 2. Definition of EF PHB
  contents:
  - '2. Definition of EF PHB

    '
- title: 2.1. Intuitive Description of EF
  contents:
  - "2.1. Intuitive Description of EF\n   Intuitively, the definition of EF is simple:\
    \ the rate at which EF\n   traffic is served at a given output interface should\
    \ be at least the\n   configured rate R, over a suitably defined interval, independent\
    \ of\n   the offered load of non-EF traffic to that interface.  Two\n   difficulties\
    \ arise when we try to formalize this intuition:\n      -  it is difficult to\
    \ define the appropriate timescale at which to\n         measure R. By measuring\
    \ it at short timescales we may introduce\n         sampling errors; at long timescales\
    \ we may allow excessive\n         jitter.\n      -  EF traffic clearly cannot\
    \ be served at rate R if there are no\n         EF packets waiting to be served,\
    \ but it may be impossible to\n         determine externally whether EF packets\
    \ are actually waiting to\n         be served by the output scheduler.  For example,\
    \ if an EF\n         packet has entered the router and not exited, it may be\n\
    \         awaiting service, or it may simply have encountered some\n         processing\
    \ or transmission delay within the router.\n   The formal definition below takes\
    \ account of these issues.  It\n   assumes that EF packets should ideally be served\
    \ at rate R or faster,\n   and bounds the deviation of the actual departure time\
    \ of each packet\n   from the \"ideal\" departure time of that packet.  We define\
    \ the\n   departure time of a packet as the time when the last bit of that\n \
    \  packet leaves the node.  The \"ideal\" departure time of each EF packet\n \
    \  is computed iteratively.\n   In the case when an EF packet arrives at a device\
    \ when all the\n   previous EF packets have already departed, the computation\
    \ of the\n   ideal departure time is simple.  Service of the packet should\n \
    \  (ideally) start as soon as it arrives, so the ideal departure time is\n   simply\
    \ the arrival time plus the ideal time to transmit the packet at\n   rate R. For\
    \ a packet of length L_j, that transmission time at the\n   configured rate R\
    \ is L_j/R. (Of course, a real packet will typically\n   get transmitted at line\
    \ rate once its transmission actually starts,\n   but we are calculating the ideal\
    \ target behavior here; the ideal\n   service takes place at rate R.)\n   In the\
    \ case when an EF packet arrives at a device that still contains\n   EF packets\
    \ awaiting service, the computation of the ideal departure\n   time is more complicated.\
    \  There are two cases to be considered.  If\n   the previous (j-1-th) departure\
    \ occurred after its own ideal\n   departure time, then the scheduler is running\
    \ \"late\".  In this case,\n   the ideal time to start service of the new packet\
    \ is the ideal\n   departure time of the previous (j-1-th) packet, or the arrival\
    \ time\n   of the new packet, whichever is later, because we cannot expect a\n\
    \   packet to begin service before it arrives.  If the previous (j-1-th)\n   departure\
    \ occurred before its own ideal departure time, then the\n   scheduler is running\
    \ \"early\".  In this case, service of the new\n   packet should begin at the\
    \ actual departure time of the previous\n   packet.\n   Once we know the time\
    \ at which service of the j-th packet should\n   (ideally) begin, then the ideal\
    \ departure time of the j-th packet is\n   L_j/R seconds later.  Thus we are able\
    \ to express the ideal departure\n   time of the j-th packet in terms of the arrival\
    \ time of the j-th\n   packet, the actual departure time of the j-1-th packet,\
    \ and the ideal\n   departure time of the j-1-th packet.  Equations eq_1 and eq_2\
    \ in\n   Section 2.2 capture this relationship.\n   Whereas the original EF definition\
    \ did not provide any means to\n   guarantee the delay of an individual EF packet,\
    \ this property may be\n   desired.  For this reason, the equations in Section\
    \ 2.2 consist of\n   two parts: an \"aggregate behavior\" set and a \"packet-identity-aware\"\
    \n   set of equations.  The aggregate behavior equations (eq_1 and eq_2)\n   simply\
    \ describe the properties of the service delivered to the EF\n   aggregate by\
    \ the device.  The \"packet-identity-aware\" equations (eq_3\n   and eq_4) enable\
    \ the bound on delay of an individual packet to be\n   calculated given a knowledge\
    \ of the operating conditions of the\n   device.  The significance of these two\
    \ sets of equations is discussed\n   further in Section 2.2. Note that these two\
    \ sets of equations provide\n   two ways of characterizing the behavior of a single\
    \ device, not two\n   different modes of behavior.\n"
- title: 2.2. Formal Definition of the EF PHB
  contents:
  - "2.2. Formal Definition of the EF PHB\n   A node that supports EF on an interface\
    \ I at some configured rate R\n   MUST satisfy the following equations:\n    \
    \  d_j <= f_j + E_a for all j > 0                             (eq_1)\n   where\
    \ f_j is defined iteratively by\n      f_0 = 0, d_0 = 0\n      f_j = max(a_j,\
    \ min(d_j-1, f_j-1)) + l_j/R,  for all j > 0  (eq_2)\n   In this definition:\n\
    \      -  d_j is the time that the last bit of the j-th EF packet to\n       \
    \  depart actually leaves the node from the interface I.\n      -  f_j is the\
    \ target departure time for the j-th EF packet to\n         depart from I, the\
    \ \"ideal\" time at or before which the last bit\n         of that packet should\
    \ leave the node.\n      -  a_j is the time that the last bit of the j-th EF packet\n\
    \         destined to the output I actually arrives at the node.\n      -  l_j\
    \ is the size (bits) of the j-th EF packet to depart from I.\n         l_j is\
    \ measured on the IP datagram (IP header plus payload) and\n         does not\
    \ include any lower layer (e.g. MAC layer) overhead.\n      -  R is the EF configured\
    \ rate at output I (in bits/second).\n      -  E_a is the error term for the treatment\
    \ of the EF aggregate.\n         Note that E_a represents the worst case deviation\
    \ between the\n         actual departure time of an EF packet and the ideal departure\n\
    \         time of the same packet, i.e. E_a provides an upper bound on\n     \
    \    (d_j - f_j) for all j.\n      -  d_0 and f_0 do not refer to a real packet\
    \ departure but are\n         used purely for the purposes of the recursion. \
    \ The time origin\n         should be chosen such that no EF packets are in the\
    \ system at\n         time 0.\n      -  for the definitions of a_j and d_j, the\
    \ \"last bit\" of the\n         packet includes the layer 2 trailer if present,\
    \ because a\n         packet cannot generally be considered available for forwarding\n\
    \         until such a trailer has been received.\n   An EF-compliant node MUST\
    \ be able to be characterized by the range of\n   possible R values that it can\
    \ support on each of its interfaces while\n   conforming to these equations, and\
    \ the value of E_a that can be met\n   on each interface.  R may be line rate\
    \ or less.  E_a MAY be specified\n   as a worst-case value for all possible R\
    \ values or MAY be expressed\n   as a function of R.\n   Note also that, since\
    \ a node may have multiple inputs and complex\n   internal scheduling, the j-th\
    \ EF packet to arrive at the node\n   destined for a certain interface may not\
    \ be the j-th EF packet to\n   depart from that interface.  It is in this sense\
    \ that eq_1 and eq_2\n   are unaware of packet identity.\n   In addition, a node\
    \ that supports EF on an interface I at some\n   configured rate R MUST satisfy\
    \ the following equations:\n      D_j <= F_j + E_p for all j > 0             \
    \                (eq_3)\n   where F_j is defined iteratively by\n      F_0 = 0,\
    \ D_0 = 0\n      F_j = max(A_j, min(D_j-1, F_j-1)) + L_j/R,  for all j > 0  (eq_4)\n\
    \   In this definition:\n      -  D_j is the actual departure time of the individual\
    \ EF packet\n         that arrived at the node destined for interface I at time\
    \ A_j,\n         i.e., given a packet which was the j-th EF packet destined for\n\
    \         I to arrive at the node via any input, D_j is the time at which\n  \
    \       the last bit of that individual packet actually leaves the node\n    \
    \     from the interface I.\n      -  F_j is the target departure time for the\
    \ individual EF packet\n         that arrived at the node destined for interface\
    \ I at time A_j.\n      -  A_j is the time that the last bit of the j-th EF packet\n\
    \         destined to the output I to arrive actually arrives at the\n       \
    \  node.\n      -  L_j is the size (bits) of the j-th EF packet to arrive at the\n\
    \         node that is destined to output I. L_j is measured on the IP\n     \
    \    datagram (IP header plus payload) and does not include any\n         lower\
    \ layer (e.g. MAC layer) overhead.\n      -  R is the EF configured rate at output\
    \ I (in bits/second).\n      -  E_p is the error term for the treatment of individual\
    \ EF\n         packets.  Note that E_p represents the worst case deviation\n \
    \        between the actual departure time of an EF packet and the ideal\n   \
    \      departure time of the same packet, i.e. E_p provides an upper\n       \
    \  bound on (D_j - F_j) for all j.\n      -  D_0 and F_0 do not refer to a real\
    \ packet departure but are\n         used purely for the purposes of the recursion.\
    \  The time origin\n         should be chosen such that no EF packets are in the\
    \ system at\n         time 0.\n      -  for the definitions of A_j and D_j, the\
    \ \"last bit\" of the\n         packet includes the layer 2 trailer if present,\
    \ because a\n         packet cannot generally be considered available for forwarding\n\
    \         until such a trailer has been received.\n   It is the fact that D_j\
    \ and F_j refer to departure times for the j-th\n   packet to arrive that makes\
    \ eq_3 and eq_4 aware of packet identity.\n   This is the critical distinction\
    \ between the last two equations and\n   the first two.\n   An EF-compliant node\
    \ SHOULD be able to be characterized by the range\n   of possible R values that\
    \ it can support on each of its interfaces\n   while conforming to these equations,\
    \ and the value of E_p that can be\n   met on each interface.  E_p MAY be specified\
    \ as a worst-case value\n   for all possible R values or MAY be expressed as a\
    \ function of R. An\n   E_p value of \"undefined\" MAY be specified.  For discussion\
    \ of\n   situations in which E_p may be undefined see the Appendix and [6].\n\
    \   For the purposes of testing conformance to these equations, it may be\n  \
    \ necessary to deal with packet arrivals on different interfaces that\n   are\
    \ closely spaced in time.  If two or more EF packets destined for\n   the same\
    \ output interface arrive (on different inputs) at almost the\n   same time and\
    \ the difference between their arrival times cannot be\n   measured, then it is\
    \ acceptable to use a random tie-breaking method\n   to decide which packet arrived\
    \ \"first\".\n"
- title: 2.3. Figures of merit
  contents:
  - "2.3. Figures of merit\n   E_a and E_p may be thought of as \"figures of merit\"\
    \ for a device.  A\n   smaller value of E_a means that the device serves the EF\
    \ aggregate\n   more smoothly at rate R over relatively short timescales, whereas\
    \ a\n   larger value of E_a implies a more bursty scheduler which serves the\n\
    \   EF aggregate at rate R only when measured over longer intervals.  A\n   device\
    \ with a larger E_a can \"fall behind\" the ideal service rate R\n   by a greater\
    \ amount than a device with a smaller E_a.\n   A lower value of E_p implies a\
    \ tighter bound on the delay experienced\n   by an individual packet.  Factors\
    \ that might lead to a higher E_p\n   might include a large number of input interfaces\
    \ (since an EF packet\n   might arrive just behind a large number of EF packets\
    \ that arrived on\n   other interfaces), or might be due to internal scheduler\
    \ details\n   (e.g. per-flow scheduling within the EF aggregate).\n   We observe\
    \ that factors that increase E_a such as those noted above\n   will also increase\
    \ E_p, and that E_p is thus typically greater than\n   or equal to E_a.  In summary,\
    \ E_a is a measure of deviation from\n   ideal service of the EF aggregate at\
    \ rate R, while E_p measures both\n   non-ideal service and non-FIFO treatment\
    \ of packets within the\n   aggregate.\n   For more discussion of these issues\
    \ see the Appendix and [6].\n"
- title: 2.4. Delay and jitter
  contents:
  - "2.4. Delay and jitter\n   Given a known value of E_p and a knowledge of the bounds\
    \ on the EF\n   traffic offered to a given output interface, summed over all input\n\
    \   interfaces, it is possible to bound the delay and jitter that will be\n  \
    \ experienced by EF traffic leaving the node via that interface.  The\n   delay\
    \ bound is\n      D = B/R + E_p          (eq_5)\n   where\n      -  R is the configured\
    \ EF service rate on the output interface\n      -  the total offered load of\
    \ EF traffic destined to the output\n         interface, summed over all input\
    \ interfaces, is bounded by a\n         token bucket of rate r <= R and depth\
    \ B\n   Since the minimum delay through the device is clearly at least zero,\n\
    \   D also provides a bound on jitter.  To provide a tighter bound on\n   jitter,\
    \ the value of E_p for a device MAY be specified as two\n   separate components\
    \ such that\n      E_p = E_fixed + E_variable\n   where E_fixed represents the\
    \ minimum delay that can be experienced by\n   an EF packet through the node.\n"
- title: 2.5. Loss
  contents:
  - "2.5. Loss\n   The EF PHB is intended to be a building block for low loss services.\n\
    \   However, under sufficiently high load of EF traffic (including\n   unexpectedly\
    \ large bursts from many inputs at once), any device with\n   finite buffers may\
    \ need to discard packets.  Thus, it must be\n   possible to establish whether\
    \ a device conforms to the EF definition\n   even when some packets are lost.\
    \  This is done by performing an\n   \"off-line\" test of conformance to equations\
    \ 1 through 4.  After\n   observing a sequence of packets entering and leaving\
    \ the node, the\n   packets which did not leave are assumed lost and are notionally\n\
    \   removed from the input stream.  The remaining packets now constitute\n   the\
    \ arrival stream (the a_j's) and the packets which left the node\n   constitute\
    \ the departure stream (the d_j's).  Conformance to the\n   equations can thus\
    \ be verified by considering only those packets that\n   successfully passed through\
    \ the node.\n   In addition, to assist in meeting the low loss objective of EF,\
    \ a\n   node MAY be characterized by the operating region in which loss of EF\n\
    \   due to congestion will not occur.  This MAY be specified, using a\n   token\
    \ bucket of rate r <= R and burstsize B, as the sum of traffic\n   across all\
    \ inputs to a given output interface that can be tolerated\n   without loss.\n\
    \   In the event that loss does occur, the specification of which packets\n  \
    \ are lost is beyond the scope of this document.  However it is a\n   requirement\
    \ that those packets not lost MUST conform to the equations\n   of Section 2.2.\n"
- title: 2.6. Microflow misordering
  contents:
  - "2.6. Microflow misordering\n   Packets belonging to a single microflow within\
    \ the EF aggregate\n   passing through a device SHOULD NOT experience re-ordering\
    \ in normal\n   operation of the device.\n"
- title: 2.7. Recommended codepoint for this PHB
  contents:
  - "2.7. Recommended codepoint for this PHB\n   Codepoint 101110 is RECOMMENDED for\
    \ the EF PHB.\n"
- title: 2.8. Mutability
  contents:
  - "2.8. Mutability\n   Packets marked for EF PHB MAY be remarked at a DS domain\
    \ boundary\n   only to other codepoints that satisfy the EF PHB.  Packets marked\
    \ for\n   EF PHBs SHOULD NOT be demoted or promoted to another PHB by a DS\n \
    \  domain.\n"
- title: 2.9. Tunneling
  contents:
  - "2.9. Tunneling\n   When EF packets are tunneled, the tunneling packets SHOULD\
    \ be marked\n   as EF.  A full discussion of tunneling issues is presented in\
    \ [5].\n"
- title: 2.10.  Interaction with other PHBs
  contents:
  - "2.10.  Interaction with other PHBs\n   Other PHBs and PHB groups may be deployed\
    \ in the same DS node or\n   domain with the EF PHB.  The equations of Section\
    \ 2.2 MUST hold for a\n   node independent of the amount of non-EF traffic offered\
    \ to it.\n   If the EF PHB is implemented by a mechanism that allows unlimited\n\
    \   preemption of other traffic (e.g., a priority queue), the\n   implementation\
    \ MUST include some means to limit the damage EF traffic\n   could inflict on\
    \ other traffic (e.g., a token bucket rate limiter).\n   Traffic that exceeds\
    \ this limit MUST be discarded.  This maximum EF\n   rate, and burst size if appropriate,\
    \ MUST be settable by a network\n   administrator (using whatever mechanism the\
    \ node supports for non-\n   volatile configuration).\n"
- title: 3. Security Considerations
  contents:
  - "3. Security Considerations\n   To protect itself against denial of service attacks,\
    \ the edge of a DS\n   domain SHOULD strictly police all EF marked packets to\
    \ a rate\n   negotiated with the adjacent upstream domain.  Packets in excess\
    \ of\n   the negotiated rate SHOULD be dropped.  If two adjacent domains have\n\
    \   not negotiated an EF rate, the downstream domain SHOULD use 0 as the\n   rate\
    \ (i.e., drop all EF marked packets).\n   In addition, traffic conditioning at\
    \ the ingress to a DS-domain MUST\n   ensure that only packets having DSCPs that\
    \ correspond to an EF PHB\n   when they enter the DS-domain are marked with a\
    \ DSCP that corresponds\n   to EF inside the DS-domain.  Such behavior is as required\
    \ by the\n   Differentiated Services architecture [4].  It protects against\n\
    \   denial-of-service and theft-of-service attacks which exploit DSCPs\n   that\
    \ are not identified in any Traffic Conditioning Specification\n   provisioned\
    \ at an ingress interface, but which map to EF inside the\n   DS-domain.\n"
- title: 4. IANA Considerations
  contents:
  - "4. IANA Considerations\n   This document allocates one codepoint, 101110, in\
    \ Pool 1 of the code\n   space defined by [3].\n"
- title: 5. Acknowledgments
  contents:
  - "5. Acknowledgments\n   This document was the result of collaboration and discussion\
    \ among a\n   large number of people.  In particular, Fred Baker, Angela Chiu,\n\
    \   Chuck Kalmanek, and K. K. Ramakrishnan made significant contributions\n  \
    \ to the new EF definition.  John Wroclawski provided many helpful\n   comments\
    \ to the authors.  This document draws heavily on the original\n   EF PHB definition\
    \ of Jacobson, Nichols, and Poduri.  It was also\n   greatly influenced by the\
    \ work of the EFRESOLVE team of Armitage,\n   Casati, Crowcroft, Halpern, Kumar,\
    \ and Schnizlein.\n"
- title: 6. References
  contents:
  - "6. References\n   [1]   Jacobson, V., Nichols, K. and K. Poduri, \"An Expedited\n\
    \         Forwarding PHB\", RFC 2598, June 1999.\n   [2]   Bradner, S., \"Key\
    \ words for use in RFCs to Indicate Requirement\n         Levels\", BCP 14, RFC\
    \ 2119, March 1997.\n   [3]   Nichols, K., Blake, S., Baker, F. and D. Black,\
    \ \"Definition of\n         the Differentiated Services Field (DS Field) in the\
    \ IPv4 and\n         IPv6 Headers\", RFC 2474, December 1998.\n   [4]   Black,\
    \ D., Blake, S., Carlson, M., Davies, E., Wang, Z. and W.\n         Weiss, \"\
    An Architecture for Differentiated Services\", RFC 2475,\n         December 1998.\n\
    \   [5]   Black, D., \"Differentiated Services and Tunnels\", RFC 2983,\n    \
    \     October 2000.\n   [6]   Charny, A., Baker, F., Davie, B., Bennett, J.C.R.,\
    \ Benson, K.,\n         Le Boudec, J.Y., Chiu, A., Courtney, W., Davari, S., Firoiu,\n\
    \         V., Kalmanek, C., Ramakrishnan, K.K. and D. Stiliadis,\n         \"\
    Supplemental Information for the New Definition of the EF PHB\n         (Expedited\
    \ Forwarding Per-Hop Behavior)\", RFC 3247, March 2002.\n   [7]   Nichols K. and\
    \ B. Carpenter, \"Definition of Differentiated\n         Services Per Domain Behaviors\
    \ and Rules for their\n         Specification\", RFC 3086, April 2001.\n"
- title: 'Appendix: Implementation Examples'
  contents:
  - "Appendix: Implementation Examples\n   This appendix is not part of the normative\
    \ specification of EF.\n   However, it is included here as a possible source of\
    \ useful\n   information for implementors.\n   A variety of factors in the implementation\
    \ of a node supporting EF\n   will influence the values of E_a and E_p.  These\
    \ factors are\n   discussed in more detail in [6], and include both output schedulers\n\
    \   and the internal design of a device.\n   A priority queue is widely considered\
    \ as the canonical example of an\n   implementation of EF.  A \"perfect\" output\
    \ buffered device (i.e. one\n   which delivers packets immediately to the appropriate\
    \ output queue)\n   with a priority queue for EF traffic will provide both a low\
    \ E_a and\n   a low E_p.  We note that the main factor influencing E_a will be\
    \ the\n   inability to pre-empt an MTU-sized non-EF packet that has just begun\n\
    \   transmission at the time when an EF packet arrives at the output\n   interface,\
    \ plus any additional delay that might be caused by non-\n   pre-emptable queues\
    \ between the priority queue and the physical\n   interface.  E_p will be influenced\
    \ primarily by the number of\n   interfaces.\n   Another example of an implementation\
    \ of EF is a weighted round robin\n   scheduler.  Such an implementation will\
    \ typically not be able to\n   support values of R as high as the link speeds,\
    \ because the maximum\n   rate at which EF traffic can be served in the presence\
    \ of competing\n   traffic will be affected by the number of other queues and\
    \ the\n   weights given to them.  Furthermore, such an implementation is likely\n\
    \   to have a value of E_a that is higher than a priority queue\n   implementation,\
    \ all else being equal, as a result of the time spent\n   serving non-EF queues\
    \ by the round robin scheduler.\n   Finally, it is possible to implement hierarchical\
    \ scheduling\n   algorithms, such that some non-FIFO scheduling algorithm is run\
    \ on\n   sub-flows within the EF aggregate, while the EF aggregate as a whole\n\
    \   could be served at high priority or with a large weight by the top-\n   level\
    \ scheduler.  Such an algorithm might perform per-input\n   scheduling or per-microflow\
    \ scheduling within the EF aggregate, for\n   example.  Because such algorithms\
    \ lead to non-FIFO service within the\n   EF aggregate, the value of E_p for such\
    \ algorithms may be higher than\n   for other implementations.  For some schedulers\
    \ of this type it may\n   be difficult to provide a meaningful bound on E_p that\
    \ would hold for\n   any pattern of traffic arrival, and thus a value of \"undefined\"\
    \ may\n   be most appropriate.\n   It should be noted that it is quite acceptable\
    \ for a Diffserv domain\n   to provide multiple instances of EF.  Each instance\
    \ should be\n   characterizable by the equations in Section 2.2 of this\n   specification.\
    \  The effect of having multiple instances of EF on the\n   E_a and E_p values\
    \ of each instance will depend considerably on how\n   the multiple instances\
    \ are implemented.  For example, in a multi-\n   level priority scheduler, an\
    \ instance of EF that is not at the\n   highest priority may experience relatively\
    \ long periods when it\n   receives no service while higher priority instances\
    \ of EF are served.\n   This would result in relatively large values of E_a and\
    \ E_p.  By\n   contrast, in a WFQ-like scheduler, each instance of EF would be\n\
    \   represented by a queue served at some configured rate and the values\n   of\
    \ E_a and E_p could be similar to those for a single EF instance.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Bruce Davie\n   Cisco Systems, Inc.\n   300 Apollo Drive\n\
    \   Chelmsford, MA, 01824\n   EMail: bsd@cisco.com\n   Anna Charny\n   Cisco Systems\n\
    \   300 Apollo Drive\n   Chelmsford, MA 01824\n   EMail: acharny@cisco.com\n \
    \  Jon Bennett\n   Motorola\n   3 Highwood Drive East\n   Tewksbury, MA 01876\n\
    \   EMail: jcrb@motorola.com\n   Kent Benson\n   Tellabs Research Center\n   3740\
    \ Edison Lake Parkway #101\n   Mishawaka, IN  46545\n   EMail: Kent.Benson@tellabs.com\n\
    \   Jean-Yves Le Boudec\n   ICA-EPFL, INN\n   Ecublens, CH-1015\n   Lausanne-EPFL,\
    \ Switzerland\n   EMail: jean-yves.leboudec@epfl.ch\n   Bill Courtney\n   TRW\n\
    \   Bldg. 201/3702\n   One Space Park\n   Redondo Beach, CA 90278\n   EMail: bill.courtney@trw.com\n\
    \   Shahram Davari\n   PMC-Sierra Inc\n   411 Legget Drive\n   Ottawa, ON K2K\
    \ 3C9, Canada\n   EMail: shahram_davari@pmc-sierra.com\n   Victor Firoiu\n   Nortel\
    \ Networks\n   600 Tech Park\n   Billerica, MA 01821\n   EMail: vfiroiu@nortelnetworks.com\n\
    \   Dimitrios Stiliadis\n   Lucent Technologies\n   101 Crawfords Corner Road\n\
    \   Holmdel, NJ 07733\n   EMail: stiliadi@bell-labs.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2001).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
