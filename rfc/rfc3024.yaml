- title: __initial_text__
  contents:
  - '                Reverse Tunneling for Mobile IP, revised

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2001).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   Mobile Internet Protocol (IP) uses tunneling from the home agent\
    \ to\n   the mobile node's care-of address, but rarely in the reverse\n   direction.\
    \  Usually, a mobile node sends its packets through a router\n   on the foreign\
    \ network, and assumes that routing is independent of\n   source address.  When\
    \ this assumption is not true, it is convenient\n   to establish a topologically\
    \ correct reverse tunnel from the care-of\n   address to the home agent.\n   This\
    \ document proposes backwards-compatible extensions to Mobile IP\n   to support\
    \ topologically correct reverse tunnels.  This document does\n   not attempt to\
    \ solve the problems posed by firewalls located between\n   the home agent and\
    \ the mobile node's care-of address.\n   This document obsoletes RFC 2344.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ...................................................\
    \  3\n   1.1. Terminology .................................................. \
    \ 4\n   1.2. Assumptions ..................................................  4\n\
    \   1.3. Justification ................................................  5\n \
    \  2. Overview .......................................................  5\n  \
    \ 3. New Packet Formats .............................................  6\n   3.1.\
    \ Mobility Agent Advertisement Extension .......................  6\n   3.2. Registration\
    \ Request .........................................  6\n   3.3. Encapsulating\
    \ Delivery Style Extension .......................  7\n   3.4. New Registration\
    \ Reply Codes .................................  8\n   4. Changes in Protocol\
    \ Behavior ...................................  9\n   4.1. Mobile Node Considerations\
    \ ...................................  9\n   4.1.1. Sending Registration Requests\
    \ to the Foreign Agent .........  9\n   4.1.2. Receiving Registration Replies\
    \ from the Foreign Agent ...... 10\n   4.2. Foreign Agent Considerations .................................\
    \ 10\n   4.2.1. Receiving Registration Requests from the Mobile Node ....... 11\n\
    \   4.2.2. Relaying Registration Requests to the Home Agent ........... 11\n \
    \  4.3. Home Agent Considerations .................................... 11\n  \
    \ 4.3.1. Receiving Registration Requests from the Foreign Agent ..... 12\n   4.3.2.\
    \ Sending Registration Replies to the Foreign Agent .......... 12\n   5. Mobile\
    \ Node to Foreign Agent Delivery Styles ................... 13\n   5.1. Direct\
    \ Delivery Style ........................................ 13\n   5.1.1. Packet\
    \ Processing .......................................... 13\n   5.1.2. Packet Header\
    \ Format and Fields ............................ 13\n   5.2. Encapsulating Delivery\
    \ Style ................................. 14\n   5.2.1 Packet Processing ...........................................\
    \ 14\n   5.2.2. Packet Header Format and Fields ............................ 15\n\
    \   5.3. Support for Broadcast and Multicast Datagrams ................ 16\n \
    \  5.4. Selective Reverse Tunneling .................................. 16\n  \
    \ 6. Security Considerations ........................................ 17\n   6.1.\
    \ Reverse-tunnel Hijacking and Denial-of-Service Attacks ....... 17\n   6.2. Ingress\
    \ Filtering ............................................ 18\n   6.3. Reverse Tunneling\
    \ for Disparate Address Spaces ............... 18\n   7. IANA Considerations ............................................\
    \ 18\n   8. Acknowledgements ............................................... 18\n\
    \   References ........................................................ 19\n \
    \  Editor and Chair Addresses ........................................ 20\n  \
    \ Appendix A: Disparate Address Space Support ....................... 21\n   \
    \   A.1. Scope of the Reverse Tunneling Solution ................... 21\n    \
    \  A.2. Terminating Forward Tunnels at the Foreign Agent .......... 24\n     \
    \ A.3. Initiating Reverse Tunnels at the Foreign Agent ........... 26\n      A.4.\
    \ Limited Private Address Scenario .......................... 26\n   Appendix\
    \ B: Changes from RFC2344 .................................. 29\n   Full Copyright\
    \ Statement .......................................... 30\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   Section 1.3 of the Mobile IP specification [1] lists the\
    \ following\n   assumption:\n      It is assumed that IP unicast datagrams are\
    \ routed based on the\n      destination address in the datagram header (i.e.,\
    \ not by source\n      address).\n   Because of security concerns (for example,\
    \ IP spoofing attacks), and\n   in accordance with RFC 2267 [8] and CERT [3] advisories\
    \ to this\n   effect, routers that break this assumption are increasingly more\n\
    \   common.\n   In the presence of such routers, the source and destination IP\n\
    \   address in a packet must be topologically correct.  The forward\n   tunnel\
    \ complies with this, as its endpoints (home agent address and\n   care-of address)\
    \ are properly assigned addresses for their respective\n   locations.  On the\
    \ other hand, the source IP address of a packet\n   transmitted by the mobile\
    \ node does not correspond to the network\n   prefix from where it emanates.\n\
    \   This document discusses topologically correct reverse tunnels.\n   Mobile\
    \ IP does dictate the use of reverse tunnels in the context of\n   multicast datagram\
    \ routing and mobile routers.  However, the source\n   IP address is set to the\
    \ mobile node's home address, so these tunnels\n   are not topologically correct.\n\
    \   Notice that there are several uses for reverse tunnels regardless of\n   their\
    \ topological correctness:\n      -  Mobile routers: reverse tunnels obviate the\
    \ need for recursive\n         tunneling [1].\n      -  Multicast: reverse tunnels\
    \ enable a mobile node away from home\n         to (1) join multicast groups in\
    \ its home network, and (2)\n         transmit multicast packets such that they\
    \ emanate from its home\n         network [1].\n      -  The TTL of packets sent\
    \ by the mobile node (for example, when\n         sending packets to other hosts\
    \ in its home network) may be so\n         low that they might expire before reaching\
    \ their destination.\n         A reverse tunnel solves the problem as it represents\
    \ a TTL\n         decrement of one [5].\n"
- title: 1.1. Terminology
  contents:
  - "1.1. Terminology\n   The discussion below uses terms defined in the Mobile IP\n\
    \   specification.  Additionally, it uses the following terms:\n      Forward\
    \ Tunnel\n         A tunnel that shuttles packets towards the mobile node.  It\n\
    \         starts at the home agent, and ends at the mobile node's care-of\n  \
    \       address.\n      Reverse Tunnel\n         A tunnel that starts at the mobile\
    \ node's care-of address and\n         terminates at the home agent.\n   The key\
    \ words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"\
    SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",  \"MAY\", and \"OPTIONAL\" in this\n\
    \   document are to be interpreted as described in RFC 2119 [9].\n"
- title: 1.2. Assumptions
  contents:
  - "1.2. Assumptions\n   Mobility is constrained to a common IP address space (that\
    \ is, the\n   routing fabric between, say, the mobile node and the home agent\
    \ is\n   not partitioned into a \"private\" and a \"public\" network).\n   This\
    \ document does not attempt to solve the firewall traversal\n   problem.  Rather,\
    \ it assumes one of the following is true:\n      -  There are no intervening\
    \ firewalls along the path of the\n         tunneled packets.\n      -  Any intervening\
    \ firewalls share the security association\n         necessary to process any\
    \ authentication [6] or encryption [7]\n         headers which may have been added\
    \ to the tunneled packets.\n   The reverse tunnels considered here are symmetric,\
    \ that is, they use\n   the same configuration (encapsulation method, IP address\
    \ endpoints)\n   as the forward tunnel.  IP in IP encapsulation [2] is assumed\
    \ unless\n   stated otherwise.\n   Route optimization [4] introduces forward tunnels\
    \ initiated at a\n   correspondent host.  Since a mobile node may not know if\
    \ the\n   correspondent host can decapsulate packets, reverse tunnels in that\n\
    \   context are not discussed here.\n"
- title: 1.3. Justification
  contents:
  - "1.3. Justification\n   Why not let the mobile node itself initiate the tunnel\
    \ to the home\n   agent?  This is indeed what it should do if it is already operating\n\
    \   with a topologically correct co-located care-of address.\n   However, one\
    \ of the primary objectives of the Mobile IP specification\n   is not to require\
    \ this mode of operation.\n   The mechanisms outlined in this document are primarily\
    \ intended for\n   use by mobile nodes that rely on the foreign agent for forward\
    \ tunnel\n   support.  It is desirable to continue supporting these mobile nodes,\n\
    \   even in the presence of filtering routers.\n"
- title: 2. Overview
  contents:
  - "2. Overview\n   A mobile node arrives at a foreign network, listens for agent\n\
    \   advertisements and selects a foreign agent that supports reverse\n   tunnels.\
    \  It requests this service when it registers through the\n   selected foreign\
    \ agent.  At this time, and depending on how the\n   mobile node wishes to deliver\
    \ packets to the foreign agent, it also\n   requests either the Direct or the\
    \ Encapsulating Delivery Style\n   (section 5).\n   In the Direct Delivery Style,\
    \ the mobile node designates the foreign\n   agent as its default router and proceeds\
    \ to send packets directly to\n   the foreign agent, that is, without encapsulation.\
    \  The foreign agent\n   intercepts them, and tunnels them to the home agent.\n\
    \   In the Encapsulating Delivery Style, the mobile node encapsulates all\n  \
    \ its outgoing packets to the foreign agent.  The foreign agent\n   decapsulates\
    \ and re-tunnels them to the home agent, using the foreign\n   agent's care-of\
    \ address as the entry-point of this new tunnel.\n"
- title: 3. New Packet Formats
  contents:
  - '3. New Packet Formats

    '
- title: 3.1. Mobility Agent Advertisement Extension
  contents:
  - "3.1. Mobility Agent Advertisement Extension\n    0                   1      \
    \             2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |        Sequence Number        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           Lifetime            |R|B|H|F|M|G|V|T|  reserved     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                  zero or more Care-of Addresses               |\n   |  \
    \                            ...                              |\n   The only change\
    \ to the Mobility Agent Advertisement Extension [1] is\n   the additional 'T'\
    \ bit:\n      T        Agent offers reverse tunneling service.\n   A foreign agent\
    \ that sets the 'T' bit MUST support the Direct\n   Delivery Style. Encapsulating\
    \ Delivery Style SHOULD be supported as\n   well (section 5).\n   Using this information,\
    \ a mobile node is able to choose a foreign\n   agent that supports reverse tunnels.\
    \  Notice that if a mobile node\n   does not understand this bit, it simply ignores\
    \ it as per [1].\n"
- title: 3.2. Registration Request
  contents:
  - "3.2. Registration Request\n   Reverse tunneling support is added directly into\
    \ the Registration\n   Request by using one of the \"rsvd\" bits.  If a foreign\
    \ or home agent\n   that does not support reverse tunnels receives a request with\
    \ the 'T'\n   bit set, the Registration Request fails.  This results in a\n  \
    \ registration denial (failure codes are specified in section 3.4).\n   Home agents\
    \ SHOULD NOT object to providing reverse tunnel support,\n   because they \"SHOULD\
    \ be able to decapsulate and further deliver\n   packets addressed to themselves,\
    \ sent by a mobile node\" [1].  In the\n   case of topologically correct reverse\
    \ tunnels, the packets are not\n   sent by the mobile node as distinguished by\
    \ its home address.\n   Rather, the outermost (encapsulating) IP source address\
    \ on such\n   datagrams is the care-of address of the mobile node.\n   In Registration\
    \ Requests sent by a mobile node, the Time to Live\n   field in the IP header\
    \ MUST be set to 255.  This limits a denial of\n   service attack in which malicious\
    \ hosts send false Registration\n   Requests (see Section 6).\n    0         \
    \          1                   2                   3\n    0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |S|B|D|M|G|V|T|-|          Lifetime             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Home Address                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                           Home Agent                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                        Care-of Address                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                         Identification                        |\n   |  \
    \                                                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | Extensions ...\n   +-+-+-+-+-+-+-+-\n   The only change to the Registration\
    \ Request packet is the additional\n   'T' bit:\n   T        If the 'T' bit is\
    \ set, the mobile node asks its home\n            agent to accept a reverse tunnel\
    \ from the care-of\n            address.  Mobile nodes using a foreign agent care-of\n\
    \            address ask the foreign agent to reverse-tunnel its\n           \
    \ packets.\n"
- title: 3.3. Encapsulating Delivery Style Extension
  contents:
  - "3.3. Encapsulating Delivery Style Extension\n   The Encapsulating Delivery Style\
    \ Extension MAY be included by the\n   mobile node in registration requests to\
    \ further specify reverse\n   tunneling behavior.  It is expected to be used only\
    \ by the foreign\n   agent.  Accordingly, the foreign agent MUST consume this\
    \ extension\n   (that is, it must not relay it to the home agent or include it\
    \ in\n   replies to the mobile node).  As per Section 3.6.1.3 of [1], the\n  \
    \ mobile node MUST include the Encapsulating Delivery Style Extension\n   after\
    \ the Mobile-Home Authentication Extension, and before the\n   Mobile-Foreign\
    \ Authentication Extension, if present.\n   The Encapsulating Delivery Style Extension\
    \ MUST NOT be included if\n   the 'T' bit is not set in the Registration Request.\n\
    \   If this extension is absent, Direct Delivery is assumed.\n   Encapsulation\
    \ is done according to what was negotiated for the\n   forward tunnel (that is,\
    \ IP in IP is assumed unless specified\n   otherwise).  For more details on the\
    \ delivery styles, please refer to\n   section 5.\n   Foreign agents SHOULD support\
    \ the Encapsulating Delivery Style\n   Extension.\n    0                   1\n\
    \    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n \
    \  |     Type      |     Length    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n \
    \     Type\n         130\n      Length\n         0\n"
- title: 3.4. New Registration Reply Codes
  contents:
  - "3.4. New Registration Reply Codes\n   Foreign and home agent registration replies\
    \ MUST convey if the\n   reverse tunnel request failed.  These new reply codes\
    \ are defined:\n      Service denied by the foreign agent:\n      74 requested\
    \ reverse tunnel unavailable\n      75 reverse tunnel is mandatory and 'T' bit\
    \ not set\n      76 mobile node too distant\n      79 delivery style not supported\n\
    \      NOTE: Code 79 has not yet been assigned by IANA.\n   and\n      Service\
    \ denied by the home agent:\n      137 requested reverse tunnel unavailable\n\
    \      138 reverse tunnel is mandatory and 'T' bit not set\n      139 requested\
    \ encapsulation unavailable\n   In response to a Registration Request with the\
    \ 'T' bit set, mobile\n   nodes may receive (and MUST accept) code 70 (poorly\
    \ formed request)\n   from foreign agents and code 134 (poorly formed request)\
    \ from home\n   agents.  However, foreign and home agents that support reverse\n\
    \   tunneling MUST use codes 74 and 137, respectively.\n   In addition to setting\
    \ the 'T' bit, the mobile node also MAY request\n   the Encapsulating Delivery\
    \ Style by including the corresponding\n   extension.  If a foreign agent does\
    \ not implement the Encapsulating\n   Delivery Style, it MUST respond to the mobile\
    \ node with code 79\n   (delivery style not supported).  This also applies if\
    \ the foreign\n   agent does not support a requested delivery style that may be\
    \ defined\n   in the future.\n   Absence of the 'T' bit in a Registration Request\
    \ MAY elicit denials\n   with codes 75 and 138 at the foreign agent and the home\
    \ agent,\n   respectively.\n   Forward and reverse tunnels are symmetric, that\
    \ is, both are able to\n   use the same tunneling options negotiated at registration.\
    \  This\n   implies that the home agent MUST deny registrations if an unsupported\n\
    \   form of tunneling is requested (code 139).  Notice that Mobile IP [1]\n  \
    \ already defines the analogous failure code 72 for use by the foreign\n   agent.\n"
- title: 4. Changes in Protocol Behavior
  contents:
  - "4. Changes in Protocol Behavior\n   Unless otherwise specified, behavior specified\
    \ by Mobile IP [1] is\n   assumed.  In particular, if any two entities share a\
    \ mobility\n   security association, they MUST use the appropriate Authentication\n\
    \   Extension (Mobile-Foreign, Foreign-Home or Mobile-Home Authentication\n  \
    \ Extension) when exchanging registration protocol datagrams.  An\n   admissible\
    \ authentication extension (for example the Mobile-Home\n   Authentication Extension)\
    \ MUST always be present to authenticate\n   registration messages between a mobile\
    \ node and its home agent.\n   Reverse tunneling imposes additional protocol processing\
    \ requirements\n   on mobile entities.  Differences in protocol behavior with\
    \ respect to\n   Mobile IP [1] are specified in the subsequent sections.\n"
- title: 4.1. Mobile Node Considerations
  contents:
  - "4.1. Mobile Node Considerations\n   This section describes how the mobile node\
    \ handles registrations that\n   request a reverse tunnel.\n"
- title: 4.1.1. Sending Registration Requests to the Foreign Agent
  contents:
  - "4.1.1. Sending Registration Requests to the Foreign Agent\n   In addition to\
    \ the considerations in [1], a mobile node sets the 'T'\n   bit in its Registration\
    \ Request to petition a reverse tunnel.\n   The mobile node MUST set the TTL field\
    \ of the IP header to 255.  This\n   is meant to limit the reverse tunnel hijacking\
    \ attack (Section 6).\n   The mobile node MAY optionally include an Encapsulating\
    \ Delivery\n   Style Extension.\n"
- title: 4.1.2. Receiving Registration Replies from the Foreign Agent
  contents:
  - "4.1.2. Receiving Registration Replies from the Foreign Agent\n   Possible valid\
    \ responses are:\n      -  A registration denial issued by either the home agent\
    \ or the\n         foreign agent:\n         a. The mobile node follows the error\
    \ checking guidelines in\n            [1], and depending on the reply code, MAY\
    \ try modifying the\n            registration request (for example, by eliminating\
    \ the\n            request for alternate forms of encapsulation or delivery\n\
    \            style), and issuing a new registration.\n         b. Depending on\
    \ the reply code, the mobile node MAY try zeroing\n            the 'T' bit, eliminating\
    \ the Encapsulating Delivery Style\n            Extension (if one was present),\
    \ and issuing a new\n            registration.  Notice that after doing so the\
    \ registration\n            may succeed, but due to the lack of a reverse tunnel\
    \ data\n            transfer may not be possible.\n      -  The home agent returns\
    \ a Registration Reply indicating that the\n         service will be provided.\n\
    \   In this last case, the mobile node has succeeded in establishing a\n   reverse\
    \ tunnel between its care-of address and its home agent.  If\n   the mobile node\
    \ is operating with a co-located care-of address, it\n   MAY encapsulate outgoing\
    \ data such that the destination address of\n   the outer header is the home agent.\
    \  This ability to selectively\n   reverse-tunnel packets is discussed further\
    \ in section 5.4.\n   If the care-of address belongs to a separate foreign agent,\
    \ the\n   mobile node MUST employ whatever delivery style was requested (Direct\n\
    \   or Encapsulating) and proceed as specified in section 5.\n   A successful\
    \ registration reply is an assurance that both the foreign\n   agent and the home\
    \ agent support whatever alternate forms of\n   encapsulation (other than IP in\
    \ IP) were requested.  Accordingly, the\n   mobile node MAY use them at its discretion.\n"
- title: 4.2. Foreign Agent Considerations
  contents:
  - "4.2. Foreign Agent Considerations\n   This section describes how the foreign\
    \ agent handles registrations\n   that request a reverse tunnel.\n"
- title: 4.2.1. Receiving Registration Requests from the Mobile Node
  contents:
  - "4.2.1. Receiving Registration Requests from the Mobile Node\n   A foreign agent\
    \ that receives a Registration Request with the 'T' bit\n   set processes the\
    \ packet as specified in the Mobile IP specification\n   [1], and determines whether\
    \ it can accommodate the forward tunnel\n   request.  If it cannot, it returns\
    \ an appropriate code.  In\n   particular, if the foreign agent is unable to support\
    \ the requested\n   form of encapsulation it MUST return code 72.  If it cannot\
    \ support\n   the requested form of delivery style it MUST return code 79 (delivery\n\
    \   style not supported).\n   The foreign agent MAY reject Registration Requests\
    \ without the 'T'\n   bit set by denying them with code 75 (reverse tunnel is\
    \ mandatory and\n   'T' bit not set).\n   The foreign agent MUST verify that the\
    \ TTL field of the IP header is\n   set to 255.  Otherwise, it MUST reject the\
    \ registration with code 76\n   (mobile node too distant).  The foreign agent\
    \ MUST limit the rate at\n   which it sends these registration replies to a maximum\
    \ of one per\n   second.\n   As a last check, the foreign agent verifies that\
    \ it can support a\n   reverse tunnel with the same configuration.  If it cannot,\
    \ it MUST\n   return a Registration Reply denying the request with code 74\n \
    \  (requested reverse tunnel unavailable).\n"
- title: 4.2.2. Relaying Registration Requests to the Home Agent
  contents:
  - "4.2.2. Relaying Registration Requests to the Home Agent\n   Otherwise, the foreign\
    \ agent MUST relay the Registration Request to\n   the home agent.\n   Upon receipt\
    \ of a Registration Reply that satisfies validity checks,\n   the foreign agent\
    \ MUST update its visitor list, including indication\n   that this mobile node\
    \ has been granted a reverse tunnel and the\n   delivery style expected (section\
    \ 5).\n   While this visitor list entry is in effect, the foreign agent MUST\n\
    \   process incoming traffic according to the delivery style, encapsulate\n  \
    \ it and tunnel it from the care-of address to the home agent's\n   address.\n"
- title: 4.3. Home Agent Considerations
  contents:
  - "4.3. Home Agent Considerations\n   This section describes how the home agent\
    \ handles registrations that\n   request a reverse tunnel.\n"
- title: 4.3.1. Receiving Registration Requests from the Foreign Agent
  contents:
  - "4.3.1. Receiving Registration Requests from the Foreign Agent\n   A home agent\
    \ that receives a Registration Request with the 'T' bit\n   set processes the\
    \ packet as specified in the Mobile IP specification\n   [1] and determines whether\
    \ it can accommodate the forward tunnel\n   request.  If it cannot, it returns\
    \ an appropriate code.  In\n   particular, if the home agent is unable to support\
    \ the requested form\n   of encapsulation it MUST return code 139 (requested encapsulation\n\
    \   unavailable).\n   The home agent MAY reject registration requests without\
    \ the 'T' bit\n   set by denying them with code 138 (reverse tunnel is mandatory\
    \ and '\n   T' bit not set).\n   As a last check, the home agent determines whether\
    \ it can support a\n   reverse tunnel with the same configuration as the forward\
    \ tunnel.  If\n   it cannot, it MUST send back a registration denial with code\
    \ 137\n   (requested reverse tunnel unavailable).\n   Upon receipt of a Registration\
    \ Reply that satisfies validity checks,\n   the home agent MUST update its mobility\
    \ bindings list to indicate\n   that this mobile node has been granted a reverse\
    \ tunnel and the type\n   of encapsulation expected.\n"
- title: 4.3.2. Sending Registration Replies to the Foreign Agent
  contents:
  - "4.3.2. Sending Registration Replies to the Foreign Agent\n   In response to a\
    \ valid Registration Request, a home agent MUST issue\n   a Registration Reply\
    \ to the mobile node.\n   After a successful registration, the home agent may\
    \ receive\n   encapsulated packets addressed to itself.  Decapsulating such packets\n\
    \   and blindly injecting them into the network is a potential security\n   weakness\
    \ (section 6.1).  Accordingly, the home agent MUST implement,\n   and, by default,\
    \ SHOULD enable the following check for encapsulated\n   packets addressed to\
    \ itself:\n      The home agent searches for a mobility binding whose care-of\n\
    \      address is the source of the outer header, and whose mobile node\n    \
    \  address is the source of the inner header.\n   If no such binding is found,\
    \ or if the packet uses an encapsulation\n   mechanism that was not negotiated\
    \ at registration the home agent MUST\n   silently discard the packet and SHOULD\
    \ log the event as a security\n   exception.\n   Home agents that terminate tunnels\
    \ unrelated to Mobile IP (for\n   example, multicast tunnels) MAY turn off the\
    \ above check, but this\n   practice is discouraged for the aforementioned reasons.\n\
    \   While the registration is in effect, a home agent MUST process each\n   valid\
    \ reverse tunneled packet (as determined by checks like the\n   above) by decapsulating\
    \ it, recovering the original packet, and then\n   forwarding it on behalf of\
    \ its sender (the mobile node) to the\n   destination address (the correspondent\
    \ host).\n"
- title: 5. Mobile Node to Foreign Agent Delivery Styles
  contents:
  - "5. Mobile Node to Foreign Agent Delivery Styles\n   This section specifies how\
    \ the mobile node sends its data traffic via\n   the foreign agent.  In all cases,\
    \ the mobile node learns the foreign\n   agent's link-layer address from the link-layer\
    \ header in the agent\n   advertisement.\n"
- title: 5.1. Direct Delivery Style
  contents:
  - "5.1. Direct Delivery Style\n   This delivery mechanism is very simple to implement\
    \ at the mobile\n   node, and uses small (non-encapsulated) packets on the link\
    \ between\n   the mobile node and the foreign agent (potentially a very slow link).\n\
    \   However, it only supports reverse-tunneling of unicast packets, and\n   does\
    \ not allow selective reverse tunneling (section 5.4).\n"
- title: 5.1.1. Packet Processing
  contents:
  - "5.1.1. Packet Processing\n   The mobile node MUST designate the foreign agent\
    \ as its default\n   router.  Not doing so will not guarantee encapsulation of\
    \ all the\n   mobile node's outgoing traffic, and defeats the purpose of the\n\
    \   reverse tunnel.  The foreign agent MUST:\n      -  detect packets sent by\
    \ the mobile node, and\n      -  modify its forwarding function to encapsulate\
    \ them before\n         forwarding.\n"
- title: 5.1.2. Packet Header Format and Fields
  contents:
  - "5.1.2. Packet Header Format and Fields\n   This section shows the format of the\
    \ packet headers used by the\n   Direct Delivery style.  The formats shown assume\
    \ IP in IP\n   encapsulation [2].\n   Packet format received by the foreign agent\
    \ (Direct Delivery Style):\n      IP fields:\n        Source Address = mobile\
    \ node's home address\n        Destination Address = correspondent host's address\n\
    \      Upper Layer Protocol\n   Packet format forwarded by the foreign agent (Direct\
    \ Delivery Style):\n      IP fields (encapsulating header):\n        Source Address\
    \ = foreign agent's care-of address\n        Destination Address = home agent's\
    \ address\n        Protocol field: 4 (IP in IP)\n      IP fields (original header):\n\
    \        Source Address = mobile node's home address\n        Destination Address\
    \ = correspondent host's address\n      Upper Layer Protocol\n   These fields\
    \ of the encapsulating header MUST be chosen as follows:\n      IP Source Address\n\
    \         Copied from the Care-of Address field within the Registration\n    \
    \     Request.\n      IP Destination Address\n         Copied from the Home Agent\
    \ field within the most recent\n         successful Registration Reply.\n    \
    \  IP Protocol Field\n         Default is 4 (IP in IP [2]), but other methods\
    \ of encapsulation\n         MAY be used as negotiated at registration time.\n"
- title: 5.2. Encapsulating Delivery Style
  contents:
  - "5.2. Encapsulating Delivery Style\n   This mechanism requires that the mobile\
    \ node implement encapsulation,\n   and explicitly directs packets at the foreign\
    \ agent by designating it\n   as the destination address in a new outermost header.\
    \  Mobile nodes\n   that wish to send either broadcast or multicast packets MUST\
    \ use the\n   Encapsulating Delivery Style.\n"
- title: 5.2.1 Packet Processing
  contents:
  - "5.2.1 Packet Processing\n   The foreign agent does not modify its forwarding\
    \ function.  Rather,\n   it receives an encapsulated packet and after verifying\
    \ that it was\n   sent by the mobile node, it:\n      -  decapsulates to recover\
    \ the inner packet,\n      -  re-encapsulates, and sends it to the home agent.\n\
    \   If a foreign agent receives an un-encapsulated packet from a mobile\n   node\
    \ which had explicitly requested the Encapsulated Delivery Style,\n   then the\
    \ foreign agent MUST NOT reverse tunnel such a packet and\n   rather MUST forward\
    \ it using standard, IP routing mechanisms.\n"
- title: 5.2.2. Packet Header Format and Fields
  contents:
  - "5.2.2. Packet Header Format and Fields\n   This section shows the format of the\
    \ packet headers used by the\n   Encapsulating Delivery style.  The formats shown\
    \ assume IP in IP\n   encapsulation [2].\n   Packet format received by the foreign\
    \ agent (Encapsulating Delivery\n   Style):\n      IP fields (encapsulating header):\n\
    \        Source Address = mobile node's home address\n        Destination Address\
    \ = foreign agent's address\n        Protocol field: 4 (IP in IP)\n      IP fields\
    \ (original header):\n        Source Address = mobile node's home address\n  \
    \      Destination Address = correspondent host's address\n      Upper Layer Protocol\n\
    \   The fields of the encapsulating IP header MUST be chosen as follows:\n   \
    \   IP Source Address\n         The mobile node's home address.\n      IP Destination\
    \ Address\n         The address of the agent as learned from the IP source address\n\
    \         of the agent's most recent successful registration reply.\n      IP\
    \ Protocol Field\n         Default is 4 (IP in IP [2]), but other methods of encapsulation\n\
    \         MAY be used as negotiated at registration time.\n   Packet format forwarded\
    \ by the foreign agent (Encapsulating Delivery\n   Style):\n      IP fields (encapsulating\
    \ header):\n        Source Address = foreign agent's care-of address\n       \
    \ Destination Address = home agent's address\n        Protocol field: 4 (IP in\
    \ IP)\n      IP fields (original header):\n        Source Address = mobile node's\
    \ home address\n        Destination Address = correspondent host's address\n \
    \     Upper Layer Protocol\n   These fields of the encapsulating IP header MUST\
    \ be chosen as\n   follows:\n      IP Source Address\n         Copied from the\
    \ Care-of Address field within the Registration\n         Request.\n      IP Destination\
    \ Address\n         Copied from the Home Agent field within the most recent\n\
    \         successful Registration Reply.\n      IP Protocol Field\n         Default\
    \ is 4 (IP in IP [2]), but other methods of encapsulation\n         MAY be used\
    \ as negotiated at registration time.\n"
- title: 5.3. Support for Broadcast and Multicast Datagrams
  contents:
  - "5.3. Support for Broadcast and Multicast Datagrams\n   If a mobile node is operating\
    \ with a co-located care-of address,\n   broadcast and multicast datagrams are\
    \ handled according to Sections\n   4.3 and 4.4 of the Mobile IP specification\
    \ [1].  Mobile nodes using a\n   foreign agent care-of address MAY have their\
    \ broadcast and multicast\n   datagrams reverse-tunneled by the foreign agent.\
    \  However, any mobile\n   nodes doing so MUST use the encapsulating delivery\
    \ style.\n   This delivers the datagram only to the foreign agent.  The latter\n\
    \   decapsulates it and then processes it as any other packet from the\n   mobile\
    \ node, namely, by reverse tunneling it to the home agent.\n"
- title: 5.4. Selective Reverse Tunneling
  contents:
  - "5.4. Selective Reverse Tunneling\n   Packets destined to local resources (for\
    \ example, a nearby printer)\n   might be unaffected by ingress filtering.  A\
    \ mobile node with a co-\n   located care-of address MAY optimize delivery of\
    \ these packets by not\n   reverse tunneling them.  On the other hand, a mobile\
    \ node using a\n   foreign agent care-of address MAY use this selective reverse\n\
    \   tunneling capability by requesting the Encapsulating Delivery Style,\n   and\
    \ following these guidelines:\n      Packets NOT meant to be reversed tunneled:\n\
    \         Sent using the Direct Delivery style.  The foreign agent MUST\n    \
    \     process these packets as regular traffic:  they MAY be\n         forwarded\
    \ but MUST NOT be reverse tunneled to the home agent.\n      Packets meant to\
    \ be reverse tunneled:\n         Sent using the Encapsulating Delivery style.\
    \  The foreign agent\n         MUST process these packets as specified in section\
    \ 5.2: they\n         MUST be reverse tunneled to the home agent.\n"
- title: 6. Security Considerations
  contents:
  - "6. Security Considerations\n   The extensions outlined in this document are subject\
    \ to the security\n   considerations outlined in the Mobile IP specification [1].\n\
    \   Essentially, creation of both forward and reverse tunnels involves an\n  \
    \ authentication procedure, which reduces the risk for attack.\n"
- title: 6.1. Reverse-tunnel Hijacking and Denial-of-Service Attacks
  contents:
  - "6.1. Reverse-tunnel Hijacking and Denial-of-Service Attacks\n   Once the tunnel\
    \ is set up, a malicious node could hijack it to inject\n   packets into the network.\
    \  Reverse tunnels might exacerbate this\n   problem, because upon reaching the\
    \ tunnel exit point packets are\n   forwarded beyond the local network.  This\
    \ concern is also present in\n   the Mobile IP specification, as it already dictates\
    \ the use of\n   reverse tunnels for certain applications.\n   Unauthenticated\
    \ exchanges involving the foreign agent allow a\n   malicious node to pose as\
    \ a valid mobile node and re-direct an\n   existing reverse tunnel to another\
    \ home agent, perhaps another\n   malicious node.  The best way to protect against\
    \ these attacks is by\n   employing the Mobile-Foreign and Foreign-Home Authentication\n\
    \   Extensions defined in [1].\n   If the necessary mobility security associations\
    \ are not available,\n   this document introduces a mechanism to reduce the range\
    \ and\n   effectiveness of the attacks.  The mobile node MUST set to 255 the\n\
    \   TTL value in the IP headers of Registration Requests sent to the\n   foreign\
    \ agent.  This prevents malicious nodes more than one hop away\n   from posing\
    \ as valid mobile nodes.  Additional codes for use in\n   registration denials\
    \ make those attacks that do occur easier to\n   track.\n   With the goal of further\
    \ reducing the attacks the Mobile IP Working\n   Group considered other mechanisms\
    \ involving the use of\n   unauthenticated state.  However, these introduce the\
    \ possibilities of\n   denial-of-service attacks.  The consensus was that this\
    \ was too much\n   of a trade-off for mechanisms that guarantee no more than weak\
    \ (non-\n   cryptographic) protection against attacks.\n"
- title: 6.2. Ingress Filtering
  contents:
  - "6.2. Ingress Filtering\n   There has been some concern regarding the long-term\
    \ effectiveness of\n   reverse-tunneling in the presence of ingress filtering.\
    \  The\n   conjecture is that network administrators will target reverse-\n  \
    \ tunneled packets (IP in IP encapsulated packets) for filtering.  The\n   ingress\
    \ filtering recommendation spells out why this is not the case\n   [8]:\n    \
    \  Tracking the source of an attack is simplified when the source is\n      more\
    \ likely to be \"valid.\"\n"
- title: 6.3. Reverse Tunneling for Disparate Address Spaces
  contents:
  - "6.3. Reverse Tunneling for Disparate Address Spaces\n   There are security implications\
    \ involved with the foreign agent's\n   using link-layer information to select\
    \ the proper reverse tunnel for\n   mobile node packets (section A.3).  Unauthenticated\
    \ link-layers allow\n   a malicious mobile node to misuse another's existing reverse\
    \ tunnel,\n   and inject packets into the network.\n   For this solution to be\
    \ viable, the link-layer MUST securely\n   authenticate traffic received by the\
    \ foreign agent from the mobile\n   nodes.  Unauthenticated link-layer technologies\
    \ (for example shared\n   ethernet) are not recommended to implement disparate\
    \ address support.\n"
- title: 7. IANA Considerations
  contents:
  - "7. IANA Considerations\n   The Encapsulating Delivery Style extension defined\
    \ in section 3.3 is\n   a Mobile IP registration extension as defined in [1].\
    \  IANA assigned\n   the value of 130 for this purpose at the time of the publication\
    \ of\n   RFC 2344.\n   The Code values defined in section 3.4 are error codes\
    \ as defined in\n   [1].  They correspond to error values associated with rejection\
    \ by\n   the home and foreign agents.  At the time of the publication of RFC\n\
    \   2344, IANA assigned codes 74-76 for the foreign agent rejections and\n   codes\
    \ 137-139 for the home agent rejections.  The code for 'delivery\n   style not\
    \ supported' has been assigned a value of 79 by the IANA for\n   this purpose.\n"
- title: 8. Acknowledgements
  contents:
  - "8. Acknowledgements\n   The encapsulating style of delivery was proposed by Charlie\
    \ Perkins.\n   Jim Solomon has been instrumental in shaping this document into\
    \ its\n   present form.  Thanks to Samita Chakrabarti for helpful comments on\n\
    \   disparate address space support, and for most of the text in section\n   A.4.\n"
- title: References
  contents:
  - "References\n   [1]  Perkins, C., \"IP Mobility Support\", RFC 2002, October 1996.\n\
    \   [2]  Perkins, C., \"IP Encapsulation within IP\", RFC 2003, October\n    \
    \    1996.\n   [3]  Computer Emergency Response Team (CERT), \"IP Spoofing Attacks\n\
    \        and Hijacked Terminal Connections\", CA-95:01, January 1995.\n      \
    \  Available via anonymous ftp from info.cert.org in\n        /pub/cert_advisories.\n\
    \   [4]  Perkins, C. and D. Johnson, \"Route Optimization in Mobile IP\",\n  \
    \      Work in Progress.\n   [5]  Manuel Rodriguez, private communication, August\
    \ 1995.\n   [6]  Kent, S. and R. Atkinson, \"IP Authentication Header\", RFC 2402,\n\
    \        November 1998.\n   [7]  Kent, S. and R. Atkinson, \"IP Encapsulating\
    \ Payload\", RFC 2406,\n        November 1998.\n   [8]  Ferguson, P. and D. Senie,\
    \ \"Network Ingress Filtering: Defeating\n        Denial of Service Attacks which\
    \ employ IP Source Address\n        Spoofing\", RFC 2267, January 1998.\n   [9]\
    \  Bradner, S., \"Key words for use in RFCs to Indicate Requirement\n        Levels\"\
    , BCP 14, RFC 2119, March 1997.\n   [10] Farinacci, D., Li, T., Hanks, S., Meyer,\
    \ D. and P. Traina,\n        \"Generic Routing Encapsulation (GRE)\", RFC 2784,\
    \ March 2000.\n   [11] Aboba, B. and M. Beadles, \"The Network Access Identifier\"\
    , RFC\n        2486, January 1999.\n   [12] Rekhter, Y., Moskowitz, B., Karrenberg,\
    \ D., de Groot, G.J. and\n        E. Lear, \"Address Allocation for Private Internets\"\
    , BCP 5, RFC\n        1918, February 1996.\n   [13] Dommety, G., \"Key and Sequence\
    \ Number Extensions to GRE\", RFC\n        2890, August 2000.\n"
- title: Editor and Chair Addresses
  contents:
  - "Editor and Chair Addresses\n   Questions about this document may be directed\
    \ at:\n   Gabriel E. Montenegro\n   Sun Microsystems\n   Laboratories, Europe\n\
    \   29, chemin du Vieux Chene\n   38240 Meylan\n   FRANCE\n   Phone: +33 476 18\
    \ 80 45\n   EMail: gab@sun.com\n   The working group can be contacted via the\
    \ current chairs:\n   Basavaraj Patil\n   Nokia Networks\n   6000 Connection Drive\n\
    \   Irving, TX 75039\n   USA\n   Phone:  +1 972-894-6709\n   Fax :   +1 972-894-5349\n\
    \   EMail:  Raj.Patil@nokia.com\n   Phil Roberts\n   Motorola\n   1501 West Shure\
    \ Drive\n   Arlington Heights, IL 60004\n   USA\n   Phone:  +1 847-632-3148\n\
    \   EMail:  QA3445@email.mot.com\n"
- title: 'Appendix A: Disparate Address Space Support'
  contents:
  - "Appendix A: Disparate Address Space Support\n   Mobile IP [1] assumes that all\
    \ the entities involved (mobile\n   node, foreign agent and home agent) have addresses\
    \ within the\n   same globally routable address space.  In many deployment\n \
    \  scenarios, when a mobile node leaves its home network it may\n   wander into\
    \ a region where its home address is not routable or\n   known by the local routing\
    \ fabric.  Similarly, the IP addresses\n   of the foreign agent and the home agent\
    \ may belong to disparate\n   address spaces, which precludes their exchanging\
    \ registration\n   protocol messages directly.  These issues are possible\n  \
    \ particularly if the entities involved use addresses from the\n   ranges specified\
    \ in RFC1918 [12] to support private networks.\n   Accurately speaking, the use\
    \ of private addresses is not the\n   only cause.  It may, in fact, be the most\
    \ common, but the root of\n   the problem lies in the use of disparate address\
    \ spaces.  For\n   example, corporations often have several properly allocated\n\
    \   address ranges.  They typically advertise reachability to only a\n   subset\
    \ of those ranges, leaving the others for use exclusively\n   within the corporate\
    \ network.  Since these ranges are not\n   routable in the general Internet, their\
    \ use leads to the same\n   problems encountered with \"private\" addresses, even\
    \ though they\n   are not taken from the ranges specified in RFC1918.\n   Even\
    \ if the mobile node, home agent and foreign agent all reside\n   within the same\
    \ address space, problems may arise if the\n   correspondent node does not.  However,\
    \ this problem is not\n   specific to Mobile IP, and is beyond the scope of this\n\
    \   document.  The next section limits even further the scope of the\n   issues\
    \ relevant to this document.  A subsequent section explains\n   how reverse tunneling\
    \ may be used to tackle them.\n"
- title: A.1. Scope of the Reverse Tunneling Solution
  contents:
  - "A.1. Scope of the Reverse Tunneling Solution\n   Reverse tunneling (as defined\
    \ in this document) may be used to\n   cope with disparate address spaces, within\
    \ the following\n   constraints:\n      -  There are no provisions to solve the\
    \ case in which the\n         correspondent node and the mobile node are in disparate\n\
    \         address spaces.  This limits the scope of the problem to\n         only\
    \ those issues specific to Mobile IP.\n      -  The foreign agent and the home\
    \ agent are directly reachable\n         to each other by virtue of residing in\
    \ the same address\n         space.  This limits the scope of the problem to only\
    \ the\n         simplest of cases.  This also implies that the registration\n\
    \         protocol itself has a direct path between the foreign\n         agent\
    \ and the home agent, and, in this respect, is not\n         affected by disparate\
    \ address spaces.  This restriction\n         also applies to mobile nodes operating\
    \ with a co-located\n         care-of address.  In this case, reverse tunneling\
    \ is a\n         complete and elegant solution.\n      -  There are no additional\
    \ protocol elements beyond those\n         defined by Mobile IP [1] and reverse\
    \ tunneling.  In\n         particular, additional extensions to the registration\n\
    \         requests or replies, or additional bits in the\n         header--although\
    \ potentially useful--are outside the scope\n         of this document.\n   In\
    \ spite of the limitations, reverse tunneling may be used to\n   solve the most\
    \ common issues.  The range of problems that can be\n   solved are best understood\
    \ by looking at some simple diagrams:\n   Figure A1: NON-ROUTABLE PACKETS IN DISPARATE\
    \ ADDRESS SPACES\n      Mc               Fa  Fb              Hb  Hc          \
    \   Yc\n   [MN]-----------------[FA]----------------[HA]---------------[Y]\n \
    \       Addr space A          Addr space B       Addr space C\n   In this diagram,\
    \ there are three disparate address spaces:  A, B and\n   C.  The home agent (HA)\
    \ has one address each on address spaces B and\n   C, and the foreign agent (FA),\
    \ on address spaces A and B.  The mobile\n   node's (MN) has a permanent address,\
    \ Mc, within address space C.\n   In the most common scenario both A and C are\
    \ \"private\" address\n   spaces, and B is the public Internet.\n   Suppose MN\
    \ sends a packet to correspondent node (Y) in its home\n   network.  Presumably,\
    \ MN has no difficulties delivering this packet\n   to the FA, because it does\
    \ so using layer 2 mechanisms.  Somehow, the\n   FA must realize that this packet\
    \ must be reverse tunneled, and it\n   must fetch the proper binding to do so.\
    \  Possible mechanisms are\n   outlined in section A.3.\n   However, once the\
    \ packet is in address space B it becomes non-\n   routable.  Note that ingress\
    \ filtering only exacerbates the problem,\n   because it adds a requirement of\
    \ topological significance to the\n   source IP address in addition to the that\
    \ of the destination address.\n   As Mobile IP matures, others entities may be\
    \ defined (for example,\n   AAA servers).  Their addition places even more requirements\
    \ on the\n   address spaces in use.\n   Reverse tunneling adds a topologically\
    \ significant IP header to the\n   packet (source IP address of Fb, destination\
    \ of Hb) during its\n   transit within address space B.  Assuming IP in IP encapsulation\n\
    \   (although others, like GRE are also possible), this is what the\n   packet\
    \ looks like:\n      Figure A2: IP IN IP REVERSE TUNNELED PACKET FROM FA TO HA\n\
    \                        +-----------------+\n                        |      \
    \  +-------+|\n                        | Fb->Hb | Mc->Yc||\n                 \
    \       |        +-------+|\n                        +--------+--------+\n   HA\
    \ receives this packet, recovers the original packet, and since it\n   is cognizant\
    \ of address space C, delivers it to the appropriate\n   interface.\n   Of course,\
    \ for this to happen, the care-of address registered by the\n   MN is not the\
    \ usual Fa, but Fb.  How this happens is outside the\n   scope of this document.\
    \  Some possible mechanisms are:\n      -  FA recognizes mobile nodes whose addresses\
    \ fall within the\n         private address ranges specified by RFC1918.  In this\
    \ case, the\n         foreign agent could force the use of Fb as the care-of address,\n\
    \         perhaps by rejecting the initial registration request with an\n    \
    \     appropriate error message and supplemental information.\n      -  FA could\
    \ be configured to always advertise Fb as long as H->Fb\n         and Fb->H are\
    \ guaranteed to be valid forward and reverse\n         tunnels, respectively,\
    \ for all values of H.  Here, H is the\n         address of any home agent whose\
    \ mobile nodes may register via\n         FA.\n      -  FA could indicate that\
    \ it supports disparate address spaces via\n         a currently undefined 'P'\
    \ bit in its advertisements, and an\n         indication of the relevant address\
    \ space for any or all of its\n         care-of addressed by including an NAI\
    \ [11] or a realm indicator\n         (perhaps a variant of the NAI).  Alternatively,\
    \ mobile nodes so\n         configured could solicit the NAI or realm indicator\
    \ information\n         in response to advertisements with the 'P' bit set.\n\
    \   Additionally, the mobile node needs to supply the appropriate address\n  \
    \ for its home agent: Hb instead of the usual Hc.  How this happens is\n   outside\
    \ the scope of this document.  Some possible mechanisms are:\n      -  This determination\
    \ could be triggered in response to using the\n         foreign agent's Fb as\
    \ the care-of address.\n      -  The mobile node could always use Hb as its home\
    \ agent address,\n         specially (1) if Hb is routable within address space\
    \ C, or (2)\n         if MN is certain never to be at home (in some configurations,\n\
    \         the mobile nodes are always roaming).\n      -  The mobile node could\
    \ be configured with different home agent\n         addresses and their corresponding\
    \ address space (perhaps\n         indicated via an NAI [11] or a variant of it).\n\
    \   Another major issue introduced by private addresses is that of two or\n  \
    \ more mobile nodes with the same numeric IP address:\n      Figure A3: MOBILE\
    \ NODES WITH CONFLICTING ADDRESSES\n               Mc=M             H1b     H1c\n\
    \          [MN1]-------+      +----[HA1]----+---------\n                     \
    \ |      |             | Address\n                      |      |             |\
    \ space C\n         Address      |      |   Address   +----------\n         Space\
    \       Fa-[FA]-Fb  Space\n         A            |      |   B         +---------\n\
    \                      |      |             | Address\n                      |\
    \      |             | space D\n          [MN2]-------+      +----[HA2]----+---------\n\
    \               Md=M            H2b     H2d\n   Suppose there are two address\
    \ spaces A and B, and a foreign agent\n   (FA) with interfaces on both.  There\
    \ are two home agents (HA1 and\n   HA2) in address space B, with addresses H1b\
    \ and H2b, respectively.\n   Each of the home agents has an interface in a private\
    \ address space\n   in addition to address space B: HA1 has H1c on C, and HA2\
    \ has H2d on\n   D.  MN1 and MN2 are two mobile nodes with home addresses Mc and\
    \ Md,\n   corresponding to address space C and D, respectively.\n   If Mc and\
    \ Md are private addresses as defined in RFC1918, they may be\n   numerically\
    \ equivalent (both equal to M).  Because of this, the\n   foreign agent can no\
    \ longer rely on only the mobile node's home\n   address to disambiguate amongst\
    \ its different bindings.\n"
- title: A.2. Terminating Forward Tunnels at the Foreign Agent
  contents:
  - "A.2. Terminating Forward Tunnels at the Foreign Agent\n   In figure A1, suppose\
    \ the correspondent node Y sends a packet to the\n   mobile node at address Mc.\
    \  The packet is intercepted by the home\n   agent at Hc and tunneled towards\
    \ the mobile node via address Fb.\n   Once the packet reaches FA (via address\
    \ Fb), the foreign agent must\n   identify which of its registered mobile nodes\
    \ is the ultimate\n   destination for the internal packet.  In order to do so,\
    \ it needs to\n   identify the proper binding via a tuple guaranteed to be unique\
    \ among\n   all of its mobile nodes.\n   The unique tuple sufficient for demultiplexing\
    \ IP in IP packets\n   [IPIP] (protocol 4) is:\n      -  destination IP address\
    \ of the encapsulated (internal) header\n         This is mobile node MN's home\
    \ address (Mc in the above\n         example).  At first glance, it seems like\
    \ this is unique among\n         all mobile nodes, but as mentioned above, with\
    \ private\n         addresses another mobile may have an address Md numerically\n\
    \         equivalent to Mc.\n      -  source IP address of the external header\n\
    \         This, the remote end of the tunnel, is Hb in the above example.\n  \
    \    -  destination IP address of the external header\n         This, the local\
    \ end of the tunnel, is Fb in the above example.\n   The three values above are\
    \ learned from a successful registration and\n   are the mobile node's home address,\
    \ the home agent's address and the\n   care-of address.  Thus, it is possible\
    \ to identify the right binding.\n   Once FA identifies the ultimate destination\
    \ of the packet, Mc, it\n   delivers the internal packet using link layer mechanisms.\n\
    \   GRE packets [10] (protocol 47) are only handled if their Protocol\n   Type\
    \ field has a value of 0x800 (other values are outside the scope\n   of this document),\
    \ and are demultiplexed based on the same tuple as\n   IP in IP packets.  In GRE\
    \ terminology, the tuple is:\n      -  destination IP address of the payload (internal)\
    \ packet\n      -  source IP address of the delivery (external) packet\n     \
    \ -  destination IP address of the delivery (external) packet\n   Notice that\
    \ the Routing, Sequence Number, Strict Source Route and Key\n   fields have been\
    \ deprecated from GRE [10].  However, a separate\n   document specifies their\
    \ use [13].\n   The above tuples work for IP-in-IP or GRE encapsulation, and assume\n\
    \   that the inner packet is in the clear.  Encapsulations which encrypt\n   the\
    \ inner packet header are outside the scope of this document.\n"
- title: A.3. Initiating Reverse Tunnels at the Foreign Agent
  contents:
  - "A.3. Initiating Reverse Tunnels at the Foreign Agent\n   In figure A3, suppose\
    \ mobile node M1 sends a packet to a\n   correspondent node in its home address\
    \ space, C, and mobile node M2\n   sends a packet to a correspondent node in its\
    \ home address space, D.\n   At FA, the source addresses for both packets will\
    \ be seen as M, thus\n   this is not sufficient information.  The unique tuple\
    \ required to\n   identify the proper binding is:\n      -  link-layer information\
    \ related to the MN\n         This may be in the form of a MAC address, a PPP\
    \ session (or\n         incoming interface) or channel coding for a digital cellular\n\
    \         service.  Device ID's can also be used in this context.\n      -  source\
    \  IP address of the IP header.\n         As was pointed out, this by itself is\
    \ not guaranteed to be\n         unique.\n   This information must be established\
    \ and recorded at registration\n   time.  The above items are sufficient for the\
    \ foreign agent to select\n   the proper binding to use.  This, in turn, produces\
    \ the address of\n   the home agent, and the reverse tunneling options negotiated\
    \ during\n   the registration process.  The foreign agent can now proceed with\n\
    \   reverse tunneling.\n"
- title: A.4. Limited Private Address Scenario
  contents:
  - "A.4. Limited Private Address Scenario\n   The Limited Private Address Scenario\
    \ (LPAS) has received much\n   attention from the cellular wireless industry,\
    \ so it is useful to\n   define it and to clarify what its requirements are.\n\
    \   LPAS is a subset of the disparate address space scenario discussed in\n  \
    \ this appendix.  This section explains how LPAS could be deployed\n   given the\
    \ current state of the Mobile IP specifications.\n           Figure A4: EXAMPLE\
    \ PRIVATE ADDRESS SCENARIO\n        10.10.1.2\n       +----+                IF1=COA1+-------+\
    \    HAA2 +-----+\n       | MN1|------------------------|  FA   |---------| HA2\
    \ |\n       +----+           +------------|       |         +-----+\n        \
    \                |    IF2=COA2+-------+\n                    +---+           \
    \    |\n                    |                   |\n                 +-----+  \
    \              |\n                 | MN2 |                |\n                \
    \ +-----+                |\n                  10.10.1.2             |\n      \
    \                                  | HAA1\n                                  \
    \  +------+\n                                    | HA1  |\n                  \
    \                  +------+\n   The above figure presents a very simple scenario\
    \ in which private\n   addresses are used.  Here, \"private addresses\" are strictly\
    \ those\n   defined in RFC 1918 [12].  In this deployment scenario, the only\n\
    \   entities that have private addresses are the mobile nodes.  Foreign\n   agent\
    \ and home agent addresses are publicly routable on the general\n   Internet.\
    \  More specifically, the care-of addresses advertised by the\n   foreign agents\
    \ (COA1 and COA2 in Figure A4) and the home agent\n   addresses used by mobile\
    \ nodes in registration requests (HAA1 and\n   HAA2 in Figure A4) are publicly\
    \ routable on the general Internet.  As\n   a consequence, any Mobile IP tunnels\
    \ can be established between any\n   home agent home address and any foreign agent\
    \ care-of address.\n   Also, note that two different mobile nodes (MN1 and MN2)\
    \ with the\n   same private address (10.10.1.2) are visiting the same foreign\
    \ agent\n   FA.  This is supported as long as MN1 and MN2 are serviced by\n  \
    \ different home agents.  Hence, from any given home agent's\n   perspective,\
    \ each mobile node has a unique IP address, even if it\n   happens to be a private\
    \ address as per RFC 1918.\n   Operation in the presence of route optimization\
    \ [4] is outside the\n   scope of this document.\n   Requirements for the above\
    \ private address scenario:\n      Mobile node requirements:\n         Mobile\
    \ nodes intending to use private addresses with Mobile IP\n         MUST set the\
    \ 'T' bit and employ reverse tunneling.  Mobile\n         node's private addresses\
    \ within a given address space MUST be\n         unique.  Thus two mobile nodes\
    \ belonging to a single home agent\n         cannot have the same private addresses.\
    \  Thus, when receiving\n         or sending tunneled traffic for a mobile node,\
    \ the tunnel\n         endpoints are used to disambiguate amongst conflicting\
    \ mobile\n         node addresses.\n         If the mobile node happens to register\
    \ with multiple home\n         agents simultaneously through the same foreign\
    \ agent, there\n         must be some link-layer information that is distinct\
    \ for each\n         mobile node.  If no such distinct link-layer information\
    \ is\n         available, the mobile nodes MUST use unique address.\n      Foreign\
    \ agent requirements:\n         All advertising interfaces of the foreign agent\
    \ MUST have\n         publicly routable care-of address.  Thus, a mobile node\
    \ with a\n         private address visits the foreign agent only in its publicly\n\
    \         routable network.\n         Foreign agents MUST support reverse tunneling\
    \ in order to\n         support private addressed mobile nodes.  If a foreign\
    \ agent\n         receives a registration request from a mobile node with a\n\
    \         private address, and the mobile node has not set the 'T' bit,\n    \
    \     the foreign agent SHOULD reject it.\n         When delivering packets to\
    \ or receiving packets from mobile\n         nodes, foreign agents MUST disambiguate\
    \ among mobile node with\n         conflicting private addresses by using link-layer\
    \ information\n         as mentioned previously (Appendix section A.2 and A.3).\
    \  A\n         foreign agent in absence of route optimization, should make\n \
    \        sure that two mobile nodes visiting the same foreign agent\n        \
    \ corresponds with each other through their respective home\n         agents.\n\
    \         If a foreign agent supports reverse tunneling, then it MUST\n      \
    \   support the simple scenario of private address support\n         described\
    \ in this section.\n      Home agent requirements:\n         Any home agent address\
    \ used by mobile nodes in registration\n         request MUST be a publicly routable\
    \ address.  Home agents will\n         not support overlapping private home addresses,\
    \ thus each\n         private home address of a mobile node registered with a\
    \ home\n         agent is unique.  When the 'T' bit is set in the registration\n\
    \         request from the mobile node, the home agent MUST recognize and\n  \
    \       accept registration request from mobile nodes with private\n         addresses.\
    \ Also, the home agent SHOULD be able to assign\n         private addresses out\
    \ of its address pool to mobile nodes for\n         use as home addresses.  This\
    \ does not contravene home agent\n         processing in section 3.8 of [1].\n"
- title: 'Appendix B: Changes from RFC2344'
  contents:
  - "Appendix B: Changes from RFC2344\n   This section lists the changes with respect\
    \ to the previous version\n   of this document (RFC2344).\n   - Added Appendix\
    \ A on support for Disparate Addresses spaces and\n     private addresses.\n \
    \  - Added the corresponding section (6.3) under 'Security\n     Considerations'.\n\
    \   - Made Encapsulating Delivery Support optional by demoting from\n     a MUST\
    \ to a should.  This also required defining a new error\n     code 79 (assigned\
    \ by IANA).\n   - Mentioned the possibility of an admissible authentication\n\
    \     extension which may be different from the Mobile-Home\n     authentication\
    \ extension.\n   - An IANA considerations section was added.\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2001).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
