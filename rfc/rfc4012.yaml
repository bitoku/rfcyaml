- title: __initial_text__
  contents:
  - '     Routing Policy Specification Language next generation (RPSLng)

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo introduces a new set of simple extensions to the Routing\n\
    \   Policy Specification Language (RPSL), enabling the language to\n   document\
    \ routing policies for the IPv6 and multicast address families\n   currently used\
    \ in the Internet.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n   2.  Specifying routing policy for different address families\
    \ . . .  2\n       2.1.  Ambiguity Resolution . . . . . . . . . . . . . . . .\
    \ . .  3\n       2.2.  The afi dictionary attribute . . . . . . . . . . . . .\
    \ .  3\n       2.3.  RPSL dictionary extensions . . . . . . . . . . . . . . .\
    \  4\n       2.4.  IPv6 RPSL types  . . . . . . . . . . . . . . . . . . . .  4\n\
    \       2.5.  mp-import, mp-export, and mp-default . . . . . . . . . .  4\n  \
    \           2.5.1.  <mp-peering> . . . . . . . . . . . . . . . . . .  6\n    \
    \         2.5.2.  <mp-filter>  . . . . . . . . . . . . . . . . . .  6\n      \
    \       2.5.3.  Policy examples  . . . . . . . . . . . . . . . .  7\n   3.  route6\
    \ Class . . . . . . . . . . . . . . . . . . . . . . . . .  7\n   4.  Updates to\
    \ existing Classes to support the extensions  . . . .  8\n       4.1.  as-set\
    \ Class . . . . . . . . . . . . . . . . . . . . . .  8\n       4.2.  route-set\
    \ Class  . . . . . . . . . . . . . . . . . . . .  9\n       4.3.  filter-set Class\
    \ . . . . . . . . . . . . . . . . . . . .  9\n       4.4.  peering-set Class \
    \ . . . . . . . . . . . . . . . . . . .  9\n       4.5.  inet-rtr Class . . .\
    \ . . . . . . . . . . . . . . . . . . 10\n       4.6.  rtr-set Class  . . . .\
    \ . . . . . . . . . . . . . . . . . 11\n   5.  RFC 2725 Extensions  . . . . .\
    \ . . . . . . . . . . . . . . . . 11\n       5.1.  Authorization model for route6\
    \ Objects . . . . . . . . . 13\n   6.  Security Considerations  . . . . . . .\
    \ . . . . . . . . . . . . 13\n   7.  Acknowledgments  . . . . . . . . . . . .\
    \ . . . . . . . . . . . 14\n   8.  References . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . 14\n       8.1.  Normative References . . . . . . . . .\
    \ . . . . . . . . . 14\n       8.2.  Informative References . . . . . . . . .\
    \ . . . . . . . . 14\n       Authors' Addresses . . . . . . . . . . . . . . .\
    \ . . . . . . . 15\n       Full Copyright Statement . . . . . . . . . . . . .\
    \ . . . . . . 16\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   RFC 2622 [1] defines the RPSL language for the IPv4 unicast\
    \ routing\n   protocols and provides a series of guidelines for extending the\
    \ RPSL\n   language itself.  Additionally, security extensions to the RPSL\n \
    \  language are specified in RFC 2725 [2].\n   This document proposes to extend\
    \ RPSL according to the following\n   goals and requirements:\n   o  Provide RPSL\
    \ extensibility in the dimension of address families,\n      specifically, to\
    \ allow users to document routing policy for IPv6\n      and multicast.\n   o\
    \  Extensions should be backward compatible with minimal impact on\n      existing\
    \ tools and processes, following Section 10 of RFC 2622 [1]\n      for guidelines\
    \ on extending RPSL.\n   o  Maintain clarity and non-ambiguity: RPSL information\
    \ is used by\n      humans in addition to software tools.\n   o  Minimize duplication\
    \ of information, particularly when routing\n      policies for different address\
    \ families are the same.\n   The addition of IPv6 and multicast support to RPSL\
    \ leads to four\n   distinct routing policies that need to be distinguished in\
    \ this\n   specification, namely, (IPv4 {unicast|multicast}, IPv6\n   {unicast|multicast}).\n"
- title: 2.  Specifying Routing Policy for Different Address Families
  contents:
  - "2.  Specifying Routing Policy for Different Address Families\n   Routing policy\
    \ is currently specified in the aut-num class using\n   \"import:\", \"export:\"\
    , and \"default:\" attributes.  Sometimes it is\n   important to distinguish policy\
    \ for different address families, as\n   well as a unicast routing policy from\
    \ a multicast one.\n   Although the syntax of the existing import, export, and\
    \ default\n   attributes could be extended, this would present backward\n   compatibility\
    \ issues and could undermine clarity in the expressions.\n   Keeping this in mind,\
    \ the \"import:\", \"export:\", and \"default:\"\n   attributes implicitly specify\
    \ IPv4 unicast policy and will remain as\n   previously defined in RPSL, and new\
    \ multi-protocol (prefixed with the\n   string \"mp-\") attributes will be introduced.\
    \  These new \"mp-\"\n   attributes are described below.\n"
- title: 2.1.   Ambiguity Resolution
  contents:
  - "2.1.   Ambiguity Resolution\n   The same peering can be covered by more than\
    \ one multi-protocol\n   policy attribute or by a combination of multi-protocol\
    \ policy\n   attributes (when specifying IPv4 unicast policy) and the previously\n\
    \   defined IPv4 unicast policy attributes.  In these cases,\n   implementations\
    \ should follow the specification-order rule as defined\n   in Section 6.4 of\
    \ RFC 2622 [1].  To break the ambiguity, the action\n   corresponding to the first\
    \ peering specification is used.\n"
- title: 2.2.  The afi Dictionary Attribute
  contents:
  - "2.2.  The afi Dictionary Attribute\n   This section introduces a new dictionary\
    \ attribute:\n   Address Family Identifier, <afi>, is an RPSL list of address\
    \ families\n   for which a given routing policy expression should be evaluated.\n\
    \   <afi> is optional within the new multi-protocol attributes introduced\n  \
    \ in the aut-num class.  A pseudo identifier named \"any\" is defined to\n   allow\
    \ for more compact policy expressions with converged routing\n   policy.\n   The\
    \ possible values for <afi> are as follows:\n      ipv4.unicast\n      ipv4.multicast\n\
    \      ipv4 (equivalent to ipv4.unicast, ipv4.multicast)\n      ipv6.unicast\n\
    \      ipv6.multicast\n      ipv6 (equivalent to ipv6.unicast, ipv6.multicast)\n\
    \      any (equivalent to ipv4, ipv6)\n      any.unicast (equivalent to ipv4.unicast,\
    \ ipv6.unicast)\n      any.multicast (equivalent to ipv4.multicast, ipv6.multicast)\n\
    \   Appearance of these values in an attribute must be preceded by the\n   keyword\
    \ afi.\n   An <afi-list> is defined as a comma-separated list of one or more afi\n\
    \   values.\n"
- title: 2.3.  RPSL Dictionary Extensions
  contents:
  - "2.3.  RPSL Dictionary Extensions\n   In order to support IPv6 addresses specified\
    \ with the next-hop rp-\n   attribute, a new predefined dictionary type entitled\
    \ \"ipv6_address\"\n   is added to the RPSL dictionary.  The definition of this\
    \ type is\n   taken from Section 2.2 of RFC 3513 [3].\n   The next-hop rp-attribute\
    \ is expanded in the dictionary as follows:\n   rp-attribute: # next hop router\
    \ in a static route\n                 next-hop\n                 operator=(union\
    \ ipv4_address, ipv6_address, enum[self])\n   A new value has been added for the\
    \ <protocol> dictionary\n   specification:\n      MPBGP\n   MPBGP is understood\
    \ to be BGP4 with multi-protocol extensions (often\n   referred to as BGP4+).\
    \  BGP4+ could not be used, as the '+' character\n   is not allowed by the RPSL\
    \ specification in protocol names.\n"
- title: 2.4.  IPv6 RPSL Types
  contents:
  - "2.4.  IPv6 RPSL Types\n   This document will reference three new IPv6 RPSL types,\
    \ namely,\n   <ipv6-address>, <ipv6-address-prefix>, and <ipv6-address-prefix-\n\
    \   range>.  The <ipv6-address> and <ipv6-address-prefix> types are\n   defined\
    \ in Sections 2.2 and 2.3 of RFC 3513 [3].  The <ipv6-address-\n   prefix-range>\
    \ type adds a range operator to the <ipv6-address-prefix>\n   type.  The range\
    \ operator is defined in Section 2 of RFC 2622 [1].\n"
- title: 2.5.  mp-import, mp-export, and mp-default
  contents:
  - "2.5.  mp-import, mp-export, and mp-default\n   Three new policy attributes are\
    \ introduced in the aut-num Class:\n      mp-import:\n      mp-export:\n     \
    \ mp-default:\n   These attributes incorporate the afi (address-family) specification.\n\
    \   Note that the afi specification is optional.  If no afi specification\n  \
    \ is present, the policy expression is presumed to apply to all\n   protocol families,\
    \ namely, ipv4.unicast, ipv4.multicast,\n   ipv6.unicast, and ipv6.multicast.\
    \  This is the equivalent of the afi\n   specification \"afi any\".  The mp-import\
    \ and mp-export attributes have\n   both a basic policy specification and a more\
    \ powerful structured\n   policy specification.\n   The syntax for the mp-default\
    \ attribute and the basic policy\n   specification of the mp-import and mp-export\
    \ attributes is as\n   follows:\n   Attribute  Value                         \
    \                Type\n   mp-import  [protocol <protocol-1>] [into <protocol-2>]\
    \   optional,\n              [afi <afi-list>]                              multi-valued\n\
    \              from <mp-peering-1> [action <action-1>; ... <action-N>;]\n    \
    \          . . .\n              from <mp-peering-M> [action <action-1>; ... <action-N>;]\n\
    \              accept <mp-filter> [;]\n   mp-export  [protocol <protocol-1>] [into\
    \ <protocol-2>]   optional,\n              [afi <afi-list>]                  \
    \            multi-valued\n              to <mp-peering-1> [action <action-1>;\
    \ ... <action-N>;]\n              . . .\n              to <mp-peering-M> [action\
    \ <action-1>; ... <action-N>;]\n              announce <mp-filter> [;]\n   mp-default\
    \ [afi <afi-list>] to <mp-peering>              optional,\n              [action\
    \ <action-1>; ... <action-N>;]          multi-valued\n              [networks\
    \ <mp-filter>]\n   The mp-import and mp-export policies can be structured.  As\
    \ with RFC\n   2622 [1], structured policies are recommended only to advanced\
    \ RPSL\n   users.  The mp-import structured policy syntax is defined below.\n\
    \   Please note the semicolon at the end of an <import-factor> is\n   mandatory\
    \ for structured policy expressions, while being optional on\n   non-structured\
    \ policy expressions.  The mp-export structured policy\n   syntax is expressed\
    \ symmetrically to the mp-import attribute.  The\n   structured syntax allows\
    \ exceptions and refinements to policies by\n   use of the \"except\" and \"refine\"\
    \ keywords.  Further, the exceptions\n   and refinements may specify an optional\
    \ \"afi\" list to restrict the\n   policy expression to particular address families.\n\
    \   Note that the definition allows subsequent or \"cascading\" refinements\n\
    \   and exceptions.  RFC 2622 [1] incorrectly refers to these as \"nested\"\n\
    \   expressions.  The syntax does not allow true nested expressions.\n   <import-factor>\
    \ ::=\n        from <mp-peering-1> [action <action-1>; ... <action-M>;]\n    \
    \    . . .\n        from <mp-peering-N> [action <action-1>; ... <action-K>;]\n\
    \        accept <mp-filter>;\n   <import-term> :: = import-factor |\n        {\n\
    \        <import-factor-1>\n        . . .\n        <import-factor-N>\n       \
    \ }\n   <import-expression> ::= <import-term> |\n        <import-term> EXCEPT\
    \ <afi-import-expression> |\n        <import-term> REFINE <afi-import-expression>\n\
    \   <afi-import-expression> ::= [afi <afi-list>] <import-expression>\n   mp-import:\
    \ [protocol <protocol-1>] [into <protocol-2>]\n        <afi-import-expression>\n"
- title: 2.5.1.  <mp-peering>
  contents:
  - "2.5.1.  <mp-peering>\n   <mp-peering> indicates the AS (and the router if present)\
    \ and is\n   defined as follows:\n   <mp-peering> ::= <as-expression> [<mp-router-expression-1>]\n\
    \                    [at <mp-router-expression-2>] | <peering-set-name>\n   where\
    \ <as-expression> is an expression over AS numbers and AS sets\n   using operators\
    \ AND, OR, and EXCEPT, and <mp-router-expression> is an\n   expression over router\
    \ ipv4-addresses or ipv6-addresses, inet-rtr\n   names, and rtr-set names using\
    \ operators AND, OR, and EXCEPT.  The\n   binary \"EXCEPT\" operator is the set\
    \ subtraction operator and has the\n   same precedence as the operator AND (it\
    \ is semantically equivalent to\n   \"AND NOT\" combination).  That is, \"(AS65001\
    \ OR AS65002) EXCEPT\n   AS65002\" equals \"AS65001\".\n"
- title: 2.5.2.  <mp-filter>
  contents:
  - "2.5.2.  <mp-filter>\n   The <mp-filter> policy filter expression is derived from\
    \ the RPSL\n   <filter> policy filter expression defined in section 5.4 of RFC\
    \ 2622\n   [1].  <mp-filter> extends the <filter> expression to allow the\n  \
    \ specification of IPv6 prefixes and prefix ranges.  In particular, an\n   Address-Prefix\
    \ Set expression in an <mp-filter> expression may\n   include both IPv4 and IPv6\
    \ prefixes or prefix ranges.  <mp-filter> is\n   otherwise identical to the RPSL\
    \ <filter> expression.  Address-Prefix\n   Sets are enclosed in braces, '{' and\
    \ '}'.  The policy filter matches\n   the set of routes whose destination address-prefix\
    \ is in the set.\n   For example:\n      { 192.0.2.0/24, 2001:0DB8::/32 }\n  \
    \    { 2001:0DB8:0100::/48^+, 2001:0DB8:0200::/48^64 }\n"
- title: 2.5.3.  Policy Examples
  contents:
  - "2.5.3.  Policy Examples\n   The address family may be specified in subsequent\
    \ refine or except\n   policy expressions and is valid only within the policy\
    \ expression\n   that contains it.\n   Therefore, in the example\n   aut-num:\
    \    AS65534\n   mp-import: afi any.unicast from AS65001 accept as-foo;\n    \
    \            except afi any.unicast {\n                  from AS65002 accept AS65226;\n\
    \                } except afi ipv6.unicast {\n                    from AS65003\
    \ accept {2001:0DB8::/32};\n                  }\n   the last \"except\" is evaluated\
    \ only for the IPv6 unicast address\n   family, while other import-expressions\
    \ are evaluated for both the\n   IPv6 and IPv4 unicast address families.\n   The\
    \ evaluation of a policy expression is done by evaluating each of\n   its components.\
    \  Evaluation of peering-sets and filter-sets is\n   constrained by the address\
    \ family.  Such constraints may result in a\n   \"NOT ANY\" <mp-filter> or invalid\
    \ <mp-peering> depending on implicit\n   or explicit definitions of the address\
    \ family in the set.  Conflicts\n   with explicit or implicit declarations are\
    \ resolved at runtime during\n   the evaluation of a policy expression.  An RPSL\
    \ evaluation\n   implementation may wish to issue a warning in the case of a \"\
    NOT ANY\"\n   <mp-filter>.  The following mp-import policy contains an example\
    \ of\n   an <mp-filter> that should be evaluated as \"NOT ANY\":\n   aut-num:\
    \ AS65002\n   mp-import: afi ipv6.unicast from AS65001 accept {192.0.2.0/24}\n"
- title: 3.  route6 Class
  contents:
  - "3.  route6 Class\n   The route6 class is the IPv6 equivalent of the route class.\
    \  As with\n   the route class, the class key for the route6 class is specified\
    \ by\n   the route6 and origin attribute pair.  Other than the route6\n   attribute,\
    \ the route6 class shares the same attribute names with the\n   route class. \
    \ Although the attribute names remain identical, the\n   inject, components, exports-comps,\
    \ holes, and mnt-routes attributes\n   must specify IPv6 prefixes and addresses\
    \ rather than IPv4 prefixes\n   and addresses.  This requirement is reflected\
    \ by the specification of\n   <ipv6-router-expression>, <ipv6-filter>, and <ipv6-address-prefix>\n\
    \   below.  <ipv6-address-prefix> has been previously defined.  <ipv6-\n   filter>\
    \ is related to <mp-filter> as defined above in Section 2.5.2,\n   with the exception\
    \ that only <ipv6-address-prefix> types are\n   permitted.  Similarly, <ipv6-router-expression>\
    \ is related to\n   <mp-router-expression> as defined above in Section 2.5.1 with\
    \ the\n   exception that only <ipv6-address> types are permitted.\n"
- title: Attribute     Value                             Type
  contents:
  - 'Attribute     Value                             Type

    '
- title: route6        <ipv6-address-prefix>             mandatory, class key,
  contents:
  - "route6        <ipv6-address-prefix>             mandatory, class key,\n     \
    \                                           single-valued\n"
- title: origin        <as-number>                       mandatory, class key,
  contents:
  - "origin        <as-number>                       mandatory, class key,\n     \
    \                                           single-valued\n"
- title: member-of     list of <route-set-name>          optional, multi-valued
  contents:
  - 'member-of     list of <route-set-name>          optional, multi-valued

    '
- title: inject        [at <ipv6-router-expression>] ... optional, multi-valued
  contents:
  - "inject        [at <ipv6-router-expression>] ... optional, multi-valued\n    \
    \          [action <action>]\n              [upon <condition>]\n"
- title: components    [ATOMIC] [[<ipv6-filter>]         optional, single-valued
  contents:
  - "components    [ATOMIC] [[<ipv6-filter>]         optional, single-valued\n   \
    \           [protocol <protocol> <ipv6-filter> ...]]\n"
- title: aggr-bndry    <as-expression>                   optional, single-valued
  contents:
  - 'aggr-bndry    <as-expression>                   optional, single-valued

    '
- title: aggr-mtd      inbound or outbound               optional, single-valued
  contents:
  - "aggr-mtd      inbound or outbound               optional, single-valued\n   \
    \           [<as-expression>]\n"
- title: export-comps  <ipv6-filter>                     optional, single-valued
  contents:
  - 'export-comps  <ipv6-filter>                     optional, single-valued

    '
- title: holes         list of <ipv6-address-prefix>     optional, multi-valued
  contents:
  - 'holes         list of <ipv6-address-prefix>     optional, multi-valued

    '
- title: mnt-lower     list of <mntner-name>             optional, multi-valued
  contents:
  - 'mnt-lower     list of <mntner-name>             optional, multi-valued

    '
- title: mnt-routes    list of <mntner-name>             optional, multi-valued
  contents:
  - "mnt-routes    list of <mntner-name>             optional, multi-valued\n    \
    \          [{list of <ipv6-address-prefix-range>} or ANY]\n   Example:\n   route6:\
    \   2001:0DB8::/32\n   origin:   AS65001\n"
- title: 4.  Updates to Existing Classes to Support the Extensions
  contents:
  - '4.  Updates to Existing Classes to Support the Extensions

    '
- title: 4.1.  as-set Class
  contents:
  - "4.1.  as-set Class\n   The as-set class defines a set of Autonomous Systems (AS),\
    \ specified\n   either directly by listing them in the members attribute or\n\
    \   indirectly by referring to another as-set or using the mbrs-by-ref\n   facility.\
    \  More importantly, \"In a context that expects a route set\n   (e.g., members\
    \ attribute of the route-set class), [...] an as-set\n   AS-X defines the set\
    \ of routes that are originated by the ASes in\n   AS-X\", (section 5.3 of  RFC\
    \ 2622 [1]).\n   The as-set class is therefore used to collect a set of route\n\
    \   prefixes, which may be restricted to a specific address family.\n   The existing\
    \ as-set class does not need any modifications.  The\n   evaluation of the class\
    \ must be filtered to obtain prefixes belonging\n   to a particular address family\
    \ using the traditional filtering\n   mechanism in use in Internet Routing Registry\
    \ (IRR) systems today.\n"
- title: 4.2.  route-set Class
  contents:
  - "4.2.  route-set Class\n   This class is used to specify a set of route prefixes.\n\
    \   A new attribute \"mp-members:\" is defined for this class.  This\n   attribute\
    \ allows the specification of IPv4 or IPv6\n   address-prefix-ranges.\n"
- title: Attribute   Value                                 Type
  contents:
  - 'Attribute   Value                                 Type

    '
- title: mp-members  list of (<ipv4-address-prefix-range>  optional, multi-valued
  contents:
  - "mp-members  list of (<ipv4-address-prefix-range>  optional, multi-valued\n  \
    \          or <ipv6-address-prefix-range>\n            or <route-set-name>\n \
    \           or <route-set-name><range-operator>)\n"
- title: 'Example:'
  contents:
  - 'Example:

    '
- title: 'route-set:  rs-foo'
  contents:
  - 'route-set:  rs-foo

    '
- title: 'mp-members: rs-bar'
  contents:
  - 'mp-members: rs-bar

    '
- title: 'mp-members: 2001:0DB8::/32  # v6 member'
  contents:
  - 'mp-members: 2001:0DB8::/32  # v6 member

    '
- title: 'mp-members: 192.0.2.0/24   # v4 member'
  contents:
  - 'mp-members: 192.0.2.0/24   # v4 member

    '
- title: 4.3.  filter-set Class
  contents:
  - "4.3.  filter-set Class\n   The new \"mp-filter:\" attribute defines the set's\
    \ policy filter.  A\n   policy filter is a logical expression that when applied\
    \ to a set of\n   routes returns a subset of these routes.  The relevant parts\
    \ of the\n   updated filter-set class are shown below:\n   Attribute   Value \
    \               Type\n   filter-set  <object-name>        mandatory, single-valued,\
    \ class key\n   filter      <filter>             optional, single-valued\n   mp-filter\
    \   <mp-filter>          optional, single-valued\n   Where <mp-filter> is defined\
    \ above in Section 2.5.2.  While the\n   \"filter:\" and \"mp-filter:\" attributes\
    \ are of type \"optional\", a\n   filter-set must contain one of these two attributes.\
    \  Implementations\n   should reject instances where both attributes are defined\
    \ in an\n   object, as the interpretation of such a filter-set is undefined.\n"
- title: 4.4.  peering-set Class
  contents:
  - "4.4.  peering-set Class\n   The peering set class is updated with a \"mp-peering:\"\
    \ attribute.\n   Attribute    Value               Type\n   peering-set  <object-name>\
    \       mandatory, single-valued, class key\n   peering      <peering>       \
    \    optional, multi-valued\n   mp-peering   <mp-peering>        optional, multi-valued\n\
    \   Example:\n   peering-set:   prng-ebgp-peers\n   mp-peering:    AS65002 2001:0DB8::1\
    \ at 2001:0DB8::2\n   With <mp-peering> defined as above in Section 2.5.1.  While\
    \ the\n   \"peering:\" and \"mp-peering:\" attributes are of type \"optional\"\
    , a\n   peering-set must contain at least one of these two attributes.\n"
- title: 4.5.  inet-rtr Class
  contents:
  - "4.5.  inet-rtr Class\n   Two new attributes are introduced to the inet-rtr class\
    \ --\n   \"interface:\", which allows the definition of generic interfaces,\n\
    \   including the information previously contained in the \"ifaddr:\"\n   attribute,\
    \ as well as support for tunnel definitions;  and \"mp-\n   peer:\", which includes\
    \ and extends the functionality of the existing\n   \"peer:\" attribute.  The\
    \ syntax definition for the \"interface:\"\n   attribute follows:\n   Attribute\
    \  Value                               Type\n   interface  <ipv4-address> or <ipv6-address>\
    \    optional, multi-valued\n              masklen <mask>\n              [action\
    \ <action>]\n              [tunnel <remote-endpoint-address>,<encapsulation>]\n\
    \   The syntax allows native IPv4 and IPv6 interface definitions, as well\n  \
    \ as the definition of tunnels as virtual interfaces.  Without the\n   optional\
    \ tunnel definition, this attribute allows the same\n   functionality as the \"\
    ifaddr:\" attribute but extends it to allow IPv6\n   addresses.\n   If the interface\
    \ is a tunnel, the syntax is as follows:\n   <remote-endpoint-address> indicates\
    \ the IPv4 or IPv6 address of the\n   remote endpoint of the tunnel.  The address\
    \ family must match that of\n   the local endpoint.  <encapsulation> denotes the\
    \ encapsulation used\n   in the tunnel and is one of {GRE,IPinIP} (note that the\
    \ outer and\n   inner IP protocol versions can be deduced from the interface context\n\
    \   -- for example, IPv6-in-IPv4 encapsulation is just IPinIP).  Routing\n   policies\
    \ for these routers should be described in the appropriate\n   classes (e.g.,\
    \ aut-num).\n   The \"mp-peer:\" attribute is defined below.  The difference between\n\
    \   this attribute and the \"peer:\" attribute is the inclusion of support\n \
    \  for IPv6 addresses.\n   Attribute  Value                                  \
    \   Type\n   mp-peer    <protocol> <ipv4-address> <options>  or   optional,\n\
    \              <protocol> <ipv6-address> <options>  or   multi-valued\n      \
    \        <protocol> <inet-rtr-name> <options> or\n              <protocol> <rtr-set-name>\
    \ <options>  or\n              <protocol> <peering-set-name> <options>\n   where\
    \ <protocol> is a protocol name, and <options> is a\n   comma-separated list of\
    \ peering options for <protocol>, as provided\n   in the RPSL dictionary.\n"
- title: 4.6.  rtr-set Class
  contents:
  - "4.6.  rtr-set Class\n   The rtr-set class is extended with a new attribute, \"\
    mp-members:\".\n   This attribute extends the original \"members:\" attribute\
    \ by allowing\n   the specification of IPv6 addresses.  It is defined as follows:\n\
    \   Attribute   Value                             Type\n   mp-members  list of\
    \ (<inet-rtr-name> or       optional, multi-valued\n               <rtr-set-name>\
    \ or\n               <ipv4-address> or\n               <ipv6-address>)\n"
- title: 5.  RFC 2725 Extensions
  contents:
  - "5.  RFC 2725 Extensions\n   RFC 2725 [2] introduces an authorization model to\
    \ address the\n   integrity of policy expressed in routing registries.  Two new\n\
    \   attributes were defined to support this authorization model: the\n   \"mnt-routes\"\
    \ and \"mnt-lower\" attributes.\n   In RPSLng, these attributes are extended to\
    \ the route6 and inet6num\n   (described below) classes.  Further, the syntax\
    \ of the existing mnt-\n   routes attribute is modified to allow the optional\
    \ specification of\n   IPv6 prefix range lists when present in inet6num, route6,\
    \ and aut-num\n   class objects.  This optional list of prefix ranges is a comma-\n\
    \   separated list enclosed in curly braces.  In the aut-num class, the\n   IPv6\
    \ prefix ranges may be mixed with IPv4 prefix ranges.  The keyword\n   \"ANY\"\
    \ may also be used instead of prefix ranges.  In the case of\n   inet6num and\
    \ route6 objects, \"ANY\" refers to all more specifics of\n   the prefix in the\
    \ class key field.  For the aut-num class, \"ANY\"\n   literally means any prefix.\
    \  The default when no additional set items\n   are specified is \"ANY\".  An\
    \ abbreviated definition of the aut-num\n   class with the updated syntax for\
    \ the mnt-routes attribute is\n   presented below.\n"
- title: Attribute     Value                             Type
  contents:
  - 'Attribute     Value                             Type

    '
- title: aut-num       <as-number>                       mandatory, class key,
  contents:
  - "aut-num       <as-number>                       mandatory, class key,\n     \
    \                                           single-valued\n"
- title: mnt-routes    list of <mntner-name>             optional, multi-valued
  contents:
  - "mnt-routes    list of <mntner-name>             optional, multi-valued\n    \
    \          [{list of (<ipv6-address-prefix-range> or\n                       \
    \  <ipv4-address-prefix-range>)} or ANY]\n   The following is an example of mnt-routes\
    \ usage.  This example\n   authorizes MAINT-65001 to create route6 objects with\
    \ an origin AS of\n   65002 for IPv6 address prefixes within the 2001:0DB8::/32^+\
    \ range,\n   and route objects with origin AS 65002 for IPv4 prefixes within the\n\
    \   192.0.2.0/24^+ range.\n   aut-num: AS65002\n   mnt-routes: MAINT-AS65001 {2001:0DB8::/32^+,\
    \ 192.0.2.0/24^+}\n   Note, that the inclusion of IPv6 prefix ranges within a\
    \ mnt-routes\n   attribute in an aut-num object may conflict with existing\n \
    \  implementations of RPSL that support only IPv4 prefix ranges.\n   However,\
    \ given the perceived lack of implementation of this optional\n   prefix range\
    \ list, it was considered more acceptable to extend the\n   existing definition\
    \ of the mnt-routes attribute in the aut-num class\n   rather than to create a\
    \ new attribute type.\n   Attribute     Value                    Type\n   inet6num\
    \      <ipv6-address-prefix>    mandatory, single-valued,\n                  \
    \                        class key\n   netname       <netname>               \
    \ mandatory, single-valued\n   descr         <free-form>              mandatory,\
    \ multi-valued\n   country       <country-code>           mandatory, multi-valued\n\
    \   admin-c       <nic-handle>             mandatory, multi-valued\n   tech-c\
    \        <nic-handle>             mandatory, multi-valued\n   remarks       <free-form>\
    \              optional, multi-valued\n   notify        <email-address>      \
    \    optional, multi-valued\n   mnt-lower     list of <mntner-name>    optional,\
    \ multi-valued\n   mnt-routes    list of <mntner-name>    optional, multi-valued\n\
    \                 [{list of <ipv6-address-prefix-range>} or ANY]\n   mnt-by  \
    \      list of <mntner-name>    mandatory, multi-valued\n   changed       <email-address>\
    \ <date>   mandatory, multi-valued\n   source        <registry-name>         \
    \ mandatory, single-valued\n   The <country-code> must be a valid two-letter ISO\
    \ 3166 country code\n   identifier.  <netname> is a symbolic name for the specified\
    \ IPv6\n   address space.  It does not have a restriction on RPSL reserved\n \
    \  prefixes.  These definitions are taken from the RIPE Database\n   Reference\
    \ Manual [4].\n"
- title: 5.1.  Authorization Model for route6 Objects
  contents:
  - "5.1.  Authorization Model for route6 Objects\n   Deletion and update of a route6\
    \ object is not different from other\n   objects, as defined in RFC 2725 [2].\
    \  Creation rules of a route6\n   object is replicated here from the corresponding\
    \ rules for route\n   object in RFC 2725 [2] section 9.9.\n   When a route6 object\
    \ is added, the submission must satisfy two\n   authentication criteria.  It must\
    \ match the authentication specified\n   in the aut-num object and that specified\
    \ in either a route6 object\n   or, if no applicable route6 object is found, an\
    \ inet6num object.\n   An addition is submitted with an AS number and IPv6 prefix\
    \ as its\n   key.  If the aut-num object does not exist on a route6 to add, then\n\
    \   the addition is rejected.  If the aut-num exists, then the submission\n  \
    \ is checked against the applicable maintainers.  A search is then done\n   for\
    \ the prefix, looking first for an exact match and then, failing\n   that,  for\
    \ the longest prefix match less specific than the prefix\n   specified.  If this\
    \ search succeeds, it will return one or more\n   route6 objects.  The submission\
    \ must match an applicable maintainer\n   in at least one of these route6 objects\
    \ for the addition to succeed.\n   If the search for a route6 object fails, then\
    \ a search is performed\n   for an inet6num object that exactly matches the prefix,\
    \ or for the\n   most specific inet6num less specific than the route6 object\n\
    \   submission.\n   Once the aut-num and either a list of route6 objects or an\
    \ inet6num\n   is found, the authorization is taken from these objects.  The\n\
    \   applicable maintainer object is any referenced by the mnt-routes\n   attributes.\
    \  If one or more mnt-routes attributes are present in an\n   object, the mnt-by\
    \ or mnt-lower attributes are not considered.  In\n   the absence of a mnt-routes\
    \ attribute in a given object, the first\n   mnt-lower attributes are used (only\
    \ if the given object is an\n   inet6num object and it is less specific than the\
    \ route6 object to be\n   added).  If no applicable mnt-lower attribute is found,\
    \ then the\n   mnt-by attributes are used for that object.  The authentication\
    \ must\n   match one of the authorizations in each of the two objects.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   This document describes extensions to RFC 2622\
    \ [1] and RFC 2725 [2].\n   The extensions address the limitations of the aforementioned\n\
    \   documents with respect to IPv6 and multicast.  The extensions do not\n   introduce\
    \ any new security functionality or threats.\n   Although the extensions introduce\
    \ no additional security threats, it\n   should be noted that the original RFC\
    \ 2622 [1] RPSL standard included\n   several weak and/or vulnerable authentication\
    \ mechanisms:  first, the\n   \"MAIL-FROM\" scheme, which can be easily defeated\
    \ via source email\n   address spoofing;  second, the \"CRYPT-PW\" scheme, which\
    \ is subject to\n   dictionary attacks and password sniffing if RPSL objects are\n\
    \   submitted via unencrypted channels such as email;  and, finally, the\n   \"\
    NONE\" mechanism, which offers no protection for objects.\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   The authors wish to thank all the people who have contributed\
    \ to this\n   document through numerous discussions, particularly Ekaterina\n\
    \   Petrusha, for highly valuable discussions and suggestions:  Shane\n   Kerr,\
    \ Engin Gunduz, Marc Blanchet, and David Kessens who participated\n   constructively\
    \ in many discussions and Cengiz Alaettinoglu, who is\n   still the reference\
    \ in all things RPSL.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [1]  Alaettinoglu, C., Villamizar, C., Gerich,\
    \ E., Kessens, D.,\n        Meyer, D., Bates, T., Karrenberg, D., and M. Terpstra,\
    \ \"Routing\n        Policy Specification Language (RPSL)\", RFC 2622, June 1999.\n\
    \   [2]  Villamizar, C., Alaettinoglu, C., Meyer, D., and S. Murphy,\n       \
    \ \"Routing Policy System Security\", RFC 2725, December 1999.\n   [3]  Hinden,\
    \ R. and S. Deering, \"Internet Protocol Version 6 (IPv6)\n        Addressing\
    \ Architecture\", RFC 3513, April 2003.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [4]  Damas, J. and A. Robachevsky, \"RIPE Database\
    \ Reference Manual\",\n        August 2002.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Larry Blunk\n   Merit Network\n   EMail: ljb@merit.edu\n\
    \   Joao Damas\n   Internet Systems Consortium\n   EMail: Joao_Damas@isc.org\n\
    \   Florent Parent\n   Hexago\n   EMail: Florent.Parent@hexago.com\n   Andrei\
    \ Robachevsky\n   RIPE NCC\n   EMail: andrei@ripe.net\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
