- title: __initial_text__
  contents:
  - '       Rationale for Update to the IPv6 Flow Label Specification

    '
- title: Abstract
  contents:
  - "Abstract\n   Various published proposals for use of the IPv6 flow label are\n\
    \   incompatible with its original specification in RFC 3697.\n   Furthermore,\
    \ very little practical use is made of the flow label,\n   partly due to some\
    \ uncertainties about the correct interpretation of\n   the specification.  This\
    \ document discusses and motivates changes to\n   the specification in order to\
    \ clarify it and to introduce some\n   additional flexibility.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6436.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n   2.  Impact of Current Specification  . . . . . . . . . .\
    \ . . . . .  3\n   3.  Changes to the Specification . . . . . . . . . . . . .\
    \ . . . .  6\n   4.  Discussion . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .  8\n   5.  Security Considerations  . . . . . . . . . . . . . . . . .\
    \ . .  9\n   6.  Acknowledgments  . . . . . . . . . . . . . . . . . . . . . .\
    \ .  9\n   7.  Informative References . . . . . . . . . . . . . . . . . . . .\
    \ 10\n   Appendix A.  Alternative Approaches  . . . . . . . . . . . . . . . 12\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The flow label field in the IPv6 header was reserved but\
    \ left\n   Experimental by [RFC2460], which mandates only that \"Hosts or routers\n\
    \   that do not support the functions of the Flow Label field are\n   required\
    \ to set the field to zero when originating a packet, pass the\n   field on unchanged\
    \ when forwarding a packet, and ignore the field\n   when receiving a packet.\"\
    \n   The flow label field was normatively specified by [RFC3697].  In\n   particular,\
    \ we quote three rules from that RFC:\n   a.  \"The Flow Label value set by the\
    \ source MUST be delivered\n       unchanged to the destination node(s).\"\n \
    \  b.  \"IPv6 nodes MUST NOT assume any mathematical or other properties\n   \
    \    of the Flow Label values assigned by source nodes.\"\n   c.  \"Router performance\
    \ SHOULD NOT be dependent on the distribution\n       of the Flow Label values.\
    \  Especially, the Flow Label bits alone\n       make poor material for a hash\
    \ key.\"\n   Additionally, RFC 3697 does not define the method a host should adopt\n\
    \   by default to choose the value of the flow label, if no specific\n   method\
    \ is in use.  It was expected that various signaling methods\n   might be defined\
    \ for agreeing on values of the flow label, but no\n   such methods have been\
    \ standardized, except a pre-existing option in\n   RSVP [RFC2205].\n   The flow\
    \ label is hardly used in practice in widespread IPv6\n   implementations, although\
    \ some operating systems do set it\n   [McGann05].  To some extent, this is due\
    \ to the main focus being on\n   basic deployment of IPv6, but the absence of\
    \ a default method of\n   choosing the flow label value means that most host implementations\n\
    \   simply set it to zero.  There is also anecdotal evidence that the\n   rules\
    \ quoted above have led to uncertainty about exactly what is\n   possible.  Furthermore,\
    \ various use cases have been proposed that\n   infringe one or another of the\
    \ rules.  None of these proposals has\n   been accepted as a standard and in practice\
    \ there is no significant\n   deployment of any mechanism to set the flow label.\n\
    \   The intention of this document is to explain this situation in more\n   detail\
    \ and to motivate changes to RFC 3697 intended to remove the\n   uncertainties\
    \ and encourage active usage of the flow label.  It does\n   not formally update\
    \ RFC 3697, but it serves as background material\n   for [RFC6437].\n"
- title: 2.  Impact of Current Specification
  contents:
  - "2.  Impact of Current Specification\n   Rule (a) makes it impossible for the\
    \ routing system to use the flow\n   label as any form of dynamic routing tag.\
    \  This was a conscious\n   choice in the early design of IPv6, and there appears\
    \ to be no\n   practical possibility of revisiting this decision at this stage\
    \ in\n   the deployment of IPv6, which uses conventional routing mechanisms\n\
    \   like those used for IPv4.  However, this rule also makes it\n   impossible\
    \ to make any use at all of the flow label unless hosts\n   choose to set it.\
    \  It also forbids clearing the flow label for\n   security reasons.\n   This\
    \ last point highlights the security properties, or rather the\n   lack thereof,\
    \ with regards to the flow label.  The flow label field\n   is always unprotected\
    \ as it travels through the network, because\n   there is no IPv6 header checksum,\
    \ and the flow label is not included\n   in transport pseudo-header checksums,\
    \ nor in IPsec checksums.  As a\n   result, intentional and malicious changes\
    \ to its value cannot be\n   detected.  Also, it could be used as a covert data\
    \ channel, since\n   apparently pseudo-random flow label values could in fact\
    \ consist of\n   covert data [NIST].  If the flow label were to carry quality-of-\n\
    \   service semantics, then like the diffserv code point [RFC2474], it\n   would\
    \ not be intrinsically trustworthy across domain boundaries.  As\n   a result,\
    \ some security specialists believe that flow labels should\n   be cleared for\
    \ safety [LABEL-SEC] [NSA].  These points must be\n   considered when discussing\
    \ the immutability of the flow label across\n   domain boundaries.  In fact, the\
    \ adjective \"immutable\" is confusing,\n   since it implies a property that the\
    \ flow label field does not\n   actually possess.  It has therefore been abandoned\
    \ as a descriptive\n   term in [RFC6437].  It is only used in the present document\
    \ to\n   explain why it has been abandoned.\n   Rule (b) appears to forbid any\
    \ usage in which the bits of the flow\n   label are encoded with a specific semantic\
    \ meaning.  However, the\n   words \"MUST NOT assume\" are to be interpreted precisely\
    \ - if a router\n   knows by configuration or by signaling that the flow label\
    \ has been\n   assigned in a certain way, it can make use of that knowledge. \
    \ It is\n   not made clear by the rule that there is an implied distinction\n\
    \   between stateless models (in which there is no signaling, so no\n   specific\
    \ assumption about the meaning of the flow label value can be\n   made) and stateful\
    \ models (in which there is signaling and the router\n   has explicit knowledge\
    \ about the label).\n   If the word \"alone\" is overlooked, rule (c) has sometimes\
    \ been\n   interpreted as forbidding the use of the flow label as part of a hash\n\
    \   used by load distribution mechanisms.  In this case too, the word\n   \"alone\"\
    \ needs to be taken into account - a router is allowed to\n   combine the flow\
    \ label value with other data in order to produce a\n   uniformly distributed\
    \ hash.\n   Both before and after these rules were laid down, a considerable\n\
    \   number of proposals for use of the flow label were published that\n   seem\
    \ incompatible with them.  Numerous examples and an analysis are\n   presented\
    \ in [RFC6294].  Those examples propose use cases in which\n   some or all of\
    \ the following apply:\n   o  The flow label may be changed by intermediate systems.\n\
    \   o  It doesn't matter if the flow label is changed, because the\n      receiver\
    \ doesn't use it.\n   o  Some or all bits of the flow label are encoded: they\
    \ have specific\n      meanings understood by routers and switches along the path.\n\
    \   o  The encoding is related to the required quality of service, as\n      well\
    \ as identifying a flow.\n   o  The flow label is used to control forwarding or\
    \ switching in some\n      way.\n   These proposals require either some form of\
    \ semantics encoding in the\n   bits of the flow label, or the ability for routers\
    \ to modify the flow\n   label, or both.  Thus, they appear to infringe the rules\
    \ from RFC\n   3697 quoted above.\n   We can conclude that a considerable number\
    \ of researchers and\n   designers have been stymied by RFC 3697.  On the other\
    \ hand, some\n   other proposals discussed in [RFC6294] appear to be compatible\
    \ with\n   RFC 3697.  Several are based on the originator of a packet choosing\
    \ a\n   pseudo-random flow label for each flow, which is one option suggested\n\
    \   in RFC 3697.  Thus, we can also conclude that there is a useful role\n   for\
    \ this approach.\n   If our goal is for the flow label to be used in practice,\
    \ the\n   conflict between the various approaches creates a dilemma.  There\n\
    \   appear to be two major options:\n   1.  Discourage locally defined and/or\
    \ stateful use of the flow label.\n       Strengthen RFC 3697 to say that hosts\
    \ should set a label value,\n       without necessarily creating state, which\
    \ would clarify and limit\n       its possible uses.  In particular, its use for\
    \ load distribution\n       and balancing would be encouraged.\n   2.  Relax the\
    \ rules to encourage locally defined and/or stateful use\n       of the flow label.\
    \  This approach would make the flow label\n       completely mutable and would\
    \ exclude use cases depending on\n       strict end-to-end immutability.  It would\
    \ encourage applications\n       of a pseudo-random flow label, such as load distribution,\
    \ on a\n       local basis, but it would exclude end-to-end applications.\n  \
    \ There was considerable debate about these options and their variants\n   during\
    \ 2010 - 2011, with a variety of proposals in previous versions\n   of this document\
    \ and in mailing list discussions.  After these\n   discussions, there appears\
    \ to be a view that simplicity should\n   prevail, and that complicated proposals\
    \ such as defining quality-of-\n   service semantics in the flow label, or sub-dividing\
    \ the flow label\n   field into smaller sub-fields, will not prove efficient or\n\
    \   deployable, especially in high-speed routers.  There is also a\n   clearly\
    \ expressed view that using the flow label for various forms of\n   stateless\
    \ load distribution is the best simple application for it.\n   At the same time,\
    \ it is necessary to recognize that the strict\n   immutability rule has drawbacks\
    \ as noted above.\n   Even under the rules of RFC 3697, the flow label is intrinsically\n\
    \   untrustworthy, because modifications en route cannot be detected.\n   For\
    \ this reason, even with the current strict immutability rule,\n   downstream\
    \ nodes cannot rely mathematically on the value being\n   unchanged.  In this\
    \ sense, any use of the flow label must be viewed\n   as an optimization on a\
    \ best-effort basis; a packet with a changed\n   (or zero) flow label value should\
    \ never cause a hard failure.\n   The remainder of this document discusses specific\
    \ modifications to\n   the standard, which are defined normatively in a companion\
    \ document\n   [RFC6437].\n"
- title: 3.  Changes to the Specification
  contents:
  - "3.  Changes to the Specification\n   Although RFC 3697 requires that the flow\
    \ label be delivered\n   unchanged, as noted above, it is not included in any\
    \ transport-layer\n   pseudo-header checksums nor in IPsec authentication [RFC4302].\
    \  Both\n   RFC 2460 and RFC 3697 define the default flow label to be zero.  At\n\
    \   the time of writing, this is the observed value in an overwhelming\n   proportion\
    \ of IPv6 packets; the most widespread operating systems and\n   applications\
    \ do not set it, and routers do not rely on it.  Thus,\n   there is no reason\
    \ to expect operational difficulties if a careful\n   change is made to the rules\
    \ of RFC 3697.\n   In particular, the facts that the label is not checksummed\
    \ and rarely\n   used mean that the \"immutability\" of the label can be moderated\n\
    \   without serious operational consequences.\n   The purposes of the proposed\
    \ changes are to remove the uncertainties\n   left by RFC 3697, in order to encourage\
    \ setting of the flow label by\n   default, and to enable its generic use.  The\
    \ proposed generic use is\n   to encourage uniformly distributed flow labels that\
    \ can be used to\n   assist load distribution or balancing.  There should be no\
    \ impact on\n   existing IETF specifications other than RFC 3697 and no impact\
    \ on\n   currently operational software and hardware.\n   A secondary purpose\
    \ is to allow changes to the flow label in a\n   limited way, to allow hosts that\
    \ do not set the flow label to benefit\n   from it nevertheless.  The fact that\
    \ the flow label may in practice\n   be changed en route is also reflected in\
    \ the reformulation of the\n   rules.\n   A general description of the changes\
    \ follows.  The normative text is\n   to be found in [RFC6437].\n   The definition\
    \ of a flow is subtly changed from RFC 3697 to allow any\n   node, not just the\
    \ source node, to set the flow label value.\n   However, it is recommended that\
    \ sources should set a uniformly\n   distributed flow label value in all flows,\
    \ replacing the less precise\n   recommendation made in Section 3 of RFC 3697.\
    \  Both stateful and\n   stateless methods of assigning a uniformly distributed\
    \ value could be\n   used.\n   Flow label values should be chosen such that their\
    \ bits exhibit a\n   high degree of variability, thus making them suitable for\
    \ use as part\n   of the input to a hash function used in a load distribution\
    \ scheme.\n   At the same time, third parties should have a low probability of\n\
    \   guessing the next value that a source of flow labels will choose.\n   In statistics,\
    \ a discrete uniform distribution is defined as a\n   probability distribution\
    \ in which each value in a given range of\n   equally spaced values (such as a\
    \ sequence of integers) is equally\n   likely to be chosen as the next value.\
    \  The values in such a\n   distribution exhibit both variability and unguessability.\
    \  Thus, an\n   approximation to a discrete uniform distribution is preferable\
    \ as the\n   source of flow label values.  In contrast, an implementation in which\n\
    \   flow labels are assigned sequentially is definitely not recommended,\n   to\
    \ avoid guessability.\n   In practice, it is expected that a uniform distribution\
    \ of flow label\n   values will be approximated by use of a hash function or a\
    \ pseudo-\n   random number generator.  Either approach will produce values that\n\
    \   will appear pseudo-random to an external observer.\n   Section 3 of RFC 3697\
    \ allows nodes to participate in an unspecified\n   stateful method of flow state\
    \ establishment.  The changes do not\n   remove that option, but clarify that\
    \ stateless models are also\n   possible and are the recommended default. The\
    \ specific text on\n   requirements for stateful models has been reduced to a\
    \ bare minimum\n   requirement that they do not interfere with the stateless model.\
    \  To\n   enable stateless load distribution at any point in the Internet, a\n\
    \   node using a stateful model should never send packets whose flow\n   label\
    \ values do not conform to a uniform distribution.\n   The main novelty is that\
    \ a forwarding node (typically a first-hop or\n   ingress router) may set the\
    \ flow label value if the source has not\n   done so, according to the same recommendations\
    \ that apply to the\n   source.  This might place a considerable processing load\
    \ on ingress\n   routers that choose to do so, even if they adopted a stateless\
    \ method\n   of flow identification and label assignment.\n   The value of the\
    \ flow label, once it has been set, must not be\n   changed.  However, some qualifications\
    \ are placed on this rule, to\n   allow for the fact that the flow label is an\
    \ unprotected field and\n   might be misused.  No Internet-wide mechanism can\
    \ depend\n   mathematically on immutable flow labels.  The new rules require that\n\
    \   flow labels exported to the Internet should always be either zero or\n   uniformly\
    \ distributed, but even this cannot be relied on\n   mathematically.  Use cases\
    \ need to be robust against non-conforming\n   flow label values.  This will also\
    \ enhance compatibility with any\n   legacy hosts that set the flow label according\
    \ to RFC 2460 and RFC\n   3697.\n   A complication that led to much discussion\
    \ is the possibility that\n   hosts inside a particular network domain might use\
    \ a stateful method\n   of setting the flow label, and that packets bearing stateful\
    \ labels\n   might then erroneously escape the domain and be received by nodes\n\
    \   performing stateless processing, such as load balancing.  This might\n   result\
    \ in undesirable operational implications (e.g., congestion,\n   reordering) for\
    \ not only the inappropriately flow-labeled packets,\n   but also well-behaved\
    \ flow-labeled packets, during forwarding at\n   various intermediate devices.\
    \  It was suggested that border routers\n   might \"correct\" this problem by\
    \ overwriting such labels in packets\n   leaving the domain.  However, neither\
    \ domain border egress routers\n   nor intermediate routers/devices (using a flow\
    \ label, for example, as\n   a part of an input key for a load-distribution hash)\
    \ can determine by\n   inspection that a value is not part of a uniform distribution.\
    \  Thus,\n   there is no way that such values can be detected and \"corrected\"\
    .\n   Therefore, the recommendation to choose flow labels from a uniform\n   distribution\
    \ also applies to stateful schemes.\n"
- title: 4.  Discussion
  contents:
  - "4.  Discussion\n   The following are some practical consequences of the above\
    \ changes:\n   o  Sending hosts that are not updated will in practice continue\
    \ to\n      send all-zero labels.  If there is no label-setting router along\n\
    \      the path taken by a packet, the label will be delivered as zero.\n   o\
    \  Sending hosts conforming to the new specification will by default\n      choose\
    \ uniformly distributed labels between 1 and 0xFFFFF.\n   o  Sending hosts may\
    \ continue to send all-zero labels, in which case\n      an ingress router may\
    \ set uniformly distributed labels between 1\n      and 0xFFFFF.\n   o  The flow\
    \ label is no longer unrealistically asserted to be\n      strictly immutable;\
    \ it is recognized that it may, incorrectly, be\n      changed en route.  In some\
    \ circumstances, this will break end-to-\n      end usage, e.g., potential detection\
    \ of third-party spoofing\n      attacks [LABEL-SEC].\n   o  The expected default\
    \ usage of the flow label is some form of\n      stateless load distribution,\
    \ such as the ECMP/LAG usage defined in\n      [RFC6438].\n   o  If the new rules\
    \ are followed, all IPv6 traffic flows on the\n      Internet should have zero\
    \ or uniformly distributed flow label\n      values.\n   From an operational viewpoint,\
    \ existing IPv6 hosts that set a default\n   (zero) flow label value and ignore\
    \ the flow label on receipt will be\n   unaffected by implementations of the new\
    \ specification.  In general,\n   it is assumed that hosts will ignore the value\
    \ of the flow label on\n   receipt; it cannot be relied on as an end-to-end signal.\
    \  However,\n   this doesn't apply if a cryptographically generated label is being\n\
    \   used to detect attackers [LABEL-SEC].\n   Similarly, routers that ignore the\
    \ flow label will be unaffected by\n   implementations of the specification.\n\
    \   Hosts that set a default (zero) flow label but are in a domain where\n   routers\
    \ set a label as recommended in Section 3 will benefit from\n   whatever flow\
    \ label handling is used on the path.\n   Hosts and routers that adopt the recommended\
    \ mechanism will enhance\n   the performance of any load balancing devices that\
    \ include the flow\n   label in the hash used to select a particular path or server,\
    \ even\n   when packets leave the local domain.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   See [RFC6437] and [LABEL-SEC] for full discussion.\
    \  Some useful\n   remarks are in [Partridge].\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   The authors are grateful to Qinwen Hu for general discussion\
    \ about\n   the flow label and for his work in searching the literature.\n   Valuable\
    \ comments and contributions were made by Ran Atkinson, Fred\n   Baker, Steve\
    \ Blake, Remi Despres, Alan Ford, Fernando Gont, Brian\n   Haberman, Tony Hain,\
    \ Joel Halpern, Chris Morrow, Thomas Narten, Pekka\n   Savola, Mark Smith, Pascal\
    \ Thubert, Iljitsch van Beijnum, and other\n   participants in the 6man working\
    \ group.\n"
- title: 7.  Informative References
  contents:
  - "7.  Informative References\n   [FLOWSWITCH]  Beckman, M., \"IPv6 Dynamic Flow\
    \ Label Switching (FLS)\",\n                 Work in Progress, March 2007.\n \
    \  [LABEL-SEC]   Gont, F., \"Security Assessment of the IPv6 Flow Label\",\n \
    \                Work in Progress, November 2010.\n   [McGann05]    McGann, O.\
    \ and D. Malone, \"Flow Label Filtering\n                 Feasibility\", European\
    \ Conference on Computer Network\n                 Defence , 2005.\n   [NIST]\
    \        Frankel, S., Graveman, R., Pearce, J., and M. Rooks,\n              \
    \   \"Guidelines for the Secure Deployment of IPv6\",\n                 National\
    \ Institute of Standards and Technology Special\n                 Publication\
    \ 800-119, 2010, <http://csrc.nist.gov/\n                 publications/nistpubs/800-119/sp800-119.pdf>.\n\
    \   [NSA]         Potyraj, C., \"Firewall Design Considerations for IPv6\",\n\
    \                 National Security Agency I733-041R-2007, 2007,\n           \
    \      <http://www.nsa.gov/ia/_files/ipv6/I733-041R-2007.pdf>.\n   [Partridge]\
    \   Partridge, C., Arsenault, A., and S. Kent, \"Information\n               \
    \  Assurance and the Transition to IP Version 6 (IPv6)\",\n                 Military\
    \ Communications Conference (MILCOM 2007)  ,\n                 2007, <http://www.ir.bbn.com/documents/articles/\n\
    \                 MILCOM_Paper_from_Proceedings.pdf>.\n   [RFC2205]     Braden,\
    \ B., Zhang, L., Berson, S., Herzog, S., and S.\n                 Jamin, \"Resource\
    \ ReSerVation Protocol (RSVP) -- Version\n                 1 Functional Specification\"\
    , RFC 2205, September 1997.\n   [RFC2460]     Deering, S. and R. Hinden, \"Internet\
    \ Protocol, Version\n                 6 (IPv6) Specification\", RFC 2460, December\
    \ 1998.\n   [RFC2474]     Nichols, K., Blake, S., Baker, F., and D. Black,\n \
    \                \"Definition of the Differentiated Services Field (DS\n     \
    \            Field) in the IPv4 and IPv6 Headers\", RFC 2474,\n              \
    \   December 1998.\n   [RFC3697]     Rajahalme, J., Conta, A., Carpenter, B.,\
    \ and S.\n                 Deering, \"IPv6 Flow Label Specification\", RFC 3697,\n\
    \                 March 2004.\n   [RFC4302]     Kent, S., \"IP Authentication\
    \ Header\", RFC 4302,\n                 December 2005.\n   [RFC6294]     Hu, Q.\
    \ and B. Carpenter, \"Survey of Proposed Use Cases\n                 for the IPv6\
    \ Flow Label\", RFC 6294, June 2011.\n   [RFC6437]     Amante, S., Carpenter,\
    \ B., Jiang, S., and J. Rajahalme,\n                 \"IPv6 Flow Label Specification\"\
    , RFC 6437, November\n                 2011.\n   [RFC6438]     Carpenter, B. and\
    \ S. Amante, \"Using the IPv6 Flow Label\n                 for Equal Cost Multipath\
    \ Routing and Link Aggregation\n                 in Tunnels\", RFC 6438, November\
    \ 2011.\n"
- title: Appendix A.  Alternative Approaches
  contents:
  - "Appendix A.  Alternative Approaches\n   A model was discussed in an earlier version\
    \ of this document which\n   defined a notion of 'flow label domain' analogous\
    \ to a differentiated\n   services domain [RFC2474].  This model would have encouraged\
    \ local\n   usage of the flow label as an alternative to any form of generic use,\n\
    \   but it required complex rules for the behavior of domain boundary\n   routers,\
    \ and proved controversial in discussion.\n   Two even more complex alternative\
    \ approaches were also considered and\n   rejected.\n   The first was to distinguish\
    \ locally significant flow labels from\n   those conforming to RFC 3697 by setting\
    \ or clearing the most\n   significant bit (MSB) of the flow label.  This led\
    \ to quite\n   complicated rules, seems impossible to make fully self-consistent,\n\
    \   and was not considered practical.\n   The second was to use a specific differentiated\
    \ services code point\n   (DSCP) [RFC2474] in the Traffic Class octet instead\
    \ of the MSB of the\n   flow label itself, to flag a locally defined behavior.\
    \  A more\n   elaborate version of this was proposed in [FLOWSWITCH].  There are\n\
    \   two issues with that approach.  One is that DSCP values are\n   themselves\
    \ only locally significant, inconsistent with the end-to-end\n   nature of the\
    \ original flow label definition.  Secondly, it seems\n   unwise to meld the semantics\
    \ of differentiated services, which are\n   currently deployed, with the unknown\
    \ future semantics of flow label\n   usage.  However, this approach, while not\
    \ recommended, does not\n   appear to violate any basic principles if applied\
    \ strictly within a\n   single differentiated services domain.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Shane Amante\n   Level 3 Communications, LLC\n   1025\
    \ Eldorado Blvd\n   Broomfield, CO  80021\n   USA\n   EMail: shane@level3.net\n\
    \   Brian Carpenter\n   Department of Computer Science\n   University of Auckland\n\
    \   PB 92019\n   Auckland,   1142\n   New Zealand\n   EMail: brian.e.carpenter@gmail.com\n\
    \   Sheng Jiang\n   Huawei Technologies Co., Ltd\n   Q14, Huawei Campus\n   No.156\
    \ Beiqing Road\n   Hai-Dian District, Beijing  100095\n   P.R. China\n   EMail:\
    \ jiangsheng@huawei.com\n"
