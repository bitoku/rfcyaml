- title: __initial_text__
  contents:
  - "        The Use of Galois Message Authentication Code (GMAC) in\n           \
    \                 IPsec ESP and AH\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo describes the use of the Advanced Encryption Standard\
    \ (AES)\n   Galois Message Authentication Code (GMAC) as a mechanism to provide\n\
    \   data origin authentication, but not confidentiality, within the IPsec\n  \
    \ Encapsulating Security Payload (ESP) and Authentication Header (AH).\n   GMAC\
    \ is based on the Galois/Counter Mode (GCM) of operation, and can\n   be efficiently\
    \ implemented in hardware for speeds of 10 gigabits per\n   second and above,\
    \ and is also well-suited to software\n   implementations.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \      1.1. Conventions Used in This Document ..........................3\n  \
    \ 2. AES-GMAC ........................................................3\n   3.\
    \ The Use of AES-GMAC in ESP ......................................3\n      3.1.\
    \ Initialization Vector ......................................4\n      3.2. Nonce\
    \ Format ...............................................4\n      3.3. AAD Construction\
    \ ...........................................5\n      3.4. Integrity Check Value\
    \ (ICV) ................................6\n      3.5. Differences with AES-GCM-ESP\
    \ ...............................6\n      3.6. Packet Expansion ...........................................7\n\
    \   4. The Use of AES-GMAC in AH .......................................7\n  \
    \ 5. IKE Conventions .................................................8\n    \
    \  5.1. Phase 1 Identifier .........................................8\n      5.2.\
    \ Phase 2 Identifier .........................................8\n      5.3. Key\
    \ Length Attribute .......................................9\n      5.4. Keying\
    \ Material and Salt Values ............................9\n   6. Test Vectors ....................................................9\n\
    \   7. Security Considerations ........................................10\n  \
    \ 8. Design Rationale ...............................................11\n   9.\
    \ IANA Considerations ............................................11\n   10. Acknowledgements\
    \ ..............................................11\n   11. References ....................................................12\n\
    \      11.1. Normative References .....................................12\n  \
    \    11.2. Informative References ...................................12\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document describes the use of AES-GMAC mode (AES-GMAC)\
    \ as a\n   mechanism for data origin authentication in ESP [RFC4303] and AH\n\
    \   [RFC4302].  We refer to these methods as ENCR_NULL_AUTH_AES_GMAC and\n   AUTH_AES_GMAC,\
    \ respectively.  ENCR_NULL_AUTH_AES_GMAC is a companion\n   to the AES Galois/Counter\
    \ Mode ESP [RFC4106], which provides\n   authentication as well as confidentiality.\
    \  ENCR_NULL_AUTH_AES_GMAC\n   is intended for cases in which confidentiality\
    \ is not desired.  Like\n   GCM, GMAC is efficient and secure, and is amenable\
    \ to high-speed\n   implementations in hardware.  ENCR_NULL_AUTH_AES_GMAC and\n\
    \   AUTH_AES_GMAC are designed so that the incremental cost of\n   implementation,\
    \ given an implementation is AES-GCM-ESP, is small.\n   This document does not\
    \ cover implementation details of GCM or GMAC.\n   Those details can be found\
    \ in [GCM], along with test vectors.\n"
- title: 1.1.  Conventions Used in This Document
  contents:
  - "1.1.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 2.  AES-GMAC
  contents:
  - "2.  AES-GMAC\n   GMAC is a block cipher mode of operation providing data origin\n\
    \   authentication.  It is defined in terms of the GCM authenticated\n   encryption\
    \ operation as follows.  The GCM authenticated encryption\n   operation has four\
    \ inputs: a secret key, an initialization vector\n   (IV), a plaintext, and an\
    \ input for additional authenticated data\n   (AAD).  It has two outputs, a ciphertext\
    \ whose length is identical to\n   the plaintext and an authentication tag.  GMAC\
    \ is the special case of\n   GCM in which the plaintext has a length of zero.\
    \  The (zero-length)\n   ciphertext output is ignored, of course, so that the\
    \ only output of\n   the function is the Authentication Tag.  In the following,\
    \ we\n   describe how the GMAC IV and AAD are formed from the ESP and AH\n   fields,\
    \ and how the ESP and AH packets are formed from the\n   Authentication Tag.\n\
    \   Below we refer to the AES-GMAC IV input as a nonce, in order to\n   distinguish\
    \ it from the IV fields in the packets.  The same nonce and\n   key combination\
    \ MUST NOT be used more than once, since reusing a\n   nonce/key combination destroys\
    \ the security guarantees of AES-GMAC.\n   Because of this restriction, it can\
    \ be difficult to use this mode\n   securely when using statically configured\
    \ keys.  For the sake of good\n   security, implementations MUST use an automated\
    \ key management\n   system, such as the Internet Key Exchange (IKE) (either version\
    \ two\n   [RFC4306] or version one [RFC2409]), to ensure that this requirement\n\
    \   is met.\n"
- title: 3.  The Use of AES-GMAC in ESP
  contents:
  - "3.  The Use of AES-GMAC in ESP\n   The AES-GMAC algorithm for ESP is defined\
    \ as an ESP \"combined mode\"\n   algorithm (see Section 3.2.3 of [RFC4303]),\
    \ rather than an ESP\n   integrity algorithm.  It is called ENCR_NULL_AUTH_AES_GMAC\
    \ to\n   highlight the fact that it performs no encryption and provides no\n \
    \  confidentiality.\n      Rationale: ESP makes no provision for integrity transforms\
    \ to\n      place an initialization vector within the Payload field; only\n  \
    \    encryption transforms are expected to use IVs.  Defining GMAC as\n      an\
    \ encryption transform avoids this issue, and allows GMAC to\n      benefit from\
    \ the same pipelining as does GCM.\n   Like all ESP combined modes, it is registered\
    \ in IKEv2 as an\n   encryption transform, or \"Type 1\" transform.  It MUST NOT\
    \ be used in\n   conjunction with any other ESP encryption transform (within a\n\
    \   particular ESP encapsulation).  If confidentiality is desired, then\n   GCM\
    \ ESP [RFC4106] SHOULD be used instead.\n"
- title: 3.1.  Initialization Vector
  contents:
  - "3.1.  Initialization Vector\n   With ENCR_NULL_AUTH_AES_GMAC, an explicit Initialization\
    \ Vector (IV)\n   is included in the ESP Payload, at the outset of that field.\
    \  The IV\n   MUST be eight octets long.  For a given key, the IV MUST NOT repeat.\n\
    \   The most natural way to meet this requirement is to set the IV using\n   a\
    \ counter, but implementations are free to set the IV field in any\n   way that\
    \ guarantees uniqueness, such as a linear feedback shift\n   register (LFSR).\
    \  Note that the sender can use any IV generation\n   method that meets the uniqueness\
    \ requirement without coordinating\n   with the receiver.\n"
- title: 3.2.  Nonce Format
  contents:
  - "3.2.  Nonce Format\n   The nonce passed to the AES-GMAC authentication algorithm\
    \ has the\n   following layout:\n    0                   1                   2\
    \                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             Salt                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     Initialization Vector                     |\n   |  \
    \                                                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                        Figure 1: Nonce Format\n   The components of the nonce\
    \ are as follows:\n   Salt\n      The salt field is a four-octet value that is\
    \ assigned at the\n      beginning of the security association, and then remains\
    \ constant\n      for the life of the security association.  The salt SHOULD be\n\
    \      unpredictable (i.e., chosen at random) before it is selected, but\n   \
    \   need not be secret.  We describe how to set the salt for a\n      Security\
    \ Association established via the Internet Key Exchange in\n      Section 5.4.\n\
    \   Initialization Vector\n      The IV field is described in Section 3.1.\n"
- title: 3.3.  AAD Construction
  contents:
  - "3.3.  AAD Construction\n   Data integrity and data origin authentication are\
    \ provided for the\n   SPI, (Extended) Sequence Number, Authenticated Payload,\
    \ Padding, Pad\n   Length, and Next Header fields.  This is done by including\
    \ those\n   fields in the AES-GMAC Additional Authenticated Data (AAD) field.\n\
    \   Two formats of the AAD are defined: one for 32-bit sequence numbers,\n   and\
    \ one for 64-bit extended sequence numbers.  The format with 32-bit\n   sequence\
    \ numbers is shown in Figure 2, and the format with 64-bit\n   extended sequence\
    \ numbers is shown in Figure 3.\n    0                   1                   2\
    \                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                               SPI                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     32-bit Sequence Number                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   ~  \
    \              Authenticated Payload (variable)               ~\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Padding (0-255 bytes)                      |\n   +  \
    \                             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |        \
    \                       |  Pad Length   | Next Header   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \            Figure 2: AAD Format with 32-bit Sequence Number\n    0         \
    \          1                   2                   3\n    0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                               SPI                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                 64-bit Extended Sequence Number               |\n   |  \
    \                                                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   ~  \
    \              Authenticated Payload (variable)               ~\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Padding (0-255 bytes)                      |\n   +  \
    \                             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |        \
    \                       |  Pad Length   | Next Header   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \        Figure 3: AAD Format with 64-bit Extended Sequence Number\n   The use\
    \ of 32-bit sequence numbers vs. 64-bit extended sequence\n   numbers is determined\
    \ by the security association (SA) management\n   protocol that is used to create\
    \ the SA.  For IKEv2 [RFC4306] this is\n   negotiated via Transform Type 5, and\
    \ the default for ESP is to use\n   64-bit extended sequence numbers in the absence\
    \ of negotiation (e.g.,\n   see Section 2.2.1 of [RFC4303]).\n"
- title: 3.4.  Integrity Check Value (ICV)
  contents:
  - "3.4.  Integrity Check Value (ICV)\n   The ICV consists solely of the AES-GMAC\
    \ Authentication Tag.  The\n   Authentication Tag MUST NOT be truncated, so the\
    \ length of the ICV is\n   16 octets.\n"
- title: 3.5.  Differences with AES-GCM-ESP
  contents:
  - "3.5.  Differences with AES-GCM-ESP\n   In this section, we highlight the differences\
    \ between this\n   specification and AES-GCM-ESP [RFC4106].  The essential difference\
    \ is\n   that in this document, the AAD consists of the SPI, Sequence Number,\n\
    \   and ESP Payload, and the AES-GCM plaintext is zero-length, while in\n   AES-GCM-ESP,\
    \ the AAD consists only of the SPI and Sequence Number,\n   and the AES-GCM plaintext\
    \ consists of the ESP Payload.  These\n   differences are illustrated in Figure\
    \ 4.  This figure shows the case\n   in which the Extended Sequence Number option\
    \ is not used.  When that\n   option is exercised, the Sequence Number field in\
    \ the figure would be\n   replaced with the Extended Sequence Number.\n   Importantly,\
    \ ENCR_NULL_AUTH_AES_GMAC is *not* equivalent to AES-GCM-\n   ESP with encryption\
    \ \"turned off\".  However, the ICV computations\n   performed in both cases are\
    \ similar because of the structure of the\n   GHASH function [GCM].\n        \
    \             +-> +-----------------------+ <-+\n      AES-GCM-ESP    |   |  \
    \        SPI          |   |\n          AAD -------+   +-----------------------+\
    \   |\n                     |   |    Sequence Number    |   |\n              \
    \       +-> +-----------------------+   |\n                         |    Authentication\
    \     |   |\n                         |          IV           |   |\n        \
    \          +->+-> +-----------------------+   +\n      AES-GCM-ESP |      |  \
    \                     |   |\n       Plaintext -+      ~       ESP Payload    \
    \ ~   |\n                  |      |                       |   |\n            \
    \      |      +-----------+-----+-----+   |\n                  |      | Padding\
    \   |  PL | NH  |   |\n                  +----> +-----------+-----+-----+ <-+\n\
    \                                                     |\n                    \
    \   ENCR_NULL_AUTH_AES_GMAC AAD --+\n   Figure 4: Differences between ENCR_NULL_AUTH_AES_GMAC\
    \ and AES-GCM-ESP\n"
- title: 3.6.  Packet Expansion
  contents:
  - "3.6.  Packet Expansion\n   The IV adds an additional eight octets to the packet\
    \ and the ICV adds\n   an additional 16 octets.  These are the only sources of\
    \ packet\n   expansion, other than the 10-13 bytes taken up by the ESP SPI,\n\
    \   Sequence Number, Padding, Pad Length, and Next Header fields (if the\n   minimal\
    \ amount of padding is used).\n"
- title: 4.  The Use of AES-GMAC in AH
  contents:
  - "4.  The Use of AES-GMAC in AH\n   In AUTH_AES_GMAC, the AH Authentication Data\
    \ field consists of the IV\n   and the Authentication Tag, as shown in Figure\
    \ 5.  Unlike the usual\n   AH case, the Authentication Data field contains both\
    \ an input to the\n   authentication algorithm (the IV) and the output of the\n\
    \   authentication algorithm (the tag).  No padding is required in the\n   Authentication\
    \ Data field, because its length is a multiple of 64\n   bits.\n    0        \
    \           1                   2                   3\n    0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Initialization Vector (IV)                 |\n   |  \
    \                          (8 octets)                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   |  \
    \           Integrity Check Value (ICV) (16 octets)           |\n   |        \
    \                                                       |\n   |              \
    \                                                 |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       Figure 5: The AUTH_AES_GMAC Authentication Data Format\n   The IV is as\
    \ described in Section 3.1.  The Integrity Check Value\n   (ICV) is as described\
    \ in Section 3.4.\n   The GMAC Nonce input is formed as described in Section 3.2.\
    \  The GMAC\n   AAD input consists of the authenticated data as defined in Section\n\
    \   3.1 of [RFC4302].  These values are provided as to that algorithm,\n   along\
    \ with the secret key, and the resulting authentication tag given\n   as output\
    \ is used to form the ICV.\n"
- title: 5.  IKE Conventions
  contents:
  - "5.  IKE Conventions\n   This section describes the conventions used to generate\
    \ keying\n   material and salt values for use with ENCR_NULL_AUTH_AES_GMAC and\n\
    \   AUTH_AES_GMAC using the Internet Key Exchange (IKE) versions one\n   [RFC2409]\
    \ and two [RFC4306].\n"
- title: 5.1.  Phase 1 Identifier
  contents:
  - "5.1.  Phase 1 Identifier\n   This document does not specify the conventions for\
    \ using AES-GMAC for\n   IKE Phase 1 negotiations.  For AES-GMAC to be used in\
    \ this manner, a\n   separate specification would be needed, and an Encryption\
    \ Algorithm\n   Identifier would need to be assigned.  Implementations SHOULD\
    \ use an\n   IKE Phase 1 cipher that is at least as strong as AES-GMAC.  The use\n\
    \   of AES-CBC [RFC3602] with the same AES key size as used by\n   ENCR_NULL_AUTH_AES_GMAC\
    \ or AUTH_AES_GMAC is RECOMMENDED.\n"
- title: 5.2.  Phase 2 Identifier
  contents:
  - "5.2.  Phase 2 Identifier\n   For IKE Phase 2 negotiations, IANA has assigned\
    \ identifiers as\n   described in Section 9.\n"
- title: 5.3.  Key Length Attribute
  contents:
  - "5.3.  Key Length Attribute\n   AES-GMAC can be used with any of the three AES\
    \ key lengths.  The way\n   that the key length is indicated is different for\
    \ AH and ESP.\n   For AH, each key length has its own separate integrity transform\n\
    \   identifier and algorithm name (Section 9).  The IKE Key Length\n   attribute\
    \ MUST NOT be used with these identifiers.  This transform\n   MUST NOT be used\
    \ with ESP.\n   For ESP, there is a single encryption transform identifier (which\n\
    \   represents the combined transform) (Section 9).  The IKE Key Length\n   attribute\
    \ MUST be used with each use of this identifier to indicate\n   the key length.\
    \  The Key Length attribute MUST have a value of 128,\n   192, or 256.\n"
- title: 5.4.  Keying Material and Salt Values
  contents:
  - "5.4.  Keying Material and Salt Values\n   IKE makes use of a pseudo-random function\
    \ (PRF) to derive keying\n   material.  The PRF is used iteratively to derive\
    \ keying material of\n   arbitrary size, called KEYMAT.  Keying material is extracted\
    \ from the\n   output string without regard to boundaries.\n   The size of the\
    \ KEYMAT for the ENCR_NULL_AUTH_AES_GMAC and\n   AUTH_AES_GMAC MUST be four octets\
    \ longer than is needed for the\n   associated AES key.  The keying material is\
    \ used as follows:\n   ENCR_NULL_AUTH_AES_GMAC with a 128-bit key and AUTH_AES_128_GMAC\n\
    \      The KEYMAT requested for each AES-GMAC key is 20 octets.  The\n      first\
    \ 16 octets are the 128-bit AES key, and the remaining four\n      octets are\
    \ used as the salt value in the nonce.\n   ENCR_NULL_AUTH_AES_GMAC with a 192-bit\
    \ key and AUTH_AES_192_GMAC\n      The KEYMAT requested for each AES-GMAC key\
    \ is 28 octets.  The\n      first 24 octets are the 192-bit AES key, and the remaining\
    \ four\n      octets are used as the salt value in the nonce.\n   ENCR_NULL_AUTH_AES_GMAC\
    \ with a 256-bit key and AUTH_AES_256_GMAC\n      The KEYMAT requested for each\
    \ AES-GMAC key is 36 octets.  The\n      first 32 octets are the 256-bit AES key,\
    \ and the remaining four\n      octets are used as the salt value in the nonce.\n"
- title: 6.  Test Vectors
  contents:
  - "6.  Test Vectors\n   Appendix B of [GCM] provides test vectors that will assist\n\
    \   implementers with AES-GMAC.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   Since the authentication coverage is different\
    \ between AES-GCM-ESP\n   and this specification (see Figure 4), it is worth pointing\
    \ out that\n   both specifications are secure.  In ENCR_NULL_AUTH_AES_GMAC, the\
    \ IV\n   is not included in either the plaintext or the additional\n   authenticated\
    \ data.  This does not adversely affect security, because\n   the IV field only\
    \ provides an input to the GMAC IV, which is not\n   required to be authenticated\
    \ (see [GCM]).  In AUTH_AES_GMAC, the IV\n   is included in the additional authenticated\
    \ data.  This fact has no\n   adverse effect on security; it follows from the\
    \ property that GMAC is\n   secure even against attacks in which the adversary\
    \ can manipulate\n   both the IV and the message.  Even an adversary with these\
    \ powerful\n   capabilities cannot forge an authentication tag for any message\n\
    \   (other than one that was submitted to the chosen-message oracle).\n   Since\
    \ such an adversary could easily choose messages that contain the\n   IVs with\
    \ which they correspond, there are no security problems with\n   the inclusion\
    \ of the IV in the AAD.\n   GMAC is provably secure against adversaries that can\
    \ adaptively\n   choose plaintexts, ICVs and the AAD field, under standard\n \
    \  cryptographic assumptions (roughly, that the output of the underlying\n   cipher\
    \ under a randomly chosen key is indistinguishable from a\n   randomly selected\
    \ output).  Essentially, this means that, if used\n   within its intended parameters,\
    \ a break of GMAC implies a break of\n   the underlying block cipher.  The proof\
    \ of security is available in\n   [GCMP].\n   The most important security consideration\
    \ is that the IV never\n   repeats for a given key.  In part, this is handled\
    \ by disallowing the\n   use of AES-GMAC when using statically configured keys,\
    \ as discussed\n   in Section 2.\n   When IKE is used to establish fresh keys\
    \ between two peer entities,\n   separate keys are established for the two traffic\
    \ flows.  If a\n   different mechanism is used to establish fresh keys, one that\n\
    \   establishes only a single key to protect packets, then there is a\n   high\
    \ probability that the peers will select the same IV values for\n   some packets.\
    \  Thus, to avoid counter block collisions, ESP or AH\n   implementations that\
    \ permit use of the same key for protecting\n   packets with the same peer MUST\
    \ ensure that the two peers assign\n   different salt values to the security association\
    \ (SA).\n   The other consideration is that, as with any block cipher mode of\n\
    \   operation, the security of all data protected under a given security\n   association\
    \ decreases slightly with each message.\n   To protect against this problem, implementations\
    \ MUST generate a\n   fresh key before processing 2^64 blocks of data with a given\
    \ key.\n   Note that it is impossible to reach this limit when using 32-bit\n\
    \   Sequence Numbers.\n   Note that, for each message, GMAC calls the block cipher\
    \ only once.\n"
- title: 8.  Design Rationale
  contents:
  - "8.  Design Rationale\n   This specification was designed to be as similar to\
    \ AES-GCM-ESP\n   [RFC4106] as possible.  We re-use the design and implementation\n\
    \   experience from that specification.  We include all three AES key\n   sizes\
    \ since AES-GCM-ESP supports all of those sizes, and the larger\n   key sizes\
    \ provide future users with more high-security options.\n"
- title: 9.  IANA Considerations
  contents:
  - "9.  IANA Considerations\n   IANA has assigned the following IKEv2 parameters.\
    \  For the use of AES\n   GMAC in AH, the following integrity (type 3) transform\
    \ identifiers\n   have been assigned:\n       \"9\" for AUTH_AES_128_GMAC\n  \
    \    \"10\" for AUTH_AES_192_GMAC\n      \"11\" for AUTH_AES_256_GMAC\n   For\
    \ the use of AES-GMAC in ESP, the following encryption (type 1)\n   transform\
    \ identifier has been assigned:\n      \"21\" for ENCR_NULL_AUTH_AES_GMAC\n"
- title: 10.  Acknowledgements
  contents:
  - "10.  Acknowledgements\n   Our discussions with Fabio Maino and David Black significantly\n\
    \   improved this specification, and Tero Kivinen provided us with useful\n  \
    \ comments.  Steve Kent provided guidance on ESP interactions.  This\n   work\
    \ is closely modeled after AES-GCM, which itself is closely\n   modeled after\
    \ Russ Housley's AES-CCM transform [RFC4309].\n   Additionally, the GCM mode of\
    \ operation was originally conceived as\n   an improvement to the CWC mode [CWC]\
    \ in which Doug Whiting and Yoshi\n   Kohno participated.  We express our thanks\
    \ to Fabio, David, Tero,\n   Steve, Russ, Doug, and Yoshi.\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [GCM]      McGrew, D. and J. Viega, \"The Galois/Counter\
    \ Mode of\n              Operation (GCM)\", Submission to NIST. http://\n    \
    \          csrc.nist.gov/CryptoToolkit/modes/proposedmodes/gcm/\n            \
    \  gcm-spec.pdf, January 2004.\n   [RFC2119]  Bradner, S., \"Key words for use\
    \ in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC3602]  Frankel, S., Glenn, R., and S. Kelly, \"The AES-CBC Cipher\n\
    \              Algorithm and Its Use with IPsec\", RFC 3602, September\n     \
    \         2003.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [CWC]      Kohno, T., Viega, J., and D. Whiting,\
    \ \"CWC: A high-\n              performance conventional authenticated encryption\
    \ mode\",\n              Fast Software Encryption.\n              http://eprint.iacr.org/2003/106.pdf,\
    \ February 2004.\n   [GCMP]     McGrew, D. and J. Viega, \"The Security and Performance\
    \ of\n              the Galois/Counter Mode (GCM)\", Proceedings of INDOCRYPT\n\
    \              '04, http://eprint.iacr.org/2004/193, December 2004.\n   [RFC2409]\
    \  Harkins, D. and D. Carrel, \"The Internet Key Exchange\n              (IKE)\"\
    , RFC 2409, November 1998.\n   [RFC4106]  Viega, J. and D. McGrew, \"The Use of\
    \ Galois/Counter Mode\n              (GCM) in IPsec Encapsulating Security Payload\
    \ (ESP)\", RFC\n              4106, June 2005.\n   [RFC4302]  Kent, S., \"IP Authentication\
    \ Header\", RFC 4302, December\n              2005.\n   [RFC4303]  Kent, S., \"\
    IP Encapsulating Security Payload (ESP)\", RFC\n              4303, December 2005.\n\
    \   [RFC4306]  Kaufman, C., \"Internet Key Exchange (IKEv2) Protocol\", RFC\n\
    \              4306, December 2005.\n   [RFC4309]  Housley, R., \"Using Advanced\
    \ Encryption Standard (AES) CCM\n              Mode with IPsec Encapsulating Security\
    \ Payload (ESP)\", RFC\n              4309, December 2005.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   David A. McGrew\n   Cisco Systems, Inc.\n   510 McCarthy\
    \ Blvd.\n   Milpitas, CA  95035\n   US\n   Phone: (408) 525 8651\n   EMail: mcgrew@cisco.com\n\
    \   URI:   http://www.mindspring.com/~dmcgrew/dam.htm\n   John Viega\n   McAfee,\
    \ Inc.\n   1145 Herndon Parkway, Suite 500\n   Herndon, VA 20170\n   EMail: viega@list.org\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
