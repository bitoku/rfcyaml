- title: __initial_text__
  contents:
  - '     Deployment Considerations for Lemonade-Compliant Mobile Email

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet Best Current Practices\
    \ for the\n   Internet Community, and requests discussion and suggestions for\n\
    \   improvements.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document discusses deployment issues and describes requirements\n\
    \   for successful deployment of mobile email that are implicit in the\n   IETF\
    \ lemonade documents.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Conventions Used in This Document ...............................2\n  \
    \ 3. Ports ...........................................................2\n   4.\
    \ TCP Connections .................................................3\n      4.1.\
    \ Lifetime ...................................................4\n      4.2. Maintenance\
    \ during Temporary Transport Loss ................5\n   5. Dormancy ........................................................6\n\
    \   6. Firewalls .......................................................6\n  \
    \    6.1. Firewall Traversal .........................................7\n   7.\
    \ NATs ............................................................8\n   8. Security\
    \ Considerations .........................................8\n   9. Acknowledgments\
    \ ................................................10\n   10. Normative References\
    \ ..........................................10\n   11. Informative References\
    \ ........................................10\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The IETF lemonade group has developed a set of extensions\
    \ to IMAP and\n   Message Submission, along with a profile document that restricts\n\
    \   server behavior and describes client usage [PROFILE].\n   Successful deployment\
    \ of lemonade-compliant mobile email requires\n   various functionality that is\
    \ generally assumed and hence not often\n   covered in email RFCs.  This document\
    \ describes some of these\n   additional considerations, with a focus on those\
    \ that have been\n   reported to be problematic.\n"
- title: 2.  Conventions Used in This Document
  contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [KEYWORDS].\n"
- title: 3.  Ports
  contents:
  - "3.  Ports\n   Both IMAP and Message Submission have been assigned well-known\
    \ ports\n   [IANA] that MUST be available.  IMAP uses port 143.  Message\n   Submission\
    \ uses port 587.  It is REQUIRED that the client be able to\n   contact the server\
    \ on these ports.  Hence, the client and server\n   systems, as well as any intermediary\
    \ systems, MUST allow\n   communication on these ports.\n   Historically, Message\
    \ User Agents (MUAs) have used port 25 for\n   Message Submission, and [SUBMISSION]\
    \ does accommodate this.  However,\n   it has become increasingly common for ISPs\
    \ and organizations to\n   restrict outbound port 25.  Additionally, hotels and\
    \ other public\n   accommodations sometimes intercept port 25 connections, regardless\
    \ of\n   the destination host, resulting in users unexpectedly submitting\n  \
    \ potentially sensitive communications to unknown and untrusted third-\n   party\
    \ servers.  Typically, users are not aware of such interception.\n   (Such interception\
    \ violates [FIREWALLS] and has many negative\n   consequences.)\n   Due to endemic\
    \ security vulnerabilities in widely deployed SMTP\n   servers, organizations\
    \ often employ application-level firewalls that\n   intercept SMTP and permit\
    \ only a limited subset of the protocol.  New\n   extensions are therefore more\
    \ difficult to deploy on port 25.  Since\n   lemonade requires support for several\
    \ [SUBMISSION] extensions, it is\n   extremely important that lemonade clients\
    \ use, and lemonade servers\n   listen on, port 587 by default.\n   In addition\
    \ to communications between the client and server systems,\n   lemonade requires\
    \ that the Message Submission server be able to\n   establish a TCP connection\
    \ to the IMAP server (for forward-without-\n   download).  This uses port 143\
    \ by default.\n   Messaging clients sometimes use protocols to store, retrieve,\
    \ and\n   update configuration and preference data.  Functionality such as\n \
    \  setting a new device to use the configuration and preference data of\n   another\
    \ device, or having a device inherit default configuration data\n   from a user\
    \ account, an organization, or other source, is likely to\n   be even more useful\
    \ with small mobile devices.  Various protocols can\n   be used for configuration\
    \ and preference data; most of these\n   protocols have designated ports.  It\
    \ is important that clients be\n   able to contact such servers on the appropriate\
    \ ports.  As an\n   example, one protocol that can be used for this purpose is\
    \ [ACAP], in\n   which case port 674 needs to be available.\n   Note that systems\
    \ that do not support application use of [TCP] on\n   arbitrary ports are not\
    \ full Internet clients.  As a result, such\n   systems use gateways to the Internet\
    \ that necessarily result in data\n   integrity problems.\n"
- title: 4.  TCP Connections
  contents:
  - "4.  TCP Connections\n   Both IMAP and Message Submission use [TCP].  Hence, the\
    \ client system\n   MUST be able to establish and maintain TCP connections to\
    \ these\n   servers.  The Message Submission server MUST be able to initiate a\n\
    \   connection to the IMAP server.  Support for application use of [TCP]\n   is\
    \ REQUIRED of both client and server systems.\n   The requirements and advice\
    \ in [HOST-REQUIREMENTS] SHOULD be\n   followed.\n   Note that, for environments\
    \ that do not support application use of\n   [TCP] but do so for HTTP, email can\
    \ be offered by deploying webmail.\n   Webmail is a common term for email over\
    \ the web, where a server\n   speaks HTTP to the client and an email protocol\
    \ (often IMAP) to the\n   mail store.  Its functionality is necessarily limited\
    \ by the\n   capabilities of the web client, the webmail server, the protocols\n\
    \   used between the webmail server and the client (HTTP and a markup\n   language\
    \ such as HTML), and between the webmail server and the mail\n   store.  However,\
    \ if HTTP is all that is available to an application,\n   the environment is by\
    \ definition limited and thus, functionality\n   offered to the user must also\
    \ be limited, and can't be lemonade\n   compliant.\n"
- title: 4.1.  Lifetime
  contents:
  - "4.1.  Lifetime\n   In this document, \"idle\" refers to the idle time, as in\
    \ the\n   \"established connection idle-timeout\" of [BEHAVE-TCP], while\n   \"\
    duration\" refers to the total time that a TCP connection has been\n   established.\n\
    \   The duration of the TCP connections between the client and server\n   systems\
    \ for both IMAP and Message Submission can be arbitrarily long.\n   The client\
    \ system, the server, as well as all intermediate systems\n   MUST NOT terminate\
    \ these TCP connections simply because of their\n   duration (that is, just because\
    \ of how long they have been open).\n   Lemonade depends on idle timers being\
    \ enforced only at the\n   application level (IMAP and Message Submission): if\
    \ no data is\n   received within a period of time, either side MAY terminate the\n\
    \   connection as permitted by the protocol (see [SUBMISSION] or [IMAP]).\n  \
    \ Since IMAP permits unsolicited notifications of state changes, it is\n   reasonable\
    \ for clients to remain connected for extended periods with\n   no data being\
    \ exchanged.  Being forced to send data just to keep the\n   connection alive\
    \ can prevent or hinder optimizations such as dormancy\n   mode (see Section 5).\n\
    \   Two hours is a fairly common configuration timeout at middleboxes.\n   That\
    \ is, there are a number of sites at which TCP connections are\n   torn down by\
    \ the network two hours after data was last sent in either\n   direction (for\
    \ example, REQ-5 in [BEHAVE-TCP]).  Thus, lemonade\n   clients and servers SHOULD\
    \ make sure that, in the absence of a\n   specific configuration setting that\
    \ specifies a longer maximum idle\n   interval, the TCP connection does not remain\
    \ idle for two hours.\n   This rule ensures that, by default, lemonade clients\
    \ and servers\n   operate in environments configured with a two-hour maximum for\
    \ idle\n   TCP connections.  Network and server operators can still permit IMAP\n\
    \   connections to remain idle in excess of two hours and thus increase\n   the\
    \ benefits of dormancy, by configuring lemonade clients and\n   servers, and network\
    \ equipment, to allow this.\n   It has been reported that some networks impose\
    \ duration time\n   restrictions of their own on TCP connections other than HTTP.\
    \  Such\n   behavior is harmful to email and all other TCP-based protocols.  It\n\
    \   is unclear how widespread such reported behavior is, or if it is an\n   accidental\
    \ consequence of an attempt at optimizing for HTTP traffic,\n   implementation\
    \ limitations in firewalls, NATs, or other devices, or a\n   deliberate choice.\
    \  In any case, such a barrier to TCP connections is\n   a significant risk to\
    \ the increasing usage of IETF protocols on such\n   networks.  Note that TCP\
    \ is designed to be more efficient when it is\n   used to transfer data over time.\
    \  Prohibiting such connections thus\n   imposes hidden costs on an operator's\
    \ network, forcing clients to use\n   TCP in inefficient ways.  One way in which\
    \ carriers can inadvertently\n   force TCP connections closed, resulting in users\
    \ wasting packets by\n   reopening them, is described in Section 7.\n   Note that\
    \ systems remain able to terminate TCP connections at any\n   time based on local\
    \ decisions, for example, to prevent overload\n   during a denial-of-service attack.\
    \  These mechanisms are permitted to\n   take idle time into consideration and\
    \ are not affected by these\n   requirements.\n"
- title: 4.2.  Maintenance during Temporary Transport Loss
  contents:
  - "4.2.  Maintenance during Temporary Transport Loss\n   TCP is designed to withstand\
    \ temporary loss of lower-level\n   connectivity.  Such transient loss is not\
    \ uncommon in mobile systems\n   (for example, due to handoffs, fade, etc.). \
    \ The TCP connection\n   SHOULD be able to survive temporary lower-level loss\
    \ when the IP\n   address of the client does not change (for example, short-duration\n\
    \   loss of the mobile device's traffic channel or periods of high packet\n  \
    \ loss).  Thus, the TCP/IP stack on the client, the server, and all\n   intermediate\
    \ systems SHOULD maintain the TCP connection during\n   transient loss of connectivity.\n\
    \   In general, applications can choose whether or not to enable TCP\n   keep-alives,\
    \ but in many cases are unable to affect any other aspect\n   of TCP keep-alive\
    \ operation, such as time between keep-alive packets,\n   number of packets sent\
    \ before the connection is aborted, etc.  In\n   some environments, these are\
    \ operating system tuning parameters not\n   under application control.  In some\
    \ cases, operational difficulties\n   have been reported with application use\
    \ of the TCP keep-alive option,\n   which might be the result of TCP implementation\
    \ differences or\n   defects specific to a platform.  Lemonade client and server\
    \ systems\n   SHOULD NOT set the TCP keep-alive socket option unless operating\
    \ in\n   environments where this works correctly and such packets will not be\n\
    \   sent more frequently than every two hours.  Application-level keep-\n   alives\
    \ (such as IMAP NOOP) MAY be used instead of the TCP keep-alive\n   option.\n\
    \   Client, server, and intermediate systems MUST comply with the\n   \"Destination\
    \ Unreachable -- codes 0, 1, 5\" text in Section 4.2.3.9 of\n   [HOST-REQUIREMENTS],\
    \ which states \"Since these Unreachable messages\n   indicate soft error conditions,\
    \ TCP MUST NOT abort the connection\".\n"
- title: 5.  Dormancy
  contents:
  - "5.  Dormancy\n   Cellular data channels are connection-oriented (they are brought\
    \ up\n   or down to establish or tear down connections); it costs network\n  \
    \ resources to establish connections.  Generally speaking, mobile\n   device battery\
    \ charges last longer when the traffic channel is used\n   less.\n   Some mobile\
    \ devices and networks support dormant mode, in which the\n   traffic channel\
    \ is brought down during idle periods, yet the PPP or\n   equivalent level remains\
    \ active, and the mobile retains its IP\n   address.\n   Maintenance of TCP connections\
    \ during dormancy SHOULD be supported by\n   the client, server, and any intermediate\
    \ systems, as described in\n   Sections 4.1 and 4.2.\n   Sending packets just\
    \ to keep the session active causes unnecessary\n   channel establishment and\
    \ timeout; with a long-idle TCP connection,\n   this would periodically bring\
    \ up the channel and then let it idle\n   until it times out, again and again.\
    \  However, in the absence of\n   specific configuration information to the contrary,\
    \ it is necessary\n   to do this to ensure correct operation by default.\n"
- title: 6.  Firewalls
  contents:
  - "6.  Firewalls\n   New services must necessarily have their traffic pass through\n\
    \   firewalls in order to be usable by corporate employees or\n   organization\
    \ members connecting externally, such as when using mobile\n   devices.  Firewalls\
    \ exist to block traffic, yet exceptions must be\n   made for services to be used.\
    \  There is a body of best practices\n   based on long experience in this area.\
    \  Numerous techniques exist to\n   help organizations balance protecting themselves\
    \ and providing\n   services to their members, employees, and/or customers. (Describing,\n\
    \   or even enumerating, such techniques and practices is beyond the\n   scope\
    \ of this document, but Section 8 does mention some.)\n   It is critical that\
    \ protocol design and architecture permit such\n   practices, and not constrain\
    \ them.  One key way in which the design\n   of a new service can aid its secure\
    \ deployment is to maintain the\n   one-to-one association of services and port\
    \ numbers.\n   One or more firewalls might exist in the path between the client\
    \ and\n   server systems, as well as between the Message Submission and IMAP\n\
    \   servers.  Proper deployment REQUIRES that TCP connections be possible\n  \
    \ from the client system to the IMAP and Message Submission ports on\n   the servers,\
    \ as well as from the Message Submission server to the\n   IMAP server.  This\
    \ may require configuring firewalls to permit such\n   usage.\n   Firewalls deployed\
    \ in the network path MUST NOT damage protocol\n   traffic.  In particular, both\
    \ Message Submission and IMAP connections\n   from the client MUST be permitted.\
    \  Firewalls MUST NOT partially\n   block extensions to these protocols, such\
    \ as by allowing one side of\n   an extension negotiation, as doing so results\
    \ in the two sides being\n   out of synch, with later failures.  See [FIREWALLS]\
    \ for more\n   discussion.\n   Application proxies, which are not uncommon mechanisms,\
    \ are discussed\n   in [PROXIES].\n"
- title: 6.1.  Firewall Traversal
  contents:
  - "6.1.  Firewall Traversal\n   An often-heard complaint from those attempting to\
    \ deploy new services\n   within an organization is that the group responsible\
    \ for maintaining\n   the firewall is unable or unwilling to open the required\
    \ ports.  The\n   group that owns the firewall, being charged with organizational\n\
    \   network security, is often reluctant to open firewall ports without\n   an\
    \ understanding of the benefits and the security implications of the\n   new service.\n\
    \   The group wishing to deploy a new service is often tempted to bypass\n   the\
    \ procedure and internal politics necessary to open the firewall\n   ports.  A\
    \ tempting kludge is to tunnel the new service over an\n   existing service that\
    \ is already permitted to pass through the\n   firewall, typically HTTP on port\
    \ 80 or sometimes SMTP on port 25.\n   Some of the downsides to this are discussed\
    \ in [KLUDGE].\n   Such a bypass can appear to be immediately successful, since\
    \ the new\n   service seems to deploy.  However, assuming the network security\n\
    \   group is competent, when they become aware of the kludge, their\n   response\
    \ is generally to block the violation of organizational\n   security policy. \
    \ It is difficult to design an application-level\n   proxy/firewall that can provide\
    \ such access control without violating\n   the transparency requirements of firewalls,\
    \ as described in\n   [FIREWALLS].  Collateral damage is common in these circumstances.\n\
    \   The new service (which initially appeared to have been successfully\n   deployed)\
    \ as well as those existing services that were leveraged to\n   tunnel the new\
    \ service, become subject to arbitrary and unpredictable\n   failures.  This encourages\
    \ an adversarial relationship between the\n   two groups, which hinders attempts\
    \ at resolution.\n   Even more serious is what happens if a vulnerability is discovered\
    \ in\n   the new service.  Until the vulnerability is corrected, the network\n\
    \   security group must disable both the new service and the (typically\n   mission-critical)\
    \ existing service on which it is layered.\n   An often-repeated truism is that\
    \ any computer that is connected to a\n   network is insecure.  Security and usefulness\
    \ are both\n   considerations, with organizations making choices about achieving\n\
    \   acceptable measures in both areas.  Deploying new services typically\n   requires\
    \ deciding to permit access to the ports used by the service,\n   with appropriate\
    \ protections.  While the delay necessary to review\n   the implications of a\
    \ new service may be frustrating, in the long\n   run, it is likely to be less\
    \ expensive than a kludge.\n"
- title: 7.  NATs
  contents:
  - "7.  NATs\n   Any NAT boxes that are deployed between client and server systems\n\
    \   MUST comply with REQ-5 in [BEHAVE-TCP], which requires that \"the\n   value\
    \ of the 'established connection idle-timeout' MUST NOT be less\n   than 2 hours\
    \ 4 minutes\".\n   See Section 5 for additional information on connection lifetimes.\n\
    \   Note that IMAP and Message Submission clients will automatically re-\n   open\
    \ TCP connections as needed, but it saves time, packets, and\n   processing to\
    \ avoid the need to do so.  Re-opening IMAP and Message\n   Submission connections\
    \ generally incurs costs for authentication,\n   Transport Layer Security (TLS)\
    \ negotiation, and server processing, as\n   well as resetting of TCP behavior,\
    \ such as windows.  It is also\n   wasteful to force clients to send NOOP commands\
    \ just to maintain NAT\n   state, especially since this can defeat dormancy mode.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   There are numerous security considerations whenever\
    \ an organization\n   chooses to make any of its services available via the Internet.\
    \  This\n   includes email from mobile clients.\n   Sites concerned about email\
    \ security should perform a threat\n   analysis, get relevant protections in place,\
    \ and then make a\n   conscious decision to open up this service.  As discussed\
    \ in Section\n   6.1, piggybacking email traffic on the HTTP port in an attempt\
    \ to\n   avoid making a firewall configuration change to explicitly permit\n \
    \  mobile email connections would bypass this important step and reduce\n   the\
    \ overall security of the system.\n   Organizations deploying a messaging server\
    \ \"on the edge\" (that is,\n   accessible from the open Internet) are encouraged\
    \ to choose one that\n   has been designed to operate in that environment.\n \
    \  This document does not attempt to catalogue either the various risks\n   an\
    \ organization might face or the numerous techniques that can be\n   used to protect\
    \ against the risks.  However, to help illustrate the\n   deployment considerations,\
    \ a very small sample of some of the risks\n   and countermeasures appear below.\n\
    \   Some organizations are concerned that permitting direct access to\n   their\
    \ mail servers via the Internet increases their vulnerability,\n   since a successful\
    \ exploit against a mail server can potentially\n   expose all mail and authentication\
    \ credentials stored on that server,\n   and can serve as an injection point for\
    \ spam.  In addition, there are\n   concerns over eavesdropping or modification\
    \ of mail data and\n   authentication credentials.\n   A large number of approaches\
    \ exist that can mitigate the risks while\n   allowing access to mail services\
    \ via mobile clients.\n   Placing servers inside one or more DMZs (demilitarized\
    \ zones, also\n   called perimeter networks) can protect the rest of the network\
    \ from a\n   compromised server.  An additional way to reduce the risk is to store\n\
    \   authentication credentials on a system that is not accessible from\n   the\
    \ Internet and that the servers within the DMZ can access only by\n   sending\
    \ the credentials as received from the client and receiving an\n   authorized/not\
    \ authorized response.  Such isolation reduces the\n   ability of a compromised\
    \ server to serve as a base for attacking\n   other network hosts.\n   Many additional\
    \ techniques for further isolation exist, such as\n   having the DMZ IMAP server\
    \ have no mail store of its own.  When a\n   client connects to such a server,\
    \ the DMZ IMAP server might contact\n   the authentication server and receive\
    \ a ticket, which it passes to\n   the mail store in order to access the client's\
    \ mail.  In this way, a\n   compromised IMAP server cannot be used to access the\
    \ mail or\n   credentials for other users.\n   It is important to realize that\
    \ simply throwing an extra box in front\n   of the mail servers, such as a gateway\
    \ that may use HTTP or any of a\n   number of synchronization protocols to communicate\
    \ with clients, does\n   not itself change the security aspects.  By adding such\
    \ a gateway,\n   the overall security of the system, and the vulnerability of\
    \ the mail\n   servers, may remain unchanged or may be significantly worsened.\n\
    \   Isolation and indirection can be used to protect against specific\n   risks,\
    \ but to be effective, such steps need to be done after a threat\n   analysis,\
    \ and with an understanding of the issues involved.\n   Organizations SHOULD deploy\
    \ servers that support the use of TLS for\n   all connections and that can be\
    \ optionally configured to require TLS.\n   When TLS is used, it SHOULD be via\
    \ the STARTTLS extensions rather\n   than the alternate port method.  TLS can\
    \ be an effective measure to\n   protect against specific threats, including eavesdropping\
    \ and\n   alteration, of the traffic between the endpoints.  However, just\n \
    \  because TLS is deployed does not mean the system is \"secure\".\n   Attempts\
    \ at bypassing current firewall policy when deploying new\n   services have serious\
    \ risks, as discussed in Section 6.1.\n   It's rare for a new service to not have\
    \ associated security\n   considerations.  Making email available to an organization's\
    \ members\n   using mobile devices can offer significant benefits.\n"
- title: 9.  Acknowledgments
  contents:
  - "9.  Acknowledgments\n   Chris Newman and Phil Karn suggested very helpful text.\
    \  Brian Ross\n   and Dave Cridland reviewed drafts and provided excellent suggestions.\n"
- title: 10.  Normative References
  contents:
  - "10.  Normative References\n   [BEHAVE-TCP]        Guha, S., Ed., Biswas, K.,\
    \ Ford, B., Sivakumar,\n                       S., and P. Srisuresh, \"NAT Behavioral\n\
    \                       Requirements for TCP\", BCP 142, RFC 5382, October\n \
    \                      2008.\n   [HOST-REQUIREMENTS] Braden, R., Ed., \"Requirements\
    \ for Internet Hosts\n                       - Communication Layers\", STD 3,\
    \ RFC 1122, October\n                       1989.\n   [KEYWORDS]          Bradner,\
    \ S., \"Key words for use in RFCs to\n                       Indicate Requirement\
    \ Levels\", BCP 14, RFC 2119,\n                       March 1997.\n   [IANA] \
    \             IANA Port Number Registry,\n                       <http://www.iana.org/assignments/port-numbers>\n\
    \   [TCP]               Postel, J., \"Transmission Control Protocol\", STD\n \
    \                      7, RFC 793, September 1981.\n"
- title: 11.  Informative References
  contents:
  - "11.  Informative References\n   [ACAP]              Newman, C. and J. Myers,\
    \ \"ACAP -- Application\n                       Configuration Access Protocol\"\
    , RFC 2244,\n                       November 1997.\n   [FIREWALLS]         Freed,\
    \ N., \"Behavior of and Requirements for\n                       Internet Firewalls\"\
    , RFC 2979, October 2000.\n   [IMAP]              Crispin, M., \"INTERNET MESSAGE\
    \ ACCESS PROTOCOL -\n                       VERSION 4rev1\", RFC 3501, March 2003.\n\
    \   [KLUDGE]            Moore, K., \"On the use of HTTP as a Substrate\",\n  \
    \                     BCP 56, RFC 3205, February 2002.\n   [PROFILE]         \
    \  Maes, S. and A. Melnikov, \"Internet Email to\n                       Support\
    \ Diverse Service Environments (Lemonade)\n                       Profile\", RFC\
    \ 4550, June 2006.\n   [PROXIES]           Chatel, M., \"Classical versus Transparent\
    \ IP\n                       Proxies\", RFC 1919, March 1996.\n   [SUBMISSION]\
    \        Gellens, R. and J. Klensin, \"Message Submission\n                  \
    \     for Mail\", RFC 4409, April 2006.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Randall Gellens\n   QUALCOMM Incorporated\n   5775 Morehouse\
    \ Drive\n   San Diego, CA  92121\n   EMail: randy@qualcomm.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
