- title: __initial_text__
  contents:
  - '           Internet Architecture Extensions for Shared Media

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  This memo\n   does not specify an Internet standard of any kind.  Distribution\
    \ of\n   this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   The original Internet architecture assumed that each network is\n\
    \   labeled with a single IP network number.  This assumption may be\n   violated\
    \ for shared media, including \"large public data networks\"\n   (LPDNs).  The\
    \ architecture still works if this assumption is\n   violated, but it does not\
    \ have a means to prevent multiple host-\n   router and router-router hops through\
    \ the shared medium.  This memo\n   discusses alternative approaches to extending\
    \ the Internet\n   architecture to eliminate some or all unnecessary hops.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. INTRODUCTION ..................................................\
    \  2\n   2. THE ORIGINAL INTERNET ARCHITECTURE ............................  2\n\
    \   3. THE PROBLEMS INTRODUCED BY SHARED MEDIA .......................  4\n  \
    \ 4. SOME SOLUTIONS TO THE SM PROBLEMS .............................  7\n    \
    \  4.1  Hop-by-Hop Redirection ...................................  7\n      4.2\
    \  Extended Routing ......................................... 11\n      4.3  Extended\
    \ Proxy ARP ....................................... 13\n      4.4  Routing Query\
    \ Messages ................................... 14\n      4.5  Stale Routing Information\
    \ ................................ 14\n      4.6  Implications of Filtering (Firewalls)\
    \ .................... 15\n   5. SECURITY CONSIDERATIONS .......................................\
    \ 16\n   6. CONCLUSIONS ................................................... 17\n\
    \   7. ACKNOWLEDGMENTS ............................................... 17\n  \
    \ 8. REFERENCES .................................................... 18\n   Authors'\
    \ Addresses ............................................... 19\n"
- title: 1. INTRODUCTION
  contents:
  - "1. INTRODUCTION\n   This memo concerns the implications of shared medium networks\
    \ for the\n   architecture of the TCP/IP protocol suite.  General familiarity\
    \ with\n   the TCP/IP architecture and the IP protocol is assumed.\n   The Internet\
    \ architecture is founded upon what was originally called\n   the \"Catenet model\"\
    \ [PSC81].  Under this model, the Internet\n   (originally dubbed \"the Catenet\"\
    ) is formed using routers (originally\n   called \"gateways\") to interconnect\
    \ distinct and perhaps diverse\n   networks.  An IP host address (more correctly\
    \ characterized as a\n   network interface address) is formed of the pair (net#,host#).\
    \  Here\n   \"net#\" is a unique IP number assigned to the network (or subnet)\
    \ to\n   which the host is attached, and \"host#\" identifies the host on that\n\
    \   network (or subnet).\n   The original Internet model made the implicit assumptions\
    \ that each\n   network has a single IP network number and that networks with\n\
    \   different numbers may interchange packets only through routers.\n   These\
    \ assumptions may be violated for networks implemented using a\n   common \"shared\
    \ medium\" (SM) at the link layer (LL).  For example,\n   network managers sometimes\
    \ configure multiple IP network numbers\n   (usually subnet numbers) on a single\
    \ broadcast-type LAN such as an\n   Ethernet.  The large (switched) public data\
    \ networks (LPDNs), such as\n   SMDS and B-ISDN, form a potentially more important\
    \ example of shared\n   medium networks.  Any two systems connected to the same\
    \ shared medium\n   network are capable of communicating directly at the LL, without\
    \ IP\n   layer switching by routers.  This presents an opportunity to optimize\n\
    \   performance and perhaps lower cost by eliminating unnecessary LL hops\n  \
    \ through the medium.\n   This memo discusses how unnecessary hops can be eliminated\
    \ in a\n   shared medium, while retaining the coherence of the existing Internet\n\
    \   architecture.  This issue has arisen in a number of IETF Working\n   Groups\
    \ concerned with LPDNs, including IPLPDN, IP over ATM, IDRP for\n   IP, and BGP.\
    \  It is time to take a careful look at the architectural\n   issues to be solved.\
    \  This memo first summarizes the relevant aspects\n   of the original Internet\
    \ architecture (Section 2), and then it\n   explains the extra-hop problems created\
    \ by shared media networks\n   (Section 3).  Finally, it discusses some possible\
    \ solutions (Section\n   4).\n"
- title: 2. THE ORIGINAL INTERNET ARCHITECTURE
  contents:
  - "2. THE ORIGINAL INTERNET ARCHITECTURE\n   We very briefly review the original\
    \ architecture, to introduce the\n   terminology and concepts.  Figure 1 illustrates\
    \ a typical set of four\n   networks A, ... D, represented traditionally as clouds,\n\
    \   interconnected by routers R2, R3, and R4.  Routers R1 and R5 connect\n   to\
    \ other parts of the Internet.  Ha, ... Hd represent hosts connected\n   to these\
    \ networks.\n   It is not necessary to distinguish between network and subnet\
    \ in this\n   memo.  We may assume that there is some address mask associated\
    \ with\n   each \"network\" in Figure 1, allowing a host or router to divide the\n\
    \   32 bits of an IP address into an address for the cloud and a host\n   number\
    \ that is defined uniquely only within that cloud.\n              Ha         \
    \  Hb           Hc           Hd\n              |            |            |   \
    \         |\n              |            |            |            |\n        \
    \     _|_          _|_          _|_          _|_\n            (   )        ( \
    \  )        (   )        (   )\n            (Net)        (Net)        (Net)  \
    \      (Net)\n            ( A )        ( B )        ( C )        ( D )\n     -\
    \ R1 --(   )-- R2 --(   )-- R3 --(   )-- R4 --(   )-- R5 --\n            (   )\
    \        (   )        (   )        (   )\n            (___)        (___)     \
    \   (___)        (___)\n             Figure 1.  Example Internet Fragment\n  \
    \ An Internet router is connected to local network(s) as a special kind\n   of\
    \ host.  Indeed, for network management purposes, a router plays the\n   role\
    \ of a host by originating and terminating datagrams.  However,\n   there is an\
    \ important difference between a host and a router:  the\n   routing function\
    \ is mostly centralized in the routers, allowing hosts\n   to be \"dumb\" about\
    \ routing.  Internet hosts are required [RFC-1122]\n   to make only one simple\
    \ routing decision: is the destination address\n   local to the connected network?\
    \  If the address is not local, we say\n   it is \"foreign\" (relative to the\
    \ connected network or to the host).\n   A host sends a datagram directly to a\
    \ local destination address or\n   (for a foreign destination) to a first-hop\
    \ router.  The host\n   initially uses some \"default\" router for any new destination\
    \ address.\n   If the default is the wrong choice, that router returns a Redirect\n\
    \   message and forwards the datagram.  The Redirect message specifies\n   the\
    \ preferred first-hop router for the given destination address.\n   The host uses\
    \ this information, which it maintains in a \"routing\n   cache\" [RFC-1122],\
    \ to determine the first-hop address for subsequent\n   datagrams to the same\
    \ destination.\n   To actually forward an IP datagram across a network hop, the\
    \ sender\n   must have the link layer (LL) address of the target.  Therefore,\
    \ each\n   host and router must have some \"address resolution\" procedure to\
    \ map\n   IP address to an LL address.  ARP, used for networks with broadcast\n\
    \   capability, is the most common address resolution procedure\n   [Plummer82].\
    \  If there is no LL broadcast capability (or if it is too\n   expensive), then\
    \ there are two other approaches to address\n   resolution: local configuration\
    \ tables, and \"address-resolution\n   servers\" (AR Servers).\n   If AR Servers\
    \ are used for address resolution, hosts must be\n   configured with the LL address(es)\
    \ of one or more nearby servers.\n   The mapping information provided by AR Servers\
    \ might itself be\n   collected using a protocol that allows systems to register\
    \ their LL\n   addresses, or from static configuration tables.  The ARP packet\n\
    \   format and the overall ARP protocol structure (ARP Request/ARP Reply)\n  \
    \ may be suitable for the communications between a host and an AR\n   server,\
    \ even in the absence of the LL broadcast capabilities; this\n   would ease conversion\
    \ of hosts to using AR Servers.\n   The examples in this memo use ARP for address\
    \ resolution.  At least\n   some of the LPDN's that are planned will provide sufficient\
    \ broadcast\n   capability to support ARP.  It is important to note that ARP operates\n\
    \   at the link layer, while the Redirect and routing cache mechanisms\n   operate\
    \ at the IP layer of the protocol stack.\n"
- title: 3. THE PROBLEMS INTRODUCED BY SHARED MEDIA
  contents:
  - "3. THE PROBLEMS INTRODUCED BY SHARED MEDIA\n   Figure 2 shows the same configuration\
    \ as Figure 1, but now networks\n   A, B, C, and D are all within the same shared\
    \ medium (SM), shown by\n   the dashed box enclosing the clouds.  Networks A,\
    \ ... D are now\n   logical IP networks (called LIS's in [Laubach93]) rather than\n\
    \   physical networks.  Each of these logical networks may (or may not)\n   be\
    \ administratively distinct.  The SM allows direct connectivity\n   between any\
    \ two hosts or routers connected to it.  For example, host\n   Ha can interchange\
    \ datagrams directly with host Hd or with router R4.\n   A router that has some\
    \ but not all of its interfaces connected to the\n   shared medium is called a\
    \ \"border router\"; R1 and R5 are examples.\n   Figure 2 illustrates the \"classical\"\
    \ model [Laubach93] for use of the\n   Internet architecture within a shared medium,\
    \ i.e., simply applying\n   the original Internet architecture described earlier.\
    \  This will\n   provide correct but not optimal operation.  For example, in the\
    \ case\n   of two hosts on the same logical network (not shown in Figure 2), the\n\
    \   original rules will clearly work; the source host will forward a\n   datagram\
    \ directly in a single hop to a host on the same logical\n   network.  The original\
    \ architectural rules will also work for\n   communication between any pair of\
    \ hosts shown in Figure 2; for\n   example, host Ha would send a datagram to host\
    \ Hd via the four-hop\n   path Ha -> R2 -> R3 -> R4 -> Hd.  However, the classical\
    \ model does\n   not take advantage of the direct connectivity Ha -> Hd allowed\
    \ by the\n   shared medium.\n           Ha           Hb           Hc         \
    \  Hd\n           |            |            |            |\n      ---- | ----------\
    \ | ---------- | ---------- | ----\n     |   __|__        __|__        __|__ \
    \       __|__   |\n        (     )      (     )      (     )      (     )\n  \
    \   |  (     )      (     )      (     )      (     )  |\n        ( Net )    \
    \  ( Net )      ( Net )      ( Net )\n     |  (  A  )      (  B  )      (  C \
    \ )      (  D  )  |\n        (     )      (     )      (     )      (     )\n\
    \     |  (     )      (     )      (     )      (     )  |\n        (_____)  \
    \    (_____)      (_____)      ( ____)\n     |    | |          | |          |\
    \ |          | |    |\n      --- | | -------- | | -------- | | -------- | | ---\n\
    \          | |          | |          | |          | |\n    - R1 -   --- R2 ---\
    \   --- R3 ---   --- R4 ---   --- R5 ---\n         Figure 2.  Logical IP Networks\
    \ in Shared Medium\n   This memo concerns mechanisms to achieve minimal-hop connectivity\n\
    \   when it is desired.  We should note that is may not always be\n   desirable\
    \ to achieve minimal-hop connectivity in a shared medium.\n   For example, the\
    \ \"extra\" hops may be needed to allow the routers to\n   act as administrative\
    \ firewalls.  On the other hand, when such\n   firewall protection is not required,\
    \ it should be possible to take\n   advantage of the shared medium to allow this\
    \ datagram to use shorter\n   paths.  In general, it should be possible to choose\
    \ between firewall\n   security and efficient connectivity.  This is discussed\
    \ further in\n   Section 4.6 below.\n   We also note that the mechanisms described\
    \ here can only optimize the\n   path within the local SM.  When the SM is only\
    \ one segment of the\n   path between source and receiver, removing hops locally\
    \ may limit the\n   ability to switch to globally more optimal paths that may\
    \ become\n   available as the result of routing changes.  Thus, consider Ha-\n\
    \   >...Hx, where host Hx is outside the SM to which host Ha is attached.\n  \
    \ Suppose that the shortest global path to Hx is via some border router\n   Rb1.\
    \  Local optimization using the techniques described below will\n   remove extra\
    \ hops in the SM and allow Ha->Rb1->...Hx.  Now suppose\n   that a later route\
    \ change outside the SM makes the path Ha->Rb2-\n   >...Hx more globally optimum,\
    \ where Rb2 is another border router.\n   Since Ha does not participate in the\
    \ routing protocol, it does not\n   know that it should switch to Rb2.  It is\
    \ possible that Rb2 may not\n   realize it either; this is the situation:\n  \
    \   GC(Ha->Rb2->...Hx) < GC(Ha->Rb1->Rb2->...Hx) < GC(Ha->Rb1->...Hx)\n   where\
    \ GC() represents some global cost function of the specified\n   path.\n   Note\
    \ that ARP requires LL broadcast.  Even if the SM supports\n   broadcast, it is\
    \ likely that administrators will erect firewalls to\n   keep broadcasts local\
    \ to their LIS.\n   There are three cases to be optimized.  Suppose H and H' are\
    \ hosts\n   and Rb and Rb' are border routers connected to the same same SM.\n\
    \   Then the following one-hop paths should be possible:\n         H -> H':  Host\
    \ to host within the SM\n         H -> Rb: Host to exit router\n         Rb ->\
    \ Rb': Entry border router to exit border router,\n                     for transit\
    \ traffic.\n   We may or not be able to remove the extra hop implicit in Rb ->\
    \ R ->\n   H, where Rb, R, and H are within the same SM, but the ultimate source\n\
    \   is outside the SM.  To remove this hop would require distribution of\n   host\
    \ routes, not just network routes, between the two routers R and\n   Rb; this\
    \ would adversely impact routing scalability.\n   There are a number of important\
    \ requirements for any architectural\n   solution to these problems.\n   *   \
    \ Interoperability\n        Modified hosts and routers must interoperate with\
    \ unmodified\n        nodes.\n   *    Practicality\n        Minimal software changes\
    \ should be required.\n   *    Robustness\n        The new scheme must be at least\
    \ as robust against errors in\n        software, configuration, or transmission\
    \ as the existing\n        architecture.\n   *    Security\n        The new scheme\
    \ must be at least as securable against subversion\n        as the existing architecture.\n\
    \   The distinction between host and router is very significant from an\n   engineering\
    \ viewpoint.  It is considered to be much harder to make a\n   global change in\
    \ host software than to change router software,\n   because there are many more\
    \ hosts and host vendors than routers and\n   router vendors, and because hosts\
    \ are less centrally administered\n   than routers.  If it is necessary to change\
    \ the specification of what\n   a host does (and it is), then we must minimize\
    \ the extent of this\n   change.\n"
- title: 4. SOME SOLUTIONS TO THE SM PROBLEMS
  contents:
  - "4. SOME SOLUTIONS TO THE SM PROBLEMS\n   Four different approaches have been\
    \ suggested for solving these SM\n   problems.\n   (1)  Hop-by-Hop Redirection\n\
    \        In this approach, the host Redirect mechanism is extended to\n      \
    \  collapse multiple-hop paths within the same shared medium, hop-\n        by-hop.\
    \  A router is to be allowed to send, and a host allowed\n        to accept, a\
    \ Redirect message that specifies a foreign IP\n        address within the same\
    \ SM.  We refer to this as a \"foreign\n        Redirect\".  Section 4.1 analyzes\
    \ this approach in some detail.\n   (2)  Extended Routing\n        Routing protocols\
    \ can be modified to know about the SM and to\n        provide LL addresses.\n\
    \   (3)  Extended Proxy ARP\n        This is a form of the proxy ARP approach,\
    \ in which the routing\n        problem is solved implicitly by an extended address\
    \ resolution\n        mechanism at the LL.  This approach has been described by\n\
    \        Heinanen [Heinanen93] and by Garrett et al [Garratt93].\n   (4)  Route\
    \ Query Messages\n        This approach has been suggested by Halpern [Halpern93].\
    \  Rather\n        than adding additional information to routing, this approach\n\
    \        would add a new IP-layer mechanism using end-to-end query and\n     \
    \   reply datagrams.\n   These four are discussed in the following four subsections.\n\
    \   4.1  Hop-by-Hop Redirection\n      The first scheme we consider would operate\
    \ at the IP layer.  It\n      would cut out extra hops one by one, with each router\
    \ in the path\n      operating on local information only.  This approach requires\
    \ both\n      host and router changes but no routing protocol changes.\n     \
    \ The basic idea is that the first-hop router, upon observing that\n      the\
    \ next hop is within the same SM, sends a foreign Redirect to\n      the source,\
    \ redirecting it to the next hop.  Successive\n      application of this algorithm\
    \ at each intermediate router will\n      eventually result in a direct path from\
    \ source host to destination\n      host, if both are within the same SM.\n  \
    \    Suppose that Ha wants to send a datagram to Hd.  We use the\n      notation\
    \ IP.a for the IP address of entity a, and LL.a for the\n      corresponding LL\
    \ address.  Each line in the following shows an IP\n      datagram and the path\
    \ that datagram will follow, separated by a\n      colon.  The notation \"Redirect(\
    \ h, IP.a)\" means a Redirect\n      specifying IP.a as the best next hop to reach\
    \ host h.\n         (1)  Datagram 1: Ha -> R2 -> R3 -> R4 -> Hd\n         (2)\
    \  Redirect(Hd, IP.R3): R2 -> Ha\n         (3)  Datagram 2: Ha -> R3 -> R4 ->\
    \ Hd\n         (4)  Redirect(Hd, IP.R4): R3 -> Ha\n         (5)  Datagram 3: Ha\
    \ -> R4 -> Hd\n         (6)  Redirect(Hd, IP.Hd): R4 -> Ha\n         (7)  Datagram\
    \ 4: Ha -> Hd\n      There are three problems to be solved to make hop-by-hop\n\
    \      redirection work; we label them HH1, HH2, and HH3.\n      HH1: Each router\
    \ must be able to resolve the LL address of the\n           source Ha, to send\
    \ a (foreign) Redirect.\n           Let us assume that the link layer provides\
    \ the source LL\n           address when an IP datagram arrives.  If the router\n\
    \           determines that a Redirect should be sent, then it will be\n     \
    \      sent to the source LL address of the received datagram.\n      HH2: A source\
    \ host must be able to perform address resolution to\n           obtain the LL\
    \ address of each router to which it is\n           redirected.\n           It\
    \ would be possible for each router R, upon sending a\n           Redirect to\
    \ Ha, to also send an unsolicited ARP Reply point-\n           to-point to LL.Ha,\
    \ updating Ha's ARP cache with LL.R.\n           However, there is not guarantee\
    \ that this unsolicited ARP\n           Reply would be delivered.  If it was lost,\
    \ there would be a\n           forwarding black hole.  The host could recover\
    \ by starting\n           over from the original default router; however, this\
    \ may be\n           too inefficient a solution.\n           A much more direct\
    \ and efficient solution would introduce an\n           extended ICMP Redirect\
    \ message (call it XRedirect) that\n           carries the LL address as well\
    \ as the IP address of the\n           target.  This would remove the issue of\
    \ reliable delivery of\n           the unsolicited ARP described earlier, because\
    \ the fate of\n           the LL address would be shared with the IP target address;\n\
    \           both would be delivered or neither would.  (An XRedirect is\n    \
    \       essentially the same as a Redirect in the OSI ES-IS\n           protocol).\n\
    \           Using XRedirect, the previous example becomes:\n              (1)\
    \  Datagram 1: Ha -> R2 -> R3 -> R4 -> Hd\n              (2)  XRedirect(Hd, IP.R3,\
    \ LL.R3): R2 -> Ha\n              (3)  Datagram 2: Ha -> R3 -> R4 -> Hd\n    \
    \          (4)  XRedirect(Hd, IP.R4, LL.R4): R3 -> Ha\n              (5)  Datagram\
    \ 3: Ha -> R4 -> Hd\n              (6)  XRedirect(Hd, IP.Hd, LL.Hd): R4 -> Ha\n\
    \              (7)  Datagram 4: Ha -> Hd\n      HH3: Each router should be able\
    \ to recognize when it is the first\n           hop in the path, since a Redirect\
    \ should be sent only by the\n           first hop router.  Unfortunately this\
    \ will be possible only\n           if the LL address corresponding to the IP\
    \ source address has\n           been cached from an earlier event; a router in\
    \ this chain\n           determines the LL address of the source from the arriving\n\
    \           datagram (see HH1 above).  If it cannot determine whether it\n   \
    \        is the first hop, a router must always send an [X]Redirect,\n       \
    \    which will be spurious if the router is not the first hop.\n           Such\
    \ spurious [X]Redirects will be sent to the IP address of\n           the source\
    \ host, but using the LL address of the previous-hop\n           router.  The\
    \ propagation scope of [X]Redirects can be limited\n           to a single IP\
    \ hop (see below), so they will go no further\n           than the previous-hop\
    \ router, where they will be discarded.\n           However, there will be some\
    \ router overhead to process these\n           useless [X]Redirects\n      Next,\
    \ we discuss the changes in hosts and in routers required for\n      hop-by-hop\
    \ redirection.\n      o    Host Changes\n           The Host Requirements RFC\
    \ [RFC-1122] specifies the host\n           mechanism for routing an outbound\
    \ datagram in terms of\n           sending the datagram directly to a local destination\
    \ or else\n           to the first hop router (to reach a foreign destination)\n\
    \           [RFC-1122 3.3.1].  Although this mechanism assumes a local\n     \
    \      address, a foreign address for a first-hop router should work\n       \
    \    equally well.\n           The target address contained in the routing cache\
    \ is updated\n           by Redirect messages.  There is currently a restriction\
    \ on\n           what target addresses may be accepted in Redirect messages\n\
    \           [RFC-1122 3.2.2.2], which would prevent foreign Redirects\n      \
    \     from working:\n                A Redirect message SHOULD be silently discarded\
    \ if the\n                new router address it specifies is not on the same\n\
    \                connected (sub-) net through which the Redirect arrived,\n  \
    \              or if the source of the Redirect is not the current\n         \
    \       first-hop router for the specified destination.\n           To support\
    \ foreign Redirects requires simply removing the\n           first validity check.\
    \  The second check, which requires an\n           acceptable Redirect to come\
    \ from the node to which the\n           datagram that triggered the Redirect\
    \ was sent, is retained.\n           The same validity check would be used for\
    \ XRedirects.\n           In order to send a datagram to the target address found\
    \ in\n           the routing cache, a host must resolve the IP address into a\n\
    \           LL address.  No change should be necessary in the host's IP-\n   \
    \        to-LL resolution mechanism to handle a foreign rather than a\n      \
    \     local address.\n           The Hop-by-Hop redirection requires changes to\
    \ the semantics\n           of the IP address that an ICMP Redirect is allowed\
    \ to carry.\n           Under the present definition [Postel81b], an ICMP Redirect\n\
    \           message is only allowed to carry an IP address of a router.\n    \
    \       In order for the hop-by-hop redirection mechanism to\n           eliminate\
    \ all router hops, allowing two hosts connected to\n           the same SM to\
    \ communicate directly, a [X]Redirect message\n           must be able to carry\
    \ the IP address of the destination host.\n      o    Router Changes\n       \
    \    The router changes required for hop-by-hop redirection are\n           much\
    \ more extensive than the host changes.  The examples\n           given earlier\
    \ showed the additional router functions that\n           would be needed.\n \
    \          Consider a router that is connected to an SM.  When it\n          \
    \ receives a datagram from the SM, it tests whether the next\n           hop is\
    \ on the same SM, and if so, it sends a foreign\n           XRedirect to the source\
    \ host, using the link layer address\n           with which the datagram arrived.\n\
    \           A router should avoid sending more than a limited number of\n    \
    \       successive foreign Redirects to the same host.  This is\n           necessary\
    \ because an unmodified host may legitimately ignore\n           a Redirect to\
    \ a foreign network and continue to forward\n           datagrams to the same\
    \ router.  A router can accomplish this\n           limitation by keeping a cache\
    \ of foreign Redirects sent.\n           Note that foreign Redirects generated\
    \ by routers according to\n           these rules, like the current local Redirects,\
    \ may travel\n           exactly one link-layer hop.  It is therefore reasonable\
    \ and\n           desirable to set their TTL to 1, to ensure they cannot stray\n\
    \           outside the SM.\n           The extra check needed to determine whether\
    \ to generate a\n           Redirect may incur additional processing and thus\
    \ result in a\n           performance degradation; to avoid this, a router may\
    \ not\n           perform the check at all but just forward the packet. The\n\
    \           scheme with [X]Redirects is not applicable to such a router.\n   \
    \        Finally, note that the hop-by-hop redirection scheme is only\n      \
    \     applicable when the source host is connected to an SM, since\n         \
    \  routers do not listen to Redirects.  To optimize the\n           forwarding\
    \ of transit traffic between entry and exit border\n           routers, an extension\
    \ to routing is required, as discussed in\n           the following section. \
    \ Conversely, an extension to the\n           routing protocol cannot be used\
    \ to optimize forwarding\n           traffic from a host connected to the SM,\
    \ since a host should\n           not listen to routing protocols.\n   4.2  Extended\
    \ Routing\n      The routing protocols may be modified to carry additional\n \
    \     information that is specific to the SM.  The router could use the\n    \
    \  attribute \"SameSM\" for a route to deduce the shortest path to be\n      reported\
    \ to its neighbors.  It could also carry the LL addresses\n      with each router\
    \ IP address.\n      For example, the extended routing protocol would allow R2\
    \ to know\n      that R4 is the best next-hop to reach the destination network\
    \ in\n      the same SM, and to know both IP.R4 and LL.R4, leading to the path\n\
    \      Ha->R2->R4->Hb.  Further optimization cannot be done with extended\n  \
    \    routing alone, since the host does not participate in routing, and\n    \
    \  because we want the routing protocol to handle only per-network\n      information,\
    \ not per-host information.  Hop-by-hop redirection\n      could then be used\
    \ to eliminate all router hops, as in the\n      following sequence:\n       \
    \   (1) Datagram 1: Ha -> R2 -> R4 -> Hd\n          (2) XRedirect(Hd, IP.R4, LL.R4):\
    \ R2 -> Ha\n          (3) Datagram 2: Ha -> R4 -> Hd\n          (4) XRedirect(Hd,\
    \ IP.Hd, LL.Hd): R4 -> Ha\n          (5) Datagram 3: Ha -> Hd\n      There are\
    \ three aspects to the routing protocol extension:\n      (1)  the ability to\
    \ pass \"third-party\" information -- a router\n           should be able to specify\
    \ the address (IP address and perhaps\n           LL address) of some other router\
    \ as the next-hop;\n      (2)  knowledge of the \"SameSM\" attribute for routes;\
    \ and\n      (3)  knowledge of LL addresses corresponding to IP addresses of\n\
    \           routers within the same SM.\n      A router must be able to determine\
    \ that a particular IP address\n      (e.g., the source address) is in the same\
    \ SM.  There are several\n      possible ways to make this information available\
    \ to a router in\n      the SM.\n      (1)  A router may use a single physical\
    \ interface to an SM; this\n           implies that all its logical interfaces\
    \ lie within the same\n           SM.\n      (3)  There might be some administrative\
    \ structure in the IP\n           addresses, e.g., all IP addresses within a particular\n\
    \           national SM might have a common prefix string.\n      (3)  There might\
    \ be configuration information, either local to the\n           router or available\
    \ from some centralized server (e.g, the\n           DNS).  Note that a router\
    \ could consult this server in the\n           background while continuing to\
    \ forward datagrams without\n           delay.  The only consequence of a delay\
    \ in obtaining the\n           \"SameSM\" information would be some unnecessary\
    \ (but\n           temporary) hops.\n   4.3  Extended Proxy ARP\n      The approach\
    \ of Heinanen [Heinanen93] was intended to solve the\n      problem of address\
    \ resolution in a shared medium with no broadcast\n      mechanism (\"Non-Broadcast,\
    \ MultiAccess\" or NBMA).  Imagine that\n      the shared medium has a single\
    \ IP network number, i.e., it is one\n      network \"cloud\".  Heinanen envisions\
    \ a set of AR Servers within\n      this medium.  These AR Servers run some routing\
    \ protocol among\n      themselves.  A source host issues an ARP Request (via\
    \ a point-to-\n      point LL transmission) to an AR Server with which it is\n\
    \      associated.  This ARP Request is forwarded hop-by-hop at the link\n   \
    \   layer through the AR Servers, towards the AR Server that is\n      associated\
    \ with the destination host.  That AR Server resolves the\n      address (using\
    \ information learned from either host advertisement\n      or a configuration\
    \ file), and returns an ARP Reply back through\n      the AR Servers to the source\
    \ host.\n              Ha           Hb           Hc           Hd\n           \
    \   |            |            |            |\n         ---- | ---------- | ----------\
    \ | ---------- | ----\n        (                                             \
    \     )\n        (        Shared Medium (One Logical Network)       )\n      \
    \  (                                                  )\n         ----|--|---------|------------|----------|----|---\n\
    \             |  |         |            |          |    |\n       - R1 -   | \
    \        |            |          |    --- R5 ---\n            ____|__     __|____\
    \      __|____     _|_____\n           | AR Sa |   | AR Sb |    | AR Sc |   |\
    \ AR Sd |\n           |_______|   |_______|    |_______|   |_______|\n       \
    \     Figure 3.  Single-Cloud Shared Medium\n      Figure 3 suggests that each\
    \ of the hosts Ha, ... Hd is associated\n      with a corresponding AR Server\
    \ \"AR Sa\", ...\"AR Sd\".\n      This same scheme could be applied to the LIS\
    \ model of Figure 2.\n      The AR Servers would be implemented in the routers,\
    \ and if the\n      medium supports broadcast then the hosts would be configured\
    \ for\n      proxy ARP.  That is, the host would be told that all destinations\n\
    \      are local, so it will always issue an ARP request for the final\n     \
    \ destination.  The set of AR Servers would resolve this request.\n      Since\
    \ routing loops are a constant possibility, Heinanen's\n      proposal includes\
    \ the addition of a hop count to ARP requests and\n      replies.\n      Like\
    \ all proxy ARP schemes, this one has a seductive simplicity.\n      However,\
    \ solving the SM problem at the LL has several costs.  It\n      requires a complete\
    \ round-trip time before the first datagram can\n      flow.  It requires a hop\
    \ count in the ARP packet.  This seems like\n      a tip-off that the link layer\
    \ may not be the most appropriate\n      place to solve the SM problem.\n   4.4\
    \  Routing Query Messages\n      This scheme [Halpern93] introduces a new IP level\
    \ mechanism: SM\n      routing query and reply messages.  These messages are forwarded\
    \ as\n      IP datagrams hop-by-hop in the direction of the destination\n    \
    \  address.  The exit router can return a reply, again hop-by-hop,\n      that\
    \ finally reaches the source host as an XRedirect.  It would\n      also be possible\
    \ (but not necessary) to modify hosts to initiate\n      these queries.\n    \
    \  The query/reply pair is supplying the same information that we\n      would\
    \ add to routing protocols under Extended Routing.  However,\n      the Query/Reply\
    \ messages would allow us to keep the current\n      routing protocols unchanged,\
    \ and would also provide the extra\n      information only for the routes that\
    \ are actually needed, thus\n      reducing the routing overhead.  Note that the\
    \ Query/Reply sequence\n      can happen in parallel with forwarding the initial\
    \ datagram hop-\n      by-hop, so it does not add an extra round-trip delay.\n\
    \   4.5  Stale Routing Information\n      We must consider what happens when the\
    \ network topology changes.\n      The technique of extended routing (Section\
    \ 4.2) is capable of\n      providing sufficient assurances that stale information\
    \ will be\n      purged from the system within the convergence time associated\
    \ with\n      a particular routing protocol being used.\n      However, the three\
    \ other techniques (hop-by-hop redirection,\n      extended Proxy ARP, and routing\
    \ query messages) may be expected to\n      provide minimal-hop forwarding only\
    \ as long as the network\n      topology remains unchanged since the time such\
    \ information was\n      acquired.  Changes in the topology may result in a change\
    \ in the\n      minimal-hop path, so that the first-hop router may no longer be\n\
    \      the correct choice.  If the host that is using this first-hop\n      router\
    \ is not aware of the changes, then instead of a minimal-hop\n      path the host\
    \ could be using a path that is now suboptimal,\n      perhaps highly sub-optimal,\
    \ with respect to the number of hops.\n      Futhermore, use of the information\
    \ acquired via either extended\n      Proxy ARP or routing query messages to optimize\
    \ routing between\n      routers attached to the same SM is highly problematic,\
    \ because\n      presence of stale information on routers could result in\n  \
    \    forwarding loops that might persist as long as the information\n      isn't\
    \ purged; neither approach provides suitable handling of stale\n      information.\n\
    \   4.6  Implications of Filtering (Firewalls)\n      For a variety of reasons\
    \ an administrator of a LIS may erect IP\n      Layer firewalls (perform IP-layer\
    \ filtering) to constrain LL\n      connectivity between the hosts/routers within\
    \ the LIS and\n      hosts/routers in other LISs within the same SM.  To avoid\n\
    \      disruption in forwarding, the mechanisms described in this\n      document\
    \ need to take into account such firewalls.\n      Using [X]Redirects requires\
    \ a router that generates an [X]Redirect\n      to be cognizant of possible Link\
    \ Layer connectivity constraints\n      between the router that is specified as\
    \ the Next Hop in the\n      Redirect and the host that is the target of the Redirect.\n\
    \      Using extended routing requires a router that originates and/or\n     \
    \ propagates \"third-party\" information be cognizant of the possible\n      Link\
    \ Layer connectivity constraints. Specifically, a router should\n      not propagate\
    \ \"third-party\" information when there is a lack of\n      Link Layer connectivity\
    \ between the router depicted by the\n      information and the router which is\
    \ the immediate recipient of\n      that information.\n      Using extended proxy\
    \ ARP requires an ARP Server not to propagate\n      an ARP Request to another\
    \ ARP server if there are Link Layer\n      connectivity constraints between the\
    \ originator of the ARP Request\n      and the other ARP server.\n      Using\
    \ SM routing query and reply messages requires the routers\n      that pass the\
    \ messages to be aware of the possible Link Layer\n      connectivity constraints.\
    \  The flow of messages need to reflect\n      these constraints.\n"
- title: 5. SECURITY CONSIDERATIONS
  contents:
  - "5. SECURITY CONSIDERATIONS\n   We should discuss the security issues raised by\
    \ our suggested\n   changes.  We should note that we are not talking about \"\
    real\"\n   security here; real Internet security will require cryptographic\n\
    \   techniques on an end-to-end basis.  However, it should not be easy to\n  \
    \ subvert the basic delivery mechanism of IP to cause datagrams to flow\n   to\
    \ unexpected places.\n   With this understanding, the security problems arise\
    \ in two places:\n   the ICMP Redirect messages and the ARP replies.\n   *   \
    \ ICMP Redirect Security\n        We may reasonably require that the routers be\
    \ secure.  They are\n        generally under centralized administrative control,\
    \ and we may\n        assume that the routing protocols will contain sufficient\n\
    \        authentication mechanisms (even if it is not currently true).\n     \
    \   Therefore, a host will reasonably be able to trust a Redirect\n        that\
    \ comes from a router.\n        However, it will NOT be reasonable for a host\
    \ to trust another\n        host.  Suppose that the target host in the examples\
    \ of Section\n        4.1 is untrustworthy; there is no way to prevent its issuing\
    \ a\n        new Redirect to some other destination, anywhere in the\n       \
    \ Internet.  On the other hand, this exposure is no worse than it\n        was;\
    \ the target host, once subverted, could always act as a\n        hidden router\
    \ to forward traffic elsewhere.\n   *    ARP Security\n        Currently, an ARP\
    \ Reply can come only from the local network,\n        and a physically isolated\
    \ network can be administrative secured\n        from subversion of ARP.  However,\
    \ an ARP Reply can come from\n        anywhere within the SM, and an evil-doer\
    \ can use this fact to\n        divert the traffic flow from any host within the\
    \ SM\n        [Bellovin89].\n        The XRedirect closes this security hole.\
    \  Validating the\n        XRedirect (as coming from the node to which the last\
    \ datagram\n        was sent) will also validate the LL address.\n        Another\
    \ approach is to validate the source address from which\n        the ARP Reply\
    \ was received (assuming the link layer protocol\n        carries the source address\
    \ and the driver supplies it).  An\n        acceptable ARP reply for destination\
    \ IP address D can only come\n        from LL address x, where the routing cache\
    \ maps D -> E and the\n        ARP cache gives x as the translation of E.  This\
    \ validation,\n        involving both routing and ARP caches, might be ugly to\n\
    \        implement in a strictly-layered implementation.  It would be\n      \
    \  natural if layering were already violated by combining the ARP\n        cache\
    \ and routing cache.\n   It is possible for the link layer to have security mechanisms\
    \ that\n   could interfere with IP-layer connectivity.  In particular, there\n\
    \   could possible be non-transitivity of logical interconnection within\n   a\
    \ shared medium.  In particular, some large public data networks may\n   include\
    \ configuration options that could allow Net A to talk to Net B\n   and Net B\
    \ to talk to Net C, but prevent A from talking directly to C.\n   In this case,\
    \ the routing protocols have to be sophisticated enough\n   to handle such anomalies.\n"
- title: 6. CONCLUSIONS
  contents:
  - "6. CONCLUSIONS\n   We have discussed four possible extensions to the Internet\n\
    \   architecture to allow hop-efficient forwarding of IP datagrams within\n  \
    \ shared media, when this optimization is allowed by IP-layer\n   firewalls. \
    \ We do not draw any conclusions in this paper about the\n   best mechanisms.\n\
    \   Our suggested extensions are evolutionary, leaving intact the basic\n   ideas\
    \ of the current Internet architecture.  It would be possible to\n   make (and\
    \ some have suggested) much more radical changes to\n   accommodate shared media.\
    \  In the extreme, one could entirely abolish\n   the inner clouds in Figure 2,\
    \ so that there would be no logical\n   network structure within the SM.  The\
    \ IP addresses would then be\n   logical, and some mechanism of distributed servers\
    \ would be needed to\n   find routes within this random haze.  We think this approach\
    \ ignores\n   all the requirements for management and security in today's Internet.\n\
    \   It might make a good research paper, but it would not be good\n   Internet\
    \ design strategy.\n"
- title: 7. ACKNOWLEDGMENTS
  contents:
  - "7. ACKNOWLEDGMENTS\n   We are grateful to Keith McGloghrie, Joel Halpern, and\
    \ others who\n   rubbed our noses in this problem.  We also acknowledge Tony Li\n\
    \   (cisco), Greg Minshall (Novell), and John Garrett (AT&T) for their\n   review\
    \ and constructive comments.  We are also grateful to Gerri\n   Gilliland who\
    \ supplied the paper tablecloth, colored crayons, and\n   fine food that allowed\
    \ these ideas to be assembled initially.\n"
- title: 8. REFERENCES
  contents:
  - "8. REFERENCES\n [Bellovin89]  Bellovin, S., \"Security Problems in the TCP/IP\
    \ Protocol\n     Suite\", ACM CCR, v. 19. no. 2, April 1989.\n [Garrett93]  Garrett,\
    \ J., Hagan, J. and J. Wong, \"Directed ARP\", RFC\n     1433, AT&T Bell Laboratories,\
    \ University of Pennsylvania, March\n     1993.\n [Plummer82]  Plummer, D., \"\
    An Ethernet Address Resolution Protocol\",\n     STD 37, RFC 826, MIT, November\
    \ 1982.\n [Halpern93]  Halpern, J., Private Communication, July 1993.\n [Heinanen93]\
    \  Heinanen, J., \"NBMA Address Resolution Protocol (NBMA\n     ARP)\", Work in\
    \ Progress, June 1993.\n [Laubach93]  Laubach, M., \"Classical IP and ARP over\
    \ ATM\", RFC 1577,\n     Hewlett-Packard Laboratories, January 1994.\n [Postel81a]\
    \  Postel, J., \"Internet Protocol - DARPA Internet Program\n     Protocol Specification\"\
    , STD 5, RFC 791, DARPA, September 1981.\n [Postel81b]  Postel, J., \"Internet\
    \ Control Message Protocol- DARPA\n     Internet Program Protocol Specification\"\
    , STD 5, RFC 792, ISI,\n     September 1981.\n [PSC81]  Postel, J., Sunshine,\
    \ C., and D. Cohen, \"The ARPA Internet\n     Protocol\", Computer Networks 5,\
    \ pp. 261-271, 1983.\n [RFC-1122]  Braden, R., Editor, \"Requirements for Internet\
    \ Hosts --\n     Communication Layers\", STD 3, RFC 1122, USC/Information Sciences\n\
    \     Institutue, October 1989.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n     Bob Braden\n     Information Sciences Institute\n  \
    \   University of Southern California\n     4676 Admiralty Way\n     Marina del\
    \ Rey, CA 90292\n     Phone: (310) 822-1511\n     EMail: Braden@ISI.EDU\n    \
    \ Jon Postel\n     Information Sciences Institute\n     University of Southern\
    \ California\n     4676 Admiralty Way\n     Marina del Rey, CA 90292\n     Phone:\
    \ (310) 822-1511\n     EMail: Postel@ISI.EDU\n     Yakov Rekhter\n     Office\
    \ 32-017\n     T.J. Watson Research Center, IBM Corp.\n     P.O. Box 218,\n  \
    \   Yorktown Heights, NY 10598\n     Phone: (914) 945-3896\n     EMail: Yakov@WATSON.IBM.COM\n"
