Abstract This document specifies the way of encapsulating IPv6 packets over Fibre Channel, and the method of forming IPv6 link local addresses and statelessly autoconfigured addresses on Fibre Channel networks.
Introduction Fibre Channel (FC) is a high speed serial interface technology that supports several Upper Layer Protocols including Small Computer System Interface (SCSI) and IPv4 as specified in [IPFC].
The purpose of this document is to specify a way of encapsulating IP version 6 [IPv6] over Fibre Channel and to describe a method of forming IPv6 link local addresses [AARCH] and statelessly autoconfigured addresses on Fibre Channel networks.
This document also describes the content of the Source/Target Link layer Address option used in Neighbor Discovery [DISC] when the messages are transmitted on a Fibre Channel network.
Warning to readers familiar with Fibre Channel: both Fibre Channel and IETF standards use the same byte transmission order.
However, the bit numbering is different.
See Appendix C for guidance.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [KEYWORDS].
Summary of Fibre Channel 2.1.
Overview Fibre Channel (FC) is a gigabit speed network technology primarily used for Storage Networking.
Fibre Channel is standardized in the T11 Technical Committee of the InterNational Committee for Information Technology Standards (INCITS), an American National Standard Institute (ANSI) accredited standards committee.
Fibre Channel devices are called Nodes.
Each Node has one or more Ports that connect to Ports of other devices.
Fibre Channel may be implemented using any combination of the following three topologies:  a point to point link between two Ports;  a set of Ports interconnected by a switching network called a Fabric, as defined in [FC FS];  a set of Ports interconnected with a loop topology, as defined in [FC AL 2].
A Node Port is more precisely called an N Port.
A Node Port that is capable of operating in a loop topology using the loop specific protocols is designated as an NL Port.
Nx Port is used to generically indicate these two kinds of Node Port.
A Fabric Port is more precisely called an F Port.
A Fabric Port that is capable of operating in a loop topology using the loop specific protocols is designated as an FL Port.
Fx Port is used to generically indicate these two kinds of Fabric Port.
From an IPv6 point of view, a Fibre Channel network, built with any combination of the FC topologies described above, is an IPv6 Link [IPv6].
Nx Ports are what [IPv6] calls Interfaces.
Identifiers and Login Fibre Channel entities are identified by permanent 64 bit long Name Identifiers.
[FC FS] defines several formats of Name Identifiers.
The value of the first four bits defines the format of a Name Identifier.
These names are referred to in a more precise manner as follows:  an Nx Port's Name Identifier is called N Port Name;  an Fx Port's Name Identifier is called F Port Name;  a Node's Name Identifier is called Node Name;  a Fabric's Name Identifier is called Fabric Name.
An Nx Port connected to a Fibre Channel network is associated with two identifiers, its permanent N Port Name and a volatile 24 bit address called N Port ID.
The N Port Name is used to identify the Nx Port, while the N Port ID is used for communications among Nx Ports.
Each Nx Port acquires an N Port ID from the Fabric by performing a process called Fabric Login or FLOGI.
The FLOGI process is used also to negotiate several communications parameters between the Nx Port and the Fabric, such as the receive data field size, which determines the maximum size of the Fibre Channel frames that may be transferred between the Nx Port and the Fabric.
Before effective communication may take place between two Nx Ports, they must complete a process called Port Login or PLOGI.
The PLOGI process provides each Nx Port with the other Nx Port's N Port Name, and negotiates several communication parameters, such as the receive data field size, which determines the maximum size of the Fibre Channel frames that may be transferred between the two Nx Ports.
Both Fabric Login and Port Login may be explicit, i.e., performed using specific FC control messages (called Extended Link Services or ELS), or implicit, in which the parameters are specified by configuration or other methods.
FC Levels and Frame Format [FC FS] describes the Fibre Channel protocol using 5 different levels.
The FC 2 and FC 4 levels are relevant for this specification.
The FC 2 level defines the FC frame format, the transport services, and control functions necessary for information transfer.
The FC 4 level supports Upper Level Protocols, such as IPv4, IPv6 or SCSI.
The Fibre Channel frame format is depicted in figure 1.
The Start of Frame (SOF) and End of Frame (EOF) are special FC transmission words that act as frame delimiters.
The CRC is 4 octets long and uses the same 32 bit polynomial used in FDDI.
The FC Header is 24 octets long and contains several fields associated with the identification and control of the Data Field.
The Data Field is of variable size, ranging from 0 to 2112 octets, and includes the user data in the Frame Payload field, and Optional Headers.
The currently defined Optional Headers are:  ESP Header;  Network Header;  Association Header;
The value of the SOF field determines the FC Class of service associated with the frame.
Five Classes of service are specified in [FC FS].
They are distinguished primarily by the method of flow control between the communicating Nx Ports and by the level of data integrity provided.
A given Fabric or Nx Port may support one or more of the following Classes of service:  Class 1:
Dedicated physical connection with delivery confirmation;  Class 2: Frame multiplexed service with delivery confirmation;  Class 3: Datagram service;  Class 4:
Fractional bandwidth;  Class 6: Reliable multicast via dedicated connections.
Sequences and Exchanges An application level payload such as IPv6 is called Information Unit at the FC 4 level of Fibre Channel.
Each FC 4 Information Unit is mapped to an FC Sequence by the FC 2 level.
An FC Sequence consists of one or more FC frames related by the value of the Sequence ID (SEQ ID) field of the FC Header.
The maximum data that may be carried by an FC frame is 2112 octets.
The maximum usable frame size depends on the Fabric and Nx Port implementations and is negotiated during the Login process.
Whenever an Information Unit to be transmitted exceeds this value, the FC 2 level segments it into multiple FC frames, sent as a single Sequence.
The receiving Nx Port reassembles the Sequence of frames and delivers a reassembled Information Unit to the FC 4 level.
The Sequence Count (SEQ CNT) field of the FC Header may be used to ensure frame ordering.
Multiple Sequences may be related together as belonging to the same FC Exchange.
The Exchange is a mechanism used by two Nx Ports to identify and manage an operation between them.
The Exchange is opened when the operation is started between the two Nx Ports, and closed when the operation ends.
FC frames belonging to the same Exchange are related by the value of the Exchange ID fields in the FC Header.
An Originator Exchange ID (OX ID) and a Responder Exchange ID (RX ID) uniquely identify the Exchange.
This specification requires an IPv6 capable Nx Port to have the following properties:
The format of its N Port Name MUST be one of 0x1, 0x2, 0x5, 0xC, 0xD, 0xE, 0xF (see section 6.1).
IPv6 support for other Name Identifier formats is outside the scope of this specification;
It MUST support Class 3;
It MUST support continuously increasing SEQ CNT [FC FS];  It MUST be able to transmit and receive an FC 4 Information Unit at least 1304 octets long;
It SHOULD support a receive data field size for Device Data FC frames of at least 1024 octets.
An IPv6 packet is mapped to an Information Unit at the FC 4 level of Fibre Channel, which in turn is mapped to an FC Sequence by the FC 2 level.
An FC Information Unit containing an IPv6 packet MUST carry the FC Network Header [FC FS] and the LLC/SNAP header [IEEE LLC], resulting in the FC Information Unit format depicted in figure 2.
2: FC Information Unit Mapping an IPv6
The FC ESP Header [FC FS]
MAY be used to secure the FC frames composing the FC Sequence.
[AH] or [ESP] may be used to provide security at the IPv6 layer.
Other types of FC Optional Header MUST NOT be used in an IPv6 FC Sequence.
Typically, a Sequence consists of more than one frame.
Only the first frame of the Sequence MUST include the FC Network Header and the LLC/SNAP header.
The other frames MUST NOT include them, as depicted in figure 3.
First Frame of an IPv6
FC Network Header   LLC/SNAP header
Subsequent Frames of an IPv6
Additional chunk of the IPv6
Optional Headers in an IPv6 FC Sequence 4.2.
This specification uses FC Class 3.
IPv6 packets carrying Neighbor Discovery [DISC] messages MUST be encapsulated in Class 3 FC frames.
Other IPv6 packets SHOULD use Class 3 as well.
The use of other Classes of service is outside the scope of this specification.
The fields of the Fibre Channel Header are depicted in figure 4.
The D ID and S ID fields contain respectively the destination N Port ID and the source N Port ID.
To encapsulate IPv6 over Fibre Channel the following code points MUST be used:  R CTL:
0x04 (Device Data frame with Unsolicited Data Information Category [FC FS])
0x05 (IP over Fibre Channel)
DF CTL: 0x20 (Network Header) for the first FC frame of an IPv6 Sequence
, 0x00 for the following FC frames.
If the FC ESP Header is used, then 0x60 for the first FC frame of an IPv6 Sequence, 0x40 for the following FC frames.
F CTL, SEQ ID, SEQ CNT, OX ID, RX ID, Parameter: see section 10, section 11, and [FC FS] for additional requirements. 0
4: FC Header Format 4.4.
The fields of the FC Network Header are depicted in figure 5.
For use with IPv6 the N Port Names formats MUST be one of 0x1, 0x2, 0x5, 0xC, 0xD, 0xE, 0xF.
IPv6 support for other Name Identifier formats is outside the scope of this specification. 0
FC Network Header Format 4.5.
The fields of the LLC/SNAP Header [IEEE LLC] are depicted in figure 6.
To encapsulate IPv6 over Fibre Channel the following code points MUST be used:
: LLC/SNAP Header Format 4.6.
Bit and Byte Ordering IPv6 packets are mapped to the FC 4 level using the big endian byte ordering that corresponds to the standard network byte order or canonical form.
The default MTU size for IPv6 [IPv6] packets over Fibre Channel is 65280 octets.
This size may be reduced by a Router Advertisement [DISC] containing an MTU option that specifies a smaller MTU, or by manual configuration of each Nx Port.
However, as required by [IPv6], the MTU MUST NOT be lower than 1280 octets.
If a Router Advertisement received on an Nx Port has an MTU option specifying an MTU larger than 65280, or larger than a manually configured value, that MTU option MAY be logged to system management but MUST be otherwise ignored.
As the default MTU size far exceeds the message sizes typically used in the Internet, an IPv6 over FC implementation SHOULD implement Path MTU Discovery [PMTUD], or at least maintain different MTU values for on link and off link destinations.
For correct operation in a routed environment, it is critically important to configure an appropriate MTU option in Router Advertisements.
For correct operation when mixed media (e.g., Ethernet and Fibre Channel) are bridged together, the smallest MTU of all the media must be advertised by routers in an MTU option.
If there are no routers present, this MTU must be manually configured in each node which is connected to a medium with a default MTU larger than the smallest MTU.
IPv6 Interface Identifier and Address Prefix
The IPv6 Interface ID [AARCH] for an Nx Port is based on the EUI 64 address [EUI64] derived from the Nx Port's N Port Name.
The IPv6 Interface Identifier is obtained by complementing the Universal/Local bit of the OUI field of the derived EUI 64 address.
[FC FS] specifies a method to map format 0x1
(IEEE 48 bit address), or 0x2
FC Name Identifiers in EUI 64 addresses.
This allows the usage of these Name Identifiers to support IPv6.
[FC FS] also defines EUI 64 mapped FC Name Identifiers (formats 0xC, 0xD, 0xE, and 0xF), that are derived from an EUI 64 address.
It is possible to reverse this address mapping to obtain the original EUI 64 address in order to support IPv6.
Stateless address autoconfiguration MUST be performed as specified in [ACONF].
An IPv6 Address Prefix used for stateless address autoconfiguration of an Nx Port
MUST have a length of 64 bits.
Generating an Interface ID from a Format 1 N Port Name
The Name Identifier format 0x1 is depicted in figure 7. 0
3 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1    0 0 0
The EUI 64 address derived from this Name Identifier has the format depicted in figure 8 [FC FS].
EUI 64 Address from a Format 0x1 Name Identifier
The IPv6 Interface Identifier is obtained from this EUI 64 address by complementing the U/L bit in the OUI field.
So the OUI in the IPv6
Interface ID is exactly as in the FC Name Identifier.
The resulting IPv6 Interface Identifier has local scope [AARCH] and the format depicted in figure 9.
: IPv6 Interface ID from a Format 0x1 Name Identifier
As an example, the FC Name Identifier 0x10 00
34 63 46 AB CD EF generates the IPv6 Interface Identifier 3463:461A:
Generating an Interface ID from a Format 2 N Port Name
The Name Identifier format 0x2 is depicted in figure 10. 0
The EUI 64 address derived from this Name Identifier has the format depicted in figure 11 [FC FS].
: EUI 64 Address from a Format 0x2 Name Identifier
The IPv6 Interface Identifier is obtained from this EUI 64 address by complementing the U/L bit in the OUI field.
So the OUI in the IPv6
Interface ID is exactly as in the FC Name Identifier.
The resulting IPv6 Interface Identifier has local scope [AARCH] and the format depicted in figure 12. 0
: IPv6 Interface ID from a Format 0x2 Name Identifier
As an example, the FC Name Identifier 0x27 89 34
63 46 AB CD EF generates the IPv6 Interface Identifier 3463:462A:
Generating an Interface ID from a Format 5 N Port Name
The Name Identifier format 0x5 is depicted in figure 13. 0
The EUI 64 address derived from this Name Identifier has the format depicted in figure 14 [FC FS].
: EUI 64 Address from a Format 0x5
The IPv6 Interface Identifier is obtained from this EUI 64 address complementing the U/L bit in the OUI field.
So the OUI in the IPv6
Interface ID is exactly as in the FC Name Identifier.
The resulting IPv6 Interface Identifier has local scope [AARCH] and the format depicted in figure 15. 0
: IPv6 Interface ID from a Format 0x5
As an example, the FC Name Identifier 0x53
34 6A BC DE F7 89 generates the IPv6 Interface Identifier 3463:465A:
Generating an Interface ID from an EUI 64 mapped N Port Name
The EUI 64 mapped Name Identifiers formats (formats 0xC through 0xF) are derived from an EUI 64 address by compressing the OUI field of such addresses.
The compression is performed by removing from the OUI the Universal/Local and Individual/Group bits, and by putting bits 0 to 5 of the OUI in the first octet of the Name Identifier, and bits 8 to 23 of the OUI in the second and third octet of the Name Identifier, as shown in figure 16. 0
EUI 64 Mapped Name Identifiers Format
The EUI 64 address used to generate the Name Identifier shown in figure 16 has the format depicted in figure 17. 0
: EUI 64 Address from an EUI 64 Mapped Name Identifier
The IPv6 Interface Identifier is obtained from this EUI 64 address by complementing the U/L bit in the OUI field.
The resulting IPv6 Interface Identifier has global scope [AARCH] and the format depicted in figure 18. 0
: IPv6 Interface ID from an EUI 64 Mapped Name Identifier
As an example, the FC Name Identifier 0xCD 63 46 AB 01
25 78 9A generates the IPv6 Interface Identifier 3663:46AB:0125:789A. 7.
The IPv6 link local address [AARCH] for an Nx Port is formed by appending the Interface Identifier, as defined in section 6, to the prefix FE80::/64.
The resulting address is depicted in figure 19.
: IPv6 link local Address Format 8.
Address Mapping for Unicast An Nx Port has two kinds of Fibre Channel
a non volatile 64 bit address, called N Port Name;  a volatile 24 bit address, called N Port ID.
The N Port Name is used to uniquely identify the Nx Port, while the N Port ID is used to route frames to the Nx Port.
Both FC addresses are required to resolve an IPv6 unicast address.
The fact that the N Port ID is volatile implies that an Nx Port MUST validate the mapping between its N Port Name and N Port ID when certain Fibre Channel events occur (see Appendix B).
The procedure for mapping IPv6 unicast addresses into Fibre Channel link layer addresses uses the Neighbor Discovery Protocol [DISC].
The Source/Target Link layer Address option has the format depicted in figure 20 when the link layer is Fibre Channel. 0
2 for Target Link layer address.
This field contains the Nx Port's N Port Name.
This field contains the Nx Port's N Port ID.
Reserved fields MUST be zero when transmitting, and MUST be ignored when receiving.
Address Mapping for Multicast By default
, all best effort IPv6 multicast packets MUST be mapped to FC Sequences addressed to the broadcast N Port ID 0xFF FF FF.
In particular, datagrams addressed to all nodes multicast address, all routers multicast address, and solicited node multicast addresses [AARCH] MUST be sent as Class 3 FC Sequences addressed to the broadcast N Port ID 0xFF FF FF.
In this case, the Destination N Port Name field of the FC Network Header MUST be set to the value 0x10 00 FF FF FF FF FF FF.
Appendix A specifies how to transmit a Class 3 broadcast FC Sequence over various Fibre Channel topologies.
An Nx Port supporting IPv6 MUST be able to map a received broadcast Class 3 Device Data FC frame to an implicit Port Login context in order to handle IPv6 multicast packets.
The receive data field size of this implicit Port Login MUST be the same across all the Nx Ports connected to the same Fabric, otherwise FC broadcast transmission does not work.
In order to reduce the need for FC Sequence segmentation, the receive data field size of this implicit Port Login SHOULD be 1024 octets.
This receive data field size requirement applies to broadcast Device Data FC frames, not to ELSs.
Receiving an FC Sequence carrying an IPv6 multicast packet MAY trigger some additional processing by the Nx Port if that IPv6 packet requires a unicast reply.
In this case, if a valid Port Login to the Nx Port that sent the IPv6 multicast packet does not exist, the Nx Port MUST perform such a Port Login, and then use it for the unicast IPv6 reply.
In the case of Neighbor Discovery messages [DISC], the N Port ID to which the Port Login is directed is taken from the N Port ID field of the Source/Target Link layer Address option.
As an example, an Nx Port processes a received broadcast FC Sequence carrying an IPv6 multicast unsolicited router advertisement [DISC] simply by passing the carried IPv6 packet to the IPv6 layer.
Instead, if a received broadcast FC Sequence carries an IPv6 multicast solicitation message [DISC] requiring a unicast reply, and no valid Port Login exists with the Nx Port sender of the multicast packet, then a Port Login MUST be performed in order to send the unicast reply message.
If a received broadcast FC Sequence carries an IPv6 multicast solicitation message [DISC] requiring a multicast reply, the reply is sent to the broadcast N Port ID 0xFF FF FF.
Best effort IPv6 multicast for other multicast group addresses MAY use Fibre Channel Multicast Groups [FC FS], if supported by the particular FC topology and implementation.
Sequence Management FC Sequences are REQUIRED to be non streamed.
In order to avoid missing FC frame aliasing by Sequence ID reuse, an Nx Port supporting IPv6 is REQUIRED to use continuously increasing SEQ CNT [FC FS].
Each Exchange MUST start with SEQ CNT   0 in the first frame, and every frame transmitted after that MUST increment the previous SEQ CNT by one.
Any frames received from the other N Port in the Exchange shall have no effect on the transmitted SEQ CNT.
To transfer IPv6 packets, each Nx Port MUST have a dedicated Exchange for sending data to each Nx Port in the network and a dedicated Exchange for receiving data from each Nx Port.
An Exchange Responder is not required to assign RX IDs.
If an RX ID of 0xFFFF is assigned, the Exchange Responder is identifying Exchanges based on S ID / D ID / OX ID only.
When an Exchange is created between two Nx Ports for unicast IPv6 packets, it remains active while the Nx Ports are logged in with each other.
Each FC broadcast and ELS
SHOULD use a separate short lived Exchange.
For IPv6, Exchanges MUST NOT transfer Sequence Initiative, because they are used in a unidirectional mode.
The Sequence Initiative bit in the F CTL field of the FC Header [FC FS] MUST be set to 0.
The mechanism for aging or expiring exchanges based on activity, timeout, or other methods is outside the scope of this document.
The Exchange Originator MAY terminate Exchanges by setting the F CTL LS bit [FC FS].
Exchanges MAY be torn down by the Exchange Originator or Exchange Responder by using the ABTS (Abort Sequence) protocol [FC FS].
IPv6 Exchanges SHOULD NOT be terminated by Logout, since this may terminate active Exchanges on other FC 4s
Security Considerations IPv6 does not introduce any additional security concerns beyond those that already exist within the Fibre Channel protocols.
Zoning techniques based on FC Name Server masking (soft zoning) do not work with IPv6, because IPv6 over Fibre Channel does not use the FC Name Server.
The FC ESP Header [FC FS] may be used to secure the FC frames composing FC Sequences carrying IPv6 packets.
All the techniques defined to secure IPv6 traffic at the IPv6 layer may be used in a Fibre Channel environment.
A.  Transmission of a Broadcast FC Sequence over FC Topologies A.1.
No particular mechanisms are required for this case.
The Nx Port connected at the other side of the cable receives the broadcast FC Sequence having D ID 0xFFFFFF.
An NL Port attached to a private loop
MUST transmit a Class 3 broadcast FC Sequence by using the OPN(fr) primitive signal [FC AL 2].
The source NL Port first sends an Open Broadcast Replicate (OPN(fr)) primitive signal, forcing all the NL Ports in the loop (except itself) to replicate the frames that they receive while examining the FC Header's D ID field.
The source NL Port then removes the OPN(fr) signal when it returns to it.
The source NL Port then sends the Class 3 broadcast FC Sequence having D ID 0xFFFFFF.
An NL Port attached to a public loop
MUST NOT use the OPN(fr) primitive signal.
Rather, it MUST send the Class 3 broadcast FC Sequence having D ID 0xFFFFFF to the FL Port at AL PA
The Fabric propagates the broadcast to all other FC Ports [FC FS], including the FL Port which the broadcast arrives on.
This includes all F Ports, and other FL Ports.
Each FL Port propagates the broadcast by using the primitive signal OPN(fr), in order to prepare the loop to receive the broadcast sequence.
An N Port connected to an F Port
MUST transmit the Class 3 broadcast FC Sequence having D ID 0xFFFFFF to the F Port.
The Fabric propagates the broadcast to all other FC Ports [FC FS].
B.  Validation of the <N Port Name
, N Port ID> mapping B.1.
At all times, the <N Port Name,
> mapping must be valid before use.
After an FC link interruption occurs, the N Port ID of an Nx Port may change, as well as the N Port IDs of all other Nx Ports that have previously performed Port Login with this Nx Port.
Because of this, address validation is required after a LIP in a loop topology [FC AL 2] or after NOS/OLS in a point to point topology [FC FS].
N Port IDs do not change as a result of Link Reset (LR) [FC FS], thus address validation is not required in this case.
FC Layer Address Validation in a Point to Point Topology
No validation is required after LR.
In a point to point topology, NOS/OLS causes implicit Logout of each N Port and after a NOS/OLS each N Port must again perform a Port Login [FC FS].
FC Layer Address Validation in a Private Loop Topology
After a LIP [FC AL 2], an NL Port must not transmit any data to another NL Port until the address of the other port has been validated.
The validation consists of completing either ADISC or PDISC [FC FS].
For a requester, this specification prohibits PDISC and requires ADISC.
As a responder, an implementation may need to respond to both ADISC and PDISC for compatibility with other FC specifications.
If the three FC addresses (N Port ID, N Port Name, Node Name) of a logged remote NL Port exactly match the values prior to the LIP, then any active Exchange with that NL Port may continue.
If any of the three FC addresses has changed, then the remote NL Port must be logged out.
If an NL Port's N Port ID changes after a LIP, then all active logged in NL Ports must be logged out.
FC Layer Address Validation in a Public Loop Topology A FAN ELS may be sent by the Fabric to all known previously logged in NL Ports following an initialization event.
Therefore, after a LIP [FC AL 2], NL Ports may wait for this notification to arrive, or they may perform an FLOGI.
If the F Port Name and Fabric Name contained in the FAN ELS or FLOGI response exactly match the values before the LIP and if the AL PA [FC AL 2] obtained by the NL Port is the same as the one before the LIP, then the port may resume all Exchanges.
If not, then FLOGI must be performed with the Fabric and all logged in Nx Ports must be logged out.
A public loop NL Port must perform the private loop validation as specified in section B.3 to any NL Port on the local loop that has an N Port ID of the form 0x00 00 XX.
FC Layer Address Validation in a Fabric Topology
No validation is required after LR (link reset).
After NOS/OLS, an N Port must perform FLOGI.
If, after FLOGI, the N Port's N Port ID, the F Port Name, and the Fabric Name are the same as before the NOS/OLS, then the N Port may resume all Exchanges.
If not, all logged in Nx Ports must be logged out [FC FS].
C.  Fibre Channel Bit and Byte
Both Fibre Channel and IETF standards use the same byte transmission order.
However, the bit numbering is different.
Fibre Channel bit numbering can be observed if the data structure heading shown in figure 21 is cut and pasted at the top of the figures present in this document.
