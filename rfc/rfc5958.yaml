- title: __initial_text__
  contents:
  - '                        Asymmetric Key Packages

    '
- title: Abstract
  contents:
  - "Abstract\n   This document defines the syntax for private-key information and\
    \ a\n   content type for it.  Private-key information includes a private key\n\
    \   for a specified public-key algorithm and a set of attributes.  The\n   Cryptographic\
    \ Message Syntax (CMS), as defined in RFC 5652, can be\n   used to digitally sign,\
    \ digest, authenticate, or encrypt the\n   asymmetric key format content type.\
    \  This document obsoletes RFC\n   5208.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by\n   the Internet Engineering\
    \ Steering Group (IESG).  Further\n   information on Internet Standards is available\
    \ in Section 2 of\n   RFC 5741.\n   Information about the current status of this\
    \ document, any\n   errata, and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc5958.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document defines the syntax for private-key information\
    \ and a\n   Cryptographic Message Syntax (CMS) [RFC5652] content type for it.\n\
    \   Private-key information includes a private key for a specified\n   public-key\
    \ algorithm and a set of attributes.  The CMS can be used to\n   digitally sign,\
    \ digest, authenticate, or encrypt the asymmetric key\n   format content type.\
    \  This document obsoletes PKCS #8 v1.2 [RFC5208].\n"
- title: 1.1.  Requirements Terminology
  contents:
  - "1.1.  Requirements Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 1.2.  ASN.1 Syntax Notation
  contents:
  - "1.2.  ASN.1 Syntax Notation\n   The key package is defined using ASN.1 [X.680],\
    \ [X.681], [X.682], and\n   [X.683].\n"
- title: 1.3.  Summary of Updates to RFC 5208
  contents:
  - "1.3.  Summary of Updates to RFC 5208\n   The following summarizes the updates\
    \ to [RFC5208]:\n   - Changed the name \"PrivateKeyInfo\" to \"OneAsymmetricKey\"\
    .  This\n     reflects the addition of the publicKey field to allow both parts\
    \ of\n     the asymmetric key to be conveyed separately.  Not all algorithms\n\
    \     will use both fields; however, the publicKey field was added for\n     completeness.\n\
    \   - Defined Asymmetric Key Package CMS content type.\n   - Removed redundant\
    \ IMPLICIT from attributes.\n   - Added publicKey to OneAsymmetricKey and updated\
    \ the version number.\n   - Added that PKCS #9 attributes may be supported.\n\
    \   - Added discussion of compatibility with other private-key formats.\n   -\
    \ Added requirements for encoding rule set.\n   - Changed imports from PKCS #5\
    \ to [RFC5912] and [RFC5911].\n   - Replaced ALGORITHM-IDENTIFIER with ALGORITHM\
    \ from [RFC5912].\n   - Registers application/pkcs8 media type and .p8 file extension.\n"
- title: 2.  Asymmetric Key Package CMS Content Type
  contents:
  - "2.  Asymmetric Key Package CMS Content Type\n   The asymmetric key package CMS\
    \ content type is used to transfer one\n   or more plaintext asymmetric keys from\
    \ one party to another.  An\n   asymmetric key package MAY be encapsulated in\
    \ one or more CMS\n   protecting content types (see Section 4).  Earlier versions\
    \ of this\n   specification [RFC5208] did not specify a particular encoding rule\n\
    \   set, but generators SHOULD use DER [X.690] and receivers MUST support\n  \
    \ BER [X.690], which also includes DER [X.690].\n   The asymmetric key package\
    \ content type has the following syntax:\n     ct-asymmetric-key-package CONTENT-TYPE\
    \ ::=\n       { AsymmetricKeyPackage IDENTIFIED BY id-ct-KP-aKeyPackage }\n  \
    \   id-ct-KP-aKeyPackage OBJECT IDENTIFIER ::=\n       { joint-iso-itu-t(2) country(16)\
    \ us(840) organization(1)\n         gov(101) dod(2) infosec(1) formats(2)\n  \
    \       key-package-content-types(78) 5\n       }\n     AsymmetricKeyPackage ::=\
    \ SEQUENCE SIZE (1..MAX) OF OneAsymmetricKey\n     OneAsymmetricKey ::= SEQUENCE\
    \ {\n       version                   Version,\n       privateKeyAlgorithm   \
    \    PrivateKeyAlgorithmIdentifier,\n       privateKey                PrivateKey,\n\
    \       attributes            [0] Attributes OPTIONAL,\n       ...,\n       [[2:\
    \ publicKey        [1] PublicKey OPTIONAL ]],\n       ...\n     }\n     PrivateKeyInfo\
    \ ::= OneAsymmetricKey\n     -- PrivateKeyInfo is used by [P12].  If any items\
    \ tagged as version\n     -- 2 are used, the version must be v2, else the version\
    \ should be\n     -- v1.  When v1, PrivateKeyInfo is the same as it was in [RFC5208].\n\
    \     Version ::= INTEGER { v1(0), v2(1) } (v1, ..., v2)\n     PrivateKeyAlgorithmIdentifier\
    \ ::= AlgorithmIdentifier\n                                        { PUBLIC-KEY,\n\
    \                                          { PrivateKeyAlgorithms } }\n     PrivateKey\
    \ ::= OCTET STRING\n                        -- Content varies based on type of\
    \ key.  The\n                        -- algorithm identifier dictates the format\
    \ of\n                        -- the key.\n     PublicKey ::= BIT STRING\n   \
    \                     -- Content varies based on type of key.  The\n         \
    \               -- algorithm identifier dictates the format of\n             \
    \           -- the key.\n     Attributes ::= SET OF Attribute { { OneAsymmetricKeyAttributes\
    \ } }\n   The AsymmetricKeyPackage contains one or more OneAsymmetricKey\n   elements.\n\
    \   The syntax of OneAsymmetricKey accommodates a version number, an\n   indication\
    \ of the asymmetric algorithm to be used with the private\n   key, a private key,\
    \ optional keying material attributes (e.g.,\n   userCertificate from [X.520]),\
    \ and an optional public key.  In\n   general, either the public key or the certificate\
    \ will be present.\n   In very rare cases will both the public key and the certificate\
    \ be\n   present as this includes two copies of the public key.\n   OneAsymmetricKey\
    \ renames the PrivateKeyInfo syntax defined in\n   [RFC5208].  The new name better\
    \ reflects the ability to carry both\n   private- and public-key components. \
    \ Backwards compatibility with the\n   original PrivateKeyInfo is preserved via\
    \ version number.  The fields\n   in OneAsymmetricKey are used as follows:\n \
    \  - version identifies the version of OneAsymmetricKey.  If publicKey\n     is\
    \ present, then version is set to v2 else version is set to v1.\n   - privateKeyAlgorithm\
    \ identifies the private-key algorithm and\n     optionally contains parameters\
    \ associated with the asymmetric key\n     pair.  The algorithm is identified\
    \ by an object identifier (OID)\n     and the format of the parameters depends\
    \ on the OID, but the\n     PrivateKeyAlgorithms information object set restricts\
    \ the\n     permissible OIDs.  The value placed in\n     privateKeyAlgorithmIdentifier\
    \ is the value an originator would\n     apply to indicate which algorithm is\
    \ to be used with the private\n     key.\n   - privateKey is an OCTET STRING that\
    \ contains the value of the\n     private key.  The interpretation of the content\
    \ is defined in the\n     registration of the private-key algorithm.  For example,\
    \ a DSA key\n     is an INTEGER, an RSA key is represented as RSAPrivateKey as\n\
    \     defined in [RFC3447], and an Elliptic Curve Cryptography (ECC) key\n   \
    \  is represented as ECPrivateKey as defined in [RFC5915].\n   - attributes is\
    \ OPTIONAL.  It contains information corresponding to\n     the public key (e.g.,\
    \ certificates).  The attributes field uses the\n     class ATTRIBUTE which is\
    \ restricted by the\n     OneAsymmetricKeyAttributes information object set.\n\
    \     OneAsymmetricKeyAttributes is an open ended set in this document.\n    \
    \ Others documents can constrain these values.  Attributes from\n     [RFC2985]\
    \ MAY be supported.\n   - publicKey is OPTIONAL.  When present, it contains the\
    \ public key\n     encoded in a BIT STRING.  The structure within the BIT STRING,\
    \ if\n     any, depends on the privateKeyAlgorithm.  For example, a DSA key is\n\
    \     an INTEGER.  Note that RSA public keys are included in\n     RSAPrivateKey\
    \ (i.e., n and e are present), as per [RFC3447], and\n     ECC public keys are\
    \ included in ECPrivateKey (i.e., in the\n     publicKey field), as per [RFC5915].\n"
- title: 3.  Encrypted Private Key Info
  contents:
  - "3.  Encrypted Private Key Info\n   This section gives the syntax for encrypted\
    \ private-key information,\n   which is used by [P12].\n   Encrypted private-key\
    \ information shall have ASN.1 type\n   EncryptedPrivateKeyInfo:\n     EncryptedPrivateKeyInfo\
    \ ::= SEQUENCE {\n       encryptionAlgorithm  EncryptionAlgorithmIdentifier,\n\
    \       encryptedData        EncryptedData }\n     EncryptionAlgorithmIdentifier\
    \ ::= AlgorithmIdentifier\n                                        { CONTENT-ENCRYPTION,\n\
    \                                          { KeyEncryptionAlgorithms } }\n   \
    \  EncryptedData ::= OCTET STRING\n   The fields in EncryptedPrivateKeyInfo are\
    \ used as follows:\n   - encryptionAlgorithm identifies the algorithm under which\
    \ the\n     private-key information is encrypted.\n   - encryptedData is the result\
    \ of encrypting the private-key\n     information  (i.e., the PrivateKeyInfo).\n\
    \   The encryption process involves the following two steps:\n   1. The private-key\
    \ information is encoded, yielding an octet string.\n      Generators SHOULD use\
    \ DER [X.690] and receivers MUST support BER\n      [X.690], which also includes\
    \ DER [X.690].\n   2. The result of step 1 is encrypted with the secret key to\
    \ give an\n      octet string, the result of the encryption process.\n"
- title: 4.  Protecting the AsymmetricKeyPackage
  contents:
  - "4.  Protecting the AsymmetricKeyPackage\n   CMS protecting content types, [RFC5652]\
    \ and [RFC5083], can be used to\n   provide security to the AsymmetricKeyPackage:\n\
    \   - SignedData can be used to apply a digital signature to the\n     AsymmetricKeyPackage.\n\
    \   - EncryptedData can be used to encrypt the AsymmetricKeyPackage with\n   \
    \  symmetric encryption, where the sender and the receiver already\n     share\
    \ the necessary encryption key.\n   - EnvelopedData can be used to encrypt the\
    \ AsymmetricKeyPackage with\n     symmetric encryption, where the sender and the\
    \ receiver do not\n     share the necessary encryption key.\n   - AuthenticatedData\
    \ can be used to protect the AsymmetricKeyPackage\n     with message authentication\
    \ codes, where key management information\n     is handled in a manner similar\
    \ to EnvelopedData.\n   - AuthEnvelopedData can be used to protect the AsymmetricKeyPackage\n\
    \     with algorithms that support authenticated encryption, where key\n     management\
    \ information is handled in a manner similar to\n     EnvelopedData.\n"
- title: 5.  Other Private-Key Format Considerations
  contents:
  - "5.  Other Private-Key Format Considerations\n   This document defines the syntax\
    \ and the semantics for a content type\n   that exchanges asymmetric private keys.\
    \  There are two other formats\n   that have been used for the transport of asymmetric\
    \ private keys:\n   - Personal Information Exchange (PFX) Syntax Standard [P12],\
    \ which is\n     more commonly referred to as PKCS #12 or simply P12, is a transfer\n\
    \     syntax for personal identity information, including private keys,\n    \
    \ certificates, miscellaneous secrets, and extensions.\n     OneAsymmetricKey,\
    \ PrivateKeyInfo, and EncryptedPrivateKeyInfo can\n     be carried in a P12 message.\
    \  The private key information,\n     OneAsymmetricKey and PrivateKeyInfo, are\
    \ carried in the P12 keyBag\n     BAG-TYPE.  EncryptedPrivateKeyInfo is carried\
    \ in the P12\n     pkcs8ShroudedKeyBag BAG-TYPE.  In current implementations,\
    \ the file\n     extensions .pfx and .p12 can be used interchangeably.\n   - Microsoft's\
    \ private-key proprietary transfer syntax.  The .pvk file\n     extension is used\
    \ for local storage.\n   The .pvk and .p12/.pfx formats are not interchangeable;\
    \ however,\n   conversion tools exist to convert from one format to another.\n\
    \   To extract the private-key information from the AsymmetricKeyPackage,\n  \
    \ the encapsulating layers need to be removed.  At a minimum, the outer\n   ContentInfo\
    \ [RFC5652] layer needs to be removed.  If the\n   AsymmetricKeyPackage is encapsulated\
    \ in a SignedData [RFC5652], then\n   the SignedData and EncapsulatedContentInfo\
    \ layers [RFC5652] also need\n   to be removed.  The same is true for EnvelopedData,\
    \ EncryptedData,\n   and AuthenticatedData all from [RFC5652] as well as AuthEnvelopedData\n\
    \   from [RFC5083].  Once all the outer layers are removed, there are as\n   many\
    \ sets of private-key information as there are OneAsymmetricKey\n   structures.\
    \  OneAsymmetricKey and PrivateKeyInfo are the same\n   structure; therefore,\
    \ either can be saved as a .p8 file or copied in\n   to the P12 KeyBag BAG-TYPE.\
    \  Removing encapsulating security layers\n   will invalidate any signature and\
    \ may expose the key to unauthorized\n   disclosure.\n   .p8 files are sometimes\
    \ PEM-encoded.  When .p8 files are PEM encoded\n   they use the .pem file extension.\
    \  PEM encoding is either the Base64\n   encoding, from Section 4 of [RFC4648],\
    \ of the DER-encoded\n   EncryptedPrivateKeyInfo sandwiched between:\n   -----BEGIN\
    \ ENCRYPTED PRIVATE KEY-----\n   -----END ENCRYPTED PRIVATE KEY-----\n   or the\
    \ Base64 encoding, see Section 4 of [RFC4648], of the DER-\n   encoded PrivateKeyInfo\
    \ sandwiched between:\n   -----BEGIN PRIVATE KEY-----\n   -----END PRIVATE KEY-----\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   Protection of the private-key information is\
    \ vital to public-key\n   cryptography.  Disclosure of the private-key material\
    \ to another\n   entity can lead to masquerades.  The encryption algorithm used\
    \ in the\n   encryption process must be as 'strong' as the key it is protecting.\n\
    \   The asymmetric key package contents are not protected.  This content\n   type\
    \ can be combined with a security protocol to protect the contents\n   of the\
    \ package.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   This document makes use of object identifiers to\
    \ identify a CMS\n   content type and the ASN.1 module found in Appendix A.  The\
    \ CMS\n   content type OID is registered in a DoD arc.  The ASN.1 module OID is\n\
    \   registered in an arc delegated by RSADSI to the SMIME Working Group.\n   No\
    \ further action by IANA is necessary for this document or any\n   anticipated\
    \ updates.\n   This specification also defines a new media subtype that IANA has\n\
    \   registered at http://www.iana.org/.\n"
- title: 7.1.  Registration of media subtype application/pkcs8
  contents:
  - "7.1.  Registration of media subtype application/pkcs8\n   Type name: application\n\
    \   Subtype name: pkcs8\n   Required parameters: None\n   Optional parameters:\
    \ None\n   Encoding considerations: binary\n   Security considerations: Carries\
    \ a cryptographic private key.\n                            See section 6.\n \
    \  Interoperability considerations:\n         The PKCS #8 object inside this media\
    \ type MUST be DER-encoded\n         PrivateKeyInfo.\n   Published specification:\
    \ RFC 5958\n   Applications which use this media type:\n     Any MIME-compliant\
    \ transport that processes asymmetric keys.\n   Additional information:\n    \
    \ Magic number(s): None\n     File extension(s): .p8\n     Macintosh File Type\
    \ Code(s):\n   Person & email address to contact for further information:\n  \
    \   Sean Turner <turners@ieca.com>\n   Restrictions on usage: none\n   Author:\n\
    \     Sean Turner <turners@ieca.com>\n   Intended usage: COMMON\n   Change controller:\n\
    \     The IESG\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2119]   Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n               Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC4648]   Josefsson, S., \"The Base16, Base32, and Base64 Data\n\
    \               Encodings\", RFC 4648, October 2006.\n   [RFC5652]   Housley,\
    \ R., \"Cryptographic Message Syntax (CMS)\", STD\n               70, RFC 5652,\
    \ September 2009.\n   [RFC5911]   Hoffman, P. and J. Schaad, \"New ASN.1 Modules\
    \ for\n               Cryptographic Message Syntax (CMS) and S/MIME\", RFC 5911,\n\
    \               June 2010.\n   [RFC5912]   Hoffman, P. and J. Schaad, \"New ASN.1\
    \ Modules for the\n               Public Key Infrastructure Using X.509 (PKIX)\"\
    , RFC 5912,\n               June 2010.\n   [X.680]     ITU-T Recommendation X.680\
    \ (2002) | ISO/IEC 8824-1:2002.\n               Information Technology - Abstract\
    \ Syntax Notation One.\n   [X.681]     ITU-T Recommendation X.681 (2002) | ISO/IEC\
    \ 8824-2:2002.\n               Information Technology - Abstract Syntax Notation\
    \ One:\n               Information Object Specification.\n   [X.682]     ITU-T\
    \ Recommendation X.682 (2002) | ISO/IEC 8824-3:2002.\n               Information\
    \ Technology - Abstract Syntax Notation One:\n               Constraint Specification.\n\
    \   [X.683]     ITU-T Recommendation X.683 (2002) | ISO/IEC 8824-4:2002.\n   \
    \            Information Technology - Abstract Syntax Notation One:\n        \
    \       Parameterization of ASN.1 Specifications.\n   [X.690]     ITU-T Recommendation\
    \ X.690 (2002) | ISO/IEC 8825-1:2002.\n               Information Technology -\
    \ ASN.1 encoding rules:\n               Specification of Basic Encoding Rules\
    \ (BER), Canonical\n               Encoding Rules (CER) and Distinguished Encoding\
    \ Rules\n               (DER).\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [P12]       RSA Laboratories, \"PKCS #12 v1.0:\
    \ Personal Information\n               Exchange Syntax\", June 1999.\n   [RFC2985]\
    \   Nystrom, M. and B. Kaliski, \"PKCS #9: Selected Object\n               Classes\
    \ and Attribute Types Version 2.0\", RFC 2985,\n               November 2000.\n\
    \   [RFC3447]   Jonsson, J. and B. Kaliski, \"Public-Key Cryptography\n      \
    \         Standards (PKCS) #1: RSA Cryptography Specifications\n             \
    \  Version 2.1\", RFC 3447, February 2003.\n   [RFC5083]   Housley, R., \"Cryptographic\
    \ Message Syntax (CMS)\n               Authenticated-Enveloped-Data Content Type\"\
    , RFC 5083,\n               November 2007.\n   [RFC5208]   Kaliski, B., \"Public-Key\
    \ Cryptography Standards (PKCS)\n               #8: Private-Key Information Syntax\
    \ Specification Version\n               1.2\", RFC 5208, May 2008.\n   [X.520]\
    \     ITU-T Recommendation X.520 (2005) | ISO/IEC 9594-6:2005,\n             \
    \  Information technology - Open Systems Interconnection -\n               The\
    \ Directory: Selected attribute types.\n   [RFC5915]   Turner, S. and D. Brown,\
    \ \"Elliptic Curve Private Key\n               Structure\", RFC 5915, June 2010.\n"
- title: Appendix A.  ASN.1 Module
  contents:
  - "Appendix A.  ASN.1 Module\n   This annex provides the normative ASN.1 definitions\
    \ for the\n   structures described in this specification using ASN.1 as defined\
    \ in\n   [X.680] through [X.683].\n   AsymmetricKeyPackageModuleV1\n     { iso(1)\
    \ member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n       smime(16) modules(0)\
    \ id-mod-asymmetricKeyPkgV1(50) }\n   DEFINITIONS IMPLICIT TAGS ::=\n   BEGIN\n\
    \   -- EXPORTS ALL\n   IMPORTS\n   -- FROM New SMIME ASN.1 [RFC5911]\n   Attribute{},\
    \ CONTENT-TYPE\n    FROM CryptographicMessageSyntax-2009\n      { iso(1) member-body(2)\
    \ us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n        smime(16) modules(0) id-mod-cms-2004-02(41)\
    \ }\n   -- From New PKIX ASN.1 [RFC5912]\n   ATTRIBUTE\n    FROM PKIX-CommonTypes-2009\n\
    \      { iso(1) identified-organization(3) dod(6) internet(1)\n        security(5)\
    \ mechanisms(5) pkix(7) id-mod(0)\n        id-mod-pkixCommon-02(57) }\n   -- From\
    \ New PKIX ASN.1 [RFC5912]\n   AlgorithmIdentifier{}, ALGORITHM, PUBLIC-KEY, CONTENT-ENCRYPTION\n\
    \     FROM AlgorithmInformation-2009\n       { iso(1) identified-organization(3)\
    \ dod(6) internet(1)\n         security(5) mechanisms(5) pkix(7) id-mod(0)\n \
    \        id-mod-algorithmInformation-02(58) }\n   ;\n   ContentSet CONTENT-TYPE\
    \ ::= {\n    ct-asymmetric-key-package,\n    ... -- Expect additional content\
    \ types --\n   }\n   ct-asymmetric-key-package CONTENT-TYPE ::=\n    { AsymmetricKeyPackage\
    \ IDENTIFIED BY id-ct-KP-aKeyPackage }\n   id-ct-KP-aKeyPackage OBJECT IDENTIFIER\
    \ ::=\n     { joint-iso-itu-t(2) country(16) us(840) organization(1)\n       \
    \  gov(101) dod(2) infosec(1) formats(2)\n         key-package-content-types(78)\
    \ 5\n     }\n   AsymmetricKeyPackage ::= SEQUENCE SIZE (1..MAX) OF OneAsymmetricKey\n\
    \   OneAsymmetricKey ::= SEQUENCE {\n     version                   Version,\n\
    \     privateKeyAlgorithm       PrivateKeyAlgorithmIdentifier,\n     privateKey\
    \                PrivateKey,\n     attributes            [0] Attributes OPTIONAL,\n\
    \     ...,\n     [[2: publicKey        [1] PublicKey OPTIONAL ]],\n     ...\n\
    \   }\n   PrivateKeyInfo ::= OneAsymmetricKey\n   -- PrivateKeyInfo is used by\
    \ [P12]. If any items tagged as version\n   -- 2 are used, the version must be\
    \ v2, else the version should be\n   -- v1. When v1, PrivateKeyInfo is the same\
    \ as it was in [RFC5208].\n   Version ::= INTEGER { v1(0), v2(1) } (v1, ..., v2)\n\
    \   PrivateKeyAlgorithmIdentifier ::= AlgorithmIdentifier\n                  \
    \                    { PUBLIC-KEY,\n                                        {\
    \ PrivateKeyAlgorithms } }\n   PrivateKey ::= OCTET STRING\n                 \
    \    -- Content varies based on type of key. The\n                     -- algorithm\
    \ identifier dictates the format of\n                     -- the key.\n   PublicKey\
    \ ::= BIT STRING\n                     -- Content varies based on type of key.\
    \ The\n                     -- algorithm identifier dictates the format of\n \
    \                    -- the key.\n   Attributes ::= SET OF Attribute { { OneAsymmetricKeyAttributes\
    \ } }\n   OneAsymmetricKeyAttributes ATTRIBUTE ::= {\n     ... -- For local profiles\n\
    \   }\n   -- An alternate representation that makes full use of ASN.1\n   -- constraints\
    \ follows.  Also note that PUBLIC-KEY needs to be\n   -- imported from the new\
    \ PKIX ASN.1 Algorithm Information module\n   -- and PrivateKeyAlgorithms needs\
    \ to be commented out.\n   -- OneAsymmetricKey ::= SEQUENCE {\n   --  version\
    \                  Version,\n   --  privateKeyAlgorithm      SEQUENCE {\n   --\
    \   algorithm                 PUBLIC-KEY.&id({PublicKeySet}),\n   --    parameters\
    \               PUBLIC-KEY.&Params({PublicKeySet}\n   --                     \
    \          {@privateKeyAlgorithm.algorithm})\n   --                          \
    \     OPTIONAL}\n   --  privateKey               OCTET STRING (CONTAINING\n  \
    \ --                             PUBLIC-KEY.&PrivateKey({PublicKeySet}\n   --\
    \                             {@privateKeyAlgorithm.algorithm})),\n   --  attributes\
    \           [0] Attributes OPTIONAL,\n   --  ...,\n   --  [[2: publicKey     \
    \  [1] BIT STRING (CONTAINING\n   --                             PUBLIC-KEY.&Params({PublicKeySet}\n\
    \   --                             {@privateKeyAlgorithm.algorithm})\n   --  \
    \                           OPTIONAL,\n   --  ...\n   --    }\n   EncryptedPrivateKeyInfo\
    \ ::= SEQUENCE {\n     encryptionAlgorithm  EncryptionAlgorithmIdentifier,\n \
    \    encryptedData        EncryptedData }\n   EncryptionAlgorithmIdentifier ::=\
    \ AlgorithmIdentifier\n                                       { CONTENT-ENCRYPTION,\n\
    \                                         { KeyEncryptionAlgorithms } }\n   EncryptedData\
    \ ::= OCTET STRING -- Encrypted PrivateKeyInfo\n   PrivateKeyAlgorithms ALGORITHM\
    \ ::= {\n     ... -- Extensible\n   }\n   KeyEncryptionAlgorithms ALGORITHM ::=\
    \ {\n     ... -- Extensible\n   }\n   END\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   Many thanks go out to the Burt Kaliski and Jim Randall at\
    \ RSA.\n   Without the prior version of the document, this one wouldn't exist.\n\
    \   I'd also like to thank Pasi Eronen, Roni Even, Alfred Hoenes, Russ\n   Housley,\
    \ Jim Schaad, and Carl Wallace.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Sean Turner\n   IECA, Inc.\n   3057 Nutley Street, Suite\
    \ 106\n   Fairfax, VA 22031\n   USA\n   EMail: turners@ieca.com\n"
