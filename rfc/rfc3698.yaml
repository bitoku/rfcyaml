- contents:
  - "             Lightweight Directory Access Protocol (LDAP):\n                       Additional
    Matching Rules\n"
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document provides a collection of matching rules for use with\n
    \  the Lightweight Directory Access Protocol (LDAP).  As these matching\n   rules
    are simple adaptations of matching rules specified for use with\n   the X.500
    Directory, most are already in wide use.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1.  Background and Intended Use. . . . . . . . . . . .
    . . . . . .  2\n   2.  Matching Rules . . . . . . . . . . . . . . . . . . . .
    . . . .  2\n       2.1.  booleanMatch . . . . . . . . . . . . . . . . . . . .
    . .  2\n       2.2.  caseExactMatch . . . . . . . . . . . . . . . . . . . . .
    \ 2\n       2.3.  caseExactOrderingMatch . . . . . . . . . . . . . . . . .  3\n
    \      2.4.  caseExactSubstringsMatch . . . . . . . . . . . . . . . .  3\n       2.5.
    \ caseIgnoreListSubstringsMatch. . . . . . . . . . . . . .  3\n       2.6.  directoryStringFirstComponentMatch
    . . . . . . . . . . .  4\n       2.7.  integerOrderingMatch . . . . . . . . .
    . . . . . . . . .  4\n       2.8.  keywordMatch . . . . . . . . . . . . . . .
    . . . . . . .  4\n       2.9.  numericStringOrderingMatch . . . . . . . . . .
    . . . . .  5\n       2.10. octetStringOrderingMatch . . . . . . . . . . . . .
    . . .  5\n       2.11. storedPrefixMatch. . . . . . . . . . . . . . . . . . .
    .  5\n       2.12. wordMatch. . . . . . . . . . . . . . . . . . . . . . . .  6\n
    \  3.  Security Considerations. . . . . . . . . . . . . . . . . . . .  6\n   4.
    \ IANA Considerations. . . . . . . . . . . . . . . . . . . . . .  6\n   5.  Acknowledgments.
    . . . . . . . . . . . . . . . . . . . . . . .  7\n   6.  References . . . . .
    . . . . . . . . . . . . . . . . . . . . .  7\n       6.1.  Normative References
    . . . . . . . . . . . . . . . . . .  7\n       6.2.  Informative References .
    . . . . . . . . . . . . . . . .  7\n   7.  Author's Address . . . . . . . . .
    . . . . . . . . . . . . . .  8\n   8.  Full Copyright Statement . . . . . . .
    . . . . . . . . . . . .  9\n"
  title: Table of Contents
- contents:
  - "1.  Background and Intended Use\n   This document adapts additional X.500 Directory
    [X.500] matching\n   rules [X.520] for use with the Lightweight Directory Access
    Protocol\n   (LDAP) [RFC3377].  Most of these rules are widely used today on the\n
    \  Internet, such as in support of the inetOrgPerson [RFC2798] and\n   Policy
    Core Information Model [RFC3703] LDAP schemas.  The rules are\n   applicable to
    many other applications.\n   This document supersedes the informational matching
    rules\n   descriptions provided in RFC 2798 that are now provided in this\n   document.
    \ Specifically, section 2 of this document replaces section\n   9.3.3 of RFC 2798.\n
    \  Schema definitions are provided using LDAP description formats\n   [RFC2252].
    \ Definitions provided here are formatted (line wrapped)\n   for readability.\n"
  title: 1.  Background and Intended Use
- contents:
  - '2.  Matching Rules

    '
  - contents:
    - "2.1.  booleanMatch\n   The booleanMatch rule compares for equality a asserted
      Boolean value\n   with an attribute value of BOOLEAN syntax.  The rule returns
      TRUE if\n   and only if the values are the same, i.e., both are TRUE or both
      are\n   FALSE.  (Source: X.520)\n       ( 2.5.13.13 NAME 'booleanMatch'\n         SYNTAX
      1.3.6.1.4.1.1466.115.121.1.7 )\n   The BOOLEAN (1.3.6.1.4.1.1466.115.121.1.7)
      syntax is described in\n   [RFC2252].\n"
    title: 2.1.  booleanMatch
  - contents:
    - "2.2.  caseExactMatch\n   The caseExactMatch rule compares for equality the
      asserted value with\n   an attribute value of DirectoryString syntax.  The rule
      is identical\n   to the caseIgnoreMatch [RFC2252] rule except that case is not\n
      \  ignored.  (Source: X.520)\n       ( 2.5.13.5 NAME 'caseExactMatch'\n         SYNTAX
      1.3.6.1.4.1.1466.115.121.1.15 )\n   The DirectoryString (1.3.6.1.4.1.1466.115.121.1.15)
      syntax is\n   described in [RFC2252].\n"
    title: 2.2.  caseExactMatch
  - contents:
    - "2.3.  caseExactOrderingMatch\n   The caseExactOrderingMatch rule compares the
      collation order of the\n   asserted string with an attribute value of DirectoryString
      syntax.\n   The rule is identical to the caseIgnoreOrderingMatch [RFC2252] rule\n
      \  except that letters are not folded.  (Source: X.520)\n       ( 2.5.13.6 NAME
      'caseExactOrderingMatch'\n         SYNTAX 1.3.6.1.4.1.1466.115.121.1.15 )\n
      \  The DirectoryString (1.3.6.1.4.1.1466.115.121.1.15) syntax is\n   described
      in [RFC2252].\n"
    title: 2.3.  caseExactOrderingMatch
  - contents:
    - "2.4.  caseExactSubstringsMatch\n   The caseExactSubstringsMatch rule determines
      whether the asserted\n   value(s) are substrings of an attribute value of DirectoryString\n
      \  syntax.  The rule is identical to the caseIgnoreSubstringsMatch\n   [RFC2252]
      rule except that case is not ignored.  (Source: X.520)\n       ( 2.5.13.7 NAME
      'caseExactSubstringsMatch'\n         SYNTAX 1.3.6.1.4.1.1466.115.121.1.58 )\n
      \  The SubstringsAssertion (1.3.6.1.4.1.1466.115.121.1.58) syntax is\n   described
      in [RFC2252].\n"
    title: 2.4.  caseExactSubstringsMatch
  - contents:
    - "2.5. caseIgnoreListSubstringsMatch\n   The caseIgnoreListSubstringMatch rule
      compares the asserted substring\n   with an attribute value which is a sequence
      of DirectoryStrings, but\n   where the case (upper or lower) is not significant
      for comparison\n   purposes.  The asserted value matches a stored value if and
      only if\n   the asserted value matches the string formed by concatenating the\n
      \  strings of the stored value.  This matching is done according to the\n   caseIgnoreSubstringsMatch
      [RFC2252] rule; however, none of the\n   initial, any, or final values of the
      asserted value are considered to\n   match a substring of the concatenated string
      which spans more than\n   one of the strings of the stored value.  (Source:
      X.520)\n       ( 2.5.13.12 NAME 'caseIgnoreListSubstringsMatch'\n         SYNTAX
      1.3.6.1.4.1.1466.115.121.1.58 )\n   The SubstringsAssertion (1.3.6.1.4.1.1466.115.121.1.58)
      syntax is\n   described in [RFC2252].\n"
    title: 2.5. caseIgnoreListSubstringsMatch
  - contents:
    - "2.6.  directoryStringFirstComponentMatch\n   The directoryStringFirstComponentMatch
      rule compares for equality the\n   asserted DirectoryString value with an attribute
      value of type\n   SEQUENCE whose first component is mandatory and of type\n
      \  DirectoryString.  The rule returns TRUE if and only if the attribute\n   value
      has a first component whose value matches the asserted\n   DirectoryString using
      the rules of caseIgnoreMatch [RFC2252].  A\n   value of the assertion syntax
      is derived from a value of the\n   attribute syntax by using the value of the
      first component of the\n   SEQUENCE.  (Source: X.520)\n       ( 2.5.13.31 NAME
      'directoryStringFirstComponentMatch'\n         SYNTAX 1.3.6.1.4.1.1466.115.121.1.15
      )\n   The DirectoryString (1.3.6.1.4.1.1466.115.121.1.15) syntax is\n   described
      in [RFC2252].\n"
    title: 2.6.  directoryStringFirstComponentMatch
  - contents:
    - "2.7.  integerOrderingMatch\n   The integerOrderingMatch rule compares the ordering
      of the asserted\n   integer with an attribute value of INTEGER syntax.  The
      rule returns\n   True if the attribute value is less than the asserted value.
      (Source:\n   X.520)\n       ( 2.5.13.15 NAME 'integerOrderingMatch'\n         SYNTAX
      1.3.6.1.4.1.1466.115.121.1.27 )\n   The INTEGER (1.3.6.1.4.1.1466.115.121.1.27)
      syntax is described in\n   [RFC2252].\n"
    title: 2.7.  integerOrderingMatch
  - contents:
    - "2.8.  keywordMatch\n   The keywordMatch rule compares the asserted string with
      keywords in\n   an attribute value of DirectoryString syntax.  The rule returns
      TRUE\n   if and only if the asserted value matches any keyword in the\n   attribute
      value.  The identification of keywords in an attribute\n   value and of the
      exactness of match are both implementation specific.\n   (Source: X.520)\n       (
      2.5.13.33 NAME 'keywordMatch'\n         SYNTAX 1.3.6.1.4.1.1466.115.121.1.15
      )\n   The DirectoryString (1.3.6.1.4.1.1466.115.121.1.15) syntax is\n   described
      in [RFC2252].\n"
    title: 2.8.  keywordMatch
  - contents:
    - "2.9.  numericStringOrderingMatch\n   The numericStringOrderingMatch rule compares
      the collation order of\n   the asserted string with an attribute value of NumericString
      syntax.\n   The rule is identical to the caseIgnoreOrderingMatch [RFC2252] rule\n
      \  except that all space characters are skipped during comparison (case\n   is
      irrelevant as characters are numeric).  (Source: X.520)\n       ( 2.5.13.9 NAME
      'numericStringOrderingMatch'\n         SYNTAX 1.3.6.1.4.1.1466.115.121.1.36
      )\n   The NumericString (1.3.6.1.4.1.1466.115.121.1.36) syntax is described\n
      \  in [RFC2252].\n"
    title: 2.9.  numericStringOrderingMatch
  - contents:
    - "2.10.  octetStringOrderingMatch\n   The octetStringOrderingMatch rule compares
      the collation order of the\n   asserted octet string with an attribute value
      of OCTET STRING syntax.\n   The rule compares octet strings from first octet
      to last octet, and\n   from the most significant bit to the least significant
      bit within the\n   octet.  The first occurrence of a different bit determines
      the\n   ordering of the strings.  A zero bit precedes a one bit.  If the\n   strings
      are identical but contain different numbers of octets, the\n   shorter string
      precedes the longer string.  (Source: X.520)\n       ( 2.5.13.18 NAME 'octetStringOrderingMatch'\n
      \        SYNTAX 1.3.6.1.4.1.1466.115.121.1.40 )\n   The OCTET STRING (1.3.6.1.4.1.1466.115.121.1.40)
      syntax is described\n   in [RFC2252].\n"
    title: 2.10.  octetStringOrderingMatch
  - contents:
    - "2.11.  storedPrefixMatch\n   The storedPrefixMatch rule determines whether
      an attribute value,\n   whose syntax is DirectoryString is a prefix (i.e., initial
      substring)\n   of the asserted value, without regard to the case (upper or lower)
      of\n   the strings.  The rule returns TRUE if and only if the attribute\n   value
      is an initial substring of the asserted value with\n   corresponding characters
      identical except possibly with regard to\n   case.  (Source: X.520)\n       (
      2.5.13.41 NAME 'storedPrefixMatch'\n         SYNTAX 1.3.6.1.4.1.1466.115.121.1.15
      )\n   Note: This rule can be used, for example, to compare values in the\n         Directory
      which are telephone area codes with a purported value\n         which is a telephone
      number.\n   The DirectoryString (1.3.6.1.4.1.1466.115.121.1.15) syntax is\n
      \  described in [RFC2252].\n"
    title: 2.11.  storedPrefixMatch
  - contents:
    - "2.12.  wordMatch\n   The wordMatch rule compares the asserted string with words
      in an\n   attribute value of DirectoryString syntax.  The rule returns TRUE
      if\n   and only if the asserted word matches any word in the attribute\n   value.
      \ Individual word matching is as for the caseIgnoreMatch\n   [RFC2252] matching
      rule.  The precise definition of a \"word\" is\n   implementation specific.
      \ (Source: X.520)\n       ( 2.5.13.32 NAME 'wordMatch'\n         SYNTAX 1.3.6.1.4.1.1466.115.121.1.15
      )\n   The DirectoryString (1.3.6.1.4.1.1466.115.121.1.15) syntax is\n   described
      in [RFC2252].\n"
    title: 2.12.  wordMatch
  title: 2.  Matching Rules
- contents:
  - "3.  Security Considerations\n   General LDAP security considerations [RFC3377]
    is applicable to the\n   use of this schema.  Additional considerations are noted
    above where\n   appropriate.\n"
  title: 3.  Security Considerations
- contents:
  - "4.  IANA Considerations\n   The Internet Assigned Numbers Authority (IANA) has
    updated the LDAP\n   descriptors registry [RFC3383] as indicated in the following\n
    \  template:\n       Subject: Request for LDAP Descriptor Registration Update\n
    \      Descriptor (short name): see comment\n       Object Identifier: see comments\n
    \      Person & email address to contact for further information:\n           Kurt
    Zeilenga <kurt@OpenLDAP.org>\n       Usage: see comments\n       Specification:
    RFC 3698\n       Author/Change Controller: IESG\n       Comments:\n       The
    following descriptors have been added:\n         NAME                               Type
    OID\n         ------------------------           ---- ---------\n         booleanMatch
    \                      M    2.5.13.13\n         caseExactMatch                     M
    \   2.5.13.5\n         caseExactOrderingMatch             M    2.5.13.6\n         caseExactSubstringsMatch
    \          M    2.5.13.7\n         caseIgnoreListSubstringsMatch      M    2.5.13.12\n
    \        directoryStringFirstComponentMatch M    2.5.13.31\n         integerOrderingMatch
    \              M    2.5.13.15\n         keywordMatch                       M    2.5.13.33\n
    \        numericStringOrderingMatch         M    2.5.13.9\n         octetStringOrderingMatch
    \          M    2.5.13.18\n         storedPrefixMatch                  M    2.5.13.41\n
    \        wordMatch                          M    2.5.13.32\n       where Type
    M is Matching Rule.\n   This document makes no new OID assignments.  It only associates
    LDAP\n   matching rule descriptions with existing X.500 matching rules.\n"
  title: 4.  IANA Considerations
- contents:
  - "5.  Acknowledgments\n   This document borrows from [X.520], an ITU-T Recommendation.\n"
  title: 5.  Acknowledgments
- contents:
  - '6.  References

    '
  - contents:
    - "6.1.  Normative References\n   [RFC2252]     Wahl, M., Coulbeck, A., Howes,
      T. and S. Kille,\n                 \"Lightweight Directory Access Protocol (v3):
      \ Attribute\n                 Syntax Definitions\", RFC 2252, December 1997.\n
      \  [RFC3377]     Hodges, J. and R. Morgan, \"Lightweight Directory Access\n
      \                Protocol (v3): Technical Specification\", RFC 3377,\n                 September
      2002.\n"
    title: 6.1.  Normative References
  - contents:
    - "6.2.  Informative References\n   [RFC2798]     Smith, M., \"The LDAP inetOrgPerson
      Object Class\", RFC\n                 2798, April 2000.\n   [RFC3383]     Zeilenga,
      K., \"IANA Considerations for LDAP\", BCP 64\n                 RFC 3383, September
      2002.\n   [RFC3703]     Strassner, J., Moore, B., Moats, R. and E. Ellesson,\n
      \                \"Policy Core LDAP Schema\", RFC 3703, February 2004.\n   [X.500]
      \      International Telecommunication Union -\n                 Telecommunication
      Standardization Sector, \"The\n                 Directory -- Overview of concepts,
      models and\n                 services,\" X.500(1993) (also ISO/IEC 9594-1:1994).\n
      \  [X.520]       International Telecommunication Union -\n                 Telecommunication
      Standardization Sector, \"The\n                 Directory: Selected Attribute
      Types\", X.520(1997).\n"
    title: 6.2.  Informative References
  title: 6.  References
- contents:
  - "7.  Author's Address\n   Kurt D. Zeilenga\n   OpenLDAP Foundation\n   EMail:
    Kurt@OpenLDAP.org\n"
  title: 7.  Author's Address
- contents:
  - "8.  Full Copyright Statement\n   Copyright (C) The Internet Society (2004).  This
    document is subject\n   to the rights, licenses and restrictions contained in
    BCP 78 and\n   except as set forth therein, the authors retain all their rights.\n
    \  This document and the information contained herein are provided on an\n   \"AS
    IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE\n   REPRESENTS OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY AND THE\n   INTERNET ENGINEERING TASK FORCE
    DISCLAIM ALL WARRANTIES, EXPRESS OR\n   IMPLIED, INCLUDING BUT NOT LIMITED TO
    ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT INFRINGE ANY
    RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: 8.  Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed\n
    \  to pertain to the implementation or use of the technology\n   described in
    this document or the extent to which any license\n   under such rights might or
    might not be available; nor does it\n   represent that it has made any independent
    effort to identify any\n   such rights.  Information on the procedures with respect
    to\n   rights in RFC documents can be found in BCP 78 and BCP 79.\n   Copies of
    IPR disclosures made to the IETF Secretariat and any\n   assurances of licenses
    to be made available, or the result of an\n   attempt made to obtain a general
    license or permission for the use\n   of such proprietary rights by implementers
    or users of this\n   specification can be obtained from the IETF on-line IPR repository\n
    \  at http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention\n   any copyrights, patents or patent applications, or other\n
    \  proprietary rights that may cover technology that may be required\n   to implement
    this standard.  Please address the information to the\n   IETF at ietf-ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
