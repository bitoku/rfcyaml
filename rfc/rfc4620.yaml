- title: __initial_text__
  contents:
  - '                     IPv6 Node Information Queries

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes a protocol for asking an IPv6 node to supply\n\
    \   certain network information, such as its hostname or fully-qualified\n   domain\
    \ name.  IPv6 implementation experience has shown that direct\n   queries for\
    \ a hostname are useful, and a direct query mechanism for\n   other information\
    \ has been found useful in serverless environments\n   and for debugging.\n"
- title: Table of Contents
  contents:
  - 'Table of Contents

    '
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document specifies a mechanism for discovering information\
    \ about\n   names and addresses.  The applicability of these mechanisms is\n \
    \  currently limited to diagnostic and debugging tools and network\n   management\
    \ (e.g., node discovery).  In the global internet, the\n   Domain Name System\
    \ (DNS) [1][2] is the authoritative source of such\n   information and this specification\
    \ is not intended to supplant or\n   supersede it.  In fact, in a well-supported\
    \ network, the names and\n   addresses dealt with by this mechanism will be the\
    \ same ones, with\n   the same relationships, as those listed in the DNS.\n  \
    \ This new Node Information protocol provides facilities that are not\n   found\
    \ in the DNS, for example, discovering relationships between\n   addresses without\
    \ reference to names.  The functions that do overlap\n   with the DNS may be useful\
    \ in serverless environments, for debugging,\n   or in regard to link-local and\
    \ unique-local addresses [3] that often\n   will not be listed in the DNS.\n"
- title: 2.  Applicability Statement
  contents:
  - "2.  Applicability Statement\n   IPv6 Node Information Queries include the capability\
    \ to provide\n   forward and reverse name lookups independent of the DNS by sending\n\
    \   packets directly to IPv6 nodes or groups of nodes.\n   The applicability of\
    \ these mechanisms is currently limited to\n   diagnostic and debugging tools\
    \ and network management (e.g., node\n   discovery).  These mechanisms can be\
    \ used to learn the addresses and\n   names for nodes on the other end of a point-to-point\
    \ link or nodes on\n   a shared-medium link such as an Ethernet.  This is very\
    \ useful when\n   debugging problems or when bringing up IPv6 service where there\
    \ is no\n   global routing or DNS name services available.  IPv6's large auto-\n\
    \   configured addresses make debugging network problems and bringing up\n   IPv6\
    \ service difficult without these mechanisms.  An example of an\n   IPv6 debugging\
    \ tool using IPv6 Node Information Queries is the ping6\n   program in the KAME\
    \ (http://www.kame.net), USAGI, and other IPv6\n   implementations.\n   The mechanisms\
    \ defined in this document may have wider applicability\n   in the future, but\
    \ any use beyond debugging and diagnostic tools is\n   left for further study\
    \ and is beyond the scope of this document.\n"
- title: 3.  Terminology
  contents:
  - "3.  Terminology\n   A \"Node Information Query\" (or \"NI Query\") message is\
    \ sent by a\n   \"Querier\" node to a \"Responder\" node in an ICMPv6 packet addressed\
    \ to\n   the \"Queried Address\".  The Query contains a \"Subject Address\" (which\n\
    \   may differ from the Queried Address and may be an IPv6 or IPv4\n   address)\
    \ or a \"Subject Name\".  The Responder sends a \"Node\n   Information Reply\"\
    \ to the Querier, containing information associated\n   with the node at the Queried\
    \ Address.  A node receiving an NI Query\n   will be termed a Responder even if\
    \ it does not send a reply.\n   The word \"name\" in this document refers to a\
    \ hostname with or without\n   the domain.  Where necessary, the cases of fully-qualified\
    \ and\n   single-label names will be distinguished.\n   The key words \"MUST\"\
    , \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD\
    \ NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document are to\
    \ be interpreted as described in [4].\n   Packet fields marked \"unused\" must\
    \ be zero on transmission and, aside\n   from inclusion in checksums or message\
    \ integrity checks, ignored on\n   reception.\n"
- title: 4.  Node Information Messages
  contents:
  - "4.  Node Information Messages\n   Two types of Node Information messages, the\
    \ NI Query and the NI\n   Reply, are carried in ICMPv6 [5] packets.  They have\
    \ the same format.\n    0                   1                   2            \
    \       3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |  \
    \   Type      |     Code      |           Checksum            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |             Qtype             |             Flags             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +  \
    \                           Nonce                             +\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   /  \
    \                           Data                              /\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                    Figure 1: Node Information Messages\n   Fields:\n   o  Type\n\
    \      *  139 - NI Query\n      *  140 - NI Reply\n   o  Code\n      *  For NI\
    \ Query\n         +  0 - Indicates that the Data field contains an IPv6 address\n\
    \            that is the Subject of this Query.\n         +  1 - Indicates that\
    \ the Data field contains a name that is\n            the Subject of this Query,\
    \ or is empty, as in the case of a\n            NOOP.\n         +  2 - Indicates\
    \ that the Data field contains an IPv4 address\n            that is the Subject\
    \ of this Query.\n      *  For NI Reply\n         +  0 - Indicates a successful\
    \ reply.  The Reply Data field may\n            or may not be empty.\n       \
    \  +  1 - Indicates that the Responder refuses to supply the\n            answer.\
    \  The Reply Data field will be empty.\n         +  2 - Indicates that the Qtype\
    \ of the Query is unknown to the\n            Responder.  The Reply Data field\
    \ will be empty.\n   o  Checksum - The ICMPv6 checksum.\n   o  Qtype - A 16-bit\
    \ field that designates the type of information\n      requested in a Query or\
    \ supplied in a Reply.  Its value in a Reply\n      is always copied from the\
    \ corresponding Query by the Responder.\n      Five values of Qtype are specified\
    \ in this document.\n   o  Flags - Qtype-specific flags that may be defined for\
    \ certain Query\n      types and their Replies.  Flags not defined for a given\
    \ Qtype must\n      be zero on transmission and ignored on reception, and must\
    \ not be\n      copied from a Query to a Reply unless so specified in the\n  \
    \    definition of the Qtype.\n   o  Nonce - An opaque 64-bit field to help avoid\
    \ spoofing and/or to\n      aid in matching Replies with Queries.  Its value in\
    \ a Query is\n      chosen by the Querier.  Its value in a Reply is always copied\
    \ from\n      the corresponding Request by the Responder.\n   o  Data - In a Query,\
    \ the Subject Address or Name.  In a Reply,\n      Qtype-specific data is present\
    \ only when the ICMPv6 Code field is\n      zero.  The length of the Data may\
    \ be inferred from the IPv6\n      header's Payload Length field [6], the length\
    \ of the fixed portion\n      of the NI packet, and the lengths of the ICMPv6\
    \ header and\n      intervening extension headers.\n   Note that the type of information\
    \ present in the Data field of a\n   Query is declared by the ICMP Code, whereas\
    \ the type of information,\n   if any, in the Data field of a Reply is determined\
    \ by the Qtype.\n   When the Subject of a Query is a name, the name MUST be in\
    \ DNS wire\n   format [2].  The name may be either a fully-qualified domain name,\n\
    \   including the terminating zero-length label, or a single DNS label\n   followed\
    \ by two zero-length labels.  Since a Query contains at most\n   one name, DNS\
    \ name compression MUST NOT be used.\n"
- title: 5.  Message Processing
  contents:
  - "5.  Message Processing\n   The Querier constructs an ICMP NI Query and sends\
    \ it to the address\n   from which information is wanted.  When the Subject of\
    \ the Query is\n   an IPv6 address, that address will normally be used as the\
    \ IPv6\n   destination address of the Query, but need not be if the Querier has\n\
    \   useful a priori information about the addresses of the target node.\n   An\
    \ NI Query may also be sent to a multicast address of link-local\n   scope [3].\n\
    \   When the Subject is a name, either fully-qualified or single-\n   component,\
    \ and the Querier does not have a unicast address for the\n   target node, the\
    \ query MUST be sent to a link-scope multicast address\n   formed in the following\
    \ way.  The Subject Name is converted to the\n   canonical form defined by DNS\
    \ Security [7], which is uncompressed\n   with all alphabetic characters in lowercase.\
    \  (If additional DNS\n   label types or character sets for hostnames are defined,\
    \ the rules\n   for canonicalizing those labels will be found in their defining\n\
    \   specification.)  Compute the MD5 hash [8] of the first label of the\n   Subject\
    \ Name--the portion beginning with the first one-octet length\n   field and up\
    \ to, but excluding, any subsequent length field.  Append\n   the first 24 bits\
    \ of that 128-bit hash to the prefix\n   FF02:0:0:0:0:2:FF00::/104.  The resulting\
    \ multicast address will be\n   termed the \"NI Group Address\" for the name.\
    \  A node will support an\n   \"NI Group Address\" for each unique single-label\
    \ name.\n   The Nonce MUST be a random or good pseudo-random value to foil\n \
    \  spoofed replies.  An implementation that allows multiple independent\n   processes\
    \ to send NI Queries MAY use the Nonce value to deliver\n   Replies to the correct\
    \ process.  Nonetheless, such processes MUST\n   check the received Nonce and\
    \ ignore extraneous Replies.\n   If true communication security is required, IP\
    \ Security (IPsec) [14]\n   should be used.  Providing the infrastructure to authenticate\
    \ NI\n   Queries and Replies may be quite difficult outside of a well-defined\n\
    \   community.\n   Upon receiving an NI Query, the Responder must check the Query's\
    \ IPv6\n   destination address and discard the Query without further processing\n\
    \   unless it is one of the Responder's unicast or anycast addresses, or\n   a\
    \ link-local scope multicast address that the Responder has joined.\n   Typically,\
    \ the latter will be an NI Group Address for a name\n   belonging to the Responder.\
    \  A node MAY be configured to discard NI\n   Queries to multicast addresses other\
    \ than its NI Group Address(es),\n   but if so, the default configuration SHOULD\
    \ be not to discard them.\n   A Responder must also silently discard a Query whose\
    \ Subject Address\n   or Name (in the Data field) does not belong to that node.\
    \  A single-\n   component Subject Name matches any fully-qualified name whose\
    \ first\n   label matches the Subject.  All name matching is done in a case-\n\
    \   independent manner consistent with DNS Security (DNSSEC) name\n   canonicalization\
    \ [7].\n   Next, if Qtype is unknown to the Responder, it must return an NI\n\
    \   Reply with ICMPv6 Code = 2 and no Reply Data.  The Responder should\n   rate-limit\
    \ such replies as it would ICMPv6 error replies [5].\n   Next, the Responder should\
    \ decide whether to refuse an answer, based\n   on local policy.  (See the \"\
    Security Considerations\" section for\n   recommended default behavior.)  If an\
    \ answer is refused, depending on\n   local policy the Responder can elect to\
    \ silently discard the query or\n   send an NI Reply with ICMPv6 Code = 1 and\
    \ no Reply Data.  Again, the\n   Responder should rate-limit such replies as it\
    \ would ICMPv6 error\n   replies [5].\n   Finally, if the Qtype is known and the\
    \ response is allowed by local\n   policy, the Responder MUST fill in the Flags\
    \ and Reply Data of the NI\n   Reply in accordance with the definition of the\
    \ Qtype and transmit the\n   NI Reply.  The source address of the NI Reply SHOULD\
    \ be selected\n   using the rules defined in [9].\n   If the Query was sent to\
    \ a multicast address, transmission of the\n   Reply MUST be delayed by a random\
    \ interval between zero and [Query\n   Response Interval], as defined by Multicast\
    \ Listener Discovery\n   Version 2 [10].\n"
- title: 6.  Defined Qtypes
  contents:
  - "6.  Defined Qtypes\n   The following Qtypes are defined.  Qtypes 0, 2, and 3\
    \ MUST be\n   supported by any implementation of this protocol.  Qtype 4 SHOULD\
    \ be\n   supported by any implementation of this protocol on an IPv4/IPv6\n  \
    \ dual-stack node and MAY be supported on an IPv6-only node.\n               \
    \      +-------------+----------------+\n                     | Qtype Value |\
    \   Qtype Name   |\n                     +-------------+----------------+\n  \
    \                   |      0      |      NOOP      |\n                     | \
    \     1      |     unused     |\n                     |      2      |    Node\
    \ Name   |\n                     |      3      | Node Addresses |\n          \
    \           |      4      | IPv4 Addresses |\n                     +-------------+----------------+\n"
- title: 6.1.  NOOP
  contents:
  - "6.1.  NOOP\n   This NI type has no defined flags and never has a Data field.\
    \  A\n   Reply to an NI NOOP Query tells the Querier that a node with the\n  \
    \ Queried Address is up and reachable and implements the Node\n   Information\
    \ protocol.  On transmission, the ICMPv6 Code in a NOOP\n   Query must be set\
    \ to 1 and the Code in a NOOP Reply must be 0.  On\n   reception of a NOOP Query\
    \ or Reply, the Code must be ignored.\n"
- title: 6.2.  Node Name
  contents:
  - "6.2.  Node Name\n   The NI Node Name Query requests the fully-qualified or single-\n\
    \   component name corresponding to the Subject Address or Name.  The\n   Reply\
    \ Data has the following format.\n    0                   1                  \
    \ 2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                              TTL                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Node Names ...                       |\n   +  \
    \                                                             +\n   /        \
    \                                                       /\n   +              \
    \                                                 +\n   |                    \
    \                                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                 Figure 2: Node Information Reply Message\n   o  TTL (Time to\
    \ Live) - MUST be zero.  Any non-zero value received\n      MUST be treated as\
    \ zero.  This field is no longer used but is\n      present to preserve backward\
    \ compatibility with older\n      implementations.\n   o  Node Names - The fully-qualified\
    \ or single-component name or names\n      of the Responder that correspond(s)\
    \ to the Subject Address or\n      Name, in DNS wire format, Section 3.1 of [2].\
    \  Each name MUST be\n      fully-qualified if the responder knows the domain\
    \ suffix;\n      otherwise, each name MUST be a single DNS label followed by two\n\
    \      zero-length labels.  When multiple node names are returned and\n      more\
    \ than one of them is fully-qualified, DNS name compression,\n      Section 4.1.4\
    \ of [2], SHOULD be used, and the offsets are counted\n      from the first octet\
    \ of the Data field.  An offset of 4, for\n      example, will point to the beginning\
    \ of the first name.\n   The Responder must fill in the TTL field of the Reply\
    \ with zero.\n   Only one TTL is included in the Reply.\n   If the Responder does\
    \ not know its name at all, it MUST send a Reply\n   with TTL=0 and no Node Names\
    \ (or a Reply with Code=1 indicating\n   refusal to answer).  The Querier will\
    \ be able to determine from the\n   packet length that the Data field contains\
    \ no names.\n"
- title: 6.3.  Node Addresses
  contents:
  - "6.3.  Node Addresses\n   The NI Node Addresses Query requests some set of the\
    \ Responder's IPv6\n   unicast addresses.  The Reply Data is a sequence of 128-bit\
    \ IPv6\n   addresses, with each address preceded by a separate 32-bit TTL value,\n\
    \   with Preferred addresses listed before Deprecated addresses [11];\n   otherwise,\
    \ they are in no special order.  Five flag bits are defined\n   in the Query and\
    \ six in the Reply.\n    0                   1                   2           \
    \        3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n  \
    \ |            Qtype=3            |       unused      |G|S|L|C|A|T|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                 Figure 3: Node Information Address Query\n   o  G - If set to\
    \ 1, Global-scope addresses [12] are requested.\n   o  S - If set to 1, Site-local\
    \ addresses [12] are requested.\n      However, Site-local addresses are now deprecated\
    \ [15] and this\n      flag is for backward compatibility.\n   o  L - If set to\
    \ 1, Link-local addresses [12] are requested.\n   o  C - If set to 1, IPv4-compatible\
    \ (now deprecated) and IPv4-mapped\n      addresses [3] are requested.  Responses\
    \ SHOULD include IPv4\n      addresses in IPv4-mapped form.\n   o  A - If set\
    \ to 1, all the Responder's unicast addresses (of the\n      specified scope(s))\
    \ are requested.  If 0, only those addresses are\n      requested that belong\
    \ to the interface (or any one interface) that\n      has the Subject Address\
    \ or that are associated with the Subject\n      Name.\n   o  T - Defined in a\
    \ Reply only, indicates that the set of addresses\n      is incomplete for space\
    \ reasons.\n   Flags G, S, L, C, and A are copied from a Query to the corresponding\n\
    \   Reply.\n   The TTL associated with each address MUST be zero.\n"
- title: 6.4.  IPv4 Addresses
  contents:
  - "6.4.  IPv4 Addresses\n   The NI IPv4 Addresses Query requests some set of the\
    \ Responder's IPv4\n   unicast addresses.  The Reply Data is a sequence of 32-bit\
    \ IPv4\n   addresses, each address preceded by a 32-bit TTL value.  One flag bit\n\
    \   is defined in the Query and two in the Reply.\n    0                   1 \
    \                  2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |            Qtype=4            |       unused              |A|T|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \               Figure 4: Node Information IPv4 Address Query\n   o  A - If set\
    \ to 1, all the Responder's unicast addresses are\n      requested.  If 0, only\
    \ those addresses are requested that belong\n      to the interface (or any one\
    \ interface) that has the Subject\n      Address.\n   o  T - Defined in a Reply\
    \ only, indicates that the set of addresses\n      is incomplete for space reasons.\n\
    \   Flag A is copied from a Query to the corresponding Reply.\n   The TTL associated\
    \ with each address MUST be zero.\n"
- title: 6.4.1.  Discussion
  contents:
  - "6.4.1.  Discussion\n   It is possible that a node may treat IPv4 interfaces and\
    \ IPv6\n   interfaces as distinct, even though they are associated with the same\n\
    \   hardware.  When such a node is responding to an NI Query having a\n   Subject\
    \ Address of one type requesting the other type, and the Query\n   has the A flag\
    \ set to 0, it SHOULD consider IP interfaces, other than\n   tunnels, associated\
    \ with the same hardware as being the same\n   interface.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   ICMPv6 type values 139 and 140 were previously assigned\
    \ by IANA for\n   this protocol.  This document defines three values of the ICMPv6\
    \ Code\n   field for each of these ICMPv6 Type values.  Additional Code values\n\
    \   may be defined using the \"Specification Required\" criteria from [16].\n\
    \   IANA has established and will maintain a registry for the Code fields\n  \
    \ associated with the Node Information Query ICMPv6 Types as a part of\n   its\
    \ ICMPv6 Registry updated in [13].\n   This document defines five values of Qtype,\
    \ numbers 0 through 4.\n   Following the policies outlined in [16], new values,\
    \ and their\n   associated Flags and Reply Data, are to be defined by IETF Consensus.\n\
    \   The IANA has assigned the IPv6 multicast prefix\n   FF02:0:0:0:0:2:FF00::/104\
    \ for use in Node Information Queries as\n   defined in Section 5.  It should\
    \ be noted that this assignment does\n   conform with the requirements defined\
    \ in [17].\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   This protocol shares the security issues of ICMPv6\
    \ that are\n   documented in the \"Security Considerations\" section of [5].\n\
    \   This protocol has the potential of revealing information useful to a\n   would-be\
    \ attacker.  An implementation of this protocol MUST have a\n   default configuration\
    \ that refuses to answer queries from global-\n   scope [3] addresses.\n   Implementations\
    \ SHOULD apply rate-limiting to NI responses to avoid\n   being used in a denial-of-service\
    \ attack.\n   The anti-spoofing Nonce does not give any protection from spoofers\n\
    \   who can eavesdrop the Query or the Reply.\n   The information learned via\
    \ this protocol SHOULD NOT be trusted for\n   making security-relevant decisions\
    \ unless some other mechanisms\n   beyond the scope of this document are used\
    \ to authenticate this\n   information.\n   An implementation of this protocol\
    \ SHOULD provide the ability to\n   control the dissemination of information related\
    \ to IPv6 Privacy\n   Addresses [18].  The default action of this policy SHOULD\
    \ NOT provide\n   a response to a Query that contains a node's Privacy Addresses.\n\
    \   A node MUST NOT include Privacy Addresses in any Node Addresses\n   response\
    \ that includes a public address, or for which the source\n   address of the response,\
    \ the destination address of the request, or\n   the Subject Address of the request\
    \ is a public address.  Similarly, a\n   node MUST NOT include any address other\
    \ than the (single) Privacy\n   Address in any Node Addresses response that includes\
    \ the Privacy\n   Address, or for which the source address of the response, the\n\
    \   destination address of the request, or the Subject Address of the\n   request\
    \ is the Privacy Address.\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   Alain Durand contributed to this specification, and\
    \ valuable feedback\n   and implementation experience were provided by Jun-Ichiro\
    \ Hagino and\n   Tatuya Jinmei.  Other useful comments were received from Robert\
    \ Elz,\n   Keith Moore, Elwyn Davies, Pekka Savola, and Dave Thaler.  Bob Hinden\n\
    \   and Brian Haberman have acted as document editors during the IETF\n   advancement\
    \ process.\n   This document is not the first proposal of a direct query mechanism\n\
    \   for address-to-name translation.  The idea had been discussed briefly\n  \
    \ in the IPng working group, and RFC 1788 [19] describes such a\n   mechanism\
    \ for IPv4.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [1]   Mockapetris, P., \"Domain names - concepts\
    \ and facilities\", STD\n         13, RFC 1034, November 1987.\n   [2]   Mockapetris,\
    \ P., \"Domain names - implementation and\n         specification\", STD 13, RFC\
    \ 1035, November 1987.\n   [3]   Hinden, R. and S. Deering, \"IP Version 6 Addressing\n\
    \         Architecture\", RFC 4291, February 2006.\n   [4]   Bradner, S., \"Key\
    \ words for use in RFCs to Indicate Requirement\n         Levels\", BCP 14, RFC\
    \ 2119, March 1997.\n   [5]   Conta, A. and S. Deering, \"Internet Control Message\
    \ Protocol\n         (ICMPv6) for the Internet Protocol Version 6 (IPv6)\n   \
    \      Specification\", RFC 2463, December 1998.\n   [6]   Deering, S. and R.\
    \ Hinden, \"Internet Protocol, Version 6 (IPv6)\n         Specification\", RFC\
    \ 2460, December 1998.\n   [7]   Arends, R., Austein, R., Larson, M., Massey,\
    \ D., and S. Rose,\n         \"Resource Records for the DNS Security Extensions\"\
    , RFC 4034,\n         March 2005.\n   [8]   Rivest, R., \"The MD5 Message-Digest\
    \ Algorithm\", RFC 1321, April\n         1992.\n   [9]   Draves, R., \"Default\
    \ Address Selection for Internet Protocol\n         version 6 (IPv6)\", RFC 3484,\
    \ February 2003.\n   [10]  Vida, R. and L. Costa, \"Multicast Listener Discovery\
    \ Version 2\n         (MLDv2) for IPv6\", RFC 3810, June 2004.\n   [11]  Narten,\
    \ T., Nordmark, E., and W. Simpson, \"Neighbor Discovery\n         for IP Version\
    \ 6 (IPv6)\", RFC 2461, December 1998.\n   [12]  Hinden, R., Deering, S., and\
    \ E. Nordmark, \"IPv6 Global Unicast\n         Address Format\", RFC 3587, August\
    \ 2003.\n   [13]  Conta, A., Deering, S., and M. Gupta, \"Internet Control Message\n\
    \         Protocol (ICMPv6) for the Internet Protocol Version 6 (IPv6)\n     \
    \    Specification\", RFC 4443, March 2006.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [14]  Kent, S. and K. Seo, \"Security Architecture\
    \ for the Internet\n         Protocol\", RFC 4301, December 2005.\n   [15]  Huitema,\
    \ C. and B. Carpenter, \"Deprecating Site Local\n         Addresses\", RFC 3879,\
    \ September 2004.\n   [16]  Narten, T. and H. Alvestrand, \"Guidelines for Writing\
    \ an IANA\n         Considerations Section in RFCs\", BCP 26, RFC 2434, October\n\
    \         1998.\n   [17]  Haberman, B., \"Allocation Guidelines for IPv6 Multicast\n\
    \         Addresses\", RFC 3307, August 2002.\n   [18]  Narten, T. and R. Draves,\
    \ \"Privacy Extensions for Stateless\n         Address Autoconfiguration in IPv6\"\
    , RFC 3041, January 2001.\n   [19]  Simpson, W., \"ICMP Domain Name Messages\"\
    , RFC 1788, April 1995.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Matt Crawford\n   Fermilab\n   PO Box 500\n   Batavia,\
    \ IL  60510\n   US\n   Phone: +1 630 840 3461\n   EMail: crawdad@fnal.gov\n  \
    \ Brian Haberman (editor)\n   Johns Hopkins University Applied Physics Lab\n \
    \  11100 Johns Hopkins Road\n   Laurel, MD  20723-6099\n   US\n   Phone: +1 443\
    \ 778 1319\n   EMail: brian@innovationslab.net\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
