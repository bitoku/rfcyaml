- title: __initial_text__
  contents:
  - '           A Telephony Gateway REgistration Protocol (TGREP)

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes the Telephony Gateway Registration Protocol\n\
    \   (TGREP) for registration of telephony prefixes supported by telephony\n  \
    \ gateways and soft switches.  The registration mechanism can also be\n   used\
    \ to export resource information.  The prefix and resource\n   information can\
    \ then be passed on to a Telephony Routing over IP\n   (TRIP) Location Server,\
    \ which in turn can propagate that routing\n   information within and between\
    \ Internet Telephony Administrative\n   Domains (ITADs).  TGREP shares a lot of\
    \ similarities with the TRIP\n   protocol.  It has similar procedures and finite\
    \ state machine for\n   session establishment.  It also shares the same format\
    \ for messages\n   and a subset of attributes with TRIP.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Terminology and Definitions .....................................5\n  \
    \ 3. TGREP: Overview of Operation ....................................6\n   4.\
    \ TGREP Attributes ................................................7\n      4.1.\
    \ TotalCircuitCapacity Attribute .............................8\n      4.2. AvailableCircuits\
    \ Attribute ................................9\n      4.3. CallSuccess Attribute\
    \ .....................................10\n      4.4. Prefix Attributes .........................................12\n\
    \      4.5. TrunkGroup Attribute ......................................13\n  \
    \    4.6. Carrier Attribute .........................................15\n   5.\
    \ TrunkGroup and Carrier Address Families ........................16\n      5.1.\
    \ Address Family Syntax .....................................17\n   6. Gateway\
    \ Operation ..............................................18\n      6.1. Session\
    \ Establishment .....................................18\n      6.2. UPDATE Messages\
    \ ...........................................19\n      6.3. KEEPALIVE Messages\
    \ ........................................19\n      6.4. Error Handling and NOTIFICATION\
    \ Messages ..................19\n      6.5. TGREP Finite State Machine ................................19\n\
    \      6.6. Call Routing Databases ....................................19\n  \
    \    6.7. Multiple Address Families .................................20\n    \
    \  6.8. Route Selection and Aggregation ...........................20\n   7. LS/Proxy\
    \ Behavior ..............................................20\n      7.1. Route\
    \ Consolidation .......................................22\n      7.2. Aggregation\
    \ ...............................................23\n      7.3. Consolidation\
    \ versus Aggregation ..........................23\n   8. Security Considerations\
    \ ........................................23\n   9. IANA Considerations ............................................24\n\
    \      9.1. Attribute Codes ...........................................24\n  \
    \    9.2. Address Family Codes ......................................24\n   10.\
    \ Acknowledgments ...............................................25\n   11. References\
    \ ....................................................25\n      11.1. Normative\
    \ References .....................................25\n      11.2. Informative\
    \ References ...................................26\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   It is assumed that the reader of this document is familiar\
    \ with TRIP\n   [2, 12].  In typical Voice over IP (VoIP) networks, Internet\n\
    \   Telephony Administrative Domains (ITADs) will deploy numerous\n   gateways\
    \ for the purposes of geographical diversity, capacity, and\n   redundancy.  When\
    \ a call arrives at the domain, it must be routed to\n   one of those gateways.\
    \  Frequently, an ITAD will break its network\n   into geographic Points of Presence\
    \ (POPs), with each POP containing\n   some number of gateways, and a proxy server\
    \ element that fronts those\n   gateways.  The proxy element is a SIP proxy [11]\
    \ or H.323 gatekeeper.\n   The proxy server is responsible for managing the access\
    \ to the POP,\n   and also for determining which of the gateways will receive\
    \ any given\n   call that arrives at the POP.  In conjunction with the proxy server\n\
    \   that routes the call signaling, there are two components, the\n   \"Ingress\
    \ LS\" (aka \"TGREP receiver\") and the \"Egress LS\".  The TGREP\n   receiver\
    \ component maintains TGREP peering relationship with one or\n   more gateways.\
    \  The routing information received from the gateways is\n   further injected\
    \ into the Egress LS, which in turn disseminates into\n   the rest of the network\
    \ on TRIP.  For convenience, gateway and GW are\n   used interchangeably.\n  \
    \ This configuration is depicted graphically in Figure 1.\n                  \
    \   Signaling                 TGREP\n                   ------------->       \
    \   <----------------\n                                                 +---------+\n\
    \                                                 |         |\n              \
    \                                   |   GW    |\n                            \
    \                  >  +---------+\n                                          \
    \  //\n                                          //\n    SIP                 \
    \                //       +---------+\n   <---->                             //\
    \         |         |\n      +-------------------------+   //           |   GW\
    \    |\n      |                         | //             +---------+\n      |\
    \    +-------------+      |/\n      |    |             |      |\n      |    |\
    \  Routing    |      |                +---------+   TO PSTN\n      |    |   Proxy\
    \     |      |                |         |\n   --->    |             |      |----------->\
    \    |   GW    | ----->\n      |+---+-----+ +-----+----+ |                +---------+\n\
    \      ||         | |          | |\n      ||        <+-+          | |--\n    \
    \  ||Egress LS| |Ingress LS| |  ---           +---------+\n      ||         |\
    \ |          | |     --         |         |\n      |+---------+ +----------+ |\
    \       --       |   GW    |\n      |                         |         --   \
    \  +---------+\n      |                         |           -->\n      +-------------------------+\n\
    \    TRIP                                         +---------+\n   <---->     \
    \                                   |         |\n                            \
    \                     |   GW    |\n                                          \
    \       +---------+\n                  Figure 1: Gateway and LS Configuration\n\
    \   The decision about which gateway to use depends on many factors,\n   including\
    \ their availability, remaining call capacity, and call\n   success statistics\
    \ to a particular Public Switched Telephone Network\n   (PSTN) destination (see\
    \ [14]).  For the proxy to do this adequately,\n   it needs to have access to\
    \ this information in real-time, as it\n   changes.  This means there must be\
    \ some kind of communications\n   between the proxy and the gateways to convey\
    \ this information.\n   The TRIP protocol [2] is defined for carrying telephony\
    \ routing\n   information between providers, for the purposes of getting a call\n\
    \   routed to the right provider for termination to the PSTN.  However,\n   there\
    \ is no mechanism defined in TRIP that defines how routes get\n   injected into\
    \ the TRIP protocol from within the network.  Nor does it\n   define mechanisms\
    \ that would allow the provider to select the\n   specific gateway for terminating\
    \ a call when it arrives.  Those gaps\n   are filled by TGREP.\n   TGREP allows\
    \ PSTN gateways or soft switches to inform a signaling\n   server, such as a SIP\
    \ proxy server or H.323 gatekeeper, of routes it\n   has to the PSTN.  These advertisements\
    \ include fairly dynamic\n   information, such as the remaining capacity in a\
    \ particular trunk,\n   which is essential for selecting the right gateway.\n\
    \   TGREP is identical in syntax and overall operation to TRIP.  However,\n  \
    \ it differs in the route processing rules followed by the TGREP\n   receiver,\
    \ allowing for a route processing function called\n   \"consolidation\".  Consolidation\
    \ combines multiple routes for the same\n   route destination with different attributes\
    \ to a single route to\n   prevent loss of routing information.  TGREP also defines\
    \ a set of new\n   attributes, usable by TGREP or TRIP.  Finally, TGREP only utilizes\
    \ a\n   subset of overall TRIP capabilities.  Specifically, certain\n   attributes\
    \ are not utilized (as described below), and the TGREP\n   entities (the sender\
    \ and receiver) operate in an asymmetric\n   relationship, whereas TRIP allows\
    \ symmetric and asymmetric.\n   As a general rule, because of a lot of similarities\
    \ between TRIP and\n   TGREP, frequent reference will be made to the terminologies\
    \ and\n   formats defined in TRIP [2].  It is suggested that the reader be\n \
    \  familiar with the concepts of TRIP like attributes, flags, route\n   types,\
    \ address families, etc.\n"
- title: 2.  Terminology and Definitions
  contents:
  - "2.  Terminology and Definitions\n   The key words \"MUST\", \"MUST NOT\", \"\
    REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [1].\n   Some other useful definitions are:\n   Circuit: A circuit\
    \ is a discrete (specific) path between two or more\n   points along which signals\
    \ can be carried.  In this context, a\n   circuit is a physical path, consisting\
    \ of one or more wires and\n   possibly intermediate switching points.\n   Trunk:\
    \ In a network, a trunk is a communication path connecting two\n   switching systems\
    \ used in the establishment of an end-to-end\n   connection.  In selected applications,\
    \ it may have both its\n   terminations in the same switching system.\n   TrunkGroup:\
    \ A trunkgroup is a set of trunks, traffic engineered as a\n   unit, for the establishment\
    \ of connections within or between\n   switching systems in which all of the paths\
    \ are interchangeable\n   except where subgrouped.\n   Carrier: A carrier is a\
    \ company offering telephone and data\n   communications between points (end-users\
    \ and/or exchanges).\n"
- title: '3.  TGREP: Overview of Operation'
  contents:
  - "3.  TGREP: Overview of Operation\n   TGREP is a route registration protocol for\
    \ telephony destinations on\n   a gateway.  These telephony destinations could\
    \ be prefixes,\n   trunkgroups, or carriers.  The TGREP sender resides on the\
    \ GW and\n   gathers all the information from the GW to relay to the TRIP Location\n\
    \   Server.  A TGREP Receiver is defined, which receives this information\n  \
    \ and optionally performs operations like consolidation and aggregation\n   (see\
    \ Section 7.3), and hands over the reachability information to a\n   TRIP Location\
    \ Server.  The routing proxy also uses the information to\n   select the gateway\
    \ for incoming calls.\n   The TGREP sender establishes a session to the TGREP\
    \ receiver using a\n   procedure similar to session establishment in TRIP.  After\
    \ the\n   session establishment, the TGREP sender sends the reachability\n   information\
    \ in the UPDATE messages.  The UPDATE messages have the\n   same format as in\
    \ TRIP.  However, certain TRIP attributes are not\n   relevant in TGREP; a TGREP\
    \ receiver MAY ignore them if they are\n   present in a TGREP message.  The following\
    \ TRIP attributes do not\n   apply to TGREP:\n      1. AdvertisementPath\n   \
    \   2. RoutedPath\n      3. AtomicAggregate\n      4. LocalPreference\n      5.\
    \ MultiExitDisc\n      6. ITADTopology\n      7. ConvertedRoute\n   In addition,\
    \ TGREP defines the following new attributes in this\n   document that can be\
    \ carried in a TGREP UPDATE message.\n      - TotalCircuitCapacity: This attribute\
    \ identifies the total number\n        of PSTN circuits that are available on\
    \ a route to complete\n        calls.\n      - AvailableCircuits: This attribute\
    \ identifies the number of PSTN\n        circuits that are currently available\
    \ on a route to complete\n        calls.\n      - CallSuccess: This attribute\
    \ represents information about the\n        number of normally terminated calls\
    \ out of a total number of\n        attempted calls.\n      - Prefix (E164): This\
    \ attribute is used to represent the list of\n        E164 prefixes to which the\
    \ respective route can complete calls.\n      - Prefix (Decimal Routing Number):\
    \ This attribute is used to\n        represent the list of Decimal prefixes to\
    \ which the respective\n        route can complete calls.\n      - Prefix (Hexadecimal\
    \ Routing Number): This attribute is used to\n        represent the list of Hexadecimal\
    \ prefixes to which the\n        respective route can complete calls.\n      -\
    \ TrunkGroup: This attribute enables providers to route calls to\n        destinations\
    \ through preferred trunks.\n      - Carrier: This attribute enables providers\
    \ to route calls to\n        destinations through preferred carriers.\n   In the\
    \ rest of the document, we specify attributes and address\n   families used in\
    \ TGREP.  The new attributes and address families\n   introduced are also applicable\
    \ for general usage in TRIP except where\n   noted (AvailableCircuits attribute,\
    \ for example).\n"
- title: 4.  TGREP Attributes
  contents:
  - "4.  TGREP Attributes\n   Due to its usage within a service provider network,\
    \ TGREP makes use\n   of a subset of the attributes defined for TRIP, in addition\
    \ to\n   defining several new ones.  In particular, the following attributes\n\
    \   from TRIP are applicable to TGREP:\n      1. WithdrawnRoutes\n      2. ReachableRoutes\n\
    \      3. NexthopServer\n      4. Prefix\n      5. Communities\n   TGREP also\
    \ defines several new attributes, described in this section.\n   These are TotalCircuitCapacity,\
    \ AvailableCircuits, CallSuccess,\n   TrunkGroup, and Carrier.  As mentioned above,\
    \ these new attributes\n   are usable by TRIP unless noted otherwise.\n   A TGREP\
    \ UPDATE supports the following attributes:\n      1. TotalCircuitCapacity\n \
    \     2. AvailableCircuits\n      3. CallSuccess\n      4. Prefix (E.164, Pentadecimal\
    \ routing number, Decimal routing\n         number)\n      5. TrunkGroup\n   \
    \   6. Carrier\n"
- title: 4.1.  TotalCircuitCapacity Attribute
  contents:
  - "4.1.  TotalCircuitCapacity Attribute\n   Mandatory: False.\n   Required Flags:\
    \ Not well-known.\n   Potential Flags: None.\n   TRIP Type Code: 13.\n   The TotalCircuitCapacity\
    \ attribute identifies the total number of\n   PSTN circuits that are available\
    \ on a route to complete calls.  It is\n   used in conjunction with the AvailableCircuits\
    \ attribute in gateway\n   selection by the LS.  The total number of calls sent\
    \ to the specified\n   route on the gateway cannot exceed this total circuit capacity\
    \ under\n   steady state conditions.\n   The TotalCircuitCapacity attribute is\
    \ used to reflect the\n   administratively provisioned capacity as opposed to\
    \ the availability\n   at a given point in time as provided by the AvailableCircuits\n\
    \   attribute.  Because of its relatively static nature, this attribute\n   MAY\
    \ be propagated beyond the LS that receives it.\n   TotalCircuitCapacity represents\
    \ the total number of possible calls at\n   any instant.  This is not expected\
    \ to change frequently.  This can\n   change, for instance, when certain telephony\
    \ trunks on the gateway\n   are taken out of service for maintenance purposes.\n"
- title: 4.1.1.  TotalCircuitCapacity Syntax
  contents:
  - "4.1.1.  TotalCircuitCapacity Syntax\n   The TotalCircuitCapacity attribute is\
    \ a 4-octet unsigned integer.  It\n   represents the total number of circuits\
    \ available for terminating\n   calls through this advertised route.  This attribute\
    \ represents a\n   potentially achievable upper bound on the number of calls that\
    \ can be\n   terminated on this route in total.\n"
- title: 4.1.2.  Route Origination and TotalCircuitCapacity
  contents:
  - "4.1.2.  Route Origination and TotalCircuitCapacity\n   Routes MAY be originated\
    \ containing the TotalCircuitCapacity\n   attribute.\n"
- title: 4.1.3.  Route Selection and TotalCircuitCapacity
  contents:
  - "4.1.3.  Route Selection and TotalCircuitCapacity\n   The TotalCircuitCapacity\
    \ attribute MAY be used for route selection.\n   Since one of its primary applications\
    \ is load balancing, an LS will\n   wish to choose a potentially different route\
    \ (amongst a set of routes\n   for the same destination), on a call-by-call basis.\
    \  This can be\n   modeled as re-running the decision process on the arrival of\
    \ each\n   call.  The aggregation and dissemination rules for routes with this\n\
    \   attribute ensure that re-running this selection process never results\n  \
    \ in propagation of a new route to other peers.\n"
- title: 4.1.4.  Aggregation and TotalCircuitCapacity
  contents:
  - "4.1.4.  Aggregation and TotalCircuitCapacity\n   An LS MAY aggregate routes to\
    \ the same prefix that contains a\n   TotalCircuitCapacity attribute.  It SHOULD\
    \ add the values of the\n   individual routes to determine the value for the aggregated\
    \ route in\n   the same ITAD.\n"
- title: 4.1.5.  Route Dissemination and TotalCircuitCapacity
  contents:
  - "4.1.5.  Route Dissemination and TotalCircuitCapacity\n   Since this attribute\
    \ reflects the static capacity of the gateway's\n   circuit resources, it is not\
    \ expected to change frequently.  Hence,\n   the LS receiving this attribute MAY\
    \ disseminate it to other peers,\n   both internal and external to the ITAD.\n"
- title: 4.2.  AvailableCircuits Attribute
  contents:
  - "4.2.  AvailableCircuits Attribute\n   Mandatory: False.\n   Required Flags: Not\
    \ well-known.\n   Potential Flags: None.\n   TRIP Type Code: 14.\n   The AvailableCircuits\
    \ attribute identifies the number of PSTN\n   circuits that are currently available\
    \ on a route to complete calls.\n   The number of additional calls sent to that\
    \ gateway for that route\n   cannot exceed the circuit capacity.  If it does,\
    \ the signaling\n   protocol will likely generate errors, and calls will be rejected.\n\
    \   The AvailableCircuits attribute is used ONLY between a gateway and\n   its\
    \ peer LS responsible for managing that gateway.  If it is received\n   in a route,\
    \ it is not propagated.\n"
- title: 4.2.1.  AvailableCircuits Syntax
  contents:
  - "4.2.1.  AvailableCircuits Syntax\n   The AvailableCircuits attribute is a 4-octet\
    \ unsigned integer.  It\n   represents the number of circuits remaining for terminating\
    \ calls to\n   this route.\n"
- title: 4.2.2.  Route Origination and AvailableCircuits
  contents:
  - "4.2.2.  Route Origination and AvailableCircuits\n   Routes MAY be originated\
    \ containing the AvailableCircuits attribute.\n   Since this attribute is highly\
    \ dynamic, changing with every call,\n   updates MAY be sent as it changes.  However,\
    \ it is RECOMMENDED that\n   measures be taken to help reduce the messaging load\
    \ from route\n   origination.  It is further RECOMMENDED that a sufficiently large\n\
    \   window of time be used to provide a useful aggregated statistic.\n"
- title: 4.2.3.  Route Selection and AvailableCircuits
  contents:
  - "4.2.3.  Route Selection and AvailableCircuits\n   The AvailableCircuits attribute\
    \ MAY be used for route selection.\n   Since one of its primary applications is\
    \ load balancing, an LS will\n   wish to choose a potentially different route\
    \ (amongst a set of routes\n   for the same prefix) on a call-by-call basis. \
    \ This can be modeled as\n   re-running the decision process on the arrival of\
    \ each call.  The\n   aggregation and dissemination rules for routes with this\
    \ attribute\n   ensure that re-running this selection process never results in\n\
    \   propagation of a new route to other peers.\n"
- title: 4.2.4.  Aggregation and AvailableCircuits
  contents:
  - "4.2.4.  Aggregation and AvailableCircuits\n   Not applicable.\n"
- title: 4.2.5.  Route Dissemination and AvailableCircuits
  contents:
  - "4.2.5.  Route Dissemination and AvailableCircuits\n   Routes MUST NOT be disseminated\
    \ with the AvailableCircuits attribute.\n   The attribute is meant to reflect\
    \ capacity at the originating gateway\n   only.  Its highly dynamic nature makes\
    \ it inappropriate to\n   disseminate in most cases.\n"
- title: 4.3.  CallSuccess Attribute
  contents:
  - "4.3.  CallSuccess Attribute\n   Mandatory: False.\n   Required Flags: Not well-known.\n\
    \   Potential Flags: None.\n   TRIP Type Code: 15.\n   The CallSuccess attribute\
    \ is an attribute used ONLY between a gateway\n   and its peer LS responsible\
    \ for managing that gateway.  If it is\n   received in a route, it is not propagated.\n\
    \   The CallSuccess attribute provides information about the number of\n   normally\
    \ terminated calls out of a total number of attempted calls.\n   CallSuccess is\
    \ to be determined by the gateway based on the\n   Disconnect cause code at call\
    \ termination.  For example, a call that\n   reaches the Alerting stage but does\
    \ not get connected due to the\n   unavailability of the called party, or the\
    \ called party being busy,\n   is conventionally considered a successful call.\
    \  On the other hand, a\n   call that gets disconnected because of a circuit or\
    \ resource being\n   unavailable is conventionally considered a failed call. \
    \ The exact\n   mapping of disconnect causes to CallSuccess is at the discretion\
    \ of\n   the gateway reporting the attribute.\n   The CallSuccess attribute is\
    \ used by the LS to keep track of failures\n   in reaching certain telephony destinations\
    \ through a gateway(s) and\n   to use that information in the gateway selection\
    \ process to enhance\n   the probability of successful call termination.\n   This\
    \ information can be used by the LS to consider alternative\n   gateways to terminate\
    \ calls to those destinations with a better\n   likelihood of success.\n"
- title: 4.3.1.  CallSuccess Syntax
  contents:
  - "4.3.1.  CallSuccess Syntax\n   The CallSuccess attribute is composed of two component\
    \ fields -- each\n   represented as a 4-octet unsigned integer.  The first component\
    \ field\n   represents the total number of calls terminated successfully for the\n\
    \   advertised destination on a given address family over a given window\n   of\
    \ time.  The second component field represents the total number of\n   attempted\
    \ calls for the advertised destination within the same window\n   of time.\n \
    \  When the value for the total number of attempted calls wraps around,\n   the\
    \ counter value for the number of successful calls is reset to keep\n   it aligned\
    \ with the other component over a given window of time.  The\n   TGREP receiver\
    \ using this information should obtain this information\n   frequently enough\
    \ to prevent loss of significance.\n"
- title: 4.3.2.  Route Origination and CallSuccess
  contents:
  - "4.3.2.  Route Origination and CallSuccess\n   Routes MAY be originated containing\
    \ the CallSuccess attribute.  This\n   attribute is expected to get statistically\
    \ significant with passage\n   of time as more calls are attempted.  It is RECOMMENDED\
    \ that\n   sufficiently large windows be used to provide a useful aggregated\n\
    \   statistic.\n"
- title: 4.3.3.  Route Selection and CallSuccess
  contents:
  - "4.3.3.  Route Selection and CallSuccess\n   The CallSuccess attribute MAY be\
    \ used for route selection.  This\n   attribute represents a measure of success\
    \ of terminating calls to the\n   advertised destination(s).  This information\
    \ MAY be used to select\n   from amongst a set of alternative routes to increase\
    \ the probability\n   of successful call termination.\n"
- title: 4.3.4.  Aggregation and CallSuccess
  contents:
  - "4.3.4.  Aggregation and CallSuccess\n   Not applicable.\n"
- title: 4.3.5.  Route Dissemination and CallSuccess
  contents:
  - "4.3.5.  Route Dissemination and CallSuccess\n   Routes MUST NOT be disseminated\
    \ with the CallSuccess attribute.  Its\n   potential to change dynamically does\
    \ not make it suitable to\n   disseminate.\n"
- title: 4.4.  Prefix Attributes
  contents:
  - "4.4.  Prefix Attributes\n   Mandatory: False.\n   Required Flags: Not well-known.\n\
    \   Potential Flags: None.\n   TRIP Type Codes: 16 for E164 Prefix, 17 for Pentadecimal\
    \ Routing\n   Number Prefix, and 18 for Decimal Routing Number Prefix.\n   The\
    \ Prefix attribute is used to represent the list of prefixes to\n   which the\
    \ respective route can complete calls.  This attribute is\n   intended to be used\
    \ with the Carrier or TrunkGroup address family\n   (discussed in Section 5).\n\
    \   Though it is possible that all prefix ranges may be reachable through\n  \
    \ a given carrier, administrative issues could make certain ranges\n   preferable\
    \ to others.\n"
- title: 4.4.1.  Prefix Attribute Syntax
  contents:
  - "4.4.1.  Prefix Attribute Syntax\n   The Prefix attribute could be E.164, Decimal,\
    \ or Pentadecimal (refer\n   to TRIP [2]), each of them having its own type code.\
    \  The Prefix\n   attribute is encoded as a sequence of prefix values in the attribute\n\
    \   Value field.  The prefixes are listed sequentially with no padding as\n  \
    \ shown in Figure 2.  Each prefix includes a 2-octet Length field that\n   represents\
    \ the length of the Address field in octets.  The order of\n   prefixes in the\
    \ attribute is not significant.\n   The presence of the Prefix Attribute with\
    \ the Length field of the\n   attribute as 0 signifies that the TGREP GW can terminate\
    \ ALL prefixes\n   of that prefix type (E.164, Decimal, or Pentadecimal) for the\
    \ given\n   Reachable route(s).  This is not equivalent to excluding the Prefix\n\
    \   attribute in the TGREP update.\n    < 2 octets > < Length1 octets > < 2 octets\
    \ > < Length2 octets >\n   +------------+--------------//--+------------+--------------//--+-\n\
    \   |   Length1  |    Prefix1       |   Length2  |   Prefix2        | ...\n  \
    \ +------------+--------------//--+------------+--------------//--+-\n       \
    \                   Figure 2: Prefix Format\n"
- title: 4.4.2.  Route Origination and Prefix
  contents:
  - "4.4.2.  Route Origination and Prefix\n   Routes MAY be originated containing\
    \ the Prefix attribute.\n"
- title: 4.4.3.  Route Selection and Prefix
  contents:
  - "4.4.3.  Route Selection and Prefix\n   The Prefix attribute MAY be used for route\
    \ selection.\n"
- title: 4.4.4.  Aggregation and Prefix
  contents:
  - "4.4.4.  Aggregation and Prefix\n   Routes with differing Prefix attributes MUST\
    \ NOT be aggregated.\n   Routes with the same value in the Prefix attribute MAY\
    \ be aggregated\n   and the same Prefix attribute attached to the aggregated object.\n"
- title: 4.4.5.  Route Dissemination and Prefix
  contents:
  - "4.4.5.  Route Dissemination and Prefix\n   The LS receiving this attribute should\
    \ disseminate to other peers,\n   both internal and external to the ITAD.\n"
- title: 4.5.  TrunkGroup Attribute
  contents:
  - "4.5.  TrunkGroup Attribute\n   Mandatory: False.\n   Required Flags: Not well-known.\n\
    \   Potential Flags: None.\n   TRIP Type Code: 19.\n   The TrunkGroup attribute\
    \ is used to represent the list of trunkgroups\n   on the gateway used to complete\
    \ calls.  It enables providers to route\n   calls to destinations through preferred\
    \ trunks.  This attribute is\n   relatively static.\n"
- title: 4.5.1.  TrunkGroup Syntax
  contents:
  - "4.5.1.  TrunkGroup Syntax\n   The TrunkGroup attribute is a variable-length attribute\
    \ that is\n   composed of a sequence of trunkgroup identifiers.  It indicates\
    \ that\n   the gateway can complete the call through any trunkgroup identifier\n\
    \   indicated in the sequence.\n   Each trunkgroup identifier is encoded as a\
    \ Length-Value field (shown\n   in Figure 3 below).  The Length field is a 1-octet\
    \ unsigned numeric\n   value.  The Value field is a variable-length field consisting\
    \ of two\n   subfields, a trunkgroup label followed by a trunk context, the two\n\
    \   subfields separated by the delimiter \";\" (semicolon).  Both the\n   trunkgroup\
    \ label and the trunk context subfields are of variable\n   length.  The Length\
    \ field represents the total size of the Value\n   field including the delimiter.\n\
    \   The permissible character set for the trunk group label and the\n   trunkgroup\
    \ context subfields and the associated ABNF [8] is per rules\n   outlined in [4].\n\
    \   The presence of the TrunkGroup attribute with the Length field of the\n  \
    \ attribute as 0 signifies that the TGREP GW can terminate ALL\n   trunkgroups\
    \ for the given Reachable route(s).\n    < 1 octet > < Length1 octets > < 1 octet\
    \ > < Length2 octets >\n   +-----------+--------------//--+-----------+--------------//--+-\n\
    \   |  Length1  |  TrunkGroup 1    |  Length2  |  TrunkGroup 2    | ...\n   +-----------+--------------//--+-----------+--------------//--+-\n\
    \                        Figure 3: TrunkGroup Syntax\n"
- title: 4.5.2.  Route Origination and TrunkGroup
  contents:
  - "4.5.2.  Route Origination and TrunkGroup\n   Routes MAY be originated containing\
    \ the TrunkGroup attribute.\n"
- title: 4.5.3.  Route Selection and TrunkGroup
  contents:
  - "4.5.3.  Route Selection and TrunkGroup\n   The TrunkGroup attribute MAY be used\
    \ for route selection.  Certain\n   trunkgroups MAY be preferred over others based\
    \ on provider policy.\n"
- title: 4.5.4.  Aggregation and TrunkGroup
  contents:
  - "4.5.4.  Aggregation and TrunkGroup\n   Routes with differing TrunkGroup attributes\
    \ MUST NOT be aggregated.\n   Routes with the same value in the TrunkGroup attribute\
    \ MAY be\n   aggregated and the same TrunkGroup attribute attached to the\n  \
    \ aggregated object.\n"
- title: 4.5.5.  Route Dissemination and TrunkGroup
  contents:
  - "4.5.5.  Route Dissemination and TrunkGroup\n   This attribute is not expected\
    \ to change frequently.  Hence, the LS\n   receiving this attribute MAY disseminate\
    \ it to other peers, internal\n   to ITAD.  Routes SHOULD not be disseminated\
    \ external to the ITAD,\n   with TrunkGroup attribute.\n"
- title: 4.6.  Carrier Attribute
  contents:
  - "4.6.  Carrier Attribute\n   Mandatory: False.\n   Required Flags: Not well-known.\n\
    \   Potential Flags: None.\n   TRIP Type Code: 20.\n   The Carrier attribute is\
    \ used to represent the list of carriers that\n   the gateway uses to complete\
    \ calls.  It enables providers to route\n   calls to destinations through preferred\
    \ carriers.  This attribute is\n   relatively static.\n"
- title: 4.6.1.  Carrier Syntax
  contents:
  - "4.6.1.  Carrier Syntax\n   The Carrier attribute is a variable-length attribute\
    \ that is composed\n   of a sequence of carrier identifiers.  It indicates that\
    \ the route\n   can complete the call to any of the carriers represented in the\n\
    \   sequence of carrier identifiers [13].\n   Each carrier identifier is encoded\
    \ as a Length-Value field (shown in\n   Figure 4 below).  The Length field is\
    \ a 1-octet unsigned numeric\n   value.  The Value field is a variable-length\
    \ field.\n   The permissible character set for the Value field and the associated\n\
    \   ABNF [8] is per rules outlined in [5].  Specifically, it carries\n   \"global-cic\"\
    \ or \"local-cic\" [5].  In case of \"local-cic\", the\n   \"phonedigit-hex\"\
    \ part and the \"cic-context\" part would be separated\n   by the delimiter \"\
    ;\".  Hence, absence or presence of the delimiter\n   can be used to determine\
    \ if the value is a \"global-cic\" or a \"local-\n   cic\".  The Length field\
    \ represents the total size of the Value field\n   including the delimiter.\n\
    \   The presence of the Carrier attribute with the Length field of the\n   attribute\
    \ as 0 signifies that the TGREP GW can terminate ALL Carriers\n   for the given\
    \ Reachable route(s).\n    < 1 octet > < Length1 octets > < 1 octet > < Length2\
    \ octets >\n   +-----------+--------------//--+-----------+--------------//--+-\n\
    \   |  Length1  |  Carrier 1       |  Length2  |  Carrier 2       | ...\n   +-----------+--------------//--+-----------+--------------//--+-\n\
    \                         Figure 4: Carrier Syntax\n"
- title: 4.6.2.  Route Origination and Carrier
  contents:
  - "4.6.2.  Route Origination and Carrier\n   Routes MAY be originated containing\
    \ the Carrier attribute.\n"
- title: 4.6.3.  Route Selection and Carrier
  contents:
  - "4.6.3.  Route Selection and Carrier\n   The Carrier attribute MAY be used for\
    \ route selection.  Certain\n   carriers MAY be preferred over others based on\
    \ provider policy.\n"
- title: 4.6.4.  Aggregation and Carrier
  contents:
  - "4.6.4.  Aggregation and Carrier\n   Routes with differing Carrier attributes\
    \ MUST NOT be aggregated.\n   Routes with the same value in the Carrier attribute\
    \ MAY be aggregated\n   and the same Carrier attribute attached to the aggregated\
    \ object.\n"
- title: 4.6.5.  Route Dissemination and Carrier
  contents:
  - "4.6.5.  Route Dissemination and Carrier\n   This attribute is not expected to\
    \ change frequently.  Hence, the LS\n   receiving this attribute MAY disseminate\
    \ it to other peers, both\n   internal and external to the ITAD.\n"
- title: 5.  TrunkGroup and Carrier Address Families
  contents:
  - "5.  TrunkGroup and Carrier Address Families\n   As described in TRIP [2], the\
    \ Address Family field gives the type of\n   address for the route.  Two new address\
    \ families and their codes are\n   defined in this section:\n               Code\
    \              Address Family\n               4                 TrunkGroup\n \
    \              5                 Carrier\n   When a set of GWs is to be managed\
    \ at the granularity of carriers or\n   trunkgroups, then it may be more appropriate\
    \ for a GW to advertise\n   routes using the Carrier address family or TrunkGroup\
    \ address family,\n   respectively.  Also, in a TGREP association between the\
    \ gateway and\n   the LS responsible for managing that gateway, there are some\n\
    \   attributes that more naturally fit in as advertised properties of\n   trunkgroups\
    \ or carriers rather than that of advertised prefixes, for\n   example, the AvailableCircuit\
    \ information on a particular trunkgroup\n   or a particular carrier.  To express\
    \ this relationship, the existing\n   TRIP address families are inadequate.  We\
    \ need separate address\n   families that can associate certain properties like\
    \ AvailableCircuits\n   information to trunkgroups or carriers.\n   The primary\
    \ benefits of this model are as follows:\n   - It allows a service provider to\
    \ route calls based strictly on the\n     trunkgroups or carriers.\n   - It facilitates\
    \ more accurate reporting of attributes of a dynamic\n     nature like AvailableCircuits\
    \ by providing the ability to manage\n     resources at the granularity of a trunkgroup\
    \ or a carrier.\n   - It enables scalability as gateways can get really large\
    \ with the\n     ability to provision hundreds or a few thousand circuits, and\
    \ this\n     can increase the potential for traffic that reports dynamic\n   \
    \  resource information between the gateway and the LS.  The model\n     introduced\
    \ can potentially alleviate this UPDATE traffic, hence\n     increasing efficiency\
    \ and providing a scalable gateway registration\n     model.\n"
- title: 5.1.  Address Family Syntax
  contents:
  - "5.1.  Address Family Syntax\n   Consider the generic TRIP route format from TRIP\
    \ [2] shown below.\n       0                   1                   2         \
    \          3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1\n      +---------------+---------------+---------------+---------------+\n\
    \      |       Address Family          |      Application Protocol     |\n   \
    \   +---------------+---------------+---------------+---------------+\n      |\
    \            Length             |       Address (variable)     ...\n      +---------------+---------------+---------------+---------------+\n\
    \                    Figure 5: Generic TRIP Route Format\n   The Address Family\
    \ field will be used to represent the type of the\n   address associated for this\
    \ family, which is based on the TrunkGroup\n   or Carrier.  The codes for the\
    \ new address families have been\n   allocated by IANA.\n   The code for the TrunkGroup\
    \ address family is 4, and the code for the\n   Carrier address family is 5.\n\
    \   The Application Protocol field is the same as the one for the\n   Decimal,\
    \ Pentadecimal, and E.164 address families defined in TRIP\n   [2].  The Length\
    \ field represents the total size of the Address field\n   in bytes.\n   The value\
    \ in the Address field represents either the TrunkGroup or\n   Carrier address\
    \ family, and the syntax is as follows:\n   For the TrunkGroup address family,\
    \ the Address field represents a\n   TrunkGroup value that is defined as specified\
    \ in Section 4.5.1,\n   \"TrunkGroup Syntax\".\n   For the Carrier address family,\
    \ the Address field represents a\n   Carrier value.  This is the same as the Value\
    \ field specified in an\n   earlier Section 4.6.1, \"Carrier Syntax\".\n   The\
    \ above mentioned address families are not hierarchical, but flat.\n   If a gateway\
    \ supports any of these address families, it should\n   include that address family\
    \ as one of the Route types supported in\n   the OPEN message capability negotiation\
    \ phase.\n   The following attributes are currently defined to be used with all\n\
    \   the address families including the TrunkGroup and Carrier address\n   families.\n\
    \     - AvailableCircuits attribute\n     - TotalCircuitCapacity attribute\n \
    \    - CallSuccess attribute\n   It is recommended that the above three attributes\
    \ be used by the\n   gateway with the TrunkGroup or Carrier address family, if\
    \ possible.\n   This will potentially offer a more efficient resource reporting\n\
    \   framework, and a scalable model for gateway provisioning.\n   However, when\
    \ the gateway is not using the TrunkGroup or Carrier\n   address family, it MAY\
    \ use the above attributes with the Decimal,\n   Pentadecimal, and E.164 address\
    \ families.\n   The Prefix attribute cannot be used when the address family is\
    \ E164\n   numbers, Pentadecimal routing numbers, or Decimal routing numbers.\n\
    \   The Carrier attribute cannot be used if the address family type is\n   Carrier.\n\
    \   The TrunkGroup attribute cannot be used if the address family type is\n  \
    \ TrunkGroup.\n"
- title: 6.  Gateway Operation
  contents:
  - "6.  Gateway Operation\n   A gateway uses TGREP to advertise its reachability\
    \ to its domain's\n   Location Server(s) (LS, which are closely coupled with proxies).\
    \  The\n   gateway operates in TRIP Send Only mode since it is only interested\n\
    \   in advertising its reachability, but is not interested in learning\n   about\
    \ the reachability of other gateways and other domains.  Also,\n   the gateway\
    \ will not create its own call routing database.  In this\n   section, we describe\
    \ the operation of TGREP on a gateway.\n"
- title: 6.1.  Session Establishment
  contents:
  - "6.1.  Session Establishment\n   When opening a peering session with a TGREP receiver,\
    \ a TGREP gateway\n   follows exactly the same procedures as any other TRIP entity.\
    \  The\n   TGREP gateway sends an OPEN message that includes a Send Receive\n\
    \   Capability in the Optional Parameters.  The Send Receive Capability\n   is\
    \ set by the gateway to Send Only.  The OPEN message also contains\n   the address\
    \ families supported by the gateway.  The remainder of the\n   peer session establishment\
    \ is identical to TRIP.\n"
- title: 6.2.  UPDATE Messages
  contents:
  - "6.2.  UPDATE Messages\n   Once the peer session has been established, the gateway\
    \ sends UPDATE\n   messages to the TRIP LS with the gateway's entire reachability.\
    \  The\n   gateway also sends any attributes associated with the routes.\n   TGREP\
    \ processing of the UPDATE message at the gateway is identical to\n   UPDATE processing\
    \ in TRIP [2].  A TGREP sender MUST support all\n   mandatory TRIP attributes.\n"
- title: 6.3.  KEEPALIVE Messages
  contents:
  - "6.3.  KEEPALIVE Messages\n   KEEPALIVE messages are periodically exchanged over\
    \ the peering\n   session between the TGREP gateway and the TRIP LS as specified\
    \ in\n   Section 4.4 of TRIP [2].\n"
- title: 6.4.  Error Handling and NOTIFICATION Messages
  contents:
  - "6.4.  Error Handling and NOTIFICATION Messages\n   The same procedures used with\
    \ TRIP are used with TGREP for error\n   handling and generating NOTIFICATION\
    \ messages.  The only difference\n   is that a TGREP gateway will never generate\
    \ a NOTIFICATION message in\n   response to an UPDATE message, irrespective of\
    \ the contents of the\n   UPDATE message.  Any UPDATE message is silently discarded.\n"
- title: 6.5.  TGREP Finite State Machine
  contents:
  - "6.5.  TGREP Finite State Machine\n   When the TGREP finite state machine is in\
    \ the Established state and\n   an UPDATE message is received, the UPDATE message\
    \ is silently\n   discarded and the TGREP gateway remains in the Established state.\n\
    \   Other than that, the TRIP finite state machine and the TGREP finite\n   state\
    \ machine are identical.\n"
- title: 6.6.  Call Routing Databases
  contents:
  - "6.6.  Call Routing Databases\n   A TGREP gateway may maintain simultaneous sessions\
    \ with more than one\n   TRIP LS.  A TGREP gateway maintains one call routing\
    \ database per\n   peer TRIP LS.  These databases are equivalent to TRIP's Adj-TRIBs-\n\
    \   Out, and hence we will call them Adj-TRIBs-GW-Out.  An Adj-TRIB-GW-\n   Out\
    \ contains the gateway's reachability information advertised to its\n   peer TRIP\
    \ LS.  How an Adj-TRIB-GW-Out database gets populated is\n   outside the scope\
    \ of this document (possibly by manual\n   configuration).\n   The TGREP gateway\
    \ does not have databases equivalent to TRIP's\n   Adj-TRIBs-In and Loc-TRIB,\
    \ because the TGREP gateway does not learn\n   routes from its peer TRIP LSs,\
    \ and hence it does not run call route\n   selection.\n"
- title: 6.7.  Multiple Address Families
  contents:
  - "6.7.  Multiple Address Families\n   As mentioned above, TGREP supports various\
    \ address families in order\n   to convey the reachability of telephony destinations.\
    \  A TGREP\n   session MUST NOT send UPDATEs of more than one of the following\n\
    \   categories (a) Prefix address families (E164, Pentadecimal, and\n   Decimal),\
    \ (b) TrunkGroup address family, or (c) Carrier address\n   family for a given\
    \ established session.  TGREP should specify its\n   choice address family through\
    \ the route-type capability in the OPEN\n   message.  And route-type specification\
    \ in the OPEN message violating\n   the above rule should be rejected with a NOTIFICATION\
    \ message.\n"
- title: 6.8.  Route Selection and Aggregation
  contents:
  - "6.8.  Route Selection and Aggregation\n   TRIP's route selection and aggregation\
    \ operations MUST NOT be\n   implemented by TGREP gateways.\n"
- title: 7.  LS/Proxy Behavior
  contents:
  - "7.  LS/Proxy Behavior\n   As mentioned earlier, TGREP can be considered as a\
    \ protocol\n   complimentary to TRIP in providing reachability information, which\n\
    \   can then be further fed into the Location Server.  The architecture\n   of\
    \ an LS/Proxy system is as follows: There exists a TRIP LS\n   application that\
    \ functions as a speaker in the I-TRIP/E-TRIP network\n   as documented in TRIP\
    \ [2].  This component is termed as \"Egress LS\"\n   for the purposes of this\
    \ discussion.  Then, there is a signaling\n   server fronting a set of gateways.\
    \  In conjunction with this\n   signaling server is also a second component operating\
    \ in receive\n   mode, which peers with one or more gateways, each of them using\
    \ TGREP\n   to advertise routing information.  This component on the receiving\n\
    \   end of one or more TGREP sessions is termed as the \"Ingress LS\" or\n   \"\
    TGREP receiver\" for the purposes of this discussion.  Also, the\n   entity (typically,\
    \ a gateway) advertising the routes on the TGREP\n   session is termed as the\
    \ \"TGREP sender\".  The TGREP receiver\n   receiving the TRIP messages takes\
    \ the resulting routing information\n   from each gateway, and \"exports\" it\
    \ to another process we define\n   below, that performs consolidation and aggregation,\
    \ in that order.\n   These operations would take as input the collective set of\
    \ routes\n   from all the gateways.  Subsequently, the resulting TRIB is passed\
    \ as\n   input into the LS-Egress process as shown below, that can then\n   disseminate\
    \ these via TRIP.  The interface between the TGREP receiver\n   (aka Ingress LS)\
    \ peering with the GW(s) and the TRIP LS (Egress LS)\n   is entirely a local matter.\n\
    \   The nature of the consolidation and aggregation operations and the\n   accompanying\
    \ motivation are described in the subsections below.  The\n   order in which the\
    \ operations are listed represents an implicit\n   logical sequence in which they\
    \ are applied.  The architecture for an\n   LS/Proxy entity is shown in Figure\
    \ 6 below.\n    +-------------------------------------------------------+\n  \
    \  |                    +-------------------------------+  |\n    |          \
    \          |     +-+  +-+                  |  | TGREP\n    |                 \
    \   |     |A|  |C|                  |  |    +-----+\n    |                   \
    \ |     |g|  |o|                  |  |    |     |\n    |   +-------------+  |\
    \     |g|  |n|  +-------------+ |  |  --| GW  |\n    |   |             |  |  \
    \   |r|  |s|  |             | |  |    +-----+\n    |   |    TRIP     |  |    \
    \ |e|  |o|  |             | |  +---\n    |   |     LS    <----------|g<--|l<---\
    \    TGREP    |-++-|    +-----+\n    |   |             |  |     |a|  |i|  |  \
    \ Session   | |  |    |     |\n    |   |  (I-TRIP/   |  |     |t|  |d|  |  Management\
    \ |-++-+----| GW  |\n    |   |   E-TRIP)   |  |     |i|  |a|  |             |\
    \ |  |    +-----+\n    |   | (Egress LS) |  |     |o|  |t|  |             |-+\
    \  +---\n    |   +-----------/-+  |     |n|  |i|  +-------------+ |  |    +-----+\n\
    \    |              /     |     | |  |o|                  |  |  --|     |\n  \
    \  |             /      |     | |  |n|    (Ingress LS)  |  |    | GW  |\n    |\
    \            /       |     +-+  +-+                  |  |    +-----+\n    |  \
    \         /        |              TGREP Receiver   |  |\n    |          /    \
    \     +-------------------------------+  |\n    |         /                  \
    \                           |\n    |        /                                \
    \              |\n    +-------/-----------------------------------------------+\n\
    \           /                            LS/Proxy\n          /\n         /\n \
    \       /\n       /\n      /\n    +/----------------+\n    |                 |\n\
    \    |                 |\n    |                 |\n    |       LS        |\n \
    \   |                 |\n    |                 |\n    |                 |\n  \
    \  |                 |\n    |                 |\n    +-----------------+\n   \
    \                Figure 6: LS Architecture for TRIP-GW\n"
- title: 7.1.  Route Consolidation
  contents:
  - "7.1.  Route Consolidation\n   The TGREP receiver (Ingress LS) may receive routing\
    \ information from\n   one or more gateways.  It is possible that multiple routes\
    \ are\n   available for the same destination.  These different alternative\n \
    \  routes may be received from the same gateway or from multiple\n   gateways.\
    \  It is RECOMMENDED that the set of gateway routes for each\n   destination be\
    \ consolidated, before presenting a candidate route, to\n   the Egress LS entity.\
    \  The motivation for this operation should be to\n   define a route that can\
    \ maximally represent the collective routing\n   capabilities of the set of gateways,\
    \ managed by this TGREP receiver.\n   Let us take an example scenario in order\
    \ to bring out the motivation\n   for this operation.  Let us say, the TGREP receiver\
    \ maintains peering\n   sessions with gateways A and B.\n     - Gateway A advertises\
    \ a route for destination \"SIP 408\" on the\n       E.164 address family with\
    \ the Carrier attribute value C1.\n     - Gateway B advertises a route for destination\
    \ \"SIP 408\" on the\n       E.164 address family with Carrier attribute value\
    \ C2.\n   The TGREP receiver that receives these routes can consolidate these\n\
    \   constituent routes into a single route for destination \"SIP 408\" with\n\
    \   its Carrier attribute being a union of the Carrier attribute values\n   of\
    \ the individual routes, namely, \"C1 C2\".  This operation is\n   referred to\
    \ as consolidation.  In the above example, it is possible\n   that a route to\
    \ the destination \"SIP 408\" through one or more\n   carriers may have been lost\
    \ if the individual routes were not\n   consolidated.\n   Another example is to\
    \ consolidate the Prefix attribute from multiple\n   Carrier or TrunkGroup updates\
    \ received from different gateways for\n   the same destination.  Let us say,\
    \ there are Carrier address family\n   (AF) updates from two gateways for Carrier\
    \ destination X, and the\n   prefix attribute values are {408, 650} from one update\
    \ and {919, 973}\n   from the other.  The prefix values from these two updates\
    \ can be\n   consolidated into a single Carrier AF route advertisement with prefix\n\
    \   value {408, 650, 919, 973}.\n   In general, there is a potential for loss\
    \ of gateway routing\n   information when TGREP routes from a set of gateways\
    \ are not\n   consolidated when a candidate route is presented to the TRIP LS.\
    \  The\n   specifics of applying the consolidation operation to different\n  \
    \ attributes and routes from different address families is left to the\n   individual\
    \ TGREP receiver implementations.\n"
- title: 7.2.  Aggregation
  contents:
  - "7.2.  Aggregation\n   The set of gateway routes, which are in a consolidated\
    \ form or\n   otherwise, may be aggregated before importing it to the LS instance\n\
    \   that is responsible for I-TRIP/E-TRIP processing (Egress LS).  This\n   operation\
    \ follows the standard aggregation procedures described in\n   TRIP [2], while\
    \ adhering to the aggregation rules for each route\n   attribute.\n"
- title: 7.3.  Consolidation versus Aggregation
  contents:
  - "7.3.  Consolidation versus Aggregation\n   To highlight the difference between\
    \ the two operations discussed\n   above, \"consolidation\" combines multiple\
    \ routes for the same route\n   destination, whereas \"aggregation\" combines\
    \ routes for different\n   route destinations that qualify as candidates to be\
    \ summarized\n   resulting in route information reduction.\n   To take an example,\
    \ if there are multiple gateways offering routes to\n   an E.164 destination \"\
    408\" but with possibly different attributes\n   (e.g., Carrier), the LS/Proxy\
    \ can combine these to form one route for\n   \"408\" but representing the attribute\
    \ information collectively.  This\n   process is consolidation.\n   If, for example,\
    \ the LS/Proxy receives routes for 4080, 4081, 4082,\n   ...  4089 from amongst\
    \ a set of gateways, it could aggregate these\n   different candidate routes to\
    \ have a summarized route destination\n   \"408\" with each of the attributes\
    \ computed using the aggregation\n   procedures defined in TRIP.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   The security considerations for TGREP are identical\
    \ to that\n   identified in TRIP [2] and are just restated here for the purposes\
    \ of\n   clarity.\n   The security mechanism for the peering session between TGREP\
    \ GW and a\n   TRIP LS, in an IP network, is IPsec [3].  IPsec uses two protocols\
    \ to\n   provide traffic security: Authentication Header (AH) [6] and\n   Encapsulating\
    \ Security Payload (ESP) [7].\n   The AH header affords data origin authentication,\
    \ connectionless\n   integrity, and optional anti-replay protection of messages\
    \ passed\n   between the peer LSs.  The ESP header provides origin authentication,\n\
    \   connectionless integrity, anti-replay protection, and confidentiality\n  \
    \ of messages.\n   Implementations of the protocol defined in this document employing\n\
    \   the ESP header SHALL comply with Section 3.1.1 of [10], which defines\n  \
    \ a minimum set of algorithms for integrity checking and encryption.\n   Similarly,\
    \ implementations employing the AH header SHALL comply with\n   Section 3.2 of\
    \ [10], which defines a minimum set of algorithms for\n   integrity checking.\n\
    \   Implementations SHOULD use the Internet Key Exchange Protocol (IKEv2)\n  \
    \ [9] to permit more robust keying options.  Implementations employing\n   IKEv2\
    \ SHOULD support 3DES-CBC for confidentiality and HMAC-SHA1 for\n   integrity.\n\
    \   A Security Association (SA) [3] is a simplex \"connection\" that\n   affords\
    \ security services to the traffic carried by it.  Security\n   services are afforded\
    \ to an SA by the use of AH or ESP, but not both.\n   Two types of SAs are defined:\
    \ transport mode and tunnel mode.  A\n   transport mode SA is a security association\
    \ between two hosts, and is\n   appropriate for protecting the TRIP session between\
    \ two peer LSs.\n"
- title: 9.  IANA Considerations
  contents:
  - "9.  IANA Considerations\n   Both TRIP [2] and TGREP share the same IANA registry\
    \ for\n   Capabilities, Attributes, Address Families, and Application\n   Protocols.\
    \  IANA has added the following attribute codes and address\n   family codes to\
    \ the TRIP [2] registries.\n"
- title: 9.1.  Attribute Codes
  contents:
  - "9.1.  Attribute Codes\n   The Attribute Type Codes assigned for the new attributes\
    \ defined in\n   this document are listed below:\n      Code      Attribute  \
    \                      Reference\n      ----      ---------                  \
    \      ---------\n      13     TotalCircuitCapacity                [RFC5140]\n\
    \      14     AvailableCircuits                   [RFC5140]\n      15     CallSuccess\
    \                         [RFC5140]\n      16     E.164 Prefix               \
    \         [RFC5140]\n      17     Pentadecimal Routing Number Prefix  [RFC5140]\n\
    \      18     Decimal Routing Number Prefix       [RFC5140]\n      19     TrunkGroup\
    \                          [RFC5140]\n      20     Carrier                   \
    \          [RFC5140]\n"
- title: 9.2.  Address Family Codes
  contents:
  - "9.2.  Address Family Codes\n   The following subsections show the codes that\
    \ have been assigned for\n   the two new address families introduced in this document.\n"
- title: 9.2.1.  TrunkGroup Address Family
  contents:
  - "9.2.1.  TrunkGroup Address Family\n      Code      Address Family           \
    \        Reference\n      ----      --------------                   ---------\n\
    \       4          TrunkGroup                     [RFC5140]\n"
- title: 9.2.2.  Carrier Address Family
  contents:
  - "9.2.2.  Carrier Address Family\n      Code      Address Family              \
    \     Reference\n      ----      --------------                   ---------\n\
    \       5          Carrier                        [RFC5140]\n"
- title: 10.  Acknowledgments
  contents:
  - "10.  Acknowledgments\n   We wish to thank Vijay Gurbani, Li Li, Kevin McDermott,\
    \ David Oran,\n   Bob Penfield, Jon Peterson, Anirudh Sahoo, and James Yu for\
    \ their\n   insightful comments and suggestions.\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [1]  Bradner, S., \"Key words for use in RFCs\
    \ to Indicate Requirement\n        Levels\", BCP 14, RFC 2119, March 1997.\n \
    \  [2]  Rosenberg, J., Salama, H., and M. Squire, \"Telephony Routing\n      \
    \  over IP (TRIP)\", RFC 3219, January 2002.\n   [3]  Kent, S. and K. Seo, \"\
    Security Architecture for the Internet\n        Protocol\", RFC 4301, December\
    \ 2005.\n   [4]  Gurbani, V. and C. Jennings, \"Representing Trunk Groups in\n\
    \        tel/sip Uniform Resource Identifiers (URIs)\", RFC 4904, June\n     \
    \   2007.\n   [5]  Yu, J., \"Number Portability Parameters for the \"tel\" URI\"\
    , RFC\n        4694, October 2006.\n   [6]  Kent, S., \"IP Authentication Header\"\
    , RFC 4302, December 2005.\n   [7]  Kent, S., \"IP Encapsulating Security Payload\
    \ (ESP)\", RFC 4303,\n        December 2005.\n   [8]  Crocker, D., Ed., and P.\
    \ Overell, \"Augmented BNF for Syntax\n        Specifications: ABNF\", STD 68,\
    \ RFC 5234, January 2008.\n   [9]  Kaufman, C., Ed., \"Internet Key Exchange (IKEv2)\
    \ Protocol\", RFC\n        4306, December 2005.\n   [10] Manral, V., \"Cryptographic\
    \ Algorithm Implementation Requirements\n        for Encapsulating Security Payload\
    \ (ESP) and Authentication\n        Header (AH)\", RFC 4835, April 2007.\n"
- title: 11.2. Informative References
  contents:
  - "11.2. Informative References\n   [11] Rosenberg, J., Schulzrinne, H., Camarillo,\
    \ G., Johnston, A.,\n        Peterson, J., Sparks, R., Handley, M., and E. Schooler,\
    \ \"SIP:\n        Session Initiation Protocol\", RFC 3261, June 2002.\n   [12]\
    \ Rosenberg, J. and H. Schulzrinne, \"A Framework for Telephony\n        Routing\
    \ over IP\", RFC 2871, June 2000.\n   [13] ITU-T List of ITU Carrier Codes (published\
    \ periodically in the\n        ITU-T Operational Bulletin).\n   [14] Rosenberg,\
    \ J., \"Requirements for Gateway Registration\", Work in\n        Progress, November\
    \ 2001.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Manjunath S. Bangalore\n   Cisco\n   Mail Stop SJC-14/2/1\n\
    \   3625 Cisco Way\n   San Jose, CA 95134\n   Phone: +1-408-525-7555\n   EMail:\
    \ manjax@cisco.com\n   Rajneesh Kumar\n   Cisco\n   Mail Stop SJC-14/4/2\n   3625\
    \ Cisco Way\n   San Jose, CA 95134\n   Phone: +1-408-527-6148\n   EMail: rajneesh@cisco.com\n\
    \   Jonathan Rosenberg\n   Cisco\n   Edison, NJ 08837\n   EMail: jdrosen@cisco.com\n\
    \   Hussein F. Salama\n   Citex Software\n   Giza, Egypt\n   EMail: hsalama@citexsoftware.com\n\
    \   Dhaval Niranjan Shah\n   Moowee Inc.\n   4920 El Camino Real\n   Los Altos,\
    \ CA 94022\n   Phone: +1-408-307-7455\n   EMail: dhaval@moowee.tv\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
