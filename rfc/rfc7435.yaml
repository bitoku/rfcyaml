- title: __initial_text__
  contents:
  - '        Opportunistic Security: Some Protection Most of the Time

    '
- title: Abstract
  contents:
  - "Abstract\n   This document defines the concept \"Opportunistic Security\" in\
    \ the\n   context of communications protocols.  Protocol designs based on\n  \
    \ Opportunistic Security use encryption even when authentication is not\n   available,\
    \ and use authentication when possible, thereby removing\n   barriers to the widespread\
    \ use of encryption on the Internet.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7435.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n     1.1.  Background  . . . . . . . . . . . . . . . . . . .\
    \ . . . .   2\n     1.2.  A New Perspective . . . . . . . . . . . . . . . . .\
    \ . . .   3\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .   5\n   3.  Opportunistic Security Design Principles  . . . . . . . . .\
    \ .   5\n   4.  Example: Opportunistic TLS in SMTP  . . . . . . . . . . . . .\
    \   8\n   5.  Operational Considerations  . . . . . . . . . . . . . . . . .  \
    \ 8\n   6.  Security Considerations . . . . . . . . . . . . . . . . . . .   9\n\
    \   7.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  10\n  \
    \   7.1.  Normative References  . . . . . . . . . . . . . . . . . .  10\n    \
    \ 7.2.  Informative References  . . . . . . . . . . . . . . . . .  10\n   Acknowledgements\
    \  . . . . . . . . . . . . . . . . . . . . . . . .  11\n   Author's Address  .\
    \ . . . . . . . . . . . . . . . . . . . . . . .  11\n"
- title: 1.  Introduction
  contents:
  - '1.  Introduction

    '
- title: 1.1.  Background
  contents:
  - "1.1.  Background\n   Historically, Internet security protocols have emphasized\n\
    \   comprehensive \"all or nothing\" cryptographic protection against both\n \
    \  passive and active attacks.  With each peer, such a protocol achieves\n   either\
    \ full protection or else total failure to communicate (hard\n   fail).  As a\
    \ result, operators often disable these security protocols\n   when users have\
    \ difficulty connecting, thereby degrading all\n   communications to cleartext\
    \ transmission.\n   Protection against active attacks requires authentication.\
    \  The\n   ability to authenticate any potential peer on the Internet requires\n\
    \   an authentication mechanism that encompasses all such peers.  No IETF\n  \
    \ standard for authentication scales as needed and has been deployed\n   widely\
    \ enough to meet this requirement.\n   The Public Key Infrastructure (PKI) model\
    \ employed by browsers to\n   authenticate web servers (often called the \"Web\
    \ PKI\") imposes cost\n   and management burdens that have limited its use.  With\
    \ so many\n   Certification Authorities (CAs), not all of which everyone is willing\n\
    \   to trust, the communicating parties don't always agree on a mutually\n   trusted\
    \ CA.  Without a mutually trusted CA, authentication fails,\n   leading to communications\
    \ failure in protocols that mandate\n   authentication.  These issues are compounded\
    \ by operational\n   difficulties.  For example, a common problem is for site\
    \ operators to\n   forget to perform timely renewal of expiring certificates.\
    \  In Web\n   PKI interactive applications, security warnings are all too frequent,\n\
    \   and end users learn to actively ignore security problems, or site\n   administrators\
    \ decide that the maintenance cost is not worth the\n   benefit so they provide\
    \ a cleartext-only service to their users.\n   The trust-on-first-use (TOFU) authentication\
    \ approach assumes that an\n   unauthenticated public key obtained on first contact\
    \ (and retained\n   for future use) will be good enough to secure future communication.\n\
    \   TOFU-based protocols do not protect against an attacker who can\n   hijack\
    \ the first contact communication and require more care from the\n   end user\
    \ when systems update their cryptographic keys.  TOFU can make\n   it difficult\
    \ to distinguish routine key management from a malicious\n   attack.\n   DNS-Based\
    \ Authentication of Named Entities (DANE) [RFC6698] defines a\n   way to distribute\
    \ public keys bound to DNS names.  It can provide an\n   alternative to the Web\
    \ PKI.  DANE needs to be used in conjunction\n   with DNSSEC [RFC4033].  At the\
    \ time of writing, DNSSEC is not\n   sufficiently widely deployed to allow DANE\
    \ to authenticate all\n   potential peers.  Protocols that mandate authenticated\
    \ communication\n   cannot yet generally do so via DANE (at the time of writing).\n\
    \   The lack of a global key management system means that for many\n   protocols,\
    \ only a minority of communications sessions can be\n   predictably authenticated.\
    \  When protocols only offer a choice\n   between authenticated-and-encrypted\
    \ communication, or no protection,\n   the result is that most traffic is sent\
    \ in cleartext.  The fact that\n   most traffic is not encrypted makes pervasive\
    \ monitoring easier by\n   making it cost-effective, or at least not cost-prohibitive\
    \ (see\n   [RFC7258] for more detail).\n   For encryption to be used more broadly,\
    \ authentication needs to be\n   optional.  The use of encryption defends against\
    \ pervasive monitoring\n   and other passive attacks.  Even unauthenticated, encrypted\n\
    \   communication (defined below) is preferable to cleartext.\n"
- title: 1.2.  A New Perspective
  contents:
  - "1.2.  A New Perspective\n   This document describes a change of perspective.\
    \  Until now, the\n   protocol designer has viewed protection against both passive\
    \ and\n   active attacks as the default, and anything short of that as\n   \"\
    degraded security\" or a \"fallback\".  The new viewpoint is that\n   without\
    \ specific knowledge of peer capabilities (or explicit\n   configuration or direct\
    \ request of the application), the default\n   protection is no protection, and\
    \ anything more than that is an\n   improvement.\n   \"Opportunistic Security\"\
    \ (OS) is defined as the use of cleartext as\n   the baseline communication security\
    \ policy, with encryption and\n   authentication negotiated and applied to the\
    \ communication when\n   available.\n   Cleartext, not comprehensive protection,\
    \ is the default baseline.  An\n   OS protocol is not falling back from comprehensive\
    \ protection when\n   that protection is not supported by all peers; rather, OS\
    \ protocols\n   aim to use the maximum protection that is available.  (At some\
    \ point\n   in time for a particular application or protocol all but a negligible\n\
    \   fraction of peers might support encryption.  At that time, the\n   baseline\
    \ security might be raised from cleartext to always require\n   encryption, and\
    \ only authentication would have to be done\n   opportunistically.)\n   To achieve\
    \ widespread adoption, OS must support incremental\n   deployment.  Incremental\
    \ deployment implies that security\n   capabilities will vary from peer to peer,\
    \ perhaps for a very long\n   time.  OS protocols will attempt to establish encrypted\
    \ communication\n   whenever both parties are capable of such, and authenticated\n\
    \   communication if that is also possible.  Thus, use of an OS protocol\n   may\
    \ yield communication that is authenticated and encrypted,\n   unauthenticated\
    \ but encrypted, or cleartext.  This last outcome will\n   occur if not all parties\
    \ to a communication support encryption (or if\n   an active attack makes it appear\
    \ that this is the case).\n   When less than complete protection is negotiated,\
    \ there is no need to\n   prompt the user with \"your security may be degraded,\
    \ please click OK\"\n   dialogs.  The negotiated protection is as good as can\
    \ be expected.\n   Even if not comprehensive, it is often better than the traditional\n\
    \   outcome of either \"no protection\" or \"communications failure\".\n   OS\
    \ is not intended as a substitute for authenticated, encrypted\n   communication\
    \ when such communication is already mandated by policy\n   (that is, by configuration\
    \ or direct request of the application) or\n   is otherwise required to access\
    \ a particular resource.  In essence,\n   OS is employed when one might otherwise\
    \ settle for cleartext.  OS\n   protocols never preempt explicit security policies.\
    \  A security\n   administrator may specify security policies that override OS.\
    \  For\n   example, a policy might require authenticated, encrypted\n   communication,\
    \ in contrast to the default OS security policy.\n   In this document, the word\
    \ \"opportunistic\" carries a positive\n   connotation.  Based on advertised peer\
    \ capabilities, an OS protocol\n   uses as much protection as possible.  The adjective\
    \ \"opportunistic\"\n   applies to the adaptive choice of security mechanisms\
    \ peer by peer.\n   Once that choice is made for a given peer, OS looks rather\
    \ similar to\n   other designs that happen to use the same set of mechanisms.\n\
    \   The remainder of this document provides definitions of important\n   terms,\
    \ sets out the OS design principles, and provides an example of\n   an OS design\
    \ in the context of communication between mail relays.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   Trust on First Use (TOFU):  In a protocol, TOFU calls for\
    \ accepting\n      and storing a public key or credential associated with an asserted\n\
    \      identity, without authenticating that assertion.  Subsequent\n      communication\
    \ that is authenticated using the cached key or\n      credential is secure against\
    \ an MiTM attack, if such an attack did\n      not succeed during the vulnerable\
    \ initial communication.  The SSH\n      protocol [RFC4251] in its commonly deployed\
    \ form makes use of\n      TOFU.  The phrase \"leap of faith\" [RFC4949] is sometimes\
    \ used as a\n      synonym.\n   Authenticated, encrypted communication:  Encrypted\
    \ communication\n      using a session establishment method in which at least\
    \ the\n      initiator (or client) authenticates the identity of the acceptor\n\
    \      (or server).  This is required to protect against both passive and\n  \
    \    active attacks.  Mutual authentication, in which the server also\n      authenticates\
    \ the client, plays a role in mitigating active\n      attacks when the client\
    \ and server roles change in the course of a\n      single session.\n   Unauthenticated,\
    \ encrypted communication:  Encrypted communication\n      using a session establishment\
    \ method that does not authenticate\n      the identities of the peers.  In typical\
    \ usage, this means that\n      the initiator (client) has not verified the identity\
    \ of the target\n      (server), making MiTM attacks possible.\n   Perfect Forward\
    \ Secrecy (PFS):  As defined in [RFC4949].\n   Man-in-the-Middle (MiTM) attack:\
    \  As defined in [RFC4949].\n   OS protocol:  A protocol that follows the opportunistic\
    \ approach to\n      security described herein.\n"
- title: 3.  Opportunistic Security Design Principles
  contents:
  - "3.  Opportunistic Security Design Principles\n   OS provides a near-term approach\
    \ to counter passive attacks by\n   removing barriers to the widespread use of\
    \ encryption.  OS offers an\n   incremental path to authenticated, encrypted communication\
    \ in the\n   future, as suitable authentication technologies are deployed.  OS\n\
    \   promotes the following design principles:\n   Coexist with explicit policy:\
    \  Explicit security policies preempt OS.\n      Opportunistic security never\
    \ displaces or preempts explicit\n      policy.  Many applications and types of\
    \ data are too sensitive to\n      use OS, and more traditional security designs\
    \ are appropriate in\n      such cases.\n   Prioritize communication:  The primary\
    \ goal of OS is to not impede\n      communication while maximizing the deployment\
    \ of usable security.\n      OS protocols need to be deployable incrementally,\
    \ with each peer\n      configured independently by its administrator or user.\
    \  With OS,\n      communication is still possible even when some peers support\n\
    \      encryption or authentication and others do not.\n   Maximize security peer\
    \ by peer:  OS protocols use encryption when it\n      is mutually supported.\
    \  OS protocols enforce peer authentication\n      when an authenticated out-of-band\
    \ channel is available to provide\n      the requisite keys or credentials.  In\
    \ general, communication\n      should be at least encrypted.  OS should employ\
    \ PFS wherever\n      possible in order to protect previously recorded encrypted\n\
    \      communication from decryption even after a compromise of long-term\n  \
    \    keys.\n   No misrepresentation of security:  Unauthenticated, encrypted\n\
    \      communication must not be misrepresented to users or in\n      application\
    \ logs of non-interactive applications as equivalent to\n      authenticated,\
    \ encrypted communication.\n   An OS protocol first determines the capabilities\
    \ of the peer with\n   which it is attempting to communicate.  Peer capabilities\
    \ may be\n   discovered by out-of-band or in-band means.  (Out-of-band mechanisms\n\
    \   include the use of DANE records or cached keys or credentials\n   acquired\
    \ via TOFU.  In-band determination implies negotiation between\n   peers.)  The\
    \ capability determination phase may indicate that the\n   peer supports authenticated,\
    \ encrypted communication;\n   unauthenticated, encrypted communication; or only\
    \ cleartext\n   communication.\n   Encryption is used to mitigate the risk of\
    \ passive monitoring\n   attacks, while authentication is used to mitigate the\
    \ risk of active\n   MiTM attacks.  When encryption capability is advertised over\
    \ an\n   insecure channel, MiTM downgrade attacks to cleartext may be\n   possible.\
    \  Since encryption without authentication only mitigates\n   passive attacks,\
    \ this risk is consistent with the expected level of\n   protection.  For authentication\
    \ to protect against MiTM attacks, the\n   peer capability advertisements that\
    \ convey support for authentication\n   need to be over an out-of-band authenticated\
    \ channel that is itself\n   resistant to MiTM attack.\n   Opportunistic security\
    \ protocols may hard-fail with peers for which a\n   security capability fails\
    \ to function as advertised.  Security\n   services that work reliably (when not\
    \ under attack) are more likely\n   to be deployed and enabled by default.  It\
    \ is vital that the\n   capabilities advertised for an OS-compatible peer match\
    \ the deployed\n   reality.  Otherwise, OS systems will detect such a broken deployment\n\
    \   as an active attack and communication may fail.  This might mean that\n  \
    \ advertised peer capabilities are further filtered to consider only\n   those\
    \ capabilities that are sufficiently operationally reliable.\n   Capabilities\
    \ that can't be expected to work reliably should be\n   treated by an OS protocol\
    \ as \"not present\" or \"undefined\".\n   With unauthenticated, encrypted communication,\
    \ OS protocols may\n   employ more liberal settings than would be best practice\
    \ when\n   security is mandated by policy.  Some legacy systems support\n   encryption,\
    \ but implement only outdated algorithms or protocol\n   versions.  Compatibility\
    \ with these systems avoids the need to resort\n   to cleartext fallback.\n  \
    \ For greater assurance of channel security, an OS protocol may enforce\n   more\
    \ stringent cryptographic parameters when the session is\n   authenticated.  For\
    \ example, the set of enabled Transport Layer\n   Security (TLS) [RFC5246] cipher\
    \ suites might exclude deprecated\n   algorithms that would be tolerated with\
    \ unauthenticated, encrypted\n   communication.\n   OS protocols should produce\
    \ authenticated, encrypted communication\n   when authentication of the peer is\
    \ \"expected\".  Here, \"expected\"\n   means a determination via a downgrade-resistant\
    \ method that\n   authentication of that peer is expected to work.  Downgrade-resistant\n\
    \   methods include: validated DANE DNS records, existing TOFU identity\n   information,\
    \ and manual configuration.  Such use of authentication is\n   \"opportunistic\"\
    , in that it is performed when possible, on a per-\n   session basis.\n   When\
    \ communicating with a peer that supports encryption but not\n   authentication,\
    \ any authentication checks enabled by default must be\n   disabled or configured\
    \ to soft-fail in order to avoid unnecessary\n   communications failure or needless\
    \ downgrade to cleartext.\n   The support of cleartext and the use of outdated\
    \ algorithms, and\n   especially broken algorithms, is for backwards compatibility\
    \ with\n   systems already deployed.  Protocol designs based on Opportunistic\n\
    \   Security prefer to encrypt and prefer to use the best available\n   encryption\
    \ algorithms available.  OS protocols employ cleartext or\n   broken encryption\
    \ algorithms only with peers that do not appear to be\n   capable of doing otherwise.\
    \  The eventual desire is to transition\n   away from cleartext and broken algorithms,\
    \ and particularly for\n   broken algorithms, it is highly desirable to remove\
    \ such\n   functionality from implementations.\n"
- title: '4.  Example: Opportunistic TLS in SMTP'
  contents:
  - "4.  Example: Opportunistic TLS in SMTP\n   Most Message Transfer Agents (MTAs)\
    \ [RFC5598] support the STARTTLS\n   [RFC3207] ESMTP extension.  MTAs acting as\
    \ SMTP [RFC5321] clients\n   generally support cleartext transmission of email.\
    \  They negotiate\n   TLS encryption when the SMTP server announces STARTTLS support.\n\
    \   Since the initial ESMTP negotiation is not cryptographically\n   protected,\
    \ the STARTTLS advertisement is vulnerable to MiTM downgrade\n   attacks.\n  \
    \ Recent reports from a number of large providers (e.g., [fb-starttls]\n   and\
    \ [goog-starttls]) suggest that the majority of SMTP email\n   transmission on\
    \ the Internet is now encrypted, and the trend is\n   toward increasing adoption.\n\
    \   Various MTAs that advertise STARTTLS exhibit interoperability\n   problems\
    \ in their implementations.  As a work-around, it is common\n   for a client MTA\
    \ to fall back to cleartext when the TLS handshake\n   fails, or when TLS fails\
    \ during message transmission.  This is a\n   reasonable trade-off, since STARTTLS\
    \ only protects against passive\n   attacks.  In the absence of an active attack,\
    \ TLS failures are\n   generally one of the known interoperability problems.\n\
    \   Some client MTAs employing STARTTLS abandon the TLS handshake when\n   the\
    \ server MTA fails authentication and immediately start a cleartext\n   connection.\
    \  Other MTAs have been observed to accept unverified self-\n   signed certificates,\
    \ but not expired certificates; again falling back\n   to cleartext.  These and\
    \ similar behaviors are NOT consistent with OS\n   principles, since they needlessly\
    \ fall back to cleartext when\n   encryption is clearly possible.\n   Protection\
    \ against active attacks for SMTP is described in\n   [SMTP-DANE].  That document\
    \ introduces the terms \"Opportunistic TLS\"\n   and \"Opportunistic DANE TLS\"\
    , and is consistent with the OS design\n   principles defined in this document.\
    \  With \"Opportunistic DANE TLS\",\n   authenticated, encrypted communication\
    \ is enforced with peers for\n   which appropriate DANE records are present. \
    \ For the remaining peers,\n   \"Opportunistic TLS\" is employed as before.\n"
- title: 5.  Operational Considerations
  contents:
  - "5.  Operational Considerations\n   OS protocol designs should minimize the possibility\
    \ of failure of\n   negotiated security mechanisms.  OS protocols may need to\
    \ employ\n   \"fallback\", to work-around a failure of a security mechanisms that\
    \ is\n   found in practice to encounter interoperability problems.  The choice\n\
    \   to implement or enable fallback should only be made in response to\n   significant\
    \ operational obstacles.\n   When protection only against passive attacks is negotiated\
    \ over a\n   channel vulnerable to active downgrade attacks and the use of\n \
    \  encryption fails, a protocol might elect non-intrusive fallback to\n   cleartext.\
    \  Failure to encrypt may be more often a symptom of an\n   interoperability problem\
    \ than an active attack.  In such a situation,\n   occasional fallback to cleartext\
    \ may serve the greater good.  Even\n   though some traffic is sent in the clear,\
    \ the alternative is to ask\n   the administrator or user to manually work-around\
    \ such\n   interoperability problems.  If the incidence of such problems is non-\n\
    \   negligible, the user or administrator might find it more expedient to\n  \
    \ just disable Opportunistic Security.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   OS supports communication that is authenticated\
    \ and encrypted,\n   unauthenticated and encrypted, or cleartext.  And yet the\
    \ security\n   provided to communicating peers is not reduced by the use of OS\n\
    \   because the default OS policy employs the best security services\n   available\
    \ based on the capabilities of the peers, and because\n   explicit security policies\
    \ take precedence over the default OS\n   policy.  OS is an improvement over the\
    \ status quo; it provides better\n   security than the alternative of providing\
    \ no security services when\n   authentication is not possible (and not strictly\
    \ required).\n   While the use of OS is preempted by a non-OS explicit policy,\
    \ such a\n   non-OS policy can be counter-productive when it demands more than\n\
    \   many peers can in fact deliver.  A non-OS policy should be used with\n   care,\
    \ lest users find it too restrictive and act to disable security\n   entirely.\n\
    \   When protocols follow the OS approach, attackers engaged in large-\n   scale\
    \ passive monitoring can no longer just collect everything, and\n   have to be\
    \ more selective and/or mount more active attacks.  In\n   addition, OS means\
    \ active attacks on everyone all the time are much\n   more likely to be noticed.\n\
    \   Specific techniques for detection and mitigation of active attacks in\n  \
    \ the absence of authentication are out of scope for this document.\n   Some existing\
    \ protocols that could support OS may be vulnerable to\n   relatively low-cost\
    \ downgrade attacks for attackers on the path.\n   However, when such attacks\
    \ are employed pervasively in order to\n   facilitate, for example, surveillance,\
    \ this is often detectable;\n   hence, even in such scenarios, OS protocols provide\
    \ a positive\n   benefit.\n   Protocols following the OS approach may need to\
    \ define additional\n   measures to make systematic downgrades less likely to\
    \ succeed or more\n   likely to be detected.  When we have more experience in\
    \ this space,\n   future revisions of this or related documents may be able to\
    \ make\n   more generally applicable recommendations.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC3207]  Hoffman, P., \"SMTP Service Extension\
    \ for Secure SMTP over\n              Transport Layer Security\", RFC 3207, February\
    \ 2002,\n              <http://www.rfc-editor.org/info/rfc3207>.\n   [RFC4033]\
    \  Arends, R., Austein, R., Larson, M., Massey, D., and S.\n              Rose,\
    \ \"DNS Security Introduction and Requirements\", RFC\n              4033, March\
    \ 2005,\n              <http://www.rfc-editor.org/info/rfc4033>.\n   [RFC4251]\
    \  Ylonen, T. and C. Lonvick, \"The Secure Shell (SSH)\n              Protocol\
    \ Architecture\", RFC 4251, January 2006,\n              <http://www.rfc-editor.org/info/rfc4251>.\n\
    \   [RFC4949]  Shirey, R., \"Internet Security Glossary, Version 2\", RFC\n  \
    \            4949, August 2007,\n              <http://www.rfc-editor.org/info/rfc4949>.\n\
    \   [RFC5246]  Dierks, T. and E. Rescorla, \"The Transport Layer Security\n  \
    \            (TLS) Protocol Version 1.2\", RFC 5246, August 2008,\n          \
    \    <http://www.rfc-editor.org/info/rfc5246>.\n   [RFC5321]  Klensin, J., \"\
    Simple Mail Transfer Protocol\", RFC 5321,\n              October 2008, <http://www.rfc-editor.org/info/rfc5321>.\n\
    \   [RFC6698]  Hoffman, P. and J. Schlyter, \"The DNS-Based Authentication\n \
    \             of Named Entities (DANE) Transport Layer Security (TLS)\n      \
    \        Protocol: TLSA\", RFC 6698, August 2012,\n              <http://www.rfc-editor.org/info/rfc6698>.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [RFC5598]  Crocker, D., \"Internet Mail Architecture\"\
    , RFC 5598, July\n              2009, <http://www.rfc-editor.org/info/rfc5598>.\n\
    \   [RFC7258]  Farrell, S. and H. Tschofenig, \"Pervasive Monitoring Is an\n \
    \             Attack\", BCP 188, RFC 7258, May 2014,\n              <http://www.rfc-editor.org/info/rfc7258>.\n\
    \   [SMTP-DANE]\n              Dukhovni, V. and W. Hardaker, \"SMTP security via\n\
    \              opportunistic DANE TLS\", Work in Progress, draft-ietf-\n     \
    \         dane-smtp-with-dane-13, October 2014.\n   [fb-starttls]\n          \
    \    Facebook, \"The Current State of SMTP STARTTLS Deployment\",\n          \
    \    May 2014, <https://www.facebook.com/notes/protect-the-\n              graph/the-current-state-of-smtp-starttls-deployment/\n\
    \              1453015901605223>.\n   [goog-starttls]\n              Google, \"\
    Safer email - Transparency Report - Google\", June\n              2014, <https://www.google.com/transparencyreport/\n\
    \              saferemail/>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   I would like to thank Dave Crocker, Peter Duchovni, Paul\
    \ Hoffman,\n   Benjamin Kaduk, Steve Kent, Scott Kitterman, Pete Resnick, Martin\n\
    \   Thomson, Nico Williams, Paul Wouters, and Stephen Farrell for their\n   many\
    \ helpful suggestions and support.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Viktor Dukhovni\n   Two Sigma\n   EMail: ietf-dane@dukhovni.org\n"
