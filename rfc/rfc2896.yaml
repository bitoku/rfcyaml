- title: __initial_text__
  contents:
  - ''
- title: 'Requests for Comment: 2896                                      C. Bucci'
  contents:
  - "Requests for Comment: 2896                                      C. Bucci\n  \
    \      Remote Network Monitoring MIB Protocol Identifier Macros\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo contains various protocol identifier examples, which can\
    \ be\n   used to produce valid protocolDirTable INDEX encodings, as defined by\n\
    \   the Remote Network Monitoring MIB (Management Information Base)\n   Version\
    \ 2 [RFC2021] and the RMON Protocol Identifier Reference\n   [RFC2895].\n   This\
    \ document contains protocol identifier macros for well-known\n   protocols. \
    \ A conformant implementation of the RMON-2 MIB [RFC2021]\n   can be accomplished\
    \ without the use of these protocol identifiers,\n   and accordingly, this document\
    \ does not specify any IETF standard.\n   It is published to encourage better\
    \ interoperability between RMON-2\n   agent implementations, by providing a great\
    \ deal of RMON related\n   protocol information in one document.\n   The first\
    \ version of the RMON Protocol Identifiers Document [RFC2074]\n   has been split\
    \ into a standards-track Reference portion [RFC2895],\n   and an \"RMON Protocol\
    \ Identifier Macros\", document (this document)\n   which contains the non-normative\
    \ portion of that specification.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   2.4 Relationship to Other MIBs ..................................\
    \  4\n   3 Protocol Identifier Macros ....................................  4\n\
    \   3.1 Protocol Stacks And Single-Vendor Applications ..............  5\n   3.1.1\
    \ The TCP/IP protocol stack .................................  5\n   3.1.2 Novell\
    \ IPX Stack .......................................... 44\n   3.1.3 The XEROX\
    \ Protocol Stack .................................. 49\n   3.1.4 AppleTalk Protocol\
    \ Stack .................................. 51\n   3.1.5 Banyon Vines Protocol\
    \ Stack ............................... 56\n   3.1.6 The DECNet Protocol Stack\
    \ ................................. 61\n   3.1.7 The IBM SNA Protocol Stack. \
    \ .............................. 65\n   3.1.8 The NetBEUI/NetBIOS Family ................................\
    \ 66\n   3.2 Multi-stack protocols ....................................... 70\n\
    \   4 Intellectual Property ......................................... 72\n   5\
    \ Acknowledgements .............................................. 72\n   6 References\
    \ .................................................... 73\n   7 Security Considerations\
    \ ....................................... 82\n   8 Authors' Addresses ............................................\
    \ 83\n   9 Full Copyright Statement ...................................... 84\n"
- title: 1.  The SNMP Network Management Framework
  contents:
  - "1.  The SNMP Network Management Framework\n   The SNMP Management Framework presently\
    \ consists of five major\n   components:\n    o   An overall architecture, described\
    \ in RFC 2571 [RFC2571].\n    o   Mechanisms for describing and naming objects\
    \ and events for the\n        purpose of management. The first version of this\
    \ Structure of\n        Management Information (SMI) is called SMIv1 and described\
    \ in\n        STD 16, RFC 1155 [RFC1155], STD 16, RFC 1212 [RFC1212] and RFC\n\
    \        1215 [RFC1215].  The second version, called SMIv2, is described\n   \
    \     in STD 58, RFC 2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and\n        STD\
    \ 58, RFC 2580 [RFC2580].\n    o   Message protocols for transferring management\
    \ information. The\n        first version of the SNMP message protocol is called\
    \ SNMPv1 and\n        described in STD 15, RFC 1157 [RFC1157]. A second version\
    \ of the\n        SNMP message protocol, which is not an Internet standards track\n\
    \        protocol, is called SNMPv2c and described in RFC 1901 [RFC1901]\n   \
    \     and RFC 1906 [RFC1906]. The third version of the message\n        protocol\
    \ is called SNMPv3 and described in RFC 1906 [RFC1906],\n        RFC 2572 [RFC2572]\
    \ and RFC 2574 [RFC2574].\n    o   Protocol operations for accessing management\
    \ information. The\n        first set of protocol operations and associated PDU\
    \ formats is\n        described in STD 15, RFC 1157 [RFC1157]. A second set o\n\
    \        protocol operations and associated PDU formats is described in\n    \
    \    RFC 1905 [RFC1905].\n    o   A set of fundamental applications described\
    \ in RFC 2573\n        [RFC2573] and the view-based access control mechanism described\n\
    \        in RFC 2575 [RFC2575].\n   A more detailed introduction to the current\
    \ SNMP Management Framework\n   can be found in RFC 2570 [RFC2570].\n   Managed\
    \ objects are accessed via a virtual information store, termed\n   the Management\
    \ Information Base or MIB.  Objects in the MIB are\n   defined using the mechanisms\
    \ defined in the SMI.\n   This memo does not specify a MIB module.\n"
- title: 2.  Overview
  contents:
  - "2.  Overview\n   The RMON-2 MIB [RFC2021] uses hierarchically formatted OCTET\
    \ STRINGs\n   to globally identify individual protocol encapsulations in the\n\
    \   protocolDirTable.\n   This guide contains examples of protocol identifier\
    \ encapsulations,\n   which can be used to describe valid protocolDirTable entries.\
    \  The\n   syntax of the protocol identifier descriptor is defined in the RMON\n\
    \   Protocol Identifier Reference [RFC2895].\n   This document is not intended\
    \ to be an authoritative reference on the\n   protocols described herein. Refer\
    \ to the Official Internet Standards\n   document [RFC2600], the Assigned Numbers\
    \ document [RFC1700], or other\n   appropriate RFCs, IEEE documents, etc. for\
    \ complete and authoritative\n   protocol information.\n   This is the the second\
    \ revision of this document, and is intended to\n   replace Section 5 of the first\
    \ RMON-2 Protocol Identifiers document\n   [RFC2074].\n   The RMONMIB working\
    \ group has decided to discontinue maintenance of\n   this Protocol Identifier\
    \ Macro repository document, due to a lack of\n   contributions from the RMON\
    \ vendor community. This document is\n   published as an aid in implementation\
    \ of the protocolDirTable.\n"
- title: 2.1.  Terms
  contents:
  - "2.1.  Terms\n   Refer to the RMON Protocol Identifier Reference [RFC2895] for\n\
    \   definitions of terms used to describe the Protocol Identifier Macro\n   and\
    \ aspects of protocolDirTable INDEX encoding.\n"
- title: 2.2.  Relationship to the Remote Network Monitoring MIB
  contents:
  - "2.2.  Relationship to the Remote Network Monitoring MIB\n   This document is\
    \ intended to describe some protocol identifier\n   macros, which can be converted\
    \ to valid protocolDirTable INDEX\n   values, using the mapping rules defined\
    \ in the RMON Protocol\n   Identifier Reference [RFC2895].\n   This document is\
    \ not intended to limit the protocols that may be\n   identified for counting\
    \ in the RMON-2 MIB. Many protocol\n   encapsulations, not explicitly identified\
    \ in this document, may be\n   present in an actual implementation of the protocolDirTable.\
    \ Also,\n   implementations of the protocolDirTable may not include all the\n\
    \   protocols identified in the example section below.\n"
- title: 2.3.  Relationship to the RMON Protocol Identifier Reference
  contents:
  - "2.3.  Relationship to the RMON Protocol Identifier Reference\n   This document\
    \ is intentionally separated from the normative reference\n   document defining\
    \ protocolDirTable INDEX encoding rules and the\n   protocol identifier macro\
    \ syntax [RFC2895].  This allows frequent\n   updates to this document without\
    \ any republication of MIB objects or\n   protocolDirTable INDEX encoding rules.\
    \  Note that the base layer and\n   IANA assigned protocol identifier macros are\
    \ located in Reference\n   document, since these encoding values are defined by\
    \ the RMONMIB WG.\n   Protocol Identifier macros submitted from the RMON working\
    \ group and\n   community at large (to the RMONMIB WG mailing list at '\n   rmonmib@cisco.com')\
    \ will be collected and added to this document.\n   Macros submissions will be\
    \ collected in the IANA's MIB files under\n   the directory \"ftp://ftp.isi.edu/mib/rmonmib/rmon2_pi_macros/\"\
    \ and in\n   the RMONMIB working group mailing list message archive file\n   \"\
    ftp://ftpeng.cisco.com/ftp/rmonmib/rmonmib\".\n"
- title: 2.4.  Relationship to Other MIBs
  contents:
  - "2.4.  Relationship to Other MIBs\n   The RMON Protocol Identifier Macros document\
    \ is intended for use with\n   the RMON Protocol Identifier Reference [RFC2895]\
    \ and the RMON-2 MIB\n   protocolDirTable [RFC2021]. It is not relevant to any\
    \ other MIB, or\n   intended for use with any other MIB.\n"
- title: 3.  Protocol Identifier Macros
  contents:
  - "3.  Protocol Identifier Macros\n   This section contains protocol identifier\
    \ macros for some well-known\n   protocols, although some of them may no longer\
    \ be in use.  These\n   macros reference the base layer identifiers found in section\
    \ 4 of the\n   RMON Protocol Identifier Reference [RFC2895].  These identifiers\
    \ are\n   listed below:\n         ether2\n         llc\n         snap\n      \
    \   vsnap\n         ianaAssigned\n         802-1Q\n   Refer to the RMON Protocol\
    \ Identifier Reference [RFC2895] for the\n   protocol identifier macro definitions\
    \ for these protocols.\n"
- title: 3.1.  Protocol Stacks And Single-Vendor Applications
  contents:
  - "3.1.  Protocol Stacks And Single-Vendor Applications\n   Network layer protocol\
    \ identifier macros contain additional\n   information about the network layer,\
    \ and is found immediately\n   following a base layer-identifier in a protocol\
    \ identifier.\n   The ProtocolDirParameters supported at the network layer are\
    \ '\n   countsFragments(0)', and 'tracksSessions(1).  An agent may choose to\n\
    \   implement a subset of these parameters.\n   The protocol-name should be used\
    \ for the ProtocolDirDescr field.  The\n   ProtocolDirType ATTRIBUTES used at\
    \ the network layer are '\n   hasChildren(0)' and 'addressRecognitionCapable(1)'.\
    \ Agents may choose\n   to implement a subset of these attributes for each protocol,\
    \ and\n   therefore limit which tables the indicated protocol can be present\n\
    \   (e.g. protocol distribution, host, and matrix tables).\n   The following protocol-identifier\
    \ macro declarations are given for\n   example purposes only. They are not intended\
    \ to constitute an\n   exhaustive list or an authoritative source for any of the\
    \ protocol\n   information given.  However, any protocol that can encapsulate\
    \ other\n   protocols must be documented here in order to encode the children\n\
    \   identifiers into protocolDirID strings. Leaf protocols should be\n   documented\
    \ as well, but an implementation can identify a leaf\n   protocol even if it isn't\
    \ listed here (as long as the parent is\n   documented).\n"
- title: 3.1.1.  The TCP/IP protocol stack
  contents:
  - '3.1.1.  The TCP/IP protocol stack

    '
- title: arp PROTOCOL-IDENTIFIER
  contents:
  - "arp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"An Address Resolution Protocol message (request or response).\n    \
    \   This protocol does not include Reverse ARP (RARP) packets, which\n       are\
    \ counted separately.\"\n    REFERENCE\n       \"RFC 826 [RFC826] defines the\
    \ Address Resolution Protocol.\"\n    ::= {\n     ether2 0x806,   -- [ 0.0.8.6\
    \ ]\n     snap   0x806,\n     802-1Q 0x806    -- [ 0.0.8.6 ]\n    }\n"
- title: ip PROTOCOL-IDENTIFIER
  contents:
  - "ip PROTOCOL-IDENTIFIER\n    PARAMETERS {\n       countsFragments(0)  -- This\
    \ parameter applies to all child\n                           -- protocols.\n \
    \   }\n    ATTRIBUTES {\n     hasChildren(0),\n     addressRecognitionCapable(1)\n\
    \    }\n    DESCRIPTION\n       \"The protocol identifiers for the Internet Protocol\
    \ (IP). Note\n       that IP may be encapsulated within itself, so more than one\
    \ of\n       the following identifiers may be present in a particular\n      \
    \ protocolDirID string.\"\n    CHILDREN\n       \"Children of 'ip' are selected\
    \ by the value in the Protocol field\n       (one octet), as defined in the PROTOCOL\
    \ NUMBERS table within the\n       Assigned Numbers Document.\n       The value\
    \ of the Protocol field is encoded in an octet string as\n       [ 0.0.0.a ],\
    \ where 'a' is the protocol field .\n       Children of 'ip' are encoded as [\
    \ 0.0.0.a ], and named as 'ip a'\n       where 'a' is the protocol field value.\
    \  For example, a\n       protocolDirID-fragment value of:\n          0.0.0.1.0.0.8.0.0.0.0.1\n\
    \       defines an encapsulation of ICMP (ether2.ip.icmp)\"\n    ADDRESS-FORMAT\n\
    \       \"4 octets of the IP address, in network byte order.  Each ip\n      \
    \ packet contains two addresses, the source address and the\n       destination\
    \ address.\"\n    DECODING\n       \"Note: ether2.ip.ipip4.udp is a different\
    \ protocolDirID than\n       ether2.ip.udp, as identified in the protocolDirTable.\
    \  As such,\n       two different local protocol index values will be assigned\
    \ by the\n       agent. E.g. (full INDEX values shown):\n        ether2.ip.ipip4.udp\
    \ =\n            16.0.0.0.1.0.0.8.0.0.0.0.4.0.0.0.17.4.0.0.0.0\n        ether2.ip.udp\
    \ =\n            12.0.0.0.1.0.0.8.0.0.0.0.17.3.0.0.0 \"\n    REFERENCE\n     \
    \  \"RFC 791 [RFC791] defines the Internet Protocol; The following\n       URL\
    \ defines the authoritative repository for the PROTOCOL NUMBERS\n       Table:\n\
    \          ftp://ftp.isi.edu/in-notes/iana/assignments/protocol-numbers\"\n  \
    \  ::= {\n       ether2     0x0800,\n       llc        0x06,\n       snap    \
    \   0x0800,\n          -- ip         4,           ** represented by the ipip4\
    \ macro\n          -- ip         94,          ** represented by the ipip macro\n\
    \       802-1Q     0x0800,         -- [0.0.8.0]\n       802-1Q     0x02000006\
    \      -- 1Q-LLC [2.0.0.6]\n    }\n -- ****************************************************************\n\
    \ --\n --                        Children of IP\n --\n -- ****************************************************************\n"
- title: icmp PROTOCOL-IDENTIFIER
  contents:
  - "icmp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Internet Message Control Protocol\"\n    REFERENCE\n       \"RFC 792\
    \ [RFC792] defines the Internet Control Message Protocol.\"\n    ::= {\n     ip\
    \ 1,\n     ipip4 1,\n     ipip 1\n    }\n"
- title: igmp PROTOCOL-IDENTIFIER
  contents:
  - "igmp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Internet Group Management Protocol; IGMP is used by IP hosts to\n  \
    \     report their host group memberships to any immediately-\n       neighboring\
    \ multicast routers.\"\n    REFERENCE\n       \"Appendix A of Host Extensions\
    \ for IP Multicasting [RFC1112]\n       defines the Internet Group Management\
    \ Protocol.\"\n    ::= {\n     ip 2,\n     ipip4 2,\n     ipip 2\n    }\n"
- title: ggp PROTOCOL-IDENTIFIER
  contents:
  - "ggp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Gateway-to-Gateway Protocol; DARPA Internet Gateway\n       (historical)\"\
    \n    REFERENCE\n       \"RFC 823 [RFC823] defines the Gateway-to-Gateway Protocol.\"\
    \n    ::= {\n     ip 3,\n     ipip4 3,\n     ipip 3\n    }\n"
- title: ipip4 PROTOCOL-IDENTIFIER
  contents:
  - "ipip4 PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES {\n     hasChildren(0),\n\
    \     addressRecognitionCapable(1)\n    }\n    DESCRIPTION\n       \"IP in IP\
    \ Tunneling\"\n    CHILDREN\n       \"Children of 'ipip4' are selected and encoded\
    \ in the same manner\n       as children of IP.\"\n    ADDRESS-FORMAT\n      \
    \ \"The 'ipip4' address format is the same as the IP address\n       format.\"\
    \n    DECODING\n       \"Note: ether2.ip.ipip4.udp is a different protocolDirID\
    \ than\n       ether2.ip.udp, as identified in the protocolDirTable.  As such,\n\
    \       two different local protocol index values will be assigned by the\n  \
    \     agent. E.g. (full INDEX values shown):\n        ether2.ip.ipip4.udp =\n\
    \            16.0.0.0.1.0.0.8.0.0.0.0.4.0.0.0.17.4.0.0.0.0\n        ether2.ip.udp\
    \ =\n            12.0.0.0.1.0.0.8.0.0.0.0.17.3.0.0.0 \"\n    REFERENCE\n     \
    \  \"RFC 1853 [RFC1853] defines IP in IP over Protocol 4.\"\n    ::= {\n     ip\
    \ 4,\n     ipip4 4,\n     ipip 4\n    }\n"
- title: st PROTOCOL-IDENTIFIER
  contents:
  - "st PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Internet Stream Protocol Version 2 (ST2); (historical) ST2 is an\n \
    \      experimental resource reservation protocol intended to provide\n      \
    \ end-to-end real-time guarantees over an internet.\"\n    REFERENCE\n       \"\
    RFC 1819 [RFC1819] defines version 2 of the Internet Stream\n       Protocol.\"\
    \n    ::= {\n     ip 5,\n     ipip4 5,\n     ipip 5\n    }\n"
- title: tcp  PROTOCOL-IDENTIFIER
  contents:
  - "tcp  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES {\n      hasChildren(0)\n\
    \    }\n    DESCRIPTION\n       \"Transmission Control Protocol\"\n    CHILDREN\n\
    \       \"Children of TCP are identified by the 16 bit Source or\n       Destination\
    \ Port value as specified in RFC 793. They are encoded\n       as [ 0.0.a.b],\
    \ where 'a' is the MSB and 'b' is the LSB of the\n       port value. Both bytes\
    \ are encoded in network byte order.  For\n       example, a protocolDirId-fragment\
    \ of:\n           0.0.0.1.0.0.8.0.0.0.0.6.0.0.0.23\n       identifies an encapsulation\
    \ of the telnet protocol\n       (ether2.ip.tcp.telnet)\"\n    REFERENCE\n   \
    \    \"RFC 793 [RFC793] defines the Transmission Control Protocol.\n       The\
    \ following URL defines the authoritative repository for\n       reserved and\
    \ registered TCP port values:\n         ftp://ftp.isi.edu/in-notes/iana/assignments/port-numbers\"\
    \n    ::=  {\n     ip 6,\n     ipip4 6,\n     ipip 6\n    }\n"
- title: egp PROTOCOL-IDENTIFIER
  contents:
  - "egp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Exterior Gateway Protocol (historical)\"\n    REFERENCE\n       \"RFC\
    \ 904 [RFC904] defines the Exterior Gateway Protocol.\"\n    ::= {\n     ip  8,\n\
    \     ipip4  8,\n     ipip  8\n    }\n"
- title: igp PROTOCOL-IDENTIFIER
  contents:
  - "igp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Any private interior gateway.\"\n    REFERENCE\n       \"[RFC1700]\"\
    \n    ::= {\n     ip  9,\n     ipip4  9,\n     ipip  9\n    }\n"
- title: nvp2 PROTOCOL-IDENTIFIER
  contents:
  - "nvp2 PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"NVP-II; Network Voice Protocol\"\n    REFERENCE\n       \"RFC 741 [RFC741]\
    \ defines the Network Voice Protocol\"\n    ::= {\n     ip 11,\n     ipip4 11,\n\
    \     ipip 11\n    }\n"
- title: pup PROTOCOL-IDENTIFIER
  contents:
  - "pup PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"PUP Protocol\"\n    REFERENCE\n       \"Xerox\"\n    ::= {\n     ip\
    \ 12,\n     ipip4 12,\n     ipip 12\n    }\n"
- title: xnet PROTOCOL-IDENTIFIER
  contents:
  - "xnet PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Cross Net Debugger (historical)\"\n    REFERENCE\n       \"[IEN158]\"\
    \n    ::= {\n     ip  15,\n     ipip4  15,\n     ipip  15\n    }\n"
- title: chaos PROTOCOL-IDENTIFIER
  contents:
  - "chaos PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"CHAOS Protocol; historical\"\n    REFERENCE\n       \"J. Noel Chiappa\
    \  <JNC@XX.LCS.MIT.EDU>\"\n    ::= {\n     ip 16,\n     ipip4 16,\n     ipip 16\n\
    \    }\n"
- title: udp  PROTOCOL-IDENTIFIER
  contents:
  - "udp  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES {\n      hasChildren(0)\n\
    \    }\n    DESCRIPTION\n       \"User Datagram Protocol\"\n    CHILDREN\n   \
    \    \"Children of UDP are identified by the 16 bit Source or\n       Destination\
    \ Port value as specified in RFC 768. They are encoded\n       as [ 0.0.a.b ],\
    \ where 'a' is the MSB and 'b' is the LSB of the\n       port value. Both bytes\
    \ are encoded in network byte order.  For\n       example, a protocolDirId-fragment\
    \ of:\n           0.0.0.1.0.0.8.0.0.0.0.17.0.0.0.161\n       identifies an encapsulation\
    \ of SNMP (ether2.ip.udp.snmp)\"\n    REFERENCE\n       \"RFC 768 [RFC768] defines\
    \ the User Datagram Protocol.\n       The following URL defines the authoritative\
    \ repository for\n       reserved and registered UDP port values:\n         ftp://ftp.isi.edu/in-notes/iana/assignments/port-numbers\"\
    \n   ::= {\n     ip 17,\n     ipip4 17,\n     ipip 17\n    }\n"
- title: mux PROTOCOL-IDENTIFIER
  contents:
  - "mux PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Multiplexing Protocol (historical)\"\n    REFERENCE\n       \"IEN-90\
    \ [IEN-90] defines the Multiplexing Protocol\"\n    ::= {\n     ip 18,\n     ipip4\
    \ 18,\n     ipip 18\n    }\n"
- title: hmp PROTOCOL-IDENTIFIER
  contents:
  - "hmp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Host Monitoring Protocol; historical\"\n    REFERENCE\n       \"RFC\
    \ 869 [RFC869] defines the Host Monitoring Protocol\"\n    ::= {\n     ip  20,\n\
    \     ipip4  20,\n     ipip  20\n    }\n"
- title: xns-idp PROTOCOL-IDENTIFIER
  contents:
  - "xns-idp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"XEROX NS IDP\"\n    REFERENCE\n       \"Xerox Corporation\"\n    ::=\
    \ {\n     ip  22,\n     ipip4  22,\n     ipip  22\n    }\n"
- title: rdp PROTOCOL-IDENTIFIER
  contents:
  - "rdp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Reliable Data Protocol\"\n    REFERENCE\n       \"RFC 908 [RFC908] defines\
    \ the original protocol; RFC 1151\n       [RFC1151] defines version 2 of the Reliable\
    \ Data Protocol.\"\n    ::= {\n     ip 27,\n     ipip4 27,\n     ipip 27\n   \
    \ }\n"
- title: irtp PROTOCOL-IDENTIFIER
  contents:
  - "irtp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Internet Reliable Transaction Protocol\"\n    REFERENCE\n       \"RFC\
    \ 938 [RFC938] defines the Internet Reliable Transaction\n       Protocol functional\
    \ and  interface specification.\"\n    ::= {\n     ip 28,\n     ipip4 28,\n  \
    \   ipip 28\n    }\n"
- title: iso-tp4  PROTOCOL-IDENTIFIER
  contents:
  - "iso-tp4  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"ISO Transport Protocol Specification\"\n    REFERENCE\n       \"RFC\
    \ 905 [RFC905] defines the ISO Transport Protocol\n       Specification; ISO DP\
    \ 8073\"\n    ::= {\n     ip  29,\n     ipip4  29,\n     ipip  29\n    }\n"
- title: netblt PROTOCOL-IDENTIFIER
  contents:
  - "netblt PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Bulk Data Transfer Protocol; historical\"\n    REFERENCE\n       \"\
    RFC 998 [RFC998] defines NETBLT: A Bulk Data Transfer Protocol.\"\n    ::= {\n\
    \     ip 30,\n     ipip4 30,\n     ipip 30\n    }\n"
- title: mfe-nsp PROTOCOL-IDENTIFIER
  contents:
  - "mfe-nsp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"MFE Network Services Protocol; historical\"\n    REFERENCE\n       \"\
    Shuttleworth, B., 'A Documentary of MFENet, a National Computer\n       Network',\
    \ UCRL-52317, Lawrence Livermore Labs, Livermore,\n       California, June 1977.\"\
    \n    ::= {\n     ip 31,\n     ipip4 31,\n     ipip 31\n    }\n"
- title: idpr PROTOCOL-IDENTIFIER
  contents:
  - "idpr PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Inter-Domain Policy Routing Protocol\"\n    REFERENCE\n       \"RFC\
    \ 1479 [RFC1479] defines Version 1 of the Inter-Domain Policy\n       Routing\
    \ Protocol.\"\n    ::= {\n     ip 35,\n     ipip4 35,\n     ipip 35\n    }\n"
- title: idpr-cmtp PROTOCOL-IDENTIFIER
  contents:
  - "idpr-cmtp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"IDPR Control Message Transport Protocol\"\n    REFERENCE\n       \"\
    RFC 1479 [RFC1479] defines Version 1 of the Inter-Domain Policy\n       Routing\
    \ Protocol.\"\n    ::= {\n     ip 38,\n     ipip4 38,\n     ipip 38\n    }\n"
- title: sdrp PROTOCOL-IDENTIFIER
  contents:
  - "sdrp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Source Demand Routing Protocol\"\n    REFERENCE\n       \"RFC 1940 [RFC1940]\
    \ defines version 1 of the Source Demand\n       Routing: Packet Format and Forwarding\
    \ Specification\"\n    ::= {\n     ip 42,\n     ipip4 42,\n     ipip 42\n    }\n"
- title: idrp PROTOCOL-IDENTIFIER
  contents:
  - "idrp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Inter-Domain Routing Protocol\"\n    REFERENCE\n       \"RFC 1745 [RFC1745]\
    \ defines BGP4/IDRP for IP.\"\n    ::= {\n     ip 45,\n     ipip4 45,\n     ipip\
    \ 45\n    }\n"
- title: rsvp PROTOCOL-IDENTIFIER
  contents:
  - "rsvp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Resource Reservation Setup Protocol\"\n    REFERENCE\n       \"Resource\
    \ ReSerVation Protocol (RSVP); Version 1 Functional\n        Specification [RFC2205].\"\
    \n    ::= {\n     ip 46,\n     ipip4 46,\n     ipip 46\n    }\n"
- title: gre PROTOCOL-IDENTIFIER
  contents:
  - "gre PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"General Routing Encapsulation\"\n    REFERENCE\n        \"RFC 1701 [RFC1701]\
    \ defines Generic Routing Encapsulation (GRE);\n       RFC 1702 [RFC1702] defines\
    \ Generic Routing Encapsulation over\n       IPv4 networks\"\n    ::= {\n    \
    \ ip 47,\n     ipip4 47,\n     ipip 47\n    }\n"
- title: nhrp PROTOCOL-IDENTIFIER
  contents:
  - "nhrp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"NBMA Next Hop Resolution Protocol (NHRP)\"\n    REFERENCE\n       \"\
    RFC 2332 [RFC2332] defines the Next Hop Resolution Protocol.\"\n    ::= {\n  \
    \   ip 54,\n     ipip4 54,\n     ipip 54\n    }\n"
- title: priv-host PROTOCOL-IDENTIFIER
  contents:
  - "priv-host PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Pseudo-protocol reserved for any internal host protocol.\"\n    REFERENCE\n\
    \       \"[RFC1700]\"\n    ::= {\n     ip 61,\n     ipip4 61,\n     ipip 61\n\
    \    }\n"
- title: priv-net PROTOCOL-IDENTIFIER
  contents:
  - "priv-net PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Pseudo-protocol reserved for any local network protocol.\"\n    REFERENCE\n\
    \       \"[RFC1700]\"\n    ::= {\n     ip 63,\n     ipip4 63,\n     ipip 63\n\
    \    }\n"
- title: priv-distfile PROTOCOL-IDENTIFIER
  contents:
  - "priv-distfile PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n \
    \   DESCRIPTION\n       \"Pseudo-protocol reserved for any distributed file system.\"\
    \n    REFERENCE\n       \"[RFC1700]\"\n    ::= {\n     ip 68,\n     ipip4 68,\n\
    \     ipip 68\n    }\n"
- title: dgp PROTOCOL-IDENTIFIER
  contents:
  - "dgp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Dissimilar Gateway Protocol\"\n    REFERENCE\n       \"M/A-COM Government\
    \ Systems, 'Dissimilar Gateway Protocol\n       Specification, Draft Version',\
    \ Contract no. CS901145, November\n       16, 1987.\"\n    ::= {\n     ip 86,\n\
    \     ipip4 86,\n     ipip 86\n    }\n"
- title: igrp PROTOCOL-IDENTIFIER
  contents:
  - "igrp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"IGRP; Cisco routing protocol\"\n    REFERENCE\n       \"Cisco Systems,\
    \ Inc.\"\n    ::= {\n     ip 88,\n     ipip4 88,\n     ipip 88\n    }\n"
- title: ospf PROTOCOL-IDENTIFIER
  contents:
  - "ospf PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Open Shortest Path First Interior GW Protocol (OSPFIGP).\"\n    REFERENCE\n\
    \       \"RFC 1583 [RFC1583] defines version 2 of the OSPF protocol.\"\n    ::=\
    \ {\n     ip 89,\n     ipip4 89,\n     ipip 89\n    }\n"
- title: mtp PROTOCOL-IDENTIFIER
  contents:
  - "mtp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Multicast Transport Protocol\"\n    REFERENCE\n       \"RFC 1301 [RFC1301]\
    \ defines the Multicast Transport Protocol.\"\n    ::= {\n     ip 92,\n     ipip4\
    \ 92,\n     ipip 92\n    }\n"
- title: ax-25 PROTOCOL-IDENTIFIER
  contents:
  - "ax-25 PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"AX.25 Frame Encapsulation\"\n    REFERENCE\n       \"RFC 1226 [RFC1226]\
    \ defines Internet Protocol Encapsulation of\n       AX.25 Frames.\"\n    ::=\
    \ {\n     ip 93,\n     ipip4 93,\n     ipip 93\n    }\n"
- title: ipip PROTOCOL-IDENTIFIER
  contents:
  - "ipip PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES {\n     hasChildren(0),\n\
    \     addressRecognitionCapable(1)\n    }\n    DESCRIPTION\n       \"IP-within-IP\
    \ Encapsulation Protocol\"\n    CHILDREN\n       \"Children of 'ipip' are selected\
    \ and encoded in the same manner\n       as children of IP.\"\n    ADDRESS-FORMAT\n\
    \       \"The 'ipip' address format is the same as the IP address format.\"\n\
    \    DECODING\n       \"Note: ether2.ip.ipip.udp is a different protocolDirID\
    \ than\n       ether2.ip.udp, as identified in the protocolDirTable.  As such,\n\
    \       two different local protocol index values will be assigned by the\n  \
    \     agent. E.g. (full INDEX values shown):\n        ether2.ip.ipip.udp =\n \
    \           16.0.0.0.1.0.0.8.0.0.0.0.94.0.0.0.17.4.0.0.0.0\n        ether2.ip.udp\
    \ =\n            12.0.0.0.1.0.0.8.0.0.0.0.17.3.0.0.0 \"\n    REFERENCE\n     \
    \  \"RFC 2003 [RFC2003] defines IP Encapsulation within IP.\"\n    ::= {\n   \
    \  ip 94,\n     ipip4 94,\n     ipip 94\n    }\n"
- title: encap PROTOCOL-IDENTIFIER
  contents:
  - "encap PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Encapsulation Header; A Scheme for an Internet Encapsulation\n     \
    \  Protocol: Version 1\"\n    REFERENCE\n       \"RFC 1241 [RFC1241] defines version\
    \ 1 of the ENCAP Protocol.\"\n    ::= {\n     ip 98,\n     ipip4 98,\n     ipip\
    \ 98\n    }\n"
- title: priv-encript PROTOCOL-IDENTIFIER
  contents:
  - "priv-encript PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n  \
    \  DESCRIPTION\n       \"Pseudo-protocol reserved for any private encryption scheme.\"\
    \n    REFERENCE\n       \"[RFC1700]\"\n    ::= {\n     ip 99,\n     ipip4 99,\n\
    \     ipip 99\n    }\n -- ****************************************************************\n\
    \ --\n --                    Children of UDP and TCP\n --\n -- ****************************************************************\n"
- title: tcpmux  PROTOCOL-IDENTIFIER
  contents:
  - "tcpmux  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"TCP Port Service Multiplexer Port.\"\n    REFERENCE\n       \"RFC 1078\
    \ [RFC1078] defines the TCP Port Service Multiplexer\n       Protocol.\"\n   \
    \ ::= { tcp 1 }\n"
- title: rje  PROTOCOL-IDENTIFIER
  contents:
  - "rje  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Remote Job Entry Protocol; RJE Logger Port; (historical).\"\n    REFERENCE\n\
    \       \"RFC 407 [RFC407] defines the Remote Job Entry Protocol.\"\n    ::= {\
    \ tcp 5 }\n"
- title: echo  PROTOCOL-IDENTIFIER
  contents:
  - "echo  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Echo Protocol for debugging  TCP and UDP transports.\"\n    REFERENCE\n\
    \       \"RFC 862 [RFC862] defines the Echo Protocol.\"\n    ::= {\n       tcp\
    \ 7,\n       udp 7  }\n"
- title: discard  PROTOCOL-IDENTIFIER
  contents:
  - "discard  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Discard Protocol for debugging TCP and UDP transports.\"\n    REFERENCE\n\
    \       \"RFC 863 [RFC863] defines the Discard Protocol.\"\n    ::= {\n      \
    \ tcp 9,\n       udp 9  }\n"
- title: systat  PROTOCOL-IDENTIFIER
  contents:
  - "systat  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Retrieve the Active Users list; a debugging tool for TCP and UDP\n \
    \      transports.\"\n    REFERENCE\n       \"RFC 866 [RFC866] defines the Active\
    \ Users Protocol.\"\n    ::= {\n       tcp 11,\n       udp 11  }\n"
- title: daytime  PROTOCOL-IDENTIFIER
  contents:
  - "daytime  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Retrieve the current time of day; a debugging tool for TCP and\n   \
    \    UDP transports.\"\n    REFERENCE\n       \"RFC 867 [RFC867] defines the Daytime\
    \ Protocol.\"\n    ::= {\n       tcp 13,\n       udp 13  }\n"
- title: qotd  PROTOCOL-IDENTIFIER
  contents:
  - "qotd  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Quote of the Day Protocol; retrieve a short message (up to 512\n   \
    \    bytes); a debugging tool for TCP and UDP transports.\"\n    REFERENCE\n \
    \      \"RFC 865 [RFC865] defines the Quote of the Day Protocol.\"\n    ::= {\n\
    \       tcp 17,\n       udp 17  }\n"
- title: msp  PROTOCOL-IDENTIFIER
  contents:
  - "msp  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Message Send Protocol\"\n    REFERENCE\n       \"RFC 1312 [RFC1312]\
    \ defines the Message Send Protocol.\"\n    ::= {\n       tcp 18,\n       udp\
    \ 18  }\n"
- title: chargen  PROTOCOL-IDENTIFIER
  contents:
  - "chargen  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Character Generator Protocol; a debugging tool for TCP and UDP\n   \
    \    transports.\"\n    REFERENCE\n       \"RFC 864 [RFC864] defines the Character\
    \ Generator Protocol.\"\n    ::= {\n       tcp 19,\n       udp 19  }\n"
- title: ftp-data PROTOCOL-IDENTIFIER
  contents:
  - "ftp-data PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"The File Transfer Protocol Data Port; the FTP Server process\n     \
    \  default data-connection port. \"\n    REFERENCE\n       \"RFC 959 [RFC959]\
    \ defines the File Transfer Protocol.  Refer to\n       section 3.2 of [RFC959]\
    \ for details on FTP data connections.\"\n    ::= { tcp 20 }\n"
- title: ftp PROTOCOL-IDENTIFIER
  contents:
  - "ftp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"The File Transfer Protocol Control Port; An FTP client initiates\n \
    \      an FTP control connection by sending FTP commands from user port\n    \
    \   (U) to this port.\"\n    REFERENCE\n       \"RFC 959 [RFC959] defines the\
    \ File Transfer Protocol.\"\n    ::= { tcp 21 }\n"
- title: telnet PROTOCOL-IDENTIFIER
  contents:
  - "telnet PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"The Telnet Protocol; The purpose of the TELNET Protocol is to\n    \
    \   provide a fairly general, bi-directional, eight-bit byte oriented\n      \
    \ communications facility.  Its primary goal is to allow a standard\n       method\
    \ of interfacing terminal devices and terminal-oriented\n       processes to each\
    \ other. \"\n    REFERENCE\n       \"RFC 854 [RFC854] defines the basic Telnet\
    \ Protocol.\"\n    ::= { tcp 23 }\n"
- title: priv-mail PROTOCOL-IDENTIFIER
  contents:
  - "priv-mail PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Pseudo-protocol reserved for any private mail system.\"\n    REFERENCE\n\
    \       \"[RFC1700]\"\n    ::= { tcp 24,\n       udp 24 }\n"
- title: smtp PROTOCOL-IDENTIFIER
  contents:
  - "smtp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"The Simple Mail Transfer Protocol; SMTP control and data\n       messages\
    \ are sent on this port.\"\n    REFERENCE\n       \"RFC 821 [RFC821] defines the\
    \ basic Simple Mail Transfer\n       Protocol.\"\n    ::= { tcp 25 }\n"
- title: priv-print PROTOCOL-IDENTIFIER
  contents:
  - "priv-print PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Pseudo-protocol reserved for any private printer server.\"\n    REFERENCE\n\
    \       \"[RFC1700]\"\n    ::= { tcp 35,\n       udp 35  }\n"
- title: time PROTOCOL-IDENTIFIER
  contents:
  - "time PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Time Protocol\"\n    REFERENCE\n       \"RFC 868 [RFC868] defines the\
    \ Time Protocol.\"\n    ::= { tcp 37,\n       udp 37 }\n"
- title: rap PROTOCOL-IDENTIFIER
  contents:
  - "rap PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Route Access Protocol\"\n    REFERENCE\n       \"RFC 1476 [RFC1476]\
    \ defines the Internet Route Access Protocol.\"\n    ::= { tcp 38 }\n"
- title: rlp PROTOCOL-IDENTIFIER
  contents:
  - "rlp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Resource Location Protocol\"\n    REFERENCE\n       \"RFC 887 [RFC887]\
    \ defines the Resource Location Protocol.\"\n    ::= { udp 39 }\n"
- title: graphics PROTOCOL-IDENTIFIER
  contents:
  - "graphics PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Graphics Protocol\"\n    REFERENCE\n       \"RFC 493 [RFC493] defines\
    \ the Graphics Protocol.\"\n    ::= { tcp 41,\n       udp 41  }\n"
- title: nameserver  PROTOCOL-IDENTIFIER
  contents:
  - "nameserver  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n   \
    \ DESCRIPTION\n       \"Host Name Server Protocol\"\n    REFERENCE\n       \"\
    IEN 116 [IEN116] defines the Internet Name Server.\"\n    ::= { udp 42 }\n"
- title: nicname  PROTOCOL-IDENTIFIER
  contents:
  - "nicname  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"NICNAME/WHOIS Protocol\"\n    REFERENCE\n       \"RFC 954 [RFC954] defines\
    \ the NICNAME/Who Is Protocol.\"\n    ::= { tcp 43 }\n"
- title: mpm-flags  PROTOCOL-IDENTIFIER
  contents:
  - "mpm-flags  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"MPM FLAGS Protocol; (historical).\"\n    REFERENCE\n       \"RFC 759\
    \ [RFC759] defines the Message Processing Module.\"\n    ::= { tcp 44 }\n"
- title: mpm  PROTOCOL-IDENTIFIER
  contents:
  - "mpm  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Message Processing Module -- Receiver; (historical).\"\n    REFERENCE\n\
    \       \"RFC 759 [RFC759] defines the Message Processing Module.\"\n    ::= {\
    \ tcp 45 }\n"
- title: mpm-snd  PROTOCOL-IDENTIFIER
  contents:
  - "mpm-snd  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Message Processing Module -- Default Send; (historical).\"\n    REFERENCE\n\
    \       \"RFC 759 [RFC759] defines the Message Processing Module.\"\n    ::= {\
    \ tcp 46 }\n"
- title: tacacs  PROTOCOL-IDENTIFIER
  contents:
  - "tacacs  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Login Host Protocol (TACACS)\"\n    REFERENCE\n       \"An Access Control\
    \ Protocol, Sometimes Called TACACS [RFC1492].\"\n    ::= { tcp 49 }\n"
- title: re-mail-ck  PROTOCOL-IDENTIFIER
  contents:
  - "re-mail-ck  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n   \
    \ DESCRIPTION\n       \"Remote Mail Checking Protocol\"\n    REFERENCE\n     \
    \  \"RFC 1339 [RFC1339] defines the Remote Mail Checking Protocol.\"\n    ::=\
    \ { udp 50 }\n"
- title: xns-time  PROTOCOL-IDENTIFIER
  contents:
  - "xns-time  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"XNS Time Protocol\"\n    REFERENCE\n       \"Xerox Corporation\"\n \
    \   ::= { tcp 52,\n       udp 52 }\n"
- title: domain PROTOCOL-IDENTIFIER
  contents:
  - "domain PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Domain Name Service Protocol; DNS may be transported by either\n   \
    \    UDP [RFC768] or TCP [RFC793].  If the transport is UDP, DNS\n       requests\
    \ restricted to 512 bytes in length may be sent to this\n       port.\"\n    REFERENCE\n\
    \       \"RFC 1035 [RFC1035] defines the Bootstrap Protocol.\"\n    ::= { udp\
    \ 53,\n       tcp 53  }\n"
- title: xns-ch PROTOCOL-IDENTIFIER
  contents:
  - "xns-ch PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"XNS Clearinghouse\"\n    REFERENCE\n       \"Xerox Corporation\"\n \
    \   ::= { tcp 54,\n       udp 54 }\n"
- title: xns-auth PROTOCOL-IDENTIFIER
  contents:
  - "xns-auth PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"XNS Authentication Protocol\"\n    REFERENCE\n       \"Xerox Corporation\"\
    \n    ::= { tcp 56,\n       udp 56 }\n"
- title: priv-term PROTOCOL-IDENTIFIER
  contents:
  - "priv-term PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Pseudo-protocol reserved for any private terminal access\n       protocol.\"\
    \n    REFERENCE\n       \"[RFC1700]\"\n    ::= { tcp 57,\n       udp 57 }\n"
- title: xns-mail PROTOCOL-IDENTIFIER
  contents:
  - "xns-mail PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"XNS Mil Protocol\"\n    REFERENCE\n       \"Xerox Corporation\"\n  \
    \  ::= { tcp 58,\n       udp 58 }\n"
- title: priv-file PROTOCOL-IDENTIFIER
  contents:
  - "priv-file PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Pseudo-protocol reserved for any private file service.\"\n    REFERENCE\n\
    \       \"[RFC1700]\"\n    ::= { tcp 59,\n       udp 59 }\n"
- title: tacacs-ds PROTOCOL-IDENTIFIER
  contents:
  - "tacacs-ds PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Default Server Port; TACACS Access Control Protocol Database\n     \
    \  Service.\"\n    REFERENCE\n       \"RFC 1492 [RFC1492] defines the TACACS Protocol.\"\
    \n    ::= { tcp 65 }\n"
- title: sqlnet PROTOCOL-IDENTIFIER
  contents:
  - "sqlnet PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Oracle SQL*NET\"\n    REFERENCE\n       \"Oracle Corporation\"\n   \
    \ ::= { tcp 66 }\n"
- title: bootps PROTOCOL-IDENTIFIER
  contents:
  - "bootps PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Bootstrap Protocol Server Protocol; BOOTP Clients send requests\n  \
    \     (usually broadcast) to the bootps port.\"\n    REFERENCE\n       \"RFC 951\
    \ [RFC951] defines the Bootstrap Protocol.\"\n    ::= { udp 67 }\n"
- title: bootpc PROTOCOL-IDENTIFIER
  contents:
  - "bootpc PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Bootstrap Protocol Client Protocol; BOOTP Server replies are\n     \
    \  sent to the BOOTP Client using this destination port.\"\n    REFERENCE\n  \
    \     \"RFC 951 [RFC951] defines the Bootstrap Protocol.\"\n    ::= { udp 68 }\n"
- title: tftp PROTOCOL-IDENTIFIER
  contents:
  - "tftp PROTOCOL-IDENTIFIER\n    PARAMETERS {\n     tracksSessions(1)\n    }\n \
    \   ATTRIBUTES { }\n    DESCRIPTION\n       \"Trivial File Transfer Protocol;\
    \ Only the first packet of each\n       TFTP transaction will be sent to port\
    \ 69. If the tracksSessions\n       attribute is set, then packets for each TFTP\
    \ transaction will be\n       attributed to tftp, instead of the unregistered\
    \ port numbers that\n       will be encoded in subsequent packets.\"\n    REFERENCE\n\
    \       \"RFC 1350 [RFC1350] defines the TFTP Protocol (revision 2);\n       \
    \ RFC 1782 [RFC1782] defines TFTP Option Extensions;\n        RFC 1783 [RFC1783]\
    \ defines the TFTP Blocksize Option;\n        RFC 1784 [RFC1784] defines TFTP\
    \ Timeout Interval and Transfer\n        Size  Options.\"\n    ::= { udp 69 }\n"
- title: gopher PROTOCOL-IDENTIFIER
  contents:
  - "gopher PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Internet Gopher Protocol\"\n    REFERENCE\n       \"RFC 1436 [RFC1436]\
    \ defines the Gopher Protocol.\"\n    ::= { tcp 70 }\n"
- title: netrjs-1 PROTOCOL-IDENTIFIER
  contents:
  - "netrjs-1 PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Remote Job Service Protocol; (historical).\"\n    REFERENCE\n      \
    \ \"RFC 740 [RFC740] defines the NETRJS Protocol.\"\n    ::= { tcp 71 }\n"
- title: netrjs-2 PROTOCOL-IDENTIFIER
  contents:
  - "netrjs-2 PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Remote Job Service Protocol; (historical).\"\n    REFERENCE\n      \
    \ \"RFC 740 [RFC740] defines the NETRJS Protocol.\"\n    ::= { tcp 72 }\n"
- title: netrjs-3 PROTOCOL-IDENTIFIER
  contents:
  - "netrjs-3 PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Remote Job Service Protocol; (historical).\"\n    REFERENCE\n      \
    \ \"RFC 740 [RFC740] defines the NETRJS Protocol.\"\n    ::= { tcp 73 }\n"
- title: netrjs-4 PROTOCOL-IDENTIFIER
  contents:
  - "netrjs-4 PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Remote Job Service Protocol; (historical).\"\n    REFERENCE\n      \
    \ \"RFC 740 [RFC740] defines the NETRJS Protocol.\"\n    ::= { tcp 74 }\n"
- title: priv-dialout PROTOCOL-IDENTIFIER
  contents:
  - "priv-dialout PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n  \
    \  DESCRIPTION\n       \"Pseudo-protocol reserved for any private dial out service.\"\
    \n    REFERENCE\n       \"[RFC1700]\"\n    ::= { tcp 75,\n       udp 75 }\n"
- title: priv-rje PROTOCOL-IDENTIFIER
  contents:
  - "priv-rje PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Pseudo-protocol reserved for any private remote job entry\n       service.\"\
    \n    REFERENCE\n       \"[RFC1700]\"\n    ::= { tcp 77,\n       udp 77 }\n"
- title: finger PROTOCOL-IDENTIFIER
  contents:
  - "finger PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Finger User Information Protocol\"\n    REFERENCE\n       \"RFC 1288\
    \ [RFC1288] defines the finger protocol.\"\n    ::= { tcp 79 }\n"
- title: www-http PROTOCOL-IDENTIFIER
  contents:
  - "www-http PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Hypertext Transfer Protocol\"\n    REFERENCE\n       \"RFC 1945 [RFC1945]\
    \ defines the Hypertext Transfer Protocol\n"
- title: (HTTP/1.0).
  contents:
  - "(HTTP/1.0).\n        RFC 2068 [RFC2068] defines the Hypertext Transfer Protocol\n"
- title: (HTTP/1.1).
  contents:
  - "(HTTP/1.1).\n        RFC 2069 [RFC2069] defines an Extension to HTTP: Digest\
    \ Access\n           Authentication.\n        RFC 2109 [RFC2109] defines the HTTP\
    \ State Management Mechanism.\n        RFC 2145 [RFC2145] defines the use and\
    \ interpretation of HTTP\n           version numbers.\"\n    ::= { tcp 80 }\n"
- title: priv-termlink PROTOCOL-IDENTIFIER
  contents:
  - "priv-termlink PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n \
    \   DESCRIPTION\n       \"Pseudo-protocol reserved for any private terminal link\n\
    \       protocol.\"\n    REFERENCE\n       \"[RFC1700]\"\n    ::= { tcp 87,\n\
    \       udp 87 }\n"
- title: kerberos PROTOCOL-IDENTIFIER
  contents:
  - "kerberos PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"The Kerberos Network Authentication Service (V5)\"\n    REFERENCE\n\
    \       \"RFC 1510 [RFC1510] defines the Kerberos protocol.\"\n    ::= { udp 88\
    \ }\n"
- title: supdup PROTOCOL-IDENTIFIER
  contents:
  - "supdup PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"SUPDUP Display; (historical)\"\n    REFERENCE\n       \"RFC 734 [RFC734]\
    \ defines the SUPDUP Protocol.\"\n    ::= { tcp 95 }\n"
- title: dixie PROTOCOL-IDENTIFIER
  contents:
  - "dixie PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"DIXIE Directory Service\"\n    REFERENCE\n       \"RFC 1249 [RFC1249]\
    \ defines the DIXIE Protocol.\"\n    ::= { tcp 96,\n       udp 96 }\n"
- title: hostname  PROTOCOL-IDENTIFIER
  contents:
  - "hostname  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"NIC Internet Hostname Server Protocol; (historical)\"\n    REFERENCE\n\
    \       \"RFC 953 [RFC953] defines the Hostname Server Protocol.\"\n    ::= {\
    \ tcp 101 }\n"
- title: 3com-tsmux PROTOCOL-IDENTIFIER
  contents:
  - "3com-tsmux PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"3COM-TSMUX\"\n    REFERENCE\n       \"3Com, Inc.\"\n    ::= { tcp 106,\n\
    \       udp 106 }\n"
- title: rtelnet  PROTOCOL-IDENTIFIER
  contents:
  - "rtelnet  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Remote User Telnet Protocol; (historical).\"\n    REFERENCE\n      \
    \ \"RFC 818 [RFC818] defines the Remote User Telnet Service.\"\n    ::= { tcp\
    \ 107 }\n"
- title: pop2 PROTOCOL-IDENTIFIER
  contents:
  - "pop2 PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Post Office Protocol -- Version 2. Clients establish connections\n \
    \      with POP2 servers by using this destination port number.\n       Historical.\"\
    \n    REFERENCE\n       \"RFC 937 [RFC937] defines Version 2 of the Post Office\
    \ Protocol.\"\n    ::= { tcp 109 }\n"
- title: pop3 PROTOCOL-IDENTIFIER
  contents:
  - "pop3 PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Post Office Protocol -- Version 3. Clients establish connections\n \
    \      with POP3 servers by using this destination port number.\"\n    REFERENCE\n\
    \       \"RFC 1725 [RFC1725] defines Version 3 of the Post Office\n       Protocol.\"\
    \n    ::= { tcp 110,\n       udp 110 }     -- RFC defines tcp use\n"
- title: sunrpc PROTOCOL-IDENTIFIER
  contents:
  - "sunrpc PROTOCOL-IDENTIFIER\n    PARAMETERS {\n        tracksSessions(1) -- learn\
    \ port mapping of programs\n    }\n    ATTRIBUTES {\n        hasChildren(0)  \
    \ -- port mapper function numbers\n    }\n    DESCRIPTION\n       \"SUN Remote\
    \ Procedure Call Protocol. Port mapper function\n       requests are sent to this\
    \ destination port.\"\n    CHILDREN\n       \"Specific RPC functions are represented\
    \ as children of the sunrpc\n       protocol.  Each 'RPC function protocol' is\
    \ identified by its\n       function number assignment. RPC function number assignments\
    \ are\n       defined by different naming authorities, depending on the\n    \
    \   function identifier value.\n       From [RFC1831]:\n       Program numbers\
    \ are given out in groups of hexadecimal 20000000\n       (decimal 536870912)\
    \ according to the following chart:\n                     0 - 1fffffff   defined\
    \ by rpc@sun.com\n              20000000 - 3fffffff   defined by user\n      \
    \        40000000 - 5fffffff   transient\n              60000000 - 7fffffff  \
    \ reserved\n              80000000 - 9fffffff   reserved\n              a0000000\
    \ - bfffffff   reserved\n              c0000000 - dfffffff   reserved\n      \
    \        e0000000 - ffffffff   reserved\n       Children of 'sunrpc' are encoded\
    \ as [ 0.0.0.111], the protocol\n       identifier component for 'sunrpc', followed\
    \ by [ a.b.c.d ], where\n       a.b.c.d is the 32 bit binary RPC program number\
    \ encoded in\n       network byte order.  For example, a protocolDirID-fragment\
    \ value\n       of:\n           0.0.0.111.0.1.134.163\n       defines the NFS\
    \ function (and protocol).\n       Children are named as 'sunrpc' followed by\
    \ the RPC function\n       number in base 10 format. For example, NFS would be\
    \ named:\n           'sunrpc 100003'.\"\n    DECODING\n       \"The first packet\
    \ of many SUNRPC transactions is sent to the\n       port- mapper program, and\
    \ therefore decoded statically by\n       monitoring RFC portmap requests [RFC1831].\
    \ Any subsequent packets\n       must be decoded and correctly identified by 'remembering'\
    \ the\n       port assignments used in each RPC function call (as identified\n\
    \       according to the procedures in the RPC Specification Version 2\n     \
    \  [RFC1831]).\n       In some cases the port mapping for a particular protocol\
    \ is well\n       known and hard coded into the requesting client.  In these cases\n\
    \       the client will not send portmap requests; instead it will send\n    \
    \   the SUNRPC request directly to the well known port.  These cases\n       are\
    \ rare and are being eliminated over time.  NFS is the most\n       significant\
    \ SUNRPC program of this class.  Such programs should\n       still be declared\
    \ as children of SUNRPC as described under\n       CHILDREN above.  How an implementation\
    \ detects this behaviour and\n       handles it is beyond the scope of this document.\n\
    \       The 'tracksSessions(1)' PARAMETER bit is used to indicate whether\n  \
    \     the probe can (and should) monitor portmapper activity to\n       correctly\
    \ track SUNRPC connections.\"\n    REFERENCE\n       \"RFC 1831 [RFC1831] defines\
    \ the Remote Procedure Call Protocol\n       Version 2.  The authoritative list\
    \ of RPC Functions is identified\n       by the URL:\n           ftp://ftp.isi.edu/in-notes/iana/assignments/sun-rpc-numbers\"\
    \n    ::= { tcp 111,\n       udp 111 }\n"
- title: auth PROTOCOL-IDENTIFIER
  contents:
  - "auth PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Authentication Service; Identification Protocol.\"\n    REFERENCE\n\
    \       \"RFC 1413 [RFC1413] defines the Identification Protocol.\"\n    ::= {\
    \ tcp 113 }\n"
- title: sftp PROTOCOL-IDENTIFIER
  contents:
  - "sftp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Simple File Transfer Protocol; (historical).\"\n    REFERENCE\n    \
    \   \"RFC 913 [RFC913] defines the Simple File Transfer Protocol.\"\n    ::= {\
    \ tcp 115 }\n"
- title: uucp-path  PROTOCOL-IDENTIFIER
  contents:
  - "uucp-path  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"UUCP Path Service\"\n    REFERENCE\n       \"RFC 915 [RFC915] defines\
    \ the Network Mail Path Service.\"\n    ::= { tcp 117 }\n"
- title: nntp PROTOCOL-IDENTIFIER
  contents:
  - "nntp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Network News Transfer Protocol\"\n    REFERENCE\n       \"RFC 977 [RFC977]\
    \ defines the Network News Transfer Protocol.\"\n    ::= { tcp 119 }\n"
- title: cfdptkt PROTOCOL-IDENTIFIER
  contents:
  - "cfdptkt PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"CFDPTKT; Coherent File Distribution Protocol\"\n    REFERENCE\n    \
    \   \"RFC 1235 [RFC1235] defines the Coherent File Distribution\n       Protocol.\"\
    \n    ::= { udp 120 }\n"
- title: ntp PROTOCOL-IDENTIFIER
  contents:
  - "ntp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Network Time Protocol\"\n    REFERENCE\n       \"RFC 1305 [RFC1305]\
    \ defines version 3 of the Network Time\n       Protocol.\"\n    ::= { udp 123\
    \ }\n"
- title: pwdgen  PROTOCOL-IDENTIFIER
  contents:
  - "pwdgen  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Password Generator Protocol\"\n    REFERENCE\n       \"RFC 972 [RFC972]\
    \ defines the Password Generator Protocol.\"\n    ::= { tcp 129,\n       udp 129\
    \  }\n"
- title: cisco-fna  PROTOCOL-IDENTIFIER
  contents:
  - "cisco-fna  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"cisco FNATIVE\"\n    REFERENCE\n       \"Cisco Systems, Inc.\"\n   \
    \ ::= { tcp 130,\n       udp 130 }\n"
- title: cisco-tna  PROTOCOL-IDENTIFIER
  contents:
  - "cisco-tna  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"cisco TNATIVE\"\n    REFERENCE\n       \"Cisco Systems, Inc.\"\n   \
    \ ::= { tcp 131,\n       udp 131 }\n"
- title: cisco-sys  PROTOCOL-IDENTIFIER
  contents:
  - "cisco-sys  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"cisco SYSMAINT\"\n    REFERENCE\n       \"Cisco Systems, Inc.\"\n  \
    \  ::= { tcp 132,\n       udp 132 }\n"
- title: statsrv  PROTOCOL-IDENTIFIER
  contents:
  - "statsrv  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Statistics Server; (historical).\"\n    REFERENCE\n       \"RFC 996\
    \ [RFC996] defines the Statistics Server Protocol.\"\n    ::= { tcp 133,\n   \
    \    udp 133 }\n -- defined as nbt-name in IPX section\n -- netbios-ns      137/tcp\
    \    NETBIOS Name Service\n -- netbios-ns      137/udp    NETBIOS Name Service\n\
    \ -- defined as nbt-data in IPX section\n -- netbios-dgm     138/tcp    NETBIOS\
    \ Datagram Service\n -- netbios-dgm     138/udp    NETBIOS Datagram Service\n\
    \ -- defined as nbt-session in IPX section\n -- netbios-ssn     139/tcp    NETBIOS\
    \ Session Service\n -- netbios-ssn     139/udp    NETBIOS Session Service\n"
- title: imap2  PROTOCOL-IDENTIFIER
  contents:
  - "imap2  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Interactive Mail Access Protocol v2;\n        Internet Message Access\
    \ Protocol v4 (IMAP4) also uses this\n       server port.\"\n    REFERENCE\n \
    \      \"RFC 1064 [RFC1064] defines Version 2 of the Interactive Mail\n      \
    \ Access\n        Protocol.\n        RFC 1730 [RFC1730] defines Version 4 of the\
    \ Internet Message\n       Access\n        Protocol.\"\n    ::= { tcp 143 }\n"
- title: iso-tp0  PROTOCOL-IDENTIFIER
  contents:
  - "iso-tp0  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"ISO-IP0; ISO-TP0 bridge between TCP and X.25\"\n    REFERENCE\n    \
    \   \"RFC 1086 [RFC1086] defines the ISO-TP0 protocol.\"\n    ::= { tcp 146,\n\
    \       udp 146 }\n"
- title: iso-ip  PROTOCOL-IDENTIFIER
  contents:
  - "iso-ip  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"ISO-IP; Use of the Internet as a Subnetwork for Experimentation\n  \
    \     with the OSI Network Layer\"\n    REFERENCE\n       \"RFC 1070 [RFC1070]\
    \ defines the ISO-IP Protocol.\"\n    ::= { tcp 147,\n       udp 147 }\n"
- title: hems  PROTOCOL-IDENTIFIER
  contents:
  - "hems  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"HEMS; High Level Entity Management System; (historical).\"\n    REFERENCE\n\
    \       \"RFC 1021 [RFC1021] defines HEMS.\"\n    ::= { tcp 151 }\n"
- title: bftp  PROTOCOL-IDENTIFIER
  contents:
  - "bftp  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Background File Transfer Program\"\n    REFERENCE\n       \"RFC 1068\
    \ [RFC1068] defines the Background File Transfer\n       Program.\"\n    ::= {\
    \ tcp 152 }\n"
- title: sgmp  PROTOCOL-IDENTIFIER
  contents:
  - "sgmp  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Simple Gateway Monitoring Protocol; (historical).\"\n    REFERENCE\n\
    \       \"RFC 1028 [RFC1028] defines the Simple Gateway Monitoring\n       Protocol.\"\
    \n    ::= { udp 153 }\n"
- title: pcmail-srv  PROTOCOL-IDENTIFIER
  contents:
  - "pcmail-srv  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n   \
    \ DESCRIPTION\n       \"PCMail Server; Distributed Mail System Protocol (DMSP)\"\
    \n    REFERENCE\n       \"RFC 1056 [RFC1056] defines the PCMAIL Protocol.\"\n\
    \    ::= { tcp 158 }\n"
- title: sgmp-traps  PROTOCOL-IDENTIFIER
  contents:
  - "sgmp-traps  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n   \
    \ DESCRIPTION\n       \"Simple Gateway Monitoring Protocol Traps; (historical).\"\
    \n    REFERENCE\n       \"RFC 1028 [RFC1028] defines the Simple Gateway Monitoring\n\
    \       Protocol.\"\n    ::= { udp 160 }\n -- snmp and snmptrap found in the Protocol-Independent\
    \ section\n -- snmp            161/udp    SNMP\n -- snmptrap        162/udp  \
    \  SNMPTRAP\n"
- title: cmip-man  PROTOCOL-IDENTIFIER
  contents:
  - "cmip-man  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"CMIP/TCP (CMOT) Manager; (historical).\"\n    REFERENCE\n       \"RFC\
    \ 1095 [RFC1095] defines the Common Management Information\n       Services and\
    \ Protocol over TCP/IP.\"\n    ::= { tcp 163,\n       udp 163 }\n"
- title: cmip-agent  PROTOCOL-IDENTIFIER
  contents:
  - "cmip-agent  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n   \
    \ DESCRIPTION\n       \"CMIP/TCP (CMOT) Agent; (historical).\"\n    REFERENCE\n\
    \       \"RFC 1095 [RFC1095] defines the Common Management Information\n     \
    \  Services and Protocol over TCP/IP.\"\n    ::= { tcp 164,\n       udp 164 }\n"
- title: xdmcp PROTOCOL-IDENTIFIER
  contents:
  - "xdmcp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"X Display Manager Control Protocol\"\n    REFERENCE\n       \"X11 Consortium\"\
    \n    ::= { udp 177 }\n"
- title: bgp  PROTOCOL-IDENTIFIER
  contents:
  - "bgp  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Border Gateway Protocol\"\n    REFERENCE\n       \"RFC 1267 [RFC1267]\
    \ defines version 3 of the Border Gateway\n       Protocol.\"\n    ::= { tcp 179\
    \ }\n"
- title: remote-kis  PROTOCOL-IDENTIFIER
  contents:
  - "remote-kis  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n   \
    \ DESCRIPTION\n       \"Remote-Knowbot Information Service (KIS)\"\n    REFERENCE\n\
    \       \"RFC 1739 [RFC1739] describes the KNOWBOT Protocol.\"\n    ::= { tcp\
    \ 185,\n       udp 185 }\n"
- title: kis  PROTOCOL-IDENTIFIER
  contents:
  - "kis  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Knowbot Information Service (KIS)\"\n    REFERENCE\n       \"RFC 1739\
    \ [RFC1739] describes the KNOWBOT Protocol.\"\n    ::= { tcp 186,\n       udp\
    \ 186 }\n"
- title: irc  PROTOCOL-IDENTIFIER
  contents:
  - "irc  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Internet Relay Chat Protocol\"\n    REFERENCE\n       \"RFC 1459 [RFC1459]\
    \ defines the Internet Relay Chat Protocol.\"\n    ::= { tcp 194,\n       udp\
    \ 194 }\n"
- title: smux PROTOCOL-IDENTIFIER
  contents:
  - "smux PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"SMUX; SNMP MUX Protocol and MIB; (historical).\"\n    REFERENCE\n  \
    \     \"RFC 1227 [RFC1227] defines the SMUX Protocol.\"\n    ::= { tcp 199 }\n\
    \ --\n -- AppleTalk applications are defined in the AppleTalk Stack section\n\
    \ --\n -- at-rtmp         201/tcp    AppleTalk Routing Maintenance\n -- at-rtmp\
    \         201/udp    AppleTalk Routing Maintenance\n -- at-nbp          202/tcp\
    \    AppleTalk Name Binding\n -- at-nbp          202/udp    AppleTalk Name Binding\n\
    \ -- at-3            203/tcp    AppleTalk Unused\n -- at-3            203/udp\
    \    AppleTalk Unused\n -- at-echo         204/tcp    AppleTalk Echo\n -- at-echo\
    \         204/udp    AppleTalk Echo\n -- at-5            205/tcp    AppleTalk\
    \ Unused\n -- at-5            205/udp    AppleTalk Unused\n -- at-zis        \
    \  206/tcp    AppleTalk Zone Information\n -- at-zis          206/udp    AppleTalk\
    \ Zone Information\n -- at-7            207/tcp    AppleTalk Unused\n -- at-7\
    \            207/udp    AppleTalk Unused\n -- at-8            208/tcp    AppleTalk\
    \ Unused\n -- at-8            208/udp    AppleTalk Unused\n"
- title: z39-50 PROTOCOL-IDENTIFIER
  contents:
  - "z39-50 PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"ANSI Z39.50\"\n    REFERENCE\n       \"RFC 1729 [RFC1729] describes\
    \ the Z39.50 Protocol.\"\n    ::= { tcp 210 }\n"
- title: ipx-tunnel  PROTOCOL-IDENTIFIER
  contents:
  - "ipx-tunnel  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n   \
    \ DESCRIPTION\n       \"Tunneling IPX Traffic through IP Networks\"\n    REFERENCE\n\
    \       \"RFC 1234 [RFC1234] defines the IPX Tunnel Protocol.\"\n    ::= { udp\
    \ 213 }\n"
- title: mpp  PROTOCOL-IDENTIFIER
  contents:
  - "mpp  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Netix Message Posting Protocol\"\n    REFERENCE\n       \"RFC 1204 [RFC1204]\
    \ defines the Message Posting Protocol.\"\n    ::= { tcp 218 }\n"
- title: imap3  PROTOCOL-IDENTIFIER
  contents:
  - "imap3  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Interactive Mail Access Protocol v3; (historical).\"\n    REFERENCE\n\
    \       \"RFC 1203 [RFC1203] defines version 3 of the Interactive Mail\n     \
    \  Access Protocol.\"\n    ::= { tcp 220 }\n"
- title: ldap  PROTOCOL-IDENTIFIER
  contents:
  - "ldap  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Lightweight Directory Access Protocol\"\n    REFERENCE\n       \"RFC\
    \ 1777 [RFC1777] defines Lightweight Directory Access\n       Protocol; RFC 1798\
    \ [RFC1798] defines Connection-less Lightweight\n       X.500 Directory Access\
    \ Protocol\"\n    ::= { tcp 389,       -- RFC 1777\n       udp 389  }        --\
    \ RFC 1798\n"
- title: mobileip-agent  PROTOCOL-IDENTIFIER
  contents:
  - "mobileip-agent  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n\
    \    DESCRIPTION\n       \"IP Mobility Support\"\n    REFERENCE\n       \"RFC\
    \ 2002 [RFC2002] defines the IP Mobility Support protocol.\"\n    ::= { udp 434\
    \ }\n"
- title: https  PROTOCOL-IDENTIFIER
  contents:
  - "https  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Secure HTTP; HTTP over TLS/SSL\"\n    REFERENCE\n       \"Netscape;\
    \ http://home.netscape.com/eng/ssl3/\"\n    ::= { tcp 443 }\n"
- title: smtps  PROTOCOL-IDENTIFIER
  contents:
  - "smtps  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"SMTP protocol over TLS/SSL\"\n    REFERENCE\n       \"Netscape; http://home.netscape.com/eng/ssl3/\"\
    \n    ::= { tcp 465 }\n"
- title: isakmp  PROTOCOL-IDENTIFIER
  contents:
  - "isakmp  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Internet Security Association and Key Management Protocol\n       (ISAKMP)\"\
    \n    REFERENCE\n       \"RFC 2408 [RFC2408]\"\n    ::= { udp 500 }\n"
- title: login  PROTOCOL-IDENTIFIER
  contents:
  - "login  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"BSD Rlogin; remote login a la telnet\"\n    REFERENCE\n       \"RFC\
    \ 1282 [RFC1282] defines the BSD Rlogin Protocol.\"\n    ::= { tcp 513 }\n"
- title: syslog  PROTOCOL-IDENTIFIER
  contents:
  - "syslog  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"syslog\"\n    REFERENCE\n       \"[RFC1700]\"\n    ::= { udp 514 }\n"
- title: uucp  PROTOCOL-IDENTIFIER
  contents:
  - "uucp  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Unix-to-Unix copy protocol\"\n    REFERENCE\n       \"[RFC1700]\"\n\
    \    ::= { tcp 540 }\n"
- title: doom  PROTOCOL-IDENTIFIER
  contents:
  - "doom  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"DOOM Game;\"\n    REFERENCE\n       \" Id Software\"\n    ::= { tcp\
    \ 666 }\n"
- title: radius  PROTOCOL-IDENTIFIER
  contents:
  - "radius  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Remote Authentication Dial In User Service (RADIUS)\"\n    REFERENCE\n\
    \       \"RFC 2138 [RFC2138] defines the Radius protocol.\"\n    ::= { udp 1812\
    \ }\n"
- title: radiusacct  PROTOCOL-IDENTIFIER
  contents:
  - "radiusacct  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n   \
    \ DESCRIPTION\n       \"RADIUS Accounting Protocol\"\n    REFERENCE\n       \"\
    RFC 2139 [RFC2139] defines the Radius Accounting protocol.\"\n    ::= { udp 1813\
    \ }\n --\n -- Portmapper Functions; Children of sunrpc\n --\n"
- title: portmapper PROTOCOL-IDENTIFIER
  contents:
  - "portmapper PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"SUNRPC PORTMAPPER program.  This is the SUNRPC program which is\n  \
    \     used to locate the UDP/TCP ports on which other SUNRPC programs\n      \
    \ can be found.\"\n    REFERENCE\n       \"Appendix A of RFC 1057 [RFC1057] describes\
    \ the portmapper\n       operation.\"\n    ::= { sunrpc 100000 }\n"
- title: nfs  PROTOCOL-IDENTIFIER
  contents:
  - "nfs  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Sun Network File System (NFS);\"\n    DECODING\n       \"NFS is a SUNRPC\
    \ program which may or may not use the port mapper\n       SUNRPC program to connect\
    \ clients and servers.  In many cases the\n       NFS server program runs over\
    \ UDP/TCP port 2049, but an\n       implementation is encouraged to perform further\
    \ analysis before\n       assuming that a packet to/from this port is a SUNRPC/NFS\
    \ packet.\n       Likewise an implementation is encouraged to track port mapper\n\
    \       activity to spot cases where it is used to locate the SUNRPC/NFS\n   \
    \    program as this is more robust.\"\n    REFERENCE\n       \"The NFS Version\
    \ 3 Protocol Specification is defined in RFC 1813\n       [RFC1813].\"\n    ::=\
    \ {\n     sunrpc 100003       --  [0.1.134.163]\n    }\n"
- title: xwin PROTOCOL-IDENTIFIER
  contents:
  - "xwin PROTOCOL-IDENTIFIER\n    PARAMETERS {\n        tracksSessions(1)\n    }\n\
    \    ATTRIBUTES { }\n    DESCRIPTION\n       \"X Windows Protocol\"\n    DECODING\n\
    \       \"The X Windows Protocol when run over UDP/TCP normally runs over\n  \
    \     the well known port 6000.  It can run over any port in the range\n     \
    \  6000 to 6063, however.  If the tracksSessions(1) parameter bit is\n       set\
    \ the agent can and should detect such X Window sessions and\n       report them\
    \ as the X protocol.\"\n    REFERENCE\n         \"The X Windows Protocol is defined\
    \ by TBD\"\n    ::= {\n      tcp 6000,\n      udp 6000\n      -- lat ?\n    }\n"
- title: 3.1.2.  Novell IPX Stack
  contents:
  - '3.1.2.  Novell IPX Stack

    '
- title: ipx PROTOCOL-IDENTIFIER
  contents:
  - "ipx PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES {\n      hasChildren(0),\n\
    \      addressRecognitionCapable(1)\n    }\n    DESCRIPTION\n       \"Novell IPX\"\
    \n    CHILDREN\n       \"Children of IPX are defined by the 8 bit packet type\
    \ field.  The\n       value is encoded into an octet string as [ 0.0.0.a ], where\
    \ 'a'\n       is the single octet of the packet type field.\n       Notice that\
    \ in many implementations of IPX usage of the packet\n       type field is inconsistent\
    \ with the specification and\n       implementations are encouraged to use other\
    \ techniques to map\n       inconsistent values to the correct value (which in\
    \ these cases is\n       typically the Packet Exchange Protocol).  It is beyond\
    \ the scope\n       of this document to describe these techniques in more detail.\n\
    \       Children of IPX are encoded as [ 0.0.0.a ], and named as 'ipx a'\n   \
    \    where a is the packet type value.  The novell echo protocol is\n       referred\
    \ to as 'ipx nov-echo' OR 'ipx 2'.\"\n    ADDRESS-FORMAT\n       \"4 bytes of\
    \ Network number followed by the 6 bytes Host address\n       each in network\
    \ byte order.\"\n    REFERENCE\n       \"The IPX protocol is defined by the Novell\
    \ Corporation\n       A complete description of IPX may be secured at the following\n\
    \       address:\n              Novell, Inc.\n              122 East 1700 South\n\
    \              P. O. Box 5900\n              Provo, Utah 84601 USA\n         \
    \     800 526 5463\n              Novell Part # 883-000780-001\"\n    ::= {\n\
    \        ether2       0x8137,       -- [0.0.129.55]\n           snap         0x8137,\
    \       -- [0.0.129.55]\n           ianaAssigned 1,            -- [0.0.0.1]  \
    \ (ipxOverRaw8023)\n        llc          224,          -- [0.0.0.224]\n      \
    \     802-1Q       0x8137,       -- [0.0.129.55]\n        802-1Q       0x020000e0,\
    \   -- 1Q-LLC [2.0.0.224]\n           802-1Q       0x05000001    -- 1Q-IANA [5.0.0.1]\n\
    \                                      -- (ipxOverRaw8023)\n    }\n"
- title: nov-rip PROTOCOL-IDENTIFIER
  contents:
  - "nov-rip PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Novell Routing Information Protocol\"\n    REFERENCE\n       \"Novell\
    \ Corporation\"\n    ::= {\n        ipx 0x01,       -- when reached by IPX packet\
    \ type\n        nov-pep 0x0453  -- when reached by IPX socket number\n    }\n"
- title: nov-echo PROTOCOL-IDENTIFIER
  contents:
  - "nov-echo PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Novell Echo Protocol\"\n    REFERENCE\n       \"Novell Corporation\"\
    \n    ::= { ipx 0x02 }\n"
- title: nov-error PROTOCOL-IDENTIFIER
  contents:
  - "nov-error PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Novell Error-handler Protocol\"\n    REFERENCE\n       \"Novell Corporation\"\
    \n    ::= { ipx 0x03 }\n"
- title: nov-pep PROTOCOL-IDENTIFIER
  contents:
  - "nov-pep PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES {\n     hasChildren(0)\n\
    \    }\n    DESCRIPTION\n       \"Novell Packet Exchange Protocol.  This is really\
    \ a null protocol\n       layer as all IPX packets contain the relevant fields\
    \ for this\n       protocol.  This protocol is defined so that socket-based decoding\n\
    \       has a point of attachment in the decode tree while still allowing\n  \
    \     packet type based decoding also.\"\n    CHILDREN\n       \"Children of PEP\
    \ are defined by the 16 bit socket values.  The\n       value is encoded into\
    \ an octet string as [ 0.0.a.b ], where 'a'\n       and 'b' are the network byte\
    \ order encodings of the MSB and LSB\n       of the socket value.\n       Each\
    \ IPX/PEP packet contains two sockets, source and destination.\n       How these\
    \ are mapped onto the single well-known socket value used\n       to identify\
    \ its children is beyond the scope of this document.\"\n    REFERENCE\n      \
    \ \"Novell Corporation\"\n    ::= {\n     -- ipx 0x00     ** Many third party\
    \ IPX's use this value always\n     ipx 0x04        -- Xerox assigned for PEP\n\
    \     -- ipx 0x11     ** Novell use this for PEP packets, often\n    }\n"
- title: nov-spx PROTOCOL-IDENTIFIER
  contents:
  - "nov-spx PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES {\n    hasChildren(0)\n\
    \ }\n    DESCRIPTION\n       \"Novell Sequenced Packet Exchange Protocol.  This\
    \ protocol is an\n       extension of IPX/PEP as it shares a common header.\"\n\
    \    CHILDREN\n       \"Children of SPX are defined by the 16 bit socket values.\
    \  The\n       value is encoded into an octet string as [ 0.0.a.b ], where 'a'\n\
    \       and 'b' are the network byte order encodings of the MSB and LSB\n    \
    \   of the socket value.\n       Each IPX/SPX packet contains two sockets, source\
    \ and destination.\n       How these are mapped onto the single well-known socket\
    \ value used\n       to identify its children is beyond the scope of this document.\"\
    \n    REFERENCE\n       \"Novell Corporation\"\n    ::= {\n     ipx 0x05 -- Xerox\
    \ assigned for SPX\n    }\n"
- title: nov-sap PROTOCOL-IDENTIFIER
  contents:
  - "nov-sap PROTOCOL-IDENTIFIER\n    PARAMETERS {\n     tracksSessions(1)\n    }\n\
    \    ATTRIBUTES {\n     hasChildren(0)\n    }\n    DESCRIPTION\n       \"Novell\
    \ Service Advertising Protocol.  This protocol binds\n       applications on a\
    \ particular host to an IPX/PEP or IPX/SPX socket\n       number.  Although it\
    \ never truly acts as a transport protocol\n       itself it is used to establish\
    \ sessions between clients and\n       servers and barring well-known sockets\
    \ is the only reliable way\n       to determine the protocol running over a given\
    \ socket on a given\n       machine.\"\n    CHILDREN\n       \"Children of SAP\
    \ are identified by a 16 bit service type.  They\n       are encoded as [ 0.0.a.b\
    \ ], where 'a' is the MSB and 'b' is the\n       LSB of the service type.\n  \
    \     Children of SAP are named as 'nov-sap a' where 'a' is the service\n    \
    \   type in hexadecimal notation.  The novell NCP protocol is\n       referred\
    \ to as 'nov-sap ncp' OR 'nov-sap 0x0004'.\"\n    DECODING\n       \"The first\
    \ packet of any session for a SAP based application\n       (almost all IPX/PEP\
    \ and IPX/SPX based applications utilize SAP)\n       is sent to the SAP server(s)\
    \ to map the service type into a port\n       number for the host(s) on which\
    \ the SAP server(s) is(are)\n       running.  These initial packets are SAP packets\
    \ and not\n       application packets and must be decoded accordingly.\n     \
    \  Having established the mapping, clients will then send\n       application\
    \ packets to the newly discovered socket number.  These\n       must be decoded\
    \ by 'remembering' the socket assignments\n       transmitted in the SAP packets.\n\
    \       In some cases the port mapping for a particular protocol is well\n   \
    \    known and SAP will always return the same socket number for that\n      \
    \ application.\n       Such programs should still be declared as children of nov-sap\
    \ as\n       described under CHILDREN above.  How an implementation detects a\n\
    \       client which is bypassing the SAP server to contact a well-known\n   \
    \    application is beyond the scope of this document.\n       The 'tracksSessions(1)'\
    \ PARAMETER bit is used to indicate whether\n       the probe can (and should)\
    \ monitor nov-sap activity to correctly\n       track SAP-based connections.\"\
    \n    REFERENCE\n       \"A list of SAP service types can be found at\n      \
    \    ftp://ftp.isi.edu/in-notes/iana/assignments/novell-sap-\n       numbers\"\
    \n    ::= { nov-pep 0x0452 }\n"
- title: ncp PROTOCOL-IDENTIFIER
  contents:
  - "ncp PROTOCOL-IDENTIFIER\n    PARAMETERS {\n     tracksSessions(1)\n    }\n  \
    \  ATTRIBUTES {\n     hasChildren(0)\n    }\n    DESCRIPTION\n       \"Netware\
    \ Core Protocol\"\n    CHILDREN\n       \"Children of NCP are identified by the\
    \ 8 bit command type field.\n       They are encoded as [ 0.0.0.a ] where 'a'\
    \ is the command type\n       value.\n       Children of NCP are named as 'ncp\
    \ a' where 'a' is the command\n       type in decimal notation.  The NDS sub-protocol\
    \ is referred to as\n       'ncp nds' OR 'ncp 104'.\"\n    DECODING\n       \"\
    Only the NCP request frames carry the command type field.  How\n       the implementation\
    \ infers the command type of a response frame is\n       an implementation specific\
    \ matter and beyond the scope of this\n       document.\n       The tracksSessions(1)\
    \ PARAMETERS bit indicates whether the probe\n       can (and should) perform\
    \ command type inference.\"\n    REFERENCE\n       \"Novell Corporation\"\n  \
    \  ::= { nov-sap 0x0004,\n       nov-pep 0x0451 }\n"
- title: nds PROTOCOL-IDENTIFIER
  contents:
  - "nds PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \         \"The Netware Directory Services sub-protocol.\"\n    REFERENCE\n  \
    \     \"Novell Corporation\"\n    ::= { ncp 104 }\n"
- title: nov-diag PROTOCOL-IDENTIFIER
  contents:
  - "nov-diag PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Novell's diagnostic Protocol\"\n    REFERENCE\n       \"Novell Corporation\"\
    \n    ::= {\n     nov-sap 0x0017,   -- [ed., this is the right one]\n     nov-pep\
    \ 0x0456\n    }\n"
- title: nov-sec PROTOCOL-IDENTIFIER
  contents:
  - "nov-sec PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Novell security - serialization - copy protection protocol.\"\n    REFERENCE\n\
    \       \"Novell Corporation\"\n    ::= { nov-pep 0x0457 }\n"
- title: nov-watchdog PROTOCOL-IDENTIFIER
  contents:
  - "nov-watchdog PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n  \
    \  DESCRIPTION\n       \"Novell watchdog protocol.\"\n    REFERENCE\n       \"\
    Novell Corporation\"\n    ::= { nov-pep 0x4004 }\n"
- title: nov-bcast PROTOCOL-IDENTIFIER
  contents:
  - "nov-bcast PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Novell broadcast protocol.\"\n    REFERENCE\n       \"Novell Corporation\"\
    \n    ::= { nov-pep 0x4005 }\n"
- title: 3.1.3.  The XEROX Protocol Stack
  contents:
  - '3.1.3.  The XEROX Protocol Stack

    '
- title: idp PROTOCOL-IDENTIFIER
  contents:
  - "idp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES {\n      hasChildren(0),\n\
    \      addressRecognitionCapable(1)\n    }\n    DESCRIPTION\n       \"Xerox IDP\"\
    \n    CHILDREN\n       \"Children of IDP are defined by the 8 bit value of the\
    \ Packet\n       type field.  The value is encoded into an octet string as [\n\
    \       0.0.0.a ], where 'a' is the value of the packet type field in\n      \
    \ network byte order.\n       Children of IDP are encoded as [ 0.0.0.a ], and\
    \ named as 'idp a'\n       where a is the packet type value.  The XNS SPP protocol\
    \ is\n       referred to as 'idp xns-spp' OR 'idp 2'.\"\n    ADDRESS-FORMAT\n\
    \       \"4 bytes of Network number followed by the 6 bytes Host address\n   \
    \    each in network byte order.\"\n    REFERENCE\n       \"Xerox Corporation,\
    \ Document XNSS 028112, 1981\"\n    ::=  {\n       ether2  0x600,     -- [ 0.0.6.0\
    \ ]\n       snap    0x600,\n       802-1Q  0x600      -- [ 0.0.6.0 ]\n    }\n"
- title: xns-rip PROTOCOL-IDENTIFIER
  contents:
  - "xns-rip PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Routing Information Protocol.\"\n    REFERENCE\n       \"Xerox Corporation\"\
    \n    ::= { idp 1 }\n"
- title: xns-echo PROTOCOL-IDENTIFIER
  contents:
  - "xns-echo PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"XNS echo protocol.\"\n    REFERENCE\n       \"Xerox Corporation\"\n\
    \    ::= { idp 2 }\n"
- title: xns-error PROTOCOL-IDENTIFIER
  contents:
  - "xns-error PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"XNS error-handler protocol.\"\n    REFERENCE\n       \"Xerox Corporation\"\
    \n    ::= { idp 3 }\n"
- title: xns-pep PROTOCOL-IDENTIFIER
  contents:
  - "xns-pep PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES {\n     hasChildren(0)\n\
    \    }\n    DESCRIPTION\n       \"XNS Packet Exchange Protocol.\"\n    CHILDREN\n\
    \       \"Children of PEP are defined by the 16 bit socket values.  The\n    \
    \   value is encoded into an octet string as [ 0.0.a.b ], where 'a'\n       and\
    \ 'b' are the network byte order encodings of the MSB and LSB\n       of the socket\
    \ value.\n       Each XNS/PEP packet contains two sockets, source and destination.\n\
    \       How these are mapped onto the single well-known socket value used\n  \
    \     to identify its children is beyond the scope of this document.\"\n    REFERENCE\n\
    \       \"Xerox Corporation\"\n    ::= { idp 4 }\n"
- title: xns-spp PROTOCOL-IDENTIFIER
  contents:
  - "xns-spp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES {\n     hasChildren(0)\n\
    \    }\n    DESCRIPTION\n       \"Sequenced Packet Protocol.\"\n    CHILDREN\n\
    \       \"Children of SPP are defined by the 16 bit socket values.  The\n    \
    \   value is encoded into an octet string as [ 0.0.a.b ], where 'a'\n       and\
    \ 'b' are the network byte order encodings of the MSB and LSB\n       of the socket\
    \ value.\n       Each XNS/SPP packet contains two sockets, source and destination.\n\
    \       How these are mapped onto the single well-known socket value used\n  \
    \     to identify its children is beyond the scope of this document.\"\n    REFERENCE\n\
    \       \"Xerox Corporation\"\n    ::= { idp 5 }\n"
- title: 3.1.4.  AppleTalk Protocol Stack
  contents:
  - '3.1.4.  AppleTalk Protocol Stack

    '
- title: apple-oui PROTOCOL-IDENTIFIER
  contents:
  - "apple-oui PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Pseudo-protocol which binds Apple's protocols to vsnap.\"\n    CHILDREN\n\
    \       \"Children of apple-oui are identified by the ether2 type field\n    \
    \   value that the child uses when encapsulated in ether2.  The value\n      \
    \ is encoded into an octet string as [ 0.0.a.b ], where 'a' and 'b'\n       are\
    \ the MSB and LSB of the 16-bit ether type value in network\n       byte order.\"\
    \n    REFERENCE\n       \"AppleTalk Phase 2 Protocol Specification, document ADPA\n\
    \        #C0144LL/A.\"\n    ::=   {\n     vsnap    0x080007,     --  [ 0.8.0.7\
    \ ]\n     802-1Q   0x04080007    --  1Q-VSNAP [ 4.8.0.7 ]\n    }\n"
- title: aarp PROTOCOL-IDENTIFIER
  contents:
  - "aarp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"AppleTalk Address Resolution Protocol.\"\n    REFERENCE\n       \"AppleTalk\
    \ Phase 2 Protocol Specification, document ADPA\n        #C0144LL/A.\"\n    ::=\
    \   {\n     ether2    0x80f3,            --  [ 0.0.128.243 ]\n     snap      0x80f3,\n\
    \     apple-oui 0x80f3,\n     802-1Q    0x80f3             --  [ 0.0.128.243 ]\n\
    \    }\n"
- title: atalk PROTOCOL-IDENTIFIER
  contents:
  - "atalk PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES {\n     hasChildren(0),\n\
    \     addressRecognitionCapable(1)\n    }\n    DESCRIPTION\n       \"AppleTalk\
    \ Protocol.\"\n    CHILDREN\n       \"Children of ATALK are defined by the 8 bit\
    \ value of the DDP type\n       field.  The value is encoded into an octet string\
    \ as [ 0.0.0.a ],\n       where 'a' is the value of the DDP type field in network\
    \ byte\n       order.\"\n    ADDRESS-FORMAT\n       \"2 bytes of Network number\
    \ followed by 1 byte of node id each in\n       network byte order.\"\n    REFERENCE\n\
    \       \"AppleTalk Phase 2 Protocol Specification, document ADPA\n        #C0144LL/A.\"\
    \n    ::=   {\n     ether2     0x809b,   -- [ 0.0.128.155 ]\n        apple-oui\
    \  0x809b,\n     802-1Q     0x809b    -- [ 0.0.128.155 ]\n    }\n"
- title: rtmp PROTOCOL-IDENTIFIER
  contents:
  - "rtmp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"AppleTalk Routing Table Maintenance Protocol.\"\n    REFERENCE\n   \
    \    \"Apple Computer\"\n    ::= {\n     atalk   0x01,       -- responses\n  \
    \   atalk   0x05        -- requests\n    }\n"
- title: aep PROTOCOL-IDENTIFIER
  contents:
  - "aep PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"AppleTalk Echo Protocol.\"\n    REFERENCE\n       \"Apple Computer\"\
    \n    ::= { atalk 0x04 }\n"
- title: nbp PROTOCOL-IDENTIFIER
  contents:
  - "nbp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"AppleTalk Name Binding Protocol.\"\n    DECODING\n       \"In order\
    \ to correctly identify the application protocol running\n       over atp NBP\
    \ packets must be analyzed.  The mechanism by which\n       this is achieved is\
    \ beyond the scope of this document.\"\n    REFERENCE\n       \"Apple Computer\"\
    \n    ::= { atalk 0x02 }\n"
- title: zip PROTOCOL-IDENTIFIER
  contents:
  - "zip PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"AppleTalk Zone Information Protocol.\"\n    REFERENCE\n       \"Apple\
    \ Computer\"\n    ::= {\n     atalk   0x06,\n     atp     3\n    }\n"
- title: atp PROTOCOL-IDENTIFIER
  contents:
  - "atp PROTOCOL-IDENTIFIER\n    PARAMETERS {\n     tracksSessions(1)\n    }\n  \
    \  ATTRIBUTES {\n     hasChildren(0)\n    }\n    DESCRIPTION\n       \"AppleTalk\
    \ Transaction Protocol.\"\n    CHILDREN\n       \"Children of atp are identified\
    \ by the following (32 bit)\n       enumeration:\n         1   asp (AppleTalk\
    \ Session Protocol)\n         2   pap (Printer Access Protocol)\n         3  \
    \ zip (Zone Information Protocol)\n       Children of atp are encoded as [ a.b.c.d\
    \ ] where 'a', 'b', 'c'\n       and 'd' are the four octets of the enumerated\
    \ value in network\n       order (i.e. 'a' is the MSB and 'd' is the LSB).\n \
    \      The ZIP protocol is referred to as 'atp zip' OR 'atp 3'.\"\n    DECODING\n\
    \       \"An implementation is encouraged to examine both the socket\n       fields\
    \ in the associated DDP header as well as the contents of\n       prior NBP packets\
    \ in order to determine which (if any) child is\n       present.  A full description\
    \ of this algorithm is beyond the\n       scope of this document.  The tracksSessions(1)\
    \ PARAMETER\n       indicates whether the probe can (and should) perform this\n\
    \       analysis.\"\n    REFERENCE\n       \"Apple Computer\"\n    ::= { atalk\
    \ 0x03 }\n"
- title: adsp PROTOCOL-IDENTIFIER
  contents:
  - "adsp PROTOCOL-IDENTIFIER\n    PARAMETERS {\n     tracksSessions(1)\n    }\n \
    \   ATTRIBUTES {\n     hasChildren(0)\n    }\n    DESCRIPTION\n       \"AppleTalk\
    \ Data Stream Protocol.\"\n    CHILDREN\n       \"Children of adsp are identified\
    \ by enumeration.  At this time\n       none are known.\"\n    DECODING\n    \
    \   \"An implementation is encouraged to examine the socket numbers in\n     \
    \  the associated DDP header as well as the contents of prior NBP\n       packets\
    \ in order to determine which (if any) child of ADSP is\n       present.\n   \
    \    The mechanism by which this is achieved is beyond the scope of\n       this\
    \ document.\n       The tracksSessions(1) PARAMETER indicates whether the probe\
    \ can\n       (and should) perform this analysis.\"\n    REFERENCE\n       \"\
    Apple Computer\"\n    ::= { atalk 0x07 }\n"
- title: asp PROTOCOL-IDENTIFIER
  contents:
  - "asp PROTOCOL-IDENTIFIER\n PARAMETERS { }\n    ATTRIBUTES {\n  hasChildren(0)\n\
    \ }\n    DESCRIPTION\n       \"AppleTalk Session Protocol.\"\n    CHILDREN\n \
    \      \"Children of asp are identified by the following (32 bit)\n       enumeration:\n\
    \         1   afp (AppleTalk Filing Protocol)\n       Children of asp are encoded\
    \ as [ a.b.c.d ] where 'a', 'b', 'c'\n       and 'd' are the four octets of the\
    \ enumerated value in network\n       order (i.e. 'a' is the MSB and 'd' is the\
    \ LSB).\n       The AFP protocol is referred to as 'asp afp' OR 'asp 1'.\"\n \
    \   DECODING\n       \"ASP is a helper layer to assist in building client/server\n\
    \       protocols.  It cooperates with ATP to achieve this; the\n       mechanisms\
    \ used when decoding ATP apply equally here (i.e.\n       checking DDP socket\
    \ numbers and tracking NBP packets).\n       Hence the tracksSessions(1) PARAMETER\
    \ of atp applies to this\n       protocol also.\"\n    REFERENCE\n       \"Apple\
    \ Computer\"\n    ::= { atp 1 }\n"
- title: afp PROTOCOL-IDENTIFIER
  contents:
  - "afp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \         \"AppleTalk Filing Protocol.\"\n    REFERENCE\n       \"Apple Computer\"\
    \n    ::= { asp 1 }\n"
- title: pap PROTOCOL-IDENTIFIER
  contents:
  - "pap PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"AppleTalk Printer Access Protocol.\"\n    REFERENCE\n       \"Apple\
    \ Computer\"\n    ::= { atp 2 }\n"
- title: 3.1.5.  Banyon Vines Protocol Stack
  contents:
  - '3.1.5.  Banyon Vines Protocol Stack

    '
- title: vtr PROTOCOL-IDENTIFIER
  contents:
  - "vtr PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES {\n     hasChildren(0)\n\
    \    }\n    DESCRIPTION\n       \"Banyan Vines Token Ring Protocol Header.\"\n\
    \    CHILDREN\n       \"Children of vines-tr are identified by the 8 bit packet\
    \ type\n       field.  Children are encoded as [ 0.0.0.a ] where 'a' is the\n\
    \       packet type value.\n       The vines-ip protocol is referred to as 'vines-tr\
    \ vip' OR 'vines-\n       tr 0xba'.\"\n    REFERENCE\n       \"See vip.\"\n  \
    \  ::= {\n     llc          0xBC,      -- declared as any LLC, but really TR only.\n\
    \     802-1Q       0x020000BC   -- 1Q-LLC [2.0.0.188]\n    }\n"
- title: vecho PROTOCOL-IDENTIFIER
  contents:
  - "vecho PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Banyan Vines data link level echo protocol.\"\n    REFERENCE\n     \
    \  \"See vip.\"\n    ::= {\n     ether2      0x0BAF,      -- [0.0.11.175]\n  \
    \   snap        0x0BAF,\n     -- vfrp     0x0BAF,\n     vtr         0xBB,    \
    \    -- [ed. yuck!]\n     802-1Q      0x0BAF       -- [0.0.11.175]\n     }\n"
- title: vip PROTOCOL-IDENTIFIER
  contents:
  - "vip PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES {\n     hasChildren(0),\n\
    \     addressRecognitionCapable(1)\n    }\n    DESCRIPTION\n       \"Banyan Vines\
    \ Internet Protocol.\"\n    CHILDREN\n       \"Children of vip are selected by\
    \ the one-byte 'protocol type'\n       field located at offset 5 in the vip header.\
    \  The value is\n       encoded as [ 0.0.0.a ], where a is the 'protocol type.'\
    \  For\n       example, a protocolDirId fragment of:\n          0.0.0.1.0.0.11.173.0.0.0.1\n\
    \         identifies an encapsulation of vipc (ether2.vip.vipc).\"\n    ADDRESS-FORMAT\n\
    \       \"vip packets have 6-byte source and destination addresses.  The\n   \
    \    destination address is located at offset 6 in the vip header, and\n     \
    \  the source address at offset 12.  These are encoded in network\n       byte\
    \ order.\"\n    REFERENCE\n       \"Vines Protocol Definition - part# 092093-001,\
    \ order# 003673\n         BANYAN,\n         120 Flanders Road,\n         Westboro,\
    \ MA 01581 USA\"\n    ::= {\n     ether2  0x0BAD,\n     snap    0x0BAD,\n    \
    \ -- vfrp 0x0BAD,\n     vtr     0xBA,        -- [ed. yuck!]\n     802-1Q  0x0BAD\
    \       -- [0.0.11.173]\n    }\n"
- title: varp PROTOCOL-IDENTIFIER
  contents:
  - "varp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Banyan Vines Address Resolution Protocol.\"\n    REFERENCE\n       \"\
    BANYAN\"\n    ::= { vip 0x04 }\n"
- title: vipc PROTOCOL-IDENTIFIER
  contents:
  - "vipc PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES {\n     hasChildren(0)\n\
    \    }\n    DESCRIPTION\n       \"Banyan Vines Interprocess Communications Protocol.\"\
    \n    CHILDREN\n       \"Children of Vines IPC are identified by the packet type\
    \ field at\n       offset 4 in the vipc header.\n       These are encoded as [\
    \ 0.0.0.a ] where 'a' is the packet type\n       value.  Children of vipc are\
    \ defined as 'vipc a' where 'a' is the\n       packet type value in hexadecimal\
    \ notation.\n       The Vines Reliable Data Transport protocol is referred to\
    \ as\n       'vipc vipc-rdp' OR 'vipc 0x01'.\"\n    DECODING\n       \"Children\
    \ of vipc are deemed to start at the first byte after the\n       packet type\
    \ field (i.e. at offset 5 in the vipc header).\"\n    REFERENCE\n       \"BANYAN\"\
    \n    ::= { vip 0x01 }\n -- Banyan treats vipc, vipc-dgp and vipc-rdp as one protocol,\
    \ IPC.\n -- Vines IPC really comes in two flavours.  The first is used to\n --\
    \ send unreliable datagrams (vipc packet type 0x00).  The second\n -- used to\
    \ send reliable datagrams (vipc packet type 0x01),\n -- consisting of up to four\
    \ actual packets.\n -- In order to distinguish between these we need two 'virtual'\n\
    \ -- protocols to identify which is which.\n"
- title: vipc-dgp PROTOCOL-IDENTIFIER
  contents:
  - "vipc-dgp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES {\n     hasChildren(0)\n\
    \     }\n    DESCRIPTION\n       \"Vines Unreliable Datagram Protocol.\"\n   \
    \ CHILDREN\n       \"Children of vipc-dgp are identified by the 16 bit port numbers\n\
    \       contained in the vipc (this protocol's parent protocol) header.\n    \
    \   These are encoded as [ 0.0.a.b ] where 'a' is the MSB and 'b' is\n       the\
    \ MSB of the port number in network byte order.\n       Children of vipc-dgp are\
    \ defined as 'vipc-dgp a' where 'a' is the\n       port number in hexadecimal\
    \ notation.\n       The StreetTalk protocol running over vipc-dgp would be referred\n\
    \       to as 'vipc-dgp streettalk' OR 'vipc-dgp 0x000F'.\n       The mechanism\
    \ by which an implementation selects which of the\n       source and destination\
    \ ports to use in determining which child\n       protocol is present is implementation\
    \ specific and beyond the\n       scope of this document.\"\n    DECODING\n  \
    \     \"Children of vipc-dgp are deemed to start after the single\n       padding\
    \ byte found in the vipc header.  In the case of vipc-dgp\n       the vipc header\
    \ is a so called 'short' header, total length 6\n       bytes (including the final\
    \ padding byte).\"\n    REFERENCE\n       \"BANYAN\"\n    ::= { vipc 0x00 }\n"
- title: vipc-rdp PROTOCOL-IDENTIFIER
  contents:
  - "vipc-rdp PROTOCOL-IDENTIFIER\n    PARAMETERS {\n     countsFragments(0)\n   \
    \ }\n    ATTRIBUTES {\n     hasChildren(0)\n    }\n    DESCRIPTION\n       \"\
    Vines Reliable Datagram Protocol.\"\n    CHILDREN\n       \"Children of vipc-rdp\
    \ are identified by the 16 bit port numbers\n       contained in the vipc (this\
    \ protocol's parent protocol) header.\n       These are encoded as [ 0.0.a.b ]\
    \ where 'a' is the MSB and 'b' is\n       the MSB of the port number in network\
    \ byte order.\n       Children of vipc-dgp are defined as 'vipc-rdp a' where 'a'\
    \ is the\n       port number in hexadecimal notation.\n       The StreetTalk protocol\
    \ running over vipc-rdp would be referred\n       to as 'vipc-rdp streettalk'\
    \ OR 'vipc-rdp 0x000F'.\n       The mechanism by which an implementation selects\
    \ which of the\n       source and destination ports to use in determining which\
    \ child\n       protocol is present is implementation specific and beyond the\n\
    \       scope of this document.\"\n    DECODING\n       \"Children of vipc-rdp\
    \ are deemed to start after the error/length\n       field at the end of the vipc\
    \ header.  For vipc-rdp the vipc\n       header is a so called 'long' header,\
    \ total 16 bytes (including\n       the final error/length field).\n       vipc-rdp\
    \ includes a high level fragmentation scheme which allows\n       up to four vipc\
    \ packets to be sent as a single atomic PDU.  The\n       countsFragments(0) PARAMETERS\
    \ bit indicates whether the probe can\n       (and should) identify the child\
    \ protocol in all fragments or only\n       the leading one.\"\n    REFERENCE\n\
    \       \"BANYAN\"\n    ::= { vipc 0x01 }\n"
- title: vspp PROTOCOL-IDENTIFIER
  contents:
  - "vspp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES {\n     hasChildren(0)\n\
    \    }\n    DESCRIPTION\n         \"Banyan Vines Sequenced Packet Protocol.\"\n\
    \    CHILDREN\n       \"Children of vspp are identified by the 16 bit port numbers\n\
    \       contained in the vspp header.\n       These are encoded as [ 0.0.a.b ]\
    \ where 'a' is the MSB and 'b' is\n       the MSB of the port number in network\
    \ byte order.\n       Children of vspp are defined as 'vspp a' where 'a' is the\
    \ port\n       number in hexadecimal notation.\n       The StreetTalk protocol\
    \ running over vspp would be referred to as\n       'vspp streettalk' OR 'vspp\
    \ 0x000F'.\n       The mechanism by which an implementation selects which of the\n\
    \       source and destination ports to use in determining which child\n     \
    \  protocol is present is implementation specific and beyond the\n       scope\
    \ of this document.\"\n    DECODING\n       \"The implementation must ensure only\
    \ those vspp packets which\n       contain application data are decoded and passed\
    \ on to children.\n       Although it is suggested that the packet type and control\
    \ fields\n       should be used to determine this fact it is beyond the scope\
    \ of\n       this document to fully define the algorithm used.\"\n    REFERENCE\n\
    \       \"BANYAN\"\n    ::= { vip 0x02 }\n"
- title: vrtp PROTOCOL-IDENTIFIER
  contents:
  - "vrtp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Banyan Vines Routing Update Protocol.\"\n    REFERENCE\n       \"BANYAN\"\
    \n    ::= { vip 0x05 }\n"
- title: vicp PROTOCOL-IDENTIFIER
  contents:
  - "vicp PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Banyan Vines Internet Control Protocol.\"\n    REFERENCE\n       \"\
    BANYAN\"\n    ::= { vip 0x06 }\n"
- title: 3.1.6.  The DECNet Protocol Stack
  contents:
  - '3.1.6.  The DECNet Protocol Stack

    '
- title: dec PROTOCOL-IDENTIFIER
  contents:
  - "dec PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"DEC\"\n    REFERENCE\n       \"Digital Corporation\"\n    ::= {\n  \
    \   ether2 0x6000,\n     802-1Q 0x6000      -- [0.0.96.0]\n    }\n"
- title: lat PROTOCOL-IDENTIFIER
  contents:
  - "lat PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"DEC Local Area Transport Protocol.\"\n    REFERENCE\n       \"Digital\
    \ Corporation\"\n    ::= {\n     ether2 0x6004,\n     802-1Q 0x6004      -- [0.0.96.4]\n\
    \    }\n"
- title: mop PROTOCOL-IDENTIFIER
  contents:
  - "mop PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"DEC Maintenance Operations Protocol.\"\n    REFERENCE\n       \"Digital\
    \ Corporation\"\n    ::= {\n     ether2 0x6001,    -- mop dump/load\n     ether2\
    \ 0x6002,    -- mop remote console\n     802-1Q 0x6001,    -- [0.0.96.1]  VLAN\
    \ + mop dump/load\n     802-1Q 0x6002     -- [0.0.96.2]  VLAN + mop remote console\n\
    \    }\n"
- title: dec-diag PROTOCOL-IDENTIFIER
  contents:
  - "dec-diag PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"DEC Diagnostic Protocol.\"\n    REFERENCE\n       \"Digital Corporation\"\
    \n    ::= {\n     ether2 0x6005,\n     802-1Q 0x6005     -- [0.0.96.5]\n    }\n"
- title: lavc PROTOCOL-IDENTIFIER
  contents:
  - "lavc PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"DEC Local Area VAX Cluster Protocol.\"\n    REFERENCE\n       \"Digital\
    \ Corporation\"\n    ::= {\n     ether2 0x6007,\n     802-1Q 0x6007         --\
    \ [0.0.96.7]\n    }\n"
- title: drp PROTOCOL-IDENTIFIER
  contents:
  - "drp PROTOCOL-IDENTIFIER\n    PARAMETERS {\n     countsFragments(1)\n    }\n \
    \   ATTRIBUTES {\n     hasChildren(0),\n     addressRecognitionCapable(1)\n  \
    \  }\n    DESCRIPTION\n       \"DEC Routing Protocol.\"\n    CHILDREN\n      \
    \ \"There is only one child of DRP, NSP.  This is encoded as [\n       0.0.0.1\
    \ ].\"\n    ADDRESS-FORMAT\n       \"There are three address formats used in DRP\
    \ packets, 2-byte\n       (short data packet and all control except ethernet endnode\
    \ &\n       router hello messages), 6-byte (ethernet router & endnode hello\n\
    \       messages) and 8-byte (long data packet).  All of these contain\n     \
    \  the 2-byte format address in the last 2 bytes with the remaining\n       bytes\
    \ being unimportant for the purposes of system\n       identification.  It is\
    \ beyond the scope of this document to\n       define the algorithms used to identify\
    \ packet types and hence\n       address formats.\n       The 2-byte address format\
    \ is the concatenation of a 6-bit area\n       and a 10-bit node number.  In all\
    \ cases this is placed in little\n       endian format (i.e. LSB, MSB).  The probe,\
    \ however, will return\n       them in network order (MSB, LSB).  Regardless of\
    \ the address\n       format in the packet, the probe will always use the 2-byte\n\
    \       format.\n       For example area=13 (001101) and node=311 (0100110111)\
    \ gives:\n         0011 0101 0011 0111 = 0x3537 in network order (the order the\n\
    \         probe should return the address in).\n         In packets this same\
    \ value would appear as (hex):\n          2-byte  37 35\n          6-byte  AA\
    \ 00 04 00 37 35\n          8-byte  00 00 AA 00 04 00 37 35\n       Notice that\
    \ the AA 00 04 00 prefix is defined in the\n       specification but is unimportant\
    \ and should not be parsed.\n       Notice that control messages only have a source\
    \ address in the\n       header and so they can never be added into the conversation\
    \ based\n       tables.\"\n    DECODING\n       \"NSP runs over DRP data packets;\
    \ all other packet types are DRP\n       control packets of one sort or another\
    \ and do not carry any\n       higher layer protocol.\n       NSP packets are\
    \ deemed to start at the beginning of the DRP data\n       area.\n       Data\
    \ packets may be fragmented over multiple DRP data packets.\n       The countsFragments(1)\
    \ parameter indicates whether a probe can\n       (and should) attribute non-leading\
    \ fragments to the child\n       protocol (above NSP in this case) or not.\n \
    \      Recognition of DRP data packets and fragments is beyond the scope\n   \
    \    of this document.\"\n    REFERENCE\n       \"DECnet Digital Network Architecture\n\
    \         Phase IV\n         Routing Layer Functional Specification\n        \
    \ Order# AA-X435A-TK\n         Digital Equipment Corporation, Maynard, Massachusetts,\
    \ USA\"\n    ::= {\n     ether2  0x6003,\n     snap    0x6003,\n     802-1Q  0x6003\
    \     -- [0.0.96.3]\n    }\n"
- title: nsp PROTOCOL-IDENTIFIER
  contents:
  - "nsp PROTOCOL-IDENTIFIER\n    PARAMETERS {\n     tracksSessions(1)\n    }\n  \
    \  ATTRIBUTES {\n     hasChildren(0)\n    }\n    DESCRIPTION\n       \"DEC Network\
    \ Services Protocol.\"\n    CHILDREN\n       \"Children of NSP are identified\
    \ by the SCP 8-bit object type.\n       Notice that the object type is included\
    \ only in the session\n       establishment messages (connect initiate, retransmitted\
    \ connect\n       initiate).\n       Children of NSP are encoded [ 0.0.0.a ] where\
    \ 'a' is the SCP\n       object type.  Children of NSP are named as 'nsp' followed\
    \ by the\n       SCP object type in decimal.  CTERM is referred to as 'nsp cterm'\n\
    \       OR 'nsp 42'.\"\n    DECODING\n       \"An implementation is encouraged\
    \ to examine SCP headers included\n       in NSP control messages in order to\
    \ determine which child\n       protocol is present over a given session.  It\
    \ is beyond the scope\n       of this document to define the algorithm used to\
    \ do this.\n       The tracksSessions(1) flag indicates whether the probe can\
    \ (and\n       should) perform this analysis.\"\n    REFERENCE\n       \"DECnet\
    \ Digital Network Architecture\n         Phase IV\n         NSP Functional Specification\n\
    \         Order# AA-X439A-TK\n         Digital Equipment Corporation, Maynard,\
    \ Massachusetts, USA\"\n    ::= { drp 1 }\n"
- title: dap-v1 PROTOCOL-IDENTIFIER
  contents:
  - "dap-v1 PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"DEC Data Access Protocol version 1.\"\n    REFERENCE\n       \"Digital\
    \ Corporation\"\n    ::= { nsp 1 }\n"
- title: dap-v4 PROTOCOL-IDENTIFIER
  contents:
  - "dap-v4 PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"DEC Data Access Protocol versions 4 and above.\"\n    REFERENCE\n  \
    \     \"Digital Corporation\"\n    ::= { nsp 17 }\n"
- title: nice PROTOCOL-IDENTIFIER
  contents:
  - "nice PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"DEC Network Information and Control Exchange protocol.\"\n    REFERENCE\n\
    \       \"Digital Corporation\"\n    ::= { nsp 19 }\n"
- title: dec-loop PROTOCOL-IDENTIFIER
  contents:
  - "dec-loop PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"DEC Loopback Protocol.\"\n    REFERENCE\n       \"Digital Corporation\"\
    \n    ::= { nsp 25 }\n"
- title: dec-event PROTOCOL-IDENTIFIER
  contents:
  - "dec-event PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"DEC Event Protocol.\"\n    REFERENCE\n       \"Digital Corporation\"\
    \n    ::= { nsp 26 }\n"
- title: cterm PROTOCOL-IDENTIFIER
  contents:
  - "cterm PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"DEC CTERM Protocol.\"\n    REFERENCE\n       \"Digital Corporation\"\
    \n    ::= { nsp 42 }\n"
- title: 3.1.7.  The IBM SNA Protocol Stack.
  contents:
  - '3.1.7.  The IBM SNA Protocol Stack.

    '
- title: sna-th PROTOCOL-IDENTIFIER
  contents:
  - "sna-th PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"IBM's SNA TH protocol.\"\n    REFERENCE\n       \"IBM Systems Network\
    \ Architecture\n         Format and Protocol\n         Reference Manual: Architectural\
    \ Logic\n         SC30-3112-2\n         IBM System Communications Division,\n\
    \         Publications Development,\n         Department E02,\n         PO Box\
    \ 12195,\n         Research Triangle Park,\n         North Carolina 27709.\"\n\
    \    ::= {\n     llc        0x04,              -- [0.0.0.4]\n     llc        0x08,\
    \              -- [0.0.0.8]\n     llc        0x0c,              -- [0.0.0.12]\n\
    \        ether2     0x80d5,            -- [0.0.128.213]\n     802-1Q     0x02000004,\
    \        -- 1Q-LLC [2.0.0.4]\n     802-1Q     0x02000008,        -- 1Q-LLC [2.0.0.8]\n\
    \     802-1Q     0x0200000c,        -- 1Q-LLC [2.0.0.12]\n        802-1Q     0x80d5\
    \             -- [0.0.128.213]\n    }\n"
- title: 3.1.8.  The NetBEUI/NetBIOS Family
  contents:
  - '3.1.8.  The NetBEUI/NetBIOS Family

    '
- title: -- CHILDREN OF NETBIOS
  contents:
  - '-- CHILDREN OF NETBIOS

    '
- title: -- The NetBIOS/NetBEUI functions are implemented over a wide variety of
  contents:
  - '-- The NetBIOS/NetBEUI functions are implemented over a wide variety of

    '
- title: -- transports.  Despite varying implementations they all share two
  contents:
  - '-- transports.  Despite varying implementations they all share two

    '
- title: -- features.  First, all sessions are established by connecting to
  contents:
  - '-- features.  First, all sessions are established by connecting to

    '
- title: -- locally named services.  Second, all sessions transport application
  contents:
  - '-- locally named services.  Second, all sessions transport application

    '
- title: -- data between the client and the named service.  In all cases the
  contents:
  - '-- data between the client and the named service.  In all cases the

    '
- title: -- identification of the application protocol carried within the data
  contents:
  - '-- identification of the application protocol carried within the data

    '
- title: -- packets is beyond the scope of this document.]
  contents:
  - '-- packets is beyond the scope of this document.]

    '
- title: --
  contents:
  - '--

    '
- title: -- Children of NetBIOS/NetBEUI are identified by the following (32 bit)
  contents:
  - '-- Children of NetBIOS/NetBEUI are identified by the following (32 bit)

    '
- title: -- enumeration
  contents:
  - '-- enumeration

    '
- title: --
  contents:
  - '--

    '
- title: --      1   smb (Microsoft's Server Message Block Protocol)
  contents:
  - '--      1   smb (Microsoft''s Server Message Block Protocol)

    '
- title: --      2   notes (Lotus' Notes Protocol)
  contents:
  - '--      2   notes (Lotus'' Notes Protocol)

    '
- title: --      3   cc-mail (Lotus' CC Mail Protocol)
  contents:
  - '--      3   cc-mail (Lotus'' CC Mail Protocol)

    '
- title: --
  contents:
  - '--

    '
- title: -- Children of NetBIOS/NetBEUI are encoded as [ a.b.c.d ] where 'a', 'b',
  contents:
  - '-- Children of NetBIOS/NetBEUI are encoded as [ a.b.c.d ] where ''a'', ''b'',

    '
- title: -- 'c' and 'd' are the four octets of the enumerated value in network
  contents:
  - '-- ''c'' and ''d'' are the four octets of the enumerated value in network

    '
- title: -- order (i.e.  'a' is the MSB and 'd' is the LSB).
  contents:
  - '-- order (i.e.  ''a'' is the MSB and ''d'' is the LSB).

    '
- title: --
  contents:
  - '--

    '
- title: -- For example notes over NetBEUI is declared as
  contents:
  - '-- For example notes over NetBEUI is declared as

    '
- title: --      'notes ::= { netbeui 2 }'
  contents:
  - '--      ''notes ::= { netbeui 2 }''

    '
- title: -- but is referred to as
  contents:
  - '-- but is referred to as

    '
- title: --      'netbeui notes' OR 'netbeui 2'.
  contents:
  - '--      ''netbeui notes'' OR ''netbeui 2''.

    '
- title: netbeui PROTOCOL-IDENTIFIER
  contents:
  - "netbeui PROTOCOL-IDENTIFIER\n    PARAMETERS {\n     tracksSessions(1)\n    }\n\
    \    ATTRIBUTES {\n     hasChildren(0)\n    }\n    DESCRIPTION\n       \"Lan Manager\
    \ NetBEUI protocol.\"\n    CHILDREN\n       \"See `CHILDREN OF NETBIOS`\"\n  \
    \  DECODING\n       \"NETBEUI provides a named service lookup function.  This\
    \ function\n       allows clients to locate a service by (locally assigned) name.\n\
    \       An implementation is encouraged to follow lookups and session\n      \
    \ establishments and having determined the child protocol, track\n       them.\n\
    \       How the child protocol is determined and how the sessions are\n      \
    \ tracked is an implementation specific matter and is beyond the\n       scope\
    \ of this document.\"\n    REFERENCE\n       \"IBM\"\n    ::= {\n     llc    \
    \    0xF0,          --  [0.0.0.240]\n     802-1Q     0x020000F0     --  1Q-LLC\
    \ [2.0.0.240]\n    }\n"
- title: nbt-name PROTOCOL-IDENTIFIER
  contents:
  - "nbt-name PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"NetBIOS-over-TCP name protocol.\"\n    REFERENCE\n       \"RFC 1001\
    \ [RFC1001] defines the 'PROTOCOL STANDARD FOR A NetBIOS\n       SERVICE ON A\
    \ TCP/UDP TRANSPORT: CONCEPTS AND METHODS.'  RFC 1002\n       [RFC1002] defines\
    \ the 'PROTOCOL STANDARD FOR A NetBIOS SERVICE ON\n       A TCP/UDP TRANSPORT:\
    \ DETAILED SPECIFICATIONS'.\"\n    ::= {\n     udp     137,\n     tcp     137\n\
    \    }\n"
- title: nbt-session PROTOCOL-IDENTIFIER
  contents:
  - "nbt-session PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n   \
    \ DESCRIPTION\n       \"NetBIOS-over-TCP session protocol.\"\n    REFERENCE\n\
    \       \"RFC 1001 [RFC1001] defines the 'PROTOCOL STANDARD FOR A NetBIOS\n  \
    \     SERVICE ON A TCP/UDP TRANSPORT: CONCEPTS AND METHODS.'  RFC 1002\n     \
    \  [RFC1002] defines the 'PROTOCOL STANDARD FOR A NetBIOS SERVICE ON\n       A\
    \ TCP/UDP TRANSPORT: DETAILED SPECIFICATIONS'.\"\n    ::= {\n     udp     139,\n\
    \     tcp     139\n    }\n"
- title: nbt-data PROTOCOL-IDENTIFIER
  contents:
  - "nbt-data PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES {\n     hasChildren(0)\n\
    \    }\n    DESCRIPTION\n       \"NetBIOS-over-TCP datagram protocol.\"\n    CHILDREN\n\
    \       \"See `CHILDREN OF NETBIOS`\"\n    REFERENCE\n       \"RFC 1001 [RFC1001]\
    \ defines the 'PROTOCOL STANDARD FOR A NetBIOS\n       SERVICE ON A TCP/UDP TRANSPORT:\
    \ CONCEPTS AND METHODS.'  RFC 1002\n       [RFC1002] defines the 'PROTOCOL STANDARD\
    \ FOR A NetBIOS SERVICE ON\n       A TCP/UDP TRANSPORT: DETAILED SPECIFICATIONS'.\"\
    \n    ::= {\n     udp     138,\n     tcp     138\n    }\n"
- title: netbios-3com PROTOCOL-IDENTIFIER
  contents:
  - "netbios-3com PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES {\n    \
    \ hasChildren(0)\n    }\n    DESCRIPTION\n       \"3COM NetBIOS protocol.\"\n\
    \    CHILDREN\n       \"See `CHILDREN OF NETBIOS`\"\n    REFERENCE\n       \"\
    3Com Corporation\"\n    ::= {\n     ether2  0x3C00,\n     ether2  0x3C01,\n  \
    \   ether2  0x3C02,\n     ether2  0x3C03,\n     ether2  0x3C04,\n     ether2 \
    \ 0x3C05,\n     ether2  0x3C06,\n     ether2  0x3C07,\n     ether2  0x3C08,\n\
    \     ether2  0x3C09,\n     ether2  0x3C0A,\n     ether2  0x3C0B,\n     ether2\
    \  0x3C0C,\n     ether2  0x3C0D,\n     802-1Q  0x3C00,\n     802-1Q  0x3C01,\n\
    \     802-1Q  0x3C02,\n     802-1Q  0x3C03,\n     802-1Q  0x3C04,\n     802-1Q\
    \  0x3C05,\n     802-1Q  0x3C06,\n     802-1Q  0x3C07,\n     802-1Q  0x3C08,\n\
    \     802-1Q  0x3C09,\n     802-1Q  0x3C0A,\n     802-1Q  0x3C0B,\n     802-1Q\
    \  0x3C0C,\n     802-1Q  0x3C0D\n    }\n"
- title: nov-netbios PROTOCOL-IDENTIFIER
  contents:
  - "nov-netbios PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES {\n     hasChildren(0)\n\
    \    }\n    DESCRIPTION\n       \"Novell's version of the NetBIOS protocol.\"\n\
    \    CHILDREN\n       \"See `CHILDREN OF NETBIOS`\"\n    REFERENCE\n       \"\
    Novell Corporation\"\n    ::= {\n     nov-sap 0x0020,  -- preferred encapsulation\
    \ to use, even though\n                      -- the following are typically used\
    \ also\n     -- ipx  0x14,       -- when reached by IPX packet type\n     -- nov-pep\
    \ 0x0455   -- when reached by socket number\n    }\n"
- title: burst PROTOCOL-IDENTIFIER
  contents:
  - "burst PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Novell burst-mode transfer\"\n    REFERENCE\n       \"Novell Corporation\"\
    \n    ::= { nov-pep 0x0d05 }\n"
- title: 3.2.  Multi-stack protocols
  contents:
  - '3.2.  Multi-stack protocols

    '
- title: smb PROTOCOL-IDENTIFIER
  contents:
  - "smb PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Microsoft Server Message Block Protocol.\"\n    REFERENCE\n       \"\
    Microsoft Corporation\"\n    ::= {\n        netbeui         1,\n        netbios-3com\
    \    1,\n        nov-netbios     1,\n        nbt-data        1,\n        nbt-session\
    \     1,\n        nov-pep         0x550,\n        nov-pep         0x552\n    }\n"
- title: notes PROTOCOL-IDENTIFIER
  contents:
  - "notes PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Lotus Notes Protocol.\"\n    REFERENCE\n       \"Lotus Development\"\
    \n    ::= {\n     netbeui         2,\n     netbios-3com    2,\n     nov-netbios\
    \     2,\n     nbt-data        2,\n     tcp             1352,\n     udp      \
    \       1352,\n        nov-sap         0x039b\n    }\n"
- title: ccmail PROTOCOL-IDENTIFIER
  contents:
  - "ccmail PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Lotus CC-mail Protocol.\"\n    REFERENCE\n       \"Lotus Development\"\
    \n    ::= {\n     netbeui         3,\n     netbios-3com    3,\n     nov-netbios\
    \     3,\n     nbt-data        3,\n     tcp             3264,\n     udp      \
    \       3264\n    }\n"
- title: snmp  PROTOCOL-IDENTIFIER
  contents:
  - "snmp  PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Simple Network Management Protocol. Includes SNMPv1 and SNMPv2\n   \
    \    protocol versions. Does not include SNMP trap packets.\"\n    REFERENCE\n\
    \       \"The SNMP SMI is defined in RFC 1902 [RFC1902].  Version 1 of the\n \
    \      SNMP  protocol is defined in RFC 1905 [RFC1905].  Transport\n       mappings\
    \ are defined in RFC 1906 [RFC1906]; RFC 1420 (SNMP over\n       IPX) [RFC1420];\
    \ RFC 1419 (SNMP over AppleTalk) [RFC1419].\"\n    ::= {\n     udp 161,\n    \
    \    nov-pep 0x900f,   -- [ 0.0.144.15 ]\n     atalk 8,\n     tcp 161\n    }\n"
- title: snmptrap PROTOCOL-IDENTIFIER
  contents:
  - "snmptrap PROTOCOL-IDENTIFIER\n    PARAMETERS { }\n    ATTRIBUTES { }\n    DESCRIPTION\n\
    \       \"Simple Network Management Protocol Trap Port.\"\n    REFERENCE\n   \
    \    \"The SNMP SMI is defined in RFC 1902 [RFC1902].  The SNMP\n       protocol\
    \ is defined in RFC 1905 [RFC1905].  Transport mappings\n       are defined in\
    \ RFC 1906 [RFC1906]; RFC 1420 (SNMP over IPX)\n       [RFC1420]; RFC 1419 (SNMP\
    \ over AppleTalk) [RFC1419].\"\n    ::= {\n     udp 162,\n        nov-pep 0x9010,\n\
    \     atalk 9,\n     tcp 162\n    }\n"
- title: -- END
  contents:
  - '-- END

    '
- title: 4.  Intellectual Property
  contents:
  - "4.  Intellectual Property\n   The IETF takes no position regarding the validity\
    \ or scope of any\n   intellectual property or other rights that might be claimed\
    \ to\n   pertain to the implementation or use of the technology described in\n\
    \   this document or the extent to which any license under such rights\n   might\
    \ or might not be available; neither does it represent that it\n   has made any\
    \ effort to identify any such rights.  Information on the\n   IETF's procedures\
    \ with respect to rights in standards-track and\n   standards-related documentation\
    \ can be found in BCP-11.  Copies of\n   claims of rights made available for publication\
    \ and any assurances of\n   licenses to be made available, or the result of an\
    \ attempt made to\n   obtain a general license or permission for the use of such\n\
    \   proprietary rights by implementors or users of this specification can\n  \
    \ be obtained from the IETF Secretariat.\"\n   The IETF invites any interested\
    \ party to bring to its attention any\n   copyrights, patents or patent applications,\
    \ or other proprietary\n   rights which may cover technology that may be required\
    \ to practice\n   this standard.  Please address the information to the IETF Executive\n\
    \   Director.\n"
- title: 5.  Acknowledgements
  contents:
  - "5.  Acknowledgements\n   This document was produced by the IETF RMONMIB Working\
    \ Group.\n   The authors wish to thank the following people for their\n   contributions\
    \ to this document:\n        Anil Singhal\n        Frontier Software Development,\
    \ Inc.\n        Jeanne Haney\n        Bay Networks\n        Dan Hansen\n     \
    \   Network General Corp.\n   Special thanks are in order to the following people\
    \ for writing RMON\n   PI macro compilers, and improving the specification of\
    \ the PI macro\n   language:\n        David Perkins\n        DeskTalk Systems,\
    \ Inc.\n        Skip Koppenhaver\n        Technically Elite, Inc.\n"
- title: 6.  References
  contents:
  - "6.  References\n   [IEN158]   J. Haverty, \"XNET Formats for Internet Protocol\
    \ Version\n              4\", IEN 158, October 1980.\n   [RFC407]   Bressler,\
    \ R., Guida. R. and A. McKenzie, \"Remote Job Entry\n              Protocol\"\
    , RFC 407, October 1972.\n   [RFC493]   Michener, J., Cotton, I., Kelley, K.,\
    \ Liddle, D. and E.\n              Meyer, \"E.W., Jr  Graphics Protocol\", RFC\
    \ 493, April 1973.\n   [RFC734]   Crispin, M., \"SUPDUP Protocol\", RFC 734, October\
    \ 1977.\n   [RFC740]   Braden, R., \"NETRJS Protocol\", RFC 740, November 1977.\n\
    \   [RFC741]   Cohen, D., \"Specifications for the Network Voice\n           \
    \   Protocol\", RFC 741, ISI/RR 7539, March 1976.\n   [RFC759]   Postel, J., \"\
    Internet Message Protocol\", RFC 759, August\n              1980.\n   [RFC768]\
    \   Postel, J., \"User Datagram Protocol\", STD 6, RFC 768,\n              August\
    \ 1980.\n   [RFC791]   Postel, J., \"Internet Protocol - DARPA Internet Program\n\
    \              Protocol Specification\", STD 5, RFC 791, September 1981.\n   [RFC792]\
    \   Postel, J., \"Internet Control Message Protocol - DARPA\n              Internet\
    \ Program Protocol Specification\", STD 5, RFC 792,\n              September 1981.\n\
    \   [RFC793]   Postel, J., \"Transmission Control Protocol - DARPA\n         \
    \     Internet Program Protocol Specification\", STD 5, RFC 793,\n           \
    \   September 1981.\n   [RFC818]   Postel, J., \"Remote User Telnet service\"\
    , RFC 818,\n              November 1982.\n   [RFC821]   Postel, J., \"Simple Mail\
    \ Transfer Protocol\", STD 10, RFC\n              821, August 1982.\n   [RFC823]\
    \   Hinden, R. and A. Sheltzer, \"The DARPA Internet Gateway\",\n            \
    \  RFC 823, September 1982.\n   [RFC826]   Plummer, D., \"An Ethernet Address\
    \ Resolution Protocol or\n              Converting Network Protocol Addresses\
    \ to 48-bit Ethernet\n              Addresses for Transmission on Ethernet Hardware\"\
    , STD 37,\n              RFC 826, November 1982.\n   [RFC854]   Postel, J. and\
    \ J. Reynolds, \"Telnet Protocol\n              Specification\", STD 8, RFC 854,\
    \ May 1983.\n   [RFC862]   Postel, J., \"Echo Protocol\", STD 20, RFC 862, May\
    \ 1983.\n   [RFC863]   Postel, J., \"Discard Protocol\", STD 21, RFC 863, May\
    \ 1983.\n   [RFC864]   Postel, J., \"Character Generator Protocol\", STD 22, RFC\n\
    \              864, May 1983.\n   [RFC865]   Postel, J., \"Quote of the Day Protocol\"\
    , STD 23, RFC 865,\n              May 1983.\n   [RFC866]   Postel, J., \"Active\
    \ Users\", STD 26, RFC 866, May 1983.\n   [RFC867]   Postel, J., \"Daytime Protocol\"\
    , STD 25, RFC 867, May 1983.\n   [RFC868]   Postel, J., \"Time Protocol\", STD\
    \ 26, RFC 868, May 1983.\n   [RFC869]   Hinden, R., \"A Host Monitoring Protocol\"\
    , RFC 869,\n              December 1983.\n   [RFC887]   Accetta, M., \"Resource\
    \ Location Protocol\", RFC 887,\n              December 1983.\n   [RFC904]   International\
    \ Telegraph and Telephone Co., D. Mills,\n              \"Exterior Gateway Protocol\
    \ Formal Specification\", STD 18,\n              RFC 904, April 1984.\n   [RFC905]\
    \   McKenzie, A., \"ISO Transport Protocol Specification - ISO\n             \
    \ DP 8073\", RFC 905, April 1984.\n   [RFC908]   Velten, D., Hinden, R., and J.\
    \ Sax, \"Reliable Data\n              Protocol\", RFC 908, July 1984.\n   [RFC913]\
    \   Lottor, M., \"Simple File Transfer Protocol\", RFC 913,\n              September\
    \ 1984.\n   [RFC915]   Elvy, M. and R. Nedved, \"Network mail path service\",\
    \ RFC\n              915, December 1984.\n   [RFC937]   Butler, M., Chase, D.,\
    \ Goldberger, J., Postel, J., and J.\n              Reynolds, \"Post Office Protocol\
    \ - version 2\", RFC 937,\n              February 1985.\n   [RFC938]   Miller,\
    \ T., \"Internet Reliable Transaction Protocol\", RFC\n              938, February\
    \ 1985.\n   [RFC951]   Croft, W. and J. Gilmore, \"BOOTSTRAP Protocol (BOOTP)\"\
    ,\n              RFC 951, September 1985.\n   [RFC953]   Feinler, E., Harrenstien,\
    \ K. and M. Stahl, \"Hostname\n              Server\", RFC 953, October 1985.\n\
    \   [RFC954]   Feinler, E., Harrenstien, K. and M. Stahl,\n              \"NICNAME/WHOIS\"\
    , RFC 954, October 1985.\n   [RFC959]   Postel, J., and J. Reynolds, \"File Transfer\
    \ Protocol\", STD\n              9, RFC 959, October 1985.\n   [RFC972]   Wancho,\
    \ F., \"Password Generator Protocol\", RFC 972,\n              January 1986.\n\
    \   [RFC977]   Kantor, B. and P. Lapsley, \"Network News Transfer\n          \
    \    Protocol: A Proposed Standard for the Stream-Based\n              Transmission\
    \ of News\", RFC 977, February 1986.\n   [RFC996]   Mills, D., \"Statistics server\"\
    , RFC 996, February 1987.\n   [RFC998]   Clark, D., Lambert, M. and L. Zhang,\
    \ \"NETBLT: A Bulk Data\n              Transfer Protocol\", RFC 998, March 1987.\n\
    \   [RFC1001]  NetBIOS Working Group in the Defense Advanced Research\n      \
    \        Projects Agency, Internet Activities Board, End-to-End\n            \
    \  Services Task Force.  \"Protocol standard for a NetBIOS\n              service\
    \ on a TCP/UDP transport:  Concepts and methods\",\n              STD 19, RFC\
    \ 1001, March 1987.\n   [RFC1002]  NetBIOS Working Group in the Defense Advanced\
    \ Research\n              Projects Agency, Internet Activities Board, End-to-End\n\
    \              Services Task Force.  \"Protocol standard for a NetBIOS\n     \
    \         service on a TCP/UDP transport:  Detailed\n              specifications.\"\
    , STD 19,  RFC 1002, March 1987.\n   [RFC1021]  Partridge, C. and G. Trewitt,\
    \ \"High-level Entity\n              Management System HEMS\", RFC 1021, October\
    \ 1987.\n   [RFC1028]  Case, J., Davin, J., Fedor, M. and M. Schoffstall, \"Simple\n\
    \              Gateway Monitoring Protocol\", RFC 1028, November 1987.\n   [RFC1035]\
    \  Mockapetris, P., \"Domain Names - Implementation and\n              Specification\"\
    , STD 13, RFC 1035, November 1987.\n   [RFC1056]  Lambert, M., \"PCMAIL: A distributed\
    \ mail system for\n              personal computers\", RFC 1056, June 1988.\n\
    \   [RFC1057]  Sun Microsystems, Inc, \"RPC: Remote Procedure Call\n         \
    \     Protocol Specification version 2\", RFC 1057, June 1988.\n   [RFC1064] \
    \ Crispin, M., \"Interactive Mail Access Protocol: Version\n              2\"\
    , RFC 1064, July 1988.\n   [RFC1068]  DeSchon, A. and R. Braden, \"Background\
    \ File Transfer\n              Program BFTP\", RFC 1068, August 1988.\n   [RFC1070]\
    \  Hagens, R., Hall, N. and M. Rose, \"Use of the Internet as\n              a\
    \ subnetwork for experimentation with the OSI network\n              layer\",\
    \ RFC 1070, February 1989.\n   [RFC1078]  Lottor, M., \"TCP port service Multiplexer\
    \  TCPMUX\", RFC\n              1078, November, 1988.\n   [RFC1086]  Onions, J.\
    \ and M. Rose, \"ISO-TP0 bridge between TCP and\n              X.25\", RFC 1086,\
    \ December 1988.\n   [RFC1095]  Warrier, U. and L. Besaw, \"Common Management\
    \ Information\n              Services and Protocol over TCP/IP (CMOT)\", RFC 1095,\
    \ April\n              1989.\n   [RFC1112]  Deering, S., \"Host Extensions for\
    \ IP Multicasting\", STD 5,\n              RFC 1112, August 1989.\n   [RFC1155]\
    \  Rose, M. and K. McCloghrie, \"Structure and Identification\n              of\
    \ Management Information for TCP/IP-based Internets\", STD\n              16,\
    \ RFC 1155, May 1990.\n   [RFC1157]  Case, J., Fedor, M., Schoffstall, M. and\
    \ J. Davin, \"Simple\n              Network Management Protocol\", STD 15, RFC\
    \ 1157, May 1990.\n   [RFC1203]  Rice, J., \"Interactive Mail Access Protocol\
    \ - Version 3\",\n              RFC 1203, February 1991.\n   [RFC1204]  Lee, D.\
    \ and S. Yeh, \"Message Posting Protocol (MPP)\", RFC\n              1204, February\
    \ 1991.\n   [RFC1212]  Rose, M. and K. McCloghrie, \"Concise MIB Definitions\"\
    , STD\n              16, RFC 1212, March 1991.\n   [RFC1213]  McCloghrie, K. and\
    \ M. Rose, \"Management Information Base\n              for Network Management\
    \ of TCP/IP-based internets: MIB-II\",\n              STD 17, RFC 1213, March\
    \ 1991.\n   [RFC1215]  Rose, M., \"A Convention for Defining Traps for use with\n\
    \              the SNMP\", RFC 1215, March 1991.\n   [RFC1226]  Kantor, B., \"\
    Internet Protocol Encapsulation of AX.25\n              Frames\", RFC 1226, May\
    \ 1991.\n   [RFC1227]  Rose, M., \"SNMP MUX Protocol and MIB\", RFC 1227, May\
    \ 1991.\n   [RFC1234]  Provan, D., \"Tunneling IPX Traffic through IP Networks\"\
    ,\n              RFC 1234, June 1991.\n   [RFC1235]  Ioannidis, J. and G. Maguire,\
    \ Jr., \"The Coherent File\n              Distribution Protocol\", RFC 1235, June\
    \ 1991.\n   [RFC1241]  Mills, D. and R. Woodburn, \"A Scheme for an Internet\n\
    \              Encapsulation Protocol: Version 1\", RFC 1241, July 1991.\n   [RFC1249]\
    \  Howes, T., Smith, M. and B. Beecher, \"DIXIE Protocol\n              Specification\"\
    , RFC 1249, August 1991.\n   [RFC1267]  Lougheed, K. and Y. Rekhter, \"A Border\
    \ Gateway Protocol 3\n              (BGP-3)\", RFC 1267, October 1991.\n   [RFC1282]\
    \  Kantor, B., \"BSD Rlogin\", RFC 1282, December 1991.\n   [RFC1288]  Zimmerman,\
    \ D., \"The Finger User Information Protocol\", RFC\n              1288, December\
    \ 1991.\n   [RFC1301]  Amstrong, S., Freier, A. and K. Marzullo, \"Multicast\n\
    \              Transport Protocol\", RFC 1301, February 1992.\n   [RFC1305]  Mills,\
    \ D., \"Network Time Protocol (v3)\", RFC 1305, April\n              1992.\n \
    \  [RFC1312]  Nelson, R. and G. Arnold, \"Message Send Protocol\", RFC\n     \
    \         1312, April 1992.\n   [RFC1339]  Dorner, S. and P. Resnick, \"Remote\
    \ Mail Checking\n              Protocol\", RFC 1339, June 1992.\n   [RFC1350]\
    \  Sollins, K., \"TFTP Protocol (revision 2)\", RFC 1350, July\n             \
    \ 1992.\n   [RFC1413]  St. Johns, M., \"Identification Protocol\", RFC 1413,\n\
    \              February 1993.\n   [RFC1419]  Minshall, G. and M. Ritter, \"SNMP\
    \ over AppleTalk\", RFC\n              1419, March 1993.\n   [RFC1420]  Bostock,\
    \ S., \"SNMP over IPX\", RFC 1420, March 1993.\n   [RFC1436]  Anklesaria, F.,\
    \ McCahill, M., Lindner, P., Johnson, D.,\n              John, D., Torrey, D.\
    \ and B. Alberti, \"The Internet Gopher\n              Protocol (a distributed\
    \  document search and retrieval\n              protocol)\", RFC 1436, March 1993.\n\
    \   [RFC1459]  Oikarinen, J. and D. Reed, \"Internet Relay Chat Protocol\",\n\
    \              RFC 1459, May 1993.\n   [RFC1476]  Ullmann, R., \"RAP: Internet\
    \ Route Access Protocol\", RFC\n              1476, June 1993.\n   [RFC1479] \
    \ Steenstrup, M., \"Inter-Domain Policy Routing Protocol\n              Specification:\
    \  Version 1\", RFC 1479, July 1993.\n   [RFC1483]  Heinanen, J., \"Multiprotocol\
    \ Encapsulation over ATM\n              Adaptation Layer 5\", RFC 1483, July 1993.\n\
    \   [RFC1492]  Finseth, C., \"An Access Control Protocol, Sometimes Called\n \
    \             TACACS\", RFC 1492, July 1993.\n   [RFC1510]  Kohl, J. and B. Neuman,\
    \ \"The Kerberos Network\n              Authentication Service (V5)\", RFC 1510,\
    \ September 1993.\n   [RFC1583]  Moy, J., \"OSPF Version 2\", RFC 1583, March\
    \ 1994.\n   [RFC1700]  Reynolds, J. and J. Postel, \"Assigned Numbers\", STD 2,\
    \ RFC\n              1700, October 1994.\n   [RFC1701]  Hanks, S., Li, T., Farinacci,\
    \ D. and P. Traina, \"Generic\n              Routing Encapsulation (GRE)\", RFC\
    \ 1701, October 1994.\n   [RFC1702]  Hanks, S., Li, T., Farinacci, D. and P. Traina,\
    \ \"Generic\n              Routing Encapsulation over IPv4 networks\", RFC 1702,\n\
    \              October 1994.\n   [RFC1725]  Myers, J. and M. Rose, \"Post Office\
    \ Protocol - Version 3\",\n              RFC 1725, November 1994.\n   [RFC1729]\
    \  Lynch, C., \"Using the Z39.50 Information Retrieval\n              Protocol\
    \ in the Internet Environment\", RFC 1729, December\n              1994.\n   [RFC1730]\
    \  Crispin, M., \"Internet Message Access Protocol - Version\n              4\"\
    , RFC 1730, December 1994.\n   [RFC1739]  Kessler, G. and S. Shepard, \"A Primer\
    \ On Internet and\n              TCP/IP Tools\", RFC 1739, December 1994.\n  \
    \ [RFC1745]  Varadhan, K., Hares, S. and Y. Rekhter, \"BGP4/IDRP for\n       \
    \       IP---OSPF Interaction\", RFC 1745, December 1994.\n   [RFC1757]  Waldbusser,\
    \ S., \"Remote Network Monitoring MIB\", RFC 1757,\n              February 1995.\n\
    \   [RFC1777]  Yeong, W., Howes, T. and S. Kille, \"Lightweight Directory\n  \
    \            Access Protocol\", RFC 1777, March 1995.\n   [RFC1782]  Malkin, G.\
    \ and A. Harkin, \"TFTP Option Extension\", RFC\n              1782, March 1995.\n\
    \   [RFC1783]  Malkin, G. and A. Harkin, \"TFTP BlockOption Option\", RFC\n  \
    \            1783, March 1995.\n   [RFC1784]  Malkin, G. and A. Harkin, \"TFTP\
    \ Timeout Interval and\n              Transfer Size Options\", RFC 1784, March\
    \ 1995.\n   [RFC1798]  Young, A., \"Connection-less Lightweight Directory Access\n\
    \              Protocol\", RFC 1798, June 1995.\n   [RFC1813]  Callaghan, B.,\
    \ Pawlowski, B. and P. Staubach, \"NFS Version\n              3 Protocol Specification\"\
    , RFC 1813, June 1995.\n   [RFC1819]  Delgrossi, L. and L. Berger, \"Internet\
    \ Stream Protocol\n              Version 2 (ST2)\", RFC 1819, August 1995.\n \
    \  [RFC1831]  Srinivasan, R., \"Remote Procedure Call Protocol Version\n     \
    \         2\", RFC 1831, August 1995.\n   [RFC1853]  Simpson, W., \"IP in IP Tunneling\"\
    , RFC 1853, October 1995.\n   [RFC1901]  Case, J., McCloghrie, K., Rose, M. and\
    \ S.  Waldbusser,\n              \"Introduction to Community-based SNMPv2\", RFC\
    \ 1901,\n              January 1996.\n   [RFC1902]  Case, J., McCloghrie, K.,\
    \ Rose, M. and S.  Waldbusser,\n              \"Structure of Management Information\
    \ for version 2 of the\n              Simple Network Management Protocol (SNMPv2)\"\
    , RFC 1902,\n              January 1996.\n   [RFC1903]  Case, J., McCloghrie,\
    \ K., Rose, M. and S.  Waldbusser,\n              \"Textual Conventions for version\
    \ 2 of the Simple Network\n              Management Protocol (SNMPv2)\", RFC 1903,\
    \ January 1996.\n   [RFC1904]  Case, J., McCloghrie, K., Rose, M. and S.  Waldbusser,\n\
    \              \"Conformance Statements for version 2 of the Simple\n        \
    \      Network Management Protocol (SNMPv2)\", RFC 1904, January\n           \
    \   1996.\n   [RFC1905]  Case, J., McCloghrie, K., Rose, M. and S. Waldbusser,\n\
    \              \"Protocol Operations for Version 2 of the Simple Network\n   \
    \           Management Protocol (SNMPv2)\", RFC 1905, January 1996.\n   [RFC1906]\
    \  Case, J., McCloghrie, K., Rose, M. and S. Waldbusser,\n              \"Transport\
    \ Mappings for Version 2 of the Simple Network\n              Management Protocol\
    \ (SNMPv2)\", RFC 1906, January 1996.\n   [RFC1940]  Estrin, D., Li, T., Rekhter,\
    \ Y., Varadhan, K. and D.\n              Zappala, \"Source Demand Routing: Packet\
    \ Format and\n              Forwarding Specification (Version 1)\", RFC 1940,\
    \ May 1996.\n   [RFC1945]  Berners-Lee, T. and R. Fielding, \"Hypertext Transfer\n\
    \              Protocol -- HTTP/1.0\", RFC 1945, November 1995.\n   [RFC2002]\
    \  Perkins, C., \"IP Mobility Support\", RFC 2002, October\n              1996.\n\
    \   [RFC2003]  Perkins, C., \"IP Encapsulation within IP\", RFC 2003,\n      \
    \        October 1996.\n   [RFC2021]  Waldbusser, S., \"Remote Network Monitoring\
    \ MIB (RMON-2)\",\n              RFC 2021, January 1997.\n   [RFC2037]  McCloghrie,\
    \ K. and A. Bierman, \"Entity MIB using SMIv2\",\n              RFC 2037, October\
    \ 1996.\n   [RFC2068]  Fielding, R., Gettys, J., Mogul, J., Frystyk, H. and T.\n\
    \              Berners-Lee, \"Hypertext Transfer Protocol -- HTTP/1.1\",\n   \
    \           RFC 2068, January 1997.\n   [RFC2069]  Franks, J., Hallam-Baker, P.,\
    \ Hostetler, J., Luotonen, P.\n              A. and E. L. Stewart, \"An Extension\
    \ to HTTP: Digest Access\n              Authentication\", RFC 2069, January 1997.\n\
    \   [RFC2074]  Bierman, A. and R. Iddon, \"Remote Network Monitoring MIB\n   \
    \           Protocol Identifiers\", RFC 2074, January 1997.\n   [RFC2109]  Kristol,\
    \ D. and L. Montulli, \"HTTP State Management\n              Mechanism\", RFC\
    \ 2109, February 1997.\n   [RFC2138]  Rigney, C., Rubens, A., Simpson, W. and\
    \ W. Willens,\n              \"Remote Authentication Dial In User Service (RADIUS)\"\
    , RFC\n              2138, April 1997.\n   [RFC2139]  Rigney, C., \"RADIUS Accounting\"\
    , RFC 2139, April 1997.\n   [RFC2145]  Mogul, J., Fielding, R., Gettys, J. and\
    \ H. Frystyk, \"Use\n              and interpretation of HTTP version numbers\"\
    , RFC 2145, May\n              1997.\n   [RFC2205]  Braden, R., Zhang, L., Berson,\
    \ S., Herzog, S. and S.\n              Jamin, \"Resource ReSerVation Protocol\
    \ (RSVP) -- Version 1\n              Functional Specification\", RFC 2205, September,\
    \ 1997.\n   [RFC2233]  McCloghrie, K. and F. Kastenholz, \"The Interfaces Group\n\
    \              MIB Using SMIv2\", RFC 2233, November, 1997.\n   [RFC2271]  Harrington,\
    \ D., Presuhn, R. and B. Wijnen, \"An\n              Architecture for Describing\
    \ SNMP Management Frameworks\",\n              RFC 2271, January 1998.\n   [RFC2272]\
    \  Case, J., Harrington D., Presuhn R. and B. Wijnen,\n              \"Message\
    \ Processing and Dispatching for the Simple Network\n              Management\
    \ Protocol (SNMP)\", RFC 2272, January 1998.\n   [RFC2273]  Levi, D., Meyer, P.\
    \ and B. Stewart, \"SNMPv3 Applications\",\n              RFC 2273, January 1998.\n\
    \   [RFC2274]  Blumenthal, U. and B. Wijnen, \"User-based Security Model\n   \
    \           (USM) for version 3 of the Simple Network Management\n           \
    \   Protocol (SNMPv3)\", RFC 2274, January 1998.\n   [RFC2275]  Wijnen, B., Presuhn,\
    \ R. and K. McCloghrie, \"View-based\n              Access Control Model (VACM)\
    \ for the Simple Network\n              Management Protocol (SNMP)\", RFC 2275,\
    \ January 1998.\n   [RFC2332]  Luciani, J., Katz, D., Piscitello, D., Cole, B.\
    \ and N.\n              Doraswamy, \"NBMA Next Hop Resolution Protocol (NHRP)\"\
    , RFC\n              2332, April 1998.\n   [RFC2408]  Maughan, D., Schertler,\
    \ M., Schneider, M. and J. Turner,\n              RFC 2408, November 1998.\n \
    \  [RFC2570]  Case, J., Mundy, R., Partain, D. and B. Stewart,\n             \
    \ \"Introduction to Version 3 of the Internet-standard\n              Network\
    \ Management Framework\", RFC 2570, April 1999.\n   [RFC2571]  Harrington, D.,\
    \ Presuhn, R. and B. Wijnen, \"An\n              Architecture for Describing SNMP\
    \ Management Frameworks\",\n              RFC 2571, April 1999.\n   [RFC2572]\
    \  Case, J., Harrington D., Presuhn R. and B. Wijnen,\n              \"Message\
    \ Processing and Dispatching for the Simple Network\n              Management\
    \ Protocol (SNMP)\", RFC 2572, April 1999.\n   [RFC2573]  Levi, D., Meyer, P.\
    \ and B. Stewart, \"SNMPv3 Applications\",\n              RFC 2573, April 1999.\n\
    \   [RFC2574]  Blumenthal, U. and B. Wijnen, \"User-based Security Model\n   \
    \           (USM) for version 3 of the Simple Network Management\n           \
    \   Protocol (SNMPv3)\", RFC 2574, April 1999.\n   [RFC2575]  Wijnen, B., Presuhn,\
    \ R. and K. McCloghrie, \"View-based\n              Access Control Model (VACM)\
    \ for the Simple Network\n              Management Protocol (SNMP)\", RFC 2575,\
    \ April 1999.\n   [RFC2578]  McCloghrie, K., Perkins, D., Schoenwaelder, J., Case,\
    \ J.,\n              Rose, M. and S. Waldbusser, \"Structure of Management\n \
    \             Information Version 2 (SMIv2)\", STD 58, RFC 2578, April\n     \
    \         1999.\n   [RFC2579]  McCloghrie, K., Perkins, D., Schoenwaelder, J.,\
    \ Case, J.,\n              Rose, M. and S. Waldbusser, \"Textual Conventions for\n\
    \              SMIv2\", STD 58, RFC 2579, April 1999.\n   [RFC2580]  McCloghrie,\
    \ K., Perkins, D., Schoenwaelder, J., Case, J.,\n              Rose, M. and S.\
    \ Waldbusser, \"Conformance Statements for\n              SMIv2\", STD 58, RFC\
    \ 2580, April 1999.\n   [RFC2600] Reynolds, J. and R. Braden, \"Internet Official\
    \ Protocol\n              Standards\", STD 1, RFC 2600, March 2000.\n   [RFC2895]\
    \  Bierman, A., Bucci, C. and R. Iddon, \"RMON Protocol\n              Identifier\
    \ Reference\", RFC 2895, August 2000.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   This document contains textual descriptions of\
    \ well-known networking\n   protocols, not the definition of any networking behavior.\
    \  As such,\n   no security considerations are raised by its publication.\n"
- title: 8.  Authors' Addresses
  contents:
  - "8.  Authors' Addresses\n   Andy Bierman\n   Cisco Systems, Inc.\n   170 West\
    \ Tasman Drive\n   San Jose, CA USA 95134\n   Phone: +1 408-527-3711\n   EMail:\
    \ abierman@cisco.com\n   Chris Bucci\n   Cisco Systems, Inc.\n   170 West Tasman\
    \ Drive\n   San Jose, CA USA 95134\n   Phone: +1 408-527-5337\n   EMail: cbucci@cisco.com\n\
    \   Robin Iddon\n   c/o 3Com Inc.\n   Blackfriars House\n   40/50 Blackfrias Street\n\
    \   Edinburgh, EH1 1NE, UK\n   Phone: +44 131.558.3888\n   EMail: None\n"
- title: 9.  Full Copyright Statement
  contents:
  - "9.  Full Copyright Statement\n   Copyright (C) The Internet Society (2000). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
