- title: __initial_text__
  contents:
  - '              IMAP4 Extension for Named Searches (Filters)

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\
    \ (http://trustee.ietf.org/\n   license-info) in effect on the date of publication\
    \ of this document.\n   Please review these documents carefully, as they describe\
    \ your rights\n   and restrictions with respect to this document.\n"
- title: Abstract
  contents:
  - "Abstract\n   The document defines a way to persistently store named IMAP (RFC\n\
    \   3501) searches on the server.  Such named searches can be\n   subsequently\
    \ referenced in a SEARCH or any other command that accepts\n   a search criterion\
    \ as a parameter.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction and Overview . . . . . . . . . . . . .\
    \ . . . . . . 2\n   2.  Conventions Used in This Document . . . . . . . . . .\
    \ . . . . . 2\n   3.  IMAP Protocol Changes . . . . . . . . . . . . . . . . .\
    \ . . . . 2\n     3.1.  FILTER SEARCH Criterion . . . . . . . . . . . . . . .\
    \ . . . 3\n     3.2.  Managing Filters Using SETMETADATA/GETMETADATA Commands\
    \ . . 4\n   4.  Formal Syntax . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . 6\n   5.  Security Considerations . . . . . . . . . . . . . . . . . . . .\
    \ 6\n   6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . . . 7\n\
    \   7.  Acknowledgments . . . . . . . . . . . . . . . . . . . . . . . . 8\n  \
    \ 8.  Normative References  . . . . . . . . . . . . . . . . . . . . . 8\n"
- title: 1.  Introduction and Overview
  contents:
  - "1.  Introduction and Overview\n   Persistent named searches described in this\
    \ document allow clients to\n   save favorite searches on the server.  Such saved\
    \ searches can save\n   bandwidth for clients that need to regularly repeat them.\n\
    \   The FILTERS IMAP extension adds a new FILTER search criterion for\n   referencing\
    \ persistent named searches (a.k.a. \"filters\"), as well as\n   reuses GETMETADATA/SETMETADATA\
    \ commands [METADATA] for listing/\n   creating/updating/deleting such filters.\n\
    \   A filter can be private (only accessible to the logged-in user) or\n   public\
    \ (accessible to all logged-in users).  Both a private and a\n   public filter\
    \ with the same name can exist at the same time.  If both\n   filter types with\
    \ the same name exist, the FILTER SEARCH criterion\n   (see Section 3.1) MUST\
    \ use the value of the private filter;\n   otherwise, it MUST use the value of\
    \ the filter that exists.\n   Let us call a pair of filter name and filter type\
    \ a \"typed filter\".\n   Each typed filter can have a value (which is a valid\
    \ IMAP SEARCH\n   criteria conforming to ABNF for the \"search-criteria\" non-terminal)\n\
    \   and an optional human-readable description.  The SETMETADATA command\n   creates\
    \ or updates the value and/or the description of a typed\n   filter.\n   Values\
    \ of all search keys stored in a filter MUST be encoded in\n   UTF-8.\n"
- title: 2.  Conventions Used in This Document
  contents:
  - "2.  Conventions Used in This Document\n   In examples, \"C:\" and \"S:\" indicate\
    \ lines sent by the client and\n   server, respectively.  If a single \"C:\" or\
    \ \"S:\" label applies to\n   multiple lines, then the line breaks between those\
    \ lines are for\n   editorial clarity only and are not part of the actual protocol\n\
    \   exchange.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n\
    \   Basic familiarity with the METADATA-SERVER extension [METADATA] and\n   terms\
    \ defined therein is required to understand this document.\n"
- title: 3.  IMAP Protocol Changes
  contents:
  - "3.  IMAP Protocol Changes\n   The IMAP extension for persistent named searches\
    \ is present in any\n   IMAP4 implementation that advertises \"FILTERS\" as one\
    \ of the\n   supported capabilities in the CAPABILITY response or response code.\n"
- title: 3.1.  FILTER SEARCH Criterion
  contents:
  - "3.1.  FILTER SEARCH Criterion\n   The FILTER criterion for the SEARCH command\
    \ allows a client to\n   reference by name a filter stored on the server.  Such\
    \ filter was\n   created by setting the server annotation named \"/private/filters/\n\
    \   values/<filter_name>\" (or the server annotation \"/shared/filters/\n   values/<filter_name>\"\
    , if \"/private/filters/values/<filter_name>\"\n   doesn't exist) using the SETMETADATA\
    \ command as described in\n   Section 3.2.\n   Syntax: FILTER <filter_name>\n\
    \   When the named filter exists, its search criterion (i.e., the\n   associated\
    \ entry value) is inserted verbatim instead of the FILTER\n   search-key.  For\
    \ example, the following SEARCH command\n   C: a SEARCH UID 300:900 FILTER on-the-road\
    \ SINCE \"3-Dec-2002\"\n   would be equivalent to the following\n   C: a SEARCH\
    \ UID 300:900 OR SMALLER 5000 FROM \"boss@example.com\"\n   SINCE \"3-Dec-2002\"\
    \n   assuming the filter \"on-the-road\" exists and contains the value 'OR\n \
    \  SMALLER 5000 FROM \"boss@example.com\"'.\n   A reference to a nonexistent or\
    \ unaccessible (e.g., due to access\n   control restrictions) filter MUST cause\
    \ failure of the SEARCH command\n   with the tagged NO response that includes\
    \ the UNDEFINED-FILTER\n   response code followed by the name of the nonexistent/unaccessible\n\
    \   filter.\n   Note the server SHOULD verify that each search criterion referenced\n\
    \   by the FILTER search key is a full and correct search criterion.  For\n  \
    \ example, the server should fail the SEARCH command if its SEARCH\n   criterion\
    \ references a filter containing \"OR SMALLER\" search\n   criterion, because\
    \ this value is lacking one parameter and thus is\n   not a fully specified search\
    \ criterion.\n   Note that a named filter itself can reference another filter\
    \ using\n   the FILTER search-key.  Implementations MUST be able to perform at\n\
    \   least 3 substitution passes on the SEARCH command criterion.  If an\n   implementation\
    \ allows for more passes, it MUST implement some kind of\n   loop detection. \
    \ If an implementation detects a loop or still sees a\n   FILTER search-key after\
    \ performing at least 3 substitutions, it MUST\n   behave as if the specified\
    \ filter doesn't exist (as described above).\n   Note that use of the FILTER search\
    \ key implies the CHARSET \"UTF-8\"\n   parameter to the SEARCH/UID SEARCH command.\
    \  If the SEARCH/UID SEARCH\n   command includes the explicit CHARSET parameter\
    \ with the value other\n   than \"UTF-8\" or \"US-ASCII\", then such command MUST\
    \ result in the\n   tagged BAD response from the server.  Such tagged response\
    \ MUST\n   contain the BADCHARSET response code (see [RFC3501]).\n"
- title: 3.2.  Managing Filters Using SETMETADATA/GETMETADATA Commands
  contents:
  - "3.2.  Managing Filters Using SETMETADATA/GETMETADATA Commands\n   Any server\
    \ compliant with this document MUST either implement the\n   METADATA-SERVER (or\
    \ METADATA) [METADATA] extension, or implement\n   SETMETADATA/GETMETADATA commands\
    \ described in [METADATA] so that they\n   work for the case of empty mailbox\
    \ name (i.e., for managing server\n   annotations) and for the entries specified\
    \ in this section.\n   This document reserves two hierarchies of per-server entries\
    \ under\n   the \"/private/filters/values\" and \"/shared/filters/values\" roots\
    \ (see\n   [METADATA]) for storing filter values.  The value of a \"/private/\n\
    \   filters/values/<filter_name>\" or a \"/shared/filters/values/\n   <filter_name>\"\
    \ server annotation is an IMAP SEARCH criteria,\n   conforming to ABNF for the\
    \ \"search-criteria\" non-terminal.  A name of\n   a filter is governed by the\
    \ ABNF for the \"filter-name\" non-terminal.\n   Note that values of all search\
    \ keys stored in these entries MUST be\n   encoded in UTF-8.\n   A new filter\
    \ named \"<filter_name>\" can be created (or an existing\n   filter can be modified)\
    \ by storing a non-NIL value in the \"/private/\n   filters/values/<filter_name>\"\
    \ server entry (or in the \"/shared/\n   filters/values/<filter_name>\") using\
    \ the SETMETADATA [METADATA]\n   command.  The server SHOULD verify that each\
    \ search criterion stored\n   in such a server entry is a full and correct search\
    \ criterion.\n   A filter can be deleted by storing the NIL value in both the\n\
    \   \"/private/filters/values/<filter_name>\" and the \"/shared/filters/\n   values/<filter_name>\"\
    \ entries.\n   A filter can be renamed by first creating a filter with the new\
    \ name\n   (that has the same value as the old one) and then deleting the filter\n\
    \   with the old one.\n   If both \"/private/filters/values/<filter_name>\" and\
    \ \"/shared/filters/\n   values/<filter_name>\" server annotations exist, then\
    \ the value of the\n   \"/private/filters/values/<filter_name>\" is used when\
    \ evaluating the\n   corresponding FILTER SEARCH key (see Section 3.1).  Otherwise\
    \ the\n   non-NIL (existent) value is used.\n   If the server is unable to create\
    \ a new typed filter because the\n   maximum number of allowed filters has already\
    \ been reached, the\n   server MUST return a tagged NO response with a \"[METADATA\
    \ TOOMANY]\"\n   response code, as defined in [METADATA].\n           C: a007\
    \ SETMETADATA \"\" (\"/private/filters/values/on-the-road\"\n               \"\
    OR SMALLER 5000 FROM \\\"boss@example.com\\\"\")\n           S: a007 OK SETMETADATA\
    \ complete\n   Client implementation note: As multiple clients might read and\
    \ write\n   filter values, it is possible that one client will use a SEARCH key\n\
    \   that might not be recognized by another client that tries to present\n   a\
    \ user interface for editing a filter value.  In order to help other\n   clients\
    \ to (partially) parse filter values for editing purposes, a\n   client storing\
    \ a filter value SHOULD use () around any SEARCH key not\n   defined in [RFC3501].\
    \  For example, if there is an IMAP extension\n   that defines a new x-dsfa SEARCH\
    \ key that takes 2 parameters, then\n   the following SEARCH criterion 'from \"\
    @example.com>\" x-dsfa from 5'\n   should be stored as 'from \"@example.com>\"\
    \ (x-dsfa from 5)'.\n   Note that filter names are restricted to a subset of US-ASCII,\
    \ as\n   described in Section 4.  So they might not always be meaningful to\n\
    \   users and thus not necessarily suitable for display purposes.  In\n   order\
    \ to help with storing human-readable descriptions of filters,\n   this document\
    \ also reserves two hierarchies of server entries under\n   the \"/private/filters/descriptions\"\
    \ and \"/shared/filters/\n   descriptions\" roots.  The value of a \"/private/filters/descriptions/\n\
    \   <filter_name>\" or a \"/shared/filters/descriptions/<filter_name>\"\n   server\
    \ annotation is a human-readable description for the\n   <filter_name> filter,\
    \ encoded in UTF-8 [UTF-8].  If the \"/private/\n   filters/descriptions/<filter_name>\"\
    \ server annotation exists, its\n   value is used by the client as the filter\
    \ description.  Otherwise,\n   the value of the \"/shared/filters/descriptions/<filter_name>\"\
    \ server\n   annotation is used as the filter description.  In the absence of\
    \ both\n   the \"/private/filters/descriptions/<filter_name>\" and the \"/shared/\n\
    \   filters/descriptions/<filter_name>\" entries, the client MAY display\n   the\
    \ name of the filter as its description.\n   The description string SHOULD be\
    \ annotated with one or more language\n   tags [RFC4646] as specified in Chapter\
    \ 16.9 of [Unicode].  In the\n   absence of any language tag, the \"i-default\"\
    \ [RFC2277] language\n   SHOULD be assumed.  Description in multiple languages\
    \ MAY be present\n   in a single description string.  This is done by concatenating\n\
    \   descriptions in multiple languages into a single string, each\n   description\
    \ prefixed with its language tag, for example\n   \"<ru><...description in Russian...><fr-ca><...description\
    \ in\n   French...>\".  Note that here <ru> is a language tag consisting of 3\n\
    \   Unicode characters: <U+E0001>, <U+E0072>, <U+E0075>; and <fr-ca> is a\n  \
    \ language tag consisting of 6 Unicode characters: <U+E0001>,\n   <U+E0066>, <U+E0072>,\
    \ <U+E002D>, <U+E0063>, <U+E0061>.\n"
- title: 4.  Formal Syntax
  contents:
  - "4.  Formal Syntax\n   The following syntax specification uses the Augmented Backus-Naur\n\
    \   Form (ABNF) notation as specified in [ABNF].\n   Non-terminals referenced\
    \ but not defined below are as defined by\n   [RFC3501] or [IMAPABNF].\n   Except\
    \ as noted otherwise, all alphabetic characters are case-\n   insensitive.  The\
    \ use of upper or lower case characters to define\n   token strings is for editorial\
    \ clarity only.  Implementations MUST\n   accept these strings in a case-insensitive\
    \ fashion.\n   capability            =/ \"FILTERS\"\n   search-criteria      \
    \ =  search-key *(SP search-key)\n   search-key            =/  \"FILTER\" SP filter-name\n\
    \                         ;; New SEARCH criterion for referencing filters\n  \
    \ filter-name           =  1*<any ATOM-CHAR except \"/\">\n                  \
    \       ;; Note that filter-name disallows UTF-8 or\n                        \
    \ ;; the following characters: \"(\", \")\", \"{\",\n                        \
    \ ;; \" \", \"%\", \"*\", \"]\".  See definition of\n                        \
    \ ;; ATOM-CHAR [RFC3501].\n   resp-text-code        =/  \"UNDEFINED-FILTER\" SP\
    \ filter-name\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   General issues relevant to [RFC3501] (in particular\
    \ to the SEARCH\n   command) and METADATA-SERVER extension [METADATA] are also\
    \ relevant\n   to this document.\n   Note that excessive use of filters can potentially\
    \ simplify denial-\n   of-service attacks, especially if combined with poor implementations\n\
    \   and lack of loop detection (i.e., detection of filters referencing\n   each\
    \ other to create a loop).  Servers that allow for anonymous\n   access SHOULD\
    \ NOT allow anonymous users to create/edit/delete\n   filters.\n   Also note that\
    \ stored filters can potentially disclose personal\n   information about users.\
    \  When confidentiality of such information is\n   important, clients MUST use\
    \ TLS and/or SASL security layer (or\n   similar) as recommended in [RFC3501].\
    \  Also, clients should use\n   private filters instead of public, unless they\
    \ desire to share such\n   information with other users.\n   As always, it is\
    \ important to thoroughly test clients and servers\n   when implementing this\
    \ extension.\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   IMAP4 capabilities are registered by publishing a\
    \ Standards Track or\n   IESG-approved Experimental RFC.  The IMAP4 capabilities\
    \ registry is\n   available from http://www.iana.org.\n   This document defines\
    \ the FILTERS IMAP capability.  IANA has added it\n   to the registry.\n   IANA\
    \ has added the following 4 entries to the [METADATA] registry:\n   To:  iana@iana.org\n\
    \   Subject:  IMAP METADATA Entry Registration\n   Type:  Server\n   Name:  /private/filters/values/<filter_name>\n\
    \   Description:  Contains an IMAP SEARCH criteria.  Defined in RFC 5466.\n  \
    \ Content-type:  text/plain; charset=utf-8\n   Contact person:  Alexey Melnikov\n\
    \   Email:  alexey.melnikov@isode.com\n   To:  iana@iana.org\n   Subject:  IMAP\
    \ METADATA Entry Registration\n   Type:  Server\n   Name:  /shared/filters/values/<filter_name>\n\
    \   Description:  Contains an IMAP SEARCH criterion.  Defined in RFC\n      5466.\n\
    \   Content-type:  text/plain; charset=utf-8\n   Contact person:  Alexey Melnikov\n\
    \   Email:  alexey.melnikov@isode.com\n   To:  iana@iana.org\n   Subject:  IMAP\
    \ METADATA Entry Registration\n   Type:  Server\n   Name:  /private/filters/descriptions/<filter_name>\n\
    \   Description:  Contains a user-specific human-readable description of\n   \
    \   a named SEARCH criterion stored in the /private/filters/values/\n      <filter_name>\
    \ or /shared/filters/values/<filter_name> annotation.\n      The value is in UTF-8.\
    \  Defined in RFC 5466.\n   Content-type:  text/plain; charset=utf-8\n   Contact\
    \ person:  Alexey Melnikov\n   Email:  alexey.melnikov@isode.com\n   To:  iana@iana.org\n\
    \   Subject:  IMAP METADATA Entry Registration\n   Type:  Server\n   Name:  /shared/filters/descriptions/<filter_name>\n\
    \   Description:  Contains a global (shared among all users) human-\n      readable\
    \ description of a named SEARCH criterion stored in the\n      /private/filters/values/<filter_name>\
    \ or /shared/filters/values/\n      <filter_name> annotation.  The value is in\
    \ UTF-8.  Defined in RFC\n      5466.\n   Content-type:  text/plain; charset=utf-8\n\
    \   Contact person:  Alexey Melnikov\n   Email:  alexey.melnikov@isode.com\n"
- title: 7.  Acknowledgments
  contents:
  - "7.  Acknowledgments\n   Thanks to David Cridland, Arnt Gulbrandsen, Chris Newman,\
    \ and Timo\n   Sirainen for comments and suggestions on this document.  Special\n\
    \   thank you to Brian E. Carpenter for the GenArt review.\n"
- title: 8.  Normative References
  contents:
  - "8.  Normative References\n   [ABNF]      Crocker, D., Ed. and P. Overell, Ed.,\
    \ \"Augmented BNF for\n               Syntax Specifications: ABNF\", STD 68, RFC\
    \ 5234,\n               January 2008.\n   [IMAPABNF]  Melnikov, A. and C. Daboo,\
    \ \"Collected Extensions to IMAP4\n               ABNF\", RFC 4466, April 2006.\n\
    \   [METADATA]  Daboo, C., \"The IMAP METADATA Extension\", RFC 5464,\n      \
    \         February 2009.\n   [RFC2119]   Bradner, S., \"Key words for use in RFCs\
    \ to Indicate\n               Requirement Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [RFC2277]   Alvestrand, H., \"IETF Policy on Character Sets and\n        \
    \       Languages\", BCP 18, RFC 2277, January 1998.\n   [RFC3501]   Crispin,\
    \ M., \"INTERNET MESSAGE ACCESS PROTOCOL - VERSION\n               4rev1\", RFC\
    \ 3501, March 2003.\n   [RFC4646]   Phillips, A. and M. Davis, \"Tags for Identifying\n\
    \               Languages\", BCP 47, RFC 4646, September 2006.\n   [UTF-8]   \
    \  Yergeau, F., \"UTF-8, a transformation format of ISO\n               10646\"\
    , STD 63, RFC 3629, November 2003.\n   [Unicode]   \"The Unicode Standard 5.0\"\
    , Unicode 5.0, 2007,\n               <http://www.unicode.org/versions/Unicode5.0.0/>.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Alexey Melnikov\n   Isode Ltd\n   5 Castle Business Village\n\
    \   36 Station Road\n   Hampton, Middlesex  TW12 2BX\n   UK\n   EMail: Alexey.Melnikov@isode.com\n\
    \   Curtis King\n   Isode Ltd\n   5 Castle Business Village\n   36 Station Road\n\
    \   Hampton, Middlesex  TW12 2BX\n   UK\n   EMail: Curtis.King@isode.com\n"
