- title: __initial_text__
  contents:
  - '                    Hypertext Markup Language - 2.0

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   The Hypertext Markup Language (HTML) is a simple markup language\
    \ used\n   to create hypertext documents that are platform independent. HTML\n\
    \   documents are SGML documents with generic semantics that are\n   appropriate\
    \ for representing information from a wide range of\n   domains. HTML markup can\
    \ represent hypertext news, mail,\n   documentation, and hypermedia; menus of\
    \ options; database query\n   results; simple structured documents with in-lined\
    \ graphics; and\n   hypertext views of existing bodies of information.\n   HTML\
    \ has been in use by the World Wide Web (WWW) global information\n   initiative\
    \ since 1990. This specification roughly corresponds to the\n   capabilities of\
    \ HTML in common use prior to June 1994. HTML is an\n   application of ISO Standard\
    \ 8879:1986 Information Processing Text and\n   Office Systems; Standard Generalized\
    \ Markup Language (SGML).\n   The \"text/html\" Internet Media Type (RFC 1590)\
    \ and MIME Content Type\n   (RFC 1521) is defined by this specification.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n    1.     Introduction ...........................................\
    \ 2\n    1.1    Scope .................................................. 3\n \
    \   1.2    Conformance ............................................ 3\n    2.\
    \     Terms .................................................. 6\n    3.     HTML\
    \ as an Application of SGML .........................10\n    3.1    SGML Documents\
    \ .........................................10\n    3.2    HTML Lexical Syntax\
    \ ................................... 12\n    3.3    HTML Public Text Identifiers\
    \ .......................... 17\n    3.4    Example HTML Document .................................\
    \ 17\n    4.     HTML as an Internet Media Type ........................ 18\n\
    \    4.1    text/html media type .................................. 18\n    4.2\
    \    HTML Document Representation .......................... 19\n    5.     Document\
    \ Structure .................................... 20\n    5.1    Document Element:\
    \ HTML ................................ 21\n    5.2    Head: HEAD ............................................\
    \ 21\n    5.3    Body: BODY ............................................ 24\n\
    \    5.4    Headings: H1 ... H6 ................................... 24\n    5.5\
    \    Block Structuring Elements ............................ 25\n    5.6    List\
    \ Elements ......................................... 28\n    5.7    Phrase Markup\
    \ ......................................... 30\n    5.8    Line Break: BR ........................................\
    \ 34\n    5.9    Horizontal Rule: HR ................................... 34\n\
    \    5.10   Image: IMG ............................................ 34\n    6.\
    \     Characters, Words, and Paragraphs ..................... 35\n    6.1    The\
    \ HTML Document Character Set ....................... 36\n    7.     Hyperlinks\
    \ ............................................ 36\n    7.1    Accessing Resources\
    \ ................................... 37\n    7.2    Activation of Hyperlinks\
    \ .............................. 38\n    7.3    Simultaneous Presentation of Image\
    \ Resources .......... 38\n    7.4    Fragment Identifiers ..................................\
    \ 38\n    7.5    Queries and Indexes ................................... 39\n\
    \    7.6    Image Maps ............................................ 39\n    8.\
    \     Forms ................................................. 40\n    8.1    Form\
    \ Elements ......................................... 40\n    8.2    Form Submission\
    \ ....................................... 45\n    9.     HTML Public Text ......................................\
    \ 49\n    9.1    HTML DTD .............................................. 49\n\
    \    9.2    Strict HTML DTD ....................................... 61\n    9.3\
    \    Level 1 HTML DTD ...................................... 62\n    9.4    Strict\
    \ Level 1 HTML DTD ............................... 63\n    9.5    SGML Declaration\
    \ for HTML ............................. 64\n    9.6    Sample SGML Open Entity\
    \ Catalog for HTML .............. 65\n    9.7    Character Entity Sets .................................\
    \ 66\n    10.    Security Considerations ............................... 69\n\
    \    11.    References ............................................ 69\n    12.\
    \    Acknowledgments ....................................... 71\n    12.1   Authors'\
    \ Addresses .................................... 71\n    13.    The HTML Coded\
    \ Character Set .......................... 72\n    14.    Proposed Entities .....................................\
    \ 75\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   The HyperText Markup Language (HTML) is a simple data format\
    \ used to\n   create hypertext documents that are portable from one platform to\n\
    \   another. HTML documents are SGML documents with generic semantics\n   that\
    \ are appropriate for representing information from a wide range\n   of domains.\n\
    \   As HTML is an application of SGML, this specification assumes a\n   working\
    \ knowledge of [SGML].\n"
- title: 1.1. Scope
  contents:
  - "1.1. Scope\n   HTML has been in use by the World-Wide Web (WWW) global information\n\
    \   initiative since 1990. Previously, informal documentation on HTML has\n  \
    \ been available from a number of sources on the Internet. This\n   specification\
    \ brings together, clarifies, and formalizes a set of\n   features that roughly\
    \ corresponds to the capabilities of HTML in\n   common use prior to June 1994.\
    \ A number of new features to HTML are\n   being proposed and experimented in\
    \ the Internet community.\n   This document thus defines a HTML 2.0 (to distinguish\
    \ it from the\n   previous informal specifications). Future (generally upwardly\n\
    \   compatible) versions of HTML with new features will be released with\n   higher\
    \ version numbers.\n   HTML is an application of ISO Standard 8879:1986, \"Information\n\
    \   Processing Text and Office Systems; Standard Generalized Markup\n   Language\"\
    \ (SGML). The HTML Document Type Definition (DTD) is a formal\n   definition of\
    \ the HTML syntax in terms of SGML.\n   This specification also defines HTML as\
    \ an Internet Media\n   Type[IMEDIA] and MIME Content Type[MIME] called `text/html'.\
    \ As such,\n   it defines the semantics of the HTML syntax and how that syntax\n\
    \   should be interpreted by user agents.\n"
- title: 1.2. Conformance
  contents:
  - "1.2. Conformance\n   This specification governs the syntax of HTML documents\
    \ and aspects\n   of the behavior of HTML user agents.\n"
- title: 1.2.1. Documents
  contents:
  - "1.2.1. Documents\n   A document is a conforming HTML document if:\n        *\
    \ It is a conforming SGML document, and it conforms to the\n        HTML DTD (see\
    \ 9.1, \"HTML DTD\").\n            NOTE - There are a number of syntactic idioms\
    \ that\n            are not supported or are supported inconsistently in\n   \
    \         some historical user agent implementations. These\n            idioms\
    \ are identified in notes like this throughout\n            this specification.\n\
    \        * It conforms to the application conventions in this\n        specification.\
    \ For example, the value of the HREF attribute\n        of the <A> element must\
    \ conform to the URI syntax.\n        * Its document character set includes [ISO-8859-1]\
    \ and\n        agrees with [ISO-10646]; that is, each code position listed\n \
    \       in 13, \"The HTML Coded Character Set\" is included, and each\n      \
    \  code position in the document character set is mapped to the\n        same\
    \ character as [ISO-10646] designates for that code\n        position.\n     \
    \       NOTE - The document character set is somewhat\n            independent\
    \ of the character encoding scheme used to\n            represent a document.\
    \ For example, the `ISO-2022-JP'\n            character encoding scheme can be\
    \ used for HTML\n            documents, since its repertoire is a subset of the\n\
    \            [ISO-10646] repertoire. The critical distinction is\n           \
    \ that numeric character references agree with\n            [ISO-10646] regardless\
    \ of how the document is\n            encoded.\n"
- title: 1.2.2. Feature Test Entities
  contents:
  - "1.2.2. Feature Test Entities\n   The HTML DTD defines a standard HTML document\
    \ type and several\n   variations, by way of feature test entities. Feature test\
    \ entities\n   are declarations in the HTML DTD that control the inclusion or\n\
    \   exclusion of portions of the DTD.\n    HTML.Recommended\n            Certain\
    \ features of the language are necessary for\n            compatibility with widespread\
    \ usage, but they may\n            compromise the structural integrity of a document.\
    \ This\n            feature test entity selects a more prescriptive document\n\
    \            type definition that eliminates those features. It is\n         \
    \   set to `IGNORE' by default.\n            For example, in order to preserve\
    \ the structure of a\n            document, an editing user agent may translate\
    \ HTML\n            documents to the recommended subset, or it may require\n \
    \           that the documents be in the recommended subset for\n            import.\n\
    \    HTML.Deprecated\n            Certain features of the language are necessary\
    \ for\n            compatibility with earlier versions of the\n            specification,\
    \ but they tend to be used and implemented\n            inconsistently, and their\
    \ use is deprecated. This\n            feature test entity enables a document\
    \ type definition\n            that allows these features. It is set to `INCLUDE'\
    \ by\n            default.\n            Documents generated by translation software\
    \ or editing\n            software should not contain deprecated idioms.\n"
- title: 1.2.3. User Agents
  contents:
  - "1.2.3. User Agents\n   An HTML user agent conforms to this specification if:\n\
    \        * It parses the characters of an HTML document into data\n        characters\
    \ and markup according to [SGML].\n            NOTE - In the interest of robustness\
    \ and\n            extensibility, there are a number of widely deployed\n    \
    \        conventions for handling non-conforming documents.\n            See 4.2.1,\
    \ \"Undeclared Markup Error Handling\" for\n            details.\n        * It\
    \ supports the `ISO-8859-1' character encoding scheme and\n        processes each\
    \ character in the ISO Latin Alphabet No. 1 as\n        specified in 6.1, \"The\
    \ HTML Document Character Set\".\n            NOTE - To support non-western writing\
    \ systems, HTML\n            user agents are encouraged to support\n         \
    \   `ISO-10646-UCS-2' or similar character encoding\n            schemes and as\
    \ much of the character repertoire of\n            [ISO-10646] as is practical.\n\
    \        * It behaves identically for documents whose parsed token\n        sequences\
    \ are identical.\n        For example, comments and the whitespace in tags disappear\n\
    \        during tokenization, and hence they do not influence the\n        behavior\
    \ of conforming user agents.\n        * It allows the user to traverse (or at\
    \ least attempt to\n        traverse, resources permitting) all hyperlinks from\
    \ <A>\n        elements in an HTML document.\n   An HTML user agent is a level\
    \ 2 user agent if, additionally:\n        * It allows the user to express all\
    \ form field values\n        specified in an HTML document and to (attempt to)\
    \ submit the\n        values as requests to information services.\n"
- title: 2. Terms
  contents:
  - "2. Terms\n    absolute URI\n            a URI in absolute form; for example,\
    \ as per [URL]\n    anchor\n            one of two ends of a hyperlink; typically,\
    \ a phrase\n            marked as an <A> element.\n    base URI\n            an\
    \ absolute URI used in combination with a relative URI\n            to determine\
    \ another absolute URI.\n    character\n            An atom of information, for\
    \ example a letter or a digit.\n            Graphic characters have associated\
    \ glyphs, whereas\n            control characters have associated processing semantics.\n\
    \    character encoding\n    scheme\n            A function whose domain is the\
    \ set of sequences of\n            octets, and whose range is the set of sequences\
    \ of\n            characters from a character repertoire; that is, a\n       \
    \     sequence of octets and a character encoding scheme\n            determines\
    \ a sequence of characters.\n    character repertoire\n            A finite set\
    \ of characters; e.g. the range of a coded\n            character set.\n    code\
    \ position\n            An integer. A coded character set and a code position\n\
    \            from its domain determine a character.\n    coded character set\n\
    \            A function whose domain is a subset of the integers and\n       \
    \     whose range is a character repertoire. That is, for some\n            set\
    \ of integers (usually of the form {0, 1, 2, ..., N}\n            ), a coded character\
    \ set and an integer in that set\n            determine a character. Conversely,\
    \ a character and a\n            coded character set determine the character's\
    \ code\n            position (or, in rare cases, a few code positions).\n    conforming\
    \ HTML user\n    agent\n            A user agent that conforms to this specification\
    \ in its\n            processing of the Internet Media Type `text/html'.\n   \
    \ data character\n            Characters other than markup, which make up the\
    \ content\n            of elements.\n    document character set\n            a\
    \ coded character set whose range includes all\n            characters used in\
    \ a document. Every SGML document has\n            exactly one document character\
    \ set. Numeric character\n            references are resolved via the document\
    \ character set.\n    DTD\n            document type definition. Rules that apply\
    \ SGML to the\n            markup of documents of a particular type, including\
    \ a\n            set of element and entity declarations. [SGML]\n    element\n\
    \            A component of the hierarchical structure defined by a\n        \
    \    document type definition; it is identified in a document\n            instance\
    \ by descriptive markup, usually a start-tag and\n            end-tag. [SGML]\n\
    \    end-tag\n            Descriptive markup that identifies the end of an\n \
    \           element. [SGML]\n    entity\n            data with an associated notation\
    \ or interpretation; for\n            example, a sequence of octets associated\
    \ with an\n            Internet Media Type. [SGML]\n    fragment identifier\n\
    \            the portion of an HREF attribute value following the `#'\n      \
    \      character which modifies the presentation of the\n            destination\
    \ of a hyperlink.\n    form data set\n            a sequence of name/value pairs;\
    \ the names are given by\n            an HTML document and the values are given\
    \ by a user.\n    HTML document\n            An SGML document conforming to this\
    \ document type\n            definition.\n    hyperlink\n            a relationship\
    \ between two anchors, called the head and\n            the tail. The link goes\
    \ from the tail to the head. The\n            head and tail are also known as\
    \ destination and source,\n            respectively.\n    markup\n           \
    \ Syntactically delimited characters added to the data of\n            a document\
    \ to represent its structure. There are four\n            different kinds of markup:\
    \ descriptive markup (tags),\n            references, markup declarations, and\
    \ processing\n            instructions. [SGML]\n    may\n            A document\
    \ or user interface is conforming whether this\n            statement applies\
    \ or not.\n    media type\n            an Internet Media Type, as per [IMEDIA].\n\
    \    message entity\n            a head and body. The head is a collection of\
    \ name/value\n            fields, and the body is a sequence of octets. The head\n\
    \            defines the content type and content transfer encoding\n        \
    \    of the body. [MIME]\n    minimally conforming\n    HTML user agent\n    \
    \        A user agent that conforms to this specification except\n           \
    \ for form processing. It may only process level 1 HTML\n            documents.\n\
    \    must\n            Documents or user agents in conflict with this statement\n\
    \            are not conforming.\n    numeric character\n    reference\n     \
    \       markup that refers to a character by its code position\n            in\
    \ the document character set.\n    SGML document\n            A sequence of characters\
    \ organized physically as a set\n            of entities and logically into a\
    \ hierarchy of elements.\n            An SGML document consists of data characters\
    \ and markup;\n            the markup describes the structure of the information\n\
    \            and an instance of that structure. [SGML]\n    shall\n          \
    \  If a document or user agent conflicts with this\n            statement, it\
    \ does not conform to this specification.\n    should\n            If a document\
    \ or user agent conflicts with this\n            statement, undesirable results\
    \ may occur in practice\n            even though it conforms to this specification.\n\
    \    start-tag\n            Descriptive markup that identifies the start of an\n\
    \            element and specifies its generic identifier and\n            attributes.\
    \ [SGML]\n    syntax-reference\n    character set\n            A coded character\
    \ set whose range includes all\n            characters used for markup; e.g. name\
    \ characters and\n            delimiter characters.\n    tag\n            Markup\
    \ that delimits an element. A tag includes a name\n            which refers to\
    \ an element declaration in the DTD, and\n            may include attributes.\
    \ [SGML]\n    text entity\n            A finite sequence of characters. A text\
    \ entity typically\n            takes the form of a sequence of octets with some\n\
    \            associated character encoding scheme, transmitted over\n        \
    \    the network or stored in a file. [SGML]\n    typical\n            Typical\
    \ processing is described for many elements. This\n            is not a mandatory\
    \ part of the specification but is\n            given as guidance for designers\
    \ and to help explain the\n            uses for which the elements were intended.\n\
    \    URI\n            A Uniform Resource Identifier is a formatted string that\n\
    \            serves as an identifier for a resource, typically on the\n      \
    \      Internet. URIs are used in HTML to identify the anchors\n            of\
    \ hyperlinks. URIs in common practice include Uniform\n            Resource Locators\
    \ (URLs)[URL] and Relative URLs\n            [RELURL].\n    user agent\n     \
    \       A component of a distributed system that presents an\n            interface\
    \ and processes requests on behalf of a user;\n            for example, a www\
    \ browser or a mail user agent.\n    WWW\n            The World-Wide Web is a\
    \ hypertext-based, distributed\n            information system created by researchers\
    \ at CERN in\n            Switzerland. <URL:http://www.w3.org/>\n"
- title: 3. HTML as an Application of SGML
  contents:
  - "3. HTML as an Application of SGML\n   HTML is an application of ISO 8879:1986\
    \ -- Standard Generalized\n   Markup Language (SGML). SGML is a system for defining\
    \ structured\n   document types and markup languages to represent instances of\
    \ those\n   document types[SGML]. The public text -- DTD and SGML declaration\
    \ --\n   of the HTML document type definition are provided in 9, \"HTML Public\n\
    \   Text\".\n   The term \"HTML\" refers to both the document type defined here\
    \ and the\n   markup language for representing instances of this document type.\n"
- title: 3.1. SGML Documents
  contents:
  - "3.1. SGML Documents\n   An HTML document is an SGML document; that is, a sequence\
    \ of\n   characters organized physically into a set of entities, and logically\n\
    \   as a hierarchy of elements.\n   In the SGML specification, the first production\
    \ of the SGML syntax\n   grammar separates an SGML document into three parts:\
    \ an SGML\n   declaration, a prologue, and an instance. For the purposes of this\n\
    \   specification, the prologue is a DTD. This DTD describes another\n   grammar:\
    \ the start symbol is given in the doctype declaration, the\n   terminals are\
    \ data characters and tags, and the productions are\n   determined by the element\
    \ declarations. The instance must conform to\n   the DTD, that is, it must be\
    \ in the language defined by this grammar.\n   The SGML declaration determines\
    \ the lexicon of the grammar. It\n   specifies the document character set, which\
    \ determines a character\n   repertoire that contains all characters that occur\
    \ in all text\n   entities in the document, and the code positions associated\
    \ with\n   those characters.\n   The SGML declaration also specifies the syntax-reference\
    \ character\n   set of the document, and a few other parameters that bind the\n\
    \   abstract syntax of SGML to a concrete syntax. This concrete syntax\n   determines\
    \ how the sequence of characters of the document is mapped\n   to a sequence of\
    \ terminals in the grammar of the prologue.\n   For example, consider the following\
    \ document:\n    <!DOCTYPE html PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n    <title>Parsing\
    \ Example</title>\n    <p>Some text. <em>&#42;wow&#42;</em></p>\n   An HTML user\
    \ agent should use the SGML declaration that is given in\n   9.5, \"SGML Declaration\
    \ for HTML\". According to its document character\n   set, `&#42;' refers to an\
    \ asterisk character, `*'.\n   The instance above is regarded as the following\
    \ sequence of\n   terminals:\n        1. start-tag: TITLE\n        2. data characters:\
    \ \"Parsing Example\"\n        3. end-tag: TITLE\n        4. start-tag: P\n  \
    \      5. data characters \"Some text.\"\n        6. start-tag: EM\n        7.\
    \ data characters: \"*wow*\"\n        8. end-tag: EM\n        9. end-tag: P\n\
    \   The start symbol of the DTD grammar is HTML, and the productions are\n   given\
    \ in the public text identified by `-//IETF//DTD HTML 2.0//EN'\n   (9.1, \"HTML\
    \ DTD\"). The terminals above parse as:\n       HTML\n        |\n        \\-HEAD\n\
    \        |  |\n        |  \\-TITLE\n        |      |\n        |      \\-<TITLE>\n\
    \        |      |\n        |      \\-\"Parsing Example\"\n        |      |\n \
    \       |      \\-</TITLE>\n        |\n        \\-BODY\n          |\n        \
    \  \\-P\n            |\n            \\-<P>\n            |\n            \\-\"Some\
    \ text. \"\n            |\n            \\-EM\n            |  |\n            |\
    \  \\-<EM>\n            |  |\n            |  \\-\"*wow*\"\n            |  |\n\
    \            |  \\-</EM>\n            |\n            \\-</P>\n   Some of the elements\
    \ are delimited explicitly by tags, while the\n   boundaries of others are inferred.\
    \ The <HTML> element contains a\n   <HEAD> element and a <BODY> element. The <HEAD>\
    \ contains <TITLE>,\n   which is explicitly delimited by start- and end-tags.\n"
- title: 3.2. HTML Lexical Syntax
  contents:
  - "3.2. HTML Lexical Syntax\n   SGML specifies an abstract syntax and a reference\
    \ concrete syntax.\n   Aside from certain quantities and capacities (e.g. the\
    \ limit on the\n   length of a name), all HTML documents use the reference concrete\n\
    \   syntax. In particular, all markup characters are in the repertoire of\n  \
    \ [ISO-646]. Data characters are drawn from the document character set\n   (see\
    \ 6, \"Characters, Words, and Paragraphs\").\n   A complete discussion of SGML\
    \ parsing, e.g. the mapping of a sequence\n   of characters to a sequence of tags\
    \ and data, is left to the SGML\n   standard[SGML]. This section is only a summary.\n"
- title: 3.2.1. Data Characters
  contents:
  - "3.2.1. Data Characters\n   Any sequence of characters that do not constitute\
    \ markup (see 9.6\n   \"Delimiter Recognition\" of [SGML]) are mapped directly\
    \ to strings of\n   data characters. Some markup also maps to data character strings.\n\
    \   Numeric character references map to single-character strings, via the\n  \
    \ document character set. Each reference to one of the general entities\n   defined\
    \ in the HTML DTD maps to a single-character string.\n   For example,\n    abc&lt;def\
    \    => \"abc\",\"<\",\"def\"\n    abc&#60;def   => \"abc\",\"<\",\"def\"\n  \
    \ The terminating semicolon on entity or numeric character references\n   is only\
    \ necessary when the character following the reference would\n   otherwise be\
    \ recognized as part of the name (see 9.4.5 \"Reference\n   End\" in [SGML]).\n\
    \    abc &lt def     => \"abc \",\"<\",\" def\"\n    abc &#60 def    => \"abc\
    \ \",\"<\",\" def\"\n   An ampersand is only recognized as markup when it is followed\
    \ by a\n   letter or a `#' and a digit:\n    abc & lt def    => \"abc & lt def\"\
    \n    abc &# 60 def    => \"abc &# 60 def\"\n   A useful technique for translating\
    \ plain text to HTML is to replace\n   each '<', '&', and '>' by an entity reference\
    \ or numeric character\n   reference as follows:\n                     ENTITY\
    \      NUMERIC\n           CHARACTER REFERENCE   CHAR REF     CHARACTER DESCRIPTION\n\
    \           --------- ----------  -----------  ---------------------\n       \
    \      &       &amp;       &#38;        Ampersand\n             <       &lt; \
    \       &#60;        Less than\n             >       &gt;        &#62;       \
    \ Greater than\n        NOTE - There are SGML mechanisms, CDATA and RCDATA\n \
    \       declared content, that allow most `<', `>', and `&'\n        characters\
    \ to be entered without the use of entity\n        references. Because these mechanisms\
    \ tend to be used and\n        implemented inconsistently, and because they conflict\n\
    \        with techniques for reducing HTML to 7 bit ASCII for\n        transport,\
    \ they are deprecated in this version of HTML.\n        See 5.5.2.1, \"Example\
    \ and Listing: XMP, LISTING\".\n"
- title: 3.2.2. Tags
  contents:
  - "3.2.2. Tags\n   Tags delimit elements such as headings, paragraphs, lists, character\n\
    \   highlighting, and links. Most HTML elements are identified in a\n   document\
    \ as a start-tag, which gives the element name and attributes,\n   followed by\
    \ the content, followed by the end tag. Start-tags are\n   delimited by `<' and\
    \ `>'; end tags are delimited by `</' and `>'. An\n   example is:\n   <H1>This\
    \ is a Heading</H1>\n   Some elements only have a start-tag without an end-tag.\
    \ For example,\n   to create a line break, use the `<BR>' tag.  Additionally,\
    \ the end\n   tags of some other elements, such as Paragraph (`</P>'), List Item\n\
    \   (`</LI>'), Definition Term (`</DT>'), and Definition Description\n   (`</DD>')\
    \ elements, may be omitted.\n   The content of an element is a sequence of data\
    \ character strings and\n   nested elements. Some elements, such as anchors, cannot\
    \ be nested.\n   Anchors and character highlighting may be put inside other\n\
    \   constructs. See the HTML DTD, 9.1, \"HTML DTD\" for full details.\n      NOTE\
    \ - The SGML declaration for HTML specifies SHORTTAG YES, which\n      means that\
    \ there are other valid syntaxes for tags, such as NET\n      tags, `<EM/.../';\
    \ empty start tags, `<>'; and empty end-tags,\n      `</>'. Until support for\
    \ these idioms is widely deployed, their\n      use is strongly discouraged.\n"
- title: 3.2.3. Names
  contents:
  - "3.2.3. Names\n   A name consists of a letter followed by letters, digits, periods,\
    \ or\n   hyphens. The length of a name is limited to 72 characters by the\n  \
    \ `NAMELEN' parameter in the SGML declaration for HTML, 9.5, \"SGML\n   Declaration\
    \ for HTML\". Element and attribute names are not case\n   sensitive, but entity\
    \ names are.  For example, `<BLOCKQUOTE>',\n   `<BlockQuote>', and `<blockquote>'\
    \ are equivalent, whereas `&amp;' is\n   different from `&AMP;'.\n   In a start-tag,\
    \ the element name must immediately follow the tag open\n   delimiter `<'.\n"
- title: 3.2.4. Attributes
  contents:
  - "3.2.4. Attributes\n   In a start-tag, white space and attributes are allowed\
    \ between the\n   element name and the closing delimiter. An attribute specification\n\
    \   typically consists of an attribute name, an equal sign, and a value,\n   though\
    \ some attribute specifications may be just a name token. White\n   space is allowed\
    \ around the equal sign.\n   The value of the attribute may be either:\n     \
    \   * A string literal, delimited by single quotes or double\n        quotes and\
    \ not containing any occurrences of the delimiting\n        character.\n     \
    \       NOTE - Some historical implementations consider any\n            occurrence\
    \ of the `>' character to signal the end of\n            a tag. For compatibility\
    \ with such implementations,\n            when `>' appears in an attribute value,\
    \ it should be\n            represented with a numeric character reference. For\n\
    \            example, `<IMG SRC=\"eq1.jpg\" alt=\"a>b\">' should be\n        \
    \    written `<IMG SRC=\"eq1.jpg\" alt=\"a&#62;b\">' or `<IMG\n            SRC=\"\
    eq1.jpg\" alt=\"a&gt;b\">'.\n        * A name token (a sequence of letters, digits,\
    \ periods, or\n        hyphens). Name tokens are not case sensitive.\n       \
    \     NOTE - Some historical implementations allow any\n            character\
    \ except space or `>' in a name token.\n   In this example, <img> is the element\
    \ name, src is the attribute\n   name, and `http://host/dir/file.gif' is the attribute\
    \ value:\n   <img src='http://host/dir/file.gif'>\n   A useful technique for computing\
    \ an attribute value literal for a\n   given string is to replace each quote and\
    \ white space character by an\n   entity reference or numeric character reference\
    \ as follows:\n                     ENTITY      NUMERIC\n           CHARACTER\
    \ REFERENCE   CHAR REF     CHARACTER DESCRIPTION\n           --------- ----------\
    \  -----------  ---------------------\n             HT                  &#9; \
    \        Tab\n             LF                  &#10;        Line Feed\n      \
    \       CR                  &#13;        Carriage Return\n             SP    \
    \              &#32;        Space\n             \"       &quot;      &#34;   \
    \     Quotation mark\n             &       &amp;       &#38;        Ampersand\n\
    \   For example:\n   <IMG SRC=\"image.jpg\" alt=\"First &quot;real&quot; example\"\
    >\n   The `NAMELEN' parameter in the SGML declaration (9.5, \"SGML\n   Declaration\
    \ for HTML\") limits the length of an attribute value to\n   1024 characters.\n\
    \   Attributes such as ISMAP and COMPACT may be written using a minimized\n  \
    \ syntax (see 7.9.1.2 \"Omitted Attribute Name\" in [SGML]). The markup:\n   <UL\
    \ COMPACT=\"compact\">\n   can be written using a minimized syntax:\n   <UL COMPACT>\n\
    \   NOTE - Some historical implementations only understand the minimized\n   syntax.\n"
- title: 3.2.5. Comments
  contents:
  - "3.2.5. Comments\n   To include comments in an HTML document, use a comment declaration.\
    \ A\n   comment declaration consists of `<!' followed by zero or more\n   comments\
    \ followed by `>'. Each comment starts with `--' and includes\n   all text up\
    \ to and including the next occurrence of `--'. In a\n   comment declaration,\
    \ white space is allowed after each comment, but\n   not before the first comment.\
    \  The entire comment declaration is\n   ignored.\n      NOTE - Some historical\
    \ HTML implementations incorrectly consider\n      any `>' character to be the\
    \ termination of a comment.\n   For example:\n    <!DOCTYPE HTML PUBLIC \"-//IETF//DTD\
    \ HTML 2.0//EN\">\n    <HEAD>\n    <TITLE>HTML Comment Example</TITLE>\n    <!--\
    \ Id: html-sgml.sgm,v 1.5 1995/05/26 21:29:50 connolly Exp  -->\n    <!-- another\
    \ -- -- comment -->\n    <!>\n    </HEAD>\n    <BODY>\n    <p> <!- not a comment,\
    \ just regular old data characters ->\n"
- title: 3.3. HTML Public Text Identifiers
  contents:
  - "3.3. HTML Public Text Identifiers\n   To identify information as an HTML document\
    \ conforming to this\n   specification, each document must start with one of the\
    \ following\n   document type declarations.\n   <!DOCTYPE HTML PUBLIC \"-//IETF//DTD\
    \ HTML 2.0//EN\">\n   This document type declaration refers to the HTML DTD in\
    \ 9.1, \"HTML\n   DTD\".\n      NOTE - If the body of a `text/html' message entity\
    \ does not begin\n      with a document type declaration, an HTML user agent should\
    \ infer\n      the above document type declaration.\n   <!DOCTYPE HTML PUBLIC\
    \ \"-//IETF//DTD HTML 2.0 Level 2//EN\">\n   This document type declaration also\
    \ refers to the HTML DTD which\n   appears in 9.1, \"HTML DTD\".\n   <!DOCTYPE\
    \ HTML PUBLIC \"-//IETF//DTD HTML 2.0 Level 1//EN\">\n   This document type declaration\
    \ refers to the level 1 HTML DTD in 9.3,\n   \"Level 1 HTML DTD\". Form elements\
    \ must not occur in level 1\n   documents.\n   <!DOCTYPE HTML PUBLIC \"-//IETF//DTD\
    \ HTML 2.0 Strict//EN\">\n   <!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0 Strict\
    \ Level 1//EN\">\n   These two document type declarations refer to the HTML DTD\
    \ in 9.2,\n   \"Strict HTML DTD\" and 9.4, \"Strict Level 1 HTML DTD\". They refer\
    \ to\n   the more structurally rigid definition of HTML.\n   HTML user agents\
    \ may support other document types. In particular,\n   they may support other\
    \ formal public identifiers, or other document\n   types altogether. They may\
    \ support an internal declaration subset\n   with supplemental entity, element,\
    \ and other markup declarations.\n"
- title: 3.4. Example HTML Document
  contents:
  - "3.4. Example HTML Document\n    <!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\"\
    >\n    <HTML>\n    <!-- Here's a good place to put a comment. -->\n    <HEAD>\n\
    \    <TITLE>Structural Example</TITLE>\n    </HEAD><BODY>\n    <H1>First Header</H1>\n\
    \    <P>This is a paragraph in the example HTML file. Keep in mind\n    that the\
    \ title does not appear in the document text, but that\n    the header (defined\
    \ by H1) does.</P>\n    <OL>\n    <LI>First item in an ordered list.\n    <LI>Second\
    \ item in an ordered list.\n      <UL COMPACT>\n      <LI> Note that lists can\
    \ be nested;\n      <LI> Whitespace may be used to assist in reading the\n   \
    \        HTML source.\n      </UL>\n    <LI>Third item in an ordered list.\n \
    \   </OL>\n    <P>This is an additional paragraph. Technically, end tags are\n\
    \    not required for paragraphs, although they are allowed. You can\n    include\
    \ character highlighting in a paragraph. <EM>This sentence\n    of the paragraph\
    \ is emphasized.</EM> Note that the &lt;/P&gt;\n    end tag has been omitted.\n\
    \    <P>\n    <IMG SRC =\"triangle.xbm\" alt=\"Warning: \">\n    Be sure to read\
    \ these <b>bold instructions</b>.\n    </BODY></HTML>\n"
- title: 4. HTML as an Internet Media Type
  contents:
  - "4. HTML as an Internet Media Type\n   An HTML user agent allows users to interact\
    \ with resources which have\n   HTML representations. At a minimum, it must allow\
    \ users to examine\n   and navigate the content of HTML level 1 documents. HTML\
    \ user agents\n   should be able to preserve all formatting distinctions represented\
    \ in\n   an HTML document, and be able to simultaneously present resources\n \
    \  referred to by IMG elements (they may ignore some formatting\n   distinctions\
    \ or IMG resources at the request of the user). Level 2\n   HTML user agents should\
    \ support form entry and submission.\n"
- title: 4.1. text/html media type
  contents:
  - "4.1. text/html media type\n   This specification defines the Internet Media Type\
    \ [IMEDIA] (formerly\n   referred to as the Content Type [MIME]) called `text/html'.\
    \ The\n   following is to be registered with [IANA].\n    Media Type name\n  \
    \          text\n    Media subtype name\n            html\n    Required parameters\n\
    \            none\n    Optional parameters\n            level, charset\n    Encoding\
    \ considerations\n            any encoding is allowed\n    Security considerations\n\
    \            see 10, \"Security Considerations\"\n    The optional parameters\
    \ are defined as follows:\n    Level\n            The level parameter specifies\
    \ the feature set used in\n            the document. The level is an integer number,\
    \ implying\n            that any features of same or lower level may be present\n\
    \            in the document. Level 1 is all features defined in this\n      \
    \      specification except those that require the <FORM>\n            element.\
    \ Level 2 includes form processing. Level 2 is\n            the default.\n   \
    \ Charset\n            The charset parameter (as defined in section 7.1.1 of\n\
    \            RFC 1521[MIME]) may be given to specify the character\n         \
    \   encoding scheme used to represent the HTML document as a\n            sequence\
    \ of octets. The default value is outside the\n            scope of this specification;\
    \ but for example, the\n            default is `US-ASCII' in the context of MIME\
    \ mail, and\n            `ISO-8859-1' in the context of HTTP [HTTP].\n"
- title: 4.2. HTML Document Representation
  contents:
  - "4.2. HTML Document Representation\n   A message entity with a content type of\
    \ `text/html' represents an\n   HTML document, consisting of a single text entity.\
    \ The `charset'\n   parameter (whether implicit or explicit) identifies a character\n\
    \   encoding scheme. The text entity consists of the characters\n   determined\
    \ by this character encoding scheme and the octets of the\n   body of the message\
    \ entity.\n"
- title: 4.2.1. Undeclared Markup Error Handling
  contents:
  - "4.2.1. Undeclared Markup Error Handling\n   To facilitate experimentation and\
    \ interoperability between\n   implementations of various versions of HTML, the\
    \ installed base of\n   HTML user agents supports a superset of the HTML 2.0 language\
    \ by\n   reducing it to HTML 2.0: markup in the form of a start-tag or end-\n\
    \   tag, whose generic identifier is not declared is mapped to nothing\n   during\
    \ tokenization. Undeclared attributes are treated similarly. The\n   entire attribute\
    \ specification of an unknown attribute (i.e., the\n   unknown attribute and its\
    \ value, if any) should be ignored. On the\n   other hand, references to undeclared\
    \ entities should be treated as\n   data characters.\n   For example:\n    <div\
    \ class=chapter><h1>foo</h1><p>...</div>\n      => <H1>,\"foo\",</H1>,<P>,\"...\"\
    \n    xxx <P ID=z23> yyy\n      => \"xxx \",<P>,\" yyy\n    Let &alpha; &amp;\
    \ &beta; be finite sets.\n      => \"Let &alpha; & &beta; be finite sets.\"\n\
    \   Support for notifying the user of such errors is encouraged.\n   Information\
    \ providers are warned that this convention is not binding:\n   unspecified behavior\
    \ may result, as such markup does not conform to\n   this specification.\n"
- title: 4.2.2. Conventional Representation of Newlines
  contents:
  - "4.2.2. Conventional Representation of Newlines\n   SGML specifies that a text\
    \ entity is a sequence of records, each\n   beginning with a record start character\
    \ and ending with a record end\n   character (code positions 10 and 13 respectively)\
    \ (section 7.6.1,\n   \"Record Boundaries\" in [SGML]).\n   [MIME] specifies that\
    \ a body of type `text/*' is a sequence of lines,\n   each terminated by CRLF,\
    \ that is, octets 13, 10.\n   In practice, HTML documents are frequently represented\
    \ and\n   transmitted using an end of line convention that depends on the\n  \
    \ conventions of the source of the document; frequently, that\n   representation\
    \ consists of CR only, LF only, or a CR LF sequence.\n   Hence the decoding of\
    \ the octets will often result in a text entity\n   with some missing record start\
    \ and record end characters.\n   Since there is no ambiguity, HTML user agents\
    \ are encouraged to infer\n   the missing record start and end characters.\n \
    \  An HTML user agent should treat end of line in any of its variations\n   as\
    \ a word space in all contexts except preformatted text. Within\n   preformatted\
    \ text, an HTML user agent should treat any of the three\n   common representations\
    \ of end-of-line as starting a new line.\n"
- title: 5. Document Structure
  contents:
  - "5. Document Structure\n   An HTML document is a tree of elements, including a\
    \ head and body,\n   headings, paragraphs, lists, etc. Form elements are discussed\
    \ in 8,\n   \"Forms\".\n"
- title: '5.1. Document Element: HTML'
  contents:
  - "5.1. Document Element: HTML\n   The HTML document element consists of a head\
    \ and a body, much like a\n   memo or a mail message. The head contains the title\
    \ and optional\n   elements. The body is a text flow consisting of paragraphs,\
    \ lists,\n   and other elements.\n"
- title: '5.2. Head: HEAD'
  contents:
  - "5.2. Head: HEAD\n   The head of an HTML document is an unordered collection of\n\
    \   information about the document. For example:\n    <!DOCTYPE HTML PUBLIC \"\
    -//IETF//DTD HTML 2.0//EN\">\n    <HEAD>\n    <TITLE>Introduction to HTML</TITLE>\n\
    \    </HEAD>\n    ...\n"
- title: '5.2.1. Title: TITLE'
  contents:
  - "5.2.1. Title: TITLE\n   Every HTML document must contain a <TITLE> element.\n\
    \   The title should identify the contents of the document in a global\n   context.\
    \ A short title, such as \"Introduction\" may be meaningless out\n   of context.\
    \ A title such as \"Introduction to HTML Elements\" is more\n   appropriate.\n\
    \      NOTE - The length of a title is not limited; however, long titles\n   \
    \   may be truncated in some applications. To minimize this\n      possibility,\
    \ titles should be fewer than 64 characters.\n   A user agent may display the\
    \ title of a document in a history list or\n   as a label for the window displaying\
    \ the document. This differs from\n   headings (5.4, \"Headings: H1 ... H6\"),\
    \ which are typically displayed\n   within the body text flow.\n"
- title: '5.2.2. Base Address: BASE'
  contents:
  - "5.2.2. Base Address: BASE\n   The optional <BASE> element provides a base address\
    \ for interpreting\n   relative URLs when the document is read out of context\
    \ (see 7,\n   \"Hyperlinks\"). The value of the HREF attribute must be an absolute\n\
    \   URI.\n"
- title: '5.2.3. Keyword Index: ISINDEX'
  contents:
  - "5.2.3. Keyword Index: ISINDEX\n   The <ISINDEX> element indicates that the user\
    \ agent should allow the\n   user to search an index by giving keywords. See 7.5,\
    \ \"Queries and\n   Indexes\" for details.\n"
- title: '5.2.4. Link: LINK'
  contents:
  - "5.2.4. Link: LINK\n   The <LINK> element represents a hyperlink (see 7, \"Hyperlinks\"\
    ).  Any\n   number of LINK elements may occur in the <HEAD> element of an HTML\n\
    \   document. It has the same attributes as the <A> element (see 5.7.3,\n   \"\
    Anchor: A\").\n   The <LINK> element is typically used to indicate authorship,\
    \ related\n   indexes and glossaries, older or more recent versions, document\n\
    \   hierarchy, associated resources such as style sheets, etc.\n"
- title: '5.2.5. Associated Meta-information: META'
  contents:
  - "5.2.5. Associated Meta-information: META\n   The <META> element is an extensible\
    \ container for use in identifying\n   specialized document meta-information.\
    \  Meta-information has two main\n   functions:\n        * to provide a means\
    \ to discover that the data set exists\n        and how it might be obtained or\
    \ accessed; and\n        * to document the content, quality, and features of a\
    \ data\n        set, indicating its fitness for use.\n   Each <META> element specifies\
    \ a name/value pair. If multiple META\n   elements are provided with the same\
    \ name, their combined contents--\n   concatenated as a comma-separated list--is\
    \ the value associated with\n   that name.\n        NOTE - The <META> element\
    \ should not be used where a\n        specific element, such as <TITLE>, would\
    \ be more\n        appropriate. Rather than a <META> element with a URI as\n \
    \       the value of the CONTENT attribute, use a <LINK>\n        element.\n \
    \  HTTP servers may read the content of the document <HEAD> to generate\n   header\
    \ fields corresponding to any elements defining a value for the\n   attribute\
    \ HTTP-EQUIV.\n        NOTE - The method by which the server extracts document\n\
    \        meta-information is unspecified and not mandatory. The\n        <META>\
    \ element only provides an extensible mechanism for\n        identifying and embedding\
    \ document meta-information --\n        how it may be used is up to the individual\
    \ server\n        implementation and the HTML user agent.\n    Attributes of the\
    \ META element:\n    HTTP-EQUIV\n            binds the element to an HTTP header\
    \ field. An HTTP\n            server may use this information to process the document.\n\
    \            In particular, it may include a header field in the\n           \
    \ responses to requests for this document: the header name\n            is taken\
    \ from the HTTP-EQUIV attribute value, and the\n            header value is taken\
    \ from the value of the CONTENT\n            attribute. HTTP header names are\
    \ not case sensitive.\n    NAME\n            specifies the name of the name/value\
    \ pair. If not\n            present, HTTP-EQUIV gives the name.\n    CONTENT\n\
    \            specifies the value of the name/value pair.\n    Examples\n    If\
    \ the document contains:\n    <META HTTP-EQUIV=\"Expires\"\n          CONTENT=\"\
    Tue, 04 Dec 1993 21:29:02 GMT\">\n    <meta http-equiv=\"Keywords\" CONTENT=\"\
    Fred\">\n    <META HTTP-EQUIV=\"Reply-to\"\n          content=\"fielding@ics.uci.edu\
    \ (Roy Fielding)\">\n    <Meta Http-equiv=\"Keywords\" CONTENT=\"Barney\">\n \
    \   then the server may include the following header fields:\n    Expires: Tue,\
    \ 04 Dec 1993 21:29:02 GMT\n    Keywords: Fred, Barney\n    Reply-to: fielding@ics.uci.edu\
    \ (Roy Fielding)\n    as part of the HTTP response to a `GET' or `HEAD' request\
    \ for\n    that document.\n    An HTTP server must not use the <META> element\
    \ to form an HTTP\n    response header unless the HTTP-EQUIV attribute is present.\n\
    \    An HTTP server may disregard any <META> elements that specify\n    information\
    \ controlled by the HTTP server, for example `Server',\n    `Date', and `Last-modified'.\n"
- title: '5.2.6. Next Id: NEXTID'
  contents:
  - "5.2.6. Next Id: NEXTID\n   The <NEXTID> element is included for historical reasons\
    \ only.  HTML\n   documents should not contain <NEXTID> elements.\n   The <NEXTID>\
    \ element gives a hint for the name to use for a new <A>\n   element when editing\
    \ an HTML document. It should be distinct from all\n   NAME attribute values on\
    \ <A> elements. For example:\n   <NEXTID N=Z27>\n"
- title: '5.3. Body: BODY'
  contents:
  - "5.3. Body: BODY\n   The <BODY> element contains the text flow of the document,\
    \ including\n   headings, paragraphs, lists, etc.\n   For example:\n    <BODY>\n\
    \    <h1>Important Stuff</h1>\n    <p>Explanation about important stuff...\n \
    \   </BODY>\n"
- title: '5.4. Headings: H1 ... H6'
  contents:
  - "5.4. Headings: H1 ... H6\n   The six heading elements, <H1> through <H6>, denote\
    \ section headings.\n   Although the order and occurrence of headings is not constrained\
    \ by\n   the HTML DTD, documents should not skip levels (for example, from H1\n\
    \   to H3), as converting such documents to other representations is\n   often\
    \ problematic.\n   Example of use:\n    <H1>This is a heading</H1>\n    Here is\
    \ some text\n    <H2>Second level heading</H2>\n    Here is some more text.\n\
    \    Typical renderings are:\n    H1\n            Bold, very-large font, centered.\
    \ One or two blank lines\n            above and below.\n    H2\n            Bold,\
    \ large font, flush-left. One or two blank lines\n            above and below.\n\
    \    H3\n            Italic, large font, slightly indented from the left\n   \
    \         margin. One or two blank lines above and below.\n    H4\n          \
    \  Bold, normal font, indented more than H3. One blank line\n            above\
    \ and below.\n    H5\n            Italic, normal font, indented as H4. One blank\
    \ line\n            above.\n    H6\n            Bold, indented same as normal\
    \ text, more than H5. One\n            blank line above.\n"
- title: 5.5. Block Structuring Elements
  contents:
  - "5.5. Block Structuring Elements\n   Block structuring elements include paragraphs,\
    \ lists, and block\n   quotes. They must not contain heading elements, but they\
    \ may contain\n   phrase markup, and in some cases, they may be nested.\n"
- title: '5.5.1. Paragraph: P'
  contents:
  - "5.5.1. Paragraph: P\n   The <P> element indicates a paragraph. The exact indentation,\
    \ leading\n   space, etc. of a paragraph is not specified and may be a function\
    \ of\n   other tags, style sheets, etc.\n   Typically, paragraphs are surrounded\
    \ by a vertical space of one line\n   or half a line. The first line in a paragraph\
    \ is indented in some\n   cases.\n   Example of use:\n    <H1>This Heading Precedes\
    \ the Paragraph</H1>\n    <P>This is the text of the first paragraph.\n    <P>This\
    \ is the text of the second paragraph. Although you do not\n    need to start\
    \ paragraphs on new lines, maintaining this\n    convention facilitates document\
    \ maintenance.</P>\n    <P>This is the text of a third paragraph.</P>\n"
- title: '5.5.2. Preformatted Text: PRE'
  contents:
  - "5.5.2. Preformatted Text: PRE\n   The <PRE> element represents a character cell\
    \ block of text and is\n   suitable for text that has been formatted for a monospaced\
    \ font.\n   The <PRE> tag may be used with the optional WIDTH attribute. The\n\
    \   WIDTH attribute specifies the maximum number of characters for a line\n  \
    \ and allows the HTML user agent to select a suitable font and\n   indentation.\n\
    \   Within preformatted text:\n        * Line breaks within the text are rendered\
    \ as a move to the\n        beginning of the next line.\n            NOTE - References\
    \ to the \"beginning of a new line\"\n            do not imply that the renderer\
    \ is forbidden from\n            using a constant left indent for rendering\n\
    \            preformatted text. The left indent may be\n            constrained\
    \ by the width required.\n        * Anchor elements and phrase markup may be used.\n\
    \            NOTE - Constraints on the processing of <PRE>\n            content\
    \ may limit or prevent the ability of the HTML\n            user agent to faithfully\
    \ render phrase markup.\n        * Elements that define paragraph formatting (headings,\n\
    \        address, etc.) must not be used.\n            NOTE - Some historical\
    \ documents contain <P> tags in\n            <PRE> elements. User agents are encouraged\
    \ to treat\n            this as a line break. A <P> tag followed by a\n      \
    \      newline character should produce only one line\n            break, not\
    \ a line break plus a blank line.\n        * The horizontal tab character (code\
    \ position 9 in the HTML\n        document character set) must be interpreted\
    \ as the smallest\n        positive nonzero number of spaces which will leave\
    \ the\n        number of characters so far on the line as a multiple of 8.\n \
    \       Documents should not contain tab characters, as they are not\n       \
    \ supported consistently.\n    Example of use:\n    <PRE>\n    Line 1.\n     \
    \      Line 2 is to the right of line 1.     <a href=\"abc\">abc</a>\n       \
    \    Line 3 aligns with line 2.            <a href=\"def\">def</a>\n    </PRE>\n"
- title: '5.5.2.1. Example and Listing: XMP, LISTING'
  contents:
  - "5.5.2.1. Example and Listing: XMP, LISTING\n   The <XMP> and <LISTING> elements\
    \ are similar to the <PRE> element,\n   but they have a different syntax. Their\
    \ content is declared as CDATA,\n   which means that no markup except the end-tag\
    \ open delimiter-in-\n   context is recognized (see 9.6 \"Delimiter Recognition\"\
    \ of [SGML]).\n      NOTE - In a previous draft of the HTML specification, the\
    \ syntax\n      of <XMP> and <LISTING> elements allowed closing tags to be treated\n\
    \      as data characters, as long as the tag name was not <XMP> or\n      <LISTING>,\
    \ respectively.\n   Since CDATA declared content has a number of unfortunate interactions\n\
    \   with processing techniques and tends to be used and implemented\n   inconsistently,\
    \ HTML documents should not contain <XMP> nor <LISTING>\n   elements -- the <PRE>\
    \ tag is more expressive and more consistently\n   supported.\n   The <LISTING>\
    \ element should be rendered so that at least 132\n   characters fit on a line.\
    \ The <XMP> element should be rendered so\n   that at least 80 characters fit\
    \ on a line but is otherwise identical\n   to the <LISTING> element.\n      NOTE\
    \ - In a previous draft, HTML included a <PLAINTEXT> element\n      that is similar\
    \ to the <LISTING> element, except that there is no\n      closing tag: all characters\
    \ after the <PLAINTEXT> start-tag are\n      data.\n"
- title: '5.5.3. Address: ADDRESS'
  contents:
  - "5.5.3. Address: ADDRESS\n   The <ADDRESS> element contains such information as\
    \ address, signature\n   and authorship, often at the beginning or end of the\
    \ body of a\n   document.\n   Typically, the <ADDRESS> element is rendered in\
    \ an italic typeface\n   and may be indented.\n   Example of use:\n    <ADDRESS>\n\
    \    Newsletter editor<BR>\n    J.R. Brown<BR>\n    JimquickPost News, Jimquick,\
    \ CT 01234<BR>\n    Tel (123) 456 7890\n    </ADDRESS>\n"
- title: '5.5.4. Block Quote: BLOCKQUOTE'
  contents:
  - "5.5.4. Block Quote: BLOCKQUOTE\n   The <BLOCKQUOTE> element contains text quoted\
    \ from another source.\n   A typical rendering might be a slight extra left and\
    \ right indent,\n   and/or italic font. The <BLOCKQUOTE> typically provides space\
    \ above\n   and below the quote.\n   Single-font rendition may reflect the quotation\
    \ style of Internet\n   mail by putting a vertical line of graphic characters,\
    \ such as the\n   greater than symbol (>), in the left margin.\n   Example of\
    \ use:\n    I think the play ends\n    <BLOCKQUOTE>\n    <P>Soft you now, the\
    \ fair Ophelia. Nymph, in thy orisons, be all\n    my sins remembered.\n    </BLOCKQUOTE>\n\
    \    but I am not sure.\n"
- title: 5.6. List Elements
  contents:
  - "5.6. List Elements\n   HTML includes a number of list elements. They may be used\
    \ in\n   combination; for example, a <OL> may be nested in an <LI> element of\n\
    \   a <UL>.\n   The COMPACT attribute suggests that a compact rendering be used.\n"
- title: '5.6.1. Unordered List: UL, LI'
  contents:
  - "5.6.1. Unordered List: UL, LI\n   The <UL> represents a list of items -- typically\
    \ rendered as a\n   bulleted list.\n   The content of a <UL> element is a sequence\
    \ of <LI> elements.  For\n   example:\n    <UL>\n    <LI>First list item\n   \
    \ <LI>Second list item\n     <p>second paragraph of second item\n    <LI>Third\
    \ list item\n    </UL>\n"
- title: '5.6.2. Ordered List: OL'
  contents:
  - "5.6.2. Ordered List: OL\n   The <OL> element represents an ordered list of items,\
    \ sorted by\n   sequence or order of importance. It is typically rendered as a\n\
    \   numbered list.\n   The content of a <OL> element is a sequence of <LI> elements.\
    \  For\n   example:\n    <OL>\n    <LI>Click the Web button to open URI window.\n\
    \    <LI>Enter the URI number in the text field of the Open URI\n    window. The\
    \ Web document you specified is displayed.\n      <ol>\n       <li>substep 1\n\
    \       <li>substep 2\n      </ol>\n    <LI>Click highlighted text to move from\
    \ one link to another.\n    </OL>\n"
- title: '5.6.3. Directory List: DIR'
  contents:
  - "5.6.3. Directory List: DIR\n   The <DIR> element is similar to the <UL> element.\
    \ It represents a\n   list of short items, typically up to 20 characters each.\
    \ Items in a\n   directory list may be arranged in columns, typically 24 characters\n\
    \   wide.\n   The content of a <DIR> element is a sequence of <LI> elements.\n\
    \   Nested block elements are not allowed in the content of <DIR>\n   elements.\
    \ For example:\n    <DIR>\n    <LI>A-H<LI>I-M\n    <LI>M-R<LI>S-Z\n    </DIR>\n"
- title: '5.6.4. Menu List: MENU'
  contents:
  - "5.6.4. Menu List: MENU\n   The <MENU> element is a list of items with typically\
    \ one line per\n   item. The menu list style is typically more compact than the\
    \ style of\n   an unordered list.\n   The content of a <MENU> element is a sequence\
    \ of <LI> elements.\n   Nested block elements are not allowed in the content of\
    \ <MENU>\n   elements. For example:\n    <MENU>\n    <LI>First item in the list.\n\
    \    <LI>Second item in the list.\n    <LI>Third item in the list.\n    </MENU>\n"
- title: '5.6.5. Definition List: DL, DT, DD'
  contents:
  - "5.6.5. Definition List: DL, DT, DD\n   A definition list is a list of terms and\
    \ corresponding definitions.\n   Definition lists are typically formatted with\
    \ the term flush-left and\n   the definition, formatted paragraph style, indented\
    \ after the term.\n   The content of a <DL> element is a sequence of <DT> elements\
    \ and/or\n   <DD> elements, usually in pairs. Multiple <DT> may be paired with\
    \ a\n   single <DD> element. Documents should not contain multiple\n   consecutive\
    \ <DD> elements.\n   Example of use:\n    <DL>\n    <DT>Term<DD>This is the definition\
    \ of the first term.\n    <DT>Term<DD>This is the definition of the second term.\n\
    \    </DL>\n   If the DT term does not fit in the DT column (typically one third\
    \ of\n   the display area), it may be extended across the page with the DD\n \
    \  section moved to the next line, or it may be wrapped onto successive\n   lines\
    \ of the left hand column.\n   The optional COMPACT attribute suggests that a\
    \ compact rendering be\n   used, because the list items are small and/or the entire\
    \ list is\n   large.\n   Unless the COMPACT attribute is present, an HTML user\
    \ agent may leave\n   white space between successive DT, DD pairs. The COMPACT\
    \ attribute\n   may also reduce the width of the left-hand (DT) column.\n    <DL\
    \ COMPACT>\n    <DT>Term<DD>This is the first definition in compact format.\n\
    \    <DT>Term<DD>This is the second definition in compact format.\n    </DL>\n"
- title: 5.7. Phrase Markup
  contents:
  - "5.7. Phrase Markup\n   Phrases may be marked up according to idiomatic usage,\
    \ typographic\n   appearance, or for use as hyperlink anchors.\n   User agents\
    \ must render highlighted phrases distinctly from plain\n   text. Additionally,\
    \ <EM> content must be rendered as distinct from\n   <STRONG> content, and <B>\
    \ content must rendered as distinct from <I>\n   content.\n   Phrase elements\
    \ may be nested within the content of other phrase\n   elements; however, HTML\
    \ user agents may render nested phrase elements\n   indistinctly from non-nested\
    \ elements:\n   plain <B>bold <I>italic</I></B> may be rendered\n   the same as\
    \ plain <B>bold </B><I>italic</I>\n"
- title: 5.7.1. Idiomatic Elements
  contents:
  - "5.7.1. Idiomatic Elements\n   Phrases may be marked up to indicate certain idioms.\n\
    \      NOTE - User agents may support the <DFN> element, not included in\n   \
    \   this specification, as it has been deployed to some extent. It is\n      used\
    \ to indicate the defining instance of a term, and it is\n      typically rendered\
    \ in italic or bold italic.\n"
- title: '5.7.1.1. Citation: CITE'
  contents:
  - "5.7.1.1. Citation: CITE\n      The <CITE> element is used to indicate the title\
    \ of a book or\n      other citation. It is typically rendered as italics. For\
    \ example:\n      He just couldn't get enough of <cite>The Grapes of Wrath</cite>.\n"
- title: '5.7.1.2. Code: CODE'
  contents:
  - "5.7.1.2. Code: CODE\n      The <CODE> element indicates an example of code, typically\n\
    \      rendered in a mono-spaced font. The <CODE> element is intended for\n  \
    \    short words or phrases of code; the <PRE> block structuring\n      element\
    \ (5.5.2, \"Preformatted Text: PRE\") is more appropriate\n       for multiple-line\
    \ listings. For example:\n      The expression <code>x += 1</code>\n      is short\
    \ for <code>x = x + 1</code>.\n"
- title: '5.7.1.3. Emphasis: EM'
  contents:
  - "5.7.1.3. Emphasis: EM\n      The <EM> element indicates an emphasized phrase,\
    \ typically\n      rendered as italics. For example:\n      A singular subject\
    \ <em>always</em> takes a singular verb.\n"
- title: '5.7.1.4. Keyboard: KBD'
  contents:
  - "5.7.1.4. Keyboard: KBD\n      The <KBD> element indicates text typed by a user,\
    \ typically\n      rendered in a mono-spaced font. This is commonly used in\n\
    \      instruction manuals. For example:\n      Enter <kbd>FIND IT</kbd> to search\
    \ the database.\n"
- title: '5.7.1.5. Sample: SAMP'
  contents:
  - "5.7.1.5. Sample: SAMP\n      The <SAMP> element indicates a sequence of literal\
    \ characters,\n      typically rendered in a mono-spaced font. For example:\n\
    \      The only word containing the letters <samp>mt</samp> is dreamt.\n"
- title: '5.7.1.6. Strong Emphasis: STRONG'
  contents:
  - "5.7.1.6. Strong Emphasis: STRONG\n      The <STRONG> element indicates strong\
    \ emphasis, typically rendered\n      in bold. For example:\n      <strong>STOP</strong>,\
    \ or I'll say \"<strong>STOP</strong>\" again!\n"
- title: '5.7.1.7. Variable: VAR'
  contents:
  - "5.7.1.7. Variable: VAR\n      The <VAR> element indicates a placeholder variable,\
    \ typically\n      rendered as italic. For example:\n      Type <SAMP>html-check\
    \ <VAR>file</VAR> | more</SAMP>\n      to check <VAR>file</VAR> for markup errors.\n"
- title: 5.7.2. Typographic Elements
  contents:
  - "5.7.2. Typographic Elements\n      Typographic elements are used to specify the\
    \ format of marked\n      text.\n      Typical renderings for idiomatic elements\
    \ may vary between user\n      agents. If a specific rendering is necessary --\
    \ for example, when\n      referring to a specific text attribute as in \"The\
    \ italic parts are\n      mandatory\" -- a typographic element can be used to\
    \ ensure that the\n      intended typography is used where possible.\n      NOTE\
    \ - User agents may support some typographic elements not\n      included in this\
    \ specification, as they have been deployed to some\n      extent. The <STRIKE>\
    \ element indicates horizontal line through the\n      characters, and the <U>\
    \ element indicates an underline.\n"
- title: '5.7.2.1. Bold: B'
  contents:
  - "5.7.2.1. Bold: B\n   The <B> element indicates bold text. Where bold typography\
    \ is\n   unavailable, an alternative representation may be used.\n"
- title: '5.7.2.2. Italic: I'
  contents:
  - "5.7.2.2. Italic: I\n   The <I> element indicates italic text. Where italic typography\
    \ is\n   unavailable, an alternative representation may be used.\n"
- title: '5.7.2.3. Teletype: TT'
  contents:
  - "5.7.2.3. Teletype: TT\n   The <TT> element indicates teletype (monospaced )text.\
    \ Where a\n   teletype font is unavailable, an alternative representation may\
    \ be\n   used.\n"
- title: '5.7.3. Anchor: A'
  contents:
  - "5.7.3. Anchor: A\n   The <A> element indicates a hyperlink anchor (see 7, \"\
    Hyperlinks\").\n   At least one of the NAME and HREF attributes should be present.\n\
    \   Attributes of the <A> element:\n    HREF\n            gives the URI of the\
    \ head anchor of a hyperlink.\n    NAME\n            gives the name of the anchor,\
    \ and makes it available as\n            a head of a hyperlink.\n    TITLE\n \
    \           suggests a title for the destination resource --\n            advisory\
    \ only. The TITLE attribute may be used:\n                * for display prior\
    \ to accessing the destination\n                resource, for example, as a margin\
    \ note or on a\n                small box while the mouse is over the anchor,\
    \ or\n                while the document is being loaded;\n                * for\
    \ resources that do not include a title, such as\n                graphics, plain\
    \ text and Gopher menus, for use as a\n                window title.\n    REL\n\
    \            The REL attribute gives the relationship(s) described by\n      \
    \      the hyperlink. The value is a whitespace separated list\n            of\
    \ relationship names. The semantics of link\n            relationships are not\
    \ specified in this document.\n    REV\n            same as the REL attribute,\
    \ but the semantics of the\n            relationship are in the reverse direction.\
    \ A link from A\n            to B with REL=\"X\" expresses the same relationship\
    \ as a\n            link from B to A with REV=\"X\". An anchor may have both\n\
    \            REL and REV attributes.\n    URN\n            specifies a preferred,\
    \ more persistent identifier for\n            the head anchor of the hyperlink.\
    \ The syntax and\n            semantics of the URN attribute are not yet specified.\n\
    \    METHODS\n            specifies methods to be used in accessing the\n    \
    \        destination, as a whitespace-separated list of names.\n            The\
    \ set of applicable names is a function of the scheme\n            of the URI\
    \ in the HREF attribute. For similar reasons as\n            for the TITLE attribute,\
    \ it may be useful to include the\n            information in advance in the link.\
    \ For example, the\n            HTML user agent may chose a different rendering\
    \ as a\n            function of the methods allowed; for example, something\n\
    \            that is searchable may get a different icon.\n"
- title: '5.8. Line Break: BR'
  contents:
  - "5.8. Line Break: BR\n   The <BR> element specifies a line break between words\
    \ (see 6,\n   \"Characters, Words, and Paragraphs\"). For example:\n    <P> Pease\
    \ porridge hot<BR>\n    Pease porridge cold<BR>\n    Pease porridge in the pot<BR>\n\
    \    Nine days old.\n"
- title: '5.9. Horizontal Rule: HR'
  contents:
  - "5.9. Horizontal Rule: HR\n   The <HR> element is a divider between sections of\
    \ text; typically a\n   full width horizontal rule or equivalent graphic.  For\
    \ example:\n    <HR>\n    <ADDRESS>February 8, 1995, CERN</ADDRESS>\n    </BODY>\n"
- title: '5.10. Image: IMG'
  contents:
  - "5.10. Image: IMG\n   The <IMG> element refers to an image or icon via a hyperlink\
    \ (see\n   7.3, \"Simultaneous Presentation of Image Resources\").\n   HTML user\
    \ agents may process the value of the ALT attribute as an\n   alternative to processing\
    \ the image resource indicated by the SRC\n   attribute.\n      NOTE - Some HTML\
    \ user agents can process graphics linked via\n      anchors, but not <IMG> graphics.\
    \ If a graphic is essential, it\n      should be referenced from an <A> element\
    \ rather than an <IMG>\n      element. If the graphic is not essential, then the\
    \ <IMG> element\n      is appropriate.\n   Attributes of the <IMG> element:\n\
    \    ALIGN\n            alignment of the image with respect to the text\n    \
    \        baseline.\n                * `TOP' specifies that the top of the image\
    \ aligns\n                with the tallest item on the line containing the\n \
    \               image.\n                * `MIDDLE' specifies that the center of\
    \ the image\n                aligns with the baseline of the line containing the\n\
    \                image.\n                * `BOTTOM' specifies that the bottom\
    \ of the image\n                aligns with the baseline of the line containing\
    \ the\n                image.\n    ALT\n            text to use in place of the\
    \ referenced image resource,\n            for example due to processing constraints\
    \ or user\n            preference.\n    ISMAP\n            indicates an image\
    \ map (see 7.6, \"Image Maps\").\n    SRC\n            specifies the URI of the\
    \ image resource.\n                NOTE - In practice, the media types of image\n\
    \                resources are limited to a few raster graphic\n             \
    \   formats: typically `image/gif', `image/jpeg'. In\n                particular,\
    \ `text/html' resources are not\n                intended to be used as image\
    \ resources.\n    Examples of use:\n    <IMG SRC=\"triangle.xbm\" ALT=\"Warning:\"\
    > Be sure\n    to read these instructions.\n    <a href=\"http://machine/htbin/imagemap/sample\"\
    >\n    <IMG SRC=\"sample.xbm\" ISMAP>\n    </a>\n"
- title: 6. Characters, Words, and Paragraphs
  contents:
  - "6. Characters, Words, and Paragraphs\n   An HTML user agent should present the\
    \ body of an HTML document as a\n   collection of typeset paragraphs and preformatted\
    \ text.  Except for\n   preformatted elements (<PRE>, <XMP>, <LISTING>, <TEXTAREA>),\
    \ each\n   block structuring element is regarded as a paragraph by taking the\n\
    \   data characters in its content and the content of its descendant\n   elements,\
    \ concatenating them, and splitting the result into words,\n   separated by space,\
    \ tab, or record end characters (and perhaps hyphen\n   characters). The sequence\
    \ of words is typeset as a paragraph by\n   breaking it into lines.\n"
- title: 6.1. The HTML Document Character Set
  contents:
  - "6.1. The HTML Document Character Set\n   The document character set specified\
    \ in 9.5, \"SGML Declaration for\n   HTML\" must be supported by HTML user agents.\
    \ It includes the graphic\n   characters of Latin Alphabet No. 1, or simply Latin-1.\
    \  Latin-1\n   comprises 191 graphic characters, including the alphabets of most\n\
    \   Western European languages.\n      NOTE - Use of the non-breaking space and\
    \ soft hyphen indicator\n      characters is discouraged because support for them\
    \ is not widely\n      deployed.\n      NOTE - To support non-western writing\
    \ systems, a larger character\n      repertoire will be specified in a future\
    \ version of HTML. The\n      document character set will be [ISO-10646], or some\
    \ subset that\n      agrees with [ISO-10646]; in particular, all numeric character\n\
    \      references must use code positions assigned by [ISO-10646].\n   In SGML\
    \ applications, the use of control characters is limited in\n   order to maximize\
    \ the chance of successful interchange over\n   heterogeneous networks and operating\
    \ systems. In the HTML document\n   character set only three control characters\
    \ are allowed: Horizontal\n   Tab, Carriage Return, and Line Feed (code positions\
    \ 9, 13, and 10).\n   The HTML DTD references the Added Latin 1 entity set, to\
    \ allow\n   mnemonic representation of selected Latin 1 characters using only\
    \ the\n   widely supported ASCII character repertoire. For example:\n   Kurt G&ouml;del\
    \ was a famous logician and mathematician.\n   See 9.7.2, \"ISO Latin 1 Character\
    \ Entity Set\" for a table of the\n   \"Added Latin 1\" entities, and 13, \"The\
    \ HTML Coded Character Set\" for\n   a table of the code positions of [ISO 8859-1]\
    \ and the control\n   characters in the HTML document character set.\n"
- title: 7. Hyperlinks
  contents:
  - "7. Hyperlinks\n   In addition to general purpose elements such as paragraphs\
    \ and lists,\n   HTML documents can express hyperlinks. An HTML user agent allows\
    \ the\n   user to navigate these hyperlinks.\n   A hyperlink is a relationship\
    \ between two anchors, called the head\n   and the tail of the hyperlink[DEXTER].\
    \ Anchors are identified by an\n   anchor address: an absolute Uniform Resource\
    \ Identifier (URI),\n   optionally followed by a '#' and a sequence of characters\
    \ called a\n   fragment identifier. For example:\n   http://www.w3.org/hypertext/WWW/TheProject.html\n\
    \   http://www.w3.org/hypertext/WWW/TheProject.html#z31\n   In an anchor address,\
    \ the URI refers to a resource; it may be used in\n   a variety of information\
    \ retrieval protocols to obtain an entity that\n   represents the resource, such\
    \ as an HTML document. The fragment\n   identifier, if present, refers to some\
    \ view on, or portion of the\n   resource.\n   Each of the following markup constructs\
    \ indicates the tail anchor of\n   a hyperlink or set of hyperlinks:\n       \
    \ * <A> elements with HREF present.\n        * <LINK> elements.\n        * <IMG>\
    \ elements.\n        * <INPUT> elements with the SRC attribute present.\n    \
    \    * <ISINDEX> elements.\n        * <FORM> elements with `METHOD=GET'.\n   These\
    \ markup constructs refer to head anchors by a URI, either\n   absolute or relative,\
    \ or a fragment identifier, or both.\n   In the case of a relative URI, the absolute\
    \ URI in the address of the\n   head anchor is the result of combining the relative\
    \ URI with a base\n   absolute URI as in [RELURL]. The base document is taken\
    \ from the\n   document's <BASE> element, if present; else, it is determined as\
    \ in\n   [RELURL].\n"
- title: 7.1. Accessing Resources
  contents:
  - "7.1. Accessing Resources\n   Once the address of the head anchor is determined,\
    \ the user agent may\n   obtain a representation of the resource.\n   For example,\
    \ if the base URI is `http://host/x/y.html' and the\n   document contains:\n \
    \  <img src=\"../icons/abc.gif\">\n   then the user agent uses the URI `http://host/icons/abc.gif'\
    \ to\n   access the resource, as in [URL]..\n"
- title: 7.2. Activation of Hyperlinks
  contents:
  - "7.2. Activation of Hyperlinks\n   An HTML user agent allows the user to navigate\
    \ the content of the\n   document and request activation of hyperlinks denoted\
    \ by <A>\n   elements. HTML user agents should also allow activation of <LINK>\n\
    \   element hyperlinks.\n   To activate a link, the user agent obtains a representation\
    \ of the\n   resource identified in the address of the head anchor. If the\n \
    \  representation is another HTML document, navigation may begin again\n   with\
    \ this new document.\n"
- title: 7.3. Simultaneous Presentation of Image Resources
  contents:
  - "7.3. Simultaneous Presentation of Image Resources\n   An HTML user agent may\
    \ activate hyperlinks indicated by <IMG> and\n   <INPUT> elements concurrently\
    \ with processing the document; that is,\n   image hyperlinks may be processed\
    \ without explicit request by the\n   user. Image resources should be embedded\
    \ in the presentation at the\n   point of the tail anchor, that is the <IMG> or\
    \ <INPUT> element.\n   <LINK> hyperlinks may also be processed without explicit\
    \ user\n   request; for example, style sheet resources may be processed before\n\
    \   or during the processing of the document.\n"
- title: 7.4. Fragment Identifiers
  contents:
  - "7.4. Fragment Identifiers\n   Any characters following a `#' character in a hypertext\
    \ address\n   constitute a fragment identifier. In particular, an address of the\n\
    \   form `#fragment' refers to an anchor in the same document.\n   The meaning\
    \ of fragment identifiers depends on the media type of the\n   representation\
    \ of the anchor's resource. For `text/html'\n   representations, it refers to\
    \ the <A> element with a NAME attribute\n   whose value is the same as the fragment\
    \ identifier.  The matching is\n   case sensitive. The document should have exactly\
    \ one such element.\n   The user agent should indicate the anchor element, for\
    \ example by\n   scrolling to and/or highlighting the phrase.\n   For example,\
    \ if the base URI is `http://host/x/y.html' and the user\n   activated the link\
    \ denoted by the following markup:\n   <p> See: <a href=\"app1.html#bananas\"\
    >appendix 1</a>\n   for more detail on bananas.\n   Then the user agent accesses\
    \ the resource identified by\n   `http://host/x/app1.html'. Assuming the resource\
    \ is represented using\n   the `text/html' media type, the user agent must locate\
    \ the <A>\n   element whose NAME attribute is `bananas' and begin navigation there.\n"
- title: 7.5. Queries and Indexes
  contents:
  - "7.5. Queries and Indexes\n   The <ISINDEX> element represents a set of hyperlinks.\
    \ The user can\n   choose from the set by providing keywords to the user agent.\
    \  The\n   user agent computes the head URI by appending `?' and the keywords\
    \ to\n   the base URI. The keywords are escaped according to [URL] and joined\n\
    \   by `+'. For example, if a document contains:\n    <BASE HREF=\"http://host/index\"\
    >\n    <ISINDEX>\n    and the user provides the keywords `apple' and `berry',\
    \ then the\n    user agent must access the resource\n    `http://host/index?apple+berry'.\n\
    \    <FORM> elements with `METHOD=GET' also represent sets of\n    hyperlinks.\
    \ See 8.2.2, \"Query Forms: METHOD=GET\" for details.\n"
- title: 7.6. Image Maps
  contents:
  - "7.6. Image Maps\n   If the ISMAP attribute is present on an <IMG> element, the\
    \ <IMG>\n   element must be contained in an <A> element with an HREF present.\n\
    \   This construct represents a set of hyperlinks. The user can choose\n   from\
    \ the set by choosing a pixel of the image. The user agent\n   computes the head\
    \ URI by appending `?' and the x and y coordinates of\n   the pixel to the URI\
    \ given in the <A> element.  For example, if a\n   document contains:\n   <!DOCTYPE\
    \ HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n   <head><title>ImageMap Example</title>\n\
    \   <BASE HREF=\"http://host/index\"></head>\n   <body>\n   <p> Choose any of\
    \ these icons:<br>\n   <a href=\"/cgi-bin/imagemap\"><img ismap src=\"icons.gif\"\
    ></a>\n   and the user chooses the upper-leftmost pixel, the chosen\n   hyperlink\
    \ is the one with the URI\n   `http://host/cgi-bin/imagemap?0,0'.\n"
- title: 8. Forms
  contents:
  - "8. Forms\n   A form is a template for a form data set and an associated\n   method\
    \ and action URI. A form data set is a sequence of\n   name/value pair fields.\
    \ The names are specified on the NAME\n   attributes of form input elements, and\
    \ the values are given\n   initial values by various forms of markup and edited\
    \ by the\n   user. The resulting form data set is used to access an\n   information\
    \ service as a function of the action and method.\n   Forms elements can be mixed\
    \ in with document structuring\n   elements. For example, a <PRE> element may\
    \ contain a <FORM>\n   element, or a <FORM> element may contain lists which contain\n\
    \   <INPUT> elements. This gives considerable flexibility in\n   designing the\
    \ layout of forms.\n   Form processing is a level 2 feature.\n"
- title: 8.1. Form Elements
  contents:
  - '8.1. Form Elements

    '
- title: '8.1.1. Form: FORM'
  contents:
  - "8.1.1. Form: FORM\n   The <FORM> element contains a sequence of input elements,\
    \ along\n   with document structuring elements. The attributes are:\n    ACTION\n\
    \            specifies the action URI for the form. The action URI of\n      \
    \      a form defaults to the base URI of the document (see 7,\n            \"\
    Hyperlinks\").\n    METHOD\n            selects a method of accessing the action\
    \ URI. The set of\n            applicable methods is a function of the scheme\
    \ of the\n            action URI of the form. See 8.2.2, \"Query Forms:\n    \
    \        METHOD=GET\" and 8.2.3, \"Forms with Side-Effects:\n            METHOD=POST\"\
    .\n    ENCTYPE\n            specifies the media type used to encode the name/value\n\
    \            pairs for transport, in case the protocol does not\n            itself\
    \ impose a format. See 8.2.1, \"The form-urlencoded\n            Media Type\"\
    .\n"
- title: '8.1.2. Input Field: INPUT'
  contents:
  - "8.1.2. Input Field: INPUT\n   The <INPUT> element represents a field for user\
    \ input. The TYPE\n   attribute discriminates between several variations of fields.\n\
    \   The <INPUT> element has a number of attributes. The set of applicable\n  \
    \ attributes depends on the value of the TYPE attribute.\n"
- title: '8.1.2.1. Text Field: INPUT TYPE=TEXT'
  contents:
  - "8.1.2.1. Text Field: INPUT TYPE=TEXT\n   The default value of the TYPE attribute\
    \ is `TEXT', indicating a\n   single line text entry field. (Use the <TEXTAREA>\
    \ element for multi-\n   line text fields.)\n   Required attributes are:\n   \
    \ NAME\n            name for the form field corresponding to this element.\n \
    \   The optional attributes are:\n    MAXLENGTH\n            constrains the number\
    \ of characters that can be entered\n            into a text input field. If the\
    \ value of MAXLENGTH is\n            greater the the value of the SIZE attribute,\
    \ the field\n            should scroll appropriately. The default number of\n\
    \            characters is unlimited.\n    SIZE\n            specifies the amount\
    \ of display space allocated to this\n            input field according to its\
    \ type. The default depends\n            on the user agent.\n    VALUE\n     \
    \       The initial value of the field.\n    For example:\n"
- title: '<p>Street Address: <input name=street><br>'
  contents:
  - '<p>Street Address: <input name=street><br>

    '
- title: 'Postal City code: <input name=city size=16 maxlength=16><br>'
  contents:
  - 'Postal City code: <input name=city size=16 maxlength=16><br>

    '
- title: 'Zip Code: <input name=zip size=10 maxlength=10 value="99999-9999"><br>'
  contents:
  - 'Zip Code: <input name=zip size=10 maxlength=10 value="99999-9999"><br>

    '
- title: '8.1.2.2. Password Field: INPUT TYPE=PASSWORD'
  contents:
  - "8.1.2.2. Password Field: INPUT TYPE=PASSWORD\n   An <INPUT> element with `TYPE=PASSWORD'\
    \ is a text field as above,\n   except that the value is obscured as it is entered.\
    \ (see also: 10,\n   \"Security Considerations\").\n   For example:\n"
- title: '<p>Name: <input name=login> Password: <input type=password name=passwd>'
  contents:
  - '<p>Name: <input name=login> Password: <input type=password name=passwd>

    '
- title: '8.1.2.3. Check Box: INPUT TYPE=CHECKBOX'
  contents:
  - "8.1.2.3. Check Box: INPUT TYPE=CHECKBOX\n   An <INPUT> element with `TYPE=CHECKBOX'\
    \ represents a boolean choice.\n   A set of such elements with the same name represents\
    \ an n-of-many\n   choice field. Required attributes are:\n    NAME\n        \
    \    symbolic name for the form field corresponding to this\n            element\
    \ or group of elements.\n    VALUE\n            The portion of the value of the\
    \ field contributed by\n            this element.\n    Optional attributes are:\n\
    \    CHECKED\n            indicates that the initial state is on.\n    For example:\n\
    \  <p>What flavors do you like?\n  <input type=checkbox name=flavor value=vanilla>Vanilla<br>\n\
    \  <input type=checkbox name=flavor value=strawberry>Strawberry<br>\n  <input\
    \ type=checkbox name=flavor value=chocolate checked>Chocolate<br>\n"
- title: '8.1.2.4. Radio Button: INPUT TYPE=RADIO'
  contents:
  - "8.1.2.4. Radio Button: INPUT TYPE=RADIO\n   An <INPUT> element with `TYPE=RADIO'\
    \ represents a boolean choice. A\n   set of such elements with the same name represents\
    \ a 1-of-many choice\n   field. The NAME and VALUE attributes are required as\
    \ for check boxes.\n   Optional attributes are:\n    CHECKED\n            indicates\
    \ that the initial state is on.\n   At all times, exactly one of the radio buttons\
    \ in a set is checked.\n   If none of the <INPUT> elements of a set of radio buttons\
    \ specifies\n   `CHECKED', then the user agent must check the first radio button\
    \ of\n   the set initially.\n   For example:\n    <p>Which is your favorite?\n\
    \    <input type=radio name=flavor value=vanilla>Vanilla<br>\n    <input type=radio\
    \ name=flavor value=strawberry>Strawberry<br>\n    <input type=radio name=flavor\
    \ value=chocolate>Chocolate<br>\n"
- title: '8.1.2.5. Image Pixel: INPUT TYPE=IMAGE'
  contents:
  - "8.1.2.5. Image Pixel: INPUT TYPE=IMAGE\n   An <INPUT> element with `TYPE=IMAGE'\
    \ specifies an image resource to\n   display, and allows input of two form fields:\
    \ the x and y coordinate\n   of a pixel chosen from the image. The names of the\
    \ fields are the\n   name of the field with `.x' and `.y' appended.  `TYPE=IMAGE'\
    \ implies\n   `TYPE=SUBMIT' processing; that is, when a pixel is chosen, the form\n\
    \   as a whole is submitted.\n   The NAME attribute is required as for other input\
    \ fields. The SRC\n   attribute is required and the ALIGN is optional as for the\
    \ <IMG>\n   element (see 5.10, \"Image: IMG\").\n   For example:\n    <p>Choose\
    \ a point on the map:\n    <input type=image name=point src=\"map.gif\">\n"
- title: '8.1.2.6. Hidden Field: INPUT TYPE=HIDDEN'
  contents:
  - "8.1.2.6. Hidden Field: INPUT TYPE=HIDDEN\n   An <INPUT> element with `TYPE=HIDDEN'\
    \ represents a hidden field.The\n   user does not interact with this field; instead,\
    \ the VALUE attribute\n   specifies the value of the field. The NAME and VALUE\
    \ attributes are\n   required.\n   For example:\n   <input type=hidden name=context\
    \ value=\"l2k3j4l2k3j4l2k3j4lk23\">\n"
- title: '8.1.2.7. Submit Button: INPUT TYPE=SUBMIT'
  contents:
  - "8.1.2.7. Submit Button: INPUT TYPE=SUBMIT\n   An <INPUT> element with `TYPE=SUBMIT'\
    \ represents an input option,\n   typically a button, that instructs the user\
    \ agent to submit the form.\n   Optional attributes are:\n    NAME\n         \
    \   indicates that this element contributes a form field\n            whose value\
    \ is given by the VALUE attribute. If the NAME\n            attribute is not present,\
    \ this element does not\n            contribute a form field.\n    VALUE\n   \
    \         indicates a label for the input (button).\n    You may submit this request\
    \ internally:\n    <input type=submit name=recipient value=internal><br>\n   \
    \ or to the external world:\n    <input type=submit name=recipient value=world>\n"
- title: '8.1.2.8. Reset Button: INPUT TYPE=RESET'
  contents:
  - "8.1.2.8. Reset Button: INPUT TYPE=RESET\n   An <INPUT> element with `TYPE=RESET'\
    \ represents an input option,\n   typically a button, that instructs the user\
    \ agent to reset the form's\n   fields to their initial states. The VALUE attribute,\
    \ if present,\n   indicates a label for the input (button).\n   When you are finished,\
    \ you may submit this request:\n   <input type=submit><br>\n   You may clear the\
    \ form and start over at any time: <input type=reset>\n"
- title: '8.1.3. Selection: SELECT'
  contents:
  - "8.1.3. Selection: SELECT\n   The <SELECT> element constrains the form field to\
    \ an enumerated list\n   of values. The values are given in <OPTION> elements.\
    \  Attributes\n   are:\n    MULTIPLE\n            indicates that more than one\
    \ option may be included in\n            the value.\n    NAME\n            specifies\
    \ the name of the form field.\n    SIZE\n            specifies the number of visible\
    \ items. Select fields of\n            size one are typically pop-down menus,\
    \ whereas select\n            fields with size greater than one are typically\
    \ lists.\n    For example:\n    <SELECT NAME=\"flavor\">\n    <OPTION>Vanilla\n\
    \    <OPTION>Strawberry\n    <OPTION value=\"RumRasin\">Rum and Raisin\n    <OPTION\
    \ selected>Peach and Orange\n    </SELECT>\n   The initial state has the first\
    \ option selected, unless a SELECTED\n   attribute is present on any of the <OPTION>\
    \ elements.\n"
- title: '8.1.3.1. Option: OPTION'
  contents:
  - "8.1.3.1. Option: OPTION\n   The Option element can only occur within a Select\
    \ element. It\n   represents one choice, and has the following attributes:\n \
    \   SELECTED\n            Indicates that this option is initially selected.\n\
    \    VALUE\n            indicates the value to be returned if this option is\n\
    \            chosen. The field value defaults to the content of the\n        \
    \    <OPTION> element.\n   The content of the <OPTION> element is presented to\
    \ the user to\n   represent the option. It is used as a returned value if the\
    \ VALUE\n   attribute is not present.\n"
- title: '8.1.4. Text Area: TEXTAREA'
  contents:
  - "8.1.4. Text Area: TEXTAREA\n   The <TEXTAREA> element represents a multi-line\
    \ text field.\n   Attributes are:\n    COLS\n            the number of visible\
    \ columns to display for the text\n            area, in characters.\n    NAME\n\
    \            Specifies the name of the form field.\n    ROWS\n            The\
    \ number of visible rows to display for the text area,\n            in characters.\n\
    \    For example:\n    <TEXTAREA NAME=\"address\" ROWS=6 COLS=64>\n    HaL Computer\
    \ Systems\n    1315 Dell Avenue\n    Campbell, California 95008\n    </TEXTAREA>\n\
    \   The content of the <TEXTAREA> element is the field's initial value.\n   Typically,\
    \ the ROWS and COLS attributes determine the visible\n   dimension of the field\
    \ in characters. The field is typically rendered\n   in a fixed-width font. HTML\
    \ user agents should allow text to extend\n   beyond these limits by scrolling\
    \ as needed.\n"
- title: 8.2. Form Submission
  contents:
  - "8.2. Form Submission\n   An HTML user agent begins processing a form by presenting\
    \ the\n   document with the fields in their initial state. The user is allowed\n\
    \   to modify the fields, constrained by the field type etc.  When the\n   user\
    \ indicates that the form should be submitted (using a submit\n   button or image\
    \ input), the form data set is processed according to\n   its method, action URI\
    \ and enctype.\n   When there is only one single-line text input field in a form,\
    \ the\n   user agent should accept Enter in that field as a request to submit\n\
    \   the form.\n"
- title: 8.2.1. The form-urlencoded Media Type
  contents:
  - "8.2.1. The form-urlencoded Media Type\n   The default encoding for all forms\
    \ is `application/x-www-form-\n   urlencoded'. A form data set is represented\
    \ in this media type as\n   follows:\n        1. The form field names and values\
    \ are escaped: space\n        characters are replaced by `+', and then reserved\
    \ characters\n        are escaped as per [URL]; that is, non-alphanumeric\n  \
    \      characters are replaced by `%HH', a percent sign and two\n        hexadecimal\
    \ digits representing the ASCII code of the\n        character. Line breaks, as\
    \ in multi-line text field values,\n        are represented as CR LF pairs, i.e.\
    \ `%0D%0A'.\n        2. The fields are listed in the order they appear in the\n\
    \        document with the name separated from the value by `=' and\n        the\
    \ pairs separated from each other by `&'. Fields with null\n        values may\
    \ be omitted. In particular, unselected radio\n        buttons and checkboxes\
    \ should not appear in the encoded\n        data, but hidden fields with VALUE\
    \ attributes present\n        should.\n            NOTE - The URI from a query\
    \ form submission can be\n            used in a normal anchor style hyperlink.\n\
    \            Unfortunately, the use of the `&' character to\n            separate\
    \ form fields interacts with its use in SGML\n            attribute values as\
    \ an entity reference delimiter.\n            For example, the URI `http://host/?x=1&y=2'\
    \ must be\n            written `<a href=\"http://host/?x=1&#38;y=2\"' or `<a\n\
    \            href=\"http://host/?x=1&amp;y=2\">'.\n            HTTP server implementors,\
    \ and in particular, CGI\n            implementors are encouraged to support the\
    \ use of\n            `;' in place of `&' to save users the trouble of\n     \
    \       escaping `&' characters this way.\n"
- title: '8.2.2. Query Forms: METHOD=GET'
  contents:
  - "8.2.2. Query Forms: METHOD=GET\n   If the processing of a form is idempotent\
    \ (i.e. it has no lasting\n   observable effect on the state of the world), then\
    \ the form method\n   should be `GET'. Many database searches have no visible\
    \ side-effects\n   and make ideal applications of query forms.\n   To process\
    \ a form whose action URL is an HTTP URL and whose method is\n   `GET', the user\
    \ agent starts with the action URI and appends a `?'\n   and the form data set,\
    \ in `application/x-www-form-urlencoded' format\n   as above. The user agent then\
    \ traverses the link to this URI just as\n   if it were an anchor (see 7.2, \"\
    Activation of Hyperlinks\").\n      NOTE - The URL encoding may result in very\
    \ long URIs, which cause\n      some historical HTTP server implementations to\
    \ exhibit defective\n      behavior. As a result, some HTML forms are written\
    \ using\n      `METHOD=POST' even though the form submission has no side-effects.\n"
- title: '8.2.3. Forms with Side-Effects: METHOD=POST'
  contents:
  - "8.2.3. Forms with Side-Effects: METHOD=POST\n   If the service associated with\
    \ the processing of a form has side\n   effects (for example, modification of\
    \ a database or subscription to a\n   service), the method should be `POST'.\n\
    \   To process a form whose action URL is an HTTP URL and whose method is\n  \
    \ `POST', the user agent conducts an HTTP POST transaction using the\n   action\
    \ URI, and a message body of type `application/x-www-form-\n   urlencoded' format\
    \ as above. The user agent should display the\n   response from the HTTP POST\
    \ interaction just as it would display the\n   response from an HTTP GET above.\n"
- title: '8.2.4. Example Form Submission: Questionnaire Form'
  contents:
  - "8.2.4. Example Form Submission: Questionnaire Form\n   Consider the following\
    \ document:\n    <!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n    <title>Sample\
    \ of HTML Form Submission</title>\n    <H1>Sample Questionnaire</H1>\n    <P>Please\
    \ fill out this questionnaire:\n    <FORM METHOD=\"POST\" ACTION=\"http://www.w3.org/sample\"\
    >\n    <P>Your name: <INPUT NAME=\"name\" size=\"48\">\n    <P>Male <INPUT NAME=\"\
    gender\" TYPE=RADIO VALUE=\"male\">\n    <P>Female <INPUT NAME=\"gender\" TYPE=RADIO\
    \ VALUE=\"female\">\n    <P>Number in family: <INPUT NAME=\"family\" TYPE=text>\n\
    \    <P>Cities in which you maintain a residence:\n    <UL>\n    <LI>Kent <INPUT\
    \ NAME=\"city\" TYPE=checkbox VALUE=\"kent\">\n    <LI>Miami <INPUT NAME=\"city\"\
    \ TYPE=checkbox VALUE=\"miami\">\n    <LI>Other <TEXTAREA NAME=\"other\" cols=48\
    \ rows=4></textarea>\n    </UL>\n    Nickname: <INPUT NAME=\"nickname\" SIZE=\"\
    42\">\n    <P>Thank you for responding to this questionnaire.\n    <P><INPUT TYPE=SUBMIT>\
    \ <INPUT TYPE=RESET>\n    </FORM>\n    The initial state of the form data set\
    \ is:\n    name\n            \"\"\n    gender\n            \"male\"\n    family\n\
    \            \"\"\n    other\n            \"\"\n    nickname\n            \"\"\
    \n    Note that the radio input has an initial value, while the\n    checkbox\
    \ has none.\n    The user might edit the fields and request that the form be\n\
    \    submitted. At that point, suppose the values are:\n    name\n           \
    \ \"John Doe\"\n    gender\n            \"male\"\n    family\n            \"5\"\
    \n    city\n            \"kent\"\n    city\n            \"miami\"\n    other\n\
    \            \"abc\\ndefk\"\n    nickname\n            \"J&D\"\n   The user agent\
    \ then conducts an HTTP POST transaction using the URI\n   `http://www.w3.org/sample'.\
    \ The message body would be (ignore the\n   line break):\n   name=John+Doe&gender=male&family=5&city=kent&city=miami&\n\
    \   other=abc%0D%0Adef&nickname=J%26D\n"
- title: 9. HTML Public Text
  contents:
  - '9. HTML Public Text

    '
- title: 9.1. HTML DTD
  contents:
  - "9.1. HTML DTD\n   This is the Document Type Definition for the HyperText Markup\n\
    \   Language, level 2.\n"
- title: <!--    html.dtd
  contents:
  - "<!--    html.dtd\n        Document Type Definition for the HyperText Markup Language\n\
    \                 (HTML DTD)\n        $Id: html.dtd,v 1.30 1995/09/21 23:30:19\
    \ connolly Exp $\n        Author: Daniel W. Connolly <connolly@w3.org>\n     \
    \   See Also: html.decl, html-1.dtd\n          http://www.w3.org/hypertext/WWW/MarkUp/MarkUp.html\n"
- title: -->
  contents:
  - '-->

    '
- title: <!ENTITY % HTML.Version
  contents:
  - "<!ENTITY % HTML.Version\n        \"-//IETF//DTD HTML 2.0//EN\"\n        -- Typical\
    \ usage:\n            <!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML//EN\">\n     \
    \       <html>\n            ...\n            </html>\n        --\n        >\n"
- title: <!--============ Feature Test Entities ========================-->
  contents:
  - '<!--============ Feature Test Entities ========================-->

    '
- title: <!ENTITY % HTML.Recommended "IGNORE"
  contents:
  - "<!ENTITY % HTML.Recommended \"IGNORE\"\n        -- Certain features of the language\
    \ are necessary for\n           compatibility with widespread usage, but they\
    \ may\n           compromise the structural integrity of a document.\n       \
    \    This feature test entity enables a more prescriptive\n           document\
    \ type definition that eliminates\n           those features.\n        -->\n"
- title: <![ %HTML.Recommended [
  contents:
  - "<![ %HTML.Recommended [\n        <!ENTITY % HTML.Deprecated \"IGNORE\">\n"
- title: ']]>'
  contents:
  - ']]>

    '
- title: <!ENTITY % HTML.Deprecated "INCLUDE"
  contents:
  - "<!ENTITY % HTML.Deprecated \"INCLUDE\"\n        -- Certain features of the language\
    \ are necessary for\n           compatibility with earlier versions of the specification,\n\
    \           but they tend to be used and implemented inconsistently,\n       \
    \    and their use is deprecated. This feature test entity\n           enables\
    \ a document type definition that eliminates\n           these features.\n   \
    \     -->\n"
- title: <!ENTITY % HTML.Highlighting "INCLUDE"
  contents:
  - "<!ENTITY % HTML.Highlighting \"INCLUDE\"\n        -- Use this feature test entity\
    \ to validate that a\n           document uses no highlighting tags, which may\
    \ be\n           ignored on minimal implementations.\n        -->\n"
- title: <!ENTITY % HTML.Forms "INCLUDE"
  contents:
  - "<!ENTITY % HTML.Forms \"INCLUDE\"\n        -- Use this feature test entity to\
    \ validate that a document\n           contains no forms, which may not be supported\
    \ in minimal\n           implementations\n        -->\n"
- title: <!--============== Imported Names ==============================-->
  contents:
  - '<!--============== Imported Names ==============================-->

    '
- title: <!ENTITY % Content-Type "CDATA"
  contents:
  - "<!ENTITY % Content-Type \"CDATA\"\n        -- meaning an internet media type\n\
    \           (aka MIME content type, as per RFC1521)\n        -->\n"
- title: <!ENTITY % HTTP-Method "GET | POST"
  contents:
  - "<!ENTITY % HTTP-Method \"GET | POST\"\n        -- as per HTTP specification,\
    \ in progress\n        -->\n"
- title: <!--========= DTD "Macros" =====================-->
  contents:
  - '<!--========= DTD "Macros" =====================-->

    '
- title: <!ENTITY % heading "H1|H2|H3|H4|H5|H6">
  contents:
  - '<!ENTITY % heading "H1|H2|H3|H4|H5|H6">

    '
- title: <!ENTITY % list " UL | OL | DIR | MENU " >
  contents:
  - '<!ENTITY % list " UL | OL | DIR | MENU " >

    '
- title: <!--======= Character mnemonic entities =================-->
  contents:
  - '<!--======= Character mnemonic entities =================-->

    '
- title: <!ENTITY % ISOlat1 PUBLIC
  contents:
  - "<!ENTITY % ISOlat1 PUBLIC\n  \"ISO 8879-1986//ENTITIES Added Latin 1//EN//HTML\"\
    >\n"
- title: '%ISOlat1;'
  contents:
  - '%ISOlat1;

    '
- title: <!ENTITY amp CDATA "&#38;"     -- ampersand          -->
  contents:
  - '<!ENTITY amp CDATA "&#38;"     -- ampersand          -->

    '
- title: <!ENTITY gt CDATA "&#62;"      -- greater than       -->
  contents:
  - '<!ENTITY gt CDATA "&#62;"      -- greater than       -->

    '
- title: <!ENTITY lt CDATA "&#60;"      -- less than          -->
  contents:
  - '<!ENTITY lt CDATA "&#60;"      -- less than          -->

    '
- title: <!ENTITY quot CDATA "&#34;"    -- double quote       -->
  contents:
  - '<!ENTITY quot CDATA "&#34;"    -- double quote       -->

    '
- title: <!--========= SGML Document Access (SDA) Parameter Entities =====-->
  contents:
  - '<!--========= SGML Document Access (SDA) Parameter Entities =====-->

    '
- title: <!-- HTML 2.0 contains SGML Document Access (SDA) fixed attributes
  contents:
  - '<!-- HTML 2.0 contains SGML Document Access (SDA) fixed attributes

    '
- title: in support of easy transformation to the International Committee
  contents:
  - 'in support of easy transformation to the International Committee

    '
- title: for Accessible Document Design (ICADD) DTD
  contents:
  - "for Accessible Document Design (ICADD) DTD\n         \"-//EC-USA-CDA/ICADD//DTD\
    \ ICADD22//EN\".\n"
- title: ICADD applications are designed to support usable access to
  contents:
  - 'ICADD applications are designed to support usable access to

    '
- title: structured information by print-impaired individuals through
  contents:
  - 'structured information by print-impaired individuals through

    '
- title: Braille, large print and voice synthesis.  For more information on
  contents:
  - 'Braille, large print and voice synthesis.  For more information on

    '
- title: 'SDA & ICADD:'
  contents:
  - "SDA & ICADD:\n        - ISO 12083:1993, Annex A.8, Facilities for Braille,\n\
    \          large print and computer voice\n        - ICADD ListServ\n        \
    \  <ICADD%ASUACAD.BITNET@ARIZVM1.ccit.arizona.edu>\n        - Usenet news group\
    \ bit.listserv.easi\n        - Recording for the Blind, +1 800 221 4792\n"
- title: -->
  contents:
  - '-->

    '
- title: '<!ENTITY % SDAFORM  "SDAFORM  CDATA  #FIXED"'
  contents:
  - "<!ENTITY % SDAFORM  \"SDAFORM  CDATA  #FIXED\"\n          -- one to one mapping\
    \        -->\n"
- title: '<!ENTITY % SDARULE  "SDARULE  CDATA  #FIXED"'
  contents:
  - "<!ENTITY % SDARULE  \"SDARULE  CDATA  #FIXED\"\n          -- context-sensitive\
    \ mapping -->\n"
- title: '<!ENTITY % SDAPREF  "SDAPREF  CDATA  #FIXED"'
  contents:
  - "<!ENTITY % SDAPREF  \"SDAPREF  CDATA  #FIXED\"\n          -- generated text prefix\
    \     -->\n"
- title: '<!ENTITY % SDASUFF  "SDASUFF  CDATA  #FIXED"'
  contents:
  - "<!ENTITY % SDASUFF  \"SDASUFF  CDATA  #FIXED\"\n          -- generated text suffix\
    \     -->\n"
- title: '<!ENTITY % SDASUSP  "SDASUSP  NAME   #FIXED"'
  contents:
  - "<!ENTITY % SDASUSP  \"SDASUSP  NAME   #FIXED\"\n          -- suspend transform\
    \ process -->\n"
- title: <!--========== Text Markup =====================-->
  contents:
  - '<!--========== Text Markup =====================-->

    '
- title: <![ %HTML.Highlighting [
  contents:
  - '<![ %HTML.Highlighting [

    '
- title: <!ENTITY % font " TT | B | I ">
  contents:
  - '<!ENTITY % font " TT | B | I ">

    '
- title: <!ENTITY % phrase "EM | STRONG | CODE | SAMP | KBD | VAR | CITE ">
  contents:
  - '<!ENTITY % phrase "EM | STRONG | CODE | SAMP | KBD | VAR | CITE ">

    '
- title: <!ENTITY % text "#PCDATA | A | IMG | BR | %phrase | %font">
  contents:
  - '<!ENTITY % text "#PCDATA | A | IMG | BR | %phrase | %font">

    '
- title: <!ELEMENT (%font;|%phrase) - - (%text)*>
  contents:
  - '<!ELEMENT (%font;|%phrase) - - (%text)*>

    '
- title: <!ATTLIST ( TT | CODE | SAMP | KBD | VAR )
  contents:
  - "<!ATTLIST ( TT | CODE | SAMP | KBD | VAR )\n        %SDAFORM; \"Lit\"\n     \
    \   >\n"
- title: <!ATTLIST ( B | STRONG )
  contents:
  - "<!ATTLIST ( B | STRONG )\n        %SDAFORM; \"B\"\n        >\n"
- title: <!ATTLIST ( I | EM | CITE )
  contents:
  - "<!ATTLIST ( I | EM | CITE )\n        %SDAFORM; \"It\"\n        >\n"
- title: <!-- <TT>       Typewriter text                         -->
  contents:
  - '<!-- <TT>       Typewriter text                         -->

    '
- title: <!-- <B>        Bold text                               -->
  contents:
  - '<!-- <B>        Bold text                               -->

    '
- title: <!-- <I>        Italic text                             -->
  contents:
  - '<!-- <I>        Italic text                             -->

    '
- title: <!-- <EM>       Emphasized phrase                       -->
  contents:
  - '<!-- <EM>       Emphasized phrase                       -->

    '
- title: <!-- <STRONG>   Strong emphasis                         -->
  contents:
  - '<!-- <STRONG>   Strong emphasis                         -->

    '
- title: <!-- <CODE>     Source code phrase                      -->
  contents:
  - '<!-- <CODE>     Source code phrase                      -->

    '
- title: <!-- <SAMP>     Sample text or characters               -->
  contents:
  - '<!-- <SAMP>     Sample text or characters               -->

    '
- title: <!-- <KBD>      Keyboard phrase, e.g. user input        -->
  contents:
  - '<!-- <KBD>      Keyboard phrase, e.g. user input        -->

    '
- title: <!-- <VAR>      Variable phrase or substitutable        -->
  contents:
  - '<!-- <VAR>      Variable phrase or substitutable        -->

    '
- title: <!-- <CITE>     Name or title of cited work             -->
  contents:
  - '<!-- <CITE>     Name or title of cited work             -->

    '
- title: <!ENTITY % pre.content "#PCDATA | A | HR | BR | %font | %phrase">
  contents:
  - '<!ENTITY % pre.content "#PCDATA | A | HR | BR | %font | %phrase">

    '
- title: ']]>'
  contents:
  - ']]>

    '
- title: <!ENTITY % text "#PCDATA | A | IMG | BR">
  contents:
  - '<!ENTITY % text "#PCDATA | A | IMG | BR">

    '
- title: <!ELEMENT BR    - O EMPTY>
  contents:
  - '<!ELEMENT BR    - O EMPTY>

    '
- title: <!ATTLIST BR
  contents:
  - "<!ATTLIST BR\n        %SDAPREF; \"&#RE;\"\n        >\n"
- title: <!-- <BR>       Line break      -->
  contents:
  - '<!-- <BR>       Line break      -->

    '
- title: <!--========= Link Markup ======================-->
  contents:
  - '<!--========= Link Markup ======================-->

    '
- title: <!ENTITY % linkType "NAMES">
  contents:
  - '<!ENTITY % linkType "NAMES">

    '
- title: <!ENTITY % linkExtraAttributes
  contents:
  - "<!ENTITY % linkExtraAttributes\n        \"REL %linkType #IMPLIED\n        REV\
    \ %linkType #IMPLIED\n        URN CDATA #IMPLIED\n        TITLE CDATA #IMPLIED\n\
    \        METHODS NAMES #IMPLIED\n        \">\n"
- title: <![ %HTML.Recommended [
  contents:
  - "<![ %HTML.Recommended [\n        <!ENTITY % A.content   \"(%text)*\"\n      \
    \  -- <H1><a name=\"xxx\">Heading</a></H1>\n                is preferred to\n\
    \           <a name=\"xxx\"><H1>Heading</H1></a>\n        -->\n"
- title: ']]>'
  contents:
  - ']]>

    '
- title: <!ENTITY % A.content   "(%heading|%text)*">
  contents:
  - '<!ENTITY % A.content   "(%heading|%text)*">

    '
- title: <!ELEMENT A     - - %A.content -(A)>
  contents:
  - '<!ELEMENT A     - - %A.content -(A)>

    '
- title: <!ATTLIST A
  contents:
  - "<!ATTLIST A\n        HREF CDATA #IMPLIED\n        NAME CDATA #IMPLIED\n     \
    \   %linkExtraAttributes;\n        %SDAPREF; \"<Anchor: #AttList>\"\n        >\n"
- title: <!-- <A>                Anchor; source/destination of link      -->
  contents:
  - '<!-- <A>                Anchor; source/destination of link      -->

    '
- title: <!-- <A NAME="...">     Name of this anchor                     -->
  contents:
  - '<!-- <A NAME="...">     Name of this anchor                     -->

    '
- title: <!-- <A HREF="...">     Address of link destination             -->
  contents:
  - '<!-- <A HREF="...">     Address of link destination             -->

    '
- title: <!-- <A URN="...">      Permanent address of destination        -->
  contents:
  - '<!-- <A URN="...">      Permanent address of destination        -->

    '
- title: <!-- <A REL=...>        Relationship to destination             -->
  contents:
  - '<!-- <A REL=...>        Relationship to destination             -->

    '
- title: <!-- <A REV=...>        Relationship of destination to this     -->
  contents:
  - '<!-- <A REV=...>        Relationship of destination to this     -->

    '
- title: <!-- <A TITLE="...">    Title of destination (advisory)         -->
  contents:
  - '<!-- <A TITLE="...">    Title of destination (advisory)         -->

    '
- title: <!-- <A METHODS="...">  Operations on destination (advisory)    -->
  contents:
  - '<!-- <A METHODS="...">  Operations on destination (advisory)    -->

    '
- title: <!--========== Images ==========================-->
  contents:
  - '<!--========== Images ==========================-->

    '
- title: <!ELEMENT IMG    - O EMPTY>
  contents:
  - '<!ELEMENT IMG    - O EMPTY>

    '
- title: <!ATTLIST IMG
  contents:
  - "<!ATTLIST IMG\n        SRC CDATA  #REQUIRED\n        ALT CDATA #IMPLIED\n   \
    \     ALIGN (top|middle|bottom) #IMPLIED\n        ISMAP (ISMAP) #IMPLIED\n   \
    \     %SDAPREF; \"<Fig><?SDATrans Img: #AttList>#AttVal(Alt)</Fig>\"\n       \
    \ >\n"
- title: <!-- <IMG>              Image; icon, glyph or illustration      -->
  contents:
  - '<!-- <IMG>              Image; icon, glyph or illustration      -->

    '
- title: <!-- <IMG SRC="...">    Address of image object                 -->
  contents:
  - '<!-- <IMG SRC="...">    Address of image object                 -->

    '
- title: <!-- <IMG ALT="...">    Textual alternative                     -->
  contents:
  - '<!-- <IMG ALT="...">    Textual alternative                     -->

    '
- title: <!-- <IMG ALIGN=...>    Position relative to text               -->
  contents:
  - '<!-- <IMG ALIGN=...>    Position relative to text               -->

    '
- title: <!-- <IMG ISMAP>        Each pixel can be a link                -->
  contents:
  - '<!-- <IMG ISMAP>        Each pixel can be a link                -->

    '
- title: <!--========== Paragraphs=======================-->
  contents:
  - '<!--========== Paragraphs=======================-->

    '
- title: <!ELEMENT P     - O (%text)*>
  contents:
  - '<!ELEMENT P     - O (%text)*>

    '
- title: <!ATTLIST P
  contents:
  - "<!ATTLIST P\n        %SDAFORM; \"Para\"\n        >\n"
- title: <!-- <P>        Paragraph       -->
  contents:
  - '<!-- <P>        Paragraph       -->

    '
- title: <!--========== Headings, Titles, Sections ===============-->
  contents:
  - '<!--========== Headings, Titles, Sections ===============-->

    '
- title: <!ELEMENT HR    - O EMPTY>
  contents:
  - '<!ELEMENT HR    - O EMPTY>

    '
- title: <!ATTLIST HR
  contents:
  - "<!ATTLIST HR\n        %SDAPREF; \"&#RE;&#RE;\"\n        >\n"
- title: <!-- <HR>       Horizontal rule -->
  contents:
  - '<!-- <HR>       Horizontal rule -->

    '
- title: <!ELEMENT ( %heading )  - -  (%text;)*>
  contents:
  - '<!ELEMENT ( %heading )  - -  (%text;)*>

    '
- title: <!ATTLIST H1
  contents:
  - "<!ATTLIST H1\n        %SDAFORM; \"H1\"\n        >\n"
- title: <!ATTLIST H2
  contents:
  - "<!ATTLIST H2\n        %SDAFORM; \"H2\"\n        >\n"
- title: <!ATTLIST H3
  contents:
  - "<!ATTLIST H3\n        %SDAFORM; \"H3\"\n        >\n"
- title: <!ATTLIST H4
  contents:
  - "<!ATTLIST H4\n        %SDAFORM; \"H4\"\n        >\n"
- title: <!ATTLIST H5
  contents:
  - "<!ATTLIST H5\n        %SDAFORM; \"H5\"\n        >\n"
- title: <!ATTLIST H6
  contents:
  - "<!ATTLIST H6\n        %SDAFORM; \"H6\"\n        >\n"
- title: <!-- <H1>       Heading, level 1 -->
  contents:
  - '<!-- <H1>       Heading, level 1 -->

    '
- title: <!-- <H2>       Heading, level 2 -->
  contents:
  - '<!-- <H2>       Heading, level 2 -->

    '
- title: <!-- <H3>       Heading, level 3 -->
  contents:
  - '<!-- <H3>       Heading, level 3 -->

    '
- title: <!-- <H4>       Heading, level 4 -->
  contents:
  - '<!-- <H4>       Heading, level 4 -->

    '
- title: <!-- <H5>       Heading, level 5 -->
  contents:
  - '<!-- <H5>       Heading, level 5 -->

    '
- title: <!-- <H6>       Heading, level 6 -->
  contents:
  - '<!-- <H6>       Heading, level 6 -->

    '
- title: <!--========== Text Flows ======================-->
  contents:
  - '<!--========== Text Flows ======================-->

    '
- title: <![ %HTML.Forms [
  contents:
  - "<![ %HTML.Forms [\n        <!ENTITY % block.forms \"BLOCKQUOTE | FORM | ISINDEX\"\
    >\n"
- title: ']]>'
  contents:
  - ']]>

    '
- title: <!ENTITY % block.forms "BLOCKQUOTE">
  contents:
  - '<!ENTITY % block.forms "BLOCKQUOTE">

    '
- title: <![ %HTML.Deprecated [
  contents:
  - "<![ %HTML.Deprecated [\n        <!ENTITY % preformatted \"PRE | XMP | LISTING\"\
    >\n"
- title: ']]>'
  contents:
  - ']]>

    '
- title: <!ENTITY % preformatted "PRE">
  contents:
  - '<!ENTITY % preformatted "PRE">

    '
- title: <!ENTITY % block "P | %list | DL
  contents:
  - "<!ENTITY % block \"P | %list | DL\n        | %preformatted\n        | %block.forms\"\
    >\n"
- title: <!ENTITY % flow "(%text|%block)*">
  contents:
  - '<!ENTITY % flow "(%text|%block)*">

    '
- title: <!ENTITY % pre.content "#PCDATA | A | HR | BR">
  contents:
  - '<!ENTITY % pre.content "#PCDATA | A | HR | BR">

    '
- title: <!ELEMENT PRE - - (%pre.content)*>
  contents:
  - '<!ELEMENT PRE - - (%pre.content)*>

    '
- title: <!ATTLIST PRE
  contents:
  - "<!ATTLIST PRE\n        WIDTH NUMBER #implied\n        %SDAFORM; \"Lit\"\n   \
    \     >\n"
- title: <!-- <PRE>              Preformatted text               -->
  contents:
  - '<!-- <PRE>              Preformatted text               -->

    '
- title: <!-- <PRE WIDTH=...>    Maximum characters per line     -->
  contents:
  - '<!-- <PRE WIDTH=...>    Maximum characters per line     -->

    '
- title: <![ %HTML.Deprecated [
  contents:
  - '<![ %HTML.Deprecated [

    '
- title: <!ENTITY % literal "CDATA"
  contents:
  - "<!ENTITY % literal \"CDATA\"\n        -- historical, non-conforming parsing mode\
    \ where\n           the only markup signal is the end tag\n           in full\n\
    \        -->\n"
- title: <!ELEMENT (XMP|LISTING) - -  %literal>
  contents:
  - '<!ELEMENT (XMP|LISTING) - -  %literal>

    '
- title: <!ATTLIST XMP
  contents:
  - "<!ATTLIST XMP\n        %SDAFORM; \"Lit\"\n        %SDAPREF; \"Example:&#RE;\"\
    \n        >\n"
- title: <!ATTLIST LISTING
  contents:
  - "<!ATTLIST LISTING\n        %SDAFORM; \"Lit\"\n        %SDAPREF; \"Listing:&#RE;\"\
    \n        >\n"
- title: <!-- <XMP>              Example section         -->
  contents:
  - '<!-- <XMP>              Example section         -->

    '
- title: <!-- <LISTING>          Computer listing        -->
  contents:
  - '<!-- <LISTING>          Computer listing        -->

    '
- title: <!ELEMENT PLAINTEXT - O %literal>
  contents:
  - '<!ELEMENT PLAINTEXT - O %literal>

    '
- title: <!-- <PLAINTEXT>        Plain text passage      -->
  contents:
  - '<!-- <PLAINTEXT>        Plain text passage      -->

    '
- title: <!ATTLIST PLAINTEXT
  contents:
  - "<!ATTLIST PLAINTEXT\n        %SDAFORM; \"Lit\"\n        >\n"
- title: ']]>'
  contents:
  - ']]>

    '
- title: <!--========== Lists ==================-->
  contents:
  - '<!--========== Lists ==================-->

    '
- title: <!ELEMENT DL    - -  (DT | DD)+>
  contents:
  - '<!ELEMENT DL    - -  (DT | DD)+>

    '
- title: <!ATTLIST DL
  contents:
  - "<!ATTLIST DL\n        COMPACT (COMPACT) #IMPLIED\n        %SDAFORM; \"List\"\n\
    \        %SDAPREF; \"Definition List:\"\n        >\n"
- title: <!ELEMENT DT    - O (%text)*>
  contents:
  - '<!ELEMENT DT    - O (%text)*>

    '
- title: <!ATTLIST DT
  contents:
  - "<!ATTLIST DT\n        %SDAFORM; \"Term\"\n        >\n"
- title: <!ELEMENT DD    - O %flow>
  contents:
  - '<!ELEMENT DD    - O %flow>

    '
- title: <!ATTLIST DD
  contents:
  - "<!ATTLIST DD\n        %SDAFORM; \"LItem\"\n        >\n"
- title: <!-- <DL>               Definition list, or glossary    -->
  contents:
  - '<!-- <DL>               Definition list, or glossary    -->

    '
- title: <!-- <DL COMPACT>       Compact style list              -->
  contents:
  - '<!-- <DL COMPACT>       Compact style list              -->

    '
- title: <!-- <DT>               Term in definition list         -->
  contents:
  - '<!-- <DT>               Term in definition list         -->

    '
- title: <!-- <DD>               Definition of term              -->
  contents:
  - '<!-- <DD>               Definition of term              -->

    '
- title: <!ELEMENT (OL|UL) - -  (LI)+>
  contents:
  - '<!ELEMENT (OL|UL) - -  (LI)+>

    '
- title: <!ATTLIST OL
  contents:
  - "<!ATTLIST OL\n        COMPACT (COMPACT) #IMPLIED\n        %SDAFORM; \"List\"\n\
    \        >\n"
- title: <!ATTLIST UL
  contents:
  - "<!ATTLIST UL\n        COMPACT (COMPACT) #IMPLIED\n        %SDAFORM; \"List\"\n\
    \        >\n"
- title: <!-- <UL>               Unordered list                  -->
  contents:
  - '<!-- <UL>               Unordered list                  -->

    '
- title: <!-- <UL COMPACT>       Compact list style              -->
  contents:
  - '<!-- <UL COMPACT>       Compact list style              -->

    '
- title: <!-- <OL>               Ordered, or numbered list       -->
  contents:
  - '<!-- <OL>               Ordered, or numbered list       -->

    '
- title: <!-- <OL COMPACT>       Compact list style              -->
  contents:
  - '<!-- <OL COMPACT>       Compact list style              -->

    '
- title: <!ELEMENT (DIR|MENU) - -  (LI)+ -(%block)>
  contents:
  - '<!ELEMENT (DIR|MENU) - -  (LI)+ -(%block)>

    '
- title: <!ATTLIST DIR
  contents:
  - "<!ATTLIST DIR\n        COMPACT (COMPACT) #IMPLIED\n        %SDAFORM; \"List\"\
    \n        %SDAPREF; \"<LHead>Directory</LHead>\"\n        >\n"
- title: <!ATTLIST MENU
  contents:
  - "<!ATTLIST MENU\n        COMPACT (COMPACT) #IMPLIED\n        %SDAFORM; \"List\"\
    \n        %SDAPREF; \"<LHead>Menu</LHead>\"\n        >\n"
- title: <!-- <DIR>              Directory list                  -->
  contents:
  - '<!-- <DIR>              Directory list                  -->

    '
- title: <!-- <DIR COMPACT>      Compact list style              -->
  contents:
  - '<!-- <DIR COMPACT>      Compact list style              -->

    '
- title: <!-- <MENU>             Menu list                       -->
  contents:
  - '<!-- <MENU>             Menu list                       -->

    '
- title: <!-- <MENU COMPACT>     Compact list style              -->
  contents:
  - '<!-- <MENU COMPACT>     Compact list style              -->

    '
- title: <!ELEMENT LI    - O %flow>
  contents:
  - '<!ELEMENT LI    - O %flow>

    '
- title: <!ATTLIST LI
  contents:
  - "<!ATTLIST LI\n        %SDAFORM; \"LItem\"\n        >\n"
- title: <!-- <LI>               List item                       -->
  contents:
  - '<!-- <LI>               List item                       -->

    '
- title: <!--========== Document Body ===================-->
  contents:
  - '<!--========== Document Body ===================-->

    '
- title: <![ %HTML.Recommended [
  contents:
  - "<![ %HTML.Recommended [\n        <!ENTITY % body.content \"(%heading|%block|HR|ADDRESS|IMG)*\"\
    \n        -- <h1>Heading</h1>\n           <p>Text ...\n                is preferred\
    \ to\n           <h1>Heading</h1>\n           Text ...\n        -->\n"
- title: ']]>'
  contents:
  - ']]>

    '
- title: <!ENTITY % body.content "(%heading | %text | %block |
  contents:
  - "<!ENTITY % body.content \"(%heading | %text | %block |\n                    \
    \             HR | ADDRESS)*\">\n"
- title: <!ELEMENT BODY O O  %body.content>
  contents:
  - '<!ELEMENT BODY O O  %body.content>

    '
- title: <!-- <BODY>     Document body   -->
  contents:
  - '<!-- <BODY>     Document body   -->

    '
- title: <!ELEMENT BLOCKQUOTE - - %body.content>
  contents:
  - '<!ELEMENT BLOCKQUOTE - - %body.content>

    '
- title: <!ATTLIST BLOCKQUOTE
  contents:
  - "<!ATTLIST BLOCKQUOTE\n        %SDAFORM; \"BQ\"\n        >\n"
- title: <!-- <BLOCKQUOTE>       Quoted passage  -->
  contents:
  - '<!-- <BLOCKQUOTE>       Quoted passage  -->

    '
- title: <!ELEMENT ADDRESS - - (%text|P)*>
  contents:
  - '<!ELEMENT ADDRESS - - (%text|P)*>

    '
- title: <!ATTLIST  ADDRESS
  contents:
  - "<!ATTLIST  ADDRESS\n        %SDAFORM; \"Lit\"\n        %SDAPREF; \"Address:&#RE;\"\
    \n        >\n"
- title: <!-- <ADDRESS>  Address, signature, or byline   -->
  contents:
  - '<!-- <ADDRESS>  Address, signature, or byline   -->

    '
- title: <!--======= Forms ====================-->
  contents:
  - '<!--======= Forms ====================-->

    '
- title: <![ %HTML.Forms [
  contents:
  - '<![ %HTML.Forms [

    '
- title: <!ELEMENT FORM - - %body.content -(FORM) +(INPUT|SELECT|TEXTAREA)>
  contents:
  - '<!ELEMENT FORM - - %body.content -(FORM) +(INPUT|SELECT|TEXTAREA)>

    '
- title: <!ATTLIST FORM
  contents:
  - "<!ATTLIST FORM\n        ACTION CDATA #IMPLIED\n        METHOD (%HTTP-Method)\
    \ GET\n        ENCTYPE %Content-Type; \"application/x-www-form-urlencoded\"\n\
    \        %SDAPREF; \"<Para>Form:</Para>\"\n        %SDASUFF; \"<Para>Form End.</Para>\"\
    \n        >\n"
- title: <!-- <FORM>                     Fill-out or data-entry form     -->
  contents:
  - '<!-- <FORM>                     Fill-out or data-entry form     -->

    '
- title: <!-- <FORM ACTION="...">        Address for completed form      -->
  contents:
  - '<!-- <FORM ACTION="...">        Address for completed form      -->

    '
- title: <!-- <FORM METHOD=...>          Method of submitting form       -->
  contents:
  - '<!-- <FORM METHOD=...>          Method of submitting form       -->

    '
- title: <!-- <FORM ENCTYPE="...">       Representation of form data     -->
  contents:
  - '<!-- <FORM ENCTYPE="...">       Representation of form data     -->

    '
- title: <!ENTITY % InputType "(TEXT | PASSWORD | CHECKBOX |
  contents:
  - "<!ENTITY % InputType \"(TEXT | PASSWORD | CHECKBOX |\n                      \
    \  RADIO | SUBMIT | RESET |\n                        IMAGE | HIDDEN )\">\n"
- title: <!ELEMENT INPUT - O EMPTY>
  contents:
  - '<!ELEMENT INPUT - O EMPTY>

    '
- title: <!ATTLIST INPUT
  contents:
  - "<!ATTLIST INPUT\n        TYPE %InputType TEXT\n        NAME CDATA #IMPLIED\n\
    \        VALUE CDATA #IMPLIED\n        SRC CDATA #IMPLIED\n        CHECKED (CHECKED)\
    \ #IMPLIED\n        SIZE CDATA #IMPLIED\n        MAXLENGTH NUMBER #IMPLIED\n \
    \       ALIGN (top|middle|bottom) #IMPLIED\n        %SDAPREF; \"Input: \"\n  \
    \      >\n"
- title: <!-- <INPUT>                    Form input datum                -->
  contents:
  - '<!-- <INPUT>                    Form input datum                -->

    '
- title: <!-- <INPUT TYPE=...>           Type of input interaction       -->
  contents:
  - '<!-- <INPUT TYPE=...>           Type of input interaction       -->

    '
- title: <!-- <INPUT NAME=...>           Name of form datum              -->
  contents:
  - '<!-- <INPUT NAME=...>           Name of form datum              -->

    '
- title: <!-- <INPUT VALUE="...">        Default/initial/selected value  -->
  contents:
  - '<!-- <INPUT VALUE="...">        Default/initial/selected value  -->

    '
- title: <!-- <INPUT SRC="...">          Address of image                -->
  contents:
  - '<!-- <INPUT SRC="...">          Address of image                -->

    '
- title: <!-- <INPUT CHECKED>            Initial state is "on"           -->
  contents:
  - '<!-- <INPUT CHECKED>            Initial state is "on"           -->

    '
- title: <!-- <INPUT SIZE=...>           Field size hint                 -->
  contents:
  - '<!-- <INPUT SIZE=...>           Field size hint                 -->

    '
- title: <!-- <INPUT MAXLENGTH=...>      Data length maximum             -->
  contents:
  - '<!-- <INPUT MAXLENGTH=...>      Data length maximum             -->

    '
- title: <!-- <INPUT ALIGN=...>          Image alignment                 -->
  contents:
  - '<!-- <INPUT ALIGN=...>          Image alignment                 -->

    '
- title: <!ELEMENT SELECT - - (OPTION+) -(INPUT|SELECT|TEXTAREA)>
  contents:
  - '<!ELEMENT SELECT - - (OPTION+) -(INPUT|SELECT|TEXTAREA)>

    '
- title: <!ATTLIST SELECT
  contents:
  - "<!ATTLIST SELECT\n        NAME CDATA #REQUIRED\n        SIZE NUMBER #IMPLIED\n\
    \        MULTIPLE (MULTIPLE) #IMPLIED\n        %SDAFORM; \"List\"\n        %SDAPREF;\n\
    \        \"<LHead>Select #AttVal(Multiple)</LHead>\"\n        >\n"
- title: <!-- <SELECT>                   Selection of option(s)          -->
  contents:
  - '<!-- <SELECT>                   Selection of option(s)          -->

    '
- title: <!-- <SELECT NAME=...>          Name of form datum              -->
  contents:
  - '<!-- <SELECT NAME=...>          Name of form datum              -->

    '
- title: <!-- <SELECT SIZE=...>          Options displayed at a time     -->
  contents:
  - '<!-- <SELECT SIZE=...>          Options displayed at a time     -->

    '
- title: <!-- <SELECT MULTIPLE>          Multiple selections allowed     -->
  contents:
  - '<!-- <SELECT MULTIPLE>          Multiple selections allowed     -->

    '
- title: <!ELEMENT OPTION - O (#PCDATA)*>
  contents:
  - '<!ELEMENT OPTION - O (#PCDATA)*>

    '
- title: <!ATTLIST OPTION
  contents:
  - "<!ATTLIST OPTION\n        SELECTED (SELECTED) #IMPLIED\n        VALUE CDATA #IMPLIED\n\
    \        %SDAFORM; \"LItem\"\n        %SDAPREF;\n        \"Option: #AttVal(Value)\
    \ #AttVal(Selected)\"\n        >\n"
- title: <!-- <OPTION>                   A selection option              -->
  contents:
  - '<!-- <OPTION>                   A selection option              -->

    '
- title: <!-- <OPTION SELECTED>          Initial state                   -->
  contents:
  - '<!-- <OPTION SELECTED>          Initial state                   -->

    '
- title: <!-- <OPTION VALUE="...">       Form datum value for this option-->
  contents:
  - '<!-- <OPTION VALUE="...">       Form datum value for this option-->

    '
- title: <!ELEMENT TEXTAREA - - (#PCDATA)* -(INPUT|SELECT|TEXTAREA)>
  contents:
  - '<!ELEMENT TEXTAREA - - (#PCDATA)* -(INPUT|SELECT|TEXTAREA)>

    '
- title: <!ATTLIST TEXTAREA
  contents:
  - "<!ATTLIST TEXTAREA\n        NAME CDATA #REQUIRED\n        ROWS NUMBER #REQUIRED\n\
    \        COLS NUMBER #REQUIRED\n        %SDAFORM; \"Para\"\n        %SDAPREF;\
    \ \"Input Text -- #AttVal(Name): \"\n        >\n"
- title: <!-- <TEXTAREA>                 An area for text input          -->
  contents:
  - '<!-- <TEXTAREA>                 An area for text input          -->

    '
- title: <!-- <TEXTAREA NAME=...>        Name of form datum              -->
  contents:
  - '<!-- <TEXTAREA NAME=...>        Name of form datum              -->

    '
- title: <!-- <TEXTAREA ROWS=...>        Height of area                  -->
  contents:
  - '<!-- <TEXTAREA ROWS=...>        Height of area                  -->

    '
- title: <!-- <TEXTAREA COLS=...>        Width of area                   -->
  contents:
  - '<!-- <TEXTAREA COLS=...>        Width of area                   -->

    '
- title: ']]>'
  contents:
  - ']]>

    '
- title: <!--======= Document Head ======================-->
  contents:
  - '<!--======= Document Head ======================-->

    '
- title: <![ %HTML.Recommended [
  contents:
  - "<![ %HTML.Recommended [\n        <!ENTITY % head.extra \"\">\n"
- title: ']]>'
  contents:
  - ']]>

    '
- title: <!ENTITY % head.extra "& NEXTID?">
  contents:
  - '<!ENTITY % head.extra "& NEXTID?">

    '
- title: <!ENTITY % head.content "TITLE & ISINDEX? & BASE? %head.extra">
  contents:
  - '<!ENTITY % head.content "TITLE & ISINDEX? & BASE? %head.extra">

    '
- title: <!ELEMENT HEAD O O  (%head.content) +(META|LINK)>
  contents:
  - '<!ELEMENT HEAD O O  (%head.content) +(META|LINK)>

    '
- title: <!-- <HEAD>     Document head   -->
  contents:
  - '<!-- <HEAD>     Document head   -->

    '
- title: <!ELEMENT TITLE - -  (#PCDATA)*  -(META|LINK)>
  contents:
  - '<!ELEMENT TITLE - -  (#PCDATA)*  -(META|LINK)>

    '
- title: <!ATTLIST TITLE
  contents:
  - "<!ATTLIST TITLE\n        %SDAFORM; \"Ti\"    >\n"
- title: <!-- <TITLE>    Title of document -->
  contents:
  - '<!-- <TITLE>    Title of document -->

    '
- title: <!ELEMENT LINK - O EMPTY>
  contents:
  - '<!ELEMENT LINK - O EMPTY>

    '
- title: <!ATTLIST LINK
  contents:
  - "<!ATTLIST LINK\n        HREF CDATA #REQUIRED\n        %linkExtraAttributes;\n\
    \        %SDAPREF; \"Linked to : #AttVal (TITLE) (URN) (HREF)>\"    >\n"
- title: <!-- <LINK>             Link from this document                 -->
  contents:
  - '<!-- <LINK>             Link from this document                 -->

    '
- title: <!-- <LINK HREF="...">  Address of link destination             -->
  contents:
  - '<!-- <LINK HREF="...">  Address of link destination             -->

    '
- title: <!-- <LINK URN="...">   Lasting name of destination             -->
  contents:
  - '<!-- <LINK URN="...">   Lasting name of destination             -->

    '
- title: <!-- <LINK REL=...>     Relationship to destination             -->
  contents:
  - '<!-- <LINK REL=...>     Relationship to destination             -->

    '
- title: <!-- <LINK REV=...>     Relationship of destination to this     -->
  contents:
  - '<!-- <LINK REV=...>     Relationship of destination to this     -->

    '
- title: <!-- <LINK TITLE="..."> Title of destination (advisory)         -->
  contents:
  - '<!-- <LINK TITLE="..."> Title of destination (advisory)         -->

    '
- title: <!-- <LINK METHODS="..."> Operations allowed (advisory)         -->
  contents:
  - '<!-- <LINK METHODS="..."> Operations allowed (advisory)         -->

    '
- title: <!ELEMENT ISINDEX - O EMPTY>
  contents:
  - '<!ELEMENT ISINDEX - O EMPTY>

    '
- title: <!ATTLIST ISINDEX
  contents:
  - "<!ATTLIST ISINDEX\n        %SDAPREF;\n   \"<Para>[Document is indexed/searchable.]</Para>\"\
    >\n"
- title: <!-- <ISINDEX>          Document is a searchable index          -->
  contents:
  - '<!-- <ISINDEX>          Document is a searchable index          -->

    '
- title: <!ELEMENT BASE - O EMPTY>
  contents:
  - '<!ELEMENT BASE - O EMPTY>

    '
- title: <!ATTLIST BASE
  contents:
  - "<!ATTLIST BASE\n        HREF CDATA #REQUIRED     >\n"
- title: <!-- <BASE>             Base context document                   -->
  contents:
  - '<!-- <BASE>             Base context document                   -->

    '
- title: <!-- <BASE HREF="...">  Address for this document               -->
  contents:
  - '<!-- <BASE HREF="...">  Address for this document               -->

    '
- title: <!ELEMENT NEXTID - O EMPTY>
  contents:
  - '<!ELEMENT NEXTID - O EMPTY>

    '
- title: <!ATTLIST NEXTID
  contents:
  - "<!ATTLIST NEXTID\n        N CDATA #REQUIRED     >\n"
- title: <!-- <NEXTID>           Next ID to use for link name            -->
  contents:
  - '<!-- <NEXTID>           Next ID to use for link name            -->

    '
- title: <!-- <NEXTID N=...>     Next ID to use for link name            -->
  contents:
  - '<!-- <NEXTID N=...>     Next ID to use for link name            -->

    '
- title: <!ELEMENT META - O EMPTY>
  contents:
  - '<!ELEMENT META - O EMPTY>

    '
- title: <!ATTLIST META
  contents:
  - "<!ATTLIST META\n        HTTP-EQUIV  NAME    #IMPLIED\n        NAME        NAME\
    \    #IMPLIED\n        CONTENT     CDATA   #REQUIRED    >\n"
- title: <!-- <META>                     Generic Meta-information        -->
  contents:
  - '<!-- <META>                     Generic Meta-information        -->

    '
- title: <!-- <META HTTP-EQUIV=...>      HTTP response header name       -->
  contents:
  - '<!-- <META HTTP-EQUIV=...>      HTTP response header name       -->

    '
- title: <!-- <META NAME=...>            Meta-information name           -->
  contents:
  - '<!-- <META NAME=...>            Meta-information name           -->

    '
- title: <!-- <META CONTENT="...">       Associated information          -->
  contents:
  - '<!-- <META CONTENT="...">       Associated information          -->

    '
- title: <!--======= Document Structure =================-->
  contents:
  - '<!--======= Document Structure =================-->

    '
- title: <![ %HTML.Deprecated [
  contents:
  - "<![ %HTML.Deprecated [\n        <!ENTITY % html.content \"HEAD, BODY, PLAINTEXT?\"\
    >\n"
- title: ']]>'
  contents:
  - ']]>

    '
- title: <!ENTITY % html.content "HEAD, BODY">
  contents:
  - '<!ENTITY % html.content "HEAD, BODY">

    '
- title: <!ELEMENT HTML O O  (%html.content)>
  contents:
  - '<!ELEMENT HTML O O  (%html.content)>

    '
- title: '<!ENTITY % version.attr "VERSION CDATA #FIXED ''%HTML.Version;''">'
  contents:
  - '<!ENTITY % version.attr "VERSION CDATA #FIXED ''%HTML.Version;''">

    '
- title: <!ATTLIST HTML
  contents:
  - "<!ATTLIST HTML\n        %version.attr;\n        %SDAFORM; \"Book\"\n        >\n"
- title: <!-- <HTML>                     HTML Document   -->
  contents:
  - '<!-- <HTML>                     HTML Document   -->

    '
- title: 9.2. Strict HTML DTD
  contents:
  - "9.2. Strict HTML DTD\n   This document type declaration refers to the HTML DTD\
    \ with the\n   `HTML.Recommended' entity defined as `INCLUDE' rather than IGNORE;\n\
    \   that is, it refers to the more structurally rigid definition of HTML.\n"
- title: <!--    html-s.dtd
  contents:
  - "<!--    html-s.dtd\n        Document Type Definition for the HyperText Markup\
    \ Language\n        with strict validation (HTML Strict DTD).\n        $Id: html-s.dtd,v\
    \ 1.3 1995/06/02 18:55:46 connolly Exp $\n        Author: Daniel W. Connolly <connolly@w3.org>\n\
    \        See Also: http://www.w3.org/hypertext/WWW/MarkUp/MarkUp.html\n"
- title: -->
  contents:
  - '-->

    '
- title: <!ENTITY % HTML.Version
  contents:
  - "<!ENTITY % HTML.Version\n        \"-//IETF//DTD HTML 2.0 Strict//EN\"\n     \
    \   -- Typical usage:\n            <!DOCTYPE HTML PUBLIC\n                \"-//IETF//DTD\
    \ HTML Strict//EN\">\n            <html>\n            ...\n            </html>\n\
    \        --\n        >\n"
- title: <!-- Feature Test Entities -->
  contents:
  - '<!-- Feature Test Entities -->

    '
- title: <!ENTITY % HTML.Recommended "INCLUDE">
  contents:
  - '<!ENTITY % HTML.Recommended "INCLUDE">

    '
- title: <!ENTITY % html PUBLIC "-//IETF//DTD HTML 2.0//EN">
  contents:
  - '<!ENTITY % html PUBLIC "-//IETF//DTD HTML 2.0//EN">

    '
- title: '%html;'
  contents:
  - '%html;

    '
- title: 9.3. Level 1 HTML DTD
  contents:
  - "9.3. Level 1 HTML DTD\n   This document type declaration refers to the HTML DTD\
    \ with the\n   `HTML.Forms' entity defined as `IGNORE' rather than `INCLUDE'.\n\
    \   Documents which contain <FORM> elements do not conform to this DTD,\n   and\
    \ must use the level 2 DTD.\n"
- title: <!--    html-1.dtd
  contents:
  - "<!--    html-1.dtd\n        Document Type Definition for the HyperText Markup\
    \ Language\n        with Level 1 Extensions (HTML Level 1 DTD).\n        $Id:\
    \ html-1.dtd,v 1.2 1995/03/29 18:53:10 connolly Exp $\n        Author: Daniel\
    \ W. Connolly <connolly@w3.org>\n        See Also: http://info.cern.ch/hypertext/WWW/MarkUp/MarkUp.html\n"
- title: -->
  contents:
  - '-->

    '
- title: <!ENTITY % HTML.Version
  contents:
  - "<!ENTITY % HTML.Version\n        \"-//IETF//DTD HTML 2.0 Level 1//EN\"\n    \
    \    -- Typical usage:\n            <!DOCTYPE HTML PUBLIC\n                \"\
    -//IETF//DTD HTML Level 1//EN\">\n            <html>\n            ...\n      \
    \      </html>\n        --\n        >\n"
- title: <!-- Feature Test Entities -->
  contents:
  - '<!-- Feature Test Entities -->

    '
- title: <!ENTITY % HTML.Forms "IGNORE">
  contents:
  - '<!ENTITY % HTML.Forms "IGNORE">

    '
- title: <!ENTITY % html PUBLIC "-//IETF//DTD HTML 2.0//EN">
  contents:
  - '<!ENTITY % html PUBLIC "-//IETF//DTD HTML 2.0//EN">

    '
- title: '%html;'
  contents:
  - '%html;

    '
- title: 9.4. Strict Level 1 HTML DTD
  contents:
  - "9.4. Strict Level 1 HTML DTD\n   This document type declaration refers to the\
    \ level 1 HTML DTD with\n   the `HTML.Recommended' entity defined as `INCLUDE'\
    \ rather than\n   IGNORE; that is, it refers to the more structurally rigid definition\n\
    \   of HTML.\n"
- title: <!--    html-1s.dtd
  contents:
  - "<!--    html-1s.dtd\n        Document Type Definition for the HyperText Markup\
    \ Language\n        Struct Level 1\n        $Id: html-1s.dtd,v 1.3 1995/06/02\
    \ 18:55:43 connolly Exp $\n        Author: Daniel W. Connolly <connolly@w3.org>\n\
    \        See Also: http://www.w3.org/hypertext/WWW/MarkUp/MarkUp.html\n"
- title: -->
  contents:
  - '-->

    '
- title: <!ENTITY % HTML.Version
  contents:
  - "<!ENTITY % HTML.Version\n        \"-//IETF//DTD HTML 2.0 Strict Level 1//EN\"\
    \n        -- Typical usage:\n            <!DOCTYPE HTML PUBLIC\n             \
    \   \"-//IETF//DTD HTML Strict Level 1//EN\">\n            <html>\n          \
    \  ...\n            </html>\n        --\n        >\n"
- title: <!-- Feature Test Entities -->
  contents:
  - '<!-- Feature Test Entities -->

    '
- title: <!ENTITY % HTML.Recommended "INCLUDE">
  contents:
  - '<!ENTITY % HTML.Recommended "INCLUDE">

    '
- title: <!ENTITY % html-1 PUBLIC "-//IETF//DTD HTML 2.0 Level 1//EN">
  contents:
  - '<!ENTITY % html-1 PUBLIC "-//IETF//DTD HTML 2.0 Level 1//EN">

    '
- title: '%html-1;'
  contents:
  - '%html-1;

    '
- title: 9.5. SGML Declaration for HTML
  contents:
  - "9.5. SGML Declaration for HTML\n   This is the SGML Declaration for HyperText\
    \ Markup Language.\n"
- title: <!SGML  "ISO 8879:1986"
  contents:
  - '<!SGML  "ISO 8879:1986"

    '
- title: --
  contents:
  - "--\n        SGML Declaration for HyperText Markup Language (HTML).\n"
- title: --
  contents:
  - '--

    '
- title: CHARSET
  contents:
  - "CHARSET\n         BASESET  \"ISO 646:1983//CHARSET\n                   International\
    \ Reference Version\n                   (IRV)//ESC 2/5 4/0\"\n         DESCSET\
    \  0   9   UNUSED\n                  9   2   9\n                  11  2   UNUSED\n\
    \                  13  1   13\n                  14  18  UNUSED\n            \
    \      32  95  32\n                  127 1   UNUSED\n     BASESET   \"ISO Registration\
    \ Number 100//CHARSET\n                ECMA-94 Right Part of\n               \
    \ Latin Alphabet Nr. 1//ESC 2/13 4/1\"\n         DESCSET  128  32   UNUSED\n \
    \                 160  96    32\n"
- title: CAPACITY        SGMLREF
  contents:
  - "CAPACITY        SGMLREF\n                TOTALCAP        150000\n           \
    \     GRPCAP          150000\n                ENTCAP          150000\n"
- title: SCOPE    DOCUMENT
  contents:
  - 'SCOPE    DOCUMENT

    '
- title: SYNTAX
  contents:
  - "SYNTAX\n         SHUNCHAR CONTROLS 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n\
    \                 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 127\n         BASESET\
    \  \"ISO 646:1983//CHARSET\n                   International Reference Version\n\
    \                   (IRV)//ESC 2/5 4/0\"\n         DESCSET  0 128 0\n        \
    \ FUNCTION\n                  RE          13\n                  RS          10\n\
    \                  SPACE       32\n                  TAB SEPCHAR  9\n        \
    \ NAMING   LCNMSTRT \"\"\n                  UCNMSTRT \"\"\n                  LCNMCHAR\
    \ \".-\"\n                  UCNMCHAR \".-\"\n                  NAMECASE GENERAL\
    \ YES\n                           ENTITY  NO\n         DELIM    GENERAL  SGMLREF\n\
    \                  SHORTREF SGMLREF\n         NAMES    SGMLREF\n         QUANTITY\
    \ SGMLREF\n                  ATTSPLEN 2100\n                  LITLEN   1024\n\
    \                  NAMELEN  72    -- somewhat arbitrary; taken from\n        \
    \                        internet line length conventions --\n               \
    \   PILEN    1024\n                  TAGLVL   100\n                  TAGLEN  \
    \ 2100\n                  GRPGTCNT 150\n                  GRPCNT   64\n"
- title: FEATURES
  contents:
  - "FEATURES\n  MINIMIZE\n    DATATAG  NO\n    OMITTAG  YES\n    RANK     NO\n  \
    \  SHORTTAG YES\n  LINK\n    SIMPLE   NO\n    IMPLICIT NO\n    EXPLICIT NO\n \
    \ OTHER\n    CONCUR   NO\n    SUBDOC   NO\n    FORMAL   YES\n  APPINFO    \"SDA\"\
    \  -- conforming SGML Document Access application\n                    --\n"
- title: '>'
  contents:
  - '>

    '
- title: <!--
  contents:
  - "<!--\n        $Id: html.decl,v 1.17 1995/06/08 14:59:32 connolly Exp $\n    \
    \    Author: Daniel W. Connolly <connolly@w3.org>\n        See also: http://www.w3.org/hypertext/WWW/MarkUp/MarkUp.html\n\
    \ -->\n"
- title: 9.6. Sample SGML Open Entity Catalog for HTML
  contents:
  - "9.6. Sample SGML Open Entity Catalog for HTML\n   The SGML standard describes\
    \ an \"entity manager\" as the portion or\n   component of an SGML system that\
    \ maps SGML entities into the actual\n   storage model (e.g., the file system).\
    \ The standard itself does not\n   define a particular mapping methodology or\
    \ notation.\n   To assist the interoperability among various SGML tools and systems,\n\
    \   the SGML Open consortium has passed a technical resolution that\n   defines\
    \ a format for an application-independent entity catalog that\n   maps external\
    \ identifiers and/or entity names to file names.\n   Each entry in the catalog\
    \ associates a storage object identifier\n   (such as a file name) with information\
    \ about the external entity that\n   appears in the SGML document. In addition\
    \ to entries that associate\n   public identifiers, a catalog entry can associate\
    \ an entity name with\n   a storage object identifier. For example, the following\
    \ are possible\n   catalog entries:\n        -- catalog: SGML Open style entity\
    \ catalog for HTML --\n        -- $Id: catalog,v 1.3 1995/09/21 23:30:23 connolly\
    \ Exp $ --\n        -- Ways to refer to Level 2: most general to most specific\
    \ --\n"
- title: PUBLIC  "-//IETF//DTD HTML//EN"                 html.dtd
  contents:
  - 'PUBLIC  "-//IETF//DTD HTML//EN"                 html.dtd

    '
- title: PUBLIC  "-//IETF//DTD HTML 2.0//EN"             html.dtd
  contents:
  - 'PUBLIC  "-//IETF//DTD HTML 2.0//EN"             html.dtd

    '
- title: PUBLIC  "-//IETF//DTD HTML Level 2//EN"         html.dtd
  contents:
  - 'PUBLIC  "-//IETF//DTD HTML Level 2//EN"         html.dtd

    '
- title: PUBLIC  "-//IETF//DTD HTML 2.0 Level 2//EN"     html.dtd
  contents:
  - "PUBLIC  \"-//IETF//DTD HTML 2.0 Level 2//EN\"     html.dtd\n        -- Ways to\
    \ refer to Level 1: most general to most specific --\n"
- title: PUBLIC  "-//IETF//DTD HTML Level 1//EN"         html-1.dtd
  contents:
  - 'PUBLIC  "-//IETF//DTD HTML Level 1//EN"         html-1.dtd

    '
- title: PUBLIC  "-//IETF//DTD HTML 2.0 Level 1//EN"     html-1.dtd
  contents:
  - "PUBLIC  \"-//IETF//DTD HTML 2.0 Level 1//EN\"     html-1.dtd\n        -- Ways\
    \ to refer to\n                 Strict Level 2: most general to most specific\
    \ --\n"
- title: PUBLIC  "-//IETF//DTD HTML Strict//EN"                  html-s.dtd
  contents:
  - 'PUBLIC  "-//IETF//DTD HTML Strict//EN"                  html-s.dtd

    '
- title: PUBLIC  "-//IETF//DTD HTML 2.0 Strict//EN"              html-s.dtd
  contents:
  - 'PUBLIC  "-//IETF//DTD HTML 2.0 Strict//EN"              html-s.dtd

    '
- title: PUBLIC  "-//IETF//DTD HTML Strict Level 2//EN"          html-s.dtd
  contents:
  - 'PUBLIC  "-//IETF//DTD HTML Strict Level 2//EN"          html-s.dtd

    '
- title: PUBLIC  "-//IETF//DTD HTML 2.0 Strict Level 2//EN"      html-s.dtd
  contents:
  - "PUBLIC  \"-//IETF//DTD HTML 2.0 Strict Level 2//EN\"      html-s.dtd\n      \
    \  -- Ways to refer to\n                 Strict Level 1: most general to most\
    \ specific --\n"
- title: PUBLIC  "-//IETF//DTD HTML Strict Level 1//EN"          html-1s.dtd
  contents:
  - 'PUBLIC  "-//IETF//DTD HTML Strict Level 1//EN"          html-1s.dtd

    '
- title: PUBLIC  "-//IETF//DTD HTML 2.0 Strict Level 1//EN"      html-1s.dtd
  contents:
  - "PUBLIC  \"-//IETF//DTD HTML 2.0 Strict Level 1//EN\"      html-1s.dtd\n     \
    \   -- ISO latin 1 entity set for HTML --\n"
- title: PUBLIC  "ISO 8879-1986//ENTITIES Added Latin 1//EN//HTML" ISOlat1\
  contents:
  - 'PUBLIC  "ISO 8879-1986//ENTITIES Added Latin 1//EN//HTML" ISOlat1\

    '
- title: sgml
  contents:
  - 'sgml

    '
- title: 9.7. Character Entity Sets
  contents:
  - "9.7. Character Entity Sets\n   The HTML DTD defines the following entities. They\
    \ represent\n   particular graphic characters which have special meanings in places\n\
    \   in the markup, or may not be part of the character set available to\n   the\
    \ writer.\n"
- title: 9.7.1. Numeric and Special Graphic Entity Set
  contents:
  - "9.7.1. Numeric and Special Graphic Entity Set\n   The following table lists each\
    \ of the characters included from the\n   Numeric and Special Graphic entity set,\
    \ along with its name, syntax\n   for use, and description. This list is derived\
    \ from `ISO Standard\n   8879:1986//ENTITIES Numeric and Special Graphic//EN'.\
    \  However, HTML\n   does not include for the entire entity set -- only the entities\n\
    \   listed below are included.\n    GLYPH   NAME    SYNTAX  DESCRIPTION\n    <\
    \       lt      &lt;    Less than sign\n    >       gt      &gt;    Greater than\
    \ signn\n    &       amp     &amp;   Ampersand\n    \"       quot    &quot;  Double\
    \ quote sign\n"
- title: 9.7.2. ISO Latin 1 Character Entity Set
  contents:
  - "9.7.2. ISO Latin 1 Character Entity Set\n   The following public text lists each\
    \ of the characters specified in\n   the Added Latin 1 entity set, along with\
    \ its name, syntax for use,\n   and description. This list is derived from ISO\
    \ Standard\n   8879:1986//ENTITIES Added Latin 1//EN. HTML includes the entire\n\
    \   entity set.\n"
- title: <!-- (C) International Organization for Standardization 1986
  contents:
  - "<!-- (C) International Organization for Standardization 1986\n     Permission\
    \ to copy in any form is granted for use with\n     conforming SGML systems and\
    \ applications as defined in\n     ISO 8879, provided this notice is included\
    \ in all copies.\n"
- title: -->
  contents:
  - '-->

    '
- title: '<!-- Character entity set. Typical invocation:'
  contents:
  - "<!-- Character entity set. Typical invocation:\n     <!ENTITY % ISOlat1 PUBLIC\n\
    \       \"ISO 8879-1986//ENTITIES Added Latin 1//EN//HTML\">\n     %ISOlat1;\n"
- title: -->
  contents:
  - '-->

    '
- title: <!--    Modified for use in HTML
  contents:
  - "<!--    Modified for use in HTML\n        $Id: ISOlat1.sgml,v 1.2 1994/11/30\
    \ 23:45:12 connolly Exp $ -->\n"
- title: <!ENTITY AElig  CDATA "&#198;" -- capital AE diphthong (ligature) -->
  contents:
  - '<!ENTITY AElig  CDATA "&#198;" -- capital AE diphthong (ligature) -->

    '
- title: <!ENTITY Aacute CDATA "&#193;" -- capital A, acute accent -->
  contents:
  - '<!ENTITY Aacute CDATA "&#193;" -- capital A, acute accent -->

    '
- title: <!ENTITY Acirc  CDATA "&#194;" -- capital A, circumflex accent -->
  contents:
  - '<!ENTITY Acirc  CDATA "&#194;" -- capital A, circumflex accent -->

    '
- title: <!ENTITY Agrave CDATA "&#192;" -- capital A, grave accent -->
  contents:
  - '<!ENTITY Agrave CDATA "&#192;" -- capital A, grave accent -->

    '
- title: <!ENTITY Aring  CDATA "&#197;" -- capital A, ring -->
  contents:
  - '<!ENTITY Aring  CDATA "&#197;" -- capital A, ring -->

    '
- title: <!ENTITY Atilde CDATA "&#195;" -- capital A, tilde -->
  contents:
  - '<!ENTITY Atilde CDATA "&#195;" -- capital A, tilde -->

    '
- title: <!ENTITY Auml   CDATA "&#196;" -- capital A, dieresis or umlaut mark -->
  contents:
  - '<!ENTITY Auml   CDATA "&#196;" -- capital A, dieresis or umlaut mark -->

    '
- title: <!ENTITY Ccedil CDATA "&#199;" -- capital C, cedilla -->
  contents:
  - '<!ENTITY Ccedil CDATA "&#199;" -- capital C, cedilla -->

    '
- title: <!ENTITY ETH    CDATA "&#208;" -- capital Eth, Icelandic -->
  contents:
  - '<!ENTITY ETH    CDATA "&#208;" -- capital Eth, Icelandic -->

    '
- title: <!ENTITY Eacute CDATA "&#201;" -- capital E, acute accent -->
  contents:
  - '<!ENTITY Eacute CDATA "&#201;" -- capital E, acute accent -->

    '
- title: <!ENTITY Ecirc  CDATA "&#202;" -- capital E, circumflex accent -->
  contents:
  - '<!ENTITY Ecirc  CDATA "&#202;" -- capital E, circumflex accent -->

    '
- title: <!ENTITY Egrave CDATA "&#200;" -- capital E, grave accent -->
  contents:
  - '<!ENTITY Egrave CDATA "&#200;" -- capital E, grave accent -->

    '
- title: <!ENTITY Euml   CDATA "&#203;" -- capital E, dieresis or umlaut mark -->
  contents:
  - '<!ENTITY Euml   CDATA "&#203;" -- capital E, dieresis or umlaut mark -->

    '
- title: <!ENTITY Iacute CDATA "&#205;" -- capital I, acute accent -->
  contents:
  - '<!ENTITY Iacute CDATA "&#205;" -- capital I, acute accent -->

    '
- title: <!ENTITY Icirc  CDATA "&#206;" -- capital I, circumflex accent -->
  contents:
  - '<!ENTITY Icirc  CDATA "&#206;" -- capital I, circumflex accent -->

    '
- title: <!ENTITY Igrave CDATA "&#204;" -- capital I, grave accent -->
  contents:
  - '<!ENTITY Igrave CDATA "&#204;" -- capital I, grave accent -->

    '
- title: <!ENTITY Iuml   CDATA "&#207;" -- capital I, dieresis or umlaut mark -->
  contents:
  - '<!ENTITY Iuml   CDATA "&#207;" -- capital I, dieresis or umlaut mark -->

    '
- title: <!ENTITY Ntilde CDATA "&#209;" -- capital N, tilde -->
  contents:
  - '<!ENTITY Ntilde CDATA "&#209;" -- capital N, tilde -->

    '
- title: <!ENTITY Oacute CDATA "&#211;" -- capital O, acute accent -->
  contents:
  - '<!ENTITY Oacute CDATA "&#211;" -- capital O, acute accent -->

    '
- title: <!ENTITY Ocirc  CDATA "&#212;" -- capital O, circumflex accent -->
  contents:
  - '<!ENTITY Ocirc  CDATA "&#212;" -- capital O, circumflex accent -->

    '
- title: <!ENTITY Ograve CDATA "&#210;" -- capital O, grave accent -->
  contents:
  - '<!ENTITY Ograve CDATA "&#210;" -- capital O, grave accent -->

    '
- title: <!ENTITY Oslash CDATA "&#216;" -- capital O, slash -->
  contents:
  - '<!ENTITY Oslash CDATA "&#216;" -- capital O, slash -->

    '
- title: <!ENTITY Otilde CDATA "&#213;" -- capital O, tilde -->
  contents:
  - '<!ENTITY Otilde CDATA "&#213;" -- capital O, tilde -->

    '
- title: <!ENTITY Ouml   CDATA "&#214;" -- capital O, dieresis or umlaut mark -->
  contents:
  - '<!ENTITY Ouml   CDATA "&#214;" -- capital O, dieresis or umlaut mark -->

    '
- title: <!ENTITY THORN  CDATA "&#222;" -- capital THORN, Icelandic -->
  contents:
  - '<!ENTITY THORN  CDATA "&#222;" -- capital THORN, Icelandic -->

    '
- title: <!ENTITY Uacute CDATA "&#218;" -- capital U, acute accent -->
  contents:
  - '<!ENTITY Uacute CDATA "&#218;" -- capital U, acute accent -->

    '
- title: <!ENTITY Ucirc  CDATA "&#219;" -- capital U, circumflex accent -->
  contents:
  - '<!ENTITY Ucirc  CDATA "&#219;" -- capital U, circumflex accent -->

    '
- title: <!ENTITY Ugrave CDATA "&#217;" -- capital U, grave accent -->
  contents:
  - '<!ENTITY Ugrave CDATA "&#217;" -- capital U, grave accent -->

    '
- title: <!ENTITY Uuml   CDATA "&#220;" -- capital U, dieresis or umlaut mark -->
  contents:
  - '<!ENTITY Uuml   CDATA "&#220;" -- capital U, dieresis or umlaut mark -->

    '
- title: <!ENTITY Yacute CDATA "&#221;" -- capital Y, acute accent -->
  contents:
  - '<!ENTITY Yacute CDATA "&#221;" -- capital Y, acute accent -->

    '
- title: <!ENTITY aacute CDATA "&#225;" -- small a, acute accent -->
  contents:
  - '<!ENTITY aacute CDATA "&#225;" -- small a, acute accent -->

    '
- title: <!ENTITY acirc  CDATA "&#226;" -- small a, circumflex accent -->
  contents:
  - '<!ENTITY acirc  CDATA "&#226;" -- small a, circumflex accent -->

    '
- title: <!ENTITY aelig  CDATA "&#230;" -- small ae diphthong (ligature) -->
  contents:
  - '<!ENTITY aelig  CDATA "&#230;" -- small ae diphthong (ligature) -->

    '
- title: <!ENTITY agrave CDATA "&#224;" -- small a, grave accent -->
  contents:
  - '<!ENTITY agrave CDATA "&#224;" -- small a, grave accent -->

    '
- title: <!ENTITY aring  CDATA "&#229;" -- small a, ring -->
  contents:
  - '<!ENTITY aring  CDATA "&#229;" -- small a, ring -->

    '
- title: <!ENTITY atilde CDATA "&#227;" -- small a, tilde -->
  contents:
  - '<!ENTITY atilde CDATA "&#227;" -- small a, tilde -->

    '
- title: <!ENTITY auml   CDATA "&#228;" -- small a, dieresis or umlaut mark -->
  contents:
  - '<!ENTITY auml   CDATA "&#228;" -- small a, dieresis or umlaut mark -->

    '
- title: <!ENTITY ccedil CDATA "&#231;" -- small c, cedilla -->
  contents:
  - '<!ENTITY ccedil CDATA "&#231;" -- small c, cedilla -->

    '
- title: <!ENTITY eacute CDATA "&#233;" -- small e, acute accent -->
  contents:
  - '<!ENTITY eacute CDATA "&#233;" -- small e, acute accent -->

    '
- title: <!ENTITY ecirc  CDATA "&#234;" -- small e, circumflex accent -->
  contents:
  - '<!ENTITY ecirc  CDATA "&#234;" -- small e, circumflex accent -->

    '
- title: <!ENTITY egrave CDATA "&#232;" -- small e, grave accent -->
  contents:
  - '<!ENTITY egrave CDATA "&#232;" -- small e, grave accent -->

    '
- title: <!ENTITY eth    CDATA "&#240;" -- small eth, Icelandic -->
  contents:
  - '<!ENTITY eth    CDATA "&#240;" -- small eth, Icelandic -->

    '
- title: <!ENTITY euml   CDATA "&#235;" -- small e, dieresis or umlaut mark -->
  contents:
  - '<!ENTITY euml   CDATA "&#235;" -- small e, dieresis or umlaut mark -->

    '
- title: <!ENTITY iacute CDATA "&#237;" -- small i, acute accent -->
  contents:
  - '<!ENTITY iacute CDATA "&#237;" -- small i, acute accent -->

    '
- title: <!ENTITY icirc  CDATA "&#238;" -- small i, circumflex accent -->
  contents:
  - '<!ENTITY icirc  CDATA "&#238;" -- small i, circumflex accent -->

    '
- title: <!ENTITY igrave CDATA "&#236;" -- small i, grave accent -->
  contents:
  - '<!ENTITY igrave CDATA "&#236;" -- small i, grave accent -->

    '
- title: <!ENTITY iuml   CDATA "&#239;" -- small i, dieresis or umlaut mark -->
  contents:
  - '<!ENTITY iuml   CDATA "&#239;" -- small i, dieresis or umlaut mark -->

    '
- title: <!ENTITY ntilde CDATA "&#241;" -- small n, tilde -->
  contents:
  - '<!ENTITY ntilde CDATA "&#241;" -- small n, tilde -->

    '
- title: <!ENTITY oacute CDATA "&#243;" -- small o, acute accent -->
  contents:
  - '<!ENTITY oacute CDATA "&#243;" -- small o, acute accent -->

    '
- title: <!ENTITY ocirc  CDATA "&#244;" -- small o, circumflex accent -->
  contents:
  - '<!ENTITY ocirc  CDATA "&#244;" -- small o, circumflex accent -->

    '
- title: <!ENTITY ograve CDATA "&#242;" -- small o, grave accent -->
  contents:
  - '<!ENTITY ograve CDATA "&#242;" -- small o, grave accent -->

    '
- title: <!ENTITY oslash CDATA "&#248;" -- small o, slash -->
  contents:
  - '<!ENTITY oslash CDATA "&#248;" -- small o, slash -->

    '
- title: <!ENTITY otilde CDATA "&#245;" -- small o, tilde -->
  contents:
  - '<!ENTITY otilde CDATA "&#245;" -- small o, tilde -->

    '
- title: <!ENTITY ouml   CDATA "&#246;" -- small o, dieresis or umlaut mark -->
  contents:
  - '<!ENTITY ouml   CDATA "&#246;" -- small o, dieresis or umlaut mark -->

    '
- title: <!ENTITY szlig  CDATA "&#223;" -- small sharp s, German (sz ligature)->
  contents:
  - '<!ENTITY szlig  CDATA "&#223;" -- small sharp s, German (sz ligature)->

    '
- title: <!ENTITY thorn  CDATA "&#254;" -- small thorn, Icelandic -->
  contents:
  - '<!ENTITY thorn  CDATA "&#254;" -- small thorn, Icelandic -->

    '
- title: <!ENTITY uacute CDATA "&#250;" -- small u, acute accent -->
  contents:
  - '<!ENTITY uacute CDATA "&#250;" -- small u, acute accent -->

    '
- title: <!ENTITY ucirc  CDATA "&#251;" -- small u, circumflex accent -->
  contents:
  - '<!ENTITY ucirc  CDATA "&#251;" -- small u, circumflex accent -->

    '
- title: <!ENTITY ugrave CDATA "&#249;" -- small u, grave accent -->
  contents:
  - '<!ENTITY ugrave CDATA "&#249;" -- small u, grave accent -->

    '
- title: <!ENTITY uuml   CDATA "&#252;" -- small u, dieresis or umlaut mark -->
  contents:
  - '<!ENTITY uuml   CDATA "&#252;" -- small u, dieresis or umlaut mark -->

    '
- title: <!ENTITY yacute CDATA "&#253;" -- small y, acute accent -->
  contents:
  - '<!ENTITY yacute CDATA "&#253;" -- small y, acute accent -->

    '
- title: <!ENTITY yuml   CDATA "&#255;" -- small y, dieresis or umlaut mark -->
  contents:
  - '<!ENTITY yuml   CDATA "&#255;" -- small y, dieresis or umlaut mark -->

    '
- title: 10. Security Considerations
  contents:
  - "10. Security Considerations\n   Anchors, embedded images, and all other elements\
    \ which contain URIs\n   as parameters may cause the URI to be dereferenced in\
    \ response to\n   user input. In this case, the security considerations of [URL]\
    \ apply.\n   The widely deployed methods for submitting forms requests -- HTTP\
    \ and\n   SMTP -- provide little assurance of confidentiality.  Information\n\
    \   providers who request sensitive information via forms -- especially\n   by\
    \ way of the `PASSWORD' type input field (see 8.1.2, \"Input Field:\n   INPUT\"\
    ) -- should be aware and make their users aware of the lack of\n   confidentiality.\n"
- title: 11. References
  contents:
  - "11. References\n    [URI]\n            Berners-Lee, T., \"Universal Resource\
    \ Identifiers in WWW:\n            A Unifying Syntax for the Expression of Names\
    \ and\n            Addresses of Objects on the Network as used in the\n      \
    \      World- Wide Web\",  RFC 1630, CERN, June 1994.\n            <URL:ftp://ds.internic.net/rfc/rfc1630.txt>\n\
    \    [URL]\n            Berners-Lee, T., Masinter, L., and M. McCahill, \"Uniform\n\
    \            Resource Locators (URL)\", RFC 1738, CERN, Xerox PARC,\n        \
    \    University of Minnesota, December 1994.\n            <URL:ftp://ds.internic.net/rfc/rfc1738.txt>\n\
    \    [HTTP]\n            Berners-Lee, T., Fielding, R., and H. Frystyk Nielsen,\n\
    \            \"Hypertext Transfer Protocol - HTTP/1.0\", Work in\n           \
    \ Progress, MIT, UC Irvine, CERN, March 1995.\n    [MIME]\n            Borenstein,\
    \ N., and N. Freed. \"MIME (Multipurpose\n            Internet Mail Extensions)\
    \ Part One: Mechanisms for\n            Specifying and Describing the Format of\
    \ Internet Message\n            Bodies\", RFC 1521, Bellcore, Innosoft, September\
    \ 1993.\n            <URL:ftp://ds.internic.net/rfc/rfc1521.txt>\n    [RELURL]\n\
    \            Fielding, R., \"Relative Uniform Resource Locators\", RFC\n     \
    \       1808, June 1995\n            <URL:ftp://ds.internic.net/rfc/rfc1808.txt>\n\
    \    [GOLD90]\n            Goldfarb, C., \"The SGML Handbook\", Y. Rubinsky, Ed.,\n\
    \            Oxford University Press, 1990.\n    [DEXTER]\n            Frank Halasz\
    \ and Mayer Schwartz, \"The Dexter Hypertext\n            Reference Model\", Communications\
    \ of the ACM, pp.\n            30-39, vol. 37 no. 2, Feb 1994.\n    [IMEDIA]\n\
    \            Postel, J., \"Media Type Registration Procedure\",\n            RFC\
    \ 1590, USC/Information Sciences Institute, March 1994.\n            <URL:ftp://ds.internic.net/rfc/rfc1590.txt>\n\
    \    [IANA]\n            Reynolds, J., and J. Postel, \"Assigned Numbers\", STD\
    \ 2,\n            RFC 1700, USC/Information Sciecnes Institute, October\n    \
    \        1994.  <URL:ftp://ds.internic.net/rfc/rfc1700.txt>\n    [SQ91]\n    \
    \        SoftQuad. \"The SGML Primer\", 3rd ed., SoftQuad Inc.,\n            1991.\
    \ <URL:http://www.sq.com/>\n    [ISO-646]\n            ISO/IEC 646:1991 Information\
    \ technology -- ISO 7-bit\n            coded character set for information interchange\n\
    \            <URL:http://www.iso.ch/cate/d4777.html>\n    [ISO-10646]\n      \
    \      ISO/IEC 10646-1:1993 Information technology -- Universal\n            Multiple-Octet\
    \ Coded Character Set (UCS) -- Part 1:\n            Architecture and Basic Multilingual\
    \ Plane\n            <URL:http://www.iso.ch/cate/d18741.html>\n    [ISO-8859-1]\n\
    \            ISO 8859. International Standard -- Information\n            Processing\
    \ -- 8-bit Single-Byte Coded Graphic Character\n            Sets -- Part 1: Latin\
    \ Alphabet No. 1, ISO 8859-1:1987.\n            <URL:http://www.iso.ch/cate/d16338.html>\n\
    \    [SGML]\n            ISO 8879. Information Processing -- Text and Office\n\
    \            Systems - Standard Generalized Markup Language (SGML),\n        \
    \    1986. <URL:http://www.iso.ch/cate/d16387.html>\n"
- title: 12. Acknowledgments
  contents:
  - "12. Acknowledgments\n   The HTML document type was designed by Tim Berners-Lee\
    \ at CERN as\n   part of the 1990 World Wide Web project. In 1992, Dan Connolly\
    \ wrote\n   the HTML Document Type Definition (DTD) and a brief HTML\n   specification.\n\
    \   Since 1993, a wide variety of Internet participants have contributed\n   to\
    \ the evolution of HTML, which has included the addition of in-line\n   images\
    \ introduced by the NCSA Mosaic software for WWW. Dave Raggett\n   played an important\
    \ role in deriving the forms material from the\n   HTML+ specification.\n   Dan\
    \ Connolly and Karen Olson Muldrow rewrote the HTML Specification\n   in 1994.\
    \ The document was then edited by the HTML working group as a\n   whole, with\
    \ updates being made by Eric Schieler, Mike Knezovich, and\n   Eric W. Sink at\
    \ Spyglass, Inc.  Finally, Roy Fielding restructured\n   the entire draft into\
    \ its current form.\n   Special thanks to the many active participants in the\
    \ HTML working\n   group, too numerous to list individually, without whom there\
    \ would be\n   no standards process and no standard. That this document approaches\n\
    \   its objective of carefully converging a description of current\n   practice\
    \ and formalization of HTML's relationship to SGML is a\n   tribute to their effort.\n"
- title: 12.1. Authors' Addresses
  contents:
  - "12.1. Authors' Addresses\n   Tim Berners-Lee\n   Director, W3 Consortium\n  \
    \ MIT Laboratory for Computer Science\n   545 Technology Square\n   Cambridge,\
    \ MA 02139, U.S.A.\n   Phone: +1 (617) 253 9670\n   Fax: +1 (617) 258 8682\n \
    \  EMail: timbl@w3.org\n   Daniel W. Connolly\n   Research Technical Staff, W3\
    \ Consortium\n   MIT Laboratory for Computer Science\n   545 Technology Square\n\
    \   Cambridge, MA 02139, U.S.A.\n   Phone: +1 (617) 258 8682\n   EMail: connolly@w3.org\n\
    \   URI: http://www.w3.org/hypertext/WWW/People/Connolly/\n"
- title: 13. The HTML Coded Character Set
  contents:
  - "13. The HTML Coded Character Set\n   This list details the code positions and\
    \ characters of the HTML\n   document character set, specified in 9.5, \"SGML\
    \ Declaration for\n   HTML\". This coded character set is based on [ISO-8859-1].\n\
    \    REFERENCE       DESCRIPTION\n    --------------  -----------\n    &#00; -\
    \ &#08;   Unused\n    &#09;           Horizontal tab\n    &#10;           Line\
    \ feed\n    &#11; - &#12;   Unused\n    &#13;           Carriage Return\n    &#14;\
    \ - &#31;   Unused\n    &#32;           Space\n    &#33;           Exclamation\
    \ mark\n    &#34;           Quotation mark\n    &#35;           Number sign\n\
    \    &#36;           Dollar sign\n    &#37;           Percent sign\n    &#38;\
    \           Ampersand\n    &#39;           Apostrophe\n    &#40;           Left\
    \ parenthesis\n    &#41;           Right parenthesis\n    &#42;           Asterisk\n\
    \    &#43;           Plus sign\n    &#44;           Comma\n    &#45;         \
    \  Hyphen\n    &#46;           Period (fullstop)\n    &#47;           Solidus\
    \ (slash)\n    &#48; - &#57;   Digits 0-9\n    &#58;           Colon\n    &#59;\
    \           Semi-colon\n    &#60;           Less than\n    &#61;           Equals\
    \ sign\n    &#62;           Greater than\n    &#63;           Question mark\n\
    \    &#64;           Commercial at\n    &#65; - &#90;   Letters A-Z\n    &#91;\
    \           Left square bracket\n    &#92;           Reverse solidus (backslash)\n\
    \    &#93;           Right square bracket\n    &#94;           Caret\n    &#95;\
    \           Horizontal bar (underscore)\n    &#96;           Acute accent\n  \
    \  &#97; - &#122;  Letters a-z\n    &#123;          Left curly brace\n    &#124;\
    \          Vertical bar\n    &#125;          Right curly brace\n    &#126;   \
    \       Tilde\n    &#127; - &#159; Unused\n    &#160;          Non-breaking Space\n\
    \    &#161;          Inverted exclamation\n    &#162;          Cent sign\n   \
    \ &#163;          Pound sterling\n    &#164;          General currency sign\n\
    \    &#165;          Yen sign\n    &#166;          Broken vertical bar\n    &#167;\
    \          Section sign\n    &#168;          Umlaut (dieresis)\n    &#169;   \
    \       Copyright\n    &#170;          Feminine ordinal\n    &#171;          Left\
    \ angle quote, guillemotleft\n    &#172;          Not sign\n    &#173;       \
    \   Soft hyphen\n    &#174;          Registered trademark\n    &#175;        \
    \  Macron accent\n    &#176;          Degree sign\n    &#177;          Plus or\
    \ minus\n    &#178;          Superscript two\n    &#179;          Superscript\
    \ three\n    &#180;          Acute accent\n    &#181;          Micro sign\n  \
    \  &#182;          Paragraph sign\n    &#183;          Middle dot\n    &#184;\
    \          Cedilla\n    &#185;          Superscript one\n    &#186;          Masculine\
    \ ordinal\n    &#187;          Right angle quote, guillemotright\n    &#188; \
    \         Fraction one-fourth\n    &#189;          Fraction one-half\n    &#190;\
    \          Fraction three-fourths\n    &#191;          Inverted question mark\n\
    \    &#192;          Capital A, grave accent\n    &#193;          Capital A, acute\
    \ accent\n    &#194;          Capital A, circumflex accent\n    &#195;       \
    \   Capital A, tilde\n    &#196;          Capital A, dieresis or umlaut mark\n\
    \    &#197;          Capital A, ring\n    &#198;          Capital AE dipthong\
    \ (ligature)\n    &#199;          Capital C, cedilla\n    &#200;          Capital\
    \ E, grave accent\n    &#201;          Capital E, acute accent\n    &#202;   \
    \       Capital E, circumflex accent\n    &#203;          Capital E, dieresis\
    \ or umlaut mark\n    &#204;          Capital I, grave accent\n    &#205;    \
    \      Capital I, acute accent\n    &#206;          Capital I, circumflex accent\n\
    \    &#207;          Capital I, dieresis or umlaut mark\n    &#208;          Capital\
    \ Eth, Icelandic\n    &#209;          Capital N, tilde\n    &#210;          Capital\
    \ O, grave accent\n    &#211;          Capital O, acute accent\n    &#212;   \
    \       Capital O, circumflex accent\n    &#213;          Capital O, tilde\n \
    \   &#214;          Capital O, dieresis or umlaut mark\n    &#215;          Multiply\
    \ sign\n    &#216;          Capital O, slash\n    &#217;          Capital U, grave\
    \ accent\n    &#218;          Capital U, acute accent\n    &#219;          Capital\
    \ U, circumflex accent\n    &#220;          Capital U, dieresis or umlaut mark\n\
    \    &#221;          Capital Y, acute accent\n    &#222;          Capital THORN,\
    \ Icelandic\n    &#223;          Small sharp s, German (sz ligature)\n    &#224;\
    \          Small a, grave accent\n    &#225;          Small a, acute accent\n\
    \    &#226;          Small a, circumflex accent\n    &#227;          Small a,\
    \ tilde\n    &#228;          Small a, dieresis or umlaut mark\n    &#229;    \
    \      Small a, ring\n    &#230;          Small ae dipthong (ligature)\n    &#231;\
    \          Small c, cedilla\n    &#232;          Small e, grave accent\n    &#233;\
    \          Small e, acute accent\n    &#234;          Small e, circumflex accent\n\
    \    &#235;          Small e, dieresis or umlaut mark\n    &#236;          Small\
    \ i, grave accent\n    &#237;          Small i, acute accent\n    &#238;     \
    \     Small i, circumflex accent\n    &#239;          Small i, dieresis or umlaut\
    \ mark\n    &#240;          Small eth, Icelandic\n    &#241;          Small n,\
    \ tilde\n    &#242;          Small o, grave accent\n    &#243;          Small\
    \ o, acute accent\n    &#244;          Small o, circumflex accent\n    &#245;\
    \          Small o, tilde\n    &#246;          Small o, dieresis or umlaut mark\n\
    \    &#247;          Division sign\n    &#248;          Small o, slash\n    &#249;\
    \          Small u, grave accent\n    &#250;          Small u, acute accent\n\
    \    &#251;          Small u, circumflex accent\n    &#252;          Small u,\
    \ dieresis or umlaut mark\n    &#253;          Small y, acute accent\n    &#254;\
    \          Small thorn, Icelandic\n    &#255;          Small y, dieresis or umlaut\
    \ mark\n"
- title: 14. Proposed Entities
  contents:
  - "14. Proposed Entities\n   The HTML DTD references the \"Added Latin 1\" entity\
    \ set, which only\n   supplies named entities for a subset of the non-ASCII characters\
    \ in\n   [ISO-8859-1], namely the accented characters. The following entities\n\
    \   should be supported so that all ISO 8859-1 characters may only be\n   referenced\
    \ symbolically. The names for these entities are taken from\n   the appendixes\
    \ of [SGML].\n    <!ENTITY nbsp   CDATA \"&#160;\" -- no-break space -->\n   \
    \ <!ENTITY iexcl  CDATA \"&#161;\" -- inverted exclamation mark -->\n    <!ENTITY\
    \ cent   CDATA \"&#162;\" -- cent sign -->\n    <!ENTITY pound  CDATA \"&#163;\"\
    \ -- pound sterling sign -->\n    <!ENTITY curren CDATA \"&#164;\" -- general\
    \ currency sign -->\n    <!ENTITY yen    CDATA \"&#165;\" -- yen sign -->\n  \
    \  <!ENTITY brvbar CDATA \"&#166;\" -- broken (vertical) bar -->\n    <!ENTITY\
    \ sect   CDATA \"&#167;\" -- section sign -->\n    <!ENTITY uml    CDATA \"&#168;\"\
    \ -- umlaut (dieresis) -->\n    <!ENTITY copy   CDATA \"&#169;\" -- copyright\
    \ sign -->\n    <!ENTITY ordf   CDATA \"&#170;\" -- ordinal indicator, feminine\
    \ -->\n    <!ENTITY laquo  CDATA \"&#171;\" -- angle quotation mark, left -->\n\
    \    <!ENTITY not    CDATA \"&#172;\" -- not sign -->\n    <!ENTITY shy    CDATA\
    \ \"&#173;\" -- soft hyphen -->\n    <!ENTITY reg    CDATA \"&#174;\" -- registered\
    \ sign -->\n    <!ENTITY macr   CDATA \"&#175;\" -- macron -->\n    <!ENTITY deg\
    \    CDATA \"&#176;\" -- degree sign -->\n    <!ENTITY plusmn CDATA \"&#177;\"\
    \ -- plus-or-minus sign -->\n    <!ENTITY sup2   CDATA \"&#178;\" -- superscript\
    \ two -->\n    <!ENTITY sup3   CDATA \"&#179;\" -- superscript three -->\n   \
    \ <!ENTITY acute  CDATA \"&#180;\" -- acute accent -->\n    <!ENTITY micro  CDATA\
    \ \"&#181;\" -- micro sign -->\n    <!ENTITY para   CDATA \"&#182;\" -- pilcrow\
    \ (paragraph sign) -->\n    <!ENTITY middot CDATA \"&#183;\" -- middle dot -->\n\
    \    <!ENTITY cedil  CDATA \"&#184;\" -- cedilla -->\n    <!ENTITY sup1   CDATA\
    \ \"&#185;\" -- superscript one -->\n    <!ENTITY ordm   CDATA \"&#186;\" -- ordinal\
    \ indicator, masculine -->\n    <!ENTITY raquo  CDATA \"&#187;\" -- angle quotation\
    \ mark, right -->\n    <!ENTITY frac14 CDATA \"&#188;\" -- fraction one-quarter\
    \ -->\n    <!ENTITY frac12 CDATA \"&#189;\" -- fraction one-half -->\n    <!ENTITY\
    \ frac34 CDATA \"&#190;\" -- fraction three-quarters -->\n    <!ENTITY iquest\
    \ CDATA \"&#191;\" -- inverted question mark -->\n    <!ENTITY Agrave CDATA \"\
    &#192;\" -- capital A, grave accent -->\n    <!ENTITY Aacute CDATA \"&#193;\"\
    \ -- capital A, acute accent -->\n    <!ENTITY Acirc  CDATA \"&#194;\" -- capital\
    \ A, circumflex accent -->\n    <!ENTITY Atilde CDATA \"&#195;\" -- capital A,\
    \ tilde -->\n    <!ENTITY Auml   CDATA \"&#196;\" -- capital A, dieresis or umlaut\
    \ mark -->\n    <!ENTITY Aring  CDATA \"&#197;\" -- capital A, ring -->\n    <!ENTITY\
    \ AElig  CDATA \"&#198;\" -- capital AE diphthong (ligature) -->\n    <!ENTITY\
    \ Ccedil CDATA \"&#199;\" -- capital C, cedilla -->\n    <!ENTITY Egrave CDATA\
    \ \"&#200;\" -- capital E, grave accent -->\n    <!ENTITY Eacute CDATA \"&#201;\"\
    \ -- capital E, acute accent -->\n    <!ENTITY Ecirc  CDATA \"&#202;\" -- capital\
    \ E, circumflex accent -->\n    <!ENTITY Euml   CDATA \"&#203;\" -- capital E,\
    \ dieresis or umlaut mark -->\n    <!ENTITY Igrave CDATA \"&#204;\" -- capital\
    \ I, grave accent -->\n    <!ENTITY Iacute CDATA \"&#205;\" -- capital I, acute\
    \ accent -->\n    <!ENTITY Icirc  CDATA \"&#206;\" -- capital I, circumflex accent\
    \ -->\n    <!ENTITY Iuml   CDATA \"&#207;\" -- capital I, dieresis or umlaut mark\
    \ -->\n    <!ENTITY ETH    CDATA \"&#208;\" -- capital Eth, Icelandic -->\n  \
    \  <!ENTITY Ntilde CDATA \"&#209;\" -- capital N, tilde -->\n    <!ENTITY Ograve\
    \ CDATA \"&#210;\" -- capital O, grave accent -->\n    <!ENTITY Oacute CDATA \"\
    &#211;\" -- capital O, acute accent -->\n    <!ENTITY Ocirc  CDATA \"&#212;\"\
    \ -- capital O, circumflex accent -->\n    <!ENTITY Otilde CDATA \"&#213;\" --\
    \ capital O, tilde -->\n    <!ENTITY Ouml   CDATA \"&#214;\" -- capital O, dieresis\
    \ or umlaut mark -->\n    <!ENTITY times  CDATA \"&#215;\" -- multiply sign -->\n\
    \    <!ENTITY Oslash CDATA \"&#216;\" -- capital O, slash -->\n    <!ENTITY Ugrave\
    \ CDATA \"&#217;\" -- capital U, grave accent -->\n    <!ENTITY Uacute CDATA \"\
    &#218;\" -- capital U, acute accent -->\n    <!ENTITY Ucirc  CDATA \"&#219;\"\
    \ -- capital U, circumflex accent -->\n    <!ENTITY Uuml   CDATA \"&#220;\" --\
    \ capital U, dieresis or umlaut mark -->\n    <!ENTITY Yacute CDATA \"&#221;\"\
    \ -- capital Y, acute accent -->\n    <!ENTITY THORN  CDATA \"&#222;\" -- capital\
    \ THORN, Icelandic -->\n    <!ENTITY szlig  CDATA \"&#223;\" -- small sharp s,\
    \ German (sz ligature) -->\n    <!ENTITY agrave CDATA \"&#224;\" -- small a, grave\
    \ accent -->\n    <!ENTITY aacute CDATA \"&#225;\" -- small a, acute accent -->\n\
    \    <!ENTITY acirc  CDATA \"&#226;\" -- small a, circumflex accent -->\n    <!ENTITY\
    \ atilde CDATA \"&#227;\" -- small a, tilde -->\n    <!ENTITY auml   CDATA \"\
    &#228;\" -- small a, dieresis or umlaut mark -->\n    <!ENTITY aring  CDATA \"\
    &#229;\" -- small a, ring -->\n    <!ENTITY aelig  CDATA \"&#230;\" -- small ae\
    \ diphthong (ligature) -->\n    <!ENTITY ccedil CDATA \"&#231;\" -- small c, cedilla\
    \ -->\n    <!ENTITY egrave CDATA \"&#232;\" -- small e, grave accent -->\n   \
    \ <!ENTITY eacute CDATA \"&#233;\" -- small e, acute accent -->\n    <!ENTITY\
    \ ecirc  CDATA \"&#234;\" -- small e, circumflex accent -->\n    <!ENTITY euml\
    \   CDATA \"&#235;\" -- small e, dieresis or umlaut mark -->\n    <!ENTITY igrave\
    \ CDATA \"&#236;\" -- small i, grave accent -->\n    <!ENTITY iacute CDATA \"\
    &#237;\" -- small i, acute accent -->\n    <!ENTITY icirc  CDATA \"&#238;\" --\
    \ small i, circumflex accent -->\n    <!ENTITY iuml   CDATA \"&#239;\" -- small\
    \ i, dieresis or umlaut mark -->\n    <!ENTITY eth    CDATA \"&#240;\" -- small\
    \ eth, Icelandic -->\n    <!ENTITY ntilde CDATA \"&#241;\" -- small n, tilde -->\n\
    \    <!ENTITY ograve CDATA \"&#242;\" -- small o, grave accent -->\n    <!ENTITY\
    \ oacute CDATA \"&#243;\" -- small o, acute accent -->\n    <!ENTITY ocirc  CDATA\
    \ \"&#244;\" -- small o, circumflex accent -->\n    <!ENTITY otilde CDATA \"&#245;\"\
    \ -- small o, tilde -->\n    <!ENTITY ouml   CDATA \"&#246;\" -- small o, dieresis\
    \ or umlaut mark -->\n    <!ENTITY divide CDATA \"&#247;\" -- divide sign -->\n\
    \    <!ENTITY oslash CDATA \"&#248;\" -- small o, slash -->\n    <!ENTITY ugrave\
    \ CDATA \"&#249;\" -- small u, grave accent -->\n    <!ENTITY uacute CDATA \"\
    &#250;\" -- small u, acute accent -->\n    <!ENTITY ucirc  CDATA \"&#251;\" --\
    \ small u, circumflex accent -->\n    <!ENTITY uuml   CDATA \"&#252;\" -- small\
    \ u, dieresis or umlaut mark -->\n    <!ENTITY yacute CDATA \"&#253;\" -- small\
    \ y, acute accent -->\n    <!ENTITY thorn  CDATA \"&#254;\" -- small thorn, Icelandic\
    \ -->\n    <!ENTITY yuml   CDATA \"&#255;\" -- small y, dieresis or umlaut mark\
    \ -->\n"
