- title: __initial_text__
  contents:
  - '                               Proxy-PAR

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   Proxy-PAR is a minimal version of PAR (PNNI Augmented Routing) that\n\
    \   gives ATM-attached devices the ability to interact with PNNI devices\n   without\
    \ the necessity to fully support PAR. Proxy-PAR is designed as\n   a client/server\
    \ interaction, of which the client side is much simpler\n   than the server side\
    \ to allow fast implementation and deployment.\n   The purpose of Proxy-PAR is\
    \ to allow non-ATM devices to use the\n   flooding mechanisms provided by PNNI\
    \ for registration and automatic\n   discovery of services offered by ATM attached\
    \ devices.  The first\n   version of PAR primarily addresses protocols available\
    \ in IPv4. But\n   it also contains a generic interface to access the flooding\
    \ of PNNI.\n   In addition, Proxy-PAR-capable servers provide filtering based\
    \ on VPN\n   IDs [1], IP protocols and address prefixes. This enables, for\n \
    \  instance, routers in a certain VPN running OSPF to find OSPF\n   neighbors\
    \ on the same subnet. The protocol is built using a\n   registration/query approach\
    \ where devices can register their services\n   and query for services and protocols\
    \ registered by other clients.\n"
- title: 1 Introduction
  contents:
  - "1 Introduction\n   In June of 1996, the ATM Forum accepted the \"Proxy-PAR contribution\n\
    \   as minimal subset of PAR\" as a work item of the Routing and\n   Addressing\
    \ (RA) working group, which was previously called the PNNI\n   working group [2].\
    \  The PAR [3] specification provides a detailed\n   description of the protocol\
    \ including state machines and packet\n   formats.\n   The intention of this document\
    \ is to provide general information\n   about Proxy-PAR. For the detailed protocol\
    \ description we refer the\n   reader to [3].\n   Proxy-PAR is a protocol that\
    \ allows various ATM-attached devices (ATM\n   and non-ATM devices) to interact\
    \ with PAR-capable switches to\n   exchange information about non-ATM services\
    \ without executing PAR\n   themselves. The client side is much simpler in terms\
    \ of\n   implementation complexity and memory requirements than a complete PAR\n\
    \   instance. This should allow an easy implementation on existing IP\n   devices\
    \ such as IP routers. Additionally, clients can use Proxy-PAR\n   to register\
    \ various non-ATM services and the protocols they support.\n   The protocol has\
    \ deliberately been omitted from ILMI [4] because of\n   the complexity of PAR\
    \ information passed in the protocol and the fact\n   that it is intended for\
    \ the integration of non-ATM protocols and\n   services only. A device executing\
    \ Proxy-PAR does not necessarily need\n   to execute ILMI or UNI signalling, although\
    \ this will normally be the\n   case.\n   The protocol does not specify how a\
    \ client should make use of the\n   obtained information to establish connectivity.\
    \ For example, OSPF\n   routers finding themselves through Proxy-PAR could establish\
    \ a full\n   mesh of P2P VCs by means of RFC2225 [5], or use RFC1793 [6] to\n\
    \   interact with each other.  LANE [7] or MARS [8] could be used for the\n  \
    \ same purpose. It is expected that the guidelines defining how a\n   certain\
    \ protocol can make use of Proxy-PAR should be produced by the\n   appropriate\
    \ working group or standardization body responsible for the\n   particular protocol.\
    \ An additional RFC [9] describing how to run OSPF\n   together with Proxy-PAR\
    \ is published together with this document.\n   The protocol has the ability to\
    \ provide ATM address resolution for\n   IP-attached devices, but such resolutions\
    \ can also be achieved by\n   other protocols under specification in the IETF,\
    \ e.g. [10]. Again,\n   the main purpose of the protocol is to allow the automatic\
    \ detection\n   of devices over an ATM cloud in a distributed fashion, omitting\
    \ the\n   usual pitfalls of server-based solutions. Last but not least, it\n \
    \  should be mentioned here as well that the protocol complements and\n   coexists\
    \ with the work done in the IETF on server detection via ILMI\n   extensions [11,12,13].\n"
- title: 2 Proxy-PAR Operation and Interaction with PNNI
  contents:
  - "2 Proxy-PAR Operation and Interaction with PNNI\n   The protocol is asymmetric\
    \ and consists of a discovery and\n   query/registration part. The discovery is\
    \ very similar to the\n   existing PNNI Hello protocol and is used to initiate\
    \ and maintain\n   communication between adjacent clients and servers. The registration\n\
    \   and update part execute after a Proxy-PAR adjacency has been\n   established.\
    \ The client can register its own services by sending\n   registration messages\
    \ to the server. The client obtains information\n   it is interested in by sending\
    \ query messages to the server. When the\n   client needs to change its set of\
    \ registered protocols, it has to\n   re-register with the server. The client\
    \ can withdraw all registered\n   services by registering a null set of services.\
    \ It is important to\n   note that the server side does not push new information\
    \ to the\n   client, neither does the server keep any state describing which\n\
    \   information the client received. It is the responsibility of the\n   client\
    \ to update and refresh its information and to discover new\n   clients or update\
    \ its stored information about other clients by\n   issuing queries and registrations\
    \ at appropriate time intervals. This\n   simplifies the protocol, but assumes\
    \ that the client will not store\n   and request large amounts of data. The main\
    \ responsibility of the\n   server is to flood the registered information through\
    \ the PNNI cloud\n   such that potential clients can discover each other. The\
    \ Proxy-PAR\n   server side also provides filtering functions to support VPNs\
    \ and IP\n   subnetting. It is assumed that services advertised by Proxy-PAR will\n\
    \   be advertised by a relatively small number of clients and be fairly\n   stable,\
    \ so that polling and refreshing intervals can be relatively\n   long.\n   The\
    \ Proxy-PAR extensions rely on appropriate flooding of information\n   by the\
    \ PNNI protocol. When the client side registers or re-registers\n   a new service\
    \ through Proxy-PAR, it associates an abstract membership\n   scope with the service.\
    \ The server side maps this membership scope\n   into a PNNI routing level that\
    \ restricts the flooding. This allows\n   changes of the PNNI routing level without\
    \ reconfiguration of the\n   client. In addition, the server can set up the mapping\
    \ table such\n   that a client can flood information only to a certain level.\
    \ Nodes\n   within the PNNI network take into account the associated scope of\
    \ the\n   information when it is flooded.  It is thus possible to exploit the\n\
    \   PNNI routing hierarchy by announcing different protocols on different\n  \
    \ levels of the hierarchy, e.g. OSPF could be run inside certain peer\n   groups,\
    \ whereas BGP could be run between the set of peer -groups\n   running OSPF. Such\
    \ an alignment or mapping of non-ATM protocols to\n   the PNNI hierarchy can drastically\
    \ enhance the scalability and\n   flexibility of Proxy-PAR service. Figure 1 helps\
    \ visualize such a\n   scenario. For this topology the following registrations\
    \ are issued:\n    +-+\n    | | PNNI peer group    # PPAR capable  @ PNNI capable\
    \  * Router\n    +-+                      switch          switch\n           \
    \        Level 40\n                   +---------------------------+\n        \
    \           |                           |\n                   |              \
    \             |\n                   |      @ ---- @ ---- @      |\n          \
    \         |      |             |      |\n                   +----- | -----------\
    \ | -----+\n                          |             |\n           Level 60   \
    \    |             |\n           +------------- | ---+    +-- | --------------+\n\
    \           |              |    |    |   |               |\n      R1* ------#-P1------@\
    \    |    |   @---------P3-#------- * R3\n           |              |    |   \
    \ |   |               |\n      R2* ------#-P2------+    |    |   +---------P4-#-------\
    \ * R4\n           |                   |    |                   |\n          \
    \ +-------------------+    +-------------------+\n       Figure 1: OSPF and BGP\
    \ scalability with Proxy-PAR autodetection\n                               (ATM\
    \ topology).\n      1. R1 registers OSPF protocol as running on the IP interface\n\
    \         1.1.1.1 and subnet 1.1.1/24 with scope 60\n      2. R2 registers OSPF\
    \ protocol as running on the IP interface\n         1.1.1.2 and subnet 1.1.1/24\
    \ with scope 60\n      3. R3 registers OSPF protocol as running on the IP interface\n\
    \         1.1.2.1 and subnet 1.1.2/24 with scope 60\n      4. R4 registers OSPF\
    \ protocol as running on the IP interface\n         1.1.2.2 and subnet 1.1.2/24\
    \ with scope 60\n   and\n      1. R1 registers BGP4 protocol as running on the\
    \ IP interface\n         1.1.3.1 and subnet 1.1/16 with scope 40 within AS101\n\
    \      2. R3 registers BGP4 protocol as running on the IP interface\n        \
    \ 1.1.3.2 and subnet 1.1/16 with scope 40 within AS100\n   For simplicity the\
    \ real PNNI routing level have been specified, which\n   are 60 and 40. Instead\
    \ of these two values the clients would use an\n   abstract membership scope \"\
    local\" and \"local+1\". In addition, all\n   registered information would be\
    \ part of the same VPN ID.\n   Table 1 describes the resulting distribution and\
    \ visibility of\n   registrations and whether the routers not only see but also\
    \ utilize\n   the received information. After convergence of protocols and the\n\
    \   building of necessary adjacencies and sessions, the overlying IP\n   topology\
    \ is illustrated in Figure 2.\n                     AS101         DMZ      AS100\n\
    \                   #########                ##########\n                    \
    \       #                #\n               |           #   |            #    \
    \        |\n               +-- R1 ---------+            #       R4 --+\n     \
    \          |           #   |            #            |\n               |     \
    \      #   | BGP4 on    #    OSPF on |\n               | OSPF on   #   | subnet\
    \     #     subnet |\n               | subnet    #   | 1.1/16     #   1.1.2/24\
    \ |\n               | 1.1.1/24  #   |            #            |\n            \
    \   |           #   +------------------- R3 --+\n               +-- R2      #\
    \   |            #            |\n               |           #                #\n\
    \                   #########                ##########\n       Figure 2: OSPF\
    \ and BGP scalability with Proxy-PAR autodetection\n                         \
    \       (IP topology).\n   Expressing the above statements differently, one can\
    \ say that if the\n   scope of the Proxy-PAR information indicates that a distribution\n\
    \   beyond the boundaries of the peer group is necessary, the leader of a\n  \
    \ peer group collects such information and propagates it into a higher\n   layer\
    \ of the PNNI hierarchy. As no assumptions except scope values\n   can normally\
    \ be made about the information distributed (e.g. IP\n   addresses bound to AESAs\
    \ are not assumed to be aligned with them in\n   any respect), such information\
    \ cannot be summarized. This makes a\n   careful handling of scopes necessary\
    \ to preserve the scalability of\n   the approach as described above.\n      \
    \                 Reg#   1. 2. 3. 4. 5. 6.\n                      Router#\n  \
    \                  -----------------------------\n                      R1   \
    \   R  U        R  U\n                      R2      U  R        Q  Q\n       \
    \               R3            R  U  R  U\n                      R4           \
    \ U  R  Q  Q\n                        R registered\n                        Q\
    \ seen through query\n                        U used (implies Q)\n        Table\
    \ 1: Flooding scopes of Proxy-PAR registrations.\n"
- title: 3 Proxy-PAR Protocols
  contents:
  - '3 Proxy-PAR Protocols

    '
- title: 3.1 Hello Protocol
  contents:
  - "3.1 Hello Protocol\n   The Proxy-PAR Hello Protocol is closely related to the\
    \ Hello protocol\n   specified in [2]. It uses the same packet header and version\n\
    \   negotiation methods. For the sake of simplicity, states that are\n   irrelevant\
    \ to Proxy-PAR have been removed from the original PNNI\n   Hello protocol. The\
    \ purpose of the Proxy-PAR Hello protocol is to\n   establish and maintain a Proxy-PAR\
    \ adjacency between the client and\n   server that supports the exchange of registration\
    \ and query messages.\n   If the protocol is executed across multiple, parallel\
    \ links between\n   the same server and client pair, individual registration and\
    \ query\n   sessions are associated with a specific link. It is the\n   responsibility\
    \ of the client and server to assign registration and\n   query sessions to the\
    \ various communication instances. Proxy-PAR can\n   be run in the same granularity\
    \ as ILMI [4] to support virtual links\n   and VP tunnels.\n   In addition to\
    \ the PNNI Hello, the Proxy-PAR Hellos travelling from\n   the server to the client\
    \ inform the client about the lifetime the\n   server assigns to registered information.\
    \ The client has to retrieve\n   this interval from the Hello packet and set its\
    \ refresh interval to a\n   value below the obtained time interval in order to\
    \ avoid the aging\n   out of registered information by the server.\n"
- title: 3.2 Registration/Query Protocol
  contents:
  - "3.2 Registration/Query Protocol\n   The registration and query protocols enable\
    \ the client to announce\n   and learn about protocols supported by the clients.\
    \ All\n   query/register operations are initiated by the clients. The server\n\
    \   never tries to push information to the client. It is the client's\n   responsibility\
    \ to register and refresh the set of protocols supported\n   and to re-register\
    \ them when changes occur. In the same sense, the\n   client must query the information\
    \ from the server at appropriate time\n   intervals if it wishes to obtain the\
    \ latest information. It is\n   important to note that neither client nor server\
    \ is supposed to cache\n   any state information about the information stored\
    \ by the other side.\n   Registered information is associated with an ATM address\
    \ and scope\n   inside the PNNI hierarchy. From the IP point of view, all information\n\
    \   is associated with a VPN ID, IP address, subnet mask, and IP protocol\n  \
    \ family. In this context, each VPN refers to a completely separated IP\n   address\
    \ space. For example <A, 194.194.1.01, 255.255.255.0, OSPF>\n   describes an OSPF\
    \ interface in VPN A. In addition to the IP scope\n   further parameters can be\
    \ registered that contain more detailed\n   information about the protocol itself.\
    \ In the above example this\n   would be OSPF-specific information such as the\
    \ area ID or router\n   priority.  However, Proxy-PAR server takes only the ATM\
    \ and IP-\n   specific information into account when retrieving information that\n\
    \   was queried. Protocol specific information is never looked at by a\n   Proxy-PAR\
    \ server.\n"
- title: 3.2.1 Registration Protocol
  contents:
  - "3.2.1 Registration Protocol\n   The registration protocol enables a client to\
    \ register the protocols\n   and services it supports. All protocols are associated\
    \ with a\n   specific AESA and membership scope in the PNNI hierarchy.  As the\n\
    \   default scope, implementations should choose the local scope of the\n   PNNI\
    \ peer group. In this way, manual configuration can be avoided\n   unless information\
    \ has to cross PNNI peer group boundaries. PNNI is\n   responsible for the correct\
    \ flooding either in the local peer group\n   or across the hierarchy.\n   The\
    \ registration protocol is aligned with the standard initial\n   topology database\
    \ exchange protocol used in link-state routing\n   protocols as far as possible.\
    \ It uses a window size of one. A single\n   information element is registered\
    \ at a time and must be acknowledged\n   before a new registration packet can\
    \ be sent. The protocol uses '\n   initialization' and 'more' bits in the same\
    \ manner PNNI and OSPF do.\n   Any registration on a link unconditionally overwrites\
    \ all\n   registration data previously received on the same link. By means of\
    \ a\n   return code the server indicates to the client whether the\n   registration\
    \ was successful.\n   Apart form the IP-related information, the protocol also\
    \ offers a\n   generic interface to the PNNI flooding. By means of so-called System\n\
    \   Capabilities Information Groups other information can be distributed\n   that\
    \ can be used for proprietary or experimental implementations.\n"
- title: 3.2.2 Query Protocol
  contents:
  - "3.2.2 Query Protocol\n   The client uses the query protocol to obtain information\
    \ about\n   services registered by other clients. The client requests services\n\
    \   registered within a specific membership scope, VPN and IP address\n   prefix.\
    \ It is always the client's task to request information, the\n   server never\
    \ makes an attempt to push information to the client. If\n   the client needs\
    \ to filter the returned data based on service-\n   specific information, such\
    \ as BGP AS, it must parse and interpret the\n   received information. The server\
    \ never looks beyond the IP scope.\n   The more generic interface to the flooding\
    \ is supported in a similar\n   manner as the registration protocol.\n"
- title: 4 Supported Protocols
  contents:
  - "4 Supported Protocols\n   Currently the protocols indicated in Table 2 have been\
    \ included.\n   Furthermore, for protocols marked 'yes', additional information\
    \ has\n   been specified that is beneficial for their operation. Many of the\n\
    \   protocols do not need additional information; it is sufficient to\n   know\
    \ they are supported and to which addresses they are bound.\n   To include other\
    \ information in an experimental manner the generic\n   information element can\
    \ be used to carry such information.\n"
- title: 5 VPN Support
  contents:
  - "5 VPN Support\n   To implement virtual private networks all information distributed\
    \ via\n   PAR can be scoped under a VPN ID [1]. Based on this ID, individual\n\
    \   VPNs can be separated. Inside a certain VPN further distinctions can\n   be\
    \ made according to IP-address-related information and/or protocol\n   type.\n\
    \   In most cases the best VPN support can be provided when Proxy-PAR is\n   used\
    \ between the client and server because in this way it is possible\n   to hide\
    \ the real PNNI topology from the client. The PAR capable\n   server translates\
    \ from the abstract membership scope into the real\n   PNNI routing level. In\
    \ this way the real PNNI topology is hidden from\n   the client and the server\
    \ can apply restrictions in the PNNI scope.\n   The server can for instance have\
    \ a mapping such that the membership\n   scope \"global\" is mapped to the highest\
    \ level peer group to which a\n   particular VPN has access. Thus the membership\
    \ scopes can be seen as\n   hierarchical structuring inside a certain VPN. With\
    \ such mappings a\n   network provider can also change the mapping without having\
    \ to\n   reconfigure the clients.\n   For more secure VPN implementations it will\
    \ also be necessary to\n   implement VPN ID filters on the server side. In this\
    \ way a client can\n   be restricted to a certain set (typically one) of VPN IDs.\
    \  The\n   server will then allow queries and registrations only from the\n  \
    \ clients that are in the allowed VPNs. In this way it is possible to\n   avoid\
    \ an attached client from finding devices that are outside of its\n   own VPN.\
    \  There is even room for further restriction in terms of not\n   allowing wildcard\
    \ queries by a client. In terms of security, some of\n   the protocols have their\
    \ own methods, so PAR is only used for the\n   discovery of the counterparts.\
    \ For instance OSPF has an\n   authentication that can be used during the OSPF\
    \ operation. Hence even\n   in the case where two wrong partners find each other,\
    \ they will not\n   communicate because they will not be able to authenticate\
    \ each other.\n                       Protocol    Additional Info\n          \
    \           -------------------------------\n                       OSPF     \
    \         yes\n                       RIP\n                       RIPv2\n    \
    \                   BGP3\n                       BGP4              yes\n     \
    \                  EGP\n                       IDPR\n                       MOSPF\
    \             yes\n                       DVMRP\n                       CBT\n\
    \                       PIM-SM\n                       IGRP\n                \
    \       IS-IS\n                       ES-IS\n                       ICMP\n   \
    \                    GGP\n                       BBN SPF IGP\n               \
    \        PIM-DM\n                       MARS\n                       NHRP\n  \
    \                     ATMARP\n                       DHCP\n                  \
    \     DNS               yes\n   Table 2: Additional protocol information carried\
    \ in PAR and PPAR.\n   The VPN ID used by PAR and Proxy-PAR is aligned with the\
    \ VPN ID used\n   by other protocols from the ATM Forum and IETF. The VPN ID is\n\
    \   structured into two parts, namely the 3-byte-long OUI plus a 4-byte\n   index.\n"
- title: 6 Interoperation with ILMI based Server Discovery
  contents:
  - "6 Interoperation with ILMI based Server Discovery\n   PAR can be used to complement\
    \ the server discovery via ILMI as\n   specified in [11,12,13]. It can be used\
    \ to provide the flooding of\n   information across the PNNI network. For this\
    \ purpose a server has to\n   register with a PAR-capable device.  This can be\
    \ achieved via Proxy-\n   PAR or a direct PAR interaction.  Manual configuration\
    \ would also be\n   possible. For instance the ATMARP server could register its\
    \ service\n   via Proxy-PAR. A direct interaction with PAR will be required in\n\
    \   order to provide an appropriate flooding scope.\n   A PAR-capable device that\
    \ has the additional MIB variables in the\n   Service Registry MIB can set these\
    \ variables when getting information\n   via PAR. All required information is\
    \ either contained in PAR or is\n   static, such as the IP version.\n"
- title: 7 Security Consideration
  contents:
  - "7 Security Consideration\n   The Proxy-PAR protocol itself does not have its\
    \ own security\n   concepts.  As PAR is an extension of PNNI, it has all the security\n\
    \   features that come with PNNI. In addition, the protocol is mainly\n   used\
    \ for automatic discovery of peers for certain protocols.  After\n   the discovery\
    \ process the security concepts of the individual\n   protocol are used for the\
    \ bring-up. As explained in the section about\n   VPN support, the only security\
    \ considerations are on the server side,\n   where access filters for VPN IDs\
    \ can be implemented and restrictive\n   membership scope mappings can be configured.\n"
- title: 8 Conclusion
  contents:
  - "8 Conclusion\n   This document describes the basic functions of Proxy-PAR, which\
    \ has\n   been specified within the ATM Forum body. The main purpose of the\n\
    \   protocol is to provide automatic detection and configuration of non-\n   ATM\
    \ devices over an ATM cloud.\n   In the future, support for further protocols\
    \ and address families may\n   be added to widen the scope of applicability of\
    \ Proxy-PAR.\n"
- title: 9 Bibliography
  contents:
  - "9 Bibliography\n   [1]  Fox, B. and B. Gleeson, \"Virtual Private Networks Identifier\"\
    ,\n        RFC 2685, September 1999.\n   [2]  ATM-Forum, \"Private Network-Network\
    \ Interface Specification\n        Version 1.0.\" ATM Forum af-pnni-0055.000,\
    \ March 1996.\n   [3]  ATM-Forum, \"PNNI Augmented Routing (PAR) Version 1.0.\"\
    \  ATM\n        Forum af-ra-0104.000, January 1999.\n   [4]  ATM-Forum, \"Interim\
    \ Local Management Interface, (ILMI)\n        Specification 4.0.\" ATM Forum af-ilmi-0065.000,\
    \ September 1996.\n   [5]  Laubach, J., \"Classical IP and ARP over ATM\", RFC\
    \ 2225, April\n        1998.\n   [6]  Moy, J., \"Extending OSPF to Support Demand\
    \ Circuits\", RFC 1793,\n        April 1995.\n   [7]  ATM-Forum, \"LAN Emulation\
    \ over ATM 1.0.\" ATM Forum af-lane-\n        0021.000, January 1995.\n   [8]\
    \  Armitage, G., \"Support for Multicast over UNI 3.0/3.1 based ATM\n        Networks\"\
    , RFC 2022, November 1996.\n   [9]  Droz, P., Haas, R. and T. Przygienda, \"OSPF\
    \ over ATM and Proxy\n        PAR\", RFC 2844, May 2000.\n   [10] Coltun, R.,\
    \ \"The OSPF Opaque LSA Option\", RFC 2328, July 1998.\n   [11] Davison, M., \"\
    ILMI-Based Server Discovery for ATMARP\", RFC 2601,\n        June 1999.\n   [12]\
    \ Davison, M., \"ILMI-Based Server Discovery for MARS\", RFC 2602,\n        June\
    \ 1999.\n   [13] Davison, M., \"ILMI-Based Server Discovery for NHRP\", RFC 2603,\n\
    \        June 1999.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Patrick Droz\n   IBM Research\n   Zurich Research Laboratory\n\
    \   Saumerstrasse 4\n   8803 Ruschlikon\n   Switzerland\n   EMail: dro@zurich.ibm.com\n\
    \   Tony Przygienda\n   Siara Systems Incorporated\n   1195 Borregas Avenue\n\
    \   Sunnyvale, CA 94089\n   USA\n   EMail: prz@siara.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2000).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
