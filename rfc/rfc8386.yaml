- title: __initial_text__
  contents:
  - "                       Privacy Considerations for\n             Protocols Relying\
    \ on IP Broadcast or Multicast\n"
- title: Abstract
  contents:
  - "Abstract\n   A number of application-layer protocols make use of IP broadcast\
    \ or\n   multicast messages for functions such as local service discovery or\n\
    \   name resolution.  Some of these functions can only be implemented\n   efficiently\
    \ using such mechanisms.  When using broadcast or multicast\n   messages, a passive\
    \ observer in the same broadcast or multicast\n   domain can trivially record\
    \ these messages and analyze their content.\n   Therefore, designers of protocols\
    \ that make use of broadcast or\n   multicast messages need to take special care\
    \ when designing their\n   protocols.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are candidates for any level of Internet\n\
    \   Standard; see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   https://www.rfc-editor.org/info/rfc8386.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2018 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \      1.1. Types and Usage of Broadcast and Multicast .................4\n  \
    \    1.2. Requirements Language ......................................5\n   2.\
    \ Privacy Considerations ..........................................5\n      2.1.\
    \ Message Frequency ..........................................5\n      2.2. Persistent\
    \ Identifiers .....................................6\n      2.3. Anticipate User\
    \ Behavior ...................................6\n      2.4. Consider Potential\
    \ Correlation .............................7\n      2.5. Configurability ............................................7\n\
    \   3. Operational Considerations ......................................8\n  \
    \ 4. Summary .........................................................8\n   5.\
    \ Other Considerations ............................................9\n   6. IANA\
    \ Considerations ............................................10\n   7. Security\
    \ Considerations ........................................10\n   8. References\
    \ .....................................................10\n      8.1. Normative\
    \ References ......................................10\n      8.2. Informative\
    \ References ....................................10\n   Acknowledgments ...................................................13\n\
    \   Authors' Addresses ................................................13\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Broadcast and multicast messages have a large (and, to the\
    \ sender,\n   unknown) receiver group by design.  Because of that, these two\n\
    \   mechanisms are vital for a number of basic network functions such as\n   autoconfiguration\
    \ and link-layer address lookup.  Also, application\n   developers use broadcast/multicast\
    \ messages to implement things such\n   as local service or peer discovery.  It\
    \ appears that an increasing\n   number of applications make use of it as suggested\
    \ by experimental\n   results obtained on campus networks, including the IETF\
    \ meeting\n   network [TRAC2016].  This trend is not entirely surprising.  As\n\
    \   [RFC919] puts it, \"The use of broadcasts [...] is a good base for\n   many\
    \ applications\".  Broadcast and multicast functionality in a\n   subnetwork is\
    \ therefore important because a lack thereof renders the\n   protocols relying\
    \ on these mechanisms inoperable [RFC3819].\n   Using broadcast/multicast can\
    \ become problematic if the information\n   that is being distributed can be regarded\
    \ as sensitive or if the\n   information that is distributed by multiple protocols\
    \ can be\n   correlated in a way that sensitive data can be derived.  This is\n\
    \   clearly true for any protocol, but broadcast/multicast is special in\n   at\
    \ least two respects:\n   (a)  The aforementioned large receiver group consists\
    \ of receivers\n        unknown to the sender.  This makes eavesdropping without\
    \ special\n        privileges or a special location in the network trivial for\n\
    \        anybody in the same broadcast/multicast domain.\n   (b)  Encryption is\
    \ difficult when broadcast/multicast messages are\n        used, because, for\
    \ instance, a non-trivial key management\n        protocol might be required.\
    \  When encryption is not used, the\n        content of these messages is easily\
    \ accessible, making it easy\n        to spoof and replay them.\n   Given the\
    \ above, privacy protection for protocols based on broadcast\n   or multicast\
    \ communication is significantly more difficult compared\n   to unicast communication,\
    \ and at the same time, invasion of privacy\n   is much easier.\n   Privacy considerations\
    \ for IETF-specified protocols have received\n   some attention in the recent\
    \ past (e.g., [RFC7721] and [RFC7819]).\n   There is also general guidance available\
    \ for document authors on when\n   and how to include a privacy considerations\
    \ section in their\n   documents and on how to evaluate the privacy implications\
    \ of Internet\n   protocols [RFC6973].  RFC 6973 also describes potential threats\
    \ to\n   privacy in great detail and lists terminology that is also used in\n\
    \   this document.  In contrast to RFC 6973, this document contains a\n   number\
    \ of privacy considerations, especially for protocols that rely\n   on broadcast/multicast,\
    \ that are intended to reduce the likelihood\n   that a broadcast- or multicast-based\
    \ protocol can be misused to\n   collect sensitive data about devices, users,\
    \ and groups of users in a\n   broadcast/multicast domain.\n   The above-mentioned\
    \ considerations particularly apply to protocols\n   designed outside the IETF\
    \ for two reasons.  First, non-standard\n   protocols will likely not receive\
    \ operational attention and support\n   in making them more secure, e.g., what\
    \ DHCP snooping does for DHCP.\n   Because these protocols are typically not documented,\
    \ network\n   equipment does not provide similar features for them.  Second, these\n\
    \   protocols have been designed in isolation, where a set of\n   considerations\
    \ to follow is useful in the absence of a larger\n   community providing feedback\
    \ and expertise to improve the protocol.\n   In particular, carelessly designed\
    \ protocols that use broadcast/\n   multicast can break privacy efforts at different\
    \ layers of the\n   protocol stack such as Media Access Control (MAC) address\
    \ or IP\n   address randomization [RFC4941].\n"
- title: 1.1.  Types and Usage of Broadcast and Multicast
  contents:
  - "1.1.  Types and Usage of Broadcast and Multicast\n   In IPv4, two major types\
    \ of broadcast addresses exist: limited\n   broadcast and directed broadcast.\
    \  Section 5.3.5 of [RFC1812] defines\n   limited broadcast as all-ones (255.255.255.255)\
    \ and defines directed\n   broadcast as the given network prefix of an IP address\
    \ and the local\n   part of all-ones.  Broadcast packets are received by all nodes\
    \ in a\n   subnetwork.  Limited broadcasts never transit a router.  The same is\n\
    \   true for directed broadcasts by default, but routers may provide an\n   option\
    \ to do this [RFC2644].  IPv6, on the other hand, does not\n   provide broadcast\
    \ addresses but relies solely on multicast [RFC4291].\n   In contrast to broadcast\
    \ addresses, multicast addresses represent an\n   identifier for a set of interfaces\
    \ that can be a set different from\n   all nodes in the subnetwork.  All interfaces\
    \ that are identified by a\n   given multicast address receive packets destined\
    \ towards that address\n   and are called a \"multicast group\".  In both IPv4\
    \ and IPv6, multiple\n   pre-defined multicast addresses exist.  The ones most\
    \ relevant for\n   this document are the ones with subnet scope.  For IPv4, an\
    \ IP prefix\n   called the \"Local Network Control Block\" (224.0.0.0/24, defined\
    \ in\n   Section 4 of [RFC5771]) is reserved for this purpose.  For IPv6, the\n\
    \   relevant multicast addresses are the two All Nodes Addresses, which\n   every\
    \ IPv6-capable host is required to recognize as identifying\n   itself (see Section\
    \ 2.7.1 of [RFC4291]).\n   Typical usage of these addresses includes local service\
    \ discovery\n   (e.g., Multicast DNS (mDNS) [RFC6762] and Link-Local Multicast\
    \ Name\n   Resolution (LLMNR) [RFC4795] make use of multicast),\n   autoconfiguration\
    \ (e.g., DHCPv4 [RFC2131] uses broadcasts, and DHCPv6\n   [RFC3315] uses multicast\
    \ addresses), and other vital network services\n   such as address resolution\
    \ or duplicate address detection.  Aside\n   from these core network functions,\
    \ applications also make use of\n   broadcast and multicast functionality, often\
    \ implementing proprietary\n   protocols.  In sum, these protocols distribute\
    \ a diverse set of\n   potentially privacy-sensitive information to a large receiver\
    \ group,\n   and the only requirement to be part of this receiver group is to\
    \ be\n   on the same subnetwork.\n"
- title: 1.2.  Requirements Language
  contents:
  - "1.2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n"
- title: 2.  Privacy Considerations
  contents:
  - "2.  Privacy Considerations\n   There are a few obvious and a few not necessarily\
    \ obvious things that\n   designers of protocols utilizing broadcast/multicast\
    \ should consider\n   in respect to the privacy implications for their protocol.\
    \  Most of\n   these items are based on protocol behavior observed as part of\n\
    \   experiments on operational networks [TRAC2016].\n"
- title: 2.1.  Message Frequency
  contents:
  - "2.1.  Message Frequency\n   Frequent broadcast/multicast traffic caused by an\
    \ application can\n   give away user behavior and online connection times.  This\
    \ allows a\n   passive observer to potentially deduce a user's current activity\n\
    \   (e.g., a game) and to create an online profile (i.e., times the user\n   is\
    \ on the network).  This profile becomes more accurate as the\n   frequency of\
    \ messages and the time duration over which they are sent\n   increases.  Given\
    \ that broadcast/multicast messages are only visible\n   in the same broadcast/multicast\
    \ domain, these messages also give away\n   the rough location of the user (e.g.,\
    \ a campus or building).\n   This behavior has, for example, been observed by\
    \ a synchronization\n   mechanism of a popular application, where multiple messages\
    \ have been\n   sent per minute via broadcast.  Given this behavior, it is possible\n\
    \   to record a device's time on the network with a sub-minute accuracy\n   given\
    \ only the traffic of this single application installed on the\n   device.  Also,\
    \ services used for local name resolution in modern\n   operating systems utilize\
    \ broadcast- or multicast-based protocols\n   (e.g., mDNS, LLMNR, or NetBIOS)\
    \ to announce, for example, resources\n   on a regular basis.  This also allows\
    \ tracking of the online times of\n   a device.\n   If a protocol relies on frequent\
    \ or periodic broadcast/multicast\n   messages, the frequency SHOULD be chosen\
    \ conservatively, in\n   particular if the messages contain persistent identifiers\
    \ (see\n   Section 2.2).  Also, intelligent message suppression mechanisms such\n\
    \   as the ones employed in mDNS [RFC6762] SHOULD be implemented.  The\n   lower\
    \ the frequency of broadcast messages, the harder passive traffic\n   analysis\
    \ and surveillance becomes.\n"
- title: 2.2.  Persistent Identifiers
  contents:
  - "2.2.  Persistent Identifiers\n   A few protocols that make use of broadcast/multicast\
    \ messages\n   observed in the wild also make use of persistent identifiers. \
    \ This\n   includes the use of host names or more abstract persistent\n   identifiers\
    \ such as a Universally Unique Identifiers (UUIDs) or\n   similar.  These IDs,\
    \ which, for example, identify the installation of\n   a certain application,\
    \ might not change across updates of the\n   software and can therefore be extremely\
    \ long lived.  This allows a\n   passive observer to track a user precisely if\
    \ broadcast/multicast\n   messages are frequent.  This is even true if the IP\
    \ and/or MAC\n   address changes.  Such identifiers also allow two different\n\
    \   interfaces (e.g., Wi-Fi and Ethernet) to be correlated to the same\n   device.\
    \  If the application makes use of persistent identifiers for\n   multiple installations\
    \ of the same application for the same user,\n   this even allows a passive observer\
    \ to infer that different devices\n   belong to the same user.\n   The aforementioned\
    \ broadcast messages from a synchronization\n   mechanism of a popular application\
    \ also included a persistent\n   identifier in every broadcast.  This identifier\
    \ never changed after\n   the application was installed, which allowed for the\
    \ tracking of a\n   device even when it changed its network interface or when\
    \ it\n   connected to a different network.\n   In general, persistent IDs are\
    \ considered bad practice for broadcast\n   and multicast communication, as persistent\
    \ application-layer IDs will\n   make efforts to randomize identifiers (e.g.,\
    \ [RANDOM-ADDR]) on lower\n   layers useless.  When protocols that make use of\
    \ broadcast/multicast\n   need to make use of IDs, these IDs SHOULD be rotated\
    \ frequently to\n   make user tracking more difficult.\n"
- title: 2.3.  Anticipate User Behavior
  contents:
  - "2.3.  Anticipate User Behavior\n   A large number of users name their device\
    \ after themselves, either\n   using their first name, last name, or both.  Often,\
    \ a host name\n   includes the type, model, or maker of a device, its function,\
    \ or\n   language-specific information.  Based on data gathered during\n   experiments\
    \ performed at IETF meetings and at a large campus network,\n   this appears to\
    \ be the currently prevalent user behavior [TRAC2016].\n   For protocols using\
    \ the host name as part of the messages, this\n   clearly will reveal personally\
    \ identifiable information to everyone\n   on the local network.  This information\
    \ can also be used to mount\n   more sophisticated attacks, e.g., when the owner\
    \ of a device is\n   identified (as an interesting target) or properties of the\
    \ device are\n   known (e.g., known vulnerabilities).  Host names are also a type\
    \ of\n   persistent identifier; therefore, the considerations in Section 2.2\n\
    \   apply.\n   Some of the most commonly used operating systems include the name\
    \ the\n   user chooses for the user account during the installation process as\n\
    \   part of the host name of the device.  The name of the operating\n   system\
    \ can also be included, therefore revealing two pieces of\n   information that\
    \ can be regarded as private information if the host\n   name is used in broadcast/multicast\
    \ messages.\n   Where possible, the use of host names and other user-provided\n\
    \   information in protocols making use of broadcast/multicast SHOULD be\n   avoided.\
    \  An application might want to display the information it\n   will broadcast\
    \ on the LAN at install/config time, so that the user is\n   at least aware of\
    \ the application's behavior.  More host name\n   considerations can be found\
    \ in [RFC8117].  More information on user\n   participation can be found in [RFC6973].\n"
- title: 2.4.  Consider Potential Correlation
  contents:
  - "2.4.  Consider Potential Correlation\n   A large number of services and applications\
    \ make use of the\n   broadcast/multicast mechanism.  That means there are various\
    \ sources\n   of information that are easily accessible by a passive observer.\
    \  In\n   isolation, the information these protocols reveal might seem\n   harmless,\
    \ but given multiple such protocols, it might be possible to\n   correlate this\
    \ information.  For example, a protocol that uses\n   frequent messages including\
    \ a UUID to identify the particular\n   installation does not give away the identity\
    \ of the user.  However, a\n   single message including the user's host name might\
    \ do that, and it\n   can be correlated using, for example, the MAC address of\
    \ the device's\n   interface.\n   In the experiments described in [TRAC2016],\
    \ it was possible to\n   correlate frequently sent broadcast messages that included\
    \ a unique\n   identifier with other broadcast/multicast messages containing\n\
    \   usernames (e.g. mDNS, LLMNR, or NetBIOS); this revealed relationships\n  \
    \ among users.  This allowed the real identity of the users of many\n   devices\
    \ to be revealed, and it also gave away some information about\n   their social\
    \ environment.\n   A designer of a protocol that makes use of broadcast/multicast\
    \ needs\n   to be aware of the fact that even if the information a protocol leaks\n\
    \   seems harmless in isolation, there might be ways to correlate that\n   information\
    \ with information from other protocols to reveal sensitive\n   information about\
    \ a user.\n"
- title: 2.5.  Configurability
  contents:
  - "2.5.  Configurability\n   A lot of applications and services relying on broadcast-\
    \ or\n   multicast-based protocols do not include the means to declare \"safe\"\
    \n   environments (e.g., based on the Service Set Identifier (SSID) of a\n   Wi-Fi\
    \ network and the MAC addresses of the access points).  For\n   example, a device\
    \ connected to a public Wi-Fi network will likely\n   broadcast the same information\
    \ as when connected to the home network.\n   It would be beneficial if certain\
    \ behaviors could be restricted to\n   \"safe\" environments.\n   For example,\
    \ a popular operating system allows the user to specify\n   the trust level of\
    \ the network the device connects to, which, for\n   example, restricts specific\
    \ system services (using broadcast/\n   multicast messages for their normal operation)\
    \ to be used in trusted\n   networks only.  Such functionality could be implemented\
    \ as part of an\n   application.\n   An application developer making use of broadcast/multicast\
    \ messages\n   as part of the application SHOULD, if possible, make the broadcast\n\
    \   feature configurable so that potentially sensitive information does\n   not\
    \ leak on public networks where the threat to privacy is much\n   larger.\n"
- title: 3.  Operational Considerations
  contents:
  - "3.  Operational Considerations\n   Besides changing end-user behavior, choosing\
    \ sensible defaults as an\n   operating system vendor (e.g., for suggesting host\
    \ names), and\n   following the considerations for protocol designers mentioned\
    \ in this\n   document, there is something that the network administrators/\n\
    \   operators can do to limit the above-mentioned problems.\n   A feature commonly\
    \ found on access points is the ability to manage/\n   filter broadcast and multicast\
    \ traffic.  This will potentially break\n   certain applications or some of their\
    \ functionality but will also\n   protect the users from potentially leaking sensitive\
    \ information.\n   Wireless access points often provide finer-grained control\
    \ beyond a\n   simple on/off switch for well-known protocols or provide mechanisms\n\
    \   to manage broadcast/multicast traffic intelligently using, for\n   example,\
    \ proxies (see [MCAST-CONS]).  However, these mechanisms only\n   work on standardized\
    \ protocols.\n"
- title: 4.  Summary
  contents:
  - "4.  Summary\n   Increasingly, applications rely on protocols that send and receive\n\
    \   broadcast and multicast messages.  For some, broadcast/multicast\n   messages\
    \ are the basis of their application logic; others use\n   broadcast/multicast\
    \ messages to improve certain aspects of the\n   application but are fully functional\
    \ in case broadcast/multicast\n   messages fail.  Irrespective of the role of\
    \ broadcast and multicast\n   messages for the application, the designers of protocols\
    \ that make\n   use of them should be very careful in their protocol design because\n\
    \   of the special nature of broadcast and multicast.\n   It is not always possible\
    \ to implement certain functionality via\n   unicast, but if a protocol designer\
    \ chooses to rely on broadcast/\n   multicast, the following should be carefully\
    \ considered:\n   o  IETF-specified protocols, such as mDNS [RFC6762], SHOULD\
    \ be used\n      if possible as operational support might exist to protect against\n\
    \      the leakage of private information.  Also, for some protocols,\n      privacy\
    \ extensions are being specified; these can be used if\n      implemented.  For\
    \ example, for DNS-SD, privacy extensions are\n      documented in [DNSSD-PRIV].\n\
    \   o  Using user-specified information inside broadcast/multicast\n      messages\
    \ SHOULD be avoided, as users will often use personal\n      information or other\
    \ information that aids attackers, in\n      particular if the user is unaware\
    \ about how that information is\n      being used.\n   o  The use of persistent\
    \ IDs in messages SHOULD be avoided, as this\n      allows user tracking and correlation,\
    \ and it potentially has a\n      devastating effect on other privacy-protection\
    \ mechanisms.\n   o  If one must design a new protocol relying on broadcast/multicast\n\
    \      and cannot use an IETF-specified protocol, then:\n      *  the protocol\
    \ SHOULD be very conservative in how frequently it\n         sends messages as\
    \ an effort in data minimization,\n      *  it SHOULD make use of mechanisms implemented\
    \ in IETF-specified\n         protocols that can be helpful in privacy protection,\
    \ such as\n         message suppression in mDNS,\n      *  it SHOULD be designed\
    \ in such a way that information sent in\n         broadcast/multicast messages\
    \ cannot be correlated with\n         information from other protocols using broadcast/multicast,\
    \ and\n      *  it SHOULD be possible to let the user configure \"safe\"\n   \
    \      environments if possible (e.g., based on the SSID) to minimize\n      \
    \   the risk of information leakage (e.g., a home network as\n         opposed\
    \ to a public Wi-Fi network).\n"
- title: 5.  Other Considerations
  contents:
  - "5.  Other Considerations\n   Besides privacy implications, frequent broadcasting\
    \ also represents a\n   performance problem.  In particular, in certain wireless\
    \ technologies\n   such as 802.11, broadcast and multicast are transmitted at\
    \ a much\n   lower rate (the lowest common denominator rate) compared to unicast\n\
    \   and therefore have a much bigger impact on the overall available\n   airtime\
    \ [MCAST-CONS].  Further, it will limit the ability for devices\n   to go to sleep\
    \ if frequent broadcasts are being sent.  A similar\n   problem in respect to\
    \ Router Advertisements is addressed in\n   [RFC7772].  In that respect, broadcast/multicast\
    \ can be used for\n   another class of attacks that is not related to privacy.\
    \  The\n   potential impact on network performance should nevertheless be\n  \
    \ considered when designing a protocol that makes use of broadcast/\n   multicast.\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   This document has no IANA actions.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   This document deals with privacy-related considerations\
    \ for\n   broadcast- and multicast-based protocols.  It contains advice for\n\
    \   designers of such protocols to minimize the leakage of privacy-\n   sensitive\
    \ information.  The intent of the advice is to make sure that\n   identities will\
    \ remain anonymous and user tracking will be made\n   difficult.\n   To protect\
    \ multicast traffic, certain applications can make use of\n   existing mechanisms,\
    \ such as the ones defined in [RFC5374].  Examples\n   of such applications can\
    \ be found in Appendix A of [RFC5374].\n   However, given the assumptions about\
    \ these applications and the\n   required security infrastructure, many applications\
    \ will not be able\n   to make use of such mechanisms.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n     \
    \         2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n        \
    \      May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [DNSSD-PRIV]\n              Huitema, C. and\
    \ D. Kaiser, \"Privacy Extensions for DNS-\n              SD\", Work in Progress,\
    \ draft-ietf-dnssd-privacy-04, April\n              2018.\n   [MCAST-CONS]\n \
    \             Perkins, C., McBride, M., Stanley, D., Kumari, W., and J.\n    \
    \          Zuniga, \"Multicast Considerations over IEEE 802 Wireless\n       \
    \       Media\", Work in Progress, draft-ietf-mboned-ieee802-mcast-\n        \
    \      problems-01, February 2018.\n   [RANDOM-ADDR]\n              Huitema, C.,\
    \ \"Implications of Randomized Link Layers\n              Addresses for IPv6 Address\
    \ Assignment\", Work in Progress,\n              draft-huitema-6man-random-addresses-03,\
    \ March 2016.\n   [RFC919]   Mogul, J., \"Broadcasting Internet Datagrams\", STD\
    \ 5,\n              RFC 919, DOI 10.17487/RFC0919, October 1984,\n           \
    \   <https://www.rfc-editor.org/info/rfc919>.\n   [RFC1812]  Baker, F., Ed., \"\
    Requirements for IP Version 4 Routers\",\n              RFC 1812, DOI 10.17487/RFC1812,\
    \ June 1995,\n              <https://www.rfc-editor.org/info/rfc1812>.\n   [RFC2131]\
    \  Droms, R., \"Dynamic Host Configuration Protocol\",\n              RFC 2131,\
    \ DOI 10.17487/RFC2131, March 1997,\n              <https://www.rfc-editor.org/info/rfc2131>.\n\
    \   [RFC2644]  Senie, D., \"Changing the Default for Directed Broadcasts\n   \
    \           in Routers\", BCP 34, RFC 2644, DOI 10.17487/RFC2644,\n          \
    \    August 1999, <https://www.rfc-editor.org/info/rfc2644>.\n   [RFC3315]  Droms,\
    \ R., Ed., Bound, J., Volz, B., Lemon, T., Perkins,\n              C., and M.\
    \ Carney, \"Dynamic Host Configuration Protocol\n              for IPv6 (DHCPv6)\"\
    , RFC 3315, DOI 10.17487/RFC3315, July\n              2003, <https://www.rfc-editor.org/info/rfc3315>.\n\
    \   [RFC3819]  Karn, P., Ed., Bormann, C., Fairhurst, G., Grossman, D.,\n    \
    \          Ludwig, R., Mahdavi, J., Montenegro, G., Touch, J., and L.\n      \
    \        Wood, \"Advice for Internet Subnetwork Designers\", BCP 89,\n       \
    \       RFC 3819, DOI 10.17487/RFC3819, July 2004,\n              <https://www.rfc-editor.org/info/rfc3819>.\n\
    \   [RFC4291]  Hinden, R. and S. Deering, \"IP Version 6 Addressing\n        \
    \      Architecture\", RFC 4291, DOI 10.17487/RFC4291, February\n            \
    \  2006, <https://www.rfc-editor.org/info/rfc4291>.\n   [RFC4795]  Aboba, B.,\
    \ Thaler, D., and L. Esibov, \"Link-local\n              Multicast Name Resolution\
    \ (LLMNR)\", RFC 4795,\n              DOI 10.17487/RFC4795, January 2007,\n  \
    \            <https://www.rfc-editor.org/info/rfc4795>.\n   [RFC4941]  Narten,\
    \ T., Draves, R., and S. Krishnan, \"Privacy\n              Extensions for Stateless\
    \ Address Autoconfiguration in\n              IPv6\", RFC 4941, DOI 10.17487/RFC4941,\
    \ September 2007,\n              <https://www.rfc-editor.org/info/rfc4941>.\n\
    \   [RFC5374]  Weis, B., Gross, G., and D. Ignjatic, \"Multicast\n           \
    \   Extensions to the Security Architecture for the Internet\n              Protocol\"\
    , RFC 5374, DOI 10.17487/RFC5374, November 2008,\n              <https://www.rfc-editor.org/info/rfc5374>.\n\
    \   [RFC5771]  Cotton, M., Vegoda, L., and D. Meyer, \"IANA Guidelines for\n \
    \             IPv4 Multicast Address Assignments\", BCP 51, RFC 5771,\n      \
    \        DOI 10.17487/RFC5771, March 2010,\n              <https://www.rfc-editor.org/info/rfc5771>.\n\
    \   [RFC6762]  Cheshire, S. and M. Krochmal, \"Multicast DNS\", RFC 6762,\n  \
    \            DOI 10.17487/RFC6762, February 2013,\n              <https://www.rfc-editor.org/info/rfc6762>.\n\
    \   [RFC6973]  Cooper, A., Tschofenig, H., Aboba, B., Peterson, J.,\n        \
    \      Morris, J., Hansen, M., and R. Smith, \"Privacy\n              Considerations\
    \ for Internet Protocols\", RFC 6973,\n              DOI 10.17487/RFC6973, July\
    \ 2013,\n              <https://www.rfc-editor.org/info/rfc6973>.\n   [RFC7721]\
    \  Cooper, A., Gont, F., and D. Thaler, \"Security and Privacy\n             \
    \ Considerations for IPv6 Address Generation Mechanisms\",\n              RFC\
    \ 7721, DOI 10.17487/RFC7721, March 2016,\n              <https://www.rfc-editor.org/info/rfc7721>.\n\
    \   [RFC7772]  Yourtchenko, A. and L. Colitti, \"Reducing Energy\n           \
    \   Consumption of Router Advertisements\", BCP 202, RFC 7772,\n             \
    \ DOI 10.17487/RFC7772, February 2016,\n              <https://www.rfc-editor.org/info/rfc7772>.\n\
    \   [RFC7819]  Jiang, S., Krishnan, S., and T. Mrugalski, \"Privacy\n        \
    \      Considerations for DHCP\", RFC 7819, DOI 10.17487/RFC7819,\n          \
    \    April 2016, <https://www.rfc-editor.org/info/rfc7819>.\n   [RFC8117]  Huitema,\
    \ C., Thaler, D., and R. Winter, \"Current Hostname\n              Practice Considered\
    \ Harmful\", RFC 8117,\n              DOI 10.17487/RFC8117, March 2017,\n    \
    \          <https://www.rfc-editor.org/info/rfc8117>.\n   [TRAC2016] Faath, M.,\
    \ Weisshaar, F., and R. Winter, \"How Broadcast\n              Data Reveals Your\
    \ Identity and Social Graph\", Wireless\n              Communications and Mobile\
    \ Computing Conference\n              (IWCMC), International Workshop on TRaffic\
    \ Analysis and\n              Characterization (TRAC), DOI 10.1109/IWCMC.2016.7577084,\n\
    \              September 2016.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   We would like to thank Eliot Lear, Joe Touch, and Stephane\
    \ Bortzmeyer\n   for their valuable input to this document.\n   This work was\
    \ partly supported by the European Commission under grant\n   agreement FP7-318627\
    \ mPlane.  Support does not imply endorsement.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Rolf Winter\n   University of Applied Sciences Augsburg\n\
    \   Augsburg\n   Germany\n   Email: rolf.winter@hs-augsburg.de\n   Michael Faath\n\
    \   Conntac GmbH\n   Augsburg\n   Germany\n   Email: faath@conntac.net\n   Fabian\
    \ Weisshaar\n   University of Applied Sciences Augsburg\n   Augsburg\n   Germany\n\
    \   Email: fabian.weisshaar@hs-augsburg.de\n"
