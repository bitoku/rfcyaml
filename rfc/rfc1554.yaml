- title: __initial_text__
  contents:
  - '          ISO-2022-JP-2: Multilingual Extension of ISO-2022-JP

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  This memo\n   does not specify an Internet standard of any kind.  Distribution\
    \ of\n   this memo is unlimited.\n"
- title: Introduction
  contents:
  - "Introduction\n   This memo describes a text encoding scheme: \"ISO-2022-JP-2\"\
    , which is\n   used experimentally for electronic mail [RFC822] and network news\n\
    \   [RFC1036] messages in several Japanese networks.  The encoding is a\n   multilingual\
    \ extension of \"ISO-2022-JP\", the existing encoding for\n   Japanese [2022JP].\
    \  The encoding is supported by an Emacs based\n   multilingual text editor: MULE\
    \ [MULE].\n   The name, \"ISO-2022-JP-2\", is intended to be used in the \"charset\"\
    \n   parameter field of MIME headers (see [MIME1] and [MIME2]).\n"
- title: Description
  contents:
  - "Description\n   The text with \"ISO-2022-JP-2\" starts in ASCII [ASCII], and\
    \ switches\n   to other character sets of ISO 2022 [ISO2022] through limited\n\
    \   combinations of escape sequences.  All the characters are encoded\n   with\
    \ 7 bits only.\n   At the beginning of text, the existence of an announcer sequence:\n\
    \   \"ESC 2/0 4/1 ESC 2/0 4/6 ESC 2/0 5/10\" is (though omitted) assumed.\n  \
    \ Thus, characters of 94 character sets are designated to G0 and\n   invoked as\
    \ GL.  C1 control characters are represented with 7 bits.\n   Characters of 96\
    \ character sets are designated to G2 and invoked with\n   SS2 (single shift two,\
    \ \"ESC 4/14\" or \"ESC N\").\n   For example, the escape sequence \"ESC 2/4 2/8\
    \ 4/3\" or \"ESC $ ( C\"\n   indicates that the bytes following the escape sequence\
    \ are Korean KSC\n   characters, which are encoded in two bytes each.  The escape\
    \ sequence\n   \"ESC 2/14 4/1\" or \"ESC . A\" indicates that ISO 8859-1 is designated\n\
    \   to G2. After the designation, the single shifted sequence \"ESC 4/14\n   4/1\"\
    \ or \"ESC N A\" is interpreted to represent a character \"A with\n   acute\"\
    .\n   The following table gives the escape sequences and the character sets\n\
    \   used in \"ISO-2022-JP-2\" messages. The reg# is the registration number\n\
    \   in ISO's registry [ISOREG].\n                              94 character sets\n\
    \      reg#  character set      ESC sequence                designated to\n  \
    \    ------------------------------------------------------------------\n    \
    \  6     ASCII              ESC 2/8 4/2      ESC ( B    G0\n      42    JIS X\
    \ 0208-1978    ESC 2/4 4/0      ESC $ @    G0\n      87    JIS X 0208-1983   \
    \ ESC 2/4 4/2      ESC $ B    G0\n      14    JIS X 0201-Roman   ESC 2/8 4/10\
    \     ESC ( J    G0\n      58    GB2312-1980        ESC 2/4 4/1      ESC $ A \
    \   G0\n      149   KSC5601-1987       ESC 2/4 2/8 4/3  ESC $ ( C  G0\n      159\
    \   JIS X 0212-1990    ESC 2/4 2/8 4/4  ESC $ ( D  G0\n                      \
    \        96 character sets\n      reg#  character set      ESC sequence      \
    \          designated to\n      ------------------------------------------------------------------\n\
    \      100   ISO8859-1          ESC 2/14 4/1     ESC . A    G2\n      126   ISO8859-7(Greek)\
    \   ESC 2/14 4/6     ESC . F    G2\n   For further information about the character\
    \ sets and the escape\n   sequences, see [ISO2022] and [ISOREG].\n   If there\
    \ is any G0 designation in text, there must be a switch to\n   ASCII or to JIS\
    \ X 0201-Roman before a space character (but not\n   necessarily before \"ESC\
    \ 4/14 2/0\" or \"ESC N ' '\") or control\n   characters such as tab or CRLF.\
    \  This means that the next line starts\n   in the character set that was switched\
    \ to before the end of the\n   previous line.  Though the designation to JIS X\
    \ 0201-Roman is allowed\n   for backward compatibility to \"ISO-2022-JP\", its\
    \ use is discouraged.\n   Applications such as pagers and editors which randomly\
    \ seek within a\n   text file encoded with \"ISO-2022-JP-2\" may assume that all\
    \ the lines\n   begin with ASCII, not with JIS X 0201-Roman.\n   At the beginning\
    \ of a line, information on G2 designation of the\n   previous line is cleared.\
    \  New designation must be given before a\n   character in 96 character sets is\
    \ used in the line.\n   The text must end in ASCII designated to G0.\n   As the\
    \ \"ISO-2022-JP\", and thus, \"ISO-2022-JP-2\", is designed to\n   represent English\
    \ and modern Japanese, left-to-right directionality\n   is assumed if the text\
    \ is displayed horizontally.\n   Users of \"ISO-2022-JP-2\" must be aware that\
    \ some common transport\n   such as old Bnews can not relay a 7-bit value 7/15\
    \ (decimal 127),\n   which is used to encode, say, \"y with diaeresis\" of ISO\
    \ 8859-1.\n   Other restrictions are given in the Formal Syntax section below.\n"
- title: Formal Syntax
  contents:
  - "Formal Syntax\n   The notational conventions used here are identical to those\
    \ used in\n   STD 11, RFC 822 [RFC822].\n   The * (asterisk) convention is as\
    \ follows:\n      l*m something\n   meaning at least l and at most m somethings,\
    \ with l and m taking\n   default values of 0 and infinity, respectively.\n  \
    \ message             = headers 1*(CRLF text)\n                              \
    \            ; see also [MIME1] \"body-part\"\n                              \
    \            ; note: must end in ASCII\n   text                = *(single-byte-char\
    \ /\n                           g2-desig-seq /\n                           single-shift-char)\n\
    \                          [*segment\n                           reset-seq\n \
    \                          *(single-byte-char /\n                            \
    \ g2-desig-seq /\n                             single-shift-char ) ]\n       \
    \                                   ; note: g2-desig-seq must\n              \
    \                            ; precede single-shift-char\n   headers         \
    \    = <see [RFC822] \"fields\" and [MIME1] \"body-part\">\n   segment       \
    \      = single-byte-segment / double-byte-segment\n   single-byte-segment = single-byte-seq\n\
    \                         *(single-byte-char /\n                           g2-desig-seq\
    \ /\n                           single-shift-char )\n   double-byte-segment =\
    \ double-byte-seq\n                         *((one-of-94 one-of-94) /\n      \
    \                     g2-desig-seq /\n                           single-shift-char\
    \ )\n   reset-seq           = ESC \"(\" ( \"B\" / \"J\" )\n   single-byte-seq\
    \     = ESC \"(\" ( \"B\" / \"J\" )\n   double-byte-seq     = (ESC \"$\" ( \"\
    @\" / \"A\" / \"B\" )) /\n                         (ESC \"$\" \"(\" ( \"C\" /\
    \ \"D\" ))\n   g2-desig-seq        = ESC \".\" ( \"A\" / \"F\" )\n   single-shift-seq\
    \    = ESC \"N\"\n   single-shift-char   = single-shift-seq one-of-96\n   CRLF\
    \                = CR LF\n                                                   \
    \ ; ( Octal, Decimal.)\n   ESC                 = <ISO 2022 ESC, escape>     ;\
    \ (    33,      27.)\n   SI                  = <ISO 2022 SI, shift-in>    ; (\
    \    17,      15.)\n   SO                  = <ISO 2022 SO, shift-out>   ; (  \
    \  16,      14.)\n   CR                  = <ASCII CR, carriage return>; (    15,\
    \      13.)\n   LF                  = <ASCII LF, linefeed>       ; (    12,  \
    \    10.)\n   one-of-94           = <any one of 94 values>     ; (41-176, 33.-126.)\n\
    \   one-of-96           = <any one of 96 values>     ; (40-177, 32.-127.)\n  \
    \ 7BIT                = <any 7-bit value>          ; ( 0-177,  0.-127.)\n   single-byte-char\
    \    = <any 7BIT, including bare CR & bare LF, but NOT\n                     \
    \     including CRLF, and not including ESC, SI, SO>\n"
- title: MIME Considerations
  contents:
  - "MIME Considerations\n   The name given to the character encoding is \"ISO-2022-JP-2\"\
    . This\n   name is intended to be used in MIME messages as follows:\n      Content-Type:\
    \ text/plain; charset=iso-2022-jp-2\n   The \"ISO-2022-JP-2\" encoding is already\
    \ in 7-bit form, so it is not\n   necessary to use a Content-Transfer-Encoding\
    \ header. It should be\n   noted that applying the Base64 or Quoted-Printable\
    \ encoding will\n   render the message unreadable in non-MIME-compliant software.\n\
    \   \"ISO-2022-JP-2\" may also be used in MIME headers.  Both \"B\" and \"Q\"\n\
    \   encoding could be useful with \"ISO-2022-JP-2\" text.\n"
- title: References
  contents:
  - "References\n   [ASCII] American National Standards Institute, \"Coded character\
    \ set\n           -- 7-bit American national standard code for information\n \
    \          interchange\", ANSI X3.4-1986.\n   [ISO2022] International Organization\
    \ for Standardization (ISO),\n             \"Information processing -- ISO 7-bit\
    \ and 8-bit coded\n             character sets -- Code extension techniques\"\
    ,\n             International Standard, Ref. No. ISO 2022-1986 (E).\n   [ISOREG]\
    \ International Organization for Standardization (ISO),\n            \"International\
    \ Register of Coded Character Sets To Be Used\n            With Escape Sequences\"\
    .\n   [MIME1] Borenstein, N., and N. Freed, \"MIME  (Multipurpose Internet\n \
    \          Mail Extensions) Part One: Mechanisms for Specifying and\n        \
    \   Describing the Format of Internet Message Bodies\", RFC 1521,\n          \
    \ September 1993.\n   [MIME2] Moore, K., \"MIME (Multipurpose Internet Mail Extensions)\
    \ Part\n           Two: Message Header Extensions for Non-ASCII Text\", RFC 1522,\n\
    \           September 1993.\n   [RFC822] Crocker, D., \"Standard for the Format\
    \ of ARPA Internet Text\n            Messages\", STD 11, RFC 1522, UDEL, August\
    \ 1982.\n   [RFC1036] Horton M., and R. Adams, \"Standard for Interchange of\n\
    \             USENET Messages\", RFC 1036, AT&T Bell Laboratories, Center\n  \
    \           for Seismic Studies, December 1987.\n   [2022JP] Murai, J., Crispin,\
    \ M., and E. van der Poel, \"Japanese\n            Character Encoding for Internet\
    \ Messages\", RFC 1468, June\n            1993.\n   [MULE] Nishikimi, M., Handa,\
    \ K., and S. Tomura, \"Mule: MULtilingual\n          Enhancement to GNU Emacs\"\
    , Proc. of INET'93, August, 1993.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   This memo is the result of discussion between various people\
    \ in a\n   news group: fj.kanji and is reviewed by a mailing list: jp-msg\n  \
    \ @iij.ad.jp.  The Authors wish to thank in particular Prof. Eiichi\n   Wada for\
    \ his suggestions based on profound knowledge in ISO 2022 and\n   related standards.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Masataka Ohta\n   Tokyo Institute of Technology\n   2-12-1,\
    \ O-okayama, Meguro-ku,\n   Tokyo 152, JAPAN\n   Phone: +81-3-5499-7084\n   Fax:\
    \ +81-3-3729-1940\n   EMail: mohta@cc.titech.ac.jp\n   Ken'ichi Handa\n   Electrotechnical\
    \ Laboratory\n   Umezono 1-1-4, Tsukuba,\n   Ibaraki 305, JAPAN\n   Phone: +81-298-58-5916\n\
    \   Fax: +81-298-58-5918\n   EMail: handa@etl.go.jp\n"
