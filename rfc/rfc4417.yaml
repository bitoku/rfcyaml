- title: __initial_text__
  contents:
  - '               Report of the 2004 IAB Messaging Workshop

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document reports the outcome of a workshop held by the Internet\n\
    \   Architecture Board (IAB) on the future of Internet messaging.  The\n   workshop\
    \ was held on 6 and 7 October 2004 in Burlingame, CA, USA.\n   The goal of the\
    \ workshop was to examine the current state of\n   different messaging technologies\
    \ on the Internet (including, but not\n   limited to, electronic mail, instant\
    \ messaging, and voice messaging),\n   to look at their commonalities and differences,\
    \ and to find\n   engineering, research, and architectural topics on which future\
    \ work\n   could be done.  This report summarizes the discussions and\n   conclusions\
    \ of the workshop and of the IAB.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Methodology .....................................................4\n  \
    \ 3. Issues ..........................................................5\n    \
    \  3.1. Authorization ..............................................5\n      3.2.\
    \ Multiple Communication Channels ............................6\n      3.3. Negotiation\
    \ ................................................8\n      3.4. User Control ...............................................9\n\
    \      3.5. Message Transport ..........................................9\n  \
    \    3.6. Identity Hints and Key Distribution .......................10\n   4.\
    \ Recommendations ................................................11\n      4.1.\
    \ Authorization .............................................11\n      4.2. Multiple\
    \ Communication Channels ...........................12\n      4.3. Negotiation\
    \ ...............................................13\n      4.4. User Control ..............................................13\n\
    \      4.5. Message Transport .........................................14\n  \
    \    4.6. Identity Hints and Key Distribution .......................16\n   5.\
    \ Security Considerations ........................................16\n   6. Acknowledgements\
    \ ...............................................16\n   Appendix A.  Participants\
    \ .........................................17\n   Appendix B.  Pre-Workshop Papers\
    \ ..................................18\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Current email infrastructure is a mixture of facilities\
    \ to accomplish\n   its task of end-to-end communications through a relay mesh.\
    \  That\n   mixture has come about as requirements have changed over the years.\n\
    \   Discussions recur over the years, often including complaints that\n   some\
    \ desired features of email (such as internationalization,\n   efficient encoding\
    \ of structured data, trusted communication) are\n   ill-served by the current\
    \ infrastructure, or that some of the current\n   infrastructure seems to be adversely\
    \ affected by current problems on\n   the Internet (most recently including problems\
    \ such as spam, viruses,\n   and lack of security infrastructure).  For many years,\
    \ the daunting\n   task of revamping email infrastructure has been considered,\
    \ with\n   justifiably little enthusiasm for taking on such a task.  However,\n\
    \   there has been some recent informal discussion on the kinds of things\n  \
    \ that would be desirable in a \"next generation\" email.\n   At the same time,\
    \ other messaging infrastructures (including those\n   associated with \"instant\
    \ messaging\" and \"web logging\") are currently\n   being deployed that appear\
    \ to address many of the above desired\n   features and outstanding problems,\
    \ while adding many features not\n   currently considered part of traditional\
    \ email (like prior-consent-\n   based acceptance of messages).  However, each\
    \ of these technologies\n   (at least in their current deployment) seem to lack\
    \ some of the\n   features commonly associated with email (such as selective and\n\
    \   partial message delivery, queued multi-hop relaying, offline message\n   management,\
    \ and efficient non-textual content delivery).\n   The Internet Architecture Board\
    \ (IAB) believed that the time was ripe\n   to examine the current state of messaging\
    \ technologies on the\n   Internet and to see if there are areas of work that\
    \ can be taken on\n   to advance these technologies.  Therefore, the IAB held\
    \ a workshop on\n   Internet messaging, taking some of the above issues as input,\
    \ in\n   order to formulate some direction for future study of the area of\n \
    \  messaging.\n   The topic of messaging is broad, and the boundaries of what\
    \ counts as\n   messaging are not always well-defined.  Rather than limit themselves\n\
    \   to a philosophical discussion of the nature of messages, the workshop\n  \
    \ participants adopted the attitude of \"we know it when we see it\" and\n   used\
    \ as their primary examples such well-established types of\n   messaging as email\
    \ and instant messaging (IM), while also discussing\n   more \"peripheral\" types\
    \ of messaging such as voice messaging and\n   event notifications.  (Message\
    \ queuing systems with guaranteed\n   delivery and transactional integrity, such\
    \ as those used in\n   enterprise workflow engines and some \"web services\" architectures,\n\
    \   were operationally if not intentionally out of scope.)  The\n   participants\
    \ worked to discover common themes that apply to all the\n   types of messaging\
    \ under consideration.  Among the themes identified\n   were the following:\n\
    \   o  Authorization of senders and recipients\n   o  Negotiation of messaging\
    \ parameters\n   o  Consent models and privacy\n   o  Identity hints, reputation,\
    \ and key distribution\n   o  Cross-protocol unification of messaging models\n\
    \   o  Enabling greater user control over messaging\n   o  Transport issues (unreliable\
    \ links, push/pull, etc.)\n   o  Message organization (e.g., conversations and\
    \ threading)\n   Purposely missing from the foregoing list is the topic of unsolicited\n\
    \   commercial email or unsolicited bulk email (UCE or UBE, colloquially\n   known\
    \ as \"spam\") and analogous communications in other messaging\n   environments\
    \ such as instant messaging (\"spim\") and Internet\n   telephony (\"spit\").\
    \  While this topic was an impetus for the IAB's\n   holding the workshop, it\
    \ was kept off the workshop agenda due to\n   concerns that it would crowd out\
    \ discussion of other messaging-\n   related issues.  The more general topics\
    \ of authorization and\n   identity were thought to be broad enough to cover the\
    \ architectural\n   issues involved with spam without devolving into more unproductive\n\
    \   discussions.\n   This document is structured so as to provide an overview\
    \ of the\n   discussion flow as well as proposed recommendations of the workshop.\n\
    \   Section 3 summarizes the discussions that occurred during the\n   workshop\
    \ on various topics or themes, while Section 4 provides an\n   overview of recommended\
    \ research topics and protocol definition\n   efforts that resulted from the workshop.\
    \  Section 5 provides some\n   perspective on the security-related aspects of\
    \ the topics discussed\n   during the workshop.  Appendix B lists the pre-workshop\
    \ topic papers\n   submitted by workshop participants as background for the workshop\n\
    \   discussions.\n"
- title: 2.  Methodology
  contents:
  - "2.  Methodology\n   Prior to the workshop, brief topic papers were submitted\
    \ to set the\n   context for the discussions to follow; a list of the papers and\
    \ their\n   authors is provided in Appendix B of this document.\n   During the\
    \ workshop itself, discussion centered on several topics or\n   themes, as summarized\
    \ in the following sections.  Naturally, it was\n   not possible in a two-day\
    \ workshop to treat these topics in depth;\n   however, rough consensus was reached\
    \ on the importance of these\n   topics, if not always on the details of potential\
    \ research programs\n   and protocol standardization efforts that might address\
    \ the issues\n   raised.  It is hoped that these summaries will inspire work by\n\
    \   additional investigators.\n   The in-workshop discussions quite naturally\
    \ fell into three kinds of\n   \"tracks\": (1) possible engineering tasks to recommend\
    \ to the IESG and\n   other standardization groups, (2) \"blue sky\" research\
    \ topics to\n   recommend to the IRTF and other researchers, and (3) general\n\
    \   architectural or \"framework\" issues for consideration by both\n   engineers\
    \ and researchers alike.  After a full-group discussion each\n   morning to identify\
    \ possible topics for more in-depth investigation,\n   participants self-selected\
    \ for involvement in one of three \"break-\n   out\" sessions.  Toward the end\
    \ of each day, the full groups\n   reconvened, gathered reports from the break-out\
    \ discussion leaders,\n   and attempted to come to consensus regarding lessons\
    \ learned and\n   recommendations for further research.  The results of the two-day\n\
    \   workshop therefore consist of discussion issues and research/\n   engineering\
    \ recommendations related to the six topics described in\n   this report.\n"
- title: 3.  Issues
  contents:
  - '3.  Issues

    '
- title: 3.1.  Authorization
  contents:
  - "3.1.  Authorization\n   It is one thing for a sender to send a message, and another\
    \ thing for\n   the intended recipient to accept it.  The factors that lead a\n\
    \   recipient to accept a message include the identity of the sender,\n   previous\
    \ experience with the sender, the existence of an ongoing\n   conversation between\
    \ the parties, meta-data about the message (e.g.,\n   its subject or size), the\
    \ message medium (e.g., email vs. IM), and\n   temporal or psychological factors.\
    \  Authorization or acceptance\n   applies most commonly at the level of the message\
    \ or the level of the\n   sender, and occasionally also at other levels (conversation\
    \ thread,\n   medium, sender domain).\n   Traditionally, sender authorization\
    \ has been handled by recipient-\n   defined block and allow lists (also called\
    \ \"blacklists\" and\n   \"whitelists\").  Block lists are of limited value, given\
    \ the ease of\n   gaining or creating new messaging identities (e.g., an email\
    \ address\n   or IM address).  Allow lists are much more effective (since the\
    \ list\n   of people you like or want to communicate with is smaller than the\n\
    \   large universe of people you don't), but they make it difficult for a\n  \
    \ sender to initiate communication with a new or previously unknown\n   recipient.\
    \  The workshop participants discussed several ways around\n   this problem, including\
    \ reputation systems and better ways for one\n   person to introduce another person\
    \ to a third party (e.g., through\n   signed invitations).\n   Reputation systems\
    \ may be especially worthy of future research, since\n   they emulate a pattern\
    \ that is familiar from real life.  (It may also\n   be valuable to distinguish\
    \ between (1) reputation as the reactive\n   assessment of a sender created by\
    \ one or more recipients based on\n   message history and (2) accreditation as\
    \ a proactive assessment\n   provided by trusted third parties.)  Reputation might\
    \ be based on\n   summing an individual's \"scores\" provided by recipients on\
    \ the\n   network.  (Naturally, the more important reputation becomes, the more\n\
    \   bad actors might attempt to sabotage any given reputation system, so\n   that\
    \ a distributed as opposed to centralized system might be more\n   desirable.)\
    \  The actions taken by any given recipient based on the\n   sender's reputation\
    \ would not necessarily be limited to a simple\n   allow/deny decision; more subtle\
    \ actions might include placing\n   messages from individuals with lower reputation\
    \ scores into separate\n   inboxes or redirecting them to other media (e.g., from\
    \ IM to email).\n"
- title: 3.2.  Multiple Communication Channels
  contents:
  - "3.2.  Multiple Communication Channels\n   It is a fact of life that many people\
    \ use multiple forms of messaging\n   channels: phone, email, IM, pager, and so\
    \ on.  Unfortunately, this\n   can make it difficult for a sender or initiator\
    \ to know the best way\n   to contact a recipient at any given time.  One model\
    \ is for the\n   initiator to guess, for example, by first sending an email message\n\
    \   and then escalating to pager or telephone if necessary; this may\n   result\
    \ in delivery of redundant messages to the recipient.  A second\n   model is for\
    \ the recipient to publish updated contact information on\n   a regular basis,\
    \ perhaps as one aspect of his or her presence; this\n   might enable the initiator\
    \ to determine beforehand which contact\n   medium is most appropriate.  A third\
    \ model is for the recipient to\n   use some kind of \"unifier\" service that\
    \ enables intelligent routing\n   of messages or notifications to the recipient\
    \ based on a set of\n   delivery rules (e.g., \"notify me via pager if I receive\
    \ a voicemail\n   message from my boss after 17:00\").\n   The workshop participants\
    \ did not think it necessary to choose\n   between these models, but did identify\
    \ several issues that are\n   relevant in unifying or at least coordinating communication\
    \ across\n   multiple messaging channels:\n   o  While suppression of duplicate\
    \ messages could be enabled by\n      setting something like a \"seen\" flag on\
    \ copies received via\n      different messaging media, in general the correlation\
    \ of multi-\n      channel, multi-message exchanges is not well supported by existing\n\
    \      standards.\n   o  A recipient could communicate his or her best contact\
    \ mechanism to\n      the initiator by explicitly granting permission to the initiator,\n\
    \      perhaps by means of a kind of \"authorization token\".\n   o  It may be\
    \ worthwhile to define frameworks or protocols for\n      recipient-defined delivery\
    \ rules.  Currently, routing decisions\n      tend to be made mostly by the sender\
    \ through the choice of a\n      messaging channel, but in the future the recipient\
    \ may play a\n      larger role in such decisions.\n   o  The logic behind contact\
    \ publication needs to be explored, for\n      example, whether it is an aspect\
    \ of or extension to presence and\n      whether contact addresses for one medium\
    \ are best obtained by\n      communicating in a different medium (\"email me\
    \ to get my mobile\n      number\").\n   A multiplicity of delivery channels also\
    \ makes it more complex for a\n   senders to establish a \"reliable\" relationship\
    \ with a recipient.\n   From the sender's point of view, it is not obvious that\
    \ a recipient\n   on one channel is the same recipient on another channel.  How\
    \ these\n   recipient \"identities\" are tied together is an open question.\n\
    \   Another area for investigation is that of recipient capabilities.\n   When\
    \ the sender does not have capability information, the most common\n   result\
    \ is downgrading to a lowest common denominator of\n   communication, which seriously\
    \ underutilizes the capabilities of the\n   entire system.  Previous standards\
    \ efforts (e.g., LDAP, Rescap,\n   vCard, Conneg) have attempted to address parts\
    \ of the capability\n   puzzle, but without great success.\n   The existing deployment\
    \ model uses several out-of-band mechanisms for\n   establishing communications\
    \ in the absence of programmatic\n   capabilities information.  Many of these\
    \ mechanisms are based on\n   direct human interaction and social policies, which\
    \ in many cases are\n   quite efficient and more appropriate than any protocol-based\
    \ means.\n   However, a programmatic means for establishing communications between\n\
    \   \"arms length\" parties (e.g., business-to-business and business-to-\n   customer\
    \ relationships) might be very beneficial.\n   Any discussion of relationships\
    \ inevitably leads to a discussion of\n   trust (e.g., \"from what kinds of entities\
    \ do I want to receive\n   messages?\").  While this is a large topic, the group\
    \ did discuss\n   several ideas that might make it easier to broker communications\n\
    \   within different relationships, including:\n   o  Whitelisting is the explicit\
    \ definition of a relationship from the\n      recipient's point of view, consisting\
    \ of a list of senders with\n      whom a recipient is willing to engage in conversation.\
    \  While\n      allow lists can be a workable solution, they are a relatively\n\
    \      static authorization scheme.\n   o  Token-based authorization enables the\
    \ recipient to define a one-\n      time or limited-time relationship with a sender.\
    \  The issuer\n      possesses a token that grants a limited-time right to communicate\n\
    \      with the recipient.  This is a more dynamic authorization scheme.\n   o\
    \  Rule-based authorization involves an algorithmic assessment of the\n      viability\
    \ of a relationship based on a wide set of criteria.  This\n      is a more general\
    \ authorization scheme that can incorporate both\n      allow lists and tokens,\
    \ plus additional evaluation criteria such\n      as message characterization\
    \ and issuer characterization.\n"
- title: 3.3.  Negotiation
  contents:
  - "3.3.  Negotiation\n   In the area of negotiation, the workshop participants focused\
    \ mainly\n   on the process by which a set of participants agree on the media\
    \ and\n   parameters by which they will communicate.  (One example of the end\n\
    \   result of such a \"rendezvous\" negotiation is a group of colleagues\n   who\
    \ agree to hold a voice conference, with a textual \"groupchat\" as a\n   secondary\
    \ communications channel.)  In order to enable cross-media\n   negotiation, it\
    \ may be necessary to establish a bridge between\n   various identities.  For\
    \ example, the negotiation may occur via\n   email, but the communication may\
    \ occur via phone, and in order to\n   authorize participants the conference software\
    \ needs to know their\n   phone numbers, not their email addresses.  Furthermore,\
    \ the\n   parameters to be negotiated may include a wide variety of aspects,\n\
    \   including:\n   o  Prerequisites for the communication (e.g., distribution\
    \ of a\n      \"backgrounder\" document).\n   o  Who will initiate the communication.\n\
    \   o  Who will participate in the communication.\n   o  The primary \"venue\"\
    \ (e.g., a telephone number that all\n      participants will call).\n   o  One\
    \ or more secondary venues (e.g., a chatroom address).\n   o  Backup plans if\
    \ the primary or secondary venue is not available.\n   o  The topic or topics\
    \ for the discussion.\n   o  The identities of administrators or moderators.\n\
    \   o  Whether or not the discussion will be logged or recorded.\n   o  Scheduling\
    \ of the event, including recurrence (e.g., different\n      instances may have\
    \ different venues or other details).\n   Indeed, in some contexts it might even\
    \ be desirable to negotiate or\n   re-negotiate parameters after communication\
    \ has already begun (e.g.,\n   to invite new participants or change key parameters\
    \ such as logging).\n   While the workshop participants recognized that in-depth\
    \ negotiation\n   of a full set of parameters is likely to be unnecessary in many\n\
    \   classes of communication, parts of a generalized framework or\n   protocol\
    \ for the negotiation of multiparty communication might prove\n   useful in a\
    \ wide range of applications and contexts.\n"
- title: 3.4.  User Control
  contents:
  - "3.4.  User Control\n   A common perception among \"power users\" (and, increasingly,\
    \ average\n   users) on the Internet is that messaging is not sufficiently under\n\
    \   their control.  This is not merely a matter of unsolicited\n   communications,\
    \ but also of managing multiple messaging media and\n   handling the sheer volume\
    \ of messages received from familiar and\n   unfamiliar senders alike.  Currently,\
    \ individuals attempt to cope\n   using various personal techniques and ad hoc\
    \ software tools, but\n   there may be an opportunity to provide more programmatic\
    \ support\n   within Internet protocols and technologies.\n   One area of investigation\
    \ is message filtering.  Based on certain\n   information -- the identity of the\
    \ sender and/or recipient(s), the\n   sender's reputation, the message thread\
    \ or conversational context,\n   message headers, message content (e.g., the presence\
    \ of attachments),\n   and environmental factors such as time of day or personal\
    \ mood -- a\n   user or agent may decide to take one of a wide variety actions\
    \ with\n   regard to a message (bounce, ignore, forward, file, replicate,\n  \
    \ archive, accept, notify, etc.).  While it is an open question how\n   much formalization\
    \ would be necessary or even helpful in this\n   process, the workgroup participants\
    \ identified several areas of\n   possible investigation:\n   o  Cross-media threads\
    \ and conversations -- it may be helpful to\n      determine ways to tag messages\
    \ as belonging to a particular thread\n      or conversation across media (e.g.,\
    \ a forum discussion that\n      migrates to email or IM), either during or after\
    \ a message\n      exchange.\n   o  Communication hierarchies -- while much of\
    \ the focus is on\n      messages, often a message does not stand alone but exists\
    \ in the\n      context of higher-level constructs such as a thread (i.e., a\n\
    \      coherent or ordered set of messages within a medium), a\n      conversation\
    \ (i.e., a set of threads that may cross media), or an\n      activity (a set\
    \ of conversations and related resources, such as\n      documents).\n   o  Control\
    \ protocols -- the workgroup participants left as an open\n      question whether\
    \ there may be a need for a cross-service control\n      protocol for use in managing\
    \ communications across messaging\n      media.\n"
- title: 3.5.  Message Transport
  contents:
  - "3.5.  Message Transport\n   Different messaging media use different underlying\
    \ transports.  For\n   instance, some messaging systems are more tolerant of slow\
    \ links or\n   lossy links, while others may depend on less loss-tolerant transport\n\
    \   mechanisms.  Integrating media that have different transport profiles\n  \
    \ can be difficult.  For one, assuming that the same addressing\n   endpoint represents\
    \ the same entity over time may not be warranted\n   (it is possible that further\
    \ work in identifying, addressing, and\n   discovering endpoints may be appropriate,\
    \ even at the URI level).  It\n   is also possible that the same endpoint or entity\
    \ could be available\n   via different transport mechanisms at different times,\
    \ or even\n   available via multiple transports at the same time.  The process\
    \ of\n   choosing an appropriate transport mechanism when there are multiple\n\
    \   paths introduces addressing issues that have not yet been dealt with\n   in\
    \ Internet protocol development (possible heuristics might include\n   predictive\
    \ routing, opportunistic routing, and scheduled routing).\n   For links that can\
    \ be unreliable, there may be value in being able to\n   gracefully restart the\
    \ link after any given failure, possibly by\n   switching to a different transport\
    \ mechanism.\n   Another issue that arises in cross-media and cross-transport\n\
    \   integration is synchronization of references.  This applies to\n   particular\
    \ messages but might also apply to message fragments.  It\n   may be desirable\
    \ for some message fragments, such as large ancillary\n   data, to be transported\
    \ separately from others, for example small\n   essential text data.  Message\
    \ fragments might also be forwarded,\n   replicated, archived, etc., separately\
    \ from other parts of a message.\n   One factor relevant to synchronization across\
    \ transports is that some\n   messaging media are push-oriented (e.g., IM) whereas\
    \ others are\n   generally pull-oriented (e.g., email); when content is pushed\
    \ to a\n   recipient in one medium before it has been pulled by the recipient\
    \ in\n   another medium, it is possible for content references to get out of\n\
    \   sync.\n   If message fragments can be transported over different media,\n\
    \   possibly arriving at separate times or through separate paths, the\n   issue\
    \ of package security becomes a serious one.  Traditionally,\n   messages are\
    \ secured by encrypting the entire package at the head end\n   and then decrypting\
    \ it on the receiving end.  However, if we want to\n   allow transports to fragment\
    \ messages based upon the media types of\n   the parts, that approach will not\
    \ be feasible.\n"
- title: 3.6.  Identity Hints and Key Distribution
  contents:
  - "3.6.  Identity Hints and Key Distribution\n   While it is widely recognized that\
    \ both message encryption and\n   authentication of conversation partners are\
    \ highly desirable, the\n   consensus of the workshop participants was that current\
    \ business and\n   implementation models in part discourage deployment of existing\n\
    \   solutions.  For example, it is often hard to get new root\n   certificates\
    \ installed in clients, certificates are (or are perceived\n   to be) difficult\
    \ or expensive to obtain, one-click or zero-click\n   service enrollment is a\
    \ worthy but seemingly unreachable goal, and\n   once one has created a public/private\
    \ key pair and certified the\n   public key, it is less than obvious how to distribute\
    \ that\n   certificate or discover other people's certificates.\n   One factor\
    \ that may make widespread message encryption more feasible\n   is that email,\
    \ instant messaging, and Internet telephony have quite\n   similar trust models.\
    \  Yet the definition of communication differs\n   quite a bit between these technologies:\
    \ in email \"the message is the\n   thing\", and it is a discrete object in its\
    \ own right; in telephony\n   the focus is on the real-time flow of a conversation\
    \ or session\n   rather than discrete messages; and IM seems to hold a mediate\n\
    \   position since it is centered on the rapid, back-and-forth exchange\n   of\
    \ text messages (which can be seen as messaging sessions).\n   Another complicating\
    \ factor is the wide range of contexts in which\n   messaging technologies are\
    \ used: everything from casual conversations\n   in public chatrooms and social\
    \ networking applications, through\n   communications between businesses and customers,\
    \ to mission-critical\n   business-to-business applications such as supply chain\
    \ management.\n   Different audiences may have different needs with regard to\
    \ messaging\n   security and identity verification, resulting in varying demand\
    \ for\n   services such as trusted third parties and webs of trust.\n   In the\
    \ context of communication technologies, identity hints --\n   shared knowledge,\
    \ conversational styles, voice tone, messaging\n   patterns, vocabulary, and the\
    \ like -- can often provide more useful\n   information than key fingerprints,\
    \ digital signatures, and other\n   electronic artifacts, which are distant from\
    \ the experience of most\n   end users.  To date, the checking of such identity\
    \ hints is intuitive\n   rather than programmatic.\n"
- title: 4.  Recommendations
  contents:
  - '4.  Recommendations

    '
- title: 4.1.  Authorization
  contents:
  - "4.1.  Authorization\n   The one clearly desired engineering project that came\
    \ out of the\n   authorization discussion was a distributed reputation service.\
    \  It\n   was agreed that whatever else needed to be done in regard to\n   authorization\
    \ of messages, at some point the recipient of the message\n   would want to be\
    \ able to check the reputation of the sender of the\n   message.  This is especially\
    \ useful in the case of senders with whom\n   the recipient has no prior experience;\
    \ i.e., using a reputation\n   service as a way to get an \"introduction to a\
    \ stranger\".  There was\n   clearly a need for this reputation service to be\
    \ decentralized;\n   though a single centralized reputation service can be useful\
    \ in some\n   contexts, it does not scale to an Internet-wide service.\n   Two\
    \ potential research topics in authorization were discussed.\n   First, a good\
    \ deal of discussion centered around the use of\n   whitelists and blacklists\
    \ in authorization decision, but it was\n   thought that research was necessary\
    \ to examine the relative\n   usefulness of each of the approaches fully.  It\
    \ was clear to the\n   participants that blacklists can weed out known non-authorized\n\
    \   senders, but do not stop \"aggressive\" unwanted senders because of the\n\
    \   ease of simply obtaining a new identity.  Whitelists can be useful\n   for\
    \ limiting messages to only those known to the recipient, but would\n   require\
    \ the use of some sort of introduction service in order to\n   allow for messages\
    \ from unknown parties.  Participants also thought\n   that there might be useful\
    \ architectural work done in this area.\n   The other potential research area\
    \ was in recipient responses to\n   authorization decisions.  Upon making an authorization\
    \ decision,\n   recipients have to do two things: First, obviously the recipient\
    \ must\n   dispatch the message in some way either to deliver it or to deny it.\n\
    \   But that decision will also have side effects back into the next set\n   of\
    \ authorization decisions the recipient may make.  The decision may\n   feed back\
    \ into the reputation system, either \"lauding\" or \"censuring\"\n   the sender\
    \ of the message.\n"
- title: 4.2.  Multiple Communication Channels
  contents:
  - "4.2.  Multiple Communication Channels\n   Several interesting and potentially\
    \ useful ideas were discussed\n   during the session, which the participants worked\
    \ to transform into\n   research or engineering tasks, as appropriate.\n   In\
    \ the area of contact information management, the workshop\n   participants identified\
    \ a possible engineering task to define a\n   service that publishes contact information\
    \ such as availability,\n   capabilities, channel addresses (routing information),\
    \ preferences,\n   and policies.  While aspects of this work have been attempted\n\
    \   previously within the IETF (with varying degrees of success), there\n   remain\
    \ many potential benefits with regard to managing business-to-\n   business and\
    \ business-to-customer relationships.\n   The problem of suppressing redundant\
    \ messages is becoming more\n   important as the use of multiple messaging channels\
    \ becomes the rule\n   for most Internet users, and as users become accustomed\
    \ to receiving\n   notifications in one channel of communications received in\
    \ another\n   channel.  Unfortunately, there are essentially no standards for\n\
    \   cross-referencing and linking of messages across channels; standards\n   work\
    \ in this area may be appropriate.\n   Another possible engineering task is defining\
    \ a standardized\n   representation for the definition and application of recipient\n\
    \   message processing rules.  Such an effort would extend existing work\n   on\
    \ the Sieve language within the IETF to incorporate some of the\n   concepts discussed\
    \ above.\n   Discussion of token-based authorization focused on the concept of\n\
    \   defining a means for establishing time-limited or usage-limited\n   relationships\
    \ for exchanging messages.  The work would attempt to\n   define the identity,\
    \ generation, and use of tokens for authorization\n   purposes.  Most likely this\
    \ is more of a research topic than an\n   engineering topic.\n   Work on recipient\
    \ rules processing and token-based authentication may\n   be related at a higher\
    \ level of abstraction (we can call it\n   \"recipient authorization processing\"\
    ).  When combined with insights\n   into authorization (see Sections 3.1 and 4.1),\
    \ this may be an\n   appropriate topic for further research.\n"
- title: 4.3.  Negotiation
  contents:
  - "4.3.  Negotiation\n   Discussion in the area of negotiation resulted mostly in\
    \ research-\n   oriented output.  The session felt that participants in a\n  \
    \ conversation would require some sort of rendezvous mechanism during\n   which\
    \ the parameters of the conversation would be negotiated.  To\n   facilitate this,\
    \ a \"conversation identifier\" would be needed so that\n   participants could\
    \ identify the conversation that they wished to\n   participate in.  In addition,\
    \ there are at least five dimensions\n   along which a conversation negotiation\
    \ may occur:\n   o  The participants in the conversation\n   o  The topic for\
    \ the conversation\n   o  The scheduling and priority parameters\n   o  The mechanism\
    \ used for the conversation\n   o  The capabilities of the participants\n   o\
    \  The logistical details of the conversation\n   Research into how to communicate\
    \ these different parameters may prove\n   useful, as may research into the relationship\
    \ between the concepts of\n   negotiation, rendezvous, and conversation.\n"
- title: 4.4.  User Control
  contents:
  - "4.4.  User Control\n   A clear architectural topic to come out of the user control\n\
    \   discussion was work on activities, conversations, and threads.  In\n   the\
    \ course of the discussion, the user's ability to organize messages\n   into threads\
    \ became a focus.  The participants got some start on\n   defining threads as\
    \ a semi-ordered set of messages, a conversation as\n   a set of threads, and\
    \ an activity as a collection of conversations\n   and related resources.  The\
    \ discussion expanded the traditional\n   notion of a thread as an ordered tree\
    \ of messages.  Conversations can\n   collect together threads and have them be\
    \ cross-media.  Messages can\n   potentially belong to more than one thread. \
    \ Threads themselves might\n   have subthreads.  All of these topics require an\
    \ architectural\n   overview to be brought into focus.\n   There is also engineering\
    \ work that is already at a sufficient level\n   of maturity to be undertaken\
    \ on threads.  Though there is certainly\n   some simple threading work being\
    \ done now with messaging, it is\n   pretty much useful only for a unidirectional\
    \ tree of messages in a\n   single context.  Engineering work needs to be done\
    \ on identifiers\n   that could used in threads that cross media.  Additionally,\
    \ there is\n   likely work to be done for messages that may not be strictly ordered\n\
    \   in a thread.\n   The topics of \"control panels\" and automated introductions\
    \ were\n   deemed appropriate for further research.\n"
- title: 4.5.  Message Transport
  contents:
  - "4.5.  Message Transport\n   A central research topic that came out of the transport\
    \ session was\n   that of multiple transports.  It was felt that much research\
    \ could be\n   done on the idea of transporting pieces of messages over separate\n\
    \   transport media in order to get the message to its final destination.\n  \
    \ Especially in some high-latency, low-bandwidth environments, the\n   ability\
    \ to run parallel transports with different parts of messages\n   could be extremely\
    \ advantageous.  The hard work in this area is\n   re-associating all of the pieces\
    \ in a timely manner, and identifying\n   the single destination of the message\
    \ when addressing will involve\n   multiple media.\n   A common theme that arose\
    \ in several of the discussions (including\n   user control and message unification),\
    \ but that figured prominently\n   in the transport discussion, was a need for\
    \ some sort of identifier.\n   In the transport case, identifiers are necessary\
    \ on two levels.\n   Identifiers are needed to mark the endpoints in message transport.\n\
    \   As described in the discussion, there are many cases where a message\n   could\
    \ reasonably be delivered to different entities that might all\n   correspond\
    \ to a single person.  Some sort of identifier to indicate\n   the target person\
    \ of the message, as well as identifiers for the\n   different endpoints, are\
    \ all required in order to get any traction in\n   this area.  In addition, identifiers\
    \ are also required for the\n   messages being transported, as well as their component\
    \ parts.\n   Certainly, the idea of transporting different parts of a message\
    \ over\n   different mechanisms requires the identification of the containing\n\
    \   message so that re-assembly can occur at the receiving end.  However,\n  \
    \ identifying the entire package is also necessary for those cases\n   where duplicate\
    \ copies of a message might be sent using two different\n   mechanisms: The receiving\
    \ end needs to find out that it has already\n   received a copy of the message\
    \ through one mechanism and identify\n   that another copy of the message is simply\
    \ a duplicate.\n   Workshop participants felt that, at the very least, a standard\n\
    \   identifier syntax was a reasonable engineering work item that could\n   be\
    \ tackled.  Though there exist some identifier mechanisms in current\n   messaging\
    \ protocols, none were designed to be used reliably across\n   different transport\
    \ environments or in multiple contexts.  There is\n   already a reasonable amount\
    \ of engineering work done in the area of\n   uniform resource identifiers (URI)\
    \ that participants felt could be\n   leveraged.  Syntax would be required for\
    \ identifiers of messages and\n   their components as well as for identifiers\
    \ of endpoint entities.\n   Work on the general problem of identifier use might\
    \ have some\n   tractable engineering aspects, especially in the area of message\
    \ part\n   identifiers, but workshop participants felt that more of the work was\n\
    \   ripe for research.  The ability to identify endpoints as belonging to\n  \
    \ a single recipient, and to be able to distribute identifiers of those\n   endpoints\
    \ with information about delivery preferences, is certainly\n   an area where\
    \ research could be fruitful.  Additionally, it would be\n   worthwhile to explore\
    \ the collection of identified message components\n   transported through different\
    \ media, while delivering to the correct\n   end-recipient with duplicate removal\
    \ and re-assembly.\n   Package security was seen as an area for research.  As\
    \ described in\n   Section 3.5, the possibility that different components of messages\n\
    \   might travel over different media and need to be re-assembled at the\n   recipient\
    \ end breaks certain end-to-end security assumptions that are\n   currently made.\
    \  Participants felt that a worthwhile research goal\n   would be to examine security\
    \ mechanisms that could be used for such\n   multi-component messages without\
    \ sacrificing desirable security\n   features.\n   Finally, a more architectural\
    \ topic was that of restartability.  Most\n   current message transports, in the\
    \ face of links with reliability\n   problems, will cancel and restart the transport\
    \ of a message from the\n   beginning.  Though some mechanisms do exist for restart\
    \ mid-session,\n   they are not widely implemented, and they certainly can rarely\
    \ be\n   used across protocol boundaries.  Some architectural guidance on\n  \
    \ restart mechanisms would be a useful addition.\n"
- title: 4.6.  Identity Hints and Key Distribution
  contents:
  - "4.6.  Identity Hints and Key Distribution\n   It would be helpful to develop\
    \ Internet-wide services to publish and\n   retrieve keying material.  One possible\
    \ solution is to build such a\n   service into Secure DNS, perhaps as an engineering\
    \ item in an\n   existing working group.  However, care is needed since that would\n\
    \   significantly increase the size and scope of DNS.  A more research-\n   oriented\
    \ approach would be to investigate the feasibility of building\n   Internet-wide\
    \ key distribution services outside of DNS.  In doing so,\n   it is important\
    \ to keep in mind that the problem of distribution is\n   separate from the problem\
    \ of enrollment, and that name subordination\n   (control over what entities are\
    \ allowed to create sub-domains)\n   remains necessary.\n   Research may be needed\
    \ to define the different audiences for message\n   security.  For example, users\
    \ of consumer-oriented messaging services\n   on the open Internet may not generally\
    \ be willing or able to install\n   new trusted roots in messaging client software,\
    \ which may hamper the\n   use of security technologies between businesses and\
    \ customers.  By\n   contrast, within a single organization it may be possible\
    \ to deploy\n   new trusted roots more widely, since (theoretically) all of the\n\
    \   organization's computing infrastructure is under the centralized\n   control.\n\
    \   In defining security frameworks for messaging, it would be helpful to\n  \
    \ specify more clearly the similarities and differences among various\n   messaging\
    \ technologies with regard to trust models and messaging\n   metaphors (e.g.,\
    \ stand-alone messages in email, discrete\n   conversations in telephony, messaging\
    \ sessions in instant messaging).\n   The implications of these trust models and\
    \ messaging metaphors for\n   communications security have not been widely explored.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   Security is discussed in several sections of\
    \ this document,\n   especially Sections 3.5, 3.6, 4.5, and 4.6.\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   The IAB would like to thank QUALCOMM Incorporated for\
    \ their\n   sponsorship of the meeting rooms and refreshments.\n   The editors\
    \ would like to thank all of the workshop participants.\n   Eric Allman, Ted Hardie,\
    \ and Cullen Jennings took helpful notes,\n   which eased the task of writing\
    \ this document.\n"
- title: Appendix A.  Participants
  contents:
  - "Appendix A.  Participants\n   Eric Allman\n   Nathaniel Borenstein\n   Ben Campbell\n\
    \   Dave Crocker\n   Leslie Daigle\n   Mark Day\n   Mark Crispin\n   Steve Dorner\n\
    \   Lisa Dusseault\n   Kevin Fall\n   Ned Freed\n   Randy Gellens\n   Larry Greenfield\n\
    \   Ted Hardie\n   Joe Hildebrand\n   Paul Hoffman\n   Steve Hole\n   Scott Hollenbeck\n\
    \   Russ Housley\n   Cullen Jennings\n   Hisham Khartabil\n   John Klensin\n \
    \  John Levine\n   Rohan Mahy\n   Alexey Melnikov\n   Jon Peterson\n   Blake Ramsdell\n\
    \   Pete Resnick\n   Jonathan Rosenberg\n   Peter Saint-Andre\n   Greg Vaudreuil\n"
- title: Appendix B.  Pre-Workshop Papers
  contents:
  - "Appendix B.  Pre-Workshop Papers\n   The topic papers circulated before the workshop\
    \ were as follows:\n   Calendaring Integration (Nathaniel Borenstein)\n   Channel\
    \ Security (Russ Housley)\n   Collaborative Authoring (Lisa Dusseault)\n   Consent-Based\
    \ Messaging (John Klensin)\n   Content Security (Blake Ramsdell)\n   Event Notifications\
    \ (Joe Hildebrand)\n   Extended Messaging Services (Dave Crocker)\n   Group Messaging\
    \ (Peter Saint-Andre)\n   Identity and Reputation (John Levine)\n   Instant Messaging\
    \ and Presence Issues in Messaging (Ben Campbell)\n   Large Email Environments\
    \ (Eric Allman)\n   Mail/News/Blog Convergence (Larry Greenfield)\n   Messaging\
    \ and Spam (Cullen Jennings)\n   Messaging Metaphors (Ted Hardie)\n   MUA/MDA,\
    \ MUA/MSA, and MUA/Message-Store Interaction (Mark Crispin)\n   Presence for Consent-Based\
    \ Messaging (Jon Peterson)\n   Rich Payloads (Steve Hole)\n   Session-Oriented\
    \ Messaging (Rohan Mahy)\n   Spam Expectations for Mobile Devices (Greg Vaudreuil)\n\
    \   Communication in Difficult-to-Reach Networks (Kevin Fall)\n   Store-and-Forward\
    \ Needs for IM (Hisham Khartabil)\n   Syndication (Paul Hoffman)\n   Transport\
    \ Security (Alexey Melnikov)\n   VoIP Peering and Messaging (Jonathan Rosenberg)\n\
    \   Webmail, MMS, and Mobile Email (Randy Gellens)\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Peter W. Resnick (Editor)\n   Internet Architecture Board\n\
    \   QUALCOMM Incorporated\n   5775 Morehouse Drive\n   San Diego, CA  92121-1714\n\
    \   US\n   Phone: +1 858 651 4478\n   EMail: presnick@qualcomm.com\n   URI:  \
    \ http://www.qualcomm.com/~presnick/\n   Peter Saint-Andre (Editor)\n   Jabber\
    \ Software Foundation\n   P.O.  Box 1641\n   Denver, CO  80201-1641\n   US\n \
    \  Phone: +1 303 308 3282\n   EMail: stpeter@jabber.org\n   URI:   http://www.jabber.org/people/stpeter.shtml\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
