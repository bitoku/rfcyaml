- contents:
  - '         Mobile IPv4 Traversal across IPsec-Based VPN Gateways

    '
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Abstract\n   This document outlines a solution for the Mobile IPv4 (MIPv4) and\n
    \  IPsec coexistence problem for enterprise users.  The solution\n   consists
    of an applicability statement for using Mobile IPv4 and\n   IPsec for session
    mobility in corporate remote access scenarios, and\n   a required mechanism for
    detecting the trusted internal network\n   securely.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .
    . . . . . .  3\n     1.1.  Overview . . . . . . . . . . . . . . . . . . . . .
    . . . .  3\n     1.2.  Scope  . . . . . . . . . . . . . . . . . . . . . . . .
    . .  5\n     1.3.  Related Work . . . . . . . . . . . . . . . . . . . . . . .
    \ 5\n     1.4.  Terms and Abbreviations  . . . . . . . . . . . . . . . . .  5\n
    \    1.5.  Requirement Levels . . . . . . . . . . . . . . . . . . . .  6\n     1.6.
    \ Assumptions and Rationale  . . . . . . . . . . . . . . . .  7\n     1.7.  Why
    IPsec Lacks Mobility . . . . . . . . . . . . . . . . .  8\n   2.  The Network
    Environment  . . . . . . . . . . . . . . . . . . .  9\n     2.1.  Access Mode:
    'c' . . . . . . . . . . . . . . . . . . . . . 12\n     2.2.  Access Mode: 'f'
    . . . . . . . . . . . . . . . . . . . . . 13\n     2.3.  Access Mode: 'cvc' .
    . . . . . . . . . . . . . . . . . . . 13\n     2.4.  Access Mode: 'fvc' . . .
    . . . . . . . . . . . . . . . . . 14\n     2.5.  NAT Traversal  . . . . . . .
    . . . . . . . . . . . . . . . 14\n   3.  Internal Network Detection . . . . .
    . . . . . . . . . . . . . 15\n     3.1.  Assumptions  . . . . . . . . . . . .
    . . . . . . . . . . . 16\n     3.2.  Implementation Requirements  . . . . . .
    . . . . . . . . . 16\n       3.2.1.  Separate Tracking of Network Interfaces  .
    . . . . . . 16\n       3.2.2.  Connection Status Change . . . . . . . . . . .
    . . . . 16\n       3.2.3.  Registration-Based Internal Network Detection  . .
    . . 17\n       3.2.4.  Registration-Based Internal Network Monitoring . . . .
    17\n     3.3.  Proposed Algorithm . . . . . . . . . . . . . . . . . . . . 19\n
    \    3.4.  Trusted Networks Configured (TNC) Extension  . . . . . . . 20\n     3.5.
    \ Implementation Issues  . . . . . . . . . . . . . . . . . . 20\n     3.6.  Rationale
    for Design Choices . . . . . . . . . . . . . . . 21\n       3.6.1.  Firewall Configuration
    Requirements  . . . . . . . . . 21\n       3.6.2.  Registration-Based Internal
    Network Monitoring . . . . 22\n       3.6.3.  No Encryption When Inside  . . .
    . . . . . . . . . . . 22\n     3.7.  Improvements . . . . . . . . . . . . . .
    . . . . . . . . . 22\n   4.  Requirements . . . . . . . . . . . . . . . . . .
    . . . . . . . 23\n     4.1.  Mobile Node Requirements . . . . . . . . . . . .
    . . . . . 23\n     4.2.  VPN Device Requirements  . . . . . . . . . . . . . .
    . . . 23\n     4.3.  Home Agent Requirements  . . . . . . . . . . . . . . . .
    . 24\n   5.  Analysis . . . . . . . . . . . . . . . . . . . . . . . . . . . 24\n
    \    5.1.  Comparison against Guidelines  . . . . . . . . . . . . . . 24\n     5.2.
    \ Packet Overhead  . . . . . . . . . . . . . . . . . . . . . 26\n     5.3.  Latency
    Considerations . . . . . . . . . . . . . . . . . . 27\n     5.4.  Firewall State
    Considerations  . . . . . . . . . . . . . . 27\n     5.5.  Intrusion Detection
    Systems (IDSs) . . . . . . . . . . . . 28\n     5.6.  Implementation of the Mobile
    Node  . . . . . . . . . . . . 28\n     5.7.  Non-IPsec VPN Protocols  . . . .
    . . . . . . . . . . . . . 28\n   6.  Security Considerations  . . . . . . . .
    . . . . . . . . . . . 29\n     6.1.  Internal Network Detection . . . . . . .
    . . . . . . . . . 29\n     6.2.  Mobile IPv4 versus IPsec . . . . . . . . . .
    . . . . . . . 30\n   7.  IANA Considerations  . . . . . . . . . . . . . . . .
    . . . . . 31\n   8.  Acknowledgements . . . . . . . . . . . . . . . . . . . .
    . . . 31\n   9.  References . . . . . . . . . . . . . . . . . . . . . . . . .
    . 32\n     9.1.  Normative References . . . . . . . . . . . . . . . . . . . 32\n
    \    9.2.  Informative References . . . . . . . . . . . . . . . . . . 33\n   Appendix
    A.  Packet Flow Examples  . . . . . . . . . . . . . . . . 34\n     A.1.  Connection
    Setup for Access Mode 'cvc' . . . . . . . . . . 34\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The Mobile IP working group set out to explore the problem
    and\n   solution spaces of IPsec and Mobile IP coexistence.  The problem\n   statement
    and solution requirements for Mobile IPv4 case were first\n   documented in [RFC4093].
    \ This document outlines a solution for IPv4.\n   The document contains two parts:\n
    \  o  a basic solution that is an applicability statement of Mobile IPv4\n      and
    IPsec to provide session mobility between enterprise intranets\n      and external
    networks, intended for enterprise mobile users; and\n   o  a technical specification
    and a set of requirements for secure\n      detection of the internal and the
    external networks, including a\n      new extension that must be implemented by
    a mobile node and a home\n      agent situated inside the enterprise network.\n
    \  There are many useful ways to combine Mobile IPv4 and IPsec.  The\n   solution
    specified in this document is most applicable when the\n   assumptions documented
    in the problem statement [RFC4093] are valid;\n   among others that the solution:\n
    \  o  must minimize changes to existing firewall/VPN/DMZ (DeMilitarized\n      Zone)
    deployments;\n   o  must ensure that traffic is not routed through the DMZ when
    the\n      mobile node is inside (to avoid scalability and management\n      issues);\n
    \  o  must support foreign networks with only foreign agent access;\n   o  should
    not require changes to existing IPsec or key exchange\n      protocols;\n   o
    \ must comply with the Mobile IPv4 protocol (but may require new\n      extensions
    or multiple instances of Mobile IPv4); and\n   o  must propose a mechanism to
    avoid or minimize IPsec re-negotiation\n      when the mobile node moves.\n"
  - contents:
    - "1.1.  Overview\n   Typical corporate networks consist of three different domains:
      the\n   Internet (untrusted external network), the intranet (trusted internal\n
      \  network), and the DMZ, which connects the two networks.  Access to\n   the
      internal network is guarded both by a firewall and a VPN device;\n   access
      is only allowed if both firewall and VPN security policies are\n   respected.\n
      \  Enterprise mobile users benefit from unrestricted seamless session\n   mobility
      between subnets, regardless of whether the subnets are part\n   of the internal
      or the external network.  Unfortunately, the current\n   Mobile IPv4 and IPsec
      standards alone do not provide such a service\n   [tessier].\n   The solution
      is to use standard Mobile IPv4 (except for a new\n   extension used by the home
      agent in the internal network to aid in\n   network detection) when the mobile
      node is in the internal network,\n   and to use the VPN tunnel endpoint address
      for the Mobile IPv4\n   registration when outside.  IPsec-based VPN tunnels
      require re-\n   negotiation after movement.  To overcome this limitation, another\n
      \  layer of Mobile IPv4 is used underneath IPsec, in effect making IPsec\n   unaware
      of movement.  Thus, the mobile node can freely move in the\n   external network
      without disrupting the VPN connection.\n   Briefly, when outside, the mobile
      node:\n   o  detects that it is outside (Section 3);\n   o  registers its co-located
      or foreign agent care-of address with the\n      external home agent;\n   o
      \ establishes a VPN tunnel using, e.g., Internet Key Exchange\n      Protocol
      (IKE) (or IKEv2) if security associations are not already\n      available;\n
      \  o  registers the VPN tunnel address as its co-located care-of address\n      with
      the internal home agent; this registration request is sent\n      inside the
      IPsec tunnel.\n   The solution requires control over the protocol layers in
      the mobile\n   node.  It must be capable of (1) detecting whether it is inside
      or\n   outside in a secure fashion, and (2) controlling the protocol layers\n
      \  accordingly.  For instance, if the mobile node is inside, the IPsec\n   layer
      needs to become dormant.\n   Except for the new Mobile IPv4 extension to improve
      security of\n   internal network detection, current Mobile IPv4 and IPsec standards,\n
      \  when used in a suitable combination, are sufficient to implement the\n   solution.
      \ No changes are required to existing VPN devices or foreign\n   agents.\n   The
      solution described is compatible with different kinds of IPsec-\n   based VPNs,
      and no particular kind of VPN is required.  Because the\n   appropriate Security
      Policy Database (SPD) entries and other IKE and\n   IPsec specifics differ between
      deployed IPsec-based VPN products,\n   these details are not discussed in the
      document.\n"
    title: 1.1.  Overview
  - contents:
    - "1.2.  Scope\n   This document describes a solution for IPv4 only.  The downside
      of\n   the described approach is that an external home agent is required and\n
      \  that the packet overhead (see Section 5) and overall complexity\n   increase.
      \ Optimizations would require significant changes to Mobile\n   IPv4 and/or
      IPsec, and are out of scope of this document.\n   VPN, in this document, refers
      to an IPsec-based remote access VPN.\n   Other types of VPNs are out of scope.\n"
    title: 1.2.  Scope
  - contents:
    - "1.3.  Related Work\n   Related work has been done on Mobile IPv6 in [RFC3776],
      which\n   discusses the interaction of IPsec and Mobile IPv6 in protecting\n
      \  Mobile IPv6 signaling.  The document also discusses dynamic updating\n   of
      the IPsec endpoint based on Mobile IP signaling packets.\n   The \"transient
      pseudo-NAT\" attack, described in [pseudonat] and\n   [mipnat], affects any
      approach that attempts to provide security of\n   mobility signaling in conjunction
      with NAT devices.  In many cases,\n   one cannot assume any cooperation from
      NAT devices, which thus have\n   to be treated as any other networking entity.\n
      \  The IKEv2 Mobility and Multihoming Protocol (MOBIKE) [RFC4555]\n   provides
      better mobility for IPsec.  This would allow the external\n   Mobile IPv4 layer
      described in this specification to be removed.\n   However, deploying MOBIKE
      requires changes to VPN devices, and is\n   thus out of scope of this specification.\n"
    title: 1.3.  Related Work
  - contents:
    - "1.4.  Terms and Abbreviations\n   co-CoA:   co-located care-of address.\n   DMZ:
      \  (DeMilitarized Zone) a small network inserted as a \"neutral\n      zone\"
      between a company's private network and the outside public\n      network to
      prevent outside users from getting direct access to the\n      company's private
      network.\n   external network:   the untrusted network (i.e., Internet).  Note\n
      \     that a private network (e.g., another corporate network) other\n      than
      the mobile node's internal network is considered an external\n      network.\n
      \  FA:   mobile IPv4 foreign agent.\n   FA-CoA:   foreign agent care-of address.\n
      \  FW:   firewall.\n   internal network:   the trusted network; for instance,
      a physically\n      secure corporate network where the i-HA is located.\n   i-FA:
      \  Mobile IPv4 foreign agent residing in the internal network.\n   i-HA:   Mobile
      IPv4 home agent residing in the internal network;\n      typically has a private
      address [privaddr].\n   i-HoA:   home address of the mobile node in the internal
      home agent.\n   MN:   mobile node.\n   NAI:   Network Access Identifier [RFC4282].\n
      \  R:   router.\n   VPN:   Virtual Private Network based on IPsec.\n   VPN-TIA:
      \  VPN tunnel inner address, the address(es) negotiated\n      during IKE phase
      2 (quick mode), assigned manually, using IPsec-\n      DHCP [RFC3456], using
      the \"de facto\" standard Internet Security\n      Association and Key Management
      Protocol (ISAKMP) configuration\n      mode, or by some other means.  Some VPN
      clients use their current\n      care-of address as their Tunnel Inner Address
      (TIA) for\n      architectural reasons.\n   VPN tunnel:   an IPsec-based tunnel;
      for instance, IPsec tunnel mode\n      IPsec connection, or Layer 2 Tunneling
      Protocol (L2TP) combined\n      with IPsec transport connection.\n   x-FA:   Mobile
      IPv4 foreign agent residing in the external network.\n   x-HA:   Mobile IPv4
      home agent residing in the external network.\n   x-HoA:   home address of the
      mobile node in the external home agent.\n"
    title: 1.4.  Terms and Abbreviations
  - contents:
    - "1.5.  Requirement Levels\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
      \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
      and \"OPTIONAL\" in this\n   document are to be interpreted as described in
      BCP 14, RFC 2119\n   [RFC2119].\n"
    title: 1.5.  Requirement Levels
  - contents:
    - "1.6.  Assumptions and Rationale\n   The solution is an attempt to solve the
      problem described in\n   [RFC4093].  The major assumptions and their rationale
      is summarized\n   below.\n   Changes to existing firewall and VPN deployments
      should be minimized:\n   o  The current deployment of firewalls and IPsec-based
      VPNs is much\n      larger than corresponding Mobile IPv4 elements.  Thus, a
      solution\n      should work within the existing VPN infrastructure.\n   o  Current
      enterprise network deployments typically centralize\n      management of security
      and network access into a compact DMZ.\n   When the mobile node is inside, traffic
      should not go through the DMZ\n   network:\n   o  Routing all mobile node traffic
      through the DMZ is seen as a\n      performance problem in existing deployments
      of firewalls.  The\n      more sophisticated firewall technology is used (e.g.,
      content\n      scanning), the more serious the performance problem is.\n   o
      \ Current deployments of firewalls and DMZs in general have been\n      optimized
      for the case where only a small minority of total\n      enterprise traffic
      goes through the DMZ.  Furthermore, users of\n      current VPN remote access
      solutions do not route their traffic\n      through the DMZ when connected to
      an internal network.\n   A home agent inside the enterprise cannot be reached
      directly from\n   outside, even if the home agent contains IPsec functionality:\n
      \  o  Deployment of current combined IPsec/MIPv4 solutions are not\n      common
      in large installations.\n   o  Doing decryption in the home agents \"deep inside\"
      the enterprise\n      effectively means having a security perimeter much larger
      than the\n      typical, compact DMZ used by a majority of enterprises today.\n
      \  o  In order to maintain a security level equal to current firewall/\n      DMZ
      deployments, every home agent decapsulating IPsec would need\n      to do the
      same firewalling as the current DMZ firewalls (content\n      scanning, connection
      tracking, etc.).\n   Traffic cannot be encrypted when the mobile node is inside:\n
      \  o  There is a considerable performance impact on home agents (which\n      currently
      do rather light processing) and mobile nodes (especially\n      for small devices).
      \ Note that traffic throughput inside the\n      enterprise is typically an
      order (or more) of magnitude larger\n      than the remote access traffic through
      a VPN.\n   o  Encryption consumes processing power and has a significant impact\n
      \     on device battery life.\n   o  There is also a usability issue involved;
      the user needs to\n      authenticate the connection to the IPsec layer in the
      home agent\n      to gain access.  For interactive authentication mechanisms
      (e.g.,\n      SecurID), this always means user interaction.\n   o  Furthermore,
      if there is a separate VPN device in the DMZ for\n      remote access, the user
      needs to authenticate to both devices, and\n      might need to have separate
      credentials for both.\n   o  Current Mobile IPv4 home agents do not typically
      incorporate IPsec\n      functionality, which is relevant for the solution when
      we assume\n      zero or minimal changes to existing Mobile IPv4 nodes.\n   o
      \ Note, however, that the assumption (no encryption when inside)\n      does
      not necessarily apply to all solutions in the solution space;\n      if the
      above mentioned problems were resolved, there is no\n      fundamental reason
      why encryption could not be applied when\n      inside.\n"
    title: 1.6.  Assumptions and Rationale
  - contents:
    - "1.7.  Why IPsec Lacks Mobility\n   IPsec, as currently specified [RFC4301],
      requires that a new IKE\n   negotiation be done whenever an IPsec peer moves,
      i.e., changes\n   care-of address.  The main reason is that a security association
      is\n   unidirectional and identified by a triplet consisting of (1) the\n   destination
      address (which is the outer address when tunnel mode is\n   used), (2) the security
      protocol (Encapsulating Security Payload\n   (ESP) or Authentication Header
      (AH)), and (3) the Security Parameter\n   Index (SPI) ([RFC4301], Section 4.1).
      \ Although an implementation is\n   not required to use all of these for its
      own Security Associations\n   (SAs), an implementation cannot assume that a
      peer does not.\n   When a mobile IPsec peer sends packets to a stationary IPsec
      peer,\n   there is no problem; the SA is \"owned\" by the stationary IPsec peer,\n
      \  and therefore the destination address does not need to change.  The\n   (outer)
      source address should be ignored by the stationary peer\n   (although some implementations
      do check the source address as well).\n   The problem arises when packets are
      sent from the stationary peer to\n   the mobile peer.  The destination address
      of this SA (SAs are\n   unidirectional) is established during IKE negotiation,
      and is\n   effectively the care-of address of the mobile peer at time of\n   negotiation.
      \ Therefore, the packets will be sent to the original\n   care-of address, not
      a changed care-of address.\n   The IPsec NAT traversal mechanism can also be
      used for limited\n   mobility, but UDP tunneling needs to be used even when
      there is no\n   NAT in the route between the mobile and the stationary peers.\n
      \  Furthermore, support for changes in current NAT mapping is not\n   required
      by the NAT traversal specification [RFC3947].\n   In summary, although the IPsec
      standard does not as such prevent\n   mobility (in the sense of updating security
      associations on-the-fly),\n   the standard does not include a built-in mechanism
      (explicit or\n   implicit) for doing so.  Therefore, it is assumed throughout
      this\n   document that any change in the addresses comprising the identity of\n
      \  an SA requires IKE re-negotiation, which implies too heavy\n   computation
      and too large latency for useful mobility.\n   The IKEv2 Mobility and Multihoming
      Protocol (MOBIKE) [RFC4555]\n   provides better mobility for IPsec.  This would
      allow the external\n   Mobile IPv4 layer described in this specification to
      be removed.\n   However, deploying MOBIKE requires changes to VPN devices, and
      is\n   thus out of scope of this specification.\n"
    title: 1.7.  Why IPsec Lacks Mobility
  title: 1.  Introduction
- contents:
  - "2.  The Network Environment\n   Enterprise users will access both the internal
    and external networks\n   using different networking technologies.  In some networks,
    the MN\n   will use FAs and in others it will anchor at the HA using co-located\n
    \  mode.  The following figure describes an example network topology\n   illustrating
    the relationship between the internal and external\n   networks, and the possible
    locations of the mobile node (i.e., (MN)).\n      (MN) {fvc}                            {home}
    (MN)   [i-HA]\n       !                                             \\     /\n
    \   .--+---.                                        .-+---+-.\n   (        )                                      (
    \        )\n    `--+---'                      [VPN]             `--+----'\n        \\
    \                          !                  !\n      [R/FA]        [x-HA]       .--+--.
    \             [R]\n           \\         /          (  DMZ  )              !\n
    \         .-+-------+--.         `--+--'         .-----+------.\n         (              )
    \          !           (              )\n         ( external net +---[R]----[FW]----[R]--+
    internal net )\n         (              )                       (              )\n
    \         `--+---------'                         `---+---+----'\n            /
    \                                      /     \\\n  [DHCP]  [R]                              [DHCP]
    [R]     [R]    [i-FA]\n     \\    /                                   \\   /         \\
    \   /\n     .+--+---.                               .-+-+--.     .--+--+-.\n    (
    \        )                             (        )   (         )\n     `---+---'
    \                              `--+---'     `---+---'\n         !                                      !
    \            !\n        (MN) {cvc}                             (MN) {c}      (MN)
    {f}\n      Figure 1:  Basic topology, possible MN locations, and access modes\n
    \  In every possible location described in the figure, the mobile node\n   can
    establish a connection to the corresponding HA(s) by using a\n   suitable \"access
    mode\".  An access mode is here defined to consist\n   of:\n   1.  a composition
    of the mobile node networking stack (i-MIP or\n       x-MIP/VPN/i-MIP); and\n
    \  2.  registration mode(s) of i-MIP and x-MIP (if used); i.e., co-\n       located
    care-of address or foreign agent care-of address.\n   Each possible access mode
    is encoded as \"xyz\", where:\n   o  \"x\" indicates whether the x-MIP layer is
    used, and if used, the\n      mode (\"f\" indicates FA-CoA, \"c\" indicates co-CoA,
    absence\n      indicates not used);\n   o  \"y\" indicates whether the VPN layer
    is used (\"v\" indicates VPN\n      used, absence indicates not used); and\n   o
    \ \"z\" indicates mode of i-MIP layer (\"f\" indicates FA-CoA, \"c\"\n      indicates
    co-CoA).\n   This results in four access modes:\n         c:  i-MIP with co-CoA\n
    \        f:  i-MIP with FA-CoA\n       cvc:  x-MIP with co-CoA, VPN-TIA as i-MIP
    co-CoA\n       fvc:  x-MIP with FA-CoA, VPN-TIA as i-MIP co-CoA\n   This notation
    is more useful when optimizations to protocol layers\n   are considered.  The
    notation is preserved here so that work on the\n   optimizations can refer to
    a common notation.\n   The internal network is typically a multi-subnetted network
    using\n   private addressing [privaddr].  Subnets may contain internal home\n
    \  agent(s), DHCP server(s), and/or foreign agent(s).  Current IEEE\n   802.11
    wireless LANs are typically deployed in the external network\n   or the DMZ because
    of security concerns.\n   The figure leaves out a few details worth noticing:\n
    \  o  There may be multiple NAT devices anywhere in the diagram.\n      *  When
    the MN is outside, the NAT devices may be placed between\n         the MN and
    the x-HA or the x-HA and the VPN.\n      *  There may also be NAT(s) between the
    VPN and the i-HA, or a NAT\n         integrated into the VPN.  In essence, any
    router in the figure\n         may be considered to represent zero or more routers,
    each\n         possibly performing NAT and/or ingress filtering.\n      *  When
    the MN is inside, there may be NAT devices between the MN\n         and the i-HA.\n
    \  o  Site-to-site VPN tunnels are not shown.  Although mostly\n      transparent,
    IPsec endpoints may perform ingress filtering as part\n      of enforcing their
    policy.\n   o  The figure represents a topology where each functional entity is\n
    \     illustrated as a separate device.  However, it is possible that\n      several
    network functions are co-located in a single device.  In\n      fact, all three
    server components (x-HA, VPN, and i-HA) may be co-\n      located in a single
    physical device.\n   The following issues are also important when considering
    enterprise\n   mobile users:\n   o  Some firewalls are configured to block ICMP
    messages and/or\n      fragments.  Such firewalls (routers) cannot be detected
    reliably.\n   o  Some networks contain transparent application proxies, especially\n
    \     for HTTP.  Like firewalls, such proxies cannot be detected\n      reliably
    in general.  IPsec and Mobile IPv4 are incompatible with\n      such networks.\n
    \  Whenever a mobile node obtains either a co-CoA or an FA-CoA, the\n   following
    conceptual steps take place:\n   o  The mobile node detects whether the subnet
    where the care-of\n      address was obtained belongs to the internal or the external\n
    \     network using the method described in Section 3 (or a vendor-\n      specific
    mechanism fulfilling the requirements described).\n   o  The mobile node performs
    necessary registrations and other\n      connection setup signaling for the protocol
    layers (in the\n      following order):\n      *  x-MIP (if used);\n      *  VPN
    (if used); and\n      *  i-MIP.\n   Note that these two tasks are intertwined
    to some extent: detection\n   of the internal network results in a successful
    registration to the\n   i-HA using the proposed network detection algorithm.  An
    improved\n   network detection mechanism not based on Mobile IPv4 registration\n
    \  messages might not have this side effect.\n   The following subsections describe
    the different access modes and the\n   requirements for registration and connection
    setup phase.\n"
  - contents:
    - "2.1.  Access Mode: 'c'\n   This access mode is standard Mobile IPv4 [RFC3344]
      with a co-located\n   address, except that:\n   o  the mobile node MUST detect
      that it is in the internal network;\n      and\n   o  the mobile node MUST re-register
      periodically (with a configurable\n      interval) to ensure it is still inside
      the internal network (see\n      Section 4).\n"
    title: '2.1.  Access Mode: ''c'''
  - contents:
    - "2.2.  Access Mode: 'f'\n   This access mode is standard Mobile IPv4 [RFC3344]
      with a foreign\n   agent care-of address, except that\n   o  the mobile node
      MUST detect that it is in the internal network;\n      and\n   o  the mobile
      node MUST re-register periodically (with a configurable\n      interval) to
      ensure it is still inside the internal network (see\n      Section 4).\n"
    title: '2.2.  Access Mode: ''f'''
  - contents:
    - "2.3.  Access Mode: 'cvc'\n   Steps:\n   o  The mobile node obtains a care-of
      address.\n   o  The mobile node detects it is not inside and registers with
      the\n      x-HA, where\n      *  T-bit MAY be set (reverse tunneling), which
      minimizes the\n         probability of firewall-related connectivity problems\n
      \  o  If the mobile node does not have an existing IPsec security\n      association,
      it uses IKE to set up an IPsec security association\n      with the VPN gateway,
      using the x-HoA as the IP address for IKE/\n      IPsec communication.  How
      the VPN-TIA is assigned is outside the\n      scope of this document.\n   o
      \ The mobile node sends a MIPv4 Registration Request (RRQ) to the\n      i-HA,
      registering the VPN-TIA as a co-located care-of address,\n      where\n      *
      \ T-bit SHOULD be set (reverse tunneling) (see discussion below)\n   Reverse
      tunneling in the inner Mobile IPv4 layer is often required\n   because of IPsec
      security policy limitations.  IPsec selectors define\n   allowed IP addresses
      for packets sent inside the IPsec tunnel.\n   Typical IPsec remote VPN selectors
      restrict the client address to be\n   VPN-TIA (remote address is often unrestricted).
      \ If reverse tunneling\n   is not used, the source address of a packet sent
      by the MN will be\n   the MN's home address (registered with i-HA), which is
      different from\n   the VPN-TIA, thus violating IPsec security policy.  Consequently,
      the\n   packet will be dropped, resulting in a connection black hole.\n   Some
      types of IPsec-based VPNs, in particular L2TP/IPsec VPNs (PPP-\n   over-L2TP-over-IPsec),
      do not have this limitation and can use\n   triangular routing.\n   Note that
      although the MN can use triangular routing, i.e., skip the\n   inner MIPv4 layer,
      it MUST NOT skip the VPN layer for security\n   reasons.\n"
    title: '2.3.  Access Mode: ''cvc'''
  - contents:
    - "2.4.  Access Mode: 'fvc'\n   Steps:\n   o  The mobile node obtains a foreign
      agent advertisement from the\n      local network.\n   o  The mobile node detects
      it is outside and registers with the x-HA,\n      where\n      *  T-bit MAY
      be set (reverse tunneling), which minimizes the\n         probability of firewall-related
      connectivity problems\n   o  If necessary, the mobile node uses IKE to set up
      an IPsec\n      connection with the VPN gateway, using the x-HoA as the IP address\n
      \     for IKE/IPsec communication.  How the VPN-TIA is assigned is\n      outside
      the scope of this document.\n   o  The mobile node sends a MIPv4 RRQ to the
      i-HA, registering the\n      VPN-TIA as a co-located care-of address, where\n
      \     *  T-bit SHOULD be set (reverse tunneling) (see discussion in\n         Section
      2.3)\n   Note that although the MN can use triangular routing, i.e., skip the\n
      \  inner MIPv4 layer, it MUST NOT skip the VPN layer for security\n   reasons.\n"
    title: '2.4.  Access Mode: ''fvc'''
  - contents:
    - "2.5.  NAT Traversal\n   NAT devices may affect each layer independently.  Mobile
      IPv4 NAT\n   traversal [mipnat] SHOULD be supported for x-MIP and i-MIP layers,\n
      \  while IPsec NAT traversal [RFC3947][RFC3948] SHOULD be supported for\n   the
      VPN layer.\n   Note that NAT traversal for the internal MIPv4 layer may be necessary\n
      \  even when there is no separate NAT device between the VPN gateway and\n   the
      internal network.  Some VPN implementations NAT VPN tunnel inner\n   addresses
      before routing traffic to the intranet.  Sometimes this is\n   done to make
      a deployment easier, but in some cases this approach\n   makes VPN client implementation
      easier.  Mobile IPv4 NAT traversal is\n   required to establish a MIPv4 session
      in this case.\n"
    title: 2.5.  NAT Traversal
  title: 2.  The Network Environment
- contents:
  - "3.  Internal Network Detection\n   Secure detection of the internal network is
    critical to prevent\n   plaintext traffic from being sent over an untrusted network.
    \ In\n   other words, the overall security (confidentiality and integrity of\n
    \  user data) relies on the security of the internal network detection\n   mechanism
    in addition to IPsec.  For this reason, security\n   requirements are described
    in this section.\n   In addition to detecting entry into the internal network,
    the mobile\n   node must also detect when it has left the internal network.  Entry\n
    \  into the internal network is easier security-wise: the mobile node\n   can
    ensure that it is inside the internal network before sending any\n   plaintext
    traffic.  Exit from the internal network is more difficult\n   to detect, and
    the MN may accidentally leak plaintext packets if the\n   event is not detected
    in time.\n   Several events can cause the mobile node to leave the internal\n
    \  network, including:\n   o  a routing change upstream;\n   o  a reassociation
    of 802.11 on layer 2 that the mobile node software\n      does not detect;\n   o
    \ a physical cable disconnect and reconnect that the mobile node\n      software
    does not detect.\n   Whether the mobile node can detect such changes in the current\n
    \  connection reliably depends on the implementation and the networking\n   technology.
    \ For instance, some mobile nodes may be implemented as\n   pure layer three entities.
    \ Even if the mobile node software has\n   access to layer 2 information, such
    information is not trustworthy\n   security-wise, and depends on the network interface
    driver.\n   If the mobile node does not detect these events properly, it may leak\n
    \  plaintext traffic into an untrusted network.  A number of approaches\n   can
    be used to detect exit from the internal network, ranging from\n   frequent re-registration
    to the use of layer two information.\n   A mobile node MUST implement a detection
    mechanism fulfilling the\n   requirements described in Section 3.2; this ensures
    that basic\n   security requirements are fulfilled.  The basic algorithm described\n
    \  in Section 3.3 is one way to do that, but alternative methods may be\n   used
    instead or in conjunction.  The assumptions that the\n   requirements and the
    proposed mechanism rely upon are described in\n   Section 3.1.\n"
  - contents:
    - "3.1.  Assumptions\n   The enterprise firewall MUST be configured to block traffic\n
      \  originating from external networks going to the i-HA.  In other\n   words,
      the mobile node MUST NOT be able to perform a successful\n   Registration Request/Registration
      Reply (RRQ/RRP) exchange (without\n   using IPsec) unless it is connected to
      the trusted internal network;\n   the mobile node can then stop using IPsec
      without compromising data\n   confidentiality.\n   If this assumption does not
      hold, data confidentiality is compromised\n   in a potentially silent and thus
      dangerous manner.  To minimize the\n   impact of this scenario, the i-HA is
      also required to check the\n   source address of any RRQ to determine whether
      it comes from a\n   trusted (internal network) address.  The i-HA needs to indicate
      to\n   the MN that it supports the checking of trusted source addresses by\n
      \  including a Trusted Networks Configured extension in its registration\n   reply.
      \ This new extension, which needs to be implemented by both\n   i-HA and the
      MN, is described in Section 3.4.\n   The firewall MAY be configured to block
      registration traffic to the\n   x-HA originating from within the internal network,
      which makes the\n   network detection algorithm simpler and more robust.  However,
      as the\n   registration request is basically UDP traffic, an ordinary firewall\n
      \  (even a stateful one) would typically allow the registration request\n   to
      be sent and a registration reply to be received through the\n   firewall.\n"
    title: 3.1.  Assumptions
  - contents:
    - "3.2.  Implementation Requirements\n   Any mechanism used to detect the internal
      network MUST fulfill the\n   requirements described in this section.  An example
      of a network\n   detection mechanism fulfilling these requirements is given
      in\n   Section 3.3.\n"
    - contents:
      - "3.2.1.  Separate Tracking of Network Interfaces\n   The mobile node implementation
        MUST track each network interface\n   separately.  Successful registration
        with the i-HA through interface\n   X does not imply anything about the status
        of interface Y.\n"
      title: 3.2.1.  Separate Tracking of Network Interfaces
    - contents:
      - "3.2.2.  Connection Status Change\n   When the mobile node detects that its
        connection status on a certain\n   network interface changes, the mobile node
        MUST:\n   o  immediately stop relaying user data packets;\n   o  detect whether
        this interface is connected to the internal or the\n      external network;
        and\n   o  resume data traffic only after the internal network detection and\n
        \     necessary registrations and VPN tunnel establishment have been\n      completed.\n
        \  The mechanisms used to detect a connection status change depends on\n   the
        mobile node implementation, the networking technology, and the\n   access
        mode.\n"
      title: 3.2.2.  Connection Status Change
    - contents:
      - "3.2.3.  Registration-Based Internal Network Detection\n   The mobile node
        MUST NOT infer that an interface is connected to the\n   internal network
        unless a successful registration has been completed\n   through that particular
        interface to the i-HA, the i-HA registration\n   reply contained a Trusted
        Networks Configured extension\n   (Section 3.4), and the connection status
        of the interface has not\n   changed since.\n"
      title: 3.2.3.  Registration-Based Internal Network Detection
    - contents:
      - "3.2.4.  Registration-Based Internal Network Monitoring\n   Some leak of plaintext
        packets to a (potentially) untrusted network\n   cannot always be completely
        prevented; this depends heavily on the\n   client implementation.  In some
        cases, the client cannot detect such\n   a change, e.g., if upstream routing
        is changed.\n   More frequent re-registrations when the MN is inside is a
        simple way\n   to ensure that the MN is still inside.  The MN SHOULD start
        re-\n   registration every (T_MONITOR - N) seconds when inside, where N is
        a\n   grace period that ensures that re-registration is completed before\n
        \  T_MONITOR seconds are up.  To bound the maximum amount of time that a\n
        \  plaintext leak may persist, the mobile node must fulfill the\n   following
        security requirements when inside:\n   o  The mobile node MUST NOT send or
        receive a user data packet if\n      more than T_MONITOR seconds have elapsed
        since the last successful\n      (re-)registration with the i-HA.\n   o  If
        more than T_MONITOR seconds have elapsed, data packets MUST be\n      either
        dropped or queued.  If the packets are queued, the queues\n      MUST NOT
        be processed until the re-registration has been\n      successfully completed
        without a connection status change.\n   o  The T_MONITOR parameter MUST be
        configurable, and have the default\n      value of 60 seconds.  This default
        is a trade-off between traffic\n      overhead and a reasonable bound to exposure.\n
        \  This approach is reasonable for a wide range of mobile nodes (e.g.,\n   laptops),
        but has unnecessary overhead when the mobile node is idle\n   (not sending
        or receiving packets).  If re-registration does not\n   complete before T_MONITOR
        seconds are up, data packets must be queued\n   or dropped as specified above.
        \ Note that re-registration packets\n   MUST be sent even if bidirectional
        user data traffic is being\n   relayed: data packets are no substitute for
        an authenticated re-\n   registration.\n   To minimize traffic overhead when
        the mobile node is idle, re-\n   registrations can be stopped when no traffic
        is being sent or\n   received.  If the mobile node subsequently receives or
        needs to send\n   a packet, the packet must be dropped or queued (as specified
        above)\n   until a re-registration with the i-HA has been successfully\n   completed.
        \ Although this approach adds packet processing complexity,\n   it may be
        appropriate for small, battery-powered devices, which may\n   be idle much
        of the time.  (Note that ordinary re-registration before\n   the mobility
        binding lifetime is exhausted should still be done to\n   keep the MN reachable.)\n
        \  T_MONITOR is required to be configurable so that an administrator can\n
        \  determine the required security level for the particular deployment.\n
        \  Configuring T_MONITOR in the order of a few seconds is not practical;\n
        \  alternative mechanisms need to be considered if such confidence is\n   required.\n
        \  The re-registration mechanism is a worst-case fallback mechanism.  If\n
        \  additional information (such as layer two triggers) is available to\n   the
        mobile node, the mobile node SHOULD use the triggers to detect MN\n   movement
        and restart the detection process to minimize exposure.\n   Note that re-registration
        is required by Mobile IPv4 by default\n   (except for the atypical case of
        an infinite binding lifetime);\n   however, the re-registration interval may
        be much larger when using\n   an ordinary Mobile IPv4 client.  A shorter re-registration
        interval\n   is usually not an issue, because the internal network is typically
        a\n   fast, wired network, and the shortened re-registration interval\n   applies
        only when the mobile node is inside the internal network.\n   When outside,
        the ordinary Mobile IPv4 re-registration process (based\n   on binding lifetime)
        is used.\n"
      title: 3.2.4.  Registration-Based Internal Network Monitoring
    title: 3.2.  Implementation Requirements
  - contents:
    - "3.3.  Proposed Algorithm\n   When the MN detects that it has changed its point
      of network\n   attachment on a certain interface, it issues two simultaneous\n
      \  registration requests, one to the i-HA and another to the x-HA.\n   These
      registration requests are periodically retransmitted if reply\n   messages are
      not received.\n   Registration replies are processed as follows:\n   o  If a
      response from the x-HA is received, the MN stops\n      retransmitting its registration
      request to the x-HA and\n      tentatively determines it is outside.  However,
      the MN MUST keep\n      on retransmitting its registration to the i-HA for a
      period of\n      time.  The MN MAY postpone the IPsec connection setup for some\n
      \     period of time while it waits for a (possible) response from the\n      i-HA.\n
      \  o  If a response from the i-HA is received and the response contains\n      the
      Trusted Networks Configured extension (Section 3.4), the MN\n      SHOULD determine
      that it is inside.  In any case, the MN MUST stop\n      retransmitting its
      registration requests to both i-HA and x-HA.\n   o  When successfully registered
      with the i-HA directly, MN SHOULD de-\n      register with the x-HA.\n   If
      the MN ends up detecting that it is inside, it MUST re-register\n   periodically
      (regardless of binding lifetime); see Section 3.2.4.  If\n   the re-registration
      fails, the MN MUST stop sending and receiving\n   plaintext traffic, and MUST
      restart the detection algorithm.\n   Plaintext re-registration messages are
      always addressed either to the\n   x-HA or the i-HA, not to both.  This is because
      the MN knows, after\n   initial registration, whether it is inside or outside.
      \ (However,\n   when the mobile node is outside, it re-registers independently
      with\n   the x-HA using plaintext, and with the i-HA through the VPN tunnel.)\n
      \  Postponing the IPsec connection setup could prevent aborted IKE\n   sessions.
      \ Aborting IKE sessions may be a problem in some cases\n   because IKE does
      not provide a reliable, standardized, and mandatory-\n   to-implement mechanism
      for terminating a session cleanly.\n   If the x-HA is not reachable from inside
      (i.e., the firewall\n   configuration is known), a detection period of zero
      is preferred, as\n   it minimizes connection setup overhead and causes no timing
      problems.\n   Should the assumption have been invalid and a response from the
      i-HA\n   received after a response from the x-HA, the MN SHOULD re-register\n
      \  with the i-HA directly.\n"
    title: 3.3.  Proposed Algorithm
  - contents:
    - "3.4.  Trusted Networks Configured (TNC) Extension\n   This extension is a skippable
      extension.  An i-HA sending the\n   extension must fulfill the requirements
      described in Section 4.3,\n   while an MN processing the extension must fulfill
      the requirements\n   described in Section 4.1.  The format of the extension
      is described\n   below.  It adheres to the short extension format described
      in\n   [RFC3344]:\n       0                   1                   2                   3\n
      \      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |     Type      |    Length     |    Sub-Type   |   Reserved    |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \         Type        149\n          Length      2\n          Sub-Type    0\n
      \         Reserved    Set to 0 when sending, ignored when receiving\n"
    title: 3.4.  Trusted Networks Configured (TNC) Extension
  - contents:
    - "3.5.  Implementation Issues\n   When the MN uses a parallel detection algorithm
      and is using an FA,\n   the MN sends two registration requests through the same
      FA with the\n   same Media Acces Control (MAC) address (or equivalent) and possibly\n
      \  even the same home address.  Although this is not in conflict with\n   existing
      specifications, it is an unusual scenario; hence some FA\n   implementations
      may not work properly in such a situation.  However,\n   testing against deployed
      foreign agents seems to indicate that a\n   majority of available foreign agents
      handle this situation.\n   When the x-HA and i-HA addresses are the same, the
      scenario is even\n   more difficult for the FA, and it is almost certain that
      existing FAs\n   do not deal with the situation correctly.  Therefore, it is
      required\n   that x-HA and i-HA addresses MUST be different.\n   Regardless,
      if the MN detects that i-HA and x-HA have the same\n   address, it MUST assume
      that it is in the external network and bypass\n   network detection to avoid
      confusing the FA.  Because the HA\n   addresses are used at different layers,
      achieving connectivity is\n   possible without address confusion.\n   The mobile
      node MAY use the following hints to determine that it is\n   inside, but MUST
      verify reachability of the i-HA anyway:\n   o  a domain name in a DHCPDISCOVER
      / DHCPOFFER message\n   o  an NAI in a foreign agent advertisement\n   o  a
      list of default gateway MAC addresses that are known to reside\n      in the
      internal network (i.e., configured as such, or have been\n      previously verified
      to be inside)\n   For instance, if the MN has reason to believe it is inside,
      it MAY\n   postpone sending a registration request to the x-HA for some time.\n
      \  Similarly, if the MN has reason to believe it is outside, it may\n   start
      IPsec connection setup immediately after receiving a\n   registration reply
      from the x-HA.  However, should the MN receive a\n   registration reply from
      the i-HA after IPsec connection setup has\n   been started, the MN SHOULD still
      switch to using the i-HA directly.\n"
    title: 3.5.  Implementation Issues
  - contents:
    - '3.6.  Rationale for Design Choices

      '
    - contents:
      - "3.6.1.  Firewall Configuration Requirements\n   The requirement that the
        i-HA cannot be reached from the external\n   network is necessary.  If not,
        a successful registration with the\n   i-HA (without IPsec) cannot be used
        as a secure indication that the\n   mobile node is inside.  A possible solution
        to the obvious security\n   problem would be to define and deploy a secure
        internal network\n   detection mechanism based on, e.g., signed FA advertisement
        or signed\n   DHCP messages.\n   However, unless the mechanism is defined
        for both FA and DHCP\n   messages and is deployed in every internal network,
        it has limited\n   applicability.  In other words, the mobile node MUST NOT
        assume it is\n   in the internal network unless it receives a signed FA or
        DHCP\n   message (regardless of whether or not it can register directly with\n
        \  the i-HA).  If it receives an unsigned FA or DHCP message, it MUST\n   use
        IPsec; otherwise, the mobile node can be easily tricked into\n   using plaintext.\n
        \  Assuming that all FA and DHCP servers in the internal network are\n   upgraded
        to support such a feature does not seem realistic; it is\n   highly desirable
        to be able to take advantage of existing DHCP and FA\n   deployments.  Similar
        analysis seems to apply regardless of what kind\n   of additional security
        mechanism is defined.\n   Because a firewall configuration error can have
        catastrophic data\n   security consequences (silent exposure of user data
        to external\n   attackers), a separate protection mechanism is provided by
        the i-HA.\n   The i-HA must be configured, by the administrator, with a list
        of\n   trusted networks.  The i-HA advertises that it knows which\n   registration
        request source addresses are trusted, using a\n   registration reply extension
        (Trusted Networks Configured extension,\n   Section 3.4).  Without this extension,
        an MN may not rely on a\n   successful registration to indicate that it is
        connected to the\n   internal network.  This ensures that user data compromise
        does not\n   occur unless both the firewall and the i-HA are configured\n
        \  incorrectly.  Further, occurrences of registration requests from\n   untrusted
        addresses should be logged by the i-HA, exposing them to\n   administrator
        review.\n"
      title: 3.6.1.  Firewall Configuration Requirements
    - contents:
      - "3.6.2.  Registration-Based Internal Network Monitoring\n   This issue also
        affects IPsec client security.  However, as IPsec\n   specifications take
        no stand on how and when client IPsec policies\n   are configured or changed
        (for instance, in response to a change in\n   network connectivity), the issue
        is out of scope for IPsec.  Because\n   this document describes an algorithm
        and requirements for (secure)\n   internal network detection, the issue is
        in scope of the document.\n   The current requirement for internal network
        monitoring was added as\n   a fallback mechanism.\n"
      title: 3.6.2.  Registration-Based Internal Network Monitoring
    - contents:
      - "3.6.3.  No Encryption When Inside\n   If encryption was applied also when
        MN was inside, there would be no\n   security reason to monitor the internal
        network periodically.\n   The main rationale for why encryption cannot be
        applied when the MN\n   is inside was given in Section 1.6.  In short, the
        main issues are\n   (1) power consumption; (2) extra CPU load, especially
        because\n   internal networks are typically switched networks and a lot of
        data\n   may be routinely transferred; (3) existing HA devices do not\n   typically
        integrate IPsec functionality; (4) (IPsec) encryption\n   requires user authentication,
        which may be interactive in some cases\n   (e.g., SecurID) and thus a usability
        issue; and (5) user may need to\n   have separate credentials for VPN devices
        in the DMZ and the HA.\n"
      title: 3.6.3.  No Encryption When Inside
    title: 3.6.  Rationale for Design Choices
  - contents:
    - "3.7.  Improvements\n   The registration process can be improved in many ways.
      \ One simple\n   way is to make the x-HA detect whether a registration request
      came\n   from inside or outside the enterprise network.  If it came from\n   inside
      the enterprise network, the x-HA can simply drop the\n   registration request.\n
      \  This approach is feasible without protocol changes in scenarios where\n   a
      corporation owns both the VPN and the x-HA.  The x-HA can simply\n   determine
      based on the incoming interface identifier (or the router\n   that relayed the
      packet) whether or not the registration request came\n   from inside.\n   In
      other scenarios, protocol changes may be needed.  Such changes are\n   out of
      scope of this document.\n"
    title: 3.7.  Improvements
  title: 3.  Internal Network Detection
- contents:
  - '4.  Requirements

    '
  - contents:
    - "4.1.  Mobile Node Requirements\n   The mobile node MUST implement an internal
      network detection\n   algorithm fulfilling the requirements set forth in Section
      3.2.  A\n   new configurable MN parameter, T_MONITOR, is required.  The value
      of\n   this parameter reflects a balance between security and the amount of\n
      \  signaling overhead, and thus needs to be configurable.  In addition,\n   when
      doing internal network detection, the MN MUST NOT disable IPsec\n   protection
      unless the registration reply from the i-HA contains a\n   Trusted Networks
      Configured extension (Section 3.4).\n   The mobile node MUST support access
      modes c, f, cvc, fvc (Section 2).\n   The mobile node SHOULD support Mobile
      IPv4 NAT traversal [mipnat] for\n   both internal and external Mobile IP.\n
      \  The mobile node SHOULD support IPsec NAT traversal [RFC3947]\n   [RFC3948].\n
      \  When the mobile node has direct access to the i-HA, it SHOULD use\n   only
      the inner Mobile IPv4 layer to minimize firewall and VPN impact.\n   When the
      mobile node is outside and using the VPN connection, IPsec\n   policies MUST
      be configured to encrypt all traffic sent to and from\n   the enterprise network.
      \ The particular Security Policy Database\n   (SPD) entries depend on the type
      and configuration of the particular\n   VPN (e.g., plain IPsec vs. L2TP/IPsec,
      full tunneling or split\n   tunneling).\n"
    title: 4.1.  Mobile Node Requirements
  - contents:
    - "4.2.  VPN Device Requirements\n   The VPN security policy MUST allow communication
      using UDP to the\n   internal home agent(s), with home agent port 434 and any
      remote port.\n   The security policy SHOULD allow IP-IP to internal home agent(s)
      in\n   addition to UDP port 434.\n   The VPN device SHOULD implement the IPsec
      NAT traversal mechanism\n   described in [RFC3947] and [RFC3948].\n"
    title: 4.2.  VPN Device Requirements
  - contents:
    - "4.3.  Home Agent Requirements\n   The home agent SHOULD implement the Mobile
      IPv4 NAT traversal\n   mechanism described in [mipnat].  (This also refers to
      the i-HA: NAT\n   traversal is required to support VPNs that NAT VPN tunnel
      addresses\n   or block IP-IP traffic.)\n   To protect user data confidentiality
      against firewall configuration\n   errors, the i-HA:\n   o  MUST be configured
      with a list of trusted IP subnets (containing\n      only addresses from the
      internal network), with no subnets being\n      trusted by default.\n   o  MUST
      reject (drop silently) any registration request coming from a\n      source
      address that is not inside any of the configured trusted\n      subnets.  These
      dropped registration requests SHOULD be logged.\n   o  MUST include a Trusted
      Networks Configured extension (Section 3.4)\n      in a registration reply sent
      in response to a registration request\n      coming from a trusted address.\n"
    title: 4.3.  Home Agent Requirements
  title: 4.  Requirements
- contents:
  - "5.  Analysis\n   This section provides a comparison against guidelines described
    in\n   Section 6 of the problem statement [RFC4093] and additional analysis\n
    \  of packet overhead with and without the optional mechanisms.\n"
  - contents:
    - "5.1.  Comparison against Guidelines\n   Preservation of existing VPN infrastructure\n
      \  o  The solution does not mandate any changes to existing VPN\n      infrastructure,
      other than possibly changes in configuration to\n      avoid stateful filtering
      of traffic.\n   Software upgrades to existing VPN clients and gateways\n   o
      \ The solution described does not require any changes to VPN\n      gateways
      or Mobile IPv4 foreign agents.\n   IPsec protocol\n   o  The solution does not
      require any changes to existing IPsec or key\n      exchange standard protocols,
      and does not require implementation\n      of new protocols in the VPN device.\n
      \  Multi-vendor interoperability\n   o  The solution provides easy multi-vendor
      interoperability between\n      server components (VPN device, foreign agents,
      and home agents).\n      Indeed, these components need not be aware of each
      other.\n   o  The mobile node networking stack is somewhat complex to implement,\n
      \     which may be an issue for multi-vendor interoperability.  However,\n      this
      is a purely software architecture issue, and there are no\n      known protocol
      limitations for multi-vendor interoperability.\n   MIPv4 protocol\n   o  The
      solution adheres to the MIPv4 protocol, but requires the new\n      Trusted
      Networks Configured extension to improve the\n      trustworthiness of internal
      network detection.\n   o  The solution requires the use of two parallel MIPv4
      layers.\n   Handoff overhead\n   o  The solution provides a mechanism to avoid
      VPN tunnel SA\n      renegotiation upon movement by using the external MIPv4
      layer.\n   Scalability, availability, reliability, and performance\n   o  The
      solution complexity is linear with the number of MNs\n      registered and accessing
      resources inside the intranet.\n   o  Additional overhead is imposed by the
      solution.\n   Functional entities\n   o  The solution does not impose any new
      types of functional entities\n      or required changes to existing entities.
      \ However, an external HA\n      device is required.\n   Implications of intervening
      NAT gateways\n   o  The solution leverages existing MIPv4 NAT traversal [mipnat]
      and\n      IPsec NAT traversal [RFC3947] [RFC3948] solutions and does not\n
      \     require any new functionality to deal with NATs.\n   Security implications\n
      \  o  The solution requires a new mechanism to detect whether the mobile\n      node
      is in the internal or the external network.  The security of\n      this mechanism
      is critical in ensuring that the security level\n      provided by IPsec is
      not compromised by a faulty detection\n      mechanism.\n   o  When the mobile
      node is outside, the external Mobile IPv4 layer\n      may allow some traffic
      redirection attacks that plain IPsec does\n      not allow.  Other than that,
      IPsec security is unchanged.\n   o  More security considerations are described
      in Section 6.\n"
    title: 5.1.  Comparison against Guidelines
  - contents:
    - "5.2.  Packet Overhead\n   The maximum packet overhead depends on access mode
      as follows:\n   o  f: 0 octets\n   o  c: 20 octets\n   o  fvc: 77 octets\n   o
      \ cvc: 97 octets\n   The maximum overhead of 97 octets in the 'cvc' access mode
      consists\n   of the following:\n   o  IP-IP for i-MIPv4: 20 octets\n   o  IPsec
      ESP: 57 octets total, consisting of 20 (new IP header),\n      4+4+8 = 16 (SPI,
      sequence number, cipher initialization vector),\n      7+2 = 9 (padding, padding
      length field, next header field), 12\n      (ESP authentication trailer)\n   o
      \ IP-IP for x-MIPv4: 20 octets\n   When IPsec is used, a variable amount of
      padding is present in each\n   ESP packet.  The figures were computed for a
      cipher with 64-bit block\n   size, padding overhead of 9 octets (next header
      field, padding length\n   field, and 7 octets of padding; see Section 2.4 of
      [RFC4303]), and\n   ESP authentication field of 12 octets (HMAC-SHA1-96 or HMAC-MD5-96).\n
      \  Note that an IPsec implementation MAY pad with more than a minimum\n   amount
      of octets.\n   NAT traversal overhead is not included, and adds 8 octets when
      IPsec\n   NAT traversal [RFC3947] [RFC3948] is used and 12 octets when MIP NAT\n
      \  traversal [mipnat] is used.  For instance, when using access mode\n   cvc,
      the maximum NAT traversal overhead is 12+8+12 = 32 octets.\n   Thus, the worst
      case scenario (with the above mentioned ESP\n   assumptions) is 129 octets for
      cvc.\n"
    title: 5.2.  Packet Overhead
  - contents:
    - "5.3.  Latency Considerations\n   When the MN is inside, connection setup latency
      does not increase\n   compared to standard MIPv4 if the MN implements the suggested\n
      \  parallel registration sequence (see Section 3.3).  Exchange of RRQ/\n   RRP
      messages with the i-HA confirms the MN is inside, and the MN may\n   start sending
      and receiving user traffic immediately.  For the same\n   reason, handovers
      in the internal network have no overhead relative\n   to standard MIPv4.\n   When
      the MN is outside, the situation is slightly different.  Initial\n   connection
      setup latency essentially consists of (1) registration\n   with the x-HA, (2)
      optional detection delay (waiting for i-HA\n   response), (3) IPsec connection
      setup (IKE), and (4) registration\n   with the i-HA.  All but (4) are in addition
      to standard MIPv4.\n   However, handovers in the external network have performance\n
      \  comparable to standard MIPv4.  The MN simply re-registers with the\n   x-HA
      and starts to send IPsec traffic to the VPN gateway from the new\n   address.\n
      \  The MN may minimize latency by (1) not waiting for an i-HA response\n   before
      triggering IKE if the x-HA registration succeeds and (2)\n   sending first the
      RRQ most likely to succeed (e.g., if the MN is most\n   likely outside).  These
      can be done based on heuristics about the\n   network, e.g., addresses, MAC
      address of the default gateway (which\n   the mobile node may remember from
      previous access); based on the\n   previous access network (i.e., optimize for
      inside-inside and\n   outside-outside movement); etc.\n"
    title: 5.3.  Latency Considerations
  - contents:
    - "5.4.  Firewall State Considerations\n   A separate firewall device or an integrated
      firewall in the VPN\n   gateway typically performs stateful inspection of user
      traffic.  The\n   firewall may, for instance, track TCP session status and block
      TCP\n   segments not related to open connections.  Other stateful inspection\n
      \  mechanisms also exist.\n   Firewall state poses a problem when the mobile
      node moves between the\n   internal and external networks.  The mobile node
      may, for instance,\n   initiate a TCP connection while inside, and later go
      outside while\n   expecting to keep the connection alive.  From the point of
      view of\n   the firewall, the TCP connection has not been initiated, as it has\n
      \  not witnessed the TCP connection setup packets, thus potentially\n   resulting
      in connectivity problems.\n   When the VPN-TIA is registered as a co-located
      care-of address with\n   the i-HA, all mobile node traffic appears as IP-IP
      for the firewall.\n   Typically, firewalls do not continue inspection beyond
      the IP-IP\n   tunnel, but support for deeper inspection is available in many\n
      \  products.  In particular, an administrator can configure traffic\n   policies
      in many firewall products even for IP-IP encapsulated\n   traffic.  If this
      is done, similar statefulness issues may arise.\n   In summary, the firewall
      must allow traffic coming from and going\n   into the IPsec connection to be
      routed, even though they may not have\n   successfully tracked the connection
      state.  How this is done is out\n   of scope of this document.\n"
    title: 5.4.  Firewall State Considerations
  - contents:
    - "5.5.  Intrusion Detection Systems (IDSs)\n   Many firewalls incorporate intrusion
      detection systems monitoring\n   network traffic for unusual patterns and clear
      signs of attack.\n   Since traffic from a mobile node implementing this specification
      is\n   UDP to i-HA port 434, and possibly IP-IP traffic to the i-HA address,\n
      \  existing IDSs may treat the traffic differently than ordinary VPN\n   remote
      access traffic.  Like firewalls, IDSs are not standardized, so\n   it is impossible
      to guarantee interoperability with any particular\n   IDS system.\n"
    title: 5.5.  Intrusion Detection Systems (IDSs)
  - contents:
    - "5.6.  Implementation of the Mobile Node\n   Implementation of the mobile node
      requires the use of three tunneling\n   layers, which may be used in various
      configurations depending on\n   whether that particular interface is inside
      or outside.  Note that it\n   is possible that one interface is inside and another
      interface is\n   outside, which requires a different layering for each interface
      at\n   the same time.\n   For multi-vendor implementation, the IPsec and MIPv4
      layers need to\n   interoperate in the same mobile node.  This implies that
      a flexible\n   framework for protocol layering (or protocol-specific APIs) is\n
      \  required.\n"
    title: 5.6.  Implementation of the Mobile Node
  - contents:
    - "5.7.  Non-IPsec VPN Protocols\n   The solution also works for VPN tunneling
      protocols that are not\n   IPsec-based, provided that the mobile node is provided
      IPv4\n   connectivity with an address suitable for registration.  However,\n
      \  such VPN protocols are not explicitly considered.\n"
    title: 5.7.  Non-IPsec VPN Protocols
  title: 5.  Analysis
- contents:
  - '6.  Security Considerations

    '
  - contents:
    - "6.1.  Internal Network Detection\n   If the mobile node by mistake believes
      it is in the internal network\n   and sends plaintext packets, it compromises
      IPsec security.  For this\n   reason, the overall security (confidentiality
      and integrity) of user\n   data is a minimum of (1) IPsec security and (2) security
      of the\n   internal network detection mechanism.\n   Security of the internal
      network detection relies on a successful\n   registration with the i-HA.  For
      standard Mobile IPv4 [RFC3344], this\n   means HMAC-MD5 and Mobile IPv4 replay
      protection.  The solution also\n   assumes that the i-HA is not directly reachable
      from the external\n   network, requiring careful enterprise firewall configuration.
      \ To\n   minimize the impact of a firewall configuration problem, the i-HA is\n
      \  separately required to be configured with trusted source addresses\n   (i.e.,
      addresses belonging to the internal network), and to include\n   an indication
      of this in a new Trusted Networks Configured extension.\n   The MN is required
      not to trust a registration as an indication of\n   being connected to the internal
      network, unless this extension is\n   present in the registration reply.  Thus,
      to actually compromise user\n   data confidentiality, both the enterprise firewall
      and the i-HA have\n   to be configured incorrectly, which reduces the likelihood
      of the\n   scenario.\n   When the mobile node sends a registration request to
      the i-HA from an\n   untrusted network that does not go through the IPsec tunnel,
      it will\n   reveal the i-HA's address, its own identity including the NAI and
      the\n   home address, and the Authenticator value in the authentication\n   extensions
      to the untrusted network.  This may be a concern in some\n   deployments.\n
      \  When the connection status of an interface changes, an interface\n   previously
      connected to the trusted internal network may suddenly be\n   connected to an
      untrusted network.  Although the same problem is also\n   relevant to IPsec-based
      VPN implementations, the problem is\n   especially relevant in the scope of
      this specification.\n   In most cases, mobile node implementations are expected
      to have layer\n   2 information available, making connection change detection
      both fast\n   and robust.  To cover cases where such information is not available\n
      \  (or fails for some reason), the mobile node is required to\n   periodically
      re-register with the internal home agent to verify that\n   it is still connected
      to the trusted network.  It is also required\n   that this re-registration interval
      be configurable, thus giving the\n   administrator a parameter by which potential
      exposure may be\n   controlled.\n"
    title: 6.1.  Internal Network Detection
  - contents:
    - "6.2.  Mobile IPv4 versus IPsec\n   MIPv4 and IPsec have different goals and
      approaches for providing\n   security services.  MIPv4 typically uses a shared
      secret for\n   authentication of signaling traffic, while IPsec typically uses
      IKE\n   (an authenticated Diffie-Hellman exchange) to set up session keys.\n
      \  Thus, the overall security properties of a combined MIPv4 and IPsec\n   system
      depend on both mechanisms.\n   In the solution outlined in this document, the
      external MIPv4 layer\n   provides mobility for IPsec traffic.  If the security
      of MIPv4 is\n   broken in this context, traffic redirection attacks against
      the IPsec\n   traffic are possible.  However, such routing attacks do not affect\n
      \  other IPsec properties (confidentiality, integrity, replay\n   protection,
      etc.), because IPsec does not consider the network\n   between two IPsec endpoints
      to be secure in any way.\n   Because MIPv4 shared secrets are usually configured
      manually, they\n   may be weak if easily memorizable secrets are chosen, thus
      opening up\n   redirection attacks described above.  Note especially that a
      weak\n   secret in the i-HA is fatal to security, as the mobile node can be\n
      \  fooled into dropping encryption if the i-HA secret is broken.\n   Assuming
      the MIPv4 shared secrets have sufficient entropy, there are\n   still at least
      the following differences and similarities between\n   MIPv4 and IPsec worth
      considering:\n   o  Both IPsec and MIPv4 are susceptible to the \"transient
      pseudo NAT\"\n      attack described in [pseudonat] and [mipnat], assuming that
      NAT\n      traversal is enabled (which is typically the case).  \"Pseudo NAT\"\n
      \     attacks allow an attacker to redirect traffic flows, resulting in\n      resource
      consumption, lack of connectivity, and denial of service.\n      However, such
      attacks cannot compromise the confidentiality of\n      user data protected
      using IPsec.\n   o  When considering a \"pseudo NAT\" attack against standard
      IPsec and\n      standard MIP (with NAT traversal), redirection attacks against
      MIP\n      may be easier because:\n      *  MIPv4 re-registrations typically
      occur more frequently than\n         IPsec SA setups (although this may not
      be the case for mobile\n         hosts).\n      *  It suffices to catch and
      modify a single registration request,\n         whereas attacking IKE requires
      that multiple IKE packets are\n         caught and modified.\n   o  There may
      be concerns about mixing of algorithms.  For instance,\n      IPsec may be using
      HMAC-SHA1-96, while MIP is always using HMAC-\n      MD5 (RFC 3344) or prefix+suffix
      MD5 (RFC 2002).  Furthermore,\n      while IPsec algorithms are typically configurable,
      MIPv4 clients\n      typically use only HMAC-MD5 or prefix+suffix MD5.  Although
      this\n      is probably not a security problem as such, it is more difficult\n
      \     to communicate to users.\n   o  When IPsec is used with a Public Key Infrastructure
      (PKI), the key\n      management properties are superior to those of basic MIPv4.
      \ Thus,\n      adding MIPv4 to the system makes key management more complex.\n
      \  o  In general, adding new security mechanisms increases overall\n      complexity
      and makes the system more difficult to understand.\n"
    title: 6.2.  Mobile IPv4 versus IPsec
  title: 6.  Security Considerations
- contents:
  - "7.  IANA Considerations\n   This document specifies a new skippable extension
    (in the short\n   format) in Section 3.4, whose Type and Sub-Type values have
    been\n   assigned.\n   Allocation of new Sub-Type values can be made via Expert
    Review and\n   Specification Required [RFC5226].\n"
  title: 7.  IANA Considerations
- contents:
  - "8.  Acknowledgements\n   This document is a joint work of the contributing authors
    (in\n   alphabetical order):\n           - Farid Adrangi (Intel Corporation)\n
    \          - Nitsan Baider (Check Point Software Technologies, Inc.)\n           -
    Gopal Dommety (Cisco Systems)\n           - Eli Gelasco (Cisco Systems)\n           -
    Dorothy Gellert (Nokia Corporation)\n           - Espen Klovning (Birdstep)\n
    \          - Milind Kulkarni (Cisco Systems)\n           - Henrik Levkowetz (ipUnplugged
    AB)\n           - Frode Nielsen (Birdstep)\n           - Sami Vaarala (Codebay)\n
    \          - Qiang Zhang (Liqwid Networks, Inc.)\n   The authors would like to
    thank the MIP/VPN design team, especially\n   Mike Andrews, Gaetan Feige, Prakash
    Iyer, Brijesh Kumar, Joe Lau,\n   Kent Leung, Gabriel Montenegro, Ranjit Narjala,
    Antti Nuopponen, Alan\n   O'Neill, Alpesh Patel, Ilkka Pietikainen, Phil Roberts,
    Hans\n   Sjostrand, and Serge Tessier for their continuous feedback and\n   helping
    us improve this document.  Special thanks to Radia Perlman\n   for giving the
    document a thorough read and a security review.  Tom\n   Hiller pointed out issues
    with battery-powered devices.  We would\n   also like to thank the previous Mobile
    IP working group chairs\n   (Gabriel Montenegro, Basavaraj Patil, and Phil Roberts)
    for important\n   feedback and guidance.\n"
  title: 8.  Acknowledgements
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [RFC2119]    Bradner, S., \"Key words for use
      in RFCs to Indicate\n                Requirement Levels\", BCP 14, RFC 2119,
      March 1997.\n   [RFC3344]    Perkins, C., Ed., \"IP Mobility Support for IPv4\",\n
      \               RFC 3344, August 2002.\n   [RFC3947]    Kivinen, T., Swander,
      B., Huttunen, A., and V. Volpe,\n                \"Negotiation of NAT-Traversal
      in the IKE\", RFC 3947,\n                January 2005.\n   [RFC3948]    Huttunen,
      A., Swander, B., Volpe, V., DiBurro, L., and\n                M. Stenberg, \"UDP
      Encapsulation of IPsec packets\",\n                RFC 3948, January 2005.\n
      \  [RFC4301]    Kent, S. and K. Seo, \"Security Architecture for the\n                Internet
      Protocol\", RFC 4301, December 2005.\n   [RFC4303]    Kent, S., \"IP Encapsulating
      Security Payload (ESP)\",\n                RFC 4303, December 2005.\n   [RFC5226]
      \   Narten, T. and H. Alvestrand, \"Guidelines for Writing an\n                IANA
      Considerations Section in RFCs\", BCP 26, RFC 5226,\n                May 2008.\n
      \  [mipnat]     Levkowetz, H. and S. Vaarala, \"Mobile IP Traversal of\n                Network
      Address Translation (NAT) Devices\", RFC 3519,\n                April 2003.\n
      \  [privaddr]   Rekhter, Y., Moskowitz, B., Karrenberg, D., de Groot,\n                G.,
      and E. Lear, \"Address Allocation for Private\n                Internets\",
      BCP 5, RFC 1918, February 1996.\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2.  Informative References\n   [RFC2002]    Perkins, C., \"IP Mobility Support\",
      RFC 2002,\n                October 1996.\n   [RFC3456]    Patel, B., Aboba,
      B., Kelly, S., and V. Gupta, \"Dynamic\n                Host Configuration Protocol
      (DHCPv4) Configuration of\n                IPsec Tunnel Mode\", RFC 3456, January
      2003.\n   [RFC3776]    Arkko, J., Devarapalli, V., and F. Dupont, \"Using IPsec\n
      \               to Protect Mobile IPv6 Signaling Between Mobile Nodes\n                and
      Home Agents\", RFC 3776, June 2004.\n   [RFC4093]    Adrangi, F. and H. Levkowetz,
      \"Problem Statement: Mobile\n                IPv4 Traversal of Virtual Private
      Network (VPN)\n                Gateways\", RFC 4093, August 2005.\n   [RFC4282]
      \   Aboba, B., Beadles, M., Arkko, J., and P. Eronen, \"The\n                Network
      Access Identifier\", RFC 4282, December 2005.\n   [RFC4555]    Eronen, P., \"IKEv2
      Mobility and Multihoming Protocol\n                (MOBIKE)\", RFC 4555, June
      2006.\n   [pseudonat]  Dupont, F. and J. Bernard, \"Transient pseudo-NAT attacks\n
      \               or how NATs are even more evil than you believed\", Work\n                in
      Progress, June 2004.\n   [tessier]    Tessier, S., \"Guidelines for Mobile IP
      and IPsec VPN\n                Usage\", Work in Progress, December 2002.\n"
    title: 9.2.  Informative References
  title: 9.  References
- contents:
  - 'Appendix A.  Packet Flow Examples

    '
  - contents:
    - "A.1.  Connection Setup for Access Mode 'cvc'\n   The following figure illustrates
      connection setup when the mobile\n   node is outside and using a co-located
      care-of address.  IKE\n   connection setup is not shown in full, and involves
      multiple round\n   trips (4.5 round trips when using main mode followed by quick
      mode).\n    MN-APP      MN        x-HA       VPN        i-HA        CN\n     !
      \         !          !          !          !          !\n     !          ! ------->
      !          !          !          !\n     !          !  rrq     !          !
      \         !          !\n     !          ! -----------------X  !          !          !
      rrq not\n     !          !  rrq     !          !          !          ! received\n
      \    !          !          !          !          !          ! by i-HA\n     !
      \         ! <------- !          !          !          !\n     !          !  rrp
      \    !          !          !          !\n     !          !          !          !
      \         !          !\n     !  [wait for detection period for response from
      i-HA]  !\n     !  [may also retransmit to i-HA, depending on config]  ! no rrp\n
      \    !          !          !          !          !          ! from i-HA\n     !
      \         ! ==(1)==> !          !          !          !\n     !          !  ike
      {1a}! -------> !          !          !\n     !          !          !  ike     !
      \         !          !\n     !          !          ! <------- !          !          !\n
      \    !          ! <==(1)== !  ike     !          !          !\n     !          !
      \ ike     !          !          !          !\n     :          :          :          :
      \         :          :\n     :          :          :          :          :          :\n
      \    !          !          !          !          !          !\n     !          !
      ==(2)==> !          !          !          !\n     !          !  rrq {2a}! ==(1)==>
      !          !          !\n     !          !          !  rrq {2b}! -------> !
      \         !\n     !          !          !          !  rrq {2c}!          !\n
      \    !          !          !          ! <------- !          !\n     !          !
      \         ! <==(1)== !  rrp     !          !\n     !          ! <==(2)== !  rrp
      \    !          !          !\n     !          !  rrp     !          !          !
      \         !\n     !          !          !          !          !          !\n
      \   [[--- connection setup ok, bidirectional connection up ---]]\n     !          !
      \         !          !          !          !\n     ! -------> !          !          !
      \         !          !\n     !  pkt {3a}! ==(3)==> !          !          !          !\n
      \    !          !  pkt {3b}! ==(2)==> !          !          !\n     !          !
      \         !  pkt {3c}! ==(1)==> !          !\n     !          !          !          !
      \ pkt {3d}! -------> !\n     !          !          !          !          !  pkt
      {3e}!\n     !          !          !          !          ! <------- !\n     !
      \         !          !          ! <==(1)== !  pkt     !\n     !          !          !
      <==(2)== !  pkt     !          !\n     !          ! <==(3)== !  pkt     !          !
      \         !\n     !  <------ !  pkt     !          !          !          !\n
      \    !   pkt    !          !          !          !          !\n     :          :
      \         :          :          :          :\n     :          :          :          :
      \         :          :\n   The notation \"==(N)==>\" or \"<==(N)==\" indicates
      that the innermost\n   packet has been encapsulated N times, using IP-IP, ESP,
      or MIP NAT\n   traversal.\n   Packets marked with {xx} are shown in more detail
      below.  Each area\n   represents a protocol header (labeled).  Source and destination\n
      \  addresses or ports are shown underneath the protocol name when\n   applicable.
      \ Note that there are no NAT traversal headers in the\n   example packets.\n
      \      Packet {1a}\n           .------------------------------------.\n           !
      IP      ! IP      ! UDP   ! IKE    !\n           !  co-CoA !  x-HoA  !  500
      \ !        !\n           !  x-HA   !  VPN-GW !  500  !        !\n           `------------------------------------'\n
      \      Packet {2a}\n           .--------------------------------------------------------.\n
      \          ! IP      ! IP      ! ESP   ! IP       ! UDP   ! MIP RRQ !\n           !
      \ co-CoA !  x-HoA  !       !  VPN-TIA !  ANY  !         !\n           !  x-HA
      \  !  VPN-GW !       !  i-HA    !  434  !         !\n           `--------------------------------------------------------'\n
      \      Packet {2b}\n           .----------------------------------------------.\n
      \          ! IP      ! ESP   ! IP       ! UDP   ! MIP RRQ !\n           !  x-HoA
      \ !       !  VPN-TIA !  ANY  !         !\n           !  VPN-GW !       !  i-HA
      \   !  434  !         !\n           `----------------------------------------------'\n
      \      Packet {2c}\n           .----------------------------.\n           !
      IP       ! UDP   ! MIP RRQ !\n           !  VPN-TIA !  ANY  !         !\n           !
      \ i-HA    !  434  !         !\n           `----------------------------'\n       Packet
      {3a}\n           .-------------------.\n           ! IP     ! user     !\n           !
      \ i-HoA ! protocol !\n           !  CN    !          !\n           `-------------------'\n
      \      Packet {3b}\n           .-------------------------------------------------------
      -\n           ! IP      ! IP      ! ESP ! IP       ! IP     ! user      \\\n
      \          !  co-CoA !  x-HoA  !     !  VPN-TIA !  i-HoA ! protocol../\n           !
      \ x-HA   !  VPN-GW !     !  i-HA    !  CN    !           \\\n           `-------------------------------------------------------
      -\n              - - -----------------.\n             \\..user     ! ESP     !\n
      \            /  protocol ! trailer !\n             \\           !         !\n
      \             - - -----------------'\n       Packet {3c}\n           .--------------------------------------------------------.\n
      \          ! IP      ! ESP ! IP       ! IP     ! user     ! ESP     !\n           !
      \ x-HoA  !     !  VPN-TIA !  i-HoA ! protocol ! trailer !\n           !  VPN-GW
      !     !  i-HA    !  CN    !          !         !\n           `--------------------------------------------------------'\n
      \      Packet {3d}\n           .------------------------------.\n           !
      IP       ! IP     ! user     !\n           !  VPN-TIA !  i-HoA ! protocol !\n
      \          !  i-HA    !  CN    !          !\n           `------------------------------'\n
      \      Packet {3e}\n           .-------------------.\n           ! IP     !
      user     !\n           !  i-HoA ! protocol !\n           !  CN    !          !\n
      \          `-------------------'\n   Packet {3b} with all NAT traversal headers
      (x-MIP, ESP, and i-MIP) is\n   shown below for comparison.\n       Packet {3b}
      (with NAT traversal headers)\n           .-------------------------------------------------
      -\n           ! IP      ! UDP  ! MIP    ! IP      ! UDP   ! ESP.. \\\n           !
      \ co-CoA !  ANY ! tunnel !  x-HoA  !  4500 !       /\n           !  x-HA   !
      \ 434 ! data   !  VPN-GW !  4500 !       \\\n           `-------------------------------------------------
      -\n            <=== external MIPv4 ====> <=== IPsec ESP ======== = =\n              -
      - ------------------------------------------------ -\n             \\..ESP !
      IP       ! UDP  ! MIP    ! IP     ! user      \\\n             /      !  VPN-TIA
      !  ANY ! tunnel !  i-HoA ! protocol../\n             \\      !  i-HA    !  434
      ! data   !  CN    !           \\\n              - - ------------------------------------------------
      -\n              = ===> <==== internal MIPv4 ====> <== user packet == =\n              -
      - -----------------.\n             \\..user     ! ESP     !\n             /
      \ protocol ! trailer !\n             \\           !         !\n              -
      - -----------------'\n              = = ======> <= ESP =>\n"
    title: A.1.  Connection Setup for Access Mode 'cvc'
  title: Appendix A.  Packet Flow Examples
- contents:
  - "Authors' Addresses\n   Sami Vaarala\n   Codebay\n   P.O. Box 63\n   Espoo  02601\n
    \  FINLAND\n   Phone: +358 (0)50 5733 862\n   EMail: sami.vaarala@iki.fi\n   Espen
    Klovning\n   Birdstep\n   Bryggegata 7\n   Oslo  0250\n   NORWAY\n   Phone: +47
    95 20 26 29\n   EMail: espen@birdstep.com\n"
  title: Authors' Addresses
- contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document
    is subject to the rights, licenses and restrictions\n   contained in BCP 78, and
    except as set forth therein, the authors\n   retain all their rights.\n   This
    document and the information contained herein are provided on an\n   \"AS IS\"
    basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE INTERNET ENGINEERING
    TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED, INCLUDING BUT NOT
    LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT INFRINGE
    ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
