- title: __initial_text__
  contents:
  - '          Remote Authentication Dial In User Service (RADIUS)

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes a protocol for carrying authentication,\n\
    \   authorization, and configuration information between a Network Access\n  \
    \ Server which desires to authenticate its links and a shared\n   Authentication\
    \ Server.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n      5.5       NAS-Port ........................................\
    \   24\n      5.6       Service-Type ....................................   25\n\
    \      5.7       Framed-Protocol .................................   27\n    \
    \  5.8       Framed-IP-Address ...............................   28\n      5.9\
    \       Framed-IP-Netmask ...............................   29\n      5.10   \
    \   Framed-Routing ..................................   29\n      5.11      Filter-Id\
    \ .......................................   30\n      5.12      Framed-MTU ......................................\
    \   31\n      5.13      Framed-Compression ..............................   32\n\
    \      5.14      Login-IP-Host ...................................   33\n    \
    \  5.15      Login-Service ...................................   33\n      5.16\
    \      Login-TCP-Port ..................................   34\n      5.17    \
    \  (unassigned) ....................................   35\n      5.18      Reply-Message\
    \ ...................................   35\n      5.19      Callback-Number .................................\
    \   36\n      5.20      Callback-Id .....................................   37\n\
    \      5.21      (unassigned) ....................................   37\n    \
    \  5.22      Framed-Route ....................................   38\n      5.23\
    \      Framed-IPX-Network ..............................   39\n      5.24    \
    \  State ...........................................   39\n      5.25      Class\
    \ ...........................................   40\n      5.26      Vendor-Specific\
    \ .................................   41\n      5.27      Session-Timeout .................................\
    \   43\n      5.28      Idle-Timeout ....................................   44\n\
    \      5.29      Termination-Action ..............................   44\n    \
    \  5.30      Called-Station-Id ...............................   45\n      5.31\
    \      Calling-Station-Id ..............................   46\n      5.32    \
    \  NAS-Identifier ..................................   47\n      5.33      Proxy-State\
    \ .....................................   48\n      5.34      Login-LAT-Service\
    \ ...............................   49\n      5.35      Login-LAT-Node ..................................\
    \   50\n      5.36      Login-LAT-Group .................................   51\n\
    \      5.37      Framed-AppleTalk-Link ...........................   52\n    \
    \  5.38      Framed-AppleTalk-Network ........................   53\n      5.39\
    \      Framed-AppleTalk-Zone ...........................   53\n      5.40    \
    \  CHAP-Challenge ..................................   54\n      5.41      NAS-Port-Type\
    \ ...................................   55\n      5.42      Port-Limit ......................................\
    \   56\n      5.43      Login-LAT-Port ..................................   57\n\
    \      5.44      Table of Attributes .............................   58\n   6.\
    \     Examples ..............................................   59\n      6.1\
    \       User Telnet to Specified Host ...................   59\n      6.2    \
    \   Framed User Authenticating with CHAP ............   60\n      6.3       User\
    \ with Challenge-Response card ...............   61\n   SECURITY CONSIDERATIONS\
    \ ......................................   62\n   REFERENCES ...................................................\
    \   63\n   ACKNOWLEDGEMENTS .............................................   63\n\
    \   CHAIR'S ADDRESS ..............................................   64\n   AUTHORS'\
    \ ADDRESSES ...........................................   64\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Managing dispersed serial line and modem pools for large\
    \ numbers of\n   users can create the need for significant administrative support.\n\
    \   Since modem pools are by definition a link to the outside world, they\n  \
    \ require careful attention to security, authorization and accounting.\n   This\
    \ can be best achieved by managing a single \"database\" of users,\n   which allows\
    \ for authentication (verifying user name and password) as\n   well as configuration\
    \ information detailing the type of service to\n   deliver to the user (for example,\
    \ SLIP, PPP, telnet, rlogin).\n   Key features of RADIUS are:\n   Client/Server\
    \ Model\n      A Network Access Server (NAS) operates as a client of RADIUS. \
    \ The\n      client is responsible for passing user information to designated\n\
    \      RADIUS servers, and then acting on the response which is returned.\n  \
    \    RADIUS servers are responsible for receiving user connection\n      requests,\
    \ authenticating the user, and then returning all\n      configuration information\
    \ necessary for the client to deliver\n      service to the user.\n      A RADIUS\
    \ server can act as a proxy client to other RADIUS servers\n      or other kinds\
    \ of authentication servers.\n   Network Security\n      Transactions between\
    \ the client and RADIUS server are\n      authenticated through the use of a shared\
    \ secret, which is never\n      sent over the network.  In addition, any user\
    \ passwords are sent\n      encrypted between the client and RADIUS server, to\
    \ eliminate the\n      possibility that someone snooping on an unsecure network\
    \ could\n      determine a user's password.\n   Flexible Authentication Mechanisms\n\
    \      The RADIUS server can support a variety of methods to authenticate\n  \
    \    a user.  When it is provided with the user name and original\n      password\
    \ given by the user, it can support PPP PAP or CHAP, UNIX\n      login, and other\
    \ authentication mechanisms.\n   Extensible Protocol\n      All transactions are\
    \ comprised of variable length Attribute-\n      Length-Value 3-tuples.  New attribute\
    \ values can be added without\n      disturbing existing implementations of the\
    \ protocol.\n"
- title: 1.1.  Specification of Requirements
  contents:
  - "1.1.  Specification of Requirements\n   In this document, several words are used\
    \ to signify the requirements\n   of the specification.  These words are often\
    \ capitalized.\n   MUST      This word, or the adjective \"required\", means that\
    \ the\n             definition is an absolute requirement of the specification.\n\
    \   MUST NOT  This phrase means that the definition is an absolute\n         \
    \    prohibition of the specification.\n   SHOULD    This word, or the adjective\
    \ \"recommended\", means that there\n             may exist valid reasons in particular\
    \ circumstances to\n             ignore this item, but the full implications must\
    \ be\n             understood and carefully weighed before choosing a\n      \
    \       different course.\n   MAY       This word, or the adjective \"optional\"\
    , means that this\n             item is one of an allowed set of alternatives.\
    \  An\n             implementation which does not include this option MUST be\n\
    \             prepared to interoperate with another implementation which\n   \
    \          does include the option.\n"
- title: 1.2.  Terminology
  contents:
  - "1.2.  Terminology\n   This document frequently uses the following terms:\n  \
    \ service   The NAS provides a service to the dial-in user, such as PPP\n    \
    \         or Telnet.\n   session   Each service provided by the NAS to a dial-in\
    \ user\n             constitutes a session, with the beginning of the session\n\
    \             defined as the point where service is first provided and\n     \
    \        the end of the session defined as the point where service\n         \
    \    is ended.  A user may have multiple sessions in parallel or\n           \
    \  series if the NAS supports that.\n   silently discard\n             This means\
    \ the implementation discards the packet without\n             further processing.\
    \  The implementation SHOULD provide the\n             capability of logging the\
    \ error, including the contents of\n             the silently discarded packet,\
    \ and SHOULD record the event\n             in a statistics counter.\n"
- title: 2.  Operation
  contents:
  - "2.  Operation\n   When a client is configured to use RADIUS, any user of the\
    \ client\n   presents authentication information to the client.  This might be\n\
    \   with a customizable login prompt, where the user is expected to enter\n  \
    \ their username and password.  Alternatively, the user might use a\n   link framing\
    \ protocol such as the Point-to-Point Protocol (PPP),\n   which has authentication\
    \ packets which carry this information.\n   Once the client has obtained such\
    \ information, it may choose to\n   authenticate using RADIUS.  To do so, the\
    \ client creates an \"Access-\n   Request\" containing such Attributes as the\
    \ user's name, the user's\n   password, the ID of the client and the Port ID which\
    \ the user is\n   accessing.  When a password is present, it is hidden using a\
    \ method\n   based on the RSA Message Digest Algorithm MD5 [1].\n   The Access-Request\
    \ is submitted to the RADIUS server via the network.\n   If no response is returned\
    \ within a length of time, the request is\n   re-sent a number of times.  The\
    \ client can also forward requests to\n   an alternate server or servers in the\
    \ event that the primary server\n   is down or unreachable.  An alternate server\
    \ can be used either after\n   a number of tries to the primary server fail, or\
    \ in a round-robin\n   fashion.  Retry and fallback algorithms are the topic of\
    \ current\n   research and are not specified in detail in this document.\n   Once\
    \ the RADIUS server receives the request, it validates the sending\n   client.\
    \  A request from a client for which the RADIUS server does not\n   have a shared\
    \ secret should be silently discarded.  If the client is\n   valid, the RADIUS\
    \ server consults a database of users to find the\n   user whose name matches\
    \ the request.  The user entry in the database\n   contains a list of requirements\
    \ which must be met to allow access for\n   the user.  This always includes verification\
    \ of the password, but can\n   also specify the client(s) or port(s) to which\
    \ the user is allowed\n   access.\n   The RADIUS server MAY make requests of other\
    \ servers in order to\n   satisfy the request, in which case it acts as a client.\n\
    \   If any condition is not met, the RADIUS server sends an \"Access-\n   Reject\"\
    \ response indicating that this user request is invalid.  If\n   desired, the\
    \ server MAY include a text message in the Access-Reject\n   which MAY be displayed\
    \ by the client to the user.  No other\n   Attributes are permitted in an Access-Reject.\n\
    \   If all conditions are met and the RADIUS server wishes to issue a\n   challenge\
    \ to which the user must respond, the RADIUS server sends an\n   \"Access-Challenge\"\
    \ response.  It MAY include a text message to be\n   displayed by the client to\
    \ the user prompting for a response to the\n   challenge, and MAY include a State\
    \ attribute.  If the client receives\n   an Access-Challenge and supports challenge/response\
    \ it MAY display\n   the text message, if any, to the user, and then prompt the\
    \ user for a\n   response.  The client then re-submits its original Access-Request\n\
    \   with a new request ID, with the User-Password Attribute replaced by\n   the\
    \ response (encrypted), and including the State Attribute from the\n   Access-Challenge,\
    \ if any.  Only 0 or 1 instances of the State\n   Attributes should be present\
    \ in a request.  The server can respond to\n   this new Access-Request with either\
    \ an Access-Accept, an Access-\n   Reject, or another Access-Challenge.\n   If\
    \ all conditions are met, the list of configuration values for the\n   user are\
    \ placed into an \"Access-Accept\" response.  These values\n   include the type\
    \ of service (for example: SLIP, PPP, Login User) and\n   all necessary values\
    \ to deliver the desired service.  For SLIP and\n   PPP, this may include values\
    \ such as IP address, subnet mask, MTU,\n   desired compression, and desired packet\
    \ filter identifiers.  For\n   character mode users, this may include values such\
    \ as desired\n   protocol and host.\n"
- title: 2.1.  Challenge/Response
  contents:
  - "2.1.  Challenge/Response\n   In challenge/response authentication, the user is\
    \ given an\n   unpredictable number and challenged to encrypt it and give back\
    \ the\n   result. Authorized users are equipped with special devices such as\n\
    \   smart cards or software that facilitate calculation of the correct\n   response\
    \ with ease. Unauthorized users, lacking the appropriate\n   device or software\
    \ and lacking knowledge of the secret key necessary\n   to emulate such a device\
    \ or software, can only guess at the response.\n   The Access-Challenge packet\
    \ typically contains a Reply-Message\n   including a challenge to be displayed\
    \ to the user, such as a numeric\n   value unlikely ever to be repeated. Typically\
    \ this is obtained from\n   an external server that knows what type of authenticator\
    \ should be in\n   the possession of the authorized user and can therefore choose\
    \ a\n   random or non-repeating pseudorandom number of an appropriate radix\n\
    \   and length.\n   The user then enters the challenge into his device (or software)\
    \ and\n   it calculates a response, which the user enters into the client which\n\
    \   forwards it to the RADIUS server via a second Access-Request.  If the\n  \
    \ response matches the expected response the RADIUS server replies with\n   an\
    \ Access-Accept, otherwise an Access-Reject.\n   Example: The NAS sends an Access-Request\
    \ packet to the RADIUS Server\n   with NAS-Identifier, NAS-Port, User-Name, User-Password\
    \ (which may\n   just be a fixed string like \"challenge\" or ignored).  The server\n\
    \   sends back an Access-Challenge packet with State and a Reply-Message\n   along\
    \ the lines of \"Challenge 12345678, enter your response at the\n   prompt\" which\
    \ the NAS displays.  The NAS prompts for the response and\n   sends a NEW Access-Request\
    \ to the server (with a new ID) with NAS-\n   Identifier, NAS-Port, User-Name,\
    \ User-Password (the response just\n   entered by the user, encrypted), and the\
    \ same State Attribute that\n   came with the Access-Challenge.  The server then\
    \ sends back either an\n   Access-Accept or Access-Reject based on whether the\
    \ response matches\n   what it should be, or it can even send another Access-Challenge.\n"
- title: 2.2.  Interoperation with PAP and CHAP
  contents:
  - "2.2.  Interoperation with PAP and CHAP\n   For PAP, the NAS takes the PAP ID\
    \ and password and sends them in an\n   Access-Request packet as the User-Name\
    \ and User-Password. The NAS MAY\n   include the Attributes Service-Type = Framed-User\
    \ and Framed-Protocol\n   = PPP as a hint to the RADIUS server that PPP service\
    \ is expected.\n   For CHAP, the NAS generates a random challenge (preferably\
    \ 16 octets)\n   and sends it to the user, who returns a CHAP response along with\
    \ a\n   CHAP ID and CHAP username.  The NAS then sends an Access-Request\n   packet\
    \ to the RADIUS server with the CHAP username as the User-Name\n   and with the\
    \ CHAP ID and CHAP response as the CHAP-Password\n   (Attribute 3).  The random\
    \ challenge can either be included in the\n   CHAP-Challenge attribute or, if\
    \ it is 16 octets long, it can be\n   placed in the Request Authenticator field\
    \ of the Access-Request\n   packet.  The NAS MAY include the Attributes Service-Type\
    \ = Framed-\n   User and Framed-Protocol = PPP as a hint to the RADIUS server\
    \ that\n   PPP service is expected.\n   The RADIUS server looks up a password\
    \ based on the User-Name,\n   encrypts the challenge using MD5 on the CHAP ID\
    \ octet, that password,\n   and the CHAP challenge (from the CHAP-Challenge attribute\
    \ if present,\n   otherwise from the Request Authenticator), and compares that\
    \ result\n   to the CHAP-Password.  If they match, the server sends back an\n\
    \   Access-Accept, otherwise it sends back an Access-Reject.\n   If the RADIUS\
    \ server is unable to perform the requested\n   authentication it should return\
    \ an Access-Reject.  For example, CHAP\n   requires that the user's password be\
    \ available in cleartext to the\n   server so that it can encrypt the CHAP challenge\
    \ and compare that to\n   the CHAP response.  If the password is not available\
    \ in cleartext to\n   the RADIUS server then the server MUST send an Access-Reject\
    \ to the\n   client.\n"
- title: 2.3.  Why UDP?
  contents:
  - "2.3.  Why UDP?\n   A frequently asked question is why RADIUS uses UDP instead\
    \ of TCP as\n   a transport protocol.  UDP was chosen for strictly technical reasons.\n\
    \   There are a number of issues which must be understood.  RADIUS is a\n   transaction\
    \ based protocol which has several interesting\n   characteristics:\n   1.   If\
    \ the request to a primary Authentication server fails, a\n        secondary server\
    \ must be queried.\n        To meet this requirement, a copy of the request must\
    \ be kept\n        above the transport layer to allow for alternate transmission.\n\
    \        This means that retransmission timers are still required.\n   2.   The\
    \ timing requirements of this particular protocol are\n        significantly different\
    \ than TCP provides.\n        At one extreme, RADIUS does not require a \"responsive\"\
    \ detection\n        of lost data.  The user is willing to wait several seconds\
    \ for\n        the authentication to complete.  The generally aggressive TCP\n\
    \        retransmission (based on average round trip time) is not\n        required,\
    \ nor is the acknowledgement overhead of TCP.\n        At the other extreme, the\
    \ user is not willing to wait several\n        minutes for authentication.  Therefore\
    \ the reliable delivery of\n        TCP data two minutes later is not useful.\
    \  The faster use of an\n        alternate server allows the user to gain access\
    \ before giving\n        up.\n   3.   The stateless nature of this protocol simplifies\
    \ the use of UDP.\n        Clients and servers come and go.  Systems are rebooted,\
    \ or are\n        power cycled independently.  Generally this does not cause a\n\
    \        problem and with creative timeouts and detection of lost TCP\n      \
    \  connections, code can be written to handle anomalous events.\n        UDP however\
    \ completely eliminates any of this special handling.\n        Each client and\
    \ server can open their UDP transport just once\n        and leave it open through\
    \ all types of failure events on the\n        network.\n   4.   UDP simplifies\
    \ the server implementation.\n        In the earliest implementations of RADIUS,\
    \ the server was single\n        threaded.  This means that a single request was\
    \ received,\n        processed, and returned.  This was found to be unmanageable\
    \ in\n        environments where the back-end security mechanism took real\n \
    \       time (1 or more seconds).  The server request queue would fill\n     \
    \   and in environments where hundreds of people were being\n        authenticated\
    \ every minute, the request turn-around time\n        increased to longer that\
    \ users were willing to wait (this was\n        especially severe when a specific\
    \ lookup in a database or over\n        DNS took 30 or more seconds).  The obvious\
    \ solution was to make\n        the server multi-threaded.  Achieving this was\
    \ simple with UDP.\n        Separate processes were spawned to serve each request\
    \ and these\n        processes could respond directly to the client NAS with a\
    \ simple\n        UDP packet to the original transport of the client.\n   It's\
    \ not all a panacea.  As noted, using UDP requires one thing which\n   is built\
    \ into TCP: with UDP we must artificially manage\n   retransmission timers to\
    \ the same server, although they don't require\n   the same attention to timing\
    \ provided by TCP.  This one penalty is a\n   small price to pay for the advantages\
    \ of UDP in this protocol.\n   Without TCP we would still probably be using tin\
    \ cans connected by\n   string.  But for this particular protocol, UDP is a better\
    \ choice.\n"
- title: 3.  Packet Format
  contents:
  - "3.  Packet Format\n   Exactly one RADIUS packet is encapsulated in the UDP Data\
    \ field [2],\n   where the UDP Destination Port field indicates 1812 (decimal).\n\
    \   When a reply is generated, the source and destination ports are\n   reversed.\n\
    \   A summary of the RADIUS data format is shown below.  The fields are\n   transmitted\
    \ from left to right.\n    0                   1                   2         \
    \          3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Code      |  Identifier   |            Length             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   |  \
    \                       Authenticator                         |\n   |        \
    \                                                       |\n   |              \
    \                                                 |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  Attributes ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-\n"
- title: Code
  contents:
  - "Code\n   The Code field is one octet, and identifies the type of RADIUS\n   packet.\
    \  When a packet is received with an invalid Code field, it is\n   silently discarded.\n\
    \      RADIUS Codes (decimal) are assigned as follows:\n           1       Access-Request\n\
    \           2       Access-Accept\n           3       Access-Reject\n        \
    \   4       Accounting-Request\n           5       Accounting-Response\n     \
    \     11       Access-Challenge\n          12       Status-Server (experimental)\n\
    \          13       Status-Client (experimental)\n         255       Reserved\n\
    \   Codes 4 and 5 will be covered in the RADIUS Accounting document [9],\n   and\
    \ are not further mentioned here.  Codes 12 and 13 are reserved for\n   possible\
    \ use, but are not further mentioned here.\n"
- title: Identifier
  contents:
  - "Identifier\n   The Identifier field is one octet, and aids in matching requests\
    \ and\n   replies.\n"
- title: Length
  contents:
  - "Length\n   The Length field is two octets.  It indicates the length of the\n\
    \   packet including the Code, Identifier, Length, Authenticator and\n   Attribute\
    \ fields.  Octets outside the range of the Length field\n   should be treated\
    \ as padding and should be ignored on reception.  If\n   the packet is shorter\
    \ than the Length field indicates, it should be\n   silently discarded.  The minimum\
    \ length is 20 and maximum length is\n   4096.\n"
- title: Authenticator
  contents:
  - "Authenticator\n   The Authenticator field is sixteen (16) octets.  The most significant\n\
    \   octet is transmitted first.  This value is used to authenticate the\n   reply\
    \ from the RADIUS server, and is used in the password hiding\n   algorithm.\n"
- title: Request Authenticator
  contents:
  - "Request Authenticator\n   In Access-Request Packets, the Authenticator value\
    \ is a 16 octet\n   random number, called the Request Authenticator.  The value\
    \ SHOULD be\n   unpredictable and unique over the lifetime of a secret (the password\n\
    \   shared between the client and the RADIUS server), since repetition of\n  \
    \ a request value in conjunction with the same secret would permit an\n   attacker\
    \ to reply with a previously intercepted response.  Since it\n   is expected that\
    \ the same secret MAY be used to authenticate with\n   servers in disparate geographic\
    \ regions, the Request Authenticator\n   field SHOULD exhibit global and temporal\
    \ uniqueness.\n   The Request Authenticator value in an Access-Request packet\
    \ SHOULD\n   also be unpredictable, lest an attacker trick a server into\n   responding\
    \ to a predicted future request, and then use the response\n   to masquerade as\
    \ that server to a future Access-Request.\n   Although protocols such as RADIUS\
    \ are incapable of protecting against\n   theft of an authenticated session via\
    \ realtime active wiretapping\n   attacks, generation of unique unpredictable\
    \ requests can protect\n   against a wide range of active attacks against authentication.\n\
    \   The NAS and RADIUS server share a secret.  That shared secret\n   followed\
    \ by the Request Authenticator is put through a one-way MD5\n   hash to create\
    \ a 16 octet digest value which is xored with the\n   password entered by the\
    \ user, and the xored result placed in the\n   User-Password attribute in the\
    \ Access-Request packet.  See the entry\n   for User-Password in the section on\
    \ Attributes for a more detailed\n   description.\n"
- title: Response Authenticator
  contents:
  - "Response Authenticator\n     The value of the Authenticator field in Access-Accept,\
    \ Access-\n     Reject, and Access-Challenge packets is called the Response\n\
    \     Authenticator, and contains a one-way MD5 hash calculated over a\n     stream\
    \ of octets consisting of: the RADIUS packet, beginning with\n     the Code field,\
    \ including the Identifier, the Length, the Request\n     Authenticator field\
    \ from the Access-Request packet, and the\n     response Attributes, followed\
    \ by the shared secret.  That is,\n     ResponseAuth = MD5(Code+ID+Length+RequestAuth+Attributes+Secret)\n\
    \     where + denotes concatenation.\n"
- title: Administrative Note
  contents:
  - "Administrative Note\n   The secret (password shared between the client and the\
    \ RADIUS server)\n   SHOULD be at least as large and unguessable as a well-chosen\n\
    \   password.  It is preferred that the secret be at least 16 octets.\n   This\
    \ is to ensure a sufficiently large range for the secret to\n   provide protection\
    \ against exhaustive search attacks.  A RADIUS\n   server SHOULD use the source\
    \ IP address of the RADIUS UDP packet to\n   decide which shared secret to use,\
    \ so that RADIUS requests can be\n   proxied.\n   When using a forwarding proxy,\
    \ the proxy must be able to alter the\n   packet as it passes through in each\
    \ direction - when the proxy\n   forwards the request, the proxy can add a Proxy-State\
    \ Attribute, and\n   when the proxy forwards a response, it removes the Proxy-State\n\
    \   Attribute. Since Access-Accept and Access-Reject replies are\n   authenticated\
    \ on the entire packet contents, the stripping of the\n   Proxy-State attribute\
    \ would invalidate the signature in the packet -\n   so the proxy has to re-sign\
    \ it.\n   Further details of RADIUS proxy implementation are outside the scope\n\
    \   of this document.\n"
- title: Attributes
  contents:
  - "Attributes\n   Many Attributes may have multiple instances, in such a case the\
    \ order\n   of Attributes of the same Type SHOULD be preserved.  The order of\n\
    \   Attributes of different Types is not required to be preserved.\n   In the\
    \ section below on \"Attributes\" where the text refers to which\n   packets an\
    \ attribute is allowed in, only packets with Codes 1, 2, 3\n   and 11 and attributes\
    \ defined in this document are covered in this\n   document.  A summary table\
    \ is provided at the end of the \"Attributes\"\n   section.  To determine which\
    \ Attributes are allowed in packets with\n   codes 4 and 5 refer to the RADIUS\
    \ Accounting document [9].\n"
- title: 4.  Packet Types
  contents:
  - "4.  Packet Types\n   The RADIUS Packet type is determined by the Code field in\
    \ the first\n   octet of the Packet.\n"
- title: 4.1.  Access-Request
  contents:
  - "4.1.  Access-Request\n   Description\n     Access-Request packets are sent to\
    \ a RADIUS server, and convey\n     information used to determine whether a user\
    \ is allowed access to a\n     specific NAS, and any special services requested\
    \ for that user.  An\n     implementation wishing to authenticate a user MUST\
    \ transmit a\n     RADIUS packet with the Code field set to 1 (Access-Request).\n\
    \     Upon receipt of an Access-Request from a valid client, an\n     appropriate\
    \ reply MUST be transmitted.\n     An Access-Request MUST contain a User-Name\
    \ attribute.  It SHOULD\n     contain either a NAS-IP-Address attribute or NAS-Identifier\n\
    \     attribute (or both, although that is not recommended).  It MUST\n     contain\
    \ either a User-Password attribute or CHAP-Password\n     attribute.  It SHOULD\
    \ contain a NAS-Port or NAS-Port-Type attribute\n     or both unless the type\
    \ of access being requested does not involve\n     a port or the NAS does not\
    \ distinguish among its ports.\n     An Access-Request MAY contain additional\
    \ attributes as a hint to\n     the server, but the server is not required to\
    \ honor the hint.\n     When a User-Password is present, it is hidden using a\
    \ method based\n     on the RSA Message Digest Algorithm MD5 [1].\n   A summary\
    \ of the Access-Request packet format is shown below.  The\n   fields are transmitted\
    \ from left to right.\n    0                   1                   2         \
    \          3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Code      |  Identifier   |            Length             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   |  \
    \                   Request Authenticator                     |\n   |        \
    \                                                       |\n   |              \
    \                                                 |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  Attributes ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-\n   Code\n      1 for Access-Request.\n\
    \   Identifier\n      The Identifier field MUST be changed whenever the content\
    \ of the\n      Attributes field changes, and whenever a valid reply has been\n\
    \      received for a previous request.  For retransmissions, the\n      Identifier\
    \ MUST remain unchanged.\n   Request Authenticator\n      The Request Authenticator\
    \ value MUST be changed each time a new\n      Identifier is used.\n   Attributes\n\
    \      The Attribute field is variable in length, and contains the list\n    \
    \  of Attributes that are required for the type of service, as well\n      as\
    \ any desired optional Attributes.\n"
- title: 4.2.  Access-Accept
  contents:
  - "4.2.  Access-Accept\n   Description\n     Access-Accept packets are sent by the\
    \ RADIUS server, and provide\n     specific configuration information necessary\
    \ to begin delivery of\n     service to the user.  If all Attribute values received\
    \ in an\n     Access-Request are acceptable then the RADIUS implementation MUST\n\
    \     transmit a packet with the Code field set to 2 (Access-Accept).  On\n  \
    \   reception of an Access-Accept, the Identifier field is matched with\n    \
    \ a pending Access-Request.  Additionally, the Response Authenticator\n     field\
    \ MUST contain the correct response for the pending Access-\n     Request.  Invalid\
    \ packets are silently discarded.\n   A summary of the Access-Accept packet format\
    \ is shown below.  The\n   fields are transmitted from left to right.\n    0 \
    \                  1                   2                   3\n    0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Code      |  Identifier   |            Length             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   |  \
    \                   Response Authenticator                    |\n   |        \
    \                                                       |\n   |              \
    \                                                 |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  Attributes ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-\n   Code\n      2 for Access-Accept.\n\
    \   Identifier\n      The Identifier field is a copy of the Identifier field of\
    \ the\n      Access-Request which caused this Access-Accept.\n   Response Authenticator\n\
    \      The Response Authenticator value is calculated from the Access-\n     \
    \ Request value, as described earlier.\n   Attributes\n      The Attribute field\
    \ is variable in length, and contains a list of\n      zero or more Attributes.\n"
- title: 4.3.  Access-Reject
  contents:
  - "4.3.  Access-Reject\n   Description\n     If any value of the received Attributes\
    \ is not acceptable, then the\n     RADIUS server MUST transmit a packet with\
    \ the Code field set to 3\n     (Access-Reject).  It MAY include one or more Reply-Message\n\
    \     Attributes with a text message which the NAS MAY display to the\n     user.\n\
    \   A summary of the Access-Reject packet format is shown below.  The\n   fields\
    \ are transmitted from left to right.\n    0                   1             \
    \      2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Code      |  Identifier   |            Length             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   |  \
    \                   Response Authenticator                    |\n   |        \
    \                                                       |\n   |              \
    \                                                 |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  Attributes ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-\n   Code\n      3 for Access-Reject.\n\
    \   Identifier\n      The Identifier field is a copy of the Identifier field of\
    \ the\n      Access-Request which caused this Access-Reject.\n   Response Authenticator\n\
    \      The Response Authenticator value is calculated from the Access-\n     \
    \ Request value, as described earlier.\n   Attributes\n      The Attribute field\
    \ is variable in length, and contains a list of\n      zero or more Attributes.\n"
- title: 4.4.  Access-Challenge
  contents:
  - "4.4.  Access-Challenge\n      Description\n     If the RADIUS server desires\
    \ to send the user a challenge requiring\n     a response, then the RADIUS server\
    \ MUST respond to the Access-\n     Request by transmitting a packet with the\
    \ Code field set to 11\n     (Access-Challenge).\n     The Attributes field MAY\
    \ have one or more Reply-Message Attributes,\n     and MAY have a single State\
    \ Attribute, or none.  No other\n     Attributes are permitted in an Access-Challenge.\n\
    \     On receipt of an Access-Challenge, the Identifier field is matched\n   \
    \  with a pending Access-Request.  Additionally, the Response\n     Authenticator\
    \ field MUST contain the correct response for the\n     pending Access-Request.\
    \  Invalid packets are silently discarded.\n     If the NAS does not support challenge/response,\
    \ it MUST treat an\n     Access-Challenge as though it had received an Access-Reject\n\
    \     instead.\n     If the NAS supports challenge/response, receipt of a valid\
    \ Access-\n     Challenge indicates that a new Access-Request SHOULD be sent.\
    \  The\n     NAS MAY display the text message, if any, to the user, and then\n\
    \     prompt the user for a response.  It then sends its original\n     Access-Request\
    \ with a new request ID and Request Authenticator,\n     with the User-Password\
    \ Attribute replaced by the user's response\n     (encrypted), and including the\
    \ State Attribute from the Access-\n     Challenge, if any.  Only 0 or 1 instances\
    \ of the State Attribute\n     can be present in an Access-Request.\n     A NAS\
    \ which supports PAP MAY forward the Reply-Message to the\n     dialin client\
    \ and accept a PAP response which it can use as though\n     the user had entered\
    \ the response.  If the NAS cannot do so, it\n     should treat the Access-Challenge\
    \ as though it had received an\n     Access-Reject instead.\n   A summary of the\
    \ Access-Challenge packet format is shown below.  The\n   fields are transmitted\
    \ from left to right.\n    0                   1                   2         \
    \          3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Code      |  Identifier   |            Length             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   |  \
    \                   Response Authenticator                    |\n   |        \
    \                                                       |\n   |              \
    \                                                 |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  Attributes ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-\n   Code\n      11 for Access-Challenge.\n\
    \   Identifier\n      The Identifier field is a copy of the Identifier field of\
    \ the\n      Access-Request which caused this Access-Challenge.\n   Response Authenticator\n\
    \      The Response Authenticator value is calculated from the Access-\n     \
    \ Request value, as described earlier.\n   Attributes\n      The Attributes field\
    \ is variable in length, and contains a list of\n      zero or more Attributes.\n"
- title: 5.  Attributes
  contents:
  - "5.  Attributes\n   RADIUS Attributes carry the specific authentication, authorization,\n\
    \   information and configuration details for the request and reply.\n   Some\
    \ Attributes MAY be included more than once.  The effect of this\n   is Attribute\
    \ specific, and is specified in each Attribute\n   description.\n   The end of\
    \ the list of Attributes is indicated by the Length of the\n   RADIUS packet.\n\
    \   A summary of the Attribute format is shown below.  The fields are\n   transmitted\
    \ from left to right.\n    0                   1                   2\n    0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   |     Type      |    Length     |  Value ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   Type\n      The Type field is one octet.  Up-to-date values of the RADIUS\
    \ Type\n      field are specified in the most recent \"Assigned Numbers\" RFC\
    \ [3].\n      Values 192-223 are reserved for experimental use, values 224-240\n\
    \      are reserved for implementation-specific use, and values 241-255\n    \
    \  are reserved and should not be used.  This specification concerns\n      the\
    \ following values:\n      A RADIUS server MAY ignore Attributes with an unknown\
    \ Type.\n      A RADIUS client MAY ignore Attributes with an unknown Type.\n \
    \         1      User-Name\n          2      User-Password\n          3      CHAP-Password\n\
    \          4      NAS-IP-Address\n          5      NAS-Port\n          6     \
    \ Service-Type\n          7      Framed-Protocol\n          8      Framed-IP-Address\n\
    \          9      Framed-IP-Netmask\n         10      Framed-Routing\n       \
    \  11      Filter-Id\n         12      Framed-MTU\n         13      Framed-Compression\n\
    \         14      Login-IP-Host\n         15      Login-Service\n         16 \
    \     Login-TCP-Port\n         17      (unassigned)\n         18      Reply-Message\n\
    \         19      Callback-Number\n         20      Callback-Id\n         21 \
    \     (unassigned)\n         22      Framed-Route\n         23      Framed-IPX-Network\n\
    \         24      State\n         25      Class\n         26      Vendor-Specific\n\
    \         27      Session-Timeout\n         28      Idle-Timeout\n         29\
    \      Termination-Action\n         30      Called-Station-Id\n         31   \
    \   Calling-Station-Id\n         32      NAS-Identifier\n         33      Proxy-State\n\
    \         34      Login-LAT-Service\n         35      Login-LAT-Node\n       \
    \  36      Login-LAT-Group\n         37      Framed-AppleTalk-Link\n         38\
    \      Framed-AppleTalk-Network\n         39      Framed-AppleTalk-Zone\n    \
    \     40-59   (reserved for accounting)\n         60      CHAP-Challenge\n   \
    \      61      NAS-Port-Type\n         62      Port-Limit\n         63      Login-LAT-Port\n\
    \   Length\n     The Length field is one octet, and indicates the length of this\n\
    \     Attribute including the Type, Length and Value fields.  If an\n     Attribute\
    \ is received in an Access-Request but with an invalid\n     Length, an Access-Reject\
    \ SHOULD be transmitted.  If an Attribute is\n     received in an Access-Accept,\
    \ Access-Reject or Access-Challenge\n     packet with an invalid length, the packet\
    \ MUST either be treated as\n     an Access-Reject or else silently discarded.\n\
    \   Value\n     The Value field is zero or more octets and contains information\n\
    \     specific to the Attribute.  The format and length of the Value\n     field\
    \ is determined by the Type and Length fields.\n     Note that a \"string\" in\
    \ RADIUS does not require termination by an\n     ASCII NUL because the Attribute\
    \ already has a length field.\n     The format of the value field is one of four\
    \ data types.\n      string    0-253 octets\n      address   32 bit value, most\
    \ significant octet first.\n      integer   32 bit value, most significant octet\
    \ first.\n      time      32 bit value, most significant octet first -- seconds\n\
    \                since 00:00:00 GMT, January 1, 1970.  The standard\n        \
    \        Attributes do not use this data type but it is presented\n          \
    \      here for possible use within Vendor-Specific attributes.\n"
- title: 5.1.  User-Name
  contents:
  - "5.1.  User-Name\n   Description\n     This Attribute indicates the name of the\
    \ user to be authenticated.\n     It is only used in Access-Request packets.\n\
    \   A summary of the User-Name Attribute format is shown below.  The\n   fields\
    \ are transmitted from left to right.\n    0                   1             \
    \      2\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   |     Type      |    Length     |  String ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   Type\n     1 for User-Name.\n   Length\n     >= 3\n   String\n     The String\
    \ field is one or more octets.  The NAS may limit the\n     maximum length of\
    \ the User-Name but the ability to handle at least\n     63 octets is recommended.\n\
    \     The format of the username MAY be one of several forms:\n     monolithic\
    \ Consisting only of alphanumeric characters.  This\n                simple form\
    \ might be used to locally manage a NAS.\n     simple     Consisting only of printable\
    \ ASCII characters.\n     name@fqdn SMTP address.  The Fully Qualified Domain\
    \ Name (with or\n               without trailing dot) indicates the realm in which\
    \ the\n               name part applies.\n     distinguished name\n          \
    \     A name in ASN.1 form used in Public Key authentication\n               systems.\n"
- title: 5.2.  User-Password
  contents:
  - "5.2.  User-Password\n   Description\n     This Attribute indicates the password\
    \ of the user to be\n     authenticated, or the user's input following an Access-Challenge.\n\
    \     It is only used in Access-Request packets.\n     On transmission, the password\
    \ is hidden.  The password is first\n     padded at the end with nulls to a multiple\
    \ of 16 octets.  A one-way\n     MD5 hash is calculated over a stream of octets\
    \ consisting of the\n     shared secret followed by the Request Authenticator.\
    \  This value is\n     XORed with the first 16 octet segment of the password and\
    \ placed in\n     the first 16 octets of the String field of the User-Password\n\
    \     Attribute.\n     If the password is longer than 16 characters, a second\
    \ one-way MD5\n     hash is calculated over a stream of octets consisting of the\
    \ shared\n     secret followed by the result of the first xor.  That hash is XORed\n\
    \     with the second 16 octet segment of the password and placed in the\n   \
    \  second 16 octets of the String field of the User-Password\n     Attribute.\n\
    \     If necessary, this operation is repeated, with each xor result\n     being\
    \ used along with the shared secret to generate the next hash\n     to xor the\
    \ next segment of the password, to no more than 128\n     characters.\n     The\
    \ method is taken from the book \"Network Security\" by Kaufman,\n     Perlman\
    \ and Speciner [4] pages 109-110.  A more precise explanation\n     of the method\
    \ follows:\n     Call the shared secret S and the pseudo-random 128-bit Request\n\
    \     Authenticator RA.  Break the password into 16-octet chunks p1, p2,\n   \
    \  etc.  with the last one padded at the end with nulls to a 16-octet\n     boundary.\
    \  Call the ciphertext blocks c(1), c(2), etc.  We'll need\n     intermediate\
    \ values b1, b2, etc.\n         b1 = MD5(S + RA)       c(1) = p1 xor b1\n    \
    \     b2 = MD5(S + c(1))     c(2) = p2 xor b2\n                .             \
    \          .\n                .                       .\n                .   \
    \                    .\n         bi = MD5(S + c(i-1))   c(i) = pi xor bi\n   \
    \  The String will contain c(1)+c(2)+...+c(i) where + denotes\n     concatenation.\n\
    \     On receipt, the process is reversed to yield the original password.\n  \
    \ A summary of the User-Password Attribute format is shown below.  The\n   fields\
    \ are transmitted from left to right.\n       0                   1          \
    \         2\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \      |     Type      |    Length     |  String ...\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \      Type\n         2 for User-Password.\n      Length\n         At least 18\
    \ and no larger than 130.\n      String\n         The String field is between\
    \ 16 and 128 octets long, inclusive.\n"
- title: 5.3.  CHAP-Password
  contents:
  - "5.3.  CHAP-Password\n   Description\n     This Attribute indicates the response\
    \ value provided by a PPP\n     Challenge-Handshake Authentication Protocol (CHAP)\
    \ user in response\n     to the challenge.  It is only used in Access-Request\
    \ packets.\n     The CHAP challenge value is found in the CHAP-Challenge Attribute\n\
    \     (60) if present in the packet, otherwise in the Request\n     Authenticator\
    \ field.\n   A summary of the CHAP-Password Attribute format is shown below. \
    \ The\n   fields are transmitted from left to right.\n    0                  \
    \ 1                   2\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   |     Type      |    Length     |  CHAP Ident   |  String ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   Type\n      3 for CHAP-Password.\n   Length\n      19\n   CHAP Ident\n   \
    \   This field is one octet, and contains the CHAP Identifier from the\n     \
    \ user's CHAP Response.\n   String\n      The String field is 16 octets, and contains\
    \ the CHAP Response from\n      the user.\n"
- title: 5.4.  NAS-IP-Address
  contents:
  - "5.4.  NAS-IP-Address\n   Description\n     This Attribute indicates the identifying\
    \ IP Address of the NAS\n     which is requesting authentication of the user.\
    \  It is only used in\n     Access-Request packets.  Either NAS-IP-Address or\
    \ NAS-Identifier\n     SHOULD be present in an Access-Request packet.\n   A summary\
    \ of the NAS-IP-Address Attribute format is shown below.  The\n   fields are transmitted\
    \ from left to right.\n    0                   1                   2         \
    \          3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |            Address\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \            Address (cont)         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      4 for NAS-IP-Address.\n   Length\n      6\n   Address\n      The\
    \ Address field is four octets.\n"
- title: 5.5.  NAS-Port
  contents:
  - "5.5.  NAS-Port\n   Description\n     This Attribute indicates the physical port\
    \ number of the NAS which\n     is authenticating the user.  It is only used in\
    \ Access-Request\n     packets.  Note that this is using \"port\" in its sense\
    \ of a physical\n     connection on the NAS, not in the sense of a TCP or UDP\
    \ port\n     number.  Either NAS-Port or NAS-Port-Type (61) or both SHOULD be\n\
    \     present in an Access-Request packet, if the NAS differentiates\n     among\
    \ its ports.\n   A summary of the NAS-Port Attribute format is shown below.  The\n\
    \   fields are transmitted from left to right.\n    0                   1    \
    \               2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |             Value\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \              Value (cont)         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      5 for NAS-Port.\n   Length\n      6\n   Value\n      The Value\
    \ field is four octets.  Despite the size of the field,\n      values range from\
    \ 0 to 65535.\n"
- title: 5.6.  Service-Type
  contents:
  - "5.6.  Service-Type\n   Description\n     This Attribute indicates the type of\
    \ service the user has\n     requested, or the type of service to be provided.\
    \  It MAY be used\n     in both Access-Request and Access-Accept packets.  A NAS\
    \ is not\n     required to implement all of these service types, and MUST treat\n\
    \     unknown or unsupported Service-Types as though an Access-Reject had\n  \
    \   been received instead.\n   A summary of the Service-Type Attribute format\
    \ is shown below.  The\n   fields are transmitted from left to right.\n    0 \
    \                  1                   2                   3\n    0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |             Value\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \              Value (cont)         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      6 for Service-Type.\n   Length\n      6\n   Value\n      The Value\
    \ field is four octets.\n       1      Login\n       2      Framed\n       3 \
    \     Callback Login\n       4      Callback Framed\n       5      Outbound\n\
    \       6      Administrative\n       7      NAS Prompt\n       8      Authenticate\
    \ Only\n       9      Callback NAS Prompt\n      The service types are defined\
    \ as follows when used in an Access-\n      Accept.  When used in an Access-Request,\
    \ they should be considered\n      to be a hint to the RADIUS server that the\
    \ NAS has reason to\n      believe the user would prefer the kind of service indicated,\
    \ but\n      the server is not required to honor the hint.\n      Login      \
    \         The user should be connected to a host.\n      Framed              A\
    \ Framed Protocol should be started for the\n                          User, such\
    \ as PPP or SLIP.\n      Callback Login      The user should be disconnected and\
    \ called\n                          back, then connected to a host.\n      Callback\
    \ Framed     The user should be disconnected and called\n                    \
    \      back, then a Framed Protocol should be started\n                      \
    \    for the User, such as PPP or SLIP.\n      Outbound            The user should\
    \ be granted access to outgoing\n                          devices.\n      Administrative\
    \      The user should be granted access to the\n                          administrative\
    \ interface to the NAS from which\n                          privileged commands\
    \ can be executed.\n      NAS Prompt          The user should be provided a command\
    \ prompt\n                          on the NAS from which non-privileged commands\n\
    \                          can be executed.\n      Authenticate Only   Only Authentication\
    \ is requested, and no\n                          authorization information needs\
    \ to be returned\n                          in the Access-Accept (typically used\
    \ by proxy\n                          servers rather than the NAS itself).\n \
    \     Callback NAS Prompt The user should be disconnected and called\n       \
    \                   back, then provided a command prompt on the\n            \
    \              NAS from which non-privileged commands can be\n               \
    \           executed.\n"
- title: 5.7.  Framed-Protocol
  contents:
  - "5.7.  Framed-Protocol\n   Description\n      This Attribute indicates the framing\
    \ to be used for framed access.\n      It MAY be used in both Access-Request and\
    \ Access-Accept packets.\n   A summary of the Framed-Protocol Attribute format\
    \ is shown below.\n   The fields are transmitted from left to right.\n    0  \
    \                 1                   2                   3\n    0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |             Value\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \              Value (cont)         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      7 for Framed-Protocol.\n   Length\n      6\n   Value\n      The\
    \ Value field is four octets.\n       1      PPP\n       2      SLIP\n       3\
    \      AppleTalk Remote Access Protocol (ARAP)\n       4      Gandalf proprietary\
    \ SingleLink/MultiLink protocol\n       5      Xylogics proprietary IPX/SLIP\n"
- title: 5.8.  Framed-IP-Address
  contents:
  - "5.8.  Framed-IP-Address\n   Description\n      This Attribute indicates the address\
    \ to be configured for the\n      user.  It MAY be used in Access-Accept packets.\
    \  It MAY be used in\n      an Access-Request packet as a hint by the NAS to the\
    \ server that\n      it would prefer that address, but the server is not required\
    \ to\n      honor the hint.\n   A summary of the Framed-IP-Address Attribute format\
    \ is shown below.\n   The fields are transmitted from left to right.\n    0  \
    \                 1                   2                   3\n    0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |            Address\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \            Address (cont)         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      8 for Framed-IP-Address.\n   Length\n      6\n   Address\n   \
    \   The Address field is four octets.  The value 0xFFFFFFFF indicates\n      that\
    \ the NAS should allow the user to select an address (e.g.\n      Negotiated).\
    \  The value 0xFFFFFFFE indicates that the NAS should\n      select an address\
    \ for the user (e.g. Assigned from a pool of\n      addresses kept by the NAS).\
    \  Other valid values indicate that the\n      NAS should use that value as the\
    \ user's IP address.\n"
- title: 5.9.  Framed-IP-Netmask
  contents:
  - "5.9.  Framed-IP-Netmask\n   Description\n      This Attribute indicates the IP\
    \ netmask to be configured for the\n      user when the user is a router to a\
    \ network.  It MAY be used in\n      Access-Accept packets.  It MAY be used in\
    \ an Access-Request packet\n      as a hint by the NAS to the server that it would\
    \ prefer that\n      netmask, but the server is not required to honor the hint.\n\
    \   A summary of the Framed-IP-Netmask Attribute format is shown below.\n   The\
    \ fields are transmitted from left to right.\n    0                   1      \
    \             2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |            Address\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \            Address (cont)         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      9 for Framed-IP-Netmask.\n   Length\n      6\n   Address\n   \
    \   The Address field is four octets specifying the IP netmask of the\n      user.\n"
- title: 5.10.  Framed-Routing
  contents:
  - "5.10.  Framed-Routing\n   Description\n      This Attribute indicates the routing\
    \ method for the user, when the\n      user is a router to a network.  It is only\
    \ used in Access-Accept\n      packets.\n   A summary of the Framed-Routing Attribute\
    \ format is shown below.  The\n   fields are transmitted from left to right.\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |             Value\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \              Value (cont)         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      10 for Framed-Routing.\n   Length\n      6\n   Value\n      The\
    \ Value field is four octets.\n       0      None\n       1      Send routing\
    \ packets\n       2      Listen for routing packets\n       3      Send and Listen\n"
- title: 5.11.  Filter-Id
  contents:
  - "5.11.  Filter-Id\n   Description\n      This Attribute indicates the name of\
    \ the filter list for this\n      user.  Zero or more Filter-Id attributes MAY\
    \ be sent in an\n      Access-Accept packet.\n      Identifying a filter list\
    \ by name allows the filter to be used on\n      different NASes without regard\
    \ to filter-list implementation\n      details.\n   A summary of the Filter-Id\
    \ Attribute format is shown below.  The\n   fields are transmitted from left to\
    \ right.\n    0                   1                   2\n    0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   |     Type      |    Length     |  String ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   Type\n      11 for Filter-Id.\n   Length\n      >= 3\n   String\n      The\
    \ String field is one or more octets, and its contents are\n      implementation\
    \ dependent.  It is intended to be human readable and\n      MUST NOT affect operation\
    \ of the protocol.  It is recommended that\n      the message contain displayable\
    \ ASCII characters from the range 32\n      through 126 decimal.\n"
- title: 5.12.  Framed-MTU
  contents:
  - "5.12.  Framed-MTU\n   Description\n      This Attribute indicates the Maximum\
    \ Transmission Unit to be\n      configured for the user, when it is not negotiated\
    \ by some other\n      means (such as PPP).  It is only used in Access-Accept\
    \ packets.\n   A summary of the Framed-MTU Attribute format is shown below.  The\n\
    \   fields are transmitted from left to right.\n    0                   1    \
    \               2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |             Value\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \              Value (cont)         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      12 for Framed-MTU.\n   Length\n      6\n   Value\n      The Value\
    \ field is four octets.  Despite the size of the field,\n      values range from\
    \ 64 to 65535.\n"
- title: 5.13.  Framed-Compression
  contents:
  - "5.13.  Framed-Compression\n   Description\n     This Attribute indicates a compression\
    \ protocol to be used for the\n     link.  It MAY be used in Access-Accept packets.\
    \  It MAY be used in\n     an Access-Request packet as a hint to the server that\
    \ the NAS would\n     prefer to use that compression, but the server is not required\
    \ to\n     honor the hint.\n     More than one compression protocol Attribute\
    \ MAY be sent.  It is\n     the responsibility of the NAS to apply the proper\
    \ compression\n     protocol to appropriate link traffic.\n   A summary of the\
    \ Framed-Compression Attribute format is shown below.\n   The fields are transmitted\
    \ from left to right.\n       0                   1                   2      \
    \             3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     Type      |    Length     |             Value\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                 Value (cont)         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Type\n         13 for Framed-Compression.\n      Length\n         6\n \
    \     Value\n         The Value field is four octets.\n          0      None\n\
    \          1      VJ TCP/IP header compression [5]\n          2      IPX header\
    \ compression\n"
- title: 5.14.  Login-IP-Host
  contents:
  - "5.14.  Login-IP-Host\n   Description\n      This Attribute indicates the system\
    \ with which to connect the\n      user, when the Login-Service Attribute is included.\
    \  It MAY be\n      used in Access-Accept packets.  It MAY be used in an Access-\n\
    \      Request packet as a hint to the server that the NAS would prefer\n    \
    \  to use that host, but the server is not required to honor the\n      hint.\n\
    \   A summary of the Login-IP-Host Attribute format is shown below.  The\n   fields\
    \ are transmitted from left to right.\n    0                   1             \
    \      2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |            Address\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \            Address (cont)         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      14 for Login-IP-Host.\n   Length\n      6\n   Address\n      The\
    \ Address field is four octets.  The value 0xFFFFFFFF indicates\n      that the\
    \ NAS SHOULD allow the user to select an address.  The\n      value 0 indicates\
    \ that the NAS SHOULD select a host to connect the\n      user to.  Other values\
    \ indicate the address the NAS SHOULD connect\n      the user to.\n"
- title: 5.15.  Login-Service
  contents:
  - "5.15.  Login-Service\n   Description\n      This Attribute indicates the service\
    \ which should be used to\n      connect the user to the login host.  It is only\
    \ used in Access-\n      Accept packets.\n   A summary of the Login-Service Attribute\
    \ format is shown below.  The\n   fields are transmitted from left to right.\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |             Value\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \              Value (cont)         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      15 for Login-Service.\n   Length\n      6\n   Value\n      The\
    \ Value field is four octets.\n       0      Telnet\n       1      Rlogin\n  \
    \     2      TCP Clear\n       3      PortMaster (proprietary)\n       4     \
    \ LAT\n"
- title: 5.16.  Login-TCP-Port
  contents:
  - "5.16.  Login-TCP-Port\n   Description\n      This Attribute indicates the TCP\
    \ port with which the user is to be\n      connected, when the Login-Service Attribute\
    \ is also present.  It\n      is only used in Access-Accept packets.\n   A summary\
    \ of the Login-TCP-Port Attribute format is shown below.  The\n   fields are transmitted\
    \ from left to right.\n    0                   1                   2         \
    \          3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |             Value\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \              Value (cont)         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      16 for Login-TCP-Port.\n   Length\n      6\n   Value\n      The\
    \ Value field is four octets.  Despite the size of the field,\n      values range\
    \ from 0 to 65535.\n"
- title: 5.17.  (unassigned)
  contents:
  - "5.17.  (unassigned)\n   Description\n      ATTRIBUTE TYPE 17 HAS NOT BEEN ASSIGNED.\n"
- title: 5.18.  Reply-Message
  contents:
  - "5.18.  Reply-Message\n   Description\n      This Attribute indicates text which\
    \ MAY be displayed to the user.\n      When used in an Access-Accept, it is the\
    \ success message.\n      When used in an Access-Reject, it is the failure message.\
    \  It MAY\n      indicate a dialog message to prompt the user before another\n\
    \      Access-Request attempt.\n      When used in an Access-Challenge, it MAY\
    \ indicate a dialog message\n      to prompt the user for a response.\n      Multiple\
    \ Reply-Message's MAY be included and if any are displayed,\n      they MUST be\
    \ displayed in the same order as they appear in the\n      packet.\n   A summary\
    \ of the Reply-Message Attribute format is shown below.  The\n   fields are transmitted\
    \ from left to right.\n    0                   1                   2\n    0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   |     Type      |    Length     |  String ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   Type\n      18 for Reply-Message.\n   Length\n      >= 3\n   String\n    \
    \  The String field is one or more octets, and its contents are\n      implementation\
    \ dependent.  It is intended to be human readable,\n      and MUST NOT affect\
    \ operation of the protocol.  It is recommended\n      that the message contain\
    \ displayable ASCII characters from the\n      range 10, 13, and 32 through 126\
    \ decimal.  Mechanisms for\n      extension to other character sets are beyond\
    \ the scope of this\n      specification.\n"
- title: 5.19.  Callback-Number
  contents:
  - "5.19.  Callback-Number\n   Description\n      This Attribute indicates a dialing\
    \ string to be used for callback.\n      It MAY be used in Access-Accept packets.\
    \  It MAY be used in an\n      Access-Request packet as a hint to the server that\
    \ a Callback\n      service is desired, but the server is not required to honor\
    \ the\n      hint.\n   A summary of the Callback-Number Attribute format is shown\
    \ below.\n   The fields are transmitted from left to right.\n    0           \
    \        1                   2\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n   |     Type      | \
    \   Length     |  String ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   Type\n      19 for Callback-Number.\n   Length\n      >= 3\n   String\n  \
    \    The String field is one or more octets.  The actual format of the\n     \
    \ information is site or application specific, and a robust\n      implementation\
    \ SHOULD support the field as undistinguished octets.\n      The codification\
    \ of the range of allowed usage of this field is\n      outside the scope of this\
    \ specification.\n"
- title: 5.20.  Callback-Id
  contents:
  - "5.20.  Callback-Id\n   Description\n      This Attribute indicates the name of\
    \ a place to be called, to be\n      interpreted by the NAS.  It MAY be used in\
    \ Access-Accept packets.\n   A summary of the Callback-Id Attribute format is\
    \ shown below.  The\n   fields are transmitted from left to right.\n    0    \
    \               1                   2\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n   |     Type  \
    \    |    Length     |  String ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   Type\n      20 for Callback-Id.\n   Length\n      >= 3\n   String\n      The\
    \ String field is one or more octets.  The actual format of the\n      information\
    \ is site or application specific, and a robust\n      implementation SHOULD support\
    \ the field as undistinguished octets.\n      The codification of the range of\
    \ allowed usage of this field is\n      outside the scope of this specification.\n"
- title: 5.21.  (unassigned)
  contents:
  - "5.21.  (unassigned)\n   Description\n      ATTRIBUTE TYPE 21 HAS NOT BEEN ASSIGNED.\n"
- title: 5.22.  Framed-Route
  contents:
  - "5.22.  Framed-Route\n   Description\n      This Attribute provides routing information\
    \ to be configured for\n      the user on the NAS.  It is used in the Access-Accept\
    \ packet and\n      can appear multiple times.\n   A summary of the Framed-Route\
    \ Attribute format is shown below.  The\n   fields are transmitted from left to\
    \ right.\n    0                   1                   2\n    0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   |     Type      |    Length     |  String...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   Type\n      22 for Framed-Route.\n   Length\n      >= 3\n   String\n     \
    \ The String field is one or more octets, and its contents are\n      implementation\
    \ dependent.  It is intended to be human readable and\n      MUST NOT affect operation\
    \ of the protocol.  It is recommended that\n      the message contain displayable\
    \ ASCII characters from the range 32\n      through 126 decimal.\n      For IP\
    \ routes, it SHOULD contain a destination prefix in dotted\n      quad form optionally\
    \ followed by a slash and a decimal length\n      specifier stating how many high\
    \ order bits of the prefix should\n      be used.  That is followed by a space,\
    \ a gateway address in\n      dotted quad form, a space, and one or more metrics\
    \ separated by\n      spaces.  For example, \"192.168.1.0/24 192.168.1.1 1 2 -1\
    \ 3 400\".\n      The length specifier may be omitted in which case it should\n\
    \      default to 8 bits for class A prefixes, 16 bits for class B\n      prefixes,\
    \ and 24 bits for class C prefixes.  For example,\n      \"192.168.1.0 192.168.1.1\
    \ 1\".\n      Whenever the gateway address is specified as \"0.0.0.0\" the IP\n\
    \      address of the user SHOULD be used as the gateway address.\n"
- title: 5.23.  Framed-IPX-Network
  contents:
  - "5.23.  Framed-IPX-Network\n   Description\n      This Attribute indicates the\
    \ IPX Network number to be configured\n      for the user.  It is used in Access-Accept\
    \ packets.\n   A summary of the Framed-IPX-Network Attribute format is shown below.\n\
    \   The fields are transmitted from left to right.\n    0                   1\
    \                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |             Value\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \              Value (cont)         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      23 for Framed-IPX-Network.\n   Length\n      6\n   Value\n   \
    \   The Value field is four octets.  The value 0xFFFFFFFE indicates\n      that\
    \ the NAS should select an IPX network for the user (e.g.\n      assigned from\
    \ a pool of one or more IPX networks kept by the NAS).\n      Other values should\
    \ be used as the IPX network for the link to the\n      user.\n"
- title: 5.24.  State
  contents:
  - "5.24.  State\n   Description\n      This Attribute is available to be sent by\
    \ the server to the client\n      in an Access-Challenge and MUST be sent unmodified\
    \ from the client\n      to the server in the new Access-Request reply to that\
    \ challenge,\n      if any.\n      This Attribute is available to be sent by the\
    \ server to the client\n      in an Access-Accept that also includes a Termination-Action\n\
    \      Attribute with the value of RADIUS-Request.  If the NAS performs\n    \
    \  the Termination-Action by sending a new Access-Request upon\n      termination\
    \ of the current session, it MUST include the State\n      attribute unchanged\
    \ in that Access-Request.\n      In either usage, no interpretation by the client\
    \ should be made.\n      A packet may have only one State Attribute.  Usage of\
    \ the State\n      Attribute is implementation dependent.\n   A summary of the\
    \ State Attribute format is shown below.  The fields\n   are transmitted from\
    \ left to right.\n    0                   1                   2\n    0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   |     Type      |    Length     |  String ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   Type\n      24 for State.\n   Length\n      >= 3\n   String\n      The String\
    \ field is one or more octets.  The actual format of the\n      information is\
    \ site or application specific, and a robust\n      implementation SHOULD support\
    \ the field as undistinguished octets.\n      The codification of the range of\
    \ allowed usage of this field is\n      outside the scope of this specification.\n"
- title: 5.25.  Class
  contents:
  - "5.25.  Class\n   Description\n      This Attribute is available to be sent by\
    \ the server to the client\n      in an Access-Accept and should be sent unmodified\
    \ by the client to\n      the accounting server as part of the Accounting-Request\
    \ packet if\n      accounting is supported.  No interpretation by the client should\n\
    \      be made.\n   A summary of the Class Attribute format is shown below.  The\
    \ fields\n   are transmitted from left to right.\n    0                   1  \
    \                 2\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   |     Type      |    Length     |  String ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   Type\n      25 for Class.\n   Length\n      >= 3\n   String\n      The String\
    \ field is one or more octets.  The actual format of the\n      information is\
    \ site or application specific, and a robust\n      implementation SHOULD support\
    \ the field as undistinguished octets.\n      The codification of the range of\
    \ allowed usage of this field is\n      outside the scope of this specification.\n"
- title: 5.26.  Vendor-Specific
  contents:
  - "5.26.  Vendor-Specific\n   Description\n      This Attribute is available to\
    \ allow vendors to support their own\n      extended Attributes not suitable for\
    \ general usage.  It MUST not\n      affect the operation of the RADIUS protocol.\n\
    \      Servers not equipped to interpret the vendor-specific information\n   \
    \   sent by a client MUST ignore it (although it may be reported).\n      Clients\
    \ which do not receive desired vendor-specific information\n      SHOULD make\
    \ an attempt to operate without it, although they may do\n      so (and report\
    \ they are doing so) in a degraded mode.\n   A summary of the Vendor-Specific\
    \ Attribute format is shown below.\n   The fields are transmitted from left to\
    \ right.\n    0                   1                   2                   3\n\
    \    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |  Length       |            Vendor-Id\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \        Vendor-Id (cont)           |  String...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   Type\n      26 for Vendor-Specific.\n   Length\n      >= 7\n   Vendor-Id\n\
    \      The high-order octet is 0 and the low-order 3 octets are the SMI\n    \
    \  Network Management Private Enterprise Code of the Vendor in\n      network\
    \ byte order, as defined in the Assigned Numbers RFC [2].\n   String\n      The\
    \ String field is one or more octets.  The actual format of the\n      information\
    \ is site or application specific, and a robust\n      implementation SHOULD support\
    \ the field as undistinguished octets.\n      The codification of the range of\
    \ allowed usage of this field is\n      outside the scope of this specification.\n\
    \      It SHOULD be encoded as a sequence of vendor type / vendor length\n   \
    \   / value fields, as follows.  The Attribute-Specific field is\n      dependent\
    \ on the vendor's definition of that attribute.  An\n      example encoding of\
    \ the Vendor-Specific attribute using this\n      method follows:\n       0  \
    \                 1                   2                   3\n       0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     Type      |  Length       |            Vendor-Id\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \           Vendor-Id (cont)           | Vendor type   | Vendor length |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \    Attribute-Specific...\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n"
- title: 5.27.  Session-Timeout
  contents:
  - "5.27.  Session-Timeout\n   Description\n      This Attribute sets the maximum\
    \ number of seconds of service to be\n      provided to the user before termination\
    \ of the session or prompt.\n      This Attribute is available to be sent by the\
    \ server to the client\n      in an Access-Accept or Access-Challenge.\n   A summary\
    \ of the Session-Timeout Attribute format is shown below.\n   The fields are transmitted\
    \ from left to right.\n    0                   1                   2         \
    \          3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |             Value\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \              Value (cont)         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      27 for Session-Timeout.\n   Length\n      6\n   Value\n      The\
    \ field is 4 octets, containing a 32-bit unsigned integer with\n      the maximum\
    \ number of seconds this user should be allowed to\n      remain connected by\
    \ the NAS.\n"
- title: 5.28.  Idle-Timeout
  contents:
  - "5.28.  Idle-Timeout\n   Description\n      This Attribute sets the maximum number\
    \ of consecutive seconds of\n      idle connection allowed to the user before\
    \ termination of the\n      session or prompt.  This Attribute is available to\
    \ be sent by the\n      server to the client in an Access-Accept or Access-Challenge.\n\
    \   A summary of the Idle-Timeout Attribute format is shown below.  The\n   fields\
    \ are transmitted from left to right.\n    0                   1             \
    \      2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |             Value\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \              Value (cont)         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      28 for Idle-Timeout.\n   Length\n      6\n   Value\n      The\
    \ field is 4 octets, containing a 32-bit unsigned integer with\n      the maximum\
    \ number of consecutive seconds of idle time this user\n      should be permitted\
    \ before being disconnected by the NAS.\n"
- title: 5.29.  Termination-Action
  contents:
  - "5.29.  Termination-Action\n   Description\n      This Attribute indicates what\
    \ action the NAS should take when the\n      specified service is completed. \
    \ It is only used in Access-Accept\n      packets.\n   A summary of the Termination-Action\
    \ Attribute format is shown below.\n   The fields are transmitted from left to\
    \ right.\n    0                   1                   2                   3\n\
    \    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |             Value\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \              Value (cont)         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      29 for Termination-Action.\n   Length\n      6\n   Value\n   \
    \   The Value field is four octets.\n       0      Default\n       1      RADIUS-Request\n\
    \      If the Value is set to RADIUS-Request, upon termination of the\n      specified\
    \ service the NAS MAY send a new Access-Request to the\n      RADIUS server, including\
    \ the State attribute if any.\n"
- title: 5.30.  Called-Station-Id
  contents:
  - "5.30.  Called-Station-Id\n   Description\n      This Attribute allows the NAS\
    \ to send in the Access-Request\n      packet the phone number that the user called,\
    \ using  Dialed\n      Number Identification (DNIS) or similar technology.  Note\
    \ that\n      this may be different from the phone number the call comes in\n\
    \      on.  It is only used in Access-Request packets.\n   A summary of the Called-Station-Id\
    \ Attribute format is shown below.\n   The fields are transmitted from left to\
    \ right.\n    0                   1                   2\n    0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   |     Type      |    Length     |  String ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   Type\n      30 for Called-Station-Id.\n   Length\n      >= 3\n   String\n\
    \      The String field is one or more octets, containing the phone\n      number\
    \ that the user's call came in on.\n      The actual format of the information\
    \ is site or application\n      specific.  Printable ASCII is recommended, but\
    \ a robust\n      implementation SHOULD support the field as undistinguished octets.\n\
    \      The codification of the range of allowed usage of this field is\n     \
    \ outside the scope of this specification.\n"
- title: 5.31.  Calling-Station-Id
  contents:
  - "5.31.  Calling-Station-Id\n   Description\n      This Attribute allows the NAS\
    \ to send in the Access-Request\n      packet the phone number that the call came\
    \ from, using Automatic\n      Number Identification (ANI) or similar technology.\
    \  It is only\n      used in Access-Request packets.\n   A summary of the Calling-Station-Id\
    \ Attribute format is shown below.\n   The fields are transmitted from left to\
    \ right.\n    0                   1                   2\n    0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   |     Type      |    Length     |  String ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   Type\n      31 for Calling-Station-Id.\n   Length\n      >= 3\n   String\n\
    \      The String field is one or more octets, containing the phone\n      number\
    \ that the user placed the call from.\n      The actual format of the information\
    \ is site or application\n      specific.  Printable ASCII is recommended, but\
    \ a robust\n      implementation SHOULD support the field as undistinguished octets.\n\
    \      The codification of the range of allowed usage of this field is\n     \
    \ outside the scope of this specification.\n"
- title: 5.32.  NAS-Identifier
  contents:
  - "5.32.  NAS-Identifier\n   Description\n      This Attribute contains a string\
    \ identifying the NAS originating\n      the Access-Request.  It is only used\
    \ in Access-Request packets.\n      Either NAS-IP-Address or NAS-Identifier SHOULD\
    \ be present in an\n      Access-Request packet.\n   A summary of the NAS-Identifier\
    \ Attribute format is shown below.  The\n   fields are transmitted from left to\
    \ right.\n    0                   1                   2\n    0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   |     Type      |    Length     |  String ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   Type\n      32 for NAS-Identifier.\n   Length\n      >= 3\n   String\n   \
    \   The String field is one or more octets, and should be unique to\n      the\
    \ NAS within the scope of the RADIUS server.  For example, a\n      fully qualified\
    \ domain name would be suitable as a NAS-Identifier.\n      The actual format\
    \ of the information is site or application\n      specific, and a robust implementation\
    \ SHOULD support the field as\n      undistinguished octets.\n      The codification\
    \ of the range of allowed usage of this field is\n      outside the scope of this\
    \ specification.\n"
- title: 5.33.  Proxy-State
  contents:
  - "5.33.  Proxy-State\n   Description\n      This Attribute is available to be sent\
    \ by a proxy server to\n      another server when forwarding an Access-Request\
    \ and MUST be\n      returned unmodified in the Access-Accept, Access-Reject or\n\
    \      Access-Challenge.  This attribute should be removed by the proxy\n    \
    \  server before the response is forwarded to the NAS.\n      Usage of the Proxy-State\
    \ Attribute is implementation dependent.  A\n      description of its function\
    \ is outside the scope of this\n      specification.\n   A summary of the Proxy-State\
    \ Attribute format is shown below.  The\n   fields are transmitted from left to\
    \ right.\n    0                   1                   2\n    0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   |     Type      |    Length     |  String ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   Type\n      33 for Proxy-State.\n   Length\n      >= 3\n   String\n      The\
    \ String field is one or more octets.  The actual format of the\n      information\
    \ is site or application specific, and a robust\n      implementation SHOULD support\
    \ the field as undistinguished octets.\n      The codification of the range of\
    \ allowed usage of this field is\n      outside the scope of this specification.\n"
- title: 5.34.  Login-LAT-Service
  contents:
  - "5.34.  Login-LAT-Service\n   Description\n      This Attribute indicates the\
    \ system with which the user is to be\n      connected by LAT.  It MAY be used\
    \ in Access-Accept packets, but\n      only when LAT is specified as the Login-Service.\
    \  It MAY be used\n      in an Access-Request packet as a hint to the server,\
    \ but the\n      server is not required to honor the hint.\n      Administrators\
    \ use the service attribute when dealing with\n      clustered systems, such as\
    \ a VAX or Alpha cluster. In such an\n      environment several different time\
    \ sharing hosts share the same\n      resources (disks, printers, etc.), and administrators\
    \ often\n      configure each to offer access (service) to each of the shared\n\
    \      resources. In this case, each host in the cluster advertises its\n    \
    \  services through LAT broadcasts.\n      Sophisticated users often know which\
    \ service providers (machines)\n      are faster and tend to use a node name when\
    \ initiating a LAT\n      connection.  Alternately, some administrators want particular\n\
    \      users to use certain machines as a primitive form of load\n      balancing\
    \ (although LAT knows how to do load balancing itself).\n   A summary of the Login-LAT-Service\
    \ Attribute format is shown below.\n   The fields are transmitted from left to\
    \ right.\n    0                   1                   2\n    0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   |     Type      |    Length     |  String ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   Type\n      34 for Login-LAT-Service.\n   Length\n      >= 3\n   String\n\
    \      The String field is one or more octets, and contains the identity\n   \
    \   of the LAT service to use.  The LAT Architecture allows this\n      string\
    \ to contain $ (dollar), - (hyphen), . (period), _\n      (underscore), numerics,\
    \ upper and lower case alphabetics, and the\n      ISO Latin-1 character set extension\
    \ [6].  All LAT string\n      comparisons are case insensitive.\n"
- title: 5.35.  Login-LAT-Node
  contents:
  - "5.35.  Login-LAT-Node\n   Description\n      This Attribute indicates the Node\
    \ with which the user is to be\n      automatically connected by LAT.  It MAY\
    \ be used in Access-Accept\n      packets, but only when LAT is specified as the\
    \ Login-Service.  It\n      MAY be used in an Access-Request packet as a hint\
    \ to the server,\n      but the server is not required to honor the hint.\n  \
    \ A summary of the Login-LAT-Node Attribute format is shown below.  The\n   fields\
    \ are transmitted from left to right.\n    0                   1             \
    \      2\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   |     Type      |    Length     |  String ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   Type\n      35 for Login-LAT-Node.\n   Length\n      >= 3\n   String\n   \
    \   The String field is one or more octets, and contains the identity\n      of\
    \ the LAT Node to connect the user to.  The LAT Architecture\n      allows this\
    \ string to contain $ (dollar), - (hyphen), . (period),\n      _ (underscore),\
    \ numerics, upper and lower case alphabetics, and\n      the ISO Latin-1 character\
    \ set extension.  All LAT string\n      comparisons are case insensitive.\n"
- title: 5.36.  Login-LAT-Group
  contents:
  - "5.36.  Login-LAT-Group\n   Description\n      This Attribute contains a string\
    \ identifying the LAT group codes\n      which this user is authorized to use.\
    \  It MAY be used in Access-\n      Accept packets, but only when LAT is specified\
    \ as the Login-\n      Service.  It MAY be used in an Access-Request packet as\
    \ a hint to\n      the server, but the server is not required to honor the hint.\n\
    \      LAT supports 256 different group codes, which LAT uses as a form\n    \
    \  of access rights.  LAT encodes the group codes as a 256 bit\n      bitmap.\n\
    \      Administrators can assign one or more of the group code bits at\n     \
    \ the LAT service provider; it will only accept LAT connections that\n      have\
    \ these group codes set in the bit map. The administrators\n      assign a bitmap\
    \ of authorized group codes to each user; LAT gets\n      these from the operating\
    \ system, and uses these in its requests to\n      the service providers.\n  \
    \ A summary of the Login-LAT-Group Attribute format is shown below.\n   The fields\
    \ are transmitted from left to right.\n    0                   1             \
    \      2\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   |     Type      |    Length     |  String ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   Type\n      36 for Login-LAT-Group.\n   Length\n      34\n   String\n    \
    \  The String field is a 32 octet bit map, most significant octet\n      first.\
    \  A robust implementation SHOULD support the field as\n      undistinguished\
    \ octets.\n      The codification of the range of allowed usage of this field\
    \ is\n      outside the scope of this specification.\n"
- title: 5.37.  Framed-AppleTalk-Link
  contents:
  - "5.37.  Framed-AppleTalk-Link\n   Description\n      This Attribute indicates\
    \ the AppleTalk network number which should\n      be used for the serial link\
    \ to the user, which is another\n      AppleTalk router.  It is only used in Access-Accept\
    \ packets.  It\n      is never used when the user is not another router.\n   A\
    \ summary of the Framed-AppleTalk-Link Attribute format is shown\n   below.  The\
    \ fields are transmitted from left to right.\n    0                   1      \
    \             2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |             Value\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \              Value (cont)         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      37 for Framed-AppleTalk-Link.\n   Length\n      6\n   Value\n\
    \      The Value field is four octets.  Despite the size of the field,\n     \
    \ values range from 0 to 65535.  The special value of 0 indicates\n      that\
    \ this is an unnumbered serial link.  A value of 1-65535 means\n      that the\
    \ serial line between the NAS and the user should be\n      assigned that value\
    \ as an AppleTalk network number.\n"
- title: 5.38.  Framed-AppleTalk-Network
  contents:
  - "5.38.  Framed-AppleTalk-Network\n   Description\n      This Attribute indicates\
    \ the AppleTalk Network number which the\n      NAS should probe to allocate an\
    \ AppleTalk node for the user.  It\n      is only used in Access-Accept packets.\
    \  It is never used when the\n      user is another router.  Multiple instances\
    \ of this Attribute\n      indicate that the NAS may probe using any of the network\
    \ numbers\n      specified.\n   A summary of the Framed-AppleTalk-Network Attribute\
    \ format is shown\n   below.  The fields are transmitted from left to right.\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |             Value\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \              Value (cont)         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      38 for Framed-AppleTalk-Network.\n   Length\n      6\n   Value\n\
    \      The Value field is four octets.  Despite the size of the field,\n     \
    \ values range from 0 to 65535.  The special value 0 indicates that\n      the\
    \ NAS should assign a network for the user, using its default\n      cable range.\
    \  A value between 1 and 65535 (inclusive) indicates\n      the AppleTalk Network\
    \ the NAS should probe to find an address for\n      the user.\n"
- title: 5.39.  Framed-AppleTalk-Zone
  contents:
  - "5.39.  Framed-AppleTalk-Zone\n   Description\n      This Attribute indicates\
    \ the AppleTalk Default Zone to be used for\n      this user.  It is only used\
    \ in Access-Accept packets.  Multiple\n      instances of this attribute in the\
    \ same packet are not allowed.\n   A summary of the Framed-AppleTalk-Zone Attribute\
    \ format is shown\n   below.  The fields are transmitted from left to right.\n\
    \    0                   1                   2\n    0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   |     Type      |    Length     |  String ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   Type\n      39 for Framed-AppleTalk-Zone.\n   Length\n      >= 3\n   String\n\
    \      The name of the Default AppleTalk Zone to be used for this user.\n    \
    \  A robust implementation SHOULD support the field as\n      undistinguished\
    \ octets.\n      The codification of the range of allowed usage of this field\
    \ is\n      outside the scope of this specification.\n"
- title: 5.40.  CHAP-Challenge
  contents:
  - "5.40.  CHAP-Challenge\n   Description\n      This Attribute contains the CHAP\
    \ Challenge sent by the NAS to a\n      PPP Challenge-Handshake Authentication\
    \ Protocol (CHAP) user.  It\n      is only used in Access-Request packets.\n \
    \     If the CHAP challenge value is 16 octets long it MAY be placed in\n    \
    \  the Request Authenticator field instead of using this attribute.\n   A summary\
    \ of the CHAP-Challenge Attribute format is shown below.  The\n   fields are transmitted\
    \ from left to right.\n    0                   1                   2\n    0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   |     Type      |    Length     |    String...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   Type\n      60 for CHAP-Challenge.\n   Length\n      >= 7\n   String\n   \
    \   The String field contains the CHAP Challenge.\n"
- title: 5.41.  NAS-Port-Type
  contents:
  - "5.41.  NAS-Port-Type\n   Description\n      This Attribute indicates the type\
    \ of the physical port of the NAS\n      which is authenticating the user.  It\
    \ can be used instead of or in\n      addition to the NAS-Port (5) attribute.\
    \  It is only used in\n      Access-Request packets.  Either NAS-Port (5) or NAS-Port-Type\
    \ or\n      both SHOULD be present in an Access-Request packet, if the NAS\n \
    \     differentiates among its ports.\n   A summary of the NAS-Port-Type Attribute\
    \ format is shown below.  The\n   fields are transmitted from left to right.\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |             Value\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \              Value (cont)         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      61 for NAS-Port-Type.\n   Length\n      6\n   Value\n      The\
    \ Value field is four octets.  \"Virtual\" refers to a connection\n      to the\
    \ NAS via some transport protocol, instead of through a\n      physical port.\
    \  For example, if a user telnetted into a NAS to\n      authenticate himself\
    \ as an Outbound-User, the Access-Request might\n      include NAS-Port-Type =\
    \ Virtual as a hint to the RADIUS server\n      that the user was not on a physical\
    \ port.\n      0       Async\n      1       Sync\n      2       ISDN Sync\n  \
    \    3       ISDN Async V.120\n      4       ISDN Async V.110\n      5       Virtual\n"
- title: 5.42.  Port-Limit
  contents:
  - "5.42.  Port-Limit\n   Description\n      This Attribute sets the maximum number\
    \ of ports to be provided to\n      the user by the NAS.  This Attribute MAY be\
    \ sent by the server to\n      the client in an Access-Accept packet.  It is intended\
    \ for use in\n      conjunction with Multilink PPP [7] or similar uses.  It MAY\
    \ also\n      be sent by the NAS to the server as a hint that that many ports\n\
    \      are desired for use, but the server is not required to honor the\n    \
    \  hint.\n   A summary of the Port-Limit Attribute format is shown below.  The\n\
    \   fields are transmitted from left to right.\n    0                   1    \
    \               2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |             Value\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \              Value (cont)         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      62 for Port-Limit.\n   Length\n      6\n   Value\n      The field\
    \ is 4 octets, containing a 32-bit unsigned integer with\n      the maximum number\
    \ of ports this user should be allowed to connect\n      to on the NAS.\n"
- title: 5.43.  Login-LAT-Port
  contents:
  - "5.43.  Login-LAT-Port\n   Description\n      This Attribute indicates the Port\
    \ with which the user is to be\n      connected by LAT.  It MAY be used in Access-Accept\
    \ packets, but\n      only when LAT is specified as the Login-Service.  It MAY\
    \ be used\n      in an Access-Request packet as a hint to the server, but the\n\
    \      server is not required to honor the hint.\n   A summary of the Login-LAT-Port\
    \ Attribute format is shown below.  The\n   fields are transmitted from left to\
    \ right.\n    0                   1                   2\n    0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   |     Type      |    Length     |  String ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n\
    \   Type\n      63 for Login-LAT-Port.\n   Length\n      >= 3\n   String\n   \
    \   The String field is one or more octets, and contains the identity\n      of\
    \ the LAT port to use.  The LAT Architecture allows this string\n      to contain\
    \ $ (dollar), - (hyphen), . (period), _ (underscore),\n      numerics, upper and\
    \ lower case alphabetics, and the ISO Latin-1\n      character set extension.\
    \  All LAT string comparisons are case\n      insensitive.\n"
- title: 5.44.  Table of Attributes
  contents:
  - "5.44.  Table of Attributes\n   The following table provides a guide to which\
    \ attributes may be found\n   in which kinds of packets, and in what quantity.\n\
    \   Request   Accept   Reject   Challenge   #    Attribute\n   1         0   \
    \     0        0            1   User-Name\n   0-1       0        0        0  \
    \          2   User-Password [Note 1]\n   0-1       0        0        0      \
    \      3   CHAP-Password [Note 1]\n   0-1       0        0        0          \
    \  4   NAS-IP-Address\n   0-1       0        0        0            5   NAS-Port\n\
    \   0-1       0-1      0        0            6   Service-Type\n   0-1       0-1\
    \      0        0            7   Framed-Protocol\n   0-1       0-1      0    \
    \    0            8   Framed-IP-Address\n   0-1       0-1      0        0    \
    \        9   Framed-IP-Netmask\n   0         0-1      0        0           10\
    \   Framed-Routing\n   0         0+       0        0           11   Filter-Id\n\
    \   0         0-1      0        0           12   Framed-MTU\n   0+        0+ \
    \      0        0           13   Framed-Compression\n   0+        0+       0 \
    \       0           14   Login-IP-Host\n   0         0-1      0        0     \
    \      15   Login-Service\n   0         0-1      0        0           16   Login-TCP-Port\n\
    \   0         0+       0+       0+          18   Reply-Message\n   0-1       0-1\
    \      0        0           19   Callback-Number\n   0         0-1      0    \
    \    0           20   Callback-Id\n   0         0+       0        0          \
    \ 22   Framed-Route\n   0         0-1      0        0           23   Framed-IPX-Network\n\
    \   0-1       0-1      0        0-1         24   State\n   0         0+      \
    \ 0        0           25   Class\n   0+        0+       0        0+         \
    \ 26   Vendor-Specific\n   0         0-1      0        0-1         27   Session-Timeout\n\
    \   0         0-1      0        0-1         28   Idle-Timeout\n   0         0-1\
    \      0        0           29   Termination-Action\n   0-1       0        0 \
    \       0           30   Called-Station-Id\n   0-1       0        0        0 \
    \          31   Calling-Station-Id\n   0-1       0        0        0         \
    \  32   NAS-Identifier\n   0+        0+       0+       0+          33   Proxy-State\n\
    \   0-1       0-1      0        0           34   Login-LAT-Service\n   0-1   \
    \    0-1      0        0           35   Login-LAT-Node\n   0-1       0-1     \
    \ 0        0           36   Login-LAT-Group\n   0         0-1      0        0\
    \           37   Framed-AppleTalk-Link\n   0         0+       0        0     \
    \      38   Framed-AppleTalk-Network\n   0         0-1      0        0       \
    \    39   Framed-AppleTalk-Zone\n   0-1       0        0        0           60\
    \   CHAP-Challenge\n   0-1       0        0        0           61   NAS-Port-Type\n\
    \   0-1       0-1      0        0           62   Port-Limit\n   0-1       0-1\
    \      0        0           63   Login-LAT-Port\n   Request   Accept   Reject\
    \   Challenge   #    Attribute\n   [Note 1] An Access-Request MUST contain either\
    \ a User-Password or a\n   CHAP-Password, and MUST NOT contain both.\n   The following\
    \ table defines the meaning of the above table entries.\n"
- title: 0     This attribute MUST NOT be present in packet.
  contents:
  - '0     This attribute MUST NOT be present in packet.

    '
- title: 0+    Zero or more instances of this attribute MAY be present in packet.
  contents:
  - '0+    Zero or more instances of this attribute MAY be present in packet.

    '
- title: 0-1   Zero or one instance of this attribute MAY be present in packet.
  contents:
  - '0-1   Zero or one instance of this attribute MAY be present in packet.

    '
- title: 1     Exactly one instance of this attribute MUST be present in packet.
  contents:
  - '1     Exactly one instance of this attribute MUST be present in packet.

    '
- title: 6.  Examples
  contents:
  - "6.  Examples\n   A few examples are presented to illustrate the flow of packets\
    \ and\n   use of typical attributes.  These examples are not intended to be\n\
    \   exhaustive, many others are possible.\n"
- title: 6.1.  User Telnet to Specified Host
  contents:
  - "6.1.  User Telnet to Specified Host\n   The NAS at 192.168.1.16 sends an Access-Request\
    \ UDP packet to the\n   RADIUS Server for a user named nemo logging in on port\
    \ 3.\n      Code = 1        (Access-Request)\n      ID = 0\n      Request Authenticator\
    \ = {16 octet random number}\n      Attributes:\n          User-Name = \"nemo\"\
    \n          User-Password = {16 octets of Password padded at end with nulls,\n\
    \                      XORed with MD5(shared secret|Request Authenticator)}\n\
    \          NAS-IP-Address = 192.168.1.16\n          NAS-Port = 3\n   The RADIUS\
    \ server authenticates nemo, and sends an Access-Accept UDP\n   packet to the\
    \ NAS telling it to telnet nemo to host 192.168.1.3.\n      Code = 2        (Access-Accept)\n\
    \      ID = 0          (same as in Access-Request)\n      Response Authenticator\
    \ = {16-octet MD-5 checksum of the code (2),\n                      id (0), the\
    \ Request Authenticator from above, the\n                      attributes in this\
    \ reply, and the shared secret}\n      Attributes:\n          Service-Type = Login-User\n\
    \          Login-Service = Telnet\n          Login-Host = 192.168.1.3\n"
- title: 6.2.  Framed User Authenticating with CHAP
  contents:
  - "6.2.  Framed User Authenticating with CHAP\n   The NAS at 192.168.1.16 sends\
    \ an Access-Request UDP packet to the\n   RADIUS Server for a user named flopsy\
    \ logging in on port 20 with PPP,\n   authenticating using CHAP.  The NAS sends\
    \ along the Service-Type and\n   Framed-Protocol attributes as a hint to the RADIUS\
    \ server that this\n   user is looking for PPP, although the NAS is not required\
    \ to do so.\n      Code = 1        (Access-Request)\n      ID = 1\n      Request\
    \ Authenticator = {16 octet random number also used as\n                     \
    \          CHAP challenge}\n      Attributes:\n          User-Name = \"flopsy\"\
    \n          CHAP-Password = {1 octet CHAP ID followed by 16 octet\n          \
    \                 CHAP response}\n          NAS-IP-Address = 192.168.1.16\n  \
    \        NAS-Port = 20\n          Service-Type = Framed-User\n          Framed-Protocol\
    \ = PPP\n   The RADIUS server authenticates flopsy, and sends an Access-Accept\n\
    \   UDP packet to the NAS telling it to start PPP service and assign an\n   address\
    \ for the user out of its dynamic address pool.\n      Code = 2        (Access-Accept)\n\
    \      ID = 1          (same as in Access-Request)\n      Response Authenticator\
    \ = {16-octet MD-5 checksum of the code (2),\n                      id (1), the\
    \ Request Authenticator from above, the\n                      attributes in this\
    \ reply, and the shared secret}\n      Attributes:\n          Service-Type = Framed-User\n\
    \          Framed-Protocol = PPP\n          Framed-IP-Address = 255.255.255.254\n\
    \          Framed-Routing = None\n          Framed-Compression = 1      (VJ TCP/IP\
    \ Header Compression)\n          Framed-MTU = 1500\n"
- title: 6.3.  User with Challenge-Response card
  contents:
  - "6.3.  User with Challenge-Response card\n   The NAS at 192.168.1.16 sends an\
    \ Access-Request UDP packet to the\n   RADIUS Server for a user named mopsy logging\
    \ in on port 7.\n"
- title: Code = 1        (Access-Request)
  contents:
  - 'Code = 1        (Access-Request)

    '
- title: ID = 2
  contents:
  - 'ID = 2

    '
- title: Request Authenticator = {16 octet random number}
  contents:
  - 'Request Authenticator = {16 octet random number}

    '
- title: 'Attributes:'
  contents:
  - "Attributes:\n    User-Name = \"mopsy\"\n    User-Password = {16 octets of Password\
    \ padded at end with nulls,\n                XORed with MD5(shared secret|Request\
    \ Authenticator)}\n    NAS-IP-Address = 192.168.1.16\n    NAS-Port = 7\n   The\
    \ RADIUS server decides to challenge mopsy, sending back a\n   challenge string\
    \ and looking for a response.  The RADIUS server\n   therefore and sends an Access-Challenge\
    \ UDP packet to the NAS.\n"
- title: Code = 11       (Access-Challenge}
  contents:
  - 'Code = 11       (Access-Challenge}

    '
- title: ID = 2          (same as in Access-Request)
  contents:
  - 'ID = 2          (same as in Access-Request)

    '
- title: Response Authenticator = {16-octet MD-5 checksum of the code (11),
  contents:
  - "Response Authenticator = {16-octet MD-5 checksum of the code (11),\n        \
    \        id (2), the Request Authenticator from above, the\n                attributes\
    \ in this reply, and the shared secret}\n"
- title: 'Attributes:'
  contents:
  - "Attributes:\n    Reply-Message = \"Challenge 32769430.  Enter response at prompt.\"\
    \n    State =     {Magic Cookie to be returned along with user's response}\n \
    \  The user enters his response, and the NAS send a new Access-Request\n   with\
    \ that response, and includes the State Attribute.\n"
- title: Code = 1        (Access-Request)
  contents:
  - 'Code = 1        (Access-Request)

    '
- title: ID = 3          (Note that this changes)
  contents:
  - 'ID = 3          (Note that this changes)

    '
- title: Request Authenticator = {NEW 16 octet random number}
  contents:
  - 'Request Authenticator = {NEW 16 octet random number}

    '
- title: 'Attributes:'
  contents:
  - "Attributes:\n    User-Name = \"mopsy\"\n    User-Password = {16 octets of Response\
    \ padded at end with\n                nulls, XORed with MD5 checksum of shared\
    \ secret\n                plus above Request Authenticator}\n    NAS-IP-Address\
    \ = 192.168.1.16\n    NAS-Port = 7\n    State =     {Magic Cookie from Access-Challenge\
    \ packet, unchanged}\n   The Response was incorrect, so the RADIUS server tells\
    \ the NAS to\n   reject the login attempt.\n      Code = 3        (Access-Reject)\n\
    \      ID = 3          (same as in Access-Request)\n      Response Authenticator\
    \ = {16-octet MD-5 checksum of the code (3),\n                      id (3), the\
    \ Request Authenticator from above, the\n                      attributes in this\
    \ reply if any, and the shared\n                       secret}\n      Attributes:\n\
    \              (none, although a Reply-Message could be sent)\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are the primary topic of this document.\n\
    \   In practice, within or associated with each RADIUS server, there is a\n  \
    \ database which associates \"user\" names with authentication\n   information\
    \ (\"secrets\").  It is not anticipated that a particular\n   named user would\
    \ be authenticated by multiple methods.  This would\n   make the user vulnerable\
    \ to attacks which negotiate the least secure\n   method from among a set.  Instead,\
    \ for each named user there should\n   be an indication of exactly one method\
    \ used to authenticate that user\n   name.  If a user needs to make use of different\
    \ authentication\n   methods under different circumstances, then distinct user\
    \ names\n   SHOULD be employed, each of which identifies exactly one\n   authentication\
    \ method.\n   Passwords and other secrets should be stored at the respective ends\n\
    \   such that access to them is as limited as possible.  Ideally, the\n   secrets\
    \ should only be accessible to the process requiring access in\n   order to perform\
    \ the authentication.\n   The secrets should be distributed with a mechanism that\
    \ limits the\n   number of entities that handle (and thus gain knowledge of) the\n\
    \   secret.  Ideally, no unauthorized person should ever gain knowledge\n   of\
    \ the secrets.  It is possible to achieve this with SNMP Security\n   Protocols\
    \ [8], but such a mechanism is outside the scope of this\n   specification.\n\
    \   Other distribution methods are currently undergoing research and\n   experimentation.\
    \  The SNMP Security document [8] also has an\n   excellent overview of threats\
    \ to network protocols.\n"
- title: References
  contents:
  - "References\n   [1]   Rivest, R., and S. Dusse, \"The MD5 Message-Digest Algorithm\"\
    ,\n         RFC 1321, MIT Laboratory for Computer Science, RSA Data\n        \
    \ Security Inc., April 1992.\n   [2]   Postel, J., \"User Datagram Protocol\"\
    , STD 6, RFC 768,\n         USC/Information Sciences Institute, August 1980.\n\
    \   [3]   Reynolds, J., and J. Postel, \"Assigned Numbers\", STD 2, RFC\n    \
    \     1700, USC/Information Sciences Institute, October 1994.\n   [4]   Kaufman,\
    \ C., Perlman, R., and Speciner, M., \"Network Security:\n         Private Communications\
    \ in a Public World\", Prentice Hall, March\n         1995, ISBN 0-13-061466-1.\n\
    \   [5]   Jacobson, V., \"Compressing TCP/IP headers for low-speed serial\n  \
    \       links\", RFC 1144, Lawrence Berkeley Laboratory, February 1990.\n   [6]\
    \   ISO 8859. International Standard -- Information Processing --\n         8-bit\
    \ Single-Byte Coded Graphic Character Sets -- Part 1: Latin\n         Alphabet\
    \ No. 1, ISO 8859-1:1987.\n         <URL:http://www.iso.ch/cate/d16338.html>\n\
    \   [7]   Sklower, K., Lloyd, B., McGregor, G., and Carr, D., \"The PPP\n    \
    \     Multilink Protocol (MP)\", RFC 1717, University of California\n        \
    \ Berkeley, Lloyd Internetworking, Newbridge Networks\n         Corporation, November\
    \ 1994.\n   [8]   Galvin, J., McCloghrie, K., and J. Davin, \"SNMP Security\n\
    \         Protocols\", RFC 1352, Trusted Information Systems, Inc., Hughes\n \
    \        LAN Systems, Inc., MIT Laboratory for Computer Science, July\n      \
    \   1992.\n   [9]   Rigney, C., \"RADIUS Accounting\", RFC 2059, January 1997.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   RADIUS was originally developed by Livingston Enterprises\
    \ for their\n   PortMaster series of Network Access Servers.\n"
- title: Chair's Address
  contents:
  - "Chair's Address\n   The working group can be contacted via the current chair:\n\
    \   Carl Rigney\n   Livingston Enterprises\n   6920 Koll Center Parkway, Suite\
    \ 220\n   Pleasanton, California  94566\n   Phone: +1 510 426 0770\n   EMail:\
    \ cdr@livingston.com\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Questions about this memo can also be directed to:\n \
    \  Carl Rigney\n   Livingston Enterprises\n   6920 Koll Center Parkway, Suite\
    \ 220\n   Pleasanton, California  94566\n   Phone: +1 510 426 0770\n   EMail:\
    \ cdr@livingston.com\n   Allan C. Rubens\n   Merit Network, Inc.\n   4251 Plymouth\
    \ Road\n   Ann Arbor, Michigan  48105-2785\n   EMail: acr@merit.edu\n   William\
    \ Allen Simpson\n   Daydreamer\n   Computer Systems Consulting Services\n   1384\
    \ Fontaine\n   Madison Heights, Michigan  48071\n   EMail: wsimpson@greendragon.com\n\
    \   Steve Willens\n   Livingston Enterprises\n   6920 Koll Center Parkway, Suite\
    \ 220\n   Pleasanton, California  94566\n   EMail: steve@livingston.com\n"
