- title: __initial_text__
  contents:
  - "                   The S/KEY One-Time Password System\nStatus of this Memo\n\
    \   This memo provides information for the Internet community.  This memo\n  \
    \ does not specify an Internet standard of any kind.  Distribution of\n   this\
    \ memo is unlimited.\nAbstract\n   This document describes the S/KEY* One-Time\
    \ Password system as\n   released for public use by Bellcore and as described\
    \ in reference\n   [3].  A reference implementation and documentation are available\
    \ by\n   anonymous ftp from ftp.bellcore.com in the directories pub/nmh/...\n\
    Overview\n   One form of attack on computing system connected to the Internet\
    \ is\n   eavesdropping on network connections to obtain login id's and\n   passwords\
    \ of legitimate users.  The captured login id and password\n   are, at a later\
    \ time, used gain access to the system.  The S/KEY\n   One-Time Password system\
    \ is designed to counter this type of attack,\n   called a replay attack.\n  \
    \ With the S/KEY system, only a single use password ever crosses the\n   network.\
    \  The user's secret pass-phrase never crosses the network at\n   any time, including\
    \ during login or when executing other commands\n   requiring authentication such\
    \ as the UNIX commands passwd or su.\n   Thus, it is not vulnerable to eavesdropping/replay\
    \ attacks.  Added\n   security is provided by the property that no secret information\
    \ need\n   be stored on any system, including the host being protected.\n   The\
    \ S/KEY system protects against external passive attacks against\n   the authentication\
    \ subsystem.  It does not prevent a network\n   eavesdropper from gaining access\
    \ to private information, and does not\n   provide protection against \"inside\
    \ jobs\" or against active attacks\n   where the potential intruder as able to\
    \ intercept and modify the\n   packet stream.\nIntroduction\n   There are two\
    \ sides to the operation of the S/KEY one-time password\n   system.  On the client\
    \ side, the appropriate one-time password must\n   be generated.  On the host\
    \ side, the server must verify the one-time\n   password and permit the secure\
    \ changing of the user's secret pass-\n   phrase.\n   An S/KEY system client passes\
    \ the user's secret pass-phrase through\n   multiple applications of a secure\
    \ hash function to produce a one-time\n   password.  On each use, the number of\
    \ applications is reduced by one.\n   Thus a unique sequence of passwords is generated.\
    \  The S/KEY system\n   host verifies the one-time password by making one pass\
    \ though the\n   secure hash function and comparing the result with the previous\
    \ one-\n   time password.  This technique was first suggested by Leslie Lamport\n\
    \   [1].\nSecure Hash Function\n   A secure hash function is a function that is\
    \ easy to compute in the\n   forward direction, but computationally infeasible\
    \ to invert.  The\n   S/KEY system is based on the MD4 Message Digest algorithm\
    \ designed by\n   Ronald Rivest [2].  Since the S/KEY authentication system went\
    \ into\n   use, the MD5 Message Digest was released.  We have chosen to continue\n\
    \   to use MD4 due the large number of client programs that have been\n   distributed.\
    \  Some sites have generated functionally similar systems\n   based on MD5.  Clearly\
    \ clients and hosts must use the same secure\n   hash function to interoperate.\n\
    \   The S/KEY system one-time passwords are 64 bits in length.  This is\n   believed\
    \ to be long enough to be secure and short enough to be\n   manually entered (see\
    \ below, Form of Passwords) when necessary.\n   The S/KEY system applies the secure\
    \ hash function multiple times,\n   producing a 64 bit final output.  MD4 accepts\
    \ an arbitrary number of\n   bits as input and produces a 128 bit output.  The\
    \ S/KEY secure hash\n   function consists of applying MD4 to a 64 bit input and\
    \ folding the\n   output of MD4 with exclusive or to produce a 64 bit output.\n\
    Generation of One-Time Passwords\n   This section describes the computation of\
    \ the S/KEY one-time\n   passwords.  It consists of a preparatory step in which\
    \ all inputs are\n   combined, a generation step where the secure hash function\
    \ is applied\n   multiple times, and an output function where the 64 bit one-time\n\
    \   password is displayed in readable form.\n   The client's secret pass phrase\
    \ may be of any length and should be\n   more than eight characters.  As the S/KEY\
    \ secure hash function\n   described above accepts a 64 bit input, a preparatory\
    \ step is needed.\n   In this step, the pass phrase is concatenated with a seed\
    \ that is\n   transmitted from the server in clear text.  This non-secret seed\n\
    \   allows a client to use the same secret pass phrase on multiple\n   machines\
    \ (using different seeds) and to safely recycle secret\n   passwords by changing\
    \ the seed.  (For ease in parsing, the seed may\n   not contain any blanks, and\
    \ should consist of strictly alphanumeric\n   characters.) The result of the concatenation\
    \ is passed through MD4,\n   and then reduced to 64 bits by exclusive-OR of the\
    \ two 8-byte halves.\n   The following code fragment uses the MD4 implementation\
    \ defined in\n   RFC 1320 [2] and defines the preparatory step:\n         strcpy(buf,seed);\n\
    \         strcat(buf,passwd);\n         MDbegin(&md)\n         MDupdate(&md,(unsigned\
    \ char *)buf,8*buflen);\n         /* Fold result to 64 bits */\n         md.buffer[0]\
    \ ^= md.buffer[2];\n         md.buffer[1] ^= md.buffer[3];\n   A sequence of one-time\
    \ passwords is produced by applying the secure\n   hash function multiple times\
    \ to the output of the preparatory step\n   (called S).  That is, the first one-time\
    \ password is produced by\n   passing S through the secure hash function a number\
    \ of times (N)\n   specified by the user.  The next one-time password is generated\
    \ by\n   passing S though the secure hash function N-1 times.  An eavesdropper\n\
    \   who has monitored the transmission of a one-time password would not\n   be\
    \ able to generate any succeeding password because doing so would\n   require\
    \ inverting the hash function.\nForm of Passwords\n   The one-time password generated\
    \ by the above procedure is 64 bits in\n   length.  Entering a 64 bit number is\
    \ a difficult and error prone\n   process.  Some S/KEY system one-time password\
    \ calculator programs\n   insert this password into the input stream, others make\
    \ it available\n   for system cut and paste.  Some arrangements require the one-time\n\
    \   password to be entered manually. The S/KEY system is designed to\n   facilitate\
    \ this manual entry without impeding automatic methods.  The\n   one-time password\
    \ is therefore converted to, and accepted as, a\n   sequence of six short (1 to\
    \ 4 letter) English words.  Each word is\n   chosen from a dictionary of 2048\
    \ words; at 11 bits per word, all\n   one-time passwords may be encoded.  Interoperability\
    \ requires at all\n   S/KEY system hosts and calculators use the same dictionary.\
    \  The\n   standard dictionary is attached to this RFC.\nVerification of One-Time\
    \ Passwords\n   A function on the host system that requires S/KEY authentication\
    \ is\n   expected to issue an S/KEY challenge.  This challenge give the client\n\
    \   the current S/KEY parameters - the sequence number and seed.  It is\n   important\
    \ that the S/KEY challenge be in a standard format so that\n   automated clients\
    \ (see below) can recognize the challenge and extract\n   the parameters.  The\
    \ format of the challenge is:\n        s/key sequence_integer seed\n   The three\
    \ tokens are separated by single space characters.  The\n   challenge is terminated\
    \ by a blank or a newline.\n   Given the parameters and the secret pass phrase,\
    \ the client can\n   compute (or lookup) the one time password.  It then passes\
    \ it to the\n   host system where it can be verified.\n   The host system has\
    \ a file (on the UNIX reference implementation it\n   is /etc/skeykeys) containing,\
    \ for each user, the one-time password\n   from the last successful login, or\
    \ it may be initialized with the\n   first one-time password of the sequence using\
    \ the keyinit command\n   (this command name may be implementation dependent).\
    \  To verify an\n   authentication attempt, it passes the transmitted one-time\
    \ password\n   through the secure hash function one time.  If the result of this\n\
    \   operation matches the stored previous one-time password, the\n   authentication\
    \ is successful and the accepted one-time password is\n   stored for future use.\n\
    \   Because the number of hash function applications executed by the\n   client\
    \ decreases by one each time, at some point the user must\n   reinitialize the\
    \ system of be unable to login again.  This is done by\n   using the keyinit command\
    \ which allows the changing of the secret\n   pass phrase, the iteration count,\
    \ and the seed. A frequent technique\n   is to increment a trailing digit(s) of\
    \ the seed and to reset the\n   iteration count (to something in range of 500-1000).\n\
    Clients\n   Several programs are available to calculate S/KEY one time passwords.\n\
    \   Included in the reference implementation are command line interfaces\n   for\
    \ UNIX and PC systems (key), TSR interfaces for PCs (ctkey,\n   termkey, and popkey),\
    \ and GUI interfaces for Macintosh and Windows\n   (keyapp and un-named Macintosh\
    \ interface).\n   The most basic calculator is the key command whose format is:\n\
    \        key [-n count] sequence seed\n   The optional count is used to display\
    \ more than a single one time\n   password.  This is useful to create a paper\
    \ list of one time\n   passwords.\n   The most automated calculator is the termkey\
    \ program that runs as a\n   Terminate and Stay Resident (TSR) program on a PC.\
    \  It scans the\n   screen to find the S/KEY parameters, prompts for the secret\
    \ pass\n   phrase, and stuffs the one time password into the keyboard buffer.\n\
    Acknowledgements\n   The idea behind S/KEY authentication was first proposed by\
    \ Leslie\n   Lamport [1].  The specific system described was proposed by Phil\n\
    \   Karn, who also wrote most of the reference implementation.\nReferences\n \
    \  [1] Lamport, L., \"Password Authentication with Insecure\n       Communication\"\
    , Communications of the ACM 24.11, November 1981,\n       770-772.\n   [2] Rivest,\
    \ R., \"The MD4 Message-Digest Algorithm\", RFC 1320, MIT and\n       RSA Data\
    \ Security, Inc., April 1992\n   [3] Haller, N., \"The S/KEY One-Time Password\
    \ System\", Proceedings of\n       the ISOC Symposium on Network and Distributed\
    \ System Security,\n       February 1994, San Diego, CA\n   [4] Haller, N., and\
    \ R. Atkinson, \"On Internet Authentication\", RFC\n       1704, Bell Communications\
    \ Research and Naval Research Laboratory,\n       October 1994\nSecurity Considerations\n\
    \   This entire document is about Security Considerations.\nAuthor's Address\n\
    \   Neil Haller\n   Bellcore\n   MRE 2Q-280\n   445 South Street\n   Morristown,\
    \ NJ, 07960-6438, USA\n   Phone: +1 201 829-4478\n   Fax:  +1 201 829-2504\n \
    \  EMail: nmh@bellcore.com\nDictionary for Converting Between S/KEY 6-Word and\
    \ Binary Formats\n   This dictionary is from the module put.c.  The code for this\
    \ module,\n   and an implementation of the entire S/KEY One Time Password System\
    \ is\n   available by anonymous ftp from ftp.bellcore.com in the directory\n \
    \  pub/nmh/skey.\n{        \"A\",     \"ABE\",   \"ACE\",   \"ACT\",   \"AD\"\
    ,    \"ADA\",   \"ADD\",\n\"AGO\",   \"AID\",   \"AIM\",   \"AIR\",   \"ALL\"\
    ,   \"ALP\",   \"AM\",    \"AMY\",\n\"AN\",    \"ANA\",   \"AND\",   \"ANN\",\
    \   \"ANT\",   \"ANY\",   \"APE\",   \"APS\",\n\"APT\",   \"ARC\",   \"ARE\",\
    \   \"ARK\",   \"ARM\",   \"ART\",   \"AS\",    \"ASH\",\n\"ASK\",   \"AT\", \
    \   \"ATE\",   \"AUG\",   \"AUK\",   \"AVE\",   \"AWE\",   \"AWK\",\n\"AWL\",\
    \   \"AWN\",   \"AX\",    \"AYE\",   \"BAD\",   \"BAG\",   \"BAH\",   \"BAM\"\
    ,\n\"BAN\",   \"BAR\",   \"BAT\",   \"BAY\",   \"BE\",    \"BED\",   \"BEE\",\
    \   \"BEG\",\n\"BEN\",   \"BET\",   \"BEY\",   \"BIB\",   \"BID\",   \"BIG\",\
    \   \"BIN\",   \"BIT\",\n\"BOB\",   \"BOG\",   \"BON\",   \"BOO\",   \"BOP\",\
    \   \"BOW\",   \"BOY\",   \"BUB\",\n\"BUD\",   \"BUG\",   \"BUM\",   \"BUN\",\
    \   \"BUS\",   \"BUT\",   \"BUY\",   \"BY\",\n\"BYE\",   \"CAB\",   \"CAL\", \
    \  \"CAM\",   \"CAN\",   \"CAP\",   \"CAR\",   \"CAT\",\n\"CAW\",   \"COD\", \
    \  \"COG\",   \"COL\",   \"CON\",   \"COO\",   \"COP\",   \"COT\",\n\"COW\", \
    \  \"COY\",   \"CRY\",   \"CUB\",   \"CUE\",   \"CUP\",   \"CUR\",   \"CUT\",\n\
    \"DAB\",   \"DAD\",   \"DAM\",   \"DAN\",   \"DAR\",   \"DAY\",   \"DEE\",   \"\
    DEL\",\n\"DEN\",   \"DES\",   \"DEW\",   \"DID\",   \"DIE\",   \"DIG\",   \"DIN\"\
    ,   \"DIP\",\n\"DO\",    \"DOE\",   \"DOG\",   \"DON\",   \"DOT\",   \"DOW\",\
    \   \"DRY\",   \"DUB\",\n\"DUD\",   \"DUE\",   \"DUG\",   \"DUN\",   \"EAR\",\
    \   \"EAT\",   \"ED\",    \"EEL\",\n\"EGG\",   \"EGO\",   \"ELI\",   \"ELK\",\
    \   \"ELM\",   \"ELY\",   \"EM\",    \"END\",\n\"EST\",   \"ETC\",   \"EVA\",\
    \   \"EVE\",   \"EWE\",   \"EYE\",   \"FAD\",   \"FAN\",\n\"FAR\",   \"FAT\",\
    \   \"FAY\",   \"FED\",   \"FEE\",   \"FEW\",   \"FIB\",   \"FIG\",\n\"FIN\",\
    \   \"FIR\",   \"FIT\",   \"FLO\",   \"FLY\",   \"FOE\",   \"FOG\",   \"FOR\"\
    ,\n\"FRY\",   \"FUM\",   \"FUN\",   \"FUR\",   \"GAB\",   \"GAD\",   \"GAG\",\
    \   \"GAL\",\n\"GAM\",   \"GAP\",   \"GAS\",   \"GAY\",   \"GEE\",   \"GEL\",\
    \   \"GEM\",   \"GET\",\n\"GIG\",   \"GIL\",   \"GIN\",   \"GO\",    \"GOT\",\
    \   \"GUM\",   \"GUN\",   \"GUS\",\n\"GUT\",   \"GUY\",   \"GYM\",   \"GYP\",\
    \   \"HA\",    \"HAD\",   \"HAL\",   \"HAM\",\n\"HAN\",   \"HAP\",   \"HAS\",\
    \   \"HAT\",   \"HAW\",   \"HAY\",   \"HE\",    \"HEM\",\n\"HEN\",   \"HER\",\
    \   \"HEW\",   \"HEY\",   \"HI\",    \"HID\",   \"HIM\",   \"HIP\",\n\"HIS\",\
    \   \"HIT\",   \"HO\",    \"HOB\",   \"HOC\",   \"HOE\",   \"HOG\",   \"HOP\"\
    ,\n\"HOT\",   \"HOW\",   \"HUB\",   \"HUE\",   \"HUG\",   \"HUH\",   \"HUM\",\
    \   \"HUT\",\n\"I\",     \"ICY\",   \"IDA\",   \"IF\",    \"IKE\",   \"ILL\",\
    \   \"INK\",   \"INN\",\n\"IO\",    \"ION\",   \"IQ\",    \"IRA\",   \"IRE\",\
    \   \"IRK\",   \"IS\",    \"IT\",\n\"ITS\",   \"IVY\",   \"JAB\",   \"JAG\", \
    \  \"JAM\",   \"JAN\",   \"JAR\",   \"JAW\",\n\"JAY\",   \"JET\",   \"JIG\", \
    \  \"JIM\",   \"JO\",    \"JOB\",   \"JOE\",   \"JOG\",\n\"JOT\",   \"JOY\", \
    \  \"JUG\",   \"JUT\",   \"KAY\",   \"KEG\",   \"KEN\",   \"KEY\",\n\"KID\", \
    \  \"KIM\",   \"KIN\",   \"KIT\",   \"LA\",    \"LAB\",   \"LAC\",   \"LAD\",\n\
    \"LAG\",   \"LAM\",   \"LAP\",   \"LAW\",   \"LAY\",   \"LEA\",   \"LED\",   \"\
    LEE\",\n\"LEG\",   \"LEN\",   \"LEO\",   \"LET\",   \"LEW\",   \"LID\",   \"LIE\"\
    ,   \"LIN\",\n\"LIP\",   \"LIT\",   \"LO\",    \"LOB\",   \"LOG\",   \"LOP\",\
    \   \"LOS\",   \"LOT\",\n\"LOU\",   \"LOW\",   \"LOY\",   \"LUG\",   \"LYE\",\
    \   \"MA\",    \"MAC\",   \"MAD\",\n\"MAE\",   \"MAN\",   \"MAO\",   \"MAP\",\
    \   \"MAT\",   \"MAW\",   \"MAY\",   \"ME\",\n\"MEG\",   \"MEL\",   \"MEN\", \
    \  \"MET\",   \"MEW\",   \"MID\",   \"MIN\",   \"MIT\",\n\"MOB\",   \"MOD\", \
    \  \"MOE\",   \"MOO\",   \"MOP\",   \"MOS\",   \"MOT\",   \"MOW\",\n\"MUD\", \
    \  \"MUG\",   \"MUM\",   \"MY\",    \"NAB\",   \"NAG\",   \"NAN\",   \"NAP\",\n\
    \"NAT\",   \"NAY\",   \"NE\",    \"NED\",   \"NEE\",   \"NET\",   \"NEW\",   \"\
    NIB\",\n\"NIL\",   \"NIP\",   \"NIT\",   \"NO\",    \"NOB\",   \"NOD\",   \"NON\"\
    ,   \"NOR\",\n\"NOT\",   \"NOV\",   \"NOW\",   \"NU\",    \"NUN\",   \"NUT\",\
    \   \"O\",     \"OAF\",\n\"OAK\",   \"OAR\",   \"OAT\",   \"ODD\",   \"ODE\",\
    \   \"OF\",    \"OFF\",   \"OFT\",\n\"OH\",    \"OIL\",   \"OK\",    \"OLD\",\
    \   \"ON\",    \"ONE\",   \"OR\",    \"ORB\",\n\"ORE\",   \"ORR\",   \"OS\", \
    \   \"OTT\",   \"OUR\",   \"OUT\",   \"OVA\",   \"OW\",\n\"OWE\",   \"OWL\", \
    \  \"OWN\",   \"OX\",    \"PA\",    \"PAD\",   \"PAL\",   \"PAM\",\n\"PAN\", \
    \  \"PAP\",   \"PAR\",   \"PAT\",   \"PAW\",   \"PAY\",   \"PEA\",   \"PEG\",\n\
    \"PEN\",   \"PEP\",   \"PER\",   \"PET\",   \"PEW\",   \"PHI\",   \"PI\",    \"\
    PIE\",\n\"PIN\",   \"PIT\",   \"PLY\",   \"PO\",    \"POD\",   \"POE\",   \"POP\"\
    ,   \"POT\",\n\"POW\",   \"PRO\",   \"PRY\",   \"PUB\",   \"PUG\",   \"PUN\",\
    \   \"PUP\",   \"PUT\",\n\"QUO\",   \"RAG\",   \"RAM\",   \"RAN\",   \"RAP\",\
    \   \"RAT\",   \"RAW\",   \"RAY\",\n\"REB\",   \"RED\",   \"REP\",   \"RET\",\
    \   \"RIB\",   \"RID\",   \"RIG\",   \"RIM\",\n\"RIO\",   \"RIP\",   \"ROB\",\
    \   \"ROD\",   \"ROE\",   \"RON\",   \"ROT\",   \"ROW\",\n\"ROY\",   \"RUB\",\
    \   \"RUE\",   \"RUG\",   \"RUM\",   \"RUN\",   \"RYE\",   \"SAC\",\n\"SAD\",\
    \   \"SAG\",   \"SAL\",   \"SAM\",   \"SAN\",   \"SAP\",   \"SAT\",   \"SAW\"\
    ,\n\"SAY\",   \"SEA\",   \"SEC\",   \"SEE\",   \"SEN\",   \"SET\",   \"SEW\",\
    \   \"SHE\",\n\"SHY\",   \"SIN\",   \"SIP\",   \"SIR\",   \"SIS\",   \"SIT\",\
    \   \"SKI\",   \"SKY\",\n\"SLY\",   \"SO\",    \"SOB\",   \"SOD\",   \"SON\",\
    \   \"SOP\",   \"SOW\",   \"SOY\",\n\"SPA\",   \"SPY\",   \"SUB\",   \"SUD\",\
    \   \"SUE\",   \"SUM\",   \"SUN\",   \"SUP\",\n\"TAB\",   \"TAD\",   \"TAG\",\
    \   \"TAN\",   \"TAP\",   \"TAR\",   \"TEA\",   \"TED\",\n\"TEE\",   \"TEN\",\
    \   \"THE\",   \"THY\",   \"TIC\",   \"TIE\",   \"TIM\",   \"TIN\",\n\"TIP\",\
    \   \"TO\",    \"TOE\",   \"TOG\",   \"TOM\",   \"TON\",   \"TOO\",   \"TOP\"\
    ,\n\"TOW\",   \"TOY\",   \"TRY\",   \"TUB\",   \"TUG\",   \"TUM\",   \"TUN\",\
    \   \"TWO\",\n\"UN\",    \"UP\",    \"US\",    \"USE\",   \"VAN\",   \"VAT\",\
    \   \"VET\",   \"VIE\",\n\"WAD\",   \"WAG\",   \"WAR\",   \"WAS\",   \"WAY\",\
    \   \"WE\",    \"WEB\",   \"WED\",\n\"WEE\",   \"WET\",   \"WHO\",   \"WHY\",\
    \   \"WIN\",   \"WIT\",   \"WOK\",   \"WON\",\n\"WOO\",   \"WOW\",   \"WRY\",\
    \   \"WU\",    \"YAM\",   \"YAP\",   \"YAW\",   \"YE\",\n\"YEA\",   \"YES\", \
    \  \"YET\",   \"YOU\",   \"ABED\",  \"ABEL\",  \"ABET\",  \"ABLE\",\n\"ABUT\"\
    ,  \"ACHE\",  \"ACID\",  \"ACME\",  \"ACRE\",  \"ACTA\",  \"ACTS\",  \"ADAM\"\
    ,\n\"ADDS\",  \"ADEN\",  \"AFAR\",  \"AFRO\",  \"AGEE\",  \"AHEM\",  \"AHOY\"\
    ,  \"AIDA\",\n\"AIDE\",  \"AIDS\",  \"AIRY\",  \"AJAR\",  \"AKIN\",  \"ALAN\"\
    ,  \"ALEC\",  \"ALGA\",\n\"ALIA\",  \"ALLY\",  \"ALMA\",  \"ALOE\",  \"ALSO\"\
    ,  \"ALTO\",  \"ALUM\",  \"ALVA\",\n\"AMEN\",  \"AMES\",  \"AMID\",  \"AMMO\"\
    ,  \"AMOK\",  \"AMOS\",  \"AMRA\",  \"ANDY\",\n\"ANEW\",  \"ANNA\",  \"ANNE\"\
    ,  \"ANTE\",  \"ANTI\",  \"AQUA\",  \"ARAB\",  \"ARCH\",\n\"AREA\",  \"ARGO\"\
    ,  \"ARID\",  \"ARMY\",  \"ARTS\",  \"ARTY\",  \"ASIA\",  \"ASKS\",\n\"ATOM\"\
    ,  \"AUNT\",  \"AURA\",  \"AUTO\",  \"AVER\",  \"AVID\",  \"AVIS\",  \"AVON\"\
    ,\n\"AVOW\",  \"AWAY\",  \"AWRY\",  \"BABE\",  \"BABY\",  \"BACH\",  \"BACK\"\
    ,  \"BADE\",\n\"BAIL\",  \"BAIT\",  \"BAKE\",  \"BALD\",  \"BALE\",  \"BALI\"\
    ,  \"BALK\",  \"BALL\",\n\"BALM\",  \"BAND\",  \"BANE\",  \"BANG\",  \"BANK\"\
    ,  \"BARB\",  \"BARD\",  \"BARE\",\n\"BARK\",  \"BARN\",  \"BARR\",  \"BASE\"\
    ,  \"BASH\",  \"BASK\",  \"BASS\",  \"BATE\",\n\"BATH\",  \"BAWD\",  \"BAWL\"\
    ,  \"BEAD\",  \"BEAK\",  \"BEAM\",  \"BEAN\",  \"BEAR\",\n\"BEAT\",  \"BEAU\"\
    ,  \"BECK\",  \"BEEF\",  \"BEEN\",  \"BEER\",  \"BEET\",  \"BELA\",\n\"BELL\"\
    ,  \"BELT\",  \"BEND\",  \"BENT\",  \"BERG\",  \"BERN\",  \"BERT\",  \"BESS\"\
    ,\n\"BEST\",  \"BETA\",  \"BETH\",  \"BHOY\",  \"BIAS\",  \"BIDE\",  \"BIEN\"\
    ,  \"BILE\",\n\"BILK\",  \"BILL\",  \"BIND\",  \"BING\",  \"BIRD\",  \"BITE\"\
    ,  \"BITS\",  \"BLAB\",\n\"BLAT\",  \"BLED\",  \"BLEW\",  \"BLOB\",  \"BLOC\"\
    ,  \"BLOT\",  \"BLOW\",  \"BLUE\",\n\"BLUM\",  \"BLUR\",  \"BOAR\",  \"BOAT\"\
    ,  \"BOCA\",  \"BOCK\",  \"BODE\",  \"BODY\",\n\"BOGY\",  \"BOHR\",  \"BOIL\"\
    ,  \"BOLD\",  \"BOLO\",  \"BOLT\",  \"BOMB\",  \"BONA\",\n\"BOND\",  \"BONE\"\
    ,  \"BONG\",  \"BONN\",  \"BONY\",  \"BOOK\",  \"BOOM\",  \"BOON\",\n\"BOOT\"\
    ,  \"BORE\",  \"BORG\",  \"BORN\",  \"BOSE\",  \"BOSS\",  \"BOTH\",  \"BOUT\"\
    ,\n\"BOWL\",  \"BOYD\",  \"BRAD\",  \"BRAE\",  \"BRAG\",  \"BRAN\",  \"BRAY\"\
    ,  \"BRED\",\n\"BREW\",  \"BRIG\",  \"BRIM\",  \"BROW\",  \"BUCK\",  \"BUDD\"\
    ,  \"BUFF\",  \"BULB\",\n\"BULK\",  \"BULL\",  \"BUNK\",  \"BUNT\",  \"BUOY\"\
    ,  \"BURG\",  \"BURL\",  \"BURN\",\n\"BURR\",  \"BURT\",  \"BURY\",  \"BUSH\"\
    ,  \"BUSS\",  \"BUST\",  \"BUSY\",  \"BYTE\",\n\"CADY\",  \"CAFE\",  \"CAGE\"\
    ,  \"CAIN\",  \"CAKE\",  \"CALF\",  \"CALL\",  \"CALM\",\n\"CAME\",  \"CANE\"\
    ,  \"CANT\",  \"CARD\",  \"CARE\",  \"CARL\",  \"CARR\",  \"CART\",\n\"CASE\"\
    ,  \"CASH\",  \"CASK\",  \"CAST\",  \"CAVE\",  \"CEIL\",  \"CELL\",  \"CENT\"\
    ,\n\"CERN\",  \"CHAD\",  \"CHAR\",  \"CHAT\",  \"CHAW\",  \"CHEF\",  \"CHEN\"\
    ,  \"CHEW\",\n\"CHIC\",  \"CHIN\",  \"CHOU\",  \"CHOW\",  \"CHUB\",  \"CHUG\"\
    ,  \"CHUM\",  \"CITE\",\n\"CITY\",  \"CLAD\",  \"CLAM\",  \"CLAN\",  \"CLAW\"\
    ,  \"CLAY\",  \"CLOD\",  \"CLOG\",\n\"CLOT\",  \"CLUB\",  \"CLUE\",  \"COAL\"\
    ,  \"COAT\",  \"COCA\",  \"COCK\",  \"COCO\",\n\"CODA\",  \"CODE\",  \"CODY\"\
    ,  \"COED\",  \"COIL\",  \"COIN\",  \"COKE\",  \"COLA\",\n\"COLD\",  \"COLT\"\
    ,  \"COMA\",  \"COMB\",  \"COME\",  \"COOK\",  \"COOL\",  \"COON\",\n\"COOT\"\
    ,  \"CORD\",  \"CORE\",  \"CORK\",  \"CORN\",  \"COST\",  \"COVE\",  \"COWL\"\
    ,\n\"CRAB\",  \"CRAG\",  \"CRAM\",  \"CRAY\",  \"CREW\",  \"CRIB\",  \"CROW\"\
    ,  \"CRUD\",\n\"CUBA\",  \"CUBE\",  \"CUFF\",  \"CULL\",  \"CULT\",  \"CUNY\"\
    ,  \"CURB\",  \"CURD\",\n\"CURE\",  \"CURL\",  \"CURT\",  \"CUTS\",  \"DADE\"\
    ,  \"DALE\",  \"DAME\",  \"DANA\",\n\"DANE\",  \"DANG\",  \"DANK\",  \"DARE\"\
    ,  \"DARK\",  \"DARN\",  \"DART\",  \"DASH\",\n\"DATA\",  \"DATE\",  \"DAVE\"\
    ,  \"DAVY\",  \"DAWN\",  \"DAYS\",  \"DEAD\",  \"DEAF\",\n\"DEAL\",  \"DEAN\"\
    ,  \"DEAR\",  \"DEBT\",  \"DECK\",  \"DEED\",  \"DEEM\",  \"DEER\",\n\"DEFT\"\
    ,  \"DEFY\",  \"DELL\",  \"DENT\",  \"DENY\",  \"DESK\",  \"DIAL\",  \"DICE\"\
    ,\n\"DIED\",  \"DIET\",  \"DIME\",  \"DINE\",  \"DING\",  \"DINT\",  \"DIRE\"\
    ,  \"DIRT\",\n\"DISC\",  \"DISH\",  \"DISK\",  \"DIVE\",  \"DOCK\",  \"DOES\"\
    ,  \"DOLE\",  \"DOLL\",\n\"DOLT\",  \"DOME\",  \"DONE\",  \"DOOM\",  \"DOOR\"\
    ,  \"DORA\",  \"DOSE\",  \"DOTE\",\n\"DOUG\",  \"DOUR\",  \"DOVE\",  \"DOWN\"\
    ,  \"DRAB\",  \"DRAG\",  \"DRAM\",  \"DRAW\",\n\"DREW\",  \"DRUB\",  \"DRUG\"\
    ,  \"DRUM\",  \"DUAL\",  \"DUCK\",  \"DUCT\",  \"DUEL\",\n\"DUET\",  \"DUKE\"\
    ,  \"DULL\",  \"DUMB\",  \"DUNE\",  \"DUNK\",  \"DUSK\",  \"DUST\",\n\"DUTY\"\
    ,  \"EACH\",  \"EARL\",  \"EARN\",  \"EASE\",  \"EAST\",  \"EASY\",  \"EBEN\"\
    ,\n\"ECHO\",  \"EDDY\",  \"EDEN\",  \"EDGE\",  \"EDGY\",  \"EDIT\",  \"EDNA\"\
    ,  \"EGAN\",\n\"ELAN\",  \"ELBA\",  \"ELLA\",  \"ELSE\",  \"EMIL\",  \"EMIT\"\
    ,  \"EMMA\",  \"ENDS\",\n\"ERIC\",  \"EROS\",  \"EVEN\",  \"EVER\",  \"EVIL\"\
    ,  \"EYED\",  \"FACE\",  \"FACT\",\n\"FADE\",  \"FAIL\",  \"FAIN\",  \"FAIR\"\
    ,  \"FAKE\",  \"FALL\",  \"FAME\",  \"FANG\",\n\"FARM\",  \"FAST\",  \"FATE\"\
    ,  \"FAWN\",  \"FEAR\",  \"FEAT\",  \"FEED\",  \"FEEL\",\n\"FEET\",  \"FELL\"\
    ,  \"FELT\",  \"FEND\",  \"FERN\",  \"FEST\",  \"FEUD\",  \"FIEF\",\n\"FIGS\"\
    ,  \"FILE\",  \"FILL\",  \"FILM\",  \"FIND\",  \"FINE\",  \"FINK\",  \"FIRE\"\
    ,\n\"FIRM\",  \"FISH\",  \"FISK\",  \"FIST\",  \"FITS\",  \"FIVE\",  \"FLAG\"\
    ,  \"FLAK\",\n\"FLAM\",  \"FLAT\",  \"FLAW\",  \"FLEA\",  \"FLED\",  \"FLEW\"\
    ,  \"FLIT\",  \"FLOC\",\n\"FLOG\",  \"FLOW\",  \"FLUB\",  \"FLUE\",  \"FOAL\"\
    ,  \"FOAM\",  \"FOGY\",  \"FOIL\",\n\"FOLD\",  \"FOLK\",  \"FOND\",  \"FONT\"\
    ,  \"FOOD\",  \"FOOL\",  \"FOOT\",  \"FORD\",\n\"FORE\",  \"FORK\",  \"FORM\"\
    ,  \"FORT\",  \"FOSS\",  \"FOUL\",  \"FOUR\",  \"FOWL\",\n\"FRAU\",  \"FRAY\"\
    ,  \"FRED\",  \"FREE\",  \"FRET\",  \"FREY\",  \"FROG\",  \"FROM\",\n\"FUEL\"\
    ,  \"FULL\",  \"FUME\",  \"FUND\",  \"FUNK\",  \"FURY\",  \"FUSE\",  \"FUSS\"\
    ,\n\"GAFF\",  \"GAGE\",  \"GAIL\",  \"GAIN\",  \"GAIT\",  \"GALA\",  \"GALE\"\
    ,  \"GALL\",\n\"GALT\",  \"GAME\",  \"GANG\",  \"GARB\",  \"GARY\",  \"GASH\"\
    ,  \"GATE\",  \"GAUL\",\n\"GAUR\",  \"GAVE\",  \"GAWK\",  \"GEAR\",  \"GELD\"\
    ,  \"GENE\",  \"GENT\",  \"GERM\",\n\"GETS\",  \"GIBE\",  \"GIFT\",  \"GILD\"\
    ,  \"GILL\",  \"GILT\",  \"GINA\",  \"GIRD\",\n\"GIRL\",  \"GIST\",  \"GIVE\"\
    ,  \"GLAD\",  \"GLEE\",  \"GLEN\",  \"GLIB\",  \"GLOB\",\n\"GLOM\",  \"GLOW\"\
    ,  \"GLUE\",  \"GLUM\",  \"GLUT\",  \"GOAD\",  \"GOAL\",  \"GOAT\",\n\"GOER\"\
    ,  \"GOES\",  \"GOLD\",  \"GOLF\",  \"GONE\",  \"GONG\",  \"GOOD\",  \"GOOF\"\
    ,\n\"GORE\",  \"GORY\",  \"GOSH\",  \"GOUT\",  \"GOWN\",  \"GRAB\",  \"GRAD\"\
    ,  \"GRAY\",\n\"GREG\",  \"GREW\",  \"GREY\",  \"GRID\",  \"GRIM\",  \"GRIN\"\
    ,  \"GRIT\",  \"GROW\",\n\"GRUB\",  \"GULF\",  \"GULL\",  \"GUNK\",  \"GURU\"\
    ,  \"GUSH\",  \"GUST\",  \"GWEN\",\n\"GWYN\",  \"HAAG\",  \"HAAS\",  \"HACK\"\
    ,  \"HAIL\",  \"HAIR\",  \"HALE\",  \"HALF\",\n\"HALL\",  \"HALO\",  \"HALT\"\
    ,  \"HAND\",  \"HANG\",  \"HANK\",  \"HANS\",  \"HARD\",\n\"HARK\",  \"HARM\"\
    ,  \"HART\",  \"HASH\",  \"HAST\",  \"HATE\",  \"HATH\",  \"HAUL\",\n\"HAVE\"\
    ,  \"HAWK\",  \"HAYS\",  \"HEAD\",  \"HEAL\",  \"HEAR\",  \"HEAT\",  \"HEBE\"\
    ,\n\"HECK\",  \"HEED\",  \"HEEL\",  \"HEFT\",  \"HELD\",  \"HELL\",  \"HELM\"\
    ,  \"HERB\",\n\"HERD\",  \"HERE\",  \"HERO\",  \"HERS\",  \"HESS\",  \"HEWN\"\
    ,  \"HICK\",  \"HIDE\",\n\"HIGH\",  \"HIKE\",  \"HILL\",  \"HILT\",  \"HIND\"\
    ,  \"HINT\",  \"HIRE\",  \"HISS\",\n\"HIVE\",  \"HOBO\",  \"HOCK\",  \"HOFF\"\
    ,  \"HOLD\",  \"HOLE\",  \"HOLM\",  \"HOLT\",\n\"HOME\",  \"HONE\",  \"HONK\"\
    ,  \"HOOD\",  \"HOOF\",  \"HOOK\",  \"HOOT\",  \"HORN\",\n\"HOSE\",  \"HOST\"\
    ,  \"HOUR\",  \"HOVE\",  \"HOWE\",  \"HOWL\",  \"HOYT\",  \"HUCK\",\n\"HUED\"\
    ,  \"HUFF\",  \"HUGE\",  \"HUGH\",  \"HUGO\",  \"HULK\",  \"HULL\",  \"HUNK\"\
    ,\n\"HUNT\",  \"HURD\",  \"HURL\",  \"HURT\",  \"HUSH\",  \"HYDE\",  \"HYMN\"\
    ,  \"IBIS\",\n\"ICON\",  \"IDEA\",  \"IDLE\",  \"IFFY\",  \"INCA\",  \"INCH\"\
    ,  \"INTO\",  \"IONS\",\n\"IOTA\",  \"IOWA\",  \"IRIS\",  \"IRMA\",  \"IRON\"\
    ,  \"ISLE\",  \"ITCH\",  \"ITEM\",\n\"IVAN\",  \"JACK\",  \"JADE\",  \"JAIL\"\
    ,  \"JAKE\",  \"JANE\",  \"JAVA\",  \"JEAN\",\n\"JEFF\",  \"JERK\",  \"JESS\"\
    ,  \"JEST\",  \"JIBE\",  \"JILL\",  \"JILT\",  \"JIVE\",\n\"JOAN\",  \"JOBS\"\
    ,  \"JOCK\",  \"JOEL\",  \"JOEY\",  \"JOHN\",  \"JOIN\",  \"JOKE\",\n\"JOLT\"\
    ,  \"JOVE\",  \"JUDD\",  \"JUDE\",  \"JUDO\",  \"JUDY\",  \"JUJU\",  \"JUKE\"\
    ,\n\"JULY\",  \"JUNE\",  \"JUNK\",  \"JUNO\",  \"JURY\",  \"JUST\",  \"JUTE\"\
    ,  \"KAHN\",\n\"KALE\",  \"KANE\",  \"KANT\",  \"KARL\",  \"KATE\",  \"KEEL\"\
    ,  \"KEEN\",  \"KENO\",\n\"KENT\",  \"KERN\",  \"KERR\",  \"KEYS\",  \"KICK\"\
    ,  \"KILL\",  \"KIND\",  \"KING\",\n\"KIRK\",  \"KISS\",  \"KITE\",  \"KLAN\"\
    ,  \"KNEE\",  \"KNEW\",  \"KNIT\",  \"KNOB\",\n\"KNOT\",  \"KNOW\",  \"KOCH\"\
    ,  \"KONG\",  \"KUDO\",  \"KURD\",  \"KURT\",  \"KYLE\",\n\"LACE\",  \"LACK\"\
    ,  \"LACY\",  \"LADY\",  \"LAID\",  \"LAIN\",  \"LAIR\",  \"LAKE\",\n\"LAMB\"\
    ,  \"LAME\",  \"LAND\",  \"LANE\",  \"LANG\",  \"LARD\",  \"LARK\",  \"LASS\"\
    ,\n\"LAST\",  \"LATE\",  \"LAUD\",  \"LAVA\",  \"LAWN\",  \"LAWS\",  \"LAYS\"\
    ,  \"LEAD\",\n\"LEAF\",  \"LEAK\",  \"LEAN\",  \"LEAR\",  \"LEEK\",  \"LEER\"\
    ,  \"LEFT\",  \"LEND\",\n\"LENS\",  \"LENT\",  \"LEON\",  \"LESK\",  \"LESS\"\
    ,  \"LEST\",  \"LETS\",  \"LIAR\",\n\"LICE\",  \"LICK\",  \"LIED\",  \"LIEN\"\
    ,  \"LIES\",  \"LIEU\",  \"LIFE\",  \"LIFT\",\n\"LIKE\",  \"LILA\",  \"LILT\"\
    ,  \"LILY\",  \"LIMA\",  \"LIMB\",  \"LIME\",  \"LIND\",\n\"LINE\",  \"LINK\"\
    ,  \"LINT\",  \"LION\",  \"LISA\",  \"LIST\",  \"LIVE\",  \"LOAD\",\n\"LOAF\"\
    ,  \"LOAM\",  \"LOAN\",  \"LOCK\",  \"LOFT\",  \"LOGE\",  \"LOIS\",  \"LOLA\"\
    ,\n\"LONE\",  \"LONG\",  \"LOOK\",  \"LOON\",  \"LOOT\",  \"LORD\",  \"LORE\"\
    ,  \"LOSE\",\n\"LOSS\",  \"LOST\",  \"LOUD\",  \"LOVE\",  \"LOWE\",  \"LUCK\"\
    ,  \"LUCY\",  \"LUGE\",\n\"LUKE\",  \"LULU\",  \"LUND\",  \"LUNG\",  \"LURA\"\
    ,  \"LURE\",  \"LURK\",  \"LUSH\",\n\"LUST\",  \"LYLE\",  \"LYNN\",  \"LYON\"\
    ,  \"LYRA\",  \"MACE\",  \"MADE\",  \"MAGI\",\n\"MAID\",  \"MAIL\",  \"MAIN\"\
    ,  \"MAKE\",  \"MALE\",  \"MALI\",  \"MALL\",  \"MALT\",\n\"MANA\",  \"MANN\"\
    ,  \"MANY\",  \"MARC\",  \"MARE\",  \"MARK\",  \"MARS\",  \"MART\",\n\"MARY\"\
    ,  \"MASH\",  \"MASK\",  \"MASS\",  \"MAST\",  \"MATE\",  \"MATH\",  \"MAUL\"\
    ,\n\"MAYO\",  \"MEAD\",  \"MEAL\",  \"MEAN\",  \"MEAT\",  \"MEEK\",  \"MEET\"\
    ,  \"MELD\",\n\"MELT\",  \"MEMO\",  \"MEND\",  \"MENU\",  \"MERT\",  \"MESH\"\
    ,  \"MESS\",  \"MICE\",\n\"MIKE\",  \"MILD\",  \"MILE\",  \"MILK\",  \"MILL\"\
    ,  \"MILT\",  \"MIMI\",  \"MIND\",\n\"MINE\",  \"MINI\",  \"MINK\",  \"MINT\"\
    ,  \"MIRE\",  \"MISS\",  \"MIST\",  \"MITE\",\n\"MITT\",  \"MOAN\",  \"MOAT\"\
    ,  \"MOCK\",  \"MODE\",  \"MOLD\",  \"MOLE\",  \"MOLL\",\n\"MOLT\",  \"MONA\"\
    ,  \"MONK\",  \"MONT\",  \"MOOD\",  \"MOON\",  \"MOOR\",  \"MOOT\",\n\"MORE\"\
    ,  \"MORN\",  \"MORT\",  \"MOSS\",  \"MOST\",  \"MOTH\",  \"MOVE\",  \"MUCH\"\
    ,\n\"MUCK\",  \"MUDD\",  \"MUFF\",  \"MULE\",  \"MULL\",  \"MURK\",  \"MUSH\"\
    ,  \"MUST\",\n\"MUTE\",  \"MUTT\",  \"MYRA\",  \"MYTH\",  \"NAGY\",  \"NAIL\"\
    ,  \"NAIR\",  \"NAME\",\n\"NARY\",  \"NASH\",  \"NAVE\",  \"NAVY\",  \"NEAL\"\
    ,  \"NEAR\",  \"NEAT\",  \"NECK\",\n\"NEED\",  \"NEIL\",  \"NELL\",  \"NEON\"\
    ,  \"NERO\",  \"NESS\",  \"NEST\",  \"NEWS\",\n\"NEWT\",  \"NIBS\",  \"NICE\"\
    ,  \"NICK\",  \"NILE\",  \"NINA\",  \"NINE\",  \"NOAH\",\n\"NODE\",  \"NOEL\"\
    ,  \"NOLL\",  \"NONE\",  \"NOOK\",  \"NOON\",  \"NORM\",  \"NOSE\",\n\"NOTE\"\
    ,  \"NOUN\",  \"NOVA\",  \"NUDE\",  \"NULL\",  \"NUMB\",  \"OATH\",  \"OBEY\"\
    ,\n\"OBOE\",  \"ODIN\",  \"OHIO\",  \"OILY\",  \"OINT\",  \"OKAY\",  \"OLAF\"\
    ,  \"OLDY\",\n\"OLGA\",  \"OLIN\",  \"OMAN\",  \"OMEN\",  \"OMIT\",  \"ONCE\"\
    ,  \"ONES\",  \"ONLY\",\n\"ONTO\",  \"ONUS\",  \"ORAL\",  \"ORGY\",  \"OSLO\"\
    ,  \"OTIS\",  \"OTTO\",  \"OUCH\",\n\"OUST\",  \"OUTS\",  \"OVAL\",  \"OVEN\"\
    ,  \"OVER\",  \"OWLY\",  \"OWNS\",  \"QUAD\",\n\"QUIT\",  \"QUOD\",  \"RACE\"\
    ,  \"RACK\",  \"RACY\",  \"RAFT\",  \"RAGE\",  \"RAID\",\n\"RAIL\",  \"RAIN\"\
    ,  \"RAKE\",  \"RANK\",  \"RANT\",  \"RARE\",  \"RASH\",  \"RATE\",\n\"RAVE\"\
    ,  \"RAYS\",  \"READ\",  \"REAL\",  \"REAM\",  \"REAR\",  \"RECK\",  \"REED\"\
    ,\n\"REEF\",  \"REEK\",  \"REEL\",  \"REID\",  \"REIN\",  \"RENA\",  \"REND\"\
    ,  \"RENT\",\n\"REST\",  \"RICE\",  \"RICH\",  \"RICK\",  \"RIDE\",  \"RIFT\"\
    ,  \"RILL\",  \"RIME\",\n\"RING\",  \"RINK\",  \"RISE\",  \"RISK\",  \"RITE\"\
    ,  \"ROAD\",  \"ROAM\",  \"ROAR\",\n\"ROBE\",  \"ROCK\",  \"RODE\",  \"ROIL\"\
    ,  \"ROLL\",  \"ROME\",  \"ROOD\",  \"ROOF\",\n\"ROOK\",  \"ROOM\",  \"ROOT\"\
    ,  \"ROSA\",  \"ROSE\",  \"ROSS\",  \"ROSY\",  \"ROTH\",\n\"ROUT\",  \"ROVE\"\
    ,  \"ROWE\",  \"ROWS\",  \"RUBE\",  \"RUBY\",  \"RUDE\",  \"RUDY\",\n\"RUIN\"\
    ,  \"RULE\",  \"RUNG\",  \"RUNS\",  \"RUNT\",  \"RUSE\",  \"RUSH\",  \"RUSK\"\
    ,\n\"RUSS\",  \"RUST\",  \"RUTH\",  \"SACK\",  \"SAFE\",  \"SAGE\",  \"SAID\"\
    ,  \"SAIL\",\n\"SALE\",  \"SALK\",  \"SALT\",  \"SAME\",  \"SAND\",  \"SANE\"\
    ,  \"SANG\",  \"SANK\",\n\"SARA\",  \"SAUL\",  \"SAVE\",  \"SAYS\",  \"SCAN\"\
    ,  \"SCAR\",  \"SCAT\",  \"SCOT\",\n\"SEAL\",  \"SEAM\",  \"SEAR\",  \"SEAT\"\
    ,  \"SEED\",  \"SEEK\",  \"SEEM\",  \"SEEN\",\n\"SEES\",  \"SELF\",  \"SELL\"\
    ,  \"SEND\",  \"SENT\",  \"SETS\",  \"SEWN\",  \"SHAG\",\n\"SHAM\",  \"SHAW\"\
    ,  \"SHAY\",  \"SHED\",  \"SHIM\",  \"SHIN\",  \"SHOD\",  \"SHOE\",\n\"SHOT\"\
    ,  \"SHOW\",  \"SHUN\",  \"SHUT\",  \"SICK\",  \"SIDE\",  \"SIFT\",  \"SIGH\"\
    ,\n\"SIGN\",  \"SILK\",  \"SILL\",  \"SILO\",  \"SILT\",  \"SINE\",  \"SING\"\
    ,  \"SINK\",\n\"SIRE\",  \"SITE\",  \"SITS\",  \"SITU\",  \"SKAT\",  \"SKEW\"\
    ,  \"SKID\",  \"SKIM\",\n\"SKIN\",  \"SKIT\",  \"SLAB\",  \"SLAM\",  \"SLAT\"\
    ,  \"SLAY\",  \"SLED\",  \"SLEW\",\n\"SLID\",  \"SLIM\",  \"SLIT\",  \"SLOB\"\
    ,  \"SLOG\",  \"SLOT\",  \"SLOW\",  \"SLUG\",\n\"SLUM\",  \"SLUR\",  \"SMOG\"\
    ,  \"SMUG\",  \"SNAG\",  \"SNOB\",  \"SNOW\",  \"SNUB\",\n\"SNUG\",  \"SOAK\"\
    ,  \"SOAR\",  \"SOCK\",  \"SODA\",  \"SOFA\",  \"SOFT\",  \"SOIL\",\n\"SOLD\"\
    ,  \"SOME\",  \"SONG\",  \"SOON\",  \"SOOT\",  \"SORE\",  \"SORT\",  \"SOUL\"\
    ,\n\"SOUR\",  \"SOWN\",  \"STAB\",  \"STAG\",  \"STAN\",  \"STAR\",  \"STAY\"\
    ,  \"STEM\",\n\"STEW\",  \"STIR\",  \"STOW\",  \"STUB\",  \"STUN\",  \"SUCH\"\
    ,  \"SUDS\",  \"SUIT\",\n\"SULK\",  \"SUMS\",  \"SUNG\",  \"SUNK\",  \"SURE\"\
    ,  \"SURF\",  \"SWAB\",  \"SWAG\",\n\"SWAM\",  \"SWAN\",  \"SWAT\",  \"SWAY\"\
    ,  \"SWIM\",  \"SWUM\",  \"TACK\",  \"TACT\",\n\"TAIL\",  \"TAKE\",  \"TALE\"\
    ,  \"TALK\",  \"TALL\",  \"TANK\",  \"TASK\",  \"TATE\",\n\"TAUT\",  \"TEAL\"\
    ,  \"TEAM\",  \"TEAR\",  \"TECH\",  \"TEEM\",  \"TEEN\",  \"TEET\",\n\"TELL\"\
    ,  \"TEND\",  \"TENT\",  \"TERM\",  \"TERN\",  \"TESS\",  \"TEST\",  \"THAN\"\
    ,\n\"THAT\",  \"THEE\",  \"THEM\",  \"THEN\",  \"THEY\",  \"THIN\",  \"THIS\"\
    ,  \"THUD\",\n\"THUG\",  \"TICK\",  \"TIDE\",  \"TIDY\",  \"TIED\",  \"TIER\"\
    ,  \"TILE\",  \"TILL\",\n\"TILT\",  \"TIME\",  \"TINA\",  \"TINE\",  \"TINT\"\
    ,  \"TINY\",  \"TIRE\",  \"TOAD\",\n\"TOGO\",  \"TOIL\",  \"TOLD\",  \"TOLL\"\
    ,  \"TONE\",  \"TONG\",  \"TONY\",  \"TOOK\",\n\"TOOL\",  \"TOOT\",  \"TORE\"\
    ,  \"TORN\",  \"TOTE\",  \"TOUR\",  \"TOUT\",  \"TOWN\",\n\"TRAG\",  \"TRAM\"\
    ,  \"TRAY\",  \"TREE\",  \"TREK\",  \"TRIG\",  \"TRIM\",  \"TRIO\",\n\"TROD\"\
    ,  \"TROT\",  \"TROY\",  \"TRUE\",  \"TUBA\",  \"TUBE\",  \"TUCK\",  \"TUFT\"\
    ,\n\"TUNA\",  \"TUNE\",  \"TUNG\",  \"TURF\",  \"TURN\",  \"TUSK\",  \"TWIG\"\
    ,  \"TWIN\",\n\"TWIT\",  \"ULAN\",  \"UNIT\",  \"URGE\",  \"USED\",  \"USER\"\
    ,  \"USES\",  \"UTAH\",\n\"VAIL\",  \"VAIN\",  \"VALE\",  \"VARY\",  \"VASE\"\
    ,  \"VAST\",  \"VEAL\",  \"VEDA\",\n\"VEIL\",  \"VEIN\",  \"VEND\",  \"VENT\"\
    ,  \"VERB\",  \"VERY\",  \"VETO\",  \"VICE\",\n\"VIEW\",  \"VINE\",  \"VISE\"\
    ,  \"VOID\",  \"VOLT\",  \"VOTE\",  \"WACK\",  \"WADE\",\n\"WAGE\",  \"WAIL\"\
    ,  \"WAIT\",  \"WAKE\",  \"WALE\",  \"WALK\",  \"WALL\",  \"WALT\",\n\"WAND\"\
    ,  \"WANE\",  \"WANG\",  \"WANT\",  \"WARD\",  \"WARM\",  \"WARN\",  \"WART\"\
    ,\n\"WASH\",  \"WAST\",  \"WATS\",  \"WATT\",  \"WAVE\",  \"WAVY\",  \"WAYS\"\
    ,  \"WEAK\",\n\"WEAL\",  \"WEAN\",  \"WEAR\",  \"WEED\",  \"WEEK\",  \"WEIR\"\
    ,  \"WELD\",  \"WELL\",\n\"WELT\",  \"WENT\",  \"WERE\",  \"WERT\",  \"WEST\"\
    ,  \"WHAM\",  \"WHAT\",  \"WHEE\",\n\"WHEN\",  \"WHET\",  \"WHOA\",  \"WHOM\"\
    ,  \"WICK\",  \"WIFE\",  \"WILD\",  \"WILL\",\n\"WIND\",  \"WINE\",  \"WING\"\
    ,  \"WINK\",  \"WINO\",  \"WIRE\",  \"WISE\",  \"WISH\",\n\"WITH\",  \"WOLF\"\
    ,  \"WONT\",  \"WOOD\",  \"WOOL\",  \"WORD\",  \"WORE\",  \"WORK\",\n\"WORM\"\
    ,  \"WORN\",  \"WOVE\",  \"WRIT\",  \"WYNN\",  \"YALE\",  \"YANG\",  \"YANK\"\
    ,\n\"YARD\",  \"YARN\",  \"YAWL\",  \"YAWN\",  \"YEAH\",  \"YEAR\",  \"YELL\"\
    ,  \"YOGA\",\n\"YOKE\"   };\n"
