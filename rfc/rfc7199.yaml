- title: __initial_text__
  contents:
  - '        Location Configuration Extensions for Policy Management

    '
- title: Abstract
  contents:
  - "Abstract\n   Current location configuration protocols are capable of provisioning\n\
    \   an Internet host with a location URI that refers to the host's\n   location.\
    \  These protocols lack a mechanism for the target host to\n   inspect or set\
    \ the privacy rules that are applied to the URIs they\n   distribute.  This document\
    \ extends the current location configuration\n   protocols to provide hosts with\
    \ a reference to the rules that are\n   applied to a URI so that the host can\
    \ view or set these rules.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7199.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n   2.  Definitions . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .   4\n   3.  Policy URIs . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .   4\n     3.1.  Policy URI Usage  . . . . . . . . . . . . . . . . . .\
    \ . .   5\n     3.2.  Policy URI Allocation . . . . . . . . . . . . . . . . .\
    \ .   6\n     3.3.  Policy Defaults . . . . . . . . . . . . . . . . . . . . .\
    \   7\n   4.  Location Configuration Extensions . . . . . . . . . . . . . .  \
    \ 8\n     4.1.  HELD  . . . . . . . . . . . . . . . . . . . . . . . . . .   8\n\
    \     4.2.  Client Processing . . . . . . . . . . . . . . . . . . . .   9\n  \
    \ 5.  Examples  . . . . . . . . . . . . . . . . . . . . . . . . . .   9\n    \
    \ 5.1.  Basic Access Control Policy . . . . . . . . . . . . . . .  10\n   6. \
    \ IANA Considerations . . . . . . . . . . . . . . . . . . . . .  12\n     6.1.\
    \  URN Sub-Namespace Registration for\n           urn:ietf:params:xml:ns:geopriv:held:policy\
    \  . . . . . . .  12\n     6.2.  XML Schema Registration . . . . . . . . . . .\
    \ . . . . . .  12\n   7.  Security Considerations . . . . . . . . . . . . . .\
    \ . . . . .  13\n     7.1.  Integrity and Confidentiality for Authorization Policy\n\
    \           Data  . . . . . . . . . . . . . . . . . . . . . . . . . .  13\n  \
    \   7.2.  Access Control for Authorization Policy . . . . . . . . .  13\n    \
    \ 7.3.  Location URI Allocation . . . . . . . . . . . . . . . . .  15\n     7.4.\
    \  Policy URI Handling . . . . . . . . . . . . . . . . . . .  15\n   8.  Acknowledgements\
    \  . . . . . . . . . . . . . . . . . . . . . .  16\n   9.  References  . . . .\
    \ . . . . . . . . . . . . . . . . . . . . .  17\n     9.1.  Normative References\
    \  . . . . . . . . . . . . . . . . . .  17\n     9.2.  Informative References\
    \  . . . . . . . . . . . . . . . . .  17\n   Appendix A.  Example Policy URI Generation\
    \ Algorithm  . . . . . .  18\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   A critical step in enabling Internet hosts to access location-based\n\
    \   services is to provision those hosts with information about their own\n  \
    \ location.  This is accomplished via a Location Configuration Protocol\n   (LCP)\
    \ [RFC5687], which allows a location provider (e.g., a local\n   access network)\
    \ to inform a host about its location.\n   There are two basic patterns for location\
    \ configuration, namely\n   configuration \"by value\" and \"by reference\" [RFC5808].\
    \  Configuration\n   by value provisions a host directly with its location, by\
    \ providing\n   it location information that is directly usable (e.g., coordinates\
    \ or\n   a civic address).  Configuration by reference provides a host with a\n\
    \   URI that references the host's location, i.e., one that can be\n   dereferenced\
    \ to obtain the location (by value) of the host.\n   In some cases, location by\
    \ reference offers a few benefits over\n   location by value.  From a privacy\
    \ perspective, the required\n   dereference transaction provides a policy enforcement\
    \ point so that\n   if suitable privacy policies have been provisioned, the opaque\n\
    \   location URI can be safely conveyed over untrusted media.  (If the\n   location\
    \ URI is not subject to privacy rules, then conveying the\n   location URI may\
    \ pose even greater risk than sending location by\n   value [RFC5606].)  If the\
    \ target host is mobile, an application\n   provider can use a single reference\
    \ to obtain the location of the\n   host multiple times, saving bandwidth to the\
    \ host.  For some\n   configuration protocols, the location object referenced\
    \ by a location\n   URI provides a much more expressive syntax for location values\
    \ than\n   the configuration protocol itself (e.g., DHCP geodetic location\n \
    \  [RFC6225] versus Geography Markup Language (GML) in a Presence\n   Information\
    \ Data Format Location Object (PIDF-LO) [RFC4119]).\n   From a privacy perspective,\
    \ however, current LCPs are limited in\n   their flexibility, in that they do\
    \ not provide hosts (the clients in\n   an LCP) with a way to inform the Location\
    \ Server with policy for how\n   his location information should be handled. \
    \ This document addresses\n   this gap by defining a simple mechanism for referring\
    \ to and\n   manipulating policy and by extending current LCPs to carry policy\n\
    \   references.  Using the mechanisms defined in this document, an LCP\n   server\
    \ (acting for the Location Server (LS) or Location Information\n   Server (LIS))\
    \ can inform a host as to which policy document controls\n   a given location\
    \ resource, and the host (in its Rule Maker role) can\n   inspect this document\
    \ and modify it as necessary.\n   In the following figure, adapted from RFC 5808,\
    \ this document extends\n   the Location Configuration Protocols (1) and defines\
    \ a simple\n   protocol for policy exchange (4).\n       +---------+---------+\
    \   Location    +-----------+\n       |         |         |  Dereference  | Location\
    \  |\n       |      LIS/LS       +---------------+ Recipient |\n       |     \
    \    |         |   Protocol    |           |\n       +----+----+----+----+   \
    \   (3)      +-----+-----+\n            |         |                          |\n\
    \            |         |                          |\n      Policy|         |Location\
    \                  |Location\n    Exchange|         |Configuration           \
    \  |Conveyance\n         (4)|         |Protocol                  |Protocol\n \
    \           |         |(1)                       |(2)\n            |         |\
    \                          |\n     +------+----+----+----+                   \
    \  |\n     |  Rule     | Target/ |                     |\n     |  Maker    | Host\
    \    +---------------------+\n     |           |         |\n     +-----------+---------+\n\
    \   The remainder of this document is structured as follows:\n   After introducing\
    \ a few relevant terms, we define policy URIs as a\n   channel for referencing,\
    \ inspecting, and updating policy documents.\n   We then define an extension to\
    \ the HELD protocol to allow it to carry\n   policy URIs.  Examples are given\
    \ that demonstrate how policy URIs are\n   carried in this protocol and how it\
    \ can be used by clients.\n"
- title: 2.  Definitions
  contents:
  - "2.  Definitions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [RFC2119].\n"
- title: 3.  Policy URIs
  contents:
  - "3.  Policy URIs\n   A policy URI is an HTTP [RFC2616] or HTTPS [RFC2818] URI\
    \ that\n   identifies a policy resource that contains the authorization policy\n\
    \   for a linked location resource.  Access to the location resource is\n   governed\
    \ by the contents of the authorization policy.\n   A policy URI identifies an\
    \ HTTP resource that a Rule Maker can use to\n   inspect and install policy documents\
    \ that tell a Location Server how\n   it should protect the associated location\
    \ resource.  A policy URI\n   always identifies a resource that can be represented\
    \ as a common-\n   policy document [RFC4745] (possibly including some extensions;\
    \ e.g.,\n   for geolocation policy [RFC6772]).\n   Note:  RFC 3693 [RFC3693] identified\
    \ the Rule Holder role as the one\n      that stores policy information.  In this\
    \ document, the Location\n      Server is also a Rule Holder.\n"
- title: 3.1.  Policy URI Usage
  contents:
  - "3.1.  Policy URI Usage\n   A Location Server that is the authority for policy\
    \ URIs MUST support\n   GET, PUT, and DELETE requests to these URIs, in order\
    \ to allow\n   clients to inspect, replace, and delete policy documents.  Clients\n\
    \   support the three request methods as they desire to perform these\n   operations.\n\
    \   Knowledge of the policy URI can be considered adequate evidence of\n   authorization;\
    \ a policy URI functions as a shared secret between the\n   client and the server\
    \ (see Section 7).  A Location Server SHOULD\n   allow all requests, but it MAY\
    \ deny certain requests based on local\n   policy.  For instance, a Location Server\
    \ might allow clients to\n   inspect policy (GET), but not to update it (PUT).\
    \  Or, a Location\n   Server might require clients to authenticate using HTTP\
    \ or Transport\n   Layer Security (TLS) client authentication.  Clients implementing\n\
    \   this specification SHOULD support HTTP client authentication\n   [RFC2617]\
    \ and MAY support TLS client certificates.\n   A GET request to a policy URI is\
    \ a request for the referenced policy\n   information.  If the request is authorized,\
    \ then the Location Server\n   sends an HTTP 200 response containing the complete\
    \ policy identified\n   by the URI.\n   A PUT request to a policy URI is a request\
    \ to replace the current\n   policy.  The entity-body of a PUT request includes\
    \ a complete policy\n   document.  When a Location Server receives a PUT request,\
    \ it MUST\n   validate the policy document included in the body of the request.\
    \  If\n   the request is valid and authorized, then the Location Server MUST\n\
    \   replace the current policy with the policy provided in the request.\n   A\
    \ DELETE request to a policy URI is a request to delete the\n   referenced policy\
    \ document.  If the request is authorized, then the\n   Location Server MUST delete\
    \ the policy referenced by the URI and\n   disallow access to the location URIs\
    \ it governs until a new policy\n   document has been put in place via a PUT request.\n\
    \   A policy URI is only valid while the corresponding location URI set\n   is\
    \ valid.  A Location Server MUST NOT respond to any requests to a\n   policy URI\
    \ once the corresponding location URI set has expired.  This\n   expiry time is\
    \ specified by the 'expires' attribute in the HELD\n   locationResponse.\n   \
    \   A location URI can thus become invalid in three ways: By the\n      expiration\
    \ of a validity interval in policy, by the removal of a\n      policy document\
    \ with a DELETE request, or by the expiry of the\n      LCP-specified validity\
    \ interval.  The former two are temporary,\n      since the policy URI can be\
    \ used to update the policy.  The latter\n      one is permanent, since the expiry\
    \ causes the policy URI to be\n      invalidated as well.\n   The Location Server\
    \ MUST support policy documents in the common-\n   policy format [RFC4745], as\
    \ identified by the MIME media type of\n   \"application/auth-policy+xml\".  The\
    \ common-policy format MUST be\n   provided as the default format in response\
    \ to GET requests that do\n   not include specific \"Accept\" headers, but content\
    \ negotiation MAY be\n   used to allow for other formats.\n   This usage of HTTP\
    \ is generally compatible with the use of Extensible\n   Markup Language (XML)\
    \ Configuration Access Protocol (XCAP) [RFC4825]\n   or Web Distributed Authoring\
    \ and Versioning (WebDAV) [RFC4918] to\n   manage policy documents, but this document\
    \ does not define or require\n   the use of these protocols.\n"
- title: 3.2.  Policy URI Allocation
  contents:
  - "3.2.  Policy URI Allocation\n   A Location Server creates a policy URI for a\
    \ specific location\n   resource at the time that the location resource is created;\
    \ that is,\n   a policy URI is created at the same time as the location URI that\
    \ it\n   controls.  The URI of the policy resource MUST be different from the\n\
    \   location URI.\n   A policy URI is provided in response to location configuration\n\
    \   requests.  A policy URI MUST NOT be provided to an entity that is not\n  \
    \ authorized to view or set policy.  This document does not describe\n   how policy\
    \ might be provided to entities other than for location\n   configuration, for\
    \ example, in responses to dereferencing requests\n   [RFC6753] or requests from\
    \ third parties [RFC6155].\n   Each location URI has either one policy URI or\
    \ no policy URI.  The\n   initial policy that is referenced by a policy URI MUST\
    \ be identical\n   to the policy that would be applied in the absence of a policy\
    \ URI.\n   A client that does not support policy URIs can continue to use the\n\
    \   location URI as they would have if no policy URI were provided.\n      For\
    \ HELD, the client assumes that the default policy grants any\n      requester\
    \ access to location information, as long as the request\n      possesses the\
    \ location URI.  To ensure that the authorization\n      policy is less permissive,\
    \ a client updates the policy prior to\n      distributing the location URI.\n\
    \   A Location Server chooses whether or not to provide a policy URI\n   based\
    \ on local policy.  A HELD-specific extension also allows a\n   requester to specifically\
    \ ask for a policy URI.\n   A policy URI is effectively a shared secret between\
    \ the Location\n   Server and its clients.  Knowledge of a policy URI is all that\
    \ is\n   required to perform any operations allowed on the policy.  Thus, a\n\
    \   policy URI should be constructed so that it is hard to predict and\n   confidentiality\
    \ protected when transmitted (see Section 7).  To avoid\n   reusing these shared\
    \ secrets, the Location Server MUST generate a new\n   policy URI whenever it\
    \ generates a new location URI set.\n"
- title: 3.3.  Policy Defaults
  contents:
  - "3.3.  Policy Defaults\n   Client implementors should keep in mind that setting\
    \ no policy (never\n   performing an HTTP request to a policy URI) is very different\
    \ from\n   setting an empty policy (performing a PUT with the empty policy). \
    \ By\n   \"the empty policy\", we mean a policy containing no rules, which would\n\
    \   be represented by the following policy document:\n   <?xml version=\"1.0\"\
    \ encoding=\"UTF-8\"?>\n      <ruleset xmlns=\"urn:ietf:params:xml:ns:common-policy\"\
    >\n      </ruleset>\n                        Figure 1: The Empty Policy\n   If\
    \ no policy is set, then the client tacitly accepts whatever policy\n   the server\
    \ applies to location URIs, including a policy that provides\n   location to anyone\
    \ that makes a dereference request.  If the empty\n   policy is set, then the\
    \ opposite is true; the client directs the\n   server to never provide access\
    \ to location.  (Since there are no\n   rules to allow access and the policy language\
    \ is default-deny.)\n   Thus, implementors should consider carefully how to handle\
    \ the case\n   where the user provides no privacy policy input.  On the one hand,\
    \ an\n   implementation might treat this case as if the user had no privacy\n\
    \   preferences and, thus, set no policy.  On the other hand, another\n   implementation\
    \ might decide that if a user provides no positive\n   authorization, then the\
    \ empty policy should be installed.\n   The same reasoning could also be applied\
    \ to servers, with the caveat\n   that servers do not know whether a given HELD\
    \ client supports the use\n   of policy URIs.  A client that does not understand\
    \ policy URIs will\n   not be able to set its own policy, so the server must choose\
    \ a\n   default that is open enough that clients will find it useful.  On the\n\
    \   other hand, once a client indicates that it understands policy URIs\n   (by\
    \ including a \"requestPolicyUri\" element in its HELD request), the\n   server\
    \ may change its default policy to something more restrictive --\n   even the\
    \ empty, default-deny policy -- since the client can specify\n   something more\
    \ permissive if desired.\n"
- title: 4.  Location Configuration Extensions
  contents:
  - "4.  Location Configuration Extensions\n   Location configuration protocols can\
    \ provision hosts with location\n   URIs that refer to the host's location.  If\
    \ the target host is to\n   control policy on these URIs, it needs a way to access\
    \ the policy\n   that the Location Server uses to guide how it serves location\
    \ URIs.\n   This section defines extensions to LCPs to carry policy URIs that\
    \ the\n   target can use to control access to location resources.\n"
- title: 4.1.  HELD
  contents:
  - "4.1.  HELD\n   The HELD protocol [RFC5985] defines a \"locationUriSet\" element,\
    \ which\n   contains a set of one or more location URIs that reference the same\n\
    \   resource and share a common access control policy.  The schema in\n   Figure\
    \ 2 defines two extension elements for HELD: an empty\n   \"requestPolicyUri\"\
    \ element that is added to a location request to\n   indicate that a Device desires\
    \ that a policy URI be allocated and a\n   \"policyUri\" element that is included\
    \ in the location response.\n   <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n \
    \  <xs:schema\n        targetNamespace=\"urn:ietf:params:xml:ns:geopriv:held:policy\"\
    \n        xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n        xmlns:hp=\"urn:ietf:params:xml:ns:geopriv:held:policy\"\
    \n        elementFormDefault=\"qualified\"\n        attributeFormDefault=\"unqualified\"\
    >\n     <xs:element name=\"requestPolicyUri\">\n       <xs:complexType name=\"\
    empty\"/>\n     </xs:element>\n     <xs:element name=\"policyUri\" type=\"xs:anyURI\"\
    />\n   </xs:schema>\n             Figure 2: XML Schema for the Policy URI Extension\n\
    \   The URI carried in a \"policyUri\" element refers to the common access\n \
    \  control policy for location URIs in the location response.  The URI\n   MUST\
    \ be a policy URI as described in Section 3.  A policy URI MUST\n   use the \"\
    http:\" or \"https:\" scheme, and the Location Server MUST\n   support the specified\
    \ operations on the URI.\n   A HELD request MAY contain an explicit request for\
    \ a policy URI.  The\n   presence of the \"requestPolicyUri\" element in a location\
    \ request\n   indicates that a policy URI is desired.\n"
- title: 4.2.  Client Processing
  contents:
  - "4.2.  Client Processing\n   It is possible that this document will be updated\
    \ to allow the use of\n   policy URIs that use protocols other than the HTTP-based\
    \ protocol\n   described above.  To ensure that they fail safely when presented\
    \ with\n   such a URI, clients implementing this specification MUST verify that\n\
    \   a policy URI received from HELD uses either the \"http:\" or \"https:\"\n\
    \   scheme.  If the URI does not match those schemes, then the client\n   MUST\
    \ discard the URI and behave as if no policy URI was provided.\n"
- title: 5.  Examples
  contents:
  - "5.  Examples\n   In this section, we provide some brief illustrations of how\
    \ policy\n   URIs are delivered to target hosts and used by those hosts to manage\n\
    \   policy.\n   A HELD request that explicitly requests the creation of a policy\
    \ URI\n   has the following form:\n   <locationRequest xmlns=\"urn:ietf:params:xml:ns:geopriv:held\"\
    >\n     <locationType exact=\"true\">locationURI</locationType>\n     <requestPolicyUri\n\
    \       xmlns=\"urn:ietf:params:xml:ns:geopriv:held:policy\"/>\n   </locationRequest>\n\
    \   A HELD response providing a single \"locationUriSet\", containing two\n  \
    \ URIs under a common policy, would have the following form:\n   <locationResponse\
    \ xmlns=\"urn:ietf:params:xml:ns:geopriv:held\">\n     <locationUriSet expires=\"\
    2011-01-01T13:00:00.0Z\">\n       <locationURI>\n         https://ls.example.com:9768/357yc6s64ceyoiuy5ax3o\n\
    \       </locationURI>\n       <locationURI>\n         sip:9769+357yc6s64ceyoiuy5ax3o@ls.example.com:\n\
    \       </locationURI>\n     </locationUriSet>\n     <policyUri xmlns=\"urn:ietf:params:xml:ns:geopriv:held:policy\"\
    >\n       https://ls.example.com:9768/policy/357lp6f64prlbvhl5nk3b\n     </policyUri>\n\
    \   </locationResponse>\n"
- title: 5.1.  Basic Access Control Policy
  contents:
  - "5.1.  Basic Access Control Policy\n   Consider a client that gets the policy\
    \ URI <https://\n   ls.example.com:9768/policy/357lp6f64prlbvhl5nk3b>, as in the\
    \ above\n   LCP example.  The first thing this allows the client to do is inspect\n\
    \   the default policy that the LS has assigned to this URI:\n   GET /policy/357lp6f64prlbvhl5nk3b\
    \ HTTP/1.1\n   Host: ls.example.com:9768\n   HTTP/1.1 200 OK\n   Content-type:\
    \ application/auth-policy+xml\n   Content-length: 388\n   <?xml version=\"1.0\"\
    \ encoding=\"UTF-8\"?>\n   <ruleset xmlns=\"urn:ietf:params:xml:ns:common-policy\"\
    \n            xmlns:gp=\"urn:ietf:params:xml:ns:geolocation-policy\">\n     <rule\
    \ id=\"AA56ia9\">\n       <conditions>\n         <validity>\n           <until>2011-01-01T13:00:00.0Z</until>\n\
    \         </validity>\n       </conditions>\n       <actions/>\n       <transformations>\n\
    \         <gp:provide-location/>\n         <gp:set-retransmission-allowed>\n \
    \          false\n         </gp:set-retransmission-allowed>\n         <gp:set-retention-expiry>0</gp:set-retention-expiry>\n\
    \       </transformations>\n     </rule>\n   </ruleset>\n   This policy allows\
    \ any requester to obtain location information, as\n   long as they know the location\
    \ URI.  If the user disagrees with this\n   policy, and prefers for example, to\
    \ only provide location to one\n   friend, at a city level of granularity, then\
    \ the client can install\n   this policy on the Location Server:\n   PUT /policy/357lp6f64prlbvhl5nk3b\
    \ HTTP/1.1\n   Host: ls.example.com:9768\n   Content-type: application/auth-policy+xml\n\
    \   Content-length: 462\n   <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <ruleset\
    \ xmlns=\"urn:ietf:params:xml:ns:common-policy\"\n      xmlns:gp=\"urn:ietf:params:xml:ns:geolocation-policy\"\
    \n      xmlns:lp=\"urn:ietf:params:xml:ns:basic-location-profiles\">\n     <rule\
    \ id=\"f3g44r1\">\n       <conditions>\n         <identity>\n           <one id=\"\
    sip:friend@example.com\"/>\n         </identity>\n         <validity>\n      \
    \     <until>2011-01-01T13:00:00.0Z</until>\n         </validity>\n       </conditions>\n\
    \       <actions/>\n       <transformations>\n         <gp:provide-location\n\
    \             profile=\"civic-transformation\">\n           <lp:provide-civic>city</lp:provide-civic>\n\
    \         </gp:provide-location>\n       </transformations>\n     </rule>\n  \
    \ </ruleset>\n   HTTP/1.1 200 OK\n   Finally, after using the URI for a period,\
    \ the user wishes to\n   permanently invalidate the URI.\n   DELETE /policy/357lp6f64prlbvhl5nk3b\
    \ HTTP/1.1\n   Host: ls.example.com:9768\n   HTTP/1.1 200 OK\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   This document requires several IANA registrations,\
    \ detailed below.\n"
- title: 6.1.  URN Sub-Namespace Registration for
  contents:
  - "6.1.  URN Sub-Namespace Registration for\n      urn:ietf:params:xml:ns:geopriv:held:policy\n\
    \   This section registers a new XML namespace,\n   \"urn:ietf:params:xml:ns:geopriv:held:policy\"\
    , per the guidelines in\n   [RFC3688].\n      URI: urn:ietf:params:xml:ns:geopriv:held:policy\n\
    \      Registrant Contact: IETF, GEOPRIV working group,\n      (geopriv@ietf.org),\
    \ Richard Barnes (rlb@ipv.sx).\n      XML:\n       BEGIN\n         <?xml version=\"\
    1.0\"?>\n         <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n\
    \           \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n         <html\
    \ xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\">\n           <head>\n\
    \             <title>HELD Policy URI Extension</title>\n           </head>\n \
    \          <body>\n             <h1>Namespace for HELD Policy URI Extension</h1>\n\
    \             <h2>urn:ietf:params:xml:ns:geopriv:held:policy</h2>\n          \
    \   <p>See <a href=\"http://www.rfc-editor.org/rfc/rfc7199.txt\">\n          \
    \      RFC 7199</a>.</p>\n           </body>\n         </html>\n       END\n"
- title: 6.2.  XML Schema Registration
  contents:
  - "6.2.  XML Schema Registration\n   This section registers an XML schema as per\
    \ the guidelines in\n   [RFC3688].\n   URI:  urn:ietf:params:xml:schema:geopriv:held:policy\n\
    \   Registrant Contact:  IETF, GEOPRIV working group (geopriv@ietf.org),\n   \
    \   Richard Barnes (rlb@ipv.sx)\n   Schema:  The XML for this schema can be found\
    \ in Section 4.1.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   There are two main classes of risks associated\
    \ with access control\n   policy management: The risk of unauthorized grants or\
    \ denial of\n   access to the protected resource via manipulation of the policy\n\
    \   management process, and the risk of disclosure of policy information\n   itself.\n\
    \   Protecting the policy management process from manipulation entails\n   two\
    \ primary requirements.  First, the policy URI has to be faithfully\n   and confidentially\
    \ transmitted to the client; second, the policy\n   document has to be faithfully\
    \ and confidentially transmitted to the\n   Location Server.  The mechanism also\
    \ needs to ensure that only\n   authorized entities are able to acquire or alter\
    \ policy.\n"
- title: 7.1.  Integrity and Confidentiality for Authorization Policy Data
  contents:
  - "7.1.  Integrity and Confidentiality for Authorization Policy Data\n   Each LCP\
    \ ensures integrity and confidentiality through different\n   means (see [RFC5985]).\
    \  These measures ensure that a policy URI is\n   conveyed to the client without\
    \ modification or interception.\n   In general, the requirements for TLS on policy\
    \ transactions are the\n   same as for the dereference transactions they set policy\
    \ for\n   [RFC6753].  To protect the integrity and confidentiality of policy\n\
    \   data during management, the Location Server SHOULD provide policy\n   URIs\
    \ with the \"https:\" scheme and require the use of HTTP over TLS\n   [RFC2818].\
    \  The cipher suites required by TLS [RFC5246] provide both\n   integrity protection\
    \ and confidentiality.  If other means of\n   protection are available, an \"\
    http:\" URI MAY be used, but location\n   servers SHOULD reject PUT and DELETE\
    \ requests for policy URIs that\n   use the \"http:\" URI scheme.\n"
- title: 7.2.  Access Control for Authorization Policy
  contents:
  - "7.2.  Access Control for Authorization Policy\n   Access control for the policy\
    \ resource is based on knowledge of its\n   URI.  The URI of a policy resource\
    \ operates under the same\n   constraints as a possession model location URI [RFC5808]\
    \ and is\n   subject to the same constraints:\n   o  Knowledge of a policy URI\
    \ MUST be restricted to authorized Rule\n      Makers.  Confidentiality and integrity\
    \ protections SHOULD be used\n      when policy URIs are conveyed in a location\
    \ configuration protocol\n      and in the requests that are used to inspect,\
    \ change, or delete\n      the policy resource.  Note that in some protocols (such\
    \ as DHCP),\n      these protections may arise from limiting the use of the protocol\n\
    \      to the local network thus relying on lower-layer security\n      mechanisms.\
    \  When neither application-layer nor network-layer\n      security is provided,\
    \ location servers MUST reject requests using\n      the PUT and DELETE methods.\n\
    \   o  The Location Server MUST ensure that it is not practical for an\n     \
    \ attacker to guess a policy URI value, even if the attacker has\n      requested\
    \ many policy URIs from the Location Server over time.\n      The policy URI MUST\
    \ NOT be derived solely from information that\n      might be public, including\
    \ the Target identity or any location\n      URI.  The addition of 128 bits or\
    \ more of random entropy is\n      RECOMMENDED to make it infeasible for a third\
    \ party to guess a\n      policy URI.\n   o  Servers SHOULD apply rate limits\
    \ in order to make brute-force\n      guessing infeasible.  If a server allocates\
    \ location URIs that\n      include N bits of entropy with a lifetime of T seconds,\
    \ then the\n      server should limit clients to (2^(N/2))/T queries per second.\n\
    \      (The lifetime T of a location URI set is specified by the\n      \"expires\"\
    \ attribute in HELD.)\n   One possible algorithm for generating appropriately\
    \ unpredictable\n   policy URIs for a location URI set is described in Appendix\
    \ A.\n   The goal of the above recommendation on rate limiting is to bound the\n\
    \   probability that an attacker can guess a policy URI during its\n   lifetime.\
    \  If an attacker is limited to (2^(N/2))/T queries per\n   second, then he will\
    \ be able to make at most 2^(N/2) guesses over the\n   lifetime of the URI.  Assuming\
    \ these guesses are distinct, the\n   probability of the attacker guessing any\
    \ given URI is\n   (2^(N/2))/(2^N), so the probability of compromise over the\
    \ T-second\n   lifetime of the URI is at most 2^(-N/2).  (Of course, if the attacker\n\
    \   guesses the URI after the policy URI has expired, then there is no\n   risk.)\
    \  With N=128, the probability of compromise is 5.4e-20 under\n   this rate-limiting\
    \ scheme.  Operators should choose values for N so\n   that the corresponding\
    \ risk of compromise presents an acceptable\n   level of risk.\n   If M distinct\
    \ URIs are issued within the same namespace, then the\n   probability of any of\
    \ the M URIs being compromised is M*2^(N/2).  The\n   example algorithm for generating\
    \ policy URIs (see Appendix A) places\n   them in independent namespaces (i.e.,\
    \ below the corresponding\n   location URIs), so this compounding does not occur.\n\
    \   Note that the chosen entropy level will also affect how quickly\n   legitimate\
    \ clients can query a given URI, especially for very long-\n   lived URIs.  If\
    \ the default lifetime T is greater than 2^(N/2), then\n   clients will have to\
    \ wait multiple seconds between queries.\n   Operators should choose entropy and\
    \ lifetime values that result in\n   acceptable high maximum query rates and acceptably\
    \ low probability of\n   compromise.  For example, with 32 bits of entropy (much\
    \ less than\n   recommended above), the one-query-per-second policy URI lifetime\
    \ is\n   around 18 hours.\n"
- title: 7.3.  Location URI Allocation
  contents:
  - "7.3.  Location URI Allocation\n   A policy URI enables the authorization by access\
    \ control lists model\n   [RFC5808] for associated location URIs.  Under this\
    \ model, it might\n   be possible to more widely distribute a location URI, relying\
    \ on the\n   authorization policy to constrain access to location information.\n\
    \   To allow for wider distribution, authorization by access control\n   lists\
    \ places additional constraints on the construction of location\n   URIs.\n  \
    \ If multiple Targets share a location URI, an unauthorized location\n   recipient\
    \ that acquires location URIs for the Targets can determine\n   that the Targets\
    \ are at the same location by comparing location URIs.\n   With shared policy\
    \ URIs, Targets are able to see and modify\n   authorization policy for other\
    \ Targets.\n   To allow for the creation of Target-specific authorization policies\n\
    \   that are adequately privacy protected, each location URI and policy\n   URI\
    \ that is issued to a different Target MUST be different from other\n   location\
    \ URIs and policy URIs.  That is, two clients MUST NOT receive\n   the same location\
    \ URI or the same policy URI.\n   In some deployments, it is not always apparent\
    \ to an LCP server that\n   two clients are different.  In particular, where a\
    \ middlebox\n   [RFC3234] exists, two or more clients might appear as a single\n\
    \   client.  An example of a deployment scenario of this nature is\n   described\
    \ in [RFC5687].  An LCP server MUST create a different\n   location URI and policy\
    \ URI for every request, unless the requests\n   can be reliably identified as\
    \ being from the same client.\n"
- title: 7.4.  Policy URI Handling
  contents:
  - "7.4.  Policy URI Handling\n   Although servers may choose to implement access\
    \ controls on policy\n   URIs, by default, any holder of a policy URI is authorized\
    \ to access\n   and modify the referenced policy document and, thus, to control\n\
    \   access to the associated location resources.  Because policy URIs\n   function\
    \ as shared secrets, clients SHOULD protect them as they would\n   passwords.\
    \  For example, policy URIs SHOULD NOT be transmitted to\n   other hosts or stored\
    \ in plaintext.\n   It should be noted that one of the benefits of the policy\
    \ URI\n   construct is that in most cases, there is not a policy URI to leave\n\
    \   the client device to which it is provided.  Without policy URIs,\n   location\
    \ URIs are subject to a default policy set unilaterally by the\n   server, and\
    \ location URIs must be conveyed to another entity in order\n   to be useful.\
    \  With policy URIs, location URIs can have more nuanced\n   access controls,\
    \ and the shared secret used to authenticate the\n   client (i.e., the policy\
    \ URI) can simply be stored on the client and\n   used to set the access control\
    \ policy on the location URI.  So while\n   policy URIs do use a default model\
    \ of authorization by possession,\n   they reduce the overall risk to location\
    \ privacy posed by leakage of\n   shared secret URIs.\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   Thanks to Mary Barnes and Alissa Cooper for providing\
    \ critical\n   commentary and input on the ideas described in this document. \
    \ Also,\n   thanks to Ted Hardie and Adam Roach for helping clarify the\n   relationships\
    \ between policy URIs, policy documents, and location\n   resources.  Thanks to\
    \ Stephen Farrell for a helpful discussion on\n   security and privacy challenges.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2616]  Fielding, R., Gettys, J., Mogul, J., Frystyk, H.,\n   \
    \           Masinter, L., Leach, P., and T. Berners-Lee, \"Hypertext\n       \
    \       Transfer Protocol -- HTTP/1.1\", RFC 2616, June 1999.\n   [RFC2617]  Franks,\
    \ J., Hallam-Baker, P., Hostetler, J., Lawrence, S.,\n              Leach, P.,\
    \ Luotonen, A., and L. Stewart, \"HTTP\n              Authentication: Basic and\
    \ Digest Access Authentication\",\n              RFC 2617, June 1999.\n   [RFC2818]\
    \  Rescorla, E., \"HTTP Over TLS\", RFC 2818, May 2000.\n   [RFC3688]  Mealling,\
    \ M., \"The IETF XML Registry\", BCP 81, RFC 3688,\n              January 2004.\n\
    \   [RFC4745]  Schulzrinne, H., Tschofenig, H., Morris, J., Cuellar, J.,\n   \
    \           Polk, J., and J. Rosenberg, \"Common Policy: A Document\n        \
    \      Format for Expressing Privacy Preferences\", RFC 4745,\n              February\
    \ 2007.\n   [RFC5246]  Dierks, T. and E. Rescorla, \"The Transport Layer Security\n\
    \              (TLS) Protocol Version 1.2\", RFC 5246, August 2008.\n   [RFC5985]\
    \  Barnes, M., \"HTTP-Enabled Location Delivery (HELD)\", RFC\n              5985,\
    \ September 2010.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [RFC3234]  Carpenter, B. and S. Brim, \"Middleboxes:\
    \ Taxonomy and\n              Issues\", RFC 3234, February 2002.\n   [RFC3693]\
    \  Cuellar, J., Morris, J., Mulligan, D., Peterson, J., and\n              J.\
    \ Polk, \"Geopriv Requirements\", RFC 3693, February 2004.\n   [RFC4119]  Peterson,\
    \ J., \"A Presence-based GEOPRIV Location Object\n              Format\", RFC\
    \ 4119, December 2005.\n   [RFC4648]  Josefsson, S., \"The Base16, Base32, and\
    \ Base64 Data\n              Encodings\", RFC 4648, October 2006.\n   [RFC4825]\
    \  Rosenberg, J., \"The Extensible Markup Language (XML)\n              Configuration\
    \ Access Protocol (XCAP)\", RFC 4825, May 2007.\n   [RFC4918]  Dusseault, L.,\
    \ \"HTTP Extensions for Web Distributed\n              Authoring and Versioning\
    \ (WebDAV)\", RFC 4918, June 2007.\n   [RFC5606]  Peterson, J., Hardie, T., and\
    \ J. Morris, \"Implications of\n              'retransmission-allowed' for SIP\
    \ Location Conveyance\", RFC\n              5606, August 2009.\n   [RFC5687] \
    \ Tschofenig, H. and H. Schulzrinne, \"GEOPRIV Layer 7\n              Location\
    \ Configuration Protocol: Problem Statement and\n              Requirements\"\
    , RFC 5687, March 2010.\n   [RFC5808]  Marshall, R., \"Requirements for a Location-by-Reference\n\
    \              Mechanism\", RFC 5808, May 2010.\n   [RFC6155]  Winterbottom, J.,\
    \ Thomson, M., Tschofenig, H., and R.\n              Barnes, \"Use of Device Identity\
    \ in HTTP-Enabled Location\n              Delivery (HELD)\", RFC 6155, March 2011.\n\
    \   [RFC6225]  Polk, J., Linsner, M., Thomson, M., and B. Aboba, \"Dynamic\n \
    \             Host Configuration Protocol Options for Coordinate-Based\n     \
    \         Location Configuration Information\", RFC 6225, July 2011.\n   [RFC6753]\
    \  Winterbottom, J., Tschofenig, H., Schulzrinne, H., and M.\n              Thomson,\
    \ \"A Location Dereference Protocol Using HTTP-\n              Enabled Location\
    \ Delivery (HELD)\", RFC 6753, October 2012.\n   [RFC6772]  Schulzrinne, H., Tschofenig,\
    \ H., Cuellar, J., Polk, J.,\n              Morris, J., and M. Thomson, \"Geolocation\
    \ Policy: A\n              Document Format for Expressing Privacy Preferences\
    \ for\n              Location Information\", RFC 6772, January 2013.\n"
- title: Appendix A.  Example Policy URI Generation Algorithm
  contents:
  - "Appendix A.  Example Policy URI Generation Algorithm\n   One possible algorithm\
    \ for generating appropriately unpredictable\n   policy URIs for a location URI\
    \ set is as follows:\n   1.  Choose parameters:\n       *  A cryptographic hash\
    \ function H, e.g., SHA256\n       *  A number N of bits of entropy to add, such\
    \ that N is no more\n          than the length of the output of the hash function\n\
    \   2.  On allocation of a location URI, generate a policy URI in the\n      \
    \ following way:\n       1.  Generate a random value NONCE at least N/8 bytes\
    \ long\n       2.  Compute hash = H( Location-URI-Set || NONCE ) using some\n\
    \           cryptographic hash function H and some serialization of the\n    \
    \       location URI set (e.g., the XML from a HELD response)\n       3.  Form\
    \ the policy URI by appending the base64url-encoded form\n           of the hash\
    \ [RFC4648] to one of the location URIs, e.g., as a\n           query parameter:\
    \ \"http://example.com/loc/\n           foo?policy=j3WTGUb3smxcZA6eKIqmqdV3ALE\"\
    \n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Richard Barnes\n   Mozilla\n   331 E. Evelyn Ave.\n  \
    \ Mountain View, CA  94041\n   US\n   EMail: rlb@ipv.sx\n   Martin Thomson\n \
    \  Mozilla\n   Suite 300\n   331 E Evelyn Street\n   Mountain View, CA  94041\n\
    \   US\n   EMail: martin.thomson@gmail.com\n   James Winterbottom\n   Unaffiliated\n\
    \   AU\n   EMail: a.james.winterbottom@gmail.com\n   Hannes Tschofenig\n   Hall\
    \ in Tirol  6060\n   Austria\n   EMail: Hannes.Tschofenig@gmx.net\n   URI:   http://www.tschofenig.priv.at\n"
