Abstract This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in the Internet community.
In particular, it describes managed objects for modeling TE links as described in the Link Bundling in MPLS Traffic Engineering (TE) document.
The Internet Standard Management Framework
For a detailed overview of the documents that describe the current Internet Standard Management Framework, please refer to section 7 of RFC 3410 [RFC3410].
Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
MIB objects are generally accessed through the Simple Network Management Protocol (SNMP).
Objects in the MIB are defined using the mechanisms defined in the Structure of Management Information (SMI).
This memo specifies a MIB module that is compliant to the SMIv2, which is described in STD 58, RFC 2578 [RFC2578], STD 58
, RFC 2579 [RFC2579] and STD 58, RFC 2580
Introduction OSPF [RFC3630], Generalized MPLS (GMPLS)
[RFC3471], and the Link Management Protocol (LMP)
[RFC4204] use the concept of traffic engineering (TE) links to abstract link properties.
The effect of this approach is a reduction in the amount of routing information exchanged in the network, which improves routing scalability.
In addition, the use of TE links allows the implementation of new capabilities such as link protection.
In this document, we present a MIB module that can be used to manage TE links and their extension, the bundled link.
This MIB module enables both the configuration and the performance monitoring of TE links and the bundled link.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119
This document uses terminology from the documents describing link bundling [RFC4201] and GMPLS [RFC3945].
The link bundling feature is designed to aggregate one or more similar entities between a node pair into a bundled link [RFC4201].
In RFC 4201, those entities are referred to as TE links.
A TE link is a subinterface capable of carrying MPLS traffic engineered traffic.
A TE Link may be comprised of only one underlying component link.
In cases where more than one component links are to be combined, multiple component links should be created with differing priorities to indicate hot standby or parallel utilization.
A bundled link is another kind of Traffic Engineering (TE) link (see [RFC4203]).
A link bundle is a subinterface that binds the traffic of a group of one or more TE links.
There should be more than one TE Link in a link bundle, but this is not a requirement.
Furthermore, if there are more than one TE links in a link bundle at some time, and at some point later, all but one of the links are deleted, the agent may choose to either delete the link bundle, or it may choose to leave it intact.
Traffic counters on a link bundle are cumulative for all subinterfaces that it binds together.
The TE Link MIB module (TE LINK STD MIB) is designed to satisfy the following requirements and constraints:
The MIB module supports the management of TE links, including bundled links.
Support is provided for configuration of traffic engineering parameters associated with TE links.
The MIB module is used to monitor the priority based component link and TE link bandwidth values.
Outline Configuring bundled links involves the following steps:  Creating a bundled link.
Optionally specifying the shared risk link groups associated with the TE links.
Configuring the component links including the bandwidth parameters and associating the component links with the appropriate TE link.
Associating the TE links with the appropriate bundled link.
Brief Description of MIB Objects Sections 6.1 6.4 describe objects pertaining to TE links while Sections 6.5 6.7 describe objects pertaining to component links.
The MIB objects were derived from the link bundling document [RFC4201].
This table represents the TE links, including bundled links, and their generic traffic engineering parameters.
teLinkDescriptorTable This table represents the TE link interface switching capability descriptors.
This table represents the shared risk link groups (SRLGs) associated with TE links.
teLinkBandwidthTable This table specifies the priority based bandwidth traffic engineering parameters associated with TE links.
This table enumerates the component links and their generic traffic engineering parameters.
This table enumerates the interface switching capability descriptors that each component link supports.
The component link bandwidth table specifies the priority based bandwidth values associated with the component links.
Component links that belong to the same TE link must be compatible.
If these two tables are managed independently, mechanisms should be put in place to ensure consistency between the two tables.
TE links that form a bundled link must have compatible traffic engineering parameters (resource class, link metric, and protection type).
The link descriptors of the teLinkDescriptorTable can be derived from the link descriptors of the componentLinkDescrTable.
Some of the bandwidth parameters of the teLinkTable, teLinkDescriptorTable, teLinkBandwidthTable are derived from the bandwidth parameters of the componentLinkTable, componentLinkDescriptorTable, and componentLinkBandwidthTable
(maximum reservable bandwidth, minimum LSP bandwidth, maximum LSP bandwidth at specified priority, and unreserved bandwidth).
Example of Bundled Link Setup
In this section, we provide a brief example of using the MIB objects described in section 10 to set up a bundled link.
While this example is not meant to illustrate every nuance of the MIB module, it is intended as an aid to understanding some of the key concepts.
It is meant to be read after going through the MIB module itself.
Section 8.2 provides more details on the use of the ifStackTable to establish relationships between bundled links, TE links, and component links.
Suppose that one would like to manually create a bundled link out of two 1:1 TE links, as depicted in the figure in Section 8.2.
Assume that the bundled link is associated with SRLGs 10 and 50.
Finally, let the component links be port entity interfaces (lambdas).
The following example illustrates which rows and corresponding objects might be created to accomplish this.
First, a bundled link entry is created.
An ifEntry with the same ifIndex and with ifType teLink needs to be created beforehand.
Next, the two TE links are created.
} The bundled link inherits the SRLG properties from the associated TE links.
Next, for each unbundled TE link, a component link is created.
An ifEntry with the same ifIndex needs to be created beforehand.
In this example, once a component link is added to the componentLinkTable, the associated link descriptors are implicitly added to the componentLinkDescriptorTable.
TE link link descriptors are derived from their component link descriptors.
Note that the bandwidth attributes in teLinkDescriptorTable, componentLinkDescriptorTable, teLinkBandwidthTable, and componentLinkBandwidthTable are maintained by the device according to LSP creation/deletion at different priorities.
The values in the teLinkBandwidthTable are an aggregation of the values for the component links of the TE links and the TE links of the bundled link.
Application of the Interfaces Group to TE Links
The Interfaces Group [RFC2863] defines generic managed objects for managing interfaces.
This memo contains the media specific extensions to the Interfaces Group for managing TE Link interfaces as logical interfaces.
This memo assumes the interpretation of the Interfaces Group to be in accordance with [RFC2863], which states that the interfaces table (ifTable) contains information on the managed resource's interfaces and that each sub layer below the internetwork layer of a network interface is considered an interface.
Thus, the TE Link interface is represented as an entry in the ifTable.
The interrelation of entries in the ifTable is defined by Interfaces Stack Group, as defined in [RFC2863].
When using TE Link interfaces, the interface stack table might appear as follows:
TE link interface ifType   teLink(200)
Examples include ATM, Frame Relay, Ethernet, etc.
Support of the TE Link Layer by ifTable
Some specific interpretations of ifTable for the TE Link layer follow.
Each TE Link interface is represented by an ifEntry.
The total bandwidth in bits per second for use by the TE Link layer.
This variable indicates the administrator's intent as to whether TE Link should be enabled, disabled, or running in some diagnostic testing mode on this interface.
This value reflects the actual or operational status of the TE Link on this interface.
The number of received octets over the interface, i.e., the number of received octets in all component links associated with the interface.
The number of transmitted octets over the interface, i.e., the number of octets transmitted over all component links associated with the interface.
The number of packets dropped due to uncorrectable errors.
The number of received packets discarded during packet header validation.
ifLinkUpDownTrapEnable Default is disabled (2).
The 64 bit version of ifInOctets; supported if required by the compliance statements in [RFC2863].
The 64 bit version of ifOutOctets; supported if required by the compliance statements in [RFC2863].
The non volatile 'alias' name for the interface, as specified by a network manager.
Support for ifInOctets, ifOutOctets, ifInErrors, ifInUnknownProtos, ifOutErrors, ifHCInOctets, and ifHCOutOctets objects is not required if the encoding type is clear.
For other encoding types, traffic counters on a TE link are cumulative for all subinterfaces that it binds together.
This section describes, by example, how to use the ifStackTable to represent the relationship of TE links with underlying TE enabled interfaces.
Implementors of the stack table for TE link interfaces should look at the appropriate RFC for the service being stacked on TE links.
The examples given below are for illustration purposes only.
MPLS is being carried on a bundled TE link.
The bundled TE link represents a 1:1 optical transport interface.
In this example, the component link is a TE link.
The two component links/TE links are grouped in a bundled link.
The assignment of the index values could, for example, be:
The ifStackTable is then used to show the relationships between the various interfaces.
In the case where MPLS is using a single TE link, then the upper TE link layer (link bundle) is not required.
The assignment of the index values could for example be:
The ifStackTable is then used to show the relationships between the various interfaces.
Applicability of ifRcvAddressTable TE link interfaces are logical interfaces with no media level addresses.
As such, the ifRcvAddressTable is not applicable to these interfaces.
MIB Module Definitions TE LINK
IMPORTS MODULE IDENTITY, OBJECT TYPE, transmission, Integer32, Unsigned32
SMI MODULE COMPLIANCE, OBJECT GROUP FROM SNMPv2
Jonathan P. Lang Email:  jplang@ieee.org
Comments about this document should be emailed directly to the MPLS working group mailing list at mpls@uu.net."
This version of this MIB module is part of RFC 4220; see the RFC itself for full legal notices.
This MIB module contains managed object definitions for MPLS traffic engineering links as defined in 'Link Bundling in MPLS Traffic Engineering (TE)'."
Initial version published as RFC 4220."
"This type is used to represent link bandwidth in bps.
This value is represented using a 4 octet IEEE floating point format [IEEE].
The floating point representation is not used to represent fractional value but rather to allow specification of large numbers that cannot be expressed with 32 bit integers.
REFERENCE "IEEE Standard for Binary Floating Point Arithmetic, Standard 754 1985" SYNTAX
"This type is used to represent a priority.
Each connection is assigned a priority.
This priority is used when accounting for bandwidth on TE links or component links, for resource allocation and for rerouting purposes.
Value 0 is the highest priority.
Value 7 is the lowest priority."
Switching capability as specified in the 'OSPF Extensions in Support of Generalized Multi Protocol Label Switching (GMPLS)' document.
The values specified in this document are not contiguous."
"Link encoding type as specified in 'Generalized Multi Protocol Label Switching (GMPLS)
The values specified in this document are not contiguous."
This convention is used to indicate whether the interface supports Standard or Arbitrary SONET/SDH.
To simplify the mapping process, the values used in this textual convention match the values specified in the interface switching capability specific information field, i.e., 0 for Standard SONET/SDH and 1 for Arbitrary SONET/SDH."
Top level components of this MIB module   Notifications teLinkNotifications
"This table specifies the grouping of component links into TE links and the grouping of TE links into bundled links."
An entry in this table exists for each ifEntry with an ifType of teLink(200), i.e., for every TE link.
An ifEntry in the ifTable must exist before a teLinkEntry is created with the corresponding ifIndex.
If a TE link entry in the ifTable is destroyed, then so is the corresponding entry in the teLinkTable.
The administrative and operational status values are controlled from the ifEntry.
"The type of Internet address for the TE link."
teLinkEntry 1 } teLinkLocalIpAddr OBJECT TYPE SYNTAX
The type of this address is determined by the value of the teLinkAddressType object.
For IPv4 and IPv6 numbered links, this object represents the local IP address associated with the TE link.
For an unnumbered link, the local address is of type unknown, this object is set to the zero length string, and the teLinkOutgoingIfId object then identifies the unnumbered address.
If the TE link is a Forwarding Adjacency (FA), the local IP address is set to the head end address of the FA LSP.
If ipAddrTable is implemented, this object must have the same value as the ipAdEntAddr object that belongs to the row in ipAddrTable where ipAdEntIfIndex is equal to ifIndex."
The remote Internet address for numbered links.
The type of this address is determined by the value of the teLinkAddressType object.
The remote IP address associated with the TE link (IPv4 and IPv6 numbered links).
For an unnumbered link, the remote address is of type unknown, this object is set to the zero length string, and the teLinkIncomingIfId object then identifies the unnumbered address.
If the TE link is a Forwarding Adjacency, the remote IP address is set to the tail end address of the FA LSP."
The traffic engineering metric for the TE link is derived from its component links.
All component links within the TE link must have the same traffic engineering metric."
"This attribute specifies the maximum reservable bandwidth on the TE link.
This is the union of the maximum reservable bandwidth of all the component links within the TE link that can be used to carry live traffic.
"This attribute specifies the link protection type of the TE link.
Descriptions of the different protection types can be found in the 'Routing Extensions in Support of Generalized Multi Protocol Label Switching (GMPLS)' document."
"This object represents a priority value such that a new connection with a higher priority, i.e., numerically lower than this value, is guaranteed to be setup on a primary link and not on a secondary link.
"This attribute specifies the TE link resource class.
The resource class is a 32 bit bitfield.
The resource class for a link bundle is derived from the resource class of its TE links.
All TE links within a link bundle must have the same resource class.
Encoding of the resource class is described in the 'Traffic Engineering (TE) Extensions to OSPF Version 2' document."
REFERENCE "Link Bundling in MPLS Traffic Engineering (TE),
For unnumbered links, the incoming interface is set to the outgoing interface identifier chosen by the neighboring LSR for the reverse link corresponding to this TE link.
If the link is numbered, the value of this object is 0 and the address is stored in the teLinkRemoteIpAddr instead.
"If the link is unnumbered, the outgoing interface identifier is set to the outgoing interface identifier chosen for the TE link by the advertising LSR.
If the link is numbered, the value of this object is 0 and the address is stored in the teLinkLocalIpAddr instead.
"This variable is used to create, modify, and/or delete a row in this table.
None of the writable objects in a row can be changed if status is active(1)."
"The storage type for this conceptual row in the teLinkTable.
Conceptual rows having the value 'permanent' need not allow write access to any columnar object in the row."
"This table specifies the interface switching capability descriptors associated with the TE links."
"An entry in this table is created for every TE link interface switching capability descriptor.
An ifEntry in the ifTable must exist before a teLinkDescriptorEntry using the same ifIndex is created.
ifType of ifEntry must be teLink(200).
If a TE link entry in the ifTable is destroyed, then so are all of the entries in the teLinkDescriptorTable that use the ifIndex of this TE link.
"This object specifies the link descriptor identifier."
"This attribute specifies interface switching capability of the TE link, which is derived from its component links."
"This attribute specifies the TE link encoding type."
REFERENCE "Generalized Multi Protocol Label Switching (GMPLS)
"This attribute specifies the minimum LSP bandwidth on the TE link.
This is derived from the union of the minimum LSP bandwidth of all the component links associated with the TE link that can be used to carry live traffic.
"This attribute specifies the maximum LSP bandwidth at priority 0 on the TE link.
This is the union of the maximum LSP bandwidth at priority 0 of all the component links within the TE link that can be used to carry live traffic.
"This attribute specifies the maximum LSP bandwidth at priority 1 on the TE link.
This is the union of the maximum LSP bandwidth at priority 1 of all the component links within the TE link that can be used to carry live traffic.
"This attribute specifies the maximum LSP bandwidth at priority 2 on the TE link.
This is the union of the maximum LSP bandwidth at priority 2 of all the component links within the TE link that can be used to carry live traffic.
} teLinkDescrMaxLspBandwidthPrio3 OBJECT TYPE SYNTAX
"This attribute specifies the maximum LSP bandwidth at priority 3 on the TE link.
This is the union of the maximum LSP bandwidth at priority 3 of all the component links within the TE link that can be used to carry live traffic.
"This attribute specifies the maximum LSP bandwidth at priority 4 on the TE link.
This is the union of the maximum LSP bandwidth at priority 4 of all the component links within the TE link that can be used to carry live traffic.
"This attribute specifies the maximum LSP bandwidth at priority 5 on the TE link.
This is the union of the maximum LSP bandwidth at priority 5 of all the component links within the TE link that can be used to carry live traffic.
"This attribute specifies the maximum LSP bandwidth at priority 6 on the TE link.
This is the union of the maximum LSP bandwidth at priority 6 of all the component links within the TE link that can be used to carry live traffic.
"This attribute specifies the maximum LSP bandwidth at priority 7 on the TE link.
This is the union of the maximum LSP bandwidth at priority 7 of all the component links within the TE link that can be used to carry live traffic.
"This attribute specifies the interface MTU for the TE link descriptor."
"This attribute specifies whether this interface supports Standard or Arbitrary SONET/SDH."
"This variable is used to create, modify, and/or delete a row in this table.
No read create object can be changed if teLinkDescrRowStatus is in the active(1) state."
"The storage type for this conceptual row in the teLinkDescriptorTable.
Conceptual rows having the value 'permanent' need not allow write access to any columnar object in the row."
Shared Risk Link Group Table
"This table specifies the SRLGs associated with TE links."
"An entry in this table contains information about an SRLG associated with a TE link.
An ifEntry in the ifTable must exist before a teLinkSrlgEntry using the same ifIndex is created.
The ifType of ifEntry must be teLink(200).
If a TE link entry in the ifTable is destroyed, then so are all of the entries in the teLinkSrlgTable that use the ifIndex of this TE link.
MAX ACCESS    not accessible STATUS
"This identifies an SRLG supported by the TE link.
An SRLG is identified with a 32 bit number that is unique within an IGP domain.
Zero is a valid SRLG number.
"This variable is used to create, modify, and/or delete a row in this table.
No read create object can be modified if teLinkSrlgRowStatus is active(1)."
"The storage type for this conceptual row in the teLinkSrlgTable.
Conceptual rows having the value 'permanent' need not allow write access to any columnar object in the row."
TE Link Bandwidth Table teLinkBandwidthTable OBJECT TYPE
"This table specifies the priority based bandwidth table for TE links."
"An entry in this table contains information about the priority based bandwidth of TE links.
An ifEntry in the ifTable must exist before a teLinkBandwidthEntry using the same ifIndex is created.
The ifType of ifEntry must be teLink(200).
If a TE link entry in the ifTable is destroyed, then so are all of the entries in the teLinkBandwidthTable that use the ifIndex of this TE link.
"This attribute specifies the priority.
A value of 0 is valid as specified in the 'Traffic Engineering (TE) Extensions to OSPF Version 2' document."
REFERENCE "OSPF Extensions in Support of Generalized Multi Protocol Label Switching (GMPLS),
"This attribute specifies the TE link unreserved bandwidth at priority p.
It is the sum of the unreserved bandwidths at priority p of all component links associated with the TE link (excluding all links that are strictly used as protecting links).
"This variable is used to create, modify, and/or delete a row in this table.
No read create object can be modified when teLinkBandwidthRowStatus
"The storage type for this conceptual row in the teLinkBandwidthTable.
Conceptual rows having the value 'permanent' need not allow write access to any columnar object in the row."
"This table specifies the component link parameters."
"An entry in this table exists for each ifEntry that represents a component link.
An ifEntry must exist in the ifTable before a componentLinkEntry is created with the corresponding ifIndex.
ifEntry's ifType can be of any interface type that has been defined for TE Link interworking.
Examples include ATM, Frame Relay, Ethernet, etc.
If an entry representing a component link is destroyed in the ifTable, then so is the corresponding entry in the componentLinkTable.
The administrative and operational status values are controlled from the ifEntry.
"This attribute specifies the maximum reservable bandwidth on the component link."
"This attribute specifies whether this component link is a primary or secondary entity."
"This attribute specifies whether this component link is currently used as primary or secondary link."
"This variable is used to create, modify, and/or delete a row in this table.
No read create object can be modified when componentLinkRowStatus is active(1)."
"The storage type for this conceptual row in the componentLinkTable.
Conceptual rows having the value 'permanent' need not allow write access to any columnar object in the row."
"This table specifies the interface switching capability descriptors associated with the component links."
"An entry in this table is created for every component link descriptor.
An ifEntry in the ifTable must exist before a componentLinkDescriptorEntry using the same ifIndex is created.
ifEntry's ifType can be of any interface type that has been defined for TE Link interworking.
Examples include ATM, Frame Relay, Ethernet, etc.
If a component link entry in the ifTable is destroyed, then so are all entries in the componentLinkDescriptorTable that use the ifIndex of this component link.
"This object specifies the link descriptor identifier."
"This attribute specifies link multiplexing capabilities of the component link."
"This attribute specifies the component link encoding type."
REFERENCE "Generalized Multi Protocol Label Switching (GMPLS)
Signaling Functional Description, RFC 3471" ::
"This attribute specifies the minimum LSP bandwidth on the component link."
"This attribute specifies the maximum LSP bandwidth at priority 0 on the component link."
"This attribute specifies the maximum LSP bandwidth at priority 1 on the component link."
"This attribute specifies the maximum LSP bandwidth at priority 2 on the component link."
"This attribute specifies the maximum LSP bandwidth at priority 3 on the component link."
"This attribute specifies the maximum LSP bandwidth at priority 4 on the component link."
REFERENCE "OSPF Extensions in Support of Generalized Multi Protocol Label Switching (GMPLS), RFC 4203" ::
"This attribute specifies the maximum LSP bandwidth at priority 5 on the component link."
"This attribute specifies the maximum LSP bandwidth at priority 6 on the component link."
"This attribute specifies the maximum LSP bandwidth at priority 7 on the component link."
"This attribute specifies the interface MTU for the component link descriptor.
REFERENCE "OSPF Extensions in Support of Generalized Multi Protocol Label Switching (GMPLS), RFC 4203" ::
{ componentLinkDescriptorEntry 13 } componentLinkDescrIndication OBJECT
"This attribute specifies whether this interface supports Standard or Arbitrary SONET/SDH."
"This variable is used to create, modify, and/or delete a row in this table.
No read create object can be modified when componentLinkDescrRowStatus is active(1)."
"The storage type for this conceptual row in the componentLinkDescriptorTable.
Conceptual rows having the value 'permanent' need not allow write access to any columnar object in the row."
"This table specifies the priority based bandwidth for component links."
An entry in this table contains information about the priority based bandwidth on component links.
An ifEntry in the ifTable must exist before a componentLinkBandwidthEntry using the same ifIndex is created.
ifEntry's ifType can be of any interface type that has been defined for TE Link interworking.
Examples include ATM, Frame Relay, Ethernet, etc.
If a component link entry in the ifTable is destroyed, then so are all entries in the componentLinkBandwidthTable that use the ifIndex of this component link.
"This attribute specifies the priority.
A value of 0 is valid as specified in the 'Traffic Engineering (TE) Extensions to OSPF Version 2' document."
REFERENCE "OSPF Extensions in Support of Generalized Multi Protocol Label Switching (GMPLS),
RFC 4203 and Traffic Engineering (TE) Extensions to OSPF Version 2, RFC 3630" ::
"This attribute specifies the component link unreserved bandwidth at
"This variable is used to create, modify, and/or delete a row in this table.
No read create object can be modified when componentLinkBandwidthRowStatus is active(1)."
"The storage type for this conceptual row in the componentLinkBandwidthTable.
Conceptual rows having the value 'permanent' need not allow write access to any columnar object in the row."
MODULE COMPLIANCE STATUS current DESCRIPTION "Compliance statement for agents that support read create so that both configuration and monitoring of TE links can be accomplished via this MIB module.
, componentLinkBandwidthGroup } GROUP teLinkSrlgGroup
"This group is mandatory for GMPLS enabled devices."
This group is mandatory for devices that support the packet switching capability."
This group is mandatory for devices that support the TDM switching capability."
address types need to be supported for numbered links.
For unnumbered links, the unknown(0) address type needs to be supported."
DESCRIPTION "Size of TE link IP address depends on type of TE link.
TE link IP address size is zero if the link is unnumbered, four if the link IP address is IPv4, and sixteen if the link IP address is IPv6."
DESCRIPTION "Size of TE link IP address depends on type of TE link.
TE link IP address size is zero if the link is unnumbered, four if the link IP address is IPv4, and sixteen if the link IP address is IPv6."
WRITE SYNTAX RowStatus { active(1), notInService(2), createAndGo(4), destroy(6
) } DESCRIPTION "Support for notReady(3) and createAndWait(5) is not required."
} WRITE SYNTAX RowStatus { active(1), notInService(2), createAndGo(4), destroy(6
) } DESCRIPTION "Support for notReady(3) and createAndWait(5) is not required."
WRITE SYNTAX RowStatus { active(1), notInService(2), createAndGo(4), destroy(6
) } DESCRIPTION "Support for notReady(3) and createAndWait(5) is not required."
WRITE SYNTAX RowStatus { active(1), notInService(2), createAndGo(4), destroy(6
) } DESCRIPTION "Support for notReady(3) and createAndWait(5) is not required."
RowStatus { active(1), notInService(2) }
WRITE SYNTAX RowStatus { active(1), notInService(2), createAndGo(4), destroy(6
) } DESCRIPTION "Support for notReady(3) and createAndWait(5) is not required."
} WRITE SYNTAX RowStatus { active(1), notInService(2), createAndGo(4), destroy(6
) } DESCRIPTION "Support for notReady(3) and createAndWait(5) is not required."
WRITE SYNTAX RowStatus { active(1), notInService(2), createAndGo(4), destroy(6
) } DESCRIPTION "Support for notReady(3) and createAndWait(5) is not required."
, componentLinkBandwidthGroup } GROUP teLinkSrlgGroup
"This group is mandatory for GMPLS enabled devices."
This group is mandatory for devices that support the packet switching capability."
This group is mandatory for devices that support the TDM switching capability."
Only ipv4(1) and ipv6(2) address types need to be supported for numbered links.
For unnumbered links, the unknown(0) address type needs to be supported."
MIN ACCESS  read only DESCRIPTION "Size of TE link IP address depends on type of TE link.
TE link IP address size is zero if the link is unnumbered, four if the link IP address is IPv4, and sixteen if the link IP address is IPv6."
MIN ACCESS  read only DESCRIPTION "Size of TE link IP address depends on type of TE link.
TE link IP address size is zero if the link is unnumbered, four if the link IP address is IPv4, and sixteen if the link IP address is IPv6."
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
RowStatus { active(1) } MIN ACCESS  read only DESCRIPTION
"Write access is not required and active(1) is the only status that needs to be supported.
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
"Write access is not required.
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
"Write access is not required."
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
RowStatus { active(1) } MIN ACCESS  read only DESCRIPTION
"Write access is not required and active(1) is the only status that needs to be supported."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
MIN ACCESS  read only DESCRIPTION "Write access is not required and active(1) is the only status that needs to be supported."
"Write access is not required."
MIN ACCESS  read only DESCRIPTION "Write access is not required and active(1) is the only status that needs to be supported."
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
MIN ACCESS  read only DESCRIPTION "Write access is not required and active(1) is the only status that needs to be supported."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
"Write access is not required."
"Write access is not required."
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
"Write access is not required."
MIN ACCESS  read only DESCRIPTION "Write access is not required and active(1) is the only status that needs to be supported."
"Write access is not required."
RowStatus { active(1) } MIN ACCESS  read only DESCRIPTION
"Write access is not required and active(1) is the only status that needs to be supported."
"Write access is not required."
current DESCRIPTION "Collection of objects needed for the management of resources associated with TE links."
current DESCRIPTION "Collection of objects needed for the management of SRLG resources associated with TE links."
current DESCRIPTION "Collection of objects needed for the management of the bandwidth parameters associated with component links."
current DESCRIPTION "Collection of objects needed for devices that are packet switch capable."
current DESCRIPTION "Collection of objects needed for devices that are TDM switching capable."
There are a number of management objects defined in this MIB module with a MAX ACCESS clause of read write and/or read create.
Such objects may be considered sensitive or vulnerable in some network environments.
The support for SET operations in a non secure environment without proper protection can have a negative effect on network operations.
These are the tables and objects and their sensitivity/vulnerability:
All the tables in this MIB module have routing information in them, so they all have the same security attributes.
Unauthorized changes to attributes of these tables can disrupt resource allocation in the network.
Some of the readable objects in this MIB module (i.e., objects with a MAX ACCESS other than not accessible) may be considered sensitive or vulnerable in some network environments.
It is thus important to control
even GET and/or NOTIFY access to these objects and possibly to even encrypt the values of these objects when sending them over the network via SNMP.
These are the tables and objects and their sensitivity/vulnerability:
IP address entries in the teLinkTable (teLinkLocalIpAddr and teLinkRemoteIpAddr) may reveal the internals of a network provider IP address space.
SNMP versions prior to SNMPv3 did not include adequate security.
Even if the network itself is secure (for example by using IPSec), even then, there is no control as to who on the secure network is allowed to access and
the objects in this MIB module.
It is RECOMMENDED that implementers consider the security features as provided by the SNMPv3 framework (see [RFC3410], section 8), including full support for the SNMPv3 cryptographic mechanisms (for authentication and privacy).
Further, deployment of SNMP versions prior to SNMPv3 is NOT RECOMMENDED.
Instead, it is RECOMMENDED to deploy SNMPv3 and to enable cryptographic security.
It is then a customer/operator responsibility to ensure that the SNMP entity giving access to an instance of this MIB module is properly configured to give access to the objects only to those principals (users) that have legitimate rights to indeed GET or SET
The following "IANA Considerations" subsection requests IANA for a new assignment.
New assignments can only be made via Standards Action as specified in [RFC2434].
IANA Considerations for the TE LINK
The TE LINK STD MIB should be rooted under the transmission subtree.
The IANA has assigned { transmission 200 } to the TE LINK STD MIB module specified in this document.
