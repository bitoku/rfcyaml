- title: __initial_text__
  contents:
  - '               Calendaring Extensions to WebDAV (CalDAV)

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2007).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines extensions to the Web Distributed Authoring\
    \ and\n   Versioning (WebDAV) protocol to specify a standard way of accessing,\n\
    \   managing, and sharing calendaring and scheduling information based on\n  \
    \ the iCalendar format.  This document defines the \"calendar-access\"\n   feature\
    \ of CalDAV.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  5\n     1.1.  Notational Conventions . . . . . . . . . . . . .\
    \ . . . . .  5\n     1.2.  XML Namespaces and Processing  . . . . . . . . . .\
    \ . . . .  5\n     1.3.  Method Preconditions and Postconditions  . . . . . .\
    \ . . .  6\n   2.  Requirements Overview  . . . . . . . . . . . . . . . . . .\
    \ . .  6\n   3.  Calendaring Data Model . . . . . . . . . . . . . . . . . . .\
    \ .  7\n     3.1.  Calendar Server  . . . . . . . . . . . . . . . . . . . . .\
    \  7\n     3.2.  Recurrence and the Data Model  . . . . . . . . . . . . . .  8\n\
    \   4.  Calendar Resources . . . . . . . . . . . . . . . . . . . . . .  9\n  \
    \   4.1.  Calendar Object Resources  . . . . . . . . . . . . . . . .  9\n    \
    \ 4.2.  Calendar Collection  . . . . . . . . . . . . . . . . . . . 10\n   5. \
    \ Calendar Access Feature  . . . . . . . . . . . . . . . . . . . 11\n     5.1.\
    \  Calendar Access Support  . . . . . . . . . . . . . . . . . 11\n       5.1.1.\
    \  Example: Using OPTIONS for the Discovery of\n               Calendar Access\
    \ Support  . . . . . . . . . . . . . . . 12\n     5.2.  Calendar Collection Properties\
    \ . . . . . . . . . . . . . . 12\n       5.2.1.  CALDAV:calendar-description Property\
    \ . . . . . . . . . 12\n       5.2.2.  CALDAV:calendar-timezone Property  . .\
    \ . . . . . . . . 13\n       5.2.3.  CALDAV:supported-calendar-component-set Property\
    \ . . . 14\n       5.2.4.  CALDAV:supported-calendar-data Property  . . . . .\
    \ . . 15\n       5.2.5.  CALDAV:max-resource-size Property  . . . . . . . . .\
    \ . 16\n       5.2.6.  CALDAV:min-date-time Property  . . . . . . . . . . . .\
    \ 17\n       5.2.7.  CALDAV:max-date-time Property  . . . . . . . . . . . . 18\n\
    \       5.2.8.  CALDAV:max-instances Property  . . . . . . . . . . . . 19\n  \
    \     5.2.9.  CALDAV:max-attendees-per-instance Property . . . . . . 19\n    \
    \   5.2.10. Additional Precondition for PROPPATCH  . . . . . . . . 20\n     5.3.\
    \  Creating Resources . . . . . . . . . . . . . . . . . . . . 20\n       5.3.1.\
    \  MKCALENDAR Method  . . . . . . . . . . . . . . . . . . 20\n         5.3.1.1.\
    \  Status Codes . . . . . . . . . . . . . . . . . . . 22\n         5.3.1.2.  Example:\
    \ Successful MKCALENDAR Request . . . . . . 23\n       5.3.2.  Creating Calendar\
    \ Object Resources . . . . . . . . . . 25\n         5.3.2.1.  Additional Preconditions\
    \ for PUT, COPY, and\n                   MOVE . . . . . . . . . . . . . . . .\
    \ . . . . . . . 26\n       5.3.3.  Non-Standard Components, Properties, and Parameters\
    \  . 28\n       5.3.4.  Calendar Object Resource Entity Tag  . . . . . . . . .\
    \ 28\n   6.  Calendaring Access Control . . . . . . . . . . . . . . . . . . 29\n\
    \     6.1.  Calendaring Privilege  . . . . . . . . . . . . . . . . . . 29\n  \
    \     6.1.1.  CALDAV:read-free-busy Privilege  . . . . . . . . . . . 29\n    \
    \ 6.2.  Additional Principal Property  . . . . . . . . . . . . . . 30\n      \
    \ 6.2.1.  CALDAV:calendar-home-set Property  . . . . . . . . . . 30\n   7.  Calendaring\
    \ Reports  . . . . . . . . . . . . . . . . . . . . . 31\n     7.1.  REPORT Method\
    \  . . . . . . . . . . . . . . . . . . . . . . 31\n     7.2.  Ordinary Collections\
    \ . . . . . . . . . . . . . . . . . . . 31\n     7.3.  Date and Floating Time\
    \ . . . . . . . . . . . . . . . . . . 32\n     7.4.  Time Range Filtering . .\
    \ . . . . . . . . . . . . . . . . . 32\n     7.5.  Searching Text: Collations\
    \ . . . . . . . . . . . . . . . . 33\n       7.5.1.  CALDAV:supported-collation-set\
    \ Property  . . . . . . . 34\n     7.6.  Partial Retrieval  . . . . . . . . .\
    \ . . . . . . . . . . . 34\n     7.7.  Non-Standard Components, Properties, and\
    \ Parameters  . . . 35\n     7.8.  CALDAV:calendar-query REPORT . . . . . . .\
    \ . . . . . . . . 36\n       7.8.1.  Example: Partial Retrieval of Events by Time\
    \ Range . . 38\n       7.8.2.  Example: Partial Retrieval of Recurring Events\
    \ . . . . 42\n       7.8.3.  Example: Expanded Retrieval of Recurring Events \
    \ . . . 45\n       7.8.4.  Example: Partial Retrieval of Stored Free Busy\n  \
    \             Components . . . . . . . . . . . . . . . . . . . . . . 48\n    \
    \   7.8.5.  Example: Retrieval of To-Dos by Alarm Time Range . . . 50\n      \
    \ 7.8.6.  Example: Retrieval of Event by UID . . . . . . . . . . 51\n       7.8.7.\
    \  Example: Retrieval of Events by PARTSTAT . . . . . . . 53\n       7.8.8.  Example:\
    \ Retrieval of Events Only  . . . . . . . . . . 55\n       7.8.9.  Example: Retrieval\
    \ of All Pending To-Dos . . . . . . . 59\n       7.8.10. Example: Attempt to Query\
    \ Unsupported Property . . . . 62\n     7.9.  CALDAV:calendar-multiget REPORT\
    \  . . . . . . . . . . . . . 63\n       7.9.1.  Example: Successful CALDAV:calendar-multiget\
    \ REPORT  . 64\n     7.10. CALDAV:free-busy-query REPORT  . . . . . . . . . .\
    \ . . . . 66\n       7.10.1. Example: Successful CALDAV:free-busy-query REPORT\
    \  . . 68\n   8.  Guidelines . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . 69\n     8.1.  Client-to-Client Interoperability  . . . . . . . . . . . .\
    \ 69\n     8.2.  Synchronization Operations . . . . . . . . . . . . . . . . 69\n\
    \       8.2.1.  Use of Reports . . . . . . . . . . . . . . . . . . . . 69\n  \
    \       8.2.1.1.  Restrict the Time Range  . . . . . . . . . . . . . 69\n    \
    \     8.2.1.2.  Synchronize by Time Range  . . . . . . . . . . . . 70\n      \
    \   8.2.1.3.  Synchronization Process  . . . . . . . . . . . . . 70\n       8.2.2.\
    \  Restrict the Properties Returned . . . . . . . . . . . 72\n     8.3.  Use of\
    \ Locking . . . . . . . . . . . . . . . . . . . . . . 72\n     8.4.  Finding Calendars\
    \  . . . . . . . . . . . . . . . . . . . . 72\n     8.5.  Storing and Using Attachments\
    \  . . . . . . . . . . . . . . 74\n       8.5.1.  Inline Attachments . . . . .\
    \ . . . . . . . . . . . . . 74\n       8.5.2.  External Attachments . . . . .\
    \ . . . . . . . . . . . . 75\n     8.6.  Storing and Using Alarms . . . . . .\
    \ . . . . . . . . . . . 76\n   9.  XML Element Definitions  . . . . . . . . .\
    \ . . . . . . . . . . 77\n     9.1.  CALDAV:calendar XML Element  . . . . . .\
    \ . . . . . . . . . 77\n     9.2.  CALDAV:mkcalendar XML Element  . . . . . .\
    \ . . . . . . . . 77\n     9.3.  CALDAV:mkcalendar-response XML Element . . .\
    \ . . . . . . . 78\n     9.4.  CALDAV:supported-collation XML Element . . . .\
    \ . . . . . . 78\n     9.5.  CALDAV:calendar-query XML Element  . . . . . . .\
    \ . . . . . 78\n     9.6.  CALDAV:calendar-data XML Element . . . . . . . . .\
    \ . . . . 79\n       9.6.1.  CALDAV:comp XML Element  . . . . . . . . . . . .\
    \ . . . 80\n       9.6.2.  CALDAV:allcomp XML Element . . . . . . . . . . . .\
    \ . . 81\n       9.6.3.  CALDAV:allprop XML Element . . . . . . . . . . . . .\
    \ . 81\n       9.6.4.  CALDAV:prop XML Element  . . . . . . . . . . . . . . .\
    \ 82\n       9.6.5.  CALDAV:expand XML Element  . . . . . . . . . . . . . . 82\n\
    \       9.6.6.  CALDAV:limit-recurrence-set XML Element  . . . . . . . 83\n  \
    \     9.6.7.  CALDAV:limit-freebusy-set XML Element  . . . . . . . . 84\n    \
    \ 9.7.  CALDAV:filter XML Element  . . . . . . . . . . . . . . . . 85\n      \
    \ 9.7.1.  CALDAV:comp-filter XML Element . . . . . . . . . . . . 85\n       9.7.2.\
    \  CALDAV:prop-filter XML Element . . . . . . . . . . . . 86\n       9.7.3.  CALDAV:param-filter\
    \ XML Element  . . . . . . . . . . . 87\n       9.7.4.  CALDAV:is-not-defined\
    \ XML Element  . . . . . . . . . . 88\n       9.7.5.  CALDAV:text-match XML Element\
    \  . . . . . . . . . . . . 88\n     9.8.  CALDAV:timezone XML Element  . . . .\
    \ . . . . . . . . . . . 89\n     9.9.  CALDAV:time-range XML Element  . . . .\
    \ . . . . . . . . . . 90\n     9.10. CALDAV:calendar-multiget XML Element . .\
    \ . . . . . . . . . 94\n     9.11. CALDAV:free-busy-query XML Element . . . .\
    \ . . . . . . . . 95\n   10. Internationalization Considerations  . . . . . .\
    \ . . . . . . . 95\n   11. Security Considerations  . . . . . . . . . . . . .\
    \ . . . . . . 95\n   12. IANA Considerations  . . . . . . . . . . . . . . . .\
    \ . . . . . 96\n     12.1. Namespace Registration . . . . . . . . . . . . . .\
    \ . . . . 96\n   13. Acknowledgements . . . . . . . . . . . . . . . . . . . .\
    \ . . . 96\n   14. References . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . 97\n     14.1. Normative References . . . . . . . . . . . . . . . . . .\
    \ . 97\n     14.2. Informative References . . . . . . . . . . . . . . . . . .\
    \ 98\n   Appendix A.  CalDAV Method Privilege Table (Normative) . . . . . . 99\n\
    \   Appendix B.  Calendar Collections Used in the Examples . . . . . . 99\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The concept of using HTTP [RFC2616] and WebDAV [RFC2518]\
    \ as a basis\n   for a calendar access protocol is by no means a new concept:\
    \ it was\n   discussed in the IETF CALSCH working group as early as 1997 or 1998.\n\
    \   Several companies have implemented calendar access protocols using\n   HTTP\
    \ to upload and download iCalendar [RFC2445] objects, and using\n   WebDAV to\
    \ get listings of resources.  However, those implementations\n   do not interoperate\
    \ because there are many small and big decisions to\n   be made in how to model\
    \ calendaring data as WebDAV resources, as well\n   as how to implement required\
    \ features that aren't already part of\n   WebDAV.  This document proposes a way\
    \ to model calendar data in\n   WebDAV, with additional features to make an interoperable\
    \ calendar\n   access protocol.\n"
- title: 1.1.  Notational Conventions
  contents:
  - "1.1.  Notational Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n   The term \"protected\" is used in the Conformance field of\
    \ property\n   definitions as defined in Section 1.4.2 of [RFC3253].\n   When\
    \ XML element types in the namespaces \"DAV:\" and\n   \"urn:ietf:params:xml:ns:caldav\"\
    \ are referenced in this document\n   outside of the context of an XML fragment,\
    \ the string \"DAV:\" and\n   \"CALDAV:\" will be prefixed to the element type\
    \ names, respectively.\n"
- title: 1.2.  XML Namespaces and Processing
  contents:
  - "1.2.  XML Namespaces and Processing\n   Definitions of XML elements in this document\
    \ use XML element type\n   declarations (as found in XML Document Type Declarations),\
    \ described\n   in Section 3.2 of [W3C.REC-xml-20060816].\n   The namespace \"\
    urn:ietf:params:xml:ns:caldav\" is reserved for the XML\n   elements defined in\
    \ this specification, its revisions, and related\n   CalDAV specifications.  XML\
    \ elements defined by individual\n   implementations MUST NOT use the \"urn:ietf:params:xml:ns:caldav\"\
    \n   namespace, and instead should use a namespace that they control.\n   The\
    \ XML declarations used in this document do not include namespace\n   information.\
    \  Thus, implementers must not use these declarations as\n   the only way to create\
    \ valid CalDAV properties or to validate CalDAV\n   XML element types.  Some of\
    \ the declarations refer to XML elements\n   defined by WebDAV [RFC2518], which\
    \ use the \"DAV:\" namespace.\n   Wherever such XML elements appear, they are\
    \ explicitly prefixed with\n   \"DAV:\" to avoid confusion.\n   Also note that\
    \ some CalDAV XML element names are identical to WebDAV\n   XML element names,\
    \ though their namespace differs.  Care must be\n   taken not to confuse the two\
    \ sets of names.\n   Processing of XML by CalDAV clients and servers MUST follow\
    \ the rules\n   described in [RFC2518]; in particular, Section 14, and Appendix\
    \ 3 of\n   that specification.\n"
- title: 1.3.  Method Preconditions and Postconditions
  contents:
  - "1.3.  Method Preconditions and Postconditions\n   A \"precondition\" of a method\
    \ describes the state of the server that\n   must be true for that method to be\
    \ performed.  A \"postcondition\" of a\n   method describes the state of the server\
    \ that must be true after that\n   method has been completed.  If a method precondition\
    \ or postcondition\n   for a request is not satisfied, the response status of\
    \ the request\n   MUST either be 403 (Forbidden), if the request should not be\
    \ repeated\n   because it will always fail, or 409 (Conflict), if it is expected\n\
    \   that the user might be able to resolve the conflict and resubmit the\n   request.\n\
    \   In order to allow better client handling of 403 and 409 responses, a\n   distinct\
    \ XML element type is associated with each method precondition\n   and postcondition\
    \ of a request.  When a particular precondition is\n   not satisfied or a particular\
    \ postcondition cannot be achieved, the\n   appropriate XML element MUST be returned\
    \ as the child of a top-level\n   DAV:error element in the response body, unless\
    \ otherwise negotiated\n   by the request.\n"
- title: 2.  Requirements Overview
  contents:
  - "2.  Requirements Overview\n   This section lists what functionality is required\
    \ of a CalDAV server.\n   To advertise support for CalDAV, a server:\n   o  MUST\
    \ support iCalendar [RFC2445] as a media type for the calendar\n      object resource\
    \ format;\n   o  MUST support WebDAV Class 1 [RFC2518] (note that [rfc2518bis]\n\
    \      describes clarifications to [RFC2518] that aid interoperability);\n   o\
    \  MUST support WebDAV ACL [RFC3744] with the additional privilege\n      defined\
    \ in Section 6.1 of this document;\n   o  MUST support transport over TLS [RFC2246]\
    \ as defined in [RFC2818]\n      (note that [RFC2246] has been obsoleted by [RFC4346]);\n\
    \   o  MUST support ETags [RFC2616] with additional requirements\n      specified\
    \ in Section 5.3.4 of this document;\n   o  MUST support all calendaring reports\
    \ defined in Section 7 of this\n      document; and\n   o  MUST advertise support\
    \ on all calendar collections and calendar\n      object resources for the calendaring\
    \ reports in the DAV:supported-\n      report-set property, as defined in Versioning\
    \ Extensions to WebDAV\n      [RFC3253].\n   In addition, a server:\n   o  SHOULD\
    \ support the MKCALENDAR method defined in Section 5.3.1 of\n      this document.\n"
- title: 3.  Calendaring Data Model
  contents:
  - "3.  Calendaring Data Model\n   One of the features that has made WebDAV a successful\
    \ protocol is its\n   firm data model.  This makes it a useful framework for other\n\
    \   applications such as calendaring.  This specification follows the\n   same\
    \ pattern by developing all features based on a well-described\n   data model.\n\
    \   As a brief overview, a CalDAV calendar is modeled as a WebDAV\n   collection\
    \ with a defined structure; each calendar collection\n   contains a number of\
    \ resources representing calendar objects as its\n   direct child resource.  Each\
    \ resource representing a calendar object\n   (event, to-do, journal entry, or\
    \ other calendar components) is called\n   a \"calendar object resource\".  Each\
    \ calendar object resource and each\n   calendar collection can be individually\
    \ locked and have individual\n   WebDAV properties.  Requirements derived from\
    \ this model are provided\n   in Section 4.1 and Section 4.2.\n"
- title: 3.1.  Calendar Server
  contents:
  - "3.1.  Calendar Server\n   A CalDAV server is a calendaring-aware engine combined\
    \ with a WebDAV\n   repository.  A WebDAV repository is a set of WebDAV collections,\n\
    \   containing other WebDAV resources, within a unified URL namespace.\n   For\
    \ example, the repository \"http://www.example.com/webdav/\" may\n   contain WebDAV\
    \ collections and resources, all of which have URLs\n   beginning with \"http://www.example.com/webdav/\"\
    .  Note that the root\n   URL, \"http://www.example.com/\", may not itself be\
    \ a WebDAV repository\n   (for example, if the WebDAV support is implemented through\
    \ a servlet\n   or other Web server extension).\n   A WebDAV repository MAY include\
    \ calendar data in some parts of its\n   URL namespace, and non-calendaring data\
    \ in other parts.\n   A WebDAV repository can advertise itself as a CalDAV server\
    \ if it\n   supports the functionality defined in this specification at any point\n\
    \   within the root of the repository.  That might mean that calendaring\n   data\
    \ is spread throughout the repository and mixed with non-calendar\n   data in\
    \ nearby collections (e.g., calendar data may be found in\n   /home/lisa/calendars/\
    \ as well as in /home/bernard/calendars/, and\n   non-calendar data in /home/lisa/contacts/).\
    \  Or, it might mean that\n   calendar data can be found only in certain sections\
    \ of the repository\n   (e.g., /calendar/).  Calendaring features are only required\
    \ in the\n   repository sections that are or contain calendar object resources.\n\
    \   Therefore, a repository confining calendar data to the /calendar/\n   collection\
    \ would only need to support the CalDAV required features\n   within that collection.\n\
    \   The CalDAV server or repository is the canonical location for\n   calendar\
    \ data and state information.  Clients may submit requests to\n   change data\
    \ or download data.  Clients may store calendar objects\n   offline and attempt\
    \ to synchronize at a later time.  However, clients\n   MUST be prepared for calendar\
    \ data on the server to change between\n   the time of last synchronization and\
    \ when attempting an update, as\n   calendar collections may be shared and accessible\
    \ via multiple\n   clients.  Entity tags and other features make this possible.\n"
- title: 3.2.  Recurrence and the Data Model
  contents:
  - "3.2.  Recurrence and the Data Model\n   Recurrence is an important part of the\
    \ data model because it governs\n   how many resources are expected to exist.\
    \  This specification models\n   a recurring calendar component and its recurrence\
    \ exceptions as a\n   single resource.  In this model, recurrence rules, recurrence\
    \ dates,\n   exception rules, and exception dates are all part of the data in\
    \ a\n   single calendar object resource.  This model avoids problems of\n   limiting\
    \ how many recurrence instances to store in the repository,\n   how to keep recurrence\
    \ instances in sync with the recurring calendar\n   component, and how to link\
    \ recurrence exceptions with the recurring\n   calendar component.  It also results\
    \ in less data to synchronize\n   between client and server, and makes it easier\
    \ to make changes to all\n   recurrence instances or to a recurrence rule.  It\
    \ makes it easier to\n   create a recurring calendar component and to delete all\
    \ recurrence\n   instances.\n   Clients are not forced to retrieve information\
    \ about all recurrence\n   instances of a recurring component.  The CALDAV:calendar-query\
    \ and\n   CALDAV:calendar-multiget reports defined in this document allow\n  \
    \ clients to retrieve only recurrence instances that overlap a given\n   time\
    \ range.\n"
- title: 4.  Calendar Resources
  contents:
  - '4.  Calendar Resources

    '
- title: 4.1.  Calendar Object Resources
  contents:
  - "4.1.  Calendar Object Resources\n   Calendar object resources contained in calendar\
    \ collections MUST NOT\n   contain more than one type of calendar component (e.g.,\
    \ VEVENT,\n   VTODO, VJOURNAL, VFREEBUSY, etc.) with the exception of VTIMEZONE\n\
    \   components, which MUST be specified for each unique TZID parameter\n   value\
    \ specified in the iCalendar object.  For instance, a calendar\n   object resource\
    \ can contain one VEVENT component and one VTIMEZONE\n   component, but it cannot\
    \ contain one VEVENT component and one VTODO\n   component.  Instead, the VEVENT\
    \ and VTODO components would have to be\n   stored in separate calendar object\
    \ resources in the same collection.\n   Calendar object resources contained in\
    \ calendar collections MUST NOT\n   specify the iCalendar METHOD property.\n \
    \  The UID property value of the calendar components contained in a\n   calendar\
    \ object resource MUST be unique in the scope of the calendar\n   collection in\
    \ which they are stored.\n   Calendar components in a calendar collection that\
    \ have different UID\n   property values MUST be stored in separate calendar object\
    \ resources.\n   Calendar components with the same UID property value, in a given\n\
    \   calendar collection, MUST be contained in the same calendar object\n   resource.\
    \  This ensures that all components in a recurrence \"set\" are\n   contained\
    \ in the same calendar object resource.  It is possible for a\n   calendar object\
    \ resource to just contain components that represent\n   \"overridden\" instances\
    \ (ones that modify the behavior of a regular\n   instance, and thus include a\
    \ RECURRENCE-ID property) without also\n   including the \"master\" recurring\
    \ component (the one that defines the\n   recurrence \"set\" and does not contain\
    \ any RECURRENCE-ID property).\n   For example, given the following iCalendar\
    \ object:\n   BEGIN:VCALENDAR\n   PRODID:-//Example Corp.//CalDAV Client//EN\n\
    \   VERSION:2.0\n   BEGIN:VEVENT\n   UID:1@example.com\n   SUMMARY:One-off Meeting\n\
    \   DTSTAMP:20041210T183904Z\n   DTSTART:20041207T120000Z\n   DTEND:20041207T130000Z\n\
    \   END:VEVENT\n   BEGIN:VEVENT\n   UID:2@example.com\n   SUMMARY:Weekly Meeting\n\
    \   DTSTAMP:20041210T183838Z\n   DTSTART:20041206T120000Z\n   DTEND:20041206T130000Z\n\
    \   RRULE:FREQ=WEEKLY\n   END:VEVENT\n   BEGIN:VEVENT\n   UID:2@example.com\n\
    \   SUMMARY:Weekly Meeting\n   RECURRENCE-ID:20041213T120000Z\n   DTSTAMP:20041210T183838Z\n\
    \   DTSTART:20041213T130000Z\n   DTEND:20041213T140000Z\n   END:VEVENT\n   END:VCALENDAR\n\
    \   The VEVENT component with the UID value \"1@example.com\" would be\n   stored\
    \ in its own calendar object resource.  The two VEVENT\n   components with the\
    \ UID value \"2@example.com\", which represent a\n   recurring event where one\
    \ recurrence instance has been overridden,\n   would be stored in the same calendar\
    \ object resource.\n"
- title: 4.2.  Calendar Collection
  contents:
  - "4.2.  Calendar Collection\n   A calendar collection contains calendar object\
    \ resources that\n   represent calendar components within a calendar.  A calendar\n\
    \   collection is manifested to clients as a WebDAV resource collection\n   identified\
    \ by a URL.  A calendar collection MUST report the DAV:\n   collection and CALDAV:calendar\
    \ XML elements in the value of the DAV:\n   resourcetype property.  The element\
    \ type declaration for CALDAV:\n   calendar is:\n       <!ELEMENT calendar EMPTY>\n\
    \   A calendar collection can be created through provisioning (i.e.,\n   automatically\
    \ created when a user's account is provisioned), or it\n   can be created with\
    \ the MKCALENDAR method (see Section 5.3.1).  This\n   method can be useful for\
    \ a user to create additional calendars (e.g.,\n   soccer schedule) or for users\
    \ to share a calendar (e.g., team events\n   or conference rooms).  However, note\
    \ that this document doesn't\n   define the purpose of extra calendar collections.\
    \  Users must rely on\n   non-standard cues to find out what a calendar collection\
    \ is for, or\n   use the CALDAV:calendar-description property defined in Section\
    \ 5.2.1\n   to provide such a cue.\n   The following restrictions are applied\
    \ to the resources within a\n   calendar collection:\n   a.  Calendar collections\
    \ MUST only contain calendar object resources\n       and collections that are\
    \ not calendar collections, i.e., the only\n       \"top-level\" non-collection\
    \ resources allowed in a calendar\n       collection are calendar object resources.\
    \  This ensures that\n       calendar clients do not have to deal with non-calendar\
    \ data in a\n       calendar collection, though they do have to distinguish between\n\
    \       calendar object resources and collections when using standard\n      \
    \ WebDAV techniques to examine the contents of a collection.\n   b.  Collections\
    \ contained in calendar collections MUST NOT contain\n       calendar collections\
    \ at any depth, i.e., \"nesting\" of calendar\n       collections within other\
    \ calendar collections at any depth is not\n       allowed.  This specification\
    \ does not define how collections\n       contained in a calendar collection are\
    \ used or how they relate to\n       any calendar object resources contained in\
    \ the calendar\n       collection.\n   Multiple calendar collections MAY be children\
    \ of the same collection.\n"
- title: 5.  Calendar Access Feature
  contents:
  - '5.  Calendar Access Feature

    '
- title: 5.1.  Calendar Access Support
  contents:
  - "5.1.  Calendar Access Support\n   A server supporting the features described\
    \ in this document MUST\n   include \"calendar-access\" as a field in the DAV\
    \ response header from\n   an OPTIONS request on any resource that supports any\
    \ calendar\n   properties, reports, method, or privilege.  A value of \"calendar-\n\
    \   access\" in the DAV response header MUST indicate that the server\n   supports\
    \ all MUST level requirements specified in this document.\n"
- title: '5.1.1.  Example: Using OPTIONS for the Discovery of Calendar Access'
  contents:
  - "5.1.1.  Example: Using OPTIONS for the Discovery of Calendar Access\n       \
    \ Support\n   >> Request <<\n   OPTIONS /home/bernard/calendars/ HTTP/1.1\n  \
    \ Host: cal.example.com\n   >> Response <<\n   HTTP/1.1 200 OK\n   Allow: OPTIONS,\
    \ GET, HEAD, POST, PUT, DELETE, TRACE, COPY, MOVE\n   Allow: PROPFIND, PROPPATCH,\
    \ LOCK, UNLOCK, REPORT, ACL\n   DAV: 1, 2, access-control, calendar-access\n \
    \  Date: Sat, 11 Nov 2006 09:32:12 GMT\n   Content-Length: 0\n   In this example,\
    \ the OPTIONS method returns the value \"calendar-\n   access\" in the DAV response\
    \ header to indicate that the collection\n   \"/home/bernard/calendars/\" supports\
    \ the properties, reports, method,\n   or privilege defined in this specification.\n"
- title: 5.2.  Calendar Collection Properties
  contents:
  - "5.2.  Calendar Collection Properties\n   This section defines properties for\
    \ calendar collections.\n"
- title: 5.2.1.  CALDAV:calendar-description Property
  contents:
  - "5.2.1.  CALDAV:calendar-description Property\n   Name:  calendar-description\n\
    \   Namespace:  urn:ietf:params:xml:ns:caldav\n   Purpose:  Provides a human-readable\
    \ description of the calendar\n      collection.\n   Conformance:  This property\
    \ MAY be defined on any calendar\n      collection.  If defined, it MAY be protected\
    \ and SHOULD NOT be\n      returned by a PROPFIND DAV:allprop request (as defined\
    \ in Section\n      12.14.1 of [RFC2518]).  An xml:lang attribute indicating the\
    \ human\n      language of the description SHOULD be set for this property by\n\
    \      clients or through server provisioning.  Servers MUST return any\n    \
    \  xml:lang attribute if set for the property.\n   Description:  If present, the\
    \ property contains a description of the\n      calendar collection that is suitable\
    \ for presentation to a user.\n      If not present, the client should assume\
    \ no description for the\n      calendar collection.\n   Definition:\n       \
    \  <!ELEMENT calendar-description (#PCDATA)>\n         PCDATA value: string\n\
    \   Example:\n         <C:calendar-description xml:lang=\"fr-CA\"\n          \
    \  xmlns:C=\"urn:ietf:params:xml:ns:caldav\"\n         >Calendrier de Mathilde\
    \ Desruisseaux</C:calendar-description>\n"
- title: 5.2.2.  CALDAV:calendar-timezone Property
  contents:
  - "5.2.2.  CALDAV:calendar-timezone Property\n   Name:  calendar-timezone\n   Namespace:\
    \  urn:ietf:params:xml:ns:caldav\n   Purpose:  Specifies a time zone on a calendar\
    \ collection.\n   Conformance:  This property SHOULD be defined on all calendar\n\
    \      collections.  If defined, it SHOULD NOT be returned by a PROPFIND\n   \
    \   DAV:allprop request (as defined in Section 12.14.1 of [RFC2518]).\n   Description:\
    \  The CALDAV:calendar-timezone property is used to\n      specify the time zone\
    \ the server should rely on to resolve \"date\"\n      values and \"date with\
    \ local time\" values (i.e., floating time) to\n      \"date with UTC time\" values.\
    \  The server will require this\n      information to determine if a calendar\
    \ component scheduled with\n      \"date\" values or \"date with local time\"\
    \ values overlaps a CALDAV:\n      time-range specified in a CALDAV:calendar-query\
    \ REPORT.  The\n      server will also require this information to compute the\
    \ proper\n      FREEBUSY time period as \"date with UTC time\" in the VFREEBUSY\n\
    \      component returned in a response to a CALDAV:free-busy-query\n      REPORT\
    \ request that takes into account calendar components\n      scheduled with \"\
    date\" values or \"date with local time\" values.  In\n      the absence of this\
    \ property, the server MAY rely on the time zone\n      of their choice.\n   Note:\
    \  The iCalendar data embedded within the CALDAV:calendar-\n      timezone XML\
    \ element MUST follow the standard XML character data\n      encoding rules, including\
    \ use of &lt;, &gt;, &amp; etc. entity\n      encoding or the use of a <![CDATA[\
    \ ... ]]> construct.  In the\n      later case, the iCalendar data cannot contain\
    \ the character\n      sequence \"]]>\", which is the end delimiter for the CDATA\
    \ section.\n   Definition:\n         <!ELEMENT calendar-timezone (#PCDATA)>\n\
    \         PCDATA value: an iCalendar object with exactly one VTIMEZONE\n     \
    \          component.\n   Example:\n   <C:calendar-timezone\n       xmlns:C=\"\
    urn:ietf:params:xml:ns:caldav\">BEGIN:VCALENDAR\n   PRODID:-//Example Corp.//CalDAV\
    \ Client//EN\n   VERSION:2.0\n   BEGIN:VTIMEZONE\n   TZID:US-Eastern\n   LAST-MODIFIED:19870101T000000Z\n\
    \   BEGIN:STANDARD\n   DTSTART:19671029T020000\n   RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=10\n\
    \   TZOFFSETFROM:-0400\n   TZOFFSETTO:-0500\n   TZNAME:Eastern Standard Time (US\
    \ &amp; Canada)\n   END:STANDARD\n   BEGIN:DAYLIGHT\n   DTSTART:19870405T020000\n\
    \   RRULE:FREQ=YEARLY;BYDAY=1SU;BYMONTH=4\n   TZOFFSETFROM:-0500\n   TZOFFSETTO:-0400\n\
    \   TZNAME:Eastern Daylight Time (US &amp; Canada)\n   END:DAYLIGHT\n   END:VTIMEZONE\n\
    \   END:VCALENDAR\n   </C:calendar-timezone>\n"
- title: 5.2.3.  CALDAV:supported-calendar-component-set Property
  contents:
  - "5.2.3.  CALDAV:supported-calendar-component-set Property\n   Name:  supported-calendar-component-set\n\
    \   Namespace:  urn:ietf:params:xml:ns:caldav\n   Purpose:  Specifies the calendar\
    \ component types (e.g., VEVENT,\n      VTODO, etc.) that calendar object resources\
    \ can contain in the\n      calendar collection.\n   Conformance:  This property\
    \ MAY be defined on any calendar\n      collection.  If defined, it MUST be protected\
    \ and SHOULD NOT be\n      returned by a PROPFIND DAV:allprop request (as defined\
    \ in Section\n      12.14.1 of [RFC2518]).\n   Description:  The CALDAV:supported-calendar-component-set\
    \ property is\n      used to specify restrictions on the calendar component types\
    \ that\n      calendar object resources may contain in a calendar collection.\n\
    \      Any attempt by the client to store calendar object resources with\n   \
    \   component types not listed in this property, if it exists, MUST\n      result\
    \ in an error, with the CALDAV:supported-calendar-component\n      precondition\
    \ (Section 5.3.2.1) being violated.  Since this\n      property is protected,\
    \ it cannot be changed by clients using a\n      PROPPATCH request.  However,\
    \ clients can initialize the value of\n      this property when creating a new\
    \ calendar collection with\n      MKCALENDAR.  The empty-element tag <C:comp name=\"\
    VTIMEZONE\"/> MUST\n      only be specified if support for calendar object resources\
    \ that\n      only contain VTIMEZONE components is provided or desired.  Support\n\
    \      for VTIMEZONE components in calendar object resources that contain\n  \
    \    VEVENT or VTODO components is always assumed.  In the absence of\n      this\
    \ property, the server MUST accept all component types, and the\n      client\
    \ can assume that all component types are accepted.\n   Definition:\n        \
    \ <!ELEMENT supported-calendar-component-set (comp+)>\n   Example:\n         <C:supported-calendar-component-set\n\
    \             xmlns:C=\"urn:ietf:params:xml:ns:caldav\">\n           <C:comp name=\"\
    VEVENT\"/>\n           <C:comp name=\"VTODO\"/>\n         </C:supported-calendar-component-set>\n"
- title: 5.2.4.  CALDAV:supported-calendar-data Property
  contents:
  - "5.2.4.  CALDAV:supported-calendar-data Property\n   Name:  supported-calendar-data\n\
    \   Namespace:  urn:ietf:params:xml:ns:caldav\n   Purpose:  Specifies what media\
    \ types are allowed for calendar object\n      resources in a calendar collection.\n\
    \   Conformance:  This property MAY be defined on any calendar\n      collection.\
    \  If defined, it MUST be protected and SHOULD NOT be\n      returned by a PROPFIND\
    \ DAV:allprop request (as defined in Section\n      12.14.1 of [RFC2518]).\n \
    \  Description:  The CALDAV:supported-calendar-data property is used to\n    \
    \  specify the media type supported for the calendar object resources\n      contained\
    \ in a given calendar collection (e.g., iCalendar version\n      2.0).  Any attempt\
    \ by the client to store calendar object\n      resources with a media type not\
    \ listed in this property MUST\n      result in an error, with the CALDAV:supported-calendar-data\n\
    \      precondition (Section 5.3.2.1) being violated.  In the absence of\n   \
    \   this property, the server MUST only accept data with the media\n      type\
    \ \"text/calendar\" and iCalendar version 2.0, and clients can\n      assume that\
    \ the server will only accept this data.\n   Definition:\n         <!ELEMENT supported-calendar-data\
    \ (calendar-data+)>\n   Example:\n         <C:supported-calendar-data\n      \
    \      xmlns:C=\"urn:ietf:params:xml:ns:caldav\">\n           <C:calendar-data\
    \ content-type=\"text/calendar\" version=\"2.0\"/>\n         </C:supported-calendar-data>\n"
- title: 5.2.5.  CALDAV:max-resource-size Property
  contents:
  - "5.2.5.  CALDAV:max-resource-size Property\n   Name:  max-resource-size\n   Namespace:\
    \  urn:ietf:params:xml:ns:caldav\n   Purpose:  Provides a numeric value indicating\
    \ the maximum size of a\n      resource in octets that the server is willing to\
    \ accept when a\n      calendar object resource is stored in a calendar collection.\n\
    \   Conformance:  This property MAY be defined on any calendar\n      collection.\
    \  If defined, it MUST be protected and SHOULD NOT be\n      returned by a PROPFIND\
    \ DAV:allprop request (as defined in Section\n      12.14.1 of [RFC2518]).\n \
    \  Description:  The CALDAV:max-resource-size is used to specify a\n      numeric\
    \ value that represents the maximum size in octets that the\n      server is willing\
    \ to accept when a calendar object resource is\n      stored in a calendar collection.\
    \  Any attempt to store a calendar\n      object resource exceeding this size\
    \ MUST result in an error, with\n      the CALDAV:max-resource-size precondition\
    \ (Section 5.3.2.1) being\n      violated.  In the absence of this property, the\
    \ client can assume\n      that the server will allow storing a resource of any\
    \ reasonable\n      size.\n   Definition:\n         <!ELEMENT max-resource-size\
    \ (#PCDATA)>\n         PCDATA value: a numeric value (positive integer)\n   Example:\n\
    \         <C:max-resource-size xmlns:C=\"urn:ietf:params:xml:ns:caldav\"\n   \
    \      >102400</C:max-resource-size>\n"
- title: 5.2.6.  CALDAV:min-date-time Property
  contents:
  - "5.2.6.  CALDAV:min-date-time Property\n   Name:  min-date-time\n   Namespace:\
    \  urn:ietf:params:xml:ns:caldav\n   Purpose:  Provides a DATE-TIME value indicating\
    \ the earliest date and\n      time (in UTC) that the server is willing to accept\
    \ for any DATE or\n      DATE-TIME value in a calendar object resource stored\
    \ in a calendar\n      collection.\n   Conformance:  This property MAY be defined\
    \ on any calendar\n      collection.  If defined, it MUST be protected and SHOULD\
    \ NOT be\n      returned by a PROPFIND DAV:allprop request (as defined in Section\n\
    \      12.14.1 of [RFC2518]).\n   Description:  The CALDAV:min-date-time is used\
    \ to specify an\n      iCalendar DATE-TIME value in UTC that indicates the earliest\n\
    \      inclusive date that the server is willing to accept for any\n      explicit\
    \ DATE or DATE-TIME value in a calendar object resource\n      stored in a calendar\
    \ collection.  Any attempt to store a calendar\n      object resource using a\
    \ DATE or DATE-TIME value earlier than this\n      value MUST result in an error,\
    \ with the CALDAV:min-date-time\n      precondition (Section 5.3.2.1) being violated.\
    \  Note that servers\n      MUST accept recurring components that specify instances\
    \ beyond\n      this limit, provided none of those instances have been overridden.\n\
    \      In that case, the server MAY simply ignore those instances outside\n  \
    \    of the acceptable range when processing reports on the calendar\n      object\
    \ resource.  In the absence of this property, the client can\n      assume any\
    \ valid iCalendar date may be used at least up to the\n      CALDAV:max-date-time\
    \ value, if that is defined.\n   Definition:\n         <!ELEMENT min-date-time\
    \ (#PCDATA)>\n         PCDATA value: an iCalendar format DATE-TIME value in UTC\n\
    \   Example:\n         <C:min-date-time xmlns:C=\"urn:ietf:params:xml:ns:caldav\"\
    \n         >19000101T000000Z</C:min-date-time>\n"
- title: 5.2.7.  CALDAV:max-date-time Property
  contents:
  - "5.2.7.  CALDAV:max-date-time Property\n   Name:  max-date-time\n   Namespace:\
    \  urn:ietf:params:xml:ns:caldav\n   Purpose:  Provides a DATE-TIME value indicating\
    \ the latest date and\n      time (in UTC) that the server is willing to accept\
    \ for any DATE or\n      DATE-TIME value in a calendar object resource stored\
    \ in a calendar\n      collection.\n   Conformance:  This property MAY be defined\
    \ on any calendar\n      collection.  If defined, it MUST be protected and SHOULD\
    \ NOT be\n      returned by a PROPFIND DAV:allprop request (as defined in Section\n\
    \      12.14.1 of [RFC2518]).\n   Description:  The CALDAV:max-date-time is used\
    \ to specify an\n      iCalendar DATE-TIME value in UTC that indicates the inclusive\n\
    \      latest date that the server is willing to accept for any date or\n    \
    \  time value in a calendar object resource stored in a calendar\n      collection.\
    \  Any attempt to store a calendar object resource using\n      a DATE or DATE-TIME\
    \ value later than this value MUST result in an\n      error, with the CALDAV:max-date-time\
    \ precondition\n      (Section 5.3.2.1) being violated.  Note that servers MUST\
    \ accept\n      recurring components that specify instances beyond this limit,\n\
    \      provided none of those instances have been overridden.  In that\n     \
    \ case, the server MAY simply ignore those instances outside of the\n      acceptable\
    \ range when processing reports on the calendar object\n      resource.  In the\
    \ absence of this property, the client can assume\n      any valid iCalendar date\
    \ may be used at least down to the CALDAV:\n      min-date-time value, if that\
    \ is defined.\n   Definition:\n         <!ELEMENT max-date-time (#PCDATA)>\n \
    \        PCDATA value: an iCalendar format DATE-TIME value in UTC\n   Example:\n\
    \         <C:max-date-time xmlns:C=\"urn:ietf:params:xml:ns:caldav\"\n       \
    \  >20491231T235959Z</C:max-date-time>\n"
- title: 5.2.8.  CALDAV:max-instances Property
  contents:
  - "5.2.8.  CALDAV:max-instances Property\n   Name:  max-instances\n   Namespace:\
    \  urn:ietf:params:xml:ns:caldav\n   Purpose:  Provides a numeric value indicating\
    \ the maximum number of\n      recurrence instances that a calendar object resource\
    \ stored in a\n      calendar collection can generate.\n   Conformance:  This\
    \ property MAY be defined on any calendar\n      collection.  If defined, it MUST\
    \ be protected and SHOULD NOT be\n      returned by a PROPFIND DAV:allprop request\
    \ (as defined in Section\n      12.14.1 of [RFC2518]).\n   Description:  The CALDAV:max-instances\
    \ is used to specify a numeric\n      value that indicates the maximum number\
    \ of recurrence instances\n      that a calendar object resource stored in a calendar\
    \ collection\n      can generate.  Any attempt to store a calendar object resource\n\
    \      with a recurrence pattern that generates more instances than this\n   \
    \   value MUST result in an error, with the CALDAV:max-instances\n      precondition\
    \ (Section 5.3.2.1) being violated.  In the absence of\n      this property, the\
    \ client can assume that the server has no limits\n      on the number of recurrence\
    \ instances it can handle or expand.\n   Definition:\n         <!ELEMENT max-instances\
    \ (#PCDATA)>\n         PCDATA value: a numeric value (integer greater than zero)\n\
    \   Example:\n         <C:max-instances xmlns:C=\"urn:ietf:params:xml:ns:caldav\"\
    \n         >100</C:max-instances>\n"
- title: 5.2.9.  CALDAV:max-attendees-per-instance Property
  contents:
  - "5.2.9.  CALDAV:max-attendees-per-instance Property\n   Name:  max-attendees-per-instance\n\
    \   Namespace:  urn:ietf:params:xml:ns:caldav\n   Purpose:  Provides a numeric\
    \ value indicating the maximum number of\n      ATTENDEE properties in any instance\
    \ of a calendar object resource\n      stored in a calendar collection.\n   Conformance:\
    \  This property MAY be defined on any calendar\n      collection.  If defined,\
    \ it MUST be protected and SHOULD NOT be\n      returned by a PROPFIND DAV:allprop\
    \ request (as defined in Section\n      12.14.1 of [RFC2518]).\n   Description:\
    \  The CALDAV:max-attendees-per-instance is used to\n      specify a numeric value\
    \ that indicates the maximum number of\n      iCalendar ATTENDEE properties on\
    \ any one instance of a calendar\n      object resource stored in a calendar collection.\
    \  Any attempt to\n      store a calendar object resource with more ATTENDEE properties\
    \ per\n      instance than this value MUST result in an error, with the CALDAV:\n\
    \      max-attendees-per-instance precondition (Section 5.3.2.1) being\n     \
    \ violated.  In the absence of this property, the client can assume\n      that\
    \ the server can handle any number of ATTENDEE properties in a\n      calendar\
    \ component.\n   Definition:\n         <!ELEMENT max-attendees-per-instance (#PCDATA)>\n\
    \         PCDATA value: a numeric value (integer greater than zero)\n   Example:\n\
    \         <C:max-attendees-per-instance\n              xmlns:C=\"urn:ietf:params:xml:ns:caldav\"\
    \n         >25</C:max-attendees-per-instance>\n"
- title: 5.2.10.  Additional Precondition for PROPPATCH
  contents:
  - "5.2.10.  Additional Precondition for PROPPATCH\n   This specification requires\
    \ an additional Precondition for the\n   PROPPATCH method.  The precondition is:\n\
    \      (CALDAV:valid-calendar-data): The time zone specified in CALDAV:\n    \
    \  calendar-timezone property MUST be a valid iCalendar object\n      containing\
    \ a single valid VTIMEZONE component.\n"
- title: 5.3.  Creating Resources
  contents:
  - "5.3.  Creating Resources\n   Calendar collections and calendar object resources\
    \ may be created by\n   either a CalDAV client or by the CalDAV server.  This\
    \ specification\n   defines restrictions and a data model that both clients and\
    \ servers\n   MUST adhere to when manipulating such calendar data.\n"
- title: 5.3.1.  MKCALENDAR Method
  contents:
  - "5.3.1.  MKCALENDAR Method\n   An HTTP request using the MKCALENDAR method creates\
    \ a new calendar\n   collection resource.  A server MAY restrict calendar collection\n\
    \   creation to particular collections.\n   Support for MKCALENDAR on the server\
    \ is only RECOMMENDED and not\n   REQUIRED because some calendar stores only support\
    \ one calendar per\n   user (or principal), and those are typically pre-created\
    \ for each\n   account.  However, servers and clients are strongly encouraged\
    \ to\n   support MKCALENDAR whenever possible to allow users to create\n   multiple\
    \ calendar collections to help organize their data better.\n   Clients SHOULD\
    \ use the DAV:displayname property for a human-readable\n   name of the calendar.\
    \  Clients can either specify the value of the\n   DAV:displayname property in\
    \ the request body of the MKCALENDAR\n   request, or alternatively issue a PROPPATCH\
    \ request to change the\n   DAV:displayname property to the appropriate value\
    \ immediately after\n   issuing the MKCALENDAR request.  Clients SHOULD NOT set\
    \ the DAV:\n   displayname property to be the same as any other calendar collection\n\
    \   at the same URI \"level\".  When displaying calendar collections to\n   users,\
    \ clients SHOULD check the DAV:displayname property and use that\n   value as\
    \ the name of the calendar.  In the event that the DAV:\n   displayname property\
    \ is empty, the client MAY use the last part of\n   the calendar collection URI\
    \ as the name; however, that path segment\n   may be \"opaque\" and not represent\
    \ any meaningful human-readable text.\n   If a MKCALENDAR request fails, the server\
    \ state preceding the request\n   MUST be restored.\n   Marshalling:\n      If\
    \ a request body is included, it MUST be a CALDAV:mkcalendar XML\n      element.\
    \  Instruction processing MUST occur in the order\n      instructions are received\
    \ (i.e., from top to bottom).\n      Instructions MUST either all be executed\
    \ or none executed.  Thus,\n      if any error occurs during processing, all executed\
    \ instructions\n      MUST be undone and a proper error result returned.  Instruction\n\
    \      processing details can be found in the definition of the DAV:set\n    \
    \  instruction in Section 12.13.2 of [RFC2518].\n         <!ELEMENT mkcalendar\
    \ (DAV:set)>\n      If a response body for a successful request is included, it\
    \ MUST\n      be a CALDAV:mkcalendar-response XML element.\n         <!ELEMENT\
    \ mkcalendar-response ANY>\n      The response MUST include a Cache-Control:no-cache\
    \ header.\n   Preconditions:\n      (DAV:resource-must-be-null): A resource MUST\
    \ NOT exist at the\n      Request-URI;\n      (CALDAV:calendar-collection-location-ok):\
    \ The Request-URI MUST\n      identify a location where a calendar collection\
    \ can be created;\n      (CALDAV:valid-calendar-data): The time zone specified\
    \ in the\n      CALDAV:calendar-timezone property MUST be a valid iCalendar object\n\
    \      containing a single valid VTIMEZONE component;\n      (DAV:needs-privilege):\
    \ The DAV:bind privilege MUST be granted to\n      the current user on the parent\
    \ collection of the Request-URI.\n   Postconditions:\n      (CALDAV:initialize-calendar-collection):\
    \ A new calendar collection\n      exists at the Request-URI.  The DAV:resourcetype\
    \ of the calendar\n      collection MUST contain both DAV:collection and CALDAV:calendar\n\
    \      XML elements.\n"
- title: 5.3.1.1.  Status Codes
  contents:
  - "5.3.1.1.  Status Codes\n   The following are examples of response codes one would\
    \ expect to get\n   in a response to a MKCALENDAR request.  Note that this list\
    \ is by no\n   means exhaustive.\n      201 (Created) - The calendar collection\
    \ resource was created in\n      its entirety;\n      207 (Multi-Status) - The\
    \ calendar collection resource was not\n      created since one or more DAV:set\
    \ instructions specified in the\n      request body could not be processed successfully.\
    \  The following\n      are examples of response codes one would expect to be\
    \ used in a\n      207 (Multi-Status) response in this situation:\n         403\
    \ (Forbidden) - The client, for reasons the server chooses\n         not to specify,\
    \ cannot alter one of the properties;\n         409 (Conflict) - The client has\
    \ provided a value whose\n         semantics are not appropriate for the property.\
    \  This includes\n         trying to set read-only properties;\n         424 (Failed\
    \ Dependency) - The DAV:set instruction on the\n         specified resource would\
    \ have succeeded if it were not for the\n         failure of another DAV:set instruction\
    \ specified in the request\n         body;\n         423 (Locked) - The specified\
    \ resource is locked and the client\n         either is not a lock owner or the\
    \ lock type requires a lock\n         token to be submitted and the client did\
    \ not submit it; and\n         507 (Insufficient Storage) - The server did not\
    \ have sufficient\n         space to record the property;\n      403 (Forbidden)\
    \ - This indicates at least one of two conditions:\n      1) the server does not\
    \ allow the creation of calendar collections\n      at the given location in its\
    \ namespace, or 2) the parent\n      collection of the Request-URI exists but\
    \ cannot accept members;\n      409 (Conflict) - A collection cannot be made at\
    \ the Request-URI\n      until one or more intermediate collections have been\
    \ created;\n      415 (Unsupported Media Type) - The server does not support the\n\
    \      request type of the body; and\n      507 (Insufficient Storage) - The resource\
    \ does not have sufficient\n      space to record the state of the resource after\
    \ the execution of\n      this method.\n"
- title: '5.3.1.2.  Example: Successful MKCALENDAR Request'
  contents:
  - "5.3.1.2.  Example: Successful MKCALENDAR Request\n   This example creates a calendar\
    \ collection called /home/lisa/\n   calendars/events/ on the server cal.example.com\
    \ with specific values\n   for the properties DAV:displayname, CALDAV:calendar-description,\n\
    \   CALDAV:supported-calendar-component-set, and CALDAV:calendar-\n   timezone.\n\
    \   >> Request <<\n   MKCALENDAR /home/lisa/calendars/events/ HTTP/1.1\n   Host:\
    \ cal.example.com\n   Content-Type: application/xml; charset=\"utf-8\"\n   Content-Length:\
    \ xxxx\n   <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n   <C:mkcalendar xmlns:D=\"\
    DAV:\"\n                 xmlns:C=\"urn:ietf:params:xml:ns:caldav\">\n     <D:set>\n\
    \       <D:prop>\n         <D:displayname>Lisa's Events</D:displayname>\n    \
    \     <C:calendar-description xml:lang=\"en\"\n   >Calendar restricted to events.</C:calendar-description>\n\
    \         <C:supported-calendar-component-set>\n           <C:comp name=\"VEVENT\"\
    />\n         </C:supported-calendar-component-set>\n         <C:calendar-timezone><![CDATA[BEGIN:VCALENDAR\n\
    \   PRODID:-//Example Corp.//CalDAV Client//EN\n   VERSION:2.0\n   BEGIN:VTIMEZONE\n\
    \   TZID:US-Eastern\n   LAST-MODIFIED:19870101T000000Z\n   BEGIN:STANDARD\n  \
    \ DTSTART:19671029T020000\n   RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=10\n   TZOFFSETFROM:-0400\n\
    \   TZOFFSETTO:-0500\n   TZNAME:Eastern Standard Time (US & Canada)\n   END:STANDARD\n\
    \   BEGIN:DAYLIGHT\n   DTSTART:19870405T020000\n   RRULE:FREQ=YEARLY;BYDAY=1SU;BYMONTH=4\n\
    \   TZOFFSETFROM:-0500\n   TZOFFSETTO:-0400\n   TZNAME:Eastern Daylight Time (US\
    \ & Canada)\n   END:DAYLIGHT\n   END:VTIMEZONE\n   END:VCALENDAR\n   ]]></C:calendar-timezone>\n\
    \       </D:prop>\n     </D:set>\n   </C:mkcalendar>\n   >> Response <<\n   HTTP/1.1\
    \ 201 Created\n   Cache-Control: no-cache\n   Date: Sat, 11 Nov 2006 09:32:12\
    \ GMT\n   Content-Length: 0\n"
- title: 5.3.2.  Creating Calendar Object Resources
  contents:
  - "5.3.2.  Creating Calendar Object Resources\n   Clients populate calendar collections\
    \ with calendar object resources.\n   The URL for each calendar object resource\
    \ is entirely arbitrary and\n   does not need to bear a specific relationship\
    \ to the calendar object\n   resource's iCalendar properties or other metadata.\
    \  New calendar\n   object resources MUST be created with a PUT request targeted\
    \ at an\n   unmapped URI.  A PUT request targeted at a mapped URI updates an\n\
    \   existing calendar object resource.\n   When servers create new resources,\
    \ it's not hard for the server to\n   choose an unmapped URI.  It's slightly tougher\
    \ for clients, because a\n   client might not want to examine all resources in\
    \ the collection and\n   might not want to lock the entire collection to ensure\
    \ that a new\n   resource isn't created with a name collision.  However, there\
    \ is an\n   HTTP feature to mitigate this.  If the client intends to create a\
    \ new\n   non-collection resource, such as a new VEVENT, the client SHOULD use\n\
    \   the HTTP request header \"If-None-Match: *\" on the PUT request.  The\n  \
    \ Request-URI on the PUT request MUST include the target collection,\n   where\
    \ the resource is to be created, plus the name of the resource in\n   the last\
    \ path segment.  The \"If-None-Match: *\" request header ensures\n   that the\
    \ client will not inadvertently overwrite an existing resource\n   if the last\
    \ path segment turned out to already be used.\n   >> Request <<\n   PUT /home/lisa/calendars/events/qwue23489.ics\
    \ HTTP/1.1\n   If-None-Match: *\n   Host: cal.example.com\n   Content-Type: text/calendar\n\
    \   Content-Length: xxxx\n   BEGIN:VCALENDAR\n   VERSION:2.0\n   PRODID:-//Example\
    \ Corp.//CalDAV Client//EN\n   BEGIN:VEVENT\n   UID:20010712T182145Z-123401@example.com\n\
    \   DTSTAMP:20060712T182145Z\n   DTSTART:20060714T170000Z\n   DTEND:20060715T040000Z\n\
    \   SUMMARY:Bastille Day Party\n   END:VEVENT\n   END:VCALENDAR\n   >> Response\
    \ <<\n   HTTP/1.1 201 Created\n   Content-Length: 0\n   Date: Sat, 11 Nov 2006\
    \ 09:32:12 GMT\n   ETag: \"123456789-000-111\"\n   The request to change an existing\
    \ event is the same, but with a\n   specific ETag in the \"If-Match\" header,\
    \ rather than the \"If-None-\n   Match\" header.\n   As indicated in Section 3.10\
    \ of [RFC2445], the URL of calendar object\n   resources containing (an arbitrary\
    \ set of) calendaring and scheduling\n   information may be suffixed by \".ics\"\
    , and the URL of calendar object\n   resources containing free or busy time information\
    \ may be suffixed by\n   \".ifb\".\n"
- title: 5.3.2.1.  Additional Preconditions for PUT, COPY, and MOVE
  contents:
  - "5.3.2.1.  Additional Preconditions for PUT, COPY, and MOVE\n   This specification\
    \ creates additional Preconditions for PUT, COPY,\n   and MOVE methods.  These\
    \ preconditions apply when a PUT operation of\n   a calendar object resource into\
    \ a calendar collection occurs, or when\n   a COPY or MOVE operation of a calendar\
    \ object resource into a\n   calendar collection occurs, or when a COPY or MOVE\
    \ operation occurs\n   on a calendar collection.\n   The new preconditions are:\n\
    \      (CALDAV:supported-calendar-data): The resource submitted in the\n     \
    \ PUT request, or targeted by a COPY or MOVE request, MUST be a\n      supported\
    \ media type (i.e., iCalendar) for calendar object\n      resources;\n      (CALDAV:valid-calendar-data):\
    \ The resource submitted in the PUT\n      request, or targeted by a COPY or MOVE\
    \ request, MUST be valid data\n      for the media type being specified (i.e.,\
    \ MUST contain valid\n      iCalendar data);\n      (CALDAV:valid-calendar-object-resource):\
    \ The resource submitted in\n      the PUT request, or targeted by a COPY or MOVE\
    \ request, MUST obey\n      all restrictions specified in Section 4.1 (e.g., calendar\
    \ object\n      resources MUST NOT contain more than one type of calendar\n  \
    \    component, calendar object resources MUST NOT specify the\n      iCalendar\
    \ METHOD property, etc.);\n      (CALDAV:supported-calendar-component): The resource\
    \ submitted in\n      the PUT request, or targeted by a COPY or MOVE request,\
    \ MUST\n      contain a type of calendar component that is supported in the\n\
    \      targeted calendar collection;\n      (CALDAV:no-uid-conflict): The resource\
    \ submitted in the PUT\n      request, or targeted by a COPY or MOVE request,\
    \ MUST NOT specify\n      an iCalendar UID property value already in use in the\
    \ targeted\n      calendar collection or overwrite an existing calendar object\n\
    \      resource with one that has a different UID property value.\n      Servers\
    \ SHOULD report the URL of the resource that is already\n      making use of the\
    \ same UID property value in the DAV:href element;\n                <!ELEMENT\
    \ no-uid-conflict (DAV:href)>\n      (CALDAV:calendar-collection-location-ok):\
    \ In a COPY or MOVE\n      request, when the Request-URI is a calendar collection,\
    \ the\n      Destination-URI MUST identify a location where a calendar\n     \
    \ collection can be created;\n      (CALDAV:max-resource-size): The resource submitted\
    \ in the PUT\n      request, or targeted by a COPY or MOVE request, MUST have\
    \ an octet\n      size less than or equal to the value of the CALDAV:max-resource-\n\
    \      size property value (Section 5.2.5) on the calendar collection\n      where\
    \ the resource will be stored;\n      (CALDAV:min-date-time): The resource submitted\
    \ in the PUT request,\n      or targeted by a COPY or MOVE request, MUST have\
    \ all of its\n      iCalendar DATE or DATE-TIME property values (for each recurring\n\
    \      instance) greater than or equal to the value of the CALDAV:min-\n     \
    \ date-time property value (Section 5.2.6) on the calendar\n      collection where\
    \ the resource will be stored;\n      (CALDAV:max-date-time): The resource submitted\
    \ in the PUT request,\n      or targeted by a COPY or MOVE request, MUST have\
    \ all of its\n      iCalendar DATE or DATE-TIME property values (for each recurring\n\
    \      instance) less than the value of the CALDAV:max-date-time property\n  \
    \    value (Section 5.2.7) on the calendar collection where the\n      resource\
    \ will be stored;\n      (CALDAV:max-instances): The resource submitted in the\
    \ PUT request,\n      or targeted by a COPY or MOVE request, MUST generate a number\
    \ of\n      recurring instances less than or equal to the value of the CALDAV:\n\
    \      max-instances property value (Section 5.2.8) on the calendar\n      collection\
    \ where the resource will be stored;\n      (CALDAV:max-attendees-per-instance):\
    \ The resource submitted in the\n      PUT request, or targeted by a COPY or MOVE\
    \ request, MUST have a\n      number of ATTENDEE properties on any one instance\
    \ less than or\n      equal to the value of the CALDAV:max-attendees-per-instance\n\
    \      property value (Section 5.2.9) on the calendar collection where\n     \
    \ the resource will be stored;\n"
- title: 5.3.3.  Non-Standard Components, Properties, and Parameters
  contents:
  - "5.3.3.  Non-Standard Components, Properties, and Parameters\n   iCalendar provides\
    \ a \"standard mechanism for doing non-standard\n   things\".  This extension\
    \ support allows implementers to make use of\n   non-standard components, properties,\
    \ and parameters whose names are\n   prefixed with the text \"X-\".\n   Servers\
    \ MUST support the use of non-standard components, properties,\n   and parameters\
    \ in calendar object resources stored via the PUT\n   method.\n   Servers may\
    \ need to enforce rules for their own \"private\" components,\n   properties,\
    \ or parameters, so servers MAY reject any attempt by the\n   client to change\
    \ those or use values for those outside of any\n   restrictions the server may\
    \ have.  Servers SHOULD ensure that any\n   \"private\" components, properties,\
    \ or parameters it uses follow the\n   convention of including a vendor id in\
    \ the \"X-\" name, as described in\n   Section 4.2 of [RFC2445], e.g., \"X-ABC-PRIVATE\"\
    .\n"
- title: 5.3.4.  Calendar Object Resource Entity Tag
  contents:
  - "5.3.4.  Calendar Object Resource Entity Tag\n   The DAV:getetag property MUST\
    \ be defined and set to a strong entity\n   tag on all calendar object resources.\n\
    \   A response to a GET request targeted at a calendar object resource\n   MUST\
    \ contain an ETag response header field indicating the current\n   value of the\
    \ strong entity tag of the calendar object resource.\n   Servers SHOULD return\
    \ a strong entity tag (ETag header) in a PUT\n   response when the stored calendar\
    \ object resource is equivalent by\n   octet equality to the calendar object resource\
    \ submitted in the body\n   of the PUT request.  This allows clients to reliably\
    \ use the returned\n   strong entity tag for data synchronization purposes.  For\
    \ instance,\n   the client can do a PROPFIND request on the stored calendar object\n\
    \   resource and have the DAV:getetag property returned, and compare that\n  \
    \ value with the strong entity tag it received on the PUT response, and\n   know\
    \ that if they are equal, then the calendar object resource on the\n   server\
    \ has not been changed.\n   In the case where the data stored by a server as a\
    \ result of a PUT\n   request is not equivalent by octet equality to the submitted\
    \ calendar\n   object resource, the behavior of the ETag response header is not\n\
    \   specified here, with the exception that a strong entity tag MUST NOT\n   be\
    \ returned in the response.  As a result, clients may need to\n   retrieve the\
    \ modified calendar object resource (and ETag) as a basis\n   for further changes,\
    \ rather than use the calendar object resource it\n   had sent with the PUT request.\n"
- title: 6.  Calendaring Access Control
  contents:
  - '6.  Calendaring Access Control

    '
- title: 6.1.  Calendaring Privilege
  contents:
  - "6.1.  Calendaring Privilege\n   CalDAV servers MUST support and adhere to the\
    \ requirements of WebDAV\n   ACL [RFC3744].  WebDAV ACL provides a framework for\
    \ an extensible set\n   of privileges that can be applied to WebDAV collections\
    \ and ordinary\n   resources.  CalDAV servers MUST also support the calendaring\n\
    \   privilege defined in this section.\n"
- title: 6.1.1.  CALDAV:read-free-busy Privilege
  contents:
  - "6.1.1.  CALDAV:read-free-busy Privilege\n   Calendar users often wish to allow\
    \ other users to see their busy time\n   information, without viewing the other\
    \ details of the calendar\n   components (e.g., location, summary, attendees).\
    \  This allows a\n   significant amount of privacy while still allowing other\
    \ users to\n   schedule meetings at times when the user is likely to be free.\n\
    \   The CALDAV:read-free-busy privilege controls which calendar\n   collections,\
    \ regular collections, and calendar object resources are\n   examined when a CALDAV:free-busy-query\
    \ REPORT request is processed\n   (see Section 7.10).  This privilege can be granted\
    \ on calendar\n   collections, regular collections, or calendar object resources.\n\
    \   Servers MUST support this privilege on all calendar collections,\n   regular\
    \ collections, and calendar object resources.\n           <!ELEMENT read-free-busy\
    \ EMPTY>\n   The CALDAV:read-free-busy privilege MUST be aggregated in the DAV:\n\
    \   read privilege.  Servers MUST allow the CALDAV:read-free-busy to be\n   granted\
    \ without the DAV:read privilege being granted.\n   Clients should note that when\
    \ only the CALDAV:read-free-busy\n   privilege has been granted on a resource,\
    \ access to GET, HEAD,\n   OPTIONS, and PROPFIND on the resource is not implied\
    \ (those\n   operations are governed by the DAV:read privilege).\n"
- title: 6.2.  Additional Principal Property
  contents:
  - "6.2.  Additional Principal Property\n   This section defines an additional property\
    \ for WebDAV principal\n   resources, as defined in [RFC3744].\n"
- title: 6.2.1.  CALDAV:calendar-home-set Property
  contents:
  - "6.2.1.  CALDAV:calendar-home-set Property\n   Name:  calendar-home-set\n   Namespace:\
    \  urn:ietf:params:xml:ns:caldav\n   Purpose:  Identifies the URL of any WebDAV\
    \ collections that contain\n      calendar collections owned by the associated\
    \ principal resource.\n   Conformance:  This property SHOULD be defined on a principal\n\
    \      resource.  If defined, it MAY be protected and SHOULD NOT be\n      returned\
    \ by a PROPFIND DAV:allprop request (as defined in Section\n      12.14.1 of [RFC2518]).\n\
    \   Description:  The CALDAV:calendar-home-set property is meant to allow\n  \
    \    users to easily find the calendar collections owned by the\n      principal.\
    \  Typically, users will group all the calendar\n      collections that they own\
    \ under a common collection.  This\n      property specifies the URL of collections\
    \ that are either calendar\n      collections or ordinary collections that have\
    \ child or descendant\n      calendar collections owned by the principal.\n  \
    \ Definition:\n         <!ELEMENT calendar-home-set (DAV:href*)>\n   Example:\n\
    \       <C:calendar-home-set xmlns:D=\"DAV:\"\n                            xmlns:C=\"\
    urn:ietf:params:xml:ns:caldav\">\n         <D:href>http://cal.example.com/home/bernard/calendars/</D:href>\n\
    \       </C:calendar-home-set>\n"
- title: 7.  Calendaring Reports
  contents:
  - "7.  Calendaring Reports\n   This section defines the reports that CalDAV servers\
    \ MUST support on\n   calendar collections and calendar object resources.\n  \
    \ CalDAV servers MUST advertise support for these reports on all\n   calendar\
    \ collections and calendar object resources with the DAV:\n   supported-report-set\
    \ property, defined in Section 3.1.5 of [RFC3253].\n   CalDAV servers MAY also\
    \ advertise support for these reports on\n   ordinary collections.\n   Some of\
    \ these reports allow calendar data (from possibly multiple\n   resources) to\
    \ be returned.\n"
- title: 7.1.  REPORT Method
  contents:
  - "7.1.  REPORT Method\n   The REPORT method (defined in Section 3.6 of [RFC3253])\
    \ provides an\n   extensible mechanism for obtaining information about one or\
    \ more\n   resources.  Unlike the PROPFIND method, which returns the value of\n\
    \   one or more named properties, the REPORT method can involve more\n   complex\
    \ processing.  REPORT is valuable in cases where the server has\n   access to\
    \ all of the information needed to perform the complex\n   request (such as a\
    \ query), and where it would require multiple\n   requests for the client to retrieve\
    \ the information needed to perform\n   the same request.\n   CalDAV servers MUST\
    \ support the DAV:expand-property REPORT defined in\n   Section 3.8 of [RFC3253].\n"
- title: 7.2.  Ordinary Collections
  contents:
  - "7.2.  Ordinary Collections\n   Servers MAY support the reports defined in this\
    \ document on ordinary\n   collections (collections that are not calendar collections),\
    \ in\n   addition to calendar collections or calendar object resources.  In\n\
    \   computing responses to the reports on ordinary collections, servers\n   MUST\
    \ only consider calendar object resources contained in calendar\n   collections\
    \ that are targeted by the REPORT request, based on the\n   value of the Depth\
    \ request header.\n"
- title: 7.3.  Date and Floating Time
  contents:
  - "7.3.  Date and Floating Time\n   iCalendar provides a way to specify DATE and\
    \ DATE-TIME values that\n   are not bound to any time zone in particular, hereafter\
    \ called\n   \"floating date\" and \"floating time\", respectively.  These values\
    \ are\n   used to represent the same day, hour, minute, and second value,\n  \
    \ regardless of which time zone is being observed.  For instance, the\n   DATE\
    \ value \"20051111\", represents November 11, 2005 in no specific\n   time zone,\
    \ while the DATE-TIME value \"20051111T111100\" represents\n   November 11, 2005,\
    \ at 11:11 A.M. in no specific time zone.\n   CalDAV servers may need to convert\
    \ \"floating date\" and \"floating\n   time\" values in date with UTC time values\
    \ in the processing of\n   calendaring REPORT requests.\n   For the CALDAV:calendar-query\
    \ REPORT, CalDAV servers MUST rely on the\n   value of the CALDAV:timezone XML\
    \ element, if specified as part of the\n   request body, to perform the proper\
    \ conversion of \"floating date\" and\n   \"floating time\" values to date with\
    \ UTC time values.  If the CALDAV:\n   timezone XML element is not specified in\
    \ the request body, CalDAV\n   servers MUST rely on the value of the CALDAV:calendar-timezone\n\
    \   property, if defined, or else the CalDAV servers MAY rely on the time\n  \
    \ zone of their choice.\n   For the CALDAV:free-busy-query REPORT, CalDAV servers\
    \ MUST rely on\n   the value of the CALDAV:calendar-timezone property, if defined,\
    \ to\n   compute the proper FREEBUSY time period value as date with UTC time\n\
    \   for calendar components scheduled with \"floating date\" or \"floating\n \
    \  time\".  If the CALDAV:calendar-timezone property is not defined,\n   CalDAV\
    \ servers MAY rely on the time zone of their choice.\n"
- title: 7.4.  Time Range Filtering
  contents:
  - "7.4.  Time Range Filtering\n   Some of the reports defined in this section can\
    \ include a time range\n   filter that is used to restrict the set of calendar\
    \ object resources\n   returned to just those that overlap the specified time\
    \ range.  The\n   time range filter can be applied to a calendar component as\
    \ a whole,\n   or to specific calendar component properties with DATE or DATE-TIME\n\
    \   value types.\n   To determine whether a calendar object resource matches the\
    \ time\n   range filter element, the start and end times for the targeted\n  \
    \ component or property are determined and then compared to the\n   requested\
    \ time range.  If there is an overlap with the requested time\n   range, then\
    \ the calendar object resource matches the filter element.\n   The rules defined\
    \ in [RFC2445] for determining the actual start and\n   end times of calendar\
    \ components MUST be used, and these are fully\n   enumerated in Section 9.9 of\
    \ this document.\n   When such time range filtering is used, special consideration\
    \ must be\n   given to recurring calendar components, such as VEVENT and VTODO.\n\
    \   The server MUST expand recurring components to determine whether any\n   recurrence\
    \ instances overlap the specified time range.  If one or\n   more recurrence instances\
    \ overlap the time range, then the calendar\n   object resource matches the filter\
    \ element.\n"
- title: '7.5.  Searching Text: Collations'
  contents:
  - "7.5.  Searching Text: Collations\n   Some of the reports defined in this section\
    \ do text matches of\n   character strings provided by the client and are compared\
    \ to stored\n   calendar data.  Since iCalendar data is, by default, encoded in\
    \ the\n   UTF-8 charset and may include characters outside the US-ASCII charset\n\
    \   range in some property and parameter values, there is a need to\n   ensure\
    \ that text matching follows well-defined rules.\n   To deal with this, this specification\
    \ makes use of the IANA Collation\n   Registry defined in [RFC4790] to specify\
    \ collations that may be used\n   to carry out the text comparison operations\
    \ with a well-defined rule.\n   The comparisons used in CalDAV are all \"substring\"\
    \ matches, as per\n   [RFC4790], Section 4.2.  Collations supported by the server\
    \ MUST\n   support \"substring\" match operations.\n   CalDAV servers are REQUIRED\
    \ to support the \"i;ascii-casemap\" and\n   \"i;octet\" collations, as described\
    \ in [RFC4790], and MAY support\n   other collations.\n   Servers MUST advertise\
    \ the set of collations that they support via\n   the CALDAV:supported-collation-set\
    \ property defined on any resource\n   that supports reports that use collations.\n\
    \   Clients MUST only use collations from the list advertised by the\n   server.\n\
    \   In the absence of a collation explicitly specified by the client, or\n   if\
    \ the client specifies the \"default\" collation identifier (as\n   defined in\
    \ [RFC4790], Section 3.1), the server MUST default to using\n   \"i;ascii-casemap\"\
    \ as the collation.\n   Wildcards (as defined in [RFC4790], Section 3.2) MUST\
    \ NOT be used in\n   the collation identifier.\n   If the client chooses a collation\
    \ not supported by the server, the\n   server MUST respond with a CALDAV:supported-collation\
    \ precondition\n   error response.\n"
- title: 7.5.1.  CALDAV:supported-collation-set Property
  contents:
  - "7.5.1.  CALDAV:supported-collation-set Property\n   Name:  supported-collation-set\n\
    \   Namespace:  urn:ietf:params:xml:ns:caldav\n   Purpose:  Identifies the set\
    \ of collations supported by the server\n      for text matching operations.\n\
    \   Conformance:  This property MUST be defined on any resource that\n      supports\
    \ a report that does text matching.  If defined, it MUST be\n      protected and\
    \ SHOULD NOT be returned by a PROPFIND DAV:allprop\n      request (as defined\
    \ in Section 12.14.1 of [RFC2518]).\n   Description:  The CALDAV:supported-collation-set\
    \ property contains\n      zero or more CALDAV:supported-collation elements, which\
    \ specify\n      the collection identifiers of the collations supported by the\n\
    \      server.\n   Definition:\n         <!ELEMENT supported-collation-set (supported-collation*)>\n\
    \         <!ELEMENT supported-collation (#PCDATA)>\n   Example:\n       <C:supported-collation-set\n\
    \           xmlns:C=\"urn:ietf:params:xml:ns:caldav\">\n         <C:supported-collation>i;ascii-casemap</C:supported-collation>\n\
    \         <C:supported-collation>i;octet</C:supported-collation>\n       </C:supported-collation-set>\n"
- title: 7.6.  Partial Retrieval
  contents:
  - "7.6.  Partial Retrieval\n   Some calendaring reports defined in this document\
    \ allow partial\n   retrieval of calendar object resources.  A CalDAV client can\
    \ specify\n   what information to return in the body of a calendaring REPORT\n\
    \   request.\n   A CalDAV client can request particular WebDAV property values,\
    \ all\n   WebDAV property values, or a list of the names of the resource's\n \
    \  WebDAV properties.  A CalDAV client can also request calendar data to\n   be\
    \ returned and specify whether all calendar components and\n   properties should\
    \ be returned, or only particular ones.  See CALDAV:\n   calendar-data in Section\
    \ 9.6.\n   By default, the returned calendar data will include the component\n\
    \   that defines the recurrence set, referred to as the \"master\n   component\"\
    , as well as the components that define exceptions to the\n   recurrence set,\
    \ referred to as the \"overridden components\".\n   A CalDAV client that is only\
    \ interested in the recurrence instances\n   that overlap a specified time range\
    \ can request to receive only the\n   \"master component\", along with the \"\
    overridden components\" that\n   impact the specified time range, and thus, limit\
    \ the data returned by\n   the server (see CALDAV:limit-recurrence-set in Section\
    \ 9.6.6).  An\n   overridden component impacts a time range if its current start\
    \ and\n   end times overlap the time range, or if the original start and end\n\
    \   times -- the ones that would have been used if the instance were not\n   overridden\
    \ -- overlap the time range, or if it affects other\n   instances that overlap\
    \ the time range.\n   A CalDAV client with no support for recurrence properties\
    \ (i.e.,\n   EXDATE, EXRULE, RDATE, and RRULE) and possibly VTIMEZONE components,\n\
    \   or a client unwilling to perform recurrence expansion because of\n   limited\
    \ processing capability, can request to receive only the\n   recurrence instances\
    \ that overlap a specified time range as separate\n   calendar components that\
    \ each define exactly one recurrence instance\n   (see CALDAV:expand in Section\
    \ 9.6.5.)\n   Finally, in the case of VFREEBUSY components, a CalDAV client can\n\
    \   request to receive only the FREEBUSY property values that overlap a\n   specified\
    \ time range (see CALDAV:limit-freebusy-set in\n   Section 9.6.7.)\n"
- title: 7.7.  Non-Standard Components, Properties, and Parameters
  contents:
  - "7.7.  Non-Standard Components, Properties, and Parameters\n   Servers MUST support\
    \ the use of non-standard component, property, or\n   parameter names in the CALDAV:calendar-data\
    \ XML element in\n   calendaring REPORT requests to allow clients to request that\
    \ non-\n   standard components, properties, and parameters be returned in the\n\
    \   calendar data provided in the response.\n   Servers MAY support the use of\
    \ non-standard component, property, or\n   parameter names in the CALDAV:comp-filter,\
    \ CALDAV:prop-filter, and\n   CALDAV:param-filter XML elements specified in the\
    \ CALDAV:filter XML\n   element of calendaring REPORT requests.\n   Servers MUST\
    \ fail with the CALDAV:supported-filter precondition if a\n   calendaring REPORT\
    \ request uses a CALDAV:comp-filter, CALDAV:prop-\n   filter, or CALDAV:param-filter\
    \ XML element that makes reference to a\n   non-standard component, property,\
    \ or parameter name on which the\n   server does not support queries.\n"
- title: 7.8.  CALDAV:calendar-query REPORT
  contents:
  - "7.8.  CALDAV:calendar-query REPORT\n   The CALDAV:calendar-query REPORT performs\
    \ a search for all calendar\n   object resources that match a specified filter.\
    \  The response of this\n   report will contain all the WebDAV properties and\
    \ calendar object\n   resource data specified in the request.  In the case of\
    \ the CALDAV:\n   calendar-data XML element, one can explicitly specify the calendar\n\
    \   components and properties that should be returned in the calendar\n   object\
    \ resource data that matches the filter.\n   The format of this report is modeled\
    \ on the PROPFIND method.  The\n   request and response bodies of the CALDAV:calendar-query\
    \ REPORT use\n   XML elements that are also used by PROPFIND.  In particular,\
    \ the\n   request can include XML elements to request WebDAV properties to be\n\
    \   returned.  When that occurs, the response should follow the same\n   behavior\
    \ as PROPFIND with respect to the DAV:multistatus response\n   elements used to\
    \ return specific property results.  For instance, a\n   request to retrieve the\
    \ value of a property that does not exist is an\n   error and MUST be noted with\
    \ a response XML element that contains a\n   404 (Not Found) status value.\n \
    \  Support for the CALDAV:calendar-query REPORT is REQUIRED.\n   Marshalling:\n\
    \      The request body MUST be a CALDAV:calendar-query XML element, as\n    \
    \  defined in Section 9.5.\n      The request MAY include a Depth header.  If\
    \ no Depth header is\n      included, Depth:0 is assumed.\n      The response\
    \ body for a successful request MUST be a DAV:\n      multistatus XML element\
    \ (i.e., the response uses the same format\n      as the response for PROPFIND).\
    \  In the case where there are no\n      response elements, the returned DAV:multistatus\
    \ XML element is\n      empty.\n      The response body for a successful CALDAV:calendar-query\
    \ REPORT\n      request MUST contain a DAV:response element for each iCalendar\n\
    \      object that matched the search filter.  Calendar data is being\n      returned\
    \ in the CALDAV:calendar-data XML element inside the DAV:\n      propstat XML\
    \ element.\n   Preconditions:\n      (CALDAV:supported-calendar-data): The attributes\
    \ \"content-type\"\n      and \"version\" of the CALDAV:calendar-data XML element\
    \ (see\n      Section 9.6) specify a media type supported by the server for\n\
    \      calendar object resources.\n      (CALDAV:valid-filter): The CALDAV:filter\
    \ XML element (see\n      Section 9.7) specified in the REPORT request MUST be\
    \ valid.  For\n      instance, a CALDAV:filter cannot nest a <C:comp name=\"VEVENT\"\
    >\n      element in a <C:comp name=\"VTODO\"> element, and a CALDAV:filter\n \
    \     cannot nest a <C:time-range start=\"...\" end=\"...\"> element in a\n  \
    \    <C:prop name=\"SUMMARY\"> element.\n      (CALDAV:supported-filter): The\
    \ CALDAV:comp-filter (see\n      Section 9.7.1), CALDAV:prop-filter (see Section\
    \ 9.7.2), and\n      CALDAV:param-filter (see Section 9.7.3) XML elements used\
    \ in the\n      CALDAV:filter XML element (see Section 9.7) in the REPORT request\n\
    \      only make reference to components, properties, and parameters for\n   \
    \   which queries are supported by the server, i.e., if the CALDAV:\n      filter\
    \ element attempts to reference an unsupported component,\n      property, or\
    \ parameter, this precondition is violated.  Servers\n      SHOULD report the\
    \ CALDAV:comp-filter, CALDAV:prop-filter, or\n      CALDAV:param-filter for which\
    \ it does not provide support.\n            <!ELEMENT supported-filter (comp-filter*,\n\
    \                                        prop-filter*,\n                     \
    \                   param-filter*)>\n      (CALDAV:valid-calendar-data): The time\
    \ zone specified in the\n      REPORT request MUST be a valid iCalendar object\
    \ containing a\n      single valid VTIMEZONE component.\n      (CALDAV:min-date-time):\
    \ Any XML element specifying a range of time\n      MUST have its start or end\
    \ DATE or DATE-TIME values greater than\n      or equal to the value of the CALDAV:min-date-time\
    \ property value\n      (Section 5.2.6) on the calendar collections being targeted\
    \ by the\n      REPORT request;\n      (CALDAV:max-date-time): Any XML element\
    \ specifying a range of time\n      MUST have its start or end DATE or DATE-TIME\
    \ values less than or\n      equal to the value of the CALDAV:max-date-time property\
    \ value\n      (Section 5.2.7) on the calendar collections being targeted by the\n\
    \      REPORT request;\n      (CALDAV:supported-collation): Any XML attribute\
    \ specifying a\n      collation MUST specify a collation supported by the server\
    \ as\n      described in Section 7.5.\n   Postconditions:\n      (DAV:number-of-matches-within-limits):\
    \ The number of matching\n      calendar object resources must fall within server-specific,\n\
    \      predefined limits.  For example, this condition might be triggered\n  \
    \    if a search specification would cause the return of an extremely\n      large\
    \ number of responses.\n"
- title: '7.8.1.  Example: Partial Retrieval of Events by Time Range'
  contents:
  - "7.8.1.  Example: Partial Retrieval of Events by Time Range\n   In this example,\
    \ the client requests the server to return specific\n   components and properties\
    \ of the VEVENT components that overlap the\n   time range from January 4, 2006,\
    \ at 00:00:00 A.M. UTC to January 5,\n   2006, at 00:00:00 A.M. UTC.  In addition,\
    \ the DAV:getetag property is\n   also requested and returned as part of the response.\
    \  Note that the\n   first calendar object returned is a recurring event whose\
    \ first\n   instance lies outside the requested time range, but whose third\n\
    \   instance does overlap the time range.  Note that due to the CALDAV:\n   calendar-data\
    \ element restrictions, the DTSTAMP property in VEVENT\n   components has not\
    \ been returned, and the only property returned in\n   the VCALENDAR object is\
    \ VERSION.\n   See Appendix B for the calendar data being targeted by this example.\n\
    \   >> Request <<\n   REPORT /bernard/work/ HTTP/1.1\n   Host: cal.example.com\n\
    \   Depth: 1\n   Content-Type: application/xml; charset=\"utf-8\"\n   Content-Length:\
    \ xxxx\n   <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n   <C:calendar-query xmlns:D=\"\
    DAV:\"\n                 xmlns:C=\"urn:ietf:params:xml:ns:caldav\">\n     <D:prop>\n\
    \       <D:getetag/>\n       <C:calendar-data>\n         <C:comp name=\"VCALENDAR\"\
    >\n           <C:prop name=\"VERSION\"/>\n           <C:comp name=\"VEVENT\">\n\
    \             <C:prop name=\"SUMMARY\"/>\n             <C:prop name=\"UID\"/>\n\
    \             <C:prop name=\"DTSTART\"/>\n             <C:prop name=\"DTEND\"\
    />\n             <C:prop name=\"DURATION\"/>\n             <C:prop name=\"RRULE\"\
    />\n             <C:prop name=\"RDATE\"/>\n             <C:prop name=\"EXRULE\"\
    />\n             <C:prop name=\"EXDATE\"/>\n             <C:prop name=\"RECURRENCE-ID\"\
    />\n           </C:comp>\n           <C:comp name=\"VTIMEZONE\"/>\n         </C:comp>\n\
    \       </C:calendar-data>\n     </D:prop>\n     <C:filter>\n       <C:comp-filter\
    \ name=\"VCALENDAR\">\n         <C:comp-filter name=\"VEVENT\">\n           <C:time-range\
    \ start=\"20060104T000000Z\"\n                         end=\"20060105T000000Z\"\
    />\n         </C:comp-filter>\n       </C:comp-filter>\n     </C:filter>\n   </C:calendar-query>\n\
    \   >> Response <<\n   HTTP/1.1 207 Multi-Status\n   Date: Sat, 11 Nov 2006 09:32:12\
    \ GMT\n   Content-Type: application/xml; charset=\"utf-8\"\n   Content-Length:\
    \ xxxx\n   <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n   <D:multistatus xmlns:D=\"\
    DAV:\"\n              xmlns:C=\"urn:ietf:params:xml:ns:caldav\">\n     <D:response>\n\
    \       <D:href>http://cal.example.com/bernard/work/abcd2.ics</D:href>\n     \
    \  <D:propstat>\n         <D:prop>\n           <D:getetag>\"fffff-abcd2\"</D:getetag>\n\
    \           <C:calendar-data>BEGIN:VCALENDAR\n   VERSION:2.0\n   BEGIN:VTIMEZONE\n\
    \   LAST-MODIFIED:20040110T032845Z\n   TZID:US/Eastern\n   BEGIN:DAYLIGHT\n  \
    \ DTSTART:20000404T020000\n   RRULE:FREQ=YEARLY;BYDAY=1SU;BYMONTH=4\n   TZNAME:EDT\n\
    \   TZOFFSETFROM:-0500\n   TZOFFSETTO:-0400\n   END:DAYLIGHT\n   BEGIN:STANDARD\n\
    \   DTSTART:20001026T020000\n   RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=10\n   TZNAME:EST\n\
    \   TZOFFSETFROM:-0400\n   TZOFFSETTO:-0500\n   END:STANDARD\n   END:VTIMEZONE\n\
    \   BEGIN:VEVENT\n   DTSTART;TZID=US/Eastern:20060102T120000\n   DURATION:PT1H\n\
    \   RRULE:FREQ=DAILY;COUNT=5\n   SUMMARY:Event #2\n   UID:00959BC664CA650E933C892C@example.com\n\
    \   END:VEVENT\n   BEGIN:VEVENT\n   DTSTART;TZID=US/Eastern:20060104T140000\n\
    \   DURATION:PT1H\n   RECURRENCE-ID;TZID=US/Eastern:20060104T120000\n   SUMMARY:Event\
    \ #2 bis\n   UID:00959BC664CA650E933C892C@example.com\n   END:VEVENT\n   BEGIN:VEVENT\n\
    \   DTSTART;TZID=US/Eastern:20060106T140000\n   DURATION:PT1H\n   RECURRENCE-ID;TZID=US/Eastern:20060106T120000\n\
    \   SUMMARY:Event #2 bis bis\n   UID:00959BC664CA650E933C892C@example.com\n  \
    \ END:VEVENT\n   END:VCALENDAR\n   </C:calendar-data>\n         </D:prop>\n  \
    \       <D:status>HTTP/1.1 200 OK</D:status>\n       </D:propstat>\n     </D:response>\n\
    \     <D:response>\n       <D:href>http://cal.example.com/bernard/work/abcd3.ics</D:href>\n\
    \       <D:propstat>\n         <D:prop>\n           <D:getetag>\"fffff-abcd3\"\
    </D:getetag>\n           <C:calendar-data>BEGIN:VCALENDAR\n   VERSION:2.0\n  \
    \ PRODID:-//Example Corp.//CalDAV Client//EN\n   BEGIN:VTIMEZONE\n   LAST-MODIFIED:20040110T032845Z\n\
    \   TZID:US/Eastern\n   BEGIN:DAYLIGHT\n   DTSTART:20000404T020000\n   RRULE:FREQ=YEARLY;BYDAY=1SU;BYMONTH=4\n\
    \   TZNAME:EDT\n   TZOFFSETFROM:-0500\n   TZOFFSETTO:-0400\n   END:DAYLIGHT\n\
    \   BEGIN:STANDARD\n   DTSTART:20001026T020000\n   RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=10\n\
    \   TZNAME:EST\n   TZOFFSETFROM:-0400\n   TZOFFSETTO:-0500\n   END:STANDARD\n\
    \   END:VTIMEZONE\n   BEGIN:VEVENT\n   DTSTART;TZID=US/Eastern:20060104T100000\n\
    \   DURATION:PT1H\n   SUMMARY:Event #3\n   UID:DC6C50A017428C5216A2F1CD@example.com\n\
    \   END:VEVENT\n   END:VCALENDAR\n   </C:calendar-data>\n         </D:prop>\n\
    \         <D:status>HTTP/1.1 200 OK</D:status>\n       </D:propstat>\n     </D:response>\n\
    \   </D:multistatus>\n"
- title: '7.8.2.  Example: Partial Retrieval of Recurring Events'
  contents:
  - "7.8.2.  Example: Partial Retrieval of Recurring Events\n   In this example, the\
    \ client requests the server to return VEVENT\n   components that overlap the\
    \ time range from January 3, 2006, at 00:\n   00:00 A.M. UTC to January 5, 2006,\
    \ at 00:00:00 A.M. UTC.  Use of the\n   CALDAV:limit-recurrence-set element causes\
    \ the server to only return\n   overridden recurrence components that overlap\
    \ the time range\n   specified in that element or that affect other instances\
    \ that overlap\n   the time range (e.g., in the case of a THISANDFUTURE behavior).\
    \  In\n   this example, the first overridden component in the matching resource\n\
    \   is returned, but the second one is not.\n   See Appendix B for the calendar\
    \ data being targeted by this example.\n   >> Request <<\n   REPORT /bernard/work/\
    \ HTTP/1.1\n   Host: cal.example.com\n   Depth: 1\n   Content-Type: application/xml;\
    \ charset=\"utf-8\"\n   Content-Length: xxxx\n   <?xml version=\"1.0\" encoding=\"\
    utf-8\" ?>\n   <C:calendar-query xmlns:D=\"DAV:\"\n                     xmlns:C=\"\
    urn:ietf:params:xml:ns:caldav\">\n     <D:prop>\n       <C:calendar-data>\n  \
    \       <C:limit-recurrence-set start=\"20060103T000000Z\"\n                 \
    \                end=\"20060105T000000Z\"/>\n       </C:calendar-data>\n     </D:prop>\n\
    \     <C:filter>\n       <C:comp-filter name=\"VCALENDAR\">\n         <C:comp-filter\
    \ name=\"VEVENT\">\n           <C:time-range start=\"20060103T000000Z\"\n    \
    \                     end=\"20060105T000000Z\"/>\n         </C:comp-filter>\n\
    \       </C:comp-filter>\n     </C:filter>\n   </C:calendar-query>\n   >> Response\
    \ <<\n   HTTP/1.1 207 Multi-Status\n   Date: Sat, 11 Nov 2006 09:32:12 GMT\n \
    \  Content-Type: application/xml; charset=\"utf-8\"\n   Content-Length: xxxx\n\
    \   <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n   <D:multistatus xmlns:D=\"\
    DAV:\"\n              xmlns:C=\"urn:ietf:params:xml:ns:caldav\">\n     <D:response>\n\
    \       <D:href>http://cal.example.com/bernard/work/abcd2.ics</D:href>\n     \
    \  <D:propstat>\n         <D:prop>\n           <D:getetag>\"fffff-abcd2\"</D:getetag>\n\
    \           <C:calendar-data>BEGIN:VCALENDAR\n   VERSION:2.0\n   PRODID:-//Example\
    \ Corp.//CalDAV Client//EN\n   BEGIN:VTIMEZONE\n   LAST-MODIFIED:20040110T032845Z\n\
    \   TZID:US/Eastern\n   BEGIN:DAYLIGHT\n   DTSTART:20000404T020000\n   RRULE:FREQ=YEARLY;BYDAY=1SU;BYMONTH=4\n\
    \   TZNAME:EDT\n   TZOFFSETFROM:-0500\n   TZOFFSETTO:-0400\n   END:DAYLIGHT\n\
    \   BEGIN:STANDARD\n   DTSTART:20001026T020000\n   RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=10\n\
    \   TZNAME:EST\n   TZOFFSETFROM:-0400\n   TZOFFSETTO:-0500\n   END:STANDARD\n\
    \   END:VTIMEZONE\n   BEGIN:VEVENT\n   DTSTAMP:20060206T001121Z\n   DTSTART;TZID=US/Eastern:20060102T120000\n\
    \   DURATION:PT1H\n   RRULE:FREQ=DAILY;COUNT=5\n   SUMMARY:Event #2\n   UID:00959BC664CA650E933C892C@example.com\n\
    \   END:VEVENT\n   BEGIN:VEVENT\n   DTSTAMP:20060206T001121Z\n   DTSTART;TZID=US/Eastern:20060104T140000\n\
    \   DURATION:PT1H\n   RECURRENCE-ID;TZID=US/Eastern:20060104T120000\n   SUMMARY:Event\
    \ #2 bis\n   UID:00959BC664CA650E933C892C@example.com\n   END:VEVENT\n   END:VCALENDAR\n\
    \   </C:calendar-data>\n         </D:prop>\n         <D:status>HTTP/1.1 200 OK</D:status>\n\
    \       </D:propstat>\n     </D:response>\n     <D:response>\n       <D:href>http://cal.example.com/bernard/work/abcd3.ics</D:href>\n\
    \       <D:propstat>\n         <D:prop>\n           <D:getetag>\"fffff-abcd3\"\
    </D:getetag>\n           <C:calendar-data>BEGIN:VCALENDAR\n   VERSION:2.0\n  \
    \ PRODID:-//Example Corp.//CalDAV Client//EN\n   BEGIN:VTIMEZONE\n   LAST-MODIFIED:20040110T032845Z\n\
    \   TZID:US/Eastern\n   BEGIN:DAYLIGHT\n   DTSTART:20000404T020000\n   RRULE:FREQ=YEARLY;BYDAY=1SU;BYMONTH=4\n\
    \   TZNAME:EDT\n   TZOFFSETFROM:-0500\n   TZOFFSETTO:-0400\n   END:DAYLIGHT\n\
    \   BEGIN:STANDARD\n   DTSTART:20001026T020000\n   RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=10\n\
    \   TZNAME:EST\n   TZOFFSETFROM:-0400\n   TZOFFSETTO:-0500\n   END:STANDARD\n\
    \   END:VTIMEZONE\n   BEGIN:VEVENT\n   ATTENDEE;PARTSTAT=ACCEPTED;ROLE=CHAIR:mailto:cyrus@example.com\n\
    \   ATTENDEE;PARTSTAT=NEEDS-ACTION:mailto:lisa@example.com\n   DTSTAMP:20060206T001220Z\n\
    \   DTSTART;TZID=US/Eastern:20060104T100000\n   DURATION:PT1H\n   LAST-MODIFIED:20060206T001330Z\n\
    \   ORGANIZER:mailto:cyrus@example.com\n   SEQUENCE:1\n   STATUS:TENTATIVE\n \
    \  SUMMARY:Event #3\n   UID:DC6C50A017428C5216A2F1CD@example.com\n   X-ABC-GUID:E1CX5Dr-0007ym-Hz@example.com\n\
    \   END:VEVENT\n   END:VCALENDAR\n   </C:calendar-data>\n         </D:prop>\n\
    \         <D:status>HTTP/1.1 200 OK</D:status>\n       </D:propstat>\n     </D:response>\n\
    \   </D:multistatus>\n"
- title: '7.8.3.  Example: Expanded Retrieval of Recurring Events'
  contents:
  - "7.8.3.  Example: Expanded Retrieval of Recurring Events\n   In this example,\
    \ the client requests the server to return VEVENT\n   components that overlap\
    \ the time range from January 2, 2006, at 00:\n   00:00 A.M. UTC to January 5,\
    \ 2006, at 00:00:00 A.M. UTC and to return\n   recurring calendar components expanded\
    \ into individual recurrence\n   instance calendar components.  Use of the CALDAV:expand\
    \ element\n   causes the server to only return overridden recurrence instances\
    \ that\n   overlap the time range specified in that element.\n   See Appendix\
    \ B for the calendar data being targeted by this example.\n   >> Request <<\n\
    \   REPORT /bernard/work/ HTTP/1.1\n   Host: cal.example.com\n   Depth: 1\n  \
    \ Content-Type: application/xml; charset=\"utf-8\"\n   Content-Length: xxxx\n\
    \   <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n   <C:calendar-query xmlns:D=\"\
    DAV:\"\n                     xmlns:C=\"urn:ietf:params:xml:ns:caldav\">\n    \
    \ <D:prop>\n       <C:calendar-data>\n         <C:expand start=\"20060103T000000Z\"\
    \n                   end=\"20060105T000000Z\"/>\n       </C:calendar-data>\n \
    \    </D:prop>\n     <C:filter>\n       <C:comp-filter name=\"VCALENDAR\">\n \
    \        <C:comp-filter name=\"VEVENT\">\n           <C:time-range start=\"20060103T000000Z\"\
    \n                         end=\"20060105T000000Z\"/>\n         </C:comp-filter>\n\
    \       </C:comp-filter>\n     </C:filter>\n   </C:calendar-query>\n   >> Response\
    \ <<\n   HTTP/1.1 207 Multi-Status\n   Date: Sat, 11 Nov 2006 09:32:12 GMT\n \
    \  Content-Type: application/xml; charset=\"utf-8\"\n   Content-Length: xxxx\n\
    \   <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n   <D:multistatus xmlns:D=\"\
    DAV:\"\n              xmlns:C=\"urn:ietf:params:xml:ns:caldav\">\n     <D:response>\n\
    \       <D:href>http://cal.example.com/bernard/work/abcd2.ics</D:href>\n     \
    \  <D:propstat>\n         <D:prop>\n           <D:getetag>\"fffff-abcd2\"</D:getetag>\n\
    \           <C:calendar-data>BEGIN:VCALENDAR\n   VERSION:2.0\n   PRODID:-//Example\
    \ Corp.//CalDAV Client//EN\n   BEGIN:VEVENT\n   DTSTAMP:20060206T001121Z\n   DTSTART:20060103T170000\n\
    \   DURATION:PT1H\n   RECURRENCE-ID:20060103T170000\n   SUMMARY:Event #2\n   UID:00959BC664CA650E933C892C@example.com\n\
    \   END:VEVENT\n   BEGIN:VEVENT\n   DTSTAMP:20060206T001121Z\n   DTSTART:20060104T190000\n\
    \   DURATION:PT1H\n   RECURRENCE-ID:20060104T170000\n   SUMMARY:Event #2 bis\n\
    \   UID:00959BC664CA650E933C892C@example.com\n   END:VEVENT\n   END:VCALENDAR\n\
    \   </C:calendar-data>\n         </D:prop>\n         <D:status>HTTP/1.1 200 OK</D:status>\n\
    \       </D:propstat>\n     </D:response>\n     <D:response>\n       <D:href>http://cal.example.com/bernard/work/abcd3.ics</D:href>\n\
    \       <D:propstat>\n         <D:prop>\n           <D:getetag>\"fffff-abcd3\"\
    </D:getetag>\n           <C:calendar-data>BEGIN:VCALENDAR\n   VERSION:2.0\n  \
    \ PRODID:-//Example Corp.//CalDAV Client//EN\n   BEGIN:VEVENT\n   ATTENDEE;PARTSTAT=ACCEPTED;ROLE=CHAIR:mailto:cyrus@example.com\n\
    \   ATTENDEE;PARTSTAT=NEEDS-ACTION:mailto:lisa@example.com\n   DTSTAMP:20060206T001220Z\n\
    \   DTSTART:20060104T150000\n   DURATION:PT1H\n   LAST-MODIFIED:20060206T001330Z\n\
    \   ORGANIZER:mailto:cyrus@example.com\n   SEQUENCE:1\n   STATUS:TENTATIVE\n \
    \  SUMMARY:Event #3\n   UID:DC6C50A017428C5216A2F1CD@example.com\n   X-ABC-GUID:E1CX5Dr-0007ym-Hz@example.com\n\
    \   END:VEVENT\n   END:VCALENDAR\n   </C:calendar-data>\n         </D:prop>\n\
    \         <D:status>HTTP/1.1 200 OK</D:status>\n       </D:propstat>\n     </D:response>\n\
    \   </D:multistatus>\n"
- title: '7.8.4.  Example: Partial Retrieval of Stored Free Busy Components'
  contents:
  - "7.8.4.  Example: Partial Retrieval of Stored Free Busy Components\n   In this\
    \ example, the client requests the server to return the\n   VFREEBUSY components\
    \ that have free busy information that overlap the\n   time range from January\
    \ 2, 2006, at 00:00:00 A.M. UTC (inclusively)\n   to January 3, 2006, at 00:00:00\
    \ A.M. UTC (exclusively).  Use of the\n   CALDAV:limit-freebusy-set element causes\
    \ the server to only return\n   the FREEBUSY property values that overlap the\
    \ time range specified in\n   that element.  Note that this is not an example\
    \ of discovering when\n   the calendar owner is busy.\n   See Appendix B for the\
    \ calendar data being targeted by this example.\n   >> Request <<\n   REPORT /bernard/work/\
    \ HTTP/1.1\n   Host: cal.example.com\n   Depth: 1\n   Content-Type: application/xml;\
    \ charset=\"utf-8\"\n   Content-Length: xxxx\n   <?xml version=\"1.0\" encoding=\"\
    utf-8\" ?>\n   <C:calendar-query xmlns:D=\"DAV:\"\n                 xmlns:C=\"\
    urn:ietf:params:xml:ns:caldav\">\n     <D:prop>\n       <C:calendar-data>\n  \
    \       <C:limit-freebusy-set start=\"20060102T000000Z\"\n                   \
    \              end=\"20060103T000000Z\"/>\n       </C:calendar-data>\n     </D:prop>\n\
    \     <C:filter>\n       <C:comp-filter name=\"VCALENDAR\">\n         <C:comp-filter\
    \ name=\"VFREEBUSY\">\n           <C:time-range start=\"20060102T000000Z\"\n \
    \                          end=\"20060103T000000Z\"/>\n         </C:comp-filter>\n\
    \       </C:comp-filter>\n     </C:filter>\n   </C:calendar-query>\n   >> Response\
    \ <<\n   HTTP/1.1 207 Multi-Status\n   Date: Sat, 11 Nov 2006 09:32:12 GMT\n \
    \  Content-Type: application/xml; charset=\"utf-8\"\n   Content-Length: xxxx\n\
    \   <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n   <D:multistatus xmlns:D=\"\
    DAV:\"\n                  xmlns:C=\"urn:ietf:params:xml:ns:caldav\">\n     <D:response>\n\
    \       <D:href>http://cal.example.com/bernard/work/abcd8.ics</D:href>\n     \
    \  <D:propstat>\n         <D:prop>\n           <D:getetag>\"fffff-abcd8\"</D:getetag>\n\
    \           <C:calendar-data>BEGIN:VCALENDAR\n   VERSION:2.0\n   PRODID:-//Example\
    \ Corp.//CalDAV Client//EN\n   BEGIN:VFREEBUSY\n   ORGANIZER;CN=\"Bernard Desruisseaux\"\
    :mailto:bernard@example.com\n   UID:76ef34-54a3d2@example.com\n   DTSTAMP:20050530T123421Z\n\
    \   DTSTART:20060101T100000Z\n   DTEND:20060108T100000Z\n   FREEBUSY;FBTYPE=BUSY-TENTATIVE:20060102T100000Z/20060102T120000Z\n\
    \   END:VFREEBUSY\n   END:VCALENDAR\n   </C:calendar-data>\n         </D:prop>\n\
    \         <D:status>HTTP/1.1 200 OK</D:status>\n       </D:propstat>\n     </D:response>\n\
    \   </D:multistatus>\n"
- title: '7.8.5.  Example: Retrieval of To-Dos by Alarm Time Range'
  contents:
  - "7.8.5.  Example: Retrieval of To-Dos by Alarm Time Range\n   In this example,\
    \ the client requests the server to return the VTODO\n   components that have\
    \ an alarm trigger scheduled in the specified time\n   range.\n   See Appendix\
    \ B for the calendar data being targeted by this example.\n   >> Request <<\n\
    \   REPORT /bernard/work/ HTTP/1.1\n   Host: cal.example.com\n   Depth: 1\n  \
    \ Content-Type: application/xml; charset=\"utf-8\"\n   Content-Length: xxxx\n\
    \   <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n   <C:calendar-query xmlns:C=\"\
    urn:ietf:params:xml:ns:caldav\">\n     <D:prop xmlns:D=\"DAV:\">\n       <D:getetag/>\n\
    \       <C:calendar-data/>\n     </D:prop>\n     <C:filter>\n       <C:comp-filter\
    \ name=\"VCALENDAR\">\n         <C:comp-filter name=\"VTODO\">\n           <C:comp-filter\
    \ name=\"VALARM\">\n             <C:time-range start=\"20060106T100000Z\"\n  \
    \                           end=\"20060107T100000Z\"/>\n           </C:comp-filter>\n\
    \         </C:comp-filter>\n       </C:comp-filter>\n     </C:filter>\n   </C:calendar-query>\n\
    \   >> Response <<\n   HTTP/1.1 207 Multi-Status\n   Date: Sat, 11 Nov 2006 09:32:12\
    \ GMT\n   Content-Type: application/xml; charset=\"utf-8\"\n   Content-Length:\
    \ xxxx\n   <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n   <D:multistatus xmlns:D=\"\
    DAV:\"\n                  xmlns:C=\"urn:ietf:params:xml:ns:caldav\">\n     <D:response>\n\
    \       <D:href>http://cal.example.com/bernard/work/abcd4.ics</D:href>\n     \
    \  <D:propstat>\n         <D:prop>\n           <D:getetag>\"fffff-abcd4\"</D:getetag>\n\
    \           <C:calendar-data>BEGIN:VCALENDAR\n   VERSION:2.0\n   PRODID:-//Example\
    \ Corp.//CalDAV Client//EN\n   BEGIN:VTODO\n   DTSTAMP:20060205T235300Z\n   DUE;TZID=US/Eastern:20060106T120000\n\
    \   LAST-MODIFIED:20060205T235308Z\n   SEQUENCE:1\n   STATUS:NEEDS-ACTION\n  \
    \ SUMMARY:Task #2\n   UID:E10BA47467C5C69BB74E8720@example.com\n   BEGIN:VALARM\n\
    \   ACTION:AUDIO\n   TRIGGER;RELATED=START:-PT10M\n   END:VALARM\n   END:VTODO\n\
    \   END:VCALENDAR\n   </C:calendar-data>\n         </D:prop>\n         <D:status>HTTP/1.1\
    \ 200 OK</D:status>\n       </D:propstat>\n     </D:response>\n   </D:multistatus>\n"
- title: '7.8.6.  Example: Retrieval of Event by UID'
  contents:
  - "7.8.6.  Example: Retrieval of Event by UID\n   In this example, the client requests\
    \ the server to return the VEVENT\n   component that has the UID property set\
    \ to\n   \"DC6C50A017428C5216A2F1CD@example.com\".\n   See Appendix B for the\
    \ calendar data being targeted by this example.\n   >> Request <<\n   REPORT /bernard/work/\
    \ HTTP/1.1\n   Host: cal.example.com\n   Depth: 1\n   Content-Type: application/xml;\
    \ charset=\"utf-8\"\n   Content-Length: xxxx\n   <?xml version=\"1.0\" encoding=\"\
    utf-8\" ?>\n   <C:calendar-query xmlns:C=\"urn:ietf:params:xml:ns:caldav\">\n\
    \     <D:prop xmlns:D=\"DAV:\">\n       <D:getetag/>\n       <C:calendar-data/>\n\
    \     </D:prop>\n     <C:filter>\n       <C:comp-filter name=\"VCALENDAR\">\n\
    \         <C:comp-filter name=\"VEVENT\">\n           <C:prop-filter name=\"UID\"\
    >\n             <C:text-match collation=\"i;octet\"\n             >DC6C50A017428C5216A2F1CD@example.com</C:text-match>\n\
    \           </C:prop-filter>\n         </C:comp-filter>\n       </C:comp-filter>\n\
    \     </C:filter>\n   </C:calendar-query>\n   >> Response <<\n   HTTP/1.1 207\
    \ Multi-Status\n   Date: Sat, 11 Nov 2006 09:32:12 GMT\n   Content-Type: application/xml;\
    \ charset=\"utf-8\"\n   Content-Length: xxxx\n   <?xml version=\"1.0\" encoding=\"\
    utf-8\" ?>\n   <D:multistatus xmlns:D=\"DAV:\"\n                  xmlns:C=\"urn:ietf:params:xml:ns:caldav\"\
    >\n     <D:response>\n       <D:href>http://cal.example.com/bernard/work/abcd3.ics</D:href>\n\
    \       <D:propstat>\n         <D:prop>\n           <D:getetag>\"fffff-abcd3\"\
    </D:getetag>\n           <C:calendar-data>BEGIN:VCALENDAR\n   VERSION:2.0\n  \
    \ PRODID:-//Example Corp.//CalDAV Client//EN\n   BEGIN:VTIMEZONE\n   LAST-MODIFIED:20040110T032845Z\n\
    \   TZID:US/Eastern\n   BEGIN:DAYLIGHT\n   DTSTART:20000404T020000\n   RRULE:FREQ=YEARLY;BYDAY=1SU;BYMONTH=4\n\
    \   TZNAME:EDT\n   TZOFFSETFROM:-0500\n   TZOFFSETTO:-0400\n   END:DAYLIGHT\n\
    \   BEGIN:STANDARD\n   DTSTART:20001026T020000\n   RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=10\n\
    \   TZNAME:EST\n   TZOFFSETFROM:-0400\n   TZOFFSETTO:-0500\n   END:STANDARD\n\
    \   END:VTIMEZONE\n   BEGIN:VEVENT\n   ATTENDEE;PARTSTAT=ACCEPTED;ROLE=CHAIR:mailto:cyrus@example.com\n\
    \   ATTENDEE;PARTSTAT=NEEDS-ACTION:mailto:lisa@example.com\n   DTSTAMP:20060206T001220Z\n\
    \   DTSTART;TZID=US/Eastern:20060104T100000\n   DURATION:PT1H\n   LAST-MODIFIED:20060206T001330Z\n\
    \   ORGANIZER:mailto:cyrus@example.com\n   SEQUENCE:1\n   STATUS:TENTATIVE\n \
    \  SUMMARY:Event #3\n   UID:DC6C50A017428C5216A2F1CD@example.com\n   X-ABC-GUID:E1CX5Dr-0007ym-Hz@example.com\n\
    \   END:VEVENT\n   END:VCALENDAR\n   </C:calendar-data>\n         </D:prop>\n\
    \         <D:status>HTTP/1.1 200 OK</D:status>\n       </D:propstat>\n     </D:response>\n\
    \   </D:multistatus>\n"
- title: '7.8.7.  Example: Retrieval of Events by PARTSTAT'
  contents:
  - "7.8.7.  Example: Retrieval of Events by PARTSTAT\n   In this example, the client\
    \ requests the server to return the VEVENT\n   components that have the ATTENDEE\
    \ property with the value\n   \"mailto:lisa@example.com\" and for which the PARTSTAT\
    \ parameter is set\n   to NEEDS-ACTION.\n   See Appendix B for the calendar data\
    \ being targeted by this example.\n   >> Request <<\n   REPORT /bernard/work/\
    \ HTTP/1.1\n   Host: cal.example.com\n   Depth: 1\n   Content-Type: application/xml;\
    \ charset=\"utf-8\"\n   Content-Length: xxxx\n   <?xml version=\"1.0\" encoding=\"\
    utf-8\" ?>\n   <C:calendar-query xmlns:C=\"urn:ietf:params:xml:ns:caldav\">\n\
    \     <D:prop xmlns:D=\"DAV:\">\n       <D:getetag/>\n       <C:calendar-data/>\n\
    \     </D:prop>\n     <C:filter>\n       <C:comp-filter name=\"VCALENDAR\">\n\
    \         <C:comp-filter name=\"VEVENT\">\n           <C:prop-filter name=\"ATTENDEE\"\
    >\n             <C:text-match collation=\"i;ascii-casemap\"\n              >mailto:lisa@example.com</C:text-match>\n\
    \             <C:param-filter name=\"PARTSTAT\">\n               <C:text-match\
    \ collation=\"i;ascii-casemap\"\n                >NEEDS-ACTION</C:text-match>\n\
    \             </C:param-filter>\n           </C:prop-filter>\n         </C:comp-filter>\n\
    \       </C:comp-filter>\n     </C:filter>\n   </C:calendar-query>\n   >> Response\
    \ <<\n   HTTP/1.1 207 Multi-Status\n   Date: Sat, 11 Nov 2006 09:32:12 GMT\n \
    \  Content-Type: application/xml; charset=\"utf-8\"\n   Content-Length: xxxx\n\
    \   <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n   <D:multistatus xmlns:D=\"\
    DAV:\"\n                  xmlns:C=\"urn:ietf:params:xml:ns:caldav\">\n     <D:response>\n\
    \       <D:href>http://cal.example.com/bernard/work/abcd3.ics</D:href>\n     \
    \  <D:propstat>\n         <D:prop>\n           <D:getetag>\"fffff-abcd3\"</D:getetag>\n\
    \           <C:calendar-data>BEGIN:VCALENDAR\n   VERSION:2.0\n   PRODID:-//Example\
    \ Corp.//CalDAV Client//EN\n   BEGIN:VTIMEZONE\n   LAST-MODIFIED:20040110T032845Z\n\
    \   TZID:US/Eastern\n   BEGIN:DAYLIGHT\n   DTSTART:20000404T020000\n   RRULE:FREQ=YEARLY;BYDAY=1SU;BYMONTH=4\n\
    \   TZNAME:EDT\n   TZOFFSETFROM:-0500\n   TZOFFSETTO:-0400\n   END:DAYLIGHT\n\
    \   BEGIN:STANDARD\n   DTSTART:20001026T020000\n   RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=10\n\
    \   TZNAME:EST\n   TZOFFSETFROM:-0400\n   TZOFFSETTO:-0500\n   END:STANDARD\n\
    \   END:VTIMEZONE\n   BEGIN:VEVENT\n   ATTENDEE;PARTSTAT=ACCEPTED;ROLE=CHAIR:mailto:cyrus@example.com\n\
    \   ATTENDEE;PARTSTAT=NEEDS-ACTION:mailto:lisa@example.com\n   DTSTAMP:20060206T001220Z\n\
    \   DTSTART;TZID=US/Eastern:20060104T100000\n   DURATION:PT1H\n   LAST-MODIFIED:20060206T001330Z\n\
    \   ORGANIZER:mailto:cyrus@example.com\n   SEQUENCE:1\n   STATUS:TENTATIVE\n \
    \  SUMMARY:Event #3\n   UID:DC6C50A017428C5216A2F1CD@example.com\n   X-ABC-GUID:E1CX5Dr-0007ym-Hz@example.com\n\
    \   END:VEVENT\n   END:VCALENDAR\n   </C:calendar-data>\n         </D:prop>\n\
    \         <D:status>HTTP/1.1 200 OK</D:status>\n       </D:propstat>\n     </D:response>\n\
    \   </D:multistatus>\n"
- title: '7.8.8.  Example: Retrieval of Events Only'
  contents:
  - "7.8.8.  Example: Retrieval of Events Only\n   In this example, the client requests\
    \ the server to return all VEVENT\n   components.\n   See Appendix B for the calendar\
    \ data being targeted by this example.\n   >> Request <<\n   REPORT /bernard/work/\
    \ HTTP/1.1\n   Host: cal.example.com\n   Depth: 1\n   Content-Type: application/xml;\
    \ charset=\"utf-8\"\n   Content-Length: xxxx\n   <?xml version=\"1.0\" encoding=\"\
    utf-8\" ?>\n   <C:calendar-query xmlns:C=\"urn:ietf:params:xml:ns:caldav\">\n\
    \     <D:prop xmlns:D=\"DAV:\">\n       <D:getetag/>\n       <C:calendar-data/>\n\
    \     </D:prop>\n     <C:filter>\n       <C:comp-filter name=\"VCALENDAR\">\n\
    \         <C:comp-filter name=\"VEVENT\"/>\n       </C:comp-filter>\n     </C:filter>\n\
    \   </C:calendar-query>\n   >> Response <<\n   HTTP/1.1 207 Multi-Status\n   Date:\
    \ Sat, 11 Nov 2006 09:32:12 GMT\n   Content-Type: application/xml; charset=\"\
    utf-8\"\n   Content-Length: xxxx\n   <?xml version=\"1.0\" encoding=\"utf-8\"\
    \ ?>\n   <D:multistatus xmlns:D=\"DAV:\"\n                  xmlns:C=\"urn:ietf:params:xml:ns:caldav\"\
    >\n     <D:response>\n       <D:href>http://cal.example.com/bernard/work/abcd1.ics</D:href>\n\
    \       <D:propstat>\n         <D:prop>\n           <D:getetag>\"fffff-abcd1\"\
    </D:getetag>\n           <C:calendar-data>BEGIN:VCALENDAR\n   VERSION:2.0\n  \
    \ PRODID:-//Example Corp.//CalDAV Client//EN\n   BEGIN:VTIMEZONE\n   LAST-MODIFIED:20040110T032845Z\n\
    \   TZID:US/Eastern\n   BEGIN:DAYLIGHT\n   DTSTART:20000404T020000\n   RRULE:FREQ=YEARLY;BYDAY=1SU;BYMONTH=4\n\
    \   TZNAME:EDT\n   TZOFFSETFROM:-0500\n   TZOFFSETTO:-0400\n   END:DAYLIGHT\n\
    \   BEGIN:STANDARD\n   DTSTART:20001026T020000\n   RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=10\n\
    \   TZNAME:EST\n   TZOFFSETFROM:-0400\n   TZOFFSETTO:-0500\n   END:STANDARD\n\
    \   END:VTIMEZONE\n   BEGIN:VEVENT\n   DTSTAMP:20060206T001102Z\n   DTSTART;TZID=US/Eastern:20060102T100000\n\
    \   DURATION:PT1H\n   SUMMARY:Event #1\n   Description:Go Steelers!\n   UID:74855313FA803DA593CD579A@example.com\n\
    \   END:VEVENT\n   END:VCALENDAR\n   </C:calendar-data>\n         </D:prop>\n\
    \         <D:status>HTTP/1.1 200 OK</D:status>\n       </D:propstat>\n     </D:response>\n\
    \     <D:response>\n       <D:href>http://cal.example.com/bernard/work/abcd2.ics</D:href>\n\
    \       <D:propstat>\n         <D:prop>\n           <D:getetag>\"fffff-abcd2\"\
    </D:getetag>\n           <C:calendar-data>BEGIN:VCALENDAR\n   VERSION:2.0\n  \
    \ PRODID:-//Example Corp.//CalDAV Client//EN\n   BEGIN:VTIMEZONE\n   LAST-MODIFIED:20040110T032845Z\n\
    \   TZID:US/Eastern\n   BEGIN:DAYLIGHT\n   DTSTART:20000404T020000\n   RRULE:FREQ=YEARLY;BYDAY=1SU;BYMONTH=4\n\
    \   TZNAME:EDT\n   TZOFFSETFROM:-0500\n   TZOFFSETTO:-0400\n   END:DAYLIGHT\n\
    \   BEGIN:STANDARD\n   DTSTART:20001026T020000\n   RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=10\n\
    \   TZNAME:EST\n   TZOFFSETFROM:-0400\n   TZOFFSETTO:-0500\n   END:STANDARD\n\
    \   END:VTIMEZONE\n   BEGIN:VEVENT\n   DTSTAMP:20060206T001121Z\n   DTSTART;TZID=US/Eastern:20060102T120000\n\
    \   DURATION:PT1H\n   RRULE:FREQ=DAILY;COUNT=5\n   SUMMARY:Event #2\n   UID:00959BC664CA650E933C892C@example.com\n\
    \   END:VEVENT\n   BEGIN:VEVENT\n   DTSTAMP:20060206T001121Z\n   DTSTART;TZID=US/Eastern:20060104T140000\n\
    \   DURATION:PT1H\n   RECURRENCE-ID;TZID=US/Eastern:20060104T120000\n   SUMMARY:Event\
    \ #2 bis\n   UID:00959BC664CA650E933C892C@example.com\n   END:VEVENT\n   BEGIN:VEVENT\n\
    \   DTSTAMP:20060206T001121Z\n   DTSTART;TZID=US/Eastern:20060106T140000\n   DURATION:PT1H\n\
    \   RECURRENCE-ID;TZID=US/Eastern:20060106T120000\n   SUMMARY:Event #2 bis bis\n\
    \   UID:00959BC664CA650E933C892C@example.com\n   END:VEVENT\n   END:VCALENDAR\n\
    \   </C:calendar-data>\n         </D:prop>\n         <D:status>HTTP/1.1 200 OK</D:status>\n\
    \       </D:propstat>\n     </D:response>\n     <D:response>\n       <D:href>http://cal.example.com/bernard/work/abcd3.ics</D:href>\n\
    \       <D:propstat>\n         <D:prop>\n           <D:getetag>\"fffff-abcd3\"\
    </D:getetag>\n           <C:calendar-data>BEGIN:VCALENDAR\n   VERSION:2.0\n  \
    \ PRODID:-//Example Corp.//CalDAV Client//EN\n   BEGIN:VTIMEZONE\n   LAST-MODIFIED:20040110T032845Z\n\
    \   TZID:US/Eastern\n   BEGIN:DAYLIGHT\n   DTSTART:20000404T020000\n   RRULE:FREQ=YEARLY;BYDAY=1SU;BYMONTH=4\n\
    \   TZNAME:EDT\n   TZOFFSETFROM:-0500\n   TZOFFSETTO:-0400\n   END:DAYLIGHT\n\
    \   BEGIN:STANDARD\n   DTSTART:20001026T020000\n   RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=10\n\
    \   TZNAME:EST\n   TZOFFSETFROM:-0400\n   TZOFFSETTO:-0500\n   END:STANDARD\n\
    \   END:VTIMEZONE\n   BEGIN:VEVENT\n   ATTENDEE;PARTSTAT=ACCEPTED;ROLE=CHAIR:mailto:cyrus@example.com\n\
    \   ATTENDEE;PARTSTAT=NEEDS-ACTION:mailto:lisa@example.com\n   DTSTAMP:20060206T001220Z\n\
    \   DTSTART;TZID=US/Eastern:20060104T100000\n   DURATION:PT1H\n   LAST-MODIFIED:20060206T001330Z\n\
    \   ORGANIZER:mailto:cyrus@example.com\n   SEQUENCE:1\n   STATUS:TENTATIVE\n \
    \  SUMMARY:Event #3\n   UID:DC6C50A017428C5216A2F1CD@example.com\n   X-ABC-GUID:E1CX5Dr-0007ym-Hz@example.com\n\
    \   END:VEVENT\n   END:VCALENDAR\n   </C:calendar-data>\n         </D:prop>\n\
    \         <D:status>HTTP/1.1 200 OK</D:status>\n       </D:propstat>\n     </D:response>\n\
    \   </D:multistatus>\n"
- title: '7.8.9.  Example: Retrieval of All Pending To-Dos'
  contents:
  - "7.8.9.  Example: Retrieval of All Pending To-Dos\n   In this example, the client\
    \ requests the server to return all VTODO\n   components that do not include a\
    \ COMPLETED property and do not have a\n   STATUS property value matching CANCELLED,\
    \ i.e., VTODOs that still\n   need to be worked on.\n   See Appendix B for the\
    \ calendar data being targeted by this example.\n   >> Request <<\n   REPORT /bernard/work/\
    \ HTTP/1.1\n   Host: cal.example.com\n   Depth: 1\n   Content-Type: application/xml;\
    \ charset=\"utf-8\"\n   Content-Length: xxxx\n   <?xml version=\"1.0\" encoding=\"\
    utf-8\" ?>\n   <C:calendar-query xmlns:C=\"urn:ietf:params:xml:ns:caldav\">\n\
    \     <D:prop xmlns:D=\"DAV:\">\n       <D:getetag/>\n       <C:calendar-data/>\n\
    \     </D:prop>\n     <C:filter>\n       <C:comp-filter name=\"VCALENDAR\">\n\
    \         <C:comp-filter name=\"VTODO\">\n           <C:prop-filter name=\"COMPLETED\"\
    >\n             <C:is-not-defined/>\n           </C:prop-filter>\n           <C:prop-filter\
    \ name=\"STATUS\">\n             <C:text-match\n                negate-condition=\"\
    yes\">CANCELLED</C:text-match>\n           </C:prop-filter>\n         </C:comp-filter>\n\
    \       </C:comp-filter>\n     </C:filter>\n   </C:calendar-query>\n   >> Response\
    \ <<\n   HTTP/1.1 207 Multi-Status\n   Date: Sat, 11 Nov 2006 09:32:12 GMT\n \
    \  Content-Type: application/xml; charset=\"utf-8\"\n   Content-Length: xxxx\n\
    \   <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n   <D:multistatus xmlns:D=\"\
    DAV:\"\n                  xmlns:C=\"urn:ietf:params:xml:ns:caldav\">\n     <D:response>\n\
    \       <D:href>http://cal.example.com/bernard/work/abcd4.ics</D:href>\n     \
    \  <D:propstat>\n         <D:prop>\n           <D:getetag>\"fffff-abcd4\"</D:getetag>\n\
    \           <C:calendar-data>BEGIN:VCALENDAR\n   VERSION:2.0\n   PRODID:-//Example\
    \ Corp.//CalDAV Client//EN\n   BEGIN:VTODO\n   DTSTAMP:20060205T235335Z\n   DUE;VALUE=DATE:20060104\n\
    \   STATUS:NEEDS-ACTION\n   SUMMARY:Task #1\n   UID:DDDEEB7915FA61233B861457@example.com\n\
    \   BEGIN:VALARM\n   ACTION:AUDIO\n   TRIGGER;RELATED=START:-PT10M\n   END:VALARM\n\
    \   END:VTODO\n   END:VCALENDAR\n   </C:calendar-data>\n         </D:prop>\n \
    \        <D:status>HTTP/1.1 200 OK</D:status>\n       </D:propstat>\n     </D:response>\n\
    \     <D:response>\n       <D:href>http://cal.example.com/bernard/work/abcd5.ics</D:href>\n\
    \       <D:propstat>\n         <D:prop>\n           <D:getetag>\"fffff-abcd5\"\
    </D:getetag>\n           <C:calendar-data>BEGIN:VCALENDAR\n   VERSION:2.0\n  \
    \ PRODID:-//Example Corp.//CalDAV Client//EN\n   BEGIN:VTODO\n   DTSTAMP:20060205T235300Z\n\
    \   DUE;VALUE=DATE:20060106\n   LAST-MODIFIED:20060205T235308Z\n   SEQUENCE:1\n\
    \   STATUS:NEEDS-ACTION\n   SUMMARY:Task #2\n   UID:E10BA47467C5C69BB74E8720@example.com\n\
    \   BEGIN:VALARM\n   ACTION:AUDIO\n   TRIGGER;RELATED=START:-PT10M\n   END:VALARM\n\
    \   END:VTODO\n   END:VCALENDAR\n   </C:calendar-data>\n         </D:prop>\n \
    \        <D:status>HTTP/1.1 200 OK</D:status>\n       </D:propstat>\n     </D:response>\n\
    \   </D:multistatus>\n"
- title: '7.8.10.  Example: Attempt to Query Unsupported Property'
  contents:
  - "7.8.10.  Example: Attempt to Query Unsupported Property\n   In this example,\
    \ the client requests the server to return all VEVENT\n   components that include\
    \ an X-ABC-GUID property with a value matching\n   \"ABC\".  However, the server\
    \ does not support querying that non-\n   standard property, and instead returns\
    \ an error response.\n   See Appendix B for the calendar data being targeted by\
    \ this example.\n   >> Request <<\n   REPORT /bernard/work/ HTTP/1.1\n   Host:\
    \ cal.example.com\n   Depth: 1\n   Content-Type: application/xml; charset=\"utf-8\"\
    \n   Content-Length: xxxx\n   <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n  \
    \ <C:calendar-query xmlns:C=\"urn:ietf:params:xml:ns:caldav\">\n     <D:prop xmlns:D=\"\
    DAV:\">\n       <D:getetag/>\n       <C:calendar-data/>\n     </D:prop>\n    \
    \ <C:filter>\n       <C:comp-filter name=\"VCALENDAR\">\n         <C:comp-filter\
    \ name=\"VEVENT\">\n           <C:prop-filter name=\"X-ABC-GUID\">\n         \
    \    <C:text-match>ABC</C:text-match>\n           </C:prop-filter>\n         </C:comp-filter>\n\
    \       </C:comp-filter>\n     </C:filter>\n   </C:calendar-query>\n   >> Response\
    \ <<\n   HTTP/1.1 403 Forbidden\n   Date: Sat, 11 Nov 2005 09:32:12 GMT\n   Content-Type:\
    \ application/xml; charset=\"utf-8\"\n   Content-Length: xxxx\n   <?xml version=\"\
    1.0\" encoding=\"utf-8\" ?>\n   <D:error>\n     <C:supported-filter>\n       <C:prop-filter\
    \ name=\"X-ABC-GUID\"/>\n     </C:supported-filter>\n   </D:error>\n"
- title: 7.9.  CALDAV:calendar-multiget REPORT
  contents:
  - "7.9.  CALDAV:calendar-multiget REPORT\n   The CALDAV:calendar-multiget REPORT\
    \ is used to retrieve specific\n   calendar object resources from within a collection,\
    \ if the Request-\n   URI is a collection, or to retrieve a specific calendar\
    \ object\n   resource, if the Request-URI is a calendar object resource.  This\n\
    \   report is similar to the CALDAV:calendar-query REPORT (see\n   Section 7.8),\
    \ except that it takes a list of DAV:href elements,\n   instead of a CALDAV:filter\
    \ element, to determine which calendar\n   object resources to return.\n   Support\
    \ for the CALDAV:calendar-multiget REPORT is REQUIRED.\n   Marshalling:\n    \
    \  The request body MUST be a CALDAV:calendar-multiget XML element\n      (see\
    \ Section 9.10).  If the Request-URI is a collection resource,\n      then the\
    \ DAV:href elements MUST refer to calendar object resources\n      within that\
    \ collection, and they MAY refer to calendar object\n      resources at any depth\
    \ within the collection.  As a result, the\n      \"Depth\" header MUST be ignored\
    \ by the server and SHOULD NOT be\n      sent by the client.  If the Request-URI\
    \ refers to a non-collection\n      resource, then there MUST be a single DAV:href\
    \ element that is\n      equivalent to the Request-URI.\n      The response body\
    \ for a successful request MUST be a DAV:\n      multistatus XML element.\n  \
    \    The response body for a successful CALDAV:calendar-multiget REPORT\n    \
    \  request MUST contain a DAV:response element for each calendar\n      object\
    \ resource referenced by the provided set of DAV:href\n      elements.  Calendar\
    \ data is being returned in the CALDAV:calendar-\n      data element inside the\
    \ DAV:prop element.\n      In the case of an error accessing any of the provided\
    \ DAV:href\n      resources, the server MUST return the appropriate error status\n\
    \      code in the DAV:status element of the corresponding DAV:response\n    \
    \  element.\n   Preconditions:\n      (CALDAV:supported-calendar-data): The attributes\
    \ \"content-type\"\n      and \"version\" of the CALDAV:calendar-data XML elements\
    \ (see\n      Section 9.6) specify a media type supported by the server for\n\
    \      calendar object resources.\n      (CALDAV:min-date-time): Any XML element\
    \ specifying a range of time\n      MUST have its start or end DATE or DATE-TIME\
    \ values greater than\n      or equal to the value of the CALDAV:min-date-time\
    \ property value\n      (Section 5.2.6) on the calendar collections being targeted\
    \ by the\n      REPORT request;\n      (CALDAV:max-date-time): Any XML element\
    \ specifying a range of time\n      MUST have its start or end DATE or DATE-TIME\
    \ values less than or\n      equal to the value of the CALDAV:max-date-time property\
    \ value\n      (Section 5.2.7) on the calendar collections being targeted by the\n\
    \      REPORT request;\n   Postconditions:\n      None.\n"
- title: '7.9.1.  Example: Successful CALDAV:calendar-multiget REPORT'
  contents:
  - "7.9.1.  Example: Successful CALDAV:calendar-multiget REPORT\n   In this example,\
    \ the client requests the server to return specific\n   properties of the VEVENT\
    \ components referenced by specific URIs.  In\n   addition, the DAV:getetag property\
    \ is also requested and returned as\n   part of the response.  Note that in this\
    \ example, the resource at\n   http://cal.example.com/bernard/work/mtg1.ics does\
    \ not exist,\n   resulting in an error status response.\n   See Appendix B for\
    \ the calendar data being targeted by this example.\n   >> Request <<\n   REPORT\
    \ /bernard/work/ HTTP/1.1\n   Host: cal.example.com\n   Content-Type: application/xml;\
    \ charset=\"utf-8\"\n   Content-Length: xxxx\n   <?xml version=\"1.0\" encoding=\"\
    utf-8\" ?>\n   <C:calendar-multiget xmlns:D=\"DAV:\"\n                    xmlns:C=\"\
    urn:ietf:params:xml:ns:caldav\">\n     <D:prop>\n       <D:getetag/>\n       <C:calendar-data/>\n\
    \     </D:prop>\n     <D:href>/bernard/work/abcd1.ics</D:href>\n     <D:href>/bernard/work/mtg1.ics</D:href>\n\
    \   </C:calendar-multiget>\n   >> Response <<\n   HTTP/1.1 207 Multi-Status\n\
    \   Date: Sat, 11 Nov 2006 09:32:12 GMT\n   Content-Type: application/xml; charset=\"\
    utf-8\"\n   Content-Length: xxxx\n   <?xml version=\"1.0\" encoding=\"utf-8\"\
    \ ?>\n   <D:multistatus xmlns:D=\"DAV:\"\n                  xmlns:C=\"urn:ietf:params:xml:ns:caldav\"\
    >\n     <D:response>\n       <D:href>http://cal.example.com/bernard/work/abcd1.ics</D:href>\n\
    \       <D:propstat>\n         <D:prop>\n           <D:getetag>\"fffff-abcd1\"\
    </D:getetag>\n           <C:calendar-data>BEGIN:VCALENDAR\n   VERSION:2.0\n  \
    \ PRODID:-//Example Corp.//CalDAV Client//EN\n   BEGIN:VTIMEZONE\n   LAST-MODIFIED:20040110T032845Z\n\
    \   TZID:US/Eastern\n   BEGIN:DAYLIGHT\n   DTSTART:20000404T020000\n   RRULE:FREQ=YEARLY;BYDAY=1SU;BYMONTH=4\n\
    \   TZNAME:EDT\n   TZOFFSETFROM:-0500\n   TZOFFSETTO:-0400\n   END:DAYLIGHT\n\
    \   BEGIN:STANDARD\n   DTSTART:20001026T020000\n   RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=10\n\
    \   TZNAME:EST\n   TZOFFSETFROM:-0400\n   TZOFFSETTO:-0500\n   END:STANDARD\n\
    \   END:VTIMEZONE\n   BEGIN:VEVENT\n   DTSTAMP:20060206T001102Z\n   DTSTART;TZID=US/Eastern:20060102T100000\n\
    \   DURATION:PT1H\n   SUMMARY:Event #1\n   Description:Go Steelers!\n   UID:74855313FA803DA593CD579A@example.com\n\
    \   END:VEVENT\n   END:VCALENDAR\n   </C:calendar-data>\n         </D:prop>\n\
    \         <D:status>HTTP/1.1 200 OK</D:status>\n       </D:propstat>\n     </D:response>\n\
    \     <D:response>\n       <D:href>http://cal.example.com/bernard/work/mtg1.ics</D:href>\n\
    \       <D:status>HTTP/1.1 404 Not Found</D:status>\n     </D:response>\n   </D:multistatus>\n"
- title: 7.10.  CALDAV:free-busy-query REPORT
  contents:
  - "7.10.  CALDAV:free-busy-query REPORT\n   The CALDAV:free-busy-query REPORT generates\
    \ a VFREEBUSY component\n   containing free busy information for all the calendar\
    \ object\n   resources targeted by the request and that have the CALDAV:read-free-\n\
    \   busy or DAV:read privilege granted to the current user.\n   Only VEVENT components\
    \ without a TRANSP property or with the TRANSP\n   property set to OPAQUE, and\
    \ VFREEBUSY components SHOULD be considered\n   in generating the free busy time\
    \ information.\n   In the case of VEVENT components, the free or busy time type\
    \ (FBTYPE)\n   of the FREEBUSY properties in the returned VFREEBUSY component\
    \ SHOULD\n   be derived from the value of the TRANSP and STATUS properties, as\n\
    \   outlined in the table below:\n         +---------------------------++------------------+\n\
    \         |          VEVENT           ||    VFREEBUSY     |\n         +-------------+-------------++------------------+\n\
    \         | TRANSP      | STATUS      || FBTYPE           |\n         +=============+=============++==================+\n\
    \         |             | CONFIRMED   || BUSY             |\n         |      \
    \       | (default)   ||                  |\n         | OPAQUE      +-------------++------------------+\n\
    \         | (default)   | CANCELLED   || FREE             |\n         |      \
    \       +-------------++------------------+\n         |             | TENTATIVE\
    \   || BUSY-TENTATIVE   |\n         |             +-------------++------------------+\n\
    \         |             | x-name      || BUSY or          |\n         |      \
    \       |             || x-name           |\n         +-------------+-------------++------------------+\n\
    \         |             | CONFIRMED   ||                  |\n         | TRANSPARENT\
    \ | CANCELLED   || FREE             |\n         |             | TENTATIVE   ||\
    \                  |\n         |             | x-name      ||                \
    \  |\n         +-------------+-------------++------------------+\n   Duplicate\
    \ busy time periods with the same FBTYPE parameter value\n   SHOULD NOT be specified\
    \ in the returned VFREEBUSY component.  Servers\n   SHOULD coalesce consecutive\
    \ or overlapping busy time periods of the\n   same type.  Busy time periods with\
    \ different FBTYPE parameter values\n   MAY overlap.\n   Support for the CALDAV:free-busy-query\
    \ REPORT is REQUIRED.\n   Marshalling:\n      The request body MUST be a CALDAV:free-busy-query\
    \ XML element (see\n      Section 9.11), which MUST contain exactly one CALDAV:time-range\n\
    \      XML element, as defined in Section 9.9.\n      The request MAY include\
    \ a Depth header.  If no Depth header is\n      included, Depth:0 is assumed.\n\
    \      The response body for a successful request MUST be an iCalendar\n     \
    \ object that contains exactly one VFREEBUSY component that\n      describes the\
    \ busy time intervals for the calendar object\n      resources containing VEVENT,\
    \ or VFREEBUSY components that satisfy\n      the Depth value and for which the\
    \ current user is at least granted\n      the CALDAV:read-free-busy privilege.\
    \  If no calendar object\n      resources are found to satisfy these conditions,\
    \ a VFREEBUSY\n      component with no FREEBUSY property MUST be returned.  This\
    \ report\n      only returns busy time information.  Free time information can\
    \ be\n      inferred from the returned busy time information.\n      If the current\
    \ user is not granted the CALDAV:read-free-busy or\n      DAV:read privileges\
    \ on the Request-URI, the CALDAV:free-busy-query\n      REPORT request MUST fail\
    \ and return a 404 (Not Found) status\n      value.  This restriction will prevent\
    \ users from discovering URLs\n      of resources for which they are only granted\
    \ the CALDAV:read-free-\n      busy privilege.\n      The CALDAV:free-busy-query\
    \ REPORT request can only be run against\n      a collection (either a regular\
    \ collection or a calendar\n      collection).  An attempt to run the report on\
    \ a calendar object\n      resource MUST fail and return a 403 (Forbidden) status\
    \ value.\n   Preconditions:\n      None.\n   Postconditions:\n      (DAV:number-of-matches-within-limits):\
    \ The number of matching\n      calendar object resources must fall within server-specific,\n\
    \      predefined limits.  For example, this postcondition might fail if\n   \
    \   the specified CALDAV:time-range would cause an extremely large\n      number\
    \ of calendar object resources to be considered in computing\n      the response.\n"
- title: '7.10.1.  Example: Successful CALDAV:free-busy-query REPORT'
  contents:
  - "7.10.1.  Example: Successful CALDAV:free-busy-query REPORT\n   In this example,\
    \ the client requests the server to return free busy\n   information on the calendar\
    \ collection /bernard/work/, between 9:00\n   A.M. and 5:00 P.M. EST (2:00 P.M.\
    \ and 10:00 P.M. UTC) on the January\n   4, 2006.  The server responds, indicating\
    \ two busy time intervals of\n   one hour, one of which is tentative.\n   See\
    \ Appendix B for the calendar data being targeted by this example.\n   >> Request\
    \ <<\n   REPORT /bernard/work/ HTTP/1.1\n   Host: cal.example.com\n   Depth: 1\n\
    \   Content-Type: application/xml; charset=\"utf-8\"\n   Content-Length: xxxx\n\
    \   <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n   <C:free-busy-query xmlns:C=\"\
    urn:ietf:params:xml:ns:caldav\">\n     <C:time-range start=\"20060104T140000Z\"\
    \n                     end=\"20060105T220000Z\"/>\n   </C:free-busy-query>\n \
    \  >> Response <<\n   HTTP/1.1 200 OK\n   Date: Sat, 11 Nov 2006 09:32:12 GMT\n\
    \   Content-Type: text/calendar\n   Content-Length: xxxx\n   BEGIN:VCALENDAR\n\
    \   VERSION:2.0\n   PRODID:-//Example Corp.//CalDAV Server//EN\n   BEGIN:VFREEBUSY\n\
    \   DTSTAMP:20050125T090000Z\n   DTSTART:20060104T140000Z\n   DTEND:20060105T220000Z\n\
    \   FREEBUSY;FBTYPE=BUSY-TENTATIVE:20060104T150000Z/PT1H\n   FREEBUSY:20060104T190000Z/PT1H\n\
    \   END:VFREEBUSY\n   END:VCALENDAR\n"
- title: 8.  Guidelines
  contents:
  - '8.  Guidelines

    '
- title: 8.1.  Client-to-Client Interoperability
  contents:
  - "8.1.  Client-to-Client Interoperability\n   There are a number of actions clients\
    \ can take that will be legal\n   (the server will not return errors), but that\
    \ can degrade\n   interoperability with other client implementations accessing\
    \ the same\n   data.  For example, a recurrence rule could be replaced with a\
    \ set of\n   recurrence dates, a single recurring event could be replaced with\
    \ a\n   set of independent resources to represent each recurrence, or the\n  \
    \ start/end time values can be translated from the original time zone\n   to another\
    \ time zone.  Although this advice amounts to iCalendar\n   interoperability best\
    \ practices and is not limited only to CalDAV\n   usage, interoperability problems\
    \ are likely to be more evident in\n   CalDAV use cases.\n"
- title: 8.2.  Synchronization Operations
  contents:
  - "8.2.  Synchronization Operations\n   WebDAV already provides functionality required\
    \ to synchronize a\n   collection or set of collections, to make changes offline,\
    \ and\n   provides a simple way to resolve conflicts when reconnected.  ETags\n\
    \   are the key to making this work, but these are not required of all\n   WebDAV\
    \ servers.  Since offline functionality is more important to\n   calendar applications\
    \ than to some other WebDAV applications, CalDAV\n   servers MUST support ETags,\
    \ as specified in Section 5.3.4.\n"
- title: 8.2.1.  Use of Reports
  contents:
  - '8.2.1.  Use of Reports

    '
- title: 8.2.1.1.  Restrict the Time Range
  contents:
  - "8.2.1.1.  Restrict the Time Range\n   The reports provided in CalDAV can be used\
    \ by clients to optimize\n   their performance in terms of network bandwidth usage\
    \ and resource\n   consumption on the local client machine.  Both are certainly\
    \ major\n   considerations for mobile or handheld devices with limited capacity,\n\
    \   but they are also relevant to desktop client applications in cases\n   where\
    \ the calendar collections contain large amounts of data.\n   Typically, clients\
    \ present calendar data to users in views that span\n   a finite time interval,\
    \ so whenever possible, clients should only\n   retrieve calendar components from\
    \ the server using CALDAV:calendar-\n   query REPORT, combined with a CALDAV:time-range\
    \ element, to limit the\n   set of returned components to just those needed to\
    \ populate the\n   current view.\n"
- title: 8.2.1.2.  Synchronize by Time Range
  contents:
  - "8.2.1.2.  Synchronize by Time Range\n   Typically in a calendar, historical data\
    \ (events, to-dos, etc. that\n   have completed prior to the current date) do\
    \ not change, though they\n   may be deleted.  As a result, a client can speed\
    \ up the\n   synchronization process by only considering data for the present\
    \ time\n   and the future up to a reasonable limit (e.g., one week, one month).\n\
    \   If the user then tries to examine a portion of the calendar outside\n   the\
    \ range that has been synchronized, the client can perform another\n   synchronization\
    \ operation on the new time interval being examined.\n   This \"just-in-time\"\
    \ synchronization can minimize bandwidth for common\n   user interaction behaviors.\n"
- title: 8.2.1.3.  Synchronization Process
  contents:
  - "8.2.1.3.  Synchronization Process\n   If a client wants to support calendar data\
    \ synchronization, as\n   opposed to downloading calendar data each time it is\
    \ needed, the\n   client needs to cache the calendar object resource's URI and\
    \ ETag,\n   along with the actual calendar data.  While the URI remains static\n\
    \   for the lifetime of the calendar object resource, the ETag will\n   change\
    \ with each successive change to the calendar object resource.\n   Thus, to synchronize\
    \ a local data cache with the server, the client\n   can first fetch the URI/ETag\
    \ pairs for the time interval being\n   considered, and compare those results\
    \ with the cached data.  Any\n   cached component whose ETag differs from that\
    \ on the server needs to\n   be refreshed.\n   In order to properly detect the\
    \ changes between the server and client\n   data, the client will need to keep\
    \ a record of which calendar object\n   resources have been created, changed,\
    \ or deleted since the last\n   synchronization operation so that it can reconcile\
    \ those changes with\n   the data on the server.\n   Here's an example of how\
    \ to do that:\n   The client issues a CALDAV:calendar-query REPORT request for\
    \ a\n   specific time range and asks for only the DAV:getetag property to be\n\
    \   returned:\n   REPORT /bernard/work/ HTTP/1.1\n   Host: cal.example.com\n \
    \  Depth: 1\n   Content-Type: application/xml; charset=\"utf-8\"\n   Content-Length:\
    \ xxxx\n   <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n   <C:calendar-query xmlns:D=\"\
    DAV:\"\n                     xmlns:C=\"urn:ietf:params:xml:ns:caldav\">\n    \
    \ <D:prop>\n       <D:getetag/>\n     </D:prop>\n     <C:filter>\n       <C:comp-filter\
    \ name=\"VCALENDAR\">\n         <C:comp-filter name=\"VEVENT\">\n           <C:time-range\
    \ start=\"20040902T000000Z\"\n                           end=\"20040903T000000Z\"\
    />\n         </C:comp-filter>\n       </C:comp-filter>\n     </C:filter>\n   </C:calendar-query>\n\
    \   The client then uses the results to determine which calendar object\n   resources\
    \ have changed, been created, or deleted on the server, and\n   how those relate\
    \ to locally cached calendar object resources that may\n   have changed, been\
    \ created, or deleted.  If the client determines\n   that there are calendar object\
    \ resources on the server that need to\n   be fetched, the client issues a CALDAV:calendar-multiget\
    \ REPORT\n   request to fetch its calendar data:\n   REPORT /bernard/work/ HTTP/1.1\n\
    \   Host: cal.example.com\n   Content-Type: application/xml; charset=\"utf-8\"\
    \n   Content-Length: xxxx\n   <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n  \
    \ <C:calendar-multiget xmlns:D=\"DAV:\"\n                        xmlns:C=\"urn:ietf:params:xml:ns:caldav\"\
    >\n     <D:prop>\n       <D:getetag/>\n       <C:calendar-data/>\n     </D:prop>\n\
    \     <D:href>/bernard/work/abcd1.ics</D:href>\n     <D:href>/bernard/work/mtg1.ics</D:href>\n\
    \   </C:calendar-multiget>\n"
- title: 8.2.2.  Restrict the Properties Returned
  contents:
  - "8.2.2.  Restrict the Properties Returned\n   A client may not need all the calendar\
    \ properties of a calendar\n   object resource when presenting information to\
    \ the user.  Since some\n   calendar property values can be large (e.g., ATTACH\
    \ or ATTENDEE), a\n   client can choose to restrict the calendar properties to\
    \ be returned\n   in a calendaring REPORT request to those it knows it will use.\n\
    \   However, if a client needs to make a change to a calendar object\n   resource,\
    \ it can only change the entire calendar object resource via\n   a PUT request.\
    \  There is currently no way to incrementally make a\n   change to a set of calendar\
    \ properties of a calendar object resource.\n   As a result, the client will have\
    \ to get the entire calendar object\n   resource that is being changed.\n"
- title: 8.3.  Use of Locking
  contents:
  - "8.3.  Use of Locking\n   WebDAV locks can be used to prevent two clients that\
    \ are modifying\n   the same resource from either overwriting each others' changes\n\
    \   (though that problem can also be solved by using ETags) or wasting\n   time\
    \ making changes that will conflict with another set of changes.\n   In a multi-user\
    \ calendar system, an interactive calendar client could\n   lock an event while\
    \ the user is editing the event, and unlock the\n   event when the user finishes\
    \ or cancels.  Locks can also be used to\n   prevent changes while data is being\
    \ reorganized.  For example, a\n   calendar client might lock two calendar collections\
    \ prior to moving a\n   bunch of calendar resources from one to another.\n   Clients\
    \ are responsible for requesting a lock timeout period that is\n   appropriate\
    \ to the use case.  When the user explicitly decides to\n   reserve a resource\
    \ and prevent other changes, a long timeout might be\n   appropriate, but in cases\
    \ where the client automatically decides to\n   lock the resource, the timeout\
    \ should be short (and the client can\n   always refresh the lock should it need\
    \ to).  A short lock timeout\n   means that if the client is unable to remove\
    \ the lock, the other\n   calendar users aren't prevented from making changes.\n"
- title: 8.4.  Finding Calendars
  contents:
  - "8.4.  Finding Calendars\n   Much of the time, a calendar client (or agent) will\
    \ discover a new\n   calendar's location by being provided directly with the URL.\
    \  For\n   example, a user will type his or her own calendar location into\n \
    \  client configuration information or copy and paste a URL from email\n   into\
    \ the calendar application.  The client need only confirm that the\n   URL points\
    \ to a resource that is a calendar collection.  The client\n   may also be able\
    \ to browse WebDAV collections to find calendar\n   collections.\n   The choice\
    \ of HTTP URLs means that calendar object resources are\n   backward compatible\
    \ with existing software, but does have the\n   disadvantage that existing software\
    \ does not usually know to look at\n   the OPTIONS response to that URL to determine\
    \ what can be done with\n   it.  This is somewhat of a barrier for WebDAV usage\
    \ as well as with\n   CalDAV usage.  This specification does not offer a way through\
    \ this\n   other than making the information available in the OPTIONS response\n\
    \   should this be requested.\n   For calendar sharing and scheduling use cases,\
    \ one might wish to find\n   the calendar belonging to another user.  If the other\
    \ user has a\n   calendar in the same repository, that calendar can be found by\
    \ using\n   the principal namespace required by WebDAV ACL support.  For other\n\
    \   cases, the authors have no universal solution, but implementers can\n   consider\
    \ whether to use vCard [RFC2426] or LDAP [RFC4511] standards\n   together with\
    \ calendar attributes [RFC2739].\n   Because CalDAV requires servers to support\
    \ WebDAV ACL [RFC3744],\n   including principal namespaces, and with the addition\
    \ of the CALDAV:\n   calendar-home-set property, there are a couple options for\
    \ CalDAV\n   clients to find one's own calendar or another user's calendar.\n\
    \   In this case, a DAV:principal-match REPORT is used to find a named\n   property\
    \ (the CALDAV:calendar-home-set) on the Principal-URL of the\n   current user.\
    \  Using this, a WebDAV client can learn \"who am I\" and\n   \"where are my calendars\"\
    .  The REPORT request body looks like this:\n   <?xml version=\"1.0\" encoding=\"\
    utf-8\" ?>\n   <D:principal-match xmlns:D=\"DAV:\">\n     <D:self/>\n     <D:prop>\n\
    \       <C:calendar-home-set\n          xmlns:C=\"urn:ietf:params:xml:ns:caldav\"\
    />\n     </D:prop>\n   </D:principal-match>\n   To find other users' calendars,\
    \ the DAV:principal-property-search\n   REPORT can be used to filter on some properties\
    \ and return others.\n   To search for a calendar owned by a user named \"Laurie\"\
    , the REPORT\n   request body would look like this:\n   <?xml version=\"1.0\"\
    \ encoding=\"utf-8\" ?>\n   <D:principal-property-search xmlns:D=\"DAV:\">\n \
    \    <D:property-search>\n       <D:prop>\n         <D:displayname/>\n       </D:prop>\n\
    \       <D:match>Laurie</D:match>\n     </D:property-search>\n     <D:prop>\n\
    \       <C:calendar-home-set\n          xmlns:C=\"urn:ietf:params:xml:ns:caldav\"\
    />\n       <D:displayname/>\n     </D:prop>\n   </D:principal-property-search>\n\
    \   The server performs a case-sensitive or caseless search for a\n   matching\
    \ string subset of \"Laurie\" within the DAV:displayname\n   property.  Thus,\
    \ the server might return \"Laurie Dusseault\", \"Laurier\n   Desruisseaux\",\
    \ or \"Wilfrid Laurier\" as matching DAV:displayname\n   values, and return the\
    \ calendars for each of these.\n"
- title: 8.5.  Storing and Using Attachments
  contents:
  - "8.5.  Storing and Using Attachments\n   CalDAV clients MAY create attachments\
    \ in calendar components either\n   as inline or external.  This section contains\
    \ some guidelines for\n   creating and managing attachments.\n"
- title: 8.5.1.  Inline Attachments
  contents:
  - "8.5.1.  Inline Attachments\n   CalDAV clients MUST support inline attachments\
    \ as specified in\n   iCalendar [RFC2445].  CalDAV servers MUST support inline\
    \ attachments,\n   so clients can rely on being able to create attachments this\
    \ way.  On\n   the other hand, inline attachments have some drawbacks:\n   o \
    \ Servers MAY impose limitations on the size of calendar object\n      resources\
    \ (i.e., refusing PUT requests of very large iCalendar\n      objects).  Servers\
    \ that impose such limitations MUST use the\n      CALDAV:max-resource-size property\
    \ on a calendar collection to\n      inform the client as to what the limitation\
    \ is (see\n      Section 5.2.5).\n   o  Servers MAY impose storage quota limitations\
    \ on calendar\n      collections (See [RFC4331]).\n   o  Any change to a calendar\
    \ object resource containing an inline\n      attachment requires the entire inline\
    \ attachment to be re-\n      uploaded.\n   o  Clients synchronizing a changed\
    \ calendar object resource have to\n      download the entire calendar object\
    \ resource, even if the\n      attachment is unchanged.\n"
- title: 8.5.2.  External Attachments
  contents:
  - "8.5.2.  External Attachments\n   CalDAV clients SHOULD support downloading of\
    \ external attachments\n   referenced by arbitrary URI schemes, by either processing\
    \ them\n   directly, or by passing the attachment URI to a suitable \"helper\n\
    \   application\" for processing, if such an application exists.  CalDAV\n   clients\
    \ MUST support downloading of external attachments referenced\n   by the \"http\"\
    \ or \"https\" URI schemes.  An external attachment could\n   be:\n   o  In a\
    \ collection in the calendar collection containing the calendar\n      object\
    \ resource;\n   o  Somewhere else in the same repository that hosts the calendar\n\
    \      collection; or\n   o  On an HTTP or FTP server elsewhere.\n   CalDAV servers\
    \ MAY provide support for child collections in calendar\n   collections.  CalDAV\
    \ servers MAY allow the MKCOL method to create\n   child collections in calendar\
    \ collections.  Child collections of\n   calendar collections MAY contain any\
    \ type of resource except calendar\n   collections that they MUST NOT contain.\
    \  Some CalDAV servers won't\n   allow child collections in calendar collections,\
    \ and it may be\n   possible on such a server to discover other locations where\n\
    \   attachments can be stored.\n   Clients are entirely responsible for maintaining\
    \ reference\n   consistency with calendar components that link to external\n \
    \  attachments.  A client deleting a calendar component with an external\n   attachment\
    \ might therefore also delete the attachment if that's\n   appropriate; however,\
    \ appropriateness can be very hard to determine.\n   A new component might easily\
    \ reference some pre-existing Web resource\n   that is intended to have independent\
    \ existence from the calendar\n   component (the \"attachment\" could be a major\
    \ proposal to be discussed\n   in a meeting, for instance).  Best practices will\
    \ probably emerge and\n   should probably be documented, but for now, clients\
    \ should be wary of\n   engaging in aggressive \"cleanup\" of external attachments.\
    \  A client\n   could involve the user in making decisions about removing\n  \
    \ unreferenced documents, or a client could be conservative in only\n   deleting\
    \ attachments it had created.\n   Also, clients are responsible for consistency\
    \ of permissions when\n   using external attachments.  One reason for servers\
    \ to support the\n   storage of attachments within child collections of calendar\n\
    \   collections is that ACL inheritance might make it easier to grant the\n  \
    \ same permissions to attachments that are granted on the calendar\n   collection.\
    \  Otherwise, it can be very difficult to keep permissions\n   synchronized. \
    \ With attachments stored on separate repositories, it\n   can be impossible to\
    \ keep permissions consistent -- the two\n   repositories may not support the\
    \ same permissions or have the same\n   set of principals.  Some systems have\
    \ used tickets or other anonymous\n   access control mechanisms to provide partially\
    \ satisfactory solutions\n   to these kinds of problems.\n"
- title: 8.6.  Storing and Using Alarms
  contents:
  - "8.6.  Storing and Using Alarms\n   Note that all CalDAV calendar collections\
    \ (including those the user\n   might treat as public or group calendars) can\
    \ contain alarm\n   information on events and to-dos.  Users can synchronize a\
    \ calendar\n   between multiple devices and decide to have alarms execute on a\n\
    \   different device than the device that created the alarm.  Not all\n   alarm\
    \ action types are completely interoperable (e.g., those that\n   name a sound\
    \ file to play).\n      When the action is AUDIO and the client is configured\
    \ to execute\n      the alarm, the client SHOULD play the suggested sound if it's\n\
    \      available or play another sound, but SHOULD NOT rewrite the alarm\n   \
    \   just to replace the suggested sound with a sound that's locally\n      available.\n\
    \      When the action is DISPLAY and the client is configured to execute\n  \
    \    the alarm, the client SHOULD execute a display alarm by displaying\n    \
    \  according to the suggested description or some reasonable\n      replacement,\
    \ but SHOULD NOT rewrite the alarm for its own\n      convenience.\n      When\
    \ the action is EMAIL and the client is incapable of sending\n      email, it\
    \ SHOULD ignore the alarm, but it MUST continue to\n      synchronize the alarm\
    \ itself.\n      This specification makes no recommendations about executing alarms\n\
    \      of type PROCEDURE, except to note that clients are advised to take\n  \
    \    care to avoid creating security holes by executing these.\n   Non-interoperable\
    \ alarm information (e.g., should somebody define a\n   color to be used in a\
    \ display alarm) should be put in non-standard\n   properties inside the VALARM\
    \ component in order to keep the basic\n   alarm usable on all devices.\n   Clients\
    \ that allow changes to calendar object resources MUST\n   synchronize the alarm\
    \ data that already exists in the resources.\n   Clients MAY execute alarms that\
    \ are downloaded in this fashion,\n   possibly based on user preference.  If a\
    \ client is only doing read\n   operations on a calendar and there is no risk\
    \ of losing alarm\n   information, then the client MAY discard alarm information.\n\
    \   This specification makes no attempt to provide multi-user alarms on\n   group\
    \ calendars or to find out for whom an alarm is intended.\n   Addressing those\
    \ issues might require extensions to iCalendar; for\n   example, to store alarms\
    \ per-user, or to indicate for which user a\n   VALARM was intended.  In the meantime,\
    \ clients might maximize\n   interoperability by generally not uploading alarm\
    \ information to\n   public, group, or resource calendars.\n"
- title: 9.  XML Element Definitions
  contents:
  - '9.  XML Element Definitions

    '
- title: 9.1.  CALDAV:calendar XML Element
  contents:
  - "9.1.  CALDAV:calendar XML Element\n   Name:  calendar\n   Namespace:  urn:ietf:params:xml:ns:caldav\n\
    \   Purpose:  Specifies the resource type of a calendar collection.\n   Description:\
    \  See Section 4.2.\n   Definition:\n         <!ELEMENT calendar EMPTY>\n"
- title: 9.2.  CALDAV:mkcalendar XML Element
  contents:
  - "9.2.  CALDAV:mkcalendar XML Element\n   Name:  mkcalendar\n   Namespace:  urn:ietf:params:xml:ns:caldav\n\
    \   Purpose:  Specifies a request that includes the WebDAV property\n      values\
    \ to be set for a calendar collection resource when it is\n      created.\n  \
    \ Description:  See Section 5.3.1.\n   Definition:\n         <!ELEMENT mkcalendar\
    \ (DAV:set)>\n"
- title: 9.3.  CALDAV:mkcalendar-response XML Element
  contents:
  - "9.3.  CALDAV:mkcalendar-response XML Element\n   Name:  mkcalendar-response\n\
    \   Namespace:  urn:ietf:params:xml:ns:caldav\n   Purpose:  Specifies a response\
    \ body for a successful MKCALENDAR\n      request.\n   Description:  See Section\
    \ 5.3.1.\n   Definition:\n         <!ELEMENT mkcalendar-response ANY>\n"
- title: 9.4.  CALDAV:supported-collation XML Element
  contents:
  - "9.4.  CALDAV:supported-collation XML Element\n   Name:  supported-collation\n\
    \   Namespace:  urn:ietf:params:xml:ns:caldav\n   Purpose:  Identifies a single\
    \ collation via its collation identifier,\n      as defined by [RFC4790].\n  \
    \ Description:  The CALDAV:supported-collation contains the text of a\n      collation\
    \ identifier, as described in Section 7.5.1.\n   Definition:\n         <!ELEMENT\
    \ supported-collation (#PCDATA)>\n         PCDATA value: collation identifier\n"
- title: 9.5.  CALDAV:calendar-query XML Element
  contents:
  - "9.5.  CALDAV:calendar-query XML Element\n   Name:  calendar-query\n   Namespace:\
    \  urn:ietf:params:xml:ns:caldav\n   Purpose:  Defines a report for querying calendar\
    \ object resources.\n   Description:  See Section 7.8.\n   Definition:\n     \
    \    <!ELEMENT calendar-query ((DAV:allprop |\n                              \
    \      DAV:propname |\n                                    DAV:prop)?, filter,\
    \ timezone?)>\n"
- title: 9.6.  CALDAV:calendar-data XML Element
  contents:
  - "9.6.  CALDAV:calendar-data XML Element\n   Name:  calendar-data\n   Namespace:\
    \  urn:ietf:params:xml:ns:caldav\n   Purpose:  Specified one of the following:\n\
    \      1.  A supported media type for calendar object resources when\n       \
    \   nested in the CALDAV:supported-calendar-data property;\n      2.  The parts\
    \ of a calendar object resource should be returned by\n          a calendaring\
    \ report;\n      3.  The content of a calendar object resource in a response to\
    \ a\n          calendaring report.\n   Description:  When nested in the CALDAV:supported-calendar-data\n\
    \      property, the CALDAV:calendar-data XML element specifies a media\n    \
    \  type supported by the CalDAV server for calendar object resources.\n      When\
    \ used in a calendaring REPORT request, the CALDAV:calendar-\n      data XML element\
    \ specifies which parts of calendar object\n      resources need to be returned\
    \ in the response.  If the CALDAV:\n      calendar-data XML element doesn't contain\
    \ any CALDAV:comp element,\n      calendar object resources will be returned in\
    \ their entirety.\n      Finally, when used in a calendaring REPORT response,\
    \ the CALDAV:\n      calendar-data XML element specifies the content of a calendar\n\
    \      object resource.  Given that XML parsers normalize the two-\n      character\
    \ sequence CRLF (US-ASCII decimal 13 and US-ASCII decimal\n      10) to a single\
    \ LF character (US-ASCII decimal 10), the CR\n      character (US-ASCII decimal\
    \ 13) MAY be omitted in calendar object\n      resources specified in the CALDAV:calendar-data\
    \ XML element.\n      Furthermore, calendar object resources specified in the\
    \ CALDAV:\n      calendar-data XML element MAY be invalid per their media type\n\
    \      specification if the CALDAV:calendar-data XML element part of the\n   \
    \   calendaring REPORT request did not specify required properties\n      (e.g.,\
    \ UID, DTSTAMP, etc.), or specified a CALDAV:prop XML element\n      with the\
    \ \"novalue\" attribute set to \"yes\".\n   Note:  The CALDAV:calendar-data XML\
    \ element is specified in requests\n      and responses inside the DAV:prop XML\
    \ element as if it were a\n      WebDAV property.  However, the CALDAV:calendar-data\
    \ XML element is\n      not a WebDAV property and, as such, is not returned in\
    \ PROPFIND\n      responses, nor used in PROPPATCH requests.\n   Note:  The iCalendar\
    \ data embedded within the CALDAV:calendar-data\n      XML element MUST follow\
    \ the standard XML character data encoding\n      rules, including use of &lt;,\
    \ &gt;, &amp; etc. entity encoding or\n      the use of a <![CDATA[ ... ]]> construct.\
    \  In the later case, the\n      iCalendar data cannot contain the character sequence\
    \ \"]]>\", which\n      is the end delimiter for the CDATA section.\n   Definition:\n\
    \         <!ELEMENT calendar-data EMPTY>\n         when nested in the CALDAV:supported-calendar-data\
    \ property\n         to specify a supported media type for calendar object\n \
    \        resources;\n         <!ELEMENT calendar-data (comp?,\n              \
    \                    (expand | limit-recurrence-set)?,\n                     \
    \             limit-freebusy-set?)>\n         when nested in the DAV:prop XML\
    \ element in a calendaring\n         REPORT request to specify which parts of\
    \ calendar object\n         resources should be returned in the response;\n  \
    \       <!ELEMENT calendar-data (#PCDATA)>\n         PCDATA value: iCalendar object\n\
    \         when nested in the DAV:prop XML element in a calendaring\n         REPORT\
    \ response to specify the content of a returned\n         calendar object resource.\n\
    \         <!ATTLIST calendar-data content-type CDATA \"text/calendar\"\n     \
    \                            version CDATA \"2.0\">\n         content-type value:\
    \ a MIME media type\n         version value: a version string\n         attributes\
    \ can be used on all three variants of the\n         CALDAV:calendar-data XML\
    \ element.\n"
- title: 9.6.1.  CALDAV:comp XML Element
  contents:
  - "9.6.1.  CALDAV:comp XML Element\n   Name:  comp\n   Namespace:  urn:ietf:params:xml:ns:caldav\n\
    \   Purpose:  Defines which component types to return.\n   Description:  The name\
    \ value is a calendar component name (e.g.,\n      VEVENT).\n   Definition:\n\
    \         <!ELEMENT comp ((allprop | prop*), (allcomp | comp*))>\n         <!ATTLIST\
    \ comp name CDATA #REQUIRED>\n         name value: a calendar component name\n\
    \   Note:  The CALDAV:prop and CALDAV:allprop elements have the same name\n  \
    \    as the DAV:prop and DAV:allprop elements defined in [RFC2518].\n      However,\
    \ the CALDAV:prop and CALDAV:allprop elements are defined\n      in the \"urn:ietf:params:xml:ns:caldav\"\
    \ namespace instead of the\n      \"DAV:\" namespace.\n"
- title: 9.6.2.  CALDAV:allcomp XML Element
  contents:
  - "9.6.2.  CALDAV:allcomp XML Element\n   Name:  allcomp\n   Namespace:  urn:ietf:params:xml:ns:caldav\n\
    \   Purpose:  Specifies that all components shall be returned.\n   Description:\
    \  The CALDAV:allcomp XML element can be used when the\n      client wants all\
    \ types of components returned by a calendaring\n      REPORT request.\n   Definition:\n\
    \         <!ELEMENT allcomp EMPTY>\n"
- title: 9.6.3.  CALDAV:allprop XML Element
  contents:
  - "9.6.3.  CALDAV:allprop XML Element\n   Name:  allprop\n   Namespace:  urn:ietf:params:xml:ns:caldav\n\
    \   Purpose:  Specifies that all properties shall be returned.\n   Description:\
    \  The CALDAV:allprop XML element can be used when the\n      client wants all\
    \ properties of components returned by a\n      calendaring REPORT request.\n\
    \   Definition:\n         <!ELEMENT allprop EMPTY>\n   Note:  The CALDAV:allprop\
    \ element has the same name as the DAV:\n      allprop element defined in [RFC2518].\
    \  However, the CALDAV:allprop\n      element is defined in the \"urn:ietf:params:xml:ns:caldav\"\
    \n      namespace instead of the \"DAV:\" namespace.\n"
- title: 9.6.4.  CALDAV:prop XML Element
  contents:
  - "9.6.4.  CALDAV:prop XML Element\n   Name:  prop\n   Namespace:  urn:ietf:params:xml:ns:caldav\n\
    \   Purpose:  Defines which properties to return in the response.\n   Description:\
    \  The \"name\" attribute specifies the name of the calendar\n      property to\
    \ return (e.g., ATTENDEE).  The \"novalue\" attribute can\n      be used by clients\
    \ to request that the actual value of the\n      property not be returned (if\
    \ the \"novalue\" attribute is set to\n      \"yes\").  In that case, the server\
    \ will return just the iCalendar\n      property name and any iCalendar parameters\
    \ and a trailing \":\"\n      without the subsequent value data.\n   Definition:\n\
    \         <!ELEMENT prop EMPTY>\n         <!ATTLIST prop name CDATA #REQUIRED\n\
    \                        novalue (yes | no) \"no\">\n         name value: a calendar\
    \ property name\n         novalue value: \"yes\" or \"no\"\n   Note:  The CALDAV:prop\
    \ element has the same name as the DAV:prop\n      element defined in [RFC2518].\
    \  However, the CALDAV:prop element is\n      defined in the \"urn:ietf:params:xml:ns:caldav\"\
    \ namespace instead\n      of the \"DAV:\" namespace.\n"
- title: 9.6.5.  CALDAV:expand XML Element
  contents:
  - "9.6.5.  CALDAV:expand XML Element\n   Name:  expand\n   Namespace:  urn:ietf:params:xml:ns:caldav\n\
    \   Purpose:  Forces the server to expand recurring components into\n      individual\
    \ recurrence instances.\n   Description:  The CALDAV:expand XML element specifies\
    \ that for a\n      given calendaring REPORT request, the server MUST expand the\n\
    \      recurrence set into calendar components that define exactly one\n     \
    \ recurrence instance, and MUST return only those whose scheduled\n      time\
    \ intersect a specified time range.\n      The \"start\" attribute specifies the\
    \ inclusive start of the time\n      range, and the \"end\" attribute specifies\
    \ the non-inclusive end of\n      the time range.  Both attributes are specified\
    \ as date with UTC\n      time value.  The value of the \"end\" attribute MUST\
    \ be greater than\n      the value of the \"start\" attribute.\n      The server\
    \ MUST use the same logic as defined for CALDAV:time-\n      range to determine\
    \ if a recurrence instance intersects the\n      specified time range.\n     \
    \ Recurring components, other than the initial instance, MUST\n      include a\
    \ RECURRENCE-ID property indicating which instance they\n      refer to.\n   \
    \   The returned calendar components MUST NOT use recurrence\n      properties\
    \ (i.e., EXDATE, EXRULE, RDATE, and RRULE) and MUST NOT\n      have reference\
    \ to or include VTIMEZONE components.  Date and local\n      time with reference\
    \ to time zone information MUST be converted\n      into date with UTC time.\n\
    \   Definition:\n         <!ELEMENT expand EMPTY>\n         <!ATTLIST expand start\
    \ CDATA #REQUIRED\n                          end   CDATA #REQUIRED>\n        \
    \ start value: an iCalendar \"date with UTC time\"\n         end value: an iCalendar\
    \ \"date with UTC time\"\n"
- title: 9.6.6.  CALDAV:limit-recurrence-set XML Element
  contents:
  - "9.6.6.  CALDAV:limit-recurrence-set XML Element\n   Name:  limit-recurrence-set\n\
    \   Namespace:  urn:ietf:params:xml:ns:caldav\n   Purpose:  Specifies a time range\
    \ to limit the set of \"overridden\n      components\" returned by the server.\n\
    \   Description:  The CALDAV:limit-recurrence-set XML element specifies\n    \
    \  that for a given calendaring REPORT request, the server MUST\n      return,\
    \ in addition to the \"master component\", only the\n      \"overridden components\"\
    \ that impact a specified time range.  An\n      overridden component impacts\
    \ a time range if its current start and\n      end times overlap the time range,\
    \ or if the original start and end\n      times -- the ones that would have been\
    \ used if the instance were\n      not overridden -- overlap the time range.\n\
    \      The \"start\" attribute specifies the inclusive start of the time\n   \
    \   range, and the \"end\" attribute specifies the non-inclusive end of\n    \
    \  the time range.  Both attributes are specified as date with UTC\n      time\
    \ value.  The value of the \"end\" attribute MUST be greater than\n      the value\
    \ of the \"start\" attribute.\n      The server MUST use the same logic as defined\
    \ for CALDAV:time-\n      range to determine if the current or original scheduled\
    \ time of an\n      \"overridden\" recurrence instance intersects the specified\
    \ time\n      range.\n      Overridden components that have a RANGE parameter\
    \ on their\n      RECURRENCE-ID property may specify one or more instances in\
    \ the\n      recurrence set, and some of those instances may fall within the\n\
    \      specified time range or may have originally fallen within the\n      specified\
    \ time range prior to being overridden.  If that is the\n      case, the overridden\
    \ component MUST be included in the results, as\n      it has a direct impact\
    \ on the interpretation of instances within\n      the specified time range.\n\
    \   Definition:\n         <!ELEMENT limit-recurrence-set EMPTY>\n         <!ATTLIST\
    \ limit-recurrence-set start CDATA #REQUIRED\n                               \
    \         end   CDATA #REQUIRED>\n         start value: an iCalendar \"date with\
    \ UTC time\"\n         end value: an iCalendar \"date with UTC time\"\n"
- title: 9.6.7.  CALDAV:limit-freebusy-set XML Element
  contents:
  - "9.6.7.  CALDAV:limit-freebusy-set XML Element\n   Name:  limit-freebusy-set\n\
    \   Namespace:  urn:ietf:params:xml:ns:caldav\n   Purpose:  Specifies a time range\
    \ to limit the set of FREEBUSY values\n      returned by the server.\n   Description:\
    \  The CALDAV:limit-freebusy-set XML element specifies\n      that for a given\
    \ calendaring REPORT request, the server MUST only\n      return the FREEBUSY\
    \ property values of a VFREEBUSY component that\n      intersects a specified\
    \ time range.\n      The \"start\" attribute specifies the inclusive start of\
    \ the time\n      range, and the \"end\" attribute specifies the non-inclusive\
    \ end of\n      the time range.  Both attributes are specified as \"date with\
    \ UTC\n      time\" value.  The value of the \"end\" attribute MUST be greater\n\
    \      than the value of the \"start\" attribute.\n      The server MUST use the\
    \ same logic as defined for CALDAV:time-\n      range to determine if a FREEBUSY\
    \ property value intersects the\n      specified time range.\n   Definition:\n\
    \         <!ELEMENT limit-freebusy-set EMPTY>\n         <!ATTLIST limit-freebusy-set\
    \ start CDATA #REQUIRED\n                                      end   CDATA #REQUIRED>\n\
    \         start value: an iCalendar \"date with UTC time\"\n         end value:\
    \ an iCalendar \"date with UTC time\"\n"
- title: 9.7.  CALDAV:filter XML Element
  contents:
  - "9.7.  CALDAV:filter XML Element\n   Name:  filter\n   Namespace:  urn:ietf:params:xml:ns:caldav\n\
    \   Purpose:  Specifies a filter to limit the set of calendar components\n   \
    \   returned by the server.\n   Description:  The CALDAV:filter XML element specifies\
    \ the search\n      filter used to limit the calendar components returned by a\n\
    \      calendaring REPORT request.\n   Definition:\n         <!ELEMENT filter\
    \ (comp-filter)>\n"
- title: 9.7.1.  CALDAV:comp-filter XML Element
  contents:
  - "9.7.1.  CALDAV:comp-filter XML Element\n   Name:  comp-filter\n   Namespace:\
    \  urn:ietf:params:xml:ns:caldav\n   Purpose:  Specifies search criteria on calendar\
    \ components.\n   Description:  The CALDAV:comp-filter XML element specifies a\
    \ query\n      targeted at the calendar object (i.e., VCALENDAR) or at a specific\n\
    \      calendar component type (e.g., VEVENT).  The scope of the\n      CALDAV:comp-filter\
    \ XML element is the calendar object when used as\n      a child of the CALDAV:filter\
    \ XML element.  The scope of the\n      CALDAV:comp-filter XML element is the\
    \ enclosing calendar component\n      when used as a child of another CALDAV:comp-filter\
    \ XML element.  A\n      CALDAV:comp-filter is said to match if:\n      *  The\
    \ CALDAV:comp-filter XML element is empty and the calendar\n         object or\
    \ calendar component type specified by the \"name\"\n         attribute exists\
    \ in the current scope;\n      or:\n      *  The CALDAV:comp-filter XML element\
    \ contains a CALDAV:is-not-\n         defined XML element and the calendar object\
    \ or calendar\n         component type specified by the \"name\" attribute does\
    \ not exist\n         in the current scope;\n      or:\n      *  The CALDAV:comp-filter\
    \ XML element contains a CALDAV:time-range\n         XML element and at least\
    \ one recurrence instance in the\n         targeted calendar component is scheduled\
    \ to overlap the\n         specified time range, and all specified CALDAV:prop-filter\
    \ and\n         CALDAV:comp-filter child XML elements also match the targeted\n\
    \         calendar component;\n      or:\n      *  The CALDAV:comp-filter XML\
    \ element only contains CALDAV:prop-\n         filter and CALDAV:comp-filter child\
    \ XML elements that all match\n         the targeted calendar component.\n   Definition:\n\
    \         <!ELEMENT comp-filter (is-not-defined | (time-range?,\n            \
    \                    prop-filter*, comp-filter*))>\n         <!ATTLIST comp-filter\
    \ name CDATA #REQUIRED>\n         name value: a calendar object or calendar component\n\
    \                     type (e.g., VEVENT)\n"
- title: 9.7.2.  CALDAV:prop-filter XML Element
  contents:
  - "9.7.2.  CALDAV:prop-filter XML Element\n   Name:  prop-filter\n   Namespace:\
    \  urn:ietf:params:xml:ns:caldav\n   Purpose:  Specifies search criteria on calendar\
    \ properties.\n   Description:  The CALDAV:prop-filter XML element specifies a\
    \ query\n      targeted at a specific calendar property (e.g., CATEGORIES) in\
    \ the\n      scope of the enclosing calendar component.  A calendar property is\n\
    \      said to match a CALDAV:prop-filter if:\n      *  The CALDAV:prop-filter\
    \ XML element is empty and a property of\n         the type specified by the \"\
    name\" attribute exists in the\n         enclosing calendar component;\n     \
    \ or:\n      *  The CALDAV:prop-filter XML element contains a CALDAV:is-not-\n\
    \         defined XML element and no property of the type specified by\n     \
    \    the \"name\" attribute exists in the enclosing calendar\n         component;\n\
    \      or:\n      *  The CALDAV:prop-filter XML element contains a CALDAV:time-range\n\
    \         XML element and the property value overlaps the specified time\n   \
    \      range, and all specified CALDAV:param-filter child XML elements\n     \
    \    also match the targeted property;\n      or:\n      *  The CALDAV:prop-filter\
    \ XML element contains a CALDAV:text-match\n         XML element and the property\
    \ value matches it, and all\n         specified CALDAV:param-filter child XML\
    \ elements also match the\n         targeted property;\n   Definition:\n     \
    \    <!ELEMENT prop-filter (is-not-defined |\n                               \
    \ ((time-range | text-match)?,\n                                 param-filter*))>\n\
    \         <!ATTLIST prop-filter name CDATA #REQUIRED>\n         name value: a\
    \ calendar property name (e.g., ATTENDEE)\n"
- title: 9.7.3.  CALDAV:param-filter XML Element
  contents:
  - "9.7.3.  CALDAV:param-filter XML Element\n   Name:  param-filter\n   Namespace:\
    \  urn:ietf:params:xml:ns:caldav\n   Purpose:  Limits the search to specific parameter\
    \ values.\n   Description:  The CALDAV:param-filter XML element specifies a query\n\
    \      targeted at a specific calendar property parameter (e.g.,\n      PARTSTAT)\
    \ in the scope of the calendar property on which it is\n      defined.  A calendar\
    \ property parameter is said to match a CALDAV:\n      param-filter if:\n    \
    \  *  The CALDAV:param-filter XML element is empty and a parameter of\n      \
    \   the type specified by the \"name\" attribute exists on the\n         calendar\
    \ property being examined;\n      or:\n      *  The CALDAV:param-filter XML element\
    \ contains a CALDAV:is-not-\n         defined XML element and no parameter of\
    \ the type specified by\n         the \"name\" attribute exists on the calendar\
    \ property being\n         examined;\n   Definition:\n         <!ELEMENT param-filter\
    \ (is-not-defined | text-match?)>\n         <!ATTLIST param-filter name CDATA\
    \ #REQUIRED>\n         name value: a property parameter name (e.g., PARTSTAT)\n"
- title: 9.7.4.  CALDAV:is-not-defined XML Element
  contents:
  - "9.7.4.  CALDAV:is-not-defined XML Element\n   Name:  is-not-defined\n   Namespace:\
    \  urn:ietf:params:xml:ns:caldav\n   Purpose:  Specifies that a match should occur\
    \ if the enclosing\n      component, property, or parameter does not exist.\n\
    \   Description:  The CALDAV:is-not-defined XML element specifies that a\n   \
    \   match occurs if the enclosing component, property, or parameter\n      value\
    \ specified in a calendaring REPORT request does not exist in\n      the calendar\
    \ data being tested.\n   Definition:\n         <!ELEMENT is-not-defined EMPTY>\n"
- title: 9.7.5.  CALDAV:text-match XML Element
  contents:
  - "9.7.5.  CALDAV:text-match XML Element\n   Name:  text-match\n   Namespace:  urn:ietf:params:xml:ns:caldav\n\
    \   Purpose:  Specifies a substring match on a property or parameter\n      value.\n\
    \   Description:  The CALDAV:text-match XML element specifies text used\n    \
    \  for a substring match against the property or parameter value\n      specified\
    \ in a calendaring REPORT request.\n      The \"collation\" attribute is used\
    \ to select the collation that the\n      server MUST use for character string\
    \ matching.  In the absence of\n      this attribute, the server MUST use the\
    \ \"i;ascii-casemap\"\n      collation.\n      The \"negate-condition\" attribute\
    \ is used to indicate that this\n      test returns a match if the text matches\
    \ when the attribute value\n      is set to \"no\", or return a match if the text\
    \ does not match, if\n      the attribute value is set to \"yes\".  For example,\
    \ this can be\n      used to match components with a STATUS property not set to\n\
    \      CANCELLED.\n   Definition:\n         <!ELEMENT text-match (#PCDATA)>\n\
    \         PCDATA value: string\n         <!ATTLIST text-match collation      \
    \  CDATA \"i;ascii-casemap\"\n                              negate-condition (yes\
    \ | no) \"no\">\n"
- title: 9.8.  CALDAV:timezone XML Element
  contents:
  - "9.8.  CALDAV:timezone XML Element\n   Name:  timezone\n   Namespace:  urn:ietf:params:xml:ns:caldav\n\
    \   Purpose:  Specifies the time zone component to use when determining\n    \
    \  the results of a report.\n   Description:  The CALDAV:timezone XML element\
    \ specifies that for a\n      given calendaring REPORT request, the server MUST\
    \ rely on the\n      specified VTIMEZONE component instead of the CALDAV:calendar-\n\
    \      timezone property of the calendar collection, in which the\n      calendar\
    \ object resource is contained to resolve \"date\" values and\n      \"date with\
    \ local time\" values (i.e., floating time) to \"date with\n      UTC time\" values.\
    \  The server will require this information to\n      determine if a calendar\
    \ component scheduled with \"date\" values or\n      \"date with local time\"\
    \ values intersects a CALDAV:time-range\n      specified in a CALDAV:calendar-query\
    \ REPORT.\n   Note:  The iCalendar data embedded within the CALDAV:timezone XML\n\
    \      element MUST follow the standard XML character data encoding\n      rules,\
    \ including use of &lt;, &gt;, &amp; etc. entity encoding or\n      the use of\
    \ a <![CDATA[ ... ]]> construct.  In the later case, the\n      iCalendar data\
    \ cannot contain the character sequence \"]]>\", which\n      is the end delimiter\
    \ for the CDATA section.\n   Definition:\n         <!ELEMENT timezone (#PCDATA)>\n\
    \         PCDATA value: an iCalendar object with exactly one VTIMEZONE\n"
- title: 9.9.  CALDAV:time-range XML Element
  contents:
  - "9.9.  CALDAV:time-range XML Element\n   Name:  time-range\n   Namespace:  urn:ietf:params:xml:ns:caldav\n\
    \   Purpose:  Specifies a time range to limit the set of calendar\n      components\
    \ returned by the server.\n   Description:  The CALDAV:time-range XML element\
    \ specifies that for a\n      given calendaring REPORT request, the server MUST\
    \ only return the\n      calendar object resources that, depending on the context,\
    \ have a\n      component or property whose value intersects a specified time\n\
    \      range.\n      The \"start\" attribute specifies the inclusive start of\
    \ the time\n      range, and the \"end\" attribute specifies the non-inclusive\
    \ end of\n      the time range.  Both attributes MUST be specified as \"date with\n\
    \      UTC time\" value.  Time ranges open at one end can be specified by\n  \
    \    including only one attribute; however, at least one attribute MUST\n    \
    \  always be present in the CALDAV:time-range element.  If either the\n      \"\
    start\" or \"end\" attribute is not specified in the CALDAV:time-\n      range\
    \ XML element, assume \"-infinity\" and \"+infinity\" as their\n      value, respectively.\
    \  If both \"start\" and \"end\" are present, the\n      value of the \"end\"\
    \ attribute MUST be greater than the value of the\n      \"start\" attribute.\n\
    \      Time range tests MUST consider every recurrence instance when\n      testing\
    \ the time range condition; if any one instance matches,\n      then the test\
    \ returns true.  Testing recurrence instances requires\n      the server to infer\
    \ an effective value for DTSTART, DTEND,\n      DURATION, and DUE properties for\
    \ an instance based on the\n      recurrence patterns and any overrides.\n   \
    \   A VEVENT component overlaps a given time range if the condition\n      for\
    \ the corresponding component state specified in the table below\n      is satisfied.\
    \  Note that, as specified in [RFC2445], the DTSTART\n      property is REQUIRED\
    \ in the VEVENT component.  The conditions\n      depend on the presence of the\
    \ DTEND and DURATION properties in the\n      VEVENT component.  Furthermore,\
    \ the value of the DTEND property\n      MUST be later in time than the value\
    \ of the DTSTART property.  The\n      duration of a VEVENT component with no\
    \ DTEND and DURATION\n      properties is 1 day (+P1D) when the DTSTART is a DATE\
    \ value, and 0\n      seconds when the DTSTART is a DATE-TIME value.\n      +---------------------------------------------------------------+\n\
    \      | VEVENT has the DTEND property?                                |\n   \
    \   |   +-----------------------------------------------------------+\n      |\
    \   | VEVENT has the DURATION property?                         |\n      |   |\
    \   +-------------------------------------------------------+\n      |   |   |\
    \ DURATION property value is greater than 0 seconds?    |\n      |   |   |   +---------------------------------------------------+\n\
    \      |   |   |   | DTSTART property is a DATE-TIME value?            |\n   \
    \   |   |   |   |   +-----------------------------------------------+\n      |\
    \   |   |   |   | Condition to evaluate                         |\n      +---+---+---+---+-----------------------------------------------+\n\
    \      | Y | N | N | * | (start <  DTEND AND end > DTSTART)            |\n   \
    \   +---+---+---+---+-----------------------------------------------+\n      |\
    \ N | Y | Y | * | (start <  DTSTART+DURATION AND end > DTSTART) |\n      |   |\
    \   +---+---+-----------------------------------------------+\n      |   |   |\
    \ N | * | (start <= DTSTART AND end > DTSTART)          |\n      +---+---+---+---+-----------------------------------------------+\n\
    \      | N | N | N | Y | (start <= DTSTART AND end > DTSTART)          |\n   \
    \   +---+---+---+---+-----------------------------------------------+\n      |\
    \ N | N | N | N | (start <  DTSTART+P1D AND end > DTSTART)      |\n      +---+---+---+---+-----------------------------------------------+\n\
    \      A VTODO component is said to overlap a given time range if the\n      condition\
    \ for the corresponding component state specified in the\n      table below is\
    \ satisfied.  The conditions depend on the presence\n      of the DTSTART, DURATION,\
    \ DUE, COMPLETED, and CREATED properties\n      in the VTODO component.  Note\
    \ that, as specified in [RFC2445], the\n      DUE value MUST be a DATE-TIME value\
    \ equal to or after the DTSTART\n      value if specified.\n   +-------------------------------------------------------------------+\n\
    \   | VTODO has the DTSTART property?                                   |\n  \
    \ |   +---------------------------------------------------------------+\n   |\
    \   |   VTODO has the DURATION property?                            |\n   |  \
    \ |   +-----------------------------------------------------------+\n   |   |\
    \   | VTODO has the DUE property?                               |\n   |   |  \
    \ |   +-------------------------------------------------------+\n   |   |   |\
    \   | VTODO has the COMPLETED property?                     |\n   |   |   |  \
    \ |   +---------------------------------------------------+\n   |   |   |   |\
    \   | VTODO has the CREATED property?                   |\n   |   |   |   |  \
    \ |   +-----------------------------------------------+\n   |   |   |   |   |\
    \   | Condition to evaluate                         |\n   +---+---+---+---+---+-----------------------------------------------+\n\
    \   | Y | Y | N | * | * | (start  <= DTSTART+DURATION)  AND             |\n  \
    \ |   |   |   |   |   | ((end   >  DTSTART)  OR                       |\n   |\
    \   |   |   |   |   |  (end   >= DTSTART+DURATION))                 |\n   +---+---+---+---+---+-----------------------------------------------+\n\
    \   | Y | N | Y | * | * | ((start <  DUE)      OR  (start <= DTSTART))  |\n  \
    \ |   |   |   |   |   | AND                                           |\n   |\
    \   |   |   |   |   | ((end   >  DTSTART)  OR  (end   >= DUE))      |\n   +---+---+---+---+---+-----------------------------------------------+\n\
    \   | Y | N | N | * | * | (start  <= DTSTART)  AND (end >  DTSTART)     |\n  \
    \ +---+---+---+---+---+-----------------------------------------------+\n   |\
    \ N | N | Y | * | * | (start  <  DUE)      AND (end >= DUE)         |\n   +---+---+---+---+---+-----------------------------------------------+\n\
    \   | N | N | N | Y | Y | ((start <= CREATED)  OR  (start <= COMPLETED))|\n  \
    \ |   |   |   |   |   | AND                                           |\n   |\
    \   |   |   |   |   | ((end   >= CREATED)  OR  (end   >= COMPLETED))|\n   +---+---+---+---+---+-----------------------------------------------+\n\
    \   | N | N | N | Y | N | (start  <= COMPLETED) AND (end  >= COMPLETED) |\n  \
    \ +---+---+---+---+---+-----------------------------------------------+\n   |\
    \ N | N | N | N | Y | (end    >  CREATED)                           |\n   +---+---+---+---+---+-----------------------------------------------+\n\
    \   | N | N | N | N | N | TRUE                                          |\n  \
    \ +---+---+---+---+---+-----------------------------------------------+\n    \
    \  A VJOURNAL component overlaps a given time range if the condition\n      for\
    \ the corresponding component state specified in the table below\n      is satisfied.\
    \  The conditions depend on the presence of the\n      DTSTART property in the\
    \ VJOURNAL component and on whether the\n      DTSTART is a DATE-TIME or DATE\
    \ value.  The effective \"duration\" of\n      a VJOURNAL component is 1 day (+P1D)\
    \ when the DTSTART is a DATE\n      value, and 0 seconds when the DTSTART is a\
    \ DATE-TIME value.\n      +----------------------------------------------------+\n\
    \      | VJOURNAL has the DTSTART property?                 |\n      |   +------------------------------------------------+\n\
    \      |   | DTSTART property is a DATE-TIME value?         |\n      |   |   +--------------------------------------------+\n\
    \      |   |   | Condition to evaluate                      |\n      +---+---+--------------------------------------------+\n\
    \      | Y | Y | (start <= DTSTART)     AND (end > DTSTART) |\n      +---+---+--------------------------------------------+\n\
    \      | Y | N | (start <  DTSTART+P1D) AND (end > DTSTART) |\n      +---+---+--------------------------------------------+\n\
    \      | N | * | FALSE                                      |\n      +---+---+--------------------------------------------+\n\
    \      A VFREEBUSY component overlaps a given time range if the condition\n  \
    \    for the corresponding component state specified in the table below\n    \
    \  is satisfied.  The conditions depend on the presence in the\n      VFREEBUSY\
    \ component of the DTSTART and DTEND properties, and any\n      FREEBUSY properties\
    \ in the absence of DTSTART and DTEND.  Any\n      DURATION property is ignored,\
    \ as it has a special meaning when\n      used in a VFREEBUSY component.\n   \
    \   When only FREEBUSY properties are used, each period in each\n      FREEBUSY\
    \ property is compared against the time range, irrespective\n      of the type\
    \ of free busy information (free, busy, busy-tentative,\n      busy-unavailable)\
    \ represented by the property.\n      +------------------------------------------------------+\n\
    \      | VFREEBUSY has both the DTSTART and DTEND properties? |\n      |   +--------------------------------------------------+\n\
    \      |   | VFREEBUSY has the FREEBUSY property?             |\n      |   | \
    \  +----------------------------------------------+\n      |   |   | Condition\
    \ to evaluate                        |\n      +---+---+----------------------------------------------+\n\
    \      | Y | * | (start <= DTEND) AND (end > DTSTART)         |\n      +---+---+----------------------------------------------+\n\
    \      | N | Y | (start <  freebusy-period-end) AND           |\n      |   | \
    \  | (end   >  freebusy-period-start)             |\n      +---+---+----------------------------------------------+\n\
    \      | N | N | FALSE                                        |\n      +---+---+----------------------------------------------+\n\
    \      A VALARM component is said to overlap a given time range if the\n     \
    \ following condition holds:\n         (start <= trigger-time) AND (end > trigger-time)\n\
    \   A VALARM component can be defined such that it triggers repeatedly.\n   Such\
    \ a VALARM component is said to overlap a given time range if at\n   least one\
    \ of its triggers overlaps the time range.\n      The calendar properties COMPLETED,\
    \ CREATED, DTEND, DTSTAMP,\n      DTSTART, DUE, and LAST-MODIFIED overlap a given\
    \ time range if the\n      following condition holds:\n          (start <= date-time)\
    \ AND (end > date-time)\n   Note that if DTEND is not present in a VEVENT, but\
    \ DURATION is, then\n   the test should instead operate on the 'effective' DTEND,\
    \ i.e.,\n   DTSTART+DURATION.  Similarly, if DUE is not present in a VTODO, but\n\
    \   DTSTART and DURATION are, then the test should instead operate on the\n  \
    \ 'effective' DUE, i.e., DTSTART+DURATION.\n      The semantic of CALDAV:time-range\
    \ is not defined for any other\n      calendar components and properties.\n  \
    \ Definition:\n         <!ELEMENT time-range EMPTY>\n         <!ATTLIST time-range\
    \ start CDATA #IMPLIED\n                              end   CDATA #IMPLIED>\n\
    \         start value: an iCalendar \"date with UTC time\"\n         end value:\
    \ an iCalendar \"date with UTC time\"\n"
- title: 9.10.  CALDAV:calendar-multiget XML Element
  contents:
  - "9.10.  CALDAV:calendar-multiget XML Element\n   Name:  calendar-multiget\n  \
    \ Namespace:  urn:ietf:params:xml:ns:caldav\n   Purpose:  CalDAV report used to\
    \ retrieve specific calendar object\n      resources.\n   Description:  See Section\
    \ 7.9.\n   Definition:\n         <!ELEMENT calendar-multiget ((DAV:allprop |\n\
    \                                      DAV:propname |\n                      \
    \                DAV:prop)?, DAV:href+)>\n"
- title: 9.11.  CALDAV:free-busy-query XML Element
  contents:
  - "9.11.  CALDAV:free-busy-query XML Element\n   Name:  free-busy-query\n   Namespace:\
    \  urn:ietf:params:xml:ns:caldav\n   Purpose:  CalDAV report used to generate\
    \ a VFREEBUSY to determine\n      busy time over a specific time range.\n   Description:\
    \  See Section 7.10.\n   Definition:\n         <!ELEMENT free-busy-query (time-range)>\n"
- title: 10.  Internationalization Considerations
  contents:
  - "10.  Internationalization Considerations\n   CalDAV allows internationalized\
    \ strings to be stored and retrieved\n   for the description of calendar collections\
    \ (see Section 5.2.1).\n   The CALDAV:calendar-query REPORT (Section 7.8) includes\
    \ a text\n   searching option controlled by the CALDAV:text-match element, and\n\
    \   details of character handling are covered in the description of that\n   element\
    \ (see Section 9.7.5).\n"
- title: 11.  Security Considerations
  contents:
  - "11.  Security Considerations\n   HTTP protocol transactions are sent in the clear\
    \ over the network\n   unless protection from snooping is negotiated.  This can\
    \ be\n   accomplished by use of TLS, as defined in [RFC2818].  In particular,\n\
    \   HTTP Basic authentication MUST NOT be used unless TLS is in effect.\n   Servers\
    \ MUST take adequate precautions to ensure that malicious\n   clients cannot consume\
    \ excessive server resources (CPU, memory, disk,\n   etc.) through carefully crafted\
    \ reports.  For example, a client could\n   upload an event with a recurrence\
    \ rule that specifies a recurring\n   event occurring every second for the next\
    \ 100 years, which would\n   result in approximately 3 x 10^9 instances!  A report\
    \ that asks for\n   recurrences to be expanded over that range would likely constitute\
    \ a\n   denial-of-service attack on the server.\n   When creating new resources\
    \ (including calendar collections), clients\n   MUST ensure that the resource\
    \ name (the last path segment of the\n   resource URI) assigned to the new resource\
    \ does not expose any data\n   from within the iCalendar resource itself or information\
    \ about the\n   nature of a calendar collection.  This is required to ensure that\
    \ the\n   presence of a specific iCalendar component or nature of components in\n\
    \   a collection cannot be inferred based on the name of a resource.\n   When\
    \ rolling up free-busy information, more information about a\n   user's events\
    \ is exposed if busy periods overlap or are adjacent\n   (this tells the client\
    \ requesting the free-busy information that the\n   calendar owner has at least\
    \ two events, rather than knowing only that\n   the calendar owner has one or\
    \ more events during the busy period).\n   Thus, a conservative approach to calendar\
    \ data privacy would have\n   servers always coalesce such busy periods when they\
    \ are the same\n   type.\n   Procedure alarms are a known security risk for either\
    \ clients or\n   servers to handle, particularly when the alarm was created by\
    \ another\n   agent.  Clients and servers are not required to execute such\n \
    \  procedure alarms.\n   Security considerations described in iCalendar [RFC2445]\
    \ and iTIP\n   [RFC2446] are also applicable to CalDAV.\n   Beyond these, CalDAV\
    \ does not raise any security considerations that\n   are not present in HTTP\
    \ [RFC2616] and WebDAV [RFC2518], [RFC3253],\n   [RFC3744].\n"
- title: 12.  IANA Considerations
  contents:
  - "12.  IANA Considerations\n   This document uses one new URN to identify a new\
    \ XML namespace.  The\n   URN conforms to a registry mechanism described in [RFC3688].\n"
- title: 12.1.  Namespace Registration
  contents:
  - "12.1.  Namespace Registration\n   Registration request for the CalDAV namespace:\n\
    \   URI: urn:ietf:params:xml:ns:caldav\n   Registrant Contact: See the \"Authors'\
    \ Addresses\" section of this\n   document.\n   XML: None.  Namespace URIs do\
    \ not represent an XML specification.\n"
- title: 13.  Acknowledgements
  contents:
  - "13.  Acknowledgements\n   The authors would like to thank the following individuals\
    \ for\n   contributing their ideas and support for writing this specification:\n\
    \   Michael Arick, Mario Bonin, Chris Bryant, Scott Carr, Andre\n   Courtemanche,\
    \ Mike Douglass, Ted Hardie, Marten den Haring, Jeffrey\n   Harris, Sam Hartman,\
    \ Helge Hess, Jeff McCullough, Alexey Melnikov,\n   Dan Mosedale, Brian Moseley,\
    \ Francois Perrault, Kervin L. Pierre,\n   Julian F. Reschke, Wilfredo Sanchez\
    \ Vega, Mike Shaver, Jari\n   Urpalainen, Simon Vaillancourt, and Jim Whitehead.\n\
    \   The authors would also like to thank the Calendaring and Scheduling\n   Consortium\
    \ for advice with this specification, and for organizing\n   interoperability\
    \ testing events to help refine it.\n"
- title: 14.  References
  contents:
  - '14.  References

    '
- title: 14.1.  Normative References
  contents:
  - "14.1.  Normative References\n   [RFC2119]               Bradner, S., \"Key words\
    \ for use in RFCs to\n                           Indicate Requirement Levels\"\
    , BCP 14,\n                           RFC 2119, March 1997.\n   [RFC2246]    \
    \           Dierks, T. and C. Allen, \"The TLS Protocol\n                    \
    \       Version 1.0\", RFC 2246, January 1999.\n   [RFC2445]               Dawson,\
    \ F. and Stenerson, D., \"Internet\n                           Calendaring and\
    \ Scheduling Core Object\n                           Specification (iCalendar)\"\
    , RFC 2445,\n                           November 1998.\n   [RFC2446]         \
    \      Silverberg, S., Mansour, S., Dawson, F., and\n                        \
    \   R. Hopson, \"iCalendar Transport-Independent\n                           Interoperability\
    \ Protocol (iTIP) Scheduling\n                           Events, BusyTime, To-dos\
    \ and Journal\n                           Entries\", RFC 2446, November 1998.\n\
    \   [RFC2518]               Goland, Y., Whitehead, E., Faizi, A., Carter,\n  \
    \                         S., and D. Jensen, \"HTTP Extensions for\n         \
    \                  Distributed Authoring -- WEBDAV\", RFC 2518,\n            \
    \               February 1999.\n   [RFC2616]               Fielding, R., Gettys,\
    \ J., Mogul, J., Frystyk,\n                           H., Masinter, L., Leach,\
    \ P., and T. Berners-\n                           Lee, \"Hypertext Transfer Protocol\
    \ --\n                           HTTP/1.1\", RFC 2616, June 1999.\n   [RFC2818]\
    \               Rescorla, E., \"HTTP Over TLS\", RFC 2818,\n                 \
    \          May 2000.\n   [RFC3253]               Clemm, G., Amsden, J., Ellison,\
    \ T., Kaler,\n                           C., and J. Whitehead, \"Versioning Extensions\n\
    \                           to WebDAV (Web Distributed Authoring and\n       \
    \                    Versioning)\", RFC 3253, March 2002.\n   [RFC3688]      \
    \         Mealling, M., \"The IETF XML Registry\",\n                         \
    \  BCP 81, RFC 3688, January 2004.\n   [RFC3744]               Clemm, G., Reschke,\
    \ J., Sedlar, E., and J.\n                           Whitehead, \"Web Distributed\
    \ Authoring and\n                           Versioning (WebDAV) Access Control\
    \ Protocol\",\n                           RFC 3744, May 2004.\n   [RFC4346]  \
    \             Dierks, T. and E. Rescorla, \"The Transport\n                  \
    \         Layer Security (TLS) Protocol Version 1.1\",\n                     \
    \      RFC 4346, April 2006.\n   [RFC4790]               Newman, C., Duerst, M.,\
    \ and A. Gulbrandsen,\n                           \"Internet Application Protocol\
    \ Collation\n                           Registry\", RFC 4790, March 2007.\n  \
    \ [W3C.REC-xml-20060816]  Paoli, J., Maler, E., Yergeau, F., Sperberg-\n     \
    \                      McQueen, C., and T. Bray, \"Extensible Markup\n       \
    \                    Language (XML) 1.0 (Fourth Edition)\", World\n          \
    \                 Wide Web Consortium Recommendation REC-xml-\n              \
    \             20060816, August 2006,\n                           <http://www.w3.org/TR/2006/REC-xml-20060816>.\n"
- title: 14.2.  Informative References
  contents:
  - "14.2.  Informative References\n   [RFC2426]               Dawson, F. and T. Howes,\
    \ \"vCard MIME\n                           Directory Profile\", RFC 2426, September\
    \ 1998.\n   [RFC2739]               Small, T., Hennessy, D., and F. Dawson,\n\
    \                           \"Calendar Attributes for vCard and LDAP\",\n    \
    \                       RFC 2739, January 2000.\n   [RFC4331]               Korver,\
    \ B. and L. Dusseault, \"Quota and Size\n                           Properties\
    \ for Distributed Authoring and\n                           Versioning (DAV) Collections\"\
    , RFC 4331,\n                           February 2006.\n   [RFC4511]         \
    \      Sermersheim, J., \"Lightweight Directory\n                           Access\
    \ Protocol (LDAP): The Protocol\",\n                           RFC 4511, June\
    \ 2006.\n   [rfc2518bis]            Dusseault, L., \"HTTP Extensions for\n   \
    \                        Distributed Authoring - WebDAV\", Work\n            \
    \               in Progress, December 2006.\n"
- title: Appendix A.  CalDAV Method Privilege Table (Normative)
  contents:
  - "Appendix A.  CalDAV Method Privilege Table (Normative)\n   The following table\
    \ extends the WebDAV Method Privilege Table\n   specified in Appendix B of [RFC3744].\n\
    \   +------------+------------------------------------------------------+\n  \
    \ | METHOD     | PRIVILEGES                                           |\n   +------------+------------------------------------------------------+\n\
    \   | MKCALENDAR | DAV:bind                                             |\n  \
    \ | REPORT     | DAV:read or CALDAV:read-free-busy (on all referenced |\n   |\
    \            | resources)                                           |\n   +------------+------------------------------------------------------+\n"
- title: Appendix B.  Calendar Collections Used in the Examples
  contents:
  - "Appendix B.  Calendar Collections Used in the Examples\n   This appendix shows\
    \ the calendar object resources contained in the\n   calendar collection queried\
    \ in the examples throughout this document.\n   The content of the calendar collection\
    \ is being shown as if it were\n   returned by a CALDAV:calendar-query REPORT\
    \ request designed to return\n   all the calendar data in the collection:\n  \
    \ >> Request <<\n   REPORT /bernard/work/ HTTP/1.1\n   Host: cal.example.com\n\
    \   Depth: 1\n   Content-Type: application/xml; charset=\"utf-8\"\n   Content-Length:\
    \ xxxx\n   <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n   <C:calendar-query xmlns:D=\"\
    DAV:\"\n                    xmlns:C=\"urn:ietf:params:xml:ns:caldav\">\n    <D:prop>\n\
    \      <D:getetag/>\n      <C:calendar-data/>\n    </D:prop>\n    <C:filter>\n\
    \      <C:comp-filter name=\"VCALENDAR\"/>\n    </C:filter>\n   </C:calendar-query>\n\
    \   >> Response <<\n   HTTP/1.1 207 Multi-Status\n   Content-Type: application/xml;\
    \ charset=\"utf-8\"\n   Content-Length: xxxx\n   <?xml version=\"1.0\" encoding=\"\
    utf-8\" ?>\n   <D:multistatus xmlns:D=\"DAV:\"\n                 xmlns:C=\"urn:ietf:params:xml:ns:caldav\"\
    >\n     <D:response>\n       <D:href>http://cal.example.com/bernard/work/abcd1.ics</D:href>\n\
    \       <D:propstat>\n         <D:prop>\n           <D:getetag>\"fffff-abcd1\"\
    </D:getetag>\n           <C:calendar-data>BEGIN:VCALENDAR\n   VERSION:2.0\n  \
    \ PRODID:-//Example Corp.//CalDAV Client//EN\n   BEGIN:VTIMEZONE\n   LAST-MODIFIED:20040110T032845Z\n\
    \   TZID:US/Eastern\n   BEGIN:DAYLIGHT\n   DTSTART:20000404T020000\n   RRULE:FREQ=YEARLY;BYDAY=1SU;BYMONTH=4\n\
    \   TZNAME:EDT\n   TZOFFSETFROM:-0500\n   TZOFFSETTO:-0400\n   END:DAYLIGHT\n\
    \   BEGIN:STANDARD\n   DTSTART:20001026T020000\n   RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=10\n\
    \   TZNAME:EST\n   TZOFFSETFROM:-0400\n   TZOFFSETTO:-0500\n   END:STANDARD\n\
    \   END:VTIMEZONE\n   BEGIN:VEVENT\n   DTSTAMP:20060206T001102Z\n   DTSTART;TZID=US/Eastern:20060102T100000\n\
    \   DURATION:PT1H\n   SUMMARY:Event #1\n   Description:Go Steelers!\n   UID:74855313FA803DA593CD579A@example.com\n\
    \   END:VEVENT\n   END:VCALENDAR\n   </C:calendar-data>\n         </D:prop>\n\
    \         <D:status>HTTP/1.1 200 OK</D:status>\n       </D:propstat>\n     </D:response>\n\
    \     <D:response>\n       <D:href>http://cal.example.com/bernard/work/abcd2.ics</D:href>\n\
    \       <D:propstat>\n         <D:prop>\n           <D:getetag>\"fffff-abcd2\"\
    </D:getetag>\n           <C:calendar-data>BEGIN:VCALENDAR\n   VERSION:2.0\n  \
    \ PRODID:-//Example Corp.//CalDAV Client//EN\n   BEGIN:VTIMEZONE\n   LAST-MODIFIED:20040110T032845Z\n\
    \   TZID:US/Eastern\n   BEGIN:DAYLIGHT\n   DTSTART:20000404T020000\n   RRULE:FREQ=YEARLY;BYDAY=1SU;BYMONTH=4\n\
    \   TZNAME:EDT\n   TZOFFSETFROM:-0500\n   TZOFFSETTO:-0400\n   END:DAYLIGHT\n\
    \   BEGIN:STANDARD\n   DTSTART:20001026T020000\n   RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=10\n\
    \   TZNAME:EST\n   TZOFFSETFROM:-0400\n   TZOFFSETTO:-0500\n   END:STANDARD\n\
    \   END:VTIMEZONE\n   BEGIN:VEVENT\n   DTSTAMP:20060206T001121Z\n   DTSTART;TZID=US/Eastern:20060102T120000\n\
    \   DURATION:PT1H\n   RRULE:FREQ=DAILY;COUNT=5\n   SUMMARY:Event #2\n   UID:00959BC664CA650E933C892C@example.com\n\
    \   END:VEVENT\n   BEGIN:VEVENT\n   DTSTAMP:20060206T001121Z\n   DTSTART;TZID=US/Eastern:20060104T140000\n\
    \   DURATION:PT1H\n   RECURRENCE-ID;TZID=US/Eastern:20060104T120000\n   SUMMARY:Event\
    \ #2 bis\n   UID:00959BC664CA650E933C892C@example.com\n   END:VEVENT\n   END:VCALENDAR\n\
    \   </C:calendar-data>\n         </D:prop>\n         <D:status>HTTP/1.1 200 OK</D:status>\n\
    \       </D:propstat>\n     </D:response>\n     <D:response>\n       <D:href>http://cal.example.com/bernard/work/abcd3.ics</D:href>\n\
    \       <D:propstat>\n         <D:prop>\n           <D:getetag>\"fffff-abcd3\"\
    </D:getetag>\n           <C:calendar-data>BEGIN:VCALENDAR\n   VERSION:2.0\n  \
    \ PRODID:-//Example Corp.//CalDAV Client//EN\n   BEGIN:VTIMEZONE\n   LAST-MODIFIED:20040110T032845Z\n\
    \   TZID:US/Eastern\n   BEGIN:DAYLIGHT\n   DTSTART:20000404T020000\n   RRULE:FREQ=YEARLY;BYDAY=1SU;BYMONTH=4\n\
    \   TZNAME:EDT\n   TZOFFSETFROM:-0500\n   TZOFFSETTO:-0400\n   END:DAYLIGHT\n\
    \   BEGIN:STANDARD\n   DTSTART:20001026T020000\n   RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=10\n\
    \   TZNAME:EST\n   TZOFFSETFROM:-0400\n   TZOFFSETTO:-0500\n   END:STANDARD\n\
    \   END:VTIMEZONE\n   BEGIN:VEVENT\n   ATTENDEE;PARTSTAT=ACCEPTED;ROLE=CHAIR:mailto:cyrus@example.com\n\
    \   ATTENDEE;PARTSTAT=NEEDS-ACTION:mailto:lisa@example.com\n   DTSTAMP:20060206T001220Z\n\
    \   DTSTART;TZID=US/Eastern:20060104T100000\n   DURATION:PT1H\n   LAST-MODIFIED:20060206T001330Z\n\
    \   ORGANIZER:mailto:cyrus@example.com\n   SEQUENCE:1\n   STATUS:TENTATIVE\n \
    \  SUMMARY:Event #3\n   UID:DC6C50A017428C5216A2F1CD@example.com\n   END:VEVENT\n\
    \   END:VCALENDAR\n   </C:calendar-data>\n         </D:prop>\n         <D:status>HTTP/1.1\
    \ 200 OK</D:status>\n       </D:propstat>\n     </D:response>\n     <D:response>\n\
    \       <D:href>http://cal.example.com/bernard/work/abcd4.ics</D:href>\n     \
    \  <D:propstat>\n         <D:prop>\n           <D:getetag>\"fffff-abcd4\"</D:getetag>\n\
    \           <C:calendar-data>BEGIN:VCALENDAR\n   VERSION:2.0\n   PRODID:-//Example\
    \ Corp.//CalDAV Client//EN\n   BEGIN:VTODO\n   DTSTAMP:20060205T235335Z\n   DUE;VALUE=DATE:20060104\n\
    \   STATUS:NEEDS-ACTION\n   SUMMARY:Task #1\n   UID:DDDEEB7915FA61233B861457@example.com\n\
    \   BEGIN:VALARM\n   ACTION:AUDIO\n   TRIGGER;RELATED=START:-PT10M\n   END:VALARM\n\
    \   END:VTODO\n   END:VCALENDAR\n   </C:calendar-data>\n         </D:prop>\n \
    \        <D:status>HTTP/1.1 200 OK</D:status>\n       </D:propstat>\n     </D:response>\n\
    \     <D:response>\n       <D:href>http://cal.example.com/bernard/work/abcd5.ics</D:href>\n\
    \       <D:propstat>\n         <D:prop>\n           <D:getetag>\"fffff-abcd5\"\
    </D:getetag>\n           <C:calendar-data>BEGIN:VCALENDAR\n   VERSION:2.0\n  \
    \ PRODID:-//Example Corp.//CalDAV Client//EN\n   BEGIN:VTODO\n   DTSTAMP:20060205T235300Z\n\
    \   DUE;VALUE=DATE:20060106\n   LAST-MODIFIED:20060205T235308Z\n   SEQUENCE:1\n\
    \   STATUS:NEEDS-ACTION\n   SUMMARY:Task #2\n   UID:E10BA47467C5C69BB74E8720@example.com\n\
    \   BEGIN:VALARM\n   ACTION:AUDIO\n   TRIGGER;RELATED=START:-PT10M\n   END:VALARM\n\
    \   END:VTODO\n   END:VCALENDAR\n   </C:calendar-data>\n         </D:prop>\n \
    \        <D:status>HTTP/1.1 200 OK</D:status>\n       </D:propstat>\n     </D:response>\n\
    \     <D:response>\n       <D:href>http://cal.example.com/bernard/work/abcd6.ics</D:href>\n\
    \       <D:propstat>\n         <D:prop>\n           <D:getetag>\"fffff-abcd6\"\
    </D:getetag>\n           <C:calendar-data>BEGIN:VCALENDAR\n   VERSION:2.0\n  \
    \ PRODID:-//Example Corp.//CalDAV Client//EN\n   BEGIN:VTODO\n   COMPLETED:20051223T122322Z\n\
    \   DTSTAMP:20060205T235400Z\n   DUE;VALUE=DATE:20051225\n   LAST-MODIFIED:20060205T235308Z\n\
    \   SEQUENCE:1\n   STATUS:COMPLETED\n   SUMMARY:Task #3\n   UID:E10BA47467C5C69BB74E8722@example.com\n\
    \   END:VTODO\n   END:VCALENDAR\n   </C:calendar-data>\n         </D:prop>\n \
    \        <D:status>HTTP/1.1 200 OK</D:status>\n       </D:propstat>\n     </D:response>\n\
    \     <D:response>\n       <D:href>http://cal.example.com/bernard/work/abcd7.ics</D:href>\n\
    \       <D:propstat>\n         <D:prop>\n           <D:getetag>\"fffff-abcd7\"\
    </D:getetag>\n           <C:calendar-data>BEGIN:VCALENDAR\n   VERSION:2.0\n  \
    \ PRODID:-//Example Corp.//CalDAV Client//EN\n   BEGIN:VTODO\n   DTSTAMP:20060205T235600Z\n\
    \   DUE;VALUE=DATE:20060101\n   LAST-MODIFIED:20060205T235308Z\n   SEQUENCE:1\n\
    \   STATUS:CANCELLED\n   SUMMARY:Task #4\n   UID:E10BA47467C5C69BB74E8725@example.com\n\
    \   END:VTODO\n   END:VCALENDAR\n   </C:calendar-data>\n         </D:prop>\n \
    \        <D:status>HTTP/1.1 200 OK</D:status>\n       </D:propstat>\n     </D:response>\n\
    \     <D:response>\n       <D:href>http://cal.example.com/bernard/work/abcd8.ics</D:href>\n\
    \       <D:propstat>\n         <D:prop>\n           <D:getetag>\"fffff-abcd8\"\
    </D:getetag>\n           <C:calendar-data>BEGIN:VCALENDAR\n   VERSION:2.0\n  \
    \ PRODID:-//Example Corp.//CalDAV Client//EN\n   BEGIN:VFREEBUSY\n   ORGANIZER;CN=\"\
    Bernard Desruisseaux\":mailto:bernard@example.com\n   UID:76ef34-54a3d2@example.com\n\
    \   DTSTAMP:20050530T123421Z\n   DTSTART:20060101T000000Z\n   DTEND:20060108T000000Z\n\
    \   FREEBUSY:20050531T230000Z/20050601T010000Z\n   FREEBUSY;FBTYPE=BUSY-TENTATIVE:20060102T100000Z/20060102T120000Z\n\
    \   FREEBUSY:20060103T100000Z/20060103T120000Z\n   FREEBUSY:20060104T100000Z/20060104T120000Z\n\
    \   FREEBUSY;FBTYPE=BUSY-UNAVAILABLE:20060105T100000Z/20060105T120000Z\n   FREEBUSY:20060106T100000Z/20060106T120000Z\n\
    \   END:VFREEBUSY\n   END:VCALENDAR\n   </C:calendar-data>\n         </D:prop>\n\
    \         <D:status>HTTP/1.1 200 OK</D:status>\n       </D:propstat>\n     </D:response>\n\
    \   </D:multistatus>\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Cyrus Daboo\n   Apple Inc.\n   1 Infinite Loop\n   Cupertino,\
    \ CA  95014\n   USA\n   EMail: cyrus@daboo.name\n   URI:   http://www.apple.com/\n\
    \   Bernard Desruisseaux\n   Oracle Corporation\n   600 Blvd. de Maisonneuve West\n\
    \   Suite 1900\n   Montreal, QC  H3A 3J2\n   CANADA\n   EMail: bernard.desruisseaux@oracle.com\n\
    \   URI:   http://www.oracle.com/\n   Lisa Dusseault\n   CommerceNet\n   169 University\
    \ Ave.\n   Palo Alto, CA  94301\n   USA\n   EMail: ldusseault@commerce.net\n \
    \  URI:   http://commerce.net/\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
