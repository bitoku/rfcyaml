Abstract This document describes detailed Input/Output parameters for the Internet Open Trading Protocol (IOTP)
Payment Application Programming Interface (API).
It also describes procedures in the Payment Bridge for the use of SET
(SET Secure Electronic Transaction) as the payment protocol within Version 1.0 of the IOTP.
This chapter describes the outline of this document.
1.1 Objectives of this Document
This document describes how SET (SET Secure Electronic Transaction) works within the IOTP
1.2 Scope of this specification
The version of IOTP specification This document is written based on IOTP Version 1.0
The version of SET specification This document is written based on SET Version 1.0 [SET].
The version of IOTP Architecture document This document is written based on IOTP Payment API document Version 1.0 [IOTP Payment API].
1.3 Audience This document is indented for readers who are familiar with the following documents: 1) IOTP Specification Version 1.0
[RFC 2801] 2) SET Specification, in particular Book 2:Programmer's Guide and Book3:
External Interface Guide to SET Secure Electronic Transaction 4)
Architecture and Payment API [IOTP API]
1.4 Notation SET Messages and Elements are described with the prefix "SET".
This document uses the following terms:
The specification described in this document.
Both SET Messages and SET Initiation Messages 2.
This chapter describes the requirements and development policies of SET/IOTP.
The requirements of SET/IOTP are as follows:
To be based on SET specifications.
Interoperability at the payment level must be maintained.
To not enforce modifications which are specific to SET/IOTP.
General features of IOTP should not be tampered with to cater to a particular payment method.
To keep integrity between IOTP and SET.
Inconstancy must not be raised between IOTP and SET elements when they have the same meaning.
The development policy of SET/IOTP is as follows:
To minimize the number of message round trips  To minimize the length of messages 3.
This chapter describes the difference in entity models between SET and IOTP, the definitions of Trading Roles in SET/IOTP, and the scope of SET/IOTP.
3.1 Entity models between SET and IOTP
The following table describes how SET and IOTP entities correspond to each other.
The following table describes the trading roles in SET/IOTP.
This individual corresponds with the CardHolder in SET.
An organization that processes negotiations on payments including SET payment transactions.
The same as in [RFC 2801].
The same as in [RFC 2801].
Provider 3.3 Scope of Transaction Types
The types of IOTP transactions that are supported in this document are as follows:  Brand Independent Baseline Purchase when SET is used for payment  Brand Dependent Baseline Purchase when SET is used for payment  Cash Advances
(Brand Independent and Brand Dependent case)
Status Inquiry on SET payments 3.4 Types of transaction not in scope
The types of transactions that are NOT covered in this document are as follows:
Credit Reversal Process  Customer Care Service with Consumer Related SET Certificate Registration  Customer Care Service with Consumer Related SET Certificate Registration Inquiry 4.
Interface between OAC and Existing Payment Software.
SET Bridge is also an interface between OAC and SET Core.
Existing Software that processes Payments.
The SET Core is software that supports mechanisms in SET specification from Book1 to Book3.
EPS does NOT necessarily have to implement the SET Initiation Processor, which is specified in SET EIG.
Both SET related OPB and EPS.
This chapter describes the outline of SET/IOTP trading types.
5.1 Baseline Purchase Three steps will take place in a Baseline Purchase in the following order:
(1) Offer Step Consumer selects goods/services over the Internet, for instance on the web, and then chooses the payment method (SET is selected), the SET brand, the payment currency, and then confirms the invoice.
There are two Offer Process types, Brand Independent and Brand Dependent.
In a Brand Independent Purchase, the Merchant sends the TPO Block and Offer Response Block simultaneously after the consumer's purchase decision.
The Brand Independent Purchase has the merit of eliminating one round of messages compared with the Brand Dependent Purchase because the contents of the Offer Response Block (for example, the description on the invoice) do not change based on the selected brand.
Brand Dependent Purchase Brand Dependent Purchase is used when the contents of the Offer Response Block are dependent on the selected Payment Brand.
With this method, the currency selection and discounts based on payment method can be implemented.
The Consumer confirms the order and then pays for the order with a SET Transaction.
The SET Transaction messages will be encapsulated in IOTP Messages.
After completing the Payment, the Consumer receives the goods/services via either on line or physical delivery.
5.2 Cash Advances Cash Advances can be made via a Value Exchange Transaction in IOTP.
A first Payment by SET and a second Payment by some other payment mechanism is supported in Baseline IOTP.
The Cash Advance has two types Brand Independent and Brand Dependent Cases.
5.3 Status Inquiry A Consumer can send a SET Payment Inquiry in IOTP.
The SET Message is encapsulated in an IOTP Message.
This chapter illustrates the general SET/IOTP message flows.
6.1 Baseline Purchase Baseline purchases consist of two types, Brand Independent Purchase and Brand Dependent Purchase.
Each type is illustrated in the charts below.
6.1.1 Brand Independent Baseline Purchase
The general flow of a Brand Independent Purchase is as follows: (1) Consumer Side (Before PayRequest Message)
Figure 3 Consumer Side for Brand Independent (1)
Consumer Side (After PayRequest Message)
Figure 6 Payment Handler side flow for Brand Independent 6.1.2 Brand Dependent Baseline Purchase
The general flow of a Brand Dependent Purchase is as follows: (1) Consumer Side (Before PayRequest Message)
Figure 7 Consumer Side flow for Brand Dependent (1) (2)
Consumer Side (After PayRequest Message)
This flow is the same as Brand Independent.
This flow is the same as Brand Independent.
6.2 Cash Advances IOTP Cash Advances processes can be made with a credit card using an IOTP Value Exchange Transaction.
In Cash Advances a first Payment by a SET Transaction, and a second Payment by some other payment mechanism, is supported in Baseline IOTP.
The general flow is omitted.
6.3 Status Inquiry The general flow of a Status Inquiry is as follows: (1)
Figure 10 Payment Handler Side flow for Status Inquiry 7.
This section provides a summary of SET/IOTP interactions with API calls as in [IOTP Payment API].
The description of parameters hereafter are written as follows:
Parameter name : Mandatory (M) or Optional (O) :
Description For more details on the IOTP Payment APIs, see [IOTP Payment API]. "
" in the Description is the same as description in the [IOTP Payment API].
Status is the status of SET/IOTP.
Though some Fields are specified "#IMPLIED" in [IOTP Payment API], if the fields must be used in SET/IOTP, this document specifies the status as Mandatory, (M).
7.1 Brand Compilation Related API Calls 7.1.1
Payment Brand Receive the payment scheme specific packaged data to generate Brand Component.
In this version of SET/IOTP, This API must be called before Find Accepted Payment Protocol function.
M : This must be set "Debit".
O : The details are not specified in this document.
M : See NOTE below.
This is defined in the section 8.2.1.
Brand Name, such as "MasterCard".
O : This is not specified in this document.
O : This is not used in the SET/IOTP.
Content 7.1.2 Find Accepted Payment Protocol Receive the payment scheme specific packaged data to generate the PayProtocol Component.
This is defined in the section 8.2.1.
M : This must be set "Debit".
O : This is not used in the SET/IOTP.
O : This is not specified in the SET/IOTP.
M : See NOTE below.
M : NOTE Parameters of ProtocolItem
M : This is set "SETv1.0".
This is set the Payment Protocol Specific ID corresponding to the BrandId as Input Parameter and ProtocolId as the Output Parameter.
For the detail, see 8.2.2.
This is not specified in this document but must be included the protocol name and its version at least.
: O : The Net Location indicating where a unsecured Payment Request Message should be sent if this protocol choice is used.
O : The Net Location indicating where a secured Payment Request Message should be sent if this protocol choice is used.
O : This is not used in the SET/IOTP.
See for the details to section 8.3.1.
Multiple Components are not arrowed in the current version of SET/IOTP.
Note Parameters of CurrencyAmount   CurrCodeType
This should be set "ISO4217 A".
7.1.3 Get Payment Initialization Data
This API is used to get the packaged content in Payment Component.
: See the details of section 8.2.1.
M : Organization ID which is used to get TradingRolePackagedContents, which depend on the organizations for each.
: This field must be set "SETv1.0".
O : This is not used in the current version
Otherwise, passed the same input data to OAC.
The Name Attribute of the packaged contents must include "Payment:" as the prefix, for example "Payment:SET OD".
Multiple TradingRoleData may be returned.
This is not used in the current version of SET/IOTP.
This is not used in the current version of SET/IOTP.
This is not used in the current version of SET/IOTP.
7.2 Brand Selection Related API Calls 7.2.1 Find Payment Instrument
This API is used to get the Payment Instruments that can be accepted by the Payment Handler on behalf of the Merchant.
: See the details of section 8.2.2.
: This must be set "SETv1.0".
M : This must be set "Debit".
M : See details for section 8.3.1.
Multiple PayInstrument Ids may be returned.
: M : This must be unique each SET Certificates which the Consumer can use.
If the SET Bridge receives this API Message, the SET Bridge returns three packaged content fields.
This is set the consumer selected BrandId.
This is set the consumer selected PaymentInstrumentID.
: This must be set "SETv1.0".
This is set the consumer selected ProtocolBrand Component.
Payment Transaction Related API Calls
In SET/IOTP, this API is used for the Consumer's SET Bridge to process the 1st SET Initiation and any subsequent SET messages.
: M : ID for the consumer selected Brand.
See the details of section 8.2.1.
PaymentInstrumentId: M : ID for the consumer selected Instrument.
M : Indicates the payment direction from the Consumer's prospective.
O : This is not used in the SET/IOTP.
O : This is not used in the SET/IOTP.
: M : ID for the consumer selected Protocol dependent Brand information.
: M : "Continue" must be set if there is in no problem
Content 7.3.2 Start Payment Payment Handler
This API is used to initiate a payment on the Payment Handler's side.
The SET Related Module does a payment initialization.
The SET Related Module processes
SET Message received and returns the appropriate SET Message (e.g., 2nd SET Initiation or SET PinitRes message).
: M : ID for the consumer selected Brand.
See the details of section 8.2.1.
O : ID for the consumer generated payment transaction.
This should be set "ISO4217 A".
This must be set "SETv1.0".
O : This is not used in the SET/IOTP.
O : This is not used in the SET/IOTP.
M : Information for the consumer selected Protocol dependent Brand.
The Name Attribute of the packaged contents must include "Payment:" as the prefix, for example "Payment:SET OD".
This API is used to restart a payment transaction when the transaction is suspended for some reason such as a time out.
The last SET Message relevant to this suspended transaction is returned as the Response.
O : This is not used in the current version of SET/IOTP.
This API is used to pass a SET related message, received from the counter party, to the SET Bridge, and accept the next SET message as a response.
(1) Consumer Side Payment Bridge Input Parameters
: M : Set ConsumerPayId
if SET PRes message is received in the PaySchemePackagedContent as the input parameter, otherwise set "Continue".
(2) Payment Handler Side Payment Bridge Input Parameters
M : Set "End" if SET PRes message is received in the PaySchemePackagedContent as the output parameter, otherwise set "Continue".
This API is used by the OAC to change the Process State of the OPB.
For instance, it is used to change the Payment Status after a SET Payment Transaction was completed.
When an error or suspend happens, this API is also used.
(1) Consumer Side Payment Bridge Input Parameters
: M : Set ConsumerPayId
O : See section 8.13.
O : This field is not specified in SET/IOTP.
7.4 General Inquiry API Calls 7.4.1 Payment Instrument Inquiry
This API is not used in the current version of SET/IOTP.
This API is used to check whether the payment Bridge or its wallet is currently in use, or not.
This API is used both Consumer and Payment Handler.
O : There is no output parameters.
7.5 Payment Related Inquiry API Calls 7.5.1 Check Payment Receipt
This API is used to check a Payment Receipt.
However since the current SET specification does not support Receipts, SET/IOTP sends its own visual information of a Receipt to the SET Bridge.
There is no output Parameter.
This expands an IOTP Payment Receipt Component packaged data into a form which may be used for display or printing purposes.
LID M in the SET PRes message is set.
(The format of this value must be same as SET Initiation.)
M : Amount   AuthRatio (or CapRatio if available).
CapRatio should be the high priority than AuthRatio.
This value should be used the Date field of MessageWrapper in the SET PRes message xml:
O : This is not used in the SET/IOTP.
O : This is not used in the SET/IOTP.
O : This is not used in the SET/IOTP.
O : This is not used in the SET/IOTP.
O : This is not used in the SET/IOTP.
This API is used to check the payment status.
For example, when the OAC receives a Continue Payment Response API, it uses this API if the ContStatus is set to "End".
This API can be used at anytime.
(1) Consumer Payment Bridge Input Parameters
: M : Set ConsumerPayId
O : See 8.13 for the guideline of setting value.
O : See section 8.12.
O : This is not used in the SET/IOTP.
O : This is not used in the SET/IOTP.
(2) Payment Handler Payment Bridge Input Parameters
O : See section 8.13 for the guideline of setting value.
O : See section 8.12.
O : This is set "PRes".
O : This is not used in the SET/IOTP.
This API call returns the SET InqReq Message in order to process a SET Inquiry.
The Payment Handler uses this API request for Consumer initiated inquiry processing.
In SET/IOTP, the Payment Handler's SET Bridge receives a SET InqReq message in an InquirePaymentDetail API.
The SET Core processes it, and creates a SET InqRes message.
The response encapsulates the SET InqRes message.
This chapter describes the core concepts for the development of SET/IOTP.
8.1 Relationships between them for IOTP Purchase/Cash Advances
This document describes SET Initiation Messages based on the [SET EIG].
Merchant sends the 1st SET Initiation Message to the Consumer in order to activate a SET payment transaction.
After this message, the other SET Initiation Messages (JPO, etc.) and the SET payment Transaction (SET PinitReq message, etc.) are exchanged between the Consumer and the Payment Handler.
The Merchant sends the data via the Consumer.
The Merchant sends the data out of band.
In case (a), the Merchant sends the data by encapsulating it into TradingRoleData.
PackagedContent inside the Offer Response Block sent to Consumer.
The data is copied to the Payment Request Block and sent to the Payment Handler.
This case assumes that the format of the data is already agreed upon between the Merchant and the Payment Handler.
This document does not specify case (b).
8.2 Definition of Identifiers 8.2.1 Definition of BrandId BrandId should be used registered identification for IANA.
Now, the following BrandIds have registered: Amex, Dankort, JCB, Maestro, MasterCard, MICOS, VISA, atCredits, EZpay, GeldKarte, Mondex, paybox 8.2.2 Definition of ProtocolBrandId ProtocolBrandID is defined as follows:
SET BrandID is defined as brand[:Product].
([] is indicated as optional.)
In SET, The brandID is a brand name, which corresponds to the brand of the payment card.
Additionally the Product is a product name, which is defined as the type of product within the specific brand such as Gold Card.
Set IOTP ProtocolBrandId as follows:
In here,  The brand above is the same as the sub data of SET BrandID, as Brand Name (brand), defined in SET.
Product above is the same as the sub data of SET BrandID, as Product Name (Product), defined in SET.
PCN above is the Promotional Card Name, and is written in the SET Certificates.
Visa:Gold:WalMart Since SET Brand ID has a colon between brand and Product, the two colons should be able to delimit Brand, Product, and PCN.
Product and PCN can omit if necessary.
For the detail of these definitions are follows:
The case of omitting Product Definition:
The case of omitting PCN Definition:  brand:
The case of omitting Product, PCN Definition:
VISA:Gold: VISA:: VISA: ProtocolBrandId which there is no brand.
8.2.3 Definition of ProtocolId Protocolld defines as follows:
revision Where the version is number matching a major SET version, and
the revision is the number matching a minor SET revision.
In the current version of SET/IOTP, "SETv1.0" is fixed as ProtocolId.
8.2.4 Relationship between Ids ProtocolBrandId must be unique and depends on BrandId and ProtocolId.
The followings are map among BrandId and ProtocolId, which have registered in IANA, and ProtocolBrandId.
Regarding to the BrandIds except above, the BrandId registrant (e.g., credit card company) MUST register it in order to be able to map one to one between ProtocolBrandId and the pair of BrandId and ProtocolId.
8.3 Process prior to Payment 8.3.1 FindAcceptedPaymentProtocol
Function (1) Parameter of PayProtocolPackagedContent
O : This is not used in SET/IOTP.
M : This should be set "PCDATA".
M : SET specific protocol data.
Includes data that is used to create the 1st SET Initiation Message that is not contained in other IOTP elements.
(2) Parameter in the ContentData Parameters of ContentData are described below.
The Field Values follow the [SET EIG].
For Example: MIME Version: 1.0 Content Transfer Encoding: Binary SET Initiation Type: Payment Initiation
SET Recurring: 31 19960223 SET Service URL:
The contents in ProtoclPackagedContent must be US ASCII and encoded by BASE64.
Information of PayInstrument Returns a list of Payment Instrument IDs related to the BrandId and ProtocolBrandId.
In this document, BrandId and ProtocolId are defined in section 8.2.
In this document, Brand has two recognized meanings in SET/IOTP, as follows: Brand as Primary Brand:
The Primary Brand is the Brand which is defined as brand in SET, such as VISA, MasterCard, Nicos.
Brand as Dual Brand or Promotional Brand: The Dual Brand is the payment instrument which has two Brand, such as UC VISA (UC Card and VISA Card)
This style is popular in Japan.
A Promotional Brand means that, if the Consumer pays with that Brand, then the Consumer will receive some additional benefit such as discount or frequent flyer point.
ProtocolBrandId as a Primary Brand Example: "MasterCard", "MasterCard::UC", "MasterCard:Gold:" and "MasterCard::WalMart" are all MasterCard Brands.
ProtocolBrandId as a Dual Brand or a Promotional Brand Example: "MasterCard::UC" is Dual Brand of "MasterCard" and "UC".
SET:MasterCard::WalMart" is Promotional Brand of MasterCard  WallMart.
The SET Bridge receives the ProtocolBrandId from the OAC in the FindPaymentInstrument Function, (1)
If the accepted ProtocolBrandId is XXX:
If the accepted ProtocolBrandId is XXX:
YYY:ZZZ The SET Related Module searches for ProtocolBrandIDs with the string "XXX:YYY:ZZZ", only the corresponding PaymentInstrumentIds of the ProtocolBrandIds that match the Dual Brand or Promotional Brand will be returned to OAC, for the Consumer to select from.
If the SET Bridge receives a ProtocolBrandId as "MasterCard" in the FindPaymentInstrument Function, the SET Bridge will return "1","2", and "3".
However, if the SET Bridge receives a ProtocolBrandId as "MasterCard::UC" to OAC, SET Bridge will returns only "2".
If necessary, The SET Related Module generates TradingRolePackagedContent
corresponded to the received ReceiverOrgID.
The ContentData of TradingRolePackagedContent is the information which the Payment Handler needs to process the SET Transaction (for example, the SET SaleDetail.
The ContentData, Content, and the Transform must be agreed upon between the Merchant and the Payment Handler beforehand.
The Name Attribute of the packaged contents must include "Payment:" as the prefix, for example "Payment:SET OD".
If there is no PackagedContent corresponding to ReceiverOrgID, such that the SET Related Module does not need to create the PackagedContent, the TradingRolePackagedContent is not created.
O : This is not specified in the current SET/IOTP.
M : Should be identical between the Payment Handler and the Merchant.
M : Element Data for the Payment Handler to process the SET Transaction.
Should be identical between the Payment Handler and the Merchant.
8.4 Process of Payment 8.4.1
StartPaymentConsumer Function (1) Process of the 1st SET Initiation Message
Since there are similar items between the SET Initiation Message Fields and IOTP Elements, IOTP elements can be used for the corresponding SET Initiation Fields.
Other SET Initiation Fields, except URL information (for detail, see below), is encapsulated in the PayProtocolPackagedContent.
This document does not specify how the SET Related Module implements the 1st SET Initiation Process.
The following table shows the list of SET Initiation Fields that corresponds to IOTP Elements.
The hash data of ContentData of PackagedContent of Order Component.
SET Version can be corresponded to ProtocolId.
The version number appears after the "v" for the SET Version.
SET Version Figure 12 ProtocolId vs SET Version (c)
SET Brand: SET Brand can be corresponded to ProtocolBrandId.
SET PurchAmt: It is necessary to adjust the format of the Amount between IOTP and SET, since IOTP and SET use different syntax.
In SET/IOTP, The "ISO4217 A" (the currency code which is represented by three alphabet, such as "USD") is mandatory.
Consumer Side SET Related Module should have a mapping table between "ISO4217 A" and "ISO4217 N" (the currency code which is represented by three digit, such as "840").
1 Content of the SET PurchAmt
The content of the SET PurchAmt is as follows:
[SET] Book 2, page 299.
For example, $129.50 is represented by "840 12950  2".
In this case, the corresponding values for the "currency", "amount" and "amtExp10" are "840", "12950" and " 2" respectively.
2 Content of IOTP Amount Elements
The content of the three IOTP amount elements consist of the following: Amount, CurrCodeType and CurrCode.
For a description of each, see [RFC 2801].
For example, $129.50 is represented by the following: CurrCodeType "ISO4217 A" CurrCode "USD" Amount "129.50" (d)
3 Example of how to translate The one to one mapping between the IOTP format and the SET format is very simple.
This example of sequence below uses the example of IOTP amount Element above.
1) Translate from IOTP CurrCode (ISO4217 A) to SET currency
For example, if CurrCode "USD", then the value of currency is "840".
2) Calculate how many decimal places are represented in the Amount.
For example, if Amount "129.50", there are "2" decimal places.
10^[The number of the Amount's decimal places]
Amount corresponds to the SET amount.
In the above example, SET amount   10^2   129.50   12950.
5) Concatenate three integers and use white spaces as a delimiter.
Finally, in the above case, the SET PurchAmt is represented as "840 12950  2".
SET OD (Order Description) vs. IOTP Order Information
In the IOTP, the OAC handles the Order Information, such as display use, as SET uses the Order Information.
Payment Handler does not know the actual Order Information because the Merchant and Payment Handler may exist in the separate domains.
However, Payment Handler needs to get the SET OD from Merchant via the Consumer or directly because Payment Handler needs the SET OD to create 2nd SET Initiation message and after.
In this situation, the Merchant should not pass the actual order information to the Payment Handler because the order information may be considered private data.
Therefore, SET/IOTP defines SET OD as the hash of IOTP Order Information.
The hash algorithm must be SHA1.
But the Order Component may be included two or more Packaged Content (see [RFC 2801]).
Therefore SET/IOTP specifies to create hash as follows:
If the Name attribute does not have the Name attribute, such that the Order Component have only one Packaged Content, hash the Contents Data using SHA1 simply and be encoded by BASE64.
Otherwise, such that there exists the Name attribute, sort the Packaged Contents in the UTF 16 character code order of Name attribute and hash the Content Data using SHA1 and concatenate them in proper sequence, then hash it using SHA1 again and be encoded by BASE64.
To avoid different character encodings between applications, in this document, SET OD MUST be constructed from the ContentData in OrderPackagedContent as follows:
(1) Convert it to network byte ordered Unicode encoding data.
(2) Hash (1) using SHA1 (3) Convert (2) to BASE64 US ASCII data
Therefore, "Content Type","charset" MUST be "text/plain","us ascii" respectively when SET Initiation message is constructed.
In IOTP, the OAC handles location data therefore the OAC does not need to pass net location data on to the OPB.
However, some vender implemented consumer SET/IOTP wallets may need the URL information to process the SET Initiation.
(2) Create the next SET related message
SET PInitReq or SET Initiation Response) at the SET Related Module, to be sent to the Payment Handler.
(3) Error check of the next SET related message.
If SET related message which is created in (2) is SET Initiation Response and includes any error in it, SET Related Module creates an ErrorResponse message with ErrorCode to "EncapProtErr" and the Severity to "HardError" and sent it to the OAC.
The followings are the parameter of PaySchemePackagedContent in StartPaymentConsumerResponse.
M : SET Related Message which is encoded by BASE64.
(e.g., SET PinitRes message or SET Initiation Response Message)
O : This is not used in the current SET/IOTP.
This field should be set to "PCDATA".
M : This must be set "BASE64".
(5) Store of the Payment Information SET Bridge should store the following in the DataBase:  ConsumerPayId
PaySchemePackagedContent  ContStatus  ContentSoftwareId (corresponding to the PaySchemePackagedContent)  ProcessState 8.4.2
StartPaymentPaymentHandler Function (1) Process for TradingRoleData SET Bridge must processes appropriately, for example pass it to the SET Core, if there exists the TradingRolePackagedContent as the input Parameter.
The SET Related Module processes the SET Initiation Response or the SET Transaction (SET PInitReq).
In addition, the SET Related Module generates a message (the next SET Initiation Message or SET PInitRes) corresponding to the results of the processed message.
This message will be sent to the Consumer.
(3) Error check of the next SET related message.
If SET related message which is created in (2) includes any error, SET Related Module create an ErrorResponse message with ErrorCode to "EncapProtErr" and the Severity to "HardError" and sent it to the OAC.
(4) Generate PaySchemePackagedContent PaySchemePackagedContent which Encapsulate the SET Initiation Message or SET PInitRes into ContentData and generate the PaySchemePackagedContent.
The Parameters of PaySchemePackagedContent as Output is as follows:
M : SET Related Message which is encoded by BASE64 (e.g., SET PinitRes message or SET Initiation Response Message).
O : This is not used in the current SET/IOTP.
This field should be set to "PCDATA".
M : This must be set "BASE64" 8.4.3 ContinueProcess Function (Consumer Side) (1)
The Parameters of PaySchemePackagedContent as Input is as follows:
M : SET Related Message which is encoded by BASE64 (e.g., SET PinitRes message, SET PRes message or SET Initiation Response Message).
O : This is not used in the current SET/IOTP.
This field should be set to "PCDATA".
M : This must be set
"BASE64" SET Related Module processes the SET Related Message in the PaySchemePackagedContent
, then SET Related Message corresponding to the processed message is created if necessary.
(2) SET Related Message Error Check
If SET related message which is created in (2) includes any error, SET Related Module create an ErrorResponse message with ErrorCode to "EncapProtErr" and the Severity to "HardError" and sent it to the OAC.
The followings are the parameter of PaySchemePackagedContent in ContinueProcessResponse.
M : SET Related Message which is encoded by BASE64 (e.g., SET PinitReq message, SET PReq message or SET Initiation Response Message).
O : This is not used in the current SET/IOTP.
This field should be set to "PCDATA".
M : This must be set "BASE64".
If the ContentData which has received from Payment Handler is SET PRes message, this data is not created.
8.4.4 ContinueProcess Function (Payment Handler Side)
(1) Brand Integrity Check between IOTP Elements and SET Elements
Since the Consumer sets the Amount and Brand in the SET Message, based on the IOTP message, it might be altered when the IOTP message is copied to the SET message.
Thus, the Payment Handler needs to check the Elements in IOTP components (Payment, etc.)
and the Elements in the SET message to make sure they are consistent.
The IOTP Brand specified by the Merchant should correspond to the Brand used in the SET payment.
The Brand Integrity check sequence is as follows: (a)
After receiving the SET PReq message, check the Consumer selected Brand information (e.g., ProtocolBrandId) in the IOTP Payment Request against information in the SET certificate in the SET PReq message.
If they do not match, return a SET Bridge Level Error (Severity "HardError", ErrorCode "AttNotValid" and Names "BrandId").
Additionally, the SET PReq message signature must be verified with the SET CardHolder's certificate.
(This is done during a normal SET Transaction.)
This integrity check is necessary evenif
There is no Promotional Card Name in the ProtocolBrandId because SET may have selected the MasterCard even though IOTP has selected the VISA.
(2) SET Related Process Encapsulate the SET related Message (SET Initiation Message or SET Transaction Message) in to Content Data of PaySchemePackagedContent and send it to the Sender.
The followings are the parameters of PaySchemePackagedContent as output.
M : SET Related Message which is encoded by BASE64 (e.g., SET PinitReq message, SET PReq message or SET Initiation Response Message).
O : This is not used in the current SET/IOTP.
This field should be set to "PCDATA".
M : This must be set "BASE64".
(3) SET Related Message Error Check
If SET related message which is created in (2) includes any error, SET Related Module create an ErrorResponse message with ErrorCode to "EncapProtErr" and the Severity to "HardError" and sent it to the OAC.
If SET related message which is created in (2) is SET PRes message, and its message includes except: (a) CompletionCode in SET PRes message is "authorizationPerformed" and AuthCode is "Approved" or
(b) CompletionCode in SET PRes message is "capurePerformed" and CapCode "Success",
SET Related Module create ErrorResponse message with ErrorCode to "BusinessError"and the Severity to "HardError" and sent it to the OAC.
The followings are the parameter of PaySchemePackagedContent in ContinueProcessResponse.
M : SET Related Message which is encoded by BASE64 (e.g., SET PinitRes message, SET PRes message or next SET Initiation Message).
This field should be set to "PCDATA".
M : This must be set "BASE64".
If ContentData includes the SET PRes message, ContStatus MUST be "End".
(1) Setting ProcessState Values for the ProcessState are described in section 8.9.2.
(2) Setting CompletionCode Set to "Unspecified" when a SET Business Failure has occurred, and set StatusDesc to the value corresponding to AuthCode or CapCode.
The values for PayStatusDesc are not specified in the SET/IOTP.
(4) Create PayReceiptNameRefs Set to "PRes" in the PayReceiptNameRefs 8.5 Payment Receipt 8.5.1
SET Related Module does not check the Payment Receipt Information especially, sends the general response message as long as valid request message.
M : This must be set "BASE64".
M : SET PRes message which is encoded by BASE64.
8.5.2 ExpandPayReceipt Function (1) PayReceiptPackagedContents
The Parameters of PayReceiptPackagedContent are as follows:
M : This must be set "BASE64".
M : SET PRes message which is encoded by BASE64.
(2) Get the current status information
SET Related Module gets out the following element from Data Base using ConsumerPayId, PaymentHandlerPayId as keys.
the SET Data SET Related Module gets the following data from SET PRes message which take as the Request Message.
(a) Date Field in the MessageWrapper Date field between SET and IOTP is slightly different.
The different things are as follows:
There is no TimeZone in the Date field of SET.
Second and Milli second can be omitted in the Date field of SET
Therefore, SET Related Module needs to compensate the Date information when TimeStamp field is set.
(b) AuthRatio in SET PRes message.
(CapRatio is high priority than AuthRatio if available.)
LID M in SET PRes message.
(The style of this value is the same as it of SET Initiation message.)
In SET/IOTP, SET Inquiry Initiation is not supported (i.e., omitted).
SET Inquiry Messages are embedded in the PaySchemeData element in IOTP Inquiry Messages.
The Parameters of PaySchemePackagedContent in StartPaymentInquiryResponse are follows:
O : This is not used in the SET/IOTP.
This field should be set to "PCDATA".
M : This must be set "BASE64".
SET InqReq message which is encoded by BASE64.
The Parameters of PaySchemePackagedContent in InqurePaymentStatus are follows:
O : This is not used in the SET/IOTP.
This field should be set to "PCDATA".
M : This must be set "BASE64".
SET InqReq message which is encoded by BASE64.
The Parameters of PaySchemePackagedContent in InquirePaymentStatusResponse are follows:
O : This is not used in the SET/IOTP.
This field should be set to "PCDATA".
M : This must be set "BASE64".
SET InqRes message which is encoded by BASE64.
The Parameter of PaySchemePackagedContent in ContinueProcess are follows:
O : This is not used in the SET/IOTP.
This field should be set to "PCDATA".
M : This must be set "BASE64".
SET InqRes message which is encoded by BASE64. 8.7 Resume Process
The Parameter of PaySchemePackagedContent in RequmePaymentConsumerResponse are as follows:
O : This is not used in the SET/IOTP.
This field should be set to "PCDATA".
M : This must be set "BASE64".
M : SET Related Message which is encoded by BASE64 (e.g., SET PinitRes message or SET Initiation Response Message).
8.8 SET Scheme Specific Authentication on IOTP IOTP authentication, which uses the SET Scheme, is not used in SET/IOTP.
When ContinueProcess Function is called : When ChangeProcessState Function (ProcessState "Failed") is called InProgress   ProcessError  : When ChangeProcessState Function (ProcessState "ProcessError") is called : The Technical Error (Hard Error) is occurred in SET Bridge InProgress   CompletedOK   :
When ChangeProcessState Function (ProcessState "Suspended") is called : ErrorCode "ResumeRequired" is is occurred.
When ChangeProcessState Function (ProcessState "ProcessError") is called (the Technical Error is occurred prior to ResumePayment  Consumer Function call) : The Technical Error (Hard Error) is occurred in SET Bridge (the Technical Error is occurred while ResumePaymentConsumer is calling) 8.9.2 SET Bridge ProcessState of Payment Handler
When ChangeProcessState Function (ProcessState "ProcessError") is called : The Technical Error (Hard Error) is occurred in SET Bridge : SET Error Message is occurred InProgress   CompletedOK   :
When SET Transaction is completed.
When ChangeProcessState Function (ProcessState "failed") is called : The Business Error is occurred in SET Bridge CompletedOK
When ChangeProcessState Function or CancelPayment Function (ProcessState "Failed") is called and the payment is cancelled.
8.10 Relationship between Pay Step and Deliv Step on SET/IOTP SET/IOTP recommends the following regarding Delivery: Physical Goods   For physical goods, the IOTP Delivery Exchanges should be omitted.
That is, set DelivExch False and DelivAndPayResp False in the Delivery Component.
This is to avoid the situation where the IOTP Delivery Handler must check with the IOTP Payment Handler on the status of a credit authorization.
When a Delivery Inquiry transaction might occur, the DelivReqNetLocn attribute in the DeliveryData Element must have been specified at the time of the original Offer Response Message.
If you want to use the Delivery Exchange, you need to process the inquiry of the credit authorization out of IOTP between IOTP Payment Handler and Delivery Handler.
For digital goods sold through SET/IOTP, authorization should be processed on a real time basis.
In SET/IOTP, the CompletionCode, which is a Business Error Code, is set as follows:
This value is not used.
This value is not used.
The IOTP Authentication has failed for any reason.
This value is not used.
This value is not used.
This value is not used.
This value is not used.
There is some known problem or error, which does not fall into one of the other CompletionCodes.
This document recommends to set the PercentComplete as follows:
In the current version of SET/IOTP, if a technical error occurs in the SET Bridge, the Severity has to be always set to "HardError".
This chapter describes types of handling Errors.
9.1 Types of Errors SET/IOTP defines the following error types: (1)
This is defined as an error which is NOT specified in [SET EIG] nor [SET].
IOTP Level Errors are divided into two types according to the following:
This error is defined in the [IOTP].
SET Related Module Level Error:
Error generated in by process on the SET Related Module, not specified in [SET EIG] nor [SET].
For example, when checking the consistency between SET and IOTP elements on SET Related Module, an error might be returned to OAC.
This is defined as an error which is specified in [SET EIG] or [SET].
SET Level Errors have been divided into two types of error according to following:
SET Technical Level Error: Error in the SET Related Module.
This error is defined in [SET] or [SET EIG].
SET Technical Level Errors are further subdivided into two types of errors: (a) SET Initiation Error Error while the SET Initiation Process is in progress.
when the SET Transaction (SET PInitReq message, SET PReq message, etc.) is in progress.
SET Business Level Error: Error when a business error (e.g., an authorization failure) occurs while the SET Transaction is being processed.
In SET, Business Level Errors will be returned in the SET PRes message.
SET does not use a SET Error Message for this type of error.
However, it is necessary to present the OAC with what kind of SET Business Error has occurred.
In this below, the details of each errors above are described.
9.2 IOTP Level Error (OAC Error)
When OAC Level Errors have occurred, if necessary, the sender and receiver must issue ChangeProcessState API and change the status.
For the detail of these errors, see [IOTP].
9.3 IOTP Level Error (SET Bridge Error)
This is the error generated in a process on the SET Related Module, not specified in [SET EIG] nor [SET].
For example, when checking the inconsistency between SET and IOTP elements on SET Related Module, it might cause an error.
This error should be notified to OAC.
In this case, as a response message, Payment Scheme Data is not returned.
An appropriate information must be set to Status Response.
9.4 SET Level Error (SET Technical Error)
There are two SET Initiation errors as follows:
Error generated in SET Initiation Message  Error generated in SET Initiation Response Message.
(1) SET Initiation Message Error [SET EIG] describes the error handling when a problem rises in SET Initiation Message.
So the Consumer will do the same error handling in 9.4.2.
When SET Initiation Error rises in 1st Initiation Message, an error message will be returned to the Merchant.
If an error occurs after 2nd Initiation Message, an error message will be returned to the Payment Handler.
SET Initiation Response will be generated having SET Error Field in Response Message Header and will be returned ErrorCode as "PayEncapError" and Severity as "HardError".
In SET EIG, there is no description about the handling on the problems in SET Initiation Response.
However, it is necessary to define some handling for the problems in SET/IOTP (b) Process of Payment Handler
When a problem rises in SET Initiation Response, SET Related Module generates ErrorResponse, which is included the "EnCapProtoErr" as ErrorCode and the "HardError" as Severity.
But PaySchemePackagedContent is not included in this API.
(2) Process of Consumer ChangeProcessState API must be issued, and ProcessState must be modified.
SET Transaction Error (1) Process of Sender
When a SET Transaction Error rises, SET Core creates SET Error Message.
Then the SET Related Module creates ErrorResponse Message which includes "HardError" as Severity, "EnCapProtoErr" as ErrorCode and PaySchemePackagedContent.
The SET Bridge passes the ErrorResponse Message to OAC.
OAC will generate an Error Block which includes PaySchemePackagedContent and sends it to the Receiver side.
(2) Process of Receiver With ContinueProcess API, receiver's OAC sends the message including the PaySchemeData to SET Bridge.
SET Bridge passes the SET Error Message to SET Core for this process.
After that, SET Bridge sends "End" status with ContinueProcessResponse API.
9.5 SET Level Error (SET Business Error)
(1) Process of Payment Handler
SET Related Module checks the SET Business Error in StatusCode in SET PRes message.
When SET Transaction Error occurs, SET Related Module creates ErrorResponse Message which is included SET PRes as PaySchemePackagedContent and ErrorCode as "BusinessError" and returns it to OAC.
OAC creates Payment Response Block after gets the SET scheme specific receipt in InquireProcessState/Response, and sends it to the Consumer.
(2) Process of Consumer SET Related Module conducts the same process as in the process that Consumer receives Payment Response Block.
In the IOTP, Merchant and Payment Handler may exist in different domains.
So, if the Merchant passes the payment related information to the Payment Handler via the Consumer, the payment security level may depend on the IOTP.
If you want to avoid this, you will need to check integrity of these data by using out of band communication between the Merchant and the Payment Handler.
In this case, the security level depends on the communication path between them.
This document does not ask for any action from IANA.
It references an existing registry, iotp codes, where at the time of publication of this RFC the following BrandID's are registered: Amex, Dankort, JCB, Maestro, MasterCard, MICOS, VISA, atCredits, EZpay, GeldKarte, Mondex, paybox
