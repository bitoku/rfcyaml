- title: __initial_text__
  contents:
  - '                   Telnet Remote Flow Control Option

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This RFC specifies a standard for the Internet community.\
    \  Hosts on\n   the Internet that do remote flow control within the Telnet protocol\n\
    \   are expected to adopt and implement this standard.  Distribution of\n   this\
    \ memo is unlimited.\n"
- title: Motivation
  contents:
  - "Motivation\n   This memo describes a method of remotely toggling flow control\n\
    \   between a user telnet process and the attached terminal.  Only flow\n   control\
    \ of data being transmitted from the telnet process to the\n   terminal is considered.\
    \  Many systems will also allow flow control of\n   data from the terminal to\
    \ the telnet process.  However there is\n   seldom need to change this behavior\
    \ repeatedly during the session.\n   There are two common ways of doing flow control:\
    \ hardware and\n   software.  Hardware flow control uses signals on wires dedicated\
    \ for\n   this purpose.  Software flow control uses one or two specific\n   characters\
    \ sent along the same path as normal input data.  Most\n   commonly, XOFF (control-S)\
    \ and XON (control-Q) are used to stop and\n   start output, respectively.  The\
    \ option described herein is useful\n   primarily where software flow control\
    \ is being used.  (Since hardware\n   flow control does not preempt any characters,\
    \ there is normally no\n   need to disable it.)\n   The primary difficulty with\
    \ software flow control is that it preempts\n   one or two characters.  Host software\
    \ often requires the user to be\n   able to input every possible ASCII character.\
    \  (Certain editors are\n   notorious for having XOFF and XON as commonly-used\
    \ commands.)  For\n   this reason, operating systems often allow programs to disable\
    \ flow\n   control.  While it is disabled, the characters that normally signal\n\
    \   flow control may be read as normal input.  In a telnet environment,\n   flow\
    \ control is normally done by the user telnet process, not by the\n   host computer.\
    \  Thus this RFC defines a way to propagate flow control\n   status from the host\
    \ computer to the user telnet process.\n"
- title: 1. Command Name and Code
  contents:
  - "1. Command Name and Code\n      TOGGLE-FLOW-CONTROL\n      Code = 33\n"
- title: 2. Command Meanings
  contents:
  - "2. Command Meanings\n      IAC WILL TOGGLE-FLOW-CONTROL\n         Sender is willing\
    \ to enable and disable flow control upon\n         command.\n      IAC WON'T\
    \ TOGGLE-FLOW-CONTROL\n         Sender refuses to enable and disable flow control.\
    \  Nothing is\n         implied about whether sender does or does not use flow\
    \ control.\n         It is simply unwilling to enable and disable it using this\n\
    \         protocol.\n      IAC DO TOGGLE-FLOW-CONTROL\n         Sender is willing\
    \ to send commands to enable and disable flow\n         control.\n      IAC DON'T\
    \ TOGGLE-FLOW-CONTROL\n         Sender refuses to send command to enable and disable\
    \ flow\n         control.\n      IAC SB TOGGLE-FLOW-CONTROL OFF IAC SE\n     \
    \    Sender requests receiver to disable flow control.  The code for\n       \
    \  OFF is 0.\n      IAC SB TOGGLE-FLOW-CONTROL ON IAC SE\n         Sender requests\
    \ receiver to enable flow control.  The code for\n         ON is 1.\n"
- title: 3. Default
  contents:
  - "3. Default\n      WON'T TOGGLE-FLOW-CONTROL\n         Flow control information\
    \ will not be exchanged.\n      DON'T TOGGLE-FLOW-CONTROL\n         Flow control\
    \ information will not be exchanged.\n"
- title: 4. Description of the Option
  contents:
  - "4. Description of the Option\n   Use of the option requires two phases.  In the\
    \ first phase, the\n   telnet processes agree that one of them will TOGGLE-FLOW-CONTROL.\n\
    \   WILL and DO are used only in this first phase.  In general there will\n  \
    \ be only one exchange of WILL and DO for a session.  Subnegotiations\n   must\
    \ not be issued until DO and WILL have been exchanged.  It is\n   permissible\
    \ for either side to turn off the option by sending a WONT\n   or DONT.  Should\
    \ this happen, no more subnegotiations may be sent,\n   unless the option is reenabled\
    \ by another exchange of DO and WILL.\n   Once the hosts have exchanged a WILL\
    \ and a DO, the sender of the DO\n   TOGGLE-FLOW-CONTROL is free to send subnegotiations\
    \ to enable and\n   disable flow control in the other process.  Normally, the\
    \ sender of\n   the DO will be a host, and the other end will be a user telnet\n\
    \   process, which is connected to a terminal.  Thus the protocol is\n   normally\
    \ asymmetric.  However it may be used in both directions\n   without confusion\
    \ should need for this arise.\n   As soon as the DO and WILL have been exchanged,\
    \ the sender of the\n   WILL must enable flow control.  This allows flow control\
    \ to begin in\n   a known state.  Should the option be disabled by exchange of\
    \ DONT and\n   WONT, flow control may revert to an implementation-defined default\n\
    \   state.  It is not safe to assume that flow control will remain in the\n  \
    \ state requested by the most recent subnegotiation.\n   Currently, only two command\
    \ codes are defined for the\n   subnegotiations: flow control off (code 0) and\
    \ flow control on (code\n   1).  Neither of these codes requires any additional\
    \ data.  However it\n   is possible that additional commands may be added.  Thus\n\
    \   subnegotiations having command codes other than 0 and 1 should be\n   ignored.\n\
    \      Here is an example of use of this option:\n         Host1: IAC DO TOGGLE-FLOW-CONTROL\n\
    \         Host2: IAC WILL TOGGLE-FLOW-CONTROL\n         (Host1 is now free to\
    \ send commands to change flow control.\n         Note that host2 must now have\
    \ enabled flow control.)\n         Host1: IAC SB TOGGLE-FLOW-CONTROL OFF IAC SE\n\
    \         Host1: IAC SB TOGGLE-FLOW-CONTROL ON IAC SE\n"
- title: 'Author''s Address:'
  contents:
  - "Author's Address:\n   Charles Hedrick\n   Rutgers University\n   Center for Computer\
    \ and Information Services\n   Hill Center, Busch Campus\n   P.O. Box 879\n  \
    \ Piscataway, NJ 08855-0879\n   Phone: (201) 932-3088\n   Email: HEDRICK@ARAMIS.RUTGERS.EDU\n"
