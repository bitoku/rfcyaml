- title: __initial_text__
  contents:
  - '         Media Type Specifications and Registration Procedures

    '
- title: Abstract
  contents:
  - "Abstract\n   This document defines procedures for the specification and\n   registration\
    \ of media types for use in HTTP, MIME, and other Internet\n   protocols.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo documents an Internet Best Current Practice.\n\
    \   This document is a product of the Internet Engineering Task Force\n   (IETF).\
    \  It represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   BCPs is available in Section\
    \ 2 of RFC 5741.\n   Information about the current status of this document, any\
    \ errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6838.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2013 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n     1.1.  Historical Note  . . . . . . . . . . . . . . . .\
    \ . . . . .  3\n     1.2.  Conventions Used in This Document  . . . . . . . .\
    \ . . . .  4\n   2.  Media Type Registration Preliminaries  . . . . . . . . .\
    \ . . .  4\n   3.  Registration Trees and Subtype Names . . . . . . . . . . .\
    \ . .  4\n     3.1.  Standards Tree . . . . . . . . . . . . . . . . . . . . .\
    \ .  4\n     3.2.  Vendor Tree  . . . . . . . . . . . . . . . . . . . . . . .\
    \  6\n     3.3.  Personal or Vanity Tree  . . . . . . . . . . . . . . . . .  6\n\
    \     3.4.  Unregistered x. Tree . . . . . . . . . . . . . . . . . . .  7\n  \
    \   3.5.  Additional Registration Trees  . . . . . . . . . . . . . .  7\n   4.\
    \  Registration Requirements  . . . . . . . . . . . . . . . . . .  7\n     4.1.\
    \  Functionality Requirement  . . . . . . . . . . . . . . . .  8\n     4.2.  Naming\
    \ Requirements  . . . . . . . . . . . . . . . . . . .  8\n       4.2.1.  Text\
    \ Media Types . . . . . . . . . . . . . . . . . . .  9\n       4.2.2.  Image Media\
    \ Types  . . . . . . . . . . . . . . . . . . 10\n       4.2.3.  Audio Media Types\
    \  . . . . . . . . . . . . . . . . . . 10\n       4.2.4.  Video Media Types  .\
    \ . . . . . . . . . . . . . . . . . 10\n       4.2.5.  Application Media Types\
    \  . . . . . . . . . . . . . . . 11\n       4.2.6.  Multipart and Message Media\
    \ Types  . . . . . . . . . . 11\n       4.2.7.  Additional Top-Level Types . .\
    \ . . . . . . . . . . . . 12\n       4.2.8.  Structured Syntax Name Suffixes \
    \ . . . . . . . . . . . 12\n       4.2.9.  Deprecated Aliases . . . . . . . .\
    \ . . . . . . . . . . 13\n     4.3.  Parameter Requirements . . . . . . . . .\
    \ . . . . . . . . . 13\n     4.4.  Canonicalization and Format Requirements .\
    \ . . . . . . . . 14\n     4.5.  Interchange Recommendations  . . . . . . . .\
    \ . . . . . . . 15\n     4.6.  Security Requirements  . . . . . . . . . . . .\
    \ . . . . . . 15\n     4.7.  Requirements Specific to XML Media Types . . . .\
    \ . . . . . 16\n     4.8.  Encoding Requirements  . . . . . . . . . . . . . .\
    \ . . . . 16\n     4.9.  Usage and Implementation Non-Requirements  . . . . .\
    \ . . . 17\n     4.10. Publication Requirements . . . . . . . . . . . . . . .\
    \ . . 18\n     4.11. Fragment Identifier Requirements . . . . . . . . . . . .\
    \ . 18\n     4.12. Additional Information . . . . . . . . . . . . . . . . . .\
    \ 19\n   5.  Media Type Registration Procedures . . . . . . . . . . . . . . 19\n\
    \     5.1.  Preliminary Community Review . . . . . . . . . . . . . . . 19\n  \
    \   5.2.  Submit Request to IANA . . . . . . . . . . . . . . . . . . 20\n    \
    \   5.2.1.  Provisional Registrations  . . . . . . . . . . . . . . 20\n     5.3.\
    \  Review and Approval  . . . . . . . . . . . . . . . . . . . 21\n     5.4.  Comments\
    \ on Media Type Registrations . . . . . . . . . . . 21\n     5.5.  Change Procedures\
    \  . . . . . . . . . . . . . . . . . . . . 21\n     5.6.  Registration Template\
    \  . . . . . . . . . . . . . . . . . . 22\n   6.  Structured Syntax Suffix Registration\
    \ Procedures . . . . . . . 23\n     6.1.  Change Procedures  . . . . . . . . .\
    \ . . . . . . . . . . . 24\n     6.2.  Structured Syntax Suffix Registration Template\
    \ . . . . . . 24\n   7.  Security Considerations  . . . . . . . . . . . . . .\
    \ . . . . . 25\n   8.  IANA Considerations  . . . . . . . . . . . . . . . . .\
    \ . . . . 26\n   9.  Acknowledgments  . . . . . . . . . . . . . . . . . . . .\
    \ . . . 27\n   10. References . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . 27\n     10.1. Normative References . . . . . . . . . . . . . . . . . .\
    \ . 27\n     10.2. Informative References . . . . . . . . . . . . . . . . . .\
    \ 28\n   Appendix A.  Grandfathered Media Types . . . . . . . . . . . . . . 30\n\
    \   Appendix B.  Changes since RFC 4288  . . . . . . . . . . . . . . . 30\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Recent Internet protocols have been carefully designed to\
    \ be easily\n   extensible in certain areas.  In particular, many protocols,\n\
    \   including but not limited to HTTP [RFC2616] and MIME [RFC2045], are\n   capable\
    \ of carrying arbitrary labeled content.\n   The mechanism used to label such\
    \ content is a media type, consisting\n   of a top-level type and a subtype, which\
    \ is further structured into\n   trees.  Optionally, media types can define companion\
    \ data, known as\n   parameters.\n   A registration process is needed for these\
    \ labels, so that the set of\n   such values are defined in a reasonably orderly,\
    \ well-specified, and\n   public manner.\n   This document specifies the criteria\
    \ for media type registrations and\n   defines the procedures to be used to register\
    \ media types (Section 5)\n   as well as media type structured suffixes (Section\
    \ 6) in the Internet\n   Assigned Numbers Authority (IANA) central registry.\n\
    \   The location of the media type registry managed by these procedures\n   is:\n\
    \     http://www.iana.org/assignments/media-types/\n"
- title: 1.1.  Historical Note
  contents:
  - "1.1.  Historical Note\n   The media type registration process was initially defined\
    \ for\n   registering media types for use in the context of the asynchronous\n\
    \   Internet mail environment.  In this mail environment, there is a need\n  \
    \ to limit the number of possible media types, to increase the\n   likelihood\
    \ of interoperability when the capabilities of the remote\n   mail system are\
    \ not known.  As media types are used in new\n   environments in which the proliferation\
    \ of media types is not a\n   hindrance to interoperability, the original procedure\
    \ proved\n   excessively restrictive and had to be generalized.  This was\n  \
    \ initially done in [RFC2048], but the procedure defined there was\n   still part\
    \ of the MIME document set.  The media type specification\n   and registration\
    \ procedure is now a separate document, to make it\n   clear that it is independent\
    \ of MIME.\n   It may be desirable to restrict the use of media types to specific\n\
    \   environments or to prohibit their use in other environments.  This\n   specification\
    \ incorporates such restrictions into media type\n   registrations in a systematic\
    \ way.  See Section 4.9 for additional\n   discussion.\n"
- title: 1.2.  Conventions Used in This Document
  contents:
  - "1.2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119] when they\n   appear in ALL CAPS.  They may also appear in lower\
    \ or mixed case as\n   plain English words, without any normative meaning.\n \
    \  This specification makes use of the Augmented Backus-Naur Form (ABNF)\n   [RFC5234]\
    \ notation, including the core rules defined in Appendix B of\n   that document.\n"
- title: 2.  Media Type Registration Preliminaries
  contents:
  - "2.  Media Type Registration Preliminaries\n   Registration of a new media type\
    \ or types starts with the\n   construction of a registration proposal.  Registration\
    \ may occur\n   within several different registration trees that have different\n\
    \   requirements, as discussed below.  In general, a new registration\n   proposal\
    \ is circulated and reviewed in a fashion appropriate to the\n   tree involved.\
    \  The media type is then registered if the proposal is\n   acceptable.  The following\
    \ sections describe the requirements and\n   procedures used for each of the different\
    \ registration trees.\n"
- title: 3.  Registration Trees and Subtype Names
  contents:
  - "3.  Registration Trees and Subtype Names\n   In order to increase the efficiency\
    \ and flexibility of the\n   registration process, different structures of subtype\
    \ names can be\n   registered to accommodate the different natural requirements\
    \ for,\n   e.g., a subtype that will be recommended for wide support and\n   implementation\
    \ by the Internet community, or a subtype that is used\n   to move files associated\
    \ with proprietary software.  The following\n   subsections define registration\
    \ \"trees\" that are distinguished by the\n   use of faceted names, e.g., subtype\
    \ names that begin with a \"tree.\"\n   prefix.  Note that some media types defined\
    \ prior to this document do\n   not conform to the naming conventions described\
    \ below.  See Appendix\n   A for a discussion of them.\n"
- title: 3.1.  Standards Tree
  contents:
  - "3.1.  Standards Tree\n   The standards tree is intended for types of general\
    \ interest to the\n   Internet community.  Registrations in the standards tree\
    \ MUST be\n   either:\n   1.  in the case of registrations associated with IETF\
    \ specifications,\n       approved directly by the IESG, or\n   2.  registered\
    \ by a recognized standards-related organization using\n       the \"Specification\
    \ Required\" IANA registration policy [RFC5226]\n       (which implies Expert\
    \ Review).\n   The first procedure is used for registrations from IETF Consensus\n\
    \   documents, or in rare cases when registering a grandfathered (see\n   Appendix\
    \ A) and/or otherwise incomplete registration is in the\n   interest of the Internet\
    \ community.  The registration proposal MUST\n   be published as an RFC.  When\
    \ the registration RFC is in the IETF\n   stream, it must have IETF Consensus,\
    \ which can be attained with a\n   status of Standards Track, BCP, Informational,\
    \ or Experimental.\n   Registrations published in non-IETF RFC streams are also\
    \ allowed and\n   require IESG approval.  A registration can be either in a stand-alone\n\
    \   \"registration only\" RFC or incorporated into a more general\n   specification\
    \ of some sort.\n   In the second case, the IESG makes a one-time decision on\
    \ whether the\n   registration submitter represents a recognized standards-related\n\
    \   organization; after that, a Media Types Reviewer (Designated Expert\n   or\
    \ a group of Designated Experts) performs the Expert Review as\n   specified in\
    \ this document.  Subsequent submissions from the same\n   source do not involve\
    \ the IESG.  The format MUST be described by a\n   formal standards specification\
    \ produced by the submitting standards-\n   related organization.\n   Media types\
    \ in the standards tree MUST NOT have faceted names, unless\n   they are grandfathered\
    \ in using the process described in Appendix A.\n   The \"owner\" of a media type\
    \ registered in the standards tree is\n   assumed to be the standards-related\
    \ organization itself.\n   Modification or alteration of the specification uses\
    \ the same level\n   of processing (e.g., a registration submitted on Standards\
    \ Track can\n   be revised in another Standards Track RFC, but cannot be revised\
    \ in\n   an Informational RFC) required for the initial registration.\n   Standards-tree\
    \ registrations from recognized standards-related\n   organizations are submitted\
    \ directly to the IANA, where they will\n   undergo Expert Review [RFC5226] prior\
    \ to approval.  In this case, the\n   Expert Reviewer(s) will, among other things,\
    \ ensure that the required\n   specification provides adequate documentation.\n"
- title: 3.2.  Vendor Tree
  contents:
  - "3.2.  Vendor Tree\n   The vendor tree is used for media types associated with\
    \ publicly\n   available products.  \"Vendor\" and \"producer\" are construed\
    \ very\n   broadly in this context and are considered equivalent.  Note that\n\
    \   industry consortia as well as non-commercial entities that do not\n   qualify\
    \ as recognized standards-related organizations can quite\n   appropriately register\
    \ media types in the vendor tree.\n   A registration may be placed in the vendor\
    \ tree by anyone who needs\n   to interchange files associated with some product\
    \ or set of products.\n   However, the registration properly belongs to the vendor\
    \ or\n   organization producing the software that employs the type being\n   registered,\
    \ and that vendor or organization can at any time elect to\n   assert ownership\
    \ of a registration done by a third party in order to\n   correct or update it.\
    \  See Section 5.5 for additional information.\n   When a third party registers\
    \ a type on behalf of someone else, both\n   entities SHOULD be noted in the Change\
    \ Controller field in the\n   registration.  One possible format for this would\
    \ be \"Foo, on behalf\n   of Bar\".\n   Vendor-tree registrations will be distinguished\
    \ by the leading facet\n   \"vnd.\".  That may be followed, at the discretion\
    \ of the registrant,\n   by either a media subtype name from a well-known producer\
    \ (e.g.,\n   \"vnd.mudpie\") or by an IANA-approved designation of the producer's\n\
    \   name that is followed by a media type or product designation (e.g.,\n   vnd.bigcompany.funnypictures).\n\
    \   While public exposure and review of media types to be registered in\n   the\
    \ vendor tree are not required, using the media-types@iana.org\n   mailing list\
    \ for review is encouraged, to improve the quality of\n   those specifications.\
    \  Registrations in the vendor tree may be\n   submitted directly to the IANA,\
    \ where they will undergo Expert Review\n   [RFC5226] prior to approval.\n"
- title: 3.3.  Personal or Vanity Tree
  contents:
  - "3.3.  Personal or Vanity Tree\n   Registrations for media types created experimentally\
    \ or as part of\n   products that are not distributed commercially may be registered\
    \ in\n   the personal or vanity tree.  The registrations are distinguished by\n\
    \   the leading facet \"prs.\".\n   The owner of \"personal\" registrations and\
    \ associated specifications\n   is the person or entity making the registration,\
    \ or one to whom\n   responsibility has been transferred as described below.\n\
    \   While public exposure and review of media types to be registered in\n   the\
    \ personal tree are not required, using the media-types@iana.org\n   mailing list\
    \ (see Section 5.1) for review is encouraged, to improve\n   the quality of those\
    \ specifications.  Registrations in the personal\n   tree may be submitted directly\
    \ to the IANA, where they will undergo\n   Expert Review [RFC5226] prior to approval.\n"
- title: 3.4.  Unregistered x. Tree
  contents:
  - "3.4.  Unregistered x. Tree\n   Subtype names with \"x.\" as the first facet may\
    \ be used for types\n   intended exclusively for use in private, local environments.\
    \  Types\n   in this tree cannot be registered and are intended for use only with\n\
    \   the active agreement of the parties exchanging them.\n   However, with the\
    \ simplified registration procedures described above\n   for vendor and personal\
    \ trees, it should rarely, if ever, be\n   necessary to use unregistered types.\
    \  Therefore, use of types in the\n   \"x.\" tree is strongly discouraged.\n \
    \  Note that types with names beginning with \"x-\" are no longer\n   considered\
    \ to be members of this tree (see [RFC6648]).  Also note\n   that if a generally\
    \ useful and widely deployed type incorrectly ends\n   up with an \"x-\" name\
    \ prefix, it MAY be registered using its current\n   name in an alternative tree\
    \ by following the procedure defined in\n   Appendix A.\n"
- title: 3.5.  Additional Registration Trees
  contents:
  - "3.5.  Additional Registration Trees\n   From time to time and as required by\
    \ the community, new top-level\n   registration trees may be created by IETF Standards\
    \ Action.  It is\n   explicitly assumed that these trees may be created for external\n\
    \   registration and management by well-known permanent organizations;\n   for\
    \ example, scientific societies may register media types specific\n   to the sciences\
    \ they cover.  In general, the quality of review of\n   specifications for one\
    \ of these additional registration trees is\n   expected to be equivalent to registrations\
    \ in the standards tree by a\n   recognized standards-related organization.  When\
    \ the IETF performs\n   such review, it needs to consider the greater expertise\
    \ of the\n   requesting organization with respect to the subject media type.\n"
- title: 4.  Registration Requirements
  contents:
  - "4.  Registration Requirements\n   Media type registrations are all expected to\
    \ conform to various\n   requirements laid out in the following sections.  Note\
    \ that\n   requirement specifics sometimes vary depending on the registration\n\
    \   tree, again as detailed in the following sections.\n"
- title: 4.1.  Functionality Requirement
  contents:
  - "4.1.  Functionality Requirement\n   Media types MUST function as actual media\
    \ formats.  Registration of\n   things that are better thought of as a transfer\
    \ encoding, as a\n   charset, or as a collection of separate entities of another\
    \ type, is\n   not allowed.  For example, although applications exist to decode\
    \ the\n   base64 transfer encoding [RFC2045], base64 cannot be registered as a\n\
    \   media type.\n   This requirement applies regardless of the registration tree\n\
    \   involved.\n"
- title: 4.2.  Naming Requirements
  contents:
  - "4.2.  Naming Requirements\n   All registered media types MUST be assigned top-level\
    \ type and\n   subtype names.  The combination of these names serves to uniquely\n\
    \   identify the media type, and the subtype name facet (or the absence\n   of\
    \ one) identifies the registration tree.  Both top-level type and\n   subtype\
    \ names are case-insensitive.\n   Type and subtype names MUST conform to the following\
    \ ABNF:\n     type-name = restricted-name\n     subtype-name = restricted-name\n\
    \     restricted-name = restricted-name-first *126restricted-name-chars\n    \
    \ restricted-name-first  = ALPHA / DIGIT\n     restricted-name-chars  = ALPHA\
    \ / DIGIT / \"!\" / \"#\" /\n                              \"$\" / \"&\" / \"\
    -\" / \"^\" / \"_\"\n     restricted-name-chars =/ \".\" ; Characters before first\
    \ dot always\n                                  ; specify a facet name\n     restricted-name-chars\
    \ =/ \"+\" ; Characters after last plus always\n                             \
    \     ; specify a structured syntax suffix\n   Note that this syntax is somewhat\
    \ more restrictive than what is\n   allowed by the ABNF in Section 5.1 of [RFC2045]\
    \ or Section 4.2 of\n   [RFC4288].  Also note that while this syntax allows names\
    \ of up to\n   127 characters, implementation limits may make such long names\n\
    \   problematic.  For this reason, <type-name> and <subtype-name> SHOULD\n   be\
    \ limited to 64 characters.\n   Although the name syntax treats \".\" as equivalent\
    \ to any other\n   character, characters before any initial \".\" always specify\
    \ the\n   registration facet.  Note that this means that facet-less standards-\n\
    \   tree registrations cannot use periods in the subtype name.\n   Similarly,\
    \ the final \"+\" in a subtype name introduces a structured\n   syntax specifier\
    \ suffix.  Structured syntax suffix requirements are\n   specified in Section\
    \ 4.2.8.\n   While it is possible for a given media type to be assigned additional\n\
    \   names, the use of different names to identify the same media type is\n   discouraged.\n\
    \   These requirements apply regardless of the registration tree\n   involved.\n\
    \   The choice of top-level type MUST take into account the nature of\n   media\
    \ type involved.  New subtypes of top-level types MUST conform to\n   the restrictions\
    \ of the top-level type, if any.  The following\n   sections describe each of\
    \ the initial set of top-level types and\n   their associated restrictions.  Additionally,\
    \ various protocols,\n   including but not limited to HTTP and MIME, MAY impose\
    \ additional\n   restrictions on the media types they can transport.  (See [RFC2046]\n\
    \   for additional information on the restrictions MIME imposes.)\n"
- title: 4.2.1.  Text Media Types
  contents:
  - "4.2.1.  Text Media Types\n   The \"text\" top-level type is intended for sending\
    \ material that is\n   principally textual in form.\n   Many subtypes of text,\
    \ notably including the subtype \"text/plain\",\n   which is a generic subtype\
    \ for plain text defined in [RFC2046],\n   define a \"charset\" parameter.  If\
    \ a \"charset\" parameter is defined\n   for a particular subtype of text, it\
    \ MUST be used to specify a\n   charset name defined in accordance to the procedures\
    \ laid out in\n   [RFC2978].\n   As specified in [RFC6657], a \"charset\" parameter\
    \ SHOULD NOT be\n   specified when charset information is transported inside the\
    \ payload\n   (e.g., as in \"text/xml\").\n   If a \"charset\" parameter is specified,\
    \ it SHOULD be a required\n   parameter, eliminating the options of specifying\
    \ a default value.  If\n   there is a strong reason for the parameter to be optional\
    \ despite\n   this advice, each subtype MAY specify its own default value, or\n\
    \   alternatively, it MAY specify that there is no default value.\n   Finally,\
    \ the \"UTF-8\" charset [RFC3629] SHOULD be selected as the\n   default.  See\
    \ [RFC6657] for additional information on the use of\n   \"charset\" parameters\
    \ in conjunction with subtypes of text.\n   Regardless of what approach is chosen,\
    \ all new text/* registrations\n   MUST clearly specify how the charset is determined;\
    \ relying on the\n   US-ASCII default defined in Section 4.1.2 of [RFC2046] is\
    \ no longer\n   permitted.  If explanatory text is needed, this SHOULD be placed\
    \ in\n   the additional information section of the registration.\n   Plain text\
    \ does not provide for or allow formatting commands, font\n   attribute specifications,\
    \ processing instructions, interpretation\n   directives, or content markup. \
    \ Plain text is seen simply as a linear\n   sequence of characters, possibly interrupted\
    \ by line breaks or page\n   breaks.  Plain text MAY allow the stacking of several\
    \ characters in\n   the same position in the text.  Plain text in scripts like\
    \ Arabic and\n   Hebrew may also include facilities that allow the arbitrary mixing\
    \ of\n   text segments with different writing directions.\n   Beyond plain text,\
    \ there are many formats for representing what might\n   be known as \"rich text\"\
    .  An interesting characteristic of many such\n   representations is that they\
    \ are to some extent readable even without\n   the software that interprets them.\
    \  It is useful to distinguish them,\n   at the highest level, from such unreadable\
    \ data as images, audio, or\n   text represented in an unreadable form.  In the\
    \ absence of\n   appropriate interpretation software, it is reasonable to present\n\
    \   subtypes of \"text\" to the user, while it is not reasonable to do so\n  \
    \ with most non-textual data.  Such formatted textual data can be\n   represented\
    \ using subtypes of \"text\".\n"
- title: 4.2.2.  Image Media Types
  contents:
  - "4.2.2.  Image Media Types\n   A top-level type of \"image\" indicates that the\
    \ content specifies one\n   or more individual images.  The subtype names the\
    \ specific image\n   format.\n"
- title: 4.2.3.  Audio Media Types
  contents:
  - "4.2.3.  Audio Media Types\n   A top-level type of \"audio\" indicates that the\
    \ content contains audio\n   data.  The subtype names the specific audio format.\n"
- title: 4.2.4.  Video Media Types
  contents:
  - "4.2.4.  Video Media Types\n   A top-level type of \"video\" indicates that the\
    \ content specifies a\n   time-varying-picture image, possibly with color and\
    \ coordinated\n   sound.  The term 'video' is used in its most generic sense,\
    \ rather\n   than with reference to any particular technology or format, and is\n\
    \   not meant to preclude subtypes such as animated drawings encoded\n   compactly.\n\
    \   Note that although in general the mixing of multiple kinds of media\n   in\
    \ a single body is discouraged [RFC2046], it is recognized that many\n   video\
    \ formats include a representation for synchronized audio and/or\n   text, and\
    \ this is explicitly permitted for subtypes of \"video\".\n"
- title: 4.2.5.  Application Media Types
  contents:
  - "4.2.5.  Application Media Types\n   The \"application\" top-level type is to\
    \ be used for discrete data that\n   do not fit under any of the other type names,\
    \ and particularly for\n   data to be processed by some type of application program.\
    \  This is\n   information that must be processed by an application before it\
    \ is\n   viewable or usable by a user.  Expected uses for the \"application\"\n\
    \   type name include but are not limited to file transfer, spreadsheets,\n  \
    \ presentations, scheduling data, and languages for \"active\"\n   (computational)\
    \ material.  (The last, in particular, can pose\n   security problems that must\
    \ be understood by implementors.  The\n   \"application/postscript\" media type\
    \ registration in [RFC2046]\n   provides a good example of how to handle these\
    \ issues.)\n   For example, a meeting scheduler might define a standard\n   representation\
    \ for information about proposed meeting dates.  An\n   intelligent user agent\
    \ would use this information to conduct a dialog\n   with the user, and might\
    \ then send additional material based on that\n   dialog.  More generally, there\
    \ have been several \"active\" languages\n   developed in which programs in a\
    \ suitably specialized language are\n   transported to a remote location and automatically\
    \ run in the\n   recipient's environment.  Such applications may be defined as\n\
    \   subtypes of the \"application\" top-level type.\n   The subtype of \"application\"\
    \ will often either be the name or include\n   part of the name of the application\
    \ for which the data are intended.\n   This does not mean, however, that any application\
    \ program name may\n   simply be used freely as a subtype of \"application\";\
    \ the subtype\n   needs to be registered.\n"
- title: 4.2.6.  Multipart and Message Media Types
  contents:
  - "4.2.6.  Multipart and Message Media Types\n   Multipart and message are composite\
    \ types; that is, they provide a\n   means of encapsulating zero or more objects,\
    \ each one a separate\n   media type.\n   All subtypes of multipart and message\
    \ MUST conform to the syntax\n   rules and other requirements specified in [RFC2046]\
    \ and amended by\n   Section 3.5 of [RFC6532].\n"
- title: 4.2.7.  Additional Top-Level Types
  contents:
  - "4.2.7.  Additional Top-Level Types\n   In some cases, a new media type may not\
    \ \"fit\" under any currently\n   defined top-level type names.  Such cases are\
    \ expected to be quite\n   rare.  However, if such a case does arise, a new type\
    \ name can be\n   defined to accommodate it.  Definition of a new top-level type\
    \ name\n   MUST be done via a Standards Track RFC; no other mechanism can be\n\
    \   used to define additional type names.\n"
- title: 4.2.8.  Structured Syntax Name Suffixes
  contents:
  - "4.2.8.  Structured Syntax Name Suffixes\n   XML in MIME [RFC3023] defined the\
    \ first such augmentation to the\n   media type definition to additionally specify\
    \ the underlying\n   structure of that media type.  To quote:\n      This document\
    \ also standardizes a convention (using the suffix\n      '+xml') for naming media\
    \ types ... when those media types\n      represent XML MIME (Multipurpose Internet\
    \ Mail Extensions)\n      entities.\n   That is, it specified a suffix (in that\
    \ case, \"+xml\") to be appended\n   to the base subtype name.\n   Since this\
    \ was published, the de facto practice has arisen for using\n   this suffix convention\
    \ for other well-known structuring syntaxes.  In\n   particular, media types have\
    \ been registered with suffixes such as\n   \"+der\", \"+fastinfoset\", and \"\
    +json\".  This specification formalizes\n   this practice and sets up a registry\
    \ for structured type name\n   suffixes.\n   The primary guideline for whether\
    \ a structured type name suffix is\n   registrable is that it be described by\
    \ a readily available\n   description, preferably within a document published\
    \ by an established\n   standards-related organization, and for which there's\
    \ a reference\n   that can be used in a Normative References section of an RFC.\n\
    \   Media types that make use of a named structured syntax SHOULD use the\n  \
    \ appropriate registered \"+suffix\" for that structured syntax when they\n  \
    \ are registered.  By the same token, media types MUST NOT be given\n   names\
    \ incorporating suffixes for structured syntaxes they do not\n   actually employ.\
    \ \"+suffix\" constructs for as-yet unregistered\n   structured syntaxes SHOULD\
    \ NOT be used, given the possibility of\n   conflicts with future suffix definitions.\n"
- title: 4.2.9.  Deprecated Aliases
  contents:
  - "4.2.9.  Deprecated Aliases\n   In some cases, a single media type may have been\
    \ widely deployed\n   prior to registration under multiple names.  In such cases,\
    \ a\n   preferred name MUST be chosen for the media type, and applications\n \
    \  MUST use this to be compliant with the type's registration.  However,\n   a\
    \ list of deprecated aliases by which the type is known MAY be\n   supplied as\
    \ additional information in order to assist applications in\n   processing the\
    \ media type properly.\n"
- title: 4.3.  Parameter Requirements
  contents:
  - "4.3.  Parameter Requirements\n   Media types MAY elect to use one or more media\
    \ type parameters, or\n   some parameters may be automatically made available\
    \ to the media type\n   by virtue of being a subtype of a content type that defines\
    \ a set of\n   parameters applicable to any of its subtypes.  In either case,\
    \ the\n   names, values, and meanings of any parameters MUST be fully specified\n\
    \   when a media type is registered in the standards tree, and SHOULD be\n   specified\
    \ as completely as possible when media types are registered\n   in the vendor\
    \ or personal trees.\n   Parameter names have the syntax as media type names and\
    \ values:\n       parameter-name = restricted-name\n   Note that this syntax is\
    \ somewhat more restrictive than what is\n   allowed by the ABNF in [RFC2045]\
    \ and amended by [RFC2231].\n   Parameter names are case-insensitive and no meaning\
    \ is attached to\n   the order in which they appear.  It is an error for a specific\n\
    \   parameter to be specified more than once.\n   There is no defined syntax for\
    \ parameter values.  Therefore,\n   registrations MUST specify parameter value\
    \ syntax.  Additionally,\n   some transports impose restrictions on parameter\
    \ value syntax, so\n   care needs be taken to limit the use of potentially problematic\n\
    \   syntaxes; e.g., pure binary valued parameters, while permitted in\n   some\
    \ protocols, are best avoided.\n   Note that a protocol can impose further restrictions\
    \ on parameter\n   value syntax, depending on how it chooses to represent parameters.\n\
    \   Both MIME [RFC2045] [RFC2231] and HTTP [RFC2045] [RFC5987] allow\n   binary\
    \ parameters as well as parameter values expressed in a specific\n   charset,\
    \ but other protocols may be less flexible.\n   New parameters SHOULD NOT be defined\
    \ as a way to introduce new\n   functionality in types registered in the standards\
    \ tree, although new\n   parameters MAY be added to convey additional information\
    \ that does\n   not otherwise change existing functionality.  An example of this\n\
    \   would be a \"revision\" parameter to indicate a revision level of an\n   external\
    \ specification such as JPEG.  Similar behavior is encouraged\n   for media types\
    \ registered in the vendor or personal trees, but is\n   not required.\n   Changes\
    \ to parameters (including the introduction of new ones) is\n   managed in the\
    \ same manner as other changes to the media type; see\n   Section 5.5.\n"
- title: 4.4.  Canonicalization and Format Requirements
  contents:
  - "4.4.  Canonicalization and Format Requirements\n   All registered media types\
    \ MUST employ a single, canonical data\n   format, regardless of registration\
    \ tree.\n   A permanent and readily available public specification of the format\n\
    \   for the media type MUST exist for all types registered in the\n   standards\
    \ tree.  This specification MUST provide sufficient detail so\n   that interoperability\
    \ between independent implementations using the\n   media type is possible.  This\
    \ specification MUST at a minimum be\n   referenced by, if it is not actually\
    \ included in, the media type\n   registration proposal itself.\n   The specifications\
    \ of format and processing particulars may or may\n   not be publicly available\
    \ for media types registered in the vendor\n   and personal trees.  Such registrations\
    \ are explicitly permitted to\n   limit the information in the registration to\
    \ which software and\n   version produce or process such media types.  As such,\
    \ references to\n   or inclusion of format specifications in registrations is\
    \ encouraged\n   but not required.  Note, however, that the public availability\
    \ of a\n   meaningful specification will often make the difference between\n \
    \  simply having a name reserved so that there are no conflicts with\n   other\
    \ uses and having the potential for other implementations of the\n   media type\
    \ and useful interoperation with them.\n   Some media types involve the use of\
    \ patented technology.  The\n   registration of media types involving patented\
    \ technology is\n   specifically permitted.  However, the restrictions set forth\
    \ in BCP\n   79 [RFC3979] and BCP 78 [RFC5378] on the use of patented technology\n\
    \   in IETF Standards Track protocols must be respected when the\n   specification\
    \ of a media type is part of a Standards Track protocol.\n   In addition, other\
    \ standards-related organizations making use of the\n   standards tree may have\
    \ their own rules regarding intellectual\n   property that must be observed in\
    \ their registrations.\n   Intellectual Property Rights (IPR) disclosures for\
    \ registrations in\n   the vendor and personal trees are encouraged but not required.\n"
- title: 4.5.  Interchange Recommendations
  contents:
  - "4.5.  Interchange Recommendations\n   Ideally, media types will be defined so\
    \ they interoperate across as\n   many systems and applications as possible. \
    \ However, some media types\n   will inevitably have problems interoperating across\
    \ different\n   platforms.  Problems with different versions, byte ordering, and\n\
    \   specifics of gateway handling can and will arise.\n   Universal interoperability\
    \ of media types is not required, but known\n   interoperability issues SHOULD\
    \ be identified whenever possible.\n   Publication of a media type does not require\
    \ an exhaustive review of\n   interoperability, and the interoperability considerations\
    \ section is\n   subject to continuing evaluation.\n   The recommendations in\
    \ this subsection apply regardless of the\n   registration tree involved.\n"
- title: 4.6.  Security Requirements
  contents:
  - "4.6.  Security Requirements\n   An analysis of security issues MUST be done for\
    \ all types registered\n   in the standards tree.  A similar analysis for media\
    \ types registered\n   in the vendor or personal trees is encouraged but not required.\n\
    \   However, regardless of what security analysis has or has not been\n   done,\
    \ all descriptions of security issues MUST be as accurate as\n   possible regardless\
    \ of registration tree.  In particular, the\n   security considerations MUST NOT\
    \ state that there are \"no security\n   issues associated with this type\". \
    \ Security considerations for types\n   in the vendor or personal tree MAY say\
    \ that \"the security issues\n   associated with this type have not been assessed\"\
    .\n   There is absolutely no requirement that media types registered in any\n\
    \   tree be secure or completely free from risks.  Nevertheless, all\n   known\
    \ security risks MUST be identified in the registration of a\n   media type, again\
    \ regardless of registration tree.\n   The security considerations section of\
    \ all registrations is subject\n   to continuing evaluation and modification,\
    \ and in particular MAY be\n   extended by use of the \"comments on media types\"\
    \ mechanism described\n   in Section 5.4 below.\n   Some of the issues that need\
    \ to be examined and described in a\n   security analysis of a media type are:\n\
    \   o  Complex media types may include provisions for directives that\n      institute\
    \ actions on a recipient's files or other resources.  In\n      many cases, provision\
    \ is made for originators to specify arbitrary\n      actions in an unrestricted\
    \ fashion that may then have devastating\n      effects.  See the registration\
    \ of the application/postscript media\n      type in [RFC2046] for an example\
    \ of such directives and how they\n      can be described in a media type registration.\n\
    \   o  Any security analysis MUST state whether or not they employ such\n    \
    \  \"active content\"; if they do, they MUST state what steps have been\n    \
    \  taken, or MUST be taken by applications of the media type, to\n      protect\
    \ users of the media type from harm.\n   o  Complex media types may include provisions\
    \ for directives that\n      institute actions that, while not directly harmful\
    \ to the\n      recipient, may result in disclosure of information that either\n\
    \      facilitates a subsequent attack or else violates a recipient's\n      privacy\
    \ in some way.  Again, the registration of the application/\n      postscript\
    \ media type illustrates how such directives can be\n      handled.\n   o  A media\
    \ type that employs compression may provide an opportunity\n      for sending\
    \ a small amount of data that, when received and\n      evaluated, expands enormously\
    \ to consume all of the recipient's\n      resources.  All media types SHOULD\
    \ state whether or not they\n      employ compression; if they do, they SHOULD\
    \ discuss what steps\n      need to be taken to avoid such attacks.\n   o  A media\
    \ type might be targeted for applications that require some\n      sort of security\
    \ assurance but don't provide the necessary\n      security mechanisms themselves.\
    \  For example, a media type could\n      be defined for storage of sensitive\
    \ medical information that in\n      turn requires external confidentiality and\
    \ integrity protection\n      services, or which is designed for use only within\
    \ a secure\n      environment.  Types SHOULD always document whether or not they\n\
    \      need such services in their security considerations.\n"
- title: 4.7.  Requirements Specific to XML Media Types
  contents:
  - "4.7.  Requirements Specific to XML Media Types\n   There are a number of additional\
    \ requirements specific to the\n   registration of XML media types.  These requirements\
    \ are specified in\n   [RFC3023].\n"
- title: 4.8.  Encoding Requirements
  contents:
  - "4.8.  Encoding Requirements\n   Some transports impose restrictions on the type\
    \ of data they can\n   carry.  For example, Internet mail traditionally was limited\
    \ to 7bit\n   US-ASCII text.  Encoding schemes are often used to work around such\n\
    \   transport limitations.\n   It is therefore useful to note what sort of data\
    \ a media type can\n   consist of as part of its registration.  An \"encoding\
    \ considerations\"\n   field is provided for this purpose.  Possible values of\
    \ this field\n   are:\n   7bit:  The content of the media type consists solely\
    \ of CRLF-\n      delimited 7bit US-ASCII text.\n   8bit:  The content of the\
    \ media type consists solely of CRLF-\n      delimited 8bit text.\n   binary:\
    \  The content consists of an unrestricted sequence of octets.\n   framed:  The\
    \ content consists of a series of frames or packets\n      without internal framing\
    \ or alignment indicators.  Additional out-\n      of-band information is needed\
    \ to interpret the data properly,\n      including but not necessarily limited\
    \ to knowledge of the\n      boundaries between successive frames and knowledge\
    \ of the\n      transport mechanism.  Note that media types of this sort cannot\n\
    \      simply be stored in a file or transported as a simple stream of\n     \
    \ octets; therefore, such media types are unsuitable for use in many\n      traditional\
    \ protocols.  A commonly used transport with framed\n      encoding is the Real-time\
    \ Transport Protocol, RTP.  Additional\n      rules for framed encodings defined\
    \ for transport using RTP are\n      given in [RFC4855].\n   Additional restrictions\
    \ on 7bit and 8bit text are given in Section\n   4.1.1 of [RFC2046].\n"
- title: 4.9.  Usage and Implementation Non-Requirements
  contents:
  - "4.9.  Usage and Implementation Non-Requirements\n   In the asynchronous mail\
    \ environment, where information on the\n   capabilities of the remote mail agent\
    \ is frequently not available to\n   the sender, maximum interoperability is attained\
    \ by restricting the\n   media types used to those \"common\" formats expected\
    \ to be widely\n   implemented.  This was asserted in the past as a reason to\
    \ limit the\n   number of possible media types, and resulted in a registration\n\
    \   process with a significant hurdle and delay for those registering\n   media\
    \ types.\n   However, the need for \"common\" media types does not require limiting\n\
    \   the registration of new media types.  If a limited set of media types\n  \
    \ is recommended for a particular application, that should be asserted\n   by\
    \ a separate applicability statement specific for the application\n   and/or environment.\n\
    \   Therefore, universal support and implementation of a media type are\n   NOT\
    \ a requirement for registration.  However, if a media type is\n   explicitly\
    \ intended for limited use, this MUST be noted in its\n   registration.  The \"\
    Restrictions on Usage\" field is provided for this\n   purpose.\n"
- title: 4.10.  Publication Requirements
  contents:
  - "4.10.  Publication Requirements\n   Media types registered in the standards tree\
    \ by the IETF itself MUST\n   be published as RFCs.  RFC publication of vendor\
    \ and personal media\n   type registrations is allowed but not required.  In all\
    \ cases, the\n   IANA will retain copies of all media type registrations and \"\
    publish\"\n   them as part of the media types registration tree itself.\n   As\
    \ stated previously, standards-tree registrations for media types\n   defined\
    \ in documents produced by other standards-related\n   organizations MUST be described\
    \ by a formal standards specification\n   produced by that organization.  Additionally,\
    \ any copyright on the\n   registration template MUST allow the IANA to copy it\
    \ into the IANA\n   registry.\n   Other than IETF registrations in the standards\
    \ tree, the registration\n   of a media type does not imply endorsement, approval,\
    \ or\n   recommendation by the IANA or the IETF or even certification that the\n\
    \   specification is adequate.  To become an IETF standard, a protocol or\n  \
    \ data object must go through the IETF standards process.  While it\n   provides\
    \ additional assurances when it is appropriate, this is too\n   difficult and\
    \ too lengthy a process for the convenient registration\n   of media types.\n\
    \   The standards tree exists for media types that do require a\n   substantive\
    \ review and approval process in a recognized standards-\n   related organization.\
    \  The vendor and personal trees exist for those\n   media types that do not require\
    \ such a process.  It is expected that\n   applicability statements for particular\
    \ applications will be\n   published from time to time in the IETF, recommending\
    \ implementation\n   of, and support for, media types that have proven particularly\
    \ useful\n   in those contexts.\n   As discussed above, registration of a top-level\
    \ type requires\n   Standards Action in the IETF and, hence, the publication of\
    \ a RFC on\n   the Standards Track.\n"
- title: 4.11.  Fragment Identifier Requirements
  contents:
  - "4.11.  Fragment Identifier Requirements\n   Media type registrations can specify\
    \ how applications should\n   interpret fragment identifiers (specified in Section\
    \ 3.5 of\n   [RFC3986]) associated with the media type.\n   Media types are encouraged\
    \ to adopt fragment identifier schemes that\n   are used with semantically similar\
    \ media types.  In particular, media\n   types that use a named structured syntax\
    \ with a registered \"+suffix\"\n   MUST follow whatever fragment identifier rules\
    \ are given in the\n   structured syntax suffix registration.\n"
- title: 4.12.  Additional Information
  contents:
  - "4.12.  Additional Information\n   Various sorts of optional information SHOULD\
    \ be included in the\n   specification of a media type if it is available:\n \
    \  o  Magic number(s) (length, octet values).  Magic numbers are byte\n      sequences\
    \ that are always present at a given place in the file and\n      thus can be\
    \ used to identify entities as being of a given media\n      type.\n   o  File\
    \ name extension(s) commonly used on one or more platforms to\n      indicate\
    \ that some file contains a given media type.\n   o  Mac OS File Type code(s)\
    \ (4 octets) used to label files containing\n      a given media type.  Some discussion\
    \ of Macintosh file type codes\n      and their purpose can be found in [MacOSFileTypes].\n\
    \   In the case of a registration in the standards tree, this additional\n   information\
    \ MAY be provided in the formal specification of the media\n   type format.  It\
    \ is suggested that this be done by incorporating the\n   IANA media type registration\
    \ form into the format specification\n   itself.\n"
- title: 5.  Media Type Registration Procedures
  contents:
  - "5.  Media Type Registration Procedures\n   The media type registration procedure\
    \ is not a formal standards\n   process, but rather an administrative procedure\
    \ intended to allow\n   community comment and sanity checking without excessive\
    \ time delay.\n   Normal IETF processes need to be followed for all IETF registrations\n\
    \   in the standards tree.  The posting of an Internet Draft is a\n   necessary\
    \ first step, followed by posting to the media-types@iana.org\n   list as discussed\
    \ below.\n"
- title: 5.1.  Preliminary Community Review
  contents:
  - "5.1.  Preliminary Community Review\n   Notice of a potential media type registration\
    \ in the standards tree\n   SHOULD be sent to the media-types@iana.org mailing\
    \ list for review.\n   This mailing list has been established for the purpose\
    \ of reviewing\n   proposed media and access types.  Registrations in other trees\
    \ MAY be\n   sent to the list for review as well; doing so is entirely OPTIONAL,\n\
    \   but is strongly encouraged.\n   The intent of the public posting to this list\
    \ is to solicit comments\n   and feedback on the choice of type/subtype name,\
    \ the unambiguity of\n   the references with respect to versions and external\
    \ profiling\n   information, and a review of any interoperability or security\n\
    \   considerations.  The submitter may submit a revised registration\n   proposal\
    \ or abandon the registration completely and at any time.\n"
- title: 5.2.  Submit Request to IANA
  contents:
  - "5.2.  Submit Request to IANA\n   Media types registered in the standards tree\
    \ by the IETF itself MUST\n   be reviewed and approved by the IESG as part of\
    \ the normal standards\n   process.  Standards-tree registrations by recognized\
    \ standards-\n   related organizations as well as registrations in the vendor\
    \ and\n   personal trees are submitted directly to the IANA, unless other\n  \
    \ arrangements were made as part of a liaison agreement.  In either\n   case,\
    \ posting the registration to the media-types@iana.org list for\n   review prior\
    \ to submission is strongly encouraged.\n   Registration requests can be sent\
    \ to iana@iana.org.  A web form for\n   registration requests is also available:\n\
    \     http://www.iana.org/form/media-types\n"
- title: 5.2.1.  Provisional Registrations
  contents:
  - "5.2.1.  Provisional Registrations\n   Standardization processes often take considerable\
    \ time to complete.\n   In order to facilitate prototyping and testing, it is\
    \ often helpful\n   to assign identifiers, including but not limited to media\
    \ types,\n   early in the process.  This way, identifiers used during standards\n\
    \   development can remain unchanged once the process is complete, and\n   implementations\
    \ and documentation do not have to be updated.\n   Accordingly, a provisional\
    \ registration process is provided to\n   support early assignment of media type\
    \ names in the standards tree.\n   A provisional registration MAY be submitted\
    \ to IANA for standards-\n   tree types.  The only required fields in such registrations\
    \ are the\n   media type name and contact information (including the standards-\n\
    \   related organization name).\n   Upon receipt of a provisional registration,\
    \ IANA will check the name\n   and contact information, then publish the registration\
    \ in a distinct\n   publicly visible provisional registration list.\n   Provisional\
    \ registrations MAY be updated or abandoned at any time.\n   When the registration\
    \ is abandoned, the media type is no longer\n   registered in any sense; it can\
    \ subsequently be registered just like\n   any other unassigned media type name.\n"
- title: 5.3.  Review and Approval
  contents:
  - "5.3.  Review and Approval\n   With the exception of provisional standards-tree\
    \ registrations,\n   registrations submitted to the IANA will be passed on to\
    \ the media\n   types reviewer.  The media types reviewer, who is appointed by\
    \ the\n   IETF Applications Area Director(s), will review the registration to\n\
    \   make sure it meets the requirements set forth in this document.\n   Registrations\
    \ that do not meet these requirements will be returned to\n   the submitter for\
    \ revision.\n   Decisions made by the media types reviewer may be appealed to\
    \ the\n   IESG using the procedure specified in Section 6.5.4 of [RFC2026].\n\
    \   Once a media type registration has passed review, the IANA will\n   register\
    \ the media type and make the media type registration\n   available to the community.\n\
    \   In the case of standards-tree registrations from other standards-\n   related\
    \ organizations, IANA will also check that the submitter is in\n   fact a recognized\
    \ standards-related organization.  If the submitter\n   is not currently recognized\
    \ as such, the IESG will be asked to\n   confirm their status.  Recognition from\
    \ the IESG MUST be obtained\n   before a standards-tree registration can proceed.\n"
- title: 5.4.  Comments on Media Type Registrations
  contents:
  - "5.4.  Comments on Media Type Registrations\n   Comments on registered media types\
    \ may be submitted by members of the\n   community to the IANA at iana@iana.org.\
    \  These comments will be\n   reviewed by the media types reviewer and then passed\
    \ on to the\n   \"owner\" of the media type if possible.  Submitters of comments\
    \ may\n   request that their comment be attached to the media type registration\n\
    \   itself; if the IANA, in consultation with the media types reviewer,\n   approves,\
    \ the comment will be made accessible in conjunction with the\n   type registration.\n"
- title: 5.5.  Change Procedures
  contents:
  - "5.5.  Change Procedures\n   Once a media type has been published by the IANA,\
    \ the owner may\n   request a change to its definition.  The descriptions of the\n\
    \   different registration trees above designate the \"owners\" of each\n   type\
    \ of registration.  The same procedure that would be appropriate\n   for the original\
    \ registration request is used to process a change\n   request.\n   Media type\
    \ registrations may not be deleted; media types that are no\n   longer believed\
    \ appropriate for use can be declared OBSOLETE by a\n   change to their \"intended\
    \ use\" field; such media types will be\n   clearly marked in the lists published\
    \ by the IANA.\n   Significant changes to a media type's definition should be\
    \ requested\n   only when there are serious omissions or errors in the published\n\
    \   specification.  When review is required, a change request may be\n   denied\
    \ if it renders entities that were valid under the previous\n   definition invalid\
    \ under the new definition.\n   The owner of a media type may pass responsibility\
    \ to another person\n   or agency by informing the IANA; this can be done without\
    \ discussion\n   or review.\n   The IESG may reassign responsibility for a media\
    \ type.  The most\n   common case of this will be to enable changes to be made\
    \ to types\n   where the author of the registration has died, moved out of contact,\n\
    \   or is otherwise unable to make changes that are important to the\n   community.\n"
- title: 5.6.  Registration Template
  contents:
  - "5.6.  Registration Template\n   Type name:\n   Subtype name:\n   Required parameters:\n\
    \   Optional parameters:\n   Encoding considerations:\n   Security considerations:\n\
    \   Interoperability considerations:\n   Published specification:\n   Applications\
    \ that use this media type:\n   Fragment identifier considerations:\n   Additional\
    \ information:\n     Deprecated alias names for this type:\n     Magic number(s):\n\
    \     File extension(s):\n     Macintosh file type code(s):\n   Person & email\
    \ address to contact for further information:\n   Intended usage:\n   (One of\
    \ COMMON, LIMITED USE, or OBSOLETE.)\n   Restrictions on usage:\n   (Any restrictions\
    \ on where the media type can be used go here.)\n   Author:\n   Change controller:\n\
    \   Provisional registration? (standards tree only):\n   (Any other information\
    \ that the author deems interesting may be\n   added below this line.)\n   \"\
    N/A\", written exactly that way, can be used in any field if desired\n   to emphasize\
    \ the fact that it does not apply or that the question was\n   not omitted by\
    \ accident.  Do not use 'none' or other words that could\n   be mistaken for a\
    \ response.\n   Limited-use media types should also note in the applications list\n\
    \   whether or not that list is exhaustive.\n"
- title: 6.  Structured Syntax Suffix Registration Procedures
  contents:
  - "6.  Structured Syntax Suffix Registration Procedures\n   Someone wishing to define\
    \ a \"+suffix\" name for a structured syntax\n   for use with a new media type\
    \ registration SHOULD:\n   1.  Check IANA's registry of media type name suffixes\
    \ to see whether\n       or not there is already an entry for that well-defined\
    \ structured\n       syntax.\n   2.  If there is no entry for their suffix scheme,\
    \ fill out the\n       template (specified in Section 6.2) and include that with\
    \ the\n       media type registration.  The template may be contained in an\n\
    \       Internet Draft, alone or as part of some other protocol\n       specification.\
    \  The template may also be submitted in some other\n       form (as part of another\
    \ document or as a stand-alone document),\n       but the contents will be treated\
    \ as an \"IETF Contribution\" under\n       the guidelines of BCP 78 [RFC5378].\n\
    \   3.  Send a copy of the template or a pointer to the containing\n       document\
    \ (with specific reference to the section with the\n       template) to the mailing\
    \ list media-types@iana.org, requesting\n       review.  This may be combined\
    \ with a request to review the media\n       type registration.  Allow a reasonable\
    \ time for discussion and\n       comments.\n   4.  Respond to review comments\
    \ and make revisions to the proposed\n       registration as needed to bring it\
    \ into line with the guidelines\n       given in this document.\n   5.  Submit\
    \ the (possibly updated) registration template (or pointer\n       to the document\
    \ containing it) to IANA at iana@iana.org.\n   Upon receipt of a structured syntax\
    \ suffix registration request,\n   1.  IANA checks the submission for completeness;\
    \ if sections are\n       missing or citations are not correct, IANA rejects the\n\
    \       registration request.\n   2.  IANA checks the current registry for an\
    \ entry with the same name;\n       if such a registry exists, IANA rejects the\
    \ registration request.\n   3.  IANA requests Expert Review of the registration\
    \ request against\n       the corresponding guidelines.\n   4.  The Designated\
    \ Expert may request additional review or\n       discussion, as necessary.\n\
    \   5.  If Expert Review recommends registration, IANA adds the\n       registration\
    \ to the appropriate registry.\n   The initial registry content specification\
    \ [RFC6839] provides\n   examples of structured syntax suffix registrations.\n"
- title: 6.1.  Change Procedures
  contents:
  - "6.1.  Change Procedures\n   Registrations may be updated in each registry by\
    \ the same mechanism\n   as required for an initial registration.  In cases where\
    \ the original\n   definition of the scheme is contained in an IESG-approved document,\n\
    \   update of the specification also requires IESG approval.\n"
- title: 6.2.  Structured Syntax Suffix Registration Template
  contents:
  - "6.2.  Structured Syntax Suffix Registration Template\n   This template describes\
    \ the fields that must be supplied in a\n   structured syntax suffix registration\
    \ request:\n   Name\n      Full name of the well-defined structured syntax.\n\
    \   +suffix\n      Suffix used to indicate conformance to the syntax.\n   References\n\
    \      Include full citations for all specifications necessary to\n      understand\
    \ the structured syntax.\n   Encoding considerations\n      General guidance regarding\
    \ encoding considerations for any type\n      employing this syntax should be\
    \ given here.  The same requirements\n      for media type encoding considerations\
    \ given in Section 4.8 apply\n      here.\n   Interoperability considerations\n\
    \      Any issues regarding the interoperable use of types employing this\n  \
    \    structured syntax should be given here.  Examples would include\n      the\
    \ existence of incompatible versions of the syntax, issues\n      combining certain\
    \ charsets with the syntax, or incompatibilities\n      with other types or protocols.\n\
    \   Fragment identifier considerations\n      Generic processing of fragment identifiers\
    \ for any type employing\n      this syntax should be described here.\n   Security\
    \ considerations\n      Security considerations shared by media types employing\
    \ this\n      structured syntax must be specified here.  The same requirements\n\
    \      for media type security considerations given in Section 4.6 apply\n   \
    \   here, with the exception that the option of not assessing the\n      security\
    \ considerations is not available for suffix registrations.\n   Contact\n    \
    \  Person (including contact information) to contact for further\n      information.\n\
    \   Author/Change controller.\n      Person (including contact information) authorized\
    \ to change this\n      suffix registration.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   Security requirements for both media type and\
    \ media type suffix\n   registrations are discussed in Section 4.6.\n"
- title: 8.  IANA Considerations
  contents:
  - "8.  IANA Considerations\n   The purpose of this document is to define IANA registries\
    \ for media\n   types and structured syntax suffixes as well as the procedures\
    \ for\n   managing these registries.  Additionally, this document requires IANA\n\
    \   to maintain a list of standards-related organizations for which the\n   IESG\
    \ has approved media type registrations in the standards tree.\n   The existing\
    \ media type registry has been extended to include a\n   section for provisional\
    \ registrations.  Only standards-tree\n   registrations are allowed in the standards\
    \ tree and only at the\n   request of an organization on the IANA list of standards-related\n\
    \   organizations.  See Section 5.2.1 for additional information on\n   provisional\
    \ registrations.\n   IANA has also added the following note at the top of the\
    \ provisional\n   registry:\n      This registry, unlike some other provisional\
    \ IANA registries, is\n      only for temporary use.  Entries in this registry\
    \ are either\n      finalized and moved to the main media types registry, or are\n\
    \      abandoned and deleted.  Entries in this registry are suitable for\n   \
    \   use for development and test purposes only.\n   The structured syntax name\
    \ suffix registry has been created as\n   follows:\n   o  The name is the \"Structured\
    \ Syntax Suffix\" registry.\n   o  The registration process is specified in Section\
    \ 6.\n   o  The information required for a registry entry as well as the entry\n\
    \      format are specified in Section 6.2.\n   o  The initial content of the\
    \ registry is specified in [RFC6839].\n   Entries in both the media type and structured\
    \ suffix registries will\n   be annotated by IANA with both the original registration\
    \ date as well\n   as the date of the most recent update to the entry.  Registrations\n\
    \   made prior to the implementation of this specification may, if\n   necessary,\
    \ be marked as such, rather than with a specific date.\n   Since registration\
    \ entries can be updated multiple times, IANA will\n   also maintain the history\
    \ of changes to each registration in such a\n   way that the state of the registration\
    \ at any given time can be\n   determined.\n   Finally, per this document, IANA\
    \ has created a new email address,\n   media-types@iana.org, for the media type\
    \ review list, which replaces\n   the ietf-types@iana.org address specified in\
    \ RFC 4288.\n   ietf-types@iana.org has been retained as an alias.\n"
- title: 9.  Acknowledgments
  contents:
  - "9.  Acknowledgments\n   The current authors would like to acknowledge their debt\
    \ to the late\n   Dr. Jon Postel, whose general model of IANA registration procedures\n\
    \   and specific contributions shaped the predecessors of this document\n   [RFC2048]\
    \ [RFC4288].  We hope that the current version is one with\n   which he would\
    \ have agreed but, as it is impossible to verify that\n   agreement, we have regretfully\
    \ removed his name as a co-author.\n   Randy Bush, Francis Dupont, Bjoern Hoehrmann,\
    \ Barry Leiba, Murray\n   Kucherawy, Alexey Melnikov, S. Moonesamy, Mark Nottingham,\
    \ Tom Petch,\n   Peter Saint-Andre, and Jeni Tennison provided many helpful review\n\
    \   comments and suggestions.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC2045]         Freed, N. and N. Borenstein,\
    \ \"Multipurpose Internet\n                     Mail Extensions (MIME) Part One:\
    \ Format of Internet\n                     Message Bodies\", RFC 2045, November\
    \ 1996.\n   [RFC2046]         Freed, N. and N. Borenstein, \"Multipurpose Internet\n\
    \                     Mail Extensions (MIME) Part Two: Media Types\",\n      \
    \               RFC 2046, November 1996.\n   [RFC2119]         Bradner, S., \"\
    Key words for use in RFCs to Indicate\n                     Requirement Levels\"\
    , BCP 14, RFC 2119, March 1997.\n   [RFC2978]         Freed, N. and J. Postel,\
    \ \"IANA Charset Registration\n                     Procedures\", BCP 19, RFC\
    \ 2978, October 2000.\n   [RFC3023]         Murata, M., St. Laurent, S., and D.\
    \ Kohn, \"XML\n                     Media Types\", RFC 3023, January 2001.\n \
    \  [RFC3629]         Yergeau, F., \"UTF-8, a transformation format of ISO\n  \
    \                   10646\", STD 63, RFC 3629, November 2003.\n   [RFC3979]  \
    \       Bradner, S., \"Intellectual Property Rights in IETF\n                \
    \     Technology\", BCP 79, RFC 3979, March 2005.\n   [RFC3986]         Berners-Lee,\
    \ T., Fielding, R., and L. Masinter,\n                     \"Uniform Resource\
    \ Identifier (URI): Generic\n                     Syntax\", STD 66, RFC 3986,\
    \ January 2005.\n   [RFC4855]         Casner, S., \"Media Type Registration of\
    \ RTP Payload\n                     Formats\", RFC 4855, February 2007.\n   [RFC5226]\
    \         Narten, T. and H. Alvestrand, \"Guidelines for\n                   \
    \  Writing an IANA Considerations Section in RFCs\",\n                     BCP\
    \ 26, RFC 5226, May 2008.\n   [RFC5234]         Crocker, D. and P. Overell, \"\
    Augmented BNF for\n                     Syntax Specifications: ABNF\", STD 68,\
    \ RFC 5234,\n                     January 2008.\n   [RFC5378]         Bradner,\
    \ S. and J. Contreras, \"Rights Contributors\n                     Provide to\
    \ the IETF Trust\", BCP 78, RFC 5378,\n                     November 2008.\n \
    \  [RFC6532]         Yang, A., Steele, S., and N. Freed,\n                   \
    \  \"Internationalized Email Headers\", RFC 6532,\n                     February\
    \ 2012.\n   [RFC6657]         Melnikov, A. and J. Reschke, \"Update to MIME\n\
    \                     regarding \"charset\" Parameter Handling in Textual\n  \
    \                   Media Types\", RFC 6657, July 2012.\n   [RFC6839]        \
    \ Hansen, T. and A. Melnikov, \"Additional Media Type\n                     Structured\
    \ Syntax Suffixes\", RFC 6839,\n                     January 2013.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [MacOSFileTypes]  Apple Computer, Inc., \"\
    Mac OS: File Type and\n                     Creator Codes, and File Formats\"\
    , Apple Knowledge\n                     Base Article 55381, June 1993,\n     \
    \                <http://www.info.apple.com/kbnum/n55381>.\n   [RFC2026]     \
    \    Bradner, S., \"The Internet Standards Process --\n                     Revision\
    \ 3\", BCP 9, RFC 2026, October 1996.\n   [RFC2048]         Freed, N., Klensin,\
    \ J., and J. Postel,\n                     \"Multipurpose Internet Mail Extensions\
    \ (MIME) Part\n                     Four: Registration Procedures\", BCP 13, RFC\
    \ 2048,\n                     November 1996.\n   [RFC2231]         Freed, N. and\
    \ K. Moore, \"MIME Parameter Value and\n                     Encoded Word Extensions:\n\
    \                     Character Sets, Languages, and Continuations\",\n      \
    \               RFC 2231, November 1997.\n   [RFC2616]         Fielding, R., Gettys,\
    \ J., Mogul, J., Frystyk, H.,\n                     Masinter, L., Leach, P., and\
    \ T. Berners-Lee,\n                     \"Hypertext Transfer Protocol -- HTTP/1.1\"\
    ,\n                     RFC 2616, June 1999.\n   [RFC4288]         Freed, N. and\
    \ J. Klensin, \"Media Type\n                     Specifications and Registration\
    \ Procedures\",\n                     BCP 13, RFC 4288, December 2005.\n   [RFC5987]\
    \         Reschke, J., \"Character Set and Language Encoding\n               \
    \      for Hypertext Transfer Protocol (HTTP) Header Field\n                 \
    \    Parameters\", RFC 5987, August 2010.\n   [RFC6648]         Saint-Andre, P.,\
    \ Crocker, D., and M. Nottingham,\n                     \"Deprecating the \"X-\"\
    \ Prefix and Similar Constructs\n                     in Application Protocols\"\
    , BCP 178, RFC 6648,\n                     June 2012.\n"
- title: Appendix A.  Grandfathered Media Types
  contents:
  - "Appendix A.  Grandfathered Media Types\n   A number of media types with unfaceted\
    \ subtype names, registered\n   prior to 1996, would, if registered under the\
    \ guidelines in this\n   document, be given a faceted name and placed into either\
    \ the vendor\n   or personal trees.  Reregistration of those types to reflect\
    \ the\n   appropriate trees is encouraged but not required.  Ownership and\n \
    \  change control principles outlined in this document apply to those\n   types\
    \ as if they had been registered in the trees described above.\n   From time to\
    \ time there may also be cases where a media type with an\n   unfaceted subtype\
    \ name has been widely deployed without being\n   registered.  (Note that this\
    \ includes subtype names beginning with\n   the \"x-\" prefix.)  If possible,\
    \ such a media type SHOULD be\n   reregistered with a proper faceted subtype name,\
    \ possibly using a\n   deprecated alias to identify the original name (see Section\
    \ 4.2.9).\n   However, if this is not possible, the type can, subject to approval\n\
    \   by both the media types reviewer and the IESG, be registered in the\n   proper\
    \ tree with its unfaceted name.\n"
- title: Appendix B.  Changes since RFC 4288
  contents:
  - "Appendix B.  Changes since RFC 4288\n   o  Suffixes to indicate the use of a\
    \ particular structured syntax are\n      now fully specified and a suffix registration\
    \ process has been\n      defined.\n   o  Registration of widely deployed unregistered\
    \ unfaceted type names\n      in the vendor or personal trees is now allowed,\
    \ subject to\n      approval by the media types reviewer and the IESG.\n   o \
    \ The standards-tree registration process has been revised to\n      include Expert\
    \ Review and generalized to address cases like media\n      types in non-IETF\
    \ stream documents.\n   o  A field for fragment identifiers has been added to\
    \ the\n      registration template and brief directions for specifying fragment\n\
    \      identifiers have been added.\n   o  The specification requirements for\
    \ personal-tree registrations\n      have been changed to be the same as those\
    \ for the vendor tree.\n      The text has been changed to encourage (but not\
    \ require)\n      specification availability.\n   o  The process for defining\
    \ additional trees has been clarified to\n      state that an IETF Standards Action\
    \ is required.\n   o  Widely deployed types with \"x-\" names can now be registered\
    \ as an\n      exception in the vendor tree.\n   o  The requirements on changes\
    \ to registrations have been loosened so\n      minor changes are easier to make.\n\
    \   o  The registration process has been completely restructured so that\n   \
    \   with the exception of IETF-generated types in the standards tree,\n      all\
    \ requests are processed by IANA and not the IESG.\n   o  A provisional registration\
    \ process has been added for early\n      assignment of types in the standards\
    \ tree.\n   o  Many editorial changes have been made throughout the document to\n\
    \      make the requirements and processes it describes clearer and\n      easier\
    \ to follow.\n   o  The ability to specify a list of deprecated aliases for a\
    \ media\n      type has been added.\n   o  Types with names beginning with \"\
    x-\" are no longer considered to\n      be members of the unregistered \"x.\"\
    \ tree.  As with any unfaceted\n      type, special procedures have been added\
    \ to allow registration of\n      such types in an appropriate tree.\n   o  Changes\
    \ to a type registered by a third party may now be made by\n      the designated\
    \ change controller even if that isn't the vendor or\n      organization that\
    \ created the type.  However, the vendor or\n      organization may elect to assert\
    \ ownership and change controller\n      over the type at any time.\n   o  Limited-use\
    \ media types are now asked to note whether or not the\n      supplied list of\
    \ applications employing the media type is\n      exhaustive.\n   o  The ABNF\
    \ for media type names has been further restricted to\n      require that names\
    \ begin with an alphanumeric character.\n   o  Mailing list review is no longer\
    \ required prior to registration of\n      media types.  Additionally, the address\
    \ associated with the media\n      type review mailing list has been changed to\
    \ media-types@iana.org.\n   o  The rules for text/* media types have been updated\
    \ to reflect the\n      changes specified in [RFC6657].\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Ned Freed\n   Oracle\n   800 Royal Oaks\n   Monrovia,\
    \ CA  91016-6347\n   USA\n   EMail: ned+ietf@mrochek.com\n   John C. Klensin\n\
    \   1770 Massachusetts Ave, #322\n   Cambridge, MA  02140\n   USA\n   EMail: john+ietf@jck.com\n\
    \   Tony Hansen\n   AT&T Laboratories\n   200 Laurel Ave.\n   Middletown, NJ \
    \ 07748\n   USA\n   EMail: tony+mtsuffix@maillennium.att.com\n"
