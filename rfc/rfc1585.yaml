- title: __initial_text__
  contents:
  - '                     MOSPF: Analysis and Experience

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  This memo\n   does not specify an Internet standard of any kind.  Distribution\
    \ of\n   this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo documents how the MOSPF protocol satisfies the requirements\n\
    \   imposed on Internet routing protocols by \"Internet Engineering Task\n   Force\
    \ internet routing protocol standardization criteria\" ([RFC\n   1264]).\n   Please\
    \ send comments to mospf@gated.cornell.edu.\n"
- title: 1.  Summary of MOSPF features and algorithms
  contents:
  - "1.  Summary of MOSPF features and algorithms\n   MOSPF is an enhancement of OSPF\
    \ V2, enabling the routing of IP\n   multicast datagrams.  OSPF is a link-state\
    \ (unicast) routing\n   protocol, providing a database describing the Autonomous\
    \ System's\n   topology.  IP multicast is an extension of LAN multicasting to\
    \ a\n   TCP/IP Internet.  IP Multicast permits an IP host to send a single\n \
    \  datagram (called an IP multicast datagram) that will be delivered to\n   multiple\
    \ destinations.  IP multicast datagrams are identified as\n   those packets whose\
    \ destinations are class D IP addresses (i.e.,\n   addresses whose first byte\
    \ lies in the range 224-239 inclusive).\n   Each class D address defines a multicast\
    \ group.\n   The extensions required of an IP host to participate in IP\n   multicasting\
    \ are specified in \"Host extensions for IP multicasting\"\n   ([RFC 1112]). \
    \ That document defines a protocol, the Internet Group\n   Management Protocol\
    \ (IGMP), that enables hosts to dynamically join\n   and leave multicast groups.\n\
    \   MOSPF routers use the IGMP protocol to monitor multicast group\n   membership\
    \ on local LANs through the sending of IGMP Host Membership\n   Queries and the\
    \ reception of IGMP Host Membership Reports.  A MOSPF\n   router then distributes\
    \ this group location information throughout\n   the routing domain by flooding\
    \ a new type of OSPF link state\n   advertisement, the group-membership-LSA (type\
    \ 6). This in turn\n   enables the MOSPF routers to most efficiently forward a\
    \ multicast\n   datagram to its multiple destinations: each router calculates\
    \ the\n   path of the multicast datagram as a shortest-path tree whose root is\n\
    \   the datagram source, and whose terminal branches are LANs containing\n   group\
    \ members.\n   A separate tree is built for each [source network, multicast\n\
    \   destination] combination.  To ease the computational demand on the\n   routers,\
    \ these trees are built \"on demand\", i.e., the first time a\n   datagram having\
    \ a particular combination of source network and\n   multicast destination is\
    \ received. The results of these \"on demand\"\n   tree calculations are then\
    \ cached for later use by subsequent\n   matching datagrams.\n   MOSPF is meant\
    \ to be used internal to a single Autonomous System.\n   When supporting IP multicast\
    \ over the entire Internet, MOSPF would\n   have to be used in concert with an\
    \ inter-AS multicast routing\n   protocol (something like DVMRP would work).\n\
    \   The MOSPF protocol is based on the work of Steve Deering in\n   [Deering].\
    \  The MOSPF specification is documented in [MOSPF].\n"
- title: 1.1.  Characteristics of the multicast datagram's path
  contents:
  - "1.1.  Characteristics of the multicast datagram's path\n   As a multicast datagram\
    \ is forwarded along its shortest-path tree,\n   the datagram is delivered to\
    \ each member of the destination multicast\n   group. In MOSPF, the forwarding\
    \ of the multicast datagram has the\n   following properties:\n      o The path\
    \ taken by a multicast datagram depends both on the\n        datagram's source\
    \ and its multicast destination. Called\n        source/destination routing, this\
    \ is in contrast to most unicast\n        datagram forwarding algorithms (like\
    \ OSPF) that route\n        based solely on destination.\n      o The path taken\
    \ between the datagram's source and any particular\n        destination group\
    \ member is the least cost path available. Cost\n        is expressed in terms\
    \ of the OSPF link-state metric.\n      o MOSPF takes advantage of any commonality\
    \ of least cost paths\n        to destination group members. However, when members\
    \ of the\n        multicast group are spread out over multiple networks, the\n\
    \        multicast datagram must at times be replicated. This replication\n  \
    \      is performed as few times as possible (at the tree branches),\n       \
    \ taking maximum advantage of common path segments.\n      o For a given multicast\
    \ datagram, all routers calculate an\n        identical shortest-path tree.  This\
    \ is possible since the\n        shortest-path tree is rooted at the datagram\
    \ source, instead\n        of being rooted at the calculating router (as is done\
    \ in the\n        unicast case). Tie-breakers have been defined to ensure\n  \
    \      that, when several equal-cost paths exist, all routers agree\n        on\
    \ which single path to use. As a result, there is a single\n        path between\
    \ the datagram's source and any particular\n        destination group member.\
    \ This means that, unlike OSPF's\n        treatment of regular (unicast) IP data\
    \ traffic, there is no\n        provision for equal-cost multipath.\n      o While\
    \ MOSPF optimizes the path to any given group member, it\n        does not necessarily\
    \ optimize the use of the internetwork as\n        a whole. To do so, instead\
    \ of calculating source-based\n        shortest-path trees, something similar\
    \ to a minimal spanning\n        tree (containing only the group members) would\
    \ need to be\n        calculated.  This type of minimal spanning tree is called\
    \ a\n        Steiner tree in the literature.  For a comparison of\n        shortest-path\
    \ tree routing to routing using Steiner trees,\n        see [Deering2] and [Bharath-Kumar].\n\
    \      o When forwarding a multicast datagram, MOSPF conforms to the\n       \
    \ link-layer encapsulation standards for IP multicast\n        datagrams as specified\
    \ in \"Host extensions for IP multicasting\"\n        ([RFC 1112]), \"Transmission\
    \ of IP datagrams over the\n        SMDS Service\" ([RFC 1209]) and \"Transmission\
    \ of IP and ARP\n        over FDDI Networks\" ([RFC 1390]). In particular, for\
    \ ethernet\n        and FDDI the explicit mapping between IP multicast\n     \
    \   addresses and data-link multicast addresses is used.\n"
- title: 1.2.  Miscellaneous features
  contents:
  - "1.2.  Miscellaneous features\n   This section lists, in no particular order,\
    \ the other miscellaneous\n   features that the MOSPF protocol supports:\n   \
    \   o MOSPF routers can be mixed within an Autonomous System (and\n        even\
    \ within a single OSPF area) with non-multicast OSPF\n        routers. When this\
    \ is done, all routers will interoperate in\n        the routing of unicasts.\
    \  Unicast routing will not be\n        affected by this mixing; all unicast paths\
    \ will be the same\n        as before the introduction of multicast. This mixing\
    \ of\n        multicast and non-multicast routers enables phased\n        introduction\
    \ of a multicast capability into an internetwork.\n        However, it should\
    \ be noted that some configurations of MOSPF\n        and non-MOSPF routers may\
    \ produce unexpected failures in\n        multicast routing (see Section 6.1 of\
    \ [MOSPF]).\n      o MOSPF does not include the ability to tunnel multicast\n\
    \        datagrams through non-multicast routers. A tunneling capability\n   \
    \     has proved valuable when used by the DVMRP protocol in the\n        MBONE.\
    \  However, it is assumed that, since MOSPF is an intra-AS\n        protocol,\
    \ multicast can be turned on in enough of the Autonomous\n        System's routers\
    \ to achieve the required connectivity without\n        resorting to tunneling.\
    \ The more centralized control that exists\n        in most Autonomous Systems,\
    \ when compared to the Internet as a\n        whole, should make this possible.\n\
    \      o In addition to calculating a separate datagram path for each\n      \
    \  [source network, multicast destination] combination, MOSPF\n        can also\
    \ vary the path based on IP Type of Service (TOS). As\n        with OSPF unicast\
    \ routing, TOS-based multicast routing is\n        optional, and routers supporting\
    \ it can be freely mixed with\n        those that don't.\n      o MOSPF supports\
    \ all network types that are supported by the base\n        OSPF protocol: broadcast\
    \ networks, point-to-points networks and\n        non-broadcast multi-access (NBMA)\
    \ networks.  Note however that\n        IGMP is not defined on NBMA networks,\
    \ so while these networks\n        can support the forwarding of multicast datagrams,\
    \ they cannot\n        support directly connected group members.\n      o MOSPF\
    \ supports all Autonomous System configurations that are\n        supported by\
    \ the base OSPF protocol. In particular, an algorithm\n        for forwarding\
    \ multicast datagrams between OSPF areas\n        is included.  Also, areas with\
    \ configured virtual links can\n        be used for transit multicast traffic.\n\
    \      o A way of forwarding multicast datagrams across Autonomous\n        System\
    \ boundaries has been defined. This means that a multicast\n        datagram having\
    \ an external source can still be forwarded\n        throughout the Autonomous\
    \ System. Facilities also exist for\n        forwarding locally generated datagrams\
    \ to Autonomous System exit\n        points, from which they can be further distributed.\
    \ The\n        effectiveness of this support will depend upon the nature of the\n\
    \        inter-AS multicast routing protocol.  The one assumption that\n     \
    \   has been made is that the inter-AS multicast routing protocol\n        will\
    \ operate in an reverse path forwarding (RPF) fashion:\n        namely, that multicast\
    \ datagrams originating from an external\n        source will enter the Autonomous\
    \ System at the same place that\n        unicast datagrams destined for that source\
    \ will exit.\n      o To deal with the fact that the external unicast and multicast\n\
    \        topologies will be different for some time to come, a\n        way to\
    \ indicate that a route is available for multicast but\n        not unicast (or\
    \ vice versa) has been defined. This for example\n        would allow a MOSPF\
    \ system to use DVMRP as its inter-AS\n        multicast routing protocol, while\
    \ using BGP as its inter-AS\n        unicast routing protocol.\n      o For those\
    \ physical networks that have been assigned multiple\n        IP network/subnet\
    \ numbers, multicast routing can be disabled\n        on all but one OSPF interface\
    \ to the physical network.  This\n        avoids unwanted replication of multicast\
    \ datagrams.\n      o For those networks residing on Autonomous System boundaries,\n\
    \        which  may  be  running multiple multicast routing protocols\n      \
    \  (or multiple copies of the same multicast routing protocol),\n        MOSPF\
    \  can  be configured to encapsulate multicast datagrams\n        with unicast\
    \ (rather than multicast) link-level destinations.\n        This also avoids unwanted\
    \ replication of multicast datagrams.\n      o MOSPF provides an optimization\
    \ for IP multicast's \"expanding\n        ring search\" (sometimes called \"TTL\
    \ scoping\") procedure. In\n        an expanding ring search, an application finds\
    \ the nearest\n        server by sending out successive multicasts, each with\
    \ a\n        larger TTL. The first responding server will then be the\n      \
    \  closest (in terms of hops, but not necessarily in terms of\n        the OSPF\
    \ metric). MOSPF minimizes the network bandwidth\n        consumed by an expanding\
    \ ring search by refusing to forward\n        multicast datagrams whose TTL is\
    \ too small to ever reach a\n        group member.\n"
- title: 2.  Security architecture
  contents:
  - "2.  Security architecture\n   All MOSPF protocol packet exchanges (excluding\
    \ IGMP) are specified by\n   the base OSPF protocol, and as such are authenticated.\
    \ For a\n   discussion of OSPF's authentication mechanism, see Appendix D of\n\
    \   [OSPF].\n"
- title: 3.  MIB support
  contents:
  - "3.  MIB support\n   Management support for MOSPF has been added to the base OSPF\
    \ V2 MIB\n   [OSPF MIB]. These additions consist of the ability to read and write\n\
    \   the configuration parameters specified in Section B of [MOSPF],\n   together\
    \ with the ability to dump the new group-membership-LSAs.\n"
- title: 4.  Implementations
  contents:
  - "4.  Implementations\n   There is currently one MOSPF implementation, written\
    \ by Proteon, Inc.\n   It was released for general use in April 1992. It is a\
    \ full MOSPF\n   implementation, with the exception of TOS-based multicast routing.\
    \ It\n   also does not contain an inter-AS multicast routing protocol.\n   The\
    \ multicast applications included with the Proteon MOSPF\n   implementation include:\
    \ a multicast pinger, console commands so that\n   the router itself can join\
    \ and leave multicast groups (and so respond\n   to multicast pings), and the\
    \ ability to send SNMP traps to a\n   multicast address. Proteon is also using\
    \ IP multicast to support the\n   tunneling of other protocols over IP.  For example,\
    \ source route\n   bridging is tunneled over a MOSPF domain, using one IP multicast\n\
    \   address for explorer frames and mapping the segment/bridge found in a\n  \
    \ specifically-routed frame's RIF field to other IP multicast\n   addresses. \
    \ This last application has proved popular, since it\n   provides a lightweight\
    \ transport that is resistant to reordering.\n   The Proteon MOSPF implementation\
    \ is currently running in\n   approximately a dozen sites, each site consisting\
    \ of 10-20 routers.\n   Table 1 gives a comparison between the code size of Proteon's\
    \ base\n   OSPF implementation and its MOSPF implementation. Two dimensions of\n\
    \                      lines of C   bytes of 68020 object code\n          ___________________________________________________\n\
    \          OSPF base   11,693       63,160\n          MOSPF       15,247     \
    \  81,956\n            Table 1: Comparison of OSPF and MOSPF code sizes\n   size\
    \ are indicated: lines of C (comments and blanks  included),  and\n   bytes  of\
    \ 68020 object code. In both cases, the multicast extensions\n   to OSPF have\
    \ engendered a 30% size increase.\n   Note that in these sizes, the code used\
    \ to configure and monitor the\n   implementation has been included. Also, in\
    \ the MOSPF code size\n   figure, the IGMP implementation has been included.\n"
- title: 5.  Testing
  contents:
  - "5.  Testing\n   Figure 1 shows the topology that was used for the initial debugging\n\
    \   of Proteon's MOSPF implementation.  It consists of seven MOSPF\n   routers,\
    \ interconnected by ethernets, token rings, FDDIs and serial\n   lines. The applications\
    \ used to test the routing were multicast ping\n   and the sending of traps to\
    \ a multicast address (the box labeled\n   \"NAZ\" was a network analyzer that\
    \ was occasionally sending IGMP Host\n   Membership Reports and then continuously\
    \ receiving multicast SNMP\n   traps). The \"vat\" application was also used on\
    \ workstations (without\n   running the DVMRP \"mrouted\" daemon; see \"Distance\
    \ Vector Multicast\n   Routing Protocol\", [RFC 1075]) which were multicasting\
    \ packet voice\n   across the MOSPF domain.\n   The MOSPF features tested in this\
    \ setup were:\n   o   Re-routing in response to topology changes.\n   o   Path\
    \ verification after altering costs.\n   o   Routing multicast datagrams between\
    \ areas.\n   o   Routing multicast datagrams to and from external addresses.\n\
    \   o   The various tiebreakers employed when constructing datagram\n       shortest-path\
    \ trees.\n   o   MOSPF over non-broadcast multi-access networks.\n   o   Interoperability\
    \ of MOSPF and non-multicast OSPF routers.\n                                 \
    \             +---+\n              +-------------------------------|RT1|\n   \
    \           |                               +---+\n              |           \
    \  +---------+         |\n              |                  |              |\n\
    \              |  +---+         +---+    +---+   |\n              |  |RT5|---------|RT2|\
    \    |NAZ|   |\n              |  +---+    +----+---+    +---+   |\n          \
    \    |           |      |        |     |\n              |           |   +------------------------+\n\
    \              |           |                         |      +\n              |\
    \           |                         |      |\n              |           |  \
    \                       |      |  +---+\n              |   +------------+    \
    \  +             |      |--|RT7|\n              |            |          |    \
    \         |      |  +---+\n              |          +---+        |           +---+\
    \    |\n              |          |RT4|--------|-----------|RT3|----|\n       \
    \       |          +---+        |           +---+    |\n              |      \
    \                 |                    |\n              |               +    \
    \   +                    |\n              |               |           +---+  \
    \          |\n              +---------------|-----------|RT6|------------|\n \
    \                             |           +---+            |\n               \
    \               +                            +\n                  Figure 1: Initial\
    \ MOSPF test setup\n   Due to the commercial tunneling applications developed\
    \ by Proteon\n   that use IP multicast, MOSPF has been deployed in a number of\n\
    \   operational but non-Internet-connected sites.  MOSPF has been also\n   deployed\
    \ in some Internet-connected sites (e.g., OARnet) for testing\n   purposes. The\
    \ desire of these sites is to use MOSPF to attach to the\n   \"mbone\".  However,\
    \ an implementation of both MOSPF and DVMRP in the\n   same box is needed; without\
    \ this one way communication has been\n   achieved (sort of like lecture mode\
    \ in vat) by configuring multicast\n   static routes in the MOSPF implementation.\
    \ The problem is that there\n   is no current way to inject the MOSPF source information\
    \ into DVMRP.\n   The MOSPF features that have not yet been tested are:\n   o\
    \   The interaction between MOSPF and virtual links.\n   o   Interaction between\
    \ MOSPF and other multicast routing protocols\n       (e.g., DVMRP).\n   o   TOS-based\
    \ routing in MOSPF.\n"
- title: 6.  A brief analysis of MOSPF scaling
  contents:
  - "6.  A brief analysis of MOSPF scaling\n   MOSPF uses the Dijkstra algorithm to\
    \ calculate the path of a\n   multicast datagram through any given OSPF area.\
    \ This calculation\n   encompasses all the transit nodes (routers and networks)\
    \ in the area;\n   its cost scales as O(N*log(N)) where N is the number of transit\
    \ nodes\n   (same as the cost of the OSPF unicast intra-area routing\n   calculation).\
    \ This is the cost of a single path calculation; however,\n   MOSPF calculates\
    \ a separate path for each [source network, multicast\n   destination, TOS] tuple.\
    \ This is potentially a lot of Dijkstra\n   calculations.\n   MOSPF proposes to\
    \ deal with this calculation burden by calculating\n   datagram paths in an \"\
    on demand\" fashion. That is, the path is\n   calculated only when receiving the\
    \ first datagram in a stream.  After\n   the calculation, the results are cached\
    \ for use by later matching\n   datagrams. This on demand calculation alleviates\
    \ the cost of the\n   routing calculations in two ways: 1) It spreads the routing\n\
    \   calculations out over time and 2) the router does fewer calculations,\n  \
    \ since it does not even calculate the paths of datagrams whose path\n   will\
    \ not even touch the router.\n   Cache entries need never be timed out, although\
    \ they are removed on\n   topological changes.  If an implementation chooses to\
    \ limit the\n   amount of memory consumed by the cache, probably by removing selected\n\
    \   entries, care must be taken to ensure that cache thrashing does not\n   occur.\n\
    \   The effectiveness of this \"on demand\" calculation will need to be\n   proven\
    \ over time, as multicast usage and traffic patterns become more\n   evident.\n\
    \   As a simple example, suppose an OSPF area consists of 200 routers.\n   Suppose\
    \ each router represents a site, and each site is participating\n   simultaneously\
    \ with three other local sites (inside the area) in a\n   video conference. This\
    \ gives 200/4 = 50 groups, and 200 separate\n   datagram trees. Assuming each\
    \ datagram tree goes through every router\n   (which probably won't be true),\
    \ each router will be doing 200\n   Dijkstras initially (and on internal topology\
    \ changes). The time to\n   run a 200 node Dijkstra on a 10 mips processor was\
    \ estimated to be 15\n   milliseconds in \"OSPF protocol analysis\" ([RFC 1245]).\
    \ So if all 200\n   Dijkstras need to be done at once, it will take 3 seconds\
    \ total on a\n   10 mips processor. In contrast, assuming each video stream is\n\
    \   64Kb/sec, the routers will constantly forward 12Mb/sec of application\n  \
    \ data (the cost of this soon dwarfing the cost of the Dijkstras).\n   In this\
    \ example there are also 200 group-membership-LSAs in the area;\n   since each\
    \ group membership-LSA is around 64 bytes, this adds 64*200\n   = 12K bytes to\
    \ the OSPF link state database.\n   Other things to keep in mind when evaluating\
    \ the cost of MOSPF's\n   routing calculation are:\n   o Assuming that the guidelines\
    \ of \"OSPF protocol analysis\" ([RFC\n     1245]) are followed and areas are\
    \ limited to 200 nodes, the cost\n     of the Dijkstra will not grow unbounded,\
    \ but will instead be\n     capped at the Dijkstra for 200 nodes.  One need then\
    \ worry about\n     the number of Dijkstras, which is determined by the number\
    \ of\n     [datagram source, multicast destination] combinations.\n   o A datagram\
    \ whose destination has no group members in the domain\n     can still be forwarded\
    \ through the MOSPF system. However, the\n     Dijkstra calculation here depends\
    \ only on the [datagram source,\n     TOS], since the datagram will be forwarded\
    \ along to \"wild-card\n     receivers\" only. Since the number of group members\
    \ in a 200\n     router area is probably also bounded, the possibility of\n  \
    \   unbounded calculation growth lies in the number of possible\n     datagram\
    \ sources. (However, it should be noted that some future\n     multicast applications,\
    \ such as distributed computing, may generate\n     a large number of short-lived\
    \ multicast groups).\n   o By collapsing routing information before importing\
    \ it into the\n     area/AS, the number of sources can be reduced dramatically.\
    \ In\n     particular, if the AS relies on a default external route, most\n  \
    \   external sources will be covered by a single Dijkstra calculation\n     (the\
    \ one using 0.0.0.0 as the source).\n   One other factor to be considered in MOSPF\
    \ scaling is how often cache\n   entries need to be recalculated, as a result\
    \ of a network topology\n   change. The rules for MOSPF cache maintenance are\
    \ explained in\n   Section 13 of [MOSPF]. Note that the further away the topology\
    \ change\n   happens from the calculating router, the fewer cache entries need\
    \ to\n   be recalculated. For example, if an external route changes, many\n  \
    \ fewer cache entries need to be purged as compared to a change in a\n   MOSPF\
    \ domain's internal link. For scaling purposes, this is exactly\n   the desired\
    \ behavior. Note that \"OSPF protocol analysis\" ([RFC 1245])\n   bears this out\
    \ when it shows that changes in external routes (on the\n   order of once a minute\
    \ for the networks surveyed) are much more\n   frequent than internal changes\
    \ (between 15 and 50 minutes for the\n   networks surveyed).\n"
- title: 7.  Known difficulties
  contents:
  - "7.  Known difficulties\n   The following are known difficulties with the MOSPF\
    \ protocol:\n   o When a MOSPF router itself contains multicast applications,\
    \ the\n     choice of its application datagrams' source addresses should be\n\
    \     made with care.  Due to OSPF's representation of serial lines,\n     using\
    \ a serial line interface address as source can lead to\n     excess data traffic\
    \ on the serial line.  In fact, using any\n     interface address as source can\
    \ lead to excess traffic, owing to\n     MOSPF's decision to always multicast\
    \ the packet onto the source\n     network as part of the forwarding process (see\
    \ Section 11.3 of\n     [MOSPF]). However, optimal behavior can be achieved by\
    \ assigning\n     the router an interface-independent address, and using this\
    \ as\n     the datagram source.\n     This concern does not apply to regular IP\
    \ hosts (i.e., those\n     that are not MOSPF routers).\n   o It is necessary\
    \ to ensure, when mixing MOSPF and non-multicast\n     routers on a LAN, that\
    \ a MOSPF router becomes Designated Router.\n     Otherwise multicast datagrams\
    \ will not be forwarded on the LAN,\n     nor will group membership be monitored\
    \ on the LAN, nor will the\n     group-membership-LSAs be flooded over the LAN.\
    \ This can be an\n     operational nuisance, since OSPF's Designated Router election\n\
    \     algorithm is designed to discourage Designated Router transitions,\n   \
    \  rather than to guarantee that certain routers become\n     Designated Router.\
    \ However, assigning a DR Priority of 0 to all\n     non-multicast routers will\
    \ always guarantee that a MOSPF router\n     is selected as Designated Router.\n"
- title: 8.  Future work
  contents:
  - "8.  Future work\n   In the future, it is expected that the following work will\
    \ be done on\n   the MOSPF protocol:\n   o More analysis of multicast traffic\
    \ patterns needs to be done, in\n     order to see whether the MOSPF routing calculations\
    \ will pose an\n     undue processing burden on multicast routers.  If necessary,\n\
    \     further ways to ease this burden may need to be defined. One\n     suggestion\
    \ that has been made is to revert to reverse path\n     forwarding when the router\
    \ is unable to calculate the detailed\n     MOSPF forwarding cache entries.\n\
    \   o Experience needs to be gained with the interactions between multiple\n \
    \    multicast routing algorithms (e.g., MOSPF and DVMRP).\n   o Additional MIB\
    \ support for the retrieval of forwarding cache\n     entries, along the lines\
    \ of the \"IP forwarding table MIB\" ([RFC\n     1354]), would be useful.\n"
- title: 9.  References
  contents:
  - "9.  References\n    [Bharath-Kumar] Bharath-Kumar, K., and J. Jaffe, \"Routing\
    \ to\n                    multiple destinations in Computer Networks\", IEEE\n\
    \                    Transactions on Communications, COM-31[3], March\n      \
    \              1983.\n    [Deering]       Deering, S., \"Multicast Routing in\
    \ Internetworks\n                    and Extended LANs\", SIGCOMM Summer 1988\n\
    \                    Proceedings, August 1988.\n    [Deering2]      Deering, S.,\
    \ \"Multicast Routing in a Datagram\n                    Internetwork\", Stanford\
    \ Technical Report\n                    STAN-CS-92-1415, Department of Computer\
    \ Science,\n                    Stanford University, December 1991.\n    [OSPF]\
    \          Moy, J., \"OSPF Version 2\", RFC 1583, Proteon,\n                 \
    \   Inc., March 1994.\n    [OSPF MIB]      Baker F., and R. Coltun, \"OSPF Version\
    \ 2 Management\n                    Information Base\", RFC 1253, ACC, Computer\
    \ Science\n                    Center, August 1991.\n    [MOSPF]         Moy,\
    \ J., \"Multicast Extensions to OSPF\", RFC 1584,\n                    Proteon,\
    \ Inc., March 1994.\n    [RFC 1075]      Waitzman, D., Partridge, C. and S. Deering,\n\
    \                    \"Distance Vector Multicast Routing Protocol\", RFC\n   \
    \                 1075, BBN STC, Stanford University, November 1988.\n    [RFC\
    \ 1112]      Deering, S., \"Host Extensions for IP Multicasting\",\n         \
    \           Stanford University, RFC 1112, May 1988.\n    [RFC 1209]      Piscitello,\
    \ D., and J. Lawrence, \"Transmission of IP\n                    Datagrams over\
    \ the SMDS Service\", RFC 1209, Bell\n                    Communications Research,\
    \ March 1991.\n    [RFC 1245]      Moy, J., Editor, \"OSPF Protocol Analysis\"\
    , RFC\n                    1245, Proteon, Inc., July 1991.\n    [RFC 1246]   \
    \   Moy, J., Editor, \"Experience with the OSPF\n                    Protocol\"\
    , RFC 1245, Proteon, Inc., July 1991.\n    [RFC 1264]      Hinden, R., \"Internet\
    \ Routing Protocol\n                    Standardization Criteria\", RFC 1264,\
    \ BBN, October\n                    1991.\n    [RFC 1390]      Katz, D., \"Transmission\
    \ of IP and ARP over FDDI\n                    Networks\", RFC 1390, cisco Systems,\
    \ Inc., January\n                    1993.\n    [RFC 1354]      Baker, F., \"\
    IP Forwarding Table MIB\", RFC 1354,\n                    ACC, July 1992.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are not discussed in this memo, tho\
    \ see Section 2.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   John Moy\n   Proteon, Inc.\n   9 Technology Drive\n   Westborough,\
    \ MA 01581\n   Phone: (508) 898-2800\n   EMail: jmoy@proteon.com\n"
