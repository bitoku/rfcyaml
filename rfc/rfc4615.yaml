- title: __initial_text__
  contents:
  - "             The Advanced Encryption Standard-Cipher-based\n        Message Authentication\
    \ Code-Pseudo-Random Function-128\n                 (AES-CMAC-PRF-128) Algorithm\
    \ for the\n                  Internet Key Exchange Protocol (IKE)\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   Some implementations of IP Security (IPsec) may want to use a\n\
    \   pseudo-random function (PRF) based on the Advanced Encryption\n   Standard\
    \ (AES).  This memo describes such an algorithm, called\n   AES-CMAC-PRF-128.\
    \  It supports fixed and variable key sizes.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Basic Definitions ...............................................2\n  \
    \ 3. The AES-CMAC-PRF-128 Algorithm ..................................2\n   4.\
    \ Test Vectors ....................................................4\n   5. Security\
    \ Considerations .........................................4\n   6. IANA Considerations\
    \ .............................................5\n   7. Acknowledgements ................................................5\n\
    \   8. References ......................................................5\n  \
    \    8.1. Normative References .......................................5\n    \
    \  8.2. Informative References .....................................5\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   [RFC4493] describes a method to use the Advanced Encryption\
    \ Standard\n   (AES) as a Message Authentication Code (MAC) that has a 128-bit\n\
    \   output length.  The 128-bit output is useful as a long-lived pseudo-\n   random\
    \ function (PRF).  This document specifies a PRF that supports\n   fixed and variable\
    \ key sizes for IKEv2 [RFC4306] Key Derivation\n   Function (KDF) and authentication.\n"
- title: 2.  Basic Definitions
  contents:
  - "2.  Basic Definitions\n   VK         Variable-length key for AES-CMAC-PRF-128,\
    \ denoted\n              by VK.\n   0^128      The string that consists of 128\
    \ zero-bits, which is\n              equivalent to 0x00000000000000000000000000000000\
    \ in\n              hexadecimal notation.\n   AES-CMAC   The AES-CMAC algorithm\
    \ with a 128-bit long key described\n              in section 2.4 of [RFC4493].\n"
- title: 3.  The AES-CMAC-PRF-128 Algorithm
  contents:
  - "3.  The AES-CMAC-PRF-128 Algorithm\n   The AES-CMAC-PRF-128 algorithm is identical\
    \ to AES-CMAC defined in\n   [RFC4493] except that the 128-bit key length restriction\
    \ is removed.\n   IKEv2 [RFC4306] uses PRFs for multiple purposes, most notably\
    \ for\n   generating keying material and authentication of the IKE_SA.  The\n\
    \   IKEv2 specification differentiates between PRFs with fixed key sizes\n   and\
    \ those with variable key sizes.\n   When using AES-CMAC-PRF-128 as the PRF described\
    \ in IKEv2, AES-CMAC-\n   PRF-128 is considered to take fixed size (16 octets)\
    \ keys for\n   generating keying material but it takes variable key sizes for\n\
    \   authentication.\n   That is, when generating keying material, \"half the bits\
    \ must come\n   from Ni and half from Nr, taking the first bits of each\" as described\n\
    \   in IKEv2, section 2.14; but for authenticating with shared secrets\n   (IKEv2,\
    \ section 2.16), the shared secret does not have to be 16\n   octets and the length\
    \ may vary.\n   +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\
    \   +                        AES-CMAC-PRF-128                           +\n  \
    \ +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n   +\
    \                                                                   +\n   + Input\
    \  : VK (Variable-length key)                                 +\n   +        :\
    \ M (Message, i.e., the input data of the PRF)             +\n   +        : VKlen\
    \ (length of VK in octets)                           +\n   +        : len (length\
    \ of M in octets)                              +\n   + Output : PRV (128-bit Pseudo-Random\
    \ Variable)                     +\n   +                                      \
    \                             +\n   +-------------------------------------------------------------------+\n\
    \   + Variable: K (128-bit key for AES-CMAC)                            +\n  \
    \ +                                                                   +\n   +\
    \ Step 1.   If VKlen is equal to 16                                 +\n   + Step\
    \ 1a.  then                                                    +\n   +       \
    \        K := VK;                                            +\n   + Step 1b.\
    \  else                                                    +\n   +           \
    \    K := AES-CMAC(0^128, VK, VKlen);                    +\n   + Step 2.   PRV\
    \ := AES-CMAC(K, M, len);                             +\n   +           return\
    \ PRV;                                             +\n   +                   \
    \                                                +\n   +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\
    \                 Figure 1.  The AES-CMAC-PRF-128 Algorithm\n   In step 1, the\
    \ 128-bit key, K, for AES-CMAC is derived as follows:\n   o If the key, VK, is\
    \ exactly 128 bits, then we use it as-is.\n   o If it is longer or shorter than\
    \ 128 bits, then we derive the key,\n     K, by applying the AES-CMAC algorithm\
    \ using the 128-bit all-zero\n     string as the key and VK as the input message.\
    \  This step is\n     described in step 1b.\n   In step 2, we apply the AES-CMAC\
    \ algorithm using K as the key and M\n   as the input message.  The output of\
    \ this algorithm is returned.\n"
- title: 4.  Test Vectors
  contents:
  - "4.  Test Vectors\n   ------------------------------------------------------------\n\
    \   Test Case AES-CMAC-PRF-128 with 20-octet input\n   Key        : 00010203 04050607\
    \ 08090a0b 0c0d0e0f edcb\n   Key Length : 18\n   Message    : 00010203 04050607\
    \ 08090a0b 0c0d0e0f 10111213\n   PRF Output : 84a348a4 a45d235b abfffc0d 2b4da09a\n\
    \   Test Case AES-CMAC-PRF-128 with 20-octet input\n   Key        : 00010203 04050607\
    \ 08090a0b 0c0d0e0f\n   Key Length : 16\n   Message    : 00010203 04050607 08090a0b\
    \ 0c0d0e0f 10111213\n   PRF Output : 980ae87b 5f4c9c52 14f5b6a8 455e4c2d\n   Test\
    \ Case AES-CMAC-PRF-128 with 20-octet input\n   Key        : 00010203 04050607\
    \ 0809\n   Key Length : 10\n   Message    : 00010203 04050607 08090a0b 0c0d0e0f\
    \ 10111213\n   PRF Output : 290d9e11 2edb09ee 141fcf64 c0b72f3d\n   ------------------------------------------------------------\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   The security provided by AES-CMAC-PRF-128 is\
    \ based upon the strength\n   of AES and AES-CMAC. At the time of this writing,\
    \ there are no known\n   practical cryptographic attacks against AES or AES-CMAC.\
    \  However, as\n   is true with any cryptographic algorithm, part of its strength\
    \ lies\n   in the secret key, VK, and the correctness of the implementation in\n\
    \   all of the participating systems.  The key, VK, needs to be chosen\n   independently\
    \ and randomly based on RFC 4086 [RFC4086], and both\n   keys, VK and K, should\
    \ be kept safe and periodically refreshed.\n   Section 4 presents test vectors\
    \ that assist in verifying the\n   correctness of the AES-CMAC-PRF-128 code.\n\
    \   If VK is longer than 128 bits and it is shortened to meet the AES-128\n  \
    \ key size, then some entropy might be lost.  However, as long as VK is\n   longer\
    \ than 128 bits, then the new key, K, preserves sufficient\n   entropy, i.e.,\
    \ the entropy of K is about 128 bits.\n   Therefore, we recommend the use of VK\
    \ that is longer than or equal to\n   128 bits, and we discourage the use of VK\
    \ that is shorter than or\n   equal to 64 bits, because of the small entropy.\n"
- title: 6. IANA Considerations
  contents:
  - "6. IANA Considerations\n   IANA has allocated a value of 8 for IKEv2 Transform\
    \ Type 2 (Pseudo-\n   Random Function) to the PRF_AES128_CMAC algorithm.\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   Portions of this text were borrowed from [RFC3664] and\
    \ [RFC4434].\n   Many thanks to Russ Housley and Paul Hoffman for suggestions\
    \ and\n   guidance.  We also thank Alfred Hoenes for many useful comments.\n \
    \  We acknowledge support from the following grants: Collaborative\n   Technology\
    \ Alliance (CTA) from US Army Research Laboratory,\n   DAAD19-01-2-0011; Presidential\
    \ Award from Army Research Office,-\n   W911NF-05-1-0491; ONR YIP N00014-04-1-0479.\
    \  Results do not reflect\n   any position of the funding agencies.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC4493]  Song, JH., Poovendran, R., Lee, J.,\
    \ and T. Iwata, \"The\n              AES-CMAC Algorithm\", RFC 4493, June 2006.\n\
    \   [RFC4306]  Kaufman, C., \"Internet Key Exchange (IKEv2) Protocol\", RFC\n\
    \              4306, December 2005.\n   [RFC4086]  Eastlake, D., 3rd, Schiller,\
    \ J., and S. Crocker,\n              \"Randomness Requirements for Security\"\
    , BCP 106, RFC 4086,\n              June 2005.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [RFC3664]  Hoffman, P., \"The AES-XCBC-PRF-128\
    \ Algorithm for the\n              Internet Key Exchange Protocol (IKE)\", RFC\
    \ 3664, January\n              2004.\n   [RFC4434]  Hoffman, P., \"The AES-XCBC-PRF-128\
    \ Algorithm for the\n              Internet Key Exchange Protocol (IKE)\", RFC\
    \ 4434, February\n              2006.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   JunHyuk Song\n   Samsung Electronics\n   University of\
    \ Washington\n   Phone: (206) 853-5843\n   EMail: junhyuk.song@samsung.com, junhyuk.song@gmail.com\n\
    \   Radha Poovendran\n   Network Security Lab\n   University of Washington\n \
    \  Phone: (206) 221-6512\n   EMail: radha@ee.washington.edu\n   Jicheol Lee\n\
    \   Samsung Electronics\n   Phone: +82-31-279-3605\n   EMail: jicheol.lee@samsung.com\n\
    \   Tetsu Iwata\n   Nagoya University\n   EMail: iwata@cse.nagoya-u.ac.jp\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
