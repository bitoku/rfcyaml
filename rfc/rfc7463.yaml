- contents:
  - "       Shared Appearances of a Session Initiation Protocol (SIP)\n                        Address
    of Record (AOR)\n"
  title: __initial_text__
- contents:
  - "Abstract\n   This document describes the requirements and implementation of a\n
    \  group telephony feature commonly known as Bridged Line Appearance\n   (BLA)
    or Multiple Line Appearance (MLA), or Shared Call/Line\n   Appearance (SCA).  When
    implemented using the Session Initiation\n   Protocol (SIP), it is referred to
    as shared appearances of an Address\n   of Record (AOR) since SIP does not have
    the concept of lines.  This\n   feature is commonly offered in IP Centrex services
    and IP Private\n   Branch Exchange (IPBX) offerings and is likely to be implemented
    on\n   SIP IP telephones and SIP feature servers used in a business\n   environment.
    \ This feature allows several user agents (UAs) to share\n   a common AOR, learn
    about calls placed and received by other UAs in\n   the group, and pick up or
    join calls within the group.  This document\n   discusses use cases, lists requirements,
    and defines extensions to\n   implement this feature.  This specification updates
    RFCs 3261 and\n   4235.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7463.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n   This document may contain
    material from IETF Documents or IETF\n   Contributions published or made publicly
    available before November\n   10, 2008.  The person(s) controlling the copyright
    in some of this\n   material may not have granted the IETF Trust the right to
    allow\n   modifications of such material outside the IETF Standards Process.\n
    \  Without obtaining an adequate license from the person(s) controlling\n   the
    copyright in such materials, this document may not be modified\n   outside the
    IETF Standards Process, and derivative works of it may\n   not be created outside
    the IETF Standards Process, except to format\n   it for publication as an RFC
    or to translate it into languages other\n   than English.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   3\n   2.  Conventions Used in This Document . . . . . . . . . . .
    . . .   5\n   3.  Usage Scenarios . . . . . . . . . . . . . . . . . . . . . .
    .   5\n     3.1.  Executive/Assistant Arrangement . . . . . . . . . . . . .   5\n
    \    3.2.  Call Group  . . . . . . . . . . . . . . . . . . . . . . .   5\n     3.3.
    \ Single Line Extension . . . . . . . . . . . . . . . . . .   6\n     3.4.  Changing
    UAs  . . . . . . . . . . . . . . . . . . . . . .   6\n   4.  Requirements and
    Implementation . . . . . . . . . . . . . . .   6\n     4.1.  Requirements  . .
    . . . . . . . . . . . . . . . . . . . .   6\n     4.2.  Implementation  . . .
    . . . . . . . . . . . . . . . . . .   8\n   5.  Normative Description . . . .
    . . . . . . . . . . . . . . . .  10\n     5.1.  Elements  . . . . . . . . . .
    . . . . . . . . . . . . . .  11\n     5.2.  Shared Appearance Dialog Package Extensions
    . . . . . . .  11\n       5.2.1.  The <appearance> Element  . . . . . . . . .
    . . . . .  11\n       5.2.2.  The <exclusive> Element . . . . . . . . . . . .
    . . .  12\n       5.2.3.  The <joined-dialog> Element . . . . . . . . . . . .
    .  12\n       5.2.4.  The <replaced-dialog> Element . . . . . . . . . . . .  13\n
    \    5.3.  Shared Appearance User Agents . . . . . . . . . . . . . .  13\n       5.3.1.
    \ Appearance Numbers and Call Context . . . . . . . . .  16\n       5.3.2.  Appearance
    Numbers and Call Control . . . . . . . . .  17\n       5.3.3.  Appearance Numbers
    and Transfer . . . . . . . . . . .  18\n     5.4.  Appearance Agent  . . . . .
    . . . . . . . . . . . . . . .  18\n   6.  XML Schema Definition . . . . . . .
    . . . . . . . . . . . . .  21\n   7.  Alert-Info Appearance Parameter Definition
    \ . . . . . . . . .  23\n   8.  User Interface Considerations . . . . . . . .
    . . . . . . . .  24\n     8.1.  Appearance Number Rendering . . . . . . . . .
    . . . . . .  24\n       8.1.1.  Single Appearance UAs . . . . . . . . . . . .
    . . . .  24\n       8.1.2.  Dual Appearance UAs . . . . . . . . . . . . . . .
    . .  24\n       8.1.3.  Shared Appearance UAs with Fixed Appearance Number  .
    \ 25\n       8.1.4.  Shared Appearance UAs with Variable Appearance\n               Numbers
    . . . . . . . . . . . . . . . . . . . . . . .  25\n       8.1.5.  Example User
    Interface Issues . . . . . . . . . . . .  25\n     8.2.  Call State Rendering
    \ . . . . . . . . . . . . . . . . . .  26\n   9.  Interoperability with Non-shared
    Appearance UAs . . . . . . .  26\n     9.1.  Appearance Assignment . . . . . .
    . . . . . . . . . . . .  26\n     9.2.  Appearance Release  . . . . . . . . .
    . . . . . . . . . .  27\n     9.3.  UAs Supporting Dialog Events but Not Shared
    Appearance  .  27\n   10. Provisioning Considerations . . . . . . . . . . . .
    . . . . .  27\n   11. Example Message Flows . . . . . . . . . . . . . . . . .
    . . .  28\n     11.1.  Registration and Subscription  . . . . . . . . . . . .
    .  28\n     11.2.  Appearance Selection for Incoming Call . . . . . . . . .  32\n
    \    11.3.  Outgoing Call without Appearance Seizure . . . . . . . .  35\n     11.4.
    \ Outgoing Call with Appearance Seizure  . . . . . . . . .  38\n     11.5.  Outgoing
    Call without Using an Appearance Number . . . .  42\n     11.6.  Appearance Release
    . . . . . . . . . . . . . . . . . . .  44\n     11.7.  Appearance Pickup  . .
    . . . . . . . . . . . . . . . . .  45\n     11.8.  Call between UAs within the
    Group  . . . . . . . . . . .  50\n     11.9.  Consultation Hold with Appearances
    . . . . . . . . . . .  52\n     11.10. Joining or Bridging an Appearance  . .
    . . . . . . . . .  55\n     11.11. Loss of Appearance during Allocation . . .
    . . . . . . .  58\n     11.12. Appearance Seizure Contention Race Condition .
    . . . . .  59\n     11.13. Appearance Agent Subscription to UAs . . . . . . .
    . . .  60\n     11.14. Appearance Pickup Race Condition Failure . . . . . . .
    .  62\n     11.15. Appearance Seizure Incoming/Outgoing Contention Race\n            Condition
    \ . . . . . . . . . . . . . . . . . . . . . . .  65\n   12. Security Considerations
    . . . . . . . . . . . . . . . . . . .  66\n   13. IANA Considerations . . . .
    . . . . . . . . . . . . . . . . .  67\n     13.1.  SIP Event Header Field Parameter:
    shared . . . . . . . .  67\n     13.2.  SIP Alert-Info Header Field Parameter:
    appearance  . . .  68\n     13.3.  URN Sub-Namespace Registration: sa-dialog-info
    . . . . .  68\n     13.4.  XML Schema Registration  . . . . . . . . . . . . .
    . . .  68\n   14. References  . . . . . . . . . . . . . . . . . . . . . . . .
    .  69\n     14.1.  Normative References . . . . . . . . . . . . . . . . . .  69\n
    \    14.2.  Informative References . . . . . . . . . . . . . . . . .  70\n   Acknowledgements
    \ . . . . . . . . . . . . . . . . . . . . . . . .  71\n   Authors' Addresses  .
    . . . . . . . . . . . . . . . . . . . . . .  71\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The feature and functionality requirements for SIP user
    agents (UAs)\n   supporting business telephony applications differ greatly from
    basic\n   SIP UAs, both in terms of services and end-user experience.  In\n   addition
    to basic SIP support [RFC3261], many of the services in a\n   business environment
    require the support for SIP extensions such as\n   REFER [RFC3515], SUBSCRIBE/NOTIFY
    [RFC6665], PUBLISH [RFC3903], the\n   SIP Replaces [RFC3891], and Join [RFC3911]
    header fields, etc.  Many\n   of the popular business services have been documented
    in the SIP\n   Service Examples [RFC5359].\n   This specification details a method
    for implementing a group\n   telephony feature known variously in telephony as
    Bridged Line\n   Appearance (BLA) or Multiple Line Appearances (MLA), one of the
    more\n   popular advanced features expected of SIP IP telephony devices in a\n
    \  business environment.  Other names for this feature include Shared\n   Call/Line
    Appearance (SCA), Shared Call Status and Multiple Call\n   Appearance (MCA).  A
    variant of this feature is known as Single Line\n   Extension.\n   This document
    looks at how this feature can be implemented using\n   standard SIP [RFC3261]
    in conjunction with SIP events [RFC6665] and\n   publication [RFC3903] (carrying
    the SIP dialog state event package\n   [RFC4235]) for exchanging status among
    UAs.\n   In traditional telephony, the line is physical.  A common scenario in\n
    \  telephony is for a number of business telephones to share a single or\n   a
    small number of lines.  The sharing or appearance of these lines\n   between a
    number of phones is what gives this feature its name.  A\n   common scenario in
    SIP is for a number of business telephones to\n   share a single or a small number
    of Address of Record (AOR) URIs.\n   In addition, an AOR can have multiple appearances
    on a single UA in\n   terms of the user interface.  The appearance number relates
    to the\n   user interface for the telephone; typically, each appearance of an\n
    \  AOR has a visual display (lamp that can change color or blink or a\n   screen
    icon) and a button (used to select the appearance) where each\n   appearance number
    is associated with a different dialog to/from the\n   AOR.  The telephony concept
    of line appearance is still relevant to\n   SIP due to the user interface considerations.
    \ It is important to\n   keep the appearance number construct because:\n   1.
    \ Human users are used to the concept and will expect it in\n       replacement
    systems (e.g., an overhead page announcement says\n       \"Joe pickup line 3\").\n
    \  2.  It is a useful structure for user interface representation.\n   The purpose
    of the appearance number is to identify active calls to\n   facilitate sharing
    between users (e.g., passing a call from one user\n   to another).  If a telephone
    has enough buttons/lamps, the appearance\n   number could be the positional sequence
    number of the button.  If\n   not, it may still be desirable to present the call
    state, but the\n   appearance number should be displayed so that users know which
    call,\n   for example, is on hold on which key.\n   In this document, except for
    the usage scenarios in the next section,\n   we will use the term \"appearance\"
    rather than \"line appearance\" since\n   SIP does not have the concept of lines.
    \ Note that this does not mean\n   that a conventional telephony user interface
    (lamps and buttons) must\n   be used: implementations may use another metaphor
    as long as the\n   appearance number is readily apparent to the user.  Each AOR
    has a\n   separate appearance numbering space.  As a result, a given UA user\n
    \  interface may have multiple occurrences of the same appearance\n   number,
    but they will be for different AORs.\n"
  title: 1.  Introduction
- contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\",
    \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
    \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described
    in RFC 2119 [RFC2119]\n   and indicate requirement levels for compliant mechanisms.\n"
  title: 2.  Conventions Used in This Document
- contents:
  - "3.  Usage Scenarios\n   The following examples are common applications of the
    shared\n   appearances feature and are mentioned here as informative use cases.\n
    \  All these example usages can be supported by the shared appearances\n   feature
    described in this document.  The main differences relate to\n   the user interface
    considerations of the device.\n"
  - contents:
    - "3.1.  Executive/Assistant Arrangement\n   The appearances on the executive's
      UA also appear on the assistant's\n   UA.  The assistant may answer incoming
      calls to the executive and\n   then place the call on hold for the executive
      to pick up.  The\n   assistant can always see the state of all calls on the
      executive's\n   UA.\n"
    title: 3.1.  Executive/Assistant Arrangement
  - contents:
    - "3.2.  Call Group\n   Users with similar business needs or tasks can be assigned
      to\n   specific groups and share an AOR.  For example, an IT department\n   staff
      of five might answer a help line that has three appearances on\n   each phone
      in the IT work area.  A call answered on one phone can be\n   put on hold and
      picked up on another phone.  A shout or an IM to\n   another staff member can
      result in them taking over a call on a\n   particular appearance.  Another phone
      can request to be added/joined/\n   bridged to an existing appearance resulting
      in a conference call.\n"
    title: 3.2.  Call Group
  - contents:
    - "3.3.  Single Line Extension\n   In this scenario, incoming calls are offered
      to a group of UAs.  When\n   one answers, the other UAs are informed.  If another
      UA in the group\n   seizes the line (i.e., goes off-hook), it is immediately
      bridged or\n   joined in with the call.  This mimics the way residential telephone\n
      \  extensions usually operate.\n"
    title: 3.3.  Single Line Extension
  - contents:
    - "3.4.  Changing UAs\n   A user is on a call on one UA and wishes to change devices
      and\n   continue the call on another UA.  They place the call on hold, note\n
      \  the appearance number of the call, then walk to another UA.  They are\n   able
      to identify the same appearance number on the other UA, pick up\n   the call,
      and continue the conversation.\n"
    title: 3.4.  Changing UAs
  title: 3.  Usage Scenarios
- contents:
  - "4.  Requirements and Implementation\n   The next section details the requirements
    and discusses the\n   implementation of the shared appearances feature.\n"
  - contents:
    - "4.1.  Requirements\n   The basic requirements of the shared appearances feature
      can be\n   summarized as follows:\n   REQ-1:   Incoming calls to the AOR must
      be offered to a group of UAs\n            and can be answered by any of them.\n
      \  REQ-2:   Each UA in the group must be able to learn the call status\n            of
      the others in the group for the purpose of rendering this\n            information
      to the user.\n   REQ-3:   A UA must be able to join (also called bridge or conference\n
      \           together) or pick up (take) an active call of another UA in\n            the
      group in a secure way.\n   REQ-4:   The mechanism should require the minimal
      amount of\n            configuration.  UAs registering against the group AOR
      should\n            be able to participate in the shared appearance group\n
      \           without manual configuration of group members.\n   REQ-5:   The
      mechanism must scale for large numbers of appearances\n            and large
      numbers of UAs without introducing excessive\n            messaging traffic.\n
      \  REQ-6:   Each call or session (incoming or outgoing) should be\n            assigned
      a common \"appearance\" number from a managed pool\n            administered
      for the AOR group.  Once the session has\n            terminated, the appearance
      number is released back into the\n            pool and can be reused by another
      incoming or outgoing\n            session.\n   REQ-7:   Each UA in the group
      must be able to learn the status of all\n            appearances of the group.\n
      \  REQ-8:   There must be mechanisms to resolve appearance contention\n            among
      the UAs in the group.  Contention in this context\n            means an appearance
      number being associated with multiple\n            dialogs that are not mixed
      or otherwise associated.\n   REQ-9:   The mechanism must allow all UAs receiving
      an incoming\n            session request to utilize the same appearance number
      at the\n            time of alerting.\n   REQ-10:  The mechanism must have a
      way of reconstructing appearance\n            state after an outage that does
      not result in excessive\n            traffic and processing.\n   REQ-11:  The
      mechanism must have backwards compatibility such that a\n            UA that
      is unaware of the feature can still register against\n            the group
      AOR and make and receive calls.\n   REQ-12:  The mechanism must not allow UAs
      outside the group to\n            select, seize, or manipulate appearance numbers.\n
      \  REQ-13:  For privacy reasons, there must be a mechanism so that\n            appearance
      information is not leaked outside the group of\n            UAs (e.g., \"So
      who do you have on line 1?\").\n   REQ-14:  The mechanism must support a way
      for UAs to request\n            exclusivity on a line appearance.  Exclusivity
      means that\n            the UA requesting it desires a private conversation
      with the\n            external party and other UAs must not be allowed to join
      or\n            take the call.  Exclusivity may be requested at the start of\n
      \           an incoming or outgoing session or during the session.  An\n            exclusivity
      request may be accepted or rejected by the\n            entity providing the
      shared appearance service.  Therefore,\n            the mechanism must provide
      a way of communicating the result\n            back to the requester UA.\n   REQ-15:
      \ The mechanism should support a way for a UA to seize a\n            particular
      appearance number for outgoing requests prior to\n            sending the actual
      request.  This is often called seizure.\n   REQ-16:  The mechanism should support
      a way for a UA to seize a\n            particular appearance number and also
      send the request at\n            the same time.  This is needed when an automatic
      ringdown\n            feature (a telephone configured to immediately dial a
      phone\n            number when it goes off-hook) is combined with shared\n            appearances.
      \ In this case, seizing the line is integrated\n            with dialing.\n"
    title: 4.1.  Requirements
  - contents:
    - "4.2.  Implementation\n   This section non-normatively discusses the implementation
      of the\n   shared appearances feature.  The normative description is in\n   Section
      5.  Many of the requirements for this service can be met\n   using standard
      SIP mechanisms such as:\n   o  A SIP Forking Proxy and Registrar/Location Service
      meets REQ-1.\n   o  The SIP Dialog Package meets REQ-2.\n   o  The combination
      of the SIP Replaces and Join header fields meets\n      REQ-3.\n   o  The use
      of a State Agent for the Dialog Package meets REQ-4 and\n      REQ-5.\n   REQ-6
      suggests the need for an entity that manages the appearance\n   resource.  Just
      as conferencing systems commonly have a single point\n   of control, known as
      a focus, a shared appearance group has a single\n   point of control of the
      appearance shared resource.  This is defined\n   as an Appearance Agent for
      a group.  While an Appearance Agent can be\n   part of a centralized server,
      it could also be co-resident in a\n   member UA that has taken on this functionality
      for a group.  The\n   Appearance Agent knows or is able to determine the dialog
      state of\n   all members of the group.\n   While the appearance resource could
      be managed cooperatively by a\n   group of UAs without any central control,
      this is outside the scope\n   of this document.  It is also possible that the
      Appearance Agent\n   logic could be distributed in all UAs in the group.  For
      example,\n   rules that govern assigning appearance numbers for incoming requests\n
      \  (e.g., lowest available appearance number) and rules for contention\n   handling
      (e.g., when two UAs request the use of the same appearance\n   number, hash
      dialog identifiers and compare with the lowest hash\n   winning) would need
      to be defined and implemented.\n   To best meet REQ-9, the appearance number
      for an incoming INVITE\n   needs to be contained in the INVITE, in addition
      to being delivered\n   in the dialog package NOTIFY.  Otherwise, if the NOTIFY
      is delayed or\n   lost, a UA in the group might receive an incoming INVITE but
      might\n   not know which appearance number to render during alerting.\n   This
      specification defines an extension parameter, which is\n   normatively defined
      in Section 7, for the Alert-Info header field in\n   RFC 3261 to carry the appearance
      number:\n   Alert-Info: <urn:alert:service:normal>;appearance=1\n   The following
      list describes the operation of the shared appearances\n   feature.\n   1.  A
      UA is configured with the AOR of a shared appearance group.  It\n       registers
      against the AOR, then attempts a dialog state\n       subscription to the AOR.
      \ If the subscription fails, loops back\n       to itself, or returns an error,
      it knows there is no State Agent\n       and, hence, no Appearance Agent and
      this feature is not\n       implemented.\n   2.  If the subscription receives
      a 200 OK, the UA knows there is a\n       State Agent and that the feature is
      implemented.  The UA then\n       follows the steps in this list.\n   3.  Information
      learned about the dialog state of other UAs in the\n       group is rendered
      to the user.\n   4.  Incoming calls are forked to all UAs in the group, and
      any may\n       answer.  UAs receive the appearance number to use in rendering\n
      \      the incoming call in a NOTIFY from the Appearance Agent and in\n       the
      INVITE itself.  The UA will also receive a notification if\n       the call
      is answered by another UA in the group so this\n       information can be rendered
      to the user.\n   5.  For outgoing calls, the operation depends on the implementation.\n
      \      If the user seizes a particular appearance number for the call,\n       the
      UA publishes the trying state dialog information with the\n       desired appearance
      number and waits for a 2xx response before\n       sending the INVITE.\n   6.
      \ For outgoing calls, if the user does not seize a particular\n       appearance
      or does not care, the INVITE can be sent immediately,\n       and the appearance
      number learned as the call progresses from a\n       notification from the Appearance
      Agent.\n   7.  For outgoing calls, if the user does not want an appearance\n
      \      number assigned (such as during a consultation call or if a UA is\n       fetching
      'service media' such as music on hold [RFC7088]), the UA\n       also publishes
      prior to sending the INVITE but does not include\n       an appearance number
      in the publication.\n   8.  Established calls within the group may be joined
      (bridged) or\n       taken (picked) by another UA.  Information in the dialog
      package\n       notifications can be used to construct Join or Replaces header\n
      \      fields.  Since the same appearance number is used for these types\n       of
      operations, this information is published prior to sending the\n       INVITE
      Join or INVITE Replaces.\n   9.  The Appearance Agent may not have direct access
      to the complete\n       dialog state of some or all of the UAs in the group.
      \ If this is\n       the case, the Appearance Agent will subscribe to the dialog
      state\n       of individual UAs in the group to obtain this information.  In\n
      \      any case, the Appearance Agent will send normal notifications\n       (via
      the subscriptions established by the UAs in step 1) every\n       time the aggregate
      dialog state of the AOR changes, including\n       when calls are placed, answered,
      placed on and off hold, and hung\n       up.\n"
    title: 4.2.  Implementation
  title: 4.  Requirements and Implementation
- contents:
  - "5.  Normative Description\n   This section normatively describes the shared appearances
    feature\n   extensions.  The following definitions are used throughout this\n
    \  document:\n   Appearance number:  An appearance number is a positive integer\n
    \     associated with one or more dialogs of an AOR.  Appearance numbers\n      are
    managed by an Appearance Agent and displayed and rendered to\n      the user by
    UAs that support this specification.  When an\n      appearance number is assigned
    or requested, generally the assigned\n      number is the smallest positive integer
    that is not currently\n      assigned as an appearance number to a dialog for
    this AOR.  This\n      specification does not define an upper limit on appearance\n
    \     numbers; however, using appearance numbers that are not easily\n      represented
    using common integer representations is likely to\n      cause failures.\n   Seizing:
    \ An appearance can be reserved prior to a call being placed\n      by seizing
    the appearance.  An appearance can be seized by\n      communicating an artificial
    state of \"trying\" prior to actually\n      initiating a dialog (i.e., sending
    the INVITE), in order to appear\n      as if it were already initiating a dialog.\n
    \  Selecting (or Not-Seizing):  An appearance is merely selected (i.e.,\n      not
    seized) if there is no such communication of artificial state\n      of \"trying\"
    prior to initiating a dialog: i.e., the state is\n      communicated when the
    dialog is actually initiated.  The\n      appearance number is learned after the
    INVITE is sent.\n"
  - contents:
    - "5.1.  Elements\n   A complete system to implement this feature consists of:\n
      \  1.  UAs that support publications, subscriptions, and notifications\n       for
      the SIP dialog event package and the shared appearance dialog\n       package
      extensions and behavior.\n   2.  An Appearance Agent consisting of a State Agent
      for the dialog\n       event package that implements an Event State Compositor
      (ESC) and\n       the shared appearance dialog package extensions and behavior.\n
      \      The Appearance Agent also has logic for assigning and releasing\n       appearance
      numbers and resolving appearance number contention.\n   3.  A forking proxy
      server that can communicate with the State Agent.\n   4.  A registrar that supports
      the registration event package.\n   The behavior of these elements is described
      normatively in the\n   following sections after the definitions of the dialog
      package\n   extensions.\n"
    title: 5.1.  Elements
  - contents:
    - "5.2.  Shared Appearance Dialog Package Extensions\n   This specification defines
      four new elements as extensions to the SIP\n   Dialog Event package [RFC4235].
      \ The schema is defined in Section 6.\n   The elements are <appearance>, <exclusive>,
      <joined-dialog>, and\n   <replaced-dialog>, which are sub-elements of the <dialog>
      element.\n"
    - contents:
      - "5.2.1.  The <appearance> Element\n   The <appearance> element, a child of
        the <dialog> element, is used to\n   convey the appearance number of the dialog
        described by the parent\n   <dialog> element.  When sent by a UA in a PUBLISH
        with parent\n   <dialog> with state attribute \"trying\" to the Appearance
        Agent, the\n   UA is requesting assignment of the given appearance number
        to the\n   current or future dialog with the given dialog identifiers.  When
        an\n   <appearance> element is sent by the Appearance Agent in a NOTIFY, it\n
        \  indicates that the appearance number has been assigned to the\n   specified
        dialog.\n   Note that a <dialog-info> element describes the contained dialogs\n
        \  from the point of view of the UA (named by the \"entity\" attribute),\n
        \  regardless of whether the containing request is sent by the UA or the\n
        \  Appearance Agent.  In particular, if the UA sent a request within the\n
        \  described dialog, the To header field URI would match the <remote>\n   <identity>
        value and the to-tag parameter would match the remote-tag\n   attribute.  Similarly,
        the From header field URI would match the\n   <local> <identity> value and
        the from-tag parameter would match the\n   local-tag attribute.\n"
      title: 5.2.1.  The <appearance> Element
    - contents:
      - "5.2.2.  The <exclusive> Element\n   The <exclusive> element, a child of the
        <dialog> element, is a\n   boolean, which, when true, indicates that the UA
        is not willing to\n   accept an INVITE with a Join or Replaces header field
        targeted to the\n   dialog described by the <dialog> element that is the parent
        of the\n   <exclusive> element.  For example, some shared appearance systems\n
        \  only allow call pickup when the call is on hold.  In this case, the\n   <exclusive>
        element should be set to \"false\" when the call is held\n   and \"true\"
        when the call is not held, rather than having the\n   \"exclusive\" value
        implied by the hold state.\n   It is important to note that this element is
        a hint.  In order to\n   prevent another UA from taking or joining a call,
        a UA can, in\n   addition to setting the <exclusive> tag, not report full
        dialog\n   information to the Appearance Agent.  Not having the full dialog\n
        \  information (Call-ID, remote-tag, and local-tag) prevents another UA\n
        \  from constructing a Join or Replaces header field.  Although a UA may\n
        \  set <exclusive> to \"true\", the UA must still be ready to reject an\n
        \  INVITE Join relating to this dialog.  If these dialog identifiers\n   have
        already been shared with the Appearance Agent, the UA could send\n   an INVITE
        Replaces to change them and then not report the new ones to\n   the Appearance
        Agent.\n   If the proxy knows which dialogs are marked exclusive, the proxy
        MAY\n   enforce this exclusivity by rejecting INVITE Join and INVITE Replaces\n
        \  requests containing those dialog identifiers with a 403 (Forbidden)\n   response.\n
        \     Note that exclusivity has nothing to do with appearance number\n      selection
        or seizing -- instead, it is about call control\n      operations that can
        be performed on a dialog.\n   If the <exclusive> element is not present, it
        is assumed to be false.\n"
      title: 5.2.2.  The <exclusive> Element
    - contents:
      - "5.2.3.  The <joined-dialog> Element\n   The <joined-dialog> element, a child
        of the <dialog> element, is used\n   to convey dialog identifiers of any other
        dialogs that are joined\n   (mixed or bridged) with the dialog.  Only the
        UA that is the common\n   endpoint of the mixed dialogs (and thus controlling
        the mixing\n   operation) should include this element in publications to the\n
        \  Appearance Agent.  Note that this element should still be used even\n   when
        the Join header field was not used to join the dialogs.  For\n   example,
        two separate dialogs on a UA could be joined without any SIP\n   call control
        operations.  Joined dialogs will share the same\n   appearance number.\n   If
        the <joined-dialog> element is not present, it is assumed that the\n   dialog
        is not joined or to be joined to any other dialog.\n"
      title: 5.2.3.  The <joined-dialog> Element
    - contents:
      - "5.2.4.  The <replaced-dialog> Element\n   The <replaced-dialog> element,
        a child of the <dialog> element, is\n   used to convey dialog identifiers
        of any other dialogs that will be\n   or have been replaced with this dialog.
        \ For example, a UA in the\n   group picking up a call on another UA by sending
        an INVITE with\n   Replaces would include this element for the replacing dialog.\n
        \  Replaced dialogs will share the same appearance number.\n   If the <replaced-dialog>
        element is not present, it is assumed that\n   the dialog has not replaced
        or is not to replace to any other dialog.\n"
      title: 5.2.4.  The <replaced-dialog> Element
    title: 5.2.  Shared Appearance Dialog Package Extensions
  - contents:
    - "5.3.  Shared Appearance User Agents\n   UAs that support the shared appearances
      feature use the dialog state\n   package [RFC4235] with the shared appearance
      extensions and the\n   'shared' Event header field parameter defined in Section
      13.\n   UAs use the dialog package extensions in Section 5.2 along with\n   SUBSCRIBE
      [RFC6665], NOTIFY [RFC6665], and PUBLISH [RFC3903].\n   SUBSCRIBE, NOTIFY, and
      PUBLISH requests for the dialog event package\n   include the 'shared' Event
      header field parameter as required by this\n   specification.\n      The presence
      of the 'shared' Event header field parameter tells\n      the Appearance Agent
      that the UA supports this specification.\n   Upon initialization, the UA MUST
      subscribe to the dialog event\n   package of the AOR and refresh the subscription
      per the SIP Events\n   Framework [RFC6665].  If the SUBSCRIBE request fails,
      then no\n   Appearance Agent may be present and this feature is not active for\n
      \  this AOR.  The UA MAY periodically retry the subscription to see if\n   conditions
      have changed at intervals no shorter than four hours.\n      Four hours was
      chosen to limit the subscription test to six per\n      day per UA.  Increasing
      this interval would reduce this failure\n      traffic but take longer for a
      newly activated Appearance Agent to\n      be discovered.\n   UAs can also use
      the presence of the 'shared' Event header field\n   parameter in NOTIFYs to
      discover the presence of an Appearance Agent\n   for the AOR.\n   UAs that implement
      the shared appearances feature, call pickup,\n   joining, and bridging MUST
      support sending an INVITE with Replaces\n   [RFC3891]  or Join [RFC3911].  The
      User Agent Client (UAC) needs to\n   include the to-tag and from-tag information
      in the Replaces or Join\n   header so that the correct dialog will be matched
      by the User Agent\n   Server (UAS) per the rules in RFCs 3891 and 3911.\n   All
      UAs that implement the shared appearances feature and support\n   INVITE MUST
      support receiving an INVITE with a Replaces [RFC3891] or\n   a Join [RFC3911]
      header field.\n   When publishing or notifying dialog package information, a
      UA\n   includes the largest set of dialog identification available at the\n
      \  time of publication, with the exception that a UA may omit\n   information
      if it wishes to prevent other UAs from joining or picking\n   up a call.  Dialog
      identification includes local and remote target\n   URIs, call-id, to-tag, and
      from-tag.  While this dialog\n   identification information is optional in [RFC4235],
      it is essential\n   in the shared appearances feature, allowing call control
      operations.\n   When placing calls on hold, use the \"+sip.rendering=no\" feature
      tag\n   to indicate this in dialog package notifications.  Using the full SDP\n
      \  session description instead forces the endpoint to do a lot of extra\n   parsing,
      unnecessarily complicating the code and inviting errors.\n      The accurate
      rendering of the idle/active/alerting/hold state of\n      other UAs in the
      group is an important part of the shared\n      appearances feature.\n   A UA
      that does not need to seize a particular appearance number (or\n   doesn't care)
      would just send an INVITE as normal to place an\n   outbound call.\n   If the
      call is an emergency call, a UA MUST never wait for a\n   confirmed seizure
      before sending an INVITE.  Instead, the emergency\n   call MUST proceed without
      waiting for the PUBLISH transaction.\n   If a UA requires a particular appearance
      number, the a UA MUST send a\n   dialog package PUBLISH request and wait for
      a 2xx response before\n   sending the INVITE.  This is required in the following
      situations:\n   1.  When the user seizes a particular appearance number for
      an\n       outgoing call (e.g., seizing the appearance and going \"off-hook\",\n
      \      if the UA's user interface uses this metaphor).\n   2.  When the user
      has requested that an appearance number not be used\n       for an outgoing
      call (i.e., during a consultation call, a\n       'service media' call such
      as for music on hold [RFC7088], or for\n       a call not considered part of
      the shared appearance group).\n   3.  When the user has selected to join (or
      bridge) an existing call.\n   4.  When the user has selected to replace (or
      take) an existing call.\n   Note that when a UA seizes an appearance prior to
      establishment of a\n   dialog (numbers 1 and 2 in the above list), not all dialog\n
      \  information will be available.  In particular, when a UA publishes an\n   attempt
      to seize an appearance prior to knowing the destination URI,\n   minimal or
      no dialog information may be available.  For example, in\n   some cases, only
      the local target URI for the call will be known: not\n   any dialog information.
      \ If the From tag and Call-ID were not present\n   in the initial PUBLISH, a
      new PUBLISH MUST be sent as soon as this\n   information is available.\n      The
      first publication will cause the Appearance Agent to reserve\n      the appearance
      number for this UA.  If the publication does not\n      have any dialog identifiers
      (e.g., Call-ID or local-tag), the\n      Appearance Agent cannot assign the
      appearance number to a\n      particular dialog of the UA until the second publication,
      which\n      will contain some dialog identifiers.\n   This publication state
      is refreshed as described in [RFC3903] during\n   the early dialog state or
      the Appearance Agent may reassign the\n   appearance number.  Once the dialog
      has transitioned to the confirmed\n   state, no publication refreshes are necessary.\n
      \     This specification assumes that the Appearance Agent has other\n      means
      besides UA publication to learn about the state of UA\n      dialogs.  In this
      specification, PUBLISH is used to indicate\n      desired and intended appearance
      number operations.  Once a dialog\n      transitions from early to confirmed,
      this role is over; hence, no\n      publication refreshes are needed.\n   Appearance
      numbers are a shorthand label for active and pending\n   dialogs related to
      an AOR.  Many of the features and services built\n   using this extension rely
      on the correct rendering of this\n   information to the human user.  In addition,
      the group nature of the\n   feature means that the rendering must be similar
      between different\n   vendors and different models.  Failure to do so will greatly
      reduce\n   the value and usefulness of these protocol extensions.  In a\n   correctly
      designed user interface for this feature, the appearances\n   number for each
      active and pending dialog is explicitly (i.e., by\n   appearance number) or
      implicitly (using a user interface metaphor\n   that makes the numbering and
      ordering clear to the user) rendered to\n   the user.  The far-end identity
      of each dialog (e.g., the remote\n   party identity) is not a useful replacement
      for the appearance\n   number.  The state of each appearance is also to be rendered
      (idle,\n   active, busy, joined, etc.).  UAs can tell that a set of dialogs
      are\n   joined (bridged or mixed) together by the presence of one or more\n
      \  <joined-dialog> elements containing other SIP dialog identifiers.\n   Appearance
      numbers of dialogs can be learned by dialog package\n   notifications containing
      the <appearance> element from the Appearance\n   Agent or from the 'appearance'
      Alert-Info parameter in an incoming\n   INVITE.  Should they conflict, the dialog
      package notification takes\n   precedence.\n   A user may select an appearance
      number but then abandon placing a\n   call (go back on-hook).  In this case,
      the UA frees up the appearance\n   number by removing the event state with a
      PUBLISH as described in\n   [RFC3903].  A failure to do this will require unnecessary
      operations\n   by the Appearance Agent and tie up appearance numbers that could\n
      \  otherwise be used by other UAs in the shared appearance group.\n   A UA SHOULD
      register against the AOR only if it is likely the UA will\n   be answering incoming
      calls.  If the UA is mainly going to be\n   monitoring the status of the shared
      appearance group calls and\n   picking or joining calls, the UA SHOULD only
      subscribe to the AOR and\n   not register against the AOR.  If a monitoring
      UA registers rather\n   than just subscribing, it generates large amounts of
      unnecessary\n   network traffic.\n      All subscribed UAs will receive dialog
      package NOTIFYs of trying\n      state for incoming INVITEs.\n   A UA MUST NOT
      insert an 'appearance' parameter into an Alert-Info\n   header field in an INVITE
      or other request.\n      The Appearance Agent is solely responsible for doing
      this.\n"
    - contents:
      - "5.3.1.  Appearance Numbers and Call Context\n   There are cases where two
        separate dialogs at a UA are not mixed but\n   share the same 'context'.  That
        is, they relate to each other and\n   should not be treated the same as any
        other two dialogs within the\n   group.  One example of this is a 'consultation
        call' where a user\n   puts an existing dialog on hold, then calls another
        user, before\n   switching back to the original dialog.  Another case, described\n
        \  below, occurs during transfer operations, where for a transient\n   period,
        a UA is involved in dialogs with two other UAs, but the\n   dialogs are related,
        and should not be treated as independent\n   dialogs.  These cases are best
        handled by not assigning an appearance\n   number to a newly created dialog
        when it shares a context with an\n   existing dialog.  But if the preexisting
        dialog is terminated, its\n   appearance number should be reassigned to the
        newly created dialog.\n   A UA that wants to place a call but does not have
        an appearance\n   number assigned sends a PUBLISH before sending the INVITE.
        \ The\n   PUBLISH does not have an 'appearance' element present, but it does\n
        \  have the 'shared' Event header field parameter present.  If the\n   Appearance
        Agent policy does not allow calls without an assigned\n   appearance number,
        a 400 (Bad Request) response is sent by the\n   Appearance Agent and the UA
        will republish either selecting/seizing\n   an appearance number or send the
        INVITE without publishing, in which\n   case the Appearance Agent will assign
        one.\n      Note that if an Appearance Agent rejects calls without an\n      appearance
        number, certain operations such as consultation calls,\n      transfer, and
        music on hold may be negatively impacted.\n"
      title: 5.3.1.  Appearance Numbers and Call Context
    - contents:
      - "5.3.2.  Appearance Numbers and Call Control\n   When an INVITE is generated
        to attempt to bridge or take a call\n   (i.e., contains Join or Replaces with
        a dialog identifier of another\n   dialog in the shared appearance group),
        the UA MUST first send a\n   PUBLISH to the Appearance Agent.  This PUBLISH
        will contain:\n   1.  The appearance number of the joined or replaced call
        in the\n       <appearance> element\n   2.  The dialog information from the
        Join header field in the <joined-\n       dialog> element, if the dialog is
        being joined\n   3.  The dialog information from the Replaces header field
        in the\n       <replaced-dialog> element, if the dialog is being replaced\n
        \     Note that this information is provided to the Appearance Agent so\n
        \     that it can provide proper appearance assignment behavior.  If the\n
        \     INVITE Join or Replaces was sent without publishing first, the\n      Appearance
        Agent might assign a new appearance number to this\n      INVITE, which would
        be a mistake.  With Join, the publication has\n      the <joined-dialog> element
        to prevent the Appearance Agent from\n      generating a 400 (Bad Request)
        response due to the reuse of an\n      appearance number.  For Replaces, the
        purpose of the <replaced-\n      dialog> is to prevent a race condition where
        the BYE could cause\n      the appearance number to be released when it should
        stay with the\n      replacing dialog.\n"
      title: 5.3.2.  Appearance Numbers and Call Control
    - contents:
      - "5.3.3.  Appearance Numbers and Transfer\n   During a transfer operation,
        it is important that the appearance\n   number not change during the operation.
        \ Consider the example of\n   Alice, a member of a shared appearance group,
        who is talking to\n   Carol, who is outside the shared appearance group.  Carol
        transfers\n   Alice to David, who is also outside the shared appearance group.
        \ For\n   example, if Alice is using appearance 3 for the session with Carol,\n
        \  the resulting session with David should also use appearance number 3.\n
        \  Otherwise, an appearance number change can cause a \"jump\" on the UI\n
        \  and confusion to the user.  There are two possible scenarios using\n   the
        terminology of RFC 5589: Alice is the transferee in any type of\n   transfer
        (receives the REFER) or the transfer target in an attended\n   transfer (receives
        the INVITE with Replaces).\n   If Alice is the transferee, the triggered INVITE
        from the REFER is\n   treated as a consultation call.  Alice SHOULD publish
        requesting that\n   the Appearance Agent not assign an appearance number for
        this INVITE.\n   When the transfer completes, Alice SHOULD publish again to
        move the\n   appearance number from the dialog with Carol to the dialog with\n
        \  David.  If a PUBLISH is sent to move the appearance number, the\n   publication
        MUST be sent prior to sending the BYE to Carol to avoid a\n   race condition
        where the Appearance Agent reassigns the appearance\n   number after seeing
        the BYE.\n   If Alice is the target, the incoming INVITE will contain a Replaces\n
        \  header field.  As a result, the Appearance Agent will have reused the\n
        \  appearance number of the dialog with Carol, and this appearance\n   number
        will continue to be used after the dialog with Carol has been\n   terminated.\n"
      title: 5.3.3.  Appearance Numbers and Transfer
    title: 5.3.  Shared Appearance User Agents
  - contents:
    - "5.4.  Appearance Agent\n   An Appearance Agent defined in this specification
      MUST implement a\n   dialog package state agent for the UAs registered against
      the AOR.\n   The Appearance Agent MUST support the appearance dialog package\n
      \  extensions defined in Section 5.2 and use the 'shared' Event header\n   field
      parameter.  The Appearance Agent MUST support publications and\n   subscriptions
      for this event package.\n   The Appearance Agent MUST have a way of discovering
      the state of all\n   dialogs associated with the AOR.  If this information is
      not\n   available from a call stateful proxy or Back-to-Back User Agent\n   (B2BUA),
      the Appearance Agent can use the registration event package\n   [RFC3680] to
      learn of UAs associated with the AOR and subscribe to\n   their dialog event
      state.  An Appearance Agent can also subscribe to\n   a UA's dialog event state
      in order to reconstruct state.  As a\n   result, the registrar MUST support
      the registration event package.\n   Dialog package notifications are recommended
      by RFC 4235 to \"only\n   contain information on the dialogs whose state or
      participation\n   information has changed.\"  This specification extends RFC
      4235 as\n   follows.  The Appearance Agent SHOULD send dialog event state\n
      \  notifications whenever the following events happen to UAs in the AOR\n   group:\n
      \  1.  A call is received, placed, answered, or terminated.\n   2.  A call is
      placed on or off hold.\n   3.  A call is joined or replaced.\n   4.  An appearance
      number is reserved or released.\n   The Appearance Agent MUST allocate an appearance
      number for all\n   incoming calls and send immediate notifications to the UAs
      subscribed\n   to the shared group AOR.  A new appearance number is allocated
      except\n   for an incoming INVITE with a Join or Replaces header field.  For\n
      \  this case, the appearance number should match the appearance number\n   of
      the dialog being joined or replaced.  If the INVITE Replaces or\n   Join comes
      from outside the shared appearance group, the Appearance\n   Agent will include
      a <joined-dialog> or <replaced-dialog> element in\n   the NOTIFY containing
      the dialog information from the Replaces or\n   Joined header field.\n   The
      Appearance Agent MUST be able to communicate with the forking\n   proxy to learn
      about incoming calls and also to pass the appearance\n   number to the proxy
      or ensure the Alert-Info header field is included\n   in the INVITE with the
      appropriate appearance number.\n      Note that UAs need to be able to handle
      incoming INVITEs without\n      an appearance number assigned.  This could be
      caused by a failure\n      of the Appearance Agent or other error condition.
      \ Although the\n      proper rendering of the INVITE may not be possible, this
      is better\n      than ignoring or failing the INVITE.\n   An Appearance Agent
      SHOULD assign an appearance number to an outgoing\n   dialog if a PUBLISH has
      not been received selecting/seizing a\n   particular appearance number.\n      Note
      that if the shared appearance group has appearance-unaware\n      UAs making
      calls, the Appearance Agent will still allocate\n      appearance numbers for
      INVITEs sent by those UAs.\n   An Appearance Agent receiving a PUBLISH with
      an appearance number\n   checks to make sure the publication is valid.  An appearance
      number\n   can be assigned to only one dialog unless there is a <joined-dialog>\n
      \  or <replaced-dialog> element indicating that the dialog will be/has\n   been
      replaced or joined.  A 400 (Bad Request) response is returned if\n   the chosen
      appearance number is invalid, and an immediate NOTIFY\n   SHOULD be sent to
      the UA containing full dialog event state.\n   An Appearance Agent receiving
      a PUBLISH without an appearance number\n   but with the 'shared' Event header
      field parameter present interprets\n   this as a request by the UA to not assign
      an appearance number.  If\n   the Appearance Agent policy does not allow this,
      a 400 (Bad Request)\n   response is returned.  If policy does allow this, a
      200 (OK) response\n   is returned and no appearance number is allocated.  An
      Appearance\n   Agent does not have to share this dialog information (i.e., send
      a\n   NOTIFY) with other UAs in the group as the information will not be\n   rendered
      by the other UAs.\n   The Appearance Agent allocates an appearance number to
      a dialog from\n   the time the appearance is requested via a PUBLISH or from
      the\n   receipt of an INVITE to the time when the last dialog associated with\n
      \  the appearance is terminated, including all dialogs that are joined\n   or
      replaced.  During the early dialog state, the Appearance Agent\n   controls
      the rate of dialog state publication using the Expires\n   header field in 200
      (OK) responses to PUBLISH requests.  An interval\n   of 3 minutes is RECOMMENDED.
      \ After the dialog associated with the\n   publication has been confirmed, the
      expiration of the publication\n   state has no effect on the appearance allocation.
      \ If the publication\n   contains no dialog state information, the Appearance
      Agent MUST\n   reserve the appearance number for the UA but cannot assign the\n
      \  appearance to any particular dialog of the UA.  When the publication\n   state
      is updated with any dialog information, the appearance number\n   can then be
      assigned to the particular dialog.  A UA that has been\n   allocated an appearance
      number using a PUBLISH MAY free up the\n   appearance number by removing the
      event state with a PUBLISH as\n   described in [RFC3903].\n   If an INVITE is
      sent by a member of the group to the shared AOR\n   (i.e., they call their own
      AOR), the Appearance Agent MUST assign two\n   appearance numbers.  The first
      appearance number will be the one\n   selected or assigned to the outgoing INVITE.
      \ The second appearance\n   number will be another one assigned by the Appearance
      Agent for the\n   INVITE as it is forked back to the members of the group.\n
      \     The is to preserve a common behavior in legacy systems.\n   If an INVITE
      is sent by a member of the group using the shared AOR or\n   sent to the shared
      AOR and no appearance number is available, the\n   proxy MAY reject the INVITE
      with a 403 (Forbidden) response code.\n   Appearance numbers are only used for
      dialogs in which one or more UAs\n   associated with the group AOR are participants.
      \ If an incoming\n   INVITE to the group AOR is forwarded to another AOR, the
      appearance\n   number is immediately freed up and can be assigned to another
      dialog.\n"
    title: 5.4.  Appearance Agent
  title: 5.  Normative Description
- contents:
  - "6.  XML Schema Definition\n   The 'appearance', 'joined-dialog', 'replaced-dialog',
    and 'exclusive'\n   elements are defined within a new XML namespace URI.  This
    namespace\n   is \"urn:ietf:params:xml:ns:sa-dialog-info\".  The schema for these\n
    \  elements is:\n   <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n     <xs:schema\n
    \      targetNamespace=\"urn:ietf:params:xml:ns:sa-dialog-info\"\n       xmlns=\"urn:ietf:params:xml:ns:sa-dialog-info\"\n
    \      xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n       elementFormDefault=\"qualified\">\n
    \     <xs:element name=\"joined-dialog\" minOccurs=\"0\"\n                                            maxOccurs=\"unbounded\">\n
    \          <xs:complexType>\n               <xs:attribute name=\"call-id\" type=\"xs:string\"\n
    \                use=\"mandatory\"/>\n               <xs:attribute name=\"local-tag\"
    type=\"xs:string\"\n                 use=\"mandatory\"/>\n               <xs:attribute
    name=\"remote-tag\" type=\"xs:string\"\n                 use=\"mandatory\"/>\n
    \          </xs:complexType>\n      </xs:element>\n      <xs:element name=\"replaced-dialog\"
    minOccurs=\"0\"\n                                             maxOccurs=\"unbounded\">\n
    \          <xs:complexType>\n               <xs:attribute name=\"call-id\" type=\"xs:string\"\n
    \                use=\"mandatory\"/>\n               <xs:attribute name=\"local-tag\"
    type=\"xs:string\"\n                 use=\"mandatory\"/>\n               <xs:attribute
    name=\"remote-tag\" type=\"xs:string\"\n                 use=\"mandatory\"/>\n
    \          </xs:complexType>\n       </xs:element>\n       <xs:element name=\"appearance\"
    minOccurs=\"0\" maxOccurs=\"1\">\n           <xs:simpleType type=\"xs:integer\">\n
    \          </xs:simpleType>\n       </xs:element>\n       <xs:element name=\"exclusive\"
    minOccurs=\"0\" maxOccurs=\"1\">\n           <xs:simpleType type=\"xs:boolean\">\n
    \          </xs:simpleType>\n       </xs:element>\n   </xs:schema>\n"
  title: 6.  XML Schema Definition
- contents:
  - "7.  Alert-Info Appearance Parameter Definition\n   This specification extends
    [RFC3261] to add an 'appearance' parameter\n   to the Alert-Info header field
    and also to allow proxies to modify or\n   delete the Alert-Info header field.\n
    \  The changes to the ABNF [RFC5234] in RFC 3261 are:\n        alert-param      =
    \ LAQUOT absoluteURI RAQUOT *( SEMI\n                              (generic-param
    / appearance-param) )\n        appearance-param = \"appearance\" EQUAL 1*DIGIT\n
    \  A proxy inserting an 'appearance' Alert-Info parameter follows normal\n   Alert-Info
    policies.  To indicate the appearance number for this\n   dialog, the proxy adds
    the Alert-Info header field with the\n   'appearance' parameter to the INVITE.
    \ If an Alert-Info is already\n   present, the proxy adds the 'appearance' parameter
    to the Alert-Info\n   header field.  If an appearance number parameter is already
    present\n   (associated with another AOR or by mistake), the value is rewritten\n
    \  adding the new appearance number.  There MUST NOT be more than one\n   appearance
    parameter in an Alert-Info header field.\n   If no special ringtone is desired,
    a normal ringtone SHOULD be\n   indicated using the urn:alert:service:normal in
    the Alert-Info, as\n   per [RFC7462].  The appearance number present in an Alert-Info
    header\n   field SHOULD be rendered by the UA to the user, following the\n   guidelines
    in Section 5.3.  If the INVITE is forwarded to another\n   AOR, the appearance
    parameter in the Alert-Info SHOULD be removed\n   before forwarding outside the
    group.\n   The determination as to what value to use in the appearance parameter\n
    \  can be done at the proxy that forks the incoming request to all the\n   registered
    UAs.\n      There is a variety of ways the proxy can determine what value it\n
    \     should use to populate this parameter.  For example, the proxy\n      could
    fetch this information by initiating a SUBSCRIBE request\n      with Expires:
    0 to the Appearance Agent for the AOR to fetch the\n      list of lines that are
    in use.  Alternatively, it could act like a\n      UA that is a part of the shared
    appearance group and SUBSCRIBE to\n      the State-Agent like any other UA.  This
    would ensure that the\n      active dialog information is available without having
    to poll on a\n      need basis.  It could keep track of the list of active calls
    for\n      the appearance AOR based on how many unique INVITE requests it has\n
    \     forked to or received from the appearance AOR.  Another approach\n      would
    be for the Proxy to first send the incoming INVITE to the\n      Appearance Agent,
    which would redirect to the shared appearance\n      group URI and escape the
    proper Alert-Info header field for the\n      Proxy to recurse and distribute
    to the other UAs in the group.\n      The Appearance Agent needs to know about
    all incoming requests to\n      the AOR in order to seize the appearance number.
    \ One way in which\n      this could be done is for the Appearance Agent to register
    against\n      the AOR with a higher q value.  This will result in the INVITE\n
    \     being sent to the Appearance Agent first, then being offered to\n      the
    UAs in the group.\n"
  title: 7.  Alert-Info Appearance Parameter Definition
- contents:
  - "8.  User Interface Considerations\n   The appearance number allocated to a call
    is an important concept\n   that enables calls to be handled by multiple devices
    with\n   heterogeneous user interfaces in a manner that still allows users to\n
    \  see a consistent model.  Careful treatment of the appearance number\n   is
    essential to meet the expectations of the users.  Also, rendering\n   the correct
    call/appearance state to users is also important.\n"
  - contents:
    - "8.1.  Appearance Number Rendering\n   Since different UAs have different user
      interface capabilities, it is\n   usual to find that some UAs have restrictions
      that others do not.\n   Perfect interoperability across all UAs is clearly not
      possible, but\n   by careful design, interoperability up to the limits of each
      UA can\n   be achieved.\n   The following guidelines suggest how the appearance
      number should be\n   handled in three typical user interface implementations.\n"
    - contents:
      - "8.1.1.  Single Appearance UAs\n   These devices are constrained by only having
        the capability of\n   displaying status indications for a single appearance.
        \ The UA SHOULD\n   still send messages annotated with appearance number \"1\".
        \ Any call\n   indications for appearances other than for number \"1\" SHOULD
        be\n   rejected with a 480 (Temporarily Unavailable) or 486 (Busy Here)\n
        \  response.  Note that this means that a single appearance UA cannot\n   answer
        its own call to the shared AOR, since this call would use a\n   second appearance
        number.\n"
      title: 8.1.1.  Single Appearance UAs
    - contents:
      - "8.1.2.  Dual Appearance UAs\n   These devices are essentially single appearance
        phones that implement\n   call waiting.  They have a very simple user interface
        that allows\n   them to switch between two appearances (toggle or flash hook)
        and\n   perhaps audible tones to indicate the status of the other appearance.\n
        \  Only appearance numbers \"1\" and \"2\" will be used by these UAs.\n"
      title: 8.1.2.  Dual Appearance UAs
    - contents:
      - "8.1.3.  Shared Appearance UAs with Fixed Appearance Number\n   This UA is
        the typical 'business-class' hard-phone.  A number of\n   appearances are
        typically configured statically and labeled on\n   buttons, and calls may
        be managed using these configured appearances.\n   Any calls outside this
        range should be rejected, and not mapped to a\n   free button.  Users of these
        devices often seize specific appearance\n   numbers for outgoing calls, and
        the UA will need to seize the\n   appearance number and wait for confirmation
        from the Appearance Agent\n   before proceeding with calls.\n"
      title: 8.1.3.  Shared Appearance UAs with Fixed Appearance Number
    - contents:
      - "8.1.4.  Shared Appearance UAs with Variable Appearance Numbers\n   This UA
        is typically a soft-phone or graphically rich user interface\n   hard-phone.
        \ In these cases, even the idea of an appearance index may\n   seem unnecessary.
        \ However, for these phones to be able to interwork\n   successfully with
        other phone types, it is important that they still\n   use the appearance
        index to govern the order of appearance of calls\n   in progress.  No specific
        guidance on presentation is given except\n   that the order should be consistent.
        \ These devices can typically\n   make calls without waiting for confirmation
        from the Appearance Agent\n   on the appearance number.\n"
      title: 8.1.4.  Shared Appearance UAs with Variable Appearance Numbers
    - contents:
      - "8.1.5.  Example User Interface Issues\n   The problems faced by each style
        of user interface are readily seen\n   in this example:\n   1.  A call arrives
        at the shared appearance group and is assigned an\n       appearance number
        of \"1\".  All UAs should be able to render to\n       the user the arrival
        of this call.\n   2.  Another call arrives at the shared appearance group
        and is\n       assigned an appearance number of \"2\".  The single appearance
        UA\n       should not present this call to the user.  Other UAs should have\n
        \      no problems presenting this call distinctly from the first call.\n
        \  3.  The first call clears, releasing appearance number \"1\".  The\n       single
        appearance UA should now be indicating no calls since it\n       is unable
        to manage calls other than on the first appearance.\n       Both shared appearance
        UAs should clearly show that appearance\n       number \"1\" is now free,
        but that there is still a call on\n       appearance number \"2\".\n   4.
        \ A third call arrives and is assigned the appearance number of\n       \"1\".
        \ All UAs should be able to render the arrival of this new\n       call to
        the user.  Multiple appearance UAs should continue to\n       indicate the
        presence of the second call, and they should also\n       ensure that the
        presentation order is related to the appearance\n       number and not the
        order of call arrival.\n"
      title: 8.1.5.  Example User Interface Issues
    title: 8.1.  Appearance Number Rendering
  - contents:
    - "8.2.  Call State Rendering\n   UAs that implement the shared appearances feature
      typically have a\n   user interface that provides the state of other appearances
      in the\n   group.  As dialog state NOTIFYs from the Appearance Agent are\n   processed,
      this information can be rendered.  Even the simplest user\n   interface typically
      has three states: idle, active, and hold.  The\n   idle state, usually indicated
      by lamp off, is indicated for an\n   appearance when the appearance number is
      not associated with any\n   dialogs, as reported by the Appearance Agent.  The
      active state,\n   usually indicated by a lamp on, means that an appearance number
      is\n   associated with at least one dialog, as reported by the Appearance\n
      \  Agent.  The hold state, often indicated by a blinking lamp, means the\n   call
      state from the perspective of the UA in the shared appearance\n   group is hold.
      \ This can be determined by the presence of the\n   \"+sip.rendering=no\" feature
      tag [RFC3840] with the local target URI.\n   Note that the hold state of the
      remote target URI is not relevant to\n   this display.  For joined dialogs,
      the state is rendered as hold only\n   if all local target URIs are indicated
      with the \"+sip.rendering=no\"\n   feature tag.\n"
    title: 8.2.  Call State Rendering
  title: 8.  User Interface Considerations
- contents:
  - "9.  Interoperability with Non-shared Appearance UAs\n   It is desirable to allow
    a basic UA that does not directly support\n   shared appearance to be part of
    a shared appearance group.  To\n   support this, the Proxy must collaborate with
    the Appearance Agent.\n   This is not required in the basic shared appearance
    architecture;\n   consequently, shared appearance interoperability with non-shared\n
    \  appearance UAs will not be available in all shared appearance\n   deployments.\n
    \  First, a UA that does not support dialog events or the shared\n   appearances
    feature will be discussed.  Then, a UA that does support\n   dialog events but
    not the shared appearances feature will be\n   discussed.\n"
  - contents:
    - "9.1.  Appearance Assignment\n   A UA that has no knowledge of appearances will
      only have appearance\n   numbers for outgoing calls if assigned by the Appearance
      Agent.  If\n   the non-shared appearance UA does not support Join or Replaces,
      all\n   dialogs SHOULD be marked \"exclusive\" to indicate that these options\n
      \  are not available.  Marking these dialogs \"exclusive\" provides a\n   better
      user experience and avoids extra SIP messaging failures.\n"
    title: 9.1.  Appearance Assignment
  - contents:
    - "9.2.  Appearance Release\n   In all cases, the Appearance Agent must be aware
      of the dialog\n   lifetime to release appearances back into the group.\n   It
      is also desirable that any dialog state changes (such as hold,\n   etc.) be
      made available to other UAs in the group through the Dialog\n   Event Package.
      \ If the Appearance Agent includes a proxy that Record-\n   Routes for dialogs
      from the non-shared-appearance-aware UA, the\n   Appearance Agent will know
      about the state of dialogs including hold,\n   etc.  This information could
      be determined from inspection of non-\n   end-to-end-encrypted INVITE and re-INVITE
      messages and added to the\n   dialog information conveyed to other UAs.\n"
    title: 9.2.  Appearance Release
  - contents:
    - "9.3.  UAs Supporting Dialog Events but Not Shared Appearance\n   Interoperability
      with UAs that support dialog events but not the\n   shared appearances feature
      is more straightforward.  As before, all\n   appearance number assignments must
      be done by the Appearance Agent.\n   The Appearance Agent SHOULD still include
      appearance information in\n   NOTIFYs -- this UA will simply ignore this extra
      information.  This\n   type of UA will also ignore appearance number limitations
      and may\n   attempt to join or replace dialogs marked exclusive.  As a result,\n
      \  the Proxy or UAs need to reject such requests or the dialogs will be\n   joined
      or taken.\n"
    title: 9.3.  UAs Supporting Dialog Events but Not Shared Appearance
  title: 9.  Interoperability with Non-shared Appearance UAs
- contents:
  - "10.  Provisioning Considerations\n   UAs can automatically discover if this feature
    is active for an AOR\n   by looking for the 'shared' Event header field parameter
    in a\n   response to a dialog package SUBSCRIBE to the AOR, so no provisioning\n
    \  for this is needed.\n   The registrar will need to be provisioned to accept
    either first or\n   third party registrations for the shared AOR.  First party\n
    \  registration means the To and From URIs in the REGISTER request are\n   the
    shared AOR URI.  Third-party registration means the To URI is the\n   shared AOR
    URI and the From URI is a different AOR, perhaps that of\n   the individual user.
    \ Either the credentials of the shared AOR or the\n   user MUST be accepted by
    the registrar and the Appearance Agent,\n   depending on the authorization policy
    in place for the domain.\n   If the Appearance Agent needs to subscribe to the
    dialog state of the\n   UAs, then the Appearance Agent and the UAs need to be
    provisioned\n   with credentials so the UAs can authenticate the Appearance Agent.\n
    \  In some cases, UAs in the shared appearance group might have a UI\n   limitation
    on the number of appearances that can be rendered.\n   Typically, this will be
    hard-phones with buttons/lamps instead of\n   more flexible UIs.  In this case,
    it can be useful for the Appearance\n   Agent to know this maximum number.  This
    can allow the Appearance\n   Agent to apply policy when this limit is reached,
    e.g., deny a call.\n   However, this mechanism does not provide any way to discover
    this by\n   protocol means.\n"
  title: 10.  Provisioning Considerations
- contents:
  - "11.  Example Message Flows\n   The next section shows call flow and message examples.
    \ The flows and\n   descriptions are non-normative.  Note that, in these examples,
    all\n   INVITEs sent by a UA in the group will be From the shared AOR\n   (sip:HelpDesk@example.com
    in this case), and all INVITES sent to the\n   group will have a Request-URI of
    the shared AOR.  Any other requests\n   would not apply to this feature and would
    be handled using normal SIP\n   mechanisms.\n   Note that the first 12 examples
    assume the Appearance Agent is aware\n   of dialog state events.  The example
    in Section 11.13 shows the case\n   where this is not the case, and, as a result,
    the Appearance Agent\n   initiates a subscription to users of the shared AOR.
    \ Any of the\n   other call flow examples could have shown this mode of operation
    as\n   it is equally valid.\n"
  - contents:
    - "11.1.  Registration and Subscription\n   Bob and Alice are in a shared appearance
      group identified by the\n   shared appearance AOR sip:HelpDesk@example.com.
      \ Bob REGISTERs using\n   contact sip:bob@ua2.example.com.  Alice REGISTERs
      with contact\n   sip:alice@ua1.example.com.\n   UAs for Alice and Bob subscribe
      to the dialog package for the\n   appearance AOR and publish dialog state to
      the Appearance Agent.\n   Message exchanges between the Registrar, Appearance
      Agent, Alice, and\n   Bob are shown below.  The call flow examples below do
      not show the\n   authentication of subscriptions, publications, and notifications.
      \ It\n   should be noted that for security purposes, all publications and\n
      \  subscriptions must be authorized before they are accepted.\n   Also note
      that registrations and subscriptions must all be refreshed\n   by Alice at intervals
      determined by the expiration intervals returned\n   by the Registrar or Appearance
      Agent.\n   Registrar     Appearance Agent          Alice             Bob\n   |
      \                   |                    |                |\n   |                    |
      \                   |                |\n   |<--------------------------- REGISTER
      F1<|                |\n   |                    |                    |                |\n
      \  |>F2 200 OK ----------------------------->|                |\n   |                    |
      \                   |                |\n   |                    |<----- SUBSCRIBE
      F3<|                |\n   |                    |                    |                |\n
      \  |                    |>F4 200 OK -------->|                |\n   |                    |
      \                   |                |\n   |                    |>F5 NOTIFY
      -------->|                |\n   |                    |                    |
      \               |\n   |                    |<-------- 200 OK F6<|                |\n
      \  |                    |                    |                |\n   |<--------------------------------------------
      REGISTER F7<|\n   |                    |                    |                |\n
      \  |>F8 200 OK ---------------------------------------------->|\n   |                    |
      \                   |                |\n   |                    |<----------------------
      SUBSCRIBE F9<|\n   |                    |                    |                |\n
      \  |                    |>F10 200 OK ------------------------>|\n   |                    |
      \                   |                |\n   |                    |>F11 NOTIFY
      ------------------------>|\n   |                    |                    |                |\n
      \  |                    |<------------------------ 200 OK F12<|\n   |                    |
      \                   |                |\n   Figure 1. Registration and Subscription
      Example\n   F1-F2: Alice registers AOR with\n          contact: <sip:alice@ua1.example.com>\n
      \  F1 Alice ----> Registrar\n   REGISTER sip:registrar.example.com SIP/2.0\n
      \  Via: SIP/2.0/UDP ua1.example.com;branch=z9hG4bK527b54da8ACC7B09\n   From:
      <sip:alice@example.com>;tag=CDF9A668-909E2BDD\n   To: <sip:HelpDesk@example.com>\n
      \  CSeq: 2 REGISTER\n   Call-ID: d3281184-518783de-cc23d6bb\n   Contact: <sip:alice@ua1.example.com>\n
      \  Max-Forwards: 70\n   Expires: 3600\n   Content-Length: 0\n   F2 Registrar
      ----> Alice\n   SIP/2.0 200 OK\n   Via: SIP/2.0/UDP ua1.example.com;branch=z9hG4bK527b54da8ACC7B09\n
      \  CSeq: 2 REGISTER\n   Call-ID: d3281184-518783de-cc23d6bb\n   From: <sip:alice@example.com>;tag=CDF9A668-909E2BDD\n
      \  To: <sip:HelpDesk@example.com>;tag=1664573879820199\n   Contact:  <sip:alice@ua1.example.com>;expires=3600\n
      \  Content-Length: 0\n   F3 to F6: Alice also subscribes to the events associated
      with the\n   Appearance AOR.  Appearance Agent notifies Alice of the status.\n
      \  F3 Alice ----> Appearance Agent\n   SUBSCRIBE sip:HelpDesk@example.com SIP/2.0\n
      \  Via: SIP/2.0/UDP ua1.example.com;branch=z9hG4bKf10fac97E7A76D6A\n   From:
      <sip:alice@example.com>;tag=925A3CAD-CEBB276E\n   To: <sip:HelpDesk@example.com>\n
      \  CSeq: 91 SUBSCRIBE\n   Call-ID: ef4704d9-bb68aa0b-474c9d94\n   Contact: <sip:alice@ua1.example.com>\n
      \  Event: dialog;shared\n   Accept: application/dialog-info+xml\n   Max-Forwards:
      70\n   Expires: 3700\n   Content-Length: 0\n   F4 Appearance Agent ----> Alice\n
      \  SIP/2.0 200 OK\n   Via: SIP/2.0/UDP ua1.example.com;branch=z9hG4bKf10fac97E7A76D6A\n
      \  CSeq: 91 SUBSCRIBE\n   Call-ID: ef4704d9-bb68aa0b-474c9d94\n   From: <sip:alice@example.com>;tag=925A3CAD-CEBB276E\n
      \  To: <sip:HelpDesk@example.com>;tag=1636248422222257\n   Allow-Events: dialog\n
      \  Expires: 3700\n   Contact: <sip:appearanceagent.example.com>\n   Content-Length:
      0\n   F5 Appearance Agent ----> Alice\n   NOTIFY sip:alice@ua1.example.com SIP/2.0\n
      \  From: <sip:HelpDesk@example.com>;tag=1636248422222257\n   To: <sip:alice@example.com>;tag=925A3CAD-CEBB276E\n
      \  Call-ID: ef4704d9-bb68aa0b-474c9d94\n   CSeq: 232 NOTIFY\n   Via: SIP/2.0/UDP
      appearanceagent.example.com;branch=z9hG4bK1846\n   Max-Forwards: 70\n   Content-Type:
      application/dialog-info+xml\n   Event: dialog;shared\n   Subscription-State:
      active;expires=3000\n   Contact: <sip:appearanceagent.example.com>\n   Content-Length:
      ...\n   <?xml version=\"1.0\"?>\n   <dialog-info xmlns=\"urn:ietf:params:xml:ns:dialog-info\"\n
      \               version=\"40\"\n                state=\"full\"\n                entity=\"sip:HelpDesk@example.com\">\n
      \  </dialog-info>\n   F6 Alice ----> Appearance Agent\n   SIP/2.0 200 OK\n   Via:
      SIP/2.0/UDP appearanceagent.example.com;branch=z9hG4bK1846\n   From: <sip:HelpDesk@example.com>;tag=1636248422222257\n
      \  To: <sip:alice@example.com>;tag=925A3CAD-CEBB276E\n   CSeq: 232 NOTIFY\n
      \  Call-ID: ef4704d9-bb68aa0b-474c9d94\n   Contact: <sip:alice@ua1.example.com>\n
      \  Content-Length: 0\n   F7 Bob ----> Registrar\n   REGISTER sip:registrar.example.com
      SIP/2.0\n   Via: SIP/2.0/UDP ua2.example.com;branch=z9hG4b53b54d87B\n   From:
      <sip:bob@example.com>;tag=34831131\n   To: <sip:HelpDesk@example.com>\n   CSeq:
      72 REGISTER\n   Call-ID: 139490230230249348\n   Contact: <sip:bob@ua2.example.com>\n
      \  Max-Forwards: 70\n   Expires: 3600\n   Content-Length: 0\n   F8 Registrar
      ----> Bob\n   SIP/2.0 200 OK\n   Via: SIP/2.0/UDP ua2.example.com;branch=z9hG4b53b54d87B\n
      \  From: <sip:bob@example.com>;tag=34831131\n   To: <sip:HelpDesk@example.com>;tag=fkwlwqi1\n
      \  CSeq: 72 REGISTER\n   Call-ID: 139490230230249348\n   Contact: <sip:alice@ua1.example.com>;expires=3200\n
      \  Contact: <sip:bob@ua2.example.com>;expires=3600\n   Content-Length: 0\n"
    title: 11.1.  Registration and Subscription
  - contents:
    - "11.2.  Appearance Selection for Incoming Call\n   In the call flow below, Bob
      and Alice are in a shared appearance\n   group.  Carol places a call to the
      shared appearance group AOR.  The\n   Appearance Agent sends NOTIFYs to Alice
      and Bob telling them what\n   appearance the call is using.  Both Alice and
      Bob's devices are\n   alerted of the incoming call.  Bob answers the call.\n
      \  Note that it is possible that both Alice and Bob answer the call and\n   send
      200 (OK) responses to Carol.  It is up to Carol to resolve this\n   situation.
      \ Typically, Carol will send ACKs to both 200 OKs but send\n   a BYE to terminate
      one of the dialogs.  As a result, either Alice or\n   Bob will receive the BYE
      and publish that their dialog is over.\n   However, if Carol answers both Alice
      and Bob and keeps both dialogs\n   active, then the Appearance Agent will need
      to resolve the situation\n   by moving either Alice or Bob's dialog to a different
      appearance.\n   All NOTIFY messages in the call flow below carry dialog events
      and\n   only dialog states are mentioned for simplicity.  For brevity, the\n
      \  details of some messages are not shown below.  Note that the order of\n   F2
      - F5 and F7 - F8 could be reversed.\n              Forking     Appearance\n
      \  Carol      Proxy         Agent         Alice      Bob\n   |            |
      \            |             |         |\n   |>F1 INVITE >|             |             |
      \        |\n   |            |< - - - - - >|             |         |\n   |            |
      \            |>F2 NOTIFY ----------->|\n   |            |             |             |
      \        |\n   |            |             |<F3 200 OK -----------<|\n   |            |
      \            |             |         |\n   |            |             |>F4 NOTIFY
      ->|         |\n   |            |             |             |         |\n   |
      \           |             |<-200 OK F5-<|         |\n   |<- 100 F6 -<|             |
      \            |         |\n   |            |>F7 INVITE (appearance=1) ---------->|\n
      \  |            |             |             |         |\n   |            |>F8
      INVITE (appearance=1) >|         |\n   |            |             |             |
      \        |\n   |            |<-------------------- Ringing 180 F9<|\n   |< 180
      F10 -<|             |             |         |\n   |            |<--------- 180
      Ringing F11<|         |\n   |< 180 F12 -<|             |             |         |\n
      \  |            |             |             |         |\n   |            |<------------------------
      200 OK F13<|\n   |< 200 F14 -<|             |             |         |\n   |
      \           |             |             |         |\n   |            |>F15 CANCEL
      -------------->|         |\n   |            |             |             |         |\n
      \  |            |<-------------- 200 OK F16<|         |\n   |            |             |
      \            |         |\n   |            |<Request Cancelled 487 F17<|         |\n
      \  |            |             |             |         |\n   |            |>F18
      ACK ----------------->|         |\n   |>F19 ACK -->|             |             |
      \        |\n   |            |>F20 ACK --------------------------->|\n   |            |
      \            |             |         |\n   |<=============Both way RTP established===========>|\n
      \  |            |             |             |         |\n   |            |<
      - - - - - >|             |         |\n   |            |             |             |
      \        |\n   |            |             |>F21 NOTIFY >|         |\n   |            |
      \            |             |         |\n   |            |             |<- 200
      F22 -<|         |\n   |            |             |             |         |\n
      \  |            |             |>F23 NOTIFY ---------->|\n   |            |             |
      \            |         |\n   |            |             |<F24 200 OK ----------<|\n
      \  |            |             |                       |\n   Figure 2. Appearance
      Selection for Incoming Call Example\n   F4 Appearance Agent ----> Alice\n   NOTIFY
      sip:alice@ua1.example.com SIP/2.0\n   From: <sip:HelpDesk@example.com>;tag=151702541050937\n
      \  To: <sip:alice@example.com>;tag=18433323-C3D237CE\n   Call-ID: 1e361d2f-a9f51109-bafe31d4\n
      \  CSeq: 12 NOTIFY\n   Via: SIP/2.0/UDP appearanceagent.example.com;branch=z9hG4bK1403\n
      \  Max-Forwards: 70\n   Content-Type: application/dialog-info+xml\n   Event:
      dialog;shared\n   Subscription-State: active;expires=2800\n   Contact: <sip:appearanceagent.example.com>\n
      \  Content-Length: ...\n   <?xml version=\"1.0\"?>\n   <dialog-info xmlns=\"urn:ietf:params:xml:ns:dialog-info\"\n
      \               xmlns:sa=\"urn:ietf:params:xml:ns:sa-dialog-info\"\n                version=\"13\"\n
      \               state=\"partial\"\n                entity=\"sip:HelpDesk@example.com\">\n
      \     <dialog id=\"2a7294823093f5274e3fd2ec54a2d76c\"\n           call-id=\"14-1541707345\"\n
      \          remote-tag=\"44BAD75D-E3128D42\"\n           direction=\"recipient\">\n
      \        <sa:appearance>1</sa:appearance>\n         <state>trying</state>\n
      \        <remote>\n           <identity>sip:carol@ua.example.com</identity>\n
      \        </remote>\n      </dialog>\n   </dialog-info>\n   F7 Proxy ----> Bob\n
      \  INVITE sip:bob@ua2.example.com SIP/2.0\n   Via: SIP/2.0/UDP ua3.example.com;branch=z9hG4bK4324ea\n
      \  Via: SIP/2.0/UDP proxy.example.com;branch=z9hG4bK38432ji\n   From: <sip:carol@example.com>;tag=44BAD75D-E3128D42\n
      \  To: <sip:HelpDesk@example.com>\n   CSeq: 106 INVITE\n   Call-ID: 14-1541707345\n
      \  Contact: <sip:carol@ua3.example.com>\n   Max-Forwards: 69\n   Alert-Info:
      <urn:alert:service:normal>;appearance=1\n   Content-Type: application/sdp\n
      \  Content-Length: ...\n   v=0\n   o=- 1102980499 1102980499 IN IP4 ua3.example.com\n
      \  s=\n   c=IN IP4 ua3.example.com\n   t=0 0\n   m=audio 2238 RTP/AVP 0 8 101\n
      \  a=rtpmap:0 PCMU/8000\n   a=rtpmap:8 PCMA/8000\n   a=rtpmap:101 telephone-event/8000\n
      \  F21 Appearance Agent ----> Alice\n   NOTIFY sip:alice@ua1.example.com SIP/2.0\n
      \  From: <sip:HelpDesk@example.com>;tag=151702541050937\n   To: <sip:alice@example.com>;tag=18433323-C3D237CE\n
      \  Call-ID: 1e361d2f-a9f51109-bafe31d4\n   CSeq: 13 NOTIFY\n   Via: SIP/2.0/UDP
      appearanceagent.example.com;branch=z9hG4bK4164F03j\n   Max-Forwards: 70\n   Content-Type:
      application/dialog-info+xml\n   Event: dialog;shared\n   Subscription-State:
      active;expires=2500\n   Contact: <sip:appearanceagent.example.com>\n   Content-Length:
      ...\n   <?xml version=\"1.0\"?>\n   <dialog-info xmlns=\"urn:ietf:params:xml:ns:dialog-info\"\n
      \               xmlns:sa=\"urn:ietf:params:xml:ns:sa-dialog-info\"\n                version=\"17\"\n
      \               state=\"partial\"\n                entity=\"sip:HelpDesk@example.com\">\n
      \     <dialog id=\"2a7294823093f5274e3fd2ec54a2d76c\"\n           call-id=\"14-1541707345\"\n
      \          remote-tag=\"44BAD75D-E3128D42\"\n           local-tag=\"7349dsfjkFD03s\"\n
      \          direction=\"recipient\">\n         <sa:appearance>1</sa:appearance>\n
      \        <state>confirmed</state>\n         <local>\n           <target>sip:bob@ua2.example.com</target>\n
      \        </local>\n         <remote>\n           <identity>sip:carol@ua.example.com</identity>\n
      \        </remote>\n      </dialog>\n   </dialog-info>\n"
    title: 11.2.  Appearance Selection for Incoming Call
  - contents:
    - "11.3.  Outgoing Call without Appearance Seizure\n   In this scenario, Bob's
      UA places a call without first selecting/\n   seizing an appearance number.
      \ After Bob sends the INVITE, the\n   appearance assigns an appearance number
      for it and notifies both\n   Alice and Bob.\n   Carol        Proxy           Alice
      \    Appearance Agent         Bob\n   |              |               |              |
      \                 |\n   |              |               |              |                  |\n
      \  |              |<------------------------------------- INVITE F1<|\n   |
      \             |               |              |                  |\n   |              |>F2
      100 Trying --------------------------------->|\n   |<-- INVITE F3<|               |
      \             |                  |\n   |              |< - - - - - - - - - -
      - - - ->|                  |\n   |              |               |              |
      \                 |\n   |              |               |<-- NOTIFY F4<|                  |\n
      \  |              |               |              |                  |\n   |
      \             |               |>F5 200 OK -->|                  |\n   |              |
      \              |              |------- NOTIFY F6>|\n   |              |               |
      \             |                  |\n   |              |               |              |<F7
      200 OK ------<|\n   |>F8 180  ---->|               |              |                  |\n
      \  |              |>F9 180 Ringing -------------------------------->|\n   |
      \             |               |              |                  |\n   |              |<
      - - - - - - - - - - - - - ->|                  |\n   |              |               |
      \             |                  |\n   |              |               |<- NOTIFY
      F10<|                  |\n   |              |               |              |
      \                 |\n   |              |               |>F11 200 OK ->|                  |\n
      \  |              |               |              |------ NOTIFY F12>|\n   |
      \             |               |              |                  |\n   |              |
      \              |              |<F13 200 OK -----<|\n   |>F14 200 OK ->|               |
      \             |                  |\n   |              |>F15 200 OK ------------------------------------>|\n
      \  |              |               |              |                  |\n   |
      \             |<--------------------------------------- ACK F16<|\n   |<----
      ACK F17<|               |              |                  |\n   |              |
      \              |              |                  |\n   |<================= Both
      way RTP established ===================>|\n   |              |               |
      \             |                  |\n   |              |< - - - - - - - - - -
      - - - ->|                  |\n   |              |               |              |
      \                 |\n   |              |               |<- NOTIFY F18<|                  |\n
      \  |              |               |              |                  |\n   |
      \             |               |>F19 200 OK ->|                  |\n   |              |
      \              |              |------ NOTIFY F20>|\n   |              |               |
      \             |                  |\n   |              |               |              |<F21
      200 OK -----<|\n   |              |               |              |                  |\n
      \  Figure 3. Outgoing Call without Appearance Seizure Example\n   F1 Bob ---->
      Proxy\n   INVITE sip:carol@example.com SIP/2.0\n   Via: SIP/2.0/UDP ua2.example.com;branch=z9hG4bK98c87c52123A08BF\n
      \  From: <sip:HelpDesk@example.com>;tag=15A3DE7C-9283203B\n   To: <sip:carol@example.com>\n
      \  CSeq: 1 INVITE\n   Call-ID: f3b3cbd0-a2c5775e-5df9f8d5\n   Contact: <sip:bob@ua2.example.com>\n
      \  Max-Forwards: 70\n   Content-Type: application/sdp\n   Content-Length: 223\n
      \  v=0\n   o=- 1102980499 1102980499 IN IP4 ua2.example.com\n   s=IP SIP UA\n
      \  c=IN IP4 ua2.example.com\n   t=0 0\n   a=sendrecv\n   m=audio 2236 RTP/AVP
      0 8 101\n   a=rtpmap:0 PCMU/8000\n   a=rtpmap:8 PCMA/8000\n   a=rtpmap:101 telephone-event/8000\n
      \  F4 Appearance Agent ----> Alice\n   NOTIFY sip:alice@ua1.example.com SIP/2.0\n
      \  Via: SIP/2.0/UDP appearanceagent.example.com;branch=z9hG4bK81d84f62\n   From:
      <sip:HelpDesk@example.com>;tag=1636248422222257\n   To: <sip:alice@example.com>;tag=925A3CAD-CEBB276E\n
      \  Call-ID: ef4704d9-bb68aa0b-474c9d94\n   CSeq: 233 NOTIFY\n   Max-Forwards:
      70\n   Content-Type: application/dialog-info+xml\n   Event: dialog;shared\n
      \  Subscription-State: active;expires=2200\n   Contact: <sip:appearanceagent.example.com>\n
      \  Content-Length: ...\n   <?xml version=\"1.0\"?>\n   <dialog-info xmlns=\"urn:ietf:params:xml:ns:dialog-info\"\n
      \               xmlns:sa=\"urn:ietf:params:xml:ns:sa-dialog-info\"\n                version=\"27\"\n
      \               state=\"partial\"\n                entity=\"sip:HelpDesk@example.com\">\n
      \      <dialog id=\"fa02538339df3ce597f9e3e3699e28fc\"\n            call-id=\"f3b3cbd0-a2c5775e-5df9f8d5\"\n
      \           local-tag=\"15A3DE7C-9283203B\"    direction=\"initiator\">\n               <sa:appearance>1</sa:appearance>\n
      \              <sa:exclusive>false</sa:exclusive>\n                  <state>trying</state>\n
      \                  <local>\n                       <target uri=\"sip:bob@ua2.example.com\">\n
      \                      </target>\n                      </local>\n           </dialog>\n
      \  </dialog-info>\n   F6 Appearance Agent ----> Bob\n   NOTIFY sip:bob@ua1.example.com
      SIP/2.0\n   From: <sip:HelpDesk@example.com>;tag=497585728578386\n   To: <sip:bob@example.com>;tag=633618CF-B9C2EDA4\n
      \  Call-ID: a7d559db-d6d7dcad-311c9e3a\n   CSeq: 7 NOTIFY\n   Via: SIP/2.0/UDP
      appearanceagent.example.com\n    ;branch=z9hG4bK1711759878512309\n   Max-Forwards:
      70\n   Content-Type: application/dialog-info+xml\n   Event: dialog;shared\n
      \  Subscription-State: active;expires=2000\n   Contact: <sip:appearanceagent.example.com>\n
      \  Content-Length: ...\n   <?xml version=\"1.0\"?>\n   <dialog-info xmlns=\"urn:ietf:params:xml:ns:dialog-info\"\n
      \               xmlns:sa=\"urn:ietf:params:xml:ns:sa-dialog-info\"\n                version=\"78\"\n
      \               state=\"partial\"\n                entity=\"sip:HelpDesk@example.com\">\n
      \      <dialog id=\"02538339hfgdf3ce597f9e3egkl3699e28fc\"\n            call-id=\"f3b3cbd0-a2c5775e-5df9f8d5\"\n
      \           local-tag=\"15A3DE7C-9283203B\"    direction=\"initiator\">\n               <sa:appearance>1</sa:appearance>\n
      \              <sa:exclusive>false</sa:exclusive>\n                  <state>trying</state>\n
      \                  <local>\n                       <target uri=\"sip:bob@ua2.example.com\">\n
      \                      </target>\n                      </local>\n           </dialog>\n
      \  </dialog-info>\n"
    title: 11.3.  Outgoing Call without Appearance Seizure
  - contents:
    - "11.4.  Outgoing Call with Appearance Seizure\n   In this scenario, Bob's UA
      sends out a dialog event PUBLISH with\n   state (trying) selecting/seizing an
      appearance number before sending\n   the INVITE.  After receiving the 200 (OK)
      from the Appearance Agent\n   confirming the appearance number, Bob's UA sends
      the INVITE to Carol\n   and establishes a session.  For brevity, details of
      some of the\n   messages are not included in the message flows.  Bob's UA puts
      as\n   much of the dialog information from F7 as can be determined in\n   advance.
      \ In this case, the minimum of the Contact URI is included,\n   which allows
      the Appearance Agent to correlate the INVITE with the\n   PUBLISH.\n   Carol
      \       Proxy           Alice     Appearance Agent         Bob\n   |              |
      \              |              |                  |\n   |              |               |
      \             |<----- PUBLISH F1<|\n   |              |               |              |
      \                 |\n   |              |               |              |>F2 200
      OK ------>|\n   |              |               |              |                  |\n
      \  |              |               |<-- NOTIFY F3<|                  |\n   |
      \             |               |              |                  |\n   |              |
      \              |>F4 200 OK -->|                  |\n   |              |               |
      \             |------- NOTIFY F5>|\n   |              |               |              |
      \                 |\n   |              |               |              |<F6 200
      OK ------<|\n   |              |               |              |                  |\n
      \  |              |<------------------------------------- INVITE F7<|\n   |
      \             |               |              |                  |\n   |              |>F8
      100 Trying --------------------------------->|\n   |<-- INVITE F9<|               |
      \             |                  |\n   |              |               |              |<----
      PUBLISH F10<|\n   |              |               |              |                  |\n
      \  |              |               |              |>F11 200 OK ----->|\n   |
      \             |               |              |                  |\n   |>F12
      180  --->|               |              |                  |\n   |              |>F13
      180 Ringing ------------------------------->|\n   |              |               |
      \             |                  |\n   |              |< - - - - - - - - - -
      - - - ->|                  |\n   |              |               |              |
      \                 |\n   |              |               |<- NOTIFY F14<|                  |\n
      \  |              |               |              |                  |\n   |
      \             |               |>F15 200 OK ->|                  |\n   |              |
      \              |              |------ NOTIFY F16>|\n   |              |               |
      \             |                  |\n   |              |               |              |<F17
      200 OK -----<|\n   |>F18 200 OK ->|               |              |                  |\n
      \  |              |>F19 200 OK ------------------------------------>|\n   |
      \             |               |              |                  |\n   |              |<---------------------------------------
      ACK F20<|\n   |<---- ACK F21<|               |              |                  |\n
      \  |              |               |              |                  |\n   |<=================
      Both way RTP established ===================>|\n   |              |               |
      \             |                  |\n   |              |< - - - - - - - - - -
      - - - ->|                  |\n   |              |               |              |
      \                 |\n   |              |               |<- NOTIFY F22<|                  |\n
      \  |              |               |              |                  |\n   |
      \             |               |>F23 200 OK ->|                  |\n   |              |
      \              |              |------ NOTIFY F24>|\n   |              |               |
      \             |                  |\n   |              |               |              |<F25
      200 OK -----<|\n   |              |               |              |                  |\n
      \  Figure 4. Outgoing Call with Appearance Seizure Example\n   F1 to F4: Bob
      uses the shared appearance of the Help Desk on his UA\n   to place an outgoing
      call (e.g., he goes off-hook).  Before sending\n   the outgoing INVITE request,
      Bob publishes to the Appearance Agent\n   reserving appearance number 1.  The
      Appearance Agent notifies Alice\n   (and all other UAs, including Bob) of the
      event by sending NOTIFYs.\n   F1 Bob ----> Appearance Agent\n   PUBLISH sip:HelpDesk@example.com
      SIP/2.0\n   Via: SIP/2.0/UDP ua2.example.com;branch=z9hG4bK61314d6446383E79\n
      \  From: <sip:bob@example.com>;tag=44150CC6-A7B7919D\n   To: <sip:HelpDesk@example.com>\n
      \  CSeq: 7 PUBLISH\n   Call-ID: 44fwF144-F12893K38424\n   Contact: <sip:bob@ua2.example.com>\n
      \  Event: dialog;shared\n   Max-Forwards: 70\n   Content-Type: application/dialog-info+xml\n
      \  Content-Length: ...\n   <?xml version=\"1.0\"?>\n   <dialog-info xmlns=\"urn:ietf:params:xml:ns:dialog-info\"\n
      \               xmlns:sa=\"urn:ietf:params:xml:ns:sa-dialog-info\"\n                version=\"6\"\n
      \               state=\"full\"\n                entity=\"sip:HelpDesk@example.com\">\n
      \      <dialog id=\"id3d4f9c83\" direction=\"initiator\">\n           <sa:appearance>1</sa:appearance>\n
      \          <sa:exclusive>false</sa:exclusive>\n           <state>trying</state>\n
      \          <local>\n               <target uri=\"sip:bob@ua2.example.com\">\n
      \              </target>\n           </local>\n       </dialog>\n   </dialog-info>\n
      \  F2 Appearance Agent  ----> Bob\n   SIP/2.0 200 OK\n   Via: SIP/2.0/UDP ua2.example.com;branch=z9hG4bK61314d6446383E79\n
      \  From: <sip:bob@example.com>;tag=44150CC6-A7B7919D\n   To: <sip:HelpDesk@example.com>\n
      \  CSeq: 7 PUBLISH\n   Call-ID: 44fwF144-F12893K38424\n   Contact: <sip:bob@ua2.example.com>\n
      \  Event: dialog;shared\n   SIP-Etag: 482943245\n   Allow-Events: dialog\n   Expires:
      60\n   Content-Length: 0\n   F7 Bob ---> Proxy\n   INVITE sip:carol@example.com
      SIP/2.0\n   Via: SIP/2.0/UDP ua2.example.com;branch=z9hG4bK342122\n   Max-Forwards:
      70\n   From: <sip:HelpDesk@example.com>;tag=15A3DE7C-9283203B\n   To: <sip:carol@example.com>\n
      \  Call-ID: f3b3cbd0-a2c5775e-5df9f8d5\n   CSeq: 31 INVITE\n   Contact: <sip:bob@ua2.example.com>\n
      \  Content-Type: application/sdp\n   Content-Length: ...\n   (SDP Not Shown)\n
      \  F10 Bob ----> Appearance Agent\n   PUBLISH sip:HelpDesk@example.com SIP/2.0\n
      \  Via: SIP/2.0/UDP ua2.example.com;branch=z9hG4bK6d644638E7\n   From: <sip:bob@example.com>;tag=0CCf6-A7FdsB79D\n
      \  To: <sip:HelpDesk@example.com>\n   CSeq: 437 PUBLISH\n   Call-ID: fwF14d4-F1FFF2F2893K38424\n
      \  Contact: <sip:bob@ua2.example.com>\n   Event: dialog;shared\n   Max-Forwards:
      70\n   Content-Type: application/dialog-info+xml\n   Content-Length: ...\n   <?xml
      version=\"1.0\"?>\n   <dialog-info xmlns=\"urn:ietf:params:xml:ns:dialog-info\"\n
      \               xmlns:sa=\"urn:ietf:params:xml:ns:sa-dialog-info\"\n                version=\"6\"\n
      \               state=\"full\"\n                entity=\"sip:HelpDesk@example.com\">\n
      \      <dialog id=\"id3d4f9c83\"\n            call-id=\"f3b3cbd0-a2c5775e-5df9f8d5\"\n
      \           local-tag=\"15A3DE7C-9283203B\"\n                                            direction=\"initiator\">\n
      \          <sa:appearance>1</sa:appearance>\n           <sa:exclusive>false</sa:exclusive>\n
      \          <state>trying</state>\n           <local>\n               <target
      uri=\"sip:bob@ua2.example.com\">\n               </target>\n           </local>\n
      \          <remote>\n               <identity uri=\"sip:carol@example.com\">\n
      \              </identity>\n           </remote>\n       </dialog>\n   </dialog-info>\n"
    title: 11.4.  Outgoing Call with Appearance Seizure
  - contents:
    - "11.5.  Outgoing Call without Using an Appearance Number\n   In this scenario,
      Bob's UA sends out a dialog event PUBLISH with\n   state (trying) indicating
      that he does not want to utilize an\n   appearance number for this dialog.  The
      PUBLISH does not have an\n   appearance element but does have the 'shared' Event
      header field\n   parameter.  As a result, the Appearance Agent knows the UA
      does not\n   wish to use an appearance number for this call.  If the Appearance\n
      \  Agent does not wish to allow this, it would reject the PUBLISH with a\n   400
      (Bad Request) response and the UA would know to re-PUBLISH\n   selecting/seizing
      an appearance number.\n   Carol        Proxy           Alice     Appearance
      Agent         Bob\n   |              |               |              |                  |\n
      \  |              |               |              |<----- PUBLISH F1<|\n   |
      \             |               |              |                  |\n   |              |
      \              |              |>F2 200 OK ------>|\n   |              |               |
      \             |                  |\n   |              |               |<-- NOTIFY
      F3<|                  |\n   |              |               |              |
      \                 |\n   |              |               |>F4 200 OK -->|                  |\n
      \  |              |               |              |------- NOTIFY F5>|\n   |
      \             |               |              |                  |\n   |              |
      \              |              |<F6 200 OK ------<|\n   |              |               |
      \             |                  |\n   |              |<-------------------------------------
      INVITE F7<|\n   |              |               |              |                  |\n
      \  |              |>F8 100 Trying --------------------------------->|\n   |<--
      INVITE F9<|               |              |                  |\n   |              |
      \              |              |<---- PUBLISH F10<|\n   |              |               |
      \             |                  |\n   |              |               |              |>F11
      200 OK ----->|\n   |              |               |              |                  |\n
      \  |>F12 180  --->|               |              |                  |\n   |
      \             |>F13 180 Ringing ------------------------------->|\n   |              |
      \              |              |                  |\n   |              |< - -
      - - - - - - - - - - - ->|                  |\n   |              |               |
      \             |                  |\n   |              |               |<- NOTIFY
      F14<|                  |\n   |              |               |              |
      \                 |\n   |              |               |>F15 200 OK ->|                  |\n
      \  |              |               |              |------ NOTIFY F16>|\n   |
      \             |               |              |                  |\n   |              |
      \              |              |<F17 200 OK -----<|\n   |>F18 200 OK ->|               |
      \             |                  |\n   |              |>F19 200 OK ------------------------------------>|\n
      \  |              |               |              |                  |\n   |
      \             |<--------------------------------------- ACK F20<|\n   |<----
      ACK F21<|               |              |                  |\n   |              |
      \              |              |                  |\n   |<================= Both
      way RTP established ===================>|\n   |              |               |
      \             |                  |\n   |              |< - - - - - - - - - -
      - - - ->|                  |\n   |              |               |              |
      \                 |\n   |              |               |<- NOTIFY F22<|                  |\n
      \  |              |               |              |                  |\n   |
      \             |               |>F23 200 OK ->|                  |\n   |              |
      \              |              |------ NOTIFY F24>|\n   |              |               |
      \             |                  |\n   |              |               |              |<F25
      200 OK -----<|\n   |              |               |              |                  |\n
      \  Figure 5. Outgoing Call without using an Appearance Number Example\n   F1
      Bob ----> Appearance Agent\n   PUBLISH sip:appearanceagent.example.com SIP/2.0\n
      \  Via: SIP/2.0/UDP ua2.example.com;branch=z9hG4bK61314d6446383E79\n   From:
      <sip:bob@example.com>;tag=4415df82k39sf\n   To: <sip:HelpDesk@example.com>\n
      \  CSeq: 7 PUBLISH\n   Call-ID: 44fwF144-F12893K38424\n   Contact: <sip:bob@ua2.example.com>\n
      \  Event: dialog;shared\n   Max-Forwards: 70\n   Content-Type: application/dialog-info+xml\n
      \  Content-Length: ...\n   <?xml version=\"1.0\"?>\n   <dialog-info xmlns=\"urn:ietf:params:xml:ns:dialog-info\"\n
      \               xmlns:sa=\"urn:ietf:params:xml:ns:sa-dialog-info\"\n                version=\"6\"\n
      \               state=\"full\"\n                entity=\"sip:HelpDesk@example.com\">\n
      \      <dialog id=\"id3d4f9c83\" direction=\"initiator\">\n           <sa:exclusive>false</sa:exclusive>\n
      \          <state>trying</state>\n           <local>\n               <target
      uri=\"sip:bob@ua2.example.com\">\n               </target>\n           </local>\n
      \      </dialog>\n   </dialog-info>\n   Note that F7 would be the same as the
      previous example.\n"
    title: 11.5.  Outgoing Call without Using an Appearance Number
  - contents:
    - "11.6.  Appearance Release\n   Bob and Carol are in a dialog, created, for example
      as in\n   Section 11.3.  Carol sends a BYE to Bob to terminate the dialog and\n
      \  the Appearance Agent de-allocates the appearance number used, sending\n   notifications
      out to the UAs in the shared group.\n   Carol        Proxy           Alice     Appearance
      Agent         Bob\n   |              |               |              |                  |\n
      \  |              |               |              |                  |\n   |<=================
      Both way RTP established ===================>|\n   |              |               |
      \             |                  |\n   |>F22 BYE ---->|               |              |
      \                 |\n   |              |>F23 BYE --------------------------------------->|\n
      \  |              |               |              |                  |\n   |
      \             |<------------------------------------ 200 OK F24<|\n   |<--200
      OK F25<|               |              |                  |\n   |              |<
      - - - - - - - - - - - - - ->|                  |\n   |              |               |
      \             |                  |\n   |              |               |<- NOTIFY
      F26<|                  |\n   |              |               |              |
      \                 |\n   |              |               |>F27 200 OK ->|                  |\n
      \  |              |               |              |------ NOTIFY F28>|\n   |
      \             |               |              |                  |\n   |              |
      \              |              |<F29 200 OK -----<|\n   Figure 6. Appearance
      Release Example\n   F28 Appearance Agent ----> Bob\n   NOTIFY sip:bob@ua1.example.com
      SIP/2.0\n   From: <sip:HelpDesk@example.com>;tag=497585728578386\n   To: <sip:bob@example.com>\n
      \  Call-ID: a7d559db-d6d7dcad-311c9e3a\n   CSeq: 7 NOTIFY\n   Via: SIP/2.0/UDP
      appearanceagent.example.com\n    ;branch=z9hG4bK759878512309\n   Max-Forwards:
      70\n   Content-Type: application/dialog-info+xml\n   Event: dialog;shared\n
      \  Subscription-State: active;expires=1800\n   Contact: <sip:appearanceagent.example.com>\n
      \  Content-Length: ...\n   <?xml version=\"1.0\"?>\n   <dialog-info xmlns=\"urn:ietf:params:xml:ns:dialog-info\"\n
      \               xmlns:sa=\"urn:ietf:params:xml:ns:sa-dialog-info\"\n                version=\"27\"\n
      \               state=\"partial\"\n                entity=\"sip:HelpDesk@example.com\">\n
      \      <dialog id=\"fa02538339df3ce597f9e3e3699e28fc\"\n            call-id=\"f3b3cbd0-a2c5775e-5df9f8d5\"\n
      \           local-tag=\"15A3DE7C-9283203B\"\n            remote-tag=\"65a98f7c-1dd2-11b2-88c6-b0316298f7c\"\n
      \                                           direction=\"initiator\">\n               <sa:appearance>1</sa:appearance>\n
      \              <sa:exclusive>false</sa:exclusive>\n                  <state>terminated</state>\n
      \                  <local>\n                       <target uri=\"sip:bob@ua2.example.com\">\n
      \                      </target>\n                      </local>\n           </dialog>\n
      \  </dialog-info>\n"
    title: 11.6.  Appearance Release
  - contents:
    - "11.7.  Appearance Pickup\n   In this scenario, Bob has an established dialog
      with Carol created\n   using the call flows of Figures 1 or 2.  Bob then places
      Carol on\n   hold.  Alice receives a notification of this and renders this on\n
      \  Alice's UI.  Alice subsequently picks up the held call and has a\n   established
      session with Carol.  Finally, Carol hangs up.  Alice must\n   PUBLISH F32 to
      indicate that the INVITE F38 will be an attempt to\n   pickup the dialog between
      Carol and Bob and, hence, may use the same\n   appearance number.  This example
      also shows Secure SIP (sips) being\n   used.\n   Carol        Proxy           Alice
      \    Appearance Agent         Bob\n   |              |               |              |
      \                 |\n   |<================= Both way RTP established ===================>|\n
      \  |              |               |              |                  |\n   |
      \             |<------------------------------(hold) INVITE F22<|\n   |<- INVITE
      F23<|               |              |                  |\n   |              |
      \              |              |                  |\n   |>F24 200 OK ->|               |
      \             |                  |\n   |              |>F25 200 OK ------------------------------------>|\n
      \  |              |               |              |                  |\n   |
      \             |<--------------------------------------- ACK F26<|\n   |<----
      ACK F27<|               |              |                  |\n   |              |<
      - - - - - - - - - - - - - ->|                  |\n   |              |               |
      \             |                  |\n   |              |               |<- NOTIFY
      F28<|                  |\n   |              |               |              |
      \                 |\n   |              |               |>F29 200 OK ->|                  |\n
      \  |              |               |              |>F30 NOTIFY ----->|\n   |
      \             |               |              |                  |\n   |              |
      \              |              |<----- 200 OK F31<|\n   |              |               |
      \             |                  |\n   |              |  Alice decides to pick
      up the call              |\n   |              |               |              |
      \                 |\n   |              |               |>F32 PUBLISH->|                  |\n
      \  |              |               |              |                  |\n   |
      \             |               |<- 200 OK F33<|                  |\n   |              |
      \              |              |                  |\n   |              |               |<-
      NOTIFY F34<|                  |\n   |              |               |              |
      \                 |\n   |              |               |>F35 200 OK ->|                  |\n
      \  |              |               |              |>F36 NOTIFY ----->|\n   |
      \             |               |              |                  |\n   |              |
      \              |              |<----- 200 OK F37<|\n   |              |<-- INVITE
      F38<|              |                  |\n   |<- INVITE F39<|(w/ Replaces)  |
      \             |                  |\n   |( w/ Replaces)|               |              |
      \                 |\n   |>F40 200 OK ->|               |              |                  |\n
      \  |              |>F41 200 OK -->|              |                  |\n   |
      \             |               |              |                  |\n   |              |<
      - - - - - - - - - - - - - ->|                  |\n   |              |               |
      \             |                  |\n   |              |               |              |>F42
      NOTIFY ----->|\n   |              |               |              |                  |\n
      \  |              |               |              |<----- 200 OK F43<|\n   |
      \             |               |<- NOTIFY F44<|                  |\n   |              |
      \              |              |                  |\n   |              |               |>F45
      200 OK ->|                  |\n   |              |               |              |
      \                 |\n   |              |<----- ACK F46<|              |                  |\n
      \  |<---- ACK F47<|               |              |                  |\n   |
      \             |               |              |                  |\n   |<= Both
      way RTP established =>|              |                  |\n   |              |
      \              |              |                  |\n   |>F48 BYE ---->|               |
      \             |                  |\n   |              |>F49 BYE --------------------------------------->|\n
      \  |              |               |              |                  |\n   |
      \             |<------------------------------------ OK 200 F50<|\n   |<- 200
      OK F51<|               |              |                  |\n   |              |
      \              |              |                  |\n   |              |< - -
      - - - - - - - - - - - ->|                  |\n   |              |               |
      \             |                  |\n   |              |               |<- NOTIFY
      F52<|                  |\n   |              |               |              |
      \                 |\n   |              |               |>F53 200 OK ->|                  |\n
      \  |              |               |              |                  |\n   |
      \             |               |              |>F54 NOTIFY ----->|\n   |              |
      \              |              |                  |\n   |              |               |
      \             |<----- 200 OK F55<|\n   Figure 7. Appearance Pickup Example\n
      \  F28 Appearance ----> Alice\n   NOTIFY sips:alice@ua1.example.com SIP/2.0\n
      \  From: <sips:HelpDesk@example.com>;tag=151702541050937\n   To: <sips:alice@example.com>;tag=18433323-C3D237CE\n
      \  Call-ID: 1e361d2f-a9f51109-bafe31d4\n   CSeq: 12 NOTIFY\n   Via: SIP/2.0/TLS
      appearanceagent.example.com\n    ;branch=z9hG4bK1403\n   Max-Forwards: 70\n
      \  Content-Type: application/dialog-info+xml\n   Event: dialog;shared\n   Subscription-State:
      active;expires=1800\n   Contact: <sips:appearanceagent.example.com>\n   Content-Length:
      ...\n   <?xml version=\"1.0\"?>\n   <dialog-info xmlns=\"urn:ietf:params:xml:ns:dialog-info\"\n
      \               xmlns:sa=\"urn:ietf:params:xml:ns:sa-dialog-info\"\n                version=\"10\"\n
      \               state=\"partial\"\n                entity=\"sips:HelpDesk@example.com\">\n
      \     <dialog id=\"id3d4f9c83\"\n            call-id=\"f3b3cbd0-a2c5775e-5df9f8d5\"\n
      \           local-tag=\"15A3DE7C-9283203B\"\n            remote-tag=\"65a98f7c-1dd2-11b2-88c6-b0316298f7c\"\n
      \           direction=\"initiator\">\n            <sa:appearance>1</sa:appearance>\n
      \           <sa:exclusive>false</sa:exclusive>\n            <state>active</state>\n
      \           <local>\n              <target uri=\"sips:bob@ua2.example.com\">\n
      \               <param pname=\"+sip.rendering\" pval=\"no\"/>\n              </target>\n
      \           </local>\n            <remote>\n              <identity>sips:carol@example.com</identity>\n
      \             <target uri=\"sips:carol@ua3.example.com\" />\n            </remote>\n
      \      </dialog>\n   </dialog-info>\n   F32 Alice ----> Appearance Agent\n   PUBLISH
      sips:HelpDesk@example.com SIP/2.0\n   Via: SIP/2.0/TLS ua2.example.com;branch=z9hG4bKa5d6cf61F5FBC05A\n
      \  From: <sips:HelpDesk@example.com>;tag=44150CC6-A7B7919D\n   To: <sips:alice@example.com>;tag=428765950880801\n
      \  CSeq: 11 PUBLISH\n   Call-ID: 87837Fkw87asfds\n   Contact: <sips:alice@ua2.example.com>\n
      \  Event: dialog;shared\n   Max-Forwards: 70\n   Content-Type: application/dialog-info+xml\n
      \  Content-Length: ...\n   <?xml version=\"1.0\"?>\n   <dialog-info xmlns=\"urn:ietf:params:xml:ns:dialog-info\"\n
      \               xmlns:sa=\"urn:ietf:params:xml:ns:sa-dialog-info\"\n                version=\"10\"\n
      \               state=\"full\"\n                entity=\"sips:HelpDesk@example.com\">\n
      \     <dialog id=\"id3d4f9c83\"\n          call-id=\"3d57cd17-47deb849-dca8b6c6\"\n
      \                        local-tag=\"8C4183CB-BCEAB710\" >\n            <sa:appearance>1</sa:appearance>\n
      \           <sa:exclusive>false</sa:exclusive>\n            <sa:replaced-dialog\n
      \             call-id=\"f3b3cbd0-a2c5775e-5df9f8d5\"\n              from-tag=\"15A3DE7C-9283203B\"\n
      \             to-tag=\"65a98f7c-1dd2-11b2-88c6-b03162323164+65a98f7c\" />\n
      \           <state>trying</state>\n            <local>\n              <target
      uri=\"sips:alice@ua1.example.com\">\n                <param pname=\"+sip.rendering\"
      pval=\"yes\"/>\n              </target>\n            </local>\n            <remote>\n
      \               <target uri=\"sips:carol@ua3.example.com\" />\n            </remote>\n
      \      </dialog>\n   </dialog-info>\n   F38 Alice ----> Proxy\n   INVITE sips:carol@example.com
      SIP/2.0\n   Via: SIP/2.0/TLS ua1.example.com;branch=z9hG4bK4ea695b5B376A60C\n
      \  From: <sips:HelpDesk@example.com>;tag=8C4183CB-BCEAB710\n   To: <sips:carol@example.com:5075>\n
      \  CSeq: 1 INVITE\n   Call-ID: 3d57cd17-47deb849-dca8b6c6\n   Contact: <sips:alice@ua1.example.com>\n
      \  <all-one-line>\n   Replaces: f3b3cbd0-a2c5775e-5df9f8d5;to-tag=65a98f7c\n
      \  -1dd2-11b2-88c6-b03162323164+65a98f7c;from-tag=15A3DE7C-9283203B\n   </all-one-line>\n
      \  Max-Forwards: 70\n   Content-Type: application/sdp\n   Content-Length: 223\n
      \  v=0\n   o=- 1102980497 1102980497 IN IP4 ua1.example.com\n   s=IP SIP UA\n
      \  c=IN IP4 ua1.example.com\n   t=0 0\n   a=sendrecv\n   m=audio 2238 RTP/AVP
      0 8 101\n   a=rtpmap:0 PCMU/8000\n   a=rtpmap:8 PCMA/8000\n   a=rtpmap:101 telephone-event/8000\n"
    title: 11.7.  Appearance Pickup
  - contents:
    - "11.8.  Call between UAs within the Group\n   In this scenario, Bob calls Alice
      who is also in the shared\n   appearance group.  Only one appearance number
      is used for this\n   dialog.  This example also shows the use of the 'exclusive'
      tag to\n   indicate that other UAs in the group can not join or take this\n
      \  dialog.\n   Carol        Proxy           Alice     Appearance Agent         Bob\n
      \  |              |               |              |                  |\n   |
      \             |<--------------------  INVITE (to Alice's UA) F1<|\n   |              |
      \              |              |                  |\n   |              |< - -
      - - - - - - - - - - - ->|                  |\n   |              |               |
      \             |                  |\n   |              |               |              |
      \                 |\n   |              |               |<-- NOTIFY F2<|                  |\n
      \  |              |               |              |                  |\n   |
      \             |               |>F3 200 OK -->|                  |\n   |              |
      \              |              |>F4 NOTIFY ------>|\n   |              |               |
      \             |                  |\n   |              |               |              |<------
      200 OK F5<|\n   |              |>F6 INVITE --->|              |                  |\n
      \  |              | (appearance=1)|              |                  |\n   |
      \             |               |              |                  |\n   |              |<------
      180 F7<|              |                  |\n   |              |               |
      \             |                  |\n   |              |>F8 180  --------------------------------------->|\n
      \  |              |               |              |                  |\n   |
      \             |< - - - - - - - - - - - - - ->|                  |\n   |              |
      \              |              |                  |\n   |              |               |<--
      NOTIFY F9<|                  |\n   |              |               |              |
      \                 |\n   |              |               |>F10 200 OK ->|                  |\n
      \  |              |               |              |>F11 NOTIFY ----->|\n   |
      \             |               |              |                  |\n   |              |
      \              |              |<----- 200 OK F12<|\n   |              |<-- 200
      OK F13<|              |                  |\n   |              |               |
      \             |                  |\n   |              |>F14 200 OK ------------------------------------>|\n
      \  |              |               |              |                  |\n   |
      \             |<--------------------------------------- ACK F15<|\n   |              |
      \              |              |                  |\n   |              |>F16
      ACK ----->|              |                  |\n   |              |               |
      \             |                  |\n   |              |               |<=======
      RTP established =======>|\n   |              |               |              |
      \                 |\n   |              |< - - - - - - - - - - - - - ->|                  |\n
      \  |              |               |              |                  |\n   |
      \             |               |<- NOTIFY F17<|                  |\n   |              |
      \              |              |                  |\n   |              |               |>F18
      200 OK ->|                  |\n   |              |               |              |>F19
      NOTIFY ----->|\n   |              |               |              |                  |\n
      \  |              |               |              |<----- 200 OK F24<|\n   |
      \             |               |              |                  |\n   Figure
      8. Call between UAs within the Group Example\n   F19 Appearance Agent ---->
      Bob\n   NOTIFY sip:bob@ua1.example.com SIP/2.0\n   From: <sip:HelpDesk@example.com>;tag=497585728578386\n
      \  To: <sip:bob@example.com>;tag=633618CF-B9C2EDA4\n   Call-ID: a7d559db-d6d7dcad-311c9e3a\n
      \  CSeq: 7 NOTIFY\n   Via: SIP/2.0/UDP appearanceagent.example.com\n    ;branch=z9hG4bK1711759878512309\n
      \  Max-Forwards: 70\n   Content-Type: application/dialog-info+xml\n   Event:
      dialog;shared\n   Subscription-State: active;expires=1500\n   Contact: <sip:appearanceagent.example.com>\n
      \  Content-Length: ...\n   <?xml version=\"1.0\"?>\n   <dialog-info xmlns=\"urn:ietf:params:xml:ns:dialog-info\"\n
      \               xmlns:sa=\"urn:ietf:params:xml:ns:sa-dialog-info\"\n                version=\"10\"\n
      \               state=\"partial\"\n                entity=\"sip:HelpDesk@example.com\">\n
      \     <dialog id=\"3xdsd4f9c83\"\n              call-id=\"b3cbd0-ad2c5775e-5df9f8d5\"\n
      \                local-tag=\"34322kdfr234f\"\n              remote-tag=\"3153DE7C-928203B\"\n
      \             direction=\"initiator\">\n            <sa:exclusive>true</sa:exclusive>\n
      \           <sa:appearance>1</sa:appearance>\n            <state>confirmed</state>\n
      \           <local>\n              <target uri=\"sip:bob@ua2.example.com\">\n
      \             </target>\n            </local>\n            <remote>\n              <identity>sip:HelpDesk@example.com</identity>\n
      \             <target uri=\"sip:alice@ua1.example.com\" />\n            </remote>\n
      \      </dialog>\n       <dialog id=\"4839589\"\n              call-id=\"b3cbd0-ad2c5775e-5df9f8d5\"\n
      \             local-tag=\"3153DE7C-928203B\"\n                 remote-tag=\"34322kdfr234f\"\n
      \             direction=\"responder\">\n            <sa:exclusive>true</sa:exclusive>\n
      \           <sa:appearance>1</sa:appearance>\n            <state>confirmed</state>\n
      \           <local>\n               <target uri=\"sip:alice@ua1.example.com\"
      />\n            </local>\n            <remote>\n              <identity>sip:HelpDesk@example.com</identity>\n
      \             <target uri=\"sip:bob@ua2.example.com\" />\n            </remote>\n
      \      </dialog>\n   </dialog-info>\n"
    title: 11.8.  Call between UAs within the Group
  - contents:
    - "11.9.  Consultation Hold with Appearances\n   In this scenario, Bob has a call
      with Carol.  Bob makes a\n   consultation call to Alice by putting Carol on
      hold and calling\n   Alice.  Bob's UA chooses not to have an appearance number
      for the\n   call to Alice since it is treating it as part of the call to Carol.\n
      \  He indicates this in the PUBLISH F32, which contains the 'shared'\n   Event
      header field parameter but no <appearance> element.  The\n   PUBLISH is sent
      before the INVITE to Alice to ensure no appearance\n   number is assigned by
      the Appearance Agent.  Finally, Bob hangs up\n   with Alice and resumes the
      call with Carol.  Dialog notifications of\n   the consultation call are not
      shown, as they are not used.\n   Note that if Carol hangs up while Bob is consulting
      with Alice, Bob\n   can decide if he wants to reuse the appearance number used
      with Carol\n   for the call with Alice.  If not, Bob publishes the termination
      of\n   the dialog with Carol and the Appearance Agent will re-allocate the\n
      \  appearance.  If he wants to keep the appearance, Bob will publish the\n   termination
      of the dialog with Carol and also publish the appearance\n   with the dialog
      with Alice.  This will result in Bob keeping the\n   appearance number until
      he reports the dialog with Alice terminated.\n   Note that the call flow would
      be similar if Bob called a music on\n   hold server instead of Alice to implement
      a music on hold service as\n   described in [RFC7088].\n   Carol        Proxy
      \          Alice     Appearance Agent         Bob\n   |              |               |
      \             |                  |\n   |<================= Both way RTP established
      ===================>|\n   |              |               |              |                  |\n
      \  |              |<------------------------------(hold) INVITE F22<|\n   |<-
      INVITE F23<|               |              |                  |\n   |              |
      \              |              |                  |\n   |>F24 200 OK ->|               |
      \             |                  |\n   |              |>F25 200 OK ------------------------------------>|\n
      \  |              |               |              |                  |\n   |
      \             |<--------------------------------------- ACK F26<|\n   |<----
      ACK F27<|               |              |                  |\n   |              |<
      - - - - - - - - - - - - - ->|                  |\n   |              |               |
      \             |                  |\n   |              |               |<- NOTIFY
      F28<|                  |\n   |              |               |              |
      \                 |\n   |              |               |>F29 200 OK ->|                  |\n
      \  |              |               |              |>F30 NOTIFY ----->|\n   |
      \             |               |              |                  |\n   |              |
      \              |              |<----- 200 OK F31<|\n   |              |               |
      \             |                  |\n   |              |  Bob makes a consultation
      call to Alice         |\n   |              |               |              |
      \                 |\n   |              |               |              |<----
      PUBLISH F32<|\n   |              |               |              |                  |\n
      \  |              |               |              |>F33 200 OK ----->|\n   |
      \             |               |              |                  |\n   |              |<------------------------------------
      INVITE F34<|\n   |              |               |              |                  |\n
      \  |              |>F35 INVITE -->|              |                  |\n   |
      \             |               |              |                  |\n   |              |<--
      200 OK F36<|              |                  |\n   |              |               |
      \             |                  |\n   |              |>F37 200 OK ------------------------------------>|\n
      \  |              |               |              |                  |\n   |
      \             |<--------------------------------------- ACK F38<|\n   |              |
      \              |              |                  |\n   |              |>F39
      ACK ----->|              |                  |\n   |              |               |
      \             |                  |\n   |              |               |<=======
      RTP established =======>|\n   |              |               |              |
      \                 |\n   |              |            Bob hangs up with Alice
      \             |\n   |              |               |              |                  |\n
      \  |              |<--------------------------------------- BYE F40<|\n   |
      \             |               |              |                  |\n   |              |>F41
      BYE ----->|              |                  |\n   |              |               |
      \             |                  |\n   |              |<-- 200 OK F42<|              |
      \                 |\n   |              |               |              |                  |\n
      \  |              |>F43 200 OK ------------------------------------>|\n   |
      \             |               |              |                  |\n   |              |<----------------------------(unhold)
      INVITE F44<|\n   |<- INVITE F45<|               |              |                  |\n
      \  |              |               |              |                  |\n   |>F46
      200 OK ->|               |              |                  |\n   |              |>F47
      200 OK ------------------------------------>|\n   |              |               |
      \             |                  |\n   |              |<---------------------------------------
      ACK F48<|\n   |<---- ACK F49<|               |              |                  |\n
      \  |              |< - - - - - - - - - - - - - ->|                  |\n   |
      \             |               |              |                  |\n   |              |
      \              |<- NOTIFY F50<|                  |\n   |              |               |
      \             |                  |\n   |              |               |>F51
      200 OK ->|                  |\n   |              |               |              |>F52
      NOTIFY ----->|\n   |              |               |              |                  |\n
      \  |              |               |              |<----- 200 OK F53<|\n   |
      \             |               |              |                  |\n   |<=================
      Both way RTP established ===================>|\n   |              |               |
      \             |                  |\n   Figure 9. Consultation Hold with Appearances
      Example\n   F32 Bob ----> Appearance Agent\n   PUBLISH sip:HelpDesk@example.com
      SIP/2.0\n   Via: SIP/2.0/UDP ua2.example.com;branch=z9hG4bKa5d6cf61F5FBC05A\n
      \  From: <sip:bob@example.com>;tag=44150CC6-A7B7919D\n   To: <sip:HelpDesk@example.com>;tag=428765950880801\n
      \  CSeq: 11 PUBLISH\n   Call-ID: 44fwF144-F12893K38424\n   Contact: <sip:bob@ua2.example.com>\n
      \  Event: dialog;shared\n   Max-Forwards: 70\n   Content-Type: application/dialog-info+xml\n
      \  Content-Length: ...\n   <?xml version=\"1.0\"?>\n   <dialog-info xmlns=\"urn:ietf:params:xml:ns:dialog-info\"\n
      \               xmlns:sa=\"urn:ietf:params:xml:ns:sa-dialog-info\"\n                version=\"10\"\n
      \               state=\"full\"\n                entity=\"sip:HelpDesk@example.com\">\n
      \     <dialog id=\"id3d4f9c83\"\n              call-id=\"b3cbd0-ad2c5775e-5df9f8d5\"\n
      \             local-tag=\"3153DE7C-928203B\"\n              direction=\"initiator\">\n
      \           <sa:exclusive>true</sa:exclusive>\n            <state>trying</state>\n
      \           <local>\n              <target uri=\"sip:bob@ua2.example.com\">\n
      \             </target>\n            </local>\n            <remote>\n              <identity>sip:HelpDesk@example.com</identity>\n
      \             <target uri=\"sip:alice@ua1.example.com\" />\n            </remote>\n
      \      </dialog>\n   </dialog-info>\n"
    title: 11.9.  Consultation Hold with Appearances
  - contents:
    - "11.10.  Joining or Bridging an Appearance\n   In this call flow, a call answered
      by Bob is joined by Alice or\n   \"bridged\".  The Join header field is used
      by Alice to request this\n   bridging.  If Bob did not support media mixing,
      Bob could obtain\n   conferencing resources as described in [RFC4579].\n   Carol
      \   Forking Proxy Appearance Agent  Alice      Bob\n     |            |             |
      \            |         |\n     |<=============Both way RTP established===========>|\n
      \    |            |             |             |         |\n     |            |
      \            |< PUBLISH F22|         |\n     |            |             |             |
      \        |\n     |            |             |>F23 200 OK >|         |\n     |
      \           |             |             |         |\n     |            |<----
      INVITE (w/ Join) F24<|         |\n     |            |             |             |
      \        |\n     |            |>F25 INVITE (w/Join)---------------->|\n     |
      \           |             |             |         |\n     |            |<----
      OK 200 Contact:Bob;isfocus F26<|\n     |            |             |             |
      \        |\n     |            |< - - - - - >|             |         |\n     |
      \           |             |             |         |\n     |            |             |>F27
      NOTIFY >|         |\n     |            |             |             |         |\n
      \    |            |             |< 200 OK F28<|         |\n     |            |
      \            |             |         |\n     |            |             |>F29
      NOTIFY ---------->|\n     |            |             |             |         |\n
      \    |            |             |<F30 200 OK ----------<|\n     |            |
      \            |             |         |\n     |            |>F31 200 OK Contact:B----->|
      \        |\n     |            |             |             |         |\n     |
      \           |<----------------- ACK F32<|         |\n     |            |             |
      \            |         |\n     |            |>ACK F33---------------------------->|\n
      \    |            |             |             |         |\n     |            |<-----INVITE
      Contact:Bob;isfocus F34<|\n     |<-INVITE F35|             |             |         |\n
      \    |            |             |             |         |\n     |>F26 200 -->|
      \            |             |         |\n     |            |>F37 200 OK ------------------------>|\n
      \    |            |             |             |         |\n     |            |<---------------------------
      ACK F38<|\n     |<--- ACK F39|             |             |         |\n     |
      \           |             |             |<==RTP==>|\n     |<=============Both
      way RTP established===========>|\n     |            |             |             |
      \        |\n     |            |< - - - - - >|             |         |\n     |
      \           |             |             |         |\n     |            |             |>F40
      NOTIFY >|         |\n     |            |             |             |         |\n
      \    |            |             |< 200 OK F41<|         |\n     |            |
      \            |             |         |\n     |            |             |>F42
      NOTIFY ---------->|\n     |            |             |             |         |\n
      \    |            |             |<F43 200 OK ----------<|\n     |            |
      \            |             |         |\n   Figure 10. Joining or Bridging an
      Appearance Example\n   F22 Alice ----> Appearance Agent\n   PUBLISH sip:HelpDesk@example.com
      SIP/2.0\n   Via: SIP/2.0/UDP ua2.example.com;branch=z9hG4bKa5d6cf61F5FBC05A\n
      \  From: <sip:alice@example.com>;tag=44150CC6-A7B7919D\n   To: <sip:HelpDesk@example.com>;tag=428765950880801\n
      \  CSeq: 11 PUBLISH\n   Call-ID: 87837Fkw87asfds\n   Contact: <sip:alice@ua2.example.com>\n
      \  Event: dialog;shared\n   Max-Forwards: 70\n   Content-Type: application/dialog-info+xml\n
      \  Content-Length: ...\n   <?xml version=\"1.0\"?>\n   <dialog-info xmlns=\"urn:ietf:params:xml:ns:dialog-info\"\n
      \               xmlns:sa=\"urn:ietf:params:xml:ns:sa-dialog-info\"\n                version=\"10\"\n
      \               state=\"full\"\n                entity=\"sip:HelpDesk@example.com:5060\">\n
      \     <dialog id=\"id3d4f9c83\"\n          call-id=\"dc95da63-60db1abd-d5a74b48\"\n
      \         local-tag=\"605AD957-1F6305C2\" >\n            <sa:appearance>1</sa:appearance>\n
      \           <sa:exclusive>false</sa:exclusive>\n            <sa:joined-dialog\n
      \             call-id=\"14-1541707345\"\n              from-tag=\"44BAD75D-E3128D42\"\n
      \             to-tag=\"d3b06488-1dd1-11b2-88c5-b03162323164+d3e48f4c\" />\n
      \           <state>trying</state>\n            <local>\n              <target
      uri=\"sip:alice@ua1.example.com\">\n              </target>\n            </local>\n
      \           <remote>\n                <target uri=\"sip:bob@example.com\" />\n
      \           </remote>\n       </dialog>\n   </dialog-info>\n   F24 Alice ---->
      Proxy\n   INVITE sip:bob@ua.example.com SIP/2.0\n   Via: SIP/2.0/UDP ua1.example.com;branch=z9hG4bKcc9d727c2C29BE31\n
      \  From: <sip:HelpDesk@example.com>;tag=605AD957-1F6305C2\n   To: <sip:bob@ua.example.com>\n
      \  CSeq: 2 INVITE\n   Call-ID: dc95da63-60db1abd-d5a74b48\n   Contact: <sip:alice@ua1.example.com>\n
      \  <all-one-line>\n   Join: 14-1541707345;to-tag=d3b06488-1dd1-11b2-88c5\n   -b03162323164+d3e48f4c;from-tag=44BAD75D-E3128D42\n
      \  </all-one-line>\n   Max-Forwards: 70\n   Content-Type: application/sdp\n
      \  Content-Length: 223\n   v=0\n   o=- 1103061265 1103061265 IN IP4 ua1.example.com\n
      \  s=IP SIP UA\n   c=IN IP4 ua1.example.com\n   t=0 0\n   a=sendrecv\n   m=audio
      2236 RTP/AVP 0 8 101\n   a=rtpmap:0 PCMU/8000\n   a=rtpmap:8 PCMA/8000\n   a=rtpmap:101
      telephone-event/8000\n"
    title: 11.10.  Joining or Bridging an Appearance
  - contents:
    - "11.11.  Loss of Appearance during Allocation\n   Bob reserves an appearance
      with a PUBLISH, sends an INVITE to Carol,\n   then becomes unreachable.  When
      he fails to refresh his publication\n   to the appearance agent, the Appearance
      Agent declares the dialog\n   terminated and frees up the appearance using NOTIFYs
      F14 and F16.\n   After retransmitting the NOTIFY to Bob (in not shown messages
      F17,\n   F18, etc.), the subscription is terminated.\n   Carol        Proxy
      \          Alice     Appearance Agent         Bob\n   |              |               |
      \             |                  |\n   |              |               |              |<-----
      PUBLISH F1<|\n   |              |               |              |                  |\n
      \  |              |               |              |>F2 200 OK ------>|\n   |
      \             |               |              |                  |\n   |              |
      \              |<-- NOTIFY F3<|                  |\n   |              |               |
      \             |                  |\n   |              |               |>F4 200
      OK -->|                  |\n   |              |               |              |-------
      NOTIFY F5>|\n   |              |               |              |                  |\n
      \  |              |               |              |<F6 200 OK ------<|\n   |
      \             |               |              |                  |\n   |              |<-------------------------------------
      INVITE F7<|\n   |              |               |              |                  |\n
      \  |              |>F8 100 Trying --------------------------------->|\n   |<--
      INVITE F9<|               |              |                  |\n   |              |
      \              |              |<---- PUBLISH F10<|\n   |              |               |
      \             |                  |\n   |              |               |              |>F11
      200 OK ----->|\n   |              |               |              |                  |\n
      \  |>F12 180  --->|               |              |                  |\n   |
      \             |>F13 180 Ringing ------------------------------->|\n   |              |
      \              |              |                  |\n   |              |               |
      \             | Bob goes offline |\n   |              |               |              |
      \                 |\n   |              |               | Appearance selection
      times out  |\n   |              |               |              |                  |\n
      \  |              |               |<- NOTIFY F14<|                  |\n   |
      \             |               |              |                  |\n   |              |
      \              |>F15 200 OK ->|                  |\n   |              |               |
      \             |------ NOTIFY F16>|\n   |              |               |              |
      \                 |\n   |              |               |   NOTIFY is retransmitted
      \      |\n   Figure 11. Loss of Appearance during Allocation Example\n"
    title: 11.11.  Loss of Appearance during Allocation
  - contents:
    - "11.12.  Appearance Seizure Contention Race Condition\n   Bob and Alice both
      try to reserve appearance 2 by publishing at the\n   same time.  The Appearance
      Agent allocates the appearance to Bob by\n   sending a 200 OK and denies it
      to Alice by sending a 400 (Bad\n   Request) response.  After the NOTIFY F5,
      Alice learns that Bob is\n   using appearance 2.  Alice then attempts to reserve
      appearance 3 by\n   publishing, which is then accepted.\n   Carol        Proxy
      \          Alice     Appearance Agent         Bob\n   |              |               |
      \             |                  |\n   |              |               |              |<-----
      PUBLISH F1<|\n   |              |               |              |        (appearance=2)\n
      \  |              |               |>F2 PUBLISH ->|                  |\n   |
      \             |               |     (appearance=2)              |\n   |              |
      \              |              |                  |\n   |              |               |
      \             |>F3 200 OK ------>|\n   |              |               |<----
      F4 400 <|                  |\n   |              |               |              |
      \                 |\n   |              |               |<-- NOTIFY F5<|                  |\n
      \  |              |               |              |                  |\n   |
      \             |               |>F6 200 OK -->|                  |\n   |              |
      \              |              |------- NOTIFY F7>|\n   |              |               |
      \             |                  |\n   |              |               |              |<F8
      200 OK ------<|\n   |              |               |              |                  |\n
      \  |              |<------------------------------------- INVITE F9<|\n   |
      \             |               |              |                  |\n   |              |>F10
      100 Trying -------------------------------->|\n   |<- INVITE F11<|               |
      \             |                  |\n   |              |               |              |<----
      PUBLISH F12<|\n   |              |               |              |        (appearance=2)\n
      \  |              |               |              |>F13 200 OK ----->|\n   |
      \             |               |>F14 PUBLISH->|                  |\n   |              |
      \              |     (appearance=3)              |\n   |              |               |
      \             |                  |\n   |              |               |<---
      F15 200 <|                  |\n   |              |               |              |
      \                 |\n   |              |               |<- NOTIFY F16<|                  |\n
      \  |              |               |              |                  |\n   |
      \             |               |>F17 200 OK ->|                  |\n   Dave           |
      \              |              |------ NOTIFY F18>|\n   |              |               |
      \             |                  |\n   |              |               |              |<F19
      200 OK -----<|\n   |              |<-- INVITE F20<|              |                  |\n
      \  |              |               |              |                  |\n   |
      \             |>F21 100 ----->|              |                  |\n   |<- INVITE
      F22<|               |              |                  |\n   Figure 12. Appearance
      Seizure Contention Race Condition Example\n"
    title: 11.12.  Appearance Seizure Contention Race Condition
  - contents:
    - "11.13.  Appearance Agent Subscription to UAs\n   In this scenario, the Appearance
      Agent does not have any way of\n   knowing Bob's dialog state information, except
      through Bob.  This\n   could be because the Appearance Agent is not part of
      a B2BUA, or\n   perhaps Bob is remotely registering.  When Bob registers, the\n
      \  Appearance Agent receives a registration event package notification\n   from
      the registrar.  The Appearance Agent then SUBSCRIBEs to Bob's\n   dialog event
      state using Event:dialog in the SUBSCRIBE.  Whenever\n   Bob's dialog state
      changes, Bob's UA sends a NOTIFY to the Appearance\n   Agent which then notifies
      the other UAs in the group.\n   Carol        Proxy           Alice     Appearance
      Agent         Bob\n   |              |               |              |                  |\n
      \  |              |<----------------------------------- REGISTER F1<|\n   |
      \             |               |              |                  |\n   |              |>F2
      200 OK ------------------------------------->|\n   |              |               |
      \             |                  |\n   |              |>F3 NOTIFY ------------------>|
      \                 |\n   |              |               |              |                  |\n
      \  |              |<------------------ 200 OK F4<|                  |\n   |
      \             |               |              |---- SUBSCRIBE F5>|\n   |              |
      \              |              |                  |\n   |              |               |
      \             |<F6 200 OK ------<|\n   |              |               |              |
      \                 |\n   |              |               |              |<------
      NOTIFY F7<|\n   |              |               |              |                  |\n
      \  |              |               |              |>F8 200 OK ------>|\n   |
      \             |               |              |                  |\n   |              |
      \              |              |<--- SUBSCRIBE F9<|\n   |              |               |
      \             |                  |\n   |              |               |              |>F10
      200 OK ----->|\n   |              |               |              |                  |\n
      \  |              |               |              |------ NOTIFY F11>|\n   |
      \             |               |              |                  |\n   |              |
      \              |              |<F12 200 OK -----<|\n   |              |               |
      \             |                  |\n   |              |<------------------------------------
      INVITE F13<|\n   |              |               |              |                  |\n
      \  |              |>F14 100 Trying -------------------------------->|\n   |<-
      INVITE F15<|               |              |                  |\n   |              |
      \              |              |<----- NOTIFY F16<|\n   |              |               |
      \             |                  |\n   |              |               |              |>F17
      200 OK ----->|\n   |              |               |<- NOTIFY F18<|                  |\n
      \  |              |               |              |                  |\n   |
      \             |               |>F19 200 OK ->|                  |\n   |              |
      \              |              |------ NOTIFY F20>|\n   |              |               |
      \             |                  |\n   |              |               |              |<F21
      200 OK -----<|\n   |>F22 180  --->|               |              |                  |\n
      \  |              |>F23 180 Ringing ------------------------------->|\n   |
      \             |               |              |                  |\n   |              |
      \              |              |<----- NOTIFY F24<|\n   |              |               |
      \             |                  |\n   |              |               |              |>F25
      200 OK ----->|\n   |              |               |<- NOTIFY F26<|                  |\n
      \  |              |               |              |                  |\n   |
      \             |               |>F27 200 OK ->|                  |\n   |              |
      \              |              |------ NOTIFY F28>|\n   |              |               |
      \             |                  |\n   |              |               |              |<F29
      200 OK -----<|\n   |>F30 200 OK ->|               |              |                  |\n
      \  |              |>F31 200 OK ------------------------------------>|\n   |
      \             |               |              |                  |\n   |              |
      \              |              |<----- NOTIFY F32<|\n   |              |               |
      \             |                  |\n   |              |               |              |>F33
      200 OK ----->|\n   |              |               |              |                  |\n
      \  |              |<--------------------------------------- ACK F34<|\n   |<----
      ACK F35<|               |              |                  |\n   |              |
      \              |              |                  |\n   |<================= Both
      way RTP established ===================>|\n   |              |               |
      \             |                  |\n   |              |               |<- NOTIFY
      F36<|                  |\n   |              |               |              |
      \                 |\n   |              |               |>F37 200 OK ->|                  |\n
      \  |              |               |              |------ NOTIFY F38>|\n   |
      \             |               |              |                  |\n   |              |
      \              |              |<F39 200 OK -----<|\n   |              |               |
      \             |                  |\n   Figure 13. Appearance Agent Subscription
      to UAs Example\n"
    title: 11.13.  Appearance Agent Subscription to UAs
  - contents:
    - "11.14.  Appearance Pickup Race Condition Failure\n   In this scenario, Bob
      has an established dialog with Carol created\n   using the call flows of Figure
      1 or Figure 2.  Bob then places Carol\n   on hold.  Alice receives a notification
      of this and renders this on\n   Alice's UI.  Alice attempts to pick up the call
      but Carol hangs up\n   before the pickup can complete.  Alice cancels the pickup
      attempt\n   with the PUBLISH F48.  Note that the call flow for a failed Join\n
      \  would be almost identical.\n   Carol        Proxy           Alice     Appearance
      Agent         Bob\n   |              |               |              |                  |\n
      \  |<================= Both way RTP established ===================>|\n   |
      \             |               |              |                  |\n   |              |<------------------------------(hold)
      INVITE F22<|\n   |<- INVITE F23<|               |              |                  |\n
      \  |              |               |              |                  |\n   |>F24
      200 OK ->|               |              |                  |\n   |              |>F25
      200 OK ------------------------------------>|\n   |              |               |
      \             |                  |\n   |              |<---------------------------------------
      ACK F26<|\n   |<---- ACK F27<|               |              |                  |\n
      \  |              |               |              |                  |\n   |
      \             |< - - - - - - - - - - - - - ->|                  |\n   |              |
      \              |              |                  |\n   |              |               |<-
      NOTIFY F28<|                  |\n   |              |               |              |
      \                 |\n   |              |               |>F29 200 OK ->|                  |\n
      \  |              |               |              |>F30 NOTIFY ----->|\n   |
      \             |               |              |                  |\n   |              |
      \              |              |<----- 200 OK F31<|\n   |              |               |
      \             |                  |\n   |              |  Alice decides to pick
      up the call              |\n   |              |               |              |
      \                 |\n   |              |               |>F32 PUBLISH->|                  |\n
      \  |              |               |              |                  |\n   |
      \             |               |<- 200 OK F33<|                  |\n   |              |
      \              |              |                  |\n   |              |               |<-
      NOTIFY F34<|                  |\n   |              |               |              |
      \                 |\n   |              |               |>F35 200 OK ->|                  |\n
      \  |              |               |              |>F36 NOTIFY ----->|\n   |
      \             |               |              |                  |\n   |              |
      \              |              |<----- 200 OK F37<|\n   |>F38 BYE ---->|               |
      \             |                  |\n   |              |>F39 BYE --------------------------------------->|\n
      \  |              |               |              |                  |\n   |
      \             |<------------------------------------ OK 200 F40<|\n   |<- 200
      OK F41<|               |              |                  |\n   |              |<--
      INVITE F42<|              |                  |\n   |<- INVITE F43<|(w/ Replaces)
      \ |              |                  |\n   |( w/ Replaces)|               |              |
      \                 |\n   |              |               |              |                  |\n
      \  |>F44 481 ---->|               |              |                  |\n   |
      \             |>F45 481 ----->|              |                  |\n   |<----
      ACK F46<|               |              |                  |\n   |              |<-----
      ACK F47<|              |                  |\n   |              |               |>F48
      PUBLISH->|                  |\n   |              |               |              |
      \                 |\n   |              |               |<- 200 OK F49<|                  |\n
      \  |              |               |              |                  |\n   |
      \             |               |<- NOTIFY F50<|                  |\n   |              |
      \              |              |                  |\n   |              |               |>F51
      200 OK ->|                  |\n   |              |               |              |>F52
      NOTIFY ----->|\n   |              |               |              |                  |\n
      \  |              |               |              |<----- 200 OK F53<|\n   Figure
      14. Appearance Pickup Race Condition Failure Example\n   F48 Alice ----> Appearance
      Agent\n   PUBLISH sip:HelpDesk@example.com SIP/2.0\n   Via: SIP/2.0/UDP ua2.example.com;branch=z9hG4bKa5d6cf61F5FBC05A\n
      \  From: <sip:alice@example.com>;tag=44150CC6-A7B7919D\n   To: <sip:HelpDesk@example.com>;tag=428765950880801\n
      \  CSeq: 11 PUBLISH\n   Call-ID: 87837Fkw87asfds\n   Contact: <sip:alice@ua2.example.com>\n
      \  Event: dialog;shared\n   Max-Forwards: 70\n   Content-Type: application/dialog-info+xml\n
      \  Content-Length: ...\n   <?xml version=\"1.0\"?>\n   <dialog-info xmlns=\"urn:ietf:params:xml:ns:dialog-info\"\n
      \               xmlns:sa=\"urn:ietf:params:xml:ns:sa-dialog-info\"\n                version=\"10\"\n
      \               state=\"full\"\n                entity=\"sip:HelpDesk@example.com\">\n
      \     <dialog id=\"id3d4f9c83\"\n          call-id=\"dc95da63-60db1abd-d5a74b48\"\n
      \         local-tag=\"605AD957-1F6305C2\" >\n            <sa:appearance>1</sa:appearance>\n
      \           <sa:exclusive>false</sa:exclusive>\n            <sa:replaced-dialog\n
      \             call-id=\"14-1541707345\"\n              from-tag=\"44BAD75D-E3128D42\"\n
      \             to-tag=\"d3b06488-1dd1-11b2-88c5-b03162323164+d3e48f4c\" />\n
      \           <state>terminated</state>\n            <local>\n              <target
      uri=\"sip:alice@ua1.example.com\">\n              </target>\n            </local>\n
      \           <remote>\n                <target uri=\"sip:carol@ua3.example.com\"
      />\n            </remote>\n       </dialog>\n   </dialog-info>\n"
    title: 11.14.  Appearance Pickup Race Condition Failure
  - contents:
    - "11.15.  Appearance Seizure Incoming/Outgoing Contention Race Condition\n   Alice
      tries to seize appearance 2 at the same time appearance 2 is\n   allocated to
      an incoming call.  The Appearance Agent resolves the\n   conflict by sending
      a 400 (Bad Request) to Alice.  After the NOTIFY\n   F6, Alice learns that the
      incoming call is using appearance 2.  Alice\n   republishes for appearance 3,
      which is accepted.  Note that this\n   example shows the INVITE being received
      before the NOTIFY from the\n   Appearance Agent.\n   Carol        Proxy           Alice
      \    Appearance Agent         Bob\n   |              |               |              |
      \                 |\n   |>-- INVITE F1>|               |              |                  |\n
      \  |              |< - - - - - - - - - - - - - ->|                  |\n   |
      \             |               |              |                  |\n   |              |
      \              |>F2 PUBLISH ->|                  |\n   |              |               |
      \    (appearance=2)              |\n   |              |               |              |
      \                 |\n   |              |>F3 INVITE (appearance=2) ---------------------->|\n
      \  |              |               |              |                  |\n   |
      \             |>F4 INVITE     |              |                  |\n   |              |(appearance=2)>|
      \             |                  |\n   |              |               |<----
      F5 400 <|                  |\n   |              |               |              |
      \                 |\n   |              |               |<-- NOTIFY F6<|                  |\n
      \  |              |               |              |                  |\n   |
      \             |               |>F7 200 OK -->|                  |\n   |              |
      \              |              |------- NOTIFY F8>|\n   |              |               |
      \             |                  |\n   |              |               |              |<F9
      200 OK ------<|\n   |              |               |              |                  |\n
      \  |              |               |>F10 PUBLISH->|                  |\n   |
      \             |               |     (appearance=3)              |\n   |              |
      \              |              |                  |\n   |              |               |<
      F11 200 OK <|                  |\n   |              |               |              |
      \                 |\n   |              |               |<- NOTIFY F12<|                  |\n
      \  |              |               |              |                  |\n                  |
      \              |>F13 200 OK ->|                  |\n   Dave           |               |
      \             |------ NOTIFY F14>|\n   |              |               |              |
      \                 |\n   |              |               |              |<F15
      200 OK -----<|\n   |              |<-- INVITE F16<|              |                  |\n
      \  |              |               |              |                  |\n   |
      \             |>F17 100 ----->|              |                  |\n   |<- INVITE
      F18<|               |              |                  |\n   Figure 15. Appearance
      Seizure Incoming/Outgoing Contention\n              Race Condition Example\n"
    title: 11.15.  Appearance Seizure Incoming/Outgoing Contention Race Condition
  title: 11.  Example Message Flows
- contents:
  - "12.  Security Considerations\n   Since multiple line appearance features are
    implemented using\n   semantics provided by SIP [RFC3261], the SIP Event Package
    for Dialog\n   State [RFC4235], and the SIP Event Framework [RFC6665] and [RFC3903],\n
    \  security considerations in these documents apply to this document as\n   well.\n
    \  To provide confidentiality, NOTIFY or PUBLISH message bodies that\n   provide
    the dialog state information and the dialog identifiers MAY\n   be encrypted end-to-end
    using the standard mechanisms such as S/MIME\n   described in [RFC3261].  Alternatively,
    sending the NOTIFY and\n   PUBLISH requests over TLS also provides confidentiality,
    although on\n   a hop-by-hop basis.  All SUBSCRIBEs and PUBLISHes between the
    UAs and\n   the Appearance Agent MUST be authenticated.  Without proper\n   authentication
    and confidentiality, a third party could learn\n   information about dialogs associated
    with a AOR and could try to use\n   this information to hijack or manipulate those
    dialogs using SIP call\n   control primitives.\n   This feature relies on standard
    SIP call control primitives such as\n   Replaces and Join.  Proper access controls
    on their use MUST be used\n   so that only members of the shared appearance group
    can use these\n   mechanisms.  All INVITEs with Replaces or Join header fields
    MUST\n   only be accepted if the peer requesting dialog replacement or joining\n
    \  has been properly authenticated using a standard SIP mechanism (such\n   as
    Digest or S/MIME), and authorized to request a replacement.\n   Otherwise, a third
    party could disrupt or hijack existing dialogs in\n   the shared appearance group.\n
    \  For an emergency call, a UA MUST NOT wait for a confirmed seizure of\n   an
    appearance before sending an INVITE.  Waiting for confirmation\n   could inadvertently
    delay or block the emergency call, which by its\n   nature needs to be placed
    as expeditiously as possible.  Instead, a\n   emergency call MUST proceed regardless
    of the status of the PUBLISH\n   transaction.\n"
  title: 12.  Security Considerations
- contents:
  - "13.  IANA Considerations\n   This section registers the SIP Event header field
    parameter 'shared',\n   the SIP Alert-Info header field parameter 'appearance',
    and the XML\n   namespace extensions to the SIP Dialog Package.\n"
  - contents:
    - "13.1.  SIP Event Header Field Parameter: shared\n   This document defines the
      'shared' header field parameter in the\n   Event header field in the \"Header
      Field Parameters and Parameter\n   Values\" registry defined by [RFC3968].\n
      \                                                   Predefined\n  Header Field
      \                 Parameter Name      Values     Reference\n  ----------------------------
      \ ------------------  ---------- ---------\n  Event                         shared
      \              No        RFC 7463\n"
    title: '13.1.  SIP Event Header Field Parameter: shared'
  - contents:
    - "13.2.  SIP Alert-Info Header Field Parameter: appearance\n   This document
      defines the 'appearance' parameter in the Alert-Info\n   header in the \"Header
      Field Parameters and Parameter Values\" registry\n   defined by [RFC3968].\n
      \                                                   Predefined\n   Header Field
      \                 Parameter Name     Values     Reference\n   ----------------------
      \       ---------------    ---------  ---------\n   Alert-Info                    appearance
      \        No         RFC 7463\n"
    title: '13.2.  SIP Alert-Info Header Field Parameter: appearance'
  - contents:
    - "13.3.  URN Sub-Namespace Registration: sa-dialog-info\n   This section registers
      a new XML namespace per the procedures in\n   [RFC3688].\n      URI: urn:ietf:params:xml:ns:sa-dialog-info.\n
      \     Registrant Contact: IETF BLISS working group, <bliss@ietf.org>,\n      Alan
      Johnston <alan.b.johnston@gmail.com>\n      XML:\n      BEGIN\n       <?xml
      version=\"1.0\"?>\n       <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML Basic 1.0//EN\"\n
      \                \"http://www.w3.org/TR/xhtml-basic/xhtml-basic10.dtd\">\n       <html
      xmlns=\"http://www.w3.org/1999/xhtml\">\n       <head>\n         <meta http-equiv=\"content-type\"\n
      \           content=\"text/html;charset=iso-8859-1\"/>\n         <title>Shared
      Appearance Dialog Information Namespace</title>\n       </head>\n       <body>\n
      \       <h1>Namespace for Shared Appearance Dialog Information</h1>\n        <h2>urn:ietf:params:xml:ns:sa-dialog-info</h2>\n
      \       <p>See <a href=\"http://www.rfc-editor.org/rfc/rfc7463.txt\">\n           RFC
      7463</a>.</p>\n       </body>\n       </html>\n      END\n"
    title: '13.3.  URN Sub-Namespace Registration: sa-dialog-info'
  - contents:
    - "13.4.  XML Schema Registration\n   This section registers an XML schema per
      the procedures in [RFC3688].\n      URI: urn:ietf:params:xml:schesa:sa-dialog-info.\n
      \     Registrant Contact: IETF BLISS working group, <bliss@ietf.org>,\n       Alan
      Johnston <alan.b.johnston@gmail.com>\n      The XML for this schema can be found
      in Section 6.\n"
    title: 13.4.  XML Schema Registration
  title: 13.  IANA Considerations
- contents:
  - '14.  References

    '
  - contents:
    - "14.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March
      1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n   [RFC3261]
      \ Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston,\n              A.,
      Peterson, J., Sparks, R., Handley, M., and E.\n              Schooler, \"SIP:
      Session Initiation Protocol\", RFC 3261,\n              June 2002, <http://www.rfc-editor.org/info/rfc3261>.\n
      \  [RFC3515]  Sparks, R., \"The Session Initiation Protocol (SIP) Refer\n              Method\",
      RFC 3515, April 2003,\n              <http://www.rfc-editor.org/info/rfc3515>.\n
      \  [RFC3688]  Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688,\n              January
      2004, <http://www.rfc-editor.org/info/rfc3688>.\n   [RFC3840]  Rosenberg, J.,
      Schulzrinne, H., and P. Kyzivat,\n              \"Indicating User Agent Capabilities
      in the Session\n              Initiation Protocol (SIP)\", RFC 3840, August
      2004,\n              <http://www.rfc-editor.org/info/rfc3840>.\n   [RFC3891]
      \ Mahy, R., Biggs, B., and R. Dean, \"The Session Initiation\n              Protocol
      (SIP) \"Replaces\" Header\", RFC 3891, September\n              2004, <http://www.rfc-editor.org/info/rfc3891>.\n
      \  [RFC3903]  Niemi, A., \"Session Initiation Protocol (SIP) Extension\n              for
      Event State Publication\", RFC 3903, October 2004,\n              <http://www.rfc-editor.org/info/rfc3903>.\n
      \  [RFC3911]  Mahy, R. and D. Petrie, \"The Session Initiation Protocol\n              (SIP)
      \"Join\" Header\", RFC 3911, October 2004,\n              <http://www.rfc-editor.org/info/rfc3911>.\n
      \  [RFC3968]  Camarillo, G., \"The Internet Assigned Number Authority\n              (IANA)
      Header Field Parameter Registry for the Session\n              Initiation Protocol
      (SIP)\", BCP 98, RFC 3968, December\n              2004, <http://www.rfc-editor.org/info/rfc3968>.\n
      \  [RFC4235]  Rosenberg, J., Schulzrinne, H., and R. Mahy, \"An INVITE-\n              Initiated
      Dialog Event Package for the Session Initiation\n              Protocol (SIP)\",
      RFC 4235, November 2005,\n              <http://www.rfc-editor.org/info/rfc4235>.\n
      \  [RFC5234]  Crocker, D. and P. Overell, \"Augmented BNF for Syntax\n              Specifications:
      ABNF\", STD 68, RFC 5234, January 2008,\n              <http://www.rfc-editor.org/info/rfc5234>.\n
      \  [RFC6665]  Roach, A., \"SIP-Specific Event Notification\", RFC 6665,\n              July
      2012, <http://www.rfc-editor.org/info/rfc6665>.\n   [RFC7462]  Liess, L., Ed.,
      Jesske, R., Johnston, A., Worley, D., and\n              P. Kyzivat, \"URNs
      for the Alert-Info Header Field of the\n              Session Initiation Protocol
      (SIP)\", RFC 7462, March 2015,\n              <http://www.rfc-editor.org/info/rfc7462>.\n"
    title: 14.1.  Normative References
  - contents:
    - "14.2.  Informative References\n   [RFC3680]  Rosenberg, J., \"A Session Initiation
      Protocol (SIP) Event\n              Package for Registrations\", RFC 3680, March
      2004,\n              <http://www.rfc-editor.org/info/rfc3680>.\n   [RFC4579]
      \ Johnston, A. and O. Levin, \"Session Initiation Protocol\n              (SIP)
      Call Control - Conferencing for User Agents\", BCP\n              119, RFC 4579,
      August 2006,\n              <http://www.rfc-editor.org/info/rfc4579>.\n   [RFC5359]
      \ Johnston, A., Sparks, R., Cunningham, C., Donovan, S., and\n              K.
      Summers, \"Session Initiation Protocol Service\n              Examples\", BCP
      144, RFC 5359, October 2008,\n              <http://www.rfc-editor.org/info/rfc5359>.\n
      \  [RFC7088]  Worley, D., \"Session Initiation Protocol Service Example\n              --
      Music on Hold\", RFC 7088, February 2014,\n              <http://www.rfc-editor.org/info/rfc7088>.\n"
    title: 14.2.  Informative References
  title: 14.  References
- contents:
  - "Acknowledgements\n   The following individuals were part of the shared appearance
    design\n   team and have provided input and text to the document (in\n   alphabetical
    order):\n   Martin Dolly, Andrew Hutton, Raj Jain, Fernando Lombardo, Derek\n
    \  MacDonald, Bill Mitchell, Michael Procter, and Theo Zourzouvillys.\n   Thanks
    to Chris Boulton for helping with the XML schema.\n   Much of the material has
    been drawn from previous work by Mohsen\n   Soroushnejad, Venkatesh Venkataramanan,
    Paul Pepper, and Anil Kumar,\n   who in turn received assistance from:\n      Kent
    Fritz, John Weald, and Sunil Veluvali of Sylantro Systems;\n      Steve Towlson
    and Michael Procter of Citel Technologies; Rob\n      Harder and Hong Chen of
    Polycom, Inc.; John Elwell and JD Smith of\n      Siemens Communications; Dale
    R. Worley of Pingtel; and Graeme\n      Dollar of Yahoo, Inc.\n   Also thanks
    to Geoff Devine, Paul Kyzivat, Jerry Yin, John Elwell,\n   Dan York, Spenser Dawkins,
    Martin Dolly, and Brett Tate for their\n   comments.\n   Thanks to Carolyn Beeton,
    Francois Audet, Andy Hutton, Tim Ross, Raji\n   Chinnappa, and Harsh Mendiratta
    for their detailed review of the\n   document.\n"
  title: Acknowledgements
- contents:
  - "Authors' Addresses\n   Alan Johnston (editor)\n   Avaya\n   St. Louis, MO\n   United
    States\n   EMail: alan.b.johnston@gmail.com\n   Mohsen Soroushnejad (editor)\n
    \  Sylantro Systems Corp.\n   EMail: msoroush@gmail.com\n   Venkatesh Venkataramanan\n
    \  Sylantro Systems Corp.\n   EMail: vvenkatar@gmail.com\n"
  title: Authors' Addresses
