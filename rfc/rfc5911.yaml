- title: __initial_text__
  contents:
  - '  New ASN.1 Modules for Cryptographic Message Syntax (CMS) and S/MIME

    '
- title: Abstract
  contents:
  - "Abstract\n   The Cryptographic Message Syntax (CMS) format, and many associated\n\
    \   formats, are expressed using ASN.1.  The current ASN.1 modules\n   conform\
    \ to the 1988 version of ASN.1.  This document updates those\n   ASN.1 modules\
    \ to conform to the 2002 version of ASN.1.  There are no\n   bits-on-the-wire\
    \ changes to any of the formats; this is simply a\n   change to the syntax.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc5911.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n     1.1.  Design Notes . . . . . . . . . . . . . . . . . .\
    \ . . . . .  4\n   2.  ASN.1 Module AlgorithmInformation  . . . . . . . . . .\
    \ . . . .  4\n   3.  ASN.1 Module for RFC 3370  . . . . . . . . . . . . . . .\
    \ . . . 14\n   4.  ASN.1 Module for RFC 3565  . . . . . . . . . . . . . . . .\
    \ . . 20\n   5.  ASN.1 Module for RFC 3851  . . . . . . . . . . . . . . . . .\
    \ . 22\n   6.  ASN.1 Module for RFC 3852  . . . . . . . . . . . . . . . . . .\
    \ 24\n   7.  ASN.1 Module for RFC 4108  . . . . . . . . . . . . . . . . . . 34\n\
    \   8.  ASN.1 Module for RFC 4998  . . . . . . . . . . . . . . . . . . 40\n  \
    \ 9.  ASN.1 Module for RFC 5035  . . . . . . . . . . . . . . . . . . 41\n   10.\
    \ ASN.1 Module for RFC 5083  . . . . . . . . . . . . . . . . . . 47\n   11. ASN.1\
    \ Module for RFC 5084  . . . . . . . . . . . . . . . . . . 48\n   12. ASN.1 Module\
    \ for RFC 5275  . . . . . . . . . . . . . . . . . . 50\n   13. Security Considerations\
    \  . . . . . . . . . . . . . . . . . . . 57\n   14. Normative References . . .\
    \ . . . . . . . . . . . . . . . . . . 57\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Some developers would like the IETF to use the latest version\
    \ of\n   ASN.1 in its standards.  Most of the RFCs that relate to security\n \
    \  protocols still use ASN.1 from the 1988 standard, which has been\n   deprecated.\
    \  This is particularly true for the standards that relate\n   to PKIX, CMS, and\
    \ S/MIME.\n   This document updates the following RFCs to use ASN.1 modules that\n\
    \   conform to the 2002 version of ASN.1 [ASN1-2002].  Note that not all\n   the\
    \ modules are updated; some are included to simply make the set\n   complete.\n\
    \   o  RFC 3370, CMS Algorithms [RFC3370]\n   o  RFC 3565, Use of AES in CMS [RFC3565]\n\
    \   o  RFC 3851, S/MIME Version 3.1 Message Specification [RFC3851]\n   o  RFC\
    \ 3852, CMS main [RFC3852]\n   o  RFC 4108, Using CMS to Protect Firmware Packages\
    \ [RFC4108]\n   o  RFC 4998, Evidence Record Syntax (ERS) [RFC4998]\n   o  RFC\
    \ 5035, Enhanced Security Services (ESS) [RFC5035]\n   o  RFC 5083, CMS Authenticated-Enveloped-Data\
    \ Content Type [RFC5083]\n   o  RFC 5084, Using AES-CCM and AES-GCM Authenticated\
    \ Encryption in\n      CMS [RFC5084]\n   o  RFC 5275, CMS Symmetric Key Management\
    \ and Distribution [RFC5275]\n   Note that some of the modules in this document\
    \ get some of their\n   definitions from places different than the modules in\
    \ the original\n   RFCs.  The idea is that these modules, when combined with the\
    \ modules\n   in [RFC5912] can stand on their own and do not need to import\n\
    \   definitions from anywhere else.  Also note that the ASN.1 modules in\n   this\
    \ document have references in their text comments that need to be\n   looked up\
    \ in original RFCs, and that some of those references may\n   have already been\
    \ superseded by later RFCs.\n   The document also includes a module of common\
    \ definitions called\n   \"AlgorithmInformation\".  These definitions are used\
    \ here and in\n   [RFC5912].\n   Note that some of the modules here import definitions\
    \ from the common\n   definitions module, \"PKIX-CommonTypes\", in [RFC5912].\n"
- title: 1.1.  Design Notes
  contents:
  - "1.1.  Design Notes\n   The modules in this document use the object model available\
    \ in the\n   2002 ASN.1 documents to a great extent.  Objects for each of the\n\
    \   different algorithm types are defined.  Also, all of the places where\n  \
    \ the 1988 ASN.1 syntax had ANY holes to allow for variable syntax now\n   use\
    \ objects.\n   Much like the way that the PKIX and S/MIME working groups use the\n\
    \   prefix of id- for object identifiers, this document has also adopted\n   a\
    \ set of two-, three-, and four-letter prefixes to allow for quick\n   identification\
    \ of the type of an object based on its name.  This\n   allows, for example, the\
    \ same back half of the name to be used for\n   the different objects.  Thus,\
    \ \"id-sha1\" is the object identifier,\n   while \"mda-sha1\" is the message\
    \ digest object for \"sha1\".\n   One or more object sets for the different types\
    \ of algorithms are\n   defined.  A single consistent name for each different\
    \ algorithm type\n   is used.  For example, an object set named PublicKeys contains\
    \ the\n   public keys defined in that module.  If no public keys are defined,\n\
    \   then the object set is not created.  When importing these object sets\n  \
    \ into an ASN.1 module, one needs to be able to distinguish between the\n   different\
    \ object sets with the same name.  This is done by using both\n   the module name\
    \ (as specified in the IMPORT statement) and the object\n   set name.  For example,\
    \ in the module for RFC 5280:\n   PublicKeys FROM PKIXAlgs-2008 { 1 3 6 1 5 5\
    \ 7 0 995 }\n   PublicKeys FROM PKIX1-PSS-OAEP-Algorithms { 1 3 6 1 5 5 7  33\
    \ }\n   PublicKeyAlgorithms PUBLIC-KEY ::= { PKIXAlgs-2008.PublicKeys, ...,\n\
    \       PKIX1-PSS-OAEP-Algorithms.PublicKeys }\n"
- title: 2.  ASN.1 Module AlgorithmInformation
  contents:
  - "2.  ASN.1 Module AlgorithmInformation\n   This section contains a module that\
    \ is imported by many other modules\n   in this document.  Note that this module\
    \ is also given in [RFC5912].\n   This module does not come from any existing\
    \ RFC.\n"
- title: AlgorithmInformation-2009
  contents:
  - "AlgorithmInformation-2009\n    {iso(1) identified-organization(3) dod(6) internet(1)\
    \ security(5)\n    mechanisms(5) pkix(7) id-mod(0)\n    id-mod-algorithmInformation-02(58)}\n"
- title: DEFINITIONS EXPLICIT TAGS ::=
  contents:
  - 'DEFINITIONS EXPLICIT TAGS ::=

    '
- title: BEGIN
  contents:
  - 'BEGIN

    '
- title: EXPORTS ALL;
  contents:
  - 'EXPORTS ALL;

    '
- title: IMPORTS
  contents:
  - 'IMPORTS

    '
- title: KeyUsage
  contents:
  - 'KeyUsage

    '
- title: FROM PKIX1Implicit-2009
  contents:
  - "FROM PKIX1Implicit-2009\n    {iso(1) identified-organization(3) dod(6) internet(1)\n\
    \    security(5) mechanisms(5) pkix(7) id-mod(0)\n    id-mod-pkix1-implicit-02(59)}\
    \ ;\n"
- title: '--  Suggested prefixes for algorithm objects are:'
  contents:
  - '--  Suggested prefixes for algorithm objects are:

    '
- title: --
  contents:
  - '--

    '
- title: --  mda-   Message Digest Algorithms
  contents:
  - '--  mda-   Message Digest Algorithms

    '
- title: --  sa-    Signature Algorithms
  contents:
  - '--  sa-    Signature Algorithms

    '
- title: --  kta-   Key Transport Algorithms (Asymmetric)
  contents:
  - '--  kta-   Key Transport Algorithms (Asymmetric)

    '
- title: --  kaa-   Key Agreement Algorithms  (Asymmetric)
  contents:
  - '--  kaa-   Key Agreement Algorithms  (Asymmetric)

    '
- title: --  kwa-   Key Wrap Algorithms (Symmetric)
  contents:
  - '--  kwa-   Key Wrap Algorithms (Symmetric)

    '
- title: --  kda-   Key Derivation Algorithms
  contents:
  - '--  kda-   Key Derivation Algorithms

    '
- title: --  maca-  Message Authentication Code Algorithms
  contents:
  - '--  maca-  Message Authentication Code Algorithms

    '
- title: --  pk-    Public Key
  contents:
  - '--  pk-    Public Key

    '
- title: --  cea-   Content (symmetric) Encryption Algorithms
  contents:
  - '--  cea-   Content (symmetric) Encryption Algorithms

    '
- title: --  cap-   S/MIME Capabilities
  contents:
  - '--  cap-   S/MIME Capabilities

    '
- title: ParamOptions ::= ENUMERATED {
  contents:
  - "ParamOptions ::= ENUMERATED {\n   required,         -- Parameters MUST be encoded\
    \ in structure\n   preferredPresent, -- Parameters SHOULD be encoded in structure\n\
    \   preferredAbsent,  -- Parameters SHOULD NOT be encoded in structure\n   absent,\
    \           -- Parameters MUST NOT be encoded in structure\n   inheritable,  \
    \    -- Parameters are inherited if not present\n   optional,         -- Parameters\
    \ MAY be encoded in the structure\n   ...\n"
- title: '}'
  contents:
  - '}

    '
- title: --  DIGEST-ALGORITHM
  contents:
  - '--  DIGEST-ALGORITHM

    '
- title: --
  contents:
  - '--

    '
- title: --  Describes the basic information for ASN.1 and a digest
  contents:
  - '--  Describes the basic information for ASN.1 and a digest

    '
- title: --      algorithm.
  contents:
  - '--      algorithm.

    '
- title: --
  contents:
  - '--

    '
- title: --  &id - contains the OID identifying the digest algorithm
  contents:
  - '--  &id - contains the OID identifying the digest algorithm

    '
- title: --  &Params - if present, contains the type for the algorithm
  contents:
  - '--  &Params - if present, contains the type for the algorithm

    '
- title: --               parameters; if absent, implies no parameters
  contents:
  - '--               parameters; if absent, implies no parameters

    '
- title: --  &paramPresence - parameter presence requirement
  contents:
  - '--  &paramPresence - parameter presence requirement

    '
- title: --
  contents:
  - '--

    '
- title: --  Additional information such as the length of the hash could have
  contents:
  - '--  Additional information such as the length of the hash could have

    '
- title: --      been encoded.  Without a clear understanding of what information
  contents:
  - '--      been encoded.  Without a clear understanding of what information

    '
- title: --      is needed by applications, such extraneous information was not
  contents:
  - '--      is needed by applications, such extraneous information was not

    '
- title: --      considered to be of sufficient importance.
  contents:
  - '--      considered to be of sufficient importance.

    '
- title: --
  contents:
  - '--

    '
- title: '--  Example:'
  contents:
  - '--  Example:

    '
- title: --  mda-sha1 DIGEST-ALGORITHM ::= {
  contents:
  - '--  mda-sha1 DIGEST-ALGORITHM ::= {

    '
- title: --      IDENTIFIER id-sha1
  contents:
  - '--      IDENTIFIER id-sha1

    '
- title: --      PARAMS TYPE NULL ARE preferredAbsent
  contents:
  - '--      PARAMS TYPE NULL ARE preferredAbsent

    '
- title: --  }
  contents:
  - '--  }

    '
- title: DIGEST-ALGORITHM ::= CLASS {
  contents:
  - "DIGEST-ALGORITHM ::= CLASS {\n    &id                 OBJECT IDENTIFIER UNIQUE,\n\
    \    &Params             OPTIONAL,\n    &paramPresence      ParamOptions DEFAULT\
    \ absent\n"
- title: '} WITH SYNTAX {'
  contents:
  - "} WITH SYNTAX {\n    IDENTIFIER &id\n    [PARAMS [TYPE &Params] ARE &paramPresence\
    \ ]\n"
- title: '}'
  contents:
  - '}

    '
- title: --  SIGNATURE-ALGORITHM
  contents:
  - '--  SIGNATURE-ALGORITHM

    '
- title: --
  contents:
  - '--

    '
- title: --  Describes the basic properties of a signature algorithm
  contents:
  - '--  Describes the basic properties of a signature algorithm

    '
- title: --
  contents:
  - '--

    '
- title: --  &id - contains the OID identifying the signature algorithm
  contents:
  - '--  &id - contains the OID identifying the signature algorithm

    '
- title: --  &Value - contains a type definition for the value structure of
  contents:
  - '--  &Value - contains a type definition for the value structure of

    '
- title: --              the signature; if absent, implies that no ASN.1
  contents:
  - '--              the signature; if absent, implies that no ASN.1

    '
- title: --              encoding is performed on the value
  contents:
  - '--              encoding is performed on the value

    '
- title: --  &Params - if present, contains the type for the algorithm
  contents:
  - '--  &Params - if present, contains the type for the algorithm

    '
- title: --               parameters; if absent, implies no parameters
  contents:
  - '--               parameters; if absent, implies no parameters

    '
- title: --  &paramPresence - parameter presence requirement
  contents:
  - '--  &paramPresence - parameter presence requirement

    '
- title: --  &HashSet - The set of hash algorithms used with this
  contents:
  - '--  &HashSet - The set of hash algorithms used with this

    '
- title: --                  signature algorithm
  contents:
  - '--                  signature algorithm

    '
- title: --  &PublicKeySet - the set of public key algorithms for this
  contents:
  - '--  &PublicKeySet - the set of public key algorithms for this

    '
- title: --                  signature algorithm
  contents:
  - '--                  signature algorithm

    '
- title: --  &smimeCaps - contains the object describing how the S/MIME
  contents:
  - '--  &smimeCaps - contains the object describing how the S/MIME

    '
- title: --              capabilities are presented.
  contents:
  - '--              capabilities are presented.

    '
- title: --
  contents:
  - '--

    '
- title: '--  Example:'
  contents:
  - '--  Example:

    '
- title: --  sig-RSA-PSS SIGNATURE-ALGORITHM ::= {
  contents:
  - '--  sig-RSA-PSS SIGNATURE-ALGORITHM ::= {

    '
- title: --     IDENTIFIER id-RSASSA-PSS
  contents:
  - '--     IDENTIFIER id-RSASSA-PSS

    '
- title: --     PARAMS TYPE RSASSA-PSS-params ARE required
  contents:
  - '--     PARAMS TYPE RSASSA-PSS-params ARE required

    '
- title: --     HASHES { mda-sha1 | mda-md5, ... }
  contents:
  - '--     HASHES { mda-sha1 | mda-md5, ... }

    '
- title: --     PUBLIC-KEYS { pk-rsa | pk-rsa-pss }
  contents:
  - '--     PUBLIC-KEYS { pk-rsa | pk-rsa-pss }

    '
- title: -- }
  contents:
  - '-- }

    '
- title: SIGNATURE-ALGORITHM ::= CLASS {
  contents:
  - "SIGNATURE-ALGORITHM ::= CLASS {\n    &id             OBJECT IDENTIFIER UNIQUE,\n\
    \    &Value          OPTIONAL,\n    &Params         OPTIONAL,\n    &paramPresence\
    \  ParamOptions DEFAULT absent,\n    &HashSet        DIGEST-ALGORITHM OPTIONAL,\n\
    \    &PublicKeySet   PUBLIC-KEY OPTIONAL,\n    &smimeCaps      SMIME-CAPS OPTIONAL\n"
- title: '} WITH SYNTAX {'
  contents:
  - "} WITH SYNTAX {\n    IDENTIFIER &id\n    [VALUE &Value]\n    [PARAMS [TYPE &Params]\
    \ ARE &paramPresence ]\n    [HASHES &HashSet]\n    [PUBLIC-KEYS &PublicKeySet]\n\
    \    [SMIME-CAPS &smimeCaps]\n"
- title: '}'
  contents:
  - '}

    '
- title: --  PUBLIC-KEY
  contents:
  - '--  PUBLIC-KEY

    '
- title: --
  contents:
  - '--

    '
- title: --  Describes the basic properties of a public key
  contents:
  - '--  Describes the basic properties of a public key

    '
- title: --
  contents:
  - '--

    '
- title: --  &id - contains the OID identifying the public key
  contents:
  - '--  &id - contains the OID identifying the public key

    '
- title: --  &KeyValue - contains the type for the key value
  contents:
  - '--  &KeyValue - contains the type for the key value

    '
- title: --  &Params - if present, contains the type for the algorithm
  contents:
  - '--  &Params - if present, contains the type for the algorithm

    '
- title: --               parameters; if absent, implies no parameters
  contents:
  - '--               parameters; if absent, implies no parameters

    '
- title: --  &paramPresence - parameter presence requirement
  contents:
  - '--  &paramPresence - parameter presence requirement

    '
- title: --  &keyUsage - contains the set of bits that are legal for this
  contents:
  - '--  &keyUsage - contains the set of bits that are legal for this

    '
- title: --              key type.  Note that it does not make any statement
  contents:
  - '--              key type.  Note that it does not make any statement

    '
- title: --              about how bits may be paired.
  contents:
  - '--              about how bits may be paired.

    '
- title: --  &PrivateKey - contains a type structure for encoding the private
  contents:
  - '--  &PrivateKey - contains a type structure for encoding the private

    '
- title: --              key information.
  contents:
  - '--              key information.

    '
- title: --
  contents:
  - '--

    '
- title: '--  Example:'
  contents:
  - '--  Example:

    '
- title: --  pk-rsa-pss PUBLIC-KEY ::= {
  contents:
  - '--  pk-rsa-pss PUBLIC-KEY ::= {

    '
- title: --      IDENTIFIER id-RSASSA-PSS
  contents:
  - '--      IDENTIFIER id-RSASSA-PSS

    '
- title: --      KEY RSAPublicKey
  contents:
  - '--      KEY RSAPublicKey

    '
- title: --      PARAMS TYPE RSASSA-PSS-params ARE optional
  contents:
  - '--      PARAMS TYPE RSASSA-PSS-params ARE optional

    '
- title: --      CERT-KEY-USAGE { .... }
  contents:
  - '--      CERT-KEY-USAGE { .... }

    '
- title: --  }
  contents:
  - '--  }

    '
- title: PUBLIC-KEY ::= CLASS {
  contents:
  - "PUBLIC-KEY ::= CLASS {\n    &id             OBJECT IDENTIFIER UNIQUE,\n    &KeyValue\
    \       OPTIONAL,\n    &Params         OPTIONAL,\n    &paramPresence  ParamOptions\
    \ DEFAULT absent,\n    &keyUsage       KeyUsage OPTIONAL,\n    &PrivateKey   \
    \  OPTIONAL\n"
- title: '} WITH SYNTAX {'
  contents:
  - "} WITH SYNTAX {\n    IDENTIFIER &id\n    [KEY &KeyValue]\n    [PARAMS [TYPE &Params]\
    \ ARE &paramPresence]\n    [CERT-KEY-USAGE &keyUsage]\n    [PRIVATE-KEY &PrivateKey]\n"
- title: '}'
  contents:
  - '}

    '
- title: --  KEY-TRANSPORT
  contents:
  - '--  KEY-TRANSPORT

    '
- title: --
  contents:
  - '--

    '
- title: --  Describes the basic properties of a key transport algorithm
  contents:
  - '--  Describes the basic properties of a key transport algorithm

    '
- title: --
  contents:
  - '--

    '
- title: --  &id - contains the OID identifying the key transport algorithm
  contents:
  - '--  &id - contains the OID identifying the key transport algorithm

    '
- title: --  &Params - if present, contains the type for the algorithm
  contents:
  - '--  &Params - if present, contains the type for the algorithm

    '
- title: --               parameters; if absent, implies no parameters
  contents:
  - '--               parameters; if absent, implies no parameters

    '
- title: --  &paramPresence - parameter presence requirement
  contents:
  - '--  &paramPresence - parameter presence requirement

    '
- title: --  &PublicKeySet - specifies which public keys are used with
  contents:
  - '--  &PublicKeySet - specifies which public keys are used with

    '
- title: --                       this algorithm
  contents:
  - '--                       this algorithm

    '
- title: --  &smimeCaps - contains the object describing how the S/MIME
  contents:
  - '--  &smimeCaps - contains the object describing how the S/MIME

    '
- title: --              capabilities are presented.
  contents:
  - '--              capabilities are presented.

    '
- title: --
  contents:
  - '--

    '
- title: '--  Example:'
  contents:
  - '--  Example:

    '
- title: --  kta-rsaTransport KEY-TRANSPORT ::= {
  contents:
  - '--  kta-rsaTransport KEY-TRANSPORT ::= {

    '
- title: --      IDENTIFIER &id
  contents:
  - '--      IDENTIFIER &id

    '
- title: --      PARAMS TYPE NULL ARE required
  contents:
  - '--      PARAMS TYPE NULL ARE required

    '
- title: --      PUBLIC-KEYS  { pk-rsa | pk-rsa-pss }
  contents:
  - '--      PUBLIC-KEYS  { pk-rsa | pk-rsa-pss }

    '
- title: --  }
  contents:
  - '--  }

    '
- title: KEY-TRANSPORT ::= CLASS {
  contents:
  - "KEY-TRANSPORT ::= CLASS {\n    &id                 OBJECT IDENTIFIER UNIQUE,\n\
    \    &Params             OPTIONAL,\n    &paramPresence      ParamOptions DEFAULT\
    \ absent,\n    &PublicKeySet       PUBLIC-KEY OPTIONAL,\n    &smimeCaps      \
    \    SMIME-CAPS OPTIONAL\n"
- title: '} WITH SYNTAX {'
  contents:
  - "} WITH SYNTAX {\n    IDENTIFIER &id\n    [PARAMS [TYPE &Params] ARE &paramPresence]\n\
    \    [PUBLIC-KEYS &PublicKeySet]\n    [SMIME-CAPS &smimeCaps]\n"
- title: '}'
  contents:
  - '}

    '
- title: --  KEY-AGREE
  contents:
  - '--  KEY-AGREE

    '
- title: --
  contents:
  - '--

    '
- title: --  Describes the basic properties of a key agreement algorithm
  contents:
  - '--  Describes the basic properties of a key agreement algorithm

    '
- title: --
  contents:
  - '--

    '
- title: --  &id - contains the OID identifying the key agreement algorithm
  contents:
  - '--  &id - contains the OID identifying the key agreement algorithm

    '
- title: --  &Params - if present, contains the type for the algorithm
  contents:
  - '--  &Params - if present, contains the type for the algorithm

    '
- title: --               parameters; if absent, implies no parameters
  contents:
  - '--               parameters; if absent, implies no parameters

    '
- title: --  &paramPresence - parameter presence requirement
  contents:
  - '--  &paramPresence - parameter presence requirement

    '
- title: --  &PublicKeySet - specifies which public keys are used with
  contents:
  - '--  &PublicKeySet - specifies which public keys are used with

    '
- title: --                        this algorithm
  contents:
  - '--                        this algorithm

    '
- title: --  &Ukm - type of user keying material used
  contents:
  - '--  &Ukm - type of user keying material used

    '
- title: --  &ukmPresence - specifies the requirements to define the UKM field
  contents:
  - '--  &ukmPresence - specifies the requirements to define the UKM field

    '
- title: --  &smimeCaps - contains the object describing how the S/MIME
  contents:
  - '--  &smimeCaps - contains the object describing how the S/MIME

    '
- title: --              capabilities are presented.
  contents:
  - '--              capabilities are presented.

    '
- title: --
  contents:
  - '--

    '
- title: '--  Example:'
  contents:
  - '--  Example:

    '
- title: --  kaa-dh-static-ephemeral KEY-AGREE ::= {
  contents:
  - '--  kaa-dh-static-ephemeral KEY-AGREE ::= {

    '
- title: --      IDENTIFIER id-alg-ESDH
  contents:
  - '--      IDENTIFIER id-alg-ESDH

    '
- title: --      PARAMS TYPE KeyWrapAlgorithm ARE required
  contents:
  - '--      PARAMS TYPE KeyWrapAlgorithm ARE required

    '
- title: --      PUBLIC-KEYS {
  contents:
  - '--      PUBLIC-KEYS {

    '
- title: --         {IDENTIFIER dh-public-number KEY DHPublicKey
  contents:
  - '--         {IDENTIFIER dh-public-number KEY DHPublicKey

    '
- title: --            PARAMS TYPE DHDomainParameters ARE inheritable }
  contents:
  - '--            PARAMS TYPE DHDomainParameters ARE inheritable }

    '
- title: --      }
  contents:
  - '--      }

    '
- title: --      - - UKM should be present but is not separately ASN.1-encoded
  contents:
  - '--      - - UKM should be present but is not separately ASN.1-encoded

    '
- title: --      UKM ARE preferredPresent
  contents:
  - '--      UKM ARE preferredPresent

    '
- title: --  }
  contents:
  - '--  }

    '
- title: KEY-AGREE ::= CLASS {
  contents:
  - "KEY-AGREE ::= CLASS {\n    &id             OBJECT IDENTIFIER UNIQUE,\n    &Params\
    \         OPTIONAL,\n    &paramPresence  ParamOptions DEFAULT absent,\n    &PublicKeySet\
    \   PUBLIC-KEY OPTIONAL,\n    &Ukm            OPTIONAL,\n    &ukmPresence    ParamOptions\
    \ DEFAULT absent,\n    &smimeCaps      SMIME-CAPS OPTIONAL\n"
- title: '} WITH SYNTAX {'
  contents:
  - "} WITH SYNTAX {\n    IDENTIFIER &id\n    [PARAMS [TYPE &Params] ARE &paramPresence]\n\
    \    [PUBLIC-KEYS &PublicKeySet]\n    [UKM [TYPE &Ukm] ARE &ukmPresence]\n   \
    \ [SMIME-CAPS &smimeCaps]\n"
- title: '}'
  contents:
  - '}

    '
- title: --  KEY-WRAP
  contents:
  - '--  KEY-WRAP

    '
- title: --
  contents:
  - '--

    '
- title: --  Describes the basic properties of a key wrap algorithm
  contents:
  - '--  Describes the basic properties of a key wrap algorithm

    '
- title: --
  contents:
  - '--

    '
- title: --  &id - contains the OID identifying the key wrap algorithm
  contents:
  - '--  &id - contains the OID identifying the key wrap algorithm

    '
- title: --  &Params - if present, contains the type for the algorithm
  contents:
  - '--  &Params - if present, contains the type for the algorithm

    '
- title: --               parameters; if absent, implies no parameters
  contents:
  - '--               parameters; if absent, implies no parameters

    '
- title: --  &paramPresence - parameter presence requirement
  contents:
  - '--  &paramPresence - parameter presence requirement

    '
- title: --  &smimeCaps - contains the object describing how the S/MIME
  contents:
  - '--  &smimeCaps - contains the object describing how the S/MIME

    '
- title: --              capabilities are presented.
  contents:
  - '--              capabilities are presented.

    '
- title: --
  contents:
  - '--

    '
- title: '--  Example:'
  contents:
  - '--  Example:

    '
- title: --  kwa-cms3DESwrap KEY-WRAP ::= {
  contents:
  - '--  kwa-cms3DESwrap KEY-WRAP ::= {

    '
- title: --      IDENTIFIER id-alg-CMS3DESwrap
  contents:
  - '--      IDENTIFIER id-alg-CMS3DESwrap

    '
- title: --      PARAMS TYPE NULL ARE required
  contents:
  - '--      PARAMS TYPE NULL ARE required

    '
- title: --  }
  contents:
  - '--  }

    '
- title: KEY-WRAP ::= CLASS {
  contents:
  - "KEY-WRAP ::= CLASS {\n    &id                OBJECT IDENTIFIER UNIQUE,\n    &Params\
    \            OPTIONAL,\n    &paramPresence     ParamOptions DEFAULT absent,\n\
    \    &smimeCaps         SMIME-CAPS OPTIONAL\n"
- title: '} WITH SYNTAX {'
  contents:
  - "} WITH SYNTAX {\n    IDENTIFIER &id\n    [PARAMS [TYPE &Params] ARE &paramPresence]\n\
    \    [SMIME-CAPS &smimeCaps]\n"
- title: '}'
  contents:
  - '}

    '
- title: --  KEY-DERIVATION
  contents:
  - '--  KEY-DERIVATION

    '
- title: --
  contents:
  - '--

    '
- title: --  Describes the basic properties of a key derivation algorithm
  contents:
  - '--  Describes the basic properties of a key derivation algorithm

    '
- title: --
  contents:
  - '--

    '
- title: --  &id - contains the OID identifying the key derivation algorithm
  contents:
  - '--  &id - contains the OID identifying the key derivation algorithm

    '
- title: --  &Params - if present, contains the type for the algorithm
  contents:
  - '--  &Params - if present, contains the type for the algorithm

    '
- title: --               parameters; if absent, implies no parameters
  contents:
  - '--               parameters; if absent, implies no parameters

    '
- title: --  &paramPresence - parameter presence requirement
  contents:
  - '--  &paramPresence - parameter presence requirement

    '
- title: --  &smimeCaps - contains the object describing how the S/MIME
  contents:
  - '--  &smimeCaps - contains the object describing how the S/MIME

    '
- title: --              capabilities are presented.
  contents:
  - '--              capabilities are presented.

    '
- title: --
  contents:
  - '--

    '
- title: '--  Example:'
  contents:
  - '--  Example:

    '
- title: --  kda-pbkdf2 KEY-DERIVATION ::= {
  contents:
  - '--  kda-pbkdf2 KEY-DERIVATION ::= {

    '
- title: --      IDENTIFIER id-PBKDF2
  contents:
  - '--      IDENTIFIER id-PBKDF2

    '
- title: --      PARAMS TYPE PBKDF2-params ARE required
  contents:
  - '--      PARAMS TYPE PBKDF2-params ARE required

    '
- title: --  }
  contents:
  - '--  }

    '
- title: KEY-DERIVATION ::= CLASS {
  contents:
  - "KEY-DERIVATION ::= CLASS {\n    &id                OBJECT IDENTIFIER UNIQUE,\n\
    \    &Params            OPTIONAL,\n    &paramPresence     ParamOptions DEFAULT\
    \ absent,\n    &smimeCaps         SMIME-CAPS OPTIONAL\n"
- title: '} WITH SYNTAX {'
  contents:
  - "} WITH SYNTAX {\n    IDENTIFIER &id\n    [PARAMS [TYPE &Params] ARE &paramPresence]\n\
    \    [SMIME-CAPS &smimeCaps]\n"
- title: '}'
  contents:
  - '}

    '
- title: -- MAC-ALGORITHM
  contents:
  - '-- MAC-ALGORITHM

    '
- title: --
  contents:
  - '--

    '
- title: --  Describes the basic properties of a message
  contents:
  - '--  Describes the basic properties of a message

    '
- title: --      authentication code (MAC) algorithm
  contents:
  - '--      authentication code (MAC) algorithm

    '
- title: --
  contents:
  - '--

    '
- title: --  &id - contains the OID identifying the MAC algorithm
  contents:
  - '--  &id - contains the OID identifying the MAC algorithm

    '
- title: --  &Params - if present, contains the type for the algorithm
  contents:
  - '--  &Params - if present, contains the type for the algorithm

    '
- title: --               parameters; if absent, implies no parameters
  contents:
  - '--               parameters; if absent, implies no parameters

    '
- title: --  &paramPresence - parameter presence requirement
  contents:
  - '--  &paramPresence - parameter presence requirement

    '
- title: --  &keyed - MAC algorithm is a keyed MAC algorithm
  contents:
  - '--  &keyed - MAC algorithm is a keyed MAC algorithm

    '
- title: --  &smimeCaps - contains the object describing how the S/MIME
  contents:
  - '--  &smimeCaps - contains the object describing how the S/MIME

    '
- title: --              capabilities are presented.
  contents:
  - '--              capabilities are presented.

    '
- title: --
  contents:
  - '--

    '
- title: --  Some parameters that perhaps should have been added would be
  contents:
  - '--  Some parameters that perhaps should have been added would be

    '
- title: --  fields with the minimum and maximum MAC lengths for
  contents:
  - '--  fields with the minimum and maximum MAC lengths for

    '
- title: --  those MAC algorithms that allow truncations.
  contents:
  - '--  those MAC algorithms that allow truncations.

    '
- title: --
  contents:
  - '--

    '
- title: '--  Example:'
  contents:
  - '--  Example:

    '
- title: --  maca-hmac-sha1 MAC-ALGORITHM ::= {
  contents:
  - '--  maca-hmac-sha1 MAC-ALGORITHM ::= {

    '
- title: --      IDENTIFIER hMAC-SHA1
  contents:
  - '--      IDENTIFIER hMAC-SHA1

    '
- title: --      PARAMS TYPE NULL ARE preferredAbsent
  contents:
  - '--      PARAMS TYPE NULL ARE preferredAbsent

    '
- title: --      IS KEYED MAC TRUE
  contents:
  - '--      IS KEYED MAC TRUE

    '
- title: --      SMIME-CAPS {IDENTIFIED BY hMAC-SHA1}
  contents:
  - '--      SMIME-CAPS {IDENTIFIED BY hMAC-SHA1}

    '
- title: --  }
  contents:
  - '--  }

    '
- title: MAC-ALGORITHM ::= CLASS {
  contents:
  - "MAC-ALGORITHM ::= CLASS {\n    &id                 OBJECT IDENTIFIER UNIQUE,\n\
    \    &Params             OPTIONAL,\n    &paramPresence      ParamOptions DEFAULT\
    \ absent,\n    &keyed              BOOLEAN,\n    &smimeCaps          SMIME-CAPS\
    \ OPTIONAL\n"
- title: '} WITH SYNTAX {'
  contents:
  - "} WITH SYNTAX {\n    IDENTIFIER &id\n    [PARAMS [TYPE &Params] ARE &paramPresence]\n\
    \    IS-KEYED-MAC &keyed\n    [SMIME-CAPS &smimeCaps]\n"
- title: '}'
  contents:
  - '}

    '
- title: --  CONTENT-ENCRYPTION
  contents:
  - '--  CONTENT-ENCRYPTION

    '
- title: --
  contents:
  - '--

    '
- title: --  Describes the basic properties of a content encryption
  contents:
  - '--  Describes the basic properties of a content encryption

    '
- title: --      algorithm
  contents:
  - '--      algorithm

    '
- title: --
  contents:
  - '--

    '
- title: --  &id - contains the OID identifying the content
  contents:
  - '--  &id - contains the OID identifying the content

    '
- title: --        encryption algorithm
  contents:
  - '--        encryption algorithm

    '
- title: --  &Params - if present, contains the type for the algorithm
  contents:
  - '--  &Params - if present, contains the type for the algorithm

    '
- title: --               parameters; if absent, implies no parameters
  contents:
  - '--               parameters; if absent, implies no parameters

    '
- title: --  &paramPresence - parameter presence requirement
  contents:
  - '--  &paramPresence - parameter presence requirement

    '
- title: --  &smimeCaps - contains the object describing how the S/MIME
  contents:
  - '--  &smimeCaps - contains the object describing how the S/MIME

    '
- title: --              capabilities are presented.
  contents:
  - '--              capabilities are presented.

    '
- title: --
  contents:
  - '--

    '
- title: '--  Example:'
  contents:
  - '--  Example:

    '
- title: --  cea-3DES-cbc CONTENT-ENCRYPTION ::= {
  contents:
  - '--  cea-3DES-cbc CONTENT-ENCRYPTION ::= {

    '
- title: --      IDENTIFIER des-ede3-cbc
  contents:
  - '--      IDENTIFIER des-ede3-cbc

    '
- title: --      PARAMS TYPE IV ARE required
  contents:
  - '--      PARAMS TYPE IV ARE required

    '
- title: --      SMIME-CAPS { IDENTIFIED BY des-ede3-cbc }
  contents:
  - '--      SMIME-CAPS { IDENTIFIED BY des-ede3-cbc }

    '
- title: --  }
  contents:
  - '--  }

    '
- title: CONTENT-ENCRYPTION ::= CLASS {
  contents:
  - "CONTENT-ENCRYPTION ::= CLASS {\n    &id                OBJECT IDENTIFIER UNIQUE,\n\
    \    &Params            OPTIONAL,\n    &paramPresence     ParamOptions DEFAULT\
    \ absent,\n    &smimeCaps         SMIME-CAPS OPTIONAL\n"
- title: '} WITH SYNTAX {'
  contents:
  - "} WITH SYNTAX {\n    IDENTIFIER &id\n    [PARAMS [TYPE &Params] ARE &paramPresence]\n\
    \    [SMIME-CAPS &smimeCaps]\n"
- title: '}'
  contents:
  - '}

    '
- title: -- ALGORITHM
  contents:
  - '-- ALGORITHM

    '
- title: --
  contents:
  - '--

    '
- title: -- Describes a generic algorithm identifier
  contents:
  - '-- Describes a generic algorithm identifier

    '
- title: --
  contents:
  - '--

    '
- title: --  &id - contains the OID identifying the algorithm
  contents:
  - '--  &id - contains the OID identifying the algorithm

    '
- title: --  &Params - if present, contains the type for the algorithm
  contents:
  - '--  &Params - if present, contains the type for the algorithm

    '
- title: --               parameters; if absent, implies no parameters
  contents:
  - '--               parameters; if absent, implies no parameters

    '
- title: --  &paramPresence - parameter presence requirement
  contents:
  - '--  &paramPresence - parameter presence requirement

    '
- title: --  &smimeCaps - contains the object describing how the S/MIME
  contents:
  - '--  &smimeCaps - contains the object describing how the S/MIME

    '
- title: --              capabilities are presented.
  contents:
  - '--              capabilities are presented.

    '
- title: --
  contents:
  - '--

    '
- title: --  This would be used for cases where an algorithm of an unknown
  contents:
  - '--  This would be used for cases where an algorithm of an unknown

    '
- title: --  type is used.  In general however, one should either define
  contents:
  - '--  type is used.  In general however, one should either define

    '
- title: --  a more complete algorithm structure (such as the one above)
  contents:
  - '--  a more complete algorithm structure (such as the one above)

    '
- title: --  or use the TYPE-IDENTIFIER class.
  contents:
  - '--  or use the TYPE-IDENTIFIER class.

    '
- title: ALGORITHM ::= CLASS {
  contents:
  - "ALGORITHM ::= CLASS {\n    &id OBJECT   IDENTIFIER UNIQUE,\n    &Params     \
    \ OPTIONAL,\n    &paramPresence ParamOptions DEFAULT absent,\n    &smimeCaps \
    \  SMIME-CAPS OPTIONAL\n"
- title: '} WITH SYNTAX {'
  contents:
  - "} WITH SYNTAX {\n    IDENTIFIER &id\n    [PARAMS [TYPE &Params] ARE &paramPresence]\n\
    \    [SMIME-CAPS &smimeCaps]\n"
- title: '}'
  contents:
  - '}

    '
- title: -- AlgorithmIdentifier
  contents:
  - '-- AlgorithmIdentifier

    '
- title: --
  contents:
  - '--

    '
- title: -- Provides the generic structure that is used to encode algorithm
  contents:
  - '-- Provides the generic structure that is used to encode algorithm

    '
- title: --    identification and the parameters associated with the
  contents:
  - '--    identification and the parameters associated with the

    '
- title: --    algorithm.
  contents:
  - '--    algorithm.

    '
- title: --
  contents:
  - '--

    '
- title: -- The first parameter represents the type of the algorithm being
  contents:
  - '-- The first parameter represents the type of the algorithm being

    '
- title: --    used.
  contents:
  - '--    used.

    '
- title: -- The second parameter represents an object set containing the
  contents:
  - '-- The second parameter represents an object set containing the

    '
- title: --    algorithms that may occur in this situation.
  contents:
  - '--    algorithms that may occur in this situation.

    '
- title: --    The initial list of required algorithms should occur to the
  contents:
  - '--    The initial list of required algorithms should occur to the

    '
- title: --      left of an extension marker; all other algorithms should
  contents:
  - '--      left of an extension marker; all other algorithms should

    '
- title: --      occur to the right of an extension marker.
  contents:
  - '--      occur to the right of an extension marker.

    '
- title: --
  contents:
  - '--

    '
- title: -- The object class ALGORITHM can be used for generic unspecified
  contents:
  - '-- The object class ALGORITHM can be used for generic unspecified

    '
- title: --     items.
  contents:
  - '--     items.

    '
- title: -- If new ALGORITHM classes are defined, the fields &id and &Params
  contents:
  - '-- If new ALGORITHM classes are defined, the fields &id and &Params

    '
- title: --     need to be present as fields in the object in order to use
  contents:
  - '--     need to be present as fields in the object in order to use

    '
- title: --     this parameterized type.
  contents:
  - '--     this parameterized type.

    '
- title: --
  contents:
  - '--

    '
- title: '-- Example:'
  contents:
  - '-- Example:

    '
- title: --    SignatureAlgorithmIdentifier ::=
  contents:
  - '--    SignatureAlgorithmIdentifier ::=

    '
- title: --       AlgorithmIdentifier{SIGNATURE-ALGORITHM, {SignatureAlgSet}}
  contents:
  - '--       AlgorithmIdentifier{SIGNATURE-ALGORITHM, {SignatureAlgSet}}

    '
- title: AlgorithmIdentifier{ALGORITHM-TYPE, ALGORITHM-TYPE:AlgorithmSet} ::=
  contents:
  - "AlgorithmIdentifier{ALGORITHM-TYPE, ALGORITHM-TYPE:AlgorithmSet} ::=\n      \
    \  SEQUENCE {\n            algorithm   ALGORITHM-TYPE.&id({AlgorithmSet}),\n \
    \           parameters  ALGORITHM-TYPE.\n                   &Params({AlgorithmSet}{@algorithm})\
    \ OPTIONAL\n        }\n"
- title: --  S/MIME Capabilities
  contents:
  - '--  S/MIME Capabilities

    '
- title: --
  contents:
  - '--

    '
- title: --  We have moved the SMIME-CAPS from the module for RFC 3851 to here
  contents:
  - '--  We have moved the SMIME-CAPS from the module for RFC 3851 to here

    '
- title: --  because it is used in RFC 4262 (X.509 Certificate Extension for
  contents:
  - '--  because it is used in RFC 4262 (X.509 Certificate Extension for

    '
- title: --  S/MIME Capabilities)
  contents:
  - '--  S/MIME Capabilities)

    '
- title: --
  contents:
  - '--

    '
- title: --
  contents:
  - '--

    '
- title: --  This class is used to represent an S/MIME capability.  S/MIME
  contents:
  - '--  This class is used to represent an S/MIME capability.  S/MIME

    '
- title: --  capabilities are used to represent what algorithm capabilities
  contents:
  - '--  capabilities are used to represent what algorithm capabilities

    '
- title: --  an individual has.  The classic example was the content encryption
  contents:
  - '--  an individual has.  The classic example was the content encryption

    '
- title: --  algorithm RC2 where the algorithm id and the RC2 key lengths
  contents:
  - '--  algorithm RC2 where the algorithm id and the RC2 key lengths

    '
- title: --  supported needed to be advertised, but the IV used is not fixed.
  contents:
  - '--  supported needed to be advertised, but the IV used is not fixed.

    '
- title: --  Thus, for RC2 we used
  contents:
  - '--  Thus, for RC2 we used

    '
- title: --
  contents:
  - '--

    '
- title: --  cap-RC2CBC SMIME-CAPS ::= {
  contents:
  - '--  cap-RC2CBC SMIME-CAPS ::= {

    '
- title: --      TYPE INTEGER ( 40 | 128 ) IDENTIFIED BY rc2-cbc }
  contents:
  - '--      TYPE INTEGER ( 40 | 128 ) IDENTIFIED BY rc2-cbc }

    '
- title: --
  contents:
  - '--

    '
- title: --  where 40 and 128 represent the RC2 key length in number of bits.
  contents:
  - '--  where 40 and 128 represent the RC2 key length in number of bits.

    '
- title: --
  contents:
  - '--

    '
- title: --  Another example where information needs to be shown is for
  contents:
  - '--  Another example where information needs to be shown is for

    '
- title: --  RSA-OAEP where only specific hash functions or mask generation
  contents:
  - '--  RSA-OAEP where only specific hash functions or mask generation

    '
- title: --  functions are supported, but the saltLength is specified by the
  contents:
  - '--  functions are supported, but the saltLength is specified by the

    '
- title: --  sender and not the recipient.  In this case, one can either
  contents:
  - '--  sender and not the recipient.  In this case, one can either

    '
- title: --  generate a number of capability items,
  contents:
  - '--  generate a number of capability items,

    '
- title: --  or a new S/MIME capability type could be generated where
  contents:
  - '--  or a new S/MIME capability type could be generated where

    '
- title: --  multiple hash functions could be specified.
  contents:
  - '--  multiple hash functions could be specified.

    '
- title: --
  contents:
  - '--

    '
- title: --
  contents:
  - '--

    '
- title: --  SMIME-CAP
  contents:
  - '--  SMIME-CAP

    '
- title: --
  contents:
  - '--

    '
- title: --  This class is used to associate the type that describes the
  contents:
  - '--  This class is used to associate the type that describes the

    '
- title: --  capabilities with the object identifier.
  contents:
  - '--  capabilities with the object identifier.

    '
- title: --
  contents:
  - '--

    '
- title: SMIME-CAPS ::= CLASS {
  contents:
  - "SMIME-CAPS ::= CLASS {\n    &id         OBJECT IDENTIFIER UNIQUE,\n    &Type\
    \       OPTIONAL\n"
- title: '}'
  contents:
  - '}

    '
- title: WITH SYNTAX { [TYPE &Type] IDENTIFIED BY &id }
  contents:
  - 'WITH SYNTAX { [TYPE &Type] IDENTIFIED BY &id }

    '
- title: --
  contents:
  - '--

    '
- title: --  Generic type - this is used for defining values.
  contents:
  - '--  Generic type - this is used for defining values.

    '
- title: --
  contents:
  - '--

    '
- title: --  Define a single S/MIME capability encoding
  contents:
  - '--  Define a single S/MIME capability encoding

    '
- title: SMIMECapability{SMIME-CAPS:CapabilitySet} ::= SEQUENCE {
  contents:
  - "SMIMECapability{SMIME-CAPS:CapabilitySet} ::= SEQUENCE {\n    capabilityID  \
    \      SMIME-CAPS.&id({CapabilitySet}),\n    parameters          SMIME-CAPS.&Type({CapabilitySet}\n\
    \                            {@capabilityID}) OPTIONAL\n"
- title: '}'
  contents:
  - '}

    '
- title: --  Define a sequence of S/MIME capability values
  contents:
  - '--  Define a sequence of S/MIME capability values

    '
- title: SMIMECapabilities { SMIME-CAPS:CapabilitySet } ::=
  contents:
  - "SMIMECapabilities { SMIME-CAPS:CapabilitySet } ::=\n        SEQUENCE SIZE (1..MAX)\
    \ OF SMIMECapability{{CapabilitySet} }\n"
- title: END
  contents:
  - 'END

    '
- title: 3.  ASN.1 Module for RFC 3370
  contents:
  - "3.  ASN.1 Module for RFC 3370\n   CryptographicMessageSyntaxAlgorithms-2009\n\
    \       { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n   \
    \    smime(16) modules(0) id-mod-cmsalg-2001-02(37) }\n   DEFINITIONS IMPLICIT\
    \ TAGS ::=\n   BEGIN\n   IMPORTS\n   ParamOptions, DIGEST-ALGORITHM, SIGNATURE-ALGORITHM,\n\
    \      PUBLIC-KEY, KEY-DERIVATION, KEY-WRAP, MAC-ALGORITHM,\n      KEY-AGREE,\
    \ KEY-TRANSPORT, CONTENT-ENCRYPTION, ALGORITHM,\n      AlgorithmIdentifier{},\
    \ SMIME-CAPS\n   FROM AlgorithmInformation-2009\n       {iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n       mechanisms(5) pkix(7) id-mod(0)\n   \
    \    id-mod-algorithmInformation-02(58)}\n   pk-rsa, pk-dh, pk-dsa, rsaEncryption,\
    \ DHPublicKey, dhpublicnumber\n   FROM PKIXAlgs-2009\n        {iso(1) identified-organization(3)\
    \ dod(6)\n        internet(1) security(5) mechanisms(5) pkix(7) id-mod(0)\n  \
    \      id-mod-pkix1-algorithms2008-02(56)}\n   cap-RC2CBC\n   FROM SecureMimeMessageV3dot1-2009\n\
    \        {iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n   \
    \     smime(16) modules(0) id-mod-msg-v3dot1-02(39)};\n   --  2. Hash algorithms\
    \ in this document\n   MessageDigestAlgs DIGEST-ALGORITHM ::= {\n   --   mda-md5\
    \ | mda-sha1,\n        ... }\n   --  3. Signature algorithms in this document\n\
    \   SignatureAlgs SIGNATURE-ALGORITHM ::= {\n   --  See RFC 3279\n   --  sa-dsaWithSHA1\
    \ |  sa-rsaWithMD5 | sa-rsaWithSHA1,\n       ... }\n   --  4.  Key Management\
    \ Algorithms\n   --  4.1 Key Agreement Algorithms\n   KeyAgreementAlgs KEY-AGREE\
    \ ::= { kaa-esdh | kaa-ssdh, ...}\n   KeyAgreePublicKeys PUBLIC-KEY ::= { pk-dh,\
    \ ...}\n   --  4.2  Key Transport Algorithms\n   KeyTransportAlgs KEY-TRANSPORT\
    \ ::= { kt-rsa, ... }\n   --  4.3  Symmetric Key-Encryption Key Algorithms\n \
    \  KeyWrapAlgs KEY-WRAP ::= { kwa-3DESWrap | kwa-RC2Wrap, ... }\n   --  4.4  Key\
    \ Derivation Algorithms\n   KeyDerivationAlgs KEY-DERIVATION ::= { kda-PBKDF2,\
    \ ... }\n   --  5.  Content Encryption Algorithms\n   ContentEncryptionAlgs CONTENT-ENCRYPTION\
    \ ::=\n       { cea-3DES-cbc | cea-RC2-cbc, ... }\n   --  6.  Message Authentication\
    \ Code Algorithms\n   MessageAuthAlgs MAC-ALGORITHM ::= { maca-hMAC-SHA1, ...\
    \ }\n   --  S/MIME Capabilities for these items\n   SMimeCaps SMIME-CAPS ::= {\n\
    \       kaa-esdh.&smimeCaps         |\n       kaa-ssdh.&smimeCaps         |\n\
    \       kt-rsa.&smimeCaps           |\n       kwa-3DESWrap.&smimeCaps     |\n\
    \       kwa-RC2Wrap.&smimeCaps      |\n       cea-3DES-cbc.&smimeCaps     |\n\
    \       cea-RC2-cbc.&smimeCaps      |\n       maca-hMAC-SHA1.&smimeCaps,\n   \
    \    ...}\n   --\n   --\n   --\n   -- Algorithm Identifiers\n   -- rsaEncryption\
    \ OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n   --    us(840) rsadsi(113549)\
    \ pkcs(1) pkcs-1(1) 1 }\n   id-alg-ESDH OBJECT IDENTIFIER ::= { iso(1) member-body(2)\
    \ us(840)\n      rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) alg(3) 5 }\n   id-alg-SSDH\
    \ OBJECT IDENTIFIER ::= { iso(1) member-body(2) us(840)\n      rsadsi(113549)\
    \ pkcs(1) pkcs-9(9) smime(16) alg(3) 10 }\n   id-alg-CMS3DESwrap OBJECT IDENTIFIER\
    \ ::= { iso(1) member-body(2)\n      us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\
    \ smime(16) alg(3) 6 }\n   id-alg-CMSRC2wrap OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n\
    \      us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) alg(3) 7 }\n   des-ede3-cbc\
    \ OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n      us(840) rsadsi(113549)\
    \ encryptionAlgorithm(3) 7 }\n   rc2-cbc OBJECT IDENTIFIER ::= { iso(1) member-body(2)\
    \ us(840)\n      rsadsi(113549) encryptionAlgorithm(3) 2 }\n   hMAC-SHA1 OBJECT\
    \ IDENTIFIER ::= { iso(1) identified-organization(3)\n      dod(6) internet(1)\
    \ security(5) mechanisms(5) 8 1 2 }\n   id-PBKDF2 OBJECT IDENTIFIER ::= { iso(1)\
    \ member-body(2) us(840)\n      rsadsi(113549) pkcs(1) pkcs-5(5) 12 }\n   -- Algorithm\
    \ Identifier Parameter Types\n   KeyWrapAlgorithm ::=\n       AlgorithmIdentifier\
    \ {KEY-WRAP, {KeyWrapAlgs }}\n   RC2wrapParameter ::= RC2ParameterVersion\n  \
    \ RC2ParameterVersion ::= INTEGER\n   CBCParameter ::= IV\n   IV ::= OCTET STRING\
    \  -- exactly 8 octets\n   RC2CBCParameter ::= SEQUENCE {\n       rc2ParameterVersion\
    \ INTEGER (1..256),\n       iv OCTET STRING  }  -- exactly 8 octets\n   maca-hMAC-SHA1\
    \ MAC-ALGORITHM ::= {\n       IDENTIFIER hMAC-SHA1\n       PARAMS TYPE NULL ARE\
    \ preferredAbsent\n       IS-KEYED-MAC TRUE\n       SMIME-CAPS {IDENTIFIED BY\
    \ hMAC-SHA1}\n   }\n   PBKDF2-PRFsAlgorithmIdentifier ::= AlgorithmIdentifier{\
    \ ALGORITHM,\n                                          {PBKDF2-PRFs} }\n   alg-hMAC-SHA1\
    \ ALGORITHM ::=\n       { IDENTIFIER hMAC-SHA1 PARAMS TYPE NULL ARE required }\n\
    \   PBKDF2-PRFs ALGORITHM ::= { alg-hMAC-SHA1, ... }\n   PBKDF2-SaltSources ALGORITHM\
    \ ::= { ... }\n   PBKDF2-SaltSourcesAlgorithmIdentifier ::=\n       AlgorithmIdentifier\
    \ {ALGORITHM, {PBKDF2-SaltSources}}\n   defaultPBKDF2 PBKDF2-PRFsAlgorithmIdentifier\
    \ ::=\n       { algorithm alg-hMAC-SHA1.&id, parameters NULL:NULL }\n   PBKDF2-params\
    \ ::= SEQUENCE {\n       salt CHOICE {\n           specified OCTET STRING,\n \
    \          otherSource PBKDF2-SaltSourcesAlgorithmIdentifier },\n       iterationCount\
    \ INTEGER (1..MAX),\n       keyLength INTEGER (1..MAX) OPTIONAL,\n       prf PBKDF2-PRFsAlgorithmIdentifier\
    \ DEFAULT\n               defaultPBKDF2\n           }\n   --\n   --  This object\
    \ is included for completeness.  It should not be used\n   --      for encoding\
    \ of signatures, but was sometimes used in older\n   --      versions of CMS for\
    \ encoding of RSA signatures.\n   --\n   --\n   -- sa-rsa SIGNATURE-ALGORITHM\
    \ ::= {\n   --         IDENTIFIER rsaEncryption\n   --         - - value is not\
    \ ASN.1 encoded\n   --         PARAMS TYPE NULL ARE required\n   --         HASHES\
    \ {mda-sha1 | mda-md5, ...}\n   --         PUBLIC-KEYS { pk-rsa}\n   -- }\n  \
    \ --\n   -- No ASN.1 encoding is applied to the signature value\n   --    for\
    \ these items\n   kaa-esdh KEY-AGREE ::= {\n        IDENTIFIER id-alg-ESDH\n \
    \       PARAMS TYPE KeyWrapAlgorithm ARE required\n        PUBLIC-KEYS { pk-dh\
    \ }\n        -- UKM is not ASN.1 encoded\n        UKM ARE optional\n        SMIME-CAPS\
    \ {TYPE KeyWrapAlgorithm IDENTIFIED BY id-alg-ESDH}\n   }\n   kaa-ssdh KEY-AGREE\
    \ ::= {\n        IDENTIFIER id-alg-SSDH\n        PARAMS TYPE KeyWrapAlgorithm\
    \ ARE required\n        PUBLIC-KEYS {pk-dh}\n        -- UKM is not ASN.1 encoded\n\
    \        UKM ARE optional\n        SMIME-CAPS {TYPE KeyWrapAlgorithm IDENTIFIED\
    \ BY id-alg-SSDH}\n   }\n   dh-public-number OBJECT IDENTIFIER ::= dhpublicnumber\n\
    \   pk-originator-dh PUBLIC-KEY ::= {\n       IDENTIFIER dh-public-number\n  \
    \     KEY DHPublicKey\n       PARAMS ARE absent\n       CERT-KEY-USAGE {keyAgreement,\
    \ encipherOnly, decipherOnly}\n   }\n   kwa-3DESWrap KEY-WRAP ::= {\n        IDENTIFIER\
    \ id-alg-CMS3DESwrap\n        PARAMS TYPE NULL ARE required\n        SMIME-CAPS\
    \ {IDENTIFIED BY id-alg-CMS3DESwrap}\n   }\n   kwa-RC2Wrap KEY-WRAP ::= {\n  \
    \      IDENTIFIER id-alg-CMSRC2wrap\n        PARAMS TYPE RC2wrapParameter ARE\
    \ required\n        SMIME-CAPS { IDENTIFIED BY id-alg-CMSRC2wrap }\n   }\n   kda-PBKDF2\
    \ KEY-DERIVATION ::= {\n       IDENTIFIER id-PBKDF2\n       PARAMS TYPE PBKDF2-params\
    \ ARE required\n       -- No S/MIME caps defined\n   }\n   cea-3DES-cbc CONTENT-ENCRYPTION\
    \ ::= {\n       IDENTIFIER des-ede3-cbc\n       PARAMS TYPE IV ARE required\n\
    \       SMIME-CAPS { IDENTIFIED BY des-ede3-cbc }\n   }\n   cea-RC2-cbc CONTENT-ENCRYPTION\
    \ ::= {\n       IDENTIFIER rc2-cbc\n       PARAMS TYPE RC2CBCParameter ARE required\n\
    \       SMIME-CAPS cap-RC2CBC\n   }\n   kt-rsa KEY-TRANSPORT ::= {\n       IDENTIFIER\
    \ rsaEncryption\n       PARAMS TYPE NULL ARE required\n       PUBLIC-KEYS { pk-rsa\
    \ }\n       SMIME-CAPS {IDENTIFIED BY rsaEncryption}\n   }\n   --  S/MIME Capabilities\
    \ - most have no label.\n   cap-3DESwrap SMIME-CAPS ::= { IDENTIFIED BY id-alg-CMS3DESwrap\
    \ }\n   END\n"
- title: 4.  ASN.1 Module for RFC 3565
  contents:
  - "4.  ASN.1 Module for RFC 3565\n   CMSAesRsaesOaep-2009 {iso(1) member-body(2)\
    \ us(840) rsadsi(113549)\n       pkcs(1) pkcs-9(9) smime(16) modules(0) id-mod-cms-aes-02(38)}\n\
    \   DEFINITIONS IMPLICIT TAGS ::=\n   BEGIN\n   IMPORTS\n   CONTENT-ENCRYPTION,\
    \ KEY-WRAP, SMIME-CAPS\n   FROM AlgorithmInformation-2009\n       {iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n       mechanisms(5) pkix(7) id-mod(0)\n   \
    \    id-mod-algorithmInformation-02(58)};\n   AES-ContentEncryption CONTENT-ENCRYPTION\
    \ ::= {\n       cea-aes128-cbc | cea-aes192-cbc | cea-aes256-cbc, ...\n   }\n\
    \   AES-KeyWrap KEY-WRAP ::= {\n       kwa-aes128-wrap | kwa-aes192-wrap | kwa-aes256-wrap,\
    \ ...\n   }\n   SMimeCaps SMIME-CAPS ::= {\n      cea-aes128-cbc.&smimeCaps |\n\
    \      cea-aes192-cbc.&smimeCaps |\n      cea-aes256-cbc.&smimeCaps |\n      kwa-aes128-wrap.&smimeCaps\
    \ |\n      kwa-aes192-wrap.&smimeCaps |\n      kwa-aes256-wrap.&smimeCaps, ...\n\
    \   }\n   -- AES information object identifiers --\n   aes OBJECT IDENTIFIER ::=\n\
    \       { joint-iso-itu-t(2) country(16) us(840) organization(1) gov(101)\n  \
    \     csor(3) nistAlgorithms(4)  1 }\n   -- AES using CBC mode for key sizes of\
    \ 128, 192, 256\n   cea-aes128-cbc CONTENT-ENCRYPTION ::= {\n       IDENTIFIER\
    \ id-aes128-CBC\n       PARAMS TYPE AES-IV ARE required\n       SMIME-CAPS { IDENTIFIED\
    \ BY id-aes128-CBC }\n   }\n   id-aes128-CBC OBJECT IDENTIFIER ::= { aes 2 }\n\
    \   cea-aes192-cbc CONTENT-ENCRYPTION ::= {\n       IDENTIFIER id-aes192-CBC\n\
    \       PARAMS TYPE AES-IV ARE required\n       SMIME-CAPS { IDENTIFIED BY id-aes192-CBC\
    \ }\n   }\n   id-aes192-CBC OBJECT IDENTIFIER ::= { aes 22 }\n   cea-aes256-cbc\
    \ CONTENT-ENCRYPTION ::= {\n       IDENTIFIER id-aes256-CBC\n       PARAMS TYPE\
    \ AES-IV ARE required\n       SMIME-CAPS { IDENTIFIED BY id-aes256-CBC }\n   }\n\
    \   id-aes256-CBC OBJECT IDENTIFIER ::= { aes 42 }\n   -- AES-IV is the parameter\
    \ for all the above object identifiers.\n   AES-IV ::= OCTET STRING (SIZE(16))\n\
    \   -- AES Key Wrap Algorithm Identifiers  - Parameter is absent\n   kwa-aes128-wrap\
    \ KEY-WRAP ::= {\n       IDENTIFIER id-aes128-wrap\n       PARAMS ARE absent\n\
    \       SMIME-CAPS { IDENTIFIED BY id-aes128-wrap }\n   }\n   id-aes128-wrap OBJECT\
    \ IDENTIFIER ::= { aes 5 }\n   kwa-aes192-wrap KEY-WRAP ::= {\n       IDENTIFIER\
    \ id-aes192-wrap\n       PARAMS ARE absent\n       SMIME-CAPS { IDENTIFIED BY\
    \ id-aes192-wrap }\n   }\n   id-aes192-wrap OBJECT IDENTIFIER ::= { aes 25 }\n\
    \   kwa-aes256-wrap KEY-WRAP ::= {\n       IDENTIFIER id-aes256-wrap\n       PARAMS\
    \ ARE absent\n       SMIME-CAPS { IDENTIFIED BY id-aes256-wrap }\n   }\n   id-aes256-wrap\
    \ OBJECT IDENTIFIER ::= { aes 45 }\n   END\n"
- title: 5.  ASN.1 Module for RFC 3851
  contents:
  - "5.  ASN.1 Module for RFC 3851\n SecureMimeMessageV3dot1-2009\n       {iso(1)\
    \ member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n       smime(16) modules(0)\
    \ id-mod-msg-v3dot1-02(39)}\n DEFINITIONS IMPLICIT TAGS ::=\n BEGIN\n IMPORTS\n\
    \ SMIME-CAPS, SMIMECapabilities{}\n FROM AlgorithmInformation-2009\n     {iso(1)\
    \ identified-organization(3) dod(6) internet(1) security(5)\n     mechanisms(5)\
    \ pkix(7) id-mod(0)\n     id-mod-algorithmInformation-02(58)}\n ATTRIBUTE\n FROM\
    \ PKIX-CommonTypes-2009\n     {iso(1) identified-organization(3) dod(6) internet(1)\
    \ security(5)\n     mechanisms(5) pkix(7) id-mod(0) id-mod-pkixCommon-02(57)}\n\
    \ SubjectKeyIdentifier, IssuerAndSerialNumber, RecipientKeyIdentifier\n FROM CryptographicMessageSyntax-2009\n\
    \     {iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n     smime(16)\
    \ modules(0) id-mod-cms-2004-02(41)}\n rc2-cbc, SMimeCaps\n FROM CryptographicMessageSyntaxAlgorithms-2009\n\
    \     {iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n     smime(16)\
    \ modules(0) id-mod-cmsalg-2001-02(37)}\n SMimeCaps\n FROM PKIXAlgs-2009\n   \
    \  {iso(1) identified-organization(3) dod(6) internet(1) security(5)\n     mechanisms(5)\
    \ pkix(7) id-mod(0)\n     id-mod-pkix1-algorithms2008-02(56)}\n SMimeCaps\n FROM\
    \ PKIX1-PSS-OAEP-Algorithms-2009\n      {iso(1) identified-organization(3) dod(6)\
    \ internet(1)\n      security(5) mechanisms(5) pkix(7) id-mod(0)\n      id-mod-pkix1-rsa-pkalgs-02(54)};\n\
    \ SMimeAttributeSet ATTRIBUTE ::=\n     { aa-smimeCapabilities | aa-encrypKeyPref,\
    \ ... }\n --  id-aa is the arc with all new authenticated and unauthenticated\n\
    \ --  attributes produced by the S/MIME Working Group\n id-aa OBJECT IDENTIFIER\
    \ ::=\n     { iso(1) member-body(2) usa(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n\
    \     smime(16) attributes(2)}\n -- The S/MIME Capabilities attribute provides\
    \ a method of broadcasting\n -- the symmetric capabilities understood.  Algorithms\
    \ SHOULD be ordered\n -- by preference and grouped by type\n aa-smimeCapabilities\
    \ ATTRIBUTE ::=\n     { TYPE SMIMECapabilities{{SMimeCapsSet}} IDENTIFIED BY\n\
    \           smimeCapabilities }\n smimeCapabilities OBJECT IDENTIFIER ::=\n  \
    \   { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n     15\
    \ }\n SMimeCapsSet SMIME-CAPS ::=\n     { cap-preferBinaryInside | cap-RC2CBC\
    \ |\n     PKIXAlgs-2009.SMimeCaps |\n     CryptographicMessageSyntaxAlgorithms-2009.SMimeCaps\
    \ |\n     PKIX1-PSS-OAEP-Algorithms-2009.SMimeCaps, ... }\n -- Encryption Key\
    \ Preference provides a method of broadcasting the\n -- preferred encryption certificate.\n\
    \ aa-encrypKeyPref ATTRIBUTE ::=\n     { TYPE SMIMEEncryptionKeyPreference\n \
    \        IDENTIFIED BY id-aa-encrypKeyPref }\n id-aa-encrypKeyPref OBJECT IDENTIFIER\
    \ ::= {id-aa 11}\n SMIMEEncryptionKeyPreference ::= CHOICE {\n    issuerAndSerialNumber\
    \   [0] IssuerAndSerialNumber,\n    receipentKeyId          [1] RecipientKeyIdentifier,\n\
    \    subjectAltKeyIdentifier [2] SubjectKeyIdentifier\n }\n -- receipentKeyId\
    \ is spelt incorrectly, but kept for historical\n -- reasons.\n id-smime OBJECT\
    \ IDENTIFIER ::= { iso(1) member-body(2)\n    us(840) rsadsi(113549) pkcs(1) pkcs9(9)\
    \ 16 }\n id-cap  OBJECT IDENTIFIER ::= { id-smime 11 }\n -- The preferBinaryInside\
    \ indicates an ability to receive messages\n -- with binary encoding inside the\
    \ CMS wrapper\n cap-preferBinaryInside SMIME-CAPS ::=\n     { -- No value -- IDENTIFIED\
    \ BY id-cap-preferBinaryInside }\n id-cap-preferBinaryInside  OBJECT IDENTIFIER\
    \ ::= { id-cap 1 }\n --  The following list OIDs to be used with S/MIME V3\n --\
    \ Signature Algorithms Not Found in [RFC3370]\n --\n -- md2WithRSAEncryption OBJECT\
    \ IDENTIFIER ::=\n --    {iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1)\
    \ pkcs-1(1)\n --     2}\n --\n -- Other Signed Attributes\n --\n -- signingTime\
    \ OBJECT IDENTIFIER ::=\n --    {iso(1) member-body(2) us(840) rsadsi(113549)\
    \ pkcs(1) pkcs-9(9)\n --     5}\n --    See [RFC5652] for a description of how\
    \ to encode the attribute\n --    value.\n cap-RC2CBC SMIME-CAPS ::=\n     { TYPE\
    \ SMIMECapabilitiesParametersForRC2CBC\n         IDENTIFIED BY rc2-cbc}\n SMIMECapabilitiesParametersForRC2CBC\
    \ ::= INTEGER (40 | 128, ...)\n --    (RC2 Key Length (number of bits))\n END\n"
- title: 6.  ASN.1 Module for RFC 3852
  contents:
  - "6.  ASN.1 Module for RFC 3852\n   This module has an ASN.1 idiom for noting in\
    \ which version of CMS\n   changes were made from the original PKCS #7; that idiom\
    \ is \"[[v:\",\n   where \"v\" is an integer.  For example:\n   RevocationInfoChoice\
    \ ::= CHOICE {\n       crl CertificateList,\n       ...,\n       [[5: other [1]\
    \ IMPLICIT OtherRevocationInfoFormat ]] }\n   Similarly, this module adds the\
    \ ASN.1 idiom for extensibility (the\n   \"...,\") in all places that have been\
    \ extended in the past.  See the\n   example above.\n  CryptographicMessageSyntax-2009\n\
    \      { iso(1) member-body(2) us(840) rsadsi(113549)\n      pkcs(1) pkcs-9(9)\
    \ smime(16) modules(0) id-mod-cms-2004-02(41) }\n  DEFINITIONS IMPLICIT TAGS ::=\n\
    \  BEGIN\n  IMPORTS\n  ParamOptions, DIGEST-ALGORITHM, SIGNATURE-ALGORITHM,\n\
    \      PUBLIC-KEY, KEY-DERIVATION, KEY-WRAP, MAC-ALGORITHM,\n      KEY-AGREE,\
    \ KEY-TRANSPORT, CONTENT-ENCRYPTION, ALGORITHM,\n      AlgorithmIdentifier\n \
    \ FROM AlgorithmInformation-2009\n      {iso(1) identified-organization(3) dod(6)\
    \ internet(1) security(5)\n      mechanisms(5) pkix(7) id-mod(0)\n      id-mod-algorithmInformation-02(58)}\n\
    \  SignatureAlgs, MessageDigestAlgs, KeyAgreementAlgs,\n      MessageAuthAlgs,\
    \ KeyWrapAlgs, ContentEncryptionAlgs,\n      KeyTransportAlgs, KeyDerivationAlgs,\
    \ KeyAgreePublicKeys\n  FROM CryptographicMessageSyntaxAlgorithms-2009\n     \
    \ { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n      smime(16)\
    \ modules(0) id-mod-cmsalg-2001-02(37) }\n  Certificate, CertificateList, CertificateSerialNumber,\n\
    \      Name, ATTRIBUTE\n  FROM PKIX1Explicit-2009\n      { iso(1) identified-organization(3)\
    \ dod(6) internet(1)\n      security(5) mechanisms(5) pkix(7) id-mod(0)\n    \
    \  id-mod-pkix1-explicit-02(51) }\n  AttributeCertificate\n  FROM PKIXAttributeCertificate-2009\n\
    \      { iso(1) identified-organization(3) dod(6) internet(1)\n      security(5)\
    \ mechanisms(5) pkix(7) id-mod(0)\n      id-mod-attribute-cert-02(47) }\n  AttributeCertificateV1\n\
    \  FROM AttributeCertificateVersion1-2009\n      { iso(1) member-body(2) us(840)\
    \ rsadsi(113549) pkcs(1) pkcs-9(9)\n      smime(16) modules(0) id-mod-v1AttrCert-02(49)\
    \ } ;\n  -- Cryptographic Message Syntax\n  -- The following are used for version\
    \ numbers using the ASN.1\n  --   idiom \"[[n:\"\n  --   Version 1 = PKCS #7\n\
    \  --   Version 2 = S/MIME V2\n  --   Version 3 = RFC 2630\n  --   Version 4 =\
    \ RFC 3369\n  --   Version 5 = RFC 3852\n  CONTENT-TYPE ::= TYPE-IDENTIFIER\n\
    \  ContentType ::= CONTENT-TYPE.&id\n  ContentInfo ::= SEQUENCE {\n      contentType\
    \        CONTENT-TYPE.\n                      &id({ContentSet}),\n      content\
    \            [0] EXPLICIT CONTENT-TYPE.\n                      &Type({ContentSet}{@contentType})}\n\
    \  ContentSet CONTENT-TYPE ::= {\n      --  Define the set of content types to\
    \ be recognized.\n      ct-Data | ct-SignedData | ct-EncryptedData | ct-EnvelopedData\
    \ |\n      ct-AuthenticatedData | ct-DigestedData, ... }\n  SignedData ::= SEQUENCE\
    \ {\n      version CMSVersion,\n      digestAlgorithms SET OF DigestAlgorithmIdentifier,\n\
    \      encapContentInfo EncapsulatedContentInfo,\n      certificates [0] IMPLICIT\
    \ CertificateSet OPTIONAL,\n      crls [1] IMPLICIT RevocationInfoChoices OPTIONAL,\n\
    \      signerInfos SignerInfos }\n  SignerInfos ::= SET OF SignerInfo\n  EncapsulatedContentInfo\
    \ ::= SEQUENCE {\n      eContentType       CONTENT-TYPE.&id({ContentSet}),\n \
    \     eContent           [0] EXPLICIT OCTET STRING\n              ( CONTAINING\
    \ CONTENT-TYPE.\n                  &Type({ContentSet}{@eContentType})) OPTIONAL\
    \ }\n  SignerInfo ::= SEQUENCE {\n      version CMSVersion,\n      sid SignerIdentifier,\n\
    \      digestAlgorithm DigestAlgorithmIdentifier,\n      signedAttrs [0] IMPLICIT\
    \ SignedAttributes OPTIONAL,\n      signatureAlgorithm SignatureAlgorithmIdentifier,\n\
    \      signature SignatureValue,\n      unsignedAttrs [1] IMPLICIT Attributes\n\
    \          {{UnsignedAttributes}} OPTIONAL }\n  SignedAttributes ::= Attributes\
    \ {{ SignedAttributesSet }}\n  SignerIdentifier ::= CHOICE {\n      issuerAndSerialNumber\
    \ IssuerAndSerialNumber,\n      ...,\n      [[3: subjectKeyIdentifier [0] SubjectKeyIdentifier\
    \ ]] }\n  SignedAttributesSet ATTRIBUTE ::=\n      { aa-signingTime | aa-messageDigest\
    \ | aa-contentType, ... }\n  UnsignedAttributes ATTRIBUTE ::= { aa-countersignature,\
    \ ... }\n  SignatureValue ::= OCTET STRING\n  EnvelopedData ::= SEQUENCE {\n \
    \     version CMSVersion,\n      originatorInfo [0] IMPLICIT OriginatorInfo OPTIONAL,\n\
    \      recipientInfos RecipientInfos,\n      encryptedContentInfo EncryptedContentInfo,\n\
    \      ...,\n      [[2: unprotectedAttrs [1] IMPLICIT Attributes\n          {{\
    \ UnprotectedAttributes }} OPTIONAL ]] }\n  OriginatorInfo ::= SEQUENCE {\n  \
    \    certs [0] IMPLICIT CertificateSet OPTIONAL,\n      crls [1] IMPLICIT RevocationInfoChoices\
    \ OPTIONAL }\n  RecipientInfos ::= SET SIZE (1..MAX) OF RecipientInfo\n  EncryptedContentInfo\
    \ ::= SEQUENCE {\n      contentType        CONTENT-TYPE.&id({ContentSet}),\n \
    \     contentEncryptionAlgorithm ContentEncryptionAlgorithmIdentifier,\n     \
    \ encryptedContent   [0] IMPLICIT OCTET STRING OPTIONAL }\n  -- If you want to\
    \ do constraints, you might use:\n  -- EncryptedContentInfo ::= SEQUENCE {\n \
    \ --  contentType        CONTENT-TYPE.&id({ContentSet}),\n  --  contentEncryptionAlgorithm\
    \ ContentEncryptionAlgorithmIdentifier,\n  --  encryptedContent   [0] IMPLICIT\
    \ ENCRYPTED {CONTENT-TYPE.\n  --      &Type({ContentSet}{@contentType}) OPTIONAL\
    \ }\n  -- ENCRYPTED {ToBeEncrypted} ::= OCTET STRING ( CONSTRAINED BY\n  --  \
    \      { ToBeEncrypted } )\n  UnprotectedAttributes ATTRIBUTE ::=  { ... }\n \
    \ RecipientInfo ::= CHOICE {\n      ktri           KeyTransRecipientInfo,\n  \
    \    ...,\n      [[3: kari  [1] KeyAgreeRecipientInfo ]],\n      [[4: kekri [2]\
    \ KEKRecipientInfo]],\n      [[5: pwri  [3] PasswordRecipientInfo,\n         \
    \  ori   [4] OtherRecipientInfo ]] }\n  EncryptedKey ::= OCTET STRING\n  KeyTransRecipientInfo\
    \ ::= SEQUENCE {\n      version CMSVersion,  -- always set to 0 or 2\n      rid\
    \ RecipientIdentifier,\n      keyEncryptionAlgorithm AlgorithmIdentifier\n   \
    \       {KEY-TRANSPORT, {KeyTransportAlgorithmSet}},\n      encryptedKey EncryptedKey\
    \ }\n  KeyTransportAlgorithmSet KEY-TRANSPORT ::= { KeyTransportAlgs, ... }\n\
    \  RecipientIdentifier ::= CHOICE {\n      issuerAndSerialNumber IssuerAndSerialNumber,\n\
    \      ...,\n      [[2: subjectKeyIdentifier [0] SubjectKeyIdentifier ]] }\n \
    \ KeyAgreeRecipientInfo ::= SEQUENCE {\n      version CMSVersion,  -- always set\
    \ to 3\n      originator [0] EXPLICIT OriginatorIdentifierOrKey,\n      ukm [1]\
    \ EXPLICIT UserKeyingMaterial OPTIONAL,\n      keyEncryptionAlgorithm AlgorithmIdentifier\n\
    \          {KEY-AGREE, {KeyAgreementAlgorithmSet}},\n      recipientEncryptedKeys\
    \ RecipientEncryptedKeys }\n  KeyAgreementAlgorithmSet KEY-AGREE ::= { KeyAgreementAlgs,\
    \ ... }\n  OriginatorIdentifierOrKey ::= CHOICE {\n      issuerAndSerialNumber\
    \ IssuerAndSerialNumber,\n      subjectKeyIdentifier [0] SubjectKeyIdentifier,\n\
    \      originatorKey [1] OriginatorPublicKey }\n  OriginatorPublicKey ::= SEQUENCE\
    \ {\n      algorithm AlgorithmIdentifier {PUBLIC-KEY, {OriginatorKeySet}},\n \
    \     publicKey BIT STRING }\n  OriginatorKeySet PUBLIC-KEY ::= { KeyAgreePublicKeys,\
    \ ... }\n  RecipientEncryptedKeys ::= SEQUENCE OF RecipientEncryptedKey\n  RecipientEncryptedKey\
    \ ::= SEQUENCE {\n      rid KeyAgreeRecipientIdentifier,\n      encryptedKey EncryptedKey\
    \ }\n  KeyAgreeRecipientIdentifier ::= CHOICE {\n      issuerAndSerialNumber IssuerAndSerialNumber,\n\
    \      rKeyId [0] IMPLICIT RecipientKeyIdentifier }\n  RecipientKeyIdentifier\
    \ ::= SEQUENCE {\n      subjectKeyIdentifier SubjectKeyIdentifier,\n      date\
    \ GeneralizedTime OPTIONAL,\n      other OtherKeyAttribute OPTIONAL }\n  SubjectKeyIdentifier\
    \ ::= OCTET STRING\n  KEKRecipientInfo ::= SEQUENCE {\n      version CMSVersion,\
    \  -- always set to 4\n      kekid KEKIdentifier,\n      keyEncryptionAlgorithm\
    \ KeyEncryptionAlgorithmIdentifier,\n      encryptedKey EncryptedKey }\n  KEKIdentifier\
    \ ::= SEQUENCE {\n      keyIdentifier OCTET STRING,\n      date GeneralizedTime\
    \ OPTIONAL,\n      other OtherKeyAttribute OPTIONAL }\n  PasswordRecipientInfo\
    \ ::= SEQUENCE {\n      version CMSVersion,   -- always set to 0\n      keyDerivationAlgorithm\
    \ [0] KeyDerivationAlgorithmIdentifier\n                              OPTIONAL,\n\
    \      keyEncryptionAlgorithm KeyEncryptionAlgorithmIdentifier,\n      encryptedKey\
    \ EncryptedKey }\n  OTHER-RECIPIENT ::= TYPE-IDENTIFIER\n  OtherRecipientInfo\
    \ ::= SEQUENCE {\n      oriType    OTHER-RECIPIENT.\n              &id({SupportedOtherRecipInfo}),\n\
    \      oriValue   OTHER-RECIPIENT.\n              &Type({SupportedOtherRecipInfo}{@oriType})}\n\
    \  SupportedOtherRecipInfo OTHER-RECIPIENT ::= { ... }\n  DigestedData ::= SEQUENCE\
    \ {\n      version CMSVersion,\n      digestAlgorithm DigestAlgorithmIdentifier,\n\
    \      encapContentInfo EncapsulatedContentInfo,\n      digest Digest, ... }\n\
    \  Digest ::= OCTET STRING\n  EncryptedData ::= SEQUENCE {\n      version CMSVersion,\n\
    \      encryptedContentInfo EncryptedContentInfo,\n      ...,\n      [[2: unprotectedAttrs\
    \ [1] IMPLICIT Attributes\n          {{UnprotectedAttributes}} OPTIONAL ]] }\n\
    \  AuthenticatedData ::= SEQUENCE {\n      version CMSVersion,\n      originatorInfo\
    \ [0] IMPLICIT OriginatorInfo OPTIONAL,\n      recipientInfos RecipientInfos,\n\
    \      macAlgorithm MessageAuthenticationCodeAlgorithm,\n      digestAlgorithm\
    \ [1] DigestAlgorithmIdentifier OPTIONAL,\n      encapContentInfo EncapsulatedContentInfo,\n\
    \      authAttrs [2] IMPLICIT AuthAttributes OPTIONAL,\n      mac MessageAuthenticationCode,\n\
    \      unauthAttrs [3] IMPLICIT UnauthAttributes OPTIONAL }\n  AuthAttributes\
    \ ::= SET SIZE (1..MAX) OF Attribute\n      {{AuthAttributeSet}}\n  AuthAttributeSet\
    \ ATTRIBUTE ::= { aa-contentType | aa-messageDigest\n                        \
    \               | aa-signingTime, ...}\n  MessageAuthenticationCode ::= OCTET\
    \ STRING\n  UnauthAttributes ::= SET SIZE (1..MAX) OF Attribute\n      {{UnauthAttributeSet}}\n\
    \  UnauthAttributeSet ATTRIBUTE ::= {...}\n  --\n  --  General algorithm definitions\n\
    \  --\n  DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n      {DIGEST-ALGORITHM,\
    \ {DigestAlgorithmSet}}\n  DigestAlgorithmSet DIGEST-ALGORITHM ::= {\n      CryptographicMessageSyntaxAlgorithms-2009.MessageDigestAlgs,\
    \ ... }\n  SignatureAlgorithmIdentifier ::= AlgorithmIdentifier\n      {SIGNATURE-ALGORITHM,\
    \ {SignatureAlgorithmSet}}\n  SignatureAlgorithmSet SIGNATURE-ALGORITHM ::=\n\
    \      { SignatureAlgs, ... }\n  KeyEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n\
    \      {KEY-WRAP, {KeyEncryptionAlgorithmSet}}\n  KeyEncryptionAlgorithmSet KEY-WRAP\
    \ ::= { KeyWrapAlgs, ... }\n  ContentEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n\
    \      {CONTENT-ENCRYPTION, {ContentEncryptionAlgorithmSet}}\n  ContentEncryptionAlgorithmSet\
    \ CONTENT-ENCRYPTION ::=\n      { ContentEncryptionAlgs, ... }\n  MessageAuthenticationCodeAlgorithm\
    \ ::= AlgorithmIdentifier\n      {MAC-ALGORITHM, {MessageAuthenticationCodeAlgorithmSet}}\n\
    \  MessageAuthenticationCodeAlgorithmSet MAC-ALGORITHM ::=\n      { MessageAuthAlgs,\
    \ ... }\n  KeyDerivationAlgorithmIdentifier ::= AlgorithmIdentifier\n      {KEY-DERIVATION,\
    \ {KeyDerivationAlgs, ...}}\n  RevocationInfoChoices ::= SET OF RevocationInfoChoice\n\
    \  RevocationInfoChoice ::= CHOICE {\n      crl CertificateList,\n      ...,\n\
    \      [[5: other [1] IMPLICIT OtherRevocationInfoFormat ]] }\n  OTHER-REVOK-INFO\
    \ ::= TYPE-IDENTIFIER\n  OtherRevocationInfoFormat ::= SEQUENCE {\n      otherRevInfoFormat\
    \    OTHER-REVOK-INFO.\n              &id({SupportedOtherRevokInfo}),\n      otherRevInfo\
    \          OTHER-REVOK-INFO.\n              &Type({SupportedOtherRevokInfo}{@otherRevInfoFormat})}\n\
    \  SupportedOtherRevokInfo OTHER-REVOK-INFO ::= { ... }\n  CertificateChoices\
    \ ::= CHOICE {\n      certificate Certificate,\n      extendedCertificate [0]\
    \ IMPLICIT ExtendedCertificate,\n           -- Obsolete\n      ...,\n      [[3:\
    \ v1AttrCert [1] IMPLICIT AttributeCertificateV1]],\n           -- Obsolete\n\
    \      [[4: v2AttrCert [2] IMPLICIT AttributeCertificateV2]],\n      [[5: other\
    \      [3] IMPLICIT OtherCertificateFormat]] }\n  AttributeCertificateV2 ::= AttributeCertificate\n\
    \  OTHER-CERT-FMT ::= TYPE-IDENTIFIER\n  OtherCertificateFormat ::= SEQUENCE {\n\
    \      otherCertFormat OTHER-CERT-FMT.\n              &id({SupportedCertFormats}),\n\
    \      otherCert       OTHER-CERT-FMT.\n              &Type({SupportedCertFormats}{@otherCertFormat})}\n\
    \  SupportedCertFormats OTHER-CERT-FMT ::= { ... }\n  CertificateSet ::= SET OF\
    \ CertificateChoices\n  IssuerAndSerialNumber ::= SEQUENCE {\n      issuer Name,\n\
    \      serialNumber CertificateSerialNumber }\n  CMSVersion ::= INTEGER  { v0(0),\
    \ v1(1), v2(2), v3(3), v4(4), v5(5) }\n  UserKeyingMaterial ::= OCTET STRING\n\
    \  KEY-ATTRIBUTE ::= TYPE-IDENTIFIER\n  OtherKeyAttribute ::= SEQUENCE {\n   \
    \   keyAttrId  KEY-ATTRIBUTE.\n              &id({SupportedKeyAttributes}),\n\
    \      keyAttr    KEY-ATTRIBUTE.\n              &Type({SupportedKeyAttributes}{@keyAttrId})}\n\
    \  SupportedKeyAttributes KEY-ATTRIBUTE ::= { ... }\n  -- Content Type Object\
    \ Identifiers\n  id-ct-contentInfo OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n\
    \     us(840) rsadsi(113549) pkcs(1) pkcs9(9) smime(16) ct(1) 6 }\n  ct-Data CONTENT-TYPE\
    \ ::= {OCTET STRING IDENTIFIED BY id-data}\n  id-data OBJECT IDENTIFIER ::= {\
    \ iso(1) member-body(2)\n     us(840) rsadsi(113549) pkcs(1) pkcs7(7) 1 }\n  ct-SignedData\
    \ CONTENT-TYPE ::=\n      { SignedData IDENTIFIED BY id-signedData}\n  id-signedData\
    \ OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n     us(840) rsadsi(113549) pkcs(1)\
    \ pkcs7(7) 2 }\n  ct-EnvelopedData CONTENT-TYPE ::=\n      { EnvelopedData IDENTIFIED\
    \ BY id-envelopedData}\n  id-envelopedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n\
    \     us(840) rsadsi(113549) pkcs(1) pkcs7(7) 3 }\n  ct-DigestedData CONTENT-TYPE\
    \ ::=\n      { DigestedData IDENTIFIED BY id-digestedData}\n  id-digestedData\
    \ OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n     us(840) rsadsi(113549) pkcs(1)\
    \ pkcs7(7) 5 }\n  ct-EncryptedData CONTENT-TYPE ::=\n      { EncryptedData IDENTIFIED\
    \ BY id-encryptedData}\n  id-encryptedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n\
    \     us(840) rsadsi(113549) pkcs(1) pkcs7(7) 6 }\n  ct-AuthenticatedData CONTENT-TYPE\
    \ ::=\n      { AuthenticatedData IDENTIFIED BY id-ct-authData}\n  id-ct-authData\
    \ OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n     us(840) rsadsi(113549) pkcs(1)\
    \ pkcs-9(9) smime(16) ct(1) 2 }\n  --\n  -- The CMS Attributes\n  --\n  MessageDigest\
    \ ::= OCTET STRING\n  SigningTime  ::= Time\n  Time ::= CHOICE {\n      utcTime\
    \ UTCTime,\n      generalTime GeneralizedTime }\n  Countersignature ::= SignerInfo\n\
    \  -- Attribute Object Identifiers\n  aa-contentType ATTRIBUTE ::=\n      { TYPE\
    \ ContentType IDENTIFIED BY id-contentType }\n  id-contentType OBJECT IDENTIFIER\
    \ ::= { iso(1) member-body(2)\n     us(840) rsadsi(113549) pkcs(1) pkcs9(9) 3\
    \ }\n  aa-messageDigest ATTRIBUTE ::=\n      { TYPE MessageDigest IDENTIFIED BY\
    \ id-messageDigest}\n  id-messageDigest OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n\
    \     us(840) rsadsi(113549) pkcs(1) pkcs9(9) 4 }\n  aa-signingTime ATTRIBUTE\
    \ ::=\n      { TYPE SigningTime IDENTIFIED BY id-signingTime }\n  id-signingTime\
    \ OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n     us(840) rsadsi(113549) pkcs(1)\
    \ pkcs9(9) 5 }\n  aa-countersignature ATTRIBUTE ::=\n      { TYPE Countersignature\
    \ IDENTIFIED BY id-countersignature }\n  id-countersignature OBJECT IDENTIFIER\
    \ ::= { iso(1) member-body(2)\n     us(840) rsadsi(113549) pkcs(1) pkcs9(9) 6\
    \ }\n  --\n  -- Obsolete Extended Certificate syntax from PKCS#6\n  --\n  ExtendedCertificateOrCertificate\
    \ ::= CHOICE {\n      certificate Certificate,\n      extendedCertificate [0]\
    \ IMPLICIT ExtendedCertificate }\n  ExtendedCertificate ::= SEQUENCE {\n     \
    \ extendedCertificateInfo ExtendedCertificateInfo,\n      signatureAlgorithm SignatureAlgorithmIdentifier,\n\
    \      signature Signature }\n  ExtendedCertificateInfo ::= SEQUENCE {\n     \
    \ version CMSVersion,\n      certificate Certificate,\n      attributes UnauthAttributes\
    \ }\n  Signature ::= BIT STRING\n  Attribute{ ATTRIBUTE:AttrList } ::= SEQUENCE\
    \ {\n      attrType           ATTRIBUTE.\n              &id({AttrList}),\n   \
    \   attrValues         SET OF ATTRIBUTE.\n              &Type({AttrList}{@attrType})\
    \  }\n  Attributes { ATTRIBUTE:AttrList } ::=\n      SET SIZE (1..MAX) OF Attribute\
    \ {{ AttrList }}\n  END\n"
- title: 7.  ASN.1 Module for RFC 4108
  contents:
  - "7.  ASN.1 Module for RFC 4108\n  CMSFirmwareWrapper-2009\n      { iso(1) member-body(2)\
    \ us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n      smime(16) modules(0) id-mod-cms-firmware-wrap-02(40)\
    \ }\n  DEFINITIONS IMPLICIT TAGS ::=\n  BEGIN\n  IMPORTS\n  OTHER-NAME\n  FROM\
    \ PKIX1Implicit-2009\n      { iso(1) identified-organization(3) dod(6) internet(1)\
    \ security(5)\n      mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-implicit-02(59)\
    \ }\n  EnvelopedData, CONTENT-TYPE, ATTRIBUTE\n  FROM CryptographicMessageSyntax-2009\n\
    \      { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    \
    \  smime(16) modules(0) id-mod-cms-2004-02(41) };\n  FirmwareContentTypes CONTENT-TYPE\
    \ ::= {\n          ct-firmwarePackage | ct-firmwareLoadReceipt |\n          ct-firmwareLoadError,...\
    \ }\n  FirmwareSignedAttrs ATTRIBUTE ::= {\n          aa-firmwarePackageID | aa-targetHardwareIDs\
    \ |\n          aa-decryptKeyID | aa-implCryptoAlgs | aa-implCompressAlgs |\n \
    \         aa-communityIdentifiers | aa-firmwarePackageInfo,... }\n  FirmwareUnsignedAttrs\
    \ ATTRIBUTE ::= {\n          aa-wrappedFirmwareKey, ... }\n  FirmwareOtherNames\
    \ OTHER-NAME ::= {\n          on-hardwareModuleName, ... }\n  -- Firmware Package\
    \ Content Type and Object Identifier\n  ct-firmwarePackage CONTENT-TYPE ::=\n\
    \          { FirmwarePkgData IDENTIFIED BY id-ct-firmwarePackage }\n  id-ct-firmwarePackage\
    \ OBJECT IDENTIFIER ::= {\n      iso(1) member-body(2) us(840) rsadsi(113549)\
    \ pkcs(1) pkcs9(9)\n      smime(16) ct(1) 16 }\n  FirmwarePkgData ::= OCTET STRING\n\
    \  -- Firmware Package Signed Attributes and Object Identifiers\n  aa-firmwarePackageID\
    \ ATTRIBUTE ::=\n      { TYPE FirmwarePackageIdentifier IDENTIFIED BY\n      \
    \    id-aa-firmwarePackageID }\n  id-aa-firmwarePackageID OBJECT IDENTIFIER ::=\
    \ {\n      iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n   \
    \   smime(16) aa(2) 35 }\n  FirmwarePackageIdentifier ::= SEQUENCE {\n      name\
    \ PreferredOrLegacyPackageIdentifier,\n      stale PreferredOrLegacyStalePackageIdentifier\
    \ OPTIONAL }\n  PreferredOrLegacyPackageIdentifier ::= CHOICE {\n      preferred\
    \ PreferredPackageIdentifier,\n      legacy OCTET STRING }\n  PreferredPackageIdentifier\
    \ ::= SEQUENCE {\n      fwPkgID OBJECT IDENTIFIER,\n      verNum INTEGER (0..MAX)\
    \ }\n  PreferredOrLegacyStalePackageIdentifier ::= CHOICE {\n      preferredStaleVerNum\
    \ INTEGER (0..MAX),\n      legacyStaleVersion OCTET STRING }\n  aa-targetHardwareIDs\
    \ ATTRIBUTE ::=\n      { TYPE TargetHardwareIdentifiers IDENTIFIED BY\n      \
    \    id-aa-targetHardwareIDs }\n  id-aa-targetHardwareIDs OBJECT IDENTIFIER ::=\
    \ {\n      iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n   \
    \   smime(16) aa(2) 36 }\n  TargetHardwareIdentifiers ::= SEQUENCE OF OBJECT IDENTIFIER\n\
    \  aa-decryptKeyID ATTRIBUTE ::=\n          { TYPE DecryptKeyIdentifier IDENTIFIED\
    \ BY id-aa-decryptKeyID}\n  id-aa-decryptKeyID OBJECT IDENTIFIER ::= {\n     \
    \ iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n      smime(16)\
    \ aa(2) 37 }\n  DecryptKeyIdentifier ::= OCTET STRING\n  aa-implCryptoAlgs ATTRIBUTE\
    \ ::=\n      { TYPE ImplementedCryptoAlgorithms IDENTIFIED BY\n          id-aa-implCryptoAlgs\
    \ }\n  id-aa-implCryptoAlgs OBJECT IDENTIFIER ::= {\n      iso(1) member-body(2)\
    \ us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n      smime(16) aa(2) 38 }\n  ImplementedCryptoAlgorithms\
    \ ::= SEQUENCE OF OBJECT IDENTIFIER\n  aa-implCompressAlgs ATTRIBUTE ::=\n   \
    \   { TYPE ImplementedCompressAlgorithms IDENTIFIED BY\n          id-aa-implCompressAlgs\
    \ }\n  id-aa-implCompressAlgs OBJECT IDENTIFIER ::= {\n      iso(1) member-body(2)\
    \ us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n      smime(16) aa(2) 43 }\n  ImplementedCompressAlgorithms\
    \ ::= SEQUENCE OF OBJECT IDENTIFIER\n  aa-communityIdentifiers ATTRIBUTE ::=\n\
    \      { TYPE CommunityIdentifiers IDENTIFIED BY\n          id-aa-communityIdentifiers\
    \ }\n  id-aa-communityIdentifiers OBJECT IDENTIFIER ::= {\n      iso(1) member-body(2)\
    \ us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n      smime(16) aa(2) 40 }\n  CommunityIdentifiers\
    \ ::= SEQUENCE OF CommunityIdentifier\n  CommunityIdentifier ::= CHOICE {\n  \
    \    communityOID OBJECT IDENTIFIER,\n      hwModuleList HardwareModules }\n \
    \ HardwareModules ::= SEQUENCE {\n      hwType OBJECT IDENTIFIER,\n      hwSerialEntries\
    \ SEQUENCE OF HardwareSerialEntry }\n  HardwareSerialEntry ::= CHOICE {\n    \
    \  all NULL,\n      single OCTET STRING,\n      block SEQUENCE {\n          low\
    \ OCTET STRING,\n          high OCTET STRING\n      }\n  }\n  aa-firmwarePackageInfo\
    \ ATTRIBUTE ::=\n      { TYPE FirmwarePackageInfo IDENTIFIED BY\n          id-aa-firmwarePackageInfo\
    \ }\n  id-aa-firmwarePackageInfo OBJECT IDENTIFIER ::= {\n      iso(1) member-body(2)\
    \ us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n      smime(16) aa(2) 42 }\n  FirmwarePackageInfo\
    \ ::= SEQUENCE {\n      fwPkgType INTEGER OPTIONAL,\n      dependencies SEQUENCE\
    \ OF\n      PreferredOrLegacyPackageIdentifier OPTIONAL }\n  -- Firmware Package\
    \ Unsigned Attributes and Object Identifiers\n  aa-wrappedFirmwareKey ATTRIBUTE\
    \ ::=\n      { TYPE WrappedFirmwareKey IDENTIFIED BY\n          id-aa-wrappedFirmwareKey\
    \ }\n  id-aa-wrappedFirmwareKey OBJECT IDENTIFIER ::= {\n      iso(1) member-body(2)\
    \ us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n      smime(16) aa(2) 39 }\n  WrappedFirmwareKey\
    \ ::= EnvelopedData\n  -- Firmware Package Load Receipt Content Type and Object\
    \ Identifier\n  ct-firmwareLoadReceipt CONTENT-TYPE ::=\n      { FirmwarePackageLoadReceipt\
    \ IDENTIFIED BY\n          id-ct-firmwareLoadReceipt }\n  id-ct-firmwareLoadReceipt\
    \ OBJECT IDENTIFIER ::= {\n      iso(1) member-body(2) us(840) rsadsi(113549)\
    \ pkcs(1) pkcs9(9)\n      smime(16) ct(1) 17 }\n  FirmwarePackageLoadReceipt ::=\
    \ SEQUENCE {\n      version FWReceiptVersion DEFAULT v1,\n      hwType OBJECT\
    \ IDENTIFIER,\n      hwSerialNum OCTET STRING,\n      fwPkgName PreferredOrLegacyPackageIdentifier,\n\
    \      trustAnchorKeyID OCTET STRING OPTIONAL,\n      decryptKeyID [1] OCTET STRING\
    \ OPTIONAL }\n  FWReceiptVersion ::= INTEGER { v1(1) }\n  -- Firmware Package\
    \ Load Error Report Content Type\n  -- and Object Identifier\n  ct-firmwareLoadError\
    \ CONTENT-TYPE ::=\n      { FirmwarePackageLoadError\n          IDENTIFIED BY\
    \ id-ct-firmwareLoadError }\n  id-ct-firmwareLoadError OBJECT IDENTIFIER ::= {\n\
    \      iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n      smime(16)\
    \ ct(1) 18 }\n  FirmwarePackageLoadError ::= SEQUENCE {\n      version FWErrorVersion\
    \ DEFAULT v1,\n      hwType OBJECT IDENTIFIER,\n      hwSerialNum OCTET STRING,\n\
    \      errorCode FirmwarePackageLoadErrorCode,\n      vendorErrorCode VendorLoadErrorCode\
    \ OPTIONAL,\n      fwPkgName PreferredOrLegacyPackageIdentifier OPTIONAL,\n  \
    \    config [1] SEQUENCE OF CurrentFWConfig OPTIONAL }\n  FWErrorVersion ::= INTEGER\
    \ { v1(1) }\n  CurrentFWConfig ::= SEQUENCE {\n      fwPkgType INTEGER OPTIONAL,\n\
    \      fwPkgName PreferredOrLegacyPackageIdentifier }\n  FirmwarePackageLoadErrorCode\
    \ ::= ENUMERATED {\n      decodeFailure                (1),\n      badContentInfo\
    \               (2),\n      badSignedData                (3),\n      badEncapContent\
    \              (4),\n      badCertificate               (5),\n      badSignerInfo\
    \                (6),\n      badSignedAttrs               (7),\n      badUnsignedAttrs\
    \             (8),\n      missingContent               (9),\n      noTrustAnchor\
    \               (10),\n      notAuthorized               (11),\n      badDigestAlgorithm\
    \          (12),\n      badSignatureAlgorithm       (13),\n      unsupportedKeySize\
    \          (14),\n      signatureFailure            (15),\n      contentTypeMismatch\
    \         (16),\n      badEncryptedData            (17),\n      unprotectedAttrsPresent\
    \     (18),\n      badEncryptContent           (19),\n      badEncryptAlgorithm\
    \         (20),\n      missingCiphertext           (21),\n      noDecryptKey \
    \               (22),\n      decryptFailure              (23),\n      badCompressAlgorithm\
    \        (24),\n      missingCompressedContent    (25),\n      decompressFailure\
    \           (26),\n      wrongHardware               (27),\n      stalePackage\
    \                (28),\n      notInCommunity              (29),\n      unsupportedPackageType\
    \      (30),\n      missingDependency           (31),\n      wrongDependencyVersion\
    \      (32),\n      insufficientMemory          (33),\n      badFirmware     \
    \            (34),\n      unsupportedParameters       (35),\n      breaksDependency\
    \            (36),\n      otherError                  (99) }\n  VendorLoadErrorCode\
    \ ::= INTEGER\n  -- Other Name syntax for Hardware Module Name\n  on-hardwareModuleName\
    \ OTHER-NAME ::=\n          { HardwareModuleName IDENTIFIED BY id-on-hardwareModuleName\
    \ }\n  id-on-hardwareModuleName OBJECT IDENTIFIER ::= {\n      iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n      mechanisms(5) pkix(7) on(8) 4 }\n  HardwareModuleName\
    \ ::= SEQUENCE {\n      hwType OBJECT IDENTIFIER,\n      hwSerialNum OCTET STRING\
    \ }\n  END\n"
- title: 8.  ASN.1 Module for RFC 4998
  contents:
  - "8.  ASN.1 Module for RFC 4998\n   ERS {iso(1) identified-organization(3) dod(6)\
    \ internet(1)\n       security(5) mechanisms(5) ltans(11) id-mod(0) id-mod-ers(1)\n\
    \       id-mod-ers-v1(1) }\n   DEFINITIONS IMPLICIT TAGS ::=\n   BEGIN\n   IMPORTS\n\
    \   AttributeSet{}, ATTRIBUTE\n   FROM PKIX-CommonTypes\n       {iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n       mechanisms(5) pkix(7) id-mod(0) id-mod-pkixCommon-02(57)\
    \ }\n   AlgorithmIdentifier{}, ALGORITHM, DIGEST-ALGORITHM\n   FROM AlgorithmInformation-2009\n\
    \       {iso(1) identified-organization(3) dod(6) internet(1) security(5)\n  \
    \     mechanisms(5) pkix(7) id-mod(0)\n       id-mod-algorithmInformation-02(58)}\n\
    \   ContentInfo\n   FROM CryptographicMessageSyntax2004\n       { iso(1) member-body(2)\
    \ us(840) rsadsi(113549)\n       pkcs(1) pkcs-9(9) smime(16) modules(0) id-mod-cms-2004-02(41)\
    \ } ;\n   aa-er-Internal ATTRIBUTE ::=\n       { TYPE EvidenceRecord IDENTIFIED\
    \ BY id-aa-er-internal }\n   id-aa-er-internal OBJECT IDENTIFIER ::=\n       {\
    \ iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n       smime(16)\
    \ id-aa(2) 49 }\n   aa-er-External ATTRIBUTE ::=\n       { TYPE EvidenceRecord\
    \ IDENTIFIED BY id-aa-er-external }\n   id-aa-er-external OBJECT IDENTIFIER ::=\n\
    \       { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n    \
    \   smime(16) id-aa(2) 50 }\n   ltans OBJECT IDENTIFIER ::=\n       {iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n       mechanisms(5) ltans(11) }\n   EvidenceRecord\
    \ ::= SEQUENCE {\n       version                   INTEGER { v1(1) } ,\n     \
    \  digestAlgorithms          SEQUENCE OF AlgorithmIdentifier\n               \
    \                      {DIGEST-ALGORITHM, {...}},\n       cryptoInfos        \
    \       [0] CryptoInfos OPTIONAL,\n       encryptionInfo            [1] EncryptionInfo\
    \ OPTIONAL,\n       archiveTimeStampSequence  ArchiveTimeStampSequence\n   }\n\
    \   CryptoInfos ::= SEQUENCE SIZE (1..MAX) OF AttributeSet{{...}}\n   ArchiveTimeStampSequence\
    \ ::= SEQUENCE OF ArchiveTimeStampChain\n   ArchiveTimeStampChain    ::= SEQUENCE\
    \ OF ArchiveTimeStamp\n   ArchiveTimeStamp ::= SEQUENCE {\n      digestAlgorithm\
    \ [0] AlgorithmIdentifier{DIGEST-ALGORITHM, {...}}\n                         \
    \     OPTIONAL,\n      attributes      [1] Attributes OPTIONAL,\n      reducedHashtree\
    \ [2] SEQUENCE OF PartialHashtree OPTIONAL,\n      timeStamp       ContentInfo\n\
    \   }\n   PartialHashtree ::= SEQUENCE OF OCTET STRING\n   Attributes ::= SET\
    \ SIZE (1..MAX) OF AttributeSet{{...}}\n   EncryptionInfo       ::=     SEQUENCE\
    \ {\n       encryptionInfoType   ENCINFO-TYPE.\n                             \
    \   &id({SupportedEncryptionAlgorithms}),\n       encryptionInfoValue  ENCINFO-TYPE.\n\
    \                                &Type({SupportedEncryptionAlgorithms}\n     \
    \                               {@encryptionInfoType})\n   }\n   ENCINFO-TYPE\
    \ ::= TYPE-IDENTIFIER\n   SupportedEncryptionAlgorithms ENCINFO-TYPE ::= {...}\n\
    \   END\n"
- title: 9.  ASN.1 Module for RFC 5035
  contents:
  - "9.  ASN.1 Module for RFC 5035\n   Section numbers in the module refer to the\
    \ sections of RFC 2634 as\n   updated by RFC 5035.\n  ExtendedSecurityServices-2009\n\
    \      { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    \
    \  smime(16) modules(0) id-mod-ess-2006-02(42) }\n  DEFINITIONS IMPLICIT TAGS\
    \ ::=\n  BEGIN\n  IMPORTS\n  AttributeSet{}, ATTRIBUTE, SECURITY-CATEGORY, SecurityCategory{}\n\
    \  FROM PKIX-CommonTypes-2009\n      { iso(1) identified-organization(3) dod(6)\
    \ internet(1) security(5)\n      mechanisms(5) pkix(7) id-mod(0) id-mod-pkixCommon-02(57)\
    \ }\n  AlgorithmIdentifier{}, ALGORITHM, DIGEST-ALGORITHM\n  FROM AlgorithmInformation-2009\n\
    \      {iso(1) identified-organization(3) dod(6) internet(1) security(5)\n   \
    \   mechanisms(5) pkix(7) id-mod(0)\n      id-mod-algorithmInformation-02(58)}\n\
    \  ContentType, IssuerAndSerialNumber, SubjectKeyIdentifier,\n      CONTENT-TYPE\n\
    \  FROM CryptographicMessageSyntax-2009\n      { iso(1) member-body(2) us(840)\
    \ rsadsi(113549) pkcs(1) pkcs-9(9)\n      smime(16) modules(0) id-mod-cms-2004-02(41)\
    \ }\n  CertificateSerialNumber\n  FROM PKIX1Explicit-2009\n      { iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n      mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-explicit-02(51)\
    \ }\n  PolicyInformation, GeneralNames\n  FROM PKIX1Implicit-2009\n      { iso(1)\
    \ identified-organization(3) dod(6) internet(1) security(5)\n      mechanisms(5)\
    \ pkix(7) id-mod(0) id-mod-pkix1-implicit-02(59)}\n  mda-sha256\n  FROM PKIX1-PSS-OAEP-Algorithms-2009\n\
    \       { iso(1) identified-organization(3) dod(6)\n         internet(1) security(5)\
    \ mechanisms(5) pkix(7) id-mod(0)\n         id-mod-pkix1-rsa-pkalgs-02(54) } ;\n\
    \  EssSignedAttributes ATTRIBUTE ::= {\n      aa-receiptRequest | aa-contentIdentifier\
    \ | aa-contentHint |\n      aa-msgSigDigest | aa-contentReference | aa-securityLabel\
    \ |\n      aa-equivalentLabels | aa-mlExpandHistory | aa-signingCertificate |\n\
    \      aa-signingCertificateV2, ... }\n  EssContentTypes CONTENT-TYPE ::= { ct-receipt,\
    \ ... }\n  -- Extended Security Services\n  -- The construct \"SEQUENCE SIZE (1..MAX)\
    \ OF\" appears in several ASN.1\n  -- constructs in this module.  A valid ASN.1\
    \ SEQUENCE can have zero or\n  -- more entries.  The SIZE (1..MAX) construct constrains\
    \ the SEQUENCE\n  -- to have at least one entry.  MAX indicates the upper bound\
    \ is\n  -- unspecified.  Implementations are free to choose an upper bound\n \
    \ -- that suits their environment.\n  -- Section 2.7\n  aa-receiptRequest ATTRIBUTE\
    \ ::=\n      { TYPE ReceiptRequest IDENTIFIED BY id-aa-receiptRequest}\n  ReceiptRequest\
    \ ::= SEQUENCE {\n      signedContentIdentifier ContentIdentifier,\n      receiptsFrom\
    \ ReceiptsFrom,\n      receiptsTo SEQUENCE SIZE (1..ub-receiptsTo) OF GeneralNames\n\
    \  }\n  ub-receiptsTo INTEGER ::= 16\n  aa-contentIdentifier ATTRIBUTE ::=\n \
    \     { TYPE ContentIdentifier IDENTIFIED BY id-aa-contentIdentifier}\n  id-aa-receiptRequest\
    \ OBJECT IDENTIFIER ::=\n      { iso(1) member-body(2) us(840) rsadsi(113549)\
    \ pkcs(1) pkcs-9(9)\n      smime(16) id-aa(2) 1}\n  ContentIdentifier ::= OCTET\
    \ STRING\n  id-aa-contentIdentifier OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n\
    \      us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) id-aa(2) 7}\n  ct-receipt\
    \ CONTENT-TYPE ::=\n      { Receipt IDENTIFIED BY id-ct-receipt }\n  id-ct-receipt\
    \ OBJECT IDENTIFIER ::=\n      { iso(1) member-body(2) us(840) rsadsi(113549)\
    \ pkcs(1) pkcs-9(9)\n      smime(16) id-ct(1) 1}\n  ReceiptsFrom ::= CHOICE {\n\
    \      allOrFirstTier [0] AllOrFirstTier,\n          -- formerly \"allOrNone [0]AllOrNone\"\
    \n      receiptList [1] SEQUENCE OF GeneralNames }\n  AllOrFirstTier ::= INTEGER\
    \ { -- Formerly AllOrNone\n      allReceipts (0),\n      firstTierRecipients (1)\
    \ }\n  -- Section 2.8\n  Receipt ::= SEQUENCE {\n      version               \
    \    ESSVersion,\n      contentType               ContentType,\n      signedContentIdentifier\
    \   ContentIdentifier,\n      originatorSignatureValue  OCTET STRING\n  }\n  ESSVersion\
    \ ::= INTEGER  { v1(1) }\n  -- Section 2.9\n  aa-contentHint ATTRIBUTE ::=\n \
    \     { TYPE ContentHints IDENTIFIED BY id-aa-contentHint }\n  id-aa-contentHint\
    \ OBJECT IDENTIFIER ::=\n      { iso(1) member-body(2) us(840) rsadsi(113549)\
    \ pkcs(1) pkcs-9(9)\n      smime(16) id-aa(2) 4}\n  ContentHints ::= SEQUENCE\
    \ {\n      contentDescription UTF8String (SIZE (1..MAX)) OPTIONAL,\n      contentType\
    \ ContentType }\n  -- Section 2.10\n  aa-msgSigDigest ATTRIBUTE ::=\n      { TYPE\
    \ MsgSigDigest IDENTIFIED BY id-aa-msgSigDigest }\n  id-aa-msgSigDigest OBJECT\
    \ IDENTIFIER ::= { iso(1) member-body(2)\n      us(840) rsadsi(113549) pkcs(1)\
    \ pkcs-9(9) smime(16) id-aa(2) 5}\n  MsgSigDigest ::= OCTET STRING\n  -- Section\
    \ 2.11\n  aa-contentReference ATTRIBUTE ::=\n      { TYPE ContentReference IDENTIFIED\
    \ BY id-aa-contentReference }\n  id-aa-contentReference OBJECT IDENTIFIER ::=\n\
    \      { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    \
    \  smime(16) id-aa(2) 10 }\n  ContentReference ::= SEQUENCE {\n      contentType\
    \ ContentType,\n      signedContentIdentifier ContentIdentifier,\n      originatorSignatureValue\
    \ OCTET STRING }\n  -- Section 3.2\n  aa-securityLabel ATTRIBUTE ::=\n      {\
    \ TYPE ESSSecurityLabel IDENTIFIED BY id-aa-securityLabel }\n  id-aa-securityLabel\
    \ OBJECT IDENTIFIER ::=\n      { iso(1) member-body(2) us(840) rsadsi(113549)\
    \ pkcs(1) pkcs-9(9)\n      smime(16) id-aa(2) 2}\n  ESSSecurityLabel ::= SET {\n\
    \      security-policy-identifier SecurityPolicyIdentifier,\n      security-classification\
    \ SecurityClassification OPTIONAL,\n      privacy-mark ESSPrivacyMark OPTIONAL,\n\
    \      security-categories SecurityCategories OPTIONAL }\n  SecurityPolicyIdentifier\
    \ ::= OBJECT IDENTIFIER\n  SecurityClassification ::= INTEGER {\n      unmarked\
    \ (0),\n      unclassified (1),\n      restricted (2),\n      confidential (3),\n\
    \      secret (4),\n      top-secret (5)\n  } (0..ub-integer-options)\n  ub-integer-options\
    \ INTEGER ::= 256\n  ESSPrivacyMark ::= CHOICE {\n      pString      PrintableString\
    \ (SIZE (1..ub-privacy-mark-length)),\n      utf8String   UTF8String (SIZE (1..MAX))\n\
    \  }\n  ub-privacy-mark-length INTEGER ::= 128\n  SecurityCategories ::=\n   \
    \   SET SIZE (1..ub-security-categories) OF SecurityCategory\n          {{SupportedSecurityCategories}}\n\
    \  ub-security-categories INTEGER ::= 64\n  SupportedSecurityCategories SECURITY-CATEGORY\
    \ ::= { ... }\n  -- Section 3.4\n  aa-equivalentLabels ATTRIBUTE ::=\n      {\
    \ TYPE EquivalentLabels IDENTIFIED BY id-aa-equivalentLabels }\n  id-aa-equivalentLabels\
    \ OBJECT IDENTIFIER ::=\n      { iso(1) member-body(2) us(840) rsadsi(113549)\
    \ pkcs(1) pkcs-9(9)\n      smime(16) id-aa(2) 9}\n  EquivalentLabels ::= SEQUENCE\
    \ OF ESSSecurityLabel\n  -- Section 4.4\n  aa-mlExpandHistory ATTRIBUTE ::=\n\
    \      { TYPE MLExpansionHistory IDENTIFIED BY id-aa-mlExpandHistory }\n  id-aa-mlExpandHistory\
    \ OBJECT IDENTIFIER ::=\n      { iso(1) member-body(2) us(840) rsadsi(113549)\
    \ pkcs(1) pkcs-9(9)\n      smime(16) id-aa(2) 3 }\n  MLExpansionHistory ::= SEQUENCE\n\
    \      SIZE (1..ub-ml-expansion-history) OF MLData\n  ub-ml-expansion-history\
    \ INTEGER ::= 64\n  MLData ::= SEQUENCE {\n      mailListIdentifier EntityIdentifier,\n\
    \      expansionTime GeneralizedTime,\n      mlReceiptPolicy MLReceiptPolicy OPTIONAL\
    \ }\n  EntityIdentifier ::= CHOICE {\n      issuerAndSerialNumber IssuerAndSerialNumber,\n\
    \      subjectKeyIdentifier SubjectKeyIdentifier }\n  MLReceiptPolicy ::= CHOICE\
    \ {\n      none         [0] NULL,\n      insteadOf    [1] SEQUENCE SIZE (1..MAX)\
    \ OF GeneralNames,\n      inAdditionTo [2] SEQUENCE SIZE (1..MAX) OF GeneralNames\
    \ }\n  -- Section 5.4\n  aa-signingCertificate ATTRIBUTE ::=\n      { TYPE SigningCertificate\
    \ IDENTIFIED BY\n          id-aa-signingCertificate }\n  id-aa-signingCertificate\
    \ OBJECT IDENTIFIER ::=\n      { iso(1) member-body(2) us(840) rsadsi(113549)\
    \ pkcs(1) pkcs9(9)\n      smime(16) id-aa(2) 12 }\n  SigningCertificate ::=  SEQUENCE\
    \ {\n      certs        SEQUENCE OF ESSCertID,\n      policies     SEQUENCE OF\
    \ PolicyInformation OPTIONAL\n  }\n  aa-signingCertificateV2 ATTRIBUTE ::=\n \
    \     { TYPE SigningCertificateV2 IDENTIFIED BY\n          id-aa-signingCertificateV2\
    \ }\n  id-aa-signingCertificateV2 OBJECT IDENTIFIER ::=\n      { iso(1) member-body(2)\
    \ us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n      smime(16) id-aa(2) 47 }\n  SigningCertificateV2\
    \ ::=  SEQUENCE {\n      certs        SEQUENCE OF ESSCertIDv2,\n      policies\
    \     SEQUENCE OF PolicyInformation OPTIONAL\n  }\n  HashAlgorithm ::= AlgorithmIdentifier{DIGEST-ALGORITHM,\n\
    \                        {mda-sha256, ...}}\n  ESSCertIDv2 ::= SEQUENCE {\n  \
    \    hashAlgorithm    HashAlgorithm\n                          DEFAULT { algorithm\
    \ mda-sha256.&id },\n      certHash        Hash,\n      issuerSerial    IssuerSerial\
    \ OPTIONAL\n  }\n  ESSCertID ::=  SEQUENCE {\n      certHash        Hash,\n  \
    \    issuerSerial    IssuerSerial OPTIONAL\n  }\n  Hash ::= OCTET STRING\n  IssuerSerial\
    \ ::= SEQUENCE {\n      issuer          GeneralNames,\n      serialNumber    CertificateSerialNumber\n\
    \  }\n  END\n"
- title: 10.  ASN.1 Module for RFC 5083
  contents:
  - "10.  ASN.1 Module for RFC 5083\n   CMS-AuthEnvelopedData-2009\n       {iso(1)\
    \ member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n       smime(16) modules(0)\
    \ id-mod-cms-authEnvelopedData-02(43)}\n   DEFINITIONS IMPLICIT TAGS ::=\n   BEGIN\n\
    \   IMPORTS\n   AuthAttributes, CMSVersion, EncryptedContentInfo,\n       MessageAuthenticationCode,\
    \ OriginatorInfo, RecipientInfos,\n       UnauthAttributes, CONTENT-TYPE\n   FROM\
    \ CryptographicMessageSyntax-2009\n       {iso(1) member-body(2) us(840) rsadsi(113549)\
    \ pkcs(1) pkcs-9(9)\n       smime(16) modules(0) id-mod-cms-2004-02(41)} ;\n \
    \  ContentTypes CONTENT-TYPE ::= {ct-authEnvelopedData, ... }\n   ct-authEnvelopedData\
    \ CONTENT-TYPE ::= {\n      AuthEnvelopedData IDENTIFIED BY id-ct-authEnvelopedData\n\
    \   }\n   id-ct-authEnvelopedData OBJECT IDENTIFIER ::=\n       {iso(1) member-body(2)\
    \ us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n       smime(16) ct(1) 23}\n   AuthEnvelopedData\
    \ ::= SEQUENCE {\n       version CMSVersion,\n       originatorInfo [0] IMPLICIT\
    \ OriginatorInfo OPTIONAL,\n       recipientInfos RecipientInfos,\n       authEncryptedContentInfo\
    \ EncryptedContentInfo,\n       authAttrs [1] IMPLICIT AuthAttributes OPTIONAL,\n\
    \       mac MessageAuthenticationCode,\n       unauthAttrs [2] IMPLICIT UnauthAttributes\
    \ OPTIONAL\n   }\n   END\n"
- title: 11.  ASN.1 Module for RFC 5084
  contents:
  - "11.  ASN.1 Module for RFC 5084\n  CMS-AES-CCM-and-AES-GCM-2009\n      { iso(1)\
    \ member-body(2) us(840) rsadsi(113549) pkcs(1)\n      pkcs-9(9) smime(16) modules(0)\
    \ id-mod-cms-aes-ccm-gcm-02(44) }\n  DEFINITIONS IMPLICIT TAGS ::=\n  BEGIN\n\
    \  EXPORTS ALL;\n  IMPORTS\n  CONTENT-ENCRYPTION, SMIME-CAPS\n  FROM AlgorithmInformation-2009\n\
    \      {iso(1) identified-organization(3) dod(6) internet(1) security(5)\n   \
    \   mechanisms(5) pkix(7) id-mod(0)\n      id-mod-algorithmInformation-02(58)};\n\
    \  --  Add this algorithm set to include all of the algorithms defined in\n  --\
    \      this document\n  ContentEncryptionAlgs CONTENT-ENCRYPTION ::= {\n     cea-aes128-CCM\
    \ | cea-aes192-CCM | cea-aes256-CCM |\n     cea-aes128-GCM | cea-aes192-GCM |\
    \ cea-aes256-GCM, ... }\n  SMimeCaps SMIME-CAPS ::= {\n     cea-aes128-CCM.&smimeCaps\
    \ |\n     cea-aes192-CCM.&smimeCaps |\n     cea-aes256-CCM.&smimeCaps |\n    \
    \ cea-aes128-GCM.&smimeCaps |\n     cea-aes192-GCM.&smimeCaps |\n     cea-aes256-GCM.&smimeCaps,\n\
    \     ...\n  }\n  --  Defining objects\n  aes OBJECT IDENTIFIER ::= { joint-iso-itu-t(2)\
    \ country(16) us(840)\n      organization(1) gov(101) csor(3) nistAlgorithms(4)\
    \ 1 }\n  cea-aes128-CCM CONTENT-ENCRYPTION ::= {\n          IDENTIFIER id-aes128-CCM\n\
    \          PARAMS TYPE CCMParameters ARE required\n          SMIME-CAPS { IDENTIFIED\
    \ BY id-aes128-CCM }\n  }\n  id-aes128-CCM OBJECT IDENTIFIER ::= { aes 7 }\n \
    \ cea-aes192-CCM CONTENT-ENCRYPTION ::= {\n          IDENTIFIER id-aes192-CCM\n\
    \          PARAMS TYPE CCMParameters ARE required\n          SMIME-CAPS { IDENTIFIED\
    \ BY id-aes192-CCM }\n  }\n  id-aes192-CCM OBJECT IDENTIFIER ::= { aes 27 }\n\
    \  cea-aes256-CCM CONTENT-ENCRYPTION ::= {\n          IDENTIFIER id-aes256-CCM\n\
    \          PARAMS TYPE CCMParameters ARE required\n          SMIME-CAPS { IDENTIFIED\
    \ BY id-aes256-CCM }\n  }\n  id-aes256-CCM OBJECT IDENTIFIER ::= { aes 47 }\n\
    \  cea-aes128-GCM CONTENT-ENCRYPTION ::= {\n          IDENTIFIER id-aes128-GCM\n\
    \          PARAMS TYPE GCMParameters ARE required\n          SMIME-CAPS { IDENTIFIED\
    \ BY id-aes128-GCM }\n  }\n  id-aes128-GCM OBJECT IDENTIFIER ::= { aes 6 }\n \
    \ cea-aes192-GCM CONTENT-ENCRYPTION ::= {\n          IDENTIFIER id-aes128-GCM\n\
    \          PARAMS TYPE GCMParameters ARE required\n          SMIME-CAPS { IDENTIFIED\
    \ BY id-aes192-GCM }\n  }\n  id-aes192-GCM OBJECT IDENTIFIER ::= { aes 26 }\n\
    \  cea-aes256-GCM CONTENT-ENCRYPTION ::= {\n          IDENTIFIER id-aes128-GCM\n\
    \          PARAMS TYPE GCMParameters ARE required\n          SMIME-CAPS { IDENTIFIED\
    \ BY id-aes256-GCM }\n  }\n  id-aes256-GCM OBJECT IDENTIFIER ::= { aes 46 }\n\
    \  -- Parameters for AlgorithmIdentifier\n  CCMParameters ::= SEQUENCE {\n   \
    \   aes-nonce         OCTET STRING (SIZE(7..13)),\n      aes-ICVlen        AES-CCM-ICVlen\
    \ DEFAULT 12 }\n  AES-CCM-ICVlen ::= INTEGER (4 | 6 | 8 | 10 | 12 | 14 | 16)\n\
    \  GCMParameters ::= SEQUENCE {\n      aes-nonce        OCTET STRING, -- recommended\
    \ size is 12 octets\n      aes-ICVlen       AES-GCM-ICVlen DEFAULT 12 }\n  AES-GCM-ICVlen\
    \ ::= INTEGER (12 | 13 | 14 | 15 | 16)\n  END\n"
- title: 12.  ASN.1 Module for RFC 5275
  contents:
  - "12.  ASN.1 Module for RFC 5275\n  SMIMESymmetricKeyDistribution-2009\n      {iso(1)\
    \ member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n      smime(16) modules(0)\
    \ id-mod-symkeydist-02(36)}\n  DEFINITIONS IMPLICIT TAGS ::=\n  BEGIN\n  EXPORTS\
    \ ALL;\n  IMPORTS\n  AlgorithmIdentifier{}, ALGORITHM, DIGEST-ALGORITHM, KEY-WRAP,\n\
    \          SMIMECapability{}, SMIMECapabilities{}, SMIME-CAPS\n  FROM AlgorithmInformation-2009\n\
    \      {iso(1) identified-organization(3) dod(6) internet(1) security(5)\n   \
    \   mechanisms(5) pkix(7) id-mod(0)\n      id-mod-algorithmInformation-02(58)}\n\
    \  GeneralName\n  FROM PKIX1Implicit-2009\n      { iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n      mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-implicit-02(59)\
    \ }\n  Certificate\n  FROM PKIX1Explicit-2009\n      { iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n      mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-explicit-02(51)\
    \ }\n  RecipientInfos, KEKIdentifier,CertificateSet\n  FROM CryptographicMessageSyntax-2009\n\
    \      {iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n     \
    \ smime(16) modules(0) id-mod-cms-2004-02(41) }\n  cap-3DESwrap\n  FROM CryptographicMessageSyntaxAlgorithms\n\
    \      { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    \
    \  smime(16) modules(0) id-mod-cmsalg-2001-02(37) }\n  AttributeCertificate\n\
    \  FROM PKIXAttributeCertificate-2009\n      { iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n      mechanisms(5) pkix(7) id-mod(0) id-mod-attribute-cert-02(47)\
    \ }\n  CMC-CONTROL, EXTENDED-FAILURE-INFO\n  FROM EnrollmentMessageSyntax\n  \
    \    { iso(1) identified-organization(3) dod(6) internet(1) security(5)\n    \
    \  mechanisms(5) pkix(7) id-mod(0) id-mod-cmc2002-02(53) }\n  kwa-aes128-wrap,\
    \ kwa-aes192-wrap, kwa-aes256-wrap\n  FROM CMSAesRsaesOaep-2009\n      { iso(1)\
    \ member-body(2) us(840) rsadsi(113549)\n      pkcs(1) pkcs-9(9) smime(16) modules(0)\
    \ id-mod-cms-aes-02(38) } ;\n  -- This defines the group list (GL symmetric key\
    \ distribution OID arc\n  id-skd OBJECT IDENTIFIER ::=\n      { iso(1) member-body(2)\
    \ us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n      smime(16) skd(8) }\n  SKD-ControlSet\
    \ CMC-CONTROL ::= {\n      skd-glUseKEK | skd-glDelete | skd-glAddMember |\n \
    \     skd-glDeleteMember | skd-glRekey | skd-glAddOwner |\n      skd-glRemoveOwner\
    \ | skd-glKeyCompromise |\n      skd-glkRefresh | skd-glaQueryRequest | skd-glProvideCert\
    \ |\n      skd-glManageCert | skd-glKey, ... }\n  -- This defines the GL Use KEK\
    \ control attribute\n  skd-glUseKEK CMC-CONTROL ::=\n      { GLUseKEK IDENTIFIED\
    \ BY id-skd-glUseKEK }\n  id-skd-glUseKEK OBJECT IDENTIFIER ::= { id-skd 1}\n\
    \  GLUseKEK ::= SEQUENCE {\n      glInfo            GLInfo,\n      glOwnerInfo\
    \       SEQUENCE SIZE (1..MAX) OF GLOwnerInfo,\n      glAdministration  GLAdministration\
    \ DEFAULT managed,\n      glKeyAttributes   GLKeyAttributes OPTIONAL\n  }\n  GLInfo\
    \ ::= SEQUENCE {\n      glName     GeneralName,\n      glAddress  GeneralName\n\
    \  }\n  GLOwnerInfo ::= SEQUENCE {\n      glOwnerName     GeneralName,\n     \
    \ glOwnerAddress  GeneralName,\n      certificates    Certificates OPTIONAL\n\
    \  }\n  GLAdministration ::= INTEGER {\n      unmanaged  (0),\n      managed \
    \   (1),\n      closed     (2)\n  }\n  --\n  --  The advertised set of algorithm\
    \ capabilities for the document\n  --\n  SKD-Caps SMIME-CAPS ::= {\n      cap-3DESwrap\
    \ | kwa-aes128-wrap.&smimeCaps |\n      kwa-aes192-wrap.&smimeCaps | kwa-aes256-wrap.&smimeCaps,\
    \  ...\n  }\n  cap-aes128-cbc KeyWrapAlgorithm ::=\n      { capabilityID kwa-aes128-wrap.&smimeCaps.&id\
    \ }\n  --\n  --  The set of key wrap algorithms supported by this specification\n\
    \  --\n  KeyWrapAlgorithm ::= SMIMECapability{{SKD-Caps}}\n  GLKeyAttributes ::=\
    \ SEQUENCE {\n      rekeyControlledByGLO       [0] BOOLEAN DEFAULT FALSE,\n  \
    \    recipientsNotMutuallyAware [1] BOOLEAN DEFAULT TRUE,\n      duration    \
    \               [2] INTEGER DEFAULT 0,\n      generationCounter          [3] INTEGER\
    \ DEFAULT 2,\n      requestedAlgorithm         [4] KeyWrapAlgorithm\n        \
    \                 DEFAULT cap-aes128-cbc\n  }\n  -- This defines the Delete GL\
    \ control attribute.\n  -- It has the simple type GeneralName.\n  skd-glDelete\
    \ CMC-CONTROL ::=\n      { DeleteGL IDENTIFIED BY id-skd-glDelete }\n  id-skd-glDelete\
    \ OBJECT IDENTIFIER ::= { id-skd 2}\n  DeleteGL ::= GeneralName\n  -- This defines\
    \ the Add GL Member control attribute\n  skd-glAddMember CMC-CONTROL ::=\n   \
    \   { GLAddMember IDENTIFIED BY id-skd-glAddMember }\n  id-skd-glAddMember OBJECT\
    \ IDENTIFIER ::= { id-skd 3}\n  GLAddMember ::= SEQUENCE {\n      glName    GeneralName,\n\
    \      glMember  GLMember\n  }\n  GLMember ::= SEQUENCE {\n      glMemberName\
    \     GeneralName,\n      glMemberAddress  GeneralName OPTIONAL,\n      certificates\
    \     Certificates OPTIONAL\n  }\n  Certificates ::= SEQUENCE {\n      pKC   \
    \    [0] Certificate OPTIONAL,\n                    -- See RFC 5280\n      aC\
    \        [1] SEQUENCE SIZE (1.. MAX) OF\n                      AttributeCertificate\
    \ OPTIONAL,\n                    -- See RFC 3281\n      certPath  [2] CertificateSet\
    \ OPTIONAL\n                    -- From RFC 3852\n  }\n  -- This defines the Delete\
    \ GL Member control attribute\n  skd-glDeleteMember CMC-CONTROL ::=\n      { GLDeleteMember\
    \ IDENTIFIED BY id-skd-glDeleteMember }\n  id-skd-glDeleteMember OBJECT IDENTIFIER\
    \ ::= { id-skd 4}\n  GLDeleteMember ::= SEQUENCE {\n      glName            GeneralName,\n\
    \      glMemberToDelete  GeneralName\n  }\n  -- This defines the Delete GL Member\
    \ control attribute\n  skd-glRekey CMC-CONTROL ::=\n      { GLRekey IDENTIFIED\
    \ BY id-skd-glRekey }\n  id-skd-glRekey OBJECT IDENTIFIER ::= { id-skd 5}\n  GLRekey\
    \ ::= SEQUENCE {\n      glName              GeneralName,\n      glAdministration\
    \    GLAdministration OPTIONAL,\n      glNewKeyAttributes  GLNewKeyAttributes\
    \ OPTIONAL,\n      glRekeyAllGLKeys    BOOLEAN OPTIONAL\n  }\n  GLNewKeyAttributes\
    \ ::= SEQUENCE {\n      rekeyControlledByGLO       [0] BOOLEAN OPTIONAL,\n   \
    \   recipientsNotMutuallyAware [1] BOOLEAN OPTIONAL,\n      duration         \
    \          [2] INTEGER OPTIONAL,\n      generationCounter          [3] INTEGER\
    \ OPTIONAL,\n      requestedAlgorithm         [4] KeyWrapAlgorithm OPTIONAL\n\
    \  }\n  -- This defines the Add and Delete GL Owner control attributes\n  skd-glAddOwner\
    \ CMC-CONTROL ::=\n      { GLOwnerAdministration IDENTIFIED BY id-skd-glAddOwner\
    \ }\n  id-skd-glAddOwner OBJECT IDENTIFIER ::= { id-skd 6}\n  skd-glRemoveOwner\
    \ CMC-CONTROL ::=\n      { GLOwnerAdministration IDENTIFIED BY id-skd-glRemoveOwner\
    \ }\n  id-skd-glRemoveOwner OBJECT IDENTIFIER ::= { id-skd 7}\n  GLOwnerAdministration\
    \ ::= SEQUENCE {\n      glName       GeneralName,\n      glOwnerInfo  GLOwnerInfo\n\
    \  }\n  -- This defines the GL Key Compromise control attribute.\n  -- It has\
    \ the simple type GeneralName.\n  skd-glKeyCompromise CMC-CONTROL ::=\n      {\
    \ GLKCompromise IDENTIFIED BY id-skd-glKeyCompromise }\n  id-skd-glKeyCompromise\
    \ OBJECT IDENTIFIER ::= { id-skd 8}\n  GLKCompromise ::= GeneralName\n  -- This\
    \ defines the GL Key Refresh control attribute.\n  skd-glkRefresh CMC-CONTROL\
    \ ::=\n      { GLKRefresh IDENTIFIED BY id-skd-glkRefresh }\n  id-skd-glkRefresh\
    \ OBJECT IDENTIFIER ::= { id-skd 9}\n  GLKRefresh ::= SEQUENCE {\n      glName\
    \  GeneralName,\n      dates   SEQUENCE SIZE (1..MAX) OF Date\n  }\n  Date ::=\
    \ SEQUENCE {\n      start GeneralizedTime,\n      end   GeneralizedTime OPTIONAL\n\
    \  }\n  -- This defines the GLA Query Request control attribute.\n  skd-glaQueryRequest\
    \ CMC-CONTROL ::=\n      { GLAQueryRequest IDENTIFIED BY id-skd-glaQueryRequest\
    \ }\n  id-skd-glaQueryRequest OBJECT IDENTIFIER ::= { id-skd 11}\n  SKD-QUERY\
    \ ::= TYPE-IDENTIFIER\n  SkdQuerySet SKD-QUERY ::= {skd-AlgRequest, ...}\n  GLAQueryRequest\
    \ ::= SEQUENCE {\n      glaRequestType   SKD-QUERY.&id ({SkdQuerySet}),\n    \
    \  glaRequestValue  SKD-QUERY.\n                           &Type ({SkdQuerySet}{@glaRequestType})\n\
    \  }\n  -- This defines the GLA Query Response control attribute.\n  skd-glaQueryResponse\
    \ CMC-CONTROL ::=\n      { GLAQueryResponse IDENTIFIED BY id-skd-glaQueryResponse\
    \ }\n  id-skd-glaQueryResponse OBJECT IDENTIFIER ::= { id-skd 12}\n  SKD-RESPONSE\
    \ ::= TYPE-IDENTIFIER\n  SkdResponseSet SKD-RESPONSE ::= {skd-AlgResponse, ...}\n\
    \  GLAQueryResponse ::= SEQUENCE {\n      glaResponseType   SKD-RESPONSE.\n  \
    \                          &id({SkdResponseSet}),\n      glaResponseValue  SKD-RESPONSE.\n\
    \                            &Type({SkdResponseSet}{@glaResponseType})}\n  --\
    \ This defines the GLA Request/Response (glaRR) arc for\n  -- glaRequestType/glaResponseType.\n\
    \  id-cmc-glaRR OBJECT IDENTIFIER ::=\n      { iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n      mechanisms(5) pkix(7) cmc(7) glaRR(99)\
    \ }\n  -- This defines the Algorithm Request\n  skd-AlgRequest SKD-QUERY ::= {\n\
    \     SKDAlgRequest IDENTIFIED BY id-cmc-gla-skdAlgRequest\n  }\n  id-cmc-gla-skdAlgRequest\
    \ OBJECT IDENTIFIER ::= { id-cmc-glaRR 1 }\n  SKDAlgRequest ::= NULL\n  -- This\
    \ defines the Algorithm Response\n  skd-AlgResponse SKD-RESPONSE ::= {\n     \
    \ SMIMECapability{{SKD-Caps}} IDENTIFIED BY\n          id-cmc-gla-skdAlgResponse\n\
    \  }\n  id-cmc-gla-skdAlgResponse OBJECT IDENTIFIER ::= { id-cmc-glaRR 2 }\n \
    \ -- Note that the response for algorithmSupported request is the\n  -- smimeCapabilities\
    \ attribute as defined in RFC 3851.\n  -- This defines the control attribute to\
    \ request an updated\n  -- certificate to the GLA.\n  skd-glProvideCert CMC-CONTROL\
    \ ::=\n      { GLManageCert IDENTIFIED BY id-skd-glProvideCert }\n  id-skd-glProvideCert\
    \ OBJECT IDENTIFIER ::= { id-skd 13}\n  GLManageCert ::= SEQUENCE {\n      glName\
    \    GeneralName,\n      glMember  GLMember\n  }\n  -- This defines the control\
    \ attribute to return an updated\n  -- certificate to the GLA.  It has the type\
    \ GLManageCert.\n  skd-glManageCert CMC-CONTROL ::=\n      { GLManageCert IDENTIFIED\
    \ BY id-skd-glManageCert }\n  id-skd-glManageCert OBJECT IDENTIFIER ::= { id-skd\
    \ 14}\n  -- This defines the control attribute to distribute the GL shared\n \
    \ -- KEK.\n  skd-glKey CMC-CONTROL ::=\n      { GLKey IDENTIFIED BY id-skd-glKey\
    \ }\n  id-skd-glKey OBJECT IDENTIFIER ::= { id-skd 15}\n  GLKey ::= SEQUENCE {\n\
    \      glName        GeneralName,\n      glIdentifier  KEKIdentifier,   -- See\
    \ RFC 3852\n      glkWrapped    RecipientInfos,  -- See RFC 3852\n      glkAlgorithm\
    \  KeyWrapAlgorithm,\n      glkNotBefore  GeneralizedTime,\n      glkNotAfter\
    \   GeneralizedTime\n  }\n  -- This defines the CMC error types\n  skd-ExtendedFailures\
    \ EXTENDED-FAILURE-INFO ::= {\n     SKDFailInfo IDENTIFIED BY id-cet-skdFailInfo\n\
    \  }\n  id-cet-skdFailInfo  OBJECT IDENTIFIER ::=\n      { iso(1) identified-organization(3)\
    \ dod(6) internet(1) security(5)\n      mechanisms(5) pkix(7) cet(15) skdFailInfo(1)\
    \ }\n  SKDFailInfo ::= INTEGER {\n      unspecified           (0),\n      closedGL\
    \              (1),\n      unsupportedDuration   (2),\n      noGLACertificate\
    \      (3),\n      invalidCert           (4),\n      unsupportedAlgorithm  (5),\n\
    \      noGLONameMatch        (6),\n      invalidGLName         (7),\n      nameAlreadyInUse\
    \      (8),\n      noSpam                (9),\n      deniedAccess          (10),\n\
    \      alreadyAMember        (11),\n      notAMember            (12),\n      alreadyAnOwner\
    \        (13),\n      notAnOwner            (14) }\n  END\n"
- title: 13.  Security Considerations
  contents:
  - "13.  Security Considerations\n   Even though all the RFCs in this document are\
    \ security-related, the\n   document itself does not have any security considerations.\
    \  The ASN.1\n   modules keep the same bits-on-the-wire as the modules that they\n\
    \   replace.\n"
- title: 14.  Normative References
  contents:
  - "14.  Normative References\n   [ASN1-2002]  ITU-T, \"ITU-T Recommendation X.680,\
    \ X.681, X.682, and\n                X.683\", ITU-T X.680, X.681, X.682, and X.683,\
    \ 2002.\n   [RFC3370]    Housley, R., \"Cryptographic Message Syntax (CMS)\n \
    \               Algorithms\", RFC 3370, August 2002.\n   [RFC3565]    Schaad,\
    \ J., \"Use of the Advanced Encryption Standard\n                (AES) Encryption\
    \ Algorithm in Cryptographic Message\n                Syntax (CMS)\", RFC 3565,\
    \ July 2003.\n   [RFC3851]    Ramsdell, B., \"Secure/Multipurpose Internet Mail\n\
    \                Extensions (S/MIME) Version 3.1 Message Specification\",\n  \
    \              RFC 3851, July 2004.\n   [RFC3852]    Housley, R., \"Cryptographic\
    \ Message Syntax (CMS)\",\n                RFC 3852, July 2004.\n   [RFC4108]\
    \    Housley, R., \"Using Cryptographic Message Syntax (CMS)\n               \
    \ to Protect Firmware Packages\", RFC 4108, August 2005.\n   [RFC4998]    Gondrom,\
    \ T., Brandner, R., and U. Pordesch, \"Evidence\n                Record Syntax\
    \ (ERS)\", RFC 4998, August 2007.\n   [RFC5035]    Schaad, J., \"Enhanced Security\
    \ Services (ESS) Update:\n                Adding CertID Algorithm Agility\", RFC\
    \ 5035, August 2007.\n   [RFC5083]    Housley, R., \"Cryptographic Message Syntax\
    \ (CMS)\n                Authenticated-Enveloped-Data Content Type\", RFC 5083,\n\
    \                November 2007.\n   [RFC5084]    Housley, R., \"Using AES-CCM\
    \ and AES-GCM Authenticated\n                Encryption in the Cryptographic Message\
    \ Syntax (CMS)\",\n                RFC 5084, November 2007.\n   [RFC5275]    Turner,\
    \ S., \"CMS Symmetric Key Management and\n                Distribution\", RFC\
    \ 5275, June 2008.\n   [RFC5652]    Housley, R., \"Cryptographic Message Syntax\
    \ (CMS)\",\n                RFC 5652, September 2009.\n   [RFC5912]    Hoffman,\
    \ P. and J. Schaad, \"New ASN.1 Modules for the\n                Public Key Infrastructure\
    \ using X.509 (PKIX)\", RFC 5912,\n                June 2010.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Paul Hoffman\n   VPN Consortium\n   127 Segre Place\n\
    \   Santa Cruz, CA  95060\n   US\n   Phone: 1-831-426-9827\n   EMail: paul.hoffman@vpnc.org\n\
    \   Jim Schaad\n   Soaring Hawk Consulting\n   EMail: jimsch@exmsft.com\n"
