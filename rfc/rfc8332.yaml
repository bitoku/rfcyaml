- title: __initial_text__
  contents:
  - "                Use of RSA Keys with SHA-256 and SHA-512\n                  \
    \ in the Secure Shell (SSH) Protocol\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo updates RFCs 4252 and 4253 to define new public key\n\
    \   algorithms for use of RSA keys with SHA-256 and SHA-512 for server\n   and\
    \ client authentication in SSH connections.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8332.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2018 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Overview and Rationale  . . . . . . . . . . . . . .\
    \ . . . . .   3\n     1.1.  Requirements Terminology  . . . . . . . . . . . .\
    \ . . . .   3\n     1.2.  Wire Encoding Terminology . . . . . . . . . . . . .\
    \ . . .   3\n   2.  Public Key Format vs. Public Key Algorithm  . . . . . . .\
    \ . .   3\n   3.  New RSA Public Key Algorithms . . . . . . . . . . . . . . .\
    \ .   4\n     3.1.  Use for Server Authentication . . . . . . . . . . . . . .\
    \   5\n     3.2.  Use for Client Authentication . . . . . . . . . . . . . .  \
    \ 5\n     3.3.  Discovery of Public Key Algorithms Supported by Servers .   6\n\
    \   4.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   6\n  \
    \ 5.  Security Considerations . . . . . . . . . . . . . . . . . . .   7\n    \
    \ 5.1.  Key Size and Signature Hash . . . . . . . . . . . . . . .   7\n     5.2.\
    \  Transition  . . . . . . . . . . . . . . . . . . . . . . .   7\n     5.3.  PKCS\
    \ #1 v1.5 Padding and Signature Verification . . . . .   7\n   6.  References\
    \  . . . . . . . . . . . . . . . . . . . . . . . . .   8\n     6.1.  Normative\
    \ References  . . . . . . . . . . . . . . . . . .   8\n     6.2.  Informative\
    \ References  . . . . . . . . . . . . . . . . .   8\n   Acknowledgments . . .\
    \ . . . . . . . . . . . . . . . . . . . . . .   9\n   Author's Address  . . .\
    \ . . . . . . . . . . . . . . . . . . . . .   9\n"
- title: 1.  Overview and Rationale
  contents:
  - "1.  Overview and Rationale\n   Secure Shell (SSH) is a common protocol for secure\
    \ communication on\n   the Internet.  In [RFC4253], SSH originally defined the\
    \ public key\n   algorithms \"ssh-rsa\" for server and client authentication using\
    \ RSA\n   with SHA-1, and \"ssh-dss\" using 1024-bit DSA and SHA-1.  These\n \
    \  algorithms are now considered deficient.  For US government use, NIST\n   has\
    \ disallowed 1024-bit RSA and DSA, and use of SHA-1 for signing\n   [NIST.800-131A].\n\
    \   This memo updates RFCs 4252 and 4253 to define new public key\n   algorithms\
    \ allowing for interoperable use of existing and new RSA\n   keys with SHA-256\
    \ and SHA-512.\n"
- title: 1.1.  Requirements Terminology
  contents:
  - "1.1.  Requirements Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n"
- title: 1.2.  Wire Encoding Terminology
  contents:
  - "1.2.  Wire Encoding Terminology\n   The wire encoding types in this document\
    \ -- \"boolean\", \"byte\",\n   \"string\", \"mpint\" -- have meanings as described\
    \ in [RFC4251].\n"
- title: 2.  Public Key Format vs. Public Key Algorithm
  contents:
  - "2.  Public Key Format vs. Public Key Algorithm\n   In [RFC4252], the concept\
    \ \"public key algorithm\" is used to establish\n   a relationship between one\
    \ algorithm name, and:\n   A.  procedures used to generate and validate a private/public\n\
    \       keypair;\n   B.  a format used to encode a public key; and\n   C.  procedures\
    \ used to calculate, encode, and verify a signature.\n   This document uses the\
    \ term \"public key format\" to identify only A\n   and B in isolation.  The term\
    \ \"public key algorithm\" continues to\n   identify all three aspects -- A, B,\
    \ and C.\n"
- title: 3.  New RSA Public Key Algorithms
  contents:
  - "3.  New RSA Public Key Algorithms\n   This memo adopts the style and conventions\
    \ of [RFC4253] in specifying\n   how use of a public key algorithm is indicated\
    \ in SSH.\n   The following new public key algorithms are defined:\n     rsa-sha2-256\
    \        RECOMMENDED    sign    Raw RSA key\n     rsa-sha2-512        OPTIONAL\
    \       sign    Raw RSA key\n   These algorithms are suitable for use both in\
    \ the SSH transport layer\n   [RFC4253] for server authentication and in the authentication\
    \ layer\n   [RFC4252] for client authentication.\n   Since RSA keys are not dependent\
    \ on the choice of hash function, the\n   new public key algorithms reuse the\
    \ \"ssh-rsa\" public key format as\n   defined in [RFC4253]:\n   string    \"\
    ssh-rsa\"\n   mpint     e\n   mpint     n\n   All aspects of the \"ssh-rsa\" format\
    \ are kept, including the encoded\n   string \"ssh-rsa\".  This allows existing\
    \ RSA keys to be used with the\n   new public key algorithms, without requiring\
    \ re-encoding or affecting\n   already trusted key fingerprints.\n   Signing and\
    \ verifying using these algorithms is performed according\n   to the RSASSA-PKCS1-v1_5\
    \ scheme in [RFC8017] using SHA-2 [SHS] as\n   hash.\n   For the algorithm \"\
    rsa-sha2-256\", the hash used is SHA-256.\n   For the algorithm \"rsa-sha2-512\"\
    , the hash used is SHA-512.\n   The resulting signature is encoded as follows:\n\
    \   string   \"rsa-sha2-256\" / \"rsa-sha2-512\"\n   string    rsa_signature_blob\n\
    \   The value for 'rsa_signature_blob' is encoded as a string that\n   contains\
    \ an octet string S (which is the output of RSASSA-PKCS1-v1_5)\n   and that has\
    \ the same length (in octets) as the RSA modulus.  When S\n   contains leading\
    \ zeros, there exist signers that will send a shorter\n   encoding of S that omits\
    \ them.  A verifier MAY accept shorter\n   encodings of S with one or more leading\
    \ zeros omitted.\n"
- title: 3.1.  Use for Server Authentication
  contents:
  - "3.1.  Use for Server Authentication\n   To express support and preference for\
    \ one or both of these algorithms\n   for server authentication, the SSH client\
    \ or server includes one or\n   both algorithm names, \"rsa-sha2-256\" and/or\
    \ \"rsa-sha2-512\", in the\n   name-list field \"server_host_key_algorithms\"\
    \ in the SSH_MSG_KEXINIT\n   packet [RFC4253].  If one of the two host key algorithms\
    \ is\n   negotiated, the server sends an \"ssh-rsa\" public key as part of the\n\
    \   negotiated key exchange method (e.g., in SSH_MSG_KEXDH_REPLY) and\n   encodes\
    \ a signature with the appropriate signature algorithm name --\n   either \"rsa-sha2-256\"\
    \ or \"rsa-sha2-512\".\n"
- title: 3.2.  Use for Client Authentication
  contents:
  - "3.2.  Use for Client Authentication\n   To use this algorithm for client authentication,\
    \ the SSH client sends\n   an SSH_MSG_USERAUTH_REQUEST message [RFC4252] encoding\
    \ the\n   \"publickey\" method and encoding the string field \"public key\n  \
    \ algorithm name\" with the value \"rsa-sha2-256\" or \"rsa-sha2-512\".  The\n\
    \   \"public key blob\" field encodes the RSA public key using the\n   \"ssh-rsa\"\
    \ public key format.\n   For example, as defined in [RFC4252] and [RFC4253], an\
    \ SSH\n   \"publickey\" authentication request using an \"rsa-sha2-512\" signature\n\
    \   would be properly encoded as follows:\n     byte      SSH_MSG_USERAUTH_REQUEST\n\
    \     string    user name\n     string    service name\n     string    \"publickey\"\
    \n     boolean   TRUE\n     string    \"rsa-sha2-512\"\n     string    public\
    \ key blob:\n         string    \"ssh-rsa\"\n         mpint     e\n         mpint\
    \     n\n     string    signature:\n         string    \"rsa-sha2-512\"\n    \
    \     string    rsa_signature_blob\n   If the client includes the signature field,\
    \ the client MUST encode\n   the same algorithm name in the signature as in\n\
    \   SSH_MSG_USERAUTH_REQUEST -- either \"rsa-sha2-256\" or \"rsa-sha2-512\".\n\
    \   If a server receives a mismatching request, it MAY apply arbitrary\n   authentication\
    \ penalties, including but not limited to authentication\n   failure or disconnect.\n\
    \   OpenSSH 7.2 (but not 7.2p2) incorrectly encodes the algorithm in the\n   signature\
    \ as \"ssh-rsa\" when the algorithm in SSH_MSG_USERAUTH_REQUEST\n   is \"rsa-sha2-256\"\
    \ or \"rsa-sha2-512\".  In this case, the signature\n   does actually use either\
    \ SHA-256 or SHA-512.  A server MAY, but is\n   not required to, accept this variant\
    \ or another variant that\n   corresponds to a good-faith implementation and is\
    \ considered safe to\n   accept.\n"
- title: 3.3.  Discovery of Public Key Algorithms Supported by Servers
  contents:
  - "3.3.  Discovery of Public Key Algorithms Supported by Servers\n   Implementation\
    \ experience has shown that there are servers that apply\n   authentication penalties\
    \ to clients attempting public key algorithms\n   that the SSH server does not\
    \ support.\n   Servers that accept rsa-sha2-* signatures for client authentication\n\
    \   SHOULD implement the extension negotiation mechanism defined in\n   [RFC8308],\
    \ including especially the \"server-sig-algs\" extension.\n   When authenticating\
    \ with an RSA key against a server that does not\n   implement the \"server-sig-algs\"\
    \ extension, clients MAY default to an\n   \"ssh-rsa\" signature to avoid authentication\
    \ penalties.  When the new\n   rsa-sha2-* algorithms have been sufficiently widely\
    \ adopted to\n   warrant disabling \"ssh-rsa\", clients MAY default to one of\
    \ the new\n   algorithms.\n"
- title: 4.  IANA Considerations
  contents:
  - "4.  IANA Considerations\n   IANA has updated the \"Secure Shell (SSH) Protocol\
    \ Parameters\"\n   registry, established with [RFC4250], to extend the table \"\
    Public Key\n   Algorithm Names\" [IANA-PKA] as follows.\n   -  To the immediate\
    \ right of the column \"Public Key Algorithm Name\",\n      a new column has been\
    \ added, titled \"Public Key Format\".  For\n      existing entries, the column\
    \ \"Public Key Format\" has been assigned\n      the same value as under \"Public\
    \ Key Algorithm Name\".\n   -  Immediately following the existing entry for \"\
    ssh-rsa\", two\n      sibling entries have been added:\n      P. K. Alg. Name\
    \    P. K. Format      Reference   Note\n      rsa-sha2-256       ssh-rsa    \
    \       RFC 8332    Section 3\n      rsa-sha2-512       ssh-rsa           RFC\
    \ 8332    Section 3\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   The security considerations of [RFC4251] apply\
    \ to this document.\n"
- title: 5.1.  Key Size and Signature Hash
  contents:
  - "5.1.  Key Size and Signature Hash\n   The National Institute of Standards and\
    \ Technology (NIST) Special\n   Publication 800-131A, Revision 1 [NIST.800-131A]\
    \ disallows RSA and\n   DSA keys shorter than 2048 bits for US government use.\
    \  The same\n   document disallows the SHA-1 hash function for digital signature\n\
    \   generation, except under NIST's protocol-specific guidance.\n   It is prudent\
    \ to follow this advice also outside of US government\n   use.\n"
- title: 5.2.  Transition
  contents:
  - "5.2.  Transition\n   This document is based on the premise that RSA is used in\n\
    \   environments where a gradual, compatible transition to improved\n   algorithms\
    \ will be better received than one that is abrupt and\n   incompatible.  It advises\
    \ that SSH implementations add support for\n   new RSA public key algorithms along\
    \ with SSH_MSG_EXT_INFO and the\n   \"server-sig-algs\" extension to allow coexistence\
    \ of new deployments\n   with older versions that support only \"ssh-rsa\".  Nevertheless,\n\
    \   implementations SHOULD start to disable \"ssh-rsa\" in their default\n   configurations\
    \ as soon as the implementers believe that new RSA\n   signature algorithms have\
    \ been widely adopted.\n"
- title: '5.3.  PKCS #1 v1.5 Padding and Signature Verification'
  contents:
  - "5.3.  PKCS #1 v1.5 Padding and Signature Verification\n   This document prescribes\
    \ RSASSA-PKCS1-v1_5 signature padding because:\n   (1)  RSASSA-PSS is not universally\
    \ available to all implementations;\n   (2)  PKCS #1 v1.5 is widely supported\
    \ in existing SSH\n        implementations;\n   (3)  PKCS #1 v1.5 is not known\
    \ to be insecure for use in this scheme.\n   Implementers are advised that a signature\
    \ with RSASSA-PKCS1-v1_5\n   padding MUST NOT be verified by applying the RSA\
    \ key to the\n   signature, and then parsing the output to extract the hash. \
    \ This may\n   give an attacker opportunities to exploit flaws in the parsing\
    \ and\n   vary the encoding.  Verifiers MUST instead apply RSASSA-PKCS1-v1_5\n\
    \   padding to the expected hash, then compare the encoded bytes with the\n  \
    \ output of the RSA operation.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [SHS]      NIST, \"Secure Hash Standard (SHS)\"\
    , FIPS Publication\n              180-4, August 2015,\n              <http://dx.doi.org/10.6028/NIST.FIPS.180-4>.\n\
    \   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n        \
    \      Requirement Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119,\
    \ March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n   [RFC4251]\
    \  Ylonen, T. and C. Lonvick, Ed., \"The Secure Shell (SSH)\n              Protocol\
    \ Architecture\", RFC 4251, DOI 10.17487/RFC4251,\n              January 2006,\
    \ <https://www.rfc-editor.org/info/rfc4251>.\n   [RFC4252]  Ylonen, T. and C.\
    \ Lonvick, Ed., \"The Secure Shell (SSH)\n              Authentication Protocol\"\
    , RFC 4252, DOI 10.17487/RFC4252,\n              January 2006, <https://www.rfc-editor.org/info/rfc4252>.\n\
    \   [RFC4253]  Ylonen, T. and C. Lonvick, Ed., \"The Secure Shell (SSH)\n    \
    \          Transport Layer Protocol\", RFC 4253, DOI 10.17487/RFC4253,\n     \
    \         January 2006, <https://www.rfc-editor.org/info/rfc4253>.\n   [RFC8174]\
    \  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119\
    \ Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,\
    \ <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8308]  Bider, D., \"Extension\
    \ Negotiation in the Secure Shell\n              (SSH) Protocol\", RFC 8308, DOI\
    \ 10.17487/RFC8308, March\n              2018, <https://www.rfc-editor.org/info/rfc8308>.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [NIST.800-131A]\n              NIST, \"Transitions:\
    \ Recommendation for Transitioning the\n              Use of Cryptographic Algorithms\
    \ and Key Lengths\", NIST\n              Special Publication 800-131A, Revision\
    \ 1,\n              DOI 10.6028/NIST.SP.800-131Ar1, November 2015,\n         \
    \     <http://nvlpubs.nist.gov/nistpubs/SpecialPublications/\n              NIST.SP.800-131Ar1.pdf>.\n\
    \   [RFC4250]  Lehtinen, S. and C. Lonvick, Ed., \"The Secure Shell (SSH)\n  \
    \            Protocol Assigned Numbers\", RFC 4250,\n              DOI 10.17487/RFC4250,\
    \ January 2006,\n              <https://www.rfc-editor.org/info/rfc4250>.\n  \
    \ [RFC8017]  Moriarty, K., Ed., Kaliski, B., Jonsson, J., and A. Rusch,\n    \
    \          \"PKCS #1: RSA Cryptography Specifications Version 2.2\",\n       \
    \       RFC 8017, DOI 10.17487/RFC8017, November 2016,\n              <https://www.rfc-editor.org/info/rfc8017>.\n\
    \   [IANA-PKA]\n              IANA, \"Secure Shell (SSH) Protocol Parameters\"\
    ,\n              <https://www.iana.org/assignments/ssh-parameters/>.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   Thanks to Jon Bright, Niels Moeller, Stephen Farrell, Mark\
    \ D.\n   Baushke, Jeffrey Hutzelman, Hanno Boeck, Peter Gutmann, Damien\n   Miller,\
    \ Mat Berchtold, Roumen Petrov, Daniel Migault, Eric Rescorla,\n   Russ Housley,\
    \ Alissa Cooper, Adam Roach, and Ben Campbell for\n   reviews, comments, and suggestions.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Denis Bider\n   Bitvise Limited\n   4105 Lombardy Court\n\
    \   Colleyville, Texas  76034\n   United States of America\n   Email: ietf-ssh3@denisbider.com\n\
    \   URI:   https://www.bitvise.com/\n"
