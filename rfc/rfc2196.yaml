- title: __initial_text__
  contents:
  - '                         Site Security Handbook

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This handbook is a guide to developing computer security policies\
    \ and\n   procedures for sites that have systems on the Internet.  The purpose\n\
    \   of this handbook is to provide practical guidance to administrators\n   trying\
    \ to secure their information and services.  The subjects\n   covered include\
    \ policy content and formation, a broad range of\n   technical system and network\
    \ security topics, and security incident\n   response.\n"
- title: Table of Contents
  contents:
  - 'Table of Contents

    '
- title: 4.4  Authorization................................................... 29
  contents:
  - '4.4  Authorization................................................... 29

    '
- title: 4.5  Access.......................................................... 30
  contents:
  - '4.5  Access.......................................................... 30

    '
- title: 4.6  Auditing........................................................ 34
  contents:
  - '4.6  Auditing........................................................ 34

    '
- title: 4.7  Securing Backups................................................ 37
  contents:
  - '4.7  Securing Backups................................................ 37

    '
- title: 5.   Security Incident Handling...................................... 37
  contents:
  - '5.   Security Incident Handling...................................... 37

    '
- title: 5.1  Preparing and Planning for Incident Handling.................... 39
  contents:
  - '5.1  Preparing and Planning for Incident Handling.................... 39

    '
- title: 5.2  Notification and Points of Contact.............................. 42
  contents:
  - '5.2  Notification and Points of Contact.............................. 42

    '
- title: 5.3  Identifying an Incident......................................... 50
  contents:
  - '5.3  Identifying an Incident......................................... 50

    '
- title: 5.4  Handling an Incident............................................ 52
  contents:
  - '5.4  Handling an Incident............................................ 52

    '
- title: 5.5  Aftermath of an Incident........................................ 58
  contents:
  - '5.5  Aftermath of an Incident........................................ 58

    '
- title: 5.6  Responsibilities................................................ 59
  contents:
  - '5.6  Responsibilities................................................ 59

    '
- title: 6.   Ongoing Activities.............................................. 60
  contents:
  - '6.   Ongoing Activities.............................................. 60

    '
- title: 7.   Tools and Locations............................................. 60
  contents:
  - '7.   Tools and Locations............................................. 60

    '
- title: 8.   Mailing Lists and Other Resources............................... 62
  contents:
  - '8.   Mailing Lists and Other Resources............................... 62

    '
- title: 9.   References...................................................... 64
  contents:
  - '9.   References...................................................... 64

    '
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document provides guidance to system and network administrators\n\
    \   on how to address security issues within the Internet community.  It\n   builds\
    \ on the foundation provided in RFC 1244 and is the collective\n   work of a number\
    \ of contributing authors. Those authors include:\n   Jules P. Aronson (aronson@nlm.nih.gov),\
    \ Nevil Brownlee\n   (n.brownlee@auckland.ac.nz), Frank Byrum (byrum@norfolk.infi.net),\n\
    \   Joao Nuno Ferreira (ferreira@rccn.net), Barbara Fraser\n   (byf@cert.org),\
    \ Steve Glass (glass@ftp.com), Erik Guttman\n   (erik.guttman@eng.sun.com), Tom\
    \ Killalea (tomk@nwnet.net), Klaus-\n   Peter Kossakowski (kossakowski@cert.dfn.de),\
    \ Lorna Leone\n   (lorna@staff.singnet.com.sg), Edward.P.Lewis\n   (Edward.P.Lewis.1@gsfc.nasa.gov),\
    \ Gary Malkin (gmalkin@xylogics.com),\n   Russ Mundy (mundy@tis.com), Philip J.\
    \ Nesser\n   (pjnesser@martigny.ai.mit.edu), and Michael S. Ramsey\n   (msr@interpath.net).\n\
    \   In addition to the principle writers, a number of reviewers provided\n   valuable\
    \ comments. Those reviewers include: Eric Luiijf\n   (luiijf@fel.tno.nl), Marijke\
    \ Kaat (marijke.kaat@sec.nl), Ray Plzak\n   (plzak@nic.mil) and Han Pronk (h.m.pronk@vka.nl).\n\
    \   A special thank you goes to Joyce Reynolds, ISI, and Paul Holbrook,\n   CICnet,\
    \ for their vision, leadership, and effort in the creation of\n   the first version\
    \ of this handbook. It is the working group's sincere\n   hope that this version\
    \ will be as helpful to the community as the\n   earlier one was.\n"
- title: 1.1  Purpose of This Work
  contents:
  - "1.1  Purpose of This Work\n   This handbook is a guide to setting computer security\
    \ policies and\n   procedures for sites that have systems on the Internet (however,\
    \ the\n   information provided should also be useful to sites not yet connected\n\
    \   to the Internet).  This guide lists issues and factors that a site\n   must\
    \ consider when setting their own policies.  It makes a number of\n   recommendations\
    \ and provides discussions of relevant areas.\n   This guide is only a framework\
    \ for setting security policies and\n   procedures.  In order to have an effective\
    \ set of policies and\n   procedures, a site will have to make many decisions,\
    \ gain agreement,\n   and then communicate and implement these policies.\n"
- title: 1.2  Audience
  contents:
  - "1.2  Audience\n   The audience for this document are system and network administrators,\n\
    \   and decision makers (typically \"middle management\") at sites.  For\n   brevity,\
    \ we will use the term \"administrator\" throughout this\n   document to refer\
    \ to system and network administrators.\n   This document is not directed at programmers\
    \ or those trying to\n   create secure programs or systems.  The focus of this\
    \ document is on\n   the policies and procedures that need to be in place to support\
    \ the\n   technical security features that a site may be implementing.\n   The\
    \ primary audience for this work are sites that are members of the\n   Internet\
    \ community.  However, this document should be useful to any\n   site that allows\
    \ communication with other sites.  As a general guide\n   to security policies,\
    \ this document may also be useful to sites with\n   isolated systems.\n"
- title: 1.3  Definitions
  contents:
  - "1.3  Definitions\n   For the purposes of this guide, a \"site\" is any organization\
    \ that\n   owns computers or network-related resources. These resources may\n\
    \   include host computers that users use, routers, terminal servers, PCs\n  \
    \ or other devices that have access to the Internet.  A site may be an\n   end\
    \ user of Internet services or a service provider such as a mid-\n   level network.\
    \  However, most of the focus of this guide is on those\n   end users of Internet\
    \ services.  We assume that the site has the\n   ability to set policies and procedures\
    \ for itself with the\n   concurrence and support from those who actually own\
    \ the resources. It\n   will be assumed that sites that are parts of larger organizations\n\
    \   will know when they need to consult, collaborate, or take\n   recommendations\
    \ from, the larger entity.\n   The \"Internet\" is a collection of thousands of\
    \ networks linked by a\n   common set of technical protocols which make it possible\
    \ for users of\n   any one of the networks to communicate with, or use the services\n\
    \   located on, any of the other networks (FYI4, RFC 1594).\n   The term \"administrator\"\
    \ is used to cover all those people who are\n   responsible for the day-to-day\
    \ operation of system and network\n   resources.  This may be a number of individuals\
    \ or an organization.\n   The term \"security administrator\" is used to cover\
    \ all those people\n   who are responsible for the security of information and\
    \ information\n   technology.  At some sites this function may be combined with\n\
    \   administrator (above); at others, this will be a separate position.\n   The\
    \ term \"decision maker\" refers to those people at a site who set or\n   approve\
    \ policy.  These are often (but not always) the people who own\n   the resources.\n"
- title: 1.4  Related Work
  contents:
  - "1.4  Related Work\n   The Site Security Handbook Working Group is working on\
    \ a User's Guide\n   to Internet Security. It will provide practical guidance\
    \ to end users\n   to help them protect their information and the resources they\
    \ use.\n"
- title: 1.5  Basic Approach
  contents:
  - "1.5  Basic Approach\n   This guide is written to provide basic guidance in developing\
    \ a\n   security plan for your site.  One generally accepted approach to\n   follow\
    \ is suggested by Fites, et. al. [Fites 1989] and includes the\n   following steps:\n\
    \   (1)  Identify what you are trying to protect.\n   (2)  Determine what you\
    \ are trying to protect it from.\n   (3)  Determine how likely the threats are.\n\
    \   (4)  Implement measures which will protect your assets in a cost-\n      \
    \  effective manner.\n   (5)  Review the process continuously and make improvements\
    \ each time\n        a weakness is found.\n   Most of this document is focused\
    \ on item 4 above, but the other steps\n   cannot be avoided if an effective plan\
    \ is to be established at your\n   site.  One old truism in security is that the\
    \ cost of protecting\n   yourself against a threat should be less than the cost\
    \ of recovering\n   if the threat were to strike you.  Cost in this context should\
    \ be\n   remembered to include losses expressed in real currency, reputation,\n\
    \   trustworthiness, and other less obvious measures.  Without reasonable\n  \
    \ knowledge of what you are protecting and what the likely threats are,\n   following\
    \ this rule could be difficult.\n"
- title: 1.6  Risk Assessment
  contents:
  - '1.6  Risk Assessment

    '
- title: 1.6.1  General Discussion
  contents:
  - "1.6.1  General Discussion\n   One of the most important reasons for creating\
    \ a computer security\n   policy is to ensure that efforts spent on security yield\
    \ cost\n   effective benefits.  Although this may seem obvious, it is possible\n\
    \   to be mislead about where the effort is needed.  As an example, there\n  \
    \ is a great deal of publicity about intruders on computers systems;\n   yet most\
    \ surveys of computer security show that, for most\n   organizations, the actual\
    \ loss from \"insiders\" is much greater.\n   Risk analysis involves determining\
    \ what you need to protect, what you\n   need to protect it from, and how to protect\
    \ it.  It is the process of\n   examining all of your risks, then ranking those\
    \ risks by level of\n   severity.  This process involves making cost-effective\
    \ decisions on\n   what you want to protect.  As mentioned above, you should probably\n\
    \   not spend more to protect something than it is actually worth.\n   A full\
    \ treatment of risk analysis is outside the scope of this\n   document.  [Fites\
    \ 1989] and [Pfleeger 1989] provide introductions to\n   this topic.  However,\
    \ there are two elements of a risk analysis that\n   will be briefly covered in\
    \ the next two sections:\n   (1) Identifying the assets\n   (2) Identifying the\
    \ threats\n   For each asset, the basic goals of security are availability,\n\
    \   confidentiality, and integrity.  Each threat should be examined with\n   an\
    \ eye to how the threat could affect these areas.\n"
- title: 1.6.2  Identifying the Assets
  contents:
  - "1.6.2  Identifying the Assets\n   One step in a risk analysis is to identify\
    \ all the things that need\n   to be protected.  Some things are obvious, like\
    \ valuable proprietary\n   information, intellectual property, and all the various\
    \ pieces of\n   hardware; but, some are overlooked, such as the people who actually\n\
    \   use the systems. The essential point is to list all things that could\n  \
    \ be affected by a security problem.\n   One list of categories is suggested by\
    \ Pfleeger [Pfleeger 1989]; this\n   list is adapted from that source:\n   (1)\
    \  Hardware: CPUs, boards, keyboards, terminals,\n        workstations, personal\
    \ computers, printers, disk\n        drives, communication lines, terminal servers,\
    \ routers.\n   (2)  Software: source programs, object programs,\n        utilities,\
    \ diagnostic programs, operating systems,\n        communication programs.\n \
    \  (3)  Data: during execution, stored on-line, archived off-line,\n        backups,\
    \ audit logs, databases, in transit over\n        communication media.\n   (4)\
    \  People: users, administrators, hardware maintainers.\n   (5)  Documentation:\
    \ on programs, hardware, systems, local\n        administrative procedures.\n\
    \   (6)  Supplies: paper, forms, ribbons, magnetic media.\n"
- title: 1.6.3  Identifying the Threats
  contents:
  - "1.6.3  Identifying the Threats\n   Once the assets requiring protection are identified,\
    \ it is necessary\n   to identify threats to those assets.  The threats can then\
    \ be\n   examined to determine what potential for loss exists.  It helps to\n\
    \   consider from what threats you are trying to protect your assets.\n   The\
    \ following are classic threats that should be considered.\n   Depending on your\
    \ site, there will be more specific threats that\n   should be identified and\
    \ addressed.\n   (1)  Unauthorized access to resources and/or information\n  \
    \ (2)  Unintented and/or unauthorized Disclosure of information\n   (3)  Denial\
    \ of service\n"
- title: 2.  Security Policies
  contents:
  - "2.  Security Policies\n   Throughout this document there will be many references\
    \ to policies.\n   Often these references will include recommendations for specific\n\
    \   policies. Rather than repeat guidance in how to create and\n   communicate\
    \ such a policy, the reader should apply the advice\n   presented in this chapter\
    \ when developing any policy recommended\n   later in this book.\n"
- title: 2.1  What is a Security Policy and Why Have One?
  contents:
  - "2.1  What is a Security Policy and Why Have One?\n   The security-related decisions\
    \ you make, or fail to make, as\n   administrator largely determines how secure\
    \ or insecure your network\n   is, how much functionality your network offers,\
    \ and how easy your\n   network is to use.  However, you cannot make good decisions\
    \ about\n   security without first determining what your security goals are.\n\
    \   Until you determine what your security goals are, you cannot make\n   effective\
    \ use of any collection of security tools because you simply\n   will not know\
    \ what to check for and what restrictions to impose.\n   For example, your goals\
    \ will probably be very different from the\n   goals of a product vendor.  Vendors\
    \ are trying to make configuration\n   and operation of their products as simple\
    \ as possible, which implies\n   that the default configurations will often be\
    \ as open (i.e.,\n   insecure) as possible.  While this does make it easier to\
    \ install new\n   products, it also leaves access to those systems, and other\
    \ systems\n   through them, open to any user who wanders by.\n   Your goals will\
    \ be largely determined by the following key tradeoffs:\n   (1)  services offered\
    \ versus security provided -\n        Each service offered to users carries its\
    \ own security risks.\n        For some services the risk outweighs the benefit\
    \ of the service\n        and the administrator may choose to eliminate the service\
    \ rather\n        than try to secure it.\n   (2)  ease of use versus security\
    \ -\n        The easiest system to use would allow access to any user and\n  \
    \      require no passwords; that is, there would be no security.\n        Requiring\
    \ passwords makes the system a little less convenient,\n        but more secure.\
    \  Requiring device-generated one-time passwords\n        makes the system even\
    \ more difficult to use, but much more\n        secure.\n   (3)  cost of security\
    \ versus risk of loss -\n        There are many different costs to security: monetary\
    \ (i.e., the\n        cost of purchasing security hardware and software like firewalls\n\
    \        and one-time password generators), performance (i.e., encryption\n  \
    \      and decryption take time), and ease of use (as mentioned above).\n    \
    \    There are also many levels of risk: loss of privacy (i.e., the\n        reading\
    \ of information by unauthorized individuals), loss of\n        data (i.e., the\
    \ corruption or erasure of information), and the\n        loss of service (e.g.,\
    \ the filling of data storage space, usage\n        of computational resources,\
    \ and denial of network access).  Each\n        type of cost must be weighed against\
    \ each type of loss.\n   Your goals should be communicated to all users, operations\
    \ staff, and\n   managers through a set of security rules, called a \"security\
    \ policy.\"\n   We are using this term, rather than the narrower \"computer security\n\
    \   policy\" since the scope includes all types of information technology\n  \
    \ and the information stored and manipulated by the technology.\n"
- title: 2.1.1  Definition of a Security Policy
  contents:
  - "2.1.1  Definition of a Security Policy\n   A security policy is a formal statement\
    \ of the rules by which people\n   who are given access to an organization's technology\
    \ and information\n   assets must abide.\n"
- title: 2.1.2  Purposes of a Security Policy
  contents:
  - "2.1.2  Purposes of a Security Policy\n   The main purpose of a security policy\
    \ is to inform users, staff and\n   managers of their obligatory requirements\
    \ for protecting technology\n   and information assets.  The policy should specify\
    \ the mechanisms\n   through which these requirements can be met.  Another purpose\
    \ is to\n   provide a baseline from which to acquire, configure and audit\n  \
    \ computer systems and networks for compliance with the policy.\n   Therefore\
    \ an attempt to use a set of security tools in the absence of\n   at least an\
    \ implied security policy is meaningless.\n   An Appropriate Use Policy (AUP)\
    \ may also be part of a security\n   policy.  It should spell out what users shall\
    \ and shall not do on the\n   various components of the system, including the\
    \ type of traffic\n   allowed on the networks.  The AUP should be as explicit\
    \ as possible\n   to avoid ambiguity or misunderstanding.  For example, an AUP\
    \ might\n   list any prohibited USENET newsgroups. (Note: Appropriate Use Policy\n\
    \   is referred to as Acceptable Use Policy by some sites.)\n"
- title: 2.1.3  Who Should be Involved When Forming Policy?
  contents:
  - "2.1.3  Who Should be Involved When Forming Policy?\n   In order for a security\
    \ policy to be appropriate and effective, it\n   needs to have the acceptance\
    \ and support of all levels of employees\n   within the organization.  It is especially\
    \ important that corporate\n   management fully support the security policy process\
    \ otherwise there\n   is little chance that they will have the intended impact.\
    \  The\n   following is a list of individuals who should be involved in the\n\
    \   creation and review of security policy documents:\n   (1)  site security administrator\n\
    \   (2)  information technology technical staff (e.g., staff from\n        computing\
    \ center)\n   (3)  administrators of large user groups within the organization\n\
    \        (e.g., business divisions, computer science department within a\n   \
    \     university, etc.)\n   (4)  security incident response team\n   (5)  representatives\
    \ of the user groups affected by the security\n        policy\n   (6)  responsible\
    \ management\n   (7)  legal counsel (if appropriate)\n   The list above is representative\
    \ of many organizations, but is not\n   necessarily comprehensive.  The idea is\
    \ to bring in representation\n   from key stakeholders, management who have budget\
    \ and policy\n   authority, technical staff who know what can and cannot be supported,\n\
    \   and legal counsel who know the legal ramifications of various policy\n   choices.\
    \  In some organizations, it may be appropriate to include EDP\n   audit personnel.\
    \  Involving this group is important if resulting\n   policy statements are to\
    \ reach the broadest possible acceptance.  It\n   is also relevant to mention\
    \ that the role of legal counsel will also\n   vary from country to country.\n"
- title: 2.2  What Makes a Good Security Policy?
  contents:
  - "2.2  What Makes a Good Security Policy?\n   The characteristics of a good security\
    \ policy are:\n   (1)  It must be implementable through system administration\n\
    \        procedures, publishing of acceptable use guidelines, or other\n     \
    \   appropriate methods.\n   (2)  It must be enforcible with security tools, where\
    \ appropriate,\n        and with sanctions, where actual prevention is not technically\n\
    \        feasible.\n   (3)  It must clearly define the areas of responsibility\
    \ for the\n        users, administrators, and management.\n   The components of\
    \ a good security policy include:\n   (1)  Computer Technology Purchasing Guidelines\
    \ which specify\n        required, or preferred, security features.  These should\n\
    \        supplement existing purchasing policies and guidelines.\n   (2)  A Privacy\
    \ Policy which defines reasonable expectations of\n        privacy regarding such\
    \ issues as monitoring of electronic mail,\n        logging of keystrokes, and\
    \ access to users' files.\n   (3)  An Access Policy which defines access rights\
    \ and privileges to\n        protect assets from loss or disclosure by specifying\
    \ acceptable\n        use guidelines for users, operations staff, and management.\
    \  It\n        should provide guidelines for external connections, data\n    \
    \    communications, connecting devices to a network, and adding new\n       \
    \ software to systems.  It should also specify any required\n        notification\
    \ messages (e.g., connect messages should provide\n        warnings about authorized\
    \ usage and line monitoring, and not\n        simply say \"Welcome\").\n   (4)\
    \  An Accountability Policy which defines the responsibilities of\n        users,\
    \ operations staff, and management.  It should specify an\n        audit capability,\
    \ and provide incident handling guidelines\n        (i.e., what to do and who\
    \ to contact if a possible intrusion is\n        detected).\n   (5)  An Authentication\
    \ Policy which establishes trust through an\n        effective password policy,\
    \ and by setting guidelines for remote\n        location authentication and the\
    \ use of authentication devices\n        (e.g., one-time passwords and the devices\
    \ that generate them).\n   (6)  An Availability statement which sets users' expectations\
    \ for the\n        availability of resources.  It should address redundancy and\n\
    \        recovery issues, as well as specify operating hours and\n        maintenance\
    \ down-time periods.  It should also include contact\n        information for\
    \ reporting system and network failures.\n   (7)  An Information Technology System\
    \ & Network Maintenance Policy\n        which describes how both internal and\
    \ external maintenance\n        people are allowed to handle and access technology.\
    \ One\n        important topic to be addressed here is whether remote\n      \
    \  maintenance is allowed and how such access is controlled.\n        Another\
    \ area for consideration here is outsourcing and how it is\n        managed.\n\
    \   (8)  A Violations Reporting Policy that indicates which types of\n       \
    \ violations (e.g., privacy and security, internal and external)\n        must\
    \ be reported and to whom the reports are made.  A non-\n        threatening atmosphere\
    \ and the possibility of anonymous\n        reporting will result in a greater\
    \ probability that a violation\n        will be reported if it is detected.\n\
    \   (9)  Supporting Information which provides users, staff, and\n        management\
    \ with contact information for each type of policy\n        violation; guidelines\
    \ on how to handle outside queries about a\n        security incident, or information\
    \ which may be considered\n        confidential or proprietary; and cross-references\
    \ to security\n        procedures and related information, such as company policies\
    \ and\n        governmental laws and regulations.\n   There may be regulatory\
    \ requirements that affect some aspects of your\n   security policy (e.g., line\
    \ monitoring).  The creators of the\n   security policy should consider seeking\
    \ legal assistance in the\n   creation of the policy.  At a minimum, the policy\
    \ should be reviewed\n   by legal counsel.\n   Once your security policy has been\
    \ established it should be clearly\n   communicated to users, staff, and management.\
    \  Having all personnel\n   sign a statement indicating that they have read, understood,\
    \ and\n   agreed to abide by the policy is an important part of the process.\n\
    \   Finally, your policy should be reviewed on a regular basis to see if\n   it\
    \ is successfully supporting your security needs.\n"
- title: 2.3  Keeping the Policy Flexible
  contents:
  - "2.3  Keeping the Policy Flexible\n   In order for a security policy to be viable\
    \ for the long term, it\n   requires a lot of flexibility based upon an architectural\
    \ security\n   concept. A security policy should be (largely) independent from\n\
    \   specific hardware and software situations (as specific systems tend\n   to\
    \ be replaced or moved overnight).  The mechanisms for updating the\n   policy\
    \ should be clearly spelled out.  This includes the process, the\n   people involved,\
    \ and the people who must sign-off on the changes.\n   It is also important to\
    \ recognize that there are exceptions to every\n   rule.  Whenever possible, the\
    \ policy should spell out what exceptions\n   to the general policy exist.  For\
    \ example, under what conditions is a\n   system administrator allowed to go through\
    \ a user's files.  Also,\n   there may be some cases when multiple users will\
    \ have access to the\n   same userid.  For example, on systems with a \"root\"\
    \ user, multiple\n   system administrators may know the password and use the root\
    \ account.\n   Another consideration is called the \"Garbage Truck Syndrome.\"\
    \  This\n   refers to what would happen to a site if a key person was suddenly\n\
    \   unavailable for his/her job function (e.g., was suddenly ill or left\n   the\
    \ company unexpectedly).  While the greatest security resides in\n   the minimum\
    \ dissemination of information, the risk of losing critical\n   information increases\
    \ when that information is not shared.  It is\n   important to determine what\
    \ the proper balance is for your site.\n"
- title: 3.  Architecture
  contents:
  - '3.  Architecture

    '
- title: 3.1  Objectives
  contents:
  - '3.1  Objectives

    '
- title: 3.1.1  Completely Defined Security Plans
  contents:
  - "3.1.1  Completely Defined Security Plans\n   All sites should define a comprehensive\
    \ security plan.  This plan\n   should be at a higher level than the specific\
    \ policies discussed in\n   chapter 2, and it should be crafted as a framework\
    \ of broad\n   guidelines into which specific policies will fit.\n   It is important\
    \ to have this framework in place so that individual\n   policies can be consistent\
    \ with the overall site security\n   architecture.  For example, having a strong\
    \ policy with regard to\n   Internet access and having weak restrictions on modem\
    \ usage is\n   inconsistent with an overall philosophy of strong security\n  \
    \ restrictions on external access.\n   A security plan should define: the list\
    \ of network services that will\n   be provided; which areas of the organization\
    \ will provide the\n   services; who will have access to those services; how access\
    \ will be\n   provided; who will administer those services; etc.\n   The plan\
    \ should also address how incident will be handled.  Chapter 5\n   provides an\
    \ in-depth discussion of this topic, but it is important\n   for each site to\
    \ define classes of incidents and corresponding\n   responses.  For example, sites\
    \ with firewalls should set a threshold\n   on the number of attempts made to\
    \ foil the firewall before triggering\n   a response?  Escallation levels should\
    \ be defined for both attacks\n   and responses.  Sites without firewalls will\
    \ have to determine if a\n   single attempt to connect to a host constitutes an\
    \ incident? What\n   about a systematic scan of systems?\n   For sites connected\
    \ to the Internet, the rampant media magnification\n   of Internet related security\
    \ incidents can overshadow a (potentially)\n   more serious internal security\
    \ problem.  Likewise, companies who have\n   never been connected to the Internet\
    \ may have strong, well defined,\n   internal policies but fail to adequately\
    \ address an external\n   connection policy.\n"
- title: 3.1.2  Separation of Services
  contents:
  - "3.1.2  Separation of Services\n   There are many services which a site may wish\
    \ to provide for its\n   users, some of which may be external.  There are a variety\
    \ of\n   security reasons to attempt to isolate services onto dedicated host\n\
    \   computers.  There are also performance reasons in most cases, but a\n   detailed\
    \ discussion is beyond to scope of this document.\n   The services which a site\
    \ may provide will, in most cases, have\n   different levels of access needs and\
    \ models of trust.  Services which\n   are essential to the security or smooth\
    \ operation of a site would be\n   better off being placed on a dedicated machine\
    \ with very limited\n   access (see Section 3.1.3 \"deny all\" model), rather\
    \ than on a machine\n   that provides a service (or services) which has traditionally\
    \ been\n   less secure, or requires greater accessability by users who may\n \
    \  accidentally suborn security.\n   It is also important to distinguish between\
    \ hosts which operate\n   within different models of trust (e.g., all the hosts\
    \ inside of a\n   firewall and any host on an exposed network).\n   Some of the\
    \ services which should be examined for potential\n   separation are outlined\
    \ in section 3.2.3. It is important to remember\n   that security is only as strong\
    \ as the weakest link in the chain.\n   Several of the most publicized penetrations\
    \ in recent years have been\n   through the exploitation of vulnerabilities in\
    \ electronic mail\n   systems.  The intruders were not trying to steal electronic\
    \ mail, but\n   they used the vulnerability in that service to gain access to\
    \ other\n   systems.\n   If possible, each service should be running on a different\
    \ machine\n   whose only duty is to provide a specific service.  This helps to\n\
    \   isolate intruders and limit potential harm.\n"
- title: 3.1.3  Deny all/ Allow all
  contents:
  - "3.1.3  Deny all/ Allow all\n   There are two diametrically opposed underlying\
    \ philosophies which can\n   be adopted when defining a security plan.  Both alternatives\
    \ are\n   legitimate models to adopt, and the choice between them will depend\n\
    \   on the site and its needs for security.\n   The first option is to turn off\
    \ all services and then selectively\n   enable services on a case by case basis\
    \ as they are needed. This can\n   be done at the host or network level as appropriate.\
    \  This model,\n   which will here after be referred to as the \"deny all\" model,\
    \ is\n   generally more secure than the other model described in the next\n  \
    \ paragraph.  More work is required to successfully implement a \"deny\n   all\"\
    \ configuration as well as a better understanding of services.\n   Allowing only\
    \ known services provides for a better analysis of a\n   particular service/protocol\
    \ and the design of a security mechanism\n   suited to the security level of the\
    \ site.\n   The other model, which will here after be referred to as the \"allow\n\
    \   all\" model, is much easier to implement, but is generally less secure\n \
    \  than the \"deny all\" model.  Simply turn on all services, usually the\n  \
    \ default at the host level, and allow all protocols to travel across\n   network\
    \ boundaries, usually the default at the router level.  As\n   security holes\
    \ become apparent, they are restricted or patched at\n   either the host or network\
    \ level.\n   Each of these models can be applied to different portions of the\n\
    \   site, depending on functionality requirements, administrative\n   control,\
    \ site policy, etc.  For example, the policy may be to use the\n   \"allow all\"\
    \ model when setting up workstations for general use, but\n   adopt a \"deny all\"\
    \ model when setting up information servers, like an\n   email hub.  Likewise,\
    \ an \"allow all\" policy may be adopted for\n   traffic between LAN's internal\
    \ to the site, but a \"deny all\" policy\n   can be adopted between the site and\
    \ the Internet.\n   Be careful when mixing philosophies as in the examples above.\
    \  Many\n   sites adopt the theory of a hard \"crunchy\" shell and a soft \"squishy\"\
    \n   middle.  They are willing to pay the cost of security for their\n   external\
    \ traffic and require strong security measures, but are\n   unwilling or unable\
    \ to provide similar protections internally.  This\n   works fine as long as the\
    \ outer defenses are never breached and the\n   internal users can be trusted.\
    \  Once the outer shell (firewall) is\n   breached, subverting the internal network\
    \ is trivial.\n"
- title: 3.1.4  Identify Real Needs for Services
  contents:
  - "3.1.4  Identify Real Needs for Services\n   There is a large variety of services\
    \ which may be provided, both\n   internally and on the Internet at large.  Managing\
    \ security is, in\n   many ways, managing access to services internal to the site\
    \ and\n   managing how internal users access information at remote sites.\n  \
    \ Services tend to rush like waves over the Internet.  Over the years\n   many\
    \ sites have established anonymous FTP servers, gopher servers,\n   wais servers,\
    \ WWW servers, etc. as they became popular, but not\n   particularly needed, at\
    \ all sites.  Evaluate all new services that\n   are established with a skeptical\
    \ attitude to determine if they are\n   actually needed or just the current fad\
    \ sweeping the Internet.\n   Bear in mind that security complexity can grow exponentially\
    \ with the\n   number of services provided.  Filtering routers need to be modified\n\
    \   to support the new protocols.  Some protocols are inherently\n   difficult\
    \ to filter safely (e.g., RPC and UDP services), thus\n   providing more openings\
    \ to the internal network.  Services provided\n   on the same machine can interact\
    \ in catastrophic ways.  For example,\n   allowing anonymous FTP on the same machine\
    \ as the WWW server may\n   allow an intruder to place a file in the anonymous\
    \ FTP area and cause\n   the HTTP server to execute it.\n"
- title: 3.2  Network and Service Configuration
  contents:
  - '3.2  Network and Service Configuration

    '
- title: 3.2.1  Protecting the Infrastructure
  contents:
  - "3.2.1  Protecting the Infrastructure\n   Many network administrators go to great\
    \ lengths to protect the hosts\n   on their networks.  Few administrators make\
    \ any effort to protect the\n   networks themselves.  There is some rationale\
    \ to this.  For example,\n   it is far easier to protect a host than a network.\
    \  Also, intruders\n   are likely to be after data on the hosts; damaging the\
    \ network would\n   not serve their purposes.  That said, there are still reasons\
    \ to\n   protect the networks.  For example, an intruder might divert network\n\
    \   traffic through an outside host in order to examine the data (i.e.,\n   to\
    \ search for passwords).  Also, infrastructure includes more than\n   the networks\
    \ and the routers which interconnect them.  Infrastructure\n   also includes network\
    \ management (e.g., SNMP), services (e.g., DNS,\n   NFS, NTP, WWW), and security\
    \ (i.e., user authentication and access\n   restrictions).\n   The infrastructure\
    \ also needs protection against human error.  When\n   an administrator misconfigures\
    \ a host, that host may offer degraded\n   service.  This only affects users who\
    \ require that host and, unless\n   that host is a primary server, the number\
    \ of affected users will\n   therefore be limited.  However, if a router is misconfigured,\
    \ all\n   users who require the network will be affected.  Obviously, this is\
    \ a\n   far larger number of users than those depending on any one host.\n"
- title: 3.2.2  Protecting the Network
  contents:
  - "3.2.2  Protecting the Network\n   There are several problems to which networks\
    \ are vulnerable.  The\n   classic problem is a \"denial of service\" attack.\
    \  In this case, the\n   network is brought to a state in which it can no longer\
    \ carry\n   legitimate users' data.  There are two common ways this can be done:\n\
    \   by attacking the routers and by flooding the network with extraneous\n   traffic.\
    \  Please note that the term \"router\" in this section is used\n   as an example\
    \ of a larger class of active network interconnection\n   components that also\
    \ includes components like firewalls, proxy-\n   servers, etc.\n   An attack on\
    \ the router is designed to cause it to stop forwarding\n   packets, or to forward\
    \ them improperly.  The former case may be due\n   to a misconfiguration, the\
    \ injection of a spurious routing update, or\n   a \"flood attack\" (i.e., the\
    \ router is bombarded with unroutable\n   packets, causing its performance to\
    \ degrade).  A flood attack on a\n   network is similar to a flood attack on a\
    \ router, except that the\n   flood packets are usually broadcast.  An ideal flood\
    \ attack would be\n   the injection of a single packet which exploits some known\
    \ flaw in\n   the network nodes and causes them to retransmit the packet, or\n\
    \   generate error packets, each of which is picked up and repeated by\n   another\
    \ host.  A well chosen attack packet can even generate an\n   exponential explosion\
    \ of transmissions.\n   Another classic problem is \"spoofing.\"  In this case,\
    \ spurious\n   routing updates are sent to one or more routers causing them to\n\
    \   misroute packets.  This differs from a denial of service attack only\n   in\
    \ the purpose behind the spurious route.  In denial of service, the\n   object\
    \ is to make the router unusable; a state which will be quickly\n   detected by\
    \ network users.  In spoofing, the spurious route will\n   cause packets to be\
    \ routed to a host from which an intruder may\n   monitor the data in the packets.\
    \  These packets are then re-routed to\n   their correct destinations.  However,\
    \ the intruder may or may not\n   have altered the contents of the packets.\n\
    \   The solution to most of these problems is to protect the routing\n   update\
    \ packets sent by the routing protocols in use (e.g., RIP-2,\n   OSPF).  There\
    \ are three levels of protection: clear-text password,\n   cryptographic checksum,\
    \ and encryption.  Passwords offer only minimal\n   protection against intruders\
    \ who do not have direct access to the\n   physical networks.  Passwords also\
    \ offer some protection against\n   misconfigured routers (i.e, routers which,\
    \ out of the box, attempt to\n   route packets).  The advantage of passwords is\
    \ that they have a very\n   low overhead, in both bandwidth and CPU consumption.\
    \  Checksums\n   protect against the injection of spurious packets, even if the\n\
    \   intruder has direct access to the physical network.  Combined with a\n   sequence\
    \ number, or other unique identifier, a checksum can also\n   protect again \"\
    replay\" attacks, wherein an old (but valid at the\n   time) routing update is\
    \ retransmitted by either an intruder or a\n   misbehaving router.  The most security\
    \ is provided by complete\n   encryption of sequenced, or uniquely identified,\
    \ routing updates.\n   This prevents an intruder from determining the topology\
    \ of the\n   network.  The disadvantage to encryption is the overhead involved\
    \ in\n   processing the updates.\n   RIP-2 (RFC 1723) and OSPF (RFC 1583) both\
    \ support clear-text\n   passwords in their base design specifications.  In addition,\
    \ there\n   are extensions to each base protocol to support MD5 encryption.\n\
    \   Unfortunately, there is no adequate protection against a flooding\n   attack,\
    \ or a misbehaving host or router which is flooding the\n   network.  Fortunately,\
    \ this type of attack is obvious when it occurs\n   and can usually be terminated\
    \ relatively simply.\n"
- title: 3.2.3  Protecting the Services
  contents:
  - "3.2.3  Protecting the Services\n   There are many types of services and each\
    \ has its own security\n   requirements.  These requirements will vary based on\
    \ the intended use\n   of the service.  For example, a service which should only\
    \ be usable\n   within a site (e.g., NFS) may require different protection mechanisms\n\
    \   than a service provided for external use. It may be sufficient to\n   protect\
    \ the internal server from external access.  However, a WWW\n   server, which\
    \ provides a home page intended for viewing by users\n   anywhere on the Internet,\
    \ requires built-in protection.  That is, the\n   service/protocol/server must\
    \ provide whatever security may be\n   required to prevent unauthorized access\
    \ and modification of the Web\n   database.\n   Internal services (i.e., services\
    \ meant to be used only by users\n   within a site) and external services (i.e.,\
    \ services deliberately\n   made available to users outside a site) will, in general,\
    \ have\n   protection requirements which differ as previously described.  It is\n\
    \   therefore wise to isolate the internal services to one set of server\n   host\
    \ computers and the external services to another set of server\n   host computers.\
    \  That is, internal and external servers should not be\n   co-located on the\
    \ same host computer.  In fact, many sites go so far\n   as to have one set of\
    \ subnets (or even different networks) which are\n   accessible from the outside\
    \ and another set which may be accessed\n   only within the site.  Of course,\
    \ there is usually a firewall which\n   connects these partitions.  Great care\
    \ must be taken to ensure that\n   such a firewall is operating properly.\n  \
    \ There is increasing interest in using intranets to connect different\n   parts\
    \ of a organization (e.g., divisions of a company). While this\n   document generally\
    \ differentiates between external and internal\n   (public and private), sites\
    \ using intranets should be aware that they\n   will need to consider three separations\
    \ and take appropriate actions\n   when designing and offering services. A service\
    \ offered to an\n   intranet would be neither public, nor as completely private\
    \ as a\n   service to a single organizational subunit. Therefore, the service\n\
    \   would need its own supporting system, separated from both external\n   and\
    \ internal services and networks.\n   One form of external service deserves some\
    \ special consideration, and\n   that is anonymous, or guest, access.  This may\
    \ be either anonymous\n   FTP or guest (unauthenticated) login.  It is extremely\
    \ important to\n   ensure that anonymous FTP servers and guest login userids are\n\
    \   carefully isolated from any hosts and file systems from which outside\n  \
    \ users should be kept.  Another area to which special attention must\n   be paid\
    \ concerns anonymous, writable access.  A site may be legally\n   responsible\
    \ for the content of publicly available information, so\n   careful monitoring\
    \ of the information deposited by anonymous users is\n   advised.\n   Now we shall\
    \ consider some of the most popular services: name\n   service, password/key service,\
    \ authentication/proxy service,\n   electronic mail, WWW, file transfer, and NFS.\
    \  Since these are the\n   most frequently used services, they are the most obvious\
    \ points of\n   attack.  Also, a successful attack on one of these services can\n\
    \   produce disaster all out of proportion to the innocence of the basic\n   service.\n"
- title: 3.2.3.1  Name Servers (DNS and NIS(+))
  contents:
  - "3.2.3.1  Name Servers (DNS and NIS(+))\n   The Internet uses the Domain Name\
    \ System (DNS) to perform address\n   resolution for host and network names. \
    \ The Network Information\n   Service (NIS) and NIS+ are not used on the global\
    \ Internet, but are\n   subject to the same risks as a DNS server.  Name-to-address\n\
    \   resolution is critical to the secure operation of any network.  An\n   attacker\
    \ who can successfully control or impersonate a DNS server can\n   re-route traffic\
    \ to subvert security protections.  For example,\n   routine traffic can be diverted\
    \ to a compromised system to be\n   monitored; or, users can be tricked into providing\
    \ authentication\n   secrets.  An organization should create well known, protected\
    \ sites\n   to act as secondary name servers and protect their DNS masters from\n\
    \   denial of service attacks using filtering routers.\n   Traditionally, DNS\
    \ has had no security capabilities. In particular,\n   the information returned\
    \ from a query could not be checked for\n   modification or verified that it had\
    \ come from the name server in\n   question.  Work has been done to incorporate\
    \ digital signatures into\n   the protocol which, when deployed, will allow the\
    \ integrity of the\n   information to be cryptographically verified (see RFC 2065).\n"
- title: 3.2.3.2  Password/Key Servers (NIS(+) and KDC)
  contents:
  - "3.2.3.2  Password/Key Servers (NIS(+) and KDC)\n   Password and key servers generally\
    \ protect their vital information\n   (i.e., the passwords and keys) with encryption\
    \ algorithms.  However,\n   even a one-way encrypted password can be determined\
    \ by a dictionary\n   attack (wherein common words are encrypted to see if they\
    \ match the\n   stored encryption).  It is therefore necessary to ensure that\
    \ these\n   servers are not accessable by hosts which do not plan to use them\
    \ for\n   the service, and even those hosts should only be able to access the\n\
    \   service (i.e., general services, such as Telnet and FTP, should not\n   be\
    \ allowed by anyone other than administrators).\n"
- title: 3.2.3.3  Authentication/Proxy Servers (SOCKS, FWTK)
  contents:
  - "3.2.3.3  Authentication/Proxy Servers (SOCKS, FWTK)\n   A proxy server provides\
    \ a number of security enhancements.  It allows\n   sites to concentrate services\
    \ through a specific host to allow\n   monitoring, hiding of internal structure,\
    \ etc.  This funnelling of\n   services creates an attractive target for a potential\
    \ intruder.  The\n   type of protection required for a proxy server depends greatly\
    \ on the\n   proxy protocol in use and the services being proxied.  The general\n\
    \   rule of limiting access only to those hosts which need the services,\n   and\
    \ limiting access by those hosts to only those services, is a good\n   starting\
    \ point.\n"
- title: 3.2.3.4  Electronic Mail
  contents:
  - "3.2.3.4  Electronic Mail\n   Electronic mail (email) systems have long been a\
    \ source for intruder\n   break-ins because email protocols are among the oldest\
    \ and most\n   widely deployed services.  Also, by it's very nature, an email\
    \ server\n   requires access to the outside world; most email servers accept input\n\
    \   from any source.  An email server generally consists of two parts: a\n   receiving/sending\
    \ agent and a processing agent.  Since email is\n   delivered to all users, and\
    \ is usually private, the processing agent\n   typically requires system (root)\
    \ privileges to deliver the mail.\n   Most email implementations perform both\
    \ portions of the service,\n   which means the receiving agent also has system\
    \ privileges.  This\n   opens several security holes which this document will\
    \ not describe.\n   There are some implementations available which allow a separation\
    \ of\n   the two agents.  Such implementations are generally considered more\n\
    \   secure, but still require careful installation to avoid creating a\n   security\
    \ problem.\n"
- title: 3.2.3.5  World Wide Web (WWW)
  contents:
  - "3.2.3.5  World Wide Web (WWW)\n   The Web is growing in popularity exponentially\
    \ because of its ease of\n   use and the powerful ability to concentrate information\
    \ services.\n   Most WWW servers accept some type of direction and action from\
    \ the\n   persons accessing their services.  The most common example is taking\n\
    \   a request from a remote user and passing the provided information to\n   a\
    \ program running on the server to process the request.  Some of\n   these programs\
    \ are not written with security in mind and can create\n   security holes.  If\
    \ a Web server is available to the Internet\n   community, it is especially important\
    \ that confidential information\n   not be co-located on the same host as that\
    \ server.  In fact, it is\n   recommended that the server have a dedicated host\
    \ which is not\n   \"trusted\" by other internal hosts.\n   Many sites may want\
    \ to co-locate FTP service with their WWW service.\n   But this should only occur\
    \ for anon-ftp servers that only provide\n   information (ftp-get). Anon-ftp puts,\
    \ in combination with WWW, might\n   be dangerous (e.g., they could result in\
    \ modifications to the\n   information your site is publishing to the web) and\
    \ in themselves\n   make the security considerations for each service different.\n"
- title: 3.2.3.6  File Transfer (FTP, TFTP)
  contents:
  - "3.2.3.6  File Transfer (FTP, TFTP)\n   FTP and TFTP both allow users to receive\
    \ and send electronic files in\n   a point-to-point manner.  However, FTP requires\
    \ authentication while\n   TFTP requires none. For this reason, TFTP should be\
    \ avoided as much\n   as possible.\n   Improperly configured FTP servers can allow\
    \ intruders to copy,\n   replace and delete files at will, anywhere on a host,\
    \ so it is very\n   important to configure this service correctly.   Access to\
    \ encrypted\n   passwords and proprietary data, and the introduction of Trojan\
    \ horses\n   are just a few of the potential security holes that can occur when\n\
    \   the service is configured incorrectly. FTP servers should reside on\n   their\
    \ own host.  Some sites choose to co-locate FTP with a Web\n   server, since the\
    \ two protocols share common security considerations\n   However, the the practice\
    \ isn't recommended, especially when the FTP\n   service allows the deposit of\
    \ files (see section on WWW above). As\n   mentioned in the opening paragraphs\
    \ of section 3.2.3, services\n   offered internally to your site should not be\
    \ co-located with\n   services offered externally.  Each should have its own host.\n\
    \   TFTP does not support the same range of functions as FTP, and has no\n   security\
    \ whatsoever.  This service should only be considered for\n   internal use, and\
    \ then it should be configured in a restricted way so\n   that the server only\
    \ has access to a set of predetermined files\n   (instead of every world-readable\
    \ file on the system).  Probably the\n   most common usage of TFTP is for downloading\
    \ router configuration\n   files to a router.  TFTP should reside on its own host,\
    \ and should\n   not be installed on hosts supporting external FTP or Web access.\n"
- title: 3.2.3.7  NFS
  contents:
  - "3.2.3.7  NFS\n   The Network File Service allows hosts to share common disks.\
    \  NFS is\n   frequently used by diskless hosts who depend on a disk server for\
    \ all\n   of their storage needs.  Unfortunately, NFS has no built-in security.\n\
    \   It is therefore necessary that the NFS server be accessable only by\n   those\
    \ hosts which are using it for service.  This is achieved by\n   specifying which\
    \ hosts the file system is being exported to and in\n   what manner (e.g., read-only,\
    \ read-write, etc.). Filesystems should\n   not be exported to any hosts outside\
    \ the local network since this\n   will require that the NFS service be accessible\
    \ externally. Ideally,\n   external access to NFS service should be stopped by\
    \ a firewall.\n"
- title: 3.2.4  Protecting the Protection
  contents:
  - "3.2.4  Protecting the Protection\n   It is amazing how often a site will overlook\
    \ the most obvious\n   weakness in its security by leaving the security server\
    \ itself open\n   to attack.  Based on considerations previously discussed, it\
    \ should\n   be clear that: the security server should not be accessible from\n\
    \   off-site; should offer minimum access, except for the authentication\n   function,\
    \ to users on-site; and should not be co-located with any\n   other servers. \
    \ Further, all access to the node, including access to\n   the service itself,\
    \ should be logged to provide a \"paper trail\" in\n   the event of a security\
    \ breach.\n"
- title: 3.3  Firewalls
  contents:
  - "3.3  Firewalls\n   One of the most widely deployed and publicized security measures\
    \ in\n   use on the Internet is a \"firewall.\"  Firewalls have been given the\n\
    \   reputation of a general panacea for many, if not all, of the Internet\n  \
    \ security issues.  They are not.  Firewalls are just another tool in\n   the\
    \ quest for system security.  They provide a certain level of\n   protection and\
    \ are, in general, a way of implementing security policy\n   at the network level.\
    \  The level of security that a firewall provides\n   can vary as much as the\
    \ level of security on a particular machine.\n   There are the traditional trade-offs\
    \ between security, ease of use,\n   cost, complexity, etc.\n   A firewall is\
    \ any one of several mechanisms used to control and watch\n   access to and from\
    \ a network for the purpose of protecting it.  A\n   firewall acts as a gateway\
    \ through which all traffic to and from the\n   protected network and/or systems\
    \ passes.  Firewalls help to place\n   limitations on the amount and type of communication\
    \ that takes place\n   between the protected network and the another network (e.g.,\
    \ the\n   Internet, or another piece of the site's network).\n   A firewall is\
    \ generally a way to build a wall between one part of a\n   network, a company's\
    \ internal network, for example, and another part,\n   the global Internet, for\
    \ example.  The unique feature about this wall\n   is that there needs to be ways\
    \ for some traffic with particular\n   characteristics to pass through carefully\
    \ monitored doors\n   (\"gateways\").  The difficult part is establishing the\
    \ criteria by\n   which the packets are allowed or denied access through the doors.\n\
    \   Books written on firewalls use different terminology to describe the\n   various\
    \ forms of firewalls. This can be confusing to system\n   administrators who are\
    \ not familiar with firewalls. The thing to note\n   here is that there is no\
    \ fixed terminology for the description of\n   firewalls.\n   Firewalls are not\
    \ always, or even typically, a single machine.\n   Rather, firewalls are often\
    \ a combination of routers, network\n   segments, and host computers.  Therefore,\
    \ for the purposes of this\n   discussion, the term \"firewall\" can consist of\
    \ more than one physical\n   device.  Firewalls are typically built using two\
    \ different\n   components, filtering routers and proxy servers.\n   Filtering\
    \ routers are the easiest component to conceptualize in a\n   firewall.  A router\
    \ moves data back and forth between two (or more)\n   different networks.  A \"\
    normal\" router takes a packet from network A\n   and \"routes\" it to its destination\
    \ on network B.  A filtering router\n   does the same thing but decides not only\
    \ how to route the packet, but\n   whether it should route the packet.  This is\
    \ done by installing a\n   series of filters by which the router decides what\
    \ to do with any\n   given packet of data.\n   A discussion concerning capabilities\
    \ of a particular brand of router,\n   running a particular software version is\
    \ outside the scope of this\n   document.  However, when evaluating a router to\
    \ be used for filtering\n   packets, the following criteria can be important when\
    \ implementing a\n   filtering policy:  source and destination IP address, source\
    \ and\n   destination TCP port numbers, state of the TCP \"ack\" bit, UDP source\n\
    \   and destination port numbers, and direction of packet flow (i.e.. A-\n   >B\
    \ or B->A).  Other information necessary to construct a secure\n   filtering scheme\
    \ are whether the router reorders filter instructions\n   (designed to optimize\
    \ filters, this can sometimes change the meaning\n   and cause unintended access),\
    \ and whether it is possible to apply\n   filters for inbound and outbound packets\
    \ on each interface (if the\n   router filters only outbound packets then the\
    \ router is \"outside\" of\n   its filters and may be more vulnerable to attack).\
    \  In addition to\n   the router being vulnerable, this distinction between applying\n\
    \   filters on inbound or outbound packets is especially relevant for\n   routers\
    \ with more than 2 interfaces.  Other important issues are the\n   ability to\
    \ create filters based on IP header options and the fragment\n   state of a packet.\
    \  Building a good filter can be very difficult and\n   requires a good understanding\
    \ of the type of services (protocols)\n   that will be filtered.\n   For better\
    \ security, the filters usually restrict access between the\n   two connected\
    \ nets to just one host, the bastion host.  It is only\n   possible to access\
    \ the other network via this bastion host.  As only\n   this host, rather than\
    \ a few hundred hosts, can get attacked, it is\n   easier to maintain a certain\
    \ level of security because only this host\n   has to be protected very carefully.\
    \  To make resources available to\n   legitimate users across this firewall, services\
    \ have to be forwarded\n   by the bastion host.  Some servers have forwarding\
    \ built in (like\n   DNS-servers or SMTP-servers), for other services (e.g., Telnet,\
    \ FTP,\n   etc.), proxy servers can be used to allow access to the resources\n\
    \   across the firewall in a secure way.\n   A proxy server is way to concentrate\
    \ application services through a\n   single machine.  There is typically a single\
    \ machine (the bastion\n   host) that acts as a proxy server for a variety of\
    \ protocols (Telnet,\n   SMTP, FTP, HTTP, etc.) but there can be individual host\
    \ computers for\n   each service.  Instead of connecting directly to an external\
    \ server,\n   the client connects to the proxy server which in turn initiates\
    \ a\n   connection to the requested external server.  Depending on the type\n\
    \   of proxy server used, it is possible to configure internal clients to\n  \
    \ perform this redirection automatically, without knowledge to the\n   user, others\
    \ might require that the user connect directly to the\n   proxy server and then\
    \ initiate the connection through a specified\n   format.\n   There are significant\
    \ security benefits which can be derived from\n   using proxy servers.  It is\
    \ possible to add access control lists to\n   protocols, requiring users or systems\
    \ to provide some level of\n   authentication before access is granted.  Smarter\
    \ proxy servers,\n   sometimes called Application Layer Gateways (ALGs), can be\
    \ written\n   which understand specific protocols and can be configured to block\n\
    \   only subsections of the protocol.  For example, an ALG for FTP can\n   tell\
    \ the difference between the \"put\" command and the \"get\" command;\n   an organization\
    \ may wish to allow users to \"get\" files from the\n   Internet, but not be able\
    \ to \"put\" internal files on a remote server.\n   By contrast, a filtering router\
    \ could either block all FTP access, or\n   none, but not a subset.\n   Proxy\
    \ servers can also be configured to encrypt data streams based on\n   a variety\
    \ of parameters.  An organization might use this feature to\n   allow encrypted\
    \ connections between two locations whose sole access\n   points are on the Internet.\n\
    \   Firewalls are typically thought of as a way to keep intruders out,\n   but\
    \ they are also often used as a way to let legitimate users into a\n   site. \
    \ There are many examples where a valid user might need to\n   regularly access\
    \ the \"home\" site while on travel to trade shows and\n   conferences, etc. \
    \ Access to the Internet is often available but may\n   be through an untrusted\
    \ machine or network.  A correctly configured\n   proxy server can allow the correct\
    \ users into the site while still\n   denying access to other users.\n   The current\
    \ best effort in firewall techniques is found using a\n   combination of a pair\
    \ of screening routers with one or more proxy\n   servers on a network between\
    \ the two routers.  This setup allows the\n   external router to block off any\
    \ attempts to use the underlying IP\n   layer to break security (IP spoofing,\
    \ source routing, packet\n   fragments), while allowing the proxy server to handle\
    \ potential\n   security holes in the higher layer protocols.  The internal router's\n\
    \   purpose is to block all traffic except to the proxy server.  If this\n   setup\
    \ is rigidly implemented, a high level of security can be\n   achieved.\n   Most\
    \ firewalls provide logging which can be tuned to make security\n   administration\
    \ of the network more convenient.  Logging may be\n   centralized and the system\
    \ may be configured to send out alerts for\n   abnormal conditions.  It is important\
    \ to regularly monitor these logs\n   for any signs of intrusions or break-in\
    \ attempts.  Since some\n   intruders will attempt to cover their tracks by editing\
    \ logs, it is\n   desirable to protect these logs.  A variety of methods is available,\n\
    \   including: write once, read many (WORM) drives; papers logs; and\n   centralized\
    \ logging via the \"syslog\" utility.  Another technique is\n   to use a \"fake\"\
    \ serial printer, but have the serial port connected to\n   an isolated machine\
    \ or PC which keeps the logs.\n   Firewalls are available in a wide range of quality\
    \ and strengths.\n   Commercial packages start at approximately $10,000US and\
    \ go up to\n   over $250,000US.  \"Home grown\" firewalls can be built for smaller\n\
    \   amounts of capital.  It should be remembered that the correct setup\n   of\
    \ a firewall (commercial or homegrown) requires a significant amount\n   of skill\
    \ and knowledge of TCP/IP.  Both types require regular\n   maintenance, installation\
    \ of software patches and updates, and\n   regular monitoring.  When budgeting\
    \ for a firewall, these additional\n   costs should be considered in addition\
    \ to the cost of the physical\n   elements of the firewall.\n   As an aside, building\
    \ a \"home grown\" firewall requires a significant\n   amount of skill and knowledge\
    \ of TCP/IP.  It should not be trivially\n   attempted because a perceived sense\
    \ of security is worse in the long\n   run than knowing that there is no security.\
    \  As with all security\n   measures, it is important to decide on the threat,\
    \ the value of the\n   assets to be protected, and the costs to implement security.\n\
    \   A final note about firewalls.  They can be a great aid when\n   implementing\
    \ security for a site and they protect against a large\n   variety of attacks.\
    \  But it is important to keep in mind that they\n   are only one part of the\
    \ solution.  They cannot protect your site\n   against all types of attack.\n"
- title: 4.  Security Services and Procedures
  contents:
  - "4.  Security Services and Procedures\n   This chapter guides the reader through\
    \ a number of topics that should\n   be addressed when securing a site.  Each\
    \ section touches on a\n   security service or capability that may be required\
    \ to protect the\n   information and systems at a site.  The topics are presented\
    \ at a\n   fairly high-level to introduce the reader to the concepts.\n   Throughout\
    \ the chapter, you will find significant mention of\n   cryptography.  It is outside\
    \ the scope of this document to delve into\n   details concerning cryptography,\
    \ but the interested reader can obtain\n   more information from books and articles\
    \ listed in the reference\n   section of this document.\n"
- title: 4.1  Authentication
  contents:
  - "4.1  Authentication\n   For many years, the prescribed method for authenticating\
    \ users has\n   been through the use of standard, reusable passwords.  Originally,\n\
    \   these passwords were used by users at terminals to authenticate\n   themselves\
    \ to a central computer.  At the time, there were no\n   networks (internally\
    \ or externally), so the risk of disclosure of the\n   clear text password was\
    \ minimal.  Today, systems are connected\n   together through local networks,\
    \ and these local networks are further\n   connected together and to the Internet.\
    \  Users are logging in from\n   all over the globe; their reusable passwords\
    \ are often transmitted\n   across those same networks in clear text, ripe for\
    \ anyone in-between\n   to capture.  And indeed, the CERT* Coordination Center\
    \ and other\n   response teams are seeing a tremendous number of incidents involving\n\
    \   packet sniffers which are capturing the clear text passwords.\n   With the\
    \ advent of newer technologies like one-time passwords (e.g.,\n   S/Key), PGP,\
    \ and token-based authentication devices, people are using\n   password-like strings\
    \ as secret tokens and pins.  If these secret\n   tokens and pins are not properly\
    \ selected and protected, the\n   authentication will be easily subverted.\n"
- title: 4.1.1  One-Time passwords
  contents:
  - "4.1.1  One-Time passwords\n   As mentioned above, given today's networked environments,\
    \ it is\n   recommended that sites concerned about the security and integrity\
    \ of\n   their systems and networks consider moving away from standard,\n   reusable\
    \ passwords.  There have been many incidents involving Trojan\n   network programs\
    \ (e.g., telnet and rlogin) and network packet\n   sniffing programs.  These programs\
    \ capture clear text\n   hostname/account name/password triplets.  Intruders can\
    \ use the\n   captured information for subsequent access to those hosts and\n\
    \   accounts.  This is possible because 1) the password is used over and\n   over\
    \ (hence the term \"reusable\"), and 2) the password passes across\n   the network\
    \ in clear text.\n   Several authentication techniques have been developed that\
    \ address\n   this problem.  Among these techniques are challenge-response\n \
    \  technologies that provide passwords that are only used once (commonly\n   called\
    \ one-time passwords). There are a number of products available\n   that sites\
    \ should consider using. The decision to use a product is\n   the responsibility\
    \ of each organization, and each organization should\n   perform its own evaluation\
    \ and selection.\n"
- title: 4.1.2  Kerberos
  contents:
  - "4.1.2  Kerberos\n   Kerberos is a distributed network security system which provides\
    \ for\n   authentication across unsecured networks.  If requested by the\n   application,\
    \ integrity and encryption can also be provided.  Kerberos\n   was originally\
    \ developed at the Massachusetts Institute of Technology\n   (MIT) in the mid\
    \ 1980s.  There are two major releases of Kerberos,\n   version 4 and 5, which\
    \ are for practical purposes, incompatible.\n   Kerberos relies on a symmetric\
    \ key database using a key distribution\n   center (KDC) which is known as the\
    \ Kerberos server.  A user or\n   service (known as \"principals\") are granted\
    \ electronic \"tickets\"\n   after properly communicating with the KDC.  These\
    \ tickets are used\n   for authentication between principals.  All tickets include\
    \ a time\n   stamp which limits the time period for which the ticket is valid.\n\
    \   Therefore, Kerberos clients and server must have a secure time\n   source,\
    \ and be able to keep time accurately.\n   The practical side of Kerberos is its\
    \ integration with the\n   application level.  Typical applications like FTP,\
    \ telnet, POP, and\n   NFS have been integrated with the Kerberos system.  There\
    \ are a\n   variety of implementations which have varying levels of integration.\n\
    \   Please see the Kerberos FAQ available at http://www.ov.com/misc/krb-\n   faq.html\
    \ for the latest information.\n"
- title: 4.1.3  Choosing and Protecting Secret Tokens and PINs
  contents:
  - "4.1.3  Choosing and Protecting Secret Tokens and PINs\n   When selecting secret\
    \ tokens, take care to choose them carefully.\n   Like the selection of passwords,\
    \ they should be robust against brute\n   force efforts to guess them.  That is,\
    \ they should not be single\n   words in any language, any common, industry, or\
    \ cultural acronyms,\n   etc.  Ideally, they will be longer rather than shorter\
    \ and consist of\n   pass phrases that combine upper and lower case character,\
    \ digits, and\n   other characters.\n   Once chosen, the protection of these secret\
    \ tokens is very important.\n   Some are used as pins to hardware devices (like\
    \ token cards) and\n   these should not be written down or placed in the same\
    \ location as\n   the device with which they are associated.  Others, such as\
    \ a secret\n   Pretty Good Privacy (PGP) key, should be protected from unauthorized\n\
    \   access.\n   One final word on this subject.  When using cryptography products,\n\
    \   like PGP, take care to determine the proper key length and ensure\n   that\
    \ your users are trained to do likewise.  As technology advances,\n   the minimum\
    \ safe key length continues to grow.  Make sure your site\n   keeps up with the\
    \ latest knowledge on the technology so that you can\n   ensure that any cryptography\
    \ in use is providing the protection you\n   believe it is.\n"
- title: 4.1.4  Password Assurance
  contents:
  - "4.1.4  Password Assurance\n   While the need to eliminate the use of standard,\
    \ reusable passwords\n   cannot be overstated, it is  recognized that some organizations\
    \ may\n   still be using them.  While it's recommended that these organizations\n\
    \   transition to the use of better technology, in the mean time, we have\n  \
    \ the following advice to help with the selection and maintenance of\n   traditional\
    \ passwords. But remember, none of these measures provides\n   protection against\
    \ disclosure due to sniffer programs.\n   (1)  The importance of robust passwords\
    \ - In many (if not most) cases\n        of system penetration, the intruder needs\
    \ to gain access to an\n        account on the system. One way that goal is typically\n\
    \        accomplished is through guessing the password of a legitimate\n     \
    \   user.  This is often accomplished by running an automated\n        password\
    \ cracking program, which utilizes a very large\n        dictionary, against the\
    \ system's password file.  The only way to\n        guard against passwords being\
    \ disclosed in this manner is\n        through the careful selection of passwords\
    \ which cannot be\n        easily guessed (i.e., combinations of numbers, letters,\
    \ and\n        punctuation characters).  Passwords should also be as long as\n\
    \        the system supports and users can tolerate.\n   (2)  Changing default\
    \ passwords - Many operating systems and\n        application programs are installed\
    \ with default accounts and\n        passwords.  These must be changed immediately\
    \ to something that\n        cannot be guessed or cracked.\n   (3)  Restricting\
    \ access to the password file - In particular, a site\n        wants to protect\
    \ the encrypted password portion of the file so\n        that would-be intruders\
    \ don't have them available for cracking.\n        One effective technique is\
    \ to use shadow passwords where the\n        password field of the standard file\
    \ contains a dummy or false\n        password.  The file containing the legitimate\
    \ passwords are\n        protected elsewhere on the system.\n   (4)  Password\
    \ aging - When and how to expire passwords is still a\n        subject of controversy\
    \ among the security community.  It is\n        generally accepted that a password\
    \ should not be maintained once\n        an account is no longer in use, but it\
    \ is hotly debated whether\n        a user should be forced to change a good password\
    \ that's in\n        active use.  The arguments for changing passwords relate\
    \ to the\n        prevention of the continued use of penetrated accounts.\n  \
    \      However, the opposition claims that frequent password changes\n       \
    \ lead to users writing down their passwords in visible areas\n        (such as\
    \ pasting them to a terminal), or to users selecting very\n        simple passwords\
    \ that are easy to guess.  It should also be\n        stated that an intruder\
    \ will probably use a captured or guessed\n        password sooner rather than\
    \ later, in which case password aging\n        provides little if any protection.\n\
    \        While there is no definitive answer to this dilemma, a password\n   \
    \     policy should directly address the issue and provide guidelines\n      \
    \  for how often a user should change the password.  Certainly, an\n        annual\
    \ change in their password is usually not difficult for\n        most users, and\
    \ you should consider requiring it.  It is\n        recommended that passwords\
    \ be changed at least whenever a\n        privileged account is compromised, there\
    \ is a critical change in\n        personnel (especially if it is an administrator!),\
    \ or when an\n        account has been compromised.  In addition, if a privileged\n\
    \        account password is compromised, all passwords on the system\n      \
    \  should be changed.\n   (5)  Password/account blocking - Some sites find it\
    \ useful to disable\n        accounts after a predefined number of failed attempts\
    \ to\n        authenticate.  If your site decides to employ this mechanism, it\n\
    \        is recommended that the mechanism not \"advertise\" itself. After\n \
    \       disabling, even if the correct password is presented, the\n        message\
    \ displayed should remain that of a failed login attempt.\n        Implementing\
    \ this mechanism will require that legitimate users\n        contact their system\
    \ administrator to request that their account\n        be reactivated.\n   (6)\
    \  A word about the finger daemon - By default, the finger daemon\n        displays\
    \ considerable system and user information. For example,\n        it can display\
    \ a list of all users currently using a system, or\n        all the contents of\
    \ a specific user's .plan file.  This\n        information can be used by would-be\
    \ intruders to identify\n        usernames and guess their passwords. It is recommended\
    \ that\n        sites consider modifying finger to restrict the information\n\
    \        displayed.\n"
- title: 4.2  Confidentiality
  contents:
  - "4.2  Confidentiality\n   There will be information assets that your site will\
    \ want to protect\n   from disclosure to unauthorized entities.  Operating systems\
    \ often\n   have built-in file protection mechanisms that allow an administrator\n\
    \   to control who on the system can access, or \"see,\" the contents of a\n \
    \  given file.  A stronger way to provide confidentiality is through\n   encryption.\
    \  Encryption is accomplished by scrambling data so that it\n   is very difficult\
    \ and time consuming for anyone other than the\n   authorized recipients or owners\
    \ to obtain the plain text.  Authorized\n   recipients and the owner of the information\
    \ will possess the\n   corresponding decryption keys that allow them to easily\
    \ unscramble\n   the text to a readable (clear text) form.  We recommend that\
    \ sites\n   use encryption to provide confidentiality and protect valuable\n \
    \  information.\n   The use of encryption is sometimes controlled by governmental\
    \ and\n   site regulations, so we encourage administrators to become informed\n\
    \   of laws or policies that regulate its use before employing it.  It is\n  \
    \ outside the scope of this document to discuss the various algorithms\n   and\
    \ programs available for this purpose, but we do caution against\n   the casual\
    \ use of the UNIX crypt program as it has been found to be\n   easily broken.\
    \  We also encourage everyone to take time to understand\n   the strength of the\
    \ encryption in any given algorithm/product before\n   using it.  Most well-known\
    \ products are well-documented in the\n   literature, so this should be a fairly\
    \ easy task.\n"
- title: 4.3  Integrity
  contents:
  - "4.3  Integrity\n   As an administrator, you will want to make sure that information\n\
    \   (e.g., operating system files, company data, etc.) has not been\n   altered\
    \ in an unauthorized fashion.  This means you will want to\n   provide some assurance\
    \ as to the integrity of the information on your\n   systems.  One way to provide\
    \ this is to produce a checksum of the\n   unaltered file, store that checksum\
    \ offline, and periodically (or\n   when desired) check to make sure the checksum\
    \ of the online file\n   hasn't changed (which would indicate the data has been\
    \ modified).\n   Some operating systems come with checksumming programs, such\
    \ as the\n   UNIX sum program.  However, these may not provide the protection\
    \ you\n   actually need.  Files can be modified in such a way as to preserve\n\
    \   the result of the UNIX sum program!  Therefore, we suggest that you\n   use\
    \ a cryptographically strong program, such as the message digesting\n   program\
    \ MD5 [ref], to produce the checksums you will be using to\n   assure integrity.\n\
    \   There are other applications where integrity will need to be assured,\n  \
    \ such as when transmitting an email message between two parties. There\n   are\
    \ products available that can provide this capability.  Once you\n   identify\
    \ that this is a capability you need, you can go about\n   identifying technologies\
    \ that will provide it.\n"
- title: 4.4  Authorization
  contents:
  - "4.4  Authorization\n   Authorization refers to the process of granting privileges\
    \ to\n   processes and, ultimately, users.  This differs from authentication\n\
    \   in that authentication is the process used to identify a user.  Once\n   identified\
    \ (reliably), the privileges, rights, property, and\n   permissible actions of\
    \ the user are determined by authorization.\n   Explicitly listing the authorized\
    \ activities of each user (and user\n   process) with respect to all resources\
    \ (objects) is impossible in a\n   reasonable system.  In a real system certain\
    \ techniques are used to\n   simplify the process of granting and checking authorization(s).\n\
    \   One approach, popularized in UNIX systems, is to assign to each\n   object\
    \ three classes of user: owner, group and world.  The owner is\n   either the\
    \ creator of the object or the user assigned as owner by the\n   super-user. \
    \ The owner permissions (read, write and execute) apply\n   only to the owner.\
    \  A group is a collection of users which share\n   access rights to an object.\
    \  The group permissions (read, write and\n   execute) apply to all users in the\
    \ group (except the owner).  The\n   world refers to everybody else with access\
    \ to the system.  The world\n   permissions (read, write and execute) apply to\
    \ all users (except the\n   owner and members of the group).\n   Another approach\
    \ is to attach to an object a list which explicitly\n   contains the identity\
    \ of all permitted users (or groups).  This is an\n   Access Control List (ACL).\
    \  The advantage of ACLs are that they are\n   easily maintained (one central\
    \ list per object) and it's very easy to\n   visually check who has access to\
    \ what. The disadvantages are the\n   extra resources required to store such lists,\
    \ as well as the vast\n   number of such lists required for large systems.\n"
- title: 4.5  Access
  contents:
  - '4.5  Access

    '
- title: 4.5.1  Physical Access
  contents:
  - "4.5.1  Physical Access\n   Restrict physical access to hosts, allowing access\
    \ only to those\n   people who are supposed to use the hosts.  Hosts include \"\
    trusted\"\n   terminals (i.e., terminals which allow unauthenticated use such\
    \ as\n   system consoles, operator terminals and terminals dedicated to\n   special\
    \ tasks), and individual microcomputers and workstations,\n   especially those\
    \ connected to your network.  Make sure people's work\n   areas mesh well with\
    \ access restrictions; otherwise they will find\n   ways to circumvent your physical\
    \ security (e.g., jamming doors open).\n   Keep original and backup copies of\
    \ data and programs safe.  Apart\n   from keeping them in good condition for backup\
    \ purposes, they must be\n   protected from theft.  It is important to keep backups\
    \ in a separate\n   location from the originals, not only for damage considerations,\
    \ but\n   also to guard against thefts.\n   Portable hosts are a particular risk.\
    \  Make sure it won't cause\n   problems if one of your staff's portable computer\
    \ is stolen.\n   Consider developing guidelines for the kinds of data that should\
    \ be\n   allowed to reside on the disks of portable computers as well as how\n\
    \   the data should be protected (e.g., encryption) when it is on a\n   portable\
    \ computer.\n   Other areas where physical access should be restricted is the\
    \ wiring\n   closets and important network elements like file servers, name server\n\
    \   hosts, and routers.\n"
- title: 4.5.2  Walk-up Network Connections
  contents:
  - "4.5.2  Walk-up Network Connections\n   By \"walk-up\" connections, we mean network\
    \ connection points located\n   to provide a convenient way for users to connect\
    \ a portable host to\n   your network.\n   Consider whether you need to provide\
    \ this service, bearing in mind\n   that it allows any user to attach an unauthorized\
    \ host to your\n   network.  This increases the risk of attacks via techniques\
    \ such as\n   IP address spoofing, packet sniffing, etc.  Users and site management\n\
    \   must appreciate the risks involved.  If you decide to provide walk-up\n  \
    \ connections, plan the service carefully and define precisely where\n   you will\
    \ provide it so that you can ensure the necessary physical\n   access security.\n\
    \   A walk-up host should be authenticated before its user is permitted\n   to\
    \ access resources on your network.  As an alternative, it may be\n   possible\
    \ to control physical access. For example, if the service is\n   to be used by\
    \ students, you might only provide walk-up connection\n   sockets in student laboratories.\n\
    \   If you are providing walk-up access for visitors to connect back to\n   their\
    \ home networks (e.g., to read e-mail, etc.) in your facility,\n   consider using\
    \ a separate subnet that has no connectivity to the\n   internal network.\n  \
    \ Keep an eye on any area that contains unmonitored access to the\n   network,\
    \ such as vacant offices.  It may be sensible to disconnect\n   such areas at\
    \ the wiring closet, and consider using secure hubs and\n   monitoring attempts\
    \ to connect unauthorized hosts.\n"
- title: 4.5.3  Other Network Technologies
  contents:
  - "4.5.3  Other Network Technologies\n   Technologies considered here include X.25,\
    \ ISDN, SMDS, DDS and Frame\n   Relay.  All are provided via physical links which\
    \ go through\n   telephone exchanges, providing the potential for them to be diverted.\n\
    \   Crackers are certainly interested in telephone switches as well as in\n  \
    \ data networks!\n   With switched technologies, use Permanent Virtual Circuits\
    \ or Closed\n   User Groups whenever this is possible.  Technologies which provide\n\
    \   authentication and/or encryption (such as IPv6) are evolving rapidly;\n  \
    \ consider using them on links where security is important.\n"
- title: 4.5.4  Modems
  contents:
  - '4.5.4  Modems

    '
- title: 4.5.4.1  Modem Lines Must Be Managed
  contents:
  - "4.5.4.1  Modem Lines Must Be Managed\n   Although they provide convenient access\
    \ to a site for its users, they\n   can also provide an effective detour around\
    \ the site's firewalls.\n   For this reason it is essential to maintain proper\
    \ control of modems.\n   Don't allow users to install a modem line without proper\n\
    \   authorization.  This includes temporary installations (e.g., plugging\n  \
    \ a modem into a facsimile or telephone line overnight).\n   Maintain a register\
    \ of all your modem lines and keep your register up\n   to date.  Conduct regular\
    \ (ideally automated) site checks for\n   unauthorized modems.\n"
- title: 4.5.4.2  Dial-in Users Must Be Authenticated
  contents:
  - "4.5.4.2  Dial-in Users Must Be Authenticated\n   A username and password check\
    \ should be completed before a user can\n   access anything on your network. \
    \ Normal password security\n   considerations are particularly important (see\
    \ section 4.1.1).\n   Remember that telephone lines can be tapped, and that it\
    \ is quite\n   easy to intercept messages to cellular phones.  Modern high-speed\n\
    \   modems use more sophisticated modulation techniques, which makes them\n  \
    \ somewhat more difficult to monitor, but it is prudent to assume that\n   hackers\
    \ know how to eavesdrop on your lines.  For this reason, you\n   should use one-time\
    \ passwords if at all possible.\n   It is helpful to have a single dial-in point\
    \ (e.g., a single large\n   modem pool) so that all users are authenticated in\
    \ the same way.\n   Users will occasionally mis-type a password.  Set a short\
    \ delay - say\n   two seconds - after the first and second failed logins, and\
    \ force a\n   disconnect after the third.  This will slow down automated password\n\
    \   attacks.  Don't tell the user whether the username, the password, or\n   both,\
    \ were incorrect.\n"
- title: 4.5.4.3  Call-back Capability
  contents:
  - "4.5.4.3  Call-back Capability\n   Some dial-in servers offer call-back facilities\
    \ (i.e., the user dials\n   in and is authenticated, then the system disconnects\
    \ the call and\n   calls back on a specified number).  Call-back is useful since\
    \ if\n   someone were to guess a username and password, they are disconnected,\n\
    \   and the system then calls back the actual user whose password was\n   cracked;\
    \ random calls from a server are suspicious, at best.  This\n   does mean users\
    \ may only log in from one location (where the server\n   is configured to dial\
    \ them back), and of course there may be phone\n   charges associated with there\
    \ call-back location.\n   This feature should be used with caution; it can easily\
    \ be bypassed.\n   At a minimum, make sure that the return call is never made\
    \ from the\n   same modem as the incoming one.  Overall, although call-back can\n\
    \   improve modem security, you should not depend on it alone.\n"
- title: 4.5.4.4  All Logins Should Be Logged
  contents:
  - "4.5.4.4  All Logins Should Be Logged\n   All logins, whether successful or unsuccessful\
    \ should be logged.\n   However, do not keep correct passwords in the log. Rather,\
    \ log them\n   simply as a successful login attempt.  Since most bad passwords\
    \ are\n   mistyped by authorized users, they only vary by a single character\n\
    \   from the actual password.  Therefore if you can't keep such a log\n   secure,\
    \ don't log it at all.\n   If Calling Line Identification is available, take advantage\
    \ of it by\n   recording the calling number for each login attempt.  Be sensitive\
    \ to\n   the privacy issues raised by Calling Line Identification.  Also be\n\
    \   aware that Calling Line Identification is not to be trusted (since\n   intruders\
    \ have been known to break into phone switches and forward\n   phone numbers or\
    \ make other changes); use the data for informational\n   purposes only, not for\
    \ authentication.\n"
- title: 4.5.4.5  Choose Your Opening Banner Carefully
  contents:
  - "4.5.4.5  Choose Your Opening Banner Carefully\n   Many sites use a system default\
    \ contained in a message of the day\n   file for their opening banner. Unfortunately,\
    \ this often includes the\n   type of host hardware or operating system present\
    \ on the host.  This\n   can provide valuable information to a would-be intruder.\
    \ Instead,\n   each site should create its own specific login banner, taking care\
    \ to\n   only include necessary information.\n   Display a short banner, but don't\
    \ offer an \"inviting\" name (e.g.,\n   University of XYZ, Student Records System).\
    \  Instead, give your site\n   name, a short warning that sessions may be monitored,\
    \ and a\n   username/password prompt.  Verify possible legal issues related to\n\
    \   the text you put into the banner.\n   For high-security applications, consider\
    \ using a \"blind\" password\n   (i.e., give no response to an incoming call until\
    \ the user has typed\n   in a password).  This effectively simulates a dead modem.\n"
- title: 4.5.4.6  Dial-out Authentication
  contents:
  - "4.5.4.6  Dial-out Authentication\n   Dial-out users should also be authenticated,\
    \ particularly since your\n   site will have to pay their telephone charges.\n\
    \   Never allow dial-out from an unauthenticated dial-in call, and\n   consider\
    \ whether you will allow it from an authenticated one.  The\n   goal here is to\
    \ prevent callers using your modem pool as part of a\n   chain of logins.  This\
    \ can be hard to detect, particularly if a\n   hacker sets up a path through several\
    \ hosts on your site.\n   At a minimum, don't allow the same modems and phone\
    \ lines to be used\n   for both dial-in and dial-out.  This can be implemented\
    \ easily if you\n   run separate dial-in and dial-out modem pools.\n"
- title: 4.5.4.7  Make Your Modem Programming as "Bullet-proof" as Possible
  contents:
  - "4.5.4.7  Make Your Modem Programming as \"Bullet-proof\" as Possible\n   Be sure\
    \ modems can't be reprogrammed while they're in service.  At a\n   minimum, make\
    \ sure that three plus signs won't put your dial-in\n   modems into command mode!\n\
    \   Program your modems to reset to your standard configuration at the\n   start\
    \ of each new call.  Failing this, make them reset at the end of\n   each call.\
    \  This precaution will protect you against accidental\n   reprogramming of your\
    \ modems. Resetting at both the end and the\n   beginning of each call will assure\
    \ an even higher level of confidence\n   that a new caller will not inherit a\
    \ previous caller's session.\n   Check that your modems terminate calls cleanly.\
    \  When a user logs out\n   from an access server, verify that the server hangs\
    \ up the phone line\n   properly.  It is equally important that the server forces\
    \ logouts\n   from whatever sessions were active if the user hangs up unexpectedly.\n"
- title: 4.6  Auditing
  contents:
  - "4.6  Auditing\n   This section covers the procedures for collecting data generated\
    \ by\n   network activity, which may be useful in analyzing the security of a\n\
    \   network and responding to security incidents.\n"
- title: 4.6.1  What to Collect
  contents:
  - "4.6.1  What to Collect\n   Audit data should include any attempt to achieve a\
    \ different security\n   level by any person, process, or other entity in the\
    \ network.  This\n   includes login and logout, super user access (or the non-UNIX\n\
    \   equivalent), ticket generation (for Kerberos, for example), and any\n   other\
    \ change of access or status.  It is especially important to note\n   \"anonymous\"\
    \ or \"guest\" access to public servers.\n   The actual data to collect will differ\
    \ for different sites and for\n   different types of access changes within a site.\
    \  In general, the\n   information you want to collect includes: username and\
    \ hostname, for\n   login and logout; previous and new access rights, for a change\
    \ of\n   access rights; and a timestamp.  Of course, there is much more\n   information\
    \ which might be gathered, depending on what the system\n   makes available and\
    \ how much space is available to store that\n   information.\n   One very important\
    \ note: do not gather passwords.  This creates an\n   enormous potential security\
    \ breach if the audit records should be\n   improperly accessed.  Do not gather\
    \ incorrect passwords either, as\n   they often differ from valid passwords by\
    \ only a single character or\n   transposition.\n"
- title: 4.6.2  Collection Process
  contents:
  - "4.6.2  Collection Process\n   The collection process should be enacted by the\
    \ host or resource\n   being accessed.  Depending on the importance of the data\
    \ and the need\n   to have it local in instances in which services are being denied,\n\
    \   data could be kept local to the resource until needed or be\n   transmitted\
    \ to storage after each event.\n   There are basically three ways to store audit\
    \ records: in a\n   read/write file on a host, on a write-once/read-many device\
    \ (e.g., a\n   CD-ROM or a specially configured tape drive), or on a write-only\n\
    \   device (e.g., a line printer).  Each method has advantages and\n   disadvantages.\n\
    \   File system logging is the least resource intensive of the three\n   methods\
    \ and the easiest to configure.  It allows instant access to\n   the records for\
    \ analysis, which may be important if an attack is in\n   progress.  File system\
    \ logging is also the least reliable method.  If\n   the logging host has been\
    \ compromised, the file system is usually the\n   first thing to go; an intruder\
    \ could easily cover up traces of the\n   intrusion.\n   Collecting audit data\
    \ on a write-once device is slightly more effort\n   to configure than a simple\
    \ file, but it has the significant advantage\n   of greatly increased security\
    \ because an intruder could not alter the\n   data showing that an intrusion has\
    \ occurred.  The disadvantage of\n   this method is the need to maintain a supply\
    \ of storage media and the\n   cost of that media.  Also, the data may not be\
    \ instantly available.\n   Line printer logging is useful in system where permanent\
    \ and\n   immediate logs are required.  A real time system is an example of\n\
    \   this, where the exact point of a failure or attack must be recorded.\n   A\
    \ laser printer, or other device which buffers data (e.g., a print\n   server),\
    \ may suffer from lost data if buffers contain the needed data\n   at a critical\
    \ instant.  The disadvantage of, literally, \"paper\n   trails\" is the need to\
    \ keep the printer fed and the need to scan\n   records by hand.  There is also\
    \ the issue of where to store the,\n   potentially, enormous volume of paper which\
    \ may be generated.\n   For each of the logging methods described, there is also\
    \ the issue of\n   securing the path between the device generating the log and\
    \ actual\n   logging device (i.e., the file server, tape/CD-ROM drive, printer).\n\
    \   If that path is compromised, logging can be stopped or spoofed or\n   both.\
    \  In an ideal world, the logging device would be directly\n   attached by a single,\
    \ simple, point-to-point cable.  Since that is\n   usually impractical, the path\
    \ should pass through the minimum number\n   of networks and routers.  Even if\
    \ logs can be blocked, spoofing can\n   be prevented with cryptographic checksums\
    \ (it probably isn't\n   necessary to encrypt the logs because they should not\
    \ contain\n   sensitive information in the first place).\n"
- title: 4.6.3  Collection Load
  contents:
  - "4.6.3  Collection Load\n   Collecting audit data may result in a rapid accumulation\
    \ of bytes so\n   storage availability for this information must be considered\
    \ in\n   advance.  There are a few ways to reduce the required storage space.\n\
    \   First, data can be compressed, using one of many methods. Or, the\n   required\
    \ space can be minimized by keeping data for a shorter period\n   of time with\
    \ only summaries of that data kept in long-term archives.\n   One major drawback\
    \ to the latter method involves incident response.\n   Often, an incident has\
    \ been ongoing for some period of time when a\n   site notices it and begins to\
    \ investigate. At that point in time,\n   it's very helpful to have detailed audit\
    \ logs available. If these are\n   just summaries, there may not be sufficient\
    \ detail to fully handle\n   the incident.\n"
- title: 4.6.4  Handling and Preserving Audit Data
  contents:
  - "4.6.4  Handling and Preserving Audit Data\n   Audit data should be some of the\
    \ most carefully secured data at the\n   site and in the backups.  If an intruder\
    \ were to gain access to audit\n   logs, the systems themselves, in addition to\
    \ the data, would be at\n   risk.\n   Audit data may also become key to the investigation,\
    \ apprehension,\n   and prosecution of the perpetrator of an incident.  For this\
    \ reason,\n   it is advisable to seek the advice of legal council when deciding\
    \ how\n   audit data should be treated.  This should happen before an incident\n\
    \   occurs.\n   If a data handling plan is not adequately defined prior to an\n\
    \   incident, it may mean that there is no recourse in the aftermath of\n   an\
    \ event, and it may create liability resulting from improper\n   treatment of\
    \ the data.\n"
- title: 4.6.5  Legal Considerations
  contents:
  - "4.6.5  Legal Considerations\n   Due to the content of audit data, there are a\
    \ number of legal\n   questions that arise which might need to be addressed by\
    \ your legal\n   counsel. If you collect and save audit data, you need to be prepared\n\
    \   for consequences resulting both from its existence and its content.\n   One\
    \ area concerns the privacy of individuals.  In certain instances,\n   audit data\
    \ may contain personal information.  Searching through the\n   data, even for\
    \ a routine check of the system's security, could\n   represent an invasion of\
    \ privacy.\n   A second area of concern involves knowledge of intrusive behavior\n\
    \   originating from your site.  If an organization keeps audit data, is\n   it\
    \ responsible for examining it to search for incidents?  If a host\n   in one\
    \ organization is used as a launching point for an attack\n   against another\
    \ organization, can the second organization use the\n   audit data of the first\
    \ organization to prove negligence on the part\n   of that organization?\n   The\
    \ above examples are meant to be comprehensive, but should motivate\n   your organization\
    \ to consider the legal issues involved with audit\n   data.\n"
- title: 4.7  Securing Backups
  contents:
  - "4.7  Securing Backups\n   The procedure of creating backups is a classic part\
    \ of operating a\n   computer system.  Within the context of this document, backups\
    \ are\n   addressed as part of the overall security plan of a site.  There are\n\
    \   several aspects to backups that are important within this context:\n   (1)\
    \  Make sure your site is creating backups\n   (2)  Make sure your site is using\
    \ offsite storage for backups. The\n        storage site should be carefully selected\
    \ for both its security\n        and its availability.\n   (3)  Consider encrypting\
    \ your backups to provide additional protection\n        of the information once\
    \ it is off-site.  However, be aware that\n        you will need a good key management\
    \ scheme so that you'll be\n        able to recover data at any point in the future.\
    \  Also, make\n        sure you will have access to the necessary decryption programs\n\
    \        at such time in the future as you need to perform the\n        decryption.\n\
    \   (4)  Don't always assume that your backups are good.  There have been\n  \
    \      many instances of computer security incidents that have gone on\n     \
    \   for long periods of time before a site has noticed the incident.\n       \
    \ In such cases, backups of the affected systems are also tainted.\n   (5)  Periodically\
    \ verify the correctness and completeness of your\n        backups.\n"
- title: 5.  Security Incident Handling
  contents:
  - "5.  Security Incident Handling\n   This chapter of the document will supply guidance\
    \ to be used before,\n   during, and after a computer security incident occurs\
    \ on a host,\n   network, site, or multi-site environment.  The operative philosophy\n\
    \   in the event of a breach of computer security is to react according\n   to\
    \ a plan.  This is true whether the breach is the result of an\n   external intruder\
    \ attack, unintentional damage, a student testing\n   some new program to exploit\
    \ a software vulnerability, or a\n   disgruntled employee.  Each of the possible\
    \ types of events, such as\n   those just listed, should be addressed in advance\
    \ by adequate\n   contingency plans.\n   Traditional computer security, while\
    \ quite important in the overall\n   site security plan, usually pays little attention\
    \ to how to actually\n   handle an attack once one occurs.  The result is that\
    \ when an attack\n   is in progress, many decisions are made in haste and can\
    \ be damaging\n   to tracking down the source of the incident, collecting evidence\
    \ to\n   be used in prosecution efforts, preparing for the recovery of the\n \
    \  system, and protecting the valuable data contained on the system.\n   One of\
    \ the most important, but often overlooked, benefits for\n   efficient incident\
    \ handling is an economic one.  Having both\n   technical and managerial personnel\
    \ respond to an incident requires\n   considerable resources.  If trained to handle\
    \ incidents efficiently,\n   less staff time is required when one occurs.\n  \
    \ Due to the world-wide network most incidents are not restricted to a\n   single\
    \ site.  Operating systems vulnerabilities apply (in some cases)\n   to several\
    \ millions of systems, and many vulnerabilities are\n   exploited within the network\
    \ itself.  Therefore, it is vital that all\n   sites with involved parties be\
    \ informed as soon as possible.\n   Another benefit is related to public relations.\
    \  News about computer\n   security incidents tends to be damaging to an organization's\
    \ stature\n   among current or potential clients.  Efficient incident handling\n\
    \   minimizes the potential for negative exposure.\n   A final benefit of efficient\
    \ incident handling is related to legal\n   issues.  It is possible that in the\
    \ near future organizations may be\n   held responsible because one of their nodes\
    \ was used to launch a\n   network attack.   In a similar vein, people who develop\
    \ patches or\n   workarounds may be sued if the patches or workarounds are\n \
    \  ineffective, resulting in compromise of the systems, or, if the\n   patches\
    \ or workarounds themselves damage systems.  Knowing about\n   operating system\
    \ vulnerabilities and patterns of attacks, and then\n   taking appropriate measures\
    \ to counter these potential threats, is\n   critical to circumventing possible\
    \ legal problems.\n   The sections in this chapter provide an outline and starting\
    \ point\n   for creating your site's policy for handling security incidents. \
    \ The\n   sections are:\n   (1)  Preparing and planning (what are the goals and\
    \ objectives in\n        handling an incident).\n   (2)  Notification (who should\
    \ be contacted in the case of an\n        incident).\n          - Local managers\
    \ and personnel\n          - Law enforcement and investigative agencies\n    \
    \      - Computer security incidents handling teams\n          - Affected and\
    \ involved sites\n          - Internal communications\n          - Public relations\
    \ and press releases\n   (3)  Identifying an incident (is it an incident and how\
    \ serious is\n        it).\n   (4)  Handling (what should be done when an incident\
    \ occurs).\n          - Notification (who should be notified about the incident)\n\
    \          - Protecting evidence and activity logs (what records should be\n \
    \           kept from before, during, and after the incident)\n          - Containment\
    \ (how can the damage be limited)\n          - Eradication (how to eliminate the\
    \ reasons for the incident)\n          - Recovery (how to reestablish service\
    \ and systems)\n          - Follow Up (what actions should be taken after the\
    \ incident)\n   (5)  Aftermath (what are the implications of past incidents).\n\
    \   (6)  Administrative response to incidents.\n   The remainder of this chapter\
    \ will detail the issues involved in each\n   of the important topics listed above,\
    \ and provide some guidance as to\n   what should be included in a site policy\
    \ for handling incidents.\n"
- title: 5.1  Preparing and Planning for Incident Handling
  contents:
  - "5.1  Preparing and Planning for Incident Handling\n   Part of handling an incident\
    \ is being prepared to respond to an\n   incident before the incident occurs in\
    \ the first place.  This\n   includes establishing a suitable level of protections\
    \ as explained in\n   the preceding chapters.  Doing this should help your site\
    \ prevent\n   incidents as well as limit potential damage resulting from them\
    \ when\n   they do occur.  Protection also includes preparing incident handling\n\
    \   guidelines as part of a contingency plan for your organization or\n   site.\
    \  Having written plans eliminates much of the ambiguity which\n   occurs during\
    \ an incident, and will lead to a more appropriate and\n   thorough set of responses.\
    \  It is vitally important to test the\n   proposed plan before an incident occurs\
    \ through \"dry runs\".  A team\n   might even consider hiring a tiger team to\
    \ act in parallel with the\n   dry run.  (Note: a tiger team is a team of specialists\
    \ that try to\n   penetrate the security of a system.)\n   Learning to respond\
    \ efficiently to an incident is important for a\n   number of reasons:\n   (1)\
    \  Protecting the assets which could be compromised\n   (2)  Protecting resources\
    \ which could be utilized more\n        profitably if an incident did not require\
    \ their services\n   (3)  Complying with (government or other) regulations\n \
    \  (4)  Preventing the use of your systems in attacks against other\n        systems\
    \ (which could cause you to incur legal liability)\n   (5)  Minimizing the potential\
    \ for negative exposure\n   As in any set of pre-planned procedures, attention\
    \ must be paid to a\n   set of goals for handling an incident.  These goals will\
    \ be\n   prioritized differently depending on the site.  A specific set of\n \
    \  objectives can be identified for dealing with incidents:\n   (1)  Figure out\
    \ how it happened.\n   (2)  Find out how to avoid further exploitation of the\
    \ same\n          vulnerability.\n   (3)  Avoid escalation and further incidents.\n\
    \   (4)  Assess the impact and damage of the incident.\n   (5)  Recover from the\
    \ incident.\n   (6)  Update policies and procedures as needed.\n   (7)  Find out\
    \ who did it (if appropriate and possible).\n   Due to the nature of the incident,\
    \ there might be a conflict between\n   analyzing the original source of a problem\
    \ and restoring systems and\n   services.  Overall goals (like assuring the integrity\
    \ of critical\n   systems) might be the reason for not analyzing an incident.\
    \  Of\n   course, this is an important management decision; but all involved\n\
    \   parties must be aware that without analysis the same incident may\n   happen\
    \ again.\n   It is also important to prioritize the actions to be taken during\
    \ an\n   incident well in advance of the time an incident occurs.  Sometimes\n\
    \   an incident may be so complex that it is impossible to do everything\n   at\
    \ once to respond to it; priorities are essential.  Although\n   priorities will\
    \ vary from institution to institution, the following\n   suggested priorities\
    \ may serve as a starting point for defining your\n   organization's response:\n\
    \   (1)  Priority one -- protect human life and people's\n        safety; human\
    \ life always has precedence over all\n        other considerations.\n   (2) \
    \ Priority two -- protect classified and/or sensitive\n        data.  Prevent\
    \ exploitation of classified and/or\n        sensitive systems, networks or sites.\
    \  Inform affected\n        classified and/or sensitive systems, networks or sites\n\
    \        about already occurred penetrations.\n        (Be aware of regulations\
    \ by your site or by government)\n   (3)  Priority three -- protect other data,\
    \ including\n        proprietary, scientific, managerial and other data,\n   \
    \     because loss of data is costly in terms of resources.\n        Prevent exploitations\
    \ of other systems, networks or\n        sites and inform already affected systems,\
    \ networks or\n        sites about successful penetrations.\n   (4)  Priority\
    \ four -- prevent damage to systems (e.g., loss\n        or alteration of system\
    \ files, damage to disk drives,\n        etc.).  Damage to systems can result\
    \ in costly down\n        time and recovery.\n   (5)  Priority five -- minimize\
    \ disruption of computing\n        resources (including processes).  It is better\
    \ in many\n        cases to shut a system down or disconnect from a network\n\
    \        than to risk damage to data or systems. Sites will have\n        to evaluate\
    \ the trade-offs between shutting down and\n        disconnecting, and staying\
    \ up. There may be service\n        agreements in place that may require keeping\
    \ systems\n        up even in light of further damage occurring. However,\n  \
    \      the damage and scope of an incident may be so extensive\n        that service\
    \ agreements may have to be over-ridden.\n   An important implication for defining\
    \ priorities is that once human\n   life and national security considerations\
    \ have been addressed, it is\n   generally more important to save data than system\
    \ software and\n   hardware.  Although it is undesirable to have any damage or\
    \ loss\n   during an incident, systems can be replaced. However, the loss or\n\
    \   compromise of data (especially classified or proprietary data) is\n   usually\
    \ not an acceptable outcome under any circumstances.\n   Another important concern\
    \ is the effect on others, beyond the systems\n   and networks where the incident\
    \ occurs.  Within the limits imposed by\n   government regulations it is always\
    \ important to inform affected\n   parties as soon as possible.  Due to the legal\
    \ implications of this\n   topic, it should be included in the planned procedures\
    \ to avoid\n   further delays and uncertainties for the administrators.\n   Any\
    \ plan for responding to security incidents should be guided by\n   local policies\
    \ and regulations.  Government and private sites that\n   deal with classified\
    \ material have specific rules that they must\n   follow.\n   The policies chosen\
    \ by your site on how it reacts to incidents will\n   shape your response.  For\
    \ example, it may make little sense to create\n   mechanisms to monitor and trace\
    \ intruders if your site does not plan\n   to take action against the intruders\
    \ if they are caught.  Other\n   organizations may have policies that affect your\
    \ plans.  Telephone\n   companies often release information about telephone traces\
    \ only to\n   law enforcement agencies.\n   Handling incidents can be tedious\
    \ and require any number of routine\n   tasks that could be handled by support\
    \ personnel. To free the\n   technical staff it may be helpful to identify support\
    \ staff who will\n   help with tasks like: photocopying, fax'ing, etc.\n"
- title: 5.2  Notification and Points of Contact
  contents:
  - "5.2  Notification and Points of Contact\n   It is important to establish contacts\
    \ with various personnel before a\n   real incident occurs.  Many times, incidents\
    \ are not real\n   emergencies. Indeed, often you will be able to handle the activities\n\
    \   internally. However, there will also be many times when others\n   outside\
    \ your immediate department will need to be included in the\n   incident handling.\
    \  These additional contacts include local managers\n   and system administrators,\
    \ administrative contacts for other sites on\n   the Internet, and various investigative\
    \ organizations.  Getting to\n   know these contacts before incidents occurs will\
    \ help to make your\n   incident handling process more efficient.\n   For each\
    \ type of communication contact, specific \"Points of Contact\"\n   (POC) should\
    \ be defined.  These may be technical or administrative in\n   nature and may\
    \ include legal or investigative agencies as well as\n   service providers and\
    \ vendors.  When establishing these contact, it\n   is important to decide how\
    \ much information will be shared with each\n   class of contact. It is especially\
    \ important to define, ahead of\n   time, what information will be shared with\
    \ the users at a site, with\n   the public (including the press), and with other\
    \ sites.\n   Settling these issues are especially important for the local person\n\
    \   responsible for handling the incident, since that is the person\n   responsible\
    \ for the actual notification of others.  A list of\n   contacts in each of these\
    \ categories is an important time saver for\n   this person during an incident.\
    \  It can be quite difficult to find an\n   appropriate person during an incident\
    \ when many urgent events are\n   ongoing.  It is strongly recommended that all\
    \ relevant telephone\n   numbers (also electronic mail addresses and fax numbers)\
    \ be included\n   in the site security policy.  The names and contact information\
    \ of\n   all individuals who will be directly involved in the handling of an\n\
    \   incident should be placed at the top of this list.\n"
- title: 5.2.1  Local Managers and Personnel
  contents:
  - "5.2.1  Local Managers and Personnel\n   When an incident is under way, a major\
    \ issue is deciding who is in\n   charge of coordinating the activity of the multitude\
    \ of players.  A\n   major mistake that can be made is to have a number of people\
    \ who are\n   each working independently, but are not working together.  This\
    \ will\n   only add to the confusion of the event and will probably lead to\n\
    \   wasted or ineffective effort.\n   The single POC may or may not be the person\
    \ responsible for handling\n   the incident.  There are two distinct roles to\
    \ fill when deciding who\n   shall be the POC and who will be the person in charge\
    \ of the\n   incident.  The person in charge of the incident will make decisions\n\
    \   as to the interpretation of policy applied to the event.  In\n   contrast,\
    \ the POC must coordinate the effort of all the parties\n   involved with handling\
    \ the event.\n   The POC must be a person with the technical expertise to successfully\n\
    \   coordinate the efforts of the system managers and users involved in\n   monitoring\
    \ and reacting to the attack. Care should be taken when\n   identifying who this\
    \ person will be.  It should not necessarily be\n   the same person who has administrative\
    \ responsibility for the\n   compromised systems since often such administrators\
    \ have knowledge\n   only sufficient for the day to day use of the computers,\
    \ and lack in\n   depth technical expertise.\n   Another important function of\
    \ the POC is to maintain contact with law\n   enforcement and other external agencies\
    \ to assure that multi-agency\n   involvement occurs.  The level of involvement\
    \ will be determined by\n   management decisions as well as legal constraints.\n\
    \   A single POC should also be the single person in charge of collecting\n  \
    \ evidence, since as a rule of thumb, the more people that touch a\n   potential\
    \ piece of evidence, the greater the possibility that it will\n   be inadmissible\
    \ in court. To ensure that evidence will be acceptable\n   to the legal community,\
    \ collecting evidence should be done following\n   predefined procedures in accordance\
    \ with local laws and legal\n   regulations.\n   One of the most critical tasks\
    \ for the POC is the coordination of all\n   relevant processes.  Responsibilities\
    \ may be distributed over the\n   whole site, involving multiple independent departments\
    \ or groups.\n   This will require a  well coordinated effort in order to achieve\n\
    \   overall success.  The situation becomes even more complex if multiple\n  \
    \ sites are involved.  When this happens, rarely will a single POC at\n   one\
    \ site be able to adequately coordinate the handling of the entire\n   incident.\
    \  Instead, appropriate incident response teams should be\n   involved.\n   The\
    \ incident handling process should provide some escalation\n   mechanisms.  In\
    \ order to define such a mechanism, sites will need to\n   create an internal\
    \ classification scheme for incidents. Associated\n   with each level of incident\
    \ will be the appropriate POC and\n   procedures.  As an incident is escalated,\
    \ there may be a change in\n   the POC which will need to be communicated to all\
    \ others involved in\n   handling the incident. When a change in the POC occurs,\
    \ old POC\n   should brief the new POC in all background information.\n   Lastly,\
    \ users must know how to report suspected incidents. Sites\n   should establish\
    \ reporting procedures that will work both during and\n   outside normal working\
    \ hours. Help desks are often used to receive\n   these reports during normal\
    \ working hours, while beepers and\n   telephones can be used for out of hours\
    \ reporting.\n"
- title: 5.2.2  Law Enforcement and Investigative Agencies
  contents:
  - "5.2.2  Law Enforcement and Investigative Agencies\n   In the event of an incident\
    \ that has legal consequences, it is\n   important to establish contact with investigative\
    \ agencies (e.g, the\n   FBI and Secret Service in the U.S.) as soon as possible.\
    \  Local law\n   enforcement, local security offices, and campus police departments\n\
    \   should also be informed as appropriate.   This section describes many\n  \
    \ of the issues that will be confronted, but it is acknowledged that\n   each\
    \ organization will have its own local and governmental laws and\n   regulations\
    \ that will impact how they interact with law enforcement\n   and investigative\
    \ agencies. The most important point to make is that\n   each site needs to work\
    \ through these issues.\n   A primary reason for determining these point of contact\
    \ well in\n   advance of an incident is that once a major attack is in progress,\n\
    \   there is little time to call these agencies to determine exactly who\n   the\
    \ correct point of contact is.  Another reason is that it is\n   important to\
    \ cooperate with these agencies in a manner that will\n   foster a good working\
    \ relationship, and that will be in accordance\n   with the working procedures\
    \ of these agencies.  Knowing the working\n   procedures in advance, and the expectations\
    \ of your point of contact\n   is a big step in this direction.  For example,\
    \ it is important to\n   gather evidence that will be admissible in any subsequent\
    \ legal\n   proceedings, and this will require prior knowledge of how to gather\n\
    \   such evidence.  A final reason for establishing contacts as soon as\n   possible\
    \ is that it is impossible to know the particular agency that\n   will assume\
    \ jurisdiction in any given incident.  Making contacts and\n   finding the proper\
    \ channels early on will make responding to an\n   incident go considerably more\
    \ smoothly.\n   If your organization or site has a legal counsel, you need to\
    \ notify\n   this office soon after you learn that an incident is in progress.\
    \  At\n   a minimum, your legal counsel needs to be involved to protect the\n\
    \   legal and financial interests of your site or organization.  There\n   are\
    \ many legal and practical issues, a few of which are:\n   (1)  Whether your site\
    \ or organization is willing to risk negative\n        publicity or exposure to\
    \ cooperate with legal prosecution\n        efforts.\n   (2)  Downstream liability--if\
    \ you leave a compromised system as is so\n        it can be monitored and another\
    \ computer is damaged because the\n        attack originated from your system,\
    \ your site or organization\n        may be liable for damages incurred.\n   (3)\
    \  Distribution of information--if your site or organization\n        distributes\
    \ information about an attack in which another site or\n        organization may\
    \ be involved or the vulnerability in a product\n        that may affect ability\
    \ to market that product, your site or\n        organization may again be liable\
    \ for any damages (including\n        damage of reputation).\n   (4)  Liabilities\
    \ due to monitoring--your site or organization may be\n        sued if users at\
    \ your site or elsewhere discover that your site\n        is monitoring account\
    \ activity without informing users.\n   Unfortunately, there are no clear precedents\
    \ yet on the liabilities\n   or responsibilities of organizations involved in\
    \ a security incident\n   or who might be involved in supporting an investigative\
    \ effort.\n   Investigators will often encourage organizations to help trace and\n\
    \   monitor intruders.  Indeed, most investigators cannot pursue computer\n  \
    \ intrusions without extensive support from the organizations involved.\n   However,\
    \ investigators cannot provide protection from liability\n   claims, and these\
    \ kinds of efforts may drag out for months and may\n   take a lot of effort.\n\
    \   On the other hand, an organization's legal council may advise extreme\n  \
    \ caution and suggest that tracing activities be halted and an intruder\n   shut\
    \ out of the system.  This, in itself, may not provide protection\n   from liability,\
    \ and may prevent investigators from identifying the\n   perpetrator.\n   The\
    \ balance between supporting investigative activity and limiting\n   liability\
    \ is tricky. You'll need to consider the advice of your legal\n   counsel and\
    \ the damage the intruder is causing (if any) when making\n   your decision about\
    \ what to do during any particular incident.\n   Your legal counsel should also\
    \ be involved in any decision to contact\n   investigative agencies when an incident\
    \ occurs at your site.  The\n   decision to coordinate efforts with investigative\
    \ agencies is most\n   properly that of your site or organization.  Involving\
    \ your legal\n   counsel will also foster the multi-level coordination between\
    \ your\n   site and the particular investigative agency involved, which in turn\n\
    \   results in an efficient division of labor.  Another result is that\n   you\
    \ are likely to obtain guidance that will help you avoid future\n   legal mistakes.\n\
    \   Finally, your legal counsel should evaluate your site's written\n   procedures\
    \ for responding to incidents.  It is essential to obtain a\n   \"clean bill of\
    \ health\" from a legal perspective before you actually\n   carry out these procedures.\n\
    \   It is vital, when dealing with investigative agencies, to verify that\n  \
    \ the person who calls asking for information is a legitimate\n   representative\
    \ from the agency in question.  Unfortunately, many well\n   intentioned people\
    \ have unknowingly leaked sensitive details about\n   incidents, allowed unauthorized\
    \ people into their systems, etc.,\n   because a caller has masqueraded as a representative\
    \ of a government\n   agency. (Note: this word of caution actually applies to\
    \ all external\n   contacts.)\n   A similar consideration is using a secure means\
    \ of communication.\n   Because many network attackers can easily re-route electronic\
    \ mail,\n   avoid using electronic mail to communicate with other agencies (as\n\
    \   well as others dealing with the incident at hand). Non-secured phone\n   lines\
    \ (the phones normally used in the business world) are also\n   frequent targets\
    \ for tapping by network intruders, so be careful!\n   There is no one established\
    \ set of rules for responding to an\n   incident when the local government becomes\
    \ involved.  Normally (in\n   the U.S.), except by legal order, no agency can\
    \ force you to monitor,\n   to disconnect from the network, to avoid telephone\
    \ contact with the\n   suspected attackers, etc. Each organization will have a\
    \ set of local\n   and national laws and regulations that must be adhered to when\n\
    \   handling incidents. It is recommended that each site be familiar with\n  \
    \ those laws and regulations, and identify and get know the contacts\n   for agencies\
    \ with jurisdiction well in advance of handling an\n   incident.\n"
- title: 5.2.3  Computer Security Incident Handling Teams
  contents:
  - "5.2.3  Computer Security Incident Handling Teams\n   There are currently a number\
    \ of of Computer Security Incident\n   Response teams (CSIRTs) such as the CERT\
    \ Coordination Center, the\n   German DFN-CERT, and other teams around the globe.\
    \  Teams exist for\n   many major government agencies and large corporations.\
    \  If such a\n   team is available, notifying it should be of primary consideration\n\
    \   during the early stages of an incident.  These teams are responsible\n   for\
    \ coordinating computer security incidents over a range of sites\n   and larger\
    \ entities.  Even if the incident is believed to be\n   contained within a single\
    \ site, it is possible that the information\n   available through a response team\
    \ could help in fully resolving the\n   incident.\n   If it is determined that\
    \ the breach occurred due to a flaw in the\n   system's hardware or software,\
    \ the vendor (or supplier) and a\n   Computer Security Incident Handling team\
    \ should be notified as soon\n   as possible.  This is especially important because\
    \ many other systems\n   are vulnerable, and these vendor and response team organizations\
    \ can\n   help disseminate help to other affected sites.\n   In setting up a site\
    \ policy for incident handling, it may be\n   desirable to create a subgroup,\
    \ much like those teams that already\n   exist, that will be responsible for handling\
    \ computer security\n   incidents for the site (or organization).  If such a team\
    \ is created,\n   it is essential that communication lines be opened between this\
    \ team\n   and other teams.  Once an incident is under way, it is difficult to\n\
    \   open a trusted dialogue between other teams if none has existed\n   before.\n"
- title: 5.2.4  Affected and Involved Sites
  contents:
  - "5.2.4  Affected and Involved Sites\n   If an incident has an impact on other\
    \ sites, it is good practice to\n   inform them.  It may be obvious from the beginning\
    \ that the incident\n   is not limited to the local site, or it may emerge only\
    \ after further\n   analysis.\n   Each site may choose to contact other sites\
    \ directly or they can pass\n   the information to an appropriate incident response\
    \ team. It is often\n   very difficult to find the responsible POC at remote sites\
    \ and the\n   incident response team will be able to  facilitate contact by making\n\
    \   use of already established channels.\n   The legal and liability issues arising\
    \ from a security incident will\n   differ from site to site.  It is important\
    \ to define a policy for the\n   sharing and logging of information about other\
    \ sites before an\n   incident occurs.\n   Information about specific people is\
    \ especially sensitive, and may be\n   subject to privacy laws.  To avoid problems\
    \ in this area, irrelevant\n   information should be deleted and a statement of\
    \ how to handle the\n   remaining information should be included.  A clear statement\
    \ of how\n   this information is to be used is essential.  No one who informs\
    \ a\n   site of a security incident wants to read about it in the public\n   press.\
    \  Incident response teams are valuable in this respect.  When\n   they pass information\
    \ to responsible POCs, they are able to protect\n   the anonymity of the original\
    \ source. But, be aware that, in many\n   cases, the analysis of logs and information\
    \ at other sites will\n   reveal addresses of your site.\n   All the problems\
    \ discussed above should be not taken as reasons not\n   to involve other sites.\
    \  In fact, the experiences of existing teams\n   reveal that most sites informed\
    \ about security problems are not even\n   aware that their site had been compromised.\
    \  Without timely\n   information, other sites are often unable to take action\
    \ against\n   intruders.\n"
- title: 5.2.5  Internal Communications
  contents:
  - "5.2.5  Internal Communications\n   It is crucial during a major incident to communicate\
    \ why certain\n   actions are being taken, and how the users (or departments)\
    \ are\n   expected to behave. In particular, it should be made very clear to\n\
    \   users what they are allowed to say (and not say) to the outside world\n  \
    \ (including other departments). For example, it wouldn't be good for\n   an organization\
    \ if users replied to customers with something like,\n   \"I'm sorry the systems\
    \ are down, we've had an intruder and we are\n   trying to clean things up.\"\
    \ It would be much better if they were\n   instructed to respond with a prepared\
    \ statement like, \"I'm sorry our\n   systems are unavailable, they are being\
    \ maintained for better service\n   in the future.\"\n   Communications with customers\
    \ and contract partners should be handled\n   in a sensible, but sensitive way.\
    \ One can prepare for the main issues\n   by preparing a checklist. When an incident\
    \ occurs, the checklist can\n   be used with the addition of a sentence or two\
    \ for the specific\n   circumstances of the incident.\n   Public relations departments\
    \ can be very helpful during incidents.\n   They should be involved in all planning\
    \ and can provide well\n   constructed responses for use when contact with outside\
    \ departments\n   and organizations is necessary.\n"
- title: 5.2.6  Public Relations - Press Releases
  contents:
  - "5.2.6  Public Relations - Press Releases\n   There has been a tremendous growth\
    \ in the amount of media coverage\n   dedicated to computer security incidents\
    \ in the United States. Such\n   press coverage is bound to extend to other countries\
    \ as the Internet\n   continues to grow and expand internationally.  Readers from\
    \ countries\n   where such media attention has not yet occurred, can learn from\
    \ the\n   experiences in the U.S. and should be forwarned and prepared.\n   One\
    \ of the most important issues to consider is when, who, and how\n   much to release\
    \ to the general public through the press.  There are\n   many issues to consider\
    \ when deciding this particular issue.  First\n   and foremost, if a public relations\
    \ office exists for the site, it is\n   important to use this office as liaison\
    \ to the press.  The public\n   relations office is trained in the type and wording\
    \ of information\n   released, and will help to assure that the image of the site\
    \ is\n   protected during and after the incident (if possible).  A public\n  \
    \ relations office has the advantage that you can communicate candidly\n   with\
    \ them, and provide a buffer between the constant press attention\n   and the\
    \ need of the POC to maintain control over the incident.\n   If a public relations\
    \ office is not available, the information\n   released to the press must be carefully\
    \ considered.  If the\n   information is sensitive, it may be advantageous to\
    \ provide only\n   minimal or overview information to the press.  It is quite\
    \ possible\n   that any information provided to the press will be quickly reviewed\n\
    \   by the perpetrator of the incident.  Also note that misleading the\n   press\
    \ can often backfire and cause more damage than releasing\n   sensitive information.\n\
    \   While it is difficult to determine in advance what level of detail to\n  \
    \ provide to the press, some guidelines to keep in mind are:\n   (1)  Keep the\
    \ technical level of detail low.  Detailed\n        information about the incident\
    \ may provide enough\n        information for others to launch similar attacks\
    \ on\n        other sites, or even damage the site's ability to\n        prosecute\
    \ the guilty party once the event is over.\n   (2)  Keep the speculation out of\
    \ press statements.\n        Speculation of who is causing the incident or the\n\
    \        motives are very likely to be in error and may cause\n        an inflamed\
    \ view of the incident.\n   (3)  Work with law enforcement professionals to assure\
    \ that\n        evidence is protected.  If prosecution is involved,\n        assure\
    \ that the evidence collected is not divulged to\n        the press.\n   (4) \
    \ Try not to be forced into a press interview before you are\n        prepared.\
    \  The popular press is famous for the \"2 am\"\n        interview, where the\
    \ hope is to catch the interviewee off\n        guard and obtain information otherwise\
    \ not available.\n   (5)  Do not allow the press attention to detract from the\n\
    \        handling of the event.  Always remember that the successful\n       \
    \ closure of an incident is of primary importance.\n"
- title: 5.3  Identifying an Incident
  contents:
  - '5.3  Identifying an Incident

    '
- title: 5.3.1  Is It Real?
  contents:
  - "5.3.1  Is It Real?\n   This stage involves determining if a problem really exists.\
    \  Of\n   course many if not most signs often associated with virus infection,\n\
    \   system intrusions, malicious users, etc., are simply anomalies such\n   as\
    \ hardware failures or suspicious system/user behavior.  To assist\n   in identifying\
    \ whether there really is an incident, it is usually\n   helpful to obtain and\
    \ use any detection software which may be\n   available.  Audit information is\
    \ also extremely useful, especially in\n   determining whether there is a network\
    \ attack.  It is extremely\n   important to obtain a system snapshot as soon as\
    \ one suspects that\n   something is wrong.  Many incidents cause a dynamic chain\
    \ of events\n   to occur, and an initial system snapshot may be the most valuable\n\
    \   tool for identifying the problem and any source of attack.  Finally,\n   it\
    \ is important to start a log book.  Recording system events,\n   telephone conversations,\
    \ time stamps, etc., can lead to a more rapid\n   and systematic identification\
    \ of the problem, and is the basis for\n   subsequent stages of incident handling.\n\
    \   There are certain indications or \"symptoms\" of an incident that\n   deserve\
    \ special attention:\n   (1)   System crashes.\n   (2)   New user accounts (the\
    \ account RUMPLESTILTSKIN has been\n         unexpectedly created), or high activity\
    \ on a previously\n         low usage account.\n   (3)   New files (usually with\
    \ novel or strange file names,\n         such as data.xx or k or .xx ).\n   (4)\
    \   Accounting discrepancies (in a UNIX system you might\n         notice the\
    \ shrinking of an accounting file called\n         /usr/admin/lastlog, something\
    \ that should make you very\n         suspicious that there may be an intruder).\n\
    \   (5)   Changes in file lengths or dates (a user should be\n         suspicious\
    \ if .EXE files in an MS DOS computer have\n         unexplainedly grown by over\
    \ 1800 bytes).\n   (6)   Attempts to write to system (a system manager notices\n\
    \         that a privileged user in a VMS system is attempting to\n         alter\
    \ RIGHTSLIST.DAT).\n   (7)   Data modification or deletion (files start to disappear).\n\
    \   (8)   Denial of service (a system manager and all other users\n         become\
    \ locked out of a UNIX system, now in single user mode).\n   (9)   Unexplained,\
    \ poor system performance\n   (10)  Anomalies (\"GOTCHA\" is displayed on the\
    \ console or there\n         are frequent unexplained \"beeps\").\n   (11)  Suspicious\
    \ probes (there are numerous unsuccessful login\n         attempts from another\
    \ node).\n   (12)  Suspicious browsing (someone becomes a root user on a UNIX\n\
    \         system and accesses file after file on many user accounts.)\n   (13)\
    \  Inability of a user to log in due to modifications of his/her\n         account.\n\
    \   By no means is this list comprehensive; we have just listed a number\n   of\
    \ common indicators.  It is best to collaborate with other technical\n   and computer\
    \ security personnel to make a decision as a group about\n   whether an incident\
    \ is occurring.\n"
- title: 5.3.2  Types and Scope of Incidents
  contents:
  - "5.3.2  Types and Scope of Incidents\n   Along with the identification of the\
    \ incident is the evaluation of\n   the scope and impact of the problem.  It is\
    \ important to correctly\n   identify the boundaries of the incident in order\
    \ to effectively deal\n   with it and prioritize responses.\n   In order to identify\
    \ the scope and impact a set of criteria should be\n   defined which is appropriate\
    \ to the site and to the type of\n   connections available.  Some of the issues\
    \ include:\n   (1)  Is this a multi-site incident?\n   (2)  Are many computers\
    \ at your site affected by this incident?\n   (3)  Is sensitive information involved?\n\
    \   (4)  What is the entry point of the incident (network,\n        phone line,\
    \ local terminal, etc.)?\n   (5)  Is the press involved?\n   (6)  What is the\
    \ potential damage of the incident?\n   (7)  What is the estimated time to close\
    \ out the incident?\n   (8)  What resources could be required to handle the incident?\n\
    \   (9)  Is law enforcement involved?\n"
- title: 5.3.3  Assessing the Damage and Extent
  contents:
  - "5.3.3  Assessing the Damage and Extent\n   The analysis of the damage and extent\
    \ of the incident can be quite\n   time consuming, but should lead to some insight\
    \ into the nature of\n   the incident, and aid investigation and prosecution.\
    \  As soon as the\n   breach has occurred, the entire system and all of its components\n\
    \   should be considered suspect.  System software is the most probable\n   target.\
    \  Preparation is key to be able to detect all changes for a\n   possibly tainted\
    \ system.  This includes checksumming all media from\n   the vendor using a algorithm\
    \ which is resistant to tampering.  (See\n   sections 4.3)\n   Assuming original\
    \ vendor distribution media are available, an\n   analysis of all system files\
    \ should commence, and any irregularities\n   should be noted and referred to\
    \ all parties involved in handling the\n   incident.  It can be very difficult,\
    \ in some cases, to decide which\n   backup media are showing a correct system\
    \ status. Consider, for\n   example, that the incident may have continued for\
    \ months or years\n   before discovery, and the suspect may be an employee of\
    \ the site, or\n   otherwise have intimate knowledge or access to the systems.\
    \  In all\n   cases, the pre-incident preparation will determine what recovery\
    \ is\n   possible.\n   If the system supports centralized logging (most do), go\
    \ back over\n   the logs and look for abnormalities.  If process accounting and\n\
    \   connect time accounting is enabled, look for patterns of system\n   usage.\
    \  To a lesser extent, disk usage may shed light on the\n   incident.  Accounting\
    \ can provide much helpful information in an\n   analysis of an incident and subsequent\
    \ prosecution.  Your ability to\n   address all aspects of a specific incident\
    \ strongly depends on the\n   success of this analysis.\n"
- title: 5.4  Handling an Incident
  contents:
  - "5.4  Handling an Incident\n   Certain steps are necessary to take during the\
    \ handling of an\n   incident.  In all security related activities, the most important\n\
    \   point to be made is that all sites should have policies in place.\n   Without\
    \ defined policies and goals, activities undertaken will remain\n   without focus.\
    \ The goals should be defined by management and legal\n   counsel in advance.\n\
    \   One of the most fundamental objectives is to restore control of the\n   affected\
    \ systems and to limit the impact and damage.  In the worst\n   case scenario,\
    \ shutting down the system, or disconnecting the system\n   from the network,\
    \ may the only practical solution.\n   As the activities involved are complex,\
    \ try to get as much help as\n   necessary.  While trying to solve the problem\
    \ alone, real damage\n   might occur due to delays or missing information.  Most\n\
    \   administrators take the discovery of an intruder as a personal\n   challenge.\
    \  By proceeding this way, other objectives as outlined in\n   the local policies\
    \ may not always be considered.  Trying to catch\n   intruders may be a very low\
    \ priority, compared to system integrity,\n   for example.  Monitoring a hacker's\
    \ activity is useful, but it might\n   not be considered worth the risk to allow\
    \ the continued access.\n"
- title: 5.4.1  Types of Notification and Exchange of Information
  contents:
  - "5.4.1  Types of Notification and Exchange of Information\n   When you have confirmed\
    \ that an incident is occurring, the\n   appropriate personnel must be notified.\
    \  How this notification is\n   achieved is very important to keeping the event\
    \ under control both\n   from a technical and emotional standpoint. The circumstances\
    \ should\n   be described in as much detail as possible, in order to aid prompt\n\
    \   acknowledgment and understanding of the problem.  Great care should\n   be\
    \ taken when determining to which groups detailed technical\n   information is\
    \ given during the notification.  For example, it is\n   helpful to pass this\
    \ kind of information to an incident handling team\n   as they can assist you\
    \ by providing helpful hints for eradicating the\n   vulnerabilities involved\
    \ in an incident.  On the other hand, putting\n   the critical knowledge into\
    \ the public domain (e.g., via USENET\n   newsgroups or mailing lists) may potentially\
    \ put a large number of\n   systems at risk of intrusion.  It is invalid to assume\
    \ that all\n   administrators reading a particular newsgroup have access to\n\
    \   operating system source code, or can even understand an advisory well\n  \
    \ enough to take adequate steps.\n   First of all, any notification to either\
    \ local or off-site personnel\n   must be explicit.  This requires that any statement\
    \ (be it an\n   electronic mail message, phone call, fax, beeper, or semaphone)\n\
    \   providing information about the incident be clear, concise, and fully\n  \
    \ qualified.  When you are notifying others that will help you handle\n   an event,\
    \ a \"smoke screen\" will only divide the effort and create\n   confusion.  If\
    \ a division of labor is suggested, it is helpful to\n   provide information to\
    \ each participant about what is being\n   accomplished in other efforts.  This\
    \ will not only reduce duplication\n   of effort, but allow people working on\
    \ parts of the problem to know\n   where to obtain information relevant to their\
    \ part of the incident.\n   Another important consideration when communicating\
    \ about the incident\n   is to be factual.  Attempting to hide aspects of the\
    \ incident by\n   providing false or incomplete information may not only prevent\
    \ a\n   successful resolution to the incident, but may even worsen the\n   situation.\n\
    \   The choice of language used when notifying people about the incident\n   can\
    \ have a profound effect on the way that information is received.\n   When you\
    \ use emotional or inflammatory terms, you raise the potential\n   for damage\
    \ and negative outcomes of the incident.  It is important to\n   remain calm both\
    \ in written and spoken communications.\n   Another consideration is that not\
    \ all people speak the same language.\n   Due to this fact, misunderstandings\
    \ and delay may arise, especially\n   if it is a multi-national incident. Other\
    \ international concerns\n   include differing legal implications of a security\
    \ incident and\n   cultural differences.  However, cultural differences do not\
    \ only\n   exist between countries.  They even exist within countries, between\n\
    \   different social or user groups.  For example, an administrator of a\n   university\
    \ system might be very relaxed about attempts to connect to\n   the system via\
    \ telnet, but the administrator of a military system is\n   likely to consider\
    \ the same action as a possible attack.\n   Another issue associated with the\
    \ choice of language is the\n   notification of non-technical or off-site personnel.\
    \  It is important\n   to accurately describe the incident without generating\
    \ undue alarm or\n   confusion.  While it is more difficult to describe the incident\
    \ to a\n   non-technical audience, it is often more important.  A non-technical\n\
    \   description may be required for upper-level management, the press, or\n  \
    \ law enforcement liaisons.  The importance of these communications\n   cannot\
    \ be underestimated and may make the difference between\n   resolving the incident\
    \ properly and escalating to some higher level\n   of damage.\n   If an incident\
    \ response team becomes involved, it might be necessary\n   to fill out a template\
    \ for the information exchange.  Although this\n   may seem to be an additional\
    \ burden and adds a certain delay, it\n   helps the team to act on this minimum\
    \ set of information.  The\n   response team may be able to respond to aspects\
    \ of the incident of\n   which the local administrator is unaware. If information\
    \ is given out\n   to someone else, the following minimum information should be\n\
    \   provided:\n   (1)  timezone of logs, ... in GMT or local time\n   (2)  information\
    \ about the remote system, including host names,\n        IP addresses and (perhaps)\
    \ user IDs\n   (3)  all log entries relevant for the remote site\n   (4)  type\
    \ of incident (what happened, why should you care)\n   If local information (i.e.,\
    \ local user IDs) is included in the log\n   entries, it will be necessary to\
    \ sanitize the entries beforehand to\n   avoid privacy issues.  In general, all\
    \ information which might assist\n   a remote site in resolving an incident should\
    \ be given out, unless\n   local policies prohibit this.\n"
- title: 5.4.2  Protecting Evidence and Activity Logs
  contents:
  - "5.4.2  Protecting Evidence and Activity Logs\n   When you respond to an incident,\
    \ document all details related to the\n   incident.  This will provide valuable\
    \ information to yourself and\n   others as you try to unravel the course of events.\
    \  Documenting all\n   details will ultimately save you time.  If you don't document\
    \ every\n   relevant phone call, for example, you are likely to forget a\n   significant\
    \ portion of information you obtain, requiring you to\n   contact the source of\
    \ information again.  At the same time, recording\n   details will provide evidence\
    \ for prosecution efforts, providing the\n   case moves in that direction.  Documenting\
    \ an incident will also help\n   you perform a final assessment of damage (something\
    \ your management,\n   as well as law enforcement officers, will want to know),\
    \ and will\n   provide the basis for later phases of the handling process:\n \
    \  eradication, recovery, and follow-up \"lessons learned.\"\n   During the initial\
    \ stages of an incident, it is often infeasible to\n   determine whether prosecution\
    \ is viable, so you should document as if\n   you are gathering evidence for a\
    \ court case.  At a minimum, you\n   should record:\n   (1)  all system events\
    \ (audit records)\n   (2)  all actions you take (time tagged)\n   (3)  all external\
    \ conversations (including the person with whom\n        you talked, the date\
    \ and time, and the content of the\n        conversation)\n   The most straightforward\
    \ way to maintain documentation is keeping a\n   log book.  This allows you to\
    \ go to a centralized, chronological\n   source of information when you need it,\
    \ instead of requiring you to\n   page through individual sheets of paper.  Much\
    \ of this information is\n   potential evidence in a court of law.  Thus, when\
    \ a legal follow-up\n   is a possibility, one should follow the prepared procedures\
    \ and avoid\n   jeopardizing the legal follow-up by improper handling of possible\n\
    \   evidence. If appropriate, the following steps may be taken.\n   (1)  Regularly\
    \ (e.g., every day) turn in photocopied, signed\n        copies of your logbook\
    \ (as well as media you use to record\n        system events) to a document custodian.\n\
    \   (2)  The custodian should store these copied pages in a secure\n        place\
    \ (e.g., a safe).\n   (3)  When you submit information for storage, you should\n\
    \        receive a signed, dated receipt from the document\n        custodian.\n\
    \   Failure to observe these procedures can result in invalidation of any\n  \
    \ evidence you obtain in a court of law.\n"
- title: 5.4.3  Containment
  contents:
  - "5.4.3  Containment\n   The purpose of containment is to limit the extent of an\
    \ attack.  An\n   essential part of containment is decision making (e.g., determining\n\
    \   whether to shut a system down, disconnect from a network, monitor\n   system\
    \ or network activity, set traps, disable functions such as\n   remote file transfer,\
    \ etc.).\n   Sometimes this decision is trivial; shut the system down if the\n\
    \   information is classified, sensitive, or proprietary.  Bear in mind\n   that\
    \ removing all access while an incident is in progress obviously\n   notifies\
    \ all users, including the alleged problem users, that the\n   administrators\
    \ are aware of a problem; this may have a deleterious\n   effect on an investigation.\
    \  In some cases, it is prudent to remove\n   all access or functionality as soon\
    \ as possible, then restore normal\n   operation in limited stages.  In other\
    \ cases, it is worthwhile to\n   risk some damage to the system if keeping the\
    \ system up might enable\n   you to identify an intruder.\n   This stage should\
    \ involve carrying out predetermined procedures.\n   Your organization or site\
    \ should, for example, define acceptable\n   risks in dealing with an incident,\
    \ and should prescribe specific\n   actions and strategies accordingly.  This\
    \ is especially important\n   when a quick decision is necessary and it is not\
    \ possible to first\n   contact all involved parties to discuss the decision.\
    \  In the absence\n   of predefined procedures, the person in charge of the incident\
    \ will\n   often not have the power to make difficult management decisions (like\n\
    \   to lose the results of a costly experiment by shutting down a\n   system).\
    \  A final activity that should occur during this stage of\n   incident handling\
    \ is the notification of appropriate authorities.\n"
- title: 5.4.4  Eradication
  contents:
  - "5.4.4  Eradication\n   Once the incident has been contained, it is time to eradicate\
    \ the\n   cause.  But before eradicating the cause, great care should be taken\n\
    \   to collect all necessary information about the compromised system(s)\n   and\
    \ the cause of the incident as they will likely be lost when\n   cleaning up the\
    \ system.\n   Software may be available to help you in the eradication process,\n\
    \   such as anti-virus software.  If any bogus files have been created,\n   archive\
    \ them before deleting them.  In the case of virus infections,\n   it is important\
    \ to clean and reformat any media containing infected\n   files.  Finally, ensure\
    \ that all backups are clean.  Many systems\n   infected with viruses become periodically\
    \ re-infected simply because\n   people do not systematically eradicate the virus\
    \ from backups.  After\n   eradication, a new backup should be taken.\n   Removing\
    \ all vulnerabilities once an incident has occurred is\n   difficult.  The key\
    \ to removing vulnerabilities is knowledge and\n   understanding of the breach.\n\
    \   It may be necessary to go back to the original distribution media and\n  \
    \ re-customize the system.  To facilitate this worst case scenario, a\n   record\
    \ of the original system setup and each customization change\n   should be maintained.\
    \  In the case of a network-based attack, it is\n   important to install patches\
    \ for each operating system vulnerability\n   which was exploited.\n   As discussed\
    \ in section 5.4.2, a security log can be most valuable\n   during this phase\
    \ of removing vulnerabilities. The logs showing how\n   the incident was discovered\
    \ and contained can be used later to help\n   determine how extensive the damage\
    \ was from a given incident.  The\n   steps taken can be used in the future to\
    \ make sure the problem does\n   not resurface.  Ideally, one should automate\
    \ and regularly apply the\n   same test as was used to detect the security incident.\n\
    \   If a particular vulnerability is isolated as having been exploited,\n   the\
    \ next step is to find a mechanism to protect your system.  The\n   security mailing\
    \ lists and bulletins would be a good place to search\n   for this information,\
    \ and you can get advice from incident response\n   teams.\n"
- title: 5.4.5  Recovery
  contents:
  - "5.4.5  Recovery\n   Once the cause of an incident has been eradicated, the recovery\
    \ phase\n   defines the next stage of action.  The goal of recovery is to return\n\
    \   the system to normal.  In general, bringing up services in the order\n   of\
    \ demand to allow a minimum of user inconvenience is the best\n   practice.  Understand\
    \ that the proper recovery procedures for the\n   system are extremely important\
    \ and should be specific to the site.\n"
- title: 5.4.6  Follow-Up
  contents:
  - "5.4.6  Follow-Up\n   Once you believe that a system has been restored to a \"\
    safe\" state,\n   it is still possible that holes, and even traps, could be lurking\
    \ in\n   the system.  One of the most important stages of responding to\n   incidents\
    \ is also the most often omitted, the follow-up stage.  In\n   the follow-up stage,\
    \ the system should be monitored for items that\n   may have been missed during\
    \ the cleanup stage.  It would be prudent\n   to utilize some of the tools mentioned\
    \ in chapter 7 as a start.\n   Remember, these tools don't replace continual system\
    \ monitoring and\n   good systems administration practices.\n   The most important\
    \ element of the follow-up stage is performing a\n   postmortem analysis.  Exactly\
    \ what happened, and at what times?  How\n   well did the staff involved with\
    \ the incident perform?  What kind of\n   information did the staff need quickly,\
    \ and how could they have\n   gotten that information as soon as possible?  What\
    \ would the staff do\n   differently next time?\n   After an incident, it is prudent\
    \ to write a report describing the\n   exact sequence of events: the method of\
    \ discovery, correction\n   procedure, monitoring procedure, and a summary of\
    \ lesson learned.\n   This will aid in the clear understanding of the problem.\
    \  Creating a\n   formal chronology of events (including time stamps) is also\
    \ important\n   for legal reasons.\n   A follow-up report is valuable for many\
    \ reasons.  It provides a\n   reference to be used in case of other similar incidents.\
    \  It is also\n   important to, as quickly as possible obtain a monetary estimate\
    \ of\n   the amount of damage the incident caused. This estimate should\n   include\
    \ costs associated with any loss of software and files\n   (especially the value\
    \ of proprietary data that may have been\n   disclosed), hardware damage, and\
    \ manpower costs to restore altered\n   files, reconfigure affected systems, and\
    \ so forth.  This estimate may\n   become the basis for subsequent prosecution\
    \ activity.  The report can\n   also help justify an organization's computer security\
    \ effort to\n   management.\n"
- title: 5.5  Aftermath of an Incident
  contents:
  - "5.5  Aftermath of an Incident\n   In the wake of an incident, several actions\
    \ should take place.  These\n   actions can be summarized as follows:\n   (1)\
    \  An inventory should be taken of the systems' assets,\n        (i.e., a careful\
    \ examination should determine how the\n        system was affected by the incident).\n\
    \   (2)  The lessons learned as a result of the incident\n        should be included\
    \ in revised security plan to\n        prevent the incident from re-occurring.\n\
    \   (3)  A new risk analysis should be developed in light of the\n        incident.\n\
    \   (4)  An investigation and prosecution of the individuals\n        who caused\
    \ the incident should commence, if it is\n        deemed desirable.\n   If an\
    \ incident is based on poor policy, and unless the policy is\n   changed, then\
    \ one is doomed to repeat the past.  Once a site has\n   recovered from and incident,\
    \ site policy and procedures should be\n   reviewed to encompass changes to prevent\
    \ similar incidents.  Even\n   without an incident, it would be prudent to review\
    \ policies and\n   procedures on a regular basis.  Reviews are imperative due\
    \ to today's\n   changing computing environments.\n   The whole purpose of this\
    \ post mortem process is to improve all\n   security measures to protect the site\
    \ against future attacks.  As a\n   result of an incident, a site or organization\
    \ should gain practical\n   knowledge from the experience.  A concrete goal of\
    \ the post mortem is\n   to develop new proactive methods.  Another important\
    \ facet of the\n   aftermath may be end user and administrator education to prevent\
    \ a\n   reoccurrence of the security problem.\n"
- title: 5.6  Responsibilities
  contents:
  - '5.6  Responsibilities

    '
- title: 5.6.1  Not Crossing the Line
  contents:
  - "5.6.1  Not Crossing the Line\n   It is one thing to protect one's own network,\
    \ but quite another to\n   assume that one should protect other networks.  During\
    \ the handling\n   of an incident, certain system vulnerabilities of one's own\
    \ systems\n   and the systems of others become apparent.  It is quite easy and\
    \ may\n   even be tempting to pursue the intruders in order to track them.\n \
    \  Keep in mind that at a certain point it is possible to \"cross the\n   line,\"\
    \ and, with the best of intentions, become no better than the\n   intruder.\n\
    \   The best rule when it comes to propriety is to not use any facility\n   of\
    \ remote sites which is not public.  This clearly excludes any entry\n   onto\
    \ a system (such as a remote shell or login session) which is not\n   expressly\
    \ permitted.  This may be very tempting; after a breach of\n   security is detected,\
    \ a system administrator may have the means to\n   \"follow it up,\" to ascertain\
    \ what damage is being done to the remote\n   site.  Don't do it!  Instead, attempt\
    \ to reach the appropriate point\n   of contact for the affected site.\n"
- title: 5.6.2  Good Internet Citizenship
  contents:
  - "5.6.2  Good Internet Citizenship\n   During a security incident there are two\
    \ choices one can make.\n   First, a site can choose to watch the intruder in\
    \ the hopes of\n   catching him; or, the site can go about cleaning up after the\n\
    \   incident and shut the intruder out of the systems.  This is a\n   decision\
    \ that must be made very thoughtfully, as there may be legal\n   liabilities if\
    \ you choose to leave your site open, knowing that an\n   intruder is using your\
    \ site as a launching pad to reach out to other\n   sites.  Being a good Internet\
    \ citizen means that you should try to\n   alert other sites that may have been\
    \ impacted by the intruder.  These\n   affected sites may be readily apparent\
    \ after a thorough review of\n   your log files.\n"
- title: 5.6.3  Administrative Response to Incidents
  contents:
  - "5.6.3  Administrative Response to Incidents\n   When a security incident involves\
    \ a user, the site's security policy\n   should describe what action is to be\
    \ taken.  The transgression should\n   be taken seriously, but it is very important\
    \ to be sure of the role\n   the user played.  Was the user naive?  Could there\
    \ be a mistake in\n   attributing the security breach to the user?  Applying administrative\n\
    \   action that assumes the user intentionally caused the incident may\n   not\
    \ be appropriate for a user who simply made a mistake.  It may be\n   appropriate\
    \ to include sanctions more suitable for such a situation\n   in your policies\
    \ (e.g., education or reprimand of a user) in addition\n   to more stern measures\
    \ for intentional acts of intrusion and system\n   misuse.\n"
- title: 6.  Ongoing Activities
  contents:
  - "6.  Ongoing Activities\n   At this point in time, your site has hopefully developed\
    \ a complete\n   security policy and has developed procedures to assist in the\n\
    \   configuration and management of your technology in support of those\n   policies.\
    \  How nice it would be if you could sit back and relax at\n   this point and\
    \ know that you were finished with the job of security.\n   Unfortunately, that\
    \ isn't possible.  Your systems and networks are\n   not a static environment,\
    \ so you will need to review policies and\n   procedures on a regular basis. \
    \ There are a number of steps you can\n   take to help you keep up with the changes\
    \ around you so that you can\n   initiate corresponding actions to address those\
    \ changes.  The\n   following is a starter set and you may add others as appropriate\
    \ for\n   your site.\n   (1)  Subscribe to advisories that are issued by various\
    \ security incident\n        response teams, like those of the CERT Coordination\
    \ Center, and\n        update your systems against those threats that apply to\
    \ your site's\n        technology.\n   (2)  Monitor security patches that are\
    \ produced by the vendors of your\n        equipment, and obtain and install all\
    \ that apply.\n   (3)  Actively watch the configurations of your systems to identify\
    \ any\n        changes that may have occurred, and investigate all anomalies.\n\
    \   (4)  Review all security policies and procedures annually (at a minimum).\n\
    \   (5)  Read relevant mailing lists and USENET newsgroups to keep up to\n   \
    \     date with the latest information being shared by fellow\n        administrators.\n\
    \   (6)  Regularly check for compliance with policies and procedures.  This\n\
    \        audit should be performed by someone other than the people who\n    \
    \    define or implement the policies and procedures.\n"
- title: 7.  Tools and Locations
  contents:
  - "7.  Tools and Locations\n   This chapter provides a brief list of publicly available\
    \ security\n   technology which can be downloaded from the Internet.  Many of\
    \ the\n   items described below will undoubtedly be surpassed or made obsolete\n\
    \   before this document is published.\n   Some of the tools listed are applications\
    \ such as end user programs\n   (clients) and their supporting system infrastructure\
    \ (servers).\n   Others are tools that a general user will never see or need to\
    \ use,\n   but may be used by applications, or by administrators to troubleshoot\n\
    \   security problems or to guard against intruders.\n   A sad fact is that there\
    \ are very few security conscious applications\n   currently available. Primarily,\
    \ this is caused by the need for a\n   security infrastructure which must first\
    \ be put into place for most\n   applications to operate securely.  There is considerable\
    \ effort\n   currently taking place to build this infrastructure so that\n   applications\
    \ can take advantage of secure communications.\n   Most of the tools and applications\
    \ described below can be found in\n   one of the following archive sites:\n  \
    \ (1)  CERT Coordination Center\n        ftp://info.cert.org:/pub/tools\n   (2)\
    \  DFN-CERT\n        ftp://ftp.cert.dfn.de/pub/tools/\n   (3)  Computer Operations,\
    \ Audit, and Security Tools (COAST)\n        coast.cs.purdue.edu:/pub/tools\n\
    \   It is important to note that many sites, including CERT and COAST are\n  \
    \ mirrored throughout the Internet.  Be careful to use a \"well known\"\n   mirror\
    \ site to retrieve software, and to use verification tools (md5\n   checksums,\
    \ etc.) to validate that software.  A clever cracker might\n   advertise security\
    \ software that has intentionally been designed to\n   provide access to data\
    \ or systems.\n"
- title: Tools
  contents:
  - "Tools\n   COPS\n   DES\n   Drawbridge\n   identd (not really a security tool)\n\
    \   ISS\n   Kerberos\n   logdaemon\n   lsof\n   MD5\n   PEM\n   PGP\n   rpcbind/portmapper\
    \ replacement\n   SATAN\n   sfingerd\n   S/KEY\n   smrsh\n   ssh\n   swatch\n\
    \   TCP-Wrapper\n   tiger\n   Tripwire*\n   TROJAN.PL\n"
- title: 8.  Mailing Lists and Other Resources
  contents:
  - "8.  Mailing Lists and Other Resources\n   It would be impossible to list all\
    \ of the mail-lists and other\n   resources dealing with site security. However,\
    \ these are some \"jump-\n   points\"  from which the reader can begin. All of\
    \ these references are\n   for the \"INTERNET\" constituency. More specific (vendor\
    \ and\n   geographical) resources can be found through these references.\n   Mailing\
    \ Lists\n   (1)  CERT(TM) Advisory\n        Send mail to:  cert-advisory-request@cert.org\n\
    \        Message Body:  subscribe cert <FIRST NAME> <LAST NAME>\n        A CERT\
    \ advisory provides information on how to obtain a patch or\n        details of\
    \ a workaround for a known computer security problem.\n        The CERT Coordination\
    \ Center works with vendors to produce a\n        workaround or a patch for a\
    \ problem, and does not publish\n        vulnerability information until a workaround\
    \ or a patch is\n        available. A CERT advisory may also be a warning to our\n\
    \        constituency about ongoing attacks (e.g.,\n        \"CA-91:18.Active.Internet.tftp.Attacks\"\
    ).\n        CERT advisories are also published on the USENET newsgroup:\n    \
    \                 comp.security.announce\n        CERT advisory archives are available\
    \ via anonymous FTP from\n        info.cert.org in the /pub/cert_advisories directory.\n\
    \   (2)  VIRUS-L List\n        Send mail to:  listserv%lehiibm1.bitnet@mitvma.mit.edu\n\
    \        Message Body:  subscribe virus-L FIRSTNAME LASTNAME\n        VIRUS-L\
    \ is a moderated mailing list with a focus\n        on computer virus issues.\
    \  For more information,\n        including a copy of the posting guidelines,\
    \ see\n        the file \"virus-l.README\", available by anonymous\n        FTP\
    \ from cs.ucr.edu.\n   (3)  Internet Firewalls\n        Send mail to:  majordomo@greatcircle.com\n\
    \        Message Body:  subscribe firewalls user@host\n        The Firewalls mailing\
    \ list is a discussion forum for\n        firewall administrators and implementors.\n\
    \   USENET newsgroups\n   (1)  comp.security.announce\n        The comp.security.announce\
    \ newsgroup is moderated\n        and is used solely for the distribution of CERT\n\
    \        advisories.\n   (2)  comp.security.misc\n        The comp.security.misc\
    \ is a forum for the\n        discussion of computer security, especially as it\n\
    \        relates to the UNIX(r) Operating System.\n   (3)  alt.security\n    \
    \    The alt.security newsgroup is also a forum for the\n        discussion of\
    \ computer security, as well as other\n        issues such as car locks and alarm\
    \ systems.\n   (4)  comp.virus\n        The comp.virus newsgroup is a moderated\
    \ newsgroup\n        with a focus on computer virus issues.  For more\n      \
    \  information, including a copy of the posting\n        guidelines, see the file\
    \ \"virus-l.README\",\n        available via anonymous FTP on info.cert.org\n\
    \        in the /pub/virus-l directory.\n   (5)  comp.risks\n        The comp.risks\
    \ newsgroup is a moderated forum on\n        the risks to the public in computers\
    \ and related\n        systems.\n   World-Wide Web Pages\n   (1)  http://www.first.org/\n\
    \        Computer Security Resource Clearinghouse. The main focus is on\n    \
    \    crisis response information; information on computer\n        security-related\
    \ threats, vulnerabilities, and solutions. At the\n        same time, the Clearinghouse\
    \ strives to be a general index to\n        computer security information on a\
    \ broad variety of subjects,\n        including general risks, privacy, legal\
    \ issues, viruses,\n        assurance, policy, and training.\n   (2)  http://www.telstra.com.au/info/security.html\n\
    \        This Reference Index contains a list of links to information\n      \
    \  sources on Network and Computer Security. There is no implied\n        fitness\
    \ to the Tools, Techniques and Documents contained within this\n        archive.\
    \ Many if not all of these items work well, but we do\n        not guarantee that\
    \ this will be so. This information is for the\n        education and legitimate\
    \ use of computer security techniques only.\n   (3)  http://www.alw.nih.gov/Security/security.html\n\
    \        This page features general information about computer security.\n   \
    \     Information is organized by source and each section is organized\n     \
    \   by topic. Recent modifications are noted in What's New page.\n   (4)  http://csrc.ncsl.nist.gov\n\
    \        This archive at the National Institute of Standards and Technology's\n\
    \        Computer Security Resource Clearinghouse page contains a number of\n\
    \        announcements, programs, and documents related to computer security.\n\
    \   * CERT and Tripwire are registered in the U.S. Patent and Trademark Office\n"
- title: 9.  References
  contents:
  - "9.  References\n   The following references may not be available in all countries.\n\
    \   [Appelman, et. al., 1995] Appelman, Heller, Ehrman, White, and\n   McAuliffe,\
    \ \"The Law and The Internet\", USENIX 1995 Technical\n   Conference on UNIX and\
    \ Advanced Computing, New Orleans, LA, January\n   16-20, 1995.\n   [ABA, 1989]\
    \ American Bar Association, Section of Science and\n   Technology, \"Guide to\
    \ the Prosecution of Telecommunication Fraud by\n   the Use of Computer Crime\
    \ Statutes\", American Bar Association, 1989.\n   [Aucoin, 1989] R. Aucoin, \"\
    Computer Viruses: Checklist for Recovery\",\n   Computers in  Libraries, Vol.\
    \ 9, No. 2, Pg. 4, February 1989.\n   [Barrett, 1996] D. Barrett, \"Bandits on\
    \ the Information\n   Superhighway\", O'Reilly & Associates, Sebastopol, CA, 1996.\n\
    \   [Bates, 1992] R. Bates, \"Disaster Recovery Planning: Networks,\n   Telecommunications\
    \ and Data Communications\", McGraw-Hill, 1992.\n   [Bellovin, 1989] S. Bellovin,\
    \ \"Security Problems in the TCP/IP\n   Protocol Suite\", Computer Communication\
    \ Review, Vol 19, 2, pp. 32-48,\n   April 1989.\n   [Bellovin, 1990] S. Bellovin,\
    \ and M. Merritt, \"Limitations of the\n   Kerberos Authentication System\", Computer\
    \ Communications Review,\n   October 1990.\n   [Bellovin, 1992] S. Bellovin, \"\
    There Be Dragon\", USENIX: Proceedings\n   of the Third Usenix Security Symposium,\
    \ Baltimore, MD. September,\n   1992.\n   [Bender, 1894] D. Bender, \"Computer\
    \ Law: Evidence and Procedure\", M.\n   Bender, New York, NY, 1978-present.\n\
    \   [Bloombecker, 1990] B. Bloombecker, \"Spectacular Computer Crimes\",\n   Dow\
    \ Jones- Irwin, Homewood, IL. 1990.\n   [Brand, 1990] R. Brand, \"Coping with\
    \ the Threat of Computer Security\n   Incidents: A Primer from Prevention through\
    \ Recovery\", R. Brand, 8\n   June 1990.\n   [Brock, 1989] J. Brock, \"November\
    \ 1988 Internet Computer Virus and\n   the Vulnerability of National Telecommunications\
    \ Networks to Computer\n   Viruses\", GAO/T-IMTEC-89-10, Washington, DC, 20 July\
    \ 1989.\n   [BS 7799] British Standard, BS Tech Cttee BSFD/12, Info. Sec. Mgmt,\n\
    \   \"BS 7799 : 1995 Code of Practice for Information Security\n   Management\"\
    , British Standards Institution, London, 54, Effective 15\n   February 1995.\n\
    \   [Caelli, 1988] W. Caelli, Editor, \"Computer Security in the Age of\n   Information\"\
    , Proceedings of the Fifth IFIP International Conference\n   on Computer Security,\
    \ IFIP/Sec '88.\n   [Carroll, 1987] J. Carroll, \"Computer Security\", 2nd Edition,\n\
    \   Butterworth Publishers, Stoneham, MA, 1987.\n   [Cavazos and Morin, 1995]\
    \ E. Cavazos and G. Morin, \"Cyber-Space and\n   The Law\", MIT Press, Cambridge,\
    \ MA, 1995.\n   [CCH, 1989] Commerce Clearing House, \"Guide to Computer Law\"\
    ,\n   (Topical Law Reports), Chicago, IL., 1989.\n   [Chapman, 1992] B. Chapman,\
    \ \"Network(In) Security Through IP Packet\n   Filtering\", USENIX: Proceedings\
    \ of the Third UNIX Security Symposium,\n   Baltimore, MD, September 1992.\n \
    \  [Chapman and Zwicky, 1995] B. Chapman and E. Zwicky, \"Building\n   Internet\
    \ Firewalls\", O'Reilly and Associates, Sebastopol, CA, 1995.\n   [Cheswick, 1990]\
    \ B. Cheswick, \"The Design of a Secure Internet\n   Gateway\", Proceedings of\
    \ the Summer Usenix Conference, Anaheim, CA,\n   June 1990.\n   [Cheswick1] W.\
    \ Cheswick, \"An Evening with Berferd In Which a Cracker\n   is Lured, Endured,\
    \ and Studied\", AT&T Bell Laboratories.\n   [Cheswick and Bellovin, 1994] W.\
    \ Cheswick and S. Bellovin, \"Firewalls\n   and Internet Security: Repelling the\
    \ Wily Hacker\", Addison-Wesley,\n   Reading, MA, 1994.\n   [Conly, 1989] C. Conly,\
    \ \"Organizing for Computer Crime Investigation\n   and Prosecution\", U.S. Dept.\
    \ of Justice, Office of Justice Programs,\n   Under Contract  Number OJP-86-C-002,\
    \ National Institute of Justice,\n   Washington, DC, July 1989.\n   [Cooper, 1989]\
    \ J. Cooper, \"Computer and Communications Security:\n   Strategies for the 1990s\"\
    , McGraw-Hill, 1989.\n   [CPSR, 1989] Computer Professionals for Social Responsibility,\
    \ \"CPSR\n   Statement on the Computer Virus\", CPSR, Communications of the ACM,\n\
    \   Vol. 32, No. 6, Pg. 699, June 1989.\n   [CSC-STD-002-85, 1985] Department\
    \ of Defense, \"Password Management\n   Guideline\", CSC-STD-002-85, 12 April\
    \ 1985, 31 pages.\n   [Curry, 1990] D. Curry, \"Improving the Security of Your\
    \ UNIX System\",\n   SRI International Report ITSTD-721-FR-90-21, April 1990.\n\
    \   [Curry, 1992] D. Curry, \"UNIX System Security: A Guide for Users and\n  \
    \ Systems Administrators\", Addision-Wesley, Reading, MA, 1992.\n   [DDN88] Defense\
    \ Data Network, \"BSD 4.2 and 4.3 Software Problem\n   Resolution\", DDN MGT Bulletin\
    \ #43, DDN Network Information Center, 3\n   November 1988.\n   [DDN89] DCA DDN\
    \ Defense Communications System, \"DDN Security Bulletin\n   03\", DDN Security\
    \ Coordination Center, 17 October 1989.\n   [Denning, 1990] P. Denning, Editor,\
    \ \"Computers Under Attack:\n   Intruders, Worms, and Viruses\", ACM Press, 1990.\n\
    \   [Eichin and Rochlis, 1989] M. Eichin, and J. Rochlis, \"With\n   Microscope\
    \ and Tweezers: An Analysis of the Internet Virus of\n   November 1988\", Massachusetts\
    \ Institute of Technology, February 1989.\n   [Eisenberg, et. al., 89] T. Eisenberg,\
    \ D. Gries, J. Hartmanis, D.\n   Holcomb, M. Lynn, and T. Santoro, \"The Computer\
    \ Worm\", Cornell\n   University, 6 February 1989.\n   [Ermann, Willians, and\
    \ Gutierrez, 1990] D. Ermann, M. Williams, and\n   C. Gutierrez, Editors, \"Computers,\
    \ Ethics, and Society\", Oxford\n   University Press, NY, 1990.  (376 pages, includes\
    \ bibliographical\n   references).\n   [Farmer and Spafford, 1990] D. Farmer and\
    \ E. Spafford, \"The COPS\n   Security Checker System\", Proceedings of the Summer\
    \ 1990 USENIX\n   Conference, Anaheim, CA, Pgs. 165-170, June 1990.\n   [Farrow,\
    \ 1991] Rik Farrow, \"UNIX Systems Security\", Addison-Wesley,\n   Reading, MA,\
    \ 1991.\n   [Fenwick, 1985] W. Fenwick, Chair, \"Computer Litigation, 1985: Trial\n\
    \   Tactics and Techniques\", Litigation Course Handbook Series No. 280,\n   Prepared\
    \ for distribution at the Computer Litigation, 1985: Trial\n   Tactics and Techniques\
    \ Program, February-March 1985.\n   [Fites 1989] M. Fites, P. Kratz, and A. Brebner,\
    \ \"Control and\n   Security of Computer Information Systems\", Computer Science\
    \ Press,\n   1989.\n   [Fites, Johnson, and Kratz, 1992] Fites, Johnson, and Kratz,\
    \ \"The\n   Computer Virus Crisis\", Van Hostrand Reinhold, 2nd edition, 1992.\n\
    \   [Forester and Morrison, 1990] T. Forester, and P. Morrison, \"Computer\n \
    \  Ethics: Tales and Ethical Dilemmas in Computing\", MIT Press,\n   Cambridge,\
    \ MA, 1990.\n   [Foster and Morrision, 1990] T. Forester, and P. Morrison, \"\
    Computer\n   Ethics: Tales and Ethical Dilemmas in Computing\", MIT Press,\n \
    \  Cambridge, MA, 1990.  (192 pages including index.)\n   [GAO/IMTEX-89-57, 1989]\
    \ U.S. General Accounting Office, \"Computer\n   Security - Virus Highlights Need\
    \ for Improved Internet Management\",\n   United States General Accounting Office,\
    \ Washington, DC, 1989.\n   [Garfinkel and Spafford, 1991] S. Garfinkel, and E.\
    \ Spafford,\n   \"Practical Unix Security\", O'Reilly & Associates, ISBN 0-937175-72-2,\n\
    \   May 1991.\n   [Garfinkel, 1995] S. Garfinkel, \"PGP:Pretty Good Privacy\"\
    , O'Reilly &\n   Associates, Sebastopol, CA, 1996.\n   [Garfinkel and Spafford,\
    \ 1996] S. Garfinkel and E. Spafford,\n   \"Practical UNIX and Internet Security\"\
    , O'Reilly & Associates,\n   Sebastopol, CA, 1996.\n   [Gemignani, 1989] M. Gemignani,\
    \ \"Viruses and Criminal Law\",\n   Communications of the ACM, Vol. 32, No. 6,\
    \ Pgs. 669-671, June 1989.\n   [Goodell, 1996] J. Goodell, \"The Cyberthief and\
    \ the Samurai: The True\n   Story of Kevin Mitnick-And The Man Who Hunted Him\
    \ Down\", Dell\n   Publishing, 1996.\n   [Gould, 1989] C. Gould, Editor, \"The\
    \ Information Web: Ethical and\n   Social Implications of Computer Networking\"\
    , Westview Press, Boulder,\n   CO, 1989.\n   [Greenia, 1989] M. Greenia, \"Computer\
    \ Security Information\n   Sourcebook\", Lexikon Services, Sacramento, CA, 1989.\n\
    \   [Hafner and Markoff, 1991] K. Hafner and J. Markoff, \"Cyberpunk:\n   Outlaws\
    \ and Hackers on the Computer Frontier\", Touchstone, Simon &\n   Schuster, 1991.\n\
    \   [Hess, Safford, and Pooch] D. Hess, D. Safford, and U. Pooch, \"A Unix\n \
    \  Network Protocol Security Study: Network Information Service\", Texas\n   A&M\
    \ University.\n   [Hoffman, 1990] L. Hoffman, \"Rogue Programs: Viruses, Worms,\
    \ and\n   Trojan Horses\", Van Nostrand Reinhold, NY, 1990.  (384 pages,\n   includes\
    \ bibliographical references and index.)\n   [Howard, 1995] G. Howard, \"Introduction\
    \ to Internet Security: From\n   Basics to Beyond\", Prima Publishing, Rocklin,\
    \ CA, 1995.\n   [Huband and Shelton, 1986] F. Huband, and R. Shelton, Editors,\n\
    \   \"Protection of Computer Systems and Software: New Approaches for\n   Combating\
    \ Theft of Software and Unauthorized Intrusion\", Papers\n   presented at a workshop\
    \ sponsored by the National Science Foundation,\n   1986.\n   [Hughes, 1995] L.\
    \ Hughes Jr., \"Actually Useful Internet Security\n   Techniques\", New Riders\
    \ Publishing, Indianapolis, IN, 1995.\n   [IAB-RFC1087, 1989] Internet Activities\
    \ Board, \"Ethics and the\n   Internet\", RFC 1087, IAB, January 1989.  Also appears\
    \ in the\n   Communications of the ACM, Vol. 32, No. 6, Pg. 710, June 1989.\n\
    \   [Icove, Seger, and VonStorch, 1995] D. Icove, K. Seger, and W.\n   VonStorch,\
    \ \"Computer Crime: A Crimefighter's Handbook\", O'Reilly &\n   Associates, Sebastopol,\
    \ CA, 1995.\n   [IVPC, 1996] IVPC, \"International Virus Prevention Conference\
    \ '96\n   Proceedings\", NCSA, 1996.\n   [Johnson and Podesta] D. Johnson, and\
    \ J. Podesta, \"Formulating A\n   Company Policy on Access to and Use and Disclosure\
    \ of Electronic Mail\n   on Company Computer Systems\".\n   [Kane, 1994] P. Kane,\
    \ \"PC Security and Virus Protection Handbook: The\n   Ongoing War Against Information\
    \ Sabotage\", M&T Books, 1994.\n   [Kaufman, Perlman, and Speciner, 1995] C. Kaufman,\
    \ R. Perlman, and M.\n   Speciner, \"Network Security: PRIVATE Communication in\
    \ a PUBLIC\n   World\", Prentice Hall, Englewood Cliffs, NJ, 1995.\n   [Kent,\
    \ 1990] S. Kent, \"E-Mail Privacy for the Internet: New Software\n   and Strict\
    \ Registration Procedures will be Implemented this Year\",\n   Business Communications\
    \ Review, Vol. 20, No. 1, Pg. 55, 1 January\n   1990.\n   [Levy, 1984] S. Levy,\
    \ \"Hacker: Heroes of the Computer Revolution\",\n   Delta, 1984.\n   [Lewis,\
    \ 1996] S. Lewis, \"Disaster Recovery Yellow Pages\", The Systems\n   Audit Group,\
    \ 1996.\n   [Littleman, 1996] J. Littleman, \"The Fugitive Game: Online with Kevin\n\
    \   Mitnick\", Little, Brown, Boston, MA., 1996.\n   [Lu and Sundareshan, 1989]\
    \ W. Lu and M. Sundareshan, \"Secure\n   Communication in Internet Environments:\
    \ A Hierarchical Key Management\n   Scheme for End-to-End Encryption\", IEEE Transactions\
    \ on\n   Communications, Vol. 37, No. 10, Pg. 1014, 1 October 1989.\n   [Lu and\
    \ Sundareshan, 1990] W. Lu and M. Sundareshan, \"A Model for\n   Multilevel Security\
    \ in Computer Networks\", IEEE Transactions on\n   Software Engineering, Vol.\
    \ 16, No. 6, Page 647, 1 June 1990.\n   [Martin and Schinzinger, 1989] M. Martin,\
    \ and R. Schinzinger, \"Ethics\n   in Engineering\", McGraw Hill, 2nd Edition,\
    \ 1989.\n   [Merkle] R. Merkle, \"A Fast Software One Way Hash Function\", Journal\n\
    \   of Cryptology, Vol. 3, No. 1.\n   [McEwen, 1989] J. McEwen, \"Dedicated Computer\
    \ Crime Units\", Report\n   Contributors: D. Fester and H. Nugent, Prepared for\
    \ the National\n   Institute of Justice, U.S. Department of Justice, by Institute\
    \ for\n   Law and Justice, Inc., under contract number OJP-85-C-006,\n   Washington,\
    \ DC, 1989.\n   [MIT, 1989] Massachusetts Institute of Technology, \"Teaching\
    \ Students\n   About Responsible Use of Computers\", MIT, 1985-1986.  Also reprinted\n\
    \   in the Communications of the ACM, Vol. 32, No. 6, Pg. 704, Athena\n   Project,\
    \ MIT, June 1989.\n   [Mogel, 1989] Mogul, J., \"Simple and Flexible Datagram\
    \ Access\n   Controls for UNIX-based Gateways\", Digital Western Research\n  \
    \ Laboratory Research Report 89/4, March 1989.\n   [Muffett, 1992] A. Muffett,\
    \ \"Crack Version 4.1: A Sensible Password\n   Checker for Unix\"\n   [NCSA1,\
    \ 1995] NCSA, \"NCSA Firewall Policy Guide\", 1995.\n   [NCSA2, 1995] NCSA, \"\
    NCSA's Corporate Computer Virus Prevention\n   Policy Model\", NCSA, 1995.\n \
    \  [NCSA, 1996] NCSA, \"Firewalls & Internet Security Conference '96\n   Proceedings\"\
    , 1996.\n   [NCSC-89-660-P, 1990] National Computer Security Center, \"Guidelines\n\
    \   for Formal Verification Systems\", Shipping list no.: 89-660-P, The\n   Center,\
    \ Fort George G. Meade, MD, 1 April 1990.\n   [NCSC-89-254-P, 1988] National Computer\
    \ Security Center, \"Glossary of\n   Computer Security Terms\", Shipping list\
    \ no.: 89-254-P, The Center,\n   Fort George G. Meade, MD, 21 October 1988.\n\
    \   [NCSC-C1-001-89, 1989] Tinto, M., \"Computer Viruses: Prevention,\n   Detection,\
    \ and Treatment\", National Computer Security Center C1\n   Technical Report C1-001-89,\
    \ June 1989.\n   [NCSC Conference, 1989] National Computer Security Conference,\
    \ \"12th\n   National Computer Security Conference: Baltimore Convention Center,\n\
    \   Baltimore, MD, 10-13 October, 1989: Information Systems Security,\n   Solutions\
    \ for Today - Concepts for Tomorrow\", National Institute of\n   Standards and\
    \ National Computer Security Center, 1989.\n   [NCSC-CSC-STD-003-85, 1985] National\
    \ Computer Security Center,\n   \"Guidance for Applying the Department of Defense\
    \ Trusted Computer\n   System Evaluation Criteria in Specific Environments\",\
    \ CSC-STD-003-85,\n   NCSC, 25 June 1985.\n   [NCSC-STD-004-85, 1985] National\
    \ Computer Security Center, \"Technical\n   Rationale Behind CSC-STD-003-85: Computer\
    \ Security Requirements\",\n   CSC-STD-004-85, NCSC, 25 June 1985.\n   [NCSC-STD-005-85,\
    \ 1985] National Computer Security Center, \"Magnetic\n   Remanence Security Guideline\"\
    , CSC-STD-005-85, NCSC, 15 November\n   1985.\n   [NCSC-TCSEC, 1985] National\
    \ Computer Security Center, \"Trusted\n   Computer System Evaluation Criteria\"\
    , DoD 5200.28-STD, CSC-STD-001-\n   83, NCSC, December 1985.\n   [NCSC-TG-003,\
    \ 1987] NCSC, \"A Guide to Understanding DISCRETIONARY\n   ACCESS CONTROL in Trusted\
    \ Systems\", NCSC-TG-003, Version-1, 30\n   September 1987, 29 pages.\n   [NCSC-TG-001,\
    \ 1988] NCSC, \"A Guide to Understanding AUDIT in Trusted\n   Systems\", NCSC-TG-001,\
    \ Version-2, 1 June 1988, 25 pages.\n   [NCSC-TG-004, 1988] National Computer\
    \ Security Center, \"Glossary of\n   Computer Security Terms\", NCSC-TG-004, NCSC,\
    \ 21 October 1988.\n   [NCSC-TG-005, 1987] National Computer Security Center,\
    \ \"Trusted\n   Network Interpretation\", NCSC-TG-005, NCSC, 31 July 1987.\n \
    \  [NCSC-TG-006, 1988] NCSC, \"A Guide to Understanding CONFIGURATION\n   MANAGEMENT\
    \ in Trusted Systems\", NCSC-TG-006, Version-1, 28 March\n   1988, 31 pages.\n\
    \   [NCSC-TRUSIX, 1990] National Computer Security Center, \"Trusted UNIX\n  \
    \ Working Group (TRUSIX) rationale for selecting access control list\n   features\
    \ for the UNIX system\", Shipping list no.: 90-076-P, The\n   Center, Fort George\
    \ G. Meade, MD, 1990.\n   [NRC, 1991] National Research Council, \"Computers at\
    \ Risk: Safe\n   Computing in the Information Age\", National Academy Press, 1991.\n\
    \   [Nemeth, et. al, 1995] E. Nemeth, G. Snyder, S. Seebass, and T. Hein,\n  \
    \ \"UNIX Systems Administration Handbook\", Prentice Hall PTR, Englewood\n   Cliffs,\
    \ NJ, 2nd ed. 1995.\n   [NIST, 1989] National Institute of Standards and Technology,\n\
    \   \"Computer Viruses and Related Threats: A Management Guide\", NIST\n   Special\
    \ Publication 500-166, August 1989.\n   [NSA] National Security Agency, \"Information\
    \ Systems Security\n   Products and Services Catalog\", NSA, Quarterly Publication.\n\
    \   [NSF, 1988] National Science Foundation, \"NSF Poses Code of\n   Networking\
    \ Ethics\", Communications of the ACM, Vol. 32, No. 6, Pg.\n   688, June 1989.\
    \  Also appears in the minutes of the regular meeting\n   of the Division Advisory\
    \ Panel for Networking and Communications\n   Research and Infrastructure, Dave\
    \ Farber, Chair, November 29-30,\n   1988.\n   [NTISSAM, 1987] NTISS, \"Advisory\
    \ Memorandum on Office Automation\n   Security Guideline\", NTISSAM COMPUSEC/1-87,\
    \ 16 January 1987, 58\n   pages.\n   [OTA-CIT-310, 1987] United States Congress,\
    \ Office of Technology\n   Assessment, \"Defending Secrets, Sharing Data: New\
    \ Locks and Keys for\n   Electronic Information\", OTA-CIT-310, October 1987.\n\
    \   [OTA-TCT-606] Congress of the United States, Office of Technology\n   Assessment,\
    \ \"Information Security and Privacy in Network\n   Environments\", OTA-TCT-606,\
    \ September 1994.\n   [Palmer and Potter, 1989] I. Palmer, and G. Potter, \"Computer\n\
    \   Security Risk Management\", Van Nostrand Reinhold, NY, 1989.\n   [Parker,\
    \ 1989] D. Parker, \"Computer Crime: Criminal Justice Resource\n   Manual\", U.S.\
    \ Dept. of Justice, National Institute of Justice, Office\n   of Justice Programs,\
    \ Under Contract Number OJP-86-C-002, Washington,\n   D.C., August 1989.\n   [Parker,\
    \ Swope, and Baker, 1990] D. Parker, S. Swope, and B. Baker,\n   \"Ethical Conflicts:\
    \ Information and Computer Science, Technology and\n   Business\", QED Information\
    \ Sciences, Inc., Wellesley, MA. (245\n   pages).\n   [Pfleeger, 1989] C. Pfleeger,\
    \ \"Security in Computing\", Prentice-Hall,\n   Englewood Cliffs, NJ, 1989.\n\
    \   [Quarterman, 1990] J. Quarterman, J., \"The Matrix: Computer Networks\n  \
    \ and Conferencing Systems Worldwide\", Digital Press, Bedford, MA,\n   1990.\n\
    \   [Ranum1, 1992] M. Ranum, \"An Internet Firewall\", Proceedings of World\n\
    \   Conference on Systems Management and Security, 1992.\n   [Ranum2, 1992] M.\
    \ Ranum, \"A Network Firewall\", Digital Equipment\n   Corporation Washington\
    \ Open Systems Resource Center, June 12, 1992.\n   [Ranum, 1993] M. Ranum, \"\
    Thinking About Firewalls\", 1993.\n   [Ranum and Avolio, 1994] M. Ranum and F.\
    \ Avolio, \"A Toolkit and\n   Methods for Internet Firewalls\", Trustest Information\
    \ Systems, 1994.\n   [Reinhardt, 1992] R. Reinhardt, \"An Architectural Overview\
    \ of UNIX\n   Network Security\"\n   [Reinhardt, 1993] R. Reinhardt, \"An Architectural\
    \ Overview of UNIX\n   Network Security\", ARINC Research Corporation, February\
    \ 18, 1993.\n   [Reynolds-RFC1135, 1989] The Helminthiasis of the Internet, RFC\
    \ 1135,\n   USC/Information Sciences Institute, Marina del Rey, CA, December\n\
    \   1989.\n   [Russell and Gangemi, 1991] D. Russell and G. Gangemi, \"Computer\n\
    \   Security Basics\" O'Reilly & Associates, Sebastopol, CA, 1991.\n   [Schneier\
    \ 1996] B. Schneier, \"Applied Cryptography: Protocols,\n   Algorithms, and Source\
    \ Code in C\", John Wiley & Sons, New York,\n   second edition, 1996.\n   [Seeley,\
    \ 1989] D. Seeley, \"A Tour of the Worm\", Proceedings of 1989\n   Winter USENIX\
    \ Conference, Usenix Association, San Diego, CA, February\n   1989.\n   [Shaw,\
    \ 1986] E. Shaw Jr., \"Computer Fraud and Abuse Act of 1986\",\n   Congressional\
    \ Record (3 June 1986), Washington, D.C., 3 June 1986.\n   [Shimomura, 1996] T.\
    \ Shimomura with J. Markoff, \"Takedown:The Pursuit\n   and Capture of Kevin Mitnick,\
    \ America's Most Wanted Computer Outlaw-\n   by the Man Who Did It\", Hyperion,\
    \ 1996.\n   [Shirey, 1990] R. Shirey, \"Defense Data Network Security\n   Architecture\"\
    , Computer Communication Review, Vol. 20, No. 2, Page\n   66, 1 April 1990.\n\
    \   [Slatalla and Quittner, 1995] M. Slatalla and J. Quittner, \"Masters\n   of\
    \ Deception: The Gang that Ruled Cyberspace\", Harper Collins\n   Publishers,\
    \ 1995.\n   [Smith, 1989] M. Smith, \"Commonsense Computer Security: Your\n  \
    \ Practical Guide to Preventing Accidental and Deliberate Electronic\n   Data\
    \ Loss\", McGraw-Hill, New York, NY, 1989.\n   [Smith, 1995] D. Smith, \"Forming\
    \ an Incident Response Team\", Sixth\n   Annual Computer Security Incident Handling\
    \ Workshop, Boston, MA, July\n   25-29, 1995.\n   [Spafford, 1988] E. Spafford,\
    \ \"The Internet Worm Program: An\n   Analysis\", Computer Communication Review,\
    \ Vol. 19, No. 1, ACM SIGCOM,\n   January 1989.  Also issued as Purdue CS Technical\
    \ Report CSD-TR-823,\n   28 November 1988.\n   [Spafford, 1989] G. Spafford, \"\
    An Analysis of the Internet Worm\",\n   Proceedings of the European Software Engineering\
    \ Conference 1989,\n   Warwick England, September 1989.  Proceedings published\
    \ by Springer-\n   Verlag as: Lecture Notes in Computer Science #387.  Also issued\
    \ as\n   Purdue Technical Report #CSD-TR-933.\n   [Spafford, Keaphy, and Ferbrache,\
    \ 1989] E. Spafford, K. Heaphy, and\n   D. Ferbrache, \"Computer Viruses: Dealing\
    \ with Electronic Vandalism\n   and Programmed Threats\", ADAPSO, 1989. (109 pages.)\n\
    \   [Stallings1, 1995] W. Stallings, \"Internet Security Handbook\", IDG\n   Books,\
    \ Foster City CA, 1995.\n   [Stallings2, 1995] W. Stallings, \"Network and InterNetwork\
    \ Security\",\n   Prentice Hall, , 1995.\n   [Stallings3, 1995] W. Stallings,\
    \ \"Protect Your Privacy: A Guide for\n   PGP Users\"  PTR Prentice Hall, 1995.\n\
    \   [Stoll, 1988] C. Stoll, \"Stalking the Wily Hacker\", Communications of\n\
    \   the ACM, Vol. 31, No. 5, Pgs. 484-497, ACM, New York, NY, May 1988.\n   [Stoll,\
    \ 1989] C. Stoll, \"The Cuckoo's Egg\", ISBN 00385-24946-2,\n   Doubleday, 1989.\n\
    \   [Treese and Wolman, 1993] G. Treese and A. Wolman, \"X Through the\n   Firewall,\
    \ and Other Applications Relays\", Digital Equipment\n   Corporation, Cambridge\
    \ Research Laboratory, CRL 93/10, May 3, 1993.\n   [Trible, 1986] P. Trible, \"\
    The Computer Fraud and Abuse Act of 1986\",\n   U.S. Senate Committee on the Judiciary,\
    \ 1986.\n   [Venema] W. Venema, \"TCP WRAPPER: Network monitoring, access control,\n\
    \   and booby traps\", Mathematics and Computing Science, Eindhoven\n   University\
    \ of Technology, The Netherlands.\n   [USENIX, 1988] USENIX, \"USENIX Proceedings:\
    \ UNIX Security Workshop\",\n   Portland, OR, August 29-30, 1988.\n   [USENIX,\
    \ 1990] USENIX, \"USENIX Proceedings: UNIX Security II\n   Workshop\", Portland,\
    \ OR, August 27-28, 1990.\n   [USENIX, 1992] USENIX, \"USENIX Symposium Proceedings:\
    \ UNIX Security\n   III\", Baltimore, MD, September 14-16, 1992.\n   [USENIX,\
    \ 1993] USENIX, \"USENIX Symposium Proceedings: UNIX Security\n   IV\", Santa\
    \ Clara, CA, October 4-6, 1993.\n   [USENIX, 1995] USENIX, \"The Fifth USENIX\
    \ UNIX Security Symposium\",\n   Salt Lake City, UT, June 5-7, 1995.\n   [Wood,\
    \ et.al., 1987] C. Wood, W. Banks, S. Guarro, A. Garcia, V.\n   Hampel, and H.\
    \ Sartorio, \"Computer Security:  A Comprehensive\n   Controls Checklist\", John\
    \ Wiley and Sons, Interscience Publication,\n   1987.\n   [Wrobel, 1993] L. Wrobel,\
    \ \"Writing Disaster Recovery Plans for\n   Telecommunications Networks and LANS\"\
    , Artech House, 1993.\n   [Vallabhaneni, 1989] S. Vallabhaneni, \"Auditing Computer\
    \ Security: A\n   Manual with Case Studies\", Wiley, New York, NY, 1989.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   This entire document discusses security issues.\n"
- title: Editor Information
  contents:
  - "Editor Information\n   Barbara Y. Fraser\n   Software Engineering Institute\n\
    \   Carnegie Mellon University\n   5000 Forbes Avenue\n   Pittsburgh, PA 15213\n\
    \   Phone: (412) 268-5010\n   Fax:   (412) 268-6989\n   EMail: byf@cert.org\n"
