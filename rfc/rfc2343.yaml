- title: __initial_text__
  contents:
  - '                  RTP Payload Format for Bundled MPEG

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  This memo does not specify an Internet standard of any\n   kind.\
    \  Discussion and suggestions for improvement are requested.\n   Distribution\
    \ of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes a payload type for bundled, MPEG-2 encoded\n\
    \   video and audio data that may be used with RTP, version 2. Bundling\n   has\
    \ some advantages for this payload type particularly when it is\n   used for video-on-demand\
    \ applications. This payload type may be used\n   when its advantages are important\
    \ enough to sacrifice the modularity\n   of having separate audio and video streams.\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   This document describes a bundled packetization scheme for\
    \ MPEG-2\n   encoded audio and video streams using the Real-time Transport\n \
    \  Protocol (RTP), version 2 [1].\n   The MPEG-2 International standard consists\
    \ of three layers: audio,\n   video and systems [2]. The audio and the video layers\
    \ define the\n   syntax and semantics of the corresponding \"elementary streams.\"\
    \ The\n   systems layer supports synchronization and interleaving of multiple\n\
    \   compressed streams, buffer initialization and management, and time\n   identification.\
    \  RFC 2250 [3] describes packetization techniques to\n   transport individual\
    \ audio and video elementary streams as well as\n   the transport stream, which\
    \ is defined at the system layer, using the\n   RTP.\n   The bundled packetization\
    \ scheme is needed because it has several\n   advantages over other schemes for\
    \ some important applications\n   including video-on-demand (VOD) where, audio\
    \ and video are always\n   used together.  Its advantages over independent packetization\
    \ of\n   audio and video are:\n     1. Uses a single port per \"program\" (i.e.\
    \ bundled A/V).  This may\n     increase the number of streams that can be served\
    \ e.g., from a VOD\n     server. Also, it eliminates the performance hit when\
    \ two ports are\n     used for the separate audio and video streams on the client\
    \ side.\n     2. Provides implicit synchronization of audio and video.  This is\n\
    \     particularly convenient when the A/V data is stored in an\n     interleaved\
    \ format at the server.\n     3. Reduces the header overhead. Since using large\
    \ packets increases\n     the effects of losses and delay, audio only packets\
    \ need to be\n     smaller increasing the overhead. An A/V bundled format can\
    \ provide\n     about 1% overall overhead reduction. Considering the high bitrates\n\
    \     used for MPEG-2 encoded material, e.g. 4 Mbps, the number of bits\n    \
    \ saved, e.g. 40 Kbps, may provide noticeable audio or video quality\n     improvement.\n\
    \     4. May reduce overall receiver buffer size. Audio and video streams\n  \
    \   may experience different delays when transmitted separately. The\n     receiver\
    \ buffers need to be designed for the longest of these\n     delays. For example,\
    \ let's assume that using two buffers, each with\n     a size B, is sufficient\
    \ with probability P when each stream is\n     transmitted individually. The probability\
    \ that the same buffer size\n     will be sufficient when both streams need to\
    \ be received is P times\n     the conditional probability of B being sufficient\
    \ for the second\n     stream given that it was sufficient for the first one.\
    \ This\n     conditional probability is, generally, less than one requiring use\n\
    \     of a larger buffer size to achieve the same probability level.\n     5.\
    \ May help with the control of the overall bandwidth used by an\n     A/V program.\n\
    \   And, the advantages over packetization of the transport layer streams\n  \
    \ are:\n     1. Reduced overhead. It does not contain systems layer information\n\
    \     which is redundant for the RTP (essentially they address similar\n     issues).\n\
    \     2. Easier error recovery. Because of the structured packetization\n    \
    \ consistent with the application layer framing (ALF) principle, loss\n     concealment\
    \ and error recovery can be made simpler and more\n     effective.\n"
- title: 2. Encapsulation of Bundled MPEG Video and Audio
  contents:
  - "2. Encapsulation of Bundled MPEG Video and Audio\n   Video encapsulation follows\
    \ rules similar to the ones described in\n   [3] for encapsulation of MPEG elementary\
    \ streams. Specifically,\n     1. The MPEG Video_Sequence_Header, when present,\
    \ will always be at\n     the beginning of an RTP payload.\n     2. An MPEG GOP_header,\
    \ when present, will always be at the\n     beginning of the RTP payload, or will\
    \ follow a\n     Video_Sequence_Header.\n     3. An MPEG Picture_Header, when\
    \ present, will always be at the\n     beginning of a RTP payload, or will follow\
    \ a GOP_header.\n   In addition to these, it is required that:\n     4. Each packet\
    \ must contain an integral number of video slices.\n   It is the application's\
    \ responsibility to adjust the slice sizes and\n   the number of slices put in\
    \ each RTP packet so that lower level\n   fragmentation does not occur. This approach\
    \ simplifies the receivers\n   while somewhat increasing the complexity of the\
    \ transmitter's\n   packetizer. Considering that a slice can be as small as a\
    \ single\n   macroblock, it is possible to prevent fragmentation for most of the\n\
    \   cases.  If a packet size exceeds the path maximum transmission unit\n   (path-MTU)\
    \ [4], this payload type depends on the lower protocol\n   layers for fragmentation\
    \ although, this may cause problems with\n   packet classification for integrated\
    \ services (e.g. with RSVP).\n   The video data is followed by a sufficient number\
    \ of integral audio\n   frames to cover the duration of the video segment included\
    \ in a\n   packet.  For example, if the first packet contains three 1/900\n  \
    \ seconds long slices of video, and Layer I audio coding is used at a\n   44.1kHz\
    \ sampling rate, only one audio frame covering 384/44100\n   seconds of audio\
    \ need be included in this packet. Since the length of\n   this audio frame (8.71\
    \ msec.) is longer than that of the video\n   segment contained in this packet\
    \ (3.33 msec), the next few packets\n   may not contain any audio frames until\
    \ the packet in which the\n   covered video time extends outside the length of\
    \ the previously\n   transmitted audio frames. Alternatively, it is possible,\
    \ in this\n   proposal, to repeat the latest audio frame in \"no-audio\" packets\
    \ for\n   packet loss resilience. Again, it is the application's responsibility\n\
    \   to adjust the bundled packet size according to the minimum MTU size\n   to\
    \ prevent fragmentation.\n"
- title: 2.1. RTP Fixed Header for BMPEG Encapsulation
  contents:
  - "2.1. RTP Fixed Header for BMPEG Encapsulation\n   The following RTP header fields\
    \ are used:\n     Payload Type: A distinct payload type number, which may be dynamic,\n\
    \     should be assigned to BMPEG.\n     M Bit: Set for packets containing end\
    \ of a picture.\n     timestamp: 32-bit 90 kHz timestamp representing sampling\
    \ time of\n     the MPEG picture. May not be monotonically increasing if B pictures\n\
    \     are present. Same for all packets belonging to the same picture.\n     For\
    \ packets that contain only a sequence, extension and/or GOP\n     header, the\
    \ timestamp is that of the subsequent picture.\n"
- title: '2.2. BMPEG Specific Header:'
  contents:
  - "2.2. BMPEG Specific Header:\n    0                   1                   2  \
    \                 3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | P |N|MBZ|    Audio Length   | |         Audio Offset          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                                 MBZ\n    P: Picture type (2 bits). I (0), P\
    \ (1), B (2).\n    N: Header data changed (1 bit). Set if any part of the video\n\
    \    sequence, extension, GOP and picture header data is different than\n    that\
    \ of the previously sent headers. It gets reset when all the\n    header data\
    \ gets repeated (see Appendix 1).\n    MBZ: Must be zero. Reserved for future\
    \ use.\n    Audio Length: (10 bits) Length of the audio data in this packet in\n\
    \    bytes. Start of the audio data is found by subtracting \"Audio\n    Length\"\
    \ from the total length of the received packet.\n    Audio Offset: (16 bits) The\
    \ offset between the start of the audio\n    frame and the RTP timestamp for this\
    \ packet in number of audio\n    samples (for multi-channel sources, a set of\
    \ samples covering all\n    channels is counted as one sample for this purpose.)\n\
    \    Audio offset is a signed integer in two's complement form. It allows\n  \
    \  a ~ +/- 750 msec offset at 44.1 KHz audio sampling rate. For a very\n    low\
    \ video frame rate (e.g., a frame per second), this offset may not\n    be sufficient\
    \ and this payload format may not be usable.\n    If  B frames are present, audio\
    \ frames are not re-ordered along with\n    video.  Instead, they are packetized\
    \ along with video frames in\n    their transmission order  (e.g., an audio segment\
    \ packetized with a\n    video segment corresponding to a P picture may belong\
    \ to a B\n    picture, which will be transmitted later and should be rendered\
    \ at\n    the same time with this audio segment.) Even though the video\n    segments\
    \ are reordered, the audio offset for a particular audio\n    segment is still\
    \ relative to the RTP timestamp in the packet\n    containing that audio segment.\n\
    \    Since a special picture counter, such as  the \"temporal reference\n    (TR)\"\
    \ field of [3], is not included in this payload format, lost GOP\n    headers\
    \ may not be detected.  The only effect of this may be\n    incorrect decoding\
    \ of the B pictures immediately following the lost\n    GOP header for some edited\
    \ video material.\n"
- title: 3. Security Considerations
  contents:
  - "3. Security Considerations\n   RTP packets using the payload format defined in\
    \ this specification\n   are subject to the security considerations discussed\
    \ in the RTP\n   specification [1]. This implies that confidentiality of the media\n\
    \   streams is achieved by encryption. Because the data compression used\n   with\
    \ this payload format is applied end-to-end, encryption may be\n   performed after\
    \ compression so there is no conflict between the two\n   operations.\n   This\
    \ payload type does not exhibit any significant non-uniformity in\n   the receiver\
    \ side computational complexity for packet processing  to\n   cause a potential\
    \ denial-of-service threat.\n   A security review of this payload format found\
    \ no additional\n   considerations beyond those in the RTP specification.\n"
- title: Appendix 1. Error Recovery
  contents:
  - "Appendix 1. Error Recovery\n   Packet losses can be detected from a combination\
    \ of the sequence\n   number and the timestamp fields of the RTP fixed header.\
    \ The extent\n   of the loss can be determined from the timestamp, the slice number\n\
    \   and the horizontal location of the first slice in the packet. The\n   slice\
    \ number and the horizontal location can be determined from the\n   slice header\
    \ and the first macroblock address increment, which are\n   located at fixed bit\
    \ positions.\n   If lost data consists of slices all from the same picture, new\
    \ data\n   following the loss may simply be given to the video decoder which\n\
    \   will normally repeat missing pixels from a previous picture. The next\n  \
    \ audio frame must be played at the appropriate time determined by the\n   timestamp\
    \ and the audio offset contained in the received packet.\n   Appropriate audio\
    \ frames (e.g., representing background noise) may\n   need to be fed to the audio\
    \ decoder in place of the lost audio frames\n   to keep the lip-synch and/or to\
    \ conceal the effects of the losses.\n   If the received new data after a loss\
    \ is from the next picture (i.e.\n   no complete picture loss) and the N bit is\
    \ not set, previously\n   received headers for the particular picture type (determined\
    \ from the\n   P bits) can be given to the video decoder followed by the new data.\n\
    \   If N is set, data deletion until a new picture start code is\n   advisable\
    \ unless headers are made available to the receiver through\n   some other channel.\n\
    \   If data for more than one picture is lost and headers are not\n   available,\
    \ unless N is zero and at least one packet has been received\n   for every intervening\
    \ picture of the same type and that the N bit was\n   0 for each of those pictures,\
    \ resynchronization to a new video\n   sequence header is advisable.\n   In all\
    \ cases of heavy packet losses, if the correct headers for the\n   missing Pictures\
    \ are available, they can be given to the video\n   decoder and the received data\
    \ can be used irrespective of the N bit\n   value or the number of lost pictures.\n"
- title: Appendix 2. Resynchronization
  contents:
  - "Appendix 2. Resynchronization\n   As described in [3], use of frequent video\
    \ sequence headers makes it\n   possible to join in a program at arbitrary times.\
    \ Also, it reduces\n   the resynchronization time after severe losses.\n"
- title: References
  contents:
  - "References\n   [1] Schulzrinne, H., Casner, S., Frederick, R., and V. Jacobson,\n\
    \       \"RTP: A Transport Protocol for Real-Time Applications\", RFC 1889,\n\
    \       January 1996.\n   [2] ISO/IEC International Standard 13818; \"Generic\
    \ coding of moving\n       pictures and associated audio information,\" November\
    \ 1994.\n   [3] Hoffman, D., Fernando, G., Goyal, V., and M. Civanlar, \"RTP\n\
    \       Payload Format for MPEG1/MPEG2 Video\", RFC 2250, January 1998.\n   [4]\
    \ Mogul, J., and S. Deering, \"Path MTU Discovery\", RFC 1191,\n       November\
    \ 1990.\n"
- title: Authors'  Addresses
  contents:
  - "Authors'  Addresses\n   M. Reha Civanlar\n   AT&T Labs-Research\n   100 Schultz\
    \ Drive\n   Red Bank, NJ 07701\n   USA\n   EMail: civanlar@research.att.com\n\
    \   Glenn L. Cash\n   AT&T Labs-Research\n   100 Schultz Drive\n   Red Bank, NJ\
    \ 07701\n   USA\n   EMail: glenn@research.att.com\n   Barry G. Haskell\n   AT&T\
    \ Labs-Research\n   100 Schultz Drive\n   Red Bank, NJ 07701\n   USA\n   EMail:\
    \ bgh@research.att.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (1998).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
