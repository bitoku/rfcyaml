- title: __initial_text__
  contents:
  - '                        BGP-4 Protocol Analysis

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  This memo\n   does not specify an Internet standard of any kind.  Distribution\
    \ of\n   this memo is unlimited.\n"
- title: Introduction
  contents:
  - "Introduction\n   The purpose of this report is to document how the requirements\
    \ for\n   advancing a routing protocol to Draft Standard have been satisfied by\n\
    \   the Border Gateway Protocol version 4 (BGP-4). This report summarizes\n  \
    \ the key features of BGP, and analyzes the protocol with respect to\n   scaling\
    \ and performance. This is the first of two reports on the BGP\n   protocol.\n\
    \   BGP-4 is an inter-autonomous system routing protocol designed for\n   TCP/IP\
    \ internets.  Version 1 of the BGP protocol was published in RFC\n   1105. Since\
    \ then BGP versions 2, 3, and 4 have been developed.\n   Version 2 was documented\
    \ in RFC 1163. Version 3 is documented in\n   RFC1267.  The changes between versions\
    \ are explained in Appendix 2 of\n   [1].\n   Possible applications of BGP in\
    \ the Internet are documented in [2].\n   Please send comments to iwg@ans.net.\n"
- title: Key features and algorithms of the BGP-4 protocol.
  contents:
  - "Key features and algorithms of the BGP-4 protocol.\n   This section summarizes\
    \ the key features and algorithms of the BGP\n   protocol. BGP is an inter-autonomous\
    \ system routing protocol; it is\n   designed to be used between multiple autonomous\
    \ systems. BGP assumes\n   that routing within an autonomous system is done by\
    \ an intra-\n   autonomous system routing protocol. BGP does not make any assumptions\n\
    \   about intra-autonomous system routing protocols employed by the\n   various\
    \ autonomous systems.  Specifically, BGP does not require all\n   autonomous systems\
    \ to run the same intra-autonomous system routing\n   protocol.\n   BGP is a real\
    \ inter-autonomous system routing protocol. It imposes no\n   constraints on the\
    \ underlying Internet topology. The information\n   exchanged via BGP is sufficient\
    \ to construct a graph of autonomous\n   systems connectivity from which routing\
    \ loops may be pruned and some\n   routing policy decisions at the autonomous\
    \ system level may be\n   enforced.\n   The key features of the protocol are the\
    \ notion of path attributes\n   and aggregation of network layer reachability\
    \ information (NLRI).\n   Path attributes provide BGP with flexibility and expandability.\
    \ Path\n   attributes are partitioned into well-known and optional. The\n   provision\
    \ for optional attributes allows experimentation that may\n   involve a group\
    \ of BGP routers without affecting the rest of the\n   Internet.  New optional\
    \ attributes can be added to the protocol in\n   much the same fashion as new\
    \ options are added to the Telnet\n   protocol, for instance.\n   One of the most\
    \ important path attributes is the AS-PATH. AS\n   reachability information traverses\
    \ the Internet, this information is\n   augmented by the list of autonomous systems\
    \ that have been traversed\n   thus far, forming the AS-PATH.  The AS-PATH allows\
    \ straightforward\n   suppression of the looping of routing information. In addition,\
    \ the\n   AS-PATH serves as a powerful and versatile mechanism for policy-based\n\
    \   routing.\n   BGP-4 enhances the AS-PATH attribute to include sets of autonomous\n\
    \   systems as well as lists.  This extended format allows generated\n   aggregate\
    \ routes to carry path information from the more specific\n   routes used to generate\
    \ the aggregate.\n   BGP uses an algorithm that cannot be classified as either\
    \ a pure\n   distance vector, or a pure link state. Carrying a complete AS path\
    \ in\n   the AS-PATH attribute allows to reconstruct large portions of the\n \
    \  overall topology. That makes it similar to the link state algorithms.\n   Exchanging\
    \ only the currently used routes between the peers makes it\n   similar to the\
    \ distance vector algorithms.\n   To conserve bandwidth and processing power,\
    \ BGP uses incremental\n   updates, where after the initial exchange of complete\
    \ routing\n   information, a pair of BGP routers exchanges only changes (deltas)\
    \ to\n   that information. Technique of incremental updates requires reliable\n\
    \   transport between a pair of BGP routers. To achieve this\n   functionality\
    \ BGP uses TCP as its transport.\n   In addition to incremental updates, BGP-4\
    \ has added the concept of\n   route aggregation so that information about groups\
    \ of networks may\n   represented as a single entity.\n   BGP is a self-contained\
    \ protocol. That is, it specifies how routing\n   information is exchanged both\
    \ between BGP speakers in different\n   autonomous systems, and between BGP speakers\
    \ within a single\n   autonomous system.\n   To allow graceful coexistence with\
    \ EGP and OSPF, BGP provides support\n   for carrying both EGP and OSPF derived\
    \ exterior routes BGP also\n   allows to carry statically defined exterior routes\
    \ or routes derived\n   by other IGP information.\n"
- title: BGP performance characteristics and scalability
  contents:
  - "BGP performance characteristics and scalability\n   In this section we'll try\
    \ to answer the question of how much link\n   bandwidth, router memory and router\
    \ CPU cycles does the BGP protocol\n   consume under normal conditions.  We'll\
    \ also address the scalability\n   of BGP, and look at some of its limits.\n \
    \  BGP does not require all the routers within an autonomous system to\n   participate\
    \ in the BGP protocol. Only the border routers that provide\n   connectivity between\
    \ the local autonomous system and its adjacent\n   autonomous systems participate\
    \ in BGP.  Constraining the set of\n   participants is just one way of addressing\
    \ the scaling issue.\n"
- title: Link bandwidth and CPU utilization
  contents:
  - "Link bandwidth and CPU utilization\n   Immediately after the initial BGP connection\
    \ setup, the peers\n   exchange complete set of routing information. If we denote\
    \ the total\n   number of routes in the Internet by N, the mean AS distance of\
    \ the\n   Internet by M (distance at the level of an autonomous system,\n   expressed\
    \ in terms of the number of autonomous systems), the total\n   number of autonomous\
    \ systems in the Internet by A, and assume that\n   the networks are uniformly\
    \ distributed among the autonomous systems,\n   then the worst case amount of\
    \ bandwidth consumed during the initial\n   exchange between a pair of BGP speakers\
    \ is\n                    MR = O(N + M * A)\n   The following table illustrates\
    \ typical amount of bandwidth consumed\n   during the initial exchange between\
    \ a pair of BGP speakers based on\n   the above assumptions (ignoring bandwidth\
    \ consumed by the BGP\n   Header).\n   # NLRI       Mean AS Distance       # AS's\
    \    Bandwidth\n   ----------   ----------------       ------    ---------\n \
    \  10,000       15                     300       49,000 bytes\n   20,000     \
    \  8                      400       86,000 bytes *\n   40,000       15       \
    \              400       172,000 bytes\n   100,000      20                   \
    \  3,000     520,000 bytes\n   * the actual \"size\" of the Internet at the the\
    \ time of this\n     document's publication\n   Note that most of the bandwidth\
    \ is consumed by the exchange of the\n   Network Layer Reachability Information\
    \ (NLRI).\n   BGP-4 was created specifically to reduce the amount of NLRI entries\n\
    \   carried and exchanged by border routers.  BGP-4, along with CIDR [4]\n   has\
    \ introduced the concept of the \"Supernet\" which describes a\n   power-of-two\
    \ aggregation of more than one class-based network.\n   Due to the advantages\
    \ of advertising a few large aggregate blocks\n   instead of many smaller class-based\
    \ individual networks, it is\n   difficult to estimate the actual reduction in\
    \ bandwidth and\n   processing that BGP-4 has provided over BGP3.  If we simply\
    \ enumerate\n   all aggregate blocks into their individual class-based networks,\
    \ we\n   would not take into account \"dead\" space that has been reserved for\n\
    \   future expansion.  The best metric for determining the success of\n   BGP-4's\
    \ aggregation is to sample the number NLRI entries in the\n   globally connected\
    \ Internet today and compare it to projected growth\n   rates before BGP-4 was\
    \ deployed.\n   In January of 1994, router carrying a full routing load for the\n\
    \   globally connected Internet had approximately 19,000 network entries\n   (this\
    \ number is not exact due to local policy variations).  The BGP\n   deployment\
    \ working group estimated that the growth rate at that time\n   was over 1000\
    \ new networks per month and increasing.  Since the\n   widespread deployment\
    \ of BGP-4, the growth rate has dropped\n   significantly and a sample done at\
    \ the end of November 1994 showed\n   approximately 21,000 entries present,  as\
    \ opposed to the expected\n   30,000.\n   CPU cycles consumed by BGP depends only\
    \ on the stability of the\n   Internet. If the Internet is stable, then the only\
    \ link bandwidth and\n   router CPU cycles consumed by BGP are due to the exchange\
    \ of the BGP\n   KEEPALIVE messages. The KEEPALIVE messages are exchanged only\
    \ between\n   peers. The suggested frequency of the exchange is 30 seconds. The\n\
    \   KEEPALIVE messages are quite short (19 octets), and require virtually\n  \
    \ no processing.  Therefore, the bandwidth consumed by the KEEPALIVE\n   messages\
    \ is about 5 bits/sec.  Operational experience confirms that\n   the overhead\
    \ (in terms of bandwidth and CPU) associated with the\n   KEEPALIVE messages should\
    \ be viewed as negligible.  If the Internet\n   is unstable, then only the changes\
    \ to the reachability information\n   (that are caused by the instabilities) are\
    \ passed between routers\n   (via the UPDATE messages). If we denote the number\
    \ of routing changes\n   per second by C, then in the worst case the amount of\
    \ bandwidth\n   consumed by the BGP can be expressed as O(C * M). The greatest\n\
    \   overhead per UPDATE message occurs when each UPDATE message contains\n   only\
    \ a single network. It should be pointed out that in practice\n   routing changes\
    \ exhibit strong locality with respect to the AS path.\n   That is routes that\
    \ change are likely to have common AS path. In this\n   case multiple networks\
    \ can be grouped into a single UPDATE message,\n   thus significantly reducing\
    \ the amount of bandwidth required (see\n   also Appendix 6.1 of [1]).\n   Since\
    \ in the steady state the link bandwidth and router CPU cycles\n   consumed by\
    \ the BGP protocol are dependent only on the stability of\n   the Internet, but\
    \ are completely independent on the number of\n   networks that compose the Internet,\
    \ it follows that BGP should have\n   no scaling problems in the areas of link\
    \ bandwidth and router CPU\n   utilization, as the Internet grows, provided that\
    \ the overall\n   stability of the inter-AS connectivity (connectivity between\
    \ ASs) of\n   the Internet can be controlled. Stability issue could be addressed\
    \ by\n   introducing some form of dampening (e.g., hold downs).  Due to the\n\
    \   nature of BGP, such dampening should be viewed as a local to an\n   autonomous\
    \ system matter (see also Appendix 6.3 of [1]). It is\n   important to point out,\
    \ that regardless of BGP, one should not\n   underestimate the significance of\
    \ the stability in the Internet.\n   Growth of the Internet has made the stability\
    \ issue one of the most\n   crucial ones. It is important to realize that BGP,\
    \ by itself, does\n   not introduce any instabilities in the Internet. Current\
    \ observations\n   in the NSFNET show that the instabilities are largely due to\
    \ the\n   ill-behaved routing within the autonomous systems that compose the\n\
    \   Internet.  Therefore, while providing BGP with mechanisms to address\n   the\
    \ stability issue, we feel that the right way to handle the issue\n   is to address\
    \ it at the root of the problem, and to come up with\n   intra-autonomous routing\
    \ schemes that exhibit reasonable stability.\n   It also may be instructive to\
    \ compare bandwidth and CPU requirements\n   of BGP with EGP. While with BGP the\
    \ complete information is exchanged\n   only at the connection establishment time,\
    \ with EGP the complete\n   information is exchanged periodically (usually every\
    \ 3 minutes). Note\n   that both for BGP and for EGP the amount of information\
    \ exchanged is\n   roughly on the order of the networks reachable via a peer that\
    \ sends\n   the information (see also Section 5.2). Therefore, even if one\n \
    \  assumes extreme instabilities of BGP, its worst case behavior will be\n   the\
    \ same as the steady state behavior of EGP.\n   Operational experience with BGP\
    \ showed that the incremental updates\n   approach employed by BGP presents an\
    \ enormous improvement both in the\n   area of bandwidth and in the CPU utilization,\
    \ as compared with\n   complete periodic updates used by EGP (see also presentation\
    \ by\n   Dennis Ferguson at the Twentieth IETF, March 11-15, 1991, St.Louis).\n"
- title: Memory requirements
  contents:
  - "Memory requirements\n   To quantify the worst case memory requirements for BGP,\
    \ denote the\n   total number of networks in the Internet by N, the mean AS distance\n\
    \   of the Internet by M (distance at the level of an autonomous system,\n   expressed\
    \ in terms of the number of autonomous systems), the total\n   number of autonomous\
    \ systems in the Internet by A, and the total\n   number of BGP speakers that\
    \ a system is peering with by K (note that\n   K will usually be dominated by\
    \ the total number of the BGP speakers\n   within a single autonomous system).\
    \ Then the worst case memory\n   requirements (MR) can be expressed as\n     \
    \               MR = O((N + M * A) * K)\n   In the current NSFNET Backbone (N\
    \ = 2110, A = 59, and M = 5) if each\n   network is stored as 4 octets, and each\
    \ autonomous system is stored\n   as 2 octets then the overhead of storing the\
    \ AS path information (in\n   addition to the full complement of exterior routes)\
    \ is less than 7\n   percent of the total memory usage.\n   It is interesting\
    \ to point out, that prior to the introduction of BGP\n   in the NSFNET Backbone,\
    \ memory requirements on the NSFNET Backbone\n   routers running EGP were on the\
    \ order of O(N * K). Therefore, the\n   extra overhead in memory incurred by the\
    \ NSFNET routers after the\n   introduction of BGP is less than 7 percent.\n \
    \  Since a mean AS distance grows very slowly with the total number of\n   networks\
    \ (there are about 60 autonomous systems, well over 2,000\n   networks known in\
    \ the NSFNET backbone routers, and the mean AS\n   distance of the current Internet\
    \ is well below 5), for all practical\n   purposes the worst case router memory\
    \ requirements are on the order\n   of the total number of networks in the Internet\
    \ times the number of\n   peers the local system is peering with. We expect that\
    \ the total\n   number of networks in the Internet will grow much faster than\
    \ the\n   average number of peers per router. Therefore, scaling with respect\n\
    \   to the memory requirements is going to be heavily dominated by the\n   factor\
    \ that is linearly proportional to the total number of networks\n   in the Internet.\n\
    \   The following table illustrates typical memory requirements of a\n   router\
    \ running BGP. It is assumed that each network is encoded as 4\n   bytes, each\
    \ AS is encoded as 2 bytes, and each networks is reachable\n   via some fraction\
    \ of all of the peers (# BGP peers/per net).\n   # Networks  Mean AS Distance\
    \ # AS's # BGP peers/per net Memory Req\n   ----------  ---------------- ------\
    \ ------------------- ----------\n   2,100       5                59     3   \
    \                27,000\n   4,000       10               100    6            \
    \       108,000\n   10,000      15               300    10                  490,000\n\
    \   100,000     20               3,000  20                  1,040,000\n   To put\
    \ memory requirements of BGP in a proper perspective, let's try\n   to put aside\
    \ for a moment the issue of what information is used to\n   construct the forwarding\
    \ tables in a router, and just focus on the\n   forwarding tables themselves.\
    \ In this case one might ask about the\n   limits on these tables.  For instance,\
    \ given that right now the\n   forwarding tables in the NSFNET Backbone routers\
    \ carry well over\n   20,000 entries, one might ask whether it would be possible\
    \ to have a\n   functional router with a table that will have 200,000 entries.\n\
    \   Clearly the answer to this question is completely independent of BGP.\n  \
    \ On the other hand the answer to the original questions (that was\n   asked with\
    \ respect to BGP) is directly related to the latter\n   question. Very interesting\
    \ comments were given by Paul Tsuchiya in\n   his review of BGP in March of 1990\
    \ (as part of the BGP review\n   committee appointed by Bob Hinden).  In the review\
    \ he said that, \"BGP\n   does not scale well.  This is not really the fault of\
    \ BGP. It is the\n   fault of the flat IP address space.  Given the flat IP address\
    \ space,\n   any routing protocol must carry network numbers in its updates.\"\
    \ With\n   the introduction of CIDR [4] and BGP-4,  we have attempted to reduce\n\
    \   this limitation.  Unfortunately,  we cannot erase history nor can\n   BGP-4\
    \ solve the problems inherent with inefficient assignment of\n   future address\
    \ blocks.\n   To reiterate, BGP limits with respect to the memory requirements\
    \ are\n   directly related to the underlying Internet Protocol (IP), and\n   specifically\
    \ the addressing scheme employed by IP. BGP would provide\n   much better scaling\
    \ in environments with more flexible addressing\n   schemes.  It should be pointed\
    \ out that with only very minor\n   additions BGP was extended to support hierarchies\
    \ of autonomous\n   system [8]. Such hierarchies, combined with an addressing\
    \ scheme that\n   would allow more flexible address aggregation capabilities,\
    \ can be\n   utilized by BGP-like protocols, thus providing practically unlimited\n\
    \   scaling capabilities.\n"
- title: Applicability of BGP
  contents:
  - "Applicability of BGP\n   In this section we'll try to answer the question of\
    \ what environment\n   is BGP well suited, and for what is it not suitable?  Partially\
    \ this\n   question is answered in the Section 2 of [1], where the document\n\
    \   states the following:\n      \"To characterize the set of policy decisions\
    \ that can be enforced\n      using BGP, one must focus on the rule that an AS\
    \ advertises to its\n      neighbor ASs only those routes that it itself uses.\
    \  This rule\n      reflects the \"hop-by-hop\" routing paradigm generally used\n\
    \      throughout the current Internet.  Note that some policies cannot\n    \
    \  be supported by the \"hop-by-hop\" routing paradigm and thus require\n    \
    \  techniques such as source routing to enforce.  For example, BGP\n      does\
    \ not enable one AS to send traffic to a neighbor AS intending\n      that the\
    \ traffic take a different route from that taken by traffic\n      originating\
    \ in the neighbor AS.  On the other hand, BGP can\n      support any policy conforming\
    \ to the \"hop-by-hop\" routing\n      paradigm.  Since the current Internet uses\
    \ only the \"hop-by-hop\"\n      routing paradigm and since BGP can support any\
    \ policy that\n      conforms to that paradigm, BGP is highly applicable as an\
    \ inter-AS\n      routing protocol for the current Internet.\"\n   While BGP is\
    \ well suitable for the current Internet, it is also\n   almost a necessity for\
    \ the current Internet as well.  Operational\n   experience with EGP showed that\
    \ it is highly inadequate for the\n   current Internet.  Topological restrictions\
    \ imposed by EGP are\n   unjustifiable from the technical point of view, and unenforceable\n\
    \   from the practical point of view.  Inability of EGP to efficiently\n   handle\
    \ information exchange between peers is a cause of severe\n   routing instabilities\
    \ in the operational Internet. Finally,\n   information provided by BGP is well\
    \ suitable for enforcing a variety\n   of routing policies.\n   Rather than trying\
    \ to predict the future, and overload BGP with a\n   variety of functions that\
    \ may (or may not) be needed, the designers\n   of BGP took a different approach.\
    \ The protocol contains only the\n   functionality that is essential, while at\
    \ the same time provides\n   flexible mechanisms within the protocol itself that\
    \ allow to expand\n   its functionality.  Since BGP was designed with flexibility\
    \ and\n   expandability in mind, we think it should be able to address new or\n\
    \   evolving requirements with relative ease. The existence proof of this\n  \
    \ statement may be found in the way how new features (like repairing a\n   partitioned\
    \ autonomous system with BGP) are already introduced in the\n   protocol.\n  \
    \ To summarize, BGP is well suitable as an inter-autonomous system\n   routing\
    \ protocol for the current Internet that is based on IP (RFC\n   791) as the Internet\
    \ Protocol and \"hop-by-hop\" routing paradigm. It\n   is hard to speculate whether\
    \ BGP will be suitable for other\n   environments where internetting is done by\
    \ other than IP protocols,\n   or where the routing paradigm will be different.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   The BGP-4 protocol has been developed by the IDR/BGP Working\
    \ Group of\n   the Internet Engineering Task Force.  I would like to express thanks\n\
    \   to Yakov Rekhter for providing RFC 1265.  This document is only a\n   minor\
    \ update to the original text. I'd also like to explicitly thank\n   Yakov Rekhter\
    \ and Tony Li for their review of this document as well\n   as their constructive\
    \ and valuable comments.\n"
- title: Editor's Address
  contents:
  - "Editor's Address\n   Paul Traina\n   cisco Systems, Inc.\n   170 W. Tasman Dr.\n\
    \   San Jose, CA 95134\n   EMail: pst@cisco.com\n"
- title: References
  contents:
  - "References\n   [1] Rekhter, Y., and T., Li, \"A Border Gateway Protocol 4 (BGP-4)\"\
    ,\n       RFC 1771, T.J. Watson Research Center, IBM Corp., cisco Systems,\n \
    \      March 1995.\n   [2] Rekhter, Y., and P. Gross, Editors, \"Application of\
    \ the Border\n       Gateway Protocol in the Internet\", RFC 1772, T.J. Watson\
    \ Research\n       Center, IBM Corp., MCI, March 1995.\n   [3] Willis, S., Burruss,\
    \ J., and J. Chu, \"Definitions of Managed\n       Objects for the Fourth Version\
    \ of the Border Gateway Protocol\n       (BGP-4) using SMIv2\", RFC 1657, Wellfleet\
    \ Communications Inc.,\n       IBM Corp., July 1994.\n   [4] Fuller V., Li. T.,\
    \ Yu J., and K. Varadhan, \"Classless Inter-\n       Domain Routing (CIDR): an\
    \ Address Assignment and Aggregation\n       Strategy\", RFC 1519, BARRNet, cisco,\
    \ MERIT, OARnet, September\n       1993.\n   [6] Moy J., \"Open Shortest Path\
    \ First Routing Protocol (Version 2)\",\n       RFC 1257, Proteon, August 1991.\n\
    \   [7] Varadhan, K., Hares S., and Y. Rekhter, \"BGP4/IDRP for IP---OSPF\n  \
    \     Interaction\", Work in Progress.\n   [8] ISO/IEC 10747, Kunzinger, C., Editor,\
    \ \"Inter-Domain Routing\n       Protocol\", October 1993.\n"
