- title: __initial_text__
  contents:
  - "     Guidelines for Usage of the Session Initiation Protocol (SIP)\n        \
    \              Caller Preferences Extension\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document contains guidelines for usage of the Caller Preferences\n\
    \   Extension to the Session Initiation Protocol (SIP).  It demonstrates\n   the\
    \ benefits of caller preferences with specific example\n   applications, provides\
    \ use cases to show proper operation, provides\n   guidance on the applicability\
    \ of the registered feature tags, and\n   describes a straightforward implementation\
    \ of the preference and\n   capability matching algorithm specified in Section\
    \ 7.2 of RFC 3841.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \   2. Motivations for Caller Preferences ..............................5\n  \
    \    2.1. One-Number .................................................7\n    \
    \  2.2. Direct-to-Voicemail ........................................7\n   3. Caller\
    \ Preference Use Cases .....................................8\n      3.1. Routing\
    \ of INVITE and MESSAGE to Different UA ..............8\n           3.1.1. Desired\
    \ Behavior ....................................8\n           3.1.2. Solution ............................................9\n\
    \      3.2. Single Contact Not Matching Implicit Preferences ..........10\n  \
    \         3.2.1. Desired Behavior ...................................10\n    \
    \       3.2.2. Solution ...........................................10\n      3.3.\
    \ Package-Based Routing .....................................11\n           3.3.1.\
    \ Desired Behavior ...................................11\n           3.3.2. Solution\
    \ ...........................................11\n      3.4. Package Routing II\
    \ ........................................12\n           3.4.1. Desired Behavior\
    \ ...................................12\n           3.4.2. Solution ...........................................13\n\
    \      3.5. Audio/Video vs. Audio Only ................................13\n  \
    \         3.5.1. Desired Behavior ...................................13\n    \
    \       3.5.2. Solution ...........................................14\n      3.6.\
    \ Forcing Audio/Video .......................................15\n           3.6.1.\
    \ Desired Behavior ...................................15\n           3.6.2. Solution\
    \ ...........................................15\n      3.7. Third-Party Call Control:\
    \ Forcing Media ...................16\n           3.7.1. Desired Behavior ...................................16\n\
    \           3.7.2. Solution ...........................................16\n  \
    \    3.8. Maximizing Media Overlaps .................................17\n    \
    \       3.8.1. Desired Behavior ...................................17\n      \
    \     3.8.2. Solution ...........................................17\n      3.9.\
    \ Multilingual Lines ........................................18\n           3.9.1.\
    \ Desired Behavior ...................................18\n           3.9.2. Solution\
    \ ...........................................19\n      3.10. I Hate Voicemail!\
    \ ........................................20\n           3.10.1. Desired Behavior\
    \ ..................................20\n           3.10.2. Solution ..........................................20\n\
    \      3.11. I Hate People! ...........................................21\n  \
    \         3.11.1. Desired Behavior ..................................21\n    \
    \       3.11.2. Solution ..........................................21\n      3.12.\
    \ Prefer Voicemail .........................................22\n           3.12.1.\
    \ Desired Behavior ..................................22\n           3.12.2. Solution\
    \ ..........................................22\n      3.13. Routing to an Executive\
    \ ..................................22\n           3.13.1. Desired Behavior ..................................22\n\
    \           3.13.2. Solution ..........................................22\n  \
    \    3.14. Speak to the Executive ...................................23\n    \
    \       3.14.1. Desired Behavior ..................................23\n      \
    \     3.14.2. Solution ..........................................24\n      3.15.\
    \ Mobile Phone Only ........................................24\n           3.15.1.\
    \ Desired Behavior ..................................24\n           3.15.2. Solution\
    \ ..........................................24\n      3.16. Simultaneous Languages\
    \ ...................................25\n           3.16.1. Desired Behavior ..................................25\n\
    \           3.16.2. Solution ..........................................25\n  \
    \    3.17. The Number You Have Called... ............................26\n    \
    \       3.17.1. Desired Behavior ..................................26\n      \
    \     3.17.2. Solution ..........................................26\n      3.18.\
    \ The Number You Have Called, Take Two .....................27\n           3.18.1.\
    \ Desired Behavior ..................................27\n           3.18.2. Solution\
    \ ..........................................27\n      3.19. Forwarding to a Colleague\
    \ ................................28\n           3.19.1. Desired Behavior ..................................28\n\
    \           3.19.2. Solution ..........................................28\n  \
    \ 4. Capability Use Cases ...........................................30\n    \
    \  4.1. Web Redirect ..............................................30\n      4.2.\
    \ Voicemail Icon ............................................30\n   5. Usage of\
    \ the Feature Tags ......................................31\n      5.1. Traditional\
    \ Cell Phone ....................................31\n      5.2. Traditional Work\
    \ Phone ....................................32\n      5.3. PC Messaging Application\
    \ ..................................32\n      5.4. Standalone Videophone .....................................33\n\
    \   6. Example of Implementation of Preference and Capability\n      Matching\
    \ .......................................................33\n      6.1. Extracting\
    \ a Feature Set from a Header ....................34\n      6.2. Extracting Values\
    \ from a Feature Parameter ................35\n      6.3. Comparing Two Value-Ranges\
    \ ................................36\n      6.4. Feature Set to Feature Set Matching\
    \ .......................36\n      6.5. Selecting and Ordering Contacts Based\
    \ on Caller\n           Preferences ...............................................37\n\
    \           6.5.1. Reject-Contact Processing ..........................37\n  \
    \         6.5.2. Accept-Contact Processing ..........................37\n   7.\
    \ Security Considerations ........................................38\n   8. Acknowledgements\
    \ ...............................................38\n   9. Informative References\
    \ .........................................38\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Session Initiation Protocol (SIP) [1] extension for\
    \ Callee\n   Capabilities [2] describes mechanisms that allow a UA (User Agent)\
    \ to\n   register its capabilities in a REGISTER request.  A caller can\n   express\
    \ preferences, either explicitly or implicitly, about how that\n   request is\
    \ to be handled.  This is accomplished with the Accept-\n   Contact and Reject-Contact\
    \ header fields described in Caller\n   Preferences for the Session Initiation\
    \ Protocol[3].\n   The caller preferences extension can serve as a useful tool\
    \ for\n   supporting many applications.  However, its generality makes it\n  \
    \ difficult to use correctly and effectively in any one situation.  To\n   remedy\
    \ that, this document serves as a compendium of examples of the\n   usage of the\
    \ caller preferences extension.\n      NOTE: This document is intended to assist\
    \ the reader in\n      understanding RFCs 3840 and 3841.  It is not intended to\
    \ serve as\n      a substitute for reading those documents.  The examples presented\n\
    \      in this document cannot be fully understood without awareness of\n    \
    \  the mechanisms defined in RFCs 3840 and 3841.\n   First, Section 2 demonstrates\
    \ the benefits of using caller\n   preferences by describing several concrete\
    \ applications that are\n   enabled by the extension.  Section 3 describes a set\
    \ of detailed use\n   cases for expressing caller preferences.  Each use case\
    \ presents a\n   situation, describes how caller preferences can be used to handle\
    \ the\n   requirements for the situation, and verifies that the desired\n   behavior\
    \ occurs by showing the results of the matching operation.\n   These use cases\
    \ validate that the caller preferences specification is\n   complete and capable\
    \ of meeting a specific set of requirements.\n   Since the caller preferences\
    \ specification predates the SIP change\n   process [4], no requirements document\
    \ was ever published for it.  To\n   some degree, this document \"backfills\"\
    \ requirements.  However, this\n   is not an academic exercise only, since the\
    \ use cases described here\n   did result in changes in the caller preferences\
    \ document as it\n   evolved.  These use cases also help implementors figure out\
    \ how to\n   use caller preferences in their own applications.\n   Section 4 discusses\
    \ applications for the callee capabilities\n   specification.  Section 5 discusses\
    \ the example registrations of the\n   feature tags described in [2].  Proper\
    \ usage of the caller\n   preferences extension depends on proper interpretation\
    \ of the\n   semantics of these tags.  More detail is provided on the tags, and\n\
    \   example registrations are included that show typical usage.\n   Section 6\
    \ outlines an implementation approach to the matching\n   algorithm that doesn't\
    \ require RFC 2533 [6] to be implemented in all\n   its generality.\n"
- title: 2.  Motivations for Caller Preferences
  contents:
  - "2.  Motivations for Caller Preferences\n   At its core, SIP is a protocol that\
    \ facilitates rendezvous of users.\n   The caller and callee need to meet up in\
    \ order to exchange session\n   information, so that they may communicate.  The\
    \ rendezvous process is\n   complicated by the fact that a user has multiple points\
    \ of attachment\n   to the network.  A called user (callee) can have a cell phone,\
    \ a PDA,\n   a work phone, a home phone, and one of several PC-based\n   communications\
    \ applications.  When someone calls that user, to which\n   of these devices is\
    \ the call routed?\n   Certainly, the call can be routed to all of them at the\
    \ same time, a\n   process known as parallel forking.  However, that is not always\
    \ the\n   desired behavior.  Users may prefer that their registered devices be\n\
    \   tried in a particular order.  As an example, a user might prefer that\n  \
    \ his cell phone ring first, and if no one answers, that his work phone\n   ring\
    \ next.  Another user might prefer that her cell phone ring first,\n   and then\
    \ her home and work phones ring at the same time, and then, if\n   no one answers\
    \ either of those, that the call be forwarded to\n   voicemail.  These variations\
    \ are all referred to as find-me/\n   follow-me features.\n   SIP supports find-me/follow-me\
    \ features in many ways.  The most basic\n   is through the SIP registration process.\
    \  Each device at which a user\n   can be contacted registers to the network.\
    \  This registration\n   associates the device with the canonical name of the\
    \ user, called the\n   address-of-record (AOR), which is a SIP URI.  Each registration\
    \ can\n   include a preference value, indicating the relative preference for\n\
    \   receiving calls at that device, compared to other devices.  When\n   someone\
    \ makes a call to the AOR, proxies compliant to RFC 3261 will\n   try the registered\
    \ devices in order of preference, unless\n   administrative policy overrides user\
    \ preferences.\n   Preference values in SIP registrations can only provide basic\
    \ find-\n   me/follow-me features.  To support more complex features, the Call\n\
    \   Processing Language (CPL) [5] has been specified.  It is an XML\n   script\
    \ that provides specific call routing instructions.  Users can\n   upload these\
    \ scripts to the network, instructing the servers how\n   calls should be routed.\
    \  As an example, a CPL script can instruct a\n   proxy to route a call to the\
    \ work phone during work hours (9 am -\n   5 pm) and then to the cell phone after\
    \ hours, unless the call is from\n   a family member, in which case it always\
    \ goes to the cell phone.\n   It is important to note that both CPL scripts and\
    \ preference values\n   in registrations describe operation of a service from\
    \ the perspective\n   of the called party.  That is, they describe how a call\
    \ made to the\n   called party should be routed by the network.  However, the\
    \ called\n   party is not the only one with preferences.  A caller will also have\n\
    \   preferences for how they want their call to be routed.  As an\n   example,\
    \ a caller will often want to reach a user on their cell\n   phone.  In the current\
    \ telephone network, this is accomplished by\n   requiring a user to have a separate\
    \ number for each device.  This\n   way, when a caller wishes to reach the cell\
    \ phone, they dial the\n   number for the cell phone.  This requires users to\
    \ maintain lists of\n   potential reach numbers for a user, and then select the\
    \ appropriate\n   one.  A far better approach is for a user to maintain a single\n\
    \   address-of-record.  When someone wishes to reach them on their cell\n   phone,\
    \ they call the AOR, but indicate a preference for the call to\n   be routed to\
    \ the cell phone.\n   A caller may actually have a wide variety of preferences\
    \ for how a\n   call should be routed.  They may prefer to go right to voicemail.\n\
    \   They may prefer never to reach voicemail.  The may prefer to reach\n   the\
    \ user on a device that supports video (because a video-conference\n   is desired).\
    \  They may wish to reach a device that has an attendant\n   who can answer if\
    \ the user is not there.\n   The SIP caller preferences extension allows a caller\
    \ to express these\n   preferences for the way in which their calls are handled.\
    \  These\n   preferences are expressed in terms of properties of the desired\n\
    \   device.  These properties are name-value pairs that convey some kind\n   of\
    \ information about a device.  One example is the property\n   \"mobility\", which\
    \ can have the values \"mobile\" or \"fixed\".  When a\n   caller wishes to reach\
    \ a cell phone, they include information in\n   their call setup request (the\
    \ INVITE method) which indicates that the\n   call should be routed to a device\
    \ that has the property \"mobility\"\n   set to \"mobile\".  When devices register\
    \ to the network, they include\n   their properties (also known as callee capabilities)\
    \ as part of the\n   registration.  In this way, a proxy can match the caller's\n\
    \   preferences against the capabilities of the various devices\n   registered\
    \ to the user and route the call appropriately.\n   While this document addresses\
    \ the preferences of a caller, it does so\n   from the perspective of a SIP User\
    \ Agent representing the caller.\n   Caller preferences are herein represented\
    \ via syntactic elements\n   placed in a SIP request.  This document does not\
    \ attempt to address\n   how preferences might be conveyed by a human user to\
    \ the User Agent.\n   Thus this document is likely to be of most value to the\
    \ developer of\n   a User Agent.\n   The caller preferences extension can support\
    \ a wide variety of call\n   routing applications and features.  Two particularly\
    \ important\n   examples are \"one-number\" and \"direct-to-voicemail\".\n"
- title: 2.1.  One-Number
  contents:
  - "2.1.  One-Number\n   In today's circuit-switched telephony networks, users have\
    \ multiple\n   devices, and each device is associated with its own phone number.\
    \  A\n   user will typically list all of these numbers on a business card:\n \
    \  cell phone, work phone, home office phone, and so on.  Other users\n   need\
    \ to store and manage all of these numbers.  It is difficult to\n   keep these\
    \ numbers complete and up-to-date.  Worse, when you want to\n   call someone,\
    \ you need to pick a number to try.  Sometimes, you want\n   a specific device\
    \ (the cell phone); and other times, you just want to\n   reach them wherever\
    \ they are.  In the latter case, a user is forced\n   to try each number, one\
    \ at a time.  This is inefficient, and\n   difficult to do while driving, for\
    \ example.\n   As an alternative, a user can have a single address.  This is the\
    \ one\n   and only address they give out to other users on their business\n  \
    \ cards.  If a caller wishes to reach that user on their cell phone,\n   they\
    \ select that one address, and then access a pull-down menu of\n   device types.\
    \  This menu would include home phone, work phone, and\n   cell phone.  The caller\
    \ can select cell-phone, and then the call is\n   placed to the cell phone.  There\
    \ is no need to manage or maintain\n   more than one number for the user -- a\
    \ single number will suffice.\n   If, on the other hand, the caller wishes to\
    \ reach the user wherever\n   they are, they make a call to that one number without\
    \ a selection of\n   a preferred device.  The network will ring all devices at\
    \ the same\n   time, and therefore reach the user as fast as possible.\n   This\
    \ one-number service makes use of caller preferences.  To express\n   a preference\
    \ for the cell phone, the caller's device would include a\n   header in the SIP\
    \ INVITE request, indicating a desire to reach a\n   device with \"mobility\"\
    \ equal to \"mobile\".\n"
- title: 2.2.  Direct-to-Voicemail
  contents:
  - "2.2.  Direct-to-Voicemail\n   Frequently, a busy executive on the road wants\
    \ to quickly pass a\n   message to a colleague by voice.  As an example, a boss\
    \ might want to\n   instruct an employee to call a specific customer and resolve\
    \ a\n   pending issue.  In such a case, the user doesn't actually want to\n  \
    \ talk to the person; they just want to leave a voice message.  Having\n   a phone\
    \ conversation may require too much time, whereas a voice\n   message can be quick\
    \ and to the point.  The voice message can also\n   serve as a record of exactly\
    \ what is desired, whereas a fleeting\n   voice conversation can be forgotten\
    \ or misremembered.\n   In today's circuit-switched telephone networks, there\
    \ is often no way\n   to go directly to someone's voicemail and leave a message.\n\
    \   Sometimes, you can dial the main number for the voicemail system,\n   enter\
    \ in the extension of the desired party, and leave a message by\n   entering a\
    \ specific prompt.  This is time consuming, and requires the\n   caller to know\
    \ the main voicemail number.\n   Instead, an address book in a cell phone can\
    \ have an option called\n   \"leave voice message\", available for each entry\
    \ in the address book.\n   When this option is selected, a call is made directly\
    \ to the\n   voicemail for that user, which immediately picks up and prompts for\
    \ a\n   message.  In fact, a rapid greeting is played, so that the caller can\n\
    \   go directly to the recording procedure.\n   This saves time for the caller,\
    \ making it very easy to quickly leave\n   recorded messages for a large number\
    \ of people.\n   This feature is possible using the caller preferences extension.\n\
    \   When the user selects the \"leave voice message\" option, the phone\n   sends\
    \ a SIP INVITE request, and includes a caller preferences header\n   field that\
    \ indicates a preference for devices whose \"msgserver\"\n   attribute has a value\
    \ of \"true\".  This will cause the proxy to route\n   the call directly to a\
    \ registered voicemail service.  Furthermore,\n   the voicemail server will see\
    \ that the caller asked to go directly to\n   voicemail, and can therefore play\
    \ an abbreviated greeting explicitly\n   designed for this case.\n"
- title: 3.  Caller Preference Use Cases
  contents:
  - "3.  Caller Preference Use Cases\n   Each use case is described as a situation\
    \ along with a desired\n   behavior.  Then, it demonstrates how the various caller\
    \ preferences\n   headers and the proxy processing logic would result in the\n\
    \   appropriate decision.\n"
- title: 3.1.  Routing of INVITE and MESSAGE to Different UA
  contents:
  - '3.1.  Routing of INVITE and MESSAGE to Different UA

    '
- title: 3.1.1.  Desired Behavior
  contents:
  - "3.1.1.  Desired Behavior\n   Address of Record (AOR) Y has two contacts, Y1 and\
    \ Y2.  Y1 is a phone\n   and supports the standard operations INVITE, ACK, OPTIONS,\
    \ BYE, and\n   CANCEL but does not support MESSAGE, whereas Y2 is a pager and\n\
    \   supports only OPTIONS and MESSAGE.  Caller X wants to send pages to\n   Y.\
    \  There is a lot of traffic in the network of both calls and pages,\n   so there\
    \ is a goal not to unnecessarily fork messages to devices that\n   can't support\
    \ them.  So, this is done by ensuring that INVITEs of Y\n   are delivered only\
    \ to Y1, while MESSAGEs to Y are delivered only to\n   Y2.\n"
- title: 3.1.2.  Solution
  contents:
  - "3.1.2.  Solution\n   Y1 will create a registration that looks like, in part:\n\
    \      REGISTER sip:example.com SIP/2.0\n      To: sip:Y@example.com\n      Contact:<sip:Y1@pc.example.com>\n\
    \        ;methods=\"INVITE,ACK,OPTIONS,BYE,CANCEL\"\n        ;uri-user=\"<Y1>\"\
    \n        ;uri-domain=\"example.com\"\n        ;audio\n        ;schemes=\"sip\"\
    \n        ;mobility=\"mobile\"\n   Y2 will create a registration that looks like,\
    \ in part:\n      REGISTER sip:example.com SIP/2.0\n      To: sip:Y@example.com\n\
    \      Contact: <sip:Y2@pc.example.com>\n        ;methods=\"OPTIONS,MESSAGE\"\n\
    \        ;uri-user=\"<Y2>\"\n        ;uri-domain=\"example.com\"\n        ;+sip.message\n\
    \        ;schemes=\"sip,im\"\n        ;mobility=\"mobile\"\n   When a UAC (User\
    \ Agent Client) sends an INVITE, it will arrive at the\n   proxy for example.com.\
    \  There are no caller preferences in the\n   request.  However, per Section 7.2.2\
    \ of [3], the proxy will construct\n   an implicit require-flagged Accept-Contact\
    \ preference that looks\n   like:\n      (& (sip.methods=\"INVITE\"))\n   Applying\
    \ the matching algorithm of RFC 2533 [6] to this feature set\n   and those registered\
    \ by Y1 and Y2, the feature set of Y1 alone\n   matches.  Because the Accept-Contact\
    \ predicate has its require flag\n   set, Y2 is discarded, and the INVITE is routed\
    \ to Y1.\n   If the request was MESSAGE, the proxy constructs an implicit Accept-\n\
    \   Contact preference with its require flag set (require-flagged) that\n   looks\
    \ like:\n      (& (sip.methods=\"MESSAGE\"))\n   which matches the feature set\
    \ of Y2, but not Y1.  Thus, Y1 is\n   discarded, and the request is routed to\
    \ Y2.\n"
- title: 3.2.  Single Contact Not Matching Implicit Preferences
  contents:
  - '3.2.  Single Contact Not Matching Implicit Preferences

    '
- title: 3.2.1.  Desired Behavior
  contents:
  - "3.2.1.  Desired Behavior\n   AOR Y has a single contact, Y1.  It's a phone, and\
    \ therefore supports\n   the standard operations INVITE, ACK, OPTIONS, BYE, and\
    \ CANCEL but\n   does not support MESSAGE.  A caller X sends a MESSAGE request.\
    \  The\n   desired behavior is that the request is still routed to the solitary\n\
    \   contact so that it can generate a 405 response.\n"
- title: 3.2.2.  Solution
  contents:
  - "3.2.2.  Solution\n   The single contact Y1 will generate a registration that\
    \ looks like,\n   in part:\n      REGISTER sip:example.com SIP/2.0\n      To:\
    \ sip:Y@example.com\n      Contact: <sip:Y1@pc.example.com>\n        ;methods=\"\
    INVITE,ACK,OPTIONS,BYE,CANCEL\"\n        ;uri-user=\"<Y1>\"\n        ;uri-domain=\"\
    example.com\"\n        ;audio\n        ;schemes=\"sip\"\n        ;mobility=\"\
    fixed\"\n        ;class=\"personal\"\n   X sends a MESSAGE request.  There are\
    \ no explicit caller preferences.\n   This results in an implicit require-flagged\
    \ Accept-Contact\n   preference:\n      (& (sip.methods=\"MESSAGE\"))\n   Since\
    \ Y1 doesn't match and the Accept-Contact predicate is require-\n   flagged, it\
    \ is discarded.  However, according to section 7.2.4 of RFC\n   3841, if there\
    \ are no matching targets, the original target set is\n   used.  Thus, the request\
    \ is sent to the one original target, Y1, as\n   desired.  Y1 then responds with\
    \ a 405.\n   If there were multiple contacts, and none of them matched the Accept-\n\
    \   Contact predicate, then the original target set including all of the\n   contacts\
    \ would be restored.  Then all the contacts would be processed\n   according to\
    \ Section 16.6 of RFC 3261.\n"
- title: 3.3.  Package-Based Routing
  contents:
  - '3.3.  Package-Based Routing

    '
- title: 3.3.1.  Desired Behavior
  contents:
  - "3.3.1.  Desired Behavior\n   AOR Y has a number of contacts, Y1, Y2, ..., Yn,\
    \ that can each\n   support the standard operations INVITE, ACK, OPTIONS, BYE,\
    \ and CANCEL\n   and can also support SUBSCRIBE for the \"dialog\" event package\
    \ [7].  Y\n   also has another contact, Yp, that is a presence agent (PA) [8]:\
    \ it\n   can accept only SUBSCRIBE requests for the \"presence\" event package.\n\
    \   The goal is for SUBSCRIBE requests for presence to be routed to Yp\n   while\
    \ INVITEs and SUBSCRIBEs for the dialog package are forked to\n   Y1...Yn.\n"
- title: 3.3.2.  Solution
  contents:
  - "3.3.2.  Solution\n   Y1..Yn will generate REGISTER requests that look like, in\
    \ part:\n      REGISTER sip:example.com SIP/2.0\n      To: sip:Y@example.com\n\
    \      Contact: <sip:Yi@pc.example.com>\n        ;methods=\"INVITE,BYE,OPTIONS,ACK,CANCEL,SUBSCRIBE\"\
    \n        ;events=\"dialog\"\n        ;uri-user=\"<Yi>\"\n        ;uri-domain=\"\
    example.com\"\n        ;audio\n        ;schemes=\"sip\"\n        ;mobility=\"\
    fixed\"\n        ;class=\"personal\"\n   and Yp will generate a REGISTER request\
    \ that looks like, in part:\n      REGISTER sip:example.com SIP/2.0\n      To:\
    \ sip:Y@example.com\n      Contact: <sip:Yp@pc.example.com>;methods=\"SUBSCRIBE\"\
    \n        ;events=\"presence\"\n        ;uri-user=\"<Yp>\"\n        ;uri-domain=\"\
    example.com\"\n        ;schemes=\"sip,pres\"\n        ;mobility=\"fixed\"\n  \
    \      ;class=\"business\"\n   A SUBSCRIBE request for presence will arrive at\
    \ the proxy for\n   example.com.  Since there are no explicit preferences, it\
    \ constructs\n   an implicit require-flagged Accept-Contact preference from the\n\
    \   request:\n      (& (sip.methods=\"SUBSCRIBE\") (sip.events=\"presence\"))\n\
    \   Following Section 7.2.4 of RFC 3841, this feature set only matches\n   the\
    \ one registered by Yp.  Because the require flag is set, the\n   contacts which\
    \ do not match are removed from the target set.\n   Therefore, Y1..Yn are discarded.\
    \  The request is sent to the\n   remaining contact, Yp, representing the PA.\n\
    \   An INVITE request without explicit preferences results in an implicit\n  \
    \ require-flagged Accept-Contact preference:\n      (& (sip.methods=\"INVITE\"\
    ))\n   The implicit Accept-Contact feature set matches Y1..Yn, but does not\n\
    \   match Yp.  Using the scoring algorithm from Section 7.2.4 of RFC\n   3841,\
    \ the score for Y1..Yn against this predicate is 1.0.  As a\n   result, the caller\
    \ preference Qa for each contact is 1.0.  The\n   registrations did not contain\
    \ q-values, so the default q-value of 1.0\n   is applied to each Contact URI.\
    \  Since the caller and callee\n   preferences are the same and all equal to 1.0,\
    \ there is no reordering\n   of contacts.  The result is that the proxy will consider\
    \ Y1..Yn each\n   as equally good targets for the request and possibly fork the\
    \ request\n   to each.\n   A SUBSCRIBE request for the dialog event package without\
    \ explicit\n   preferences will result in an implicit require-flagged Accept-Contact\n\
    \   preference:\n      (& (sip.methods=\"SUBSCRIBE\") (sip.events=\"dialog\"))\n\
    \   This only matches Y1..Yn, so Yp is discarded, and the request is\n   routed\
    \ to the remaining contacts just as the INVITE was.\n"
- title: 3.4.  Package Routing II
  contents:
  - '3.4.  Package Routing II

    '
- title: 3.4.1.  Desired Behavior
  contents:
  - "3.4.1.  Desired Behavior\n   This case is nearly identical to that of Section\
    \ 3.3.  However,\n   Y1..Yn omit the \"events\" feature tag from their registration.\
    \  Yp\n   registers as in Section 3.3.  A SUBSCRIBE for the presence event\n \
    \  package should still preferentially route to Yp.\n"
- title: 3.4.2.  Solution
  contents:
  - "3.4.2.  Solution\n   The registration from Y1..Yn will look like:\n      REGISTER\
    \ sip:example.com SIP/2.0\n      To: sip:Y@example.com\n      Contact: <sip:Yi@pc.example.com>\n\
    \        ;methods=\"INVITE,BYE,OPTIONS,ACK,CANCEL,SUBSCRIBE\"\n        ;uri-user=\"\
    <Yi>\"\n        ;uri-domain=\"example.com\"\n        ;audio\n        ;schemes=\"\
    sip\"\n        ;mobility=\"fixed\"\n        ;class=\"personal\"\n   When the caller\
    \ sends a SUBSCRIBE for the presence event package\n   (without explicit preferences),\
    \ the proxy computes an implicit\n   preference:\n      (& (sip.methods=\"SUBSCRIBE\"\
    ) (sip.events=\"presence\"))\n   This predicate matches Y1..Yn and Yp.  However,\
    \ the score for Y1..Yn\n   against this predicate is 0.5, and the score of Yp\
    \ is 1.0.  The\n   result is a caller preference Qa of 0.5 for Y1..Yn, and a caller\n\
    \   preference Qa of 1.0 for Yp.  Since the callee provided no q-values,\n   the\
    \ proxy will assume a default of 1.0.  Thus, all contacts are in\n   the same\
    \ equivalence class.  They are then sorted by Qa, so that Yp\n   is first, followed\
    \ by Y1 through Yn.  It will therefore route the\n   request first to Yp, and\
    \ if that should fail, to Y1..Yn.\n"
- title: 3.5.  Audio/Video vs. Audio Only
  contents:
  - '3.5.  Audio/Video vs. Audio Only

    '
- title: 3.5.1.  Desired Behavior
  contents:
  - "3.5.1.  Desired Behavior\n   X sends an invitation to Y to initiate an audio/video\
    \ call, including\n   both m=audio and m=video lines in the SDP.  AOR Y has two\
    \ contacts,\n   Y1 and Y2.  Y1 represents a normal audio phone, where Y prefers\
    \ to\n   receive their calls.  It will answer an audio/video call, refusing\n\
    \   the video.  Y2 represents an audio/video phone that should only used\n   when\
    \ needed.  The caller really wants the call answered by a device\n   that supports\
    \ video, but will accept an audio-only call as a second\n   choice.\n"
- title: 3.5.2.  Solution
  contents:
  - "3.5.2.  Solution\n   Y1 will generate a registration that looks like, in part:\n\
    \      REGISTER sip:example.com SIP/2.0\n      To: sip:Y@example.com\n      Contact:\
    \ <sip:Y1@pc.example.com>;q=1.0\n        ;methods=\"INVITE,BYE,OPTIONS,ACK,CANCEL\"\
    \n        ;uri-user=\"<Y1>\"\n        ;uri-domain=\"example.com\"\n        ;audio\n\
    \        ;schemes=\"sip,tel\"\n        ;mobility=\"fixed\"\n        ;class=\"\
    business\"\n   Y2 will generate a registration that looks like, in part:\n   \
    \   REGISTER sip:example.com SIP/2.0\n      To: sip:Y@example.com\n      Contact:\
    \ <sip:Y2@pc.example.com>;q=0.6\n        ;methods=\"INVITE,BYE,OPTIONS,ACK,CANCEL\"\
    \n        ;uri-user=\"<Y2>\"\n        ;uri-domain=\"example.com\"\n        ;audio\n\
    \        ;video\n        ;schemes=\"sip,tel\"\n        ;mobility=\"fixed\"\n \
    \       ;class=\"business\"\n   Note the different q-values, allowing Y2 to be\
    \ selected as a device\n   of \"last resort\".\n   To have the call preferentially\
    \ routed to a device that supports\n   video, the caller X sends an INVITE that\
    \ looks like, in part:\n      INVITE sip:Y@example.com SIP/2.0\n      Accept-Contact:\
    \ *\n        ;methods=\"INVITE\"\n        ;video\n   The proxy will convert this\
    \ to a feature set.  This feature set\n   matches Y2 and Y1.  However, the score\
    \ for Y2 is 1.0, and 0.5 for Y1.\n   The two contacts are then ordered by q-value\
    \ and broken into\n   equivalence classes.  There are two equivalence classes,\
    \ each with\n   one contact.  As a result, the caller preference values have no\n\
    \   impact on the ordering.  The call will first try the higher priority\n   Y1,\
    \ which will answer the call and reject the video stream.  Thus,\n   the desired\
    \ behavior is not achieved.\n   The desired behavior could be achieved by adding\
    \ the \"explicit\" and\n   \"require\" tags to the Accept-Contact header field\
    \ in the INVITE, as\n   is done in Section 3.6.  However, doing so may result\
    \ in calls\n   failing when they could occur, but without video.  As discussed\
    \ in\n   [3], both the \"require\" and \"explicit\" tags are generally used only\n\
    \   when the request cannot be serviced in any way unless the preferences\n  \
    \ are met.  That is not the case here.\n"
- title: 3.6.  Forcing Audio/Video
  contents:
  - '3.6.  Forcing Audio/Video

    '
- title: 3.6.1.  Desired Behavior
  contents:
  - "3.6.1.  Desired Behavior\n   This case is similar to that of Section 3.5.  However,\
    \ X requires an\n   audio/video call and would like the call to fail if this is\
    \ not\n   possible, rather than succeed with audio only.\n"
- title: 3.6.2.  Solution
  contents:
  - "3.6.2.  Solution\n   The solution is similar to that of Section 3.5; however,\
    \ the Accept-\n   Contact header field now includes the \"explicit\" and \"require\"\
    \ tags,\n   guaranteeing that the call is never established to any UA that had\n\
    \   not explicitly indicated support for video:\n      INVITE sip:Y@example.com\
    \ SIP/2.0\n      Accept-Contact: *;video;require;explicit\n   This arrives at\
    \ the example.com proxy.  This explicit feature set\n   matches the feature set\
    \ for Y2 and Y1.  However, the match for Y1 did\n   not have a score of 1.  Since\
    \ the \"explicit\" and \"require\" tags are\n   present, the contact is discarded.\
    \  That leaves Y2 only.  The call\n   will therefore get routed to the videophone,\
    \ and if the user is not\n   there, the audio phone will never ring.\n   Because\
    \ both the \"require\" and \"explicit\" flags are present, a\n   contact will\
    \ also be discarded if it does not include a feature tag\n   indicating support\
    \ for video.  Thus, a UA that can do video, but\n   neglected to indicate it,\
    \ would not be reached in this case.  This is\n   why it is important for a UA\
    \ to indicate all of its capabilities.\n   Note that this is only true for a contact\
    \ that indicated some\n   capabilities but not the video capability.  Contacts\
    \ that don't\n   indicate any capabilities are \"immune\" from caller preferences\n\
    \   filtering and would not be discarded.\n"
- title: '3.7.  Third-Party Call Control: Forcing Media'
  contents:
  - '3.7.  Third-Party Call Control: Forcing Media

    '
- title: 3.7.1.  Desired Behavior
  contents:
  - "3.7.1.  Desired Behavior\n   Z is a third-party call control controller (3pcc)\
    \ [9] trying to\n   establish an audio/video call from X to Y.  X has contacts\
    \ X1 and X2,\n   and Y has contacts Y1 and Y2.  X1 and X2 have capabilities identical\n\
    \   to Y1 and Y2, respectively.  Z needs to send an offerless invite to X\n  \
    \ and use the offer proposed by X to send an invite to Y.  When sending\n   the\
    \ offerless invite to X, the 3pcc controller must ensure that an\n   audio/video\
    \ contact (X2) is chosen over an audio only contact (X1).\n"
- title: 3.7.2.  Solution
  contents:
  - "3.7.2.  Solution\n   X1 will generate a registration that looks like, in part:\n\
    \      REGISTER sip:example.com SIP/2.0\n      To: sip:X@example.com\n      Contact:\
    \ <sip:X1@pc.example.com>;q=1.0\n        ;methods=\"INVITE,BYE,OPTIONS,ACK,CANCEL\"\
    \n        ;uri-user=\"<X1>\"\n        ;uri-domain=\"example.com\"\n        ;audio\n\
    \        ;schemes=\"sip,tel\"\n        ;mobility=\"fixed\"\n        ;class=\"\
    business\"\n   X2 will generate a registration that looks like, in part:\n   \
    \   REGISTER sip:example.com SIP/2.0\n      To: sip:X@example.com\n      Contact:\
    \ <sip:X2@pc.example.com>;q=0.6\n        ;methods=\"INVITE,BYE,OPTIONS,ACK,CANCEL\"\
    \n        ;uri-user=\"<X2>\"\n        ;uri-domain=\"example.com\"\n        ;audio\n\
    \        ;video\n        ;schemes=\"sip,tel\"\n        ;mobility=\"fixed\"\n \
    \       ;class=\"business\"\n   Z would include, in its INVITE, an Accept-Contact\
    \ header field:\n      INVITE sip:X@example.com SIP/2.0\n      Accept-Contact:\
    \ *;audio;video;require;explicit\n   This caller preference matches both X1 and\
    \ X2.  However, it matches\n   X1 with a score of .5 and X2 with a score of 1.\
    \  Because of the\n   \"require\" and \"explicit\" tags, X1 is discarded despite\
    \ X's preference\n   for it.  Thus, the call is routed to X2.\n   The same caveats\
    \ apply here as do in Section 3.6.  Generally, it is\n   not advisable to mandate\
    \ support for features (such as video) that\n   are not strictly necessary for\
    \ the request to proceed.\n"
- title: 3.8.  Maximizing Media Overlaps
  contents:
  - '3.8.  Maximizing Media Overlaps

    '
- title: 3.8.1.  Desired Behavior
  contents:
  - "3.8.1.  Desired Behavior\n   AOR Y has two contacts: Y1, which is a regular audio\
    \ phone, and Y2,\n   which is a PC capable of supporting both audio and session-oriented\n\
    \   IM [10].  X is a PC with capability to support audio, video, and\n   session-oriented\
    \ IM.  X calls Y for the purpose of establishing a\n   voice call.  However, X\
    \ wishes to connect to the device that has the\n   maximal overlap with its media\
    \ capabilities, in order to maximize the\n   functionality available to the caller.\n"
- title: 3.8.2.  Solution
  contents:
  - "3.8.2.  Solution\n   Y1 will generate a registration that looks like, in part:\n\
    \      REGISTER sip:example.com SIP/2.0\n      To: sip:Y@example.com\n      Contact:\
    \ <sip:Y1@phone.example.com>\n        ;methods=\"INVITE,BYE,OPTIONS,ACK,CANCEL\"\
    \n        ;uri-user=\"<Y1>\"\n        ;uri-domain=\"example.com\"\n        ;audio\n\
    \        ;schemes=\"sip,tel\"\n        ;mobility=\"fixed\"\n        ;class=\"\
    business\"\n   Y2 will generate a registration that looks like, in part:\n   \
    \   REGISTER sip:example.com SIP/2.0\n      To: sip:Y@example.com\n      Contact:\
    \ <sip:Y2@pc.example.com>\n        ;methods=\"INVITE,BYE,OPTIONS,ACK,CANCEL,MESSAGE\"\
    \n        ;uri-user=\"<Y2>\"\n        ;uri-domain=\"example.com\"\n        ;audio\n\
    \        ;+sip.message\n        ;schemes=\"sip,tel\"\n        ;mobility=\"fixed\"\
    \n        ;class=\"business\"\n   The solution requires the caller to support\
    \ caller preferences.  The\n   caller would include, in their INVITE, an Accept-Contact\
    \ header field\n   that lists all the media types they support.  In this case:\n\
    \      INVITE sip:Y@example.com SIP/2.0\n      Accept-Contact: *;audio;video;+sip.message\n\
    \   Both Y1 and Y2 match the predicate.  Y1 matches with a score of 0.33,\n  \
    \ and Y2 matches with a score of 0.66.  Since there is only one Accept-\n   Contact\
    \ predicate, the Qa for each contact is equal to the score.\n   The registered\
    \ contacts are then sorted by q-value and broken into\n   equivalence classes.\
    \  There is a single equivalence class with\n   q-value of 1.0.  The two contacts\
    \ in that class are then re-ordered\n   based on the values of Qa.  Y2 has a higher\
    \ Qa, so it is used first,\n   followed by Y1.  The result is that the call is\
    \ routed to the device\n   with the maximum overlap in media capabilities, as\
    \ desired.\n   Note that neither \"require\" nor \"explicit\" tags are used because\n\
    \   there is no intent to exclude contacts, only to order them.\n"
- title: 3.9.  Multilingual Lines
  contents:
  - '3.9.  Multilingual Lines

    '
- title: 3.9.1.  Desired Behavior
  contents:
  - "3.9.1.  Desired Behavior\n   AOR Y represents a shared line in an office.  Several\
    \ employees in\n   the office have phones registered for Y.  Some of the employees\
    \ speak\n   only English, some speak Spanish fluently and have some limited\n\
    \   capability for English, and some speak both English and Spanish\n   fluently.\
    \  Calls from callers that speak only English should be\n   parallel forked to\
    \ all office workers that speak fluent English.  If\n   the call isn't picked\
    \ up, then the phones of workers that speak\n   English marginally should be rung.\
    \  Calls from callers that speak\n   only Spanish should be forked only to workers\
    \ that speak Spanish.\n"
- title: 3.9.2.  Solution
  contents:
  - "3.9.2.  Solution\n   A user at phone Y1 that speaks English only would generate\
    \ a REGISTER\n   that looks like, in part:\n      REGISTER sip:example.com SIP/2.0\n\
    \      To: sip:Y@example.com\n      Contact: <sip:Y1@pc.example.com>;languages=\"\
    en\"\n   A user at a phone Y2 that speaks Spanish and a little bit of English\n\
    \   would generate a REGISTER that looks like, in part:\n      REGISTER sip:example.com\
    \ SIP/2.0\n      To: sip:Y@example.com\n      Contact: <sip:Y2-es@pc2.example.com>;languages=\"\
    es\"\n      Contact: <sip:Y2-en@pc2.example.com>;languages=\"en\";q=0.2\n   Y2\
    \ has registered two contacts.  Both of them route to the same\n   device (pc2.example.com),\
    \ but they differ in their language support\n   and relative q-values.  Multiple\
    \ contacts are needed whenever a UA\n   wishes to express differing preferences\
    \ for being reached for\n   different feature collections.\n   A user at phone\
    \ Y3 that speaks English and Spanish fluently would\n   generate a REGISTER that\
    \ looks like, in part:\n      REGISTER sip:example.com SIP/2.0\n      To: sip:Y@example.com\n\
    \      Contact: <sip:Y3@pc3.example.com>;languages=\"es,en\"\n   Notice that only\
    \ a single contact is needed because the same q-value\n   is applied across all\
    \ feature collections.\n   For the language-based routing to occur, the caller\
    \ must indicate its\n   language preferences explicitly:\n      INVITE sip:Y@example.com\
    \ SIP/2.0\n      Accept-Contact: *;languages=\"en\";require\n   The predicate\
    \ derived from this looks like:\n      (& (languages=\"en\"))\n   This matches\
    \ the one contact for Y1, the second contact registered\n   for Y2, and the one\
    \ contact for Y3, all with a score of 1.0.  The\n   first contact registered by\
    \ Y2 does not match, and because of the\n   \"require\" flag, is discarded.  The\
    \ remaining contacts are sorted by\n   q-value and divided into equivalence classes.\
    \  There are two\n   equivalence classes.  The first contains Y1 and Y3 with a\
    \ q-value of\n   1.0, and the second contains Y2-en with a q-value of 0.2.  The\n\
    \   contacts in the first class are ordered by Qa.  However, since all\n   contacts\
    \ have the same value of Qa (1.0), there is no change in\n   ordering.  Thus,\
    \ Y1 and Y3 are tried first, followed by Y2-en.  This\n   is the desired behavior.\n\
    \   An \"explicit\" tag is not used because that would cause the exclusion\n \
    \  of a contact that does not mention language.\n   A caller that speaks Spanish\
    \ only would specify their preference\n   thusly:\n      INVITE sip:Y@example.com\
    \ SIP/2.0\n      Accept-Contact: *;languages=\"es\";require\n   This matches the\
    \ first contact of Y2 phones, and Y3 phones, all with\n   a score of 1.0.  The\
    \ English contact of Y2, Y2-en, doesn't match and\n   is discarded because of\
    \ the \"require\" flag.  The remaining contacts\n   are sorted by q-values (Y3,\
    \ Y2-es) and broken into a single\n   equivalence class containing both contacts.\
    \  Since the Qa for both\n   contacts is the same (1.0) there is no reordering.\
    \  The result is\n   that the call is routed to either Y3 or Y2-es.\n"
- title: 3.10.  I Hate Voicemail!
  contents:
  - '3.10.  I Hate Voicemail!

    '
- title: 3.10.1.  Desired Behavior
  contents:
  - "3.10.1.  Desired Behavior\n   AOR Y has two contacts, a phone Y1 and a voicemail\
    \ service Y2.  X\n   wishes to call Y and talk in person.  X does not want to\
    \ be sent to\n   voicemail under any circumstances.\n"
- title: 3.10.2.  Solution
  contents:
  - "3.10.2.  Solution\n   The phone would register with a Contact that looks like,\
    \ in part:\n      REGISTER sip:example.com SIP/2.0\n      To: sip:Y@example.com\n\
    \      Contact: <sip:Y1@pc.example.com>\n        ;audio\n        ;mobility=\"\
    fixed\"\n   and the voicemail server would register with a Contact that looks\n\
    \   like, in part:\n      REGISTER sip:example.com SIP/2.0\n      To: sip:Y@example.com\n\
    \      Contact: <sip:Y2@pc.example.com>\n         ;msgserver\n         ;automata\n\
    \         ;attendant\n         ;audio\n         ;q=0.2\n   The voicemail server\
    \ registers with a lower q-value so that it is\n   used only after the phone itself\
    \ is rung.  Note that the voicemail\n   server need not actually register.  There\
    \ can be a configured contact\n   and feature set defined for it instead.\n  \
    \ A caller that wishes to avoid voicemail can include an explicit\n   preference\
    \ to avoid it.  A caller would do this with the Reject-\n   Contact header field:\n\
    \      INVITE sip:Y@example.com SIP/2.0\n      Reject-Contact: *;msgserver\n \
    \  Since this feature set contains a feature tag that is not contained\n   in\
    \ the registration for Y1, the feature set is discarded when\n   examining Y1.\
    \  However, the registration for Y2 contains all feature\n   tags listed in the\
    \ feature set, and so the rule is considered.  There\n   is a match, and therefore,\
    \ Y2 is discarded.  The result is that the\n   user is never routed to voicemail.\n"
- title: 3.11.  I Hate People!
  contents:
  - '3.11.  I Hate People!

    '
- title: 3.11.1.  Desired Behavior
  contents:
  - "3.11.1.  Desired Behavior\n   The situation is similar to Section 3.10, except\
    \ the caller wishes\n   only to leave a message, not actually speak to the person.\n"
- title: 3.11.2.  Solution
  contents:
  - "3.11.2.  Solution\n   The caller would send an INVITE that looks like, in part:\n\
    \      INVITE sip:Y@example.com SIP/2.0\n      Accept-Contact: *;msgserver;require;explicit\n\
    \   This caller preference matches both Y1 and Y2.  Y1 matches, but with\n   a\
    \ score of zero.  Y2 matches with a score of 1.  Since both the\n   \"require\"\
    \ and \"explicit\" flags are set, Y1 is discarded.  Therefore,\n   the call is\
    \ routed to Y2, the voicemail server, as desired.\n   Because of the presence\
    \ of the \"require\" and \"explicit\" tags, if\n   these preferences are used\
    \ with a user that doesn't have voicemail or\n   that fails to indicate it with\
    \ a msgserver capability, the call will\n   fail completely with a 480 Temporarily\
    \ Unavailable error, rather than\n   connect to the user.\n"
- title: 3.12.  Prefer Voicemail
  contents:
  - '3.12.  Prefer Voicemail

    '
- title: 3.12.1.  Desired Behavior
  contents:
  - "3.12.1.  Desired Behavior\n   The situation is similar to that of Section 3.10.\
    \  However, the\n   caller prefers to leave a message.  If voicemail is not available,\n\
    \   they are willing to talk to a person.\n"
- title: 3.12.2.  Solution
  contents:
  - "3.12.2.  Solution\n   It had been hoped that RFC 3841 could provide a solution\
    \ for this\n   case, but it does not, because doing so would require a re-ordering\n\
    \   of the callee contacts, which is not done.  The caller may achieve\n   the\
    \ intended effect by making two call attempts:\n   o  First, make an attempt requiring\
    \ voicemail, as described in\n      Section 3.11.\n   o  If that fails with a\
    \ 480 error, send an invitation with no Accept-\n      Contact or Reject-Contact\
    \ headers.\n"
- title: 3.13.  Routing to an Executive
  contents:
  - '3.13.  Routing to an Executive

    '
- title: 3.13.1.  Desired Behavior
  contents:
  - "3.13.1.  Desired Behavior\n   Y is the AOR of an executive.  It has three contacts.\
    \  Y1 is the\n   phone on the executive's desk.  Y2 is the phone on the desk of\
    \ the\n   executive's assistant.  Y3 is the address of an auto-attendant system\n\
    \   that can answer general questions, route calls to other parties, etc.\n  \
    \ By default, calls to Y should be directed to Y2, and if that fails,\n   to Y3.\
    \  If Y3 doesn't answer, then Y1 should ring.\n"
- title: 3.13.2.  Solution
  contents:
  - "3.13.2.  Solution\n   This is primarily a called party feature and is best accomplished\n\
    \   with a CPL (Call Processing Language) script [5].  However, it can be\n  \
    \ accomplished with caller preferences alone by properly setting the\n   q-values\
    \ across the three devices.  Assuming this coordination is\n   possible, here\
    \ are the settings that would be made:\n   Y1 would generate a REGISTER that looks\
    \ like, in part:\n      REGISTER sip:example.com SIP/2.0\n      To: sip:Y@example.com\n\
    \      Contact: <sip:Y1@pc.example.com>;q=0.1\n   Y2 would generate a REGISTER\
    \ that looks like, in part:\n      REGISTER sip:example.com SIP/2.0\n      To:\
    \ sip:Y@example.com\n      Contact: <sip:Y2@pc2.example.com>;attendant;q=1.0\n\
    \   Y3 would generate a REGISTER that looks like, in part:\n      REGISTER sip:example.com\
    \ SIP/2.0\n      To: sip:Y@example.com\n      Contact: <sip:Y3@pc3.example.com>;attendant;automata;q=0.5\n\
    \   Note that, in reality, the automated attendant would probably not use\n  \
    \ REGISTER.  Since the attendant would be used for every employee in\n   the company,\
    \ a static contact would probably be added\n   administratively for each user\
    \ in the enterprise.  However, the\n   information in that static contact would\
    \ be identical to the\n   information in the registration above.\n   When X makes\
    \ a call to the executive, Y, and expresses no preference,\n   the proxy computes\
    \ an implicit preference to support INVITE.  All\n   three contacts match such\
    \ a preference, even though they have not\n   indicated explicit support for INVITE.\
    \  Thus, no contacts are\n   discarded.  Since each contact has a different q-value,\
    \ the caller\n   preferences do not cause any reordering.  The result is that\
    \ the call\n   is first routed to Y2, then Y3, then Y1, all as a result of the\n\
    \   proper setting of the q-values.\n"
- title: 3.14.  Speak to the Executive
  contents:
  - '3.14.  Speak to the Executive

    '
- title: 3.14.1.  Desired Behavior
  contents:
  - "3.14.1.  Desired Behavior\n   This case is similar to that of Section 3.13, but\
    \ this time the\n   caller, X, has a preference.  X calls Y, but wants to speak\
    \ directly\n   to the executive.  X doesn't want the call to ring either the\n\
    \   assistant or the auto attendant (automaton).\n"
- title: 3.14.2.  Solution
  contents:
  - "3.14.2.  Solution\n   X's INVITE would look like, in part:\n      INVITE sip:Y@example.com\
    \ SIP/2.0\n      Reject-Contact: *;attendant\n      Reject-Contact: *;automata\n\
    \   Note that the caller uses two separate Reject-Contact header field\n   values,\
    \ rather than a single one with two separate feature\n   parameters.  The distinction\
    \ is important.  If X had to use a single\n   value with two parameters, a matching\
    \ UA would need to declare that\n   it was BOTH an attendant and an automaton.\
    \  If it only declared that\n   it was one of these, based on the matching rules\
    \ in the caller\n   preferences specification, it would not be rejected.\n   The\
    \ above request would result in the elimination of both Y2 and Y3\n   as contacts.\
    \  The call would then be routed to Y1, as desired.\n   This case indicates why\
    \ a CPL script, or some other programmed\n   version of the feature, is preferable.\
    \  With caller preferences, a\n   caller can override the desired ring sequence\
    \ and disturb the\n   executive without any kind of authorization.  A proper version\
    \ of\n   this service would simply not permit caller preferences to force the\n\
    \   call to go directly to the executive.\n"
- title: 3.15.  Mobile Phone Only
  contents:
  - '3.15.  Mobile Phone Only

    '
- title: 3.15.1.  Desired Behavior
  contents:
  - "3.15.1.  Desired Behavior\n   The situation is similar to that in Section 3.13.\
    \  However, the\n   executive also has a mobile phone that they have registered.\
    \  Caller\n   X knows that the owner of Y is traveling, and that an assistant\
    \ is\n   covering the office phone.  X wants to call Y and ring only the\n   mobile\
    \ phone.\n"
- title: 3.15.2.  Solution
  contents:
  - "3.15.2.  Solution\n   The mobile phone would generate a registration that looks\
    \ like, in\n   part:\n      REGISTER sip:example.com SIP/2.0\n      To: sip:Y@example.com\n\
    \      Contact: <sip:Y4@mobile.example.com>;mobility=\"mobile\";q=0.1\n   The\
    \ caller would express their preference by generating an INVITE\n   that looks\
    \ like, in part:\n      INVITE sip:Y@example.com SIP/2.0\n      Accept-Contact:\
    \ *;mobility=\"mobile\";require;explicit\n   All four contacts match.  However,\
    \ Y1 through Y3 match with a score\n   of zero.  Y4 matches with a score of 1.\
    \  Because of the \"require\" and\n   \"explicit\" tags, Y1 through Y3 are discarded,\
    \ and only Y4 is used, as\n   desired.\n   Note that this only works if the mobile\
    \ phone specifies the mobility\n   feature in its registration.\n"
- title: 3.16.  Simultaneous Languages
  contents:
  - '3.16.  Simultaneous Languages

    '
- title: 3.16.1.  Desired Behavior
  contents:
  - "3.16.1.  Desired Behavior\n   AOR Y is as in Section 3.9.  Caller X, fluent in\
    \ both English and\n   Spanish, has discovered that the company's Spanish language\n\
    \   documentation is inconsistent with the English language documentation\n  \
    \ and wants to discuss the differences between the two.  So X wants to\n   speak\
    \ with one of the workers that is fluent in both English and\n   Spanish.\n"
- title: 3.16.2.  Solution
  contents:
  - "3.16.2.  Solution\n   The caller would generate an INVITE that looks like, in\
    \ part:\n      INVITE sip:Y@example.com SIP/2.0\n      Accept-Contact: *;language=\"\
    en\";require\n      Accept-Contact: *;language=\"es\";require\n   This will require\
    \ a Contact URI to match both constraints.  That\n   means it needs to support\
    \ English and Spanish.  This will achieve the\n   desired property.\n   Note that\
    \ there are two separate Accept-Contact header fields.  If\n   the caller had\
    \ instead used this INVITE:\n      INVITE sip:Y@example.com SIP/2.0\n      Accept-Contact:\
    \ *;language=\"en,es\";require\n   It would have connected them to a UA that speaks\
    \ either English or\n   Spanish, which is not what is desired here.\n   An \"\
    explicit\" option is not used, because it would bypass contacts\n   that do not\
    \ include a language tag.\n"
- title: 3.17.  The Number You Have Called...
  contents:
  - '3.17.  The Number You Have Called...

    '
- title: 3.17.1.  Desired Behavior
  contents:
  - "3.17.1.  Desired Behavior\n   Consider once more the case of the executive, where\
    \ the caller wishes\n   to reach only their mobile phone (Section 3.15).  However,\
    \ there is a\n   twist.  The callee Y has moved to new address YY, and all the\n\
    \   configuration described for the callee now applies to YY.  The old\n   address\
    \ Y remains with a pair of statically assigned contacts.  One\n   contact is YY.\
    \  The other is M, referencing an automaton that\n   generates a voice message\
    \ reporting that the number has been changed.\n   The caller is unaware of the\
    \ move and calls Y, requesting to reach\n   the mobile phone in exactly the same\
    \ way they did in Section 3.15.\n   The call should connect to the mobile.\n"
- title: 3.17.2.  Solution
  contents:
  - "3.17.2.  Solution\n   There would be four registrations against YY:\n   YY1,\
    \ the executive, would generate a REGISTER that looks like, in\n   part:\n   \
    \   REGISTER sip:example.com SIP/2.0\n      To: sip:YY@example.com\n      Contact:\
    \ <sip:YY1@pc.example.com>;q=0.1\n   YY2, the attendant, would generate a REGISTER\
    \ that looks like, in\n   part:\n      REGISTER sip:example.com SIP/2.0\n    \
    \  To: sip:YY@example.com\n      Contact: <sip:YY2@pc2.example.com>;attendant;q=1.0\n\
    \   YY3, the answering service, would generate a REGISTER that looks\n   like,\
    \ in part:\n      REGISTER sip:example.com SIP/2.0\n      To: sip:YY@example.com\n\
    \      Contact: <sip:YY3@pc3.example.com>;attendant;automata;q=0.5\n   YY4, the\
    \ mobile, would generate a REGISTER that looks like, in part:\n      REGISTER\
    \ sip:example.com SIP/2.0\n      To: sip:YY@example.com\n      Contact: <sip:YY4@mobile.example.com>;mobility=\"\
    mobile\";q=0.5\n   Although it would be configured administratively, there are\
    \ two\n   registered contacts for Y.  The first is for the forwarding:\n     \
    \ REGISTER sip:example.com SIP/2.0\n      To: sip:Y@example.com\n      Contact:\
    \ <sip:YY@example.com>;q=1.0\n   and the second for the automated answering service:\n\
    \      REGISTER sip:example.com SIP/2.0\n      To: sip:Y@example.com\n      Contact:\
    \ <sip:machine@example.com>;automata;q=0.5\n   The caller, not knowing that Y\
    \ has moved, calls Y and asks for their\n   mobile phone:\n      INVITE sip:Y@example.com\
    \ SIP/2.0\n      Accept-Contact: *;mobility=\"mobile\";require;explicit\n   This\
    \ reaches the example.com proxy, which finds two registrations.\n   Only one of\
    \ these (the automaton) is associated with feature\n   parameters.  The other\
    \ has no feature parameters and is therefore\n   immune to caller preferences\
    \ processing.  The caller preferences are\n   applied to the automaton's contact.\
    \  The feature sets match, but have\n   a score of zero.  Since the \"require\"\
    \ and \"explicit\" tags are\n   present, the contact for the automaton is dropped.\
    \  The other\n   contact, YY@example.com, is then added back in as the sole contact.\n\
    \   The proxy therefore sends the call to sip:YY@example.com.  There,\n   there\
    \ are four registrations, all of which are associated with\n   feature parameters.\
    \  The caller preferences are applied.  Only YY4\n   matches explicitly, however.\
    \  Because of the presence of the\n   \"require\" and \"explicit\" flags, all\
    \ other contacts are dropped.  As\n   such, the call is forwarded to YY4, and\
    \ the mobile phone rings.\n"
- title: 3.18.  The Number You Have Called, Take Two
  contents:
  - '3.18.  The Number You Have Called, Take Two

    '
- title: 3.18.1.  Desired Behavior
  contents:
  - "3.18.1.  Desired Behavior\n   This use case is nearly identical to that of Section\
    \ 3.17.  However,\n   this time, the caller wishes to contact the personal phone\
    \ of Y.\n   They don't feel strongly about it, and will accept other devices.\n"
- title: 3.18.2.  Solution
  contents:
  - "3.18.2.  Solution\n   The INVITE generated by the caller in this case will look\
    \ like:\n      INVITE sip:Y@example.com SIP/2.0\n      Accept-Contact: *;class=\"\
    personal\"\n   This reaches the example.com proxy.  Once more, the first\n   registration\
    \ (which forwards to the address-of-record for YY) is\n   unaffected by the caller\
    \ preferences computation.  The other contact,\n   for the automaton, is a match,\
    \ but its score is zero.  Its caller\n   preference Qa equals zero.  The other\
    \ contact is added back in with a\n   Qa of 1.0.  The contacts are sorted based\
    \ on q-value, resulting in YY\n   (q=1.0) followed by machine (q=0.5).  These\
    \ are broken into\n   equivalence classes.  There are two classes, one for each\
    \ contact.\n   As a result, the caller's preferences have no impact on the ordering,\n\
    \   and the call is routed to YY.\n   When the request for YY@example.com is processed,\
    \ all four contacts\n   match.  However, the score for all of them is zero (none\
    \ are the\n   personal phone).  As such, the contacts are ordered based on q-value.\n\
    \   Each contact has a different q-value, so no reordering based on\n   caller\
    \ preference is possible (not that the caller preference would\n   cause a reordering;\
    \ all contacts have a Qa of 0.0).  Thus, the\n   highest q-value contact is tried,\
    \ which is the executive assistant.\n"
- title: 3.19.  Forwarding to a Colleague
  contents:
  - '3.19.  Forwarding to a Colleague

    '
- title: 3.19.1.  Desired Behavior
  contents:
  - "3.19.1.  Desired Behavior\n   Alice wants to forward her phone to Bob, but doesn't\
    \ want folks\n   calling her to get Bob's voicemail if he doesn't answer.  She\
    \ wants\n   her callers to get her voicemail.\n"
- title: 3.19.2.  Solution
  contents:
  - "3.19.2.  Solution\n   Alice would create three registrations.  The first, Y1,\
    \ represents\n   Alice's phone.  The second is Bob's AOR.  The third is a voicemail\n\
    \   server.  The three contacts have decreasing q-values.  The\n   registration\
    \ for Bob's AOR contains an embedded Reject-Contact header\n   field, which rejects\
    \ message servers.\n      REGISTER sip:example.com\n      To: <sip:alice@example.com>\n\
    \      Contact: <sip:Y1@192.0.2.150>;q=1.0\n      REGISTER sip:example.com\n \
    \     To: <sip:alice@example.com>\n      Contact: <sip:bob@example.com?Reject-Contact=*;msgserver>;q=0.3\n\
    \      REGISTER sip:example.com\n      To: <sip:alice@example.com>\n      Contact:\
    \ <sip:alice-drop@msgcenter.example.com>\n        ;msgserver;\n        ;automata\n\
    \        ;attendant\n        ;q=0.1\n   Meanwhile, Bob is registered as follows:\n\
    \      REGISTER sip:example.com\n      To: <sip:bob@example.com>\n      Contact:\
    \ <sip:bob3@192.0.2.212>;q=0.8\n      REGISTER sip:example.com\n      To: <sip:bob@example.com>\n\
    \      Contact: <sip:bob-drop@msgcenter.example.com>\n        ;msgserver\n   \
    \     ;automata\n        ;attendant\n        ;q=0.2\n   Carol calls Alice and\
    \ doesn't include any caller preference\n   parameters.  As such, the example.com\
    \ proxy constructs an implicit\n   preference for INVITE.  This preference matches\
    \ all three registered\n   contacts, with a score of zero.  Because each contact\
    \ has a different\n   q-value, there is no reordering of contacts.  So, the proxy\
    \ tries the\n   highest q-value Contact, Alice's desk phone (Y1).  The proxy cancels\n\
    \   after a few seconds (no answer).  The proxy then tries the next\n   Contact,\
    \ which is Bob's AOR.  When constructing the request for this\n   Contact, the\
    \ proxy includes the embedded Reject-Contact header field\n   in the INVITE. \
    \ This INVITE undergoes caller preferences processing\n   based on Bob's registered\
    \ Contacts.\n   Bob has two registered Contacts.  The second is a message server,\
    \ and\n   it matches the Reject-Contact in the INVITE.  Thus, this contact is\n\
    \   discarded.  The other remaining Contact, Bob's phone, is tried.  Bob\n   is\
    \ not around, so his phone rings for a while.  Upon timeout, the\n   proxy determines\
    \ it is unable to reach Bob's AOR.  So, the proxy\n   handling Alice tries the\
    \ final remaining contact, which is Alice's\n   message server.\n"
- title: 4.  Capability Use Cases
  contents:
  - "4.  Capability Use Cases\n   The callee capabilities spec [2] allows the Contact\
    \ header field in\n   OPTIONS responses and dialog initiating messages to contain\n\
    \   capabilities of the UA.  These capabilities can be very useful for\n   developing\
    \ new applications.  In the subsections below, several\n   usages are outlined.\n"
- title: 4.1.  Web Redirect
  contents:
  - "4.1.  Web Redirect\n   A caller sends an INVITE to the called party.  However,\
    \ the called\n   party is not present.  The proxy server representing the called\
    \ party\n   would like to redirect the caller to a web page, where they can find\n\
    \   out more information on how to reach the called party.  However, the\n   proxy\
    \ needs to know whether or not the caller supports redirects to\n   web pages.\
    \  If it doesn't, the proxy would connect the user to an\n   interactive voice\
    \ response (IVR) device, which would execute an\n   answering machine application.\n\
    \   The proxy could make such a determination if the caller included the\n   \"\
    schemes\" feature tag in the Contact header field of its INVITE:\n      INVITE\
    \ sip:callee@example.com SIP/2.0\n      Contact: <sip:host22.example.com>;schemes=\"\
    http,sip,sips,tel\"\n   This tells the proxy that the UAC can be redirected to\
    \ an http URI.\n   The INVITE from a normal \"black phone\" that lacked this capability\n\
    \   would look like:\n      INVITE sip:callee@example.com SIP/2.0\n      Contact:\
    \ <sip:host22.example.com>;schemes=\"sip,sips,tel\"\n   This indicates that it\
    \ needs to be connected to the IVR.\n"
- title: 4.2.  Voicemail Icon
  contents:
  - "4.2.  Voicemail Icon\n   On the circuit network, when a user makes a call, and\
    \ an answering\n   machine picks up, the caller usually requires several seconds\
    \ to\n   determine that they are speaking to an answering machine.  It would\n\
    \   be helpful if a phone could display an icon immediately on call\n   completion\
    \ that indicated that an answering machine was reached.\n   This indication can\
    \ be provided by the \"msgserver\" feature parameter.\n   When the answering machine\
    \ picks up, its 200 OK looks like, in part:\n      SIP/2.0 200 OK\n      Contact:\
    \ <sip:server33.example.com>;msgserver;automata;attendant\n   This tells the caller\
    \ that it's an answering machine.\n"
- title: 5.  Usage of the Feature Tags
  contents:
  - "5.  Usage of the Feature Tags\n   The caller preferences extension briefly enumerates\
    \ a list of media\n   feature tags that can be registered by a device and included\
    \ in the\n   Accept-Contact and Reject-Contact header fields in a request.  Proper\n\
    \   operation of caller preferences depends strongly on consistent\n   interpretation\
    \ of these feature tags by the caller and the callee.\n   In this section, we\
    \ provide some guidelines on the usage of these\n   feature tags.\n   Generally\
    \ speaking, the more information a device provides when it\n   registers, the\
    \ more effective the caller preferences extension is.\n   This is why the callee\
    \ capabilities extension recommends that a\n   device register as much information\
    \ as it can.  This point cannot be\n   overstated.\n   If devices explicitly registered\
    \ features that they don't support,\n   such as 'video=\"false\"', the operation\
    \ of RFC 3841 would be improved.\n   However, given the open-ended nature of capabilities,\
    \ it will never\n   be possible to ensure the registration of negative values\
    \ for all\n   capabilities of interest to a caller.  Furthermore, attempting to\
    \ do\n   so would significantly bloat registrations.  Instead, it is\n   recommended\
    \ that all \"unusual\" capabilities be explicitly registered.\n   The subsections\
    \ below show example registrations from typical\n   devices.\n"
- title: 5.1.  Traditional Cell Phone
  contents:
  - "5.1.  Traditional Cell Phone\n   A VoIP cell phone capable of making voice calls\
    \ would generate a\n   registration that looks like, in part:\n      REGISTER\
    \ sip:example.com SIP/2.0\n      To: sip:user@example.com\n      Contact: <sip:cell-phone@example.com>\n\
    \        ;audio\n        ;class=\"business\"\n        ;duplex=\"full\"\n     \
    \   ;+sip.extensions=\"100rel,path\"\n        ;mobility=\"mobile\"\n        ;methods=\"\
    INVITE,BYE,OPTIONS,CANCEL,ACK\"\n        ;schemes=\"sip,sips,tel\"\n        ;uri-user=\"\
    <cell-phone>\"\n        ;uri-domain=\"example.com\"\n"
- title: 5.2.  Traditional Work Phone
  contents:
  - "5.2.  Traditional Work Phone\n   A traditional landline IP PBX phone would generate\
    \ a registration\n   that looks like:\n      REGISTER sip:example.com SIP/2.0\n\
    \      To: sip:user@example.com\n      Contact: <sip:ippbx-phone@example.com>\n\
    \        ;audio\n        ;class=\"business\"\n        ;duplex=\"full\"\n     \
    \   ;events=\"dialog\"\n        ;+sip.extensions=\"100rel,privacy\"\n        ;mobility=\"\
    fixed\"\n        ;methods=\"INVITE,BYE,OPTIONS,CANCEL,ACK,SUBSCRIBE\"\n      \
    \  ;schemes=\"sip,sips,tel\"\n        ;uri-user=\"<ippbx-phone>\"\n        ;uri-domain=\"\
    example.com\"\n   This device also supports the dialog event package and several\
    \ SIP\n   extensions that would be typical in an IP PBX phone.\n"
- title: 5.3.  PC Messaging Application
  contents:
  - "5.3.  PC Messaging Application\n   A PC messenger client, capable of just doing\
    \ presence and IM (no\n   voice) would generate a registration that looks like:\n\
    \      REGISTER sip:example.com SIP/2.0\n      To: sip:user@example.com\n    \
    \  Contact: <sip:pc-msgr@example.com>\n        ;class=\"personal\"\n        ;mobility=\"\
    fixed\"\n        ;methods=\"OPTIONS,MESSAGE,NOTIFY\"\n        ;schemes=\"sip,sips,im,pres\"\
    \n        ;uri-user=\"<pc-msgr>\"\n        ;uri-domain=\"example.com\"\n"
- title: 5.4.  Standalone Videophone
  contents:
  - "5.4.  Standalone Videophone\n   A standalone IP videophone, capable of audio\
    \ and video, would\n   generate a registration that looks like, in part\n    \
    \  REGISTER sip:example.com SIP/2.0\n      To: sip:user@example.com\n      Contact:\
    \ <sip:vp@example.com>\n        ;audio\n        ;video\n        ;class=\"business\"\
    \n        ;duplex=\"full\"\n        ;mobility=\"fixed\"\n        ;methods=\"INVITE,BYE,OPTIONS,CANCEL,ACK\"\
    \n        ;schemes=\"sip,sips,tel\"\n        ;uri-user=\"<vp>\"\n        ;uri-domain=\"\
    example.com\"\n"
- title: 6.  Example of Implementation of Preference and Capability Matching
  contents:
  - "6.  Example of Implementation of Preference and Capability Matching\n   RFC 3841\
    \ [3] utilizes the definitions and feature matching algorithm\n   defined in RFC\
    \ 2533 [6].  This provides a precise normative\n   specification of the algorithm.\
    \  However, that specification isn't\n   ideal as a guideline for implementation\
    \ because it is more complex\n   than is required for the restricted use employed\
    \ by RFC 3841.  (The\n   simplification is primarily because a particular feature\
    \ tag may only\n   appear once in each Contact, Accept-Contact, or Reject-Contact\n\
    \   header.)\n   This section provides a sample approach to implementing the matching\n\
    \   of caller preferences to callee capabilities; it does not require the\n  \
    \ use of the notation and techniques of RFC 2533.  It is not normative,\n   but\
    \ is believed to be consistent with that definition.  It may be\n   considered\
    \ an alternative for that portion of RFC 3841 beginning with\n   Section 7.2.3\
    \ and extending to the end of page 13 in the middle of\n   Section 7.2.4.\n  \
    \ In this section, there are frequent references to syntactic elements\n   defined\
    \ by ABNF in RFC 3840, Section 9, and RFC 3841, Section 10.\n   Here, ABNF elements\
    \ are enclosed to single quotes -- for example,\n   'feature-param'.  Such a reference\
    \ identifies a sequence of octets\n   within a SIP request that match the corresponding\
    \ ABNF element when\n   the sip request is parsed according to RFCs 3261, 3840,\
    \ and 3841.\n"
- title: 6.1.  Extracting a Feature Set from a Header
  contents:
  - "6.1.  Extracting a Feature Set from a Header\n   Contact header fields, Accept-Contact\
    \ header fields, and Reject-\n   Contact header fields each contain zero or more\
    \ 'feature-param's,\n   each in turn may contain one or more 'tag-value's, or\
    \ a 'string-\n   value'.  The first step is to extract from each header field\
    \ a more\n   useful representation as a feature set, herein called an FS.  (This\n\
    \   FS representation of a feature set representation differs from that\n   in\
    \ RFC 2533.)  This process is the same for each type of header.\n   An FS consists\
    \ of a set of one or more feature params denoted by FP.\n   Each FP has a name,\
    \ denoted FP.NAME, and a set of one or more value\n   ranges denoted by VR.  Each\
    \ VR consists of:\n   o  A type (VR.TYPE): either token (TOKEN-TYPE), string (STRING-TYPE),\n\
    \      or number-range (RANGE-TYPE)\n   o  A negation flag (VR.NEGATION): either\
    \ NEGATED, or NON-NEGATED\n   o  The actual value, differing by type:\n      *\
    \  For TOKEN-TYPE and STRING-TYPE, a sequence of octets\n         (VR.OCTETS)\n\
    \      *  For RANGE-TYPE, a pair of signed real numbers (VR.LB and VR.UB)\n  \
    \       representing the lower and upper bounds on the range,\n         inclusive.\n\
    \   A single FS is created to represent the features of one header.\n   (Contact,\
    \ Accept-Contact, Reject-Contact.)  Within the FS, an FP is\n   created for each\
    \ 'feature-param' in the header.  To create an FP, a\n   'feature-param' is examined\
    \ as follows:\n   o  If the 'feature-param' contains an instance of 'other-tags',\
    \ then\n      FP.NAME is the value matched by 'ftag-name'.\n   o  Otherwise, the\
    \ 'feature-param' contains an instance of 'base-\n      tags'.  If the value matched\
    \ by 'base-tags' is \"language\" or\n      \"type\", then FP.NAME is just the\
    \ value matched by 'base-tags'.  If\n      not, then FP.NAME is the value matched\
    \ by 'base-tags' and prefixed\n      with \"sip.\".\n   o  The value of the 'feature-param',\
    \ if any, is processed (according\n      to the rules in the next section) to\
    \ extract a set of one or more\n      VRs that are associated with the FP.\n"
- title: 6.2.  Extracting Values from a Feature Parameter
  contents:
  - "6.2.  Extracting Values from a Feature Parameter\n   The value of a 'feature-param'\
    \ is an encoded representation (as\n   specified in RFC 3840) of one or more value\
    \ ranges of the\n   corresponding feature.  There are several data types that\
    \ these\n   values may take on: boolean, token, string, number, or numeric range.\n\
    \   The type is determined by the encoded form of the value.  (These\n   types\
    \ and their representations are specific to this implementation.)\n   (Note: numeric\
    \ values can explicitly represent a range of values.\n   The other types only\
    \ represent single value: a degenerate range.  The\n   term value range is used\
    \ to encompass all of these.)\n   The value of the 'feature-param' ('string-value',\
    \ 'tag-value-list',\n   or none) is converted to VR form as follows:\n   o  If\
    \ there is no value, then a single new VR is created with VR.TYPE\n      = TOKEN-TYPE,\
    \ VR.NEGATION = NON-NEGATED, and VR.OCTETS set to\n      \"true\".\n   o  If the\
    \ 'feature-param' contains a 'string-value', then a single\n      new VR is created\
    \ with VR.TYPE = STRING-TYPE, VR.NEGATION =\n      NON-NEGATED, and VR.OCTETS\
    \ is set to the octets matching 'qdtext'.\n   o  Otherwise the 'feature-param'\
    \ contains a 'tag-value-list', and a\n      new VR is created for each 'tag-value'\
    \ in the 'tag-value-list', as\n      follows:\n   o  If the 'tag-value' begins\
    \ with \"!\", VR.NEGATION = NEGATED;\n      otherwise, VR.NEGATION = NON-NEGATED.\n\
    \   o  If the 'tag-value' contains a 'boolean' or 'token-nobang', then\n     \
    \ VR.TYPE = TOKEN-TYPE, and VR.OCTETS is set to the octets matched\n      by 'boolean'\
    \ or 'token-nobang'.\n   o  If the 'tag-value' contains a 'numeric', VR.TYPE =\
    \ RANGE-TYPE and:\n      *  If 'numeric-relation' is \"<=\", VR.UB is set to the\
    \ numeric\n         value matching 'number'.  VR.LB is set to MIN-REAL (a negative\n\
    \         number with the largest expressible magnitude.)\n      *  If 'numeric-relation'\
    \ is \"=\", both VR.LB and VR.UB are set to\n         the numeric value matching\
    \ 'number'.\n      *  If 'numeric-relation' is \">=\", VR.LB is set to the numeric\n\
    \         value matching 'number' plus a small epsilon.  VR.UB is set to\n   \
    \      MAX-REAL (a positive number with the largest expressible\n         magnitude).\n\
    \      *  Else the 'numeric-relation' consists of two 'number's separated\n  \
    \       by a colon.  In this case, VR.LB is set to the numeric value of\n    \
    \     the smaller of the two numbers, and VR.UB is set to the numeric\n      \
    \   value of the larger of the two numbers.\n"
- title: 6.3.  Comparing Two Value-Ranges
  contents:
  - "6.3.  Comparing Two Value-Ranges\n   Two VRs match if their ranges overlap. \
    \ The comparison is done\n   according to type, and only comparisons between like\
    \ types are\n   defined.  When two VRs of differing types are compared, they are\n\
    \   considered not to overlap.  Either or both of the VRs may be NEGATED.\n  \
    \ Comparison proceeds as follows:\n   o  If the VRs are of different types, the\
    \ match is false.\n   o  Otherwise:\n      *  Two VRs with VR.TYPE = RANGE-TYPE\
    \ match if max(VR1.LB, VR2.LB)\n         <= min(VR1.UB, VR2.UB).\n      *  Two\
    \ VRs with VR.TYPE = TOKEN-TYPE match if their respective\n         VR.OCTETS\
    \ values compare equal by case-insensitive comparison.\n      *  Two VRs with\
    \ VR.TYPE = STRING-TYPE match if their respective\n         VR.OCTETS values compare\
    \ equal by case-sensitive comparison.\n   o  The result (true/false) is then negated\
    \ if VR1.NEGATION = NEGATED,\n      and negated again if VR2.NEGATION = NEGATED.\n"
- title: 6.4.  Feature Set to Feature Set Matching
  contents:
  - "6.4.  Feature Set to Feature Set Matching\n   In RFC 2533, the matching of two\
    \ feature sets is commutative, but as\n   applied to caller preferences matching\
    \ it is not.  In this\n   application, one feature set comes from an Accept-Contact\
    \ or Reject-\n   Contact header, and the other comes from a Contact header.  For\n\
    \   purposes of this description, these will be termed the preferred-\n   features\
    \ (FSp) and the capability-features (FSc), respectively.\n   Non-commutativity\
    \ arises from explicit tests for the presence among\n   capability-params of feature\
    \ param names used in preferred-features.\n   A preferred-features feature set\
    \ FSp may be matched to one\n   capability-features feature set FSc, and this\
    \ yields the following\n   metrics:\n   o  NPF - The number of preferred-features.\n\
    \   o  NCF - The number of preferred-features for which there is a\n      capability-feature\
    \ of the same name.\n   o  NVM - The number of value matches between corresponding\
    \ features\n      of the two feature sets.\n   For a particular pair of FPp and\
    \ FPc, these metrics are computed as\n   follows:\n   o  All the metrics are set\
    \ to zero.\n   o  The following steps are applied for each feature param (FPp)\
    \ of\n      the FSp:\n      *  NPF is incremented.\n      *  A corresponding FP\
    \ with the same name is sought (using case-\n         insensitive comparison)\
    \ in the FSc.\n      *  If a corresponding feature param (FPc) is found:\n   \
    \      +  NCF is incremented.\n         +  Every VR of FPp is matched to every\
    \ VR of FPc.\n         +  If any of those matches succeed, NVM is incremented.\n"
- title: 6.5.  Selecting and Ordering Contacts Based on Caller Preferences
  contents:
  - '6.5.  Selecting and Ordering Contacts Based on Caller Preferences

    '
- title: 6.5.1.  Reject-Contact Processing
  contents:
  - "6.5.1.  Reject-Contact Processing\n   The reject processing specified in Section\
    \ 7.4.2 of RFC 3841 may be\n   performed as follows:\n   o  For each candidate\
    \ Contact in the target set, match the feature\n      set of each Reject-Contact\
    \ to it.\n   o  If (NVM == NPF) & (NCF == NPF), remove the contact URI from the\n\
    \      target set.\n"
- title: 6.5.2.  Accept-Contact Processing
  contents:
  - "6.5.2.  Accept-Contact Processing\n   The matching of an Accept-Contact against\
    \ a Contact and subsequent\n   scoring of the match specified in Section 7.4.2\
    \ of RFC 3841 may be\n   performed as follows:\n   o  Match the feature set of\
    \ the Accept-Contact to that of the Contact\n      as specified in Section 6.4.\n\
    \   o  If (NVM < NCF), then the match failed.  If the Accept-Contact had\n   \
    \   its \"require\" flag set, then discard the corresponding contact URI\n   \
    \   from the target set.\n   o  Compute the score as NVM/NPF.\n   o  Apply the\
    \ \"require\" and \"explicit\" flags as specified in the text\n      and Figure\
    \ 7 of RFC 3841.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   This document provides explanation and examples\
    \ of the use and\n   implementation of RFCs 3840 and 3841.  The security considerations\n\
    \   sections of those documents apply to the material presented here.\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   The authors would like to thank Rohan Mahy for his input\
    \ in this\n   specification.\n"
- title: 9.  Informative References
  contents:
  - "9.  Informative References\n   [1]   Rosenberg, J., Schulzrinne, H., Camarillo,\
    \ G., Johnston, A.,\n         Peterson, J., Sparks, R., Handley, M., and E. Schooler,\
    \ \"SIP:\n         Session Initiation Protocol\", RFC 3261, June 2002.\n   [2]\
    \   Rosenberg, J., Schulzrinne, H., and P. Kyzivat, \"Indicating\n         User\
    \ Agent Capabilities in the Session Initiation Protocol\n         (SIP)\", RFC\
    \ 3840, August 2004.\n   [3]   Rosenberg, J., Schulzrinne, H., and P. Kyzivat,\
    \ \"Caller\n         Preferences for the Session Initiation Protocol (SIP)\",\n\
    \         RFC 3841, August 2004.\n   [4]   Mankin, A., Bradner, S., Mahy, R.,\
    \ Willis, D., Ott, J., and B.\n         Rosen, \"Change Process for the Session\
    \ Initiation Protocol\n         (SIP)\", BCP 67, RFC 3427, December 2002.\n  \
    \ [5]   Lennox, J. and H. Schulzrinne, \"Call Processing Language\n         Framework\
    \ and Requirements\", RFC 2824, May 2000.\n   [6]   Klyne, G., \"A Syntax for\
    \ Describing Media Feature Sets\",\n         RFC 2533, March 1999.\n   [7]   Rosenberg,\
    \ J., Schulzrinne, H., and R. Mahy, \"An INVITE-\n         Initiated Dialog Event\
    \ Package for the Session Initiation\n         Protocol (SIP)\", RFC 4235, November\
    \ 2005.\n   [8]   Rosenberg, J., \"A Presence Event Package for the Session\n\
    \         Initiation Protocol (SIP)\", RFC 3856, August 2004.\n   [9]   Rosenberg,\
    \ J., Peterson, J., Schulzrinne, H., and G. Camarillo,\n         \"Best Current\
    \ Practices for Third Party Call Control (3pcc) in\n         the Session Initiation\
    \ Protocol (SIP)\", BCP 85, RFC 3725,\n         April 2004.\n   [10]  Campbell,\
    \ B., \"The Message Session Relay Protocol\", Work in\n         Progress, July\
    \ 2006.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Jonathan Rosenberg\n   Cisco Systems\n   600 Lanidex Plaza\n\
    \   Parsippany, NJ  07054\n   US\n   Phone: +1 973 952-5000\n   EMail: jdrosen@cisco.com\n\
    \   URI:   http://www.jdrosen.net\n   Paul Kyzivat\n   Cisco Systems\n   1414\
    \ Massachusetts Avenue\n   Boxborough, MA  01719\n   US\n   Phone: +1 978 936-1881\n\
    \   EMail: pkyzivat@cisco.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
