- title: __initial_text__
  contents:
  - '      An Approach for Using LDAP as a Network Information Service

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes an experimental mechanism for mapping\n\
    \   entities related to TCP/IP and the UNIX system into X.500 [X500]\n   entries\
    \ so that they may be resolved with the Lightweight Directory\n   Access Protocol\
    \ [RFC2251]. A set of attribute types and object\n   classes are proposed, along\
    \ with specific guidelines for interpreting\n   them.\n   The intention is to\
    \ assist the deployment of LDAP as an\n   organizational nameservice. No proposed\
    \ solutions are intended as\n   standards for the Internet. Rather, it is hoped\
    \ that a general\n   consensus will emerge as to the appropriate solution to such\n\
    \   problems, leading eventually to the adoption of standards. The\n   proposed\
    \ mechanism has already been implemented with some success.\n"
- title: 1. Background and Motivation
  contents:
  - "1. Background and Motivation\n   The UNIX (R) operating system, and its derivatives\
    \ (specifically,\n   those which support TCP/IP and conform to the X/Open Single\
    \ UNIX\n   specification [XOPEN]) require a means of looking up entities, by\n\
    \   matching them against search criteria or by enumeration. (Other\n   operating\
    \ systems that support TCP/IP may provide some means of\n   resolving some of\
    \ these entities. This schema is applicable to those\n   environments also.)\n\
    \   These entities include users, groups, IP services (which map names to\n  \
    \ IP ports and protocols, and vice versa), IP protocols (which map\n   names to\
    \ IP protocol numbers and vice versa), RPCs (which map names\n   to ONC Remote\
    \ Procedure Call [RFC1057] numbers and vice versa), NIS\n   netgroups, booting\
    \ information (boot parameters and MAC address\n   mappings), filesystem mounts,\
    \ IP hosts and networks, and RFC822 mail\n   aliases.\n   Resolution requests\
    \ are made through a set of C functions, provided\n   in the UNIX system's C library.\
    \ For example, the UNIX system utility\n   \"ls\", which enumerates the contents\
    \ of a filesystem directory, uses\n   the C library function getpwuid() in order\
    \ to map user IDs to login\n   names. Once the request is made, it is resolved\
    \ using a \"nameservice\"\n   which is supported by the client library. The nameservice\
    \ may be, at\n   its simplest, a collection of files in the local filesystem which\
    \ are\n   opened and searched by the C library. Other common nameservices\n  \
    \ include the Network Information Service (NIS) and the Domain Name\n   System\
    \ (DNS). (The latter is typically used for resolving hosts,\n   services and networks.)\
    \ Both these nameservices have the advantage of\n   being distributed and thus\
    \ permitting a common set of entities to be\n   shared amongst many clients.\n\
    \   LDAP is a distributed, hierarchical directory service access protocol\n  \
    \ which is used to access repositories of users and other network-\n   related\
    \ entities. Because LDAP is often not tightly integrated with\n   the host operating\
    \ system, information such as users may need to be\n   kept both in LDAP and in\
    \ an operating system supported nameservice\n   such as NIS. By using LDAP as\
    \ the the primary means of resolving\n   these entities, these redundancy issues\
    \ are minimized and the\n   scalability of LDAP can be exploited. (By comparison,\
    \ NIS services\n   based on flat files do not have the scalability or extensibility\
    \ of\n   LDAP or X.500.)\n   The object classes and attributes defined below are\
    \ suitable for\n   representing the aforementioned entities in a form compatible\
    \ with\n   LDAP and X.500 directory services.\n"
- title: 2. General Issues
  contents:
  - '2. General Issues

    '
- title: 2.1. Terminology
  contents:
  - "2.1. Terminology\n   The key words \"MUST\", \"SHOULD\", and \"MAY\" used in\
    \ this document are\n   to be interpreted as described in [RFC2119].\n   For the\
    \ purposes of this document, the term \"nameservice\" refers to a\n   service,\
    \ such as NIS or flat files, that is used by the operating\n   system to resolve\
    \ entities within a single, local naming context.\n   Contrast this with a \"\
    directory service\" such as LDAP, which supports\n   extensible schema and multiple\
    \ naming contexts.\n   The term \"NIS-related entities\" broadly refers to entities\
    \ which are\n   typically resolved using the Network Information Service. (NIS\
    \ was\n   previously known as YP.) Deploying LDAP for resolving these entities\n\
    \   does not imply that NIS be used, as a gateway or otherwise. In\n   particular,\
    \ the host and network classes are generically applicable,\n   and may be implemented\
    \ on any system that wishes to use LDAP or X.500\n   for host and network resolution.\n\
    \   The \"DUA\" (directory user agent) refers to the LDAP client querying\n  \
    \ these entities, such as an LDAP to NIS gateway or the C library.  The\n   \"\
    client\" refers to the application which ultimately makes use of the\n   information\
    \ returned by the resolution. It is irrelevant whether the\n   DUA and the client\
    \ reside within the same address space. The act of\n   the DUA making this information\
    \ to the client is termed\n   \"republishing\".\n   To avoid confusion, the term\
    \ \"login name\" refers to the user's login\n   name (being the value of the uid\
    \ attribute) and the term \"user ID\"\n   refers to he user's integer identification\
    \ number (being the value of\n   the uidNumber attribute).\n   The phrases \"\
    resolving an entity\" and \"resolution of entities\" refer\n   respectively to\
    \ enumerating NIS-related entities of a given type, and\n   matching them against\
    \ a given search criterion. One or more entities\n   are returned as a result\
    \ of successful \"resolutions\" (a \"match\"\n   operation will only return one\
    \ entity).\n   The use of the term UNIX does not confer upon this schema the\n\
    \   endorsement of owners of the UNIX trademark. Where necessary, the\n   term\
    \ \"TCP/IP entity\" is used to refer to protocols, services, hosts,\n   and networks,\
    \ and the term \"UNIX entity\" to its complement. (The\n   former category does\
    \ not mandate the host operating system supporting\n   the interfaces required\
    \ for resolving UNIX entities.)\n   The OIDs defined below are derived from iso(1)\
    \ org(3) dod(6)\n   internet(1) directory(1) nisSchema(1).\n"
- title: 2.2. Attributes
  contents:
  - "2.2. Attributes\n   The attributes and classes defined in this document are summarized\n\
    \   below.\n   The following attributes are defined in this document:\n      \
    \     uidNumber\n           gidNumber\n           gecos\n           homeDirectory\n\
    \           loginShell\n           shadowLastChange\n           shadowMin\n  \
    \         shadowMax\n           shadowWarning\n           shadowInactive\n   \
    \        shadowExpire\n           shadowFlag\n           memberUid\n         \
    \  memberNisNetgroup\n           nisNetgroupTriple\n           ipServicePort\n\
    \           ipServiceProtocol\n           ipProtocolNumber\n           oncRpcNumber\n\
    \           ipHostNumber\n           ipNetworkNumber\n           ipNetmaskNumber\n\
    \           macAddress\n           bootParameter\n           bootFile\n      \
    \     nisMapName\n           nisMapEntry\n   Additionally, some of the attributes\
    \ defined in [RFC2256] are\n   required.\n"
- title: 2.3. Object classes
  contents:
  - "2.3. Object classes\n   The following object classes are defined in this document:\n\
    \           posixAccount\n           shadowAccount\n           posixGroup\n  \
    \         ipService\n           ipProtocol\n           oncRpc\n           ipHost\n\
    \           ipNetwork\n           nisNetgroup\n           nisMap\n           nisObject\n\
    \           ieee802Device\n           bootableDevice\n   Additionally, some of\
    \ the classes defined in [RFC2256] are required.\n"
- title: 2.4. Syntax definitions
  contents:
  - "2.4. Syntax definitions\n   The following syntax definitions [RFC2252] are used\
    \ by this schema.\n   The nisNetgroupTripleSyntax represents NIS netgroup triples:\n\
    \           ( nisSchema.0.0 NAME 'nisNetgroupTripleSyntax'\n             DESC\
    \ 'NIS netgroup triple' )\n   Values in this syntax are represented by the following:\n\
    \        nisnetgrouptriple = \"(\" hostname \",\" username \",\" domainname \"\
    )\"\n        hostname          = \"\" / \"-\" / keystring\n        username  \
    \        = \"\" / \"-\" / keystring\n        domainname        = \"\" / \"-\"\
    \ / keystring\n   X.500 servers may use the following representation of the above\n\
    \   syntax:\n        nisNetgroupTripleSyntax ::= SEQUENCE {\n         hostname\
    \  [0] IA5String OPTIONAL,\n         username  [1] IA5String OPTIONAL,\n     \
    \    domainname  [2] IA5String OPTIONAL\n        }\n   The bootParameterSyntax\
    \ syntax represents boot parameters:\n           ( nisSchema.0.1 NAME 'bootParameterSyntax'\n\
    \             DESC 'Boot parameter' )\n   where:\n        bootparameter     =\
    \ key \"=\" server \":\" path\n        key               = keystring\n       \
    \ server            = keystring\n        path              = keystring\n   X.500\
    \ servers may use the following representation of the above\n   syntax:\n    \
    \    bootParameterSyntax ::= SEQUENCE {\n         key     IA5String,\n       \
    \  server  IA5String,\n         path    IA5String\n        }\n   Values adhering\
    \ to these syntaxes are encoded as strings by LDAP\n   servers.\n"
- title: 3. Attribute definitions
  contents:
  - "3. Attribute definitions\n   This section contains attribute definitions to be\
    \ implemented by DUAs\n   supporting this schema.\n        ( nisSchema.1.0 NAME\
    \ 'uidNumber'\n          DESC 'An integer uniquely identifying a user in an\n\
    \                administrative domain'\n          EQUALITY integerMatch SYNTAX\
    \ 'INTEGER' SINGLE-VALUE )\n        ( nisSchema.1.1 NAME 'gidNumber'\n       \
    \   DESC 'An integer uniquely identifying a group in an\n                administrative\
    \ domain'\n          EQUALITY integerMatch SYNTAX 'INTEGER' SINGLE-VALUE )\n \
    \       ( nisSchema.1.2 NAME 'gecos'\n          DESC 'The GECOS field; the common\
    \ name'\n          EQUALITY caseIgnoreIA5Match\n          SUBSTRINGS caseIgnoreIA5SubstringsMatch\n\
    \          SYNTAX 'IA5String' SINGLE-VALUE )\n        ( nisSchema.1.3 NAME 'homeDirectory'\n\
    \          DESC 'The absolute path to the home directory'\n          EQUALITY\
    \ caseExactIA5Match\n          SYNTAX 'IA5String' SINGLE-VALUE )\n        ( nisSchema.1.4\
    \ NAME 'loginShell'\n          DESC 'The path to the login shell'\n          EQUALITY\
    \ caseExactIA5Match\n          SYNTAX 'IA5String' SINGLE-VALUE )\n        ( nisSchema.1.5\
    \ NAME 'shadowLastChange'\n          EQUALITY integerMatch\n          SYNTAX 'INTEGER'\
    \ SINGLE-VALUE )\n        ( nisSchema.1.6 NAME 'shadowMin'\n          EQUALITY\
    \ integerMatch\n          SYNTAX 'INTEGER' SINGLE-VALUE )\n        ( nisSchema.1.7\
    \ NAME 'shadowMax'\n          EQUALITY integerMatch\n          SYNTAX 'INTEGER'\
    \ SINGLE-VALUE )\n        ( nisSchema.1.8 NAME 'shadowWarning'\n          EQUALITY\
    \ integerMatch\n          SYNTAX 'INTEGER' SINGLE-VALUE )\n        ( nisSchema.1.9\
    \ NAME 'shadowInactive'\n          EQUALITY integerMatch\n          SYNTAX 'INTEGER'\
    \ SINGLE-VALUE )\n        ( nisSchema.1.10 NAME 'shadowExpire'\n          EQUALITY\
    \ integerMatch\n          SYNTAX 'INTEGER' SINGLE-VALUE )\n        ( nisSchema.1.11\
    \ NAME 'shadowFlag'\n          EQUALITY integerMatch\n          SYNTAX 'INTEGER'\
    \ SINGLE-VALUE )\n        ( nisSchema.1.12 NAME 'memberUid'\n          EQUALITY\
    \ caseExactIA5Match\n          SUBSTRINGS caseExactIA5SubstringsMatch\n      \
    \    SYNTAX 'IA5String' )\n        ( nisSchema.1.13 NAME 'memberNisNetgroup'\n\
    \          EQUALITY caseExactIA5Match\n          SUBSTRINGS caseExactIA5SubstringsMatch\n\
    \          SYNTAX 'IA5String' )\n        ( nisSchema.1.14 NAME 'nisNetgroupTriple'\n\
    \          DESC 'Netgroup triple'\n          SYNTAX 'nisNetgroupTripleSyntax'\
    \ )\n        ( nisSchema.1.15 NAME 'ipServicePort'\n          EQUALITY integerMatch\n\
    \          SYNTAX 'INTEGER' SINGLE-VALUE )\n        ( nisSchema.1.16 NAME 'ipServiceProtocol'\n\
    \          SUP name )\n        ( nisSchema.1.17 NAME 'ipProtocolNumber'\n    \
    \      EQUALITY integerMatch\n          SYNTAX 'INTEGER' SINGLE-VALUE )\n    \
    \    ( nisSchema.1.18 NAME 'oncRpcNumber'\n          EQUALITY integerMatch\n \
    \         SYNTAX 'INTEGER' SINGLE-VALUE )\n        ( nisSchema.1.19 NAME 'ipHostNumber'\n\
    \          DESC 'IP address as a dotted decimal, eg. 192.168.1.1,\n          \
    \      omitting leading zeros'\n          EQUALITY caseIgnoreIA5Match\n      \
    \    SYNTAX 'IA5String{128}' )\n        ( nisSchema.1.20 NAME 'ipNetworkNumber'\n\
    \          DESC 'IP network as a dotted decimal, eg. 192.168,\n              \
    \  omitting leading zeros'\n          EQUALITY caseIgnoreIA5Match\n          SYNTAX\
    \ 'IA5String{128}' SINGLE-VALUE )\n        ( nisSchema.1.21 NAME 'ipNetmaskNumber'\n\
    \          DESC 'IP netmask as a dotted decimal, eg. 255.255.255.0,\n        \
    \        omitting leading zeros'\n          EQUALITY caseIgnoreIA5Match\n    \
    \      SYNTAX 'IA5String{128}' SINGLE-VALUE )\n        ( nisSchema.1.22 NAME 'macAddress'\n\
    \          DESC 'MAC address in maximal, colon separated hex\n               \
    \ notation, eg. 00:00:92:90:ee:e2'\n          EQUALITY caseIgnoreIA5Match\n  \
    \        SYNTAX 'IA5String{128}' )\n        ( nisSchema.1.23 NAME 'bootParameter'\n\
    \          DESC 'rpc.bootparamd parameter'\n          SYNTAX 'bootParameterSyntax'\
    \ )\n        ( nisSchema.1.24 NAME 'bootFile'\n          DESC 'Boot image name'\n\
    \          EQUALITY caseExactIA5Match\n          SYNTAX 'IA5String' )\n      \
    \  ( nisSchema.1.26 NAME 'nisMapName'\n          SUP name )\n        ( nisSchema.1.27\
    \ NAME 'nisMapEntry'\n          EQUALITY caseExactIA5Match\n          SUBSTRINGS\
    \ caseExactIA5SubstringsMatch\n          SYNTAX 'IA5String{1024}' SINGLE-VALUE\
    \ )\n"
- title: 4. Class definitions
  contents:
  - "4. Class definitions\n   This section contains class definitions to be implemented\
    \ by DUAs\n   supporting the schema.\n   The rfc822MailGroup object class MAY\
    \ be used to represent a mail\n   group for the purpose of alias expansion. Several\
    \ alternative schemes\n   for mail routing and delivery using LDAP directories,\
    \ which are\n   outside the scope of this document.\n        ( nisSchema.2.0 NAME\
    \ 'posixAccount' SUP top AUXILIARY\n          DESC 'Abstraction of an account\
    \ with POSIX attributes'\n          MUST ( cn $ uid $ uidNumber $ gidNumber $\
    \ homeDirectory )\n          MAY ( userPassword $ loginShell $ gecos $ description\
    \ ) )\n        ( nisSchema.2.1 NAME 'shadowAccount' SUP top AUXILIARY\n      \
    \    DESC 'Additional attributes for shadow passwords'\n          MUST uid\n \
    \         MAY ( userPassword $ shadowLastChange $ shadowMin\n                shadowMax\
    \ $ shadowWarning $ shadowInactive $\n                shadowExpire $ shadowFlag\
    \ $ description ) )\n        ( nisSchema.2.2 NAME 'posixGroup' SUP top STRUCTURAL\n\
    \          DESC 'Abstraction of a group of accounts'\n          MUST ( cn $ gidNumber\
    \ )\n          MAY ( userPassword $ memberUid $ description ) )\n        ( nisSchema.2.3\
    \ NAME 'ipService' SUP top STRUCTURAL\n          DESC 'Abstraction an Internet\
    \ Protocol service.\n                Maps an IP port and protocol (such as tcp\
    \ or udp)\n                to one or more names; the distinguished value of\n\
    \                the cn attribute denotes the service's canonical\n          \
    \      name'\n          MUST ( cn $ ipServicePort $ ipServiceProtocol )\n    \
    \      MAY ( description ) )\n        ( nisSchema.2.4 NAME 'ipProtocol' SUP top\
    \ STRUCTURAL\n          DESC 'Abstraction of an IP protocol. Maps a protocol number\n\
    \                to one or more names. The distinguished value of the cn\n   \
    \             attribute denotes the protocol's canonical name'\n          MUST\
    \ ( cn $ ipProtocolNumber $ description )\n          MAY description )\n     \
    \   ( nisSchema.2.5 NAME 'oncRpc' SUP top STRUCTURAL\n          DESC 'Abstraction\
    \ of an Open Network Computing (ONC)\n               [RFC1057] Remote Procedure\
    \ Call (RPC) binding.\n               This class maps an ONC RPC number to a name.\n\
    \               The distinguished value of the cn attribute denotes\n        \
    \       the RPC service's canonical name'\n          MUST ( cn $ oncRpcNumber\
    \ $ description )\n          MAY description )\n        ( nisSchema.2.6 NAME 'ipHost'\
    \ SUP top AUXILIARY\n          DESC 'Abstraction of a host, an IP device. The\
    \ distinguished\n                value of the cn attribute denotes the host's\
    \ canonical\n                name. Device SHOULD be used as a structural class'\n\
    \          MUST ( cn $ ipHostNumber )\n          MAY ( l $ description $ manager\
    \ ) )\n        ( nisSchema.2.7 NAME 'ipNetwork' SUP top STRUCTURAL\n         \
    \ DESC 'Abstraction of a network. The distinguished value of\n               \
    \ the cn attribute denotes the network's canonical name'\n          MUST ( cn\
    \ $ ipNetworkNumber )\n          MAY ( ipNetmaskNumber $ l $ description $ manager\
    \ ) )\n        ( nisSchema.2.8 NAME 'nisNetgroup' SUP top STRUCTURAL\n       \
    \   DESC 'Abstraction of a netgroup. May refer to other netgroups'\n         \
    \ MUST cn\n          MAY ( nisNetgroupTriple $ memberNisNetgroup $ description\
    \ ) )\n        ( nisSchema.2.09 NAME 'nisMap' SUP top STRUCTURAL\n          DESC\
    \ 'A generic abstraction of a NIS map'\n          MUST nisMapName\n          MAY\
    \ description )\n        ( nisSchema.2.10 NAME 'nisObject' SUP top STRUCTURAL\n\
    \          DESC 'An entry in a NIS map'\n          MUST ( cn $ nisMapEntry $ nisMapName\
    \ )\n          MAY description )\n        ( nisSchema.2.11 NAME 'ieee802Device'\
    \ SUP top AUXILIARY\n          DESC 'A device with a MAC address; device SHOULD\
    \ be\n                used as a structural class'\n          MAY macAddress )\n\
    \        ( nisSchema.2.12 NAME 'bootableDevice' SUP top AUXILIARY\n          DESC\
    \ 'A device with boot parameters; device SHOULD be\n                used as a\
    \ structural class'\n          MAY ( bootFile $ bootParameter ) )\n"
- title: 5. Implementation details
  contents:
  - '5. Implementation details

    '
- title: 5.1. Suggested resolution methods
  contents:
  - "5.1. Suggested resolution methods\n   The preferred means of directing a client\
    \ application (one using the\n   shared services of the C library) to use LDAP\
    \ as its information\n   source for the functions listed in 5.2 is to modify the\
    \ source code\n   to directly query LDAP. As the source to commercial C libraries\
    \ and\n   applications is rarely available to the end-user, one could emulate\
    \ a\n   supported nameservice (such as NIS). (This is also an appropriate\n  \
    \ opportunity to perform caching of entries across process address\n   spaces.)\
    \ In the case of NIS, reference implementations are widely\n   available and the\
    \ RPC interface is well known.\n   The means by which the operating system is\
    \ directed to use LDAP is\n   implementation dependent. For example, some operating\
    \ systems and C\n   libraries support end-user extensible resolvers using dynamically\n\
    \   loadable libraries and a nameservice \"switch\". The means in which the\n\
    \   DUA locates LDAP servers is also implementation dependent.\n"
- title: 5.2. Affected library functions
  contents:
  - "5.2. Affected library functions\n   The following functions are typically found\
    \ in the C libraries of\n   most UNIX and POSIX compliant systems. An LDAP search\
    \ filter\n   [RFC2254] which may be used to satisfy the function call is included\n\
    \   alongside each function name. Parameters are denoted by %s and %d for\n  \
    \ string and integer arguments, respectively. Long lines are broken.\n       \
    \ getpwnam()              (&(objectClass=posixAccount)(uid=%s))\n        getpwuid()\
    \              (&(objectClass=posixAccount)\n                                (uidNumber=%d))\n\
    \        getpwent()              (objectClass=posixAccount)\n        getspnam()\
    \              (&(objectClass=shadowAccount)(uid=%s))\n        getspent()    \
    \          (objectClass=shadowAccount)\n        getgrnam()              (&(objectClass=posixGroup)(cn=%s))\n\
    \        getgrgid()              (&(objectClass=posixGroup)\n                \
    \                (gidNumber=%d))\n        getgrent()              (objectClass=posixGroup)\n\
    \        getservbyname()         (&(objectClass=ipService)\n                 \
    \               (cn=%s)(ipServiceProtocol=%s))\n        getservbyport()      \
    \   (&(objectClass=ipService)\n                                (ipServicePort=%d)\n\
    \                                (ipServiceProtocol=%s))\n        getservent()\
    \            (objectClass=ipService)\n        getrpcbyname()          (&(objectClass=oncRpc)(cn=%s))\n\
    \        getrpcbynumber()        (&(objectClass=oncRpc)(oncRpcNumber=%d))\n  \
    \      getrpcent()             (objectClass=oncRpc)\n        getprotobyname()\
    \        (&(objectClass=ipProtocol)(cn=%s))\n        getprotobynumber()      (&(objectClass=ipProtocol)\n\
    \                                (ipProtocolNumber=%d))\n        getprotoent()\
    \           (objectClass=ipProtocol)\n        gethostbyname()         (&(objectClass=ipHost)(cn=%s))\n\
    \        gethostbyaddr()         (&(objectClass=ipHost)(ipHostNumber=%s))\n  \
    \      gethostent()            (objectClass=ipHost)\n        getnetbyname()  \
    \        (&(objectClass=ipNetwork)(cn=%s))\n        getnetbyaddr()          (&(objectClass=ipNetwork)\n\
    \                                (ipNetworkNumber=%s))\n        getnetent()  \
    \           (objectClass=ipNetwork)\n        setnetgrent()           (&(objectClass=nisNetgroup)(cn=%s))\n"
- title: 5.3. Interpreting user and group entries
  contents:
  - "5.3. Interpreting user and group entries\n   User and group resolution is initiated\
    \ by the functions prefixed by\n   getpw and getgr respectively. The uid attribute\
    \ contains the user's\n   login name. The cn attribute, in posixGroup entries,\
    \ contains the\n   group's name.\n   The account object class provides a convenient\
    \ structural class for\n   posixAccount, and SHOULD be used where additional attributes\
    \ are not\n   required.\n   It is suggested that uid and cn are used as the RDN\
    \ attribute type\n   for posixAccount and posixGroup entries, respectively.\n\
    \   An account's GECOS field is preferably determined by a value of the\n   gecos\
    \ attribute. If no gecos attribute exists, the value of the cn\n   attribute MUST\
    \ be used. (The existence of the gecos attribute allows\n   information embedded\
    \ in the GECOS field, such as a user's telephone\n   number, to be returned to\
    \ the client without overloading the cn\n   attribute. It also accommodates directories\
    \ where the common name\n   does not contain the user's full name.)\n   An entry\
    \ of class posixAccount, posixGroup, or shadowAccount without\n   a userPassword\
    \ attribute MUST NOT be used for authentication. The\n   client should be returned\
    \ a non-matchable password such as \"x\".\n   userPassword values MUST be represented\
    \ by following syntax:\n        passwordvalue          = schemeprefix encryptedpassword\n\
    \        schemeprefix           = \"{\" scheme \"}\"\n        scheme         \
    \        = \"crypt\" / \"md5\" / \"sha\" / altscheme\n        altscheme      \
    \        = \"x-\" keystring\n        encryptedpassword      = encrypted password\n\
    \   The encrypted password contains of a plaintext key hashed using the\n   algorithm\
    \ scheme.\n   userPassword values which do not adhere to this syntax MUST NOT\
    \ be\n   used for authentication. The DUA MUST iterate through the values of\n\
    \   the attribute until a value matching the above syntax is found. Only\n   if\
    \ encryptedpassword is an empty string does the user have no\n   password. DUAs\
    \ are not required to consider encryption schemes which\n   the client will not\
    \ recognize; in most cases, it may be sufficient to\n   consider only \"crypt\"\
    .\n   Below is an example of a userPassword attribute:\n                    userPassword:\
    \ {crypt}X5/DBrWPOQQaI\n   A future standard may specify LDAP v3 attribute descriptions\
    \ to\n   represent hashed userPasswords, as noted below. This schema MUST NOT\n\
    \   be used with LDAP v2 DUAs and DSAs.\n        attributetype           = attributename\
    \ sep attributeoption\n        attributename           = \"userPassword\"\n  \
    \      sep                     = \";\"\n        attributeoption         = schemeclass\
    \ \"-\" scheme\n        schemeclass             = \"hash\" / altschemeclass\n\
    \        scheme                  = \"crypt\" / \"md5\" / \"sha\" / altscheme\n\
    \        altschemeclass          = \"x-\" keystring\n        altscheme       \
    \        = keystring\n   Below is an example of a userPassword attribute, represented\
    \ with an\n   LDAP v3 attribute description:\n           userPassword;hash-crypt:\
    \ X5/DBrWPOQQaI\n   A DUA MAY utilise the attributes in the shadowAccount class\
    \ to\n   provide shadow password service (getspnam() and getspent()). In such\n\
    \   cases, the DUA MUST NOT make use of the userPassword attribute for\n   getpwnam()\
    \ et al, and MUST return a non-matchable password (such as\n   \"x\") to the client\
    \ instead.\n"
- title: 5.4. Interpreting hosts and networks
  contents:
  - "5.4. Interpreting hosts and networks\n   The ipHostNumber and ipNetworkNumber\
    \ attributes are defined in\n   preference to dNSRecord (defined in [RFC1279]),\
    \ in order to simplify\n   the DUA's role in interpreting entries in the directory.\
    \ A dNSRecord\n   expresses a complete resource record, including time to live\
    \ and\n   class data, which is extraneous to this schema.\n   Additionally, the\
    \ ipHost and ipNetwork classes permit a host or\n   network (respectively) and\
    \ all its aliases to be represented by a\n   single entry in the directory. This\
    \ is not necessarily possible if a\n   DNS resource record is mapped directly\
    \ to an LDAP entry.\n   Implementations that wish to use LDAP to master DNS zone\
    \ information\n   are not precluded from doing so, and may simply avoid the ipHost\
    \ and\n   ipNetwork classes.\n   This document redefines, although not exclusively,\
    \ the ipNetwork\n   class defined in [RFC1279], in order to achieve consistent\
    \ naming\n   with ipHost. The ipNetworkNumber attribute is also used in the\n\
    \   siteContact object class [ROSE].\n   The trailing zeros in a network address\
    \ MUST be omitted. CIDR-style\n   network addresses (eg. 192.168.1/24) MAY be\
    \ used.\n   Hosts with IPv6 addresses MUST be written in their \"preferred\" form\n\
    \   as defined in section 2.2.1 of [RFC1884], such that all components of\n  \
    \ the address are indicated and leading zeros are omitted. This\n   provides a\
    \ consistent means of resolving ipHosts by address.\n"
- title: 5.5. Interpreting other entities
  contents:
  - "5.5. Interpreting other entities\n   In general, a one-to-one mapping between\
    \ entities and LDAP entries is\n   proposed, in that each entity has exactly one\
    \ representation in the\n   DIT. In some cases this is not feasible; for example,\
    \ a service which\n   is represented in more than one protocol domain. Consider\
    \ the\n   following entry:\n           dn: cn=domain, dc=aja, dc=com\n       \
    \    cn: domain\n           cn: nameserver\n           objectClass: top\n    \
    \       objectClass: ipService\n           ipServicePort: 53\n           ipServiceProtocol:\
    \ tcp\n           ipServiceProtocol: udp\n   This entry MUST map to the following\
    \ two (2) services entities:\n           domain  53/tcp  nameserver\n        \
    \   domain  53/udp  nameserver\n   While the above two entities may be represented\
    \ as separate LDAP\n   entities, with different distinguished names (such as\n\
    \   cn=domain+ipServiceProtocol=tcp, ... and\n   cn=domain+ipServiceProtocol=udp,\
    \ ...) it is convenient to represent\n   them as a single entry. (If a service\
    \ is represented in multiple\n   protocol domains with different ports, then multiple\
    \ entries are\n   required; multivalued RDNs may be used to distinguish them.)\n\
    \   With the exception of userPassword values, which are parsed according\n  \
    \ to the syntax considered in section 5.2, any empty values (consisting\n   of\
    \ a zero length string) are returned by the DUA to the client. The\n   DUA MUST\
    \ reject any entries which do not conform to the schema\n   (missing mandatory\
    \ attributes). Non-conforming entries SHOULD be\n   ignored while enumerating\
    \ entries.\n   The nisObject object class MAY be used as a generic means of\n\
    \   representing NIS entities. Its use is not encouraged; where support\n   for\
    \ entities not described in this schema is desired, an appropriate\n   schema\
    \ should be devised. Implementors are strongly advised to\n   support end-user\
    \ extensible mappings between NIS entities and object\n   classes. (Where the\
    \ nisObject class is used, the nisMapName attribute\n   may be used as a RDN.)\n"
- title: 5.6. Canonicalizing entries with multi-valued naming attributes
  contents:
  - "5.6. Canonicalizing entries with multi-valued naming attributes\n   For entities\
    \ such as hosts, services, networks, protocols, and RPCs,\n   where there may\
    \ be one or more aliases, the respective entry's\n   relative distinguished name\
    \ SHOULD be used to determine the canonical\n   name.  Any other values for the\
    \ same attribute are used as aliases.\n   For example, the service described in\
    \ section 5.5 has the canonical\n   name \"domain\" and exactly one alias, \"\
    nameserver\".\n   The schema in this document generally only defines one attribute\
    \ per\n   class which is suitable for distinguishing an entity (excluding any\n\
    \   attributes with integer syntax; it is assumed that entries will be\n   distinguished\
    \ on name). Usually, this is the common name (cn)\n   attribute.  This aids the\
    \ DUA in determining the canonical name of an\n   entity, as it can examine the\
    \ value of the relative distinguished\n   name. Aliases are thus any values of\
    \ the distinguishing attribute\n   (such as cn) which do not match the canonical\
    \ name of the entity.\n   In the event that a different attribute is used to distinguish\
    \ the\n   entry, as may be the case where these object classes are used as\n \
    \  auxiliary classes, the entry's canonical name may not be present in\n   the\
    \ RDN. In this case, the DUA MUST choose one of the non-\n   distinguished values\
    \ to represent the entity's canonical name. As the\n   directory server guarantees\
    \ no ordering of attribute values, it may\n   not be possible to distinguish an\
    \ entry deterministically. This\n   ambiguity SHOULD NOT be resolved by mapping\
    \ one directory entry into\n   multiple entities.\n"
- title: 6. Implementation focus
  contents:
  - "6. Implementation focus\n   A NIS server which uses LDAP instead of local files\
    \ has been\n   developed which supports the schema defined in this document.\n\
    \   A reference implementation of the C library resolution code has been\n   written\
    \ for the Free Software Foundation. It may support other C\n   libraries which\
    \ support the Name Service Switch (NSS) or the\n   Information Retrieval Service\
    \ (IRS).\n   The author has made available a freely distributable set of scripts\n\
    \   which parses local databases such as /etc/passwd and /etc/hosts into\n   a\
    \ form suitable for loading into an LDAP server.\n"
- title: 7. Security Considerations
  contents:
  - "7. Security Considerations\n   The entirety of related security considerations\
    \ are outside the scope\n   of this document. It is noted that making passwords\
    \ encrypted with a\n   widely understood hash function (such as crypt()) available\
    \ to non-\n   privileged users is dangerous because it exposes them to dictionary\n\
    \   and brute-force attacks.  This is proposed only for compatibility\n   with\
    \ existing UNIX system implementations. Sites where security is\n   critical SHOULD\
    \ consider using a strong authentication service for\n   user authentication.\n\
    \   Alternatively, the encrypted password could be made available only to\n  \
    \ a subset of privileged DUAs, which would provide \"shadow\" password\n   service\
    \ to client applications. This may be difficult to enforce.\n   Because the schema\
    \ represents operating system-level entities, access\n   to these entities SHOULD\
    \ be granted on a discretionary basis. (There\n   is little point in restricting\
    \ access to data which will be\n   republished without restriction, however.)\
    \ It is particularly\n   important that only administrators can modify entries\
    \ defined in this\n   schema, with the exception of allowing a principal to change\
    \ their\n   password (which may be done on behalf of the user by a client bound\n\
    \   as a superior principal, such that password restrictions may be\n   enforced).\
    \ For example, if a user were allowed to change the value of\n   their uidNumber\
    \ attribute, they could subvert security by\n   equivalencing their account with\
    \ the superuser account.\n   A subtree of the DIT which is to be republished by\
    \ a DUA (such as a\n   NIS gateway) SHOULD be within the same administrative domain\
    \ that the\n   republishing DUA represents. (For example, principals outside an\n\
    \   organization, while conceivably part of the DIT, should not be\n   considered\
    \ with the same degree of authority as those within the\n   organization.)\n \
    \  Finally, care should be exercised with integer attributes of a\n   sensitive\
    \ nature (particularly the uidNumber and gidNumber\n   attributes) which contain\
    \ zero-length values. DUAs MAY treat such\n   values as corresponding to the \"\
    nobody\" or \"nogroup\" user and group,\n   respectively.\n"
- title: 8. Acknowledgements
  contents:
  - "8. Acknowledgements\n   Thanks to Leif Hedstrom of Netscape Communications Corporation,\n\
    \   Michael Grant and Rosanna Lee of Sun Microsystems Inc., Ed Reed of\n   Novell\
    \ Inc., and Mark Wahl of Critical Angle Inc. for their valuable\n   contributions\
    \ to the development of this schema. Thanks to Andrew\n   Josey of The Open Group\
    \ for clarifying the use of the UNIX trademark,\n   and to Tim Howes and Peter\
    \ J. Cherny for their support.\n   UNIX is a registered trademark of The Open\
    \ Group.\n"
- title: 9. References
  contents:
  - "9. References\n   [RFC1057]\n        Sun Microsystems, Inc., \"RPC: Remote Procedure\
    \ Call: Protocol\n        Specification Version 2\", RFC 1057, June 1988.\n  \
    \ [RFC1279]\n        Kille, S., \"X.500 and Domains\", RFC 1279, November 1991.\n\
    \   [RFC1884]\n        Hinden, R., and S. Deering, \"IP Version 6 Addressing\n\
    \        Architecture\", RFC 1884, December 1995.\n   [RFC2119]\n        Bradner,\
    \ S., \"Key Words for use in RFCs to Indicate Requirement\n        Levels\", BCP\
    \ 14, RFC 2119, March 1997.\n   [RFC2251]\n        Wahl, M., Howes, T., and S.\
    \ Kille, \"Lightweight Directory Access\n        Protocol (v3)\", RFC 2251, December\
    \ 1997.\n   [RFC2252]\n        Wahl, M., Coulbeck, A., Howes, T., and S. Kille,\
    \ \"Lightweight\n        Directory Access Protocol (v3): Attribute Syntax Definitions\"\
    ,\n        RFC 2252, December 1997.\n   [RFC2254]\n        Howes, T., \"The String\
    \ Representation of LDAP Search Filters\",\n        RFC 2254, December 1997.\n\
    \   [RFC2256]\n        Wahl, M., \"A Summary of the X.500(96) User Schema for\
    \ use with\n        LDAPv3\", RFC 2256, December 1997.\n   [ROSE]\n        M.\
    \ T. Rose, \"The Little Black Book: Mail Bonding with OSI\n        Directory Services\"\
    , ISBN 0-13-683210-5, Prentice-Hall, Inc.,\n        1992.\n   [X500]\n       \
    \ \"Information Processing Systems - Open Systems Interconnection -\n        The\
    \ Directory: Overview of Concepts, Models and Service\",\n        ISO/IEC JTC\
    \ 1/SC21, International Standard 9594-1, 1988.\n   [XOPEN]\n        ISO/IEC 9945-1:1990,\
    \ Information Technology - Portable Operating\n        Systems Interface (POSIX)\
    \ - Part 1: Systems Application\n        Programming Interface (API) [C Language]\n"
- title: 10. Author's Address
  contents:
  - "10. Author's Address\n   Luke Howard\n   PO Box 59\n   Central Park Vic 3145\n\
    \   Australia\n   EMail: lukeh@xedoc.com\n"
- title: A. Example entries
  contents:
  - "A. Example entries\n   The examples described in this section are provided to\
    \ illustrate the\n   schema described in this memo. They are not meant to be exhaustive.\n\
    \   The following entry is an example of the posixAccount class:\n           dn:\
    \ uid=lester, dc=aja, dc=com\n           objectClass: top\n           objectClass:\
    \ account\n           objectClass: posixAccount\n           uid: lester\n    \
    \       cn: Lester the Nightfly\n           userPassword: {crypt}X5/DBrWPOQQaI\n\
    \           gecos: Lester\n           loginShell: /bin/csh\n           uidNumber:\
    \ 10\n           gidNumber: 10\n           homeDirectory: /home/lester\n   This\
    \ corresponds the UNIX system password file entry:\n        lester:X5/DBrWPOQQaI:10:10:Lester:/home/lester:/bin/sh\n\
    \   The following entry is an example of the ipHost class:\n           dn: cn=peg.aja.com,\
    \ dc=aja, dc=com\n           objectClass: top\n           objectClass: device\n\
    \           objectClass: ipHost\n           objectClass: bootableDevice\n    \
    \       objectClass: ieee802Device\n           cn: peg.aja.com\n           cn:\
    \ www.aja.com\n           ipHostNumber: 10.0.0.1\n           macAddress: 00:00:92:90:ee:e2\n\
    \           bootFile: mach\n           bootParameter: root=fs:/nfsroot/peg\n \
    \          bootParameter: swap=fs:/nfsswap/peg\n           bootParameter: dump=fs:/nfsdump/peg\n\
    \   This entry represents the host canonically peg.aja.com, also known as\n  \
    \ www.aja.com. The Ethernet address and four boot parameters are also\n   specified.\n\
    \   An example of the nisNetgroup class:\n           dn: cn=nightfly, dc=aja,\
    \ dc=com\n           objectClass: top\n           objectClass: nisNetgroup\n \
    \          cn: nightfly\n           nisNetgroupTriple: (charlemagne,peg,dunes.aja.com)\n\
    \           nisNetgroupTriple: (lester,-,)\n           memberNisNetgroup: kamakiriad\n\
    \   This entry represents the netgroup nightfly, which contains two\n   triples\
    \ (the user charlemagne, the host peg, and the domain\n   dunes.aja.com; and,\
    \ the user lester, no host, and any domain) and one\n   netgroup (kamakiriad).\n\
    \   Finally, an example of the nisObject class:\n           dn: nisMapName=tracks,\
    \ dc=dunes, dc=aja, dc=com\n           objectClass: top\n           objectClass:\
    \ nisMap\n           nisMapName: tracks\n           dn: cn=Maxine, nisMapName=tracks,\
    \ dc=dunes, dc=aja, dc=com\n           objectClass: top\n           objectClass:\
    \ nisObject\n           cn: Maxine\n           nisMapName: tracks\n          \
    \ nisMapEntry: Nightfly$4\n   This entry represents the NIS map tracks, and a\
    \ single map entry.\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (1998).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
