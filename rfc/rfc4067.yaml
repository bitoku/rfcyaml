- title: __initial_text__
  contents:
  - '                    Context Transfer Protocol (CXTP)

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document presents the Context Transfer Protocol (CXTP) that\n\
    \   enables authorized context transfers.  Context transfers allow better\n  \
    \ support for node based mobility so that the applications running on\n   mobile\
    \ nodes can operate with minimal disruption.  Key objectives are\n   to reduce\
    \ latency and packet losses, and to avoid the re-initiation\n   of signaling to\
    \ and from the mobile node.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n       1.1.  The Problem. . . . . . . . . . . . . . . . . .\
    \ . . . . .  2\n       1.2.  Conventions Used in This Document. . . . . . . .\
    \ . . . .  3\n       1.3.  Abbreviations Used in the Document . . . . . . . .\
    \ . . .  3\n   2.  Protocol Overview. . . . . . . . . . . . . . . . . . . . .\
    \ . .  3\n       2.1.  Context Transfer Scenarios . . . . . . . . . . . . . .\
    \ .  4\n       2.2.  Context Transfer Message Format. . . . . . . . . . . . .\
    \  5\n       2.3.  Context Types. . . . . . . . . . . . . . . . . . . . . .  6\n\
    \       2.4.  Context Data Block (CDB) . . . . . . . . . . . . . . . .  7\n  \
    \     2.5.  Messages . . . . . . . . . . . . . . . . . . . . . . . .  8\n   3.\
    \  Transport. . . . . . . . . . . . . . . . . . . . . . . . . . . 16\n       3.1.\
    \  Inter-Router Transport . . . . . . . . . . . . . . . . . 16\n       3.2.  MN-AR\
    \ Transport. . . . . . . . . . . . . . . . . . . . . 19\n   4.  Error Codes and\
    \ Constants. . . . . . . . . . . . . . . . . . . 20\n   5.  Examples and Signaling\
    \ Flows . . . . . . . . . . . . . . . . . 21\n       5.1.  Network controlled,\
    \ Initiated by pAR, Predictive . . . . 21\n       5.2.  Network controlled, Initiated\
    \ by nAR, Reactive . . . . . 21\n       5.3.  Mobile controlled, Predictive New\
    \ L2 up/Old L2 down. . . 22\n   6.  Security Considerations. . . . . . . . . .\
    \ . . . . . . . . . . 22\n       6.1.  Threats. . . . . . . . . . . . . . . .\
    \ . . . . . . . . . 22\n       6.2.  Access Router Considerations . . . . . .\
    \ . . . . . . . . 23\n       6.3.  Mobile Node Considerations . . . . . . . .\
    \ . . . . . . . 24\n   7.  Acknowledgements & Contributors. . . . . . . . . .\
    \ . . . . . . 25\n   8.  References . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . 25\n       8.1.  Normative References . . . . . . . . . . . . . .\
    \ . . . . 25\n       8.2.  Informative References . . . . . . . . . . . . . .\
    \ . . . 26\n   Appendix A.  Timing and Trigger Considerations . . . . . . . .\
    \ . . 28\n   Appendix B.  Multicast Listener Context Transfer . . . . . . . .\
    \ . 28\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document describes the Context Transfer Protocol, which\n\
    \   provides:\n      *  Representation for feature contexts.\n      *  Messages\
    \ to initiate and authorize context transfer, and notify\n         a mobile node\
    \ of the status of the transfer.\n      *  Messages for transferring contexts\
    \ prior to, during and after\n         handovers.\n   The proposed protocol is\
    \ designed to work in conjunction with other\n   protocols in order to provide\
    \ seamless mobility.  The protocol\n   supports both IPv4 and IPv6, though support\
    \ for IPv4 private\n   addresses is for future study.\n"
- title: 1.1.  The Problem
  contents:
  - "1.1.  The Problem\n   \"Problem Description: Reasons For Performing Context Transfers\n\
    \   between Nodes in an IP Access Network\" [RFC3374] defines the\n   following\
    \ main reasons why Context Transfer procedures may be useful\n   in IP networks.\n\
    \   1) As mentioned in the introduction, the primary motivation is to\n      quickly\
    \ re-establish context transfer-candidate services without\n      requiring the\
    \ mobile host to explicitly perform all protocol flows\n      for those services\
    \ from scratch.  An example of such a service is\n      included in Appendix B\
    \ of this document.\n   2) An additional motivation is to provide an interoperable\
    \ solution\n      that supports various Layer 2 radio access technologies.\n"
- title: 1.2.  Conventions Used in This Document
  contents:
  - "1.2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n"
- title: 1.3.  Abbreviations Used in the Document
  contents:
  - "1.3.  Abbreviations Used in the Document\n   Mobility Related Terminology [TERM]\
    \ defines basic mobility\n   terminology.  In addition to the material in that\
    \ document, we use\n   the following terms and abbreviations in this document.\n\
    \      CXTP            Context Transfer Protocol\n      DoS             Denial-of-Service\n\
    \      FPT             Feature Profile Types\n      PCTD            Predictive\
    \ Context Transfer Data\n"
- title: 2.  Protocol Overview
  contents:
  - "2.  Protocol Overview\n   This section provides a protocol overview.  A context\
    \ transfer can be\n   either started by a request from the mobile node (\"mobile\n\
    \   controlled\") or at the initiative of the new or the previous access\n   router\
    \ (\"network controlled\").\n      *  The mobile node (MN) sends the CT Activate\
    \ Request (CTAR) to\n         its current access router (AR) immediately prior\
    \ to handover\n         when it is possible to initiate a predictive context transfer.\n\
    \         In any case, the MN always sends the CTAR message to the new AR\n  \
    \       (nAR).  If the contexts are already present, nAR verifies the\n      \
    \   authorization token present in CTAR with its own computation\n         using\
    \ the parameters supplied by the previous access router\n         (pAR), and subsequently\
    \ activates those contexts.  If the\n         contexts are not present, nAR requests\
    \ pAR to supply them using\n         the Context Transfer Request message, in\
    \ which it supplies the\n         authorization token present in CTAR.\n     \
    \ *  Either nAR or pAR may request or start (respectively) context\n         transfer\
    \ based on internal or network triggers (see Appendix\n         A).\n   The Context\
    \ Transfer protocol typically operates between a source\n   node and a target\
    \ node.  In the future, there may be multiple target\n   nodes involved; the protocol\
    \ described here would work with multiple\n   target nodes.  For simplicity, we\
    \ describe the protocol assuming a\n   single receiver or target node.\n   Typically,\
    \ the source node is an MN's pAR and the target node is an\n   MN's nAR.  Context\
    \ Transfer takes place when an event, such as a\n   handover, takes place.  We\
    \ call such an event a Context Transfer\n   Trigger.  In response to such a trigger,\
    \ the pAR may transfer the\n   contexts; the nAR may request contexts; and the\
    \ MN may send a message\n   to the routers to transfer contexts.  Such a trigger\
    \ must be capable\n   of providing the necessary information (such as the MN's\
    \ IP address)\n   by which the contexts are identified.  In addition, the trigger\
    \ must\n   be able to provide the IP addresses of the access routers, and the\n\
    \   authorization to transfer context.\n   Context transfer protocol messages\
    \ use Feature Profile Types (FPTs)\n   that identify the way that data is organized\
    \ for the particular\n   feature contexts.  The FPTs are registered in a number\
    \ space (with\n   IANA Type Numbers) that allows a node to unambiguously determine\
    \ the\n   type of context and the context parameters present in the protocol\n\
    \   messages.  Contexts are transferred by laying out the appropriate\n   feature\
    \ data within Context Data Blocks according to the format in\n   Section 2.3,\
    \ as well as any IP addresses necessary to associate the\n   contexts to a particular\
    \ MN.  The context transfer initiation\n   messages contain parameters that identify\
    \ the source and target\n   nodes, the desired list of feature contexts, and IP\
    \ addresses to\n   identify the contexts.  The messages that request the transfer\
    \ of\n   context data also contain an appropriate token to authorize the\n   context\
    \ transfer.\n   Performing a context transfer in advance of the MN attaching to\
    \ nAR\n   can increase handover performance.  For this to take place, certain\n\
    \   conditions must be met.  For example, pAR must have sufficient time\n   and\
    \ knowledge of the impending handover.  This is feasible, for\n   instance, in\
    \ Mobile IP fast handovers [LLMIP][FMIPv6].  Additionally,\n   many cellular networks\
    \ have mechanisms to detect handovers in\n   advance.  However, when the advance\
    \ knowledge of impending handover\n   is not available, or if a mechanism such\
    \ as fast handover fails,\n   retrieving feature contexts after the MN attaches\
    \ to nAR is the only\n   available means for context transfer.  Performing context\
    \ transfer\n   after handover might still be better than having to re-establish\
    \ all\n   the contexts from scratch, as shown in [FHCT] and [TEXT].  Finally,\n\
    \   some contexts may simply need to be transferred during handover\n   signaling.\
    \  For instance, any context that gets updated on a per-\n   packet basis must\
    \ clearly be transferred only after packet forwarding\n   to the MN on its previous\
    \ link has been terminated.\n"
- title: 2.1.  Context Transfer Scenarios
  contents:
  - "2.1.  Context Transfer Scenarios\n   The Previous Access Router transfers feature\
    \ contexts under two\n   general scenarios.\n"
- title: 2.1.1.  Scenario 1
  contents:
  - "2.1.1.  Scenario 1\n   The pAR receives a Context Transfer Activate Request (CTAR)\
    \ message\n   from the MN whose feature contexts are to be transferred, or it\n\
    \   receives an internally generated trigger (e.g., a link-layer trigger\n   on\
    \ the interface to which the MN is connected).  The CTAR message,\n   described\
    \ in Section 2.5, provides the IP address of nAR, the IP\n   address of MN on\
    \ pAR, the list of feature contexts to be transferred\n   (by default requesting\
    \ all contexts to be transferred), and a token\n   authorizing the transfer. \
    \ In response to a CT-Activate Request\n   message or to the CT trigger, pAR predictively\
    \ transmits a Context\n   Transfer Data (CTD) message that contains feature contexts.\
    \  This\n   message, described in Section 2.5, contains the MN's previous IP\n\
    \   address.  It also contains parameters for nAR to compute an\n   authorization\
    \ token to verify the MN's token that is present in the\n   CTAR message.  Recall\
    \ that the MN always sends a CTAR message to nAR\n   regardless of whether it\
    \ sent the CTAR message to pAR because there\n   is no means for the MN to ascertain\
    \ that context transfer has\n   reliably taken place.  By always sending the CTAR\
    \ message to nAR, the\n   Context Transfer Request (see below) can be sent to\
    \ pAR if necessary.\n   When context transfer takes place without the nAR requesting\
    \ it, nAR\n   requires MN to present its authorization token.  Doing this locally\n\
    \   at nAR when the MN attaches to it improves performance and increases\n   security,\
    \ since the contexts are likely to already be present.  Token\n   verification\
    \ takes place at the router possessing the contexts.\n"
- title: 2.1.2.  Scenario 2
  contents:
  - "2.1.2.  Scenario 2\n   In the second scenario, pAR receives a Context Transfer\
    \ Request (CT-\n   Req) message from nAR, as described in Section 2.5.  The nAR\
    \ itself\n   generates the CT-Req message as a result of receiving the CTAR\n\
    \   message, or alternatively, from receiving a context transfer trigger.\n  \
    \ In the CT-Req message, nAR supplies the MN's previous IP address, the\n   FPTs\
    \ for the feature contexts to be transferred, the sequence number\n   from the\
    \ CTAR, and the authorization token from the CTAR.  In\n   response to a CT-Req\
    \ message, pAR transmits a Context Transfer Data\n   (CTD) message that includes\
    \ the MN's previous IP address and feature\n   contexts.  When it receives a corresponding\
    \ CTD message, nAR may\n   generate a CTD Reply (CTDR) message to report the status\
    \ of\n   processing the received contexts.  The nAR installs the contexts once\n\
    \   it has received them from the pAR.\n"
- title: 2.2.  Context Transfer Message Format
  contents:
  - "2.2.  Context Transfer Message Format\n   A CXTP message consists of a message-specific\
    \ header and one or more\n   data blocks.  Data blocks may be bundled together\
    \ to ensure a more\n   efficient transfer.  On the inter-AR interface, SCTP is\
    \ used so\n   fragmentation should not be a problem.  On the MN-AR interface,\
    \ the\n   total packet size, including transport protocol and IP protocol\n  \
    \ headers, SHOULD be less than the path MTU to avoid packet\n   fragmentation.\
    \  Each message contains a 3 bit version number field in\n   the low order octet,\
    \ along with the 5 bit message type code.  This\n   specification only applies\
    \ to Version 1 of the protocol, and the\n   therefore version number field MUST\
    \ be set to 0x1.  If future\n   revisions of the protocol make binary incompatible\
    \ changes, the\n   version number MUST be incremented.\n"
- title: 2.3.  Context Types
  contents:
  - "2.3.  Context Types\n   Contexts are identified by the FPT code, which is a 16\
    \ bit unsigned\n   integer.  The meaning of each context type is determined by\
    \ a\n   specification document.  The context type numbers are to be tabulated\n\
    \   in a registry maintained by IANA [IANA] and handled according to the\n   message\
    \ specifications in this document.  The instantiation of each\n   context by nAR\
    \ is determined by the messages in this document along\n   with the specification\
    \ associated with the particular context type.\n   The following diagram illustrates\
    \ the general format for CXTP\n   messages:\n               +----------------------+\n\
    \               |    Message Header    |\n               +----------------------+\n\
    \               |     CXTP Data 1      |\n               +----------------------+\n\
    \               |     CXTP Data 2      |\n               +----------------------+\n\
    \               |         ...          |\n   Each context type specification contains\
    \ the following details:\n      -  Number, size (in bits), and ordering of data\
    \ fields in the\n         state variable vector that embodies the context.\n \
    \     -  Default values (if any) for each individual datum of the\n         context\
    \ state vector.\n      -  Procedures and requirements for creating a context at\
    \ a new\n         access router, given the data transferred from a previous\n\
    \         access router and formatted according to the ordering rules and\n  \
    \       data field sizes presented in the specification.\n      -  If possible,\
    \ status codes for success or failure related to the\n         context transfer.\
    \  For instance, a QoS context transfer might\n         have different status\
    \ codes depending on which elements of the\n         context data failed to be\
    \ instantiated at nAR.\n"
- title: 2.4.  Context Data Block (CDB)
  contents:
  - "2.4.  Context Data Block (CDB)\n   The Context Data Block (CDB) is used both\
    \ for request and response\n   operations.  When a request is constructed, only\
    \ the first 4 octets\n   are typically necessary (See CTAR below).  When used\
    \ for transferring\n   the actual feature context itself, the context data is\
    \ present, and\n   the presence vector is sometimes present.\n    0          \
    \         1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   Feature Profile Type (FPT)  |  Length       |P|  Reserved   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   Presence Vector (if P = 1)                  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ~                              Data                             ~\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Feature Profile Type\n                           16 bit integer, assigned\
    \ by IANA,\n                           indicating the type of data\n         \
    \                  included in the Data field.\n      Length               Message\
    \ length in units of 8 octet words.\n      'P' bit              0 = No presence\
    \ vector.\n                           1 = Presence vector present.\n      Reserved\
    \             Reserved for future use.  Set to\n                           zero\
    \ by the sender.\n      Data                 Context type-dependent data, whose\n\
    \                           length is defined by the Length\n                \
    \           Field.  If the data is not 64 bit\n                           aligned,\
    \ the data field is\n                           padded with zeros.\n   The Feature\
    \ Profile Type (FPT) code indicates the type of data in the\n   data field.  Typically,\
    \ this will be context data, but it could be an\n   error indication.  The 'P'\
    \ bit specifies whether the \"presence\n   vector\" is used.  When the presence\
    \ vector is in use, it is\n   interpreted to indicate whether particular data\
    \ fields are present\n   (and contain non-default values).  The ordering of the\
    \ bits in the\n   presence vector is the same as the ordering of the data fields\n\
    \   according to the context type specification, one bit per data field\n   regardless\
    \ of the size of the data field.  The Length field indicates\n   the size of the\
    \ CDB in 8 octet words, including the first 4 octets\n   starting from FPT.\n\
    \   Notice that the length of the context data block is defined by the\n   sum\
    \ of the lengths of each data field specified by the context type\n   specification,\
    \ plus 4 octets if the 'P' bit is set, minus the\n   accumulated size of all the\
    \ context data that is implicitly given as\n   a default value.\n"
- title: 2.5.  Messages
  contents:
  - "2.5.  Messages\n   In this section, the CXTP messages are defined.  The MN for\
    \ which\n   context transfer protocol operations are undertaken is always\n  \
    \ identified by its previous IP access address.  Only one context\n   transfer\
    \ operation per MN may be in progress at a time so that the\n   CTDR message unambiguously\
    \ identifies which CTD message is\n   acknowledged simply by including the MN's\
    \ identifying previous IP\n   address.  The 'V' flag indicates whether the IP\
    \ addresses are IPv4 or\n   IPv6.\n"
- title: 2.5.1.  Context Transfer Activate Request (CTAR) Message
  contents:
  - "2.5.1.  Context Transfer Activate Request (CTAR) Message\n   This message is\
    \ always sent by the MN to the nAR to request a context\n   transfer.  Even when\
    \ the MN does not know if contexts need to be\n   transferred, the MN sends the\
    \ CTAR message.  If an acknowledgement\n   for this message is needed, the MN\
    \ sets the 'A' flag to 1; otherwise\n   the MN does not expect an acknowledgement.\
    \  This message may include\n   a list of FPTs that require transfer.\n   The\
    \ MN may also send this message to pAR while still connected to\n   pAR.  In this\
    \ case, the MN includes the nAR's IP address; otherwise,\n   if the message is\
    \ sent to nAR, the pAR address is sent.  The MN MUST\n   set the sequence number\
    \ to the same value as was set for the message\n   sent on both pAR and nAR so\
    \ pAR can determine whether to use a cached\n   message.\n    0              \
    \     1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |Vers.|   Type  |V|A| Reserved  |            Length             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ~                   MN's Previous IP Address                    ~\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ~                  Previous (New) AR IP Address                 ~\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                        Sequence Number                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     MN Authorization Token                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |            Requested Context Data Block (if present)          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |          Next Requested Context Data Block (if present)       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                           ........                            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Vers.                Version number of CXTP protocol = 0x1\n      Type\
    \                 CTAR = 0x1\n      'V' flag             When set to '0', IPv6\
    \ addresses.\n                           When set to '1', IPv4 addresses.\n  \
    \    'A' bit              If set, the MN requests an acknowledgement.\n      Reserved\
    \             Set to zero by the sender, ignored by the\n                    \
    \       receiver.\n      Length               Message length in units of octets.\n\
    \      MN's Previous IP Address Field contains either:\n                     \
    \      IPv4 [RFC791] Address, 4 octets, or\n                           IPv6 [RFC3513]\
    \ Address, 16 octets.\n      nAR / pAR IP Address Field contains either:\n   \
    \                        IPv4 [RFC791] Address, 4 octets, or\n               \
    \            IPv6 [RFC3513] Address, 16 octets.\n      Sequence Number      A\
    \ value used to identify requests and\n                           acknowledgements\
    \ (see Section 3.2).\n      Authorization Token  An unforgeable value calculated\
    \ as\n                           discussed below.  This authorizes the\n     \
    \                      receiver of CTAR to perform context\n                 \
    \          transfer.\n      Context Block        Variable length field defined\
    \ in\n                           Section 2.4.\n   If no context types are specified,\
    \ all contexts for the MN are\n   requested.\n   The Authorization Token is calculated\
    \ as:\n      First (32, HMAC_SHA1\n              (Key, (Previous IP address |\
    \ Sequence Number | CDBs)))\n   where Key is a shared secret between the MN and\
    \ pAR, and CDB is a\n   concatenation of all the Context Data Blocks specifying\
    \ the contexts\n   to be transferred that are included in the CTAR message.\n"
- title: 2.5.2.  Context Transfer Activate Acknowledge (CTAA) Message
  contents:
  - "2.5.2.  Context Transfer Activate Acknowledge (CTAA) Message\n   This is an informative\
    \ message sent by the receiver of CTAR to the MN\n   to acknowledge a CTAR message.\
    \  Acknowledgement is optional,\n   depending on whether the MN requested it.\
    \  This message may include a\n   list of FPTs that were not successfully transferred.\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |Vers.|  Type   |V|  Reserved   |            Length             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ~              Mobile Node's Previous IP address                ~\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |       FPT (if present)        |  Status code  |   Reserved    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                           ........                            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Vers.                Version number of CXTP protocol = 0x1\n      Type\
    \                 CTAA = 0x2\n      'V' flag             When set to '0', IPv6\
    \ addresses.\n                           When set to '1', IPv4 addresses.\n  \
    \    Reserved             Set to zero by the sender and ignored by\n         \
    \                  the receiver.\n      Length               Message length in\
    \ units of octets.\n      MN's Previous IP Address Field contains either:\n  \
    \                         IPv4 [RFC791] Address, 4 octets, or\n              \
    \             IPv6 [RFC3513] Address, 16 octets.\n      FPT                  16\
    \ bit unsigned integer, listing the Feature\n                           Profile\
    \ Type that was not successfully\n                           transferred.\n  \
    \    Status Code          An octet, containing failure reason.\n      ........\
    \             more FPTs and status codes as necessary\n"
- title: 2.5.3.  Context Transfer Data (CTD) Message
  contents:
  - "2.5.3.  Context Transfer Data (CTD) Message\n   Sent by pAR to nAR, and includes\
    \ feature data (CXTP data).  This\n   message handles both predictive and normal\
    \ CT.  An acknowledgement\n   flag, 'A', included in this message indicates whether\
    \ a reply is\n   required by pAR.\n   0                   1                  \
    \ 2                   3\n   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1\n  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \  |Vers.|   Type  |V|A| Reserved  |          Length               |\n  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \  |               Elapsed Time (in milliseconds)                  |\n  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \  ~            Mobile Node's Previous Care-of Address             ~\n  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \ ^\n  |            Algorithm          |            Key Length         |\n  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \ PCTD\n  |                              Key                              | only\n\
    \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ V\n  ~  \
    \                 First Context Data Block                    ~\n  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \  ~                    Next Context Data Block                    ~\n  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \  ~                           ........                            ~\n  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Vers.                Version number of CXTP protocol = 0x1\n      Type\
    \                 CTD =  0x3 (Context Transfer Data)\n                       \
    \    PCTD = 0x4 (Predictive Context Transfer\n                               \
    \        Data)\n      'V' flag             When set to '0', IPv6 addresses.\n\
    \                           When set to '1', IPv4 addresses.\n      'A' bit  \
    \            When set, the pAR requests an\n                           acknowledgement.\n\
    \      Length               Message length in units of octets.\n      Elapsed\
    \ Time         The number of milliseconds since the\n                        \
    \   transmission of the first CTD message for\n                           this\
    \ MN.\n      MN's Previous IP Address Field contains either:\n               \
    \            IPv4 [RFC791] Address, 4 octets, or\n                           IPv6\
    \ [RFC3513] Address, 16 octets.\n      Algorithm            Algorithm for carrying\
    \ out the computation\n                           of the MN Authorization Token.\
    \  Currently\n                           only 1 algorithm is defined, HMAC_SHA1\
    \ = 1.\n      Key Length           Length of key, in octets.\n      Key      \
    \            Shared key between MN and AR for CXTP.\n      Context Data Block\
    \   The Context Data Block (see Section 2.4).\n   When CTD is sent predictively,\
    \ the supplied parameters (including the\n   algorithm, key length, and the key\
    \ itself) allow the nAR to compute a\n   token locally and verify it against the\
    \ token present in the CTAR\n   message.  This material is also sent if the pAR\
    \ receives a CTD\n   message with a null Authorization Token, indicating that\
    \ the CT-Req\n   message was sent before the nAR received the CTAR message.  CTD\
    \ MUST\n   be protected by IPsec; see Section 6.\n   As described previously,\
    \ the algorithm for carrying out the\n   computation of the MN Authorization Token\
    \ is HMAC_SHA1.  The token\n   authentication calculation algorithm is described\
    \ in Section 2.5.1.\n   For predictive handover, the pAR SHOULD keep track of\
    \ the CTAR\n   sequence number and cache the CTD message until a CTDR message\
    \ for\n   the MN's previous IP address has been received from the pAR,\n   indicating\
    \ that the context transfer was successful, or until\n   CT_MAX_HANDOVER_TIME\
    \ expires.  The nAR MAY send a CT-Req message\n   containing the same sequence\
    \ number if the predictive CTD message\n   failed to arrive or the context was\
    \ corrupted.  In this case, the nAR\n   sends a CT-Req message with a matching\
    \ sequence number and pAR can\n   resend the context.\n"
- title: 2.5.4.  Context Transfer Data Reply (CTDR) Message
  contents:
  - "2.5.4.  Context Transfer Data Reply (CTDR) Message\n   This message is sent by\
    \ nAR to pAR depending on the value of the 'A'\n   flag in CTD, indicating success\
    \ or failure.\n    0                   1                   2                 \
    \  3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n  \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |Vers.|\
    \  Type   |V|S| Reserved  |          Length               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ~             Mobile Node's Previous IP Address                 ~\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        FPT (if present)       |  Status code  |   Reserved    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ~                           ........                            ~\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Vers.                Version number of CXTP protocol = 0x1\n      Type\
    \                 CTDR = 0x5 (Context Transfer Data)\n      'V' flag         \
    \    When set to '0', IPv6 addresses.\n                           When set to\
    \ '1', IPv4 addresses.\n      'S' bit              When set to one, this bit indicates\n\
    \                           that all feature contexts sent in CTD\n          \
    \                 or PCTD were received successfully.\n      Reserved        \
    \     Set to zero by the sender and ignored by\n                           the\
    \ receiver.\n      Length               Message length in units of octets.\n \
    \     MN's Previous IP Address Field contains either:\n                      \
    \     IPv4 [RFC791] Address, 4 octets, or\n                           IPv6 [RFC3513]\
    \ Address, 16 octets.\n      FPT                  16 bit unsigned integer, listing\
    \ the Feature\n                           Profile Type that is being acknowledged.\n\
    \      Status Code          A context-specific return value,\n               \
    \            zero for success, nonzero when 'S' is\n                         \
    \  not set to one.\n"
- title: 2.5.5.  Context Transfer Cancel (CTC) Message
  contents:
  - "2.5.5.  Context Transfer Cancel (CTC) Message\n   If transferring a context cannot\
    \ be completed in a timely fashion,\n   then nAR may send CTC to pAR to cancel\
    \ an ongoing CT process.\n    0                   1                   2      \
    \             3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |Vers.|  Type   |V|   Reserved  |            Length             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ~               Mobile Node's Previous IP Address               ~\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Vers.                Version number of CXTP protocol = 0x1\n      Type\
    \                 CTC = 0x6 (Context Transfer Cancel)\n      Length          \
    \     Message length in units of octets.\n      'V' flag             When set\
    \ to '0', IPv6 addresses.\n                           When set to '1', IPv4 addresses.\n\
    \      Reserved             Set to zero by the sender and ignored by\n       \
    \                    the receiver.\n      MN's Previous IP Address Field contains\
    \ either:\n                           IPv4 [RFC791] Address, 4 octets, or\n  \
    \                         IPv6 [RFC3513] Address, 16 octets.\n"
- title: 2.5.6.  Context Transfer Request (CT-Req) Message
  contents:
  - "2.5.6.  Context Transfer Request (CT-Req) Message\n   Sent by nAR to pAR to request\
    \ the start of context transfer.  This\n   message is sent as a response to a\
    \ CTAR message.  The fields\n   following the Previous IP address of the MN are\
    \ included verbatim\n   from the CTAR message.\n    0                   1    \
    \               2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |Vers.|  Type   |V|  Reserved   |            Length             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ~               Mobile Node's Previous IP Address               ~\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                        Sequence Number                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     MN Authorization Token                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ~        Next Requested Context Data Block (if present)         ~\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ~                           ........                            ~\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Vers.                Version number of CXTP protocol = 0x1\n      Type\
    \                 CTREQ = 0x7 (Context Transfer Request)\n      'V' flag     \
    \        When set to '0', IPv6 addresses.\n                           When set\
    \ to '1', IPv4 addresses.\n      Reserved             Set to zero by the sender\
    \ and ignored\n                           by the receiver.\n      Length     \
    \          Message length in units of octets.\n      MN's Previous IP Address\
    \ Field contains either:\n                           IPv4 [RFC791] Address, 4\
    \ octets, or\n                           IPv6 [RFC3513] Address, 16 octets.\n\
    \      Sequence Number      Copied from the CTAR message, allows the\n       \
    \                    pAR to distinguish requests from previously\n           \
    \                sent context.\n      MN's Authorization Token\n             \
    \              An unforgeable value calculated as\n                          \
    \ discussed in Section 2.5.1.  This\n                           authorizes the\
    \ receiver of CTAR to\n                           perform context transfer.  Copied\
    \ from\n                           CTAR.\n      Context Data Request Block\n \
    \                          A request block for context data; see\n           \
    \                Section 2.4.\n   The sequence number is used by pAR to correlate\
    \ a request for\n   previously transmitted context.  In predictive transfer, if\
    \ the MN\n   sends CTAR prior to handover, pAR pushes context to nAR using PCTD.\n\
    \   If the CTD fails, the nAR will send a CT-Req with the same sequence\n   number,\
    \ enabling the pAR to determine which context to resend.  The\n   pAR deletes\
    \ the context after CXTP_MAX_TRANSFER_TIME.  The sequence\n   number is not used\
    \ in reactive transfer.\n   For predictive transfer, the pAR sends the keying\
    \ material and other\n   information necessary to calculate the Authorization\
    \ Token without\n   having processed a CT-Req message.  For reactive transfer,\
    \ if the nAR\n   receives a context transfer trigger but has not yet received\
    \ the CTAR\n   message with the authorization token, the Authorization Token field\n\
    \   in CT-Req is set to zero.  The pAR interprets this as an indication\n   to\
    \ include the keying material and other information necessary to\n   calculate\
    \ the Authorization Token, and includes this material into\n   the CTD message\
    \ as if the message were being sent due to predictive\n   transfer.  This provides\
    \ nAR with the information it needs to\n   calculate the authorization token when\
    \ the MN sends CTAR.\n"
- title: 3.  Transport
  contents:
  - '3.  Transport

    '
- title: 3.1.  Inter-Router Transport
  contents:
  - "3.1.  Inter-Router Transport\n   Since most types of access networks in which\
    \ CXTP might be useful are\n   not today deployed or, if they have been deployed,\
    \ have not been\n   extensively measured, it is difficult to know whether congestion\
    \ will\n   be a problem for CXTP.  Part of the research task in preparing CXTP\n\
    \   for consideration as a possible candidate for standardization is to\n   quantify\
    \ this issue.  However, to avoid potential interference with\n   production applications\
    \ should a prototype CXTP deployment involve\n   running over the public Internet,\
    \ it seems prudent to recommend a\n   default transport protocol that accommodates\
    \ congestion.  In\n   addition, since the feature context information has a definite\n\
    \   lifetime, the transport protocol must accommodate flexible\n   retransmission,\
    \ so stale contexts that are held up by congestion are\n   dropped.  Finally,\
    \ because the amount of context data can be\n   arbitrarily large, the transport\
    \ protocol should not be limited to a\n   single packet or require implementing\
    \ a custom fragmentation\n   protocol.\n   These considerations argue that implementations\
    \ of CXTP MUST support,\n   and prototype deployments of CXTP SHOULD use, the\
    \ Stream Control\n   Transport Protocol (SCTP) [SCTP] as the transport protocol\
    \ on the\n   inter-router interface, especially if deployment over the public\n\
    \   Internet is contemplated.  SCTP supports congestion control,\n   fragmentation,\
    \ and partial retransmission based on a programmable\n   retransmission timer.\
    \  SCTP also supports many advanced and complex\n   features, such as multiple\
    \ streams and multiple IP addresses for\n   failover that are not necessary for\
    \ experimental implementation and\n   prototype deployment of CXTP.  The use of\
    \ such SCTP features is not\n   recommended at this time.\n   The SCTP Payload\
    \ Data Chunk carries the context transfer protocol\n   messages.  The User Data\
    \ part of each SCTP message contains an\n   appropriate context transfer protocol\
    \ message defined in this\n   document.  The messages sent using SCTP are CTD\
    \ (Section 2.5.3), CTDR\n   (Section 2.5.4), CTC (Section 2.5.5), and CT-Req (Section\
    \ 2.5.6).  In\n   general, each SCTP message can carry feature contexts belonging\
    \ to\n   any MN.  If the SCTP checksum calculation fails, the nAR returns the\n\
    \   BAD_CHECKSUM error code in a CTDR message.\n   A single stream is used for\
    \ context transfer without in-sequence\n   delivery of SCTP messages.  Each message\
    \ corresponds to a single MN's\n   feature context collection.  A single stream\
    \ provides simplicity.\n   The use of multiple streams to prevent head-of-line\
    \ blocking is for\n   future study.  Unordered delivery allows the receiver to\
    \ not block\n   for in-sequence delivery of messages that belong to different\
    \ MNs.\n   The Payload Protocol Identifier in the SCTP header is 'CXTP'.\n   Inter-router\
    \ CXTP uses the Seamoby SCTP port [IANA].\n   Timeliness of the context transfer\
    \ information SHOULD be accommodated\n   by setting the SCTP maximum retransmission\
    \ value to\n   CT_MAX_TRANSFER_TIME to accommodate the maximum acceptable handover\n\
    \   delay time.  The AR SHOULD be configured with CT_MAX_TRANSFER_TIME to\n  \
    \ accommodate the particular wireless link technology and local\n   wireless propagation\
    \ conditions.  SCTP message bundling SHOULD be\n   turned off to reduce an extra\
    \ delay in sending messages.  Within\n   CXTP, the nAR SHOULD estimate the retransmit\
    \ timer from the receipt\n   of the first fragment of a CXTP message and avoid\
    \ processing any IP\n   traffic from the MN until either context transfer is complete\
    \ or the\n   estimated retransmit timer expires.  If both routers support PR-SCTP\n\
    \   [PR-SCTP], then PR-SCTP SHOULD be used.  PR-SCTP modifies the\n   lifetime\
    \ parameter of the Send() operation (defined in Section 10.1 E\n   in [SCTP])\
    \ so that it applies to retransmits as well as transmits;\n   that is, in PR-SCTP,\
    \ if the lifetime expires and the data chunk has\n   not been acknowledged, the\
    \ transmitter stops retransmitting, whereas\n   in the base protocol the data\
    \ would be retransmitted until\n   acknowledged or the connection timed out.\n\
    \   The format of Payload Data Chunk taken from [SCTP] is shown in the\n   following\
    \ diagram.\n    0                   1                   2                   3\n\
    \    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   Type = 0    | Reserved|U|B|E|    Length                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                              TSN                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      Stream Identifier S      |   Stream Sequence Number n    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                 Payload Protocol Identifier                   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ~                 User Data (seq n of Stream S)                 ~\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      'U' bit              The Unordered bit.  MUST be set to 1 (one).\n    \
    \  'B' bit              The Beginning fragment bit.  See [SCTP].\n      'E' bit\
    \              The Ending fragment bit.  See [SCTP].\n      TSN              \
    \    Transmission Sequence Number.  See [SCTP].\n      Stream Identifier S\n \
    \                          Identifies the context transfer protocol\n        \
    \                   stream.\n      Stream Sequence Number n\n                \
    \           Since the 'U' bit is set to one, the\n                           receiver\
    \ ignores this number.  See [SCTP].\n      Payload Protocol Identifier\n     \
    \                      Set to 'CXTP' (see [IANA]).\n      User Data          \
    \  Contains the context transfer protocol\n                           messages.\n\
    \   If a CXTP deployment will never run over the public Internet, and it\n   is\
    \ known that congestion is not a problem in the access network,\n   alternative\
    \ transport protocols MAY be appropriate vehicles for\n   experimentation.  For\
    \ example, piggybacking CXTP messages on top of\n   handover signaling for routing,\
    \ such as provided by FMIPv6 in ICMP\n   [FMIPv6].  Implementations of CXTP MAY\
    \ support ICMP for such\n   purposes.  If such piggybacking is used, an experimental\
    \ message\n   extension for the protocol on which CXTP is piggybacking MUST be\n\
    \   designed.  Direct deployment on top of a transport protocol for\n   experimental\
    \ purposes is also possible.  In this case, the researcher\n   MUST be careful\
    \ to accommodate good Internet transport protocol\n   engineering practices, including\
    \ using retransmits with exponential\n   backoff.\n"
- title: 3.2.  MN-AR Transport
  contents:
  - "3.2.  MN-AR Transport\n   The MN-AR interface MUST implement and SHOULD use ICMP\
    \ to transport\n   the CTAR and CTAA messages.  Because ICMP contains no provisions\
    \ for\n   retransmitting packets if signaling is lost, the CXTP protocol\n   incorporates\
    \ provisions for improving transport performance on the\n   MN-AR interface. \
    \ The MN and AR SHOULD limit the number of context\n   data block identifiers\
    \ included in the CTAR and CTAA messages so that\n   the message will fit into\
    \ a single packet, because ICMP has no\n   provision for fragmentation above the\
    \ IP level.  CXTP uses the\n   Experimental Mobility ICMP type [IANA].  The ICMP\
    \ message format for\n   CXTP messages is as follows:\n    0                 \
    \  1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |     Code      |           Checksum            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   Subtype     |                   Reserved                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   Message...\n   +-+-+-+-+-+-+-+-+-+-+-+- - - -\n   IP Fields:\n      Source\
    \ Address       An IP address assigned to the sending\n                      \
    \     interface.\n      Destination Address\n                           An IP\
    \ address assigned to the receiving\n                           interface.\n \
    \     Hop Limit            255\n   ICMP Fields:\n      Type           Experimental\
    \ Mobility Type (To be assigned by IANA,\n                     for IPv4 and IPv6,\
    \ see [IANA])\n      Code           0\n      Checksum       The ICMP checksum.\n\
    \      Sub-type       The Experimental Mobility ICMP subtype for CXTP,\n     \
    \                see [IANA].\n      Reserved       Set to zero by the sender and\
    \ ignored by\n                     the receiver.\n      Message        The body\
    \ of the CTAR or CTAA message.\n      CTAR messages for which a response is requested\
    \ but fail to elicit\n      a response are retransmitted.  The initial retransmission\
    \ occurs\n      after a CXTP_REQUEST_RETRY wait period.  Retransmissions MUST\
    \ be\n      made with exponentially increasing wait intervals (doubling the\n\
    \      wait each time).  CTAR messages should be retransmitted until\n      either\
    \ a response (which might be an error) has been obtained, or\n      until CXTP_RETRY_MAX\
    \ seconds after the initial transmission.\n      MNs SHOULD generate the sequence\
    \ number in the CTAR message\n      randomly (also ensuring that the same sequence\
    \ number has not been\n      used in the last 7 seconds), and, for predictive\
    \ transfer, MUST\n      use the same sequence number in a CTAR message to the\
    \ nAR as for\n      the pAR.  An AR MUST ignore the CTAR message if it has already\n\
    \      received one with the same sequence number and MN IP address.\n      Implementations\
    \ MAY, for research purposes, try other transport\n      protocols.  Examples\
    \ are the definition of a Mobile IPv6 Mobility\n      Header [MIPv6] for use with\
    \ the FMIPv6 Fast Binding Update\n      [FMIPv6] to allow bundling of both routing\
    \ change and context\n      transfer signaling from the MN to AR, or definition\
    \ of a UDP\n      protocol instead of ICMP.  If such implementations are done,\
    \ they\n      should abide carefully by good Internet transport engineering\n\
    \      practices and be used for prototype and demonstration purposes\n      only.\
    \  Deployment on large scale networks should be avoided until\n      the transport\
    \ characteristics are well understood.\n"
- title: 4.  Error Codes and Constants
  contents:
  - "4.  Error Codes and Constants\n   Error Code      Section    Value        Meaning\n\
    \   ------------------------------------------------------------\n   BAD_CHECKSUM\
    \    3.1        0x01         Error code if the\n                             \
    \              SCTP checksum fails.\n   Constant             Section    Default\
    \ Value  Meaning\n   --------------------------------------------------------------------\n\
    \   CT_REQUEST_RATE       6.3       10 requests/   Maximum number of\n       \
    \                               sec.        CTAR messages before\n           \
    \                                       AR institutes rate\n                 \
    \                                 limiting.\n   CT_MAX_TRANSFER_TIME  3.1    \
    \   200 ms         Maximum amount of time\n                                  \
    \                pAR should wait before\n                                    \
    \              aborting the transfer.\n   CT_REQUEST_RETRY      3.2       2 seconds\
    \      Wait interval before\n                                                \
    \  initial retransmit\n                                                  on MN-AR\
    \ interface.\n   CT_RETRY_MAX          3.2     15 seconds       Give up retrying\n\
    \                                                  on MN-AR interface.\n"
- title: 5.  Examples and Signaling Flows
  contents:
  - '5.  Examples and Signaling Flows

    '
- title: 5.1.  Network Controlled, Initiated by pAR, Predictive
  contents:
  - "5.1.  Network Controlled, Initiated by pAR, Predictive\n                 MN \
    \                   nAR                     pAR\n                 |          \
    \            |                       |\n            T    |                   \
    \   |                  CT trigger\n            I    |                      | \
    \                      |\n            M    |                      |<------- CTD\
    \ ----------|\n            E    |------- CTAR -------->|                     \
    \  |\n            :    |                      |                       |\n    \
    \        |    |                      |-------- CTDR -------->|\n            V\
    \    |                      |                       |\n                 |    \
    \                  |                       |\n"
- title: 5.2.  Network Controlled, Initiated by nAR, Reactive
  contents:
  - "5.2.  Network Controlled, Initiated by nAR, Reactive\n                 MN   \
    \                 nAR                     pAR\n                 |            \
    \          |                       |\n            T    |                 CT trigger\
    \                   |\n            I    |                      |             \
    \          |\n            M    |                      |--------- CT-Req ----->|\n\
    \            E    |                      |                       |\n         \
    \   :    |                      |<------- CTD ----------|\n            |    |\
    \                      |                       |\n            V    |------- CTAR\
    \ -------->|                       |\n                 |                     \
    \ |----- CTDR (opt) ----->|\n                 |                      |       \
    \                |\n"
- title: 5.3.  Mobile Controlled, Predictive New L2 up/Old L2 down
  contents:
  - "5.3.  Mobile Controlled, Predictive New L2 up/Old L2 down\n   CTAR request to\
    \ nAR\n                 MN                    nAR                     pAR\n  \
    \               |                      |                       |\n           new\
    \ L2 link up               |                       |\n                 |     \
    \                 |                       |\n            CT trigger          \
    \        |                       |\n                 |                      |\
    \                       |\n            T    |------- CTAR -------->|         \
    \              |\n            I    |                      |-------- CT-Req ------>|\n\
    \            M    |                      |                       |\n         \
    \   E    |                      |<-------- CTD ---------|\n            :    |\
    \                      |                       |\n            |    |         \
    \             |                       |\n            V    |                  \
    \    |                       |\n                 |                      |    \
    \                   |\n   Whether the nAR sends the MN a CTAR reject message if\
    \ CT is not\n   supported is for future study.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   At this time, the threats to IP handover in general\
    \ and context\n   transfer in particular are not widely understood, particularly\
    \ on the\n   MN to AR link, and mechanisms for countering them are not well\n\
    \   defined.  Part of the experimental task in preparing CXTP for\n   eventual\
    \ standards track will be to better characterize threats to\n   context transfer\
    \ and design specific mechanisms to counter them.\n   This section provides some\
    \ general guidelines about security based on\n   discussions among the Design\
    \ Team and Working Group members.\n"
- title: 6.1.  Threats
  contents:
  - "6.1.  Threats\n   The Context Transfer Protocol transfers state between access\
    \ routers.\n   If the MNs are not authenticated and authorized before moving on\
    \ the\n   network, there is a potential for masquerading attacks to shift state\n\
    \   between ARs, causing network disruptions.\n   Additionally, DoS attacks can\
    \ be launched from MNs towards the access\n   routers by requesting multiple context\
    \ transfers and then by\n   disappearing.  Finally, a rogue access router could\
    \ flood mobile\n   nodes with packets, attempt DoS attacks, and issue bogus context\n\
    \   transfer requests to surrounding routers.\n   Consistency and correctness\
    \ in context transfer depend on\n   interoperable feature context definitions\
    \ and how CXTP is utilized\n   for a particular application.  For some considerations\
    \ regarding\n   consistency and correctness that have general applicability but\
    \ are\n   articulated in the context of AAA context transfer, please see [EAP].\n"
- title: 6.2.  Access Router Considerations
  contents:
  - "6.2.  Access Router Considerations\n   The CXTP inter-router interface relies\
    \ on IETF standardized security\n   mechanisms for protecting traffic between\
    \ access routers, as opposed\n   to creating application security mechanisms.\
    \  IPsec [RFC2401] MUST be\n   supported between access routers.\n   To avoid\
    \ the introduction of additional latency due to the need for\n   establishing\
    \ a secure channel between the context transfer peers\n   (ARs), the two ARs SHOULD\
    \ establish such a secure channel in advance.\n   The two access routers need\
    \ to engage in a key exchange mechanism\n   such as IKE [RFC2409], establish IPSec\
    \ SAs, and define the keys,\n   algorithms, and IPSec protocols (such as ESP)\
    \ in anticipation of any\n   upcoming context transfer.  This will save time during\
    \ handovers that\n   require secure transfer.  Such SAs can be maintained and\
    \ used for all\n   upcoming context transfers between the two ARs.  Security should\
    \ be\n   negotiated prior to the sending of context.\n   Access Routers MUST implement\
    \ IPsec ESP [ESP] in transport mode with\n   non-null encryption and authentication\
    \ algorithms to provide per-\n   packet authentication, integrity protection and\
    \ confidentiality, and\n   MUST implement the replay protection mechanisms of\
    \ IPsec.  In those\n   scenarios where IP layer protection is needed, ESP in tunnel\
    \ mode\n   SHOULD be used.  Non-null encryption should be used when using IPSec\n\
    \   ESP.  Strong security on the inter-router interface is required to\n   protect\
    \ against attacks by rogue routers, and to ensure\n   confidentiality on the context\
    \ transfer authorization key in\n   predicative transfer.\n   The details of IKE\
    \ key exchange and other details of the IPsec\n   security associations between\
    \ routers are to be determined as part of\n   the research phase associated with\
    \ finalizing the protocol for\n   standardization.  These details must be determined\
    \ prior to\n   standardization.  Other working groups are currently working on\n\
    \   general security for routing protocols.  Ideally, a possible solution\n  \
    \ for CXTP will be based on this work to minimize the operational\n   configuration\
    \ of routers for different protocols.  Requirements for\n   CXTP will be brought\
    \ to the appropriate IETF routing protocol\n   security working groups for consideration.\n"
- title: 6.3.  Mobile Node Considerations
  contents:
  - "6.3.  Mobile Node Considerations\n   The CTAR message requires the MN and AR\
    \ to possess a shared secret\n   key to calculate the authorization token.  Validation\
    \ of this token\n   MUST precede context transfer or installation of context for\
    \ the MN,\n   removing the risk that an attacker could cause an unauthorized\n\
    \   transfer.  How the shared key is established is out of scope of this\n   specification.\
    \  If both the MN and AR know certified public keys of\n   the other party, Diffie-Hellman\
    \ can be used to generate a shared\n   secret key [RFC2631].  If an AAA protocol\
    \ of some sort is run for\n   network entry, the shared key can be established\
    \ using that protocol\n   [PerkCal04].\n   If predictive context transfer is used,\
    \ the shared key for\n   calculating the authorization token is transferred between\
    \ ARs.  A\n   transfer of confidential material of this sort poses certain security\n\
    \   risks, even if the actual transfer itself is confidential and\n   authenticated,\
    \ as is the case for inter-router CXTP.  The more\n   entities know the key, the\
    \ more likely a compromise may occur.  To\n   mitigate this risk, nAR MUST discard\
    \ the key immediately after using\n   it to validate the authorization token.\
    \  The MN MUST establish a new\n   key with the AR for future CXTP transactions.\
    \  The MN and AR SHOULD\n   exercise care in using a key established for other\
    \ purposes for also\n   authorizing context transfer.  The establishment of a\
    \ separate key\n   for context transfer authorization is RECOMMENDED.\n   Replay\
    \ protection on the MN-AR protocol is provided by limiting the\n   time period\
    \ in which context is maintained.  For predictive transfer,\n   the pAR receives\
    \ a CTAR message with a sequence number, transfers the\n   context along with\
    \ the authorization token key, and then drops the\n   context and the authorization\
    \ token key immediately upon completion\n   of the transfer.  For reactive transfer,\
    \ the nAR receives the CTAR,\n   requests the context that includes the sequence\
    \ number and\n   authorization token from the CTAR message that allows the pAR\
    \ to\n   check whether the transfer is authorized.  The pAR drops the context\n\
    \   and authorization token key after the transfer has been completed.\n   The\
    \ pAR and nAR ignore any requests containing the same MN IP address\n   if an\
    \ outstanding CTAR or CTD message is unacknowledged and has not\n   timed out.\
    \  After the key has been dropped, any attempt at replay\n   will fail because\
    \ the authorization token will fail to validate.  The\n   AR MUST NOT reuse the\
    \ key for any MN, including the MN that\n   originally possessed the key.\n  \
    \ DoS attacks on the MN-AR interface can be limited by having the AR\n   rate\
    \ limit the number of CTAR messages it processes.  The AR SHOULD\n   limit the\
    \ number of CTAR messages to the CT_REQUEST_RATE.  If the\n   request exceeds\
    \ this rate, the AR SHOULD randomly drop messages until\n   the rate is established.\
    \  The actual rate SHOULD be configured on the\n   AR to match the maximum number\
    \ of handovers that the access network\n   is expected to support.\n"
- title: 7.  Acknowledgements & Contributors
  contents:
  - "7.  Acknowledgements & Contributors\n   This document is the result of a design\
    \ team formed by the chairs of\n   the SeaMoby working group.  The team included\
    \ John Loughney, Madjid\n   Nakhjiri, Rajeev Koodli and Charles Perkins.\n   Basavaraj\
    \ Patil, Pekka Savola, and Antti Tuominen contributed to the\n   Context Transfer\
    \ Protocol review.\n   The working group chairs are Pat Calhoun and James Kempf,\
    \ whose\n   comments have been very helpful in the creation of this\n   specification.\n\
    \   The authors would also like to thank Julien Bournelle, Vijay\n   Devarapalli,\
    \ Dan Forsberg, Xiaoming Fu, Michael Georgiades, Yusuf\n   Motiwala, Phil Neumiller,\
    \ Hesham Soliman, and Lucian Suciu for their\n   help and suggestions with this\
    \ document.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC791]    Postel, J., \"Internet Protocol\"\
    , STD 5, RFC 791,\n               September 1981.\n   [RFC2119]   Bradner, S.,\
    \ \"Key words for use in RFCs to Indicate\n               Requirement Levels\"\
    , BCP 14, RFC 2119, March 1997.\n   [RFC2409]   Harkins, D. and D. Carrel, \"\
    The Internet Key Exchange\n               (IKE)\", RFC 2409, November 1998.\n\
    \   [RFC3513]   Hinden, R. and S. Deering, \"Internet Protocol Version 6\n   \
    \            (IPv6) Addressing Architecture\", RFC 3513, April 2003.\n   [ESP]\
    \       Kent, S. and R. Atkinson, \"IP Encapsulating Security\n              \
    \ Payload (ESP)\", RFC 2406, November 1998.\n   [SCTP]      Stewart, R., Xie,\
    \ Q., Morneault, K., Sharp, C.,\n               Schwarzbauer, H., Taylor, T.,\
    \ Rytina, I., Kalla, M.,\n               Zhang, L., and V. Paxson, \"Stream Control\
    \ Transmission\n               Protocol\", RFC 2960, October 2000.\n   [PR-SCTP]\
    \   Stewart, R., Ramalho, M., Xie, Q., Tuexen, M., and P.\n               Conrad,\
    \ \"Stream Control Transmission Protocol (SCTP)\n               Partial Reliability\
    \ Extension\", RFC 3758, May 2004.\n   [IANA]      Kempf, J., \"Instructions for\
    \ Seamoby and Experimental\n               Mobility Protocol IANA Allocations\"\
    , RFC 4065, July 2005.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [FHCT]      R. Koodli and C. E. Perkins, \"\
    Fast Handovers and Context\n               Transfers\", ACM Computing Communication\
    \ Review, volume\n               31, number 5, October 2001.\n   [TEXT]      M.\
    \ Nakhjiri, \"A time efficient context transfer method\n               with Selective\
    \ reliability for seamless IP mobility\",\n               IEEE VTC-2003-Fall,\
    \ VTC 2003 Proceedings, Vol.3, Oct.\n               2003.\n   [FMIPv6]    Koodli,\
    \ R., Ed., \"Fast Handovers for Mobile IPv6\", RFC\n               4068, July\
    \ 2005.\n   [LLMIP]     K. El Malki et al., \"Low Latency Handoffs in Mobile\n\
    \               IPv4\", Work in Progress.\n   [RFC3374]   Kempf, J., \"Problem\
    \ Description: Reasons For Performing\n               Context Transfers Between\
    \ Nodes in an IP Access Network\",\n               RFC 3374, September 2002.\n\
    \   [RFC2401]   Kent, S. and R. Atkinson, \"Security Architecture for the\n  \
    \             Internet Protocol\", RFC 2401, November 1998.\n   [TERM]      Manner,\
    \ J. and M. Kojo, \"Mobility Related Terminology\",\n               RFC 3753,\
    \ June 2004.\n   [RFC2631]   Rescorla, E., \"Diffie-Hellman Key Agreement Method\"\
    , RFC\n               2631, June 1999.\n   [PerkCal04] Perkins, C. and P. Calhoun,\
    \ \"Authentication,\n               Authorization, and Accounting (AAA) Registration\
    \ Keys for\n               Mobile IPv4\", RFC 3957, March 2005.\n   [MIPv6]  \
    \   Johnson, D., Perkins, C., and J. Arkko, \"Mobility Support\n             \
    \  in IPv6\", RFC 3775, June 2004.\n   [RFC2710]   Deering, S., Fenner, W., and\
    \ B. Haberman, \"Multicast\n               Listener Discovery (MLD) for IPv6\"\
    , RFC 2710, October\n               1999.\n   [RFC2461]   Narten, T., Nordmark,\
    \ E., and W. Simpson, \"Neighbor\n               Discovery for IP Version 6 (IPv6)\"\
    , RFC 2461, December\n               1998.\n   [RFC2462]   Thomson, S. and T.\
    \ Narten, \"IPv6 Stateless Address\n               Autoconfiguration\", RFC 2462,\
    \ December 1998.\n   [RFC3095]   Bormann, C., Burmeister, C., Degermark, M., Fukushima,\n\
    \               H., Hannu, H., Jonsson, L-E., Hakenberg, R., Koren, T.,\n    \
    \           Le, K., Liu, Z., Martensson, A., Miyazaki, A., Svanbro,\n        \
    \       K., Wiebke, T., Yoshimura, T., and H. Zheng, \"RObust\n              \
    \ Header Compression (ROHC): Framework and four profiles:\n               RTP,\
    \ UDP, ESP, and uncompressed \", RFC 3095, July 2001.\n   [BT]        IEEE, \"\
    IEEE Standard for information technology -\n               Telecommunication and\
    \ information exchange between\n               systems - LAN/MAN - Part 15.1:\
    \ Wireless Medium Access\n               Control (MAC) and Physical Layer (PHY)\
    \ specifications for\n               Wireless Personal Area Networks (WPANs)\"\
    , IEEE Standard\n               802.15.1, 2002.\n   [EAP]       Aboba, B., Simon,\
    \ D., Arkko, J., Eron, P., and H.\n               Levokowetz, \"Extensible Authentication\
    \ Protocol (EAP) Key\n               Management Framework\", Work in Progress.\n"
- title: Appendix A.  Timing and Trigger Considerations
  contents:
  - "Appendix A.  Timing and Trigger Considerations\n   Basic Mobile IP handover signaling\
    \ can introduce disruptions to the\n   services running on top of Mobile IP, which\
    \ may introduce unwanted\n   latencies that practically prohibit its use for certain\
    \ types of\n   services.  Mobile IP latency and packet loss are optimized through\n\
    \   several alternative procedures, such as Fast Mobile IP [FMIPv6] and\n   Low\
    \ Latency Mobile IP [LLMIP].\n   Feature re-establishment through context transfer\
    \ should contribute\n   zero (optimally) or minimal extra disruption of services\
    \ in\n   conjunction with handovers.  This means that the timing of context\n\
    \   transfer SHOULD be carefully aligned with basic Mobile IP handover\n   events,\
    \ and with optimized Mobile IP handover signaling mechanisms,\n   as those protocols\
    \ become available.\n   Furthermore, some of those optimized mobile IP handover\
    \ mechanisms\n   may provide more flexibility in choosing the timing and ordering\
    \ for\n   the transfer of various context information.\n"
- title: Appendix B.  Multicast Listener Context Transfer
  contents:
  - "Appendix B.  Multicast Listener Context Transfer\n   In the past, credible proposals\
    \ have been made in the Seamoby Working\n   Group and elsewhere for using context\
    \ transfer to the speed of\n   handover of authentication, authorization, and\
    \ accounting context,\n   distributed firewall context, PPP context, and header\
    \ compression\n   context.  Because the Working Group was not chartered to develop\n\
    \   context profile definitions for specific applications, none of the\n   documents\
    \ submitted to Seamoby were accepted as Working Group items.\n   At this time,\
    \ work to develop a context profile definition for RFC\n   3095 header compression\
    \ context [RFC3095] and to characterize the\n   performance gains obtainable by\
    \ using header compression continues,\n   but is not yet complete.  In addition,\
    \ there are several commercial\n   wireless products that reportedly use non-standard,\
    \ non-interoperable\n   context transfer protocols, though none is as yet widely\
    \ deployed.\n   As a consequence, it is difficult at this time to point to a solid\n\
    \   example of how context transfer could result in a commercially\n   viable,\
    \ widely deployable, interoperable benefit for wireless\n   networks.  This is\
    \ one reason why CXTP is being proposed as an\n   Experimental protocol, rather\
    \ than Standards Track.  Nevertheless, it\n   seems valuable to have a simple\
    \ example that shows how handover could\n   benefit from using CXTP.  The example\
    \ we consider here is\n   transferring IPv6 MLD state [RFC2710].  MLD state is\
    \ a particularly\n   good example because every IPv6 node must perform at least\
    \ one MLD\n   messaging sequence on the wireless link to establish itself as an\
    \ MLD\n   listener prior to performing router discovery [RFC2461] or duplicate\n\
    \   address detection [RFC2462] or before sending/receiving any\n   application-specific\
    \ traffic (including Mobile IP handover signaling,\n   if any).  The node must\
    \ subscribe to the Solicited Node Multicast\n   Address as soon as it comes up\
    \ on the link.  Any application-specific\n   multicast addresses must be re-established\
    \ as well.  Context transfer\n   can significantly speed up re-establishing multicast\
    \ state by\n   allowing the nAR to initialize MLD for a node that just completed\n\
    \   handover without any MLD signaling on the new wireless link.  The\n   same\
    \ approach could be used for transferring multicast context in\n   IPv4.\n   An\
    \ approximate quantitative estimate for the amount of savings in\n   handover\
    \ time can be obtained as follows: MLD messages are 24 octets,\n   to which the\
    \ headers must be added, because there is no header\n   compression on the new\
    \ link, where the IPv6 header is 40 octets, and\n   a required Router Alert Hop-by-Hop\
    \ option is 8 octets including\n   padding.  The total MLD message size is 72\
    \ octets per subscribed\n   multicast address.  RFC 2710 recommends that nodes\
    \ send 2 to 3 MLD\n   Report messages per address subscription, since the Report\
    \ message is\n   unacknowledged.  Assuming 2 MLD messages sent for a subscribed\n\
    \   address, the MN would need to send 144 octets per address\n   subscription.\
    \  If MLD messages are sent for both the All Nodes\n   Multicast address and the\
    \ Solicited Node Multicast address for the\n   node's link local address, a total\
    \ of 288 octets are required when\n   the node hands over to the new link.  Note\
    \ that some implementations\n   of IPv6 are optimized by not sending an MLD message\
    \ for the All Nodes\n   Multicast Address, since the router can infer that at\
    \ least one node\n   is on the link (itself) when it comes up and always will\
    \ be.\n   However, for purposes of this calculation, we assume that the IPv6\n\
    \   implementation is conformant and that the message is sent.  The\n   amount\
    \ of time required for MLD signaling will depend on the per node\n   available\
    \ wireless link bandwidth, but some representative numbers\n   can be obtained\
    \ by assuming bandwidths of 20 kbps or 100 kbps.  With\n   these 2 bit rates,\
    \ the savings from not having to perform the pre-\n   router discovery messages\
    \ are 115 msec. and 23 msec., respectively.\n   If any application-specific multicast\
    \ addresses are subscribed, the\n   amount of time saved could be more substantial.\n\
    \   This example might seem a bit contrived as MLD is not used in the 3G\n   cellular\
    \ protocols, and wireless local area network protocols\n   typically have enough\
    \ bandwidth if radio propagation conditions are\n   optimal.  Therefore, sending\
    \ a single MLD message might not be viewed\n   as a performance burden.  An example\
    \ of a wireless protocol where MLD\n   context transfer might be useful is IEEE\
    \ 802.15.1 (Bluetooth)[BT].\n   IEEE 802.15.1 has two IP \"profiles\": one with\
    \ PPP and one without.\n   The profile without PPP would use MLD.  The 802.15.1\
    \ protocol has a\n   maximum bandwidth of about 800 kbps, shared between all nodes\
    \ on the\n   link, so a host on a moderately loaded 802.15.1 access point could\n\
    \   experience the kind of bandwidth described in the previous paragraph.\n  \
    \ In addition, 802.15.1 handover times are typically run upwards of a\n   second\
    \ or more because the host must resynchronize its frequency\n   hopping pattern\
    \ with the access point, so anything the IP layer could\n   do to alleviate further\
    \ delay would be beneficial.\n   The context-specific data field for MLD context\
    \ transfer included in\n   the CXTP Context Data Block message for a single IPv6\
    \ multicast\n   address has the following format:\n       0                  \
    \ 1                   2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                                                               |\n   \
    \   +             Subnet Prefix on nAR Wireless Interface           +\n      |\
    \                                                               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                                                               |\n   \
    \   +                                                               +\n      |\
    \                                                               |\n      +   \
    \            Subscribed IPv6 Multicast Address               +\n      |      \
    \                                                         |\n      +         \
    \                                                      +\n      |            \
    \                                                   |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The Subnet Prefix on a nAR Wireless Interface field contains a subnet\n  \
    \ prefix that identifies the interface on which multicast routing\n   should be\
    \ established.  The Subscribed IPv6 Multicast Address field\n   contains the multicast\
    \ address for which multicast routing should be\n   established.\n   The pAR sends\
    \ one MLD context block per subscribed IPv6 multicast\n   address.\n   No changes\
    \ are required in the MLD state machine.\n   Upon receipt of a CXTP Context Data\
    \ Block for MLD, the state machine\n   takes the following actions:\n      - \
    \ If the router is in the No Listeners present state on the\n         wireless\
    \ interface on which the Subnet Prefix field in the\n         Context Data Block\
    \ is advertised, it transitions into the\n         Listeners Present state for\
    \ the Subscribed IPv6 Multicast\n         Address field in the Context Data Block.\
    \  This transition is\n         exactly the same as if the router had received\
    \ a Report\n         message.\n      -  If the router is in the Listeners present\
    \ state on that\n         interface, it remains in that state but restarts the\
    \ timer, as\n         if it had received a Report message.\n   If more than one\
    \ MLD router is on the link, a router receiving an MLD\n   Context Data Block\
    \ SHOULD send the block to the other routers on the\n   link.  If wireless bandwidth\
    \ is not an issue, the router MAY instead\n   send a proxy MLD Report message\
    \ on the wireless interface that\n   advertises the Subnet Prefix field from the\
    \ Context Data Block.\n   Since MLD routers do not keep track of which nodes are\
    \ listening to\n   multicast addresses (only whether a particular multicast address\
    \ is\n   being listened to) proxying the subscription should cause no\n   difficulty.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Rajeev Koodli\n   Nokia Research Center\n   313 Fairchild\
    \ Drive\n   Mountain View, California 94043\n   USA\n   EMail: rajeev.koodli@nokia.com\n\
    \   John Loughney\n   Nokia\n   Itdmerenkatu 11-13\n   00180 Espoo\n   Finland\n\
    \   EMail: john.loughney@nokia.com\n   Madjid F. Nakhjiri\n   Motorola Labs\n\
    \   1301 East Algonquin Rd., Room 2240\n   Schaumburg, IL, 60196\n   USA\n   EMail:\
    \ madjid.nakhjiri@motorola.com\n   Charles E. Perkins\n   Nokia Research Center\n\
    \   313 Fairchild Drive\n   Mountain View, California 94043\n   USA\n   EMail:\
    \ charles.perkins@.nokia.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
