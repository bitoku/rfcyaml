- contents:
  - "   The Dynamic Host Configuration Protocol for IPv6 (DHCPv6) Client\n               Fully
    Qualified Domain Name (FQDN) Option\n"
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document specifies a new Dynamic Host Configuration Protocol
    for\n   IPv6 (DHCPv6) option that can be used to exchange information about a\n
    \  DHCPv6 client's Fully Qualified Domain Name (FQDN) and about\n   responsibility
    for updating DNS resource records (RRs) related to the\n   client's address assignments.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n
    \  2. Terminology .....................................................3\n   3.
    Models of Operation .............................................3\n   4. The
    DHCPv6 Client FQDN Option ...................................4\n      4.1. The
    Flags Field ............................................5\n      4.2. The Domain
    Name Field ......................................6\n   5. DHCPv6 Client Behavior
    ..........................................7\n      5.1. Client Desires to Update
    AAAA RRs ..........................7\n      5.2. Client Desires Server to Do DNS
    Updates ....................7\n      5.3. Client Desires No Server DNS Updates
    .......................7\n      5.4. Domain Name and DNS Update Issues ..........................8\n
    \  6. DHCPv6 Server Behavior ..........................................9\n      6.1.
    When to Perform DNS Updates ................................9\n   7. DNS RR TTLs
    ....................................................10\n   8. DNS Update Conflicts
    ...........................................11\n   9. IANA Considerations ............................................11\n
    \  10. Security Considerations .......................................12\n   11.
    Acknowledgements ..............................................12\n   12. References
    ....................................................13\n      12.1. Normative
    References .....................................13\n      12.2. Informative References
    ...................................13\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   DNS ([2], [3]) maintains (among other things) the information
    about\n   mapping between hosts' Fully Qualified Domain Names (FQDNs) [10] and\n
    \  IPv6 addresses assigned to the hosts.  The information is maintained\n   in
    two types of Resource Records (RRs): AAAA and PTR [12].  The DNS\n   update specification
    [4] describes a mechanism that enables DNS\n   information to be updated over
    a network.\n   The Dynamic Host Configuration Protocol for IPv6 (DHCPv6) [5]\n
    \  provides a mechanism by which a host (a DHCPv6 client) can acquire\n   certain
    configuration information, along with its stateful IPv6\n   address(es).  This
    document specifies a new DHCPv6 option, the Client\n   FQDN option, which can
    be used by DHCPv6 clients and servers to\n   exchange information about the client's
    fully qualified domain name\n   and about who has the responsibility for updating
    the DNS with the\n   associated AAAA and PTR RRs.\n"
  title: 1.  Introduction
- contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"
    in this\n   document are to be interpreted as described in [1].\n   Familiarity
    with the DNS Update protocol [4] and with DHCPv6 and its\n   terminology, as defined
    in [5], is assumed.\n"
  title: 2.  Terminology
- contents:
  - "3.  Models of Operation\n   When a DHCPv6 client acquires an address, a site's
    administrator may\n   desire that the AAAA RR for the client's FQDN and the PTR
    RR for the\n   acquired address be updated.  Therefore, two separate DNS update\n
    \  transactions may occur.  Acquiring an address via DHCPv6 involves two\n   entities:
    a DHCPv6 client and a DHCPv6 server.  In principle, each of\n   these entities
    could perform none, one, or both of the DNS update\n   transactions.  However,
    in practice, not all permutations make sense.\n   The DHCPv6 Client FQDN option
    is primarily intended to operate in the\n   following two cases:\n   1.  DHCPv6
    client updates the AAAA RR; DHCPv6 server updates the PTR\n       RR.\n   2.  DHCPv6
    server updates both the AAAA and the PTR RRs.\n   The only difference between
    these two cases is whether the FQDN-to-\n   IPv6-address mapping is updated by
    a DHCPv6 client or by a DHCPv6\n   server.  The IPv6-address-to-FQDN mapping is
    updated by a DHCPv6\n   server in both cases.\n   The reason these two are important,
    while others are unlikely, has to\n   do with authority over the respective DNS
    domain names.  A DHCPv6\n   client may be given authority over mapping its own
    AAAA RRs, or that\n   authority may be restricted to a server to prevent the client
    from\n   listing arbitrary addresses or associating its addresses with\n   arbitrary
    domain names.  In all cases, the only reasonable place for\n   the authority over
    the PTR RRs associated with the address is in the\n   DHCPv6 server that allocates
    the address.\n   Note: A third case is supported in which the client requests
    that the\n   server perform no updates.  However, this case is presumed to be
    rare\n   because of the authority issues.\n   In any case, whether a site permits
    all, some, or no DHCPv6 servers\n   and clients to perform DNS updates into the
    zones that it controls is\n   entirely a matter of local administrative policy.
    \ This document does\n   not require any specific administrative policy and does
    not propose\n   one.  The range of possible policies is very broad, from sites
    where\n   only the DHCPv6 servers have been given credentials that the DNS\n   servers
    will accept, to sites where each individual DHCPv6 client has\n   been configured
    with credentials that allow the client to modify its\n   own domain name.  Compliant
    implementations MAY support some or all\n   of these possibilities.  Furthermore,
    this specification applies only\n   to DHCPv6 client and server processes: it
    does not apply to other\n   processes that initiate DNS updates.\n   This document
    describes a new DHCPv6 option that a client can use to\n   convey all or part
    of its domain name to a DHCPv6 server.  Site-\n   specific policy determines whether
    or not DHCPv6 servers use the\n   names that clients offer, and what DHCPv6 servers
    do in cases where\n   clients do not supply domain names.\n"
  title: 3.  Models of Operation
- contents:
  - "4.  The DHCPv6 Client FQDN Option\n   To update the IPv6-address-to-FQDN mapping,
    a DHCPv6 server needs to\n   know the FQDN of the client for the addresses for
    the client's IA_NA\n   bindings.  To allow the client to convey its FQDN to the
    server, this\n   document defines a new DHCPv6 option called \"Client FQDN\".
    \ The\n   Client FQDN option also contains Flags that DHCPv6 clients and\n   servers
    use to negotiate who does which updates.\n   The code for this option is 39.  Its
    minimum length is 1 octet.\n   The format of the DHCPv6 Client FQDN option is
    shown below:\n        0                   1                   2                   3\n
    \       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \      |          OPTION_FQDN          |         option-len            |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \      |   flags       |                                               |\n       +-+-+-+-+-+-+-+-+
    \                                              |\n       .                                                               .\n
    \      .                          domain-name                          .\n       .
    \                                                              .\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \        option-code      OPTION_CLIENT_FQDN (39)\n         option-len       1
    + length of domain name\n         flags            flag bits used between client
    and server to\n                          negotiate who performs which updates\n
    \        domain-name      the partial or fully qualified domain name\n                          (with
    length option-len - 1)\n   The Client FQDN option MUST only appear in a message's
    options field\n   and applies to all addresses for all IA_NA bindings in the\n
    \  transaction.\n"
  - contents:
    - "4.1.  The Flags Field\n   The format of the Flags field is:\n        0 1 2
      3 4 5 6 7\n       +-+-+-+-+-+-+-+-+\n       |  MBZ    |N|O|S|\n       +-+-+-+-+-+-+-+-+\n
      \  The \"S\" bit indicates whether the server SHOULD or SHOULD NOT perform\n
      \  the AAAA RR (FQDN-to-address) DNS updates.  A client sets the bit to\n   0
      to indicate that the server SHOULD NOT perform the updates and 1 to\n   indicate
      that the server SHOULD perform the updates.  The state of\n   the bit in the
      reply from the server indicates the action to be taken\n   by the server; if
      it is 1, the server has taken responsibility for\n   AAAA RR updates for the
      FQDN.\n   The \"O\" bit indicates whether the server has overridden the client's\n
      \  preference for the \"S\" bit.  A client MUST set this bit to 0.  A\n   server
      MUST set this bit to 1 if the \"S\" bit in its reply to the\n   client does
      not match the \"S\" bit received from the client.\n   The \"N\" bit indicates
      whether the server SHOULD NOT perform any DNS\n   updates.  A client sets this
      bit to 0 to request that the server\n   SHOULD perform updates (the PTR RR and
      possibly the AAAA RR based on\n   the \"S\" bit) or to 1 to request that the
      server SHOULD NOT perform\n   any DNS updates.  A server sets the \"N\" bit
      to indicate whether the\n   server SHALL (0) or SHALL NOT (1) perform DNS updates.
      \ If the \"N\"\n   bit is 1, the \"S\" bit MUST be 0.\n   The remaining bits
      in the Flags field are reserved for future\n   assignment.  DHCPv6 clients and
      servers that send the Client FQDN\n   option MUST clear the MBZ bits, and they
      MUST ignore these bits.\n"
    title: 4.1.  The Flags Field
  - contents:
    - "4.2.  The Domain Name Field\n   The Domain Name part of the option carries
      all or part of the FQDN of\n   a DHCPv6 client.  The data in the Domain Name
      field MUST be encoded\n   as described in Section 8 of [5].  In order to determine
      whether the\n   FQDN has changed between message exchanges, the client and server\n
      \  MUST NOT alter the Domain Name field contents unless the FQDN has\n   actually
      changed.\n   A client MAY be configured with a fully qualified domain name or
      with\n   a partial name that is not fully qualified.  If a client knows only\n
      \  part of its name, it MAY send a name that is not fully qualified,\n   indicating
      that it knows part of the name but does not necessarily\n   know the zone in
      which the name is to be embedded.\n   To send a fully qualified domain name,
      the Domain Name field is set\n   to the DNS-encoded domain name including the
      terminating zero-length\n   label.  To send a partial name, the Domain Name
      field is set to the\n   DNS-encoded domain name without the terminating zero-length
      label.\n   A client MAY also leave the Domain Name field empty if it desires
      the\n   server to provide a name.\n   Servers SHOULD send the complete fully
      qualified domain name in\n   Client FQDN options.\n"
    title: 4.2.  The Domain Name Field
  title: 4.  The DHCPv6 Client FQDN Option
- contents:
  - "5.  DHCPv6 Client Behavior\n   The following describes the behavior of a DHCPv6
    client that\n   implements the Client FQDN option.\n   A client MUST only include
    the Client FQDN option in SOLICIT,\n   REQUEST, RENEW, or REBIND messages.\n   A
    client that sends the Client FQDN option MUST also include the\n   option in the
    Option Request option if it expects the server to\n   include the Client FQDN
    option in any responses.\n"
  - contents:
    - "5.1.  Client Desires to Update AAAA RRs\n   If a client that owns/maintains
      its own FQDN wants to be responsible\n   for updating the FQDN-to-IPv6-address
      mapping for the FQDN and\n   address(es) used by the client, the client MUST
      include the Client\n   FQDN option in the SOLICIT with Rapid Commit, REQUEST,
      RENEW, and\n   REBIND message originated by the client.  A client MAY choose
      to\n   include the Client FQDN option in its SOLICIT messages.  The \"S\",\n
      \  \"O\", and \"N\" bits in the Flags field in the option MUST be 0.\n   Once
      the client's DHCPv6 configuration is completed (the client\n   receives a REPLY
      message and successfully completes a final check on\n   the parameters passed
      in the message), the client MAY originate an\n   update for the AAAA RRs (associated
      with the client's FQDN) unless\n   the server has set the \"S\" bit to 1.  If
      the \"S\" is 1, the DHCPv6\n   client SHOULD NOT initiate an update for the
      name in the server's\n   returned Client FQDN option Domain Name field.  However,
      a DHCPv6\n   client that is explicitly configured with a FQDN MAY ignore the
      state\n   of the \"S\" bit if the server's returned name matches the client's\n
      \  configured name.\n"
    title: 5.1.  Client Desires to Update AAAA RRs
  - contents:
    - "5.2.  Client Desires Server to Do DNS Updates\n   A client can choose to delegate
      the responsibility for updating the\n   FQDN-to-IPv6-address mapping for the
      FQDN and address(es) used by the\n   client to the server.  In order to inform
      the server of this choice,\n   the client SHOULD include the Client FQDN option
      in its SOLICIT with\n   Rapid Commit, REQUEST, RENEW, and REBIND messages and
      MAY include the\n   Client FQDN option in its SOLICIT.  The \"S\" bit in the
      Flags field in\n   the option MUST be 1, and the \"O\" and \"N\" bits MUST be
      0.\n"
    title: 5.2.  Client Desires Server to Do DNS Updates
  - contents:
    - "5.3.  Client Desires No Server DNS Updates\n   A client can choose to request
      that the server perform no DNS updates\n   on its behalf.  In order to inform
      the server of this choice, the\n   client SHOULD include the Client FQDN option
      in its SOLICIT with\n   Rapid Commit, REQUEST, RENEW, and REBIND messages and
      MAY include the\n   Client FQDN option in its SOLICIT.  The \"N\" bit in the
      Flags field in\n   the option MUST be 1, and the \"S\" and \"O\" bits MUST be
      0.\n   Once the client's DHCPv6 configuration is completed (the client\n   receives
      a REPLY message and successfully completes a final check on\n   the parameters
      passed in the message), the client MAY originate its\n   DNS updates provided
      the server's \"N\" bit is 1.  If the server's \"N\"\n   bit is 0, the server
      MAY perform the PTR RR updates; it MAY also\n   perform the AAAA RR updates
      if the \"S\" bit is 1.\n"
    title: 5.3.  Client Desires No Server DNS Updates
  - contents:
    - "5.4.  Domain Name and DNS Update Issues\n   As there is a possibility that
      the DHCPv6 server is configured to\n   complete or replace a domain name that
      the client sends, the client\n   MAY find it useful to send the Client FQDN
      option in its SOLICIT\n   messages.  If the DHCPv6 server returns different
      Domain Name data in\n   its ADVERTISE message, the client could use that data
      in performing\n   its own eventual AAAA RR update, or in forming the Client
      FQDN option\n   that it sends in its subsequent messages.  There is no requirement\n
      \  that the client send identical Client FQDN option data in its\n   SOLICIT,
      REQUEST, RENEW, or REBIND messages.  In particular, if a\n   client has sent
      the Client FQDN option to its server, and the\n   configuration of the client
      changes so that its notion of its domain\n   name changes, it MAY send the new
      name data in a Client FQDN option\n   when it communicates with the server again.
      \ This MAY cause the\n   DHCPv6 server to update the name associated with the
      PTR records and,\n   if the server updated the AAAA record representing the
      client, to\n   delete that record and attempt an update for the client's current\n
      \  domain name.\n   A client that delegates the responsibility for updating
      the FQDN-to-\n   IPv6-address mapping to a server will not receive any indication\n
      \  (either positive or negative) from the server as to whether the\n   server
      was able to perform the update.  The client MAY use a DNS\n   query to check
      whether the mapping is up to date.  However, depending\n   on the load on the
      DHCPv6 and DNS servers and the DNS propagation\n   delays, the client can only
      infer success.  If the information is not\n   found to be up to date in DNS,
      the authoritative servers might not\n   have completed the updates or zone transfers,
      or caching resolvers\n   may yet have updated their caches.\n   If a client
      releases an address prior to the expiration of the valid\n   lifetime and the
      client is responsible for updating its AAAA RR, the\n   client SHOULD delete
      the AAAA RR associated with the address before\n   sending a RELEASE message.
      \ Similarly, if a client is responsible for\n   updating its AAAA RRs, but is
      unable to renew the lifetimes for an\n   address, the client SHOULD attempt
      to delete the AAAA RR before the\n   lifetime on the address is no longer valid.
      \ A DHCPv6 client that has\n   not been able to delete an AAAA RR that it added
      SHOULD attempt to\n   notify its administrator, perhaps by emitting a log message.\n
      \  A client SHOULD NOT perform DNS updates to AAAA RRs for its non-\n   Global
      Unicast addresses [7] or temporary addresses [6].\n"
    title: 5.4.  Domain Name and DNS Update Issues
  title: 5.  DHCPv6 Client Behavior
- contents:
  - "6.  DHCPv6 Server Behavior\n   The following describes the behavior of a DHCPv6
    server that\n   implements the Client FQDN option when the client's message includes\n
    \  the Client FQDN option.\n   Servers MUST only include a Client FQDN option
    in ADVERTISE and REPLY\n   messages if the client included a Client FQDN option
    and the Client\n   FQDN option is requested by the Option Request option in the
    client's\n   message to which the server is responding.\n   The server examines
    its configuration and the Flag bits in the\n   client's Client FQDN option to
    determine how to respond:\n   o  The server sets to 0 the \"S\", \"O\", and \"N\"
    bits in its copy of the\n      option it will return to the client.\n   o  If
    the client's \"N\" bit is 1 and the server's configuration allows\n      it to
    honor the client's request for no server-initiated DNS\n      updates, the server
    sets the \"N\" bit to 1.\n   o  Otherwise, if the client's \"S\" bit is 1 and
    the server's\n      configuration allows it to honor the client's request for
    the\n      server to initiate AAAA RR DNS updates, the server sets the \"S\" to\n
    \     1.  If the server's \"S\" bit does not match the client's \"S\" bit,\n      the
    server sets the \"O\" bit to 1.\n   The server MAY be configured to use the name
    supplied in the client's\n   Client FQDN option, or it MAY be configured to modify
    the supplied\n   name or to substitute a different name.  The server SHOULD send
    its\n   notion of the complete FQDN for the client in the Domain Name field.\n
    \  The server MAY simply copy the Domain Name field from the Client FQDN\n   option
    that the client sent to the server.\n"
  - contents:
    - "6.1.  When to Perform DNS Updates\n   The server SHOULD NOT perform any DNS
      updates if the \"N\" bit is 1 in\n   the Flags field of the Client FQDN option
      in the REPLY messages (to\n   be) sent to the client.  However, the server SHOULD
      delete any RRs\n   that it previously added via DNS updates for the client.\n
      \  The server MAY perform the PTR RR DNS update (unless the \"N\" bit is\n   1).\n
      \  The server MAY perform the AAAA RR DNS update if the \"S\" bit is 1 in\n
      \  the Flags field of the Client FQDN option in the REPLY message (to\n   be)
      sent to the client.\n   The server MAY perform these updates even if the client's
      message did\n   not carry the Client FQDN option.  The server MUST NOT initiate
      DNS\n   updates when responding with an ADVERTISE message to the client.\n   The
      server MAY complete its DNS updates (PTR RR or PTR and AAAA RR)\n   before or
      after sending the REPLY message to the client.\n   If the server's AAAA RR DNS
      update does not complete until after the\n   server has replied to the DHCPv6
      client, the server's interaction\n   with the DNS server MAY cause the DHCPv6
      server to change the domain\n   name that it associates with the client.  This
      can occur, for\n   example, if the server detects and resolves a domain-name
      conflict\n   [8].  In such cases, the domain name that the server returns to
      the\n   DHCPv6 client would change between two DHCPv6 exchanges.\n   If the
      server previously performed DNS updates for the client and the\n   client's
      information has not changed, the server MAY skip performing\n   additional DNS
      updates.\n   When a server receives a RELEASE or DECLINE for an address, detects\n
      \  that the valid lifetime on an address that the server bound to a\n   client
      has expired, or terminates a binding on an address prior to\n   the binding's
      expiration time (for instance, by sending a REPLY with\n   a zero valid lifetime
      for an address), the server SHOULD delete any\n   PTR RR that it associated
      with the address via DNS update.  In\n   addition, if the server took responsibility
      for AAAA RRs, the server\n   SHOULD also delete the AAAA RR.\n"
    title: 6.1.  When to Perform DNS Updates
  title: 6.  DHCPv6 Server Behavior
- contents:
  - "7.  DNS RR TTLs\n   RRs associated with DHCP clients may be more volatile than
    statically\n   configured RRs.  DHCP clients and servers that perform dynamic\n
    \  updates should attempt to specify resource record TTLs that reflect\n   this
    volatility, in order to minimize the possibility that answers to\n   DNS queries
    will return records that refer to DHCP IP address\n   assignments that have expired
    or been released.\n   The coupling among primary, secondary, and caching DNS servers
    is\n   'loose'; that is a fundamental part of the design of the DNS.  This\n   looseness
    makes it impossible to prevent all possible situations in\n   which a resolver
    may return a record reflecting a DHCP-assigned IP\n   address that has expired
    or been released.  In deployment, this\n   rarely, if ever, represents a significant
    problem.  Most DHCP-managed\n   clients are infrequently looked up by name in
    the DNS, and the\n   deployment of IXFR [13] and NOTIFY [14] can reduce the latency\n
    \  between updates and their visibility at secondary servers.\n   We suggest these
    basic guidelines for implementers.  In general, the\n   TTLs for RRs added as
    a result of DHCP IP address assignment activity\n   SHOULD be less than the initial
    lifetime.  The RR TTL on a DNS record\n   added SHOULD NOT exceed 1/3 of the lifetime,
    but SHOULD NOT be less\n   than 10 minutes.  We recognize that individual administrators
    will\n   have varying requirements: DHCP servers and clients SHOULD allow\n   administrators
    to configure TTLs and upper and lower bounds on the\n   TTL values, either as
    an absolute time interval or as a percentage of\n   the lease lifetime.\n   While
    clients and servers MAY update the TTL of the records as the\n   lifetime is about
    to expire, there is no requirement that they do so\n   as this puts additional
    load on the DNS system with likely little\n   benefit.\n"
  title: 7.  DNS RR TTLs
- contents:
  - "8.  DNS Update Conflicts\n   This document does not resolve how a DHCPv6 client
    or server prevent\n   name conflicts.  This document addresses only how a DHCPv6
    client and\n   server negotiate the fully qualified domain name and who will perform\n
    \  the DNS updates.\n   Implementers of this work will need to consider how name
    conflicts\n   will be prevented.  If a DNS updater needs a security token in order\n
    \  to successfully perform DNS updates on a specific name, name\n   conflicts
    can only occur if multiple updaters are given a security\n   token for that name.
    \ Or, if the fully qualified domains are based on\n   the specific address bound
    to a client, conflicts will not occur.\n   Or, a name conflict resolution technique
    as described in \"Resolving\n   Name Conflicts\" [8]) SHOULD be used.\n"
  title: 8.  DNS Update Conflicts
- contents:
  - "9.  IANA Considerations\n   The IANA has assigned DHCPv6 option code 39 for the
    Client FQDN\n   option.\n"
  title: 9.  IANA Considerations
- contents:
  - "10.  Security Considerations\n   Unauthenticated updates to the DNS can lead
    to tremendous confusion,\n   through malicious attack or through inadvertent misconfiguration.\n
    \  Administrators need to be wary of permitting unsecured DNS updates to\n   zones
    that are exposed to the global Internet.  Both DHCPv6 clients\n   and servers
    SHOULD use some form of update request origin\n   authentication procedure (e.g.,
    Secure DNS Dynamic Update [11]) when\n   performing DNS updates.\n   Whether a
    DHCPv6 client is responsible for updating an FQDN-to-IPv6-\n   address mapping
    or whether this is the responsibility of the DHCPv6\n   server is a site-local
    matter.  The choice between the two\n   alternatives is likely based on the security
    model that is used with\n   the DNS update protocol (e.g., only a client may have
    sufficient\n   credentials to perform updates to the FQDN-to-IPv6-address mapping\n
    \  for its FQDN).\n   Whether a DHCPv6 server is always responsible for updating
    the FQDN-\n   to-IPv6-address mapping (in addition to updating the IPv6-to-FQDN\n
    \  mapping), regardless of the wishes of an individual DHCPv6 client, is\n   also
    a site-local matter.  The choice between the two alternatives is\n   likely based
    on the security model that is being used with DNS\n   updates.  In cases where
    a DHCPv6 server is performing DNS updates on\n   behalf of a client, the DHCPv6
    server SHOULD be sure of the DNS name\n   to use for the client, and of the identity
    of the client.\n   Depending on the presence of or type of authentication used
    with the\n   Authentication option, a DHCPv6 server may not have much confidence\n
    \  in the identities of its clients.  There are many ways for a DHCPv6\n   server
    to develop a DNS name to use for a client, but only in certain\n   circumstances
    will the DHCPv6 server know for certain the identity of\n   the client.\n   It
    is critical to implement proper conflict resolution, and the\n   security considerations
    of conflict resolution apply [8].\n"
  title: 10.  Security Considerations
- contents:
  - "11.  Acknowledgements\n   Many thanks to Mark Stapp and Yakov Rekhter, as this
    document is\n   based on the DHCPv4 Client FQDN option [9], and to Ralph Droms,
    Ted\n   Lemon, Josh Littlefield, Kim Kinnear, Pekka Savola, and Mark Stapp\n   for
    their review and comments.\n"
  title: 11.  Acknowledgements
- contents:
  - '12.  References

    '
  - contents:
    - "12.1.  Normative References\n   [1]  Bradner, S., \"Key words for use in RFCs
      to Indicate Requirement\n        Levels\", BCP 14, RFC 2119, March 1997.\n   [2]
      \ Mockapetris, P., \"Domain names - concepts and facilities\",\n        STD
      13, RFC 1034, November 1987.\n   [3]  Mockapetris, P., \"Domain names - implementation
      and\n        specification\", STD 13, RFC 1035, November 1987.\n   [4]  Vixie,
      P., Thomson, S., Rekhter, Y., and J. Bound, \"Dynamic\n        Updates in the
      Domain Name System (DNS UPDATE)\", RFC 2136,\n        April 1997.\n   [5]  Droms,
      R., Bound, J., Volz, B., Lemon, T., Perkins, C., and M.\n        Carney, \"Dynamic
      Host Configuration Protocol for IPv6 (DHCPv6)\",\n        RFC 3315, July 2003.\n
      \  [6]  Narten, T. and R. Draves, \"Privacy Extensions for Stateless\n        Address
      Autoconfiguration in IPv6\", RFC 3041, January 2001.\n   [7]  Hinden, R. and
      S. Deering, \"IP Version 6 Addressing\n        Architecture\", RFC 4291, February
      2006.\n   [8]  Stapp, M. and B. Volz, \"Resolution of Fully Qualified Domain\n
      \       Name (FQDN) Conflicts among Dynamic Host Configuration Protocol\n        (DHCP)
      Clients\", RFC 4703, October 2006.\n"
    title: 12.1.  Normative References
  - contents:
    - "12.2.  Informative References\n   [9]   Stapp, M., Volz, B., and Y. Rekhter,
      \"The Dynamic Host\n         Configuration Protocol (DHCP) Client Fully Qualified
      Domain\n         Name (FQDN) Option\", RFC 4702, October 2006.\n   [10]  Marine,
      A., Reynolds, J., and G. Malkin, \"FYI on Questions and\n         Answers -
      Answers to Commonly asked \"New Internet User\"\n         Questions\", FYI 4,
      RFC 1594, March 1994.\n   [11]  Wellington, B., \"Secure Domain Name System
      (DNS) Dynamic\n         Update\", RFC 3007, November 2000.\n   [12]  Thomson,
      S., Huitema, C., Ksinant, V., and M. Souissi, \"DNS\n         Extensions to
      Support IP Version 6\", RFC 3596, October 2003.\n   [13]  Ohta, M., \"Incremental
      Zone Transfer in DNS\", RFC 1995,\n         August 1996.\n   [14]  Vixie, P.,
      \"A Mechanism for Prompt Notification of Zone Changes\n         (DNS NOTIFY)\",
      RFC 1996, August 1996.\n"
    title: 12.2.  Informative References
  title: 12.  References
- contents:
  - "Author's Address\n   Bernard Volz\n   Cisco Systems, Inc.\n   1414 Massachusetts
    Ave.\n   Boxborough, MA  01719\n   USA\n   Phone: +1 978 936 0382\n   EMail: volz@cisco.com\n"
  title: Author's Address
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This
    document is subject to the rights, licenses and restrictions\n   contained in
    BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n
    \  This document and the information contained herein are provided on an\n   \"AS
    IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING TASK FORCE
    DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT LIMITED TO
    ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT INFRINGE ANY
    RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n
    \  Administrative Support Activity (IASA).\n"
  title: Acknowledgement
