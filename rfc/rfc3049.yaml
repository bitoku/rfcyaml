- title: __initial_text__
  contents:
  - '             TN3270E Service Location and Session Balancing

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2001).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document discusses the implementation of Service Location\n\
    \   Protocol (SLP) and session balancing with a TN3270E emulator in a\n   client\
    \ server implementation with a TN3270E server.\n   Application program developer's\
    \ can locate TN3270E services and load\n   balance among those services (3270\
    \ host sessions), by using this SLP\n   support.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n      5.2 How to Obtain List of TN3270E Servers Supporting\
    \ SLP .....  8\n      5.3 TN3270E Sample Client Flow ...............................\
    \  9\n         5.3.1 Open the SLP connection .............................  9\n\
    \         5.3.2 Query the list of TN3270E servers ...................  9\n   \
    \      5.3.3 Forward Looking Example using SLPv2 ................. 10\n      \
    \   5.3.4 Determine loading of each TN3270E server ............ 10\n      5.4\
    \ Recommendations .......................................... 11\n   6. Sample\
    \ Trace Flow of SLP and Session Balancing ............... 11\n   7. Service Templates\
    \ and Service Registration ................... 12\n      7.1 The TN3270E Service\
    \ Type Template ........................ 12\n      7.2 The Server Service Template\
    \ .............................. 16\n      7.3 Template Contact Information .............................\
    \ 17\n      7.4 Security Considerations .................................. 17\n\
    \      7.5 Sample TN3270 Service Registration Message ............... 18\n   \
    \   7.6 Sample Server Service Registration Message ............... 19\n   8. References\
    \ ................................................... 19\n   9. Authors' Addresses\
    \ ........................................... 20\n   10. Full Copyright Statement\
    \ .................................... 21\n"
- title: 1. Introduction and Terminology
  contents:
  - "1. Introduction and Terminology\n   This document will provide information on\
    \ Service Location Protocol\n   implementation to discover TN3270E servers in\
    \ a network and session\n   balance among those servers.  This implementation\
    \ follows the\n   standards track RFC 2165, Service Location Protocol [1] but\
    \ also\n   provides some examples when using Service Location Protocol version\
    \ 2\n   to be forward looking.  Service Location Protocol version 2 is\n   documented\
    \ in RFC 2608 [4] and RFC 2609 [2].\n"
- title: 1.1 Terminology
  contents:
  - "1.1 Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119  [1].\n   Session Balance - This refers to the ability of TN3270E client\
    \ to use\n   server load information to establish a TN3270E connection to the\n\
    \   TN3270E server with the least load at that time.  The purpose is to\n   distribute\
    \ the connection of TN3270E sessions among more than one\n   TN3270E server, and\
    \ one server will not be excessively loaded.  The\n   term \"load balance\" is\
    \ a more general term, with respect to server\n   load, and in this document we\
    \ are focusing on the TN3270E session\n   connections to least loaded servers.\n\
    \   SNA Gateway - A Systems Network Architecture (SNA) gateway allows\n   multiple\
    \ LAN-attached workstations to access SNA hosts through one or\n   more physical\
    \ connections to one or more hosts.  A SNA gateway acts\n   as a protocol converter\
    \ between workstations attached to a LAN and a\n   WAN host line.  It typically\
    \ would support the SNA protocols LU 0, 1,\n   2, 3, and dependent LU 6.2 (APPC).\
    \  SNA gateways typically include a\n   TN3270E server capability.\n   LU Pool\
    \ - The Logical Units (LUs) defined in the gateway can be\n   dedicated to a particular\
    \ workstation or pooled among multiple\n   workstations.  Pooling allows workstations\
    \ to share common Logical\n   Units (LUs), which increases the efficiency of the\
    \ LUs and reduces\n   the configuration and startup requirements at the host.\
    \  When a\n   client connects to the gateway, the gateway retrieves an LU from\
    \ the\n   pool to establish a session.  The LU is returned to the pool for\n \
    \  access by other workstations when the session is ended.\n   Commserver Service\
    \ Type Template - Commserver service type is defined\n   as an SNA Gateway server\
    \ as previously defined above in this\n   terminology section.  A template describing\
    \ the attributes for this\n   service type is in section 7.2.\n"
- title: 2. An overview of RFC 2165
  contents:
  - "2. An overview of RFC 2165\n   RFC 2165, Service Location Protocol (SLP) [1],\
    \ provides an automatic\n   way for clients to discover services within an administrative\
    \ domain.\n   These services have various attributes associated with them from\n\
    \   which a client can base a service selection.  The basic design\n   involves\
    \ the use of three agent types.  These are: User Agents\n   (UA's), Service Agents\
    \ (SA's) and Directory Agents (DA's).\n"
- title: 2.1 SLP Agents
  contents:
  - "2.1 SLP Agents\n   User Agents are used to query Service Agents or Directory\
    \ Agents.\n   They acquire/request service information based upon the desired\n\
    \   attributes and service needed for the user application.\n   Service Agents\
    \ represent a specific service and advertise service\n   information.\n   Directory\
    \ Agents act as a central collection point for service\n   registration information\
    \ by Service Agents which is later requested\n   by \"user agents\" in \"intranets\"\
    .\n"
- title: 2.2 Service Agents
  contents:
  - "2.2 Service Agents\n   The service registers itself with the service agent so\
    \ that the SA\n   can start advertising this information over the network.  The\
    \ process\n   of registration consists of the service giving the SA all relevant\n\
    \   configuration information and attribute tag/value list pairs specific\n  \
    \ to this service.  The Service template is an abstract schema that\n   applies\
    \ to the service type.  The service template for TN3270E is\n   shown later, contains\
    \ the URL which is the address of the server with\n   the port, which should be\
    \ used to connect to it.  The URL also\n   contains the service type which in\
    \ this case is TN3270.  The template\n   also contains all the other attributes\
    \ associated with this service.\n"
- title: 2.3 User Agents
  contents:
  - "2.3 User Agents\n   The User Agent working on the TN3270E client's behalf retrieves\n\
    \   service information from the Service Agent(s) or a Directory Agent.\n   Based\
    \ on the gathered information and required attributes the TN3270E\n   client or\
    \ user can decide whether or not to connect with a particular\n   server.  Based\
    \ on the service advertisements from various TN3270E\n   servers, the client looks\
    \ at the load attribute and can decide to\n   connect to the least loaded server.\
    \  If by the time it connects to\n   that particular TN3270E server, the server\
    \ becomes unavailable it can\n   try connecting to the next server in its list\
    \ (ie: the second least\n   loaded server whose advertisement was retrieved by\
    \ the client/user\n   agent).\n"
- title: 3. TN3270E Server Environment and Load
  contents:
  - "3. TN3270E Server Environment and Load\n   TN3270E Servers are pervasive in today's\
    \ networked environment.  SLP\n   provides emulator clients with a way to discover\
    \ TN3270E servers in\n   the network and session balance among the servers.  The\
    \ TN3270E\n   servers could be distributed across different SNA gateways with\n\
    \   different connection methods to hosts.  The use of LU pools provides\n   an\
    \ easy way for administrators to provide users access to hosts.\n   Administrators\
    \ can add users to LU pools that have pre-configured\n   LU's with specific attributes,\
    \ like LU types and model types.\n   These LU pools would typically have LUs from\
    \ several different\n   gateways assigned, and as members of the LU pool make\
    \ TN3270E session\n   connections, they would be making connections to different\
    \ TN3270E\n   servers, with different load factors, so that session balancing\
    \ could\n   be accomplished.  The use of LU pools is not a requirement for SLP\n\
    \   and session balancing.  A TN3270E client could obtain a session by\n   using\
    \ SLP and session balancing to locate the least loaded server in\n   the network.\
    \  On a service request a wild card \"*\" could be used when\n   asking for LUPOOL\
    \ if the emulator doesn't care which device types are\n   supported in given pools\
    \ or if it can assume given pools support only\n   certain device types.\n"
- title: 3.1 TN3270E Server Load
  contents:
  - "3.1 TN3270E Server Load\n   TN3270E servers providing load information, SHOULD\
    \ include number of\n   sessions available, not in current use, as part of the\
    \ calculation in\n   determining the total load for the server.  There can be\
    \ other\n   factors that might have an effect on server load.  An example would\n\
    \   be if a server is not dedicated to only SNA traffic, and is handling\n   other\
    \ processes, like file services and print services, etc.  It is\n   beyond the\
    \ scope of this document to standardize the method of\n   individual server load\
    \ calculations.  Different vendors server's may\n   calculate load information\
    \ based upon factors they consider\n   important, and methods for calculating\
    \ load may change over time.\n   If the TN3270E server coexists in a network with\
    \ other TN server\n   implementations using SLP for session balancing, TN3270E\
    \ server load\n   could be adjusted to compensate for differences in load calculations.\n\
    \   One way to allow TN3270E server administrators to compensate for\n   differences\
    \ in implementations of calculating server load measurement\n   is to provide\
    \ the ability to modify the load calculation on the\n   TN3270E server.  An element\
    \ of control can be provided by allowing\n   the administrator to modify the load\
    \ measurement, by using an\n   integral number between 0 and 100 (100 being the\
    \ highest) to change\n   the load.  This load measurement acts as an additional\
    \ factor on the\n   server's actual load calculation, so that the administrator\
    \ could\n   bias up or down, the likelihood of that server being selected by a\n\
    \   TN3270E client.\n   Load MUST be defined as one of the attributes for the\
    \ TN3270E server.\n   The Load attribute provided at the server will allow clients\
    \ to\n   determine which server to make a connection.  If a UA provides only a\n\
    \   Service Type, in an Attribute Request,  then the reply includes all\n   attributes\
    \ and all values for that Service Type, and Load would be\n   included.  Attribute\
    \ Requests MAY include a select clause, so you\n   could be returned just load\
    \ information.  For more information on\n   Attribute Requests refer to Service\
    \ Location Protocol [1].\n   An application could issue a Service Request to locate\
    \ a TN3270E\n   server.  Then an application designed to perform least-load location\n\
    \   of a TN3270E service, could issue a series of Attribute Requests to\n   obtain\
    \ the load measurement of each server specified with a URL.  It\n   would specify\
    \ a select clause similar to the one below to receive\n   only load information.\n\
    \   URL = service:tn3270://9.37.51.254:23 Attribute filter = LOAD\n   The attribute\
    \ LOAD would be returned along with its value.  The\n   application could then\
    \ issue other Attribute Request calls for each\n   URL.\n   The application would\
    \ then select the least loaded server as a\n   connection target.  If it tries\
    \ to connect to a server and that\n   connection fails, it could then try to connect\
    \ to the next least-\n   loaded server.\n"
- title: 4. TN3270E Client Configuration
  contents:
  - '4. TN3270E Client Configuration

    '
- title: 4.1 SLP Scope
  contents:
  - "4.1 SLP Scope\n   Scope is a parameter used to control and manage access by clients\
    \ to\n   servers in a network.  It is the same as the Service Location\n   Protocol\
    \ scope defined in RFC 2165 [1].  The control scope provides\n   is necessary\
    \ for two reasons:\n   As your network, the number of clients, and the number\
    \ of servers\n   grow, it becomes necessary to partition access to those servers\
    \ by\n   the growing number of clients in order to reduce overall traffic on\n\
    \   the network.  It allows administrators to organize users and servers\n   into\
    \ administrative groups.\n   The meaning of the values of scope is defined by\
    \ the administrator of\n   the network.  These values can represent any entity.\
    \  Commonly, they\n   fall along either departmental, geographical, or organizational\n\
    \   lines.\n   Each TN3270E server can be assigned to a single scope or multiple\n\
    \   scopes.  TN3270E clients using these servers can be configured for a\n   single\
    \ specific scope.  If TN3270E clients are not configured with a\n   scope they\
    \ MUST use the scope \"default\".\n   SLP Service Agents and Directory Agents\
    \ (DA) need to reside in the\n   network that support the TN3270E server with\
    \ configured scopes.\n   Attribute information for Service Types pertaining to\
    \ a specific\n   scope can be obtained from Directory Agents (DA).  The DA will\
    \ not\n   return a result unless the requested scope matches.\n   For more information\
    \ on SLP scope refer to Service Location Protocol\n   [1].\n"
- title: 4.2 DA Discovery time-out
  contents:
  - "4.2 DA Discovery time-out\n   The DA Discovery time-out value, is used to control\
    \ how long the SLP\n   API must wait to discover Directory Agents (DAs) in the\
    \ network.  The\n   discovery request is a multicast, and the amount of time required\
    \ to\n   gather all DA responses might vary depending on many factors.  If\n \
    \  there are no DAs in the network, this time-out value can be set to\n   zero\
    \ to indicate that no DA discovery is to be done.  The time-out is\n   expressed\
    \ in milliseconds.  Time-out intervals and default values\n   should be handled\
    \ as described in RFC 2165 [1].\n"
- title: 4.3 SA Multicast time-out
  contents:
  - "4.3 SA Multicast time-out\n   The SA Multicast time-out value, is used to control\
    \ how long the SLP\n   API must wait to discover services, attributes, or service\
    \ types in a\n   network without at least one DA that supports the scope of the\n\
    \   request.  In this situation, these requests are multicast and the\n   User\
    \ Agent waits the time-out value to gather the multiple responses\n   that are\
    \ returned.  The time-out is expressed in milliseconds. Time-\n   out intervals\
    \ and default values should be handled as described in\n   RFC 2165 [1].\n"
- title: 5. TN3270E Client Implementation Information
  contents:
  - '5. TN3270E Client Implementation Information

    '
- title: 5.1 Overview
  contents:
  - "5.1 Overview\n   A TN3270E client that implements TN3270E SLP session balancing\
    \ does\n   not need to configure an IP Host Address or TCP Port for the TN3270E\n\
    \   server it desires to connect to.  Instead, the IP Host Address and\n   TCP\
    \ Port of the least loaded TN3270E server is discovered by using\n   the SLP session\
    \ balancing described in this document.\n   The discovery of the least loaded\
    \ TN3270E server is done entirely\n   outside of and before the TN3270E telnet\
    \ negotiation.  Once the IP\n   Host address and TCP Port of the least loaded\
    \ TN3270E server is\n   discovered, the TN3270E client can then start normal TN3270E\
    \ telnet\n   negotiation.\n   The TN3270E client MUST allow for configuration\
    \ of the following\n   parameters.  These SLP specific configuration items are\
    \ covered by\n   configuration parameters in the SLP API [5].\n   Enable SLP Session\
    \ Balancing\n   This configuration parameter indicates whether or not SLP session\n\
    \   balancing is enabled.  If it is enabled the following three\n   configuration\
    \ parameters MUST also be configurable.  If this\n   parameter is disabled, SLP\
    \ session balancing is not supported and\n   normal TN3270E telnet negotiation\
    \ is performed.\n   Scope Name The scope name is a text string that specifies\
    \ a group of\n   TN3270E servers.  The scope name can be used to identify groups\
    \ of\n   TN3270E servers in a departmental or geographic setting.  For\n   example,\
    \ if the scope name is Building-D, then the SLP session\n   balancing would search\
    \ all TN3270E servers in the Building-D scope to\n   find the least loaded TN3270E\
    \ server.\n   If the scope name is blank, then the scope name is not used.  This\
    \ is\n   referred to as unscoped.  It should be noted as in section 4.1 above\n\
    \   that any reference to unscoped services applies to Service Location\n   Protocol\
    \ version 1 only [1].  Service Location Protocol version 2\n   doesn't allow unscoped\
    \ services but does allow the use of default\n   scope [4].  In this case all\
    \ TN3270E servers, with or without scope\n   names, can be used to satisfy the\
    \ request for least loaded TN3270E\n   servers.  In order to cut down on network\
    \ overhead, it is recommended\n   that either all servers be scoped or no servers\
    \ be scoped.  Refer\n   back to section 4.1 for more discussion of scope.\n  \
    \ DA Discovery Time Out Value\n   This value is specified in milliseconds and\
    \ is fully described in\n   section 4.2 of this document.\n   SA Multicast Time\
    \ Out Value\n   This value is specified in milliseconds and is fully described\
    \ in\n   section 4.3 of this document.\n"
- title: 5.2 How to obtain the list of TN3270E servers supporting SLP
  contents:
  - "5.2 How to obtain the list of TN3270E servers supporting SLP\n   A TN3270E client\
    \ that implements SLP session balancing uses API calls\n   to obtain the list\
    \ of TN3270E servers supporting SLP session\n   balancing.\n   The following Service\
    \ Location Version 2 API [5] calls, could be used\n   with TN3270E SLP session\
    \ balancing:\n   SLPOpen - returns an SLPHandle handle to be used\n   SLPFindSrvs\
    \ - issues the query for services\n   SLPFindAttrs - returns service attributes\
    \ matching the attribute ids\n   for the indicated service URL or service type.\n\
    \   SLPClose - frees all resources associated with the handle.\n"
- title: 5.3 TN3270E Sample Client Flow
  contents:
  - '5.3 TN3270E Sample Client Flow

    '
- title: 5.3.1 Open the SLP connection
  contents:
  - "5.3.1 Open the SLP connection\n   The TN3270E client must first open a handle\
    \ with the SLP User Agent.\n   For Service Location Protocol version 2, SLPOpen\
    \ API call [5] The SA\n   multicast time out and DA discovery time out values\
    \ would be passed\n   as parameters to the SLPOpen API call.\n"
- title: 5.3.2 Query the list of TN3270E servers
  contents:
  - "5.3.2 Query the list of TN3270E servers\n   The TN3270E client then queries for\
    \ the list of TN3270E servers\n   supporting SLP.  This is done by using the Service\
    \ Request API call.\n   The request string contains information that determines\
    \ which type of\n   TN3270E servers that this client desires to connect to.  The\
    \ request\n   string can contain the scope name, pool name, session type and 3270\n\
    \   screen size.\n   The SLPv1 query string has the following format:\n   TN3270/<scope\
    \ name>/LUPOOL/ == <pool name><TAB><device type>\n   The <scope name> is the name\
    \ of the scope that is configured for the\n   TN3270E client.  If the scope is\
    \ blank or null (unscoped request),\n   then the scope is not inserted into the\
    \ request string.\n   The <pool name> is a 1 to 8 character upper case string\
    \ that\n   indicates the name of the pool to which the TN3270E client desires\
    \ to\n   connect.  For SLP session balancing, the same pool name must be\n   configured\
    \ on different TN3270E servers.\n   The <TAB> is the '/t' tab character which\
    \ is hexadecimal 0x09.  the\n   <TAB> is a literal and is used as a separator.\n\
    \   The <device type> can be any of the following:\n    3270DSC for TN3270E device\
    \ type IBM-3287-1\n    3270002 for TN3270E device types IBM-3278-2 and IBM-3278-2-E\n\
    \    3270003 for TN3270E device types IBM-3278-3 and IBM-3278-3-E\n    3270004\
    \ for TN3270E device types IBM-3278-4 and IBM-3278-4-E\n    3270005 for TN3270E\
    \ device types IBM-3278-5 and IBM-3278-5-E\n    * for TN3270E device type IBM-DYNAMIC\n\
    \   Example:\n   For a TN3270E client searching for TN3270E servers in the ENGINEERING\n\
    \   scope for a model 2 screen size and LUPOOL name pool2, the following\n   request\
    \ SLPv1 string would be constructed:\n   \"TN3270/ENGINEERING/LUPOOL/ == POOL2<TAB>3270002\"\
    \n   Note: The \" characters before and after the string are not part of\n   the\
    \ request string.\n"
- title: 5.3.3 Forward Looking Example for SLPv2
  contents:
  - "5.3.3 Forward Looking Example for SLPv2\n   For SLPv2 the scope and service type\
    \ are no longer part of the query\n   string.  These are now separate fields in\
    \ the message.  The service\n   type name is required to have the \"service:\"\
    \ prepended.  The service\n   type field would look like \"service:TN3270\", and\
    \ the scope field\n   would be a comma separated list of scopes.  A scope name\
    \ is always\n   required in SLPv2, if no other name is known, the scope name\n\
    \   \"DEFAULT\" is used.  The example below uses the same parameters as\n   used\
    \ in above section 5.3.2.\n   Example:  Service Type: service:TN3270 Scope string:\
    \ ENGINEERING The\n   query string would have the following format:\n        \
    \   (LUPOOL=<POOL2> <32700002>)\n   In SLPv2 queries, all whitespace is compressed\
    \ to a single space\n   character during matching, so the identity of the separator\
    \ character\n   does not matter.  The tab character could be added for readability,\n\
    \   but it will not affect the outcome of the query.\n"
- title: 5.3.4 Determine loading of each TN3270E server
  contents:
  - "5.3.4 Determine loading of each TN3270E server\n   An attribute request for \"\
    service:tn3270e\" specifying the attribute\n   LOAD can be made and you will get\
    \ back all the available loads.  Say\n   these are 35,88,78.  You can then issue\
    \ a service request for all\n   tn3270E servers with \"LOAD<40\" for instance.\
    \  Even if the load\n   changes between the time you get the attribute reply and\
    \ when you\n   issue the request, you will still get the best the network has\
    \ to\n   offer.\n   The TN3270E client then uses the TN3270E server's IP Host\
    \ address to\n   start normal Telnet TN3270E negotiation.\n"
- title: 5.4 Recommendations
  contents:
  - "5.4 Recommendations\n   The TN3270E client SHOULD display the IP hostname and\
    \ TCP Port that\n   is being used for the TN3270E connection.  This gives the\
    \ user\n   knowledge of which TN3270E server the session is connected to.  For\n\
    \   example, the IP host address could be displayed in the window system\n   status\
    \ bar.\n   The TN3270E client SHOULD display the resource name that is returned\n\
    \   by the TN3270E server after connection and TN3270E negotiation is\n   completed.\
    \  This gives the user knowledge of which LU resource name\n   in the LUPOOL the\
    \ session is connected to.  For example, the resource\n   name could be displayed\
    \ in the Windows status bar, or even in the\n   3270 OIA line.\n   In the event\
    \ that after the TN3270E client has determined the least\n   loaded server and\
    \ the connection to that server fails for some\n   reason, the connection should\
    \ be closed and an attempt made to\n   connect to other TN3270E servers in the\
    \ list of least loaded servers.\n   For example, a TN3270E server may reject a\
    \ connection to a specific\n   pool if the pool is full, or if the device type\
    \ does not match what\n   is available in the pool.  If this occurs, then an attempt\
    \ to other\n   least loaded TN3270E servers SHOULD be performed.\n"
- title: 6. Sample Trace Flow of SLP and Session Balancing
  contents:
  - "6. Sample Trace Flow of SLP and Session Balancing\n   This sample trace flow\
    \ is provided for informational purposes only.\n   SLP API: Service Request: TN3270//LUPOOL\
    \ == POOL2 3270002/\n   SLP API: Service Reply: service:tn3270://206.109.45.139:23\n\
    \   SLP API: Service Reply: service:tn3270://206.109.45.140:23\n   Connecting\
    \ to 206.109.45.139:23...\n   TerminalType=NVT\n   Connection established\n  \
    \ Recv <- DO TN3270E\n   Send -> WILL TN3270E\n   TerminalType=TN3270E\n   Recv\
    \ <- SEND DEVICE_TYPE\n   Send -> DEVICE_TYPE REQUEST IBM-3278-2-E CONNECT POOL2\n\
    \   Recv <- DEVICE_TYPE IS IBM-3278-2-E CONNECT TN8003\n   Send -> FUNCTIONS REQUEST\
    \ BIND_IMAGE SYSREQ\n   Recv <- FUNCTIONS IS BIND_IMAGE SYSREQ\n"
- title: 7. Service Templates and Service Registration
  contents:
  - "7. Service Templates and Service Registration\n   The Service Location Protocol\
    \ uses the \"service:\" URL scheme name to\n   define URLs called \"service: URLs\"\
    .  These schemes provide a way for\n   clients to obtain configuration information\
    \ that is needed to\n   establish a 3270 session through the TN3270E server. \
    \ The Service\n   Location Protocol provides for service: URLs to be registered\
    \ and\n   discovered.\n   Service Registration These service registrations contain\
    \ a service:\n   URL, and possible attributes associated with that service.  The\n\
    \   service registration information are shown below for the server.\n   Service\
    \ Templates Service templates are documents defining in a\n   formal way the attributes\
    \ associated with that service that a client\n   may want to use.  For more information\
    \ on service templates please\n   refer to, Service Templates and service:  Schemes.\
    \ [2].  The server\n   service template and TN3270 service templates are shown\
    \ below.\n"
- title: 7.1 The TN3270E Service Type Template
  contents:
  - "7.1 The TN3270E Service Type Template\n   The 'service:tn3270:' template defined\
    \ below conforms to the grammar\n   described in \"Service Templates and service:\
    \ Schemes\".  Please refer\n   to [2] for detailed explanation of the syntax.\n\
    \   Name of submitters: Jim Naugle <jnaugle@us.ibm.com>\n                    \
    \   Gregg Ledford <gledford@zephyrcorp.com>\n                       K. Kasthurirangan\
    \ <kasthuri@us.ibm.com>\n   Language of service template: en\n   Security Considerations:\n\
    \   Service Location Protocol can help clients discover security services\n  \
    \ supported by the TN3270E server.  If security services are important\n   or\
    \ required, using SLP authentication, and protected scopes in\n   Service Location\
    \ Protocol version 1 is recommended [1]. Well known\n   ciphersuite names are\
    \ used in the template [3].\n   Template text:\n   ----------------------template\
    \ begins here -------------------------\n   template-type=tn3270e\n   template-version=1.0\n\
    \   template-description=\n    The tn3270 service provides 3270 gateway access\
    \ to an SNA network\n    via the TN3270 protocol.  The attributes reflect the\
    \ types of 3270\n    devices, LU Pools, and load information available on the\
    \ server.\n   template-url-syntax=\n   # service:tn3270://<hostname>:<port>\n\
    \   # <hostname>\n   # <port>\n   load=integer\n   # This is the load balancing\
    \ quantity to use in determining the\n   # least loaded TN3270E server to attach\
    \ to for the service.  The\n   #range of valid values is an integral 0 to 100\
    \ with 0 indicating the\n   #lowest possible load and 100 the highest\n   LUPool=string\
    \ X M L\n   # This attribute takes on one or more values as defined below.\n \
    \  # The <TAB> char.  0x09 is literal and will be used as a separator.\n   #\n\
    \   #\n   #   <pool name> = <name> / <name> \"<TAB>\" <dev type>\n   #   <name>\
    \      = 1*ALPHANUM\n   #                 \"3270DSC\"\n   #\n   #\n   #\n   #\n\
    \   # Identifies the LU pool names of LU pools available for use on this\n   #\
    \ service with the associated device types supported in each pool.\n   # Each\
    \ value is a record where the first token is the pool name of\n   # the pool and\
    \ the second token is a device type supported in that\n   # pool.  A pool name\
    \ without a device type indicates that LUs of\n   # unknown type are included\
    \ in the pool.  Records associated with a\n   # given pool name are repeated for\
    \ each supported device type.  A\n   # given pool is included in a registration\
    \ request if any PU profile\n   # that contributes at least one LU to the pool\
    \ is active on the\n   # server.  The range of valid dev_types are:\n   #\n  \
    \ # dev_type    Meaning\n   #\n   # 3270002     Lu Type 2 Model 2\n   #\n   #\
    \ 3270003     Lu Type 2 Model 3\n   #\n   # 3270004     Lu Type 2 Model 4\n  \
    \ #\n   # 3270005     Lu Type 2 Model 5\n   #\n   # 3270DSC     Printer LU\n \
    \  #\n   BIND=keyword\n   # The server supports the SNA bind image TN3270E function.\n\
    \   DATA=keyword\n   # The non-SNA 3270 data stream is supported by server.\n\
    \   RESPONSES=keyword\n   # The server supports SNA response mode.\n   SCS=keyword\n\
    \   # The server supports SNA 3270 SCS data stream.\n   SYSREQ=keyword\n   # The\
    \ SYSREQ keyboard key is supported on server.\n   RFC1576=keyword\n   # RFC1576\
    \ options supported.\n   RFC1646=keyword\n   # RFC1646 options supported.\n  \
    \ RFC2355=keyword\n   # RFC2355 options supported.\n   security=string M\n   #\
    \ This is the security technique supported on the server.\n   # The defined values\
    \ are:\n   NONE\n   SSLV3\n   Ciphersuites=string M\n   # Cipher specifications\
    \ supported by this server.\n   # Additional values will be defined in future\
    \ templates.\n   NULL_NULL,\n   NULL_MD5,\n   NULL_SHA,\n   RC4_MD5_EXPORT,\n\
    \   RC4_MD5_US,\n   RC4_SHA_US,\n   RC2_MD5_EXPORT,\n   DES_SHA_EXPORT,\n   TRIPLE_DES_SHA_US\n\
    \   platform=string X\n   # This is the network operating system platform underlying\
    \ the\n   # advertising service.  The defined values are:\n   #\n   # IW     \
    \     Server uses IntranetWare or NetWare operating system\n   #\n   # NT    \
    \      Server uses the Microsoft NT operating system\n   #\n   # OS2         Server\
    \ uses the OS2 operating system\n   #\n   # AIX         Server uses the AIX operating\
    \ system\n   #\n   IW,NT,OS2,AIX\n   protocol=string X\n   #   This is the protocol(s)\
    \ supported by the server providing this\n   #   service.  The defined values\
    \ are:\n   #\n   # IP          Server supports client connections over IP (TCP/IP\
    \ or\n   #             UDP/IP)\n   #\n   # IPX         Server supports client\
    \ connections over IPX (SPX/IPX)\n   #\n   IP,IPX\n   server name=string\n   #\
    \ This is the name of the server that was configured during\n   # installation.\n\
    \   release=string X\n   # This is the version and release level of the server\
    \ advertising\n   # services.  Its format is vv.rr.mm where \"vv\" is the major\
    \ version\n   # number, \"rr\" is the minor version number, and \"mm\" is the\n\
    \   # modification level.  All numbers are padded on the left with zeroes\n  \
    \ # to two characters.\n   # Example: version 3, release 0, mod level 0 is \"\
    03.00.00\"\n   ------------------template ends here -------------------------------\n"
- title: 7.2 Server Service Type Template
  contents:
  - "7.2 Server Service Type Template\n   The 'service:commserver:' template defined\
    \ below conforms to the\n   grammar described in \"Service Templates and service:\
    \ Schemes\".\n   Please refer to [2] for detailed explanation of the syntax.\n\
    \   Name of submitters: Jim Naugle <jnaugle@us.ibm.com>\n                    \
    \   Gregg Ledford <gledford@zephyrcorp.com>\n                       K. Kasthurirangan\
    \ <kasthuri@us.ibm.com>\n   Language of service template: en\n   Security Considerations:\n\
    \   Service Location Protocol can help clients discover security\n   services\
    \ supported by the TN3270E server.  If security services are\n   important or\
    \ required, using SLP authentication, and protected\n   scopes [1] is recommended.\n\
    \   Template text:\n   -------------------template begins below this line------------------\n\
    \   template-type=commserver\n   template-version=1.0\n   template-description=\n\
    \    The server service type is registered whenever the communications\n    software\
    \ is loaded on the server.  It describes generic attributes of\n    the server.\
    \  These attributes are also repeated on the other service\n    types provided.\n\
    \   template-url-syntax=\n    # service:commserver://<hostname>:<port>\n    #\
    \ <hostname>\n    # <port>\n   platform=string X\n    # This is the network operating\
    \ system platform underlying the\n    # advertising service.  The defined values\
    \ are:\n    #\n    # IW          Server uses Novell IntranetWare or NetWare operating\n\
    \    #             system\n    # NT          Server uses the Microsoft NT operating\
    \ system\n    #\n    # OS2         Server uses the OS2 operating system\n    #\n\
    \    # AIX         Server uses the AIX operating system\n    #\n    IW,NT,OS2,AIX\n\
    \   protocol=string X\n    #   This is the protocol(s) supported by the server\
    \ providing this\n    #   service.  The defined values are:\n    #\n    # IP \
    \         Server supports client connections over IP (TCP/IP or\n    #       \
    \      UDP/IP)\n    #\n    # IPX         Server supports client connections over\
    \ IPX (SPX/IPX)\n    #\n    IP,IPX\n   server name=string\n    # This is the name\
    \ of the server that was configured during\n    # installation.\n   release=string\
    \ X\n    # This is the version and release level of the commserver\n    # advertising\
    \ services.  Its format is vv.rr.mm where \"vv\" is the\n    # major version number,\
    \ \"rr\" is the minor version number, and \"mm\"\n    # is the modification level.\
    \  All numbers are padded on the left with\n    # zeroes to two characters.\n\
    \    #\n    # Example: version 3, release 0, mod level 0 is \"03.00.00\"\n   ---------------------template\
    \ ends above this line---------------------\n"
- title: 7.3 Template Contact Information
  contents:
  - "7.3 Template Contact Information\n   Jim Naugle <jnaugle@us.ibm.com>\n   Kasthuri\
    \ Kasthurirangan <kasthuri@us.ibm.com>\n   Gregg Ledford <gledford@zephyrcorp.com>\n"
- title: 7.4 Security Considerations
  contents:
  - "7.4 Security Considerations\n   Service type templates provide information that\
    \ is used to interpret\n   information obtained by the Service Location Protocol.\
    \  If these\n   templates are modified or if false templates are distributed,\n\
    \   services may not correctly register themselves, or clients might not\n   be\
    \ able to interpret service information.\n   The service: URLs themselves specify\
    \ the service access point and\n   protocol for a particular service type.  These\
    \ service: URLs could be\n   distributed and indicate the location of a service\
    \ other than that\n   normally wanted to used.  SLP [1] provides an authentication\n\
    \   mechanism that allows service: URLs of registered services to be\n   signed\
    \ and for the signatures to be verified by clients.\n   Service Location Protocol\
    \ can help clients discover security services\n   supported by the TN3270E server.\
    \  If security services are important\n   or required, using SLP authentication,\
    \ and protected scopes [1] is\n   recommended.\n"
- title: 7.5 Sample TN3270 Service Registration Message
  contents:
  - "7.5 Sample TN3270 Service Registration Message\n   URL: service:tn3270://<addr-spec>:<port-number>\
    \ Attributes:\n   [(SCOPE=<string>),]\n   (RELEASE=03.00.00),\n   (PLATFORM=IW),\n\
    \   (PROTOCOL=IP),\n   (SERVERNAME=<string>),\n   (LOAD=<integer 0 to 100>),\n\
    \   [(LUPOOL=pool-name0/tANY,\n   pool-name1/tdevice_type1,\n   pool-name2/tdevice-type2,\
    \ ...\n   pool-namen/tdevice-typen)]\n   BIND,\n   DATA,\n   RESPONSES,\n   SCS,\n\
    \   SYSREQ,\n   (SECURITY=NONE),\n   RFC1576,\n   RFC1646,\n   RFC2355\n"
- title: 7.6 Sample Server Service Registration Message
  contents:
  - "7.6 Sample Server Service Registration Message\n   URL:service:commserver://<addr-spec>:<port-number>\n\
    \   Attributes:  [(SCOPE=<string>),]\n   (RELEASE=03.00.00),\n   (PLATFORM=IW),\n\
    \   (PROTOCOL=IP),\n   (SERVERNAME=<string>)\n"
- title: 8. References
  contents:
  - "8. References\n   [1]  Veizades, J., Guttman, E., Perkins, C., and S. Kaplan,\
    \ \"Service\n        Location Protocol\", RFC 2165, July 1997.\n   [2]  Guttman,\
    \ E., Perkins, C. and J. Kempf, \"Service Templates and\n        service: Schemes\"\
    , RFC 2609, June 1999.\n   [3]  Dierks, T. and C. Allen, \"The TLS Protocol Version\
    \ 1.0\", RFC\n        2246, January 1999.\n   [4]  Guttman, E., Perkins, C., Veizades,\
    \ J. and M. Day, \"Service\n        Location Protocol Version 2\", RFC 2608, June\
    \ 1999.\n   [5]  Kempf, J. and E. Guttman, \"An API for Service Location\", RFC\n\
    \        2614, June 1999.\n   [6]  Bradner, S., \"Key Words for Use in RFCs to\
    \ Indicate Requirement\n        Levels\", BCP 14, RFC 2119, March 1997.\n"
- title: 9. Authors' Addresses
  contents:
  - "9. Authors' Addresses\n   Jim Naugle\n   IBM\n   P.O. Box 12195\n   Research\
    \ Triangle Park, N.C. 27709-2195\n   USA\n   Phone:  (919) 254-8789\n   EMail:\
    \  jnaugle@us.ibm.com\n   Kasthuri Kasthurirangan\n   IBM\n   P.O. Box 12195\n\
    \   Research Triangle Park, N.C. 27709-2195\n   USA\n   Phone: (919) 254-5721\n\
    \   EMail: kasthuri@us.ibm.com\n   Gregg Ledford\n   Zephyr Development Corporation\n\
    \   8 Greenway Plaza Suite 1400\n   Houston, Texas 77046\n   USA\n   Phone: (713)\
    \ 623-0089\n   EMail:  gledford@zephyrcorp.com\n"
- title: 10.  Full Copyright Statement
  contents:
  - "10.  Full Copyright Statement\n   Copyright (C) The Internet Society (2001).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
