- title: __initial_text__
  contents:
  - "             Lightweight Directory Access Protocol (LDAP):\n                String\
    \ Representation of Search Filters\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   Lightweight Directory Access Protocol (LDAP) search filters are\n\
    \   transmitted in the LDAP protocol using a binary representation that\n   is\
    \ appropriate for use on the network.  This document defines a\n   human-readable\
    \ string representation of LDAP search filters that is\n   appropriate for use\
    \ in LDAP URLs (RFC 4516) and in other\n   applications.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. LDAP Search Filter Definition ...................................2\n  \
    \ 3. String Search Filter Definition .................................3\n   4.\
    \ Examples ........................................................5\n   5. Security\
    \ Considerations .........................................7\n   6. Normative References\
    \ ............................................7\n   7. Informative References\
    \ ..........................................8\n   8. Acknowledgements ................................................8\n\
    \   Appendix A: Changes Since RFC 2254 .................................9\n  \
    \    A.1. Technical Changes ..........................................9\n    \
    \  A.2. Editorial Changes ..........................................9\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Lightweight Directory Access Protocol (LDAP) [RFC4510]\
    \ defines a\n   network representation of a search filter transmitted to an LDAP\n\
    \   server.  Some applications may find it useful to have a common way of\n  \
    \ representing these search filters in a human-readable form; LDAP URLs\n   [RFC4516]\
    \ are an example of one such application.  This document\n   defines a human-readable\
    \ string format for representing the full\n   range of possible LDAP version 3\
    \ search filters, including extended\n   match filters.\n   This document is a\
    \ integral part of the LDAP technical specification\n   [RFC4510], which obsoletes\
    \ the previously defined LDAP technical\n   specification, RFC 3377, in its entirety.\n\
    \   This document replaces RFC 2254.  Changes to RFC 2254 are summarized\n   in\
    \ Appendix A.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in BCP\
    \ 14 [RFC2119].\n"
- title: 2.  LDAP Search Filter Definition
  contents:
  - "2.  LDAP Search Filter Definition\n   An LDAP search filter is defined in Section\
    \ 4.5.1 of [RFC4511] as\n   follows:\n        Filter ::= CHOICE {\n          \
    \  and                [0] SET SIZE (1..MAX) OF filter Filter,\n            or\
    \                 [1] SET SIZE (1..MAX) OF filter Filter,\n            not   \
    \             [2] Filter,\n            equalityMatch      [3] AttributeValueAssertion,\n\
    \            substrings         [4] SubstringFilter,\n            greaterOrEqual\
    \     [5] AttributeValueAssertion,\n            lessOrEqual        [6] AttributeValueAssertion,\n\
    \            present            [7] AttributeDescription,\n            approxMatch\
    \        [8] AttributeValueAssertion,\n            extensibleMatch    [9] MatchingRuleAssertion\
    \ }\n        SubstringFilter ::= SEQUENCE {\n            type    AttributeDescription,\n\
    \            -- initial and final can occur at most once\n            substrings\
    \    SEQUENCE SIZE (1..MAX) OF substring CHOICE {\n             initial      \
    \  [0] AssertionValue,\n             any            [1] AssertionValue,\n    \
    \         final          [2] AssertionValue } }\n        AttributeValueAssertion\
    \ ::= SEQUENCE {\n            attributeDesc   AttributeDescription,\n        \
    \    assertionValue  AssertionValue }\n        MatchingRuleAssertion ::= SEQUENCE\
    \ {\n            matchingRule    [1] MatchingRuleId OPTIONAL,\n            type\
    \            [2] AttributeDescription OPTIONAL,\n            matchValue      [3]\
    \ AssertionValue,\n            dnAttributes    [4] BOOLEAN DEFAULT FALSE }\n \
    \       AttributeDescription ::= LDAPString\n                        -- Constrained\
    \ to <attributedescription>\n                        -- [RFC4512]\n        AttributeValue\
    \ ::= OCTET STRING\n        MatchingRuleId ::= LDAPString\n        AssertionValue\
    \ ::= OCTET STRING\n        LDAPString ::= OCTET STRING -- UTF-8 encoded,\n  \
    \                                  -- [Unicode] characters\n   The AttributeDescription,\
    \ as defined in [RFC4511], is a string\n   representation of the attribute description\
    \ that is discussed in\n   [RFC4512].  The AttributeValue and AssertionValue OCTET\
    \ STRING have\n   the form defined in [RFC4517].  The Filter is encoded for\n\
    \   transmission over a network using the Basic Encoding Rules (BER)\n   defined\
    \ in [X.690], with simplifications described in [RFC4511].\n"
- title: 3.  String Search Filter Definition
  contents:
  - "3.  String Search Filter Definition\n   The string representation of an LDAP\
    \ search filter is a string of\n   UTF-8 [RFC3629] encoded Unicode characters\
    \ [Unicode] that is defined\n   by the following grammar, following the ABNF notation\
    \ defined in\n   [RFC4234].  The productions used that are not defined here are\n\
    \   defined in Section 1.4 (Common ABNF Productions) of [RFC4512] unless\n   otherwise\
    \ noted.  The filter format uses a prefix notation.\n      filter         = LPAREN\
    \ filtercomp RPAREN\n      filtercomp     = and / or / not / item\n      and \
    \           = AMPERSAND filterlist\n      or             = VERTBAR filterlist\n\
    \      not            = EXCLAMATION filter\n      filterlist     = 1*filter\n\
    \      item           = simple / present / substring / extensible\n      simple\
    \         = attr filtertype assertionvalue\n      filtertype     = equal / approx\
    \ / greaterorequal / lessorequal\n      equal          = EQUALS\n      approx\
    \         = TILDE EQUALS\n      greaterorequal = RANGLE EQUALS\n      lessorequal\
    \    = LANGLE EQUALS\n      extensible     = ( attr [dnattrs]\n              \
    \             [matchingrule] COLON EQUALS assertionvalue )\n                 \
    \      / ( [dnattrs]\n                            matchingrule COLON EQUALS assertionvalue\
    \ )\n      present        = attr EQUALS ASTERISK\n      substring      = attr\
    \ EQUALS [initial] any [final]\n      initial        = assertionvalue\n      any\
    \            = ASTERISK *(assertionvalue ASTERISK)\n      final          = assertionvalue\n\
    \      attr           = attributedescription\n                         ; The attributedescription\
    \ rule is defined in\n                         ; Section 2.5 of [RFC4512].\n \
    \     dnattrs        = COLON \"dn\"\n      matchingrule   = COLON oid\n      assertionvalue\
    \ = valueencoding\n      ; The <valueencoding> rule is used to encode an <AssertionValue>\n\
    \      ; from Section 4.1.6 of [RFC4511].\n      valueencoding  = 0*(normal /\
    \ escaped)\n      normal         = UTF1SUBSET / UTFMB\n      escaped        =\
    \ ESC HEX HEX\n      UTF1SUBSET     = %x01-27 / %x2B-5B / %x5D-7F\n          \
    \                ; UTF1SUBSET excludes 0x00 (NUL), LPAREN,\n                 \
    \         ; RPAREN, ASTERISK, and ESC.\n      EXCLAMATION    = %x21 ; exclamation\
    \ mark (\"!\")\n      AMPERSAND      = %x26 ; ampersand (or AND symbol) (\"&\"\
    )\n      ASTERISK       = %x2A ; asterisk (\"*\")\n      COLON          = %x3A\
    \ ; colon (\":\")\n      VERTBAR        = %x7C ; vertical bar (or pipe) (\"|\"\
    )\n      TILDE          = %x7E ; tilde (\"~\")\n   Note that although both the\
    \ <substring> and <present> productions in\n   the grammar above can produce the\
    \ \"attr=*\" construct, this construct\n   is used only to denote a presence filter.\n\
    \   The <valueencoding> rule ensures that the entire filter string is a\n   valid\
    \ UTF-8 string and provides that the octets that represent the\n   ASCII characters\
    \ \"*\" (ASCII 0x2a), \"(\" (ASCII 0x28), \")\" (ASCII\n   0x29), \"\\\" (ASCII\
    \ 0x5c), and NUL (ASCII 0x00) are represented as a\n   backslash \"\\\" (ASCII\
    \ 0x5c) followed by the two hexadecimal digits\n   representing the value of the\
    \ encoded octet.\n   This simple escaping mechanism eliminates filter-parsing\
    \ ambiguities\n   and allows any filter that can be represented in LDAP to be\n\
    \   represented as a NUL-terminated string.  Other octets that are part\n   of\
    \ the <normal> set may be escaped using this mechanism, for example,\n   non-printing\
    \ ASCII characters.\n   For AssertionValues that contain UTF-8 character data,\
    \ each octet of\n   the character to be escaped is replaced by a backslash and\
    \ two hex\n   digits, which form a single octet in the code of the character.\
    \  For\n   example, the filter checking whether the \"cn\" attribute contained\
    \ a\n   value with the character \"*\" anywhere in it would be represented as\n\
    \   \"(cn=*\\2a*)\".\n   As indicated by the <valueencoding> rule, implementations\
    \ MUST escape\n   all octets greater than 0x7F that are not part of a valid UTF-8\n\
    \   encoding sequence when they generate a string representation of a\n   search\
    \ filter.  Implementations SHOULD accept as input strings that\n   are not valid\
    \ UTF-8 strings.  This is necessary because RFC 2254 did\n   not clearly define\
    \ the term \"string representation\" (and in\n   particular did not mention that\
    \ the string representation of an LDAP\n   search filter is a string of UTF-8-encoded\
    \ Unicode characters).\n"
- title: 4.  Examples
  contents:
  - "4.  Examples\n   This section gives a few examples of search filters written\
    \ using\n   this notation.\n        (cn=Babs Jensen)\n        (!(cn=Tim Howes))\n\
    \        (&(objectClass=Person)(|(sn=Jensen)(cn=Babs J*)))\n        (o=univ*of*mich*)\n\
    \        (seeAlso=)\n   The following examples illustrate the use of extensible\
    \ matching.\n        (cn:caseExactMatch:=Fred Flintstone)\n        (cn:=Betty\
    \ Rubble)\n        (sn:dn:2.4.6.8.10:=Barney Rubble)\n        (o:dn:=Ace Industry)\n\
    \        (:1.2.3:=Wilma Flintstone)\n        (:DN:2.4.6.8.10:=Dino)\n   The first\
    \ example shows use of the matching rule \"caseExactMatch.\"\n   The second example\
    \ demonstrates use of a MatchingRuleAssertion form\n   without a matchingRule.\n\
    \   The third example illustrates the use of the \":oid\" notation to\n   indicate\
    \ that the matching rule identified by the OID \"2.4.6.8.10\"\n   should be used\
    \ when making comparisons, and that the attributes of an\n   entry's distinguished\
    \ name should be considered part of the entry\n   when evaluating the match (indicated\
    \ by the use of \":dn\").\n   The fourth example denotes an equality match, except\
    \ that DN\n   components should be considered part of the entry when doing the\n\
    \   match.\n   The fifth example is a filter that should be applied to any attribute\n\
    \   supporting the matching rule given (since the <attr> has been\n   omitted).\n\
    \   The sixth and final example is also a filter that should be applied\n   to\
    \ any attribute supporting the matching rule given.  Attributes\n   supporting\
    \ the matching rule contained in the DN should also be\n   considered.\n   The\
    \ following examples illustrate the use of the escaping mechanism.\n        (o=Parens\
    \ R Us \\28for all your parenthetical needs\\29)\n        (cn=*\\2A*)\n      \
    \  (filename=C:\\5cMyFile)\n        (bin=\\00\\00\\00\\04)\n        (sn=Lu\\c4\\\
    8di\\c4\\87)\n        (1.3.6.1.4.1.1466.0=\\04\\02\\48\\69)\n   The first example\
    \ shows the use of the escaping mechanism to\n   represent parenthesis characters.\
    \  The second shows how to represent\n   a \"*\" in an assertion value, preventing\
    \ it from being interpreted as\n   a substring indicator.  The third illustrates\
    \ the escaping of the\n   backslash character.\n   The fourth example shows a\
    \ filter searching for the four-octet value\n   00 00 00 04 (hex), illustrating\
    \ the use of the escaping mechanism to\n   represent arbitrary data, including\
    \ NUL characters.\n   The fifth example illustrates the use of the escaping mechanism\
    \ to\n   represent various non-ASCII UTF-8 characters.  Specifically, there\n\
    \   are 5 characters in the <assertionvalue> portion of this example:\n   LATIN\
    \ CAPITAL LETTER L (U+004C), LATIN SMALL LETTER U (U+0075), LATIN\n   SMALL LETTER\
    \ C WITH CARON (U+010D), LATIN SMALL LETTER I (U+0069),\n   and LATIN SMALL LETTER\
    \ C WITH ACUTE (U+0107).\n   The sixth and final example demonstrates assertion\
    \ of a BER-encoded\n   value.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   This memo describes a string representation of\
    \ LDAP search filters.\n   While the representation itself has no known security\
    \ implications,\n   LDAP search filters do.  They are interpreted by LDAP servers\
    \ to\n   select entries from which data is retrieved.  LDAP servers should\n \
    \  take care to protect the data they maintain from unauthorized access.\n   Please\
    \ refer to the Security Considerations sections of [RFC4511] and\n   [RFC4513]\
    \ for more information.\n"
- title: 6.  Normative References
  contents:
  - "6.  Normative References\n   [RFC2119]   Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n               Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC3629]   Yergeau, F., \"UTF-8, a transformation format of ISO\n\
    \               10646\", STD 63, RFC 3629, November 2003.\n   [RFC4234]   Crocker,\
    \ D. and P. Overell, \"Augmented BNF for Syntax\n               Specifications:\
    \ ABNF\", RFC 4234, October 2005.\n   [RFC4510]   Zeilenga, K., Ed., \"Lightweight\
    \ Directory Access Protocol\n               (LDAP): Technical Specification Road\
    \ Map\", RFC 4510, June\n               2006.\n   [RFC4511]   Sermersheim, J.,\
    \ Ed., \"Lightweight Directory Access\n               Protocol (LDAP): The Protocol\"\
    , RFC 4511, June 2006.\n   [RFC4512]   Zeilenga, K., \"Lightweight Directory Access\
    \ Protocol\n               (LDAP): Directory Information Models\", RFC 4512, June\n\
    \               2006.\n   [RFC4513]   Harrison, R., Ed., \"Lightweight Directory\
    \ Access Protocol\n               (LDAP): Authentication Methods and Security\
    \ Mechanisms\",\n               RFC 4513, June 2006.\n   [RFC4517]   Legg, S.,\
    \ Ed., \"Lightweight Directory Access Protocol\n               (LDAP): Syntaxes\
    \ and Matching Rules\", RFC 4517, June\n               2006.\n   [Unicode]   The\
    \ Unicode Consortium, \"The Unicode Standard, Version\n               3.2.0\"\
    \ is defined by \"The Unicode Standard, Version 3.0\"\n               (Reading,\
    \ MA, Addison-Wesley, 2000. ISBN 0-201-61633-5),\n               as amended by\
    \ the \"Unicode Standard Annex #27: Unicode\n               3.1\" (http://www.unicode.org/reports/tr27/)\
    \ and by the\n               \"Unicode Standard Annex #28: Unicode 3.2.\"\n"
- title: 7.  Informative References
  contents:
  - "7.  Informative References\n   [RFC4516]   Smith, M., Ed. and T. Howes, \"Lightweight\
    \ Directory\n               Access Protocol (LDAP): Uniform Resource Locator\"\
    , RFC\n               4516, June 2006.\n   [X.690]     Specification of ASN.1\
    \ encoding rules: Basic, Canonical,\n               and Distinguished Encoding\
    \ Rules, ITU-T Recommendation\n               X.690, 1994.\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   This document replaces RFC 2254 by Tim Howes.  RFC 2254\
    \ was a product\n   of the IETF ASID Working Group.\n   Changes included in this\
    \ revised specification are based upon\n   discussions among the authors, discussions\
    \ within the LDAP (v3)\n   Revision Working Group (ldapbis), and discussions within\
    \ other IETF\n   Working Groups.  The contributions of individuals in these working\n\
    \   groups is gratefully acknowledged.\n"
- title: 'Appendix A: Changes Since RFC 2254'
  contents:
  - 'Appendix A: Changes Since RFC 2254

    '
- title: A.1.  Technical Changes
  contents:
  - "A.1.  Technical Changes\n   Replaced [ISO 10646] reference with [Unicode].\n\
    \   The following technical changes were made to the contents of the\n   \"String\
    \ Search Filter Definition\" section:\n   Added statement that the string representation\
    \ is a string of UTF-8-\n   encoded Unicode characters.\n   Revised all of the\
    \ ABNF to use common productions from [RFC4512].\n   Replaced the \"value\" rule\
    \ with a new \"assertionvalue\" rule within the\n   \"simple\", \"extensible\"\
    , and \"substring\" (\"initial\", \"any\", and\n   \"final\") rules.  This matches\
    \ a change made in [RFC4517].\n   Added \"(\" and \")\" around the components\
    \ of the <extensible>\n   subproductions for clarity.\n   Revised the \"attr\"\
    , \"matchingrule\", and \"assertionvalue\" ABNF to more\n   precisely reference\
    \ productions from the [RFC4512] and [RFC4511]\n   documents.\n   \"String Search\
    \ Filter Definition\" section: replaced \"greater\" and\n   \"less\" with \"greaterorequal\"\
    \ and \"lessorequal\" to avoid confusion.\n   Introduced the \"valueencoding\"\
    \ and associated \"normal\" and \"escaped\"\n   rules to reduce the dependence\
    \ on descriptive text.  The \"normal\"\n   production restricts filter strings\
    \ to valid UTF-8 sequences.\n   Added a statement about expected behavior in light\
    \ of RFC 2254's lack\n   of a clear definition of \"string representation.\"\n"
- title: A.2.  Editorial Changes
  contents:
  - "A.2.  Editorial Changes\n   Changed document title to include \"LDAP:\" prefix.\n\
    \   IESG Note: removed note about lack of satisfactory mandatory\n   authentication\
    \ mechanisms.\n   Header and \"Authors' Addresses\" sections: added Mark Smith\
    \ as the\n   document editor and updated affiliation and contact information.\n\
    \   \"Table of Contents\" and \"Intellectual Property\" sections: added.\n   Copyright:\
    \ updated per latest IETF guidelines.\n   \"Abstract\" section: separated from\
    \ introductory material.\n   \"Introduction\" section: new section; separated\
    \ from the Abstract.\n   Updated second paragraph to indicate that RFC 2254 is\
    \ replaced by\n   this document (instead of RFC 1960).  Added reference to the\n\
    \   [RFC4510] document.\n   \"LDAP Search Filter Definition\" section: made corrections\
    \ to the LDAP\n   search filter ABNF so it matches that used in [RFC4511].\n \
    \  Clarified the definition of 'value' (now 'assertionvalue') to take\n   into\
    \ account the fact that it is not precisely an AttributeAssertion\n   from [RFC4511]\
    \ Section 4.1.6 (special handling is required for some\n   characters).  Added\
    \ a note that each octet of a character to be\n   escaped is replaced by a backslash\
    \ and two hex digits, which\n   represent a single octet.\n   \"Examples\" section:\
    \ added four additional examples: (seeAlso=),\n   (cn:=Betty Rubble), (:1.2.3:=Wilma\
    \ Flintstone), and\n   (1.3.6.1.4.1.1466.0=\\04\\02\\48\\69).  Replaced one occurrence\
    \ of \"a\n   value\" with \"an assertion value\".  Corrected the description of\
    \ this\n   example: (sn:dn:2.4.6.8.10:=Barney Rubble).  Replaced the numeric OID\n\
    \   in the first extensible match example with \"caseExactMatch\" to\n   demonstrate\
    \ use of the descriptive form.  Used \"DN\" (uppercase) in\n   the last extensible\
    \ match example to remind the reader to treat the\n   <dnattrs> production as\
    \ case insensitive.  Reworded the description\n   of the fourth escaping mechanism\
    \ example to avoid making assumptions\n   about byte order.  Added text to the\
    \ fifth escaping mechanism example\n   to spell out what the non-ASCII characters\
    \ are in Unicode terms.\n   \"Security Considerations\" section: added references\
    \ to [RFC4511] and\n   [RFC4513].\n   \"Normative References\" section: renamed\
    \ from \"References\" per new RFC\n   guidelines.  Changed from [1] style to [RFC4511]\
    \ style throughout the\n   document.  Added entries for [Unicode], [RFC2119],\
    \ [RFC4513],\n   [RFC4512], and [RFC4510] and updated the UTF-8 reference.  Replaced\n\
    \   RFC 822 reference with a reference to RFC 4234.\n   \"Informative References\"\
    \ section: (new section) moved [X.690] to this\n   section.  Added a reference\
    \ to [RFC4516].\n   \"Acknowledgements\" section: added.\n   \"Appendix A: Changes\
    \ Since RFC 2254\" section: added.\n   Surrounded the names of all ABNF productions\
    \ with \"<\" and \">\" where\n   they are used in descriptive text.\n   Replaced\
    \ all occurrences of \"LDAPv3\" with \"LDAP.\"\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Mark Smith, Editor\n   Pearl Crescent, LLC\n   447 Marlpool\
    \ Dr.\n   Saline, MI 48176\n   USA\n   Phone: +1 734 944-2856\n   EMail: mcs@pearlcrescent.com\n\
    \   Tim Howes\n   Opsware, Inc.\n   599 N. Mathilda Ave.\n   Sunnyvale, CA 94085\n\
    \   USA\n   Phone: +1 408 744-7509\n   EMail: howes@opsware.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
