- title: __initial_text__
  contents:
  - '                         IPv6 Node Requirements

    '
- title: Abstract
  contents:
  - "Abstract\n   This document defines requirements for IPv6 nodes.  It is expected\n\
    \   that IPv6 will be deployed in a wide range of devices and situations.\n  \
    \ Specifying the requirements for IPv6 nodes allows IPv6 to function\n   well\
    \ and interoperate in a large number of situations and\n   deployments.\n   This\
    \ document obsoletes RFC 6434, and in turn RFC 4294.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo documents an Internet Best Current Practice.\n\
    \   This document is a product of the Internet Engineering Task Force\n   (IETF).\
    \  It represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   BCPs is available in Section\
    \ 2 of RFC 7841.\n   Information about the current status of this document, any\
    \ errata,\n   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8504.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   4\n     1.1.  Scope of This Document  . . . . . . . . . . . . .\
    \ . . . .   4\n     1.2.  Description of IPv6 Nodes . . . . . . . . . . . . .\
    \ . . .   5\n   2.  Requirements Language . . . . . . . . . . . . . . . . . .\
    \ . .   5\n   3.  Abbreviations Used in This Document . . . . . . . . . . . .\
    \ .   5\n   4.  Sub-IP Layer  . . . . . . . . . . . . . . . . . . . . . . . .\
    \   5\n   5.  IP Layer  . . . . . . . . . . . . . . . . . . . . . . . . . .  \
    \ 6\n     5.1.  Internet Protocol Version 6 - RFC 8200  . . . . . . . . .   6\n\
    \     5.2.  Support for IPv6 Extension Headers  . . . . . . . . . . .   7\n  \
    \   5.3.  Protecting a Node from Excessive Extension Header Options   8\n    \
    \ 5.4.  Neighbor Discovery for IPv6 - RFC 4861  . . . . . . . . .   9\n     5.5.\
    \  SEcure Neighbor Discovery (SEND) - RFC 3971 . . . . . . .  11\n     5.6.  IPv6\
    \ Router Advertisement Flags Option - RFC 5175 . . . .  11\n     5.7.  Path MTU\
    \ Discovery and Packet Size  . . . . . . . . . . .  11\n       5.7.1.  Path MTU\
    \ Discovery - RFC 8201 . . . . . . . . . . . .  11\n       5.7.2.  Minimum MTU\
    \ Considerations  . . . . . . . . . . . . .  12\n     5.8.  ICMP for the Internet\
    \ Protocol Version 6 (IPv6) -\n           RFC 4443  . . . . . . . . . . . . .\
    \ . . . . . . . . . . .  12\n     5.9.  Default Router Preferences and More-Specific\
    \ Routes -\n           RFC 4191  . . . . . . . . . . . . . . . . . . . . . . .\
    \ .  12\n     5.10. First-Hop Router Selection - RFC 8028 . . . . . . . . . .\
    \  12\n     5.11. Multicast Listener Discovery (MLD) for IPv6 - RFC 3810  .  13\n\
    \     5.12. Explicit Congestion Notification (ECN) - RFC 3168 . . . .  13\n  \
    \ 6.  Addressing and Address Configuration  . . . . . . . . . . . .  13\n    \
    \ 6.1.  IP Version 6 Addressing Architecture - RFC 4291 . . . . .  13\n     6.2.\
    \  Host Address Availability Recommendations . . . . . . . .  13\n     6.3.  IPv6\
    \ Stateless Address Autoconfiguration - RFC 4862 . . .  14\n     6.4.  Privacy\
    \ Extensions for Address Configuration in IPv6 -\n           RFC 4941  . . . .\
    \ . . . . . . . . . . . . . . . . . . . .  15\n     6.5.  Stateful Address Autoconfiguration\
    \ (DHCPv6) - RFC 3315  .  16\n     6.6.  Default Address Selection for IPv6 -\
    \ RFC 6724 . . . . . .  16\n   7.  DNS . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . .  16\n   8.  Configuring Non-address Information . . . . .\
    \ . . . . . . . .  17\n     8.1.  DHCP for Other Configuration Information  .\
    \ . . . . . . .  17\n     8.2.  Router Advertisements and Default Gateway . .\
    \ . . . . . .  17\n     8.3.  IPv6 Router Advertisement Options for DNS\n    \
    \       Configuration - RFC 8106  . . . . . . . . . . . . . . . .  17\n     8.4.\
    \  DHCP Options versus Router Advertisement Options for Host\n           Configuration\
    \ . . . . . . . . . . . . . . . . . . . . . .  18\n   9.  Service Discovery Protocols\
    \ . . . . . . . . . . . . . . . . .  18\n   10. IPv4 Support and Transition .\
    \ . . . . . . . . . . . . . . . .  18\n     10.1.  Transition Mechanisms  . .\
    \ . . . . . . . . . . . . . . .  19\n       10.1.1.  Basic Transition Mechanisms\
    \ for IPv6 Hosts and\n                Routers - RFC 4213  . . . . . . . . . .\
    \ . . . . . . . 19\n   11. Application Support . . . . . . . . . . . . . . . .\
    \ . . . . .  19\n     11.1.  Textual Representation of IPv6 Addresses - RFC 5952\
    \  . .  19\n     11.2.  Application Programming Interfaces (APIs)  . . . . . .\
    \ .  19\n   12. Mobility  . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \  20\n   13. Security  . . . . . . . . . . . . . . . . . . . . . . . . . .  20\n\
    \     13.1.  Requirements . . . . . . . . . . . . . . . . . . . . . .  22\n  \
    \   13.2.  Transforms and Algorithms  . . . . . . . . . . . . . . .  22\n   14.\
    \ Router-Specific Functionality . . . . . . . . . . . . . . . .  22\n     14.1.\
    \  IPv6 Router Alert Option - RFC 2711  . . . . . . . . . .  22\n     14.2.  Neighbor\
    \ Discovery for IPv6 - RFC 4861 . . . . . . . . .  22\n     14.3.  Stateful Address\
    \ Autoconfiguration (DHCPv6) - RFC 3315 .  23\n     14.4.  IPv6 Prefix Length\
    \ Recommendation for Forwarding -\n            BCP 198  . . . . . . . . . . .\
    \ . . . . . . . . . . . . .  23\n   15. Constrained Devices . . . . . . . . .\
    \ . . . . . . . . . . . .  23\n   16. IPv6 Node Management  . . . . . . . . .\
    \ . . . . . . . . . . .  24\n     16.1.  Management Information Base (MIB) Modules\
    \  . . . . . . .  24\n       16.1.1.  IP Forwarding Table MIB  . . . . . . . .\
    \ . . . . . .  24\n       16.1.2.  Management Information Base for the Internet\n\
    \                Protocol (IP)  . . . . . . . . . . . . . . . . . . .  24\n  \
    \     16.1.3.  Interface MIB  . . . . . . . . . . . . . . . . . . .  24\n    \
    \ 16.2.  YANG Data Models . . . . . . . . . . . . . . . . . . . .  25\n      \
    \ 16.2.1.  IP Management YANG Model . . . . . . . . . . . . . .  25\n       16.2.2.\
    \  Interface Management YANG Model  . . . . . . . . . .  25\n   17. Security Considerations\
    \ . . . . . . . . . . . . . . . . . . .  25\n   18. IANA Considerations . . .\
    \ . . . . . . . . . . . . . . . . . .  25\n   19. References  . . . . . . . .\
    \ . . . . . . . . . . . . . . . . .  25\n     19.1.  Normative References . .\
    \ . . . . . . . . . . . . . . . .  25\n     19.2.  Informative References . .\
    \ . . . . . . . . . . . . . . .  32\n   Appendix A.  Changes from RFC 6434  .\
    \ . . . . . . . . . . . . . .  38\n   Appendix B.  Changes from RFC 4294 to RFC\
    \ 6434  . . . . . . . . .  39\n   Acknowledgments . . . . . . . . . . . . . .\
    \ . . . . . . . . . . .  41\n   Authors' Addresses  . . . . . . . . . . . . .\
    \ . . . . . . . . . .  42\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document defines common functionality required by both\
    \ IPv6\n   hosts and routers.  Many IPv6 nodes will implement optional or\n  \
    \ additional features, but this document collects and summarizes\n   requirements\
    \ from other published Standards Track documents in one\n   place.\n   This document\
    \ tries to avoid discussion of protocol details and\n   references RFCs for this\
    \ purpose.  This document is intended to be an\n   applicability statement and\
    \ to provide guidance as to which IPv6\n   specifications should be implemented\
    \ in the general case and which\n   specifications may be of interest to specific\
    \ deployment scenarios.\n   This document does not update any individual protocol\
    \ document RFCs.\n   Although this document points to different specifications,\
    \ it should\n   be noted that in many cases, the granularity of a particular\n\
    \   requirement will be smaller than a single specification, as many\n   specifications\
    \ define multiple, independent pieces, some of which may\n   not be mandatory.\
    \  In addition, most specifications define both\n   client and server behavior\
    \ in the same specification, while many\n   implementations will be focused on\
    \ only one of those roles.\n   This document defines a minimal level of requirement\
    \ needed for a\n   device to provide useful Internet service and considers a broad\
    \ range\n   of device types and deployment scenarios.  Because of the wide range\n\
    \   of deployment scenarios, the minimal requirements specified in this\n   document\
    \ may not be sufficient for all deployment scenarios.  It is\n   perfectly reasonable\
    \ (and indeed expected) for other profiles to\n   define additional or stricter\
    \ requirements appropriate for specific\n   usage and deployment environments.\
    \  As an example, this document does\n   not mandate that all clients support\
    \ DHCP, but some deployment\n   scenarios may deem it appropriate to make such\
    \ a requirement.  As\n   another example, NIST has defined profiles for specialized\n\
    \   requirements for IPv6 in target environments (see [USGv6]).\n   As it is not\
    \ always possible for an implementer to know the exact\n   usage of IPv6 in a\
    \ node, an overriding requirement for IPv6 nodes is\n   that they should adhere\
    \ to Jon Postel's Robustness Principle: \"Be\n   conservative in what you do,\
    \ be liberal in what you accept from\n   others\" [RFC793].\n"
- title: 1.1.  Scope of This Document
  contents:
  - "1.1.  Scope of This Document\n   IPv6 covers many specifications.  It is intended\
    \ that IPv6 will be\n   deployed in many different situations and environments.\
    \  Therefore,\n   it is important to develop requirements for IPv6 nodes to ensure\n\
    \   interoperability.\n"
- title: 1.2.  Description of IPv6 Nodes
  contents:
  - "1.2.  Description of IPv6 Nodes\n   From \"Internet Protocol, Version 6 (IPv6)\
    \ Specification\" [RFC8200],\n   we have the following definitions:\n   IPv6 node\
    \   - a device that implements IPv6.\n   IPv6 router - a node that forwards IPv6\
    \ packets not explicitly\n                 addressed to itself.\n   IPv6 host\
    \   - any IPv6 node that is not a router.\n"
- title: 2.  Requirements Language
  contents:
  - "2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n"
- title: 3.  Abbreviations Used in This Document
  contents:
  - "3.  Abbreviations Used in This Document\n   AH    Authentication Header\n   DAD\
    \   Duplicate Address Detection\n   ESP   Encapsulating Security Payload\n   ICMP\
    \  Internet Control Message Protocol\n   IKE   Internet Key Exchange\n   MIB \
    \  Management Information Base\n   MLD   Multicast Listener Discovery\n   MTU\
    \   Maximum Transmission Unit\n   NA    Neighbor Advertisement\n   NBMA  Non-Broadcast\
    \ Multi-Access\n   ND    Neighbor Discovery\n   NS    Neighbor Solicitation\n\
    \   NUD   Neighbor Unreachability Detection\n   PPP   Point-to-Point Protocol\n"
- title: 4.  Sub-IP Layer
  contents:
  - "4.  Sub-IP Layer\n   An IPv6 node MUST include support for one or more IPv6 link-layer\n\
    \   specifications.  Which link-layer specifications an implementation\n   should\
    \ include will depend upon what link layers are supported by the\n   hardware\
    \ available on the system.  It is possible for a conformant\n   IPv6 node to support\
    \ IPv6 on some of its interfaces and not on\n   others.\n   As IPv6 is run over\
    \ new Layer 2 technologies, it is expected that new\n   specifications will be\
    \ issued.  We list here some of the Layer 2\n   technologies for which an IPv6\
    \ specification has been developed.  It\n   is provided for informational purposes\
    \ only and may not be complete.\n   -  Transmission of IPv6 Packets over Ethernet\
    \ Networks [RFC2464]\n   -  Transmission of IPv6 Packets over Frame Relay Networks\n\
    \      Specification [RFC2590]\n   -  Transmission of IPv6 Packets over IEEE 1394\
    \ Networks [RFC3146]\n   -  Transmission of IPv6, IPv4, and Address Resolution\
    \ Protocol (ARP)\n      Packets over Fibre Channel [RFC4338]\n   -  Transmission\
    \ of IPv6 Packets over IEEE 802.15.4 Networks [RFC4944]\n   -  Transmission of\
    \ IPv6 via the IPv6 Convergence Sublayer over IEEE\n      802.16 Networks [RFC5121]\n\
    \   -  IP version 6 over PPP [RFC5072]\n   In addition to traditional physical\
    \ link layers, it is also possible\n   to tunnel IPv6 over other protocols.  Examples\
    \ include:\n   -  Teredo: Tunneling IPv6 over UDP through Network Address\n  \
    \    Translations (NATs) [RFC4380]\n   -  Basic Transition Mechanisms for IPv6\
    \ Hosts and Routers (see\n      Section 3 of [RFC4213])\n"
- title: 5.  IP Layer
  contents:
  - '5.  IP Layer

    '
- title: 5.1.  Internet Protocol Version 6 - RFC 8200
  contents:
  - "5.1.  Internet Protocol Version 6 - RFC 8200\n   The Internet Protocol version\
    \ 6 is specified in [RFC8200].  This\n   specification MUST be supported.\n  \
    \ The node MUST follow the packet transmission rules in RFC 8200.\n   All conformant\
    \ IPv6 implementations MUST be capable of sending and\n   receiving IPv6 packets;\
    \ forwarding functionality MAY be supported.\n   Nodes MUST always be able to\
    \ send, receive, and process Fragment\n   headers.\n   IPv6 nodes MUST not create\
    \ overlapping fragments.  Also, when\n   reassembling an IPv6 datagram, if one\
    \ or more of its constituent\n   fragments is determined to be an overlapping\
    \ fragment, the entire\n   datagram (and any constituent fragments) MUST be silently\
    \ discarded.\n   See [RFC5722] for more information.\n   As recommended in [RFC8021],\
    \ nodes MUST NOT generate atomic\n   fragments, i.e., where the fragment is a\
    \ whole datagram.  As per\n   [RFC6946], if a receiving node reassembling a datagram\
    \ encounters an\n   atomic fragment, it should be processed as a fully reassembled\n\
    \   packet, and any other fragments that match this packet should be\n   processed\
    \ independently.\n   To mitigate a variety of potential attacks, nodes SHOULD\
    \ avoid using\n   predictable Fragment Identification values in Fragment headers,\
    \ as\n   discussed in [RFC7739].\n   All nodes SHOULD support the setting and\
    \ use of the IPv6 Flow Label\n   field as defined in the IPv6 Flow Label specification\
    \ [RFC6437].\n   Forwarding nodes such as routers and load distributors MUST NOT\n\
    \   depend only on Flow Label values being uniformly distributed.  It is\n   RECOMMENDED\
    \ that source hosts support the flow label by setting the\n   Flow Label field\
    \ for all packets of a given flow to the same value\n   chosen from an approximation\
    \ to a discrete uniform distribution.\n"
- title: 5.2.  Support for IPv6 Extension Headers
  contents:
  - "5.2.  Support for IPv6 Extension Headers\n   RFC 8200 specifies extension headers\
    \ and the processing for these\n   headers.\n   Extension headers (except for\
    \ the Hop-by-Hop Options header) are not\n   processed, inserted, or deleted by\
    \ any node along a packet's delivery\n   path, until the packet reaches the node\
    \ (or each of the set of nodes,\n   in the case of multicast) identified in the\
    \ Destination Address field\n   of the IPv6 header.\n   Any unrecognized extension\
    \ headers or options MUST be processed as\n   described in RFC 8200.  Note that\
    \ where Section 4 of RFC 8200 refers\n   to the action to be taken when a Next\
    \ Header value in the current\n   header is not recognized by a node, that action\
    \ applies whether the\n   value is an unrecognized extension header or an unrecognized\
    \ upper-\n   layer protocol (ULP).\n   An IPv6 node MUST be able to process these\
    \ extension headers.  An\n   exception is Routing Header type 0 (RH0), which was\
    \ deprecated by\n   [RFC5095] due to security concerns and which MUST be treated\
    \ as an\n   unrecognized routing type.\n   Further, [RFC7045] adds specific requirements\
    \ for the processing of\n   extension headers, in particular that any forwarding\
    \ node along an\n   IPv6 packet's path, which forwards the packet for any reason,\
    \ SHOULD\n   do so regardless of any extension headers that are present.\n   As\
    \ per RFC 8200, when a node fragments an IPv6 datagram, it MUST\n   include the\
    \ entire IPv6 Header Chain in the first fragment.  The Per-\n   Fragment headers\
    \ MUST consist of the IPv6 header plus any extension\n   headers that MUST be\
    \ processed by nodes en route to the destination,\n   that is, all headers up\
    \ to and including the Routing header if\n   present, else the Hop-by-Hop Options\
    \ header if present, else no\n   extension headers.  On reassembly, if the first\
    \ fragment does not\n   include all headers through an upper-layer header, then\
    \ that fragment\n   SHOULD be discarded and an ICMP Parameter Problem, Code 3,\
    \ message\n   SHOULD be sent to the source of the fragment, with the Pointer field\n\
    \   set to zero.  See [RFC7112] for a discussion of why oversized IPv6\n   Extension\
    \ Header Chains are avoided.\n   Defining new IPv6 extension headers is not recommended,\
    \ unless there\n   are no existing IPv6 extension headers that can be used by\
    \ specifying\n   a new option for that IPv6 extension header.  A proposal to specify\
    \ a\n   new IPv6 extension header MUST include a detailed technical\n   explanation\
    \ of why an existing IPv6 extension header can not be used\n   for the desired\
    \ new function, and in such cases, it needs to follow\n   the format described\
    \ in Section 8 of RFC 8200.  For further\n   background reading on this topic,\
    \ see [RFC6564].\n"
- title: 5.3.  Protecting a Node from Excessive Extension Header Options
  contents:
  - "5.3.  Protecting a Node from Excessive Extension Header Options\n   As per RFC\
    \ 8200, end hosts are expected to process all extension\n   headers, destination\
    \ options, and hop-by-hop options in a packet.\n   Given that the only limit on\
    \ the number and size of extension headers\n   is the MTU, the processing of received\
    \ packets could be considerable.\n   It is also conceivable that a long chain\
    \ of extension headers might\n   be used as a form of denial-of-service attack.\
    \  Accordingly, a host\n   may place limits on the number and sizes of extension\
    \ headers and\n   options it is willing to process.\n   A host MAY limit the number\
    \ of consecutive PAD1 options in\n   destination options or hop-by-hop options\
    \ to 7.  In this case, if\n   there are more than 7 consecutive PAD1 options present,\
    \ the packet\n   MAY be silently discarded.  The rationale is that if padding\
    \ of 8 or\n   more bytes is required, then the PADN option SHOULD be used.\n \
    \  A host MAY limit the number of bytes in a PADN option to be less than\n   8.\
    \  In such a case, if a PADN option is present that has a length\n   greater than\
    \ 7, the packet SHOULD be silently discarded.  The\n   rationale for this guideline\
    \ is that the purpose of padding is for\n   alignment and 8 bytes is the maximum\
    \ alignment used in IPv6.\n   A host MAY disallow unknown options in destination\
    \ options or hop-by-\n   hop options.  This SHOULD be configurable where the default\
    \ is to\n   accept unknown options and process them per [RFC8200].  If a packet\n\
    \   with unknown options is received and the host is configured to\n   disallow\
    \ them, then the packet SHOULD be silently discarded.\n   A host MAY impose a\
    \ limit on the maximum number of non-padding\n   options allowed in the destination\
    \ options and hop-by-hop extension\n   headers.  If this feature is supported,\
    \ the maximum number SHOULD be\n   configurable, and the default value SHOULD\
    \ be set to 8.  The limits\n   for destination options and hop-by-hop options\
    \ may be separately\n   configurable.  If a packet is received and the number\
    \ of destination\n   or hop-by-hop options exceeds the limit, then the packet\
    \ SHOULD be\n   silently discarded.\n   A host MAY impose a limit on the maximum\
    \ length of Destination\n   Options or Hop-by-Hop Options extension headers. \
    \ This value SHOULD\n   be configurable, and the default is to accept options\
    \ of any length.\n   If a packet is received and the length of the Destination\
    \ or Hop-by-\n   Hop Options extension header exceeds the length limit, then the\n\
    \   packet SHOULD be silently discarded.\n"
- title: 5.4.  Neighbor Discovery for IPv6 - RFC 4861
  contents:
  - "5.4.  Neighbor Discovery for IPv6 - RFC 4861\n   Neighbor Discovery is defined\
    \ in [RFC4861]; the definition was\n   updated by [RFC5942].  Neighbor Discovery\
    \ MUST be supported with the\n   noted exceptions below.  RFC 4861 states:\n \
    \     Unless specified otherwise (in a document that covers operating IP\n   \
    \   over a particular link type) this document applies to all link\n      types.\
    \  However, because ND uses link-layer multicast for some of\n      its services,\
    \ it is possible that on some link types (e.g.,\n      Non-Broadcast Multi-Access\
    \ (NBMA) links), alternative protocols or\n      mechanisms to implement those\
    \ services will be specified (in the\n      appropriate document covering the\
    \ operation of IP over a\n      particular link type).  The services described\
    \ in this document\n      that are not directly dependent on multicast, such as\
    \ Redirects,\n      Next-hop determination, Neighbor Unreachability Detection,\
    \ etc.,\n      are expected to be provided as specified in this document.  The\n\
    \      details of how one uses ND on NBMA links are addressed in\n      [RFC2491].\n\
    \   Some detailed analysis of Neighbor Discovery follows:\n   Router Discovery\
    \ is how hosts locate routers that reside on an\n   attached link.  Hosts MUST\
    \ support Router Discovery functionality.\n   Prefix Discovery is how hosts discover\
    \ the set of address prefixes\n   that define which destinations are on-link for\
    \ an attached link.\n   Hosts MUST support Prefix Discovery.\n   Hosts MUST also\
    \ implement Neighbor Unreachability Detection (NUD) for\n   all paths between\
    \ hosts and neighboring nodes.  NUD is not required\n   for paths between routers.\
    \  However, all nodes MUST respond to\n   unicast Neighbor Solicitation (NS) messages.\n\
    \   [RFC7048] discusses NUD, in particular cases where it behaves too\n   impatiently.\
    \  It states that if a node transmits more than a certain\n   number of packets,\
    \ then it SHOULD use the exponential backoff of the\n   retransmit timer, up to\
    \ a certain threshold point.\n   Hosts MUST support the sending of Router Solicitations\
    \ and the\n   receiving of Router Advertisements (RAs).  The ability to understand\n\
    \   individual RA options is dependent on supporting the functionality\n   making\
    \ use of the particular option.\n   [RFC7559] discusses packet loss resiliency\
    \ for Router Solicitations\n   and requires that nodes MUST use a specific exponential\
    \ backoff\n   algorithm for retransmission of Router Solicitations.\n   All nodes\
    \ MUST support the sending and receiving of Neighbor\n   Solicitation (NS) and\
    \ Neighbor Advertisement (NA) messages.  NS and\n   NA messages are required for\
    \ Duplicate Address Detection (DAD).\n   Hosts SHOULD support the processing of\
    \ Redirect functionality.\n   Routers MUST support the sending of Redirects, though\
    \ not necessarily\n   for every individual packet (e.g., due to rate limiting).\
    \  Redirects\n   are only useful on networks supporting hosts.  In core networks\n\
    \   dominated by routers, Redirects are typically disabled.  The sending\n   of\
    \ Redirects SHOULD be disabled by default on routers intended to be\n   deployed\
    \ on core networks.  They MAY be enabled by default on routers\n   intended to\
    \ support hosts on edge networks.\n   As specified in [RFC6980], nodes MUST NOT\
    \ employ IPv6 fragmentation\n   for sending any of the following Neighbor Discovery\
    \ and SEcure\n   Neighbor Discovery messages: Neighbor Solicitation, Neighbor\n\
    \   Advertisement, Router Solicitation, Router Advertisement, Redirect,\n   or\
    \ Certification Path Solicitation.  Nodes MUST silently ignore any\n   of these\
    \ messages on receipt if fragmented.  See RFC 6980 for details\n   and motivation.\n\
    \   \"IPv6 Host-to-Router Load Sharing\" [RFC4311] includes additional\n   recommendations\
    \ on how to select from a set of available routers.\n   [RFC4311] SHOULD be supported.\n"
- title: 5.5.  SEcure Neighbor Discovery (SEND) - RFC 3971
  contents:
  - "5.5.  SEcure Neighbor Discovery (SEND) - RFC 3971\n   SEND [RFC3971] and Cryptographically\
    \ Generated Addresses (CGAs)\n   [RFC3972] provide a way to secure the message\
    \ exchanges of Neighbor\n   Discovery.  SEND has the potential to address certain\
    \ classes of\n   spoofing attacks, but it does not provide specific protection\
    \ for\n   threats from off-link attackers.\n   There have been relatively few\
    \ implementations of SEND in common\n   operating systems and platforms since\
    \ its publication in 2005; thus,\n   deployment experience remains very limited\
    \ to date.\n   At this time, support for SEND is considered optional.  Due to\
    \ the\n   complexity in deploying SEND and its heavyweight provisioning, its\n\
    \   deployment is only likely to be considered where nodes are operating\n   in\
    \ a particularly strict security environment.\n"
- title: 5.6.  IPv6 Router Advertisement Flags Option - RFC 5175
  contents:
  - "5.6.  IPv6 Router Advertisement Flags Option - RFC 5175\n   Router Advertisements\
    \ include an 8-bit field of single-bit Router\n   Advertisement flags.  The Router\
    \ Advertisement Flags Option extends\n   the number of available flag bits by\
    \ 48 bits.  At the time of this\n   writing, 6 of the original 8 single-bit flags\
    \ have been assigned,\n   while 2 remain available for future assignment.  No\
    \ flags have been\n   defined that make use of the new option; thus, strictly\
    \ speaking,\n   there is no requirement to implement the option today.  However,\n\
    \   implementations that are able to pass unrecognized options to a\n   higher-level\
    \ entity that may be able to understand them (e.g., a\n   user-level process using\
    \ a \"raw socket\" facility) MAY take steps to\n   handle the option in anticipation\
    \ of a future usage.\n"
- title: 5.7.  Path MTU Discovery and Packet Size
  contents:
  - '5.7.  Path MTU Discovery and Packet Size

    '
- title: 5.7.1.  Path MTU Discovery - RFC 8201
  contents:
  - "5.7.1.  Path MTU Discovery - RFC 8201\n   \"Path MTU Discovery for IP version\
    \ 6\" [RFC8201] SHOULD be supported.\n   From [RFC8200]:\n      It is strongly\
    \ recommended that IPv6 nodes implement Path MTU\n      Discovery [RFC8201], in\
    \ order to discover and take advantage of\n      path MTUs greater than 1280 octets.\
    \  However, a minimal IPv6\n      implementation (e.g., in a boot ROM) may simply\
    \ restrict itself to\n      sending packets no larger than 1280 octets, and omit\n\
    \      implementation of Path MTU Discovery.\n   The rules in [RFC8200] and [RFC5722]\
    \ MUST be followed for packet\n   fragmentation and reassembly.\n   As described\
    \ in RFC 8201, nodes implementing Path MTU Discovery and\n   sending packets larger\
    \ than the IPv6 minimum link MTU are susceptible\n   to problematic connectivity\
    \ if ICMPv6 messages are blocked or not\n   transmitted.  For example, this will\
    \ result in connections that\n   complete the TCP three-way handshake correctly\
    \ but then hang when\n   data is transferred.  This state is referred to as a\
    \ black-hole\n   connection [RFC2923].  Path MTU Discovery relies on ICMPv6 Packet\
    \ Too\n   Big (PTB) to determine the MTU of the path (and thus these MUST NOT\n\
    \   be filtered, as per the recommendation in [RFC4890]).\n   An alternative to\
    \ Path MTU Discovery defined in RFC 8201 can be found\n   in [RFC4821], which\
    \ defines a method for Packetization Layer Path MTU\n   Discovery (PLPMTUD) designed\
    \ for use over paths where delivery of\n   ICMPv6 messages to a host is not assured.\n"
- title: 5.7.2.  Minimum MTU Considerations
  contents:
  - "5.7.2.  Minimum MTU Considerations\n   While an IPv6 link MTU can be set to 1280\
    \ bytes, it is recommended\n   that for IPv6 UDP in particular, which includes\
    \ DNS operation, the\n   sender use a large MTU if they can, in order to avoid\
    \ gratuitous\n   fragmentation-caused packet drops.\n"
- title: 5.8.  ICMP for the Internet Protocol Version 6 (IPv6) - RFC 4443
  contents:
  - "5.8.  ICMP for the Internet Protocol Version 6 (IPv6) - RFC 4443\n   ICMPv6 [RFC4443]\
    \ MUST be supported.  \"Extended ICMP to Support Multi-\n   Part Messages\" [RFC4884]\
    \ MAY be supported.\n"
- title: 5.9.  Default Router Preferences and More-Specific Routes - RFC 4191
  contents:
  - "5.9.  Default Router Preferences and More-Specific Routes - RFC 4191\n   \"Default\
    \ Router Preferences and More-Specific Routes\" [RFC4191]\n   provides support\
    \ for nodes attached to multiple (different) networks,\n   each providing routers\
    \ that advertise themselves as default routers\n   via Router Advertisements.\
    \  In some scenarios, one router may provide\n   connectivity to destinations\
    \ that the other router does not, and\n   choosing the \"wrong\" default router\
    \ can result in reachability\n   failures.  In order to resolve this scenario,\
    \ IPv6 nodes MUST\n   implement [RFC4191] and SHOULD implement the Type C host\
    \ role defined\n   in RFC 4191.\n"
- title: 5.10.  First-Hop Router Selection - RFC 8028
  contents:
  - "5.10.  First-Hop Router Selection - RFC 8028\n   In multihomed scenarios, where\
    \ a host has more than one prefix, each\n   allocated by an upstream network that\
    \ is assumed to implement BCP 38\n   ingress filtering, the host may have multiple\
    \ routers to choose from.\n   Hosts that may be deployed in such multihomed environments\
    \ SHOULD\n   follow the guidance given in [RFC8028].\n"
- title: 5.11.  Multicast Listener Discovery (MLD) for IPv6 - RFC 3810
  contents:
  - "5.11.  Multicast Listener Discovery (MLD) for IPv6 - RFC 3810\n   Nodes that\
    \ need to join multicast groups MUST support MLDv2\n   [RFC3810].  MLD is needed\
    \ by any node that is expected to receive and\n   process multicast traffic; in\
    \ particular, MLDv2 is required for\n   support for source-specific multicast\
    \ (SSM) as per [RFC4607].\n   Previous versions of this specification only required\
    \ MLDv1 [RFC2710]\n   to be implemented on all nodes.  Since participation of\
    \ any\n   MLDv1-only nodes on a link require that all other nodes on the link\n\
    \   then operate in version 1 compatibility mode, the requirement to\n   support\
    \ MLDv2 on all nodes was upgraded to a MUST.  Further, SSM is\n   now the preferred\
    \ multicast distribution method, rather than Any-\n   Source Multicast (ASM).\n\
    \   Note that Neighbor Discovery (as used on most link types -- see\n   Section\
    \ 5.4) depends on multicast and requires that nodes join\n   Solicited Node multicast\
    \ addresses.\n"
- title: 5.12.  Explicit Congestion Notification (ECN) - RFC 3168
  contents:
  - "5.12.  Explicit Congestion Notification (ECN) - RFC 3168\n   An ECN-aware router\
    \ sets a mark in the IP header in order to signal\n   impending congestion, rather\
    \ than dropping a packet.  The receiver of\n   the packet echoes the congestion\
    \ indication to the sender, which can\n   then reduce its transmission rate as\
    \ if it detected a dropped packet.\n   Nodes SHOULD support ECN [RFC3168] by implementing\
    \ an interface for\n   the upper layer to access and by setting the ECN bits in\
    \ the IP\n   header.  The benefits of using ECN are documented in [RFC8087].\n"
- title: 6.  Addressing and Address Configuration
  contents:
  - '6.  Addressing and Address Configuration

    '
- title: 6.1.  IP Version 6 Addressing Architecture - RFC 4291
  contents:
  - "6.1.  IP Version 6 Addressing Architecture - RFC 4291\n   The IPv6 Addressing\
    \ Architecture [RFC4291] MUST be supported.\n   The current IPv6 Address Architecture\
    \ is based on a 64-bit boundary\n   for subnet prefixes.  The reasoning behind\
    \ this decision is\n   documented in [RFC7421].\n   Implementations MUST also\
    \ support the multicast flag updates\n   documented in [RFC7371].\n"
- title: 6.2.  Host Address Availability Recommendations
  contents:
  - "6.2.  Host Address Availability Recommendations\n   Hosts may be configured with\
    \ addresses through a variety of methods,\n   including Stateless Address Autoconfiguration\
    \ (SLAAC), DHCPv6, or\n   manual configuration.\n   [RFC7934] recommends that\
    \ networks provide general-purpose end hosts\n   with multiple global IPv6 addresses\
    \ when they attach, and it\n   describes the benefits of and the options for doing\
    \ so.  Routers\n   SHOULD support [RFC7934] for assigning multiple addresses to\
    \ a host.\n   A host SHOULD support assigning multiple addresses as described\
    \ in\n   [RFC7934].\n   Nodes SHOULD support the capability to be assigned a prefix\
    \ per host\n   as documented in [RFC8273].  Such an approach can offer improved\
    \ host\n   isolation and enhanced subscriber management on shared network\n  \
    \ segments.\n"
- title: 6.3.  IPv6 Stateless Address Autoconfiguration - RFC 4862
  contents:
  - "6.3.  IPv6 Stateless Address Autoconfiguration - RFC 4862\n   Hosts MUST support\
    \ IPv6 Stateless Address Autoconfiguration.  It is\n   RECOMMENDED, as described\
    \ in [RFC8064], that unless there is a\n   specific requirement for Media Access\
    \ Control (MAC) addresses to be\n   embedded in an Interface Identifier (IID),\
    \ nodes follow the procedure\n   in [RFC7217] to generate SLAAC-based addresses,\
    \ rather than use\n   [RFC4862].  Addresses generated using the method described\
    \ in\n   [RFC7217] will be the same whenever a given device (re)appears on the\n\
    \   same subnet (with a specific IPv6 prefix), but the IID will vary on\n   each\
    \ subnet visited.\n   Nodes that are routers MUST be able to generate link-local\
    \ addresses\n   as described in [RFC4862].\n   From RFC 4862:\n      The autoconfiguration\
    \ process specified in this document applies\n      only to hosts and not routers.\
    \  Since host autoconfiguration uses\n      information advertised by routers,\
    \ routers will need to be\n      configured by some other means.  However, it\
    \ is expected that\n      routers will generate link-local addresses using the\
    \ mechanism\n      described in this document.  In addition, routers are expected\
    \ to\n      successfully pass the Duplicate Address Detection procedure\n    \
    \  described in this document on all addresses prior to assigning\n      them\
    \ to an interface.\n   All nodes MUST implement Duplicate Address Detection. \
    \ Quoting from\n   Section 5.4 of RFC 4862:\n      Duplicate Address Detection\
    \ MUST be performed on all unicast\n      addresses prior to assigning them to\
    \ an interface, regardless of\n      whether they are obtained through stateless\
    \ autoconfiguration,\n      DHCPv6, or manual configuration, with the following\
    \ exceptions\n      [noted therein].\n   \"Optimistic Duplicate Address Detection\
    \ (DAD) for IPv6\" [RFC4429]\n   specifies a mechanism to reduce delays associated\
    \ with generating\n   addresses via Stateless Address Autoconfiguration [RFC4862].\
    \  RFC\n   4429 was developed in conjunction with Mobile IPv6 in order to reduce\n\
    \   the time needed to acquire and configure addresses as devices quickly\n  \
    \ move from one network to another, and it is desirable to minimize\n   transition\
    \ delays.  For general purpose devices, RFC 4429 remains\n   optional at this\
    \ time.\n   [RFC7527] discusses enhanced DAD and describes an algorithm to\n \
    \  automate the detection of looped-back IPv6 ND messages used by DAD.\n   Nodes\
    \ SHOULD implement this behavior where such detection is\n   beneficial.\n"
- title: 6.4.  Privacy Extensions for Address Configuration in IPv6 - RFC 4941
  contents:
  - "6.4.  Privacy Extensions for Address Configuration in IPv6 - RFC 4941\n   A node\
    \ using Stateless Address Autoconfiguration [RFC4862] to form a\n   globally unique\
    \ IPv6 address that uses its MAC address to generate\n   the IID will see that\
    \ the IID remains the same on any visited\n   network, even though the network\
    \ prefix part changes.  Thus, it is\n   possible for a third-party device to track\
    \ the activities of the node\n   they communicate with, as that node moves around\
    \ the network.\n   Privacy Extensions for Stateless Address Autoconfiguration\
    \ [RFC4941]\n   address this concern by allowing nodes to configure an additional\n\
    \   temporary address where the IID is effectively randomly generated.\n   Privacy\
    \ addresses are then used as source addresses for new\n   communications initiated\
    \ by the node.\n   General issues regarding privacy issues for IPv6 addressing\
    \ are\n   discussed in [RFC7721].\n   RFC 4941 SHOULD be supported.  In some scenarios,\
    \ such as dedicated\n   servers in a data center, it provides limited or no benefit,\
    \ or it\n   may complicate network management.  Thus, devices implementing this\n\
    \   specification MUST provide a way for the end user to explicitly\n   enable\
    \ or disable the use of such temporary addresses.\n   Note that RFC 4941 can be\
    \ used independently of traditional SLAAC or\n   independently of SLAAC that is\
    \ based on RFC 7217.\n   Implementers of RFC 4941 should be aware that certain\
    \ addresses are\n   reserved and should not be chosen for use as temporary addresses.\n\
    \   Consult \"Reserved IPv6 Interface Identifiers\" [RFC5453] for more\n   details.\n"
- title: 6.5.  Stateful Address Autoconfiguration (DHCPv6) - RFC 3315
  contents:
  - "6.5.  Stateful Address Autoconfiguration (DHCPv6) - RFC 3315\n   DHCPv6 [RFC3315]\
    \ can be used to obtain and configure addresses.  In\n   general, a network may\
    \ provide for the configuration of addresses\n   through SLAAC, DHCPv6, or both.\
    \  There will be a wide range of IPv6\n   deployment models and differences in\
    \ address assignment requirements,\n   some of which may require DHCPv6 for stateful\
    \ address assignment.\n   Consequently, all hosts SHOULD implement address configuration\
    \ via\n   DHCPv6.\n   In the absence of observed Router Advertisement messages,\
    \ IPv6 nodes\n   MAY initiate DHCP to obtain IPv6 addresses and other configuration\n\
    \   information, as described in Section 5.5.2 of [RFC4862].\n   Where devices\
    \ are likely to be carried by users and attached to\n   multiple visited networks,\
    \ DHCPv6 client anonymity profiles SHOULD be\n   supported as described in [RFC7844]\
    \ to minimize the disclosure of\n   identifying information.  Section 5 of RFC\
    \ 7844 describes operational\n   considerations on the use of such anonymity profiles.\n"
- title: 6.6.  Default Address Selection for IPv6 - RFC 6724
  contents:
  - "6.6.  Default Address Selection for IPv6 - RFC 6724\n   IPv6 nodes will invariably\
    \ have multiple addresses configured\n   simultaneously and thus will need to\
    \ choose which addresses to use\n   for which communications.  The rules specified\
    \ in the Default Address\n   Selection for IPv6 document [RFC6724] MUST be implemented.\
    \  [RFC8028]\n   updates Rule 5.5 from [RFC6724]; implementations SHOULD implement\n\
    \   this rule.\n"
- title: 7.  DNS
  contents:
  - "7.  DNS\n   DNS is described in [RFC1034], [RFC1035], [RFC3363], and [RFC3596].\n\
    \   Not all nodes will need to resolve names; those that will never need\n   to\
    \ resolve DNS names do not need to implement resolver functionality.\n   However,\
    \ the ability to resolve names is a basic infrastructure\n   capability on which\
    \ applications rely, and most nodes will need to\n   provide support.  All nodes\
    \ SHOULD implement stub-resolver [RFC1034]\n   functionality, as in Section 5.3.1\
    \ of [RFC1034], with support for:\n   -  AAAA type Resource Records [RFC3596];\n\
    \   -  reverse addressing in ip6.arpa using PTR records [RFC3596]; and\n   - \
    \ Extension Mechanisms for DNS (EDNS(0)) [RFC6891] to allow for DNS\n      packet\
    \ sizes larger than 512 octets.\n   Those nodes are RECOMMENDED to support DNS\
    \ security extensions\n   [RFC4033] [RFC4034] [RFC4035].\n   A6 Resource Records\
    \ [RFC2874] are classified as Historic per\n   [RFC6563].  These were defined\
    \ with Experimental status in [RFC3363].\n"
- title: 8.  Configuring Non-address Information
  contents:
  - '8.  Configuring Non-address Information

    '
- title: 8.1.  DHCP for Other Configuration Information
  contents:
  - "8.1.  DHCP for Other Configuration Information\n   DHCP [RFC3315] specifies a\
    \ mechanism for IPv6 nodes to obtain address\n   configuration information (see\
    \ Section 6.5) and to obtain additional\n   (non-address) configuration.  If a\
    \ host implementation supports\n   applications or other protocols that require\
    \ configuration that is\n   only available via DHCP, hosts SHOULD implement DHCP.\
    \  For\n   specialized devices on which no such configuration need is present,\n\
    \   DHCP may not be necessary.\n   An IPv6 node can use the subset of DHCP (described\
    \ in [RFC3736]) to\n   obtain other configuration information.\n   If an IPv6\
    \ node implements DHCP, it MUST implement the DNS options\n   [RFC3646] as most\
    \ deployments will expect that these options are\n   available.\n"
- title: 8.2.  Router Advertisements and Default Gateway
  contents:
  - "8.2.  Router Advertisements and Default Gateway\n   There is no defined DHCPv6\
    \ Gateway option.\n   Nodes using the Dynamic Host Configuration Protocol for\
    \ IPv6 (DHCPv6)\n   are thus expected to determine their default router information\
    \ and\n   on-link prefix information from received Router Advertisements.\n"
- title: 8.3.  IPv6 Router Advertisement Options for DNS Configuration - RFC 8106
  contents:
  - "8.3.  IPv6 Router Advertisement Options for DNS Configuration - RFC 8106\n  \
    \ Router Advertisement options have historically been limited to those\n   that\
    \ are critical to basic IPv6 functionality.  Originally, DNS\n   configuration\
    \ was not included as an RA option, and DHCP was the\n   recommended way to obtain\
    \ DNS configuration information.  Over time,\n   the thinking surrounding such\
    \ an option has evolved.  It is now\n   generally recognized that few nodes can\
    \ function adequately without\n   having access to a working DNS resolver; thus,\
    \ a Standards Track\n   document has been published to provide this capability\
    \ [RFC8106].\n   Implementations MUST include support for the DNS RA option [RFC8106].\n"
- title: 8.4.  DHCP Options versus Router Advertisement Options for Host
  contents:
  - "8.4.  DHCP Options versus Router Advertisement Options for Host\n      Configuration\n\
    \   In IPv6, there are two main protocol mechanisms for propagating\n   configuration\
    \ information to hosts: RAs and DHCP.  RA options have\n   been restricted to\
    \ those deemed essential for basic network\n   functioning and for which all nodes\
    \ are configured with exactly the\n   same information.  Examples include the\
    \ Prefix Information Options,\n   the MTU option, etc.  On the other hand, DHCP\
    \ has generally been\n   preferred for configuration of more general parameters\
    \ and for\n   parameters that may be client specific.  Generally speaking, however,\n\
    \   there has been a desire to define only one mechanism for configuring\n   a\
    \ given option, rather than defining multiple (different) ways of\n   configuring\
    \ the same information.\n   One issue with having multiple ways to configure the\
    \ same information\n   is that interoperability suffers if a host chooses one\
    \ mechanism but\n   the network operator chooses a different mechanism.  For \"\
    closed\"\n   environments, where the network operator has significant influence\n\
    \   over what devices connect to the network and thus what configuration\n   mechanisms\
    \ they support, the operator may be able to ensure that a\n   particular mechanism\
    \ is supported by all connected hosts.  In more\n   open environments, however,\
    \ where arbitrary devices may connect\n   (e.g., a Wi-Fi hotspot), problems can\
    \ arise.  To maximize\n   interoperability in such environments, hosts would need\
    \ to implement\n   multiple configuration mechanisms to ensure interoperability.\n"
- title: 9.  Service Discovery Protocols
  contents:
  - "9.  Service Discovery Protocols\n   Multicast DNS (mDNS) and DNS-based Service\
    \ Discovery (DNS-SD) are\n   described in [RFC6762] and [RFC6763], respectively.\
    \  These protocols,\n   often collectively referred to as the 'Bonjour' protocols\
    \ after their\n   naming by Apple, provide the means for devices to discover services\n\
    \   within a local link and, in the absence of a unicast DNS service, to\n   exchange\
    \ naming information.\n   Where devices are to be deployed in networks where service\
    \ discovery\n   would be beneficial, e.g., for users seeking to discover printers\
    \ or\n   display devices, mDNS and DNS-SD SHOULD be supported.\n"
- title: 10.  IPv4 Support and Transition
  contents:
  - "10.  IPv4 Support and Transition\n   IPv6 nodes MAY support IPv4.\n"
- title: 10.1.  Transition Mechanisms
  contents:
  - '10.1.  Transition Mechanisms

    '
- title: 10.1.1.  Basic Transition Mechanisms for IPv6 Hosts and Routers -
  contents:
  - "10.1.1.  Basic Transition Mechanisms for IPv6 Hosts and Routers -\n         RFC\
    \ 4213\n   If an IPv6 node implements dual stack and tunneling, then [RFC4213]\n\
    \   MUST be supported.\n"
- title: 11.  Application Support
  contents:
  - '11.  Application Support

    '
- title: 11.1.  Textual Representation of IPv6 Addresses - RFC 5952
  contents:
  - "11.1.  Textual Representation of IPv6 Addresses - RFC 5952\n   Software that\
    \ allows users and operators to input IPv6 addresses in\n   text form SHOULD support\
    \ \"A Recommendation for IPv6 Address Text\n   Representation\" [RFC5952].\n"
- title: 11.2.  Application Programming Interfaces (APIs)
  contents:
  - "11.2.  Application Programming Interfaces (APIs)\n   There are a number of IPv6-related\
    \ APIs.  This document does not\n   mandate the use of any, because the choice\
    \ of API does not directly\n   relate to on-the-wire behavior of protocols.  Implementers,\
    \ however,\n   would be advised to consider providing a common API or reviewing\n\
    \   existing APIs for the type of functionality they provide to\n   applications.\n\
    \   \"Basic Socket Interface Extensions for IPv6\" [RFC3493] provides IPv6\n \
    \  functionality used by typical applications.  Implementers should note\n   that\
    \ RFC 3493 has been picked up and further standardized by the\n   Portable Operating\
    \ System Interface (POSIX) [POSIX].\n   \"Advanced Sockets Application Program\
    \ Interface (API) for IPv6\"\n   [RFC3542] provides access to advanced IPv6 features\
    \ needed by\n   diagnostic and other more specialized applications.\n   \"IPv6\
    \ Socket API for Source Address Selection\" [RFC5014] provides\n   facilities\
    \ that allow an application to override the default Source\n   Address Selection\
    \ rules of [RFC6724].\n   \"Socket Interface Extensions for Multicast Source Filters\"\
    \ [RFC3678]\n   provides support for expressing source filters on multicast group\n\
    \   memberships.\n   \"Extension to Sockets API for Mobile IPv6\" [RFC4584] provides\n\
    \   application support for accessing and enabling Mobile IPv6 [RFC6275]\n   features.\n"
- title: 12.  Mobility
  contents:
  - "12.  Mobility\n   Mobile IPv6 [RFC6275] and associated specifications [RFC3776]\n\
    \   [RFC4877] allow a node to change its point of attachment within the\n   Internet,\
    \ while maintaining (and using) a permanent address.  All\n   communication using\
    \ the permanent address continues to proceed as\n   expected even as the node\
    \ moves around.  The definition of Mobile IP\n   includes requirements for the\
    \ following types of nodes:\n      - mobile nodes\n      - correspondent nodes\
    \ with support for route optimization\n      - home agents\n      - all IPv6 routers\n\
    \   At the present time, Mobile IP has seen only limited implementation\n   and\
    \ no significant deployment, partly because it originally assumed\n   an IPv6-only\
    \ environment rather than a mixed IPv4/IPv6 Internet.\n   Additional work has\
    \ been done to support mobility in mixed-mode IPv4\n   and IPv6 networks [RFC5555].\n\
    \   More usage and deployment experience is needed with mobility before\n   any\
    \ specific approach can be recommended for broad implementation in\n   all hosts\
    \ and routers.  Consequently, Mobility Support in IPv6\n   [RFC6275], Mobile IPv6\
    \ Support for Dual Stack Hosts and Routers\n   [RFC5555], and associated standards\
    \ (such as Mobile IPv6 with IKEv2\n   and IPsec [RFC4877]) are considered a MAY\
    \ at this time.\n   IPv6 for 3GPP [RFC7066] lists a snapshot of required IPv6\n\
    \   functionalities at the time the document was published that would\n   need\
    \ to be implemented, going above and beyond the recommendations in\n   this document.\
    \  Additionally, a 3GPP IPv6 Host MAY implement\n   [RFC7278] to deliver IPv6\
    \ prefixes on the LAN link.\n"
- title: 13.  Security
  contents:
  - "13.  Security\n   This section describes the security specification for IPv6\
    \ nodes.\n   Achieving security in practice is a complex undertaking.  Operational\n\
    \   procedures, protocols, key distribution mechanisms, certificate\n   management\
    \ approaches, etc., are all components that impact the level\n   of security actually\
    \ achieved in practice.  More importantly,\n   deficiencies or a poor fit in any\
    \ one individual component can\n   significantly reduce the overall effectiveness\
    \ of a particular\n   security approach.\n   IPsec can provide either end-to-end\
    \ security between nodes or channel\n   security (for example, via a site-to-site\
    \ IPsec VPN), making it\n   possible to provide secure communication for all (or\
    \ a subset of)\n   communication flows at the IP layer between pairs of Internet\
    \ nodes.\n   IPsec has two standard operating modes: Tunnel-mode and Transport-\n\
    \   mode.  In Tunnel-mode, IPsec provides network-layer security and\n   protects\
    \ an entire IP packet by encapsulating the original IP packet\n   and then prepending\
    \ a new IP header.  In Transport-mode, IPsec\n   provides security for the transport\
    \ layer (and above) by\n   encapsulating only the transport-layer (and above)\
    \ portion of the IP\n   packet (i.e., without adding a second IP header).\n  \
    \ Although IPsec can be used with manual keying in some cases, such\n   usage\
    \ has limited applicability and is not recommended.\n   A range of security technologies\
    \ and approaches proliferate today\n   (e.g., IPsec, Transport Layer Security\
    \ (TLS), Secure SHell (SSH), TLS\n   VPNS, etc.).  No single approach has emerged\
    \ as an ideal technology\n   for all needs and environments.  Moreover, IPsec\
    \ is not viewed as the\n   ideal security technology in all cases and is unlikely\
    \ to displace\n   the others.\n   Previously, IPv6 mandated implementation of\
    \ IPsec and recommended the\n   key-management approach of IKE.  RFC 6434 updated\
    \ that recommendation\n   by making support of the IPsec architecture [RFC4301]\
    \ a SHOULD for\n   all IPv6 nodes, and this document retains that recommendation.\
    \  Note\n   that the IPsec Architecture requires the implementation of both\n\
    \   manual and automatic key management (e.g., Section 4.5 of RFC 4301).\n   Currently,\
    \ the recommended automated key-management protocol to\n   implement is IKEv2\
    \ [RFC7296].\n   This document recognizes that there exists a range of device\
    \ types\n   and environments where approaches to security other than IPsec can\
    \ be\n   justified.  For example, special-purpose devices may support only a\n\
    \   very limited number or type of applications, and an application-\n   specific\
    \ security approach may be sufficient for limited management\n   or configuration\
    \ capabilities.  Alternatively, some devices may run\n   on extremely constrained\
    \ hardware (e.g., sensors) where the full\n   IPsec Architecture is not justified.\n\
    \   Because most common platforms now support IPv6 and have it enabled by\n  \
    \ default, IPv6 security is an issue for networks that are ostensibly\n   IPv4\
    \ only; see [RFC7123] for guidance on this area.\n"
- title: 13.1.  Requirements
  contents:
  - "13.1.  Requirements\n   \"Security Architecture for the Internet Protocol\" [RFC4301]\
    \ SHOULD be\n   supported by all IPv6 nodes.  Note that the IPsec Architecture\n\
    \   requires the implementation of both manual and automatic key\n   management\
    \ (e.g., Section 4.5 of [RFC4301]).  Currently, the default\n   automated key-management\
    \ protocol to implement is IKEv2.  As required\n   in [RFC4301], IPv6 nodes implementing\
    \ the IPsec Architecture MUST\n   implement ESP [RFC4303] and MAY implement AH\
    \ [RFC4302].\n"
- title: 13.2.  Transforms and Algorithms
  contents:
  - "13.2.  Transforms and Algorithms\n   The current set of mandatory-to-implement\
    \ algorithms for the IPsec\n   Architecture are defined in Cryptographic Algorithm\
    \ Implementation\n   Requirements for ESP and AH [RFC8221].  IPv6 nodes implementing\
    \ the\n   IPsec Architecture MUST conform to the requirements in [RFC8221].\n\
    \   Preferred cryptographic algorithms often change more frequently than\n   security\
    \ protocols.  Therefore, implementations MUST allow for\n   migration to new algorithms,\
    \ as RFC 8221 is replaced or updated in\n   the future.\n   The current set of\
    \ mandatory-to-implement algorithms for IKEv2 are\n   defined in Cryptographic\
    \ Algorithm Implementation Requirements for\n   ESP and AH [RFC8247].  IPv6 nodes\
    \ implementing IKEv2 MUST conform to\n   the requirements in [RFC8247] and/or\
    \ any future updates or\n   replacements to [RFC8247].\n"
- title: 14.  Router-Specific Functionality
  contents:
  - "14.  Router-Specific Functionality\n   This section defines general host considerations\
    \ for IPv6 nodes that\n   act as routers.  Currently, this section does not discuss\
    \ detailed\n   routing-specific requirements.  For the case of typical home routers,\n\
    \   [RFC7084] defines basic requirements for customer edge routers.\n"
- title: 14.1.  IPv6 Router Alert Option - RFC 2711
  contents:
  - "14.1.  IPv6 Router Alert Option - RFC 2711\n   The IPv6 Router Alert option [RFC2711]\
    \ is an optional IPv6 Hop-by-Hop\n   Header that is used in conjunction with some\
    \ protocols (e.g., RSVP\n   [RFC2205] or Multicast Listener Discovery (MLDv2)\
    \ [RFC3810]).  The\n   Router Alert option will need to be implemented whenever\
    \ such\n   protocols that mandate its use are implemented.  See Section 5.11.\n"
- title: 14.2.  Neighbor Discovery for IPv6 - RFC 4861
  contents:
  - "14.2.  Neighbor Discovery for IPv6 - RFC 4861\n   Sending Router Advertisements\
    \ and processing Router Solicitations\n   MUST be supported.\n   Section 7 of\
    \ [RFC6275] includes some mobility-specific extensions to\n   Neighbor Discovery.\
    \  Routers SHOULD implement Sections 7.3 and 7.5,\n   even if they do not implement\
    \ home agent functionality.\n"
- title: 14.3.  Stateful Address Autoconfiguration (DHCPv6) - RFC 3315
  contents:
  - "14.3.  Stateful Address Autoconfiguration (DHCPv6) - RFC 3315\n   A single DHCP\
    \ server ([RFC3315] or [RFC4862]) can provide\n   configuration information to\
    \ devices directly attached to a shared\n   link, as well as to devices located\
    \ elsewhere within a site.\n   Communication between a client and a DHCP server\
    \ located on different\n   links requires the use of DHCP relay agents on routers.\n\
    \   In simple deployments, consisting of a single router and either a\n   single\
    \ LAN or multiple LANs attached to the single router, together\n   with a WAN\
    \ connection, a DHCP server embedded within the router is\n   one common deployment\
    \ scenario (e.g., [RFC7084]).  There is no need\n   for relay agents in such scenarios.\n\
    \   In more complex deployment scenarios, such as within enterprise or\n   service\
    \ provider networks, the use of DHCP requires some level of\n   configuration,\
    \ in order to configure relay agents, DHCP servers, etc.\n   In such environments,\
    \ the DHCP server might even be run on a\n   traditional server, rather than as\
    \ part of a router.\n   Because of the wide range of deployment scenarios, support\
    \ for DHCP\n   server functionality on routers is optional.  However, routers\n\
    \   targeted for deployment within more complex scenarios (as described\n   above)\
    \ SHOULD support relay agent functionality.  Note that \"Basic\n   Requirements\
    \ for IPv6 Customer Edge Routers\" [RFC7084] requires\n   implementation of a\
    \ DHCPv6 server function in IPv6 Customer Edge (CE)\n   routers.\n"
- title: 14.4.  IPv6 Prefix Length Recommendation for Forwarding - BCP 198
  contents:
  - "14.4.  IPv6 Prefix Length Recommendation for Forwarding - BCP 198\n   Forwarding\
    \ nodes MUST conform to BCP 198 [RFC7608]; thus, IPv6\n   implementations of nodes\
    \ that may forward packets MUST conform to the\n   rules specified in Section\
    \ 5.1 of [RFC4632].\n"
- title: 15.  Constrained Devices
  contents:
  - "15.  Constrained Devices\n   The focus of this document is general IPv6 nodes.\
    \  In this section,\n   we briefly discuss considerations for constrained devices.\n\
    \   In the case of constrained nodes, with limited CPU, memory, bandwidth\n  \
    \ or power, support for certain IPv6 functionality may need to be\n   considered\
    \ due to those limitations.  While the requirements of this\n   document are RECOMMENDED\
    \ for all nodes, including constrained nodes,\n   compromises may need to be made\
    \ in certain cases.  Where such\n   compromises are made, the interoperability\
    \ of devices should be\n   strongly considered, particularly where this may impact\
    \ other nodes\n   on the same link, e.g., only supporting MLDv1 will affect other\n\
    \   nodes.\n   The IETF 6LowPAN (IPv6 over Low-Power Wireless Personal Area Network)\n\
    \   WG produced six RFCs, including a general overview and problem\n   statement\
    \ [RFC4919] (the means by which IPv6 packets are transmitted\n   over IEEE 802.15.4\
    \ networks [RFC4944] and ND optimizations for that\n   medium [RFC6775]).\n  \
    \ IPv6 nodes that are battery powered SHOULD implement the\n   recommendations\
    \ in [RFC7772].\n"
- title: 16.  IPv6 Node Management
  contents:
  - "16.  IPv6 Node Management\n   Network management MAY be supported by IPv6 nodes.\
    \  However, for IPv6\n   nodes that are embedded devices, network management may\
    \ be the only\n   possible way of controlling these nodes.\n   Existing network\
    \ management protocols include SNMP [RFC3411], NETCONF\n   [RFC6241], and RESTCONF\
    \ [RFC8040].\n"
- title: 16.1.  Management Information Base (MIB) Modules
  contents:
  - "16.1.  Management Information Base (MIB) Modules\n   The obsoleted status of\
    \ various IPv6-specific MIB modules is\n   clarified in [RFC8096].\n   The following\
    \ two MIB modules SHOULD be supported by nodes that\n   support an SNMP agent.\n"
- title: 16.1.1.  IP Forwarding Table MIB
  contents:
  - "16.1.1.  IP Forwarding Table MIB\n   The IP Forwarding Table MIB [RFC4292] SHOULD\
    \ be supported by nodes\n   that support an SNMP agent.\n"
- title: 16.1.2.  Management Information Base for the Internet Protocol (IP)
  contents:
  - "16.1.2.  Management Information Base for the Internet Protocol (IP)\n   The IP\
    \ MIB [RFC4293] SHOULD be supported by nodes that support an\n   SNMP agent.\n"
- title: 16.1.3.  Interface MIB
  contents:
  - "16.1.3.  Interface MIB\n   The Interface MIB [RFC2863] SHOULD be supported by\
    \ nodes that support\n   an SNMP agent.\n"
- title: 16.2.  YANG Data Models
  contents:
  - "16.2.  YANG Data Models\n   The following YANG data models SHOULD be supported\
    \ by nodes that\n   support a NETCONF or RESTCONF agent.\n"
- title: 16.2.1.  IP Management YANG Model
  contents:
  - "16.2.1.  IP Management YANG Model\n   The IP Management YANG Model [RFC8344]\
    \ SHOULD be supported by nodes\n   that support NETCONF or RESTCONF.\n"
- title: 16.2.2.  Interface Management YANG Model
  contents:
  - "16.2.2.  Interface Management YANG Model\n   The Interface Management YANG Model\
    \ [RFC8343] SHOULD be supported by\n   nodes that support NETCONF or RESTCONF.\n"
- title: 17.  Security Considerations
  contents:
  - "17.  Security Considerations\n   This document does not directly affect the security\
    \ of the Internet,\n   beyond the security considerations associated with the\
    \ individual\n   protocols.\n   Security is also discussed in Section 13 above.\n"
- title: 18.  IANA Considerations
  contents:
  - "18.  IANA Considerations\n   This document has no IANA actions.\n"
- title: 19.  References
  contents:
  - '19.  References

    '
- title: 19.1.  Normative References
  contents:
  - "19.1.  Normative References\n   [RFC1034]  Mockapetris, P., \"Domain names -\
    \ concepts and facilities\",\n              STD 13, RFC 1034, DOI 10.17487/RFC1034,\
    \ November 1987,\n              <https://www.rfc-editor.org/info/rfc1034>.\n \
    \  [RFC1035]  Mockapetris, P., \"Domain names - implementation and\n         \
    \     specification\", STD 13, RFC 1035, DOI 10.17487/RFC1035,\n             \
    \ November 1987, <https://www.rfc-editor.org/info/rfc1035>.\n   [RFC2119]  Bradner,\
    \ S., \"Key words for use in RFCs to Indicate\n              Requirement Levels\"\
    , BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n       \
    \       <https://www.rfc-editor.org/info/rfc2119>.\n   [RFC2710]  Deering, S.,\
    \ Fenner, W., and B. Haberman, \"Multicast\n              Listener Discovery (MLD)\
    \ for IPv6\", RFC 2710,\n              DOI 10.17487/RFC2710, October 1999,\n \
    \             <https://www.rfc-editor.org/info/rfc2710>.\n   [RFC2711]  Partridge,\
    \ C. and A. Jackson, \"IPv6 Router Alert Option\",\n              RFC 2711, DOI\
    \ 10.17487/RFC2711, October 1999,\n              <https://www.rfc-editor.org/info/rfc2711>.\n\
    \   [RFC2863]  McCloghrie, K. and F. Kastenholz, \"The Interfaces Group\n    \
    \          MIB\", RFC 2863, DOI 10.17487/RFC2863, June 2000,\n              <https://www.rfc-editor.org/info/rfc2863>.\n\
    \   [RFC3168]  Ramakrishnan, K., Floyd, S., and D. Black, \"The Addition\n   \
    \           of Explicit Congestion Notification (ECN) to IP\",\n             \
    \ RFC 3168, DOI 10.17487/RFC3168, September 2001,\n              <https://www.rfc-editor.org/info/rfc3168>.\n\
    \   [RFC3315]  Droms, R., Ed., Bound, J., Volz, B., Lemon, T., Perkins,\n    \
    \          C., and M. Carney, \"Dynamic Host Configuration Protocol\n        \
    \      for IPv6 (DHCPv6)\", RFC 3315, DOI 10.17487/RFC3315, July\n           \
    \   2003, <https://www.rfc-editor.org/info/rfc3315>.\n   [RFC3411]  Harrington,\
    \ D., Presuhn, R., and B. Wijnen, \"An\n              Architecture for Describing\
    \ Simple Network Management\n              Protocol (SNMP) Management Frameworks\"\
    , STD 62, RFC 3411,\n              DOI 10.17487/RFC3411, December 2002,\n    \
    \          <https://www.rfc-editor.org/info/rfc3411>.\n   [RFC3596]  Thomson,\
    \ S., Huitema, C., Ksinant, V., and M. Souissi,\n              \"DNS Extensions\
    \ to Support IP Version 6\", STD 88,\n              RFC 3596, DOI 10.17487/RFC3596,\
    \ October 2003,\n              <https://www.rfc-editor.org/info/rfc3596>.\n  \
    \ [RFC3736]  Droms, R., \"Stateless Dynamic Host Configuration Protocol\n    \
    \          (DHCP) Service for IPv6\", RFC 3736, DOI 10.17487/RFC3736,\n      \
    \        April 2004, <https://www.rfc-editor.org/info/rfc3736>.\n   [RFC3810]\
    \  Vida, R., Ed. and L. Costa, Ed., \"Multicast Listener\n              Discovery\
    \ Version 2 (MLDv2) for IPv6\", RFC 3810,\n              DOI 10.17487/RFC3810,\
    \ June 2004,\n              <https://www.rfc-editor.org/info/rfc3810>.\n   [RFC4033]\
    \  Arends, R., Austein, R., Larson, M., Massey, D., and\n              S. Rose,\
    \ \"DNS Security Introduction and Requirements\",\n              RFC 4033, DOI\
    \ 10.17487/RFC4033, March 2005,\n              <https://www.rfc-editor.org/info/rfc4033>.\n\
    \   [RFC4034]  Arends, R., Austein, R., Larson, M., Massey, D., and\n        \
    \      S. Rose, \"Resource Records for the DNS Security\n              Extensions\"\
    , RFC 4034, DOI 10.17487/RFC4034, March 2005,\n              <https://www.rfc-editor.org/info/rfc4034>.\n\
    \   [RFC4035]  Arends, R., Austein, R., Larson, M., Massey, D., and\n        \
    \      S. Rose, \"Protocol Modifications for the DNS Security\n              Extensions\"\
    , RFC 4035, DOI 10.17487/RFC4035, March 2005,\n              <https://www.rfc-editor.org/info/rfc4035>.\n\
    \   [RFC4213]  Nordmark, E. and R. Gilligan, \"Basic Transition Mechanisms\n \
    \             for IPv6 Hosts and Routers\", RFC 4213,\n              DOI 10.17487/RFC4213,\
    \ October 2005,\n              <https://www.rfc-editor.org/info/rfc4213>.\n  \
    \ [RFC4291]  Hinden, R. and S. Deering, \"IP Version 6 Addressing\n          \
    \    Architecture\", RFC 4291, DOI 10.17487/RFC4291, February\n              2006,\
    \ <https://www.rfc-editor.org/info/rfc4291>.\n   [RFC4292]  Haberman, B., \"IP\
    \ Forwarding Table MIB\", RFC 4292,\n              DOI 10.17487/RFC4292, April\
    \ 2006,\n              <https://www.rfc-editor.org/info/rfc4292>.\n   [RFC4293]\
    \  Routhier, S., Ed., \"Management Information Base for the\n              Internet\
    \ Protocol (IP)\", RFC 4293, DOI 10.17487/RFC4293,\n              April 2006,\
    \ <https://www.rfc-editor.org/info/rfc4293>.\n   [RFC4301]  Kent, S. and K. Seo,\
    \ \"Security Architecture for the\n              Internet Protocol\", RFC 4301,\
    \ DOI 10.17487/RFC4301,\n              December 2005, <https://www.rfc-editor.org/info/rfc4301>.\n\
    \   [RFC4303]  Kent, S., \"IP Encapsulating Security Payload (ESP)\",\n      \
    \        RFC 4303, DOI 10.17487/RFC4303, December 2005,\n              <https://www.rfc-editor.org/info/rfc4303>.\n\
    \   [RFC4311]  Hinden, R. and D. Thaler, \"IPv6 Host-to-Router Load\n        \
    \      Sharing\", RFC 4311, DOI 10.17487/RFC4311, November 2005,\n           \
    \   <https://www.rfc-editor.org/info/rfc4311>.\n   [RFC4443]  Conta, A., Deering,\
    \ S., and M. Gupta, Ed., \"Internet\n              Control Message Protocol (ICMPv6)\
    \ for the Internet\n              Protocol Version 6 (IPv6) Specification\", STD\
    \ 89,\n              RFC 4443, DOI 10.17487/RFC4443, March 2006,\n           \
    \   <https://www.rfc-editor.org/info/rfc4443>.\n   [RFC4607]  Holbrook, H. and\
    \ B. Cain, \"Source-Specific Multicast for\n              IP\", RFC 4607, DOI\
    \ 10.17487/RFC4607, August 2006,\n              <https://www.rfc-editor.org/info/rfc4607>.\n\
    \   [RFC4632]  Fuller, V. and T. Li, \"Classless Inter-domain Routing\n      \
    \        (CIDR): The Internet Address Assignment and Aggregation\n           \
    \   Plan\", BCP 122, RFC 4632, DOI 10.17487/RFC4632, August\n              2006,\
    \ <https://www.rfc-editor.org/info/rfc4632>.\n   [RFC4861]  Narten, T., Nordmark,\
    \ E., Simpson, W., and H. Soliman,\n              \"Neighbor Discovery for IP\
    \ version 6 (IPv6)\", RFC 4861,\n              DOI 10.17487/RFC4861, September\
    \ 2007,\n              <https://www.rfc-editor.org/info/rfc4861>.\n   [RFC4862]\
    \  Thomson, S., Narten, T., and T. Jinmei, \"IPv6 Stateless\n              Address\
    \ Autoconfiguration\", RFC 4862,\n              DOI 10.17487/RFC4862, September\
    \ 2007,\n              <https://www.rfc-editor.org/info/rfc4862>.\n   [RFC4941]\
    \  Narten, T., Draves, R., and S. Krishnan, \"Privacy\n              Extensions\
    \ for Stateless Address Autoconfiguration in\n              IPv6\", RFC 4941,\
    \ DOI 10.17487/RFC4941, September 2007,\n              <https://www.rfc-editor.org/info/rfc4941>.\n\
    \   [RFC5095]  Abley, J., Savola, P., and G. Neville-Neil, \"Deprecation\n   \
    \           of Type 0 Routing Headers in IPv6\", RFC 5095,\n              DOI\
    \ 10.17487/RFC5095, December 2007,\n              <https://www.rfc-editor.org/info/rfc5095>.\n\
    \   [RFC5453]  Krishnan, S., \"Reserved IPv6 Interface Identifiers\",\n      \
    \        RFC 5453, DOI 10.17487/RFC5453, February 2009,\n              <https://www.rfc-editor.org/info/rfc5453>.\n\
    \   [RFC5722]  Krishnan, S., \"Handling of Overlapping IPv6 Fragments\",\n   \
    \           RFC 5722, DOI 10.17487/RFC5722, December 2009,\n              <https://www.rfc-editor.org/info/rfc5722>.\n\
    \   [RFC5790]  Liu, H., Cao, W., and H. Asaeda, \"Lightweight Internet\n     \
    \         Group Management Protocol Version 3 (IGMPv3) and Multicast\n       \
    \       Listener Discovery Version 2 (MLDv2) Protocols\", RFC 5790,\n        \
    \      DOI 10.17487/RFC5790, February 2010,\n              <https://www.rfc-editor.org/info/rfc5790>.\n\
    \   [RFC5942]  Singh, H., Beebee, W., and E. Nordmark, \"IPv6 Subnet\n       \
    \       Model: The Relationship between Links and Subnet\n              Prefixes\"\
    , RFC 5942, DOI 10.17487/RFC5942, July 2010,\n              <https://www.rfc-editor.org/info/rfc5942>.\n\
    \   [RFC5952]  Kawamura, S. and M. Kawashima, \"A Recommendation for IPv6\n  \
    \            Address Text Representation\", RFC 5952,\n              DOI 10.17487/RFC5952,\
    \ August 2010,\n              <https://www.rfc-editor.org/info/rfc5952>.\n   [RFC6241]\
    \  Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,\n              and\
    \ A. Bierman, Ed., \"Network Configuration Protocol\n              (NETCONF)\"\
    , RFC 6241, DOI 10.17487/RFC6241, June 2011,\n              <https://www.rfc-editor.org/info/rfc6241>.\n\
    \   [RFC6437]  Amante, S., Carpenter, B., Jiang, S., and J. Rajahalme,\n     \
    \         \"IPv6 Flow Label Specification\", RFC 6437,\n              DOI 10.17487/RFC6437,\
    \ November 2011,\n              <https://www.rfc-editor.org/info/rfc6437>.\n \
    \  [RFC6564]  Krishnan, S., Woodyatt, J., Kline, E., Hoagland, J., and\n     \
    \         M. Bhatia, \"A Uniform Format for IPv6 Extension Headers\",\n      \
    \        RFC 6564, DOI 10.17487/RFC6564, April 2012,\n              <https://www.rfc-editor.org/info/rfc6564>.\n\
    \   [RFC6724]  Thaler, D., Ed., Draves, R., Matsumoto, A., and T. Chown,\n   \
    \           \"Default Address Selection for Internet Protocol Version 6\n    \
    \          (IPv6)\", RFC 6724, DOI 10.17487/RFC6724, September 2012,\n       \
    \       <https://www.rfc-editor.org/info/rfc6724>.\n   [RFC6762]  Cheshire, S.\
    \ and M. Krochmal, \"Multicast DNS\", RFC 6762,\n              DOI 10.17487/RFC6762,\
    \ February 2013,\n              <https://www.rfc-editor.org/info/rfc6762>.\n \
    \  [RFC6763]  Cheshire, S. and M. Krochmal, \"DNS-Based Service\n            \
    \  Discovery\", RFC 6763, DOI 10.17487/RFC6763, February 2013,\n             \
    \ <https://www.rfc-editor.org/info/rfc6763>.\n   [RFC6775]  Shelby, Z., Ed., Chakrabarti,\
    \ S., Nordmark, E., and\n              C. Bormann, \"Neighbor Discovery Optimization\
    \ for IPv6 over\n              Low-Power Wireless Personal Area Networks (6LoWPANs)\"\
    ,\n              RFC 6775, DOI 10.17487/RFC6775, November 2012,\n            \
    \  <https://www.rfc-editor.org/info/rfc6775>.\n   [RFC6891]  Damas, J., Graff,\
    \ M., and P. Vixie, \"Extension Mechanisms\n              for DNS (EDNS(0))\"\
    , STD 75, RFC 6891,\n              DOI 10.17487/RFC6891, April 2013,\n       \
    \       <https://www.rfc-editor.org/info/rfc6891>.\n   [RFC6946]  Gont, F., \"\
    Processing of IPv6 \"Atomic\" Fragments\",\n              RFC 6946, DOI 10.17487/RFC6946,\
    \ May 2013,\n              <https://www.rfc-editor.org/info/rfc6946>.\n   [RFC7045]\
    \  Carpenter, B. and S. Jiang, \"Transmission and Processing\n              of\
    \ IPv6 Extension Headers\", RFC 7045,\n              DOI 10.17487/RFC7045, December\
    \ 2013,\n              <https://www.rfc-editor.org/info/rfc7045>.\n   [RFC7048]\
    \  Nordmark, E. and I. Gashinsky, \"Neighbor Unreachability\n              Detection\
    \ Is Too Impatient\", RFC 7048,\n              DOI 10.17487/RFC7048, January 2014,\n\
    \              <https://www.rfc-editor.org/info/rfc7048>.\n   [RFC7112]  Gont,\
    \ F., Manral, V., and R. Bonica, \"Implications of\n              Oversized IPv6\
    \ Header Chains\", RFC 7112,\n              DOI 10.17487/RFC7112, January 2014,\n\
    \              <https://www.rfc-editor.org/info/rfc7112>.\n   [RFC7217]  Gont,\
    \ F., \"A Method for Generating Semantically Opaque\n              Interface Identifiers\
    \ with IPv6 Stateless Address\n              Autoconfiguration (SLAAC)\", RFC\
    \ 7217,\n              DOI 10.17487/RFC7217, April 2014,\n              <https://www.rfc-editor.org/info/rfc7217>.\n\
    \   [RFC7296]  Kaufman, C., Hoffman, P., Nir, Y., Eronen, P., and\n          \
    \    T. Kivinen, \"Internet Key Exchange Protocol Version 2\n              (IKEv2)\"\
    , STD 79, RFC 7296, DOI 10.17487/RFC7296, October\n              2014, <https://www.rfc-editor.org/info/rfc7296>.\n\
    \   [RFC7527]  Asati, R., Singh, H., Beebee, W., Pignataro, C., Dart, E.,\n  \
    \            and W. George, \"Enhanced Duplicate Address Detection\",\n      \
    \        RFC 7527, DOI 10.17487/RFC7527, April 2015,\n              <https://www.rfc-editor.org/info/rfc7527>.\n\
    \   [RFC7559]  Krishnan, S., Anipko, D., and D. Thaler, \"Packet-Loss\n      \
    \        Resiliency for Router Solicitations\", RFC 7559,\n              DOI 10.17487/RFC7559,\
    \ May 2015,\n              <https://www.rfc-editor.org/info/rfc7559>.\n   [RFC7608]\
    \  Boucadair, M., Petrescu, A., and F. Baker, \"IPv6 Prefix\n              Length\
    \ Recommendation for Forwarding\", BCP 198, RFC 7608,\n              DOI 10.17487/RFC7608,\
    \ July 2015,\n              <https://www.rfc-editor.org/info/rfc7608>.\n   [RFC8021]\
    \  Gont, F., Liu, W., and T. Anderson, \"Generation of IPv6\n              Atomic\
    \ Fragments Considered Harmful\", RFC 8021,\n              DOI 10.17487/RFC8021,\
    \ January 2017,\n              <https://www.rfc-editor.org/info/rfc8021>.\n  \
    \ [RFC8028]  Baker, F. and B. Carpenter, \"First-Hop Router Selection by\n   \
    \           Hosts in a Multi-Prefix Network\", RFC 8028,\n              DOI 10.17487/RFC8028,\
    \ November 2016,\n              <https://www.rfc-editor.org/info/rfc8028>.\n \
    \  [RFC8040]  Bierman, A., Bjorklund, M., and K. Watsen, \"RESTCONF\n        \
    \      Protocol\", RFC 8040, DOI 10.17487/RFC8040, January 2017,\n           \
    \   <https://www.rfc-editor.org/info/rfc8040>.\n   [RFC8064]  Gont, F., Cooper,\
    \ A., Thaler, D., and W. Liu,\n              \"Recommendation on Stable IPv6 Interface\
    \ Identifiers\",\n              RFC 8064, DOI 10.17487/RFC8064, February 2017,\n\
    \              <https://www.rfc-editor.org/info/rfc8064>.\n   [RFC8106]  Jeong,\
    \ J., Park, S., Beloeil, L., and S. Madanapalli,\n              \"IPv6 Router\
    \ Advertisement Options for DNS Configuration\",\n              RFC 8106, DOI\
    \ 10.17487/RFC8106, March 2017,\n              <https://www.rfc-editor.org/info/rfc8106>.\n\
    \   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n     \
    \         2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n        \
    \      May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8200]  Deering,\
    \ S. and R. Hinden, \"Internet Protocol, Version 6\n              (IPv6) Specification\"\
    , STD 86, RFC 8200,\n              DOI 10.17487/RFC8200, July 2017,\n        \
    \      <https://www.rfc-editor.org/info/rfc8200>.\n   [RFC8201]  McCann, J., Deering,\
    \ S., Mogul, J., and R. Hinden, Ed.,\n              \"Path MTU Discovery for IP\
    \ version 6\", STD 87, RFC 8201,\n              DOI 10.17487/RFC8201, July 2017,\n\
    \              <https://www.rfc-editor.org/info/rfc8201>.\n   [RFC8221]  Wouters,\
    \ P., Migault, D., Mattsson, J., Nir, Y., and\n              T. Kivinen, \"Cryptographic\
    \ Algorithm Implementation\n              Requirements and Usage Guidance for\
    \ Encapsulating Security\n              Payload (ESP) and Authentication Header\
    \ (AH)\", RFC 8221,\n              DOI 10.17487/RFC8221, October 2017,\n     \
    \         <https://www.rfc-editor.org/info/rfc8221>.\n   [RFC8247]  Nir, Y., Kivinen,\
    \ T., Wouters, P., and D. Migault,\n              \"Algorithm Implementation Requirements\
    \ and Usage Guidance\n              for the Internet Key Exchange Protocol Version\
    \ 2 (IKEv2)\",\n              RFC 8247, DOI 10.17487/RFC8247, September 2017,\n\
    \              <https://www.rfc-editor.org/info/rfc8247>.\n   [RFC8343]  Bjorklund,\
    \ M., \"A YANG Data Model for Interface\n              Management\", RFC 8343,\
    \ DOI 10.17487/RFC8343, March 2018,\n              <https://www.rfc-editor.org/info/rfc8343>.\n\
    \   [RFC8344]  Bjorklund, M., \"A YANG Data Model for IP Management\",\n     \
    \         RFC 8344, DOI 10.17487/RFC8344, March 2018,\n              <https://www.rfc-editor.org/info/rfc8344>.\n"
- title: 19.2.  Informative References
  contents:
  - "19.2.  Informative References\n   [RFC793]   Postel, J., \"Transmission Control\
    \ Protocol\", STD 7,\n              RFC 793, DOI 10.17487/RFC0793, September 1981,\n\
    \              <https://www.rfc-editor.org/info/rfc793>.\n   [RFC2205]  Braden,\
    \ R., Ed., Zhang, L., Berson, S., Herzog, S., and\n              S. Jamin, \"\
    Resource ReSerVation Protocol (RSVP) -- Version\n              1 Functional Specification\"\
    , RFC 2205,\n              DOI 10.17487/RFC2205, September 1997,\n           \
    \   <https://www.rfc-editor.org/info/rfc2205>.\n   [RFC2464]  Crawford, M., \"\
    Transmission of IPv6 Packets over Ethernet\n              Networks\", RFC 2464,\
    \ DOI 10.17487/RFC2464, December 1998,\n              <https://www.rfc-editor.org/info/rfc2464>.\n\
    \   [RFC2491]  Armitage, G., Schulter, P., Jork, M., and G. Harter, \"IPv6\n \
    \             over Non-Broadcast Multiple Access (NBMA) networks\",\n        \
    \      RFC 2491, DOI 10.17487/RFC2491, January 1999,\n              <https://www.rfc-editor.org/info/rfc2491>.\n\
    \   [RFC2590]  Conta, A., Malis, A., and M. Mueller, \"Transmission of\n     \
    \         IPv6 Packets over Frame Relay Networks Specification\",\n          \
    \    RFC 2590, DOI 10.17487/RFC2590, May 1999,\n              <https://www.rfc-editor.org/info/rfc2590>.\n\
    \   [RFC2874]  Crawford, M. and C. Huitema, \"DNS Extensions to Support\n    \
    \          IPv6 Address Aggregation and Renumbering\", RFC 2874,\n           \
    \   DOI 10.17487/RFC2874, July 2000,\n              <https://www.rfc-editor.org/info/rfc2874>.\n\
    \   [RFC2923]  Lahey, K., \"TCP Problems with Path MTU Discovery\",\n        \
    \      RFC 2923, DOI 10.17487/RFC2923, September 2000,\n              <https://www.rfc-editor.org/info/rfc2923>.\n\
    \   [RFC3146]  Fujisawa, K. and A. Onoe, \"Transmission of IPv6 Packets\n    \
    \          over IEEE 1394 Networks\", RFC 3146, DOI 10.17487/RFC3146,\n      \
    \        October 2001, <https://www.rfc-editor.org/info/rfc3146>.\n   [RFC3363]\
    \  Bush, R., Durand, A., Fink, B., Gudmundsson, O., and\n              T. Hain,\
    \ \"Representing Internet Protocol version 6 (IPv6)\n              Addresses in\
    \ the Domain Name System (DNS)\", RFC 3363,\n              DOI 10.17487/RFC3363,\
    \ August 2002,\n              <https://www.rfc-editor.org/info/rfc3363>.\n   [RFC3493]\
    \  Gilligan, R., Thomson, S., Bound, J., McCann, J., and\n              W. Stevens,\
    \ \"Basic Socket Interface Extensions for IPv6\",\n              RFC 3493, DOI\
    \ 10.17487/RFC3493, February 2003,\n              <https://www.rfc-editor.org/info/rfc3493>.\n\
    \   [RFC3542]  Stevens, W., Thomas, M., Nordmark, E., and T. Jinmei,\n       \
    \       \"Advanced Sockets Application Program Interface (API) for\n         \
    \     IPv6\", RFC 3542, DOI 10.17487/RFC3542, May 2003,\n              <https://www.rfc-editor.org/info/rfc3542>.\n\
    \   [RFC3646]  Droms, R., Ed., \"DNS Configuration options for Dynamic\n     \
    \         Host Configuration Protocol for IPv6 (DHCPv6)\", RFC 3646,\n       \
    \       DOI 10.17487/RFC3646, December 2003,\n              <https://www.rfc-editor.org/info/rfc3646>.\n\
    \   [RFC3678]  Thaler, D., Fenner, B., and B. Quinn, \"Socket Interface\n    \
    \          Extensions for Multicast Source Filters\", RFC 3678,\n            \
    \  DOI 10.17487/RFC3678, January 2004,\n              <https://www.rfc-editor.org/info/rfc3678>.\n\
    \   [RFC3776]  Arkko, J., Devarapalli, V., and F. Dupont, \"Using IPsec to\n \
    \             Protect Mobile IPv6 Signaling Between Mobile Nodes and\n       \
    \       Home Agents\", RFC 3776, DOI 10.17487/RFC3776, June 2004,\n          \
    \    <https://www.rfc-editor.org/info/rfc3776>.\n   [RFC3971]  Arkko, J., Ed.,\
    \ Kempf, J., Zill, B., and P. Nikander,\n              \"SEcure Neighbor Discovery\
    \ (SEND)\", RFC 3971,\n              DOI 10.17487/RFC3971, March 2005,\n     \
    \         <https://www.rfc-editor.org/info/rfc3971>.\n   [RFC3972]  Aura, T.,\
    \ \"Cryptographically Generated Addresses (CGA)\",\n              RFC 3972, DOI\
    \ 10.17487/RFC3972, March 2005,\n              <https://www.rfc-editor.org/info/rfc3972>.\n\
    \   [RFC4191]  Draves, R. and D. Thaler, \"Default Router Preferences and\n  \
    \            More-Specific Routes\", RFC 4191, DOI 10.17487/RFC4191,\n       \
    \       November 2005, <https://www.rfc-editor.org/info/rfc4191>.\n   [RFC4294]\
    \  Loughney, J., Ed., \"IPv6 Node Requirements\", RFC 4294,\n              DOI\
    \ 10.17487/RFC4294, April 2006,\n              <https://www.rfc-editor.org/info/rfc4294>.\n\
    \   [RFC4302]  Kent, S., \"IP Authentication Header\", RFC 4302,\n           \
    \   DOI 10.17487/RFC4302, December 2005,\n              <https://www.rfc-editor.org/info/rfc4302>.\n\
    \   [RFC4338]  DeSanti, C., Carlson, C., and R. Nixon, \"Transmission of\n   \
    \           IPv6, IPv4, and Address Resolution Protocol (ARP) Packets\n      \
    \        over Fibre Channel\", RFC 4338, DOI 10.17487/RFC4338,\n             \
    \ January 2006, <https://www.rfc-editor.org/info/rfc4338>.\n   [RFC4380]  Huitema,\
    \ C., \"Teredo: Tunneling IPv6 over UDP through\n              Network Address\
    \ Translations (NATs)\", RFC 4380,\n              DOI 10.17487/RFC4380, February\
    \ 2006,\n              <https://www.rfc-editor.org/info/rfc4380>.\n   [RFC4429]\
    \  Moore, N., \"Optimistic Duplicate Address Detection (DAD)\n              for\
    \ IPv6\", RFC 4429, DOI 10.17487/RFC4429, April 2006,\n              <https://www.rfc-editor.org/info/rfc4429>.\n\
    \   [RFC4584]  Chakrabarti, S. and E. Nordmark, \"Extension to Sockets API\n \
    \             for Mobile IPv6\", RFC 4584, DOI 10.17487/RFC4584, July\n      \
    \        2006, <https://www.rfc-editor.org/info/rfc4584>.\n   [RFC4821]  Mathis,\
    \ M. and J. Heffner, \"Packetization Layer Path MTU\n              Discovery\"\
    , RFC 4821, DOI 10.17487/RFC4821, March 2007,\n              <https://www.rfc-editor.org/info/rfc4821>.\n\
    \   [RFC4877]  Devarapalli, V. and F. Dupont, \"Mobile IPv6 Operation with\n \
    \             IKEv2 and the Revised IPsec Architecture\", RFC 4877,\n        \
    \      DOI 10.17487/RFC4877, April 2007,\n              <https://www.rfc-editor.org/info/rfc4877>.\n\
    \   [RFC4884]  Bonica, R., Gan, D., Tappan, D., and C. Pignataro,\n          \
    \    \"Extended ICMP to Support Multi-Part Messages\", RFC 4884,\n           \
    \   DOI 10.17487/RFC4884, April 2007,\n              <https://www.rfc-editor.org/info/rfc4884>.\n\
    \   [RFC4890]  Davies, E. and J. Mohacsi, \"Recommendations for Filtering\n  \
    \            ICMPv6 Messages in Firewalls\", RFC 4890,\n              DOI 10.17487/RFC4890,\
    \ May 2007,\n              <https://www.rfc-editor.org/info/rfc4890>.\n   [RFC4919]\
    \  Kushalnagar, N., Montenegro, G., and C. Schumacher, \"IPv6\n              over\
    \ Low-Power Wireless Personal Area Networks (6LoWPANs):\n              Overview,\
    \ Assumptions, Problem Statement, and Goals\",\n              RFC 4919, DOI 10.17487/RFC4919,\
    \ August 2007,\n              <https://www.rfc-editor.org/info/rfc4919>.\n   [RFC4944]\
    \  Montenegro, G., Kushalnagar, N., Hui, J., and D. Culler,\n              \"\
    Transmission of IPv6 Packets over IEEE 802.15.4\n              Networks\", RFC\
    \ 4944, DOI 10.17487/RFC4944, September 2007,\n              <https://www.rfc-editor.org/info/rfc4944>.\n\
    \   [RFC5014]  Nordmark, E., Chakrabarti, S., and J. Laganier, \"IPv6\n      \
    \        Socket API for Source Address Selection\", RFC 5014,\n              DOI\
    \ 10.17487/RFC5014, September 2007,\n              <https://www.rfc-editor.org/info/rfc5014>.\n\
    \   [RFC5072]  Varada, S., Ed., Haskins, D., and E. Allen, \"IP Version 6\n  \
    \            over PPP\", RFC 5072, DOI 10.17487/RFC5072, September 2007,\n   \
    \           <https://www.rfc-editor.org/info/rfc5072>.\n   [RFC5121]  Patil, B.,\
    \ Xia, F., Sarikaya, B., Choi, JH., and\n              S. Madanapalli, \"Transmission\
    \ of IPv6 via the IPv6\n              Convergence Sublayer over IEEE 802.16 Networks\"\
    , RFC 5121,\n              DOI 10.17487/RFC5121, February 2008,\n            \
    \  <https://www.rfc-editor.org/info/rfc5121>.\n   [RFC5555]  Soliman, H., Ed.,\
    \ \"Mobile IPv6 Support for Dual Stack\n              Hosts and Routers\", RFC\
    \ 5555, DOI 10.17487/RFC5555, June\n              2009, <https://www.rfc-editor.org/info/rfc5555>.\n\
    \   [RFC6275]  Perkins, C., Ed., Johnson, D., and J. Arkko, \"Mobility\n     \
    \         Support in IPv6\", RFC 6275, DOI 10.17487/RFC6275, July\n          \
    \    2011, <https://www.rfc-editor.org/info/rfc6275>.\n   [RFC6563]  Jiang, S.,\
    \ Conrad, D., and B. Carpenter, \"Moving A6 to\n              Historic Status\"\
    , RFC 6563, DOI 10.17487/RFC6563, March\n              2012, <https://www.rfc-editor.org/info/rfc6563>.\n\
    \   [RFC6980]  Gont, F., \"Security Implications of IPv6 Fragmentation\n     \
    \         with IPv6 Neighbor Discovery\", RFC 6980,\n              DOI 10.17487/RFC6980,\
    \ August 2013,\n              <https://www.rfc-editor.org/info/rfc6980>.\n   [RFC7066]\
    \  Korhonen, J., Ed., Arkko, J., Ed., Savolainen, T., and S.\n              Krishnan,\
    \ \"IPv6 for Third Generation Partnership Project\n              (3GPP) Cellular\
    \ Hosts\", RFC 7066, DOI 10.17487/RFC7066,\n              November 2013, <https://www.rfc-editor.org/info/rfc7066>.\n\
    \   [RFC7084]  Singh, H., Beebee, W., Donley, C., and B. Stark, \"Basic\n    \
    \          Requirements for IPv6 Customer Edge Routers\", RFC 7084,\n        \
    \      DOI 10.17487/RFC7084, November 2013,\n              <https://www.rfc-editor.org/info/rfc7084>.\n\
    \   [RFC7123]  Gont, F. and W. Liu, \"Security Implications of IPv6 on\n     \
    \         IPv4 Networks\", RFC 7123, DOI 10.17487/RFC7123, February\n        \
    \      2014, <https://www.rfc-editor.org/info/rfc7123>.\n   [RFC7278]  Byrne,\
    \ C., Drown, D., and A. Vizdal, \"Extending an IPv6\n              /64 Prefix\
    \ from a Third Generation Partnership Project\n              (3GPP) Mobile Interface\
    \ to a LAN Link\", RFC 7278,\n              DOI 10.17487/RFC7278, June 2014,\n\
    \              <https://www.rfc-editor.org/info/rfc7278>.\n   [RFC7371]  Boucadair,\
    \ M. and S. Venaas, \"Updates to the IPv6\n              Multicast Addressing\
    \ Architecture\", RFC 7371,\n              DOI 10.17487/RFC7371, September 2014,\n\
    \              <https://www.rfc-editor.org/info/rfc7371>.\n   [RFC7421]  Carpenter,\
    \ B., Ed., Chown, T., Gont, F., Jiang, S.,\n              Petrescu, A., and A.\
    \ Yourtchenko, \"Analysis of the 64-bit\n              Boundary in IPv6 Addressing\"\
    , RFC 7421,\n              DOI 10.17487/RFC7421, January 2015,\n             \
    \ <https://www.rfc-editor.org/info/rfc7421>.\n   [RFC7721]  Cooper, A., Gont,\
    \ F., and D. Thaler, \"Security and Privacy\n              Considerations for\
    \ IPv6 Address Generation Mechanisms\",\n              RFC 7721, DOI 10.17487/RFC7721,\
    \ March 2016,\n              <https://www.rfc-editor.org/info/rfc7721>.\n   [RFC7739]\
    \  Gont, F., \"Security Implications of Predictable Fragment\n              Identification\
    \ Values\", RFC 7739, DOI 10.17487/RFC7739,\n              February 2016, <https://www.rfc-editor.org/info/rfc7739>.\n\
    \   [RFC7772]  Yourtchenko, A. and L. Colitti, \"Reducing Energy\n           \
    \   Consumption of Router Advertisements\", BCP 202, RFC 7772,\n             \
    \ DOI 10.17487/RFC7772, February 2016,\n              <https://www.rfc-editor.org/info/rfc7772>.\n\
    \   [RFC7844]  Huitema, C., Mrugalski, T., and S. Krishnan, \"Anonymity\n    \
    \          Profiles for DHCP Clients\", RFC 7844,\n              DOI 10.17487/RFC7844,\
    \ May 2016,\n              <https://www.rfc-editor.org/info/rfc7844>.\n   [RFC7934]\
    \  Colitti, L., Cerf, V., Cheshire, S., and D. Schinazi,\n              \"Host\
    \ Address Availability Recommendations\", BCP 204,\n              RFC 7934, DOI\
    \ 10.17487/RFC7934, July 2016,\n              <https://www.rfc-editor.org/info/rfc7934>.\n\
    \   [RFC8087]  Fairhurst, G. and M. Welzl, \"The Benefits of Using\n         \
    \     Explicit Congestion Notification (ECN)\", RFC 8087,\n              DOI 10.17487/RFC8087,\
    \ March 2017,\n              <https://www.rfc-editor.org/info/rfc8087>.\n   [RFC8096]\
    \  Fenner, B., \"The IPv6-Specific MIB Modules Are Obsolete\",\n             \
    \ RFC 8096, DOI 10.17487/RFC8096, April 2017,\n              <https://www.rfc-editor.org/info/rfc8096>.\n\
    \   [RFC8273]  Brzozowski, J. and G. Van de Velde, \"Unique IPv6 Prefix\n    \
    \          per Host\", RFC 8273, DOI 10.17487/RFC8273, December 2017,\n      \
    \        <https://www.rfc-editor.org/info/rfc8273>.\n   [POSIX]    IEEE, \"Information\
    \ Technology -- Portable Operating System\n              Interface (POSIX(R))\
    \ Base Specifications, Issue 7\", IEEE\n              Std 1003.1-2017, DOI: 10.1109/IEEESTD.2018.8277153,\n\
    \              January 2018,\n              <https://ieeexplore.ieee.org/document/8277153>.\n\
    \   [USGv6]    National Institute of Standards and Technology, \"A Profile\n \
    \             for IPv6 in the U.S. Government - Version 1.0\",\n             \
    \ NIST SP500-267, July 2008,\n              <https://www.nist.gov/programs-projects/usgv6-program>.\n"
- title: Appendix A.  Changes from RFC 6434
  contents:
  - "Appendix A.  Changes from RFC 6434\n   There have been many editorial clarifications\
    \ as well as significant\n   additions and updates.  While this section highlights\
    \ some of the\n   changes, readers should not rely on this section for a comprehensive\n\
    \   list of all changes.\n   1.   Restructured sections.\n   2.   Added 6LoWPAN\
    \ to link layers as it has some deployment.\n   3.   Removed the Downstream-on-Demand\
    \ (DoD) IPv6 Profile as it hasn't\n        been updated.\n   4.   Updated MLDv2\
    \ support to a MUST since nodes are restricted if\n        MLDv1 is used.\n  \
    \ 5.   Required DNS RA options so SLAAC-only devices can get DNS; RFC\n      \
    \  8106 is a MUST.\n   6.   Required RFC 3646 DNS Options for DHCPv6 implementations.\n\
    \   7.   Added RESTCONF and NETCONF as possible options to network\n        management.\n\
    \   8.   Added a section on constrained devices.\n   9.   Added text on RFC 7934\
    \ to address availability to hosts\n        (SHOULD).\n   10.  Added text on RFC\
    \ 7844 for anonymity profiles for DHCPv6\n        clients.\n   11.  Added mDNS\
    \ and DNS-SD as updated service discovery.\n   12.  Added RFC 8028 as a SHOULD\
    \ as a method for solving a multi-\n        prefix network.\n   13.  Added ECN\
    \ RFC 3168 as a SHOULD.\n   14.  Added reference to RFC 7123 for security over\
    \ IPv4-only\n        networks.\n   15.  Removed Jumbograms (RFC 2675) as they\
    \ aren't deployed.\n   16.  Updated obsoleted RFCs to the new version of the RFC,\
    \ including\n        RFCs 2460, 1981, 7321, and 4307.\n   17.  Added RFC 7772\
    \ for power consumptions considerations.\n   18.  Added why /64 boundaries for\
    \ more detail -- RFC 7421.\n   19.  Added a unique IPv6 prefix per host to support\
    \ currently\n        deployed IPv6 networks.\n   20.  Clarified RFC 7066 was a\
    \ snapshot for 3GPP.\n   21.  Updated RFC 4191 as a MUST and the Type C Host as\
    \ a SHOULD as\n        they help solve multi-prefix problems.\n   22.  Removed\
    \ IPv6 over ATM since there aren't many deployments.\n   23.  Added a note in\
    \ Section 6.6 for Rule 5.5 from RFC 6724.\n   24.  Added MUST for BCP 198 for\
    \ forwarding IPv6 packets.\n   25.  Added a reference to RFC 8064 for stable address\
    \ creation.\n   26.  Added text on the protection from excessive extension header\n\
    \        options.\n   27.  Added text on the dangers of 1280 MTU UDP, especially\
    \ with\n        regard to DNS traffic.\n   28.  Added text to clarify RFC 8200\
    \ behavior for unrecognized\n        extension headers or unrecognized ULPs.\n\
    \   29.  Removed dated email addresses from design team acknowledgements\n   \
    \     for [RFC4294].\n"
- title: Appendix B.  Changes from RFC 4294 to RFC 6434
  contents:
  - "Appendix B.  Changes from RFC 4294 to RFC 6434\n   There have been many editorial\
    \ clarifications as well as significant\n   additions and updates.  While this\
    \ section highlights some of the\n   changes, readers should not rely on this\
    \ section for a comprehensive\n   list of all changes.\n   1.   Updated the Introduction\
    \ to indicate that this document is an\n        applicability statement and is\
    \ aimed at general nodes.\n   2.   Significantly updated the section on mobility\
    \ protocols; added\n        references and downgraded previous SHOULDs to MAYs.\n\
    \   3.   Changed the Sub-IP Layer section to just list relevant RFCs, and\n  \
    \      added some more RFCs.\n   4.   Added a section on SEND (it is a MAY).\n\
    \   5.   Revised the section on Privacy Extensions [RFC4941] to add more\n   \
    \     nuance to the recommendation.\n   6.   Completely revised the IPsec/IKEv2\
    \ section, downgrading the\n        overall recommendation to a SHOULD.\n   7.\
    \   Upgraded recommendation of DHCPv6 to a SHOULD.\n   8.   Added a background\
    \ section on DHCP versus RA options, added a\n        SHOULD recommendation for\
    \ DNS configuration via RAs (RFC 6106),\n        and cleaned up the DHCP recommendations.\n\
    \   9.   Added the recommendation that routers implement Sections 7.3 and\n  \
    \      7.5 of [RFC6275].\n   10.  Added a pointer to subnet clarification document\
    \ [RFC5942].\n   11.  Added text that \"IPv6 Host-to-Router Load Sharing\" [RFC4311]\n\
    \        SHOULD be implemented.\n   12.  Added reference to [RFC5722] (Overlapping\
    \ Fragments), and made\n        it a MUST to implement.\n   13.  Made \"A Recommendation\
    \ for IPv6 Address Text Representation\"\n        [RFC5952] a SHOULD.\n   14.\
    \  Removed the mention of delegation name (DNAME) from the\n        discussion\
    \ about [RFC3363].\n   15.  Numerous updates to reflect newer versions of IPv6\
    \ documents,\n        including [RFC3596], [RFC4213], [RFC4291], and [RFC4443].\n\
    \   16.  Removed discussion of \"Managed\" and \"Other\" flags in RAs.  There\n\
    \        is no consensus at present on how to process these flags, and\n     \
    \   discussion of their semantics was removed in the most recent\n        update\
    \ of Stateless Address Autoconfiguration [RFC4862].\n   17.  Added many more references\
    \ to optional IPv6 documents.\n   18.  Made \"A Recommendation for IPv6 Address\
    \ Text Representation\"\n        [RFC5952] a SHOULD.\n   19.  Updated the MLD\
    \ section to include reference to Lightweight MLD\n        [RFC5790].\n   20.\
    \  Added a SHOULD recommendation for \"Default Router Preferences\n        and\
    \ More-Specific Routes\" [RFC4191].\n   21.  Made \"IPv6 Flow Label Specification\"\
    \ [RFC6437] a SHOULD.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   o  Acknowledgments (Current Document)\n      The authors\
    \ would like to thank Brian Carpenter, Dave Thaler, Tom\n      Herbert, Erik Kline,\
    \ Mohamed Boucadair, and Michayla Newcombe for\n      their contributions and\
    \ many members of the 6man WG for the inputs\n      they gave.\n   o  Authors\
    \ and Acknowledgments from RFC 6434\n      RFC 6434 was authored by Ed Jankiewicz,\
    \ John Loughney, and Thomas\n      Narten.\n      The authors of RFC 6434 thank\
    \ Hitoshi Asaeda, Brian Carpenter, Tim\n      Chown, Ralph Droms, Sheila Frankel,\
    \ Sam Hartman, Bob Hinden, Paul\n      Hoffman, Pekka Savola, Yaron Sheffer, and\
    \ Dave Thaler for their\n      comments.  In addition, the authors thank Mark\
    \ Andrews for\n      comments and corrections on DNS text and Alfred Hoenes for\n\
    \      tracking the updates to various RFCs.\n   o  Authors and Acknowledgments\
    \ from RFC 4294\n      RFC 4294 was written by the IPv6 Node Requirements design\
    \ team,\n      which had the following members: Jari Arkko, Marc Blanchet, Samita\n\
    \      Chakrabarti, Alain Durand, Gerard Gastaud, Jun-ichiro Itojun\n      Hagino,\
    \ Atsushi Inoue, Masahiro Ishiyama, John Loughney, Rajiv\n      Raghunarayan,\
    \ Shoichi Sakane, Dave Thaler, and Juha Wiljakka.\n      The authors of RFC 4294\
    \ thank Ran Atkinson, Jim Bound, Brian\n      Carpenter, Ralph Droms, Christian\
    \ Huitema, Adam Machalek, Thomas\n      Narten, Juha Ollila, and Pekka Savola\
    \ for their comments.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Tim Chown\n   Jisc\n   Lumen House, Library Avenue\n \
    \  Harwell Oxford, Didcot  OX11 0SG\n   United Kingdom\n   Email: tim.chown@jisc.ac.uk\n\
    \   John Loughney\n   Intel\n   Santa Clara, CA\n   United States of America\n\
    \   Email: john.loughney@gmail.com\n   Timothy Winters\n   University of New Hampshire,\
    \ Interoperability Lab (UNH-IOL)\n   Durham, NH\n   United States of America\n\
    \   Email: twinters@iol.unh.edu\n"
