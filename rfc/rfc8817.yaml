- contents:
  - "       RTP Payload Format for Tactical Secure Voice Cryptographic\n             Interoperability
    Specification (TSVCIS) Codec\n"
  title: __initial_text__
- contents:
  - "Abstract\n   This document describes the RTP payload format for the Tactical\n
    \  Secure Voice Cryptographic Interoperability Specification (TSVCIS)\n   speech
    coder.  TSVCIS is a scalable narrowband voice coder supporting\n   varying encoder
    data rates and fallbacks.  It is implemented as an\n   augmentation to the Mixed
    Excitation Linear Prediction Enhanced\n   (MELPe) speech coder by conveying additional
    speech coder parameters\n   to enhance voice quality.  TSVCIS augmented speech
    data is processed\n   in conjunction with its temporally matched Mixed Excitation
    Linear\n   Prediction (MELP) 2400 speech data.  The RTP packetization of TSVCIS\n
    \  and MELPe speech coder data is described in detail.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8817.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2020 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction\n     1.1.  Conventions\n     1.2.  Abbreviations\n
    \  2.  Background\n   3.  Payload Format\n     3.1.  MELPe Bitstream Definitions\n
    \      3.1.1.  2400 bps Bitstream Structure\n       3.1.2.  1200 bps Bitstream
    Structure\n       3.1.3.  600 bps Bitstream Structure\n       3.1.4.  Comfort
    Noise Bitstream Definition\n     3.2.  TSVCIS Bitstream Definition\n     3.3.
    \ Multiple TSVCIS Frames in an RTP Packet\n     3.4.  Congestion Control Considerations\n
    \  4.  Payload Format Parameters\n     4.1.  Media Type Definitions\n     4.2.
    \ Mapping to SDP\n     4.3.  Declarative SDP Considerations\n     4.4.  Offer/Answer
    SDP Considerations\n   5.  Discontinuous Transmissions\n   6.  Packet Loss Concealment\n
    \  7.  IANA Considerations\n   8.  Security Considerations\n   9.  References\n
    \    9.1.  Normative References\n     9.2.  Informative References\n   Authors'
    Addresses\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This document describes how compressed Tactical Secure Voice\n
    \  Cryptographic Interoperability Specification (TSVCIS) speech as\n   produced
    by the TSVCIS codec [TSVCIS] [NRLVDR] may be formatted for\n   use as an RTP payload.
    \ The TSVCIS speech coder (or TSVCIS speech-\n   aware communications equipment
    on any intervening transport link) may\n   adjust to restricted bandwidth conditions
    by reducing the amount of\n   augmented speech data and relying on the underlying
    MELPe speech\n   coder for the most constrained bandwidth links.\n   Details are
    provided for packetizing the TSVCIS augmented speech data\n   along with MELPe
    2400 bps speech parameters in an RTP packet.  The\n   sender may send one or more
    codec data frames per packet, depending\n   on the application scenario or based
    on transport network conditions,\n   bandwidth restrictions, delay requirements,
    and packet loss\n   tolerance.\n"
  - contents:
    - "1.1.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
      \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\",
      \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described
      in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all\n
      \  capitals, as shown here.\n   Best current practices for writing an RTP payload
      format\n   specification were followed [RFC2736] [RFC8088].\n"
    title: 1.1.  Conventions
  - contents:
    - "1.2.  Abbreviations\n   The following abbreviations are used in this document.\n
      \  AVP:      Audio/Video Profile\n   AVPF:     Audio/Video Profile Feedback\n
      \  CELP:     Code-Excited Linear Prediction\n   FEC:      Forward Error Correction\n
      \  LPC:      Linear-Predictive Coding\n   LSB:      Least Significant Bit\n
      \  MELP:     Mixed Excitation Linear Prediction\n   MELPe:    Mixed Excitation
      Linear Prediction Enhanced\n   MSB:      Most Significant Bit\n   MTC:      Modified
      Count\n   NATO:     North American Treaty Organization\n   NRL:      Naval Research
      Lab\n   PLC:      Packet Loss Concealment\n   SAVP:     Secure Audio/Video Profile\n
      \  SAVPF:    Secure Audio/Video Profile Feedback\n   SDP:      Session Description
      Protocol\n   SSRC:     Synchronization Source\n   SRTP:     Secure Real-Time
      Transport Protocol\n   TSVCIS:   Tactical Secure Voice Cryptographic Interoperability\n
      \            Specification\n   VAD:      Voice Activity Detect\n   VDR:      Variable
      Date Rate\n"
    title: 1.2.  Abbreviations
  title: 1.  Introduction
- contents:
  - "2.  Background\n   The MELP speech coder was developed by the US military as
    an upgrade\n   from the LPC-based CELP standard vocoder for low-bitrate\n   communications
    [MELP].  (\"LPC\" stands for \"Linear-Predictive Coding\",\n   and \"CELP\" stands
    for \"Code-Excited Linear Prediction\".)  MELP was\n   further enhanced and subsequently
    adopted by NATO as \"MELPe\" for use\n   by its members and Partnership for Peace
    countries for military and\n   other governmental communications as international
    NATO Standard\n   STANAG 4591 [MELPE].\n   The Tactical Secure Voice Cryptographic
    Interoperability\n   Specification (TSVCIS) is a specification written by the
    Tactical\n   Secure Voice Working Group (TSVWG) to enable all modern tactical\n
    \  secure voice devices to be interoperable across the US Department of\n   Defense
    [TSVCIS].  One of the most important aspects is that the\n   voice modes defined
    in TSVCIS are based on specific fixed rates of\n   the Naval Research Lab's (NRL's)
    Variable Date Rate (VDR) Vocoder,\n   which uses the MELPe standard as its base
    [NRLVDR].  A complete\n   TSVCIS speech frame consists of MELPe speech parameters
    and\n   corresponding TSVCIS augmented speech data.\n   In addition to the augmented
    speech data, the TSVCIS specification\n   identifies which speech coder and framing
    bits are to be encrypted\n   and how they are protected by forward error correction
    (FEC)\n   techniques (using block codes).  At the RTP transport layer, only the\n
    \  speech coder-related bits need to be considered and are conveyed in\n   unencrypted
    form.  In most IP-based network deployments, standard\n   link encryption methods
    (Secure Real-Time Transport Protocol (SRTP),\n   VPNs, FIPS 140 link encryptors,
    or Type 1 Ethernet encryptors) would\n   be used to secure the RTP speech contents.\n
    \  TSVCIS augmented speech data is derived from the signal processing\n   and
    data generated by the MELPe speech coder.  For the purposes of\n   this specification,
    only the general parameter nature of TSVCIS will\n   be characterized.  Depending
    on the bandwidth available (and FEC\n   requirements), a varying number of TSVCIS-specific
    speech coder\n   parameters need to be transported.  These are first byte-packed
    and\n   then conveyed from encoder to decoder.\n   Byte packing of TSVCIS speech
    data into packed parameters is\n   processed as per the following example, where\n
    \  Three-bit field:  Bits A, B, and C (A is MSB; C is LSB)\n   Five-bit field:
    \ Bits D, E, F, G, and H (D is MSB; H is LSB)\n           MSB                                              LSB\n
    \           0      1      2      3      4      5      6      7\n        |   H
    \ |   G  |   F  |   E  |   D  |   C  |   B  |   A  |\n   This packing method places
    the three-bit field \"first\" in the lowest\n   bits followed by the next five-bit
    field.  Parameters may be split\n   between octets with the most significant bits
    in the earlier octet.\n   Any unfilled bits in the last octet MUST be filled with
    zero.\n   In order to accommodate a varying amount of TSVCIS augmented speech\n
    \  data, an octet count specifies the number of octets representing the\n   TSVCIS
    packed parameters.  The encoding to do so is presented in\n   Section 3.2.  TSVCIS
    specifically uses the NRL VDR in two\n   configurations with a fixed set of 15
    and 35 packed octet parameters\n   in a standardized order [TSVCIS].\n"
  title: 2.  Background
- contents:
  - "3.  Payload Format\n   The TSVCIS codec augments the standard MELP 2400, 1200,
    and 600\n   bitrates and hence uses 22.5, 67.5, or 90 ms frames with a sampling\n
    \  rate clock of 8 kHz, so the RTP timestamp MUST be in units of 1/8000\n   of
    a second.\n   The RTP payload for TSVCIS has the format shown in Figure 1.  No\n
    \  additional header specific to this payload format is needed.  This\n   format
    is intended for situations where the sender and the receiver\n   send one or more
    codec data frames per packet.\n    0                   1                   2                   3\n
    \   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   |                         RTP
    Header                            |\n   +                 one or more frames of
    TSVCIS                  |\n                      Figure 1: Packet Format Diagram\n
    \  The RTP header of the packetized encoded TSVCIS speech has the\n   expected
    values as described in [RFC3550].  The usage of the M bit\n   SHOULD be as specified
    in the applicable RTP profile -- for example,\n   [RFC3551] specifies that if
    the sender does not suppress silence\n   (i.e., sends a frame on every frame interval),
    the M bit will always\n   be zero.  When more than one codec data frame is present
    in a single\n   RTP packet, the timestamp specified is that of the oldest data
    frame\n   represented in the RTP packet.\n   The assignment of an RTP payload
    type for this new packet format is\n   outside the scope of this document and
    will not be specified here.\n   It is expected that the RTP profile for a particular
    class of\n   applications will assign a payload type for this encoding; if that
    is\n   not done, then a payload type in the dynamic range shall be chosen by\n
    \  the sender.\n"
  - contents:
    - "3.1.  MELPe Bitstream Definitions\n   The TSVCIS speech coder includes all
      three MELPe coder rates used as\n   base speech parameters or as speech coders
      for bandwidth-restricted\n   links.  RTP packetization of MELPe follows [RFC8130]
      and is repeated\n   here for all three MELPe rates [RFC8130], with its recommendations\n
      \  now regarded as requirements.  The bits previously labeled as RSVA,\n   RSVB,
      and RSVC in [RFC8130] SHOULD be filled with rate code bits\n   CODA, CODB, and
      CODC, as shown in Table 1 (compatible with Table 7 in\n   Section 3.3 of [RFC8130]).\n
      \             | Coder Bitrate | CODA | CODB | CODC | Length |\n              |
      2400 bps      | 0    | 0    | N/A  | 7      |\n              | 1200 bps      |
      1    | 0    | 0    | 11     |\n              | 600 bps       | 0    | 1    |
      N/A  | 7      |\n              | Comfort Noise | 1    | 0    | 1    | 2      |\n
      \             | TSVCIS Data   | 1    | 1    | N/A  | var.   |\n                    Table
      1: TSVCIS/MELPe Frame Bitrate\n                        Indicators and Frame
      Length\n   The total number of bits used to describe one MELPe frame of 2400
      bps\n   speech is 54, which fits in 7 octets (with two rate code bits).  For\n
      \  MELPe 1200 bps speech, the total number of bits used is 81, which\n   fits
      in 11 octets (with three rate code bits and four unused bits).\n   For MELPe
      600 bps speech, the total number of bits used is 54, which\n   fits in 7 octets
      (with two rate code bits).  The comfort noise frame\n   consists of 13 bits,
      which fits in 2 octets (with three rate code\n   bits).  TSVCIS packed parameters
      will use the last code combination\n   in a trailing byte as discussed in Section
      3.2.\n   It should be noted that CODB for MELPe 600 bps mode MAY deviate from\n
      \  the value in Table 1 when bit 55 is used as an alternating 1/0 end-\n   to-end
      framing bit.  Frame decoding would remain distinct as CODA\n   being zero on
      its own would indicate a 7-byte frame for either a 2400\n   or 600 bps rate,
      and the use of 600 bps speech coding could be\n   deduced from the RTP timestamp
      (and anticipated by the Session\n   Description Protocol (SDP) negotiations).\n"
    - contents:
      - "3.1.1.  2400 bps Bitstream Structure\n   The 2400 bps MELPe RTP payload is
        constructed as per Figure 2.  Note\n   that CODA MUST be filled with 0 and
        CODB SHOULD be filled with 0 as\n   per Section 3.1.  CODB MAY contain an
        end-to-end framing bit if\n   required by the endpoints.\n           MSB                                              LSB\n
        \           0      1      2      3      4      5      6      7\n        |
        B_08 | B_07 | B_06 | B_05 | B_04 | B_03 | B_02 | B_01 |\n        | B_16 |
        B_15 | B_14 | B_13 | B_12 | B_11 | B_10 | B_09 |\n        | B_24 | B_23 |
        B_22 | B_21 | B_20 | B_19 | B_18 | B_17 |\n        | B_32 | B_31 | B_30 |
        B_29 | B_28 | B_27 | B_26 | B_25 |\n        | B_40 | B_39 | B_38 | B_37 |
        B_36 | B_35 | B_34 | B_33 |\n        | B_48 | B_47 | B_46 | B_45 | B_44 |
        B_43 | B_42 | B_41 |\n        | CODA | CODB | B_54 | B_53 | B_52 | B_51 |
        B_50 | B_49 |\n               Figure 2: Packed MELPe 2400 bps Payload Octets\n"
      title: 3.1.1.  2400 bps Bitstream Structure
    - contents:
      - "3.1.2.  1200 bps Bitstream Structure\n   The 1200 bps MELPe RTP payload is
        constructed as per Figure 3.  Note\n   that CODA, CODB, and CODC MUST be filled
        with 1, 0, and 0,\n   respectively, as per Section 3.1.  RSV0 MUST be coded
        as 0.\n           MSB                                              LSB\n            0
        \     1      2      3      4      5      6      7\n        | B_08 | B_07 |
        B_06 | B_05 | B_04 | B_03 | B_02 | B_01 |\n        | B_16 | B_15 | B_14 |
        B_13 | B_12 | B_11 | B_10 | B_09 |\n        | B_24 | B_23 | B_22 | B_21 |
        B_20 | B_19 | B_18 | B_17 |\n        | B_32 | B_31 | B_30 | B_29 | B_28 |
        B_27 | B_26 | B_25 |\n        | B_40 | B_39 | B_38 | B_37 | B_36 | B_35 |
        B_34 | B_33 |\n        | B_48 | B_47 | B_46 | B_45 | B_44 | B_43 | B_42 |
        B_41 |\n        | B_56 | B_55 | B_54 | B_53 | B_52 | B_51 | B_50 | B_49 |\n
        \       | B_64 | B_63 | B_62 | B_61 | B_60 | B_59 | B_58 | B_57 |\n        |
        B_72 | B_71 | B_70 | B_69 | B_68 | B_67 | B_66 | B_65 |\n        | B_80 |
        B_79 | B_78 | B_77 | B_76 | B_75 | B_74 | B_73 |\n        | CODA | CODB |
        CODC | RSV0 | RSV0 | RSV0 | RSV0 | B_81 |\n               Figure 3: Packed
        MELPe 1200 bps Payload Octets\n"
      title: 3.1.2.  1200 bps Bitstream Structure
    - contents:
      - "3.1.3.  600 bps Bitstream Structure\n   The 600 bps MELPe RTP payload is
        constructed as per Figure 4.  Note\n   CODA MUST be filled with 0 and CODB
        SHOULD be filled with 1 as per\n   Section 3.1.  CODB MAY contain an end-to-end
        framing bit if required\n   by the endpoints.\n           MSB                                              LSB\n
        \           0      1      2      3      4      5      6      7\n        |
        B_08 | B_07 | B_06 | B_05 | B_04 | B_03 | B_02 | B_01 |\n        | B_16 |
        B_15 | B_14 | B_13 | B_12 | B_11 | B_10 | B_09 |\n        | B_24 | B_23 |
        B_22 | B_21 | B_20 | B_19 | B_18 | B_17 |\n        | B_32 | B_31 | B_30 |
        B_29 | B_28 | B_27 | B_26 | B_25 |\n        | B_40 | B_39 | B_38 | B_37 |
        B_36 | B_35 | B_34 | B_33 |\n        | B_48 | B_47 | B_46 | B_45 | B_44 |
        B_43 | B_42 | B_41 |\n        | CODA | CODB | B_54 | B_53 | B_52 | B_51 |
        B_50 | B_49 |\n               Figure 4: Packed MELPe 600 bps Payload Octets\n"
      title: 3.1.3.  600 bps Bitstream Structure
    - contents:
      - "3.1.4.  Comfort Noise Bitstream Definition\n   The comfort noise MELPe RTP
        payload is constructed as per Figure 5.\n   Note that CODA, CODB, and CODC
        MUST be filled with 1, 0, and 1,\n   respectively, as per Section 3.1.\n           MSB
        \                                             LSB\n            0      1      2
        \     3      4      5      6      7\n        | B_08 | B_07 | B_06 | B_05 |
        B_04 | B_03 | B_02 | B_01 |\n        | CODA | CODB | CODC | B_13 | B_12 |
        B_11 | B_10 | B_09 |\n            Figure 5: Packed MELPe Comfort Noise Payload
        Octets\n"
      title: 3.1.4.  Comfort Noise Bitstream Definition
    title: 3.1.  MELPe Bitstream Definitions
  - contents:
    - "3.2.  TSVCIS Bitstream Definition\n   The TSVCIS augmented speech data as packed
      parameters MUST be placed\n   immediately after a corresponding MELPe 2400 bps
      payload in the same\n   RTP packet.  The packed parameters are counted in octets
      (TC).  The\n   preferred placement SHOULD be used for TSVCIS payloads with TC
      less\n   than or equal to 77 octets; this is shown in Figure 6.  In the\n   preferred
      placement, a single trailing octet SHALL be appended to\n   include a two-bit
      rate code, CODA and CODB (both bits set to one),\n   and a six-bit modified
      count (MTC).  The special modified count value\n   of all ones (representing
      an MTC value of 63) SHALL NOT be used for\n   this format as it is used as the
      indicator for the alternate packing\n   format shown next.  In a standard implementation,
      the TSVCIS speech\n   coder uses a minimum of 15 octets for parameters in octet
      packed\n   form.  The modified count (MTC) MUST be reduced by 15 from the full\n
      \  octet count (TC).  Computed MTC = TC-15.  This accommodates a maximum\n   of
      77 parameter octets (the maximum value of MTC is 62; 77 is the sum\n   of 62+15).\n
      \          MSB                                              LSB\n            0
      \     1      2      3      4      5      6      7\n     1  | T008 | T007 | T006
      | T005 | T004 | T003 | T002 | T001 |\n     2  | T016 | T015 | T014 | T013 |
      T012 | T011 | T010 | T009 |\n     3  | T024 | T023 | T022 | T021 | T020 | T019
      | T018 | T017 |\n     4  | T032 | T031 | T030 | T029 | T028 | T027 | T026 |
      T025 |\n     5  | T040 | T039 | T038 | T037 | T036 | T035 | T034 | T033 |\n
      \    6  | T048 | T047 | T046 | T045 | T044 | T043 | T042 | T041 |\n     7  |
      TO56 | TO55 | T054 | T053 | T052 | T051 | T050 | T049 |\n     8  | T064 | T063
      | T062 | T061 | T060 | T059 | T058 | T057 |\n     9  | T072 | T071 | T070 |
      T069 | T068 | T067 | T066 | T065 |\n    10  | T080 | T079 | T078 | T077 | T076
      | T075 | T074 | T073 |\n    11  | T088 | T087 | T086 | T085 | T084 | T083 |
      T082 | T081 |\n    12  | TO96 | TO95 | T094 | T093 | T092 | T091 | T090 | T089
      |\n    13  | T104 | T103 | T102 | T101 | T100 | T099 | T098 | T097 |\n    14
      \ | T112 | T111 | T110 | T109 | T108 | T107 | T106 | T105 |\n    15  | T120
      | T119 | T118 | T117 | T116 | T115 | T114 | T113 |\n   TC+1 | CODA | CODB |
      \         modified octet count           |\n              Figure 6: Preferred
      Packed TSVCIS Payload Octets\n   In order to accommodate all other NRL VDR configurations,
      an\n   alternate parameter placement MUST use two trailing bytes as shown in\n
      \  Figure 7.  The last trailing byte MUST be filled with a two-bit rate\n   code,
      CODA and CODB (both bits set to one), and its six-bit count\n   field MUST be
      filled with ones.  The second to last trailing byte\n   MUST contain the parameter
      count (TC) in octets (a value from 1 and\n   255, inclusive).  The value of
      zero SHALL be considered as reserved.\n           MSB                                              LSB\n
      \           0      1      2      3      4      5      6      7\n     1  | T008
      | T007 | T006 | T005 | T004 | T003 | T002 | T001 |\n     2  | T016 | T015 |
      T014 | T013 | T012 | T011 | T010 | T009 |\n   TC+1 |                      octet
      count                      |\n   TC+2 | CODA | CODB |   1  |   1  |   1  |   1
      \ |   1  |   1  |\n         Figure 7: Length Unrestricted Packed TSVCIS Payload
      Octets\n"
    title: 3.2.  TSVCIS Bitstream Definition
  - contents:
    - "3.3.  Multiple TSVCIS Frames in an RTP Packet\n   A TSVCIS RTP packet payload
      consists of zero or more consecutive\n   TSVCIS coder frames (each consisting
      of MELPe 2400 and TSVCIS coder\n   data), with the oldest frame first, followed
      by zero or one MELPe\n   comfort noise frame.  The presence of a comfort noise
      frame can be\n   determined by its rate code bits in its last octet.\n   The
      default packetization interval is one coder frame (22.5, 67.5, or\n   90 ms)
      according to the coder bitrate (2400, 1200, or 600 bps).  For\n   some applications,
      a longer packetization interval is used to reduce\n   the packet rate.\n   A
      TSVCIS RTP packet without coder and comfort noise frames MAY be\n   used periodically
      by an endpoint to indicate connectivity by an\n   otherwise idle receiver.\n
      \  TSVCIS coder frames in a single RTP packet MAY have varying TSVCIS\n   parameter
      octet counts.  Its packed parameter octet count (length) is\n   indicated in
      the trailing byte(s).  All MELPe frames in a single RTP\n   packet MUST be of
      the same coder bitrate.  For all MELPe coder\n   frames, the coder rate bits
      in the trailing byte identify the\n   contents and length as per Table 1.\n
      \  It is important to observe that senders have the following additional\n   restrictions:\n
      \  *  Senders SHOULD NOT include more TSVCIS or MELPe frames in a single\n      RTP
      packet than will fit in the MTU of the RTP transport protocol.\n   *  Frames
      MUST NOT be split between RTP packets.\n   It is RECOMMENDED that the number
      of frames contained within an RTP\n   packet be consistent with the application.
      \ For example, in telephony\n   and other real-time applications where delay
      is important, the fewer\n   frames per packet, the lower the delay.  However,
      for bandwidth-\n   constrained links or delay-insensitive streaming messaging\n
      \  applications, more than one frame per packet or many frames per\n   packet
      would be acceptable.\n   Information describing the number of frames contained
      in an RTP\n   packet is not transmitted as part of the RTP payload.  The way
      to\n   determine the number of TSVCIS/MELPe frames is to identify each frame\n
      \  type and length, thereby counting the total number of octets within\n   the
      RTP packet.\n"
    title: 3.3.  Multiple TSVCIS Frames in an RTP Packet
  - contents:
    - "3.4.  Congestion Control Considerations\n   The target bitrate of TSVCIS can
      be adjusted at any point in time,\n   thus allowing congestion management.  Furthermore,
      the amount of\n   encoded speech or audio data encoded in a single packet can
      be used\n   for congestion control, since the packet rate is inversely\n   proportional
      to the packet duration.  A lower packet transmission\n   rate reduces the amount
      of header overhead but at the same time\n   increases latency and loss sensitivity,
      so it ought to be used with\n   care.\n   Since UDP does not provide congestion
      control, applications that use\n   RTP over UDP SHOULD implement their own congestion
      control above the\n   UDP layer [RFC8085] and MAY also implement a transport
      circuit\n   breaker [RFC8083].  Work in the RMCAT Working Group [RMCAT] describes\n
      \  the interactions and conceptual interfaces necessary between the\n   application
      components that relate to congestion control, including\n   the RTP layer, the
      higher-level media codec control layer, and the\n   lower-level transport interface,
      as well as components dedicated to\n   congestion control functions.\n"
    title: 3.4.  Congestion Control Considerations
  title: 3.  Payload Format
- contents:
  - "4.  Payload Format Parameters\n   This RTP payload format is identified using
    the TSVCIS media subtype,\n   which is registered in accordance with [RFC4855]
    and per the media\n   type registration template from [RFC6838].\n"
  - contents:
    - "4.1.  Media Type Definitions\n   Type name:  audio\n   Subtype name:  TSVCIS\n
      \  Required parameters:  Clock Rate (Hz): 8000\n   Optional parameters:\n      ptime:\n
      \        the recommended length of time (in milliseconds) represented by\n         the
      media in a packet.  It SHALL use the nearest rounded-up ms\n         integer
      packet duration.  For TSVCIS, this corresponds to the\n         following values:
      23, 45, 68, 90, 112, 135, 156, and 180.\n         Larger values can be used
      as long as they are properly rounded.\n         See Section 6 of [RFC4566].\n
      \     maxptime:\n         the maximum length of time (in milliseconds) that
      can be\n         encapsulated in a packet.  It SHALL use the nearest rounded-up\n
      \        ms integer packet duration.  For TSVCIS, this corresponds to\n         the
      following values: 23, 45, 68, 90, 112, 135, 156, and 180.\n         Larger values
      can be used as long as they are properly rounded.\n         See Section 6 of
      [RFC4566].\n      bitrate:\n         specifies the MELPe coder bitrates supported.
      \ Possible values\n         are a comma-separated list of rates from the following
      set:\n         2400, 1200, 600.  The modes are listed in order of preference;\n
      \        the first is preferred.  If \"bitrate\" is not present, the fixed\n
      \        coder bitrate of 2400 MUST be used.\n      tcmax:\n         specifies
      the TSVCIS maximum value for the TC supported or\n         desired, ranging
      from 1 to 255.  If \"tcmax\" is not present, a\n         default value of 35
      is used.\n      Channels:\n         1\n   Encoding considerations:  This media
      subtype is framed and binary;\n      see Section 4.8 of [RFC6838].\n   Security
      considerations:  Please see Section 8 of RFC 8817.\n   Interoperability considerations:
      \ N/A\n   Published specification:  [TSVCIS]\n   Applications that use this
      media type:  N/A\n   Fragment identifier considerations:  N/A\n   Additional
      information:\n      Deprecated alias names for this type:  N/A\n      Magic
      number(s):  N/A\n      File extension(s):  N/A\n      Macintosh file type code(s):
      \ N/A\n   Person & email address to contact for further information:\n      Victor
      Demjanenko, Ph.D.  <victor.demjanenko@vocal.com>\n   Intended usage:  COMMON\n
      \  Restrictions on usage:  The media subtype depends on RTP framing and\n      hence
      is only defined for transfer via RTP [RFC3550].  Transport\n      within other
      framing protocols is not defined at this time.\n   Author:  Victor Demjanenko,
      Ph.D.\n   Change controller:  IETF; contact <avt@ietf.org>\n   Provisional registration?
      (standards tree only):  No\n"
    title: 4.1.  Media Type Definitions
  - contents:
    - "4.2.  Mapping to SDP\n   The mapping of the above-defined payload format media
      subtype and its\n   parameters SHALL be done according to Section 3 of [RFC4855].\n
      \  The information carried in the media type specification has a\n   specific
      mapping to fields in the Session Description Protocol (SDP)\n   [RFC4566], which
      is commonly used to describe RTP sessions.  When SDP\n   is used to specify
      sessions employing the TSVCIS codec, the mapping\n   is as follows:\n   *  The
      media type (\"audio\") goes in SDP \"m=\" as the media name.\n   *  The media
      subtype (payload format name) goes in SDP \"a=rtpmap\" as\n      the encoding
      name.\n   *  The parameter \"bitrate\" goes in the SDP \"a=fmtp\" attribute
      by\n      copying it as a \"bitrate=<value>\" string.\n   *  The parameter \"tcmax\"
      goes in the SDP \"a=fmtp\" attribute by\n      copying it as a \"tcmax=<value>\"
      string.\n   *  The parameters \"ptime\" and \"maxptime\" go in the SDP \"a=ptime\"
      and\n      \"a=maxptime\" attributes, respectively.\n   When conveying information
      via SDP, the encoding name SHALL be\n   \"TSVCIS\" (the same as the media subtype).\n
      \  An example of the media representation in SDP for describing TSVCIS\n   might
      be:\n      m=audio 49120 RTP/AVP 96\n      a=rtpmap:96 TSVCIS/8000\n   The optional
      media type parameter \"bitrate\", when present, MUST be\n   included in the
      \"a=fmtp\" attribute in the SDP, expressed as a media\n   type string in the
      form of a semicolon-separated list of\n   parameter=value pairs.  The string
      \"value\" can be one or more of\n   2400, 1200, and 600, separated by commas
      (where each bitrate value\n   indicates the corresponding MELPe coder).  An
      example of the media\n   representation in SDP for describing TSVCIS when all
      three coder\n   bitrates are supported might be:\n      m=audio 49120 RTP/AVP
      96\n      a=rtpmap:96 TSVCIS/8000\n      a=fmtp:96 bitrate=2400,600,1200\n   The
      optional media type parameter \"tcmax\", when present, MUST be\n   included
      in the \"a=fmtp\" attribute in the SDP, expressed as a media\n   type string
      in the form of a semicolon-separated list of\n   parameter=value pairs.  The
      string \"value\" is an integer number in\n   the range of 1 to 255 representing
      the maximum number of TSVCIS\n   parameter octets supported.  An example of
      the media representation\n   in SDP for describing TSVCIS with a maximum of
      101 octets supported\n   is as follows:\n      m=audio 49120 RTP/AVP 96\n      a=rtpmap:96
      TSVCIS/8000\n      a=fmtp:96 tcmax=101\n   The parameter \"ptime\" cannot be
      used for the purpose of specifying\n   the TSVCIS operating mode due to the
      fact that, for certain values,\n   it will be impossible to distinguish which
      mode is about to be used\n   (e.g., when ptime=68, it would be impossible to
      distinguish whether\n   the packet is carrying one frame of 67.5 ms or three
      frames of 22.5\n   ms).\n   Note that the payload format (encoding) names are
      commonly shown in\n   upper case.  Media subtypes are commonly shown in lower
      case.  These\n   names are case insensitive in both places.  Similarly, parameter\n
      \  names are case insensitive in both the media subtype name and the\n   default
      mapping to the SDP a=fmtp attribute.\n"
    title: 4.2.  Mapping to SDP
  - contents:
    - "4.3.  Declarative SDP Considerations\n   For declarative media, the \"bitrate\"
      parameter specifies the possible\n   bitrates used by the sender.  Multiple
      TSVCIS rtpmap values (such as\n   97, 98, and 99, as used below) MAY be used
      to convey TSVCIS-coded\n   voice at different bitrates.  The receiver can then
      select an\n   appropriate TSVCIS codec by using 97, 98, or 99.\n      m=audio
      49120 RTP/AVP 97 98 99\n      a=rtpmap:97 TSVCIS/8000\n      a=fmtp:97 bitrate=2400\n
      \     a=rtpmap:98 TSVCIS/8000\n      a=fmtp:98 bitrate=1200\n      a=rtpmap:99
      TSVCIS/8000\n      a=fmtp:99 bitrate=600\n   For declarative media, the \"tcmax\"
      parameter specifies the maximum\n   number of octets of TSVCIS packed parameters
      used by the sender or\n   the sender's communications channel.\n"
    title: 4.3.  Declarative SDP Considerations
  - contents:
    - "4.4.  Offer/Answer SDP Considerations\n   In the Offer/Answer model [RFC3264],
      \"bitrate\" is a bidirectional\n   parameter.  Both sides MUST use a common
      \"bitrate\" value or values.\n   The offer contains the bitrates supported by
      the offerer, listed in\n   its preferred order.  The answerer MAY agree to any
      bitrate by\n   listing the bitrate first in the answerer response.  Additionally,\n
      \  the answerer MAY indicate any secondary bitrate or bitrates that it\n   supports.
      \ The initial bitrate used by both parties SHALL be the\n   first bitrate specified
      in the answerer response.\n   For example, if offerer bitrates are \"2400,600\"
      and answerer bitrates\n   are \"600,2400\", the initial bitrate is 600.  If
      other bitrates are\n   provided by the answerer, any common bitrate between
      the offer and\n   answer MAY be used at any time in the future.  Activation
      of these\n   other common bitrates is beyond the scope of this document.\n   The
      use of a lower bitrate is often important for a case such as when\n   one endpoint
      utilizes a bandwidth-constrained link (e.g., 1200 bps\n   radio link or slower),
      where only the lower coder bitrate will work.\n   In the Offer/Answer model
      [RFC3264], \"tcmax\" is a bidirectional\n   parameter.  Both sides SHOULD use
      a common \"tcmax\" value.  The offer\n   contains the tcmax supported by the
      offerer.  The answerer MAY agree\n   to any tcmax equal to or less than this
      value by stating the desired\n   tcmax in the answerer response.  The answerer
      alternatively MAY\n   identify its own tcmax and rely on TSVCIS ignoring any
      augmented data\n   it cannot use.\n"
    title: 4.4.  Offer/Answer SDP Considerations
  title: 4.  Payload Format Parameters
- contents:
  - "5.  Discontinuous Transmissions\n   A primary application of TSVCIS is for radio
    communications of voice\n   conversations, and discontinuous transmissions are
    normal.  When\n   TSVCIS is used in an IP network, TSVCIS RTP packet transmissions
    may\n   cease and resume frequently.  RTP synchronization source (SSRC)\n   sequence
    number gaps indicate lost packets to be filled by Packet\n   Loss Concealment
    (PLC), while abrupt loss of RTP packets indicates\n   intended discontinuous transmissions.
    \ Resumption of voice\n   transmission SHOULD be indicated by the RTP marker bit
    (M) set to 1.\n   If a TSVCIS coder so desires, it may send a MELPe comfort noise
    frame\n   as per Appendix B of [SCIP210] prior to ceasing transmission.  A\n   receiver
    may optionally use comfort noise during its silence periods.\n   No SDP negotiations
    are required.\n"
  title: 5.  Discontinuous Transmissions
- contents:
  - "6.  Packet Loss Concealment\n   TSVCIS packet loss concealment (PLC) uses the
    special properties and\n   coding for the pitch/voicing parameter of the MELPe
    2400 bps coder.\n   The PLC erasure indication utilizes any of the errored encodings
    of a\n   non-voiced frame as identified in Table 1 of [MELPE].  For the sake\n
    \  of simplicity, it is preferred that a code value of 3 for the pitch/\n   voicing
    parameter be used.  Hence, set bits P0 and P1 to one and bits\n   P2, P3, P4,
    P5, and P6 to zero.\n   When using PLC in 1200 bps or 600 bps mode, the MELPe
    2400 bps\n   decoder is called three or four times, respectively, to cover the\n
    \  loss of a low bitrate MELPe frame.\n"
  title: 6.  Packet Loss Concealment
- contents:
  - "7.  IANA Considerations\n   IANA has registered TSVCIS as specified in Section
    4.1.  The media\n   type has been added to the IANA registry for \"RTP Payload
    Format\n   Media Types\" (https://www.iana.org/assignments/rtp-parameters).\n"
  title: 7.  IANA Considerations
- contents:
  - "8.  Security Considerations\n   RTP packets using the payload format defined
    in this specification\n   are subject to the security considerations discussed
    in the RTP\n   specification [RFC3550] and in any applicable RTP profile such
    as\n   RTP/AVP [RFC3551], RTP/AVPF [RFC4585], RTP/SAVP [RFC3711], or RTP/\n   SAVPF
    [RFC5124].  However, as discussed in [RFC7202], it is not an\n   RTP payload format's
    responsibility to discuss or mandate what\n   solutions are used to meet such
    basic security goals as\n   confidentiality, integrity, and source authenticity
    for RTP in\n   general.  This responsibility lies with anyone using RTP in an\n
    \  application.  They can find guidance on available security mechanisms\n   and
    important considerations in [RFC7201].  Applications SHOULD use\n   one or more
    appropriate strong security mechanisms.  The rest of this\n   section discusses
    the security-impacting properties of the payload\n   format itself.\n   This RTP
    payload format and the TSVCIS decoder, to the best of our\n   knowledge, do not
    exhibit any significant non-uniformity in the\n   receiver-side computational
    complexity for packet processing and thus\n   are unlikely to pose a denial-of-service
    threat due to the receipt of\n   pathological data.  Additionally, the RTP payload
    format does not\n   contain any active content.\n   Please see the security considerations
    discussed in [RFC6562]\n   regarding Voice Activity Detect (VAD) and its effect
    on bitrates.\n"
  title: 8.  Security Considerations
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [MELP]     Department of Defense, \"Analog-to-Digital
      Conversion of\n              Voice by 2,400 Bit/Second Mixed Excitation Linear\n
      \             Prediction (MELP)\", Department of Defense\n              Telecommunications
      Standard MIL-STD-3005, December 1999.\n   [MELPE]    North Atlantic Treaty Organization
      (NATO), \"The 600 Bit/S,\n              1200 Bit/S and 2400 Bit/S NATO Interoperable
      Narrow Band\n              Voice Coder\", STANAG No. 4591, October 2008.\n   [NRLVDR]
      \  Heide, D., Cohen, A., Lee, Y., and T. Moran, \"Universal\n              Vocoder
      Using Variable Data Rate Vocoding\",\n              DOI 10.21236/ada588068,
      Naval Research Lab NRL/FR/5555--\n              13-10, 239, June 2013,\n              <https://doi.org/10.21236/ada588068>.\n
      \  [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement
      Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n
      \             <https://www.rfc-editor.org/info/rfc2119>.\n   [RFC2736]  Handley,
      M. and C. Perkins, \"Guidelines for Writers of RTP\n              Payload Format
      Specifications\", BCP 36, RFC 2736,\n              DOI 10.17487/RFC2736, December
      1999,\n              <https://www.rfc-editor.org/info/rfc2736>.\n   [RFC3264]
      \ Rosenberg, J. and H. Schulzrinne, \"An Offer/Answer Model\n              with
      Session Description Protocol (SDP)\", RFC 3264,\n              DOI 10.17487/RFC3264,
      June 2002,\n              <https://www.rfc-editor.org/info/rfc3264>.\n   [RFC3550]
      \ Schulzrinne, H., Casner, S., Frederick, R., and V.\n              Jacobson,
      \"RTP: A Transport Protocol for Real-Time\n              Applications\", STD
      64, RFC 3550, DOI 10.17487/RFC3550,\n              July 2003, <https://www.rfc-editor.org/info/rfc3550>.\n
      \  [RFC3551]  Schulzrinne, H. and S. Casner, \"RTP Profile for Audio and\n              Video
      Conferences with Minimal Control\", STD 65, RFC 3551,\n              DOI 10.17487/RFC3551,
      July 2003,\n              <https://www.rfc-editor.org/info/rfc3551>.\n   [RFC3711]
      \ Baugher, M., McGrew, D., Naslund, M., Carrara, E., and K.\n              Norrman,
      \"The Secure Real-time Transport Protocol (SRTP)\",\n              RFC 3711,
      DOI 10.17487/RFC3711, March 2004,\n              <https://www.rfc-editor.org/info/rfc3711>.\n
      \  [RFC4566]  Handley, M., Jacobson, V., and C. Perkins, \"SDP: Session\n              Description
      Protocol\", RFC 4566, DOI 10.17487/RFC4566,\n              July 2006, <https://www.rfc-editor.org/info/rfc4566>.\n
      \  [RFC4855]  Casner, S., \"Media Type Registration of RTP Payload\n              Formats\",
      RFC 4855, DOI 10.17487/RFC4855, February 2007,\n              <https://www.rfc-editor.org/info/rfc4855>.\n
      \  [RFC5124]  Ott, J. and E. Carrara, \"Extended Secure RTP Profile for\n              Real-time
      Transport Control Protocol (RTCP)-Based Feedback\n              (RTP/SAVPF)\",
      RFC 5124, DOI 10.17487/RFC5124, February\n              2008, <https://www.rfc-editor.org/info/rfc5124>.\n
      \  [RFC6562]  Perkins, C. and JM. Valin, \"Guidelines for the Use of\n              Variable
      Bit Rate Audio with Secure RTP\", RFC 6562,\n              DOI 10.17487/RFC6562,
      March 2012,\n              <https://www.rfc-editor.org/info/rfc6562>.\n   [RFC6838]
      \ Freed, N., Klensin, J., and T. Hansen, \"Media Type\n              Specifications
      and Registration Procedures\", BCP 13,\n              RFC 6838, DOI 10.17487/RFC6838,
      January 2013,\n              <https://www.rfc-editor.org/info/rfc6838>.\n   [RFC8083]
      \ Perkins, C. and V. Singh, \"Multimedia Congestion Control:\n              Circuit
      Breakers for Unicast RTP Sessions\", RFC 8083,\n              DOI 10.17487/RFC8083,
      March 2017,\n              <https://www.rfc-editor.org/info/rfc8083>.\n   [RFC8085]
      \ Eggert, L., Fairhurst, G., and G. Shepherd, \"UDP Usage\n              Guidelines\",
      BCP 145, RFC 8085, DOI 10.17487/RFC8085,\n              March 2017, <https://www.rfc-editor.org/info/rfc8085>.\n
      \  [RFC8088]  Westerlund, M., \"How to Write an RTP Payload Format\",\n              RFC
      8088, DOI 10.17487/RFC8088, May 2017,\n              <https://www.rfc-editor.org/info/rfc8088>.\n
      \  [RFC8130]  Demjanenko, V. and D. Satterlee, \"RTP Payload Format for\n              the
      Mixed Excitation Linear Prediction Enhanced (MELPe)\n              Codec\",
      RFC 8130, DOI 10.17487/RFC8130, March 2017,\n              <https://www.rfc-editor.org/info/rfc8130>.\n
      \  [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119
      Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,
      <https://www.rfc-editor.org/info/rfc8174>.\n   [SCIP210]  National Security
      Agency, \"SCIP Signaling Plan\", SCIP-210,\n              January 2013.\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2.  Informative References\n   [RFC4585]  Ott, J., Wenger, S., Sato, N.,
      Burmeister, C., and J. Rey,\n              \"Extended RTP Profile for Real-time
      Transport Control\n              Protocol (RTCP)-Based Feedback (RTP/AVPF)\",
      RFC 4585,\n              DOI 10.17487/RFC4585, July 2006,\n              <https://www.rfc-editor.org/info/rfc4585>.\n
      \  [RFC7201]  Westerlund, M. and C. Perkins, \"Options for Securing RTP\n              Sessions\",
      RFC 7201, DOI 10.17487/RFC7201, April 2014,\n              <https://www.rfc-editor.org/info/rfc7201>.\n
      \  [RFC7202]  Perkins, C. and M. Westerlund, \"Securing the RTP\n              Framework:
      Why RTP Does Not Mandate a Single Media\n              Security Solution\",
      RFC 7202, DOI 10.17487/RFC7202, April\n              2014, <https://www.rfc-editor.org/info/rfc7202>.\n
      \  [RMCAT]    IETF, \"RTP Media Congestion Avoidance Techniques (rmcat)\n              Working
      Group\",\n              <https://datatracker.ietf.org/wg/rmcat/about/>.\n   [TSVCIS]
      \  National Security Agency, \"Tactical Secure Voice\n              Cryptographic
      Interoperability Specification (TSVCIS)\n              Version 3.1\", NSA 09-01A,
      March 2019.\n"
    title: 9.2.  Informative References
  title: 9.  References
- contents:
  - "Authors' Addresses\n   Victor Demjanenko, Ph.D.\n   VOCAL Technologies, Ltd.\n
    \  520 Lee Entrance, Suite 202\n   Buffalo, NY 14228\n   United States of America\n
    \  Phone: +1 716 688 4675\n   Email: victor.demjanenko@vocal.com\n   John Punaro\n
    \  VOCAL Technologies, Ltd.\n   520 Lee Entrance, Suite 202\n   Buffalo, NY 14228\n
    \  United States of America\n   Phone: +1 716 688 4675\n   Email: john.punaro@vocal.com\n
    \  David Satterlee\n   VOCAL Technologies, Ltd.\n   520 Lee Entrance, Suite 202\n
    \  Buffalo, NY 14228\n   United States of America\n"
  title: Authors' Addresses
