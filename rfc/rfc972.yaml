- title: __initial_text__
  contents:
  - '                      Password Generator Protocol

    '
- title: STATUS OF THIS MEMO
  contents:
  - "STATUS OF THIS MEMO\n   This RFC specifies a standard for the ARPA Internet community.\
    \  Hosts\n   on the ARPA Internet that choose to implement a Password Generator\n\
    \   Protocol (PWDGEN) are expected to adopt and implement this standard.\n   Distribution\
    \ of this memo is unlimited.\n"
- title: BACKGROUND
  contents:
  - "BACKGROUND\n   Many security-conscious host administrators are becoming increasingly\n\
    \   aware that user-selected login passwords are too easy to guess for\n   even\
    \ casual penetration attempts.  Some sites have implemented\n   dictionary lookup\
    \ techniques in their password programs to prevent\n   ordinary words from being\
    \ used.  Others have implemented some variant\n   of a randomly generated password\
    \ with mixed success.  The problem\n   arises from the fact that such passwords\
    \ are difficult to remember\n   because they cannot be pronounced or are based\
    \ on a relatively short\n   cycle pseudo-random number generator.\n   A version\
    \ of the PWDGEN algorithm briefly described below has been in\n   use for several\
    \ years at a small number of sites in the Internet.\n   Interest has recently\
    \ been expressed at porting this algorithm to\n   other sites.  However, the relatively\
    \ short cycle and the resulting\n   randomness of the pseudo-random number generator\
    \ available on these\n   sites tends to interfere with the intended result of\
    \ minimizing the\n   potential duplication of passwords both within a site and\
    \ across\n   sites when a user has access to more than one site.\n   The PWDGEN\
    \ Service described herein provides a means for sites to\n   offer a list of possible\
    \ passwords for the user to choose one from\n   the first set, or optionally select\
    \ from another set.  With more than\n   one site offering this service, it is\
    \ then possible to randomly\n   select which site to use and have multiple fallback\
    \ sites should that\n   site be unavailable.\n   Description\n      The PWDGEN\
    \ Service provides a set of six randomly generated\n      eight-character CRLF-delimited\
    \ \"words\" with a reasonable level of\n      pronounceability, using a multi-level\
    \ algorithm.  An\n      implementation of the algorithm is available in FORTRAN-77\
    \ for\n      examination and possible implementation by system administrators\n\
    \      only.\n"
- title: RFC 972                                                     January 1986
  contents:
  - 'RFC 972                                                     January 1986

    '
- title: Password Generator Protocol
  contents:
  - "Password Generator Protocol\n      The uniqueness of the generated words is highly\
    \ dependent on the\n      randomness of the initial seed value used.  The availability\
    \ of a\n      single system-wide seed, updated after each access is highly\n \
    \     desireable.  Seeds based on a time-of-day clock are unacceptable.\n    \
    \  Seed values should be stored as values in excess of 32 bits for\n      best\
    \ performance.\n   TCP Based PWDGEN Service\n      One PWDGEN service is defined\
    \ as a connection based application on\n      TCP.  A server listens for TCP connections\
    \ on TCP port 129.  Once\n      a connection is established, the six CRLF-delimited\
    \ words are\n      generated and sent to the caller, and the connection is closed\
    \ by\n      the server. No dialog is used or required.\n   UDP Based PWDGEN Service\n\
    \      Another possible PWDGEN service is defined as a datagram based\n      application\
    \ on UDP.  A server listens for UDP datagrams on UDP\n      port 129.  When a\
    \ datagram is received, the six CRLF-delimited\n      words are sent back in an\
    \ answering datagram.\n"
