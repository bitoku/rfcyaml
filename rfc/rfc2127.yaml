- contents:
  - '              ISDN Management Information Base using SMIv2

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Abstract\n   This memo defines a portion of the Management Information Base (MIB)\n
    \  for use with network management protocols in the Internet community.\n   In
    particular, it defines a minimal set of managed objects for SNMP-\n   based management
    of ISDN terminal interfaces.  ISDN interfaces are\n   supported on a variety of
    equipment (for data and voice) including\n   terminal adapters, bridges, hosts,
    and routers.\n   This document specifies a MIB module in a manner that is compliant
    to\n   the SNMPv2 SMI.  The set of objects is consistent with the SNMP\n   framework
    and existing SNMP standards.\n   This document is a product of the ISDN MIB working
    group within the\n   Internet Engineering Task Force.  Comments are solicited
    and should\n   be addressed to the working group's mailing list at isdn-\n   mib@cisco.com
    and/or the author.\n   The current version of this document reflects changes made
    during the\n   last call period and the IESG review.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1 The SNMPv2 Network Management Framework ......................
    \   2\n   2 Object Definitions ...........................................    2\n
    \  3 Overview .....................................................    3\n   3.1
    Structure of the MIB .......................................    3\n   3.1.1 General
    Description ......................................    3\n   3.2 Relationship to
    the Interfaces MIB .........................    4\n   3.2.1 Layering Model ...........................................
    \   4\n   3.2.2 ifTestTable ..............................................    8\n
    \  3.2.3 ifRcvAddressTable ........................................    8\n   3.2.4
    ifEntry ..................................................    8\n   3.2.4.1 ifEntry
    for a Basic Rate hardware interface ............    8\n   3.2.4.2 ifEntry for
    a B channel ................................    9\n   3.2.4.3 ifEntry for LAPD
    (D channel Data Link Layer) ...........   10\n   3.2.4.4 ifEntry for a signaling
    channel ........................   12\n   3.3 Relationship to other MIBs .................................
    \  14\n   3.3.1 Relationship to the DS1/E1 MIB ...........................   14\n
    \  3.3.2 Relationship to the DS0 and DS0Bundle MIBs ...............   14\n   3.3.3
    Relationship to the Dial Control MIB .....................   14\n   3.4 ISDN interface
    specific information and implementation hints\n        ...........................................................
    \  14\n   3.4.1 ISDN leased lines ........................................   14\n
    \  3.4.2 Hyperchannels ............................................   15\n   3.4.3
    D channel backup and NFAS trunks .........................   16\n   3.4.4 X.25
    based packet-mode service in B and D channels .......   16\n   3.4.5 SPID handling
    ............................................   17\n   3.4.6 Closed User Groups
    .......................................   17\n   3.4.7 Provision of point-to-point
    line topology ................   18\n   3.4.8 Speech and audio bearer capability
    information elements ..   18\n   3.4.9 Attaching incoming calls to router ports
    .................   19\n   3.4.10 Usage of isdnMibDirectoryGroup and isdnDirectoryTable
    ...   20\n   4 Definitions ..................................................
    \  21\n   5 Acknowledgments ..............................................   47\n
    \  6 References ...................................................   47\n   7
    Security Considerations ......................................   49\n   8 Author's
    Address .............................................   49\n"
  title: Table of Contents
- contents:
  - "1.  The SNMPv2 Network Management Framework\n   The SNMPv2 Network Management
    Framework presently consists of three\n   major components.  They are:\n   o    the
    SMI, described in RFC 1902 [1] - the mechanisms used for\n        describing and
    naming objects for the purpose of management.\n   o    the MIB-II, STD 17, RFC
    1213 [2] - the core set of managed\n        objects for the Internet suite of
    protocols.\n   o    the protocol, STD 15, RFC 1157 [3] and/or RFC 1905 [4], -\n
    \       the protocol for accessing managed objects.\n   The Framework permits
    new objects to be defined for the purpose of\n   experimentation and evaluation.\n"
  title: 1.  The SNMPv2 Network Management Framework
- contents:
  - "2.  Object Definitions\n   Managed objects are accessed via a virtual information
    store, termed\n   the Management Information Base or MIB.  Objects in the MIB
    are\n   defined using the subset of Abstract Syntax Notation One (ASN.1)\n   defined
    in the SMI.  In particular, each object type is named by an\n   OBJECT IDENTIFIER,
    an administratively assigned name.  The object\n   type together with an object
    instance serves to uniquely identify a\n   specific instantiation of the object.
    \ For human convenience, we\n   often use a textual string, termed the descriptor,
    to refer to the\n   object type.\n"
  title: 2.  Object Definitions
- contents:
  - '3.  Overview

    '
  - contents:
    - "3.1.  Structure of the MIB\n   For managing ISDN interfaces, the following
      information is necessary:\n   o    Information for managing physical interfaces.
      In case of ISDN\n        primary rate, this are usually T1 or E1 lines, being
      managed in\n        the DS1/E1 MIB [12].  For Basic Rate lines, physical interfaces\n
      \       are managed by this MIB.\n   o    Information for managing B channels.\n
      \  o    Information for managing signaling channels.\n   o    Optionally, information
      for managing Terminal Endpoints (TE).\n        A Terminal Endpoint is a link
      layer connection to a switch.\n   o    Optionally, information for managing
      a list of directory numbers.\n   In order to manage connections over ISDN lines,
      the management of\n   peer information and call history information is required
      as well.\n   This information is defined in the Dial Control MIB [15].\n   The
      purpose for splitting the required information in two MIBs is to\n   be able
      to use parts of this information for non-ISDN interfaces as\n   well.  In particular,
      the Dial Control MIB might also be used for\n   other types of interfaces, e.g.
      modems or X.25 virtual connections.\n   Within this document, information has
      been structured into five\n   groups, which are described in the following chapters.\n"
    - contents:
      - "3.1.1.  General Description\n   This MIB controls all aspects of ISDN interfaces.
        \ It consists of\n   five groups.\n   o    The isdnMibBasicRateGroup is used
        to provide information\n        regarding physical Basic Rate interfaces.\n
        \  o    The isdnMibBearerGroup is used to control B (bearer) channels.\n        It
        supports configuration parameters as well as statistical\n        information
        related to B channels.\n   o    The isdnMibSignalingGroup is used to control
        D (delta) channels.\n        There are three tables in this group. The isdnSignalingTable
        and\n        isdnSignalingStatsTable support ISDN Network Layer configuration\n
        \       and statistics.  The isdnLapdTable supports ISDN Data Link Layer\n
        \       (LAPD) configuration and statistics.\n   o    The optional isdnMibEndpointGroup
        can be used to specify\n        Terminal Endpoints. It is required only if
        there are non-ISDN\n        endpoints defined for a given D channel, or if
        additional\n        information like Terminal Endpoint Identifier (TEI) values
        or\n        Service Profile IDentifiers (SPID) is required to identify a\n
        \       given ISDN user.\n   o    The optional isdnMibDirectoryGroup can be
        used to specify a\n        list of directory numbers for each signaling channel.
        \ It is\n        required only if the directory numbers to be accepted differ\n
        \       from the isdnSignalingCallingAddress as specified in the\n        isdnSignalingTable.\n"
      title: 3.1.1.  General Description
    title: 3.1.  Structure of the MIB
  - contents:
    - "3.2.  Relationship to the Interfaces MIB\n   This section clarifies the relationship
      of this MIB to the Interfaces\n   MIB [11].  Several areas of correlation are
      addressed in the\n   following subsections.  The implementor is referred to
      the Interfaces\n   MIB document in order to understand the general intent of
      these\n   areas.\n"
    - contents:
      - "3.2.1.  Layering Model\n   An ISDN interface usually consists of a D channel
        and a number of B\n   channels, all of which are layered on top of a physical
        interface.\n   Furthermore, there are multiple interface layers for each D
        channel.\n   There are Data Link Layer (LAPD) as well as Network Layer entities.\n
        \  This is accomplished in this MIB by creating a logical interface\n   (ifEntry)
        for each of the D channel entities and a logical interface\n   (ifEntry) for
        each of the B channels.  These are then correlated to\n   each other and to
        the physical interface using the ifStack table of\n   the Interfaces MIB [11].\n
        \  The basic model, therefore, looks something like this:\n       | |\n    +--+
        +--+\n    | D ch. |\n    |Layer 3|\n    +--+ +--+\n       | |        | |            |
        |    <== interface to upper\n    +--+ +--+  +--+ +--+      +--+ +--+     layers,
        to be provided\n    | D ch. |  |   B   |      |   B   |     by ifStack table\n
        \   |Layer 2|  |channel| .... |channel|\n    +--+ +--+  +--+ +--+      +--+
        +--+\n       | |        | |            | |    <== attachment to physical\n
        \   +--+ +--------+ +------------+ +----+   interfaces, to be provided\n    |
        \        physical interface        |   by ifStack table\n    |          (S/T,
        U or T1/E1)        |\n    +-----------------------------------+\n   Mapping
        of B/D channels to physical interfaces\n   Each D channel can support multiple
        Terminal Endpoints.  Terminal\n   Endpoints can either be one or multiple
        ISDN signaling channels, or\n   channels supporting X.25 based packet mode
        services.\n   To accomplish this, there can be multiple Network Layer entities
        on\n   top of each ISDN Data Link Layer (LAPD) interface.  The detailed\n
        \  model therefore looks something like this, including interface types\n
        \  as examples:\n  +------+  +----+  +----+\n  |x25ple|  |isdn|  |isdn|    Terminal
        Endpoints (X.25 or ISDN)\n  +--+---+  +-+--+  +-+--+\n     |        |       |\n
        \    | +------+       |       |      |   <== Interface to upper layers,\n
        \    | | +------------+       |      |       to be provided by ifStack\n     |
        | |                    |      |       table\n    ++-+-++                 +-+-+
        \ +-+-+\n    |lapd | D channel       |ds0|  |ds0| B channels\n    +--+--+
        Data Link Layer +-+-+  +-+-+\n       |                      |      |\n    +--+----------------------+------+--------------------+\n
        \   |                 ds1 or isdns/isdnu                  |\n    +-----------------------------------------------------+\n
        \  Detailed interface mapping\n   IfEntries are maintained for each D channel
        Network Layer entity\n   (Terminal Endpoint), for LAPD and for each B channel.\n
        \  The ifType for a Terminal Endpoint can be isdn(63) for ISDN signaling\n
        \  channels or x25ple(40) for X.25 based packet mode services.  The\n   ifType
        for D channel Data Link Layer (LAPD) interfaces is lapd(77).\n   The ifType
        for B channels is ds0(81).  The ifType for physical\n   interfaces is the
        matching IANA ifType, usually ds1(18) for Primary\n   Rate interfaces or isdns(75)/isdnu(76)
        for Basic Rate interfaces.\n   The ifStackTable is used to map B channels
        and LAPD interfaces to\n   physical interfaces and to map D channel Network
        Layer interfaces\n   (Terminal Endpoints) to LAPD.\n   In the example given
        above, the assignment of index values could for\n   example be as follows:\n"
      - "ifIndex ifType      ISDN MIB tables     Description\n                    indexed
        by ifIndex\n   1    isdns(75)   isdnBasicRateTable  Basic Rate physical interface\n
        \  2    lapd(77)    isdnLapdTable       LAPD interface\n   3    x25ple(40)
        \ isdnEndpointTable   X.25 Packet Layer\n   4    isdn(63)    isdnSignalingTable
        \ ISDN signaling channel #1\n                    isdnEndpointTable\n   5    isdn(63)
        \   isdnSignalingTable  ISDN signaling channel #2\n                    isdnEndpointTable\n
        \  6    ds0(81)     isdnBearerTable     B channel #1\n   7    ds0(81)     isdnBearerTable
        \    B channel #2\n   8    ppp(23)                         peer entry #1 (see
        below)\n   9    ppp(23)                         peer entry #2 (see below)\n
        \  The corresponding ifStack table entries would then be:\n        ifStackTable
        Entries\n        HigherLayer  LowerLayer\n        0            3\n        0
        \           4\n        0            5\n        0            8\n        0            9\n
        \       1            0\n        2            1\n        3            2\n        4
        \           2\n        5            2\n        6            1\n        7            1\n
        \       8            6\n        9            7\n   Mapping of B channels to
        upper interface layers is usually done using\n   the Dial Control MIB. For
        example, mapping on top of B channels might\n   look as follows:\n"
      - '+-------------------------------------------------------+

        '
      - '|               Network Layer Protocol                  |

        '
      - "+------+ +-------+ +-------+ +-------+ +-------+ +------+\n       | |       |
        |       | |       | |       | | <== appears active\n     +-+ +-+   +-+ +-+
        \  +-+ +-+   +-+ +-+   +-+ +-+\n     | PPP |   | PPP |   | F/R |   | PPP |
        \  | F/R |\n     | for |   | for |   | for |   | for |   | for |   ifEntry
        with\n     |Peer1|   |Peer2|   |switch   |Peer3|   |switch   shadow PeerEntry\n
        \    |     |   |     |   |  A  |   |     |   |  B  |\n     +-+ +-+   +-+ +-+
        \  +-+ +-+   +-+ +-+   +-+ +-+\n                 | |                 | |           <==
        some actually are\n    +--+ +--+ +--+ +--+ +--+ +--+ +--+ +--+ +--+ +--+\n
        \   |   B   | |   B   | |   B   | |   B   | |   B   |\n    |channel| |channel|
        |channel| |channel| |channel|\n    +--+ +--+ +--+ +--+ +--+ +--+ +--+ +--+
        +--+ +--+\n       | |       | |       | |       | |       | |\n"
      - '+------+ +-------+ +-------+ +-------+ +-------+ +------+

        '
      - '|             Basic/Primary Rate Interface              |

        '
      - "+-------------------------------------------------------+\n   Mapping of
        IP interfaces to Called Peers to B Channels\n   In this model, ifEntries are
        maintained for each peer.  Each peer is\n   required to have an associated
        ifEntry.  This interface can be of any\n   kind, e.g. PPP or LAPB.\n   The
        Dial Control MIB can be used for all types of demand-access\n   interfaces,
        e.g., ISDN, modems or X.25 virtual connections.\n"
      title: 3.2.1.  Layering Model
    - contents:
      - "3.2.2.  ifTestTable\n   The ifTestTable is not supported by this MIB.\n"
      title: 3.2.2.  ifTestTable
    - contents:
      - "3.2.3.  ifRcvAddressTable\n   The ifRcvAddressTable is not supported by this
        MIB.\n"
      title: 3.2.3.  ifRcvAddressTable
    - contents:
      - '3.2.4.  ifEntry

        '
      - contents:
        - "3.2.4.1.  ifEntry for a Basic Rate hardware interface\n   The ifGeneralGroup
          is supported for Basic Rate hardware interfaces.\n   ifTable           Comments\n
          \  ==============    ===========================================\n   ifIndex
          \          Each ISDN Basic Rate hardware interface is\n                     represented
          by an ifEntry.\n   ifDescr           Textual port description.\n   ifType
          \           The IANA value of isdns(75) or isdnu(76),\n                     whichever
          is appropriate.\n   ifSpeed           The overall bandwidth of this interface.\n
          \  ifPhysAddress     Return an empty string.\n   ifAdminStatus     The administrative
          status of the ISDN interface.\n   ifOperStatus      The current operational
          status of this interface.\n                     The operational status is
          dormant(5) if\n                     the interface is in standby mode, i.e.
          connected\n                     to the network, but without call activity.\n
          \                    The operational status is down(2) if the hardware\n
          \                    has detected that there is no layer 1 connection\n
          \                    to the switch.\n                     For other values,
          refer to the Interfaces MIB.\n   ifLastChange      Refer to the Interfaces
          MIB.\n   ifLinkUpDownTrapEnable\n                     Refer to the Interfaces
          MIB.\n   ifConnectorPresent\n                     Refer to the Interfaces
          MIB.\n   ifHighSpeed       Return zero.\n   ifName            Refer to the
          Interfaces MIB.\n"
        title: 3.2.4.1.  ifEntry for a Basic Rate hardware interface
      - contents:
        - "3.2.4.2.  ifEntry for a B channel\n   The ifEntry for a B channel supports
          the ifGeneralGroup of the\n   Interfaces MIB.\n   ifTable           Comments\n
          \  ==============    ===========================================\n   ifIndex
          \          Each ISDN B channel is represented by an ifEntry.\n   ifDescr
          \          Textual port description.\n   ifType            The IANA value
          of ds0(81).\n   ifSpeed           The bandwidth of this B channel.\n                     Usually,
          this is the value of 56000 or 64000.\n   ifPhysAddress     Return an empty
          string.\n   ifAdminStatus     The administrative status of this interface.\n
          \  ifOperStatus      The current operational status of this interface.\n
          \                    Note that dormant(5) is explicitly being used\n                     as
          defined in the Interfaces MIB.\n                     For other values, refer
          to the Interfaces MIB.\n   ifLastChange      Refer to the Interfaces MIB.\n
          \  ifLinkUpDownTrapEnable\n                     Refer to the Interfaces
          MIB.\n   ifConnectorPresent\n                     Refer to the Interfaces
          MIB.\n   ifHighSpeed       Return zero.\n   ifName            Refer to the
          Interfaces MIB.\n"
        title: 3.2.4.2.  ifEntry for a B channel
      - contents:
        - "3.2.4.3.  ifEntry for LAPD (D channel Data Link Layer)\n   The ifEntry
          for LAPD (D channel Data Link Layer) supports the\n   ifGeneralGroup and
          the ifPacketGroup of the Interfaces MIB.\n   ifTable           Comments\n
          \  ==============    ===========================================\n   ifIndex
          \          Each ISDN D channel Data Link layer is represented\n                     by
          an ifEntry.\n   ifDescr           Textual port description.\n   ifType            The
          IANA value of lapd(77).\n   ifSpeed           The bandwidth of this interface.
          Usually, this is\n                     the value of 16000 for basic rate
          interfaces or\n                     64000 for primary rate interfaces.\n
          \  ifPhysAddress     Return an empty string.\n   ifAdminStatus     The administrative
          status of this interface.\n   ifOperStatus      The current operational
          status of the ISDN\n                     LAPD interface. The operational
          status is\n                     dormant(5) if the interface is in standby
          mode\n                     (see Q.931 [8], Annex F, D channel backup\n                     procedures).\n
          \                    For other values, refer to the Interfaces MIB.\n   ifLastChange
          \     Refer to the Interfaces MIB.\n   ifLinkUpDownTrapEnable\n                     Refer
          to the Interfaces MIB.\n   ifConnectorPresent\n                     Refer
          to the Interfaces MIB.\n   ifHighSpeed       Return zero.\n   ifName            Refer
          to the Interfaces MIB.\n   ifMtu             The size of the largest frame
          which can be\n                     sent/received on this interface,\n                     specified
          in octets. Usually, this is the\n                     default value of 260
          as specified in Q.921\n                     [6], chapter 5.9.3.\n   ifInOctets
          \       The total number of octets received on this\n                     interface.\n
          \  ifInUcastPkts     The number of frames received on this interface\n                     whose
          address is not TEI=127.\n   ifInNUcastPkts    Deprecated.  Return the number
          of frames\n                     received on this interface with TEI=127.\n
          \  ifInMulticastPkts Return zero.\n   ifInBroadcastPkts Return the number
          of frames received\n                     on this interface with TEI=127.\n
          \  ifInDiscards      The total number of received frames which have\n                     been
          discarded.\n                     The possible reasons are: buffer shortage.\n
          \  ifInErrors        The number of inbound frames that contained\n                     errors
          preventing them from being deliverable\n                     to LAPD.\n
          \  ifInUnknownProtos The number of frames with known TEI, but unknown\n
          \                    SAPI (Service Access Point Identifier,\n                     see
          Q.921 [6], chapter 3.3.3).\n   ifOutOctets       The total number of octets
          transmitted on this\n                     interface.\n   ifOutUcastPkts
          \   The number of frames transmitted on this\n                     interface
          whose address is not TEI=127.\n   ifOutNUcastPkts   Deprecated.  Return
          the number of frames\n                     transmitted on this interface
          with TEI=127.\n   ifOutMulticastPkts\n                     Return zero.\n
          \  ifOutBroadcastPkts\n                     Return the number of frames
          transmitted\n                     on this interface with TEI=127.\n   ifOutDiscards
          \    The total number of outbound frames which\n                     were
          discarded. Possible reasons are:\n                     buffer shortage.\n
          \  ifOutErrors       The number of frames which could not be\n                     transmitted
          due to errors.\n   ifOutQlen         Deprecated. Return zero.\n   ifSpecific
          \       Deprecated. Return {0 0}.\n"
        title: 3.2.4.3.  ifEntry for LAPD (D channel Data Link Layer)
      - contents:
        - "3.2.4.4.  ifEntry for a signaling channel\n   The ifEntry for a signaling
          channel supports the ifGeneralGroup and\n   the ifPacketGroup of the Interfaces
          MIB.\n   ifTable           Comments\n   ==============    ===========================================\n
          \  ifIndex           Each ISDN signaling channel is represented by\n                     an
          ifEntry.\n   ifDescr           Textual port description.\n   ifType            The
          IANA value of isdn(63).\n   ifSpeed           The bandwidth of this signaling
          channel. Usually,\n                     this is the same value as for LAPD,
          i.e. 16000\n                     for basic rate interfaces or 64000 for
          primary rate\n                     interfaces.\n   ifPhysAddress     The
          ISDN address assigned to this signaling channel.\n                     This
          is a copy of isdnSignalingCallingAddress.\n   ifAdminStatus     The administrative
          status of the signaling channel.\n   ifOperStatus      The current operational
          status of this signaling\n                     channel. The operational
          status is dormant(5) if\n                     the signaling channel is currently
          not activated.\n                     For other values, refer to the Interfaces
          MIB.\n   ifLastChange      Refer to the Interfaces MIB.\n   ifLinkUpDownTrapEnable\n
          \                    Refer to the Interfaces MIB.\n   ifConnectorPresent\n
          \                    Refer to the Interfaces MIB.\n   ifHighSpeed       Return
          zero.\n   ifName            Refer to the Interfaces MIB.\n   ifMtu             The
          size of the largest frame which can be\n                     sent/received
          on this signaling channel,\n                     specified in octets. Usually,
          this is the\n                     default value of 260 as specified in Q.921\n
          \                    [6], chapter 5.9.3.\n   ifInOctets        The total
          number of octets received on this\n                     signaling channel.\n
          \  ifInUcastPkts     The number of frames received which are targeted\n
          \                    to this channel.\n   ifInNUcastPkts    Deprecated.
          \ Return the number of frames\n                     received on this signaling
          channel with TEI=127.\n   ifInMulticastPkts Return zero.\n   ifInBroadcastPkts
          Return the number of frames received\n                     on this signaling
          channel with TEI=127.\n   ifInDiscards      The total number of received
          frames which have been\n                     discarded.\n                     The
          possible reasons are: buffer shortage.\n   ifInErrors        The number
          of inbound frames that contained\n                     errors preventing
          them from being deliverable\n                     to the signaling channel.\n
          \  ifInUnknownProtos Return zero.\n   ifOutOctets       The total number
          of octets transmitted on this\n                     signaling channel.\n
          \  ifOutUcastPkts    The number of frames transmitted on this\n                     signaling
          channel whose address is not TEI=127.\n   ifOutNUcastPkts   Deprecated.
          \ Return the number of frames\n                     transmitted on this
          signaling channel with TEI=127.\n   ifOutMulticastPkts\n                     Return
          zero.\n   ifOutBroadcastPkts\n                     Return the number of
          frames transmitted\n                     on this signaling channel with
          TEI=127.\n   ifOutDiscards     The total number of outbound frames which\n
          \                    were discarded. Possible reasons are:\n                     buffer
          shortage.\n   ifOutErrors       The number of frames which could not be\n
          \                    transmitted due to errors.\n   ifOutQlen         Deprecated.
          Return zero.\n   ifSpecific        Deprecated. Return {0 0}.\n"
        title: 3.2.4.4.  ifEntry for a signaling channel
      title: 3.2.4.  ifEntry
    title: 3.2.  Relationship to the Interfaces MIB
  - contents:
    - '3.3.  Relationship to other MIBs

      '
    - contents:
      - "3.3.1.  Relationship to the DS1/E1 MIB\n   Implementation of the DS1/E1 MIB
        [12] is not required for supporting\n   this MIB. It is however recommended
        to implement the DS1/E1 MIB on\n   entities supporting Primary Rate interfaces.\n"
      title: 3.3.1.  Relationship to the DS1/E1 MIB
    - contents:
      - "3.3.2.  Relationship to the DS0 and DS0Bundle MIBs\n   Implementation of
        the DS0 MIB [13] is optional.\n   Implementation of the DS0Bundle MIB [13]
        may be required only if\n   hyperchannels are to be supported, depending on
        the multiplexing\n   scheme used in a given implementation. See chapter 3.4.2
        for details\n   on how to implement hyperchannels.\n"
      title: 3.3.2.  Relationship to the DS0 and DS0Bundle MIBs
    - contents:
      - "3.3.3.  Relationship to the Dial Control MIB\n   Implementation of the Dial
        Control MIB [15] is required.\n"
      title: 3.3.3.  Relationship to the Dial Control MIB
    title: 3.3.  Relationship to other MIBs
  - contents:
    - '3.4.  ISDN interface specific information and implementation hints

      '
    - contents:
      - "3.4.1.  ISDN leased lines\n   ISDN leased lines can be specified on a per-B-channel
        basis.  To do\n   so, the value of isdnBearerChannelType has to be set to
        leased(2).\n   There is no signaling protocol support for leased line B channels,\n
        \  since there is no signaling protocol action for these kinds of\n   interfaces.\n
        \  If there is no signaling support available for an ISDN interface,\n   this
        must be specified in the appropriate interface specific table.\n   For Basic
        Rate interfaces, isdnBasicRateSignalMode of\n   isdnBasicRateTable must be
        set to inactive(2).  For Primary Rate\n   interfaces, dsx1SignalMode of dsx1ConfigTable
        in DS1/E1 MIB [12] must\n   be set to none(1).  There are no isdnLapdTable
        or isdnSignalingTable\n   entries for such interfaces.\n   Depending on the
        leased line type and the service provider, the D\n   channel can be used for
        data transfer.  If this is the case the D\n   channel interface type is ds0(81)
        instead of lapd(77) and its usage\n   is identical to B channel usage if there
        is no signaling channel\n   available.\n   For a Primary Rate interface which
        is entirely used as a leased line,\n   there is no ISDN specific information
        available or required.  Such\n   leased lines can entirely be handled by the
        DS1/E1 MIB.\n"
      title: 3.4.1.  ISDN leased lines
    - contents:
      - "3.4.2.  Hyperchannels\n   The active switch protocol defines if hyperchannels
        are supported,\n   and the actual support is implementation dependent.  Hyperchannel\n
        \  connections will be requested by the interface user at call setup\n   time,
        e.g. by the peer connection handling procedures.\n   In the ISDN MIB, the
        isdnBearerMultirate object of isdnBearerTable\n   can be used to check if
        hyperchannels are being used for an active\n   call.\n   If hyperchannels
        are being used, multiplexing between the\n   encapsulation layer and the B
        channels is required, since there is\n   one encapsulation layer interface
        connected to several B channel\n   interfaces.  This can be accomplished in
        two ways.\n   o    The DS0Bundle MIB [13] can be used to provide the multiplexing.\n
        \       See the DS0Bundle MIB document for details.\n   o    The ifStackTable
        can be used to provide the multiplexing.  In\n        this case, there are
        several ifStackTable entries with the same\n        value of HigherLayer,
        and different values of LowerLayer.\n   It is up to the implementor to decide
        which multiplexing scheme to\n   use.\n   Each hyperchannel call is treated
        as one call in the\n   isdnSignalingStatsTable, independent of the number
        of B channels\n   involved.\n   For a hyperchannel call, all objects in the
        isdnBearerTable entries\n   related to this call (i.e., all isdnBearerTable
        entries associated to\n   B channels used by the hyperchannel) have identical
        values.  The\n   related objects in the isdnBearerTable are:\n       isdnBearerPeerAddress\n
        \      isdnBearerPeerSubAddress\n       isdnBearerCallOrigin\n       isdnBearerInfoType\n
        \      isdnBearerMultirate\n       isdnBearerCallSetupTime\n       isdnBearerCallConnectTime\n
        \      isdnBearerChargedUnits\n"
      title: 3.4.2.  Hyperchannels
    - contents:
      - "3.4.3.  D channel backup and NFAS trunks\n   D channel backup is defined
        in Q.931 [8], Annex F.  It describes Non-\n   Associated signaling and its
        use and functionality is basically\n   identical to Non Facility Associated
        Signaling (NFAS) trunks.\n   Non Facility Accociated Signaling (NFAS) basically
        means that a D\n   channel on a PRI interface is used to manage calls on other
        PRI\n   trunks.  This is required in North America for H11 channels, since\n
        \  all 24 time slots are being used for B channels.\n   According to Q.931,
        Annex F, the D channel backup feature can be\n   provided on a subscription
        basis and is network dependent.  The D\n   channel backup procedure is described
        in detail in Q.931.\n   For D channel backup, the controlling isdnSignalingTable
        entry is\n   layered on top of all attached LAPD interfaces.  This layering
        is\n   done using the ifStack table.  There is only one active LAPD\n   interface,
        however.  Inactive LAPD interfaces have an ifOperStatus of\n   dormant(5).\n
        \  NFAS trunks are also handled using the ifStack table. In this case, a\n
        \  signaling channel is layered on top of a LAPD interface as well as on\n
        \  top of all physical interfaces which are controlled by the signaling\n
        \  channel, but do not supply a D channel.\n"
      title: 3.4.3.  D channel backup and NFAS trunks
    - contents:
      - "3.4.4.  X.25 based packet-mode service in B and D channels\n   X.25 based
        packet mode service over B channels can be handled using\n   the Dial Control
        MIB by creating an appropriate peer entry.  The peer\n   entry ifType can
        then be x25(5), thus providing access to X.25\n   service.\n   X.25 based
        packet mode service over D channels can be handled by\n   creating an ifEndpointTable
        entry with an isdnEndpointIfType of\n   x25ple(40).  The upper protocol layers
        can then be attached to this\n   interface using the ifStack table.\n"
      title: 3.4.4.  X.25 based packet-mode service in B and D channels
    - contents:
      - "3.4.5.  SPID handling\n   Service Profile IDentifiers (SPIDs) are defined
        for BRI interfaces\n   only, and being used in North America.  SPIDs are required
        for DMS-\n   100, NI-1 and NI-2, and are optional for 5ESS.  A switch can
        define\n   up to 8 SPIDs per BRI.\n   Each Terminal Endpoint has a SPID assigned.
        \ It is normally built\n   from the party number (calling address for outgoing
        calls) with a\n   number of digits prepended and appended.  Since each network
        appears\n   to be different, both the calling address and the SPID have to
        be\n   stored.\n   The SPID identifies the particular services that have been\n
        \  provisioned for a terminal. If there are two B channels on a BRI,\n   there
        can be two SPIDs, one for each of the two B channels.  There\n   can also
        be a single SPID, providing access to both B channels.\n   The SPID gets registered
        with the switch after link establishment.\n   There is one data link for each
        SPID. As part of terminal\n   registration, an EID (Endpoint IDentifier) is
        defined by the switch.\n   On incoming calls, the switch may provide the EID,
        a called party\n   number, or both, depending on the ISDN code implemented
        in the\n   switch.\n   The EID has two bytes: USID (User Service IDentifier)
        and TID\n   (Terminal IDentifier). These are later used by some of the software\n
        \  versions running on the switch side (e.g. compliant with NI-1, 5ESS\n   custom)
        to broadcast SETUP messages with these included, so the\n   correct endpoint
        would accept the call. Other switch software\n   versions identify the endpoint
        with the Called Party Number.\n   In the ISDN MIB, the SPID can be entered
        using the isdnEndpointSpid\n   object of isdnEndpointTable.  The isdnSignalingCallingAddress,\n
        \  already being used to specify the calling number, cannot be used to\n   record
        the SPID since the values of the SPID and the Calling Address\n   may differ
        and both may be required to be present.\n"
      title: 3.4.5.  SPID handling
    - contents:
      - "3.4.6.  Closed User Groups\n   Closed User Groups (CUG), as defined in I.255.1
        [14], are supported\n   for circuit mode calls by ETSI (ETS 300 138) and 1TR6.
        \ In these\n   networks, an ISDN address can have one or more Closed User
        Groups\n   assigned.  If there is more than one Closed User Group assigned
        to a\n   given address, one of those is the preferred Closed User Group.  For\n
        \  such addresses, only calls from assigned Closed User Groups are\n   accepted
        by the network.\n   Thus, Closed User Groups are a parameter for peer entries
        and are\n   defined in the Dial Control MIB. A peer entry attached to a Closed\n
        \  User Group has to point to an ISDN interface which is attached to the\n
        \  Closed User Group in question.\n"
      title: 3.4.6.  Closed User Groups
    - contents:
      - "3.4.7.  Provision of point-to-point line topology\n   In the ISDN standards,
        there are two different meanings for the term\n   \"point-to-point\".\n   In
        ISDN standards, the term point-to-point are usually used for data\n   link
        connections, i.e. layer 2 connections, where each layer 2\n   connection from
        the TE to the network is a single point-to-point\n   connection.  Multiple
        connections of this kind may exist on one\n   physical (layer 1) connection,
        however, and in case of Basic Rate\n   interfaces there may be several TE's
        connected to one physical line\n   to the network.\n   The second meaning
        of \"point-to-point\" refers to the line topology,\n   i.e.  to layer 1 connections.
        \ For Primary Rate interfaces, the line\n   topology is always point-to-point.
        \ For Basic Rate interfaces, layer\n   1 point-to- point connections do exist
        in several countries, usually\n   being used for connecting PBX systems to
        the network.\n   The second meaning (layer 1 connections) is what will be
        referred to\n   as \"point-to-point\" connection throughout this document.\n
        \  For Basic Rate interfaces, the isdnBasicRateTable object\n   isdnBasicRateLineTopology
        can be used to select the line topology.\n"
      title: 3.4.7.  Provision of point-to-point line topology
    - contents:
      - "3.4.8.  Speech and audio bearer capability information elements\n   The objects
        speech(2), audio31(6) and audio7(7), as being used in\n   isdnBearerInfoType,
        refer to the Speech, 3.1 kHz Audio and old 7 kHz\n   Audio (now Multi-use)
        bearer capabilities for ISDN, as defined in\n   Q.931 [8], chapter 4.5.5,
        octet 3 of bearer capability information\n   element.\n   These capabilities
        are signaling artifices that allow networks to do\n   certain things with
        the call.  It is up to the network to decide what\n   to do.\n   The Speech
        Bearer Capability means that speech is being carried over\n   the channel,
        as in two people talking.  This would be POTS-type\n   speech.  The network
        may compress this, encrypt it or whatever it\n   wants with it as long as
        it delivers POTS quality speech to the other\n   end.  In other words, a modem
        is not guaranteed to work over this\n   connection.\n   The 3.1 kHz Audio
        capability indicates that the network carries the\n   3.1 kHz bandwidth across
        the network.  This would (theoretically)\n   allow modem signals to be carried
        across the network.  In the US, the\n   network automatically enters a capability
        of 3.1 kHz Audio on calls\n   coming into the ISDN from a POTS network.  This
        capability restricts\n   the network from interfering with the data channel
        in a way that\n   would corrupt the 3.1 kHz VoiceBand data.\n   7 kHz Audio
        was meant to signal the use of a higher quality audio\n   connection (e.g.,
        music from radio).  It was changed to Multi-Use\n   capability to allow it
        to be used for video-conferencing with fall\n   back to audio.\n   In some
        cases, the Speech or 3.1 kHz Bearer Capability provides a 56\n   kbit/s data
        path through the network.  Therefore, some people are\n   setting up calls
        with the Speech or 3.1 kHz BC and transmitting 56\n   kbit/s data over the
        connection.  This is usually to take advantage\n   of favorable tariffs for
        Speech as opposed to Data.\n   On the incoming side, the equipment is usually
        configured to ignore\n   the Bearer Capability and either answer all Speech
        calls as 56 kbit/s\n   data or to use one Directory Number for real speech
        and another for\n   data.\n"
      title: 3.4.8.  Speech and audio bearer capability information elements
    - contents:
      - "3.4.9.  Attaching incoming calls to router ports\n   In ISDN, there are several
        ways to identify an incoming call and to\n   attach a router port to this
        call.\n   o    The call can be identified and attached to a router port using\n
        \       the ISDN Calling Address, that is, the peer ISDN address.  Since\n
        \       the peer address is defined in a Dial Control MIB configuration\n
        \       entry for this peer, this would be the most natural way to\n        attach
        an incoming call to a router port.\n        In this configuration, only a
        single isdnSignalingTable entry is\n        required for each physical ISDN
        interface.  Unfortunately, the\n        ISDN Calling Address is not available
        in all countries and/or\n        switch protocols.  Therefore, other means
        for attaching incoming\n        calls to router ports must be provided.\n
        \  o    The call can also be identified and attached to a router port\n        using
        the ISDN Called Address.  In this case, a distinct ISDN\n        address or
        subaddress must be specified for each of the router\n        ports.  This
        can be accomplished in the ISDN MIB by creating a\n        isdnSignalingTable
        entry for each of the router ports, and by\n        connecting Dial Control
        MIB peer entries to the thereby created\n        interface using the dialCtlPeerCfgLowerIf
        object of\n        dialCtlPeerCfgTable.\n        If this type of router port
        identification is used in an\n        implementation, it is up to the implementor
        to decide if there\n        should be distinct TEI values assigned for each
        of the\n        isdnSignalingTable entries.  For this reason, the\n        isdnEndpointTable
        permits specifying the same TEI value in\n        multiple entries.  It is
        recommended to use dynamic TEI\n        assignment whenever possible.\n        The
        implementor should be aware that this type of configuration\n        requires
        a lot of configuration work for the customer, since an\n        entry in isdnSignalingTable
        must be created for each of the\n        router ports.\n   o    Incoming calls
        can also be identified and attached to router\n        ports using a higher
        layer functionality, such as PPP\n        authentication.  Defining this functionality
        is outside the\n        scope of this document.\n"
      title: 3.4.9.  Attaching incoming calls to router ports
    - contents:
      - "3.4.10.  Usage of isdnMibDirectoryGroup and isdnDirectoryTable\n   In some
        switch protocol or PBX implementations, the Called Number\n   Information
        Element on incoming calls can differ from the Calling\n   Number on outgoing
        calls.  Sometimes, the Called Number can be\n   different for incoming Local
        Calls, Long Distance Calls and\n   International Calls.  For Hunt Groups,
        the Called Number can be any\n   of the numbers in the Hunt Group.\n   The
        isdnDirectoryTable can be used to specify all these numbers.\n   Entries in
        the isdnDirectoryTable are always connected to specific\n   isdnSignalingTable
        entries.  No ifEntry is created for\n   isdnDirectoryTable entries.  Therefore,
        the isdnDirectoryTable can\n   not be used to attach incoming calls to router
        ports.  For router\n   port identification, isdnSignalingTable entries should
        be created\n   instead.\n"
      title: 3.4.10.  Usage of isdnMibDirectoryGroup and isdnDirectoryTable
    title: 3.4.  ISDN interface specific information and implementation hints
  title: 3.  Overview
- contents:
  - '4.  Definitions

    '
  - 'ISDN-MIB DEFINITIONS ::= BEGIN

    '
  - "IMPORTS\n        MODULE-IDENTITY,\n        NOTIFICATION-TYPE,\n        OBJECT-TYPE,\n
    \       Counter32,\n        Gauge32,\n        Integer32\n                FROM
    SNMPv2-SMI\n        DisplayString,\n        TruthValue,\n        TimeStamp,\n
    \       RowStatus,\n        TestAndIncr,\n        TEXTUAL-CONVENTION\n                 FROM
    SNMPv2-TC\n        MODULE-COMPLIANCE,\n        OBJECT-GROUP,\n        NOTIFICATION-GROUP\n
    \               FROM SNMPv2-CONF\n        ifIndex,\n        InterfaceIndex\n                FROM
    IF-MIB\n        IANAifType\n                FROM IANAifType-MIB\n        transmission\n
    \               FROM RFC1213-MIB;\n"
  - "isdnMib MODULE-IDENTITY\n        LAST-UPDATED    \"9609231642Z\" -- Sep 23, 1996\n
    \       ORGANIZATION    \"IETF ISDN MIB Working Group\"\n        CONTACT-INFO\n
    \           \"        Guenter Roeck\n             Postal: cisco Systems\n                     170
    West Tasman Drive\n                     San Jose, CA 95134\n                     U.S.A.\n
    \            Phone:  +1 408 527 3143\n             E-mail: groeck@cisco.com\"\n
    \       DESCRIPTION\n            \"The MIB module to describe the\n             management
    of ISDN interfaces.\"\n        ::= { transmission 20 }\n"
  - '-- The ISDN hardware interface (BRI or PRI) is represented

    '
  - '-- by a media specific ifEntry.

    '
  - '--

    '
  - '-- For basic rate lines, the media specifics for the physical interface

    '
  - '-- is defined in the physical interface group of the ISDN MIB.

    '
  - '-- The ifType for physical basic rate interfaces is isdns(75)

    '
  - '-- or isdnu(76), whichever is appropriate.

    '
  - '--

    '
  - '-- For primary rate, the media specifics are defined in the Trunk

    '
  - '-- MIB and the ifType has a value of ds1(18).

    '
  - '-- Each signaling channel is represented by an entry

    '
  - '-- in the isdnSignalingTable.

    '
  - '-- The signaling channel has an ifType value of isdn(63).

    '
  - '-- Each B channel is also represented as an entry

    '
  - '-- in the ifTable. The B channels have an ifType value

    '
  - '-- of ds0(81).

    '
  - '-- This model is used while defining objects and tables

    '
  - '-- for management.

    '
  - '-- The ISDN MIB allows sub-layers. For example, the data transfer

    '
  - '-- over a B channel may take place with PPP encapsulation. While the

    '
  - '-- ISDN MIB describes the D and B channels, a media specific MIB

    '
  - '-- for PPP can be used on a layered basis. This is as per

    '
  - '-- the interfaces MIB.

    '
  - '-- Textual conventions

    '
  - "IsdnSignalingProtocol ::= TEXTUAL-CONVENTION\n        STATUS      current\n        DESCRIPTION\n
    \           \"This data type is used as the syntax of the\n             isdnSignalingProtocol
    object in the\n             definition of ISDN-MIB's isdnSignalingTable.\n             The
    definition of this textual convention with the\n             addition of newly
    assigned values is published\n             periodically by the IANA, in either
    the Assigned\n             Numbers RFC, or some derivative of it specific to\n
    \            Internet Network Management number assignments.  (The\n             latest
    arrangements can be obtained by contacting the\n             IANA.)\n             Requests
    for new values should be made to IANA via\n             email (iana@iana.org).\"\n
    \       SYNTAX      INTEGER {\n             other(1),          -- none of the
    following\n             dss1(2),           -- ITU DSS1 (formerly CCITT) Q.931\n
    \            etsi(3),           -- Europe / ETSI ETS300-102\n                                --
    plus supplementary services\n                                -- (ETSI 300-xxx)\n
    \                               -- note that NET3, NET5 define\n                                --
    test procedures for ETS300-102\n                                -- and have been
    replaced by\n                                -- I-CTR 3 and I-CTR 4.\n             dass2(4),
    \         -- U.K.   / DASS2 (PRI)\n             ess4(5),           -- U.S.A. /
    AT&T 4ESS\n             ess5(6),           -- U.S.A. / AT&T 5ESS\n             dms100(7),
    \        -- U.S.A. / Northern Telecom DMS100\n             dms250(8),         --
    U.S.A. / Northern Telecom DMS250\n             ni1(9),            -- U.S.A. /
    National ISDN 1 (BRI)\n             ni2(10),           -- U.S.A. / National ISDN
    2 (BRI, PRI)\n             ni3(11),           -- U.S.A. / next one\n             vn2(12),
    \          -- France / VN2\n             vn3(13),           -- France / VN3\n
    \            vn4(14),           -- France / VN4 (ETSI with changes)\n             vn6(15),
    \          -- France / VN6 (ETSI with changes)\n                                --
    delta document CSE P 10-21 A\n                                -- test document
    \ CSE P 10-20 A\n             kdd(16),           -- Japan  / KDD\n             ins64(17),
    \        -- Japan  / NTT INS64\n             ins1500(18),       -- Japan  / NTT
    INS1500\n             itr6(19),          -- Germany/ 1TR6 (BRI, PRI)\n             cornet(20),
    \       -- Germany/ Siemens HiCom CORNET\n             ts013(21),         -- Australia
    / TS013\n                                -- (formerly TPH 1962, BRI)\n             ts014(22),
    \        -- Australia / TS014\n                                -- (formerly TPH
    1856, PRI)\n             qsig(23),          -- Q.SIG\n             swissnet2(24),
    \    -- SwissNet-2\n             swissnet3(25)      -- SwissNet-3\n        }\n"
  - '-- Isdn Mib objects definitions

    '
  - 'isdnMibObjects OBJECT IDENTIFIER ::= { isdnMib 1 }

    '
  - '-- ISDN physical interface group

    '
  - '-- This group describes physical basic rate interfaces.

    '
  - 'isdnBasicRateGroup      OBJECT IDENTIFIER ::= { isdnMibObjects 1 }

    '
  - "isdnBasicRateTable OBJECT-TYPE\n        SYNTAX      SEQUENCE OF IsdnBasicRateEntry\n
    \       MAX-ACCESS  not-accessible\n        STATUS      current\n        DESCRIPTION\n
    \           \"Table containing configuration and operational\n             parameters
    for all physical Basic Rate\n             interfaces on this managed device.\"\n
    \       ::= { isdnBasicRateGroup 1 }\n"
  - "isdnBasicRateEntry OBJECT-TYPE\n        SYNTAX      IsdnBasicRateEntry\n        MAX-ACCESS
    \ not-accessible\n        STATUS      current\n        DESCRIPTION\n            \"An
    entry in the ISDN Basic Rate Table.\"\n        INDEX { ifIndex }\n        ::=
    { isdnBasicRateTable 1 }\n"
  - "IsdnBasicRateEntry ::= SEQUENCE {\n            isdnBasicRateIfType         INTEGER,\n
    \           isdnBasicRateLineTopology   INTEGER,\n            isdnBasicRateIfMode
    \        INTEGER,\n            isdnBasicRateSignalMode     INTEGER\n        }\n"
  - "isdnBasicRateIfType OBJECT-TYPE\n        SYNTAX      INTEGER {\n            isdns(75),\n
    \           isdnu(76)\n        }\n        MAX-ACCESS  read-write\n        STATUS
    \     current\n        DESCRIPTION\n            \"The physical interface type.
    For 'S/T' interfaces,\n             also called 'Four-wire Basic Access Interface',\n
    \            the value of this object is isdns(75).\n             For 'U' interfaces,
    also called 'Two-wire Basic\n             Access Interface', the value of this
    object is\n             isdnu(76).\"\n        ::= { isdnBasicRateEntry 1 }\n"
  - "isdnBasicRateLineTopology OBJECT-TYPE\n        SYNTAX      INTEGER {\n            pointToPoint(1),\n
    \           pointToMultipoint(2)\n        }\n        MAX-ACCESS  read-write\n
    \       STATUS      current\n        DESCRIPTION\n            \"The line topology
    to be used for this interface.\n             Note that setting isdnBasicRateIfType
    to isdns(75)\n             does not necessarily mean a line topology of\n             point-to-multipoint.\"\n
    \       ::= { isdnBasicRateEntry 2 }\n"
  - "isdnBasicRateIfMode OBJECT-TYPE\n        SYNTAX      INTEGER {\n            te(1),\n
    \           nt(2)\n        }\n        MAX-ACCESS  read-write\n        STATUS      current\n
    \       DESCRIPTION\n            \"The physical interface mode. For TE mode, the
    value\n             of this object is te(1). For NT mode, the value\n             of
    this object is nt(2).\"\n        ::= { isdnBasicRateEntry 3 }\n"
  - "isdnBasicRateSignalMode OBJECT-TYPE\n        SYNTAX      INTEGER {\n            active(1),\n
    \           inactive(2)\n        }\n        MAX-ACCESS  read-write\n        STATUS
    \     current\n        DESCRIPTION\n            \"The signaling channel operational
    mode for this interface.\n             If active(1) there is a signaling channel
    on this\n             interface. If inactive(2) a signaling channel is\n             not
    available.\"\n        ::= { isdnBasicRateEntry 4 }\n"
  - '-- The B channel (bearer channel) group

    '
  - '-- Note that disconnects can explicitely be handled using the

    '
  - '-- ifStack table. If a connection is to be disconnected,

    '
  - '-- the according ifStack entry has to be removed.

    '
  - '-- More specifically, the ifStackTable entry which binds the high-layer

    '
  - '-- ifTable entry (and related dialCtlNbrCfgTable entry) to the

    '
  - '-- B channel ifTable entry (and related isdnBearerTable entry)

    '
  - '-- during an active call has to be removed.

    '
  - 'isdnBearerGroup OBJECT IDENTIFIER ::= { isdnMibObjects 2 }

    '
  - "isdnBearerTable OBJECT-TYPE\n        SYNTAX      SEQUENCE OF IsdnBearerEntry\n
    \       MAX-ACCESS  not-accessible\n        STATUS      current\n        DESCRIPTION\n
    \           \"This table defines port specific operational, statistics\n             and
    active call data for ISDN B channels. Each entry\n             in this table describes
    one B (bearer) channel.\"\n        ::= { isdnBearerGroup 1 }\n"
  - "isdnBearerEntry OBJECT-TYPE\n        SYNTAX      IsdnBearerEntry\n        MAX-ACCESS
    \ not-accessible\n        STATUS      current\n        DESCRIPTION\n            \"Operational
    and statistics information relating to\n             one port. A port is a single
    B channel.\"\n        INDEX { ifIndex }\n        ::= { isdnBearerTable 1 }\n"
  - "IsdnBearerEntry ::=\n        SEQUENCE {\n            isdnBearerChannelType           INTEGER,\n
    \           isdnBearerOperStatus            INTEGER,\n            isdnBearerChannelNumber
    \        INTEGER,\n            isdnBearerPeerAddress           DisplayString,\n
    \           isdnBearerPeerSubAddress        DisplayString,\n            isdnBearerCallOrigin
    \           INTEGER,\n            isdnBearerInfoType              INTEGER,\n            isdnBearerMultirate
    \            TruthValue,\n            isdnBearerCallSetupTime         TimeStamp,\n
    \           isdnBearerCallConnectTime       TimeStamp,\n            isdnBearerChargedUnits
    \         Gauge32\n        }\n"
  - "isdnBearerChannelType           OBJECT-TYPE\n        SYNTAX INTEGER {\n            dialup(1),\n
    \           leased(2)\n        }\n        MAX-ACCESS  read-write\n        STATUS
    \     current\n        DESCRIPTION\n            \"The B channel type. If the B
    channel is connected\n             to a dialup line, this object has a value of\n
    \            dialup(1). In this case, it is controlled by\n             an associated
    signaling channel. If the B channel\n             is connected to a leased line,
    this object has\n             a value of leased(2). For leased line B channels,
    there\n             is no signaling channel control available.\"\n        ::=
    { isdnBearerEntry 1 }\n"
  - "isdnBearerOperStatus            OBJECT-TYPE\n        SYNTAX INTEGER {\n            idle(1),\n
    \           connecting(2),\n            connected(3),\n            active(4)\n
    \       }\n        MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION\n
    \           \"The current call control state for this port.\n             idle(1):
    \      The B channel is idle.\n                            No call or call attempt
    is going on.\n             connecting(2): A connection attempt (outgoing call)\n
    \                           is being made on this interface.\n             connected(3):
    \ An incoming call is in the process\n                            of validation.\n
    \            active(4):     A call is active on this interface.\"\n        ::=
    { isdnBearerEntry 2 }\n"
  - "isdnBearerChannelNumber         OBJECT-TYPE\n        SYNTAX INTEGER (1..30)\n
    \       MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION\n
    \           \"The identifier being used by a signaling protocol\n             to
    identify this B channel, also referred to as\n             B channel number. If
    the Agent also supports the DS0 MIB,\n             the values of isdnBearerChannelNumber
    and dsx0Ds0Number\n             must be identical for a given B channel.\"\n        ::=
    { isdnBearerEntry 3 }\n"
  - "isdnBearerPeerAddress           OBJECT-TYPE\n        SYNTAX   DisplayString\n
    \       MAX-ACCESS   read-only\n        STATUS   current\n        DESCRIPTION\n
    \           \"The ISDN address the current or last call is or was\n             connected
    to.\n             In some cases, the format of this information can not\n             be
    predicted, since it largely depends on the type\n             of switch or PBX
    the device is connected to. Therefore,\n             the detailed format of this
    information is not\n             specified and is implementation dependent.\n
    \            If possible, the agent should supply this information\n             using
    the E.164 format. In this case, the number must\n             start with '+'.
    Otherwise, IA5 number digits must be used.\n             If the peer ISDN address
    is not available,\n             this object has a length of zero.\"\n        REFERENCE\n
    \           \"ITU-T E.164, Q.931 chapter 4.5.10\"\n        ::= { isdnBearerEntry
    4 }\n"
  - "isdnBearerPeerSubAddress        OBJECT-TYPE\n        SYNTAX   DisplayString\n
    \       MAX-ACCESS   read-only\n        STATUS   current\n        DESCRIPTION\n
    \           \"The ISDN subaddress the current or last call is or was\n             connected
    to.\n             The subaddress is an user supplied string of up to 20\n             IA5
    characters and is transmitted transparently through\n             the network.\n
    \            If the peer subaddress is not available, this object\n             has
    a length of zero.\"\n        REFERENCE\n             \"ITU-T I.330, Q.931 chapter
    4.5.11\"\n        ::= { isdnBearerEntry 5 }\n"
  - "isdnBearerCallOrigin            OBJECT-TYPE\n          SYNTAX   INTEGER {\n            unknown(1),\n
    \           originate(2),\n            answer(3),\n            callback(4)\n        }\n
    \       MAX-ACCESS   read-only\n        STATUS   current\n        DESCRIPTION\n
    \           \"The call origin for the current or last call. If since\n             system
    startup there was no call on this interface,\n             this object has a value
    of unknown(1).\"\n        ::= { isdnBearerEntry 6 }\n"
  - "isdnBearerInfoType              OBJECT-TYPE\n        SYNTAX      INTEGER {\n
    \           unknown(1),\n            speech(2),\n            unrestrictedDigital(3),
    \      -- as defined in Q.931\n            unrestrictedDigital56(4),     -- with
    56k rate adaption\n            restrictedDigital(5),\n            audio31(6),
    \                  -- 3.1 kHz audio\n            audio7(7),                    --
    7 kHz audio\n            video(8),\n            packetSwitched(9)\n        }\n
    \       MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION\n
    \           \"The Information Transfer Capability for the current\n             or
    last call.\n             speech(2) refers to a non-data connection, whereas\n
    \            audio31(6) and audio7(7) refer to data mode connections.\n             Note
    that Q.931, chapter 4.5.5, originally defined\n             audio7(7) as '7 kHz
    audio' and now defines it as\n             'Unrestricted digital information with
    tones/\n             announcements'.\n             If since system startup there
    has been no call on this\n             interface, this object has a value of unknown(1).\"\n
    \       REFERENCE\n            \"Q.931 [8], chapter 4.5.5, octet 3 of bearer capability\n
    \            information element, combined with the User Rate\n             (as
    defined in octets 5 and 5a to 5d), if rate adaption\n             is being used.\"\n
    \       ::= { isdnBearerEntry 7 }\n"
  - "isdnBearerMultirate             OBJECT-TYPE\n        SYNTAX      TruthValue\n
    \       MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION\n
    \           \"This flag indicates if the current or last call used\n             multirate.
    The actual information transfer rate,\n             in detail specified in octet
    4.1 (rate multiplier),\n             is the sum of all B channel ifSpeed values
    for\n             the hyperchannel.\n             If since system startup there
    was no call on this\n             interface, this object has a value of false(2).\"\n
    \       REFERENCE\n            \"Q.931 [8], chapter 4.5.5.\"\n        ::= { isdnBearerEntry
    8 }\n"
  - "isdnBearerCallSetupTime         OBJECT-TYPE\n        SYNTAX      TimeStamp\n
    \       MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION\n
    \           \"The value of sysUpTime when the ISDN setup message for\n             the
    current or last call was sent or received. If since\n             system startup
    there has been no call on this interface,\n             this object has a value
    of zero.\"\n        ::= { isdnBearerEntry 9 }\n"
  - "isdnBearerCallConnectTime       OBJECT-TYPE\n        SYNTAX      TimeStamp\n
    \       MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION\n
    \           \"The value of sysUpTime when the ISDN connect message for\n             the
    current or last call was sent or received. If since\n             system startup
    there has been no call on this interface,\n             this object has a value
    of zero.\"\n        ::= { isdnBearerEntry 10 }\n"
  - "isdnBearerChargedUnits          OBJECT-TYPE\n        SYNTAX      Gauge32\n        MAX-ACCESS
    \ read-only\n        STATUS      current\n        DESCRIPTION\n            \"The
    number of charged units for the current or last\n             connection. For
    incoming calls or if charging information\n             is not supplied by the
    switch, the value of this object\n             is zero.\"\n        ::= { isdnBearerEntry
    11 }\n"
  - '-- ISDN signaling group

    '
  - 'isdnSignalingGroup OBJECT IDENTIFIER ::= { isdnMibObjects 3 }

    '
  - '-- signaling channel configuration table

    '
  - '-- There is one entry in this table for each Terminal Endpoint

    '
  - '-- (link layer connection to the switch).

    '
  - '-- Usually, there is one endpoint per D channel. In some

    '
  - '-- cases, however, there can be multiple endpoints.

    '
  - '-- Thus, entries in this table can be created and deleted.

    '
  - '-- This also means the creation of an associated ifEntry.

    '
  - '--

    '
  - '-- D channel backup and NFAS trunks are handled using the

    '
  - '-- ifStack table.

    '
  - '-- In case of D channel backup, there are multiple

    '
  - '-- Data Link Layer (LAPD) interfaces. Only one interface is

    '
  - '-- active; all others are dormant(5).

    '
  - '-- In case of NFAS trunks, one lower interface is the

    '
  - '-- LAPD interface, while the other lower interfaces are physical

    '
  - '-- interfaces.

    '
  - '-- If directory number and calling address differ from each other

    '
  - '-- or multiple directory numbers are being used,

    '
  - '-- the isdnDirectoryTable has to be used to enter such

    '
  - '-- directory numbers.

    '
  - "isdnSignalingGetIndex OBJECT-TYPE\n        SYNTAX      TestAndIncr\n        MAX-ACCESS
    \ read-write\n        STATUS      current\n        DESCRIPTION\n            \"The
    recommended procedure for selecting a new index for\n             isdnSignalingTable
    row creation is to GET the value of\n             this object, and then to SET
    the object with the same\n             value. If the SET operation succeeds, the
    manager can use\n             this value as an index to create a new row in this
    table.\"\n        REFERENCE\n            \"RFC1903, TestAndIncr textual convention.\"\n
    \       ::= { isdnSignalingGroup 1 }\n"
  - "isdnSignalingTable OBJECT-TYPE\n        SYNTAX      SEQUENCE OF IsdnSignalingEntry\n
    \       MAX-ACCESS  not-accessible\n        STATUS      current\n        DESCRIPTION\n
    \           \"ISDN signaling table containing configuration and\n             operational
    parameters for all ISDN signaling\n             channels on this managed device.\"\n
    \       ::= { isdnSignalingGroup 2 }\n"
  - "isdnSignalingEntry OBJECT-TYPE\n        SYNTAX      IsdnSignalingEntry\n        MAX-ACCESS
    \ not-accessible\n        STATUS      current\n        DESCRIPTION\n            \"An
    entry in the ISDN Signaling Table. To create a new\n             entry, only isdnSignalingProtocol
    needs to be specified\n             before isdnSignalingStatus can become active(1).\"\n
    \       INDEX { isdnSignalingIndex }\n        ::= { isdnSignalingTable 1 }\n"
  - "IsdnSignalingEntry ::= SEQUENCE {\n            isdnSignalingIndex          INTEGER,\n
    \           isdnSignalingIfIndex        InterfaceIndex,\n            isdnSignalingProtocol
    \      IsdnSignalingProtocol,\n            isdnSignalingCallingAddress DisplayString,\n
    \           isdnSignalingSubAddress     DisplayString,\n            isdnSignalingBchannelCount
    \ Integer32,\n            isdnSignalingInfoTrapEnable INTEGER,\n            isdnSignalingStatus
    \        RowStatus\n        }\n"
  - "isdnSignalingIndex OBJECT-TYPE\n        SYNTAX      INTEGER (1..2147483647)\n
    \       MAX-ACCESS  not-accessible\n        STATUS      current\n        DESCRIPTION\n
    \           \"The index value which uniquely identifies an entry\n             in
    the isdnSignalingTable.\"\n        ::= { isdnSignalingEntry 1 }\n"
  - "isdnSignalingIfIndex OBJECT-TYPE\n        SYNTAX      InterfaceIndex\n        MAX-ACCESS
    \ read-only\n        STATUS      current\n        DESCRIPTION\n            \"The
    ifIndex value of the interface associated with this\n             signaling channel.\"\n
    \       ::= { isdnSignalingEntry 2 }\n"
  - "isdnSignalingProtocol OBJECT-TYPE\n        SYNTAX      IsdnSignalingProtocol\n
    \       MAX-ACCESS  read-create\n        STATUS      current\n        DESCRIPTION\n
    \           \"The particular protocol type supported by the\n             switch
    providing access to the ISDN network\n             to which this signaling channel
    is connected.\"\n        ::= { isdnSignalingEntry 3 }\n"
  - "isdnSignalingCallingAddress OBJECT-TYPE\n        SYNTAX      DisplayString\n
    \       MAX-ACCESS  read-create\n        STATUS      current\n        DESCRIPTION\n
    \           \"The ISDN Address to be assigned to this signaling\n             channel.
    More specifically, this is the 'Calling Address\n             information element'
    as being passed to the switch\n             in outgoing call setup messages.\n
    \            It can be an EAZ (1TR6), a calling number (DSS1, ETSI)\n             or
    any other number necessary to identify a signaling\n             interface. If
    there is no such number defined or required,\n             this is a zero length
    string. It is represented in\n             DisplayString form.\n             Incoming
    calls can also be identified by this number.\n             If the Directory Number,
    i.e. the Called Number in\n             incoming calls, is different to this number,
    the\n             isdnDirectoryTable has to be used to specify all\n             possible
    Directory Numbers.\n             The format of this information largely depends
    on the type\n             of switch or PBX the device is connected to. Therefore,\n
    \            the detailed format of this information is not\n             specified
    and is implementation dependent.\n             If possible, the agent should implement
    this information\n             using the E.164 number format. In this case, the
    number\n             must start with '+'. Otherwise, IA5 number digits must\n
    \            be used.\"\n        REFERENCE\n            \"ITU-T E.164, Q.931 chapter
    4.5.10\"\n        DEFVAL { \"\" }\n        ::= { isdnSignalingEntry 4 }\n"
  - "isdnSignalingSubAddress OBJECT-TYPE\n        SYNTAX      DisplayString\n        MAX-ACCESS
    \ read-create\n        STATUS      current\n        DESCRIPTION\n            \"Supplementary
    information to the ISDN address assigned\n             to this signaling channel.
    Usually, this is the\n             subaddress as defined in Q.931.\n             If
    there is no such number defined or required, this is\n             a zero length
    string.\n             The subaddress is used for incoming calls as well as\n             for
    outgoing calls.\n             The subaddress is an user supplied string of up
    to 20\n             IA5 characters and is transmitted transparently through\n
    \            the network.\"\n        REFERENCE\n            \"ITU-T I.330, Q.931
    chapter 4.5.11\"\n        DEFVAL { \"\" }\n        ::= { isdnSignalingEntry 5
    }\n"
  - "isdnSignalingBchannelCount OBJECT-TYPE\n        SYNTAX      Integer32 (1..65535)\n
    \       MAX-ACCESS  read-create\n        STATUS      current\n        DESCRIPTION\n
    \           \"The total number of B channels (bearer channels)\n             managed
    by this signaling channel. The default value\n             of this object depends
    on the physical interface type\n             and is either 2 for Basic Rate interfaces
    or\n             24 (30) for Primary Rate interfaces.\"\n        ::= { isdnSignalingEntry
    6 }\n"
  - "isdnSignalingInfoTrapEnable    OBJECT-TYPE\n        SYNTAX      INTEGER {\n            enabled(1),\n
    \           disabled(2)\n        }\n        MAX-ACCESS  read-create\n        STATUS
    \     current\n        DESCRIPTION\n            \"Indicates whether isdnMibCallInformation
    traps\n             should be generated for calls on this signaling\n             channel.\"\n
    \       DEFVAL      { disabled }\n        ::= { isdnSignalingEntry 7 }\n"
  - "isdnSignalingStatus OBJECT-TYPE\n        SYNTAX      RowStatus\n        MAX-ACCESS
    \ read-create\n        STATUS      current\n        DESCRIPTION\n            \"This
    object is used to create and delete rows in the\n             isdnSignalingTable.\"\n
    \       ::= { isdnSignalingEntry 8 }\n"
  - '-- Signaling channel statistics table

    '
  - '-- There is one entry for each signaling connection

    '
  - '-- in this table.

    '
  - '-- Note that the ifEntry also has some statistics information.

    '
  - "isdnSignalingStatsTable OBJECT-TYPE\n        SYNTAX      SEQUENCE OF IsdnSignalingStatsEntry\n
    \       MAX-ACCESS  not-accessible\n        STATUS      current\n        DESCRIPTION\n
    \           \"ISDN signaling table containing statistics\n             information
    for all ISDN signaling channels\n             on this managed device.\n             Only
    statistical information which is not already being\n             counted in the
    ifTable is being defined in this table.\"\n        ::= { isdnSignalingGroup 3
    }\n"
  - "isdnSignalingStatsEntry OBJECT-TYPE\n        SYNTAX      IsdnSignalingStatsEntry\n
    \       MAX-ACCESS  not-accessible\n        STATUS      current\n        DESCRIPTION\n
    \           \"An entry in the ISDN Signaling statistics Table.\"\n        AUGMENTS
    { isdnSignalingEntry }\n        ::= { isdnSignalingStatsTable 1 }\n"
  - "IsdnSignalingStatsEntry ::= SEQUENCE {\n            isdnSigStatsInCalls         Counter32,\n
    \           isdnSigStatsInConnected     Counter32,\n            isdnSigStatsOutCalls
    \       Counter32,\n            isdnSigStatsOutConnected    Counter32,\n            isdnSigStatsChargedUnits
    \   Counter32\n        }\n"
  - "isdnSigStatsInCalls OBJECT-TYPE\n        SYNTAX      Counter32\n        MAX-ACCESS
    \ read-only\n        STATUS      current\n        DESCRIPTION\n            \"The
    number of incoming calls on this interface.\"\n        ::= { isdnSignalingStatsEntry
    1 }\n"
  - "isdnSigStatsInConnected OBJECT-TYPE\n        SYNTAX      Counter32\n        MAX-ACCESS
    \ read-only\n        STATUS      current\n        DESCRIPTION\n            \"The
    number of incoming calls on this interface\n             which were actually connected.\"\n
    \       ::= { isdnSignalingStatsEntry 2 }\n"
  - "isdnSigStatsOutCalls OBJECT-TYPE\n        SYNTAX      Counter32\n        MAX-ACCESS
    \ read-only\n        STATUS      current\n        DESCRIPTION\n            \"The
    number of outgoing calls on this interface.\"\n        ::= { isdnSignalingStatsEntry
    3 }\n"
  - "isdnSigStatsOutConnected OBJECT-TYPE\n        SYNTAX      Counter32\n        MAX-ACCESS
    \ read-only\n        STATUS      current\n        DESCRIPTION\n            \"The
    number of outgoing calls on this interface\n             which were actually connected.\"\n
    \       ::= { isdnSignalingStatsEntry 4 }\n"
  - "isdnSigStatsChargedUnits OBJECT-TYPE\n        SYNTAX      Counter32\n        MAX-ACCESS
    \ read-only\n        STATUS      current\n        DESCRIPTION\n            \"The
    number of charging units on this interface since\n             system startup.\n
    \            Only the charging units applying to the local interface,\n             i.e.
    for originated calls or for calls with 'Reverse\n             charging' being
    active, are counted here.\"\n        ::= { isdnSignalingStatsEntry 5 }\n"
  - '--

    '
  - '-- The LAPD table

    '
  - "isdnLapdTable OBJECT-TYPE\n        SYNTAX      SEQUENCE OF IsdnLapdEntry\n        MAX-ACCESS
    \ not-accessible\n        STATUS      current\n        DESCRIPTION\n            \"Table
    containing configuration and statistics\n             information for all LAPD
    (D channel Data Link)\n             interfaces on this managed device.\n             Only
    statistical information which is not already being\n             counted in the
    ifTable is being defined in this table.\"\n        ::= { isdnSignalingGroup 4
    }\n"
  - "isdnLapdEntry OBJECT-TYPE\n        SYNTAX      IsdnLapdEntry\n        MAX-ACCESS
    \ not-accessible\n        STATUS      current\n        DESCRIPTION\n            \"An
    entry in the LAPD Table.\"\n        INDEX { ifIndex }\n        ::= { isdnLapdTable
    1 }\n"
  - "IsdnLapdEntry ::= SEQUENCE {\n            isdnLapdPrimaryChannel  TruthValue,\n
    \           isdnLapdOperStatus      INTEGER,\n            isdnLapdPeerSabme       Counter32,\n
    \           isdnLapdRecvdFrmr       Counter32\n        }\n"
  - "isdnLapdPrimaryChannel OBJECT-TYPE\n        SYNTAX      TruthValue\n        MAX-ACCESS
    \ read-write\n        STATUS      current\n        DESCRIPTION\n            \"If
    set to true(1), this D channel is the designated\n             primary D channel
    if D channel backup is active.\n             There must be exactly one primary
    D channel\n             configured. If D channel backup is not used, this\n             object
    has a value of true(1).\"\n        REFERENCE\n            \"Q.931 [8], Annex F,
    D channel backup procedures.\"\n        ::= { isdnLapdEntry 1 }\n"
  - "isdnLapdOperStatus OBJECT-TYPE\n        SYNTAX      INTEGER {\n            inactive(1),\n
    \           l1Active(2),\n            l2Active(3)\n        }\n        MAX-ACCESS
    \ read-only\n        STATUS      current\n        DESCRIPTION\n            \"The
    operational status of this interface:\n             inactive  all layers are inactive\n
    \            l1Active  layer 1 is activated,\n                       layer 2 datalink
    not established\n             l2Active  layer 1 is activated,\n                       layer
    2 datalink established.\"\n        ::= { isdnLapdEntry 2 }\n"
  - "isdnLapdPeerSabme OBJECT-TYPE\n        SYNTAX      Counter32\n        MAX-ACCESS
    \ read-only\n        STATUS      current\n        DESCRIPTION\n            \"The
    number of peer SABME frames received on this\n             interface. This is
    the number of peer-initiated\n             new connections on this interface.\"\n
    \       ::= { isdnLapdEntry 3 }\n"
  - "isdnLapdRecvdFrmr OBJECT-TYPE\n        SYNTAX      Counter32\n        MAX-ACCESS
    \ read-only\n        STATUS      current\n        DESCRIPTION\n            \"The
    number of LAPD FRMR response frames received.\n             This is the number
    of framing errors on this\n             interface.\"\n        ::= { isdnLapdEntry
    4 }\n"
  - '--

    '
  - '-- Optional groups follow here.

    '
  - '-- The Terminal Endpoint group and table

    '
  - '-- This table is required only if TEI values or SPID numbers

    '
  - '-- have to be entered.

    '
  - '-- The ifIndex values for this table are identical to those of

    '
  - '-- the isdnSignalingChannel table.

    '
  - 'isdnEndpointGroup OBJECT IDENTIFIER ::= { isdnMibObjects 4 }

    '
  - "isdnEndpointGetIndex OBJECT-TYPE\n        SYNTAX      TestAndIncr\n        MAX-ACCESS
    \ read-write\n        STATUS      current\n        DESCRIPTION\n            \"The
    recommended procedure for selecting a new index for\n             isdnEndpointTable
    row creation is to GET the value of\n             this object, and then to SET
    the object with the same\n             value. If the SET operation succeeds, the
    manager can use\n             this value as an index to create a new row in this
    table.\"\n        REFERENCE\n            \"RFC1903, TestAndIncr textual convention.\"\n
    \       ::= { isdnEndpointGroup 1 }\n"
  - "isdnEndpointTable OBJECT-TYPE\n        SYNTAX      SEQUENCE OF IsdnEndpointEntry\n
    \       MAX-ACCESS  not-accessible\n        STATUS      current\n        DESCRIPTION\n
    \           \"Table containing configuration for Terminal\n             Endpoints.\"\n
    \       ::= { isdnEndpointGroup 2 }\n"
  - "isdnEndpointEntry OBJECT-TYPE\n        SYNTAX      IsdnEndpointEntry\n        MAX-ACCESS
    \ not-accessible\n        STATUS      current\n        DESCRIPTION\n            \"An
    entry in the Terminal Endpoint Table. The value\n             of isdnEndpointIfType
    must be supplied for a row\n             in this table to become active.\"\n        INDEX
    { isdnEndpointIndex }\n        ::= { isdnEndpointTable 1 }\n"
  - "IsdnEndpointEntry ::= SEQUENCE {\n            isdnEndpointIndex       INTEGER,\n
    \           isdnEndpointIfIndex     InterfaceIndex,\n            isdnEndpointIfType
    \     IANAifType,\n            isdnEndpointTeiType     INTEGER,\n            isdnEndpointTeiValue
    \   INTEGER,\n            isdnEndpointSpid        DisplayString,\n            isdnEndpointStatus
    \     RowStatus\n        }\n"
  - "isdnEndpointIndex OBJECT-TYPE\n        SYNTAX      INTEGER (1..2147483647)\n
    \       MAX-ACCESS  not-accessible\n        STATUS      current\n        DESCRIPTION\n
    \           \"The index value which uniquely identifies an entry\n             in
    the isdnEndpointTable.\"\n        ::= { isdnEndpointEntry 1 }\n"
  - "isdnEndpointIfIndex OBJECT-TYPE\n        SYNTAX      InterfaceIndex\n        MAX-ACCESS
    \ read-only\n        STATUS      current\n        DESCRIPTION\n            \"The
    ifIndex value of the interface associated with this\n             Terminal Endpoint.\"\n
    \       ::= { isdnEndpointEntry 2 }\n"
  - "isdnEndpointIfType OBJECT-TYPE\n        SYNTAX      IANAifType\n        MAX-ACCESS
    \ read-create\n        STATUS      current\n        DESCRIPTION\n            \"The
    interface type for this Terminal Endpoint.\n             Interface types of x25ple(40)
    and isdn(63) are allowed.\n             The interface type is identical to the
    value of\n             ifType in the associated ifEntry.\"\n        ::= { isdnEndpointEntry
    3 }\n"
  - "isdnEndpointTeiType OBJECT-TYPE\n        SYNTAX      INTEGER {\n            dynamic(1),\n
    \           static(2)\n        }\n        MAX-ACCESS  read-create\n        STATUS
    \     current\n        DESCRIPTION\n            \"The type of TEI (Terminal Endpoint
    Identifier)\n             used for this Terminal Endpoint. In case of dynamic(1),\n
    \            the TEI value is selected by the switch. In\n             case of
    static(2), a valid TEI value has to be\n             entered in the isdnEndpointTeiValue
    object.\n             The default value for this object depends on the\n             interface
    type as well as the Terminal Endpoint type.\n             On Primary Rate interfaces
    the default value is\n             static(2). On Basic Rate interfaces the default
    value\n             is dynamic(1) for isdn(63) Terminal Endpoints and\n             static(2)
    for x25ple(40) Terminal Endpoints.\"\n        ::= { isdnEndpointEntry 4 }\n"
  - "isdnEndpointTeiValue OBJECT-TYPE\n        SYNTAX      INTEGER ( 0..255 )\n        MAX-ACCESS
    \ read-create\n        STATUS      current\n        DESCRIPTION\n            \"The
    TEI (Terminal Endpoint Identifier) value\n             for this Terminal Endpoint.
    If isdnEndpointTeiType\n             is set to static(2), valid numbers are 0..63,\n
    \            while otherwise the value is set internally.\n             The default
    value of this object is 0 for static\n             TEI assignment.\n             The
    default value for dynamic TEI assignment is also\n             0 as long as no
    TEI has been assigned. After TEI\n             assignment, the assigned TEI value
    is returned.\"\n        ::= { isdnEndpointEntry 5 }\n"
  - "isdnEndpointSpid OBJECT-TYPE\n        SYNTAX      DisplayString\n        MAX-ACCESS
    \ read-create\n        STATUS      current\n        DESCRIPTION\n            \"The
    Service profile IDentifier (SPID) information\n             for this Terminal
    Endpoint.\n             The SPID is composed of 9-20 numeric characters.\n             This
    information has to be defined in addition to\n             the local number for
    some switch protocol types,\n             e.g. Bellcore NI-1 and NI-2.\n             If
    this object is not required, it is a\n             zero length string.\"\n        REFERENCE\n
    \           \"Bellcore SR-NWT-001953, Generic Guidelines for ISDN\n             Terminal
    Equipment on Basic Access Interfaces,\n             Chapter 8.5.1.\"\n        DEFVAL
    { \"\" }\n        ::= { isdnEndpointEntry 6 }\n"
  - "isdnEndpointStatus OBJECT-TYPE\n        SYNTAX      RowStatus\n        MAX-ACCESS
    \ read-create\n        STATUS      current\n        DESCRIPTION\n            \"This
    object is used to create and delete rows in the\n             isdnEndpointTable.\"\n
    \       ::= { isdnEndpointEntry 7 }\n"
  - '--

    '
  - '-- The Directory Number group

    '
  - '--

    '
  - 'isdnDirectoryGroup OBJECT IDENTIFIER ::= { isdnMibObjects 5 }

    '
  - "isdnDirectoryTable OBJECT-TYPE\n        SYNTAX      SEQUENCE OF IsdnDirectoryEntry\n
    \       MAX-ACCESS  not-accessible\n        STATUS      current\n        DESCRIPTION\n
    \           \"Table containing Directory Numbers.\"\n        ::= { isdnDirectoryGroup
    1 }\n"
  - "isdnDirectoryEntry OBJECT-TYPE\n        SYNTAX      IsdnDirectoryEntry\n        MAX-ACCESS
    \ not-accessible\n        STATUS      current\n        DESCRIPTION\n            \"An
    entry in the Directory Number Table. All objects\n             in an entry must
    be set for a new row to become active.\"\n        INDEX { isdnDirectoryIndex }\n
    \       ::= { isdnDirectoryTable 1 }\n"
  - "IsdnDirectoryEntry ::= SEQUENCE {\n            isdnDirectoryIndex      INTEGER,\n
    \           isdnDirectoryNumber     DisplayString,\n            isdnDirectorySigIndex
    \  INTEGER,\n            isdnDirectoryStatus     RowStatus\n        }\n"
  - "isdnDirectoryIndex OBJECT-TYPE\n        SYNTAX      INTEGER ( 1..'7fffffff'h
    )\n        MAX-ACCESS  not-accessible\n        STATUS      current\n        DESCRIPTION\n
    \           \"The index value which uniquely identifies an entry\n             in
    the isdnDirectoryTable.\"\n        ::= { isdnDirectoryEntry 1 }\n"
  - "isdnDirectoryNumber OBJECT-TYPE\n        SYNTAX      DisplayString\n        MAX-ACCESS
    \ read-create\n        STATUS      current\n        DESCRIPTION\n            \"A
    Directory Number. Directory Numbers are used\n             to identify incoming
    calls on the signaling\n             channel given in isdnDirectorySigIndex.\n
    \            The format of this information largely depends on the type\n             of
    switch or PBX the device is connected to. Therefore,\n             the detailed
    format of this information is not\n             specified and is implementation
    dependent.\n             If possible, the agent should implement this information\n
    \            using the E.164 number format. In this case, the number\n             must
    start with '+'. Otherwise, IA5 number digits must\n             be used.\"\n        REFERENCE\n
    \           \"ITU-T E.164, Q.931 chapter 4.5.10\"\n        ::= { isdnDirectoryEntry
    2 }\n"
  - "isdnDirectorySigIndex OBJECT-TYPE\n        SYNTAX      INTEGER (1..2147483647)\n
    \       MAX-ACCESS  read-create\n        STATUS      current\n        DESCRIPTION\n
    \           \"An index pointing to an ISDN signaling channel.\n             Incoming
    calls are accepted on this\n             signaling channel if the isdnDirectoryNumber
    is\n             presented as Called Number in the SETUP message.\"\n        ::=
    { isdnDirectoryEntry 3 }\n"
  - "isdnDirectoryStatus OBJECT-TYPE\n        SYNTAX      RowStatus\n        MAX-ACCESS
    \ read-create\n        STATUS      current\n        DESCRIPTION\n            \"This
    object is used to create and delete rows in the\n             isdnDirectoryTable.\"\n
    \       ::= { isdnDirectoryEntry 4 }\n"
  - '-- Traps

    '
  - 'isdnMibTrapPrefix OBJECT IDENTIFIER ::= { isdnMib 2 }

    '
  - 'isdnMibTraps OBJECT IDENTIFIER ::= { isdnMibTrapPrefix 0 }

    '
  - "isdnMibCallInformation NOTIFICATION-TYPE\n        OBJECTS {\n            ifIndex,
    \                   -- isdnBearerTable ifIndex\n            isdnBearerOperStatus,\n
    \           isdnBearerPeerAddress,\n            isdnBearerPeerSubAddress,\n            isdnBearerCallSetupTime,\n
    \           isdnBearerInfoType,\n            isdnBearerCallOrigin\n        }\n
    \       STATUS      current\n        DESCRIPTION\n            \"This trap/inform
    is sent to the manager under the\n             following condidions:\n             -
    on incoming calls for each call which is rejected for\n               policy reasons
    (e.g. unknown neighbor or access\n               violation)\n             - on
    outgoing calls whenever a call attempt is determined\n               to have ultimately
    failed. In the event that call retry\n               is active, then this will
    be after all retry attempts\n               have failed.\n             - whenever
    a call connects. In this case, the object\n               isdnBearerCallConnectTime
    should be included in the\n               trap.\n             Only one such trap
    is sent in between successful or\n             unsuccessful call attempts from
    or to a single neighbor;\n             subsequent call attempts result in no trap.\n
    \            If the Dial Control MIB objects dialCtlNbrCfgId and\n             dialCtlNbrCfgIndex
    are known by the entity generating\n             this trap, both objects should
    be included in the trap\n             as well. The receipt of this trap with no
    dial neighbor\n             information indicates that the manager must poll the\n
    \            callHistoryTable of the Dial Control MIB to see what\n             changed.\"\n
    \       ::= { isdnMibTraps 1 }\n"
  - '--

    '
  - '-- conformance information

    '
  - '--

    '
  - 'isdnMibConformance OBJECT IDENTIFIER ::= { isdnMib 2 }

    '
  - 'isdnMibCompliances OBJECT IDENTIFIER ::= { isdnMibConformance 1 }

    '
  - 'isdnMibGroups      OBJECT IDENTIFIER ::= { isdnMibConformance 2 }

    '
  - '-- compliance statements

    '
  - "isdnMibCompliance MODULE-COMPLIANCE\n        STATUS      current\n        DESCRIPTION\n
    \           \"The compliance statement for entities which implement\n             the
    ISDN MIB.\"\n        MODULE       -- this module\n"
  - "-- unconditionally mandatory groups\n        MANDATORY-GROUPS {\n            isdnMibSignalingGroup,\n
    \           isdnMibBearerGroup,\n            isdnMibNotificationsGroup\n        }\n"
  - "-- conditionally mandatory group\n        GROUP       isdnMibBasicRateGroup\n
    \       DESCRIPTION\n            \"The isdnMibBasicRateGroup is mandatory for
    entities\n             supporting ISDN Basic Rate interfaces.\"\n"
  - "-- optional groups\n        GROUP       isdnMibEndpointGroup\n        DESCRIPTION\n
    \           \"Implementation of this group is optional for all systems\n             that
    attach to ISDN interfaces.\"\n        GROUP       isdnMibDirectoryGroup\n        DESCRIPTION\n
    \           \"Implementation of this group is optional for all systems\n             that
    attach to ISDN interfaces.\"\n        OBJECT      isdnBasicRateIfType\n        MIN-ACCESS
    \ read-only\n        DESCRIPTION\n            \"It is conformant to implement
    this object as read-only.\"\n        OBJECT      isdnBasicRateLineTopology\n        MIN-ACCESS
    \ read-only\n        DESCRIPTION\n            \"It is conformant to implement
    this object as read-only.\"\n        OBJECT      isdnBasicRateIfMode\n        MIN-ACCESS
    \ read-only\n        DESCRIPTION\n            \"It is conformant to implement
    this object as read-only.\"\n        OBJECT      isdnBasicRateSignalMode\n        MIN-ACCESS
    \ read-only\n        DESCRIPTION\n            \"It is conformant to implement
    this object as read-only.\"\n        ::= { isdnMibCompliances 1 }\n"
  - '-- units of conformance

    '
  - "isdnMibBasicRateGroup OBJECT-GROUP\n        OBJECTS {\n            isdnBasicRateIfType,\n
    \           isdnBasicRateLineTopology,\n            isdnBasicRateIfMode,\n            isdnBasicRateSignalMode\n
    \       }\n        STATUS      current\n        DESCRIPTION\n            \"A collection
    of objects required for ISDN Basic Rate\n             physical interface configuration
    and statistics.\"\n        ::= { isdnMibGroups 1 }\n"
  - "isdnMibBearerGroup OBJECT-GROUP\n        OBJECTS {\n            isdnBearerChannelType,\n
    \           isdnBearerOperStatus,\n            isdnBearerChannelNumber,\n            isdnBearerPeerAddress,\n
    \           isdnBearerPeerSubAddress,\n            isdnBearerCallOrigin,\n            isdnBearerInfoType,\n
    \           isdnBearerMultirate,\n            isdnBearerCallSetupTime,\n            isdnBearerCallConnectTime,\n
    \           isdnBearerChargedUnits\n        }\n        STATUS      current\n        DESCRIPTION\n
    \           \"A collection of objects required for ISDN Bearer channel\n             control
    and statistics.\"\n        ::= { isdnMibGroups 2 }\n"
  - "isdnMibSignalingGroup OBJECT-GROUP\n        OBJECTS {\n            isdnSignalingGetIndex,\n
    \           isdnSignalingIfIndex,\n            isdnSignalingProtocol,\n            isdnSignalingCallingAddress,\n
    \           isdnSignalingSubAddress,\n            isdnSignalingBchannelCount,\n
    \           isdnSignalingInfoTrapEnable,\n            isdnSignalingStatus,\n            isdnSigStatsInCalls,\n
    \           isdnSigStatsInConnected,\n            isdnSigStatsOutCalls,\n            isdnSigStatsOutConnected,\n
    \           isdnSigStatsChargedUnits,\n            isdnLapdPrimaryChannel,\n            isdnLapdOperStatus,\n
    \           isdnLapdPeerSabme,\n            isdnLapdRecvdFrmr\n        }\n        STATUS
    \     current\n        DESCRIPTION\n            \"A collection of objects required
    for ISDN D channel\n             configuration and statistics.\"\n        ::=
    { isdnMibGroups 3 }\n"
  - "isdnMibEndpointGroup OBJECT-GROUP\n        OBJECTS {\n            isdnEndpointGetIndex,\n
    \           isdnEndpointIfIndex,\n            isdnEndpointIfType,\n            isdnEndpointTeiType,\n
    \           isdnEndpointTeiValue,\n            isdnEndpointSpid,\n            isdnEndpointStatus\n
    \       }\n        STATUS      current\n        DESCRIPTION\n            \"A collection
    of objects describing Terminal Endpoints.\"\n        ::= { isdnMibGroups 4 }\n"
  - "isdnMibDirectoryGroup OBJECT-GROUP\n        OBJECTS {\n            isdnDirectoryNumber,\n
    \           isdnDirectorySigIndex,\n            isdnDirectoryStatus\n        }\n
    \       STATUS      current\n        DESCRIPTION\n            \"A collection of
    objects describing directory numbers.\"\n        ::= { isdnMibGroups 5 }\n"
  - "isdnMibNotificationsGroup NOTIFICATION-GROUP\n    NOTIFICATIONS { isdnMibCallInformation
    }\n    STATUS        current\n    DESCRIPTION\n            \"The notifications
    which a ISDN MIB entity is\n             required to implement.\"\n    ::= { isdnMibGroups
    6 }\n"
  - 'END

    '
  title: 4.  Definitions
- contents:
  - "5.  Acknowledgments\n   This document was produced by the ISDN MIB Working Group.
    \ Special\n   thanks is due to the following persons:\n           Ed Alcoff\n
    \          Fred Baker\n           Scott Bradner\n           Bibek A. Das\n           Maria
    Greene\n           Ken Grigg\n           Stefan Hochuli\n           Jeffrey T.
    Johnson\n           Glenn Kime\n           Oliver Korfmacher\n           Kedar
    Madineni\n           Bill Miskovetz\n           Mike O'Dowd\n           David
    M. Piscitello\n           Lisa A. Phifer\n           Randy Roberts\n           Hascall
    H. Sharp\n           John Shriver\n           Robert Snyder\n           Bob Stewart\n
    \          Ron Stoughton\n           James Watt\n"
  title: 5.  Acknowledgments
- contents:
  - '6.  References

    '
  - "[1]  SNMPv2 Working Group, Case, J., McCloghrie, K., Rose, M., and\n     S. Waldbusser,
    \"Structure of Management Information for Version 2\n     of the Simple Network
    Management Protocol (SNMPv2)\", RFC 1902,\n     January 1996.\n"
  - "[2]  McCloghrie, K., and M. Rose, Editors, \"Management Information Base\n     for
    Network Management of TCP/IP-based internets: MIB-II\", STD 17,\n     RFC 1213,
    Hughes LAN Systems, Performance Systems International,\n     March 1991.\n"
  - "[3]  Case, J., Fedor, M., Schoffstall, M., and J. Davin, \"A Simple\n     Network
    Management Protocol (SNMP)\", STD 15, RFC 1157, SNMP\n     Research, Performance
    Systems International, MIT Lab for Computer\n     Science, May 1990.\n"
  - "[4]  SNMPv2 Working Group, Case, J., McCloghrie, K., Rose, M. and\n     S. Waldbusser,
    \"Protocol Operations for Version 2 of the Simple\n     Network Management Protocol
    (SNMPv2)\", RFC 1905, January 1996.\n"
  - "[5]  ITU-T Recommendation \"Digital subscriber Signaling System No. 1\n     (DSS
    1) - ISDN User-Network Interface Data Link Layer - General\n     Aspects Rec.
    Q.920.\n"
  - "[6]  ITU-T Recommendation \"Digital subscriber Signaling System No. 1\n     (DSS
    1) - ISDN User-Network Interface - Data Link Layer\n     Specification Rec. Q.921.\n"
  - "[7]  ITU-T Recommendation \"Digital subscriber Signaling System No. 1\n     (DSS
    1) - ISDN Data Link Layer Specification for Frame Mode Bearer\n     Services (LAPF)
    Rec. Q.922.\n"
  - "[8]  ITU-T Recommendation \"Digital subscriber Signaling System No. 1\n     (DSS
    1) - ISDN user-network interface layer 3 specification for\n     basic call control\",
    Rec. Q.931(I.451), March 1993.\n"
  - "[9]  ITU-T Recommendation \"Generic procedures for the control of ISDN\n     supplementary
    services ISDN user-network interface layer 3\n     specification\", Rec. Q.932(I.452).\n"
  - "[10] ITU-T Recommendation \"Digital subscriber Signaling System No. 1\n     (DSS
    1) - Signaling specification for frame-mode basic call\n     control\", Rec. Q.933.\n"
  - "[11] McCloghrie, K. and F. Kastenholz, \"Evolution of the Interfaces\n     Group
    of MIB-II\", RFC 1573, Hughes LAN Systems, FTP Software,\n     January 1994.\n"
  - "[12] Fowler, D., \"Definitions of Managed Objects for the DS1/E1/DS2/E2\n     Interface
    Types\", Work in Progress.\n"
  - "[13] Fowler, D., \"Definitions of Managed Objects for the DS0 and\n     DS0Bundle
    Interface Types\", Work in Progress.\n"
  - "[14] ITU-T Recommendation \"Integrated Services Digital Network (ISDN)\n     General
    Structure and Service Capabilities - Closed User Group\",\n     Rec. I.255.1.\n"
  - "[15] Roeck, G., \"Dial Control Management Information Base\", RFC 2128,\n     March
    1997.\n"
  title: 6.  References
- contents:
  - "7.  Security Considerations\n   Security issues are not discussed in this memo.\n"
  title: 7.  Security Considerations
- contents:
  - "8.  Author's Address\n   Guenter Roeck\n   cisco Systems\n   170 West Tasman
    Drive\n   San Jose, CA 95134\n   U.S.A.\n   Phone: +1 408 527 3143\n   EMail:
    groeck@cisco.com\n"
  title: 8.  Author's Address
