- title: __initial_text__
  contents:
  - '     Characterization Guidelines for Active Queue Management (AQM)

    '
- title: Abstract
  contents:
  - "Abstract\n   Unmanaged large buffers in today's networks have given rise to a\
    \ slew\n   of performance issues.  These performance issues can be addressed by\n\
    \   some form of Active Queue Management (AQM) mechanism, optionally in\n   combination\
    \ with a packet-scheduling scheme such as fair queuing.\n   This document describes\
    \ various criteria for performing\n   characterizations of AQM schemes that can\
    \ be used in lab testing\n   during development, prior to deployment.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7928.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   4\n     1.1.  Reducing the Latency and Maximizing the Goodput .\
    \ . . . .   5\n     1.2.  Goals of This Document  . . . . . . . . . . . . . .\
    \ . . .   5\n     1.3.  Requirements Language . . . . . . . . . . . . . . . .\
    \ . .   6\n     1.4.  Glossary  . . . . . . . . . . . . . . . . . . . . . . .\
    \ .   7\n   2.  End-to-End Metrics  . . . . . . . . . . . . . . . . . . . . .\
    \   7\n     2.1.  Flow Completion Time  . . . . . . . . . . . . . . . . . .  \
    \ 8\n     2.2.  Flow Startup Time . . . . . . . . . . . . . . . . . . . .   8\n\
    \     2.3.  Packet Loss . . . . . . . . . . . . . . . . . . . . . . .   9\n  \
    \   2.4.  Packet Loss Synchronization . . . . . . . . . . . . . . .   9\n    \
    \ 2.5.  Goodput . . . . . . . . . . . . . . . . . . . . . . . . .  10\n     2.6.\
    \  Latency and Jitter  . . . . . . . . . . . . . . . . . . .  11\n     2.7.  Discussion\
    \ on the Trade-Off between Latency and Goodput .  11\n   3.  Generic Setup for\
    \ Evaluations . . . . . . . . . . . . . . . .  12\n     3.1.  Topology and Notations\
    \  . . . . . . . . . . . . . . . . .  12\n     3.2.  Buffer Size . . . . . . .\
    \ . . . . . . . . . . . . . . . .  14\n     3.3.  Congestion Controls . . . .\
    \ . . . . . . . . . . . . . . .  14\n   4.  Methodology, Metrics, AQM Comparisons,\
    \ Packet Sizes,\n       Scheduling, and ECN . . . . . . . . . . . . . . . . .\
    \ . . . .  14\n     4.1.  Methodology . . . . . . . . . . . . . . . . . . . .\
    \ . . .  14\n     4.2.  Comments on Metrics Measurement . . . . . . . . . . .\
    \ . .  15\n     4.3.  Comparing AQM Schemes . . . . . . . . . . . . . . . . .\
    \ .  15\n       4.3.1.  Performance Comparison  . . . . . . . . . . . . . . .\
    \  15\n       4.3.2.  Deployment Comparison . . . . . . . . . . . . . . . .  16\n\
    \     4.4.  Packet Sizes and Congestion Notification  . . . . . . . .  16\n  \
    \   4.5.  Interaction with ECN  . . . . . . . . . . . . . . . . . .  17\n    \
    \ 4.6.  Interaction with Scheduling . . . . . . . . . . . . . . .  17\n   5. \
    \ Transport Protocols . . . . . . . . . . . . . . . . . . . . .  18\n     5.1.\
    \  TCP-Friendly Sender . . . . . . . . . . . . . . . . . . .  19\n       5.1.1.\
    \  TCP-Friendly Sender with the Same Initial Congestion\n               Window\
    \  . . . . . . . . . . . . . . . . . . . . . . .  19\n       5.1.2.  TCP-Friendly\
    \ Sender with Different Initial Congestion\n               Windows . . . . . .\
    \ . . . . . . . . . . . . . . . . .  19\n     5.2.  Aggressive Transport Sender\
    \ . . . . . . . . . . . . . . .  19\n     5.3.  Unresponsive Transport Sender\
    \ . . . . . . . . . . . . . .  20\n     5.4.  Less-than-Best-Effort Transport\
    \ Sender  . . . . . . . . .  20\n   6.  Round-Trip Time Fairness  . . . . . .\
    \ . . . . . . . . . . . .  21\n     6.1.  Motivation  . . . . . . . . . . . .\
    \ . . . . . . . . . . .  21\n     6.2.  Recommended Tests . . . . . . . . . .\
    \ . . . . . . . . . .  21\n     6.3.  Metrics to Evaluate the RTT Fairness  .\
    \ . . . . . . . . .  22\n   7.  Burst Absorption  . . . . . . . . . . . . . .\
    \ . . . . . . . .  22\n     7.1.  Motivation  . . . . . . . . . . . . . . . .\
    \ . . . . . . .  22\n     7.2.  Recommended Tests . . . . . . . . . . . . . .\
    \ . . . . . .  23\n   8.  Stability . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  24\n     8.1.  Motivation  . . . . . . . . . . . . . . . . . . .\
    \ . . . .  24\n     8.2.  Recommended Tests . . . . . . . . . . . . . . . . .\
    \ . . .  24\n       8.2.1.  Definition of the Congestion Level  . . . . . . .\
    \ . .  25\n       8.2.2.  Mild Congestion . . . . . . . . . . . . . . . . . .\
    \ .  25\n       8.2.3.  Medium Congestion . . . . . . . . . . . . . . . . . .\
    \  25\n       8.2.4.  Heavy Congestion  . . . . . . . . . . . . . . . . . .  25\n\
    \       8.2.5.  Varying the Congestion Level  . . . . . . . . . . . .  26\n  \
    \     8.2.6.  Varying Available Capacity  . . . . . . . . . . . . .  26\n    \
    \ 8.3.  Parameter Sensitivity and Stability Analysis  . . . . . .  27\n   9. \
    \ Various Traffic Profiles  . . . . . . . . . . . . . . . . . .  27\n     9.1.\
    \  Traffic Mix . . . . . . . . . . . . . . . . . . . . . . .  28\n     9.2.  Bidirectional\
    \ Traffic . . . . . . . . . . . . . . . . . .  28\n   10. Example of a Multi-AQM\
    \ Scenario . . . . . . . . . . . . . . .  29\n     10.1.  Motivation . . . . .\
    \ . . . . . . . . . . . . . . . . . .  29\n     10.2.  Details on the Evaluation\
    \ Scenario . . . . . . . . . . .  29\n   11. Implementation Cost . . . . . . .\
    \ . . . . . . . . . . . . . .  30\n     11.1.  Motivation . . . . . . . . . .\
    \ . . . . . . . . . . . . .  30\n     11.2.  Recommended Discussion . . . . .\
    \ . . . . . . . . . . . .  30\n   12. Operator Control and Auto-Tuning  . . .\
    \ . . . . . . . . . . .  30\n     12.1.  Motivation . . . . . . . . . . . . .\
    \ . . . . . . . . . .  30\n     12.2.  Recommended Discussion . . . . . . . .\
    \ . . . . . . . . .  31\n   13. Summary . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . .  31\n   14. Security Considerations . . . . . . . . . . . .\
    \ . . . . . . .  32\n   15. References  . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  32\n     15.1.  Normative References . . . . . . . . . . . . .\
    \ . . . . .  32\n     15.2.  Informative References . . . . . . . . . . . . .\
    \ . . . .  33\n   Acknowledgements  . . . . . . . . . . . . . . . . . . . . .\
    \ . . .  36\n   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . .\
    \ . .  37\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Active Queue Management (AQM) addresses the concerns arising\
    \ from\n   using unnecessarily large and unmanaged buffers to improve network\n\
    \   and application performance, such as those presented in Section 1.2\n   of\
    \ the AQM recommendations document [RFC7567].  Several AQM\n   algorithms have\
    \ been proposed in the past years, most notably Random\n   Early Detection (RED)\
    \ [FLOY1993], BLUE [FENG2002], Proportional\n   Integral controller (PI) [HOLLO2001],\
    \ and more recently, Controlled\n   Delay (CoDel) [CODEL] and Proportional Integral\
    \ controller Enhanced\n   (PIE) [AQMPIE].  In general, these algorithms actively\
    \ interact with\n   the Transmission Control Protocol (TCP) and any other transport\n\
    \   protocol that deploys a congestion control scheme to manage the\n   amount\
    \ of data they keep in the network.  The available buffer space\n   in the routers\
    \ and switches should be large enough to accommodate the\n   short-term buffering\
    \ requirements.  AQM schemes aim at reducing\n   buffer occupancy, and therefore\
    \ the end-to-end delay.  Some of these\n   algorithms, notably RED, have also\
    \ been widely implemented in some\n   network devices.  However, the potential\
    \ benefits of the RED scheme\n   have not been realized since RED is reported\
    \ to be usually turned\n   off.\n   A buffer is a physical volume of memory in\
    \ which a queue or set of\n   queues are stored.  When speaking of a specific\
    \ queue in this\n   document, \"buffer occupancy\" refers to the amount of data\
    \ (measured\n   in bytes or packets) that are in the queue, and the \"maximum\
    \ buffer\n   size\" refers to the maximum buffer occupancy.  In switches and\n\
    \   routers, a global memory space is often shared between the available\n   interfaces,\
    \ and thus, the maximum buffer size for any given interface\n   may vary over\
    \ time.\n   Bufferbloat [BB2011] is the consequence of deploying large, unmanaged\n\
    \   buffers on the Internet -- the buffering has often been measured to\n   be\
    \ ten times or a hundred times larger than needed.  Large buffer\n   sizes in\
    \ combination with TCP and/or unresponsive flows increases\n   end-to-end delay.\
    \  This results in poor performance for latency-\n   sensitive applications such\
    \ as real-time multimedia (e.g., voice,\n   video, gaming, etc.).  The degree\
    \ to which this affects modern\n   networking equipment, especially consumer-grade\
    \ equipment, produces\n   problems even with commonly used web services.  Active\
    \ queue\n   management is thus essential to control queuing delay and decrease\n\
    \   network latency.\n   The Active Queue Management and Packet Scheduling Working\
    \ Group (AQM\n   WG) was chartered to address the problems with large unmanaged\n\
    \   buffers in the Internet.  Specifically, the AQM WG is tasked with\n   standardizing\
    \ AQM schemes that not only address concerns with such\n   buffers, but are also\
    \ robust under a wide variety of operating\n   conditions.  This document provides\
    \ characterization guidelines that\n   can be used to assess the applicability,\
    \ performance, and\n   deployability of an AQM, whether it is a candidate for\n\
    \   standardization at IETF or not.\n   The AQM algorithm implemented in a router\
    \ can be separated from the\n   scheduling of packets sent out by the router as\
    \ discussed in the AQM\n   recommendations document [RFC7567].  The rest of this\
    \ memo refers to\n   the AQM as a dropping/marking policy as a separate feature\
    \ to any\n   interface-scheduling scheme.  This document may be complemented with\n\
    \   another one on guidelines for assessing the combination of packet\n   scheduling\
    \ and AQM.  We note that such a document will inherit all\n   the guidelines from\
    \ this document, plus any additional scenarios\n   relevant for packet scheduling\
    \ such as flow-starvation evaluation or\n   the impact of the number of hash buckets.\n"
- title: 1.1.  Reducing the Latency and Maximizing the Goodput
  contents:
  - "1.1.  Reducing the Latency and Maximizing the Goodput\n   The trade-off between\
    \ reducing the latency and maximizing the goodput\n   is intrinsically linked\
    \ to each AQM scheme and is key to evaluating\n   its performance.  To ensure\
    \ the safety deployment of an AQM, its\n   behavior should be assessed in a variety\
    \ of scenarios.  Whenever\n   possible, solutions ought to aim at both maximizing\
    \ goodput and\n   minimizing latency.\n"
- title: 1.2.  Goals of This Document
  contents:
  - "1.2.  Goals of This Document\n   This document recommends a generic list of scenarios\
    \ against which an\n   AQM proposal should be evaluated, considering both potential\n\
    \   performance gain and safety of deployment.  The guidelines help to\n   quantify\
    \ performance of AQM schemes in terms of latency reduction,\n   goodput maximization,\
    \ and the trade-off between these two.  The\n   document presents central aspects\
    \ of an AQM algorithm that should be\n   considered, whatever the context, such\
    \ as burst absorption capacity,\n   RTT fairness, or resilience to fluctuating\
    \ network conditions.  The\n   guidelines also discuss methods to understand the\
    \ various aspects\n   associated with safely deploying and operating the AQM scheme.\
    \  Thus,\n   one of the key objectives behind formulating the guidelines is to\n\
    \   help ascertain whether a specific AQM is not only better than drop-\n   tail\
    \ (i.e., without AQM and with a BDP-sized buffer), but also safe\n   to deploy:\
    \ the guidelines can be used to compare several AQM\n   proposals with each other,\
    \ but should be used to compare a proposal\n   with drop-tail.\n   This memo details\
    \ generic characterization scenarios against which\n   any AQM proposal should\
    \ be evaluated, irrespective of whether or not\n   an AQM is standardized by the\
    \ IETF.  This document recommends the\n   relevant scenarios and metrics to be\
    \ considered.  This document\n   presents central aspects of an AQM algorithm\
    \ that should be\n   considered whatever the context, such as burst absorption\
    \ capacity,\n   RTT fairness, or resilience to fluctuating network conditions.\n\
    \   These guidelines do not define and are not bound to a particular\n   deployment\
    \ scenario or evaluation toolset.  Instead, the guidelines\n   can be used to\
    \ assert the potential gain of introducing an AQM for\n   the particular environment,\
    \ which is of interest to the testers.\n   These guidelines do not cover every\
    \ possible aspect of a particular\n   algorithm.  These guidelines do not present\
    \ context-dependent\n   scenarios (such as IEEE 802.11 WLANs, data centers, or\
    \ rural\n   broadband networks).  To keep the guidelines generic, a number of\n\
    \   potential router components and algorithms (such as Diffserv) are\n   omitted.\n\
    \   The goals of this document can thus be summarized as follows:\n   o  The present\
    \ characterization guidelines provide a non-exhaustive\n      list of scenarios\
    \ to help ascertain whether an AQM is not only\n      better than drop-tail (with\
    \ a BDP-sized buffer), but also safe to\n      deploy; the guidelines can also\
    \ be used to compare several AQM\n      proposals with each other.\n   o  The\
    \ present characterization guidelines (1) are not bound to a\n      particular\
    \ evaluation toolset and (2) can be used for various\n      deployment contexts;\
    \ testers are free to select a toolset that is\n      best suited for the environment\
    \ in which their proposal will be\n      deployed.\n   o  The present characterization\
    \ guidelines are intended to provide\n      guidance for better selecting an AQM\
    \ for a specific environment;\n      it is not required that an AQM proposal is\
    \ evaluated following\n      these guidelines for its standardization.\n"
- title: 1.3.  Requirements Language
  contents:
  - "1.3.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n"
- title: 1.4.  Glossary
  contents:
  - "1.4.  Glossary\n   o  Application-limited traffic: A type of traffic that does\
    \ not have\n      an unlimited amount of data to transmit.\n   o  AQM: The Active\
    \ Queue Management (AQM) algorithm implemented in a\n      router can be separated\
    \ from the scheduling of packets sent by the\n      router.  The rest of this\
    \ memo refers to the AQM as a dropping/\n      marking policy as a separate feature\
    \ to any interface scheduling\n      scheme [RFC7567].\n   o  BDP: Bandwidth Delay\
    \ Product.\n   o  Buffer: A physical volume of memory in which a queue or set\
    \ of\n      queues are stored.\n   o  Buffer Occupancy: The amount of data stored\
    \ in a buffer, measured\n      in bytes or packets.\n   o  Buffer Size: The maximum\
    \ buffer occupancy, that is the maximum\n      amount of data that may be stored\
    \ in a buffer, measured in bytes\n      or packets.\n   o  Initial Window 10 (IW10):\
    \ TCP initial congestion window set to 10\n      packets.\n   o  Latency: One-way\
    \ delay of packets across Internet paths.  This\n      definition suits transport\
    \ layer definition of the latency, which\n      should not be confused with an\
    \ application-layer view of the\n      latency.\n   o  Goodput: Goodput is defined\
    \ as the number of bits per unit of time\n      forwarded to the correct destination,\
    \ minus any bits lost or\n      retransmitted [RFC2647].  The goodput should be\
    \ determined for\n      each flow and not for aggregates of flows.\n   o  SQRT:\
    \ The square root function.\n   o  ROUND: The round function.\n"
- title: 2.  End-to-End Metrics
  contents:
  - "2.  End-to-End Metrics\n   End-to-end delay is the result of propagation delay,\
    \ serialization\n   delay, service delay in a switch, medium-access delay, and\
    \ queuing\n   delay, summed over the network elements along the path.  AQM schemes\n\
    \   may reduce the queuing delay by providing signals to the sender on\n   the\
    \ emergence of congestion, but any impact on the goodput must be\n   carefully\
    \ considered.  This section presents the metrics that could\n   be used to better\
    \ quantify (1) the reduction of latency, (2)\n   maximization of goodput, and\
    \ (3) the trade-off between these two.\n   This section provides normative requirements\
    \ for metrics that can be\n   used to assess the performance of an AQM scheme.\n\
    \   Some metrics listed in this section are not suited to every type of\n   traffic\
    \ detailed in the rest of this document.  It is therefore not\n   necessary to\
    \ measure all of the following metrics: the chosen metric\n   may not be relevant\
    \ to the context of the evaluation scenario (e.g.,\n   latency vs. goodput trade-off\
    \ in application-limited traffic\n   scenarios).  Guidance is provided for each\
    \ metric.\n"
- title: 2.1.  Flow Completion Time
  contents:
  - "2.1.  Flow Completion Time\n   The flow completion time is an important performance\
    \ metric for the\n   end-user when the flow size is finite.  The definition of\
    \ the flow\n   size may be a source of contradictions, thus, this metric can\n\
    \   consider a flow as a single file.  Considering the fact that an AQM\n   scheme\
    \ may drop/mark packets, the flow completion time is directly\n   linked to the\
    \ dropping/marking policy of the AQM scheme.  This metric\n   helps to better\
    \ assess the performance of an AQM depending on the\n   flow size.  The Flow Completion\
    \ Time (FCT) is related to the flow\n   size (Fs) and the goodput for the flow\
    \ (G) as follows:\n   FCT [s] = Fs [byte] / ( G [bit/s] / 8 [bit/byte] )\n   Where\
    \ flow size is the size of the transport-layer payload in bits\n   and goodput\
    \ is the transport-layer payload transfer time (described\n   in Section 2.5).\n\
    \   If this metric is used to evaluate the performance of web transfers,\n   it\
    \ is suggested to rather consider the time needed to download all\n   the objects\
    \ that compose the web page, as this makes more sense in\n   terms of user experience,\
    \ rather than assessing the time needed to\n   download each object.\n"
- title: 2.2.  Flow Startup Time
  contents:
  - "2.2.  Flow Startup Time\n   The flow startup time is the time between when the\
    \ request was sent\n   from the client and when the server starts to transmit\
    \ data.  The\n   amount of packets dropped by an AQM may seriously affect the\
    \ waiting\n   period during which the data transfer has not started.  This metric\n\
    \   would specifically focus on the operations such as DNS lookups, TCP\n   opens,\
    \ and Secure Socket Layer (SSL) handshakes.\n"
- title: 2.3.  Packet Loss
  contents:
  - "2.3.  Packet Loss\n   Packet loss can occur en route, this can impact the end-to-end\n\
    \   performance measured at the receiver end.\n   The tester should evaluate the\
    \ loss experienced at the receiver end\n   using one of two metrics:\n   o  The\
    \ packet loss ratio: This metric is to be frequently measured\n      during the\
    \ experiment.  The long-term loss ratio is of interest\n      for steady-state\
    \ scenarios only;\n   o  The interval between consecutive losses: The time between\
    \ two\n      losses is to be measured.\n   The packet loss ratio can be assessed\
    \ by simply evaluating the loss\n   ratio as a function of the number of lost\
    \ packets and the total\n   number of packets sent.  This might not be easily\
    \ done in laboratory\n   testing, for which these guidelines advise the tester:\n\
    \   o  To check that for every packet, a corresponding packet was\n      received\
    \ within a reasonable time, as presented in the document\n      that proposes\
    \ a metric for one-way packet loss across Internet\n      paths [RFC7680].\n \
    \  o  To keep a count of all packets sent, and a count of the non-\n      duplicate\
    \ packets received, as discussed in [RFC2544], which\n      presents a benchmarking\
    \ methodology.\n   The interval between consecutive losses, which is also called\
    \ a\n   \"gap\", is a metric of interest for Voice over IP (VoIP) traffic\n  \
    \ [RFC3611].\n"
- title: 2.4.  Packet Loss Synchronization
  contents:
  - "2.4.  Packet Loss Synchronization\n   One goal of an AQM algorithm is to help\
    \ to avoid global\n   synchronization of flows sharing a bottleneck buffer on\
    \ which the AQM\n   operates ([RFC2309] and [RFC7567]).  The \"degree\" of packet-loss\n\
    \   synchronization between flows should be assessed, with and without\n   the\
    \ AQM under consideration.\n   Loss synchronization among flows may be quantified\
    \ by several\n   slightly different metrics that capture different aspects of\
    \ the same\n   issue [HASS2008].  However, in real-world measurements the choice\
    \ of\n   metric could be imposed by practical considerations -- e.g., whether\n\
    \   fine-grained information on packet losses at the bottleneck is\n   available\
    \ or not.  For the purpose of AQM characterization, a good\n   candidate metric\
    \ is the global synchronization ratio, measuring the\n   proportion of flows losing\
    \ packets during a loss event.  This metric\n   can be used in real-world experiments\
    \ to characterize synchronization\n   along arbitrary Internet paths [JAY2006].\n\
    \   If an AQM scheme is evaluated using real-life network environments,\n   it\
    \ is worth pointing out that some network events, such as failed\n   link restoration\
    \ may cause synchronized losses between active flows,\n   and thus confuse the\
    \ meaning of this metric.\n"
- title: 2.5.  Goodput
  contents:
  - "2.5.  Goodput\n   The goodput has been defined as the number of bits per the\
    \ unit of\n   time forwarded to the correct destination interface, minus any bits\n\
    \   lost or retransmitted, such as proposed in Section 3.17 of [RFC2647],\n  \
    \ which describes the benchmarking terminology for firewall\n   performances.\
    \  This definition requires that the test setup needs to\n   be qualified to assure\
    \ that it is not generating losses on its own.\n   Measuring the end-to-end goodput\
    \ provides an appreciation of how well\n   an AQM scheme improves transport and\
    \ application performance.  The\n   measured end-to-end goodput is linked to the\
    \ dropping/marking policy\n   of the AQM scheme -- e.g., the fewer the number\
    \ of packet drops, the\n   fewer packets need retransmission, minimizing the impact\
    \ of AQM on\n   transport and application performance.  Additionally, an AQM scheme\n\
    \   may resort to Explicit Congestion Notification (ECN) marking as an\n   initial\
    \ means to control delay.  Again, marking packets instead of\n   dropping them\
    \ reduces the number of packet retransmissions and\n   increases goodput.  End-to-end\
    \ goodput values help to evaluate the\n   AQM scheme's effectiveness in minimizing\
    \ packet drops that impact\n   application performance and to estimate how well\
    \ the AQM scheme works\n   with ECN.\n   The measurement of the goodput allows\
    \ the tester to evaluate to what\n   extent an AQM is able to maintain a high\
    \ bottleneck utilization.\n   This metric should also be obtained frequently during\
    \ an experiment,\n   as the long-term goodput is relevant for steady-state scenarios\
    \ only\n   and may not necessarily reflect how the introduction of an AQM\n  \
    \ actually impacts the link utilization during a certain period of\n   time. \
    \ Fluctuations in the values obtained from these measurements\n   may depend on\
    \ other factors than the introduction of an AQM, such as\n   link-layer losses\
    \ due to external noise or corruption, fluctuating\n   bandwidths (IEEE 802.11\
    \ WLANs), heavy congestion levels, or the\n   transport layer's rate reduction\
    \ by the congestion control mechanism.\n"
- title: 2.6.  Latency and Jitter
  contents:
  - "2.6.  Latency and Jitter\n   The latency, or the one-way delay metric, is discussed\
    \ in [RFC7679].\n   There is a consensus on an adequate metric for the jitter\
    \ that\n   represents the one-way delay variations for packets from the same\n\
    \   flow: the Packet Delay Variation (PDV) serves well in all use cases\n   [RFC5481].\n\
    \   The end-to-end latency includes components other than just the\n   queuing\
    \ delay, such as the signal-processing delay, transmission\n   delay, and processing\
    \ delay.  Moreover, the jitter is caused by\n   variations in queuing and processing\
    \ delay (e.g., scheduling\n   effects).  The introduction of an AQM scheme would\
    \ impact end-to-end\n   latency and jitter, and therefore these metrics should\
    \ be considered\n   in the end-to-end evaluation of performance.\n"
- title: 2.7.  Discussion on the Trade-Off between Latency and Goodput
  contents:
  - "2.7.  Discussion on the Trade-Off between Latency and Goodput\n   The metrics\
    \ presented in this section may be considered in order to\n   discuss and quantify\
    \ the trade-off between latency and goodput.\n   With regards to the goodput,\
    \ and in addition to the long-term\n   stationary goodput value, it is recommended\
    \ to take measurements at\n   every multiple of the minimum RTT (minRTT) between\
    \ A and B.  It is\n   suggested to take measurements at least every K * minRTT\
    \ (to smooth\n   out the fluctuations), with K=10.  Higher values for K can be\n\
    \   considered whenever it is more appropriate for the presentation of\n   the\
    \ results, since the value for K may depend on the network's path\n   characteristics.\
    \  The measurement period must be disclosed for each\n   experiment, and when\
    \ results/values are compared across different AQM\n   schemes, the comparisons\
    \ should use exactly the same measurement\n   periods.  With regards to latency,\
    \ it is recommended to take the\n   samples on a per-packet basis whenever possible,\
    \ depending on the\n   features provided by the hardware and software and the\
    \ impact of\n   sampling itself on the hardware performance.\n   From each of\
    \ these sets of measurements, the cumulative density\n   function (CDF) of the\
    \ considered metrics should be computed.  If the\n   considered scenario introduces\
    \ dynamically varying parameters,\n   temporal evolution of the metrics could\
    \ also be generated.  For each\n   scenario, the following graph may be generated:\
    \ the x-axis shows a\n   queuing delay (that is, the average per-packet delay\
    \ in excess of\n   minimum RTT), the y-axis the goodput.  Ellipses are computed\
    \ as\n   detailed in [WINS2014]: \"We take each individual [...] run [...] as\n\
    \   one point, and then compute the 1-epsilon elliptic contour of the\n   maximum-likelihood\
    \ 2D Gaussian distribution that explains the points.\n   [...] we plot the median\
    \ per-sender throughput and queueing delay as\n   a circle. [...] The orientation\
    \ of an ellipse represents the\n   covariance between the throughput and delay\
    \ measured for the\n   protocol.\"  This graph provides part of a better understanding\
    \ of (1)\n   the delay/goodput trade-off for a given congestion control mechanism\n\
    \   (Section 5), and (2) how the goodput and average queue delay vary as\n   a\
    \ function of the traffic load (Section 8.2).\n"
- title: 3.  Generic Setup for Evaluations
  contents:
  - "3.  Generic Setup for Evaluations\n   This section presents the topology that\
    \ can be used for each of the\n   following scenarios, the corresponding notations,\
    \ and discusses\n   various assumptions that have been made in the document.\n"
- title: 3.1.  Topology and Notations
  contents:
  - "3.1.  Topology and Notations\n   +--------------+                           \
    \     +--------------+\n   |sender A_i    |                                |receive\
    \ B_i   |\n   |--------------|                                |--------------|\n\
    \   | SEN.Flow1.1 +---------+            +-----------+ REC.Flow1.1 |\n   |   \
    \     +     |        |            |          |        +     |\n   |        | \
    \    |        |            |          |        |     |\n   |        +     |  \
    \      |            |          |        +     |\n   | SEN.Flow1.X +-----+   |\
    \            |  +--------+ REC.Flow1.X |\n   +--------------+    |   |       \
    \     |  |       +--------------+\n        +            +-+---+---+     +--+--+---+\
    \            +\n        |            |Router L |     |Router R |            |\n\
    \        |            |---------|     |---------|            |\n        |    \
    \        | AQM     |     |         |            |\n        |            | BuffSize|\
    \     | BuffSize|            |\n        |            | (Bsize) +-----+ (Bsize)\
    \ |            |\n        |            +-----+--++     ++-+------+           \
    \ |\n        +                  |  |       | |                   +\n   +--------------+\
    \        |  |       | |          +--------------+\n   |sender A_n    |       \
    \ |  |       | |          |receive B_n   |\n   |--------------|        |  |  \
    \     | |          |--------------|\n   | SEN.FlowN.1 +---------+  |       | +-----------+\
    \ REC.FlowN.1 |\n   |        +     |           |       |            |        +\
    \     |\n   |        |     |           |       |            |        |     |\n\
    \   |        +     |           |       |            |        +     |\n   | SEN.FlowN.Y\
    \ +------------+       +-------------+ REC.FlowN.Y |\n   +--------------+    \
    \                            +--------------+\n                     Figure 1:\
    \ Topology and Notations\n   Figure 1 is a generic topology where:\n   o  The\
    \ traffic profile is a set of flows with similar characteristics\n      -- RTT,\
    \ congestion control scheme, transport protocol, etc.;\n   o  Senders with different\
    \ traffic characteristics (i.e., traffic\n      profiles) can be introduced;\n\
    \   o  The timing of each flow could be different (i.e., when does each\n    \
    \  flow start and stop?);\n   o  Each traffic profile can comprise various number\
    \ of flows;\n   o  Each link is characterized by a couple (one-way delay, capacity);\n\
    \   o  Sender A_i is instantiated for each traffic profile.  A\n      corresponding\
    \ receiver B_i is instantiated for receiving the flows\n      in the profile;\n\
    \   o  Flows share a bottleneck (the link between routers L and R);\n   o  The\
    \ tester should consider both scenarios of asymmetric and\n      symmetric bottleneck\
    \ links in terms of bandwidth.  In the case of\n      an asymmetric link, the\
    \ capacity from senders to receivers is\n      higher than the one from receivers\
    \ to senders; the symmetric link\n      scenario provides a basic understanding\
    \ of the operation of the\n      AQM mechanism, whereas the asymmetric link scenario\
    \ evaluates an\n      AQM mechanism in a more realistic setup;\n   o  In asymmetric\
    \ link scenarios, the tester should study the\n      bidirectional traffic between\
    \ A and B (downlink and uplink) with\n      the AQM mechanism deployed in one\
    \ direction only.  The tester may\n      additionally consider a scenario with\
    \ the AQM mechanism being\n      deployed in both directions.  In each scenario,\
    \ the tester should\n      investigate the impact of the drop policy of the AQM\
    \ on TCP ACK\n      packets and its impact on the performance (Section 9.2).\n\
    \   Although this topology may not perfectly reflect actual topologies,\n   the\
    \ simple topology is commonly used in the world of simulations and\n   small testbeds.\
    \  It can be considered as adequate to evaluate AQM\n   proposals [TCPEVAL]. \
    \ Testers ought to pay attention to the topology\n   used to evaluate an AQM scheme\
    \ when comparing it with a newly\n   proposed AQM scheme.\n"
- title: 3.2.  Buffer Size
  contents:
  - "3.2.  Buffer Size\n   The size of the buffers should be carefully chosen, and\
    \ may be set to\n   the bandwidth-delay product; the bandwidth being the bottleneck\n\
    \   capacity and the delay being the largest RTT in the considered\n   network.\
    \  The size of the buffer can impact the AQM performance and\n   is a dimensioning\
    \ parameter that will be considered when comparing\n   AQM proposals.\n   If a\
    \ specific buffer size is required, the tester must justify and\n   detail the\
    \ way the maximum queue size is set.  Indeed, the maximum\n   size of the buffer\
    \ may affect the AQM's performance and its choice\n   should be elaborated for\
    \ a fair comparison between AQM proposals.\n   While comparing AQM schemes, the\
    \ buffer size should remain the same\n   across the tests.\n"
- title: 3.3.  Congestion Controls
  contents:
  - "3.3.  Congestion Controls\n   This document considers running three different\
    \ congestion control\n   algorithms between A and B:\n   o  Standard TCP congestion\
    \ control: The base-line congestion control\n      is TCP NewReno with selective\
    \ acknowledgment (SACK) [RFC5681].\n   o  Aggressive congestion controls: A base-line\
    \ congestion control for\n      this category is CUBIC [CUBIC].\n   o  Less-than-Best-Effort\
    \ (LBE) congestion controls: Per [RFC6297], an\n      LBE service \"results in\
    \ smaller bandwidth and/or delay impact on\n      standard TCP than standard TCP\
    \ itself, when sharing a bottleneck\n      with it.\"  A base-line congestion\
    \ control for this category is Low\n      Extra Delay Background Transport (LEDBAT)\
    \ [RFC6817].\n   Other transport congestion controls can OPTIONALLY be evaluated\
    \ in\n   addition.  Recent transport layer protocols are not mentioned in the\n\
    \   following sections, for the sake of simplicity.\n"
- title: 4.  Methodology, Metrics, AQM Comparisons, Packet Sizes, Scheduling, and
  contents:
  - "4.  Methodology, Metrics, AQM Comparisons, Packet Sizes, Scheduling, and\n  \
    \  ECN\n"
- title: 4.1.  Methodology
  contents:
  - "4.1.  Methodology\n   A description of each test setup should be detailed to\
    \ allow this\n   test to be compared with other tests.  This also allows others\
    \ to\n   replicate the tests if needed.  This test setup should detail\n   software\
    \ and hardware versions.  The tester could make its data\n   available.\n   The\
    \ proposals should be evaluated on real-life systems, or they may\n   be evaluated\
    \ with event-driven simulations (such as ns-2, ns-3,\n   OMNET, etc.).  The proposed\
    \ scenarios are not bound to a particular\n   evaluation toolset.\n   The tester\
    \ is encouraged to make the detailed test setup and the\n   results publicly available.\n"
- title: 4.2.  Comments on Metrics Measurement
  contents:
  - "4.2.  Comments on Metrics Measurement\n   This document presents the end-to-end\
    \ metrics that ought to be used\n   to evaluate the trade-off between latency\
    \ and goodput as described in\n   Section 2.  In addition to the end-to-end metrics,\
    \ the queue-level\n   metrics (normally collected at the device operating the\
    \ AQM) provide\n   a better understanding of the AQM behavior under study and\
    \ the impact\n   of its internal parameters.  Whenever it is possible (e.g., depending\n\
    \   on the features provided by the hardware/software), these guidelines\n   advise\
    \ considering queue-level metrics, such as link utilization,\n   queuing delay,\
    \ queue size, or packet drop/mark statistics in addition\n   to the AQM-specific\
    \ parameters.  However, the evaluation must be\n   primarily based on externally\
    \ observed end-to-end metrics.\n   These guidelines do not aim to detail the way\
    \ these metrics can be\n   measured, since that is expected to depend on the evaluation\
    \ toolset.\n"
- title: 4.3.  Comparing AQM Schemes
  contents:
  - "4.3.  Comparing AQM Schemes\n   This document recognizes that these guidelines\
    \ may be used for\n   comparing AQM schemes.\n   AQM schemes need to be compared\
    \ against both performance and\n   deployment categories.  In addition, this section\
    \ details how best to\n   achieve a fair comparison of AQM schemes by avoiding\
    \ certain\n   pitfalls.\n"
- title: 4.3.1.  Performance Comparison
  contents:
  - "4.3.1.  Performance Comparison\n   AQM schemes should be compared against the\
    \ generic scenarios that are\n   summarized in Section 13.  AQM schemes may be\
    \ compared for specific\n   network environments such as data centers, home networks,\
    \ etc.  If an\n   AQM scheme has parameter(s) that were externally tuned for\n\
    \   optimization or other purposes, these values must be disclosed.\n   AQM schemes\
    \ belong to different varieties such as queue-length based\n   schemes (for example,\
    \ RED) or queuing-delay based scheme (for\n   example, CoDel, PIE).  AQM schemes\
    \ expose different control knobs\n   associated with different semantics.  For\
    \ example, while both PIE and\n   CoDel are queuing-delay based schemes and each\
    \ expose a knob to\n   control the queuing delay -- PIE's \"queuing delay reference\"\
    \ vs.\n   CoDel's \"queuing delay target\", the two tuning parameters of the two\n\
    \   schemes have different semantics, resulting in different control\n   points.\
    \  Such differences in AQM schemes can be easily overlooked\n   while making comparisons.\n\
    \   This document recommends the following procedures for a fair\n   performance\
    \ comparison between the AQM schemes:\n   1.  Similar control parameters and implications:\
    \ Testers should be\n       aware of the control parameters of the different schemes\
    \ that\n       control similar behavior.  Testers should also be aware of the\n\
    \       input value ranges and corresponding implications.  For example,\n   \
    \    consider two different schemes -- (A) queue-length based AQM\n       scheme,\
    \ and (B) queuing-delay based scheme.  A and B are likely\n       to have different\
    \ kinds of control inputs to control the target\n       delay -- the target queue\
    \ length in A vs. target queuing delay in\n       B, for example.  Setting parameter\
    \ values such as 100 MB for A\n       vs. 10 ms for B will have different implications\
    \ depending on\n       evaluation context.  Such context-dependent implications\
    \ must be\n       considered before drawing conclusions on performance comparisons.\n\
    \       Also, it would be preferable if an AQM proposal listed such\n       parameters\
    \ and discussed how each relates to network\n       characteristics such as capacity,\
    \ average RTT, etc.\n   2.  Compare over a range of input configurations: There\
    \ could be\n       situations when the set of control parameters that affect a\n\
    \       specific behavior have different semantics between the two AQM\n     \
    \  schemes.  As mentioned above, PIE has tuning parameters to\n       control\
    \ queue delay that have different semantics from those used\n       in CoDel.\
    \  In such situations, these schemes need to be compared\n       over a range\
    \ of input configurations.  For example, compare PIE\n       vs. CoDel over the\
    \ range of target delay input configurations.\n"
- title: 4.3.2.  Deployment Comparison
  contents:
  - "4.3.2.  Deployment Comparison\n   AQM schemes must be compared against deployment\
    \ criteria such as the\n   parameter sensitivity (Section 8.3), auto-tuning (Section\
    \ 12), or\n   implementation cost (Section 11).\n"
- title: 4.4.  Packet Sizes and Congestion Notification
  contents:
  - "4.4.  Packet Sizes and Congestion Notification\n   An AQM scheme may be considering\
    \ packet sizes while generating\n   congestion signals [RFC7141].  For example,\
    \ control packets such as\n   DNS requests/responses, TCP SYNs/ACKs are small,\
    \ but their loss can\n   severely impact application performance.  An AQM scheme\
    \ may therefore\n   be biased towards small packets by dropping them with lower\n\
    \   probability compared to larger packets.  However, such an AQM scheme\n   is\
    \ unfair to data senders generating larger packets.  Data senders,\n   malicious\
    \ or otherwise, are motivated to take advantage of such an\n   AQM scheme by transmitting\
    \ smaller packets, and this could result in\n   unsafe deployments and unhealthy\
    \ transport and/or application\n   designs.\n   An AQM scheme should adhere to\
    \ the recommendations outlined in the\n   Best Current Practice for dropping and\
    \ marking packets [BCP41], and\n   should not provide undue advantage to flows\
    \ with smaller packets,\n   such as discussed in Section 4.4 of the AQM recommendation\
    \ document\n   [RFC7567].  In order to evaluate if an AQM scheme is biased towards\n\
    \   flows with smaller size packets, traffic can be generated, as defined\n  \
    \ in Section 8.2.2, where half of the flows have smaller packets (e.g.,\n   500-byte\
    \ packets) than the other half of the flow (e.g., 1500-byte\n   packets).  In\
    \ this case, the metrics reported could be the same as in\n   Section 6.3, where\
    \ Category I is the set of flows with smaller\n   packets and Category II the\
    \ one with larger packets.  The\n   bidirectional scenario could also be considered\
    \ (Section 9.2).\n"
- title: 4.5.  Interaction with ECN
  contents:
  - "4.5.  Interaction with ECN\n   ECN [RFC3168] is an alternative that allows AQM\
    \ schemes to signal to\n   receivers about network congestion that does not use\
    \ packet drops.\n   There are benefits to providing ECN support for an AQM scheme\n\
    \   [WELZ2015].\n   If the tested AQM scheme can support ECN, the testers must\
    \ discuss\n   and describe the support of ECN, such as discussed in the AQM\n\
    \   recommendation document [RFC7567].  Also, the AQM's ECN support can\n   be\
    \ studied and verified by replicating tests in Section 6.2 with ECN\n   turned\
    \ ON at the TCP senders.  The results can be used not only to\n   evaluate the\
    \ performance of the tested AQM with and without ECN\n   markings, but also to\
    \ quantify the interest of enabling ECN.\n"
- title: 4.6.  Interaction with Scheduling
  contents:
  - "4.6.  Interaction with Scheduling\n   A network device may use per-flow or per-class\
    \ queuing with a\n   scheduling algorithm to either prioritize certain applications\
    \ or\n   classes of traffic, limit the rate of transmission, or to provide\n \
    \  isolation between different traffic flows within a common class, such\n   as\
    \ discussed in Section 2.1 of the AQM recommendation document\n   [RFC7567].\n\
    \   The scheduling and the AQM conjointly impact the end-to-end\n   performance.\
    \  Therefore, the AQM proposal must discuss the\n   feasibility of adding scheduling\
    \ combined with the AQM algorithm.  It\n   can be explained whether the dropping\
    \ policy is applied when packets\n   are being enqueued or dequeued.\n   These\
    \ guidelines do not propose guidelines to assess the performance\n   of scheduling\
    \ algorithms.  Indeed, as opposed to characterizing AQM\n   schemes that is related\
    \ to their capacity to control the queuing\n   delay in a queue, characterizing\
    \ scheduling schemes is related to the\n   scheduling itself and its interaction\
    \ with the AQM scheme.  As one\n   example, the scheduler may create sub-queues\
    \ and the AQM scheme may\n   be applied on each of the sub-queues, and/or the\
    \ AQM could be applied\n   on the whole queue.  Also, schedulers might, such as\
    \ FQ-CoDel\n   [HOEI2015] or FavorQueue [ANEL2014], introduce flow prioritization.\n\
    \   In these cases, specific scenarios should be proposed to ascertain\n   that\
    \ these scheduler schemes not only help in tackling the\n   bufferbloat, but also\
    \ are robust under a wide variety of operating\n   conditions.  This is out of\
    \ the scope of this document, which focuses\n   on dropping and/or marking AQM\
    \ schemes.\n"
- title: 5.  Transport Protocols
  contents:
  - "5.  Transport Protocols\n   Network and end-devices need to be configured with\
    \ a reasonable\n   amount of buffer space to absorb transient bursts.  In some\n\
    \   situations, network providers tend to configure devices with large\n   buffers\
    \ to avoid packet drops triggered by a full buffer and to\n   maximize the link\
    \ utilization for standard loss-based TCP traffic.\n   AQM algorithms are often\
    \ evaluated by considering the Transmission\n   Control Protocol (TCP) [RFC793]\
    \ with a limited number of\n   applications.  TCP is a widely deployed transport.\
    \  It fills up\n   available buffers until a sender transferring a bulk flow with\
    \ TCP\n   receives a signal (packet drop) that reduces the sending rate.  The\n\
    \   larger the buffer, the higher the buffer occupancy, and therefore the\n  \
    \ queuing delay.  An efficient AQM scheme sends out early congestion\n   signals\
    \ to TCP to bring the queuing delay under control.\n   Not all endpoints (or applications)\
    \ using TCP use the same flavor of\n   TCP.  A variety of senders generate different\
    \ classes of traffic,\n   which may not react to congestion signals (aka non-responsive\
    \ flows\n   in Section 3 of the AQM recommendation document [RFC7567]) or may\
    \ not\n   reduce their sending rate as expected (aka Transport Flows that are\n\
    \   less responsive than TCP, such as proposed in Section 3 of the AQM\n   recommendation\
    \ document [RFC7567], also called \"aggressive flows\").\n   In these cases, AQM\
    \ schemes seek to control the queuing delay.\n   This section provides guidelines\
    \ to assess the performance of an AQM\n   proposal for various traffic profiles\
    \ -- different types of senders\n   (with different TCP congestion control variants,\
    \ unresponsive, and\n   aggressive).\n"
- title: 5.1.  TCP-Friendly Sender
  contents:
  - '5.1.  TCP-Friendly Sender

    '
- title: 5.1.1.  TCP-Friendly Sender with the Same Initial Congestion Window
  contents:
  - "5.1.1.  TCP-Friendly Sender with the Same Initial Congestion Window\n   This\
    \ scenario helps to evaluate how an AQM scheme reacts to a TCP-\n   friendly transport\
    \ sender.  A single, long-lived, non-application-\n   limited, TCP NewReno flow,\
    \ with an Initial congestion Window (IW) set\n   to 3 packets, transfers data\
    \ between sender A and receiver B.  Other\n   TCP-friendly congestion control\
    \ schemes such as TCP-Friendly Rate\n   Control [RFC5348], etc., may also be considered.\n\
    \   For each TCP-friendly transport considered, the graph described in\n   Section\
    \ 2.7 could be generated.\n"
- title: 5.1.2.  TCP-Friendly Sender with Different Initial Congestion Windows
  contents:
  - "5.1.2.  TCP-Friendly Sender with Different Initial Congestion Windows\n   This\
    \ scenario can be used to evaluate how an AQM scheme adapts to a\n   traffic mix\
    \ consisting of TCP flows with different values of the IW.\n   For this scenario,\
    \ two types of flows must be generated between\n   sender A and receiver B:\n\
    \   o  A single, long-lived non-application-limited TCP NewReno flow;\n   o  A\
    \ single, application-limited TCP NewReno flow, with an IW set to\n      3 or\
    \ 10 packets.  The size of the data transferred must be\n      strictly higher\
    \ than 10 packets and should be lower than 100\n      packets.\n   The transmission\
    \ of the non-application-limited flow must start first\n   and the transmission\
    \ of the application-limited flow starts after the\n   non-application-limited\
    \ flow has reached steady state.  The steady\n   state can be assumed when the\
    \ goodput is stable.\n   For each of these scenarios, the graph described in Section\
    \ 2.7 could\n   be generated for each class of traffic (application-limited and\
    \ non-\n   application-limited).  The completion time of the application-limited\n\
    \   TCP flow could be measured.\n"
- title: 5.2.  Aggressive Transport Sender
  contents:
  - "5.2.  Aggressive Transport Sender\n   This scenario helps testers to evaluate\
    \ how an AQM scheme reacts to a\n   transport sender that is more aggressive than\
    \ a single TCP-friendly\n   sender.  We define 'aggressiveness' as a higher-than-standard\n\
    \   increase factor upon a successful transmission and/or a lower-than-\n   standard\
    \ decrease factor upon a unsuccessful transmission (e.g., in\n   case of congestion\
    \ controls with the Additive Increase Multiplicative\n   Decrease (AIMD) principle,\
    \ a larger AI and/or MD factors).  A single\n   long-lived, non-application-limited,\
    \ CUBIC flow transfers data\n   between sender A and receiver B.  Other aggressive\
    \ congestion control\n   schemes may also be considered.\n   For each flavor of\
    \ aggressive transports, the graph described in\n   Section 2.7 could be generated.\n"
- title: 5.3.  Unresponsive Transport Sender
  contents:
  - "5.3.  Unresponsive Transport Sender\n   This scenario helps testers evaluate\
    \ how an AQM scheme reacts to a\n   transport sender that is less responsive than\
    \ TCP.  Note that faulty\n   transport implementations on an end host and/or faulty\
    \ network\n   elements en route that \"hide\" congestion signals in packet headers\n\
    \   may also lead to a similar situation, such that the AQM scheme needs\n   to\
    \ adapt to unresponsive traffic (see Section 3 of the AQM\n   recommendation document\
    \ [RFC7567]).  To this end, these guidelines\n   propose the two following scenarios:\n\
    \   o  The first scenario can be used to evaluate queue build up.  It\n      considers\
    \ unresponsive flow(s) whose sending rate is greater than\n      the bottleneck\
    \ link capacity between routers L and R.  This\n      scenario consists of a long-lived\
    \ non-application-limited UDP flow\n      that transmits data between sender A\
    \ and receiver B.  The graph\n      described in Section 2.7 could be generated.\n\
    \   o  The second scenario can be used to evaluate if the AQM scheme is\n    \
    \  able to keep the responsive fraction under control.  This scenario\n      considers\
    \ a mixture of TCP-friendly and unresponsive traffic.  It\n      consists of a\
    \ long-lived UDP flow from unresponsive application\n      and a single long-lived,\
    \ non-application-limited (unlimited data\n      available to the transport sender\
    \ from the application layer), TCP\n      New Reno flow that transmit data between\
    \ sender A and receiver B.\n      As opposed to the first scenario, the rate of\
    \ the UDP traffic\n      should not be greater than the bottleneck capacity, and\
    \ should be\n      higher than half of the bottleneck capacity.  For each type\
    \ of\n      traffic, the graph described in Section 2.7 could be generated.\n"
- title: 5.4.  Less-than-Best-Effort Transport Sender
  contents:
  - "5.4.  Less-than-Best-Effort Transport Sender\n   This scenario helps to evaluate\
    \ how an AQM scheme reacts to LBE\n   congestion control that \"results in smaller\
    \ bandwidth and/or delay\n   impact on standard TCP than standard TCP itself,\
    \ when sharing a\n   bottleneck with it\" [RFC6297].  There are potential fateful\n\
    \   interactions when AQM and LBE techniques are combined [GONG2014];\n   this\
    \ scenario helps to evaluate whether the coexistence of the\n   proposed AQM and\
    \ LBE techniques may be possible.\n   A single long-lived non-application-limited\
    \ TCP NewReno flow\n   transfers data between sender A and receiver B.  Other\
    \ TCP-friendly\n   congestion control schemes may also be considered.  Single\
    \ long-lived\n   non-application-limited LEDBAT [RFC6817] flows transfer data\
    \ between\n   sender A and receiver B.  We recommend setting the target delay\
    \ and\n   gain values of LEDBAT to 5 ms and 10, respectively [TRAN2014].  Other\n\
    \   LBE congestion control schemes may also be considered and are listed\n   in\
    \ the IETF survey of LBE protocols [RFC6297].\n   For each of the TCP-friendly\
    \ and LBE transports, the graph described\n   in Section 2.7 could be generated.\n"
- title: 6.  Round-Trip Time Fairness
  contents:
  - '6.  Round-Trip Time Fairness

    '
- title: 6.1.  Motivation
  contents:
  - "6.1.  Motivation\n   An AQM scheme's congestion signals (via drops or ECN marks)\
    \ must\n   reach the transport sender so that a responsive sender can initiate\n\
    \   its congestion control mechanism and adjust the sending rate.  This\n   procedure\
    \ is thus dependent on the end-to-end path RTT.  When the RTT\n   varies, the\
    \ onset of congestion control is impacted, and in turn\n   impacts the ability\
    \ of an AQM scheme to control the queue.  It is\n   therefore important to assess\
    \ the AQM schemes for a set of RTTs\n   between A and B (e.g., from 5 to 200 ms).\n\
    \   The asymmetry in terms of difference in intrinsic RTT between various\n  \
    \ paths sharing the same bottleneck should be considered, so that the\n   fairness\
    \ between the flows can be discussed.  In this scenario, a\n   flow traversing\
    \ on a shorter RTT path may react faster to congestion\n   and recover faster\
    \ from it compared to another flow on a longer RTT\n   path.  The introduction\
    \ of AQM schemes may potentially improve the\n   RTT fairness.\n   Introducing\
    \ an AQM scheme may cause unfairness between the flows,\n   even if the RTTs are\
    \ identical.  This potential unfairness should be\n   investigated as well.\n"
- title: 6.2.  Recommended Tests
  contents:
  - "6.2.  Recommended Tests\n   The recommended topology is detailed in Figure 1.\n\
    \   To evaluate the RTT fairness, for each run, two flows are divided\n   into\
    \ two categories.  Category I whose RTT between sender A and\n   receiver B should\
    \ be 100 ms.  Category II, in which the RTT between\n   sender A and receiver\
    \ B should be in the range [5 ms, 560 ms]\n   inclusive.  The maximum value for\
    \ the RTT represents the RTT of a\n   satellite link [RFC2488].\n   A set of evaluated\
    \ flows must use the same congestion control\n   algorithm: all the generated\
    \ flows could be single long-lived non-\n   application-limited TCP NewReno flows.\n"
- title: 6.3.  Metrics to Evaluate the RTT Fairness
  contents:
  - "6.3.  Metrics to Evaluate the RTT Fairness\n   The outputs that must be measured\
    \ are: (1) the cumulative average\n   goodput of the flow from Category I, goodput_Cat_I\
    \ (see Section 2.5\n   for the estimation of the goodput); (2) the cumulative\
    \ average\n   goodput of the flow from Category II, goodput_Cat_II (see Section\
    \ 2.5\n   for the estimation of the goodput); (3) the ratio goodput_Cat_II/\n\
    \   goodput_Cat_I; and (4) the average packet drop rate for each category\n  \
    \ (Section 2.3).\n"
- title: 7.  Burst Absorption
  contents:
  - "7.  Burst Absorption\n   \"AQM mechanisms might need to control the overall queue\
    \ sizes to\n   ensure that arriving bursts can be accommodated without dropping\n\
    \   packets\" [RFC7567].\n"
- title: 7.1.  Motivation
  contents:
  - "7.1.  Motivation\n   An AQM scheme can face bursts of packet arrivals due to\
    \ various\n   reasons.  Dropping one or more packets from a burst can result in\n\
    \   performance penalties for the corresponding flows, since dropped\n   packets\
    \ have to be retransmitted.  Performance penalties can result\n   in failing to\
    \ meet Service Level Agreements (SLAs) and can be a\n   disincentive to AQM adoption.\n\
    \   The ability to accommodate bursts translates to larger queue length\n   and\
    \ hence more queuing delay.  On the one hand, it is important that\n   an AQM\
    \ scheme quickly brings bursty traffic under control.  On the\n   other hand,\
    \ a peak in the packet drop rates to bring a packet burst\n   quickly under control\
    \ could result in multiple drops per flow and\n   severely impact transport and\
    \ application performance.  Therefore, an\n   AQM scheme ought to bring bursts\
    \ under control by balancing both\n   aspects -- (1) queuing delay spikes are\
    \ minimized and (2) performance\n   penalties for ongoing flows in terms of packet\
    \ drops are minimized.\n   An AQM scheme that maintains short queues allows some\
    \ remaining space\n   in the buffer for bursts of arriving packets.  The tolerance\
    \ to\n   bursts of packets depends upon the number of packets in the queue,\n\
    \   which is directly linked to the AQM algorithm.  Moreover, an AQM\n   scheme\
    \ may implement a feature controlling the maximum size of\n   accepted bursts\
    \ that can depend on the buffer occupancy or the\n   currently estimated queuing\
    \ delay.  The impact of the buffer size on\n   the burst allowance may be evaluated.\n"
- title: 7.2.  Recommended Tests
  contents:
  - "7.2.  Recommended Tests\n   For this scenario, the tester must evaluate how the\
    \ AQM performs with\n   a traffic mix.  The traffic mix could be composed of (from\
    \ sender A\n   to receiver B):\n   o  Burst of packets at the beginning of a transmission,\
    \ such as web\n      traffic with IW10;\n   o  Applications that send large bursts\
    \ of data, such as bursty video\n      frames;\n   o  Background traffic, such\
    \ as Constant Bit Rate (CBR) UDP traffic\n      and/or A single non-application-limited\
    \ bulk TCP flow as\n      background traffic.\n   Figure 2 presents the various\
    \ cases for the traffic that must be\n   generated between sender A and receiver\
    \ B.\n   +-------------------------------------------------+\n   |Case| Traffic\
    \ Type                               |\n   |    +-----+------------+----+--------------------+\n\
    \   |    |Video|Web  (IW 10)| CBR| Bulk TCP Traffic   |\n   +----|-----|------------|----|--------------------|\n\
    \   |I   |  0  |     1      |  1 |         0          |\n   +----|-----|------------|----|--------------------|\n\
    \   |II  |  0  |     1      |  1 |         1          |\n   |----|-----|------------|----|--------------------|\n\
    \   |III |  1  |     1      |  1 |         0          |\n   +----|-----|------------|----|--------------------|\n\
    \   |IV  |  1  |     1      |  1 |         1          |\n   +----+-----+------------+----+--------------------+\n\
    \                    Figure 2: Bursty Traffic Scenarios\n   A new web page download\
    \ could start after the previous web page\n   download is finished.  Each web\
    \ page could be composed of at least 50\n   objects and the size of each object\
    \ should be at least 1 KB.  Six TCP\n   parallel connections should be generated\
    \ to download the objects,\n   each parallel connection having an initial congestion\
    \ window set to\n   10 packets.\n   For each of these scenarios, the graph described\
    \ in Section 2.7 could\n   be generated for each application.  Metrics such as\
    \ end-to-end\n   latency, jitter, and flow completion time may be generated. \
    \ For the\n   cases of frame generation of bursty video traffic as well as the\n\
    \   choice of web traffic pattern, these details and their presentation\n   are\
    \ left to the testers.\n"
- title: 8.  Stability
  contents:
  - '8.  Stability

    '
- title: 8.1.  Motivation
  contents:
  - "8.1.  Motivation\n   The safety of an AQM scheme is directly related to its stability\n\
    \   under varying operating conditions such as varying traffic profiles\n   and\
    \ fluctuating network conditions.  Since operating conditions can\n   vary often,\
    \ the AQM needs to remain stable under these conditions\n   without the need for\
    \ additional external tuning.\n   Network devices can experience varying operating\
    \ conditions depending\n   on factors such as time of the day, deployment scenario,\
    \ etc.  For\n   example:\n   o  Traffic and congestion levels are higher during\
    \ peak hours than\n      off-peak hours.\n   o  In the presence of a scheduler,\
    \ the draining rate of a queue can\n      vary depending on the occupancy of other\
    \ queues: a low load on a\n      high-priority queue implies a higher draining\
    \ rate for the lower-\n      priority queues.\n   o  The capacity available can\
    \ vary over time (e.g., a lossy channel,\n      a link supporting traffic in a\
    \ higher Diffserv class).\n   Whether or not the target context is a stable environment,\
    \ the\n   ability of an AQM scheme to maintain its control over the queuing\n\
    \   delay and buffer occupancy can be challenged.  This document proposes\n  \
    \ guidelines to assess the behavior of AQM schemes under varying\n   congestion\
    \ levels and varying draining rates.\n"
- title: 8.2.  Recommended Tests
  contents:
  - "8.2.  Recommended Tests\n   Note that the traffic profiles explained below comprises\
    \ non-\n   application-limited TCP flows.  For each of the below scenarios, the\n\
    \   graphs described in Section 2.7 should be generated, and the goodput\n   of\
    \ the various flows should be cumulated.  For Section 8.2.5 and\n   Section 8.2.6,\
    \ they should incorporate the results in a per-phase\n   basis as well.\n   Wherever\
    \ the notion of time has been explicitly mentioned in this\n   subsection, time\
    \ 0 starts from the moment all TCP flows have already\n   reached their congestion\
    \ avoidance phase.\n"
- title: 8.2.1.  Definition of the Congestion Level
  contents:
  - "8.2.1.  Definition of the Congestion Level\n   In these guidelines, the congestion\
    \ levels are represented by the\n   projected packet drop rate, which is determined\
    \ when there is no AQM\n   scheme (i.e., a drop-tail queue).  When the bottleneck\
    \ is shared\n   among non-application-limited TCP flows, l_r (the loss rate\n\
    \   projection) can be expressed as a function of N, the number of bulk\n   TCP\
    \ flows, and S, the sum of the bandwidth-delay product and the\n   maximum buffer\
    \ size, both expressed in packets, based on Eq. 3 of\n   [MORR2000]:\n   l_r =\
    \ 0.76 * N^2 / S^2\n   N = S * SQRT(1/0.76) * SQRT(l_r)\n   These guidelines use\
    \ the loss rate to define the different congestion\n   levels, but they do not\
    \ stipulate that in other circumstances,\n   measuring the congestion level gives\
    \ you an accurate estimation of\n   the loss rate or vice versa.\n"
- title: 8.2.2.  Mild Congestion
  contents:
  - "8.2.2.  Mild Congestion\n   This scenario can be used to evaluate how an AQM\
    \ scheme reacts to a\n   light load of incoming traffic resulting in mild congestion\
    \ -- packet\n   drop rates around 0.1%. The number of bulk flows required to achieve\n\
    \   this congestion level, N_mild, is then:\n   N_mild = ROUND (0.036*S)\n"
- title: 8.2.3.  Medium Congestion
  contents:
  - "8.2.3.  Medium Congestion\n   This scenario can be used to evaluate how an AQM\
    \ scheme reacts to\n   incoming traffic resulting in medium congestion -- packet\
    \ drop rates\n   around 0.5%. The number of bulk flows required to achieve this\n\
    \   congestion level, N_med, is then:\n   N_med = ROUND (0.081*S)\n"
- title: 8.2.4.  Heavy Congestion
  contents:
  - "8.2.4.  Heavy Congestion\n   This scenario can be used to evaluate how an AQM\
    \ scheme reacts to\n   incoming traffic resulting in heavy congestion -- packet\
    \ drop rates\n   around 1%. The number of bulk flows required to achieve this\n\
    \   congestion level, N_heavy, is then:\n   N_heavy = ROUND (0.114*S)\n"
- title: 8.2.5.  Varying the Congestion Level
  contents:
  - "8.2.5.  Varying the Congestion Level\n   This scenario can be used to evaluate\
    \ how an AQM scheme reacts to\n   incoming traffic resulting in various levels\
    \ of congestion during the\n   experiment.  In this scenario, the congestion level\
    \ varies within a\n   large timescale.  The following phases may be considered:\
    \ phase I --\n   mild congestion during 0-20 s; phase II -- medium congestion\
    \ during\n   20-40 s; phase III -- heavy congestion during 40-60 s; phase I again,\n\
    \   and so on.\n"
- title: 8.2.6.  Varying Available Capacity
  contents:
  - "8.2.6.  Varying Available Capacity\n   This scenario can be used to help characterize\
    \ how the AQM behaves\n   and adapts to bandwidth changes.  The experiments are\
    \ not meant to\n   reflect the exact conditions of Wi-Fi environments since it\
    \ is hard\n   to design repetitive experiments or accurate simulations for such\n\
    \   scenarios.\n   To emulate varying draining rates, the bottleneck capacity\
    \ between\n   nodes 'Router L' and 'Router R' varies over the course of the\n\
    \   experiment as follows:\n   o  Experiment 1: The capacity varies between two\
    \ values within a\n      large timescale.  As an example, the following phases\
    \ may be\n      considered: phase I -- 100 Mbps during 0-20 s; phase II -- 10\
    \ Mbps\n      during 20-40 s; phase I again, and so on.\n   o  Experiment 2: The\
    \ capacity varies between two values within a\n      short timescale.  As an example,\
    \ the following phases may be\n      considered: phase I -- 100 Mbps during 0-100\
    \ ms; phase II -- 10\n      Mbps during 100-200 ms; phase I again, and so on.\n\
    \   The tester may choose a phase time-interval value different than what\n  \
    \ is stated above, if the network's path conditions (such as bandwidth-\n   delay\
    \ product) necessitate.  In this case, the choice of such a time-\n   interval\
    \ value should be stated and elaborated.\n   The tester may additionally evaluate\
    \ the two mentioned scenarios\n   (short-term and long-term capacity variations),\
    \ during and/or\n   including the TCP slow-start phase.\n   More realistic fluctuating\
    \ capacity patterns may be considered.  The\n   tester may choose to incorporate\
    \ realistic scenarios with regards to\n   common fluctuation of bandwidth in state-of-the-art\
    \ technologies.\n   The scenario consists of TCP NewReno flows between sender\
    \ A and\n   receiver B.  To better assess the impact of draining rates on the\
    \ AQM\n   behavior, the tester must compare its performance with those of drop-\n\
    \   tail and should provide a reference document for their proposal\n   discussing\
    \ performance and deployment compared to those of drop-tail.\n   Burst traffic,\
    \ such as presented in Section 7.2, could also be\n   considered to assess the\
    \ impact of varying available capacity on the\n   burst absorption of the AQM.\n"
- title: 8.3.  Parameter Sensitivity and Stability Analysis
  contents:
  - "8.3.  Parameter Sensitivity and Stability Analysis\n   The control law used by\
    \ an AQM is the primary means by which the\n   queuing delay is controlled.  Hence,\
    \ understanding the control law is\n   critical to understanding the behavior\
    \ of the AQM scheme.  The\n   control law could include several input parameters\
    \ whose values\n   affect the AQM scheme's output behavior and its stability.\n\
    \   Additionally, AQM schemes may auto-tune parameter values in order to\n   maintain\
    \ stability under different network conditions (such as\n   different congestion\
    \ levels, draining rates, or network\n   environments).  The stability of these\
    \ auto-tuning techniques is also\n   important to understand.\n   Transports operating\
    \ under the control of AQM experience the effect\n   of multiple control loops\
    \ that react over different timescales.  It\n   is therefore important that proposed\
    \ AQM schemes are seen to be\n   stable when they are deployed at multiple points\
    \ of potential\n   congestion along an Internet path.  The pattern of congestion\
    \ signals\n   (loss or ECN-marking) arising from AQM methods also needs to not\n\
    \   adversely interact with the dynamics of the transport protocols that\n   they\
    \ control.\n   AQM proposals should provide background material showing theoretical\n\
    \   analysis of the AQM control law and the input parameter space within\n   which\
    \ the control law operates, or they should use another way to\n   discuss the\
    \ stability of the control law.  For parameters that are\n   auto-tuned, the material\
    \ should include stability analysis of the\n   auto-tuning mechanism(s) as well.\
    \  Such analysis helps to understand\n   an AQM control law better and the network\
    \ conditions/deployments\n   under which the AQM is stable.\n"
- title: 9.  Various Traffic Profiles
  contents:
  - "9.  Various Traffic Profiles\n   This section provides guidelines to assess the\
    \ performance of an AQM\n   proposal for various traffic profiles such as traffic\
    \ with different\n   applications or bidirectional traffic.\n"
- title: 9.1.  Traffic Mix
  contents:
  - "9.1.  Traffic Mix\n   This scenario can be used to evaluate how an AQM scheme\
    \ reacts to a\n   traffic mix consisting of different applications such as:\n\
    \   o  Bulk TCP transfer\n   o  Web traffic\n   o  VoIP\n   o  Constant Bit Rate\
    \ (CBR) UDP traffic\n   o  Adaptive video streaming (either unidirectional or\
    \ bidirectional)\n   Various traffic mixes can be considered.  These guidelines\
    \ recommend\n   examining at least the following example: 1 bidirectional VoIP;\
    \ 6 web\n   page downloads (such as those detailed in Section 7.2); 1 CBR; 1\n\
    \   Adaptive Video; 5 bulk TCP.  Any other combinations could be\n   considered\
    \ and should be carefully documented.\n   For each scenario, the graph described\
    \ in Section 2.7 could be\n   generated for each class of traffic.  Metrics such\
    \ as end-to-end\n   latency, jitter, and flow completion time may be reported.\n"
- title: 9.2.  Bidirectional Traffic
  contents:
  - "9.2.  Bidirectional Traffic\n   Control packets such as DNS requests/responses,\
    \ TCP SYNs/ACKs are\n   small, but their loss can severely impact the application\n\
    \   performance.  The scenario proposed in this section will help in\n   assessing\
    \ whether the introduction of an AQM scheme increases the\n   loss probability\
    \ of these important packets.\n   For this scenario, traffic must be generated\
    \ in both downlink and\n   uplink, as defined in Section 3.1.  The amount of asymmetry\
    \ between\n   the uplink and the downlink depends on the context.  These guidelines\n\
    \   recommend considering a mild congestion level and the traffic\n   presented\
    \ in Section 8.2.2 in both directions.  In this case, the\n   metrics reported\
    \ must be the same as in Section 8.2 for each\n   direction.\n   The traffic mix\
    \ presented in Section 9.1 may also be generated in\n   both directions.\n"
- title: 10.  Example of a Multi-AQM Scenario
  contents:
  - '10.  Example of a Multi-AQM Scenario

    '
- title: 10.1.  Motivation
  contents:
  - "10.1.  Motivation\n   Transports operating under the control of AQM experience\
    \ the effect\n   of multiple control loops that react over different timescales.\
    \  It\n   is therefore important that proposed AQM schemes are seen to be\n  \
    \ stable when they are deployed at multiple points of potential\n   congestion\
    \ along an Internet path.  The pattern of congestion signals\n   (loss or ECN-marking)\
    \ arising from AQM methods also need to not\n   adversely interact with the dynamics\
    \ of the transport protocols that\n   they control.\n"
- title: 10.2.  Details on the Evaluation Scenario
  contents:
  - "10.2.  Details on the Evaluation Scenario\n   +---------+                   \
    \           +-----------+\n   |senders A|---+                      +---|receivers\
    \ A|\n   +---------+   |                      |   +-----------+\n           +-----+---+\
    \  +---------+  +--+-----+\n           |Router L |--|Router M |--|Router R|\n\
    \           |AQM A    |  |AQM M    |  |No AQM  |\n           +---------+  +--+------+\
    \  +--+-----+\n   +---------+             |            |   +-----------+\n   |senders\
    \ B|-------------+            +---|receivers B|\n   +---------+              \
    \                +-----------+\n               Figure 3: Topology for the Multi-AQM\
    \ Scenario\n   Figure 3 describes topology options for evaluating multi-AQM\n\
    \   scenarios.  The AQM schemes are applied in sequence and impact the\n   induced\
    \ latency reduction, the induced goodput maximization, and the\n   trade-off between\
    \ these two.  Note that AQM schemes A and B\n   introduced in Routers L and M\
    \ could be (I) same scheme with identical\n   parameter values, (ii) same scheme\
    \ with different parameter values,\n   or (iii) two different schemes.  To best\
    \ understand the interactions\n   and implications, the mild congestion scenario\
    \ as described in\n   Section 8.2.2 is recommended such that the number of flows\
    \ is equally\n   shared among senders A and B.  Other relevant combinations of\n\
    \   congestion levels could also be considered.  We recommend measuring\n   the\
    \ metrics presented in Section 8.2.\n"
- title: 11.  Implementation Cost
  contents:
  - '11.  Implementation Cost

    '
- title: 11.1.  Motivation
  contents:
  - "11.1.  Motivation\n   Successful deployment of AQM is directly related to its\
    \ cost of\n   implementation.  Network devices may need hardware or software\n\
    \   implementations of the AQM mechanism.  Depending on a device's\n   capabilities\
    \ and limitations, the device may or may not be able to\n   implement some or\
    \ all parts of their AQM logic.\n   AQM proposals should provide pseudocode for\
    \ the complete AQM scheme,\n   highlighting generic implementation-specific aspects\
    \ of the scheme\n   such as \"drop-tail\" vs. \"drop-head\", inputs (e.g., current\
    \ queuing\n   delay, and queue length), computations involved, need for timers,\n\
    \   etc.  This helps to identify costs associated with implementing the\n   AQM\
    \ scheme on a particular hardware or software device.  This also\n   facilitates\
    \ discussions around which kind of devices can easily\n   support the AQM and\
    \ which cannot.\n"
- title: 11.2.  Recommended Discussion
  contents:
  - "11.2.  Recommended Discussion\n   AQM proposals should highlight parts of their\
    \ AQM logic that are\n   device dependent and discuss if and how AQM behavior\
    \ could be\n   impacted by the device.  For example, a queuing-delay-based AQM\n\
    \   scheme requires current queuing delay as input from the device.  If\n   the\
    \ device already maintains this value, then it can be trivial to\n   implement\
    \ the AQM logic on the device.  If the device provides\n   indirect means to estimate\
    \ the queuing delay (for example, timestamps\n   and dequeuing rate), then the\
    \ AQM behavior is sensitive to the\n   precision of the queuing delay estimations\
    \ are for that device.\n   Highlighting the sensitivity of an AQM scheme to queuing\
    \ delay\n   estimations helps implementers to identify appropriate means of\n\
    \   implementing the mechanism on a device.\n"
- title: 12.  Operator Control and Auto-Tuning
  contents:
  - '12.  Operator Control and Auto-Tuning

    '
- title: 12.1.  Motivation
  contents:
  - "12.1.  Motivation\n   One of the biggest hurdles of RED deployment was/is its\
    \ parameter\n   sensitivity to operating conditions -- how difficult it is to\
    \ tune\n   RED parameters for a deployment to achieve acceptable benefit from\n\
    \   using RED.  Fluctuating congestion levels and network conditions add\n   to\
    \ the complexity.  Incorrect parameter values lead to poor\n   performance.\n\
    \   Any AQM scheme is likely to have parameters whose values affect the\n   control\
    \ law and behavior of an AQM.  Exposing all these parameters as\n   control parameters\
    \ to a network operator (or user) can easily result\n   in an unsafe AQM deployment.\
    \  Unexpected AQM behavior ensues when\n   parameter values are set improperly.\
    \  A minimal number of control\n   parameters minimizes the number of ways a user\
    \ can break a system\n   where an AQM scheme is deployed at.  Fewer control parameters\
    \ make\n   the AQM scheme more user-friendly and easier to deploy and debug.\n\
    \   \"AQM algorithms SHOULD NOT require tuning of initial or configuration\n \
    \  parameters in common use cases.\" such as stated in Section 4 of the\n   AQM\
    \ recommendation document [RFC7567].  A scheme ought to expose only\n   those\
    \ parameters that control the macroscopic AQM behavior such as\n   queue delay\
    \ threshold, queue length threshold, etc.\n   Additionally, the safety of an AQM\
    \ scheme is directly related to its\n   stability under varying operating conditions\
    \ such as varying traffic\n   profiles and fluctuating network conditions, as\
    \ described in\n   Section 8.  Operating conditions vary often and hence the AQM\
    \ needs\n   to remain stable under these conditions without the need for\n   additional\
    \ external tuning.  If AQM parameters require tuning under\n   these conditions,\
    \ then the AQM must self-adapt necessary parameter\n   values by employing auto-tuning\
    \ techniques.\n"
- title: 12.2.  Recommended Discussion
  contents:
  - "12.2.  Recommended Discussion\n   In order to understand an AQM's deployment\
    \ considerations and\n   performance under a specific environment, AQM proposals\
    \ should\n   describe the parameters that control the macroscopic AQM behavior,\n\
    \   and identify any parameters that require tuning to operational\n   conditions.\
    \  It could be interesting to also discuss that, even if an\n   AQM scheme may\
    \ not adequately auto-tune its parameters, the resulting\n   performance may not\
    \ be optimal, but close to something reasonable.\n   If there are any fixed parameters\
    \ within the AQM, their setting\n   should be discussed and justified to help\
    \ understand whether a fixed\n   parameter value is applicable for a particular\
    \ environment.\n   If an AQM scheme is evaluated with parameter(s) that were externally\n\
    \   tuned for optimization or other purposes, these values must be\n   disclosed.\n"
- title: 13.  Summary
  contents:
  - "13.  Summary\n   Figure 4 lists the scenarios for an extended characterization\
    \ of an\n   AQM scheme.  This table comes along with a set of requirements to\n\
    \   present more clearly the weight and importance of each scenario.  The\n  \
    \ requirements listed here are informational and their relevance may\n   depend\
    \ on the deployment scenario.\n   +------------------------------------------------------------------+\n\
    \   |Scenario                   |Sec.  |Informational requirement      |\n   +------------------------------------------------------------------+\n\
    \   +------------------------------------------------------------------+\n   |Interaction\
    \ with ECN       | 4.5  |must be discussed if supported |\n   +------------------------------------------------------------------+\n\
    \   |Interaction with Scheduling| 4.6  |should be discussed            |\n   +------------------------------------------------------------------+\n\
    \   |Transport Protocols        | 5    |                               |\n   |\
    \ TCP-friendly sender       | 5.1  |scenario must be considered    |\n   | Aggressive\
    \ sender         | 5.2  |scenario must be considered    |\n   | Unresponsive sender\
    \       | 5.3  |scenario must be considered    |\n   | LBE sender            \
    \    | 5.4  |scenario may be considered     |\n   +------------------------------------------------------------------+\n\
    \   |Round-Trip Time Fairness   | 6.2  |scenario must be considered    |\n   +------------------------------------------------------------------+\n\
    \   |Burst Absorption           | 7.2  |scenario must be considered    |\n   +------------------------------------------------------------------+\n\
    \   |Stability                  | 8    |                               |\n   |\
    \ Varying congestion levels | 8.2.5|scenario must be considered    |\n   | Varying\
    \ available capacity| 8.2.6|scenario must be considered    |\n   | Parameters\
    \ and stability  | 8.3  |this should be discussed       |\n   +------------------------------------------------------------------+\n\
    \   |Various Traffic Profiles   | 9    |                               |\n   |\
    \ Traffic mix               | 9.1  |scenario is recommended        |\n   | Bidirectional\
    \ traffic     | 9.2  |scenario may be considered     |\n   +------------------------------------------------------------------+\n\
    \   |Multi-AQM                  | 10.2 |scenario may be considered     |\n   +------------------------------------------------------------------+\n\
    \         Figure 4: Summary of the Scenarios and their Requirements\n"
- title: 14.  Security Considerations
  contents:
  - "14.  Security Considerations\n   Some security considerations for AQM are identified\
    \ in [RFC7567].\n   This document, by itself, presents no new privacy or security\
    \ issues.\n"
- title: 15.  References
  contents:
  - '15.  References

    '
- title: 15.1.  Normative References
  contents:
  - "15.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", RFC 2119, 1997.\n   [RFC2544]\
    \  Bradner, S. and J. McQuaid, \"Benchmarking Methodology for\n              Network\
    \ Interconnect Devices\", RFC 2544,\n              DOI 10.17487/RFC2544, March\
    \ 1999,\n              <http://www.rfc-editor.org/info/rfc2544>.\n   [RFC2647]\
    \  Newman, D., \"Benchmarking Terminology for Firewall\n              Performance\"\
    , RFC 2647, DOI 10.17487/RFC2647, August 1999,\n              <http://www.rfc-editor.org/info/rfc2647>.\n\
    \   [RFC5481]  Morton, A. and B. Claise, \"Packet Delay Variation\n          \
    \    Applicability Statement\", RFC 5481, DOI 10.17487/RFC5481,\n            \
    \  March 2009, <http://www.rfc-editor.org/info/rfc5481>.\n   [RFC7567]  Baker,\
    \ F., Ed. and G. Fairhurst, Ed., \"IETF\n              Recommendations Regarding\
    \ Active Queue Management\",\n              BCP 197, RFC 7567, DOI 10.17487/RFC7567,\
    \ July 2015,\n              <http://www.rfc-editor.org/info/rfc7567>.\n   [RFC7679]\
    \  Almes, G., Kalidindi, S., Zekauskas, M., and A. Morton,\n              Ed.,\
    \ \"A One-Way Delay Metric for IP Performance Metrics\n              (IPPM)\"\
    , STD 81, RFC 7679, DOI 10.17487/RFC7679, January\n              2016, <http://www.rfc-editor.org/info/rfc7679>.\n\
    \   [RFC7680]  Almes, G., Kalidindi, S., Zekauskas, M., and A. Morton,\n     \
    \         Ed., \"A One-Way Loss Metric for IP Performance Metrics\n          \
    \    (IPPM)\", STD 82, RFC 7680, DOI 10.17487/RFC7680, January\n             \
    \ 2016, <http://www.rfc-editor.org/info/rfc7680>.\n"
- title: 15.2.  Informative References
  contents:
  - "15.2.  Informative References\n   [ANEL2014] Anelli, P., Diana, R., and E. Lochin,\
    \ \"FavorQueue: a\n              Parameterless Active Queue Management to Improve\
    \ TCP\n              Traffic Performance\", Computer Networks Vol. 60,\n     \
    \         DOI 10.1016/j.bjp.2013.11.008, 2014.\n   [AQMPIE]   Pan, R., Natarajan,\
    \ P., Baker, F., and G. White, \"PIE: A\n              Lightweight Control Scheme\
    \ To Address the Bufferbloat\n              Problem\", Work in Progress, draft-ietf-aqm-pie-08,\
    \ June\n              2016.\n   [BB2011]   Cerf, V., Jacobson, V., Weaver, N.,\
    \ and J. Gettys,\n              \"BufferBloat: what's wrong with the internet?\"\
    , ACM\n              Queue Vol. 55, DOI 10.1145/2076450.2076464, 2012.\n   [BCP41]\
    \    Floyd, S., \"Congestion Control Principles\", BCP 41,\n              RFC\
    \ 2914, September 2000.\n              Briscoe, B. and J.  Manner, \"Byte and\
    \ Packet Congestion\n              Notification\", BCP 41, RFC 7141, February\
    \ 2014.\n              <http://www.rfc-editor.org/info/bcp41>\n   [CODEL]    Nichols,\
    \ K., Jacobson, V., McGregor, A., and J. Iyengar,\n              \"Controlled\
    \ Delay Active Queue Management\", Work in\n              Progress, draft-ietf-aqm-codel-04,\
    \ June 2016.\n   [CUBIC]    Rhee, I., Xu, L., Ha, S., Zimmermann, A., Eggert,\
    \ L., and\n              R. Scheffenegger, \"CUBIC for Fast Long-Distance Networks\"\
    ,\n              Work in Progress, draft-ietf-tcpm-cubic-01, January 2016.\n \
    \  [FENG2002] Feng, W., Shin, K., Kandlur, D., and D. Saha, \"The BLUE\n     \
    \         active queue management algorithms\", IEEE Transactions on\n       \
    \       Networking Vol.10 Issue 4, DOI 10.1109/TNET.2002.801399,\n           \
    \   2002, <http://ieeexplore.ieee.org/xpl/\n              articleDetails.jsp?arnumber=1026008>.\n\
    \   [FLOY1993] Floyd, S. and V. Jacobson, \"Random Early Detection (RED)\n   \
    \           Gateways for Congestion Avoidance\", IEEE Transactions on\n      \
    \        Networking Vol. 1 Issue 4, DOI 10.1109/90.251892, 1993,\n           \
    \   <http://ieeexplore.ieee.org/xpl/\n              articleDetails.jsp?arnumber=251892>.\n\
    \   [GONG2014] Gong, Y., Rossi, D., Testa, C., Valenti, S., and D. Taht,\n   \
    \           \"Fighting the bufferbloat: on the coexistence of AQM and\n      \
    \        low priority congestion control\", Computer Networks,\n             \
    \ Elsevier, 2014, pp.115-128 Vol. 60,\n              DOI 10.1109/INFCOMW.2013.6562885,\
    \ 2014.\n   [HASS2008] Hassayoun, S. and D. Ros, \"Loss Synchronization and Router\n\
    \              Buffer Sizing with High-Speed Versions of TCP\",\n            \
    \  IEEE INFOCOM Workshops, DOI 10.1109/INFOCOM.2008.4544632,\n              2008,\
    \ <http://ieeexplore.ieee.org/xpl/\n              articleDetails.jsp?arnumber=4544632>.\n\
    \   [HOEI2015] Hoeiland-Joergensen, T., McKenney, P.,\n              dave.taht@gmail.com,\
    \ d., Gettys, J., and E. Dumazet, \"The\n              FlowQueue-CoDel Packet\
    \ Scheduler and Active Queue\n              Management Algorithm\", Work in Progress,\
    \ draft-ietf-aqm-\n              fq-codel-06, March 2016.\n   [HOLLO2001]\n  \
    \            Hollot, C., Misra, V., Towsley, V., and W. Gong, \"On\n         \
    \     Designing Improved Controller for AQM Routers Supporting\n             \
    \ TCP Flows\", IEEE INFOCOM, DOI 10.1109/INFCOM.2001.916670,\n              2001,\
    \ <http://ieeexplore.ieee.org/xpl/\n              articleDetails.jsp?arnumber=916670>.\n\
    \   [JAY2006]  Jay, P., Fu, Q., and G. Armitage, \"A preliminary analysis\n  \
    \            of loss synchronisation between concurrent TCP flows\",\n       \
    \       Australian Telecommunication Networks and Application\n              Conference\
    \ (ATNAC), 2006.\n   [MORR2000] Morris, R., \"Scalable TCP congestion control\"\
    ,\n              IEEE INFOCOM, DOI 10.1109/INFCOM.2000.832487, 2000,\n       \
    \       <http://ieeexplore.ieee.org/xpl/\n              articleDetails.jsp?arnumber=832487>.\n\
    \   [RFC793]   Postel, J., \"Transmission Control Protocol\", STD 7,\n       \
    \       RFC 793, DOI 10.17487/RFC0793, September 1981,\n              <http://www.rfc-editor.org/info/rfc793>.\n\
    \   [RFC2309]  Braden, B., Clark, D., Crowcroft, J., Davie, B., Deering,\n   \
    \           S., Estrin, D., Floyd, S., Jacobson, V., Minshall, G.,\n         \
    \     Partridge, C., Peterson, L., Ramakrishnan, K., Shenker,\n              S.,\
    \ Wroclawski, J., and L. Zhang, \"Recommendations on\n              Queue Management\
    \ and Congestion Avoidance in the\n              Internet\", RFC 2309, DOI 10.17487/RFC2309,\
    \ April 1998,\n              <http://www.rfc-editor.org/info/rfc2309>.\n   [RFC2488]\
    \  Allman, M., Glover, D., and L. Sanchez, \"Enhancing TCP\n              Over\
    \ Satellite Channels using Standard Mechanisms\",\n              BCP 28, RFC 2488,\
    \ DOI 10.17487/RFC2488, January 1999,\n              <http://www.rfc-editor.org/info/rfc2488>.\n\
    \   [RFC3168]  Ramakrishnan, K., Floyd, S., and D. Black, \"The Addition\n   \
    \           of Explicit Congestion Notification (ECN) to IP\",\n             \
    \ RFC 3168, DOI 10.17487/RFC3168, September 2001,\n              <http://www.rfc-editor.org/info/rfc3168>.\n\
    \   [RFC3611]  Friedman, T., Ed., Caceres, R., Ed., and A. Clark, Ed.,\n     \
    \         \"RTP Control Protocol Extended Reports (RTCP XR)\",\n             \
    \ RFC 3611, DOI 10.17487/RFC3611, November 2003,\n              <http://www.rfc-editor.org/info/rfc3611>.\n\
    \   [RFC5348]  Floyd, S., Handley, M., Padhye, J., and J. Widmer, \"TCP\n    \
    \          Friendly Rate Control (TFRC): Protocol Specification\",\n         \
    \     RFC 5348, DOI 10.17487/RFC5348, September 2008,\n              <http://www.rfc-editor.org/info/rfc5348>.\n\
    \   [RFC5681]  Allman, M., Paxson, V., and E. Blanton, \"TCP Congestion\n    \
    \          Control\", RFC 5681, DOI 10.17487/RFC5681, September 2009,\n      \
    \        <http://www.rfc-editor.org/info/rfc5681>.\n   [RFC6297]  Welzl, M. and\
    \ D. Ros, \"A Survey of Lower-than-Best-Effort\n              Transport Protocols\"\
    , RFC 6297, DOI 10.17487/RFC6297, June\n              2011, <http://www.rfc-editor.org/info/rfc6297>.\n\
    \   [RFC6817]  Shalunov, S., Hazel, G., Iyengar, J., and M. Kuehlewind,\n    \
    \          \"Low Extra Delay Background Transport (LEDBAT)\", RFC 6817,\n    \
    \          DOI 10.17487/RFC6817, December 2012,\n              <http://www.rfc-editor.org/info/rfc6817>.\n\
    \   [RFC7141]  Briscoe, B. and J. Manner, \"Byte and Packet Congestion\n     \
    \         Notification\", BCP 41, RFC 7141, DOI 10.17487/RFC7141,\n          \
    \    February 2014, <http://www.rfc-editor.org/info/rfc7141>.\n   [TCPEVAL]  Hayes,\
    \ D., Ros, D., Andrew, L., and S. Floyd, \"Common TCP\n              Evaluation\
    \ Suite\", Work in Progress, draft-irtf-iccrg-\n              tcpeval-01, July\
    \ 2014.\n   [TRAN2014] Trang, S., Kuhn, N., Lochin, E., Baudoin, C., Dubois, E.,\n\
    \              and P. Gelard, \"On The Existence Of Optimal LEDBAT\n         \
    \     Parameters\", IEEE ICC 2014 - Communication\n              QoS, Reliability\
    \ and Modeling Symposium,\n              DOI 10.1109/ICC.2014.6883487, 2014,\n\
    \              <http://ieeexplore.ieee.org/xpl/\n              articleDetails.jsp?arnumber=6883487>.\n\
    \   [WELZ2015] Welzl, M. and G. Fairhurst, \"The Benefits to Applications\n  \
    \            of using Explicit Congestion Notification (ECN)\", Work in\n    \
    \          Progress, draft-welzl-ecn-benefits-02, March 2015.\n   [WINS2014] Winstein,\
    \ K., \"Transport Architectures for an Evolving\n              Internet\", PhD\
    \ thesis, Massachusetts Institute of\n              Technology, June 2014.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   This work has been partially supported by the European Community\n\
    \   under its Seventh Framework Programme through the Reducing Internet\n   Transport\
    \ Latency (RITE) project (ICT-317700).\n   Many thanks to S. Akhtar, A.B. Bagayoko,\
    \ F. Baker, R. Bless, D.\n   Collier-Brown, G. Fairhurst, J. Gettys, P. Goltsman,\
    \ T. Hoiland-\n   Jorgensen, K. Kilkki, C. Kulatunga, W. Lautenschlager, A.C.\
    \ Morton,\n   R. Pan, G. Skinner, D. Taht, and M. Welzl for detailed and wise\n\
    \   feedback on this document.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Nicolas Kuhn (editor)\n   CNES, Telecom Bretagne\n   18\
    \ avenue Edouard Belin\n   Toulouse  31400\n   France\n   Phone: +33 5 61 27 32\
    \ 13\n   Email: nicolas.kuhn@cnes.fr\n   Preethi Natarajan (editor)\n   Cisco\
    \ Systems\n   510 McCarthy Blvd\n   Milpitas, California\n   United States of\
    \ America\n   Email: prenatar@cisco.com\n   Naeem Khademi (editor)\n   University\
    \ of Oslo\n   Department of Informatics, PO Box 1080 Blindern\n   N-0316 Oslo\n\
    \   Norway\n   Phone: +47 2285 24 93\n   Email: naeemk@ifi.uio.no\n   David Ros\n\
    \   Simula Research Laboratory AS\n   P.O. Box 134\n   Lysaker, 1325\n   Norway\n\
    \   Phone: +33 299 25 21 21\n   Email: dros@simula.no\n"
