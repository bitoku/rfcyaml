- contents:
  - "              Signaling MIB for PacketCable and IPCablecom\n                  Multimedia
    Terminal Adapters (MTAs)\n"
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Abstract\n   This memo defines a portion of the Management Information Base (MIB)\n
    \  for use with network management protocols in the Internet community.\n   In
    particular, it defines a basic set of managed objects for Simple\n   Network Management
    Protocol (SNMP)-based management of PacketCable-\n   and IPCablecom-compliant
    Multimedia Terminal Adapter devices.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1. The Internet-Standard Management Framework ......................2\n
    \  2. Introduction ....................................................2\n   3.
    Terminology .....................................................3\n      3.1.
    MTA ........................................................3\n      3.2. Endpoint
    ...................................................3\n      3.3. L Line Package
    .............................................4\n      3.4. E Line Package .............................................4\n
    \  4. Overview ........................................................4\n      4.1.
    Structure of the MIB .......................................5\n      4.2. pktcSigMibObjects
    ..........................................5\n      4.3. pktcSigConformance .........................................6\n
    \  5. Definitions .....................................................6\n   6.
    Examples .......................................................69\n   7. Acknowledgments
    ................................................72\n   8. Security Considerations
    ........................................73\n   9. IANA Considerations ............................................75\n
    \  10. References ....................................................75\n      10.1.
    Normative References .....................................75\n      10.2. Informative
    References ...................................76\n"
  title: Table of Contents
- contents:
  - "1.  The Internet-Standard Management Framework\n   For a detailed overview of
    the documents that describe the current\n   Internet-Standard Management Framework,
    please refer to section 7 of\n   RFC 3410 [RFC3410].\n   Managed objects are accessed
    via a virtual information store, termed\n   the Management Information Base or
    MIB.  MIB objects are generally\n   accessed through the Simple Network Management
    Protocol (SNMP).\n   Objects in the MIB are defined using the mechanisms defined
    in the\n   Structure of Management Information (SMI).  This memo specifies a MIB\n
    \  module that is compliant to the SMIv2, which is described in STD 58,\n   RFC
    2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58, RFC 2580\n   [RFC2580].\n"
  title: 1.  The Internet-Standard Management Framework
- contents:
  - "2.  Introduction\n   A multimedia terminal adapter (MTA) is used to deliver broadband\n
    \  Internet, data, and/or voice access jointly with telephony service\n   to a
    subscriber's or customer's premises using a cable network\n   infrastructure.
    \ An MTA is normally installed at the customer's or\n   subscriber's premises,
    and it is coupled to a multiple system\n   operator (MSO) using a hybrid fiber
    coax (HFC) access network.\n   An MTA is provisioned by the MSO for broadband
    Internet, data, and/or\n   voice service.  For more information on MTA provisioning,
    refer to\n   the PacketCable Provisioning Specification [PKT-SP-PROV] and\n   [RFC4682].
    \ MTA devices include one or more endpoints\n   (e.g., telephone ports), which
    receive call signaling information\n   to establish ring cadence, and codecs used
    for providing telephony\n   service.  For more information on call signaling,
    refer to the\n   PacketCable Signaling Specification [PKT-SP-MGCP] and [RFC3435].\n
    \  For more information on codecs refer to the PacketCable Audio/Video\n   Codecs
    Specification [PKT-SP-CODEC].\n   Telephone systems are typically very complex
    and often have a wide\n   distribution.  It is therefore important for management
    systems to\n   support MTAs from multiple vendors at the same time, including
    those\n   from multiple countries.  This MIB module provides objects suitable\n
    \  for managing signaling for MTA devices in the widest possible range\n   of
    markets.\n"
  title: 2.  Introduction
- contents:
  - "3.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"
    in this\n   document are to be interpreted as described in RFC 2119 [RFC2119].\n
    \  The terms \"MIB module\" and \"information module\" are used\n   interchangeably
    in this memo.  As used here, both terms refer to any\n   of the three types of
    information modules defined in Section 3 of\n   RFC 2578 [RFC2578].\n"
  - contents:
    - "3.1.  MTA\n   An MTA is a PacketCable or IPCablecom compliant device providing\n
      \  telephony services over a cable or hybrid system used to deliver\n   video
      signals to a community.  It contains an interface to endpoints,\n   a network
      interface, codecs, and all signaling and encapsulation\n   functions required
      for Voice-over IP transport, call signaling, and\n   Quality of Service signaling.
      \ An MTA can be an embedded or\n   standalone device.  An Embedded MTA (E-MTA)
      is an MTA device\n   containing an embedded Data Over Cable Service Interface\n
      \  Specifications (DOCSIS) Cable Modem.  A Standalone MTA (S-MTA) is an\n   MTA
      device separated from the DOCSIS Cable Modem by non-DOCSIS Media\n   Access
      Control (MAC) interface (e.g., Ethernet, USB).\n"
    title: 3.1.  MTA
  - contents:
    - "3.2.  Endpoint\n   An endpoint or MTA endpoint is a standard telephony physical
      port\n   located on the MTA and used for attaching the telephone device to\n
      \  the MTA.\n"
    title: 3.2.  Endpoint
  - contents:
    - "3.3.  L Line Package\n   The L line package refers to the Media Gateway Control
      Protocol\n   (MGCP) package for the core signaling functionality, as defined
      by\n   PacketCable and IPCablecom.  An MTA provides all L package elements:\n
      \  however, the operator determines their application.\n"
    title: 3.3.  L Line Package
  - contents:
    - "3.4.  E Line Package\n   The E line package refers to the MGCP package extensions,
      over and\n   above the core L package, defined in support of international\n
      \  requirements.  E line package elements are optional, vary from\n   country
      to country, and are set by operator or regulatory\n   requirements.\n"
    title: 3.4.  E Line Package
  title: 3.  Terminology
- contents:
  - "4.  Overview\n   This MIB module provides a set of objects required for Multimedia\n
    \  Terminal Adapter (MTA) devices compliant with the PacketCable and\n   IPCablecom
    signaling specifications published by CableLabs, the\n   European Telecommunications
    Standards Institute (ETSI), and the\n   International Telecommunication Union
    Telecommunication\n   Standardization Sector (ITU-T) IPCablecom compliant Multimedia\n
    \  Terminal Adapter (MTA) devices.  The Signaling MIB module\n   (PKTC-IETF-SIG-MIB)
    is intended to update various Signaling MIB\n   modules from which it is partly
    derived:\n     - the PacketCable 1.0 Signaling MIB Specification\n       [PKT-SP-MIB-SIG-1.0],\n
    \    - the PacketCable 1.5 Signaling MIB Specification\n       [PKT-SP-MIB-SIG-1.5],\n
    \    - the ITU-T IPCablecom Signaling MIB requirements [ITU-T-J169],\n     - the
    ETSI Signaling MIB [ETSI-TS-101-909-9].  The ETSI Signaling\n       MIB requirements
    also refer to various signal characteristics\n       defined in [ETSI-TS-101-909-4],
    [ETSI-EN-300-001],\n       [ETSI-EN-300-659-1], [ETSI-EN-300-324-1] and [ETSI-TR-101-183].\n
    \  Several normative and informative references are used to help define\n   Signaling
    MIB objects.  As a convention, wherever PacketCable and\n   IPCablecom requirements
    are equivalent, the PacketCable reference is\n   used in the object REFERENCE
    clause.  IPCablecom compliant MTA\n   devices MUST use the equivalent IPCablecom
    references.\n   This MIB module describes the various Signaling MIB objects that
    are\n   directly related to the PacketCable MTA and the endpoints supported\n
    \  on the MTA, each of which provides services independently.  The\n   recognition
    and distinction of the endpoints are made by utilizing\n   the ifTable (IF-MIB
    [RFC2863]), where each index (ifIndex) value\n   refers to a unique endpoint.
    \ This MIB module also utilizes the\n   syntax definition of the Differentiated
    Services Code Point (DSCP)\n   from DIFFSERV-DSCP-TC [RFC3289] for defining MIB
    objects that allow\n   for differentiation between various types of traffic in
    the service\n   provider network.\n"
  - contents:
    - "4.1.  Structure of the MIB\n   This MIB module is identified by pktcIetfSigMib
      and is structured\n   into two major parts:\n   - Signaling information that
      controls device and endpoint\n     configuration (pktcSigMibObjects)\n   - Module
      Conformance information(pktcSigConformance)\n   The following sections explain
      each part in further detail.  It is to\n   be noted that future enhancements
      to specify Notification Objects are\n   also allowed (pktcSigNotification).\n"
    title: 4.1.  Structure of the MIB
  - contents:
    - "4.2.  pktcSigMibObjects\n   This is further divided into device-specific elements\n
      \  (pktcSigDevObjects) and endpoint-specific elements\n   (pktcSigEndPntConfigObjects).\n
      \  Some highlights of the device-specific elements are as follows:\n   pktcSigDevCodecTable
      - this object identifies the codec types\n   available on the device.\n   pktcSigDevEchoCancellation
      - this object identifies the capability of\n   echo cancellation on the device.\n
      \  pktcSigDevSilenceSuppression - this object specifies if the device is\n   capable
      of silence suppression (Voice Activity Detection).\n   pktcSigPulseSignalTable
      - this table selects the various signals used\n   in the application of the
      metering pulse signal to the twisted pair\n   line.\n   pktcSigDevToneTable
      - this table specifies a flexible structure\n   within which to specify all
      of the tones used in the MTA.\n   pktcSigDevMultiFreqToneTable - this table
      defines the characteristics\n   of tones with multiple frequencies.  Each entry
      in this table\n   represents the frequency reference of a multi-frequency tone.\n
      \  The endpoint-specific elements are mostly confined to the Endpoint\n   configuration
      MIB table (pktcSigEndPntConfigTable).  This table\n   describes the MTA endPoint
      configuration.  The number of entries in\n   this table represents the number
      of provisioned endpoints.\n"
    title: 4.2.  pktcSigMibObjects
  - contents:
    - "4.3.  pktcSigConformance\n   pktcSigDeviceGroup - this group contains all the
      MIB objects that\n   apply on a per-device basis and need to be implemented
      by an MTA to\n   claim compliance with the specified MIB module.\n   pktcSigEndpointGroup
      - this group contains all the MIB objects that\n   apply on a per-endpoint basis
      and need to be implemented by an MTA to\n   claim compliance with the specified
      MIB module.\n   pktcLLinePackageGroup - this group contains the MIB objects
      that need\n   to be implemented to support the L line package.\n   pktcELinePackageGroup
      - this group contains the MIB objects that need\n   to be implemented to support
      the E line package.\n   pktcInternationalGroup - this group contains optional
      MIB objects\n   designed to support operations over the widest possible range
      of\n   markets.\n"
    title: 4.3.  pktcSigConformance
  title: 4.  Overview
- contents:
  - '5.  Definitions

    '
  - 'PKTC-IETF-SIG-MIB DEFINITIONS ::= BEGIN

    '
  - "IMPORTS\n    MODULE-IDENTITY,\n    OBJECT-TYPE,\n    Integer32,\n    Unsigned32,\n
    \   mib-2\n          FROM SNMPv2-SMI                   -- [RFC2578]\n    InetAddressType,\n
    \   InetAddress,\n    InetPortNumber\n          FROM INET-ADDRESS-MIB             --
    [RFC4001]\n    TEXTUAL-CONVENTION,\n    RowStatus,\n    TruthValue\n          FROM
    SNMPv2-TC                    -- [RFC2579]\n    OBJECT-GROUP,\n    MODULE-COMPLIANCE\n
    \         FROM SNMPv2-CONF                  -- [RFC2580]\n    SnmpAdminString\n
    \         FROM SNMP-FRAMEWORK-MIB           -- [RFC3411]\n    ifIndex\n          FROM
    IF-MIB                       -- [RFC2863]\n    Dscp\n          FROM DIFFSERV-DSCP-TC;
    \           -- [RFC3289]\n"
  - "pktcIetfSigMib MODULE-IDENTITY\n    LAST-UPDATED    \"200712180000Z\" -- December
    18, 2007\n    ORGANIZATION    \"IETF IPCDN Working Group\"\n    CONTACT-INFO\n
    \       \"Sumanth Channabasappa\n         Cable Television Laboratories, Inc.\n
    \        858 Coal Creek Circle,\n         Louisville, CO 80027, USA\n         Phone:
    +1 303-661-3307\n         Email: Sumanth@cablelabs.com\n         Gordon Beacham\n
    \        Motorola, Inc.\n         6450 Sequence Drive, Bldg. 1\n         San Diego,
    CA 92121, USA\n         Phone: +1 858-404-2334\n         Email: gordon.beacham@motorola.com\n
    \        Satish Kumar Mudugere Eswaraiah\n         Texas Instruments India (P)
    Ltd.,\n         Golf view, Wind Tunnel Road\n         Murugesh Palya\n         Bangalore
    560 017, INDIA\n         Phone:   +91 80 5269451\n         Email:  satish.kumar@ti.com\n
    \   IETF IPCDN Working Group\n         General Discussion: ipcdn@ietf.org\n         Subscribe:
    http://www.ietf.org/mailman/listinfo/ipcdn\n         Archive: ftp://ftp.ietf.org/ietf-mail-archive/ipcdn\n
    \        Co-Chair: Jean-Francois Mule, jf.mule@cablelabs.com\n         Co-Chair:
    Richard Woundy, Richard_Woundy@cable.comcast.com\"\n    DESCRIPTION\n       \"This
    MIB module supplies the basic management\n        objects for the PacketCable
    and IPCablecom Signaling\n        protocols.  This version of the MIB includes\n
    \       common signaling and Network Call Signaling\n        (NCS)-related signaling
    objects.\n        Copyright (C) The IETF Trust (2008).  This version of\n        this
    MIB module is part of RFC 5098; see the RFC itself for\n        full legal notices.\"\n
    \   REVISION                \"200712180000Z\"\n    DESCRIPTION\n       \"Initial
    version, published as RFC 5098.\"\n"
  - '::=  { mib-2 169 }

    '
  - '-- Textual Conventions

    '
  - "TenthdBm ::= TEXTUAL-CONVENTION\n    DISPLAY-HINT \"d-1\"\n    STATUS       current\n
    \   DESCRIPTION\n        \"This TEXTUAL-CONVENTION represents power levels that
    are\n         normally expressed in dBm.  Units are in tenths of a dBm;\n         for
    example, -13.5 dBm will be represented as -135.\"\n    SYNTAX       Integer32\n"
  - "PktcCodecType ::= TEXTUAL-CONVENTION\n    STATUS       current\n    DESCRIPTION\n
    \       \" This TEXTUAL-CONVENTION defines various types of codecs\n          that
    MAY be supported.  The description for each\n          enumeration is listed below:\n
    \         Enumeration     Description\n          other           a defined codec
    not in the enumeration\n          unknown         a codec not defined by the PacketCable\n
    \                         Codec Specification\n          g729            ITU-T
    Recommendation G.729\n          reserved        for future use\n          g729E
    \          ITU-T Recommendation G.729E\n          pcmu            Pulse Code Modulation
    u-law (PCMU)\n          g726at32        ITU-T Recommendation G.726-32 (32 kbit/s)\n
    \         g728            ITU-T Recommendation G.728\n          pcma            Pulse
    Code Modulation a-law (PCMA)\n          g726at16        ITU-T Recommendation G.726-16
    (16 kbit/s)\n          g726at24        ITU-T Recommendation G.726-24 (24 kbit/s)\n
    \         g726at40        ITU-T Recommendation G.726-40 (40 kbit/s)\n          ilbc
    \           IETF Internet low-bit rate codec\n          bv16            Broadcom
    BroadVoice16\n          The list of codecs is consistent with the IETF\n          Real-Time
    Transport Protocol (RTP) Profile registry and\n          the RTP Map Parameters
    Table in PacketCable Audio/Video\n          Codecs Specification [PKT-SP-CODEC].
    \ The literal codec\n          name for each codec is listed below:\n          Codec
    \    Literal Codec Name\n          g729              G729\n          g729E             G729E\n
    \         pcmu              PCMU\n          g726at32          G726-32\n          g728
    \             G728\n          pcma              PCMA\n          g726at16          G726-16\n
    \         g726at24          G726-24\n          g726at40          G726-40\n          ilbc
    \             iLBC\n          bv16              BV16\n          The literal codec
    name is the second column of the table\n          with codec RTP Map Parameters.
    \ The Literal Codec Name Column\n          contains the codec name used in the
    local connection\n          options (LCO) of the NCS messages create connection\n
    \         (CRCX)/modify connection (MDCX) and is also used to\n          identify
    the codec in the Call Management System (CMS)\n          Provisioning Specification.
    \ The RTP Map Parameter column of\n          the Table contains the string used
    in the media attribute\n          line (a=) of the session description protocol
    (SDP)\n          parameters in NCS messages.\"\n    SYNTAX INTEGER {\n               other
    \    (1),\n               unknown   (2),\n               g729      (3),\n               reserved
    \ (4),\n               g729E     (5),\n               pcmu      (6),\n               g726at32
    \ (7),\n               g728      (8),\n               pcma      (9),\n               g726at16
    \ (10),\n               g726at24  (11),\n               g726at40  (12),\n               ilbc
    \     (13),\n               bv16      (14)\n    }\n"
  - "PktcRingCadence   ::= TEXTUAL-CONVENTION\n    STATUS        current\n    DESCRIPTION\n
    \         \"This object provides an encoding scheme for ring\n          cadences,
    including repeatability characteristics.  All\n          fields in this object
    MUST be encoded in network-byte\n          order.\n          The first three higher-order
    octets are reserved.  The\n          octets that follow are used to encode a 'bit-string',
    with\n          each bit corresponding to 50 milliseconds.  A bit value of\n          '1'
    indicates the presence of a ring-tone, and a bit value\n          of '0' indicates
    the absence of a ring-tone, for that\n          duration (50 ms) (Note: A minimum
    number of octets\n          required to encode the bit-string MUST be used).\n
    \         The first two of the reserved octets MUST indicate the\n          length
    of the encoded cadence (in bits) and MUST range\n          between 1 and 264.
    \ (Note: The length in bits MUST also be\n          consistent with the number
    of octets that encode the\n          cadence).  The MTA MUST ignore any unused
    bits in the last\n          octet, but MUST reflect the value as provided on\n
    \         subsequent SNMP GETs.\n          The third of the reserved octets indicates
    'repeatability'\n          and MUST be either 0x80 or 0x00 -- the former value\n
    \         indicating 'non-repeatability', and the latter indicating\n          'repeatability'.\n
    \         The MTA MUST reject attempts to set a value that violates\n          any
    of the above requirements.\"\n    SYNTAX  OCTET STRING (SIZE(4..36))\n"
  - "PktcSigType     ::= TEXTUAL-CONVENTION\n    STATUS       current\n    DESCRIPTION\n
    \       \" This object lists the various types of signaling that may\n          be
    supported:\n          other(1) - set when signaling other than NCS is used\n          ncs(2)
    \  - Network Call Signaling is a derivation of MGCP\n                    (Media
    Gateway Control Protocol) defined for\n                     IPCablecom/PacketCable
    MTAs.\"\n    SYNTAX INTEGER {\n                   other(1),\n                   ncs(2)\n
    \   }\n"
  - "DtmfCode::=TEXTUAL-CONVENTION\n    STATUS       current\n    DESCRIPTION\n        \"This
    TEXTUAL-CONVENTION represents the Dual-Tone\n         Multi-Frequency (DTMF) Character
    used\n         to indicate the start or end of the digit transition\n         sequence
    used for caller id or Visual Message Waiting\n         Indicator (VMWI).\n         Note:
    The DTMF code '*' is indicated using 'dtmfcodeStar',\n         and the DTMF code
    '#' is indicated using ' dtmfcodeHash'.\"\n    SYNTAX       INTEGER {\n                  dtmfcode0(0),\n
    \                 dtmfcode1(1),\n                  dtmfcode2(2),\n                  dtmfcode3(3),\n
    \                 dtmfcode4(4),\n                  dtmfcode5(5),\n                  dtmfcode6(6),\n
    \                 dtmfcode7(7),\n                  dtmfcode8(8),\n                  dtmfcode9(9),\n
    \                 dtmfcodeStar(10),\n                  dtmfcodeHash(11),\n                  dtmfcodeA(12),\n
    \                 dtmfcodeB(13),\n                  dtmfcodeC(14),\n                  dtmfcodeD(15)\n"
  - '}

    '
  - "PktcSubscriberSideSigProtocol::=TEXTUAL-CONVENTION\n    STATUS  current\n    DESCRIPTION\n
    \       \"This TEXTUAL-CONVENTION represents the Signaling\n         protocol
    being used for purposes such as caller id\n         or VMWI.\n         A value
    of fsk(1) indicates Frequency Shift Keying\n         (FSK).\n         A value
    of dtmf(2) indicates Dual-Tone Multi-Frequency\n         (DTMF).\"\n         SYNTAX
    INTEGER {\n                fsk(1),\n                dtmf(2)\n         }\n"
  - 'pktcSigMibObjects OBJECT IDENTIFIER ::= { pktcIetfSigMib 1 }

    '
  - "pktcSigDevObjects OBJECT IDENTIFIER ::=\n                                        {
    pktcSigMibObjects 1 }\n"
  - "pktcSigEndPntConfigObjects OBJECT IDENTIFIER ::=\n                                        {
    pktcSigMibObjects 2 }\n"
  - '--

    '
  - '-- The codec table (pktcSigDevCodecTable) defines all combinations

    '
  - '-- of codecs supported by the Multimedia Terminal Adapter (MTA).

    '
  - '--

    '
  - "pktcSigDevCodecTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF PktcSigDevCodecEntry\n
    \   MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n         \"
    This table describes the MTA-supported codec types.  An MTA\n          MUST populate
    this table with all possible combinations of\n          codecs it supports for
    simultaneous operation.  For example,\n          an MTA with two endpoints may
    be designed with a particular\n          Digital Signal Processing (DSP) and memory
    architecture that\n          allows it to support the following fixed combinations
    of\n          codecs for simultaneous operation:\n          Codec Type     Maximum
    Number of Simultaneous Codecs\n          PCMA                             3\n
    \         PCMA                             2\n          PCMU                             1\n
    \         PCMA                             1\n          PCMU                             2\n
    \         PCMU                             3\n          PCMA                             1\n
    \         G729                             1\n          G729                             2\n
    \         PCMU                             1\n          G729                             1\n
    \         Based on this example, the entries in the codec table\n          would
    be:\n            pktcSigDev        pktcSigDev        pktcSigDev\n          CodecComboIndex
    \    CodecType          CodecMax\n                 1               pcma                3\n
    \                2               pcma                2\n                 2               pcmu
    \               1\n                 3               pcma                1\n                 3
    \              pcmu                2\n                 4               pcmu                3\n
    \                5               pcma                1\n                 5               g729
    \               1\n                 6               g729                2\n                 7
    \              pcmu                1\n                 7               g729                1\n
    \         An operator querying this table is able to determine all\n          possible
    codec combinations the MTA is capable of\n          simultaneously supporting.\n
    \         This table MUST NOT include non-voice codecs.\"\n    ::= { pktcSigDevObjects
    1 }\n"
  - "pktcSigDevCodecEntry  OBJECT-TYPE\n    SYNTAX      PktcSigDevCodecEntry\n    MAX-ACCESS
    \ not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"Each entry
    represents the maximum number of active\n         connections with a particular
    codec the MTA is capable of\n         supporting.  Each row is indexed by a composite
    key\n         consisting of a number enumerating the particular codec\n         combination
    and the codec type.\"\n    INDEX { pktcSigDevCodecComboIndex, pktcSigDevCodecType
    }\n    ::= { pktcSigDevCodecTable 1 }\n"
  - "PktcSigDevCodecEntry  ::= SEQUENCE {\n    pktcSigDevCodecComboIndex    Unsigned32,\n
    \   pktcSigDevCodecType     PktcCodecType,\n    pktcSigDevCodecMax      Unsigned32\n
    \   }\n"
  - "pktcSigDevCodecComboIndex  OBJECT-TYPE\n    SYNTAX      Unsigned32 (1..255)\n
    \   MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"
    The index value that enumerates a particular codec\n          combination in the
    pktcSigDevCodecTable.\"\n    ::= { pktcSigDevCodecEntry 1 }\n"
  - "pktcSigDevCodecType  OBJECT-TYPE\n    SYNTAX       PktcCodecType\n    MAX-ACCESS
    \  not-accessible\n    STATUS       current\n    DESCRIPTION\n        \" A codec
    type supported by this MTA.\"\n    ::= { pktcSigDevCodecEntry 2 }\n"
  - "pktcSigDevCodecMax  OBJECT-TYPE\n    SYNTAX      Unsigned32(1..255)\n    MAX-ACCESS
    \ read-only\n    STATUS      current\n    DESCRIPTION\n        \" The maximum
    number of simultaneous sessions of a\n          particular codec that the MTA
    can support.\"\n    ::= { pktcSigDevCodecEntry 3 }\n"
  - '--

    '
  - '-- These are the common signaling-related definitions that affect

    '
  - '-- the entire MTA device.

    '
  - '--

    '
  - "pktcSigDevEchoCancellation  OBJECT-TYPE\n    SYNTAX       TruthValue\n    MAX-ACCESS
    \  read-only\n    STATUS       current\n    DESCRIPTION\n        \" This object
    specifies if the device is capable of echo\n          cancellation.  The MTA MUST
    set this MIB object to a\n          value of true(1) if it is capable of echo\n
    \         cancellation, and a value of false(2) if not.\"\n    ::= { pktcSigDevObjects
    2 }\n"
  - "pktcSigDevSilenceSuppression  OBJECT-TYPE\n    SYNTAX       TruthValue\n    MAX-ACCESS
    \  read-only\n    STATUS       current\n    DESCRIPTION\n        \" This object
    specifies if the device is capable of\n          silence suppression (as a result
    of Voice Activity\n          Detection).  The MTA MUST set this MIB object to
    a\n          value of true(1) if it is capable of silence\n          suppression,
    and a value of false(2) if not.\"\n"
  - '::= { pktcSigDevObjects 3 }

    '
  - "pktcSigDevCidSigProtocol  OBJECT-TYPE\n    SYNTAX       PktcSubscriberSideSigProtocol\n
    \   MAX-ACCESS   read-write\n    STATUS       current\n    DESCRIPTION\n        \"This
    object is used to configure the subscriber-line\n         protocol used for signaling
    on-hook caller id information.\n         Different countries define different
    caller id signaling\n         protocols to support caller identification.\n         Setting
    this object at a value fsk(1) sets the subscriber\n         line protocol to be
    Frequency Shift Keying (FSK).\n         Setting this object at a value dtmf(2)
    sets the subscriber\n         line protocol to be Dual-Tone Multi-Frequency (DTMF).\n
    \        The value of this MIB object MUST NOT persist across MTA\n         reboots.\"\n
    \    REFERENCE\n        \"ETSI-EN-300-659-1 Specification\"\n     DEFVAL { fsk
    }\n"
  - '::= { pktcSigDevObjects 4 }

    '
  - "pktcSigDevR0Cadence     OBJECT-TYPE\n    SYNTAX      PktcRingCadence\n    MAX-ACCESS
    \ read-write\n    STATUS      current\n    DESCRIPTION\n        \" This object
    specifies ring cadence 0 (a user-defined\n          field).\n          The value
    of this MIB object MUST NOT persist across MTA\n          reboots.\"\n    ::=
    { pktcSigDevObjects 5 }\n"
  - "pktcSigDevR1Cadence     OBJECT-TYPE\n    SYNTAX      PktcRingCadence\n    MAX-ACCESS
    \ read-write\n    STATUS      current\n    DESCRIPTION\n        \" This object
    specifies ring cadence 1 (a user-defined\n          field).\n          The value
    of this MIB object MUST NOT persist across MTA\n          reboots.\"\n    ::=
    { pktcSigDevObjects 6 }\n"
  - "pktcSigDevR2Cadence     OBJECT-TYPE\n    SYNTAX       PktcRingCadence\n    MAX-ACCESS
    \   read-write\n    STATUS        current\n    DESCRIPTION\n        \" This object
    specifies ring cadence 2 (a user-defined\n          field).\n          The value
    of this MIB object MUST NOT persist across MTA\n          reboots.\"\n    ::=
    { pktcSigDevObjects 7 }\n"
  - "pktcSigDevR3Cadence     OBJECT-TYPE\n    SYNTAX       PktcRingCadence\n    MAX-ACCESS
    \  read-write\n    STATUS       current\n    DESCRIPTION\n        \" This object
    specifies ring cadence 3 (a user-defined\n          field).\n          The value
    of this MIB object MUST NOT persist across MTA\n          reboots.\"\n    ::=
    { pktcSigDevObjects 8 }\n"
  - "pktcSigDevR4Cadence     OBJECT-TYPE\n    SYNTAX       PktcRingCadence\n    MAX-ACCESS
    \  read-write\n    STATUS       current\n    DESCRIPTION\n        \" This object
    specifies ring cadence 4 (a user-defined\n          field).\n          The value
    of this MIB object MUST NOT persist across MTA\n          reboots.\"\n    ::=
    { pktcSigDevObjects 9 }\n"
  - "pktcSigDevR5Cadence     OBJECT-TYPE\n    SYNTAX       PktcRingCadence\n    MAX-ACCESS
    \  read-write\n    STATUS       current\n    DESCRIPTION\n        \" This object
    specifies ring cadence 5 (a user-defined\n          field).\n          The value
    of this MIB object MUST NOT persist across MTA\n          reboots.\"\n    ::=
    { pktcSigDevObjects 10 }\n"
  - "pktcSigDevR6Cadence     OBJECT-TYPE\n    SYNTAX      PktcRingCadence\n    MAX-ACCESS
    \ read-write\n    STATUS      current\n    DESCRIPTION\n        \" This object
    specifies ring cadence 6 (a user-defined\n          field).\n          The value
    of this MIB object MUST NOT persist across MTA\n          reboots.\"\n    ::=
    { pktcSigDevObjects 11 }\n"
  - "pktcSigDevR7Cadence     OBJECT-TYPE\n    SYNTAX       PktcRingCadence\n    MAX-ACCESS
    \  read-write\n    STATUS       current\n    DESCRIPTION\n        \" This object
    specifies ring cadence 7 (a user-defined\n          field).\n          The value
    of this MIB object MUST NOT persist across MTA\n          reboots.\"\n    ::=
    { pktcSigDevObjects 12 }\n"
  - "pktcSigDevRgCadence     OBJECT-TYPE\n    SYNTAX       PktcRingCadence\n    MAX-ACCESS
    \  read-write\n    STATUS       current\n    DESCRIPTION\n        \" This object
    specifies ring cadence rg (a user-defined\n          field).\n          The value
    of this MIB object MUST NOT persist across MTA\n          reboots.\"\n    ::=
    { pktcSigDevObjects 13 }\n"
  - "pktcSigDevRsCadence     OBJECT-TYPE\n    SYNTAX       PktcRingCadence\n    MAX-ACCESS
    \  read-write\n    STATUS       current\n    DESCRIPTION\n        \" This object
    specifies ring cadence rs (a user-defined\n          field).  The MTA MUST reject
    any attempt to make this object\n          repeatable.\n          The value of
    this MIB object MUST NOT persist across MTA\n          reboots.\"\n    ::= { pktcSigDevObjects
    14 }\n"
  - "pktcSigDefCallSigDscp  OBJECT-TYPE\n    SYNTAX      Dscp  -- RFC 3289: DIFFSERV-DSCP-TC\n
    \   MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"
    The default value used in the IP header for setting the\n          Differentiated
    Services Code Point (DSCP) value for call\n          signaling.\n          The
    value of this MIB object MUST NOT persist across MTA\n          reboots.\"\n    DEFVAL
    { 0 }\n    ::= { pktcSigDevObjects 15 }\n"
  - "pktcSigDefMediaStreamDscp  OBJECT-TYPE\n    SYNTAX      Dscp  -- RFC 3289: DIFFSERV-DSCP-TC\n
    \   MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"
    This object contains the default value used in the IP\n          header for setting
    the Differentiated Services Code Point\n          (DSCP) value for media stream
    packets.  The MTA MUST NOT\n          update this object with the value supplied
    by the CMS in\n          the NCS messages (if present).  Any currently active\n
    \         connections are not affected by updates to this object.\n          When
    the value of this object is updated by SNMP, the MTA\n          MUST use the new
    value as a default starting only from\n          new connections.\n          The
    value of this MIB object MUST NOT persist across MTA\n          reboots.\"\n    DEFVAL
    { 0 }\n    ::= { pktcSigDevObjects 16 }\n"
  - '--

    '
  - '-- pktcSigCapabilityTable - This table defines the valid signaling

    '
  - '-- types supported by this MTA.

    '
  - '--

    '
  - "pktcSigCapabilityTable    OBJECT-TYPE\n    SYNTAX        SEQUENCE OF PktcSigCapabilityEntry\n
    \   MAX-ACCESS    not-accessible\n    STATUS        current\n    DESCRIPTION\n
    \       \" This table describes the signaling types supported by this\n          MTA.\"\n
    \   ::= { pktcSigDevObjects 17 }\n"
  - "pktcSigCapabilityEntry    OBJECT-TYPE\n    SYNTAX        PktcSigCapabilityEntry\n
    \   MAX-ACCESS    not-accessible\n    STATUS        current\n    DESCRIPTION\n
    \       \" Entries in pktcMtaDevSigCapabilityTable - list of\n          supported
    signaling types, versions, and vendor extensions\n          for this MTA.  Each
    entry in the list provides for one\n          signaling type and version combination.
    \ If the device\n          supports multiple versions of the same signaling type,
    it\n          will require multiple entries.\"\n    INDEX { pktcSigCapabilityIndex
    }\n    ::= { pktcSigCapabilityTable 1 }\n"
  - "PktcSigCapabilityEntry  ::= SEQUENCE {\n    pktcSigCapabilityIndex             Unsigned32,\n
    \   pktcSigCapabilityType              PktcSigType,\n    pktcSigCapabilityVersion
    \          SnmpAdminString,\n    pktcSigCapabilityVendorExt         SnmpAdminString\n
    \   }\n"
  - "pktcSigCapabilityIndex       OBJECT-TYPE\n    SYNTAX        Unsigned32 (1..255)\n
    \   MAX-ACCESS    not-accessible\n    STATUS        current\n    DESCRIPTION\n
    \       \" The index value that uniquely identifies an entry in the\n          pktcSigCapabilityTable.\"\n
    \   ::= { pktcSigCapabilityEntry 1 }\n"
  - "pktcSigCapabilityType      OBJECT-TYPE\n    SYNTAX        PktcSigType\n    MAX-ACCESS
    \   read-only\n    STATUS        current\n    DESCRIPTION\n        \" This object
    identifies the type of signaling used.  This\n          value has to be associated
    with a single signaling\n          version.\"\n    ::= { pktcSigCapabilityEntry
    2 }\n"
  - "pktcSigCapabilityVersion      OBJECT-TYPE\n    SYNTAX        SnmpAdminString\n
    \   MAX-ACCESS    read-only\n    STATUS        current\n    DESCRIPTION\n        \"
    Provides the version of the signaling type - reference\n          pktcSigCapabilityType.
    \ Examples would be 1.0 or 2.33 etc.\"\n    ::= { pktcSigCapabilityEntry 3 }\n"
  - "pktcSigCapabilityVendorExt      OBJECT-TYPE\n    SYNTAX        SnmpAdminString\n
    \   MAX-ACCESS    read-only\n    STATUS        current\n    DESCRIPTION\n        \"
    The vendor extension allows vendors to provide a list of\n          additional
    capabilities.\n          The syntax for this MIB object in ABNF ([RFC5234]) is\n
    \         specified to be zero or more occurrences of vendor\n          extensions,
    as follows:\n           pktcSigCapabilityVendorExt  = *(vendor-extension)\n           vendor-extension
    = (ext symbol alphanum) DQUOTE ; DQUOTE\n           ext      = DQUOTE %x58 DQUOTE\n
    \          symbol   = (DQUOTE %x2D DQUOTE)/(DQUOTE %x2D DQUOTE)\n           alphanum
    = 1*6(ALPHA/DIGIT)\n        \"\n    ::= { pktcSigCapabilityEntry 4 }\n"
  - "pktcSigDefNcsReceiveUdpPort  OBJECT-TYPE\n    SYNTAX      InetPortNumber (1025..65535)\n
    \   MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"
    This object contains the MTA User Datagram Protocol (UDP)\n          receive port
    that is being used for NCS call signaling.\n          This object should only
    be changed by the configuration\n          file.\n          Unless changed via
    configuration, this MIB object MUST\n          reflect a value of '2427'.\"\n
    \   REFERENCE\n        \"PacketCable NCS Specification\"\n    ::= { pktcSigDevObjects
    18 }\n"
  - "pktcSigPowerRingFrequency    OBJECT-TYPE\n    SYNTAX       INTEGER {\n                 f20Hz(1),\n
    \                f25Hz(2),\n                 f33Point33Hz(3),\n                 f50Hz(4),\n
    \                f15Hz(5),\n                 f16Hz(6),\n                 f22Hz(7),\n
    \                f23Hz(8),\n                 f45Hz(9)\n    }\n    MAX-ACCESS   read-only\n
    \   STATUS       current\n    DESCRIPTION\n        \" This object must only be
    provided via the configuration\n          file during the provisioning process.
    \ The power ring\n          frequency is the frequency at which the sinusoidal
    voltage\n          must travel down the twisted pair to make terminal\n          equipment
    ring.  Different countries define different\n          electrical characteristics
    to make terminal equipment\n          ring.\n          The f20Hz setting corresponds
    to a power ring frequency\n          of 20 Hertz.  The f25Hz setting corresponds
    to a power ring\n          frequency of 25 Hertz.  The f33Point33Hz setting\n
    \         corresponds to a power ring frequency of 33.33 Hertz.  The\n          f50Hz
    setting corresponds to a power ring frequency of 50\n          Hertz.  The f15Hz
    setting corresponds to a power ring\n          frequency of 15 Hertz.  The f16Hz
    setting corresponds to a\n          power ring frequency of 16 Hertz.  The f22Hz
    setting\n          corresponds to a power ring frequency of 22 Hertz.  The\n          f23Hz
    setting corresponds to a power ring frequency of 23\n          Hertz.  The f45Hz
    setting corresponds to a power ring\n          frequency of 45 Hertz.\"\n    REFERENCE\n
    \         \"ETSI-EN-300-001\"\n    ::= { pktcSigDevObjects 19 }\n"
  - "pktcSigPulseSignalTable    OBJECT-TYPE\n    SYNTAX       SEQUENCE OF PktcSigPulseSignalEntry\n
    \   MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n        \"
    The Pulse signal table defines the pulse signal operation.\n          There are
    nine types of international pulse signals,\n          with each signal having
    a set of provisionable parameters.\n          The values of the MIB objects in
    this table take effect\n          only if these parameters are not defined via
    signaling, in\n          which case, the latter determines the values of the\n
    \         parameters.  The MIB objects in this table do not persist\n          across
    MTA reboots.\"\n    REFERENCE\n        \"ETSI-TS-101-909-4 Specification\"\n    ::=
    { pktcSigDevObjects 20 }\n"
  - "pktcSigPulseSignalEntry    OBJECT-TYPE\n    SYNTAX       PktcSigPulseSignalEntry\n
    \   MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n        \"
    This object defines the set of parameters associated with\n          each particular
    value of pktcSigPulseSignalType.  Each\n          entry in the pktcSigPulseSignalTable
    is indexed by the\n          pktcSigPulseSignalType object.\n          The conceptual
    rows MUST NOT persist across MTA reboots.\"\n    INDEX { pktcSigPulseSignalType
    }\n    ::= { pktcSigPulseSignalTable 1 }\n"
  - "PktcSigPulseSignalEntry ::= SEQUENCE {\n        pktcSigPulseSignalType              INTEGER,\n
    \       pktcSigPulseSignalFrequency         INTEGER,\n        pktcSigPulseSignalDbLevel
    \          TenthdBm,\n        pktcSigPulseSignalDuration          Unsigned32,\n
    \       pktcSigPulseSignalPulseInterval     Unsigned32,\n        pktcSigPulseSignalRepeatCount
    \      Unsigned32\n"
  - '}

    '
  - "pktcSigPulseSignalType    OBJECT-TYPE\n    SYNTAX       INTEGER\n                 {\n
    \                    initialRing(1),\n                     pulseLoopClose(2),\n
    \                    pulseLoopOpen(3),\n                     enableMeterPulse(4),\n
    \                    meterPulseBurst(5),\n                     pulseNoBattery(6),\n
    \                    pulseNormalPolarity(7),\n                     pulseReducedBattery(8),\n
    \                    pulseReversePolarity(9)\n                 }\n    MAX-ACCESS
    \  not-accessible\n    STATUS       current\n    DESCRIPTION\n        \"There
    are nine types of international pulse signals.  These\n         signals are defined
    as follows:\n         initial ring\n         pulse loop close\n         pulse
    loop open\n         enable meter pulse\n         meter pulse burst\n         pulse
    no battery\n         pulse normal polarity\n         pulse reduced battery\n         pulse
    reverse polarity\"\n    REFERENCE\n        \"ETSI-EN-300-324-1 Specification\"\n
    \   ::= { pktcSigPulseSignalEntry 1 }\n"
  - "pktcSigPulseSignalFrequency    OBJECT-TYPE\n    SYNTAX       INTEGER {\n                 twentyfive(1),\n
    \                twelvethousand(2),\n                 sixteenthousand(3)\n    }\n
    \   MAX-ACCESS   read-write\n    STATUS       current\n    DESCRIPTION\n        \"
    This object is only applicable to the initialRing,\n          enableMeterPulse,
    and meterPulseBurst signal types.  This\n          object identifies the frequency
    of the generated signal.\n          The following table defines the default values
    for this\n          object depending on signal type:\n          pktcSigPulseSignalType
    \    Default\n          initialRing                25\n          enableMeterPulse
    \          16000\n          meterPulseBurst            16000\n          The value
    of twentyfive MUST only be used for the\n          initialRing signal type.  The
    values of twelvethousand and\n          sixteenthousand MUST only be used for
    enableMeterPulse and\n          meterPulseBurst signal types.  An attempt to set
    this\n          object while the value of pktcSigPulseSignalType is not\n          initialRing,
    enableMeterPulse, or meterPulseBurst will\n          result in an 'inconsistentValue'
    error.\"\n    REFERENCE\n        \"ETSI-EN-300-001 Specification\"\n         ::=
    { pktcSigPulseSignalEntry 2}\n"
  - "pktcSigPulseSignalDbLevel    OBJECT-TYPE\n    SYNTAX       TenthdBm (-350..0)\n
    \   UNITS        \"1/10 of a dBm\"\n    MAX-ACCESS   read-write\n    STATUS       current\n
    \   DESCRIPTION\n        \" This object is only applicable to the enableMeterPulse
    and\n          meterPulseBurst signal types.  This is the decibel level\n          for
    each frequency at which tones could be generated at\n          the a and b terminals
    (TE connection point).  An attempt to\n          set this object while the value
    of pktcSigPulseSignalType\n          is not enableMeterPulse or meterPulseBurst
    will result in\n          an 'inconsistentValue' error.\"\n    REFERENCE\n        \"ETSI-EN-300-001
    Specification\"\n    DEFVAL { -135 }\n    ::={pktcSigPulseSignalEntry 3 }\n"
  - "pktcSigPulseSignalDuration    OBJECT-TYPE\n    SYNTAX       Unsigned32 (0..5000)\n
    \   UNITS        \"Milliseconds\"\n    MAX-ACCESS   read-write\n    STATUS       current\n
    \   DESCRIPTION\n        \" This object specifies the pulse duration for each\n
    \         signal type.  In addition, the MTA must accept the values\n          in
    the incremental steps specific for each signal type.\n          The following
    table defines the default values and the\n          incremental steps for this
    object depending on the signal\n          type:\n          pktcSigPulseSignaltype
    \ Default (ms)   Increment (ms)\n          initialRing                 200             50\n
    \         pulseLoopClose              200             10\n          pulseLoopOpen
    \              200             10\n          enableMeterPulse            150             10\n
    \         meterPulseBurst             150             10\n          pulseNoBattery
    \             200             10\n          pulseNormalPolarity         200             10\n
    \         pulseReducedBattery         200             10\n          pulseReversePolarity
    \       200             10\n          An attempt to set this object to a value
    that does not\n          fall on one of the increment boundaries, or on the wrong\n
    \         increment boundary for the specific signal type, will\n          result
    in an 'inconsistentValue' error.\"\n    REFERENCE\n        \"ETSI-EN-300-324-1
    Specification\"\n         ::= {pktcSigPulseSignalEntry 4 }\n"
  - "pktcSigPulseSignalPulseInterval     OBJECT-TYPE\n    SYNTAX       Unsigned32
    (0..5000)\n    UNITS        \"Milliseconds\"\n    MAX-ACCESS   read-write\n    STATUS
    \      current\n    DESCRIPTION\n        \" This object specifies the repeat interval,
    or the period,\n          for each signal type.  In addition, the MTA must accept\n
    \         the values in the incremental steps specific for each\n          signal
    type.  The following table defines the default\n          values and the incremental
    steps for this object, depending\n          on the signal type:\n          pktcSigPulseSignaltype
    \ Default (ms)   Increment (ms)\n          initialRing                 200             50\n
    \         pulseLoopClose             1000             10\n          pulseLoopOpen
    \             1000             10\n          enableMeterPulse           1000             10\n
    \         meterPulseBurst            1000             10\n          pulseNoBattery
    \            1000             10\n          pulseNormalPolarity        1000             10\n
    \         pulseReducedBattery        1000             10\n          pulseReversePolarity
    \      1000             10\n          An attempt to set this object to a value
    that does not\n          fall on one of the increment boundaries, or on the wrong\n
    \         increment boundary for the specific signal type, will\n          result
    in an 'inconsistentValue' error.\"\n    REFERENCE\n        \"ETSI-EN-300-324-1
    Specification\"\n         ::= { pktcSigPulseSignalEntry 5}\n"
  - "pktcSigPulseSignalRepeatCount    OBJECT-TYPE\n    SYNTAX       Unsigned32 (1..50)\n
    \   MAX-ACCESS   read-write\n    STATUS       current\n    DESCRIPTION\n        \"
    This object specifies how many times to repeat a pulse.\n          This object
    is not used by the enableMeterPulse signal\n          type, and in that case,
    the value is irrelevant.  The\n          following table defines the default values
    and the valid\n          ranges for this object, depending on the signal type:\n
    \         pktcSigPulseSignaltype  Default   Range\n          initialRing                1
    \      1-5\n          pulseLoopClose             1       1-50\n          pulseLoopOpen
    \             1       1-50\n          enableMeterPulse      (any value)(but not
    used)\n          meterPulseBurst            1       1-50\n          pulseNoBattery
    \            1       1-50\n          pulseNormalPolarity        1       1-50\n
    \         pulseReducedBattery        1       1-50\n          pulseReversePolarity
    \      1       1-50\n          An attempt to set this object to a value that does
    not\n          fall within the range for the specific\n          signal type will
    result in an 'inconsistentValue' error.\"\n    ::={ pktcSigPulseSignalEntry 6
    }\n"
  - "pktcSigDevCidMode    OBJECT-TYPE\n    SYNTAX       INTEGER {\n                 duringRingingETS(1),\n
    \                dtAsETS(2),\n                 rpAsETS(3),\n                 lrAsETS(4),\n
    \                lrETS(5)\n                 }\n    MAX-ACCESS read-write\n    STATUS
    current\n    DESCRIPTION\n        \" For on-hook caller id, pktcSigDevCidMode
    selects the method\n          for representing and signaling caller identification.
    \ For\n          the duringRingingETS method, the Frequency Shift Keying\n          (FSK)
    or the Dual-Tone Multi-Frequency (DTMF) containing\n          the caller identification
    information is sent between the\n          first and second ring pattern.\n          For
    the dtAsETS,rpAsETS, lrAsETS and lrETS\n          methods, the FSK or DTMF containing
    the caller id\n          information is sent before the first ring pattern.\n
    \         For the dtAsETS method, the FSK or DTMF is sent after the\n          Dual
    Tone Alert Signal.  For the rpAsETS method, the FSK or\n          DTMF is sent
    after a Ring Pulse.\n          For the lrAsETS method, the Line Reversal occurs
    first,\n          then the Dual Tone Alert Signal, and, finally, the FSK or\n
    \         DTMF is sent.\n          For the lrETS method, the Line Reversal occurs
    first,\n          then the FSK or DTMF is sent.\n          The value of this MIB
    object MUST NOT persist across MTA\n          reboots.\"\n    DEFVAL { rpAsETS}\n
    \   ::= {pktcSigDevObjects 21 }\n"
  - "pktcSigDevCidAfterRing     OBJECT-TYPE\n    SYNTAX       Unsigned32 (0|50..2000)\n
    \   UNITS        \"Milliseconds\"\n    MAX-ACCESS   read-write\n    STATUS       current\n
    \   DESCRIPTION\n        \" This object specifies the delay between the end of
    first\n          ringing pattern and the start of the transmission of the\n          FSK
    or DTMF containing the caller id information.  It is\n          only used when
    pktcSigDevCidMode is set to a value of\n          'duringRingingETS'.\n          The
    following table defines the default values\n          for this MIB object, depending
    on the signal type\n         (pktcSigDevCidMode), and MUST be followed:\n          Value
    of pktcSigDevCidMode       Default value\n          duringringingETS                 550
    ms\n          dtAsETS                          any value (not used)\n          rpAsETS
    \                         any value (not used)\n          lrAsETS                          any
    value (not used)\n          lrETS                            any value (not used)\n
    \         An attempt to set this object while the value of\n          pktcSigDevCidMode
    is not duringringingETS will result in\n          an 'inconsistentValue' error.\n
    \         The value of this MIB object MUST NOT persist across MTA\n          reboots.\"\n
    \   REFERENCE\n        \"ETSI-EN-300-659-1 Specification\"\n    DEFVAL { 550 }\n
    \   ::= {pktcSigDevObjects 22 }\n"
  - "pktcSigDevCidAfterDTAS    OBJECT-TYPE\n    SYNTAX       Unsigned32 (0|45..500)\n
    \   UNITS        \"Milliseconds\"\n    MAX-ACCESS   read-write\n    STATUS       current\n
    \   DESCRIPTION\n        \" This object specifies the delay between the end of
    the\n          Dual Tone Alert Signal (DT-AS) and the start of the\n          transmission
    of the FSK or DTMF containing the caller id\n          information.  This object
    is only used when\n          pktcSigDevCidMode is set to a value of 'dtAsETS'
    or\n          'lrAsETS'.\n          The following table defines the default values\n
    \         for this MIB object, depending on the signal type\n         (pktcSigDevCidMode),
    and MUST be followed:\n          Value of pktcSigDevCidMode       Default value\n
    \         duringringingETS                 any value (not used)\n          dtAsETS
    \                         50 ms\n          rpAsETS                          any
    value (not used)\n          lrAsETS                          50 ms\n          lrETS
    \                           any value (not used)\n          An attempt to set
    this object while the value of\n          pktcSigDevCidMode is not 'dtAsETS' or
    'lrAsETS' will\n          result in an 'inconsistentValue' error.\n          The
    value of this MIB object MUST NOT persist across MTA\n          reboots.\"\n    REFERENCE\n
    \       \"ETSI-EN-300-659-1 Specification\"\n    DEFVAL { 50 }\n    ::= {pktcSigDevObjects
    23 }\n"
  - "pktcSigDevCidAfterRPAS    OBJECT-TYPE\n    SYNTAX       Unsigned32 (0|500..800)\n
    \   UNITS        \"Milliseconds\"\n    MAX-ACCESS   read-write\n    STATUS       current\n
    \   DESCRIPTION\n        \" This object specifies the delay between the end of
    the\n          Ring Pulse Alert Signal (RP-AS) and the start of the\n          transmission
    of the FSK or DTMF containing the caller id\n          information.  This MIB
    object is only used when\n          pktcSigDevCidMode is set to a value of 'rpAsETS'.\n
    \         The following table defines the default values\n          for this MIB
    object, depending on the signal type\n         (pktcSigDevCidMode), and MUST be
    followed:\n          Value of pktcSigDevCidMode       Default value\n          duringringingETS
    \                any value  (not used)\n          dtAsETS                          any
    value  (not used)\n          rpAsETS                          650 ms\n          lrAsETS
    \                         any value  (not used)\n          lrETS                            any
    value  (not used)\n          An attempt to set this object while the value of\n
    \         pktcSigDevCidMode is not 'rpAsETS' will result in an\n          'inconsistentValue'
    error.\n          The value of this MIB object MUST NOT persist across MTA\n          reboots.\"\n
    \   REFERENCE\n        \"ETSI-EN-300-659-1 Specification\"\n    DEFVAL { 650 }\n
    \   ::= {pktcSigDevObjects 24 }\n"
  - "pktcSigDevRingAfterCID    OBJECT-TYPE\n    SYNTAX       Unsigned32 (0|50..500)\n
    \   UNITS        \"Milliseconds\"\n    MAX-ACCESS   read-write\n    STATUS       current\n
    \   DESCRIPTION\n        \" This object specifies the delay between the end of
    the\n          complete transmission of the FSK or DTMF containing the\n          caller
    id information and the start of the first ring\n          pattern.  It is only
    used when pktcSigDevCidMode is\n          set to a value of 'dtAsETS', 'rpAsETS',
    'lrAsETS' or\n          'lrETS'.\n          The following table defines the default
    values\n          for this MIB object, depending on the signal type\n         (pktcSigDevCidMode),
    and MUST be followed:\n          Value of pktcSigDevCidMode       Default value\n
    \         duringringingETS                 any value  (not used)\n          dtAsETS
    \                         250 ms\n          rpAsETS                          250
    ms\n          lrAsETS                          250 ms\n          lrETS                            250
    ms\n          An attempt to set this object while the value of\n          pktcSigDevCidMode
    is not 'dtAsETS', 'rpAsETS',\n          'lrAsETS', or 'lrETS' will result in an
    'inconsistent\n          value' error.\n          The value of this MIB object
    MUST NOT persist across MTA\n          reboots.\"\n    REFERENCE\n        \"ETSI-EN-300-659-1
    Specification\"\n    DEFVAL { 250 }\n    ::= {pktcSigDevObjects 25 }\n"
  - "pktcSigDevCidDTASAfterLR    OBJECT-TYPE\n    SYNTAX       Unsigned32 (50..655)\n
    \   UNITS        \"Milliseconds\"\n    MAX-ACCESS   read-write\n    STATUS       current\n
    \   DESCRIPTION\n        \" This object specifies the delay between the end of
    the\n          Line Reversal and the start of the Dual Tone Alert Signal\n          (DT-AS).
    \ This object is only used when pktcSigDevCidMode\n          is set to a value
    of 'lrAsETS'.\n          The following table defines the default values\n          for
    this MIB object, depending on the signal type\n         (pktcSigDevCidMode), and
    MUST be followed:\n          Value of pktcSigDevCidMode       Default value\n
    \         duringringingETS                 any value  (not used)\n          dtAsETS
    \                         any value  (not used)\n          rpAsETS                          any
    value  (not used)\n          lrAsETS                          250 ms\n          lrETS
    \                           any value  (not used)\n          An attempt to set
    this object while the value of\n          pktcSigDevCidMode is not lrAsETS will
    result in an\n          'inconsistentValue' error.\n          The value of this
    MIB object MUST NOT persist across MTA\n          reboots.\"\n    REFERENCE\n
    \       \"ETSI-EN-300-659-1 Specification\"\n    DEFVAL { 250 }\n    ::= {pktcSigDevObjects
    26 }\n"
  - "pktcSigDevVmwiMode    OBJECT-TYPE\n    SYNTAX       INTEGER {\n                 dtAsETS(1),\n
    \                rpAsETS(2),\n                 lrAsETS(3),\n                 osi(4),\n
    \                lrETS(5)\n                 }\n    MAX-ACCESS read-write\n    STATUS
    current\n    DESCRIPTION\n        \" For visual message waiting indicator (VMWI),\n
    \         pktcSigDevVmwiMode selects the alerting signal method.  For\n          the
    dtAsETS, rpAsETS, lrAsETS, osi, and lrETS methods,\n          the FSK containing
    the VMWI information is sent after an\n          alerting signal.\n          For
    the dtAsETS method, the FSK, or DTMF\n          is sent after the Dual Tone Alert
    Signal.  For the rpAsETS\n          method, the FSK or DTMF is sent after a Ring
    Pulse.\n          For the lrAsETS method, the Line Reversal occurs first,\n          then
    the Dual Tone Alert Signal, and, finally, the FSK or\n          DTMF is sent.\n
    \         For the OSI method, the FSK or DTMF is sent after the Open\n          Switching
    Interval.\n          For the lrETS method, the Line Reversal occurs first,\n          then
    the FSK or DTMF is sent.\n          The value of this MIB object MUST NOT persist
    across MTA\n          reboots.\"\n    DEFVAL { rpAsETS }\n    ::= {pktcSigDevObjects
    27 }\n"
  - "pktcSigDevVmwiAfterDTAS    OBJECT-TYPE\n    SYNTAX       Unsigned32 (0|45..500)\n
    \   UNITS        \"Milliseconds\"\n    MAX-ACCESS   read-write\n    STATUS       current\n
    \   DESCRIPTION\n        \" This object specifies the delay between the end of
    the\n          Dual Tone Alert Signal (DT-AS) and the start of the\n          transmission
    of the FSK or DTMF containing the VMWI\n          information.\n          This
    object is only used when pktcSigDevVmwiMode is\n          set to a value of 'dtAsETS'
    or 'lrAsETS'.\n          The following table defines the default values\n          for
    this MIB object, depending on the signal type\n         (pktcSigDevVmwiMode),
    and MUST be followed:\n          Value of pktcSigDevVmwiMode       Default value\n
    \         dtAsETS                           50 ms\n          rpAsETS                           any
    value  (not used)\n          lrAsETS                           50 ms\n          lrETS
    \                            any value  (not used)\n          An attempt to set
    this object while the value of\n          pktcSigDevVmwiMode is not 'dtAsETS'
    or 'lrAsETS' will\n          result in an 'inconsistentValue' error.\n          The
    value of this MIB object MUST NOT persist across MTA\n          reboots.\"\n    REFERENCE\n
    \       \"ETSI-EN-300-659-1 Specification\"\n    DEFVAL { 50 }\n    ::= {pktcSigDevObjects
    28 }\n"
  - "pktcSigDevVmwiAfterRPAS    OBJECT-TYPE\n    SYNTAX       Unsigned32 (0|500..800)\n
    \   UNITS        \"Milliseconds\"\n    MAX-ACCESS   read-write\n    STATUS       current\n
    \   DESCRIPTION\n        \" This object specifies the delay between the end of
    the\n          Ring Pulse Alert Signal (RP-AS) and the start of the\n          transmission
    of the FSK or DTMF containing the VMWI\n          information.\n          This
    object is only used when pktcSigDevVmwiMode is\n          set to a value of 'rpAsETS'.\n
    \         The following table defines the default values\n          for this MIB
    object, depending on the signal type\n         (pktcSigDevVmwiMode), and MUST
    be followed:\n          Value of pktcSigDevVmwiMode       Default value\n          dtAsETS
    \                          any value  (not used)\n          rpAsETS                           650
    ms\n          lrAsETS                           any value  (not used)\n          lrETS
    \                            any value  (not used)\n          An attempt to set
    this object while the value of\n          pktcSigDevVmwiMode is not 'rpAsETS'
    will result in an\n          'inconsistentValue' error.\n          The value of
    this MIB object MUST NOT persist across MTA\n          reboots.\"\n    REFERENCE\n
    \       \"ETSI-EN-300-659-1 Specification\"\n    DEFVAL { 650 }\n    ::= {pktcSigDevObjects
    29 }\n"
  - "pktcSigDevVmwiDTASAfterLR    OBJECT-TYPE\n    SYNTAX       Unsigned32 (0|50..655)\n
    \   UNITS        \"Milliseconds\"\n    MAX-ACCESS   read-write\n    STATUS       current\n
    \   DESCRIPTION\n        \" This object specifies the delay between the end of
    the\n          Line Reversal and the start of the Dual Tone Alert Signal\n          (DT-AS)
    for VMWI information.  This object is only used\n          when pktcSigDevVmwiMode
    is set to a value of 'lrAsETS'.\n          The following table defines the default
    values\n          for this MIB object, depending on the signal type\n         (pktcSigDevVmwiMode),
    and MUST be followed:\n          Value of pktcSigDevVmwiMode       Default value\n
    \         dtAsETS                           any value  (not used)\n          rpAsETS
    \                          any value  (not used)\n          lrAsETS                           250
    ms\n          lrETS                             any value  (not used)\n          An
    attempt to set this object while the value of\n          pktcSigDevVmwiMode is
    not 'lrAsETS' will result in an\n          'inconsistentValue' error.\n          The
    value of this MIB object MUST NOT persist across MTA\n          reboots.\"\n    REFERENCE\n
    \       \"ETSI-EN-300-659-1 Specification\"\n    DEFVAL { 250 }\n    ::= {pktcSigDevObjects
    30 }\n"
  - "pktcSigDevRingCadenceTable    OBJECT-TYPE\n    SYNTAX       SEQUENCE OF PktcSigDevRingCadenceEntry\n
    \   MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n        \"Cadence
    rings are defined by the telco governing\n         body for each country.  The
    MTA must be able to support\n         various ranges of cadence patterns and cadence
    periods.\n         The MTA will be able to support country-specific\n         provisioning
    of the cadence and idle period.  Each\n         cadence pattern will be assigned
    a unique value ranging\n         from 0-127 (inclusive) corresponding to the value
    of x,\n         where x is the value sent in the cadence ringing (cr)\n         signal
    cr(x), requested per the appropriate NCS\n         message, and defined in the
    E package.  The MTA will derive\n         the cadence periods from the ring cadence
    table entry, as\n         provisioned by the customer.  The MTA is allowed to
    provide\n         appropriate default values for each of the ring cadences.\n
    \        This table only needs to be supported when the MTA\n         implements
    the E package.\"\n    REFERENCE\n        \"ETSI-TS-101-909-4 Specification\"\n
    \   ::= { pktcSigDevObjects 31 }\n"
  - "pktcSigDevRingCadenceEntry    OBJECT-TYPE\n    SYNTAX       PktcSigDevRingCadenceEntry\n
    \   MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n        \"
    Each entry in this row corresponds to a ring cadence\n          that is being
    supported by the device.  The conceptual\n          rows MUST NOT persist across
    MTA reboots.\"\n    INDEX { pktcSigDevRingCadenceIndex }\n    ::= { pktcSigDevRingCadenceTable
    1 }\n"
  - "PktcSigDevRingCadenceEntry ::= SEQUENCE {\n        pktcSigDevRingCadenceIndex
    \      Unsigned32,\n        pktcSigDevRingCadence            PktcRingCadence\n
    \   }\n"
  - "pktcSigDevRingCadenceIndex    OBJECT-TYPE\n    SYNTAX       Unsigned32 (0..127)\n
    \   MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n        \"
    A unique value ranging from 0 to 127 that corresponds to the\n          value
    sent by the LE based on country-specific cadences,\n          one row per cadence
    cycle.  In any given system\n          implementation for a particular country,
    it is anticipated\n          that a small number of ring cadences will be in use.
    \ Thus,\n          this table most likely will not be populated to its full\n
    \         size.\"\n    ::= { pktcSigDevRingCadenceEntry 1 }\n"
  - "pktcSigDevRingCadence    OBJECT-TYPE\n    SYNTAX       PktcRingCadence\n    MAX-ACCESS
    \  read-write\n    STATUS       current\n    DESCRIPTION\n        \"This is the
    Ring Cadence.\"\n    ::= { pktcSigDevRingCadenceEntry 2 }\n"
  - "pktcSigDevToneTable    OBJECT-TYPE\n    SYNTAX       SEQUENCE OF PktcSigDevToneEntry\n
    \   MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n        \"
    The Tone Table defines the composition of tones and\n          various tone operations.\n
    \         The definition of the tones callWaiting1 through\n          callWaiting4
    in this table MUST only contain the\n          audible tone itself; the delay
    between tones or the value\n          of the tone repeat count are not applicable
    for the call\n          waiting tones.\n          The delay between tones or the
    repeat count is controlled\n          by the objects pktcSigEndPntConfigCallWaitingDelay
    and\n          pktcSigEndPntConfigCallWaitingMaxRep.  If the\n          pktcSigDevToneType
    is set to either of the values\n          callWaiting1, callWaiting2, callWaiting3,
    or callWaiting4,\n          then the value of the pktcSigDevToneWholeToneRepeatCount\n
    \         object indicates that the particular frequency group is\n          applicable,
    as a repeatable part of the tone, based on the\n          value of the MIB object\n
    \         pktcSigDevToneWholeToneRepeatCount.\n          The MTA MUST make sure
    that, after the provisioning\n          cycle, the table is fully populated (i.e.,
    for each\n          possible index, an entry MUST be defined) using\n          reasonable
    defaults for each row that was not defined\n          by the provisioning information
    delivered via MTA\n          Configuration.\n          The frequency composition
    of each tone is defined by the\n          pktcSigDevMultiFreqToneTable.  For each
    tone type defined\n          in pktcSigDevToneTable, the MTA MUST populate at
    least\n          one entry in the pktcSigDevMultiFreqToneTable.\n          For
    each particular value of pktcSigDevToneType, the\n          pktcSigDevToneTable
    table can define non-repeating and\n          repeating groups of the frequencies
    defined by the\n          pktcSigDevMultiFreqToneTable, such that each group is\n
    \         represented by the set of the consecutive rows\n          (frequency
    group) in the pktcSigDevMultiFreqToneTable.\n          Objects in this table do
    not persist across MTA reboots.\n          For tones with multiple frequencies
    refer to the MIB table\n          pktcSigDevMultiFreqToneTable.\"\n    REFERENCE\n
    \       \"PacketCable NCS Specification, ETSI-TS-101-909-4\n         Specification.\"\n
    \   ::= { pktcSigDevObjects 32 }\n"
  - "pktcSigDevToneEntry    OBJECT-TYPE\n    SYNTAX       PktcSigDevToneEntry\n    MAX-ACCESS
    \  not-accessible\n    STATUS       current\n    DESCRIPTION\n        \" The different
    tone types that can be provisioned based on\n          country-specific needs.\n
    \         Each entry contains the tone generation parameters for\n          a
    specific frequency group of the specific Tone Type.\n          The different parameters
    can be provisioned via MTA\n          configuration based on country specific
    needs.\n          An MTA MUST populate all entries of this table for each\n          tone
    type.\"\n    INDEX { pktcSigDevToneType, pktcSigDevToneFreqGroup }\n    ::= {
    pktcSigDevToneTable 1 }\n"
  - "PktcSigDevToneEntry ::= SEQUENCE {\n    pktcSigDevToneType                      INTEGER,\n
    \   pktcSigDevToneFreqGroup                 Unsigned32,\n    pktcSigDevToneFreqCounter
    \              Unsigned32,\n    pktcSigDevToneWholeToneRepeatCount      Unsigned32,\n
    \   pktcSigDevToneSteady                    TruthValue\n    }\n"
  - "pktcSigDevToneType        OBJECT-TYPE\n    SYNTAX       INTEGER {\n                 busy(1),\n
    \                confirmation(2),\n                 dial(3),\n                 messageWaiting(4),\n
    \                offHookWarning(5),\n                 ringBack(6),\n                 reOrder(7),\n
    \                stutterdial(8),\n                 callWaiting1(9),\n                 callWaiting2(10),\n
    \                callWaiting3(11),\n                 callWaiting4(12),\n                 alertingSignal(13),\n
    \                specialDial(14),\n                 specialInfo(15),\n                 release(16),\n
    \                congestion(17),\n                 userDefined1(18),\n                 userDefined2(19),\n
    \                userDefined3(20),\n                 userDefined4(21)\n                 }\n
    \   MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n        \"A
    unique value that will correspond to the different\n         tone types.  These
    tones can be provisioned based on\n         country-specific needs.  This object
    defines the type\n         of tone being accessed.\n         The alertingSignal,
    specialDial, specialInfo, release,\n         congestion, userDefined1, userDefined2,
    userDefined3,\n         and userDefined4 tone types are used in\n         the
    E line package.\"\n    ::= { pktcSigDevToneEntry 1 }\n"
  - "pktcSigDevToneFreqGroup  OBJECT-TYPE\n       SYNTAX       Unsigned32(1..4)\n
    \      MAX-ACCESS   not-accessible\n       STATUS       current\n       DESCRIPTION\n
    \          \"This MIB object represents the Tone Sequence reference\n           of
    a multi-sequence tone.\"\n       ::={ pktcSigDevToneEntry 2}\n"
  - "pktcSigDevToneFreqCounter OBJECT-TYPE\n       SYNTAX       Unsigned32(1..8)\n
    \      MAX-ACCESS   read-only\n       STATUS       current\n       DESCRIPTION\n
    \          \"This MIB object represents the number of consecutive\n           multi-frequency
    tones for the particular tone type in\n           the multi-frequency table (pktcSigDevMultiFreqToneTable).\n
    \          Such a sequence of the consecutive multi-frequency tones\n           forms
    the tone group for the particular tone type in the\n           pktcSigDevToneTable.\"\n
    \      ::={ pktcSigDevToneEntry 3}\n"
  - "pktcSigDevToneWholeToneRepeatCount      OBJECT-TYPE\n    SYNTAX       Unsigned32
    (0..5000)\n    MAX-ACCESS   read-only\n    STATUS       current\n    DESCRIPTION\n
    \       \"This is the repeat count, which signifies how many times\n         to
    repeat the entire on-off cadence sequence.  Setting this\n         object may
    result in a cadence duration longer or shorter\n         than the overall signal
    duration specified by the time out\n         (TO) object for a particular signal.
    \ If the repeat count\n         results in a longer tone duration than the signal
    duration\n         specified by the TO, the tone duration defined by the\n         TO
    object for a particular signal always represents\n         the overall signal
    duration for a tone.  In this case, the\n         tone duration repeat count will
    not be fully exercised, and\n         the desired tone duration will be truncated
    per the TO\n         setting.  If the repeat count results in a shorter tone\n
    \        duration than the signal duration specified by the TO, the\n         tone
    duration defined by the repeat count takes precedence\n         over the TO and
    will end the signal event.  In this case,\n         the TO represents a time not
    to be exceeded for the signal.\n         It is recommended to ensure proper telephony
    signaling so that\n         the TO duration setting should always be longer than
    the\n         desired repeat count-time duration.\"\n    ::={ pktcSigDevToneEntry
    4 }\n"
  - "pktcSigDevToneSteady    OBJECT-TYPE\n    SYNTAX       TruthValue\n    MAX-ACCESS
    \  read-only\n    STATUS       current\n    DESCRIPTION\n        \"This MIB object
    represents the steady tone status.  A value\n         of 'true(1)' indicates that
    the steady tone is applied, and\n         a value of 'false(2)' indicates otherwise.\n
    \        Devices must play out the on-off cadence sequence for\n         the number
    of times indicated by the MIB object\n         'pktcSigDevToneWholeToneRepeatCount'
    prior to applying the\n         last tone steadily, indefinitely.  If the MIB
    table\n         'pktcSigDevToneTable' contains multiple rows with this\n         Object
    set to a value of 'true(1)', the steady tone is\n         applied to the last
    repeating frequency group of the tone.\n         Setting this MIB object may result
    in a tone duration that is\n         longer or shorter than the overall signal
    duration\n         specified by the time out (TO) MIB object for a particular\n
    \        signal.  If the repeat count results in a longer tone\n         duration
    than the signal duration specified by the TO, the\n         tone duration defined
    by the TO object for a particular\n         signal always represents the overall
    signal duration for a\n         tone.  In this case, the tone duration repeat
    count will\n         not be fully exercised, and the desired tone duration will\n
    \        be truncated per the TO setting.  If the repeat count\n         results
    in a shorter tone duration than the signal duration\n         specified by the
    TO, the tone duration defined by the\n         repeat count takes precedence over
    the TO and will end the\n         signal event.  In this case, the TO represents
    a time not to\n         be exceeded for the signal.\n         It is recommended
    to ensure proper telephony signaling that\n         The TO duration setting should
    always be longer than the\n         desired repeat count-time duration, plus the
    desired maximum\n         steady tone period.\"\n    ::={ pktcSigDevToneEntry
    5 }\n   pktcSigDevMultiFreqToneTable    OBJECT-TYPE\n       SYNTAX       SEQUENCE
    OF PktcSigDevMultiFreqToneEntry\n       MAX-ACCESS   not-accessible\n       STATUS
    \      current\n       DESCRIPTION\n           \" This MIB table defines the characteristics
    of tones\n             with multiple frequencies.  The constraints imposed\n             on
    the tones by the MIB table pktcSigDevToneTable\n             need to be considered
    for MIB objects in this table\n             as well.\n             The MTA MUST
    populate the corresponding row(s)\n             of the pktcSigDevMultiFreqToneTable
    for each tone\n             defined in the pktcSigDevToneTable.\n             The
    contents of the table may be provisioned via\n             MTA configuration.\"\n
    \      REFERENCE\n           \"PacketCable NCS Specification, ETSI-TS-101-909-4\n
    \           Specification.\"\n       ::= { pktcSigDevObjects 33 }\n   pktcSigDevMultiFreqToneEntry
    \   OBJECT-TYPE\n       SYNTAX       PktcSigDevMultiFreqToneEntry\n       MAX-ACCESS
    \  not-accessible\n       STATUS       current\n       DESCRIPTION\n           \"
    The different tone types with multiple frequencies\n             that can be provisioned
    based on country-specific\n             needs.\"\n       INDEX {pktcSigDevToneType,
    pktcSigDevToneNumber}\n       ::= { pktcSigDevMultiFreqToneTable 1 }\n   PktcSigDevMultiFreqToneEntry
    ::= SEQUENCE {\n         pktcSigDevToneNumber                    Unsigned32,\n
    \        pktcSigDevToneFirstFreqValue            Unsigned32,\n         pktcSigDevToneSecondFreqValue
    \          Unsigned32,\n         pktcSigDevToneThirdFreqValue            Unsigned32,\n
    \        pktcSigDevToneFourthFreqValue           Unsigned32,\n         pktcSigDevToneFreqMode
    \                 INTEGER,\n         pktcSigDevToneFreqAmpModePrtg           Unsigned32,\n
    \        pktcSigDevToneDbLevel                   TenthdBm,\n         pktcSigDevToneFreqOnDuration
    \           Unsigned32,\n         pktcSigDevToneFreqOffDuration           Unsigned32,\n
    \        pktcSigDevToneFreqRepeatCount           Unsigned32\n   }\n   pktcSigDevToneNumber
    OBJECT-TYPE\n       SYNTAX       Unsigned32(1..8)\n       MAX-ACCESS   not-accessible\n
    \      STATUS       current\n       DESCRIPTION\n          \"This MIB object represents
    the frequency reference\n           of a multi-frequency tone.\"\n       ::={
    pktcSigDevMultiFreqToneEntry 1}\n   pktcSigDevToneFirstFreqValue    OBJECT-TYPE\n
    \      SYNTAX       Unsigned32(0..4000)\n       MAX-ACCESS   read-only\n       STATUS
    \      current\n       DESCRIPTION\n         \"This MIB object represents the
    value of the first\n          frequency of a tone type.  A value of zero implies\n
    \         absence of the referenced frequency.\"\n       ::={ pktcSigDevMultiFreqToneEntry
    2}\n   pktcSigDevToneSecondFreqValue    OBJECT-TYPE\n       SYNTAX       Unsigned32(0..4000)\n
    \      MAX-ACCESS   read-only\n       STATUS       current\n       DESCRIPTION\n
    \        \"This MIB object represents the value of the second\n          frequency
    of a tone type.  A value of zero implies\n          absence of the referenced
    frequency.\"\n       ::={ pktcSigDevMultiFreqToneEntry 3}\n   pktcSigDevToneThirdFreqValue
    \   OBJECT-TYPE\n       SYNTAX       Unsigned32(0..4000)\n       MAX-ACCESS   read-only\n
    \      STATUS       current\n       DESCRIPTION\n         \"This MIB object represents
    the value of the third\n          frequency of a tone type.  A value of zero implies\n
    \         absence of the referenced frequency.\"\n       ::={ pktcSigDevMultiFreqToneEntry
    4}\n   pktcSigDevToneFourthFreqValue    OBJECT-TYPE\n       SYNTAX       Unsigned32(0..4000)\n
    \      MAX-ACCESS   read-only\n       STATUS       current\n       DESCRIPTION\n
    \        \"This MIB object represents the value of the fourth\n          frequency
    of a tone type.  A value of zero implies\n          absence of the referenced
    frequency.\"\n       ::={ pktcSigDevMultiFreqToneEntry 5}\n   pktcSigDevToneFreqMode
    OBJECT-TYPE\n       SYNTAX       INTEGER {\n                     firstModulatedBySecond(1),\n
    \                    summation(2)\n                    }\n       MAX-ACCESS   read-only\n
    \      STATUS       current\n       DESCRIPTION\n       \"This MIB object provides
    directive on the\n        modulation or summation of the frequencies\n        involved
    in the tone.\n        It is to be noted that while summation can\n        be done
    without any constraint on the number\n        of frequencies, the modulation (amplitude)\n
    \       holds good only when there are two frequencies\n        (first and second).\n
    \       Thus:\n          - If the mode is set to a value of\n            'firstModulatedBySecond(1)',
    the first frequency\n            MUST be modulated by the second, and the remaining\n
    \           frequencies (third and fourth) ignored.  The\n            percentage
    of amplitude modulation to be applied\n            is defined by the MIB object\n
    \           pktcSigDevToneFreqAmpModePrtg.\n          - If the mode is set to
    a value of\n            'summation(2)', all the frequencies MUST be\n            summed
    without any modulation.\n       \"\n       ::={ pktcSigDevMultiFreqToneEntry 6}\n
    \ pktcSigDevToneFreqAmpModePrtg OBJECT-TYPE\n       SYNTAX       Unsigned32(0..100)\n
    \      MAX-ACCESS   read-only\n       STATUS       current\n       DESCRIPTION\n
    \         \"This MIB object represents the percentage of amplitude\n           modulation
    applied to the second frequency\n           when the MIB object pktcSigDevToneFreqMode
    is\n           set to a value of 'firstModulatedBySecond (1)'.\n           If
    the MIB object pktcSigDevToneFreqMode is set to\n           value of 'summation
    (2)', then this MIB object MUST be\n           ignored.\"\n       ::={ pktcSigDevMultiFreqToneEntry
    7}\n  pktcSigDevToneDbLevel    OBJECT-TYPE\n      SYNTAX       TenthdBm (-250..-110)\n
    \     UNITS        \"1/10 of a dBm\"\n      MAX-ACCESS   read-only\n      STATUS
    \      current\n      DESCRIPTION\n          \"This MIB object contains the decibel
    level for each\n           analog signal (tone) that is locally generated\n           (versus
    in-band supervisory tones) and sourced to\n           the a-b terminals (TE connection
    point).  Each tone\n           in itself may consist of multiple frequencies,
    as\n           defined by the MIB table pktcSigDevMultiFreqToneTable.\n           This
    MIB object reflects the desired level at\n           the Telco (POTS) a-b (T/R)
    terminals, including the\n           effect of any MTA receiver gain (loss).  This
    is required\n           so that locally generated tones are consistent with\n
    \          remotely generated in-band tones at the a-b terminals,\n           consistent
    with user expectations.\n           This MIB object must be set for each tone.\n
    \          When tones are formed by combining multi-frequencies,\n           the
    level of each frequency shall be set so as to result\n           in the tone level
    specified in this object at the a-b\n           (T/R) terminals.\n           The
    wide range of levels for this Object is required\n           to provide signal-generator
    levels across the wide\n           range of gains (losses) -- but does not imply
    the entire\n           range is to be achievable given the range of gains (losses)\n
    \          in the MTA.\"\n    DEFVAL { -120 }\n    ::={ pktcSigDevMultiFreqToneEntry
    8}\n   pktcSigDevToneFreqOnDuration OBJECT-TYPE\n       SYNTAX       Unsigned32(0..5000)\n
    \      UNITS        \"milliseconds\"\n       MAX-ACCESS   read-only\n       STATUS
    \      current\n       DESCRIPTION\n          \"This MIB object represents the
    duration for which the\n           frequency reference corresponding to the tone
    type\n           is turned on.\"\n       ::={ pktcSigDevMultiFreqToneEntry 9}\n
    \  pktcSigDevToneFreqOffDuration OBJECT-TYPE\n       SYNTAX       Unsigned32(0..5000)\n
    \      UNITS        \"milliseconds\"\n       MAX-ACCESS   read-only\n       STATUS
    \      current\n       DESCRIPTION\n          \"This MIB object represents the
    duration for which the\n           frequency reference corresponding to the tone
    type\n           is turned off.\"\n       ::={ pktcSigDevMultiFreqToneEntry 10}\n
    \  pktcSigDevToneFreqRepeatCount OBJECT-TYPE\n       SYNTAX       Unsigned32(0..5000)\n
    \      MAX-ACCESS   read-only\n       STATUS       current\n       DESCRIPTION\n
    \      \"This MIB object indicates the number of times\n       to repeat the cadence
    cycle represented by the\n       on/off durations (refer to the MIB objects\n
    \      pktcSigDevToneFreqOnDuration and\n       pktcSigDevToneFreqOffDuration).\n
    \      Setting this object may result in a tone duration that is\n       longer
    or shorter than the overall signal duration\n       specified by the time out
    (TO) object for the\n       corresponding tone type.  If the value of this MIB\n
    \      Object indicates a longer duration than that\n       specified by the TO,
    the latter overrules the former,\n       and the desired tone duration will be
    truncated according\n       to the TO.\n       However, if the repeat count results
    in a shorter\n       tone duration than the signal duration specified by\n       the
    TO, the tone duration defined by the repeat count\n       takes precedence over
    the TO and will end the signal\n       event.  In this case, the TO represents
    a time not to\n       be exceeded for the signal.  It is recommended, to\n       ensure
    proper telephony signaling, that the TO\n       duration setting should always
    be longer than the\n       desired repeat count-time duration.  A value of zero\n
    \      means the tone sequence is to be played once but not\n       repeated.\"\n
    \      ::={ pktcSigDevMultiFreqToneEntry 11}\n   pktcSigDevCidDelayAfterLR  OBJECT-TYPE\n
    \      SYNTAX       Unsigned32 (300..800)\n       UNITS        \"Milliseconds\"\n
    \      MAX-ACCESS   read-write\n       STATUS       current\n       DESCRIPTION\n
    \          \"This object specifies the delay between the end of the\n            Line
    Reversal and the start of the FSK or DTMF signal.\n            This MIB object
    is used only when pktcSigDevCidMode is\n            set to a value of 'lrETS'.
    \ This timing has a range of\n            300 to 800 ms.\n            The following
    table defines the default values\n            for this MIB object, depending on
    the signal type\n           (pktcSigDevCidMode), and MUST be followed:\n          Value
    of pktcSigDevCidMode       Default value\n            duringringingETS               any
    value  (not used)\n            dtAsETS                        any value  (not
    used)\n            rpAsETS                        any value  (not used)\n            lrAsETS
    \                       any value  (not used)\n            lrETS                          400\n
    \           An attempt to set this object while the value of\n            pktcSigDevCidMode
    is not set to a value of 'lrETS' will\n            result in an 'inconsistentValue'
    error.\n            The value of this MIB object MUST NOT persist across MTA\n
    \           reboots.\"\n       DEFVAL { 400 }\n       ::= {pktcSigDevObjects 34
    }\n   pktcSigDevCidDtmfStartCode OBJECT-TYPE\n       SYNTAX       DtmfCode\n       MAX-ACCESS
    \  read-write\n       STATUS       current\n       DESCRIPTION\n           \"This
    object identifies optional start codes used when\n            the MIB object pktcSigDevCidSigProtocol
    is set\n            to a value of 'dtmf(2)'.\n            Different countries
    define different caller id signaling\n            codes to support caller identification.
    \ When Dual-Tone\n            Multi-Frequency (DTMF) is used, the caller id digits
    are\n            preceded by a 'start code' digit, followed by the digit\n            transmission
    sequence <S1>...<Sn> (where Sx represents\n            the digits 0-9), and terminated
    by the 'end code' digit.\n            For example,\n              <A><S1>...<Sn>
    <D><S1>...<Sn> <B><S1>...<Sn> <C>.\n            The start code for calling number
    delivery may be DTMF\n            'A' or 'D'.  The start code for redirecting
    a number may be\n            DTMF 'D'.  The DTMF code 'B' may be sent by the network\n
    \           as a start code for the transfer of information values,\n            through
    which special events can be indicated to the\n            user.  In some countries,
    the '*' or '#' may be used\n            instead of 'A', 'B', 'C', or 'D'.\n            The
    value of this MIB object MUST NOT persist across MTA\n            reboots.\"\n
    \      REFERENCE\n            \"ETSI-EN-300-659-1 specification\"\n       DEFVAL
    {dtmfcodeA}\n   ::= { pktcSigDevObjects 35 }\n   pktcSigDevCidDtmfEndCode OBJECT-TYPE\n
    \      SYNTAX       DtmfCode\n       MAX-ACCESS   read-write\n       STATUS       current\n
    \      DESCRIPTION\n           \"This object identifies optional end codes used
    when the\n            pktcSigDevCidSigProtocol is set to a value of\n            'dtmf(2)'.\n
    \           Different countries define different caller id signaling\n            protocols
    to support caller identification.  When\n            Dual-Tone Multi-Frequency
    (DTMF) is used, the caller id\n            digits are preceded by a 'start code'
    digit, followed by\n            the digit transmission sequence <S1>...<Sn> (where
    Sx\n            represents the digits 0-9), and terminated by the 'end\n            code'
    digit.\n            For example,\n              <A><S1>...<Sn> <D><S1>...<Sn>
    <B><S1>...<Sn> <C>.\n            The DTMF code 'C' may be sent by the network
    as an\n            end code for the transfer of information values, through\n
    \           which special events can be indicated to the user.  In\n            some
    countries, the '*' or '#' may be used instead of\n            'A', 'B', 'C', or
    'D'.\n            The value of this MIB object MUST NOT persist across MTA\n            reboots.\"\n
    \      REFERENCE\n            \"ETSI-EN-300-659-1 specification\"\n       DEFVAL
    {dtmfcodeC}\n   ::= { pktcSigDevObjects 36 }\n   pktcSigDevVmwiSigProtocol  OBJECT-TYPE\n
    \      SYNTAX       PktcSubscriberSideSigProtocol\n       MAX-ACCESS   read-write\n
    \      STATUS       current\n       DESCRIPTION\n           \"This object identifies
    the subscriber line protocol used\n            for signaling the information on
    Visual Message Waiting\n            Indicator (VMWI).  Different countries define
    different\n            VMWI signaling protocols to support VMWI service.\n            Frequency
    shift keying (FSK) is most commonly used.\n            DTMF is an alternative.\n
    \           The value of this MIB object MUST NOT persist across MTA\n            reboots.\"\n
    \       DEFVAL { fsk }\n   ::= { pktcSigDevObjects 37 }\n   pktcSigDevVmwiDelayAfterLR
    \   OBJECT-TYPE\n       SYNTAX       Unsigned32 (0|300..800)\n       UNITS        \"Milliseconds\"\n
    \      MAX-ACCESS   read-write\n       STATUS       current\n       DESCRIPTION\n
    \          \"This object specifies the delay between the end of the\n            Line
    Reversal and the start of the FSK or DTMF signal.\n            This object is
    only used when pktcSigDevVmwiMode is\n            set to a value of 'lrETS'.\n
    \           This timing has a range of 300 to 800 ms.\n            The following
    table defines the default values\n            for this MIB object, depending on
    the signal type\n           (pktcSigDevVmwiMode), and MUST be followed:\n            Value
    of pktcSigDevVmwiMode       Default value\n            duringringingETS                  any
    value  (not used)\n            dtAsETS                           any value  (not
    used)\n            rpAsETS                           any value  (not used)\n            lrAsETS
    \                          any value  (not used)\n            lrETS                             400\n
    \           An attempt to set this object while the value of\n            pktcSigDevVmwiMode
    is not 'lrETS' will result in an\n            'inconsistentValue' error.\n            The
    value of this MIB object MUST NOT persist across MTA\n            reboots.\"\n
    \      DEFVAL {400}\n           ::= {pktcSigDevObjects 38 }\n   pktcSigDevVmwiDtmfStartCode
    OBJECT-TYPE\n       SYNTAX       DtmfCode\n       MAX-ACCESS   read-write\n       STATUS
    \      current\n       DESCRIPTION\n           \"This object identifies optional
    start codes used when\n            the pktcSigDevVmwiSigProtocol is set to a value
    of\n            'dtmf(2)'.  Different countries define different On Hook\n            Data
    Transmission Protocol signaling codes to support\n            VMWI.\n            When
    Dual-Tone Multi-Frequency (DTMF) is used, the VMWI\n            digits are preceded
    by a 'start code' digit, followed\n            by the digit transmission sequence
    <S1>...<Sn> (where\n            Sx represents the digits 0-9), and terminated
    by the 'end\n            code' digit.\n            For example,\n              <A><S1>...<Sn>
    <D><S1>...<Sn> <B><S1>...<Sn> <C>.\n            The start code for redirecting
    VMWI may be DTMF 'D'\n            The DTMF code 'B' may be sent by the network
    as a start\n            code for the transfer of information values, through\n
    \           which special events can be indicated to the user.  In\n            some
    countries, the '*' or '#' may be used instead of\n            'A', 'B', 'C', or
    'D'.\n            The value of this MIB object MUST NOT persist across MTA\n            reboots.\"\n
    \      REFERENCE\n            \"ETSI-EN-300-659-1 specification\"\n       DEFVAL
    {dtmfcodeA}\n   ::= { pktcSigDevObjects 39 }\n   pktcSigDevVmwiDtmfEndCode OBJECT-TYPE\n
    \      SYNTAX       DtmfCode\n       MAX-ACCESS   read-write\n       STATUS       current\n
    \      DESCRIPTION\n           \"This object identifies an optional end code used
    when the\n            pktcSigDevVmwiSigProtocol is set to a value of\n            'dtmf(2)'.
    \ Different countries define different on-hook\n            Data Transmission
    Protocol signaling codes to support\n            VMWI.\n            When Dual-Tone
    Multi-Frequency (DTMF) is used, the VMWI\n            digits are preceded by a
    'start code' digit, followed\n            by the digit transmission sequence <S1>...<Sn>
    (where\n            Sx represents the digits 0-9), and terminated by the 'end\n
    \           code' digit.\n            For example,\n              <A><S1>...<Sn>
    <D><S1>...<Sn> <B><S1>...<Sn> <C>.\n            The DTMF code 'C' may be sent
    by the network as an end code\n            for the transfer of information values,
    through which\n            special events can be indicated to the user.  In some\n
    \           countries, the '*' or '#' may be used instead of 'A',\n            'B',
    'C', or 'D'.\n            The value of this MIB object MUST NOT persist across
    MTA\n            reboots.\"\n       REFERENCE\n            \"ETSI-EN-300-659-1
    specification\"\n       DEFVAL {dtmfcodeC}\n   ::= { pktcSigDevObjects 40 }\n"
  - "pktcSigDevrpAsDtsDuration     OBJECT-TYPE\n       SYNTAX       Unsigned32 (0|200..500)\n
    \      UNITS        \"Milliseconds\"\n       MAX-ACCESS   read-write\n       STATUS
    \      current\n       DESCRIPTION\n           \" This object specifies the duration
    of the rpASDTS ring\n             pulse prior to the start of the transmission
    of the\n             FSK or DTMF containing the caller id information.  It is\n
    \            only used when pktcSigDevCidMode is set to a value of\n             'rpAsETS'.\n
    \            The following table defines the default values\n             for
    this MIB object, depending on the signal type\n            (pktcSigDevCidMode),
    and MUST be followed:\n             Value of pktcSigDevCidMode       Default value\n
    \            duringringingETS                 any value  (not used)\n             dtAsETS
    \                         any value  (not used)\n             rpAsETS                          250\n
    \            lrAsETS                          any value  (not used)\n             lrETS
    \                           any value  (not used)\n             An attempt to
    set this object while the value of\n             pktcSigDevCidMode is not 'rpAsETS'
    will result in\n             an 'inconsistentValue' error.\n            The value
    of this MIB object MUST NOT persist across MTA\n            reboots.\"\n       REFERENCE\n
    \          \"ETSI-EN-300-659-1 Specification and Belgacom\n            BGC_D_48_9811_30_09_EDOC
    version 3.3\"\n       DEFVAL { 250 }\n       ::= {pktcSigDevObjects 41 }\n"
  - '--

    '
  - '-- The Endpoint Config Table is used to define attributes that

    '
  - '-- are specific to connection EndPoints.

    '
  - '--

    '
  - "pktcSigEndPntConfigTable  OBJECT-TYPE\n    SYNTAX        SEQUENCE OF PktcSigEndPntConfigEntry\n
    \   MAX-ACCESS    not-accessible\n    STATUS        current\n    DESCRIPTION\n
    \       \" This table describes the information pertaining to each\n          endpoint
    of the MTA.  All entries in this table represent\n          the provisioned endpoints
    provisioned with the information\n          required by the MTA to maintain the
    NCS protocol\n          communication with the CMS.  Each endpoint can be assigned\n
    \         to its own CMS.  If the specific endpoint does not have\n          the
    corresponding CMS information in this table, the\n          endpoint is considered
    as not provisioned with voice\n          services.  Objects in this table do not
    persist across\n          MTA reboots.\"\n   ::=  { pktcSigEndPntConfigObjects
    1 }\n"
  - "pktcSigEndPntConfigEntry  OBJECT-TYPE\n    SYNTAX        PktcSigEndPntConfigEntry\n
    \   MAX-ACCESS    not-accessible\n    STATUS        current\n    DESCRIPTION\n
    \       \"Each entry in the pktcSigEndPntConfigTable represents\n         required
    signaling parameters for the specific endpoint\n         provisioned with voice
    services.  The conceptual rows MUST\n         NOT persist across MTA reboots.\"\n
    \   INDEX { ifIndex }\n    ::= { pktcSigEndPntConfigTable 1 }\n"
  - "PktcSigEndPntConfigEntry  ::= SEQUENCE {\n    pktcSigEndPntConfigCallAgentId
    \            SnmpAdminString,\n    pktcSigEndPntConfigCallAgentUdpPort        InetPortNumber,\n
    \   pktcSigEndPntConfigPartialDialTO           Unsigned32,\n    pktcSigEndPntConfigCriticalDialTO
    \         Unsigned32,\n    pktcSigEndPntConfigBusyToneTO              Unsigned32,\n
    \   pktcSigEndPntConfigDialToneTO              Unsigned32,\n    pktcSigEndPntConfigMessageWaitingTO
    \       Unsigned32,\n    pktcSigEndPntConfigOffHookWarnToneTO       Unsigned32,\n
    \   pktcSigEndPntConfigRingingTO               Unsigned32,\n    pktcSigEndPntConfigRingBackTO
    \             Unsigned32,\n    pktcSigEndPntConfigReorderToneTO           Unsigned32,\n
    \   pktcSigEndPntConfigStutterDialToneTO       Unsigned32,\n    pktcSigEndPntConfigTSMax
    \                  Unsigned32,\n    pktcSigEndPntConfigMax1                    Unsigned32,\n
    \   pktcSigEndPntConfigMax2                    Unsigned32,\n    pktcSigEndPntConfigMax1QEnable
    \            TruthValue,\n    pktcSigEndPntConfigMax2QEnable             TruthValue,\n
    \   pktcSigEndPntConfigMWD                     Unsigned32,\n    pktcSigEndPntConfigTdinit
    \                 Unsigned32,\n    pktcSigEndPntConfigTdmin                   Unsigned32,\n
    \   pktcSigEndPntConfigTdmax                   Unsigned32,\n    pktcSigEndPntConfigRtoMax
    \                 Unsigned32,\n    pktcSigEndPntConfigRtoInit                 Unsigned32,\n
    \   pktcSigEndPntConfigLongDurationKeepAlive   Unsigned32,\n    pktcSigEndPntConfigThist
    \                  Unsigned32,\n    pktcSigEndPntConfigStatus                  RowStatus,\n
    \   pktcSigEndPntConfigCallWaitingMaxRep       Unsigned32,\n    pktcSigEndPntConfigCallWaitingDelay
    \       Unsigned32,\n    pktcSigEndPntStatusCallIpAddressType       InetAddressType,\n
    \   pktcSigEndPntStatusCallIpAddress           InetAddress,\n    pktcSigEndPntStatusError
    \                  INTEGER,\n    pktcSigEndPntConfigMinHookFlash            Unsigned32,\n
    \   pktcSigEndPntConfigMaxHookFlash            Unsigned32,\n    pktcSigEndPntConfigPulseDialInterdigitTime
    Unsigned32,\n    pktcSigEndPntConfigPulseDialMinMakeTime    Unsigned32,\n    pktcSigEndPntConfigPulseDialMaxMakeTime
    \   Unsigned32,\n    pktcSigEndPntConfigPulseDialMinBreakTime   Unsigned32,\n
    \   pktcSigEndPntConfigPulseDialMaxBreakTime   Unsigned32\n    }\n"
  - "pktcSigEndPntConfigCallAgentId     OBJECT-TYPE\n    SYNTAX      SnmpAdminString(SIZE
    (3..255))\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n
    \       \" This object contains a string indicating the call agent\n          name
    (e.g., ca@example.com).  The call agent name, after\n          the character '@',
    MUST be a fully qualified domain name\n          (FQDN) and MUST have a corresponding
    pktcMtaDevCmsFqdn\n          entry in the pktcMtaDevCmsTable.  The object\n          pktcMtaDevCmsFqdn
    is defined in the PacketCable MIBMTA\n          Specification.  For each particular
    endpoint, the MTA MUST\n          use the current value of this object to communicate
    with\n          the corresponding CMS.  The MTA MUST update this object\n          with
    the value of the 'Notified Entity' parameter of the\n          NCS message.  Because
    of the high importance of this object\n          to the ability of the MTA to
    maintain reliable NCS\n          communication with the CMS, it is highly recommended
    not\n          to change this object's value using SNMP during normal\n          operation.\"\n
    \   ::= {  pktcSigEndPntConfigEntry 1 }\n"
  - "pktcSigEndPntConfigCallAgentUdpPort    OBJECT-TYPE\n    SYNTAX      InetPortNumber
    (1025..65535)\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n
    \       \" This object contains the current value of the User\n          Datagram
    Protocol (UDP) receive port on which the\n          call agent will receive NCS
    from the endpoint.\n          For each particular endpoint, the MTA MUST use the
    current\n          value of this object to communicate with the corresponding\n
    \         CMS.  The MTA MUST update this object with the value of the\n          'Notified
    Entity' parameter of the NCS message.  If the\n          Notified Entity parameter
    does not contain a CallAgent\n          port, the MTA MUST update this object
    with the default\n          value of 2727.  Because of the high importance of
    this\n          object to the ability of the MTA to maintain reliable NCS\n          communication
    with the CMS, it is highly recommended not\n          to change this object's
    value using SNMP during normal\n          operation.\"\n    REFERENCE\n        \"PacketCable
    NCS Specification\"\n    DEFVAL    { 2727 }\n    ::= { pktcSigEndPntConfigEntry
    2 }\n"
  - "pktcSigEndPntConfigPartialDialTO     OBJECT-TYPE\n    SYNTAX       Unsigned32\n
    \   UNITS        \"seconds\"\n    MAX-ACCESS   read-create\n    STATUS       current\n
    \   DESCRIPTION\n        \"This object contains the value of the partial dial\n
    \        time out.\n         The time out (TO) elements are intended to limit
    the time a\n         tone or frequency is generated.  When this MIB object is
    set\n         to a value of '0', the MTA MUST NOT generate the\n         corresponding
    frequency or tone, regardless of the\n         definitions pertaining to frequency,
    tone duration, or\n         cadence.\"\n    REFERENCE\n        \"PacketCable NCS
    Specification\"\n    DEFVAL { 16 }\n    ::= { pktcSigEndPntConfigEntry 3 }\n"
  - "pktcSigEndPntConfigCriticalDialTO     OBJECT-TYPE\n    SYNTAX       Unsigned32\n
    \   UNITS        \"seconds\"\n    MAX-ACCESS   read-create\n    STATUS       current\n
    \   DESCRIPTION\n        \"This object contains the value of the critical\n         dial
    time out.\n         The time out (TO) elements are intended to limit the time
    a\n         tone or frequency is generated.  When this MIB object is set\n         to
    a value of '0', the MTA MUST NOT generate the\n         corresponding frequency
    or tone, regardless of the\n         definitions pertaining to frequency, tone
    duration, or\n         cadence.\"\n    REFERENCE\n        \"PacketCable NCS Specification\"\n
    \   DEFVAL { 4 }\n    ::= { pktcSigEndPntConfigEntry 4 }\n"
  - "pktcSigEndPntConfigBusyToneTO     OBJECT-TYPE\n    SYNTAX       Unsigned32\n
    \   UNITS        \"seconds\"\n    MAX-ACCESS   read-create\n    STATUS       current\n
    \   DESCRIPTION\n        \" This object contains the default time out value for
    busy\n          tone.  The MTA MUST NOT update this object with the\n          value
    provided in the NCS message (if present).  If\n          the value of the object
    is modified by the SNMP Management\n          Station, the MTA MUST use the new
    value as a default only\n          for a new signal requested by the NCS message.\n
    \         The time out (TO) elements are intended to limit the time\n          a
    tone or frequency is generated.  When this MIB object is\n          set to a value
    of '0', the MTA MUST NOT generate the\n          corresponding frequency or tone,
    regardless of the\n          definitions pertaining to frequency, tone duration,
    or\n          cadence.\"\n    REFERENCE\n        \"PacketCable NCS Specification\"\n
    \   DEFVAL    { 30 }\n    ::= { pktcSigEndPntConfigEntry 5 }\n"
  - "pktcSigEndPntConfigDialToneTO     OBJECT-TYPE\n    SYNTAX       Unsigned32\n
    \   UNITS        \"seconds\"\n    MAX-ACCESS   read-create\n    STATUS       current\n
    \   DESCRIPTION\n        \" This object contains the default time out value for
    dial\n          tone.  The MTA MUST NOT update this object with the\n          value
    provided in the NCS message (if present).  If\n          the value of the object
    is modified by the SNMP Management\n          Station, the MTA MUST use the new
    value as a default only\n          for a new signal requested by the NCS message.\n
    \         The time out (TO) elements are intended to limit the time\n          a
    tone or frequency is generated.  When this MIB object is\n          set to a value
    of '0', the MTA MUST NOT generate the\n          corresponding frequency or tone,
    regardless of the\n          definitions pertaining to frequency, tone duration,
    or\n          cadence.\"\n    REFERENCE\n        \"PacketCable NCS Specification\"\n
    \   DEFVAL    { 16 }\n    ::= { pktcSigEndPntConfigEntry 6 }\n"
  - "pktcSigEndPntConfigMessageWaitingTO     OBJECT-TYPE\n    SYNTAX       Unsigned32\n
    \   UNITS        \"seconds\"\n    MAX-ACCESS   read-create\n    STATUS       current\n
    \   DESCRIPTION\n        \" This object contains the default time out value for
    message\n          waiting indicator.  The MTA MUST NOT update this object\n          with
    the value provided in the NCS message (if\n          present).  If the value of
    the object is modified by the\n          SNMP Manager application, the MTA MUST
    use the new value\n          as a default only for a new signal requested by the
    NCS\n          message.\n          The time out (TO) elements are intended to
    limit the time\n          a tone or frequency is generated.  When this MIB object
    is\n          set to a value of '0', the MTA MUST NOT generate the\n          corresponding
    frequency or tone, regardless of the\n          definitions pertaining to frequency,
    tone duration, or\n          cadence.\"\n    REFERENCE\n        \"PacketCable
    NCS Specification\"\n    DEFVAL    { 16 }\n    ::= { pktcSigEndPntConfigEntry
    7 }\n"
  - "pktcSigEndPntConfigOffHookWarnToneTO     OBJECT-TYPE\n    SYNTAX       Unsigned32\n
    \   UNITS        \"seconds\"\n    MAX-ACCESS   read-create\n    STATUS       current\n
    \   DESCRIPTION\n        \" This object contains the default time out value for
    the\n          off-hook warning tone.  The MTA MUST NOT update this object\n          with
    the value provided in the NCS message (if present).  If\n          the value of
    the object is modified by the SNMP Manager\n          application, the MTA MUST
    use the new value as a default\n          only for a new signal requested by the
    NCS message.  The\n          time out (TO) elements are intended to limit the
    time a tone\n          or frequency is generated.  When this MIB object is set
    to a\n          value of '0', the MTA MUST NOT generate the corresponding\n          frequency
    or tone, regardless of the definitions pertaining\n          to frequency, tone
    duration, or cadence.\"\n    REFERENCE\n        \"PacketCable NCS Specification\"\n
    \   DEFVAL { 0 }\n    ::= { pktcSigEndPntConfigEntry 8 }\n"
  - "pktcSigEndPntConfigRingingTO     OBJECT-TYPE\n    SYNTAX       Unsigned32\n    UNITS
    \       \"seconds\"\n    MAX-ACCESS   read-create\n    STATUS       current\n
    \   DESCRIPTION\n        \" This object contains the default time out value for\n
    \         ringing.  The MTA MUST NOT update this object with the\n          value
    provided in the NCS message (if present).  If\n          the value of the object
    is modified by the SNMP Management\n          Station, the MTA MUST use the new
    value as a default only\n          for a new signal requested by the NCS message.\n
    \         The time out (TO) elements are intended to limit the time\n          a
    tone or frequency is generated.  When this MIB object is\n          set to a value
    of '0', the MTA MUST NOT generate the\n          corresponding frequency or tone,
    regardless of the\n          definitions pertaining to frequency, tone duration,
    or\n          cadence.\"\n    REFERENCE\n        \"PacketCable NCS Specification\"\n
    \   DEFVAL    { 180 }\n    ::= { pktcSigEndPntConfigEntry 9 }\n"
  - "pktcSigEndPntConfigRingBackTO     OBJECT-TYPE\n    SYNTAX       Unsigned32\n
    \   UNITS        \"seconds\"\n    MAX-ACCESS   read-create\n    STATUS       current\n
    \   DESCRIPTION\n        \" This object contains the default time out value for
    ring\n          back.  The MTA MUST NOT update this object with the\n          value
    provided in the NCS message (if present).  If\n          the value of the object
    is modified by the SNMP Management\n          Station, the MTA MUST use the new
    value as a default only\n          for a new signal requested by the NCS message.\n
    \         The time out (TO) elements are intended to limit the time\n          a
    tone or frequency is generated.  When this MIB object is\n          set to a value
    of '0', the MTA MUST NOT generate the\n          corresponding frequency or tone,
    regardless of the\n          definitions pertaining to frequency, tone duration,
    or\n          cadence.\"\n    REFERENCE\n        \"PacketCable NCS Specification\"\n
    \   DEFVAL    { 180 }\n    ::= { pktcSigEndPntConfigEntry 10 }\n"
  - "pktcSigEndPntConfigReorderToneTO     OBJECT-TYPE\n    SYNTAX       Unsigned32\n
    \   UNITS        \"seconds\"\n    MAX-ACCESS   read-create\n    STATUS       current\n
    \   DESCRIPTION\n        \" This object contains the default time out value for
    reorder\n          tone.  The MTA MUST NOT update this object with the\n          value
    provided in the NCS message (if present).  If\n          the value of the object
    is modified by the SNMP Management\n          Station, the MTA MUST use the new
    value as a default only\n          for a new signal requested by the NCS message.\n
    \         The time out (TO) elements are intended to limit the time\n          a
    tone or frequency is generated.  When this MIB object is\n          set to a value
    of '0', the MTA MUST NOT generate the\n          corresponding frequency or tone,
    regardless of the\n          definitions pertaining to frequency, tone duration,
    or\n          cadence.\"\n    REFERENCE\n        \"PacketCable NCS Specification\"\n
    \   DEFVAL    { 30 }\n    ::= { pktcSigEndPntConfigEntry 11 }\n"
  - "pktcSigEndPntConfigStutterDialToneTO     OBJECT-TYPE\n    SYNTAX       Unsigned32\n
    \   UNITS        \"seconds\"\n    MAX-ACCESS   read-create\n    STATUS       current\n
    \   DESCRIPTION\n        \" This object contains the default time out value for
    stutter\n          dial tone.  The MTA MUST NOT update this object with the\n
    \         value provided in the NCS message (if present).  If\n          the value
    of the object is modified by the SNMP Management\n          Station, the MTA MUST
    use the new value as a default only\n          for a new signal requested by the
    NCS message.\n          The time out (TO) elements are intended to limit the time\n
    \         a tone or frequency is generated.  When this MIB object is\n          set
    to a value of '0', the MTA MUST NOT generate the\n          corresponding frequency
    or tone, regardless of the\n          definitions pertaining to frequency, tone
    duration, or\n          cadence.\"\n    REFERENCE\n          \"PacketCable NCS
    Specification\"\n    DEFVAL    { 16 }\n    ::= { pktcSigEndPntConfigEntry 12 }\n"
  - "pktcSigEndPntConfigTSMax     OBJECT-TYPE\n    SYNTAX      Unsigned32\n    MAX-ACCESS
    \ read-create\n    STATUS      current\n    DESCRIPTION\n           \"This MIB
    object is used as part of an NCS\n            retransmission algorithm.  Prior
    to any retransmission,\n            the MTA must check to make sure that the time
    elapsed\n            since the sending of the initial datagram does not\n            exceed
    the value specified by this MIB object.  If more\n            than Tsmax time
    has elapsed, then the retransmissions\n            MUST cease.\n            Refer
    to the MIB object pktcSigEndPntConfigThist for\n            information on when
    the endpoint becomes disconnected.\"\n    REFERENCE\n        \"PacketCable NCS
    Specification\"\n    DEFVAL { 20 }\n    ::= { pktcSigEndPntConfigEntry 13 }\n"
  - "pktcSigEndPntConfigMax1     OBJECT-TYPE\n    SYNTAX      Unsigned32\n    MAX-ACCESS
    \ read-create\n    STATUS      current\n    DESCRIPTION\n        \"This object
    contains the suspicious error threshold for\n         signaling messages.  The
    pktcSigEndPntConfigMax1 object\n         indicates the retransmission threshold
    at which the MTA MAY\n         actively query the domain name server (DNS) in
    order to\n         detect the possible change of call agent interfaces.\"\n    REFERENCE\n
    \       \"PacketCable NCS Specification\"\n    DEFVAL { 5 }\n    ::= { pktcSigEndPntConfigEntry
    14 }\n"
  - "pktcSigEndPntConfigMax2     OBJECT-TYPE\n    SYNTAX      Unsigned32\n    MAX-ACCESS
    \ read-create\n    STATUS      current\n    DESCRIPTION\n        \"This object
    contains the disconnect error threshold for\n         signaling messages.  The
    pktcSigEndPntConfigMax2 object\n         indicates the retransmission threshold
    at which the MTA\n         SHOULD contact the DNS one more time to see if any
    other\n         interfaces to the call agent have become available.\"\n    REFERENCE\n
    \       \"PacketCable NCS Specification\"\n    DEFVAL { 7 }\n    ::= { pktcSigEndPntConfigEntry
    15 }\n"
  - "pktcSigEndPntConfigMax1QEnable     OBJECT-TYPE\n    SYNTAX      TruthValue\n
    \   MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"This
    object enables/disables the Max1 domain name server\n         (DNS) query operation
    when the pktcSigEndPntConfigMax1\n         threshold has been reached.\n         A
    value of true(1) indicates enabling, and a value of\n         false(2) indicates
    disabling.\"\n    DEFVAL { true }\n    ::= { pktcSigEndPntConfigEntry 16 }\n"
  - "pktcSigEndPntConfigMax2QEnable     OBJECT-TYPE\n    SYNTAX      TruthValue\n
    \   MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"This
    object enables/disables the Max2 domain name server\n         (DNS) query operation
    when the pktcSigEndPntConfigMax2\n         threshold has been reached.\n         A
    value of true(1) indicates enabling, and a value of\n         false(2) indicates
    disabling.\"\n    DEFVAL { true }\n    ::= { pktcSigEndPntConfigEntry 17 }\n"
  - "pktcSigEndPntConfigMWD     OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS
    \      \"seconds\"\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n
    \       \"Maximum Waiting Delay (MWD) contains the maximum number of\n         seconds
    an MTA waits, after powering on, before initiating\n         the restart procedure
    with the call agent.\"\n    REFERENCE\n        \"PacketCable NCS Specification\"\n
    \   DEFVAL { 600 }\n    ::= { pktcSigEndPntConfigEntry 18 }\n"
  - "pktcSigEndPntConfigTdinit     OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS
    \      \"seconds\"\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n
    \       \"This MIB object represents the 'disconnected' initial\n         waiting
    delay within the context of an MTA's 'disconnected\n         procedure'.  The
    'disconnected procedure' is initiated when\n         an endpoint becomes 'disconnected'
    while attempting to\n         communicate with a call agent.\n         The 'disconnected
    timer' associated with the 'disconnected\n         Procedure' is initialized to
    a random value, uniformly\n         distributed between zero and the value contained
    in this\n         MIB object.\n         For more information on the usage of this
    timer, please\n         refer to the PacketCable NCS Specification.\"\n    REFERENCE\n
    \       \"PacketCable NCS Specification\"\n    DEFVAL { 15 }\n    ::= { pktcSigEndPntConfigEntry
    19 }\n"
  - "pktcSigEndPntConfigTdmin     OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS
    \      \"seconds\"\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n
    \           \"This MIB object represents the 'disconnected' minimum\n             waiting
    delay within the context of an MTA's\n             'disconnected procedure', specifically
    when local user\n             activity is detected.\n             The 'disconnected
    procedure' is initiated when\n             an endpoint becomes 'disconnected'
    while attempting to\n             communicate with a call agent.\n             For
    more information on the usage of this timer, please\n             refer to the
    PacketCable NCS Specification.\"\n    REFERENCE\n        \"PacketCable NCS Specification\"\n
    \   DEFVAL { 15 }\n    ::= { pktcSigEndPntConfigEntry 20 }\n"
  - "pktcSigEndPntConfigTdmax     OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS
    \      \"seconds\"\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n
    \       \" This object contains the maximum number of seconds the MTA\n          waits,
    after a disconnect, before initiating the\n          disconnected procedure with
    the call agent.\n           \"\n    REFERENCE\n        \"PacketCable NCS Specification\"\n
    \   DEFVAL { 600 }\n    ::= { pktcSigEndPntConfigEntry 21 }\n"
  - "pktcSigEndPntConfigRtoMax     OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS
    \      \"seconds\"\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n
    \       \"This object specifies the maximum number of seconds the MTA\n         waits
    for a response to an NCS message before initiating\n         a retransmission.\"\n
    \   REFERENCE\n        \"PacketCable NCS Specification\"\n    DEFVAL { 4 }\n    ::=
    { pktcSigEndPntConfigEntry 22 }\n"
  - "pktcSigEndPntConfigRtoInit     OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS
    \      \"milliseconds\"\n    MAX-ACCESS  read-create\n    STATUS      current\n
    \   DESCRIPTION\n        \" This object contains the initial number of seconds
    for the\n          retransmission timer.\"\n    REFERENCE\n        \"PacketCable
    NCS Specification\"\n    DEFVAL { 200 }\n    ::= { pktcSigEndPntConfigEntry 23
    }\n"
  - "pktcSigEndPntConfigLongDurationKeepAlive     OBJECT-TYPE\n    SYNTAX      Unsigned32\n
    \   UNITS       \"minutes\"\n    MAX-ACCESS  read-create\n    STATUS      current\n
    \   DESCRIPTION\n        \" Specifies a time out value, in minutes, for sending
    long\n          duration call notification messages.\"\n    REFERENCE\n        \"PacketCable
    NCS Specification\"\n    DEFVAL { 60 }\n    ::= { pktcSigEndPntConfigEntry 24
    }\n"
  - "pktcSigEndPntConfigThist  OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS
    \      \"seconds\"\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n
    \       \" Time out period, in seconds, before no response is declared.\"\n    REFERENCE\n
    \       \"PacketCable NCS Specification\"\n    DEFVAL { 30 }\n    ::= { pktcSigEndPntConfigEntry
    25 }\n"
  - "pktcSigEndPntConfigStatus     OBJECT-TYPE\n    SYNTAX      RowStatus\n    MAX-ACCESS
    \ read-create\n    STATUS      current\n    DESCRIPTION\n        \" This object
    contains the Row Status associated with the\n          pktcSigEndPntConfigTable.
    \ There are no restrictions or\n          dependencies amidst the columnar objects
    before this\n          row can be activated or for modifications of the\n          columnar
    objects when this object is set to a\n          value of 'active(1).\"\n    ::=
    { pktcSigEndPntConfigEntry 26 }\n"
  - "pktcSigEndPntConfigCallWaitingMaxRep     OBJECT-TYPE\n    SYNTAX      Unsigned32
    (0..10)\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n
    \       \" This object contains the default value of the maximum\n          number
    of repetitions of the Call Waiting tone that the\n          MTA will play from
    a single CMS request.  The MTA MUST NOT\n          update this object with the
    information provided in the\n          NCS message (if present).  If the value
    of the object is\n          modified by the SNMP Manager application, the MTA
    MUST use\n          the new value as a default only for a new signal\n          requested
    by the NCS message.\"\n    DEFVAL    { 1 }\n    ::= { pktcSigEndPntConfigEntry
    27 }\n"
  - "pktcSigEndPntConfigCallWaitingDelay     OBJECT-TYPE\n    SYNTAX       Unsigned32
    (1..100)\n    UNITS        \"seconds\"\n    MAX-ACCESS   read-create\n    STATUS
    \      current\n    DESCRIPTION\n        \" This object contains the delay between
    repetitions of the\n          Call Waiting tone that the MTA will play from a
    single CMS\n          request.\"\n    DEFVAL    { 10 }\n    ::= { pktcSigEndPntConfigEntry
    28 }\n"
  - "pktcSigEndPntStatusCallIpAddressType  OBJECT-TYPE\n    SYNTAX      InetAddressType\n
    \   MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n       \"
    This object contains the type of Internet address contained\n         in the MIB
    object 'pktcSigEndPntStatusCallIpAddress'.\n         Since pktcSigEndPntStatusCallIpAddress
    is expected to\n         contain an IP address, a value of dns(16) is disallowed.\"\n
    \   ::= { pktcSigEndPntConfigEntry 29 }\n"
  - "pktcSigEndPntStatusCallIpAddress  OBJECT-TYPE\n    SYNTAX      InetAddress\n
    \   MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n       \"
    This MIB object contains the chosen IP address of the CMS\n         currently
    being used for the corresponding endpoint.\n         The device determines the
    IP address by using DNS to\n         resolve the IP address of the CMS from the
    FQDN stored in\n         the MIB object 'pktcSigEndPntConfigCallAgentId'.  The\n
    \        processes are outlined in the PacketCable NCS and Security\n         specifications,
    and MUST be followed by the MTA.\n         The IP address type contained in this
    MIB object is\n         indicated by pktcSigEndPntStatusCallIpAddressType.\"\n
    \   REFERENCE\n        \"PacketCable NCS Specification;\n         PacketCable
    Security specification, [PKT-SP-SEC].\"\n"
  - '::= { pktcSigEndPntConfigEntry 30 }

    '
  - "pktcSigEndPntStatusError  OBJECT-TYPE\n    SYNTAX INTEGER {\n               operational
    (1),\n               noSecurityAssociation (2),\n               disconnected (3)\n
    \            }\n    MAX-ACCESS   read-only\n    STATUS  current\n    DESCRIPTION\n
    \      \" This object contains the error status for this interface.\n         The
    operational status indicates that all operations\n         necessary to put the
    line in service have occurred, and the\n         CMS has acknowledged the Restart
    In Progress (RSIP)\n         message successfully.  If pktcMtaDevCmsIpsecCtrl
    is enabled\n         for the associated call agent, the noSecurityAssociation\n
    \        status indicates that no Security Association (SA) yet\n         exists
    for this endpoint.  If pktcMtaDevCmsIpsecCtrl is\n         disabled for the associated
    call agent, the\n         noSecurityAssociation status is not applicable and should\n
    \        not be used by the MTA.  The disconnected status indicates\n         one
    of the following two:\n         If pktcMtaDevCmsIpsecCtrl is disabled, then no
    security\n         association is involved with this endpoint.  The NCS\n         signaling
    software is in process of establishing the NCS\n         signaling link via an
    RSIP exchange.\n         Otherwise, when pktcMtaDevCmsIpsecCtrl is enabled,\n
    \        security Association has been established, and the NCS\n         signaling
    software is in process of establishing the NCS\n         signaling link via an
    RSIP exchange.\"\n    ::= { pktcSigEndPntConfigEntry 31 }\n"
  - "pktcSigEndPntConfigMinHookFlash    OBJECT-TYPE\n    SYNTAX       Unsigned32 (20..1550)\n
    \   UNITS        \"Milliseconds\"\n    MAX-ACCESS   read-only\n    STATUS       current\n
    \   DESCRIPTION\n        \" This is the minimum time a line needs to be on-hook
    for a\n          valid hook flash.  The value of this object MUST be\n          greater
    than the value of\n          pktcSigEndPntConfigPulseDialMaxBreakTime.  The value
    of\n          pktcSigEndPntConfigMinHookFlash MUST be less than\n          pktcSigEndPntConfigMaxHookFlash.
    \ This object MUST only be\n          set via the MTA configuration during the
    provisioning\n          process.\n             Furthermore, given the possibility
    for the 'pulse dial'\n             and 'hook flash' to overlap, the value of this
    object\n             MUST be greater than the value contained by the MIB\n             Object
    'pktcSigEndPntConfigPulseDialMaxMakeTime'.\"\n    DEFVAL { 300 }\n    ::= { pktcSigEndPntConfigEntry
    32 }\n"
  - "pktcSigEndPntConfigMaxHookFlash    OBJECT-TYPE\n    SYNTAX       Unsigned32 (20..1550)\n
    \   UNITS        \"Milliseconds\"\n    MAX-ACCESS   read-only\n    STATUS       current\n
    \   DESCRIPTION\n        \" This is the maximum time a line needs to be on-hook
    for a\n          valid hook flash.  The value of\n          pktcSigEndPntConfigMaxHookFlash
    MUST be greater than\n          pktcSigEndPntConfigMinHookFlash.  This object
    MUST only be\n          set via the MTA configuration during the provisioning\n
    \         process.\"\n    DEFVAL { 800 }\n    ::= { pktcSigEndPntConfigEntry 33
    }\n"
  - "pktcSigEndPntConfigPulseDialInterdigitTime    OBJECT-TYPE\n    SYNTAX       Unsigned32
    (100..1500)\n    UNITS        \"Milliseconds\"\n    MAX-ACCESS   read-only\n    STATUS
    \      current\n    DESCRIPTION\n        \" This is the pulse dial inter-digit
    time out.  This object\n          MUST only be set via the MTA configuration during
    the\n          provisioning process.\"\n    DEFVAL { 100 }\n    ::= { pktcSigEndPntConfigEntry
    34 }\n"
  - "pktcSigEndPntConfigPulseDialMinMakeTime    OBJECT-TYPE\n    SYNTAX       Unsigned32
    (20..200)\n    UNITS        \"Milliseconds\"\n    MAX-ACCESS   read-only\n    STATUS
    \      current\n    DESCRIPTION\n        \" This is the minimum make pulse width
    for the dial pulse.\n          The value of pktcSigEndPntConfigPulseDialMinMakeTime
    MUST\n          be less than pktcSigEndPntConfigPulseDialMaxMakeTime.  This\n
    \         object MUST only be set via the MTA configuration during\n          the
    provisioning process.\"\n    DEFVAL { 25 }\n    ::= { pktcSigEndPntConfigEntry
    35 }\n"
  - "pktcSigEndPntConfigPulseDialMaxMakeTime    OBJECT-TYPE\n    SYNTAX       Unsigned32
    (20..200)\n    UNITS        \"Milliseconds\"\n    MAX-ACCESS   read-only\n    STATUS
    \      current\n    DESCRIPTION\n        \" This is the maximum make pulse width
    for the dial pulse.\n          The value of pktcSigEndPntConfigPulseDialMaxMakeTime
    MUST\n          be greater than pktcSigEndPntConfigPulseDialMinMakeTime.\n          This
    object MUST only be provided via the configuration\n          file during the
    provisioning process.\n          Furthermore, given the possibility for the 'pulse
    dial'\n          and 'hook flash' to overlap, the value of this object MUST\n
    \         be less than the value contained by the MIB object\n          pktcSigEndPntConfigMinHookFlash.\"\n
    \   DEFVAL { 55 }\n    ::= { pktcSigEndPntConfigEntry 36 }\n"
  - "pktcSigEndPntConfigPulseDialMinBreakTime    OBJECT-TYPE\n    SYNTAX       Unsigned32
    (20..200)\n    UNITS        \"Milliseconds\"\n    MAX-ACCESS   read-only\n    STATUS
    \      current\n    DESCRIPTION\n        \" This is the minimum break pulse width
    for the dial pulse.\n          The value of pktcSigEndPntConfigPulseDialMinBreakTime
    MUST\n          be less than pktcSigEndPntConfigPulseDialMaxBreakTime.\n          This
    object must only be provided via the configuration\n          file during the
    provisioning process.\"\n    DEFVAL { 45 }\n    ::= { pktcSigEndPntConfigEntry
    37 }\n"
  - "pktcSigEndPntConfigPulseDialMaxBreakTime    OBJECT-TYPE\n    SYNTAX       Unsigned32
    (20..200)\n    UNITS        \"Milliseconds\"\n    MAX-ACCESS   read-only\n    STATUS
    \      current\n    DESCRIPTION\n        \" This is the maximum break pulse width
    for the dial pulse.\n          The value of pktcSigEndPntConfigPulseDialMaxBreakTime
    MUST\n          be greater than pktcSigEndPntConfigPulseDialMinBreakTime.\n          This
    object MUST only be provided via the configuration\n          file during the
    provisioning process.\"\n    DEFVAL { 75 }\n    ::= { pktcSigEndPntConfigEntry
    38 }\n"
  - '--

    '
  - '-- notification group is for future extension.

    '
  - '--

    '
  - 'pktcSigNotification  OBJECT IDENTIFIER ::= { pktcIetfSigMib 0 }

    '
  - 'pktcSigConformance   OBJECT IDENTIFIER ::= { pktcIetfSigMib 2 }

    '
  - 'pktcSigCompliances   OBJECT IDENTIFIER ::= { pktcSigConformance 1 }

    '
  - 'pktcSigGroups        OBJECT IDENTIFIER ::= { pktcSigConformance 2 }

    '
  - '--

    '
  - '-- compliance statements

    '
  - '--

    '
  - "pktcSigBasicCompliance  MODULE-COMPLIANCE\n    STATUS     current\n    DESCRIPTION\n
    \       \" The compliance statement for MTAs that implement\n          NCS signaling.\"\n"
  - 'MODULE  -- pktcIetfSigMib

    '
  - '---

    '
  - '-- Unconditionally mandatory groups for all MTAs

    '
  - '---

    '
  - "MANDATORY-GROUPS {\n    pktcSigDeviceGroup,\n    pktcSigEndpointGroup\n"
  - '}

    '
  - '---

    '
  - '-- Conditionally mandatory groups for MTAs

    '
  - '---

    '
  - "GROUP pktcInternationalGroup\n    DESCRIPTION\n        \" This group is mandatory
    only for MTAs implementing\n          international telephony features.\"\n"
  - "GROUP pktcLLinePackageGroup\n    DESCRIPTION\n        \" This group is mandatory
    only for MTAs implementing the L\n          line package.\"\n"
  - "GROUP pktcELinePackageGroup\n    DESCRIPTION\n        \" This group is mandatory
    only for MTAs implementing the E\n          Line Package.\"\n    ::={ pktcSigCompliances
    1 }\n"
  - "pktcSigDeviceGroup  OBJECT-GROUP\n    OBJECTS {\n    pktcSigDevCodecMax,\n    pktcSigDevEchoCancellation,\n
    \   pktcSigDevSilenceSuppression,\n    pktcSigDevR0Cadence,\n    pktcSigDevR1Cadence,\n
    \   pktcSigDevR2Cadence,\n    pktcSigDevR3Cadence,\n    pktcSigDevR4Cadence,\n
    \   pktcSigDevR5Cadence,\n    pktcSigDevR6Cadence,\n    pktcSigDevR7Cadence,\n
    \   pktcSigDevRgCadence,\n    pktcSigDevRsCadence,\n    pktcSigDefCallSigDscp,\n
    \   pktcSigDefMediaStreamDscp,\n    pktcSigDevVmwiMode,\n    pktcSigCapabilityType,\n
    \   pktcSigCapabilityVersion,\n    pktcSigCapabilityVendorExt,\n    pktcSigDefNcsReceiveUdpPort\n
    \   }\n    STATUS current\n    DESCRIPTION\n          \"Group of MIB objects containing
    signaling configuration\n           information that is applicable per-device.\"\n
    \   ::= { pktcSigGroups 1 }\n"
  - "pktcSigEndpointGroup  OBJECT-GROUP\n    OBJECTS {\n    pktcSigEndPntConfigCallAgentId,\n
    \   pktcSigEndPntConfigCallAgentUdpPort,\n    pktcSigEndPntConfigPartialDialTO,\n
    \   pktcSigEndPntConfigCriticalDialTO,\n    pktcSigEndPntConfigBusyToneTO,\n    pktcSigEndPntConfigDialToneTO,\n
    \   pktcSigEndPntConfigMessageWaitingTO,\n    pktcSigEndPntConfigOffHookWarnToneTO,\n
    \   pktcSigEndPntConfigRingingTO,\n    pktcSigEndPntConfigRingBackTO,\n    pktcSigEndPntConfigReorderToneTO,\n
    \   pktcSigEndPntConfigStutterDialToneTO,\n    pktcSigEndPntConfigTSMax,\n    pktcSigEndPntConfigMax1,\n
    \   pktcSigEndPntConfigMax2,\n    pktcSigEndPntConfigMax1QEnable,\n    pktcSigEndPntConfigMax2QEnable,\n
    \   pktcSigEndPntConfigMWD,\n    pktcSigEndPntConfigTdinit,\n    pktcSigEndPntConfigTdmin,\n
    \   pktcSigEndPntConfigTdmax,\n    pktcSigEndPntConfigRtoMax,\n    pktcSigEndPntConfigRtoInit,\n
    \   pktcSigEndPntConfigLongDurationKeepAlive,\n    pktcSigEndPntConfigThist,\n
    \   pktcSigEndPntConfigStatus,\n    pktcSigEndPntConfigCallWaitingMaxRep,\n    pktcSigEndPntConfigCallWaitingDelay,\n
    \   pktcSigEndPntStatusCallIpAddressType,\n    pktcSigEndPntStatusCallIpAddress,\n
    \   pktcSigEndPntStatusError\n    }\n    STATUS current\n    DESCRIPTION\n          \"Group
    of MIB objects containing signaling configuration\n           information that
    is applicable per-endpoint.\"\n    ::= { pktcSigGroups 2 }\n"
  - "pktcInternationalGroup    OBJECT-GROUP\n    OBJECTS {\n    pktcSigEndPntConfigMinHookFlash,\n
    \   pktcSigEndPntConfigMaxHookFlash,\n    pktcSigEndPntConfigPulseDialInterdigitTime,\n
    \   pktcSigEndPntConfigPulseDialMinMakeTime,\n    pktcSigEndPntConfigPulseDialMaxMakeTime,\n
    \   pktcSigEndPntConfigPulseDialMinBreakTime,\n    pktcSigEndPntConfigPulseDialMaxBreakTime,\n
    \   pktcSigDevRingCadence,\n    pktcSigDevCidSigProtocol,\n    pktcSigDevCidDelayAfterLR,\n
    \   pktcSigDevCidDtmfStartCode,\n    pktcSigDevCidDtmfEndCode,\n    pktcSigDevVmwiSigProtocol,\n
    \   pktcSigDevVmwiDelayAfterLR,\n    pktcSigDevVmwiDtmfStartCode,\n    pktcSigDevVmwiDtmfEndCode,\n
    \   pktcSigDevrpAsDtsDuration,\n    pktcSigDevCidMode,\n    pktcSigDevCidAfterRing,\n
    \   pktcSigDevCidAfterDTAS,\n    pktcSigDevCidAfterRPAS,\n    pktcSigDevRingAfterCID,\n
    \   pktcSigDevCidDTASAfterLR,\n    pktcSigDevVmwiMode,\n    pktcSigDevVmwiAfterDTAS,\n
    \   pktcSigDevVmwiAfterRPAS,\n    pktcSigDevVmwiDTASAfterLR,\n    pktcSigPowerRingFrequency,\n
    \   pktcSigPulseSignalFrequency,\n    pktcSigPulseSignalDbLevel,\n    pktcSigPulseSignalDuration,\n
    \   pktcSigPulseSignalPulseInterval,\n    pktcSigPulseSignalRepeatCount,\n    pktcSigDevToneDbLevel,\n
    \   pktcSigDevToneFreqCounter,\n    pktcSigDevToneWholeToneRepeatCount,\n    pktcSigDevToneSteady,\n
    \   pktcSigDevToneFirstFreqValue,\n    pktcSigDevToneSecondFreqValue,\n    pktcSigDevToneThirdFreqValue,\n
    \   pktcSigDevToneFourthFreqValue,\n    pktcSigDevToneFreqMode,\n    pktcSigDevToneFreqAmpModePrtg,\n
    \   pktcSigDevToneFreqOnDuration,\n    pktcSigDevToneFreqOffDuration,\n    pktcSigDevToneFreqRepeatCount\n
    \   }\n    STATUS current\n    DESCRIPTION\n        \" Group of objects that extend
    the behavior of existing\n          objects to support operations in the widest
    possible set\n          of international marketplaces.  Note that many of these\n
    \         objects represent a superset of behaviors described in\n          other
    objects within this MIB module.\"\n    ::= { pktcSigGroups 3 }\n"
  - "pktcLLinePackageGroup  OBJECT-GROUP\n    OBJECTS {\n    pktcSigDevR0Cadence,\n
    \   pktcSigDevR1Cadence,\n    pktcSigDevR2Cadence,\n    pktcSigDevR3Cadence,\n
    \   pktcSigDevR4Cadence,\n    pktcSigDevR5Cadence,\n    pktcSigDevR6Cadence,\n
    \   pktcSigDevR7Cadence,\n    pktcSigDevRgCadence,\n    pktcSigDevRsCadence\n
    \   }\n    STATUS current\n    DESCRIPTION\n    \"Group of Objects to support
    the L line package.\"\n    ::= { pktcSigGroups 4 }\n"
  - "pktcELinePackageGroup  OBJECT-GROUP\n    OBJECTS {\n    pktcSigDevR0Cadence,\n
    \   pktcSigDevR1Cadence,\n    pktcSigDevR2Cadence,\n    pktcSigDevR3Cadence,\n
    \   pktcSigDevR4Cadence,\n    pktcSigDevR5Cadence,\n    pktcSigDevR6Cadence,\n
    \   pktcSigDevR7Cadence,\n    pktcSigDevRgCadence,\n    pktcSigDevRsCadence,\n
    \   pktcSigPulseSignalFrequency,\n    pktcSigPulseSignalDbLevel,\n    pktcSigPulseSignalDuration,\n
    \   pktcSigPulseSignalPulseInterval,\n    pktcSigPulseSignalRepeatCount,\n    pktcSigDevRingCadence\n
    \   }\n    STATUS current\n    DESCRIPTION\n        \"Group of Objects to support
    the E line package.\"\n    ::= { pktcSigGroups 5 }\n"
  - 'END

    '
  title: 5.  Definitions
- contents:
  - "6.  Examples\n   This section provides a couple of examples, specifically related
    to\n   the MIB tables pktcSigDevToneTable and pktcSigDevMultiFreqToneTable.\n
    \  Example A:  Call Waiting Tone Defined per [ITU-T E.180]:\n   1) 400 Hz AM modulated
    by 16 Hz, on for 500ms at -4 dBm\n   2) 400 Hz AM modulated by 16 Hz, off for
    400ms\n   3) 400 Hz not AM modulated, on for 50 ms at -4 dBm\n   4) 400 Hz not
    AM modulated, off for 450 ms\n   5) 400 Hz not AM modulated, on for 50 ms at -4
    dBm\n   6) 400 Hz not AM modulated, off for 3450 ms\n   7) 400 Hz not AM modulated,
    on for 50 ms at -4 dBm\n   8) 400 Hz not AM modulated, off for 450 ms\n   9) 400
    Hz not AM modulated, on for 50 ms at -4 dBm\n   10) 400 Hz not AM modulated, off
    for 3450 ms\n   11) not repeated, not continuous\n   Assume userDefined1(18) is
    assigned to this tone:\n   pktcSigDevMultiFreqToneTable:\n   ToneType|F-1|F-2|F-3|F-4|F-Mode|ModePrtg|DbL|OnDur|OffDur|Rep-Count\n
    \  ===================================================================\n   18
    \      400  16  0   0     1     90     -40  500   400      0\n   18       400
    \  0  0   0     2      0     -40   50   450      0\n   18       400   0  0   0
    \    2      0     -40   50  3450      0\n   18       400   0  0   0     2      0
    \    -40   50   450      0\n   18       400   0  0   0     2      0     -40   50
    \ 3450      0\n   pktcSigDevToneTable:\n   ToneType|ToneFreqGroup|ToneFreqCounter|ToneRep-Count|Steady\n
    \  =============================================================\n   18          1
    \            5              0       false(2)\n   The single row of the pktcSigDevToneTable
    defines one multi-frequency\n   group of five rows (ToneFreqCounter) defined in
    the\n   pktcSigDevMultiFreqToneTable and instructs the MTA to play this group\n
    \  only once (non-repeatable as ToneRep-Count equals 0).\n   Example B - Congestion
    Tone - congestion(17):\n   Note: This example of an embedded cadence is based
    on an operator\n   variation.\n   1) 400Hz on for 400ms -10 dBm\n   2) 400Hz off
    for 350ms\n   3) 400Hz on for 225ms -4 dBm\n   4) 400Hz off for 525ms\n   5) repeat
    (1) through (4) 5000 times or T0 time out (whichever is the\n   shortest period)\n
    \  pktcSigDevMultiFreqToneTable:\n   ToneType|F-1|F-2|F-3|F-4|F-Mode|ModePrtg|DbL|OnDur|OffDur|Rep-Count\n
    \  ===================================================================\n   17
    \      400  0   0   0    2       0    -100  400   350      0\n   17       400
    \ 0   0   0    2       0     -40  225   525      0\n   pktcSigDevToneTable:\n
    \  ToneType|ToneFreqGroup|ToneFreqCounter|ToneRep-Count|Steady\n   =============================================================\n
    \  17          1             2              5000        false(2)\n   Example C
    - Call Waiting Tone - callWaiting1(9):\n   1) 16 Hz is modulated to carry the
    400 Hz signal, ModulationRate\n   within 85%, on for 500msec, at -25 dBm or more
    but less than -14 dBm\n   2) 16 Hz is modulated to carry the 400 Hz signal, off
    for 0 ~ 4 secs\n   3) 400 Hz not modulated, on for 50 ms at -25 dBm or more but
    less\n   than -14 dBm\n   4) 400 Hz not modulated, off for 450ms\n   5) 400 Hz
    not modulated, on for 50 ms at -25 dBm or more but less\n   than -14 dBm\n   6)
    400 Hz not modulated, off for 3450ms ([4000 - (50+450+50)])\n   7) Steps 3 thru
    6 are repeated\n   pktcSigDevMultiFreqToneTable:\n   ToneType|F-1|F-2|F-3|F-4|F-Mode|ModePrtg|DbL|OnDur|OffDur|Rep-Count\n
    \  ===================================================================\n   9        1
    \  400 16  0   0     1     85     -25  500  1000      0\n   9        2   400  0
    \ 0   0     2      0     -25   50   450      0\n   9        3   400  0  0   0
    \    2      0     -25   50  3450      0\n   pktcSigDevToneTable:\n   ToneType|ToneFreqGroup|ToneFreqCounter|ToneRep-Count|Steady\n
    \  =============================================================\n   9           1
    \            1              0       false(2)\n   9           2             2              1
    \      false(2)\n   The first row of the pktcSigDevToneTable table instructs the
    MTA to\n   play one row (ToneFreqCounter) of the pktcSigDevMultiFreqToneTable\n
    \  table only once (non-repeatable as ToneRep-Count equals 0).  The\n   second
    row of the pktcSigDevToneTable table instructs the MTA to play\n   the next two
    rows (ToneFreqCounter) of the\n   pktcSigDevMultiFreqToneTable table and make
    this frequency group\n   repeatable (ToneRep-Count is not 0).\n"
  title: 6.  Examples
- contents:
  - "7.  Acknowledgments\n   The authors would like to thank the members of the IETF
    IPCDN working\n   group and the CableLabs PacketCable Provisioning focus team
    for their\n   contributions, comments, and suggestions.\n   Specifically, the
    following individuals are recognized:\n       Angela Lyda            Arris Interactive\n
    \      Romascanu, Dan         Avaya\n       Chad Griffiths         Broadcom Corp.\n
    \      Eugene Nechamkin       Broadcom Corp.\n       Jean-Francois Mule     CableLabs\n
    \      Matt A. Osman          CableLabs\n       Klaus Hermanns         Cisco Systems,
    Inc.\n       Rich Woundy            Comcast Corp.\n       Bert Wijnen            Alcatel-Lucent\n
    \      Randy Presuhn          Mindspring\n       Phillip Freyman        Motorola,
    Inc.\n       Rick Vetter            Motorola, Inc.\n       Sasha Medvinsky        Motorola,
    Inc.\n       Wim De Ketelaere       tComLabs\n       David De Reu           tComLabs\n
    \      Kristof Sercu          tComLabs\n       Roy Spitzer            Telogy Networks,
    Inc.\n       Itay Sherman           Texas Instruments, Inc.\n       Mauricio Sanchez
    \      Texas Instruments, Inc.\n       Shivakumar Thangapandi Texas Instruments,
    Inc.\n       Mike Heard             Consultant\n   The current editor (Sumanth
    Channabasappa) would like to recognize\n   Phillip Freyman and Eugene Nechamkin
    for their contributions towards\n   the international objects, and Stephane Bortzmeyer
    for assistance\n   with the ABNF.\n   The editor also extends appreciation to
    the IPCDN co-chairs (Jean-\n   Francois Mule, Rich Woundy) and Dan Romascanu for
    the numerous\n   reviews and valuable comments.  Special appreciation is extended
    to\n   Bert Wijnen, as the MIB doctor, for his ever-useful and constructive\n
    \  comments.\n"
  title: 7.  Acknowledgments
- contents:
  - "8.  Security Considerations\n   There are a number of management objects defined
    in this MIB module\n   with a MAX-ACCESS clause of read-write and/or read-create.
    \ Such\n   objects may be considered sensitive or vulnerable in some network\n
    \  environments.  The support for SET operations in a non-secure\n   environment
    without proper protection can have a negative effect on\n   network operations.\n
    \  The following Differentiated Services Code Point (DSCP) and mask\n   objects
    are used to differentiate between various types of traffic in\n   the service
    provider network:\n        pktcSigDefCallSigDscp\n        pktcSigDefMediaStreamDscp\n
    \  These objects may contain information that may be sensitive from a\n   business
    perspective.  For example, they may represent a customer's\n   service contract
    that a service provider chooses to apply to a\n   customer's ingress or egress
    traffic.  If these objects are SET\n   maliciously, it may permit unmarked or
    inappropriately marked\n   signaling and media traffic to enter the service provider
    network,\n   resulting in unauthorized levels of service for customers.\n   The
    following objects determine ring cadence, repeatable\n   characteristics, signal
    duration, and caller id subscriber line\n   protocol for telephony operation:\n
    \       pktcSigDevR0Cadence\n        pktcSigDevR1Cadence\n        pktcSigDevR2Cadence\n
    \       pktcSigDevR3Cadence\n        pktcSigDevR4Cadence\n        pktcSigDevR5Cadence\n
    \       pktcSigDevR6Cadence\n        pktcSigDevR7Cadence\n        pktcSigDevRgCadence\n
    \       pktcSigDevRsCadence\n        pktcSigDevCidSigProtocol\n        pktcSigDevVmwiSigProtocol\n
    \       pktcSigPulseSignalDuration\n        pktcSigPulseSignalPauseDuration\n
    \  If these objects are SET maliciously, it may result in unwanted\n   operation,
    or a failure to obtain telephony service from client (MTA)\n   devices.\n   The
    objects in the pktcSigEndPntConfigTable are used for endpoint\n   signaling.  The
    pktcSigEndPntConfigCallAgentId object contains the\n   name of the call agent,
    which includes the call agent Fully Qualified\n   Domain Name (FQDN).  If this
    object is SET maliciously, the MTA will\n   not be able to communicate with the
    call agent, resulting in a\n   disruption of telephony service.  The\n   pktcSigEndPntConfigCallAgentUdpPort
    object identifies the UDP port\n   for NCS traffic.  If this object is SET maliciously,
    the call agent\n   will not receive NCS traffic from the MTA, also resulting in
    a\n   disruption of telephony service.\n   Some of the readable objects in this
    MIB module (i.e., objects with a\n   MAX-ACCESS other than not-accessible) may
    be considered sensitive or\n   vulnerable in some network environments.  It is
    thus important to\n   control even GET and/or NOTIFY access to these objects and
    possibly\n   to even encrypt the values of these objects when sending them over\n
    \  the network via SNMP.  The most sensitive is\n   pktcSigEndPntStatusCallIpAddress
    within pktcSigEndPntConfigTable.\n   This information itself may be valuable to
    would-be attackers.  Other\n   MIB Objects of similar sensitivity include pktcSigEndPntStatusError,\n
    \  which can provide useful information to MTA impersonators, and\n   pktcSigDevCodecMax,
    which can provide useful information for planning\n   Denial of Service (DoS)
    attacks on MTAs.\n   SNMP versions prior to SNMPv3 did not include adequate security.\n
    \  Even if the network itself is secure (for example by using IPsec),\n   even
    then, there is no control as to who on the secure network is\n   allowed to access
    and GET/SET (read/change/create/delete) the objects\n   in this MIB module.\n
    \  It is RECOMMENDED that implementers consider the security features as\n   provided
    by the SNMPv3 framework (see [RFC3410], section 8),\n   including full support
    for the SNMPv3 cryptographic mechanisms (for\n   authentication and privacy).\n
    \  Further, deployment of SNMP versions prior to SNMPv3 is NOT\n   RECOMMENDED.
    \ Instead, it is RECOMMENDED to deploy SNMPv3 and to\n   enable cryptographic
    security.  It is then a customer/operator\n   responsibility to ensure that the
    SNMP entity giving access to an\n   instance of this MIB module is properly configured
    to give access to\n   the objects only to those principals (users) that have legitimate\n
    \  rights to indeed GET or SET (change/create/delete) them.\n"
  title: 8.  Security Considerations
- contents:
  - "9.  IANA Considerations\n   The MIB module in this document uses the following
    IANA-assigned\n   OBJECT IDENTIFIER value recorded in the SMI Numbers registry:\n
    \  Descriptor     OBJECT IDENTIFIER Value\n   ----------     -----------------------\n
    \  pktcIetfSigMib     { mib-2 169 }\n"
  title: 9.  IANA Considerations
- contents:
  - '10.  References

    '
  - contents:
    - "10.1. Normative References\n   [PKT-SP-MIB-SIG-1.0]\n                  PacketCable(TM)
      1.0 Signaling MIB Specification,\n                  Issued, PKT-SP-MIB-SIG-I09-050812,
      August 2005.\n                  http://www.packetcable.com/specifications/\n
      \                 http://www.cablelabs.com/specifications/archives\n   [PKT-SP-MIB-SIG-1.5]\n
      \                 PacketCable(TM) 1.5 Signaling MIB Specification,\n                  Issued,
      PKT-SP-MIB-SIG1.5-I01-050128, January 2005.\n                  http://www.packetcable.com/specifications/\n
      \                 http://www.cablelabs.com/specifications/archives\n   [PKT-SP-SEC]
      \  PacketCable Security Specification, Issued, PKT-SP-\n                  SEC-I12-050812,
      August 2005.\n                  http://www.packetcable.com/specifications/\n
      \                 http://www.cablelabs.com/specifications/archives\n   [ITU-T-J169]
      \  IPCablecom Network Call Signaling (NCS) MIB\n                  requirements,
      J.169, ITU-T, March, 2001.\n   [RFC2119]      Bradner, S., \"Key words for use
      in RFCs to Indicate\n                  Requirement Levels\", BCP 14, RFC 2119,
      March 1997.\n   [RFC2578]      McCloghrie, K., Perkins, D., and J. Schoenwaelder,\n
      \                 \"Structure of Management Information Version 2\n                  (SMIv2)\",
      STD 58, RFC 2578, April 1999.\n   [RFC2579]      McCloghrie, K., Perkins, D.,
      and J. Schoenwaelder,\n                  \"Textual Conventions for SMIv2\",
      STD 58, RFC 2579,\n                  April 1999.\n   [RFC2580]      McCloghrie,
      K., Perkins, D., and J. Schoenwaelder,\n                  \"Conformance Statements
      for SMIv2\", STD 58, RFC 2580,\n                  April 1999.\n   [RFC3289]
      \     Baker, F., Chan, K., and A. Smith, \"Management\n                  Information
      Base for the Differentiated Services\n                  Architecture\", RFC
      3289, May 2002.\n   [RFC4001]      Daniele, M., Haberman, B., Routhier, S.,
      and J.\n                  Schoenwaelder, \"Textual Conventions for Internet\n
      \                 Network Addresses\", RFC 4001, February 2005.\n   [RFC3411]
      \     Harrington, D., Presuhn, R., and B. Wijnen, \"An\n                  Architecture
      for Describing Simple Network Management\n                  Protocol (SNMP)
      Management Frameworks\", STD 62, RFC\n                  3411, December 2002.\n
      \  [RFC2863]      McCloghrie, K. and F. Kastenholz, \"The Interfaces\n                  Group
      MIB\", RFC 2863, June 2000.\n   [PKT-SP-CODEC] PacketCable Audio/Video Codecs
      Specification PKT-SP-\n                  CODEC-IO5-040113.\n   [PKT-SP-MGCP]
      \ PacketCable Network-Based Call Signaling Protocol\n                  Specification
      PKT-SP-EC-MGCP-I10-040402.\n   [PKT-SP-PROV]  PacketCable MTA Device Provisioning
      Specification\n                  PKT-SP-PROV-I10-040730.\n"
    title: 10.1. Normative References
  - contents:
    - "10.2.  Informative References\n   [RFC3410]      Case, J., Mundy, R., Partain,
      D., and B. Stewart,\n                  \"Introduction and Applicability Statements
      for\n                  Internet-Standard Management Framework\", RFC 3410,\n
      \                 December 2002.\n   [RFC3435]      Andreasen, F. and B. Foster,
      \"Media Gateway Control\n                  Protocol (MGCP) Version 1.0\", RFC
      3435, January 2003.\n   [RFC5234]      Crocker, D., Ed., and P. Overell, \"Augmented
      BNF for\n                  Syntax Specifications: ABNF\", STD 68, RFC 5234,\n
      \                 January 2008.\n   [RFC4682]      Nechamkin, E. and J-F. Mule,
      \"Multimedia Terminal\n                  Adapter (MTA) Management Information
      Base for\n                  PacketCable- and IPCablecom-Compliant Devices\",
      RFC\n                  4682, December 2006.\n   [ETSI-TS-101-909-4]\n                  ETSI
      TS 101 909-4:\"Access and Terminals (AT); Digital\n                  Broadband
      Cable Access to the Public\n                  Telecommunications Network; IP
      Multimedia Time\n                  Critical Services; Part 4: Network Call Signaling\n
      \                 Protocol\".\n   [ETSI-TS-101-909-9]\n                  ETSI
      TS 101 909-9:\"Access and Terminals (AT); Digital\n                  Broadband
      Cable Access to the Public\n                  Telecommunications Network; IP
      Multimedia Time\n                  Critical Services; Part 9: IPCablecom Network
      Call\n                  Signalling (NCS) MIB Requirements\".\n   [ETSI-EN-300-001]\n
      \                 ETSI EN 300-001 V1.5.1 (1998-10):\"European Standard\n                  (Telecommunications
      series) Attachments to Public\n                  Switched Telephone Network
      (PSTN); General technical\n                  requirements for equipment connected
      to an analogue\n                  subscriber interface in the PSTN; Chapter
      3: Ringing\n                  signal characteristics (national deviations are
      in\n                  Table 3.1.1)\".\n   [ETSI-EN-300-324-1]\n                  ETSI
      EN 300 324-1 V2.1.1 (2000-04):\"V Interfaces at\n                  the digital
      Loop Exchange (LE); V5.1 interface for the\n                  support of Access
      Network (AN); Part 1: V5.1 interface\n                  specification\".\n   [ETSI-EN-300-659-1]\n
      \                 ETSI EN 300 659-1: \"Public Switched Telephone Network\n                  (PSTN);
      Subscriber line protocol over the local loop\n                  for display
      (and related) services; Part 1: On hook\n                  data transmission\".\n
      \  [ITU-T-E.180]  ITU-T E.180: \"Various Tones Used in National Networks,\n
      \                 Supplement 2 to Recommendation E.180\".\n   [ETSI-TR-101-183]\n
      \                 ETSI TR-101-183: \"Public Switched Telephone Network\n                  (PSTN)
      Analogue Ringing Signals\".\n"
    title: 10.2.  Informative References
  title: 10.  References
- contents:
  - "Authors' Addresses\n   Gordon Beacham\n   Motorola, Inc.\n   6450 Sequence Drive,
    Bldg. 1\n   San Diego, CA 92121, USA\n   Phone: +1 858-404-2334\n   EMail: gordon.beacham@motorola.com\n
    \  Satish Kumar Mudugere Eswaraiah\n   Texas Instruments India (P) Ltd.,\n   Golf
    view, Wind Tunnel Road\n   Murugesh Palya\n   Bangalore 560 017, INDIA\n   Phone:
    +91 80 5269451\n   EMail: satish.kumar@ti.com\n   Sumanth Channabasappa\n   Cable
    Television Laboratories, Inc.\n   858 Coal Creek Circle,\n   Louisville, CO 80027,
    USA\n   Phone: +1 303-661-3307\n   EMail: Sumanth@cablelabs.com\n"
  title: Authors' Addresses
- contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document
    is subject to the rights, licenses and restrictions\n   contained in BCP 78, and
    except as set forth therein, the authors\n   retain all their rights.\n   This
    document and the information contained herein are provided on an\n   \"AS IS\"
    basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE INTERNET ENGINEERING
    TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED, INCLUDING BUT NOT
    LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT INFRINGE
    ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
