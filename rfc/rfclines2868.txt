Abstract This document defines a set of RADIUS attributes designed to support the provision of compulsory tunneling in dial up networks.
Many applications of tunneling protocols such as L2TP involve dial up network access.
Some, such as the provision of access to corporate intranets via the Internet, are characterized by voluntary tunneling: the tunnel is created at the request of the user for a specific purpose.
Other applications involve compulsory tunneling: the tunnel is created without any action from the user and without allowing the user any choice in the matter.
In order to provide this functionality, new RADIUS attributes are needed to carry the tunneling information from the RADIUS server to the tunnel end points; this document defines those attributes.
Specific recommendations for, and examples of, the application of these attributes for L2TP can be found in RFC 2809.
In this document, the key words "MAY", "MUST, "MUST NOT", "optional", "recommended", "SHOULD", and "SHOULD NOT", are to be interpreted as described in [14].
Attributes Multiple instances of each of the attributes defined below may be included in a single RADIUS packet.
In this case, the attributes to be applied to any given tunnel SHOULD all contain the same value in their respective Tag fields; otherwise, the Tag field SHOULD NOT be used.
If the RADIUS server returns attributes describing multiple tunnels then the tunnels SHOULD be interpreted by the tunnel initiator as alternatives and the server SHOULD include an instance of the Tunnel Preference Attribute in the set of Attributes pertaining to each alternative tunnel.
Similarly, if the RADIUS client includes multiple sets of tunnel Attributes in an Access Request packet, all the Attributes pertaining to a given tunnel SHOULD contain the same value in their respective Tag fields and each set SHOULD include an appropriately valued instance of the Tunnel Preference Attribute.
This Attribute indicates the tunneling protocol(s) to be used (in the case of a tunnel initiator) or the the tunneling protocol in use (in the case of a tunnel terminator).
It MAY be included in Access Request, Access Accept and Accounting Request packets.
If the Tunnel Type Attribute is present in an Access Request packet sent from a tunnel initiator, it SHOULD be taken as a hint to the RADIUS server as to the tunnelling protocols supported by the tunnel end point; the RADIUS server MAY ignore the hint, however.
A tunnel initiator is not required to implement any of these tunnel types; if a tunnel initiator receives an Access Accept packet which contains only unknown or unsupported Tunnel Types, the tunnel initiator MUST behave as though an Access Reject had been received instead.
If the Tunnel Type Attribute is present in an Access Request packet sent from a tunnel terminator, it SHOULD be taken to signify the tunnelling protocol in use.
In this case, if the RADIUS server determines that the use of the communicated protocol is not authorized, it MAY return an Access Reject packet.
If a tunnel terminator receives an Access Accept packet which contains one or more Tunnel Type Attributes, none of which represent the tunneling protocol in use, the tunnel terminator SHOULD behave as though an Access Reject had been received instead.
A summary of the Tunnel Type Attribute format is shown below.
The fields are transmitted from left to right. 0
Type 64 for Tunnel Type Length
The Tag field is one octet in length and is intended to provide a means of grouping attributes in the same packet which refer to the same tunnel.
Valid values for this field are 0x01 through 0x1F, inclusive.
If the Tag field is unused, it MUST be zero (0x00).
The Value field is three octets and contains one of the following values, indicating the type of tunnel to be started.
The Tunnel Medium Type Attribute indicates which transport medium to use when creating a tunnel for those protocols (such as L2TP) that can operate over multiple transports.
It MAY be included in both Access Request and Access Accept packets; if it is present in an Access Request packet, it SHOULD be taken as a hint to the RADIUS server as to the tunnel media supported by the tunnel end  point.
The RADIUS server MAY ignore the hint, however.
A summary of the Tunnel Medium Type Attribute format is given below.
The fields are transmitted left to right. 0
Type 65 for Tunnel Medium Type Length
The Tag field is one octet in length and is intended to provide a means of grouping attributes in the same packet which refer to the same tunnel.
Valid values for this field are 0x01 through 0x1F, inclusive.
If the Tag field is unused, it MUST be zero (0x00).
The Value field is three octets and contains one of the values listed under "Address Family Numbers" in [14].
For the sake of convenience, a relevant excerpt of this list is reproduced below.
This Attribute contains the address of the initiator end of the tunnel.
It MAY be included in both Access Request and Access  Accept
packets to indicate the address from which a new tunnel is to be initiated.
If the Tunnel Client Endpoint Attribute is included in an Access Request packet, the RADIUS server should take the value as a hint; the server is not obligated to honor the hint, however.
This Attribute SHOULD be included in Accounting  Request packets which contain Acct Status Type attributes with values of either Start or Stop, in which case it indicates the address from which the tunnel was initiated.
This Attribute, along with the Tunnel Server Endpoint and Acct Tunnel Connection  ID attributes, may be used to provide a globally unique means to identify a tunnel for accounting and auditing purposes.
A summary of the Tunnel Client Endpoint Attribute format is shown below.
The fields are transmitted from left to right. 0
Type 66 for Tunnel Client Endpoint.
The Tag field is one octet in length and is intended to provide a means of grouping attributes in the same packet which refer to the same tunnel.
If the value of the Tag field is greater than 0x00 and less than or equal to 0x1F, it SHOULD be interpreted as indicating which tunnel (of several alternatives) this attribute pertains.
If the Tag field is greater than 0x1F, it SHOULD be interpreted as the first byte of the following String field.
String The format of the address represented by the String field depends upon the value of the Tunnel Medium Type attribute.
If Tunnel Medium Type is IPv4 (1), then this string is either the fully qualified domain name (FQDN) of the tunnel client machine, or it is a "dotted decimal" IP address.
Conformant implementations MUST support the dotted decimal format and SHOULD support the FQDN format for IP addresses.
If Tunnel Medium Type is IPv6 (2), then this string is either the FQDN of the tunnel client machine, or it is a text representation of the address in either the preferred or alternate form [17].
Conformant implementations MUST support the preferred form and SHOULD support both the alternate text form and the FQDN format for IPv6 addresses.
If Tunnel Medium Type is neither IPv4 nor IPv6, this string is a tag referring to configuration data local to the RADIUS client that describes the interface and medium specific address to use.
This Attribute indicates the address of the server end of the tunnel.
The Tunnel Server Endpoint Attribute MAY be included (as a hint to the RADIUS server) in the Access Request packet and MUST be included in the Access Accept packet if the initiation of a tunnel is desired.
It SHOULD be included in Accounting Request packets which contain Acct Status Type attributes with values of either Start or Stop and which pertain to a tunneled session.
This Attribute, along with the Tunnel Client Endpoint and Acct  Tunnel Connection ID Attributes [11], may be used to provide a globally unique means to identify a tunnel for accounting and auditing purposes.
A summary of the Tunnel Server Endpoint Attribute format is shown below.
The fields are transmitted from left to right. 0
Type 67 for Tunnel Server Endpoint.
The Tag field is one octet in length and is intended to provide a means of grouping attributes in the same packet which refer to the same tunnel.
If the value of the Tag field is greater than 0x00 and less than or equal to 0x1F, it SHOULD be interpreted as indicating which tunnel (of several alternatives) this attribute pertains.
If the Tag field is greater than 0x1F, it SHOULD be interpreted as the first byte of the following String field.
String The format of the address represented by the String field depends upon the value of the Tunnel Medium Type attribute.
If Tunnel Medium Type is IPv4 (1), then this string is either the fully qualified domain name (FQDN) of the tunnel client machine, or it is a "dotted decimal" IP address.
Conformant implementations MUST support the dotted decimal format and SHOULD support the FQDN format for IP addresses.
If Tunnel Medium Type is IPv6 (2), then this string is either the FQDN of the tunnel client machine, or it is a text representation of the address in either the preferred or alternate form [17].
Conformant implementations MUST support the preferred form and SHOULD support both the alternate text form and the FQDN format for IPv6 addresses.
If Tunnel Medium Type is not IPv4 or IPv6, this string is a tag referring to configuration data local to the RADIUS client that describes the interface and medium specific address to use.
This Attribute may contain a password to be used to authenticate to a remote server.
It may only be included in an Access Accept packet.
A summary of the Tunnel Password Attribute format is shown below.
The fields are transmitted from left to right. 0
Type 69 for Tunnel Password Length
The Tag field is one octet in length and is intended to provide a means of grouping attributes in the same packet which refer to the same tunnel.
Valid values for this field are 0x01 through 0x1F, inclusive.
If the value of the Tag field is greater than 0x00 and less than or equal to 0x1F, it SHOULD be interpreted as indicating which tunnel (of several alternatives)
this attribute pertains; otherwise, the Tag field SHOULD be ignored.
The Salt field is two octets in length and is used to ensure the uniqueness of the encryption key used to encrypt each instance of the Tunnel Password attribute occurring in a given Access Accept packet.
The most significant bit (leftmost) of the Salt field MUST be set (1).
The contents of each Salt field in a given Access Accept packet MUST be unique.
The plaintext String field consists of three logical sub fields: the Data Length and Password sub fields (both of which are required), and the optional Padding sub field.
The Data Length sub field is one octet in length and contains the length of the unencrypted Password sub field.
The Password sub field contains the actual tunnel password.
If the combined length (in octets) of the unencrypted Data Length and Password sub fields is not an even multiple of 16, then the Padding sub field MUST be present.
If it is present, the length of the Padding sub field is variable, between 1 and 15 octets.
The String field MUST be encrypted as follows, prior to transmission: Construct a plaintext version of the String field by concatenating the Data Length and Password sub fields.
If necessary, pad the resulting string until its length (in octets) is an even multiple of 16.
It is recommended that zero octets (0x00) be used for padding.
the shared secret S, the pseudo random 128 bit Request Authenticator (from the corresponding Access Request packet) R, and the contents of the Salt field A.  Break P into 16 octet chunks p(1), p(2)...p(i), where i
Call the ciphertext blocks c(1), c(2)...c(i) and the final ciphertext C. Intermediate values b(1), b(2)...c(i) are required.
On receipt, the process is reversed to yield the plaintext String.
Tunnel Private Group ID Description
This Attribute indicates the group ID for a particular tunneled session.
The Tunnel Private Group ID Attribute MAY be included in the Access Request packet
if the tunnel initiator can pre  determine the group resulting from a particular connection and SHOULD be included in the Access Accept packet if this tunnel session is to be treated as belonging to a particular private group.
Private groups may be used to associate a tunneled session with a particular group of users.
For example, it may be used to facilitate routing of unregistered IP addresses through a particular interface.
It SHOULD be included in Accounting Request packets which contain Acct Status Type attributes with values of either Start or Stop and which pertain to a tunneled session.
A summary of the Tunnel Private Group ID Attribute format is shown below.
The fields are transmitted from left to right. 0
Type 81 for Tunnel Private Group ID.
The Tag field is one octet in length and is intended to provide a means of grouping attributes in the same packet which refer to the same tunnel.
If the value of the Tag field is greater than 0x00 and less than or equal to 0x1F, it SHOULD be interpreted as indicating which tunnel (of several alternatives) this attribute pertains.
If the Tag field is greater than 0x1F, it SHOULD be interpreted as the first byte of the following String field.
String This field must be present.
The group is represented by the String field.
There is no restriction on the format of group IDs.
This Attribute is used to indicate to the tunnel initiator the particular tunnel to which a session is to be assigned.
Some tunneling protocols, such as PPTP and L2TP, allow for sessions between the same two tunnel endpoints to be multiplexed over the same tunnel and also for a given session to utilize its own dedicated tunnel.
This attribute provides a mechanism for RADIUS to be used to inform the tunnel initiator (e.g. PAC, LAC) whether to assign the session to a multiplexed tunnel or to a separate tunnel.
Furthermore, it allows for sessions sharing multiplexed tunnels to be assigned to different multiplexed tunnels.
A particular tunneling implementation may assign differing characteristics to particular tunnels.
For example, different tunnels may be assigned different QOS parameters.
Such tunnels may be used to carry either individual or multiple sessions.
The Tunnel Assignment ID attribute thus allows the RADIUS server to indicate that a particular session is to be assigned to a tunnel that provides an appropriate level of service.
It is expected that any QOS related RADIUS tunneling attributes defined in the future that accompany this attribute
will be associated by the tunnel initiator with the ID given by this attribute.
In the meantime, any semantic given to a particular ID string is a matter left to local configuration in the tunnel initiator.
The Tunnel Assignment ID attribute is of significance only to RADIUS and the tunnel initiator.
The ID it specifies is intended to be of only local use to RADIUS and the tunnel initiator.
The ID assigned by the tunnel initiator is not conveyed to the tunnel peer.
This attribute MAY be included in the Access Accept.
The tunnel initiator receiving this attribute MAY choose to ignore it and assign the session to an arbitrary multiplexed or non multiplexed tunnel between the desired endpoints.
This attribute SHOULD also be included in Accounting Request packets which contain Acct  Status Type attributes with values of either Start or Stop and which pertain to a tunneled session.
If a tunnel initiator supports the Tunnel Assignment ID Attribute, then it should assign a session to a tunnel in the following manner:
If this attribute is present and a tunnel exists between the specified endpoints with the specified ID, then the session should be assigned to that tunnel.
If this attribute is present and no tunnel exists between the specified endpoints with the specified ID, then a new tunnel should be established for the session and the specified ID should be associated with the new tunnel.
If this attribute is not present, then the session is assigned to an unnamed tunnel.
If an unnamed tunnel does not yet exist between the specified endpoints then it is established and used for this and subsequent sessions established without the Tunnel Assignment ID attribute.
A tunnel initiator MUST NOT assign a session for which a Tunnel Assignment ID Attribute was not specified to a named tunnel (i.e. one that was initiated by a session specifying this attribute).
Note that the same ID may be used to name different tunnels if such tunnels are between different endpoints.
A summary of the Tunnel Assignment ID Attribute format is shown below.
The fields are transmitted from left to right. 0
Type 82 for Tunnel Assignment ID.
The Tag field is one octet in length and is intended to provide a means of grouping attributes in the same packet which refer to the same tunnel.
If the value of the Tag field is greater than 0x00 and less than or equal to 0x1F, it SHOULD be interpreted as indicating which tunnel (of several alternatives) this attribute pertains.
If the Tag field is greater than 0x1F, it SHOULD be interpreted as the first byte of the following String field.
String This field must be present.
The tunnel ID is represented by the String field.
There is no restriction on the format of the ID.
Tunnel Client Auth ID Description This Attribute specifies the name used by the tunnel initiator during the authentication phase of tunnel establishment.
The Tunnel Client Auth ID Attribute MAY be included (as a hint to the RADIUS server) in the Access Request packet, and MUST be included in the Access Accept packet if an authentication name other than the default is desired.
This Attribute SHOULD be included in Accounting Request packets which contain Acct Status Type attributes with values of either Start or Stop and which pertain to a tunneled session.
A summary of the Tunnel Client Auth ID Attribute format is shown below.
The fields are transmitted from left to right. 0
Type 90 for Tunnel Client Auth ID.
The Tag field is one octet in length and is intended to provide a means of grouping attributes in the same packet which refer to the same tunnel.
If the value of the Tag field is greater than 0x00 and less than or equal to 0x1F, it SHOULD be interpreted as indicating which tunnel (of several alternatives) this attribute pertains.
If the Tag field is greater than 0x1F, it SHOULD be interpreted as the first byte of the following String field.
String This field must be present.
The String field contains the authentication name of the tunnel initiator.
The authentication name SHOULD be represented in the UTF 8 charset.
Tunnel Server Auth ID Description This Attribute specifies the name used by the tunnel terminator during the authentication phase of tunnel establishment.
The Tunnel Client Auth ID Attribute MAY be included (as a hint to the RADIUS server) in the Access Request packet, and MUST be included in the Access Accept packet if an authentication name other than the default is desired.
This Attribute SHOULD be included in Accounting Request packets which contain Acct Status Type attributes with values of either Start or Stop and which pertain to a tunneled session.
A summary of the Tunnel Server Auth ID Attribute format is shown below.
The fields are transmitted from left to right. 0
Type 91 for Tunnel Server Auth ID.
The Tag field is one octet in length and is intended to provide a means of grouping attributes in the same packet which refer to the same tunnel.
If the value of the Tag field is greater than 0x00 and less than or equal to 0x1F, it SHOULD be interpreted as indicating which tunnel (of several alternatives) this attribute pertains.
If the Tag field is greater than 0x1F, it SHOULD be interpreted as the first byte of the following String field.
String This field must be present.
The String field contains the authentication name of the tunnel terminator.
The authentication name SHOULD be represented in the UTF 8 charset.
The following table provides a guide to which of the above attributes may be found in which kinds of packets, and in what quantity.
The following table defines the meaning of the above table entries. 0
This attribute MUST NOT be present in packet. 0
Zero or more instances of this attribute MAY be present in packet. 0
1   Zero or one instance of this attribute MAY be present in packet.
The Tunnel Password Attribute may contain information which should only be known to a tunnel endpoint.
However, the method used to hide the value of the attribute is such that intervening RADIUS proxies will have knowledge of the contents.
For this reason, the Tunnel  Password Attribute SHOULD NOT be included in Access Accept packets which may pass through (relatively) untrusted RADIUS proxies.
In addition, the Tunnel Password Attribute SHOULD NOT be returned to an unauthenticated client; if the corresponding Access Request packet did not contain a verified instance of the Signature Attribute [15], the Access Accept packet SHOULD NOT contain an instance of the Tunnel Password Attribute.
Tunnel protocols offer various levels of security, from none (e.g., PPTP) to strong (e.g., IPSec).
Note, however, that in the compulsory tunneling case any security measures in place only apply to traffic between the tunnel endpoints.
In particular, end users SHOULD NOT rely upon the security of the tunnel to protect their data; encryption and/or integrity protection of tunneled traffic MUST NOT be considered as a replacement for end to end security.
This document defines a number of "magic" numbers to be maintained by the IANA.
This section explains the criteria to be used by the IANA to assign additional numbers in each of these lists.
The following subsections describe the assignment policy for the namespaces defined elsewhere in this document.
Tunnel Type Attribute Values Values
12 of the Tunnel Type Attribute are defined in Section 5.1; the remaining values are available for assignment by the IANA with IETF Consensus [16].
Tunnel Medium Type Attribute Values Values
1 15 of the Tunnel Medium Type Attribute are defined in Section 5.2; the remaining values are available for assignment by the IANA with IETF Consensus [16].
The RADIUS Working Group can be contacted via the current chair: Carl Rigney Livingston Enterprises 4464
510 426 0770 EMail: cdr@livingston.com
