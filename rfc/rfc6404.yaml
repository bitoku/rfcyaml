- title: __initial_text__
  contents:
  - "        Session PEERing for Multimedia INTerconnect (SPEERMINT)\n           \
    \  Security Threats and Suggested Countermeasures\n"
- title: Abstract
  contents:
  - "Abstract\n   The Session PEERing for Multimedia INTerconnect (SPEERMINT) working\n\
    \   group (WG) provides a peering framework that leverages the building\n   blocks\
    \ of existing IETF-defined protocols such as SIP and ENUM for\n   the interconnection\
    \ between SIP Service Providers (SSPs).  The\n   objective of this document is\
    \ to identify and enumerate SPEERMINT-\n   specific threat vectors and to give\
    \ guidance for implementers on\n   selecting appropriate countermeasures.  Security\
    \ requirements for\n   SPEERMINT that have been derived from the threats detailed\
    \ in this\n   document can be found in RFC 6271; this document provides concrete\n\
    \   countermeasures to meet those SPEERMINT security requirements.  In\n   this\
    \ document, the different security threats related to SPEERMINT\n   are classified\
    \ into threats to the Lookup Function (LUF), the\n   Location Routing Function\
    \ (LRF), the Signaling Function (SF), and the\n   Media Function (MF) of a specific\
    \ SIP Service Provider.  Various\n   instances of the threats are briefly introduced\
    \ inside the\n   classification.  Finally, existing security solutions for SIP\
    \ and\n   RTP/RTCP (Real-time Transport Control Protocol) are presented to\n \
    \  describe countermeasures currently available for such threats.  Each\n   SSP\
    \ may have connections to one or more remote SSPs through peering\n   or transit\
    \ contracts.  A potentially compromised remote SSP that\n   attacks other SSPs\
    \ is out of the scope of this document; this\n   document focuses on attacks on\
    \ an SSP from outside the trust domain\n   such an SSP may have with other SSPs.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6404.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \   2. Security Threats Relevant to SPEERMINT ..........................5\n  \
    \    2.1. Threats to the Lookup Function (LUF) .......................5\n    \
    \       2.1.1. Threats to LUF Confidentiality ......................5\n      \
    \     2.1.2. Threats to LUF Integrity ............................6\n        \
    \   2.1.3. Threats to LUF Availability .........................6\n      2.2.\
    \ Threats to the Location Routing Function (LRF) .............6\n           2.2.1.\
    \ Threats to LRF Confidentiality ......................6\n           2.2.2. Threats\
    \ to LRF Integrity ............................7\n           2.2.3. Threats to\
    \ LRF Availability .........................7\n      2.3. Threats to the Signaling\
    \ Function (SF) .....................7\n           2.3.1. Threats to SF Confidentiality\
    \ .......................7\n           2.3.2. Threats to SF Integrity .............................8\n\
    \           2.3.3. Threats to SF Availability .........................10\n  \
    \    2.4. Threats to the Media Function (MF) ........................10\n    \
    \       2.4.1. Threats to MF Confidentiality ......................10\n      \
    \     2.4.2. Threats to MF Integrity ............................10\n        \
    \   2.4.3. Threats to MF Availability .........................11\n   3. Security\
    \ Requirements ..........................................11\n      3.1. Security\
    \ Requirements from SPEERMINT Requirements\n           Document ..................................................11\n\
    \      3.2. How to Fulfill the Security Requirements for SPEERMINT ....11\n  \
    \ 4. Suggested Countermeasures ......................................12\n    \
    \  4.1. Database Security BCPs ....................................14\n      4.2.\
    \ DNSSEC ....................................................14\n      4.3. DNS\
    \ Replication ...........................................15\n      4.4. Cross-Domain\
    \ Privacy Protection ...........................15\n      4.5. Secure Exchange\
    \ of SIP Messages ...........................15\n      4.6. Ingress Filtering\
    \ / Reverse-Path Filtering ................16\n      4.7. Strong Identity Assertion\
    \ .................................16\n      4.8. Reliable Border Element Pooling\
    \ ...........................17\n      4.9. Rate limit ................................................17\n\
    \      4.10. Topology Hiding ..........................................17\n  \
    \    4.11. Border Element Hardening .................................17\n    \
    \  4.12. Securing Session Establishment Data ......................18\n      4.13.\
    \ Encryption and Integrity Protection of Media Stream ......18\n   5. Conclusions\
    \ ....................................................18\n   6. Security Considerations\
    \ ........................................18\n   7. Acknowledgements ...............................................19\n\
    \   8. Informative References .........................................19\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   With Voice over IP (VoIP), the need for security is compounded\n\
    \   because there is the need to protect both the control plane and the\n   data\
    \ plane.  In a legacy telephone system, security is a more valid\n   assumption.\
    \  Intercepting conversations requires either physical\n   access to telephone\
    \ lines or a compromise to the Public Switched\n   Telephone Network (PSTN) nodes\
    \ or the office Private Branch eXchanges\n   (PBXs).  Only particularly security-sensitive\
    \ organizations bother to\n   encrypt voice traffic over traditional telephone\
    \ lines.  In contrast,\n   the risk of sending unencrypted data across the Internet\
    \ is more\n   significant (e.g., dual-tone multi-frequency (DTMF) tones\n   corresponding\
    \ to the credit card number).  An additional security\n   threat to Internet Telephony\
    \ comes from the fact that the signaling\n   devices may be addressed directly\
    \ by attackers as they use the same\n   underlying networking technology as the\
    \ multimedia data; traditional\n   telephone systems have the signaling network\
    \ separated from the data\n   network.  This is an increased security threat since\
    \ a hacker could\n   attack the signaling network and its servers with increased\
    \ damage\n   potential (call hijacking, call drop, Denial-of-Service (DoS) attacks\n\
    \   [RFC4732], etc.).  Therefore, there is a need to investigate the\n   different\
    \ security threats, to extract security-related requirements,\n   and to highlight\
    \ potential solutions on how to protect against such\n   threats.\n   The Session\
    \ PEERing for Multimedia INTerconnect (SPEERMINT) working\n   group provides a\
    \ peering framework that leverages the building blocks\n   of existing IETF-defined\
    \ protocols such as SIP and ENUM for the\n   interconnection between SIP servers\
    \ [RFC5486].  The objective of this\n   document is to identify and enumerate\
    \ SPEERMINT-specific threat\n   vectors and to give guidance for implementers\
    \ on selecting\n   appropriate countermeasures.  Security requirements for SPEERMINT\
    \ can\n   be found in RFC 6271 \"Requirements for SIP-Based Session Peering\"\n\
    \   [RFC6271].  These security requirements for SPEERMINT are derived\n   from\
    \ the threats that are detailed in this document; they have been\n   moved from\
    \ an earlier version of this document to the SPEERMINT\n   requirements document\
    \ [RFC6271].  In addition to being the base for\n   those security requirements,\
    \ this document provides to implementers\n   advice and examples for concrete\
    \ countermeasures on how to meet these\n   security requirements for SPEERMINT\
    \ with technical means.  The\n   SPEERMINT terminology outlined in [RFC5486] is\
    \ used throughout this\n   document.\n   In this document, the different security\
    \ threats related to SPEERMINT\n   are classified into threats to the Lookup Function\
    \ (LUF), the\n   Location Routing Function (LRF), the Signaling Function (SF),\
    \ and the\n   Media Function (MF) of a specific SIP Service Provider (SSP).\n\
    \   Various instances of the threats are briefly introduced inside the\n   classification.\
    \  Finally, existing security solutions for SIP and\n   RTP/RTCP are presented\
    \ to describe countermeasures currently\n   available for such threats.  Each\
    \ SSP may have connections to one or\n   more remote SSPs through peering or transit\
    \ contracts.  A potentially\n   compromised remote SSP that attacks other SSPs\
    \ is out of the scope of\n   this document; this document focuses on attacks on\
    \ an SSP from\n   outside the trust domain such an SSP may have with other SSPs.\n"
- title: 2.  Security Threats Relevant to SPEERMINT
  contents:
  - "2.  Security Threats Relevant to SPEERMINT\n   This section enumerates potential\
    \ security threats relevant to\n   SPEERMINT.  A taxonomy of VoIP security threats\
    \ is defined in\n   [VOIPSATAXONOMY].  This taxonomy is comprehensive and also\
    \ takes into\n   account non-VoIP-specific threats (e.g., loss of power, etc.).\n\
    \   Threats relevant to the boundaries of Layer 5 SIP networks are\n   extracted\
    \ from this taxonomy and mapped to the functions of the\n   SPEERMINT architecture\
    \ as defined in [RFC6406].  Moreover, additional\n   threats for the SPEERMINT\
    \ architecture are listed and detailed under\n   the same classification of SPEERMINT\
    \ functions and according to the\n   CIA (Confidentiality, Integrity, and Availability)\
    \ triad:\n   o  Lookup Function (LUF);\n   o  Location Routing Function (LRF);\n\
    \   o  Signaling Function (SF);\n   o  Media Function (MF).\n"
- title: 2.1.  Threats to the Lookup Function (LUF)
  contents:
  - "2.1.  Threats to the Lookup Function (LUF)\n   For a given request, the LUF provides\
    \ a mechanism to determine the\n   identity of the requested resource on the terminating\
    \ domain.  The\n   returned identity can be used to look up Session Establishment\
    \ Data\n   (SED) using the Location Routing Function (LRF).  In direct peerings,\n\
    \   the LUF is usually hosted locally, whereas in a federation context,\n   this\
    \ function may be offered by a third party.\n   If the LUF is hosted locally,\
    \ it is vulnerable to the same threats\n   that affect database systems in general.\
    \  If the SSP relies on a\n   remote third party to provide the LUF functionality,\
    \ confidentiality,\n   integrity, and authenticity of the responses are at risk.\n"
- title: 2.1.1.  Threats to LUF Confidentiality
  contents:
  - "2.1.1.  Threats to LUF Confidentiality\n   For a given request, the Lookup Function\
    \ (LUF) determines the target\n   domain to which the request should be routed.\
    \  The following attacks\n   are relevant with respect to eavesdropping on LUF\
    \ messages:\n   o  SIP URI and peering domain harvesting - an attacker can exploit\n\
    \      this weakness if the underlying database has a weak authentication\n  \
    \    system or if SIP messages are sent unencrypted, and then use the\n      gained\
    \ knowledge to launch other kinds of attacks.\n   o  Third-party information -\
    \ a LUF providing information to multiple\n      companies / third parties can\
    \ be attacked to obtain information\n      about third party peering configurations\
    \ and possible contracts.\n"
- title: 2.1.2.  Threats to LUF Integrity
  contents:
  - "2.1.2.  Threats to LUF Integrity\n   The underlying database or LUF messages\
    \ could be vulnerable to input/\n   output message modification attacks:\n   o\
    \  Injection attack - an attacker could manipulate statements\n      performed\
    \ on the database LUF messages sent to a third party.  A\n      specific version\
    \ of this attack is known as \"SQL injection\".  An\n      SQL injection is a\
    \ code insertion into the LUF due to incorrect\n      input validation.\n"
- title: 2.1.3.  Threats to LUF Availability
  contents:
  - "2.1.3.  Threats to LUF Availability\n   The underlying database or third party\
    \ LUF service could be\n   vulnerable to:\n   o  Denial-of-Service attacks - For\
    \ example, an attacker makes\n      incomplete requests causing the server to\
    \ create an idle state for\n      each of them, which causes memory to be exhausted.\n"
- title: 2.2.  Threats to the Location Routing Function (LRF)
  contents:
  - "2.2.  Threats to the Location Routing Function (LRF)\n   The LRF determines the\
    \ location of the Signaling Function (SF) for\n   the target domain of a given\
    \ request.  Optionally, it may return\n   additional SED.\n"
- title: 2.2.1.  Threats to LRF Confidentiality
  contents:
  - "2.2.1.  Threats to LRF Confidentiality\n   Similar to the LUF, the following\
    \ attacks are related to\n   eavesdropping on LRF messages:\n   o  URI harvesting\
    \ - the attacker harvests URIs and IP addresses of\n      the existing User Endpoints\
    \ (UEs) by issuing a multitude of\n      location requests.  Direct intrusion\
    \ against vulnerable UEs or\n      telemarketing are possible attack scenarios\
    \ that would use the\n      gained knowledge.\n   o  SIP device enumeration -\
    \ the attacker discovers the IP address of\n      each intermediate signaling\
    \ device by looking at the Via and\n      Record-Route headers of a SIP message.\
    \  Targeting the discovered\n      devices with subsequent attacks is a possible\
    \ attack scenario.\n"
- title: 2.2.2.  Threats to LRF Integrity
  contents:
  - "2.2.2.  Threats to LRF Integrity\n   An attacker may modify messages, e.g., by\
    \ feeding bogus information\n   to the LRF, if the routing data is not correctly\
    \ validated or sent\n   unencrypted.  Dynamic call routing discovery and establishment,\
    \ as in\n   the scope of SPEERMINT, introduce opportunities for attacks such as\n\
    \   the following:\n   o  Man-in-the-Middle attacks - the attacker inserts or\
    \ has already\n      inserted an unauthorized node in the signaling path modifying\
    \ the\n      SED.  The result is that the attacker is then able to read,\n   \
    \   insert, and modify the multimedia communications.\n   o  Incorrect destinations\
    \ - the attacker redirects the calls to an\n      incorrect destination with the\
    \ purpose of establishing fraud\n      communications like voice phishing or DoS\
    \ attacks.\n"
- title: 2.2.3.  Threats to LRF Availability
  contents:
  - "2.2.3.  Threats to LRF Availability\n   The LRF can be the object of DoS attacks.\
    \  DoS attacks to the LRF can\n   be carried out by sending a large number of\
    \ queries to the LRF or\n   LUF, with the result of preventing an Originating\
    \ SSP from looking up\n   call routing data of any URI outside its administrative\
    \ domain.  As\n   an alternative, the attacker could target the DNS to disable\n\
    \   resolution of SIP addresses.\n"
- title: 2.3.  Threats to the Signaling Function (SF)
  contents:
  - "2.3.  Threats to the Signaling Function (SF)\n   The Signaling Function involves\
    \ a great number of sensitive\n   information.  Through the Signaling Function,\
    \ User Agents (UAs)\n   assert identities and operators authorize billable resources.\n\
    \   Correct and trusted operation of Signaling Function is essential for\n   service\
    \ providers.  This section discusses potential security threats\n   to the Signaling\
    \ Function to detail the possible attack vectors.\n"
- title: 2.3.1.  Threats to SF Confidentiality
  contents:
  - "2.3.1.  Threats to SF Confidentiality\n   SF traffic is vulnerable to eavesdropping,\
    \ in particular, when the\n   data is moved across multiple SSPs having different\
    \ levels of\n   security policies.  Threats for the SF confidentiality are listed\n\
    \   here:\n   o  Call pattern analysis - the attacker tracks the call patterns\
    \ of\n      the users violating his/her privacy (e.g., revealing the social\n\
    \      network of various users, the daily phone usage, etc.); also,\n      rival\
    \ SSPs may infer information about the customer base of other\n      SSPs in this\
    \ way;\n   o  Password cracking - the challenge-response authentication\n    \
    \  mechanism of SIP Digest can be attacked with offline dictionary\n      attacks.\
    \  With such attacks, an attacker tries to exploit weak\n      passwords that\
    \ are used by incautious users.\n   o  Network discovery - the attacker may learn\
    \ information about the\n      internal network structure of a peering partner\
    \ that is directly\n      or indirectly connected by looking at SIP routing information\n\
    \      (i.e, Record-Route, Via or Contact headers).\n"
- title: 2.3.2.  Threats to SF Integrity
  contents:
  - "2.3.2.  Threats to SF Integrity\n   The integrity of the SF can be violated using\
    \ SIP request spoofing,\n   SIP reply spoofing, and SIP message tampering.\n"
- title: 2.3.2.1.  SIP Request Spoofing
  contents:
  - "2.3.2.1.  SIP Request Spoofing\n   Most SIP request spoofing attacks first require\
    \ SIP message\n   eavesdropping.  However, some of these attacks can be also performed\n\
    \   by estimating certain fields in SIP headers (e.g., by exploiting the\n   fact\
    \ that weak implementations may generate predictable SIP Dialog\n   parameters)\
    \ or exploiting broken implementations that do not properly\n   verify the content\
    \ of certain headers.  Threats in this category are\n   as follows:\n   o  session\
    \ teardown - an attacker can send CANCEL/BYE messages in\n      order to tear\
    \ down an existing call at the SIP layer; for such an\n      attack, the attacker\
    \ either needs to know (e.g., by eavesdropping\n      a SIP INVITE message) the\
    \ SIP Dialog of the call to be hijacked\n      (To-tag, From-tag, Call-ID) or\
    \ alternatively may rely on SIP\n      implementations that do not properly authenticate\
    \ requests based\n      on the SIP Dialog;\n   o  Billing fraud - the attacker\
    \ can modify and replay an intercepted\n      INVITE request in order to bill\
    \ a call to a victim UE and avoid\n      paying for the phone call;\n   o  User\
    \ ID spoofing - SSPs are responsible for asserting the\n      legitimacy of a\
    \ user ID; if an SSP fails to achieve the level of\n      identity assertion that\
    \ the federation to which it belongs\n      expects, it may create an entry point\
    \ for attackers to conduct\n      user ID spoofing attacks;\n   o  Unwanted requests\
    \ - the attacker sends requests to interfere with\n      regular operation, e.g.,\
    \ by sending a REGISTER request in order to\n      hijack calls.  The SPEERMINT\
    \ architecture as defined in [RFC6406]\n      does not require registrations between\
    \ the Signaling Functions\n      (SFs) of the connected SSPs.  Hence, superfluous\
    \ requests like\n      REGISTERs should be rejected.\n"
- title: 2.3.2.2.  SIP Reply Spoofing
  contents:
  - "2.3.2.2.  SIP Reply Spoofing\n   Threats in this category are as follows:\n \
    \  o  Forged 199 Response - the attacker sends a forged 199 response to\n    \
    \  terminate an early dialog.  The forged response will not terminate\n      the\
    \ entire session but may alter the direction of the session;\n   o  Forged 200\
    \ Response - having seen the contents of an INVITE\n      request, an eavesdropper\
    \ can inject a 200 response, affecting the\n      processing of the transaction\
    \ of all proxies between the injection\n      point and the originating UA and\
    \ at the originating UA itself.  In\n      the extreme case, this can result in\
    \ a hijacked call.  In many\n      cases, however, such an attack will leave signaling\
    \ artifacts that\n      may allow it to be detected (e.g., the element receiving\
    \ the\n      forged 200 response may also receive other SIP reply messages from\n\
    \      the actual terminating UE);\n   o  Forged 302 Response - having seen the\
    \ contents of an INVITE\n      request, an eavesdropper could also inject a forged\
    \ \"302 Moved\n      Temporarily\" reply, affecting the processing of the transaction\
    \ at\n      intermediate entities and the originating UA.  This may allow the\n\
    \      attacker to successfully redirect the call to any destination UE\n    \
    \  of his choosing;\n   o  Forged 404 Response - having seen the contents of an\
    \ INVITE\n      request, an eavesdropper could also inject a forged \"404 Not\n\
    \      Found\" reply, affecting the processing of the transaction at\n      intermediate\
    \ entities and the originating UA.  Such an attack may\n      result in disrupting\
    \ the call establishment.\n"
- title: 2.3.2.3.  SIP Message Tampering
  contents:
  - "2.3.2.3.  SIP Message Tampering\n   This threat involves the alteration of important\
    \ field values in a\n   SIP message or in the Session Description Protocol (SDP)\
    \ body.\n   Examples of this threat could be the dropping or modification of\n\
    \   handshake packets in order to avoid the establishment of a secure RTP\n  \
    \ session (SRTP).  The same approach could be used to degrade the\n   quality\
    \ of media session by letting a UE negotiate a poor quality\n   codec.\n"
- title: 2.3.3.  Threats to SF Availability
  contents:
  - "2.3.3.  Threats to SF Availability\n   o  Flooding attack - a Signaling Path\
    \ Border Element (SBE) is\n      susceptible to message flooding attacks that\
    \ may come from\n      interconnected SSPs;\n   o  Session blackholing - the attacker\
    \ (assumed to be able to make\n      Man-in-the-Middle attacks) intentionally\
    \ drops essential packets,\n      e.g., INVITEs, to prevent certain calls from\
    \ being established;\n   o  SIP Fuzzing attack - fuzzing tests and software can\
    \ be used by\n      attackers to discover and exploit vulnerabilities of a SIP\
    \ entity.\n      This attack may result in crashing a SIP entity.\n"
- title: 2.4.  Threats to the Media Function (MF)
  contents:
  - "2.4.  Threats to the Media Function (MF)\n   The Media Function (MF) is responsible\
    \ for the actual delivery of\n   multimedia communication between the users and\
    \ carries sensitive\n   information.  Through the media function, the UE can establish\
    \ secure\n   communications and monitor the quality of conversations.  Correct\
    \ and\n   trusted operations of MF is essential for privacy and service-\n   assurance\
    \ issues.  This section discusses potential security threats\n   to the MF to\
    \ detail the possible attack vectors.\n"
- title: 2.4.1.  Threats to MF Confidentiality
  contents:
  - "2.4.1.  Threats to MF Confidentiality\n   The MF is vulnerable to eavesdropping\
    \ in which the attacker may\n   reconstruct the voice conversation or sensitive\
    \ information (e.g.,\n   PINs from DTMF tones).  Some SRTP key exchange mechanisms\
    \ (e.g.,\n   [RFC4568]) are vulnerable to bid-down attacks, where an attacker\n\
    \   selectively changes key exchange protocol fields in order to enforce\n   the\
    \ establishment of a less secure or even non-secure communication.\n"
- title: 2.4.2.  Threats to MF Integrity
  contents:
  - "2.4.2.  Threats to MF Integrity\n   Both RTP and RTCP are vulnerable to integrity\
    \ violation in many ways:\n   o  Media injection - if an attacker can somehow\
    \ detect an ongoing\n      media session and eavesdrop a few RTP packets, he can\
    \ start\n      sending bogus RTP packets to one of the UEs involved using the\n\
    \      same codec.  If the bogus RTP packets have consistently greater\n     \
    \ timestamps and sequence numbers (but within the acceptable range)\n      than\
    \ the legitimate RTP packets, the recipient UE may accept the\n      bogus RTP\
    \ packets and discard the legitimate ones.\n   o  Media session teardown - the\
    \ attacker sends bogus RTCP BYE\n      messages to a target UE signaling to tear\
    \ down the media\n      communication; please note that RTCP messages are normally\
    \ not\n      authenticated.\n   o  Quality-of-Service (QoS) degradation - the\
    \ attacker sends wrong\n      RTCP reports advertising more packet loss or more\
    \ jitter than\n      actually experimented resulting in the usage of a poor quality\n\
    \      codec degrading the overall quality of the call experience.\n"
- title: 2.4.3.  Threats to MF Availability
  contents:
  - "2.4.3.  Threats to MF Availability\n   o  Malformed messages - the attacker tries\
    \ to cause a crash or a\n      reboot of the Data Path Border Element (DBE)/UE\
    \ by sending RTP/\n      RTCP malformed messages;\n   o  Messages flooding - the\
    \ attacker tries to exhaust the resources of\n      the DBE/UE by sending many\
    \ RTP/RTCP messages.\n"
- title: 3.  Security Requirements
  contents:
  - '3.  Security Requirements

    '
- title: 3.1.  Security Requirements from SPEERMINT Requirements Document
  contents:
  - "3.1.  Security Requirements from SPEERMINT Requirements Document\n   The security\
    \ requirements for SPEERMINT have been moved from an\n   earlier version of this\
    \ document to the SPEERMINT requirements\n   [RFC6271].  The security requirements\
    \ for SPEERMINT are the\n   following, from [RFC6271]:\n   o  Requirement #15:\
    \ The protocols used to query the Lookup and\n      Location Routing Functions\
    \ SHOULD support mutual authentication.\n   o  Requirement #16: The protocols\
    \ used to query the Lookup and\n      Location Routing Functions SHOULD provide\
    \ support for data\n      confidentiality and integrity.\n   o  Requirement #17:\
    \ The protocols used to enable session peering MUST\n      NOT interfere with\
    \ the exchanges of media security attributes in\n      SDP.  Media attribute lines\
    \ that are not understood by SBEs must\n      be ignored and passed along the\
    \ signaling path untouched.\n"
- title: 3.2.  How to Fulfill the Security Requirements for SPEERMINT
  contents:
  - "3.2.  How to Fulfill the Security Requirements for SPEERMINT\n   Requirements\
    \ #15 and #16 state that the LUF and LRF should support\n   mutual authentication,\
    \ data confidentiality, and integrity.  In\n   principle, these requirements can\
    \ be fulfilled technically with\n   Transport Layer Security (TLS) or Datagram\
    \ TLS (DTLS) [RFC5246]\n   [RFC4347] or IP layer security (IPsec) [RFC4301]. \
    \ From a pure\n   security perspective both solutions fulfill the security requirements\n\
    \   for SPEERMINT, just on a different layer, and both solutions are\n   widely\
    \ deployed.\n   However, from a more practical perspective, transport layer security\n\
    \   (i.e., TLS or DTLS) has the advantage that the application using it\n   is\
    \ aware of whether or not security (or rather the corresponding\n   security features)\
    \ is enabled.  For instance, using TLS has the\n   consequence that the connection\
    \ fails if the corresponding connection\n   endpoint cannot authenticate properly.\n\
    \   While IPsec fulfills the same requirements from a security\n   perspective,\
    \ IPsec is somewhat de-coupling security from the\n   application using it.  For\
    \ instance, IPsec is often provided by\n   dedicated entities in such a way that\
    \ from the application layer, it\n   cannot be recognized whether or not IPsec\
    \ or certain security\n   features are turned on (\"bump-in-the-wire\").\n   In\
    \ summary, TLS (or DTLS) has some notable advantages over IPsec for\n   addressing\
    \ the SPEERMINT security requirements.  In particular,\n   transport layer security\
    \ is preferable over IPsec for SPEERMINT\n   because with TLS (or DTLS) security\
    \ is more closely coupled to the\n   LUF or LRF.  From a mere technical perspective,\
    \ however, both\n   solutions (transport layer security or IPsec) fulfill the\
    \ SPEERMINT\n   security requirements, and there may be particular cases where\
    \ IPsec\n   is a preferable solution.\n"
- title: 4.  Suggested Countermeasures
  contents:
  - "4.  Suggested Countermeasures\n   This section describes implementer-specific\
    \ countermeasures against\n   the threats described in the previous sections and\
    \ for addressing the\n   SPEERMINT security requirements described in [RFC6271].\
    \  The\n   countermeasures listed in this section are not meant to be\n   exhaustive;\
    \ rather, the suggested countermeasures are aimed to serve\n   as starting points\
    \ and to give guidance for implementers that are\n   trying to select appropriate\
    \ countermeasures against certain threats.\n   The following table provides a\
    \ map of the relationships between\n   threats and countermeasures.  The suggested\
    \ countermeasures are\n   discussed in detail in the subsequent subsections.\n\
    \   +-------+---------------+-------------------------------------------+\n  \
    \ | Group | Threat        | Suggested Countermeasure                  |\n   +-------+---------------+-------------------------------------------+\n\
    \   |  LUF  | Unauthorized  | database security BCPs (Section 4.1),     |\n  \
    \ |       | access        | Secure Exchange of SIP messages           |\n   |\
    \       |               | (Section 4.5)                             |\n   |  \
    \     | SQL injection | database security BCPs (Section 4.1),     |\n   |    \
    \   |               | Secure Exchange of SIP messages           |\n   |      \
    \ |               | (Section 4.5)                             |\n   |       |\
    \ DoS to LUF    | database security BCPs (Section 4.1),     |\n   |       |  \
    \             | Secure Exchange of SIP messages           |\n   |       |    \
    \           | (Section 4.5)                             |\n   |  LRF  | URI  \
    \         | privacy protection (Section 4.4), Secure  |\n   |       | harvesting\
    \    | Exchange of SIP messages (Section 4.5)    |\n   |       | SIP equipment\
    \ | privacy protection (Section 4.4), Secure  |\n   |       | enumeration   |\
    \ Exchange of SIP messages (Section 4.5)    |\n   |       | MitM attack   | DNSSEC\
    \ (Section 4.2), Secure Exchange of  |\n   |       |               | SIP messages\
    \ (Section 4.5)                |\n   |       | Incorrect     | DNSSEC (Section\
    \ 4.2), Secure Exchange of  |\n   |       | destinations  | SIP messages (Section\
    \ 4.5)                |\n   |       | DoS to LRF    | DNS replication (Section\
    \ 4.3)             |\n   |   SF  | Call pattern  | Secure Exchange of SIP messages\
    \           |\n   |       | analysis      | (Section 4.5), Securing Session  \
    \         |\n   |       |               | Establishment Data (Section 4.12)  \
    \       |\n   |       | Password      | Secure Exchange of SIP messages      \
    \     |\n   |       | cracking      | (Section 4.5)                          \
    \   |\n   |       | Network       | Securing Session Establishment Data      \
    \ |\n   |       | discovery     | (Section 4.12), Topology Hiding           |\n\
    \   |       |               | (Section 4.10)                            |\n  \
    \ |       | Session       | Secure Exchange of SIP messages           |\n   |\
    \       | teardown      | (Section 4.5), ingress filtering          |\n   |  \
    \     |               | (Section 4.6)                             |\n   |    \
    \   | Billing fraud | strong identity assertion (Section 4.7)   |\n   |      \
    \ | User ID       | strong identity assertion (Section 4.7)   |\n   |       |\
    \ spoofing      |                                           |\n   |       | Forged\
    \ 200    | Secure Exchange of SIP messages           |\n   |       | Response\
    \      | (Section 4.5), ingress filtering          |\n   |       |           \
    \    | (Section 4.6)                             |\n   |       | Forged 302  \
    \  | Secure Exchange of SIP messages           |\n   |       | Response      |\
    \ (Section 4.5), ingress filtering          |\n   |       |               | (Section\
    \ 4.6)                             |\n   |       | Forged 404    | Secure Exchange\
    \ of SIP messages           |\n   |       | Response      | (Section 4.5), ingress\
    \ filtering          |\n   |       |               | (Section 4.6)           \
    \                  |\n   |       | Flooding      | reliable border element pooling\
    \           |\n   |       | attack        | (Section 4.8), rate limit (Section\
    \ 4.9)   |\n   |       | Session       | DNSSEC (Section 4.2)                \
    \      |\n   |       | blackholing   |                                       \
    \    |\n   |       | SIP fuzzing   | border element hardening (Section 4.11) \
    \  |\n   |       | attack        |                                           |\n\
    \   |   MF  | Eavesdropping | Encryption and Integrity Protection of    |\n  \
    \ |       |               | Media Stream (Section 4.13)               |\n   |\
    \       | Media         | Encryption and Integrity Protection of    |\n   |  \
    \     | injection     | Media Stream (Section 4.13)               |\n   |    \
    \   | Media session | Encryption and Integrity Protection of    |\n   |      \
    \ | teardown      | Media Stream (Section 4.13)               |\n   |       |\
    \ QoS           | Encryption and Integrity Protection of    |\n   |       | degradation\
    \   | Media Stream (Section 4.13)               |\n   |       | Malformed    \
    \ | border element hardening (Section 4.11)   |\n   |       | messages      |\
    \                                           |\n   |       | Message       | rate\
    \ limit (Section 4.9)                  |\n   |       | flooding      |       \
    \                                    |\n   +-------+---------------+-------------------------------------------+\n"
- title: 4.1.  Database Security BCPs
  contents:
  - "4.1.  Database Security BCPs\n   Adequate security measures must be applied to\
    \ the LUF to prevent it\n   from being a target of attacks often seen on common\
    \ database systems.\n   Common security Best Current Practices (BCPs) for database\
    \ systems\n   include the use of strong passwords to prevent unauthorized access,\n\
    \   parameterized statements to prevent SQL injections, and server\n   replication\
    \ to prevent any database from being a single point of\n   failure. [DBSEC] is\
    \ one of many existing documents that describe BCPs\n   in this area.\n"
- title: 4.2.  DNSSEC
  contents:
  - "4.2.  DNSSEC\n   If DNS is used by the LRF, it is recommended to deploy the recent\n\
    \   version of Domain Name System Security Extensions (informally called\n   \"\
    DNSSEC-bis\") defined by [RFC4033], [RFC4034], and [RFC4035].  DNSSEC\n   has\
    \ been designed to protect DNS against well-known attacks such as\n   DNS cache\
    \ poisoning or Man-in-the-Middle (MitM) attacks on DNS\n   queries.  Essentially,\
    \ DNSSEC is a set of public key cryptography\n   extensions to DNS that provide\
    \ authentication of DNS data, integrity\n   protection for DNS entries, and authenticated\
    \ denial of existence\n   regarding non-existing DNS entries.  In the context\
    \ of SSP peering,\n   DNSSEC can provide authentication and integrity regarding\
    \ the\n   location of a Signaling Function (SF) entity retrieved via DNS.\n  \
    \ Using DNSSEC can thus help to defend against MitM attacks on DNS\n   queries\
    \ invoked by the LRF, session blackholing and other attacks\n   that lead traffic\
    \ to incorrect destinations.\n   DNSSEC has been deployed at the root level and\
    \ in several top-level\n   domains (e.g., .com and .net).  Although, at the time\
    \ of this\n   writing, DNSSEC is still not yet widely deployed on the Internet,\n\
    \   even limited deployment can add significant integrity protection and\n   authentication\
    \ to the LRF for Signaling Function locations received\n   via DNS entries.  Neither\
    \ end users nor terminals are involved in the\n   DNS resolution process of the\
    \ LRF.  Hence, if a) the sending SSP uses\n   a DNS resolver that supports DNSSEC\
    \ extensions, b) the receiving SSP\n   stores the location of its Signaling Function\
    \ cryptographically\n   signed (using DNSSEC extensions) in the DNS, and c) the\
    \ sending SSP\n   can obtain an authentication chain (i.e., a series of linked\
    \ DS and\n   DNSKEY records) to the receiving SSP, the LRF can be secured with\n\
    \   DNSSEC.  In the context of SPEERMINT, all three of these requirements\n  \
    \ can be fulfilled even in the case of partial DNSSEC deployment.  In\n   particular,\
    \ even without Internet-wide deployment of DNSSEC, it may\n   be possible for\
    \ a sending SSP to obtain a suitable trust anchor for\n   verifying the receiving\
    \ SSP's public key.  For instance, a suitable\n   trust anchor could be configured\
    \ for that specific SSP's top-level\n   domain or for the particular SSP's domain\
    \ directly.  If the sending\n   and the receiving SSP use a common ENUM tree,\
    \ DNSSEC use with the\n   ENUM tree's trust anchor is \"straightforward\".\n"
- title: 4.3.  DNS Replication
  contents:
  - "4.3.  DNS Replication\n   DNS replication is a very important countermeasure\
    \ to mitigate DoS\n   attacks on the LRF.  Simultaneously bringing down multiple\
    \ DNS\n   servers that support the LRF is much more challenging than attacking\n\
    \   a sole DNS server (single point of failure).\n"
- title: 4.4.  Cross-Domain Privacy Protection
  contents:
  - "4.4.  Cross-Domain Privacy Protection\n   Stripping Via and Record-Route headers,\
    \ replacing the Contact header,\n   and even changing Call-IDs are the mechanisms\
    \ described in [RFC3323]\n   to protect SIP privacy.  This practice allows an\
    \ SSP to hide its SIP\n   network topology, prevents intermediate signaling equipment\
    \ from\n   becoming the target of DoS attacks, as well as protects the privacy\n\
    \   of UEs according to their preferences.  This practice is effective in\n  \
    \ preventing SIP equipment enumeration that exploits LRF.\n"
- title: 4.5.  Secure Exchange of SIP Messages
  contents:
  - "4.5.  Secure Exchange of SIP Messages\n   SIP can be used on top of UDP or TCP\
    \ as transport protocol [RFC3261].\n   However, look-up and SED data should be\
    \ exchanged securely (see\n   security requirements (Section 3.2)), e.g., to increase\
    \ the\n   difficulty of performing session teardown and forging responses (200,\n\
    \   302, 404, etc).  If UDP is used to carry SIP messages, DTLS should be\n  \
    \ used to secure SIP message exchange between SSPs.  If TCP is used as\n   a transport\
    \ protocol, it can be secured with TLS.  Therefore,\n   depending on the underlying\
    \ transport protocol, SSPs should use\n   either DTLS or TLS to secure SIP message\
    \ delivery.\n   In general, encryption and integrity protection of signaling messages\n\
    \   can be achieved on the transport layer (with TLS or DTLS) or on the\n   network\
    \ layer (with IPsec).  Both solutions are technically sound,\n   but transport\
    \ layer security has some advantages.  Please refer to\n   the subsection on fulfilling\
    \ the SPEERMINT security requirements\n   (Section 3.2) for a discussion on using\
    \ TLS/DTLS or IPsec for\n   protecting the confidentiality and integrity of signaling\
    \ messages.\n   Similar to strong identity assertion, a Public Key Infrastructure\n\
    \   (PKI) is assumed to be in place for TLS/DTLS (or IPsec) deployment so\n  \
    \ that SSPs can obtain and trust the keys necessary to decrypt messages\n   and\
    \ verify signatures sent by other SSPs.\n   Message-oriented protection such as\
    \ [RFC3261] authentication does not\n   fulfill the SPEERMINT requirements (e.g.,\
    \ mutual authentication).\n"
- title: 4.6.  Ingress Filtering / Reverse-Path Filtering
  contents:
  - "4.6.  Ingress Filtering / Reverse-Path Filtering\n   Ingress filtering, i.e.,\
    \ blocking all traffic coming from a host that\n   has a source address different\
    \ than the addresses that have been\n   assigned to that host (see [RFC2827]),\
    \ can effectively prevent UEs\n   from sending packets with a spoofed source IP\
    \ address.  This can be\n   achieved by reverse-path filtering, i.e., only accepting\
    \ ingress\n   traffic if responses would take the same path.  This practice is\n\
    \   effective in preventing session teardown and forged SIP replies (200,\n  \
    \ 302, 404, etc.), if the recipient correctly verifies the source IP\n   address\
    \ for the authenticity of each incoming SIP message.\n"
- title: 4.7.  Strong Identity Assertion
  contents:
  - "4.7.  Strong Identity Assertion\n   \"Caller ID spoofing\" can be achieved thanks\
    \ to the weak identity\n   assertion on the From URI of an INVITE request.  In\
    \ a single SSP\n   domain, strong identity assertion can be easily achieved by\n\
    \   authenticating each INVITE request.  However, in the context of\n   SPEERMINT,\
    \ only the Originating SSP is able to verify the identity\n   directly.  In order\
    \ to overcome this problem, there are currently\n   only two major approaches:\
    \ transitive trust and cryptographic\n   signature.  The transitive trust approach\
    \ builds a chain of trust\n   among different SSP domains.  One example of this\
    \ approach is a\n   combined mechanism specified in [RFC3324] and [RFC3325]. \
    \ Using this\n   approach in a transit peering network scenario, the terminating\
    \ SSP\n   must establish a trust relationship with all SSP domains on the path,\n\
    \   which can be seen as an underlying weakness.  The use of\n   cryptographic\
    \ signatures is an alternative approach.  \"Session\n   Initiation Protocol (SIP)\
    \ Authenticated Identity Body (AIB) Format\"\n   is specified in [RFC3893].  [RFC4474]\
    \ introduces two new header\n   fields, IDENTITY and IDENTITY-INFO, that allow\
    \ a SIP server in the\n   Originating SSP to digitally sign an INVITE request\
    \ after\n   authenticating the sending UE.  The terminating SSP can verify if\
    \ the\n   INVITE request is signed by a trusted SSP domain.  Although this\n \
    \  approach does not require the terminating SSP to establish a trust\n   relationship\
    \ with all transit SSPs on the path, a PKI is assumed to\n   be in place.\n"
- title: 4.8.  Reliable Border Element Pooling
  contents:
  - "4.8.  Reliable Border Element Pooling\n   It is advisable to implement reliable\
    \ pooling on border elements.  An\n   architecture and protocols for the management\
    \ of server pools\n   supporting mission-critical applications are addressed in\
    \ the\n   RSERPOOL WG.  Using such mechanisms and protocols (see [RFC5351]\n \
    \  [RFC5352] [RFC5353] for details), a UE can effectively increase its\n   capacity\
    \ in handling flooding attacks.\n"
- title: 4.9.  Rate limit
  contents:
  - "4.9.  Rate limit\n   Flooding attacks on SFs and MFs can also be mitigated by\
    \ limiting the\n   rate of incoming traffic through policing or queuing.  In this\
    \ way,\n   legitimate clients can be denied the service since their traffic may\n\
    \   be discarded.  Rate limiting can also be applied on a per-source-IP\n   basis\
    \ under the assumption that the source IP of each attack packet\n   is not spoofed\
    \ dynamically.  Limitations related to NAT and mobility\n   issues apply and may\
    \ result in false positives (i.e., source IP\n   addresses blocked) when multiple\
    \ legitimate clients are located\n   behind the same NAT IP address.  It may be\
    \ preferable to limit the\n   number of concurrent 'sessions', i.e., ongoing calls\
    \ instead of the\n   messaging associated with it (since sessions use more resources\
    \ on\n   backend-systems).  When calculating rate limits, all entities along\n\
    \   the session path should be taken into account.  SIP entities on the\n   receiving\
    \ end of a call may be the limiting factor (e.g., the number\n   of ISDN channels\
    \ on PSTN gateways) rather than the ingress limiting\n   device.\n"
- title: 4.10.  Topology Hiding
  contents:
  - "4.10.  Topology Hiding\n   Topology hiding applies to both the signaling and\
    \ media plane and\n   consists of limiting the amount of topology information\
    \ exposed to\n   peering partners.  Topology hiding requires back-to-back user\
    \ agent\n   (B2BUA) functionality.  The most common way is the use of a Session\n\
    \   Border Controller (SBC) as SBE.  Topology hiding is explained in\n   [RFC5853].\n"
- title: 4.11.  Border Element Hardening
  contents:
  - "4.11.  Border Element Hardening\n   To prevent attacks that exploit vulnerabilities\
    \ (such as buffer\n   overflows, format string vulnerabilities, etc.) in SPEERMINT\
    \ border\n   elements, these implementations should be security hardened.  For\n\
    \   instance, fuzz testing is a common black box testing technique used\n   in\
    \ software engineering.  Also, security vulnerability tests can be\n   carried\
    \ out preventively to assure a UE/SBE/DBE can handle unexpected\n   data correctly\
    \ without crashing.  [RFC4475] and [PROTOS] are examples\n   of torture test cases\
    \ specific for SIP devices and freely available\n   security testing tools, respectively.\
    \  These type of tests needs to\n   be carried out before product release and\
    \ in addition throughout the\n   product life cycle.\n"
- title: 4.12.  Securing Session Establishment Data
  contents:
  - "4.12.  Securing Session Establishment Data\n   Session Establishment Data (SED)\
    \ contains critical information for\n   the routing of SIP sessions.  In order\
    \ to prevent attacks such as\n   service hijacking and denial of service that\
    \ exploit SED, SSPs should\n   adopt a secure transport protocol that provides\
    \ authentication,\n   confidentiality and integrity to exchange SED among themselves.\n\
    \   Further details can be found in [DRINKS-SPPROV].\n"
- title: 4.13.  Encryption and Integrity Protection of Media Stream
  contents:
  - "4.13.  Encryption and Integrity Protection of Media Stream\n   The Secure Real-time\
    \ Transport Protocol (SRTP) [RFC3711] prevents\n   eavesdropping on plain RTP\
    \ by encrypting the data flow.  It uses AES\n   as the default cipher and defines\
    \ two modes of operation (Segmented\n   Integer Counter Mode and f8-mode), which\
    \ is agreed upon after\n   negotiation.  It also uses HMAC-SHA1 and index keeping\
    \ to enable\n   message authentication/integrity and replay protection required\
    \ to\n   prevent media injection attacks.  Secure RTCP (SRTCP) provides the\n\
    \   same security-related features to RTCP as SRTP does for RTP.  SRTCP\n   is\
    \ described in [RFC3711] as optional.  In order to prevent media\n   session teardown,\
    \ it is recommended to turn this feature on.  The\n   choice of the external key\
    \ management protocol is left to the\n   deployment, a PKI is necessary to implement\
    \ the security requirements\n   of the SPEERMINT requirements document.\n"
- title: 5.  Conclusions
  contents:
  - "5.  Conclusions\n   This document presented the different SPEERMINT security\
    \ threats\n   classified in groups related to the LUF, LRF, SF, and MF,\n   respectively.\
    \  The multiple instances of the threats were presented\n   with a brief explanation.\
    \  Finally, suggested countermeasures for\n   SPEERMINT were outlined together\
    \ with possible mitigation of the\n   existing threats by means of them.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   This document is entirely focused on the security\
    \ threats for\n   SPEERMINT.\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   This document was originally inspired by the VOIPSA\
    \ VoIP Security and\n   Privacy Threat Taxonomy.  The authors would like to thank\
    \ VOIPSA for\n   having produced a comprehensive taxonomy as the starting point\
    \ of\n   this document.  Additionally, the authors would like to thank Cullen\n\
    \   Jennings, Jon Peterson, David Schwartz, Hadriel Kaplan, Peter Koch,\n   Daryl\
    \ Malas, Jason Livingood, and Robert Sparks for useful comments\n   to previous\
    \ editions of this document on the mailing list as well as\n   during IETF meetings.\n\
    \   Jan Seedorf and Saverio Niccolini are partially supported by the\n   DEMONS\
    \ project, a research project supported by the European\n   Commission under its\
    \ 7th Framework Program (contract no. 257315).\n   The views and conclusions contained\
    \ herein are those of the authors\n   and should not be interpreted as necessarily\
    \ representing the\n   official policies or endorsements, either expressed or\
    \ implied, of\n   the DEMONS project or the European Commission.\n"
- title: 8.  Informative References
  contents:
  - "8.  Informative References\n   [DBSEC]    Gertz, M. and S. Jajodia, \"Handbook\
    \ of Database Security:\n              Applications and Trends\",  Springer, 2008.\n\
    \   [DRINKS-SPPROV]\n              Mule, J., Cartwright, K., Ali, S., and A. Mayrhofer,\n\
    \              \"Session Peering Provisioning Protocol\", Work in Progress,\n\
    \              September 2011.\n   [PROTOS]   Wieser, C., Laakso, M., and H. Schulzrinne,\
    \ \"SIP\n              Robustness Testing for Large-Scale Use\",  First\n    \
    \          International Workshop on Software Quality (SOQUA 2004),\n        \
    \      September 2004.\n   [RFC2827]  Ferguson, P. and D. Senie, \"Network Ingress\
    \ Filtering:\n              Defeating Denial of Service Attacks which employ IP\
    \ Source\n              Address Spoofing\", BCP 38, RFC 2827, May 2000.\n   [RFC3261]\
    \  Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston,\n              A.,\
    \ Peterson, J., Sparks, R., Handley, M., and E.\n              Schooler, \"SIP:\
    \ Session Initiation Protocol\", RFC 3261,\n              June 2002.\n   [RFC3323]\
    \  Peterson, J., \"A Privacy Mechanism for the Session\n              Initiation\
    \ Protocol (SIP)\", RFC 3323, November 2002.\n   [RFC3324]  Watson, M., \"Short\
    \ Term Requirements for Network Asserted\n              Identity\", RFC 3324,\
    \ November 2002.\n   [RFC3325]  Jennings, C., Peterson, J., and M. Watson, \"\
    Private\n              Extensions to the Session Initiation Protocol (SIP) for\n\
    \              Asserted Identity within Trusted Networks\", RFC 3325,\n      \
    \        November 2002.\n   [RFC3711]  Baugher, M., McGrew, D., Naslund, M., Carrara,\
    \ E., and K.\n              Norrman, \"The Secure Real-time Transport Protocol\
    \ (SRTP)\",\n              RFC 3711, March 2004.\n   [RFC3893]  Peterson, J.,\
    \ \"Session Initiation Protocol (SIP)\n              Authenticated Identity Body\
    \ (AIB) Format\", RFC 3893,\n              September 2004.\n   [RFC4033]  Arends,\
    \ R., Austein, R., Larson, M., Massey, D., and S.\n              Rose, \"DNS Security\
    \ Introduction and Requirements\",\n              RFC 4033, March 2005.\n   [RFC4034]\
    \  Arends, R., Austein, R., Larson, M., Massey, D., and S.\n              Rose,\
    \ \"Resource Records for the DNS Security Extensions\",\n              RFC 4034,\
    \ March 2005.\n   [RFC4035]  Arends, R., Austein, R., Larson, M., Massey, D.,\
    \ and S.\n              Rose, \"Protocol Modifications for the DNS Security\n\
    \              Extensions\", RFC 4035, March 2005.\n   [RFC4301]  Kent, S. and\
    \ K. Seo, \"Security Architecture for the\n              Internet Protocol\",\
    \ RFC 4301, December 2005.\n   [RFC4347]  Rescorla, E. and N. Modadugu, \"Datagram\
    \ Transport Layer\n              Security\", RFC 4347, April 2006.\n   [RFC4474]\
    \  Peterson, J. and C. Jennings, \"Enhancements for\n              Authenticated\
    \ Identity Management in the Session\n              Initiation Protocol (SIP)\"\
    , RFC 4474, August 2006.\n   [RFC4475]  Sparks, R., Hawrylyshen, A., Johnston,\
    \ A., Rosenberg, J.,\n              and H. Schulzrinne, \"Session Initiation Protocol\
    \ (SIP)\n              Torture Test Messages\", RFC 4475, May 2006.\n   [RFC4568]\
    \  Andreasen, F., Baugher, M., and D. Wing, \"Session\n              Description\
    \ Protocol (SDP) Security Descriptions for Media\n              Streams\", RFC\
    \ 4568, July 2006.\n   [RFC4732]  Handley, M., Rescorla, E., and IAB, \"Internet\
    \ Denial-of-\n              Service Considerations\", RFC 4732, December 2006.\n\
    \   [RFC5246]  Dierks, T. and E. Rescorla, \"The Transport Layer Security\n  \
    \            (TLS) Protocol Version 1.2\", RFC 5246, August 2008.\n   [RFC5351]\
    \  Lei, P., Ong, L., Tuexen, M., and T. Dreibholz, \"An\n              Overview\
    \ of Reliable Server Pooling Protocols\", RFC 5351,\n              September 2008.\n\
    \   [RFC5352]  Stewart, R., Xie, Q., Stillman, M., and M. Tuexen,\n          \
    \    \"Aggregate Server Access Protocol (ASAP)\", RFC 5352,\n              September\
    \ 2008.\n   [RFC5353]  Xie, Q., Stewart, R., Stillman, M., Tuexen, M., and A.\n\
    \              Silverton, \"Endpoint Handlespace Redundancy Protocol\n       \
    \       (ENRP)\", RFC 5353, September 2008.\n   [RFC5486]  Malas, D. and D. Meyer,\
    \ \"Session Peering for Multimedia\n              Interconnect (SPEERMINT) Terminology\"\
    , RFC 5486,\n              March 2009.\n   [RFC5853]  Hautakorpi, J., Camarillo,\
    \ G., Penfield, R., Hawrylyshen,\n              A., and M. Bhatia, \"Requirements\
    \ from Session Initiation\n              Protocol (SIP) Session Border Control\
    \ (SBC) Deployments\",\n              RFC 5853, April 2010.\n   [RFC6271]  Mule,\
    \ J-F., \"Requirements for SIP-Based Session Peering\",\n              RFC 6271,\
    \ June 2011.\n   [RFC6406]  Malas, D., Ed. and J. Livingood, Ed., \"Session PEERing\
    \ for\n              Multimedia INTerconnect (SPEERMINT) Architecture\",\n   \
    \           RFC 6406, November 2011.\n   [VOIPSATAXONOMY]\n              Zar,\
    \ J. and et al, \"VOIPSA VoIP Security and Privacy\n              Threat Taxonomy,\
    \ Public Release 1.0\",\n               http://www.voipsa.org/Activities/taxonomy.php,\n\
    \              October 2005.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Jan Seedorf\n   NEC Laboratories Europe, NEC Europe, \
    \ Ltd.\n   Kurfuersten-Anlage 36\n   Heidelberg  69115\n   Germany\n   Phone:\
    \ +49 (0) 6221 4342 221\n   EMail: jan.seedorf@neclab.eu\n   URI:   http://www.neclab.eu\n\
    \   Saverio Niccolini\n   NEC Laboratories Europe, NEC Europe, Ltd.\n   Kurfuersten-Anlage\
    \ 36\n   Heidelberg  69115\n   Germany\n   Phone: +49 (0) 6221 4342 118\n   EMail:\
    \ saverio.niccolini@.neclab.eu\n   URI:   http://www.neclab.eu\n   Eric Chen\n\
    \   Information Sharing Platform Laboratories, NTT\n   3-9-11 Midori-cho\n   Musashino,\
    \ Tokyo  180-8585\n   Japan\n   EMail: eric.chen@lab.ntt.co.jp\n   URI:   http://www.ntt.co.jp/index_e.html\n\
    \   Hendrik Scholz\n   VOIPFUTURE GmbH\n   Wendenstrasse 4\n   Hamburg  20097\n\
    \   Germany\n   Phone: +49 (0) 40 688 900 163\n   EMail: hendrik.scholz@voipfuture.com\n\
    \   URI:   http://voipfuture.com\n"
