- title: __initial_text__
  contents:
  - '           An Extension for EAP-Only Authentication in IKEv2

    '
- title: Abstract
  contents:
  - "Abstract\n   IKEv2 specifies that Extensible Authentication Protocol (EAP)\n\
    \   authentication must be used together with responder authentication\n   based\
    \ on public key signatures.  This is necessary with old EAP\n   methods that provide\
    \ only unilateral authentication using, e.g., one-\n   time passwords or token\
    \ cards.\n   This document specifies how EAP methods that provide mutual\n   authentication\
    \ and key agreement can be used to provide extensible\n   responder authentication\
    \ for IKEv2 based on methods other than public\n   key signatures.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5998.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Extensible Authentication Protocol (EAP), defined in\
    \ [RFC3748],\n   is an authentication framework that supports multiple authentication\n\
    \   mechanisms.  Today, EAP has been implemented at end hosts and routers\n  \
    \ that connect via switched circuits or dial-up lines using PPP\n   [RFC1661],\
    \ IEEE 802 wired switches [IEEE8021X], and IEEE 802.11\n   wireless access points\
    \ [IEEE80211i].\n   One of the advantages of the EAP architecture is its flexibility.\n\
    \   EAP is used to select a specific authentication mechanism, typically\n   after\
    \ the authenticator requests more information in order to\n   determine the specific\
    \ authentication method to be used.  Rather than\n   requiring the authenticator\
    \ (e.g., wireless LAN access point) to be\n   updated to support each new authentication\
    \ method, EAP permits the\n   use of a backend authentication server that may\
    \ implement some or all\n   authentication methods.\n   IKEv2 ([RFC4306] and [RFC5996])\
    \ is a component of IPsec used for\n   performing mutual authentication and establishing\
    \ and maintaining\n   Security Associations (SAs) for IPsec ESP and Authentication\
    \ Header\n   (AH).  In addition to supporting authentication using public key\n\
    \   signatures and shared secrets, IKEv2 also supports EAP\n   authentication.\n\
    \   IKEv2 provides EAP authentication since it was recognized that public\n  \
    \ key signatures and shared secrets are not flexible enough to meet the\n   requirements\
    \ of many deployment scenarios.  By using EAP, IKEv2 can\n   leverage existing\
    \ authentication infrastructure and credential\n   databases, since EAP allows\
    \ users to choose a method suitable for\n   existing credentials, and also makes\
    \ separation of the IKEv2\n   responder (VPN gateway) from the EAP authentication\
    \ endpoint (backend\n   Authentication, Authorization, and Accounting (AAA) server)\
    \ easier.\n   Some older EAP methods are designed for unilateral authentication\n\
    \   only (that is, EAP peer to EAP server).  These methods are used in\n   conjunction\
    \ with IKEv2 public-key-based authentication of the\n   responder to the initiator.\
    \  It is expected that this approach is\n   especially useful for \"road warrior\"\
    \ VPN gateways that use, for\n   instance, one-time passwords or token cards to\
    \ authenticate the\n   clients.\n   However, most newer EAP methods, such as those\
    \ typically used with\n   IEEE 802.11i wireless LANs, provide mutual authentication\
    \ and key\n   agreement.  Currently, IKEv2 specifies that these EAP methods must\n\
    \   also be used together with responder authentication based on public\n   key\
    \ signatures.\n   In order for the public key signature authentication of the\
    \ gateway\n   to be effective, a deployment of Public Key Infrastructure (PKI)\
    \ is\n   required, which has to include management of trust anchors on all\n \
    \  supplicants.  In many environments, this is not realistic, and the\n   security\
    \ of the gateway public key is the same as the security of a\n   self-signed certificate.\
    \  Mutually authenticating EAP methods alone\n   can provide a sufficient level\
    \ of security in many circumstances, and\n   in fact, in some deployments, IEEE\
    \ 802.11i uses EAP without any PKI\n   for authenticating the Wireless Local Area\
    \ Network (WLAN) access\n   points.\n   This document specifies how EAP methods\
    \ that offer mutual\n   authentication and key agreement can be used to provide\
    \ responder\n   authentication in IKEv2 completely based on EAP.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   All notation in this protocol extension is taken from [RFC4306].\n\
    \   Numbered messages refer to the IKEv2 message sequence when using EAP.\n  \
    \ Thus:\n   o  Message 1 is the request message of IKE_SA_INIT.\n   o  Message\
    \ 2 is the response message of IKE_SA_INIT.\n   o  Message 3 is the first request\
    \ of IKE_AUTH.\n   o  Message 4 is the first response of IKE_AUTH.\n   The key\
    \ words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"\
    SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n\
    \   document are to be interpreted as described in [RFC2119].\n"
- title: 2.  Scenarios
  contents:
  - "2.  Scenarios\n   In this section, we describe two scenarios for extensible\n\
    \   authentication within IKEv2.  These scenarios are intended to be\n   illustrative\
    \ examples rather than specifying how things should be\n   done.\n   Figure 1\
    \ shows a configuration where the EAP and the IKEv2 endpoints\n   are co-located.\
    \  Authenticating the IKEv2 responder using both EAP\n   and public key signatures\
    \ is redundant.  Offering EAP-based\n   authentication has the advantage that\
    \ multiple different\n   authentication and key exchange protocols are available\
    \ with EAP with\n   different security properties (such as strong password-based\n\
    \   protocols, protocols offering user identity confidentiality, and many\n  \
    \ more).\n          +------+-----+                            +------------+\n\
    \     O    |   IKEv2    |                            |   IKEv2    |\n    /|\\\
    \   | Initiator  |<---////////////////////--->| Responder  |\n    / \\   +------------+\
    \          IKEv2             +------------+\n    User  |  EAP Peer  |        \
    \  Exchange          | EAP Server |\n          +------------+                \
    \            +------------+\n             Figure 1: EAP and IKEv2 Endpoints Are\
    \ Co-Located\n   Figure 2 shows a typical corporate network access scenario. \
    \ The\n   initiator (client) interacts with the responder (VPN gateway) in the\n\
    \   corporate network.  The EAP exchange within IKE runs between the\n   client\
    \ and the home AAA server.  As a result of a successful EAP\n   authentication\
    \ protocol run, session keys are established and sent\n   from the AAA server\
    \ to the VPN gateway, and then used to authenticate\n   the IKEv2 SA with AUTH\
    \ payloads.\n   The protocol used between the VPN gateway and AAA server could\
    \ be,\n   for instance, Diameter [RFC4072] or RADIUS [RFC3579].  See Section 6\n\
    \   for related security considerations.\n                                +-------------------------------+\n\
    \                                |       Corporate network       |\n         \
    \                       |                               |\n                  \
    \         +-----------+            +--------+  |\n                           |\
    \   IKEv2   |     AAA    |  Home  |  |\n     IKEv2      +////----->+ Responder\
    \ +<---------->+  AAA   |  |\n     Exchange   /          | (VPN GW)  |  (RADIUS/\
    \  | Server |  |\n                /          +-----------+  Diameter) +--------+\
    \  |\n                /               |        carrying EAP           |\n    \
    \            |               |                               |\n             \
    \   |               +-------------------------------+\n                v\n   \
    \      +------+-----+\n     o   |   IKEv2    |\n    /|\\  | Initiator  |\n   \
    \ / \\  | VPN client |\n   User  +------------+\n                    Figure 2:\
    \ Corporate Network Access\n"
- title: 3.  Solution
  contents:
  - "3.  Solution\n   IKEv2 specifies that when the EAP method establishes a shared\
    \ secret\n   key, that key is used by both the initiator and responder to generate\n\
    \   an AUTH payload (thus authenticating the IKEv2 SA set up by messages\n   1\
    \ and 2).\n   When used together with public key responder authentication, the\n\
    \   responder is, in effect, authenticated using two different methods:\n   the\
    \ public key signature AUTH payload in message 4, and the EAP-based\n   AUTH payload\
    \ later.\n   If the initiator does not wish to use public-key-based responder\n\
    \   authentication, it includes an EAP_ONLY_AUTHENTICATION notification\n   payload\
    \ (16417) in message 3.  The Protocol ID and Security Parameter\n   Index (SPI)\
    \ size fields are set to zero, and there is no additional\n   data associated\
    \ with this notification.\n   If the responder supports this notification and\
    \ chooses to use it, it\n   omits the public-key-based AUTH payload and CERT payloads\
    \ from\n   message 4.\n   If the responder does not support the EAP_ONLY_AUTHENTICATION\n\
    \   notification or does not wish to use it, it ignores the notification\n   payload,\
    \ and includes the AUTH payload in message 4.  In this case,\n   the initiator\
    \ MUST verify that payload and any associated\n   certificates, as per [RFC4306].\n\
    \   When receiving message 4, the initiator MUST verify that the proposed\n  \
    \ EAP method is allowed by this specification, and MUST abort the\n   protocol\
    \ immediately otherwise.\n   Both the initiator and responder MUST verify that\
    \ the EAP method\n   actually used provided mutual authentication and established\
    \ a shared\n   secret key.  The AUTH payloads sent after EAP Success MUST use\
    \ the\n   EAP-generated key, and MUST NOT use SK_pi or SK_pr (see Section 2.15\n\
    \   of [RFC5996]).\n   An IKEv2 message exchange with this modification is shown\
    \ below:\n      Initiator                   Responder\n     -----------      \
    \           -----------\n      HDR, SAi1, KEi, Ni,\n           [N(NAT_DETECTION_SOURCE_IP),\n\
    \            N(NAT_DETECTION_DESTINATION_IP)]  -->\n                         \
    \   <--   HDR, SAr1, KEr, Nr, [CERTREQ],\n                                   \
    \    [N(NAT_DETECTION_SOURCE_IP),\n                                        N(NAT_DETECTION_DESTINATION_IP)]\n\
    \      HDR, SK { IDi, [IDr], SAi2, TSi, TSr,\n                N(EAP_ONLY_AUTHENTICATION),\n\
    \                [CP(CFG_REQUEST)] }  -->\n                            <--   HDR,\
    \ SK { IDr, EAP(Request) }\n      HDR, SK { EAP(Response) }  -->\n           \
    \                 <--   HDR, SK { EAP(Request) }\n      HDR, SK { EAP(Response)\
    \ }  -->\n                            <--   HDR, SK { EAP(Success) }\n      HDR,\
    \ SK { AUTH }  -->\n                            <--   HDR, SK { AUTH, SAr2, TSi,\
    \ TSr,\n                                            [CP(CFG_REPLY] }\n   Note:\
    \ all notation in the above protocol sequence and elsewhere in\n   this specification\
    \ is as defined in [RFC4306], and see in particular\n   Sec. 1.2 of [RFC4306]\
    \ for payload types.\n   The NAT detection and Configuration payloads are shown\
    \ for\n   informative purposes only; they do not change how EAP authentication\n\
    \   works.\n   An IKE SA that was set up with this extension can be resumed using\n\
    \   the mechanism described in [RFC5723].  However, session resumption\n   does\
    \ not change the authentication method.  Therefore, during the\n   IKE_AUTH exchange\
    \ of the resumed session, this extension MUST NOT be\n   sent by the initiator.\n"
- title: 4.  Safe EAP Methods
  contents:
  - "4.  Safe EAP Methods\n   EAP methods to be used with this extension MUST have\
    \ the following\n   properties:\n   1.  The method provides mutual authentication\
    \ of the peers.\n   2.  The method is key-generating.\n   3.  The method is resistant\
    \ to dictionary attacks.\n   The authors believe that the following EAP methods\
    \ are secure when\n   used with the current extension.  The list is not inclusive,\
    \ and\n   there are likely other safe methods that have not been listed here.\n\
    \   +-------------------------------+-------------------+---------------+\n  \
    \ | Method Name                   | Allows Channel    | Reference     |\n   |\
    \                               | Binding?          |               |\n   +-------------------------------+-------------------+---------------+\n\
    \   | EAP-SIM                       | No                | [RFC4186]     |\n  \
    \ | EAP-AKA                       | Yes               | [RFC4187]     |\n   |\
    \ EAP-AKA'                      | Yes               | [RFC5448]     |\n   | EAP-GPSK\
    \                      | Yes               | [RFC5433]     |\n   | EAP-pwd   \
    \                    | No                | [RFC5931]     |\n   | EAP-EKE     \
    \                  | Yes               | [EMU-EAP-EKE] |\n   | EAP-PAX       \
    \                | Yes               | [RFC4746]     |\n   | EAP-SAKE        \
    \              | No                | [RFC4763]     |\n   | EAP-SRP           \
    \            | No                | [EAP-SRP]     |\n   | EAP-POTP (mutual    \
    \          | Yes               | [RFC4793]     |\n   | authentication variant)\
    \       |                   |               |\n   | EAP-TLS                  \
    \     | No                | [RFC5216]     |\n   | EAP-FAST                   \
    \   | No                | [RFC4851]     |\n   | EAP-TTLS                     \
    \ | No                | [RFC5281]     |\n   +-------------------------------+-------------------+---------------+\n\
    \   The \"Allows channel binding?\" column denotes protocols where\n   protected\
    \ identity information may be sent between the EAP endpoints.\n   This third,\
    \ optional property of the method provides protection\n   against certain types\
    \ of attacks (see Section 6.2 for an\n   explanation), and therefore in some scenarios,\
    \ methods that allow for\n   channel binding are to be preferred.  It is noted\
    \ that at the time of\n   writing, even when such capabilities are provided, they\
    \ are not fully\n   specified in an interoperable manner.  In particular, no RFC\n\
    \   specifies what identities should be sent under the protection of the\n   channel\
    \ binding mechanism, or what policy is to be used to correlate\n   identities\
    \ at the different layers.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   This document defines a new IKEv2 Notification Payload\
    \ type,\n   EAP_ONLY_AUTHENTICATION, described in Section 3.  This payload has\n\
    \   been assigned the type number 16417 from the \"Status Types\" range.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   Security considerations applicable to all EAP\
    \ methods are discussed\n   in [RFC3748].  The EAP Key Management Framework [RFC5247]\
    \ deals with\n   issues that arise when EAP is used as a part of a larger system.\n"
- title: 6.1.  Authentication of IKEv2 SA
  contents:
  - "6.1.  Authentication of IKEv2 SA\n   It is important to note that the IKEv2 SA\
    \ is not authenticated by\n   just running an EAP conversation: the crucial step\
    \ is the AUTH\n   payload based on the EAP-generated key.  Thus, EAP methods that\
    \ do\n   not provide mutual authentication or establish a shared secret key\n\
    \   MUST NOT be used with the modifications presented in this document.\n"
- title: 6.2.  Authentication with Separated IKEv2 Responder / EAP Server
  contents:
  - "6.2.  Authentication with Separated IKEv2 Responder / EAP Server\n   As described\
    \ in Section 2, the EAP conversation can terminate either\n   at the IKEv2 responder\
    \ or at a backend AAA server.\n   If the EAP method is terminated at the IKEv2\
    \ responder, then no key\n   transport via the AAA infrastructure is required.\
    \  Pre-shared secret\n   and public-key-based authentication offered by IKEv2\
    \ is then replaced\n   by a wider range of authentication and key exchange methods.\n\
    \   However, typically EAP will be used with a backend AAA server.  See\n   [RFC5247]\
    \ for a more complete discussion of the related security\n   issues; here we provide\
    \ only a short summary.\n   When a backend server is used, there are actually\
    \ two authentication\n   exchanges: the EAP method between the client and the\
    \ AAA server, and\n   another authentication between the AAA server and IKEv2\
    \ gateway.  The\n   AAA server authenticates the client using the selected EAP\
    \ method,\n   and they establish a session key.  The AAA server then sends this\
    \ key\n   to the IKEv2 gateway over a connection authenticated using, e.g.,\n\
    \   IPsec or Transport Layer Security (TLS).\n   Some EAP methods do not have\
    \ any concept of pass-through\n   authenticator (e.g., Network Access Server (NAS)\
    \ or IKEv2 gateway)\n   identity, and these two authentications remain quite independent\
    \ of\n   each other.  That is, after the client has verified the AUTH payload\n\
    \   sent by the IKEv2 gateway, it knows that it is talking to SOME\n   gateway\
    \ trusted by the home AAA server, but not which one.  The\n   situation is somewhat\
    \ similar if a single cryptographic hardware\n   accelerator, containing a single\
    \ private key, would be shared between\n   multiple IKEv2 gateways (perhaps in\
    \ some kind of cluster\n   configuration).  In particular, if one of the gateways\
    \ is\n   compromised, it can impersonate any of the other gateways towards the\n\
    \   user (until the compromise is discovered and access rights revoked).\n   In\
    \ some environments it is not desirable to trust the IKEv2 gateways\n   this much\
    \ (also known as the \"Lying NAS Problem\").  EAP methods that\n   provide what\
    \ is called \"connection binding\" or \"channel binding\"\n   transport some identity\
    \ or identities of the gateway (or WLAN access\n   point / NAS) inside the EAP\
    \ method.  Then the AAA server can check\n   that it is indeed sending the key\
    \ to the gateway expected by the\n   client.  A potential solution is described\
    \ in [EAP-SERVICE], see also\n   [EMU-AAAPAY].\n   In some deployment configurations,\
    \ AAA proxies may be present between\n   the IKEv2 gateway and the backend AAA\
    \ server.  These AAA proxies MUST\n   be trusted for secure operation, and therefore\
    \ SHOULD be avoided when\n   possible; see Section 2.3.4 of [RFC4072] and Section\
    \ 4.3.7 of\n   [RFC3579] for more discussion.\n"
- title: 6.3.  Protection of EAP Payloads
  contents:
  - "6.3.  Protection of EAP Payloads\n   Although the EAP payloads are encrypted\
    \ and integrity protected with\n   SK_e/SK_a, this does not provide any protection\
    \ against active\n   attackers.  Until the AUTH payload has been received and\
    \ verified, a\n   man-in-the-middle can change the KEi/KEr payloads and eavesdrop\
    \ or\n   modify the EAP payloads.\n   In IEEE 802.11i wireless LANs, the EAP payloads\
    \ are neither encrypted\n   nor integrity protected (by the link layer), so EAP\
    \ methods are\n   typically designed to take that into account.\n   In particular,\
    \ EAP methods that are vulnerable to dictionary attacks\n   when used in WLANs\
    \ are still vulnerable (to active attackers) when\n   run inside IKEv2.\n   The\
    \ rules in Section 4 are designed to avoid this potential\n   vulnerability.\n"
- title: 6.4.  Identities and Authenticated Identities
  contents:
  - "6.4.  Identities and Authenticated Identities\n   When using this protocol, each\
    \ of the peers sends two identity\n   values:\n   1.  An identity contained in\
    \ the IKE ID payload.\n   2.  An identity transferred within the specific EAP\
    \ method's\n       messages.\n   (IKEv2 omits the EAP Identity request/response\
    \ pair, see Section 3.16\n   of [RFC5996].)  The first identity value can be used\
    \ by the recipient\n   to route AAA messages and/or to select authentication and\
    \ EAP types.\n   But it is only the second identity that is directly authenticated\
    \ by\n   the EAP method.  The reader is referred to Section 2.16 of [RFC5996]\n\
    \   regarding the need to base IPsec policy decisions on the\n   authenticated\
    \ identity.  In the context of the extension described\n   here, this guidance\
    \ on IPsec policy applies both to the\n   authentication of the client by the\
    \ gateway and vice versa.\n"
- title: 6.5.  User Identity Confidentiality
  contents:
  - "6.5.  User Identity Confidentiality\n   IKEv2 provides confidentiality for the\
    \ initiator identity against\n   passive eavesdroppers, but not against active\
    \ attackers.  The\n   initiator announces its identity first (in message 3), before\
    \ the\n   responder has been authenticated.  The usage of EAP in IKEv2 does not\n\
    \   change this situation, since the ID payload in message 3 is used\n   instead\
    \ of the EAP Identity Request/Response exchange.  This is\n   somewhat unfortunate\
    \ since when EAP is used with public key\n   authentication of the responder,\
    \ it would be possible to provide\n   active user identity confidentiality for\
    \ the initiator.\n   IKEv2 protects the responder's identity even against active\
    \ attacks.\n   This property cannot be provided when using EAP.  If public key\n\
    \   responder authentication is used in addition to EAP, the responder\n   reveals\
    \ its identity before authenticating the initiator.  If only\n   EAP is used (as\
    \ proposed in this document), the situation depends on\n   the EAP method used\
    \ (in some EAP methods, the server reveals its\n   identity first).\n   Hence,\
    \ if active user identity confidentiality for the responder is\n   required then\
    \ EAP methods that offer this functionality have to be\n   used (see [RFC3748],\
    \ Section 7.3).\n"
- title: 7.  Acknowledgments
  contents:
  - "7.  Acknowledgments\n   This document borrows some text from [RFC3748], [RFC4306],\
    \ and\n   [RFC4072].  We would also like to thank Hugo Krawczyk for interesting\n\
    \   discussions about this topic, Dan Harkins, and David Harrington for\n   their\
    \ comments.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2119]      Bradner, S., \"Key words for use\
    \ in RFCs to Indicate\n                  Requirement Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n   [RFC3748]      Aboba, B., Blunk, L., Vollbrecht, J., Carlson,\
    \ J., and\n                  H. Levkowetz, \"Extensible Authentication Protocol\n\
    \                  (EAP)\", RFC 3748, June 2004.\n   [RFC4306]      Kaufman, C.,\
    \ \"Internet Key Exchange (IKEv2) Protocol\",\n                  RFC 4306, December\
    \ 2005.\n   [RFC5723]      Sheffer, Y. and H. Tschofenig, \"Internet Key Exchange\n\
    \                  Protocol Version 2 (IKEv2) Session Resumption\",\n        \
    \          RFC 5723, January 2010.\n   [RFC5996]      Kaufman, C., Hoffman, P.,\
    \ Nir, Y., and P. Eronen,\n                  \"Internet Key Exchange Protocol\
    \ Version 2 (IKEv2)\",\n                  RFC 5996, September 2010.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [EAP-SERVICE]  Arkko, J. and P. Eronen, \"Authenticated\
    \ Service\n                  Information for the Extensible Authentication Protocol\n\
    \                  (EAP)\", Work in Progress, October 2005.\n   [EAP-SRP]    \
    \  Carlson, J., Aboba, B., and H. Haverinen, \"EAP SRP-\n                  SHA1\
    \ Authentication Protocol\", Work in Progress,\n                  July 2001.\n\
    \   [EMU-AAAPAY]   Clancy, C., Lior, A., Zorn, G., and K. Hoeper, \"EAP\n    \
    \              Method Support for Transporting AAA Payloads\", Work\n        \
    \          in Progress, May 2010.\n   [EMU-EAP-EKE]  Sheffer, Y., Zorn, G., Tschofenig,\
    \ H., and S. Fluhrer,\n                  \"An EAP Authentication Method Based\
    \ on the EKE\n                  Protocol\", Work in Progress, August 2010.\n \
    \  [IEEE80211i]   Institute of Electrical and Electronics Engineers,\n       \
    \           \"IEEE Standard for Information technology -\n                  Telecommunications\
    \ and information exchange between\n                  systems - Local and metropolitan\
    \ area networks -\n                  Specific requirements - Part 11: Wireless\
    \ Medium\n                  Access Control (MAC) and Physical Layer (PHY)\n  \
    \                specifications: Amendment 6: Medium Access Control\n        \
    \          (MAC) Security Enhancements\", IEEE Standard 802.11i-\n           \
    \       2004, July 2004.\n   [IEEE8021X]    Institute of Electrical and Electronics\
    \ Engineers,\n                  \"Local and Metropolitan Area Networks: Port-Based\n\
    \                  Network Access Control\", IEEE Standard 802.1X-2001,\n    \
    \              2001.\n   [RFC1661]      Simpson, W., \"The Point-to-Point Protocol\
    \ (PPP)\",\n                  STD 51, RFC 1661, July 1994.\n   [RFC3579]     \
    \ Aboba, B. and P. Calhoun, \"RADIUS (Remote\n                  Authentication\
    \ Dial In User Service) Support For\n                  Extensible Authentication\
    \ Protocol (EAP)\", RFC 3579,\n                  September 2003.\n   [RFC4072]\
    \      Eronen, P., Hiller, T., and G. Zorn, \"Diameter\n                  Extensible\
    \ Authentication Protocol (EAP) Application\",\n                  RFC 4072, August\
    \ 2005.\n   [RFC4186]      Haverinen, H. and J. Salowey, \"Extensible\n      \
    \            Authentication Protocol Method for Global System for\n          \
    \        Mobile Communications (GSM) Subscriber Identity\n                  Modules\
    \ (EAP-SIM)\", RFC 4186, January 2006.\n   [RFC4187]      Arkko, J. and H. Haverinen,\
    \ \"Extensible Authentication\n                  Protocol Method for 3rd Generation\
    \ Authentication and\n                  Key Agreement (EAP-AKA)\", RFC 4187, January\
    \ 2006.\n   [RFC4746]      Clancy, T. and W. Arbaugh, \"Extensible Authentication\n\
    \                  Protocol (EAP) Password Authenticated Exchange\",\n       \
    \           RFC 4746, November 2006.\n   [RFC4763]      Vanderveen, M. and H.\
    \ Soliman, \"Extensible\n                  Authentication Protocol Method for\
    \ Shared-secret\n                  Authentication and Key Establishment (EAP-SAKE)\"\
    ,\n                  RFC 4763, November 2006.\n   [RFC4793]      Nystroem, M.,\
    \ \"The EAP Protected One-Time Password\n                  Protocol (EAP-POTP)\"\
    , RFC 4793, February 2007.\n   [RFC4851]      Cam-Winget, N., McGrew, D., Salowey,\
    \ J., and H. Zhou,\n                  \"The Flexible Authentication via Secure\
    \ Tunneling\n                  Extensible Authentication Protocol Method (EAP-FAST)\"\
    ,\n                  RFC 4851, May 2007.\n   [RFC5216]      Simon, D., Aboba,\
    \ B., and R. Hurst, \"The EAP-TLS\n                  Authentication Protocol\"\
    , RFC 5216, March 2008.\n   [RFC5247]      Aboba, B., Simon, D., and P. Eronen,\
    \ \"Extensible\n                  Authentication Protocol (EAP) Key Management\n\
    \                  Framework\", RFC 5247, August 2008.\n   [RFC5281]      Funk,\
    \ P. and S. Blake-Wilson, \"Extensible\n                  Authentication Protocol\
    \ Tunneled Transport Layer\n                  Security Authenticated Protocol\
    \ Version 0 (EAP-\n                  TTLSv0)\", RFC 5281, August 2008.\n   [RFC5433]\
    \      Clancy, T. and H. Tschofenig, \"Extensible\n                  Authentication\
    \ Protocol - Generalized Pre-Shared Key\n                  (EAP-GPSK) Method\"\
    , RFC 5433, February 2009.\n   [RFC5448]      Arkko, J., Lehtovirta, V., and P.\
    \ Eronen, \"Improved\n                  Extensible Authentication Protocol Method\
    \ for 3rd\n                  Generation Authentication and Key Agreement (EAP-\n\
    \                  AKA')\", RFC 5448, May 2009.\n   [RFC5931]      Harkins, D.\
    \ and G. Zorn, \"Extensible Authentication\n                  Protocol (EAP) Authentication\
    \ Using Only A Password\",\n                  RFC 5931, August 2010.\n"
- title: Appendix A.  Alternative Approaches
  contents:
  - "Appendix A.  Alternative Approaches\n   In this section, we list alternatives\
    \ that have been considered\n   during the work on this document.  We concluded\
    \ that the solution\n   presented in Section 3 seems to fit better into IKEv2.\n"
- title: A.1.  Ignore AUTH Payload at the Initiator
  contents:
  - "A.1.  Ignore AUTH Payload at the Initiator\n   With this approach, the initiator\
    \ simply ignores the AUTH payload in\n   message 4 (but obviously must check the\
    \ second AUTH payload later!).\n   The main advantage of this approach is that\
    \ no protocol modifications\n   are required and no signature verification is\
    \ required.  A\n   significant disadvantage is that the EAP method to be used\
    \ cannot be\n   selected to take this behavior into account.\n   The initiator\
    \ could signal to the responder (using a notification\n   payload) that it did\
    \ not verify the first AUTH payload.\n"
- title: A.2.  Unauthenticated Public Keys in AUTH Payload (Message 4)
  contents:
  - "A.2.  Unauthenticated Public Keys in AUTH Payload (Message 4)\n   Another solution\
    \ approach suggests the use of unauthenticated public\n   keys in the public key\
    \ signature AUTH payload (for message 4).\n   That is, the initiator verifies\
    \ the signature in the AUTH payload,\n   but does not verify that the public key\
    \ indeed belongs to the\n   intended party (using certificates) -- since it doesn't\
    \ have a PKI\n   that would allow this.  This could be used with X.509 certificates\n\
    \   (the initiator ignores all other fields of the certificate except the\n  \
    \ public key), or \"Raw RSA Key\" CERT payloads.\n   This approach has the advantage\
    \ that initiators that wish to perform\n   certificate-based responder authentication\
    \ (in addition to EAP) may\n   do so, without requiring the responder to handle\
    \ these cases\n   separately.  A disadvantage here, again, is that the EAP method\n\
    \   selection cannot take into account the incomplete validation of the\n   responder's\
    \ certificate.\n   If using RSA, the overhead of signature verification is quite\
    \ small,\n   compared to the g^xy calculation required by the Diffie-Hellman\n\
    \   exchange.\n"
- title: A.3.  Using EAP Derived Session Keys for IKEv2
  contents:
  - "A.3.  Using EAP Derived Session Keys for IKEv2\n   It has been proposed that\
    \ when using an EAP method that provides\n   mutual authentication and key agreement,\
    \ the IKEv2 Diffie-Hellman\n   exchange could also be omitted.  This would mean\
    \ that the session\n   keys for IPsec SAs established later would rely only on\
    \ EAP-provided\n   keys.\n   It seems the only benefit of this approach is saving\
    \ some computation\n   time (g^xy calculation).  This approach requires designing\
    \ a\n   completely new protocol (which would not resemble IKEv2 anymore); we\n\
    \   do not believe that it should be considered.  Nevertheless, we\n   include\
    \ it for completeness.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Pasi Eronen\n   Independent\n   EMail: pe@iki.fi\n   Hannes\
    \ Tschofenig\n   Nokia Siemens Networks\n   Linnoitustie 6\n   Espoo  02600\n\
    \   Finland\n   Phone: +358 (50) 4871445\n   EMail: Hannes.Tschofenig@gmx.net\n\
    \   URI:   http://www.tschofenig.priv.at\n   Yaron Sheffer\n   Independent\n \
    \  EMail: yaronf.ietf@gmail.com\n"
