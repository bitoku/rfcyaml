- title: __initial_text__
  contents:
  - '                   xCal: The XML Format for iCalendar

    '
- title: Abstract
  contents:
  - "Abstract\n   This specification defines \"xCal\", an XML format for iCalendar\
    \ data.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6321.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Conventions Used in This Document ...............................4\n  \
    \ 3. Converting from iCalendar to xCal ...............................4\n    \
    \  3.1. Pre-Processing .............................................4\n      3.2.\
    \ iCalendar Stream (RFC 5545, Section 3.4) ...................5\n      3.3. Components\
    \ (RFC 5545, Section 3.6) .........................6\n      3.4. Properties (RFC\
    \ 5545, Sections 3.7 and 3.8) ................6\n           3.4.1. Special Cases\
    \ for Properties ........................8\n                  3.4.1.1. Multi-Valued\
    \ Properties ....................8\n                  3.4.1.2. GEO Property ...............................9\n\
    \                  3.4.1.3. REQUEST-STATUS Property ....................9\n  \
    \    3.5. Parameters (RFC 5545, Section 3.2) ........................10\n    \
    \       3.5.1. VALUE Parameter ....................................11\n      3.6.\
    \ Values (RFC 5545, Section 3.3) ............................11\n           3.6.1.\
    \ Binary (RFC 5545, Section 3.3.1) ...................12\n           3.6.2. Boolean\
    \  (RFC 5545, Section 3.3.2) .................12\n           3.6.3. Calendar User\
    \ Address (RFC 5545, Section 3.3.3) ....12\n           3.6.4. Date (RFC 5545,\
    \ Section 3.3.4) .....................12\n           3.6.5. Date-Time (RFC 5545,\
    \ Section 3.3.5) ................13\n           3.6.6. Duration (RFC 5545, Section\
    \ 3.3.6) .................13\n           3.6.7. Float (RFC 5545, Section 3.3.7)\
    \ ....................13\n           3.6.8. Integer (RFC 5545, Section 3.3.8)\
    \ ..................14\n           3.6.9. Period of Time (RFC 5545, Section 3.3.9)\
    \ ...........14\n           3.6.10. Recurrence Rule (RFC 5545, Section 3.3.10)\
    \ ........14\n           3.6.11. Text (RFC 5545, Section 3.3.11) ...................15\n\
    \           3.6.12. Time (RFC 5545, Section 3.3.12) ...................15\n  \
    \         3.6.13. URI (RFC 5545, Section 3.3.13) ....................15\n    \
    \       3.6.14. UTC Offset (RFC 5545, Section 3.3.14) .............16\n      3.7.\
    \ Extensions ................................................16\n   4. Converting\
    \ from xCal into iCalendar ............................16\n      4.1. Converting\
    \ XML Extensions into iCalendar ..................16\n      4.2. The XML Property\
    \ for iCalendar ............................17\n   5. Handling Unrecognized Properties\
    \ or Parameters .................18\n   6. Security Considerations ........................................19\n\
    \   7. IANA Considerations ............................................20\n  \
    \    7.1. Namespace Registration ....................................20\n    \
    \  7.2. Media Type ................................................20\n      7.3.\
    \ iCalendar Property Registrations ..........................21\n   8. Acknowledgments\
    \ ................................................22\n   9. References .....................................................22\n\
    \      9.1. Normative References ......................................22\n  \
    \    9.2. Informative References ....................................22\n   Appendix\
    \ A. RELAX NG Schema .......................................23\n   Appendix B.\
    \ Examples ..............................................49\n     B.1. Example\
    \ 1 ..................................................49\n       B.1.1. iCalendar\
    \ Data .........................................49\n       B.1.2. XML Data ...............................................49\n\
    \     B.2. Example 2 ..................................................50\n  \
    \     B.2.1. iCalendar Data .........................................50\n    \
    \   B.2.2. XML Data ...............................................51\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The iCalendar data format [RFC5545] is a widely deployed\
    \ interchange\n   format for calendaring and scheduling data.  While many applications\n\
    \   and services consume and generate calendar data, iCalendar is a\n   specialized\
    \ format that requires its own parser/generator.  In\n   contrast, XML-based formats\
    \ are widely used for interoperability\n   between applications, and the many\
    \ tools that generate, parse, and\n   manipulate XML make it easier to work with\
    \ than iCalendar.\n   The purpose of this specification is to define \"xCal\"\
    , an XML format\n   for iCalendar data. xCal is defined as a straightforward mapping\
    \ into\n   XML from iCalendar, so that iCalendar data can be converted to XML,\n\
    \   and then back to iCalendar, without losing any semantic meaning in\n   the\
    \ data.  Anyone creating xCal calendar data according to this\n   specification\
    \ will know that their data can be converted to a valid\n   iCalendar representation\
    \ as well.\n   Key design considerations are:\n      Round-tripping (converting\
    \ an iCalendar instance to xCal and back)\n      will give the same semantic result\
    \ as the starting point.  That\n      is, all components, properties, and property\
    \ parameters are\n      guaranteed to be preserved, with the exception of those\
    \ that have\n      default values.\n      xCal preserves the semantics of the\
    \ iCalendar data.  While a\n      simple consumer can easily browse the calendar\
    \ data in xCal, a\n      full understanding of iCalendar is still required in\
    \ order to\n      modify and/or fully comprehend the calendar data.\n      xCal\
    \ has the ability to handle many extensions to the underlying\n      iCalendar\
    \ specification without requiring an update to this\n      document.\n"
- title: 2.  Conventions Used in This Document
  contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n   When XML element types in the namespace\n   \"urn:ietf:params:xml:ns:icalendar-2.0\"\
    \ are referenced in this\n   document outside of the context of an XML fragment,\
    \ the string \"IC:\"\n   will be prefixed to the element types.\n   Some examples\
    \ in this document contain \"partial\" XML documents used\n   for illustrative\
    \ purposes.  In these examples, three periods \"...\"\n   are used to indicate\
    \ a portion of the document that has been removed\n   for compactness.\n"
- title: 3.  Converting from iCalendar to xCal
  contents:
  - "3.  Converting from iCalendar to xCal\n   This section describes how iCalendar\
    \ data is converted to xCal using\n   a simple mapping between the iCalendar data\
    \ model and XML elements.\n"
- title: 3.1.  Pre-Processing
  contents:
  - "3.1.  Pre-Processing\n   iCalendar uses a line folding mechanism to limit lines\
    \ of data to a\n   maximum line length (typically 72 characters) to ensure maximum\n\
    \   likelihood of preserving data integrity as it is transported via\n   various\
    \ means (e.g., email) -- see Section 3.1 of [RFC5545].  Prior\n   to converting\
    \ iCalendar data into xCal, all folded lines MUST be\n   unfolded.\n   iCalendar\
    \ data uses an \"escape\" character sequence for text values\n   and property\
    \ parameter values.  When such text elements are converted\n   into xCal, the\
    \ escaping MUST be removed.\n   iCalendar uses a base64 encoding for binary data.\
    \  However, it does\n   not restrict the encoding from being applied to non-binary\
    \ value\n   types.  So, the following rules MUST be applied when processing a\n\
    \   property with the \"ENCODING\" property parameter set to \"BASE64\":\n   o\
    \  If the property value type is \"BINARY\", the base64 encoding MUST\n      be\
    \ preserved.\n   o  If the value type is not \"BINARY\", the \"ENCODING\" property\n\
    \      parameter MUST be removed, and the value MUST be base64 decoded.\n   When\
    \ base64 encoding and decoding are used, they MUST conform to\n   Section 4 of\
    \ [RFC4648], which is the base64 method used in [RFC5545].\n   One key difference\
    \ in the formatting of values used in iCalendar and\n   xCal is that, in xCal,\
    \ the specification uses date/time and UTC\n   offset values aligned with the\
    \ syntax of\n   [W3C.REC-xmlschema-2-20041028] to aid with XML processing.\n"
- title: 3.2.  iCalendar Stream (RFC 5545, Section 3.4)
  contents:
  - "3.2.  iCalendar Stream (RFC 5545, Section 3.4)\n   At the top level of the iCalendar\
    \ object model is an \"iCalendar\n   stream\".  This object encompasses multiple\
    \ \"iCalendar objects\".  In\n   xCal, the entire stream is contained in the root\
    \ IC:icalendar XML\n   element.\n   An iCalendar stream can contain one or more\
    \ iCalendar objects.  Each\n   iCalendar object, delimited by \"BEGIN:VCALENDAR\"\
    \ and \"END:VCALENDAR\",\n   is enclosed by the IC:vcalendar XML element.\n  \
    \ Example:\n   <?xml version=\"1.0\" encoding=\"utf-8\"?>\n   <icalendar xmlns=\"\
    urn:ietf:params:xml:ns:icalendar-2.0\">\n     <vcalendar>\n     ...\n     </vcalendar>\n\
    \   </icalendar>\n   iCalendar objects are comprised of a set of \"components\"\
    ,\n   \"properties\", \"parameters\", and \"values\".  A \"component\" can contain\n\
    \   other \"components\" or \"properties\".  A \"property\" has a value and a\n\
    \   set of zero or more \"parameters\".\n   In xCal, component elements, for example,\
    \ IC:vevent and IC:vtodo, are\n   contained within an IC:components XML element.\
    \  Within the component\n   element, another IC:components element could appear\
    \ (representing\n   components nested within components) or the IC:properties\
    \ XML element\n   could appear.  IC:properties is used to encapsulate iCalendar\n\
    \   properties.\n   Each iCalendar property will be mapped to its own XML element\
    \ as\n   described below.  Within each of these elements, there is zero or one\n\
    \   IC:parameters XML element used to encapsulate any iCalendar property\n   parameters.\
    \  Additionally there will be one or more XML elements\n   representing the value\
    \ of the iCalendar property.\n   Example:\n   <?xml version=\"1.0\" encoding=\"\
    utf-8\"?>\n   <icalendar xmlns=\"urn:ietf:params:xml:ns:icalendar-2.0\">\n   \
    \  <vcalendar>\n       <properties>\n       ...\n       </properties>\n      \
    \ <components>\n       ...\n       </components>\n     </vcalendar>\n   </icalendar>\n\
    \          +------------------+--------------+------------------+\n          |\
    \ Item             | XML element  | XML Definition   |\n          +------------------+--------------+------------------+\n\
    \          | iCalendar Stream | IC:icalendar | Appendix A # 3.4 |\n          |\
    \ VCALENDAR        | IC:vcalendar | Appendix A # 3.6 |\n          +------------------+--------------+------------------+\n"
- title: 3.3.  Components (RFC 5545, Section 3.6)
  contents:
  - "3.3.  Components (RFC 5545, Section 3.6)\n   Each calendar component in the \"\
    VCALENDAR\" object, delimited by\n   \"BEGIN\" and \"END\", will be converted\
    \ to an enclosing XML element with\n   the same name, but in lowercase.  As an\
    \ example, the table below\n   shows iCalendar-to-xCal mappings for current iCalendar\
    \ components.\n   Any new iCalendar components added in the future will be converted\
    \ in\n   the same way.\n             +-----------+--------------+--------------------+\n\
    \             | Component | XML element  | XML Definition     |\n            \
    \ +-----------+--------------+--------------------+\n             | VEVENT   \
    \ | IC:vevent    | Appendix A # 3.6.1 |\n             | VTODO     | IC:vtodo \
    \    | Appendix A # 3.6.2 |\n             | VJOURNAL  | IC:vjournal  | Appendix\
    \ A # 3.6.3 |\n             | VFREEBUSY | IC:vfreebusy | Appendix A # 3.6.4 |\n\
    \             | VTIMEZONE | IC:vtimezone | Appendix A # 3.6.5 |\n            \
    \ | STANDARD  | IC:standard  | Appendix A # 3.6.5 |\n             | DAYLIGHT \
    \ | IC:daylight  | Appendix A # 3.6.5 |\n             | VALARM    | IC:valarm\
    \    | Appendix A # 3.6.6 |\n             +-----------+--------------+--------------------+\n"
- title: 3.4.  Properties (RFC 5545, Sections 3.7 and 3.8)
  contents:
  - "3.4.  Properties (RFC 5545, Sections 3.7 and 3.8)\n   iCalendar properties, whether\
    \ they apply to the \"VCALENDAR\" object or\n   to a component, are handled in\
    \ a consistent way in the xCal format.\n   iCalendar properties are enclosed in\
    \ the XML element IC:properties.\n   Each individual iCalendar property is represented\
    \ in xCal by an\n   element of the same name as the iCalendar property, but in\
    \ lowercase.\n   For example, the \"CALSCALE\" property is represented in xCal\
    \ by the\n   IC:calscale element.\n   Example:\n   <?xml version=\"1.0\" encoding=\"\
    utf-8\"?>\n   <icalendar xmlns=\"urn:ietf:params:xml:ns:icalendar-2.0\">\n   \
    \  <vcalendar>\n       <properties>\n         <calscale>...</calscale>\n     \
    \    <version>...</version>\n         <prodid>...</prodid>\n       </properties>\n\
    \       <components>\n       ...\n       </components>\n     </vcalendar>\n  \
    \ </icalendar>\n   Each property can contain an IC:parameters XML element encapsulating\n\
    \   any iCalendar property parameters associated with the iCalendar\n   property.\n\
    \   Each property will contain one or more \"value\" XML elements as\n   described\
    \ below representing the value of the iCalendar property.\n   As an example, the\
    \ table below shows iCalendar-to-xCal mappings for\n   current iCalendar properties.\
    \  Any new iCalendar properties added in\n   the future will be converted in the\
    \ same way.\n    +------------------+---------------------+-----------------------+\n\
    \    | Property         | XML element         | XML Definition        |\n    +------------------+---------------------+-----------------------+\n\
    \    | CALSCALE         | IC:calscale         | Appendix A # 3.7.1    |\n    |\
    \ METHOD           | IC:method           | Appendix A # 3.7.2    |\n    | PRODID\
    \           | IC:prodid           | Appendix A # 3.7.3    |\n    | VERSION   \
    \       | IC:version          | Appendix A # 3.7.4    |\n    | ATTACH        \
    \   | IC:attach           | Appendix A # 3.8.1.1  |\n    | CATEGORIES       |\
    \ IC:categories       | Appendix A # 3.8.1.2  |\n    | CLASS            | IC:class\
    \            | Appendix A # 3.8.1.3  |\n    | COMMENT          | IC:comment  \
    \        | Appendix A # 3.8.1.4  |\n    | DESCRIPTION      | IC:description  \
    \    | Appendix A # 3.8.1.5  |\n    | GEO              | IC:geo              |\
    \ Appendix A # 3.8.1.6  |\n    | LOCATION         | IC:location         | Appendix\
    \ A # 3.8.1.7  |\n    | PERCENT-COMPLETE | IC:percent-complete | Appendix A #\
    \ 3.8.1.8  |\n    | PRIORITY         | IC:priority         | Appendix A # 3.8.1.9\
    \  |\n    | RESOURCES        | IC:resources        | Appendix A # 3.8.1.10 |\n\
    \    | STATUS           | IC:status           | Appendix A # 3.8.1.11 |\n    |\
    \ SUMMARY          | IC:summary          | Appendix A # 3.8.1.12 |\n    | COMPLETED\
    \        | IC:completed        | Appendix A # 3.8.2.1  |\n    | DTEND        \
    \    | IC:dtend            | Appendix A # 3.8.2.2  |\n    | DUE              |\
    \ IC:due              | Appendix A # 3.8.2.3  |\n    | DTSTART          | IC:dtstart\
    \          | Appendix A # 3.8.2.4  |\n    | DURATION         | IC:duration   \
    \      | Appendix A # 3.8.2.5  |\n    | FREEBUSY         | IC:freebusy       \
    \  | Appendix A # 3.8.2.6  |\n    | TRANSP           | IC:transp           | Appendix\
    \ A # 3.8.2.7  |\n    | TZID             | IC:tzid             | Appendix A #\
    \ 3.8.3.1  |\n    | TZNAME           | IC:tzname           | Appendix A # 3.8.3.2\
    \  |\n    | TZOFFSETFROM     | IC:tzoffsetfrom     | Appendix A # 3.8.3.3  |\n\
    \    | TZOFFSETTO       | IC:tzoffsetto       | Appendix A # 3.8.3.4  |\n    |\
    \ TZURL            | IC:tzurl            | Appendix A # 3.8.3.5  |\n    | ATTENDEE\
    \         | IC:attendee         | Appendix A # 3.8.4.1  |\n    | CONTACT     \
    \     | IC:contact          | Appendix A # 3.8.4.2  |\n    | ORGANIZER       \
    \ | IC:organizer        | Appendix A # 3.8.4.3  |\n    | RECURRENCE-ID    | IC:recurrence-id\
    \    | Appendix A # 3.8.4.4  |\n    | RELATED-TO       | IC:related-to       |\
    \ Appendix A # 3.8.4.5  |\n    | URL              | IC:url              | Appendix\
    \ A # 3.8.4.6  |\n    | UID              | IC:uid              | Appendix A #\
    \ 3.8.4.7  |\n    | EXDATE           | IC:exdate           | Appendix A # 3.8.5.1\
    \  |\n    | RDATE            | IC:rdate            | Appendix A # 3.8.5.2  |\n\
    \    | RRULE            | IC:rrule            | Appendix A # 3.8.5.3  |\n    |\
    \ ACTION           | IC:action           | Appendix A # 3.8.6.1  |\n    | REPEAT\
    \           | IC:repeat           | Appendix A # 3.8.6.2  |\n    | TRIGGER   \
    \       | IC:trigger          | Appendix A # 3.8.6.3  |\n    | CREATED       \
    \   | IC:created          | Appendix A # 3.8.7.1  |\n    | DTSTAMP          |\
    \ IC:dtstamp          | Appendix A # 3.8.7.2  |\n    | LAST-MODIFIED    | IC:last-modified\
    \    | Appendix A # 3.8.7.3  |\n    | SEQUENCE         | IC:sequence         |\
    \ Appendix A # 3.8.7.4  |\n    | REQUEST-STATUS   | IC:request-status   | Appendix\
    \ A # 3.8.8.3  |\n    +------------------+---------------------+-----------------------+\n"
- title: 3.4.1.  Special Cases for Properties
  contents:
  - "3.4.1.  Special Cases for Properties\n   This section describes some properties\
    \ that have special handling\n   when converting to xCal.\n"
- title: 3.4.1.1.  Multi-Valued Properties
  contents:
  - "3.4.1.1.  Multi-Valued Properties\n   The following iCalendar properties can\
    \ have values that consist of a\n   list of \"standard\" iCalendar values separated\
    \ by a specific\n   delimiter.  In xCal, these properties are represented by an\
    \ XML\n   element that contains multiple \"value\" elements (Section 3.6).\n \
    \         +------------+---------------+-----------------------+\n          |\
    \ Property   | XML element   | XML Definition        |\n          +------------+---------------+-----------------------+\n\
    \          | CATEGORIES | IC:categories | Appendix A # 3.8.1.2  |\n          |\
    \ RESOURCES  | IC:resources  | Appendix A # 3.8.1.10 |\n          | FREEBUSY \
    \  | IC:freebusy   | Appendix A # 3.8.2.6  |\n          | EXDATE     | IC:exdate\
    \     | Appendix A # 3.8.5.1  |\n          | RDATE      | IC:rdate      | Appendix\
    \ A # 3.8.5.2  |\n          +------------+---------------+-----------------------+\n"
- title: 3.4.1.2.  GEO Property
  contents:
  - "3.4.1.2.  GEO Property\n   In iCalendar, the \"GEO\" property value is defined\
    \ as a semicolon-\n   separated list of two \"FLOAT\" values; the first representing\
    \ latitude\n   and the second longitude.\n   In xCal, the value for the IC:geo\
    \ element is represented by two XML\n   elements.  These are an IC:latitude element\
    \ and an IC:longitude\n   element, each of which contains float values.  See Appendix\
    \ A #\n   3.8.1.6.\n   Example:\n   <?xml version=\"1.0\" encoding=\"utf-8\"?>\n\
    \   <icalendar xmlns=\"urn:ietf:params:xml:ns:icalendar-2.0\">\n     ...\n   \
    \  <geo>\n       <latitude>37.386013</latitude>\n       <longitude>-122.082932</longitude>\n\
    \     </geo>\n     ...\n   </icalendar>\n"
- title: 3.4.1.3.  REQUEST-STATUS Property
  contents:
  - "3.4.1.3.  REQUEST-STATUS Property\n   In iCalendar, the \"REQUEST-STATUS\" property\
    \ value is defined as a\n   semicolon-separated list of two or three \"TEXT\"\
    \ values.  The first\n   represents a code, the second a description, and the\
    \ third any\n   additional data.\n   In xCal, the value for the IC:request-status\
    \ element is represented\n   by two or three XML elements.  These are an IC:code\
    \ element, an IC:\n   description element, and an IC:data element, each of which\
    \ contains\n   the corresponding \"TEXT\" values.  If there is no additional data\
    \ in\n   the iCalendar value, the IC:data element (which would be empty)\n   SHOULD\
    \ NOT be present.  See Appendix A # 3.8.8.3.\n   Example:\n   <?xml version=\"\
    1.0\" encoding=\"utf-8\"?>\n   <icalendar xmlns=\"urn:ietf:params:xml:ns:icalendar-2.0\"\
    >\n     ...\n     <request-status>\n       <code>2.0</code>\n       <description>Success</description>\n\
    \     </request-status>\n     ...\n   </icalendar>\n"
- title: 3.5.  Parameters (RFC 5545, Section 3.2)
  contents:
  - "3.5.  Parameters (RFC 5545, Section 3.2)\n   iCalendar property parameters are\
    \ enclosed in the XML element IC:\n   parameters, which occurs in each property\
    \ XML element.  If there are\n   no iCalendar property parameters, the IC:parameters\
    \ element (which\n   would be empty) SHOULD NOT be present.\n   Each individual\
    \ iCalendar property parameter is represented in xCal\n   by an element of the\
    \ same name as the iCalendar property parameter,\n   but in lowercase.  For example,\
    \ the \"PARTSTAT\" property parameter is\n   represented in xCal by the IC:partstat\
    \ element.\n   Example:\n   <?xml version=\"1.0\" encoding=\"utf-8\"?>\n   <icalendar\
    \ xmlns=\"urn:ietf:params:xml:ns:icalendar-2.0\">\n     <vcalendar>\n       ...\n\
    \       <components>\n         ...\n         <attendee>\n           <parameters>\n\
    \             <partstat><text>NEEDS-ACTION</text></partstat>\n           </parameters>\n\
    \           ...\n         </attendee>\n         ...\n       </components>\n  \
    \   </vcalendar>\n   </icalendar>\n   Each XML parameter element contains one\
    \ or more child XML elements\n   representing iCalendar value types.\n   As an\
    \ example, the table below shows iCalendar-to-xCal mappings for\n   current iCalendar\
    \ parameters.  Any new iCalendar parameters added in\n   the future will be converted\
    \ in the same way.\n       +----------------+-------------------+---------------------+\n\
    \       | Parameter      | XML element       | XML Definition      |\n       +----------------+-------------------+---------------------+\n\
    \       | ALTREP         | IC:altrep         | Appendix A # 3.2.1  |\n       |\
    \ CN             | IC:cn             | Appendix A # 3.2.2  |\n       | CUTYPE\
    \         | IC:cutype         | Appendix A # 3.2.3  |\n       | DELEGATED-FROM\
    \ | IC:delegated-from | Appendix A # 3.2.4  |\n       | DELEGATED-TO   | IC:delegated-to\
    \   | Appendix A # 3.2.5  |\n       | DIR            | IC:dir            | Appendix\
    \ A # 3.2.6  |\n       | ENCODING       | IC:encoding       | Appendix A # 3.2.7\
    \  |\n       | FMTTYPE        | IC:fmttype        | Appendix A # 3.2.8  |\n  \
    \     | FBTYPE         | IC:fbtype         | Appendix A # 3.2.9  |\n       | LANGUAGE\
    \       | IC:language       | Appendix A # 3.2.10 |\n       | MEMBER         |\
    \ IC:member         | Appendix A # 3.2.11 |\n       | PARTSTAT       | IC:partstat\
    \       | Appendix A # 3.2.12 |\n       | RANGE          | IC:range          |\
    \ Appendix A # 3.2.13 |\n       | RELATED        | IC:related        | Appendix\
    \ A # 3.2.14 |\n       | RELTYPE        | IC:reltype        | Appendix A # 3.2.15\
    \ |\n       | ROLE           | IC:role           | Appendix A # 3.2.16 |\n   \
    \    | RSVP           | IC:rsvp           | Appendix A # 3.2.17 |\n       | SENT-BY\
    \        | IC:sent-by        | Appendix A # 3.2.18 |\n       | TZID          \
    \ | IC:tzid           | Appendix A # 3.2.19 |\n       +----------------+-------------------+---------------------+\n"
- title: 3.5.1.  VALUE Parameter
  contents:
  - "3.5.1.  VALUE Parameter\n   iCalendar defines a \"VALUE\" property parameter\
    \ (Section 3.2.20 of\n   [RFC5545]).  This property parameter is not mapped to\
    \ an xCal XML\n   element.  Instead, the value type is handled by having different\
    \ XML\n   elements for each value, and these appear inside of property\n   elements.\
    \  Thus, when converting from iCalendar to xCal, any \"VALUE\"\n   property parameters\
    \ are skipped.  When converting from xCal into\n   iCalendar, the appropriate\
    \ \"VALUE\" property parameter MUST be\n   included in the iCalendar property\
    \ if the value type is not the\n   default value type for that property.\n"
- title: 3.6.  Values (RFC 5545, Section 3.3)
  contents:
  - "3.6.  Values (RFC 5545, Section 3.3)\n   In the typical case, iCalendar value\
    \ types are mapped into XML\n   elements with a matching name in all lowercase.\
    \  In the case of the\n   value for a recurrence rule (see below), iCalendar defines\n\
    \   \"structured\" values, and these are mapped into separate child\n   elements\
    \ for each value element.\n"
- title: 3.6.1.  Binary (RFC 5545, Section 3.3.1)
  contents:
  - "3.6.1.  Binary (RFC 5545, Section 3.3.1)\n   Description:  iCalendar \"BINARY\"\
    \ property values are represented by\n      the IC:binary XML element.  The content\
    \ of the element is base64\n      encoded data, conforming to Section 4 of [RFC4648],\
    \ which is the\n      base64 method used in [RFC5545].  Whitespace MAY be inserted\
    \ into\n      the data at any point to \"wrap\" the data to reasonable line\n\
    \      lengths.  When converting back to iCalendar, the whitespace MUST\n    \
    \  first be removed.\n   XML Definition:  Appendix A # 3.3.1\n   Example:\n  \
    \ <binary>SGVsbG8gV29ybGQh</binary>\n"
- title: 3.6.2.  Boolean  (RFC 5545, Section 3.3.2)
  contents:
  - "3.6.2.  Boolean  (RFC 5545, Section 3.3.2)\n   Description:  iCalendar \"BOOLEAN\"\
    \ property values are represented by\n      the IC:boolean XML element.  The content\
    \ of the element is a\n      boolean value.\n   XML Definition:  Appendix A #\
    \ 3.3.2\n   Example:\n   <boolean>true</boolean>\n"
- title: 3.6.3.  Calendar User Address (RFC 5545, Section 3.3.3)
  contents:
  - "3.6.3.  Calendar User Address (RFC 5545, Section 3.3.3)\n   Description:  iCalendar\
    \ \"CAL-ADDRESS\" property values are represented\n      by the IC:cal-address\
    \ XML element.  The content of the element is\n      a URI.\n   XML Definition:\
    \  Appendix A # 3.3.3\n   Example:\n   <cal-address>mailto:cyrus@example.com</cal-address>\n"
- title: 3.6.4.  Date (RFC 5545, Section 3.3.4)
  contents:
  - "3.6.4.  Date (RFC 5545, Section 3.3.4)\n   Description:  iCalendar \"DATE\" property\
    \ values are represented by the\n      IC:date XML element.  The content of the\
    \ element is the same date\n      value specified by [RFC5545], with the exception\
    \ that the date\n      components are separated by \"-\" characters, for consistency\
    \ with\n      [W3C.REC-xmlschema-2-20041028].\n   XML Definition:  Appendix A\
    \ # 3.3.4\n   Example:\n   <date>2011-05-17</date>\n"
- title: 3.6.5.  Date-Time (RFC 5545, Section 3.3.5)
  contents:
  - "3.6.5.  Date-Time (RFC 5545, Section 3.3.5)\n   Description:  iCalendar \"DATE-TIME\"\
    \ property values are represented\n      by the IC:date-time XML element.  The\
    \ content of the element is\n      the same date-time value specified by [RFC5545],\
    \ with the\n      exception that the date components are separated by \"-\"\n\
    \      characters, and the time components are separated by \":\"\n      characters,\
    \ for consistency with [W3C.REC-xmlschema-2-20041028].\n      Note that while\
    \ [W3C.REC-xmlschema-2-20041028] allows for a UTC\n      offset to be included\
    \ in date/time values, xCal does not use that,\n      and instead follows the\
    \ iCalendar behavior of using time zone\n      definitions via the \"TZID\" property\
    \ parameter.\n   XML Definition:  Appendix A # 3.3.5\n   Example:\n   <date-time>2011-05-17T12:00:00</date-time>\n"
- title: 3.6.6.  Duration (RFC 5545, Section 3.3.6)
  contents:
  - "3.6.6.  Duration (RFC 5545, Section 3.3.6)\n   Description:  iCalendar \"DURATION\"\
    \ property values are represented by\n      the IC:duration XML element.  The\
    \ content of the element is the\n      same duration value specified by [RFC5545].\n\
    \   XML Definition:  Appendix A # 3.3.6\n   Example:\n   <duration>P1D</duration>\n"
- title: 3.6.7.  Float (RFC 5545, Section 3.3.7)
  contents:
  - "3.6.7.  Float (RFC 5545, Section 3.3.7)\n   Description:  iCalendar \"FLOAT\"\
    \ property values are represented by\n      the IC:float XML element.  The content\
    \ of the element is a text\n      representation of a floating point number.\n\
    \   XML Definition:  Appendix A # 3.3.7\n   Example:\n   <float>0.5</float>\n"
- title: 3.6.8.  Integer (RFC 5545, Section 3.3.8)
  contents:
  - "3.6.8.  Integer (RFC 5545, Section 3.3.8)\n   Description:  iCalendar \"INTEGER\"\
    \ property values are represented by\n      the IC:integer XML element.  The content\
    \ of the element is a text\n      representation of an integer number.\n   XML\
    \ Definition:  Appendix A # 3.3.8\n   Examples:\n   <integer>50</integer>\n  \
    \ <integer>-100</integer>\n"
- title: 3.6.9.  Period of Time (RFC 5545, Section 3.3.9)
  contents:
  - "3.6.9.  Period of Time (RFC 5545, Section 3.3.9)\n   Description:  iCalendar\
    \ \"PERIOD\" property values are represented by\n      the IC:period XML element.\
    \  The content of the element is child\n      elements representing the start,\
    \ end, or duration components of\n      the period.\n   XML Definition:  Appendix\
    \ A # 3.3.9\n   Example:\n   <period>\n     <start>2011-05-17T12:00:00</start>\n\
    \     <duration>P1H</duration>\n   </period>\n"
- title: 3.6.10.  Recurrence Rule (RFC 5545, Section 3.3.10)
  contents:
  - "3.6.10.  Recurrence Rule (RFC 5545, Section 3.3.10)\n   Description:  iCalendar\
    \ \"RECUR\" property values are represented by\n      the IC:recur XML element.\
    \  The content of the element is child\n      elements representing the various\
    \ components of a recurrence rule.\n   XML Definition:  Appendix A # 3.3.10\n\
    \   Example:\n   <recur>\n     <freq>YEARLY</freq>\n     <count>5</count>\n  \
    \   <byday>-1SU</byday>\n     <bymonth>10</bymonth>\n   </recur>\n"
- title: 3.6.11.  Text (RFC 5545, Section 3.3.11)
  contents:
  - "3.6.11.  Text (RFC 5545, Section 3.3.11)\n   Description:  iCalendar \"TEXT\"\
    \ property values are represented by the\n      IC:text XML element.  The content\
    \ of the element is simple text.\n   XML Definition:  Appendix A # 3.3.11\n  \
    \ Example:\n   <text>Hello World!</text>\n"
- title: 3.6.12.  Time (RFC 5545, Section 3.3.12)
  contents:
  - "3.6.12.  Time (RFC 5545, Section 3.3.12)\n   Description:  iCalendar \"TIME\"\
    \ property values are represented by the\n      IC:time XML element.  The content\
    \ of the element is the same time\n      value specified by [RFC5545], with the\
    \ exception that the time\n      components are separated by \":\" characters,\
    \ for consistency with\n      [W3C.REC-xmlschema-2-20041028].  Note that while\n\
    \      [W3C.REC-xmlschema-2-20041028] allows for a UTC offset to be\n      included\
    \ in date/time values, xCal does not use that, and instead\n      follows the\
    \ iCalendar behavior of using time zone definitions via\n      the \"TZID\" property\
    \ parameter.\n   XML Definition:  Appendix A # 3.3.12\n   Example:\n   <time>12:00:00</time>\n"
- title: 3.6.13.  URI (RFC 5545, Section 3.3.13)
  contents:
  - "3.6.13.  URI (RFC 5545, Section 3.3.13)\n   Description:  iCalendar \"URI\" property\
    \ values are represented by the\n      IC:uri XML element.  The content of the\
    \ element is a URI.\n   XML Definition:  Appendix A # 3.3.13\n   Example:\n  \
    \ <uri>http://calendar.example.com</uri>\n"
- title: 3.6.14.  UTC Offset (RFC 5545, Section 3.3.14)
  contents:
  - "3.6.14.  UTC Offset (RFC 5545, Section 3.3.14)\n   Description:  iCalendar \"\
    UTC-OFFSET\" property values are represented\n      by the IC:utc-offset XML element.\
    \  The content of the element is\n      the same UTC offset value specified by\
    \ [RFC5545], with the\n      exception that the hour, minute, and second components\
    \ are\n      separated by a \":\" character, for consistency with\n      [W3C.REC-xmlschema-2-20041028].\n\
    \   XML Definition:  Appendix A # 3.3.14\n   Example:\n   <utc-offset>-05:00</utc-offset>\n"
- title: 3.7.  Extensions
  contents:
  - "3.7.  Extensions\n   iCalendar extension properties and property parameters (those\
    \ with an\n   \"X-\" prefix in their name) are handled in the same way as other\n\
    \   properties and property parameters: the property or property\n   parameter\
    \ is represented by an XML element with the same name, but in\n   lowercase, e.g.,\
    \ the \"X-FOO\" property in iCalendar turns into the IC:\n   x-foo element in\
    \ xCal.  However, see Section 5 for how to deal with\n   default values for unrecognized\
    \ extension properties or property\n   parameters.\n"
- title: 4.  Converting from xCal into iCalendar
  contents:
  - "4.  Converting from xCal into iCalendar\n   When converting component, property,\
    \ and property parameter values,\n   the names SHOULD be converted to uppercase.\
    \  Although iCalendar names\n   are case insensitive, common practice is to keep\
    \ them all uppercase\n   following the actual definitions in [RFC5545].\n   BACKSLASH\
    \ character encoding and line folding MUST be applied to the\n   resulting iCalendar\
    \ data as required by [RFC5545].\n   Non-binary value types MUST NOT be base64\
    \ encoded.\n"
- title: 4.1.  Converting XML Extensions into iCalendar
  contents:
  - "4.1.  Converting XML Extensions into iCalendar\n   XML extensions are converted\
    \ back to iCalendar in one of two ways,\n   depending on whether the extensions\
    \ are in the iCalendar XML\n   namespace or in an external namespace.\n   Extensions\
    \ that are part of the iCalendar XML namespace MUST have\n   element names that\
    \ begin with \"x-\", and will be converted back to the\n   equivalent extension\
    \ property in iCalendar.  For example, the \"x-foo\"\n   element will convert\
    \ to the \"X-FOO\" iCalendar property.\n   Extensions that are in a namespace\
    \ other than the iCalendar XML\n   namespace SHOULD be preserved in the iCalendar\
    \ representation using\n   the \"XML\" iCalendar property described in Section\
    \ 4.2.  Only those\n   extension elements that are immediate child elements of\
    \ the IC:\n   properties element are converted, any others are ignored.\n"
- title: 4.2.  The XML Property for iCalendar
  contents:
  - "4.2.  The XML Property for iCalendar\n   This section describes an extension\
    \ property for iCalendar, as\n   covered in Section 8.2.3 of [RFC5545].\n   Property\
    \ name: XML\n   Purpose: To embed extended XML-encoded iCalendar data in the\n\
    \   iCalendar format.\n   Value type: The default value type is \"TEXT\".  The\
    \ value type can\n   also be set to \"BINARY\" to indicate base64 encoded content.\n\
    \   Property parameters: IANA, non-standard, inline encoding, and value\n   data\
    \ type property parameters can be specified on this property.\n   Conformance:\
    \ The property can be specified multiple times in any\n   calendar component.\n\
    \   Description: The value of this property is a single XML 1.0\n   [W3C.REC-xml-20081126]\
    \ element.  The \"XML\" property MUST NOT be used\n   to contain properties that\
    \ are already defined in iCalendar.  Since\n   all elements in the urn:ietf:params:xml:ns:icalendar-2.0\
    \ namespace\n   convert to a well-defined iCalendar object, the elements in this\n\
    \   property MUST NOT be in the urn:ietf:params:xml:ns:icalendar-2.0\n   namespace.\
    \  The XML element that is the value of this property MUST\n   have an XML namespace\
    \ declaration.\n   The default value type for this property is \"TEXT\", and normal\n\
    \   BACKSLASH character encoding rules for that value MUST be applied.\n   Note\
    \ that the source XML can contain characters not allowed in \"TEXT\"\n   property\
    \ values.  If this is the case, then the XML data MUST be\n   base64 encoded.\
    \  As required by [RFC5545], the \"ENCODING\" property\n   parameter MUST be present\
    \ and set to \"BASE64\", and the \"VALUE\"\n   property parameter MUST be present\
    \ and set to \"BINARY\".\n   The ordering of \"XML\" properties is not preserved\
    \ in the conversion\n   between xCal and iCalendar.\n   Format definition: This\
    \ property is defined by the following\n   notation:\n   xml      = \"XML\" xmlparam\
    \ ( \":\" text ) /\n                (\n                  \";\" \"ENCODING\" \"\
    =\" \"BASE64\"\n                  \";\" \"VALUE\" \"=\" \"BINARY\"\n         \
    \         \":\" binary\n                )\n                CRLF\n   xmlparam \
    \    = *(\";\" other-param)\n   Example: The following is an example of a location\
    \ embedded in KML\n   markup inside the \"XML\" property.\n   XML:<kml xmlns=\"\
    http://www.opengis.net/kml/2.2\">\\n\n      <Document>\\n\n        <name>KML Sample</name>\\\
    n\n        <open>1</open>\\n\n        <description>An incomplete example of a\
    \ KML docum\n    ent - used as an example!</description>\\n\n      </Document>\\\
    n\n    </kml>\n"
- title: 5.  Handling Unrecognized Properties or Parameters
  contents:
  - "5.  Handling Unrecognized Properties or Parameters\n   In iCalendar, properties\
    \ have a default value type specified by their\n   definition, e.g., \"SUMMARY\"\
    's value type is \"TEXT\" and \"DURATION\"'s\n   is \"DURATION\".  When a property\
    \ uses its default value type, the\n   \"VALUE\" property parameter does not need\
    \ to be specified on the\n   property.\n   When new properties are defined or\
    \ \"X-\" properties are used, an\n   iCalendar<->xCal converter might not recognize\
    \ them, and know what\n   the appropriate default value types are, yet they need\
    \ to be able to\n   preserve the values.  A similar issue arises for unrecognized\n\
    \   property parameters.  As a result, the following rules are applied\n   when\
    \ dealing with unrecognized properties and property parameters:\n   o  When converting\
    \ iCalendar into xCal:\n      *  Any property that does not include a \"VALUE\"\
    \ property parameter\n         and whose default value type is not known MUST\
    \ be converted\n         using the value type XML element IC:unknown.  The content\
    \ of\n         that element is the unprocessed value text.\n      *  Any unrecognized\
    \ property parameter MUST be converted using the\n         value type XML element\
    \ IC:unknown, with its content set to the\n         property parameter value text,\
    \ treated as if it were a \"TEXT\"\n         value or list of \"TEXT\" values.\n\
    \   o  When converting xCal into iCalendar:\n      *  Any IC:unknown property\
    \ value XML elements are converted\n         directly into iCalendar values. \
    \ The containing property MUST\n         NOT have a \"VALUE\" property parameter.\n\
    \      *  Any IC:unknown parameter value XML elements are converted as if\n  \
    \       they were IC:text value type XML elements.\n   Example: The following\
    \ is an example of an unrecognized iCalendar\n   property (that uses a \"DATE-TIME\"\
    \ value as its default) and the\n   equivalent xCal representation of that property.\n\
    \   iCalendar:\n   X-PROPERTY:20110512T120000Z\n   xCal:\n   <x-property>\n  \
    \   <unknown>20110512T120000Z</unknown>\n   </x-property>\n   Example: The following\
    \ is an example of an unrecognized iCalendar\n   property parameter (that uses\
    \ a \"DURATION\" value as its default)\n   specified on a recognized iCalendar\
    \ property, and the equivalent xCal\n   representation of that property and property\
    \ parameter.\n   iCalendar:\n   DTSTART;X-PARAM=PT30M:20110512T130000Z\n   xCal:\n\
    \   <dtstart>\n     <parameters>\n       <x-param><unknown>PT30M</unknown></x-param>\n\
    \     </parameters>\n     <date-time>2011-05-12T13:00:00Z</date-time>\n   </dtstart>\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   For security considerations specific to calendar\
    \ data, see Section 7\n   of [RFC5545].  Since this specification is a mapping\
    \ from iCalendar,\n   no new security concerns are introduced related to calendar\
    \ data.\n   The use of XML as a format does have security risks.  Section 7 of\n\
    \   [RFC3470] discusses these risks.  See also the security discussion\n   for\
    \ the application/xml type in [RFC3023].\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   This document defines a new URN to identify a new\
    \ XML namespace for\n   iCalendar data.  The URN conforms to a registry mechanism\
    \ described\n   in [RFC3688].\n   This document defines a new media type.  The\
    \ registration is in\n   Section 7.2.\n   This document defines a new property\
    \ for iCalendar.  The registration\n   is in Section 7.3.\n"
- title: 7.1.  Namespace Registration
  contents:
  - "7.1.  Namespace Registration\n   Registration request for the iCalendar namespace:\n\
    \   URI: urn:ietf:params:xml:ns:icalendar-2.0\n   Registrant Contact: See the\
    \ \"Authors' Addresses\" section of this\n   document.\n   XML: None.  Namespace\
    \ URIs do not represent an XML specification.\n"
- title: 7.2.  Media Type
  contents:
  - "7.2.  Media Type\n   This section defines the MIME media type for use with iCalendar\
    \ in\n   XML data.\n   Type name:  application\n   Subtype name:  calendar+xml\n\
    \   Required parameters:  None\n   Optional parameters:  method, component, and\
    \ optinfo as defined for\n      the text/calendar media type in [RFC5545]; charset\
    \ as defined for\n      application/xml in [RFC3023]; per [RFC3023], use of the\
    \ charset\n      property parameter with the value \"utf-8\" is STRONGLY RECOMMENDED.\n\
    \   Encoding considerations:  Same as encoding considerations of\n      application/xml\
    \ as specified in [RFC3023].\n   Security considerations:  See Section 6.\n  \
    \ Interoperability considerations:  This media type provides an\n      alternative\
    \ format for iCalendar data based on XML.\n   Published specification:  This specification.\n\
    \   Applications that use this media type:  Applications that currently\n    \
    \  make use of the text/calendar media type can use this as an\n      alternative.\n\
    \   Additional information:\n      Magic number(s):  None\n      File extension(s):\
    \  xcs\n      Macintosh file type code(s):  None specified.\n   Person & email\
    \ address to contact for further information:\n      calsify@ietf.org\n   Intended\
    \ usage:  COMMON\n   Restrictions on usage:  There are no restrictions on where\
    \ this media\n      type can be used.\n   Author:  See the \"Authors' Addresses\"\
    \ section of this document.\n   Change controller:  IETF\n"
- title: 7.3.  iCalendar Property Registrations
  contents:
  - "7.3.  iCalendar Property Registrations\n   This document defines the following\
    \ new iCalendar property to be\n   added to the registry defined in Section 8.2.3\
    \ of [RFC5545]:\n              +----------+---------+-----------------------+\n\
    \              | Property | Status  | Reference             |\n              +----------+---------+-----------------------+\n\
    \              | XML      | Current | RFC 6321, Section 4.2 |\n              +----------+---------+-----------------------+\n"
- title: 8.  Acknowledgments
  contents:
  - "8.  Acknowledgments\n   The authors would like to thank the following for their\
    \ valuable\n   contributions: Toby Considine, Bernard Desruisseaux, Keith Moore,\n\
    \   Filip Navara, Simon Perreault, Arnaud Quillaud, Peter Saint-Andre,\n   and\
    \ Dave Thewlis.  This specification originated from the work of the\n   XML technical\
    \ committee of the Calendaring and Scheduling Consortium.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC3023]  Murata, M., St. Laurent, S., and D. Kohn, \"XML Media\n\
    \              Types\", RFC 3023, January 2001.\n   [RFC3470]  Hollenbeck, S.,\
    \ Rose, M., and L. Masinter, \"Guidelines for\n              the Use of Extensible\
    \ Markup Language (XML)\n              within IETF Protocols\", BCP 70, RFC 3470,\
    \ January 2003.\n   [RFC3688]  Mealling, M., \"The IETF XML Registry\", BCP 81,\
    \ RFC 3688,\n              January 2004.\n   [RFC4648]  Josefsson, S., \"The Base16,\
    \ Base32, and Base64 Data\n              Encodings\", RFC 4648, October 2006.\n\
    \   [RFC5545]  Desruisseaux, B., \"Internet Calendaring and Scheduling\n     \
    \         Core Object Specification (iCalendar)\", RFC 5545,\n              September\
    \ 2009.\n   [W3C.REC-xml-20081126]\n              Sperberg-McQueen, C., Yergeau,\
    \ F., Bray, T., Paoli, J.,\n              and E. Maler, \"Extensible Markup Language\
    \ (XML) 1.0 (Fifth\n              Edition)\", World Wide Web Consortium Recommendation\
    \ REC-\n              xml-20081126, November 2008,\n              <http://www.w3.org/TR/2008/REC-xml-20081126>.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [W3C.REC-xmlschema-2-20041028]\n           \
    \   Malhotra, A. and P. Biron, \"XML Schema Part 2: Datatypes\n              Second\
    \ Edition\", World Wide Web Consortium\n              Recommendation REC-xmlschema-2-20041028,\
    \ October 2004,\n              <http://www.w3.org/TR/2004/REC-xmlschema-2-20041028>.\n"
- title: Appendix A.  RELAX NG Schema
  contents:
  - "Appendix A.  RELAX NG Schema\n   Below is a RELAX NG schema for iCalendar in\
    \ XML.  The schema is non-\n   normative and given for reference only.\n   This\
    \ schema uses the compact notation of RELAX NG.  The numeric\n   section numbers\
    \ given in the comments refer to sections in [RFC5545].\n   The ordering of elements\
    \ follows the section ordering of [RFC5545].\n   The RELAX NG compact notation\
    \ \"?\" operator is used to indicate an\n   unordered list of items.  However,\
    \ that operator, as defined, allows\n   \"mixing\" each element that it operates\
    \ on at any depth within the\n   other elements, rather than just allowing \"\
    mixing\" of siblings only.\n   As a result, the schema provided allows certain\
    \ constructs that are\n   not allowed in iCalendar.  Given that there is no sibling-only\n\
    \   unordered list operator in RELAX NG, this is the best representation\n   that\
    \ can be given.\n   Patterns for date/time, duration, and UTC offset values are\
    \ given\n   because those differ from the values used in iCalendar.  More\n  \
    \ restrictive schema with patterns and numerical limits could be\n   derived from\
    \ the example schema here if more comprehensive schema\n   validation is required.\n\
    \   # RELAX NG Schema for iCalendar in XML\n   default namespace = \"urn:ietf:params:xml:ns:icalendar-2.0\"\
    \n   # 3.2 Property Parameters\n   # 3.2.1 Alternate Text Representation\n   altrepparam\
    \ = element altrep {\n       value-uri\n   }\n   # 3.2.2 Common Name\n   cnparam\
    \ = element cn {\n       value-text\n   }\n   # 3.2.3 Calendar User Type\n   cutypeparam\
    \ = element cutype {\n       element text {\n           \"INDIVIDUAL\" |\n   \
    \        \"GROUP\" |\n           \"RESOURCE\" |\n           \"ROOM\" |\n     \
    \      \"UNKNOWN\"\n       }\n   }\n   # 3.2.4 Delegators\n   delfromparam = element\
    \ delegated-from {\n       value-cal-address+\n   }\n   # 3.2.5 Delegatees\n \
    \  deltoparam = element delegated-to {\n       value-cal-address+\n   }\n   #\
    \ 3.2.6 Directory Entry Reference\n   dirparam = element dir {\n       value-uri\n\
    \   }\n   # 3.2.7 Inline Encoding\n   encodingparam = element encoding {\n   \
    \    element text {\n           \"8BIT\" |\n           \"BASE64\"\n       }\n\
    \   }\n   # 3.2.8 Format Type\n   fmttypeparam = element fmttype {\n       value-text\n\
    \   }\n   # 3.2.9 Free/Busy Time Type\n   fbtypeparam = element fbtype {\n   \
    \    element text {\n           \"FREE\" |\n           \"BUSY\" |\n          \
    \ \"BUSY-UNAVAILABLE\" |\n           \"BUSY-TENTATIVE\"\n       }\n   }\n   #\
    \ 3.2.10 Language\n   languageparam = element language {\n       value-text\n\
    \   }\n   # 3.2.11 Group or List Membership\n   memberparam = element member {\n\
    \       value-cal-address+\n   }\n   # 3.2.12 Participation Status\n   partstatparam\
    \ = element partstat {\n       type-partstat-event |\n       type-partstat-todo\
    \ |\n       type-partstat-jour\n   }\n   type-partstat-event = (\n       element\
    \ text {\n           \"NEEDS-ACTION\" |\n           \"ACCEPTED\" |\n         \
    \  \"DECLINED\" |\n           \"TENTATIVE\" |\n           \"DELEGATED\"\n    \
    \   }\n   )\n   type-partstat-todo = (\n       element text {\n           \"NEEDS-ACTION\"\
    \ |\n           \"ACCEPTED\" |\n           \"DECLINED\" |\n           \"TENTATIVE\"\
    \ |\n           \"DELEGATED\" |\n           \"COMPLETED\" |\n           \"IN-PROCESS\"\
    \n       }\n   )\n   type-partstat-jour = (\n       element text {\n         \
    \  \"NEEDS-ACTION\" |\n           \"ACCEPTED\" |\n           \"DECLINED\"\n  \
    \     }\n   )\n   # 3.2.13 Recurrence Identifier Range\n   rangeparam = element\
    \ range {\n       element text {\n           \"THISANDFUTURE\"\n       }\n   }\n\
    \   # 3.2.14 Alarm Trigger Relationship\n   trigrelparam = element related {\n\
    \       element text {\n           \"START\" |\n           \"END\"\n       }\n\
    \   }\n   # 3.2.15 Relationship Type\n   reltypeparam = element reltype {\n  \
    \     element text {\n           \"PARENT\" |\n           \"CHILD\" |\n      \
    \     \"SIBLING\"\n       }\n   }\n   # 3.2.16 Participation Role\n   roleparam\
    \ = element role {\n       element text {\n           \"CHAIR\" |\n          \
    \ \"REQ-PARTICIPANT\" |\n           \"OPT-PARTICIPANT\" |\n           \"NON-PARTICIPANT\"\
    \n       }\n   }\n   # 3.2.17 RSVP Expectation\n   rsvpparam = element rsvp {\n\
    \       value-boolean\n   }\n   # 3.2.18 Sent By\n   sentbyparam = element sent-by\
    \ {\n       value-cal-address\n   }\n   # 3.2.19 Time Zone Identifier\n   tzidparam\
    \ = element tzid {\n       value-text\n   }\n   # 3.3 Property Value Data Types\n\
    \   # 3.3.1 BINARY\n   value-binary =  element binary {\n       xsd:string\n \
    \  }\n   # 3.3.2 BOOLEAN\n   value-boolean = element boolean {\n       xsd:boolean\n\
    \   }\n   # 3.3.3 CAL-ADDRESS\n   value-cal-address = element cal-address {\n\
    \       xsd:anyURI\n   }\n   # 3.3.4 DATE\n   pattern-date = xsd:string {\n  \
    \     pattern = \"\\d\\d\\d\\d-\\d\\d-\\d\\d\"\n   }\n   value-date = element\
    \ date {\n       pattern-date\n   }\n   # 3.3.5 DATE-TIME\n   pattern-date-time\
    \ = xsd:string {\n       pattern = \"\\d\\d\\d\\d-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\\
    d\\dZ?\"\n   }\n   value-date-time = element date-time {\n       pattern-date-time\n\
    \   }\n   # 3.3.6 DURATION\n   pattern-duration = xsd:string {\n       pattern\
    \ = \"(+|-)?P(\\d+W)|(\\d+D)?\"\n               ~ \"(T(\\d+H(\\d+M)?(\\d+S)?)|\"\
    \n               ~   \"(\\d+M(\\d+S)?)|\"\n               ~   \"(\\d+S))?\"\n\
    \   }\n   value-duration = element duration {\n       pattern-duration\n   }\n\
    \   # 3.3.7 FLOAT\n   value-float = element float {\n       xsd:float\n   }\n\
    \   # 3.3.8 INTEGER\n   value-integer = element integer {\n       xsd:integer\n\
    \   }\n   # 3.3.9 PERIOD\n   value-period = element period {\n       element start\
    \ {\n           pattern-date-time\n       },\n       (\n           element end\
    \ {\n               pattern-date-time\n           } |\n           element duration\
    \ {\n               pattern-duration\n           }\n       )\n   }\n   # 3.3.10\
    \ RECUR\n   value-recur = element recur {\n       type-freq,\n       (type-until\
    \ | type-count)?,\n       element interval {\n           xsd:positiveInteger\n\
    \       }?,\n       type-bysecond*,\n       type-byminute*,\n       type-byhour*,\n\
    \       type-byday*,\n       type-bymonthday*,\n       type-byyearday*,\n    \
    \   type-byweekno*,\n       type-bymonth*,\n       type-bysetpos*,\n       element\
    \ wkst { type-weekday }?\n   }\n   type-freq = element freq {\n       \"SECONDLY\"\
    \ |\n       \"MINUTELY\" |\n       \"HOURLY\"   |\n       \"DAILY\"    |\n   \
    \    \"WEEKLY\"   |\n       \"MONTHLY\"  |\n       \"YEARLY\"\n   }\n   type-until\
    \ = element until {\n       type-date |\n       type-date-time\n   }\n   type-count\
    \ = element count {\n       xsd:positiveInteger\n   }\n   type-bysecond = element\
    \ bysecond {\n       xsd:positiveInteger\n   }\n   type-byminute = element byminute\
    \ {\n       xsd:positiveInteger\n   }\n   type-byhour = element byhour {\n   \
    \    xsd:positiveInteger\n   }\n   type-weekday = (\n       \"SU\" |\n       \"\
    MO\" |\n       \"TU\" |\n       \"WE\" |\n       \"TH\" |\n       \"FR\" |\n \
    \      \"SA\"\n   )\n   type-byday = element byday {\n       xsd:integer?,\n \
    \      type-weekday\n   }\n   type-bymonthday = element bymonthday {\n       xsd:integer\n\
    \   }\n   type-byyearday = element byyearday {\n       xsd:integer\n   }\n   type-byweekno\
    \ = element byweekno {\n       xsd:integer\n   }\n   type-bymonth = element bymonth\
    \ {\n       xsd:positiveInteger\n   }\n   type-bysetpos = element bysetpos {\n\
    \       xsd:integer\n   }\n   # 3.3.11 TEXT\n   value-text = element text {\n\
    \       xsd:string\n   }\n   # 3.3.12 TIME\n   pattern-time = xsd:string {\n \
    \      pattern = \"\\d\\d:\\d\\d:\\d\\dZ?\"\n   }\n   value-time = element time\
    \ {\n       pattern-time\n   }\n   # 3.3.13 URI\n   value-uri = element uri {\n\
    \       xsd:anyURI\n   }\n   # 3.3.14 UTC-OFFSET\n   value-utc-offset = element\
    \ utc-offset {\n       xsd:string { pattern = \"(+|-)\\d\\d:\\d\\d(:\\d\\d)?\"\
    \ }\n   }\n   # UNKNOWN\n   value-unknown = element unknown {\n       xsd:string\n\
    \   }\n   # 3.4 iCalendar Stream\n   start = element icalendar {\n       vcalendar+\n\
    \   }\n   # 3.6 Calendar Components\n   vcalendar = element vcalendar {\n    \
    \   type-calprops,\n       type-component\n   }\n   type-calprops = element properties\
    \ {\n       property-prodid &\n       property-version &\n       property-calscale?\
    \ &\n       property-method?\n   }\n   type-component = element components {\n\
    \       (\n           component-vevent |\n           component-vtodo |\n     \
    \      component-vjournal |\n           component-vfreebusy |\n           component-vtimezone\n\
    \       )*\n   }\n   # 3.6.1 Event Component\n   component-vevent = element vevent\
    \ {\n       type-eventprop,\n       element components {\n           component-valarm+\n\
    \       }?\n   }\n   type-eventprop = element properties {\n       property-dtstamp\
    \ &\n       property-dtstart &\n       property-uid &\n       property-class?\
    \ &\n       property-created? &\n       property-description? &\n       property-geo?\
    \ &\n       property-last-mod? &\n       property-location? &\n       property-organizer?\
    \ &\n       property-priority? &\n       property-seq? &\n       property-status-event?\
    \ &\n       property-summary? &\n       property-transp? &\n       property-url?\
    \ &\n       property-recurid? &\n       property-rrule? &\n       (property-dtend\
    \ | property-duration)? &\n       property-attach* &\n       property-attendee*\
    \ &\n       property-categories* &\n       property-comment* &\n       property-contact*\
    \ &\n       property-exdate* &\n       property-rstatus* &\n       property-related*\
    \ &\n       property-resources* &\n       property-rdate*\n   }\n   # 3.6.2 To-do\
    \ Component\n   component-vtodo = element vtodo {\n       type-todoprop,\n   \
    \    element components {\n           component-valarm+\n       }?\n   }\n   type-todoprop\
    \ = element properties {\n       property-dtstamp &\n       property-uid &\n \
    \      property-class? &\n       property-completed? &\n       property-created?\
    \ &\n       property-description? &\n       property-geo? &\n       property-last-mod?\
    \ &\n       property-location? &\n       property-organizer? &\n       property-percent?\
    \ &\n       property-priority? &\n       property-recurid? &\n       property-seq?\
    \ &\n       property-status-todo? &\n       property-summary? &\n       property-url?\
    \ &\n       property-rrule? &\n       (\n           (property-dtstart?, property-dtend?\
    \ ) |\n           (property-dtstart, property-duration)?\n       ) &\n       property-attach*\
    \ &\n       property-attendee* &\n       property-categories* &\n       property-comment*\
    \ &\n       property-contact* &\n       property-exdate* &\n       property-rstatus*\
    \ &\n       property-related* &\n       property-resources* &\n       property-rdate*\n\
    \   }\n   # 3.6.3 Journal Component\n   component-vjournal = element vjournal\
    \ {\n       type-jourprop\n   }\n   type-jourprop = element properties {\n   \
    \    property-dtstamp &\n       property-uid &\n       property-class? &\n   \
    \    property-created? &\n       property-dtstart? &\n       property-last-mod?\
    \ &\n       property-organizer? &\n       property-recurid? &\n       property-seq?\
    \ &\n       property-status-jour? &\n       property-summary? &\n       property-url?\
    \ &\n       property-rrule? &\n       property-attach* &\n       property-attendee*\
    \ &\n       property-categories* &\n       property-comment* &\n       property-contact*\
    \ &\n       property-description? &\n       property-exdate* &\n       property-related*\
    \ &\n       property-rdate* &\n       property-rstatus*\n   }\n   # 3.6.4 Free/Busy\
    \ Component\n   component-vfreebusy = element vfreebusy {\n       type-fbprop\n\
    \   }\n   type-fbprop = element properties {\n       property-dtstamp &\n    \
    \   property-uid &\n       property-contact? &\n       property-dtstart? &\n \
    \      property-dtend? &\n       property-duration? &\n       property-organizer?\
    \ &\n       property-url? &\n       property-attendee* &\n       property-comment*\
    \ &\n       property-freebusy* &\n       property-rstatus*\n   }\n   # 3.6.5 Time\
    \ Zone Component\n   component-vtimezone = element vtimezone {\n       element\
    \ properties {\n           property-tzid &\n           property-last-mod? &\n\
    \           property-tzuurl?\n       },\n       element components {\n       \
    \    (component-standard | component-daylight) &\n           component-standard*\
    \ &\n           component-daylight*\n       }\n   }\n   component-standard = element\
    \ standard {\n       type-tzprop\n   }\n   component-daylight = element daylight\
    \ {\n       type-tzprop\n   }\n   type-tzprop = element properties {\n       property-dtstart\
    \ &\n       property-tzoffsetto &\n       property-tzoffsetfrom &\n       property-rrule?\
    \ &\n       property-comment* &\n       property-rdate* &\n       property-tzname*\n\
    \   }\n   # 3.6.6 Alarm Component\n   component-valarm = element valarm {\n  \
    \     audioprop | dispprop | emailprop\n   }\n   type-audioprop = element properties\
    \ {\n       property-action &\n       property-trigger &\n       (property-duration,\
    \ property-repeat)? &\n       property-attach?\n   }\n   type-dispprop = element\
    \ properties {\n       property-action &\n       property-description &\n    \
    \   property-trigger &\n       property-summary &\n       property-attendee+ &\n\
    \       (property-duration, property-repeat)? &\n       property-attach*\n   }\n\
    \   type-emailprop = element properties {\n       property-action &\n       property-description\
    \ &\n       property-trigger &\n       (property-duration, property-repeat)?\n\
    \   }\n   # 3.7 Calendar Properties\n   # 3.7.1 Calendar Scale\n   property-calscale\
    \ = element calscale {\n       element parameters { empty }?,\n       element\
    \ text { \"GREGORIAN\" }\n   }\n   # 3.7.2 Method\n   property-method = element\
    \ method {\n       element parameters { empty }?,\n       value-text\n   }\n \
    \  # 3.7.3 Product Identifier\n   property-prodid = element prodid {\n       element\
    \ parameters { empty }?,\n       value-text\n   }\n   # 3.7.4 Version\n   property-version\
    \ = element version {\n       element parameters { empty }?,\n       element text\
    \ { \"2.0\" }\n   }\n   # 3.8 Component Properties\n   # 3.8.1 Descriptive Component\
    \ Properties\n   # 3.8.1.1 Attachment\n   property-attach = element attach {\n\
    \       element parameters {\n           fmttypeparam? &\n           encodingparam?\n\
    \       }?,\n       value-uri | value-binary\n   }\n   # 3.8.1.2 Categories\n\
    \   property-categories = element categories {\n       element parameters {\n\
    \           languageparam? &\n       }?,\n       value-text+\n   }\n   # 3.8.1.3\
    \ Classification\n   property-class = element class {\n       element parameters\
    \ { empty }?,\n       element text {\n           \"PUBLIC\" |\n           \"PRIVATE\"\
    \ |\n           \"CONFIDENTIAL\"\n       }\n   }\n   # 3.8.1.4 Comment\n   property-comment\
    \ = element comment {\n       element parameters {\n           altrepparam? &\n\
    \           languageparam?\n       }?,\n       value-text\n   }\n   # 3.8.1.5\
    \ Description\n   property-description = element description {\n       element\
    \ parameters {\n           altrepparam? &\n           languageparam?\n       }?,\n\
    \       value-text\n   }\n   # 3.8.1.6 Geographic Position\n   property-geo =\
    \ element geo {\n       element parameters { empty }?,\n       element latitude\
    \  { xsd:float },\n       element longitude { xsd:float }\n   }\n   # 3.8.1.7\
    \ Location\n   property-location = element location {\n       element parameters\
    \ {\n           altrepparam? &\n           languageparam?\n       }?,\n      \
    \ value-text\n   }\n   # 3.8.1.8 Percent Complete\n   property-percent = element\
    \ percent-complete {\n       element parameters { empty }?,\n       value-integer\n\
    \   }\n   # 3.8.1.9 Priority\n   property-priority = element priority {\n    \
    \   element parameters { empty }?,\n       value-integer\n   }\n   # 3.8.1.10\
    \ Resources\n   property-resources = element resources {\n       element parameters\
    \ {\n           altrepparam? &\n           languageparam?\n       }?,\n      \
    \ value-text+\n   }\n   # 3.8.1.11 Status\n   property-status-event = element\
    \ status {\n       element parameters { empty }?,\n       element text {\n   \
    \        \"TENTATIVE\" |\n           \"CONFIRMED\" |\n           \"CANCELLED\"\
    \n       }\n   }\n   property-status-todo = element status {\n       element parameters\
    \ { empty }?,\n       element text {\n           \"NEEDS-ACTION\" |\n        \
    \   \"COMPLETED\" |\n           \"IN-PROCESS\" |\n           \"CANCELLED\"\n \
    \      }\n   }\n   property-status-jour = element status {\n       element parameters\
    \ { empty }?,\n       element text {\n           \"DRAFT\" |\n           \"FINAL\"\
    \ |\n           \"CANCELLED\"\n       }\n   }\n   # 3.8.1.12 Summary\n   property-summary\
    \ = element summary {\n       element parameters {\n           altrepparam? &\n\
    \           languageparam?\n       }?,\n       value-text\n   }\n   # 3.8.2 Date\
    \ and Time Component Properties\n   # 3.8.2.1 Date/Time Completed\n   property-completed\
    \ = element completed {\n       element parameters { empty }?,\n       value-date-time\n\
    \   }\n   # 3.8.2.2 Date/Time End\n   property-dtend = element dtend {\n     \
    \  element parameters {\n           tzidparam?\n       }?,\n       value-date-time\
    \ |\n       value-date\n   }\n   # 3.8.2.3 Date/Time Due\n   property-due = element\
    \ due {\n       element parameters {\n           tzidparam?\n       }?,\n    \
    \   value-date-time |\n       value-date\n   }\n   # 3.8.2.4 Date/Time Start\n\
    \   property-dtstart = element dtstart {\n       element parameters {\n      \
    \     tzidparam?\n       }?,\n       value-date-time |\n       value-date\n  \
    \ }\n   # 3.8.2.5 Duration\n   property-duration = element duration {\n      \
    \ element parameters { empty }?,\n       value-duration\n   }\n   # 3.8.2.6 Free/Busy\
    \ Time\n   property-freebusy = element freebusy {\n       element parameters {\n\
    \           fbtypeparam?\n       }?,\n       value-period+\n   }\n   # 3.8.2.7\
    \ Time Transparency\n   property-transp = element transp {\n       element parameters\
    \ { empty }?,\n       element text {\n           \"OPAQUE\" |\n           \"TRANSPARENT\"\
    \n       }\n   }\n   # 3.8.3 Time Zone Component Properties\n   # 3.8.3.1 Time\
    \ Zone Identifier\n   property-tzid = element tzid {\n       element parameters\
    \ { empty }?,\n       value-text\n   }\n   # 3.8.3.2 Time Zone Name\n   property-tzname\
    \ = element tzname {\n       element parameters {\n           languageparam?\n\
    \       }?,\n       value-text\n   }\n   # 3.8.3.3 Time Zone Offset From\n   property-tzoffsetfrom\
    \ = element tzoffsetfrom {\n       element parameters { empty }?,\n       value-utc-offset\n\
    \   }\n   # 3.8.3.4 Time Zone Offset To\n   property-tzoffsetto = element tzoffsetto\
    \ {\n       element parameters { empty }?,\n       value-utc-offset\n   }\n  \
    \ # 3.8.3.5 Time Zone URL\n   property-tzurl = element tzurl {\n       element\
    \ parameters { empty }?,\n       value-uri\n   }\n   # 3.8.4 Relationship Component\
    \ Properties\n   # 3.8.4.1 Attendee\n   property-attendee = element attendee {\n\
    \       element parameters {\n           cutypeparam? &\n           memberparam?\
    \ &\n           roleparam? &\n           partstatparam? &\n           rsvpparam?\
    \ &\n           deltoparam? &\n           delfromparam? &\n           sentbyparam?\
    \ &\n           cnparam? &\n           dirparam? &\n           languageparam?\n\
    \       }?,\n       value-cal-address\n   }\n   # 3.8.4.2 Contact\n   property-contact\
    \ = element contact {\n       element parameters {\n           altrepparam? &\n\
    \           languageparam?\n       }?,\n       value-text\n   }\n   # 3.8.4.3\
    \ Organizer\n   property-organizer = element organizer {\n       element parameters\
    \ {\n           cnparam? &\n           dirparam? &\n           sentbyparam? &\n\
    \           languageparam?\n       }?,\n       value-cal-address\n   }\n   # 3.8.4.4\
    \ Recurrence ID\n   property-recurid = element recurrence-id {\n       element\
    \ parameters {\n           tzidparam? &\n           rangeparam?\n       }?,\n\
    \       value-date-time |\n       value-date\n   }\n   # 3.8.4.5 Related-To\n\
    \   property-related = element related-to {\n       element parameters {\n   \
    \        reltypeparam?\n       }?,\n       value-text\n   }\n   # 3.8.4.6 Uniform\
    \ Resource Locator\n   property-url = element url {\n       element parameters\
    \ { empty }?,\n       value-uri\n   }\n   # 3.8.4.7 Unique Identifier\n   property-uid\
    \ = element uid {\n       element parameters { empty }?,\n       value-text\n\
    \   }\n   # 3.8.5 Recurrence Component Properties\n   # 3.8.5.1 Exception Date/Times\n\
    \   property-exdate = element exdate {\n       element parameters {\n        \
    \   tzidparam?\n       }?,\n       value-date-time+ |\n       value-date+\n  \
    \ }\n   # 3.8.5.2 Recurrence Date/Times\n   property-rdate = element rdate {\n\
    \       element parameters {\n           tzidparam?\n       }?,\n       value-date-time+\
    \ |\n       value-date+ |\n       value-period+\n   }\n   # 3.8.5.3 Recurrence\
    \ Rule\n   property-rrule = element rrule {\n       element parameters { empty\
    \ }?,\n       value-recur\n   }\n   # 3.8.6 Alarm Component Properties\n   # 3.8.6.1\
    \ Action\n   property-action = element action {\n       element parameters { empty\
    \ }?,\n       element text {\n           \"AUDIO\" |\n           \"DISPLAY\" |\n\
    \           \"EMAIL\"\n       }\n   }\n   # 3.8.6.2 Repeat Count\n   property-repeat\
    \ = element repeat {\n       element parameters { empty }?,\n       value-integer\n\
    \   }\n   # 3.8.6.3 Trigger\n   property-trigger = element trigger {\n       (\n\
    \           element parameters {\n               trigrelparam?\n           }?,\n\
    \           value-duration\n       ) |\n       (\n           element parameters\
    \ { empty }?,\n           value-date-time\n       )\n   }\n   # 3.8.7 Change Management\
    \ Component Properties\n   # 3.8.7.1 Date/Time Created\n   property-created =\
    \ element created {\n       element parameters { empty }?,\n       value-date-time\n\
    \   }\n   # 3.8.7.2 Date/Time Stamp\n   property-dtstamp = element dtstamp {\n\
    \       element parameters { empty }?,\n       value-date-time\n   }\n   # 3.8.7.3\
    \ Last Modified\n   property-last-mod = element last-modified {\n       element\
    \ parameters { empty }?,\n       value-date-time\n   }\n   # 3.8.7.4 Sequence\
    \ Number\n   property-seq = element sequence {\n       element parameters { empty\
    \ }?,\n       value-integer\n   }\n   # 3.8.8 Miscellaneous Component Properties\n\
    \   # 3.8.8.3 Request Status\n   property-rstatus = element request-status {\n\
    \       element parameters {\n           languageparam?\n       }?,\n       element\
    \ code { xsd:string },\n       element description { xsd:string },\n       element\
    \ data { xsd:string }?\n   }\n"
- title: Appendix B.  Examples
  contents:
  - "Appendix B.  Examples\n   This section contains two examples of iCalendar objects\
    \ with their\n   xCal representation.\n"
- title: B.1.  Example 1
  contents:
  - 'B.1.  Example 1

    '
- title: B.1.1.  iCalendar Data
  contents:
  - "B.1.1.  iCalendar Data\n   BEGIN:VCALENDAR\n   CALSCALE:GREGORIAN\n   PRODID:-//Example\
    \ Inc.//Example Calendar//EN\n   VERSION:2.0\n   BEGIN:VEVENT\n   DTSTAMP:20080205T191224Z\n\
    \   DTSTART:20081006\n   SUMMARY:Planning meeting\n   UID:4088E990AD89CB3DBB484909\n\
    \   END:VEVENT\n   END:VCALENDAR\n"
- title: B.1.2.  XML Data
  contents:
  - "B.1.2.  XML Data\n   <?xml version=\"1.0\" encoding=\"utf-8\"?>\n   <icalendar\
    \ xmlns=\"urn:ietf:params:xml:ns:icalendar-2.0\">\n    <vcalendar>\n     <properties>\n\
    \      <calscale>\n        <text>GREGORIAN</text>\n      </calscale>\n      <prodid>\n\
    \       <text>-//Example Inc.//Example Calendar//EN</text>\n      </prodid>\n\
    \      <version>\n        <text>2.0</text>\n      </version>\n     </properties>\n\
    \     <components>\n      <vevent>\n       <properties>\n        <dtstamp>\n \
    \         <date-time>2008-02-05T19:12:24Z</date-time>\n        </dtstamp>\n  \
    \      <dtstart>\n          <date>2008-10-06</date>\n        </dtstart>\n    \
    \    <summary>\n         <text>Planning meeting</text>\n        </summary>\n \
    \       <uid>\n         <text>4088E990AD89CB3DBB484909</text>\n        </uid>\n\
    \       </properties>\n      </vevent>\n     </components>\n    </vcalendar>\n\
    \   </icalendar>\n"
- title: B.2.  Example 2
  contents:
  - 'B.2.  Example 2

    '
- title: B.2.1.  iCalendar Data
  contents:
  - "B.2.1.  iCalendar Data\n   VERSION:2.0\n   PRODID:-//Example Corp.//Example Client//EN\n\
    \   BEGIN:VTIMEZONE\n   LAST-MODIFIED:20040110T032845Z\n   TZID:US/Eastern\n \
    \  BEGIN:DAYLIGHT\n   DTSTART:20000404T020000\n   RRULE:FREQ=YEARLY;BYDAY=1SU;BYMONTH=4\n\
    \   TZNAME:EDT\n   TZOFFSETFROM:-0500\n   TZOFFSETTO:-0400\n   END:DAYLIGHT\n\
    \   BEGIN:STANDARD\n   DTSTART:20001026T020000\n   RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=10\n\
    \   TZNAME:EST\n   TZOFFSETFROM:-0400\n   TZOFFSETTO:-0500\n   END:STANDARD\n\
    \   END:VTIMEZONE\n   BEGIN:VEVENT\n   DTSTAMP:20060206T001121Z\n   DTSTART;TZID=US/Eastern:20060102T120000\n\
    \   DURATION:PT1H\n   RRULE:FREQ=DAILY;COUNT=5\n   RDATE;TZID=US/Eastern;VALUE=PERIOD:20060102T150000/PT2H\n\
    \   SUMMARY:Event #2\n   DESCRIPTION:We are having a meeting all this week at\
    \ 12 pm fo\n    r one hour\\, with an additional meeting on the first day 2 h\n\
    \    ours long.\\nPlease bring your own lunch for the 12 pm meetin\n    gs.\n\
    \   UID:00959BC664CA650E933C892C@example.com\n   END:VEVENT\n   BEGIN:VEVENT\n\
    \   DTSTAMP:20060206T001121Z\n   DTSTART;TZID=US/Eastern:20060104T140000\n   DURATION:PT1H\n\
    \   RECURRENCE-ID;TZID=US/Eastern:20060104T120000\n   SUMMARY:Event #2 bis\n \
    \  UID:00959BC664CA650E933C892C@example.com\n   END:VEVENT\n   END:VCALENDAR\n"
- title: B.2.2.  XML Data
  contents:
  - "B.2.2.  XML Data\n   <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n   <icalendar\
    \ xmlns=\"urn:ietf:params:xml:ns:icalendar-2.0\">\n     <vcalendar>\n       <properties>\n\
    \         <prodid>\n           <text>-//Example Inc.//Example Client//EN</text>\n\
    \         </prodid>\n         <version>\n           <text>2.0</text>\n       \
    \  </version>\n       </properties>\n       <components>\n         <vtimezone>\n\
    \           <properties>\n             <last-modified>\n               <date-time>2004-01-10T03:28:45Z</date-time>\n\
    \             </last-modified>\n             <tzid>US/Eastern</tzid>\n       \
    \    </properties>\n           <components>\n             <daylight>\n       \
    \        <properties>\n                 <dtstart>\n                   <date-time>2000-04-04T02:00:00</date-time>\n\
    \                 </dtstart>\n                 <rrule>\n                   <recur>\n\
    \                     <freq>YEARLY</freq>\n                     <byday>1SU</byday>\n\
    \                     <bymonth>4</bymonth>\n                   </recur>\n    \
    \             </rrule>\n                 <tzname>\n                   <text>EDT</text>\n\
    \                 </tzname>\n                 <tzoffsetfrom>\n               \
    \    <utc-offset>-05:00</utc-offset>\n                 </tzoffsetfrom>\n     \
    \            <tzoffsetto>\n                   <utc-offset>-04:00</utc-offset>\n\
    \                 </tzoffsetto>\n               </properties>\n             </daylight>\n\
    \             <standard>\n               <properties>\n                 <dtstart>\n\
    \                   <date-time>2000-10-26T02:00:00</date-time>\n             \
    \    </dtstart>\n                 <rrule>\n                   <recur>\n      \
    \               <freq>YEARLY</freq>\n                     <byday>-1SU</byday>\n\
    \                     <bymonth>10</bymonth>\n                   </recur>\n   \
    \              </rrule>\n                 <tzname>\n                   <text>EST</text>\n\
    \                 </tzname>\n                 <tzoffsetfrom>\n               \
    \    <utc-offset>-04:00</utc-offset>\n                 </tzoffsetfrom>\n     \
    \            <tzoffsetto>\n                   <utc-offset>-05:00</utc-offset>\n\
    \                 </tzoffsetto>\n               </properties>\n             </standard>\n\
    \           </components>\n         </vtimezone>\n         <vevent>\n        \
    \   <properties>\n             <dtstamp>\n               <date-time>2006-02-06T00:11:21Z</date-time>\n\
    \             </dtstamp>\n             <dtstart>\n               <parameters>\n\
    \                 <tzid><text>US/Eastern</text></tzid>\n               </parameters>\n\
    \               <date-time>2006-01-02T12:00:00</date-time>\n             </dtstart>\n\
    \             <duration>\n               <duration>PT1H</duration>\n         \
    \    </duration>\n             <rrule>\n               <recur>\n             \
    \    <freq>DAILY</freq>\n                 <count>5</count>\n               </recur>\n\
    \             </rrule>\n             <rdate>\n               <parameters>\n  \
    \               <tzid><text>US/Eastern</text></tzid>\n               </parameters>\n\
    \               <period>\n                 <start>2006-01-02T15:00:00</start>\n\
    \                 <duration>PT2H</duration>\n               </period>\n      \
    \       </rdate>\n             <summary>\n               <text>Event #2</text>\n\
    \             </summary>\n             <description>\n               <text>We\
    \ are having a meeting all this week at 12\n   pm for one hour, with an additional\
    \ meeting on the first day\n   2 hours long.&#x0a;Please bring your own lunch\
    \ for the 12 pm\n   meetings.</text>\n             </description>\n          \
    \   <uid>\n               <text>00959BC664CA650E933C892C@example.com</text>\n\
    \             </uid>\n           </properties>\n         </vevent>\n         <vevent>\n\
    \           <properties>\n             <dtstamp>\n               <date-time>2006-02-06T00:11:21Z</date-time>\n\
    \             </dtstamp>\n             <dtstart>\n               <parameters>\n\
    \                 <tzid><text>US/Eastern</text></tzid>\n               </parameters>\n\
    \               <date-time>2006-01-04T14:00:00</date-time>\n             </dtstart>\n\
    \             <duration>\n               <duration>PT1H</duration>\n         \
    \    </duration>\n             <recurrence-id>\n               <parameters>\n\
    \                 <tzid><text>US/Eastern</text></tzid>\n               </parameters>\n\
    \               <date-time>2006-01-04T12:00:00</date-time>\n             </recurrence-id>\n\
    \             <summary>\n               <text>Event #2 bis</text>\n          \
    \   </summary>\n             <uid>\n               <text>00959BC664CA650E933C892C@example.com</text>\n\
    \             </uid>\n           </properties>\n         </vevent>\n       </components>\n\
    \     </vcalendar>\n   </icalendar>\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Cyrus Daboo\n   Apple Inc.\n   1 Infinite Loop\n   Cupertino,\
    \ CA  95014\n   USA\n   EMail: cyrus@daboo.name\n   URI:   http://www.apple.com/\n\
    \   Mike Douglass\n   Rensselaer Polytechnic Institute\n   110 8th Street\n  \
    \ Troy, NY  12180\n   USA\n   EMail: douglm@rpi.edu\n   URI:   http://www.rpi.edu/\n\
    \   Steven Lees\n   Microsoft Corporation\n   One Microsoft Way\n   Redmond, WA\
    \  98052\n   USA\n   EMail: steven.lees@microsoft.com\n   URI:   http://www.microsoft.com/\n"
