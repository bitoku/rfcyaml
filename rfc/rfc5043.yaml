- contents:
  - "              Stream Control Transmission Protocol (SCTP)\n                 Direct
    Data Placement (DDP) Adaptation\n"
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Abstract\n   This document specifies an adaptation layer to provide a Lower Layer\n
    \  Protocol (LLP) service for Direct Data Placement (DDP) using the\n   Stream
    Control Transmission Protocol (SCTP).\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .
    . . . . . .  3\n     1.1.  Conventions  . . . . . . . . . . . . . . . . . . .
    . . . .  3\n   2.  Definitions  . . . . . . . . . . . . . . . . . . . . . . .
    . .  3\n   3.  Motivation . . . . . . . . . . . . . . . . . . . . . . . . . .
    \ 5\n   4.  Overview . . . . . . . . . . . . . . . . . . . . . . . . . . .  5\n
    \  5.  Data Formats . . . . . . . . . . . . . . . . . . . . . . . . .  5\n     5.1.
    \ Adaptation Layer Indicator . . . . . . . . . . . . . . . .  5\n     5.2.  Payload
    Data Chunks  . . . . . . . . . . . . . . . . . . .  6\n       5.2.1.  DDP Source
    Sequence Number (DDP-SSN) . . . . . . . . .  6\n       5.2.2.  DDP Segment Chunk
    \ . . . . . . . . . . . . . . . . . .  7\n       5.2.3.  DDP Stream Session Control
    . . . . . . . . . . . . . .  7\n   6.  DDP Stream Sessions  . . . . . . . . .
    . . . . . . . . . . . .  8\n     6.1.  Sequencing . . . . . . . . . . . . . .
    . . . . . . . . . .  9\n     6.2.  Legal Sequence: Active/Passive Session Accepted
    \ . . . . .  9\n     6.3.  Legal Sequence: Active/Passive Session Rejected  .
    . . . .  9\n     6.4.  Legal Sequence: Active/Passive Session Non-ULP Rejected
    \ . 10\n     6.5.  ULP-Specific Sequencing  . . . . . . . . . . . . . . . . .
    10\n     6.6.  Other Sequencing Rules . . . . . . . . . . . . . . . . . . 10\n
    \  7.  SCTP Endpoints . . . . . . . . . . . . . . . . . . . . . . . . 11\n     7.1.
    \ Adaptation Layer Indication Restriction  . . . . . . . . . 11\n     7.2.  Multihoming
    Implications . . . . . . . . . . . . . . . . . 11\n   8.  Number of Streams  .
    . . . . . . . . . . . . . . . . . . . . . 12\n   9.  Fragmentation  . . . . .
    . . . . . . . . . . . . . . . . . . . 12\n   10. Sequenced Unordered Operation
    \ . . . . . . . . . . . . . . . . 13\n   11. Procedures . . . . . . . . . . .
    . . . . . . . . . . . . . . . 13\n     11.1. Association Initialization . . .
    . . . . . . . . . . . . . 13\n     11.2. Chunk Bundling . . . . . . . . . . .
    . . . . . . . . . . . 14\n     11.3. Association Termination  . . . . . . . .
    . . . . . . . . . 14\n   12. IANA Considerations  . . . . . . . . . . . . . .
    . . . . . . . 15\n   13. Security Considerations  . . . . . . . . . . . . . .
    . . . . . 15\n   14. Contributors . . . . . . . . . . . . . . . . . . . . . .
    . . . 16\n   15. Acknowledgments  . . . . . . . . . . . . . . . . . . . . . .
    . 16\n   16. References . . . . . . . . . . . . . . . . . . . . . . . . . . 16\n
    \    16.1. Normative References . . . . . . . . . . . . . . . . . . . 16\n     16.2.
    Informative References . . . . . . . . . . . . . . . . . . 16\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This document describes a method to adapt Direct Data Placement\n
    \  [RFC5041] to Stream Control Transmission Protocol (SCTP) [RFC4960].\n   Some
    implementations may include this adaptation layer within their\n   SCTP implementations
    to obtain maximum performance, but the behavior\n   of SCTP will be unaffected.
    \ An SCTP layer used solely by this\n   adaptation layer is able to take certain
    optimizations based on the\n   limited subset of SCTP capabilities used.  In order
    to allow\n   optimization for these implementations, we specify the use of the
    new\n   adaptation layer indication as defined in [RFC5061]\n"
  - contents:
    - "1.1.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
      \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and
      \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC
      2119 [RFC2119].\n"
    title: 1.1.  Conventions
  title: 1.  Introduction
- contents:
  - "2.  Definitions\n   DDP -  See Direct Data Placement Protocol.\n   DDP Endpoint
    -  The logical sender/receiver of DDP Segments.  An SCTP\n      stream pair is
    not assumed to have a DDP Endpoint.  DDP Segments\n      may only be sent once
    a DDP Endpoint has been assigned to an SCTP\n      stream pair by a local interface.\n
    \  DDP Source Stream Sequence Number (DDP-SSN) -  A stream-specific\n      sequence
    number assigned by the adaptation layer for each SCTP\n      Data Chunk sent.
    \ This is the order that chunks were submitted to\n      SCTP, no matter in what
    order they are actually sent or received.\n   DDP Segment -  The smallest unit
    of data transfer for the DDP\n      protocol.  It includes a DDP Header and ULP
    Payload (if present).\n      A DDP Segment should be sized to fit within the Lower
    Layer\n      Protocol MULPDU (Marker PDU Aligned (MPA) Upper Layer PDU).\n   DDP
    Segment Chunk -  An SCTP Payload Data Chunk that encapsulates the\n      DDP-SSN
    and a DDP Segment.\n   DDP Stream -  A sequence of DDP Segments whose ordering
    is defined by\n      the LLP.  For SCTP, a DDP stream maps directly to a bidirectional\n
    \     pair of SCTP streams with the same Stream IDs.  Note that DDP has\n      no
    ordering guarantees between DDP streams.\n   DDP Stream Session -  A single pairing
    of DDP Endpoints over a DDP\n      stream that lasts from an Initiation message
    through the\n      Termination message(s).\n   DDP Stream Session Control Message
    -  A message that is used to\n      control the association of the DDP Endpoint
    with the DDP stream.\n   Direct Data Placement Protocol (DDP) -  A wire protocol
    that supports\n      Direct Data Placement by associating explicit memory buffer\n
    \     placement information with the LLP payload units.\n   Lower Layer Protocol
    (LLP) -  In the context of DDP, the protocol\n      layer beneath RDMA that provides
    a reliable transport service.\n      The SCTP DDP adaption is one of the initially
    defined LLPs for\n      DDP.\n   Protection Domain -  A common local interface
    convention to control\n      which Steering Tags (STags) are valid with which
    DDP Endpoints.\n      Under this convention, both the Steering Tag and DDP Endpoint
    are\n      created within the context of a Protection Domain, and the\n      Steering
    Tag may only be enabled for DDP Endpoints created under\n      the same Protection
    Domain.\n   RDMA -  Remote Direct Memory Access.\n   RNIC -  RDMA Network Interface
    Card.\n   SCTP association -  A protocol relationship between two SCTP\n      endpoints.
    \ An SCTP association supports multiple SCTP streams.\n   SCTP Data Chunk -  An
    SCTP Chunk used to convey Payload Data.  There\n      can be multiple Chunks within
    each SCTP packet.  Other Chunks are\n      used to control the SCTP Association.\n
    \  SCTP endpoint -  The logical sender/receiver of SCTP packets.  On a\n      multihomed
    host, an SCTP endpoint is represented to its peers as a\n      combination of
    an SCTP port number and a set of eligible\n      destination transport addresses
    to which SCTP packets can be sent.\n   SCTP Stream -  A unidirectional logical
    channel established from one\n      to another associated SCTP endpoint.  There
    can be multiple SCTP\n      streams within each SCTP association.  An SCTP stream
    is used to\n      form one direction of a DDP stream.\n   Transmission Sequence
    Number (TSN) -  A 32-bit sequence number used\n      internally by SCTP.  One
    TSN is attached to each chunk containing\n      user data to permit the receiving
    SCTP endpoint to acknowledge its\n      receipt and detect duplicate deliveries.\n
    \  Upper Layer Protocol (ULP) -  In the context of RDMA protocol\n      specifications,
    this is the layer using RDMA services.  Typically,\n      this is an application
    or middleware.  A primary goal of RDMA\n      protocols is to enable direct transfer
    of payload to/from ULP\n      Buffers.\n"
  title: 2.  Definitions
- contents:
  - "3.  Motivation\n   This document specifies an adaptation layer which fulfills
    the\n   requirements of a Lower Layer Protocol (LLP) for DDP using a specific\n
    \  subset of SCTP capabilities.\n   The defined protocol is intended to be implementable
    over existing\n   SCTP stacks, while clearly defining what portions of SCTP are\n
    \  required to enable an implementation to be optimized specifically to\n   support
    DDP.\n"
  title: 3.  Motivation
- contents:
  - "4.  Overview\n   The adaptation layer uses a pair of like-numbered SCTP streams
    within\n   an SCTP Association to provide a reliable DDP stream between two DDP\n
    \  Endpoints.  Except as specifically noted, each DDP Segment submitted\n   by
    the DDP layer is encoded as a single unordered SCTP Data Chunk.\n   In addition
    to the DDP Segment, the Data Chunk also contains a\n   sequence number (DDP-SSN)
    that reflects the order in which DDP\n   submitted the segments for that stream.\n
    \  A DDP Stream Session is defined by DDP Stream Session Control Chunks\n   that
    manage the state of the DDP Stream Session.  These Chunks\n   dynamically bind
    DDP Endpoints to the DDP Stream Session, and DDP\n   Segment Chunks are used to
    reliably deliver DDP Segments with the\n   session.\n"
  title: 4.  Overview
- contents:
  - '5.  Data Formats

    '
  - contents:
    - "5.1.  Adaptation Layer Indicator\n   The DDP/SCTP adaptation layer uses all
      streams within an SCTP\n   association.  An SCTP Association that has had the
      DDP Adaptation\n   Indication negotiated will carry only SCTP Data Chunks as
      defined in\n   this document.\n   It is presumed that the handling of incoming
      data chunks for DDP-\n   enabled associations is sufficiently different than
      for routine SCTP\n   associations that it is undesirable to require support
      for mixing DDP\n   and non-DDP streams in a single association.  More than a
      single\n   association is required if an application desires to utilize both
      DDP\n   and non-DDP traffic with the same remote host.\n   We define an Adaptation
      Indication that MUST appear in the INIT or\n   INIT-ACK with the following format
      as defined in [RFC5061].\n   0                   1                   2                   3\n
      \  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |        Type =0xC006           |    Length = Variable          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                    Adaptation Indication                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  Adaptation Indication:\n   The following value has been assigned for DDP.\n
      \        DDP                        - 0x00000001\n"
    title: 5.1.  Adaptation Layer Indicator
  - contents:
    - "5.2.  Payload Data Chunks\n   The DDP SCTP adaptation uses two types of SCTP
      Payload Data Chunks,\n   differentiated by the Payload Protocol Identifier:\n
      \     DDP Segment Chunks are used to reliably deliver DDP Segments sent\n      between
      DDP Endpoints.\n      DDP Stream Session Control Messages are used to establish
      and tear\n      down DDP Stream Sessions, specifically by controlling the binding\n
      \     of DDP Endpoints with SCTP streams.\n   Payload Protocol Identifier:\n
      \  The following value are defined for DDP in this document\n   and have been
      assigned by IANA:\n         DDP Segment Chunk          - 16\n         DDP Stream
      Session Control - 17\n"
    - contents:
      - "5.2.1.  DDP Source Sequence Number (DDP-SSN)\n   All SCTP Payload Data Chunks
        used by this adaptation layer include a\n   DDP Source Sequence Number (DDP-SSN).
        \ The DDP-SSN tracks the\n   sequence in which the messages were submitted
        to the SCTP layer for\n   the SCTP stream in use.  The DDP-SSN MUST have the
        same value that\n   the SCTP Stream Sequence Number (SSN) would have been
        assigned had\n   ordered SCTP Payload Data Chunks been used rather than unordered.\n
        \  The rationale for specifying the DDP-SSN is as follows:\n   o  The SCTP
        Stream Sequence Number (SSN) is not suitable for this\n      purpose because
        all messages defined by this document use\n      unordered Payload Data Chunks
        to ensure prompt delivery from the\n      receiving SCTP layer.\n   o  The
        SCTP Transmission Sequence Number (TSN) is not suitable for\n      determining
        the original order of Data Chunks within a stream.\n      The sending SCTP
        layer is allowed to optimize the transmission\n      sequence of unordered
        Data Chunks to encourage Chunk Bundling, or\n      for other purposes.\n"
      title: 5.2.1.  DDP Source Sequence Number (DDP-SSN)
    - contents:
      - "5.2.2.  DDP Segment Chunk\n   0                   1                   2                   3\n
        \  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |          DDP-SSN              |         DDP Segment           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        \                              |\n   |                                                               |\n
        \  |                         ...                                   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  DDP Segments are as defined in [RFC5041].  The DDP Segment Chunk\n   serves
        the same purpose as the MPA [RFC5044] Upper Layer PDU (MULPDU)\n   in that
        it carries DDP Segments over a reliable protocol with added\n   sequencing
        information.\n"
      title: 5.2.2.  DDP Segment Chunk
    - contents:
      - "5.2.3.  DDP Stream Session Control\n   0                   1                   2
        \                  3\n   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
        5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |          DDP-SSN              |    Function Code              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |            Private Data (Dependent on Function Code)          |\n   |
        \                        ...                                   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  The following function code values are defined for DDP in\n   this document:\n
        \        DDP Stream Session Initiate         - 0x001\n         DDP Stream
        Session Accept           - 0x002\n         DDP Stream Session Reject           -
        0x003\n         DDP Stream Session Terminate        - 0x004\n   ULP-supplied
        Private Data MUST be included for DDP Stream Session\n   Initiate, DDP Stream
        Session Accept, and DDP Stream Session Reject\n   messages.  However, the
        ULP supplied Private DATA MAY be of zero\n   length.\n   Private Data length
        MUST NOT exceed 512 bytes in any message.\n   Private Data MUST NOT be included
        in the DDP Stream Session Terminate\n   message.\n   Received DDP Stream Session
        Control messages SHOULD be reported to\n   the ULP.  If reported, any supplied
        Private Data MUST be available\n   for the ULP to examine.\n   The DDP/SCTP
        adaptation layer MAY limit the number of Session\n   Initiate requests that
        it has submitted to the ULP.  When a DDP\n   Stream Session Initiate cannot
        be forwarded to the ULP due to such a\n   limit, the adaptation layer MUST
        respond with a DDP Stream Session\n   Terminate message.\n"
      title: 5.2.3.  DDP Stream Session Control
    title: 5.2.  Payload Data Chunks
  title: 5.  Data Formats
- contents:
  - "6.  DDP Stream Sessions\n   A DDP Endpoint is the logical sender/receiver of
    DDP Segments.  A DDP\n   stream connects two DDP Endpoints using a matched pair
    of SCTP\n   streams having the same SCTP Stream Identifiers.\n   A DDP Stream
    Session defines the sequence of Data Chunks exchanged\n   between two DDP Endpoints
    over a DDP stream that has a distinct\n   beginning and end as defined in the
    following section.  Data Chunks\n   from one DDP Stream Session are never carried
    over to the next\n   session.  Each Data Chunk unambiguously belongs to exactly
    one\n   session.  The DDP-SSNs assigned to the Data Chunks for a session MUST\n
    \  NOT have any gaps.\n   The local interface MAY dynamically associate a DDP
    Endpoint with the\n   DDP stream based upon the initial exchanges of a DDP Session,
    and\n   dynamically terminate that association at the session's end.\n   Alternately,
    a specialized local interface could simply statically\n   map DDP Endpoints to
    DDP streams.\n   Conventionally, local interfaces for RDMA have deferred the selection\n
    \  of the DDP Endpoint until after the ULP decides to accept an RDMA\n   connection
    request.  But that is a local interface choice and not a\n   wire protocol requirement.\n
    \  A DDP stream is associated with at most one Protection Domain during\n   a
    single DDP Stream Session.  On the passive side, the association is\n   typically
    deferred until the DDP Stream Session Accept message.\n"
  - contents:
    - "6.1.  Sequencing\n   The DDP-SSN is reset to zero at the beginning of each
      DDP Stream\n   Session.\n   The normative sequence for considering Payload Data
      Chunks within a\n   given session is based upon each Data Chunk's DDP-SSN.  When\n
      \  considered in this normative sequence, all sessions MUST conform to\n   one
      of the patterns defined in this section.\n   If the adaptation layer receives
      a Payload Data Chunk that conforms\n   to none of the enumerated legal patterns,
      the DDP Stream Session MUST\n   be terminated.\n"
    title: 6.1.  Sequencing
  - contents:
    - "6.2.  Legal Sequence: Active/Passive Session Accepted\n   In this DDP Stream
      Session sequence, one DDP Endpoint assumes the\n   active role in requesting
      a DDP Stream Session, which the other side\n   accepts.\n      Active side sends
      a DDP Stream Session Initiate message.\n      Passive side sends a DDP Stream
      Session Accept message.\n      Each side may then send zero or more DDP Segments
      with increasing\n      DDP-SSNs, subject to any flow control imposed by other
      protocol\n      layers.\n      The final User Data Chunk for each side MAY be
      a DDP Stream\n      Terminate.  At least one side MUST send a DDP Stream Terminate.\n
      \     Note that this would follow any RDMAP Terminate message, which to\n      the
      adaptation layer is simply another DDP Segment.\n"
    title: '6.2.  Legal Sequence: Active/Passive Session Accepted'
  - contents:
    - "6.3.  Legal Sequence: Active/Passive Session Rejected\n   DDP Stream Sessions
      allow each party to send a single non-payload\n   message before the other end
      commits specific resources to the\n   session.  This allows each end to determine
      which resources are to be\n   used, and how they are to be configured, or even
      if the session\n   should be granted.\n   These decisions MAY be influenced
      by the need to assign a specific\n   Protection Domain, to determine how many
      RDMA Read Credits are\n   required, or to determine how many receive operations
      the ULP should\n   enable.\n   Because of these or other factors, the passive
      side MAY choose to\n   reject a DDP Stream Session Request.  This results in
      the following\n   legal sequence:\n      Active side sends a DDP Stream Session
      Initiate message.\n      Passive side sends a DDP Stream Session Reject message.\n
      \  A DDP Stream Session Reject message MUST NOT be sent unless the\n   rejection
      is at the direction of the ULP.\n"
    title: '6.3.  Legal Sequence: Active/Passive Session Rejected'
  - contents:
    - "6.4.  Legal Sequence: Active/Passive Session Non-ULP Rejected\n   Acceptance
      or rejection of DDP Stream Session Initiate messages\n   SHOULD be under the
      control of the ULP.  This MAY require passing an\n   event to the ULP.  There
      MUST be a finite limit on the number of such\n   requests that are pending a
      ULP decision.  When more session requests\n   are received, the passive side
      MUST respond to the Initiate message\n   with a DDP Stream Terminate Message.\n"
    title: '6.4.  Legal Sequence: Active/Passive Session Non-ULP Rejected'
  - contents:
    - "6.5.  ULP-Specific Sequencing\n   An implementation MAY choose to support additional
      ULP-specific\n   sequences, but MUST NOT do so unless requested to do so by
      the ULP.\n   A defined ULP MUST be able to operate using only the defined\n
      \  mandatory session sequences.  Any additional sequences must be used\n   only
      for optional optimizations.\n"
    title: 6.5.  ULP-Specific Sequencing
  - contents:
    - "6.6.  Other Sequencing Rules\n   A DDP Stream Session Control message MUST
      NOT be sent if it may be\n   received before a prior DDP Stream Session Control
      message within the\n   same DDP Stream Session.\n   An active side of a DDP
      Stream Session MUST NOT send a DDP Segment\n   that might be received before
      the DDP Stream Session Initiate\n   message.\n   This MAY be determined by SCTP
      acking of the Data Chunk used to carry\n   the DDP Stream Session Initiate message,
      or by receipt of a\n   responsive DDP Stream Session Control message.\n   A
      DDP Stream Identifier MUST NOT be reused for another DDP Stream\n   Session
      while any Data Chunk from a prior session might be\n   outstanding.\n"
    title: 6.6.  Other Sequencing Rules
  title: 6.  DDP Stream Sessions
- contents:
  - '7.  SCTP Endpoints

    '
  - contents:
    - "7.1.  Adaptation Layer Indication Restriction\n   The local interface MUST
      allow the ULP to specify an SCTP endpoint to\n   use a specific Adaptation Indication.
      \ It MAY require the ULP to do\n   so.\n   Once an endpoint decides on its acceptable
      Adaptation Indication(s),\n   it SHOULD terminate all requests to establish
      an association with any\n   different Adaptation Indication.\n   An SCTP implementation
      MAY choose to accept association requests for\n   a given SCTP endpoint only
      until one association for the endpoint has\n   been established.  At that point,
      it MAY choose to restrict all\n   further associations for the same endpoint
      to use the same Adaptation\n   Indication.\n"
    title: 7.1.  Adaptation Layer Indication Restriction
  - contents:
    - "7.2.  Multihoming Implications\n   SCTP allows an SCTP endpoint to be associated
      with multiple IP\n   addresses, potentially representing different interface
      devices.\n   Distribution of the logic for a single DDP stream across multiple\n
      \  input devices can be very undesirable, resulting in complex cache\n   coherency
      challenges.  Therefore, the local interface MAY restrict\n   DDP-enabled SCTP
      endpoints to a single IP address, or to a set of IP\n   addresses that are all
      assigned to the same input device (\"RNIC\").\n   The default binding of a DDP-enabled
      SCTP endpoint SHOULD NOT cover\n   more than a single IP address unless doing
      so results in neither\n   additional bus traffic nor duplication of memory registration\n
      \  resources.  This will frequently result in a different default than\n   for
      SCTP endpoints that are not DDP enabled.\n   Applications MAY choose to avoid
      using out-of-band methods for\n   communicating the set of IP addresses used
      by an SCTP endpoint when\n   there is potential confusion as to the intended
      scope of the SCTP\n   endpoint.  For example, assuming the SCTP endpoint consists
      of all IP\n   addresses Advertised by DNS may work for a general purpose SCTP\n
      \  endpoint but not a DDP-enabled one.\n   Even when multihoming is supported,
      ULPs are cautioned that they\n   SHOULD NOT use ULP control of the source address
      in an attempt to\n   load-balance a stream across multiple paths.  A receiving
      DDP/SCTP\n   implementation that chooses to support multihoming SHOULD optimize\n
      \  its design on the assumption that multihoming will be used for\n   network
      fault tolerance, and not to load-balance between paths.  This\n   is consistent
      with recommended SCTP practices.\n"
    title: 7.2.  Multihoming Implications
  title: 7.  SCTP Endpoints
- contents:
  - "8.  Number of Streams\n   DDP streams are bidirectional.  They are always composed
    by pairing\n   the inbound and outbound SCTP streams with the same SCTP Stream\n
    \  Identifier.\n   The adaptation layer should request the maximum number of SCTP\n
    \  streams it will wish to use over the lifetime of the association.\n   SCTP
    streams must still be bound to DDP Endpoints, and a DDP-enabled\n   SCTP association
    does not support ordered Data Chunks.  Therefore,\n   the mere existence of an
    SCTP stream is unlikely to require\n   significant supporting resources.\n   This
    mapping uses an SCTP association to carry one or more DDP\n   streams.  Each DDP
    stream will be mapped to a pair of SCTP streams\n   with the same SCTP stream
    number.  The adaptation MUST initialize all\n   of its SCTP associations with
    the same number of inbound and outbound\n   streams.\n"
  title: 8.  Number of Streams
- contents:
  - "9.  Fragmentation\n   A DDP/SCTP Receiver already deals with fragmentation at
    both the IP\n   and DDP layers.  Therefore, use of SCTP layer segmenting will
    be\n   avoided for most cases.\n   As a Lower Layer Protocol (LLP) for DDP, the
    SCTP adaptation layer\n   MUST inform the DDP layer of the maximum DDP Segment
    size that will\n   be supported.  This should be the largest value that can be
    supported\n   without use of IP or SCTP fragmentation, or 516 bytes, whichever
    is\n   larger.\n   A minimum of 516 bytes is required to allow a DDP Stream Session\n
    \  Control Message with 512 bytes of Private Data.\n   SCTP data chunk fragmentation
    MUST NOT be used unless the alternative\n   is IP fragmentation.\n   The SCTP
    adaptation layer SHOULD set the maximum DDP Segment size\n   below the theoretical
    maximum in order to allow bundling of Control\n   Chunks in the same SCTP packet.\n
    \  The SCTP adaptation layer MUST reject DDP Segments that are larger\n   than
    the maximum size specified.\n"
  title: 9.  Fragmentation
- contents:
  - "10.  Sequenced Unordered Operation\n   The adaptation layer MUST use the Unordered
    option on all Data Chunks\n   (U Flag set to one).  The SCTP layer is expected
    to deliver unordered\n   Data Chunks without delay.\n   Because DDP employs unordered
    SCTP delivery, the receiver MUST NOT\n   rely upon the SCTP Transmission Sequence
    Number (TSN) to imply\n   ordering of DDP Segments.  The fact that the SCTP Data
    Chunk for a\n   DDP Segment is prior to the cumulative ack point does not guarantee\n
    \  that all prior DDP segments have been placed.  The SCTP sender is not\n   obligated
    to transmit unordered Data Chunks in the order presented.\n   The DDP-SSN can
    be used without special logic to determine the\n   submission sequence when the
    maximum number of in-flight messages is\n   less than 32768.  This also applies
    if the sending SCTP accepts no\n   more than 32767 Data Chunks for a single stream
    without assigning\n   TSNs.\n   If SCTP does accept more than 32768 Data chunks
    for a single stream\n   without assigning TSNs, the sending DDP must simply refrain
    from\n   sending more than 32767 Data Chunks for a single stream without\n   acknowledgment.
    \ Note that it MUST NOT rely upon ULP flow control for\n   this purpose.  Typical
    ULP flow control will deal exclusively with\n   untagged messages, not with DDP
    segments.\n   The receiver MAY perform a validity check on received DDP-SSNs to\n
    \  ensure that any gap could be accounted for by unreceived Data Chunks.\n   Implementations
    SHOULD NOT allocate resources on the assumption that\n   DDP-SSNs are valid without
    first performing such a validity check.\n   An invalid DDP-SSN MAY result in termination
    of the DDP stream.\n"
  title: 10.  Sequenced Unordered Operation
- contents:
  - '11.  Procedures

    '
  - contents:
    - "11.1.  Association Initialization\n   At the startup of an association, a DDP/SCTP
      adaptation layer MUST\n   include an adaptation layer indication in its INIT
      or INIT-ACK (as\n   defined in Section 5.1).  After the exchange of the initial
      first two\n   SCTP chunks (INIT and INIT-ACK), an endpoint MUST verify and inspect\n
      \  the Adaptation Indication and compare it to the following table to\n   determine
      proper action.\n          Indication |           Action\n            type     |\n
      \  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n                     |
      This indicates that the peer DOES NOT\n         NONE        | support ANY DDP
      or RDMA adaptation, and thus\n                     | RDMA and DDP procedures
      MUST NOT be\n                     | performed upon this association.\n   ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n
      \                    | This indicates that the peer DOES support\n         DDP
      \        | the DDP/SCTP adaptation layer defined here.\n   ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n
      \                    | This indicates that the peer DOES NOT\n       ANY-OTHER
      \    | support the DDP adaptation, and thus\n       Indication    | DDP procedures
      MUST NOT be performed\n                     | upon this association.\n   ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n
      \  An implementation MAY require that all associations for a given SCTP\n   endpoint
      be placed in the same mode.\n   The local interface MAY allow the ULP to accept
      only requests to\n   establish an association in a specified mode.\n"
    title: 11.1.  Association Initialization
  - contents:
    - "11.2.  Chunk Bundling\n   SCTP allows multiple Data Chunks to be bundled in
      a single SCTP\n   packet.  Data chunks containing DDP Segments with untagged
      messages\n   SHOULD NOT be delayed to facilitate bundling.  Data chunks containing\n
      \  DDP Segments with tagged messages will generally be full sized, and\n   hence
      not subject to bundling.  However, partial-size tagged messages\n   MAY be delayed,
      as they are frequently followed by a short untagged\n   message.\n"
    title: 11.2.  Chunk Bundling
  - contents:
    - "11.3.  Association Termination\n   Termination of an SCTP Association due to
      errors should be handled at\n   the SCTP layer.  The RDMAP-defined RDMAP Terminate
      Message SHOULD NOT\n   be sent on each DDP stream when a determination has been
      made to\n   terminate an SCTP association.  Sending that message on each SCTP\n
      \  stream could severely delay the termination of the association.\n   The local
      interface SHOULD notify all consumers of DDP streams when\n   the underlying
      SCTP stream has been terminated.\n   Other RDMAP-defined Terminate Messages
      MUST be generated as specified\n   when a DDP stream is terminated.  Note that
      with the SCTP mapping,\n   termination of a DDP Stream does not mandate termination
      of the\n   Association.\n"
    title: 11.3.  Association Termination
  title: 11.  Procedures
- contents:
  - "12.  IANA Considerations\n   This document defines a new SCTP Adaptation Layer
    Indication\n   codepoint for DDP (0x00000001).  [RFC5061] creates the registry
    from\n   which this codepoint has been assigned.\n   This document also defines
    two new SCTP Payload Protocol Identifiers\n   (PPIDs).  RFC 4960 [RFC4960] creates
    the registry from which these\n   identifiers have been assigned.  The following
    values have been\n   assigned:\n         DDP Segment Chunk           - 16\n         DDP
    Stream Session Control  - 17\n"
  title: 12.  IANA Considerations
- contents:
  - "13.  Security Considerations\n   Any direct placement of memory could pose a
    significant security risk\n   if adequate local controls are not provided.  These
    threats are\n   addressed in the appropriate DDP [RFC5041], RDMA [RFC5040], or\n
    \  Security [RFC5042] documents.  This document does not add any\n   additional
    security risks over those found in RFC 4960 [RFC4960].\n   The IPsec requirements
    for Remote Direct Data Placement (RDDP) are\n   based on the version of IPsec
    specified in RFC 2401 [RFC2401] and\n   related RFCs, as profiled by RFC 3723
    [RFC3723], despite the\n   existence of a newer version of IPsec specified in
    RFC 4301 [RFC4301]\n   and related RFCs.  One of the important early applications
    of the\n   RDDP protocols is their use with iSCSI iSER [RFC5046]; RDDP's IPsec\n
    \  requirements follow those of IPsec in order to facilitate that usage\n   by
    allowing a common profile of IPsec to be used with iSCSI and the\n   RDDP protocols.
    \ In the future, RFC 3723 may be updated to the newer\n   version of IPsec; the
    IPsec security requirements of any such update\n   should apply uniformly to iSCSI
    and the RDDP protocols.\n   Additional requirements apply to security for RDDP
    over SCTP, due to\n   the use of SCTP as the transport protocol.  An implementation
    of\n   IPsec for RDDP over SCTP:\n   1)  MUST support IPsec functionality for
    SCTP equivalent to the IPsec\n       functionality for TCP that is required by
    RFC 3723,\n   2)  SHOULD support the same level of IPsec functionality for SCTP
    and\n       TCP unless there is no support for TCP, and\n   3)  MUST support at
    least the level of protocol and port selector\n       functionality for SCTP that
    is supported for TCP.\n"
  title: 13.  Security Considerations
- contents:
  - "14.  Contributors\n   Many thanks to our contributors who have spent many hours
    reading and\n   reviewing keeping us straight: Sukanta Ganguly an independent\n
    \  consultant, Vivek Kashyap of IBM, Jim Pinkerton of Microsoft, and\n   Hemal
    Shah of Broadcom.  Thanks for all your hard work.\n"
  title: 14.  Contributors
- contents:
  - "15.  Acknowledgments\n   The authors would like to thank the following people
    that have\n   provided comments and input: Stephen Bailey, David Black, Douglas\n
    \  Otis, Allyn Romanow, and Jim Williams.\n"
  title: 15.  Acknowledgments
- contents:
  - '16.  References

    '
  - contents:
    - "16.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March
      1997.\n   [RFC3723]  Aboba, B., Tseng, J., Walker, J., Rangan, V., and F.\n
      \             Travostino, \"Securing Block Storage Protocols over IP\",\n              RFC
      3723, April 2004.\n   [RFC4960]  Stewart, R., \"Stream Control Transmission
      Protocol\",\n              RFC 4960, September 2007.\n   [RFC5040]  Recio, R.,
      Metzler, B., Culley, P., Hilland, J., and D.\n              Garcia, \"A Remote
      Direct Memory Access Protocol\n              Specification\", RFC 5040, October
      2007.\n   [RFC5041]  Shah, H., Pinkerton, J., Recio, R., and P. Culley, \"Direct\n
      \             Data Placement over Reliable Transports\", RFC 5041,\n              October
      2007.\n   [RFC5042]  Pinkerton, J. and E. Deleganes, \"Direct Data Placement\n
      \             Protocol (DDP) / Remote Direct Memory Access Protocol\n              (RDMAP)
      Security\", RFC 5042, October 2007.\n   [RFC5061]  Stewart, R., Xie, Q., Tuexen,
      M., Maruyama, S., and M.\n              Kozuka, \"Stream Control Transmission
      Protocol (SCTP)\n              Dynamic Address Reconfiguration\", RFC 5061,\n
      \             September 2007.\n"
    title: 16.1.  Normative References
  - contents:
    - "16.2.  Informative References\n   [RFC2401]  Kent, S. and R. Atkinson, \"Security
      Architecture for the\n              Internet Protocol\", RFC 2401, November
      1998.\n   [RFC4301]  Kent, S. and K. Seo, \"Security Architecture for the\n
      \             Internet Protocol\", RFC 4301, December 2005.\n   [RFC5044]  Culley,
      P., Elzur, U., Recio, R., Bailey, S., and J.\n              Carrier, \"Marker
      PDU Aligned Framing for TCP\n              Specification\", RFC 5044, October
      2007.\n   [RFC5046]  Ko, M., Chadalapaka, M., Elzur, U., Shah, H., and P.\n
      \             Thaler, \"Internet Small Computer System Interface (iSCSI)\n              Extensions
      for Remote Direct Memory Access (RDMA)\",\n              RFC 5046, October 2007.\n"
    title: 16.2.  Informative References
  title: 16.  References
- contents:
  - "Authors' Addresses\n   Caitlin Bestler (editor)\n   Neterion\n   20230 Stevens
    Creek Blvd.\n   Suite C\n   Cupertino, CA  95014\n   USA\n   Phone: 408-366-4639\n
    \  EMail: caitlin.bestler@neterion.com\n   Randall R. Stewart (editor)\n   Cisco
    Systems, Inc.\n   Forest Drive\n   Columbia, SC  29036\n   USA\n   Phone: +1-815-342-5222\n
    \  EMail: rrs@cisco.com\n"
  title: Authors' Addresses
- contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document
    is subject to the rights, licenses and restrictions\n   contained in BCP 78, and
    except as set forth therein, the authors\n   retain all their rights.\n   This
    document and the information contained herein are provided on an\n   \"AS IS\"
    basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE INTERNET ENGINEERING
    TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED, INCLUDING BUT NOT
    LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT INFRINGE
    ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
