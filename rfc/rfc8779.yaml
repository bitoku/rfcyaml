- contents:
  - ' Path Computation Element Communication Protocol (PCEP) Extensions for

    '
  title: __initial_text__
- contents:
  - "Abstract\n   A Path Computation Element (PCE) provides path computation functions\n
    \  for Multiprotocol Label Switching (MPLS) and Generalized MPLS (GMPLS)\n   networks.
    \ Additional requirements for GMPLS are identified in RFC\n   7025.\n   This memo
    provides extensions to the Path Computation Element\n   Communication Protocol
    (PCEP) for the support of the GMPLS control\n   plane to address those requirements.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8779.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2020 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction\n     1.1.  Terminology\n     1.2.  PCEP
    Requirements for GMPLS\n     1.3.  Requirements Applicability\n       1.3.1.  Requirements
    on the Path Computation Request\n       1.3.2.  Requirements on the Path Computation
    Response\n     1.4.  Existing Support and Limitations for GMPLS in Base PCEP\n
    \          Objects\n   2.  PCEP Objects and Extensions\n     2.1.  GMPLS Capability
    Advertisement\n       2.1.1.  GMPLS Computation TLV in the Existing PCE Discovery\n
    \              Protocol\n       2.1.2.  OPEN Object Extension GMPLS-CAPABILITY
    TLV\n     2.2.  RP Object Extension\n     2.3.  BANDWIDTH Object Extensions\n
    \    2.4.  LOAD-BALANCING Object Extensions\n     2.5.  END-POINTS Object Extensions\n
    \      2.5.1.  Generalized Endpoint Object Type\n       2.5.2.  END-POINTS TLV
    Extensions\n     2.6.  IRO Extension\n     2.7.  XRO Extension\n     2.8.  LSPA
    Extensions\n     2.9.  NO-PATH Object Extension\n       2.9.1.  Extensions to
    NO-PATH-VECTOR TLV\n   3.  Additional Error-Types and Error-Values Defined\n   4.
    \ Manageability Considerations\n     4.1.  Control of Function through Configuration
    and Policy\n     4.2.  Information and Data Models\n     4.3.  Liveness Detection
    and Monitoring\n     4.4.  Verifying Correct Operation\n     4.5.  Requirements
    on Other Protocols and Functional Components\n     4.6.  Impact on Network Operation\n
    \  5.  IANA Considerations\n     5.1.  PCEP Objects\n     5.2.  Endpoint Type
    Field in the Generalized END-POINTS Object\n     5.3.  New PCEP TLVs\n     5.4.
    \ RP Object Flag Field\n     5.5.  New PCEP Error Codes\n     5.6.  New Bits in
    NO-PATH-VECTOR TLV\n     5.7.  New Subobject for the Include Route Object\n     5.8.
    \ New Subobject for the Exclude Route Object\n     5.9.  New GMPLS-CAPABILITY
    TLV Flag Field\n   6.  Security Considerations\n   7.  References\n     7.1.  Normative
    References\n     7.2.  Informative References\n   Appendix A.  LOAD-BALANCING
    Usage for SDH Virtual Concatenation\n   Acknowledgments\n   Contributors\n   Authors'
    Addresses\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Although the PCE architecture and framework for both MPLS
    and GMPLS\n   networks are defined in [RFC4655], most pre-existing PCEP RFCs,
    such\n   as [RFC5440], [RFC5521], [RFC5541], and [RFC5520], are focused on\n   MPLS
    networks and do not cover the wide range of GMPLS networks.\n   This document
    complements these RFCs by addressing the extensions\n   required for GMPLS applications
    and routing requests, for example,\n   for Optical Transport Networks (OTNs) and
    Wavelength Switched Optical\n   Networks (WSONs).\n   The functional requirements
    to be addressed by the PCEP extensions to\n   support these applications are fully
    described in [RFC7025] and\n   [RFC7449].\n"
  - contents:
    - "1.1.  Terminology\n   This document uses terminologies from the PCE architecture
      document\n   [RFC4655]; the PCEP documents including [RFC5440], [RFC5521],\n
      \  [RFC5541], [RFC5520], [RFC7025], and [RFC7449]; and the GMPLS\n   documents
      such as [RFC3471], [RFC3473], and so on.  Note that the\n   reader is expected
      to be familiar with these documents.  The\n   following abbreviations are used
      in this document:\n   ERO:      Explicit Route Object\n   IRO:      Include
      Route Object\n   L2SC:     Layer 2 Switch Capable [RFC3471]\n   LSC:      Lambda
      Switch Capable [RFC3471]\n   LSP:      Label Switched Path\n   LSPA:     LSP
      Attribute\n   MEF:      Metro Ethernet Forum\n   MT:       Multiplier [RFC4328]
      [RFC4606]\n   NCC:      Number of Contiguous Components [RFC4606]\n   NVC:      Number
      of Virtual Components [RFC4328] [RFC4606]\n   ODU:      Optical Data Unit [G.709-v3]\n
      \  OTN:      Optical Transport Network [G.709-v3]\n   P2MP:     Point-to-Multipoint\n
      \  PCC:      Path Computation Client\n   PCRep:    Path Computation Reply [RFC5440]\n
      \  PCReq:    Path Computation Request [RFC5440]\n   RCC:      Requested Contiguous
      Concatenation [RFC4606]\n   RRO:      Record Route Object\n   RSVP-TE:  Resource
      Reservation Protocol - Traffic Engineering\n   SDH:      Synchronous Digital
      Hierarchy\n   SONET:    Synchronous Optical Network\n   SRLG:     Shared Risk
      Link Group\n   SSON:     Spectrum-Switched Optical Network\n   TDM:      Time-Division
      Multiplex Capable [RFC3471]\n   TE-LSP:   Traffic Engineered LSP\n   XRO:      Exclude
      Route Object\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
      \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\",
      \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described
      in BCP\n   14 [RFC2119] [RFC8174] when, and only when, they appear in all\n
      \  capitals, as shown here.\n"
    title: 1.1.  Terminology
  - contents:
    - "1.2.  PCEP Requirements for GMPLS\n   [RFC7025] describes the set of PCEP requirements
      that support GMPLS\n   TE-LSPs.  This document assumes a significant familiarity
      with\n   [RFC7025] and existing PCEP extensions.  As a short overview, those\n
      \  requirements can be broken down into the following categories.\n   *  Which
      data flow is switched by the LSP: a combination of a\n      switching type (for
      instance, L2SC or TDM), an LSP encoding type\n      (e.g., Ethernet, SONET/SDH),
      and sometimes the signal type (e.g.,\n      in case of a TDM or an LSC switching
      capability).\n   *  Data-flow-specific traffic parameters, which are technology\n
      \     specific.  For instance, in SDH/SONET and OTN networks [G.709-v3],\n      the
      concatenation type and the concatenation number have an\n      influence on
      the switched data and on which link it can be\n      supported.\n   *  Support
      for asymmetric bandwidth requests.\n   *  Support for unnumbered interface identifiers,
      as defined in\n      [RFC3477].\n   *  Label information and technology-specific
      label(s) such as\n      wavelength labels as defined in [RFC6205].  A PCC should
      also be\n      able to specify a label restriction similar to the one supported\n
      \     by RSVP-TE in [RFC3473].\n   *  Ability to indicate the requested granularity
      for the path ERO:\n      node, link, or label.  This is to allow the use of
      the explicit\n      label control feature of RSVP-TE.\n   The requirements of
      [RFC7025] apply to several objects conveyed by\n   PCEP; this is described in
      Section 1.3.  Some of the requirements of\n   [RFC7025] are already supported
      in existing documents, as described\n   in Section 1.4.\n   This document describes
      a set of PCEP extensions, including new\n   object types, TLVs, encodings, error
      codes, and procedures, in order\n   to fulfill the aforementioned requirements
      not covered in existing\n   RFCs.\n"
    title: 1.2.  PCEP Requirements for GMPLS
  - contents:
    - "1.3.  Requirements Applicability\n   This section follows the organization
      of [RFC7025], Section 3 and\n   indicates, for each requirement, the affected
      piece of information\n   carried by PCEP and its scope.\n"
    - contents:
      - "1.3.1.  Requirements on the Path Computation Request\n   (1)   Switching
        capability/type: As described in [RFC3471], this\n         piece of information
        is used with the encoding type and signal\n         type to fully describe
        the switching technology and data\n         carried by the TE-LSP.  This is
        applicable to the TE-LSP itself\n         and also to the TE-LSP endpoint
        (carried in the END-POINTS\n         object for MPLS networks in [RFC5440])
        when considering\n         multiple network layers.  Inter-layer path computation\n
        \        requirements are addressed in [RFC8282], which focuses on the\n         TE-LSP
        itself but does not address the TE-LSP endpoints.\n   (2)   Encoding type:
        See (1).\n   (3)   Signal type: See (1).\n   (4)   Concatenation type: This
        parameter and the concatenation number\n         (see (5)) are specific to
        some TDM (SDH and ODU) switching\n         technologies.  They MUST be described
        together and are used to\n         derive the requested resource allocation
        for the TE-LSP.  It is\n         scoped to the TE-LSP and is related to the
        BANDWIDTH object\n         [RFC5440] in MPLS networks.  See concatenation
        information in\n         [RFC4606] and [RFC4328].\n   (5)   Concatenation
        number: See (4).\n   (6)   Technology-specific label(s): As described in [RFC3471],
        the\n         GMPLS labels are specific to each switching technology.  They\n
        \        can be specified on each link and also on the TE-LSP endpoints,\n
        \        in WSON networks, for instance, as described in [RFC6163].  The\n
        \        label restriction can apply to endpoints, and on each hop, the\n
        \        related PCEP objects are END-POINTS, IRO, XRO, and RRO.\n   (7)   End-to-End
        (E2E) path protection type: As defined in [RFC4872],\n         this is applicable
        to the TE-LSP.  In MPLS networks, the\n         related PCEP object is LSPA
        (carrying local protection\n         information).\n   (8)   Administrative
        group: As defined in [RFC3630], this information\n         is already carried
        in the LSPA object.\n   (9)   Link protection type: As defined in [RFC4872],
        this is\n         applicable to the TE-LSP and is carried in association with
        the\n         E2E path protection type.\n   (10)  Support for unnumbered interfaces:
        As defined in [RFC3477].\n         Its scope and related objects are the same
        as labels.\n   (11)  Support for asymmetric bandwidth requests: As defined
        in\n         [RFC6387], the scope is similar to (4).\n   (12)  Support for
        explicit label control during the path computation:\n         This affects
        the TE-LSP and the amount of information returned\n         in the ERO.\n
        \  (13)  Support of label restrictions in the requests/responses: This\n         is
        described in (6).\n"
      title: 1.3.1.  Requirements on the Path Computation Request
    - contents:
      - "1.3.2.  Requirements on the Path Computation Response\n   (1)  Path computation
        with concatenation: This is related to the Path\n        Computation request
        requirement (4).  In addition, there is a\n        specific type of concatenation,
        called virtual concatenation,\n        that allows different routes to be
        used between the endpoints.\n        It is similar to the semantic and scope
        of the LOAD-BALANCING in\n        MPLS networks.\n   (2)  Label constraint:
        The PCE should be able to include labels in\n        the path returned to
        the PCC; the related object is the ERO\n        object.\n   (3)  Roles of
        the routes: As defined in [RFC4872], this is applicable\n        to the TE-LSP
        and is carried in association with the E2E path\n        protection type.\n"
      title: 1.3.2.  Requirements on the Path Computation Response
    title: 1.3.  Requirements Applicability
  - contents:
    - "1.4.  Existing Support and Limitations for GMPLS in Base PCEP Objects\n   The
      support provided by specifications in [RFC8282] and [RFC5440] for\n   the requirements
      listed in [RFC7025] is summarized in Tables 1 and 2.\n   In some cases, the
      support may not be complete, as noted, and\n   additional support needs to be
      provided as indicated in this\n   specification.\n       | Req. | Name                               |
      Support       |\n       | 1    | Switching capability/type          | SWITCH-LAYER
      \ |\n       | 2    | Encoding type                      | SWITCH-LAYER  |\n
      \      | 3    | Signal type                        | SWITCH-LAYER  |\n       |
      4    | Concatenation type                 | No            |\n       | 5    |
      Concatenation number               | No            |\n       | 6    | Technology-specific
      label          | (Partial) ERO |\n       | 7    | End-to-End (E2E) path protection
      \  | No            |\n       |      | type                               |               |\n
      \      | 8    | Administrative group               | LSPA (RFC     |\n       |
      9    | Link protection type               | No            |\n       | 10   |
      Support for unnumbered interfaces  | (Partial) ERO |\n       | 11   | Support
      for asymmetric bandwidth   | No            |\n       |      | requests                           |
      \              |\n       | 12   | Support for explicit label control | No            |\n
      \      |      | during the path computation        |               |\n       |
      13   | Support of label restrictions in   | No            |\n       |      |
      the requests/responses             |               |\n          Table 1: Requirements
      Support per RFC 7025, Section 3.1\n         | Req. | Name                                |
      Support |\n         | 1    | Path computation with concatenation | No      |\n
      \        | 2    | Label constraint                    | No      |\n         |
      3    | Roles of the routes                 | No      |\n         Table 2: Requirements
      Support per RFC 7025, Section 3.2\n   Per Section 1.3, PCEP (as described in
      [RFC5440], [RFC5521], and\n   [RFC8282]) supports the following objects, included
      in requests and\n   responses, that are related to the described requirements.\n
      \  From [RFC5440]:\n      END-POINTS:  related to requirements 1, 2, 3, 6, 10,
      and 13.  The\n         object only supports numbered endpoints.  The context
      specifies\n         whether they are node identifiers or numbered interfaces.\n
      \     BANDWIDTH:  related to requirements 4, 5, and 11.  The data rate\n         is
      encoded in the BANDWIDTH object (as an IEEE 32-bit float).\n         [RFC5440]
      does not include the ability to convey an encoding\n         proper to all GMPLS-controlled
      networks.\n      ERO:  related to requirements 6, 10, 12, and 13.  The ERO content\n
      \        is defined in RSVP in [RFC3209], [RFC3473], [RFC3477], and\n         [RFC7570]
      and already supports all of the requirements.\n      LSPA:  related to requirements
      7, 8, and 9.  Requirement 8\n         (Administrative group) is already supported.\n
      \  From [RFC5521]:\n      XRO:\n      -  This object allows excluding (strict
      or not) resources and is\n         related to requirements 6, 10, and 13.  It
      also includes the\n         requested diversity (node, link, or SRLG).\n      -
      \ When the F bit is set, the request indicates that the existing\n         path
      has failed, and the resources present in the RRO can be\n         reused.\n
      \  From [RFC8282]:\n      SWITCH-LAYER:  addresses requirements 1, 2, and 3
      for the TE-LSP\n         and indicates which layer(s) should be considered.
      \ The object\n         can be used to represent the RSVP-TE Generalized Label
      Request.\n         It does not address the endpoints case of requirements 1,
      2,\n         and 3.\n      REQ-ADAP-CAP:  indicates the adaptation capabilities
      requested; it\n         can also be used for the endpoints in case of mono-layer\n
      \        computation.\n   The gaps in functional coverage of the base PCEP objects
      are:\n   *  The BANDWIDTH and LOAD-BALANCING objects do not describe the\n      details
      of the traffic request (requirements 4 and 5, for example,\n      NVC and multiplier)
      in the context of GMPLS networks, for\n      instance, in TDM or OTN networks.\n
      \  *  The END-POINTS object does not allow specifying an unnumbered\n      interface,
      nor potential label restrictions on the interface\n      (requirements 6, 10,
      and 13).  Those parameters are of interest in\n      case of switching constraints.\n
      \  *  The IROs/XROs do not allow the inclusion/exclusion of labels\n      (requirements
      6, 10, and 13).\n   *  Base attributes do not allow expressing the requested
      link\n      protection level and/or the end-to-end protection attributes.\n
      \  As defined later in this document, the PCEP extensions that cover the\n   gaps
      are:\n   *  Two new object types are defined for the BANDWIDTH object\n      (Generalized
      bandwidth and Generalized bandwidth of an existing\n      TE-LSP for which a
      reoptimization is requested).\n   *  A new object type is defined for the LOAD-BALANCING
      object\n      (Generalized Load Balancing).\n   *  A new object type is defined
      for the END-POINTS object\n      (Generalized Endpoint).\n   *  A new TLV is
      added to the Open message for capability negotiation.\n   *  A new TLV is added
      to the LSPA object.\n   *  The Label subobject is now allowed in the IRO and
      XRO objects.\n   *  In order to indicate the routing granularity used in the
      response,\n      a new flag is added in the RP object.\n"
    title: 1.4.  Existing Support and Limitations for GMPLS in Base PCEP Objects
  title: 1.  Introduction
- contents:
  - "2.  PCEP Objects and Extensions\n   This section describes the necessary PCEP
    objects and extensions.\n   The PCReq and PCRep messages are defined in [RFC5440].
    \ This document\n   does not change the existing grammar.\n"
  - contents:
    - '2.1.  GMPLS Capability Advertisement

      '
    - contents:
      - "2.1.1.  GMPLS Computation TLV in the Existing PCE Discovery Protocol\n   IGP-based
        PCE Discovery (PCED) is defined in [RFC5088] and [RFC5089]\n   for the OSPF
        and IS-IS protocols.  Those documents have defined bit 0\n   in the PCE-CAP-FLAGS
        Sub-TLV of the PCED TLV as \"Path computation\n   with GMPLS link constraints\".
        \ This capability is optional and can be\n   used to detect GMPLS-capable
        PCEs.  PCEs that set the bit to indicate\n   support of GMPLS path computation
        MUST follow the procedures in\n   Section 2.1.2 to further qualify the level
        of support during PCEP\n   session establishment.\n"
      title: 2.1.1.  GMPLS Computation TLV in the Existing PCE Discovery Protocol
    - contents:
      - "2.1.2.  OPEN Object Extension GMPLS-CAPABILITY TLV\n   In addition to the
        IGP advertisement, a PCEP speaker MUST be able to\n   discover the other peer
        GMPLS capabilities during the Open message\n   exchange.  This capability
        is also useful to avoid misconfigurations.\n   This document defines a GMPLS-CAPABILITY
        TLV for use in the OPEN\n   object to negotiate the GMPLS capability.  The
        inclusion of this TLV\n   in the Open message indicates that the PCEP speaker
        supports the PCEP\n   extensions defined in the document.  A PCEP speaker
        that is able to\n   support the GMPLS extensions defined in this document
        MUST include\n   the GMPLS-CAPABILITY TLV in the Open message.  If one of
        the PCEP\n   peers does not include the GMPLS-CAPABILITY TLV in the Open message,\n
        \  the peers MUST NOT make use of the objects and TLVs defined in this\n   document.\n
        \  If the PCEP speaker supports the extensions of this specification but\n
        \  did not advertise the GMPLS-CAPABILITY capability, upon receipt of a\n
        \  message from the PCE including an extension defined in this document,\n
        \  it MUST generate a PCEP Error (PCErr) with Error-Type=10 (Reception\n   of
        an invalid object) and Error-value=31 (Missing GMPLS-CAPABILITY\n   TLV),
        and it SHOULD terminate the PCEP session.\n   As documented in Section 5.3
        (\"New PCEP TLVs\"), IANA has allocated\n   value 45 (GMPLS-CAPABILITY) from
        the \"PCEP TLV Type Indicators\" sub-\n   registry.  The format for the GMPLS-CAPABILITY
        TLV is shown in the\n   following figure.\n     0                   1                   2
        \                  3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3
        4 5 6 7 8 9 0 1\n    |               Type=45         |           Length              |\n
        \  No flags are defined in this document; they are reserved for future\n   use.
        \ Unassigned flags MUST be set to zero on transmission and MUST\n   be ignored
        on receipt.\n"
      title: 2.1.2.  OPEN Object Extension GMPLS-CAPABILITY TLV
    title: 2.1.  GMPLS Capability Advertisement
  - contents:
    - "2.2.  RP Object Extension\n   Explicit Label Control (ELC) is a procedure supported
      by RSVP-TE,\n   where the outgoing labels are encoded in the ERO.  As a consequence,\n
      \  the PCE can provide such labels directly in the path ERO.  Depending\n   on
      the policies or switching layer, it might be necessary for the PCC\n   to use
      explicit label control or explicit link ids; thus, it needs to\n   indicate
      in the PCReq which granularity it is expecting in the ERO.\n   This corresponds
      to requirement 12 in Section 3.1 of [RFC7025].  The\n   possible granularities
      can be node, link, or label.  The\n   granularities are interdependent, in the
      sense that link granularity\n   implies the presence of node information in
      the ERO; similarly, a\n   label granularity implies that the ERO contains node,
      link, and label\n   information.\n   A new 2-bit Routing Granularity (RG) flag
      (bits 15-16) is defined in\n   the RP object.  The values are defined as follows:\n
      \     0:  reserved\n      1:  node\n      2:  link\n      3:  label\n   The
      RG flag in the RP object indicates the requested route\n   granularity.  The
      PCE SHOULD follow this granularity and MAY return a\n   NO-PATH if the requested
      granularity cannot be provided.  The PCE MAY\n   return any granularity on the
      route based on its policy.  The PCC can\n   decide if the ERO is acceptable
      based on its content.\n   If a PCE honored the requested routing granularity
      for a request, it\n   MUST indicate the selected routing granularity in the
      RP object\n   included in the response.  Otherwise, the PCE MUST use the reserved\n
      \  RG to leave the check of the ERO to the PCC.  The RG flag is backward\n   compatible
      with [RFC5440]: the value sent by an implementation (PCC\n   or PCE) not supporting
      it will indicate a reserved value.\n"
    title: 2.2.  RP Object Extension
  - contents:
    - "2.3.  BANDWIDTH Object Extensions\n   Per [RFC5440], the object carrying the
      requested size for the TE-LSP\n   is the BANDWIDTH object.  Object types 1 and
      2 defined in [RFC5440]\n   do not provide enough information to describe the
      TE-LSP bandwidth in\n   GMPLS networks.  The BANDWIDTH object encoding has to
      be extended to\n   allow the object to express the bandwidth as described in
      [RFC7025].\n   RSVP-TE extensions for GMPLS provide a set of encodings that
      allow\n   such representation in an unambiguous way; this is encoded in the\n
      \  RSVP-TE Traffic Specification (TSpec) and Flow Specification\n   (FlowSpec)
      objects.  This document extends the BANDWIDTH object with\n   new object types
      reusing the RSVP-TE encoding.\n   The following possibilities are supported
      by the extended encoding:\n   *  Asymmetric bandwidth (different bandwidth in
      forward and reverse\n      direction), as described in [RFC6387].\n   *  GMPLS
      (SDH/SONET, G.709, ATM, MEF, etc.) parameters.\n   This corresponds to requirements
      3, 4, 5, and 11 in Section 3.1 of\n   [RFC7025].\n   This document defines two
      object types for the BANDWIDTH object:\n      3:  Generalized bandwidth\n      4:
      \ Generalized bandwidth of an existing TE-LSP for which a\n         reoptimization
      is requested\n   The definitions below apply for object types 3 and 4.  The
      body is as\n   follows:\n       0                   1                   2                   3\n
      \      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      |
      \   Bandwidth Spec Length      | Rev. Bandwidth Spec Length    |\n      | Bw
      Spec Type  |   Reserved                                    |\n      ~                     Generalized
      Bandwidth                     ~\n      ~            Reverse Generalized Bandwidth
      (optional)           ~\n      ~                       Optional TLVs                           ~\n
      \  BANDWIDTH object types 3 and 4 have a variable length.  The 16-bit\n   Bandwidth
      Spec Length field indicates the length of the Generalized\n   Bandwidth field.
      \ The Bandwidth Spec Length MUST be strictly greater\n   than 0.  The 16-bit
      Reverse Bandwidth Spec Length field indicates the\n   length of the Reverse
      Generalized Bandwidth field.  The Reverse\n   Bandwidth Spec Length MAY be equal
      to 0.\n   The Bw Spec Type field determines which type of bandwidth is\n   represented
      by the object.\n   The Bw Spec Type corresponds to the RSVP-TE SENDER_TSPEC
      (Object\n   Class 12) C-Types.\n   The encoding of the Generalized Bandwidth
      and Reverse Generalized\n   Bandwidth fields is the same as the traffic parameters
      carried in\n   RSVP-TE; they can be found in the following references.  Note
      that\n   the RSVP-TE traffic specification MAY also include TLVs that are\n
      \  different from the PCEP TLVs (e.g., the TLVs defined in [RFC6003]).\n                 |
      Bw Spec Type | Name      | Reference |\n                 | 2            | Intserv
      \  | [RFC2210] |\n                 | 4            | SONET/SDH | [RFC4606] |\n
      \                | 5            | G.709     | [RFC4328] |\n                 |
      6            | Ethernet  | [RFC6003] |\n                 | 7            | OTN-TDM
      \  | [RFC7139] |\n                 | 8            | SSON      | [RFC7792] |\n
      \                   Table 3: Generalized Bandwidth and\n                   Reverse
      Generalized Bandwidth Field\n   When a PCC requests a bidirectional path with
      symmetric bandwidth, it\n   SHOULD only specify the Generalized Bandwidth field
      and set the\n   Reverse Bandwidth Spec Length to 0.  When a PCC needs to request
      a\n   bidirectional path with asymmetric bandwidth, it SHOULD specify the\n
      \  different bandwidth in the forward and reverse directions with\n   Generalized
      Bandwidth and Reverse Generalized Bandwidth fields.\n   The procedure described
      in [RFC5440] for the PCRep is unchanged: a\n   PCE MAY include the BANDWIDTH
      objects in the response to indicate the\n   BANDWIDTH of the path.\n   As specified
      in [RFC5440], in the case of the reoptimization of a TE-\n   LSP, the bandwidth
      of the existing TE-LSP MUST also be included in\n   addition to the requested
      bandwidth if and only if the two values\n   differ.  The object type 4 MAY be
      used instead of the previously\n   specified object type 2 to indicate the existing
      TE-LSP bandwidth,\n   which was originally specified with object type 3.  A
      PCC that\n   requested a path with a BANDWIDTH object of object type 1 MUST
      use\n   object type 2 to represent the existing TE-LSP bandwidth.\n   Optional
      TLVs MAY be included within the object body to specify more\n   specific bandwidth
      requirements.  No TLVs for object types 3 and 4\n   are defined by this document.\n"
    title: 2.3.  BANDWIDTH Object Extensions
  - contents:
    - "2.4.  LOAD-BALANCING Object Extensions\n   The LOAD-BALANCING object [RFC5440]
      is used to request a set of at\n   most Max-LSP TE-LSPs having in total the
      bandwidth specified in\n   BANDWIDTH, with each TE-LSP having at least a specified
      minimum\n   bandwidth.  The LOAD-BALANCING object follows the bandwidth encoding\n
      \  of the BANDWIDTH object; thus, the existing definition from [RFC5440]\n   does
      not describe enough details for the bandwidth specification\n   expected by
      GMPLS.\n   Similar to the BANDWIDTH object, a new object type is defined to\n
      \  allow a PCC to represent the bandwidth types supported by GMPLS\n   networks.\n
      \  This document defines object type 2 (Generalized Load Balancing) for\n   the
      LOAD-BALANCING object.  The Generalized Load Balancing object\n   type has a
      variable length.\n   The format of the Generalized Load Balancing object type
      is as\n   follows:\n       0                   1                   2                   3\n
      \      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      |
      \   Bandwidth Spec Length      | Reverse Bandwidth Spec Length |\n      | Bw
      Spec Type  |  Max-LSP      | Reserved                      |\n      |        Min
      Bandwidth Spec                                     |\n      |        Min Reverse
      Bandwidth Spec (optional)                  |\n      ~                      Optional
      TLVs                            ~\n   Bandwidth Spec Length (16 bits):  the
      total length of the Min\n      Bandwidth Spec field.  The length MUST be strictly
      greater than 0.\n   Reverse Bandwidth Spec Length (16 bits):  the total length
      of the Min\n      Reverse Bandwidth Spec field.  It MAY be equal to 0.\n   Bw
      Spec Type (8 bits):  the bandwidth specification type; it\n      corresponds
      to RSVP-TE SENDER_TSPEC (Object Class 12) C-Types.\n   Max-LSP (8 bits):  the
      maximum number of TE-LSPs in the set.\n   Min Bandwidth Spec (variable):  specifies
      the minimum bandwidth\n      specification of each element of the TE-LSP set.\n
      \  Min Reverse Bandwidth Spec (variable):  specifies the minimum reverse\n      bandwidth
      specification of each element of the TE-LSP set.\n   The encoding of the Min
      Bandwidth Spec and Min Reverse Bandwidth Spec\n   fields is the same as in the
      RSVP-TE SENDER_TSPEC object; it can be\n   found in Table 3 in Section 2.3 of
      this document.\n   When a PCC requests a bidirectional path with symmetric bandwidth\n
      \  while specifying load-balancing constraints, it SHOULD specify the\n   Min
      Bandwidth Spec field and set the Reverse Bandwidth Spec Length to\n   0.  When
      a PCC needs to request a bidirectional path with asymmetric\n   bandwidth while
      specifying load-balancing constraints, it MUST\n   specify the different bandwidth
      in forward and reverse directions\n   through Min Bandwidth Spec and Min Reverse
      Bandwidth Spec fields.\n   Optional TLVs MAY be included within the object body
      to specify more\n   specific bandwidth requirements.  No TLVs for the Generalized
      Load\n   Balancing object type are defined by this document.\n   The semantic
      of the LOAD-BALANCING object is not changed.  If a PCC\n   requests the computation
      of a set of TE-LSPs with at most N TE-LSPs\n   so that it can carry Generalized
      bandwidth X, each TE-LSP must at\n   least transport bandwidth B; it inserts
      a BANDWIDTH object specifying\n   X as the required bandwidth and a LOAD-BALANCING
      object with the Max-\n   LSP and Min Bandwidth Spec fields set to N and B, respectively.
      \ When\n   the BANDWIDTH and Min Bandwidth Spec can be summarized as scalars,\n
      \  the sum of the bandwidth for all TE-LSPs in the set is greater than\n   X.
      \ The mapping of the X over N path with (at least) bandwidth B is\n   technology
      and possibly node specific.  Each standard definition of\n   the transport technology
      is defining those mappings and are not\n   repeated in this document.  A simplified
      example for SDH is described\n   in Appendix A.\n   In all other cases, including
      technologies based on statistical\n   multiplexing (e.g., InterServ and Ethernet),
      the exact bandwidth\n   management (e.g., the Ethernet's Excessive Rate) is
      left to the PCE's\n   policies, according to the operator's configuration.  If
      required,\n   further documents may introduce a new mechanism to finely express\n
      \  complex load-balancing policies within PCEP.\n   The BANDWIDTH and LOAD-BALANCING
      Bw Spec Type can be different\n   depending on the architecture of the endpoint
      node.  When the PCE is\n   not able to handle those two Bw Spec Types, it MUST
      return a NO-PATH\n   with the bit \"LOAD-BALANCING could not be performed with
      the\n   bandwidth constraints\" set in the NO-PATH-VECTOR TLV.\n"
    title: 2.4.  LOAD-BALANCING Object Extensions
  - contents:
    - "2.5.  END-POINTS Object Extensions\n   The END-POINTS object is used in a PCEP
      request message to specify\n   the source and the destination of the path for
      which a path\n   computation is requested.  Per [RFC5440], the source IP address
      and\n   the destination IP address are used to identify those.  A new object\n
      \  type is defined to address the following possibilities:\n   *  Different
      source and destination endpoint types.\n   *  Label restrictions on the endpoint.\n
      \  *  Specification of unnumbered endpoints type as seen in GMPLS\n      networks.\n
      \  The object encoding is described in the following sections.\n   In path computation
      within a GMPLS context, the endpoints can:\n   *  Be unnumbered as described
      in [RFC3477].\n   *  Have labels associated to them, specifying a set of constraints
      on\n      the allocation of labels.\n   *  Have different switching capabilities.\n
      \  The IPv4 and IPv6 endpoints are used to represent the source and\n   destination
      IP addresses.  The scope of the IP address (node or\n   numbered link) is not
      explicitly stated.  It is also possible to\n   request a path between a numbered
      link and an unnumbered link, or a\n   P2MP path between different types of endpoints.\n
      \  This document defines object type 5 (Generalized Endpoint) for the\n   END-POINTS
      object.  This new type also supports the specification of\n   constraints on
      the endpoint label to be used.  The PCE might know the\n   interface restrictions,
      but this is not a requirement.  This\n   corresponds to requirements 6 and 10
      in Section 3.1 of [RFC7025].\n"
    - contents:
      - "2.5.1.  Generalized Endpoint Object Type\n   The Generalized Endpoint object
        type format consists of a body and a\n   list of TLVs scoped to this object.
        \ The TLVs give the details of the\n   endpoints and are described in Section
        2.5.2.  For each endpoint\n   type, a different grammar is defined.  The TLVs
        defined to describe\n   an endpoint are:\n   1.  IPV4-ADDRESS\n   2.  IPV6-ADDRESS\n
        \  3.  UNNUMBERED-ENDPOINT\n   4.  LABEL-REQUEST\n   5.  LABEL-SET\n   The
        LABEL-SET TLV is used to restrict or suggest the label allocation\n   in the
        PCE.  This TLV expresses the set of restrictions that may\n   apply to signaling.
        \ Label restriction support can be an explicit or\n   a suggested value (LABEL-SET
        describing one label, with the L bit\n   cleared or set, respectively), mandatory
        range restrictions (LABEL-\n   SET with the L bit cleared), and optional range
        restriction (LABEL-\n   SET with the L bit set).  Endpoints label restriction
        may not be part\n   of the RRO or IRO.  They can be included when following
        [RFC4003] in\n   signaling for the egress endpoint, but ingress endpoint properties\n
        \  can be local to the PCC and not signaled.  To support this case, the\n
        \  LABEL-SET allows indication of which labels are used in case of\n   reoptimization.
        \ The label range restrictions are valid in GMPLS-\n   controlled networks,
        depending on either the PCC policy or the\n   switching technology used, for
        instance, on a given Ethernet or ODU\n   equipment having limited hardware
        capabilities restricting the label\n   range.  Label set restriction also
        applies to WSON networks where the\n   optical senders and receivers are limited
        in their frequency\n   tunability ranges, consequently restricting the possible
        label ranges\n   on the interface in GMPLS.  The END-POINTS object with the\n
        \  Generalized Endpoint object type is encoded as follows:\n       0                   1
        \                  2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2
        3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      |      Reserved                                 |
        Endpoint Type |\n   Reserved bits SHOULD be set to 0 when a message is sent
        and ignored\n   when the message is received.\n   The values for the Endpoint
        Type field are defined as follows:\n            | Value   | Type                                 |\n
        \           | 0       | Point-to-Point                       |\n            |
        1       | Point-to-Multipoint with leaf type 1 |\n            | 2       |
        Point-to-Multipoint with leaf type 2 |\n            | 3       | Point-to-Multipoint
        with leaf type 3 |\n            | 4       | Point-to-Multipoint with leaf
        type 4 |\n            | 5-244   | Unassigned                           |\n
        \           | 245-255 | Experimental Use                     |\n                   Table
        4: Generalized Endpoint Types\n   The Endpoint Type field is used to cover
        both point-to-point and\n   different point-to-multipoint endpoints.  A PCE
        may only accept\n   endpoint type 0; endpoint types 1-4 apply if the PCE implementation\n
        \  supports P2MP path calculation.  The leaf types for P2MP are as per\n   [RFC8306].
        \ A PCE not supporting a given endpoint type SHOULD respond\n   with a PCErr
        with Error-Type=4 (Not supported object) and Error-\n   value=7 (Unsupported
        endpoint type in END-POINTS Generalized Endpoint\n   object type).  As per
        [RFC5440], a PCE unable to process Generalized\n   Endpoints may respond with
        Error-Type=3 (Unknown Object) and Error-\n   value=2 (Unrecognized object
        type) or with Error-Type=4 (Not\n   supported object) and Error-value=2 (Not
        supported object Type).  The\n   TLVs present in the request object body MUST
        follow the grammar per\n   [RFC5511]:\n     <generalized-endpoint-tlvs>::=\n
        \      <p2p-endpoints> | <p2mp-endpoints>\n     <p2p-endpoints> ::=\n       <endpoint>
        [<endpoint-restriction-list>]\n       <endpoint> [<endpoint-restriction-list>]\n
        \    <p2mp-endpoints> ::=\n       <endpoint> [<endpoint-restriction-list>]\n
        \      <endpoint> [<endpoint-restriction-list>]\n       [<endpoint> [<endpoint-restriction-list>]]...\n
        \  For endpoint type Point-to-Point, two endpoint TLVs MUST be present\n   in
        the message.  The first endpoint is the source, and the second is\n   the
        destination.\n   For endpoint type Point-to-Multipoint, several END-POINTS
        objects MAY\n   be present in the message, and the exact meaning depends on
        the\n   endpoint type defined for the object.  The first endpoint TLV is the\n
        \  root, and other endpoint TLVs are the leaves.  The root endpoint MUST\n
        \  be the same for all END-POINTS objects for that P2MP tree request.\n   If
        the root endpoint is not the same for all END-POINTS, a PCErr with\n   Error-Type=17
        (P2MP END-POINTS Error) and Error-value=4 (The PCE\n   cannot satisfy the
        request due to inconsistent END-POINTS) MUST be\n   returned.  The procedure
        defined in [RFC8306], Section 3.10 also\n   applies to the Generalized Endpoint
        with Point-to-Multipoint endpoint\n   types.\n   An endpoint is defined as
        follows:\n    <endpoint>::=<IPV4-ADDRESS>|<IPV6-ADDRESS>|<UNNUMBERED-ENDPOINT>\n
        \   <endpoint-restriction-list> ::= <endpoint-restriction>\n                     [<endpoint-restriction-list>]\n
        \   <endpoint-restriction> ::=\n                     [<LABEL-REQUEST>][<label-restriction-list>]\n
        \   <label-restriction-list> ::= <label-restriction>\n    <label-restriction>
        ::= <LABEL-SET>\n   The different TLVs are described in the following sections.
        \ A PCE\n   MAY support any or all of the IPV4-ADDRESS, IPV6-ADDRESS, and\n
        \  UNNUMBERED-ENDPOINT TLVs.  When receiving a PCReq, a PCE unable to\n   resolve
        the identifier in one of those TLVs MUST respond by using a\n   PCRep with
        NO-PATH and setting the bit \"Unknown destination\" or\n   \"Unknown source\"
        in the NO-PATH-VECTOR TLV.  The response SHOULD\n   include the END-POINTS
        object with only the unsupported TLV(s).\n   A PCE MAY support either or both
        of the LABEL-REQUEST and LABEL-SET\n   TLVs.  If a PCE finds a non-supported
        TLV in the END-POINTS, the PCE\n   MUST respond with a PCErr message with
        Error-Type=4 (Not supported\n   object) and Error-value=8 (Unsupported TLV
        present in END-POINTS\n   Generalized Endpoint object type), and the message
        SHOULD include the\n   END-POINTS object in the response with only the endpoint
        and endpoint\n   restriction TLV it did not understand.  A PCE supporting
        those TLVs\n   but not being able to fulfill the label restriction MUST send
        a\n   response with a NO-PATH object that has the bit \"No endpoint label\n
        \  resource\" or \"No endpoint label resource in range\" set in the NO-\n
        \  PATH-VECTOR TLV.  The response SHOULD include an END-POINTS object\n   containing
        only the TLV(s) related to the constraints the PCE could\n   not meet.\n"
      title: 2.5.1.  Generalized Endpoint Object Type
    - contents:
      - "2.5.2.  END-POINTS TLV Extensions\n   All endpoint TLVs have the standard
        PCEP TLV header as defined in\n   [RFC5440], Section 7.1.  For the Generalized
        Endpoint object type,\n   the TLVs MUST follow the ordering defined in Section
        2.5.1.\n"
      - contents:
        - "2.5.2.1.  IPV4-ADDRESS TLV\n   The IPV4-ADDRESS TLV (Type 39) represents
          a numbered endpoint using\n   IPv4 numbering.  The format of the TLV value
          is as follows:\n      0                   1                   2                   3\n
          \     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n
          \  This TLV MAY be ignored, in which case a PCRep with NO-PATH SHOULD be\n
          \  returned, as described in Section 2.5.1.\n"
        title: 2.5.2.1.  IPV4-ADDRESS TLV
      - contents:
        - "2.5.2.2.  IPV6-ADDRESS TLV\n   The IPv6-ADDRESS TLV (Type 40) represents
          a numbered endpoint using\n   IPV6 numbering.  The format of the TLV value
          is as follows:\n      0                   1                   2                   3\n
          \     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n
          \    |              IPv6 address (16 bytes)                          |\n
          \  This TLV MAY be ignored, in which case a PCRep with NO-PATH SHOULD be\n
          \  returned, as described in Section 2.5.1.\n"
        title: 2.5.2.2.  IPV6-ADDRESS TLV
      - contents:
        - "2.5.2.3.  UNNUMBERED-ENDPOINT TLV\n   The UNNUMBERED-ENDPOINT TLV (Type
          41) represents an unnumbered\n   interface.  This TLV has the same semantic
          as in [RFC3477].  The TLV\n   value is encoded as follows:\n      0                   1
          \                  2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1
          2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     |                       Interface
          ID (32 bits)                  |\n   This TLV MAY be ignored, in which case
          a PCRep with NO-PATH SHOULD be\n   returned, as described in Section 2.5.1.\n"
        title: 2.5.2.3.  UNNUMBERED-ENDPOINT TLV
      - contents:
        - "2.5.2.4.  LABEL-REQUEST TLV\n   The LABEL-REQUEST TLV (Type 42) indicates
          the switching capability\n   and encoding type of the following label restriction
          list for the\n   endpoint.  The value format and encoding is the same as
          described in\n   Section 3.1 of [RFC3471] for the Generalized Label Request.
          \ The LSP\n   Encoding Type field indicates the encoding type, e.g., SONET,
          SDH,\n   GigE, etc., of the LSP with which the data is associated.  The\n
          \  Switching Type field indicates the type of switching that is being\n
          \  requested on the endpoint.  The Generalized Protocol Identifier\n   (G-PID)
          field identifies the payload.  This TLV and the following one\n   are defined
          to satisfy requirement 13 in Section 3.1 of [RFC7025] for\n   the endpoint.
          \ It is not directly related to the TE-LSP label\n   request, which is expressed
          by the SWITCH-LAYER object.\n   On the path calculation request, only the
          GENERALIZED-BANDWIDTH and\n   SWITCH-LAYER need to be coherent; the endpoint
          labels could be\n   different (supporting a different LABEL-REQUEST).  Hence,
          the label\n   restrictions include a Generalized Label Request in order
          to\n   interpret the labels.  This TLV MAY be ignored, in which case a PCRep\n
          \  with NO-PATH SHOULD be returned, as described in Section 2.5.1.\n"
        title: 2.5.2.4.  LABEL-REQUEST TLV
      - contents:
        - "2.5.2.5.  LABEL-SET TLV\n   Label or label range restrictions can be specified
          for the TE-LSP\n   endpoints.  Those are encoded using the LABEL-SET TLV.
          \ The label\n   value needs to be interpreted with a description on the
          encoding and\n   switching type.  The REQ-ADAP-CAP object [RFC8282] can
          be used in\n   case of a mono-layer request; however, in case of a multi-layer\n
          \  request, it is possible to have more than one object, so it is better\n
          \  to have a dedicated TLV for the label and label request.  These TLVs\n
          \  MAY be ignored, in which case a response with NO-PATH SHOULD be\n   returned,
          as described in Section 2.5.1.  Per [RFC5440], the LABEL-\n   SET TLV is
          encoded as follows.  The type of the LABEL-SET TLV is 43.\n   The TLV Length
          is variable, and the value encoding follows\n   Section 3.5 of [RFC3471],
          with the addition of a U bit, O bit, and L\n   bit.  The L bit is used to
          represent a suggested set of labels,\n   following the semantic of Suggested
          Label as defined by [RFC3471].\n     0                   1                   2
          \                  3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2
          3 4 5 6 7 8 9 0 1\n    |    Action     |    Reserved |L|O|U|        Label
          Type         |\n    |                          Subchannel 1                         |\n
          \   |                          Subchannel N                         |\n
          \  A LABEL-SET TLV represents a set of possible labels that can be used\n
          \  on an interface.  If the L bit is cleared, the label allocated on the\n
          \  first endpoint MUST be within the label set range.  The Action\n   parameter
          in the LABEL-SET indicates the type of list provided.\n   These parameters
          are described by [RFC3471], Section 3.5.1.\n   The U, O, and L bits are
          defined as follows:\n      U:   Upstream direction.  Set for the upstream
          (reverse) direction\n           in case of bidirectional LSP.\n      O:
          \  Old label.  Set when the TLV represents the old (previously\n           allocated)
          label in case of reoptimization.  The R bit of the\n           RP object
          MUST be set to 1.  If the L bit is set, this bit\n           SHOULD be set
          to 0 and ignored on receipt.  When this bit is\n           set, the Action
          field MUST be set to 0 (Inclusive List), and\n           the LABEL-SET MUST
          contain one subchannel.\n      L:   Loose label.  Set when the TLV indicates
          to the PCE that a\n           set of preferred (ordered) labels are to be
          used.  The PCE\n           MAY use those labels for label allocation.\n
          \  Several LABEL_SET TLVs MAY be present with the O bit cleared;\n   LABEL_SET
          TLVs with the L bit set can be combined with a LABEL_SET\n   TLV with the
          L bit cleared.  There MUST NOT be more than two\n   LABEL_SET TLVs present
          with the O bit set.  If there are two\n   LABEL_SET TLVs present, there
          MUST NOT be more than one with the U\n   bit set, and there MUST NOT be
          more than one with the U bit cleared.\n   For a given U bit value, if more
          than one LABEL_SET TLV with the O\n   bit set is present, the first TLV
          MUST be processed, and the\n   following TLVs that have the same U and O
          bits MUST be ignored.\n   A LABEL-SET TLV with the O and L bits set MUST
          trigger a PCErr\n   message with Error-Type=10 (Reception of an invalid
          object) and\n   Error-value=29 (Wrong LABEL-SET TLV present with O and L
          bits set).\n   A LABEL-SET TLV that has the O bit set and an Action field
          not set to\n   0 (Inclusive List) or that contains more than one subchannel
          MUST\n   trigger a PCErr message with Error-Type=10 (Reception of an invalid\n
          \  object) and Error-value=30 (Wrong LABEL-SET TLV present with O bit\n
          \  set and wrong format).\n   If a LABEL-SET TLV is present with the O bit
          set, the R bit of the RP\n   object MUST be set; otherwise, a PCErr message
          MUST be sent with\n   Error-Type=10 (Reception of an invalid object) and
          Error-value=28\n   (LABEL-SET TLV present with O bit set but without R bit
          set in RP).\n"
        title: 2.5.2.5.  LABEL-SET TLV
      title: 2.5.2.  END-POINTS TLV Extensions
    title: 2.5.  END-POINTS Object Extensions
  - contents:
    - "2.6.  IRO Extension\n   The IRO as defined in [RFC5440] is used to include
      specific objects\n   in the path.  RSVP-TE allows the inclusion of a label definition.
      \ In\n   order to fulfill requirement 13 in Section 3.1 of [RFC7025], the IRO\n
      \  needs to support the new subobject type as defined in [RFC3473]:\n                           |
      Type | Subobject |\n                           | 10   | Label     |\n   The
      Label subobject MUST follow a subobject identifying a link,\n   currently an
      IP address subobject (Type 1 or 2) or an interface ID\n   (Type 4) subobject.
      \ If an IP address subobject is used, then the\n   given IP address MUST be
      associated with a link.  More than one Label\n   subobject MAY follow each subobject
      identifying a link.  The\n   procedure associated with this subobject is as
      follows.\n   If the PCE is able to allocate labels (e.g., via explicit label\n
      \  control), the PCE MUST allocate one label from within the set of\n   label
      values for the given link.  If the PCE does not assign labels,\n   then it sends
      a response with a NO-PATH object, containing a NO-PATH-\n   VECTOR TLV with
      the bit \"No label resource in range\" set.\n"
    title: 2.6.  IRO Extension
  - contents:
    - "2.7.  XRO Extension\n   The XRO as defined in [RFC5521] is used to exclude
      specific objects\n   in the path.  RSVP-TE allows the exclusion of certain labels\n
      \  [RFC6001].  In order to fulfill requirement 13 in Section 3.1 of\n   [RFC7025],
      the PCEP's XRO needs to support a new subobject to enable\n   label exclusion.\n
      \  The encoding of the XRO Label subobject follows the encoding of the\n   ERO
      Label subobject defined in [RFC3473] and the XRO subobject\n   defined in [RFC5521].
      \ The XRO Label subobject (Type 10) represents\n   one label and is defined
      as follows:\n    0                   1                   2                   3\n
      \   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   |X|
      \   Type=10  |    Length     |U|   Reserved  |   C-Type      |\n   X (1 bit):
      \ See [RFC5521].  The X bit indicates whether the exclusion\n      is mandatory
      or desired.  0 indicates that the resource specified\n      MUST be excluded
      from the path computed by the PCE. 1 indicates\n      that the resource specified
      SHOULD be excluded from the path\n      computed by the PCE, but it MAY be included
      subject to the PCE\n      policy and the absence of a viable path that meets
      the other\n      constraints and excludes the resource.\n   Type (7 bits):  The
      type of the XRO Label subobject is 10.\n   Length (8 bits):  See [RFC5521].
      \ The total length of the subobject\n      in bytes (including the Type and
      Length fields).  The length is\n      always divisible by 4.\n   U (1 bit):
      \ See [RFC3471], Section 6.1.\n   C-Type (8 bits):  The C-Type of the included
      Label object as defined\n      in [RFC3473].\n   Label:  See [RFC3471].\n   The
      Label subobject MUST follow a subobject identifying a link,\n   currently an
      IP address subobject (Type 1 or 2) or an interface ID\n   (Type 4) subobject.
      \ If an IP address subobject is used, the given IP\n   address MUST be associated
      with a link.  More than one label\n   subobject MAY follow a subobject identifying
      a link.\n                           | Type | Subobject |\n                           |
      10   | Label     |\n"
    title: 2.7.  XRO Extension
  - contents:
    - "2.8.  LSPA Extensions\n   The LSPA carries the LSP attributes.  In the end-to-end
      recovery\n   context, this also includes the protection state information.  A
      new\n   TLV is defined to fulfill requirement 7 in Section 3.1 of [RFC7025]\n
      \  and requirement 3 in Section 3.2 of [RFC7025].  This TLV contains the\n   information
      of the PROTECTION object defined by [RFC4872] and can be\n   used as a policy
      input.  The LSPA object MAY carry a PROTECTION-\n   ATTRIBUTE TLV (Type 44),
      which is defined as follows:\n      0                   1                   2
      \                  3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3
      4 5 6 7 8 9 0 1\n     |         Type                  |  Length                       |\n
      \    |S|P|N|O|  Reserved | LSP Flags |     Reserved      | Link Flags|\n     |I|R|
      \  Reserved    | Seg.Flags |           Reserved            |\n   The content
      is as defined in [RFC4872], Section 14 and [RFC4873],\n   Section 6.1.\n   The
      LSP (protection) Flags field or the Link Flags field can be used\n   by a PCE
      implementation for routing policy input.  The other\n   attributes are only
      meaningful for a stateful PCE.\n   This TLV is OPTIONAL and MAY be ignored by
      the PCE.  If ignored by\n   the PCE, it MUST NOT include the TLV in the LSPA
      of the response.\n   When the TLV is used by the PCE, an LSPA object and the
      PROTECTION-\n   ATTRIBUTE TLV MUST be included in the response.  Fields that
      were not\n   considered MUST be set to 0.\n"
    title: 2.8.  LSPA Extensions
  - contents:
    - "2.9.  NO-PATH Object Extension\n   The NO-PATH object is used in PCRep messages
      in response to an\n   unsuccessful Path Computation Request (the PCE could not
      find a path\n   satisfying the set of constraints).  In this scenario, the PCE
      MUST\n   include a NO-PATH object in the PCRep message.  The NO-PATH object\n
      \  MAY carry the NO-PATH-VECTOR TLV that specifies more information on\n   the
      reasons that led to a negative reply.  In case of GMPLS networks,\n   there
      could be some additional constraints that led to the failure\n   such as protection
      mismatch, lack of resources, and so on.  Several\n   new flags have been defined
      in the 32-bit Flag field of the NO-PATH-\n   VECTOR TLV, but no modifications
      have been made in the NO-PATH\n   object.\n"
    - contents:
      - "2.9.1.  Extensions to NO-PATH-VECTOR TLV\n   The modified NO-PATH-VECTOR
        TLV carrying the additional information\n   is as follows:\n      Bit number
        18:  Protection Mismatch (1 bit).  Specifies the\n         mismatch of the
        protection type in the PROTECTION-ATTRIBUTE TLV\n         in the request.\n
        \     Bit number 17:  No Resource (1 bit).  Specifies that the resources\n
        \        are not currently sufficient to provide the path.\n      Bit number
        16:  Granularity not supported (1 bit).  Specifies that\n         the PCE
        is not able to provide a path with the requested\n         granularity.\n
        \     Bit number 15:  No endpoint label resource (1 bit).  Specifies\n         that
        the PCE is not able to provide a path because of the\n         endpoint label
        restriction.\n      Bit number 14:  No endpoint label resource in range (1
        bit).\n         Specifies that the PCE is not able to provide a path because
        of\n         the endpoint label set restriction.\n      Bit number 13:  No
        label resource in range (1 bit).  Specifies\n         that the PCE is not
        able to provide a path because of the label\n         set restriction.\n      Bit
        number 12:  LOAD-BALANCING could not be performed with the\n         bandwidth
        constraints (1 bit).  Specifies that the PCE is not\n         able to provide
        a path because it could not map the BANDWIDTH\n         into the parameters
        specified by the LOAD-BALANCING.\n"
      title: 2.9.1.  Extensions to NO-PATH-VECTOR TLV
    title: 2.9.  NO-PATH Object Extension
  title: 2.  PCEP Objects and Extensions
- contents:
  - "3.  Additional Error-Types and Error-Values Defined\n   A PCEP-ERROR object is
    used to report a PCEP error and is\n   characterized by an Error-Type that specifies
    the type of error and\n   an Error-value that provides additional information
    about the error.\n   An additional Error-Type and several Error-values are defined
    to\n   represent some of the errors related to the newly identified objects,\n
    \  which are related to GMPLS networks.  For each PCEP error, an Error-\n   Type
    and an Error-value are defined.  Error-Types 1 to 10 are already\n   defined in
    [RFC5440].  Additional Error-values are defined for Error-\n   Types 4 and 10.
    \ A new Error-Type 29 (Path computation failure) is\n   defined in this document.\n
    \  Error-Type 29 (Path computation failure) is used to reflect\n   constraints
    not understood by the PCE, for instance, when the PCE is\n   not able to understand
    the Generalized bandwidth.  If the constraints\n   are understood, but the PCE
    is unable to find those constraints, NO-\n   PATH is to be used.\n       | Error-Type
    | Meaning       | Error-value                  |\n       | 4          | Not supported
    |                              |\n       |            | object        |                              |\n
    \      | 10         | Reception of  |                              |\n       |
    \           | an invalid    |                              |\n       |            |
    object        |                              |\n       | 29         | Path          |
    \                             |\n       |            | computation   |                              |\n
    \      |            | failure       |                              |\n"
  title: 3.  Additional Error-Types and Error-Values Defined
- contents:
  - "4.  Manageability Considerations\n   This section follows the guidance of [RFC6123].\n"
  - contents:
    - "4.1.  Control of Function through Configuration and Policy\n   This document
      makes no change to the basic operation of PCEP, so the\n   requirements described
      in [RFC5440], Section 8.1 also apply to this\n   document.  In addition to those
      requirements, a PCEP implementation\n   may allow the configuration of the following
      parameters:\n   *  Accepted RG in the RP object.\n   *  Default RG to use (overriding
      the one present in the PCReq).\n   *  Accepted BANDWIDTH object type 3 and 4
      parameters in the request\n      and default mapping to use when not specified
      in the request.\n   *  Accepted LOAD-BALANCING object type 2 parameters in request.\n
      \  *  Accepted endpoint type and allowed TLVs in object END-POINTS with\n      the
      object type Generalized Endpoint.\n   *  Accepted range for label restrictions
      in END-POINTS or IRO/XRO\n      objects.\n   *  Acceptance and suppression of
      the PROTECTION-ATTRIBUTE TLV.\n   The configuration of the above parameters
      is applicable to the\n   different sessions as described in [RFC5440], Section
      8.1 (by\n   default, per PCEP peer, etc.).\n"
    title: 4.1.  Control of Function through Configuration and Policy
  - contents:
    - "4.2.  Information and Data Models\n   This document makes no change to the
      basic operation of PCEP, so the\n   requirements described in [RFC5440], Section
      8.2 also apply to this\n   document.  This document does not introduce any new
      ERO subobjects;\n   the ERO information model is already covered in [RFC4802].\n"
    title: 4.2.  Information and Data Models
  - contents:
    - "4.3.  Liveness Detection and Monitoring\n   This document makes no change to
      the basic operation of PCEP, so\n   there are no changes to the requirements
      for liveness detection and\n   monitoring in [RFC4657] and [RFC5440], Section
      8.3.\n"
    title: 4.3.  Liveness Detection and Monitoring
  - contents:
    - "4.4.  Verifying Correct Operation\n   This document makes no change to the
      basic operations of PCEP and the\n   considerations described in [RFC5440],
      Section 8.4.  New errors\n   defined by this document should satisfy the requirement
      to log error\n   events.\n"
    title: 4.4.  Verifying Correct Operation
  - contents:
    - "4.5.  Requirements on Other Protocols and Functional Components\n   No new
      requirements on other protocols and functional components are\n   made by this
      document.  This document does not require ERO object\n   extensions.  Any new
      ERO subobject defined in the TEAS or CCAMP\n   Working Groups can be adopted
      without modifying the operations\n   defined in this document.\n"
    title: 4.5.  Requirements on Other Protocols and Functional Components
  - contents:
    - "4.6.  Impact on Network Operation\n   This document makes no change to the
      basic operations of PCEP and the\n   considerations described in [RFC5440],
      Section 8.6.  In addition to\n   the limit on the rate of messages sent by a
      PCEP speaker, a limit MAY\n   be placed on the size of the PCEP messages.\n"
    title: 4.6.  Impact on Network Operation
  title: 4.  Manageability Considerations
- contents:
  - "5.  IANA Considerations\n   IANA assigns values to PCEP objects and TLVs.  IANA
    has made\n   allocations for the newly defined objects and TLVs defined in this\n
    \  document.  In addition, IANA manages the space of flags that have\n   been
    newly added in the TLVs.\n"
  - contents:
    - "5.1.  PCEP Objects\n   New object types are defined in Sections 2.3, 2.4, and
      2.5.1.  IANA\n   has made the following Object-Type allocations in the \"PCEP
      Objects\"\n   subregistry.\n      | Object-Class | Name           | Object-Type
      \    | Reference |\n      | Value        |                |                 |
      \          |\n      | 5            | BANDWIDTH      | 3: Generalized  | RFC
      8779, |\n      | 14           | LOAD-BALANCING | 2: Generalized  | RFC 8779,
      |\n      | 4            | END-POINTS     | 5: Generalized  | RFC 8779, |\n"
    title: 5.1.  PCEP Objects
  - contents:
    - "5.2.  Endpoint Type Field in the Generalized END-POINTS Object\n   IANA has
      created a new \"Generalized Endpoint Types\" registry to\n   manage the Endpoint
      Type field of the END-POINTS object, the object\n   type Generalized Endpoint,
      and the code space.\n   New endpoint types in the Unassigned range are assigned
      by Standards\n   Action [RFC8126].  Each endpoint type should be tracked with
      the\n   following attributes:\n   *  Value\n   *  Type\n   *  Defining RFC\n
      \  New endpoint types in the Experimental Use range will not be\n   registered
      with IANA and MUST NOT be mentioned by any RFCs.\n   The following values are
      defined by this document (see Table 4 in\n   Section 2.5.1):\n            |
      Value   | Type                                 |\n            | 0       | Point-to-Point
      \                      |\n            | 1       | Point-to-Multipoint with leaf
      type 1 |\n            | 2       | Point-to-Multipoint with leaf type 2 |\n            |
      3       | Point-to-Multipoint with leaf type 3 |\n            | 4       | Point-to-Multipoint
      with leaf type 4 |\n            | 5-244   | Unassigned                           |\n
      \           | 245-255 | Experimental Use                     |\n"
    title: 5.2.  Endpoint Type Field in the Generalized END-POINTS Object
  - contents:
    - "5.3.  New PCEP TLVs\n   IANA manages a registry for PCEP TLV code points (see
      [RFC5440]),\n   which is maintained as the \"PCEP TLV Type Indicators\" subregistry
      of\n   the \"Path Computation Element Protocol (PCEP) Numbers\" registry.\n
      \  IANA has allocated the following per this document:\n       | Value | Meaning
      \             | Reference                 |\n       |   39  | IPV4-ADDRESS         |
      RFC 8779, Section 2.5.2.1 |\n       |   40  | IPV6-ADDRESS         | RFC 8779,
      Section 2.5.2.2 |\n       |   41  | UNNUMBERED-ENDPOINT  | RFC 8779, Section
      2.5.2.3 |\n       |   42  | LABEL-REQUEST        | RFC 8779, Section 2.5.2.4
      |\n       |   43  | LABEL-SET            | RFC 8779, Section 2.5.2.5 |\n       |
      \  44  | PROTECTION-ATTRIBUTE | RFC 8779, Section 2.8     |\n       |   45  |
      GMPLS-CAPABILITY     | RFC 8779, Section 2.1.2   |\n"
    title: 5.3.  New PCEP TLVs
  - contents:
    - "5.4.  RP Object Flag Field\n   A new flag is defined in Section 2.2 for the
      Flags field of the RP\n   object.  IANA has made the following allocation in
      the \"RP Object\n   Flag Field\" subregistry:\n       |  Bit  | Description
      \             | Reference             |\n       | 15-16 | Routing Granularity
      (RG) | RFC 8779, Section 2.2 |\n"
    title: 5.4.  RP Object Flag Field
  - contents:
    - "5.5.  New PCEP Error Codes\n   New PCEP Error-Types and Error-values are defined
      in Section 3.  IANA\n   has made the following allocations in the \"PCEP-ERROR
      Object Error\n   Types and Values\" registry:\n    | Error-Type | Meaning     |
      Error-value              | Reference |\n    | 4          | Not         |                          |
      [RFC5440] |\n    |            | supported   |                          |           |\n
      \   |            | object      |                          |           |\n    |
      10         | Reception   |                          | [RFC5440] |\n    |            |
      of an       |                          |           |\n    |            | invalid
      \    |                          |           |\n    |            | object      |
      \                         |           |\n    | 29         | Path        |                          |
      RFC 8779  |\n    |            | computation |                          |           |\n
      \   |            | failure     |                          |           |\n"
    title: 5.5.  New PCEP Error Codes
  - contents:
    - "5.6.  New Bits in NO-PATH-VECTOR TLV\n   New NO-PATH-VECTOR TLV bits are defined
      in Section 2.9.1.  IANA has\n   made the following allocations in the \"NO-PATH-VECTOR
      TLV Flag Field\"\n   subregistry:\n        | Bit | Description                           |
      Reference |\n        | 18  | Protection Mismatch                   | RFC 8779
      \ |\n        | 17  | No Resource                           | RFC 8779  |\n        |
      16  | Granularity not supported             | RFC 8779  |\n        | 15  | No
      endpoint label resource            | RFC 8779  |\n        | 14  | No endpoint
      label resource in range   | RFC 8779  |\n        | 13  | No label resource in
      range            | RFC 8779  |\n        | 12  | LOAD-BALANCING could not be
      performed | RFC 8779  |\n        |     | with the bandwidth constraints        |
      \          |\n"
    title: 5.6.  New Bits in NO-PATH-VECTOR TLV
  - contents:
    - "5.7.  New Subobject for the Include Route Object\n   IANA has added a new subobject
      in the \"IRO Subobjects\" subregistry of\n   the \"Path Computation Element
      Protocol (PCEP) Numbers\" registry.\n   IANA has added a new subobject that
      can be carried in the IRO as\n   follows:\n                    | Value | Description
      | Reference |\n                    | 10    | Label       | RFC 8779  |\n"
    title: 5.7.  New Subobject for the Include Route Object
  - contents:
    - "5.8.  New Subobject for the Exclude Route Object\n   IANA has added a new subobject
      in the \"XRO Subobjects\" subregistry of\n   the \"Path Computation Element
      Protocol (PCEP) Numbers\" registry.\n   IANA has added a new subobject that
      can be carried in the XRO as\n   follows:\n                    | Value | Description
      | Reference |\n                    | 10    | Label       | RFC 8779  |\n"
    title: 5.8.  New Subobject for the Exclude Route Object
  - contents:
    - "5.9.  New GMPLS-CAPABILITY TLV Flag Field\n   IANA has created a new \"GMPLS-CAPABILITY
      TLV Flag Field\" subregistry\n   within the \"Path Computation Element Protocol
      (PCEP) Numbers\"\n   registry to manage the Flag field of the GMPLS-CAPABILITY
      TLV.\n   New bit numbers are to be assigned by Standards Action [RFC8126].\n
      \  Each bit should be tracked with the following qualities:\n   *  Bit number
      (counting from bit 0 as the most significant bit)\n   *  Capability description\n
      \  *  Defining RFC\n   The initial contents of the subregistry are empty, with
      bits 0-31\n   marked as Unassigned.\n"
    title: 5.9.  New GMPLS-CAPABILITY TLV Flag Field
  title: 5.  IANA Considerations
- contents:
  - "6.  Security Considerations\n   GMPLS controls multiple technologies and types
    of network elements.\n   The LSPs that are established using GMPLS, whose paths
    can be\n   computed using the PCEP extensions to support GMPLS described in this\n
    \  document, can carry a high volume of traffic and can be a critical\n   part
    of a network infrastructure.  The PCE can then play a key role\n   in the use
    of the resources and in determining the physical paths of\n   the LSPs; thus,
    it is important to ensure the identity of the PCE and\n   PCC, as well as the
    communication channel.  In many deployments,\n   there will be a completely isolated
    network where an external attack\n   is of very low probability.  However, there
    are other deployment\n   cases in which the PCC-PCE communication can be more
    exposed, and\n   there could be more security considerations.  There are three
    main\n   situations in case an attack in the GMPLS PCE context happens:\n      PCE
    Identity theft:  A legitimate PCC could request a path for a\n         GMPLS LSP
    to a malicious PCE, which poses as a legitimate PCE.\n         The response may
    be that the LSP traverses some geographical\n         place known to the attacker
    where confidentiality (sniffing),\n         integrity (traffic modification),
    or availability (traffic\n         drop) attacks could be performed by use of
    an attacker-\n         controlled middlebox device.  Also, the resulting LSP can
    omit\n         constraints given in the requests (e.g., excluding certain\n         fibers
    and avoiding some SRLGs), which could make the LSP that\n         will be set
    up later look perfectly fine, but it will be in a\n         risky situation.  Also,
    the result can lead to the creation of\n         an LSP that does not provide
    the desired quality and gives less\n         resources than necessary.\n      PCC
    Identity theft:  A malicious PCC, acting as a legitimate PCC,\n         requesting
    LSP paths to a legitimate PCE can obtain a good\n         knowledge of the physical
    topology of a critical\n         infrastructure.  It could learn enough details
    to plan a later\n         physical attack.\n      Message inspection:  As in the
    previous case, knowledge of an\n         infrastructure can be obtained by sniffing
    PCEP messages.\n   The security mechanisms can provide authentication and\n   confidentiality
    for those scenarios where PCC-PCE communication\n   cannot be completely trusted.
    \ [RFC8253] provides origin\n   verification, message integrity, and replay protection,
    and it\n   ensures that a third party cannot decipher the contents of a message.\n
    \  In order to protect against the malicious PCE case, the PCC SHOULD\n   have
    policies in place to accept or not accept the path provided by\n   the PCE.  Those
    policies can verify if the path follows the provided\n   constraints.  In addition,
    a technology-specific data-plane mechanism\n   can be used (following [RFC5920],
    Section 5.8) to verify the data-\n   plane connectivity and deviation from constraints.\n
    \  The usage of Transport Layer Security (TLS) to enhance PCEP security\n   is
    described in [RFC8253].  The document describes the initiation of\n   TLS procedures,
    the TLS handshake mechanisms, the TLS methods for\n   peer authentication, the
    applicable TLS ciphersuites for data\n   exchange, and the handling of errors
    in the security checks.  PCE and\n   PCC SHOULD use the mechanism in [RFC8253]
    to protect against\n   malicious PCC and PCE.\n   Finally, as mentioned by [RFC7025],
    the PCEP extensions that support\n   GMPLS should be considered under the same
    security as current PCE\n   work, and this extension will not change the underlying
    security\n   issues.  However, given the critical nature of the network\n   infrastructures
    under control by GMPLS, the security issues described\n   above should be seriously
    considered when deploying a GMPLS-PCE-based\n   control plane for such networks.
    \ For an overview of the security\n   considerations, not only related to PCE/PCEP,
    and vulnerabilities of\n   a GMPLS control plane, see [RFC5920].\n"
  title: 6.  Security Considerations
- contents:
  - '7.  References

    '
  - contents:
    - "7.1.  Normative References\n   [G.709-v3] ITU-T, \"Interfaces for the optical
      transport network\",\n              Recommendation G.709/Y.1331, June 2016,\n
      \             <https://www.itu.int/rec/T-REC-G.709-201606-I/en>.\n   [RFC2119]
      \ Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement
      Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n
      \             <https://www.rfc-editor.org/info/rfc2119>.\n   [RFC2210]  Wroclawski,
      J., \"The Use of RSVP with IETF Integrated\n              Services\", RFC 2210,
      DOI 10.17487/RFC2210, September 1997,\n              <https://www.rfc-editor.org/info/rfc2210>.\n
      \  [RFC3209]  Awduche, D., Berger, L., Gan, D., Li, T., Srinivasan, V.,\n              and
      G. Swallow, \"RSVP-TE: Extensions to RSVP for LSP\n              Tunnels\",
      RFC 3209, DOI 10.17487/RFC3209, December 2001,\n              <https://www.rfc-editor.org/info/rfc3209>.\n
      \  [RFC3471]  Berger, L., Ed., \"Generalized Multi-Protocol Label\n              Switching
      (GMPLS) Signaling Functional Description\",\n              RFC 3471, DOI 10.17487/RFC3471,
      January 2003,\n              <https://www.rfc-editor.org/info/rfc3471>.\n   [RFC3473]
      \ Berger, L., Ed., \"Generalized Multi-Protocol Label\n              Switching
      (GMPLS) Signaling Resource ReserVation Protocol-\n              Traffic Engineering
      (RSVP-TE) Extensions\", RFC 3473,\n              DOI 10.17487/RFC3473, January
      2003,\n              <https://www.rfc-editor.org/info/rfc3473>.\n   [RFC3477]
      \ Kompella, K. and Y. Rekhter, \"Signalling Unnumbered Links\n              in
      Resource ReSerVation Protocol - Traffic Engineering\n              (RSVP-TE)\",
      RFC 3477, DOI 10.17487/RFC3477, January 2003,\n              <https://www.rfc-editor.org/info/rfc3477>.\n
      \  [RFC3630]  Katz, D., Kompella, K., and D. Yeung, \"Traffic Engineering\n
      \             (TE) Extensions to OSPF Version 2\", RFC 3630,\n              DOI
      10.17487/RFC3630, September 2003,\n              <https://www.rfc-editor.org/info/rfc3630>.\n
      \  [RFC4003]  Berger, L., \"GMPLS Signaling Procedure for Egress\n              Control\",
      RFC 4003, DOI 10.17487/RFC4003, February 2005,\n              <https://www.rfc-editor.org/info/rfc4003>.\n
      \  [RFC4328]  Papadimitriou, D., Ed., \"Generalized Multi-Protocol Label\n              Switching
      (GMPLS) Signaling Extensions for G.709 Optical\n              Transport Networks
      Control\", RFC 4328,\n              DOI 10.17487/RFC4328, January 2006,\n              <https://www.rfc-editor.org/info/rfc4328>.\n
      \  [RFC4606]  Mannie, E. and D. Papadimitriou, \"Generalized Multi-\n              Protocol
      Label Switching (GMPLS) Extensions for\n              Synchronous Optical Network
      (SONET) and Synchronous\n              Digital Hierarchy (SDH) Control\", RFC
      4606,\n              DOI 10.17487/RFC4606, August 2006,\n              <https://www.rfc-editor.org/info/rfc4606>.\n
      \  [RFC4802]  Nadeau, T., Ed. and A. Farrel, Ed., \"Generalized\n              Multiprotocol
      Label Switching (GMPLS) Traffic Engineering\n              Management Information
      Base\", RFC 4802,\n              DOI 10.17487/RFC4802, February 2007,\n              <https://www.rfc-editor.org/info/rfc4802>.\n
      \  [RFC4872]  Lang, J.P., Ed., Rekhter, Y., Ed., and D. Papadimitriou,\n              Ed.,
      \"RSVP-TE Extensions in Support of End-to-End\n              Generalized Multi-Protocol
      Label Switching (GMPLS)\n              Recovery\", RFC 4872, DOI 10.17487/RFC4872,
      May 2007,\n              <https://www.rfc-editor.org/info/rfc4872>.\n   [RFC4873]
      \ Berger, L., Bryskin, I., Papadimitriou, D., and A. Farrel,\n              \"GMPLS
      Segment Recovery\", RFC 4873, DOI 10.17487/RFC4873,\n              May 2007,
      <https://www.rfc-editor.org/info/rfc4873>.\n   [RFC5088]  Le Roux, JL., Ed.,
      Vasseur, JP., Ed., Ikejiri, Y., and R.\n              Zhang, \"OSPF Protocol
      Extensions for Path Computation\n              Element (PCE) Discovery\", RFC
      5088, DOI 10.17487/RFC5088,\n              January 2008, <https://www.rfc-editor.org/info/rfc5088>.\n
      \  [RFC5089]  Le Roux, JL., Ed., Vasseur, JP., Ed., Ikejiri, Y., and R.\n              Zhang,
      \"IS-IS Protocol Extensions for Path Computation\n              Element (PCE)
      Discovery\", RFC 5089, DOI 10.17487/RFC5089,\n              January 2008, <https://www.rfc-editor.org/info/rfc5089>.\n
      \  [RFC5440]  Vasseur, JP., Ed. and JL. Le Roux, Ed., \"Path Computation\n              Element
      (PCE) Communication Protocol (PCEP)\", RFC 5440,\n              DOI 10.17487/RFC5440,
      March 2009,\n              <https://www.rfc-editor.org/info/rfc5440>.\n   [RFC5511]
      \ Farrel, A., \"Routing Backus-Naur Form (RBNF): A Syntax\n              Used
      to Form Encoding Rules in Various Routing Protocol\n              Specifications\",
      RFC 5511, DOI 10.17487/RFC5511, April\n              2009, <https://www.rfc-editor.org/info/rfc5511>.\n
      \  [RFC5520]  Bradford, R., Ed., Vasseur, JP., and A. Farrel,\n              \"Preserving
      Topology Confidentiality in Inter-Domain Path\n              Computation Using
      a Path-Key-Based Mechanism\", RFC 5520,\n              DOI 10.17487/RFC5520,
      April 2009,\n              <https://www.rfc-editor.org/info/rfc5520>.\n   [RFC5521]
      \ Oki, E., Takeda, T., and A. Farrel, \"Extensions to the\n              Path
      Computation Element Communication Protocol (PCEP) for\n              Route Exclusions\",
      RFC 5521, DOI 10.17487/RFC5521, April\n              2009, <https://www.rfc-editor.org/info/rfc5521>.\n
      \  [RFC5541]  Le Roux, JL., Vasseur, JP., and Y. Lee, \"Encoding of\n              Objective
      Functions in the Path Computation Element\n              Communication Protocol
      (PCEP)\", RFC 5541,\n              DOI 10.17487/RFC5541, June 2009,\n              <https://www.rfc-editor.org/info/rfc5541>.\n
      \  [RFC6001]  Papadimitriou, D., Vigoureux, M., Shiomoto, K., Brungard,\n              D.,
      and JL. Le Roux, \"Generalized MPLS (GMPLS) Protocol\n              Extensions
      for Multi-Layer and Multi-Region Networks (MLN/\n              MRN)\", RFC 6001,
      DOI 10.17487/RFC6001, October 2010,\n              <https://www.rfc-editor.org/info/rfc6001>.\n
      \  [RFC6003]  Papadimitriou, D., \"Ethernet Traffic Parameters\",\n              RFC
      6003, DOI 10.17487/RFC6003, October 2010,\n              <https://www.rfc-editor.org/info/rfc6003>.\n
      \  [RFC6205]  Otani, T., Ed. and D. Li, Ed., \"Generalized Labels for\n              Lambda-Switch-Capable
      (LSC) Label Switching Routers\",\n              RFC 6205, DOI 10.17487/RFC6205,
      March 2011,\n              <https://www.rfc-editor.org/info/rfc6205>.\n   [RFC6387]
      \ Takacs, A., Berger, L., Caviglia, D., Fedyk, D., and J.\n              Meuric,
      \"GMPLS Asymmetric Bandwidth Bidirectional Label\n              Switched Paths
      (LSPs)\", RFC 6387, DOI 10.17487/RFC6387,\n              September 2011, <https://www.rfc-editor.org/info/rfc6387>.\n
      \  [RFC7139]  Zhang, F., Ed., Zhang, G., Belotti, S., Ceccarelli, D.,\n              and
      K. Pithewan, \"GMPLS Signaling Extensions for Control\n              of Evolving
      G.709 Optical Transport Networks\", RFC 7139,\n              DOI 10.17487/RFC7139,
      March 2014,\n              <https://www.rfc-editor.org/info/rfc7139>.\n   [RFC7570]
      \ Margaria, C., Ed., Martinelli, G., Balls, S., and B.\n              Wright,
      \"Label Switched Path (LSP) Attribute in the\n              Explicit Route Object
      (ERO)\", RFC 7570,\n              DOI 10.17487/RFC7570, July 2015,\n              <https://www.rfc-editor.org/info/rfc7570>.\n
      \  [RFC7792]  Zhang, F., Zhang, X., Farrel, A., Gonzalez de Dios, O.,\n              and
      D. Ceccarelli, \"RSVP-TE Signaling Extensions in\n              Support of Flexi-Grid
      Dense Wavelength Division\n              Multiplexing (DWDM) Networks\", RFC
      7792,\n              DOI 10.17487/RFC7792, March 2016,\n              <https://www.rfc-editor.org/info/rfc7792>.\n
      \  [RFC8126]  Cotton, M., Leiba, B., and T. Narten, \"Guidelines for\n              Writing
      an IANA Considerations Section in RFCs\", BCP 26,\n              RFC 8126, DOI
      10.17487/RFC8126, June 2017,\n              <https://www.rfc-editor.org/info/rfc8126>.\n
      \  [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119
      Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,
      <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8253]  Lopez, D., Gonzalez
      de Dios, O., Wu, Q., and D. Dhody,\n              \"PCEPS: Usage of TLS to Provide
      a Secure Transport for the\n              Path Computation Element Communication
      Protocol (PCEP)\",\n              RFC 8253, DOI 10.17487/RFC8253, October 2017,\n
      \             <https://www.rfc-editor.org/info/rfc8253>.\n   [RFC8282]  Oki,
      E., Takeda, T., Farrel, A., and F. Zhang, \"Extensions\n              to the
      Path Computation Element Communication Protocol\n              (PCEP) for Inter-Layer
      MPLS and GMPLS Traffic\n              Engineering\", RFC 8282, DOI 10.17487/RFC8282,
      December\n              2017, <https://www.rfc-editor.org/info/rfc8282>.\n   [RFC8306]
      \ Zhao, Q., Dhody, D., Ed., Palleti, R., and D. King,\n              \"Extensions
      to the Path Computation Element Communication\n              Protocol (PCEP)
      for Point-to-Multipoint Traffic\n              Engineering Label Switched Paths\",
      RFC 8306,\n              DOI 10.17487/RFC8306, November 2017,\n              <https://www.rfc-editor.org/info/rfc8306>.\n"
    title: 7.1.  Normative References
  - contents:
    - "7.2.  Informative References\n   [RFC4655]  Farrel, A., Vasseur, J.-P., and
      J. Ash, \"A Path\n              Computation Element (PCE)-Based Architecture\",
      RFC 4655,\n              DOI 10.17487/RFC4655, August 2006,\n              <https://www.rfc-editor.org/info/rfc4655>.\n
      \  [RFC4657]  Ash, J., Ed. and J.L. Le Roux, Ed., \"Path Computation\n              Element
      (PCE) Communication Protocol Generic\n              Requirements\", RFC 4657,
      DOI 10.17487/RFC4657, September\n              2006, <https://www.rfc-editor.org/info/rfc4657>.\n
      \  [RFC5920]  Fang, L., Ed., \"Security Framework for MPLS and GMPLS\n              Networks\",
      RFC 5920, DOI 10.17487/RFC5920, July 2010,\n              <https://www.rfc-editor.org/info/rfc5920>.\n
      \  [RFC6123]  Farrel, A., \"Inclusion of Manageability Sections in Path\n              Computation
      Element (PCE) Working Group Drafts\", RFC 6123,\n              DOI 10.17487/RFC6123,
      February 2011,\n              <https://www.rfc-editor.org/info/rfc6123>.\n   [RFC6163]
      \ Lee, Y., Ed., Bernstein, G., Ed., and W. Imajuku,\n              \"Framework
      for GMPLS and Path Computation Element (PCE)\n              Control of Wavelength
      Switched Optical Networks (WSONs)\",\n              RFC 6163, DOI 10.17487/RFC6163,
      April 2011,\n              <https://www.rfc-editor.org/info/rfc6163>.\n   [RFC7025]
      \ Otani, T., Ogaki, K., Caviglia, D., Zhang, F., and C.\n              Margaria,
      \"Requirements for GMPLS Applications of PCE\",\n              RFC 7025, DOI
      10.17487/RFC7025, September 2013,\n              <https://www.rfc-editor.org/info/rfc7025>.\n
      \  [RFC7449]  Lee, Y., Ed., Bernstein, G., Ed., Martensson, J., Takeda,\n              T.,
      Tsuritani, T., and O. Gonzalez de Dios, \"Path\n              Computation Element
      Communication Protocol (PCEP)\n              Requirements for Wavelength Switched
      Optical Network\n              (WSON) Routing and Wavelength Assignment\", RFC
      7449,\n              DOI 10.17487/RFC7449, February 2015,\n              <https://www.rfc-editor.org/info/rfc7449>.\n"
    title: 7.2.  Informative References
  title: 7.  References
- contents:
  - "Appendix A.  LOAD-BALANCING Usage for SDH Virtual Concatenation\n   As an example,
    a request for one co-signaled n x VC-4 TE-LSP will not\n   use LOAD-BALANCING.
    \ In case the VC-4 components can use different\n   paths, the BANDWIDTH with
    object type 3 will contain the complete n x\n   VC-4 traffic specification, and
    the LOAD-BALANCING object will\n   contain the minimum co-signaled VC-4.  For
    an SDH network, a request\n   for a TE-LSP group with 10 VC-4 containers, with
    each path using at\n   minimum 2 x VC-4 containers, can be represented with a
    BANDWIDTH\n   object with object type 3, the Bw Spec Type set to 4, and the content\n
    \  of the Generalized Bandwidth field with ST=6, RCC=0, NCC=0, NVC=10,\n   and
    MT=1.  The LOAD-BALANCING with object type 2 with the Bw Spec\n   Type set to
    4 and Max-LSP=5, Min Bandwidth Spec is ST=6, RCC=0,\n   NCC=0, NVC=2, MT=1.  The
    PCE can respond with a maximum of 5 paths,\n   with each path having a BANDWIDTH
    object type 3 and a Generalized\n   Bandwidth field matching the Min Bandwidth
    Spec from the LOAD-\n   BALANCING object of the corresponding request.\n"
  title: Appendix A.  LOAD-BALANCING Usage for SDH Virtual Concatenation
- contents:
  - "Acknowledgments\n   The research of Ramon Casellas, Francisco Javier Jimenez
    Chico, Oscar\n   Gonzalez de Dios, Cyril Margaria, and Franz Rambach that led
    to the\n   results in this document received funding from the European\n   Community's
    Seventh Framework Program FP7/2007-2013 under grant\n   agreement no. 247674 and
    no. 317999.\n   The authors would like to thank Julien Meuric, Lyndon Ong, Giada\n
    \  Lander, Jonathan Hardwick, Diego Lopez, David Sinicrope, Vincent\n   Roca,
    Dhruv Dhody, Adrian Farrel, and Tianran Zhou for their review\n   and useful comments.\n
    \  Thanks to Alisa Cooper, Benjamin Kaduk, Elwyn Davies, Martin\n   Vigoureux,
    Roman Danyliw, and Suresh Krishnan for the IESG-related\n   comments.\n"
  title: Acknowledgments
- contents:
  - "Contributors\n   Elie Sfeir\n   Coriant\n   St. Martin Strasse 76\n   81541 Munich\n
    \  Germany\n   Email: elie.sfeir@coriant.com\n   Franz Rambach\n   Nockherstrasse
    2-4\n   81541 Munich\n   Germany\n   Phone: +49 178 8855738\n   Email: franz.rambach@cgi.com\n
    \  Francisco Javier Jimenez Chico\n   Telefonica Investigacion y Desarrollo\n
    \  C/ Emilio Vargas 6\n   28043 Madrid\n   Spain\n   Phone: +34 91 3379037\n   Email:
    fjjc@tid.es\n   Suresh Babu\n   Email: sureshhimnish@gmail.com\n   Young Lee\n
    \  Samsung Electronics\n   Email: younglee.tx@gmail.com\n   Senthil Kumar S\n
    \  Email: ssenthilkumar@gmail.com\n   Jun Sun\n   Huawei Technologies\n   Shenzhen\n
    \  China\n   Email: johnsun@huawei.com\n   Ramon Casellas\n   CTTC - Centre Tecnologic
    de Telecomunicacions de Catalunya\n   PMT Ed B4 Av. Carl Friedrich Gauss 7\n   08660
    Castelldefels, Barcelona\n   Spain\n   Phone: +34 93 6452916\n   Email: ramon.casellas@cttc.e\n"
  title: Contributors
- contents:
  - "Authors' Addresses\n   Cyril Margaria (editor)\n   Juniper\n   Email: cmargaria@juniper.net\n
    \  Oscar Gonzalez de Dios (editor)\n   Telefonica Investigacion y Desarrollo\n
    \  C/ Ronda de la Comunicacion\n   28050 Madrid\n   Spain\n   Phone: +34 91 4833441\n
    \  Email: oscar.gonzalezdedios@telefonica.com\n   Fatai Zhang (editor)\n   Huawei
    Technologies\n   F3-5-B R&D Center, Huawei Base\n   Bantian, Longgang District\n
    \  Shenzhen\n   518129\n"
  title: Authors' Addresses
