- title: __initial_text__
  contents:
  - '      A YANG Data Model for the Routing Information Protocol (RIP)

    '
- title: Abstract
  contents:
  - "Abstract\n   This document describes a data model for the management of the\n\
    \   Routing Information Protocol (RIP).  Both RIP version 2 and RIPng are\n  \
    \ covered.  The data model includes definitions for configuration,\n   operational\
    \ state, and Remote Procedure Calls (RPCs).\n   The YANG data model in this document\
    \ conforms to the Network\n   Management Datastore Architecture (NMDA).\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8695.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2020 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction\n     1.1.  Terminology\n     1.2.  Tree\
    \ Diagrams\n     1.3.  Prefixes in Data Node Names\n   2.  Design of the Data\
    \ Model\n     2.1.  Scope of the Data Model\n     2.2.  Relation to the Core Routing\
    \ Framework\n     2.3.  Protocol Configuration\n     2.4.  Protocol States\n \
    \    2.5.  RPC Operations\n     2.6.  Notifications\n     2.7.  Optional Features\n\
    \   3.  Tree Structure\n   4.  YANG Module\n   5.  IANA Considerations\n   6.\
    \  Security Considerations\n   7.  References\n     7.1.  Normative References\n\
    \     7.2.  Informative References\n   Appendix A.  Data Tree Example\n   Authors'\
    \ Addresses\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document introduces a YANG [RFC7950] data model for\
    \ the Routing\n   Information Protocol (RIP) [RFC2453][RFC2080].  RIP was designed\
    \ to\n   work as an Interior Gateway Protocol (IGP) in moderate-size\n   Autonomous\
    \ Systems (AS).\n   This YANG data model supports both RIP version 2 and RIPng.\
    \  RIP\n   version 2 (defined in [RFC2453]) supports IPv4.  RIPng (defined in\n\
    \   [RFC2080]) supports IPv6.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT\
    \ RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n   The following terms are defined in [RFC7950]\
    \ and are not redefined\n   here:\n   *  augment\n   *  data model\n   *  data\
    \ node\n"
- title: 1.2.  Tree Diagrams
  contents:
  - "1.2.  Tree Diagrams\n   A simplified graphical representation of the data model\
    \ is used in\n   this document.  The meaning of the symbols in these diagrams\
    \ is\n   defined in [RFC8340].\n"
- title: 1.3.  Prefixes in Data Node Names
  contents:
  - "1.3.  Prefixes in Data Node Names\n   In this document, names of data nodes,\
    \ actions, and other data model\n   objects are often used without a prefix, as\
    \ long as it is clear from\n   the context in which YANG module each name is defined.\
    \  Otherwise,\n   names are prefixed using the standard prefix associated with\
    \ the\n   corresponding YANG module, as shown in Table 1.\n               | Prefix\
    \    | YANG module     | Reference   |\n               | yang      | ietf-yang-types\
    \ | [RFC6991]   |\n               | inet      | ietf-inet-types | [RFC6991]  \
    \ |\n               | if        | ietf-interfaces | [RFC8343]   |\n          \
    \     | ip        | ietf-ip         | [RFC8344]   |\n               | rt     \
    \   | ietf-routing    | [RFC8349]   |\n               | bfd-types | ietf-bfd-types\
    \  | [YANG-BFD]  |\n               | isis      | ietf-isis       | [YANG-ISIS]\
    \ |\n               | key-chain | ietf-key-chain  | [RFC8177]   |\n          \
    \     | ospf      | ietf-ospf       | [YANG-OSPF] |\n                  Table 1:\
    \ Prefixes and Corresponding YANG\n"
- title: 2.  Design of the Data Model
  contents:
  - '2.  Design of the Data Model

    '
- title: 2.1.  Scope of the Data Model
  contents:
  - "2.1.  Scope of the Data Model\n   The data model covers RIP version 2 [RFC2453]\
    \ and RIPng [RFC2080]\n   protocols.  The model is designed to be implemented\
    \ on a device where\n   RIP version 2 or RIPng is implemented, and can be used\
    \ to:\n   *  Configure the RIP version 2 or RIPng protocol.\n   *  Manage the\
    \ protocol operational behaviors.\n   *  Retrieve the protocol operational status.\n\
    \   The capabilities described in [RFC1724] are covered.\n"
- title: 2.2.  Relation to the Core Routing Framework
  contents:
  - "2.2.  Relation to the Core Routing Framework\n   This data model augments the\
    \ core routing data model \"ietf-routing\"\n   specified in [RFC8349].\n     +--rw\
    \ routing\n        +--rw router-id?\n        +--rw control-plane-protocols\n \
    \       |  +--rw control-plane-protocol* [type name]\n        |     +--rw type\n\
    \        |     +--rw name\n        |     +--rw rip     <= Augmented by this Model\n\
    \                    ...\n   The \"rip\" container instantiates a RIP entity that\
    \ supports RIP\n   version 2 or RIPng.  Depending on the implementation of \"\
    ietf-\n   routing\", a RIP instance MAY belong to a logical router or network\n\
    \   instance.\n"
- title: 2.3.  Protocol Configuration
  contents:
  - "2.3.  Protocol Configuration\n   The data model structure for the protocol configuration\
    \ is as shown\n   below:\n     augment /rt:routing/rt:control-plane-protocols/\n\
    \     rt:control-plane-protocol:\n       +--rw rip\n          +--rw <per instance\
    \ configuration>\n          +--rw interface* [interface]\n             +--rw interface\
    \                  if:interface-ref\n             +--rw <per interface configuration>\n\
    \             +--rw neighbors {explicit-neighbors}?\n             |  +--rw neighbor*\
    \ [address]\n             |     +--rw address    inet:ip-address\n           \
    \  |     +--rw <per neighbor configuration>\n   The data model allows the configuration\
    \ of the following protocol\n   entities:\n   *  Protocol instance (RIP version\
    \ 2 or RIPng)\n   *  Interface\n   *  Neighbor\n"
- title: 2.4.  Protocol States
  contents:
  - "2.4.  Protocol States\n   The data model structure for the protocol states is\
    \ as shown below:\n     augment /rt:routing/rt:control-plane-protocols/\n    \
    \ rt:control-plane-protocol:\n       +--rw rip\n          +--ro <per instance\
    \ operational states>\n          +--rw interface* [interface]\n          |  +--rw\
    \ interface                  if:interface-ref\n          |  +--ro <per instance\
    \ operational states>\n          |  +--ro statistics {interface-statistics}?\n\
    \          |     +--ro <per instance statistics>\n          +--ro ipv4\n     \
    \     |  +--ro neighbors\n          |  |  +--ro neighbor* [ipv4-address]\n   \
    \       |  |     +--ro <per neighbor IPv4 operational states>\n          |  +--ro\
    \ routes\n          |     +--ro route* [ipv4-prefix]\n          |        +--ro\
    \ <IPv4 RIP route states>\n          +--ro ipv6\n          |  +--ro neighbors\n\
    \          |  |  +--ro neighbor* [ipv6-address]\n          |  |     +--ro <per\
    \ neighbor IPv6 operational states>\n          |  +--ro routes\n          |  \
    \   +--ro route* [ipv6-prefix]\n          |        +--ro ipv6-prefix         \
    \           inet:ipv6-prefix\n          |        +--ro <IPv4 RIP route states>\n\
    \          +--ro statistics {global-statistics}?\n             +--ro <per instance\
    \ statistics>\n   This model conforms to the Network Management Datastore Architecture\n\
    \   (NMDA) [RFC8342].  The operational state data is combined with the\n   associated\
    \ configuration data in the same hierarchy [RFC8407].  When\n   protocol states\
    \ are retrieved from the NMDA operational state\n   datastore, the returned states\
    \ cover all \"config true\" (rw) and\n   \"config false\" (ro) nodes defined in\
    \ the schema.\n   The model allows the retrieval of protocol states at the following\n\
    \   levels:\n   *  Protocol instance (RIP version 2 or RIPng)\n   *  Interface\n\
    \   *  Neighbor\n   *  Route\n"
- title: 2.5.  RPC Operations
  contents:
  - "2.5.  RPC Operations\n   This model defines one RPC \"clear-rip-route\" that\
    \ can be used to\n   clear RIP routes from the routing table.\n"
- title: 2.6.  Notifications
  contents:
  - "2.6.  Notifications\n   This model does not define RIP-specific notifications.\
    \  To enable\n   notifications, the mechanisms defined in [RFC8639] and [RFC8641]\
    \ can\n   be used.  This mechanism currently allows the user to do the\n   following:\n\
    \   *  Subscribe to notifications on a per-client basis.\n   *  Specify subtree\
    \ filters or XML Path Language (XPath) filters so\n      that only interested\
    \ contents will be sent.\n   *  Specify either periodic or on-demand notifications.\n"
- title: 2.7.  Optional Features
  contents:
  - "2.7.  Optional Features\n   This model defines several features that are beyond\
    \ the basic RIP\n   configuration, and it is the responsibility of each vendor\
    \ to decide\n   whether to support a given feature on a device.\n"
- title: 3.  Tree Structure
  contents:
  - "3.  Tree Structure\n   This document defines the YANG module \"ietf-rip\", which\
    \ has the\n   following tree structure:\n   module: ietf-rip\n     augment /rt:routing/rt:control-plane-protocols\n\
    \   /rt:control-plane-protocol:\n       +--rw rip\n          +--rw originate-default-route\n\
    \          |  +--rw enabled?        boolean\n          |  +--rw route-policy?\
    \   route-policy-ref\n          +--rw default-metric?               uint8\n  \
    \        +--rw distance?                     uint8\n          +--rw triggered-update-threshold?\
    \   uint8\n          +--rw maximum-paths?                uint8\n          +--rw\
    \ output-delay?                 uint8\n          +--rw distribute-list* [prefix-set-name\
    \ direction]\n          |  +--rw prefix-set-name    prefix-set-ref\n         \
    \ |  +--rw direction          enumeration\n          |  +--rw if-name?       \
    \    if:interface-ref\n          +--rw redistribute\n          |  +--rw bgp* [asn]\n\
    \          |  |  +--rw asn             inet:as-number\n          |  |  +--rw metric?\
    \         uint8\n          |  |  +--rw route-policy?   route-policy-ref\n    \
    \      |  +--rw cg-nat!\n          |  |  +--rw metric?         uint8\n       \
    \   |  |  +--rw route-policy?   route-policy-ref\n          |  +--rw connected!\n\
    \          |  |  +--rw metric?         uint8\n          |  |  +--rw route-policy?\
    \   route-policy-ref\n          |  +--rw ipsec!\n          |  |  +--rw metric?\
    \         uint8\n          |  |  +--rw route-policy?   route-policy-ref\n    \
    \      |  +--rw isis* [instance]\n          |  |  +--rw instance\n          |\
    \  |  +--rw level?          enumeration\n          |  |  +--rw metric?       \
    \  uint8\n          |  |  +--rw route-policy?   route-policy-ref\n          |\
    \  +--rw nat!\n          |  |  +--rw metric?         uint8\n          |  |  +--rw\
    \ route-policy?   route-policy-ref\n          |  +--rw ospfv2* [instance]\n  \
    \        |  |  +--rw instance\n          |  |  +--rw route-type?     ospf:route-type\n\
    \          |  |  +--rw metric?         uint8\n          |  |  +--rw route-policy?\
    \   route-policy-ref\n          |  +--rw ospfv3* [instance]\n          |  |  +--rw\
    \ instance\n          |  |  +--rw route-type?     ospf:route-type\n          |\
    \  |  +--rw metric?         uint8\n          |  |  +--rw route-policy?   route-policy-ref\n\
    \          |  +--rw ripv2* [instance]\n          |  |  +--rw instance\n      \
    \    |  |  +--rw metric?         uint8\n          |  |  +--rw route-policy?  \
    \ route-policy-ref\n          |  +--rw ripng* [instance]\n          |  |  +--rw\
    \ instance\n          |  |  +--rw metric?         uint8\n          |  |  +--rw\
    \ route-policy?   route-policy-ref\n          |  +--rw static!\n          |  \
    \   +--rw metric?         uint8\n          |     +--rw route-policy?   route-policy-ref\n\
    \          +--rw timers\n          |  +--rw update-interval?     uint16\n    \
    \      |  +--rw invalid-interval?    uint16\n          |  +--rw holddown-interval?\
    \   uint16\n          |  +--rw flush-interval?      uint16\n          +--rw interfaces\n\
    \          |  +--rw interface* [interface]\n          |     +--rw interface  \
    \                if:interface-ref\n          |     +--rw authentication\n    \
    \      |     |  +--rw (auth-type-selection)?\n          |     |     +--:(auth-key-chain)\n\
    \          |     |     |  +--rw key-chain?\n    key-chain:key-chain-ref\n    \
    \      |     |     +--:(auth-key)\n          |     |        +--rw key?       \
    \         string\n          |     |        +--rw crypto-algorithm?   identityref\n\
    \          |     +--rw bfd {bfd}?\n          |     |  +--rw enable?          \
    \           boolean\n          |     |  +--rw local-multiplier?           multiplier\n\
    \          |     |  +--rw (interval-config-type)?\n          |     |     +--:(tx-rx-intervals)\n\
    \          |     |     |  +--rw desired-min-tx-interval?    uint32\n         \
    \ |     |     |  +--rw required-min-rx-interval?   uint32\n          |     | \
    \    +--:(single-interval)\n          |     |        +--rw min-interval?     \
    \          uint32\n          |     +--rw cost?                      uint8\n  \
    \        |     +--rw neighbors {explicit-neighbors}?\n          |     |  +--rw\
    \ neighbor* [address]\n          |     |     +--rw address    inet:ip-address\n\
    \          |     +--rw no-listen?                 empty\n          |     +--rw\
    \ originate-default-route\n          |     |  +--rw enabled?        boolean\n\
    \          |     |  +--rw route-policy?   route-policy-ref\n          |     +--rw\
    \ passive?                   empty\n          |     +--rw split-horizon?     \
    \        enumeration\n          |     +--rw summary-address\n          |     |\
    \  +--rw address?   inet:ip-prefix\n          |     |  +--rw metric?    uint8\n\
    \          |     +--rw timers\n          |     |  +--rw update-interval?     uint16\n\
    \          |     |  +--rw invalid-interval?    uint16\n          |     |  +--rw\
    \ holddown-interval?   uint16\n          |     |  +--rw flush-interval?      uint16\n\
    \          |     +--ro oper-status?               enumeration\n          |   \
    \  +--ro next-full-update?          uint32\n          |     +--ro valid-address?\
    \             boolean\n          |     +--ro statistics {interface-statistics}?\n\
    \          |        +--ro discontinuity-time?   yang:date-and-time\n         \
    \ |        +--ro bad-packets-rcvd?     yang:counter32\n          |        +--ro\
    \ bad-routes-rcvd?      yang:counter32\n          |        +--ro updates-sent?\
    \         yang:counter32\n          +--ro next-triggered-update?        uint32\n\
    \          +--ro num-of-routes?                uint32\n          +--ro ipv4\n\
    \          |  +--ro neighbors\n          |  |  +--ro neighbor* [ipv4-address]\n\
    \          |  |     +--ro ipv4-address        inet:ipv4-address\n          | \
    \ |     +--ro last-update?        yang:date-and-time\n          |  |     +--ro\
    \ bad-packets-rcvd?   yang:counter32\n          |  |     +--ro bad-routes-rcvd?\
    \    yang:counter32\n          |  +--ro routes\n          |     +--ro route* [ipv4-prefix]\n\
    \          |        +--ro ipv4-prefix\n    inet:ipv4-prefix\n          |     \
    \   +--ro next-hop?\n    inet:ipv4-address\n          |        +--ro interface?\n\
    \    if:interface-ref\n          |        +--ro redistributed?               \
    \   boolean\n          |        +--ro route-type?                     enumeration\n\
    \          |        +--ro metric?                         uint8\n          | \
    \       +--ro expire-time?                    uint16\n          |        +--ro\
    \ deleted?                        boolean\n          |        +--ro holddown?\
    \                       boolean\n          |        +--ro need-triggered-update?\
    \          boolean\n          |        +--ro inactive?                       boolean\n\
    \          |        +--ro flush-expire-before-holddown?   boolean\n          +--ro\
    \ ipv6\n          |  +--ro neighbors\n          |  |  +--ro neighbor* [ipv6-address]\n\
    \          |  |     +--ro ipv6-address        inet:ipv6-address\n          | \
    \ |     +--ro last-update?        yang:date-and-time\n          |  |     +--ro\
    \ bad-packets-rcvd?   yang:counter32\n          |  |     +--ro bad-routes-rcvd?\
    \    yang:counter32\n          |  +--ro routes\n          |     +--ro route* [ipv6-prefix]\n\
    \          |        +--ro ipv6-prefix\n    inet:ipv6-prefix\n          |     \
    \   +--ro next-hop?\n    inet:ipv6-address\n          |        +--ro interface?\n\
    \    if:interface-ref\n          |        +--ro redistributed?               \
    \   boolean\n          |        +--ro route-type?                     enumeration\n\
    \          |        +--ro metric?                         uint8\n          | \
    \       +--ro expire-time?                    uint16\n          |        +--ro\
    \ deleted?                        boolean\n          |        +--ro holddown?\
    \                       boolean\n          |        +--ro need-triggered-update?\
    \          boolean\n          |        +--ro inactive?                       boolean\n\
    \          |        +--ro flush-expire-before-holddown?   boolean\n          +--ro\
    \ statistics {global-statistics}?\n             +--ro discontinuity-time?   yang:date-and-time\n\
    \             +--ro requests-rcvd?        yang:counter32\n             +--ro requests-sent?\
    \        yang:counter32\n             +--ro responses-rcvd?       yang:counter32\n\
    \             +--ro responses-sent?       yang:counter32\n     rpcs:\n       +---x\
    \ clear-rip-route\n          +---w input\n             +---w rip-instance?   leafref\n"
- title: 4.  YANG Module
  contents:
  - "4.  YANG Module\n   <CODE BEGINS> file \"ietf-rip@2020-02-20.yang\"\n   module\
    \ ietf-rip {\n     yang-version 1.1;\n     namespace \"urn:ietf:params:xml:ns:yang:ietf-rip\"\
    ;\n     prefix rip;\n     import ietf-inet-types {\n       prefix inet;\n    \
    \ }\n     import ietf-yang-types {\n       prefix yang;\n     }\n     import ietf-interfaces\
    \ {\n       prefix if;\n     }\n     import ietf-ip {\n       prefix ip;\n   \
    \  }\n     import ietf-routing {\n       prefix rt;\n     }\n     import ietf-key-chain\
    \ {\n       prefix key-chain;\n     }\n     import ietf-bfd-types {\n       prefix\
    \ bfd-types;\n     }\n     import ietf-ospf {\n       prefix ospf;\n     }\n \
    \    import ietf-isis {\n       prefix isis;\n     }\n     organization\n    \
    \   \"IETF Routing Area Working Group (rtgwg)\";\n     contact\n       \"WG Web:\
    \   <https://datatracker.ietf.org/wg/rtgwg/>\n        WG List:  <mailto:rgtwg@ietf.org>\n\
    \        Editor:   Xufeng Liu\n                  <mailto:xufeng.liu.ietf@gmail.com>\n\
    \        Editor:   Prateek Sarda\n                  <mailto:prateek.sarda@ericsson.com>\n\
    \        Editor:   Vikram Choudhary\n                  <mailto:vikschw@gmail.com>\"\
    ;\n     description\n       \"This YANG module defines a model for managing Routing\n\
    \        Information Protocol (RIP), including RIP version 2 and RIPng.\n    \
    \    Copyright (c) 2020 IETF Trust and the persons identified as\n        authors\
    \ of the code.  All rights reserved.\n        Redistribution and use in source\
    \ and binary forms, with or\n        without modification, is permitted pursuant\
    \ to, and subject to\n        the license terms contained in, the Simplified BSD\
    \ License set\n        forth in Section 4.c of the IETF Trust's Legal Provisions\n\
    \        Relating to IETF Documents\n        (http://trustee.ietf.org/license-info).\n\
    \        This version of this YANG module is part of RFC 8695; see the\n     \
    \   RFC itself for full legal notices.\";\n     revision 2020-02-20 {\n      \
    \ description\n         \"Initial revision.\";\n       reference\n         \"\
    RFC 8695: A YANG Data Model for Routing Information Protocol\n          (RIP).\n\
    \          RFC 2453: RIP Version 2.\n          RFC 2080: RIPng for IPv6.\n   \
    \       RFC 1724: RIP Version 2 MIB Extension.\";\n     }\n     /*\n      * Features\n\
    \      */\n     feature bfd {\n       description\n         \"This feature indicates\
    \ that the RIP implementation on the\n          system supports BFD (Bidirectional\
    \ Forwarding Detection).\";\n     }\n     feature explicit-neighbors {\n     \
    \  description\n         \"This feature indicates that the system supports explicit\n\
    \          neighbor configuration on a RIP interface.\";\n     }\n     feature\
    \ global-statistics {\n       description\n         \"This feature indicates that\
    \ the system supports collecting\n          global statistics data related to\
    \ RIP.\";\n     }\n     feature interface-statistics {\n       description\n \
    \        \"This feature indicates that the system supports collecting\n      \
    \    per-interface statistics data related to RIP.\";\n     }\n     /*\n     \
    \ * Typedefs\n      */\n     typedef prefix-set-ref {\n       type string;\n \
    \      description\n         \"A type for a reference to a prefix set.\n     \
    \     The string value is the name identifier for uniquely\n          identifying\
    \ the referenced prefix set, which contains a list\n          of prefixes that\
    \ a routing policy can applied.  The definition\n          of such a prefix set\
    \ is outside the scope of this document.\";\n     }\n     typedef route-policy-ref\
    \ {\n       type string;\n       description\n         \"A type for a reference\
    \ to a route policy.\n          The string value is the name identifier for uniquely\n\
    \          identifying the referenced routing policy, which contains one\n   \
    \       or more policy rules that can be used for a routing decision.\n      \
    \    The definition of such a routing policy is outside the scope\n          of\
    \ this document.\";\n     }\n     /*\n      * Identities\n      */\n     identity\
    \ rip {\n       base rt:routing-protocol;\n       description\n         \"Identity\
    \ for the Routing Information Protocol.\";\n     }\n     identity ripv2 {\n  \
    \     base rip:rip;\n       description\n         \"Identity for RIPv2 (RIP version\
    \ 2).\";\n     }\n     identity ripng {\n       base rip:rip;\n       description\n\
    \         \"Identity for RIPng.\";\n     }\n     /*\n      * Groupings\n     \
    \ */\n     grouping originate-default-route-container {\n       description\n\
    \         \"Container for settings on whether to originate the default\n     \
    \     route in RIP routing instance.\";\n       container originate-default-route\
    \ {\n         description\n           \"Injects the default route into the RIP\
    \ (RIPv2 or RIPng)\n            routing instance.\";\n         leaf enabled {\n\
    \           type boolean;\n           default \"false\";\n           description\n\
    \             \"'true' if originating default route is enabled.\";\n         }\n\
    \         leaf route-policy {\n           type route-policy-ref;\n           description\n\
    \             \"The conditions of the route policy are applied to the\n      \
    \        default route.\";\n         }\n       }\n     }\n     grouping redistribute-container\
    \ {\n       description\n         \"Container of redistribute attributes.\";\n\
    \       container redistribute {\n         description\n           \"Redistributes\
    \ routes learned from other routing protocols\n            into the RIP routing\
    \ instance.\";\n         list bgp {\n           key \"asn\";\n           description\n\
    \             \"Redistributes routes from the specified BGP (Border\n        \
    \      Gateway Protocol) autonomous system (AS) into the RIP\n              routing\
    \ instance.\";\n           leaf asn {\n             type inet:as-number;\n   \
    \          description\n               \"BGP autonomous system (AS) number.\"\
    ;\n           }\n           uses redistribute-route-policy-attributes;\n     \
    \    }\n         container cg-nat {\n           presence \"Present if Carrier-Grade\
    \ Network Address\n                     Translation (CGNAT) routes are redistributed.\"\
    ;\n           description\n             \"Carrier-Grade Network Address Translation\
    \ (CGNAT)\n              routes.\";\n           uses redistribute-route-policy-attributes;\n\
    \         }\n         container connected {\n           presence \"Present if\
    \ directly attached network routes are\n                     redistributed.\"\
    ;\n           description\n             \"Redistributes directly attached networks\
    \ into the RIP\n              routing instance.\";\n           uses redistribute-route-policy-attributes;\n\
    \         }\n         container ipsec {\n           presence \"Present if IP security\
    \ routing instance routes\n                     are redistributed.\";\n      \
    \     description\n             \"Redistributes routes from the IP security routing\n\
    \              instance into the RIP routing instance.\";\n           uses redistribute-route-policy-attributes;\n\
    \         }\n         list isis {\n           key \"instance\";\n           description\n\
    \             \"Redistributes IS-IS routes.\";\n           leaf instance {\n \
    \            type leafref {\n               path \"../../../../../rt:control-plane-protocol/rt:name\"\
    ;\n             }\n             must \"derived-from-or-self(\"\n             \
    \   + \"[rt:name = current()]/rt:type, 'isis:isis')\" {\n               description\n\
    \                 \"The type of the routing protocol must be 'isis'.\";\n    \
    \         }\n             description\n               \"Redistributes routes from\
    \ the specified IS-IS routing\n                instance into the RIP routing instance.\"\
    ;\n           }\n           leaf level {\n             type enumeration {\n  \
    \             enum 1 {\n                 description\n                   \"IS-IS\
    \ level 1 routes.\";\n               }\n               enum 2 {\n            \
    \     description\n                   \"IS-IS level 2 routes.\";\n           \
    \    }\n               enum 1-2 {\n                 description\n            \
    \       \"IS-IS level 1-2 routes.\";\n               }\n             }\n     \
    \        description\n               \"IS-IS level.\";\n           }\n       \
    \    uses redistribute-route-policy-attributes;\n         }\n         container\
    \ nat {\n           presence \"Present if Network Address Translation (NAT) routes\n\
    \                     are redistributed.\";\n           description\n        \
    \     \"Redistributes Network Address Translation (NAT)\n              routes\
    \ into the RIP routing instance.\";\n           uses redistribute-route-policy-attributes;\n\
    \         }\n         list ospfv2 {\n           when \"derived-from-or-self(../../../rt:type,\
    \ 'rip:ripv2')\" {\n             description\n               \"Applicable to RIPv2.\"\
    ;\n           }\n           key \"instance\";\n           description\n      \
    \       \"Redistributes routes from the specified OSPFv2 routing\n           \
    \   instance into the RIPv2 routing instance.\";\n           leaf instance {\n\
    \             type leafref {\n               path \"../../../../../rt:control-plane-protocol/rt:name\"\
    ;\n             }\n             must \"derived-from-or-self(\"\n             \
    \   + \"[rt:name = current()]/rt:type, 'ospf:ospfv2')\" {\n               description\n\
    \                 \"The type of the routing protocol must be 'ospfv2'.\";\n  \
    \           }\n             description\n               \"OSPFv2 instance ID.\
    \ Redistributes routes from the\n                specified OSPFv2 routing instance\
    \ into the RIPv2 routing\n                instance.\";\n           }\n       \
    \    leaf route-type {\n             type ospf:route-type;\n             description\n\
    \               \"Redistributes only those OSPFv2 routes matching the\n      \
    \          specified route type into the RIPv2 routing instance.\";\n        \
    \   }\n           uses redistribute-route-policy-attributes;\n         }\n   \
    \      list ospfv3 {\n           when \"derived-from-or-self(../../../rt:type,\
    \ 'rip:ripng')\" {\n             description\n               \"Applicable to RIPng.\"\
    ;\n           }\n           key \"instance\";\n           description\n      \
    \       \"Redistributes routes from the specified OSPFv3 routing\n           \
    \   instance into the RIPng routing instance.\";\n           leaf instance {\n\
    \             type leafref {\n               path \"../../../../../rt:control-plane-protocol/rt:name\"\
    ;\n             }\n             must \"derived-from-or-self(\"\n             \
    \   + \"[rt:name = current()]/rt:type, 'ospf:ospfv3')\" {\n               description\n\
    \                 \"The type of the routing protocol must be 'ospfv3'.\";\n  \
    \           }\n             description\n               \"OSPFv3 instance ID.\
    \ Redistributes routes from the\n                specified OSPFv3 routing instance\
    \ into the RIPng routing\n                instance.\";\n           }\n       \
    \    leaf route-type {\n             type ospf:route-type;\n             description\n\
    \               \"Redistributes only those OSPFv3 routes matching the\n      \
    \          specified route type into the RIPng routing instance.\";\n        \
    \   }\n           uses redistribute-route-policy-attributes;\n         }\n   \
    \      list ripv2 {\n           when \"derived-from-or-self(../../../rt:type,\
    \ 'rip:ripv2')\" {\n             description\n               \"Applicable to RIPv2.\"\
    ;\n           }\n           key \"instance\";\n           description\n      \
    \       \"Redistributes routes from another RIPv2 routing instance\n         \
    \     into the current RIPv2 routing instance.\";\n           leaf instance {\n\
    \             type leafref {\n               path \"../../../../../rt:control-plane-protocol/rt:name\"\
    ;\n             }\n             must \"derived-from-or-self(\"\n             \
    \   + \"[rt:name = current()]/rt:type, 'rip:ripv2')\" {\n               description\n\
    \                 \"The type of the routing protocol must be 'ripv2'.\";\n   \
    \          }\n             description\n               \"Redistributes routes\
    \ from the specified RIPv2 routing\n                instance into the RIPv2 routing\
    \ instance.\";\n           }\n           uses redistribute-route-policy-attributes;\n\
    \         }\n         list ripng {\n           when \"derived-from-or-self(../../../rt:type,\
    \ 'rip:ripng')\" {\n             description\n               \"Applicable to RIPng.\"\
    ;\n           }\n           key \"instance\";\n           description\n      \
    \       \"Redistributes routes from another RIPng routing instance\n         \
    \     into the current RIPng routing instance.\";\n           leaf instance {\n\
    \             type leafref {\n               path \"../../../../../rt:control-plane-protocol/rt:name\"\
    ;\n             }\n             must \"derived-from-or-self(\"\n             \
    \   + \"[rt:name = current()]/rt:type, 'rip:ripng')\" {\n               description\n\
    \                 \"The type of the routing protocol must be 'ripng'.\";\n   \
    \          }\n             description\n               \"Redistributes routes\
    \ from the specified RIPng routing\n                instance into the RIPng routing\
    \ instance.\";\n           }\n           uses redistribute-route-policy-attributes;\n\
    \         }\n         container static {\n           presence \"Present if redistributing\
    \ static routes.\";\n           description\n             \"Redistributes static\
    \ routes into the RIP routing\n              instance.\";\n           uses redistribute-route-policy-attributes;\n\
    \         }\n       }\n       // redistribute\n     }\n     // redistribute-container\n\
    \     grouping redistribute-route-policy-attributes {\n       description\n  \
    \       \"Attributes for redistributing a route policy.\";\n       leaf metric\
    \ {\n         type uint8 {\n           range \"0..16\";\n         }\n        \
    \ description\n           \"Metric used for the redistributed route. If a metric\
    \ is\n            not specified, the metric configured with the\n            default-metric\
    \ attribute in RIP router configuration is\n            used.  If the default-metric\
    \ attribute has not been\n            configured, the default metric for redistributed\
    \ routes\n            is 1.\";\n       }\n       leaf route-policy {\n       \
    \  type route-policy-ref;\n         description\n           \"Applies the conditions\
    \ of the specified route policy to\n            routes that are redistributed\
    \ into the RIP routing\n            instance.\";\n       }\n     }\n     // redistribute-route-policy-attributes\n\
    \     grouping timers-container {\n       description\n         \"Container for\
    \ settings of basic timers\";\n       container timers {\n         must 'invalid-interval\
    \ >= (update-interval * 3)' {\n           description\n             \"invalid-interval\
    \ must be at least three times the value\n              for the update-interval\
    \ argument.\";\n         }\n         must 'flush-interval > invalid-interval'\
    \ {\n           description\n             \"flush-interval must be larger than\
    \ the value for the\n              invalid-interval argument.\";\n         }\n\
    \         description\n           \"Timers for the specified RIPv2 or RIPng instance\
    \ or\n            interface.\";\n         leaf update-interval {\n           type\
    \ uint16 {\n             range \"1..32767\";\n           }\n           units \"\
    seconds\";\n           default \"30\";\n           description\n             \"\
    Interval at which RIPv2 or RIPng updates are sent.\";\n         }\n         leaf\
    \ invalid-interval {\n           type uint16 {\n             range \"1..32767\"\
    ;\n           }\n           units \"seconds\";\n           default \"180\";\n\
    \           description\n             \"Interval before a route is declared invalid\
    \ after no\n              updates are received.  This value is at least three\
    \ times\n              the value for the update-interval argument.\";\n      \
    \   }\n         leaf holddown-interval {\n           type uint16 {\n         \
    \    range \"1..32767\";\n           }\n           units \"seconds\";\n      \
    \     default \"180\";\n           description\n             \"Interval before\
    \ better routes are released.\";\n         }\n         leaf flush-interval {\n\
    \           type uint16 {\n             range \"1..32767\";\n           }\n  \
    \         units \"seconds\";\n           default \"240\";\n           description\n\
    \             \"Interval before a route is flushed from the routing\n        \
    \      table. This value must be larger than the value for the\n             \
    \ invalid-interval argument.\";\n         }\n       }\n       // timers\n    \
    \ }\n     // timers-container\n     grouping global-attributes {\n       description\n\
    \         \"Global configuration and state attributes.\";\n       uses originate-default-route-container;\n\
    \       leaf default-metric {\n         type uint8 {\n           range \"0..16\"\
    ;\n         }\n         default \"1\";\n         description\n           \"Set\
    \ the default metric.\";\n       }\n       leaf distance {\n         type uint8\
    \ {\n           range \"1..255\";\n         }\n         default \"120\";\n   \
    \      description\n           \"The administrative distance of the RIPv2 or RIPng\
    \ for the\n            current RIPv2 or RIPng instance.\";\n       }\n       leaf\
    \ triggered-update-threshold {\n         type uint8 {\n           range \"1..30\"\
    ;\n         }\n         units \"seconds\";\n         default \"5\";\n        \
    \ description\n           \"This attribute is used to suppress triggered updates.\n\
    \            When the arrival of a regularly scheduled update matches the\n  \
    \          number of seconds or is less than the number seconds\n            configured\
    \ with this attribute, the triggered update is\n            suppressed.\";\n \
    \      }\n       leaf maximum-paths {\n         type uint8 {\n           range\
    \ \"1..16\";\n         }\n         default \"8\";\n         description\n    \
    \       \"The number of multiple equal-cost RIPv2 or RIPng routes\n          \
    \  that can be used as the best paths for balancing the load\n            of outgoing\
    \ traffic packets.\";\n       }\n       leaf output-delay {\n         type uint8\
    \ {\n           range \"1..50\";\n         }\n         units \"milliseconds\"\
    ;\n         description\n           \"A delay time between packets sent in multipacket\n\
    \            RIPv2 or RIPng updates.\";\n       }\n     }\n     // global-attributes\n\
    \     grouping distribute-lists {\n       description\n         \"Grouping for\
    \ distribute lists.\";\n       list distribute-list {\n         key \"prefix-set-name\
    \ direction\";\n         description\n           \"List of distribute-lists, which\
    \ are used to filter incoming\n            or outgoing routing updates.\";\n \
    \        leaf prefix-set-name {\n           type prefix-set-ref;\n           description\n\
    \             \"Reference to a prefix list to be applied to RIPv2 or\n       \
    \       RIPng packets.\";\n         }\n         leaf direction {\n           type\
    \ enumeration {\n             enum in {\n               description\n        \
    \         \"Apply the distribute-list to incoming routes.\";\n             }\n\
    \             enum out {\n               description\n                 \"Apply\
    \ the distribute-list to outgoing routes.\";\n             }\n           }\n \
    \          description\n             \"Direction of the routing updates.\";\n\
    \         }\n         leaf if-name {\n           type if:interface-ref;\n    \
    \       description\n             \"Reference to an interface to which the prefix\
    \ list is\n              applied.\";\n         }\n       }\n       // distribute-list\n\
    \     }\n     // distribute-lists\n     grouping route-attributes {\n       description\n\
    \         \"Grouping for route attributes.\";\n       leaf redistributed {\n \
    \        type boolean;\n         description\n           \"Redistributed routes.\"\
    ;\n       }\n       leaf route-type {\n         type enumeration {\n         \
    \  enum connected {\n             description\n               \"Connected route.\"\
    ;\n           }\n           enum external {\n             description\n      \
    \         \"External route.\";\n           }\n           enum external-backup\
    \ {\n             description\n               \"External backup route.\";\n  \
    \         }\n           enum rip {\n             description\n               \"\
    RIP route.\";\n           }\n         }\n         description\n           \"Route\
    \ type.\";\n       }\n       leaf metric {\n         type uint8 {\n          \
    \ range \"0..16\";\n         }\n         description\n           \"Route metric.\"\
    ;\n       }\n       leaf expire-time {\n         type uint16;\n         description\n\
    \           \"Expiration time.\";\n       }\n       leaf deleted {\n         type\
    \ boolean;\n         description\n           \"Deleted route.\";\n       }\n \
    \      leaf holddown {\n         type boolean;\n         description\n       \
    \    \"Holddown route.\";\n       }\n       leaf need-triggered-update {\n   \
    \      type boolean;\n         description\n           \"The route needs triggered\
    \ update.\";\n       }\n       leaf inactive {\n         type boolean;\n     \
    \    description\n           \"The route is inactive.\";\n       }\n       leaf\
    \ flush-expire-before-holddown {\n         type boolean;\n         description\n\
    \           \"The flush timer expired before holddown time.\";\n       }\n   \
    \  }\n     // route-attributes\n     /*\n      * Configuration data and operational\
    \ state data nodes\n      */\n     augment \"/rt:routing/rt:control-plane-protocols/\"\
    \n           + \"rt:control-plane-protocol\" {\n       when \"derived-from(rt:type,\
    \ 'rip:rip')\" {\n         description\n           \"This augment is only valid\
    \ for a routing protocol instance\n            of RIP (type 'ripv2' or 'ripng').\"\
    ;\n       }\n       description\n         \"RIP augmentation.\";\n       container\
    \ rip {\n         description\n           \"RIP data.\";\n         uses global-attributes;\n\
    \         uses distribute-lists;\n         uses redistribute-container;\n    \
    \     uses timers-container;\n         container interfaces {\n           description\n\
    \             \"Containing a list of RIP interfaces.\";\n           list interface\
    \ {\n             key \"interface\";\n             description\n             \
    \  \"List of RIP interfaces.\";\n             leaf interface {\n             \
    \  type if:interface-ref;\n               must \"(derived-from-or-self(\"\n  \
    \                + \"/if:interfaces/if:interface[if:name=current()]/\"\n     \
    \             + \"ip:ipv4) or \"\n                  + \"(derived-from-or-self(\"\
    \n                  + \"/if:interfaces/if:interface[if:name=current()]/\"\n  \
    \                + \"ip:ipv6)\" {\n                 error-message \"Invalid interface\
    \ type.\";\n                 description\n                   \"RIPv2 can be enabled\
    \ on IPv4 interface, and\n                    RIPng can be enabled on IPv6 interface.\"\
    ;\n               }\n               description\n                 \"Enable RIP\
    \ on this interface.\";\n             }\n             container authentication\
    \ {\n               when \"derived-from-or-self(\"\n                 description\n\
    \                   \"Only applicable to RIPv2.\";\n               }\n       \
    \        description\n                 \"Enables authentication and specifies\
    \ the\n                  authentication scheme for the RIP interface.\";\n   \
    \            choice auth-type-selection {\n                 description\n    \
    \               \"Specify the authentication scheme.\";\n                 reference\n\
    \                   \"RFC8177: YANG Data Model for Key Chains.\";\n          \
    \       case auth-key-chain {\n                   leaf key-chain {\n         \
    \            type key-chain:key-chain-ref;\n                     description\n\
    \                       \"key-chain name.\";\n                   }\n         \
    \        }\n                 case auth-key {\n                   leaf key {\n\
    \                     type string;\n                     description\n       \
    \                \"Key string in ASCII format.\";\n                   }\n    \
    \               leaf crypto-algorithm {\n                     type identityref\
    \ {\n                       base key-chain:crypto-algorithm;\n               \
    \      }\n                     description\n                       \"Cryptographic\
    \ algorithm associated with the\n                        key.\";\n           \
    \        }\n                 }\n               }\n             }\n           \
    \  container bfd {\n               if-feature \"bfd\";\n               description\n\
    \                 \"BFD configuration.\";\n               uses bfd-types:client-cfg-parms;\n\
    \             }\n             leaf cost {\n               type uint8 {\n     \
    \            range \"1..16\";\n               }\n               default \"1\"\
    ;\n               description\n                 \"Interface cost.\";\n       \
    \      }\n             container neighbors {\n               if-feature \"explicit-neighbors\"\
    ;\n               description\n                 \"Specifies the RIP neighbors.\
    \  Useful for a\n                  non-broadcast multiple access (NBMA) network.\"\
    ;\n               list neighbor {\n                 key \"address\";\n       \
    \          description\n                   \"Specify a RIP neighbor on a non-broadcast\
    \ network.\";\n                 leaf address {\n                   type inet:ip-address;\n\
    \                   description\n                     \"Neighbor IP address.\"\
    ;\n                 }\n               }\n             }\n             leaf no-listen\
    \ {\n               type empty;\n               description\n                \
    \ \"Disables listening to, and processing of, RIPv2 or\n                  RIPng\
    \ packets on the specified interface.\";\n             }\n             uses originate-default-route-container;\n\
    \             leaf passive {\n               type empty;\n               description\n\
    \                 \"Disables sending of RIPv2 or RIPng packets on the\n      \
    \            specified interface.\";\n             }\n             leaf split-horizon\
    \ {\n               type enumeration {\n                 enum disabled {\n   \
    \                description\n                     \"Disables split-horizon processing.\"\
    ;\n                 }\n                 enum simple {\n                   description\n\
    \                     \"Enables simple split-horizon processing.\";\n        \
    \         }\n                 enum poison-reverse {\n                   description\n\
    \                     \"Enables split-horizon processing with poison\n       \
    \               reverse.\";\n                 }\n               }\n          \
    \     default \"simple\";\n               description\n                 \"Controls\
    \ RIPv2 or RIPng split-horizon processing on\n                  the specified\
    \ interface.\";\n             }\n             container summary-address {\n  \
    \             description\n                 \"Summarizes information about RIPv2\
    \ or RIPng routes\n                  sent over the specified interface in RIPv2\
    \ or RIPng\n                  update packets.\";\n               leaf address\
    \ {\n                 type inet:ip-prefix;\n                 description\n   \
    \                \"Specifies the IP address and the prefix length that\n     \
    \               identify the routes to be summarized.  The IP\n              \
    \      address can be specified in either IPv4 or IPv6\n                    format,\
    \ as specified in RFC6991.\";\n               }\n               leaf metric {\n\
    \                 type uint8 {\n                   range \"0..16\";\n        \
    \         }\n                 description\n                   \"Metric used for\
    \ the route.  If this attribute is not\n                    used, the value set\
    \ through the default-metric\n                    attribute in RIPv2 or RIPng\
    \ router configuration is\n                    used for the route.\";\n      \
    \         }\n             }\n             uses timers-container;\n           \
    \  /* Operational state */\n             leaf oper-status {\n               type\
    \ enumeration {\n                 enum up {\n                   description\n\
    \                     \"RIPv2 or RIPng is operational on this interface.\";\n\
    \                 }\n                 enum down {\n                   description\n\
    \                     \"RIPv2 or RIPng is not operational on this\n          \
    \            interface.\";\n                 }\n               }\n           \
    \    config false;\n               description\n                 \"Operational\
    \ state.\";\n             }\n             leaf next-full-update {\n          \
    \     type uint32;\n               config false;\n               description\n\
    \                 \"Next full update time.\";\n             }\n             leaf\
    \ valid-address {\n               type boolean;\n               config false;\n\
    \               description\n                 \"The interface has a valid address.\"\
    ;\n             }\n             container statistics {\n               if-feature\
    \ \"interface-statistics\";\n               config false;\n               description\n\
    \                 \"Interface statistics counters.\";\n               leaf discontinuity-time\
    \ {\n                 type yang:date-and-time;\n                 description\n\
    \                   \"The time on the most recent occasion at which any\n    \
    \                one or more of the statistics counters suffered a\n         \
    \           discontinuity.  If no such discontinuities have\n                \
    \    occurred since the last re-initialization of the\n                    local\
    \ management subsystem, then this node contains\n                    the time\
    \ the local management subsystem\n                    re-initialized itself.\"\
    ;\n               }\n               leaf bad-packets-rcvd {\n                \
    \ type yang:counter32;\n                 description\n                   \"The\
    \ number of RIP invalid packets received by\n                    the RIP process\
    \ that were subsequently discarded\n                    for any reason (e.g.,\
    \ a version 0 packet, or an\n                    unknown command type).\";\n \
    \              }\n               leaf bad-routes-rcvd {\n                 type\
    \ yang:counter32;\n                 description\n                   \"The number\
    \ of routes, in valid RIP packets,\n                    which were ignored for\
    \ any reason (e.g., unknown\n                    address family, or invalid metric).\"\
    ;\n               }\n               leaf updates-sent {\n                 type\
    \ yang:counter32;\n                 description\n                   \"The number\
    \ of triggered RIP updates actually\n                    sent on this interface.\
    \  This explicitly does\n                    NOT include full updates sent containing\
    \ new\n                    information.\";\n               }\n             }\n\
    \           }\n           // interface\n         }\n         // interfaces\n \
    \        /* Operational state */\n         leaf next-triggered-update {\n    \
    \       type uint32;\n           config false;\n           description\n     \
    \        \"Next triggered update.\";\n         }\n         leaf num-of-routes\
    \ {\n           type uint32;\n           config false;\n           description\n\
    \             \"The number of routes.\";\n         }\n         container ipv4\
    \ {\n           when \"derived-from-or-self(../../rt:type, 'rip:ripv2')\" {\n\
    \             description\n               \"IPv4 address family is supported by\
    \ RIPv2.\";\n           }\n           config false;\n           description\n\
    \             \"IPv4 address family information.\";\n           container neighbors\
    \ {\n             description\n               \"IPv4 neighbor information.\";\n\
    \             list neighbor {\n               key \"ipv4-address\";\n        \
    \       description\n                 \"A RIPv2 neighbor.\";\n               leaf\
    \ ipv4-address {\n                 type inet:ipv4-address;\n                 description\n\
    \                   \"IP address that a RIP neighbor is using as its\n       \
    \             source address.\";\n               }\n               leaf last-update\
    \ {\n                 type yang:date-and-time;\n                 description\n\
    \                   \"The time when the most recent RIP update was\n         \
    \           received from this neighbor.\";\n               }\n              \
    \ leaf bad-packets-rcvd {\n                 type yang:counter32;\n           \
    \      description\n                   \"The number of RIP invalid packets received\
    \ from\n                    this neighbor that were subsequently discarded\n \
    \                   for any reason (e.g., a version 0 packet, or an\n        \
    \            unknown command type).\";\n               }\n               leaf\
    \ bad-routes-rcvd {\n                 type yang:counter32;\n                 description\n\
    \                   \"The number of routes received from this neighbor,\n    \
    \                in valid RIP packets that were ignored for any\n            \
    \        reason (e.g., unknown address family, or invalid\n                  \
    \  metric).\";\n               }\n             }\n             // neighbor\n \
    \          }\n           // neighbors\n           container routes {\n       \
    \      description\n               \"IPv4 route information.\";\n            \
    \ list route {\n               key \"ipv4-prefix\";\n               description\n\
    \                 \"A RIPv2 IPv4 route.\";\n               leaf ipv4-prefix {\n\
    \                 type inet:ipv4-prefix;\n                 description\n     \
    \              \"IPv4 address and prefix length, in the format\n             \
    \       specified in RFC6991.\";\n               }\n               leaf next-hop\
    \ {\n                 type inet:ipv4-address;\n                 description\n\
    \                   \"Next hop IPv4 address.\";\n               }\n          \
    \     leaf interface {\n                 type if:interface-ref;\n            \
    \     description\n                   \"The interface that the route uses.\";\n\
    \               }\n               uses route-attributes;\n             }\n   \
    \          // route\n           }\n           // routes\n         }\n        \
    \ // ipv4\n         container ipv6 {\n           when \"derived-from-or-self(../../rt:type,\
    \ 'rip:ripng')\" {\n             description\n               \"IPv6 address family\
    \ is supported by RIPng.\";\n           }\n           config false;\n        \
    \   description\n             \"IPv6 address family information.\";\n        \
    \   container neighbors {\n             description\n               \"IPv6 neighbor\
    \ information.\";\n             list neighbor {\n               key \"ipv6-address\"\
    ;\n               description\n                 \"A RIPng neighbor.\";\n     \
    \          leaf ipv6-address {\n                 type inet:ipv6-address;\n   \
    \              description\n                   \"IP address that a RIP neighbor\
    \ is using as its\n                    source address.\";\n               }\n\
    \               leaf last-update {\n                 type yang:date-and-time;\n\
    \                 description\n                   \"The time when the most recent\
    \ RIP update was\n                    received from this neighbor.\";\n      \
    \         }\n               leaf bad-packets-rcvd {\n                 type yang:counter32;\n\
    \                 description\n                   \"The number of RIP invalid\
    \ packets received from\n                    this neighbor that were subsequently\
    \ discarded\n                    for any reason (e.g., a version 0 packet, or\
    \ an\n                    unknown command type).\";\n               }\n      \
    \         leaf bad-routes-rcvd {\n                 type yang:counter32;\n    \
    \             description\n                   \"The number of routes received\
    \ from this neighbor,\n                    in valid RIP packets that were ignored\
    \ for any\n                    reason (e.g., unknown address family, or invalid\n\
    \                    metric).\";\n               }\n             }\n         \
    \    // neighbor\n           }\n           // neighbors\n           container\
    \ routes {\n             description\n               \"IPv6 route information.\"\
    ;\n             list route {\n               key \"ipv6-prefix\";\n          \
    \     description\n                 \"A RIPng IPv6 route.\";\n               leaf\
    \ ipv6-prefix {\n                 type inet:ipv6-prefix;\n                 description\n\
    \                   \"IPv6 address and prefix length, in the format\n        \
    \            specified in RFC6991.\";\n               }\n               leaf next-hop\
    \ {\n                 type inet:ipv6-address;\n                 description\n\
    \                   \"Next hop IPv6 address.\";\n               }\n          \
    \     leaf interface {\n                 type if:interface-ref;\n            \
    \     description\n                   \"The interface that the route uses.\";\n\
    \               }\n               uses route-attributes;\n             }\n   \
    \          // route\n           }\n           // routes\n         }\n        \
    \ // ipv6\n         container statistics {\n           if-feature \"global-statistics\"\
    ;\n           config false;\n           description\n             \"Global statistics\
    \ counters.\";\n           leaf discontinuity-time {\n             type yang:date-and-time;\n\
    \             description\n               \"The time on the most recent occasion\
    \ at which any one\n                or more of the statistics counters suffered\
    \ a\n                discontinuity.  If no such discontinuities have occurred\n\
    \                since the last re-initialization of the local\n             \
    \   management subsystem, then this node contains the time\n                the\
    \ local management subsystem re-initialized itself.\";\n           }\n       \
    \    leaf requests-rcvd {\n             type yang:counter32;\n             description\n\
    \               \"The number of requests received by RIP.\";\n           }\n \
    \          leaf requests-sent {\n             type yang:counter32;\n         \
    \    description\n               \"The number of requests sent by RIP.\";\n  \
    \         }\n           leaf responses-rcvd {\n             type yang:counter32;\n\
    \             description\n               \"The number of responses received by\
    \ RIP.\";\n           }\n           leaf responses-sent {\n             type yang:counter32;\n\
    \             description\n               \"The number of responses sent by RIP.\"\
    ;\n           }\n         }\n         // statistics\n       }\n       // rip\n\
    \     }\n     /*\n      * RPCs\n      */\n     rpc clear-rip-route {\n       description\n\
    \         \"Clears RIP routes from the IP routing table and routes\n         \
    \ redistributed into RIP for the specified RIP instance\n          or for all\
    \ RIP instances in the current context.\";\n       input {\n         leaf rip-instance\
    \ {\n           type leafref {\n             path \"/rt:routing/rt:control-plane-protocols/\"\
    \n                + \"rt:control-plane-protocol/rt:name\";\n           }\n   \
    \        description\n             \"Instance name identifying a specific RIP\
    \ instance.\n              This leaf is optional for the RPC.\n              If\
    \ it is specified, the RPC will clear all routes in the\n              specified\
    \ RIP instance;\n              if it is not specified, the RPC will clear all\
    \ routes in\n              all RIP instances.\";\n         }\n       }\n     }\n\
    \     // clear-rip-route\n   }\n   <CODE ENDS>\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   This document registers the following namespace URIs\
    \ in the \"IETF XML\n   Registry\" [RFC3688]:\n   URI:  urn:ietf:params:xml:ns:yang:ietf-rip\n\
    \   Registrant Contact:  The IESG.\n   XML:  N/A; the requested URI is an XML\
    \ namespace.\n   This document registers the following YANG modules in the \"\
    YANG\n   Module Names\" registry [RFC6020]:\n   Name:  ietf-rip\n   Namespace:\
    \  urn:ietf:params:xml:ns:yang:ietf-rip\n   Prefix:  rip\n   Reference:  RFC 8695\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   The YANG module specified in this document defines\
    \ a schema for data\n   that is designed to be accessed via network management\
    \ protocols such\n   as NETCONF [RFC6241] or RESTCONF [RFC8040].  The lowest NETCONF\
    \ layer\n   is the secure transport layer, and the mandatory-to-implement secure\n\
    \   transport is Secure Shell (SSH) [RFC6242].  The lowest RESTCONF layer\n  \
    \ is HTTPS, and the mandatory-to-implement secure transport is TLS\n   [RFC8446].\n\
    \   The NETCONF Access Control Model (NACM) [RFC8341] provides the means\n   to\
    \ restrict access for particular NETCONF or RESTCONF users to a\n   preconfigured\
    \ subset of all available NETCONF or RESTCONF protocol\n   operations and content.\n\
    \   There are a number of data nodes defined in this YANG module that are\n  \
    \ writable/creatable/deletable (i.e., config true, which is the\n   default).\
    \  These data nodes may be considered sensitive or vulnerable\n   in some network\
    \ environments.  Write operations (e.g., edit-config)\n   to these data nodes\
    \ without proper protection can have a negative\n   effect on network operations.\
    \  These are the subtrees and data nodes\n   and their sensitivity/vulnerability:\n\
    \      /rt:routing/rt:control-plane-protocols/rt:control-plane-protocol/\n   \
    \   rip:rip\n   Unauthorized access to any data node of these subtrees can adversely\n\
    \   affect the routing subsystem of both the local device and the\n   network.\
    \  This may lead to network malfunctions, delivery of packets\n   to inappropriate\
    \ destinations, and other problems.\n   Some of the readable data nodes in this\
    \ YANG module may be considered\n   sensitive or vulnerable in some network environments.\
    \  It is thus\n   important to control read access (e.g., via get, get-config,\
    \ or\n   notification) to these data nodes.  These are the subtrees and data\n\
    \   nodes and their sensitivity/vulnerability:\n      /rt:routing/rt:control-plane-protocols/rt:control-plane-protocol/\n\
    \      rip:rip\n   Unauthorized access to any data node of these subtrees can\
    \ disclose\n   the operational state information of RIP on this device.\n   Some\
    \ of the RPC operations in this YANG module may be considered\n   sensitive or\
    \ vulnerable in some network environments.  It is thus\n   important to control\
    \ access to these operations.  These are the\n   operations and their sensitivity/vulnerability:\n\
    \   RPC clear-rip-route:\n   Unauthorized access to the RPC above can adversely\
    \ affect the routing\n   subsystem of both the local device and the network. \
    \ This may lead to\n   network malfunctions, delivery of packets to inappropriate\n\
    \   destinations, and other problems.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC1724]  Malkin, G. and F. Baker, \"RIP Version\
    \ 2 MIB Extension\",\n              RFC 1724, DOI 10.17487/RFC1724, November 1994,\n\
    \              <https://www.rfc-editor.org/info/rfc1724>.\n   [RFC2119]  Bradner,\
    \ S., \"Key words for use in RFCs to Indicate\n              Requirement Levels\"\
    , BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n       \
    \       <https://www.rfc-editor.org/info/rfc2119>.\n   [RFC2453]  Malkin, G.,\
    \ \"RIP Version 2\", STD 56, RFC 2453,\n              DOI 10.17487/RFC2453, November\
    \ 1998,\n              <https://www.rfc-editor.org/info/rfc2453>.\n   [RFC2080]\
    \  Malkin, G. and R. Minnear, \"RIPng for IPv6\", RFC 2080,\n              DOI\
    \ 10.17487/RFC2080, January 1997,\n              <https://www.rfc-editor.org/info/rfc2080>.\n\
    \   [RFC3688]  Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688,\n  \
    \            DOI 10.17487/RFC3688, January 2004,\n              <https://www.rfc-editor.org/info/rfc3688>.\n\
    \   [RFC6020]  Bjorklund, M., Ed., \"YANG - A Data Modeling Language for\n   \
    \           the Network Configuration Protocol (NETCONF)\", RFC 6020,\n      \
    \        DOI 10.17487/RFC6020, October 2010,\n              <https://www.rfc-editor.org/info/rfc6020>.\n\
    \   [RFC6241]  Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,\n  \
    \            and A. Bierman, Ed., \"Network Configuration Protocol\n         \
    \     (NETCONF)\", RFC 6241, DOI 10.17487/RFC6241, June 2011,\n              <https://www.rfc-editor.org/info/rfc6241>.\n\
    \   [RFC6242]  Wasserman, M., \"Using the NETCONF Protocol over Secure\n     \
    \         Shell (SSH)\", RFC 6242, DOI 10.17487/RFC6242, June 2011,\n        \
    \      <https://www.rfc-editor.org/info/rfc6242>.\n   [RFC6991]  Schoenwaelder,\
    \ J., Ed., \"Common YANG Data Types\",\n              RFC 6991, DOI 10.17487/RFC6991,\
    \ July 2013,\n              <https://www.rfc-editor.org/info/rfc6991>.\n   [RFC7950]\
    \  Bjorklund, M., Ed., \"The YANG 1.1 Data Modeling Language\",\n            \
    \  RFC 7950, DOI 10.17487/RFC7950, August 2016,\n              <https://www.rfc-editor.org/info/rfc7950>.\n\
    \   [RFC8040]  Bierman, A., Bjorklund, M., and K. Watsen, \"RESTCONF\n       \
    \       Protocol\", RFC 8040, DOI 10.17487/RFC8040, January 2017,\n          \
    \    <https://www.rfc-editor.org/info/rfc8040>.\n   [RFC8174]  Leiba, B., \"Ambiguity\
    \ of Uppercase vs Lowercase in RFC\n              2119 Key Words\", BCP 14, RFC\
    \ 8174, DOI 10.17487/RFC8174,\n              May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n\
    \   [RFC8177]  Lindem, A., Ed., Qu, Y., Yeung, D., Chen, I., and J.\n        \
    \      Zhang, \"YANG Data Model for Key Chains\", RFC 8177,\n              DOI\
    \ 10.17487/RFC8177, June 2017,\n              <https://www.rfc-editor.org/info/rfc8177>.\n\
    \   [RFC8341]  Bierman, A. and M. Bjorklund, \"Network Configuration\n       \
    \       Access Control Model\", STD 91, RFC 8341,\n              DOI 10.17487/RFC8341,\
    \ March 2018,\n              <https://www.rfc-editor.org/info/rfc8341>.\n   [RFC8342]\
    \  Bjorklund, M., Schoenwaelder, J., Shafer, P., Watsen, K.,\n              and\
    \ R. Wilton, \"Network Management Datastore Architecture\n              (NMDA)\"\
    , RFC 8342, DOI 10.17487/RFC8342, March 2018,\n              <https://www.rfc-editor.org/info/rfc8342>.\n\
    \   [RFC8343]  Bjorklund, M., \"A YANG Data Model for Interface\n            \
    \  Management\", RFC 8343, DOI 10.17487/RFC8343, March 2018,\n              <https://www.rfc-editor.org/info/rfc8343>.\n\
    \   [RFC8344]  Bjorklund, M., \"A YANG Data Model for IP Management\",\n     \
    \         RFC 8344, DOI 10.17487/RFC8344, March 2018,\n              <https://www.rfc-editor.org/info/rfc8344>.\n\
    \   [RFC8349]  Lhotka, L., Lindem, A., and Y. Qu, \"A YANG Data Model for\n  \
    \            Routing Management (NMDA Version)\", RFC 8349,\n              DOI\
    \ 10.17487/RFC8349, March 2018,\n              <https://www.rfc-editor.org/info/rfc8349>.\n\
    \   [RFC8446]  Rescorla, E., \"The Transport Layer Security (TLS) Protocol\n \
    \             Version 1.3\", RFC 8446, DOI 10.17487/RFC8446, August 2018,\n  \
    \            <https://www.rfc-editor.org/info/rfc8446>.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [RFC7951]  Lhotka, L., \"JSON Encoding of Data\
    \ Modeled with YANG\",\n              RFC 7951, DOI 10.17487/RFC7951, August 2016,\n\
    \              <https://www.rfc-editor.org/info/rfc7951>.\n   [RFC8340]  Bjorklund,\
    \ M. and L. Berger, Ed., \"YANG Tree Diagrams\",\n              BCP 215, RFC 8340,\
    \ DOI 10.17487/RFC8340, March 2018,\n              <https://www.rfc-editor.org/info/rfc8340>.\n\
    \   [RFC8407]  Bierman, A., \"Guidelines for Authors and Reviewers of\n      \
    \        Documents Containing YANG Data Models\", BCP 216, RFC 8407,\n       \
    \       DOI 10.17487/RFC8407, October 2018,\n              <https://www.rfc-editor.org/info/rfc8407>.\n\
    \   [RFC8639]  Voit, E., Clemm, A., Gonzalez Prieto, A., Nilsen-Nygaard,\n   \
    \           E., and A. Tripathy, \"Subscription to YANG Notifications\",\n   \
    \           RFC 8639, DOI 10.17487/RFC8639, September 2019,\n              <https://www.rfc-editor.org/info/rfc8639>.\n\
    \   [RFC8641]  Clemm, A. and E. Voit, \"Subscription to YANG Notifications\n \
    \             for Datastore Updates\", RFC 8641, DOI 10.17487/RFC8641,\n     \
    \         September 2019, <https://www.rfc-editor.org/info/rfc8641>.\n   [YANG-BFD]\
    \ Rahman, R., Zheng, L., Jethanandani, M., Pallagatti, S.,\n              and\
    \ G. Mirsky, \"YANG Data Model for Bidirectional\n              Forwarding Detection\
    \ (BFD)\", Work in Progress, Internet-\n              Draft, draft-ietf-bfd-yang-17,\
    \ 2 August 2018,\n              <https://tools.ietf.org/html/draft-ietf-bfd-yang-17>.\n\
    \   [YANG-ISIS]\n              Litkowski, S., Yeung, D., Lindem, A., Zhang, Z.,\
    \ and L.\n              Lhotka, \"YANG Data Model for IS-IS Protocol\", Work in\n\
    \              Progress, Internet-Draft, draft-ietf-isis-yang-isis-cfg-\n    \
    \          42, 15 October 2019, <https://tools.ietf.org/html/draft-\n        \
    \      ietf-isis-yang-isis-cfg-42>.\n   [YANG-OSPF]\n              Yeung, D.,\
    \ Qu, Y., Zhang, Z., Chen, I., and A. Lindem,\n              \"YANG Data Model\
    \ for OSPF Protocol\", Work in Progress,\n              Internet-Draft, draft-ietf-ospf-yang-29,\
    \ 17 October 2019,\n              <https://tools.ietf.org/html/draft-ietf-ospf-yang-29>.\n"
- title: Appendix A.  Data Tree Example
  contents:
  - "Appendix A.  Data Tree Example\n   This section contains an example of an instance\
    \ data tree in the JSON\n   encoding [RFC7951], containing both configuration\
    \ and state data.\n                     | Router 203.0.113.1  |\n            \
    \         |   Another Router    +---------| 2001:db8:0:2::/64\n              \
    \            Figure 1: RIPng Example\n   The configuration instance data tree\
    \ for Router 203.0.113.1 in\n   Figure 1 could be as follows:\n   {\n     \"ietf-interfaces:interfaces\"\
    : {\n       \"interface\": [\n         {\n           \"name\": \"eth1\",\n   \
    \        \"description\": \"An interface with RIPng enabled.\",\n           \"\
    type\": \"iana-if-type:ethernetCsmacd\",\n           \"ietf-ip:ipv6\": {\n   \
    \          \"address\": [\n               {\n                 \"ip\": \"2001:db8:0:1::1\"\
    ,\n                 \"prefix-length\": 64\n               }\n             ],\n\
    \             \"forwarding\": true\n           }\n         }\n       ]\n     },\n\
    \     \"ietf-routing:routing\": {\n       \"router-id\": \"203.0.113.1\",\n  \
    \     \"control-plane-protocols\": {\n         \"control-plane-protocol\": [\n\
    \           {\n             \"type\": \"ietf-rip:ripng\",\n             \"name\"\
    : \"ripng-1\",\n             \"description\": \"RIPng instance ripng-1.\",\n \
    \            \"ietf-rip:rip\": {\n               \"redistribute\": {\n       \
    \          \"connected\": {\n                 }\n               },\n         \
    \      \"interfaces\": {\n                 \"interface\": [\n                \
    \   {\n                     \"interface\": \"eth1\",\n                     \"\
    split-horizon\": \"poison-reverse\"\n                   }\n                 ]\n\
    \               }\n             }\n           }\n         ]\n       }\n     }\n\
    \   }\n   The corresponding operational state data for Router 203.0.113.1 could\n\
    \   be as follows:\n   {\n     \"ietf-interfaces:interfaces\": {\n       \"interface\"\
    : [\n         {\n           \"name\": \"eth1\",\n           \"description\": \"\
    An interface with RIPng enabled.\",\n           \"type\": \"iana-if-type:ethernetCsmacd\"\
    ,\n           \"phys-address\": \"00:00:5e:00:53:01\",\n           \"oper-status\"\
    : \"up\",\n           \"statistics\": {\n             \"discontinuity-time\":\
    \ \"2016-10-24T17:11:27+02:00\"\n           },\n           \"ietf-ip:ipv6\": {\n\
    \             \"forwarding\": true,\n             \"mtu\": 1500,\n           \
    \  \"address\": [\n               {\n                 \"ip\": \"2001:db8:0:1::1\"\
    ,\n                 \"prefix-length\": 64,\n                 \"origin\": \"static\"\
    ,\n                 \"status\": \"preferred\"\n               },\n           \
    \    {\n                 \"ip\": \"fe80::200:5eff:fe00:5301\",\n             \
    \    \"prefix-length\": 64,\n                 \"origin\": \"link-layer\",\n  \
    \               \"status\": \"preferred\"\n               }\n             ],\n\
    \             \"neighbor\": [\n               {\n                 \"ip\": \"2001:db8:0:1::2\"\
    ,\n                 \"link-layer-address\": \"00:00:5e:00:53:02\",\n         \
    \        \"origin\": \"dynamic\",\n                 \"is-router\": [null],\n \
    \                \"state\": \"reachable\"\n               },\n               {\n\
    \                 \"ip\": \"fe80::200:5eff:fe00:5302\",\n                 \"link-layer-address\"\
    : \"00:00:5e:00:53:02\",\n                 \"origin\": \"dynamic\",\n        \
    \         \"is-router\": [null],\n                 \"state\": \"reachable\"\n\
    \               }\n             ]\n           }\n         }\n       ]\n     },\n\
    \     \"ietf-routing:routing\": {\n       \"router-id\": \"203.0.113.1\",\n  \
    \     \"interfaces\": {\n         \"interface\": [\n           \"eth1\"\n    \
    \     ]\n       },\n       \"control-plane-protocols\": {\n         \"control-plane-protocol\"\
    : [\n           {\n             \"type\": \"ietf-rip:ripng\",\n             \"\
    name\": \"ripng-1\",\n             \"description\": \"RIPng instance ripng-1.\"\
    ,\n             \"ietf-rip:rip\": {\n               \"default-metric\": 1,\n \
    \              \"next-triggered-update\": 5,\n               \"interfaces\": {\n\
    \                 \"interface\": [\n                   {\n                   \
    \  \"interface\": \"eth1\",\n                     \"oper-status\": \"up\",\n \
    \                    \"cost\": 1,\n                     \"split-horizon\": \"\
    poison-reverse\",\n                     \"valid-address\": true\n            \
    \       }\n                 ]\n               },\n               \"ipv6\": {\n\
    \                 \"neighbors\": {\n                   \"neighbor\": [\n     \
    \                {\n                       \"ipv6-address\": \"fe80::200:5eff:fe00:5302\"\
    ,\n                       \"last-update\": \"2017-01-02T10:34:55+02:00\"\n   \
    \                  }\n                   ]\n                 },\n            \
    \     \"routes\": {\n                   \"route\": [\n                     {\n\
    \                       \"ipv6-prefix\": \"2001:db8:0:1::/64\",\n            \
    \           \"interface\": \"eth1\",\n                       \"redistributed\"\
    : true,\n                       \"route-type\": \"connected\",\n             \
    \          \"metric\": 1,\n                       \"expire-time\": 22\n      \
    \               },\n                     {\n                       \"ipv6-prefix\"\
    : \"2001:db8:0:2::/64\",\n                       \"next-hop\": \"fe80::200:5eff:fe00:5302\"\
    ,\n                       \"interface\": \"eth1\",\n                       \"\
    redistributed\": false,\n                       \"route-type\": \"rip\",\n   \
    \                    \"metric\": 2,\n                       \"expire-time\": 82\n\
    \                     }\n                   ]\n                 }\n          \
    \     },\n               \"statistics\": {\n                 \"discontinuity-time\"\
    : \"2016-10-24T17:11:27+02:00\",\n                 \"requests-rcvd\": 523,\n \
    \                \"requests-sent\": 262,\n                 \"responses-rcvd\"\
    : 261,\n                 \"responses-sent\": 523\n               }\n         \
    \    }\n           }\n         ]\n       }\n     }\n   }\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Xufeng Liu\n   Volta Networks\n   Email: xufeng.liu.ietf@gmail.com\n\
    \   Prateek Sarda\n   Ericsson\n   Fern Icon, Survey No 28 and 36/5, Doddanakundi\
    \ Village\n   Bangalore 560037\n   Karnataka\n   India\n   Email: prateek.sarda@ericsson.com\n\
    \   Vikram Choudhary\n   Individual\n   Bangalore 560066\n"
