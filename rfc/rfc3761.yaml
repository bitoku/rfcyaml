- title: __initial_text__
  contents:
  - "            The E.164 to Uniform Resource Identifiers (URI)\n     Dynamic Delegation\
    \ Discovery System (DDDS) Application (ENUM)\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document discusses the use of the Domain Name System (DNS)\
    \ for\n   storage of E.164 numbers.  More specifically, how DNS can be used for\n\
    \   identifying available services connected to one E.164 number.  It\n   specifically\
    \ obsoletes RFC 2916 to bring it in line with the Dynamic\n   Delegation Discovery\
    \ System (DDDS) Application specification found in\n   the document series specified\
    \ in RFC 3401.  It is very important to\n   note that it is impossible to read\
    \ and understand this document\n   without reading the documents discussed in\
    \ RFC 3401.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n       1.1. Terminology . . . . . . . . . . . . . . . . . .\
    \ . . . . .  3\n       1.2. Use for these mechanisms for private dialing plans.\
    \ . . .  3\n       1.3. Application of local policy . . . . . . . . . . . . .\
    \ . .  3\n   2.  The ENUM Application Specifications .  . . . . . . . . . . .\
    \ .  4\n       2.1. Application Unique String . . . . . . . . . . . . . . . .\
    \  5\n       2.2. First Well Known Rule . . . . . . . . . . . . . . . . . .  5\n\
    \       2.3. Expected Output . . . . . . . . . . . . . . . . . . . . .  5\n  \
    \     2.4. Valid Databases . . . . . . . . . . . . . . . . . . . . .  5\n    \
    \        2.4.1. Flags. . . . . . . . . . . . . . . . . . . . . . .  6\n      \
    \      2.4.2. Services Parameters. . . . . . . . . . . . . . . .  7\n       2.5.\
    \ What constitutes an 'Enum Resolver'?. . . . . . . . . . .  8\n   3.  Registration\
    \ mechanism for Enumservices .  . . . . . . . . . .  8\n       3.1. Registration\
    \ Requirements . . . . . . . . . . . . . . . .  8\n            3.1.1. Functionality\
    \ Requirement. . . . . . . . . . . . .  8\n            3.1.2. Naming requirement\
    \ . . . . . . . . . . . . . . . .  9\n            3.1.3. Security requirement\
    \ . . . . . . . . . . . . . . .  9\n            3.1.4. Publication Requirements\
    \ . . . . . . . . . . . . . 10\n       3.2. Registration procedure. . . . . .\
    \ . . . . . . . . . . . . 10\n            3.2.1. IANA Registration. . . . . .\
    \ . . . . . . . . . . . 10\n            3.2.2. Registration Template. . . . .\
    \ . . . . . . . . . . 11\n   4.  Examples . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . 11\n       4.1. Example . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . 11\n   5.  IANA Considerations. . . . . . . . . . . . . . .\
    \ . . . . . . . 12\n   6.  Security Considerations. . . . . . . . . . . . . .\
    \ . . . . . . 12\n       6.1. DNS Security. . . . . . . . . . . . . . . . . .\
    \ . . . . . 12\n       6.2. Caching Security. . . . . . . . . . . . . . . . .\
    \ . . . . 14\n       6.3. Call Routing Security . . . . . . . . . . . . . . .\
    \ . . . 14\n       6.4. URI Resolution Security . . . . . . . . . . . . . . .\
    \ . . 15\n   7.  Acknowledgements . . . . . . . . . . . . . . . . . . . . . .\
    \ . 15\n   8.  Changes since RFC 2916 . . . . . . . . . . . . . . . . . . . .\
    \ 15\n   9.  References . . . . . . . . . . . . . . . . . . . . . . . . . . 16\n\
    \       9.1. Normative References. . . . . . . . . . . . . . . . . . . 16\n  \
    \     9.2. Informative References. . . . . . . . . . . . . . . . . . 16\n   10.\
    \ Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . 17\n   11. Full\
    \ Copyright Statement . . . . . . . . . . . . . . . . . . . 18\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document discusses the use of the Domain Name System\
    \ (DNS) for\n   storage of E.164 numbers.  More specifically, how DNS can be used\
    \ for\n   identifying available services connected to one E.164 number.  It\n\
    \   specifically obsoletes RFC 2916 to bring it in line with the Dynamic\n   Delegation\
    \ Discovery System (DDDS) Application specification found in\n   the document\
    \ series specified in RFC 3401 [6].  It is very important\n   to note that it\
    \ is impossible to read and understand this document\n   without reading the documents\
    \ discussed in RFC 3401 [6].\n   Through transformation of International Public\
    \  Telecommunication\n   Numbers in the international format [5], called within\
    \ this document\n   E.164 numbers, into DNS names and the use of existing DNS\
    \ services\n   like delegation through NS records and NAPTR records, one can look\
    \ up\n   what services are available for a specific E.164 in a decentralized\n\
    \   way with distributed management of the different levels in the lookup\n  \
    \ process.\n   The domain \"e164.arpa\" is being populated in order to provide\
    \ the\n   infrastructure in DNS for storage of E.164 numbers.  In order to\n \
    \  facilitate distributed operations, this domain is divided into\n   subdomains.\
    \  Holders of E.164 numbers which want to be listed in DNS\n   should contact\
    \ the appropriate zone administrator according to the\n   policy which is attached\
    \ to the zone.  One should start looking for\n   this information by examining\
    \ the SOA resource record associated with\n   the zone, just like in normal DNS\
    \ operations.\n   Of course, as with other domains, policies for such listings\
    \ will be\n   controlled on a subdomain basis and may differ in different parts\
    \ of\n   the world.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"\
    , and \"OPTIONAL\" in this\n   document are to be interpreted as described in\
    \ BCP 14, RFC 2119 [1].\n   All other capitalized terms are taken from the vocabulary\
    \ found in\n   the DDDS algorithm specification found in RFC 3403 [2].\n"
- title: 1.2.  Use for these mechanisms for private dialing plans
  contents:
  - "1.2.  Use for these mechanisms for private dialing plans\n   This document describes\
    \ the operation of these mechanisms in the\n   context of numbers allocated according\
    \ to the ITU-T recommendation\n   E.164.  The same mechanisms might be used for\
    \ private dialing plans.\n   If these mechanisms are re-used, the suffix used\
    \ for the private\n   dialing plan MUST NOT be e164.arpa, to avoid conflict with\
    \ this\n   specification.  Parties to the private dialing plan will need to know\n\
    \   the suffix used by their private dialing plan for correct operation\n   of\
    \ these mechanisms.  Further, the application unique string used\n   SHOULD be\
    \ the full number as specified, but without the leading '+',\n   and such private\
    \ use MUST NOT be called \"ENUM\".\n"
- title: 1.3.  Application of local policy
  contents:
  - "1.3.  Application of local policy\n   The Order field in the NAPTR record specifies\
    \ in what order the DNS\n   records are to be interpreted.  This is because DNS\
    \ does not\n   guarantee the order of records returned in the answer section of\
    \ a\n   DNS packet.  In most ENUM cases this isn't an issue because the\n   typical\
    \ regular expression will be '!^.*$!' since the first query\n   often results\
    \ in a terminal Rule.\n   But there are other cases (non-terminal Rules) where\
    \ two different\n   Rules both match the given Application Unique String.  As\
    \ each Rule\n   is evaluated within the algorithm, one may match a more significant\n\
    \   piece of the AUS than the other.  For example, by using a non-\n   terminal\
    \ NAPTR a given set of numbers is sent to some private-\n   dialing-plan-specific\
    \ zone.  Within that zone there are two Rules\n   that state that if a match is\
    \ for the entire exchange and the service\n   is SIP related then the first, SIP-specific\
    \ rule is used.  But the\n   other Rule matches a longer piece of the AUS, specifying\
    \ that for\n   some other service (instant messaging) that the Rule denotes a\n\
    \   departmental level service.  If the shorter matching Rule comes\n   before\
    \ the longer match, it can 'mask' the other rules.  Thus, the\n   order in which\
    \ each Rule is tested against the AUS is an important\n   corner case that many\
    \ DDDS applications take advantage of.\n   In the case where the zone authority\
    \ wishes to state that two Rules\n   have the same effect or are identical in\
    \ usage, then the Order for\n   those records is set to the same value.  In that\
    \ case, the Preference\n   is used to specify a locally over-ridable suggestion\
    \ by the zone\n   authority that one Rule might simply be better than another\
    \ for some\n   reason.\n   For ENUM this specifies where a client is allowed to\
    \ apply local\n   policy and where it is not.  The Order field in the NAPTR is\
    \ a\n   request from the holder of the E.164 number that the records be\n   handled\
    \ in a specific way.  The Preference field is merely a\n   suggestion from that\
    \ E.164 holder that one record might be better\n   than another.  A client implementing\
    \ ENUM MUST adhere to the Order\n   field but can simply take the Preference value\
    \ \"on advisement\" as\n   part of a client context specific selection method.\n"
- title: 2.  The ENUM Application Specifications
  contents:
  - "2.  The ENUM Application Specifications\n   This template defines the ENUM DDDS\
    \ Application according to the\n   rules and requirements found in [7].  The DDDS\
    \ database used by this\n   Application is found in [2] which is the document\
    \ that defines the\n   NAPTR DNS Resource Record type.\n   ENUM is only applicable\
    \ for E.164 numbers.  ENUM compliant\n   applications MUST only query DNS for\
    \ what it believes is an E.164\n   number.  Since there are numerous dialing plans\
    \ which can change over\n   time, it is probably impossible for a client application\
    \ to have\n   perfect knowledge about every valid and dialable E.164 number.\n\
    \   Therefore a client application, doing everything within its power,\n   can\
    \ end up with what it thinks is a syntactically correct E.164\n   number which\
    \ in reality is not actually valid or dialable.  This\n   implies that applications\
    \ MAY send DNS queries when, for example, a\n   user mistypes a number in a user\
    \ interface.  Because of this, there\n   is the risk that collisions between E.164\
    \ numbers and non-E.164\n   numbers can occur.  To mitigate this risk, the E2U\
    \ portion of the\n   service field MUST NOT be used for non-E.164 numbers.\n"
- title: 2.1.  Application Unique String
  contents:
  - "2.1.  Application Unique String\n   The Application Unique String is a fully\
    \ qualified E.164 number minus\n   any non-digit characters except for the '+'\
    \ character which appears\n   at the beginning of the number.  The \"+\" is kept\
    \ to provide a well\n   understood anchor for the AUS in order to distinguish\
    \ it from other\n   telephone numbers that are not part of the E.164 namespace.\n\
    \   For example, the E.164 number could start out as \"+44-116-496-0348\".\n \
    \  To ensure that no syntactic sugar is allowed into the AUS, all non-\n   digits\
    \ except for \"+\" are removed, yielding \"+441164960348\".\n"
- title: 2.2.  First Well Known Rule
  contents:
  - "2.2.  First Well Known Rule\n   The First Well Known Rule for this Application\
    \ is the identity rule.\n   The output of this rule is the same as the input.\
    \  This is because\n   the E.164 namespace and this Applications databases are\
    \ organized in\n   such a way that it is possible to go directly from the name\
    \ to the\n   smallest granularity of the namespace directly from the name itself.\n\
    \   Take the previous example, the AUS is \"+441164960348\".  Applying the\n \
    \  First Well Known Rule produces the exact same string,\n   \"+441164960348\"\
    .\n"
- title: 2.3.  Expected Output
  contents:
  - "2.3.  Expected Output\n   The output of the last DDDS loop is a Uniform Resource\
    \ Identifier in\n   its absolute form according to the 'absoluteURI' production\
    \ in the\n   Collected ABNF found in RFC2396 [4].\n"
- title: 2.4.  Valid Databases
  contents:
  - "2.4.  Valid Databases\n   At present only one DDDS Database is specified for\
    \ this Application.\n   \"Dynamic Delegation Discovery System (DDDS) Part Three:\
    \ The DNS\n   Database\" (RFC 3403) [2] specifies a DDDS Database that uses the\n\
    \   NAPTR DNS resource record to contain the rewrite rules.  The Keys for\n  \
    \ this database are encoded as domain-names.\n   The output of the First Well\
    \ Known Rule for the ENUM Application is\n   the E.164 number minus all non-digit\
    \ characters except for the +.  In\n   order to convert this to a unique key in\
    \ this Database the string is\n   converted into a domain-name according to this\
    \ algorithm:\n   1. Remove all characters with the exception of the digits.  For\n\
    \      example, the First Well Known Rule produced the Key\n      \"+442079460148\"\
    .  This step would simply remove the leading \"+\",\n      producing \"442079460148\"\
    .\n   2. Put dots (\".\") between each digit.  Example:\n      4.4.2.0.7.9.4.6.0.1.4.8\n\
    \   3. Reverse the order of the digits.  Example:\n      8.4.1.0.6.4.9.7.0.2.4.4\n\
    \   4. Append the string \".e164.arpa\" to the end.  Example:\n      8.4.1.0.6.4.9.7.0.2.4.4.e164.arpa\n\
    \   This domain-name is used to request NAPTR records which may contain\n   the\
    \ end result or, if the flags field is blank, produces new keys in\n   the form\
    \ of domain-names from the DNS.\n   Some nameserver implementations attempt to\
    \ be intelligent about items\n   that are inserted into the additional information\
    \ section of a given\n   DNS response.  For example, BIND will attempt to determine\
    \ if it is\n   authoritative for a domain whenever it encodes one into a packet.\
    \  If\n   it is, then it will insert any A records it finds for that domain\n\
    \   into the additional information section of the answer until the\n   packet\
    \ reaches the maximum length allowed.  It is therefore\n   potentially useful\
    \ for a client to check for this additional\n   information.  It is also easy\
    \ to contemplate an ENUM enhanced\n   nameserver that understand the actual contents\
    \ of the NAPTR records\n   it is serving and inserts more appropriate information\
    \ into the\n   additional information section of the response.  Thus, DNS servers\n\
    \   MAY interpret Flag values and use that information to include\n   appropriate\
    \ resource records in the Additional Information portion of\n   the DNS packet.\
    \  Clients are encouraged to check for additional\n   information but are not\
    \ required to do so.  See the Additional\n   Information Processing section of\
    \ RFC 3403 [2], Section 4.2 for more\n   information on NAPTR records and the\
    \ Additional Information section\n   of a DNS response packet.\n   The character\
    \ set used to encode the substitution expression is UTF-\n   8.  The allowed input\
    \ characters are all those characters that are\n   allowed anywhere in an E.164\
    \ number.  The characters allowed to be in\n   a Key are those that are currently\
    \ defined for DNS domain-names.\n"
- title: 2.4.1.  Flags
  contents:
  - "2.4.1.  Flags\n   This Database contains a field that contains flags that signal\
    \ when\n   the DDDS algorithm has finished.  At this time only one flag, \"U\"\
    , is\n   defined.  This means that this Rule is the last one and that the\n  \
    \ output of the Rule is a URI [4].  See RFC 3404 [3].\n   If a client encounters\
    \ a record with an unknown flag, it MUST ignore\n   it and move to the next Rule.\
    \  This test takes precedence over any\n   ordering since flags can control the\
    \ interpretation placed on fields.\n   A novel flag might change the interpretation\
    \ of the regexp and/or\n   replacement fields such that it is impossible to determine\
    \ if a\n   record matched a given target.\n   If this flag is not present then\
    \ this rule is non-terminal.  If a\n   Rule is non-terminal then clients MUST\
    \ use the Key produced by this\n   Rewrite Rule as the new Key in the DDDS loop\
    \ (i.e., causing the\n   client to query for new NAPTR records at the domain-name\
    \ that is the\n   result of this Rule).\n"
- title: 2.4.2.  Services Parameters
  contents:
  - "2.4.2.  Services Parameters\n   Service Parameters for this Application take\
    \ the following form and\n   are found in the Service field of the NAPTR record.\n\
    \               service-field = \"E2U\" 1*(servicespec)\n               servicespec\
    \   = \"+\" enumservice\n               enumservice   = type 0*(subtypespec)\n\
    \               subtypespec   = \":\" subtype\n               type          =\
    \ 1*32(ALPHA / DIGIT)\n               subtype       = 1*32(ALPHA / DIGIT)\n  \
    \ In other words, a non-optional \"E2U\" (used to denote ENUM only\n   Rewrite\
    \ Rules in order to mitigate record collisions) followed by 1\n   or more or more\
    \ Enumservices which indicate what class of\n   functionality a given end point\
    \ offers.  Each Enumservice is\n   indicated by an initial '+' character.\n"
- title: 2.4.2.1.  ENUM Services
  contents:
  - "2.4.2.1.  ENUM Services\n   Enumservice specifications contain the functional\
    \ specification\n   (i.e., what it can be used for), the valid protocols, and\
    \ the URI\n   schemes that may be returned.  Note that there is no implicit mapping\n\
    \   between the textual string \"type\" or \"subtype\" in the grammar for the\n\
    \   Enumservice and URI schemes or protocols.  The mapping, if any, must\n   be\
    \ made explicit in the specification for the Enumservice itself.  A\n   registration\
    \ of a specific Type also has to specify the Subtypes\n   allowed.\n   The only\
    \ exception to the registration rule is for Types and Subtypes\n   used for experimental\
    \ purposes, and those are to start with the facet\n   \"X-\".  These elements\
    \ are unregistered, experimental, and should be\n   used only with the active\
    \ agreement of the parties exchanging them.\n   The registration mechanism is\
    \ specified in Section 3.\n"
- title: 2.5.  What constitutes an 'Enum Resolver'?
  contents:
  - "2.5.  What constitutes an 'Enum Resolver'?\n   There has been some confusion\
    \ over what exactly an ENUM Resolver\n   returns and what relation that has to\
    \ the 'Note 1' section in RFC\n   3402.  On first reading it seems as though it\
    \ might be possible for\n   an ENUM Resolver to return two Rules.\n   The ENUM\
    \ algorithm always returns a single rule.  Specific\n   applications may have\
    \ application-specific knowledge or facilities\n   that allow them to present\
    \ multiple results or speed selection, but\n   these should never change the operation\
    \ of the algorithm.\n"
- title: 3.  Registration mechanism for Enumservices
  contents:
  - "3.  Registration mechanism for Enumservices\n   As specified in the ABNF found\
    \ in Section 2.4.2, an 'enumservice' is\n   made up of 'types' and 'subtypes'.\
    \  For any given 'type', the\n   allowable 'subtypes' must be specified in the\
    \ registration.  There is\n   currently no concept of a registered 'subtype' outside\
    \ the scope of a\n   given 'type'.  Thus the registration process uses the 'type'\
    \ as its\n   main key within the IANA Registry.  While the combination of each\n\
    \   type and all of its subtypes constitutes the allowed values for the\n   'enumservice'\
    \ field, it is not sufficient to simply document those\n   values.  A complete\
    \ registration will also include the allowed URI\n   schemes, a functional specification,\
    \ security considerations,\n   intended usage, and any other information needed\
    \ to allow for\n   interoperability within ENUM.  In order to be a registered\
    \ ENUM\n   Service, the entire specification, including the template, requires\n\
    \   approval by the IESG and publication of the Enumservice registration\n   specification\
    \ as an RFC.\n"
- title: 3.1.  Registration Requirements
  contents:
  - "3.1.  Registration Requirements\n   Service registration proposals are all expected\
    \ to conform to various\n   requirements laid out in the following sections.\n"
- title: 3.1.1.  Functionality Requirement
  contents:
  - "3.1.1.  Functionality Requirement\n   A registered Enumservice must be able to\
    \ function as a selection\n   mechanism when choosing one NAPTR resource record\
    \ from another.  That\n   means that the registration MUST specify what is expected\
    \ when using\n   that very NAPTR record, and the URI which is the outcome of the\
    \ use\n   of it.\n   Specifically, a registered Enumservice MUST specify the URI\
    \ scheme(s)\n   that may be used for the Enumservice, and, when needed, other\n\
    \   information which will have to be transferred into the URI resolution\n  \
    \ process itself (LDAP Distinguished Names, transferring of the AUS\n   into the\
    \ resulting URI, etc).\n"
- title: 3.1.2.  Naming requirement
  contents:
  - "3.1.2.  Naming requirement\n   An Enumservice MUST be unique in order to be useful\
    \ as a selection\n   criteria.  Since an Enumservice is made up of a type and\
    \ a type-\n   dependent subtype, it is sufficient to require that the 'type' itself\n\
    \   be unique.  The 'type' MUST be unique, conform to the ABNF specified\n   in\
    \ Section 2.4.2, and MUST NOT start with the facet \"X-\" which is\n   reserved\
    \ for experimental, private use.\n   The subtype, being dependent on the type,\
    \ MUST be unique within a\n   given 'type'.  It must conform to the ABNF specified\
    \ in Section\n   2.4.2, and MUST NOT start with the facet \"X-\" which is reserved\
    \ for\n   experimental, private use.  The subtype for one type MAY be the same\n\
    \   as a subtype for a different registered type but it is not sufficient\n  \
    \ to simply reference another type's subtype.  The function of each\n   subtype\
    \ must be specified in the context of the type being\n   registered.\n"
- title: 3.1.3.  Security requirement
  contents:
  - "3.1.3.  Security requirement\n   An analysis of security issues is required for\
    \ all registered\n   Enumservices.  (This is in accordance with the basic requirements\
    \ for\n   all IETF protocols.)\n   All descriptions of security issues must be\
    \ as accurate as possible\n   regardless of registration tree.  In particular,\
    \ a statement that\n   there are \"no security issues associated with this Enumservice\"\
    \ must\n   not be confused with \"the security issues associated with this\n \
    \  Enumservice have not been assessed\".\n   There is no requirement that an Enumservice\
    \ must be secure or\n   completely free from risks.  Nevertheless, all known security\
    \ risks\n   must be identified in the registration of an Enumservice.\n   The\
    \ security considerations section of all registrations is subject\n   to continuing\
    \ evaluation and modification.\n   Some of the issues that should be looked at\
    \ in a security analysis of\n   an Enumservice are:\n   1. Complex Enumservices\
    \ may include provisions for directives that\n      institute actions on a user's\
    \ resources.  In many cases provision\n      can be made to specify arbitrary\
    \ actions in an unrestricted\n      fashion which may then have devastating results.\
    \  Especially if\n      there is a risk for a new ENUM lookup, and because of\
    \ that an\n      infinite loop in the overall resolution process of the E.164.\n\
    \   2. Complex Enumservices may include provisions for directives that\n     \
    \ institute actions which, while not directly harmful, may result in\n      disclosure\
    \ of information that either facilitates a subsequent\n      attack or else violates\
    \ the users privacy in some way.\n   3. An Enumservice might be targeted for applications\
    \ that require\n      some sort of security assurance but do not provide the necessary\n\
    \      security mechanisms themselves.  For example, an Enumservice could\n  \
    \    be defined for storage of confidential security services\n      information\
    \ such as alarm systems or message service passcodes,\n      which in turn require\
    \ an external confidentiality service.\n"
- title: 3.1.4.  Publication Requirements
  contents:
  - "3.1.4.  Publication Requirements\n   Proposals for Enumservices registrations\
    \ MUST be published as one of\n   the following documents; RFC on the Standards\
    \ Track, Experimental\n   RFC, or as a BCP.\n   IANA will retain copies of all\
    \ Enumservice registration proposals and\n   \"publish\" them as part of the Enumservice\
    \ Registration tree itself.\n"
- title: 3.2.  Registration procedure
  contents:
  - '3.2.  Registration procedure

    '
- title: 3.2.1.  IANA Registration
  contents:
  - "3.2.1.  IANA Registration\n   Provided that the Enumservice has obtained the\
    \ necessary approval,\n   and the RFC is published, IANA will register the Enumservice\
    \ and make\n   the Enumservice registration available to the community in addition\n\
    \   to the RFC publication itself.\n"
- title: 3.2.1.1.  Location of Enumservice Registrations
  contents:
  - "3.2.1.1.  Location of Enumservice Registrations\n   Enumservice registrations\
    \ will be published in the IANA repository\n   and made available via anonymous\
    \ FTP at the following URI:\n   \"ftp://ftp.iana.org/assignments/enum-services/\"\
    .\n"
- title: 3.2.1.2.  Change Control
  contents:
  - "3.2.1.2.  Change Control\n   Change control of Enumservices stay with the IETF\
    \ via the RFC\n   publication process.  Especially, Enumservice registrations\
    \ may not\n   be deleted; Enumservices which are no longer believed appropriate\
    \ for\n   use can be declared OBSOLETE by publication of a new RFC and a change\n\
    \   to their \"intended use\" field; such Enumservice will be clearly\n   marked\
    \ in the lists published by IANA.\n"
- title: 3.2.2.  Registration Template
  contents:
  - "3.2.2.  Registration Template\n   Enumservice Type:\n   Enumservice Subtype(s):\n\
    \   URI Scheme(s):\n   Functional Specification:\n   Security considerations:\n\
    \   Intended usage: (One of COMMON, LIMITED USE or OBSOLETE)\n   Author:\n   Any\
    \ other information that the author deems interesting:\n   Note: In the case where\
    \ a particular field has no value, that field\n   is left completely blank, especially\
    \ in the case where a given type\n   has no subtypes.\n"
- title: 4.  Examples
  contents:
  - "4.  Examples\n   The examples below use theoretical services that contain Enumservices\n\
    \   which might not make sense, but that are still used for educational\n   purposes.\
    \  For example, the protocol used is in some cases exactly\n   the same string\
    \ as the URI scheme.  That was the specification in RFC\n   2916, but this 'default'\
    \ specification of an Enumservice is no longer\n   allowed.  All Enumservices\
    \ need to be registered explicitly by the\n   procedure specified in section Section\
    \ 3.\n"
- title: 4.1.  Example
  contents:
  - "4.1.  Example\n   $ORIGIN 3.8.0.0.6.9.2.3.6.1.4.4.e164.arpa.\n      NAPTR 10\
    \ 100 \"u\" \"E2U+sip\" \"!^.*$!sip:info@example.com!\" .\n      NAPTR 10 101\
    \ \"u\" \"E2U+h323\" \"!^.*$!h323:info@example.com!\" .\n      NAPTR 10 102 \"\
    u\" \"E2U+msg\" \"!^.*$!mailto:info@example.com!\" .\n   This describes that the\
    \ domain 3.8.0.0.6.9.2.3.6.1.4.4.e164.arpa. is\n   preferably contacted by SIP,\
    \ secondly via H.323 for voice, and\n   thirdly by SMTP for messaging.  Note that\
    \ the tokens \"sip\", \"h323\",\n   and \"msg\" are Types registered with IANA,\
    \ and they have no implicit\n   connection with the protocols or URI schemes with\
    \ the same names.\n   In all cases, the next step in the resolution process is\
    \ to use the\n   resolution mechanism for each of the protocols, (specified by\
    \ the URI\n   schemes sip, h323 and mailto) to know what node to contact for each.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   RFC 2916 (which this document replaces) requested\
    \ IANA to delegate\n   the E164.ARPA domain following instructions to be provided\
    \ by the\n   IAB.  The domain was delegated according to those instructions.\n\
    \   Names within this zone are to be delegated to parties according to\n   the\
    \ ITU-T Recommendation E.164.  The names allocated should be\n   hierarchic in\
    \ accordance with ITU-T Recommendation E.164, and the\n   codes should be assigned\
    \ in accordance with that Recommendation.\n   IAB is to coordinate with ITU-T\
    \ TSB if the technical contact for the\n   domain e164.arpa is to change, as ITU-T\
    \ TSB has an operational\n   working relationship with this technical contact\
    \ which needs to be\n   reestablished.\n   Delegations in the zone e164.arpa (not\
    \ delegations in delegated\n   domains of e164.arpa) should be done after Expert\
    \ Review, and the\n   IESG will appoint a designated expert.\n   IANA has created\
    \ a registry for Enumservices as specified in Section\n   3.  Whenever a new Enumservice\
    \ is registered by the RFC process in\n   the IETF, IANA is at the time of publication\
    \ of the RFC to register\n   the Enumservice and add a pointer to the RFC itself.\n"
- title: 6.  Security Considerations
  contents:
  - '6.  Security Considerations

    '
- title: 6.1.  DNS Security
  contents:
  - "6.1.  DNS Security\n   As ENUM uses DNS, which in its current form is an insecure\
    \ protocol,\n   there is no mechanism for ensuring that the data one gets back\
    \ is\n   authentic.  As ENUM is deployed on the global Internet, it is\n   expected\
    \ to be a popular target for various kind of attacks, and\n   attacking the underlying\
    \ DNS infrastructure is one way of attacking\n   the ENUM service itself.\n  \
    \ There are multiple types of attacks that can happen against DNS that\n   ENUM\
    \ implementations should be aware of.  The following threats are\n   taken from\
    \ Threat Analysis Of The Domain Name System [10]:\n   Packet Interception\n  \
    \    Some of the simplest threats against DNS are various forms of\n      packet\
    \ interception: monkey-in-the-middle attacks, eavesdropping\n      on requests\
    \ combined with spoofed responses that beat the real\n      response back to the\
    \ resolver, and so forth.  In any of these\n      scenarios, the attacker can\
    \ simply tell either party (usually the\n      resolver) whatever it wants that\
    \ party to believe.  While packet\n      interception attacks are far from unique\
    \ to DNS, DNS's usual\n      behavior of sending an entire query or response in\
    \ a single\n      unsigned, unencrypted UDP packet makes these attacks particularly\n\
    \      easy for any bad guy with the ability to intercept packets on a\n     \
    \ shared or transit network.\n   ID Guessing and Query Prediction\n      Since\
    \ the ID field in the DNS header is only a 16-bit field and\n      the server\
    \ UDP port associated with DNS is a well-known value,\n      there are only 2**32\
    \ possible combinations of ID and client UDP\n      port for a given client and\
    \ server.  Thus it is possible for a\n      reasonable brute force attack to allow\
    \ an attacker to masquerade\n      as a trusted server.  In most respects, this\
    \ attack is similar to\n      a packet interception attack except that it does\
    \ not require the\n      attacker to be on a transit or shared network.\n   Name-based\
    \ Attacks\n      Name-based attacks use the actual DNS caching behavior as a tool\n\
    \      to insert bad data into a victim's cache, thus potentially\n      subverting\
    \ subsequent decisions based on DNS names.  Most examples\n      occur with CNAME,\
    \ NS and DNAME Resource Records as they redirect a\n      victim's query to another\
    \ location.  The common thread in all of\n      these attacks is that response\
    \ messages allow the attacker to\n      introduce arbitrary DNS names of the attacker's\
    \ choosing and\n      provide further information that the attacker claims is\
    \ associated\n      with those names; unless the victim has better knowledge of\
    \ the\n      data associated with those names, the victim is going to have a\n\
    \      hard time defending against this class of attacks.\n   Betrayal By A Trusted\
    \ Server\n      Another variation on the packet interception attack is the trusted\n\
    \      server that turns out not to be so trustworthy, whether by\n      accident\
    \ or by intent.  Many client machines are only configured\n      with stub resolvers,\
    \ and use trusted servers to perform all of\n      their DNS queries on their\
    \ behalf.  In many cases the trusted\n      server is furnished by the user's\
    \ ISP and advertised to the client\n      via DHCP or PPP options.  Besides accidental\
    \ betrayal of this\n      trust relationship (via server bugs, successful server\
    \ break-ins,\n      etc), the server itself may be configured to give back answers\n\
    \      that are not what the user would expect (whether in an honest\n      attempt\
    \ to help the user or to further some other goal such as\n      furthering a business\
    \ partnership between the ISP and some third\n      party).\n   Denial of Service\n\
    \      As with any network service (or, indeed, almost any service of any\n  \
    \    kind in any domain of discourse), DNS is vulnerable to denial of\n      service\
    \ attacks.  DNS servers are also at risk of being used as\n      denial of service\
    \ amplifiers, since DNS response packets tend to\n      be significantly longer\
    \ than DNS query packets.\n   Authenticated Denial of Domain Names\n      The\
    \ existence of RR types whose absence causes an action other\n      than immediate\
    \ failure (such as missing MX and SRV RRs, which fail\n      over to A RRs) constitutes\
    \ a real threat.  In the specific case of\n      ENUM, even the immediate failure\
    \ of a missing RR can be considered\n      a problem as a method for changing\
    \ call routing policy.\n   Because of these threats, a deployed ENUM service SHOULD\
    \ include\n   mechanisms which ameliorate these threats.  Most of these threats\
    \ can\n   be solved by verifying the authenticity of the data via mechanisms\n\
    \   such as DNSSEC [8] once it is deployed.  Others, such and Denial Of\n   Service\
    \ attacks, cannot be solved by data authentication.  It is\n   important to remember\
    \ that these threats include not only the NAPTR\n   lookups themselves, but also\
    \ the various records needed for the\n   services to be useful (for example NS,\
    \ MX, SRV and A records).\n   Even if DNSSEC is deployed, a service that uses\
    \ ENUM for address\n   translation should not blindly trust that the peer is the\
    \ intended\n   party as all kind of attacks against DNS can not be protected against\n\
    \   with DNSSEC.  A service should always authenticate the peers as part\n   of\
    \ the setup process for the service itself and never blindly trust\n   any kind\
    \ of addressing mechanism.\n   Finally, as an ENUM service will be implementing\
    \ some type of\n   security mechanism, software which implements ENUM MUST be\
    \ prepared\n   to receive DNSSEC and other standardized DNS security responses,\n\
    \   including large responses, EDNS0 signaling, unknown RRs, etc.\n"
- title: 6.2.  Caching Security
  contents:
  - "6.2.  Caching Security\n   The caching in DNS can make the propagation time for\
    \ a change take\n   the same amount of time as the time to live for the NAPTR\
    \ records in\n   the zone that is changed.  The use of this in an environment\
    \ where\n   IP-addresses are for hire (for example, when using DHCP [9]) must\n\
    \   therefore be done very carefully.\n"
- title: 6.3.  Call Routing Security
  contents:
  - "6.3.  Call Routing Security\n   There are a number of countries (and other numbering\
    \ environments) in\n   which there are multiple providers of call routing and\
    \ number/name-\n   translation services.  In these areas, any system that permits\
    \ users,\n   or putative agents for users, to change routing or supplier\n   information\
    \ may provide incentives for changes that are actually\n   unauthorized (and,\
    \ in some cases, for denial of legitimate change\n   requests).  Such environments\
    \ should be designed with adequate\n   mechanisms for identification and authentication\
    \ of those requesting\n   changes and for authorization of those changes.\n"
- title: 6.4.  URI Resolution Security
  contents:
  - "6.4.  URI Resolution Security\n   A large amount of Security Issues have to do\
    \ with the resolution\n   process itself, and use of the URIs produced by the\
    \ DDDS mechanism.\n   Those have to be specified in the registration of the Enumservice\n\
    \   used, as specified in Section 3.1.3.\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   Support and ideas leading to RFC 2916 have come from\
    \ people at\n   Ericsson, Bjorn Larsson and the group which implemented this scheme\n\
    \   in their lab to see that it worked.  Input has also arrived from\n   ITU-T\
    \ SG2, Working Party 1/2 (Numbering, Routing, Global Mobility and\n   Enumservice\
    \ Definition), the ENUM working group in the IETF, John\n   Klensin and Leif Sunnegardh.\n\
    \   This update of RFC 2916 is created with specific input from: Randy\n   Bush,\
    \ David Conrad, Richard Hill, Jon Peterson, Jim Reid, Joakim\n   Stralmark, Robert\
    \ Walter and James Yu.\n"
- title: 8.  Changes since RFC 2916
  contents:
  - "8.  Changes since RFC 2916\n   Part from clarifications in the text in this document,\
    \ the major\n   changes are two:\n   The document uses an explicit DDDS algorithm,\
    \ and not only NAPTR\n   resource records in an \"ad-hoc\" mode.  In reality this\
    \ doesn't imply\n   any changes in deployed base of applications, as the algorithm\
    \ used\n   for ENUM resolution is exactly the same.\n   The format of the service\
    \ field has changed.  The old format was of\n   the form \"example+E2U\", while\
    \ the new format is \"E2U+example\".\n   Reason for this change have to with the\
    \ added subtypes in the\n   enumservice, the ability to support more than one\
    \ enumservice per\n   NAPTR RR, and a general agreement in the IETF that the main\
    \ selector\n   between different NAPTR with the same owner (E2U in this case)\
    \ should\n   be first.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [1]  Bradner, S., \"Key words for use in RFCs\
    \ to Indicate Requirement\n        Levels\", BCP 14, RFC 2119, March 1997.\n \
    \  [2]  Mealling, M., \"Dynamic Delegation Discovery System (DDDS) Part\n    \
    \    Three: The Domain Name System (DNS) Database\", RFC 3403, October\n     \
    \   2002.\n   [3]  Mealling, M., \"Dynamic Delegation Discovery System (DDDS)\
    \ Part\n        Four: The Uniform Resource Identifiers (URI) Resolution\n    \
    \    Application\", RFC 3404, October 2002.\n   [4]  Berners-Lee, T., Fielding,\
    \ R. and L. Masinter, \"Uniform Resource\n        Identifiers (URI): Generic Syntax\"\
    , RFC 2396, August 1998.\n   [5]  ITU-T, \"The International Public Telecommunication\
    \ Number Plan\",\n        Recommendation E.164, May 1997.\n   [6]  Mealling, M.,\
    \ \"Dynamic Delegation Discovery System (DDDS) Part\n        One: The Comprehensive\
    \ DDDS\", RFC 3401, October 2002.\n   [7]  Mealling, M., \"Dynamic Delegation\
    \ Discovery System (DDDS) Part\n        Two: The Algorithm\", RFC 3402, October\
    \ 2002.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [8]  Eastlake, D., \"Domain Name System Security\
    \ Extensions\", RFC\n        2535, March 1999.\n   [9]  Droms, R., \"Dynamic Host\
    \ Configuration Protocol\", RFC 2131,\n        March 1997.\n   [10] Atkins, D.\
    \ and R. Austein, \"Threat Analysis Of The Domain Name\n        System\", Work\
    \ in Progress, April 2004.\n"
- title: 10.  Authors' Addresses
  contents:
  - "10.  Authors' Addresses\n   Patrik Faltstrom\n   Cisco Systems Inc\n   Ledasa\n\
    \   273 71 Lovestad\n   Sweden\n   EMail: paf@cisco.com\n   URI:   http://www.cisco.com\n\
    \   Michael Mealling\n   VeriSign\n   21345 Ridgetop Circle\n   Sterling, VA \
    \ 20166\n   US\n   Email: michael@verisignlabs.com\n   URI:   http://www.verisignlabs.com\n"
- title: 11.  Full Copyright Statement
  contents:
  - "11.  Full Copyright Statement\n   Copyright (C) The Internet Society (2004).\
    \  This document is subject\n   to the rights, licenses and restrictions contained\
    \ in BCP 78, and\n   except as set forth therein, the authors retain all their\
    \ rights.\n   This document and the information contained herein are provided\
    \ on an\n   \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n\
    \   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
