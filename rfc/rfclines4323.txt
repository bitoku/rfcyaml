Abstract This document defines a basic set of managed objects for SNMP based management of extended QoS features of Cable Modems (CMs) and Cable Modem Termination Systems (CMTSs) conforming to the Data over Cable System (DOCSIS)
specifications versions 1.1 and 2.0.
This memo is a product of the IP over Cable Data Network (IPCDN) working group within the Internet Engineering Task Force (IETF).
The Internet Standard Management Framework
For a detailed overview of the documents that describe the current Internet Standard Management Framework, please refer to section 7 of RFC 3410 [15].
Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
MIB objects are generally accessed through the Simple Network Management Protocol (SNMP).
Objects in the MIB are defined using the mechanisms defined in the Structure of Management Information (SMI).
This memo specifies a MIB module that is compliant to the SMIv2, which is described in STD 58, RFC 2578 [1], STD 58, RFC 2579 [2] and STD 58, RFC 2580 [3].
Active QoS Parameter Set (QPS).
The set of QoS parameters that describe the current level of service provided to a Service Flow (SF).
An SF with a non empty Active QPS.
Admitted QPS    Admitted QoS Parameter Set.
The set of QoS parameters that describe a level of service that the Service Flow is not currently using, but that it is guaranteed to receive upon the SF's request to make the set Active.
A modem connecting a subscriber's LAN to the Cable Television (CATV)
DOCSIS CMs operate as a MAC layer bridge between the home LAN and the Cable Television (CATV)
The "head end" device providing connectivity between the RF network and the Internet.
The direction from the head end towards the subscriber.
A DOCSIS MAC management message requesting the dynamic creation of a new Service Flow.
New SFs are created with a three  message exchange of a DSA REQ, DSA RSP, and DSA ACK.
A DOCSIS MAC management message requesting a change to the attributes of a Service Flow.
SFs are changed with a three message exchange of a DSC REQ, DSC RSP, and DSC ACK.
A DOCSIS MAC management message requesting the deletion of a Service Flow.
SFs are deleted with a two message exchange of a DSD REQ and DSD ACK.
The origination point in most cable systems of the subscriber video signals.
It is generally also the location of the CMTS.
A feature of DOCSIS 1.1 and 2.0 in which header bytes that are common in a sequence of packets of a Service Flow are replaced by a one byte PHSI Index (PHSI) when transmitting the packet on the RF network.
All CMs have a Primary Upstream Service Flow and a Primary Downstream Service Flow.
They provide a default path for forwarded packets that are not classified to any other Service Flow.
A QoS Parameter Set describing an envelope of service within which a Service Flow is authorized to request admission.
All existing Service Flows must have a non empty Provisioned QPS; thus, all SFs are considered to be "Provisioned".
In particular, this abbreviation refers to the radio frequencies for Cable Television (CATV).
A named set of QoS parameters.
A Service Flow may or may not be associated with a single named Service Class.
A Service Class has as an attribute
a QoS Parameter Set that is used as the default set of values for all Service Flows belonging to the Service Class.
A 16 bit unsigned integer assigned by the CMTS for an Upstream Service Flow with a non  empty Active QoS Parameter Set.
A unidirectional stream of packets between the CM and CMTS.
SFs are characterized as upstream or downstream.
The SF is the fundamental unit of service provided on a DOCSIS CATV network.
A 32 bit unsigned integer assigned by the CMTS to each Service Flow.
The direction from a subscriber CM to the head end CMTS.
This MIB module provides a set of objects required for the management of DOCSIS 1.1 and 2.0 compliant Cable Modems (CM) and Cable Modem Termination Systems (CMTS).
The specification is derived from the DOCSIS 2.0 Radio Frequency Interface specification [4].
Please note that the referenced DOCSIS specifications only requires Cable Modems to process IPv4 customer traffic.
Design choices in this MIB module reflect those requirements.
Future versions of the DOCSIS standard are expected to require support for IPv6 as well.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119 [5].
The textual convention "DocsIetfQosRfMacIfDirection" is defined to indicate the direction of a packet classifier relative to an interface.
It takes the values of either downstream(1) or upstream(2).
The textual convention "DocsIetfQosBitRate" corresponds to the bits per second as defined for QoS Parameter Sets in DOCSIS 1.1 and 2.0.
This definition includes all bits of the Ethernet MAC frame as transmitted on the RF network, starting with the Destination Address and ending with the Ethernet Frame Check Sequence (FCS).
It does NOT includes bits in the DOCSIS MAC header.
The structure of the IPCDN QoS MIB module (DOCS IETF QOS MIB) is summarized below: docsIetfQosMIB docsIetfQosMIBObjects docsIetfQosPktClassTable docsIetfQosPktClassEntry docsIetfQosPktClassId docsIetfQosPktClassDirection docsIetfQosPktClassPriority
docsIetfQosPktClassIpTosLow docsIetfQosPktClassIpTosHigh docsIetfQosPktClassIpTosMask docsIetfQosPktClassIpProtocol docsIetfQosPktClassInetAddressType docsIetfQosPktClassInetSourceAddr
docsIetfQosPktClassDestMacAddr docsIetfQosPktClassDestMacMask docsIetfQosPktClassSourceMacAddr docsIetfQosPktClassEnetProtocolType docsIetfQosPktClassEnetProtocol docsIetfQosPktClassUserPriLow
docsIetfQosParamSetEntry docsIetfQosParamSetServiceClassName docsIetfQosParamSetPriority docsIetfQosParamSetMaxTrafficRate docsIetfQosParamSetMaxTrafficBurst docsIetfQosParamSetMinReservedRate docsIetfQosParamSetMinReservedPkt
docsIetfQosParamSetNomGrantInterval docsIetfQosParamSetTolGrantJitter docsIetfQosParamSetGrantsPerInterval docsIetfQosParamSetTosAndMask docsIetfQosParamSetTosOrMask
docsIetfQosServiceFlowEntry docsIetfQosServiceFlowId docsIetfQosServiceFlowSID docsIetfQosServiceFlowDirection docsIetfQosServiceFlowPrimary
docsIetfQosServiceFlowTimeCreated docsIetfQosServiceFlowTimeActive docsIetfQosServiceFlowPHSUnknowns docsIetfQosServiceFlowPolicedDropPkts docsIetfQosServiceFlowPolicedDelayPkts docsIetfQosUpstreamStatsTable
docsIetfQosDynamicServiceStatsEntry docsIetfQosIfDirection docsIetfQosDSAReqs docsIetfQosDSARsps docsIetfQosDSAAcks docsIetfQosDSCReqs docsIetfQosDSCRsps
docsIetfQosDynamicDeletes docsIetfQosDynamicDeleteFails docsIetfQosDCCReqs docsIetfQosDCCRsps docsIetfQosDCCAcks docsIetfQosDCCs docsIetfQosDCCFails
docsIetfQosServiceFlowLogPkts docsIetfQosServiceFlowLogOctets docsIetfQosServiceFlowLogTimeDeleted docsIetfQosServiceFlowLogTimeCreated docsIetfQosServiceFlowLogTimeActive
docsIetfQosServiceClassTable docsIetfQosServiceClassEntry docsIetfQosServiceClassName docsIetfQosServiceClassStatus docsIetfQosServiceClassMaxTrafficRate docsIetfQosServiceClassMaxTrafficBurst docsIetfQosServiceClassMinReservedRate docsIetfQosServiceClassMinReservedPkt
docsIetfQosServiceClassActiveTimeout docsIetfQosServiceClassAdmittedTimeout docsIetfQosServiceClassSchedulingType docsIetfQosServiceClassRequestPolicy docsIetfQosServiceClassTosAndMask docsIetfQosServiceClassTosOrMask docsIetfQosServiceClassDirection
docsIetfQosServiceClassStorageType docsIetfQosServiceClassDSCPOverwrite docsIetfQosServiceClassPolicyTable docsIetfQosServiceClassPolicyEntry docsIetfQosServiceClassPolicyIndex docsIetfQosServiceClassPolicyName docsIetfQosServiceClassPolicyRulePriority docsIetfQosServiceClassPolicyStatus docsIetfQosServiceClassPolicyStorageType docsIetfQosPHSTable docsIetfQosPHSEntry docsIetfQosPHSField docsIetfQosPHSMask docsIetfQosPHSSize docsIetfQosPHSVerify docsIetfQosPHSIndex
This MIB module is organized as 11 tables.
Most tables are implemented in both the CM and CMTS; the docsIetfQosUpstreamStatsTable and docsIetfQosServiceFlowLogTable are implemented on the CMTS only.
The docsIetfQosPktClassTable reports the Service Flow Classifiers implemented by the managed device.
The table is indexed by the tuple { ifIndex, docsIetfQosServiceFlowId, docsIetfQosPktClassId }.
The ifIndex corresponds to a CATV MAC interface.
Each CATV MAC interface has a set of Service Flows identified with a docsIetfQosServiceFlowId value that is unique for that interface.
Each Service Flow may have a number of packet classifiers that map packets to the flow.
The ClassifierId for the classifier is unique only within a particular Service Flow.
The semantics of packet classification are provided in [4].
Briefly, the DOCSIS MAC interface calls for matching packets based on values within the 802.2 (LLC), 802.3, IP, and/or UDP/TCP headers.
Packets that map more than one classifier are prioritized according to their docsIetfQosPktClassPriority values.
The docsIetfQosServiceFlowId (an index object) indicates to which Service Flow the packet is classified.
The docsIetfQosPktClassTable is distinct from the docsDevIpFilterTable of [6] in that docsIetfQosPktClassTable is intended only to reflect the state of the Service Flow Classifiers.
Service Flow Classifiers may be created only via a CM configuration file or from the Dynamic Service Addition (DSA) messages.
For this reason, docsIetfQosPktClassTable is read only.
The docsDevIpFilterTable is intended for external policy based administration of packet classifiers.
See the section "Externally Administered Classification", below.
The docsIetfQosParamSetTable reports the values of QoS Parameter Set as defined in Section C.2.2 of [4].
In general, a Service Flow is associated with three different QoS Parameter Sets (QPSs): an "active" QPS, an "admitted" QPS, and a "provisioned" or "authorized" QPS.
The Provisioned QPS describes the maximum service envelope for which the SF is authorized.
The Admitted QPS is the set of services for which a Service Flow has requested admission to the DOCSIS RF network, but which is not yet active.
The Admitted QPS is used during the two phase process of IP Telephony/PacketCable Service Flow admission to admit the bandwidth for a bidirectional voice call when the far end is ringing.
Because ringing may occur for up to four minutes, this permits the bandwidth to be reserved but not actually consumed during this interval.
The Active QPS is the set of services actually being used by the Service Flow.
The DOCSIS v1.1 specification [4] defines what it means for a QPS envelope to be "within" another.
In general, an inner QPS is considered "within" an outer QPS when all QoS parameters represent demands of equal or fewer resources of the network.
In addition to its use as an attribute of a Service Flow, a QPS is also an attribute of a Service Class.
A DOCSIS CM configuration file or DSA message may request the creation of a new SF and give only the Service Class Name.
The CMTS "expands the macro" of a Service Class Name creation by populating the Provisioned, Admitted, and/or Active QPSs of the Service Flow with the QPS of the Service Class Name.
All the QPSs of a Service Flow must be expansions of the same Service Class, and in this case the SF is said to "belong" to the Service Class.
Changing the contents of a Service Class' QPS does not affect the QPS of any Service Flow earlier expanded from that Service Class name.
Only the CMTS implements docsIetfQosServiceClassTable.
See [4], section 8, for a full description and the theory of operation of DOCSIS 1.1 QoS operation.
The docsIetfQosParamSetTable sets are indexed by { ifIndex, docsIetfQosServiceFlowId, docsIetfQosParamSetType}.
ifIndex indicates a particular "DOCSIS MAC Domain".
docsIetfQosServiceFlowId uniquely identifies a Service Flow on that MAC domain.
The docsIetfQosParamSetType indicates whether the row describes an active, admitted, or provisioned QoS Parameter Set.
The docsIetfQosParamSetTable is read only because it indicates the QoS Parameter Set contents as defined by DOCSIS signaling.
The docsIetfQosServiceClassTable is read create to permit managers to define a template of QoS Parameters that can be referenced by DOCSIS modems when creating their QoS Parameter Sets.
The DOCS IF MIB [7] specifies a docsIfQosProfileTable to describe the set of Class Of Service (COS) parameters associated with a COS "profile".
The docsIfCmServiceTable, which contains one entry per SID, references this table with a docsIfCmServiceQosProfile number.
The DOCSIS 1.1 and 2.0 CM registration process allows a modem to register as operating with DOCSIS 1.0, DOCSIS 1.1, or DOCSIS 2.0 functionality.
For ease of expression, we call a modem registering with DOCSIS 1.0 functionality a "DOCSIS 1.0 modem", regardless of the modem's capabilities.
A CMTS or CM supporting DOCSIS 1.0, as well as DOCSIS 1.1, and/or DOCSIS 2.0 implements both the tables of [7] and the tables of this MIB module.
The interoperation goal is that before modem registration, the DOCSIS 1.0 MIB [7] applies.
After registration, either the DOCSIS 1.0 or DOCSIS 1.1/2.0 MIB applies, depending on the mode with which the modem registered.
The specific interoperation rules are: 1.
When a CM initially ranges, the CM implements a row in the DOCS IF MIB docsIfCmServiceTable, and the CMTS implements a row in the DOCS IF MIB docsIfCmtsServiceTable corresponding to the default upstream Service ID (SID) used for pre registration upstream traffic.
For historical compatibility, a row may be created for the docsIfQosProfileTable with default values, which may be referenced by the docsIfCmServiceTable entries.
Both a CMTS and CM implementing this MIB MUST NOT implement docsIetfQosParamSetTable or docsIetfQosServiceFlowTable rows until after the CM registers with DOCSIS 1.1 or 2.0 modem operation.
When a modem registers with the CMTS as a "DOCSIS 1.1" or "DOCSIS 2.0" modem, any exclusively referenced row in DOCS IF  MIB docsIfQosProfileTable representing the modem's upstream QoS profile for pre registration traffic MUST be removed.
Multiply referenced rows may remain.
The docsIfCmServiceQosProfile object in the CM's row of docsIfCmServiceTable MUST be set to zero.
The docsIfCmServiceTable row for the DOCSIS 1.1 or DOCSIS 2.0 modem continues to exist, and the various statistic objects in that row are incremented.
The CMTS should retain a docsIfCmtsServiceTable entry for the DOCSIS 1.1 or DOCSIS 2.0 CM.
When a DOCSIS 1.1 or DOCSIS 2.0 modem registers, both the CMTS and CM represent all Service Flows described in the modem configuration file in docsIetfQosParamSetTable and docsIetfQosServiceFlowTable.
1.0 modems do not have entries in the DOCS IETF QOS MIB.
The docsIetfQosServiceFlowTable provides read only information about all the Service Flows known by the device.
It is indexed by the combination of { ifIndex, dosQosServiceFlowId }, where ifIndex corresponds to a CATV MAC interface and docsIetfQosServiceFlowId
is the 32 bit integer assigned by the CMTS controlling the MAC domain.
A CM typically has only a single CATV MAC interface, whereas a CMTS may have several.
See [7] for a description of the ifIndex numbering for DOCSIS devices.
The table indicates whether a given SF is in the upstream or downstream direction, and whether it is the "primary" SF in that direction.
The primary SF carries traffic that is not otherwise classified to any other SF in that direction.
The docsIetfQosServiceFlowStatsTable provides statistics for all currently existing SFs known by the managed device.
It provides basic packet and octet counters, as well as certain other SF specific stats such as the time at which the flow was created and how many seconds it has been active.
The table also provides objects that can be used to fine tune admission control decisions; namely, the number of packets dropped or delayed due to QoS policing decisions enforced by the managed device.
The model of the Service Flows stats table is that there exists a Service Flow Classification function followed by a Service Flow maximum rate Policing function for packets transmitted onto the DOCSIS RF network, as depicted below.
Delayed Packets intended for transmission onto the DOCSIS RF network (upstream or downstream)
are first classified to a Service Flow by matching one of several possible classifiers associated with that Service Flow.
The docsIetfQosPktClassPkts count includes the number of packets that match the classifier, regardless of the eventual disposition of the packet.
DOCSIS requires that each Service Flow be policed to maintain a maximum rate of transmission.
This is performed by either dropping or delaying a packet on that Service Flow.
The docsIetfQosServiceFlowPolicedDropPkts object counts the number of Service Flow packets dropped by the policing function.
The docsIetfQosServiceFlowPolicedDelayPkts counts the number of packets delayed but still forwarded.
The docsIetfQosServiceFlowPkts object counts the total number of packets forwarded beyond the policing function intended for eventual transmission onto the DOCSIS RF network.
Although packets may later be dropped by other functions (e.g., a transmit queue overflow on a DOCSIS hardware transmitter), the docsIetfQos MIB per service flow counters are not affected.
This table provides statistics that are measured only at the CMTS in the upstream direction.
These include counts of fragmentation headers received, fragments discarded, and concatenation headers received.
This table provides read only stats on the operation of the Dynamic Service state machines as specified in section 9.4 of [4].
It provides a set of 14 counters in each direction for a DOCSIS MAC layer interface.
That is, each DOCSIS MAC layer interface has one row for downstream stats and a second row for upstream stats.
Eight of the counters are DSx packet type counts, one counter for each of the eight DSx packet types.
For example, the docsIetfQosDSAReqs object in the upstream row at the CMTS counts the number of DSA REQ messages received by the CMTS from that interface.
The docsIetfQosDSAReqs object in the downstream row at the CMTS counts the number of DSA REQ messages transmitted by the CMTS on that interface.
The remaining six counters per (interface, direction) combination count the number of successful and unsuccessful transactions that were initiated on the interface and direction.
For example, the upstream docsIetfQosDynamicAdds
the number of successfully completed CM initiated dynamic additions, because at the CMTS a CM initiated DSA starts in the upstream direction.
at a CMTS is the number of successful CMTS initiated DSA transactions.
Dynamic service transactions can fail for a number of reasons, as listed in the state machines of section 9.4.
Rather than include still more counters for each different failure reason, they are grouped into a single count, e.g., docsIetfQosDynamicAddFails.
Again, this object exists in both directions, so that locally originated and remotely originated transaction failures are counted separately.
Further troubleshooting of transaction failures will require vendor specific queries and operation.
docsIetfQosServiceFlowLogTable This table contains a log of the Service Flows that no longer exist in the docsIetfQosServiceFlowTable.
It is intended to be periodically polled by traffic monitoring and billing agents.
It is implemented only at the CMTS.
It contains a chronological log of SF session statistics, including a total count of packets and octets transferred on the SF.
It includes time stamps of the SF creation and deletion time, and of its number of active seconds.
The active second count is the count of seconds that the SF had a non empty Active QoS Parameter Set, i.e., it was eligible to pass data.
For unicast SFs, it includes the CM MAC address associated with the flow for billing reference purposes.
The maximum number of log records kept by a CMTS and the duration that a log record is maintained in the table are vendor specific.
An explicit control object is provided so that the monitoring application can explicitly delete records it has read.
This table defines the Service Class Name and references a QoS Parameter Set for each Service Class defined in a CMTS.
It is indexed by the Service Class Name string itself.
The table is read  create on a CMTS, and is not implemented in a CM.
Each entry of the docsIetfQosServiceClassTable should define a template for flows in a given direction (upstream or downstream).
Some parameters of the docsIetfQosServiceClassTable are specific to a particular direction, and so their values are not applicable when used as a template for flows in the other direction.
The docsIetfQosServiceClassPolicyTable can be referenced by the docsDevFilterPolicyTable of [6] in order to have a "policy" that classifies packets to a named Service Class.
This is one mechanism by which "external" entities (such as an SNMP manager) may control the classification of a packet for QoS purposes.
Entries are indexed by a small integer docsIetfQosServiceClassPolicyIndex.
They provide a Service Class Name and a Rule Priority.
A policy referencing a row of this table intends the packet to be forwarded on a Service Flow "belonging" to the named Service Class.
See section 3, "Externally Administered Classification", below.
This table is implemented on both the CM and CMTS, and is read create on both.
The Payload Header Suppression (PHS) feature of DOCSIS 1.1 and 2.0 permits packets to replace the unchanging bytes of the Ethernet, IP, and UDP headers with a one byte index when transmitting on the cable network.
This is especially useful for IP Telephony packets, where such suppression can result in almost twice the number of calls supported within the same upstream channel.
Each entry of the table corresponds to a PHS Rule as described in section 8.4 of [4].
The rules are identified by their corresponding Service Flow ID and docsIetfQosPktClassId.
A PHS rule is associated with exactly one classifier.
The table is therefore indexed by the tuple { ifIndex, docsIetfQosServiceFlowId, docsIetfQosPktClassId}.
This table is read only, and MUST be implemented on both the CM and CMTS when PHS is supported.
The docsIetfQosCmtsMacToSrvFlowTable describes the mapping of CM MAC addresses to the Service Flow IDs that are uniquely identified with that CM.
External applications may collect statistics on all packets flowing through a CM by determining the SFID of all of its flows, and then collecting the statistics of packets and bytes for each flow.
Downstream multicast Service Flows are not indicated in the docsIetfQosCmtsMacToSrvFlowTable because they are not associated with only one CM.
Externally Administered Classification DOCSIS 1.1 and 2.0
provide rich semantics for the classification of packets to Service Flows with the Service Flow Classifier table.
Service Flow Classifiers may be created statically in the DOCSIS CM configuration file, or may be created dynamically with Dynamic Service Addition (DSA) and Dynamic Service Change (DSC) DOCSIS MAC messages.
Several major issues arose with the concept of externally administered classification; e.g., should an external SNMP manager be permitted to create classification rows?
One problem was the coordination of classifier IDs because such an approach would require either separate classifier ID number spaces or objects to coordinate both internal and external classifier ID assignments.
A more serious problem, however, was that external creation of SF Classifiers would require "knowledge" of the individual Service Flow ID for Service Flows by external applications.
It was strongly felt by the committee that SFIDs should remain internal DOCSIS objects, and not be transmitted as part of protocol flows, e.g., for IP packet telephony signaling.
DOCSIS 1.1 introduced the concept of named Service Classes for ease of administration within a domain of CMs and CMTSs.
What was desired was to permit external classification of packets to a Service Class, not to a particular Service Flow.
The DOCSIS committee therefore decided to use the already defined IP Packet Filter Table [6] for the external classification of packets for QoS purposes.
The docsDevIpPacketFilterTable defines similar packet matching criteria as does docsIetfQosPktClassTable, but it matches a packet to an arbitrary "policy set" instead of a particular Service Flow.
One of the policies in the policy set then selects the Service Class of the SF on which to forward the packet.
The docsIetfQosServiceClassPolicyTable of this MIB module defines the Service Class Name to which a packet is classified.
The interaction of external and internal packet classification is depicted below.
The processing of an outgoing packet proceeds as follows: 1.
The packet is first checked for matches with rows of the docsDevIpFilterTable.
If it matches, the matching row provides a docsDevFilterPolicyId integer.
The docsDevFilterPolicyId indexes into one (or more) rows of docsDevFilterPolicyTable.
Each row provides an arbitrary RowPointer (docsDevFilterPolicyPtr), corresponding to a policy to be applied to the packet.
This MIB module defines a docsIetfQosServiceClassPolicyTable whose entries may be pointed to by docsDevFilterPolicyPtr in order to classify packets administratively to a named DOCSIS Service Class.
The docsIetfQosServiceClassPolicyEntry provides a Service Class Name (SCN) as docsIetfQosServiceClassPolicyName and a classification rule priority as docsIetfQosServiceClassPolicyRulePriority.
These are submitted to the device's DOCSIS MAC Layer entity as a special form of the MAC DATA.request primitive, as described in Section E.2.1 of [4].
The MAC Layer selects an SFID ("Y") of an active Service Flow belonging to the named class, choosing an SF arbitrarily if there is more than one.
The packet is then classified according to the docsIetfQosPktClassTable, which may classify the packet to a different SFID "X".
Associated with the classifier is a docsIetfQosPktClassPriority.
In the event of a conflict between the SCN determined SFID and the classified SFID, the greater of docsIetfQosPktClassPriority and docsIetfQosServiceClassPolicyRulePriority determines which SFID is selected to forward the packet.
A packet that does not match a docsIetfQosServiceClassPolicyEntry is directly submitted to the DOCSIS MAC layer, where the docsIetfQosPktClassTable selects the SID on which it is to be forwarded.
By convention (in [4]), the "internal" docsIetfQosPktClassPriority values should be in the range 64 191, while the "external" priorities may be either in the range 192 255 to override the internal classification or in the range 0 63 to be overridden by internal classification.
This classification mechanism applies both upstream from the CM and downstream from the CMTS.
4.  DOCSIS and IPv4 Type of Service (ToS)
MIB MIB module relies on the DOCSIS MAC layer protocols and uses objects that reflect the IPv4 Type of Service (ToS) octet as defined in [14].
The applicability of these objects is limited to the DOCSIS access network.
The past and current versions of the DOCSIS specifications for which this MIB module is defined do not reflect Differentiated Services [9] on the DOCSIS access network.
However, with proper selection of values for these objects, the network operator can enforce Differentiated Services Per hop Behaviors (PHBs) on the DOCSIS Access Network, and can configure the modification of the DSCP for certain packet flows as they enter the metro network from the access network.
Essentially this makes the DOCSIS access network TOS marking compatible with the wider use of DSCP outside DOCSIS networks.
Note that because the entire IPv4 TOS octet may be available for modification via the latter mechanism (due to the current MAC level DOCSIS protocols and CLI interface configuration), it is possible that the DOCSIS network could be configured to modify the Explicit Congestion Notification (ECN) bits [10] of certain packets.
This modification of the ECN bits is prevented by the MIB module's design.
The MIB module prohibits the modification of the TOS octet (read only objects: docsIetfQosPktClassIpTosLow, docsIetfQosPktClassIpTosHigh docsIetfQosPktClassIpTosMask, docsIetfQosParamSetTosAndMask, docsIetfQosParamSetTosOrMask) and allows the DSCP field to be modified (read create object: docsIetfQosServiceClassDSCPOverwrite).
This MIB module refers to the SNMPv2 SMI [1] MIB module, SNMPv2
MIB Module, DOCSIS RFI Specification SP RFIv2.0 I06 040804 [4], INET ADDRESS MIB [8]
MIB module, IF MIB [11] MIB module, SNMP FRAMEWORK MIB [12] MIB module, and DIFFSERV  DSCP TC
DOCS IETF QOS MIB DEFINITIONS ::
IMPORTS MODULE IDENTITY, OBJECT TYPE, Integer32,
Counter32, Unsigned32, Counter64, mib 2 FROM SNMPv2
SMI TEXTUAL CONVENTION, MacAddress, RowStatus, TruthValue, TimeStamp, StorageType FROM SNMPv2
TC OBJECT GROUP, MODULE COMPLIANCE FROM SNMPv2
CONF ifIndex, InterfaceIndex FROM IF
MIB InetAddressType, InetAddress, InetPortNumber FROM INET ADDRESS MIB DscpOrAny FROM DIFFSERV DSCP TC SnmpAdminString FROM SNMP FRAMEWORK MIB; docsIetfQosMIB
"200601230000Z"   January 23, 2006 ORGANIZATION
"IETF IP over Cable Data Network (IPCDN)
Working Group" CONTACT INFO "
Co Author: Michael Patrick Postal:
Motorola BCS 111 Locke Drive Marlborough, MA 01752 7214
1 508 786 7563 E mail:
Motorola BCS 111 Locke Drive Marlborough, MA 01752 7214
ftp://ftp.ietf.org/ietf mail archive/ipcdn Co chairs:
Richard Woundy, Richard Woundy@cable.comcast.com Jean Francois Mule
This is the management information for Quality Of Service (QOS) for DOCSIS 1.1 and 2.0.
This version of this MIB module is part of RFC 4323; see the RFC itself for full legal notices."
"Indicates a direction on an RF MAC interface.
The value downstream(1) is from Cable Modem Termination System to Cable Modem.
The value upstream(2) is from Cable Modem to Cable Modem Termination System."
"The rate of traffic in unit of bits per second.
Used to specify traffic rate for QOS.
"The scheduling service provided by a CMTS for an upstream Service Flow.
If the parameter is omitted from an upstream QOS Parameter Set, this object takes the value of bestEffort (2).
This parameter must be reported as undefined (1) for downstream QOS Parameter Sets."
"This table describes the packet classification configured on the CM or CMTS.
The model is that a packet either received as input from an interface or transmitted for output on an interface may be compared against an ordered list of rules pertaining to the packet contents.
Each rule is a row of this table.
A matching rule provides a Service Flow ID to which the packet is classified.
All rules need to match for a packet to match a classifier.
The objects in this row correspond to a set of Classifier Encoding parameters in a DOCSIS MAC management message.
The docsIetfQosPktClassBitMap indicates which particular parameters were present in the classifier as signaled in the DOCSIS message.
If the referenced parameter was not present in the signaled DOCSIS 1.1 and 2.0 Classifier, the corresponding object in this row reports a value as specified in the DESCRIPTION section."
"An entry in this table provides a single packet classifier rule.
The index ifIndex is an ifType of docsCableMaclayer(127).
"Indicates the direction to which the classifier is applied."
"The value specifies the order of evaluation of the classifiers.
The higher the value, the higher the priority.
The value of 0 is used as default in provisioned Service Flows Classifiers.
The default value of 64 is used for dynamic Service Flow Classifiers.
If the referenced parameter is not present in a classifier, this object reports the default value as defined above.
} docsIetfQosPktClassIpTosLow OBJECT TYPE SYNTAX
"The low value of a range of TOS byte values.
If the referenced parameter is not present in a classifier, this object reports the value of 0.
The IP TOS octet, as originally defined in RFC 791, has been superseded by the 6 bit Differentiated Services Field (DSField, RFC 3260) and the 2 bit Explicit Congestion Notification Field (ECN field, RFC 3168).
This object is defined as an 8 bit octet as per the DOCSIS Specification for packet classification.
"The 8 bit high value of a range of TOS byte values.
If the referenced parameter is not present in a classifier, this object reports the value of 0.
The IP TOS octet as originally defined in RFC 791 has been superseded by the 6 bit Differentiated Services Field (DSField, RFC 3260) and the 2 bit Explicit Congestion Notification Field (ECN field, RFC 3168).
This object is defined as an 8 bit octet as defined by the DOCSIS Specification for packet classification.
} docsIetfQosPktClassIpTosMask OBJECT TYPE SYNTAX
"The mask value is bitwise ANDed with TOS byte in an IP packet, and this value is used for range checking of TosLow and TosHigh.
If the referenced parameter is not present in a classifier, this object reports the value of 0.
The IP TOS octet as originally defined in RFC 791 has been superseded by the 6 bit Differentiated Services Field (DSField, RFC 3260) and the 2 bit Explicit Congestion Notification Field (ECN field, RFC 3168).
This object is defined as an 8 bit octet per the DOCSIS Specification for packet classification.
"This object indicates the value of the IP Protocol field required for IP packets to match this rule.
The value 256 matches traffic with any IP Protocol value.
The value 257 by convention matches both TCP and UDP.
If the referenced parameter is not present in a classifier, this object reports the value of 258.
"The type of the Internet address for docsIetfQosPktClassInetSourceAddr, docsIetfQosPktClassInetSourceMask, docsIetfQosPktClassInetDestAddr, and docsIetfQosPktClassInetDestMask.
If the referenced parameter is not present in a classifier, this object reports the value of ipv4(1).
"This object specifies the value of the IP Source Address required for packets to match this rule.
An IP packet matches the rule when the packet IP Source Address bitwise
with the docsIetfQosPktClassInetSourceMask value equals the docsIetfQosPktClassInetSourceAddr value.
The address type of this object is specified by docsIetfQosPktClassInetAddressType.
"This object specifies which bits of a packet's IP Source Address are compared to match this rule.
An IP packet matches the rule when the packet source address bitwise
with the docsIetfQosPktClassInetSourceMask value equals the docsIetfQosIpPktClassInetSourceAddr value.
The address type of this object is specified by docsIetfQosPktClassInetAddressType.
"This object specifies the value of the IP Destination Address required for packets to match this rule.
An IP packet matches the rule when the packet IP Destination Address bitwise
with the docsIetfQosPktClassInetDestMask value equals the docsIetfQosPktClassInetDestAddr value.
The address type of this object is specified by docsIetfQosPktClassInetAddressType.
"This object specifies which bits of a packet's IP Destination Address are compared to match this rule.
An IP packet matches the rule when the packet destination address bitwise
with the docsIetfQosPktClassInetDestMask value equals the docsIetfQosIpPktClassInetDestAddr value.
The address type of this object is specified by docsIetfQosPktClassInetAddressType.
"This object specifies the low end inclusive range of TCP/UDP source port numbers to which a packet is compared.
This object is irrelevant for non TCP/UDP IP packets.
If the referenced parameter is not present in a classifier, this object reports the value of 0.
"This object specifies the high end inclusive range of TCP/UDP source port numbers to which a packet is compared.
This object is irrelevant for non TCP/UDP IP packets.
If the referenced parameter is not present in a classifier, this object reports the value of 65535.
"This object specifies the low end inclusive range of TCP/UDP destination port numbers to which a packet is compared.
If the referenced parameter is not present in a classifier, this object reports the value of 0.
"This object specifies the high end inclusive range of TCP/UDP destination port numbers to which a packet is compared.
If the referenced parameter is not present in a classifier, this object reports the value of 65535.
"An Ethernet packet matches an entry when its destination MAC address bitwise ANDed with docsIetfQosPktClassDestMacMask equals the value of docsIetfQosPktClassDestMacAddr.
} docsIetfQosPktClassDestMacMask OBJECT TYPE SYNTAX
"An Ethernet packet matches an entry when its destination MAC address bitwise ANDed with docsIetfQosPktClassDestMacMask equals the value of docsIetfQosPktClassDestMacAddr.
"An Ethernet packet matches this entry when its source MAC address equals the value of this object.
"This object indicates the format of the layer 3 protocol ID in the Ethernet packet.
A value of none(0) means that the rule does not use the layer 3 protocol type as a matching criteria.
A value of ethertype(1) means that the rule applies only to frames that contain an EtherType value.
Ethertype values are contained in packets using the Dec Intel Xerox (DIX) encapsulation or the RFC1042 Sub Network Access Protocol (SNAP) encapsulation formats.
A value of dsap(2) means that the rule applies only to frames using the IEEE802.3 encapsulation format with a Destination Service Access Point (DSAP) other than 0xAA (which is reserved for SNAP).
A value of mac(3) means that the rule applies only to MAC management messages for MAC management messages.
A value of all(4) means that the rule matches all Ethernet packets.
If the Ethernet frame contains an 802.1P/Q Tag header (i.e., EtherType 0x8100), this object applies to the embedded EtherType field within the 802.1P/Q header.
If the referenced parameter is not present in a classifier, this object reports the value of 0.
"If docsIetfQosEthPktClassProtocolType is none(0), this object is ignored when considering whether a packet matches the current rule.
If dosQosPktClassEnetProtocolType is ethertype(1), this object gives the 16 bit value of the EtherType that the packet must match in order to match the rule.
If docsIetfQosPktClassEnetProtocolType is dsap(2), the lower 8 bits of this object's value must match the DSAP byte of the packet in order to match the rule.
If docsIetfQosPktClassEnetProtocolType is mac(3), the lower 8 bits of this object's value represent a lower bound (inclusive) of MAC management message type codes matched, and the upper 8 bits represent the upper bound (inclusive) of matched MAC message type codes.
Certain message type codes are excluded from matching, as specified in the reference.
If the Ethernet frame contains an 802.1P/Q Tag header (i.e., EtherType 0x8100), this object applies to the embedded EtherType field within the 802.1P/Q header.
If the referenced parameter is not present in the classifier, the value of this object is reported as 0.
"This object applies only to Ethernet frames using the 802.1P/Q tag header (indicated with EtherType 0x8100).
Such frames include a 16 bit Tag that contains a 3 bit Priority field and a 12 bit VLAN number.
Tagged Ethernet packets must have a 3 bit Priority field within the range of docsIetfQosPktClassPriLow to docsIetfQosPktClassPriHigh in order to match this rule.
If the referenced parameter is not present in the classifier, the value of this object is reported as 0.
"This object applies only to Ethernet frames using the 802.1P/Qtag header (indicated with EtherType 0x8100).
Such frames include a 16 bit Tag that contains a 3 bit Priority field and a 12 bit VLAN number.
Tagged Ethernet packets must have a 3 bit Priority field within the range of docsIetfQosPktClassPriLow to docsIetfQosPktClassPriHigh in order to match this rule.
If the referenced parameter is not present in the classifier, the value of this object is reported as 7.
"This object applies only to Ethernet frames using the 802.1P/Q tag header.
Tagged packets must have a VLAN Identifier that matches the value in order to match the rule.
If the referenced parameter is not present in the classifier, the value of this object is reported as 0.
"This object indicates whether or not the classifier is enabled to classify packets to a Service Flow.
If the referenced parameter is not present in the classifier, the value of this object is reported as true(1).
"This object counts the number of packets that have been classified using this entry.
This includes all packets delivered to a Service Flow maximum rate policing function, whether or not that function drops the packets.
This counter's last discontinuity is the ifCounterDiscontinuityTime for the same ifIndex that indexes this object."
"This object indicates which parameter encodings were actually present in the DOCSIS packet classifier encoding signaled in the DOCSIS message that created or modified the classifier.
Note that Dynamic Service Change messages have replace semantics, so that all non default parameters must be present whether the classifier is being created or changed.
A bit of this object is set to 1 if the parameter indicated by the comment was present in the classifier encoding, and to 0 otherwise.
SEQUENCE OF DocsIetfQosParamSetEntry MAX ACCESS
"This table describes the set of DOCSIS 1.1 and 2.0 QOS parameters defined in a managed device.
The ifIndex index specifies a DOCSIS MAC Domain.
The docsIetfQosServiceFlowId index specifies a particular Service Flow.
The docsIetfQosParamSetType index indicates whether the active, admitted, or provisioned QOS Parameter Set is being described by the row.
Only the QOS Parameter Sets of DOCSIS
1.1 and 2.0 Service Flows are represented in this table.
DOCSIS 1.0 QOS service profiles are not represented in this table.
Each row corresponds to a DOCSIS QOS Parameter Set as signaled via DOCSIS MAC management messages.
Each object in the row corresponds to one or part of one DOCSIS 1.1 Service Flow Encoding.
The docsIetfQosParamSetBitMap object in the row indicates which particular parameters were signaled in the original registration or dynamic service request message that created the QOS Parameter Set.
In many cases, even if a QOS Parameter Set parameter was not signaled, the DOCSIS specification calls for a default value to be used.
That default value is reported as the value of the corresponding object in this row.
Many objects are not applicable, depending on the Service Flow direction or upstream scheduling type.
The object value reported in this case is specified in the DESCRIPTION clause."
"A unique set of QOS parameters.
"Refers to the Service Class Name from which the parameter set values were derived.
If the referenced parameter is not present in the corresponding DOCSIS
QOS Parameter Set, the default value of this object is a zero length string.
"The relative priority of a Service Flow.
Higher numbers indicate higher priority.
This priority should only be used to differentiate Service Flow from identical parameter sets.
If the referenced parameter is not present in the corresponding DOCSIS
QOS Parameter Set, the default value of this object is 0.
If the parameter is not applicable, the reported value is 0.
Must count all MAC frame data PDU from the bytes following the MAC header HCS to the end of the CRC.
The number of bytes forwarded is limited during any time interval.
The value 0 means no maximum traffic rate is enforced.
This object applies to both upstream and downstream Service Flows.
If the referenced parameter is not present in the corresponding DOCSIS
QOS Parameter Set, the default value of this object is 0.
If the parameter is not applicable, it is reported as 0.
"Specifies the token bucket size in bytes for this parameter set.
The value is calculated from the byte following the MAC header HCS to the end of the CRC.
This object is applied in conjunction with docsIetfQosParamSetMaxTrafficRate to calculate maximum sustained traffic rate.
If the referenced parameter is not present in the corresponding DOCSIS
QOS Parameter Set, the default value of this object for scheduling types bestEffort (2), nonRealTimePollingService(3), and realTimePollingService(4) is 3044.
If this parameter is not applicable, it is reported as 0.
"Specifies the guaranteed minimum rate in bits/sec for this parameter set.
The value is calculated from the byte following the MAC header HCS to the end of the CRC.
The default value of 0 means that no bandwidth is reserved.
If the referenced parameter is not present in the corresponding DOCSIS
QOS Parameter Set, the default value of this object is 0.
If the parameter is not applicable, it is reported as 0.
"Specifies an assumed minimum packet size in bytes for which the docsIetfQosParamSetMinReservedRate will be provided.
The value is calculated from the byte following the MAC header HCS to the end of the CRC.
If the referenced parameter is omitted from a DOCSIS QOS parameter set, the default value is CMTS implementation dependent.
In this case, the CMTS reports the default value it is using, and the CM reports a value of 0.
If the referenced parameter is not applicable to the direction or scheduling type of the Service Flow, both CMTS and CM report this object's value as 0.
"Specifies the maximum duration in seconds that resources remain unused on an active service flow before CMTS signals that both active and admitted parameters set are null.
The default value of 0 signifies an infinite amount of time.
If the referenced parameter is not present in the corresponding DOCSIS
QOS Parameter Set, the default value of this object is 0.
"Specifies the maximum duration in seconds that resources remain in admitted state before resources must be released.
The value of 0 signifies an infinite amount of time.
If the referenced parameter is not present in the corresponding DOCSIS
QOS Parameter Set, the default value of this object is 200.
"Specifies the maximum concatenated burst in bytes that an upstream Service Flow is allowed.
The value is calculated from the FC byte of the Concatenation MAC Header to the last CRC byte in of the last concatenated MAC frame, inclusive.
The value of 0 specifies no maximum burst.
If the referenced parameter is not present in the corresponding DOCSIS
QOS Parameter Set, the default value of this object for scheduling types bestEffort(2), nonRealTimePollingService(3), and realTimePollingService(4) is 1522.
If the parameter is not applicable, this object's value is reported as 0.
"Specifies the upstream scheduling service used for upstream Service Flow.
If the referenced parameter is not present in the corresponding DOCSIS
QOS Parameter Set of an upstream Service Flow, the default value of this object is bestEffort(2).
For QOS parameter sets of downstream Service Flows, this object's value is reported as undefined(1).
"Specifies the nominal interval in microseconds between successive unicast request opportunities on an upstream Service Flow.
This object applies only to upstream Service Flows with DocsIetfQosSchedulingType of value nonRealTimePollingService(3), realTimePollingService(4), and unsolictedGrantServiceWithAD(5).
The parameter is mandatory for realTimePollingService(4).
If the parameter is omitted with nonRealTimePollingService(3), the CMTS uses an implementation dependent value.
If the parameter is omitted with unsolictedGrantServiceWithAD(5), the CMTS uses as a default value the value of the Nominal Grant Interval parameter.
In all cases, the CMTS reports the value it is using when the parameter is applicable.
The CM reports the signaled parameter value if it was signaled, and 0 otherwise.
If the referenced parameter is not applicable to the direction or scheduling type of the corresponding DOCSIS
QOS Parameter Set, both CMTS and CM report this object's value as 0.
"Specifies the maximum amount of time in microseconds that the unicast request interval may be delayed from the nominal periodic schedule on an upstream Service Flow.
This parameter is applicable only to upstream Service Flows with a DocsIetfQosSchedulingType of realTimePollingService(4) or unsolictedGrantServiceWithAD(5).
If the referenced parameter is applicable but not present in the corresponding DOCSIS
QOS Parameter Set, the CMTS uses an implementation dependent value and reports the value it is using.
The CM reports a value of 0 in this case.
If the parameter is not applicable to the direction or upstream scheduling type of the Service Flow, both CMTS and CM report this object's value as 0.
"Specifies the unsolicited grant size in bytes.
The grant size includes the entire MAC frame data PDU from the Frame Control byte to the end of the MAC frame.
The referenced parameter is applicable only for upstream flows with a DocsIetfQosSchedulingType of unsolicitedGrantServicewithAD(5) or unsolicitedGrantService(6), and it is mandatory when applicable.
Both CMTS and CM report the signaled value of the parameter in this case.
If the referenced parameter is not applicable to the direction or scheduling type of the corresponding DOCSIS
QOS Parameter Set, both CMTS and CM report this object's value as 0.
"Specifies the nominal interval in microseconds between successive data grant opportunities on an upstream Service Flow.
The referenced parameter is applicable only for upstream flows with a DocsIetfQosSchedulingType of unsolicitedGrantServicewithAD(5) or unsolicitedGrantService(6), and it is mandatory when applicable.
Both CMTS and CM report the signaled value of the parameter in this case.
If the referenced parameter is not applicable to the direction or scheduling type of the corresponding DOCSIS
QOS Parameter Set, both CMTS and CM report this object's value as 0.
"Specifies the maximum amount of time in microseconds that the transmission opportunities may be delayed from the nominal periodic schedule.
The referenced parameter is applicable only for upstream flows with a DocsIetfQosSchedulingType of unsolicitedGrantServicewithAD(5) or unsolicitedGrantService(6), and it is mandatory when applicable.
Both CMTS and CM report the signaled value of the parameter in this case.
If the referenced parameter is not applicable to the direction or scheduling type of the corresponding DOCSIS
QOS Parameter Set, both CMTS and CM report this object's value as 0.
"Specifies the number of data grants per Nominal Grant Interval (docsIetfQosParamSetNomGrantInterval).
The referenced parameter is applicable only for upstream flows with a DocsIetfQosSchedulingType of unsolicitedGrantServicewithAD(5) or unsolicitedGrantService(6), and it is mandatory when applicable.
Both CMTS and CM report the signaled value of the parameter in this case.
If the referenced parameter is not applicable to the direction or scheduling type of the corresponding DOCSIS
QOS Parameter Set, both CMTS and CM report this object's value as 0.
"Specifies the AND mask for the IP TOS byte for overwriting IP packet's TOS value.
The IP packet TOS byte is bitwise ANDed with docsIetfQosParamSetTosAndMask, and the result is bitwise ORed with docsIetfQosParamSetTosORMask
and the result is written to the IP packet TOS byte.
A value of 'FF'H for docsIetfQosParamSetTosAndMask and a value of '00'H for docsIetfQosParamSetTosOrMask means that the IP Packet TOS byte is not overwritten.
This combination is reported if the referenced parameter is not present in a QOS Parameter Set.
The IP TOS octet as originally defined in RFC 791 has been superseded by the 6 bit Differentiated Services Field (DSField, RFC 3260) and the 2 bit Explicit Congestion Notification Field (ECN field, RFC 3168).
Network operators SHOULD avoid specifying values of docsIetfQosParamSetTosAndMask and docsIetfQosParamSetTosORMask that would result in the modification of the ECN bits.
In particular, operators should not use values of docsIetfQosParamSetTosAndMask that have either of the least significant two bits set to 0.
Similarly, operators should not use values of docsIetfQosParamSetTosORMask
that have either of the least significant two bits set to 1.
Even though this object is only enforced by the Cable Modem Termination System (CMTS), Cable Modems MUST report the value as signaled in the referenced parameter.
{ docsIetfQosParamSetEntry 17 } docsIetfQosParamSetTosOrMask OBJECT TYPE SYNTAX
"Specifies the OR mask for the IP TOS byte.
See the description of docsIetfQosParamSetTosAndMask for further details.
The IP TOS octet as originally defined in RFC 791 has been superseded by the 6 bit Differentiated Services Field (DSField, RFC 3260) and the 2 bit Explicit Congestion Notification Field (ECN field, RFC 3168).
Network operators SHOULD avoid specifying values of docsIetfQosParamSetTosAndMask and docsIetfQosParamSetTosORMask that would result in the modification of the ECN bits.
"Specifies the maximum latency between the reception of a packet by the CMTS on its NSI and the forwarding of the packet to the RF interface.
A value of 0 signifies no maximum latency is enforced.
This object only applies to downstream Service Flows.
If the referenced parameter is not present in the corresponding downstream DOCSIS QOS Parameter Set, the default value is 0.
This parameter is not applicable to upstream DOCSIS QOS Parameter Sets, and its value is reported as 0 in this case."
"Defines the type of the QOS parameter set defined by this row.
active(1) indicates the Active QOS parameter set, describing the service currently being provided by the DOCSIS MAC domain to the Service Flow.
admitted(2) indicates the Admitted QOS Parameter Set, describing services reserved by the DOCSIS MAC domain for use by the service flow.
provisioned (3) describes the QOS Parameter Set defined in the DOCSIS CM Configuration file for the Service Flow.
A 32 bit mask represented most significant byte   first.
The 32 bit integer represented in this   manner equals the binary value of the referenced   integer parameter of the DOCSIS RFI   specification.
The BITS syntax is not used in order to avoid   the confusion caused by different bit numbering   conventions.
"Specifies which transmit interval opportunities the CM omits for upstream transmission requests and packet transmissions.
This object takes its default value for downstream Service Flows.
Unless otherwise indicated, a bit value of 1 means that a CM must not use that opportunity for upstream transmission.
If bit 0 is the least significant bit of the least significant (4th) octet, and if bit number is increased with significance, the bit definitions are defined as follows: broadcastReqOpp(0)
: all CMs broadcast request opportunities priorityReqMulticastReq(1): priority request multicast request opportunities reqDataForReq(2): request/data opportunities for requests reqDataForData(3): request/data opportunities for data piggybackReqWithData(4): piggyback requests with data concatenateData(5): concatenate data fragmentData(6): fragment data suppresspayloadheaders(7): suppress payload headers dropPktsExceedUGSize(8):
A value of 1 means that the Service Flow must drop packets that do not fit in the Unsolicited Grant size.
Each bit corresponds to a parameter   from SP RFI v1.1 I10 037030,
"This object indicates the set of QOS Parameter Set parameters actually signaled in the DOCSIS registration or dynamic service request message that created or modified the QOS Parameter Set.
A bit is set to 1 when the parameter described by the indicated reference section is present in the original request.
Note that when Service Class names are expanded, the registration or dynamic response message may contain parameters as expanded by the CMTS based on a stored service class.
These expanded parameters are not indicated by a 1 bit in this object.
Note that even though some QOS Parameter Set parameters may not be signaled in a message (so that the paramater's bit in this object is 0), the DOCSIS specification requires that default values be used.
These default values are reported as the corresponding object's value in the row.
Note that BITS objects are encoded most significant bit first.
SEQUENCE OF DocsIetfQosServiceFlowEntry MAX ACCESS
"This table describes the set of DOCSIS QOS Service Flows in a managed device."
An entry in the table exists for each Service Flow ID.
The ifIndex is an ifType of docsCableMaclayer(127).
An index assigned to a Service Flow by CMTS.
"Service Identifier (SID) assigned to an admitted or active Service Flow.
This object reports a value of 0 if a Service ID is not associated with the Service Flow.
Only active or admitted upstream Service Flows will have a Service ID (SID).
"The direction of the Service Flow.
"Object reflects whether Service Flow is the primary or a secondary Service Flow.
A primary Service Flow is the default Service Flow for otherwise unclassified traffic and all MAC messages.
Service Flow Stats Table   docsIetfQosServiceFlowStatsTable
SEQUENCE OF DocsIetfQosServiceFlowStatsEntry MAX ACCESS
"This table describes statistics associated with the Service Flows in a managed device."
"Describes a set of Service Flow statistics.
An entry in the table exists for each Service Flow ID.
The ifIndex is an ifType of docsCableMaclayer(127).
For incoming upstream CMTS service flows, this object counts the number of Packet Data PDUs actually received on the Service Flow identified by the SID for which the packet was scheduled.
CMs not classifying downstream packets may report this object's value as 0 for downstream Service Flows.
This object does not count MAC specific management messages.
Particularly for UGS flows, packets sent on the primary Service Flow in violation of the UGS grant size should be counted only by the instance of this object that is associated with the primary service flow.
Unclassified upstream user data packets (i.e., non  MAC management) forwarded to the primary upstream Service Flow should be counted by the instance of this object that is associated with the primary service flow.
This object does include packets counted by docsIetfQosServiceFlowPolicedDelayPkts, but does not include packets counted by docsIetfQosServiceFlowPolicedDropPkts and docsIetfQosServiceFlowPHSUnknowns.
This counter's last discontinuity is the ifCounterDiscontinuityTime for the same ifIndex that indexes this object."
"The number of octets from the byte after the MAC header HCS to the end of the CRC for all packets counted in the docsIetfQosServiceFlowPkts object for this row.
Note that this counts the octets after payload header suppression and before payload header expansion have been applied.
This counter's last discontinuity is the ifCounterDiscontinuityTime for the same ifIndex that indexes this object."
"The number of seconds that the service flow has been active.
This counter's last discontinuity is the ifCounterDiscontinuityTime for the same ifIndex that indexes this object."
For incoming upstream CMTS service flows, this object counts the number of packets received with an unknown payload header suppression index.
The service flow is identified by the SID for which the packet was scheduled.
On a CM, only this object's instance for the primary downstream service flow counts packets received with an unknown payload header suppression index.
All other downstream service flows on CM report this objects value as 0.
All outgoing service flows report this object's value as 0.
This counter's last discontinuity is the ifCounterDiscontinuityTime for the same ifIndex that indexes this object."
Classified packets dropped due to other reasons must be counted in ifOutDiscards for the interface of this service flow.
This object reports 0 for incoming service flows.
This counter's last discontinuity is the ifCounterDiscontinuityTime for the same ifIndex that indexes this object."
"This object counts only outgoing packets delayed in order to maintain the Maximum Sustained Traffic Rate.
This object will always report a value of 0 for UGS flows because the Maximum Sustained Traffic Rate does not apply.
This object is 0 for incoming service flows.
This counter's last discontinuity is the ifCounterDiscontinuityTime for the same ifIndex that indexes this object."
"This table describes statistics associated with upstream service flows.
All counted frames must be received without a Frame Check Sequence (FCS) error."
"Describes a set of upstream service flow statistics.
An entry in the table exists for each upstream Service Flow in a managed device.
The ifIndex is an ifType of docsCableMaclayer(127).
"The number of fragmentation headers received on an upstream service flow, regardless of whether the fragment was correctly reassembled into a valid packet.
This counter's last discontinuity is the ifCounterDiscontinuityTime for the same ifIndex that indexes this object."
"The number of upstream fragments discarded and not assembled into a valid upstream packet.
This counter's last discontinuity is the ifCounterDiscontinuityTime for the same ifIndex that indexes this object."
"The number of concatenation headers received on an upstream service flow.
This counter's last discontinuity is the ifCounterDiscontinuityTime for the same ifIndex that indexes this object."
"This table describes statistics associated with the Dynamic Service Flows in a managed device."
"Describes a set of dynamic service flow statistics.
Two entries exist for each DOCSIS MAC layer interface for the upstream and downstream direction.
On the CMTS, the downstream direction row indicates messages transmitted or transactions originated by the CMTS.
The upstream direction row indicates messages received or transaction originated by the CM.
On the CM, the downstream direction row indicates messages received or transactions originated by the CMTS.
The upstream direction row indicates messages transmitted by the CM or transactions originated by the CM.
The ifIndex is an ifType of docsCableMaclayer(127).
"The number of Dynamic Service Addition Requests, including retries.
This counter's last discontinuity is the ifCounterDiscontinuityTime for the same ifIndex that indexes this object."
"The number of Dynamic Service Addition Responses, including retries.
This counter's last discontinuity is the ifCounterDiscontinuityTime for the same ifIndex that indexes this object."
"The number of Dynamic Service Addition Acknowledgements, including retries.
This counter's last discontinuity is the ifCounterDiscontinuityTime for the same ifIndex that indexes this object."
"The number of Dynamic Service Change Requests, including retries.
This counter's last discontinuity is the ifCounterDiscontinuityTime for the same ifIndex that indexes this object."
"The number of Dynamic Service Change Responses, including retries.
This counter's last discontinuity is the ifCounterDiscontinuityTime for the same ifIndex that indexes this object."
{ docsIetfQosDynamicServiceStatsEntry 6 } docsIetfQosDSCAcks OBJECT TYPE SYNTAX
"The number of Dynamic Service Change Acknowledgements, including retries.
This counter's last discontinuity is the ifCounterDiscontinuityTime for the same ifIndex that indexes this object."
"The number of Dynamic Service Delete Requests, including retries.
This counter's last discontinuity is the ifCounterDiscontinuityTime for the same ifIndex that indexes this object."
"The number of Dynamic Service Delete Responses, including retries.
This counter's last discontinuity is the ifCounterDiscontinuityTime for the same ifIndex that indexes this object."
"The number of successful Dynamic Service Addition transactions.
This counter's last discontinuity is the ifCounterDiscontinuityTime for the same ifIndex that indexes this object."
"The number of failed Dynamic Service Addition transactions.
This counter's last discontinuity is the ifCounterDiscontinuityTime for the same ifIndex that indexes this object."
"The number of successful Dynamic Service Change transactions.
This counter's last discontinuity is the ifCounterDiscontinuityTime for the same ifIndex that indexes this object."
"The number of failed Dynamic Service Change transactions.
This counter's last discontinuity is the ifCounterDiscontinuityTime for the same ifIndex that indexes this object."
"The number of successful Dynamic Service Delete transactions.
This counter's last discontinuity is the ifCounterDiscontinuityTime for the same ifIndex that indexes this object."
"The number of failed Dynamic Service Delete transactions.
This counter's last discontinuity is the ifCounterDiscontinuityTime for the same ifIndex that indexes this object."
"The number of Dynamic Channel Change Request messages traversing an interface.
This count is nonzero only on downstream direction rows.
This count should include the number of retries.
This counter's last discontinuity is the ifCounterDiscontinuityTime for the same ifIndex that indexes this object."
"The number of Dynamic Channel Change Response messages traversing an interface.
This count is nonzero only on upstream direction rows.
This count should include the number of retries.
This counter's last discontinuity is the ifCounterDiscontinuityTime for the same ifIndex that indexes this object."
{ docsIetfQosDynamicServiceStatsEntry 17 } docsIetfQosDCCAcks OBJECT
"The number of Dynamic Channel Change Acknowledgement messages traversing an interface.
This count is nonzero only on downstream direction rows.
This count should include the number of retries.
This counter's last discontinuity is the ifCounterDiscontinuityTime for the same ifIndex that indexes this object."
"The number of successful Dynamic Channel Change transactions.
This count is nonzero only on downstream direction rows.
This counter's last discontinuity is the ifCounterDiscontinuityTime for the same ifIndex that indexes this object."
"The number of failed Dynamic Channel Change transactions.
This count is nonzero only on downstream direction rows.
This counter's last discontinuity is the ifCounterDiscontinuityTime for the same ifIndex that indexes this object."
"This table contains a log of the disconnected Service Flows in a managed device."
"The information regarding a single disconnected service flow.
The index assigned to the service flow by the CMTS."
"The MAC address for the cable modem associated with the service flow."
{ docsIetfQosServiceFlowLogEntry 4 } docsIetfQosServiceFlowLogPkts OBJECT TYPE SYNTAX
"The number of packets counted on this service flow after payload header suppression."
{ docsIetfQosServiceFlowLogEntry 5 } docsIetfQosServiceFlowLogOctets OBJECT TYPE SYNTAX
"The total time that the service flow was active."
"The value of docsIetfQosServiceFlowDirection for the service flow."
"The final value of docsIetfQosServiceFlowPolicedDropPkts for the service flow."
"The final value of docsIetfQosServiceFlowPolicedDelayPkts for the service flow."
"Setting this object to the value destroy(6) removes this entry from the table.
Reading this object returns the value active(1)."
SEQUENCE OF DocsIetfQosServiceClassEntry MAX ACCESS
"This table describes the set of DOCSIS QOS Service Classes in a CMTS."
"A provisioned service class on a CMTS.
Each entry defines a template for certain DOCSIS
When a CM creates or modifies an Admitted QOS Parameter Set for a Service Flow, it may reference a Service Class Name instead of providing explicit QOS Parameter Set values.
In this case, the CMTS populates the QOS Parameter Set with the applicable corresponding values from the named Service Class.
Subsequent changes to a Service Class row do not affect the QOS Parameter Set values of any service flows already admitted.
A service class template applies to only a single direction, as indicated in the docsIetfQosServiceClassDirection object.
DOCSIS specifies that the maximum size is 16 ASCII characters including a terminating zero.
The terminating zero is not represented in this SnmpAdminString syntax object.
There is no restriction on the ability to change values in this row while the row is active.
Inactive rows need not be timed out."
The IP TOS octet as originally defined in RFC 791 has been superseded by the 6 bit Differentiated Services Field (DSField, RFC 3260) and the 2 bit Explicit Congestion Notification Field (ECN field, RFC 3168).
Network operators SHOULD avoid specifying values of docsIetfQosServiceClassTosAndMask and docsIetfQosServiceClassTosOrMask that would result in the modification of the ECN bits.
In particular, operators should not use values of docsIetfQosServiceClassTosAndMask that have either of the least significant two bits set to 0.
Similarly,operators should not use values of docsIetfQosServiceClassTosOrMask that have either of the least significant two bits set to 1."
The IP TOS octet as originally defined in RFC 791 has been superseded by the 6 bit Differentiated Services Field (DSField, RFC 3260) and the 2 bit Explicit Congestion Notification Field (ECN field, RFC 3168).
Network operators SHOULD avoid specifying values of docsIetfQosServiceClassTosAndMask and docsIetfQosServiceClassTosOrMask that would result in the modification of the ECN bits.
In particular, operators should not use values of docsIetfQosServiceClassTosAndMask that have either of the least significant two bits set to 0.
Similarly, operators should not use values of docsIetfQosServiceClassTosOrMask that have either of the least significant two bits set to 1."
"Specifies whether the service class template applies to upstream or downstream service flows.
"This object defines whether this row is kept in volatile storage and lost upon reboot or whether it is backed up by non volatile or permanent storage.
'permanent' entries need not allow writable access to any object.
"This object allows the overwrite of the DSCP field per RFC 3260.
If this object is  1, then the corresponding entry's docsIetfQosServiceClassTosAndMask value MUST be 'FF'H and docsIetfQosServiceClassTosOrMask MUST be '00'H.
Otherwise, this object is in the range of 0..63, and the corresponding entry's docsIetfQosServiceClassTosAndMask value MUST be '03'H and the docsIetfQosServiceClassTosOrMask MUST be this object's value shifted left by two bit positions.
The Addition of Explicit Congestion Notification (ECN) to IP; RFC 3260, New Terminology and Clarifications for Diffserv."
"This table describes the set of DOCSIS QOS Service Class Policies.
This table is an adjunct to the docsDevFilterPolicy table.
Entries in the docsDevFilterPolicy table can point to specific rows in this table.
This table permits mapping a packet to a service class name of an active service flow so long as a classifier does not exist at a higher priority.
"A service class name policy entry.
This object should not be deleted if it is referenced by an entry in docsDevFilterPolicy.
The reference should be deleted first.
There is no restriction on the ability to change values in this row while the row is active.
Inactive rows need not be timed out."
"This object defines whether this row is kept in volatile storage and lost upon reboot or whether it is backed up by non volatile or permanent storage.
'permanent' entries need not allow writable access to any object.
Payload Header Suppression(PHS) Table   docsIetfQosPHSTable
SEQUENCE OF DocsIetfQosPHSEntry MAX ACCESS
"This table describes the set of payload header suppression entries."
"A payload header suppression entry.
The ifIndex is an ifType of docsCableMaclayer(127).
The index docsIetfQosServiceFlowId selects one service flow from the cable MAC layer interface.
The docsIetfQosPktClassId index matches an index of the docsIetfQosPktClassTable.
"Payload header suppression field defines the bytes of the header that must be suppressed/restored by the sending/receiving device.
The number of octets in this object should be the same as the value of docsIetfQosPHSSize.
It defines which bytes in the header must be suppressed/restored by the sending or receiving device.
Each bit of this bit mask corresponds to a byte in the docsIetfQosPHSField, with the least significant bit corresponding to the first byte of the docsIetfQosPHSField.
Each bit of the bit mask specifies whether the corresponding byte should be suppressed in the packet.
A bit value of '1' indicates that the byte should be suppressed by the sending device and restored by the receiving device.
A bit value of '0' indicates that the byte should not be suppressed by the sending device or restored by the receiving device.
If the bit mask does not contain a bit for each byte in the docsIetfQosPHSField, then the bit mask is extended with bit values of '1' to be the necessary length.
"Payload header suppression size specifies the number of bytes in the header to be suppressed and restored.
The value of this object must match the number of bytes in the docsIetfQosPHSField.
If 'true', the sender must verify docsIetfQosPHSField is the same as what is contained in the packet to be suppressed.
"Payload header suppression index uniquely references the PHS rule for a given service flow.
"This table provides for referencing the service flows associated with a particular cable modem.
This allows indexing into other docsIetfQos tables that are indexed by docsIetfQosServiceFlowId and ifIndex."
"An entry is created by CMTS for each service flow connected to this CMTS.
"The MAC address for the referenced CM."
"An index assigned to a service flow by CMTS."
"The ifIndex of ifType docsCableMacLayer(127) on the CMTS that is connected to the Cable Modem."
MODULE COMPLIANCE STATUS  current DESCRIPTION
"The compliance statement for MCNS Cable Modems and Cable Modem Termination Systems that implement DOCSIS Service Flows."
MODULE    docsIetfQosMIB MANDATORY GROUPS { docsIetfQosBaseGroup } GROUP docsIetfQosCmtsGroup DESCRIPTION "
This group is mandatory for Cable Modem Termination Systems (CMTS) and is not implemented for Cable Modems (CM)."
This group is mandatory for Cable Modem Termination Systems (CMTS) and Cable Modems.
Cable modems only implement objects in this group as read only."
This group is optional for Cable Modem Termination Systems (CMTS) and Cable Modems.
This group is relevant if policy based service flow classification is implemented.
See docsDevPolicyTable in DOCS CABLE DEVICE MIB for more details."
"This group is mandatory for a Cable Modem Termination System (CMTS) that implements expansion of Service Class Names in a QOS Parameter Set.
This group is not implemented on the Cable Modems.
"This object only needs to be implemented in entries that are classifying packets and not policing packets."
InetAddressType { ipv4(1) } DESCRIPTION "
An implementation is only required to support IPv4 address.
OBJECT  docsIetfQosPktClassInetSourceAddr SYNTAX InetAddress (SIZE(4))
An implementation is only required to support IPv4 address.
docsIetfQosPktClassInetSourceMask SYNTAX InetAddress (SIZE(4)) DESCRIPTION "
An implementation is only required to support IPv4 address.
OBJECT  docsIetfQosPktClassInetDestAddr SYNTAX InetAddress (SIZE(4))
An implementation is only required to support IPv4 address."
docsIetfQosPktClassInetDestMask SYNTAX InetAddress (SIZE(4)) DESCRIPTION "
An implementation is only required to support IPv4 address."
OBJECT  docsIetfQosServiceClassStorageType SYNTAX StorageType { nonVolatile(3)
An implementation is only required to support nonvolatile storage.
An implementation is only required to support nonvolatile storage."
docsIetfQosPktClassInetDestAddr, docsIetfQosPktClassInetDestMask, docsIetfQosServiceFlowSID, docsIetfQosServiceFlowDirection, docsIetfQosServiceFlowPrimary, docsIetfQosServiceFlowPkts, docsIetfQosServiceFlowOctets, docsIetfQosServiceFlowTimeCreated, docsIetfQosServiceFlowTimeActive, docsIetfQosServiceFlowPHSUnknowns, docsIetfQosServiceFlowPolicedDropPkts, docsIetfQosServiceFlowPolicedDelayPkts
, docsIetfQosDSAReqs, docsIetfQosDSARsps, docsIetfQosDSAAcks, docsIetfQosDSCReqs, docsIetfQosDSCRsps, docsIetfQosDSCAcks, docsIetfQosDSDReqs, docsIetfQosDSDRsps, docsIetfQosDynamicAdds, docsIetfQosDynamicAddFails, docsIetfQosDynamicChanges, docsIetfQosDynamicChangeFails, docsIetfQosDynamicDeletes, docsIetfQosDynamicDeleteFails, docsIetfQosDCCReqs, docsIetfQosDCCRsps, docsIetfQosDCCAcks, docsIetfQosDCCs, docsIetfQosDCCFails, docsIetfQosPHSField, docsIetfQosPHSMask, docsIetfQosPHSSize, docsIetfQosPHSVerify, docsIetfQosPHSIndex }
current DESCRIPTION "Group of objects implemented in both Cable Modems and Cable Modem Termination Systems."
, docsIetfQosParamSetTolGrantJitter, docsIetfQosParamSetGrantsPerInterval, docsIetfQosParamSetTosAndMask, docsIetfQosParamSetTosOrMask, docsIetfQosParamSetMaxLatency, docsIetfQosParamSetRequestPolicyOct, docsIetfQosParamSetBitMap } STATUS
current DESCRIPTION "Group of objects implemented in both Cable Modems and Cable Modem Termination Systems for QOS Parameter Sets."
docsIetfQosCmtsIfIndex   docsIetfQosCmtsMacToSrvFlowTable required } STATUS
current DESCRIPTION "Group of objects implemented only in the CMTS."
current DESCRIPTION "Group of objects implemented in both Cable Modems and Cable Modem Termination Systems when supporting policy based service flows."
docsIetfQosServiceClassActiveTimeout, docsIetfQosServiceClassAdmittedTimeout, docsIetfQosServiceClassSchedulingType, docsIetfQosServiceClassRequestPolicy, docsIetfQosServiceClassTosAndMask, docsIetfQosServiceClassTosOrMask, docsIetfQosServiceClassDirection, docsIetfQosServiceClassStorageType, docsIetfQosServiceClassDSCPOverwrite } STATUS
This MIB module relates to an agent that will provide metropolitan public Internet access.
As such, improper manipulation of the objects represented by this MIB module may result in denial of service to a large number of end users [6].
Manipulation of the docsIetfQosServiceClassTable and docsIetfQosServiceClassPolicyTable may allow an end user to increase his or her service levels, or affect other end users in either a positive or negative manner.
In addition, manipulation of docsIetfQosServiceFlowLogControl could allow an attacker to remove logs of packet and byte counts forwarded on a Service Flow.
If such logs were used for billing, the attacker would obtain free service.
There are a number of management objects defined in this MIB module with a MAX ACCESS clause of read write and/or read create.
Such objects may be considered sensitive or vulnerable in some network environments.
The support for SET operations in a non secure environment without proper protection can have a negative effect on network operations.
These are the tables and objects and their sensitivity/vulnerability:
The docsIetfQosServiceClassTable provides a template of QOS parameters such as maximum rate limits for a named service class.
Changing these parameters would allow an attacker to obtain an unauthorized class of service.
The docsIetfQosServiceClassPolicyTable applies CMTS vendor proprietary policies for packet forwarding, including dropping, scheduling, notification, or other policies.
Changing this table could allow an attacker to deny service to all subscribers of the CMTS or could grant the attacker unauthorized forwarding policies.
The docsIetfQosServiceFlowLogControl object controls the deletion of entries in the docsIetfQosServiceFlowLogTable, which acts as a historical "detail record" of DOCSIS Service Flow packets and bytes transmitted.
Such records may be used for billing purposes, so the unauthorized deletion of the records can result in free service.
Some of the readable objects in this MIB module (i.e., objects with a MAX ACCESS other than not accessible) may be considered sensitive or vulnerable in some network environments.
It is thus important to control even GET access to these objects and possibly to even encrypt the values of these objects when sending them over the network via SNMP.
These are the tables and objects and their sensitivity/vulnerability:
Unauthorized SNMP GET access of the docsIetfQosPktClassTable or docsIetfQosPHSTable
can allow an attacker to learn IP addresses permitted to have enhanced quality of service, for possible spoofing.
This table typically contains the IP addresses involved in voice over IP sessions, for example.
Unauthorized SNMP GET access of the docsIetfQosParamSetTable
allows an attacker to learn the names of Service Classes that are permitted to have enhanced QoS service, and the values of that enhanced service.
That name can be referenced in an unauthorized DOCSIS cable modem configuration file to obtain enhanced service.
Unauthorized SNMP GET access of the docsIetfQosServiceFlowTable
can tell an attacker when Service Flows are active, e.g., when a voice over IP call is in progress.
Unauthorized SNMP GET access of the docsIetfQosServiceFlowLogTable can expose private information about network usage.
Unauthorized SNMP GET access of the docsIetfQosServiceFlowStatsTable, docsIetfQosUpstreamStatsTable, docsIetfQosDynamicServiceStatsTable, docsIetfQosServiceFlowLogTable, and docsIetfQosCmtsMacToSrvFlowTable
can tell an attacker the volume of traffic to and from any Service Flow in the system, resulting in loss of privacy of the amount and direction of data transfer.
SNMP versions prior to SNMPv3 did not include adequate security.
Even if the network itself is secure (for example by using IPSec), even then, there is no control as to who on the secure network is allowed to access and
the objects in this MIB module.
It is RECOMMENDED that implementers consider the security features as provided by the SNMPv3 framework (see [15], section 8), including full support for the SNMPv3 cryptographic mechanisms (for authentication and privacy).
Further, deployment of SNMP versions prior to SNMPv3 is NOT RECOMMENDED.
Instead, it is RECOMMENDED to deploy SNMPv3 and to enable cryptographic security.
It is then a customer/operator responsibility to ensure that the SNMP entity giving access to an instance of this MIB module, is properly configured to give access to the objects only to those principals (users) that have legitimate rights to indeed GET or SET
The MIB module in this document uses the following IANA assigned OBJECT IDENTIFIER values recorded in the SMI Numbers registry:
{ mib 2 127 }
