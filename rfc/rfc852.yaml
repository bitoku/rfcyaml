- title: __initial_text__
  contents:
  - "     Request for Comments: 852\n                    The ARPANET Short Blocking\
    \ Feature\n                              Andrew G. Malis\n                   \
    \    ARPANET Mail: malis@bbn-unix\n                       Bolt Beranek and Newman\
    \ Inc.\n                              50 Moulton St.\n                       \
    \    Cambridge, MA  02238\n     This RFC specifies the ARPANET Short Blocking\
    \ Feature, which will\n     allow ARPANET hosts to optionally shorten the IMP's\
    \ host blocking\n     timer.  This Feature is a replacement of the ARPANET non-blocking\n\
    \     host   interface,  which  was  never  implemented,  and  will  be\n    \
    \ available to hosts using either the 1822  or  1822L  Host  Access\n     Protocol.\
    \   The  RFC is also being presented as a solicitation of\n     comments on the\
    \ Short  Blocking  Feature,  especially  from  host\n     network software implementers\
    \ and maintainers.\n     RFC 852\n     1  INTRODUCTION\n     This RFC specifies\
    \ the ARPANET Short Blocking Feature, which will\n     allow a host to shorten\
    \ the amount of time that it may be blocked\n     by its IMP after it presents\
    \ a message to the network (currently,\n     the  IMP  can  block  further input\
    \ from a host for up to fifteen\n     seconds).\n     The Feature is an addition\
    \ to the ARPANET  1822  and  1822L  Host\n     Access  Protocols,  and  replaces\
    \ the non-blocking host interface\n     described in section 3.7 of BBN Report\
    \ 1822 [1], which was  never\n     implemented.   This  Feature  will  be available\
    \ to hosts on C/30\n     IMPs only.  This will not present a problem on the ARPANET,\
    \ which\n     only  has  C/30 IMPs, but hosts on non-C/30 IMPs in networks that\n\
    \     mix C/30 and non-C/30 IMPs will not be  able  to  use  the  Short\n    \
    \ Blocking Feature.\n     The RFC's terminology is consistent  with  that  used\
    \  in  Report\n     1822, and any new terms will be defined when they are first\
    \ used.\n     Familiarity  with  Report  1822  (section  3  in  particular)  is\n\
    \     assumed.\n     This RFC was once part of RFC 802, which is now obsolete\
    \ and  has\n     been  replaced  by  the  combination of this RFC and RFC 851,\
    \ The\n     ARPANET 1822L Host  Access  Protocol  [2].   The  Short  Blocking\n\
    \     Feature  will  be  available to all hosts on C/30 IMPs, no matter\n    \
    \ RFC 852\n     which (1822 or 1822L) host access  protocol  they  are  using\
    \  to\n     communicate with the IMP.\n     RFC 852\n     2  THE ARPANET SHORT\
    \ BLOCKING FEATURE\n     The Short Blocking Feature of the 1822 and 1822L protocols\
    \ allows\n     a  host to present messages to the IMP without causing the IMP\
    \ to\n     not accept further messages from the host  for  long  amounts  of\n\
    \     time  (up  to fifteen seconds).  It is a replacement for the non-\n    \
    \ blocking host interface described in section 3.7 of Report  1822,\n     and\
    \ that description should be ignored.\n     2.1  Host Blocking\n     Usually,\
    \ when a source host submits a message to an IMP, the  IMP\n     immediately processes\
    \ that message and sends it on its way to its\n     destination host.  Sometimes,\
    \ however, the IMP  is  not  able  to\n     process the message immediately. \
    \ Processing a message requires a\n     significant number of resources, and when\
    \ the network is  heavily\n     loaded,  there can sometimes be a long delay before\
    \ the necessary\n     resources become available.  In such cases, the IMP must\
    \  make  a\n     decision  as  to  what to do while it is attempting to gather\
    \ the\n     resources.\n     One possibility is for the IMP to stop  accepting\
    \  messages  from\n     the  source  host  until  it has gathered the resources\
    \ needed to\n     process the message just submitted.  This strategy  is  known\
    \  as\n     blocking  the  host,  and is basically the strategy that has been\n\
    \     RFC 852\n     used in the ARPANET up to the present.  When  a  host  submits\
    \  a\n     message  to  an  IMP, all further transmissions from that host to\n\
    \     that IMP are blocked until the message can be processed.\n     It is important\
    \ to note, however, that not all  messages  require\n     the  same  set  of resources\
    \ in order to be processed by the IMP.\n     The particular set of resources needed\
    \ will depend on the message\n     type,  the  message  length,  and  the  destination\
    \  host  of the\n     message.  Therefore, although it might take a long time\
    \ to gather\n     the  resources  needed  to process a particular message, it\
    \ might\n     take only a short time to gather the resources needed to  process\n\
    \     some other message.  This fact exposes a significant disadvantage\n    \
    \ in the strategy of blocking the host.  A host  which  is  blocked\n     may\
    \  have many other messages to submit which, if only they could\n     be submitted,\
    \ could be processed immediately.  It is \"unfair\" for\n     the  IMP to refuse\
    \ to accept these messages until it has gathered\n     the resources for some\
    \  other,  unrelated  message.   Why  should\n     messages for which the IMP\
    \ has plenty of resources be delayed for\n     an arbitrarily long amount of time\
    \ just because the IMP lacks the\n     resources needed for some other message?\n\
    \     A simple way to alleviate the problem would be to place  a  limit\n    \
    \ on  the  amount of time during which a host can be blocked.  This\n     amount\
    \  of  time  should  be  long  enough  so  that,   in   most\n     circumstances,\
    \  the  IMP  will  be  able  to gather the resources\n     RFC 852\n     needed\
    \ to process the message within the given time period.   If,\n     however, the\
    \ resources cannot be gathered in this period of time,\n     the IMP will flush\
    \ the message, sending a  reply  to  the  source\n     host  indicating that the\
    \ message was rejected and specifying the\n     reason that it could not be  processed.\
    \   However,  the  resource\n     gathering process would continue.  The intention\
    \ is that the host\n     resubmit the message  in  a  short  time,  when,  hopefully,\
    \  the\n     resource  gathering  process  has concluded successfully.  In the\n\
    \     meantime, the host  can  submit  other  messages,  which  may  be\n    \
    \ processed   sooner.    This   strategy  does  not  eliminate  the\n     phenomenon\
    \ of host blocking, but  only  limits  the  time  during\n     which  a host is\
    \ blocked.  This shorter time limit will always be\n     less than or equal to\
    \ two seconds.\n     Note, however, that there  is  a  disadvantage  to  having\
    \  short\n     blocking  times.  Let us assume that the IMP accepts a message\
    \ if\n     it has all the resources  needed  to  process  it.   The  ARPANET\n\
    \     provides a sequential delivery service, whereby messages with the\n    \
    \ same priority, source host, and destination host are delivered to\n     the\
    \  destination host in the same order as they are accepted from\n     the source\
    \ host.  With short blocking times, however,  the  order\n     in  which  the\
    \ IMP accepts messages from the source host need not\n     be the same as the\
    \ order in  which  the  source  host  originally\n     submitted  the messages.\
    \  Since the two data streams (one in each\n     RFC 852\n     direction) between\
    \ the host and the IMP are not synchronized, the\n     host  may  not  receive\
    \ the reply to a rejected message before it\n     submits subsequent messages\
    \ for the same destination host.  If  a\n     subsequent  message  is accepted,\
    \ the order of acceptance differs\n     from the order of original submission,\
    \ and the ARPANET  will  not\n     provide  the  same type of sequential delivery\
    \ that it has in the\n     past.   If  sequential  delivery  by  the  subnet \
    \ is  a   strict\n     requirement,  the Short Blocking Feature should not be\
    \ used.  For\n     messages without this requirement, however,  the  Short  Blocking\n\
    \     Feature can be used.\n     Up to now, type 0 (Regular)  messages  have \
    \ only  had  sub-types\n     available  to  request  the  standard  blocking \
    \ timeout, fifteen\n     seconds.  The Short Blocking Feature  makes  available\
    \  new  sub-\n     types  that  allow  the  host  to  request  messages  to be\
    \ short\n     blocking, i.e. only cause the host to be blocked for two  seconds\n\
    \     at most if the message cannot be immediately processed.\n     Type 0 messages\
    \ now have the following subtypes:\n     0:  Standard: This subtype instructs\
    \ the  IMP  to  use  its  full\n         message  and  error  control  facilities.\
    \   The  host  may be\n         blocked up to fifteen seconds during the message\
    \ submission.\n     1:  Standard, Short Blocking: The IMP attempts to  use  the\
    \  same\n         facilities  as  for  subtype 0, but will block the host for\
    \ a\n     RFC 852\n         maximum of two seconds.\n     3:  Uncontrolled Packet:\
    \  The  IMP  performs  no  message-control\n         functions,  and the packet\
    \ is not guaranteed to be delivered.\n         The host may be blocked up  to\
    \  fifteen  seconds  during  the\n         packet submission, although any such\
    \ blockage is unlikely.\n     4:  Uncontrolled, Short  Blocking:  The  IMP  treats\
    \  the  packet\n         similarly  to  subtype  3, but will only block the host\
    \ for a\n         maximum of two seconds.  Again, actual blockage is unlikely.\n\
    \     2.2  Reasons for Host Blockage\n     There are a number of reasons why a\
    \ message could  cause  a  long\n     blockage  in  the  IMP,  which would result\
    \ in the rejection of a\n     short (or even non-short) blocking message.  The\
    \ IMP signals this\n     rejection of a message by using the Incomplete Transmission\
    \ (Type\n     9) message, using the sub-type field to indicate why the  message\n\
    \     was  rejected.   The  already-existing  sub-types  for the type 9\n    \
    \ message are:\n     0:  The destination host  did  not  accept  the  message\
    \  quickly\n         enough.\n     1:  The message was too long.\n     RFC 852\n\
    \     2:  The host took more  than  fifteen  seconds  to  transmit  the\n    \
    \     message  to the IMP.  This time is measured from the last bit\n        \
    \ of the leader through the last bit of the message.\n     3:  The message was\
    \ lost in the network due  to  IMP  or  circuit\n         failures.\n     4: \
    \ The IMP could not accept the entire  message  within  fifteen\n         seconds\
    \  because  of unavailable resources.  This sub-type is\n         only used in\
    \ response to non-short blocking messages.   If  a\n         short  blocking \
    \ message  timed  out, it will be responded to\n         with one of sub-types\
    \ 6-10.\n     5:  Source IMP  I/O  failure  occurred  during  receipt  of  this\n\
    \         message.\n     The new sub-types that apply to the Short Blocking Feature\
    \ are:\n     6:  Connection set-up delay: Although the IMP presents  a  simple\n\
    \         message-at-a-time  interface  to  the  host,  it  provides an\n    \
    \     internal  connection-oriented  (virtual   circuit)   service,\n        \
    \ except in the case of uncontrolled packets.  Two messages are\n         considered\
    \ to be on the same connection if they have the same\n         source  host  (i.e.,\
    \  they are submitted to the same IMP over\n         the same host interface),\
    \ the same  priority,  and  the  same\n         destination  host  name  or  address.\
    \   The  subnet maintains\n     RFC 852\n         internal  connection   set-up\
    \   and   tear-down   procedures.\n         Connections  are  set  up  as  needed,\
    \ and are torn down only\n         after  a  period  of   inactivity.    Occasionally,\
    \   network\n         congestion or resource shortage will cause a lengthy delay\
    \ in\n         connection set-up.  During this period, no messages for  that\n\
    \         connection  can  be  accepted,  but  other  messages  can  be\n    \
    \     accepted.\n     7:  End-to-end flow  control:  For  every  message  that\
    \  a  host\n         submits  to  an  IMP  (except  uncontrolled  packets) the\
    \ IMP\n         eventually  returns  a  reply  to  the  host  indicating  the\n\
    \         disposition  of  the  message.   Between  the  time  that the\n    \
    \     message is submitted and  the  time  the  host  receives  the\n        \
    \ reply,  the  message  is  said to be outstanding. The ARPANET\n         allows\
    \  only  eight  outstanding  messages   on   any   given\n         connection.\
    \   If  there  are  eight outstanding messages on a\n         given connection,\
    \ and a ninth is  submitted,  it  cannot  the\n         accepted.  If  a message\
    \ is refused because its connection is\n         blocked due to flow control,\
    \ messages  on  other  connections\n         can still be accepted.\n        \
    \ End-to-end flow control is the  most  common  cause  of  host\n         blocking\
    \ in the ARPANET at present.\n     RFC 852\n     8:  Destination IMP buffer space\
    \ shortage: If the host submits  a\n         message  of  more  than  1008  bits\
    \  (exclusive of the 96-bit\n         leader), buffer space at the destination\
    \ IMP must be reserved\n         before  the  message  can  be  accepted.  Buffer\
    \ space at the\n         destination IMP is always reserved on a per-connection\
    \ basis.\n         If  the  destination  IMP  is  heavily loaded, there may be\
    \ a\n         lengthy wait for the buffer space;  this  is  another  common\n\
    \         cause  of  blocking  in  the  present  ARPANET.  Messages are\n    \
    \     rejected  for  this  reason  based  on   their   length   and\n        \
    \ connection;  messages  of  1008 or fewer bits or messages for\n         other\
    \ connections may still be acceptable.\n     9:  Congestion control: A message\
    \ may be refused for  reasons  of\n         congestion  control if the path via\
    \ the intermediate IMPs and\n         lines to the destination IMP is too heavily\
    \ loaded to  handle\n         additional  traffic.   Messages  to other destinations\
    \ may be\n         acceptable, however.\n     10: Local resource shortage: Occasionally,\
    \ the source IMP  itself\n         is  short  of  buffer  space,  table  entries,\
    \  or some other\n         resource that it needs to accept a message.  Unlike\
    \ the other\n         reasons  for  message  rejection, this resource shortage\
    \ will\n         affect all messages equally, except for uncontrolled packets.\n\
    \         The message's size or connection is not relevant.\n     RFC 852\n  \
    \   The Short Blocking Feature is available  to  all  hosts  on  C/30\n     IMPs,\
    \  whether they are using the 1822 or 1822L protocol, through\n     the use of\
    \ Type 0, sub-type 1 and 4 messages.  A host using these\n     sub-types  should\
    \  be  prepared  to  correctly  handle the Type 9\n     (Incomplete Transmission)\
    \ messages from the IMP.\n     RFC 852\n     3  REFERENCES\n     [1]  Specifications\
    \ for the Interconnection of a Host and an IMP,\n          BBN Report 1822, December\
    \ 1981 Revision.\n     [2]  A. Malis, The ARPANET 1822L Host  Access  Protocol,\
    \  Request\n          for Comments 851, April 1983.\n"
