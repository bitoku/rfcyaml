- title: __initial_text__
  contents:
  - ''
- title: Independent Submission                                           G. Zorn
  contents:
  - "Independent Submission                                           G. Zorn\n  \
    \            Cisco Vendor-Specific RADIUS Attributes for\n                   \
    \ the Delivery of Keying Material\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines a set of vendor-specific RADIUS Attributes\n\
    \   designed to allow both the secure transmission of cryptographic\n   keying\
    \ material and strong authentication of any RADIUS message.\n   These attributes\
    \ have been allocated from the Cisco vendor-specific\n   space and have been implemented\
    \ by multiple vendors.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This is a contribution to\
    \ the RFC Series, independently of any other\n   RFC stream.  The RFC Editor has\
    \ chosen to publish this document at\n   its discretion and makes no statement\
    \ about its value for\n   implementation or deployment.  Documents approved for\
    \ publication by\n   the RFC Editor are not a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6218.\n"
- title: IESG Note
  contents:
  - "IESG Note\n   The IESG has concluded that this work is related to IETF work done\
    \ in\n   the RADEXT WG, but this relationship does not prevent publishing.\n \
    \  The IESG recommends that the RADEXT WG proceed with the work for an\n   interoperable\
    \ modern key wrap solution using attributes from the\n   standard space as part\
    \ of its charter.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Specification of Requirements ...................................3\n  \
    \ 3. Attributes ......................................................3\n    \
    \  3.1. Keying-Material ............................................4\n      3.2.\
    \ MAC-Randomizer .............................................9\n      3.3. Message-Authentication-Code\
    \ ...............................11\n   4. Security Considerations ........................................16\n\
    \   5. Contributors ...................................................16\n  \
    \ 6. Acknowledgements ...............................................16\n   7.\
    \ References .....................................................16\n      7.1.\
    \ Normative References ......................................16\n      7.2. Informative\
    \ References ....................................17\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document defines a set of vendor-specific RADIUS Attributes,\n\
    \   allocated from the Cisco vendor space, that can be used to securely\n   transfer\
    \ cryptographic keying material using standard techniques with\n   well-understood\
    \ security properties.  In addition, the Message-\n   Authentication-Code Attribute\
    \ may be used to provide strong\n   authentication for any RADIUS message, including\
    \ those used for\n   accounting and dynamic authorization.\n   These attributes\
    \ were designed to provide stronger protection and\n   more flexibility than the\
    \ currently defined Vendor-Specific\n   MS-MPPE-Send-Key and MS-MPPE-Recv-Key\
    \ Attributes in [RFC2548] and the\n   Message-Authenticator Attribute in [RFC3579].\n\
    \   Many remote access deployments (for example, deployments utilizing\n   wireless\
    \ LAN technology) require the secure transmission of\n   cryptographic keying\
    \ material from a RADIUS [RFC2865] server to a\n   network access point.  This\
    \ material is usually produced as a\n   by-product of an Extensible Authentication\
    \ Protocol (EAP) [RFC3748]\n   authentication and returned in the Access-Accept\
    \ message following a\n   successful authentication process.  The keying material\
    \ is of a form\n   that may be used in virtually any cryptographic algorithm after\n\
    \   appropriate processing.  These attributes may also be used in other\n   cases\
    \ where an Authentication, Authorization, and Accounting (AAA)\n   server needs\
    \ to deliver keying material to a network access point.\n   Discussion of this\
    \ document may be directed to the authors.\n"
- title: 2.  Specification of Requirements
  contents:
  - "2.  Specification of Requirements\n   The key words \"MUST\", \"MUST NOT\", \"\
    REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 3.  Attributes
  contents:
  - "3.  Attributes\n   The following subsections describe sub-attributes that are\n\
    \   transmitted in RADIUS Attributes of type Vendor-Specific [RFC2865].\n   The\
    \ Vendor ID field of the Vendor-Specific Attribute(s) MUST be set\n   to decimal\
    \ 9 (Cisco).  The general format of the attributes is:\n      0              \
    \     1                   2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |     Type (26)   |    Length   |         Vendor ID\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \        Vendor ID (cont'd)           |   Sub-type (1)|   Sub-length  |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                          Value...\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      26 for Vendor-Specific\n   Length\n      Length of entire attribute\
    \ including type and length fields\n   Vendor ID\n      4 octets encoding the\
    \ Cisco Vendor ID of 9\n   Sub-type\n      Attribute sub-type of 1\n   Sub-length\n\
    \      Length of the sub-attribute including the sub-type and sub-length\n   \
    \   fields\n   Value\n      Value of the sub-attribute\n   This specification\
    \ concerns the following sub-attributes:\n   o  Keying-Material\n   o  MAC-Randomizer\n\
    \   o  Message-Authentication-Code\n"
- title: 3.1.  Keying-Material
  contents:
  - "3.1.  Keying-Material\n   Description\n      This Attribute MAY be used to transfer\
    \ cryptographic keying\n      material from a RADIUS server to a client.\n   \
    \   It MAY be sent in request messages (e.g., Access-Request, etc.),\n      as\
    \ well; if the Keying-Material (KM) Attribute is present in a\n      request,\
    \ it SHOULD be taken as a hint by the server that the\n      client prefers this\
    \ method of key delivery over others.  The\n      server is not obligated to honor\
    \ the hint, however.  When the\n      Keying-Material Attribute is included in\
    \ a request message, the KM\n      ID, key-encrypting-key (KEK) ID, Lifetime,\
    \ Initialization Vector\n      (IV), and Key Material Data fields MAY be omitted.\n\
    \      In environments where the Keying-Material Attribute is known to be\n  \
    \    supported or in cases where the client wants to avoid roll-back\n      attacks,\
    \ the client MAY be configured to require the use of the\n      Keying-Material\
    \ Attribute.  If the client requires the use of the\n      Keying-Material Attribute\
    \ for keying material delivery and it is\n      not present in the Access-Accept\
    \ or Access-Challenge message, the\n      client MAY ignore the message in question\
    \ and end the user\n      session.\n      Any packet that contains a Keying-Material\
    \ Attribute MUST also\n      include the Message-Authentication-Code Attribute.\n\
    \      Any packet that contains an instance of the Keying-Material\n      Attribute\
    \ MUST NOT contain an instance of any other attribute\n      (e.g., MS-CHAP-MPPE-Keys\
    \ [RFC2548], Tunnel-Password [RFC2868],\n      etc.) encapsulating identical keying\
    \ material.\n      The Keying-Material Attribute MUST NOT be used to transfer\
    \ long-\n      lived keys (i.e., passwords) between RADIUS servers and clients.\n\
    \      A summary of the Keying-Material Attribute format is shown below.\n   \
    \   The fields are transmitted from left to right.\n      0                  \
    \ 1                   2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |     Type (26)   |    Length   |   Vendor ID\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \        Vendor ID (cont'd)           |   Sub-type (1)|    Sub-length |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                   String ID  (\"radius:app-key=\")\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                              String ID (cont'd)\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                              String ID (cont'd)\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                              String ID (cont'd)     |    Enc Type   |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                           App ID                            |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                             KEK ID\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                                KEK ID (cont'd)\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                                KEK ID (cont'd)\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                                KEK ID (cont'd)                      |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                           KM ID\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                                KM ID (cont'd)\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                                KM ID (cont'd)\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                                KM ID (cont'd)                       |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                          Lifetime                           |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                               IV\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                                  IV (cont'd)                        |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                     Keying Material Data\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      26 for Vendor-Specific\n   Length\n      Length of entire attribute\
    \ including type and length fields\n   Vendor ID\n      4 octets encoding the\
    \ Cisco Vendor ID of 9\n   Sub-type\n      Attribute sub-type of 1\n   Sub-length\n\
    \      Length of the sub-attribute including the sub-type and sub-length\n   \
    \   fields\n   String-ID\n      The ASCII characters \"radius:app-key=\" without\
    \ quotes or null\n      termination\n   Enc Type\n      The Enc Type field indicates\
    \ the method used to encrypt the\n      contents of the Data field.  This document\
    \ defines only one value\n      (decimal) for this field:\n         0 AES Key\
    \ Wrap with 128-bit KEK [RFC3394]\n      Implementations MUST support Enc Type\
    \ 0 (AES Key Wrap with 128-bit\n      KEK).\n      Implementation Note\n     \
    \    A shared secret is used as the key-encrypting-key (KEK) for the\n       \
    \  AES key wrap algorithm.  Implementations SHOULD provide a means\n         to\
    \ provision a key (cryptographically separate from the normal\n         RADIUS\
    \ shared secret) to be used exclusively as a KEK.\n   App ID\n      The App ID\
    \ field is 4 octets in length and identifies the type of\n      application for\
    \ which the key material is to be used.  This allows\n      for multiple keys\
    \ for different purposes to be present in the same\n      message.  This document\
    \ defines two values for the App ID:\n         0 Reserved\n         1 EAP MSK\n\
    \   KEK ID\n      The KEK ID field is 16 octets in length.  The combination of\
    \ the\n      KEK ID and the client and server IP addresses together uniquely\n\
    \      identify a key shared between the RADIUS client and server.  As a\n   \
    \   result, the KEK ID need not be globally unique.  The KEK ID MUST\n      refer\
    \ to an encryption key of a type and length appropriate for\n      use with the\
    \ algorithm specified by the Enc Type field (see\n      above).  This key is used\
    \ to protect the contents of the Data\n      field (below).  The KEK ID is a constant\
    \ that is configured\n      through an out-of-band mechanism.  The same value\
    \ is configured on\n      both the RADIUS client and server.  If no KEK ID is\
    \ configured,\n      then the field is set to 0.  If only a single KEK is configured\n\
    \      for use between a given RADIUS client and server, then 0 can be\n     \
    \ used as the default value.\n   KM ID\n      The KM ID field is 16 octets in\
    \ length and contains an identifier\n      for the contents of the Data field.\
    \  The KM ID MAY be used by\n      communicating parties to identify the material\
    \ being transmitted.\n      The combination of App ID and KM ID MUST uniquely\
    \ identify the\n      keying material between the parties utilizing it.  The KM\
    \ ID is\n      assumed to be known to the parties that derived the keying\n  \
    \    material.  If the KM ID is not used, it is set to 0.  The KM ID\n      for\
    \ the EAP Master Session Key (MSK) application is set to 0.\n      Another application\
    \ that uses the KM ID field can be defined in\n      the future.\n   Lifetime\n\
    \      The Lifetime field is an integer [RFC2865] representing the period\n  \
    \    of time (in seconds) for which the keying material is valid.\n      Note:\
    \ Applications using this value SHOULD consider the beginning\n      of the lifetime\
    \ to be the point in time when the keying material\n      is first used.\n   IV\n\
    \      The length of the IV field depends upon the value of the Enc Type\n   \
    \   field, but is fixed for any given value thereof.  When the value\n      of\
    \ the Enc Type field is 0 (decimal), the IV field MUST be 8\n      octets in length\
    \ (as illustrated above), and the value of the IV\n      field MUST be as specified\
    \ in [RFC3394].  If the IV for Enc Type 0\n      does not match [RFC3394], then\
    \ the receiver MUST NOT use the key\n      material from this attribute.\n   Keying\
    \ Material Data\n      The Keying Material Data field is of variable length and\
    \ contains\n      the actual encrypted keying material.\n"
- title: 3.2.  MAC-Randomizer
  contents:
  - "3.2.  MAC-Randomizer\n   Description\n      The MAC-Randomizer Attribute MUST\
    \ be present in any message that\n      includes an instance of the Message-Authentication-Code\
    \ Attribute.\n      The Random field MUST contain a 32-octet random number that\
    \ SHOULD\n      satisfy the requirements of [RFC4086].\n      Implementation Note\n\
    \         The Random field MUST be filled in before the Message\n         Authentication\
    \ Code (MAC) is computed.  The MAC-Randomizer\n         Attribute SHOULD be placed\
    \ at the beginning of the RADIUS\n         message if possible.\n      A summary\
    \ of the MAC-Randomizer Attribute format is shown below.\n      The fields are\
    \ transmitted from left to right.\n      0                   1               \
    \    2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |     Type (26)   |    Length   |   Vendor ID\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \        Vendor ID (cont'd)           |   Sub-type (1)|    Sub-length |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                   String ID  (\"radius:random-nonce=\")\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                              String ID (cont'd)\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                              String ID (cont'd)\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                              String ID (cont'd)\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                              String ID (cont'd)                     |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                         Random...\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Type\n         26 for Vendor-Specific\n      Length\n         Length of\
    \ entire attribute including type and length fields\n      Vendor ID\n       \
    \  4 octets encoding the Cisco Vendor ID of 9\n      Sub-type\n         Attribute\
    \ sub-type of 1\n      Sub-length\n         Length of the sub-attribute including\
    \ the sub-type and\n         sub-length fields\n      String-ID\n         The\
    \ ASCII characters \"radius:random-nonce=\" without quotes or\n         null termination\n\
    \      Random\n         This field MUST contain a 32 octet random number that\
    \ SHOULD\n         satisfy the requirements of [RFC4086].\n"
- title: 3.3.  Message-Authentication-Code
  contents:
  - "3.3.  Message-Authentication-Code\n   Description\n      This Attribute MAY be\
    \ used to \"sign\" messages to prevent spoofing.\n      If it is present in a\
    \ request, the receiver should take this as a\n      hint that the sender prefers\
    \ the use of this Attribute for message\n      authentication; the receiver is\
    \ not obligated to do so, however.\n      The Message-Authentication-Code Attribute\
    \ MUST be included in any\n      message that contains a Keying-Material Attribute.\n\
    \      If both the Message-Authentication-Code and Message-Authenticator\n   \
    \   Attributes are to be included in a message (e.g., for backward\n      compatibility\
    \ in a network containing both old and new clients),\n      the value of the Message-Authentication-Code\
    \ Attribute MUST be\n      computed first.\n      If any message is received containing\
    \ an instance of the Message-\n      Authentication-Code Attribute, the receiver\
    \ MUST calculate the\n      correct value of the Message-Authentication-Code and\
    \ silently\n      discard the packet if the computed value does not match the\
    \ value\n      received.\n      If a received message contains an instance of\
    \ the MAC-Randomizer\n      Attribute (Section 3.2), the received MAC-Randomizer\
    \ Attribute\n      SHOULD be included in the computation of the Message-\n   \
    \   Authentication-Code Attribute sent in the response, as described\n      below.\n\
    \      A summary of the Message-Authentication-Code Attribute format is\n    \
    \  shown below.  The fields are transmitted from left to right.\n      0     \
    \              1                   2                   3\n      0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |     Type (26)   |    Length   |           Vendor ID\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \        Vendor ID (cont'd)           |   Sub-type (1)|    Sub-length |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \     String ID  (\"radius:message-authenticator-code=\")\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                              String ID (cont'd)\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                              String ID (cont'd)\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                              String ID (cont'd)\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                              String ID (cont'd)\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                              String ID (cont'd)\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                              String ID (cont'd)\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                              String ID (cont'd)\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \              String ID (cont'd)     |   MAC Type    |  MAC Key ID\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                       MAC Key ID (cont'd)\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                             MAC Key ID (cont'd)\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                             MAC Key ID (cont'd)\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                             MAC Key ID (cont'd)     |    MAC\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                             MAC (cont'd) ...\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Type\n         26 for Vendor-Specific\n      Length\n         Length of\
    \ entire attribute including type and length fields\n      Vendor ID\n       \
    \  4 octets encoding the Cisco Vendor ID of 9\n      Sub-type\n         Attribute\
    \ sub-type of 1\n      Sub-length\n         Length of the sub-attribute including\
    \ the sub-type and\n         sub-length fields\n      String-ID\n         The\
    \ ASCII characters \"radius:message-authenticator-code=\"\n         without quotes\
    \ or null termination\n      MAC Type\n         The MAC Type field specifies the\
    \ algorithm used to create the\n         value in the MAC field.  This document\
    \ defines six values for\n         the MAC Type field:\n            0 HMAC-SHA-1\
    \ [FIPS] [RFC2104]\n            1 HMAC-SHA-256 [FIPS] [RFC4231]\n            2\
    \ HMAC-SHA-512 [FIPS] [RFC4231]\n            3 CMAC-AES-128 [NIST]\n         \
    \   4 CMAC-AES-192 [NIST]\n            5 CMAC-AES-256 [NIST]\n         Implementations\
    \ MUST support MAC Type 0 (HMAC-SHA-1).\n      MAC Key ID\n         The MAC Key\
    \ ID field is 16 octets in length and contains an\n         identifier for the\
    \ key.  The combination of the MAC Key ID and\n         the client and server\
    \ IP addresses together uniquely identify a\n         key shared between the RADIUS\
    \ client and server.  As a result,\n         the MAC Key ID need not be globally\
    \ unique.  The MAC Key ID\n         MUST refer to a key of a type and length appropriate\
    \ for use\n         with the algorithm specified by the MAC Type field (see above).\n\
    \         The MAC Key ID is a constant that is configured through an out-\n  \
    \       of-band mechanism.  The same value is configured on both the\n       \
    \  RADIUS client and server.  If no MAC Key ID is configured, then\n         the\
    \ field is set to 0.  If only a single MAC Key ID is\n         configured for\
    \ use between a given RADIUS client and server,\n         then 0 can be used as\
    \ the default value.\n      MAC\n         Both the length and value of the MAC\
    \ field depend upon the\n         algorithm specified by the value of the MAC\
    \ Type field.  If the\n         algorithm specified is HMAC-SHA-1, HMAC-SHA-256,\
    \ or\n         HMAC-SHA-512, the MAC field MUST be 20, 32, or 64 octets in\n \
    \        length, respectively.  If the algorithm specified is\n         CMAC-AES-128,\
    \ CMAC-AES-192, or CMAC-AES-256, the MAC field\n         SHOULD be 64 octets in\
    \ length.  The derivation of the MAC field\n         value for all the algorithms\
    \ specified in this document is\n         identical, except for the algorithm\
    \ used.  There are\n         differences, however, depending upon whether the\
    \ MAC is being\n         computed for a request message or a response.  These\n\
    \         differences are detailed below, with the free variable HASH-ALG\n  \
    \       representing the actual algorithm used.\n         Request Messages\n \
    \           For requests (e.g., CoA-Request [RFC5176], Accounting-\n         \
    \   Request [RFC2866], etc.), the value of the MAC field is a\n            hash\
    \ of the entire packet except the Request Authenticator\n            in the header\
    \ of the RADIUS packet, using a shared secret as\n            the key, as follows.\n\
    \            MAC = MAC-ALG(Key, Type + Identifier + Length + Attributes)\n   \
    \            where '+' represents concatenation\n            The MAC-Randomizer\
    \ Attribute (Section 3.2) MUST be included\n            in any request in which\
    \ the Message-Authentication-Code\n            Attribute is used.  The Random\
    \ field of the MAC-Randomizer\n            Attribute MUST be filled in before\
    \ the value of the MAC\n            field is computed.\n            If the Message-Authenticator-Code\
    \ Attribute is included in a\n            client request, the server SHOULD ignore\
    \ the contents of the\n            Request Authenticator.\n            Implementation\
    \ Notes\n               When the hash is calculated, both the MAC field of the\n\
    \               Message-Authenticator-Code Attribute and the String field\n  \
    \             of the Message-Authenticator Attribute (if any) MUST be\n      \
    \         considered to be zero-filled.\n               Implementations SHOULD\
    \ provide a means to provision a key\n               (cryptographically separate\
    \ from the normal RADIUS shared\n               secret) to be used exclusively\
    \ in the generation of the\n               Message-Authentication-Code.\n    \
    \     Response Messages\n            For responses (e.g., CoA-ACK [RFC5176], Accounting-Response\n\
    \            [RFC2866], etc.), the value of the MAC field is a hash of\n     \
    \       the entire packet except the Response Authenticator in the\n         \
    \   header of the RADIUS packet using a shared secret as the\n            key,\
    \ as follows.\n            MAC = HASH-ALG(Key, Type + Identifier + Length + Attributes)\n\
    \               where '+' represents concatenation\n            If the request\
    \ contained an instance of the MAC-Randomizer\n            Attribute and the responder\
    \ wishes to include an instance of\n            the Message-Authentication-Code\
    \ Attribute in the\n            corresponding response, then the MAC-Randomizer\
    \ Attribute\n            from the request MUST be included in the response.\n\
    \            If the Message-Authenticator-Code Attribute is included in a\n  \
    \          server response, the client SHOULD ignore the contents of\n       \
    \     the Response Authenticator.\n            Implementation Notes\n        \
    \       When the hash is calculated, both the MAC field of the\n             \
    \  Message-Authenticator-Code Attribute and the String field\n               of\
    \ the Message-Authenticator Attribute (if any) MUST be\n               considered\
    \ to be zero-filled.\n               The Message-Authentication-Code Attribute\
    \ MUST be created\n               and inserted in the packet before the Response\n\
    \               Authenticator is calculated.\n               Implementations SHOULD\
    \ provide a means to provision a key\n               (cryptographically separate\
    \ from the normal RADIUS shared\n               secret) to be used exclusively\
    \ in the generation of the\n               Message-Authentication-Code.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   It is RECOMMENDED in this memo that two new keys,\
    \ a key encrypting\n   key and a message authentication key, be shared by the\
    \ RADIUS client\n   and server.  If implemented, these two keys MUST be different\
    \ from\n   each other and SHOULD NOT be based on a password.  These two keys\n\
    \   MUST be cryptographically independent of the RADIUS shared secret\n   used\
    \ in calculating the Response Authenticator [RFC2865], Request\n   Authenticator\
    \ [RFC2866] [RFC5176], and Message-Authenticator\n   Attribute [RFC3579]; otherwise,\
    \ if the shared secret is broken, all\n   is lost.\n   To avoid the possibility\
    \ of collisions, the same MAC key SHOULD NOT\n   be used with more than 2^(n/2)\
    \ messages, where 'n' is the length of\n   the MAC value in octets.\n   If a packet\
    \ that contains an instance of the Keying-Material\n   Attribute also contains\
    \ an instance of another, weaker key transport\n   attribute (e.g., MS-MPPE-Recv-Key\
    \ [RFC2548]) encapsulating identical\n   keying material, then breaking the weaker\
    \ attribute might facilitate\n   a known-plaintext attack against the KEK.\n"
- title: 5.  Contributors
  contents:
  - "5.  Contributors\n   Hao Zhou, Nancy Cam-Winget, Alex Lam, Paul Funk, and John\
    \ Fossaceca\n   all contributed to this document.\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   Thanks (in no particular order) to Keith McCloghrie,\
    \ Kaushik Narayan,\n   Murtaza Chiba, Bill Burr, Russ Housley, David McGrew, Pat\
    \ Calhoun,\n   Joel Halpern, Jim Schaad, Greg Weber, and Bernard Aboba for useful\n\
    \   feedback.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [FIPS]     National Institute of Standards and\
    \ Technology, \"Secure\n              Hash Standard (SHS)\", FIPS PUB 180-3, October\
    \ 2008.\n   [NIST]     Dworkin, M., \"Recommendation for Block Cipher Modes of\n\
    \              Operation: The CMAC Mode for Authentication\", NIST SP800-\n  \
    \            38B, May 2005.\n   [RFC2104]  Krawczyk, H., Bellare, M., and R. Canetti,\
    \ \"HMAC: Keyed-\n              Hashing for Message Authentication\", RFC 2104,\n\
    \              February 1997.\n   [RFC2119]  Bradner, S., \"Key words for use\
    \ in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2865]  Rigney, C., Willens, S., Rubens, A., and W. Simpson,\n\
    \              \"Remote Authentication Dial In User Service (RADIUS)\",\n    \
    \          RFC 2865, June 2000.\n   [RFC2866]  Rigney, C., \"RADIUS Accounting\"\
    , RFC 2866, June 2000.\n   [RFC2868]  Zorn, G., Leifer, D., Rubens, A., Shriver,\
    \ J., Holdrege,\n              M., and I. Goyret, \"RADIUS Attributes for Tunnel\
    \ Protocol\n              Support\", RFC 2868, June 2000.\n   [RFC3394]  Schaad,\
    \ J. and R. Housley, \"Advanced Encryption Standard\n              (AES) Key Wrap\
    \ Algorithm\", RFC 3394, September 2002.\n   [RFC3579]  Aboba, B. and P. Calhoun,\
    \ \"RADIUS (Remote Authentication\n              Dial In User Service) Support\
    \ For Extensible\n              Authentication Protocol (EAP)\", RFC 3579, September\
    \ 2003.\n   [RFC4086]  Eastlake 3rd, D., Schiller, J., and S. Crocker,\n     \
    \         \"Randomness Requirements for Security\", BCP 106, RFC 4086,\n     \
    \         June 2005.\n   [RFC4231]  Nystrom, M., \"Identifiers and Test Vectors\
    \ for\n              HMAC-SHA-224, HMAC-SHA-256, HMAC-SHA-384, and\n         \
    \     HMAC-SHA-512\", RFC 4231, December 2005.\n   [RFC5176]  Chiba, M., Dommety,\
    \ G., Eklund, M., Mitton, D., and B.\n              Aboba, \"Dynamic Authorization\
    \ Extensions to Remote\n              Authentication Dial In User Service (RADIUS)\"\
    , RFC 5176,\n              January 2008.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [RFC2548]  Zorn, G., \"Microsoft Vendor-specific\
    \ RADIUS Attributes\",\n              RFC 2548, March 1999.\n   [RFC3748]  Aboba,\
    \ B., Blunk, L., Vollbrecht, J., Carlson, J., and H.\n              Levkowetz,\
    \ Ed., \"Extensible Authentication Protocol\n              (EAP)\", RFC 3748,\
    \ June 2004.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Glen Zorn\n   Network Zen\n   227/358 Thanon Sanphawut\n\
    \   Bang Na, Bangkok  10260\n   Thailand\n   Phone: +66 (0) 87 040 4617\n   EMail:\
    \ gwz@net-zen.net\n   Tiebing Zhang\n   Advista Technologies\n   5252 Orange Ave.,\
    \ Suite 106\n   Cypress, CA  90630\n   US\n   Phone: +1 (949) 242 0391\n   EMail:\
    \ tzhang@advistatech.com\n   Jesse Walker\n   Intel Corporation\n   JF2-55\n \
    \  2111 N.E. 25th Ave.\n   Hillsboro, OR  97214-5961\n   US\n   Phone: +1 (503)\
    \ 712-1849\n   EMail: jesse.walker@intel.com\n   Joseph Salowey\n   Cisco Systems\n\
    \   2901 Third Avenue\n   SEA1/6/\n   Seattle, WA  98121\n   US\n   Phone: +1\
    \ (206) 256-3380\n   EMail: jsalowey@cisco.com\n"
