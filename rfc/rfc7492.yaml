- title: __initial_text__
  contents:
  - '     Analysis of Bidirectional Forwarding Detection (BFD) Security

    '
- title: According to the Keying and Authentication for Routing Protocols (KARP)
  contents:
  - "According to the Keying and Authentication for Routing Protocols (KARP)\n   \
    \                        Design Guidelines\n"
- title: Abstract
  contents:
  - "Abstract\n   This document analyzes the Bidirectional Forwarding Detection (BFD)\n\
    \   protocol according to the guidelines set forth in Section 4.2 of RFC\n   6518,\
    \ \"Keying and Authentication for Routing Protocols (KARP) Design\n   Guidelines\"\
    .\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7492.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n   2.  Requirements to Meet  . . . . . . . . . . . . . . . .\
    \ . . . .   3\n   3.  Current State of Security Methods . . . . . . . . . . .\
    \ . . .   3\n   4.  Impacts of BFD Replays  . . . . . . . . . . . . . . . . .\
    \ . .   5\n   5.  Impact of New Authentication Requirements . . . . . . . . .\
    \ .   6\n   6.  Considerations for Improvement  . . . . . . . . . . . . . . .\
    \   7\n   7.  Security Considerations . . . . . . . . . . . . . . . . . . .  \
    \ 7\n   8.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   8\n\
    \     8.1.  Normative References  . . . . . . . . . . . . . . . . . .   8\n  \
    \   8.2.  Informative References  . . . . . . . . . . . . . . . . .   8\n   Acknowledgements\
    \  . . . . . . . . . . . . . . . . . . . . . . . .   9\n   Authors' Addresses\
    \  . . . . . . . . . . . . . . . . . . . . . . .   9\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document performs a gap analysis of the current state\
    \ of\n   Bidirectional Forwarding Detection [RFC5880] according to the\n   requirements\
    \ of KARP Design Guidelines [RFC6518].  Previously, the\n   OPSEC working group\
    \ has provided an analysis of cryptographic issues\n   with BFD in \"Issues with\
    \ Existing Cryptographic Protection Methods\n   for Routing Protocols\" [RFC6039].\n\
    \   The existing BFD specifications provide a basic security solution.\n   Key\
    \ ID is provided so that the key used in securing a packet can be\n   changed\
    \ on demand.  Two cryptographic algorithms (MD5 and SHA-1) are\n   supported for\
    \ integrity protection of the control packets; the\n   algorithms are both demonstrated\
    \ to be subject to collision attacks.\n   Routing protocols like \"RIPv2 Cryptographic\
    \ Authentication\"\n   [RFC4822], \"IS-IS Generic Cryptographic Authentication\"\
    \ [RFC5310],\n   and \"OSPFv2 HMAC-SHA Cryptographic Authentication\" [RFC5709]\
    \ have\n   started to use BFD for liveliness checks.  Moving the routing\n   protocols\
    \ to a stronger algorithm while using a weaker algorithm for\n   BFD would allow\
    \ the attacker to bring down BFD in order to bring down\n   the routing protocol.\
    \  BFD therefore needs to match the routing\n   protocols in its strength of algorithm.\n\
    \   While BFD uses a non-decreasing, per-packet sequence number to\n   protect\
    \ itself from intra-connection replay attacks, it still leaves\n   the protocol\
    \ vulnerable to the inter-session replay attacks.\n"
- title: 2.  Requirements to Meet
  contents:
  - "2.  Requirements to Meet\n   There are several requirements described in Section\
    \ 4 of [RFC6862]\n   that BFD, as defined in BFD [RFC5880], does not currently\
    \ meet:\n      Replay Protection: BFD provides an incomplete intra-session and\
    \ no\n      inter-session replay attack protection; this creates significant\n\
    \      denial-of-service opportunities.\n      Strong Algorithms: The cryptographic\
    \ algorithms adopted for\n      message authentication in BFD are MD5 or SHA-1\
    \ based.  However,\n      both algorithms are known to be vulnerable to collision\
    \ attacks.\n      \"BFD Generic Cryptographic Authentication\" [BFD-CRYPTO] and\n\
    \      \"Authenticating BFD using HMAC-SHA-2 procedures\" [BFD-HMAC]\n      together\
    \ propose a solution to support Hashed Message\n      Authentication Code (HMAC)\
    \ with the SHA-2 family of hash functions\n      for BFD.\n      Preventing DoS\
    \ Attacks: BFD packets can be sent at millisecond\n      intervals (the protocol\
    \ uses timers at microsecond intervals).\n      When malicious packets are sent\
    \ at short intervals, with the\n      authentication bit set, it can cause a DoS\
    \ attack.  There is\n      currently no lightweight mechanism within BFD to address\
    \ this\n      issue and is one of the reasons BFD authentication is still not\n\
    \      widely deployed in the field.\n   The remainder of this document explains\
    \ the details of how these\n   requirements fail to be met and proposes mechanisms\
    \ for addressing\n   them.\n"
- title: 3.  Current State of Security Methods
  contents:
  - "3.  Current State of Security Methods\n   BFD [RFC5880] describes five authentication\
    \ mechanisms for the\n   integrity protection of BFD control packets: Simple Password,\
    \ Keyed\n   MD5 [RFC1321], Meticulous Keyed MD5, Keyed SHA-1, and Meticulous\n\
    \   Keyed SHA-1.  In the simple password mechanism, every control packet\n   is\
    \ associated with a password transported in plain text; attacks\n   eavesdropping\
    \ the network traffic can easily learn the password and\n   compromise the security\
    \ of the corresponding BFD session.  In the\n   Keyed MD5 and the Meticulous Keyed\
    \ MD5 mechanisms, BFD nodes use\n   shared secret keys to generate Keyed MD5 digests\
    \ for control packets.\n   Similarly, in the Keyed SHA-1 and the Meticulous Keyed\
    \ SHA-1\n   mechanisms, BFD nodes use shared secret keys to generate Keyed SHA-1\n\
    \   digests for control packets.  Note that in the keyed authentication\n   mechanisms,\
    \ every BFD control packet is associated with a non-\n   decreasing, 32-bit sequence\
    \ number to resist replay attacks.  In the\n   Keyed MD5 and the Keyed SHA-1 mechanisms,\
    \ the sequence member is only\n   required to increase occasionally.  However,\
    \ in the Meticulous Keyed\n   MD5 and the Meticulous Keyed SHA-1 mechanisms, the\
    \ sequence member is\n   required to increase with each successive packet.\n \
    \  Additionally, limited key updating functionality is provided.  There\n   is\
    \ a Key ID in every authenticated BFD control packet indicating the\n   key used\
    \ to hash the packet.  However, there is no mechanism\n   described to provide\
    \ a smooth key rollover that the BFD routers can\n   use when moving from one\
    \ key to the other.\n   The BFD session timers are defined with the granularity\
    \ of\n   microseconds, and it is common in practice to send BFD packets at\n \
    \  millisecond intervals.  Since the cryptographic sequence number space\n   is\
    \ only 32 bits, a sequence number used in a BFD session may reach\n   its maximum\
    \ value and roll over within a limited period.  For\n   instance, if a sequence\
    \ number is increased by one every 3.3\n   milliseconds, then it will reach its\
    \ maximum value in less than 24\n   weeks.  This can result in potential inter-session\
    \ replay attacks,\n   especially when BFD uses the non-meticulous authentication\
    \ modes.\n   Note that when using authentication mechanisms, BFD drops all packets\n\
    \   that fall outside the limited range (3 times the Detection Time\n   multiplier).\
    \  Therefore, when meticulous authentication modes are\n   used, a replayed BFD\
    \ packet will be rejected if it cannot fit into a\n   relatively short window\
    \ (3 times the detection interval of the\n   session).  This introduces some difficulties\
    \ for replaying packets.\n   However, in a non-meticulous authentication mode,\
    \ such windows can be\n   large (as sequence numbers are only increased occasionally),\
    \ thus\n   making it easier to perform replay attacks .\n   In a BFD session,\
    \ each node needs to select a 32-bit discriminator to\n   identify itself.  Therefore,\
    \ a BFD session is identified by two\n   discriminators.  If a node randomly selects\
    \ a new discriminator for a\n   new session and uses authentication mechanisms\
    \ to secure the control\n   packets, inter-session replay attacks can be mitigated\
    \ to some\n   extent.  However, in existing BFD demultiplexing mechanisms, the\n\
    \   discriminators used in a new BFD session may be predictable.  In some\n  \
    \ deployment scenarios, the discriminators of BFD routers may be\n   decided by\
    \ the destination and source addresses.  So, if the sequence\n   number of a BFD\
    \ router rolls over for some reason (e.g., reboot), the\n   discriminators used\
    \ to identify the new session will be identical to\n   the ones used in the previous\
    \ session.  This makes performing a\n   replay attack relatively simple.\n   BFD\
    \ allows a mode called the echo mode.  Echo packets are not defined\n   in the\
    \ BFD specification, though they can keep the BFD session up.\n   The format of\
    \ the echo packet is local to the sending side, and there\n   are no guidelines\
    \ on the properties of these packets beyond the\n   choice of the source and destination\
    \ addresses.  While the BFD\n   specification recommends applying security mechanisms\
    \ to prevent\n   spoofing of these packets, there are no guidelines on what type\
    \ of\n   mechanisms are appropriate.\n"
- title: 4.  Impacts of BFD Replays
  contents:
  - "4.  Impacts of BFD Replays\n   As discussed, BFD cannot meet the requirements\
    \ of inter-session or\n   intra-session replay protection.  This section discusses\
    \ the impacts\n   of BFD replays.\n   When cryptographic authentication mechanisms\
    \ are adopted for BFD, a\n   non-decreasing, 32-bit-long sequence number is used.\
    \  In the Keyed\n   MD5 and the Keyed SHA-1 mechanisms, the sequence member is\
    \ not\n   required to increase for every packet.  Therefore, an attacker can\n\
    \   keep replaying the packets with the latest sequence number until the\n   sequence\
    \ number is updated.  This issue is eliminated in the\n   Meticulous Keyed MD5\
    \ and the Meticulous Keyed SHA-1 mechanisms.\n   However, note that a sequence\
    \ number may reach its maximum and be\n   rolled over in a session.  In this case,\
    \ without the support from a\n   automatic key management mechanism, the BFD session\
    \ will be\n   vulnerable to replay attacks performed by sending the packets before\n\
    \   the roll over of the sequence number.  For instance, an attacker can\n   replay\
    \ a packet with a sequence number that is larger than the\n   current one.  If\
    \ the replayed packet is accepted, the victim will\n   reject the legal packets\
    \ whose sequence members are less than the one\n   in the replayed packet.  Therefore,\
    \ the attacker can get a good\n   chance to bring down the BFD session.  This\
    \ kind of attack assumes\n   that the attacker has access to the link when the\
    \ BFD session is on a\n   point-to-point link or can inject packets for a BFD\
    \ session with\n   multiple hops.\n   Additionally, the BFD specification allows\
    \ for the change of\n   authentication state based on the state of a received\
    \ packet.  For\n   instance, according to BFD [RFC5880], if the state of an accepted\n\
    \   packet is down, the receiver of the packet needs to transfer its\n   state\
    \ to down as well.  Therefore, a carefully selected replayed\n   packet can cause\
    \ a serious denial-of-service attack.\n   BFD does not provide any solution to\
    \ deal with inter-session replay\n   attacks.  If two subsequent BFD sessions\
    \ adopt an identical\n   discriminator pair and use the same cryptographic key\
    \ to secure the\n   control packets, it is intuitive to use a malicious authenticated\n\
    \   packet (stored from the past session) to perform interconnection\n   replay\
    \ attacks.\n   Any security issues in the BFD echo mode will directly affect the\
    \ BFD\n   protocol and session states, and hence the network stability.  For\n\
    \   instance, any replay attacks would be indistinguishable from normal\n   forwarding\
    \ of the tested router.  An attack would still cause a\n   faulty link to be believed\
    \ to be up, but there is little that can be\n   done about it.  However, if the\
    \ echo packets are guessable, it may be\n   possible to spoof from an external\
    \ source and cause BFD to believe\n   that a one-way link is really bidirectional.\
    \  As a result, it is\n   important that the echo packets contain random material\
    \ that is also\n   checked upon reception.\n"
- title: 5.  Impact of New Authentication Requirements
  contents:
  - "5.  Impact of New Authentication Requirements\n   BFD can be run in software\
    \ or hardware.  Hardware implementations run\n   BFD at a much smaller timeout,\
    \ typically in the order of few\n   milliseconds.  For instance, with a timeout\
    \ of 3.3 milliseconds, a\n   BFD session is required to send or receive 3 packets\
    \ every 10\n   milliseconds.  Software implementations typically run with a timeout\n\
    \   in hundreds of milliseconds.\n   Additionally, it is not common to find hardware\
    \ support for computing\n   the authentication data for the BFD session in hardware\
    \ or software.\n   In the Keyed MD5 and Keyed SHA-1 implementation where the sequence\n\
    \   number does not increase with every packet, software can be used to\n   compute\
    \ the authentication data.  This is true if the time between\n   the increasing\
    \ sequence number is long enough to compute the data in\n   software.  The ability\
    \ to compute the hash in software is difficult\n   with Meticulous Keyed MD5 and\
    \ Meticulous Keyed SHA-1 if the time\n   interval between transmits or between\
    \ receives is small.  The\n   computation problem becomes worse if hundred or\
    \ thousands of sessions\n   require the hash to be recomputed every few milliseconds.\n\
    \   Smaller and cheaper boxes that have to support a few hundred BFD\n   sessions\
    \ are boxes that also use a slower CPU.  The CPU is used for\n   running the entire\
    \ control plane software in addition to supporting\n   the BFD sessions.  As a\
    \ general rule, no more than 40-45% of the CPU\n   can be dedicated towards supporting\
    \ BFD.  Adding computation of the\n   hash for every BFD session can easily cause\
    \ the CPU to exceed the\n   40-45% limit even with a few tens of sessions.  On\
    \ higher-end boxes\n   with faster and more CPU cores, the expectation is that\
    \ the number of\n   sessions that need to be supported are in the thousands, but\
    \ the\n   number of BFD sessions with authentication that CPU can support is\n\
    \   still in the hundreds.\n   Implementors should assess the impact of authenticating\
    \ BFD sessions\n   on their platform.\n"
- title: 6.  Considerations for Improvement
  contents:
  - "6.  Considerations for Improvement\n   This section suggests changes that can\
    \ be adopted to improve the\n   protection of BFD.\n   The security risks brought\
    \ by SHA-1 and MD5 have been well\n   understood.  However, when using a stronger\
    \ digest algorithm, e.g.,\n   SHA-2, the imposed computing overhead will seriously\
    \ affect the\n   performance of BFD implementation.  In order to make the trade-off\n\
    \   between the strong algorithm requirement and the imposed overhead,\n   Galois\
    \ Message Authentication Code (GMAC) can be a candidate option.\n   This algorithm\
    \ is relatively effective and has been supported by\n   IPsec for data origin\
    \ authentication.  More detailed information can\n   be found in \"The Use of\
    \ Galois Message Authentication Code (GMAC) in\n   IPsec ESP and AH\" [RFC4543].\n\
    \   There has been some hallway conversation around the idea of using BFD\n  \
    \ cryptographic authentication only when some data in the BFD payload\n   changes.\
    \  The other BFD packets can be transmitted and received\n   without authentication\
    \ enabled.  The bulk of the BFD packets that are\n   transmitted and received\
    \ have no state change associated with them.\n   Limiting authentication to BFD\
    \ packets that affect a BFD session\n   state allows for more sessions to be supported\
    \ for authentication.\n   This change can significantly help the routers since\
    \ they don't have\n   to compute and verify the authentication digest for the\
    \ BFD packets\n   coming at the millisecond intervals.  This proposal needs some\
    \ more\n   discussion in the BFD working group and is certainly a direction that\n\
    \   BFD could look at.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   This document discusses vulnerabilities in the\
    \ existing BFD protocol\n   and suggests possible mitigations.\n   In analyzing\
    \ the improvements for BFD, the ability to repel a replay\n   attack is discussed.\
    \  For example, increasing the sequence number to\n   a 64-bit value makes the\
    \ wrap-around time much longer, and a replay\n   attack can be easily prevented.\n\
    \   Mindful of the impact that stronger algorithms can have on the\n   performance\
    \ of BFD, the document suggests GMAC as a possible\n   candidate for MAC function.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC1321]  Rivest, R., \"The MD5 Message-Digest\
    \ Algorithm\", RFC 1321,\n              April 1992, <http://www.rfc-editor.org/info/rfc1321>.\n\
    \   [RFC5880]  Katz, D. and D. Ward, \"Bidirectional Forwarding Detection\n  \
    \            (BFD)\", RFC 5880, June 2010,\n              <http://www.rfc-editor.org/info/rfc5880>.\n\
    \   [RFC6039]  Manral, V., Bhatia, M., Jaeggli, J., and R. White, \"Issues\n \
    \             with Existing Cryptographic Protection Methods for Routing\n   \
    \           Protocols\", RFC 6039, October 2010,\n              <http://www.rfc-editor.org/info/rfc6039>.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [BFD-CRYPTO]\n              Bhatia, M., Manral,\
    \ V., Zhang, D., and M. Jethanandani,\n              \"BFD Generic Cryptographic\
    \ Authentication\", Work in\n              Progress, draft-ietf-bfd-generic-crypto-auth-06,\
    \ April\n              2014.\n   [BFD-HMAC] Zhang, D., Bhatia, M., Manral, V.,\
    \ and M. Jethanandani,\n              \"Authenticating BFD using HMAC-SHA-2 procedures\"\
    , Work in\n              Progress, draft-ietf-bfd-hmac-sha-05, July 2014.\n  \
    \ [RFC4543]  McGrew, D. and J. Viega, \"The Use of Galois Message\n          \
    \    Authentication Code (GMAC) in IPsec ESP and AH\", RFC 4543,\n           \
    \   May 2006, <http://www.rfc-editor.org/info/rfc4543>.\n   [RFC4822]  Atkinson,\
    \ R. and M. Fanto, \"RIPv2 Cryptographic\n              Authentication\", RFC\
    \ 4822, February 2007,\n              <http://www.rfc-editor.org/info/rfc4822>.\n\
    \   [RFC5310]  Bhatia, M., Manral, V., Li, T., Atkinson, R., White, R.,\n    \
    \          and M. Fanto, \"IS-IS Generic Cryptographic\n              Authentication\"\
    , RFC 5310, February 2009,\n              <http://www.rfc-editor.org/info/rfc5310>.\n\
    \   [RFC5709]  Bhatia, M., Manral, V., Fanto, M., White, R., Barnes, M.,\n   \
    \           Li, T., and R. Atkinson, \"OSPFv2 HMAC-SHA Cryptographic\n       \
    \       Authentication\", RFC 5709, October 2009,\n              <http://www.rfc-editor.org/info/rfc5709>.\n\
    \   [RFC6518]  Lebovitz, G. and M. Bhatia, \"Keying and Authentication for\n \
    \             Routing Protocols (KARP) Design Guidelines\", RFC 6518,\n      \
    \        February 2012, <http://www.rfc-editor.org/info/rfc6518>.\n   [RFC6862]\
    \  Lebovitz, G., Bhatia, M., and B. Weis, \"Keying and\n              Authentication\
    \ for Routing Protocols (KARP) Overview,\n              Threats, and Requirements\"\
    , RFC 6862, March 2013,\n              <http://www.rfc-editor.org/info/rfc6862>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   We would like to thank Alexander Vainshtein for his comments\
    \ on this\n   document.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Manav Bhatia\n   Ionos Networks\n   Bangalore\n   India\n\
    \   EMail: manav@ionosnetworks.com\n   Dacheng Zhang\n   Huawei\n   EMail: dacheng.zhang@gmail.com\n\
    \   Mahesh Jethanandani\n   Ciena Corporation\n   3939 North 1st Street\n   San\
    \ Jose, CA  95134\n   United States\n   Phone: 408.904.2160\n   Fax:   408.436.5582\n\
    \   EMail: mjethanandani@gmail.com\n"
