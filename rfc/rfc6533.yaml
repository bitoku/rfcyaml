- contents:
  - '    Internationalized Delivery Status and Disposition Notifications

    '
  title: __initial_text__
- contents:
  - "Abstract\n   Delivery status notifications (DSNs) are critical to the correct\n
    \  operation of an email system.  However, the existing Draft Standards\n   (RFC
    3461, RFC 3464, RFC 6522) are presently limited to ASCII text in\n   the machine-readable
    portions of the protocol.  This specification\n   adds a new address type for
    international email addresses so an\n   original recipient address with non-ASCII
    characters can be correctly\n   preserved even after downgrading.  This also provides
    updated content\n   return media types for delivery status notifications and message\n
    \  disposition notifications to support use of the new address type.\n   This
    document extends RFC 3461, RFC 3464, RFC 3798, and RFC 6522.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6533.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .
    . . . . . .  3\n   2.  Conventions Used in This Document  . . . . . . . . . .
    . . . .  3\n   3.  UTF-8 Address Type . . . . . . . . . . . . . . . . . . . .
    . .  3\n   4.  UTF-8 Delivery Status Notifications  . . . . . . . . . . . . .
    \ 6\n     4.1.  The message/global-delivery-status Media Type  . . . . . .  6\n
    \    4.2.  The message/global Media Type  . . . . . . . . . . . . . .  8\n     4.3.
    \ The message/global-headers Media Type  . . . . . . . . . .  8\n     4.4.  Using
    These Media Types with multipart/report  . . . . . .  8\n     4.5.  Additional
    Requirements on SMTP Servers  . . . . . . . . .  9\n   5.  UTF-8 Message Disposition
    Notifications  . . . . . . . . . . .  9\n   6.  IANA Considerations  . . . . .
    . . . . . . . . . . . . . . . . 10\n     6.1.  UTF-8 Mail Address Type Registration
    . . . . . . . . . . . 10\n     6.2.  Update to 'smtp' Diagnostic Type Registration
    \ . . . . . . 11\n     6.3.  message/global-headers . . . . . . . . . . . . .
    . . . . . 11\n     6.4.  message/global-delivery-status . . . . . . . . . . .
    . . . 12\n     6.5.  message/global-disposition-notification  . . . . . . . .
    . 14\n   7.  Security Considerations  . . . . . . . . . . . . . . . . . . . 15\n
    \  8.  References . . . . . . . . . . . . . . . . . . . . . . . . . . 16\n     8.1.
    \ Normative References . . . . . . . . . . . . . . . . . . . 16\n     8.2.  Informative
    References . . . . . . . . . . . . . . . . . . 17\n   Appendix A.  Changes since
    RFC 5337  . . . . . . . . . . . . . . . 18\n   Appendix B.  Acknowledgements  .
    . . . . . . . . . . . . . . . . . 18\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   When an email message is transmitted using the SMTPUTF8
    [RFC6531]\n   extension and Internationalized Email Headers [RFC6532], it is\n
    \  sometimes necessary to return that message or generate a Message\n   Disposition
    Notification (MDN) [RFC3798].  As a message sent to\n   multiple recipients can
    generate a status and disposition\n   notification for each recipient, it is helpful
    if a client can\n   correlate these notifications based on the recipient address
    it\n   provided; thus, preservation of the original recipient is important.\n
    \  This specification describes how to preserve the original recipient\n   and
    updates the MDN and DSN formats to support the new address types.\n   NOTE: While
    this specification updates the experimental versions of\n   this protocol by removing
    certain constructs (e.g., the \"<addr\n   <addr>>\" address syntax is no longer
    permitted), the name of the\n   Address Type \"UTF-8\" and the media type names
    message/global,\n   message/global-delivery-status, and message/global-headers
    have not\n   been changed.\n   This specification is a revision of and replacement
    for [RFC5337].\n   Section 6 of [RFC6530] describes the change in approach between
    this\n   specification and the previous version.\n"
  title: 1.  Introduction
- contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\",
    \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
    \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described
    in [RFC2119].\n   The formal syntax uses the Augmented Backus-Naur Form (ABNF)\n
    \  [RFC5234] notation including the core rules defined in Appendix B of\n   [RFC5234]
    and the UTF-8 syntax rules in Section 4 of [RFC3629].\n"
  title: 2.  Conventions Used in This Document
- contents:
  - "3.  UTF-8 Address Type\n   \"An Extensible Message Format for Delivery Status
    Notifications\"\n   [RFC3464] defines the concept of an address type.  The address
    format\n   introduced in \"Internationalized Email Headers\" [RFC6532] is a new\n
    \  address type.  The syntax for the new address type in the context of\n   status
    notifications is specified at the end of this section.\n   An SMTP [RFC5321] server
    that advertises both the SMTPUTF8 extension\n   [RFC6531] and the DSN extension
    [RFC3461] MUST accept a UTF-8 address\n   type in the ORCPT parameter including
    8-bit UTF-8 characters.  This\n   address type also includes a 7-bit encoding
    suitable for use in a\n   message/delivery-status body part or an ORCPT parameter
    sent to an\n   SMTP server that does not advertise SMTPUTF8.\n   This address
    type has 3 forms: utf-8-addr-xtext, utf-8-addr-unitext,\n   and utf-8-address.
    \ Only the first form is 7-bit safe (only uses\n   ASCII characters [ASCII]).\n
    \  The utf-8-address form is only suitable for use in newly defined\n   protocols
    capable of native representation of 8-bit characters.  That\n   is, the utf-8-address
    form MUST NOT be used:\n   1.  in the ORCPT parameter when the SMTP server doesn't
    advertise\n       support for SMTPUTF8 (utf-8-addr-xtext MUST be used instead);
    or\n   2.  if the SMTP server supports SMTPUTF8, but the address contains\n       ASCII
    characters not permitted in the ORCPT parameter (e.g., the\n       ORCPT parameter
    forbids unencoded SP and the '=' character),\n       (either utf-8-addr-unitext
    or utf-8-addr-xtext MUST be used\n       instead); or\n   3.  in a 7-bit transport
    environment including a message/\n       delivery-status \"Original-Recipient:\"
    or \"Final-Recipient:\"\n       field, (utf-8-addr-xtext MUST be used instead).\n
    \  The utf-8-address form MAY be used in the ORCPT parameter when the\n   SMTP
    server also advertises support for SMTPUTF8 and the address\n   doesn't contain
    any ASCII characters not permitted in the ORCPT\n   parameter.  It SHOULD be used
    in a message/global-delivery-status\n   \"Original-Recipient:\" or \"Final-Recipient:\"
    DSN field, or in an\n   \"Original-Recipient:\" header field [RFC3798] if the
    message is a\n   SMTPUTF8 message.\n   In addition, the utf-8-addr-unitext form
    can be used anywhere where\n   the utf-8-address form is allowed.\n   When used
    in the ORCPT parameter, the UTF-8 address type requires\n   that ASCII CTLs, SP,
    '\\', '+', and '=' be encoded using 'unitext'\n   encoding (see below).  This
    is described by the utf-8-addr-xtext and\n   utf-8-addr-unitext forms in the ABNF
    below.  The 'unitext' encoding\n   uses \"\\x{HEXPOINT}\" syntax (EmbeddedUnicodeChar
    in the ABNF below)\n   for encoding any Unicode character outside of ASCII range,
    as well as\n   for encoding CTLs, SP, '\\', '+', and '='.  HEXPOINT is 2 to 6\n
    \  hexadecimal digits.  This encoding avoids the need to use the xtext\n   encoding
    described in [RFC3461], as any ASCII characters that need to\n   be escaped using
    xtext encoding never appear in any unitext-encoded\n   string.  When sending data
    to a SMTPUTF8-capable server, native UTF-8\n   characters SHOULD be used instead
    of the EmbeddedUnicodeChar syntax\n   described below.  When sending data to an
    SMTP server that does not\n   advertise SMTPUTF8, then the EmbeddedUnicodeChar
    syntax MUST be used\n   instead of UTF-8.\n   When the ORCPT parameter is placed
    in a message/\n   global-delivery-status \"Original-Recipient:\" field, the\n
    \  utf-8-addr-xtext form of the UTF-8 address type SHOULD be converted\n   to
    the utf-8-address form (see the ABNF below) by removing the\n   unitext encoding.
    \ However, if an address is labeled with the UTF-8\n   address type but does not
    conform to utf-8 syntax, then it MUST be\n   copied into the message/global-delivery-status
    field without\n   alteration.\n   The ability to encode characters with the EmbeddedUnicodeChar\n
    \  encodings should be viewed as a transitional mechanism and avoided\n   when
    possible.  It is hoped that as systems lacking support for\n   SMTPUTF8 become
    less common over time, these encodings can eventually\n   be phased out.\n   In
    the ABNF below, all productions not defined in this document are\n   defined in
    Appendix B of [RFC5234], in Section 4 of [RFC3629], or in\n   [RFC3464].\n   utf-8-type-addr
    \    = \"utf-8;\" utf-8-enc-addr\n   utf-8-address       = Mailbox\n     ; Mailbox
    as defined in [RFC6531].\n   utf-8-enc-addr      = utf-8-addr-xtext /\n                         utf-8-addr-unitext
    /\n                         utf-8-address\n   utf-8-addr-xtext    = 1*(QCHAR /
    EmbeddedUnicodeChar)\n                         ; 7bit form of utf-8-addr-unitext.\n
    \                        ; Safe for use in the ORCPT [RFC3461]\n                         ;
    parameter even when SMTPUTF8 SMTP\n                         ; extension is not
    advertised.\n   utf-8-addr-unitext  = 1*(QUCHAR / EmbeddedUnicodeChar)\n                       ;
    MUST follow utf-8-address ABNF when\n                       ; dequoted.\n                       ;
    Safe for using in the ORCPT [RFC3461]\n                       ; parameter when
    SMTPUTF8 SMTP extension\n                       ; is also advertised.\n   QCHAR
    \             = %x21-2a / %x2c-3c / %x3e-5b / %x5d-7e\n                       ;
    ASCII printable characters except\n                       ; CTLs, SP, '\\', '+',
    '='.\n   QUCHAR              = QCHAR / UTF8-2 / UTF8-3 / UTF8-4\n                       ;
    ASCII printable characters except\n                       ; CTLs, SP, '\\', '+'
    and '=', plus\n                       ; other Unicode characters encoded in UTF-8\n
    \  EmbeddedUnicodeChar =   %x5C.78 \"{\" HEXPOINT \"}\"\n                       ;
    starts with \"\\x\"\n   HEXPOINT = ( ( \"0\"/\"1\" ) %x31-39 ) / \"10\" / \"20\"
    /\n              \"2B\" / \"3D\" / \"7F\" /         ; all xtext-specials\n              \"5C\"
    / (HEXDIG8 HEXDIG) /    ; 2-digit forms\n              ( NZHEXDIG 2(HEXDIG) )
    /     ; 3-digit forms\n              ( NZDHEXDIG 3(HEXDIG) ) /    ; 4-digit forms
    excluding\n              ( \"D\" %x30-37 2(HEXDIG) ) /  ; ... surrogate\n              (
    NZHEXDIG 4(HEXDIG) ) /     ; 5-digit forms\n              ( \"10\" 4*HEXDIG )
    \           ; 6-digit forms\n              ; represents either \"\\\" or a Unicode
    code point outside\n              ; the ASCII repertoire\n   HEXDIG8             =
    %x38-39 / \"A\" / \"B\" / \"C\" / \"D\" / \"E\" / \"F\"\n                       ;
    HEXDIG excluding 0-7\n   NZHEXDIG            = %x31-39 / \"A\" / \"B\" / \"C\"
    / \"D\" / \"E\" / \"F\"\n                       ; HEXDIG excluding \"0\"\n   NZDHEXDIG
    \          = %x31-39 / \"A\" / \"B\" / \"C\" / \"E\" / \"F\"\n                       ;
    HEXDIG excluding \"0\" and \"D\"\n"
  title: 3.  UTF-8 Address Type
- contents:
  - "4.  UTF-8 Delivery Status Notifications\n   A traditional delivery status notification
    [RFC3464] comes in a\n   three-part multipart/report [RFC6522] container, where
    the first part\n   is human-readable text describing the error, the second part
    is a\n   7-bit-only message/delivery-status, and the optional third part is\n
    \  used for content (message/rfc822) or header (text/rfc822-headers)\n   return.
    \ As the present standard DSN format does not permit the\n   return of undeliverable
    SMTPUTF8 messages, three new media types have\n   been defined.  ([RFC5337] introduced
    experimental versions of these\n   media types.)\n"
  - contents:
    - "4.1.  The message/global-delivery-status Media Type\n   The first type, message/global-delivery-status,
      has the syntax of\n   message/delivery-status with three modifications.  First,
      the charset\n   for message/global-delivery-status is UTF-8, and thus any field
      MAY\n   contain UTF-8 characters when appropriate (see the ABNF below).  In\n
      \  particular, the \"Diagnostic-Code:\" field MAY contain UTF-8 as\n   described
      in SMTPUTF8 [RFC6531]; the \"Diagnostic-Code:\" field SHOULD\n   be in i-default
      language [RFC2277].  Second, systems generating a\n   message/global-delivery-status
      body part SHOULD use the utf-8-address\n   form of the UTF-8 address type for
      all addresses containing\n   characters outside the ASCII repertoire.  These
      systems SHOULD up-\n   convert the utf-8-addr-xtext or the utf-8-addr-unitext
      form of a\n   UTF-8 address type in the ORCPT parameter to the utf-8-address
      form\n   of a UTF-8 address type in the \"Original-Recipient:\" field.  Third,\n
      \  an optional field called \"Localized-Diagnostic:\" is added.  Each\n   instance
      includes a language tag [RFC5646] and contains text in the\n   specified language.
      \ This is equivalent to the text part of the\n   \"Diagnostic-Code:\" field.
      \ All instances of \"Localized-Diagnostic:\"\n   MUST use different language
      tags.  The ABNF for message/\n   global-delivery-status is specified below.\n
      \  In the ABNF below, all productions not defined in this document are\n   defined
      in Appendix B of [RFC5234], in Section 4 of [RFC3629], or in\n   [RFC3464].
      \ Note that <text-fixed> is the same as <text> from\n   [RFC5322], but without
      <obs-text>.  If or when RFC 5322 is updated to\n   disallow <obs-text>, <text-fixed>
      should become just <text>.  Also,\n   if or when RFC 5322 is updated to disallow
      control characters in\n   <text>, <text-fixed> should become a reference to
      that update\n   instead.\n   utf-8-delivery-status-content = per-message-fields\n
      \                        1*( CRLF utf-8-per-recipient-fields )\n        ; \"per-message-fields\"
      remains unchanged from the definition\n        ; in RFC 3464, except for the
      \"extension-field\",\n        ; which is updated below.\n   utf-8-per-recipient-fields
      =\n         [ original-recipient-field CRLF ]\n         final-recipient-field
      CRLF\n         action-field CRLF\n         status-field CRLF\n         [ remote-mta-field
      CRLF ]\n         [ diagnostic-code-field CRLF\n           *(localized-diagnostic-text-field
      CRLF) ]\n         [ last-attempt-date-field CRLF ]\n             [ final-log-id-field
      CRLF ]\n         [ will-retry-until-field CRLF ]\n         *( extension-field
      CRLF )\n     ; All fields except for \"original-recipient-field\",\n     ; \"final-recipient-field\",
      \"diagnostic-code-field\",\n     ; and \"extension-field\" remain unchanged
      from\n     ; the definition in RFC 3464.\n   generic-address =/ utf-8-enc-addr\n
      \    ; Only allowed with the \"utf-8\" address-type.\n     ; Updates Section
      3.2.3 of RFC 3798.\n     ;\n     ; This indirectly updates \"original-recipient-field\"\n
      \    ; and \"final-recipient-field\".\n   diagnostic-code-field =\n        \"Diagnostic-Code\"
      \":\" diagnostic-type \";\" *text-fixed\n   localized-diagnostic-text-field
      =\n        \"Localized-Diagnostic\" \":\" Language-Tag \";\" *utf8-text\n     ;
      \"Language-Tag\" is a language tag as defined in [RFC5646].\n   extension-field
      =/ extension-field-name \":\" *utf8-text\n     ; Updates Section 7 of RFC3798\n
      \  text-fixed = %d1-9 /      ; Any ASCII character except for NUL,\n                %d11
      /       ; CR, and LF.\n                %d12 /       ; See note above about <text-fixed>\n
      \               %d14-127\n   utf8-text = text-fixed / UTF8-non-ascii\n   UTF8-non-ascii
      \  = UTF8-2 / UTF8-3 / UTF8-4\n"
    title: 4.1.  The message/global-delivery-status Media Type
  - contents:
    - "4.2.  The message/global Media Type\n   The second type, used for returning
      the content, is message/global,\n   which is similar to message/rfc822, except
      it contains a message with\n   UTF-8 headers.  This media type is described
      in [RFC6532].\n"
    title: 4.2.  The message/global Media Type
  - contents:
    - "4.3.  The message/global-headers Media Type\n   The third type, used for returning
      the headers, is message/\n   global-headers and contains only the UTF-8 header
      fields of a message\n   (all lines prior to the first blank line in a SMTPUTF8
      message).\n   Unlike message/global, this body part provides no difficulties
      for\n   the present infrastructure.\n"
    title: 4.3.  The message/global-headers Media Type
  - contents:
    - "4.4.  Using These Media Types with multipart/report\n   Note that as far as
      a multipart/report [RFC6522] container is\n   concerned, message/global-delivery-status,
      message/global, and\n   message/global-headers MUST be treated as equivalent
      to message/\n   delivery-status, message/rfc822, and text/rfc822-headers.  That
      is,\n   implementations processing multipart/report MUST expect any\n   combinations
      of the 6 media types mentioned above inside a multipart/\n   report media type.\n
      \  All three new types will typically use the \"8bit\" Content-Transfer-\n   Encoding.
      \ (In the event all content is 7-bit, the equivalent\n   traditional types for
      delivery status notifications MAY be used.  For\n   example, if information
      in a message/global-delivery-status part can\n   be represented without any
      loss of information as message/\n   delivery-status, then the message/delivery-status
      body part may be\n   used.)  Note that [RFC6532] relaxed a restriction from
      MIME [RFC2046]\n   regarding the use of Content-Transfer-Encoding in new \"message\"\n
      \  subtypes.  This specification explicitly allows the use of Content-\n   Transfer-Encoding
      in message/global-headers and message/\n   global-delivery-status.  This is
      not believed to be problematic as\n   these new media types are intended primarily
      for use by newer systems\n   with full support for 8-bit MIME and UTF-8 headers.\n"
    title: 4.4.  Using These Media Types with multipart/report
  - contents:
    - "4.5.  Additional Requirements on SMTP Servers\n   If an SMTP server that advertises
      both SMTPUTF8 and DSN needs to\n   return an undeliverable SMTPUTF8 message,
      then it has two choices for\n   encapsulating the SMTPUTF8 message when generating
      the corresponding\n   multipart/report:\n      If the return-path SMTP server
      does not support SMTPUTF8, then the\n      undeliverable body part and headers
      MUST be encoded using a 7-bit\n      Content-Transfer-Encoding such as \"base64\"
      or \"quoted-printable\"\n      [RFC2045], as detailed in Section 4.\n      Otherwise,
      \"8bit\" Content-Transfer-Encoding can be used.\n"
    title: 4.5.  Additional Requirements on SMTP Servers
  title: 4.  UTF-8 Delivery Status Notifications
- contents:
  - "5.  UTF-8 Message Disposition Notifications\n   Message Disposition Notifications
    [RFC3798] have a similar design and\n   structure to DSNs.  As a result, they
    use the same basic return\n   format.  When generating an MDN for a UTF-8 header
    message, the third\n   part of the multipart/report contains the returned content
    (message/\n   global) or header (message/global-headers), same as for DSNs.  The\n
    \  second part of the multipart/report uses a new media type, message/\n   global-disposition-notification,
    which has the syntax of message/\n   disposition-notification with two modifications.
    \ First, the charset\n   for message/global-disposition-notification is UTF-8,
    and thus any\n   field MAY contain UTF-8 characters when appropriate (see the
    ABNF\n   below).  (In particular, the failure-field, the error-field, and the\n
    \  warning-field MAY contain UTF-8.  These fields SHOULD be in i-default\n   language
    [RFC2277].)  Second, systems generating a message/\n   global-disposition-notification
    body part (typically a mail user\n   agent) SHOULD use the UTF-8 address type
    for all addresses containing\n   characters outside the ASCII repertoire.\n   The
    MDN specification also defines the \"Original-Recipient:\" header\n   field, which
    is added with a copy of the contents of ORCPT at\n   delivery time.  When generating
    an \"Original-Recipient:\" header\n   field, a delivery agent writing a UTF-8
    header message in native\n   format SHOULD convert the utf-8-addr-xtext or the
    utf-8-addr-unitext\n   form of a UTF-8 address type in the ORCPT parameter to
    the\n   corresponding utf-8-address form.\n   The MDN specification also defines
    the \"Disposition-Notification-To:\"\n   header field, which is an address header
    field and thus follows the\n   same 8-bit rules as other address header fields
    such as \"From:\" and\n   \"To:\" when used in a UTF-8 header message.\n     ;
    ABNF for \"original-recipient-header\", \"original-recipient-field\",\n     ;
    and \"final-recipient-field\" from RFC 3798 is implicitly updated\n     ; as they
    use the updated \"generic-address\" as defined in\n     ; Section 4 of this document.\n
    \  failure-field = \"Failure\" \":\" *utf8-text\n     ; \"utf8-text\" is defined
    in Section 4 of this document.\n   error-field = \"Error\" \":\" *utf8-text\n
    \    ; \"utf8-text\" is defined in Section 4 of this document.\n   warning-field
    = \"Warning\" \":\" *utf8-text\n     ; \"utf8-text\" is defined in Section 4 of
    this document.\n"
  title: 5.  UTF-8 Message Disposition Notifications
- contents:
  - "6.  IANA Considerations\n   This specification does not create any new IANA registries.
    \ However,\n   the following items have been registered as a result of this\n
    \  document.\n"
  - contents:
    - "6.1.  UTF-8 Mail Address Type Registration\n   The mail address type registry
      was created by [RFC3464].  The\n   registration template response follows:\n
      \  (a) The address-type name.\n       UTF-8\n   (b) The syntax for mailbox addresses
      of this type, specified using\n       BNF, regular expressions, ASN.1, or other
      non-ambiguous language.\n       See Section 3.\n   (c) If addresses of this
      type are not composed entirely of graphic\n       characters from the ASCII
      repertoire, a specification for how\n       they are to be encoded as graphic
      ASCII characters in an\n       \"Original-Recipient:\" or \"Final-Recipient:\"
      DSN field.\n       This address type has 3 forms (as defined in Section 3):\n
      \      utf-8-addr-xtext, utf-8-addr-unitext, and utf-8-address.  Only\n       the
      first form is 7-bit safe.\n"
    title: 6.1.  UTF-8 Mail Address Type Registration
  - contents:
    - "6.2.  Update to 'smtp' Diagnostic Type Registration\n   The mail diagnostic
      type registry was created by [RFC3464] and\n   updated by [RFC5337].  This specification
      replaces [RFC5337].  The\n   registration for the 'smtp' diagnostic type has
      been updated to\n   reference RFC 6533 in addition to [RFC3464] and to remove
      the\n   reference to [RFC5337].\n   When the 'smtp' diagnostic type is used
      in the context of a message/\n   delivery-status body part, it remains as presently
      defined.  When the\n   'smtp' diagnostic type is used in the context of a message/\n
      \  global-delivery-status body part, the codes remain the same, but the\n   text
      portion MAY contain UTF-8 characters.\n"
    title: 6.2.  Update to 'smtp' Diagnostic Type Registration
  - contents:
    - "6.3.  message/global-headers\n   Type name:  message\n   Subtype name:  global-headers\n
      \  Required parameters:  none\n   Optional parameters:  none\n   Encoding considerations:
      \ This media type contains Internationalized\n      Email Headers [RFC6532]
      with no message body.  Whenever possible,\n      the 8-bit content transfer
      encoding SHOULD be used.  When this\n      media type passes through a 7-bit-only
      SMTP infrastructure, it MAY\n      be encoded with the base64 or quoted-printable
      content transfer\n      encoding.\n   Security considerations:  See Section
      7.\n   Interoperability considerations:  It is important that this media\n      type
      is not converted to a charset other than UTF-8.  As a result,\n      implementations
      MUST NOT include a charset parameter with this\n      media type.  Although
      it might be possible to down-convert this\n      media type to the text/rfc822-header
      media type, such conversion\n      is discouraged as it loses information.\n
      \  Published specification:  RFC 6533\n   Applications that use this media type:
      \ SMTPUTF8 servers and email\n      clients that support multipart/report generation
      or parsing.\n   Additional information:\n      Magic number(s):  none\n      File
      extension(s):  In the event this is saved to a file, the\n         extension
      \".u8hdr\" is suggested.\n      Macintosh file type code(s):  The 'TEXT' type
      code is suggested as\n         files of this type are typically used for diagnostic
      purposes\n         and suitable for analysis in a UTF-8-aware text editor.  A\n
      \        uniform type identifier (UTI) of\n         \"public.utf8-email-message-header\"
      is suggested.  This type\n         conforms to \"public.utf8-plain-text\" and
      \"public.plain-text\".\n   Person & email address to contact for further information:
      \ See the\n      Authors' Addresses section of this document.\n   Intended usage:
      \ COMMON\n   Restrictions on usage:  This media type contains textual data in
      the\n      UTF-8 charset.  It typically contains octets with the 8th bit set.\n
      \     As a result, a transfer encoding is required when a 7-bit\n      transport
      is used.\n   Author:  See the Authors' Addresses section of this document.\n
      \  Change controller:  IETF Standards Process\n"
    title: 6.3.  message/global-headers
  - contents:
    - "6.4.  message/global-delivery-status\n   Type name:  message\n   Subtype name:
      \ global-delivery-status\n   Required parameters:  none\n   Optional parameters:
      \ none\n   Encoding considerations:  This media type contains delivery status\n
      \     notification attributes in the UTF-8 charset.  The 8-bit content\n      transfer
      encoding MUST be used with this content-type, unless it\n      is sent over
      a 7-bit transport environment, in which case quoted-\n      printable or base64
      may be necessary.\n   Security considerations:  See Section 7\n   Interoperability
      considerations:  This media type provides\n      functionality similar to the
      message/delivery-status content-type\n      for email message return information.
      \ Clients of the previous\n      format will need to be upgraded to interpret
      the new format;\n      however, the new media type makes it simple to identify
      the\n      difference.\n   Published specification:  RFC 6533\n   Applications
      that use this media type:  SMTP servers and email\n      clients that support
      delivery status notification generation or\n      parsing.\n   Additional information:\n
      \     Magic number(s):  none\n      File extension(s):  The extension \".u8dsn\"
      is suggested.\n      Macintosh file type code(s):  A uniform type identifier
      (UTI) of\n         \"public.utf8-email-message-delivery-status\" is suggested.
      \ This\n         type conforms to \"public.utf8-plain-text\".\n   Person & email
      address to contact for further information:  See the\n      Authors' Addresses
      section of this document.\n   Intended usage:  COMMON\n   Restrictions on usage:
      \ This is expected to be the second part of a\n      multipart/report.\n   Author:
      \ See the Authors' Addresses section of this document.\n   Change controller:
      \ IETF Standards Process\n"
    title: 6.4.  message/global-delivery-status
  - contents:
    - "6.5.  message/global-disposition-notification\n   Type name:  message\n   Subtype
      name:  global-disposition-notification\n   Required parameters:  none\n   Optional
      parameters:  none\n   Encoding considerations:  This media type contains disposition\n
      \     notification attributes in the UTF-8 charset.  The 8-bit content\n      transfer
      encoding MUST be used with this content-type, unless it\n      is sent over
      a 7-bit transport environment, in which case quoted-\n      printable or base64
      may be necessary.\n   Security considerations:  See Section 7.\n   Interoperability
      considerations:  This media type provides\n      functionality similar to the
      message/disposition-notification\n      content-type for email message disposition
      information.  Clients\n      of the previous format will need to be upgraded
      to interpret the\n      new format; however, the new media type makes it simple
      to\n      identify the difference.\n   Published specification:  RFC 6533\n
      \  Applications that use this media type:  Email clients or servers that\n      support
      message disposition notification generation or parsing.\n   Additional information:\n
      \     Magic number(s):  none\n      File extension(s):  The extension \".u8mdn\"
      is suggested.\n      Macintosh file type code(s):  A uniform type identifier
      (UTI) of\n         \"public.utf8-email-message-disposition-notification\" is\n
      \        suggested.  This type conforms to \"public.utf8-plain-text\".\n   Person
      & email address to contact for further information:  See the\n      Authors'
      Addresses section of this document.\n   Intended usage:  COMMON\n   Restrictions
      on usage:  This is expected to be the second part of a\n      multipart/report.\n
      \  Author:  See the Authors' Addresses section of this document.\n   Change
      controller:  IETF Standards Process\n"
    title: 6.5.  message/global-disposition-notification
  title: 6.  IANA Considerations
- contents:
  - "7.  Security Considerations\n   Automated use of report types without authentication
    presents several\n   security issues.  Forging negative reports presents the opportunity\n
    \  for denial-of-service attacks when the reports are used for automated\n   maintenance
    of directories or mailing lists.  Forging positive\n   reports may cause the sender
    to incorrectly believe a message was\n   delivered when it was not.\n   Malicious
    users can generate report structures designed to trigger\n   coding flaws in report
    parsers.  Report parsers need to use secure\n   coding techniques to avoid the
    risk of buffer overflow or denial-of-\n   service attacks against parser coding
    mistakes.  Code reviews of such\n   parsers are also recommended.\n   Malicious
    users of the email system regularly send messages with\n   forged envelope return
    paths, and these messages trigger delivery\n   status reports that result in a
    large amount of unwanted traffic on\n   the Internet.  Many users choose to ignore
    delivery status\n   notifications because they are usually the result of \"blowback\"
    from\n   forged messages and thus never notice when messages they sent go\n   undelivered.
    \ As a result, support for correlation of delivery status\n   and message disposition
    notification messages with sent messages has\n   become a critical feature of
    mail clients and possibly mail stores,\n   if the email infrastructure is to remain
    reliable.  In the short\n   term, simply correlating Message-IDs may be sufficient
    to distinguish\n   true status notifications from those resulting from forged
    originator\n   addresses.  But in the longer term, including cryptographic signature\n
    \  material that can securely associate the status notification with the\n   original
    message is advisable.\n   As this specification permits UTF-8 in additional fields,
    the\n   security considerations of UTF-8 [RFC3629] apply.\n"
  title: 7.  Security Considerations
- contents:
  - '8.  References

    '
  - contents:
    - "8.1.  Normative References\n   [ASCII]    American National Standards Institute
      (formerly United\n              States of America Standards Institute), \"USA
      Code for\n              Information Interchange\", ANSI X3.4-1968, 1968.\n              ANSI
      X3.4-1968 has been replaced by newer versions with\n              slight modifications,
      but the 1968 version remains\n              definitive for the Internet.\n   [RFC2119]
      \ Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement
      Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2277]  Alvestrand, H., \"IETF
      Policy on Character Sets and\n              Languages\", BCP 18, RFC 2277, January
      1998.\n   [RFC3461]  Moore, K., \"Simple Mail Transfer Protocol (SMTP) Service\n
      \             Extension for Delivery Status Notifications (DSNs)\",\n              RFC
      3461, January 2003.\n   [RFC3464]  Moore, K. and G. Vaudreuil, \"An Extensible
      Message Format\n              for Delivery Status Notifications\", RFC 3464,\n
      \             January 2003.\n   [RFC3629]  Yergeau, F., \"UTF-8, a transformation
      format of ISO\n              10646\", STD 63, RFC 3629, November 2003.\n   [RFC3798]
      \ Hansen, T. and G. Vaudreuil, \"Message Disposition\n              Notification\",
      RFC 3798, May 2004.\n   [RFC5234]  Crocker, D. and P. Overell, \"Augmented BNF
      for Syntax\n              Specifications: ABNF\", STD 68, RFC 5234, January
      2008.\n   [RFC5321]  Klensin, J., \"Simple Mail Transfer Protocol\", RFC 5321,\n
      \             October 2008.\n   [RFC5322]  Resnick, P., Ed., \"Internet Message
      Format\", RFC 5322,\n              October 2008.\n   [RFC5646]  Phillips, A.
      and M. Davis, \"Tags for Identifying\n              Languages\", BCP 47, RFC
      5646, September 2009.\n   [RFC6522]  Kucherawy, M., Ed., \"The Multipart/Report
      Media Type for\n              the Reporting of Mail System Administrative Messages\",
      STD\n              73, RFC 6522, January 2012.\n   [RFC6530]  Klensin, J. and
      Y. Ko, \"Overview and Framework for\n              Internationalized Email\",
      RFC 6530, February 2012.\n   [RFC6531]  Yao, J. and W. Mao, \"SMTP Extension
      for Internationalized\n              Email\", RFC 6531, February 2012.\n   [RFC6532]
      \ Yang, A., Steele, S., and N. Freed, \"Internationalized\n              Email
      Headers\", RFC 6532, February 2012.\n"
    title: 8.1.  Normative References
  - contents:
    - "8.2.  Informative References\n   [RFC2045]  Freed, N. and N. Borenstein, \"Multipurpose
      Internet Mail\n              Extensions (MIME) Part One: Format of Internet
      Message\n              Bodies\", RFC 2045, November 1996.\n   [RFC2046]  Freed,
      N. and N. Borenstein, \"Multipurpose Internet Mail\n              Extensions
      (MIME) Part Two: Media Types\", RFC 2046,\n              November 1996.\n   [RFC5337]
      \ Newman, C. and A. Melnikov, \"Internationalized Delivery\n              Status
      and Disposition Notifications\", RFC 5337,\n              September 2008.\n"
    title: 8.2.  Informative References
  title: 8.  References
- contents:
  - "Appendix A.  Changes since RFC 5337\n   Changes were made to move from Experimental
    to Standards Track.  The\n   most significant was the removal of an embedded alternative
    ASCII\n   address within a utf-8-address, and the reflections of the ABNF\n   changes
    in [RFC6531].\n   Fixed description of utf-8-addr-xtext and utf-8-addr-unitext.\n
    \  References to Downgrade and uMailbox removed/fixed.\n   ABNF changes and fixed
    errata submitted by Alfred Hoenes.\n   Minor changes to MIME type references.\n
    \  Other minor corrections.\n"
  title: Appendix A.  Changes since RFC 5337
- contents:
  - "Appendix B.  Acknowledgements\n   Many thanks for input provided by Pete Resnick,
    James Galvin, Ned\n   Freed, John Klensin, Harald Alvestrand, Frank Ellermann,
    SM, Alfred\n   Hoenes, Kazunori Fujiwara, and members of the EAI working group
    to\n   help solidify this proposal.\n"
  title: Appendix B.  Acknowledgements
- contents:
  - "Authors' Addresses\n   Tony Hansen (editor)\n   AT&T Laboratories\n   200 Laurel
    Ave.\n   Middletown, NJ  07748\n   US\n   EMail: tony+eaidsn@maillennium.att.com\n
    \  Chris Newman\n   Oracle\n   800 Royal Oaks\n   Monrovia, CA  91016-6347\n   US\n
    \  EMail: chris.newman@oracle.com\n   Alexey Melnikov\n   Isode Ltd\n   5 Castle
    Business Village\n   36 Station Road\n   Hampton, Middlesex  TW12 2BX\n   UK\n
    \  EMail: Alexey.Melnikov@isode.com\n"
  title: Authors' Addresses
