- title: __initial_text__
  contents:
  - ' Scalable Operation of Address Translators with Per-Interface Bindings

    '
- title: Abstract
  contents:
  - "Abstract\n   This document explains how to employ address translation in networks\n\
    \   that serve a large number of individual customers without requiring a\n  \
    \ correspondingly large amount of private IPv4 address space.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6619.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document explains how to employ address translation\
    \ without\n   consuming a large amount of private address space.  This is important\n\
    \   in networks that serve a large number of individual customers.\n   Networks\
    \ that serve more than 2^24 (16 million) users cannot assign a\n   unique private\
    \ IPv4 address to each user, because the largest\n   reserved private address\
    \ block reserved is 10/8 [RFC1918].  Many\n   networks are already hitting these\
    \ limits today -- for instance, in\n   the consumer Internet service market. \
    \ Even some individual devices\n   may approach these limits -- for instance,\
    \ cellular network gateways\n   or mobile IP home agents.\n   If ample IPv4 address\
    \ space were available, this would be a\n   non-issue, because the current practice\
    \ of assigning public IPv4\n   addresses to each user would remain viable, and\
    \ the complications\n   associated with using the more limited private address\
    \ space could be\n   avoided.  However, as the IPv4 address pool is becoming depleted,\n\
    \   this practice is becoming increasingly difficult to sustain.\n   It has been\
    \ suggested that more of the unassigned IPv4 space should\n   be converted for\
    \ private use, in order to allow the provisioning of\n   larger networks with\
    \ private IPv4 address space.  At the time of this\n   writing, the IANA \"free\
    \ pool\" contained only 12 unallocated unicast\n   IPv4 /8 prefixes.  Although\
    \ reserving a few of those for private use\n   would create some breathing room\
    \ for such deployments, it would not\n   result in a solution with long-term viability.\
    \  It would result in\n   significant operational and management overheads, and\
    \ it would\n   further reduce the number of available IPv4 addresses.\n   Segmenting\
    \ a network into areas of overlapping private address space\n   is another possible\
    \ technique, but it severely complicates the design\n   and operation of a network.\n\
    \   Finally, the transition to IPv6 will eventually eliminate these\n   addressing\
    \ limitations.  However, during the migration period when\n   IPv4 and IPv6 have\
    \ to coexist, address or protocol translation will\n   be needed in order to reach\
    \ IPv4 destinations.\n   The rest of this document is organized as follows.  Section\
    \ 2 gives\n   an outline of the solution, Section 3 introduces some terms,\n \
    \  Section 4 specifies the required behavior for managing NAT bindings,\n   and\
    \ Section 5 discusses the use of this technique with IPv6.\n"
- title: 2.  Solution Outline
  contents:
  - "2.  Solution Outline\n   The need for address or protocol translation during\
    \ the migration\n   period to IPv6 creates the opportunity to deploy these mechanisms\
    \ in\n   a way that allows the support of a large user base without the need\n\
    \   for a correspondingly large IPv4 address block.\n   A Network Address Translator\
    \ (NAT) is typically configured to connect\n   a network domain that uses private\
    \ IPv4 addresses to the public\n   Internet.  The NAT device, which is configured\
    \ with a public IPv4\n   address, creates and maintains a mapping for each communication\n\
    \   session from a device inside the domain it serves to devices in the\n   public\
    \ Internet.  It does that by translating the packet flow of each\n   session such\
    \ that the externally visible traffic uses only public\n   addresses.\n   In many\
    \ NAT deployments, the network domain connected by the NAT to\n   the public Internet\
    \ is a broadcast network sharing the same media,\n   where each individual device\
    \ must have a private IPv4 address that is\n   unique within this network.  In\
    \ such deployments, it is natural also\n   to implement the NAT functionality\
    \ such that it uses the private IPv4\n   address when looking up which mapping\
    \ should be used to translate a\n   given communication session.\n   It is important\
    \ to note, however, that this is not an inherent\n   requirement.  When other\
    \ methods of identifying the correct mapping\n   are available, and the NAT is\
    \ not connecting a shared-media broadcast\n   network to the Internet, there is\
    \ no need to assign each device in\n   the domain a unique IPv4 address.\n   This\
    \ is the case, for example, when the NAT connects devices to the\n   Internet\
    \ that connect to it with individual point-to-point links.  In\n   this case,\
    \ it becomes possible to use the same private addresses many\n   times, making\
    \ it possible to support any number of devices behind a\n   NAT using very few\
    \ IPv4 addresses.\n   There are tunneling-based techniques that can obtain the\
    \ same\n   benefits by establishing new tunnels over any IP network [RFC6333].\n\
    \   However, where the point-to-point links already exist, creating an\n   additional\
    \ layer of tunneling is unnecessary (and even potentially\n   harmful due to effects\
    \ on the Maximum Transfer Unit (MTU) settings).\n   The approach described in\
    \ this document can be implemented and\n   deployed within a single device and\
    \ has no effect on hosts behind it.\n   In addition, as no additional layers of\
    \ tunneling are introduced,\n   there is no effect on the MTU.  It is also unnecessary\
    \ to implement\n   tunnel endpoint discovery, security mechanisms, or other aspects\
    \ of a\n   tunneling solution.  In fact, there are no changes to the devices\n\
    \   behind the NAT.\n   Note, however, that existing tunnels are a common special\
    \ case of\n   point-to-point links.  For instance, cellular network gateways\n\
    \   terminate a large number of tunnels that are already needed for\n   mobility\
    \ management reasons.  Implementing the approach described in\n   this document\
    \ is particularly attractive in such environments, given\n   that no additional\
    \ tunneling mechanisms, negotiation, or host changes\n   are required.  In addition,\
    \ since there is no additional tunneling,\n   packets continue to take the same\
    \ path as they would normally take.\n   Other commonly used network technologies\
    \ that may be of interest\n   include Point-to-Point Protocol (PPP) [RFC1661]\
    \ links, PPP over\n   Ethernet (PPPoE) [RFC2516] encapsulation, Asynchronous Transfer\
    \ Mode\n   (ATM) Permanent Virtual Circuits (PVCs), and per-subscriber virtual\n\
    \   LAN (VLAN) allocation in consumer broadband networks.\n   The approach described\
    \ here also results in overlapping private\n   address space, like the segmentation\
    \ of the network to different\n   areas.  However, this overlap is applied only\
    \ at the network edges\n   and does not impact routing or reachability of servers\
    \ in a negative\n   way.\n"
- title: 3.  Terms
  contents:
  - "3.  Terms\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",\
    \ \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n\
    \   \"NAT\" in this document includes both \"Basic NAT\" and \"Network Address\n\
    \   Port Translation (NAPT)\" as defined by [RFC2663].  The term \"NAT\n   Session\"\
    \ is adapted from [RFC5382] and is defined as follows.\n      NAT Session - A\
    \ NAT session is an association between a transport\n      layer session as seen\
    \ in the internal realm and a session as seen\n      in the external realm, by\
    \ virtue of NAT translation.  The NAT\n      session will provide the translation\
    \ glue between the two session\n      representations.\n   This document uses\
    \ the term \"mapping\" as defined in [RFC4787] to\n   refer to state at the NAT\
    \ necessary for network address and port\n   translation of sessions.\n"
- title: 4.  Per-Interface Bindings
  contents:
  - "4.  Per-Interface Bindings\n   To support a mode of operation that uses a fixed\
    \ number of IPv4\n   addresses to serve an arbitrary number of devices, a NAT\
    \ MUST manage\n   its mappings on a per-interface basis, by associating a particular\n\
    \   NAT session not only with the five tuples used for the transport\n   connection\
    \ on both sides of the NAT but also with the internal\n   interface on which the\
    \ user device is connected to the NAT.  This\n   approach allows each internal\
    \ interface to use the same private IPv4\n   address range.  Note that the interface\
    \ need not be physical; it may\n   also correspond to a tunnel, VLAN, or other\
    \ identifiable\n   communications channel.\n   For deployments where exactly one\
    \ user device is connected with a\n   separate tunnel interface and all tunnels\
    \ use the same IPv4 address\n   for the user devices, it is redundant to store\
    \ this address in the\n   mapping in addition to the internal interface identifier.\
    \  When the\n   internal interface identifier is shorter than a 32-bit IPv4 address,\n\
    \   this may decrease the storage requirements of a mapping entry by a\n   small\
    \ measure, which may aid NAT scalability.  For other deployments,\n   it is likely\
    \ necessary to store both the user device IPv4 address and\n   the internal interface\
    \ identifier, which slightly increases the size\n   of the mapping entry.\n  \
    \ This mode of operation is only suitable in deployments where user\n   devices\
    \ connect to the NAT over point-to-point links.  If supported,\n   this mode of\
    \ operation SHOULD be configurable, and it should be\n   disabled by default in\
    \ general-purpose NAT devices.\n   All address translators make it hard to address\
    \ devices behind them.\n   The same is true of the particular NAT variant described\
    \ in this\n   document.  An additional constraint is caused by the use of the\
    \ same\n   address space for different devices behind the NAT, which prevents\n\
    \   the use of unique private addresses for communication between devices\n  \
    \ behind the same NAT.\n"
- title: 5.  IPv6 Considerations
  contents:
  - "5.  IPv6 Considerations\n   Private address space conservation is important even\
    \ during the\n   migration to IPv6, because it will be necessary to communicate\
    \ with\n   the IPv4 Internet for a long time.  This document specifies two\n \
    \  recommended deployment models for IPv6.  In the first deployment\n   model,\
    \ the mechanisms specified in this document are useful.  In the\n   second deployment\
    \ model, no additional mechanisms are needed, because\n   IPv6 addresses are already\
    \ sufficient to distinguish mappings from\n   each other.\n   The first deployment\
    \ model employs dual stack [RFC4213].  The IPv6\n   side of dual stack operates\
    \ based on global addresses and direct\n   end-to-end communication.  However,\
    \ on the IPv4 side, private\n   addressing and NATs are a necessity.  The use\
    \ of per-interface NAT\n   mappings is RECOMMENDED for the IPv4 side under these\
    \ circumstances.\n   Per-interface mappings help the NAT scale, while dual-stack\
    \ operation\n   helps reduce the pressure on the NAT device by moving key types\
    \ of\n   traffic to IPv6, eliminating the need for NAT processing.\n   The second\
    \ deployment model involves the use of address and protocol\n   translation, such\
    \ as the one defined in [RFC6146].  In this\n   deployment model, there is no\
    \ IPv4 in the internal network at all.\n   This model is applicable only in situations\
    \ where all relevant\n   devices and applications are IPv6 capable.  In this situation,\n\
    \   per-interface mappings could be employed as specified above, but they\n  \
    \ are generally unnecessary, as the IPv6 address space is large enough\n   to\
    \ provide a sufficient number of mappings.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   The practices outlined in this document do not\
    \ affect the security\n   properties of address translation.  The binding method\
    \ specified in\n   this document is not observable to a device that is on the\
    \ outside of\n   the NAT; i.e., a regular NAT and a NAT specified here cannot\
    \ be\n   distinguished.  However, the use of point-to-point links implies\n  \
    \ naturally that the devices behind the NAT cannot communicate with\n   each other\
    \ directly without going through the NAT (or a router).  The\n   use of the same\
    \ address space for different devices implies in\n   addition that a NAT operation\
    \ must occur between two devices in order\n   for them to communicate.\n   The\
    \ security implications of address translation in general have been\n   discussed\
    \ in many previous documents, including [RFC2663], [RFC2993],\n   [RFC4787], and\
    \ [RFC5382].\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [L2NAT]    Miles, D., Ed., and M. Townsley,\
    \ \"Layer2-Aware NAT\", Work\n              in Progress, March 2009.\n   [RFC1661]\
    \  Simpson, W., Ed., \"The Point-to-Point Protocol (PPP)\",\n              STD\
    \ 51, RFC 1661, July 1994.\n   [RFC1918]  Rekhter, Y., Moskowitz, R., Karrenberg,\
    \ D., de Groot, G.,\n              and E. Lear, \"Address Allocation for Private\
    \ Internets\",\n              BCP 5, RFC 1918, February 1996.\n   [RFC2516]  Mamakos,\
    \ L., Lidl, K., Evarts, J., Carrel, D., Simone, D.,\n              and R. Wheeler,\
    \ \"A Method for Transmitting PPP Over\n              Ethernet (PPPoE)\", RFC\
    \ 2516, February 1999.\n   [RFC2663]  Srisuresh, P. and M. Holdrege, \"IP Network\
    \ Address\n              Translator (NAT) Terminology and Considerations\",\n\
    \              RFC 2663, August 1999.\n   [RFC2993]  Hain, T., \"Architectural\
    \ Implications of NAT\", RFC 2993,\n              November 2000.\n   [RFC4213]\
    \  Nordmark, E. and R. Gilligan, \"Basic Transition Mechanisms\n             \
    \ for IPv6 Hosts and Routers\", RFC 4213, October 2005.\n   [RFC4787]  Audet,\
    \ F., Ed., and C. Jennings, \"Network Address\n              Translation (NAT)\
    \ Behavioral Requirements for Unicast\n              UDP\", BCP 127, RFC 4787,\
    \ January 2007.\n   [RFC5382]  Guha, S., Ed., Biswas, K., Ford, B., Sivakumar,\
    \ S., and P.\n              Srisuresh, \"NAT Behavioral Requirements for TCP\"\
    , BCP 142,\n              RFC 5382, October 2008.\n   [RFC6127]  Arkko, J. and\
    \ M. Townsley, \"IPv4 Run-Out and IPv4-IPv6\n              Co-Existence Scenarios\"\
    , RFC 6127, May 2011.\n   [RFC6146]  Bagnulo, M., Matthews, P., and I. van Beijnum,\
    \ \"Stateful\n              NAT64: Network Address and Protocol Translation from\
    \ IPv6\n              Clients to IPv4 Servers\", RFC 6146, April 2011.\n   [RFC6333]\
    \  Durand, A., Droms, R., Woodyatt, J., and Y. Lee, \"Dual-\n              Stack\
    \ Lite Broadband Deployments Following IPv4\n              Exhaustion\", RFC 6333,\
    \ August 2011.\n   [TRILOGY]  \"Trilogy Project\", <http://www.trilogy-project.org/>.\n"
- title: Appendix A.  Contributors
  contents:
  - "Appendix A.  Contributors\n   The ideas in this document were first presented\
    \ in [RFC6333].  This\n   document is also indebted to [RFC6127] and [L2NAT].\
    \  However, all of\n   these documents focused on additional components, such\
    \ as tunneling\n   protocols or the allocation of special IP address ranges. \
    \ We wanted\n   to publish a specification that just focuses on the core\n   functionality\
    \ of per-interface NAT mappings.  However, David Miles\n   and Alain Durand should\
    \ be credited with coming up with the ideas\n   discussed in this memo.\n"
- title: Appendix B.  Acknowledgments
  contents:
  - "Appendix B.  Acknowledgments\n   The authors would also like to thank Randy Bush,\
    \ Fredrik Garneij, Dan\n   Wing, Christian Vogt, Marcelo Braun, Joel Halpern,\
    \ Wassim Haddad,\n   Alan Kavanaugh, and others for interesting discussions in\
    \ this\n   problem space.\n   Lars Eggert is partly funded by the Trilogy Project\
    \ [TRILOGY], a\n   research project supported by the European Commission under\
    \ its\n   Seventh Framework Program.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Jari Arkko\n   Ericsson\n   Jorvas  02420\n   Finland\n\
    \   EMail: jari.arkko@piuha.net\n   Lars Eggert\n   NetApp\n   Sonnenallee 1\n\
    \   85551 Kirchheim\n   Germany\n   Phone: +49 151 12055791\n   EMail: lars@netapp.com\n\
    \   URI:   http://eggert.org/\n   Mark Townsley\n   Cisco\n   Paris  75006\n \
    \  France\n   EMail: townsley@cisco.com\n"
