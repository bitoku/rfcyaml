Abstract This document corrects the Augmented Backus Naur Form (ABNF) production rule associated with generating IPv6 literals in RFC 3261.
It also clarifies the rule for Uniform Resource Identifier (URI) comparison when the URIs contain textual representation of IP addresses.
This document corrects the Augmented Backus Naur Form (ABNF) production rule associated with generating IPv6 literals in RFC 3261 [1].
It also clarifies the rule for Uniform Resource Identifier (URI) comparison when the URIs contain textual representation of IP addresses.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119 [2].
Extra Colon in IPv4 Mapped IPv6 Address
The ABNF [4] for generating IPv6 literals in RFC 3261 [1] is incorrect.
When generating IPv4 mapped IPv6 addresses, the production rule may actually generate the following construct: [2001
:db8:::192.0.2.1] Note the extra colon before the IPv4 address.
The correct construct, of course, would only include two colons before the IPv4 address.
Historically, the ABNF pertaining to IPv6 references in RFC 3261 was derived from Appendix B of RFC 2373 [7], which was flawed to begin with (see errata for RFC 2373 [8]).
RFC 2373 has been subsequently obsoleted by RFC 4291 [6].
Comparing URIs with Textual Representation of IP Addresses In SIP, URIs are compared for a variety of reasons.
Registrars compare URIs when they receive a binding update request, for instance.
Section 19.1.4 of RFC 3261
[1] provides the rules for comparing URIs.
Among other rules, it states that: For two URIs to be equal, the user, password, host, and port components must match.
Does the above rule then imply that the following URIs are equal:
In all of the above examples, the textual representation of the IPv6 address is different, but these addresses are binary equivalents (implementers are also urged to consult Section 5 of this document for recommendations on IPv6 address text representations).
Section 19.1.4 of RFC 3261 does not provide any rule for URIs containing different textual representations of IPv6 addresses that all correspond to the same binary equivalent.
Note that the same ambiguity occurs for IPv4 addresses, i.e., is 192.0.2.128   192.00.02.128?
However, IPv6, with its compressed notation and the need to represent hybrid addresses (like IPv4  mapped IPv6 addresses) makes the representation issue more acute.
The resolution discussed in Section 4.2 applies to textual representations of both IPv6 and IPv4 addresses.
Resolution for Extra Colon in IPv4 Mapped IPv6 Address
The resolution to this ambiguity is simply to use the correct ABNF for the <IPv6address> production rule from Appendix A of RFC 3986 [3].
For the sake of completeness, it is reproduced below:
, this document updates RFC 3261 as follows:  the <IPv6address> and <IPv4address
production rules from RFC 3261 MUST NOT be used and instead, the production rules of the same name in RFC 3986 (and reproduced above) MUST be used.
This will render <hexpart>, <hexseq>, and <hex4> production rules in RFC 3261 obsolete; as such, these three production rules   namely, <hexpart>, <hexseq>, and <hex4>   from RFC 3261 MUST NOT be used.
The use of the <IPv4address> production rule from RFC 3986 no longer allows syntactically valid   though semantically invalid   SIP URIs of the form "sip:bob@444.555.666.777".
Clarification for Comparison of URIs with Textual Representation of IP Addresses
The resolution to this ambiguity is a simple clarification acknowledging that the textual representation of an IP address varies, but it is the binary equivalence of the IP address that must be taken into consideration when comparing two URIs that contain varying textual representations of an IP address.
Accordingly, the existing rule from the bulleted list in Section 19.1.4 of RFC 3261 MUST be modified as follows:
OLD:  For two URIs to be equal, the user, password, host, and port components must match.
For two URIs to be equal, the user, password, host, and port components must match.
If the host component contains a textual representation of IP addresses, then the representation of those IP addresses may vary.
If so, the host components are considered to match if the different textual representations yield the same binary IP address.
In addition, the text in the following paragraph MUST be added to the existing list of examples in Section 19.1.4 of RFC 3261 in order to demonstrate the intent of the modified rule: The following URIs are equivalent because the underlying binary representation of the IP addresses are the same although their textual representations vary:
Generating a Canonical IPv6 Textual Representation Implementers SHOULD generate IPv6 text representation as defined in RFC 5952 [5].
This document does not introduce any new security considerations beyond those described in RFC 3261 [1].
