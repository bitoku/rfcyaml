- title: __initial_text__
  contents:
  - '               Common DNS Data File Configuration Errors

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard.  Distribution of this memo is\n\
    \   unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo describes errors often found in DNS data files. It points\n\
    \   out common mistakes system administrators tend to make and why they\n   often\
    \ go unnoticed for long periods of time.\n"
- title: Introduction
  contents:
  - "Introduction\n   Due to the lack of extensive documentation and automated tools,\
    \ DNS\n   zone files have mostly been configured by system administrators, by\n\
    \   hand. Some of the rules for writing the data files are rather subtle\n   and\
    \ a few common mistakes are seen in domains worldwide.\n   This document is an\
    \ attempt to list \"surprises\" that administrators\n   might find hidden in their\
    \ zone files. It describes the symptoms of\n   the malady and prescribes medicine\
    \ to cure that. It also gives some\n   general recommendations and advice on specific\
    \ nameserver and zone\n   file issues and on the (proper) use of the Domain Name\
    \ System.\n"
- title: 1. SOA records
  contents:
  - "1. SOA records\n   A problem I've found in quite some nameservers is that the\
    \ various\n   timers have been set (far) too low. Especially for top level domain\n\
    \   nameservers this causes unnecessary traffic over international and\n   intercontinental\
    \ links.\n   Unfortunately the examples given in the BIND manual, in RFC's and\
    \ in\n   some expert documents give those very short timer values, and that's\n\
    \   most likely what people have modeled their SOA records after.\n   First of\
    \ all a short explanation of the timers used in the SOA\n   record:\n        -\
    \ Refresh: The SOA record of the primary server is checked\n                 \
    \  every \"refresh\" time by the secondary servers;\n                   if it\
    \ has changed, a zone transfer is done.\n        - Retry: If a secondary server\
    \ cannot reach the primary\n                 server, it tries it again every \"\
    retry\" time.\n        - Expire: If for \"expire\" time the primary server cannot\n\
    \                  be reached, all information about the zone is\n           \
    \       invalidated on the secondary servers (i.e., they\n                  are\
    \ no longer authoritative for that zone).\n        - Minimum TTL: The default\
    \ TTL value for all records in the\n                       zone file; a different\
    \ TTL value may be given\n                       explicitly in a record when necessary.\n\
    \                       (This timer is named \"Minimum\", and that's\n       \
    \                what it's function should be according to\n                 \
    \      STD 13, RFC 1035, but most (all?)\n                       implementations\
    \ take it as the default value\n                       exported with records without\
    \ an explicit TTL\n                       value).\n   For top level domain servers\
    \ I would recommend the following values:\n          86400 ; Refresh     24 hours\n\
    \           7200 ; Retry        2 hours\n        2592000 ; Expire      30 days\n\
    \         345600 ; Minimum TTL  4 days\n   For other servers I would suggest:\n\
    \          28800 ; Refresh     8 hours\n           7200 ; Retry       2 hours\n\
    \         604800 ; Expire      7 days\n          86400 ; Minimum TTL 1 day\n \
    \  but here the frequency of changes, the required speed of propagation,\n   the\
    \ reachability of the primary server etc. play a role in optimizing\n   the timer\
    \ values.\n"
- title: 2. Glue records
  contents:
  - "2. Glue records\n   Quite often, people put unnecessary glue (A) records in their\
    \ zone\n   files. Even worse is that I've even seen *wrong* glue records for an\n\
    \   external host in a primary zone file! Glue records need only be in a\n   zone\
    \ file if the server host is within the zone and there is no A\n   record for\
    \ that host elsewhere in the zone file.\n   Old BIND versions (\"native\" 4.8.3\
    \ and older versions) showed the\n   problem that wrong glue records could enter\
    \ secondary servers in a\n   zone transfer.\n"
- title: 3. "Secondary server surprise"
  contents:
  - "3. \"Secondary server surprise\"\n   I've seen it happen on various occasions\
    \ that hosts got bombarded by\n   nameserver requests without knowing why. On\
    \ investigation it turned\n   out then that such a host was supposed to (i.e.,\
    \ the information was\n   in the root servers) run secondary for some domain (or\
    \ reverse (in-\n   addr.arpa)) domain, without that host's nameserver manager\
    \ having\n   been asked or even been told so!\n   Newer BIND versions (4.9 and\
    \ later) solved this problem.  At the same\n   time though the fix has the disadvantage\
    \ that it's far less easy to\n   spot this problem.\n   Practice has shown that\
    \ most domain registrars accept registrations\n   of nameservers without checking\
    \ if primary (!) and secondary servers\n   have been set up, informed, or even\
    \ asked.  It should also be noted\n   that a combination of long-lasting unreachability\
    \ of primary\n   nameservers, (therefore) expiration of zone information, plus\
    \ static\n   IP routing, can lead to massive network traffic that can fill up\n\
    \   lines completely.\n"
- title: 4. "MX records surprise"
  contents:
  - "4. \"MX records surprise\"\n   In a sense similar to point 3. Sometimes nameserver\
    \ managers enter MX\n   records in their zone files that point to external hosts,\
    \ without\n   first asking or even informing the systems managers of those external\n\
    \   hosts.  This has to be fought out between the nameserver manager and\n   the\
    \ systems managers involved. Only as a last resort, if really\n   nothing helps\
    \ to get the offending records removed, can the systems\n   manager turn to the\
    \ naming authority of the domain above the\n   offending domain to get the problem\
    \ sorted out.\n"
- title: 5. "Name extension surprise"
  contents:
  - "5. \"Name extension surprise\"\n   Sometimes one encounters weird names, which\
    \ appear to be an external\n   name extended with a local domain. This is caused\
    \ by forgetting to\n   terminate a name with a dot: names in zone files that don't\
    \ end with\n   a dot are always expanded with the name of the current zone (the\n\
    \   domain that the zone file stands for or the last $ORIGIN).\n   Example: zone\
    \ file for foo.xx:\n   pqr          MX 100  relay.yy.\n   xyz          MX 100\
    \  relay.yy           (no trailing dot!)\n   When fully written out this stands\
    \ for:\n      pqr.foo.xx.  MX 100  relay.yy.\n      xyz.foo.xx.  MX 100  relay.yy.foo.xx.\
    \   (name extension!)\n"
- title: 6. Missing secondary servers
  contents:
  - "6. Missing secondary servers\n   It is required that there be a least 2 nameservers\
    \ for a domain. For\n   obvious reasons the nameservers for top level domains\
    \ need to be very\n   well reachable from all over the Internet. This implies\
    \ that there\n   must be more than just 2 of them; besides, most of the (secondary)\n\
    \   servers should be placed at \"strategic\" locations, e.g., close to a\n  \
    \ point where international and/or intercontinental lines come\n   together. \
    \ To keep things manageable, there shouldn't be too many\n   servers for a domain\
    \ either.\n   Important aspects in selecting the location of primary and secondary\n\
    \   servers are reliability (network, host) and expedient contacts: in\n   case\
    \ of problems, changes/fixes must be carried out quickly.  It\n   should be considered\
    \ logical that primary servers for European top\n   level domains should run on\
    \ a host in Europe, preferably (if\n   possible) in the country itself. For each\
    \ top level domain there\n   should be 2 secondary servers in Europe and 2 in\
    \ the USA, but there\n   may of course be more on either side.  An excessive number\
    \ of\n   nameservers is not a good idea though; a recommended maximum is 7\n \
    \  nameservers.  In Europe, EUnet has offered to run secondary server\n   for\
    \ each European top level domain.\n"
- title: 7. Wildcard MX records
  contents:
  - "7. Wildcard MX records\n   Wildcard MX records should be avoided where possible.\
    \ They often\n   cause confusion and errors: especially beginning nameserver managers\n\
    \   tend to overlook the fact that a host/domain listed with ANY type of\n   record\
    \ in a zone file is NOT covered by an overall wildcard MX record\n   in that zone;\
    \ this goes not only for simple domain/host names, but\n   also for names that\
    \ cover one or more domains. Take the following\n   example in zone foo.bar:\n\
    \         *            MX 100  mailhost\n         pqr          MX 100  mailhost\n\
    \         abc.def      MX 100  mailhost\n   This makes pqr.foo.bar, def.foo.bar\
    \ and abd.def.foo.bar valid\n   domains, but the wildcard MX record covers NONE\
    \ of them, nor anything\n   below them.  To cover everything by MX records, the\
    \ required entries\n   are:\n         *            MX 100  mailhost\n        \
    \ pqr          MX 100  mailhost\n         *.pqr        MX 100  mailhost\n    \
    \     abc.def      MX 100  mailhost\n         *.def        MX 100  mailhost\n\
    \         *.abc.def    MX 100  mailhost\n   An overall wildcard MX record is almost\
    \ never useful.\n   In particular the zone file of a top level domain should NEVER\n\
    \   contain only an overall wildcard MX record (*.XX). The effect of such\n  \
    \ a wildcard MX record can be that mail is unnecessarily sent across\n   possibly\
    \ expensive links, only to fail at the destination or gateway\n   that the record\
    \ points to. Top level domain zone files should\n   explicitly list at least all\
    \ the officially registered primary\n   subdomains.\n   Whereas overall wildcard\
    \ MX records should be avoided, wildcard MX\n   records are acceptable as an explicit\
    \ part of subdomain entries,\n   provided they are allowed under a given subdomain\
    \ (to be determined\n   by the naming authority for that domain).\n   Example:\n\
    \         foo.xx.      MX 100  gateway.xx.\n                      MX 200  fallback.yy.\n\
    \         *.foo.xx.    MX 100  gateway.xx.\n                      MX 200  fallback.yy.\n"
- title: 8. Hostnames
  contents:
  - "8. Hostnames\n   People appear to sometimes look only at STD 11, RFC 822 to determine\n\
    \   whether a particular hostname is correct or not. Hostnames should\n   strictly\
    \ conform to the syntax given in STD 13, RFC 1034 (page 11),\n   with *addresses*\
    \ in addition conforming to RFC 822. As an example\n   take \"c&w.blues\" which\
    \ is perfectly legal according to RFC 822, but\n   which can have quite surprising\
    \ effects on particular systems, e.g.,\n   \"telnet c&w.blues\" on a Unix system.\n"
- title: 9. HINFO records
  contents:
  - "9. HINFO records\n   There appears to be a common misunderstanding that one of\
    \ the data\n   fields (usually the second field) in HINFO records is optional.\
    \ A\n   recent scan of all reachable nameservers in only one country revealed\n\
    \   some 300 incomplete HINFO records. Specifying two data fields in a\n   HINFO\
    \ record is mandatory (RFC 1033), but note that this does *not*\n   mean that\
    \ HINFO records themselves are mandatory.\n"
- title: 10. Safety measures and specialties
  contents:
  - "10. Safety measures and specialties\n   Nameservers and resolvers aren't flawless.\
    \ Bogus queries should be\n   kept from being forwarded to the root servers, since\
    \ they'll only\n   lead to unnecessary intercontinental traffic. Known bogus queries\n\
    \   that can easily be dealt with locally are queries for 0 and broadcast\n  \
    \ addresses.  To catch such queries, every nameserver should run\n   primary for\
    \ the 0.in-addr.arpa and 255.in-addr.arpa zones; the zone\n   files need only\
    \ contain a SOA and an NS record.\n   Also each nameserver should run primary\
    \ for 0.0.127.in-addr.arpa;\n   that zone file should contain a SOA and NS record\
    \ and an entry:\n         1    PTR     localhost.\n   There has been extensive\
    \ discussion about whether or not to append\n   the local domain to it. The conclusion\
    \ was that \"localhost.\" would be\n   the best solution; reasons given were:\n\
    \   - \"localhost\" itself is used and expected to work on some systems.\n   -\
    \ translating 127.0.0.1 into \"localhost.my_domain\" can cause some\n     software\
    \ to connect to itself using the loopback interface when\n     it didn't want\
    \ to.\n   Note that all domains that contain hosts should have a \"localhost\"\
    \ A\n   record in them.\n   People maintaining zone files with the Serial number\
    \ given in dotted\n   decimal notation (e.g., when SCCS is used to maintain the\
    \ files)\n   should beware of a bug in all BIND versions: if the serial number\
    \ is\n   in Release.Version (dotted decimal) notation, then it is virtually\n\
    \   impossible to change to a higher release: because of the wrong way\n   that\
    \ notation is turned into an integer, it results in a serial\n   number that is\
    \ LOWER than that of the former release.\n   For this reason and because the Serial\
    \ is an (unsigned) integer\n   according to STD 13, RFC 1035, it is recommended\
    \ not to use the\n   dotted decimal notation. A recommended notation is to use\
    \ the date\n   (yyyymmdd), if necessary with an extra digit (yyyymmddn) if there\
    \ is\n   or can be more than one change per day in a zone file.\n   Very old versions\
    \ of DNS resolver code have a bug that causes queries\n   for A records with domain\
    \ names like \"192.16.184.3\" to go out. This\n   happens when users type in IP\
    \ addresses and the resolver code does\n   not catch this case before sending\
    \ out a DNS query. This problem has\n   been fixed in all resolver implementations\
    \ known to us but if it\n   still pops up it is very serious because all those\
    \ queries will go to\n   the root servers looking for top level domains like \"\
    3\" etc. It is\n   strongly recommended to install the latest (publicly) available\
    \ BIND\n   version plus all available patches to get rid of these and other\n\
    \   problems.\n   Running secondary nameserver off another secondary nameserver\
    \ is\n   possible, but not recommended unless really necessary: there are\n  \
    \ known cases where it has led to problems like bogus TTL values. This\n   can\
    \ be caused by older or flawed implementations, but secondary\n   nameservers\
    \ in principle should always transfer their zones from the\n   official primary\
    \ nameserver.\n"
- title: 11. Some general points
  contents:
  - "11. Some general points\n   The Domain Name System and nameserver are purely\
    \ technical tools, not\n   meant in any way to exert control or impose politics.\
    \ The function of\n   a naming authority is that of a clearing house. Anyone registering\
    \ a\n   subdomain under a particular (top level) domain becomes naming\n   authority\
    \ and therewith the sole responsible for that subdomain.\n   Requests to enter\
    \ MX or NS records concerning such a subdomain\n   therefore always MUST be honored\
    \ by the registrar of the next higher\n   domain.\n   Examples of practices that\
    \ are not allowed are:\n      - imposing specific mail routing (MX records) when\
    \ registering\n        a subdomain.\n      - making registration of a subdomain\
    \ dependent on to the use of\n        certain networks or services.\n      - using\
    \ TXT records as a means of (free) commercial advertising.\n   In the latter case\
    \ a network service provider could decide to cut off\n   a particular site until\
    \ the offending TXT records have been removed\n   from the site's zone file.\n\
    \   Of course there are obvious cases where a naming authority can refuse\n  \
    \ to register a particular subdomain and can require a proposed name to\n   be\
    \ changed in order to get it registered (think of DEC trying to\n   register a\
    \ domain IBM.XX).\n   There are also cases were one has to probe the authority\
    \ of the\n   person: sending in the application - not every systems manager should\n\
    \   be able to register a domain name for a whole university.  The naming\n  \
    \ authority can impose certain extra rules as long as they don't\n   violate or\
    \ conflict with the rights and interest of the registrars of\n   subdomains; a\
    \ top level domain registrar may e.g., require that there\n   be primary subdomain\
    \ \"ac\" and \"co\" only and that subdomains be\n   registered under those primary\
    \ subdomains.\n   The naming authority can also interfere in exceptional cases\
    \ like the\n   one mentioned in point 4, e.g., by temporarily removing a domain's\n\
    \   entry from the nameserver zone files; this of course should be done\n   only\
    \ with extreme care and only as a last resort.\n   When adding NS records for\
    \ subdomains, top level domain nameserver\n   managers should realize that the\
    \ people setting up the nameserver for\n   a subdomain often are rather inexperienced\
    \ and can make mistakes that\n   can easily lead to the subdomain becoming completely\
    \ unreachable or\n   that can cause unnecessary DNS traffic (see point 1). It\
    \ is therefore\n   highly recommended that, prior to entering such an NS record,\
    \ the\n   (top level) nameserver manager does a couple of sanity checks on the\n\
    \   new nameserver (SOA record and timers OK?, MX records present where\n   needed?\
    \ No obvious errors made? Listed secondary servers\n   operational?). Things that\
    \ cannot be caught though by such checks\n   are:\n      - resolvers set up to\
    \ use external hosts as nameservers\n      - nameservers set up to use external\
    \ hosts as forwarders\n        without permission from those hosts.\n   Care should\
    \ also be taken when registering 2-letter subdomains.\n   Although this is allowed,\
    \ an implication is that abbreviated\n   addressing (see STD 11, RFC 822, paragraph\
    \ 6.2.2) is not possible in\n   and under that subdomain.  When requested to register\
    \ such a domain,\n   one should always notify the people of this consequence.\
    \ As an\n   example take the name \"cs\", which is commonly used for Computer\n\
    \   Science departments: it is also the name of the top level domain for\n   Czecho-Slovakia,\
    \ so within the domain cs.foo.bar the user@host.cs is\n   ambiguous in that in\
    \ can denote both a user on the host\n   host.cs.foo.bar and a user on the host\
    \ \"host\" in Czecho-Slovakia.\n   (This example does not take into account the\
    \ recent political changes\n   in the mentioned country).\n"
- title: References
  contents:
  - "References\n   [1] Mockapetris, P., \"Domain Names Concepts and Facilities\"\
    , STD 13,\n       RFC 1034, USC/Information Sciences Institute, November 1987.\n\
    \   [2] Mockapetris, P., \"Domain Names Implementation and Specification\",\n\
    \       STD 13, RFC 1035, USC/Information Sciences Institute, November\n     \
    \  1987.\n   [3] Partridge, C., \"Mail Routing and the Domain System\", STD 14,\
    \ RFC\n       974, CSNET CIC BBN, January 1986.\n   [4] Gavron, E., \"A Security\
    \ Problem and Proposed Correction With\n       Widely Deployed DNS Software\"\
    , RFC 1535, ACES Research Inc.,\n       October 1993.\n   [5] Kumar, A., Postel,\
    \ J., Neuman, C., Danzig, P., and S. Miller,\n       \"Common DNS Implementation\
    \ Errors and Suggested Fixes\", RFC 1536,\n       USC/Information Sciences Institute,\
    \ USC, October 1993.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Piet Beertema\n   CWI\n   Kruislaan 413\n   NL-1098 SJ Amsterdam\n\
    \   The Netherlands\n   Phone: +31 20 592 4112\n   FAX:   +31 20 592 4199\n  \
    \ EMail: Piet.Beertema@cwi.nl\n"
- title: Editor's Address
  contents:
  - "Editor's Address\n   Anant Kumar\n   USC Information Sciences Institute\n   4676\
    \ Admiralty Way\n   Marina Del Rey CA 90292-6695\n   Phone:(310) 822-1511\n  \
    \ FAX:  (310) 823-6741\n   EMail: anant@isi.edu\n"
