- contents:
  - '          The NULL Encryption Algorithm and Its Use With IPsec

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This memo defines the NULL encryption algorithm and its use with
    the\n   IPsec Encapsulating Security Payload (ESP).  NULL does nothing to\n   alter
    plaintext data.  In fact, NULL, by itself, does nothing.  NULL\n   provides the
    means for ESP to provide authentication and integrity\n   without confidentiality.\n
    \  Further information on the other components necessary for ESP\n   implementations
    is provided by [ESP] and [ROAD].\n"
  title: Abstract
- contents:
  - "1.  Introduction\n   This memo defines the NULL encryption algorithm and its
    use with the\n   IPsec Encapsulating Security Payload [ESP] to provide authentication\n
    \  and integrity without confidentiality.\n   NULL is a block cipher the origins
    of which appear to be lost in\n   antiquity.  Despite rumors that the National
    Security Agency\n   suppressed publication of this algorithm, there is no evidence
    of\n   such action on their part. Rather, recent archaeological evidence\n   suggests
    that the NULL algorithm was developed in Roman times, as an\n   exportable alternative
    to Ceaser ciphers. However, because Roman\n   numerals lack a symbol for zero,
    written records of the algorithm's\n   development were lost to historians for
    over two millennia.\n   [ESP] specifies the use of an optional encryption algorithm
    to\n   provide confidentiality and the use of an optional authentication\n   algorithm
    to provide authentication and integrity.  The NULL\n   encryption algorithm is
    a convenient way to represent the option of\n   not applying encryption.  This
    is referred to as ESP_NULL in [DOI].\n   The IPsec Authentication Header [AH]
    specification provides a similar\n   service, by computing authentication data
    which covers the data\n   portion of a packet as well as the immutable in transit
    portions of\n   the IP header.  ESP_NULL does not include the IP header in\n   calculating
    the authentication data.  This can be useful in providing\n   IPsec services through
    non-IP network devices.  The discussion on how\n   ESP_NULL might be used with
    non-IP network devices is outside the\n   scope of this document.\n   In this
    memo, NULL is used within the context of ESP.  For further\n   information on
    how the various pieces of ESP fit together to provide\n   security services, refer
    to [ESP] and [ROAD].\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",  \"MAY\", and
    \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC 2119].\n"
  title: 1.  Introduction
- contents:
  - "2. Algorithm Definition\n   NULL is defined mathematically by the use of the
    Identity function I\n   applied to a block of data b such that:\n     NULL(b)
    = I(b) = b\n"
  title: 2. Algorithm Definition
- contents:
  - "2.1 Keying Material\n   Like other modern ciphers, e.g., RC5 [RFC-2040], the
    NULL encryption\n   algorithm can make use of keys of varying lengths.  However,
    no\n   measurable increase in security is afforded by the use of longer key\n
    \  lengths.\n"
  title: 2.1 Keying Material
- contents:
  - "2.2 Cryptographic Synchronization\n   Because of the stateless nature of the
    NULL encryption algorithm, it\n   is not necessary to transmit an IV or similar
    cryptographic\n   synchronization data on a per packet (or even a per SA) basis.
    \ The\n   NULL encryption algorithm combines many of the best features of both\n
    \  block and stream ciphers, while still not requiring the transmission\n   of
    an IV or analogous cryptographic synchronization data.\n"
  title: 2.2 Cryptographic Synchronization
- contents:
  - "2.3 Padding\n   NULL has a block size of 1 byte, thus padding is not necessary.\n"
  title: 2.3 Padding
- contents:
  - "2.4. Performance\n   The NULL encryption algorithm is significantly faster than
    other\n   commonly used symmetric encryption algorithms and implementations of\n
    \  the base algorithm are available for all commonly used hardware and\n   OS
    platforms.\n"
  title: 2.4. Performance
- contents:
  - "2.5 Test Vectors\n   The following is a set of test vectors to facilitate in
    the\n   development of interoperable NULL implementations.\n"
  - 'test_case =      1

    '
  - 'data =           0x123456789abcdef

    '
  - 'data_len =       8

    '
  - 'NULL_data =      0x123456789abcdef

    '
  - 'test_case =      2

    '
  - 'data =           "Network Security People Have A Strange Sense Of Humor"

    '
  - 'data_len =       53

    '
  - 'NULL_data =      "Network Security People Have A Strange Sense Of Humor"

    '
  title: 2.5 Test Vectors
- contents:
  - "3. ESP_NULL Operational Requirements\n   ESP_NULL is defined by using NULL within
    the context of ESP.  This\n   section further defines ESP_NULL by pointing out
    particular\n   operational parameter requirements.\n   For purposes of IKE [IKE]
    key extraction, the key size for this\n   algorithm MUST be zero (0) bits, to
    facilitate interoperability and\n   to avoid any potential export control problems.\n
    \  To facilitate interoperability, the IV size for this algorithm MUST\n   be
    zero (0) bits.\n   Padding MAY be included on outgoing packets as specified in
    [ESP].\n"
  title: 3. ESP_NULL Operational Requirements
- contents:
  - "4. Security Considerations\n   The NULL encryption algorithm offers no confidentiality
    nor does it\n   offer any other security service.  It is simply a convenient way
    to\n   represent the optional use of applying encryption within ESP.  ESP\n   can
    then be used to provide authentication and integrity without\n   confidentiality.
    \ Unlike AH these services are not applied to any\n   part of the IP header.  At
    the time of this writing there is no\n   evidence to support that ESP_NULL is
    any less secure than AH when\n   using the same authentication algorithm (i.e.
    a packet secured using\n   ESP_NULL with some authentication algorithm is as cryptographically\n
    \  secure as a packet secured using AH with the same authentication\n   algorithm).\n
    \  As stated in [ESP], while the use of encryption algorithms and\n   authentication
    algorithms are optional in ESP, it is imperative that\n   an ESP SA specifies
    the use of at least one cryptographically strong\n   encryption algorithm or one
    cryptographically strong authentication\n   algorithm or one of each.\n   At the
    time of this writing there are no known laws preventing the\n   exportation of
    NULL with a zero (0) bit key length.\n"
  title: 4. Security Considerations
- contents:
  - "5.  Intellectual Property Rights\n   Pursuant to the provisions of [RFC-2026],
    the authors represent that\n   they have disclosed the existence of any proprietary
    or intellectual\n   property rights in the contribution that are reasonably and\n
    \  personally known to the authors.  The authors do not represent that\n   they
    personally know of all potentially pertinent proprietary and\n   intellectual
    property rights owned or claimed by the organizations\n   they represent or third
    parties.\n"
  title: 5.  Intellectual Property Rights
- contents:
  - "6.  Acknowledgments\n   Steve Bellovin suggested and provided the text for the
    Intellectual\n   Property Rights section.\n   Credit also needs to be given to
    the participants of the Cisco/ICSA\n   IPsec & IKE March 1998 Interoperability
    Workshop since it was there\n   that the need for this document became apparent.\n"
  title: 6.  Acknowledgments
- contents:
  - "7.  References\n   [ESP]        Kent, S., and R. Atkinson, \"IP Encapsulating
    Security\n                Payload\", RFC 2406, November 1998.\n   [AH]         Kent,
    S., and R. Atkinson, \"IP Authentication Header\",\n                RFC 2402,
    November 1998.\n   [ROAD]       Thayer, R., Doraswamy, N., and R. Glenn, \"IP
    Security\n                Document Roadmap\", RFC 2411, November 1998.\n   [DOI]
    \       Piper, D., \"The Internet IP Security Domain of\n                Interpretation
    for ISAKMP\", RFC 2408, November 1998.\n   [IKE]        Harkins, D., and D. Carrel,
    \"The Internet Key Exchange\n                (IKE)\", RFC 2409, November 1998.\n
    \  [RFC-2026]   Bradner, S., \"The Internet Standards Process -- Revision\n                3\",
    BCP 9, RFC 2026, October 1996.\n   [RFC-2040]   Baldwin, R., and R. Rivest, \"The
    RC5, RC5-CBC, RC5-CBC-\n                Pad, and RC5-CTS Algorithms\", RFC 2040,
    October 1996\n   [RFC-2119]   Bradner, S., \"Key words for use in RFCs to Indicate\n
    \               Requirement Levels\", BCP 14, RFC 2119, March 1997.\n"
  - "6.  Editors' Addresses\n   Rob Glenn\n   NIST\n   EMail: rob.glenn@nist.gov\n
    \  Stephen Kent\n   BBN Corporation\n   EMail: kent@bbn.com\n   The IPsec working
    group can be contacted through the chairs:\n   Robert Moskowitz\n   ICSA\n   EMail:
    rgm@icsa.net\n   Ted T'so\n   Massachusetts Institute of Technology\n   EMail:
    tytso@mit.edu\n"
  - "7.  Full Copyright Statement\n   Copyright (C) The Internet Society (1998).  All
    Rights Reserved.\n   This document and translations of it may be copied and furnished
    to\n   others, and derivative works that comment on or otherwise explain it\n
    \  or assist in its implementation may be prepared, copied, published\n   and
    distributed, in whole or in part, without restriction of any\n   kind, provided
    that the above copyright notice and this paragraph are\n   included on all such
    copies and derivative works.  However, this\n   document itself may not be modified
    in any way, such as by removing\n   the copyright notice or references to the
    Internet Society or other\n   Internet organizations, except as needed for the
    purpose of\n   developing Internet standards in which case the procedures for\n
    \  copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: 7.  References
