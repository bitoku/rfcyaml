- title: __initial_text__
  contents:
  - "      IPv6 over Low-Power Wireless Personal Area Network (6LoWPAN)\n        \
    \                     Routing Header\n"
- title: Abstract
  contents:
  - "Abstract\n   This specification introduces a new IPv6 over Low-Power Wireless\n\
    \   Personal Area Network (6LoWPAN) dispatch type for use in 6LoWPAN\n   route-over\
    \ topologies, which initially covers the needs of Routing\n   Protocol for Low-Power\
    \ and Lossy Networks (RPL) data packet\n   compression (RFC 6550).  Using this\
    \ dispatch type, this specification\n   defines a method to compress the RPL Option\
    \ (RFC 6553) information\n   and Routing Header type 3 (RFC 6554), an efficient\
    \ IP-in-IP\n   technique, and is extensible for more applications.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc8138.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   4\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .   7\n   3.  Using the Page Dispatch . . . . . . . . . . . . . . . .\
    \ . . .   7\n     3.1.  New Routing Header Dispatch (6LoRH) . . . . . . . . .\
    \ . .   7\n     3.2.  Placement of 6LoRH Headers  . . . . . . . . . . . . . .\
    \ .   8\n       3.2.1.  Relative to Non-6LoRH Headers . . . . . . . . . . . .\
    \   8\n       3.2.2.  Relative to Other 6LoRH Headers . . . . . . . . . . .  \
    \ 8\n   4.  6LoWPAN Routing Header General Format . . . . . . . . . . . .   9\n\
    \     4.1.  Elective Format . . . . . . . . . . . . . . . . . . . . .  10\n  \
    \   4.2.  Critical Format . . . . . . . . . . . . . . . . . . . . .  10\n    \
    \ 4.3.  Compressing Addresses . . . . . . . . . . . . . . . . . .  11\n      \
    \ 4.3.1.  Coalescence . . . . . . . . . . . . . . . . . . . . .  11\n       4.3.2.\
    \  DODAG Root Address Determination  . . . . . . . . . .  12\n   5.  The SRH-6LoRH\
    \ Header  . . . . . . . . . . . . . . . . . . . .  13\n     5.1.  Encoding  .\
    \ . . . . . . . . . . . . . . . . . . . . . . .  13\n     5.2.  SRH-6LoRH General\
    \ Operation . . . . . . . . . . . . . . .  14\n       5.2.1.  Uncompressed SRH\
    \ Operation  . . . . . . . . . . . . .  14\n       5.2.2.  6LoRH-Compressed SRH\
    \ Operation  . . . . . . . . . . .  15\n       5.2.3.  Inner LOWPAN_IPHC Compression\
    \ . . . . . . . . . . . .  15\n     5.3.  The Design Point of Popping Entries\
    \ . . . . . . . . . . .  16\n     5.4.  Compression Reference for SRH-6LoRH Header\
    \ Entries  . . .  17\n     5.5.  Popping Headers . . . . . . . . . . . . . . .\
    \ . . . . . .  18\n     5.6.  Forwarding  . . . . . . . . . . . . . . . . . .\
    \ . . . . .  19\n   6.  The RPL Packet Information 6LoRH (RPI-6LoRH)  . . . .\
    \ . . . .  19\n     6.1.  Compressing the RPLInstanceID . . . . . . . . . . .\
    \ . . .  21\n     6.2.  Compressing the SenderRank  . . . . . . . . . . . . .\
    \ . .  21\n     6.3.  The Overall RPI-6LoRH Encoding  . . . . . . . . . . . .\
    \ .  21\n   7.  The IP-in-IP 6LoRH Header . . . . . . . . . . . . . . . . . .\
    \  24\n   8.  Management Considerations . . . . . . . . . . . . . . . . . .  26\n\
    \   9.  Security Considerations . . . . . . . . . . . . . . . . . . .  27\n  \
    \ 10. IANA Considerations . . . . . . . . . . . . . . . . . . . . .  27\n    \
    \ 10.1.  Reserving Space in 6LoWPAN Dispatch Page 1 . . . . . . .  27\n     10.2.\
    \  New Critical 6LoWPAN Routing Header Type Registry  . . .  28\n     10.3.  New\
    \ Elective 6LoWPAN Routing Header Type Registry  . . .  28\n   11. References\
    \  . . . . . . . . . . . . . . . . . . . . . . . . .  28\n     11.1.  Normative\
    \ References . . . . . . . . . . . . . . . . . .  28\n     11.2.  Informative\
    \ References . . . . . . . . . . . . . . . . .  29\n   Appendix A.  Examples .\
    \ . . . . . . . . . . . . . . . . . . . . .  31\n     A.1.  Examples Compressing\
    \ the RPI  . . . . . . . . . . . . . .  31\n     A.2.  Example of a Downward Packet\
    \ in Non-Storing Mode  . . . .  32\n     A.3.  Example of SRH-6LoRH Life Cycle\
    \ . . . . . . . . . . . . .  34\n   Acknowledgements  . . . . . . . . . . . .\
    \ . . . . . . . . . . . .  36\n   Authors' Addresses  . . . . . . . . . . . .\
    \ . . . . . . . . . . .  37\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The design of Low-Power and Lossy Networks (LLNs) is generally\n\
    \   focused on saving energy, a very constrained resource in most cases.\n   The\
    \ other constraints, such as the memory capacity and the duty\n   cycling of the\
    \ LLN devices, derive from that primary concern.  Energy\n   is often available\
    \ from primary batteries that are expected to last\n   for years, or it is scavenged\
    \ from the environment in very limited\n   quantities.  Any protocol that is intended\
    \ for use in LLNs must be\n   designed with the primary concern of saving energy\
    \ as a strict\n   requirement.\n   Controlling the amount of data transmission\
    \ is one possible venue to\n   save energy.  In a number of LLN standards, the\
    \ frame size is limited\n   to much smaller values than the guaranteed IPv6 Maximum\
    \ Transmission\n   Unit (MTU) of 1280 bytes.  In particular, an LLN that relies\
    \ on the\n   classical Physical Layer (PHY) of IEEE 802.15.4 [IEEE.802.15.4] is\n\
    \   limited to 127 bytes per frame.  The need to compress IPv6 packets\n   over\
    \ IEEE 802.15.4 led to the writing of \"Compression Format for IPv6\n   Datagrams\
    \ over IEEE 802.15.4-Based Networks\" [RFC6282].\n   Innovative route-over techniques\
    \ have been and still are being\n   developed for routing inside an LLN.  Generally,\
    \ such techniques\n   require additional information in the packet to provide\
    \ loop\n   prevention and to indicate information such as flow identification,\n\
    \   source routing information, etc.\n   For reasons such as security and the\
    \ capability to send ICMPv6 errors\n   (see \"Internet Control Message Protocol\
    \ (ICMPv6) for the Internet\n   Protocol Version 6 (IPv6) Specification\" [RFC4443])\
    \ back to the\n   source, an original packet must not be tampered with, and any\n\
    \   information that must be inserted in or removed from an IPv6 packet\n   must\
    \ be placed in an extra IP-in-IP encapsulation.\n   This is the case when the\
    \ additional routing information is inserted\n   by a router on the path of a\
    \ packet, for instance, the root of a\n   mesh, as opposed to the source node,\
    \ with the Non-Storing mode of the\n   \"RPL: IPv6 Routing Protocol for Low-Power\
    \ and Lossy Networks\"\n   [RFC6550].\n   This is also the case when some routing\
    \ information must be removed\n   from a packet that flows outside the LLN.\n\
    \   \"When to use RFC 6553, RFC 6554 and IPv6-in-IPv6\" [RPL-INFO] details\n \
    \  different cases where IPv6 headers defined in the RPL Option for\n   Carrying\
    \ RPL Information in Data-Plane Datagrams [RFC6553], Header\n   for Source Routes\
    \ with RPL [RFC6554], and IPv6-in-IPv6 encapsulation,\n   are inserted or removed\
    \ from packets in LLN environments operating\n   RPL.\n   When using RFC 6282\
    \ [RFC6282], the outer IP header of an IP-in-IP\n   encapsulation may be compressed\
    \ down to 2 octets in stateless\n   compression and down to 3 octets in stateful\
    \ compression when context\n   information must be added.\n      0           \
    \                            1\n      0   1   2   3   4   5   6   7   8   9  \
    \ 0   1   2   3   4   5\n    +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \    | 0 | 1 | 1 |  TF   |NH | HLIM  |CID|SAC|  SAM  | M |DAC|  DAM  |\n    +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \              Figure 1: LOWPAN_IPHC Base Encoding (RFC 6282)\n   The stateless\
    \ compression of an IPv6 address can only happen if the\n   IPv6 address can de\
    \ deduced from the Media Access Control (MAC)\n   addresses, meaning that the\
    \ IP endpoint is also the MAC-layer\n   endpoint.  This is usually not the case\
    \ in a RPL network, which is\n   generally a multi-hop route-over (i.e., operated\
    \ at Layer 3) network.\n   A better compression, which does not involve variable\
    \ compressions\n   depending on the hop in the mesh, can be achieved based on\
    \ the fact\n   that the outer encapsulation is usually between the source (or\n\
    \   destination) of the inner packet and the root.  Also, the inner IP\n   header\
    \ can only be compressed by RFC 6282 [RFC6282] if all the fields\n   preceding\
    \ it are also compressed.  This specification makes the inner\n   IP header the\
    \ first header to be compressed by RFC 6282 [RFC6282],\n   and it keeps the inner\
    \ packet encoded the same way whether or not it\n   is encapsulated, thus preserving\
    \ existing implementations.\n   As an example, RPL [RFC6550] is designed to optimize\
    \ the routing\n   operations in constrained LLNs.  As part of this optimization,\
    \ RPL\n   requires the addition of RPL Packet Information (RPI) in every\n   packet,\
    \ as defined in Section 11.2 of RFC 6550 [RFC6550].\n   \"The Routing Protocol\
    \ for Low-Power and Lossy Networks (RPL) Option\n   for Carrying RPL Information\
    \ in Data-Plane Datagrams\" [RFC6553]\n   specification indicates how the RPI\
    \ can be placed in a RPL Option\n   (RPL-OPT) that is placed in an IPv6 Hop-by-Hop\
    \ header.\n   This representation demands a total of 8 bytes, while, in most cases,\n\
    \   the actual RPI payload requires only 19 bits.  Since the Hop-by-Hop\n   header\
    \ must not flow outside of the RPL domain, it must be inserted\n   in packets\
    \ entering the domain and be removed from packets that leave\n   the domain. \
    \ In both cases, this operation implies an IP-in-IP\n   encapsulation.\n   Additionally,\
    \ in the case of the Non-Storing Mode of Operation (MOP),\n   RPL requires a Source\
    \ Routing Header (SRH) in all packets that are\n   routed down a RPL graph.  For\
    \ that purpose, \"An IPv6 Routing Header\n   for Source Routes with the Routing\
    \ Protocol for Low-Power and Lossy\n   Networks (RPL)\" [RFC6554] defines the\
    \ type 3 Routing Header for IPv6\n   (RH3).\n          ------+---------      \
    \                     ^\n                |          Internet                 \
    \ |\n                |                                    | Native IPv6\n    \
    \         +-----+                                 |\n             |     | Border\
    \ Router (RPL Root)      + | +\n             |     |                         \
    \      | | |\n             +-----+                               | | | tunneled\n\
    \                |                                  | | | using\n          o \
    \   o   o    o                          | | | IPv6-in-\n      o o   o  o   o \
    \ o  o o   o                   | | | IPv6 and\n     o  o o  o o    o   o   o \
    \ o  o                | | | RPL SRH\n     o   o    o  o     o  o    o  o  o  \
    \           | | |\n    o  o   o  o   o         o   o o                | | |\n\
    \    o          o             o     o               + v +\n                  \
    \    LLN\n              Figure 2: IP-in-IP Encapsulation within the LLN\n   With\
    \ Non-Storing RPL, even if the source is a node in the same LLN,\n   the packet\
    \ must first reach up the graph to the root so that the root\n   can insert the\
    \ SRH to go down the graph.  In any fashion, whether the\n   packet was originated\
    \ in a node in the LLN or outside the LLN, and\n   regardless of whether or not\
    \ the packet stays within the LLN, as long\n   as the source of the packet is\
    \ not the root itself, the source-\n   routing operation also implies an IP-in-IP\
    \ encapsulation at the root\n   in order to insert the SRH.\n   \"An Architecture\
    \ for IPv6 over the TSCH mode of IEEE 802.15.4\"\n   [IPv6-ARCH] specifies the\
    \ operation of IPv6 over the mode of\n   operation described in \"Using IEEE 802.15.4e\
    \ Time-Slotted Channel\n   Hopping (TSCH) in the Internet of Things (IoT): Problem\
    \ Statement\"\n   [RFC7554].  The architecture requires the use of both RPL and\
    \ the 6lo\n   adaptation layer over IEEE 802.15.4.  Because it inherits the\n\
    \   constraints on frame size from the MAC layer, 6TiSCH cannot afford to\n  \
    \ allocate 8 bytes per packet on the RPI, hence the requirement for\n   6LoWPAN\
    \ header compression of the RPI.\n   An extensible compression technique is required\
    \ that simplifies\n   IP-in-IP encapsulation when it is needed and optimally compresses\n\
    \   existing routing artifacts found in RPL LLNs.\n   This specification extends\
    \ the 6lo adaptation layer framework\n   ([RFC4944] [RFC6282]) so as to carry\
    \ routing information for route-\n   over networks based on RPL.  It includes\
    \ the formats necessary for\n   RPL and is extensible for additional formats.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\"\
    , \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described\
    \ in RFC\n   2119 [RFC2119].\n   This document uses the terms from, and is consistent\
    \ with, \"Terms\n   Used in Routing for Low-Power and Lossy Networks\" [RFC7102]\
    \ and RPL\n   [RFC6550].\n   The terms \"route-over\" and \"mesh-under\" are defined\
    \ in RFC 6775\n   [RFC6775].\n   Other terms in use in LLNs are found in \"Terminology\
    \ for Constrained-\n   Node Networks\" [RFC7228].\n   The term \"byte\" is used\
    \ in its now customary sense as a synonym for\n   \"octet\".\n"
- title: 3.  Using the Page Dispatch
  contents:
  - "3.  Using the Page Dispatch\n   The \"IPv6 over Low-Power Wireless Personal Area\
    \ Network (6LoWPAN)\n   Paging Dispatch\" [RFC8025] specification extends the\
    \ 6lo adaptation\n   layer framework ([RFC4944] [RFC6282]) by introducing a concept\
    \ of\n   \"context\" in the 6LoWPAN parser, a context being identified by a Page\n\
    \   number.  The specification defines 16 Pages.\n   This document operates within\
    \ Page 1, which is indicated by a\n   dispatch value of binary 11110001.\n"
- title: 3.1.  New Routing Header Dispatch (6LoRH)
  contents:
  - "3.1.  New Routing Header Dispatch (6LoRH)\n   This specification introduces a\
    \ new 6LoWPAN Routing Header (6LoRH) to\n   carry IPv6 routing information.  The\
    \ 6LoRH may contain source routing\n   information such as a compressed form of\
    \ SRH, as well as other sorts\n   of routing information such as the RPI and IP-in-IP\
    \ encapsulation.\n   The 6LoRH is expressed in a 6loWPAN packet as a Type-Length-Value\n\
    \   (TLV) field, which is extensible for future use.\n   It is expected that a\
    \ router that does not recognize the 6LoRH\n   general format detailed in Section\
    \ 4 will drop the packet when a\n   6LoRH is present.\n   This specification uses\
    \ the bit pattern 10xxxxxx in Page 1 for the\n   new 6LoRH Dispatch.  Section\
    \ 4 describes how RPL artifacts in data\n   packets can be compressed as 6LoRH\
    \ headers.\n"
- title: 3.2.  Placement of 6LoRH Headers
  contents:
  - '3.2.  Placement of 6LoRH Headers

    '
- title: 3.2.1.  Relative to Non-6LoRH Headers
  contents:
  - "3.2.1.  Relative to Non-6LoRH Headers\n   In a zone of a packet where Page 1\
    \ is active (that is, once the Page\n   1 Paging Dispatch is parsed, and until\
    \ another Paging Dispatch is\n   parsed as described in the 6LoWPAN Paging Dispatch\
    \ specification\n   [RFC8025]), the parsing of the packet MUST follow this specification\n\
    \   if the 6LoRH Bit Pattern (see Section 3.1) is found.\n   With this specification,\
    \ the 6LoRH Dispatch is only defined in\n   Page 1, so it MUST be placed in the\
    \ packet in a zone where the Page 1\n   context is active.\n   Because a 6LoRH\
    \ header requires a Page 1 context, it MUST always be\n   placed after any Fragmentation\
    \ Header and/or Mesh Header as defined\n   in RFC 4944 [RFC4944].\n   A 6LoRH\
    \ header MUST always be placed before the LOWPAN_IPHC as\n   defined in RFC 6282\
    \ [RFC6282].  It is designed in such a fashion that\n   placing or removing a\
    \ header that is encoded with 6LoRH does not\n   modify the part of the packet\
    \ that is encoded with LOWPAN_IPHC,\n   whether or not there is an IP-in-IP encapsulation.\
    \  For instance, the\n   final destination of the packet is always the one in\
    \ the LOWPAN_IPHC,\n   whether or not there is a Routing Header.\n"
- title: 3.2.2.  Relative to Other 6LoRH Headers
  contents:
  - "3.2.2.  Relative to Other 6LoRH Headers\n   The \"Internet Protocol, Version\
    \ 6 (IPv6) Specification\" [RFC2460]\n   defines chains of headers that are introduced\
    \ by an IPv6 header and\n   terminated by either another IPv6 header (IP-in-IP)\
    \ or an Upper-Layer\n   Protocol (ULP) header.  When an outer header is stripped\
    \ from the\n   packet, the whole chain goes with it.  When one or more headers\
    \ are\n   inserted by an intermediate router, that router normally chains the\n\
    \   headers and encapsulates the result in IP-in-IP.\n   With this specification,\
    \ the chains of headers MUST be compressed in\n   the same order as they appear\
    \ in the uncompressed form of the packet.\n   This means that if there is more\
    \ than one nested IP-in-IP\n   encapsulation, the first IP-in-IP encapsulation,\
    \ with all its chain\n   of headers, is encoded first in the compressed form.\n\
    \   In the compressed form of a packet that has a Source Route or a Hop-\n   by-Hop\
    \ (HbH) Options Header [RFC2460] after the inner IPv6 header\n   (e.g., if there\
    \ is no IP-in-IP encapsulation), these headers are\n   placed in the 6LoRH form\
    \ before the 6LOWPAN_IPHC that represents the\n   IPv6 header (see Section 3.2.1).\
    \  If this packet gets encapsulated\n   and some other SRH or HbH Options Headers\
    \ are added as part of the\n   encapsulation, placing the 6LoRH headers next to\
    \ one another may\n   present an ambiguity on which header belongs to which chain\
    \ in the\n   uncompressed form.\n   In order to disambiguate the headers that\
    \ follow the inner IPv6\n   header in the uncompressed form from the headers that\
    \ follow the\n   outer IP-in-IP header, it is REQUIRED that the compressed IP-in-IP\n\
    \   header is placed last in the encoded chain.  This means that the\n   6LoRH\
    \ headers that are found after the last compressed IP-in-IP\n   header are to\
    \ be inserted after the IPv6 header that is encoded with\n   the 6LOWPAN_IPHC\
    \ when decompressing the packet.\n   With regard to the relative placement of\
    \ the SRH and the RPI in the\n   compressed form, it is a design point for this\
    \ specification that the\n   SRH entries are consumed as the packet progresses\
    \ down the LLN (see\n   Section 5.3).  In order to make this operation simpler\
    \ in the\n   compressed form, it is REQUIRED that in the compressed form, the\n\
    \   addresses along the source route path are encoded in the order of the\n  \
    \ path, and that the compressed SRH are placed before the compressed\n   RPI.\n"
- title: 4.  6LoWPAN Routing Header General Format
  contents:
  - "4.  6LoWPAN Routing Header General Format\n   The 6LoRH uses the Dispatch Value\
    \ Bit Pattern of 10xxxxxx in Page 1.\n   The Dispatch Value Bit Pattern is split\
    \ in two forms of 6LoRH:\n      Elective (6LoRHE), which may skipped if not understood\n\
    \      Critical (6LoRHC), which may not be ignored\n   For each form, a Type field\
    \ is used to encode the type of 6LoRH.\n   Note that there is a different registry\
    \ for the Type field of each\n   form of 6LoRH.\n   This means that a value for\
    \ the Type that is defined for one form of\n   6LoRH may be redefined in the future\
    \ for the other form.\n"
- title: 4.1.  Elective Format
  contents:
  - "4.1.  Elective Format\n   The 6LoRHE uses the Dispatch Value Bit Pattern of 101xxxxx.\
    \  A 6LoRHE\n   may be ignored and skipped in parsing.  If it is ignored, the\
    \ 6LoRHE\n   is forwarded with no change inside the LLN.\n       0           \
    \        1\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\
    \       ...        -+\n      |1|0|1| Length  |      Type     |               \
    \     |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-       ...        -+\n      \
    \                                 <--    Length    -->\n                 Figure\
    \ 3: Elective 6LoWPAN Routing Header\n   Length:  Length of the 6LoRHE expressed\
    \ in bytes, excluding the first\n         2 bytes.  This enables a node to skip\
    \ a 6LoRHE header that it\n         does not support and/or cannot parse, for\
    \ instance, if the Type\n         is not recognized.\n   Type: Type of the 6LoRHE\n"
- title: 4.2.  Critical Format
  contents:
  - "4.2.  Critical Format\n   The 6LoRHC uses the Dispatch Value Bit Pattern of 100xxxxx.\n\
    \   A node that does not support the 6LoRHC Type MUST silently discard\n   the\
    \ packet.\n   Note: A situation where a node receives a message with a Critical\n\
    \   6LoWPAN Routing Header that it does not understand should not occur\n   and\
    \ is an administrative error, see Section 8.\n     0                   1\n   \
    \  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-   \
    \           ...               -+\n    |1|0|0|   TSE   |      Type     |      \
    \                            |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-       \
    \       ...               -+\n                                     <-- Length\
    \ implied by Type/TSE -->\n                 Figure 4: Critical 6LoWPAN Routing\
    \ Header\n   Type-Specific Extension (TSE):  The meaning depends on the Type,\n\
    \         which must be known in all of the nodes.  The interpretation of\n  \
    \       the TSE depends on the Type field that follows.  For instance,\n     \
    \    it may be used to transport control bits, the number of\n         elements\
    \ in an array, or the length of the remainder of the\n         6LoRHC expressed\
    \ in a unit other than bytes.\n   Type: Type of the 6LoRHC\n"
- title: 4.3.  Compressing Addresses
  contents:
  - "4.3.  Compressing Addresses\n   The general technique used in this document to\
    \ compress an address is\n   first to determine a reference that has a long prefix\
    \ match with this\n   address and then elide that matching piece.  In order to\
    \ reconstruct\n   the compressed address, the receiving node will perform the\
    \ process\n   of coalescence described in Section 4.3.1.\n   One possible reference\
    \ is the root of the RPL Destination-Oriented\n   Directed Acyclic Graph (DODAG)\
    \ that is being traversed.  It is used\n   by 6LoRH as the reference to compress\
    \ an outer IP header in case of\n   an IP-in-IP encapsulation.  If the root is\
    \ the source of the packet,\n   this technique allows one to fully elide the source\
    \ address in the\n   compressed form of the IP header.  If the root is not the\n\
    \   encapsulator, then the Encapsulator Address may still be compressed\n   using\
    \ the root as a reference.  How the address of the root is\n   determined is discussed\
    \ in Section 4.3.2.\n   Once the address of the source of the packet is determined,\
    \ it\n   becomes the reference for the compression of the addresses that are\n\
    \   located in compressed SRH headers that are present inside the IP-in-\n   IP\
    \ encapsulation in the uncompressed form.\n"
- title: 4.3.1.  Coalescence
  contents:
  - "4.3.1.  Coalescence\n   An IPv6 compressed address is coalesced with a reference\
    \ address by\n   overriding the N rightmost bytes of the reference address with\
    \ the\n   compressed address, where N is the length of the compressed address,\n\
    \   as indicated by the Type of the SRH-6LoRH header in Figure 7.\n   The reference\
    \ address MAY be a compressed address as well, in which\n   case, it MUST be compressed\
    \ in a form that is of an equal or greater\n   length than the address that is\
    \ being coalesced.\n   A compressed address is expanded by coalescing it with\
    \ a reference\n   address.  In the particular case of a Type 4 SRH-6LoRH, the\
    \ address\n   is expressed in full and the coalescence is a complete override\
    \ as\n   illustrated in Figure 5.\n   RRRRRRRRRRRRRRRRRRR  A reference address,\
    \ which may be\n                        compressed or not\n               CCCCCCC\
    \  A compressed address, which may be\n                        shorter or the\
    \ same as the reference\n   RRRRRRRRRRRRCCCCCCC  A coalesced address, which may\
    \ be the\n                        same compression as the reference\n        \
    \              Figure 5: Coalescing Addresses\n"
- title: 4.3.2.  DODAG Root Address Determination
  contents:
  - "4.3.2.  DODAG Root Address Determination\n   Stateful address compression requires\
    \ that some state is installed in\n   the devices to store the compression information\
    \ that is elided from\n   the packet.  That state is stored in an abstract context\
    \ table, and\n   some form of index is found in the packet to obtain the compression\n\
    \   information from the context table.\n   With RFC 6282 [RFC6282], the state\
    \ is provided to the stack by the\n   6LoWPAN Neighbor Discovery Protocol (NDP)\
    \ [RFC6775].  NDP exchanges\n   the context through the 6LoWPAN Context Option\
    \ in Router\n   Advertisement (RA) messages.  In the compressed form of the packet,\n\
    \   the context can be signaled in a Context Identifier Extension.\n   With this\
    \ specification, the compression information is provided to\n   the stack by RPL,\
    \ and RPL exchanges it through the DODAGID field in\n   the DAG Information Object\
    \ (DIO) messages, as described in more\n   detail below.  In the compressed form\
    \ of the packet, the context can\n   be signaled by the RPLInstanceID in the RPI.\n\
    \   With RPL [RFC6550], the address of the DODAG root is known from the\n   DODAGID\
    \ field of the DIO messages.  For a Global Instance, the\n   RPLInstanceID that\
    \ is present in the RPI is enough information to\n   identify the DODAG that this\
    \ node participates with and its\n   associated root.  But, for a Local Instance,\
    \ the address of the root\n   MUST be explicit, either in some device configuration\
    \ or signaled in\n   the packet, as the source or the destination address, respectively.\n\
    \   When implicit, the address of the DODAG root MUST be determined as\n   follows:\n\
    \      If the whole network is a single DODAG, then the root can be well-\n  \
    \    known and does not need to be signaled in the packets.  But, since\n    \
    \  RPL does not expose that property, it can only be known by a\n      configuration\
    \ applied to all nodes.\n      Else, the router that encapsulates the packet and\
    \ compresses it\n      with this specification MUST also place an RPI in the packet\
    \ as\n      prescribed by RPL to enable the identification of the DODAG.  The\n\
    \      RPI must be present even in the case when the router also places\n    \
    \  an SRH header in the packet.\n   It is expected that the RPL implementation\
    \ maintains an abstract\n   context table, indexed by Global RPLInstanceID, that\
    \ provides the\n   address of the root of the DODAG that this node participates\
    \ in for\n   that particular RPL Instance.\n"
- title: 5.  The SRH-6LoRH Header
  contents:
  - '5.  The SRH-6LoRH Header

    '
- title: 5.1.  Encoding
  contents:
  - "5.1.  Encoding\n   A Source Routing Header 6LoRH (SRH-6LoRH) provides a compressed\
    \ form\n   for the SRH, as defined in RFC 6554 [RFC6554], for use by RPL\n   routers.\n\
    \   One or more SRH-6LoRH header(s) MAY be placed in a 6LoWPAN packet.\n   If\
    \ a non-RPL router receives a packet with an SRH-6LoRH header, there\n   was a\
    \ routing or a configuration error (see Section 8).\n   The desired reaction for\
    \ the non-RPL router is to drop the packet, as\n   opposed to skipping the header\
    \ and forwarding the packet.\n   The Dispatch Value Bit Pattern for the SRH-6LoRH\
    \ header indicates it\n   is Critical.  Routers that understand the 6LoRH general\
    \ format\n   detailed in Section 4 cannot ignore a 6LoRH header of this type and\n\
    \   will drop the packet if it is unknown to them.\n       0                 \
    \  1\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\
    \    -+-    -+ ... +-    -+\n      |1|0|0|  Size   |6LoRH Type 0..4| Hop1 | Hop2\
    \ |     | HopN |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-    -+-    -+ ... +-\
    \    -+\n                Where N = Size + 1\n                          Figure\
    \ 6: The SRH-6LoRH\n   The 6LoRH Type of an SRH-6LoRH header indicates the compression\
    \ level\n   used for that header.\n   The fields following the 6LoRH Type are\
    \ compressed addresses\n   indicating the consecutive hops and are ordered from\
    \ the first to the\n   last hop.\n   All the addresses in a given SRH-6LoRH header\
    \ MUST be compressed in\n   an identical fashion, so the Length of the compressed\
    \ form is the\n   same for all.\n   In order to get different degrees of compression,\
    \ multiple\n   consecutive SRH-6LoRH headers MUST be used.\n   Type 0 means that\
    \ the address is compressed down to one byte, whereas\n   Type 4 means that the\
    \ address is provided in full in the SRH-6LoRH\n   with no compression.  The complete\
    \ list of Types of SRH-6LoRH and the\n   corresponding compression level are provided\
    \ in Figure 7:\n     +-----------+----------------------+\n     |   6LoRH   |\
    \ Length of compressed |\n     |   Type    | IPv6 address (bytes) |\n     +-----------+----------------------+\n\
    \     |    0      |       1              |\n     |    1      |       2       \
    \       |\n     |    2      |       4              |\n     |    3      |     \
    \  8              |\n     |    4      |      16              |\n     +-----------+----------------------+\n\
    \                       Figure 7: The SRH-6LoRH Types\n   In the case of an SRH-6LoRH\
    \ header, the TSE field is used as a Size,\n   which encodes the number of hops\
    \ minus 1; so a Size of 0 means one\n   hop, and the maximum that can be encoded\
    \ is 32 hops.  (If more than\n   32 hops need to be expressed, a sequence of SRH-6LoRH\
    \ elements can be\n   employed.)  The result is that the Length, in bytes, of\
    \ an SRH-6LoRH\n   header is:\n   2 + Length_of_compressed_IPv6_address * (Size\
    \ + 1)\n"
- title: 5.2.  SRH-6LoRH General Operation
  contents:
  - '5.2.  SRH-6LoRH General Operation

    '
- title: 5.2.1.  Uncompressed SRH Operation
  contents:
  - "5.2.1.  Uncompressed SRH Operation\n   In the uncompressed form, when the root\
    \ generates or forwards a\n   packet in Non-Storing mode, it needs to include\
    \ a Source Routing\n   Header [RFC6554] to signal a strict source route path to\
    \ a final\n   destination down the DODAG.\n   All the hops along the path, except\
    \ the first one, are encoded in\n   order in the SRH.  The last entry in the SRH\
    \ is the final\n   destination; the destination in the IPv6 header is the first\
    \ hop\n   along the source route path.  The intermediate hops perform a swap\n\
    \   and the Segments Left field indicates the active entry in the Routing\n  \
    \ Header [RFC2460].\n   The current destination of the packet, which is the termination\
    \ of\n   the current segment, is indicated at all times by the destination\n \
    \  address of the IPv6 header.\n"
- title: 5.2.2.  6LoRH-Compressed SRH Operation
  contents:
  - "5.2.2.  6LoRH-Compressed SRH Operation\n   The handling of the SRH-6LoRH is different:\
    \ there is no swap, and a\n   forwarding router that corresponds to the first\
    \ entry in the first\n   SRH-6LoRH, upon reception of a packet, effectively consumes\
    \ that\n   entry when forwarding.  This means that the size of a compressed\n\
    \   source-routed packet decreases as the packet progresses along its\n   path\
    \ and that the routing information is lost along the way.  This\n   also means\
    \ that an SRH encoded with 6LoRH is not recoverable and\n   cannot be protected.\n\
    \   When compressed with this specification, all the remaining hops MUST\n   be\
    \ encoded in order in one or more consecutive SRH-6LoRH headers.\n   Whether or\
    \ not there is an SRH-6LoRH header present, the address of\n   the final destination\
    \ is indicated in the LOWPAN_IPHC at all times\n   along the path.  Examples of\
    \ this are provided in Appendix A.\n   The current destination (termination of\
    \ the current segment) for a\n   compressed source-routed packet is indicated\
    \ in the first entry of\n   the first SRH-6LoRH.  In strict source routing, that\
    \ entry MUST match\n   an address of the router that receives the packet.\n  \
    \ The last entry in the last SRH-6LoRH is the last router on the way to\n   the\
    \ final destination in the LLN.  This router can be the final\n   destination\
    \ if it is found desirable to carry a whole IP-in-IP\n   encapsulation all the\
    \ way.  Else, it is the RPL parent of the final\n   destination, or a router acting\
    \ at 6LoWPAN Router (6LR) [RFC6775] for\n   the destination host, and it is advertising\
    \ the host as an external\n   route to RPL.\n   If the SRH-6LoRH header is contained\
    \ in an IP-in-IP encapsulation,\n   the last router removes the whole chain of\
    \ headers.  Otherwise, it\n   removes the SRH-6LoRH header only.\n"
- title: 5.2.3.  Inner LOWPAN_IPHC Compression
  contents:
  - "5.2.3.  Inner LOWPAN_IPHC Compression\n   6LoWPAN ND [RFC6282] is designed to\
    \ support more than one IPv6\n   address per node and per Interface Identifier\
    \ (IID); an IID is\n   typically derived from a MAC address to optimize the LOWPAN_IPHC\n\
    \   compression.\n   Link-local addresses are compressed with stateless address\n\
    \   compression (S/DAC=0).  The other addresses are derived from\n   different\
    \ prefixes, and they can be compressed with stateful address\n   compression based\
    \ on a context (S/DAC=1).\n   But, stateless compression is only defined for the\
    \ specific link-\n   local prefix as opposed to the prefix in an encapsulating\
    \ header.\n   And with stateful compression, the compression reference is found\
    \ in\n   a context, as opposed to an encapsulating header.\n   The result is that,\
    \ in the case of an IP-in-IP encapsulation, it is\n   possible to compress an\
    \ inner source (respective destination) IP\n   address in a LOWPAN_IPHC based\
    \ on the encapsulating IP header only if\n   stateful (context-based) compression\
    \ is used.  The compression will\n   operate only if the IID in the source (respective\
    \ destination) IP\n   address in the outer and inner headers match, which usually\
    \ means\n   that they refer to the same node.  This is encoded as S/DAC = 1 and\n\
    \   S/AM=11.  It must be noted that the outer destination address that is\n  \
    \ used to compress the inner destination address is the last entry in\n   the\
    \ last SRH-6LoRH header.\n"
- title: 5.3.  The Design Point of Popping Entries
  contents:
  - "5.3.  The Design Point of Popping Entries\n   In order to save energy and to\
    \ optimize the chances of transmission\n   success on lossy media, it is a design\
    \ point for this specification\n   that the entries in the SRH that have been\
    \ used are removed from the\n   packet.  This creates a discrepancy from the art\
    \ of IPv6, where\n   Routing Headers are mutable but recoverable.\n   With this\
    \ specification, the packet can be expanded at any hop into a\n   valid IPv6 packet,\
    \ including an SRH, and compressed back.  But the\n   packet, as decompressed\
    \ along the way, will not carry all the\n   consumed addresses that packet would\
    \ have if it had been forwarded in\n   the uncompressed form.\n   It is noted\
    \ that:\n      The value of keeping the whole RH in an IPv6 header is for the\n\
    \      receiver to reverse it to use the symmetrical path on the way\n      back.\n\
    \      It is generally not a good idea to reverse a Routing Header.  The\n   \
    \   RH may have been used to stay away from the shortest path for some\n     \
    \ reason that is only valid on the way in (segment routing).\n      There is no\
    \ use in reversing an RH in the present RPL\n      specifications.\n      Point-to-Point\
    \ (P2P) RPL reverses a path that was learned\n      reactively as a part of the\
    \ protocol operation, which is probably\n      a cleaner way than a reversed echo\
    \ on the data path.\n      Reversing a header is discouraged (by RFC 2460 [RFC2460])\
    \ for\n      Redirected Header Option (RHO) unless it is authenticated, which\n\
    \      requires an Authentication Header (AH).  There is no definition of\n  \
    \    an AH operation for SRH, and there is no indication that the need\n     \
    \ exists in LLNs.\n      AH does not protect the RH on the way.  AH is a validation\
    \ at the\n      receiver with the sole value of enabling the receiver to reverse\n\
    \      it.\n      A RPL domain is usually protected by L2 security, which secures\n\
    \      both RPL itself and the RH in the packets at every hop.  This is a\n  \
    \    better security than that provided by AH.\n   In summary, the benefit of\
    \ saving energy and lowering the chances of\n   loss by sending smaller frames\
    \ over the LLN are seen as overwhelming\n   compared to the value of possibly\
    \ reversing the header.\n"
- title: 5.4.  Compression Reference for SRH-6LoRH Header Entries
  contents:
  - "5.4.  Compression Reference for SRH-6LoRH Header Entries\n   In order to optimize\
    \ the compression of IP addresses present in the\n   SRH headers, this specification\
    \ requires that the 6LoWPAN layer\n   identifies an address that is used as a\
    \ reference for the\n   compression.\n   With this specification, the Compression\
    \ Reference for the first\n   address found in an SRH header is the source of\
    \ the IPv6 packet, and\n   then the reference for each subsequent entry is the\
    \ address of its\n   predecessor once it is uncompressed.\n   With RPL [RFC6550],\
    \ an SRH header may only be present in Non-Storing\n   mode, and it may only be\
    \ placed in the packet by the root of the\n   DODAG, which must be the source\
    \ of the resulting IPv6 packet\n   [RFC2460].  In this case, the address used\
    \ as Compression Reference\n   is the address of the root.\n   The Compression\
    \ Reference MUST be determined as follows:\n      The reference address may be\
    \ obtained by configuration.  The\n      configuration may indicate either the\
    \ address in full or the\n      identifier of a 6LoWPAN Context that carries the\
    \ address\n      [RFC6775], for instance, one of the 16 Context Identifiers used\
    \ in\n      LOWPAN_IPHC [RFC6282].\n      Else, if there is no IP-in-IP encapsulation,\
    \ the source address in\n      the IPv6 header that is compressed with LOWPAN_IPHC\
    \ is the\n      reference for the compression.\n      Else, if the IP-in-IP compression\
    \ specified in this document is\n      used and the Encapsulator Address is provided,\
    \ then the\n      Encapsulator Address is the reference.\n      Else, meaning\
    \ that the IP-in-IP compression specified in this\n      document is used and\
    \ the encapsulator is implicitly the root, the\n      address of the root is the\
    \ reference.\n"
- title: 5.5.  Popping Headers
  contents:
  - "5.5.  Popping Headers\n   Upon reception, the router checks whether the address\
    \ in the first\n   entry of the first SRH-6LoRH is one of its own addresses. \
    \ If that is\n   the case, the router MUST consume that entry before forwarding,\
    \ which\n   is an action of popping from a stack, where the stack is effectively\n\
    \   the sequence of entries in consecutive SRH-6LoRH headers.\n   Popping an entry\
    \ of an SRH-6LoRH header is a recursive action\n   performed as follows:\n   \
    \   If the Size of the current SRH-6LoRH header is 1 or more\n      (indicating\
    \ that there are at least 2 entries in the header), the\n      router removes\
    \ the first entry and decrements the Size by 1.\n      If the Size of the current\
    \ SRH-6LoRH header is 0 (indicating that\n      there is only 1 entry in the header)\
    \ and there is no subsequent\n      SRH-6LoRH after this, then the current SRH-6LoRH\
    \ is removed.\n      If the Size of the current SRH-6LoRH header is 0 and there\
    \ is a\n      subsequent SRH-6LoRH and the Type of the subsequent SRH-6LoRH is\n\
    \      equal to or greater than the Type of the current SRH-6LoRH header\n   \
    \   (indicating the same or lesser compression yielding the same or\n      larger\
    \ compressed forms), then the current SRH-6LoRH is removed.\n      If the Size\
    \ of the current SRH-6LoRH header is 0 and there is a\n      subsequent SRH-6LoRH\
    \ and the Type of the subsequent SRH-6LoRH is\n      less the Type of the current\
    \ SRH-6LoRH header, the first entry of\n      the subsequent SRH-6LoRH is removed\
    \ and coalesced with the first\n      entry of the current SRH-6LoRH.\n      At\
    \ the end of the process, if there are no more SRH-6LoRH in the\n      packet,\
    \ then the processing node is the last router along the\n      source route path.\n\
    \   An example of this operation is provided in Appendix A.3.\n"
- title: 5.6.  Forwarding
  contents:
  - "5.6.  Forwarding\n   When receiving a packet with an SRH-6LoRH, a router determines\
    \ the\n   IPv6 address of the current segment endpoint.\n   If strict source routing\
    \ is enforced and this router is not the\n   segment endpoint for the packet,\
    \ then this router MUST drop the\n   packet.\n   If this router is the current\
    \ segment endpoint, then the router pops\n   its address as described in Section\
    \ 5.5 and continues processing the\n   packet.\n   If there is still an SRH-6LoRH,\
    \ then the router determines the new\n   segment endpoint and routes the packet\
    \ towards that endpoint.\n   Otherwise, the router uses the destination in the\
    \ inner IP header to\n   forward or accept the packet.\n   The segment endpoint\
    \ of a packet MUST be determined as follows:\n      The router first determines\
    \ the Compression Reference as discussed\n      in Section 4.3.1.\n      The router\
    \ then coalesces the Compression Reference with the first\n      entry of the\
    \ first SRH-6LoRH header as discussed in Section 5.4.\n      If the SRH-6LoRH\
    \ header is Type 4, then the coalescence is a full\n      override.\n   Since\
    \ the Compression Reference is an uncompressed address, the\n   coalesced IPv6\
    \ address is also expressed in the full 128 bits.\n"
- title: 6.  The RPL Packet Information 6LoRH (RPI-6LoRH)
  contents:
  - "6.  The RPL Packet Information 6LoRH (RPI-6LoRH)\n   Section 11.2 of the RPL\
    \ document [RFC6550] specifies the RPL Packet\n   Information (RPI) as a set of\
    \ fields that are placed by RPL routers\n   in IP packets to identify the RPL\
    \ Instance, detect anomalies, and\n   trigger corrective actions.\n   In particular,\
    \ the SenderRank, which is the scalar metric computed by\n   a specialized Objective\
    \ Function such as described in RFC 6552\n   [RFC6552], indicates the Rank of\
    \ the sender and is modified at each\n   hop.  The SenderRank field is used to\
    \ validate that the packet\n   progresses in the expected direction, either upwards\
    \ or downwards,\n   along the DODAG.\n   RPL defines the \"The Routing Protocol\
    \ for Low-Power and Lossy\n   Networks (RPL) Option for Carrying RPL Information\
    \ in Data-Plane\n   Datagrams\" [RFC6553] to transport the RPI, which is carried\
    \ in an\n   IPv6 Hop-by-Hop Options Header [RFC2460], typically consuming 8 bytes\n\
    \   per packet.\n   With RFC 6553 [RFC6553], the RPL Option is encoded as 6 octets,\
    \ which\n   must be placed in a Hop-by-Hop header that consumes two additional\n\
    \   octets for a total of 8 octets.  To limit the header's range to just\n   the\
    \ RPL domain, the Hop-by-Hop header must be added to (or removed\n   from) packets\
    \ that cross the border of the RPL domain.\n   The 8-byte overhead is detrimental\
    \ to LLN operation, particularly\n   with regard to bandwidth and battery constraints.\
    \  These bytes may\n   cause a containing frame to grow above maximum frame size,\
    \ leading to\n   Layer 2 or 6LoWPAN [RFC4944] fragmentation, which in turn leads\
    \ to\n   even more energy expenditure and issues discussed in \"LLN Fragment\n\
    \   Forwarding and Recovery\" [FORWARD-FRAG].\n   An additional overhead comes\
    \ from the need, in certain cases, to add\n   an IP-in-IP encapsulation to carry\
    \ the Hop-by-Hop header.  This is\n   needed when the router that inserts the\
    \ Hop-by-Hop header is not the\n   source of the packet so that an error can be\
    \ returned to the router.\n   This is also the case when a packet originated by\
    \ a RPL node must be\n   stripped from the Hop-by-Hop header to be routed outside\
    \ the RPL\n   domain.\n   For that reason, this specification defines an IP-in-IP-6LoRH\
    \ header\n   in Section 7, but it must be noted that removal of a 6LoRH header\n\
    \   does not require manipulation of the packet in the LOWPAN_IPHC, and\n   thus,\
    \ if the source address in the LOWPAN_IPHC is the node that\n   inserted the IP-in-IP-6LoRH\
    \ header, then this situation alone does\n   not mandate an IP-in-IP-6LoRH header.\n\
    \   Note: It was found that some implementations omit the RPI for packets\n  \
    \ going down the RPL graph in Non-Storing mode, even though RPL\n   indicates\
    \ that the RPI should be placed in the packet.  With this\n   specification, the\
    \ RPI is important to indicate the RPLInstanceID, so\n   the RPI should not be\
    \ omitted.\n   As a result, a RPL packet may bear only an RPI-6LoRH header and\
    \ no\n   IP-in-IP-6LoRH header.  In that case, the source and destination of\n\
    \   the packet are specified by the LOWPAN_IPHC.\n   As with RFC 6553 [RFC6553],\
    \ the fields in the RPI include an 'O', an\n   'R', and an 'F' bit, an 8-bit RPLInstanceID\
    \ (with some internal\n   structure), and a 16-bit SenderRank.\n   The remainder\
    \ of this section defines the RPI-6LoRH header, which is\n   a Critical 6LoWPAN\
    \ Routing Header that is designed to transport the\n   RPI in 6LoWPAN LLNs.\n"
- title: 6.1.  Compressing the RPLInstanceID
  contents:
  - "6.1.  Compressing the RPLInstanceID\n   RPL Instances are discussed in Section\
    \ 5 of the RPL specification\n   [RFC6550].  A number of simple use cases do not\
    \ require more than one\n   RPL Instance, and in such cases, the RPL Instance\
    \ is expected to be\n   the Global Instance 0.  A global RPLInstanceID is encoded\
    \ in a\n   RPLInstanceID field as follows:\n       0 1 2 3 4 5 6 7\n      +-+-+-+-+-+-+-+-+\n\
    \      |0|     ID      |  Global RPLInstanceID in 0..127\n      +-+-+-+-+-+-+-+-+\n\
    \         Figure 8: RPLInstanceID Field Format for Global Instances\n   For the\
    \ particular case of the Global Instance 0, the RPLInstanceID\n   field is all\
    \ zeros.  This specification allows the compressor to\n   elide a RPLInstanceID\
    \ field that is all zeros and defines an I flag\n   that, when set, signals that\
    \ the field is elided.\n"
- title: 6.2.  Compressing the SenderRank
  contents:
  - "6.2.  Compressing the SenderRank\n   The SenderRank is the result of the DAGRank\
    \ operation on the Rank of\n   the sender; here, the DAGRank operation is defined\
    \ in Section 3.5.1\n   of the RPL specification [RFC6550] as:\n      DAGRank(rank)\
    \ = floor(rank/MinHopRankIncrease)\n   If MinHopRankIncrease is set to a multiple\
    \ of 256, the least\n   significant eight bits of the SenderRank will be all zeroes;\
    \ by\n   eliding those, the SenderRank can be compressed into a single byte.\n\
    \   This idea is used in RFC 6550 [RFC6550], by defining\n   DEFAULT_MIN_HOP_RANK_INCREASE\
    \ as 256, and in RFC 6552 [RFC6552],\n   which defaults MinHopRankIncrease to\
    \ DEFAULT_MIN_HOP_RANK_INCREASE.\n   This specification allows for the SenderRank\
    \ to be encoded as either\n   1 or 2 bytes and defines a K flag that, when set,\
    \ signals that a\n   single byte is used.\n"
- title: 6.3.  The Overall RPI-6LoRH Encoding
  contents:
  - "6.3.  The Overall RPI-6LoRH Encoding\n   The RPI-6LoRH header provides a compressed\
    \ form for the RPL RPI.\n   Routers that need to forward a packet with a RPI-6LoRH\
    \ header are\n   expected to be RPL routers that support this specification.\n\
    \   If a non-RPL router receives a packet with a RPI-6LoRH header, there\n   was\
    \ a routing or a configuration error (see Section 8).\n   The desired reaction\
    \ for the non-RPL router is to drop the packet as\n   opposed to skip the header\
    \ and forward the packet, which could end up\n   forming loops by reinjecting\
    \ the packet in the wrong RPL Instance.\n   The Dispatch Value Bit Pattern for\
    \ the SRH-6LoRH header indicates it\n   is Critical.  Routers that understand\
    \ the 6LoRH general format\n   detailed in Section 4 cannot ignore a 6LoRH header\
    \ of this type and\n   will drop the packet if it is unknown to them.\n   Since\
    \ the RPI-6LoRH header is a Critical header, the TSE field does\n   not need to\
    \ be a length expressed in bytes.  Here, the field is fully\n   reused for control\
    \ bits that encode the O, R, and F flags from the\n   RPI, as well as the I and\
    \ K flags that indicate the compression\n   format.\n   The RPI-6LoRH is Type\
    \ 5.\n   The RPI-6LoRH header is immediately followed by the RPLInstanceID\n \
    \  field, unless that field is fully elided, and then the SenderRank,\n   which\
    \ is either compressed into one byte or fully in-lined as 2\n   bytes.  The I\
    \ and K flags in the RPI-6LoRH header indicate whether\n   the RPLInstanceID is\
    \ elided and/or the SenderRank is compressed.\n   Depending on these bits, the\
    \ Length of the RPI-6LoRH may vary as\n   described hereafter.\n       0     \
    \              1                   2\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+  ...  -+-+-+\n\
    \      |1|0|0|O|R|F|I|K| 6LoRH Type=5  |   Compressed fields  |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \  ...  -+-+-+\n                  Figure 9: The Generic RPI-6LoRH Format\n   O,\
    \ R, and F bits:  The O, R, and F bits are defined in Section 11.2\n         of\
    \ RFC 6550 [RFC6550].\n   I flag:  If it is set, the RPLInstanceID is elided and\
    \ the\n         RPLInstanceID is the Global RPLInstanceID 0.  If it is not set,\n\
    \         the octet immediately following the Type field contains the\n      \
    \   RPLInstanceID as specified in Section 5.1 of RFC 6550\n         [RFC6550].\n\
    \   K flag:  If it is set, the SenderRank is compressed into 1 octet,\n      \
    \   with the least significant octet elided.  If it is not set, the\n        \
    \ SenderRank is fully inlined as 2 octets.\n   In Figure 10, the RPLInstanceID\
    \ is the Global RPLInstanceID 0, and\n   the MinHopRankIncrease is a multiple\
    \ of 256, so the least significant\n   byte is all zeros and can be elided:\n\
    \       0                   1                   2\n       0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |1|0|0|O|R|F|1|1| 6LoRH Type=5  | SenderRank    |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                I=1, K=1\n                 Figure 10: The Most Compressed RPI-6LoRH\n\
    \   In Figure 11, the RPLInstanceID is the Global RPLInstanceID 0, but\n   both\
    \ bytes of the SenderRank are significant so it cannot be\n   compressed:\n  \
    \     0                   1                   2                   3\n       0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |1|0|0|O|R|F|1|0| 6LoRH Type=5  |        SenderRank             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      \
    \          I=1, K=0\n                   Figure 11: Eliding the RPLInstanceID\n\
    \   In Figure 12, the RPLInstanceID is not the Global RPLInstanceID 0,\n   and\
    \ the MinHopRankIncrease is a multiple of 256:\n       0                   1 \
    \                  2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |1|0|0|O|R|F|0|1| 6LoRH Type=5  | RPLInstanceID |  SenderRank   |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      \
    \          I=0, K=1\n                     Figure 12: Compressing SenderRank\n\
    \   In Figure 13, the RPLInstanceID is not the Global RPLInstanceID 0,\n   and\
    \ both bytes of the SenderRank are significant:\n       0                   1\
    \                   2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |1|0|0|O|R|F|0|0| 6LoRH Type=5  | RPLInstanceID |    Sender-...\n     \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n        ...-Rank\
    \      |\n      +-+-+-+-+-+-+-+-+\n                I=0, K=0\n             Figure\
    \ 13: The Least Compressed Form of RPI-6LoRH\n"
- title: 7.  The IP-in-IP 6LoRH Header
  contents:
  - "7.  The IP-in-IP 6LoRH Header\n   The IP-in-IP 6LoRH (IP-in-IP-6LoRH) header\
    \ is an Elective 6LoWPAN\n   Routing Header that provides a compressed form for\
    \ the encapsulating\n   IPv6 Header in the case of an IP-in-IP encapsulation.\n\
    \   An IP-in-IP encapsulation is used to insert a field such as a Routing\n  \
    \ Header or an RPI at a router that is not the source of the packet.\n   In order\
    \ to send an error back regarding the inserted field, the\n   address of the router\
    \ that performs the insertion must be provided.\n   The encapsulation can also\
    \ enable the last router prior to the\n   Destination to remove a field such as\
    \ the RPI, but this can be done\n   in the compressed form by removing the RPI-6LoRH,\
    \ so an IP-in-IP-\n   6LoRH encapsulation is not required for that sole purpose.\n\
    \   The Dispatch Value Bit Pattern for the SRH-6LoRH header indicates it\n   is\
    \ Elective.  This field is not Critical for routing since it does\n   not indicate\
    \ the destination of the packet, which is either encoded\n   in an SRH-6LoRH header\
    \ or in the inner IP header.  A 6LoRH header of\n   this type can be skipped if\
    \ not understood (per Section 4), and the\n   6LoRH header indicates the Length\
    \ in bytes.\n     0                   1                   2\n     0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\
    \       ...      -+\n    |1|0|1| Length  | 6LoRH Type 6  |  Hop Limit    | Encaps.\
    \ Address  |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-       ...\
    \      -+\n                       Figure 14: The IP-in-IP-6LoRH\n   The Length\
    \ of an IP-in-IP-6LoRH header is expressed in bytes and MUST\n   be at least 1,\
    \ to indicate a Hop Limit (HL) that is decremented at\n   each hop.  When the\
    \ HL reaches 0, the packet is dropped per RFC 2460\n   [RFC2460].\n   If the Length\
    \ of an IP-in-IP-6LoRH header is exactly 1, then the\n   Encapsulator Address\
    \ is elided, which means that the encapsulator is\n   a well-known router, for\
    \ instance, the root in a RPL graph.\n   The most efficient compression of an\
    \ IP-in-IP encapsulation that can\n   be achieved with this specification is obtained\
    \ when an endpoint of\n   the packet is the root of the RPL DODAG associated to\
    \ the RPL\n   Instance that is used to forward the packet, and the root address\
    \ is\n   known implicitly as opposed to signaled explicitly in the data\n   packets.\n\
    \   If the Length of an IP-in-IP-6LoRH header is greater than 1, then an\n   Encapsulator\
    \ Address is placed in a compressed form after the Hop\n   Limit field.  The value\
    \ of the Length indicates which compression is\n   performed on the Encapsulator\
    \ Address.  For instance, a Length of 3\n   indicates that the Encapsulator Address\
    \ is compressed to 2 bytes.\n   The reference for the compression is the address\
    \ of the root of the\n   DODAG.  The way the address of the root is determined\
    \ is discussed in\n   Section 4.3.2.\n   With RPL, the destination address in\
    \ the IP-in-IP header is\n   implicitly the root in the RPL graph for packets\
    \ going upwards; in\n   Storing mode, it is the destination address in the LOWPAN_IPHC\
    \ for\n   packets going downwards.  In Non-Storing mode, there is no implicit\n\
    \   value for packets going downwards.\n   If the implicit value is correct, the\
    \ destination IP address of the\n   IP-in-IP encapsulation can be elided.  Else,\
    \ the destination IP\n   address of the IP-in-IP header is transported in an SRH-6LoRH\
    \ header\n   as the first entry of the first of these headers.\n   If the final\
    \ destination of the packet is a leaf that does not\n   support this specification,\
    \ then the chain of 6LoRH headers must be\n   stripped by the RPL/6LR router to\
    \ which the leaf is attached.  In\n   that example, the destination IP address\
    \ of the IP-in-IP header\n   cannot be elided.\n   In the special case where a\
    \ 6LoRH header is used to route 6LoWPAN\n   fragments, the destination address\
    \ is not accessible in the\n   LOWPAN_IPHC on all fragments and can be elided\
    \ only for the first\n   fragment and for packets going upwards.\n"
- title: 8.  Management Considerations
  contents:
  - "8.  Management Considerations\n   Though it is possible to decompress a packet\
    \ at any hop, this\n   specification is optimized to enable that a packet is forwarded\
    \ in\n   its compressed form all the way, and it makes sense to deploy\n   homogeneous\
    \ networks where all nodes, or no nodes at all, use the\n   compression technique\
    \ detailed therein.\n   This specification aims at a simple implementation running\
    \ in\n   constrained nodes, so it does indeed expect a homogeneous network\n \
    \  and, as a consequence, it does not provide a method to determine the\n   level\
    \ of support by the next hops at forwarding time.\n   Should an extension to this\
    \ specification provide such a method,\n   forwarding nodes could compress or\
    \ decompress the RPL artifacts\n   appropriately and enable a backward compatibility\
    \ between nodes that\n   support this specification and nodes that do not.\n \
    \  It results that this specification does not attempt to enable such\n   backwards\
    \ compatibility.  It does not require extraneous code to\n   exchange and handle\
    \ error messages to automatically correct mismatch\n   situations either.\n  \
    \ When a packet is expected to carry a 6LoRH header but does not, the\n   node\
    \ that discovers the issue is expected to send an ICMPv6 error\n   message to\
    \ the root.  It should be sent at an adapted rate-limitation\n   and with a type\
    \ 4 (indicating a \"Parameter Problem\") and a code 0\n   (indicating an \"Unrecognized\
    \ Next Header field encountered\").  The\n   relevant portion of the received\
    \ packet should be embedded and the\n   offset therein where the 6LoRH header\
    \ was expected should be pointed\n   out.\n   When a packet is received with a\
    \ 6LoRH header that is not recognized,\n   the node that discovers the issue is\
    \ expected to send an ICMPv6 error\n   message to the root.  It should be sent\
    \ at an adapted rate-limitation\n   and with a type 4 (indicating a \"Parameter\
    \ Problem\") and a code 1\n   (indicating an \"Unrecognized Next Header type encountered\"\
    ).  The\n   relevant portion of the received packet should be embedded and the\n\
    \   offset therein where the 6LoRH header was expected should be pointed\n   out.\n\
    \   In both cases, the node SHOULD NOT place a 6LoRH header as defined in\n  \
    \ this specification in the resulting message, and the node should\n   either\
    \ omit the RPI or place it uncompressed after the IPv6 header.\n   Additionally,\
    \ in both cases, an alternate management method may be\n   preferred in order\
    \ to notify the network administrator that there is\n   a configuration error.\n\
    \   Keeping the network homogeneous is either a deployment issue, by\n   deploying\
    \ only devices with a same capability, or a management issue,\n   by configuring\
    \ all devices to either use or not use a certain level\n   of this compression\
    \ technique and its future additions.\n   In particular, the situation where a\
    \ node receives a message with a\n   Critical 6LoWPAN Routing Header that it does\
    \ not understand is an\n   administrative error whereby the wrong device is placed\
    \ in a network,\n   or the device is misconfigured.\n   When a mismatch situation\
    \ is detected, it is expected that the device\n   raises some management alert\
    \ indicating the issue, e.g., that it has\n   to drop a packet with a Critical\
    \ 6LoRH.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   The security considerations of RFC 4944 [RFC4944],\
    \ RFC 6282\n   [RFC6282], and RFC 6553 [RFC6553] apply.\n   Using a compressed\
    \ format as opposed to the full in-line format is\n   logically equivalent and\
    \ is believed not to create an opening for a\n   new threat when compared to RFC\
    \ 6550 [RFC6550], RFC 6553 [RFC6553],\n   and RFC 6554 [RFC6554], noting that,\
    \ even though intermediate hops\n   are removed from the SRH header as they are\
    \ consumed, a node may\n   still identify that the rest of the source-routed path\
    \ includes a\n   loop or not (see the \"Security\" section of RFC 6554).  It must\
    \ be\n   noted that if the attacker is not part of the loop, then there is\n \
    \  always a node at the beginning of the loop that can detect it and\n   remove\
    \ it.\n"
- title: 10.  IANA Considerations
  contents:
  - '10.  IANA Considerations

    '
- title: 10.1.  Reserving Space in 6LoWPAN Dispatch Page 1
  contents:
  - "10.1.  Reserving Space in 6LoWPAN Dispatch Page 1\n   This specification reserves\
    \ Dispatch Value Bit Patterns within the\n   6LoWPAN Dispatch Page 1 as follows:\n\
    \      10 1xxxxx: for Elective 6LoWPAN Routing Headers\n      10 0xxxxx: for Critical\
    \ 6LoWPAN Routing Headers\n   Additionally, this document creates two IANA registries:\
    \ one for the\n   Critical 6LoWPAN Routing Header Type and one for the Elective\
    \ 6LoWPAN\n   Routing Header Type, each with 256 possible values, from 0 to 255,\
    \ as\n   described below.\n   Future assignments are made by IANA using the \"\
    RFC Required\"\n   procedure [RFC5226].\n"
- title: 10.2.  New Critical 6LoWPAN Routing Header Type Registry
  contents:
  - "10.2.  New Critical 6LoWPAN Routing Header Type Registry\n   This document creates\
    \ an IANA registry titled \"Critical 6LoWPAN\n   Routing Header Type\" and assigns\
    \ the following values:\n      0-4: SRH-6LoRH [RFC8138]\n      5: RPI-6LoRH [RFC8138]\n"
- title: 10.3.  New Elective 6LoWPAN Routing Header Type Registry
  contents:
  - "10.3.  New Elective 6LoWPAN Routing Header Type Registry\n   This document creates\
    \ an IANA registry titled \"Elective 6LoWPAN\n   Routing Header Type\" and assigns\
    \ the following value:\n      6: IP-in-IP-6LoRH [RFC8138]\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [IEEE.802.15.4]\n              IEEE, \"IEEE Standard\
    \ for Low-Rate Wireless Networks\",\n              IEEE 802.15.4-2015, DOI 10.1109/IEEESTD.2016.7460875,\n\
    \              <http://ieeexplore.ieee.org/document/7460875/>.\n   [RFC2119] \
    \ Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement\
    \ Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n\
    \              <http://www.rfc-editor.org/info/rfc2119>.\n   [RFC2460]  Deering,\
    \ S. and R. Hinden, \"Internet Protocol, Version 6\n              (IPv6) Specification\"\
    , RFC 2460, DOI 10.17487/RFC2460,\n              December 1998, <http://www.rfc-editor.org/info/rfc2460>.\n\
    \   [RFC4443]  Conta, A., Deering, S., and M. Gupta, Ed., \"Internet\n       \
    \       Control Message Protocol (ICMPv6) for the Internet\n              Protocol\
    \ Version 6 (IPv6) Specification\", RFC 4443,\n              DOI 10.17487/RFC4443,\
    \ March 2006,\n              <http://www.rfc-editor.org/info/rfc4443>.\n   [RFC4944]\
    \  Montenegro, G., Kushalnagar, N., Hui, J., and D. Culler,\n              \"\
    Transmission of IPv6 Packets over IEEE 802.15.4\n              Networks\", RFC\
    \ 4944, DOI 10.17487/RFC4944, September 2007,\n              <http://www.rfc-editor.org/info/rfc4944>.\n\
    \   [RFC5226]  Narten, T. and H. Alvestrand, \"Guidelines for Writing an\n   \
    \           IANA Considerations Section in RFCs\", BCP 26, RFC 5226,\n       \
    \       DOI 10.17487/RFC5226, May 2008,\n              <http://www.rfc-editor.org/info/rfc5226>.\n\
    \   [RFC6282]  Hui, J., Ed. and P. Thubert, \"Compression Format for IPv6\n  \
    \            Datagrams over IEEE 802.15.4-Based Networks\", RFC 6282,\n      \
    \        DOI 10.17487/RFC6282, September 2011,\n              <http://www.rfc-editor.org/info/rfc6282>.\n\
    \   [RFC6550]  Winter, T., Ed., Thubert, P., Ed., Brandt, A., Hui, J.,\n     \
    \         Kelsey, R., Levis, P., Pister, K., Struik, R., Vasseur,\n          \
    \    JP., and R. Alexander, \"RPL: IPv6 Routing Protocol for\n              Low-Power\
    \ and Lossy Networks\", RFC 6550,\n              DOI 10.17487/RFC6550, March 2012,\n\
    \              <http://www.rfc-editor.org/info/rfc6550>.\n   [RFC6552]  Thubert,\
    \ P., Ed., \"Objective Function Zero for the Routing\n              Protocol for\
    \ Low-Power and Lossy Networks (RPL)\",\n              RFC 6552, DOI 10.17487/RFC6552,\
    \ March 2012,\n              <http://www.rfc-editor.org/info/rfc6552>.\n   [RFC6553]\
    \  Hui, J. and JP. Vasseur, \"The Routing Protocol for Low-\n              Power\
    \ and Lossy Networks (RPL) Option for Carrying RPL\n              Information\
    \ in Data-Plane Datagrams\", RFC 6553,\n              DOI 10.17487/RFC6553, March\
    \ 2012,\n              <http://www.rfc-editor.org/info/rfc6553>.\n   [RFC6554]\
    \  Hui, J., Vasseur, JP., Culler, D., and V. Manral, \"An IPv6\n             \
    \ Routing Header for Source Routes with the Routing Protocol\n              for\
    \ Low-Power and Lossy Networks (RPL)\", RFC 6554,\n              DOI 10.17487/RFC6554,\
    \ March 2012,\n              <http://www.rfc-editor.org/info/rfc6554>.\n   [RFC8025]\
    \  Thubert, P., Ed. and R. Cragie, \"IPv6 over Low-Power\n              Wireless\
    \ Personal Area Network (6LoWPAN) Paging Dispatch\",\n              RFC 8025,\
    \ DOI 10.17487/RFC8025, November 2016,\n              <http://www.rfc-editor.org/info/rfc8025>.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [FORWARD-FRAG]\n              Thubert, P.,\
    \ Ed. and J. Hui, \"LLN Fragment Forwarding and\n              Recovery\", Work\
    \ in Progress, draft-thubert-6lo-forwarding-\n              fragments-05, April\
    \ 2017.\n   [IPv6-ARCH]\n              Thubert, P., Ed., \"An Architecture for\
    \ IPv6 over the TSCH\n              mode of IEEE 802.15.4\", Work in Progress,\n\
    \              draft-ietf-6tisch-architecture-11, January 2017.\n   [RFC6775]\
    \  Shelby, Z., Ed., Chakrabarti, S., Nordmark, E., and C.\n              Bormann,\
    \ \"Neighbor Discovery Optimization for IPv6 over\n              Low-Power Wireless\
    \ Personal Area Networks (6LoWPANs)\",\n              RFC 6775, DOI 10.17487/RFC6775,\
    \ November 2012,\n              <http://www.rfc-editor.org/info/rfc6775>.\n  \
    \ [RFC7102]  Vasseur, JP., \"Terms Used in Routing for Low-Power and\n       \
    \       Lossy Networks\", RFC 7102, DOI 10.17487/RFC7102, January\n          \
    \    2014, <http://www.rfc-editor.org/info/rfc7102>.\n   [RFC7228]  Bormann, C.,\
    \ Ersue, M., and A. Keranen, \"Terminology for\n              Constrained-Node\
    \ Networks\", RFC 7228,\n              DOI 10.17487/RFC7228, May 2014,\n     \
    \         <http://www.rfc-editor.org/info/rfc7228>.\n   [RFC7554]  Watteyne, T.,\
    \ Ed., Palattella, M., and L. Grieco, \"Using\n              IEEE 802.15.4e Time-Slotted\
    \ Channel Hopping (TSCH) in the\n              Internet of Things (IoT): Problem\
    \ Statement\", RFC 7554,\n              DOI 10.17487/RFC7554, May 2015,\n    \
    \          <http://www.rfc-editor.org/info/rfc7554>.\n   [RPL-INFO] Robles, M.,\
    \ Richardson, M., and P. Thubert, \"When to use\n              RFC 6553, 6554\
    \ and IPv6-in-IPv6\", Work in Progress,\n              draft-ietf-roll-useofrplinfo-14,\
    \ April 2017.\n"
- title: Appendix A.  Examples
  contents:
  - 'Appendix A.  Examples

    '
- title: A.1.  Examples Compressing the RPI
  contents:
  - "A.1.  Examples Compressing the RPI\n   The example in Figure 15 illustrates the\
    \ 6LoRH compression of a\n   classical packet in Storing mode in all directions,\
    \ as well as in\n   Non-Storing mode for a packet going up the DODAG following\
    \ the\n   default route to the root.  In this particular example, a\n   fragmentation\
    \ process takes place per RFC 4944 [RFC4944], and the\n   fragment headers must\
    \ be placed in Page 0 before switching to Page 1:\n   +-  ...  -+-  ...  -+-+\
    \ ... -+- ... +-+-+ ... -+-+-+-+-+-+-+-+-+-+...\n   |Frag type|Frag hdr |11110001|\
    \  RPI-  |IP-in-IP| LOWPAN_IPHC | ...\n   |RFC 4944 |RFC 4944 | Page 1 | 6LoRH\
    \  | 6LoRH  |             |\n   +-  ...  -+-  ...  -+-+ ... -+- ... +-+-+ ...\
    \ -+-+-+-+-+-+-+-+-+-+...\n                                                  \
    \ <-  RFC 6282  ->\n                                                    No RPL\
    \ artifact\n   +-  ...  -+-  ...  -+-+ ... -+-+ ... -+- ... +-+-+-+-+-+-+-+-+-+-+...\n\
    \   |Frag type|Frag hdr |\n   |RFC 4944 |RFC 4944 |  Payload (cont)\n   +-  ...\
    \  -+-  ...  -+-+ ... -+-+ ... -+- ... +-+-+-+-+-+-+-+-+-+-+...\n   +-  ...  -+-\
    \  ...  -+-+ ... -+-+ ... -+- ... +-+-+-+-+-+-+-+-+-+-+...\n   |Frag type|Frag\
    \ hdr |\n   |RFC 4944 |RFC 4944 |  Payload (cont)\n   +-  ...  -+-  ...  -+-+\
    \ ... -+-+ ... -+- ... +-+-+-+-+-+-+-+-+-+-+...\n               Figure 15: Example\
    \ Compressed Packet with RPI\n   In Storing mode, if the packet stays within the\
    \ RPL domain, then it\n   is possible to save the IP-in-IP encapsulation, in which\
    \ case, only\n   the RPI is compressed with a 6LoRH, as illustrated in Figure\
    \ 16 in\n   the case of a non-fragmented ICMP packet:\n   +- ...  -+-+- ... -+-+-+-+\
    \ ... -+-+-+-+ ... -+-+-+-+-+-+-+-+-+-+-+...\n   |11110001| RPI-6LoRH |  NH =\
    \ 0      | NH = 58  |  ICMP message ...\n   |Page 1  |  Type 5   | 6LOWPAN_IPHC\
    \ | (ICMP)   |  (no compression)\n   +- ...  -+-+- ... -+-+-+-+ ... -+-+-+-+ ...\
    \ -+-+-+-+-+-+-+-+-+-+-+...\n                         <-      RFC 6282       ->\n\
    \                             No RPL artifact\n          Figure 16: Example ICMP\
    \ Packet with RPI in Storing Mode\n   The format in Figure 16 is logically equivalent\
    \ to the uncompressed\n   format illustrated in Figure 17:\n   +-+-+-+- ... -+-+-+-+\
    \ ... -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+...\n   |  IPv6 Header  | Hop-by-Hop\
    \ |  RPI in       |  ICMP message ...\n   |  NH = 58      | Header     |  RPL\
    \ Option   |\n   +-+-+-+- ... -+-+-+-+ ... -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+...\n\
    \               Figure 17: Uncompressed ICMP Packet with RPI\n   For a UDP packet,\
    \ the transport header can be compressed with 6LoWPAN\n   HC [RFC6282] as illustrated\
    \ in Figure 18:\n   +-+ ... -+-+-...-+-+- ... -+-+-+-+ ... -+-+-+ ... -+-+-+-+-+...\n\
    \   |11110001| RPI-  | NH=1        |11110CPP| Compressed | UDP\n   |Page 1  |\
    \ 6LoRH | LOWPAN_IPHC | UDP    | UDP header | Payload\n   +-+ ... -+-+-...-+-+-\
    \ ... -+-+-+-+ ... -+-+-+ ... -+-+-+-+-+...\n                     <-         RFC\
    \ 6282              ->\n                                No RPL artifact\n    \
    \           Figure 18: Uncompressed ICMP Packet with RPI\n   If the packet is\
    \ received from the Internet in Storing mode, then the\n   root is supposed to\
    \ encapsulate the packet to insert the RPI.  The\n   resulting format would be\
    \ as represented in Figure 19:\n +-+ ... -+-+-...-+-+-- ... -+-+-+-+- ... -+-+\
    \ ... -+-+-+ ... -+-+-+...\n |11110001| RPI-  | IP-in-IP | NH=1        |11110CPP|\
    \ Compressed | UDP\n |Page 1  | 6LoRH |  6LoRH   | LOWPAN_IPHC | UDP    | UDP\
    \ header | Payld\n +-+ ... -+-+-...-+-+-- ... -+-+-+-+- ... -+-+ ... -+-+-+ ...\
    \ -+-+-+...\n                              <-         RFC 6282              ->\n\
    \                                         No RPL artifact\n            Figure\
    \ 19: RPI Inserted by the Root in Storing Mode\n"
- title: A.2.  Example of a Downward Packet in Non-Storing Mode
  contents:
  - "A.2.  Example of a Downward Packet in Non-Storing Mode\n   The example illustrated\
    \ in Figure 20 is a classical packet in Non-\n   Storing mode for a packet going\
    \ down the DODAG following a source-\n   routed path from the root.  Say that\
    \ we have four forwarding hops to\n   reach a destination.  In the uncompressed\
    \ form, when the root\n   generates the packet, the last 3 hops are encoded in\
    \ a Routing Header\n   Type 3 (SRH) and the first hop is the destination of the\
    \ packet.  The\n   intermediate hops perform a swap; the hop count indicates the\
    \ current\n   active hop as defined in RFC 2460 [RFC2460] and RFC 6554 [RFC6554].\n\
    \   When compressed with this specification, the 4 hops are encoded in\n   SRH-6LoRH\
    \ when the root generates the packet, and the final\n   destination is left in\
    \ the LOWPAN_IPHC.  There is no swap; the\n   forwarding node that corresponds\
    \ to the first entry effectively\n   consumes it when forwarding, which means\
    \ that the size of the encoded\n   packet decreases and that the hop information\
    \ is lost.\n   If the last hop in an SRH-6LoRH is not the final destination, then\
    \ it\n   removes the SRH-6LoRH before forwarding.\n   In the particular example\
    \ illustrated in Figure 20, all addresses in\n   the DODAG are assigned from the\
    \ same /112 prefix and the last 2\n   octets encoding an identifier such as an\
    \ IEEE 802.15.4 short address.\n   In that case, all addresses can be compressed\
    \ to 2 octets, using the\n   root address as reference.  There will be one SRH_6LoRH\
    \ header with,\n   in this example, three compressed addresses:\n +-+ ... -+-+\
    \ ... +-+- ... -+-+- ... +-+-+-+ ... +-+-+ ... -+ ... +-...\n |11110001|SRH-6LoRH|\
    \ RPI-  | IP-in-IP | NH=1      |11110CPP| UDP | UDP\n |Page 1  |Type1 S=2| 6LoRH\
    \ |  6LoRH   |LOWPAN_IPHC| UDP    | hdr |Payld\n +-+ ... -+-+ ... +-+- ... -+-+--\
    \ ... -+-+-+ ... +-+-+ ... -+ ... +-...\n            <-8bytes->              \
    \    <-        RFC 6282      ->\n                                            \
    \    No RPL artifact\n               Figure 20: Example Compressed Packet with\
    \ SRH\n   One may note that the RPI is provided.  This is because the address\n\
    \   of the root that is the source of the IP-in-IP header is elided and\n   inferred\
    \ from the RPLInstanceID in the RPI.  Once found from a local\n   context, that\
    \ address is used as a Compression Reference to expand\n   addresses in the SRH-6LoRH.\n\
    \   With the RPL specifications available at the time of writing, the\n   root\
    \ is the only node that may incorporate an SRH in an IP packet.\n   When the root\
    \ forwards a packet that it did not generate, it has to\n   encapsulate the packet\
    \ with IP-in-IP.\n   But, if the root generates the packet towards a node in its\
    \ DODAG,\n   then it should avoid the extra IP-in-IP as illustrated in Figure\
    \ 21:\n   +- ...  -+-+-+ ... +-+-+-+ ... -+-+-+-+-+-+-+-++-+- ... -+-+-+-+-+...\n\
    \   |11110001| SRH-6LoRH | NH=1       | 11110CPP  | Compressed | UDP\n   |Page\
    \ 1  | Type1 S=3 | LOWPAN_IPHC| LOWPAN-NHC| UDP header | Payload\n   +- ...  -+-+-+\
    \ ... +-+-+-+ ... -+-+-+-+-+-+-+-++-+- ... -+-+-+-+-+...\n                   \
    \                       <-        RFC 6282        ->\n        Figure 21: Compressed\
    \ SRH 4*2bytes Entries Sourced by Root\n   Note: The RPI is not represented, though\
    \ RPL [RFC6550] generally\n   expects it.  In this particular case, since the\
    \ Compression Reference\n   for the SRH-6LoRH is the source address in the LOWPAN_IPHC,\
    \ and the\n   routing is strict along the source route path, the RPI does not\n\
    \   appear to be absolutely necessary.\n   In Figure 21, all the nodes along the\
    \ source route path share the\n   same /112 prefix.  This is typical of IPv6 addresses\
    \ derived from an\n   IEEE802.15.4 short address, as long as all the nodes share\
    \ the same\n   PAN-ID.  In that case, a Type 1 SRH-6LoRH header can be used for\n\
    \   encoding.  The IPv6 address of the root is taken as reference, and\n   only\
    \ the last 2 octets of the address of the intermediate hops are\n   encoded. \
    \ The Size of 3 indicates 4 hops, resulting in an SRH-6LoRH\n   of 10 bytes.\n"
- title: A.3.  Example of SRH-6LoRH Life Cycle
  contents:
  - "A.3.  Example of SRH-6LoRH Life Cycle\n   This section illustrates the operation\
    \ specified in Section 5.6 of\n   forwarding a packet with a compressed SRH along\
    \ an A->B->C->D source\n   route path.  The operation of popping addresses is\
    \ exemplified at\n   each hop.\n   Packet as received by node A\n   ----------------------------\n\
    \     Type 3 SRH-6LoRH Size = 0   AAAA AAAA AAAA AAAA\n     Type 1 SRH-6LoRH Size\
    \ = 0                  BBBB\n     Type 2 SRH-6LoRH Size = 1             CCCC CCCC\n\
    \                                           DDDD DDDD\n    Step 1: Popping BBBB,\
    \ the first entry of the next SRH-6LoRH\n    Step 2: If larger value (2 vs. 1),\
    \ the SRH-6LoRH is removed\n     Type 3 SRH-6LoRH Size = 0   AAAA AAAA AAAA AAAA\n\
    \     Type 2 SRH-6LoRH Size = 1             CCCC CCCC\n                      \
    \                     DDDD DDDD\n    Step 3: Recursion ended; coalescing BBBB\
    \ with the first entry\n     Type 3 SRH-6LoRH Size = 0   AAAA AAAA AAAA BBBB\n\
    \    Step 4: Routing based on next segment endpoint to B\n                   \
    \   Figure 22: Processing at Node A\n   Packet as received by node B\n   ----------------------------\n\
    \     Type 3 SRH-6LoRH Size = 0   AAAA AAAA AAAA BBBB\n     Type 2 SRH-6LoRH Size\
    \ = 1             CCCC CCCC\n                                           DDDD DDDD\n\
    \    Step 1: Popping CCCC CCCC, the first entry of the next SRH-6LoRH\n    Step\
    \ 2: Removing the first entry and decrementing the Size (by 1)\n     Type 3 SRH-6LoRH\
    \ Size = 0   AAAA AAAA AAAA BBBB\n     Type 2 SRH-6LoRH Size = 0             DDDD\
    \ DDDD\n    Step 3: Recursion ended; coalescing CCCC CCCC with the first entry\n\
    \     Type 3 SRH-6LoRH Size = 0   AAAA AAAA CCCC CCCC\n    Step 4: Routing based\
    \ on next segment endpoint to C\n                      Figure 23: Processing at\
    \ Node B\n   Packet as received by node C\n   ----------------------------\n \
    \    Type 3 SRH-6LoRH Size = 0   AAAA AAAA CCCC CCCC\n     Type 2 SRH-6LoRH Size\
    \ = 0             DDDD DDDD\n    Step 1: Popping DDDD DDDD, the first entry of\
    \ the next SRH-6LoRH\n    Step 2: The SRH-6LoRH is removed\n     Type 3 SRH-6LoRH\
    \ Size = 0   AAAA AAAA CCCC CCCC\n    Step 3: Recursion ended; coalescing DDDD\
    \ DDDDD with the first entry\n     Type 3 SRH-6LoRH Size = 0   AAAA AAAA DDDD\
    \ DDDD\n    Step 4: Routing based on next segment endpoint to D\n            \
    \          Figure 24: Processing at Node C\n   Packet as received by node D\n\
    \   ----------------------------\n     Type 3 SRH-6LoRH Size = 0   AAAA AAAA DDDD\
    \ DDDD\n    Step 1: The SRH-6LoRH is removed\n    Step 2: No more header; routing\
    \ based on inner IP header\n                      Figure 25: Processing at Node\
    \ D\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The authors wish to thank Tom Phinney, Thomas Watteyne,\
    \ Tengfei\n   Chang, Martin Turon, James Woodyatt, Samita Chakrabarti, Jonathan\n\
    \   Hui, Gabriel Montenegro, and Ralph Droms for constructive reviews to\n   the\
    \ design in the 6lo working group.  The overall discussion involved\n   participants\
    \ to the 6MAN, 6TiSCH, and ROLL WGs; thank you all.\n   Special thanks to Michael\
    \ Richardson and Ines Robles (the Chairs of\n   the ROLL WG), Brian Haberman (the\
    \ Internet Area AD), and Alvaro\n   Retana and Adrian Farrel (Routing Area ADs)\
    \ for driving this complex\n   effort across working groups and areas.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Pascal Thubert (editor)\n   Cisco Systems\n   Building\
    \ D - Regus\n   45 Allee des Ormes\n   BP1200\n   MOUGINS - Sophia Antipolis \
    \ 06254\n   France\n   Phone: +33 4 97 23 26 34\n   Email: pthubert@cisco.com\n\
    \   Carsten Bormann\n   Universitaet Bremen TZI\n   Postfach 330440\n   Bremen\
    \  D-28359\n   Germany\n   Phone: +49-421-218-63921\n   Email: cabo@tzi.org\n\
    \   Laurent Toutain\n   IMT Atlantique\n   2 rue de la Chataigneraie\n   CS 17607\n\
    \   Cesson-Sevigne Cedex  35576\n   France\n   Email: Laurent.Toutain@IMT-Atlantique.fr\n\
    \   Robert Cragie\n   ARM Ltd.\n   110 Fulbourn Road\n   Cambridge  CB1 9NJ\n\
    \   United Kingdom\n   Email: robert.cragie@arm.com\n"
