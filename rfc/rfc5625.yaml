- title: __initial_text__
  contents:
  - '                  DNS Proxy Implementation Guidelines

    '
- title: Abstract
  contents:
  - "Abstract\n   This document provides guidelines for the implementation of DNS\n\
    \   proxies, as found in broadband gateways and other similar network\n   devices.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet Best Current Practices\
    \ for the\n   Internet Community, and requests discussion and suggestions for\n\
    \   improvements.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\
    \ in effect on the date of\n   publication of this document (http://trustee.ietf.org/license-info).\n\
    \   Please review these documents carefully, as they describe your rights\n  \
    \ and restrictions with respect to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Terminology .....................................................3\n  \
    \ 3. The Transparency Principle ......................................3\n   4.\
    \ Protocol Conformance ............................................4\n      4.1.\
    \ Unexpected Flags and Data ..................................4\n      4.2. Label\
    \ Compression ..........................................4\n      4.3. Unknown\
    \ Resource Record Types ..............................4\n      4.4. Packet Size\
    \ Limits .........................................4\n           4.4.1. TCP Transport\
    \ .......................................5\n           4.4.2. Extension Mechanisms\
    \ for DNS (EDNS0) ................6\n           4.4.3. IP Fragmentation ....................................6\n\
    \      4.5. Secret Key Transaction Authentication for DNS (TSIG) .......7\n  \
    \ 5. DHCP's Interaction with DNS .....................................7\n    \
    \  5.1. Domain Name Server (DHCP Option 6) .........................7\n      5.2.\
    \ Domain Name (DHCP Option 15) ...............................8\n      5.3. DHCP\
    \ Leases ................................................8\n   6. Security Considerations\
    \ .........................................9\n      6.1. Forgery Resilience .........................................9\n\
    \      6.2. Interface Binding .........................................10\n  \
    \    6.3. Packet Filtering ..........................................10\n   7.\
    \ Acknowledgements ...............................................10\n   8. References\
    \ .....................................................11\n      8.1. Normative\
    \ References ......................................11\n      8.2. Informative\
    \ References ....................................12\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Research has found ([SAC035], [DOTSE]) that many commonly\
    \ used\n   broadband gateways (and similar devices) contain DNS proxies that are\n\
    \   incompatible in various ways with current DNS standards.\n   These proxies\
    \ are usually simple DNS forwarders, but typically do not\n   have any caching\
    \ capabilities.  The proxy serves as a convenient\n   default DNS resolver for\
    \ clients on the LAN, but relies on an\n   upstream resolver (e.g., at an ISP)\
    \ to perform recursive DNS lookups.\n   Note that to ensure full DNS protocol\
    \ interoperability it is\n   preferred that client stub resolvers should communicate\
    \ directly with\n   full-feature, upstream recursive resolvers wherever possible.\n\
    \   That notwithstanding, this document describes the incompatibilities\n   that\
    \ have been discovered and offers guidelines to implementors on\n   how to provide\
    \ better interoperability in those cases where the\n   client must use the broadband\
    \ gateway's DNS proxy.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
- title: 3.  The Transparency Principle
  contents:
  - "3.  The Transparency Principle\n   It is not considered practical for a simple\
    \ DNS proxy to implement\n   all current and future DNS features.\n   There are\
    \ several reasons why this is the case:\n   o  Broadband gateways usually have\
    \ limited hardware resources.\n   o  Firmware upgrade cycles are long, and many\
    \ users do not routinely\n      apply upgrades when they become available.\n \
    \  o  No one knows what those future DNS features will be or how they\n      might\
    \ be implemented.\n   o  Doing so would substantially complicate the configuration\
    \ user\n      interface (UI) of the device.\n   Furthermore, some modern DNS protocol\
    \ extensions (see, e.g., EDNS0\n   below) are intended to be used as \"hop-by-hop\"\
    \ mechanisms.  If the\n   DNS proxy is considered to be such a \"hop\" in the\
    \ resolution chain,\n   then for it to function correctly, it would need to be\
    \ fully\n   compliant with all such mechanisms.\n   [SAC035] shows that the more\
    \ actively a proxy participates in the DNS\n   protocol, the more likely it is\
    \ that it will somehow interfere with\n   the flow of messages between the DNS\
    \ client and the upstream\n   recursive resolvers.\n   The role of the proxy should\
    \ therefore be no more and no less than to\n   receive DNS requests from clients\
    \ on the LAN side, forward those\n   verbatim to one of the known upstream recursive\
    \ resolvers on the WAN\n   side, and ensure that the whole response is returned\
    \ verbatim to the\n   original client.\n   It is RECOMMENDED that proxies should\
    \ be as transparent as possible,\n   such that any \"hop-by-hop\" mechanisms or\
    \ newly introduced protocol\n   extensions operate as if the proxy were not there.\n\
    \   Except when required to enforce an active security or network policy\n   (such\
    \ as maintaining a pre-authentication \"walled garden\"), end-users\n   SHOULD\
    \ be able to send their DNS queries to specified upstream\n   resolvers, thereby\
    \ bypassing the proxy altogether.  In this case, the\n   gateway SHOULD NOT modify\
    \ the DNS request or response packets in any\n   way.\n"
- title: 4.  Protocol Conformance
  contents:
  - '4.  Protocol Conformance

    '
- title: 4.1.  Unexpected Flags and Data
  contents:
  - "4.1.  Unexpected Flags and Data\n   The Transparency Principle above, when combined\
    \ with Postel's\n   Robustness Principle [RFC0793], suggests that DNS proxies\
    \ should not\n   arbitrarily reject or otherwise drop requests or responses based\
    \ on\n   perceived non-compliance with standards.\n   For example, some proxies\
    \ have been observed to drop any packet\n   containing either the \"Authentic\
    \ Data\" (AD) or \"Checking Disabled\"\n   (CD) bits from DNSSEC [RFC4035].  This\
    \ may be because [RFC1035]\n   originally specified that these unused \"Z\" flag\
    \ bits \"MUST\" be zero.\n   However, these flag bits were always intended to\
    \ be reserved for\n   future use, so refusing to proxy any packet containing these\
    \ flags\n   (now that uses for those flags have indeed been defined) is not\n\
    \   appropriate.\n   Therefore, proxies MUST ignore any unknown DNS flags and\
    \ proxy those\n   packets as usual.\n"
- title: 4.2.  Label Compression
  contents:
  - "4.2.  Label Compression\n   Compression of labels as per Section 4.1.4 of [RFC1035]\
    \ is optional.\n   Proxies MUST forward packets regardless of the presence or\
    \ absence of\n   compressed labels therein.\n"
- title: 4.3.  Unknown Resource Record Types
  contents:
  - "4.3.  Unknown Resource Record Types\n   [RFC3597] requires that resolvers MUST\
    \ handle Resource Records (RRs)\n   of unknown type transparently.\n   All requests\
    \ and responses MUST be proxied regardless of the values\n   of the QTYPE and\
    \ QCLASS fields.\n   Similarly, all responses MUST be proxied regardless of the\
    \ values of\n   the TYPE and CLASS fields of any Resource Record therein.\n"
- title: 4.4.  Packet Size Limits
  contents:
  - "4.4.  Packet Size Limits\n   [RFC1035] specifies that the maximum size of the\
    \ DNS payload in a UDP\n   packet is 512 octets.  Where the required portions\
    \ of a response\n   would not fit inside that limit, the DNS server MUST set the\n\
    \   \"TrunCation\" (TC) bit in the DNS response header to indicate that\n   truncation\
    \ has occurred.  There are however two standard mechanisms\n   (described in Sections\
    \ 4.4.1 and 4.4.2) for transporting responses\n   larger than 512 octets.\n  \
    \ Many proxies have been observed to truncate all responses at 512\n   octets,\
    \ and others at a packet size related to the WAN MTU, in either\n   case doing\
    \ so without correctly setting the TC bit.\n   Other proxies have been observed\
    \ to remove the TC bit in server\n   responses that correctly had the TC bit set\
    \ by the server.\n   If a DNS response is truncated but the TC bit is not set,\
    \ then client\n   failures may result.  In particular, a naive DNS client library\
    \ might\n   suffer crashes due to reading beyond the end of the data actually\n\
    \   received.\n   Since UDP packets larger than 512 octets are now expected in\
    \ normal\n   operation, proxies SHOULD NOT truncate UDP packets that exceed that\n\
    \   size.  See Section 4.4.3 for recommendations for packet sizes\n   exceeding\
    \ the WAN MTU.\n   If a proxy must unilaterally truncate a response, then the\
    \ proxy MUST\n   set the TC bit.  Similarly, proxies MUST NOT remove the TC bit\
    \ from\n   responses.\n"
- title: 4.4.1.  TCP Transport
  contents:
  - "4.4.1.  TCP Transport\n   Should a UDP query fail because of truncation, the\
    \ standard fail-over\n   mechanism is to retry the query using TCP, as described\
    \ in Section\n   6.1.3.2 of [RFC1123].\n   Whilst TCP transport is not strictly\
    \ mandatory, it is supported by\n   the vast majority of stub resolvers and recursive\
    \ servers.  Lack of\n   support in the proxy prevents this fail-over mechanism\
    \ from working.\n   DNS proxies MUST therefore be prepared to receive and forward\
    \ queries\n   over TCP.\n   Note that it is unlikely that a client would send\
    \ a request over TCP\n   unless it had already received a truncated UDP response.\
    \  Some\n   \"smart\" proxies have been observed to first forward any request\n\
    \   received over TCP to an upstream resolver over UDP, only for the\n   response\
    \ to be truncated, causing the proxy to retry over TCP.  Such\n   behaviour increases\
    \ network traffic and causes delay in DNS\n   resolution since the initial UDP\
    \ request is doomed to fail.\n   Therefore, whenever a proxy receives a request\
    \ over TCP, the proxy\n   SHOULD forward the query over TCP and SHOULD NOT attempt\
    \ the same\n   query over UDP first.\n"
- title: 4.4.2.  Extension Mechanisms for DNS (EDNS0)
  contents:
  - "4.4.2.  Extension Mechanisms for DNS (EDNS0)\n   The \"Extension Mechanism for\
    \ DNS\" [RFC2671] was introduced to allow\n   the transport of larger DNS packets\
    \ over UDP and also to allow for\n   additional request and response flags.\n\
    \   A client may send an OPT Resource Record (OPT RR) in the Additional\n   Section\
    \ of a request to indicate that it supports a specific receive\n   buffer size.\
    \  The OPT RR also includes the \"DNSSEC OK\" (DO) flag used\n   by DNSSEC to\
    \ indicate that DNSSEC-related RRs should be returned to\n   the client.\n   However,\
    \ some proxies have been observed to either reject (with a\n   FORMERR response\
    \ code) or black-hole any packet containing an OPT RR.\n   As per Section 4.1,\
    \ proxies MUST NOT refuse to proxy such packets.\n"
- title: 4.4.3.  IP Fragmentation
  contents:
  - "4.4.3.  IP Fragmentation\n   Support for UDP packet sizes exceeding the WAN MTU\
    \ depends on the\n   gateway's algorithm for handling fragmented IP packets. \
    \ Several\n   methods are possible:\n   1.  Fragments are dropped.\n   2.  Fragments\
    \ are forwarded individually as they're received.\n   3.  Complete packets are\
    \ reassembled on the gateway and then re-\n       fragmented (if necessary) as\
    \ they're forwarded to the client.\n   Method 1 above will cause compatibility\
    \ problems with EDNS0 unless\n   the DNS client is configured to advertise an\
    \ EDNS0 buffer size\n   limited to the WAN MTU less the size of the IP header.\
    \  Note that RFC\n   2671 does recommend that the path MTU should be taken into\
    \ account\n   when using EDNS0.\n   Also, whilst the EDNS0 specification allows\
    \ for a buffer size of up\n   to 65535 octets, most common DNS server implementations\
    \ do not\n   support a buffer size above 4096 octets.\n   Therefore (irrespective\
    \ of which of the above methods is in use),\n   proxies SHOULD be capable of forwarding\
    \ UDP packets up to a payload\n   size of at least 4096 octets.\n   NB: in theory,\
    \ IP fragmentation may also occur if the LAN MTU is\n   smaller than the WAN MTU,\
    \ although the author has not observed such a\n   configuration in use on any\
    \ residential broadband service.\n"
- title: 4.5.  Secret Key Transaction Authentication for DNS (TSIG)
  contents:
  - "4.5.  Secret Key Transaction Authentication for DNS (TSIG)\n   [RFC2845] defines\
    \ TSIG, which is a mechanism for authenticating DNS\n   requests and responses\
    \ at the packet level.\n   Any modifications made to the DNS portions of a TSIG-signed\
    \ query or\n   response packet (with the exception of the Query ID) will cause\
    \ a\n   TSIG authentication failure.\n   DNS proxies MUST implement Section 4.7\
    \ of [RFC2845] and either\n   forward packets unchanged (as recommended above)\
    \ or fully implement\n   TSIG.\n   As per Section 4.3, DNS proxies MUST be capable\
    \ of proxying packets\n   containing TKEY [RFC2930] Resource Records.\n   NB:\
    \ any DNS proxy (such as those commonly found in WiFi hotspot\n   \"walled gardens\"\
    ) that transparently intercepts all DNS queries and\n   that returns unsigned\
    \ responses to signed queries, will also cause\n   TSIG authentication failures.\n"
- title: 5.  DHCP's Interaction with DNS
  contents:
  - "5.  DHCP's Interaction with DNS\n   Whilst this document is primarily about DNS\
    \ proxies, most consumers\n   rely on DHCP [RFC2131] to obtain network configuration\
    \ settings.\n   Such settings include the client machine's IP address, subnet\
    \ mask,\n   and default gateway, but also include DNS-related settings.\n   It\
    \ is therefore appropriate to examine how DHCP affects client DNS\n   configuration.\n"
- title: 5.1.  Domain Name Server (DHCP Option 6)
  contents:
  - "5.1.  Domain Name Server (DHCP Option 6)\n   Most gateways default to supplying\
    \ their own IP address in the DHCP\n   \"Domain Name Server\" option [RFC2132].\
    \  The net result is that\n   without explicit re-configuration many DNS clients\
    \ will, by default,\n   send queries to the gateway's DNS proxy.  This is understandable\n\
    \   behaviour given that the correct upstream settings are not usually\n   known\
    \ at boot time.\n   Most gateways learn their own DNS settings via values supplied\
    \ by an\n   ISP via DHCP or PPP over the WAN interface.  However, whilst many\n\
    \   gateways do allow the device administrator to override those values,\n   some\
    \ gateways only use those supplied values to affect the proxy's\n   own forwarding\
    \ function, and do not offer these values via DHCP.\n   When using such a device,\
    \ the only way to avoid using the DNS proxy\n   is to hard-code the required values\
    \ in the client operating system.\n   This may be acceptable for a desktop system\
    \ but it is inappropriate\n   for mobile devices that are regularly used on many\
    \ different\n   networks.\n   As per Section 3, end-users SHOULD be able to send\
    \ their DNS queries\n   directly to specified upstream resolvers, ideally without\
    \ hard-coding\n   those settings in their stub resolver.\n   It is therefore RECOMMENDED\
    \ that gateways SHOULD support device-\n   administrator configuration of values\
    \ for the \"Domain Name Server\"\n   DHCP option.\n"
- title: 5.2.  Domain Name (DHCP Option 15)
  contents:
  - "5.2.  Domain Name (DHCP Option 15)\n   A significant amount of traffic to the\
    \ DNS Root Name Servers is for\n   invalid top-level domain names, and some of\
    \ that traffic can be\n   attributed to particular equipment vendors whose firmware\
    \ defaults\n   this DHCP option to specific values.\n   Since no standard exists\
    \ for a \"local\" scoped domain name suffix, it\n   is RECOMMENDED that the default\
    \ value for this option SHOULD be\n   empty, and that this option MUST NOT be\
    \ sent to clients when no value\n   is configured.\n"
- title: 5.3.  DHCP Leases
  contents:
  - "5.3.  DHCP Leases\n   It is noted that some DHCP servers in broadband gateways\
    \ offer, by\n   default, their own IP address for the \"Domain Name Server\" option\
    \ (as\n   described above) but then automatically start offering the upstream\n\
    \   servers' addresses once they've been learnt over the WAN interface.\n   In\
    \ general, this behaviour is highly desirable, but the effect for\n   the end-user\
    \ is that the settings used depend on whether the DHCP\n   lease was obtained\
    \ before or after the WAN link was established.\n   If the DHCP lease is obtained\
    \ whilst the WAN link is down, then the\n   DHCP client (and hence the DNS client)\
    \ will not receive the correct\n   values until the DHCP lease is renewed.\n \
    \  Whilst no specific recommendations are given here, vendors may wish\n   to\
    \ give consideration to the length of DHCP leases and to whether\n   some mechanism\
    \ for forcing a DHCP lease renewal might be appropriate.\n   Another possibility\
    \ is that the learnt upstream values might be\n   persisted in non-volatile memory\
    \ such that on reboot the same values\n   can be automatically offered via DHCP.\
    \  However, this does run the\n   risk that incorrect values are initially offered\
    \ if the device is\n   moved or connected to another ISP.\n   Alternatively, the\
    \ DHCP server might only issue very short (i.e., 60\n   second) leases while the\
    \ WAN link is down, only reverting to more\n   typical lease lengths once the\
    \ WAN link is up and the upstream DNS\n   servers are known.  Indeed, with such\
    \ a configuration it may be\n   possible to avoid the need to implement a DNS\
    \ proxy function in the\n   broadband gateway at all.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   This document introduces no new protocols.  However,\
    \ there are some\n   security-related recommendations for vendors that are listed\
    \ here.\n"
- title: 6.1.  Forgery Resilience
  contents:
  - "6.1.  Forgery Resilience\n   Whilst DNS proxies are not usually full-feature\
    \ resolvers, they\n   nevertheless share some characteristics with them.\n   Notwithstanding\
    \ the recommendations above about transparency, many\n   DNS proxies are observed\
    \ to pick a new Query ID for outbound requests\n   to ensure that responses are\
    \ directed to the correct client.\n   NB: changing the Query ID is acceptable\
    \ and compatible with proxying\n   TSIG-signed packets since the TSIG signature\
    \ calculation is based on\n   the original message ID, which is carried in the\
    \ TSIG RR.\n   It has been standard guidance for many years that each DNS query\n\
    \   should use a randomly generated Query ID.  However, many proxies have\n  \
    \ been observed picking sequential Query IDs for successive requests.\n   It is\
    \ strongly RECOMMENDED that DNS proxies follow the relevant\n   recommendations\
    \ in [RFC5452], particularly those in Section 9.2\n   relating to randomisation\
    \ of Query IDs and source ports.  This also\n   applies to source port selection\
    \ within any NAT function.\n   If a DNS proxy is running on a broadband gateway\
    \ with NAT that is\n   compliant with [RFC4787], then it SHOULD also follow the\n\
    \   recommendations in Section 10 of [RFC5452] concerning how long DNS\n   state\
    \ is kept.\n"
- title: 6.2.  Interface Binding
  contents:
  - "6.2.  Interface Binding\n   Some gateways have been observed to have their DNS\
    \ proxy listening on\n   both internal (LAN) and external (WAN) interfaces.  In\
    \ this\n   configuration, it is possible for the proxy to be used to mount\n \
    \  reflector attacks as described in [RFC5358].\n   The DNS proxy in a gateway\
    \ SHOULD NOT, by default, be accessible from\n   the WAN interfaces of the device.\n"
- title: 6.3.  Packet Filtering
  contents:
  - "6.3.  Packet Filtering\n   The Transparency and Robustness Principles are not\
    \ entirely\n   compatible with the deep packet-inspection features of security\n\
    \   appliances such as firewalls, which are intended to protect systems\n   on\
    \ the inside of a network from rogue traffic.\n   However, a clear distinction\
    \ may be made between traffic that is\n   intrinsically malformed and that which\
    \ merely contains unexpected\n   data.\n   Examples of malformed packets that\
    \ MAY be dropped include:\n   o  invalid compression pointers (i.e., those that\
    \ point outside of\n      the current packet or that might cause a parsing loop)\n\
    \   o  incorrect counts for the Question, Answer, Authority, and\n      Additional\
    \ Sections (although care should be taken where\n      truncation is a possibility)\n\
    \   Dropped packets will cause the client to repeatedly retransmit the\n   original\
    \ request, with the client only detecting the error after\n   several retransmit\
    \ intervals.\n   In these circumstances, proxies SHOULD synthesise a suitable\
    \ DNS\n   error response to the client (i.e., SERVFAIL) instead of dropping the\n\
    \   packet completely.  This will allow the client to detect the error\n   immediately.\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   The author would particularly like to acknowledge the\
    \ assistance of\n   Lisa Phifer of Core Competence.  In addition, the author is\
    \ grateful\n   for the feedback from the members of the DNSEXT Working Group.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC0793]  Postel, J., \"Transmission Control\
    \ Protocol\", STD 7,\n              RFC 793, September 1981.\n   [RFC1035]  Mockapetris,\
    \ P., \"Domain names - implementation and\n              specification\", STD\
    \ 13, RFC 1035, November 1987.\n   [RFC1123]  Braden, R., \"Requirements for Internet\
    \ Hosts - Application\n              and Support\", STD 3, RFC 1123, October 1989.\n\
    \   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n        \
    \      Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2131]  Droms,\
    \ R., \"Dynamic Host Configuration Protocol\",\n              RFC 2131, March\
    \ 1997.\n   [RFC2132]  Alexander, S. and R. Droms, \"DHCP Options and BOOTP Vendor\n\
    \              Extensions\", RFC 2132, March 1997.\n   [RFC2671]  Vixie, P., \"\
    Extension Mechanisms for DNS (EDNS0)\",\n              RFC 2671, August 1999.\n\
    \   [RFC2845]  Vixie, P., Gudmundsson, O., Eastlake, D., and B.\n            \
    \  Wellington, \"Secret Key Transaction Authentication for DNS\n             \
    \ (TSIG)\", RFC 2845, May 2000.\n   [RFC2930]  Eastlake, D., \"Secret Key Establishment\
    \ for DNS (TKEY\n              RR)\", RFC 2930, September 2000.\n   [RFC3597]\
    \  Gustafsson, A., \"Handling of Unknown DNS Resource Record\n              (RR)\
    \ Types\", RFC 3597, September 2003.\n   [RFC4035]  Arends, R., Austein, R., Larson,\
    \ M., Massey, D., and S.\n              Rose, \"Protocol Modifications for the\
    \ DNS Security\n              Extensions\", RFC 4035, March 2005.\n   [RFC4787]\
    \  Audet, F. and C. Jennings, \"Network Address Translation\n              (NAT)\
    \ Behavioral Requirements for Unicast UDP\", BCP 127,\n              RFC 4787,\
    \ January 2007.\n   [RFC5358]  Damas, J. and F. Neves, \"Preventing Use of Recursive\n\
    \              Nameservers in Reflector Attacks\", BCP 140, RFC 5358,\n      \
    \        October 2008.\n   [RFC5452]  Hubert, A. and R. van Mook, \"Measures for\
    \ Making DNS More\n              Resilient against Forged Answers\", RFC 5452,\
    \ January 2009.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [DOTSE]    Ahlund and Wallstrom, \"DNSSEC Tests\
    \ of Consumer Broadband\n              Routers\", February 2008,\n           \
    \   <http://www.iis.se/docs/Routertester_en.pdf>.\n   [SAC035]   Bellis, R. and\
    \ L. Phifer, \"Test Report: DNSSEC Impact on\n              Broadband Routers\
    \ and Firewalls\", September 2008,\n              <http://www.icann.org/committees/security/sac035.pdf>.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Ray Bellis\n   Nominet UK\n   Edmund Halley Road\n   Oxford\
    \  OX4 4DQ\n   United Kingdom\n   Phone: +44 1865 332211\n   EMail: ray.bellis@nominet.org.uk\n\
    \   URI:   http://www.nominet.org.uk/\n"
