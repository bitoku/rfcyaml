- contents:
  - "                The Early Session Disposition Type for\n                 the
    Session Initiation Protocol (SIP)\n"
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document defines a new disposition type (early-session) for
    the\n   Content-Disposition header field in the Session Initiation Protocol\n
    \  (SIP).  The treatment of \"early-session\" bodies is similar to the\n   treatment
    of \"session\" bodies.  That is, they follow the offer/answer\n   model.  Their
    only difference is that session descriptions whose\n   disposition type is \"early-session\"
    are used to establish early media\n   sessions within early dialogs, as opposed
    to regular sessions within\n   regular dialogs.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .
    . . . . . .  2\n   2.  Terminology  . . . . . . . . . . . . . . . . . . . . .
    . . . .  2\n   3.  Issues Related to Early Media Session Establishment  . . .
    . .  2\n   4.  The Early Session Disposition Type . . . . . . . . . . . . . .
    \ 4\n   5.  Preconditions  . . . . . . . . . . . . . . . . . . . . . . . .  4\n
    \  6.  Option tag . . . . . . . . . . . . . . . . . . . . . . . . . .  5\n   7.
    \ Example  . . . . . . . . . . . . . . . . . . . . . . . . . . .  5\n   8.  Security
    Considerations  . . . . . . . . . . . . . . . . . . .  7\n   9.  IANA Considerations
    \ . . . . . . . . . . . . . . . . . . . . .  8\n   10. Acknowledgements . . .
    . . . . . . . . . . . . . . . . . . . .  9\n   11. References . . . . . . . .
    . . . . . . . . . . . . . . . . . .  9\n       11.1. Normative References . .
    . . . . . . . . . . . . . . . .  9\n       11.2. Informational References . .
    . . . . . . . . . . . . . .  9\n       Author's Address . . . . . . . . . . .
    . . . . . . . . . . . . 10\n       Full Copyright Statement . . . . . . . . .
    . . . . . . . . . . 11\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Early media refers to media (e.g., audio and video) that
    is exchanged\n   before a particular session is accepted by the called user.  Within
    a\n   dialog, early media occurs from the moment the initial INVITE is sent\n
    \  until the User Agent Server (UAS) generates a final response.  It may\n   be
    unidirectional or bidirectional, and can be generated by the\n   caller, the callee,
    or both.  Typical examples of early media\n   generated by the callee are ringing
    tone and announcements (e.g.,\n   queuing status).  Early media generated by the
    caller typically\n   consists of voice commands or dual tone multi-frequency (DTMF)
    tones\n   to drive interactive voice response (IVR) systems.\n   The basic SIP
    specification (RFC 3261 [2]) only supports very simple\n   early media mechanisms.
    \ These simple mechanisms have a number of\n   problems related to forking and
    security, and do not satisfy the\n   requirements of most applications.  RFC 3960
    [8] goes beyond the\n   mechanisms defined in RFC 3261 [2] and describes two models
    of early\n   media using SIP: the gateway model and the application server model.\n
    \  Although both early media models described in RFC 3960 [8] are\n   superior
    to the one specified in RFC 3261 [2], the gateway model\n   still presents a set
    of issues.  In particular, the gateway model\n   does not work well with forking.
    \ Nevertheless, the gateway model is\n   needed because some SIP entities (in
    particular, some gateways)\n   cannot implement the application server model.\n
    \  The application server model addresses some of the issues present in\n   the
    gateway model.  This model uses the early-session disposition\n   type specified
    in this document.\n"
  title: 1.  Introduction
- contents:
  - "2.  Terminology\n   In this document, the key words \"MUST\", \"MUST NOT\", \"REQUIRED\",\n
    \  \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT\n
    \  RECOMMENDED\", \"MAY\", and \"OPTIONAL\" are to be interpreted as\n   described
    in BCP 14, RFC 2119 [1] and indicate requirement levels for\n   compliant implementations.\n"
  title: 2.  Terminology
- contents:
  - "3.  Issues Related to Early Media Session Establishment\n   Traditionally, early
    media sessions have been established in the same\n   way as regular sessions.
    \ That is, using an offer/answer exchange\n   where the disposition type of the
    session descriptions is \"session\".\n   Application servers perform an offer/answer
    exchange with the User\n   Agent Client (UAC) to exchange early media exclusively,
    while UASs\n   use the same offer/answer exchange, first to exchange early media,\n
    \  and once the regular dialog is established, to exchange regular\n   media.
    \ This way of establishing early media sessions is known as the\n   gateway model
    [8], which presents some issues related to forking and\n   security.  These issues
    exist when this model is used by either an\n   application server or by a UAS.\n
    \  Application servers may not be able to generate an answer for an\n   offer
    received in the INVITE.  The UAC created the offer for the UAS,\n   and so, it
    may have applied end-to-end encryption or have included\n   information (e.g.,
    related to key management) that the application\n   server is not supposed to
    use.  Therefore, application servers need a\n   means to perform an offer/answer
    exchange with the UAC that is\n   independent from the offer/answer exchange between
    both UAs.\n   UASs using the offer/answer exchange that will carry regular media\n
    \  for sending and receiving early media can cause media clipping, as\n   described
    in Section 2.1.1 of [8].  Some UACs cannot receive early\n   media from different
    UASs at the same time.  So, when an INVITE forks\n   and several UASs start sending
    early media, the UAC mutes all the\n   UASs but one (which is usually chosen at
    random).  If the UAS that\n   accepts the INVITE (i.e., sends a 200 OK) was muted,
    a new\n   offer/answer exchange is needed to unmute it.  This usually causes\n
    \  media clipping.  Therefore, UASs need a means of performing an\n   offer/answer
    exchange with the UAC to exchange early media that is\n   independent from the
    offer/answer exchanged used to exchange regular\n   media.\n   A potential solution
    to this need would be to establish a different\n   dialog using a globally routable
    URI to perform an independent\n   offer/answer exchange.  This dialog would be
    labelled as a dialog for\n   early media and would be somehow related to the original
    dialog at\n   the UAC.  However, performing all the offer/answer exchanges within\n
    \  the original dialog has many advantages:\n   o  It is simpler.\n   o  It does
    not have synchronization problems, because all the early\n      dialogs are terminated
    when the session is accepted.\n   o  It does not require globally routable URIs.\n
    \  o  It does not introduce service interaction issues related to\n      services
    that may be wrongly applied to the new dialog.\n   o  It makes firewall management
    easier.\n   This way of performing offer/answer exchanges for early media is\n
    \  referred to as the application server model [8].  This model uses the\n   early-session
    disposition type defined in the following section.\n"
  title: 3.  Issues Related to Early Media Session Establishment
- contents:
  - "4.  The Early Session Disposition Type\n   We define a new disposition type for
    the Content-Disposition header\n   field: early-session.  User agents MUST use
    early-session bodies to\n   establish early media sessions in the same way as
    they use session\n   bodies to establish regular sessions, as described in RFCs
    3261 [2]\n   and 3264 [3].  Particularly, early-session bodies MUST follow the\n
    \  offer/answer model and MAY appear in the same messages as session\n   bodies
    do with the exceptions of 2xx responses for an INVITE and\n   ACKs.  Nevertheless,
    it is NOT RECOMMENDED that early offers in\n   INVITEs be included because they
    can fork, and the UAC could receive\n   multiple early answers establishing early
    media streams at roughly\n   the same time.  Also, the use of the same transport
    address (IP\n   address plus port) in a session body and in an early-session body
    is\n   NOT RECOMMENDED.  Using different transport addresses (e.g.,\n   different
    ports) to receive early and regular media makes it easy to\n   detect the start
    of the regular media.\n   If a User Agent (UA) needs to refuse an early-session
    offer, it MUST\n   do so by refusing all the media streams in it.  When SDP [7]
    is used,\n   this is done by setting the port number of all the media streams
    to\n   zero.\n      This is the same mechanism that UACs use to refuse regular
    offers\n      that arrive in a response to an empty INVITE.\n   An early media
    session established using early-session bodies MUST be\n   terminated when its
    corresponding early dialog is terminated or it\n   transitions to a regular dialog.\n
    \  It is RECOMMENDED that UAs generating regular and early session\n   descriptions
    use, as long as it is possible, the same codecs in both.\n   This way, the remote
    UA does not need to change codecs when the early\n   session transitions to a
    regular session.\n"
  title: 4.  The Early Session Disposition Type
- contents:
  - "5.  Preconditions\n   RFC 3312 [4] defines a framework for preconditions for
    SDP.  Early-\n   sessions MAY contain preconditions, which are treated in the
    same way\n   as preconditions in regular sessions.  That is, the UAs do not\n
    \  exchange media, and the called user is not alerted until the\n   preconditions
    are met.\n"
  title: 5.  Preconditions
- contents:
  - "6.  Option Tag\n   We define an option tag to be used in Require and Supported
    header\n   fields: early-session.  A UA adding the early-session option tag to
    a\n   message indicates that it understands the early-session disposition\n   type.\n"
  title: 6.  Option Tag
- contents:
  - "7.  Example\n   Figure 1 shows the message flow between two UAs.  INVITE (1)
    has an\n   early-session option tag in its Supported header field and the body\n
    \  shown in Figure 2.  The UAS sends back a response with two body\n   parts,
    as shown in Figure 3: one of disposition type session and the\n   other early-session.
    \ The session body part is the answer to the\n   offer in the INVITE.  The early-session
    body part is an offer to\n   establish an early media session.  When the UAC receives
    the 183\n   (Session Progress) response, it sends the answer to the early-session\n
    \  offer in a PRACK, as shown in Figure 4.  This early media session is\n   terminated
    when the early dialog transitions to a regular dialog.\n   That is, when the UAS
    sends the (5) 200 (OK) response for the INVITE.\n      A                           B\n
    \     |                           |\n      |--------(1) INVITE-------->|\n      |
    \           offer          |\n      |                           |\n      |<--(2)
    Session Progress----|\n      |       early-offer         |\n      |       answer
    \             |\n      |                           |\n      |---------(3) PRACK-------->|\n
    \     |             early-answer  |\n      |                           |\n      |<--------(4)
    200 OK--------|\n      |                           |\n      |  *                     *
    \ |\n      | ************************* |\n      |*       Early Media       *|\n
    \     | ************************* |\n      |  *                     *  |\n      |
    \                          |\n      |<--------(5) 200 OK--------|\n      |                           |\n
    \     |----------(6) ACK--------->|\n      |                           |\n          Figure
    1: Message flow\n   Content-Type: application/sdp\n   Content-Disposition: session\n
    \  v=0\n   o=alice 2890844730 2890844731 IN IP4 host.example.com\n   s=\n   c=IN
    IP4 192.0.2.1\n   t=0 0\n   m=audio 20000 RTP/AVP 0\n          Figure 2: Offer\n
    \  Content-Type: multipart/mixed; boundary=\"boundary1\"\n   Content-Length: 401\n
    \  --boundary1\n   Content-Type: application/sdp\n   Content-Disposition: session\n
    \  v=0\n   o=Bob 2890844725 2890844725 IN IP4 host.example.org\n   s=\n   c=IN
    IP4 192.0.2.2\n   t=0 0\n   m=audio 30000 RTP/AVP 0\n   --boundary1\n   Content-Type:
    application/sdp\n   Content-Disposition: early-session\n   v=0\n   o=Bob 2890844714
    2890844714 IN IP4 host.example.org\n   s=\n   c=IN IP4 192.0.2.2\n   t=0 0\n   m=audio
    30002 RTP/AVP 0\n   --boundary1--\n          Figure 3: Early offer and answer\n
    \  Content-Type: application/sdp\n   Content-Disposition: early-session\n   v=0\n
    \  o=alice 2890844717 2890844717 IN IP4 host.example.com\n   s=\n   c=IN IP4 192.0.2.1\n
    \  t=0 0\n   m=audio 20002 RTP/AVP 0\n          Figure 4: Early answer\n"
  title: 7.  Example
- contents:
  - "8.  Security Considerations\n   The security implications of using early-session
    bodies in SIP are\n   the same as when using session bodies; they are part of
    the\n   offer/answer model.\n   SIP uses the offer/answer model [3] to establish
    early sessions in\n   both the gateway and the application server models.  User
    Agents\n   (UAs) generate a session description, which contains the transport\n
    \  address (i.e., IP address plus port) where they want to receive\n   media,
    and send it to their peer in a SIP message.  When media\n   packets arrive at
    this transport address, the UA assumes that they\n   come from the receiver of
    the SIP message carrying the session\n   description.  Nevertheless, attackers
    may attempt to gain access to\n   the contents of the SIP message and send packets
    to the transport\n   address contained in the session description.  To prevent
    this\n   situation, UAs SHOULD encrypt their session descriptions (e.g., using\n
    \  S/MIME).\n   Still, even if a UA encrypts its session descriptions, an attacker\n
    \  may try to guess the transport address used by the UA and send media\n   packets
    to that address.  Guessing such a transport address is\n   sometimes easier than
    it may seem because many UAs always pick up the\n   same initial media port.  To
    prevent this situation, UAs SHOULD use\n   media-level authentication mechanisms
    (e.g., Secure Realtime\n   Transport Protocol (SRTP)[6]).  In addition, UAs that
    wish to keep\n   their communications confidential SHOULD use media-level encryption\n
    \  mechanisms (e.g, SRTP [6]).\n   Attackers may attempt to make a UA send media
    to a victim as part of\n   a DoS attack.  This can be done by sending a session
    description with\n   the victim's transport address to the UA.  To prevent this
    attack,\n   the UA SHOULD engage in a handshake with the owner of the transport\n
    \  address received in a session description (just verifying willingness\n   to
    receive media) before sending a large amount of data to the\n   transport address.
    \ This check can be performed by using a connection\n   oriented transport protocol,
    by using Simple Traversal of the UDP\n   Protocol through NAT (STUN)[5] in an
    end-to-end fashion, or by the\n   key exchange in SRTP [6].\n   In any event,
    note that the previous security considerations are not\n   early media specific,
    but apply to the usage of the offer/answer\n   model in SIP to establish sessions
    in general.\n   Additionally, an early media-specific risk (roughly speaking,
    an\n   equivalent to forms of \"toll fraud\" in the Public Switched Telephone\n
    \  Network (PSTN)) attempts to exploit the different charging policies\n   some
    operators apply to early and to regular media.  When UAs are\n   allowed to exchange
    early media for free, but are required to pay for\n   regular media sessions,
    rogue UAs may try to establish a\n   bidirectional early media session and never
    send a 2xx response for\n   the INVITE.\n   On the other hand, some application
    servers (e.g., Interactive Voice\n   Response systems) use bidirectional early
    media to obtain information\n   from the callers (e.g., the Personal Identification
    Number (PIN) code\n   of a calling card).  So, we do not recommend that operators
    disallow\n   bidirectional early media.  Instead, operators should consider a\n
    \  remedy of charging early media exchanges that last too long, or\n   stopping
    them at the media level (according to the operator's\n   policy).\n"
  title: 8.  Security Considerations
- contents:
  - "9.  IANA Considerations\n   This document defines a new Content-Disposition header
    field\n   disposition type (early-session) in Section 4.  This value has been\n
    \  registered in the IANA registry for Content-Dispositions with the\n   following
    description:\n      early-session   The body describes an early communications\n
    \                     session, for example, an RFC 2327 SDP body\n   This document
    defines a SIP option tag (early-session) in Section 6.\n   It has been registered
    in the SIP parameters registry\n   (http://www.iana.org/assignments/sip-parameters)
    under \"Option Tags\",\n   with the following description.\n      early-session
    \  A UA adding the early-session option tag to a\n                      message
    indicates that it understands the early-\n                      session content
    disposition.\n"
  title: 9.  IANA Considerations
- contents:
  - "10.  Acknowledgements\n   Francois Audet, Christer Holmberg, and Allison Mankin
    provided useful\n   comments on this document.\n"
  title: 10.  Acknowledgements
- contents:
  - '11.  References

    '
  - contents:
    - "11.1.  Normative References\n   [1]  Bradner, S., \"Key words for use in RFCs
      to Indicate Requirement\n        Levels\", BCP 14, RFC 2119, March 1997.\n   [2]
      \ Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston, A.,\n        Peterson,
      J., Sparks, R., Handley, M., and E. Schooler, \"SIP:\n        Session Initiation
      Protocol\", RFC 3261, June 2002.\n   [3]  Rosenberg, J. and H. Schulzrinne,
      \"An Offer/Answer Model with\n        Session Description Protocol (SDP)\",
      RFC 3264, June 2002.\n   [4]  Camarillo, G., Marshall, W., and J. Rosenberg,
      \"Integration of\n        Resource Management and Session Initiation Protocol
      (SIP)\", RFC\n        3312, October 2002.\n   [5]  Rosenberg, J., Weinberger,
      J., Huitema, C., and R. Mahy,\n        \"STUN - Simple Traversal of User Datagram
      Protocol (UDP) Through\n        Network Address Translators (NATs)\", RFC 3489,
      March 2003.\n   [6]  Baugher, M., McGrew, D., Naslund, M., Carrara, E., and
      K.\n        Norrman, \"The Secure Real-time Transport Protocol (SRTP)\", RFC\n
      \       3711, March 2004.\n"
    title: 11.1.  Normative References
  - contents:
    - "11.2.  Informational References\n   [7]  Handley, M. and V. Jacobson, \"SDP:
      Session Description\n        Protocol\", RFC 2327, April 1998.\n   [8]  Camarillo,
      G. and H. Schulzrinne, \"Early Media and Ringing Tone\n        Generation in
      the Session Initiation Protocol (SIP)\", RFC 3960,\n        December 2004.\n"
    title: 11.2.  Informational References
  title: 11.  References
- contents:
  - "Author's Address\n   Gonzalo Camarillo\n   Ericsson\n   Hirsalantie 11\n   Jorvas
    \ 02420\n   Finland\n   EMail: Gonzalo.Camarillo@ericsson.com\n"
  title: Author's Address
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2004).\n   This
    document is subject to the rights, licenses and restrictions\n   contained in
    BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n
    \  This document and the information contained herein are provided on an\n   \"AS
    IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING TASK FORCE
    DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT LIMITED TO
    ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT INFRINGE ANY
    RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the IETF's procedures with respect
    to rights in IETF Documents can\n   be found in BCP 78 and BCP 79.\n   Copies
    of IPR disclosures made to the IETF Secretariat and any\n   assurances of licenses
    to be made available, or the result of an\n   attempt made to obtain a general
    license or permission for the use of\n   such proprietary rights by implementers
    or users of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at ietf-\n   ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
