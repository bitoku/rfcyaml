- title: __initial_text__
  contents:
  - '           Returning Values from Forms:  multipart/form-data

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
- title: 1. Abstract
  contents:
  - "1. Abstract\n   This specification defines an Internet Media Type, multipart/form-\n\
    \   data, which can be used by a wide variety of applications and\n   transported\
    \ by a wide variety of protocols as a way of returning a\n   set of values as\
    \ the result of a user filling out a form.\n"
- title: 2. Introduction
  contents:
  - "2. Introduction\n   In many applications, it is possible for a user to be presented\
    \ with\n   a form. The user will fill out the form, including information that\n\
    \   is typed, generated by user input, or included from files that the\n   user\
    \ has selected. When the form is filled out, the data from the\n   form is sent\
    \ from the user to the receiving application.\n   The definition of MultiPart/Form-Data\
    \ is derived from one of those\n   applications, originally set out in [RFC1867]\
    \ and subsequently\n   incorporated into [HTML40], where forms are expressed in\
    \ HTML, and in\n   which the form values are sent via HTTP or electronic mail.\
    \ This\n   representation is widely implemented in numerous web browsers and web\n\
    \   servers.\n   However, multipart/form-data can be used for forms that are presented\n\
    \   using representations other than HTML (spreadsheets, Portable\n   Document\
    \ Format, etc), and for transport using other means than\n   electronic mail or\
    \ HTTP. This document defines the representation of\n   form values independently\
    \ of the application for which it is used.\n"
- title: 3. Definition of multipart/form-data
  contents:
  - "3. Definition of multipart/form-data\n   The media-type multipart/form-data follows\
    \ the rules of all multipart\n   MIME data streams as outlined in [RFC 2046].\
    \  In forms, there are a\n   series of fields to be supplied by the user who fills\
    \ out the form.\n   Each field has a name. Within a given form, the names are\
    \ unique.\n   \"multipart/form-data\" contains a series of parts. Each part is\n\
    \   expected to contain a content-disposition header [RFC 2183] where the\n  \
    \ disposition type is \"form-data\", and where the disposition contains\n   an\
    \ (additional) parameter of \"name\", where the value of that\n   parameter is\
    \ the original field name in the form. For example, a part\n   might contain a\
    \ header:\n        Content-Disposition: form-data; name=\"user\"\n   with the\
    \ value corresponding to the entry of the \"user\" field.\n   Field names originally\
    \ in non-ASCII character sets may be encoded\n   within the value of the \"name\"\
    \ parameter using the standard method\n   described in RFC 2047.\n   As with all\
    \ multipart MIME types, each part has an optional\n   \"Content-Type\", which\
    \ defaults to text/plain.  If the contents of a\n   file are returned via filling\
    \ out a form, then the file input is\n   identified as the appropriate media type,\
    \ if known, or\n   \"application/octet-stream\".  If multiple files are to be\
    \ returned as\n   the result of a single form entry, they should be represented\
    \ as a\n   \"multipart/mixed\" part embedded within the \"multipart/form-data\"\
    .\n   Each part may be encoded and the \"content-transfer-encoding\" header\n\
    \   supplied if the value of that part does not conform to the default\n   encoding.\n"
- title: 4. Use of multipart/form-data
  contents:
  - '4. Use of multipart/form-data

    '
- title: 4.1 Boundary
  contents:
  - "4.1 Boundary\n   As with other multipart types, a boundary is selected that does\
    \ not\n   occur in any of the data. Each field of the form is sent, in the\n \
    \  order defined by the sending appliction and form, as a part of the\n   multipart\
    \ stream.  Each part identifies the INPUT name within the\n   original form. Each\
    \ part should be labelled with an appropriate\n   content-type if the media type\
    \ is known (e.g., inferred from the file\n   extension or operating system typing\
    \ information) or as\n   \"application/octet-stream\".\n"
- title: 4.2 Sets of files
  contents:
  - "4.2 Sets of files\n   If the value of a form field is a set of files rather than\
    \ a single\n   file, that value can be transferred together using the\n   \"multipart/mixed\"\
    \ format.\n"
- title: 4.3 Encoding
  contents:
  - "4.3 Encoding\n   While the HTTP protocol can transport arbitrary binary data,\
    \ the\n   default for mail transport is the 7BIT encoding.  The value supplied\n\
    \   for a part may need to be encoded and the \"content-transfer-encoding\"\n\
    \   header supplied if the value does not conform to the default\n   encoding.\
    \  [See section 5 of RFC 2046 for more details.]\n"
- title: 4.4 Other attributes
  contents:
  - "4.4 Other attributes\n   Forms may request file inputs from the user; the form\
    \ software may\n   include the file name and other file attributes, as specified\
    \ in [RFC\n   2184].\n   The original local file name may be supplied as well,\
    \ either as a\n   \"filename\" parameter either of the \"content-disposition:\
    \ form-data\"\n   header or, in the case of multiple files, in a \"content-disposition:\n\
    \   file\" header of the subpart. The sending application MAY supply a\n   file\
    \ name; if the file name of the sender's operating system is not\n   in US-ASCII,\
    \ the file name might be approximated, or encoded using\n   the method of RFC\
    \ 2231.\n   This is a convenience for those cases where the files supplied by\
    \ the\n   form might contain references to each other, e.g., a TeX file and its\n\
    \   .sty auxiliary style description.\n"
- title: 4.5 Charset of text in form data
  contents:
  - "4.5 Charset of text in form data\n   Each part of a multipart/form-data is supposed\
    \ to have a content-\n   type.  In the case where a field element is text, the\
    \ charset\n   parameter for the text indicates the character encoding used.\n\
    \   For example, a form with a text field in which a user typed 'Joe owes\n  \
    \ <eu>100' where <eu> is the Euro symbol might have form data returned\n   as:\n\
    \    --AaB03x\n    content-disposition: form-data; name=\"field1\"\n    content-type:\
    \ text/plain;charset=windows-1250\n    content-transfer-encoding: quoted-printable\n\
    \    Joe owes =80100.\n    --AaB03x\n"
- title: 5. Operability considerations
  contents:
  - '5. Operability considerations

    '
- title: 5.1 Compression, encryption
  contents:
  - "5.1 Compression, encryption\n   Some of the data in forms may be compressed or\
    \ encrypted, using other\n   MIME mechanisms. This is a function of the application\
    \ that is\n   generating the form-data.\n"
- title: 5.2 Other data encodings rather than multipart
  contents:
  - "5.2 Other data encodings rather than multipart\n   Various people have suggested\
    \ using new mime top-level type\n   \"aggregate\", e.g., aggregate/mixed or a\
    \ content-transfer-encoding of\n   \"packet\" to express indeterminate-length\
    \ binary data, rather than\n   relying on the multipart-style boundaries. While\
    \ this would be\n   useful, the \"multipart\" mechanisms are well established,\
    \ simple to\n   implement on both the sending client and receiving server, and\
    \ as\n   efficient as other methods of dealing with multiple combinations of\n\
    \   binary data.\n   The multipart/form-data encoding has a high overhead and\
    \ performance\n   impact if there are many fields with short values. However,\
    \ in\n   practice, for the forms in use, for example, in HTML, the average\n \
    \  overhead is not significant.\n"
- title: 5.3 Remote files with third-party transfer
  contents:
  - "5.3 Remote files with third-party transfer\n   In some scenarios, the user operating\
    \ the form software might want to\n   specify a URL for remote data rather than\
    \ a local file. In this case,\n   is there a way to allow the browser to send\
    \ to the client a pointer\n   to the external data rather than the entire contents?\
    \ This capability\n   could be implemented, for example, by having the client\
    \ send to the\n   server data of type \"message/external-body\" with \"access-type\"\
    \ set\n   to, say, \"uri\", and the URL of the remote data in the body of the\n\
    \   message.\n"
- title: 5.4 Non-ASCII field names
  contents:
  - "5.4 Non-ASCII field names\n   Note that MIME headers are generally required to\
    \ consist only of 7-\n   bit data in the US-ASCII character set. Hence field names\
    \ should be\n   encoded according to the method in RFC 2047 if they contain\n\
    \   characters outside of that set.\n"
- title: 5.5 Ordered fields and duplicated field names
  contents:
  - "5.5 Ordered fields and duplicated field names\n   The relationship of the ordering\
    \ of fields within a form and the\n   ordering of returned values within \"multipart/form-data\"\
    \ is not\n   defined by this specification, nor is the handling of the case where\n\
    \   a form has multiple fields with the same name. While HTML-based forms\n  \
    \ may send back results in the order received, and intermediaries\n   should not\
    \ reorder the results, there are some systems which might\n   not define a natural\
    \ order for form fields.\n"
- title: 5.6 Interoperability with web applications
  contents:
  - "5.6 Interoperability with web applications\n   Many web applications use the\
    \ \"application/x-url-encoded\" method for\n   returning data from forms. This\
    \ format is quite compact, e.g.:\n   name=Xavier+Xantico&verdict=Yes&colour=Blue&happy=sad&Utf%F6r=Send\n\
    \   however, there is no opportunity to label the enclosed data with\n   content\
    \ type, apply a charset, or use other encoding mechanisms.\n   Many form-interpreting\
    \ programs (primarly web browsers) now implement\n   and generate multipart/form-data,\
    \ but an existing application might\n   need to optionally support both the application/x-url-encoded\
    \ format\n   as well.\n"
- title: 5.7 Correlating form data with the original form
  contents:
  - "5.7 Correlating form data with the original form\n   This specification provides\
    \ no specific mechanism by which\n   multipart/form-data can be associated with\
    \ the form that caused it to\n   be transmitted. This separation is intentional;\
    \ many different forms\n   might be used for transmitting the same data. In practice,\n\
    \   applications may supply a specific form processing resource (in HTML,\n  \
    \ the ACTION attribute in a FORM tag) for each different form.\n   Alternatively,\
    \ data about the form might be encoded in a \"hidden\n   field\" (a field which\
    \ is part of the form but which has a fixed value\n   to be transmitted back to\
    \ the form-data processor.)\n"
- title: 6. Security Considerations
  contents:
  - "6. Security Considerations\n   The data format described in this document introduces\
    \ no new security\n   considerations outside of those introduced by the protocols\
    \ that use\n   it and of the component elements. It is important when interpreting\n\
    \   content-disposition to not overwrite files in the recipients address\n   space\
    \ inadvertently.\n   User applications that request form information from users\
    \ must be\n   careful not to cause a user to send information to the requestor\
    \ or a\n   third party unwillingly or unwittingly. For example, a form might\n\
    \   request 'spam' information to be sent to an unintended third party,\n   or\
    \ private information to be sent to someone that the user might not\n   actually\
    \ intend. While this is primarily an issue for the\n   representation and interpretation\
    \ of forms themselves, rather than\n   the data representation of the result of\
    \ form transmission, the\n   transportation of private information must be done\
    \ in a way that does\n   not expose it to unwanted prying.\n   With the introduction\
    \ of form-data that can reasonably send back the\n   content of files from user's\
    \ file space, the possibility that a user\n   might be sent an automated script\
    \ that fills out a form and then\n   sends the user's local file to another address\
    \ arises. Thus,\n   additional caution is required when executing automated scripting\n\
    \   where form-data might include user's files.\n"
- title: 7. Author's Address
  contents:
  - "7. Author's Address\n   Larry Masinter\n   Xerox Palo Alto Research Center\n\
    \   3333 Coyote Hill Road\n   Palo Alto, CA 94304\n   Fax:    +1 650 812 4333\n\
    \   EMail:   masinter@parc.xerox.com\n"
- title: Appendix A. Media type registration for multipart/form-data
  contents:
  - "Appendix A. Media type registration for multipart/form-data\n   Media Type name:\n\
    \     multipart\n   Media subtype name:\n     form-data\n   Required parameters:\n\
    \     none\n   Optional parameters:\n     none\n   Encoding considerations:\n\
    \     No additional considerations other than as for other multipart\n     types.\n\
    \   Security Considerations\n     Applications which receive forms and process\
    \ them must be careful\n     not to supply data back to the requesting form processing\
    \ site that\n     was not intended to be sent by the recipient. This is a\n  \
    \   consideration for any application that generates a multipart/form-\n     data.\n\
    \     The multipart/form-data type introduces no new security\n     considerations\
    \ for recipients beyond what might occur with any of\n     the enclosed parts.\n"
- title: References
  contents:
  - "References\n   [RFC 2046] Freed, N., and N. Borenstein, \"Multipurpose Internet\
    \ Mail\n              Extensions (MIME) Part Two: Media Types\", RFC 2046,\n \
    \             November 1996.\n   [RFC 2047] Moore, K., \"MIME (Multipurpose Internet\
    \ Mail Extensions)\n              Part Three: Message Header Extensions for Non-ASCII\
    \ Text\",\n              RFC 2047, November 1996.\n   [RFC 2231] Freed, N., and\
    \ K. Moore, \"MIME Parameter Value and Encoded\n              Word Extensions:\
    \ Character Sets, Languages, and\n              Continuations\", RFC 2231, November\
    \ 1997.\n   [RFC 1806] Troost, R., and S. Dorner, \"Communicating Presentation\n\
    \              Information in Internet Messages: The Content-Disposition\n   \
    \           Header\", RFC 1806, June 1995.\n   [RFC 1867] Nebel, E., and L. Masinter,\
    \ \"Form-based File Upload in\n              HTML\", RFC 1867, November 1995.\n\
    \   [RFC 2183] Troost, R., Dorner, S., and K. Moore, \"Communicating\n       \
    \       Presentation Information in Internet Messages: The\n              Content-Disposition\
    \ Header Field\", RFC 2183, August 1997.\n   [RFC 2184] Freed, N., and K. Moore,\
    \ \"MIME Parameter Value and Encoded\n              Word Extensions: Character\
    \ Sets, Languages, and\n              Continuations\", RFC 2184, August 1997.\n\
    \   [HTML40]   D. Raggett, A. Le Hors, I. Jacobs. \"HTML 4.0\n              Specification\"\
    , World Wide Web Consortium Technical Report\n              \"REC-html40\", December,\
    \ 1997. <http://www.w3.org/TR/REC-\n              html40/>\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (1998).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
