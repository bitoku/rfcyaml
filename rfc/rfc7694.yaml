- title: __initial_text__
  contents:
  - '  Hypertext Transfer Protocol (HTTP) Client-Initiated Content-Encoding

    '
- title: Abstract
  contents:
  - "Abstract\n   In HTTP, content codings allow for payload encodings such as for\n\
    \   compression or integrity checks.  In particular, the \"gzip\" content\n  \
    \ coding is widely used for payload data sent in response messages.\n   Content\
    \ codings can be used in request messages as well; however,\n   discoverability\
    \ is not on par with response messages.  This document\n   extends the HTTP \"\
    Accept-Encoding\" header field for use in responses,\n   to indicate the content\
    \ codings that are supported in requests.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7694.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n   2.  Notational Conventions  . . . . . . . . . . . . . . .\
    \ . . . .   2\n   3.  Using the 'Accept-Encoding' Header Field in Responses .\
    \ . . .   3\n   4.  Example . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .   4\n   5.  Deployment Considerations . . . . . . . . . . . . . . . . .\
    \ .   4\n   6.  Security Considerations . . . . . . . . . . . . . . . . . . .\
    \   5\n   7.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  \
    \ 5\n     7.1.  Header Field Registry . . . . . . . . . . . . . . . . . .   5\n\
    \     7.2.  Status Code Registry  . . . . . . . . . . . . . . . . . .   6\n  \
    \ 8.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   6\n    \
    \ 8.1.  Normative References  . . . . . . . . . . . . . . . . . .   6\n     8.2.\
    \  Informative References  . . . . . . . . . . . . . . . . .   6\n   Acknowledgements\
    \  . . . . . . . . . . . . . . . . . . . . . . . .   7\n   Author's Address  .\
    \ . . . . . . . . . . . . . . . . . . . . . . .   7\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   In HTTP, content codings allow for payload encodings such\
    \ as for\n   compression or integrity checks ([RFC7231], Section 3.1.2).  In\n\
    \   particular, the \"gzip\" content coding ([RFC7230], Section 4.2) is\n   widely\
    \ used for payload data sent in response messages.\n   Content codings can be\
    \ used in request messages as well; however,\n   discoverability is not on par\
    \ with response messages.  This document\n   extends the HTTP \"Accept-Encoding\"\
    \ header field ([RFC7231],\n   Section 5.3.4) for use in responses, to indicate\
    \ the content codings\n   that are supported in requests.  It furthermore updates\
    \ the\n   definition of status code 415 (Unsupported Media Type) ([RFC7231],\n\
    \   Section 6.5.13), recommending that the \"Accept-Encoding\" header field\n\
    \   be included when appropriate.\n"
- title: 2.  Notational Conventions
  contents:
  - "2.  Notational Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n   This document reuses terminology defined in the base HTTP\n\
    \   specifications, namely Section 2 of [RFC7230] and Section 3.1.2 of\n   [RFC7231].\n"
- title: 3.  Using the 'Accept-Encoding' Header Field in Responses
  contents:
  - "3.  Using the 'Accept-Encoding' Header Field in Responses\n   Section 5.3.4 of\
    \ [RFC7231] defines \"Accept-Encoding\" as a request\n   header field only.\n\
    \   This specification expands that definition to allow \"Accept-Encoding\"\n\
    \   as a response header field as well.  When present in a response, it\n   indicates\
    \ what content codings the resource was willing to accept in\n   the associated\
    \ request.  A field value that only contains \"identity\"\n   implies that no\
    \ content codings were supported.\n   Note that this information is specific to\
    \ the associated request; the\n   set of supported encodings might be different\
    \ for other resources on\n   the same server and could change over time or depend\
    \ on other aspects\n   of the request (such as the request method).\n   Section\
    \ 6.5.13 of [RFC7231] defines status code 415 (Unsupported\n   Media Type) to\
    \ apply to problems related to both media types and\n   content codings.\n   Servers\
    \ that fail a request due to an unsupported content coding\n   ought to respond\
    \ with a 415 status and ought to include an \"Accept-\n   Encoding\" header field\
    \ in that response, allowing clients to\n   distinguish between issues related\
    \ to content codings and media\n   types.  In order to avoid confusion with issues\
    \ related to media\n   types, servers that fail a request with a 415 status for\
    \ reasons\n   unrelated to content codings MUST NOT include the \"Accept-Encoding\"\
    \n   header field.\n   It is expected that the most common use of \"Accept-Encoding\"\
    \ in\n   responses will have the 415 (Unsupported Media Type) status code, in\n\
    \   response to optimistic use of a content coding by clients.  However,\n   the\
    \ header field can also be used to indicate to clients that content\n   codings\
    \ are supported, to optimize future interactions.  For example,\n   a resource\
    \ might include it in a 2xx response when the request\n   payload was big enough\
    \ to justify use of a compression coding but the\n   client failed do so.\n"
- title: 4.  Example
  contents:
  - "4.  Example\n   A client submits a POST request using the \"compress\" content\
    \ coding\n   ([RFC7231], Section 3.1.2.1):\n     POST /edit/ HTTP/1.1\n     Host:\
    \ example.org\n     Content-Type: application/atom+xml;type=entry\n     Content-Encoding:\
    \ compress\n     ...compressed payload...\n   The server rejects the request because\
    \ it only allows the \"gzip\"\n   content coding:\n     HTTP/1.1 415 Unsupported\
    \ Media Type\n     Date: Fri, 09 May 2014 11:43:53 GMT\n     Accept-Encoding:\
    \ gzip\n     Content-Length: 68\n     Content-Type: text/plain\n     This resource\
    \ only supports the \"gzip\" content coding in requests.\n   At this point, the\
    \ client can retry the request with the supported\n   \"gzip\" content coding.\n\
    \   Alternatively, a server that does not support any content codings in\n   requests\
    \ could answer with:\n     HTTP/1.1 415 Unsupported Media Type\n     Date: Fri,\
    \ 09 May 2014 11:43:53 GMT\n     Accept-Encoding: identity\n     Content-Length:\
    \ 61\n     Content-Type: text/plain\n     This resource does not support content\
    \ codings in requests.\n"
- title: 5.  Deployment Considerations
  contents:
  - "5.  Deployment Considerations\n   Servers that do not support content codings\
    \ in requests already are\n   required to fail a request that uses a content coding.\n\
    \   Section 6.5.13 of [RFC7231] defines the status code 415 (Unsupported\n   Media\
    \ Type) for this purpose, so the only change needed is to include\n   the \"Accept-Encoding\"\
    \ header field with the value \"identity\" in that\n   response.\n   Servers that\
    \ do support some content codings are required to fail\n   requests with unsupported\
    \ content codings as well.  To be compliant\n   with this specification, servers\
    \ will need to use the status code 415\n   (Unsupported Media Type) to signal\
    \ the problem and will have to\n   include an \"Accept-Encoding\" header field\
    \ that enumerates the content\n   codings that are supported.  As the set of supported\
    \ content codings\n   is usually static and small, adding the header field ought\
    \ to be\n   trivial.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   This specification only adds discovery of supported\
    \ content codings\n   and diagnostics for requests failing due to unsupported\
    \ content\n   codings.  As such, it doesn't introduce any new security\n   considerations\
    \ over those already present in HTTP/1.1 (Section 9 of\n   [RFC7231]) and HTTP/2\
    \ (Section 10 of [RFC7540]).\n   However, the point of better discoverability\
    \ and diagnostics is to\n   make it easier to use content codings in requests.\
    \  This might lead\n   to increased usage of compression codings such as gzip\
    \ (Section 4.2\n   of [RFC7230]), which, when used over a secure channel, can\
    \ enable\n   side-channel attacks such as BREACH (see Section 10.6 of [RFC7540]\n\
    \   and [BREACH]).  At the time of publication, it was unclear how\n   BREACH-like\
    \ attacks can be applied to compression in HTTP requests.\n"
- title: 7.  IANA Considerations
  contents:
  - '7.  IANA Considerations

    '
- title: 7.1.  Header Field Registry
  contents:
  - "7.1.  Header Field Registry\n   HTTP header fields are registered within the\
    \ \"Message Headers\"\n   registry located at <http://www.iana.org/assignments/\n\
    \   message-headers>, as defined by [BCP90].\n   This document updates the definition\
    \ of the \"Accept-Encoding\" header\n   field.  The \"Permanent Message Header\
    \ Field Names\" registry has been\n   updated as follows:\n   +-----------------+----------+----------+---------------------------+\n\
    \   | Header Field    | Protocol | Status   | Reference                 |\n  \
    \ | Name            |          |          |                           |\n   +-----------------+----------+----------+---------------------------+\n\
    \   | Accept-Encoding | http     | standard | Section 5.3.4 of          |\n  \
    \ |                 |          |          | [RFC7231] and Section 3   |\n   |\
    \                 |          |          | of this document          |\n   +-----------------+----------+----------+---------------------------+\n"
- title: 7.2.  Status Code Registry
  contents:
  - "7.2.  Status Code Registry\n   HTTP status codes are registered within the \"\
    HTTP Status Codes\"\n   registry located at <http://www.iana.org/assignments/\n\
    \   http-status-codes>.\n   This document updates the definition of the status\
    \ code 415\n   (Unsupported Media Type).  The \"HTTP Status Codes\" registry has\
    \ been\n   updated as follows:\n   +-------+-----------------+-----------------------------------------+\n\
    \   | Value | Description     | Reference                               |\n  \
    \ +-------+-----------------+-----------------------------------------+\n   |\
    \ 415   | Unsupported     | Section 6.5.13 of [RFC7231] and Section |\n   |  \
    \     | Media Type      | 3 of this document                      |\n   +-------+-----------------+-----------------------------------------+\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC7230]  Fielding, R., Ed. and J. Reschke, Ed., \"Hypertext Transfer\n \
    \             Protocol (HTTP/1.1): Message Syntax and Routing\",\n           \
    \   RFC 7230, DOI 10.17487/RFC7230, June 2014,\n              <http://www.rfc-editor.org/info/rfc7230>.\n\
    \   [RFC7231]  Fielding, R., Ed. and J. Reschke, Ed., \"Hypertext Transfer\n \
    \             Protocol (HTTP/1.1): Semantics and Content\", RFC 7231,\n      \
    \        DOI 10.17487/RFC7231, June 2014,\n              <http://www.rfc-editor.org/info/rfc7231>.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [BCP90]    Klyne, G., Nottingham, M., and J.\
    \ Mogul, \"Registration\n              Procedures for Message Header Fields\"\
    , BCP 90, RFC 3864,\n              September 2004, <http://www.rfc-editor.org/info/bcp90>.\n\
    \   [BREACH]   Gluck, Y., Harris, N., and A. Prado, \"BREACH: Reviving the\n \
    \             CRIME Attack\", July 2013,\n              <http://breachattack.com/resources/\n\
    \              BREACH%20-%20SSL,%20gone%20in%2030%20seconds.pdf>.\n   [RFC7540]\
    \  Belshe, M., Peon, R., and M. Thomson, Ed., \"Hypertext\n              Transfer\
    \ Protocol Version 2 (HTTP/2)\", RFC 7540,\n              DOI 10.17487/RFC7540,\
    \ May 2015,\n              <http://www.rfc-editor.org/info/rfc7540>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   Thanks go to the Hypertext Transfer Protocol Working Group\n\
    \   participants, namely Amos Jeffries, Ben Campbell, Mark Nottingham,\n   Pete\
    \ Resnick, Stephen Farrell, and Ted Hardie.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Julian F. Reschke\n   greenbytes GmbH\n   Hafenweg 16\n\
    \   Muenster, NW  48155\n   Germany\n   Email: julian.reschke@greenbytes.de\n\
    \   URI:   http://greenbytes.de/tech/webdav/\n"
