- title: __initial_text__
  contents:
  - "                   IP Flow Information Accounting and\n                    Export\
    \ Benchmarking Methodology\n"
- title: Abstract
  contents:
  - "Abstract\n   This document provides a methodology and framework for quantifying\n\
    \   the performance impact of the monitoring of IP flows on a network\n   device\
    \ and the export of this information to a Collector.  It\n   identifies the rate\
    \ at which the IP flows are created, expired, and\n   successfully exported as\
    \ a new performance metric in combination with\n   traditional throughput.  The\
    \ metric is only applicable to the devices\n   compliant with RFC 5470, \"Architecture\
    \ for IP Flow Information\n   Export\".  The methodology quantifies the impact\
    \ of the IP flow\n   monitoring process on the network equipment.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any\n   errata, and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6645.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \   2. Terminology .....................................................5\n  \
    \    2.1. Existing Terminology .......................................5\n    \
    \  2.2. New Terminology ............................................6\n   3. Flow\
    \ Monitoring Performance Benchmark ...........................8\n      3.1. Definition\
    \ .................................................8\n      3.2. Device Applicability\
    \ .......................................8\n      3.3. Measurement Concept ........................................8\n\
    \      3.4. The Measurement Procedure Overview .........................9\n  \
    \ 4. Measurement Setup ..............................................11\n    \
    \  4.1. Measurement Topology ......................................11\n      4.2.\
    \ Baseline DUT Setup ........................................13\n      4.3. Flow\
    \ Monitoring Configuration .............................13\n      4.4. Collector\
    \ .................................................19\n      4.5. Sampling ..................................................19\n\
    \      4.6. Frame Formats .............................................19\n  \
    \    4.7. Frame Sizes ...............................................20\n    \
    \  4.8. Flow Export Data Packet Sizes .............................20\n      4.9.\
    \ Illustrative Test Setup Examples ..........................20\n   5. Flow Monitoring\
    \ Throughput Measurement Methodology .............22\n      5.1. Flow Monitoring\
    \ Configuration .............................23\n      5.2. Traffic Configuration\
    \ .....................................24\n      5.3. Cache Population ..........................................25\n\
    \      5.4. Measurement Time Interval .................................25\n  \
    \    5.5. Flow Export Rate Measurement ..............................26\n    \
    \  5.6. The Measurement Procedure .................................27\n   6. RFC\
    \ 2544 Measurements ..........................................28\n      6.1. Flow\
    \ Monitoring Configuration..............................28\n      6.2. Measurements\
    \ with the Flow Monitoring Throughput Setup ....29\n      6.3. Measurements with\
    \ Fixed Flow Export Rate...................29\n   7. Flow Monitoring Accuracy\
    \ .......................................30\n   8. Evaluating Flow Monitoring\
    \ Applicability .......................31\n   9. Acknowledgements ...............................................32\n\
    \   10. Security Considerations .......................................32\n  \
    \ 11. References ....................................................33\n    \
    \  11.1. Normative References .....................................33\n      11.2.\
    \ Informative References ...................................33\n   Appendix A.\
    \ Recommended Report Format .............................35\n   Appendix B. Miscellaneous\
    \ Tests ...................................36\n       B.1. DUT Under Traffic Load\
    \ ...................................36\n       B.2. In-Band Flow Export ......................................36\n\
    \       B.3. Variable Packet Rate .....................................37\n  \
    \     B.4. Bursty Traffic ...........................................37\n    \
    \   B.5. Various Flow Monitoring Configurations ...................38\n      \
    \ B.6. Tests with Bidirectional Traffic .........................38\n       B.7.\
    \ Instantaneous Flow Export Rate ...........................39\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Monitoring IP flows (Flow monitoring) is defined in the\
    \ \"Architecture\n   for IP Flow Information Export\" [RFC5470] and related IPFIX\
    \ documents\n   specified in Section 1.2 of [RFC5470].  It analyzes the traffic\
    \ using\n   predefined fields from the packet header as keys and stores the\n\
    \   traffic and other internal information in the DUT (Device Under Test)\n  \
    \ memory.  This cached flow information is then formatted into records\n   (see\
    \ Section 2.1 for term definitions) and exported from the DUT to\n   an external\
    \ data collector for analysis.  More details on the\n   measurement architecture\
    \ are provided in Section 3.3.\n   Flow monitoring on network devices is widely\
    \ deployed and has\n   numerous uses in both service-provider and enterprise segments\
    \ as\n   detailed in the \"Requirements for IP Flow Information Export (IPFIX)\"\
    \n   [RFC3917].  This document provides a methodology for measuring Flow\n   monitoring\
    \ performance so that network operators have a framework to\n   measure the impact\
    \ on the network and network equipment.\n   This document's goal is to provide\
    \ a series of methodology\n   specifications for the measurement of Flow monitoring\
    \ performance in\n   a way that is comparable amongst various implementations,\
    \ platforms,\n   and vendor devices.\n   Flow monitoring is, in most cases, run\
    \ on network devices that also\n   forward packets.  Therefore, this document\
    \ also provides the\n   methodology for [RFC2544] measurements in the presence\
    \ of Flow\n   monitoring.  It is applicable to IPv6 and MPLS traffic with their\n\
    \   specifics defined in [RFC5180] and [RFC5695], respectively.\n   This document\
    \ specifies a methodology to measure the maximum IP Flow\n   Export Rate that\
    \ a network device can sustain without impacting the\n   Forwarding Plane, without\
    \ losing any IP flow information and without\n   compromising IP flow accuracy\
    \ (see Section 7 for details).\n   [RFC2544], [RFC5180], and [RFC5695] specify\
    \ benchmarking of network\n   devices forwarding IPv4, IPv6, and MPLS [RFC3031]\
    \ traffic,\n   respectively.  The methodology specified in this document stays\
    \ the\n   same for any traffic type.  The only restriction may be the DUT's\n\
    \   lack of support for Flow monitoring of a particular traffic type.\n   A variety\
    \ of different DUT architectures exist that are capable of\n   Flow monitoring\
    \ and export.  As such, this document does not attempt\n   to list the various\
    \ white-box variables (e.g., CPU load, memory\n   utilization, hardware resources\
    \ utilization, etc.) that could be\n   gathered as they always help in comparison\
    \ evaluations.  A more\n   complete understanding of the stress points of a particular\
    \ device\n   can be attained using this internal information, and the tester MAY\n\
    \   choose to gather this information during the measurement iterations.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The terminology used in this document is based on that defined\
    \ in\n   [RFC5470], [RFC2285], and [RFC1242], as summarized in Section 2.1.\n\
    \   The only new terms needed for this methodology are defined in Section\n  \
    \ 2.2.\n   Additionally, the key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\",\n   \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"\
    , and\n   \"OPTIONAL\" in this document are to be interpreted as described  in\n\
    \   RFC 2119 [RFC2119].\n"
- title: 2.1.  Existing Terminology
  contents:
  - "2.1.  Existing Terminology\n    Device Under Test (DUT)   [RFC2285, Section 3.1.1]\n\
    \    Flow                      [RFC5101, Section 2]\n    Flow Key            \
    \      [RFC5101, Section 2]\n    Flow Record               [RFC5101, Section 2]\n\
    \    Template Record           [RFC5101, Section 2]\n    Observation Point   \
    \      [RFC5470, Section 2]\n    Metering Process          [RFC5470, Section 2]\n\
    \    Exporting Process         [RFC5470, Section 2]\n    Exporter            \
    \      [RFC5470, Section 2]\n    Collector                 [RFC5470, Section 2]\n\
    \    Control Information       [RFC5470, Section 2]\n    Data Stream         \
    \      [RFC5470, Section 2]\n    Flow Expiration           [RFC5470, Section 5.1.1]\n\
    \    Flow Export               [RFC5470, Section 5.1.2]\n    Throughput      \
    \          [RFC1242, Section 3.17]\n"
- title: 2.2.  New Terminology
  contents:
  - '2.2.  New Terminology

    '
- title: 2.2.1.  Cache
  contents:
  - "2.2.1.  Cache\n   Definition:\n      Memory area held and dedicated by the DUT\
    \ to store Flow\n      information prior to the Flow Expiration.\n"
- title: 2.2.2.  Cache Size
  contents:
  - "2.2.2.  Cache Size\n   Definition:\n      The size of the Cache in terms of how\
    \ many entries the Cache can\n      hold.\n   Discussion:\n      This term is\
    \ typically represented as a configurable option in the\n      particular Flow\
    \ monitoring implementation.  Its highest value will\n      depend on the memory\
    \ available in the network device.\n   Measurement units:\n      Number of Cache\
    \ entries\n"
- title: 2.2.3.  Active Timeout
  contents:
  - "2.2.3.  Active Timeout\n   Definition:\n      For long-running Flows, the time\
    \ interval after which the Metering\n      Process expires a Cache entry to ensure\
    \ Flow data is regularly\n      updated.\n   Discussion:\n      This term is typically\
    \ presented as a configurable option in the\n      particular Flow monitoring\
    \ implementation.  See Section 5.1.1 of\n      [RFC5470] for a more detailed discussion.\n\
    \      Flows are considered long running when they last longer than\n      several\
    \ multiples of the Active Timeout.  If the Active Timeout is\n      zero, then\
    \ Flows are considered long running if they contain many\n      more packets (tens\
    \ of packets) than usually observed in a single\n      transaction.\n   Measurement\
    \ units:\n      Seconds\n"
- title: 2.2.4.  Idle Timeout
  contents:
  - "2.2.4.  Idle Timeout\n   Definition:\n      The time interval used by the Metering\
    \ Process to expire an entry\n      from the Cache when no more packets belonging\
    \ to that specific\n      Cache entry have been observed during the interval.\n\
    \   Discussion:\n      Idle Timeout is typically represented as a configurable\
    \ option in\n      the particular Flow monitoring implementation.  See Section\
    \ 5.1.1\n      of [RFC5470] for more detailed discussion.  Note that some\n  \
    \    documents in the industry refer to \"Idle Timeout\" as \"inactive\n     \
    \ timeout\".\n   Measurement units:\n      Seconds\n"
- title: 2.2.5.  Flow Export Rate
  contents:
  - "2.2.5.  Flow Export Rate\n   Definition:\n      The number of Cache entries that\
    \ expire from the Cache (as defined\n      by the Flow Expiration term) and are\
    \ exported to the Collector\n      within a measurement time interval.  There\
    \ SHOULD NOT be any\n      export filtering, so that all the expired Cache entries\
    \ are\n      exported.  If there is export filtering and it can't be disabled,\n\
    \      this MUST be indicated in the measurement report.\n      The measured Flow\
    \ Export Rate MUST include both the Data Stream\n      and the Control Information,\
    \ as defined in Section 2 of [RFC5470].\n   Discussion:\n      The Flow Export\
    \ Rate is measured using Flow Export data observed\n      at the Collector by\
    \ counting the exported Flow Records during the\n      measurement time interval\
    \ (see Section 5.4).  The value obtained\n      is an average of the instantaneous\
    \ export rates observed during\n      the measurement time interval.  The smallest\
    \ possible measurement\n      interval (if attempting to measure a nearly instantaneous\
    \ export\n      rate rather than average export rate on the DUT) is limited by\
    \ the\n      export capabilities of the particular Flow monitoring\n      implementation\
    \ (when physical-layer issues between the DUT and the\n      Collector are excluded).\n\
    \   Measurement units:\n      Number of Flow Records per second\n"
- title: 3.  Flow Monitoring Performance Benchmark
  contents:
  - '3.  Flow Monitoring Performance Benchmark

    '
- title: 3.1.  Definition
  contents:
  - "3.1.  Definition\n   Flow Monitoring Throughput\n   Definition:\n      The maximum\
    \ Flow Export Rate the DUT can sustain without losing a\n      single Cache entry.\
    \  Additionally, for packet forwarding devices,\n      the maximum Flow Export\
    \ Rate the DUT can sustain without dropping\n      packets in the Forwarding Plane\
    \ (see Figure 1).\n   Measurement units:\n      Number of Flow Records per second\n\
    \   Discussion:\n      The losses of Cache entries, or forwarded packets per this\n\
    \      definition are assumed to happen due to the lack of DUT resources\n   \
    \   to process any additional traffic information or lack of resources\n     \
    \ to process Flow Export data.  The physical-layer issues, like\n      insufficient\
    \ bandwidth from the DUT to the Collector or lack of\n      Collector resources,\
    \ MUST be excluded as detailed in Section 4.\n"
- title: 3.2.  Device Applicability
  contents:
  - "3.2.  Device Applicability\n   The Flow monitoring performance metric is applicable\
    \ to network\n   devices that deploy the architecture described in [RFC5470].\
    \  These\n   devices can be network packet forwarding devices or appliances that\n\
    \   analyze traffic but do not forward traffic (e.g., probes, sniffers,\n   replicators).\n\
    \   This document does not intend to measure Collector performance, it\n   only\
    \ requires sufficient Collector resources (as specified in Section\n   4.4) in\
    \ order to measure the DUT characteristics.\n"
- title: 3.3.  Measurement Concept
  contents:
  - "3.3.  Measurement Concept\n   Figure 1 presents the functional block diagram\
    \ of the DUT.  The\n   traffic in the figure represents test traffic sent to the\
    \ DUT and\n   forwarded by the DUT, if possible.  When testing devices that do\
    \ not\n   act as network packet forwarding devices (such as probes, sniffers,\n\
    \   and replicators), the Forwarding Plane is simply an Observation Point\n  \
    \ as defined in Section 2 of [RFC5470].  The Throughput of such devices\n   will\
    \ always be zero, and the only applicable performance metric is\n   the Flow Monitoring\
    \ Throughput.  Netflow is specified by [RFC3954].\n              +-------------------------\
    \ +\n              | IPFIX | NetFlow | Others |\n              +-------------------------\
    \ +\n              |            ^             |\n              |       Flow Export\
    \        |\n              |            ^             |\n              |     +-------------+\
    \      |\n              |     | Monitoring  |      |\n              |     |  \
    \ Plane     |      |\n              |     +-------------+      |\n           \
    \   |            ^             |\n              |     traffic information  |\n\
    \              |            ^             |\n              |     +-------------+\
    \      |\n              |     |             |      |\n   traffic ---|---->| Forwarding\
    \  |------|---->\n              |     |    Plane    |      |\n              |\
    \     +-------------+      |\n              |                          |\n   \
    \           |           DUT            |\n              +-------------------------\
    \ +\n   Figure 1.  The Functional Block Diagram of the DUT\n   Flow monitoring\
    \ is represented in Figure 1 by the Monitoring Plane;\n   it is enabled as specified\
    \ in Section 4.3.  It uses the traffic\n   information provided by the Forwarding\
    \ Plane and configured Flow Keys\n   to create Cache entries representing the\
    \ traffic forwarded (or\n   observed) by the DUT in the DUT Cache.  The Cache\
    \ entries are expired\n   from the Cache depending on the Cache configuration\
    \ (e.g., the Active\n   and Idle Timeouts, the Cache Size), number of Cache entries,\
    \ and the\n   traffic pattern.  The Cache entries are used by the Exporting Process\n\
    \   to format the Flow Records, which are then exported from the DUT to\n   the\
    \ Collector (see Figure 2 in Section 4).\n   The Forwarding Plane and Monitoring\
    \ Plane represent two separate\n   functional blocks, each with its own performance\
    \ capability.  The\n   Forwarding Plane handles user data packets and is fully\
    \ characterized\n   by the metrics defined by [RFC1242].\n   The Monitoring Plane\
    \ handles Flows that reflect the analyzed traffic.\n   The metric for Monitoring\
    \ Plane performance is the Flow Export Rate,\n   and the benchmark is the Flow\
    \ Monitoring Throughput.\n"
- title: 3.4.  The Measurement Procedure Overview
  contents:
  - "3.4.  The Measurement Procedure Overview\n   The measurement procedure is fully\
    \ specified in Sections 4, 5, and 6.\n   This section provides an overview of\
    \ principles for the measurements.\n   The basic measurement procedure of the\
    \ performance characteristics of\n   a DUT with Flow monitoring enabled is a conventional\
    \ Throughput\n   measurement using a search algorithm to determine the maximum\
    \ packet\n   rate at which none of the offered packets and corresponding Flow\n\
    \   Records are dropped by the DUT as described in [RFC1242] and Section\n   26.1\
    \ of [RFC2544].\n   The DUT with Flow monitoring enabled contains two functional\
    \ blocks\n   that need to be measured using characteristics applicable to one\
    \ or\n   both blocks (see Figure 1).  See Sections 3.4.1 and 3.4.2 for further\n\
    \   discussion.\n   On one hand, the Monitoring Plane and Forwarding Plane (see\
    \ Figure 1)\n   need to be looked at as two independent blocks, and the performance\n\
    \   of each measured independently.  On the other hand, when measuring\n   the\
    \ performance of one, the status and performance of the other MUST\n   be known\
    \ and benchmarked when both are present.\n"
- title: 3.4.1.  Monitoring Plane Performance Measurement
  contents:
  - "3.4.1.  Monitoring Plane Performance Measurement\n   The Flow Monitoring Throughput\
    \ MUST be (and can only be) measured\n   with one packet per Flow as specified\
    \ in Section 5.  This traffic\n   type represents the most demanding traffic from\
    \ the Flow monitoring\n   point of view and will exercise the Monitoring Plane\
    \ (see Figure 1)\n   of the DUT most.  In this scenario, every packet seen by\
    \ the DUT\n   creates a new Cache entry and forces the DUT to fill the Cache\n\
    \   instead of just updating the packet and byte counters of an already\n   existing\
    \ Cache entry.\n   The exit criteria for the Flow Monitoring Throughput measurement\
    \ are\n   one of the following (e.g., if any of the conditions are reached):\n\
    \   a. The Flow Export Rate at which the DUT starts to lose Flow\n      Information\
    \ or the Flow Information gets corrupted.\n   b. The Flow Export Rate at which\
    \ the Forwarding Plane starts to drop\n      or corrupt packets (if the Forwarding\
    \ Plane is present).\n   A corrupted packet here means packet header corruption\
    \ (resulting in\n   the cyclic redundancy check failure on the transmission level\
    \ and\n   consequent packet drop) or packet payload corruption, which leads to\n\
    \   lost application-level data.\n"
- title: 3.4.2.  Forwarding Plane Performance Measurement
  contents:
  - "3.4.2.  Forwarding Plane Performance Measurement\n   The Forwarding Plane (see\
    \ Figure 1) performance metrics are fully\n   specified by [RFC1242] and MUST\
    \ be measured accordingly.  A detailed\n   traffic analysis (see below) with relation\
    \ to Flow monitoring MUST be\n   performed prior of any [RFC2544] measurements.\
    \  Most importantly, the\n   Flow Export Rate caused by the test traffic during\
    \ an [RFC2544]\n   measurement MUST be known and reported.\n   The required test\
    \ traffic analysis mainly involves the following:\n   a. Which packet header parameters\
    \ are incremented or changed during\n      traffic generation.\n   b. Which Flow\
    \ Keys the Flow monitoring configuration uses to generate\n      Flow Records.\n\
    \   The performance metrics described in RFC 1242 can be measured in one\n   of\
    \ the three modes:\n   a. As a baseline of forwarding performance without Flow\
    \ monitoring.\n   b. At a certain level of Flow monitoring activity specified\
    \ by a Flow\n      Export Rate lower than the Flow Monitoring Throughput.\n  \
    \ c. At the maximum level of Flow monitoring performance, e.g., using\n      traffic\
    \ conditions representing a measurement of Flow Monitoring\n      Throughput.\n\
    \   The above mentioned measurement mode in point a.  represents an\n   ordinary\
    \ Throughput measurement specified in RFC 2544.  The details\n   of how to set\
    \ up the measurements in points b. and c. are given in\n   Section 6.\n"
- title: 4.  Measurement Setup
  contents:
  - "4.  Measurement Setup\n   This section concentrates on the setup of all components\
    \ necessary to\n   perform Flow monitoring performance measurement.  The recommended\n\
    \   reporting format can be found in Appendix A.\n"
- title: 4.1.  Measurement Topology
  contents:
  - "4.1.  Measurement Topology\n   The measurement topology described in this section\
    \ is applicable only\n   to the measurements with packet forwarding network devices.\
    \  The\n   possible architectures and implementation of the traffic monitoring\n\
    \   appliances (see Section 3.2) are too various to be covered in this\n   document.\
    \  Instead of the Forwarding Plane, these appliances\n   generally have some kind\
    \ of feed (e.g., an optical splitter, an\n   interface sniffing traffic on a shared\
    \ media, or an internal channel\n   on the DUT providing a copy of the traffic)\
    \ providing the information\n   about the traffic necessary for Flow monitoring\
    \ analysis.  The\n   measurement topology then needs to be adjusted to the appliance\n\
    \   architecture and MUST be part of the measurement report.\n   The measurement\
    \ setup is identical to that used by [RFC2544], with\n   the addition of a Collector\
    \ to analyze the Flow Export (see Figure\n   2).\n   In the measurement topology\
    \ with unidirectional traffic, the traffic\n   is transmitted from the sender\
    \ to the receiver through the DUT.  The\n   received traffic is analyzed to check\
    \ that it is identical to the\n   generated traffic.\n   The ideal way to implement\
    \ the measurement is by using a single\n   device to provide the sender and receiver\
    \ capabilities with one\n   sending port and one receiving port.  This allows\
    \ for an easy check\n   as to whether all the traffic sent by the sender was re-transmitted\n\
    \   by the DUT and received at the receiver.\n                       +-----------+\n\
    \                       |           |\n                       | Collector |\n\
    \                       |           |\n                       |Flow Record|\n\
    \                       | analysis  |\n                       |           |\n\
    \                       +-----------+\n                             ^\n      \
    \                       | Flow Export\n                             |\n      \
    \                       | Export Interface\n   +--------+         +-------------+\
    \          +----------+\n   |        |         |             |          | traffic\
    \  |\n   | traffic|      (*)|             |          | receiver |\n   | sender\
    \ |-------->|     DUT     |--------->|          |\n   |        |         |   \
    \          |          | traffic  |\n   |        |         |             |    \
    \      | analysis |\n   +--------+         +-------------+          +----------+\n\
    \   Figure 2.  Measurement Topology with Unidirectional Traffic\n   The DUT's\
    \ export interface (connecting the Collector) MUST NOT be\n   used for forwarding\
    \ test traffic but only for the Flow Export data\n   containing the Flow Records.\
    \  In all measurements, the export\n   interface MUST have enough bandwidth to\
    \ transmit Flow Export data\n   without congestion.  In other words, the export\
    \ interface MUST NOT be\n   a bottleneck during the measurement.\n   The traffic\
    \ receiver MUST have sufficient resources to measure all\n   test traffic transferred\
    \ successfully by the DUT.  This may be\n   checked through measurements with\
    \ and without the DUT.\n   Note that more complex topologies might be required.\
    \  For example, if\n   the effects of enabling Flow monitoring on several interfaces\
    \ is of\n   concern, or the maximum speed of media transmission is less than the\n\
    \   DUT Throughput, the topology can be expanded with several input and\n   output\
    \ ports.  However, the topology MUST be clearly written in the\n   measurement\
    \ report.\n"
- title: 4.2.  Baseline DUT Setup
  contents:
  - "4.2.  Baseline DUT Setup\n   The baseline DUT setup and the way the setup is\
    \ reported in the\n   measurement results is fully specified in Section 7 of [RFC2544].\n\
    \   The baseline DUT configuration might include other features, like\n   packet\
    \ filters or quality of service on the input and/or output\n   interfaces, if\
    \ there is the need to study Flow monitoring in the\n   presence of those features.\
    \  The Flow monitoring measurement\n   procedures do not change in this case.\
    \  Consideration needs to be\n   made when evaluating measurement results to take\
    \ into account the\n   possible change of packet rates offered to the DUT and\
    \ Flow\n   monitoring after application of the features to the configuration.\n\
    \   Any such feature configuration MUST be part of the measurement\n   report.\n\
    \   The DUT export interface (see Figure 2) SHOULD be configured with\n   sufficient\
    \ output buffers to avoid dropping the Flow Export data due\n   to a simple lack\
    \ of resources in the interface hardware.  The applied\n   configuration MUST\
    \ be part of the measurement report.\n   The test designer has the freedom to\
    \ run tests in multiple\n   configurations.  It is therefore possible to run both\
    \ non-production\n   and real deployment configurations in the laboratory, according\
    \ to\n   the needs of the tester.  All configurations MUST be part of the\n  \
    \ measurement report.\n"
- title: 4.3.  Flow Monitoring Configuration
  contents:
  - "4.3.  Flow Monitoring Configuration\n   This section covers all of the aspects\
    \ of the Flow monitoring\n   configuration necessary on the DUT in order to perform\
    \ the Flow\n   monitoring performance measurement.  The necessary configuration\
    \ has\n   a number of components (see [RFC5470]), namely Observation Points,\n\
    \   Metering Process, and Exporting Process as detailed below.\n   The DUT MUST\
    \ support the Flow monitoring architecture as specified by\n   [RFC5470].  The\
    \ DUT SHOULD support IPFIX [RFC5101] to allow a\n   meaningful results comparison\
    \ due to the standardized export\n   protocol.\n   The DUT configuration, any\
    \ existing Cache, and Cache entries MUST be\n   erased before the application\
    \ of any new configuration for the\n   currently executed measurement.\n"
- title: 4.3.1.  Observation Points
  contents:
  - "4.3.1.  Observation Points\n   The Observation Points specify the interfaces\
    \ and direction in which\n   the Flow monitoring traffic analysis is to be performed.\n\
    \   The (*) in Figure 2 designates the Observation Points in the default\n   configuration.\
    \  Other DUT Observation Points might be configured\n   depending on the specific\
    \ measurement needs as follows:\n   a. ingress port/ports only\n   b. egress port/ports\
    \ only\n   c. both ingress and egress\n   This test topology corresponds to unidirectional\
    \ traffic only with\n   traffic analysis performed on the input and/or output\
    \ interface.\n   Testing with bidirectional traffic is discussed in Appendix B.\n\
    \   Generally, the placement of Observation Points depends upon the\n   position\
    \ of the DUT in the deployed network and the purpose of Flow\n   monitoring. \
    \ See [RFC3917] for detailed discussion.  The measurement\n   procedures are otherwise\
    \ the same for all these possible\n   configurations.\n   In the case of both\
    \ ingress and egress Flow monitoring being enabled\n   on one DUT, the resulting\
    \ analysis should consider that each Flow\n   will be represented in the DUT Cache\
    \ by two Flow Records (one for\n   each direction).  Therefore, the Flow Export\
    \ will also contain those\n   two Flow Records.\n   If more than one Observation\
    \ Point for one direction is defined on\n   the DUT, the traffic passing through\
    \ each of the Observation Points\n   MUST be configured in such a way that it\
    \ creates Flows and Flow\n   Records that do not overlap.  Each packet (or set\
    \ of packets if\n   measuring more than one packet per Flow - see Section 6.3.1)\
    \ sent to\n   the DUT on different ports still creates one unique Flow Record.\n\
    \   The specific Observation Points and associated monitoring direction\n   MUST\
    \ be included as part of the measurement report.\n"
- title: 4.3.2.  Metering Process
  contents:
  - "4.3.2.  Metering Process\n   The Metering Process MUST be enabled in order to\
    \ create the Cache in\n   the DUT and configure the Cache related parameters.\n\
    \   The Cache Size available to the DUT MUST be known and taken into\n   account\
    \ when designing the measurement as specified in Section 5.\n   Typically, the\
    \ Cache Size will be present in the \"show\" commands of\n   the Flow monitoring\
    \ process, in either the actual configuration or\n   the product documentation\
    \ from the DUT vendor.  The Cache Size MUST\n   have a fixed value for the entire\
    \ duration of the measurement.  This\n   method is not applicable to benchmarking\
    \ any Flow monitoring\n   applications that dynamically change their Cache Size.\n\
    \   The configuration of the Metering Process MUST be included as part of\n  \
    \ the measurement report.  For example, when a Flow monitoring\n   implementation\
    \ uses timeouts to expire entries from the Cache, the\n   Cache's Idle and Active\
    \ Timeouts MUST be known and taken into account\n   when designing the measurement\
    \ as specified in Section 5.  If the\n   Flow monitoring implementation allows\
    \ only timeouts equal to zero\n   (e.g., immediate timeout or non-existent Cache),\
    \ then the measurement\n   conditions in Section 5 are fulfilled inherently without\
    \ any\n   additional configuration.  The DUT simply exports information about\n\
    \   every packet immediately, subject to the Flow Export Rate definition\n   in\
    \ Section 2.2.5.\n   If the Flow monitoring implementation allows configuration\
    \ of\n   multiple Metering Processes on a single DUT, the exact configuration\n\
    \   of each process MUST be included in the measurement report.  Only\n   measurements\
    \ with the same number of Metering Processes can be\n   compared.\n   The Cache\
    \ Size and the Idle and Active Timeouts MUST be included in\n   the measurement\
    \ report.\n"
- title: 4.3.3.  Exporting Process
  contents:
  - "4.3.3.  Exporting Process\n   The Exporting Process MUST be configured in order\
    \ to export the Flow\n   Record data to the Collector.\n   The Exporting Process\
    \ MUST be configured in such a way that all Flow\n   Records from all configured\
    \ Observation Points are exported towards\n   the Collector, after the expiration\
    \ policy, which is composed of the\n   Idle and Active Timeouts and Cache Size.\n\
    \   The Exporting Process SHOULD be configured with IPFIX [RFC5101] as\n   the\
    \ protocol used to format the Flow Export data.  If the Flow\n   monitoring implementation\
    \ does not support IPFIX, proprietary\n   protocols MAY be used.  Only measurements\
    \ with the same export\n   protocol SHOULD be compared since the protocols may\
    \ differ in their\n   export efficiency.  The export efficiency might also be\
    \ influenced by\n   the Template Record used and the ordering of the individual\
    \ export\n   fields within the template.\n   The Template Records used by the\
    \ tested implementations SHOULD be\n   analyzed and documented as part of the\
    \ measurement report.  Ideally,\n   only tests with same Template Records should\
    \ be compared.\n   Various Flow monitoring implementations might use different\
    \ default\n   values regarding the export of Control Information [RFC5470];\n\
    \   therefore, the Flow Export corresponding to Control Information\n   SHOULD\
    \ be analyzed and reported as a separate item on the measurement\n   report. \
    \ The export of Control Information SHOULD always be\n   configured consistently\
    \ across all testing and configured to the\n   minimal possible value.  Ideally,\
    \ just one set of Control Information\n   should be exported during each measurement.\
    \  Note that Control\n   Information includes options and Template Records [RFC5470].\n\
    \   Section 10 of [RFC5101] and Section 8.1 of [RFC5470] discuss the\n   possibility\
    \ of deploying various transport-layer protocols to deliver\n   Flow Export data\
    \ from the DUT to the Collector.  The selected\n   protocol MUST be included in\
    \ the measurement report.  Only benchmarks\n   with the same transport-layer protocol\
    \ SHOULD be compared.  If the\n   Flow monitoring implementation allows the use\
    \ of multiple transport-\n   layer protocols, each of the protocols SHOULD be\
    \ measured in a\n   separate measurement run and the results reported independently\
    \ in\n   the measurement report.\n   If a reliable transport protocol is used\
    \ for the transmission of the\n   Flow Export data from the DUT, the configuration\
    \ of the Transport\n   session MUST allow for non-blocking data transmission.\
    \  An example of\n   parameters to look at would be the TCP window size and maximum\n\
    \   segment size (MSS).  The most substantial transport-layer parameters\n   should\
    \ be included in the measurement report.\n"
- title: 4.3.4.  Flow Records
  contents:
  - "4.3.4.  Flow Records\n   A Flow Record contains information about a specific\
    \ Flow observed at\n   an Observation Point.  A Flow Record contains measured\
    \ properties of\n   the Flow (e.g., the total number of bytes for all the Flow\
    \ packets)\n   and usually characteristic properties of the Flow (e.g., source\
    \ IP\n   address).\n   The Flow Record definition is implementation specific.\
    \  A Flow\n   monitoring implementation might allow for only a fixed Flow Record\n\
    \   definition, based on the most common IP parameters in the IPv4 or\n   IPv6\
    \ headers -- for example, source and destination IP addresses, IP\n   protocol\
    \ numbers, or transport-level port numbers.  Another\n   implementation might\
    \ allow the user to define their own arbitrary\n   Flow Record to monitor the\
    \ traffic.  The only requirement for the\n   measurements defined in this document\
    \ is the need for a large\n   number of Cache entries in the Cache.  The Flow\
    \ Keys needed to\n   achieve that will typically be source and destination IP\
    \ addresses\n   and transport-level port numbers.\n   The recommended full IPv4,\
    \ IPv6, or MPLS Flow Record is shown below.\n   The IP address indicates either\
    \ IPv4 or IPv6, depending on the\n   traffic type being tested.  The Flow Record\
    \ configuration is Flow\n   monitoring implementation-specific; therefore, the\
    \ examples below\n   cannot provide an exact specification of individual entries\
    \ in each\n   Flow Record.  The best set of key fields to use is left to the test\n\
    \   designer using the capabilities of the specific Flow monitoring\n   implementation.\n\
    \      Flow Keys:\n         Source IP address\n         Destination IP address\n\
    \         MPLS label (for MPLS traffic type only)\n         Transport-layer source\
    \ port\n         Transport-layer destination port\n         IP protocol number\
    \ (IPv6 next header)\n         IP type of service (IPv6 traffic class)\n     \
    \ Other fields:\n         Packet counter\n         Byte counter\n      Table 1:\
    \ Recommended Configuration\n   If the Flow monitoring allows for user-defined\
    \ Flow Records, the\n   minimal Flow Record configurations allowing large numbers\
    \ of Cache\n   entries are, for example:\n      Flow Keys:\n         Source IP\
    \ address\n         Destination IP address\n      Other fields:\n         Packet\
    \ counter\n   or:\n      Flow Keys:\n         Transport-layer source port\n  \
    \       Transport-layer destination port\n      Other fields:\n         Packet\
    \ counter\n      Table 2: User-Defined Configuration\n   The Flow Record configuration\
    \ MUST be clearly noted in the\n   measurement report.  The Flow Monitoring Throughput\
    \ measurements on\n   different DUTs, or different Flow monitoring implementations,\
    \ MUST be\n   only compared for exactly the same Flow Record configuration.\n"
- title: 4.3.5.  Flow Monitoring with Multiple Configurations
  contents:
  - "4.3.5.  Flow Monitoring with Multiple Configurations\n   The Flow monitoring\
    \ architecture as specified in [RFC5470] allows for\n   more complicated configurations\
    \ with multiple Metering and Exporting\n   Processes on a single DUT.  Depending\
    \ on the particular Flow\n   monitoring implementation, it might affect the measured\
    \ DUT\n   performance.  Therefore, the measurement report should contain\n   information\
    \ about how many Metering and Exporting Processes were\n   configured on the DUT\
    \ for the selected Observation Points.\n   The examples of such possible configurations\
    \ are:\n   a. Several Observation Points with a single Metering Process and a\n\
    \      single Exporting Process.\n   b. Several Observation Points, each with\
    \ one Metering Process but all\n      using just one instance of Exporting Process.\n\
    \   c. Several Observation Points with per-Observation-Point Metering\n      Process\
    \ and Exporting Process.\n"
- title: 4.3.6.  MPLS Measurement Specifics
  contents:
  - "4.3.6.  MPLS Measurement Specifics\n   The Flow Record configuration for measurements\
    \ with MPLS encapsulated\n   traffic SHOULD contain the MPLS label.  For this\
    \ document's purposes,\n   \"MPLS Label\" is the entire 4 byte MPLS header.  Typically,\
    \ the label\n   of the interest will be at the top of the label stack, but this\n\
    \   depends on the details of the MPLS test setup.\n   The tester SHOULD ensure\
    \ that the data received by the Collector\n   contains the expected MPLS labels.\n\
    \   The MPLS forwarding performance document [RFC5695] specifies a number\n  \
    \ of possible MPLS label operations to test.  The Observation Points\n   MUST\
    \ be placed on all the DUT test interfaces where the particular\n   MPLS label\
    \ operation takes place.  The performance measurements\n   SHOULD be performed\
    \ with only one MPLS label operation at the time.\n   The DUT MUST be configured\
    \ in such a way that all the traffic is\n   subject to the measured MPLS label\
    \ operation.\n"
- title: 4.4.  Collector
  contents:
  - "4.4.  Collector\n   The Collector is needed in order to capture the Flow Export\
    \ data,\n   which allows the Flow Monitoring Throughput to be measured.\n   The\
    \ Collector can be used exclusively as a capture device, providing\n   just hexadecimal\
    \ format of the Flow Export data.  In such a case, it\n   does not need to have\
    \ any additional Flow Export decoding\n   capabilities and all the decoding is\
    \ done offline.\n   However, if the Collector is also used to decode the Flow\
    \ Export\n   data, it SHOULD support IPFIX [RFC5101] for meaningful results\n\
    \   analysis.  If proprietary Flow Export is deployed, the Collector MUST\n  \
    \ support it; otherwise, the Flow Export data analysis is not possible.\n   The\
    \ Collector MUST be capable of capturing the export packets sent\n   from the\
    \ DUT at the full rate without losing any of them.  When using\n   reliable transport\
    \ protocols (see also Section 4.3.3) to transmit\n   Flow Export data, the Collector\
    \ MUST have sufficient resources to\n   guarantee non-blocking data transmission\
    \ on the transport-layer\n   session.\n   During the analysis, the Flow Export\
    \ data needs to be decoded and the\n   received Flow Records counted.\n   The\
    \ capture buffer MUST be cleared at the beginning of each\n   measurement.\n"
- title: 4.5.  Sampling
  contents:
  - "4.5.  Sampling\n   Packet sampling and flow sampling is out of the scope of this\n\
    \   document.  This document applies to situations without packet, flow,\n   or\
    \ export sampling.\n"
- title: 4.6.  Frame Formats
  contents:
  - "4.6.  Frame Formats\n   Flow monitoring itself is not dependent in any way on\
    \ the media used\n   on the input and output ports.  Any media can be used as\
    \ supported by\n   the DUT and the test equipment.  This applies both to data\
    \ forwarding\n   interfaces and to the export interface (see Figure 2).\n   At\
    \ the time of this writing, the most common transmission media and\n   corresponding\
    \ frame formats (e.g., Ethernet, Packet over SONET) for\n   IPv4, IPv6, and MPLS\
    \ traffic are specified within [RFC2544],\n   [RFC5180], and [RFC5695].\n   The\
    \ presented frame formats MUST be recorded in the measurement\n   report.\n"
- title: 4.7.  Frame Sizes
  contents:
  - "4.7.  Frame Sizes\n   Frame sizes of the traffic to be analyzed by the DUT are\
    \ specified in\n   Section 9 of [RFC2544] for Ethernet type interfaces (64, 128,\
    \ 256,\n   1024, 1280, 1518 bytes) and in Section 5 of [RFC5180] for Packet over\n\
    \   SONET interfaces (47, 64, 128, 256, 1024, 1280, 1518, 2048, 4096\n   bytes).\n\
    \   When measuring with large frame sizes, care needs to be taken to\n   avoid\
    \ any packet fragmentation on the DUT interfaces that could\n   negatively affect\
    \ measured performance values.\n   The presented frame sizes MUST be recorded\
    \ in the measurement report.\n"
- title: 4.8.  Flow Export Data Packet Sizes
  contents:
  - "4.8.  Flow Export Data Packet Sizes\n   The Flow monitoring performance will\
    \ be affected by the packet size\n   that the particular implementation uses to\
    \ transmit Flow Export data\n   to the Collector.  The used packet size MUST be\
    \ part of the\n   measurement report and only measurements with same packet sizes\n\
    \   SHOULD be compared.\n   The DUT export interface (see Figure 2) maximum transmission\
    \ unit\n   (MTU) SHOULD be configured to the largest available value for the\n\
    \   media.  The Flow Export MTU MUST be recorded in the measurement\n   report.\n"
- title: 4.9.  Illustrative Test Setup Examples
  contents:
  - "4.9.  Illustrative Test Setup Examples\n   The examples below represent a hypothetical\
    \ test setup to clarify the\n   use of Flow monitoring parameters and configuration,\
    \ together with\n   traffic parameters to test Flow monitoring.  The actual benchmarking\n\
    \   specifications are in Sections 5 and 6.\n"
- title: 4.9.1.  Example 1 - Idle Timeout Flow Expiration
  contents:
  - "4.9.1.  Example 1 - Idle Timeout Flow Expiration\n   The traffic generator sends\
    \ 1000 packets per second in 10000 defined\n   streams, each stream identified\
    \ by a unique destination IP address.\n   Therefore, each stream has a packet\
    \ rate of 0.1 packets per second.\n   The packets are sent in a round-robin fashion\
    \ (stream 1 to 10000)\n   while incrementing the destination IP address for each\
    \ sent packet.\n   After a packet for stream 10000 is sent, the next packet destination\n\
    \   IP address corresponds to stream 1's address again.\n   The configured Cache\
    \ Size is 20000 Flow Records.  The configured\n   Active Timeout is 100 seconds,\
    \ and the Idle Timeout is 5 seconds.\n   Flow monitoring on the DUT uses the destination\
    \ IP address as the\n   Flow Key.\n   A packet with the destination IP address\
    \ equal to A is sent every 10\n   seconds, so the Cache entry is refreshed in\
    \ the Cache every 10\n   seconds.  However, the Idle Timeout is 5 seconds, so\
    \ the Cache\n   entries will expire from the Cache due to the Idle Timeout, and\
    \ when\n   a new packet is sent with the same IP address A, it will create a new\n\
    \   entry in the Cache.  This behavior depends upon the design and\n   efficiency\
    \ of the Cache ager, and incidences of multi-packet flows\n   observed during\
    \ this test should be noted.\n   The measured Flow Export Rate in this case will\
    \ be 1000 Flow Records\n   per second since every single sent packet will always\
    \ create a new\n   Cache entry and 1000 packets per second are sent.\n   The expected\
    \ number of Cache entries in the Cache during the whole\n   measurement is around\
    \ 5000.  It corresponds to the Idle Timeout being\n   5 seconds; during those\
    \ five seconds, 5000 entries are created.  This\n   expectation might change in\
    \ real measurement setups with large Cache\n   Sizes and a high packet rate where\
    \ the DUT's actual export rate might\n   be limited and lower than the Flow Expiration\
    \ activity caused by the\n   traffic offered to the DUT.  This behavior is entirely\n\
    \   implementation-specific.\n"
- title: 4.9.2.  Example 2 - Active Timeout Flow Expiration
  contents:
  - "4.9.2.  Example 2 - Active Timeout Flow Expiration\n   The traffic generator\
    \ sends 1000 packets per second in 100 defined\n   streams, each stream identified\
    \ by a unique destination IP address.\n   Each stream has a packet rate of 10\
    \ packets per second.  The packets\n   are sent in a round-robin fashion (stream\
    \ 1 to 100) while\n   incrementing the destination IP address for each sent packet.\
    \  After\n   a packet for stream 100 is sent, the next packet destination IP\n\
    \   address corresponds to stream 1's address again.\n   The configured Cache\
    \ Size is 1000 Flow Records.  The configured\n   Active Timeout is 100 seconds.\
    \  The Idle Timeout is 10 seconds.\n   Flow monitoring on the DUT uses the destination\
    \ IP address as the\n   Flow Key.\n   After the first 100 packets are sent, 100\
    \ Cache entries will have\n   been created in the Flow monitoring Cache.  The\
    \ subsequent packets\n   will be counted against the already created Cache entries\
    \ since the\n   destination IP address (Flow Key) has already been seen by the\
    \ DUT\n   (provided the Cache entries did not expire yet as described below).\n\
    \   A packet with the destination IP address equal to A is sent every 0.1\n  \
    \ second, so the Cache entry is refreshed in the Cache every 0.1\n   second, while\
    \ the Idle Timeout is 10 seconds.  In this case, the\n   Cache entries will not\
    \ expire until the Active Timeout expires, e.g.,\n   they will expire every 100\
    \ seconds and then the Cache entries will be\n   created again.\n   If the test\
    \ measurement time is 50 seconds from the start of the\n   traffic generator,\
    \ then the measured Flow Export Rate is 0 since\n   during this period nothing\
    \ expired from the Cache.\n   If the test measurement time is 100 seconds from\
    \ the start of the\n   traffic generator, then the measured Flow Export Rate is\
    \ 1 Flow\n   Record per second.\n   If the test measurement time is 290 seconds\
    \ from the start of the\n   traffic generator, then the measured Flow Export Rate\
    \ is 2/3 of a\n   Flow Record per second since the Cache expired the same number\
    \ of\n   Flows twice (100) during the 290-seconds period.\n"
- title: 5.  Flow Monitoring Throughput Measurement Methodology
  contents:
  - "5.  Flow Monitoring Throughput Measurement Methodology\n   Objective:\n     \
    \ To measure the Flow monitoring performance in a manner that is\n      comparable\
    \ between different Flow monitoring implementations.\n   Metric definition:\n\
    \      Flow Monitoring Throughput - see Section 3.\n   Discussion:\n      Different\
    \ Flow monitoring implementations might choose to handle\n      Flow Export from\
    \ a partially empty Cache differently than in the\n      case of the Cache being\
    \ fully occupied.  Similarly, software- and\n      hardware-based DUTs can handle\
    \ the same situation as stated above\n      differently.  The purpose of the benchmark\
    \ measurement in this\n      section is to define one measurement procedure covering\
    \ all the\n      possible behaviors.\n      The only criteria is to measure as\
    \ defined here until Flow Record\n      or packet losses are seen.  The decision\
    \ whether to dive deeper\n      into the conditions under which the packet losses\
    \ happen is left\n      to the tester.\n"
- title: 5.1.  Flow Monitoring Configuration
  contents:
  - "5.1.  Flow Monitoring Configuration\n   Cache Size\n      Cache Size configuration\
    \ is dictated by the expected position of\n      the DUT in the network and by\
    \ the chosen Flow Keys of the Flow\n      Record.  The number of unique sets of\
    \ Flow Keys that the traffic\n      generator (sender) provides should be multiple\
    \ times larger than\n      the Cache Size.  This ensures that the existing Cache\
    \ entries are\n      never updated by a packet from the sender before the particular\n\
    \      Flow Expiration and Flow Export.  This condition is simple to\n      fulfill\
    \ with linearly incremented Flow Keys (for example, IP\n      addresses or transport-layer\
    \ ports) where the range of values must\n      be larger than the Cache Size.\
    \  When randomized traffic generation\n      is in use, the generator must ensure\
    \ that the same Flow Keys are\n      not repeated within a range of randomly generated\
    \ values.\n      The Cache Size MUST be known in order to define the measurement\n\
    \      circumstances properly.  Typically, the Cache Size will be found\n    \
    \  using the \"show\" commands of the Flow monitoring implementation in\n    \
    \  the actual configuration or in the product documentation from the\n      vendor.\n\
    \   Idle Timeout\n      Idle Timeout is set (if configurable) to the minimum possible\n\
    \      value on the DUT.  This ensures that the Cache entries are expired\n  \
    \    as soon as possible and exported out of the DUT Cache.  It MUST be\n    \
    \  known in order to define the measurement circumstances completely\n      and\
    \ equally across implementations.\n   Active Timeout\n      Active Timeout is\
    \ set (if configurable) to a value equal to or\n      higher than the Idle Timeout.\
    \  It MUST be known in order to define\n      the measurement circumstances completely\
    \ and equally across\n      implementations.\n   Flow Keys Definition:\n     \
    \ The test needs large numbers of unique Cache entries to be created\n      by\
    \ incrementing values of one or several Flow Keys.  The number of\n      unique\
    \ combinations of Flow Keys values SHOULD be several times\n      larger than\
    \ the DUT Cache Size.  This makes sure that any incoming\n      packet will never\
    \ refresh any already existing Cache entry.\n   The availability of Cache Size,\
    \ Idle Timeout, and Active Timeout as\n   configuration parameters is implementation-specific.\
    \  If the Flow\n   monitoring implementation does not support these parameters,\
    \ the test\n   possibilities, as specified by this document, are restricted. \
    \ Some\n   testing might be viable if the implementation follows the guidance\n\
    \   provided in the [IPFIX-CONFIG] document and is considered on a case-\n   by-case\
    \ basis.\n"
- title: 5.2.  Traffic Configuration
  contents:
  - "5.2.  Traffic Configuration\n   Traffic Generation\n      The traffic generator\
    \ needs to increment the Flow Keys values with\n      each sent packet.  This\
    \ way, each packet represents one Cache\n      entry in the DUT Cache.\n     \
    \ A particular Flow monitoring implementation might choose to deploy\n      a\
    \ hashing mechanism to match incoming data packets to a certain\n      Flow. \
    \ In such a case, the combination of how the traffic is\n      constructed and\
    \ the hashing might influence the DUT Flow\n      monitoring performance.  For\
    \ example, if IP addresses are used as\n      Flow Keys, this means there could\
    \ be a performance difference for\n      linearly incremented addresses (in ascending\
    \ or descending order)\n      as opposed to IP addresses randomized in a certain\
    \ range.  If\n      randomized IP address sequences are used, then the traffic\n\
    \      generator needs to be able to reproduce the randomization (e.g.,\n    \
    \  the same set of IP addresses sent in the same order in different\n      test\
    \ runs) in order to compare various DUTs and Flow monitoring\n      implementations.\n\
    \      If the test traffic rate is below the maximum media rate for the\n    \
    \  particular packet size, the traffic generator MUST send the\n      packets\
    \ in equidistant time intervals.  Traffic generators that do\n      not fulfill\
    \ this condition MUST NOT and cannot be used for the\n      Flow Monitoring Throughput\
    \ measurement.  An example of this\n      behavior is if the test traffic rate\
    \ is one half of the media\n      rate.  The traffic generator achieves this rate\
    \ by sending packets\n      each half of each second at the full media rate and\
    \ sending\n      nothing for the second half of each second.  In such conditions,\n\
    \      it would be impossible to distinguish if the DUT failed to handle\n   \
    \   the Flows due to the shortage of input buffers during the burst or\n     \
    \ due to the limits in the Flow monitoring performance.\n   Measurement Duration\n\
    \      The measurement duration (e.g., how long the test traffic is sent\n   \
    \   to the DUT) MUST be at least two-times longer than the Idle\n      Timeout;\
    \ otherwise, no Flow Export would be seen.  The measurement\n      duration SHOULD\
    \ guarantee that the number of Cache entries created\n      during the measurement\
    \ exceeds the available Cache Size.\n"
- title: 5.3.  Cache Population
  contents:
  - "5.3.  Cache Population\n   The product of the Idle Timeout and the packet rate\
    \ offered to the\n   DUT (Cache population) during one measurement determines\
    \ the total\n   number of Cache entries in the DUT Cache during the measurement\n\
    \   (while taking into account some margin for dynamic behavior during\n   high\
    \ DUT loads when processing the Flows).\n   The Flow monitoring implementation\
    \ might behave differently depending\n   on the relation of the Cache population\
    \ to the available Cache Size\n   during the measurement.  This behavior is fully\
    \ implementation-\n   specific and will also be influenced if the DUT architecture\
    \ is\n   software based or hardware based.\n   The Cache population (if it is\
    \ lower or higher than the available\n   Cache Size) during a particular benchmark\
    \ measurement SHOULD be\n   noted, and mainly only measurements with the same\
    \ Cache population\n   SHOULD be compared.\n"
- title: 5.4.  Measurement Time Interval
  contents:
  - "5.4.  Measurement Time Interval\n   The measurement time interval is the time\
    \ value that is used to\n   calculate the measured Flow Export Rate from the captured\
    \ Flow Export\n   data.  It is obtained as specified below.\n   RFC 2544 specifies,\
    \ with the precision of the packet beginning and\n   ending, the time intervals\
    \ to be used to measure the DUT time\n   characteristics.  In the case of a Flow\
    \ Monitoring Throughput\n   measurement, the start and stop time needs to be clearly\
    \ defined, but\n   the granularity of this definition can be limited to just marking\
    \ the\n   start and stop time with the start and stop of the traffic generator.\n\
    \   This assumes that the traffic generator and DUT are collocated and\n   the\
    \ variance in transmission delay from the generator to the DUT is\n   negligible\
    \ as compared to the total time of traffic generation.\n   The measurement start\
    \ time:\n      the time when the traffic generator is started\n   The measurement\
    \ stop time: the time when the traffic generator is\n      stopped\n   The measurement\
    \ time interval is then calculated as the difference\n   (stop time) - (start\
    \ time) - (Idle Timeout).\n   This supposes that the Cache Size is large enough\
    \ that the time\n   needed to fill it with Cache entries is longer than the Idle\
    \ Timeout.\n   Otherwise, the time needed to fill the Cache needs to be used to\n\
    \   calculate the measurement time interval in place of the Idle Timeout.\n  \
    \ Instead of measuring the absolute values of the stop and start times,\n   it\
    \ is possible to set up the traffic generator to send traffic for a\n   certain\
    \ predefined time interval, which is then used in the above\n   definition instead\
    \ of the difference (stop time) - (start time).\n   The Collector MUST stop collecting\
    \ the Flow Export data at the\n   measurement stop time.\n   The Idle Timeout\
    \ (or the time needed to fill the Cache) causes delay\n   of the Flow Export data\
    \ behind the test traffic that is analyzed by\n   the DUT.  For example, if the\
    \ traffic starts at time point X, Flow\n   Export will start only at the time\
    \ point X + Idle Timeout (or X +\n   time to fill the Cache).  Since Flow Export\
    \ capture needs to stop\n   with the traffic (because that's when the DUT stops\
    \ processing the\n   Flows at the given rate), the time interval during which\
    \ the DUT kept\n   exporting data is shorter by the Idle Timeout than the time\
    \ interval\n   when the test traffic was sent from the traffic generator to the\
    \ DUT.\n"
- title: 5.5.  Flow Export Rate Measurement
  contents:
  - "5.5.  Flow Export Rate Measurement\n   The Flow Export Rate needs to be measured\
    \ in two consequent steps.\n   The purpose of the first step (point a. below)\
    \ is to gain the actual\n   value for the rate; the second step (point b. below)\
    \ needs to be done\n   in order to verify that no Flow Record are dropped during\
    \ the\n   measurement:\n   a. In the first step, the captured Flow Export data\
    \ MUST be analyzed\n      only for the capturing interval (measurement time interval)\
    \ as\n      specified in Section 5.4.  During this period, the DUT is forced\n\
    \      to process Cache entries at the rate the packets are sent.  When\n    \
    \  traffic generation finishes, the behavior when emptying the Cache\n      is\
    \ completely implementation-specific; therefore, the Flow Export\n      data from\
    \ this period cannot be used for benchmarking.\n   b. In the second step, all\
    \ the Flow Export data from the DUT MUST be\n      captured in order to determine\
    \ the Flow Record losses.  It needs\n      to be taken into account that especially\
    \ when large Cache Sizes\n      (in order of magnitude of hundreds of thousands\
    \ of entries and\n      higher) are in use, the Flow Export can take many multiples\
    \ of\n      Idle Timeout to empty the Cache after the measurement.  This\n   \
    \   behavior is completely implementation-specific.\n   If the Collector has the\
    \ capability to redirect the Flow Export data\n   after the measurement time interval\
    \ into a different capture buffer\n   (or time stamp the received Flow Export\
    \ data after that), this can be\n   done in one step.  Otherwise, each Flow Monitoring\
    \ Throughput\n   measurement at a certain packet rate needs to be executed twice\
    \ --\n   once to capture the Flow Export data just for the measurement time\n\
    \   interval (to determine the actual Flow Export Rate) and a second time\n  \
    \ to capture all Flow Export data in order to determine Flow Record\n   losses\
    \ at that packet rate.\n   At the end of the measurement time interval, the DUT\
    \ might still be\n   processing Cache entries that belong to the Flows expired\
    \ from the\n   Cache before the end of the interval.  These Flow Records might\n\
    \   appear in an export packet sent only after the end of the measurement\n  \
    \ interval.  This imprecision can be mitigated by use of large amounts\n   of\
    \ Flow Records during the measurement (so that the few Flow Records\n   in one\
    \ export packet can be ignored) or by use of timestamps exported\n   with the\
    \ Flow Records.\n"
- title: 5.6.  The Measurement Procedure
  contents:
  - "5.6.  The Measurement Procedure\n   The measurement procedure is the same as\
    \ the Throughput measurement\n   in Section 26.1 of [RFC2544] for the traffic\
    \ sending side.  The DUT\n   output analysis is done on the traffic generator\
    \ receiving side for\n   the test traffic, the same way as for RFC 2544 measurements.\n\
    \   An additional analysis is performed using data captured by the\n   Collector.\
    \  The purpose of this analysis is to establish the value of\n   the Flow Export\
    \ Rate during the current measurement step and to\n   verify that no Flow Records\
    \ were dropped during the measurement.  The\n   procedure for measuring the Flow\
    \ Export Rate is described in Section\n   5.5.\n   The Flow Export performance\
    \ can be significantly affected by the way\n   the Flow monitoring implementation\
    \ formats the Flow Records into the\n   Flow Export packets.  The ordering and\
    \ frequency in which Control\n   Information is exported and the number of Flow\
    \ Records in one Flow\n   Export packet are of interest.  In the worst case scenario,\
    \ there is\n   just one Flow Record in every Flow Export packet.\n   Flow Export\
    \ data should be sanity checked during the benchmark\n   measurement for:\n  \
    \ a. the number of Flow Records per packet, by simply calculating the\n      ratio\
    \ of exported Flow Records to the number of Flow Export\n      packets captured\
    \ during the measurement (which should be available\n      as a counter on the\
    \ Collector capture buffer).\n   b. the number of Flow Records corresponding to\
    \ the export of Control\n      Information per Flow Export packet (calculated\
    \ as the ratio of the\n      total number of such Flow Records in the Flow Export\
    \ data and the\n      number of Flow Export packets).\n"
- title: 6.  RFC 2544 Measurements
  contents:
  - "6.  RFC 2544 Measurements\n   RFC 2544 measurements can be performed under two\
    \ Flow monitoring\n   setups (see also Section 3.4.2).  This section details both\
    \ and\n   specifies ways to construct the test traffic so that RFC 2544\n   measurements\
    \ can be performed in a controlled environment from the\n   Flow monitoring point\
    \ of view.  A controlled Flow monitoring\n   environment means that the tester\
    \ always knows what Flow monitoring\n   activity (Flow Export Rate) the traffic\
    \ offered to the DUT causes.\n   This section is applicable mainly for the Throughput\
    \ (RFC 2544,\n   Section 26.1) and latency (RFC 2544, Section 26.2 ) measurements.\
    \  It\n   could also be used to measure frame loss rate (RFC 2544, Section\n \
    \  26.3) and back-to-back frames (RFC 2544, Section 26.4).  Flow Export\n   requires\
    \ DUT resources to be generated and transmitted; therefore,\n   the Throughput\
    \ in most cases will be much lower when Flow monitoring\n   is enabled on the\
    \ DUT than when it is not.\n   Objective:\n      Provide RFC 2544 network device\
    \ characteristics in the presence of\n      Flow monitoring on the DUT.  RFC 2544\
    \ studies numerous\n      characteristics of network devices.  The DUT forwarding\
    \ and time\n      characteristics without Flow monitoring present on the DUT can\n\
    \      vary significantly when Flow monitoring is deployed on the network\n  \
    \    device.\n   Metric definition:\n      Metric as specified in [RFC2544].\n\
    \   The measured Throughput MUST NOT include the packet rate\n   corresponding\
    \ to the Flow Export data, because it is not user traffic\n   forwarded by the\
    \ DUT.  It is generated by the DUT as a result of\n   enabling Flow monitoring\
    \ and does not contribute to the test traffic\n   that the DUT can handle.  Flow\
    \ Export requires DUT resources to be\n   generated and transmitted; therefore,\
    \ the Throughput in most cases\n   will be much lower when Flow monitoring is\
    \ enabled on the DUT than\n   when it is not.\n"
- title: 6.1.  Flow Monitoring Configuration
  contents:
  - "6.1.  Flow Monitoring Configuration\n   Flow monitoring configuration (as detailed\
    \ in Section 4.3) needs to\n   be applied the same way as discussed in Section\
    \ 5 with the exception\n   of the Active Timeout configuration.\n   The Active\
    \ Timeout SHOULD be configured to exceed several times the\n   measurement time\
    \ interval (see Section 5.4).  This ensures that if\n   measurements with two\
    \ traffic components are performed (see Section\n   6.3.2), there is no Flow monitoring\
    \ activity related to the second\n   traffic component.\n   The Flow monitoring\
    \ configuration does not change in any other way\n   for the measurement performed\
    \ in this section.  What changes and\n   makes the difference is the traffic configurations\
    \ as specified in\n   the sections below.\n"
- title: 6.2.  Measurements with the Flow Monitoring Throughput Setup
  contents:
  - "6.2.  Measurements with the Flow Monitoring Throughput Setup\n   To perform a\
    \ measurement with Flow Monitoring Throughput setup, the\n   major requirement\
    \ is that the traffic and Flow monitoring be\n   configured in such a way that\
    \ each sent packet creates one entry in\n   the DUT Cache.  This restricts the\
    \ possible setups only to the\n   measurement with two traffic components as specified\
    \ in Section\n   6.3.2.\n"
- title: 6.3.  Measurements with a Fixed Flow Export Rate
  contents:
  - "6.3.  Measurements with a Fixed Flow Export Rate\n   This section covers the\
    \ measurements where the RFC 2544 metrics need\n   to be measured with Flow monitoring\
    \ enabled, but at a certain Flow\n   Export Rate that is lower than the Flow Monitoring\
    \ Throughput.\n   The tester here has both options as specified in Sections 6.3.1\
    \ and\n   6.3.2.\n"
- title: 6.3.1.  Measurements with a Single Traffic Component
  contents:
  - "6.3.1.  Measurements with a Single Traffic Component\n   Section 12 of [RFC2544]\
    \ discusses the use of protocol source and\n   destination addresses for defined\
    \ measurements.  To perform all the\n   RFC 2544 type measurements with Flow monitoring\
    \ enabled, the defined\n   Flow Keys SHOULD contain an IP source and destination\
    \ address.  The\n   RFC 2544 type measurements with Flow monitoring enabled then\
    \ can be\n   executed under these additional conditions:\n   a. the test traffic\
    \ is not limited to a single, unique pair of source\n      and destination addresses.\n\
    \   b. the traffic generator defines test traffic as follows: it allows\n    \
    \  for a parameter to send N (where N is an integer number starting\n      at\
    \ 1 and is incremented in small steps) packets with source IP\n      address A\
    \ and destination IP address B before changing both IP\n      addresses to the\
    \ next value.\n   This test traffic definition allows execution of the Flow monitoring\n\
    \   measurements with a fixed Flow Export Rate while measuring the DUT\n   RFC\
    \ 2544 characteristics.  This setup is the better option since it\n   best simulates\
    \ the live network traffic scenario with Flows\n   containing more than just one\
    \ packet.\n   The initial packet rate at N equal to 1 defines the Flow Export\
    \ Rate\n   for the whole measurement procedure.  Subsequent increases of N will\n\
    \   not change the Flow Export Rate as the time and Cache characteristics\n  \
    \ of the test traffic stay the same.  This setup is suitable for\n   measurements\
    \ with Flow Export Rates below the Flow Monitoring\n   Throughput.\n"
- title: 6.3.2 Measurements with Two Traffic Components
  contents:
  - "6.3.2 Measurements with Two Traffic Components\n   The test traffic setup described\
    \ in Section 6.3.1 might be difficult\n   to achieve with commercial traffic generators\
    \ or if the granularity\n   of the traffic rates as defined by the initial packet\
    \ rate at N equal\n   to 1 are unsuitable for the required measurement.  An alternative\n\
    \   mechanism is to define two traffic components in the test traffic:\n   one\
    \ to populate Flow monitoring Cache and the second to execute the\n   RFC 2544\
    \ measurements.\n   a. Flow monitoring test traffic component -- the exact traffic\n\
    \      definition as specified in Section 5.2.\n   b. RFC 2544 Test Traffic Component\
    \ -- test traffic as specified by\n      RFC 2544 MUST create just one entry in\
    \ the DUT Cache.  In the\n      particular setup discussed here, this would mean\
    \ a traffic stream\n      with just one pair of unique source and destination\
    \ IP addresses\n      (but could be avoided if Flow Keys were, for example, UDP/TCP\n\
    \      source and destination ports and Flow Keys did not contain the\n      addresses).\n\
    \   The Flow monitoring traffic component will exercise the DUT in terms\n   of\
    \ Flow activity, while the second traffic component will measure the\n   RFC 2544\
    \ characteristics.\n   The measured Throughput is the sum of the packet rates\
    \ of both\n   traffic components.  The definition of other RFC 1242 metrics remains\n\
    \   unchanged.\n"
- title: 7.  Flow Monitoring Accuracy
  contents:
  - "7.  Flow Monitoring Accuracy\n   The pure Flow Monitoring Throughput measurement\
    \ described in Section\n   5 provides the capability to verify the Flow monitoring\
    \ accuracy in\n   terms of the exported Flow Record data.  Since every Cache entry\n\
    \   created in the Cache is populated by just one packet, the full set of\n  \
    \ captured data on the Collector can be parsed (e.g., providing the\n   values\
    \ of all Flow Keys and other Flow Record fields, not only the\n   overall Flow\
    \ Record count in the exported data), and each set of\n   parameters from each\
    \ Flow Record can be checked against the\n   parameters as configured on the traffic\
    \ generator and set in packets\n   sent to the DUT.  The exported Flow Record\
    \ is considered accurate if:\n   a. all the Flow Record fields are present in\
    \ each exported Flow\n      Record.\n   b. all the Flow Record fields' values\
    \ match the value ranges set by\n      the traffic generator (for example, an\
    \ IP address falls within the\n      range of the IP address increments on the\
    \ traffic generator).\n   c. all the possible Flow Record field values as defined\
    \ at the\n      traffic generator have been found in the captured export data\
    \ on\n      the Collector.  This check needs to be offset against detected\n \
    \     packet losses at the DUT during the measurement.\n   For a DUT with packet\
    \ forwarding, the Flow monitoring accuracy also\n   involves data checks on the\
    \ received traffic, as already discussed in\n   Section 4.\n"
- title: 8.  Evaluating Flow Monitoring Applicability
  contents:
  - "8.  Evaluating Flow Monitoring Applicability\n   The measurement results, as\
    \ discussed in this document and obtained\n   for certain DUTs, allow for a preliminary\
    \ analysis of a Flow\n   monitoring deployment based on the traffic analysis data\
    \ from the\n   providers' network.  An example of such traffic analysis in the\n\
    \   Internet is provided by [CAIDA]; the way it can be used is discussed\n   below.\
    \  The data needed to estimate if a certain network device can\n   manage the\
    \ particular amount of live traffic with Flow monitoring\n   enabled is:\n   Average\
    \ packet size:            350 bytes\n   Number of packets per IP flow:  20\n \
    \  Expected data rate on the network device: 1 Gbit/s\n   The average number of\
    \ Flows created per second in the network device\n   is needed and is determined\
    \ as follows:\n                       Expected packet rate\n   Flows per second\
    \ =  --------------------\n                       Packet per flow\n   When using\
    \ the above example values, the network device is required\n   to process 18000\
    \ Flows per second.  By executing the benchmarking as\n   specified in this document,\
    \ a platform capable of this processing can\n   be determined for the deployment\
    \ in that particular part of the user\n   network.\n   Keep in mind that the above\
    \ is a very rough and averaged Flow\n   activity estimate, which cannot account\
    \ for traffic anomalies; for\n   example, a large number of DNS request packets\
    \ that are typically\n   small packets coming from many different sources and\
    \ represent mostly\n   just one packet per Flow.\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   This work was performed thanks to the patience and support\
    \ of Cisco\n   Systems NetFlow development team, namely Paul Aitken, Paul Atkins,\n\
    \   and Andrew Johnson.  Thanks to Benoit Claise for numerous detailed\n   reviews\
    \ and presentations of the document, and to Aamer Akhter for\n   initiating this\
    \ work.  A special acknowledgment to the entire BMWG\n   working group, especially\
    \ to the chair, Al Morton, for the support\n   and work on this document and Paul\
    \ Aitken for a very detailed\n   technical review.\n"
- title: 10.  Security Considerations
  contents:
  - "10.  Security Considerations\n   Documents of this type do not directly affect\
    \ the security of the\n   Internet or corporate networks as long as benchmarking\
    \ is not\n   performed on devices or systems connected to operating networks.\n\
    \   Benchmarking activities, as described in this memo, are limited to\n   technology\
    \ characterization using controlled stimuli in a laboratory\n   environment, with\
    \ dedicated address space and the constraints\n   specified in sections above.\n\
    \   The benchmarking network topology will be an independent test setup\n   and\
    \ MUST NOT be connected to devices that may forward the test\n   traffic into\
    \ a production network, or misroute traffic to the test\n   management network.\n\
    \   Further, benchmarking is performed on a \"black-box\" basis, relying\n   solely\
    \ on measurements observable external to the DUT.\n   Special capabilities SHOULD\
    \ NOT exist in the DUT specifically for\n   benchmarking purposes.  Any implications\
    \ for network security arising\n   from the DUT SHOULD be identical in the lab\
    \ and in production\n   networks.\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [RFC2119]   Bradner, S., \"Key words for use\
    \ in RFCs to Indicate\n               Requirement Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n   [RFC2544]   Bradner, S. and J. McQuaid, \"Benchmarking Methodology\
    \ for\n               Network Interconnect Devices\", RFC 2544, March 1999.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [RFC1242]   Bradner, S., \"Benchmarking Terminology\
    \ for Network\n               Interconnection Devices\", RFC 1242, July 1991.\n\
    \   [RFC2285]   Mandeville, R., \"Benchmarking Terminology for LAN\n         \
    \      Switching Devices\", RFC 2285, February 1998.\n   [RFC3031]   Rosen, E.,\
    \ Viswanathan, A., and R. Callon, \"Multiprotocol\n               Label Switching\
    \ Architecture\", RFC 3031, January 2001.\n   [RFC3917]   Quittek, J., Zseby,\
    \ T., Claise, B., and S. Zander,\n               \"Requirements for IP Flow Information\
    \ Export (IPFIX)\",\n               RFC 3917, October 2004.\n   [RFC3954]   Claise,\
    \ B., Ed., \"Cisco Systems NetFlow Services Export\n               Version 9\"\
    , RFC 3954, October 2004.\n   [RFC5101]   Claise, B., Ed., \"Specification of\
    \ the IP Flow\n               Information Export (IPFIX) Protocol for the Exchange\
    \ of\n               IP Traffic Flow Information\", RFC 5101, January 2008.\n\
    \   [RFC5180]   Popoviciu, C., Hamza, A., Van de Velde, G., and D.\n         \
    \      Dugatkin, \"IPv6 Benchmarking Methodology for Network\n               Interconnect\
    \ Devices\", RFC 5180, May 2008.\n   [RFC5470]   Sadasivan, G., Brownlee, N.,\
    \ Claise, B., and J. Quittek,\n               \"Architecture for IP Flow Information\
    \ Export\", RFC 5470,\n               March 2009.\n   [RFC5695]   Akhter, A.,\
    \ Asati, R., and C. Pignataro, \"MPLS Forwarding\n               Benchmarking\
    \ Methodology for IP Flows\", RFC 5695,\n               November 2009.\n   [CAIDA]\
    \     Claffy, K., \"The nature of the beast: recent traffic\n               measurements\
    \ from an Internet backbone\",\n               http://www.caida.org/publications/papers/1998/\n\
    \               Inet98/Inet98.html\n   [IPFIX-CONFIG]\n               Muenz, G.,\
    \ Muenchen, TU, Claise, B., and P. Aitken,\n               \"Configuration Data\
    \ Model for IPFIX and PSAMP\", Work in\n               Progress, July 2011.\n\
    \   [PSAMP-MIB] Dietz, T., Claise, B., and J. Quittek, \"Definitions of\n    \
    \           Managed Objects for Packet Sampling\", Work in Progress,\n       \
    \        October 2011.\n   [IPFIX-MIB] Dietz, T., Kobayashi, A., Claise, B., and\
    \ G. Muenz,\n               \"Definitions of Managed Objects for IP Flow Information\n\
    \               Export\", Work in Progress, March 2012.\n"
- title: Appendix A.  (Informative) Recommended Report Format
  contents:
  - 'Appendix A.  (Informative) Recommended Report Format

    '
- title: Parameter                           Units
  contents:
  - 'Parameter                           Units

    '
- title: '----------------------------------- ------------------------------------'
  contents:
  - '----------------------------------- ------------------------------------

    '
- title: Test Case                           test case name (Sections 5 and 6)
  contents:
  - 'Test Case                           test case name (Sections 5 and 6)

    '
- title: Test Topology                       Figure 2, other
  contents:
  - 'Test Topology                       Figure 2, other

    '
- title: Traffic Type                        IPv4, IPv6, MPLS, other
  contents:
  - 'Traffic Type                        IPv4, IPv6, MPLS, other

    '
- title: Test Results
  contents:
  - "Test Results\n  Flow Monitoring Throughput        Flow Records per second or\
    \ Not\n                                    Applicable\n  Flow Export Rate    \
    \              Flow Records per second or Not\n                              \
    \      Applicable\n  Control Information Export Rate   Flow Records per second\n\
    \  Throughput                        packets per second\n  (Other RFC 1242 Metrics)\
    \          (as appropriate)\n"
- title: General Parameters
  contents:
  - "General Parameters\n  DUT Interface Type                Ethernet, POS, ATM, other\n\
    \  DUT Interface Bandwidth           MegaBits per second\n"
- title: Traffic Specifications
  contents:
  - "Traffic Specifications\n  Number of Traffic Components      (see Sections 6.3.1\
    \ and 6.3.2)\n  For each traffic component:\n  Packet Size                   \
    \    bytes\n  Traffic Packet Rate               packets per second\n  Traffic\
    \ Bit Rate                  MegaBits per second\n  Number of Packets Sent    \
    \        number of entries\n  Incremented Packet Header Fields  list of fields\n\
    \  Number of Unique Header Values    number of entries\n  Number of Packets per\
    \ Flow        number of entries\n  Traffic Generation                linearly\
    \ incremented or\n                                    randomized\n"
- title: Flow monitoring Specifications
  contents:
  - "Flow monitoring Specifications\n  Direction                         ingress,\
    \ egress, both\n  Observation Points                DUT interface names\n  Cache\
    \ Size                        number of entries\n  Active Timeout            \
    \        seconds\n  Idle Timeout                      seconds\n  Flow Keys   \
    \                      list of fields\n  Flow Record Fields                total\
    \ number of fields\n  Number of Flows Created           number of entries\n  Flow\
    \ Export Transport Protocol    UDP, TCP, SCTP, other\n  Flow Export Protocol \
    \             IPFIX, NetFlow, other\n  Flow Export data packet size      bytes\n\
    \  Flow Export MTU                   bytes\n"
- title: Parameter                           Units (continued)
  contents:
  - 'Parameter                           Units (continued)

    '
- title: '----------------------------------- ------------------------------------'
  contents:
  - '----------------------------------- ------------------------------------

    '
- title: MPLS Specifications                 (for traffic type MPLS only)
  contents:
  - "MPLS Specifications                 (for traffic type MPLS only)\n  Tested Label\
    \ Operation            imposition, swap, disposition\n"
- title: The format of the report as documented in this appendix is informative,
  contents:
  - 'The format of the report as documented in this appendix is informative,

    '
- title: but the entries in the contents of it are required as specified in the
  contents:
  - 'but the entries in the contents of it are required as specified in the

    '
- title: corresponding sections of this document.
  contents:
  - 'corresponding sections of this document.

    '
- title: Many of the configuration parameters required by the measurement report
  contents:
  - 'Many of the configuration parameters required by the measurement report

    '
- title: can be retrieved from the [IPFIX-MIB] and [PSAMP-MIB] MIB modules, and
  contents:
  - 'can be retrieved from the [IPFIX-MIB] and [PSAMP-MIB] MIB modules, and

    '
- title: from the [IPFIX-CONFIG] YANG module or other general MIBs.  Therefore,
  contents:
  - 'from the [IPFIX-CONFIG] YANG module or other general MIBs.  Therefore,

    '
- title: 'querying those modules from the DUT would be beneficial: first of all,'
  contents:
  - 'querying those modules from the DUT would be beneficial: first of all,

    '
- title: to help in populating the required entries of the measurement report,
  contents:
  - 'to help in populating the required entries of the measurement report,

    '
- title: and also to document all the other configuration parameters from the
  contents:
  - 'and also to document all the other configuration parameters from the

    '
- title: DUT.
  contents:
  - 'DUT.

    '
- title: Appendix B.  (Informative) Miscellaneous Tests
  contents:
  - "Appendix B.  (Informative) Miscellaneous Tests\n   This section lists tests that\
    \ could be useful to asses a proper Flow\n   monitoring operation under various\
    \ operational or stress conditions.\n   These tests are not deemed suitable for\
    \ any benchmarking for various\n   reasons.\n"
- title: B.1.  DUT Under Traffic Load
  contents:
  - "B.1.  DUT Under Traffic Load\n   The Flow Monitoring Throughput should be measured\
    \ under different\n   levels of static traffic load through the DUT.  This can\
    \ be achieved\n   only by using two traffic components as discussed in Section\
    \ 6.3.2.\n   One traffic component exercises the Flow Monitoring Plane.  The\n\
    \   second traffic component loads only the Forwarding Plane without\n   affecting\
    \ Flow monitoring (i.e., it creates just a certain amount of\n   permanent Cache\
    \ entries).\n   The variance in Flow Monitoring Throughput as a function of the\n\
    \   traffic load should be noted for comparison purposes between two DUTs\n  \
    \ of similar architecture and capability.\n"
- title: B.2.  In-Band Flow Export
  contents:
  - "B.2.  In-Band Flow Export\n   The test topology in Section 4.1 mandates the use\
    \ of a separate Flow\n   Export interface to avoid the Flow Export data generated\
    \ by the DUT\n   to mix with the test traffic from the traffic generator.  This\
    \ is\n   necessary in order to create clear and reproducible test conditions\n\
    \   for the benchmark measurement.\n   The real network deployment of Flow monitoring\
    \ might not allow for\n   such a luxury -- for example, on a very geographically\
    \ large network.\n   In such a case, the Flow Export will use an ordinary traffic\n\
    \   forwarding interface, e.g., in-band Flow Export.\n   The Flow monitoring operation\
    \ should be verified with in-band Flow\n   Export configuration while following\
    \ these test steps:\n   a. Perform the benchmark test as specified in Section\
    \ 5.  One of the\n      results will be how much bandwidth Flow Export used on\
    \ the\n      dedicated Flow Export interface.\n   b. Change Flow Export configuration\
    \ to use the test interface.\n   c. Repeat the benchmark test while the receiver\
    \ filters out the Flow\n      Export data from analysis.\n   The expected result\
    \ is that the Throughput achieved in step a. is\n   same as the Throughput achieved\
    \ in step c. provided that the\n   bandwidth of the output DUT interface is not\
    \ the bottleneck (in other\n   words, it must have enough capacity to forward\
    \ both test and Flow\n   Export traffic).\n"
- title: B.3.  Variable Packet Size
  contents:
  - "B.3.  Variable Packet Size\n   The Flow monitoring measurements specified in\
    \ this document would be\n   interesting to repeat with variable packet sizes\
    \ within one\n   particular test (e.g., test traffic containing mixed packet sizes).\n\
    \   The packet forwarding tests specified mainly in [RFC2544] do not\n   recommend\
    \ performing such tests.  Flow monitoring is not dependent on\n   packet sizes,\
    \ so such a test could be performed during the Flow\n   Monitoring Throughput\
    \ measurement, and verification of its value does\n   not depend on the offered\
    \ traffic packet sizes.  The tests must be\n   carefully designed in order to\
    \ avoid measurement errors due to the\n   physical bandwidth limitations and changes\
    \ of the base forwarding\n   performance with packet size.\n"
- title: B.4.  Bursty Traffic
  contents:
  - "B.4.  Bursty Traffic\n   RFC 2544, Section 21 discusses and defines the use of\
    \ bursty traffic.\n   It can be used for Flow monitoring testing to gauge some\
    \ short-term\n   overload DUT capabilities in terms of Flow monitoring.  The test\n\
    \   benchmark here would not be the Flow Export Rate the DUT can sustain,\n  \
    \ but the absolute number of Flow Records the DUT can process without\n   dropping\
    \ any single Flow Record.  The traffic setup to be used for\n   this test is as\
    \ follows:\n   a. each sent packet creates a new Cache entry.\n   b. the packet\
    \ rate is set to the maximum transmission speed of the\n      DUT interface used\
    \ for the test.\n"
- title: B.5.  Various Flow Monitoring Configurations
  contents:
  - "B.5.  Various Flow Monitoring Configurations\n   This section translates the\
    \ terminology used in the IPFIX documents\n   ([RFC5470], [RFC5101], and others)\
    \ into the terminology used in this\n   document.  Section B.5.2 proposes another\
    \ measurement that is\n   impossible to verify in a black box test manner.\n"
- title: B.5.1.  Throughput without the Metering Process
  contents:
  - "B.5.1.  Throughput without the Metering Process\n   If the Metering Process is\
    \ not defined on the DUT it means no Flow\n   monitoring Cache exists and no Flow\
    \ analysis occurs.  The performance\n   measurement of the DUT in such a case\
    \ is just pure [RFC2544]\n   measurement.\n"
- title: B.5.2.  Throughput with the Metering Process
  contents:
  - "B.5.2.  Throughput with the Metering Process\n   If only the Metering Process\
    \ is enabled, Flow analysis on the DUT is\n   enabled and operational but no Flow\
    \ Export happens.  The performance\n   measurement of a DUT in such a configuration\
    \ represents a useful test\n   of the DUT's capabilities (this corresponds to\
    \ the case when the\n   network operator uses Flow monitoring, for example, for\
    \ manual\n   detection of denial-of-service attacks, and does not wish to use\
    \ Flow\n   Export).\n   The performance testing on this DUT can be performed as\
    \ discussed in\n   this document, but it is not possible to verify the operation\
    \ and\n   results without interrogating the DUT.\n"
- title: B.5.3.  Throughput with the Metering and Exporting Processes
  contents:
  - "B.5.3.  Throughput with the Metering and Exporting Processes\n   This test represents\
    \ the performance testing as discussed in Section\n   6.\n"
- title: B.6.  Tests With Bidirectional Traffic
  contents:
  - "B.6.  Tests With Bidirectional Traffic\n   Bidirectional traffic is not part\
    \ of the normative benchmarking tests\n   based on discussion with and recommendation\
    \ of the Benchmarking\n   working group.  The experienced participants stated\
    \ that this kind of\n   traffic did not provide reproducible results.\n   The\
    \ test topology in Figure 2 can be expanded to verify Flow\n   monitoring functionality\
    \ with bidirectional traffic using the\n   interfaces in full duplex mode, e.g.,\
    \ sending and receiving\n   simultaneously on each of them.\n   The same rules\
    \ should be applied for Flow creation in the DUT Cache\n   (as per Sections 4.1\
    \ and 4.3.1) -- traffic passing through each\n   Observation Point should always\
    \ create a new Cache entry in the\n   Cache, e.g., the same traffic should not\
    \ be just looped back on the\n   receiving interfaces to create the bidirectional\
    \ traffic flow.\n"
- title: B.7.  Instantaneous Flow Export Rate
  contents:
  - "B.7.  Instantaneous Flow Export Rate\n   Additional useful information when analyzing\
    \ the Flow Export data is\n   the time distribution of the instantaneous Flow\
    \ Export Rate.  It can\n   be derived during the measurements in two ways:\n \
    \  a. The Collector might provide the capability to decode Flow Export\n     \
    \ during capturing and at the same time count the Flow Records and\n      provide\
    \ the instantaneous (or simply, an average over shorter time\n      interval than\
    \ specified in Section 5.4) Flow Export Rate.\n   b. The Flow Export protocol\
    \ (like IPFIX [RFC5101]) can provide time\n      stamps in the Flow Export packets\
    \ that would allow time-based\n      analysis and calculate the Flow Export Rate\
    \ as an average over\n      much shorter time interval than specified in Section\
    \ 5.4.\n   The accuracy and shortest time average will always be limited by the\n\
    \   precision of the time stamps (1 second for IPFIX) or by the\n   capabilities\
    \ of the DUT and the Collector.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Jan Novak (editor)\n   Cisco Systems\n   Edinburgh\n   United\
    \ Kingdom\n   EMail: janovak@cisco.com\n"
