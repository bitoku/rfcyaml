- title: __initial_text__
  contents:
  - "     Layer 3 Virtual Private Network (VPN) Tunnel Traffic Leakages\n        \
    \              in Dual-Stack Hosts/Networks\n"
- title: Abstract
  contents:
  - "Abstract\n   The subtle way in which the IPv6 and IPv4 protocols coexist in\n\
    \   typical networks, together with the lack of proper IPv6 support in\n   popular\
    \ Virtual Private Network (VPN) tunnel products, may\n   inadvertently result\
    \ in VPN tunnel traffic leakages.  That is,\n   traffic meant to be transferred\
    \ over an encrypted and integrity-\n   protected VPN tunnel may leak out of such\
    \ a tunnel and be sent in the\n   clear on the local network towards the final\
    \ destination.  This\n   document discusses some scenarios in which such VPN tunnel\
    \ traffic\n   leakages may occur as a result of employing IPv6-unaware VPN\n \
    \  software.  Additionally, this document offers possible mitigations\n   for\
    \ this issue.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7359.\n"
- title: IESG Note
  contents:
  - "IESG Note\n   This document describes a problem of information leakage in VPN\n\
    \   software and attributes that problem to the software's inability to\n   deal\
    \ with IPv6.  We do not think this is an appropriate\n   characterization of the\
    \ problem.  It is true that when a device\n   supports more than one address family,\
    \ the inability to apply policy\n   to more than one address family on that device\
    \ is a defect.  Despite\n   that, inadvertent or maliciously induced information\
    \ leakage may also\n   occur due to the existence of any unencrypted interface\
    \ allowed on\n   the system, including the configuration of split tunnels in the\
    \ VPN\n   software itself.  While there are some attacks that are unique to an\n\
    \   IPv6 interface, the sort of information leakage described by this\n   document\
    \ is a general problem that is not unique to the situation of\n   IPv6-unaware\
    \ VPN software.  We do not think this document\n   sufficiently describes the\
    \ general issue.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .   4\n   3.  IPv4 and IPv6 Coexistence . . . . . . . . . . . . . . .\
    \ . . .   5\n   4.  Virtual Private Networks in IPv4/IPv6 Dual-Stack\n       Hosts/Networks\
    \  . . . . . . . . . . . . . . . . . . . . . . .   6\n   5.  Inadvertent VPN Tunnel\
    \ Traffic Leakages in Legitimate\n       Scenarios . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . .   7\n   6.  VPN Tunnel Traffic Leakage Attacks  . .\
    \ . . . . . . . . . . .   7\n   7.  Mitigations to VPN Tunnel Traffic Leakage\
    \ Vulnerabilities . .   8\n     7.1.  Fixing VPN Client Software  . . . . . .\
    \ . . . . . . . . .   8\n     7.2.  Operational Mitigations . . . . . . . . .\
    \ . . . . . . . .  10\n   8.  Security Considerations . . . . . . . . . . . .\
    \ . . . . . . .  10\n   9.  Acknowledgements  . . . . . . . . . . . . . . . .\
    \ . . . . . .  10\n   10. References  . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  10\n     10.1.  Normative References . . . . . . . . . . . . . .\
    \ . . . .  10\n     10.2.  Informative References . . . . . . . . . . . . . .\
    \ . . .  11\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   It is a very common practice for users to employ VPN software\
    \ when\n   employing a public (and possibly rogue) local network.  This is\n \
    \  typically done not only to gain access to remote resources that may\n   not\
    \ otherwise be accessible from the public Internet, but also to\n   secure the\
    \ host's traffic against attackers that might be connected\n   to the same local\
    \ network as the victim host.  The latter case\n   constitutes the problem space\
    \ of this document.  Indeed, it is\n   sometimes assumed that employing a VPN\
    \ tunnel makes the use of\n   insecure protocols (e.g., that transfer sensitive\
    \ information in the\n   clear) acceptable, as a VPN tunnel provides security\
    \ services (such\n   as data integrity and/or confidentiality) for all communications\
    \ made\n   over it.  However, this document illustrates that under certain\n \
    \  circumstances, some traffic might not be mapped onto the VPN tunnel\n   and\
    \ thus might be sent in the clear on the local network.\n   Many VPN products\
    \ that are typically employed for the aforementioned\n   VPN tunnels only support\
    \ the IPv4 protocol: that is, they perform the\n   necessary actions such that\
    \ IPv4 traffic is sent over the VPN tunnel,\n   but they do nothing to secure\
    \ IPv6 traffic originated from (or being\n   received at) the host employing the\
    \ VPN client.  However, the hosts\n   themselves are typically dual-stacked: they\
    \ support (and enable by\n   default) both IPv4 and IPv6 (even if such IPv6 connectivity\
    \ is simply\n   \"dormant\" when they connect to IPv4-only networks).  When the\
    \ IPv6\n   connectivity of such hosts is enabled, they may end up employing an\n\
    \   IPv6-unaware VPN client in a dual-stack network.  This may have\n   \"unexpected\"\
    \ consequences, as explained below.\n   The subtle way in which the IPv4 and IPv6\
    \ protocols interact and\n   coexist in dual-stacked networks might, either inadvertently\
    \ or as a\n   result of a deliberate attack, result in VPN tunnel traffic leakages\n\
    \   -- that is, traffic meant to be transferred over a VPN tunnel could\n   leak\
    \ out of the VPN tunnel and be transmitted in the clear from the\n   local network\
    \ to the final destination, without employing the VPN\n   services at all.\n \
    \  Since this issue is specific to VPN solutions that route Layer 3\n   traffic,\
    \ it is applicable to the following types of VPN technologies:\n   o  IPsec-based\
    \ VPN tunnels\n   o  SSL/TLS VPN tunnels\n      NOTE: see Section 2 for a definition\
    \ and description of these\n      terms.\n   Section 2 clarifies the terminology\
    \ employed throughout this\n   document.  Section 3 provides some background about\
    \ IPv6 and IPv4\n   coexistence, summarizing how IPv6 and IPv4 interact on a typical\n\
    \   dual-stacked network.  Section 4 describes the underlying problem\n   that\
    \ leads to the aforementioned VPN traffic leakages.  Section 5\n   describes legitimate\
    \ scenarios in which such traffic leakages might\n   occur, while Section 6 describes\
    \ how VPN traffic leakages can be\n   triggered by deliberate attacks.  Finally,\
    \ Section 7 discusses\n   possible mitigations for the aforementioned issue.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   When employing the term \"Virtual Private Network tunnel\"\
    \ (or \"VPN\n   tunnel\"), this document refers to VPN tunnels based on IPsec\
    \ or SSL/\n   TLS, where Layer 3 packets are encapsulated and sent from a client\
    \ to\n   a middlebox, to access multiple network services (possibly employing\n\
    \   different transport and/or application protocols).\n   IPsec-based VPN tunnels\
    \ simply employ IPsec in tunnel mode to\n   encapsulate and transfer Layer 3 packets\
    \ over the VPN tunnel.  On the\n   other hand, the term \"SSL/TLS-based VPN tunnels\"\
    \ warrants a\n   clarification, since two different technologies are usually referred\n\
    \   to as \"SSL/TLS VPN\":\n   SSL/TLS VPN tunnel:\n      A technology that encapsulates\
    \ traffic from a client to a\n      middlebox.  In essence, an SSL/TLS VPN tunnel\
    \ acts just like an\n      IPsec-based tunnel, but instead employs SSL/TLS for\
    \ encryption and\n      some proprietary/unspecified mechanism for encapsulation\
    \ and\n      routing.\n   SSL/TLS VPN portal:\n      A front-end provided by the\
    \ middlebox to add security to a\n      normally unsecured site.  An SSL/TLS VPN\
    \ portal is typically\n      application specific, wrapping the specific protocol,\
    \ such as\n      HTTP, to provide access to specific services on a network.  In\n\
    \      such a case, the SSL/TLS VPN portal would be accessed just like\n     \
    \ any HTTPS URL.  SSL/TLS VPN portals are used when one wants to\n      restrict\
    \ access and only provide remote users to very specific\n      services on the\
    \ network.  SSL/TLS VPN portals do not require an\n      agent, and the policy\
    \ is typically more liberal from organizations\n      allowing access from anywhere\
    \ via this access method.  All other\n      traffic on the system may be routed\
    \ directly to the destination,\n      whether it is IPv4, IPv6, or even other\
    \ service level (HTTP)\n      destination addresses.\n   Our document focuses\
    \ on Layer 3 VPNs that employ IPsec-based or SSL/\n   TLS-based tunnels, and excludes\
    \ the so-called SSL/TLS VPN portals.\n   Both IPsec-based and SSL/TLS-based VPN\
    \ tunnels are designed to route\n   Layer 3 traffic via the VPN tunnel through\
    \ to the VPN tunnel server.\n   Typically, these solutions are agent based, meaning\
    \ that software is\n   required on the client endpoint to establish the VPN tunnel\
    \ and\n   manage access control or routing rules.  This provides an opportunity\n\
    \   for controls to be managed through that application as well as on the\n  \
    \ client endpoint.\n      NOTE: Further discussion of SSL-based VPNs can be found\
    \ in\n      [SSL-VPNs].\n   We note that, in addition to the general case of \"\
    send all traffic\n   through the VPN\", this document considers the so-called\
    \ \"split-\n   tunnel\" case, where some subset of the traffic is sent through\
    \ the\n   VPN, while other traffic is sent to its intended destination with a\n\
    \   direct routing path (i.e., without employing the VPN tunnel).  We\n   note\
    \ that many organizations will prevent split-tunneling in their\n   VPN configurations\
    \ if they would like to make sure the users data\n   goes through a gateway with\
    \ protections (malware detection, URL\n   filtering, etc.), but others are more\
    \ interested in performance of\n   the user's access or the ability for researchers\
    \ to have options to\n   access sites they may not be able to through the gateway.\n"
- title: 3.  IPv4 and IPv6 Coexistence
  contents:
  - "3.  IPv4 and IPv6 Coexistence\n   The coexistence of the IPv4 and IPv6 protocols\
    \ has a number of\n   interesting and subtle aspects that may have \"surprising\"\
    \n   consequences.  While IPv6 is not backwards-compatible with IPv4, the\n  \
    \ two protocols are \"glued\" together by the Domain Name System (DNS).\n   For\
    \ example, consider a site (say, www.example.com) that has both\n   IPv4 and IPv6\
    \ support.  The corresponding domain name\n   (www.example.com, in our case) will\
    \ contain both A and AAAA DNS\n   resource records (RRs).  Each A record will\
    \ contain one IPv4 address,\n   while each AAAA record will contain one IPv6 address\
    \ -- and there\n   might be more than one instance of each of these record types.\
    \  Thus,\n   when a dual-stacked client application means to communicate with\n\
    \   www.example.com, it can request both A and AAAA records and use any\n   of\
    \ the available addresses.  The preferred address family (IPv4 or\n   IPv6) and\
    \ the specific address that will be used (assuming more than\n   one address of\
    \ each family is available) varies from one protocol\n   implementation to another,\
    \ with many host implementations preferring\n   IPv6 addresses over IPv4 addresses.\n\
    \      NOTE: [RFC6724] specifies an algorithm for selecting a destination\n  \
    \    address from a list of IPv6 and IPv4 addresses.  [RFC6555]\n      discusses\
    \ the challenge of selecting the most appropriate\n      destination address,\
    \ along with a proposed implementation approach\n      that mitigates connection-establishment\
    \ delays.\n   As a result of this \"coexistence\" between IPv6 and IPv4, when\
    \ a dual-\n   stacked client means to communicate with some other system, the\n\
    \   availability of A and AAAA DNS resource records will typically affect\n  \
    \ which protocol is employed to communicate with that system.\n"
- title: 4.  Virtual Private Networks in IPv4/IPv6 Dual-Stack Hosts/Networks
  contents:
  - "4.  Virtual Private Networks in IPv4/IPv6 Dual-Stack Hosts/Networks\n   Many\
    \ VPN tunnel implementations do not support the IPv6 protocol --\n   or, what\
    \ is worse, they completely ignore IPv6.  This typically means\n   that, once\
    \ a VPN tunnel has been established, the VPN software takes\n   care of the IPv4\
    \ connectivity by, e.g., inserting an IPv4 default\n   route that causes all IPv4\
    \ traffic to be sent over the VPN tunnel (as\n   opposed to sending the traffic\
    \ in the clear, employing the local\n   router).  However, if IPv6 is not supported\
    \ (or completely ignored),\n   any packets destined to an IPv6 address will be\
    \ sent in the clear\n   using the local IPv6 router.  That is, the VPN software\
    \ will do\n   nothing about the IPv6 traffic.\n   The underlying reason for which\
    \ these VPN leakages may occur is that,\n   for dual-stacked systems, it is not\
    \ possible to secure the\n   communication with another system without securing\
    \ both protocols\n   (IPv6 and IPv4).  Therefore, as long as the traffic for one\
    \ of these\n   protocols is not secured, there is the potential for VPN traffic\n\
    \   leakages.\n"
- title: 5.  Inadvertent VPN Tunnel Traffic Leakages in Legitimate Scenarios
  contents:
  - "5.  Inadvertent VPN Tunnel Traffic Leakages in Legitimate Scenarios\n   Consider\
    \ a dual-stacked host that employs IPv4-only VPN software to\n   establish a VPN\
    \ tunnel with a VPN server, and that said host now\n   connects to a dual-stacked\
    \ network (that provides both IPv6 and IPv4\n   connectivity).  If some application\
    \ on the client means to\n   communicate with a dual-stacked destination, the\
    \ client will\n   typically query both A and AAAA DNS resource records.  Since\
    \ the host\n   will have both IPv4 and IPv6 connectivity, and the intended\n \
    \  destination will have both A and AAAA DNS resource records, one of\n   the\
    \ possible outcomes is that the host will employ IPv6 to\n   communicate with\
    \ the intended destination.  Since the VPN software\n   does not support IPv6,\
    \ the IPv6 traffic will not employ the VPN\n   tunnel; hence, it will have neither\
    \ integrity nor confidentiality\n   protection from the source host to the final\
    \ destination.\n   This could inadvertently expose sensitive traffic that was\
    \ assumed to\n   be secured by the VPN software.  In this particular scenario,\
    \ the\n   resulting VPN tunnel traffic leakage is a side effect of employing\n\
    \   IPv6-unaware VPN software in a dual-stacked host/network.\n"
- title: 6.  VPN Tunnel Traffic Leakage Attacks
  contents:
  - "6.  VPN Tunnel Traffic Leakage Attacks\n   A local attacker could deliberately\
    \ trigger IPv6 connectivity on the\n   victim host by sending forged ICMPv6 Router\
    \ Advertisement messages\n   [RFC4861].  Such packets could be sent by employing\
    \ standard software\n   such as rtadvd [RTADVD], or by employing packet-crafting\
    \ tools such\n   as SI6 Network's IPv6 Toolkit [SI6-Toolkit] or THC's IPv6 Attack\n\
    \   Toolkit [THC-IPv6].  Once IPv6 connectivity has been enabled,\n   communications\
    \ with dual-stacked systems could result in VPN tunnel\n   traffic leakages, as\
    \ previously described.\n   While this attack may be useful enough (due to the\
    \ increasing number\n   of IPv6-enabled sites), it will only lead to traffic leakages\
    \ when\n   the destination system is dual-stacked.  However, it is usually\n \
    \  trivial for an attacker to trigger such VPN tunnel traffic leakages\n   for\
    \ any destination system: an attacker could simply advertise\n   himself as the\
    \ local recursive DNS server by sending forged Router\n   Advertisement messages\
    \ [RFC4861] that include the corresponding\n   Recursive DNS Server (RDNSS) option\
    \ [RFC6106], and then perform a DNS\n   spoofing attack such that he can become\
    \ a \"man in the middle\" and\n   intercept the corresponding traffic.  As with\
    \ the previous attack\n   scenario, packet-crafting tools such as [SI6-Toolkit]\
    \ and [THC-IPv6]\n   can readily perform this attack.\n      NOTE: Some systems\
    \ are known to prefer IPv6-based recursive DNS\n      servers over IPv4-based\
    \ ones; hence, the \"malicious\" recursive DNS\n      servers would be preferred\
    \ over the legitimate ones advertised by\n      the VPN server.\n"
- title: 7.  Mitigations to VPN Tunnel Traffic Leakage Vulnerabilities
  contents:
  - "7.  Mitigations to VPN Tunnel Traffic Leakage Vulnerabilities\n   At the time\
    \ of this writing, a large number of VPN implementations\n   have not yet addressed\
    \ the issue of VPN tunnel traffic leakages.\n   Most of these implementations\
    \ simply ignore IPv6; hence, IPv6 traffic\n   leaks out of the VPN tunnel.  Some\
    \ VPN tunnel implementations handle\n   IPv6, but not properly.  For example,\
    \ they may be able to prevent\n   inadvertent VPN tunnel traffic leakages arising\
    \ in legitimate dual-\n   stack networks, but they may fail to properly handle\
    \ the myriad of\n   vectors available to an attacker for injecting \"more specific\n\
    \   routes\", such as ICMPv6 Router Advertisement messages with Prefix\n   Information\
    \ Options and/or Route Information Options, and ICMPv6\n   Redirect messages.\n\
    \   Clearly, the issue of VPN tunnel traffic leakages warrants proper\n   IPv6\
    \ support in VPN tunnel implementations.\n"
- title: 7.1.  Fixing VPN Client Software
  contents:
  - "7.1.  Fixing VPN Client Software\n   There are a number of possible mitigations\
    \ for the VPN tunnel traffic\n   leakage vulnerability discussed in this document.\n\
    \   If the VPN client is configured by administrative decision to\n   redirect\
    \ all IPv4 traffic to the VPN, it should:\n   1.  If IPv6 is not supported in\
    \ the VPN software, disable IPv6\n       support in all network interfaces.\n\
    \          NOTE: For IPv6-unaware VPN clients, the most simple mitigation\n  \
    \        would be to disable IPv6 support in all network interface\n         \
    \ cards when a VPN tunnel is meant to be employed.  Thus,\n          applications\
    \ on the host running the VPN client software will\n          have no other option\
    \ than to employ IPv4; hence, they will\n          simply not even try to send/process\
    \ IPv6 traffic.  We note\n          that this should only be regarded as a temporary\
    \ workaround,\n          since the proper mitigation would be to correctly handle\
    \ IPv6\n          traffic.\n   2.  If IPv6 is supported in the VPN software, ensure\
    \ that all IPv6\n       traffic is also sent via the VPN.\n          NOTE: This\
    \ would imply, among other things, properly handling\n          any vectors that\
    \ might be employed by an attacker to install\n          IPv6 routes at the victim\
    \ system (such as ICMPv6 Router\n          Advertisement messages with Prefix\
    \ Information Options or\n          Route information Options [RFC4191], ICMPv6\
    \ Redirect messages,\n          etc.).  We note that properly handling all the\
    \ aforementioned\n          vectors may prove to be nontrivial.\n   If the VPN\
    \ client is configured to only send a subset of IPv4 traffic\n   to the VPN tunnel\
    \ (split-tunnel mode), then:\n   1.  If the VPN client does not support IPv6,\
    \ it should disable IPv6\n       support in all network interfaces.\n        \
    \  NOTE: As noted above, this should only be regarded as a\n          temporary\
    \ workaround, since the proper mitigation would be to\n          correctly handle\
    \ IPv6 traffic.\n   2.  If the VPN client supports IPv6, it is the administrators\n\
    \       responsibility to ensure that the correct corresponding sets of\n    \
    \   IPv4 and IPv6 networks get routed into the VPN tunnel.\n          NOTE: As\
    \ noted above, this would imply, among other things,\n          properly handling\
    \ any vectors that might be employed by an\n          attacker to install IPv6\
    \ routes at the victim system.  This\n          may prove to be a nontrivial task.\n\
    \   A network may prevent local attackers from successfully performing\n   the\
    \ aforementioned attacks against other local hosts by implementing\n   First-Hop\
    \ Security solutions such as Router Advertisement Guard\n   (RA-Guard) [RFC6105]\
    \ and DHCPv6-Shield [DHCPv6-SHIELD].  However, for\n   obvious reasons, a host\
    \ cannot and should not rely on this type of\n   mitigations when connecting to\
    \ an open network (cybercafe, etc.).\n      NOTE: Besides, popular implementations\
    \ of RA-Guard are known to be\n      vulnerable to evasion attacks [RFC7113].\n\
    \   Finally, we note that if (eventually) IPv6-only VPN implementations\n   become\
    \ available, similar issues to the ones discussed in this\n   document could arise\
    \ if these IPv6-only VPN implementations do\n   nothing about the IPv4 traffic.\n"
- title: 7.2.  Operational Mitigations
  contents:
  - "7.2.  Operational Mitigations\n   While the desired mitigation for the issues\
    \ discussed in this\n   document is for VPN clients to be IPv6 aware, we note\
    \ that in\n   scenarios where this would be unfeasible, an administrator may want\n\
    \   to disable IPv6 connectivity on all network interfaces of the node\n   employing\
    \ the IPv6-unaware VPN client.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   This document discusses how traffic meant to\
    \ be transferred over a\n   VPN tunnel can leak out of such a tunnel and, hence,\
    \ appear in the\n   clear on the local network.  This is the result of employing\n\
    \   IPv6-unaware VPN client software on dual-stacked hosts.\n   The proper mitigation\
    \ of this issue is to correctly handle IPv6\n   traffic in the VPN client software.\
    \  However, in scenarios in which\n   such a mitigation is unfeasible, an administrator\
    \ may choose to\n   disable IPv6 connectivity on all network interfaces of the\
    \ host\n   employing the VPN client.\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   The author would like to thank Kathleen Moriarty and\
    \ Paul Hoffman who\n   contributed text that was readily incorporated into Section\
    \ 2 of this\n   document.\n   The author of this document would like to thank\
    \ (in alphabetical\n   order) Cameron Byrne, Spencer Dawkins, Gert Doering, Stephen\
    \ Farrell,\n   Seth Hall, Paul Hoffman, Tor Houghton, Russ Housley, Joel Jaeggli,\n\
    \   Alastair Johnson, Merike Kaeo, Panos Kampanakis, Stephen Kent, Henrik\n  \
    \ Lund Kramshoj, Warren Kumari, Barry Leiba, Kathleen Moriarty, Thomas\n   Osterried,\
    \ Jim Small, Martin Vigoureux, and Andrew Yourtchenko for\n   providing valuable\
    \ comments on earlier draft versions of this\n   document.\n   The author wishes\
    \ to express deep and heartfelt gratitude to Enrique\n   Garcia and Vicenta Tejedo,\
    \ for their precious love and support.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC4191]  Draves, R. and D. Thaler, \"Default\
    \ Router Preferences and\n              More-Specific Routes\", RFC 4191, November\
    \ 2005.\n   [RFC4861]  Narten, T., Nordmark, E., Simpson, W., and H. Soliman,\n\
    \              \"Neighbor Discovery for IP version 6 (IPv6)\", RFC 4861,\n   \
    \           September 2007.\n   [RFC6106]  Jeong, J., Park, S., Beloeil, L., and\
    \ S. Madanapalli,\n              \"IPv6 Router Advertisement Options for DNS Configuration\"\
    ,\n              RFC 6106, November 2010.\n   [RFC6555]  Wing, D. and A. Yourtchenko,\
    \ \"Happy Eyeballs: Success with\n              Dual-Stack Hosts\", RFC 6555,\
    \ April 2012.\n   [RFC6724]  Thaler, D., Draves, R., Matsumoto, A., and T. Chown,\n\
    \              \"Default Address Selection for Internet Protocol Version 6\n \
    \             (IPv6)\", RFC 6724, September 2012.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [DHCPv6-SHIELD]\n              Gont, F., Liu,\
    \ W., and G. Van de Velde, \"DHCPv6-Shield:\n              Protecting Against\
    \ Rogue DHCPv6 Servers\", Work in\n              Progress, July 2014.\n   [RFC6105]\
    \  Levy-Abegnoli, E., Van de Velde, G., Popoviciu, C., and J.\n              Mohacsi,\
    \ \"IPv6 Router Advertisement Guard\", RFC 6105,\n              February 2011.\n\
    \   [RFC7113]  Gont, F., \"Implementation Advice for IPv6 Router\n           \
    \   Advertisement Guard (RA-Guard)\", RFC 7113, February 2014.\n   [RTADVD]  \
    \ \"rtadvd(8) manual page\", <http://www.freebsd.org/cgi/\n              man.cgi?query=rtadvd&sektion=8>.\n\
    \   [SI6-Toolkit]\n              SI6 Networks, \"SI6 Networks' IPv6 Toolkit\"\
    ,\n              <http://www.si6networks.com/tools/ipv6toolkit>.\n   [SSL-VPNs]\
    \ Hoffman, P., \"SSL VPNs: An IETF Perspective\", IETF 72,\n              SAAG\
    \ Meeting, 2008,\n              <http://www.ietf.org/proceedings/72/slides/saag-4.pdf>.\n\
    \   [THC-IPv6] The Hacker's Choice, \"THC-IPV6 - attacking the IPV6\n        \
    \      protocol suite\", <http://www.thc.org/thc-ipv6/>.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Fernando Gont\n   Huawei Technologies\n   Evaristo Carriego\
    \ 2644\n   Haedo, Provincia de Buenos Aires  1706\n   Argentina\n   Phone: +54\
    \ 11 4650 8472\n   EMail: fgont@si6networks.com\n   URI:   http://www.si6networks.com\n"
