Abstract This memo defines how the 6bone uses the 3FFE::/16 IPv6 address prefix, allocated in RFC 2471, "IPv6 Testing Address Allocation", [6BONE TLA], to create pseudo Top Level Aggregation Identifiers (pTLA's) and pseudo
Next Level Aggregation Identifiers (pNLA's).
This memo defines how the 6bone uses the 3FFE::/16 IPv6 address prefix, allocated in RFC 2471 [6BONE TLA], to create pseudo Top Level Aggregation Identifiers (pTLA) and pseudo
Next Level Aggregation Identifiers (pNLA).
The guiding specifications for IPv6 addressing relating to the 6bone prefix, and the pTLA and pNLA formats, are "IP Version 6 Addressing Architecture"  [ADDRARCH], and "An IPv6 Aggregatable Global Unicast Address Format" [AGGR].
The purpose of creating pseudo TLA and NLA formats for the 6bone is to provide a prototype of the actual TLA and NLA formats as they might be used in production IPv6 networks.
To do this economically, using only a minimum of real production IPv6 address space, a single TLA, 3FFE::/16, was reserved by the IANA (Internet Assigned Numbers Authority) for testing on the 6bone.
Thus it was necessary to define a pretend to be, or pseudo, TLA and NLA structure to use under the 3FFE::/16 prefix.
Given the 48 bit length of the IPv6 Aggregatable Global Unicast Address external routing prefix (that contains the TLA and NLA identifiers), there is enough room to extend the TLA ID to contain a pTLA and shorten the NLA ID to become a pNLA.
In early 1999, it was decided to change the 6bone's pTLA format to allow greater expansion of the testbed network, thus accommodating more than the original 256 pTLA
Thus there are now two 6bone pTLA and pNLA formats.
6BONE pTLA and pNLA Formats 2.1 Original
8 bit pTLA and 24 bit
The original pTLA and pNLA format was intended to accommodate 256 pTLA s, i.e., backbone networks carrying IPv6 transit traffic.
The original TLA and NLA ID s as specified in [AGGR]
The TLA value 1FFE was assigned to the 6bone, which when viewed with the 3 bit format prefix in prefix notation form is 3FFE::/16.
The first 8 bits of the NLA ID space are assigned as the pTLA that defines the top level of aggregation (backbone) for the 6bone.
This provides for 256 6bone backbone networks, or pTLA s, and leaves a 24 bit pNLA ID for each pTLA to assign as needed.
the pTLA is 3FFE:nn00::/24, where nn is the pTLA assignment.
The pNLA delegation works in the same manner as specified in [AGGR].
pTLA's are required to assume registry duties for the pNLA's below them, pNLA1's for those below them, etc.
12 bit pTLA and 20 bit pNLA Format
After it became clear that the 6bone would become a useful testbed for transition, in addition to its early role as a testbed for specifications and implementations, the 6bone community decided to expand the size of the pTLA ID.
Several important decisions regarding this expansion of the pTLA field are: 1.
to leave the currently allocated 8 bit pTLA s in use until the space was needed, thus relying on a range value check to indicate the new pTLA format, 2.
to use a modulo 4 bit sized pTLA ID to make reverse path entry into the DNS easier, 3.
above, to keep the pTLA ID size as small as possible to not restrict pNLA ID size.
Therefore, the first 12 bits of the NLA ID space are assigned as the pTLA that defines the top level of aggegation (backbone) for the 6bone.
This would eventually provide for 4096 6bone backbone networks, or pTLA s, and leaves a 20 bit pNLA ID for each pTLA to assign as needed.
the pTLA is 3FFE:nnn0::/28, where nnn is the pTLA assignment.
However, as the existing 8 bit pTLA's are being left in use for the present, the nnn value starts at 0x800 for now, thus yielding only 2048 pTLA's in this new format.
As with the original pTLA format, the pNLA delegation works in the same manner as specified in [AGGR].
pTLA's are required to assume registry duties for the pNLA's below them, pNLA1's for those below them, etc.
2.3 Example Format For pNLA's An example usage of the pNLA space is given to demonstrate what is reasonable and possible.
It should not be assumed that this implies the pNLA space must be used this way.
As the new pTLA and pNLA format is now the default, the example here assumes the 20 bit pNLA format.
The following example provides for up to 255 intermediate transit ISP's (called pNLA1 below).
The pNLA1 value of zero is meant to indicate that there is no intermediate transit ISP between the backbone pTLA network and the end user site.
the two sites numbered 0x001
in the above examples are really two different sites as their pNLA1 authority above them
different (i.e., in the first case no transit exists
thus the site is directly connected to the pTLA backbone ISP, and in the second case the site is directly connected to intermediate transit ISP 0x80).
Note 2: there would be nothing to prevent an pNLA1 transit site from further allocating pNLA's below, but that becomes the policy of the pTLA and pNLA's above them to work out.
The 6bone registry, which is a RIPE style database for documenting IPv6 sites connected to the 6bone, has an "inet6num" object to allow documentation of all IPv6 addresses allocated.
IPv6 addressing documents do not have any direct impact on Internet infrastructure security.
