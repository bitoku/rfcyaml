- title: __initial_text__
  contents:
  - '                    IPv6 Router Advertisement Guard

    '
- title: Abstract
  contents:
  - "Abstract\n   Routed protocols are often susceptible to spoof attacks.  The\n\
    \   canonical solution for IPv6 is Secure Neighbor Discovery (SEND), a\n   solution\
    \ that is non-trivial to deploy.  This document proposes a\n   light-weight alternative\
    \ and complement to SEND based on filtering in\n   the layer-2 network fabric,\
    \ using a variety of filtering criteria,\n   including, for example, SEND status.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6105.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Model and Applicability .........................................3\n  \
    \ 3. Stateless RA-Guard ..............................................5\n   4.\
    \ Stateful RA-Guard ...............................................6\n      4.1.\
    \ State Machine ..............................................6\n      4.2. SEND-Based\
    \ RA-Guard ........................................8\n   5. RA-Guard Use Considerations\
    \ .....................................8\n   6. Security Considerations .........................................9\n\
    \   7. Acknowledgements ................................................9\n  \
    \ 8. References ......................................................9\n    \
    \  8.1. Normative References .......................................9\n      8.2.\
    \ Informative References .....................................9\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   When operating IPv6 in a shared layer-2 (L2) network segment\
    \ without\n   complete SEcure Neighbor Discovery (SEND) support by all devices\n\
    \   connected or without the availability of the infrastructure necessary\n  \
    \ to support SEND [RFC3971], there is always the risk of facing\n   operational\
    \ problems due to rogue Router Advertisements (RAs)\n   generated maliciously\
    \ or unintentionally by unauthorized or\n   improperly configured routers connecting\
    \ to the segment.\n   There are several examples of work done on this topic that\
    \ resulted\n   in related studies and code, including [NDPMON] [KAME]\n   [IPv6-SAMURAIS].\
    \  This document describes a solution framework for\n   the rogue-RA problem [RFC6104]\
    \ where network segments are designed\n   around a single L2-switching device\
    \ or a set of L2-switching devices\n   capable of identifying invalid RAs and\
    \ blocking them.  The solutions\n   developed within this framework can span the\
    \ spectrum from basic\n   (where the port of the L2 device is statically instructed\
    \ to forward\n   or not to forward RAs received from the connected device) to\
    \ advanced\n   (where a criterion is used by the L2 device to dynamically validate\n\
    \   or invalidate a received RA, this criterion can even be based on SEND\n  \
    \ mechanisms).\n"
- title: 2.  Model and Applicability
  contents:
  - "2.  Model and Applicability\n   RA-Guard applies to an environment where all\
    \ messages between IPv6\n   end-devices traverse the controlled L2 networking\
    \ devices.  It does\n   not apply to shared media, when devices can communicate\
    \ directly\n   without going through an RA-Guard-capable L2 networking device.\n\
    \   Figure 1 illustrates a deployment scenario for RA-Guard.\n               \
    \       Block                Allow\n       +------+       incoming +---------+\
    \ incoming     +--------+\n       |Host  |       RA       |    L2   | RA     \
    \      | Router |\n       |      |----------------|  device |--------------| \
    \       |\n       +------+                +----+----+              +--------+\n\
    \                                    |\n                                    |Block\n\
    \                                    |incoming\n                             \
    \       |RA\n                                    |\n                         \
    \           |\n                                    |\n                       \
    \         +---+---+\n                                |  Host |\n             \
    \                   |       |\n                                +-------+\n   \
    \                             Figure 1\n   RA-Guard does not intend to provide\
    \ a substitute for SEND-based\n   solutions.  It actually intends to provide complementary\
    \ solutions in\n   those environments where SEND might not be suitable or fully\n\
    \   supported by all devices involved.  It may take time until SEND is\n   ubiquitous\
    \ in IPv6 networks and some of its large-scale deployment\n   aspects are sorted\
    \ out, such as provisioning hosts with trust\n   anchors.  It is also reasonable\
    \ to expect that some devices, such as\n   IPv6-enabled sensors, might not consider\
    \ implementing SEND at all.\n   An RA-Guard implementation that SEND-validates\
    \ RAs on behalf of hosts\n   would potentially simplify some of these challenges.\n\
    \   RA-Guard can be seen as a superset of SEND with regard to router\n   authorization.\
    \  Its purpose is to filter Router Advertisements based\n   on a set of criteria,\
    \ from a simplistic \"RA disallowed on a given\n   interface\" to \"RA allowed\
    \ from pre-defined sources\" and up to a full-\n   fledged SEND \"RA allowed from\
    \ authorized sources only\".\n   In addition to this granularity on the criteria\
    \ for filtering out\n   Router Advertisements, RA-Guard introduces the concept\
    \ of router\n   authorization proxy.  Instead of each node on the link analyzing\
    \ RAs\n   and making an individual decision, a legitimate \"node-in-the-middle\"\
    \n   performs the analysis on behalf of all other nodes on the link.  The\n  \
    \ analysis itself is not different from what each node would do: if\n   SEND is\
    \ enabled, the RA is checked against X.509 certificates\n   [RFC4861].  If any\
    \ other criterion is in use, such as known L3\n   (addresses) or L2 (link-layer\
    \ address, port number) legitimate\n   sources of RAs, the node-in-the middle\
    \ can use this criterion and\n   filter out any RA that does not comply.  If this\
    \ node-in-the-middle\n   is an L2 device, it will not change the content of the\
    \ validated RA\n   and will avoid any of the ND-proxy pitfalls.\n   RA-Guard intends\
    \ to provide simple solutions to the rogue-RA problem\n   in contexts where simplicity\
    \ is required while leveraging SEND in a\n   context environment consisting of\
    \ a mix of SEND-capable devices (L2\n   switches and routers) and devices that\
    \ do not consistently use SEND.\n   Furthermore, RA-Guard is useful to simplify\
    \ SEND deployments, as only\n   the L2 switch and the routers are required to\
    \ carry certificates\n   (their own and the trust anchor certificates).\n"
- title: 3.  Stateless RA-Guard
  contents:
  - "3.  Stateless RA-Guard\n   Stateless RA-Guard examines incoming RAs and decides\
    \ whether to\n   forward or block them based solely on information found in the\n\
    \   message or in the L2-device configuration.  Typical information\n   available\
    \ in the frames received, useful for RA validation, is as\n   follows:\n   o \
    \ Link-layer address of the sender\n   o  Port on which the frame was received\n\
    \   o  IP source address\n   o  Prefix list\n   The following configuration information\
    \ created on the L2 device can\n   be made available to RA-Guard, to validate\
    \ against the information\n   found in the received RA frame:\n   o  Allowed/Disallowed\
    \ link-layer address of the RA sender\n   o  Allowed/Disallowed ports for receiving\
    \ RAs\n   o  Allowed/Disallowed IP source addresses of the RA sender\n   o  Allowed\
    \ Prefix list and Prefix ranges\n   o  Router Priority\n   Once the L2 device\
    \ has validated the content of the RA frame against\n   the configuration, it\
    \ forwards the RA to its destination, whether\n   unicast or multicast.  Otherwise,\
    \ the RA is dropped.\n   An example of a very simple stateless RA-Guard implementation\
    \ could\n   be a small L2 switch for which there is one interface \"statically\n\
    \   configured\" as the interface connecting to a router, while all other\n  \
    \ interfaces are for non-router devices.  With this small static setup,\n   the\
    \ only interface forwarding RAs will be the pre-assigned router\n   interface,\
    \ while the non-router interfaces block all RAs.\n"
- title: 4.  Stateful RA-Guard
  contents:
  - '4.  Stateful RA-Guard

    '
- title: 4.1.  State Machine
  contents:
  - "4.1.  State Machine\n   Stateful RA-Guard learns dynamically about legitimate\
    \ RA senders and\n   stores this information for allowing subsequent RAs.  A simple\n\
    \   stateful scheme would be for the L2 device to listen to RAs during a\n   certain\
    \ manually configured period of time, where the start of the\n   listening period\
    \ and the duration of the listening period for a\n   single instance are controlled\
    \ by the manual intervention.  As a\n   result, the L2 device can then allow subsequent\
    \ RAs only on those\n   ports on which valid RAs were received during this period.\
    \  Often,\n   the \"LEARNING\" state will only be activated by manual configuration\n\
    \   when a new IPv6 router is provisioned on the L2 network.\n   A more sophisticated\
    \ stateful scheme is based on SEND and is\n   described in Section 4.2.\n   The\
    \ state machine for stateful RA-Guard can be global, per-interface,\n   or per-peer,\
    \ depending on the scheme used for authorizing RAs.\n   When RA-Guard is SEND-based,\
    \ the state machine is per-peer and\n   defined in [RFC3971].\n   When RA-Guard\
    \ is using a discovery method, the state machine of the\n   RA-Guard capability\
    \ consists of four different states:\n   o  State 1: OFF\n      A device or interface\
    \ in the RA-Guard \"OFF\" state operates as if\n      the RA-Guard capability\
    \ is not available.\n   o  State 2: LEARNING\n      A device or interface in the\
    \ RA-Guard \"LEARNING\" state is actively\n      acquiring information about the\
    \ IPv6 routing devices connected to\n      its interfaces.  The learning process\
    \ takes place over a\n      pre-defined unique period of time, as set by manual\
    \ configuration;\n      or it can be event-triggered.  The information gathered\
    \ is\n      compared against pre-defined criteria (criteria similar to the\n \
    \     stateless RA-Guard rules) to qualify the validity of the RAs.\n      In\
    \ this state, the RA-Guard-enabled device or interface is either\n      blocking\
    \ \"all\" RAs until their validity is verified or,\n      alternatively, it can\
    \ temporarily forward \"all\" of the RAs until\n      their validity is verified.\n\
    \      When the L2 device reaches the end of the LEARNING state, it has a\n  \
    \    record of which interfaces are attached to links with valid IPv6\n      routers.\
    \  The L2 device transitions each interface from the\n      LEARNING state into\
    \ either the BLOCKING state if there was no\n      valid IPv6 router discovered\
    \ at the interface, or into the\n      FORWARDING state if there was a valid IPv6\
    \ router discovered.\n   o  State 3: BLOCKING\n      A device or interface running\
    \ RA-Guard and in the BLOCKING state\n      will block ingress RA messages.\n\
    \      An interface can transition from the BLOCKING state into the\n      FORWARDING\
    \ state directly if explicitly instructed by the\n      L2-device operator.\n\
    \      An interface can transition from the BLOCKING state into the\n      LEARNING\
    \ state if either explicitly instructed by the L2-device\n      operator or prompted\
    \ by a triggered event.\n   o  State 4: FORWARDING\n      A device or interface\
    \ running RA-Guard and in the FORWARDING state\n      will accept valid ingress\
    \ RAs and forward them to their\n      destination.\n      An interface can transition\
    \ from the FORWARDING state into the\n      BLOCKING state directly if explicitly\
    \ instructed by the L2-device\n      operator.\n      An interface can transition\
    \ from the FORWARDING state into the\n      LEARNING state if either explicitly\
    \ instructed by the L2-device\n      operator or prompted by a triggered event.\n\
    \   The transition between these states can be triggered by manual\n   configuration\
    \ or by meeting a pre-defined criterion.\n"
- title: 4.2.  SEND-Based RA-Guard
  contents:
  - "4.2.  SEND-Based RA-Guard\n   In this scenario, the L2 device is blocking or\
    \ forwarding RAs based\n   on SEND considerations.  Upon capturing an RA on the\
    \ interface, the\n   L2 device will first verify the Cryptographically Generated\
    \ Address\n   (CGA) [RFC3971] and the RSA (Rivest, Shamir, and Adleman algorithm\n\
    \   for public-key cryptography) signature, as specified in Section 5 of\n   [RFC3971].\
    \  The RA should be dropped in case of failure of this\n   verification.  It will\
    \ then apply host behavior as described in\n   Section 6.4.6 of [RFC3971].  In\
    \ particular, the L2 device will\n   attempt to retrieve a valid certificate from\
    \ its cache for the public\n   key referred to in the RA.  If such a certificate\
    \ is found, the L2\n   device will forward the RA to its destination.  If not,\
    \ the L2 device\n   will generate a Certification Path Solicitation (CPS) [RFC3971]\
    \ with\n   an unspecified source address, to query the router certificate(s).\n\
    \   It will then capture the Certification Path Advertisement (CPA)\n   [RFC3971]\
    \ and attempt to validate the certificate chain.  Failure to\n   validate the\
    \ chain will result in dropping the RA.  Upon validation\n   success, the L2 device\
    \ will forward the RA to its destination and\n   store the router certificate\
    \ in its cache.\n   In order to operate in this scenario, the L2 device should\
    \ be\n   provisioned with a trust anchor certificate, as specified in\n   Section\
    \ 6 of [RFC3971].  It may also establish layer-3 connectivity\n   with a Certificate\
    \ Revocation List (CRL) Certification Path\n   Advertisement server and/or with\
    \ an NTP server.  A bootstrapping\n   issue in this case can be resolved by using\
    \ the configuration method\n   to specify a trusted port to a first router, and\
    \ the SEND-based\n   RA-Guard method on all other ports.  The first router can\
    \ then be\n   used for Network Time Protocol (NTP) [RFC5905] and CRL connectivity.\n"
- title: 5.  RA-Guard Use Considerations
  contents:
  - "5.  RA-Guard Use Considerations\n   The RA-Guard mechanism is effective only\
    \ when all messages between\n   IPv6 devices in the target environment traverse\
    \ controlled L2\n   networking devices.  In the case of environments such as Ethernet\n\
    \   hubs, devices can communicate directly without going through an\n   RA-Guard-capable\
    \ L2 networking device, and the RA-Guard feature\n   cannot protect against rogue\
    \ RAs.\n   RA-Guard mechanisms do not offer protection in environments where\n\
    \   IPv6 traffic is tunneled.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   Once RA-Guard has set up the proper criteria\
    \ (for example, it\n   specified that a port is allowed to receive RAs, or it\
    \ identified\n   legitimate sources of RAs or certificate bases [RFC4861]), then\
    \ there\n   are no possible instances of accidentally filtered legitimate Router\n\
    \   Advertisements, assuming the RA-Guard filter enforcement strictly\n   follows\
    \ the RA-Guard set criteria.\n   In Section 4.1, a simple mechanism to dynamically\
    \ learn the valid\n   IPv6 routers connected to an L2 device is explained.  It\
    \ is important\n   that this LEARNING state is only entered intentionally by manual\n\
    \   configuration.  The list of learned IPv6 routers should be verified\n   by\
    \ the network manager to make sure that it corresponds with the\n   expected valid\
    \ RA list.  This procedure will make sure that either\n   accidentally or intentionally\
    \ generated rogue RAs are blocked by\n   RA-Guard.\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   The authors dedicate this document to the memory of\
    \ Jun-ichiro Hagino\n   (itojun) for his contributions to the development and\
    \ deployment of\n   IPv6.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC3971]   Arkko, J., Ed., Kempf, J., Zill, B.,\
    \ and P. Nikander,\n               \"SEcure Neighbor Discovery (SEND)\", RFC 3971,\
    \ March 2005.\n   [RFC4861]   Narten, T., Nordmark, E., Simpson, W., and H.  Soliman,\n\
    \               \"Neighbor Discovery for IP version 6 (IPv6)\", RFC 4861,\n  \
    \             September 2007.\n   [RFC5905]   Mills, D., Martin, J., Ed., Burbank,\
    \ J., and W. Kasch,\n               \"Network Time Protocol Version 4: Protocol\
    \ and Algorithms\n               Specification\", RFC 5905, June 2010.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [NDPMON]    LORIA/INRIA, \"NDPMon - IPv6 Neighbor\
    \ Discovery Protocol\n               Monitor\", November 2007,\n             \
    \  <http://ndpmon.sourceforge.net/>.\n   [KAME]      KAME Project, \"rafixd -\
    \ developed at KAME - An active\n               rogue RA nullifier\", November\
    \ 2007,\n               <http://www.kame.net/>.\n   [IPv6-SAMURAIS]\n        \
    \       Hagino (itojun), J., \"IPv6 demystified: I have a problem\n          \
    \     with rogue RAs in my IPv6 network\", 2007,\n               <http://ipv6samurais.com/>.\n\
    \   [RFC6104]   Chown, T. and S. Venaas, \"Rogue IPv6 Router Advertisement\n \
    \              Problem Statement\", RFC 6104, February 2011.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Eric Levy-Abegnoli\n   Cisco Systems\n   Village d'Entreprises\
    \ Green Side - 400, Avenue Roumanille\n   Biot - Sophia Antipolis, PROVENCE-ALPES-COTE\
    \ D'AZUR  06410\n   France\n   Phone: +33 49 723 2620\n   EMail: elevyabe@cisco.com\n\
    \   Gunter Van de Velde\n   Cisco Systems\n   De Kleetlaan 6a\n   Diegem  1831\n\
    \   Belgium\n   Phone: +32 2704 5473\n   EMail: gunter@cisco.com\n   Ciprian Popoviciu\n\
    \   Technodyne\n   111 Wood Ave. S.\n   Iselin, NJ  08830\n   USA\n   Phone: +1\
    \ 1 919 599-5666\n   EMail: chip@technodyne.com\n   Janos Mohacsi\n   NIIF/Hungarnet\n\
    \   18-22 Victor Hugo\n   Budapest  H-1132\n   Hungary\n   EMail: mohacsi@niif.hu\n"
