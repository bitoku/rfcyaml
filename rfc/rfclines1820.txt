Abstract This document presents a checklist to facilitate evaluation of MIME capable User Agents.
Access to a MIME test responder, that generates test messages is described.
This document presents a checklist that facilitates evaluation of MIME capable E mail User Agents.
It is by no means a conformance or interoperability (both strictly defined and measurable quantities)
checklist, but rather an interworking (practical perspective) checklist that is aimed at the users and system managers.
If you use this checklist against a specific product (regardless of whether you're a vendor, implementor or user) you can submit the result to mime check@relay.surfnet.nl and this information will be made available (at no cost) through WWW (to be announced) for other people to browse through.
Although SURFnet will attempt to verify the correctness of each submission, all submitted, information is made available as is, with no guarantees (SURFnet does not take any responsibility for errors in the data that is made available, or for any damages resulting from usage of that data).
Users who want to procure a UA are advised to use the data as an orientation, and to perform their own procurement tests (possibly using the checklist below as a guideline).
Also it is noted that vendors and implementors are encouraged to use the results from the checklist to improve their products.
Getting test messages For several tests in the checklist a test message is required.
Test messages can be requested in the following way: Send mail to <mime  test@relay.surfnet.nl> with a subject field containing ONE of the following:
text/plain text/enriched image/gif image/jpeg audio/basic video/mpeg application/octet stream application/postscript message/rfc822 message/partial message/external multipart
<returns a message that contains nested multipart contents> iso 8859 1
<returns a message with text/plain; charset iso 8859 1
A message containing the requested content type will be returned to the address contained in the from field.
Checklist for Mime UAs (note that for items with multiple choice options, it is possible that more than one option is applicable)
1.1 The name and version of the product 1.2
The name and addressing information of the manufacturer 1.3
What are the platforms that are supported (Operating system, GUI and hardware requirements, if applicable: what APIs are supported (like MAPI etc.))?
[Note: Please use separate checklist forms for different platforms!!]
What is the platform that was used for this checklist (Operating system, GUI and hardware)?
[Note: Only one platform per checklist!!]
1.5 Is the software available in source format or in binary format or both.
Is the software available: In the Public Domain, free of charge As shareware (what is the price?)
PD for non profit use, but not for commercial use
System installation, configuration and management 2.1
How complex/easy is installation and configuration?
Are there any pitfalls that need attention?
Can you configure per set of users (i.e systemwide or LAN wide default configuration) and/or per user?
2.2 Are there facilities for logging and/or accounting?
Does the UA generate correct RFC 822 headers for outgoing messages: From:, (and if necessary)
2.4 Is it possible for a non priviledged user to change the "from" and/or "sender" field?
Does the UA have any size restrictions (default or applied by system manager) for: Message size Number of messages Number of folders
Number of messages per folder 2.6
How secure is the users mailbox when using this UA?
Can other non privileged usets access the mailbox?
What is the performance of the UA on this platform?
(As this is difficult to measure, give your subjective impression: slow, reasonable or fast) E.g for: Displaying a text message Displaying a MIME message that contains an image Complex actions like sorting etc.
Does the UA have a graphical or a character based interface or both?
Does the UA support native RFC 822/MIME or does it require a gateway?
3.3 Which protocols are supported for message delivery: a. SMTP (MX records or static routing to Mailhost)
b. ESMTP c. POP (which version)
d. IMAP e. Co location with specific MTA (which MTA)
3.4 Which protocols are supported for message submission: a. SMTP
b. ESMTP c. Co location with specific MTA (which MTA)
3.5 Does the UA support the following basic functionalities: List messages Read messages Delete messages
Compose new messages Reply to messages (Inclusion of original message text in reply, reply to originator or to any or all recipients etc.)
Distribute message (the from field does not change)
3.6 Does the UA support the following header fields and can they be supplied by the user:
Subject: Comments: 3.7 Does the UA support filing mail into folders?
3.8 Does the UA support a filtering mechanism that allows the user to configure automatic processing of incoming mail (e.g. automatic filing into specific folders)?
If so, how simple is the configuration of these filters?
3.9 Does the UA support a sorting mechanism that allows the user to sort mail on date and/or subject and/or from field etc?
If so describe the possibilities and restrictions.
Does the UA support address lists and/or directory services?
Local (local address list, local aliases, local distribution lists etc.)
Whois  Ph (to CCSO server) LDAP or SOLO or other access protocols to a directory service
What other non multimedia facilities does the UA support?
What secure mail protocols does the UA support (in line):
Does the UA support: viewing a MIME content (either in line or through launching an external viewer)?
saving a MIME content in a file?
saving one part of a multipart message in a file?
Does the UA support receipt of the following basic MIME content types?
Does it display them in line and does it support printing of such a content type?
If an external viewer is needed, is a viewer pre configured?
Is the viewer included in the software distribution?
In line Printing External Preconfig Included text/plain text/enriched image/gif image/jpeg audio/basic video/mpeg application/octet stream application/postscript message/rfc822
Does the UA support ftp and/or mail access for: message/external Describe how the UA supports the basic multipart types: multipart/mixed multipart/parallel multipart/digest multipart/alternative
How does the UA handle:
Does the UA allow configuration for receipt of additional content types?
If so describe the configuration procedure and possibilities.
(Is it complex/easy, give example configuration, can you add external viewers etc.).
Does the UA support composition of the following basic MIME content types?
Describe how easy/complex composition of a message with a MIME content type is.
text/plain text/enriched image/gif image/jpeg audio/basic video/mpeg application/octet stream application/postscript message/rfc822 message/partial message/external multipart
Does the UA generate X <bilaterally defined> content types (when and why) 4.5
Does the UA support compostion of additional content types?
If so describe how to do this (configuration and/or compostion), e.g.: application/wordperfect5.1 application/msword 4.6
What content encodings does the UA support: 7bit quoted printable base64 binary 8bit X <bilateraly defined
What encoding is used for the following content types:
7bit QP   B64   Binary 8 bit
text/plain text/enriched image/gif image/jpeg audio/basic video/mpeg application/octet stream application/postscript message/rfc822 message/partial message/external multipart
Does the UA generate the correct Mime version header:
Mime Version: 1.0 4.9 In multipart messages, give an example of the sort of boundary string generated.
Does the UA support the use of non ascii characters in the headers (in subject, free form part of address etc.)
With the content type text/plain it is possible to have a charset parameter, indicating that a specific character set is used in the content type text plain.
What character sets (like iso 8859 1) does the UA support (standard or configurable)?
Security Considerations Testing a MIME UA against this checklist involves the security risks that are described in the MIME specification (RFC 1521).
Most notably the automatic execution of general purpose PostScript interpreters entails serious security risks.
The reader is encouraged to read RFC 1521 for more detail on these security risks.
