- contents:
  - '        Representing Tables and Subtrees in the X.500 Directory

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document defines techniques for representing two types of\n
    \  information mapping in the OSI Directory [1].\n   1.  Mapping from a key to
    a value (or set of values), as might\n       be done in a table lookup.\n   2.
    \ Mapping from a distinguished name to an associated\n       value (or values),
    where the values are not defined by the owner\n       of the entry.  This is achieved
    by use of a directory subtree.\n   These techniques were developed for supporting
    MHS use of Directory\n   [2], but are specified separately as they have more general\n
    \  applicability.\n"
  title: Abstract
- contents:
  - "1  Representing Flat Tables\n   Before considering specific function, a general
    purpose technique for\n   representing tables in the directory is introduced.
    \ The schema for\n   this is given in Figure 1.  A table can be considered as
    an unordered\n   set of key to (single or multiple) value mappings, where the
    key\n   cannot be represented as a global name.  There are four reasons why\n
    \  this may occur:\n   1.  The object does not have a natural global name.\n   2.
    \ The object can only be named effectively in the context of\n       being a key
    to a binding.  In this case, the object will be given\n       a natural global
    name by the table.\n   3.  The object has a global name, and the table is being
    used\n       to associate parameters with this object, in cases where they\n       cannot
    be placed in the objects global entry.  Reasons why they\n       might not be
    so placed include:\n        o  The object does not have a directory entry\n        o
    \ There is no authority to place the parameters in the\n           global entry\n
    \       o  The parameters are not global --- they only make sense\n           in
    the  context of the table.\n   4.  It is desirable to group information together
    as a\n       performance optimization, so that the block of information may be\n
    \      widely replicated.\n   A table is represented as a single level subtree.
    \ The root of the\n   subtree is an entry of object class Table.  This is named
    with a\n   common name descriptive of the table.  The table will be located\n
    \  somewhere appropriate to its function.  If a table is private to an\n   MTA,
    it will be below the MTA's entry.  If it is shared by MTA's in\n   an organization,
    it will be located under the organization.\n   The generic table entry contains
    only a description.  All instances\n   will be subclassed, and the subclass will
    define the naming\n   attribute.  Two subclasses are defined:\n"
  - "table OBJECT-CLASS ::= {\n    SUBCLASS OF {top}\n    MUST CONTAIN {commonName}\n
    \   MAY CONTAIN {manager}\n    ID oc-table}\n"
  - "tableEntry OBJECT-CLASS ::= {\n    SUBCLASS OF {top}\n    MAY CONTAIN {description}
    \                                      10\n    ID oc-table-entry}\n"
  - "textTableEntry OBJECT-CLASS ::= {\n    SUBCLASS OF {tableEntry}\n    MUST CONTAIN
    {textTableKey}\n    MAY CONTAIN {textTableValue}\n    ID oc-text-table-entry}\n"
  - "textTableKey ATTRIBUTE ::= {\n    SUBTYPE OF name                                                 20\n
    \   WITH SYNTAX DirectoryString {ub-name}\n    ID at-text-table-key}\n"
  - "textTableValue ATTRIBUTE ::= {\n    SUBTYPE OF name\n    WITH SYNTAX  DirectoryString
    {ub-description}\n    ID at-text-table-value}\n"
  - "distinguishedNameTableEntry OBJECT-CLASS ::= {\n    SUBCLASS OF {tableEntry}
    \                                       30\n    MUST CONTAIN {distinguishedNameTableKey}\n
    \   ID oc-distinguished-name-table-entry}\n"
  - "distinguishedNameTableKey ATTRIBUTE ::= {\n    SUBTYPE OF distinguishedName\n
    \   ID at-distinguished-name-table-key}\n                     Figure 1:  Representing
    Tables\n   1.  TextEntry, which define table entries with text keys,\n       which
    may have single or multiple values of any type.  An\n       attribute is defined
    to allow a text value, to support the\n       frequent text key to text value
    mapping.  Additional values may\n       be defined.\n   2.  DistinguishedNameEntry.
    \ This is used for associating\n       information with globally defined objects.
    \ This approach should\n       be used where the number of objects in the table
    is small or very\n       sparsely spread over the DIT. In other cases where there
    are many\n       objects or the objects are tightly clustered in the DIT, the\n
    \      subtree approach defined in Section 2 will be preferable.  No\n       value
    attributes are defined for this type of entry.  An\n       application of this
    will make appropriate subtyping to define the\n       needed values.\n   This
    is best illustrated by example.  Consider the MTA:\n   CN=Bells, OU=Computer Science,\n
    \  O=University College London, C=GB\n   Suppose that the MTA needs a table mapping
    from private keys to fully\n   qualified domain names (this example is fictitious).
    \ The table might\n   be named as:\n   CN=domain-nicknames,\n   CN=Bells, OU=Computer
    Science,\n   O=University College London, C=GB\n   To represent a mapping in this
    table from \"euclid\" to\n   \"bloomsbury.ac.uk\", the entry:\n   TextTableKey=euclid,
    CN=domain-nicknames,\n   CN=Bells, OU=Computer Science,\n   O=University College
    London, C=GB\n   will contain the attribute:\n   TextTableValue=bloomsbury.ac.uk\n
    \  A second example, showing the use of DistinguishedNameEntry is now\n   given.
    \ Consider again the MTA:\n   CN=Bells, OU=Computer Science,\n   O=University
    College London, C=GB\n   Suppose that the MTA needs a table mapping from MTA Name
    to bilateral\n   agreement information of that MTA. The table might be named as:\n
    \  CN=MTA Bilateral Agreements,\n   CN=Bells, OU=Computer Science,\n   O=University
    College London, C=GB\n   To represent information on the MTA which has the Distinguished
    Name:\n   CN=Q3T21, ADMD=Gold 400, C=GB\n   There would be an entry in this table
    with the Relative Distinguished\n   Name of the table entry being the Distinguished
    Name of the MTA being\n   referred to.  The MTA Bilateral information would be
    an attribute in\n   this entry.  Using a non-standard notation, the Distinguished
    Name of\n   the table entry is:\n   DistinguishedNameTableKey=<CN=Q3T21, ADMD=Gold
    400, C=GB>,\n   CN=MTA Bilateral Agreements,\n   CN=Bells, OU=Computer Science,\n
    \  O=University College London, C=GB\n"
  title: 1  Representing Flat Tables
- contents:
  - "2  Representing Subtrees\n   A subtree is similar to a table, except that the
    keys are constructed\n   as a distinguished name hierarchy relative to the location
    of the\n   subtree in the DIT. The subtree effectively starts a private \"root\",\n
    \  and has distinguished names relative to this root.  Typically, this\n   approach
    is used to associate local information with global objects.\n   The schema used
    is defined in Figure 2.  Functionally, this is\n   equivalent to a table with
    distinguished name keys.  The table\n   approach is best when the tree is very
    sparse.  This approach is\n   better for subtrees which are more populated.\n
    \  The subtree object class defines the root for a subtree in an\n   analogous
    means to the table.  Information within the subtree will\n   generally be defined
    in the same way as for the global object, and so\n   subtree OBJECT-CLASS ::=
    {\n       SUBCLASS OF {top}\n       MUST CONTAIN {commonName}\n       MAY CONTAIN
    {manager}\n       ID oc-subtree}\n                     Figure 2:  Representing
    Subtrees\n   no specific object classes for subtree entries are needed.\n   For
    example consider University College London.\n   O=University College London, C=GB\n
    \  Suppose that the UCL needs a private subtree, with interesting\n   information
    about directory objects.  The table might be named as:\n   CN=private subtree,\n
    \  O=University College London, C=GB\n   UCL specific information on Inria might
    be stored in the entry:\n   O=Inria, C=FR,\n   CN=private subtree,\n   O=University
    College London, C=GB\n   Practical examples of this mapping are given in [2].\n"
  title: 2  Representing Subtrees
- contents:
  - "3  Acknowledgments\n   Acknowledgments for work on this document are given in
    [2].\n"
  - "References\n   [1] The Directory --- overview of concepts, models and services,\n
    \      1993. CCITT X.500 Series Recommendations.\n   [2] Kille, S.E., \"X.400-MHS
    use of the X.500 directory to support\n       X.400-MHS routing,\" RFC 1801, June
    1995.\n"
  title: 3  Acknowledgments
- contents:
  - "4  Security Considerations\n   Security considerations are not discussed in this
    memo.\n"
  title: 4  Security Considerations
- contents:
  - "5  Author's Address\n   Steve Kille\n   Isode Ltd\n   The Dome\n   The Square\n
    \  Richmond\n   TW9 1DT\n   England\n   Phone:  +44-181-332-9091\n   EMail:  S.Kille@ISODE.COM\n"
  title: 5  Author's Address
- contents:
  - 'A  Object Identifier Assignment

    '
  - "mhs-ds OBJECT IDENTIFIER ::= {iso(1) org(3) dod(6) internet(1)\n          private(4)
    enterprises(1) isode-consortium (453) mhs-ds (7)}\n"
  - 'tables OBJECT IDENTIFIER ::= {mhs-ds 1}

    '
  - 'oc OBJECT IDENTIFIER ::= {tables 1}

    '
  - 'at OBJECT IDENTIFIER ::= {tables 2}

    '
  - 'oc-subtree OBJECT IDENTIFIER ::= {oc 1}

    '
  - 'oc-table OBJECT IDENTIFIER ::= {oc 2}                               10

    '
  - 'oc-table-entry OBJECT IDENTIFIER ::= {oc 3}

    '
  - 'oc-text-table-entry OBJECT IDENTIFIER ::= {oc 4}

    '
  - 'oc-distinguished-name-table-entry  OBJECT IDENTIFIER ::= {oc 5}

    '
  - 'at-text-table-key OBJECT IDENTIFIER ::= {at 1}

    '
  - 'at-text-table-value OBJECT IDENTIFIER ::= {at 2}

    '
  - "at-distinguished-name-table-key OBJECT IDENTIFIER ::= {at 3}\n                Figure
    3:  Object Identifier Assignment\n"
  title: A  Object Identifier Assignment
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (1998).  All
    Rights Reserved.\n   This document and translations of it may be copied and furnished
    to\n   others, and derivative works that comment on or otherwise explain it\n
    \  or assist in its implementation may be prepared, copied, published\n   and
    distributed, in whole or in part, without restriction of any\n   kind, provided
    that the above copyright notice and this paragraph are\n   included on all such
    copies and derivative works.  However, this\n   document itself may not be modified
    in any way, such as by removing\n   the copyright notice or references to the
    Internet Society or other\n   Internet organizations, except as needed for the
    purpose of\n   developing Internet standards in which case the procedures for\n
    \  copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: Full Copyright Statement
