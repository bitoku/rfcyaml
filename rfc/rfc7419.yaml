- title: __initial_text__
  contents:
  - '     Common Interval Support in Bidirectional Forwarding Detection

    '
- title: Abstract
  contents:
  - "Abstract\n   Bidirectional Forwarding Detection (BFD) requires that messages\
    \ be\n   transmitted at regular intervals and provides a way to negotiate the\n\
    \   interval used by BFD peers.  Some BFD implementations may be\n   restricted\
    \ to only support several interval values.  When such BFD\n   implementations\
    \ speak to each other, there is a possibility of two\n   sides not being able\
    \ to find a common value for the interval to run\n   BFD sessions.\n   This document\
    \ updates RFC 5880 by defining a small set of interval\n   values for BFD that\
    \ we call \"Common Intervals\" and recommends\n   implementations to support the\
    \ defined intervals.  This solves the\n   problem of finding an interval value\
    \ that both BFD speakers can\n   support while allowing a simplified implementation\
    \ as seen for\n   hardware-based BFD.  It does not restrict an implementation\
    \ from\n   supporting more intervals in addition to the Common Intervals.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7419.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n   2.  The Problem with Few Supported Intervals  . . . . . .\
    \ . . . .   3\n   3.  Well-Defined, Common Intervals  . . . . . . . . . . . .\
    \ . . .   4\n   4.  Security Considerations . . . . . . . . . . . . . . . . .\
    \ . .   4\n   5.  References  . . . . . . . . . . . . . . . . . . . . . . . .\
    \ .   5\n     5.1.  Normative References  . . . . . . . . . . . . . . . . . .\
    \   5\n     5.2.  Informative References  . . . . . . . . . . . . . . . . .  \
    \ 5\n   Appendix A.  Why Some Values Are in the Common Interval Set . . .   6\n\
    \   Appendix B.  Timer Adjustment with Non-identical Interval Sets  .   6\n  \
    \ Acknowledgments . . . . . . . . . . . . . . . . . . . . . . . . .   8\n   Authors'\
    \ Addresses  . . . . . . . . . . . . . . . . . . . . . . .   8\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Bidirectional Forwarding Detection (BFD) standard [RFC5880]\n\
    \   describes how to calculate the transmission interval and the\n   detection\
    \ time.  However, it does not make any statement about how to\n   solve a situation\
    \ where one BFD speaker cannot support the calculated\n   value.  In practice,\
    \ this may not have been a problem as long as\n   software-implemented timers\
    \ were used and as long as the granularity\n   of such timers was small compared\
    \ to the interval values being\n   supported, i.e. as long as the error in the\
    \ timer interval was small\n   compared to 25 percent jitter.\n   In the meantime,\
    \ requests exist for very fast interval values, down\n   to 3.3 msec for the MPLS\
    \ Transport Profile (MPLS-TP).  At the same\n   time, the requested scale for\
    \ the number of BFD sessions is\n   increasing.  Both requirements have driven\
    \ vendors to use Network\n   Processors (NP), Field Programmable Gate Arrays (FPGAs),\
    \ or other\n   hardware-based solutions to offload the periodic packet transmission\n\
    \   and the timeout detection in the receive direction.  A potential\n   problem\
    \ with this hardware-based BFD is the granularity of the\n   interval timers.\
    \  Depending on the implementation, only a few\n   intervals may be supported,\
    \ which can cause interoperability\n   problems.  This document proposes a set\
    \ of interval values that\n   should be supported by all implementations.  Details\
    \ are laid out in\n   the following sections.\n"
- title: 2.  The Problem with Few Supported Intervals
  contents:
  - "2.  The Problem with Few Supported Intervals\n   Let's assume vendor \"A\" supports\
    \ 10 msec, 100 msec, and 1 sec\n   interval timers in hardware, and vendor \"\
    B\" supports every value from\n   20 msec onward, with a granularity of 1 msec.\
    \  For a BFD session, \"A\"\n   tries to set up the session with 10 msec while\
    \ \"B\" uses 20 msec as\n   the value for RequiredMinRxInterval and DesiredMinTxInterval.\
    \  Rx and\n   Tx are negotiated as described in [RFC5880], which is 20 msec in\
    \ this\n   case.  However, system \"A\" is not able to support the 20 msec\n \
    \  interval timer.  Multiple ways exist to resolve the dilemma, but none\n   of\
    \ them is without problems.\n   a.  Realizing that it cannot support 20 msec,\
    \ system \"A\" sends out a\n       new BFD packet advertising the next larger\
    \ interval of 100 msec\n       with RequiredMinRxInterval and DesiredMinTxInterval.\
    \  The new\n       negotiated interval between \"A\" and \"B\" is then 100 msec,\
    \ which\n       is supported by both systems.  However, the problem is that we\n\
    \       moved from the 10/20 msec range to 100 msec, which has far\n       deviated\
    \ from operator expectations.\n   b.  System \"A\" could violate [RFC5880] and\
    \ use the 10 msec interval\n       for the Tx direction.  In the receive direction,\
    \ it could use an\n       adjusted multiplier value M' = 2 * M to match the correct\n\
    \       detection time.  Now, in addition to the fact that we explicitly\n   \
    \    violate [RFC5880], there may be the problem that system \"B\" drops\n   \
    \    up to 50% of the packets; this could be the case when \"B\" uses an\n   \
    \    ingress rate policer to protect itself and the policer would be\n       programmed\
    \ with an expectation of 20 msec receive intervals.\n   The example above could\
    \ be worse when we assume that system \"B\" can\n   only support a few timer values\
    \ itself.  Let's assume \"B\" supports 20\n   msec, 300 msec, and 1 sec.  If both\
    \ systems would adjust their\n   advertised intervals, then the adjustment ends\
    \ at 1 sec.  The example\n   above could even be worse when we assume that system\
    \ \"B\" can only\n   support 50 msec, 500 msec, and 2 sec.  Even if both systems\
    \ walk\n   through all of their supported intervals, the two systems will never\n\
    \   be able to agree on an interval to run any BFD sessions.\n"
- title: 3.  Well-Defined, Common Intervals
  contents:
  - "3.  Well-Defined, Common Intervals\n   The problem can be reduced by defining\
    \ interval values that are\n   supported by all implementations.  Then, the adjustment\
    \ mechanism\n   could find a commonly supported interval without deviating too\
    \ much\n   from the original request.\n   In technical terms, the requirement\
    \ is as follows: a BFD\n   implementation should support all values in the set\
    \ of Common\n   Interval values that are equal to or larger than the fastest (i.e.,\n\
    \   lowest) interval the particular BFD implementation supports.\n   This document\
    \ defines the set of Common Interval values to be: 3.3\n   msec, 10 msec, 20 msec,\
    \ 50 msec, 100 msec, and 1 sec.\n   In addition, both a 10 sec interval and multiplier\
    \ values up to 255\n   are recommended to support graceful restart.\n   The adjustment\
    \ is always towards larger (i.e., slower) interval\n   values when the initial\
    \ interval proposed by the peer is not\n   supported.\n   This document is not\
    \ adding new requirements with respect to the\n   precision with which a timer\
    \ value must be implemented.  Supporting\n   an interval value means advertising\
    \ this value in the\n   DesiredMinTxInterval and/or RequiredMinRxInterval field\
    \ of the BFD\n   packets and providing timers that are reasonably close.  [RFC5880]\n\
    \   defines safety margins for the timers by defining a jitter range.\n   How\
    \ is the Common Interval set used exactly?  In the example above,\n   vendor \"\
    A\" has a fastest interval of 10 msec and thus would be\n   required to support\
    \ all intervals in the Common Interval set that are\n   equal or larger than 10\
    \ msec, i.e., it would support 10 msec, 20\n   msec, 50 msec, 100 msec, and 1\
    \ sec.  Vendor \"B\" has a fastest\n   interval of 20 msec and thus would need\
    \ to support 20 msec, 50 msec,\n   100 msec, and 1 sec.  As long as this requirement\
    \ is met for the\n   common set of values, then both vendor \"A\" and \"B\" are\
    \ free to\n   support additional values outside of the Common Interval set.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   This document does not introduce any additional\
    \ security concerns.\n   The security considerations described in the BFD documents,\
    \ [RFC5880]\n   and others, apply to devices implementing the BFD protocol,\n\
    \   regardless of whether or not the Common Interval set is implemented.\n"
- title: 5.  References
  contents:
  - '5.  References

    '
- title: 5.1.  Normative References
  contents:
  - "5.1.  Normative References\n   [RFC5880]  Katz, D. and D. Ward, \"Bidirectional\
    \ Forwarding Detection\n              (BFD)\", RFC 5880, June 2010,\n        \
    \      <http://www.rfc-editor.org/info/rfc5880>.\n"
- title: 5.2.  Informative References
  contents:
  - "5.2.  Informative References\n   [G.8013_Y.1731]\n              International\
    \ Telecommunications Union, \"OAM functions and\n              mechanisms for\
    \ Ethernet based networks\", ITU-T\n              Recommendation G.8013/Y.1731,\
    \ November 2013.\n   [GR-253-CORE]\n              Telcordia Technologies, Inc.,\
    \ \"Synchronous Optical Network\n              (SONET) Transport Systems: Common\
    \ Generic Criteria\",\n              GR-253-CORE Issue 05, October 2009.\n"
- title: Appendix A.  Why Some Values Are in the Common Interval Set
  contents:
  - "Appendix A.  Why Some Values Are in the Common Interval Set\n   The list of Common\
    \ Interval values is trying to balance various\n   objectives.  The list should\
    \ not contain too many values, as more\n   timers may increase the implementation\
    \ costs.  On the other hand,\n   fewer values produces larger gaps and adjustment\
    \ jumps.  More values\n   in the lower interval range are thus seen as critical\
    \ to support\n   customer needs for fast detection in setups with multiple vendors.\n\
    \   o  3.3 msec: required by MPLS-TP, to support the defect detection\n      time\
    \ of 10 msec from [GR-253-CORE].\n   o  10 msec: general consensus is to support\
    \ 10 msec.  Multiple\n      vendors plan to or do already implement 10 msec.\n\
    \   o  20 msec: basically avoids a larger gap in this critical interval\n    \
    \  region.  Still allows 50-60 msec detect and restore (with\n      multiplier\
    \ of 2) and covers existing software-based\n      implementations.\n   o  50 msec:\
    \ widely deployed interval.  Supporting this value reflects\n      the reality\
    \ of many BFD implementations today.\n   o  100 msec: similar to 10 msec, this\
    \ value allows the reuse of\n      [G.8013_Y.1731] implementations, especially\
    \ hardware.  It supports\n      a large number of 100 msec sessions with multiplier\
    \ 9 (9 x 100\n      msec), which could be replacing of 3 x 300 msec configurations\n\
    \      used by customers to have a detection time slightly below 1 sec\n     \
    \ for VoIP setups.\n   o  1 sec: as mentioned in [RFC5880].  While the interval\
    \ for Down\n      packets can be 1 sec or larger, this document recommends use\
    \ of\n      exactly 1 sec to avoid interoperability issues.\n   The recommended\
    \ value for large intervals is 10 sec, allowing for a\n   timeout of 42.5 minutes\
    \ with a multiplier of 255.  This value is kept\n   outside the Common Interval\
    \ set, as it is not required for normal BFD\n   operations that occur in the sub-second\
    \ range.  Instead, the expected\n   usage is for graceful restart, if needed.\n"
- title: Appendix B.  Timer Adjustment with Non-identical Interval Sets
  contents:
  - "Appendix B.  Timer Adjustment with Non-identical Interval Sets\n   [RFC5880]\
    \ implicitly assumes that a BFD implementation can support\n   any timer value\
    \ equal to or above the advertised value.  When a BFD\n   speaker starts a Poll\
    \ Sequence, then the peer must reply with the\n   Final (F) bit set and adjust\
    \ the transmit and detection timers\n   accordingly.  With contiguous software-based\
    \ timers, this is a valid\n   assumption.  Even in the case of a small number\
    \ of supported interval\n   values, this assumption holds when both BFD speakers\
    \ support exactly\n   the same interval values.\n   But what happens when both\
    \ speakers support intervals that are not\n   supported by the peer?  An example\
    \ is router \"A\" supporting the\n   Common Interval set plus 200 msec, while\
    \ router \"B\" supports the\n   Common Intervals plus 300 msec.  Assume both routers\
    \ are configured\n   and run at 50 msec.  Now, router A is configured for 200\
    \ msec.  We\n   know the result must be that both BFD speakers use 1 sec timers,\
    \ but\n   how do they reach this endpoint?\n   First, router A sends a packet\
    \ with 200 msec.  The P bit is set\n   according to [RFC5880].  The Tx timer stays\
    \ at 50 msec, the detection\n   timer is 3 * 200 msec:\n      (A) DesiredTx: 200\
    \ msec, MinimumRx: 200 msec, P-bit\n      Tx: 50 msec, Detect: 3 * 200 msec\n\
    \   Router B now must reply with an F bit.  The problem is B is\n   confirming\
    \ timer values that it cannot support.  The only setting to\n   avoid a session\
    \ flap would be\n      (B) DesiredTx: 300 msec, MinimumRx: 300 msec, F-bit\n \
    \     Tx: 50 msec, Detect: 3 * 300 msec\n   immediately followed by a P-bit packet,\
    \ as the advertised timer\n   values have been changed:\n      (B) DesiredTx:\
    \ 300 msec, MinimumRx: 300 msec, P-bit\n      Tx: 50 msec, Detect: 3 * 300 msec\n\
    \   This is not exactly what Section 6.8.7 of [RFC5880] states about the\n   transmission\
    \ rate.  On the other hand, as we will see, this state\n   does not last for long.\
    \  Router A would adjust its timers based on\n   the received Final bit:\n   \
    \   (A) Tx: 200 msec, Detect: 3 * 1 sec\n   Router A is not supporting the proposed\
    \ 300 msec and would use 1 sec\n   instead for the detection time.  It would then\
    \ respond to the\n   received Poll Sequence from router B using 1 sec, as router\
    \ A does\n   not support the Max(200 msec, 300 msec):\n      (A) DesiredTx: 1\
    \ sec, MinimumRx: 1 sec, F-bit\n      Tx: 200 msec, Detect: 3 * 1 sec\n   followed\
    \ by its own Poll Sequence, as the advertised timer values\n   have been changed:\n\
    \      (A) DesiredTx: 1 sec, MinimumRx: 1 sec, P-bit\n      Tx: 200 msec, Detect:\
    \ 3 * 1 sec\n   Router B would adjust its timers based on the received Final bit\n\
    \      (B) Tx: 300 msec , Detect: 3 * 1 sec\n   and would then reply to the Poll\
    \ Sequence from router A:\n      (B) DesiredTx: 300 msec, MinimumRx: 300 msec,\
    \ F-bit\n      Tx: 1 sec, Detect: 3 * 1 sec\n   which finally makes router A adjust\
    \ its timers:\n      (A) Tx: 1 sec, Detect: 3 * 1 sec\n   In other words, router\
    \ A and B go through multiple Poll Sequences\n   until they reach a commonly supported\
    \ interval value.  Reaching such\n   a value is guaranteed by this document.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   We would like to thank Sylvain Masse and Anca Zamfir for\
    \ bringing up\n   the discussion about the Poll Sequence, and Jeffrey Haas for\
    \ helping\n   find the fine line between \"exact\" and \"pedantic\".\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Nobo Akiya\n   Cisco Systems\n   EMail: nobo@cisco.com\n\
    \   Marc Binderberger\n   Cisco Systems\n   EMail: mbinderb@cisco.com\n   Greg\
    \ Mirsky\n   Ericsson\n   EMail: gregory.mirsky@ericsson.com\n"
