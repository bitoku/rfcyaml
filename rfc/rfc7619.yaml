- title: __initial_text__
  contents:
  - "                     The NULL Authentication Method\n        in the Internet\
    \ Key Exchange Protocol Version 2 (IKEv2)\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies the NULL Authentication method and the\n\
    \   ID_NULL Identification Payload ID Type for Internet Key Exchange\n   Protocol\
    \ version 2 (IKEv2).  This allows two IKE peers to establish\n   single-side authenticated\
    \ or mutual unauthenticated IKE sessions for\n   those use cases where a peer\
    \ is unwilling or unable to authenticate\n   or identify itself.  This ensures\
    \ IKEv2 can be used for Opportunistic\n   Security (also known as Opportunistic\
    \ Encryption) to defend against\n   Pervasive Monitoring attacks without the need\
    \ to sacrifice anonymity.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7619.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n     1.1.  Conventions Used in This Document . . . . . . . .\
    \ . . . .   4\n   2.  Using the NULL Authentication Method  . . . . . . . . .\
    \ . . .   4\n     2.1.  Authentication Payload  . . . . . . . . . . . . . . .\
    \ . .   4\n     2.2.  Identification Payload  . . . . . . . . . . . . . . . .\
    \ .   4\n     2.3.  INITIAL_CONTACT Notification  . . . . . . . . . . . . . .\
    \   5\n     2.4.  Interaction with the Peer Authorization Database (PAD)  .  \
    \ 5\n     2.5.  Traffic Selectors . . . . . . . . . . . . . . . . . . . .   6\n\
    \   3.  Security Considerations . . . . . . . . . . . . . . . . . . .   7\n  \
    \   3.1.  Audit Trail and Peer Identification . . . . . . . . . . .   7\n    \
    \ 3.2.  Resource Management and Robustness  . . . . . . . . . . .   8\n     3.3.\
    \  IKE Configuration Selection . . . . . . . . . . . . . . .   8\n     3.4.  Networking\
    \ Topology Changes . . . . . . . . . . . . . . .   8\n   4.  IANA Considerations\
    \ . . . . . . . . . . . . . . . . . . . . .   9\n   5.  References  . . . . .\
    \ . . . . . . . . . . . . . . . . . . . .   9\n     5.1.  Normative References\
    \  . . . . . . . . . . . . . . . . . .   9\n     5.2.  Informative References\
    \  . . . . . . . . . . . . . . . . .   9\n   Appendix A.  Update of PAD processing\
    \ in RFC 4301 . . . . . . . .  11\n   Acknowledgments . . . . . . . . . . . .\
    \ . . . . . . . . . . . . .  12\n   Authors' Addresses  . . . . . . . . . . .\
    \ . . . . . . . . . . . .  12\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Internet Key Exchange Protocol version 2 (IKEv2), specified\
    \ in\n   [RFC7296], provides a way for two parties to perform an authenticated\n\
    \   key exchange.  While the authentication methods used by the peers can\n  \
    \ be different, there is no method for one or both parties to remain\n   unauthenticated\
    \ and anonymous.  This document extends the\n   authentication methods to support\
    \ unauthenticated and anonymous IKE\n   sessions.\n   In some situations, mutual\
    \ authentication is undesirable,\n   superfluous, or impossible.  The following\
    \ three examples illustrate\n   these unauthenticated use cases:\n   o  A user\
    \ wants to establish an anonymous secure connection to a\n      server.  In this\
    \ situation, the user should be able to\n      authenticate the server without\
    \ presenting or authenticating to\n      the server with their own identity. \
    \ This case uses a single-sided\n      authentication of the responder.\n   o\
    \  A sensor that periodically wakes up from a suspended state wants\n      to\
    \ send a measurement (e.g., temperature) to a collecting server.\n      The sensor\
    \ must be authenticated by the server to ensure\n      authenticity of the measurement,\
    \ but the sensor does not need to\n      authenticate the server.  This case uses\
    \ a single-sided\n      authentication of the initiator.\n   o  Two peers without\
    \ any trust relationship wish to defend against\n      widespread pervasive monitoring\
    \ attacks as described in [RFC7258].\n      Without a trust relationship, the\
    \ peers cannot authenticate each\n      other.  Opportunistic Security [RFC7435]\
    \ states that\n      unauthenticated encrypted communication is preferred over\n\
    \      cleartext communication.  The peers want to use IKE to setup an\n     \
    \ unauthenticated encrypted connection that gives them protection\n      against\
    \ pervasive monitoring attacks.  An attacker that is able\n      and willing to\
    \ send packets can still launch a man-in-the-middle\n      (MITM) attack to obtain\
    \ a copy of the unencrypted communication.\n      This case uses a fully unauthenticated\
    \ key exchange.\n   To meet these needs, this document introduces the NULL Authentication\n\
    \   method and the ID_NULL ID type.  This allows an IKE peer to\n   explicitly\
    \ indicate that it is unwilling or unable to certify its\n   identity.\n"
- title: 1.1.  Conventions Used in This Document
  contents:
  - "1.1.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 2.  Using the NULL Authentication Method
  contents:
  - "2.  Using the NULL Authentication Method\n   In IKEv2, each peer independently\
    \ selects the method to authenticate\n   itself to the other side.  A peer may\
    \ choose to refrain from\n   authentication by using the NULL Authentication method.\
    \  If a host's\n   local policy requires that the identity of its peer be (non-null)\n\
    \   authenticated, and if that host receives an AUTH payload containing\n   the\
    \ NULL Authentication method type, it MUST return an\n   AUTHENTICATION_FAILED\
    \ notification.  If an initiator uses the\n   Extensible Authentication Protocol\
    \ (EAP), the responder MUST NOT use\n   the NULL Authentication method (in conformance\
    \ with Section 2.16 of\n   [RFC7296]).\n   NULL authentication affects how the\
    \ Authentication and the\n   Identification payloads are formed in the IKE_AUTH\
    \ exchange.\n"
- title: 2.1.  Authentication Payload
  contents:
  - "2.1.  Authentication Payload\n   NULL authentication still requires a properly\
    \ formed AUTH payload to\n   be present in the IKE_AUTH exchange messages, as\
    \ the AUTH payload\n   cryptographically links the IKE_SA_INIT exchange messages\
    \ with the\n   other messages sent over this IKE Security Association (SA).\n\
    \   When using NULL authentication, the content of the AUTH payload is\n   computed\
    \ using the syntax of pre-shared secret authentication,\n   described in Section\
    \ 2.15 of [RFC7296].  The value of SK_pi for the\n   initiator and SK_pr for the\
    \ responder is used as the shared secret\n   for the content of the AUTH payload.\
    \  Implementers should note this\n   means that authentication keys used by the\
    \ two peers are different in\n   each direction.  This is identical to how the\
    \ contents of the two\n   last AUTH payloads are generated for the non-key-generating\
    \ EAP\n   methods (see Section 2.16 of [RFC7296] for details).\n   The IKEv2 Authentication\
    \ Method value for NULL Authentication is 13.\n"
- title: 2.2.  Identification Payload
  contents:
  - "2.2.  Identification Payload\n   When a remote peer is not authenticated, any\
    \ ID presented in the\n   Identification Data field of the ID payload cannot be\
    \ validated.  To\n   avoid the need of sending a bogus ID Type with placeholder\
    \ data, this\n   specification defines a new ID Type, ID_NULL.  The Identification\n\
    \   Data field of the ID payload for this ID Type MUST be empty.\n   If NULL authentication\
    \ is in use and anonymity is a concern, then\n   ID_NULL SHOULD be used in the\
    \ Identification payload.  Some examples\n   of cases where a non-null identity\
    \ type and value with NULL\n   authentication can be used are logging, troubleshooting,\
    \ and in\n   scenarios where authentication takes place out of band after the\
    \ IKE\n   SA is created (like in [AUTOVPN]).  The content of the Identification\n\
    \   payload MUST NOT be used for any trust and policy checking in\n   IKE_AUTH\
    \ exchange when NULL authentication is employed (see\n   Section 2.4 for details).\n\
    \   ID_NULL is primarily intended to be used with NULL authentication but\n  \
    \ could be used in other situations where the content of the\n   Identification\
    \ payload is not used.  For example, ID_NULL could be\n   used when authentication\
    \ is performed via raw public keys and the\n   identities are the keys themselves.\
    \  These alternative uses of\n   ID_NULL should be described in their own respective\
    \ documents.\n   The IKEv2 Identification Payload ID Type for ID_NULL is 13.\n"
- title: 2.3.  INITIAL_CONTACT Notification
  contents:
  - "2.3.  INITIAL_CONTACT Notification\n   The identity of a peer using NULL authentication\
    \ cannot be used to\n   find existing IKE SAs created by the same peer, as the\
    \ peer identity\n   is not authenticated.  For that reason, the INITIAL_CONTACT\n\
    \   notifications MUST NOT be used to delete any other IKE SAs based on\n   the\
    \ same peer identity without additional verification that the\n   existing IKE\
    \ SAs with matching identity are actually stale.\n   The standard IKE Liveness\
    \ Check procedure, described in Section 2.4\n   of [RFC7296], can be used to detect\
    \ stale IKE SAs created by peers\n   using NULL authentication.  Inactive, unauthenticated\
    \ IKE SAs should\n   be checked periodically.  Additionally, the event of creating\
    \ a new\n   unauthenticated IKE SA can be used to trigger an out-of-order check\n\
    \   on existing unauthenticated IKE SAs possibly limited to identical or\n   close-by\
    \ IP addresses or to identical identities of the just created\n   IKE SA.\n  \
    \ Implementations should weigh the resource consumption of sending\n   Liveness\
    \ Checks against the memory usage of possible orphaned IKE\n   SAs.  Implementations\
    \ may choose to handle situations with thousands\n   of unauthenticated IKE SAs\
    \ differently from situations with very few\n   such SAs.\n"
- title: 2.4.  Interaction with the Peer Authorization Database (PAD)
  contents:
  - "2.4.  Interaction with the Peer Authorization Database (PAD)\n   Section 4.4.3\
    \ of [RFC4301] defines the Peer Authorization Database\n   (PAD), which provides\
    \ the link between the Security Policy Database\n   (SPD) and IKEv2.  The PAD\
    \ contains an ordered list of records with\n   peers' identities along with corresponding\
    \ authentication data and\n   Child SA authorization data.  When the IKE SA is\
    \ being established,\n   the PAD is consulted to determine how the peer should\
    \ be\n   authenticated and what Child SAs it is authorized to create.\n   When\
    \ using NULL authentication, the peer identity is not\n   authenticated and cannot\
    \ be trusted.  If ID_NULL is used with NULL\n   authentication, there is no ID\
    \ at all.  The processing of the PAD\n   described in Section 4.4.3 of [RFC4301]\
    \ is updated for NULL\n   authentication as follows.\n   NULL authentication is\
    \ added as one of the supported authentication\n   methods.  This method does\
    \ not have any authentication data.  ID_NULL\n   is included into the list of\
    \ allowed ID types.  The matching rule for\n   ID_NULL consists only of whether\
    \ this type is used, i.e., no actual\n   ID matching is done as ID_NULL contains\
    \ no identity data.\n   When using the NULL Authentication method, those matching\
    \ rules MUST\n   include matching of a new flag in the SPD entry specifying whether\n\
    \   unauthenticated users are allowed to use that entry.  That is, each\n   SPD\
    \ entry needs to be augmented to have a flag specifying whether it\n   can be\
    \ used with NULL authentication or not, and only those rules\n   that explicitly\
    \ have that flag turned on can be used with\n   unauthenticated connections.\n\
    \   The specific updates of text in Section 4.4.3 of [RFC4301] are listed\n  \
    \ in Appendix A.\n"
- title: 2.5.  Traffic Selectors
  contents:
  - "2.5.  Traffic Selectors\n   Traffic Selectors and narrowing allow two IKE peers\
    \ to mutually agree\n   on a traffic range for an IPsec SA.  An unauthenticated\
    \ peer must not\n   be allowed to use this mechanism to steal traffic that an\
    \ IKE peer\n   intended to be for another host.  This is especially problematic\
    \ when\n   supporting anonymous IKE peers behind NAT, as such IKE peers build\
    \ an\n   IPsec SA using their pre-NAT IP address that is different from the\n\
    \   source IP of their IKE packets.  A rogue IKE peer could use malicious\n  \
    \ Traffic Selectors to trick a remote host into giving it IP traffic\n   that\
    \ the remote host never intended to be sent to remote IKE peers.\n   For example,\
    \ if the remote host uses 192.0.2.1 as the DNS server, a\n   rogue IKE peer could\
    \ set its Traffic Selector to 192.0.2.1 in an\n   attempt to receive the remote\
    \ peer's DNS traffic.  Implementations\n   SHOULD restrict and isolate all anonymous\
    \ IKE peers from each other\n   and itself and only allow it access to itself\
    \ and possibly its\n   intended network ranges.\n   One method to achieve this\
    \ is to always assign internal IP addresses\n   to unauthenticated IKE clients,\
    \ as described in Section 2.19 of\n   [RFC7296].  Implementations may also use\
    \ other techniques such as\n   internal NAT and connection tracking.\n   Implementations\
    \ MAY force unauthenticated IKE peers to single host-\n   to-host IPsec SAs. \
    \ When using IPv6, this is not always possible, so\n   implementations MUST be\
    \ able to assign a full /64 address block to\n   the peer as described in [RFC5739],\
    \ even if it is not authenticated.\n"
- title: 3.  Security Considerations
  contents:
  - "3.  Security Considerations\n   If authenticated IKE sessions are possible for\
    \ a certain Traffic\n   Selector range between the peers, then unauthenticated\
    \ IKE SHOULD NOT\n   be allowed for that Traffic Selector range.  When mixing\n\
    \   authenticated and unauthenticated IKE with the same peer, policy\n   rules\
    \ should ensure the highest level of security will be used to\n   protect the\
    \ communication between the two peers.  See [RFC7435] for\n   details.\n   If\
    \ both peers use NULL authentication, the entire key exchange\n   becomes unauthenticated.\
    \  This makes the IKE session vulnerable to\n   active MITM attacks.\n   Using\
    \ an ID Type other than ID_NULL with the NULL Authentication\n   method may compromise\
    \ the client's anonymity in case of an active\n   MITM attack.\n   IKE implementations\
    \ without NULL authentication have always performed\n   mutual authentication\
    \ and were not designed for use with\n   unauthenticated IKE peers.  Implementations\
    \ might have made\n   assumptions that remote peers are identified.  With NULL\n\
    \   authentication, these assumptions are no longer valid.  Furthermore,\n   the\
    \ host itself might have made trust assumptions or may not be aware\n   of the\
    \ network topology changes that resulted from IPsec SAs from\n   unauthenticated\
    \ IKE peers.\n"
- title: 3.1.  Audit Trail and Peer Identification
  contents:
  - "3.1.  Audit Trail and Peer Identification\n   With NULL authentication, an established\
    \ IKE session is no longer\n   guaranteed to provide a verifiable (authenticated)\
    \ entity known to\n   the system or network.  Any logging of unproven ID payloads\
    \ that were\n   not authenticated should be clearly marked and treated as \"untrusted\"\
    \n   and possibly accompanied by logging the remote IP address of the IKE\n  \
    \ session.  Rate limiting of logging might be required to prevent\n   excessive\
    \ resource consumption causing system damage.\n"
- title: 3.2.  Resource Management and Robustness
  contents:
  - "3.2.  Resource Management and Robustness\n   Section 2.6 of [RFC7296] provides\
    \ guidance for mitigation of denial-\n   of-service (DoS) attacks by issuing COOKIES\
    \ in response to resource\n   consumption of half-open IKE SAs.  Furthermore,\
    \ [DDOS-PROTECTION]\n   offers additional countermeasures in an attempt to distinguish\n\
    \   attacking IKE packets from legitimate IKE peers.\n   These defense mechanisms\
    \ do not take into account IKE systems that\n   allow unauthenticated IKE peers.\
    \  An attacker using NULL\n   authentication is a fully legitimate IKE peer that\
    \ is only\n   distinguished from authenticated IKE peers by having used NULL\n\
    \   authentication.\n   Implementers that implement NULL authentication should\
    \ ensure their\n   implementation does not make any assumptions that depend on\
    \ IKE peers\n   being \"friendly\", \"trusted\", or \"identifiable\".  While\n\
    \   implementations should have been written to account for abusive\n   authenticated\
    \ clients, any omission or error in handling abusive\n   clients may have gone\
    \ unnoticed because abusive clients have been a\n   rare or nonexistent problem.\
    \  When adding support for unauthenticated\n   IKE peers, these implementation\
    \ omissions and errors will be found\n   and abused by attackers.  For example,\
    \ an unauthenticated IKE peer\n   could send an abusive amount of Liveness probes\
    \ or Delete requests.\n"
- title: 3.3.  IKE Configuration Selection
  contents:
  - "3.3.  IKE Configuration Selection\n   Combining authenticated and unauthenticated\
    \ IKE peers on a single\n   host can be dangerous, assuming the authenticated\
    \ IKE peer gains more\n   or different access from unauthenticated peers (otherwise,\
    \ why not\n   only allow unauthenticated peers).  An unauthenticated IKE peer\
    \ MUST\n   NOT be able to reach resources only meant for authenticated IKE peers\n\
    \   and MUST NOT be able to replace the Child SAs of an authenticated IKE\n  \
    \ peer.\n"
- title: 3.4.  Networking Topology Changes
  contents:
  - "3.4.  Networking Topology Changes\n   When a host relies on packet filters or\
    \ firewall software to protect\n   itself, establishing an IKE SA and installing\
    \ an IPsec SA might\n   accidentally circumvent these packet filters and firewall\n\
    \   restrictions, as the Encapsulating Security Payload (ESP, protocol\n   50)\
    \ or ESPinUDP (UDP port 4500) packets of the encrypted traffic do\n   not match\
    \ the packet filters defined for unencrypted traffic.  IKE\n   peers supporting\
    \ unauthenticated IKE MUST pass all decrypted traffic\n   through the same packet\
    \ filters and security mechanisms as incoming\n   plaintext traffic.\n"
- title: 4.  IANA Considerations
  contents:
  - "4.  IANA Considerations\n   Per this document, IANA has added a new entry in\
    \ the \"IKEv2\n   Authentication Method\" registry:\n     13       NULL Authentication\n\
    \   Per this document, IANA has added a new entry in the \"IKEv2\n   Identification\
    \ Payload ID Types\" registry:\n     13       ID_NULL\n"
- title: 5.  References
  contents:
  - '5.  References

    '
- title: 5.1.  Normative References
  contents:
  - "5.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC4301]  Kent, S. and K. Seo, \"Security Architecture for the\n        \
    \      Internet Protocol\", RFC 4301, DOI 10.17487/RFC4301,\n              December\
    \ 2005, <http://www.rfc-editor.org/info/rfc4301>.\n   [RFC5739]  Eronen, P., Laganier,\
    \ J., and C. Madson, \"IPv6\n              Configuration in Internet Key Exchange\
    \ Protocol Version 2\n              (IKEv2)\", RFC 5739, DOI 10.17487/RFC5739,\
    \ February 2010,\n              <http://www.rfc-editor.org/info/rfc5739>.\n  \
    \ [RFC7296]  Kaufman, C., Hoffman, P., Nir, Y., Eronen, P., and T.\n         \
    \     Kivinen, \"Internet Key Exchange Protocol Version 2\n              (IKEv2)\"\
    , STD 79, RFC 7296, DOI 10.17487/RFC7296, October\n              2014, <http://www.rfc-editor.org/info/rfc7296>.\n"
- title: 5.2.  Informative References
  contents:
  - "5.2.  Informative References\n   [RFC7258]  Farrell, S. and H. Tschofenig, \"\
    Pervasive Monitoring Is an\n              Attack\", BCP 188, RFC 7258, DOI 10.17487/RFC7258,\
    \ May\n              2014, <http://www.rfc-editor.org/info/rfc7258>.\n   [RFC7435]\
    \  Dukhovni, V., \"Opportunistic Security: Some Protection\n              Most\
    \ of the Time\", RFC 7435, DOI 10.17487/RFC7435,\n              December 2014,\
    \ <http://www.rfc-editor.org/info/rfc7435>.\n   [AUTOVPN]  Sheffer, Y. and Y.\
    \ Nir, \"The AutoVPN Architecture\", Work\n              in Progress, draft-sheffer-autovpn-00,\
    \ February 2014.\n   [DDOS-PROTECTION]\n              Nir, Y. and V. Smyslov,\
    \ \"Protecting Internet Key Exchange\n              (IKE) Implementations from\
    \ Distributed Denial of Service\n              Attacks\", Work in Progress, draft-ietf-ipsecme-ddos-\n\
    \              protection-02, July 2015.\n"
- title: Appendix A.  Update of PAD processing in RFC 4301
  contents:
  - "Appendix A.  Update of PAD processing in RFC 4301\n   This appendix lists the\
    \ specific updates of the text in Section 4.4.3\n   of [RFC4301] that should be\
    \ followed when implementing NULL\n   authentication.\n   A new item is added\
    \ to the list of supported ID types in\n   Section 4.4.3.1 of [RFC4301]\n   o\
    \  NULL ID (matches ID type only)\n   and the following text is added at the end\
    \ of the section:\n   Added text:\n      The NULL ID type is defined as having\
    \ no data.  For this name\n      type, the matching function is defined as comparing\
    \ the ID type\n      only.\n   A new item is added to the list of authentication\
    \ data types in\n   Section 4.4.3.2 of [RFC4301]:\n      - NULL authentication\n\
    \   and the next paragraph is updated as follows:\n   Old:\n      For authentication\
    \ based on an X.509 certificate [...] For\n      authentication based on a pre-shared\
    \ secret, the PAD contains the\n      pre-shared secret to be used by IKE.\n \
    \  New:\n      For authentication based on an X.509 certificate [...] For\n  \
    \    authentication based on a pre-shared secret, the PAD contains the\n     \
    \ pre-shared secret to be used by IKE.  For NULL authentication the\n      PAD\
    \ contains no data.\n   In addition, the following text is added at the end of\n\
    \   Section 4.4.3.4 of [RFC4301]:\n   Added text:\n      When using the NULL Authentication\
    \ method, implementations MUST\n      make sure that they do not mix authenticated\
    \ and unauthenticated\n      SPD rules, i.e., implementations need to keep them\
    \ separately; for\n      example, by adding a flag in the SPD to tell whether\
    \ NULL\n      authentication can be used or not for the entry.  That is, each\n\
    \      SPD entry needs to be augmented to have a flag specifying whether\n   \
    \   it can be used with NULL authentication or not, and only those\n      rules\
    \ that explicitly have that flag set can be used with\n      unauthenticated connections.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   The authors would like to thank Yaron Sheffer and Tero Kivinen\
    \ for\n   their reviews, valuable comments, and contributed text.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Valery Smyslov\n   ELVIS-PLUS\n   PO Box 81\n   Moscow\
    \ (Zelenograd)  124460\n   Russian Federation\n   Phone: +7 495 276 0211\n   Email:\
    \ svan@elvis.ru\n   Paul Wouters\n   Red Hat\n   Email: pwouters@redhat.com\n"
