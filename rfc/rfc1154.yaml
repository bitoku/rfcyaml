- title: __initial_text__
  contents:
  - '              Encoding Header Field for Internet Messages

    '
- title: 1. Status of the Memo
  contents:
  - "1. Status of the Memo\n   This RFC proposes an elective experimental Encoding\
    \ header field to\n   permit the mailing of multi-part, multi-structured messages.\n\
    \   The use of Encoding updates RFC 1049 (Content-Type), and is a\n   suggested\
    \ update to RFCs 1113, 1114, and 1115 (Privacy Enhancement)\n   [4,7,8].\n   Distribution\
    \ of this memo is unlimited.\n"
- title: 2. Introduction
  contents:
  - "2. Introduction\n   RFC 822 [2] defines an electronic mail message to consist\
    \ of two\n   parts, the message header and the message body, separated by an\n\
    \   apparently blank line.\n   The Encoding header field permits the message body\
    \ itself to be\n   further broken up into parts, each part also separated from\
    \ the next\n   by an apparently blank line.\n   Thus, conceptually, a message\
    \ has a header part, followed by one or\n   more body parts, all separated by\
    \ blank lines.\n   Each body part has an encoding type.  The default (no Encoding\
    \ field\n   in the header) is a message body of one part of type \"text\".\n \
    \  3. The Encoding Field\n   The Encoding field consists of one or more subfields,\
    \ separated by\n   commas.  Each subfield corresponds to a part of the message,\
    \ in the\n   order of that part's appearance.  A subfield consists of a line\n\
    \   count, a keyword defining the encoding, and optional information\n   relevant\
    \ only to the specific encoding.  The line count is optional\n   in the last subfield.\n"
- title: 3.1. Format of the Encoding Field
  contents:
  - "3.1. Format of the Encoding Field\n   The format of the Encoding field is:\n\
    \     [<count> <keyword> [<options>], ]* [<count>] <keyword> [<options>]\n   \
    \  where:\n        <count>   := a decimal integer\n        <keyword> := a single\
    \ alphanumeric token starting with an alpha\n        <options> := keyword-dependent\
    \ options\n"
- title: 3.2. <count>
  contents:
  - "3.2. <count>\n   The line count is a decimal number specifying the number of\
    \ text\n   lines in the part.  Parts are separated by a blank line, which is not\n\
    \   included in the count of either the proceeding or following part.\n   Because\
    \ a count always begins with a digit and a keywords always\n   begins with an\
    \ letter, it is always possible to determine if the\n   count is present.  (The\
    \ count is first because it is the only\n   information of interest when skipping\
    \ over the part.)\n   The count is not required on the last or only part.\n"
- title: 3.3. <keyword>
  contents:
  - "3.3. <keyword>\n   The keyword defines the encoding type.  The keyword is a common\n\
    \   single word name for the encoding type.  The keywords are not case-\n   sensitive.\n\
    \   The list of standard keywords is intended to be the same as the list\n   used\
    \ for the Content-Type: header described in [6].  This RFC\n   proposes additions\
    \ to the list.  Implementations can then treat\n   \"Content-Type\" as an alias\
    \ of \"Encoding\", which will always have only\n   one body part.\n"
- title: 3.4. <options>
  contents:
  - "3.4. <options>\n   The optional information is used to specify additional keyword-\n\
    \   specific information needed for interpreting the contents of the\n   encoded\
    \ part.  It is any sequence of tokens not containing a comma.\n"
- title: 3.5. Encoding Version Numbers
  contents:
  - "3.5. Encoding Version Numbers\n   In general, version numbers for encodings,\
    \ when not actually\n   available within the contents of the encoded information,\
    \ will be\n   handled as options.\n"
- title: 3.6. Comments
  contents:
  - "3.6. Comments\n   Comments enclosed in parentheses may, of course, be inserted\
    \ anywhere\n   in the Encoding field.  Mail reading systems may pass the comments\
    \ to\n   their clients.  Comments must not be used by mail reading systems for\n\
    \   content interpretation; that is the function of options.\n"
- title: 4. Encodings
  contents:
  - "4. Encodings\n   This section describes some of the defined encodings used.\n\
    \   As with the other keyword-defined parts of the header format\n   standard,\
    \ extensions in the form of new keywords are expected and\n   welcomed.  Several\
    \ basic principles should be followed in adding\n   encodings:\n      - The keyword\
    \ should be the most common single word name for the\n      encoding, including\
    \ acronyms if appropriate.  The intent is that\n      different implementors will\
    \ be likely to choose the same name for\n      the same encoding.\n      - Keywords\
    \ not be too general: \"binary\" would have been a bad\n      choice for the \"\
    hex\" encoding.\n      - The encoding should be as free from unnecessary idiosyncracies\n\
    \      as possible, except when conforming to an existing standard, in\n     \
    \ which case there is nothing that can be done.\n      - The encoding should,\
    \ if possible, use only the 7 bit ASCII\n      printing characters if it is a\
    \ complete transformation of a source\n      document (e.g., \"hex\" or \"uuencode\"\
    ).  If it is essentially a text\n      format, the full range may be used.  If\
    \ there is an external\n      standard, the character set may already be defined.\n\
    \   Keywords beginning with \"X-\" are permanently reserved to\n   implementation-specific\
    \ use.  No standard registered encoding keyword\n   will ever begin with \"X-\"\
    .\n"
- title: 4.1. Text
  contents:
  - "4.1. Text\n   This indicates that the message is in no particular encoded format,\n\
    \   but is to be presented to the user as is.\n   The full range of the ASCII\
    \ character set is used.  The message is\n   expected to consist of lines of reasonable\
    \ length (less than 1000\n   characters).\n   On some transport services, only\
    \ the 7 bit subset of ASCII can be\n   used.  Where full 8 bit transparency is\
    \ available, the text is\n   assumed to be ISO 8859-1 [3] (ASCII-8).\n"
- title: 4.2. Message
  contents:
  - "4.2. Message\n   This encoding indicates that the body part is itself in the\
    \ format of\n   an Internet message, with its own header part and body part(s).\
    \  A\n   \"message\" body part's message header may be a full internet message\n\
    \   header or it may consist only of an Encoding field.\n   Using the message\
    \ encoding on returned mail makes it practical for a\n   mail reading system to\
    \ implement a reliable resending function, if\n   the mailer generates it when\
    \ returning contents.  It is also useful\n   in a \"copy append\" MUA operation.\n\
    \   Message encoding is also used when mapping to X.400 to handle\n   recursively\
    \ included X.400 P2 messages.\n"
- title: 4.3. Hex
  contents:
  - "4.3. Hex\n   The encoding indicates that the body part contains binary data,\n\
    \   encoded as 2 hexadecimal digits per byte, highest significant nibble\n   first.\n\
    \   Lines consist of an even number of hexadecimal digits.  Blank lines\n   are\
    \ not permitted.  The decode process must accept lines with between\n   2 and\
    \ 1000 characters, inclusive.\n"
- title: 4.4. EVFU
  contents:
  - "4.4. EVFU\n   EVFU (Electronic Vertical Format Unit) specifies that each line\n\
    \   begins with a one-character \"channel selector\".  The original purpose\n\
    \   was to select a channel on a paper tape loop controlling the printer.\n  \
    \ This encoding is sometimes called \"FORTRAN\" format. It is the default\n  \
    \ output format of FORTRAN programs on a number of computer systems.\n   The legal\
    \ characters are '0' to '9', '+', '-', and space.  These\n   correspond to the\
    \ 12 rows (and absence of a punch) on a printer\n   control tape (used when the\
    \ control unit was electromechanical).\n   The channels that have generally agreed\
    \ definitions are:\n           1     advances to the first print line on the next\
    \ page\n           0     skip a line, i.e., double-space\n           +     over-print\
    \ the preceeding line\n           -     skip 2 lines, i.e., triple-space\n   \
    \     (space)  print on the next line, single-space\n"
- title: 4.5. EDI
  contents:
  - "4.5. EDI\n   The EDI (Electronic Document Interchange) keyword indicates that\
    \ the\n   message or part is a business document, formatted according to ANSI\n\
    \   X12 or related standards.\n   The first word after the EDI keyword indicates\
    \ the particular\n   interchange standard.\n   A message containing a note and\
    \ 2 X12 purchase orders might have an\n   encoding of:\n       Encoding: 17 TEXT,\
    \ 146 EDI X12, 69 EDI X12\n"
- title: 4.6. X.400
  contents:
  - "4.6. X.400\n   The Encoding header field provides a mechanism for mapping multi-part\n\
    \   messages between CCITT X.400 [1] and RFC 822.\n   The X.400 keyword specifies\
    \ a section that is converted from an X.400\n   body part type not known to the\
    \ gateway, or not corresponding to a\n   useful internet encoding.\n   If the\
    \ message transits another gate, or if the receiving user has\n   the appropriate\
    \ software, it can be decoded and used.\n   The X.400 keyword is followed by a\
    \ second token indicating the method\n   used.  The simplest form is \"X.400 HEX\"\
    , with the complete X.409\n   encoding of the body part in hexadecimal.  More\
    \ compact is \"X.400\n   3/4\", using the 3-byte to 4-character encoding as specified\
    \ in RFC\n   1113, section 4.3.2.4.\n"
- title: 4.7. uuencode
  contents:
  - "4.7. uuencode\n   The uuencode keyword specifies a section consisting of the\
    \ output of\n   the uuencode program supplied as part of uucp.\n"
- title: 4.8. encrypted
  contents:
  - "4.8. encrypted\n   The encrypted keyword indicates that the section is encrypted\
    \ with\n   the methods in RFC 1115 [8].  This replaces the possible use of RFC\n\
    \   934 [5] encapsulation.\n"
- title: References
  contents:
  - "References\n  [1]  International Telegraph and Telephone Consultative Committee,\n\
    \       \"Data Communication Networks: Message Handling Systems\", In CCITT\n\
    \       Recommendations X.400 to X.430, VIIIth Plenary Assembly, Malaga-\n   \
    \    Torremolinos, 1984, Fascicle VIII.7 (\"Red Book\").\n  [2]  Crocker, D.,\
    \ \"Standard for the Format of ARPA Internet Text\n       Messages\", RFC 822,\
    \ University of Delaware, August 1982.\n  [3]  International Organization for\
    \ Standardization, \"Information\n       processing - 8-bit single-byte coded\
    \ graphic character sets -\n       Part 1: Latin alphabet No. 1\", ISO 8859-1,\
    \ ISO, 1987.\n  [4]  Linn, J., \"Privacy Enhancement for Internet Electronic Mail:\
    \ Part\n       I -- Message Encipherment and Authentication Procedures\", RFC\n\
    \       1113, IAB Privacy Task Force, August 1989.\n  [5]  Rose, M., and E. Stefferud,\
    \ \"Proposed Standard for Message\n       Encapsulation\", RFC 943, University\
    \ of Delaware and NMA, January\n       1985.\n  [6]  Sirbu, M., \"Content-type\
    \ Header Field for Internet Messages\", RFC\n       1049, CMU, March 1988.\n \
    \ [7]  Kent, S., and J. Linn, \"Privacy Enhancement for Internet\n       Electronic\
    \ Mail: Part II -- Certificate-Based Key Management\",\n       RFC 1114, IAB Privacy\
    \ Task Force, August 1989.\n  [8]  Linn, J., \"Privacy Enhancement for Internet\
    \ Electronic Mail: Part\n       III -- Algorithms, Modes, and Identifiers\", RFC\
    \ 1115, IAB Privacy\n       Task Force, August 1989.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are not addressed in this memo.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   David Robinson 10-30\n   Prime Computer, Inc.\n   500\
    \ Old Connecticut Path\n   Framingham, MA 01701\n   Phone: +1 508 879 2960 x1774\n\
    \   Email: DRB@Relay.Prime.COM\n   Robert Ullmann 10-30\n   Prime Computer, Inc.\n\
    \   500 Old Connecticut Path\n   Framingham, MA 01701\n   Phone: +1 508 879 2960\
    \ x1736\n   Email: Ariel@Relay.Prime.COM\n"
