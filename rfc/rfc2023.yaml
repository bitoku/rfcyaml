- title: __initial_text__
  contents:
  - '                         IP Version 6 over PPP

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   The Point-to-Point Protocol (PPP) [1] provides a standard method\
    \ of\n   encapsulating Network Layer protocol information over point-to-point\n\
    \   links.  PPP also defines an extensible Link Control Protocol, and\n   proposes\
    \ a family of Network Control Protocols (NCPs) for\n   establishing and configuring\
    \ different network-layer protocols.\n   This document defines the method for\
    \ transmission of IP Version 6 [2]\n   packets over PPP links as well as the Network\
    \ Control Protocol (NCP)\n   for establishing and configuring the IPv6 over PPP.\
    \ It also specifies\n   the method of forming IPv6 link-local addresses on PPP\
    \ links.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.     Introduction ..........................................\
    \    2\n        1.1.  Specification of Requirements ......................   2\n\
    \   2.     Sending IPv6 Datagrams ................................    3\n   3.\
    \     A PPP Network Control Protocol for IPv6 ...............    3\n   4.    \
    \ IPV6CP Configuration Options ..........................    4\n        4.1. \
    \ Interface-Token ...................................    4\n        4.2.  IPv6-Compression-Protocol..........................\
    \    7\n   5.     Stateless Autoconfiguration and Link-Local Addresses ..    9\n\
    \   A.     IPV6CP Recommended Options .............................   9\n   Security\
    \ Considerations .......................................  10\n   References ....................................................\
    \  10\n   Acknowledgments ...............................................  10\n\
    \   Authors' Addresses ............................................  10\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   PPP has three main components:\n      1. A method for encapsulating\
    \ datagrams over serial links.\n      2. A Link Control Protocol (LCP) for establishing,\
    \ configuring,\n         and testing the data-link connection.\n      3. A family\
    \ of Network Control Protocols (NCPs) for establishing\n         and configuring\
    \ different network-layer protocols.\n   In order to establish communications\
    \ over a point-to-point link, each\n   end of the PPP link must first send LCP\
    \ packets to configure and test\n   the data link.  After the link has been established\
    \ and optional\n   facilities have been negotiated as needed by the LCP, PPP must\
    \ send\n   NCP packets to choose and configure one or more network-layer\n   protocols.\
    \  Once each of the chosen network-layer protocols has been\n   configured,  datagrams\
    \ from each network-layer protocol can be sent\n   over the link.\n   In this\
    \ document, the NCP for establishing and configuring the IPv6\n   over PPP is\
    \ referred as the IPv6 Control Protocol (IPV6CP).\n   The link will remain configured\
    \ for communications until explicit LCP\n   or NCP packets close the link down,\
    \  or until some external event\n   occurs (power failure at the other end, carrier\
    \ drop, etc.).\n"
- title: 1.1.  Specification of Requirements
  contents:
  - "1.1.  Specification of Requirements\n   In this document, several words are used\
    \ to signify the requirements\n   of the specification.  These words are often\
    \ capitalized.\n   MUST      This word, or the adjective \"required\", means that\
    \ the\n             definition is an absolute requirement of the specification.\n\
    \   MUST NOT  This phrase means that the definition is an absolute\n         \
    \    prohibition of the specification.\n   SHOULD    This word, or the adjective\
    \ \"recommended\", means that there\n             may exist valid reasons in particular\
    \ circumstances to\n             ignore this item, but the full implications must\
    \ be\n             understood and carefully weighed before choosing a\n      \
    \       different course.\n   MAY       This word, or the adjective \"optional\"\
    , means that this\n             item is one of an allowed set of alternatives.\
    \  An\n             implementation which does not include this option MUST be\n\
    \             prepared to inter-operate with another implementation which\n  \
    \           does include the option.\n"
- title: 2. Sending IPv6 Datagrams
  contents:
  - "2. Sending IPv6 Datagrams\n   Before any IPv6 packets may be communicated, PPP\
    \ must reach the\n   Network-Layer Protocol phase, and the IPv6 Control Protocol\
    \ must\n   reach the Opened state.\n   Exactly one IPv6 packet is encapsulated\
    \ in the Information field of\n   PPP Data Link Layer frames where the Protocol\
    \ field indicates type\n   hex 0057 (Internet Protocol Version 6).\n   The maximum\
    \ length of an IPv6 packet transmitted over a PPP link is\n   the same as the\
    \ maximum length of the Information field of a PPP data\n   link layer frame.\
    \  PPP links supporting IPv6 must allow at least 576\n   octets in the information\
    \ field of a data link layer frame.\n"
- title: 3. A PPP Network Control Protocol for IPv6
  contents:
  - "3. A PPP Network Control Protocol for IPv6\n   The IPv6 Control Protocol (IPV6CP)\
    \ is responsible for configuring,\n   enabling, and disabling the IPv6 protocol\
    \ modules on both ends of the\n   point-to-point link.  IPV6CP uses the same packet\
    \ exchange mechanism\n   as the Link Control Protocol (LCP).  IPV6CP packets may\
    \ not be\n   exchanged until PPP has reached the Network-Layer Protocol phase.\n\
    \   IPV6CP packets received before this phase is reached should be\n   silently\
    \ discarded.\n   The IPv6 Control Protocol is exactly the same as the Link Control\n\
    \   Protocol [1] with the following exceptions:\n   Data Link Layer Protocol Field\n\
    \     Exactly one IPV6CP packet is encapsulated in the Information field\n   \
    \  of PPP Data Link Layer frames where the Protocol field indicates\n     type\
    \ hex 8057 (IPv6 Control Protocol).\n   Code field\n     Only Codes 1 through\
    \ 7 (Configure-Request, Configure-Ack,\n     Configure-Nak, Configure-Reject,\
    \ Terminate-Request, Terminate-Ack\n     and Code-Reject) are used.  Other Codes\
    \ should be treated as\n     unrecognized and should result in Code-Rejects.\n\
    \   Timeouts\n   IPV6CP packets may not be exchanged until PPP has reached the\n\
    \   Network-Layer Protocol phase.  An implementation should be prepared\n   to\
    \ wait for Authentication and Link Quality Determination to finish\n   before\
    \ timing out waiting for a Configure-Ack or other response.  It\n   is suggested\
    \ that an implementation give up only after user\n   intervention or a configurable\
    \ amount of time.\n   Configuration Option Types\n     IPV6CP has a distinct set\
    \ of Configuration Options, which are\n     defined below.\n"
- title: 4.  IPV6CP Configuration Options
  contents:
  - "4.  IPV6CP Configuration Options\n   IPV6CP Configuration Options allow negotiation\
    \ of desirable IPv6\n   parameters.  IPV6CP uses the same Configuration Option\
    \ format defined\n   for LCP [1], with a separate set of Options.  If a Configuration\n\
    \   Option is not included in a Configure-Request packet,  the default\n   value\
    \ for that Configuration Option is assumed.\n   Up-to-date values of the IPV6CP\
    \ Option Type field are specified in\n   the most recent \"Assigned Numbers\"\
    \ RFC [5].  Current values are\n   assigned as follows:\n    1       Interface-Token\n\
    \    2       IPv6-Compression-Protocol\n"
- title: 4.1.  Interface-Token
  contents:
  - "4.1.  Interface-Token\n   Description\n      This Configuration Option provides\
    \ a way to negotiate a unique\n      32-bit interface token to be used for the\
    \ address\n      autoconfiguration [3] at the local end of the link (see section\n\
    \      5).  The interface token MUST be unique within the PPP link; i.e.\n   \
    \   upon completion of the negotiation different Interface-Token\n      values\
    \ are to be selected for the ends of the PPP link.\n      Before this Configuration\
    \ Option is requested, an implementation\n      must choose its tentative Interface-Token.\
    \  It is recommended that\n      a non-zero value be chosen in the most random\
    \ manner possible in\n      order to guarantee with very high probability that\
    \ an\n      implementation will arrive at a unique token value.  A good way to\n\
    \      choose a unique random number is to start with a unique seed.\n      Suggested\
    \ sources of uniqueness include machine serial numbers,\n      other network hardware\
    \ addresses, system clocks, etc. Note that it\n      may not be sufficient to\
    \ use a link-layer address alone as the\n      seed, since it will not always\
    \ be unique.  Thus it is suggested\n      that the seed should be calculated from\
    \ a variety of sources that\n      are likely to be different even on identical\
    \ systems and as many\n      sources as possible be used simultaneously.  Good\
    \ sources of\n      uniqueness or randomness are required for the Interface-Token\n\
    \      negotiation to succeed.  If a good source of randomness cannot be\n   \
    \   found,  it is recommended that a zero value be used for the\n      Interface-Token\
    \ transmitted in the Configure-Request.  In this\n      case the PPP peer may\
    \ provide a valid non-zero Interface-Token in\n      its response as described\
    \ below.  Note that if at least one of the\n      PPP peers is able to generate\
    \ a unique random number, the token\n      negotiation will succeed.\n      When\
    \ a Configure-Request is received with the Interface-Token\n      Configuration\
    \ Option and the receiving peer implements this\n      option, the received Interface-Token\
    \ is compared with the\n      Interface-Token of the last Configure-Request sent\
    \ to the peer.\n      Depending on the result of the comparison an implementation\
    \ MUST\n      respond in one of the following ways:\n      If the two Interface-Tokens\
    \ are different but the received\n      Interface-Token is zero, a Configure-Ack\
    \ is sent with a non-zero\n      Interface-Token value suggested for use by the\
    \ remote peer.  Such\n      a suggested Interface-Token MUST be different from\
    \ the Interface-\n      Token of the last Configure-Request sent to the peer.\n\
    \      If the two Interface-Tokens are different and the received\n      Interface-Token\
    \ is not zero, the Interface-Token MUST be\n      acknowledged, i.e. a Configure-Ack\
    \ is sent with the requested\n      Interface-Token, meaning that the responding\
    \ peer agrees with the\n      Interface-Token requested.\n      If the two Interface-Tokens\
    \ are equal and are not zero, a\n      Configure-Nak MUST be sent specifying a\
    \ different non-zero\n      Interface-Token value suggested for use by the remote\
    \ peer.\n      If the two Interface-Tokens are equal to zero,  the Interface-\n\
    \      Tokens negotiation MUST be terminated by transmitting the\n      Configure-Reject\
    \ with the Interface-Token value set to zero. In\n      this case a unique Interface-Token\
    \ can not be negotiated.\n      If a Configure-Request is received with the Interface-Token\n\
    \      Configuration Option and the receiving peer does not implement\n      this\
    \ option, Configure-Rej is sent.\n      A new Configure-Request SHOULD NOT be\
    \ sent to the peer until\n      normal processing would cause it to be sent (that\
    \ is, until a\n      Configure-Nak is received or the Restart timer runs out).\n\
    \      A new Configure-Request MUST NOT contain the Interface-Token\n      option\
    \ if a valid Interface-Token Configure-Reject is received.\n      Reception of\
    \ a Configure-Nak with a suggested Interface-Token\n      different from that\
    \ of the last Configure-Nak sent to the peer\n      indicates a unique Interface-Token.\
    \  In this case a new\n      Configure-Request MUST be sent with the token value\
    \ suggested in\n      the last Configure-Nak from the peer.  But if the received\n\
    \      Interface-Token is equal to the one sent in the last Configure-\n     \
    \ Nak, a new Interface-Token MUST be chosen.  In this case, a new\n      Configure-Request\
    \ SHOULD be sent with the new tentative\n      Interface-Token.  This sequence\
    \ (transmit Configure-Request,\n      receive Configure-Request, transmit Configure-Nak,\
    \ receive\n      Configure-Nak) might occur a few times, but it is extremely\n\
    \      unlikely to occur repeatedly.  More likely, the Interface-Tokens\n    \
    \  chosen at either end will quickly diverge, terminating the\n      sequence.\n\
    \      If negotiation about the Interface-Token is required, and the peer\n  \
    \    did not provide the option in its Configure-Request, the option\n      SHOULD\
    \ be appended to a Configure-Nak.  The tentative value of the\n      Interface-Token\
    \ given must be acceptable as the remote Interface-\n      Token; i.e. should\
    \ be different from the token value selected for\n      the local end of the PPP\
    \ link.  The next Configure-Request from\n      the peer may include this option.\
    \  If the next Configure-Request\n      does not include this option the peer\
    \ MUST NOT send another\n      Configure-Nak with this option included. It should\
    \ assume that the\n      peer's implementation does not support this option.\n\
    \      By default, an implementation SHOULD attempt to negotiate the\n      Interface-Token\
    \ for its end of the PPP connection.\n   A summary of the Interface-Token Configuration\
    \ Option format is\n   shown below.  The fields are transmitted from left to right.\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |        Interface-Token\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \         Interface-Token (cont)    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      1\n   Length\n      6\n   Interface-Token\n      The 32-bit Interface-Token\
    \ which is very likely to  be unique on\n      the link or zero if a good source\
    \ of uniqueness can not be found.\n   Default Token Value\n      If no valid interface\
    \ token can be successfully negotiated, no\n      default Interface-Token value\
    \ should be assumed. The procedures\n      for recovering from such a case are\
    \ unspecified. One approach is\n      to manually configure the interface token\
    \ of the interface.\n"
- title: 4.2.  IPv6-Compression-Protocol
  contents:
  - "4.2.  IPv6-Compression-Protocol\n   Description\n      This Configuration Option\
    \ provides a way to negotiate the use of a\n      specific IPv6 packet compression\
    \ protocol.  The IPv6-Compression-\n      Protocol Configuration Option is used\
    \ to indicate the ability to\n      receive compressed packets.  Each end of the\
    \ link must separately\n      request this option if bi-directional compression\
    \ is desired.  By\n      default, compression is not enabled.\n      IPv6 compression\
    \ negotiated with this option is specific to IPv6\n      datagrams and is not\
    \ to be confused with compression resulting\n      from negotiations via Compression\
    \ Control Protocol (CCP), which\n      potentially effect all datagrams.\n   A\
    \ summary of the IPv6-Compression-Protocol Configuration Option\n   format is\
    \ shown below.  The fields are transmitted from left to\n   right.\n    0    \
    \               1                   2                   3\n    0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |   IPv6-Compression-Protocol   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Data ...\n   +-+-+-+-+\n   Type\n      2\n   Length\n      >= 4\n   IPv6-Compression-Protocol\n\
    \      The IPv6-Compression-Protocol field is two octets and indicates\n     \
    \ the compression protocol desired.  Values for this field are\n      always the\
    \ same as the PPP Data Link Layer Protocol field values\n      for that same compression\
    \ protocol.\n      Up-to-date values of the IPv6-Compression-Protocol field are\n\
    \      specified in the most recent \"Assigned Numbers\" RFC [5].\n      Current\
    \ values are assigned as follows:\n      Value (in hex)          Protocol\n  \
    \    004f                    IPv6 Header Compression\n   Data\n      The Data\
    \ field is zero or more octets and contains additional data\n      as determined\
    \ by the particular compression protocol.\n   Default\n      No IPv6 compression\
    \ protocol enabled.\n"
- title: 5.  Stateless Autoconfiguration and Link-Local Addresses
  contents:
  - "5.  Stateless Autoconfiguration and Link-Local Addresses\n   The interface token,\
    \ which is used for forming IPv6 addresses of a\n   PPP interface, SHOULD be negotiated\
    \ in the IPV6CP phase of the PPP\n   connection setup (see section 4.1). If no\
    \ valid interface token has\n   been successfully negotiated, procedures for recovering\
    \ from such a\n   case are unspecified.  One approach is to manually configure\
    \ the\n   interface token of the interface.\n   As long as the interface token\
    \ is negotiated in the IPV6CP phase of\n   the PPP connection setup,  it is redundant\
    \ to perform duplicate\n   address detection as a part of the IPv6 Stateless Autoconfiguration\n\
    \   protocol [3].  Therefore it is recommended that for PPP links with\n   the\
    \ IPV6CP Interface-Token option enabled the default value of the\n   DupAddrDetectTransmits\
    \ autoconfiguration variable [3] be zero.\n   Link-local addresses of PPP interfaces\
    \ have the following format:\n   | 10 bits  |              86 bits           \
    \    |     32 bits     |\n   +----------+--------------+---------------------+-----------------+\n\
    \   |1111111010|              0                     | Interface Token |\n   +----------+--------------+---------------------+-----------------+\n\
    \   The most significant 10 bits of the address is the Link-Local prefix\n   FE80::.\
    \  86 zero bits pad out the address between the Link-Local\n   prefix and the\
    \ Interface Token fields.\n"
- title: A.  IPV6CP Recommended Options
  contents:
  - "A.  IPV6CP Recommended Options\n   The following Configurations Options are recommended:\n\
    \      Interface-Token\n      IPv6-Compression-Protocol\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: References
  contents:
  - "References\n   [1] Simpson, W., \"The Point-to-Point Protocol\", STD 51, RFC\
    \ 1661,\n       July 1994.\n   [2] Deering, S., and R. Hinden, Editors, \"Internet\
    \ Protocol,\n       Version 6 (IPv6) Specification\", RFC 1883, December 1995.\n\
    \   [2] Hinden, R., and  S. Deering, \"IP Version 6 Addressing\n       Architecture\"\
    , RFC 1884, December 1995.\n   [3] Thomson, S., and T. Narten, \"IPv6 Stateless\
    \ Address\n        Autoconfiguration\", RFC 1971, August 1996.\n   [4] Narten,\
    \ T., Nordmark, E., and W. Simpson, \"Neighbor Discovery\n       for IP Version\
    \ 6 (IPv6)\", RFC 1970, August 1996.\n   [5] Reynolds, J., and J. Postel, \"Assigned\
    \ Numbers\", STD 2, RFC\n       1700, October 1994.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   This document borrows from the Magic-Number LCP option and\
    \ as such is\n   partially based on previous work done by the PPP working group.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Dimitry Haskin\n   Bay Networks, Inc.\n   2 Federal Street\n\
    \   Billerica, MA 01821\n   email: dhaskin@baynetworks.com\n   Ed Allen\n   Bay\
    \ Networks, Inc.\n   2 Federal Street\n   Billerica, MA 01821\n   email: eallen@baynetworks.com\n"
