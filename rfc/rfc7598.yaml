- title: __initial_text__
  contents:
  - "          DHCPv6 Options for Configuration of Softwire Address\n            \
    \            and Port-Mapped Clients\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies DHCPv6 options, termed Softwire46 options,\n\
    \   for the provisioning of Softwire46 Customer Edge (CE) devices.\n   Softwire46\
    \ is a collective term used to refer to architectures based\n   on the notion\
    \ of IPv4 Address plus Port (A+P) for providing IPv4\n   connectivity across an\
    \ IPv6 network.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7598.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Conventions .....................................................3\n  \
    \ 3. Softwire46 Overview .............................................4\n   4.\
    \ Common Softwire46 DHCPv6 Options ................................5\n      4.1.\
    \ S46 Rule Option ............................................5\n      4.2. S46\
    \ BR Option ..............................................7\n      4.3. S46 DMR\
    \ Option .............................................8\n      4.4. S46 IPv4/IPv6\
    \ Address Binding Option .......................9\n      4.5. S46 Port Parameters\
    \ Option ................................10\n   5. Softwire46 Containers ..........................................11\n\
    \      5.1. S46 MAP-E Container Option ................................11\n  \
    \    5.2. S46 MAP-T Container Option ................................12\n    \
    \  5.3. S46 Lightweight 4over6 Container Option ...................13\n   6. Softwire46\
    \ Options Encapsulation ...............................14\n   7. DHCPv6 Server\
    \ Behavior .........................................14\n   8. DHCPv6 Client Behavior\
    \ .........................................14\n   9. Security Considerations ........................................15\n\
    \   10. IANA Considerations ...........................................16\n  \
    \ 11. References ....................................................16\n    \
    \  11.1. Normative References .....................................16\n      11.2.\
    \ Informative References ...................................17\n   Acknowledgements\
    \ ..................................................18\n   Authors' Addresses\
    \ ................................................19\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   A number of architectural solution proposals discussed in\
    \ the IETF\n   Softwire Working Group use Address plus Port (A+P) [RFC6346] as\
    \ their\n   technology base for providing IPv4 connectivity to end users using\n\
    \   Customer Edge (CE) devices across a service provider's IPv6 network,\n   while\
    \ allowing for shared or dedicated IPv4 addressing of CEs.\n   An example is Mapping\
    \ of Address and Port with Encapsulation (MAP-E)\n   as defined in [RFC7597].\
    \  The MAP solution consists of one or more\n   MAP Border Relay (BR) routers\
    \ responsible for stateless forwarding\n   between a MAP IPv6 domain and an IPv4\
    \ network, and one or more MAP\n   Customer Edge (CE) routers responsible for\
    \ forwarding between a\n   user's IPv4 network and the MAP IPv6 network domain.\
    \  Collectively,\n   the MAP CE and BR form a domain when configured with common\
    \ service\n   parameters.  This characteristic is common to all of the Softwire46\n\
    \   mechanisms.\n   To function in such a domain, a CE needs to be provisioned\
    \ with the\n   appropriate A+P service parameters for that domain.  These consist\n\
    \   primarily of the CE's IPv4 address and transport-layer port range(s).\n  \
    \ Furthermore, the IPv6 transport mode (i.e., encapsulation or\n   translation)\
    \ needs to be specified.  Provisioning of other IPv4\n   configuration information\
    \ not derived directly from the A+P service\n   parameters is not covered in this\
    \ document.  It is expected that\n   provisioning of other IPv4 configuration\
    \ information will continue to\n   use DHCPv4 [RFC2131].\n   This memo specifies\
    \ a set of DHCPv6 [RFC3315] options to provision\n   Softwire46 configuration\
    \ information to CE routers.  Although the\n   focus is to deliver IPv4 service\
    \ to an end-user network (such as a\n   residential home network), it can equally\
    \ be applied to an individual\n   host acting as a CE.  Configuration of the BR\
    \ is out of scope for\n   this document.\n"
- title: 2.  Conventions
  contents:
  - "2.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [RFC2119].\n"
- title: 3.  Softwire46 Overview
  contents:
  - "3.  Softwire46 Overview\n   This document describes a set of common DHCPv6 options\
    \ for\n   configuring the Mapping of Address and Port with Encapsulation\n   (MAP-E)\
    \ [RFC7597], Mapping of Address and Port using Translation\n   (MAP-T) [RFC7599],\
    \ and Lightweight 4over6 [RFC7596] mechanisms.  For\n   definitions of the terminology\
    \ used in this document, please see the\n   relevant terminology sections in [RFC7597],\
    \ [RFC7599], and [RFC7596].\n   MAP-E, MAP-T, and Lightweight 4over6 are essentially\
    \ providing the\n   same functionality: IPv4 service to a CE router over an IPv6-only\n\
    \   access network.  MAP-E and MAP-T may embed parts of the IPv4 address\n   in\
    \ IPv6 prefixes, thereby supporting many clients with a fixed set of\n   mapping\
    \ rules and Mesh mode (direct CE-to-CE communication).  MAP-E\n   and MAP-T CEs\
    \ may also be provisioned in hub-and-spoke mode and in\n   1:1 mode (with no embedded\
    \ address bits).  The difference between\n   MAP-E and MAP-T is that they use\
    \ different means to connect to the\n   IPv6 domain.  MAP-E uses IPv4-over-IPv6\
    \ tunneling [RFC2473], while\n   MAP-T uses IPv4-to-IPv6 translation based on\
    \ [RFC6145].  Lightweight\n   4over6 is a hub-and-spoke IPv4-over-IPv6 tunneling\
    \ mechanism, with\n   complete independence of IPv4 and IPv6 addressing (zero\
    \ embedded\n   address bits).\n   The DHCPv6 options described here tie the provisioning\
    \ parameters,\n   and hence the IPv4 service itself, to the End-user IPv6 prefix\n\
    \   lifetime.  The validity of a Softwire46's IPv4 address, prefix, or\n   shared\
    \ IPv4 address; port set; and any authorization and accounting\n   are tied to\
    \ the lifetime of its associated End-user IPv6 prefix.\n   To support more than\
    \ one mechanism at a time and to allow for a\n   possibility of transition between\
    \ them, the DHCPv6 Option Request\n   Option (ORO) [RFC3315] is used.  Each mechanism\
    \ has a corresponding\n   DHCPv6 container option.  A DHCPv6 client can request\
    \ a particular\n   mechanism by including the option code for a particular container\n\
    \   option in its ORO.  The provisioning parameters for that mechanism\n   are\
    \ expressed by embedding the common format options within the\n   respective container\
    \ option.\n   This approach implies that all of the provisioning options appear\n\
    \   only within the container options.  Softwire46 DHCPv6 clients that\n   receive\
    \ provisioning options that are not encapsulated in container\n   options MUST\
    \ silently ignore these options.  DHCPv6 server\n   administrators are advised\
    \ to ensure that DHCPv6 servers are\n   configured to send these options in the\
    \ proper encapsulation.\n   This document is organized with the common encapsulated\
    \ options\n   described first (Section 4), followed by the three container options\n\
    \   (Section 5).  Some encapsulated options are mandatory in some\n   containers,\
    \ some are optional, and some are not permitted.  This is\n   shown in Table 1\
    \ (Section 6).\n"
- title: 4.  Common Softwire46 DHCPv6 Options
  contents:
  - "4.  Common Softwire46 DHCPv6 Options\n   The DHCPv6 protocol is used for Softwire46\
    \ CE provisioning following\n   regular DHCPv6 notions, with the CE assuming the\
    \ role of a DHCPv6\n   client, and the DHCPv6 server providing options following\
    \ DHCPv6\n   server-side policies.  The format and usage of the options are\n\
    \   defined in the following subsections.\n   Each CE needs to be provisioned\
    \ with enough information to calculate\n   its IPv4 address, IPv4 prefix, or shared\
    \ IPv4 address.  MAP-E and\n   MAP-T use the OPTION_S46_RULE option, while Lightweight\
    \ 4over6 uses\n   the OPTION_S46_V4V6BIND option.  A CE that needs to communicate\n\
    \   outside of the A+P domain also needs the address or prefix of the BR.\n  \
    \ MAP-E and Lightweight 4over6 use the OPTION_S46_BR option to\n   communicate\
    \ the IPv6 address of the BR.  MAP-T forms an IPv6\n   destination address by\
    \ embedding an IPv4 destination address into the\n   BR's IPv6 prefix conveyed\
    \ via the OPTION_S46_DMR option.  Optionally,\n   all mechanisms can include the\
    \ OPTION_S46_PORTPARAMS option to\n   specify parameters and port sets for the\
    \ port-range algorithm.\n   Softwire46 options use addresses rather than Fully\
    \ Qualified Domain\n   Names (FQDNs).  For the rationale behind this design choice,\
    \ see\n   Section 8 of [RFC7227].\n"
- title: 4.1.  S46 Rule Option
  contents:
  - "4.1.  S46 Rule Option\n   Figure 1 shows the format of the S46 Rule option (OPTION_S46_RULE)\n\
    \   used for conveying the Basic Mapping Rule (BMR) and Forwarding\n   Mapping\
    \ Rule (FMR).\n   This option follows behavior described in Sections 17.1.1 and\
    \ 18.1.1\n   of [RFC3315].  Clients can send those options, encapsulated in their\n\
    \   respective container options, with specific values as hints for the\n   server.\
    \  See Section 5 for details.  Depending on the server\n   configuration and policy,\
    \ it may accept or ignore the hints.  Clients\n   MUST be able to process received\
    \ values that are different than the\n   hints it sent earlier.\n      0     \
    \              1                   2                   3\n      0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |        OPTION_S46_RULE        |         option-length         |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \   flags     |     ea-len    |  prefix4-len  | ipv4-prefix   |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                  (continued)                  |  prefix6-len  |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                         ipv6-prefix                         |\n     |      \
    \                 (variable length)                       |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                                                               |\n    \
    \ .                        S46_RULE-options                       .\n     .  \
    \                                                             .\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                         Figure 1: S46 Rule Option\n   o  option-code: OPTION_S46_RULE\
    \ (89)\n   o  option-length: length of the option, excluding option-code and\n\
    \      option-length fields, including length of all encapsulated\n      options;\
    \ expressed in octets.\n   o  flags: 8 bits long; carries flags applicable to\
    \ the rule.  The\n      meanings of the specific bits are explained in Figure\
    \ 2.\n   o  ea-len: 8 bits long; specifies the Embedded Address (EA) bit\n   \
    \   length.  Allowed values range from 0 to 48.\n   o  prefix4-len: 8 bits long;\
    \ expresses the prefix length of the\n      Rule IPv4 prefix specified in the\
    \ ipv4-prefix field.  Allowed\n      values range from 0 to 32.\n   o  ipv4-prefix:\
    \ a fixed-length 32-bit field that specifies the IPv4\n      prefix for the S46\
    \ rule.  The bits in the prefix after prefix4-len\n      number of bits are reserved\
    \ and MUST be initialized to zero by the\n      sender and ignored by the receiver.\n\
    \   o  prefix6-len: 8 bits long; expresses the length of the\n      Rule IPv6\
    \ prefix specified in the ipv6-prefix field.  Allowed\n      values range from\
    \ 0 to 128.\n   o  ipv6-prefix: a variable-length field that specifies the IPv6\n\
    \      domain prefix for the S46 rule.  The field is padded on the right\n   \
    \   with zero bits up to the nearest octet boundary when prefix6-len\n      is\
    \ not evenly divisible by 8.\n   o  S46_RULE-options: a variable-length field\
    \ that may contain zero or\n      more options that specify additional parameters\
    \ for this S46 rule.\n      This document specifies one such option: OPTION_S46_PORTPARAMS.\n\
    \   The format of the S46 Rule Flags field is:\n                             \
    \ 0 1 2 3 4 5 6 7\n                             +-+-+-+-+-+-+-+-+\n          \
    \                   |Reserved     |F|\n                             +-+-+-+-+-+-+-+-+\n\
    \                         Figure 2: S46 Rule Flags\n   o  Reserved: 7 bits; reserved\
    \ for future use as flags.\n   o  F-flag: 1-bit field that specifies whether the\
    \ rule is to be used\n      for forwarding (FMR).  If set, this rule is used as\
    \ an FMR; if not\n      set, this rule is a BMR only and MUST NOT be used for\
    \ forwarding.\n      Note: A BMR can also be used as an FMR for forwarding if\
    \ the\n      F-flag is set.  The BMR is determined by a longest-prefix match of\n\
    \      the Rule IPv6 prefix against the End-user IPv6 prefix(es).\n   It is expected\
    \ that in a typical mesh deployment scenario there will\n   be a single BMR, which\
    \ could also be designated as an FMR using the\n   F-flag.\n"
- title: 4.2.  S46 BR Option
  contents:
  - "4.2.  S46 BR Option\n   The S46 BR option (OPTION_S46_BR) is used to convey the\
    \ IPv6 address\n   of the Border Relay.  Figure 3 shows the format of the OPTION_S46_BR\n\
    \   option.\n      0                   1                   2                 \
    \  3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \ |         OPTION_S46_BR         |         option-length         |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                      br-ipv6-address                          |\n    \
    \ |                                                               |\n     |  \
    \                                                             |\n     |      \
    \                                                         |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                          Figure 3: S46 BR Option\n   o  option-code: OPTION_S46_BR\
    \ (90)\n   o  option-length: 16\n   o  br-ipv6-address: a fixed-length field of\
    \ 16 octets that specifies\n      the IPv6 address for the S46 BR.\n   BR redundancy\
    \ can be implemented by using an anycast address for the\n   BR IPv6 address.\
    \  Multiple OPTION_S46_BR options MAY be included in\n   the container; this document\
    \ does not further explore the use of\n   multiple BR IPv6 addresses.\n"
- title: 4.3.  S46 DMR Option
  contents:
  - "4.3.  S46 DMR Option\n   The S46 DMR option (OPTION_S46_DMR) is used to convey\
    \ values for the\n   Default Mapping Rule (DMR).  Figure 4 shows the format of\
    \ the\n   OPTION_S46_DMR option used for conveying a DMR.\n      0           \
    \        1                   2                   3\n      0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |        OPTION_S46_DMR         |         option-length         |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |dmr-prefix6-len|\
    \            dmr-ipv6-prefix                    |\n     +-+-+-+-+-+-+-+-+    \
    \       (variable length)                   |\n     .                        \
    \                                       .\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                         Figure 4: S46 DMR Option\n   o  option-code: OPTION_S46_DMR\
    \ (91)\n   o  option-length: 1 + length of dmr-ipv6-prefix specified in octets.\n\
    \   o  dmr-prefix6-len: 8 bits long; expresses the bitmask length of the\n   \
    \   IPv6 prefix specified in the dmr-ipv6-prefix field.  Allowed\n      values\
    \ range from 0 to 128.\n   o  dmr-ipv6-prefix: a variable-length field specifying\
    \ the IPv6\n      prefix or address for the BR.  This field is right-padded with\n\
    \      zeros to the nearest octet boundary when dmr-prefix6-len is not\n     \
    \ divisible by 8.\n"
- title: 4.4.  S46 IPv4/IPv6 Address Binding Option
  contents:
  - "4.4.  S46 IPv4/IPv6 Address Binding Option\n   The S46 IPv4/IPv6 Address Binding\
    \ option (OPTION_S46_V4V6BIND) MAY be\n   used to specify the full or shared IPv4\
    \ address of the CE.  The IPv6\n   prefix field is used by the CE to identify\
    \ the correct prefix to use\n   for the tunnel source.\n      0              \
    \     1                   2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |      OPTION_S46_V4V6BIND      |         option-length         |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                       ipv4-address                          |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |bindprefix6-len|             bind-ipv6-prefix                  |\n    \
    \ +-+-+-+-+-+-+-+-+             (variable length)                 |\n     .  \
    \                                                             .\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                                                               |\n    \
    \ .                      S46_V4V6BIND-options                     .\n     .  \
    \                                                             .\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \              Figure 5: S46 IPv4/IPv6 Address Binding Option\n   o  option-code:\
    \ OPTION_S46_V4V6BIND (92)\n   o  option-length: length of the option, excluding\
    \ option-code and\n      option-length fields, including length of all encapsulated\n\
    \      options; expressed in octets.\n   o  ipv4-address: a fixed-length field\
    \ of 4 octets specifying an IPv4\n      address.\n   o  bindprefix6-len: 8 bits\
    \ long; expresses the bitmask length of the\n      IPv6 prefix specified in the\
    \ bind-ipv6-prefix field.  Allowed\n      values range from 0 to 128.\n   o  bind-ipv6-prefix:\
    \ a variable-length field specifying the IPv6\n      prefix or address for the\
    \ S46 CE.  This field is right-padded with\n      zeros to the nearest octet boundary\
    \ when bindprefix6-len is not\n      divisible by 8.\n   o  S46_V4V6BIND-options:\
    \ a variable-length field that may contain\n      zero or more options that specify\
    \ additional parameters.  This\n      document specifies one such option: OPTION_S46_PORTPARAMS.\n"
- title: 4.5.  S46 Port Parameters Option
  contents:
  - "4.5.  S46 Port Parameters Option\n   The S46 Port Parameters option (OPTION_S46_PORTPARAMS)\
    \ specifies\n   optional port set information that MAY be provided to CEs.\n \
    \  See Section 5.1 of [RFC7597] for a description of the MAP algorithm\n   and\
    \ detailed explanation of all of the parameters.\n      0                   1\
    \                   2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |     OPTION_S46_PORTPARAMS     |         option-length         |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \ offset      |    PSID-len   |              PSID             |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                   Figure 6: S46 Port Parameters Option\n   o  option-code: OPTION_S46_PORTPARAMS\
    \ (93)\n   o  option-length: 4\n   o  offset: Port Set Identifier (PSID) offset.\
    \  8 bits long; specifies\n      the numeric value for the S46 algorithm's excluded\
    \ port range/\n      offset bits (a-bits), as per Section 5.1 of [RFC7597].  Allowed\n\
    \      values are between 0 and 15.  Default values for this field are\n     \
    \ specific to the softwire mechanism being implemented and are\n      defined\
    \ in the relevant specification document.\n   o  PSID-len: 8 bits long; specifies\
    \ the number of significant bits in\n      the PSID field (also known as 'k').\
    \  When set to 0, the PSID field\n      is to be ignored.  After the first 'a'\
    \ bits, there are k bits in\n      the port number representing the value of the\
    \ PSID.  Consequently,\n      the address-sharing ratio would be 2^k.\n   o  PSID:\
    \ 16 bits long.  The PSID value algorithmically identifies a\n      set of ports\
    \ assigned to a CE.  The first k bits on the left of\n      this field contain\
    \ the PSID binary value.  The remaining (16 - k)\n      bits on the right are\
    \ padding zeros.\n   When receiving the OPTION_S46_PORTPARAMS option with an explicit\n\
    \   PSID, the client MUST use this explicit PSID when configuring its\n   softwire\
    \ interface.  The OPTION_S46_PORTPARAMS option with an\n   explicit PSID MUST\
    \ be discarded if the S46 CE isn't configured with a\n   full IPv4 address (e.g.,\
    \ IPv4 prefix).\n   The OPTION_S46_PORTPARAMS option is contained within an\n\
    \   OPTION_S46_RULE option or an OPTION_S46_V4V6BIND option.\n"
- title: 5.  Softwire46 Containers
  contents:
  - '5.  Softwire46 Containers

    '
- title: 5.1.  S46 MAP-E Container Option
  contents:
  - "5.1.  S46 MAP-E Container Option\n   The S46 MAP-E Container option (OPTION_S46_CONT_MAPE)\
    \ specifies the\n   container used to group all rules and optional port parameters\
    \ for a\n   specified domain.\n      0                   1                   2\
    \                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |        OPTION_S46_CONT_MAPE   |         option-length         |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                                                             |\n     .      \
    \      encapsulated-options (variable length)             .\n     .          \
    \                                                     .\n     +---------------------------------------------------------------+\n\
    \                   Figure 7: S46 MAP-E Container Option\n   o  option-code: OPTION_S46_CONT_MAPE\
    \ (94)\n   o  option-length: length of encapsulated options, expressed in\n  \
    \    octets.\n   o  encapsulated-options: options associated with this Softwire46\n\
    \      MAP-E domain.\n   The encapsulated-options field conveys options specific\
    \ to the\n   OPTION_S46_CONT_MAPE option.  Currently, there are two encapsulated\n\
    \   options specified: OPTION_S46_RULE and OPTION_S46_BR.  There MUST be\n   at\
    \ least one OPTION_S46_RULE option and at least one OPTION_S46_BR\n   option.\n\
    \   Other options applicable to a domain may be defined in the future.  A\n  \
    \ DHCPv6 message MAY include multiple OPTION_S46_CONT_MAPE options\n   (representing\
    \ multiple domains).\n"
- title: 5.2.  S46 MAP-T Container Option
  contents:
  - "5.2.  S46 MAP-T Container Option\n   The S46 MAP-T Container option (OPTION_S46_CONT_MAPT)\
    \ specifies the\n   container used to group all rules and optional port parameters\
    \ for a\n   specified domain.\n      0                   1                   2\
    \                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |     OPTION_S46_CONT_MAPT      |         option-length         |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                                                             |\n     .      \
    \      encapsulated-options (variable length)             .\n     .          \
    \                                                     .\n     +---------------------------------------------------------------+\n\
    \                   Figure 8: S46 MAP-T Container Option\n   o  option-code: OPTION_S46_CONT_MAPT\
    \ (95)\n   o  option-length: length of encapsulated options, expressed in\n  \
    \    octets.\n   o  encapsulated-options: options associated with this Softwire46\n\
    \      MAP-T domain.\n   The encapsulated-options field conveys options specific\
    \ to the\n   OPTION_S46_CONT_MAPT option.  Currently, there are two options\n\
    \   specified: the OPTION_S46_RULE and OPTION_S46_DMR options.  There\n   MUST\
    \ be at least one OPTION_S46_RULE option and exactly one\n   OPTION_S46_DMR option.\n"
- title: 5.3.  S46 Lightweight 4over6 Container Option
  contents:
  - "5.3.  S46 Lightweight 4over6 Container Option\n   The S46 Lightweight 4over6\
    \ Container option (OPTION_S46_CONT_LW)\n   specifies the container used to group\
    \ all rules and optional port\n   parameters for a specified domain.\n      0\
    \                   1                   2                   3\n      0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |      OPTION_S46_CONT_LW       |         option-length         |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                                                             |\n     +      \
    \      encapsulated-options (variable length)             .\n     .          \
    \                                                     .\n     +---------------------------------------------------------------+\n\
    \             Figure 9: S46 Lightweight 4over6 Container Option\n   o  option-code:\
    \ OPTION_S46_CONT_LW (96)\n   o  option-length: length of encapsulated options,\
    \ expressed in\n      octets.\n   o  encapsulated-options: options associated\
    \ with this Softwire46\n      Lightweight 4over6 domain.\n   The encapsulated-options\
    \ field conveys options specific to the\n   OPTION_S46_CONT_LW option.  Currently,\
    \ there are two options\n   specified: OPTION_S46_V4V6BIND and OPTION_S46_BR.\
    \  There MUST be at\n   most one OPTION_S46_V4V6BIND option and at least one OPTION_S46_BR\n\
    \   option.\n"
- title: 6.  Softwire46 Options Encapsulation
  contents:
  - "6.  Softwire46 Options Encapsulation\n   The table below shows which encapsulated\
    \ options are mandatory,\n   optional, or not permitted for each defined container\
    \ option.\n      +-----------------------+-------+-------+--------------------+\n\
    \      | Option                | MAP-E | MAP-T | Lightweight 4over6 |\n      +-----------------------+-------+-------+--------------------+\n\
    \      | OPTION_S46_RULE       |   M   |   M   |        N/P         |\n      |\
    \ OPTION_S46_BR         |   M   |  N/P  |         M          |\n      | OPTION_S46_PORTPARAMS\
    \ |   O   |   O   |         O          |\n      | OPTION_S46_DMR        |  N/P\
    \  |   M   |        N/P         |\n      | OPTION_S46_V4V6BIND   |  N/P  |  N/P\
    \  |         O          |\n      +-----------------------+-------+-------+--------------------+\n\
    \             M - Mandatory, O - Optional, N/P - Not Permitted\n             \
    \     Table 1: Options for Container Mappings\n   Softwire46 DHCPv6 clients that\
    \ receive container options that violate\n   any of the above rules MUST silently\
    \ ignore such container options.\n"
- title: 7.  DHCPv6 Server Behavior
  contents:
  - "7.  DHCPv6 Server Behavior\n   Section 17.2.2 of [RFC3315] describes how a DHCPv6\
    \ client and server\n   negotiate configuration values using the ORO.  As a convenience\
    \ for\n   the reader, we mention here that by default a server will not reply\n\
    \   with a Softwire46 container option if the client has not explicitly\n   enumerated\
    \ one in its ORO.\n   A CE router may support several (or all) of the mechanisms\
    \ mentioned\n   here.  In the case where a client requests multiple mechanisms\
    \ in its\n   ORO, the server will reply with the corresponding Softwire46\n  \
    \ container options for which it has configuration information.\n"
- title: 8.  DHCPv6 Client Behavior
  contents:
  - "8.  DHCPv6 Client Behavior\n   An S46 CE acting as a DHCPv6 client will request\
    \ S46 configuration\n   parameters from the DHCPv6 server located in the IPv6\
    \ network.  Such\n   a client MUST request the S46 container option(s) that it\
    \ is\n   configured for in its ORO in SOLICIT, REQUEST, RENEW, REBIND, and\n \
    \  INFORMATION-REQUEST messages.\n   When processing received S46 container options,\
    \ the following\n   behavior is expected:\n   o  A client MUST support processing\
    \ multiple received OPTION_S46_RULE\n      options in a container OPTION_S46_CONT_MAPE\
    \ or\n      OPTION_S46_CONT_MAPT option.\n   o  A client receiving an unsupported\
    \ S46 option or an invalid\n      parameter value SHOULD discard that S46 container\
    \ option and log\n      the event.\n   The behavior of a client that supports\
    \ multiple Softwire46 mechanisms\n   is out of scope for this document.  [Unified-v4-in-v6]\
    \ describes\n   client behavior for the prioritization and handling of multiple\n\
    \   mechanisms simultaneously.\n   Note that a system implementing CE functionality\
    \ may have multiple\n   network interfaces, and these interfaces may be configured\n\
    \   differently; some may be connected to networks using a Softwire46\n   mechanism,\
    \ and some may be connected to networks that are using\n   normal dual-stack or\
    \ other means.  The CE should approach this\n   specification on an interface-by-interface\
    \ basis.  For example, if\n   the CE system is MAP-E capable and is attached to\
    \ multiple networks\n   that provide the OPTION_S46_CONT_MAPE option, then the\
    \ CE MUST\n   configure MAP-E for each interface separately.\n   Failure modes\
    \ are out of scope for this document.  Failure recovery\n   mechanisms may be\
    \ defined in the future.  See Section 5 of [RFC7597]\n   for a discussion of valid\
    \ MAP Rule combinations.  See Section 11 of\n   [RFC7227] and Sections 18.1.3,\
    \ 18.1.4, and 19.1 of [RFC3315] for\n   parameter-update mechanisms in DHCPv6\
    \ that can be leveraged to update\n   configuration after a failure.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   Section 23 of [RFC3315] discusses DHCPv6-related\
    \ security issues.\n   As with all DHCPv6-derived configuration states, it is\
    \ possible that\n   configuration is actually being delivered by a third party\
    \ (Man in\n   the Middle).  As such, there is no basis on which access over MAP\
    \ or\n   Lightweight 4over6 can be trusted.  Therefore, softwires should not\n\
    \   bypass any security mechanisms such as IP firewalls.\n   In IPv6-only networks\
    \ that lack IPv4 firewalls, a device that\n   supports MAP could be tricked into\
    \ enabling its IPv4 stack and\n   directing IPv4 traffic to the attacker, thus\
    \ exposing itself to\n   previously infeasible IPv4 attack vectors.\n   Section\
    \ 10 of [RFC7597] discusses security issues related to the\n   MAP-E mechanism,\
    \ Section 9 of [RFC7596] discusses security issues\n   related to the Lightweight\
    \ 4over6 mechanism, and Section 13 of\n   [RFC7599] discusses security issues\
    \ related to the MAP-T mechanism.\n   Readers concerned with the security of Softwire46\
    \ provisioning over\n   DHCPv6 are encouraged to read [Secure-DHCPv6].\n"
- title: 10.  IANA Considerations
  contents:
  - "10.  IANA Considerations\n   IANA has allocated the following DHCPv6 option codes:\n\
    \      89 for OPTION_S46_RULE\n      90 for OPTION_S46_BR\n      91 for OPTION_S46_DMR\n\
    \      92 for OPTION_S46_V4V6BIND\n      93 for OPTION_S46_PORTPARAMS\n      94\
    \ for OPTION_S46_CONT_MAPE\n      95 for OPTION_S46_CONT_MAPT\n      96 for OPTION_S46_CONT_LW\n\
    \   All values have been added to the \"Dynamic Host Configuration\n   Protocol\
    \ for IPv6 (DHCPv6)\" option code space defined in Section 24.3\n   of [RFC3315].\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC3315]  Droms, R., Ed., Bound, J., Volz, B., Lemon, T., Perkins,\n    \
    \          C., and M. Carney, \"Dynamic Host Configuration Protocol\n        \
    \      for IPv6 (DHCPv6)\", RFC 3315, DOI 10.17487/RFC3315,\n              July\
    \ 2003, <http://www.rfc-editor.org/info/rfc3315>.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [RFC2131]  Droms, R., \"Dynamic Host Configuration\
    \ Protocol\",\n              RFC 2131, DOI 10.17487/RFC2131, March 1997,\n   \
    \           <http://www.rfc-editor.org/info/rfc2131>.\n   [RFC2473]  Conta, A.\
    \ and S. Deering, \"Generic Packet Tunneling in\n              IPv6 Specification\"\
    , RFC 2473, DOI 10.17487/RFC2473,\n              December 1998, <http://www.rfc-editor.org/info/rfc2473>.\n\
    \   [RFC6145]  Li, X., Bao, C., and F. Baker, \"IP/ICMP Translation\n        \
    \      Algorithm\", RFC 6145, DOI 10.17487/RFC6145, April 2011,\n            \
    \  <http://www.rfc-editor.org/info/rfc6145>.\n   [RFC6346]  Bush, R., Ed., \"\
    The Address plus Port (A+P) Approach to\n              the IPv4 Address Shortage\"\
    , RFC 6346,\n              DOI 10.17487/RFC6346, August 2011,\n              <http://www.rfc-editor.org/info/rfc6346>.\n\
    \   [RFC7227]  Hankins, D., Mrugalski, T., Siodelski, M., Jiang, S., and\n   \
    \           S. Krishnan, \"Guidelines for Creating New DHCPv6 Options\",\n   \
    \           BCP 187, RFC 7227, DOI 10.17487/RFC7227, May 2014,\n             \
    \ <http://www.rfc-editor.org/info/rfc7227>.\n   [RFC7596]  Cui, Y., Sun, Q., Boucadair,\
    \ M., Tsou, T., Lee, Y., and\n              I. Farrer, \"Lightweight 4over6: An\
    \ Extension to the\n              Dual-Stack Lite Architecture\", RFC 7596,\n\
    \              DOI 10.17487/RFC7596, July 2015,\n              <http://www.rfc-editor.org/info/rfc7596>.\n\
    \   [RFC7597]  Troan, O., Ed., Dec, W., Li, X., Bao, C., Matsushima, S.,\n   \
    \           Murakami, T., and T. Taylor, Ed., \"Mapping of Address and\n     \
    \         Port with Encapsulation (MAP-E)\", RFC 7597,\n              DOI 10.17487/RFC7597,\
    \ July 2015,\n              <http://www.rfc-editor.org/info/rfc7597>.\n   [RFC7599]\
    \  Li, X., Bao, C., Dec, W., Ed., Troan, O., Matsushima, S.,\n              and\
    \ T. Murakami, \"Mapping of Address and Port using\n              Translation\
    \ (MAP-T)\", RFC 7599, DOI 10.17487/RFC7599,\n              July 2015, <http://www.rfc-editor.org/info/rfc7599>.\n\
    \   [Secure-DHCPv6]\n              Jiang, S., Ed., Shen, S., Zhang, D., and T.\
    \ Jinmei,\n              \"Secure DHCPv6\", Work in Progress,\n              draft-ietf-dhc-sedhcpv6-08,\
    \ June 2015.\n   [Unified-v4-in-v6]\n              Boucadair, M., Farrer, I.,\
    \ Perreault, S., Ed., and S.\n              Sivakumar, Ed., \"Unified IPv4-in-IPv6\
    \ Softwire CPE\", Work\n              in Progress, draft-ietf-softwire-unified-cpe-01,\
    \ May 2013.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   This document was created as a product of a MAP design team.\
    \  The\n   following people were members of that team: Congxiao Bao, Mohamed\n\
    \   Boucadair, Gang Chen, Maoke Chen, Wojciech Dec, Xiaohong Deng, Jouni\n   Korhonen,\
    \ Xing Li, Satoru Matsushima, Tomek Mrugalski, Tetsuya\n   Murakami, Jacni Qin,\
    \ Necj Scoberne, Qiong Sun, Tina Tsou, Dan Wing,\n   Leaf Yeh, and Jan Zorz.\n\
    \   The authors would like to thank Bernie Volz and Tom Taylor for their\n   insightful\
    \ comments and suggestions.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Tomek Mrugalski\n   Internet Systems Consortium, Inc.\n\
    \   950 Charter Street\n   Redwood City, CA  94063\n   United States\n   Phone:\
    \ +1 650 423 1345\n   Email: tomasz.mrugalski@gmail.com\n   URI:   http://www.isc.org/\n\
    \   Ole Troan\n   Cisco Systems\n   Philip Pedersens vei 1\n   Lysaker  1366\n\
    \   Norway\n   Email: ot@cisco.com\n   Ian Farrer\n   Deutsche Telekom AG\n  \
    \ CTO-ATI, Landgrabenweg 151\n   Bonn, NRW  53227\n   Germany\n   Email: ian.farrer@telekom.de\n\
    \   Simon Perreault\n   Jive Communications\n   Quebec, QC\n   Canada\n   Email:\
    \ sperreault@jive.com\n   Wojciech Dec\n   Cisco Systems, Inc.\n   The Netherlands\n\
    \   Email: wdec@cisco.com\n   URI:   http://cisco.com\n   Congxiao Bao\n   CERNET\
    \ Center/Tsinghua University\n   Room 225, Main Building, Tsinghua University\n\
    \   Beijing  100084\n   China\n   Phone: +86 10-62785983\n   Email: congxiao@cernet.edu.cn\n\
    \   Leaf Y. Yeh\n   Freelancer Technologies\n   China\n   Email: leaf.y.yeh@hotmail.com\n\
    \   Xiaohong Deng\n   The University of New South Wales\n   Sydney  NSW 2052\n\
    \   Australia\n   Email: dxhbupt@gmail.com\n   URI:   https://www.unsw.edu.au/\n"
