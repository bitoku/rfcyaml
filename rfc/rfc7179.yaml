- title: __initial_text__
  contents:
  - ' Transparent Interconnection of Lots of Links (TRILL): Header Extension

    '
- title: Abstract
  contents:
  - "Abstract\n   The IETF Transparent Interconnection of Lots of Links (TRILL) base\n\
    \   protocol (RFC 6325) specifies minimal hooks to safely support TRILL\n   Header\
    \ extensions.  This document specifies an initial extension\n   providing additional\
    \ flag bits and specifies some of those bits.  It\n   updates RFC 6325.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7179.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Conventions Used in This Document ..........................3\n  \
    \ 2. TRILL Header Extensions .........................................3\n    \
    \  2.1. RBridge Extended Flag Handling Requirements ................5\n      2.2.\
    \ No Critical Surprises ......................................5\n      2.3. Extended\
    \ Header Flags ......................................6\n           2.3.1. Critical\
    \ Summary Bits ...............................7\n      2.4. Conflict of Extensions\
    \ .....................................8\n   3. Specific Extended Header Flags\
    \ ..................................9\n      3.1. RBridge Channel Alert Extended\
    \ Flags .......................9\n   4. Additions to IS-IS ..............................................9\n\
    \   5. IANA Considerations ............................................10\n  \
    \ 6. Security Considerations ........................................10\n   7.\
    \ Acknowledgements ...............................................11\n   8. References\
    \ .....................................................11\n      8.1. Normative\
    \ References ......................................11\n      8.2. Informative\
    \ References ....................................11\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The base IETF Transparent Interconnection of Lots of Links\
    \ (TRILL)\n   protocol [RFC6325] provides a TRILL Header extension feature and\n\
    \   describes minimal hooks to safely support header extensions.  (This\n   feature\
    \ is called \"options\" in Section 3.8 of [RFC6325].)  But,\n   except for the\
    \ first two bits, the TRILL base protocol document does\n   not specify the structure\
    \ of extensions to the TRILL Header nor the\n   details of any particular extension.\n\
    \   This document is consistent with [RFC6325] and provides further\n   details.\
    \  It specifies an initial extension word providing additional\n   flag bits and\
    \ specifies some of those bits.  Additional extensions,\n   including TLV-encoded\
    \ options, may be specified in later documents,\n   for example, [Options] and\
    \ [Options2].\n   Section 2 below describes some general principles of TRILL Header\n\
    \   extensions and an initial extension.  Section 3 specifies a pair of\n   flags\
    \ in this initial extension.\n"
- title: 1.1.  Conventions Used in This Document
  contents:
  - "1.1.  Conventions Used in This Document\n   The terminology and acronyms defined\
    \ in [RFC6325] are used herein\n   with the same meaning.  Devices implementing\
    \ the TRILL protocol are\n   referred to as RBridges (Routing Bridges) or TRILL\
    \ Switches.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
- title: 2.  TRILL Header Extensions
  contents:
  - "2.  TRILL Header Extensions\n   The base TRILL protocol includes a feature for\
    \ extension of the TRILL\n   Header (see [RFC6325], Sections 3.5 and 3.8).  The\
    \ 5-bit Op-Length\n   header field gives the length of the extensions to the TRILL\
    \ Header\n   in units of 4 octets, which allows up to 124 octets of header\n \
    \  extension.  If Op-Length is zero, there are no header extensions\n   present;\
    \ else, the extension area follows immediately after the\n   Ingress RBridge Nickname\
    \ field of the TRILL Header.  The first 32-bit\n   word of the optional extensions\
    \ area consists of an extended flags\n   area and critical summary bits as specified\
    \ in this document.\n   As described below, provision is made for\n   o  hop-by-hop\
    \ flags, which might affect any RBridge that receives a\n      TRILL Data frame\
    \ with such a flag set,\n   o  ingress-to-egress flags, which would only necessarily\
    \ affect the\n      RBridge(s) where a TRILL frame is decapsulated,\n   o  flags\
    \ affecting an as-yet-unspecified class of RBridges, for\n      example, border\
    \ RBridges in a TRILL campus extended to support\n      multi-level IS-IS (Intermediate\
    \ System to Intermediate System)\n      [MultiLevel], and\n   o  both \"critical\"\
    \ and \"non-critical\" flags.\n   Any RBridge receiving a frame with a critical\
    \ hop-by-hop extension\n   that it does not implement MUST discard the frame because\
    \ it is\n   unsafe to process the frame without understanding such a critical\n\
    \   extension.\n   Any egress RBridge receiving a frame with a critical ingress-to-\n\
    \   egress extension it does not implement MUST drop the frame if it is a\n  \
    \ unicast frame (TRILL Header M bit = 0); if it is a multi-destination\n   TRILL\
    \ Data frame (M=1), then it MUST NOT be egressed at that RBridge,\n   but the\
    \ egress RBridge still forwards such a frame on the\n   distribution tree.\n \
    \  Non-critical extensions can be safely ignored.\n   Any extended flag indicating\
    \ a significant change in the structure or\n   interpretation of later parts of\
    \ the frame that, if the extended flag\n   were ignored, could cause a failure\
    \ of service or violation of\n   security policy MUST be a critical extension.\
    \  If such an extended\n   flag affects any fields that transit RBridges will\
    \ examine, it MUST\n   be a hop-by-hop critical extended flag.\n      Note: Most\
    \ RBridge implementations are expected to be optimized\n      for simple and common\
    \ cases of frame forwarding and processing.\n      Although the hard limit on\
    \ the header extensions area length, the\n      32-bit alignment of the extension\
    \ area, and the presence of\n      critical extension summary bits, as described\
    \ below, are intended\n      to assist in the efficient hardware processing of\
    \ frames with a\n      TRILL Header extensions area, nevertheless the inclusion\
    \ of\n      extensions may cause frame processing using a \"slow path\" with\n\
    \      inferior performance to \"fast path\" processing.  Limited slow path\n\
    \      throughput of such frames could cause some of them to be\n      discarded.\n"
- title: 2.1.  RBridge Extended Flag Handling Requirements
  contents:
  - "2.1.  RBridge Extended Flag Handling Requirements\n   All RBridges MUST check\
    \ whether there are any critical flags set that\n   are necessarily applicable\
    \ to their processing of the frame.  To\n   assist in this task, critical summary\
    \ bits are provided that cover\n   not only the extended flags specified herein\
    \ but will cover any\n   further extensions that may be specified in future documents,\
    \ for\n   example, [Options] and [Options2].  If an RBridge does not implement\n\
    \   all critical flags in a TRILL Data frame, it MUST treat the frame as\n   having\
    \ an unimplemented critical extension as described in Section 2.\n   A transit\
    \ or egress RBridge may assume that the critical summary bits\n   are correct.\n\
    \   In addition, a transit RBridge:\n   o  MAY set or clear hop-by-hop flags as\
    \ specified for such flags;\n   o  MUST adjust the length of the extensions area,\
    \ including changing\n      Op-Length in the TRILL Header, as appropriate if it\
    \ adds or\n      removes the extended header flags word;\n   o  MUST, if it adds\
    \ the word of extended header flags or changes any\n      critical flags, correctly\
    \ set the critical summary bits in the\n      extended header flags word;\n  \
    \ o  MUST NOT remove the extended header flags word unless it is all\n      zero\
    \ (either on arrival or after permitted modifications); and\n   o  MUST NOT set\
    \ or clear ingress-to-egress or reserved extended\n      header flags except as\
    \ specifically permitted in the specification\n      of such flags.\n"
- title: 2.2.  No Critical Surprises
  contents:
  - "2.2.  No Critical Surprises\n   RBridges advertise the extended header flags\
    \ they support in IS-IS\n   PDUs (Protocol Data Units) [RFC7176].  Unless an RBridge\
    \ advertises\n   support for a critical extended header flag, it will not normally\n\
    \   receive frames with that flag set.  An RBridge is not required to\n   support\
    \ any extensions.\n   An RBridge SHOULD NOT set a critical extended flag in a\
    \ frame unless,\n   o  for a critical hop-by-hop extended header flag, it has\
    \ determined\n      that the next hop RBridge or RBridges that will accept the\
    \ frame\n      support that flag,\n   o  for a critical ingress-to-egress extended\
    \ header flag, it has\n      determined that the RBridge or RBridges that will\
    \ egress the frame\n      support that flag, or\n   o  for a critical reserved\
    \ extended header flag, it may set such a\n      flag only if it understands which\
    \ RBridges it is applicable to and\n      has determined that those RBridges that\
    \ will accept the frame\n      support that flag.\n   \"SHOULD NOT\" is specified\
    \ above since there may be cases where it is\n   acceptable for those frames,\
    \ particularly for the multi-destination\n   case, to be discarded or not egressed\
    \ by any RBridges that do not\n   implement the extended flag.\n"
- title: 2.3.  Extended Header Flags
  contents:
  - "2.3.  Extended Header Flags\n   If any extensions are present in a TRILL Header,\
    \ as indicated by a\n   non-zero Op-Length field, the first 32 bits of the extensions\
    \ area\n   consist of extended header flags, as described below.  The remainder\n\
    \   of the extensions area, if any, after the initial 32 bits may be\n   specified\
    \ in later documents, for example, [Options] and [Options2].\n   Any RBridge adding\
    \ an extensions area to a TRILL Header must set the\n   first 32 bits to zero\
    \ except when permitted or required to set one or\n   more of those bits as specified.\
    \  For TRILL Data frames with\n   extensions present, any transit RBridge that\
    \ does not discard the\n   frame MUST transparently copy the extended flags word,\
    \ except for\n   modifications permitted by an extension implemented by that RBridge.\n\
    \   The extended header flags word is illustrated below and the meanings\n   of\
    \ these bits is further described in the list following the figure.\n    0   \
    \                1                   2                   3\n    0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |Crit.|  CHbH   |   NCHbH   |CRSV | NCRSV |   CItE    |  NCItE  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | ... additional optional 32-bit aligned words of extension     |\n   |  \
    \   possibly including TLV extensions ...\n   (The first two critical summary\
    \ bits are as specified in [RFC6325].\n   In this document, an \"S\", for Summary,\
    \ has been added at the end of\n   their acronyms.  A third critical summary bit\
    \ is also specified\n   herein and its acronym also ends with an \"S\" for consistency.)\n\
    \   Bits    Description\n   --------------------\n   0-2     Crit.: Critical summary\
    \ bits.\n           0 CHbHS: Critical Hop-by-Hop extension(s) are present.\n \
    \          1 CItES: Critical Ingress-to-Egress extension(s) are present.\n   \
    \        2 CRSVS: Critical Reserved extension(s) are present.\n   3-7     CHbH:\
    \ Critical Hop-by-Hop extended flag bits.\n   8-13    NCHbH: Non-critical Hop-by-Hop\
    \ extended flag bits.\n   14-16   CRSV: Critical Reserved extended flag bits.\n\
    \   17-20   NCRSV: Non-critical Reserved extended flag bits.\n   21-26   CItE:\
    \ Critical Ingress-to-Egress extended flag bits.\n   27-31   NCItE: Non-critical\
    \ Ingress-to-Egress extended flag bits.\n"
- title: 2.3.1.  Critical Summary Bits
  contents:
  - "2.3.1.  Critical Summary Bits\n   The top three bits of the extended header flags\
    \ area, bits 0, 1, and\n   2 above, are called the critical summary bits.  They\
    \ summarize the\n   presence of critical extensions as follows:\n   CHbHS: If\
    \ the CHbHS (Critical Hop-by-Hop Summary) bit is one, one or\n      more critical\
    \ hop-by-hop extensions are present.  These might be\n      critical hop-by-hop\
    \ extended header flags or critical hop-by-hop\n      extensions after the first\
    \ word in the extensions area.  Transit\n      RBridges that do not support all\
    \ of the critical hop-by-hop\n      extensions present, for example, an RBridge\
    \ that supported no\n      critical hop-by-hop extensions, MUST drop the frame.\
    \  If the CHbHS\n      bit is zero, the frame is safe, from the point of view\
    \ of\n      extensions processing, for a transit RBridge to forward,\n      regardless\
    \ of what extensions that RBridge does or does not\n      support.\n   CItES:\
    \ If the CItES (Critical Ingress-to-Egress Summary) bit is a\n      one, one or\
    \ more critical ingress-to-egress extensions are\n      present.  These might\
    \ be critical ingress-to-egress extended\n      header flags or critical ingress-to-egress\
    \ extensions after the\n      first word in the extensions area.  If the CItES\
    \ bit is zero, no\n      such extensions are present.  If either CHbHS or CItES\
    \ is non-\n      zero, egress RBridges that do not support all critical extensions\n\
    \      present, for example, an RBridge that supports no critical\n      extensions,\
    \ MUST drop the frame.  If both CHbHS and CItES are\n      zero, the frame is\
    \ safe, from the point of view of extensions, for\n      an egress RBridge to\
    \ process, regardless of what extensions that\n      RBridge does or does not\
    \ support.\n   CRSVS: If the CRSVS (Critical Reserved Summary) bit is a one, one\
    \ or\n      more critical extensions are present that are reserved to apply to\n\
    \      a class of RBridges to be specified in the future, for example,\n     \
    \ border RBridges in a TRILL campus extended to support multi-level\n      IS-IS.\
    \  This class will be a subset of transit RBridges.  RBridges\n      in this class\
    \ MUST drop frames with the CRSVS bit set unless they\n      implement all critical\
    \ hop-by-hop and all critical reserved\n      extensions present in the frame.\n\
    \   The critical summary bits enable simple and efficient processing of\n   TRILL\
    \ Data frames by egress RBridges that support no critical\n   extensions, by transit\
    \ RBridges that support no critical hop-by-hop\n   extensions, and by RBridges\
    \ in the reserved class that support no\n   critical hop-by-hop or reserved extensions.\
    \  Such RBridges need only\n   check whether Op-Length is non-zero and, if it\
    \ is, check the top one,\n   two, or three bits just after the fixed portion of\
    \ the TRILL Header.\n   Based on those three bits, such RBridges can decide whether\
    \ to\n   discard or forward/process the frame.\n"
- title: 2.4.  Conflict of Extensions
  contents:
  - "2.4.  Conflict of Extensions\n   Defining TRILL extensions including extended\
    \ header flags that\n   conflict with each other would be undesirable.  Should\
    \ conflicting\n   extensions appear in the same packet, the results would be\n\
    \   unpredictable if different implementations processed them in\n   different\
    \ orders.  While rules could be defined to specify how to\n   predictably process\
    \ conflicting extensions, such rules would also\n   limit implementation flexibility\
    \ and could impose substantial\n   processing burdens.\n   Conflicting extensions\
    \ SHOULD NOT be defined, but if they are,\n   careful thought should be given\
    \ as to whether and how to specify the\n   handling of conflicting extensions.\n"
- title: 3.  Specific Extended Header Flags
  contents:
  - "3.  Specific Extended Header Flags\n   The table below shows the state of TRILL\
    \ Header extended flag\n   assignments.  See Section 5 for IANA Considerations.\n\
    \   Bits    Purpose                                          Section\n   ----------------------------------------------------------------\n\
    \    0-2    Critical Summary Bits                              2.3.1\n    3-6\
    \    available critical hop-by-hop flags\n    7      Critical Channel Alert flag\
    \                          3.1\n    8      Non-critical Channel Alert flag   \
    \                   3.1\n    9-13   available non-critical hop-by-hop flags\n\
    \   14-16   available critical reserved flags\n   17-20   available non-critical\
    \ reserved flags\n   21-26   available critical ingress-to-egress flags\n   27-31\
    \   available non-critical ingress-to-egress flags\n             Table 1: Extended\
    \ Header Flags Area\n"
- title: 3.1.  RBridge Channel Alert Extended Flags
  contents:
  - "3.1.  RBridge Channel Alert Extended Flags\n   The RBridge Channel Alert extended\
    \ header flags indicate that the\n   frame is an RBridge Channel frame [RFC7178]\
    \ that requests processing\n   at each hop.\n   If the Critical Channel Alert\
    \ flag (bit 7) is a one and the RBridge\n   does not implement the RBridge Channel\
    \ feature or the particular\n   RBridge Channel protocol involved [RFC7178] or\
    \ the frame does not\n   actually appear to be an RBridge Channel message, then\
    \ the frame is\n   discarded.  This permits implementation, for example, of a\
    \ channel\n   message requiring strict source routing or the like, with assurance\n\
    \   that it will be discarded rather than deviate from the directed path.\n  \
    \ If the frame is not discarded as described above, then the presence\n   of either\
    \ the Critical or Non-critical Channel Alert flag alerts\n   transit RBridges\
    \ to the presence of an RBridge Channel message\n   [RFC7178] that may require\
    \ special handling.  The non-critical alert\n   flag supports, for example, an\
    \ RBridge Channel protocol message\n   including a \"record route\" function where\
    \ not recording transit\n   RBridges that do not support this function is acceptable.\n"
- title: 4.  Additions to IS-IS
  contents:
  - "4.  Additions to IS-IS\n   RBridges use IS-IS Link State PDUs (LSPs) to inform\
    \ other RBridges\n   which extended header flags they support.  The IS-IS PDU(s),\
    \ TLV(s),\n   or sub-TLV(s) used to encode and advertise this information are\n\
    \   specified in a separate document [RFC7176].\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   IANA has created a \"TRILL Extended Header Flags\"\
    \ subregistry within\n   the TRILL Parameters registry.  The \"TRILL Extended\
    \ Header Flags\"\n   subregistry is initially populated as specified in Table\
    \ 1 in Section\n   3.  References in that table to sections of this document have\
    \ been\n   replaced in the IANA subregistry by references to this document as\
    \ an\n   RFC.\n   New TRILL extended header flags are allocated by IETF Review\n\
    \   [RFC5226].\n   To indicate support of extended header flags, IANA has assigned\
    \ the\n   following bits in the TRILL-VER and PORT-TRILL-VER Sub-TLV Capability\n\
    \   Flag registries created by [RFC7176]:\n   o  Bits 3-13 of the PORT-TRILL-VER\
    \ Sub-TLV Capability Flags have been\n      assigned to indicate support of TRILL\
    \ hop-by-hop extended header\n      flags 3-13.\n   o  Bits 14-31 of the TRILL-VER\
    \ Sub-TLV Capability Flags have been\n      assigned to indicate support of TRILL\
    \ extended header flags 14-31.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   For general TRILL protocol security considerations,\
    \ see [RFC6325].\n   For security considerations related to extended header flags,\
    \ see the\n   document where the flag is specified.\n   It is important that the\
    \ critical summary bits in the extended header\n   flags word be set properly.\
    \  If set when critical extensions of the\n   appropriate category are not present,\
    \ frames may be unnecessarily\n   discarded.  If not set when critical extensions\
    \ are present, frames\n   may be mishandled or corrupted, and intended security\
    \ policies may be\n   violated.\n   The RBridge Channel Alert extended header\
    \ flags have the following\n   security considerations.  Implementations should\
    \ keep in mind that\n   they might be erroneously set in a frame.  If either RBridge\
    \ Channel\n   Alert flag is found set in a frame that is not an RBridge Channel\n\
    \   message [RFC7178], the flag MAY be cleared and should have no effect\n   except,\
    \ possibly, delaying processing of the frame.  If either\n   RBridge Channel Alert\
    \ flag is erroneously omitted from a frame,\n   desired per-hop processing for\
    \ the frame may not occur.\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   The following, listed in alphabetic order, are thanked\
    \ for their\n   valuable contributions:  Ben Campbell, Adrian Farrel, Barry Leiba,\n\
    \   and Thomas Narten.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2119]     Bradner, S., \"Key words for use\
    \ in RFCs to Indicate\n                 Requirement Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n   [RFC5226]     Narten, T. and H. Alvestrand, \"Guidelines for\
    \ Writing\n                 an IANA Considerations Section in RFCs\", BCP 26,\
    \ RFC\n                 5226, May 2008.\n   [RFC6325]     Perlman, R., Eastlake\
    \ 3rd, D., Dutt, D., Gai, S., and\n                 A. Ghanwani, \"Routing Bridges\
    \ (RBridges): Base Protocol\n                 Specification\", RFC 6325, July\
    \ 2011.\n   [RFC7176]     Eastlake 3rd, D., Senevirathne, T., Ghanwani, A., Dutt,\n\
    \                 D., and A. Banerjee, \"Transparent Interconnection of\n    \
    \             Lots of Links (TRILL) Use of IS-IS\", RFC 7176, May\n          \
    \       2014.\n   [RFC7178]     Eastlake 3rd, D., Manral, V., Li, Y., Aldrin,\
    \ S., and\n                 D. Ward, \"Transparent Interconnection of Lots of\
    \ Links\n                 (TRILL): RBridge Channel Support\", RFC 7178, May 2014.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [MultiLevel]  Perlman, R., Eastlake 3rd, D.,\
    \ Ghanwani, A., and H.\n                 Zhai, \"Flexible Multilevel TRILL (Transparent\n\
    \                 Interconnection of Lots of Links)\", Work in Progress,\n   \
    \              January 2014.\n   [Options]     Eastlake 3rd, D., Ghanwani, A.,\
    \ Manral, V., and C.\n                 Bestler, \"RBridges: Further TRILL Header\
    \ Extensions\",\n                 Work in Progress, June 2012.\n   [Options2]\
    \    Eastlake 3rd, D., \"RBridges: More Proposed TRILL Header\n              \
    \   Options\", Work in Progress, October 2011.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Donald Eastlake 3rd\n   Huawei R&D USA\n   155 Beaver\
    \ Street\n   Milford, MA 01757\n   USA\n   Phone: +1-508-333-2270\n   EMail: d3e3e3@gmail.com\n\
    \   Anoop Ghanwani\n   Dell\n   5450 Great America Parkway\n   Santa Clara, CA\
    \  95054\n   USA\n   EMail: anoop@alumni.duke.edu\n   Vishwas Manral\n   Ionos\
    \ Corp.\n   4100 Moorpark Ave.\n   San Jose, CA  95117\n   USA\n   EMail: vishwas@ionosnetworks.com\n\
    \   Yizhou Li\n   Huawei Technologies\n   101 Software Avenue,\n   Nanjing 210012\n\
    \   China\n   Phone: +86-25-56622310\n   EMail: liyizhou@huawei.com\n   Caitlin\
    \ Bestler\n   Nexenta Systems\n   455 El Camino Real\n   Santa Clara, CA 95050\n\
    \   USA\n   EMail: caitlin.bestler@nexenta.com\n"
