- title: __initial_text__
  contents:
  - "                 Evaluation of Candidate Protocols for\n                   IP\
    \ Flow Information Export (IPFIX)\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document contains an evaluation of the five candidate protocols\n\
    \   for an IP Flow Information Export (IPFIX) protocol, based on the\n   requirements\
    \ document produced by the IPFIX Working Group.  The\n   protocols are characterized\
    \ and grouped in broad categories, and\n   evaluated against specific requirements.\
    \  Finally, a recommendation\n   is made to select the NetFlow v9 protocol as\
    \ the basis for the IPFIX\n   specification.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n   2. Protocol Summaries . . . . . . . . . . . . . . . . . .\
    \ . . . .   2\n      2.1.  CRANE. . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .   3\n      2.2.  Diameter . . . . . . . . . . . . . . . . . . . . . .\
    \ . .   4\n      2.3.  LFAP . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ .   4\n      2.4.  NetFlow v9 . . . . . . . . . . . . . . . . . . . . . . .\
    \   5\n      2.5.  Streaming IPDR . . . . . . . . . . . . . . . . . . . . .  \
    \ 6\n   3. Broad Classification of Candidate Protocols .  . . . . . . . .   7\n\
    \      3.1.  Design Goals . . . . . . . . . . . . . . . . . . . . . .   7\n  \
    \    3.2.  Data Representation. . . . . . . . . . . . . . . . . . .   8\n    \
    \  3.3.  Protocol Flow. . . . . . . . . . . . . . . . . . . . . .   9\n   4. Item-Level\
    \ Compliance Evaluation . . . . . . . . . . . . . . .  10\n      4.1.  Meter Reliability\
    \ (5.1). . . . . . . . . . . . . . . . .  10\n      4.2.  Sampling (5.2) . . .\
    \ . . . . . . . . . . . . . . . . . .  11\n      4.3.  Overload Behavior (5.3).\
    \ . . . . . . . . . . . . . . . .  12\n      4.4.  Timestamps (5.4) . . . . .\
    \ . . . . . . . . . . . . . . .  12\n      4.5.  Time Synchronization (5.5) .\
    \ . . . . . . . . . . . . . .  12\n      4.6.  Flow Expiration (5.6). . . . .\
    \ . . . . . . . . . . . . .  13\n      4.7.  Ignore Port Copy (5.9) . . . . .\
    \ . . . . . . . . . . . .  13\n      4.8.  Information Model (6.1). . . . . .\
    \ . . . . . . . . . . .  13\n      4.9.  Data Model (6.2) . . . . . . . . . .\
    \ . . . . . . . . . .  13\n      4.10. Data Transfer (6.3). . . . . . . . . .\
    \ . . . . . . . . .  14\n   5. Conclusions. . . . . . . . . . . . . . . . . .\
    \ . . . . . . . .  18\n      5.1.  Recommendation . . . . . . . . . . . . . .\
    \ . . . . . . .  19\n   6. Security Considerations. . . . . . . . . . . . . .\
    \ . . . . . .  19\n   7. Acknowledgements . . . . . . . . . . . . . . . . . .\
    \ . . . . .  19\n   8. References . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .  20\n      8.1.  Normative References . . . . . . . . . . . . . . .\
    \ . . .  20\n      8.2.  Informative References . . . . . . . . . . . . . . .\
    \ . .  20\n   Appendix.  A Note on References to the Candidate Protocol\n    \
    \          Documents. . . . . . . . . . . . . . . . . . . . . . .  22\n   Author's\
    \ Address. . . . . . . . . . . . . . . . . . . . . . . . .  22\n   Full Copyright\
    \ Statement. . . . . . . . . . . . . . . . . . . . .  23\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The IP Flow Information Export (IPFIX) Working Group has\
    \ been\n   chartered to select a protocol for the export of flow information\n\
    \   from traffic-observing devices (such as routers or dedicated probes).\n  \
    \ To this end, an evaluation team was formed to evaluate submitted\n   protocols.\
    \  Each protocol was represented by an advocate, who\n   submitted a specific\
    \ evaluation document for the respective protocol\n   against the requirements\
    \ document [1].  The specification of each\n   protocol was itself available as\
    \ one or several Internet-Drafts,\n   sometimes referring normatively to documents\
    \ from outside the IETF.\n   This document contains an evaluation of the submitted\
    \ protocols with\n   respect to the requirements document, and on a more general\
    \ level, to\n   the working group charter.\n   The following IPFIX candidate protocol\
    \ submissions were evaluated:\n   o  CRANE [7], [8]\n   o  Diameter [9], [10]\n\
    \   o  LFAP [11], [12], [13]\n   o  NetFlow v9 [2], [15], [16]\n   o  Streaming\
    \ IPDR [17], [18]\n   This document uses terminology defined in [1] intermixed\
    \ with that\n   from submissions to explain the mapping between the two.\n"
- title: 2.  Protocol Summaries
  contents:
  - "2.  Protocol Summaries\n   In the following, each candidate protocol is described\
    \ briefly,\n   highlighting its specific distinguishing features.\n"
- title: 2.1.  CRANE
  contents:
  - "2.1.  CRANE\n   XACCT's Common Reliable Accounting for Network Element Protocol\n\
    \   Version 1.0 [7][8] is described as a protocol for the transmission of\n  \
    \ accounting information from \"Network Elements\" to \"mediation\" and\n   \"\
    business support systems\".\n"
- title: 2.1.1.  CRANE Protocol Operation
  contents:
  - "2.1.1.  CRANE Protocol Operation\n   The exporting side is the CRANE client,\
    \ the collecting side is the\n   CRANE server.  Note that it is the server that\
    \ is responsible for\n   initiating the connection to the client.  A client can\
    \ have multiple\n   simultaneous connections to different servers for robustness.\
    \  Each\n   server has an associated priority.  A client only exports to the\n\
    \   server with the highest priority that is perceived operational.\n   Clients\
    \ and servers exchange messages over a reliable protocol such\n   as TCP [3] or\
    \ (preferably) the Stream Control Transmission Protocol\n   (SCTP) [5].  The protocol\
    \ uses application-layer acknowledgements as\n   an indication of successful processing\
    \ by the server.  Strong\n   authentication or data confidentiality aren't supported\
    \ by the\n   protocol, but can be supported by lower-layer mechanisms such as\n\
    \   IPsec [20] or TLS [21].\n   The protocol is bidirectional over the entire\
    \ duration of a session.\n   There are 20 different message types.  The protocol\
    \ supports template\n   negotiation, not only at startup but also later on in\
    \ a session, as\n   well as general status inquiries.  There is a separate version\n\
    \   negotiation protocol defined over UDP.\n"
- title: 2.1.2.  CRANE Data Encoding
  contents:
  - "2.1.2.  CRANE Data Encoding\n   Data encoding is based on templates.  Templates\
    \ contain \"keys\"\n   representing items in data records.  Clients (exporters)\
    \ publish\n   templates to servers (collectors).  Servers can then select the\n\
    \   subset of fields in a template that they are interested in.  The\n   client\
    \ will suppress keys that haven't been selected by the server.\n   Data records\
    \ contain references to template and configuration\n   instances.  They also carry\
    \ sequence numbers (DSNs for Data Sequence\n   Numbers).  These sequence numbers\
    \ can be used to de-duplicate data\n   records that have been delivered multiple\
    \ times during\n   failover/fail-back in redundant configurations.  A \"duplicate\"\
    \ bit is\n   set in these situations as a hint for the de-duplication process.\n\
    \   The encoding of (flow information) data records themselves is very\n   compact.\
    \  The client (exporter) can choose to send data in big-endian\n   (network byte\
    \ order) or little-endian format.  There are eighteen\n   fixed-size key types,\
    \ as well as five variable-length string and\n   binary data (BLOB) types.\n"
- title: 2.2.  Diameter
  contents:
  - "2.2.  Diameter\n   Diameter [9][10] is an evolution of the Remote Authentication\
    \ Dial In\n   User Service (RADIUS) protocol [22].  RADIUS is widely used to\n\
    \   outsource authentication and authorization in dialup access\n   environments.\
    \  Diameter is a generalized and extensible protocol\n   intended to support Authentication,\
    \ Authorization and Accounting\n   (AAA) requirements of different applications.\
    \  Dialup and Mobile IPv4\n   are examples of such applications defined in the\
    \ IETF.\n"
- title: 2.2.1.  Diameter Protocol Operation
  contents:
  - "2.2.1.  Diameter Protocol Operation\n   Diameter is a peer-to-peer protocol.\
    \  The base protocol defines\n   fourteen command codes, organized as seven request/response\
    \ command\n   pairs.  Presumably, only a subset of these would be used in a pure\n\
    \   IPFIX application.  Diameter includes capability negotiation and\n   error\
    \ notifications.  Diameter operates over TCP or (preferred) SCTP.\n   There is\
    \ a framework for end-to-end security, the mechanisms for\n   which are defined\
    \ in a separate document.  IPsec or TLS can be used\n   to provide authentication\
    \ or encryption at the underlying layers.\n"
- title: 2.2.2.  Diameter Data Encoding
  contents:
  - "2.2.2.  Diameter Data Encoding\n   Diameter conveys data in the form of attribute/value\
    \ pairs (AVPs).\n   An AVP consists of eight bytes of header plus the space to\
    \ store the\n   data, which depends on the data format.  There are numerous\n\
    \   predefined AVP data formats, including signed and unsigned integer\n   types,\
    \ each in 32 and 64 bit variants, IPv4 and IPv6 addresses, as\n   well as others.\
    \  The advocacy document [10] suggests that the\n   predefined data formats IPFilterRule\
    \ and/or QoSFilterRule could be\n   extended to represent IP Flow Information.\
    \  Such rules are\n   represented as readable UTF-8 strings.  Alternatively, new\
    \ AVPs could\n   be defined to represent flow information.\n"
- title: 2.3.  LFAP
  contents:
  - "2.3.  LFAP\n   LFAP [11][12][13] started out as the \"Lightweight Flow Admission\n\
    \   Protocol\" and was used to outsource shortcut creation decisions on\n   flow-based\
    \ routers, as well as to provide per-flow statistics.  Later\n   versions removed\
    \ the admission function and changed the name to\n   \"Lightweight Flow Accounting\
    \ Protocol\".\n"
- title: 2.3.1.  LFAP Protocol Operation
  contents:
  - "2.3.1.  LFAP Protocol Operation\n   The exporter in LFAP is called the Connection\
    \ Control Entity (CCE),\n   and the collector is the Flow Accounting Server (FAS).\
    \  These\n   entities communicate with each other over a TCP connection.  LFAP\n\
    \   knows thirteen message types, including operations for connection\n   management,\
    \ version negotiation, flow information messages and\n   administrative requests.\
    \  Authentication and encryption can be\n   provided by IPsec or TLS at lower\
    \ layers.  Additionally, the LFAP\n   protocol itself supports four levels of\
    \ security using HMAC-MD5\n   authentication and DES-CBC encryption.  Note that\
    \ DES is now widely\n   regarded as not adequately secure, because its small key\
    \ size makes\n   brute-force attacks viable.\n   A distinguishing feature is that\
    \ LFAP has two different message types\n   for flow information: A Flow Accounting\
    \ Request (FAR) message is sent\n   when a new flow is identified at the CCE (meter/exporter).\n\
    \   Accounting information is sent later in one or multiple Flow Update\n   Notification\
    \ (FUN) messages.  A collector must match each FUN to a\n   Flow ID previously\
    \ sent in a FAR.\n   The LFAP document also defines a set of useful statistics\
    \ about the\n   accounting process.  A separate MIB document [14] is provided\
    \ for\n   management of LFAP entities using SNMP.\n"
- title: 2.3.2.  LFAP Data Encoding
  contents:
  - "2.3.2.  LFAP Data Encoding\n   LFAP encodes data in a Type/Length/Value format\
    \ with four bytes of\n   overhead per data item (two bytes for the type and two\
    \ bytes for the\n   length field).\n"
- title: 2.4.  NetFlow v9
  contents:
  - "2.4.  NetFlow v9\n   NetFlow v9 [2][15] is a generalized version of Cisco's NetFlow\n\
    \   protocol.  Previous versions of NetFlow, in particular version 5,\n   have\
    \ been widely implemented and used for the exporting and\n   collecting of IP\
    \ flow information.\n"
- title: 2.4.1.  NetFlow Protocol Operation
  contents:
  - "2.4.1.  NetFlow Protocol Operation\n   NetFlow uses a very simple protocol, with\
    \ the exporter sending\n   template, options, and data \"FlowSets\" to the collector.\
    \  FlowSets\n   are sequences of data records of similar format.  NetFlow is the\
    \ only\n   one of the candidate protocols that works over UDP [4].  Because of\n\
    \   the simple unidirectional nature of the protocol, it should be\n   relatively\
    \ straightforward to add mappings to other transport\n   protocols such as SCTP\
    \ or TCP.\n   The use of SCTP to transport NetFlow v9 has been suggested in [16].\n\
    \   The suggested mapping describes how control and data can be mapped to\n  \
    \ different streams within a single SCTP connection, and suggests that\n   the\
    \ Partial Reliability extension [23] be used on data streams.  In\n   the proposed\
    \ mapping, the exporter would initiate the connection.\n"
- title: 2.4.2.  NetFlow Data Encoding
  contents:
  - "2.4.2.  NetFlow Data Encoding\n   NetFlow v9 uses a template facility to describe\
    \ exported data.  The\n   data itself is represented in a compact way using network\
    \ byte order.\n"
- title: 2.5.  Streaming IPDR
  contents:
  - "2.5.  Streaming IPDR\n   Streaming IPDR [17][18] is an application of the Network\
    \ Data\n   Management-Usage (NDM-U) for IP Services specification version 3.1\n\
    \   [19].  It has been developed by the Internet Protocol Detail Record\n   Organization\
    \ (IPDR, Inc. or ipdr.org).  The terminology used is\n   similar to CRANE's, talking\
    \ about Service Elements (SEs), mediation\n   systems and Business Support Systems\
    \ (BSS).\n"
- title: 2.5.1.  Streaming IPDR Protocol Operation
  contents:
  - "2.5.1.  Streaming IPDR Protocol Operation\n   Streaming IPDR operates over TCP.\
    \  There is a \"Trivial TCP Delivery\"\n   mode as well as an \"Acknowledged TCP\
    \ Delivery\" or \"Reliable\n   Streaming\" mode.  The latter uses application-layer\
    \ acknowledgements\n   for increased reliability.\n   The protocol is basically\
    \ unidirectional.  The exporter opens a\n   connection towards the collector,\
    \ then sends a header followed by a\n   set of record descriptors.  Then it can\
    \ send \"Usage Event\" records\n   corresponding to these descriptors until the\
    \ connection is\n   terminated.  New record descriptors can be sent at any time.\n\
    \   Messages carry sequence numbers that are used for de-duplication\n   during\
    \ failover.  They are also referenced by application-level\n   acknowledgements\
    \ when Reliable Streaming is used.\n"
- title: 2.5.2.  Streaming IPDR Data Encoding
  contents:
  - "2.5.2.  Streaming IPDR Data Encoding\n   IPDR uses an information modeling technique\
    \ based on the XML-Schema\n   language [24].  Data can be represented in XML or\
    \ in a streamlined\n   encoding based on the External Data Representation [25].\
    \  XDR forms\n   the basis of Sun's Remote Procedure Call and Network File System\n\
    \   protocols, and has proven to be both space- and processing-efficient.\n"
- title: 3.  Broad Classification of Candidate Protocols
  contents:
  - "3.  Broad Classification of Candidate Protocols\n   In order to evaluate the\
    \ candidate protocols against the higher-level\n   requirements laid out in the\
    \ IPFIX Working Group charter, it is\n   useful to group them into broader categories.\n"
- title: 3.1.  Design Goals
  contents:
  - "3.1.  Design Goals\n   One way to look at the candidate protocols is to study\
    \ the goals that\n   have directed their respective design.  Note that the intention\
    \ is\n   not to exclude protocols that have been designed with a different\n \
    \  class of applications in mind, but simply to better understand the\n   different\
    \ tradeoffs that distinguish the protocols.\n"
- title: 3.1.1.  High-Performance Flow Metering (NetFlow, LFAP)
  contents:
  - "3.1.1.  High-Performance Flow Metering (NetFlow, LFAP)\n   Of the candidate protocols,\
    \ Cisco's NetFlow is the purest example of\n   a highly specialized protocol that\
    \ has been designed with the sole\n   objective of conveying accounting data from\
    \ flow-aware routers at\n   high rates.  Starting from a fixed set of accounting\
    \ fields, it has\n   been extended a few times over the years to support additional\
    \ fields\n   and various types of aggregation in the metering/exporting process.\n\
    \   Riverstone's LFAP is similarly focused, except that it originated in\n   a\
    \ protocol to outsource the decision whether to create shortcuts in\n   flow-based\
    \ routers.  This is still manifest in an increased emphasis\n   on reliable operation,\
    \ and in the split reporting of flow information\n   using Flow Accounting Request\
    \ (FAR) and Flow Update Notification\n   (FUN) messages.\n   It has been pointed\
    \ out that split reporting as done by LFAP can\n   reduce memory requirements\
    \ at the exporter.  This concerns a subset\n   of attributes that are neither\
    \ \"key\" attributes which define flows,\n   nor attributes such as packet or\
    \ byte counters that must be updated\n   for each packet anyway.  On the other\
    \ hand, when there are many\n   short-lived flows, the number of flow export messages\
    \ will be\n   significantly higher than with \"unitary\" flow export models, and\
    \ the\n   collector will have to keep state about active flows until they are\n\
    \   terminated.\n"
- title: 3.1.2.  Carrier-Grade Multi-Purpose Accounting (IPDR, CRANE)
  contents:
  - "3.1.2.  Carrier-Grade Multi-Purpose Accounting (IPDR, CRANE)\n   Streaming IPDR\
    \ and CRANE describe themselves as protocols to\n   facilitate the reliable transfer\
    \ of accounting information between\n   Network Elements (or more generally \"\
    Service Elements\" in the case of\n   IPDR) and Mediation Systems or Business\
    \ Support Systems (BSS).  They\n   reflect a view of the accounting problem and\
    \ of network system\n   architectures that originates in traditional \"vertically\
    \ integrated\"\n   telecommunications.\n   Both protocols also emphasize extensibility\
    \ with the goal of\n   applicability to a wide range of accounting tasks.\n  \
    \ IPDR is based on NDM-U, which uses the XML-Schema language for\n   machine-readable\
    \ specification of accounting data structures, while\n   using the efficient XDR\
    \ encoding for the actual data transfer.\n   CRANE uses templates to describe\
    \ exported data.  These templates are\n   negotiated between collector and exporter\
    \ and can change during a\n   session.\n"
- title: 3.1.3.  General-Purpose AAA (Diameter)
  contents:
  - "3.1.3.  General-Purpose AAA (Diameter)\n   Diameter is another example of a broader-purpose\
    \ protocol, in that it\n   covers aspects of authentication and authorization\
    \ as well as\n   accounting.  This explains its strong emphasis on security and\n\
    \   reliability.  The design also takes into account various types of\n   intermediate\
    \ agents.\n"
- title: 3.2.  Data Representation
  contents:
  - "3.2.  Data Representation\n   IPFIX is intended to be deployed, among others,\
    \ in high-speed routers\n   and to be used for exporting detailed flow data at\
    \ high flow rates.\n   Therefore it is useful to look at the tradeoffs between\
    \ the\n   efficiency of data representation and the extensibility of data\n  \
    \ models.  The two main efficiency goals should be (1) to minimize the\n   export\
    \ data rate and (2) to minimize data encoding overhead in the\n   exporter.  The\
    \ overhead of decoding flow data at the collector is\n   deemed less critical,\
    \ and is partly covered by efficiency target (2),\n   since an encoding that is\
    \ easy on the encoder is often also easy on\n   the decoder.\n"
- title: 3.2.1.  Externally Described Encoding (CRANE, IPDR, NetFlow)
  contents:
  - "3.2.1.  Externally Described Encoding (CRANE, IPDR, NetFlow)\n   The protocols\
    \ in this group use an external mechanism to fully\n   describe the format in\
    \ which flow data is encoded.  The mechanisms\n   are \"templates\" in the case\
    \ of CRANE and NetFlow, and a subset of the\n   XML-Schema language, or alternatively\
    \ XDR IDL, for IPDR.\n   A fully external data format description allows for very\
    \ compact\n   encoding, with data components such as 32-bit integers taking up\
    \ only\n   four octets.  The XDR representation used in IPDR additionally\n  \
    \ ensures that larger fields are always aligned on 32-bit boundaries,\n   which\
    \ can reduce processing requirements at both the exporter and the\n   collector,\
    \ at a slight cost of space (thus bandwidth) due to padding.\n   Most protocols\
    \ specify \"network byte order\" or \"big-endian\" format in\n   the export data\
    \ format.  CRANE is the only protocol where the\n   exporter may choose the byte\
    \ ordering.  The principal benefit is that\n   this lowers the processing demand\
    \ on exporters based on little-endian\n   architectures.\n"
- title: 3.2.2.  Partly Self-describing Encoding (Diameter, LFAP)
  contents:
  - "3.2.2.  Partly Self-describing Encoding (Diameter, LFAP)\n   Diameter and LFAP\
    \ represent flow data using Type/Length/Value\n   encodings.  While this makes\
    \ it possible to partly decode flow data\n   without full context information\
    \ - possibly useful for debugging - it\n   does increase the encoding size and\
    \ thus the bandwidth requirements\n   both on the wire and in the exporter and\
    \ collector.\n   LFAP has a \"multi-record\" encoding which claims to provide\
    \ similar\n   wire efficiency as the externally described encodings while still\n\
    \   supporting diagnostic tools.\n"
- title: 3.3.  Protocol Flow
  contents:
  - "3.3.  Protocol Flow\n   Another criterion for classification is the flow of protocol\
    \ messages\n   between exporter and collector.\n"
- title: 3.3.1.  Mainly Unidirectional Protocols (IPDR, NetFlow)
  contents:
  - "3.3.1.  Mainly Unidirectional Protocols (IPDR, NetFlow)\n   In IPDR and NetFlow,\
    \ the data flow is essentially from exporter to\n   collector, with the collector\
    \ only sending acknowledgements.  The\n   protocols send data descriptions (templates)\
    \ on session\n   establishment, and then start sending flow export data based\
    \ on these\n   templates.  \"Meta-information\" about the operational status of\
    \ the\n   metering and exporting processes (for example about the sampling\n \
    \  parameters in force at a given moment) is conveyed using a special\n   type\
    \ of \"Option\" template in NetFlow v9.  IPDR currently doesn't have\n   definitions\
    \ for such \"meta-data\" types, but they could easily be\n   defined outside the\
    \ protocol proper.\n"
- title: 3.3.2.  Bidirectional Protocols (CRANE, LFAP)
  contents:
  - "3.3.2.  Bidirectional Protocols (CRANE, LFAP)\n   CRANE allows for negotiation\
    \ of the templates used for data export at\n   the start of a session, and also\
    \ allows negotiated template updates\n   later on.  CRANE sessions include an\
    \ exporter and potentially several\n   collectors, so these negotiations can involve\
    \ more than two parties.\n   LFAP has an initial phase of version negotiation,\
    \ followed by a phase\n   of \"data negotiation\".  After these startup phases,\
    \ the exporter\n   sends FAR and FUN messages to the collector.  However, either\
    \ party\n   may also send Administrative Request (AR) messages to the other, and\n\
    \   will normally receive Administrative Request Answers (ARA) in\n   response.\
    \  Administrative Requests can be used for status inquiries,\n   including information\
    \ about a specific active flow, or for\n   negotiation of the \"Information Elements\"\
    \ that the collector wants\n   the exporter to export.\n"
- title: 3.3.3.  Unidirectional after Negotiation (Diameter)
  contents:
  - "3.3.3.  Unidirectional after Negotiation (Diameter)\n   Diameter has a general\
    \ capabilities negotiation mechanism.  The use\n   of Diameter for IPFIX hasn't\
    \ been described in sufficient detail to\n   determine how capabilities negotiation\
    \ would be used.  After\n   negotiation, the protocol would operate in essentially\
    \ unidirectional\n   mode, with Accounting-Request (ACR) messages flowing from\
    \ the\n   exporter to the collector, and Accounting-Answer (ACA) messages\n  \
    \ flowing back.\n"
- title: 4.  Item-Level Compliance Evaluation
  contents:
  - "4.  Item-Level Compliance Evaluation\n   The template for protocol advocates\
    \ noted that not all requirements\n   in [1] apply directly to the flow export\
    \ protocol.  In particular,\n   sections 4 (Distinguishing Flows) and 5 (Metering\
    \ Process) mainly\n   specify requirements on the metering mechanism that \"feeds\"\
    \ the\n   exporter.  However, in some cases they require information about the\n\
    \   metering process to be reported to collectors, so the flow export\n   protocol\
    \ must support conveying this information.\n"
- title: 4.1.  Meter Reliability (5.1)
  contents:
  - "4.1.  Meter Reliability (5.1)\n   CRANE, Diameter, IPDR consider requirement\
    \ 5.1 (reliability of the\n   metering process or indication of \"missing reliability\"\
    ) out of scope\n   for the IPFIX protocol, which presumably means that they assume\
    \ the\n   metering process to be reliable.\n   The NetFlow v9 advocacy document\
    \ takes a similar stance when it\n   claims \"Total Compliance.  The metering\
    \ process is reliable.\"\n   (although this has been documented not to be true\
    \ for all current\n   Cisco implementations of NetFlow v5).\n   LFAP is the only\
    \ protocol that explicitly addresses the possibility\n   that data might be lost\
    \ in the metering process, and provides useful\n   statistics for the collectors\
    \ to estimate, not just the amount of\n   flow data that was lost, but also the\
    \ amount of data that was not\n   unaccounted for.\n   Note that in the general\
    \ case, it can be considered unrealistic to\n   assume total reliability of a\
    \ flow-based metering process in all\n   situations, unless sampling or coarse\
    \ flow definitions are used.\n   With the fine-grained flow classification mechanisms\
    \ mandated by\n   IPFIX, it is easy to imagine traffic where each - possibly very\
    \ small\n   - packet would create a new flow.  This kind of traffic is in fact\n\
    \   encountered in practice during aggressive port scans, and will\n   eventually\
    \ lead to table overflows or exceeding of memory bandwidth\n   at the meter.\n\
    \   While some of these situations can be handled by dropping data later\n   on\
    \ in the exporter, data transfer, or collector, or by transitioning\n   the meter\
    \ to sampling mode (or increasing the sampling interval), it\n   will sometimes\
    \ be considered the lesser evil to simply report on the\n   data that couldn't\
    \ be accounted for.  Currently LFAP is the only\n   protocol that supports this.\n"
- title: 4.2.  Sampling (5.2)
  contents:
  - "4.2.  Sampling (5.2)\n   CRANE and IPDR don't mention the possibility of sampling.\
    \  This is\n   natural because they are targeted towards telco-grade accounting,\n\
    \   where sampling would be considered inadmissible.  Since support for\n   sampling\
    \ is a \"MAY\" requirement, its lack could be tolerated, but\n   severely restricts\
    \ the applicability of these protocols in places of\n   high aggregation, where\
    \ absolute precision is not necessary.  This\n   includes applications such as\
    \ traffic profiling, traffic engineering,\n   and large-scale attack/intrusion\
    \ detection, but also usage-based\n   accounting applications where charging based\
    \ on sampling is agreed\n   upon.\n   The Diameter advocate acknowledges the existence\
    \ of sampling and\n   suggests to define new (grouped) AVPs to carry information\
    \ about the\n   sampling parameters in use.\n   LFAP does not currently support\
    \ sampling, although its advocate\n   contends that adding support for this would\
    \ be relatively\n   straightforward, without going into too much detail.\n   NetFlow\
    \ v9 does support sampling (and many implementations and\n   deployments of sampled\
    \ NetFlow exist for previous NetFlow versions).\n   Option Data is supposed to\
    \ convey sampling configuration, although no\n   sampling-related field types\
    \ have yet been defined in the document.\n"
- title: 4.3.  Overload Behavior (5.3)
  contents:
  - "4.3.  Overload Behavior (5.3)\n   The requirements document suggests that meters\
    \ adapt to overload\n   situations, for example by changing to sampling (or reducing\
    \ the\n   sampling rate if sampling is already in effect), by changing the flow\n\
    \   definition to coarser flow categories (thinning), by stopping to\n   meter,\
    \ or by reducing packet processing.\n   In these situations, the requirements\
    \ document mandates that flow\n   information from before the modification of\
    \ metering behavior can be\n   cleanly distinguished from flow information from\
    \ after the\n   modification.  For the suggested mitigation methods of sampling\
    \ or\n   thinning, this essentially means that all existing flows have to be\n\
    \   expired, and an entirely new set of flows must be started.  This is\n   undesirable\
    \ because it causes a peak of resource usage in an already\n   overloaded situation.\n\
    \   LFAP and NetFlow claim to handle this requirement, both by supporting\n  \
    \ only the simple overload mitigation methods that don't require the\n   entire\
    \ set of existing flows to be expired.  The NetFlow advocate\n   claims that the\
    \ reporting requirement could be easily met by expiring\n   existing flows with\
    \ the old template, while sending a new template\n   for new flows.  While it\
    \ is true that NetFlow handles this\n   requirement in a very graceful manner,\
    \ the general performance issue\n   remains.\n   CRANE, Diameter, and IPDR consider\
    \ the requirement out of scope for\n   the protocol, although Diameter summarily\
    \ acknowledges the possible\n   need for new AVP definitions related to mitigation\
    \ methods.\n"
- title: 4.4.  Timestamps (5.4)
  contents:
  - "4.4.  Timestamps (5.4)\n   All protocols support reporting of timestamps with\
    \ the required (one\n   centisecond) or better precision.\n"
- title: 4.5.  Time Synchronization (5.5)
  contents:
  - "4.5.  Time Synchronization (5.5)\n   While all other protocols have timestamp\
    \ types that are relative to a\n   well-known reference time, timestamps in NetFlow\
    \ are reported\n   relative to the sysUpTime of the exporting device.  For applications\n\
    \   that require the absolute start/end times of flows, this means that\n   exporter\
    \ sysUpTime has to be matched with absolute time.  Although\n   every NetFlow\
    \ export packet header contains a \"UNIX Secs\" field, it\n   cannot be used for\
    \ UTC synchronization without loss of precision,\n   because this field only has\
    \ 1-second resolution.\n"
- title: 4.6.  Flow Expiration (5.6)
  contents:
  - "4.6.  Flow Expiration (5.6)\n   As currently specified, this requirement concerns\
    \ the metering\n   process only and has no bearing on the export protocol.\n \
    \  If it is desired to export the reason for flow expiration (e.g.,\n   inactivity\
    \ timeout, active flow timeout, expiration to reclaim\n   resources, or observation\
    \ of a flow termination indication such as a\n   TCP FIN segment), then none of\
    \ the protocols currently supports this,\n   although each could be extended to\
    \ do so.\n"
- title: 4.7.  Ignore Port Copy (5.9)
  contents:
  - "4.7.  Ignore Port Copy (5.9)\n   This requirement only concerns the metering\
    \ process and has no\n   bearing on the export protocol.\n"
- title: 4.8.  Information Model (6.1)
  contents:
  - "4.8.  Information Model (6.1)\n   All candidate protocols have information models\
    \ that can represent\n   all required and all optional attributes.  The Diameter\
    \ contribution\n   lacks some detail on how exactly the IPFIX-specific attributes\
    \ should\n   be mapped.\n"
- title: 4.9.  Data Model (6.2)
  contents:
  - '4.9.  Data Model (6.2)

    '
- title: 4.9.1.  Data Model Extensibility
  contents:
  - "4.9.1.  Data Model Extensibility\n   Each candidate protocol defines a data model\
    \ that allows for some\n   degree of extensibility.\n   CRANE uses Keys to specify\
    \ fields in templates.  A key \"specification\n   MUST consist of the description\
    \ and the data type of the accounting\n   item.\"  Apparently extensibility is\
    \ intended, but it is not clear\n   whether adding a new Key really only involves\
    \ writing a textual\n   description and deciding upon a base type.  Every Key\
    \ also has a 32-\n   bit Key ID, but from the current specification they don't\
    \ seem to\n   carry global semantics.\n   Diameter's Attribute/Value Pairs (AVP)\
    \ have a 32-bit identifier (AVP\n   Code) administered by IANA.  In addition,\
    \ there is an optional 32-bit\n   Vendor-ID that can contain an SMI Enterprise\
    \ Number for vendor-\n   defined attributes.  If the Vendor-ID (and a corresponding\
    \ flag in\n   the attribute) is set, the AVP Code becomes local to that vendor.\n\
    \   IPDR uses a subset of the XML-Schema language for extensibility, thus\n  \
    \ allowing for vendor- and application-specific extensions of the data\n   model.\n\
    \   In LFAP, flow attributes are defined as Information Elements.  There\n   is\
    \ a 16-bit IE type code (which is carried in the export protocol for\n   every\
    \ IE).  One type code is reserved for vendor-specific extensions.\n   Arbitrary\
    \ sub-types of the vendor-specific IE can be defined using\n   ASN.1 Object IDs\
    \ (OIDs).\n   In NetFlow v9 as reviewed, data items are identified by a sixteen-bit\n\
    \   field type.  26 field types are defined in the document.  The\n   document\
    \ suggests to look check a Web page at Cisco Systems' site for\n   the current\
    \ list of field types.  It would be preferable if the\n   administration of the\
    \ field type space would be delegated to IANA.\n"
- title: 4.9.2.  Flexible Flow Record Definition
  contents:
  - "4.9.2.  Flexible Flow Record Definition\n   All protocols allow for flexible\
    \ flow record definitions.  CRANE and\n   LFAP make the selection/negotiation\
    \ of the attributes to be included\n   in flow records a part of the protocol,\
    \ the other protocols leave\n   this to outside configuration mechanisms.\n"
- title: 4.10.  Data Transfer (6.3)
  contents:
  - '4.10.  Data Transfer (6.3)

    '
- title: 4.10.1.  Congestion Awareness (6.3.1)
  contents:
  - "4.10.1.  Congestion Awareness (6.3.1)\n   All protocols except for NetFlow v9\
    \ operate over a single TCP or SCTP\n   transport connection, and inherit the\
    \ congestion-friendliness of\n   these protocols.\n   NetFlow v9 was initially\
    \ defined to operate over UDP, but specified\n   in a transport-independent manner.\
    \  Recently, a document [16] has\n   been issued that describes how NetFlow v9\
    \ can be run over SCTP with\n   the proposed Partial Reliability extension.  This\
    \ transport mapping\n   would fill the congestion awareness requirement.\n"
- title: 4.10.2.  Reliability (6.3.2)
  contents:
  - "4.10.2.  Reliability (6.3.2)\n   The requirements in the area of reliability\
    \ are specified as follows:\n   If flow records can be lost during transfer, this\
    \ must be indicated\n   to the collector in a way that permits the number of lost\
    \ records to\n   be gauged; and the protocol must be open to reliability extensions\n\
    \   including retransmission of lost flow records, detection of\n   exporter/collector\
    \ disconnection and fail-over, and acknowledgement\n   of flow records by the\
    \ collecting process (application-level\n   acknowledgements).\n   Here are a\
    \ few observations regarding the candidate protocols'\n   approaches to reliability.\
    \  Note that the requirement for multiple\n   collectors (8.3) also touches on\
    \ the issue of reliability.\n   CRANE, Diameter, and IPDR, as protocols that strive\
    \ to be carrier-\n   grade accounting protocols, understandably exhibit a strong\
    \ emphasis\n   on near-total reliability of the flow export process.  All three\n\
    \   protocols use application-level acknowledgements (in case of IPDR,\n   optionally)\
    \ to include the entire collection process in the feedback\n   loop.  Indications\
    \ of \"lack of reliability\" (lost flow data) are\n   somewhat unnatural to these\
    \ protocols, because they take every effort\n   to never lose anything.  These\
    \ protocols seem suitable in situations\n   where one would rather drop a packet\
    \ than forward it unaccounted for.\n   LFAP has application-level acknowledgements,\
    \ and it also reports\n   detailed statistics about lost flows and the amount\
    \ of data that\n   couldn't be accounted for.  It represents a middle ground in\
    \ that it\n   acknowledges that accounting reliability will sometimes be sacrificed\n\
    \   for the benefit of other tasks, such as switching packets, and\n   provides\
    \ the tools to gracefully deal with such situations.\n   NetFlow v9 is the only\
    \ protocol for which the use of a \"reliable\"\n   transport protocol is optional,\
    \ and the only protocol that doesn't\n   support application-level acknowledgements.\
    \  In all fairness, it\n   should be noted that it is a very simple and efficient\
    \ protocol, so\n   in an actual deployment it might exhibit a higher level of\n\
    \   reliability than some of the other protocols given the same amount of\n  \
    \ resources.\n"
- title: 4.10.3.  Security (6.3.3)
  contents:
  - '4.10.3.  Security (6.3.3)

    '
- title: 4.10.3.1.  IPsec and TLS
  contents:
  - "4.10.3.1.  IPsec and TLS\n   All protocols can use, and their descriptions in\
    \ fact recommend them\n   to use, lower-layer security mechanisms such as IPsec\
    \ and, with the\n   exception of NetFlow v9 over UDP, TLS.  It can be argued that\
    \ in all\n   envisioned usage scenarios for IPFIX, both IPsec and TLS provide\n\
    \   sufficient protection against the main identified threats of flow\n   data\
    \ disclosure and forgery.\n   The Diameter document is the only protocol definition\
    \ that goes into\n   sufficient level of detail with respect to the application\
    \ of these\n   mechanisms, in particular the negotiation of certificates and ciphers\n\
    \   in TLS, and the use of IKE [6] for IPsec.  Diameter also mandates\n   that\
    \ either IPsec or TLS be used.\n"
- title: 4.10.3.2.  Application-level Security
  contents:
  - "4.10.3.2.  Application-level Security\n   Diameter suggests an additional end-to-end\
    \ security framework for\n   dealing with untrusted third-party agents.  I am\
    \ not entirely\n   convinced that this additional level of security justifies\
    \ the\n   additional complexity in the context of IPFIX.\n   LFAP [11] is the\
    \ only other protocol that includes some higher-level\n   security mechanisms,\
    \ providing four levels of security including no\n   security, authenticated peers,\
    \ flow data authentication, and flow\n   data encryption using HMAC-MD5-96 and\
    \ DES-CBC.\n   As far as the author can judge (not being a security expert), LFAP's\n\
    \   built-in support for authentication and encryption doesn't provide\n   significant\
    \ additional security compared with the use of TLS or\n   IPsec.  It is potentially\
    \ useful in situations where TLS or IPsec are\n   unavailable for some reason,\
    \ although in the context of IPFIX\n   scenarios, it should be possible to assume\
    \ support for these lower-\n   layer mechanisms if the participating devices are\
    \ capable of the\n   necessary cryptographic methods at all.\n"
- title: 4.10.4.  Push and Pull Mode Reporting (6.4)
  contents:
  - "4.10.4.  Push and Pull Mode Reporting (6.4)\n   All protocols support the mandatory\
    \ \"push\" mode.\n   The optional \"pull\" mode could be supported relatively\
    \ easily in\n   Diameter, and is foreseen in NDM-U, the basis of the Streaming\
    \ IPDR\n   proposal.  CRANE, LFAP and NetFlow don't have a \"pull\" mode.  For\n\
    \   CRANE and LFAP, adding one would not violate the spirit of the\n   protocols\
    \ because they are already two-way, and in fact LFAP already\n   foresees inquiries\
    \ about specific active flows using Administrative\n   Request (AR) messages with\
    \ a RETURN_INDICATED_FLOWS Command Code IE.\n"
- title: 4.10.5.  Regular Reporting Interval (6.5)
  contents:
  - "4.10.5.  Regular Reporting Interval (6.5)\n   As stated, this requirement concerns\
    \ the metering process only and\n   has no bearing on the export protocol.\n"
- title: 4.10.6.  Notification on Specific Events (6.6)
  contents:
  - "4.10.6.  Notification on Specific Events (6.6)\n   The specific events listed\
    \ in the requirements documents as examples\n   for \"specific events\" are \"\
    the arrival of the first packet of a new\n   flow and the termination of a flow\
    \ after flow timeout\".  For the\n   former, only LFAP explicitly generates messages\
    \ upon creation of a\n   new flow.  NetFlow always exported flow information on\
    \ expiration of\n   flows, either due to timeout or due to an indication of flow\n\
    \   termination.  The other protocols are unspecific about when flow\n   information\
    \ is exported.\n   On \"specific events\" in general, all protocols have some\
    \ mechanism\n   that could be used for notification of asynchronous events.  An\n\
    \   example for such an event would be that the sampling rate of the\n   meter\
    \ was changed in response to a change in the load on the\n   exporting process.\n\
    \   CRANE has Status Request/Status Response messages, but as defined,\n   Status\
    \ Requests can only be issued by the server (collector), so they\n   cannot be\
    \ used by the server to signal asynchronous events.  As in\n   IPDR, this could\
    \ be circumvented by defining templates for meta-\n   information.\n   Diameter\
    \ could use special Accounting-Request messages for event\n   notification.\n\
    \   IPDR would presumably define pseudo-\"Usage Events\" using an XML\n   Schema\
    \ so that events can be reported along with usage data.\n   LFAP has Administrative\
    \ Requests (AR) that can be initiated from\n   either side.  The currently defined\
    \ ARs are all information inquiries\n   or reconfiguration requests, but new ARs\
    \ could be defined to provide\n   unsolicited information about specific asynchronous\
    \ events.  The LFAP\n   MIB also defines some traps/notifications.  SNMP notifications\
    \ are\n   useful to signal events to a network management system, but they are\n\
    \   less attractive as a mechanism to signal events that should be\n   somehow\
    \ handled by a collector.\n   In NetFlow v9, Option Data FlowSets are defined\
    \ to convey information\n   about the metering and export processes.  The current\
    \ document\n   specifies that Option Data should be exported periodically, although\n\
    \   this requirement will be relaxed for asynchronous events.  It should\n   be\
    \ noted that periodical export of option flowsets (and also of\n   templates)\
    \ may have been considered necessary because NetFlow can run\n   over an unreliable\
    \ transport; it seems less natural when a reliable\n   transport such as TCP is\
    \ used.\n"
- title: 4.10.7.  Anonymization (6.7)
  contents:
  - "4.10.7.  Anonymization (6.7)\n   None of the protocols include explicit support\
    \ for anonymization.\n   All protocols could be extended to convey when and how\
    \ anonymization\n   is being performed by an exporter, using mechanisms similar\
    \ to those\n   that would be used to report on sampling.\n"
- title: 4.10.8.  Several Collecting Processes (8.3)
  contents:
  - "4.10.8.  Several Collecting Processes (8.3)\n   CRANE, Diameter, and IPDR all\
    \ support multiple collectors in a backup\n   configuration.  The failover case\
    \ is analyzed in some detail, with\n   support for data buffering and de-duplication\
    \ in failover situations.\n   NetFlow takes a more simple-minded approach in that\
    \ it allows\n   multiple (currently: two) collectors to be configured in an exporter.\n\
    \   Both collectors will generally receive all data and could use\n   sequence\
    \ numbers and inter-collector communication to de-duplicate\n   them.  This is\
    \ a simple way to improve availability but may also be\n   considered to be wasteful,\
    \ both in terms of bandwidth and in terms of\n   other exporter resources.  With\
    \ the current UDP mapping it is easy\n   enough to send multiple copies of datagrams\
    \ to different collectors,\n   but when SCTP or TCP is used, sending all data\
    \ over multiple\n   connections will exacerbate performance issues.\n   Failover\
    \ in LFAP must take into account that flow information is\n   split into FARs\
    \ and FUNs.  When a (primary) FAS A fails, a secondary\n   FAS B will receive\
    \ FUNs for flows whose FARs had only been sent to A.\n   If such FUNs are to be\
    \ handled correctly in the failover case, then\n   either the set of active flows\
    \ must be kept in sync between the\n   primary and backup FASs, or the exporting\
    \ CCE must have a way to\n   generate new FARs on failover.\n"
- title: 5.  Conclusions
  contents:
  - "5.  Conclusions\n   Every candidate protocol has its strengths and weaknesses.\
    \  If the\n   primary goal of the IPFIX standardization effort were to define\
    \ a\n   carrier-grade accounting protocol that can also be used to carry IP\n\
    \   flow information, then one of CRANE, Diameter and Streaming IPDR\n   would\
    \ probably be the candidate of choice.\n   But since the goal is to standardize\
    \ existing practice in the area of\n   IP Flow Information Export, it makes sense\
    \ to analyze why previous\n   versions of NetFlow have been so widely implemented\
    \ and used.  The\n   strong position of Cisco in the router market certainly played\
    \ a\n   major role, but we should not underestimate the value of having a\n  \
    \ simple and streamlined protocol that \"does one thing and does it\n   well\"\
    .  It has been extremely easy to write NetFlow collecting\n   processes, as all\
    \ the protocol demands from a collector is to sit\n   there and receive data.\
    \  This model is no longer adequate when one\n   wants to support increased levels\
    \ of reliability or dynamically\n   changing semantics for data export.  But NetFlow\
    \ remains a simple\n   protocol, mainly by leaving out issues of configuration/negotiation.\n\
    \   So far, the biggest issue with NetFlow is that it could not resolve\n   itself\
    \ to mandate a reliable (and congestion-friendly) transport.\n   This could easily\
    \ be fixed, and bring with it some additional\n   possibilities for simplifications.\
    \  For example it would no longer be\n   necessary to periodically retransmit\
    \ Template FlowSets, and Option\n   Data FlowSets could become a more versatile\
    \ way of reporting meta-\n   information about the metering and exporting processes\
    \ either\n   synchronously or asynchronously.  Application-level acknowledgements\n\
    \   - possibly as an option - would be a low-impact addition to improve\n   overall\
    \ reliability.\n   LFAP is also relatively focused on flow information export,\
    \ but\n   carries around too much baggage from its youth as the Lightweight\n\
    \   Flow Admission Protocol.  The bidirectional nature and large number\n   of\
    \ message types in the protocol are one symptom of this, the\n   separation of\
    \ flow information into FARs and FUNs - which must be\n   matched at the collector\
    \ - are another.  Data encoding is less\n   space-efficient than that of CRANE,\
    \ NetFlow or IPDR, and will present\n   a performance issue at high flow rates.\n\
    \   LFAP's indications of unaccounted data and its MIB are excellent\n   features\
    \ that would be very useful in many operational situations.\n"
- title: 5.1.  Recommendation
  contents:
  - "5.1.  Recommendation\n   It is the opinion of the evaluation team that the goals\
    \ of the IPFIX\n   WG charter would best be served by starting with NetFlow v9,\
    \ working\n   on lacking mechanisms in the areas of transport, security,\n   reliability,\
    \ and redundant configurations, and doing so very\n   carefully in order to retain\
    \ as much simplicity as possible and to\n   avoid overloading the protocol.  By\
    \ starting from the simplest\n   protocol that meets a large percentage of the\
    \ specific requirements,\n   we can hope to arrive at a protocol that meets all\
    \ requirements and\n   still allows widespread and cost-effective implementation.\n\
    \   As evaluated, NetFlow v9 doesn't specify any security mechanisms.\n   The\
    \ IPFIX protocol specification must specify how the security\n   requirements\
    \ in section 6.3.3 of [1] can be assured.  The IPFIX\n   specification must be\
    \ specific about the choice of security-\n   supporting protocol(s) and about\
    \ all relevant issues such as security\n   negotiation, protocol modes permitted,\
    \ and key management.\n   The other important requirement that isn't fulfilled\
    \ by NetFlow v9\n   today is support for a congestion-aware protocol (see section\
    \ 6.3.1\n   of [1]).  So a mapping to a known congestion-friendly protocol such\n\
    \   as TCP, or, as suggested in [16], (PR-)SCTP, is considered as another\n  \
    \ necessary step in the preparation of the IPFIX specification.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   The security mechanisms of the candidate protocols\
    \ were discussed in\n   Section 4.10.3.\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   Many of the issues have been discussed with the other\
    \ members of the\n   IPFIX evaluation team: Juergen Quittek, Mark Fullmer, Ram\
    \ Gopal, and\n   Reinaldo Penno.  Many participants on the ipfix mailing list\
    \ provided\n   valuable feedback, including Vamsidhar Valluri, Paul Calato, Tal\n\
    \   Givoly, Jeff Meyer, Robert Lowe, Benoit Claise, and Carter Bullard.\n   Bert\
    \ Wijnen, Steve Bellovin, Russ Housley, and Allison Mankin\n   provided valuable\
    \ feedback during AD and IESG review.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [1]   Quittek, J., Zseby, T., Claise, B., and\
    \ S. Zander,\n         \"Requirements for IP Flow Information Export\", RFC 3917,\n\
    \         October 2004.\n   [2]   Claise, B., Ed., \"Cisco Systems NetFlow Services\
    \ Export Version\n         9\", RFC 3954, October 2004.\n   [3]   Postel, J.,\
    \ \"Transmission Control Protocol\", STD 7, RFC 793,\n         September 1981.\n\
    \   [4]   Postel, J., \"User Datagram Protocol\", STD 6, RFC 768, August\n   \
    \      1980.\n   [5]   Stewart, R., Xie, Q., Morneault, K., Sharp, C., Schwarzbauer,\n\
    \         H., Taylor, T., Rytina, I., Kalla, M., Zhang, L., and V.\n         Paxson,\
    \ \"Stream Control Transmission Protocol\", RFC 2960,\n         October 2000.\n\
    \   [6]   Harkins, D. and D. Carrel, \"The Internet Key Exchange (IKE)\",\n  \
    \       RFC 2409, November 1998.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [7]   Zhang, K. and E. Elkin, \"XACCT's Common\
    \ Reliable Accounting for\n         Network Element (CRANE) Protocol Specification\
    \ Version 1.0\",\n         RFC 3423, November 2002.\n   [8]   Zhang, K., \"Evaluation\
    \ of the CRANE Protocol Against IPFIX\n         Requirements\", Work in Progress,\
    \ September 2002.\n   [9]   Calhoun, P., Loughney, J., Guttman, E., Zorn, G.,\
    \ and J. Arkko,\n         \"Diameter Base Protocol\", RFC 3588, September 2003.\n\
    \   [10]  Zander, S., \"Evaluation of Diameter Protocol against IPFIX\n      \
    \   Requirements\", Work in Progress, September 2002.\n   [11]  Calato, P. and\
    \ M. MacFaden, \"Light-weight Flow Accounting\n         Protocol Specification\
    \ Version 5.0\", July 2002.\n   [12]  Calato, P. and M. MacFaden, \"Light-weight\
    \ Flow Accounting\n         Protocol Data Definition Specification Version 5.0\"\
    , July 2002.\n   [13]  Calato, P., \"Evaluation Of Protocol LFAP Against IPFIX\n\
    \         Requirements\", Work in Progress, September 2002.\n   [14]  Calato,\
    \ P. and M. MacFaden, \"Light-weight Flow Accounting\n         Protocol MIB\"\
    , Work in Progress, September 2002.\n   [15]  Claise, B., \"Evaluation Of NetFlow\
    \ Version 9 Against IPFIX\n         Requirements\", Work in Progress, September\
    \ 2002.\n   [16]  Djernaes, M., \"Cisco Systems NetFlow Services Export Version\
    \ 9\n         Transport\", Work in Progress, February 2003.\n   [17]  Meyer, J.,\
    \ \"Reliable Streaming Internet Protocol Detail\n         Records\", Work in Progress,\
    \ August 2002.\n   [18]  Meyer, J., \"Evaluation Of Streaming IPDR Against IPFIX\n\
    \         Requirements\", Work in Progress, September 2002.\n   [19]  Internet\
    \ Protocol Detail Record Organization, \"Network Data\n         Management - Usage\
    \ (NDM-U) For IP-Based Services Version 3.1\",\n         April 2002.  URL: http://www.ipdr.org/documents/NDM-U_3.1.pdf\n\
    \   [20]  Kent, S. and R. Atkinson, \"Security Architecture for the\n        \
    \ Internet Protocol\", RFC 2401, November 1998.\n   [21]  Dierks, T. and C. Allen,\
    \ \"The TLS Protocol Version 1.0\", RFC\n         2246, January 1999.\n   [22]\
    \  Rigney, C., Willens, S., Rubens, A. and W. Simpson, \"Remote\n         Authentication\
    \ Dial In User Service (RADIUS)\", RFC 2865, June\n         2000.\n   [23]  Stewart,\
    \ R., Ramalho, M., Xie, Q., Tuexen, M., and P. Conrad,\n         \"Stream Control\
    \ Transmission Protocol (SCTP) Partial\n         Reliability Extension\", RFC\
    \ 3758, May 2004.\n   [24]  DeRose, S., Maler, E. and D. Orchard, \"XML 1.0 Recommendation\"\
    ,\n         W3C FirstEdition REC-xml-19980210, February 1998.\n   [25]  Srinivasan,\
    \ R., \"XDR: External Data Representation Standard\",\n         RFC 1832, August\
    \ 1995.\n   [26]  <http://www.nmops.org/>\n   [27]  <http://www.ipdr.org/>\n"
- title: Appendix A.  A Note on References to the Candidate Protocol Documents
  contents:
  - "Appendix A.  A Note on References to the Candidate Protocol Documents\n   At\
    \ the time of the evaluation, the candidate protocol definitions, as\n   well\
    \ as their respective accompanying advocacy documents, were\n   available as Internet-Drafts.\
    \  As of the time of publication of this\n   document, some of the protocols have\
    \ been published as RFCs, others\n   are still being revised as Internet-Drafts,\
    \ and some will have\n   expired.  This document attempts to extract the relevant\
    \ information\n   from the individual protocol definitions and, in the context\
    \ of the\n   IPFIX requirements, provide a meaningful comparison between them.\n\
    \   Since this evaluation proposes to use NetFlow v9 as the basis for the\n  \
    \ IPFIX protocol, only the reference to this protocol is considered\n   \"normative\"\
    , although strictly spoken, the present document doesn't\n   define any protocol,\
    \ and the selected protocol will have to be\n   further refined to become the\
    \ IPFIX protocol.\n   In the interest of stable references, the bibliography points\
    \ to RFCs\n   where those have become available (for DIAMETER and CRANE).  Other\n\
    \   protocols are still available only as Internet-Drafts and may\n   eventually\
    \ expire.  The LFAP drafts - which already have expired -\n   are still available\
    \ from the www.nmops.org Web site [26] (as well as\n   other places).  The IPDR\
    \ documents are available on the IPDR Web site\n   [27].\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Simon Leinen\n   SWITCH\n   Limmatquai 138\n   P.O. Box\n\
    \   CH-8021 Zurich\n   Switzerland\n   Phone: +41 1 268 1536\n   EMail: simon@switch.ch\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2004).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and at www.rfc-editor.org, and except as set\n   forth therein, the\
    \ authors retain all their rights.\n   This document and the information contained\
    \ herein are provided on an\n   \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION\
    \ HE/SHE REPRESENTS\n   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND\
    \ THE INTERNET\n   ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR\
    \ IMPLIED,\n   INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE\n\
    \   INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES\
    \ OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ ISOC's procedures with respect to rights in ISOC Documents can\n   be found\
    \ in BCP 78 and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat\
    \ and any\n   assurances of licenses to be made available, or the result of an\n\
    \   attempt made to obtain a general license or permission for the use of\n  \
    \ such proprietary rights by implementers or users of this\n   specification can\
    \ be obtained from the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n\
    \   The IETF invites any interested party to bring to its attention any\n   copyrights,\
    \ patents or patent applications, or other proprietary\n   rights that may cover\
    \ technology that may be required to implement\n   this standard.  Please address\
    \ the information to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
