- title: __initial_text__
  contents:
  - '              MPLS Transport Profile (MPLS-TP) Identifiers

    '
- title: Abstract
  contents:
  - "Abstract\n   This document specifies an initial set of identifiers to be used\
    \ in\n   the Transport Profile of Multiprotocol Label Switching (MPLS-TP).\n \
    \  The MPLS-TP requirements (RFC 5654) require that the elements and\n   objects\
    \ in an MPLS-TP environment are able to be configured and\n   managed without\
    \ a control plane.  In such an environment, many\n   conventions for defining\
    \ identifiers are possible.  This document\n   defines identifiers for MPLS-TP\
    \ management and Operations,\n   Administration, and Maintenance (OAM) functions\
    \ compatible with IP/\n   MPLS conventions.\n   This document is a product of\
    \ a joint Internet Engineering Task Force\n   (IETF) / International Telecommunication\
    \ Union Telecommunication\n   Standardization Sector (ITU-T) effort to include\
    \ an MPLS Transport\n   Profile within the IETF MPLS and Pseudowire Emulation\
    \ Edge-to-Edge\n   (PWE3) architectures to support the capabilities and functionalities\n\
    \   of a packet transport network as defined by the ITU-T.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6370.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Terminology ................................................3\n  \
    \    1.2. Requirements Language ......................................4\n    \
    \  1.3. Notational Conventions .....................................4\n   2. Named\
    \ Entities ..................................................5\n   3. Uniquely\
    \ Identifying an Operator - the Global_ID ................5\n   4. Node and Interface\
    \ Identifiers ..................................6\n   5. MPLS-TP Tunnel and LSP\
    \ Identifiers ..............................7\n      5.1. MPLS-TP Point-to-Point\
    \ Tunnel Identifiers ..................8\n      5.2. MPLS-TP LSP Identifiers ....................................9\n\
    \           5.2.1. MPLS-TP Co-Routed Bidirectional LSP Identifiers .....9\n  \
    \         5.2.2. MPLS-TP Associated Bidirectional LSP Identifiers ....9\n    \
    \  5.3. Mapping to RSVP Signaling .................................10\n   6. Pseudowire\
    \ Path Identifiers ....................................11\n   7. Maintenance Identifiers\
    \ ........................................13\n      7.1. Maintenance Entity Group\
    \ Identifiers ......................13\n           7.1.1. MPLS-TP Section MEG_IDs\
    \ ............................13\n           7.1.2. MPLS-TP LSP MEG_IDs ................................13\n\
    \           7.1.3. Pseudowire MEG_IDs .................................14\n  \
    \    7.2. Maintenance Entity Group End Point Identifiers ............14\n    \
    \       7.2.1. MPLS-TP Section MEP_IDs ............................14\n      \
    \     7.2.2. MPLS-TP LSP_MEP_ID .................................15\n        \
    \   7.2.3. MEP_IDs for Pseudowires ............................15\n      7.3.\
    \ Maintenance Entity Group Intermediate Point Identifiers ...15\n   8. Security\
    \ Considerations ........................................15\n   9. References\
    \ .....................................................16\n      9.1. Normative\
    \ References ......................................16\n      9.2. Informative\
    \ References ....................................17\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document specifies an initial set of identifiers to\
    \ be used in\n   the Transport Profile of Multiprotocol Label Switching (MPLS-TP).\n\
    \   The MPLS-TP requirements (RFC 5654 [7]) require that the elements and\n  \
    \ objects in an MPLS-TP environment are able to be configured and\n   managed\
    \ without a control plane.  In such an environment, many\n   conventions for defining\
    \ identifiers are possible.  This document\n   defines identifiers for MPLS-TP\
    \ management and OAM functions\n   compatible with IP/MPLS conventions.  That\
    \ is, the identifiers have\n   been chosen to be compatible with existing IP,\
    \ MPLS, GMPLS, and\n   Pseudowire definitions.\n   This document is a product\
    \ of a joint Internet Engineering Task Force\n   (IETF) / International Telecommunication\
    \ Union Telecommunication\n   Standardization Sector (ITU-T) effort to include\
    \ an MPLS Transport\n   Profile within the IETF MPLS and Pseudowire Emulation\
    \ Edge-to-Edge\n   (PWE3) architectures to support the capabilities and functionalities\n\
    \   of a packet transport network as defined by the ITU-T.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   AGI: Attachment Group Identifier\n   AII: Attachment Interface\
    \ Identifier\n   AS: Autonomous System\n   ASN: Autonomous System Number\n   EGP:\
    \ Exterior Gateway Protocol\n   FEC: Forwarding Equivalence Class\n   GMPLS: Generalized\
    \ Multiprotocol Label Switching\n   IGP: Interior Gateway Protocol\n   LSP: Label\
    \ Switched Path\n   LSR: Label Switching Router\n   MEG: Maintenance Entity Group\n\
    \   MEP: Maintenance Entity Group End Point\n   MIP: Maintenance Entity Group\
    \ Intermediate Point\n   MPLS: Multiprotocol Label Switching\n   NNI: Network-to-Network\
    \ Interface\n   OAM: Operations, Administration, and Maintenance\n   PW: Pseudowire\n\
    \   RSVP: Resource Reservation Protocol\n   RSVP-TE: RSVP Traffic Engineering\n\
    \   SAII: Source AII\n   SPME: Sub-Path Maintenance Entity\n   T-PE: Terminating\
    \ Provider Edge\n   TAII: Target AII\n"
- title: 1.2.  Requirements Language
  contents:
  - "1.2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [1].\n"
- title: 1.3.  Notational Conventions
  contents:
  - "1.3.  Notational Conventions\n   All multiple-word atomic identifiers use underscores\
    \ (_) between the\n   words to join the words.  Many of the identifiers are composed\
    \ of a\n   set of other identifiers.  These are expressed by listing the latter\n\
    \   identifiers joined with double-colon \"::\" notation.\n   Where the same identifier\
    \ type is used multiple times in a\n   concatenation, they are qualified by a\
    \ prefix joined to the\n   identifier by a dash (-).  For example, A1-Node_ID\
    \ is the Node_ID of\n   a node referred to as A1.\n   The notation defines a preferred\
    \ ordering of the fields.\n   Specifically, the designation A1 is used to indicate\
    \ the lower sort\n   order of a field or set of fields and Z9 is used to indicate\
    \ the\n   higher sort order of the same.  The sort is either alphanumeric or\n\
    \   numeric depending on the field's definition.  Where the sort applies\n   to\
    \ a group of fields, those fields are grouped with {...}.\n   Note, however, that\
    \ the uniqueness of an identifier does not depend\n   on the ordering, but rather,\
    \ upon the uniqueness and scoping of the\n   fields that compose the identifier.\
    \  Further, the preferred ordering\n   is not intended to constrain protocol designs\
    \ by dictating a\n   particular field sequence (for example, see Section 5.2.1)\
    \ or even\n   what fields appear in which objects (for example, see Section 5.3).\n"
- title: 2.  Named Entities
  contents:
  - "2.  Named Entities\n   In order to configure, operate, and manage a transport\
    \ network based\n   on the MPLS Transport Profile, a number of entities require\n\
    \   identification.  Identifiers for the following entities are defined\n   in\
    \ this document:\n      *  Global_ID\n      *  Node\n      *  Interface\n    \
    \  *  Tunnel\n      *  LSP\n      *  PW\n      *  MEG\n      *  MEP\n      * \
    \ MIP\n   Note that we have borrowed the term \"tunnel\" from RSVP-TE (RFC 3209\n\
    \   [2]) where it is used to describe an entity that provides a logical\n   association\
    \ between a source and destination LSR.  The tunnel, in\n   turn, is instantiated\
    \ by one or more LSPs, where the additional LSPs\n   are used for protection or\
    \ re-grooming of the tunnel.\n"
- title: 3.  Uniquely Identifying an Operator - the Global_ID
  contents:
  - "3.  Uniquely Identifying an Operator - the Global_ID\n   The Global_ID is defined\
    \ to uniquely identify an operator.  RFC 5003\n   [3] defines a globally unique\
    \ Attachment Interface Identifier (AII).\n   That AII is composed of three parts:\
    \ a Global_ID that uniquely\n   identifies an operator, a prefix, and, finally,\
    \ an attachment circuit\n   identifier.  We have chosen to use that Global ID\
    \ for MPLS-TP.\n   Quoting from RFC 5003, Section 3.2:\n      The global ID can\
    \ contain the 2-octet or 4-octet value of the\n      provider's Autonomous System\
    \ Number (ASN).  It is expected that\n      the global ID will be derived from\
    \ the globally unique ASN of the\n      autonomous system hosting the PEs containing\
    \ the actual AIIs.  The\n      presence of a global ID based on the operator's\
    \ ASN ensures that\n      the AII will be globally unique.\n   A Global_ID is\
    \ an unsigned 32-bit value and MUST be derived from a\n   4-octet AS number assigned\
    \ to the operator.  Note that 2-octet AS\n   numbers have been incorporated in\
    \ the 4-octet by placing the 2-octet\n   AS number in the low-order octets and\
    \ setting the two high-order\n   octets to zero.\n   ASN 0 is reserved and cannot\
    \ be assigned to an operator.  An\n   identifier containing a Global_ID of zero\
    \ means that no Global_ID is\n   specified.  Note that a Global_ID of zero is\
    \ limited to entities\n   contained within a single operator and MUST NOT be used\
    \ across an\n   NNI.\n   The Global_ID is used solely to provide a globally unique\
    \ context for\n   other MPLS-TP identifiers.  While the AS number used in the\
    \ Global_ID\n   MUST be one that the operator is entitled to use, the use of the\n\
    \   Global_ID is not related to the use of the ASN in protocols such as\n   BGP.\n"
- title: 4.  Node and Interface Identifiers
  contents:
  - "4.  Node and Interface Identifiers\n   An LSR requires identification of the\
    \ node itself and of its\n   interfaces.  An interface is the attachment point\
    \ to a server\n   (sub-)layer, e.g., MPLS-TP section or MPLS-TP tunnel.\n   We\
    \ call the identifier associated with a node a \"Node Identifier\"\n   (Node_ID).\
    \  The Node_ID is a unique 32-bit value assigned by the\n   operator within the\
    \ scope of a Global_ID.  The structure of the\n   Node_ID is operator-specific\
    \ and is outside the scope of this\n   document.  However, the value zero is reserved\
    \ and MUST NOT be used.\n   Where IPv4 addresses are used, it may be convenient\
    \ to use the Node's\n   IPv4 loopback address as the Node_ID; however, the Node_ID\
    \ does not\n   need to have any association with the IPv4 address space used in\
    \ the\n   operator's IGP or EGP.  Where IPv6 addresses are used exclusively, a\n\
    \   32-bit value unique within the scope of a Global_ID is assigned.\n   An LSR\
    \ can support multiple layers (e.g., hierarchical LSPs) and the\n   Node_ID belongs\
    \ to the multiple-layer context, i.e., it is applicable\n   to all LSPs or PWs\
    \ that originate on, have an intermediate point on,\n   or terminate on the node.\n\
    \   In situations where a Node_ID needs to be globally unique, this is\n   accomplished\
    \ by prefixing the identifier with the operator's\n   Global_ID.\n   The term\
    \ \"interface\" is used for the attachment point to an MPLS-TP\n   section.  Within\
    \ the context of a particular node, we call the\n   identifier associated with\
    \ an interface an \"Interface Number\"\n   (IF_Num).  The IF_Num is a 32-bit unsigned\
    \ integer assigned by the\n   operator and MUST be unique within the scope of\
    \ a Node_ID.  The\n   IF_Num value 0 has special meaning (see Section 7.3, MIP\
    \ Identifiers)\n   and MUST NOT be used to identify an MPLS-TP interface.\n  \
    \ Note that IF_Num has no relation with the ifNum object defined in RFC\n   2863\
    \ [8].  Further, no mapping is mandated between IF_Num and ifIndex\n   in RFC\
    \ 2863.\n   An \"Interface Identifier\" (IF_ID) identifies an interface uniquely\n\
    \   within the context of a Global_ID.  It is formed by concatenating the\n  \
    \ Node_ID with the IF_Num.  That is, an IF_ID is a 64-bit identifier\n   formed\
    \ as Node_ID::IF_Num.\n   This convention was chosen to allow compatibility with\
    \ GMPLS.  The\n   GMPLS signaling functional description [4] requires interface\n\
    \   identification.  GMPLS allows three formats for the Interface_ID.\n   The\
    \ third format consists of an IPv4 address plus a 32-bit unsigned\n   integer\
    \ for the specific interface.  The format defined for MPLS-TP\n   is consistent\
    \ with this format, but uses the Node_ID instead of an\n   IPv4 address.\n   If\
    \ an IF_ID needs to be globally unique, this is accomplished by\n   prefixing\
    \ the identifier with the operator's Global_ID.\n   Note that MPLS-TP supports\
    \ hierarchical sections.  The attachment\n   point to an MPLS-TP section at any\
    \ (sub-)layer requires a node-unique\n   IF_Num.\n"
- title: 5.  MPLS-TP Tunnel and LSP Identifiers
  contents:
  - "5.  MPLS-TP Tunnel and LSP Identifiers\n   In MPLS, the actual transport of packets\
    \ is provided by Label\n   Switched Paths (LSPs).  A transport service may be\
    \ composed of\n   multiple LSPs.  Further, the LSPs providing a service may change\
    \ over\n   time due to protection and restoration events.  In order to clearly\n\
    \   identify the service, we use the term \"MPLS-TP Tunnel\" or simply\n   \"\
    tunnel\" for a service provided by (for example) a working LSP and\n   protected\
    \ by a protection LSP.  The \"Tunnel Identifier\" (Tunnel_ID)\n   identifies the\
    \ transport service and provides a stable binding to the\n   client in the face\
    \ of changes in the data-plane LSPs used to provide\n   the service due to protection\
    \ or restoration events.  This section\n   defines an MPLS-TP Tunnel_ID to uniquely\
    \ identify a tunnel, and an\n   MPLS-TP LSP Identifier (LSP_ID) to uniquely identify\
    \ an LSP\n   associated with a tunnel.\n   For the case where multiple LSPs (for\
    \ example) are used to support a\n   single service with a common set of end points,\
    \ using the Tunnel_ID\n   allows for a trivial mapping between the server and\
    \ client layers,\n   providing a common service identifier that may be either\
    \ defined by\n   or used by the client.\n   Note that this usage is not intended\
    \ to constrain protection schemes,\n   and may be used to identify any service\
    \ (protected or unprotected)\n   that may appear to the client as a single service\
    \ attachment point.\n   Keeping the Tunnel_ID consistent across working and protection\
    \ LSPs\n   is a useful construct currently employed within GMPLS.  However, the\n\
    \   Tunnel_ID for a protection LSP MAY differ from that used by its\n   corresponding\
    \ working LSP.\n"
- title: 5.1.  MPLS-TP Point-to-Point Tunnel Identifiers
  contents:
  - "5.1.  MPLS-TP Point-to-Point Tunnel Identifiers\n   At each end point, a tunnel\
    \ is uniquely identified by the end point's\n   Node_ID and a locally assigned\
    \ tunnel number.  Specifically, a\n   \"Tunnel Number\" (Tunnel_Num) is a 16-bit\
    \ unsigned integer unique\n   within the context of the Node_ID.  The motivation\
    \ for each end point\n   having its own tunnel number is to allow a compact form\
    \ for the\n   MEP_ID.  See Section 7.2.2.\n   Having two tunnel numbers also serves\
    \ to simplify other signaling\n   (e.g., setup of associated bidirectional tunnels\
    \ as described in\n   Section 5.3).\n   The concatenation of the two end point\
    \ identifiers serves as the full\n   identifier.  Using the A1/Z9 convention,\
    \ the format of a Tunnel_ID\n   is:\n      A1-{Node_ID::Tunnel_Num}::Z9-{Node_ID::Tunnel_Num}\n\
    \   Where the Tunnel_ID needs to be globally unique, this is accomplished\n  \
    \ by using globally unique Node_IDs as defined above.  Thus, a globally\n   unique\
    \ Tunnel_ID becomes:\n      A1-{Global_ID::Node_ID::Tunnel_Num}::Z9-{Global_ID::Node_ID::\n\
    \      Tunnel_Num}\n   When an MPLS-TP Tunnel is configured, it MUST be assigned\
    \ a unique\n   IF_ID at each end point.  As usual, the IF_ID is composed of the\n\
    \   local Node_ID concatenated with a 32-bit IF_Num.\n"
- title: 5.2.  MPLS-TP LSP Identifiers
  contents:
  - "5.2.  MPLS-TP LSP Identifiers\n   This section defines identifiers for MPLS-TP\
    \ co-routed bidirectional\n   and associated bidirectional LSPs.  Note that MPLS-TP\
    \ Sub-Path\n   Maintenance Entities (SPMEs), as defined in RFC 5921 [9], are also\n\
    \   LSPs and use these same forms of identifiers.\n"
- title: 5.2.1.  MPLS-TP Co-Routed Bidirectional LSP Identifiers
  contents:
  - "5.2.1.  MPLS-TP Co-Routed Bidirectional LSP Identifiers\n   A co-routed bidirectional\
    \ LSP can be uniquely identified by a single\n   LSP number within the scope of\
    \ an MPLS-TP Tunnel_ID.  Specifically,\n   an LSP Number (LSP_Num) is a 16-bit\
    \ unsigned integer unique within\n   the Tunnel_ID.  Thus, the format of an MPLS-TP\
    \ co-routed\n   bidirectional LSP_ID is:\n      A1-{Node_ID::Tunnel_Num}::Z9-{Node_ID::Tunnel_Num}::LSP_Num\n\
    \   Note that the uniqueness of identifiers does not depend on the A1/Z9\n   sort\
    \ ordering.  Thus, the identifier:\n      Z9-{Node_ID::Tunnel_Num}::A1-{Node_ID::Tunnel_Num}::LSP_Num\n\
    \   is synonymous with the one above.\n   At the data-plane level, a co-routed\
    \ bidirectional LSP is composed of\n   two unidirectional LSPs traversing the\
    \ same links in opposite\n   directions.  Since a co-routed bidirectional LSP\
    \ is provisioned or\n   signaled as a single entity, a single LSP_Num is used\
    \ for both\n   unidirectional LSPs.  The unidirectional LSPs can be referenced\
    \ by\n   the identifiers:\n      A1-Node_ID::A1-Tunnel_Num::LSP_Num::Z9-Node_ID\
    \ and\n      Z9-Node_ID::Z9-Tunnel_Num::LSP_Num::A1-Node_ID, respectively.\n \
    \  Where the LSP_ID needs to be globally unique, this is accomplished by\n   using\
    \ globally unique Node_IDs as defined above.  Thus, a globally\n   unique LSP_ID\
    \ becomes:\n      A1-{Global_ID::Node_ID::Tunnel_Num}::Z9-{Global_ID::\n     \
    \ Node_ID::Tunnel_Num}::LSP_Num\n"
- title: 5.2.2.  MPLS-TP Associated Bidirectional LSP Identifiers
  contents:
  - "5.2.2.  MPLS-TP Associated Bidirectional LSP Identifiers\n   For an associated\
    \ bidirectional LSP, each of the unidirectional LSPs\n   from A1 to Z9 and Z9\
    \ to A1 require LSP_Nums.  Each unidirectional LSP\n   is uniquely identified\
    \ by a single LSP number within the scope of the\n   ingress's Tunnel_Num.  Specifically,\
    \ an \"LSP Number\" (LSP_Num) is a\n   16-bit unsigned integer unique within the\
    \ scope of the ingress's\n   Tunnel_Num.  Thus, the format of an MPLS-TP associated\
    \ bidirectional\n   LSP_ID is:\n      A1-{Node_ID::Tunnel_Num::LSP_Num}::\n  \
    \    Z9-{Node_ID::Tunnel_Num::LSP_Num}\n   At the data-plane level, an associated\
    \ bidirectional LSP is composed\n   of two unidirectional LSPs between two nodes\
    \ in opposite directions.\n   The unidirectional LSPs may be referenced by the\
    \ identifiers:\n      A1-Node_ID::A1-Tunnel_Num::A1-LSP_Num::Z9-Node_ID and\n\
    \      Z9-Node_ID::Z9-Tunnel_Num::Z9-LSP_Num::A1-Node_ID, respectively.\n   Where\
    \ the LSP_ID needs to be globally unique, this is accomplished by\n   using globally\
    \ unique Node_IDs as defined above.  Thus, a globally\n   unique LSP_ID becomes:\n\
    \      A1-{Global_ID::Node_ID::Tunnel_Num::LSP_Num}::\n      Z9-{Global_ID::Node_ID::Tunnel_Num::LSP_Num}\n"
- title: 5.3.  Mapping to RSVP Signaling
  contents:
  - "5.3.  Mapping to RSVP Signaling\n   This section is informative and exists to\
    \ help understand the\n   structure of the LSP IDs.\n   GMPLS [5] is based on\
    \ RSVP-TE [2].  This section defines the mapping\n   from an MPLS-TP LSP_ID to\
    \ RSVP-TE.  At this time, RSVP-TE has yet to\n   be extended to accommodate Global_IDs.\
    \  Thus, a mapping is only made\n   for the network unique form of the LSP_ID\
    \ and assumes that the\n   operator has chosen to derive its Node_IDs from valid\
    \ IPv4 addresses.\n   GMPLS and RSVP-TE signaling use a 5-tuple to uniquely identify\
    \ an LSP\n   within an operator's network.  This tuple is composed of a Tunnel\n\
    \   End-point Address, Tunnel_ID, Extended Tunnel ID, Tunnel Sender\n   Address,\
    \ and (RSVP) LSP_ID.  RFC 3209 allows some flexibility in how\n   the Extended\
    \ Tunnel ID is chosen, and a direct mapping is not\n   mandated.  One convention\
    \ that is often used, however, is to populate\n   this field with the same value\
    \ as the Tunnel Sender Address.  The\n   examples below follow that convention.\
    \  Note that these are only\n   examples.\n   For a co-routed bidirectional LSP\
    \ signaled from A1 to Z9, the mapping\n   to the GMPLS 5-tuple is as follows:\n\
    \      *  Tunnel End-point Address = Z9-Node_ID\n      *  Tunnel_ID = A1-Tunnel_Num\n\
    \      *  Extended Tunnel_ID = A1-Node_ID\n      *  Tunnel Sender Address = A1-Node_ID\n\
    \      *  (RSVP) LSP_ID = LSP_Num\n   An associated bidirectional LSP between\
    \ two nodes A1 and Z9 consists\n   of two unidirectional LSPs, one from A1 to\
    \ Z9 and one from Z9 to A1.\n   In situations where a mapping to the RSVP-TE 5-tuples\
    \ is required,\n   the following mappings are used.  For the A1 to Z9 LSP, the\
    \ mapping\n   would be:\n      *  Tunnel End-point Address = Z9-Node_ID\n    \
    \  *  Tunnel_ID = A1-Tunnel_Num\n      *  Extended Tunnel_ID = A1-Node_ID\n  \
    \    *  Tunnel Sender Address = A1-Node_ID\n      *  (RSVP) LSP_ID = A1-LSP_Num\n\
    \   Likewise, the Z9 to A1 LSP, the mapping would be:\n      *  Tunnel End-point\
    \ Address = A1-Node_ID\n      *  Tunnel_ID = Z9-Tunnel_Num\n      *  Extended\
    \ Tunnel_ID = Z9-Node_ID\n      *  Tunnel Sender Address = Z9-Node_ID\n      *\
    \  (RSVP) LSP_ID = Z9-LSP_Num\n"
- title: 6.  Pseudowire Path Identifiers
  contents:
  - "6.  Pseudowire Path Identifiers\n   Pseudowire signaling (RFC 4447 [6]) defines\
    \ two FECs used to signal\n   pseudowires.  Of these, the Generalized PWid FEC\
    \ (type 129) along\n   with AII Type 2 as defined in RFC 5003 [3] fits the identification\n\
    \   requirements of MPLS-TP.\n   In an MPLS-TP environment, a PW is identified\
    \ by a set of identifiers\n   that can be mapped directly to the elements required\
    \ by the\n   Generalized PWid FEC (type 129) and AII Type 2.  To distinguish this\n\
    \   identifier from other Pseudowire Identifiers, we call this a\n   Pseudowire\
    \ Path Identifier (PW_Path_ID).\n   The AII Type 2 is composed of three fields.\
    \  These are the Global_ID,\n   the Prefix, and the AC_ID.  The Global_ID used\
    \ in this document is\n   identical to the Global_ID defined in RFC 5003.  The\
    \ Node_ID is used\n   as the Prefix.  The AC_ID is as defined in RFC 5003.\n \
    \  To complete the Generalized PWid FEC (type 129), all that is required\n   is\
    \ an Attachment Group Identifier (AGI).  That field is exactly as\n   specified\
    \ in RFC 4447.  A (bidirectional) pseudowire consists of a\n   pair of unidirectional\
    \ LSPs, one in each direction.  Thus, for\n   signaling, the Generalized PWid\
    \ FEC (type 129) has a notion of Source\n   AII (SAII) and Target AII (TAII).\
    \  These terms are used relative to\n   the direction of the LSP, i.e., the SAII\
    \ is assigned to the end that\n   allocates the PW label for a given direction,\
    \ and the TAII to the\n   other end.\n   In a purely configured environment, when\
    \ referring to the entire PW,\n   this distinction is not critical.  That is,\
    \ a Generalized PWid FEC\n   (type 129) of AGIa::AIIb::AIIc is equivalent to AGIa::AIIc::AIIb.\n\
    \   We note that in a signaled environment, the required convention in\n   RFC\
    \ 4447 is that at a particular end point, the AII associated with\n   that end\
    \ point comes first.  The complete PW_Path_ID is:\n      AGI::A1-{Global_ID::Node_ID::AC_ID}::\n\
    \      Z9-{Global_ID::Node_ID::AC_ID}.\n   In a signaled environment the LSP from\
    \ A1 to Z9 would be initiated\n   with a label request from A1 to Z9 with the\
    \ fields of the Generalized\n   PWid FEC (type 129) completed as follows:\n  \
    \    AGI = AGI\n      SAII = A1-{Global_ID::Node_ID::AC_ID}\n      TAII = Z9-{Global_ID::Node_ID::AC_ID}\n\
    \   The LSP from Z9 to A1 would signaled with:\n      AGI = AGI\n      SAII =\
    \ Z9-{Global_ID::Node_ID::AC_ID}\n      TAII = A1-{Global_ID::Node_ID::AC_ID}\n"
- title: 7.  Maintenance Identifiers
  contents:
  - "7.  Maintenance Identifiers\n   In MPLS-TP, a Maintenance Entity Group (MEG)\
    \ represents an entity\n   that requires management and defines a relationship\
    \ between a set of\n   maintenance points.  A maintenance point is either a Maintenance\n\
    \   Entity Group End Point (MEP), a Maintenance Entity Group Intermediate\n  \
    \ Point (MIP), or a Pseudowire Segment End Point.  Within the context\n   of a\
    \ MEG, MEPs and MIPs must be uniquely identified.  This section\n   defines a\
    \ means of uniquely identifying Maintenance Entity Groups and\n   Maintenance\
    \ Entities.  It also uniquely defines MEPs and MIPs within\n   the context of\
    \ a Maintenance Entity Group.\n"
- title: 7.1.  Maintenance Entity Group Identifiers
  contents:
  - "7.1.  Maintenance Entity Group Identifiers\n   Maintenance Entity Group Identifiers\
    \ (MEG_IDs) are required for\n   MPLS-TP sections, LSPs, and Pseudowires.  The\
    \ formats were chosen to\n   follow the IP-compatible identifiers defined above.\n"
- title: 7.1.1.  MPLS-TP Section MEG_IDs
  contents:
  - "7.1.1.  MPLS-TP Section MEG_IDs\n   MPLS-TP allows a hierarchy of sections. \
    \ See \"MPLS-TP Data Plane\n   Architecture\" (RFC 5960 [10]).  Sections above\
    \ layer 0 are MPLS-TP\n   LSPs.  These use their MPLS-TP LSP MEG IDs defined in\
    \ Section 7.1.2.\n   IP-compatible MEG_IDs for MPLS-TP sections at layer 0 are\
    \ formed by\n   concatenating the two IF_IDs of the corresponding section using\
    \ the\n   A1/Z9 ordering.  For example:\n      A1-IF_ID::Z9-IF_ID\n   Where the\
    \ Section_MEG_ID needs to be globally unique, this is\n   accomplished by using\
    \ globally unique Node_IDs as defined above.\n   Thus, a globally unique Section_MEG_ID\
    \ becomes:\n      A1-{Global_ID::IF_ID}::Z9-{Global_ID::IF_ID}\n"
- title: 7.1.2.  MPLS-TP LSP MEG_IDs
  contents:
  - "7.1.2.  MPLS-TP LSP MEG_IDs\n   A MEG pertains to a unique MPLS-TP LSP.  IP compatible\
    \ MEG_IDs for\n   MPLS-TP LSPs are simply the corresponding LSP_IDs; however,\
    \ the A1/Z9\n   ordering MUST be used.  For bidirectional co-routed LSPs, the\
    \ format\n   of the LSP_ID is found in Section 5.2.1.  For associated\n   bidirectional\
    \ LSPs, the format is in Section 5.2.2.\n   We note that while the two identifiers\
    \ are syntactically identical,\n   they have different semantics.  This semantic\
    \ difference needs to be\n   made clear.  For instance, if both an MPLS-TP LSP_ID\
    \ and MPLS-TP LSP\n   MEG_IDs are to be encoded in TLVs, different types need\
    \ to be\n   assigned for these two identifiers.\n"
- title: 7.1.3.  Pseudowire MEG_IDs
  contents:
  - "7.1.3.  Pseudowire MEG_IDs\n   For Pseudowires, a MEG pertains to a single PW.\
    \  The IP-compatible\n   MEG_ID for a PW is simply the corresponding PW_Path_ID;\
    \ however, the\n   A1/Z9 ordering MUST be used.  The PW_Path_ID is described in\n\
    \   Section 6.  We note that while the two identifiers are syntactically\n   identical,\
    \ they have different semantics.  This semantic difference\n   needs to be made\
    \ clear.  For instance, if both a PW_Path_ID and a\n   PW_MEG_ID are to be encoded\
    \ in TLVs, different types need to be\n   assigned for these two identifiers.\n"
- title: 7.2.  Maintenance Entity Group End Point Identifiers
  contents:
  - '7.2.  Maintenance Entity Group End Point Identifiers

    '
- title: 7.2.1.  MPLS-TP Section MEP_IDs
  contents:
  - "7.2.1.  MPLS-TP Section MEP_IDs\n   IP-compatible MEP_IDs for MPLS-TP sections\
    \ above layer 0 are their\n   MPLS-TP LSP_MEP_IDs.  See Section 7.2.2.\n   IP-compatible\
    \ MEP_IDs for MPLS-TP sections at layer 0 are simply the\n   IF_IDs of each end\
    \ of the section.  For example, for a section whose\n   MEG_ID is:\n      A1-IF_ID::Z9-IF_ID\n\
    \   the Section MEP_ID at A1 would be:\n      A1-IF_ID\n   and the Section MEP_ID\
    \ at Z9 would be:\n      Z9-IF_ID.\n   Where the Section MEP_ID needs to be globally\
    \ unique, this is\n   accomplished by using globally unique Node_IDs as defined\
    \ above.\n   Thus, a globally unique Section MEP_ID becomes:\n      Global_ID::IF_ID.\n"
- title: 7.2.2.  MPLS-TP LSP_MEP_ID
  contents:
  - "7.2.2.  MPLS-TP LSP_MEP_ID\n   In order to automatically generate MEP_IDs for\
    \ MPLS-TP LSPs, we use\n   the elements of identification that are unique to an\
    \ end point.  This\n   ensures that MEP_IDs are unique for all LSPs within an\
    \ operator.\n   When Tunnels or LSPs cross operator boundaries, these are made\
    \ unique\n   by pre-pending them with the operator's Global_ID.\n   The MPLS-TP\
    \ LSP_MEP_ID is:\n      Node_ID::Tunnel_Num::LSP_Num\n   where the Node_ID is\
    \ the node in which the MEP is located and\n   Tunnel_Num is the tunnel number\
    \ unique to that node.  In the case of\n   co-routed bidirectional LSPs, the single\
    \ LSP_Num is used at both\n   ends.  In the case of associated bidirectional LSPs,\
    \ the LSP_Num is\n   the one unique to where the MEP resides.\n   In situations\
    \ where global uniqueness is required, this becomes:\n      Global_ID::Node_ID::Tunnel_Num::LSP_Num\n"
- title: 7.2.3.  MEP_IDs for Pseudowires
  contents:
  - "7.2.3.  MEP_IDs for Pseudowires\n   Like MPLS-TP LSPs, Pseudowire end points\
    \ (T-PEs) require MEP_IDs.  In\n   order to automatically generate MEP_IDs for\
    \ PWs, we simply use the\n   AGI plus the AII associated with that end of the\
    \ PW.  Thus, a MEP_ID\n   for a Pseudowire T-PE takes the form:\n      AGI::Global_ID::Node_ID::AC_ID\n\
    \   where the Node_ID is the node in which the MEP is located and the\n   AC_ID\
    \ is the AC_ID of the Pseudowire at that node.\n"
- title: 7.3.  Maintenance Entity Group Intermediate Point Identifiers
  contents:
  - "7.3.  Maintenance Entity Group Intermediate Point Identifiers\n   For a MIP that\
    \ is associated with a particular interface, we simply\n   use the IF_ID (see\
    \ Section 4) of the interfaces that are cross-\n   connected.  This allows MIPs\
    \ to be independently identified in one\n   node where a per-interface MIP model\
    \ is used.  If only a per-node MIP\n   model is used, then one MIP is configured.\
    \  In this case, the MIP_ID\n   is formed using the Node_ID and an IF_Num of 0.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   This document describes an information model\
    \ and, as such, does not\n   introduce security concerns.  Protocol specifications\
    \ that describe\n   use of this information model, however, may introduce security\
    \ risks\n   and concerns about authentication of participants.  For this reason,\n\
    \   the writers of protocol specifications for the purpose of describing\n   implementation\
    \ of this information model need to describe security\n   and authentication concerns\
    \ that may be raised by the particular\n   mechanisms defined and how those concerns\
    \ may be addressed.\n   Uniqueness of the identifiers from this document is guaranteed\
    \ by the\n   assigner (e.g., a Global_ID is unique based on the assignment of\
    \ ASNs\n   from IANA and both a Node_ID and an IF_Num are unique based on the\n\
    \   assignment by an operator).  Failure by an assigner to use unique\n   values\
    \ within the specified scoping for any of the identifiers\n   defined herein could\
    \ result in operational problems.  For example, a\n   non-unique MEP value could\
    \ result in failure to detect a mis-merged\n   LSP.\n   Protocol specifications\
    \ that utilize the identifiers defined herein\n   need to consider the implications\
    \ of guessable identifiers and, where\n   there is a security implication, SHOULD\
    \ give advice on how to make\n   identifiers less guessable.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [1]   Bradner, S., \"Key words for use in RFCs\
    \ to Indicate Requirement\n         Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [2]   Awduche, D., Berger, L., Gan, D., Li, T., Srinivasan, V., and\n    \
    \     G. Swallow, \"RSVP-TE: Extensions to RSVP for LSP Tunnels\",\n         RFC\
    \ 3209, December 2001.\n   [3]   Metz, C., Martini, L., Balus, F., and J. Sugimoto,\
    \ \"Attachment\n         Individual Identifier (AII) Types for Aggregation\",\
    \ RFC 5003,\n         September 2007.\n   [4]   Berger, L., \"Generalized Multi-Protocol\
    \ Label Switching (GMPLS)\n         Signaling Functional Description\", RFC 3471,\
    \ January 2003.\n   [5]   Berger, L., \"Generalized Multi-Protocol Label Switching\
    \ (GMPLS)\n         Signaling Resource ReserVation Protocol-Traffic Engineering\n\
    \         (RSVP-TE) Extensions\", RFC 3473, January 2003.\n   [6]   Martini, L.,\
    \ Rosen, E., El-Aawar, N., Smith, T., and G. Heron,\n         \"Pseudowire Setup\
    \ and Maintenance Using the Label Distribution\n         Protocol (LDP)\", RFC\
    \ 4447, April 2006.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [7]   Niven-Jenkins, B., Brungard, D., Betts,\
    \ M., Sprecher, N., and\n         S. Ueno, \"Requirements of an MPLS Transport\
    \ Profile\", RFC 5654,\n         September 2009.\n   [8]   McCloghrie, K. and\
    \ F. Kastenholz, \"The Interfaces Group MIB\",\n         RFC 2863, June 2000.\n\
    \   [9]   Bocci, M., Bryant, S., Frost, D., Levrau, L., and L. Berger, \"A\n \
    \        Framework for MPLS in Transport Networks\", RFC 5921, July 2010.\n  \
    \ [10]  Frost, D., Bryant, S., and M. Bocci, \"MPLS Transport Profile\n      \
    \   Data Plane Architecture\", RFC 5960, August 2010.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Matthew Bocci\n   Alcatel-Lucent\n   Voyager Place, Shoppenhangers\
    \ Road\n   Maidenhead, Berks  SL6 2PJ\n   UK\n   EMail: matthew.bocci@alcatel-lucent.com\n\
    \   George Swallow\n   Cisco\n   EMail: swallow@cisco.com\n   Eric Gray\n   Ericsson\n\
    \   900 Chelmsford Street\n   Lowell, Massachussetts  01851-8100\n   EMail: eric.gray@ericsson.com\n"
