- title: __initial_text__
  contents:
  - "      CUSAX: Combined Use of the Session Initiation Protocol (SIP)\n       and\
    \ the Extensible Messaging and Presence Protocol (XMPP)\n"
- title: Abstract
  contents:
  - "Abstract\n   This document suggests some strategies for the combined use of the\n\
    \   Session Initiation Protocol (SIP) and the Extensible Messaging and\n   Presence\
    \ Protocol (XMPP) both in user-oriented clients and in\n   deployed servers. \
    \ Such strategies, which mainly consist of\n   configuration changes and minimal\
    \ software modifications to existing\n   clients and servers, aim to provide a\
    \ single, full-featured, real-\n   time communication service by using complementary\
    \ subsets of features\n   from SIP and from XMPP.  Typically, such subsets consist\
    \ of telephony\n   capabilities from SIP and instant messaging and presence capabilities\n\
    \   from XMPP.  This document does not define any new protocols or syntax\n  \
    \ for either SIP or XMPP and, by intent, does not attempt to\n   standardize \"\
    best current practices\".  Instead, it merely aims to\n   provide practical guidance\
    \ to those who are interested in the\n   combined use of SIP and XMPP for real-time\
    \ communication.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7081.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2013 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Client Bootstrap ................................................5\n  \
    \ 3. Operation .......................................................6\n    \
    \  3.1. Server-Side Setup ..........................................7\n      3.2.\
    \ Service Management .........................................7\n      3.3. Client-Side\
    \ Discovery and Usability ........................8\n      3.4. Indicating a Relationship\
    \ between SIP and XMPP Accounts ....9\n      3.5. Matching Incoming SIP Calls\
    \ to XMPP JIDs ..................10\n   4. Multi-Party Interactions .......................................11\n\
    \   5. Federation .....................................................12\n  \
    \ 6. Summary of Suggested Strategies ................................13\n   7.\
    \ Security Considerations ........................................14\n   8. References\
    \ .....................................................15\n      8.1. Normative\
    \ References ......................................15\n      8.2. Informative\
    \ References ....................................16\n   Appendix A. Acknowledgements\
    \ ......................................18\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Historically, SIP [RFC3261] and XMPP [RFC6120] have often\
    \ been\n   implemented and deployed with different purposes: from its very\n \
    \  start, SIP's primary goal has been to provide a means of conducting\n   \"\
    Internet telephone calls\".  On the other hand, XMPP has, from its\n   Jabber\
    \ days, been mostly used for instant messaging, presence\n   [RFC6121], and related\
    \ services such as groupchat rooms [XEP-0045].\n   For various reasons, these\
    \ trends have continued through the years,\n   even after each of the protocols\
    \ had been equipped to provide the\n   features it was initially lacking:\n  \
    \ o  In the context of the SIP for Instant Messaging and Presence\n      Leveraging\
    \ Extensions (SIMPLE) working group, the IETF has defined\n      a number of protocols\
    \ and protocol extensions that not only allow\n      for SIP to be used for regular\
    \ instant messaging and presence but\n      that also provide mechanisms for related\
    \ features such as\n      multi-party chat, server-stored contact lists, and file\
    \ transfer\n      [RFC6914].\n   o  Similarly, the XMPP community and the XMPP\
    \ Standards Foundation\n      have worked on defining a number of XMPP Extension\
    \ Protocols\n      (XEPs) that provide XMPP implementations with the means of\n\
    \      establishing end-to-end sessions.  These extensions are often\n      jointly\
    \ referred to as Jingle [XEP-0166], and arguably their most\n      popular use\
    \ case is audio and video calling [XEP-0167].\n   However, although SIP has been\
    \ extended for messaging and presence\n   and XMPP has been extended for voice\
    \ and video, the reality is that\n   SIP remains the protocol of choice for telephony-like\
    \ services, and\n   XMPP remains the protocol of choice for IM and presence services.\
    \  As\n   a result, a number of adopters have found themselves needing features\n\
    \   that are not offered by any single-protocol solution, but ones that\n   separately\
    \ exist in SIP and XMPP implementations.  The idea of\n   seamlessly using both\
    \ protocols together would hence often appeal to\n   service providers and users.\
    \  Most often, such a service would employ\n   SIP exclusively for audio, video,\
    \ and telephony services and rely on\n   XMPP for anything else varying from chat,\
    \ contact-list management,\n   and presence to whiteboarding and exchanging files.\
    \  Because these\n   services and clients involve the combined use of SIP and\
    \ XMPP, we\n   label them \"CUSAX\" for short.\n                     +------------+\
    \      +-------------+\n                     | SIP Server |      | XMPP Server\
    \ |\n                     +------------+      +-------------+\n              \
    \                \\             /\n                     media     \\         \
    \  /  instant messaging,\n                     signaling  \\         /   presence,\
    \ etc.\n                                 \\       /\n                        \
    \      +--------------+\n                              | CUSAX Client |\n    \
    \                          +--------------+\n                  Figure 1: Division\
    \ of Responsibilities\n   This document suggests different configuration options\
    \ and minimal\n   modifications to existing software so that clients and servers\
    \ can\n   offer these hybrid services while providing an optimal user\n   experience.\
    \  It covers server discovery, determining a SIP Address of\n   Record (AOR) while\
    \ using XMPP, and determining an XMPP Jabber\n   Identifier (JID) from incoming\
    \ SIP requests.  Most of the text here\n   pertains to client behavior, but we\
    \ also suggest certain server-side\n   configurations and operational strategies.\
    \  The document also\n   discusses significant security considerations that can\
    \ arise when\n   offering a dual-protocol solution and provides advice for avoiding\n\
    \   security mismatches that would result in degraded communications\n   security\
    \ for end users.\n   Note that this document is focused on coexistence of SIP\
    \ and XMPP\n   functionality in end-user-oriented clients.  By intent, it does\
    \ not\n   define methods for protocol-level mapping between SIP and XMPP, as\n\
    \   might be used within a server-side gateway between a SIP network and\n   an\
    \ XMPP network (a separate series of documents has been produced\n   that defines\
    \ such mappings).  More generally, this document does not\n   describe service\
    \ policies for inter-domain communication (often\n   called \"federation\") between\
    \ service providers (e.g., how a service\n   provider that offers a CUSAX service\
    \ might communicate with a\n   SIP-only or XMPP-only service), nor does it describe\
    \ the reasons why\n   a service provider might choose SIP or XMPP for various\
    \ features.\n   This document concentrates on use cases where the SIP services\
    \ and\n   XMPP services are controlled by one and the same provider, since that\n\
    \   assumption greatly simplifies both client implementation and\n   server-side\
    \ deployment (e.g., a single service provider can enforce\n   common or coordinated\
    \ policies across both the SIP and XMPP aspects\n   of a CUSAX service, which\
    \ is not possible if a SIP service is offered\n   by one provider and an XMPP\
    \ service is offered by another provider).\n   Since this document is of an informational\
    \ nature, it is not\n   unreasonable for clients to apply some of the guidelines\
    \ here even in\n   cases where there is no established relationship between the\
    \ SIP and\n   the XMPP services (for example, it is reasonable for a client to\n\
    \   provide a way for its users to easily start a call to a phone number\n   or\
    \ SIP URI found in a vCard or obtained from a user directory).\n   However, the\
    \ strategies to pursue in such cases are left to\n   application developers.\n\
    \   This document makes a further simplifying assumption by discussing\n   only\
    \ the use of a single client, not use of and coordination among\n   multiple endpoints\
    \ controlled by the same user (e.g., user agents\n   running simultaneously on\
    \ a laptop computer, tablet, and mobile\n   phone).  Although user agents running\
    \ on separate endpoints might\n   themselves be CUSAX clients or might engage\
    \ in different aspects of\n   an interaction (e.g., a user might employ her mobile\
    \ phone for audio\n   and her tablet for video and text chat), such usage complicates\
    \ the\n   guidelines for developers of user agents and therefore is left as a\n\
    \   matter of implementation for now.\n   It is important to note that this document\
    \ does not attempt to\n   standardize \"best current practices\" in the sense\
    \ defined in the\n   Internet Standards Process [RFC2026].  Instead, it collects\
    \ together\n   informational documentation about some strategies that might prove\n\
    \   helpful to those who implement and deploy combined SIP/XMPP software\n   and\
    \ services.  With sufficient use and appropriate modification to\n   incorporate\
    \ the lessons of experience, these strategies might someday\n   form the basis\
    \ for standardization of best current practices.\n"
- title: 2.  Client Bootstrap
  contents:
  - "2.  Client Bootstrap\n   One of the main problems of using two distinct protocols\
    \ when\n   providing one service is the impact on usability.  Email services,\n\
    \   for example, have long been affected by the mixed use of SMTP for\n   outgoing\
    \ mail and Post Office Protocol version 3 (POP3) or IMAP for\n   incoming mail.\
    \  Although standard service discovery methods (such as\n   the proper DNS records)\
    \ make it possible for a user agent to locate\n   the right host(s) for connect\
    \ purposes, they do not provide the kind\n   of detailed information that is needed\
    \ to actually configure the user\n   agent for use with the service.  As a result,\
    \ it is rather\n   complicated for inexperienced users to configure a mail client\
    \ and\n   start using it with a new service; and as a result, Internet service\n\
    \   providers often need to provide configuration instructions for\n   various\
    \ mail clients.  Client developers and communication device\n   manufacturers,\
    \ on the other hand, often ship with a number of\n   so-called \"wizard\" interfaces\
    \ that enable users to easily configure\n   accounts with a number of popular\
    \ email services.  Although this may\n   improve the situation to some extent,\
    \ the user experience is still\n   clearly suboptimal.\n   While it should be\
    \ possible for CUSAX users to manually configure\n   their separate SIP and XMPP\
    \ accounts (often using \"wizards\"), service\n   providers offering CUSAX services\
    \ to users of dual-stack SIP/XMPP\n   clients ought to provide methods for online\
    \ provisioning, typically\n   by means of a web-based service at an HTTPS URL\
    \ (naturally, single-\n   purpose SIP services or XMPP services could offer such\
    \ methods as\n   well, but they can be especially helpful where the two aspects\
    \ of the\n   CUSAX service need to have several configuration options in common).\n\
    \   Although the specifics of such mechanisms are outside the scope of\n   this\
    \ document, they should make it possible for a service provider to\n   remotely\
    \ configure the clients based on minimal user input (e.g.,\n   only a user ID\
    \ and password).  As far as the authors are aware, no\n   open protocol for endpoint\
    \ configuration is yet available and\n   adopted; however, application developers\
    \ are encouraged to explore\n   the potential for future progress in this space\
    \ (e.g., perhaps based\n   on technologies such as WebFinger [RFC7033]).\n   By\
    \ default, when a CUSAX client is used in concert with SIP and XMPP\n   accounts\
    \ that have a CUSAX relationship (see Section 3.4), the client\n   should disable\
    \ audio and video calling over XMPP and disable instant\n   messaging and presence\
    \ over SIP.  (It is a matter of implementation\n   whether a CUSAX client allows\
    \ a user to override these defaults in\n   various ways, e.g., by domain, by individual\
    \ contact, or by device.)\n   The main advantage of this approach is that a client\
    \ would employ the\n   most relevant features from both SIP and XMPP when used\
    \ in the\n   context of a CUSAX service.  Note that this default configuration\n\
    \   does not apply to stand-alone SIP accounts or XMPP accounts, for\n   which\
    \ other settings are likely to be more appropriate (see\n   Section 3.4 for details).\n\
    \   Once a client has been provisioned, it needs to independently log\n   into\
    \ the SIP account and XMPP account that make up the CUSAX\n   \"service\" and\
    \ then maintain both connections.\n   In order to improve the user experience,\
    \ when reporting connection\n   status, a CUSAX client may wish to present the\
    \ XMPP connection as an\n   \"instant messaging\" or a \"chat\" account and the\
    \ SIP connection as a\n   \"Voice and Video\" or a \"Telephony\" connection. \
    \ The exact naming is\n   of course entirely up to implementers.  The point is\
    \ that, in cases\n   where SIP and XMPP are components of a service offered by\
    \ a single\n   provider, such presentation could help users better understand\
    \ why\n   they are being shown two different connections for what they perceive\n\
    \   as a single service (especially when one of the connections is\n   disrupted\
    \ while the other one is still active).  Alternatively, the\n   developers of\
    \ a CUSAX client or the providers of a CUSAX service\n   might decide to force\
    \ a client to completely disconnect unless both\n   aspects are successfully connected.\n\
    \   Clients may also choose to delay their XMPP connection until they\n   have\
    \ been successfully registered on SIP.  This would help avoid the\n   situation\
    \ where a user appears online to her contacts but calling the\n   user's client\
    \ would fail because the user's client is still\n   connecting to the SIP aspect\
    \ of the CUSAX service.\n"
- title: 3.  Operation
  contents:
  - "3.  Operation\n   Once a CUSAX client has been provisioned and authorized to\
    \ connect to\n   the corresponding SIP and XMPP services, it would proceed by\n\
    \   retrieving its XMPP roster.\n   The client should use XMPP for most forms\
    \ of communication with the\n   contacts from this roster, which will occur naturally\
    \ because they\n   were retrieved through XMPP.  Audio/video features, however,\
    \ would\n   typically be disabled in the XMPP stack, so media-related\n   communication\
    \ based on these features (e.g., direct calls,\n   conferences, desktop streaming,\
    \ etc.) would happen over SIP.  The\n   rest of this section describes deployment,\
    \ discovery, usability, and\n   linking semantics that enable CUSAX clients to\
    \ seamlessly use SIP for\n   these features.\n"
- title: 3.1.  Server-Side Setup
  contents:
  - "3.1.  Server-Side Setup\n   In order for CUSAX to function properly, XMPP service\
    \ administrators\n   should make sure that at least one of the vCard [RFC6350]\
    \ \"tel\"\n   fields for each contact is properly populated with a SIP URI for\
    \ the\n   user's address at the SIP audio/video service provided by the CUSAX\n\
    \   server.  There are no limitations as to the form of that number.  For\n  \
    \ example, while it is desirable to maintain a certain consistency\n   between\
    \ SIP AORs and XMPP JIDs, that is by no means required.  It is\n   quite important,\
    \ however, that the phone number or SIP AOR stored in\n   the vCard be reachable\
    \ through the SIP aspect of this CUSAX service.\n   (The same considerations apply\
    \ even if the directory storage format\n   is not vCard storage over XMPP as described\
    \ by [XEP-0054] or\n   [XEP-0292].)\n   Administrators may also choose to include\
    \ the \"video\" tel type\n   defined in [RFC6350] for accounts that would be capable\
    \ of handling\n   video communication.\n   To ensure that the foregoing approach\
    \ is always respected, service\n   providers might consider validating the values\
    \ of vCard \"tel\" fields\n   before storing changes.  Of course, such validation\
    \ would be feasible\n   only in cases where a single provider controls both the\
    \ XMPP and the\n   SIP service since such providers would \"know\" (e.g., based\
    \ on use of\n   a common user database for both services) what SIP AOR corresponds\
    \ to\n   a given XMPP user.\n"
- title: 3.2.  Service Management
  contents:
  - "3.2.  Service Management\n   The task of operating and managing a stand-alone\
    \ SIP service or XMPP\n   service is not always easy.  Combining the two into\
    \ a unified service\n   introduces additional challenges, including:\n   o  The\
    \ necessity of opening additional ports on the client side if\n      SIP functionality\
    \ is added to an existing XMPP deployment, or vice\n      versa.\n   o  The potential\
    \ for important differences in security posture across\n      SIP and XMPP (e.g.,\
    \ SIP servers and XMPP servers might support\n      different Transport Layer\
    \ Security (TLS) ciphersuites).\n   o  The need for, ideally, a common authentication\
    \ backend and other\n      infrastructure that is shared across the SIP and XMPP\
    \ aspects of\n      the combined service.\n   o  Coordinated monitoring and logging\
    \ of the SIP and XMPP servers to\n      enable the correlation of incidents and\
    \ the pinpointing of\n      problems.\n   o  The difficulty of troubleshooting\
    \ client-side issues, e.g., if the\n      client loses connectivity for XMPP but\
    \ maintains its SIP\n      connection.\n   Although separation of functionality\
    \ (SIP for media and XMPP for IM\n   and presence) can help to ease the operational\
    \ burden to some extent,\n   service providers are urged to address the foregoing\
    \ challenges and\n   similar issues when preparing to launch a CUSAX service.\n\
    \   Beyond the issues listed above, service providers might want to be\n   aware\
    \ of more subtle operational issues that can arise.  For example,\n   if a service\
    \ provider uses different network operators for the SIP\n   service and the XMPP\
    \ service, end-to-end connectivity might be more\n   reliable or consistent in\
    \ one service than in the other service.\n   Similar issues can arise when the\
    \ media path and the signaling path\n   go over different networks, even in stand-alone\
    \ SIP or XMPP services.\n   Providers of CUSAX services are advised to consider\
    \ the potential for\n   such topologies to cause operational challenges.\n"
- title: 3.3.  Client-Side Discovery and Usability
  contents:
  - "3.3.  Client-Side Discovery and Usability\n   When rendering the roster for a\
    \ particular XMPP account, CUSAX\n   clients should make sure that users are presented\
    \ with a \"Call\"\n   option for each roster entry that has a properly set \"\
    tel\" field.\n   This is the case even if calling features have been disabled\
    \ for that\n   particular XMPP account, as advised by this document.  The usefulness\n\
    \   of such a feature is not limited to CUSAX.  After all, numbers are\n   entered\
    \ in vCards or stored in directories in order to be dialed and\n   called.  Hence,\
    \ as long as an XMPP client has any means of conducting\n   a call, it may wish\
    \ to make it possible for the user to easily dial\n   any numbers that it learned\
    \ through whatever means.\n   Clients that have separate triggers (e.g., buttons)\
    \ for audio calls\n   and video calls may choose to use the presence or absence\
    \ of the\n   \"video\" tel type defined in [RFC6350] as the basis for choosing\n\
    \   whether to enable or disable the possibility for starting video calls\n  \
    \ (i.e., if there is no \"video\" tel type for a particular contact, the\n   client\
    \ could disable the \"video call\" button for that contact).\n   In addition to\
    \ discovering phone numbers from vCards or user\n   directories, clients may also\
    \ check for alternative communication\n   methods as advertised in XMPP presence\
    \ broadcasts and Personal\n   Eventing Protocol nodes as described in \"XEP-0152:\
    \ Reachability\n   Addresses\" [XEP-0152].  However, these indications are merely\
    \ hints,\n   and a receiving client ought not associate a SIP address and an XMPP\n\
    \   address unless it has some way to verify the relationship (e.g., the\n   vCard\
    \ of the XMPP account lists the SIP address and the vCard of the\n   SIP account\
    \ lists the XMPP address, or the relationship is made\n   explicit in a record\
    \ provided by a trusted directory).\n   Alternatively, or in cases where vCard\
    \ or directory data is not\n   available, a CUSAX client could take the user's\
    \ own address book as\n   the canonical source for contact addresses.\n"
- title: 3.4.  Indicating a Relationship between SIP and XMPP Accounts
  contents:
  - "3.4.  Indicating a Relationship between SIP and XMPP Accounts\n   In order to\
    \ improve usability, in cases where clients are provisioned\n   with only a single\
    \ telephony-capable account they ought to initiate\n   calls immediately upon\
    \ user request without asking users to indicate\n   an account that the call should\
    \ go through.  This way, CUSAX users\n   (whose only account with calling capabilities\
    \ is usually the SIP part\n   of their service) would have a better experience,\
    \ since from the\n   user's perspective calls \"just work at the click of a button\"\
    .\n   In some cases, however, clients will be configured with more than the\n\
    \   two XMPP and SIP accounts provisioned by the CUSAX provider.  Users\n   are\
    \ likely to add additional stand-alone XMPP or SIP accounts (or\n   accounts for\
    \ other communications protocols), any of which might have\n   both telephony\
    \ and instant messaging capabilities.  Such situations\n   can introduce additional\
    \ ambiguity since all of the telephony-capable\n   accounts could be used for\
    \ calling the numbers the client has learned\n   from vCards or directories.\n\
    \   To avoid such confusion, client implementers and CUSAX service\n   providers\
    \ may choose to indicate the existence of a special\n   relationship between the\
    \ SIP and XMPP accounts of a CUSAX service.\n   For example, let's say that Alice's\
    \ service provider has opened both\n   an XMPP account and a SIP account for her.\
    \  During or after\n   provisioning, her client could indicate that alice@xmpp.example.com\n\
    \   has a CUSAX relationship to alice@sip.example.com (i.e., that they\n   are\
    \ two aspects of the same service).  This way, whenever Alice\n   triggers a call\
    \ to a contact in her XMPP roster, the client would\n   preferentially initiate\
    \ this call through her example.com SIP account\n   even if other possibilities\
    \ exist (such as the XMPP account where the\n   vCard was obtained or a SIP account\
    \ with another provider).\n   Similarly, the client would preferentially initiate\
    \ textual chat\n   sessions using her XMPP account.\n   If, on the other hand,\
    \ no relationship has been configured or\n   discovered between a SIP account\
    \ and an XMPP account, and the client\n   is aware of multiple telephony-capable\
    \ accounts, it ought to present\n   the user with the option of using XMPP Jingle\
    \ as one method for\n   engaging in audio and video interactions with a contact\
    \ who has an\n   XMPP address.  This can help to ensure that a CUSAX user can\
    \ complete\n   audio and video calls with XMPP users who are not part of a CUSAX\n\
    \   deployment.\n"
- title: 3.5.  Matching Incoming SIP Calls to XMPP JIDs
  contents:
  - "3.5.  Matching Incoming SIP Calls to XMPP JIDs\n   When receiving a SIP call,\
    \ a CUSAX client may wish to determine the\n   identity of the caller and a corresponding\
    \ XMPP roster entry so that\n   the receiving user could revert to chatting or\
    \ other forms of\n   communication that require XMPP.  To do so, a CUSAX client\
    \ could\n   search the user's roster for an entry whose vCard has a \"tel\" field\n\
    \   matching the originator of the call.  In addition, in order to avoid\n   the\
    \ effort of iterating over the entire roster of the user and\n   retrieving vCards\
    \ for all of the user's contacts, the receiving\n   client may guess at the identity\
    \ of the caller based a SIP Call-Info\n   header whose 'purpose' header field\
    \ parameter has a value of \"impp\"\n   as described in [RFC6993].  To enable\
    \ this usage, a sending client\n   would need to include such a Call-Info header\
    \ in the SIP messages\n   that it sends when initiating a call.  An example follows.\n\
    \   Call-Info: <xmpp:alice@xmpp.example.com> ;purpose=impp\n   Note that the information\
    \ from the Call-Info header should only be\n   used as a cue: the actual AOR-to-JID\
    \ binding would still need to be\n   confirmed by the vCard of a contact in the\
    \ receiving user's roster or\n   through some other trusted means (such as an\
    \ enterprise directory).\n   If this confirmation succeeds, the client would not\
    \ need to search\n   the entire roster and retrieve all vCards.  Not performing\
    \ the check\n   might enable any caller (including malicious ones) to employ someone\n\
    \   else's identity and perform various scams or Man-in-the-Middle\n   attacks.\n\
    \   However, although an AOR-to-JID binding can be a helpful hint to the\n   user,\
    \ nothing in the foregoing paragraph ought to be construed as\n   necessarily\
    \ discouraging users, clients, or service providers from\n   accepting calls originated\
    \ by entities that are not established\n   contacts of the user (e.g., as reflected\
    \ in the user's roster); that\n   is a policy matter for the user, client, or\
    \ service provider.\n   It is also worth noting that callers preferring to remain\
    \ anonymous\n   as per [RFC3325] would not provide Call-Info information.\n"
- title: 4.  Multi-Party Interactions
  contents:
  - "4.  Multi-Party Interactions\n   CUSAX clients that support the SIP conferencing\
    \ framework [RFC4353]\n   can detect when a call they are participating in is\
    \ actually a\n   conference and can then subscribe to conference state updates\
    \ as per\n   [RFC4575].  A regular SIP user agent might also use the same\n  \
    \ conference URI for text communication with the Message Session Relay\n   Protocol\
    \ (MSRP).  However, given that SIP's instant messaging\n   capabilities would\
    \ normally be disabled (or simply not supported) in\n   CUSAX deployments, an\
    \ XMPP Multi-User Chat (MUC) room [XEP-0045]\n   associated with the conference\
    \ can be announced/discovered through\n   <service-uris> bearing the \"grouptextchat\"\
    \ purpose [GROUPTEXTCHAT].\n   Similarly, an XMPP MUC room can advertise the SIP\
    \ URI of an\n   associated service for audio/video interactions using the\n  \
    \ 'audio-video-uri' field of the \"muc#roominfo\" data form [XEP-0004] to\n  \
    \ include extended information [XEP-0128] about the MUC room within\n   XMPP service\
    \ discovery [XEP-0030]; see [XEP-0045] for an example.\n   These methods would\
    \ enable a CUSAX-aware SIP conference server to\n   advertise the existence of\
    \ an associated XMPP chat room and for a\n   CUSAX-aware XMPP chat room to advertise\
    \ the existence of an\n   associated SIP conference server.\n   If a CUSAX client\
    \ joins the MUC room associated with a particular\n   call, it should not rely\
    \ on any synchronization between the two.\n   Both the SIP conference and the\
    \ XMPP MUC room would function\n   independently, each issuing and delivering\
    \ its own state updates.\n   Hence, it is possible that certain peers would temporarily\
    \ or\n   permanently be reachable in only one of the two conferences.  This\n\
    \   would typically be the case with single-stack clients that have only\n   joined\
    \ the SIP call or the XMPP MUC room.  It is therefore important\n   for CUSAX\
    \ clients to provide a clear indication to users as to the\n   level of involvement\
    \ of the various participants: i.e., a user needs\n   to be able to easily understand\
    \ whether a certain participant can\n   receive text messages, audio/video, or\
    \ both.\n   At the level of the CUSAX service, it is also possible to enforce\n\
    \   tighter integration between the XMPP MUC room and the SIP conference.\n  \
    \ Permissions, roles, kicks, and bans that are granted and performed in\n   the\
    \ MUC room can easily be imitated by the conference focus/mixer\n   into the SIP\
    \ call.  If, for example, a certain MUC member is muted,\n   the conference mixer\
    \ can choose to also apply the mute on the media\n   stream corresponding to that\
    \ participant.  However, the details and\n   exact level of such integration are\
    \ entirely up to implementers and\n   service providers.\n   The approach above\
    \ describes one relatively lightweight possibility\n   of combining SIP and XMPP\
    \ multi-party interaction semantics without\n   requiring tight integration between\
    \ the two.  As with the rest of\n   this document, this approach is by no means\
    \ normative.\n   Implementations and future documents may define other methods\
    \ or\n   provide other suggestions for improving the unified communications\n\
    \   user experience in cases of multi-user chats and conference calling.\n"
- title: 5.  Federation
  contents:
  - "5.  Federation\n   In theory, there are no technical reasons why federation (i.e.,\n\
    \   inter-domain communication) would require special behavior from CUSAX\n  \
    \ clients.  However, it is worth noting that differences in\n   administration\
    \ policies may sometimes lead to potentially confusing\n   user experiences.\n\
    \   For example, let's say atlanta.example.com observes the CUSAX\n   policies\
    \ described in this document.  All XMPP users at\n   atlanta.example.com are hence\
    \ configured to have vCards that match\n   their SIP identities.  Alice is therefore\
    \ used to making free, high-\n   quality SIP calls to all the people in her roster.\
    \  Alice can also\n   make calls to the Public Switched Telephone Network (PSTN)\
    \ by simply\n   dialing numbers.  She may even be used to these calls being billed\
    \ to\n   her online account, so she would be careful about how long they last.\n\
    \   This is not a problem for her since she can easily distinguish\n   between\
    \ a free SIP call (one that she made by calling one of her\n   roster entries)\
    \ from a paid PSTN call that she dialed as a number.\n   Then, Alice adds xmpp:bob@biloxi.example.com.\
    \  The Biloxi domain only\n   has an XMPP service.  There is no SIP server and\
    \ Bob uses an\n   XMPP-only client.  However, Bob has added his mobile number\
    \ to his\n   vCard in order to make it easily accessible to his contacts.  Alice's\n\
    \   client would pick up this number and make it possible for Alice to\n   start\
    \ a call to Bob's mobile phone number.\n   This could be a problem because, other\
    \ than the fact that Bob's\n   address is from a different domain, Alice would\
    \ have no obvious and\n   straightforward cues telling her that this is in fact\
    \ a call to the\n   PSTN.  In addition to the potentially lower audio quality,\
    \ Alice may\n   also end up incurring unexpected charges for such calls.\n   In\
    \ order to avoid such issues, providers maintaining a CUSAX service\n   for the\
    \ users in their domain may choose to provide additional cues\n   (e.g., a service-generated\
    \ signal that triggers a user-interface\n   warning in a CUSAX client, an auditory\
    \ tone, or a spoken message)\n   indicating that a call would incur unexpected\
    \ charges.\n   Another scenario arises when a SIP service allows communication\
    \ only\n   with intra-domain numbers; here, Alice might be prevented from\n  \
    \ establishing a call with Bob's mobile phone.  Providers should\n   therefore\
    \ make sure that calls to inter-domain numbers are flagged\n   with an appropriate\
    \ audio or textual warning.\n"
- title: 6.  Summary of Suggested Strategies
  contents:
  - "6.  Summary of Suggested Strategies\n   The following strategies are suggested\
    \ for CUSAX user agents:\n   1.   By default, prefer SIP for audio and video and\
    \ XMPP for\n        messaging and presence.\n   2.   Use XMPP for all forms of\
    \ communication with the contacts from\n        the XMPP roster, with the exception\
    \ of features that are based\n        on establishing real-time sessions (e.g.,\
    \ audio/video calls) for\n        which SIP should be used.\n   3.   Provide online\
    \ provisioning options for providers to remotely\n        set up SIP and XMPP\
    \ accounts so that users wouldn't need to go\n        through a multi-step configuration\
    \ process.\n   4.   Provide online provisioning options for providers to completely\n\
    \        disable features for an account associated with a given protocol\n  \
    \      (SIP or XMPP) if the features are preferred in another protocol\n     \
    \   (XMPP or SIP).\n   5.   Present a \"Call\" option for each roster entry that\
    \ has a\n        properly set \"tel\" field in the vCard or equivalent.\n   6.\
    \   If the client is provisioned with only a single telephony-\n        capable\
    \ account, initiate calls immediately upon user request\n        without asking\
    \ users to indicate an account that the call should\n        go through.\n   7.\
    \   If no relationship has been configured or discovered between a\n        SIP\
    \ account and an XMPP account, and the client is aware of\n        multiple telephony-capable\
    \ accounts, present the user with the\n        choice of reaching the contact\
    \ through any of those accounts.\n   8.   If known, indicate the existence of\
    \ a special relationship\n        between the SIP and XMPP accounts of a CUSAX\
    \ service.\n   9.   Optionally, present the XMPP connection as an \"instant\n\
    \        messaging\" or a \"chat\" account and the SIP connection as a\n     \
    \   \"Voice and Video\" or a \"Telephony\" account.\n   10.  Optionally, determine\
    \ the identity of the audio/video caller and\n        a corresponding XMPP roster\
    \ entry so that the user could use\n        textual chatting or other forms of\
    \ communication that require\n        XMPP.\n   11.  Optionally, delay the XMPP\
    \ connection until after a SIP\n        connection has been successfully registered.\n\
    \   12.  Optionally, check for alternative communication methods (SIP\n      \
    \  addresses advertised over XMPP and XMPP addresses advertised\n        over\
    \ SIP).\n   The following strategies are suggested for CUSAX services:\n   1.\
    \  Use online provisioning and configuration of accounts so that\n       users\
    \ won't need to set up two separate accounts for the CUSAX\n       service.\n\
    \   2.  Use online provisioning so that calling features are disabled for\n  \
    \     all XMPP accounts.\n   3.  Ensure that at least one of the vCard \"tel\"\
    \ fields for each XMPP\n       user is properly populated with a SIP URI that\
    \ is reachable\n       through the SIP service.\n   4.  Optionally, include the\
    \ \"video\" tel type for accounts that are\n       capable of handling video communication.\n\
    \   5.  Optionally, provision clients with information indicating that\n     \
    \  specific SIP and XMPP accounts are related in a CUSAX service.\n   6.  Optionally,\
    \ attach a \"Call-Info\" header with an \"impp\" purpose to\n       all SIP INVITE\
    \ messages, so that clients can more rapidly\n       associate a caller with a\
    \ roster entry and display a \"Caller ID\".\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   Use of the same user agent with two different\
    \ accounts providing\n   complementary features introduces the possibility of\
    \ mismatches\n   between the security profiles of those accounts or features.\
    \  Two\n   security mismatches of particular concern are:\n   o  The SIP aspect\
    \ and XMPP aspect of a CUSAX service might offer\n      different authentication\
    \ options (e.g., digest authentication for\n      SIP as specified in [RFC3261]\
    \ and Salted Challenge Response\n      Authentication Mechanism (SCRAM) authentication\
    \ [RFC5802] for XMPP\n      as specified in [RFC6120]).  Because SIP uses a password-based\n\
    \      method (digest) and XMPP uses a pluggable framework for\n      authentication\
    \ via the Simple Authentication and Security Layer\n      (SASL) technology [RFC4422],\
    \ it is also possible that the XMPP\n      connection could be authenticated using\
    \ a password-free method\n      such as client certificates with SASL EXTERNAL,\
    \ even though a\n      username and password is used for the SIP connection.\n\
    \   o  The Transport Layer Security (TLS) [RFC5246] ciphersuites offered\n   \
    \   or negotiated on the XMPP side might be different from those on\n      the\
    \ SIP side because of implementation or configuration\n      differences between\
    \ the SIP server and the XMPP server.  Even more\n      seriously, a CUSAX client\
    \ might successfully negotiate TLS when\n      connecting to the XMPP aspect of\
    \ the service but not when\n      connecting to the SIP aspect, or vice versa.\
    \  In this situation,\n      an end user might think that the combined CUSAX session\
    \ with the\n      service is protected by TLS, even though only one aspect is\n\
    \      protected.\n   Security mismatches such as these (as well as others related\
    \ to end-\n   to-end encryption of messages or media) introduce the possibility\
    \ of\n   downgrade attacks, eavesdropping, information leakage, and other\n  \
    \ security vulnerabilities.  User agent developers and service\n   providers must\
    \ ensure that such mismatches are avoided as much as\n   possible (e.g., by enforcing\
    \ common and strong security\n   configurations and policies across protocols).\
    \  Specifically, if both\n   protocols are not safeguarded by similar levels of\
    \ cryptographic\n   protection, the user must be informed of that fact and given\
    \ the\n   opportunity to bring both up to the same level.\n   Section 5 discusses\
    \ potential issues that may arise due to a mismatch\n   between client capabilities,\
    \ such as calls being initiated with costs\n   that are not expected by the end\
    \ user.  Such issues could be\n   triggered maliciously, as well as by accident.\
    \  Implementers\n   therefore need to provide necessary cues to raise user awareness\
    \ as\n   suggested in Section 5.\n   Refer to the specifications for the relevant\
    \ SIP and XMPP features\n   for detailed security considerations applying to each\
    \ \"stack\" in a\n   CUSAX client.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC3261]        Rosenberg, J., Schulzrinne, H.,\
    \ Camarillo, G.,\n                    Johnston, A., Peterson, J., Sparks, R.,\
    \ Handley, M.,\n                    and E. Schooler, \"SIP: Session Initiation\
    \ Protocol\",\n                    RFC 3261, June 2002.\n   [RFC6120]        Saint-Andre,\
    \ P., \"Extensible Messaging and Presence\n                    Protocol (XMPP):\
    \ Core\", RFC 6120, March 2011.\n   [RFC6121]        Saint-Andre, P., \"Extensible\
    \ Messaging and Presence\n                    Protocol (XMPP): Instant Messaging\
    \ and Presence\",\n                    RFC 6121, March 2011.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [GROUPTEXTCHAT]  Ivov, E., \"A Group Text Chat\
    \ Purpose for Conference\n                    and Service URIs in the Session\
    \ Initiation Protocol\n                    (SIP) Event Package for Conference\
    \ State\", Work\n                    in Progress, June 2013.\n   [RFC2026]   \
    \     Bradner, S., \"The Internet Standards Process --\n                    Revision\
    \ 3\", BCP 9, RFC 2026, October 1996.\n   [RFC3325]        Jennings, C., Peterson,\
    \ J., and M. Watson, \"Private\n                    Extensions to the Session\
    \ Initiation Protocol (SIP)\n                    for Asserted Identity within\
    \ Trusted Networks\",\n                    RFC 3325, November 2002.\n   [RFC4353]\
    \        Rosenberg, J., \"A Framework for Conferencing with\n                \
    \    the Session Initiation Protocol (SIP)\", RFC 4353,\n                    February\
    \ 2006.\n   [RFC4422]        Melnikov, A. and K. Zeilenga, \"Simple Authentication\n\
    \                    and Security Layer (SASL)\", RFC 4422, June 2006.\n   [RFC4575]\
    \        Rosenberg, J., Schulzrinne, H., and O. Levin, \"A\n                 \
    \   Session Initiation Protocol (SIP) Event Package for\n                    Conference\
    \ State\", RFC 4575, August 2006.\n   [RFC5246]        Dierks, T. and E. Rescorla,\
    \ \"The Transport Layer\n                    Security (TLS) Protocol Version 1.2\"\
    , RFC 5246,\n                    August 2008.\n   [RFC5802]        Newman, C.,\
    \ Menon-Sen, A., Melnikov, A., and N.\n                    Williams, \"Salted\
    \ Challenge Response Authentication\n                    Mechanism (SCRAM) SASL\
    \ and GSS-API Mechanisms\",\n                    RFC 5802, July 2010.\n   [RFC6350]\
    \        Perreault, S., \"vCard Format Specification\",\n                    RFC\
    \ 6350, August 2011.\n   [RFC6914]        Rosenberg, J., \"SIMPLE Made Simple:\
    \ An Overview of\n                    the IETF Specifications for Instant Messaging\
    \ and\n                    Presence Using the Session Initiation Protocol\n  \
    \                  (SIP)\", RFC 6914, April 2013.\n   [RFC6993]        Saint-Andre,\
    \ P., \"Instant Messaging and Presence\n                    Purpose for the Call-Info\
    \ Header Field in the\n                    Session Initiation Protocol (SIP)\"\
    , RFC 6993,\n                    July 2013.\n   [RFC7033]        Jones, P., Salgueiro,\
    \ G., Jones, M., and J. Smarr,\n                    \"WebFinger\", RFC 7033, September\
    \ 2013.\n   [XEP-0004]       Eatmon, R., Hildebrand, J., Miller, J., Muldowney,\n\
    \                    T., and P. Saint-Andre, \"Data Forms\", XSF XEP 0004,\n \
    \                   August 2007.\n   [XEP-0030]       Hildebrand, J., Millard,\
    \ P., Eatmon, R., and P.\n                    Saint-Andre, \"Service Discovery\"\
    , XSF XEP 0030,\n                    June 2008.\n   [XEP-0045]       Saint-Andre,\
    \ P., \"Multi-User Chat\", XSF XEP 0045,\n                    February 2012.\n\
    \   [XEP-0054]       Saint-Andre, P., \"vcard-temp\", XSF XEP 0054,\n        \
    \            July 2008.\n   [XEP-0128]       Saint-Andre, P., \"Service Discovery\
    \ Extensions\", XSF\n                    XEP 0128, October 2004.\n   [XEP-0152]\
    \       Hildebrand, J. and P. Saint-Andre, \"XEP-0152:\n                    Reachability\
    \ Addresses\", XEP XEP-0152,\n                    September 2013.\n   [XEP-0166]\
    \       Ludwig, S., Beda, J., Saint-Andre, P., McQueen, R.,\n                \
    \    Egan, S., and J. Hildebrand, \"Jingle\", XSF XEP 0166,\n                \
    \    December 2009.\n   [XEP-0167]       Ludwig, S., Saint-Andre, P., Egan, S.,\
    \ McQueen, R.,\n                    and D. Cionoiu, \"Jingle RTP Sessions\", XSF\
    \ XEP 0167,\n                    December 2009.\n   [XEP-0292]       Saint-Andre,\
    \ P. and S. Mizzi, \"vCard4 Over XMPP\",\n                    XSF XEP 0292, September\
    \ 2013.\n"
- title: Appendix A.  Acknowledgements
  contents:
  - "Appendix A.  Acknowledgements\n   This document is inspired by the \"SIXPAC\"\
    \ work of Markus Isomaki and\n   Simo Veikkolainen.  Markus also provided various\
    \ suggestions for\n   improving the document.\n   The authors would also like\
    \ to thank the following people for their\n   reviews and suggestions: Sebastien\
    \ Couture, Dan-Christian Bogos,\n   Richard Brady, Olivier Crete, Aaron Evans,\
    \ Kevin Gallagher, Adrian\n   Georgescu, Saul Ibarra Corretge, David Laban, Gergely\
    \ Lukacsy,\n   Spencer MacDonald, Murray Mar, Daniel Pocock, Travis Reitter, and\n\
    \   Gonzalo Salgueiro.\n   Brian Carpenter, Ted Hardie, Paul Hoffman, and Benson\
    \ Schliesser\n   reviewed the document on behalf of the General Area Review Team,\
    \ the\n   Applications Area Directorate, the Security Directorate, and the\n \
    \  Operations and Management Directorate, respectively.\n   Benoit Claise, Barry\
    \ Leiba, and Pete Resnick provided helpful and\n   substantive feedback during\
    \ IESG review.\n   The document shepherd was Mary Barnes.  The sponsoring Area\
    \ Director\n   was Gonzalo Camarillo.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Emil Ivov\n   Jitsi\n   Strasbourg  67000\n   France\n\
    \   Phone: +33-177-624-330\n   EMail: emcho@jitsi.org\n   Peter Saint-Andre\n\
    \   Cisco Systems, Inc.\n   1899 Wynkoop Street, Suite 600\n   Denver, CO  80202\n\
    \   USA\n   Phone: +1-303-308-3282\n   EMail: psaintan@cisco.com\n   Enrico Marocco\n\
    \   Telecom Italia\n   Via G. Reiss Romoli, 274\n   Turin  10148\n   Italy\n \
    \  EMail: enrico.marocco@telecomitalia.it\n"
