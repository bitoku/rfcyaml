- title: __initial_text__
  contents:
  - '      Additional XML Security Uniform Resource Identifiers (URIs)

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   A number of Uniform Resource Identifiers (URIs) intended for use\
    \ with\n   XML Digital Signatures, Encryption, and Canonicalization are defined.\n\
    \   These URIs identify algorithms and types of keying information.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n       2.2.  SignatureMethod Message Authentication Code Algorithms..\
    \  4\n       2.6.  EncryptionMethod Algorithms............................. 10\n\
    \             2.6.1.  ARCFOUR Encryption Algorithm.................... 10\n  \
    \           2.6.2.  Camellia Block Encryption....................... 10\n    \
    \         2.6.3.  Camellia Key Wrap............................... 11\n      \
    \       2.6.4.  PSEC-KEM........................................ 11\n   3.  KeyInfo.......................................................\
    \ 12\n       3.1.  PKCS #7 Bag of Certificates and CRLs.................... 12\n\
    \       3.2.  Additional RetrievalMethod Type Values.................. 12\n  \
    \ 4.  IANA Considerations........................................... 13\n   5.\
    \  Security Considerations....................................... 13\n   Acknowledgements..................................................\
    \ 13\n   Normative References.............................................. 13\n\
    \   Informative References............................................ 15\n  \
    \ Author's Address.................................................. 16\n   Full\
    \ Copyright Statement.......................................... 17\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   XML Digital Signatures, Canonicalization, and Encryption\
    \ have been\n   standardized by the W3C and the joint IETF/W3C XMLDSIG working\
    \ group.\n   All of these are now W3C Recommendations and IETF Informational or\n\
    \   Standards Track documents.  They are available as follows:\n   IETF level\
    \           W3C REC     Topic\n   -----------          -------     -----\n   [RFC3275]\
    \  Draft Std [XMLDSIG]   XML Digital Signatures\n   [RFC3076]  Info      [CANON]\
    \     Canonical XML\n    - - - - - -         [XMLENC]    XML Encryption\n   [RFC3741]\
    \  Info      [EXCANON]   Exclusive XML Canonicalization\n   All of these standards\
    \ and recommendations use URIs [RFC2396] to\n   identify algorithms and keying\
    \ information types.  This document\n   provides a convenient reference list of\
    \ URIs and descriptions for\n   algorithms in which there is substantial interest,\
    \ but which cannot\n   or have not been included in the main documents.  Note\
    \ that raising\n   XML digital signature to a Draft Standard in the IETF required\n\
    \   removal of any algorithms for which interoperability from the main\n   standards\
    \ document has not been demonstrated.  This required removal\n   of the Minimal\
    \ Canonicalization algorithm, in which there appears to\n   be a continued interest,\
    \ to be dropped from the standards track\n   specification.  It is included here.\n\
    \   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\"\
    ,\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in\
    \ this\n   document are to be interpreted as described in [RFC2119].\n"
- title: 2.  Algorithms
  contents:
  - "2.  Algorithms\n   The URI [RFC2396] being dropped from the standard because\
    \ of the\n   transition from Proposed Standard to Draft Standard is included in\n\
    \   Section 2.4 with its original prefix so as to avoid changing the\n   XMLDSIG\
    \ standard's namespace.\n      http://www.w3.org/2000/09/xmldsig#\n   Additional\
    \ algorithms are given URIs that start with:\n      http://www.w3.org/2001/04/xmldsig-more#\n\
    \   An \"xmldsig-more\" URI does not imply any official W3C status for\n   these\
    \ algorithms or identifiers or that they are only useful in\n   digital signatures.\
    \  Currently, dereferencing such URIs may or may\n   not produce a temporary placeholder\
    \ document.  Permission to use this\n   URI prefix has been given by the W3C.\n"
- title: 2.1.  DigestMethod Algorithms
  contents:
  - "2.1.  DigestMethod Algorithms\n   These algorithms are usable wherever a DigestMethod\
    \ element occurs.\n"
- title: 2.1.1.  MD5
  contents:
  - "2.1.1.  MD5\n   Identifier:\n      http://www.w3.org/2001/04/xmldsig-more#md5\n\
    \   The MD5 algorithm [RFC1321] takes no explicit parameters.  An example\n  \
    \ of an MD5 DigestAlgorithm element is:\n   <DigestAlgorithm\n      Algorithm=\"\
    http://www.w3.org/2001/04/xmldsig-more#md5\"/>\n   An MD5 digest is a 128-bit\
    \ string.  The content of the DigestValue\n   element shall be the base64 [RFC2405]\
    \ encoding of this bit string\n   viewed as a 16-octet octet stream.\n"
- title: 2.1.2.  SHA-224
  contents:
  - "2.1.2.  SHA-224\n   Identifier:\n      http://www.w3.org/2001/04/xmldsig-more#sha224\n\
    \   The SHA-224 algorithm [FIPS-180-2change, RFC3874] takes no explicit\n   parameters.\
    \  An example of a SHA-224 DigestAlgorithm element is:\n   <DigestAlgorithm\n\
    \      Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#sha224\" />\n   A SHA-224\
    \ digest is a 224 bit string.  The content of the DigestValue\n   element shall\
    \ be the base64 [RFC2405] encoding of this string viewed\n   as a 28-octet stream.\
    \  Because it takes roughly the same amount of\n   effort to compute a SHA-224\
    \ message digest as a SHA-256 digest, and\n   terseness is usually not a criteria\
    \ in an XML application,\n   consideration should be given to the use of SHA-256\
    \ as an\n   alternative.\n"
- title: 2.1.3.  SHA-384
  contents:
  - "2.1.3.  SHA-384\n   Identifier:\n      http://www.w3.org/2001/04/xmldsig-more#sha384\n\
    \   The SHA-384 algorithm [FIPS-180-2] takes no explicit parameters.  An\n   example\
    \ of a SHA-384 DigestAlgorithm element is:\n   <DigestAlgorithm\n      Algorithm=\"\
    http://www.w3.org/2001/04/xmldsig-more#sha384\" />\n   A SHA-384 digest is a 384\
    \ bit string.  The content of the DigestValue\n   element shall be the base64\
    \ [RFC2405] encoding of this string viewed\n   as a 48-octet stream.  Because\
    \ it takes roughly the same amount of\n   effort to compute a SHA-384 message\
    \ digest as a SHA-512 digest and\n   terseness is usually not a criteria in XML\
    \ application, consideration\n   should be given to the use of SHA-512 as an alternative.\n"
- title: 2.2.  SignatureMethod Message Authentication Code Algorithms
  contents:
  - "2.2.  SignatureMethod Message Authentication Code Algorithms\n   Note: Some text\
    \ in this section is duplicated from [RFC3275] for the\n   convenience of the\
    \ reader.  RFC 3275 is normative in case of\n   conflict.\n"
- title: 2.2.1.  HMAC-MD5
  contents:
  - "2.2.1.  HMAC-MD5\n   Identifier:\n      http://www.w3.org/2001/04/xmldsig-more#hmac-md5\n\
    \   The HMAC algorithm [RFC2104] takes the truncation length in bits as a\n  \
    \ parameter; if the parameter is not specified then all the bits of the\n   hash\
    \ are output.  An example of an HMAC-MD5 SignatureMethod element\n   is as follows:\n\
    \   <SignatureMethod\n      Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#hmac-md5\"\
    >\n      <HMACOutputLength>112</HMACOutputLength>\n   </SignatureMethod>\n   The\
    \ output of the HMAC algorithm is ultimately the output (possibly\n   truncated)\
    \ of the chosen digest algorithm.  This value shall be\n   base64 [RFC2405] encoded\
    \ in the same straightforward fashion as the\n   output of the digest algorithms.\
    \  For example, the SignatureValue\n   element for the HMAC-MD5 digest\n     \
    \ 9294727A 3638BB1C 13F48EF8 158BFC9D\n   from the test vectors in [RFC2104] would\
    \ be\n      kpRyejY4uxwT9I74FYv8nQ==\n   Schema Definition:\n      <simpleType\
    \ name=\"HMACOutputLength\">\n         <restriction base=\"integer\" />\n    \
    \  </simpleType>\n   DTD:\n      <!ELEMENT HMACOutputLength (#PCDATA) >\n   The\
    \ Schema Definition and DTD immediately shown above are taken from\n   [RFC3275].\n\
    \   Although some cryptographic suspicions have recently been cast on MD5\n  \
    \ for use in signatures such as RSA-MD5 below, this does not effect use\n   of\
    \ MD5 in HMAC.\n"
- title: 2.2.2.  HMAC SHA Variations
  contents:
  - "2.2.2.  HMAC SHA Variations\n   Identifiers:\n      http://www.w3.org/2001/04/xmldsig-more#hmac-sha224\n\
    \      http://www.w3.org/2001/04/xmldsig-more#hmac-sha256\n      http://www.w3.org/2001/04/xmldsig-more#hmac-sha384\n\
    \      http://www.w3.org/2001/04/xmldsig-more#hmac-sha512\n   SHA-224, SHA-256,\
    \ SHA-384, and SHA-512 [FIPS-180-2, FIPS-180-2change,\n   RFC3874] can also be\
    \ used in HMAC as described in section 2.2.1 for\n   HMAC-MD5.\n"
- title: 2.2.3.  HMAC-RIPEMD160
  contents:
  - "2.2.3.  HMAC-RIPEMD160\n   Identifier:\n      http://www.w3.org/2001/04/xmldsig-more#hmac-ripemd160\n\
    \   RIPEMD-160 [RIPEMD-160] can also be used in HMAC as described in\n   section\
    \ 2.2.1 for HMAC-MD5.\n"
- title: 2.3.  SignatureMethod Public Key Signature Algorithms
  contents:
  - "2.3.  SignatureMethod Public Key Signature Algorithms\n   These algorithms are\
    \ distinguished from those in Section 2.2 in that\n   they use public key methods.\
    \  The verification key is different from\n   and not feasibly derivable from\
    \ the signing key.\n"
- title: 2.3.1.  RSA-MD5
  contents:
  - "2.3.1.  RSA-MD5\n   Identifier:\n      http://www.w3.org/2001/04/xmldsig-more#rsa-md5\n\
    \   RSA-MD5 implies the PKCS#1 v1.5 padding algorithm described in\n   [RFC3447].\
    \  An example of use is\n   <SignatureMethod\n      Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-md5\"\
    \ />\n   The SignatureValue content for an RSA-MD5 signature is the base64\n \
    \  [RFC2405] encoding of the octet string computed as per [RFC3447],\n   section\
    \ 8.1.1, signature generation for the RSASSA-PKCS1-v1_5\n   signature scheme.\
    \  As specified in the EMSA-PKCS1-V1_5-ENCODE\n   function in [RFC3447, section\
    \ 9.2.1], the value input to the\n   signature function MUST contain a pre-pended\
    \ algorithm object\n   identifier for the hash function, but the availability\
    \ of an ASN.1\n   parser and recognition of OIDs are not required of a signature\n\
    \   verifier.  The PKCS#1 v1.5 representation appears as:\n      CRYPT (PAD (ASN.1\
    \ (OID, DIGEST (data))))\n   Note that the padded ASN.1 will be of the following\
    \ form:\n      01 | FF* | 00 | prefix | hash\n   Vertical bar (\"|\") represents\
    \ concatenation.  \"01\", \"FF\", and \"00\"\n   are fixed octets of the corresponding\
    \ hexadecimal value and the\n   asterisk (\"*\") after \"FF\" indicates repetition.\
    \  \"hash\" is the MD5\n   digest of the data.  \"prefix\" is the ASN.1 BER MD5\
    \ algorithm\n   designator prefix required in PKCS #1 [RFC3447], that is:\n  \
    \    hex 30 20 30 0c 06 08 2a 86 48 86 f7 0d 02 05 05 00 04 10\n   This prefix\
    \ is included to facilitate the use of standard\n   cryptographic libraries. \
    \ The FF octet MUST be repeated enough times\n   that the value of the quantity\
    \ being CRYPTed is exactly one octet\n   shorter than the RSA modulus.\n   Due\
    \ to increases in computer processor power and advances in\n   cryptography, use\
    \ of RSA-MD5 is NOT RECOMMENDED.\n"
- title: 2.3.2.  RSA-SHA256
  contents:
  - "2.3.2.  RSA-SHA256\n   Identifier:\n      http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\n\
    \   This implies the PKCS#1 v1.5 padding algorithm [RFC3447] as described\n  \
    \ in section 2.3.1, but with the ASN.1 BER SHA-256 algorithm designator\n   prefix.\
    \  An example of use is:\n   <SignatureMethod\n      Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\"\
    \ />\n"
- title: 2.3.3 RSA-SHA384
  contents:
  - "2.3.3 RSA-SHA384\n   Identifier:\n      http://www.w3.org/2001/04/xmldsig-more#rsa-sha384\n\
    \   This implies the PKCS#1 v1.5 padding algorithm [RFC3447] as described\n  \
    \ in section 2.3.1, but with the ASN.1 BER SHA-384 algorithm designator\n   prefix.\
    \  An example of use is:\n   <SignatureMethod\n      Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha384\"\
    \ />\n   Because it takes about the same effort to calculate a SHA-384 message\n\
    \   digest as a SHA-512 message digest, it is suggested that RSA-SHA512\n   be\
    \ used in preference to RSA-SHA384 where possible.\n"
- title: 2.3.4.  RSA-SHA512
  contents:
  - "2.3.4.  RSA-SHA512\n   Identifier:\n      http://www.w3.org/2001/04/xmldsig-more#rsa-sha512\n\
    \   This implies the PKCS#1 v1.5 padding algorithm [RFC3447] as described\n  \
    \ in section 2.3.1, but with the ASN.1 BER SHA-512 algorithm designator\n   prefix.\
    \  An example of use is:\n   <SignatureMethod\n      Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha512\"\
    \ />\n"
- title: 2.3.5.  RSA-RIPEMD160
  contents:
  - "2.3.5.  RSA-RIPEMD160\n   Identifier:\n     http://www.w3.org/2001/04/xmldsig-more/rsa-ripemd160\n\
    \   This implies the PKCS#1 v1.5 padding algorithm [RFC3447], as\n   described\
    \ in section 2.3.1, but with the ASN.1 BER RIPEMD160\n   algorithm designator\
    \ prefix.  An example of use is:\n   <SignatureMethod\n     Algorithm=\"http://www.w3.org/2001/04/xmldsig-more/rsa-ripemd160\"\
    \ />\n"
- title: 2.3.6.  ECDSA-SHA*
  contents:
  - "2.3.6.  ECDSA-SHA*\n   Identifiers\n      http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1\n\
    \      http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha224\n      http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256\n\
    \      http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384\n      http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512\n\
    \   The Elliptic Curve Digital Signature Algorithm (ECDSA) [FIPS-186-2]\n   is\
    \ the elliptic curve analogue of the DSA (DSS) signature method.\n   For detailed\
    \ specifications on how to use it with SHA hash functions\n   and XML Digital\
    \ Signature, please see [X9.62] and [ECDSA].\n"
- title: 2.3.7.  ESIGN-SHA1
  contents:
  - "2.3.7.  ESIGN-SHA1\n   Identifier\n      http://www.w3.org/2001/04/xmldsig-more#esign-sha1\n\
    \      http://www.w3.org/2001/04/xmldsig-more#esign-sha224\n      http://www.w3.org/2001/04/xmldsig-more#esign-sha256\n\
    \      http://www.w3.org/2001/04/xmldsig-more#esign-sha384\n      http://www.w3.org/2001/04/xmldsig-more#esign-sha512\n\
    \   The ESIGN algorithm specified in [IEEE-P1363a] is a signature scheme\n   based\
    \ on the integer factorization problem.  It is much faster than\n   previous digital\
    \ signature schemes so ESIGN can be implemented on\n   smart cards without special\
    \ co-processors.\n   An example of use is:\n   <SignatureMethod\n      Algorithm=\"\
    http://www.w3.org/2001/04/xmldsig-more#esign-sha1\" />\n"
- title: 2.4.  Minimal Canonicalization
  contents:
  - "2.4.  Minimal Canonicalization\n   Thus far two independent interoperable implementations\
    \ of Minimal\n   Canonicalization have not been announced.  Therefore, when XML\n\
    \   Digital Signature was advanced from Proposed Standard [RFC3075] to\n   Draft\
    \ Standard [RFC3275], Minimal Canonicalization was dropped from\n   the standards\
    \ track documents.  However, there is still interest in\n   Minimal Canonicalization,\
    \ indicating its possible future use.  For\n   its definition, see [RFC3075],\
    \ Section 6.5.1.\n   For reference, its identifier remains:\n      http://www.w3.org/2000/09/xmldsig#minimal\n"
- title: 2.5.  Transform Algorithms
  contents:
  - "2.5.  Transform Algorithms\n   Note that all CanonicalizationMethod algorithms\
    \ can also be used as\n   transform algorithms.\n"
- title: 2.5.1.  XPointer
  contents:
  - "2.5.1.  XPointer\n   Identifier:\n      http://www.w3.org/2001/04/xmldsig-more/xptr\n\
    \   This transform algorithm takes an [XPointer] as an explicit\n   parameter.\
    \  An example of use is [RFC3092]:\n   <Transform\n      Algorithm=\"http://www.w3.org/2001/04/xmldsig-more/xptr\"\
    >\n      <XPointer\n         xmlns=\"http://www.w3.org/2001/04/xmldsig-more/xptr\"\
    >\n            xpointer(id(\"foo\")) xmlns(bar=http://foobar.example)\n      \
    \      xpointer(//bar:Zab[@Id=\"foo\"])\n      </XPointer>\n   </Transform>\n\
    \   Schema Definition:\n      <element name=\"XPointer\" type=\"string\">\n  \
    \ DTD:\n      <!ELEMENT XPointer (#PCDATA) >\n   Input to this transform is an\
    \ octet stream (which is then parsed into\n   XML).\n   Output from this transform\
    \ is a node set; the results of the XPointer\n   are processed as defined in the\
    \ XMLDSIG specification [RFC3275] for a\n   same document XPointer.\n"
- title: 2.6.  EncryptionMethod Algorithms
  contents:
  - "2.6.  EncryptionMethod Algorithms\n   This subsection gives identifiers and information\
    \ for several\n   EncryptionMethod Algorithms.\n"
- title: 2.6.1.  ARCFOUR Encryption Algorithm
  contents:
  - "2.6.1.  ARCFOUR Encryption Algorithm\n   Identifier:\n      http://www.w3.org/2001/04/xmldsig-more#arcfour\n\
    \   ARCFOUR is a fast, simple stream encryption algorithm that is\n   compatible\
    \ with RSA Security's RC4 algorithm.  An example of the\n   EncryptionMethod element\
    \ using ARCFOUR is\n   <EncryptionMethod\n      Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#arcfour\"\
    >\n      <KeySize>40</KeySize>\n   </EncryptionMethod>\n   Note that Arcfour makes\
    \ use of the generic KeySize parameter\n   specified and defined in [XMLENC].\n"
- title: 2.6.2.  Camellia Block Encryption
  contents:
  - "2.6.2.  Camellia Block Encryption\n   Identifiers:\n      http://www.w3.org/2001/04/xmldsig-more#camellia128-cbc\n\
    \      http://www.w3.org/2001/04/xmldsig-more#camellia192-cbc\n      http://www.w3.org/2001/04/xmldsig-more#camellia256-cbc\n\
    \   Camellia is an efficient and secure block cipher with the same\n   interface\
    \ as the AES [Camellia, RFC3713], that is 128-bit block size\n   and 128, 192,\
    \ and 256 bit key sizes.  In XML Encryption, Camellia is\n   used in the same\
    \ way as the AES: It is used in the Cipher Block\n   Chaining (CBC) mode with\
    \ a 128-bit initialization vector (IV).  The\n   resulting cipher text is prefixed\
    \ by the IV.  If included in XML\n   output, it is then base64 encoded.  An example\
    \ Camellia\n   EncryptionMethod is as follows:\n   <EncryptionMethod\n      Algorithm=\n\
    \      \"http://www.w3.org/2001/04/xmldsig-more#camellia128-cbc\" />\n"
- title: 2.6.3.  Camellia Key Wrap
  contents:
  - "2.6.3.  Camellia Key Wrap\n   Identifiers:\n      http://www.w3.org/2001/04/xmldsig-more#kw-camellia128\n\
    \      http://www.w3.org/2001/04/xmldsig-more#kw-camellia192\n      http://www.w3.org/2001/04/xmldsig-more#kw-camellia256\n\
    \   The Camellia [Camellia, RFC3713] key wrap is identical to the AES key\n  \
    \ wrap algorithm [RFC3394] specified in the XML Encryption standard\n   with \"\
    AES\" replaced by \"Camellia\".  As with AES key wrap, the check\n   value is\
    \ 0xA6A6A6A6A6A6A6A6.\n   The algorithm is the same regardless of the size of\
    \ the Camellia key\n   used in wrapping (called the key encrypting key or KEK).\
    \  The\n   implementation of Camellia is OPTIONAL.  However, if it is supported,\n\
    \   the same implementation guidelines of which combinations of KEK size\n   and\
    \ wrapped key size should be required to be supported and which are\n   optional\
    \ to be supported should be followed as for AES.  That is to\n   say, if Camellia\
    \ key wrap is supported, then wrapping 128-bit keys\n   with a 128-bit KEK and\
    \ wrapping 256-bit keys with a 256-bit KEK are\n   REQUIRED and all other combinations\
    \ are OPTIONAL.\n   An example of use is:\n   <EncryptionMethod\n      Algorithm=\n\
    \      \"http://www.w3.org/2001/04/xmldsig-more#kw-camellia128\" />\n"
- title: 2.6.4.  PSEC-KEM
  contents:
  - "2.6.4.  PSEC-KEM\n   Identifier:\n      http://www.w3.org/2001/04/xmldsig-more#psec-kem\n\
    \   The PSEC-KEM algorithm, specified in [ISO/IEC-18033-2], is a key\n   encapsulation\
    \ mechanism using elliptic curve encryption.\n   An example of use is:\n   <EncryptionMethod\n\
    \      Algorithm=\"http://www.w3.org/2001/04/xmlenc#psec-kem\">\n      <ECParameters>\n\
    \         <Version>version</Version>\n         <FieldID>id</FieldID>\n       \
    \  <Curve>curve</Curve>\n         <Base>base</Base>\n         <Order>order</Order>\n\
    \         <Cofactor>cofactor</Cofactor>\n      </ECParameters>\n   </EncryptionMethod>\n\
    \   See [ISO/IEC-18033-2] for information on the parameters above.\n"
- title: 3.  KeyInfo
  contents:
  - "3.  KeyInfo\n   In section 3.1 a new KeyInfo element child is specified, while\
    \ in\n   section 3.2 additional KeyInfo Type values for use in RetrievalMethod\n\
    \   are specified.\n"
- title: '3.1.  PKCS #7 Bag of Certificates and CRLs'
  contents:
  - "3.1.  PKCS #7 Bag of Certificates and CRLs\n   A PKCS #7 [RFC2315] \"signedData\"\
    \ can also be used as a bag of\n   certificates and/or certificate revocation\
    \ lists (CRLs).  The\n   PKCS7signedData element is defined to accommodate such\
    \ structures\n   within KeyInfo.  The binary PKCS #7 structure is base64 [RFC2405]\n\
    \   encoded.  Any signer information present is ignored.  The following\n   is\
    \ an example, eliding the base64 data [RFC3092]:\n   <foo:PKCS7signedData\n  \
    \    xmlns:foo=\"http://www.w3.org/2001/04/xmldsig-more\">\n      ...\n   </foo:PKCS7signedData>\n"
- title: 3.2.  Additional RetrievalMethod Type Values
  contents:
  - "3.2.  Additional RetrievalMethod Type Values\n   The Type attribute of RetrievalMethod\
    \ is an optional identifier for\n   the type of data to be retrieved.  The result\
    \ of dereferencing a\n   RetrievalMethod reference for all KeyInfo types with\
    \ an XML structure\n   is an XML element or document with that element as the\
    \ root.  The\n   various \"raw\" key information types return a binary value.\
    \  Thus,\n   they require a Type attribute because they are not unambiguously\n\
    \   parseable.\n   Identifiers:\n      http://www.w3.org/2001/04/xmldsig-more#KeyValue\n\
    \      http://www.w3.org/2001/04/xmldsig-more#RetrievalMethod\n      http://www.w3.org/2001/04/xmldsig-more#KeyName\n\
    \      http://www.w3.org/2001/04/xmldsig-more#rawX509CRL\n      http://www.w3.org/2001/04/xmldsig-more#rawPGPKeyPacket\n\
    \      http://www.w3.org/2001/04/xmldsig-more#rawSPKISexp\n      http://www.w3.org/2001/04/xmldsig-more#PKCS7signedData\n\
    \      http://www.w3.org/2001/04/xmldsig-more#rawPKCS7signedData\n"
- title: 4.  IANA Considerations
  contents:
  - "4.  IANA Considerations\n   As it is easy for people to construct their own unique\
    \ URIs [RFC2396]\n   and possibly obtain a URI from the W3C if appropriate, it\
    \ is not\n   intended that any additional \"http://www.w3.org/2001/04/xmldsig-\n\
    \   more#\" URIs be created beyond those enumerated in this document.\n   (W3C\
    \ Namespace stability rules prohibit the creation of new URIs\n   under \"http://www.w3.org/2000/09/xmldsig#\"\
    .)\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   Due to computer speed and cryptographic advances,\
    \ the use of MD5 as a\n   DigestMethod and the use of MD5 in the RSA-MD5 SignatureMethod\
    \ is NOT\n   RECOMMENDED.  The concerned cryptographic advances do not effect\
    \ the\n   security of HMAC-MD5; however, there is little reason not to use one\n\
    \   of the SHA series of algorithms.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   Glenn Adams, Merlin Hughs, Gregor Karlinger, Brian LaMachia,\
    \ Shiho\n   Moriai, Joseph Reagle, Russ Housley, and Joel Halpern.\n"
- title: Normative References
  contents:
  - "Normative References\n   [Camellia]         \"Camellia: A 128-bit Block Cipher\
    \ Suitable for\n                      Multiple Platforms - Design and Analysis\
    \ -\", K.\n                      Aoki, T. Ichikawa, M. Matsui, S. Moriai, J.\n\
    \                      Nakajima, T. Tokita, In Selected Areas in\n           \
    \           Cryptography, 7th Annual International Workshop,\n               \
    \       SAC 2000, August 2000, Proceedings, Lecture Notes\n                  \
    \    in Computer Science 2012, pp. 39-56, Springer-\n                      Verlag,\
    \ 2001.\n   [ECDSA]            Blake-Wilson, S., Karlinger, G., Kobayashi, T.,\n\
    \                      and Y. Wang, \"Using the Elliptic Curve Signature\n   \
    \                   Algorithm (ECDSA) for XML Digital Signatures\", RFC\n    \
    \                  4050, April 2005.\n   [FIPS-180-2]       \"Secure Hash Standard\"\
    , (SHA-1/256/384/512) US\n                      Federal Information Processing\
    \ Standard, 1 August\n                      2002.\n   [FIPS-180-2change] \"FIPS\
    \ 180-2, Secure Hash Standard Change Notice\n                      1\", adds SHA-224\
    \ to [FIPS 180-2], 25 February\n                      2004.\n   [FIPS-186-2] \
    \      \"Digital Signature Standard\", National Institute\n                  \
    \    of Standards and Technology, 2000.\n   [IEEE-P1363a]      \"Standard Specifications\
    \ for Public Key\n                      Cryptography:  Additional Techniques\"\
    , October\n                      2002.\n   [ISO/IEC-18033-2]  \"Information technology\
    \ -- Security techniques --\n                      Encryption algorithms -- Part\
    \ 3: Asymmetric\n                      ciphers\", CD, October 2002.\n   [RFC1321]\
    \          Rivest, R., \"The MD5 Message-Digest Algorithm \",\n              \
    \        RFC 1321, April 1992.\n   [RFC2104]          Krawczyk, H., Bellare, M.,\
    \ and R. Canetti, \"HMAC:\n                      Keyed-Hashing for Message Authentication\"\
    , RFC\n                      2104, February 1997.\n   [RFC2119]          Bradner,\
    \ S., \"Key words for use in RFCs to\n                      Indicate Requirement\
    \ Levels\", BCP 14, RFC 2119,\n                      March 1997.\n   [RFC2396]\
    \          Berners-Lee, T., Fielding, R., and L. Masinter,\n                 \
    \     \"Uniform Resource Identifiers (URI): Generic\n                      Syntax\"\
    , RFC 2396, August 1998.\n   [RFC2405]          Madson, C. and N. Doraswamy, \"\
    The ESP DES-CBC\n                      Cipher Algorithm With Explicit IV\", RFC\
    \ 2405,\n                      November 1998.\n   [RFC2315]          Kaliski,\
    \ B., \"PKCS #7: Cryptographic Message\n                      Syntax Version 1.5\"\
    , RFC 2315, March 1998.\n   [RFC3075]          Eastlake 3rd, D., Reagle, J., and\
    \ D. Solo, \"XML-\n                      Signature Syntax and Processing\", RFC\
    \ 3075, March\n                      2001. (RFC 3075 was obsoleted by RFC 3275\
    \ but is\n                      referenced in this document for its description\
    \ of\n                      Minimal Canonicalization which was dropped in RFC\n\
    \                      3275.)\n   [RFC3275]          Eastlake 3rd, D., Reagle,\
    \ J., and D. Solo,\n                      \"(Extensible Markup Language) XML-Signature\
    \ Syntax\n                      and Processing\", RFC 3275, March 2002.\n   [RFC3394]\
    \          Schaad, J. and R. Housley, \"Advanced Encryption\n                \
    \      Standard (AES) Key Wrap Algorithm\", RFC 3394,\n                      September\
    \ 2002.\n   [RFC3447]          Jonsson, J. and B. Kaliski, \"Public-Key\n    \
    \                  Cryptography Standards (PKCS) #1: RSA Cryptography\n      \
    \                Specifications Version 2.1\", RFC 3447, February\n          \
    \            2003.\n   [RFC3713]          Matsui, M., Nakajima, J., and S. Moriai,\
    \ \"A\n                      Description of the Camellia Encryption Algorithm\"\
    ,\n                      RFC 3713, April 2004.\n   [RFC3874]          Housley,\
    \ R., \"A 224-bit One-way Hash Function:\n                      SHA-224\", RFC\
    \ 3874, September 2004.\n   [RIPEMD-160]       ISO/IEC 10118-3:1998, \"Information\
    \ Technology -\n                      Security techniques - Hash-functions - Part3:\n\
    \                      Dedicated hash- functions\", ISO, 1998.\n   [X9.62]   \
    \         X9.62-200X, \"Public Key Cryptography for the\n                    \
    \  Financial Services Industry: The Elliptic Curve\n                      Digital\
    \ Signature Algorithm (ECDSA)\", Accredited\n                      Standards Committee\
    \ X9, American National\n                      Standards Institute.\n   [XMLDSIG]\
    \          \"XML-Signature Syntax and Processing\", D. Eastlake\n            \
    \          3rd, J. Reagle, & D. Solo, 12 February 2002.\n                    \
    \  <http://www.w3.org/TR/xmldsig-core/>\n   [XMLENC]           \"XML Encryption\
    \ Syntax and Processing\", J. Reagle,\n                      D.  Eastlake, December\
    \ 2002.\n                      <http://www.w3.org/TR/2001/RED-xmlenc-core-\n \
    \                     20021210/>\n   [XPointer]         \"XML Pointer Language\
    \ (XPointer) Version 1.0\", W3C\n                      working draft, Steve DeRose,\
    \ Eve Maler, Ron Daniel\n                      Jr., January 2001.\n          \
    \            <http://www.w3.org/TR/2001/WD-xptr-20010108>\n"
- title: Informative References
  contents:
  - "Informative References\n   [CANON]            \"Canonical XML Version 1.0\",\
    \ John Boyer.\n                      <http://www.w3.org/TR/2001/REC-xml-c14n-20010315>.\n\
    \   [EXCANON]          \"Exclusive XML Canonicalization Version 1.0\", D.\n  \
    \                    Eastlake, J. Reagle, 18 July 2002.\n                    \
    \  <http://www.w3.org/TR/REC-xml-enc-c14n-20020718/>.\n   [RFC3076]          Boyer,\
    \ J., \"Canonical XML Version 1.0\", RFC 3076,\n                      March 2001.\n\
    \   [RFC3092]          Eastlake 3rd, D., Manros, C., and E. Raymond,\n       \
    \               \"Etymology of \"Foo\"\", RFC 3092, 2001.\n   [RFC3741]      \
    \    Boyer, J., Eastlake 3rd, D., and J. Reagle,\n                      \"Exclusive\
    \ XML Canonicalization, Version 1.0\", RFC\n                      3741, March\
    \ 2004.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Donald E. Eastlake 3rd\n   Motorola Laboratories\n   155\
    \ Beaver Street\n   Milford, MA 01757 USA\n   Phone: +1-508-786-7554 (w)\n   \
    \       +1-508-634-2066 (h)\n   EMail: Donald.Eastlake@motorola.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
