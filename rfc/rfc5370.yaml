- title: __initial_text__
  contents:
  - "                 The Session Initiation Protocol (SIP)\n                  Conference\
    \ Bridge Transcoding Model\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes how to invoke transcoding services using\
    \ the\n   conference bridge model.  This way of invocation meets the\n   requirements\
    \ for SIP regarding transcoding services invocation to\n   support deaf, hard\
    \ of hearing, and speech-impaired individuals.\n"
- title: Table of Contents
  contents:
  - 'Table of Contents

    '
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   RFC 5369 [RFC5369] describes how two SIP [RFC3261] UAs (User\
    \ Agents)\n   can discover incompatibilities that prevent them from establishing\
    \ a\n   session (e.g., lack of support for a common codec or for a common\n  \
    \ media type).  When such incompatibilities are found, the UAs need to\n   invoke\
    \ transcoding services to successfully establish the session.\n   The transcoding\
    \ framework introduces two models to invoke transcoding\n   services: the 3pcc\
    \ (third-party call control) model [RFC4117] and the\n   conference bridge model.\
    \  This document specifies the conference\n   bridge model.\n   In the conference\
    \ bridge model for transcoding invocation, a\n   transcoding server that provides\
    \ a particular transcoding service\n   (e.g., speech-to-text) behaves as a B2BUA\
    \ (Back-to-Back User Agent)\n   between both UAs and is identified by a URI. \
    \ As shown in Figure 1,\n   both UAs, A and B, exchange signalling and media with\
    \ the transcoder\n   T.  The UAs do not exchange any traffic (signalling or media)\n\
    \   directly between them.\n                  +-------+\n                  | \
    \      |**\n                  |   T   |  **\n                  |       |\\   **\n\
    \                  +-------+ \\\\   **\n                    ^   *     \\\\   **\n\
    \                    |   *       \\\\   **\n                    |   *        \
    \ SIP  **\n                   SIP  *           \\\\   **\n                   \
    \ |   *             \\\\   **\n                    |   *               \\\\  \
    \ **\n                    v   *                 \\    **\n                  +-------+\
    \               +-------+\n                  |       |               |       |\n\
    \                  |   A   |               |   B   |\n                  |    \
    \   |               |       |\n                  +-------+               +-------+\n\
    \                   <-SIP-> Signalling\n                   ******* Media\n   \
    \               Figure 1: Conference bridge model\n   Sections 3 and 4 specify\
    \ how the caller A or the callee B,\n   respectively, can use the conference bridge\
    \ model to invoke\n   transcoding services from T.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   In this document, the key words \"MUST\", \"MUST NOT\", \"\
    REQUIRED\",\n   \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"NOT\n   RECOMMENDED\", \"MAY\", and \"OPTIONAL\" are to be interpreted as\n\
    \   described in BCP 14, RFC 2119 [RFC2119], and indicate requirement\n   levels\
    \ for compliant implementations.\n"
- title: 3.  Caller's Invocation
  contents:
  - "3.  Caller's Invocation\n   User agent A needs to perform two operations to invoke\
    \ transcoding\n   services from T for a session between user agent A and user\
    \ agent B.\n   User agent A needs to establish a session with T and provide T\
    \ with\n   user agent B's URI so that T can generate an INVITE towards user\n\
    \   agent B.\n"
- title: 3.1.  Procedures at the User Agent
  contents:
  - "3.1.  Procedures at the User Agent\n   User agent A uses the procedures for RFC\
    \ 5366 [RFC5366] to provide T\n   with B's URI using the same INVITE that establishes\
    \ the session\n   between A and T.  That is, user agent A adds to the INVITE a\
    \ body\n   part whose disposition type is recipient-list [RFC5363].  This body\n\
    \   part consists of a URI-list that contains a single URI: user agent\n   B's\
    \ URI.\n      Note that, as described in the transcoding framework [RFC5369],\n\
    \      the transcoding model described in this document is modeled as a\n    \
    \  two-party conference server.  Consequently, this document focuses\n      on\
    \ two-party sessions that need transcoding.  Multi-party sessions\n      can be\
    \ established using INVITE requests with multiple URIs in\n      their bodies,\
    \ as specified in [RFC5366].\n"
- title: 3.2.  Procedures at the Transcoder
  contents:
  - "3.2.  Procedures at the Transcoder\n   On receiving an INVITE with a URI-list\
    \ body, the transcoder follows\n   the procedures in [RFC5366] to generate an\
    \ INVITE request towards the\n   URI contained in the URI-list body.  Note that\
    \ the transcoder acts as\n   a B2BUA, not as a proxy.\n   Additionally, the transcoder\
    \ MUST generate the From header field of\n   the outgoing INVITE request using\
    \ the same value as the From header\n   field included in the incoming INVITE\
    \ request, subject to the privacy\n   requirements (see [RFC3323] and [RFC3325])\
    \ expressed in the incoming\n   INVITE request.  Note that this does not apply\
    \ to the \"tag\"\n   parameter.\n   The session description the transcoder includes\
    \ in the outgoing\n   INVITE request depends on the type of transcoding service\
    \ that\n   particular transcoder provides.  For example, a transcoder resolving\n\
    \   audio codec incompatibilities would generate a session description\n   listing\
    \ the audio codecs the transcoder supports.\n   When the transcoder receives a\
    \ final response for the outgoing INVITE\n   requests, it generates a new final\
    \ response for the incoming INVITE\n   request.  This new final response SHOULD\
    \ have the same status code as\n   the one received in the response for the outgoing\
    \ INVITE request.\n   If a transcoder receives an INVITE request with a URI-list\
    \ with more\n   than one URI, it SHOULD return a 488 (Max 1 URI allowed in URI-list)\n\
    \   response.\n"
- title: 3.3.  Example
  contents:
  - "3.3.  Example\n   Figure 2 shows the message flow for the caller's invocation\
    \ of a\n   transcoder T.  The caller A sends an INVITE (1) to the transcoder (T)\n\
    \   to establish the session A-T.  Following the procedures in [RFC5366],\n  \
    \ the caller A adds a body part whose disposition type is recipient-\n   list\
    \ [RFC5363].\n        A                           T                          \
    \ B\n        |                           |                           |\n     \
    \   |-----(1) INVITE SDP A----->|                           |\n        |     \
    \                      |                           |\n        |<-(2) 183 Session\
    \ Progress-|                           |\n        |                          \
    \ |-----(3) INVITE SDP TB---->|\n        |                           |       \
    \                    |\n        |                           |<-----(4) 200 OK\
    \ SDP B-----|\n        |                           |                         \
    \  |\n        |                           |---------(5) ACK---------->|\n    \
    \    |<----(6) 200 OK SDP TA-----|                           |\n        |    \
    \                       |                           |\n        |---------(7) ACK---------->|\
    \                           |\n        |                           |         \
    \                  |\n        | ************************* | *************************\
    \ |\n        |**        Media          **|**        Media          **|\n     \
    \   | ************************* | ************************* |\n        |     \
    \                      |                           |\n      Figure 2: Successful\
    \ invocation of a transcoder by the caller\n   The following example shows an\
    \ INVITE with two body parts: an SDP\n   [RFC4566] session description and a URI-list.\n\
    \   INVITE sip:transcoder@example.com SIP/2.0\n   Via: SIP/2.0/TCP client.chicago.example.com\n\
    \       ;branch=z9hG4bKhjhs8ass83\n   Max-Forwards: 70\n   To: Transcoder <sip:transcoder@example.org>\n\
    \   From: A <sip:A@chicago.example.com>;tag=32331\n   Call-ID: d432fa84b4c76e66710\n\
    \   CSeq: 1 INVITE\n   Contact: <sip:A@client.chicago.example.com>\n   Allow:\
    \ INVITE, ACK, CANCEL, OPTIONS, BYE, REFER,\n        SUBSCRIBE, NOTIFY\n   Allow-Events:\
    \ dialog\n   Accept: application/sdp, message/sipfrag\n   Require: recipient-list-invite\n\
    \   Content-Type: multipart/mixed;boundary=\"boundary1\"\n   Content-Length: 556\n\
    \   --boundary1\n   Content-Type: application/sdp\n   v=0\n   o=example 2890844526\
    \ 2890842807 IN IP4 chicago.example.com\n   s=-\n   c=IN IP4 192.0.2.1\n   t=0\
    \ 0\n   m=audio 50000 RTP/AVP 0\n   a=rtpmap:0 PCMU/8000\n   --boundary1\n   Content-Type:\
    \ application/resource-lists+xml\n   Content-Disposition: recipient-list\n   <?xml\
    \ version=\"1.0\" encoding=\"UTF-8\"?>\n   <resource-lists xmlns=\"urn:ietf:params:xml:ns:resource-lists\"\
    \n                  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n\
    \     <list>\n       <entry uri=\"sip:B@example.org\" />\n     </list>\n   </resource-lists>\n\
    \   --boundary1--\n   On receiving the INVITE, the transcoder generates a new\
    \ INVITE\n   towards the callee.  The transcoder acts as a B2BUA, not as a proxy.\n\
    \   Therefore, this new INVITE (3) belongs to a different transaction\n   than\
    \ the INVITE (1) received by the transcoder.\n   When the transcoder receives\
    \ a final response (4) from the callee, it\n   generates a new final response\
    \ (6) for INVITE (1).  This new final\n   response (6) has the same status code\
    \ as the one received in the\n   response from the callee (4).\n"
- title: 3.4.  Unsuccessful Session Establishment
  contents:
  - "3.4.  Unsuccessful Session Establishment\n   Figure 3 shows a similar message\
    \ flow as the one in Figure 3.\n   Nevertheless, this time the callee generates\
    \ a non-2xx final response\n   (4).  Consequently, the transcoder generates a\
    \ non-2xx final response\n   (6) towards the caller as well.\n   A           \
    \                T                           B\n   |                         \
    \  |                           |\n   |-----(1) INVITE SDP A----->|           \
    \                |\n   |                           |                         \
    \  |\n   |<-(2) 183 Session Progress-|                           |\n   |     \
    \                      |-----(3) INVITE SDP TB---->|\n   |                   \
    \        |                           |\n   |                           |<----(4)\
    \ 603 Decline-------|\n   |                           |                      \
    \     |\n   |                           |---------(5) ACK---------->|\n   |<----(6)\
    \ 603 Decline-------|                           |\n   |                      \
    \     |                           |\n   |---------(7) ACK---------->|        \
    \                   |\n   |                           |                      \
    \     |\n         Figure 3: Unsuccessful session establishment\n   The ambiguity\
    \ in this flow is that, if the provisional response (2)\n   gets lost, the caller\
    \ does not know whether the 603 (Decline)\n   response means that the initial\
    \ INVITE (1) was rejected by the\n   transcoder or that the INVITE generated by\
    \ the transcoder (4) was\n   rejected by the callee.  The use of the \"History-Info\"\
    \ header field\n   [RFC4244] between the transcoder and the caller resolves the\
    \ previous\n   ambiguity.\n   Note that this ambiguity problem could also have\
    \ been resolved by\n   having transcoders act as a pure conference bridge.  The\
    \ transcoder\n   would respond with a 200 (OK) to the INVITE request from the\
    \ caller,\n   and it would generate an outgoing INVITE request towards the callee.\n\
    \   The caller would get information about the result of the latter\n   INVITE\
    \ request by subscribing to the conference event package\n   [RFC4575] at the\
    \ transcoder.  Although this flow would have resolved\n   the ambiguity problem\
    \ without requiring support for the \"History-\n   Info\" header field, it is\
    \ more complex, requires a higher number of\n   messages, and introduces higher\
    \ session setup delays.  That is why it\n   was not chosen to implement transcoding\
    \ services.\n"
- title: 4.  Callee's Invocation
  contents:
  - "4.  Callee's Invocation\n   If a UA receives an INVITE with a session description\
    \ that is not\n   acceptable, it can redirect it to the transcoder by using a\
    \ 302\n   (Moved Temporarily) response.  The Contact header field of the 302\n\
    \   (Moved Temporarily) response contains the URI of the transcoder plus\n   a\
    \ \"?body=\" parameter.  This parameter contains a recipient-list body\n   with\
    \ B's URI.  Note that some escaping (e.g., for Carriage Returns\n   and Line Feeds)\
    \ is needed to encode a recipient-list body in such a\n   parameter.  Figure 4\
    \ shows the message flow for this scenario.\n   A                           T\
    \                           B\n   |                           |              \
    \             |\n   |-------------------(1) INVITE SDP A------------------->|\n\
    \   |                           |                           |\n   |<--------------(2)\
    \ 302 Moved Temporarily---------------|\n   |                           |    \
    \                       |\n   |-----------------------(3) ACK------------------------>|\n\
    \   |                           |                           |\n   |-----(4) INVITE\
    \ SDP A----->|                           |\n   |                           | \
    \                          |\n   |<-(5) 183 Session Progress-|               \
    \            |\n   |                           |-----(6) INVITE SDP TB---->|\n\
    \   |                           |                           |\n   |          \
    \                 |<-----(7) 200 OK SDP B-----|\n   |                        \
    \   |                           |\n   |                           |---------(8)\
    \ ACK---------->|\n   |<----(9) 200 OK SDP TA-----|                          \
    \ |\n   |                           |                           |\n   |--------(10)\
    \ ACK---------->|                           |\n   |                          \
    \ |                           |\n   | ************************* | *************************\
    \ |\n   |**        Media          **|**        Media          **|\n   | *************************\
    \ | ************************* |\n       Figure 4: Callee's invocation of a transcoder\n\
    \   Note that the syntax resulting from encoding a body into a URI as\n   described\
    \ earlier is quite complex.  It is actually simpler for\n   callees to invoke\
    \ transcoding services using the 3pcc transcoding\n   model [RFC4117] instead.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   Transcoders implementing this specification behave\
    \ as a URI-list\n   service as described in [RFC5366].  Therefore, the security\n\
    \   considerations for URI-list services discussed in [RFC5363] apply\n   here\
    \ as well.\n   In particular, the requirements related to list integrity and\n\
    \   unsolicited requests are important for transcoding services.  User\n   agents\
    \ SHOULD integrity protect URI-lists using mechanisms such as\n   S/MIME [RFC3850]\
    \ or TLS [RFC5246], which can also provide URI-list\n   confidentiality if needed.\
    \  Additionally, transcoders MUST\n   authenticate and authorize users and MAY\
    \ provide information about\n   the identity of the original sender of the request\
    \ in their outgoing\n   requests by using the SIP identity mechanism [RFC4474].\n\
    \   The requirement in [RFC5363] to use opt-in lists (e.g., using RFC\n   5360\
    \ [RFC5360]) deserves special discussion.  The type of URI-list\n   service implemented\
    \ by transcoders following this specification does\n   not produce amplification\
    \ (only one INVITE request is generated by\n   the transcoder on receiving an\
    \ INVITE request from a user agent) and\n   does not involve a translation to\
    \ a URI that may be otherwise unknown\n   to the caller (the caller places the\
    \ callee's URI in the body of its\n   initial INVITE request).  Additionally,\
    \ the identity of the caller is\n   present in the INVITE request generated by\
    \ the transcoder.\n   Therefore, there is no requirement for transcoders implementing\
    \ this\n   specification to use opt-in lists.\n"
- title: 6.  Contributors
  contents:
  - "6.  Contributors\n   This document is the result of discussions amongst the conferencing\n\
    \   design team.  The members of this team include Eric Burger, Henning\n   Schulzrinne,\
    \ and Arnoud van Wijk.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC5246]  Dierks, T. and E. Rescorla, \"The Transport Layer Security\n\
    \              (TLS) Protocol Version 1.2\", RFC 5246, August 2008.\n   [RFC3261]\
    \  Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston,\n              A.,\
    \ Peterson, J., Sparks, R., Handley, M., and E.\n              Schooler, \"SIP:\
    \ Session Initiation Protocol\", RFC 3261,\n              June 2002.\n   [RFC3323]\
    \  Peterson, J., \"A Privacy Mechanism for the Session\n              Initiation\
    \ Protocol (SIP)\", RFC 3323, November 2002.\n   [RFC3325]  Jennings, C., Peterson,\
    \ J., and M. Watson, \"Private\n              Extensions to the Session Initiation\
    \ Protocol (SIP) for\n              Asserted Identity within Trusted Networks\"\
    , RFC 3325,\n              November 2002.\n   [RFC3850]  Ramsdell, B., Ed., \"\
    Secure/Multipurpose Internet Mail\n              Extensions (S/MIME) Version 3.1\
    \ Certificate Handling\", RFC\n              3850, July 2004.\n   [RFC4117]  Camarillo,\
    \ G., Burger, E., Schulzrinne, H., and A. van\n              Wijk, \"Transcoding\
    \ Services Invocation in the Session\n              Initiation Protocol (SIP)\
    \ Using Third Party Call Control\n              (3pcc)\", RFC 4117, June 2005.\n\
    \   [RFC5369]  Camarillo, G., \"Framework for Transcoding with the Session\n \
    \             Initiation Protocol\", RFC 5369, October 2008.\n   [RFC5363]  Camarillo,\
    \ G. and A.B. Roach, \"Framework and Security\n              Considerations for\
    \ Session Initiation Protocol (SIP) URI-\n              List Services\", RFC 5363,\
    \ October 2008.\n   [RFC5366]  Camarillo, G. and A. Johnston, \"Conference Establishment\n\
    \              Using Request-Contained Lists in the Session Initiation\n     \
    \         Protocol (SIP)\", RFC 5366, October 2008.\n   [RFC4244]  Barnes, M.,\
    \ Ed., \"An Extension to the Session Initiation\n              Protocol (SIP)\
    \ for Request History Information\", RFC 4244,\n              November 2005.\n\
    \   [RFC4474]  Peterson, J. and C. Jennings, \"Enhancements for\n            \
    \  Authenticated Identity Management in the Session\n              Initiation\
    \ Protocol (SIP)\", RFC 4474, August 2006.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [RFC4566]  Handley, M., Jacobson, V., and C.\
    \ Perkins, \"SDP: Session\n              Description Protocol\", RFC 4566, July\
    \ 2006.\n   [RFC4575]  Rosenberg, J., Schulzrinne, H., and O. Levin, Ed., \"A\n\
    \              Session Initiation Protocol (SIP) Event Package for\n         \
    \     Conference State\", RFC 4575, August 2006.\n   [RFC5360]  Rosenberg, J.,\
    \ \"A Framework for Consent-Based\n              Communications in the Session\
    \ Initiation Protocol (SIP)\",\n              RFC 5360, October 2008.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Gonzalo Camarillo\n   Ericsson\n   Hirsalantie 11\n   Jorvas\
    \  02420\n   Finland\n   EMail: Gonzalo.Camarillo@ericsson.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
