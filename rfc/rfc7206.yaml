- title: __initial_text__
  contents:
  - "           Requirements for an End-to-End Session Identifier\n             in\
    \ IP-Based Multimedia Communication Networks\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies the requirements for an end-to-end session\n\
    \   identifier in IP-based multimedia communication networks.  This\n   identifier\
    \ would enable endpoints, intermediate devices, and\n   management and monitoring\
    \ systems to identify a session end-to-end\n   across multiple SIP devices, hops,\
    \ and administrative domains.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7206.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Conventions Used in This Document ...............................3\n  \
    \ 3. Terminology .....................................................4\n    \
    \  3.1. What Does the Session Identifier Identify? .................4\n      3.2.\
    \ Communication Session ......................................5\n      3.3. End-to-End\
    \ .................................................6\n   4. Session Identifier\
    \ Use Cases ....................................6\n      4.1. End-to-End Identification\
    \ of a Communication Session .......6\n      4.2. Protocol Interworking ......................................6\n\
    \      4.3. Traffic Monitoring .........................................7\n  \
    \    4.4. Tracking Transferred Sessions ..............................7\n    \
    \  4.5. Session Signal Logging .....................................8\n      4.6.\
    \ Identifier Syntax ..........................................8\n      4.7. 3PCC\
    \ Use Case ..............................................9\n   5. Requirements\
    \ for the End-to-End Session Identifier ..............9\n   6. Related Work in\
    \ Other Standards Organizations ..................10\n      6.1. Coordination\
    \ with the ITU-T ...............................10\n      6.2. Requirements within\
    \ 3GPP ..................................11\n   7. Security Considerations ........................................11\n\
    \   8. Acknowledgments ................................................12\n  \
    \ 9. Contributors ...................................................12\n   10.\
    \ References ....................................................12\n      10.1.\
    \ Normative References .....................................12\n      10.2. Informative\
    \ References ...................................12\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   IP-based multimedia communication systems like SIP [1] and\
    \ H.323 [2]\n   have the concept of a \"call identifier\" that is globally unique.\
    \  The\n   identifier is intended to represent an end-to-end communication\n \
    \  session from the originating device to the terminating device.  Such\n   an\
    \ identifier is useful for troubleshooting, session tracking, and\n   so forth.\n\
    \   Unfortunately, there are a number of factors that mean that the\n   current\
    \ call identifiers defined in SIP and H.323 are not suitable\n   for end-to-end\
    \ session identification.  Perhaps most significant is\n   the fact that the syntax\
    \ for the call identifier in SIP and H.323 is\n   different between the two protocols.\
    \  This important fact makes it\n   impossible for call identifiers to be exchanged\
    \ end-to-end when a\n   network uses both of these session protocols.\n   Another\
    \ reason why the current call identifiers are not suitable to\n   identify the\
    \ session end-to-end is that in real-world deployments,\n   devices like Back-to-Back\
    \ User Agents (B2BUAs) often change the\n   values as the session signaling passes\
    \ through.  This is true even\n   when a single session protocol is employed and\
    \ is not a byproduct of\n   protocol interworking.\n   Lastly, identifiers that\
    \ might have been used to identify a session\n   end-to-end fail to meet that\
    \ need when sessions are manipulated\n   through supplementary service interactions.\
    \  For example, when a\n   session is transferred or if a private branch exchange\
    \ (PBX) joins or\n   merges two communication sessions together locally, the end-to-end\n\
    \   properties of currently defined identifiers are lost.\n   This document specifies\
    \ the requirements for an end-to-end session\n   identifier in IP-based multimedia\
    \ communication networks.  This\n   identifier would enable endpoints, intermediate\
    \ devices, and\n   management and monitoring systems to identify a session end-to-end\n\
    \   across multiple SIP devices, hops, and administrative domains.\n"
- title: 2.  Conventions Used in This Document
  contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [3] when they\n   appear in ALL CAPS.  These words may also appear\
    \ in this document in\n   lower case as plain English words, absent their normative\
    \ meanings.\n"
- title: 3.  Terminology
  contents:
  - '3.  Terminology

    '
- title: 3.1.  What Does the Session Identifier Identify?
  contents:
  - "3.1.  What Does the Session Identifier Identify?\n   The identifier on which\
    \ this document places requirements, the\n   session identifier, identifies a\
    \ set of signaling messages associated\n   with exactly two endpoints that, from\
    \ each endpoint's perspective,\n   are related to a single invocation of a communication\
    \ application.\n   How the endpoints determine which signaling messages share\
    \ a given\n   identifier (that is, what constitutes a single invocation of a\n\
    \   communication application) is intentionally left loosely defined.\n   The\
    \ term \"call\" is often used as an example of such an invocation for\n   voice\
    \ and video communication, but different protocols and\n   deployments define\
    \ the scope of a \"call\" in different ways.  For\n   instance, some systems would\
    \ associate all of the activity between\n   all three parties involved in a transfer\
    \ as a single \"call\".\n   Similarly, the term \"session\" is often used as an\
    \ example of such an\n   invocation, but this term is overloaded to describe both\
    \ signaling\n   and media-level interaction.  A single invocation of the\n   communication\
    \ application, as described above, may involve multiple\n   RTP \"sessions\" as\
    \ described by RFC 3550 [4], and possibly even\n   multiple concurrent sessions.\n\
    \   In this document, unless otherwise qualified, the term \"communication\n \
    \  session\", or simply \"session\", will refer only to the set of\n   signaling\
    \ messages identified by the common session identifier.  That\n   is, a \"session\"\
    \ is a set of signaling messages associated with\n   exactly two endpoints that,\
    \ from each endpoint's perspective, are\n   related to a single invocation of\
    \ a communication application.\n   The requirements in this document put some\
    \ constraints on what an\n   endpoint will consider the same, or a different,\
    \ invocation of a\n   communication session.  They also ensure that related sessions\
    \ (as\n   this document is using the term) can be correlated using only the\n\
    \   session identifiers for each session.  Again, what constitutes a\n   \"related\"\
    \ session is intentionally left loosely defined.\n   The definition considers\
    \ messages associated with exactly two\n   endpoints instead of messages sent\
    \ between two endpoints to allow for\n   intermediaries that create messages on\
    \ an endpoint's behalf.  It is\n   possible that an endpoint may not see all of\
    \ the messages in a\n   session (as this document is using the term) associated\
    \ with it.\n   This definition, along with the constraints imposed by the\n  \
    \ requirements in this document, facilitates specifying an identifier\n   that\
    \ allows the two endpoints to use two entirely different protocols\n   (and hence\
    \ to potentially have different ideas of what a single\n   invocation means) or\
    \ use two applications that have a different idea\n   of what a single invocation\
    \ means.\n"
- title: 3.2.  Communication Session
  contents:
  - "3.2.  Communication Session\n   A communication session may exist between two\
    \ SIP User Agents (UAs)\n   and may pass through one or more intermediary devices,\
    \ including\n   B2BUAs or SIP proxies.  For example:\n            UA A       \
    \        Middlebox(es)                UA B\n            SIP message(s) -------[]---[]------->\
    \ SIP message(s)\n            SIP message(s)  <-----[]---[]-------  SIP message(s)\n\
    \           Figure 1: Communication Session through Middlebox(es)\n   The following\
    \ are examples of acceptable communication sessions as\n   described in Section\
    \ 3.1 and are not exhaustive:\n   o  A call directly between two user agents\n\
    \   o  A call between two user agents with one or more SIP middleboxes in\n  \
    \    the signaling path\n   o  A call between two user agents that was initiated\
    \ using third-\n      party call control (3PCC) [5]\n   o  A call between two\
    \ user agents (e.g., between Alice and Carol)\n      that results from a different\
    \ communication session (e.g., Alice\n      and Bob) wherein one of those user\
    \ agents (Alice) is transferred\n      to another user agent (Carol) using a REFER\
    \ request or a re-INVITE\n      request\n   The following are not considered communication\
    \ sessions:\n   o  A call between any two user agents wherein two or more user\
    \ agents\n      are engaged in a conference call via a conference focus:\n   \
    \   - each call between the user agent and the conference focus would\n      \
    \  be a communication session, and\n      - each of these is a distinct communication\
    \ session.\n   o  A call between three user agents (e.g., Alice, Bob, and Carol)\n\
    \      wherein the first user agent (Alice) ad hoc conferences the other\n   \
    \   two user agents (Bob and Carol):\n      - The call between Alice and Bob would\
    \ be one communication\n        session.\n      - The call between Alice and Carol\
    \ would be a different\n        communication session.\n"
- title: 3.3.  End-to-End
  contents:
  - "3.3.  End-to-End\n   The term \"end-to-end\" in this document means the communication\n\
    \   session from the point of origin, passing through any number of\n   intermediaries,\
    \ to the ultimate point of termination.  It is\n   recognized that legacy devices\
    \ may not support the end-to-end session\n   identifier.  Since such an endpoint\
    \ will not create a session\n   identifier, an intermediary device that supports\
    \ this identifier can\n   inject an identifier into the session signaling.\n"
- title: 4.  Session Identifier Use Cases
  contents:
  - '4.  Session Identifier Use Cases

    '
- title: 4.1.  End-to-End Identification of a Communication Session
  contents:
  - "4.1.  End-to-End Identification of a Communication Session\n   For SIP messaging\
    \ that either does not involve SIP servers or only\n   involves SIP proxies, the\
    \ Call-ID header field value sufficiently\n   identifies each SIP message within\
    \ a transaction (see Section 17 of\n   [1]) or dialog (see Section 12 of [1]).\
    \  This is not the case when\n   either B2BUAs or Session Border Controllers (SBCs)\
    \ [6] are in the\n   signaling path between User Agents (UAs).  Therefore, we\
    \ need the\n   ability to identify each communication session through a single\
    \ SIP\n   header field, regardless of which types of SIP servers are in the\n\
    \   signaling path between UAs.  For messages that create a dialog, each\n   message\
    \ within the same dialog MUST use the same session identifier.\n   Derived Requirements:\
    \ All Requirements in Section 5.\n"
- title: 4.2.  Protocol Interworking
  contents:
  - "4.2.  Protocol Interworking\n   A communication session might originate on an\
    \ H.323 [2] endpoint and\n   pass through an SBC before ultimately reaching a\
    \ terminating SIP user\n   agent.  Likewise, a call might originate on a SIP user\
    \ agent and\n   terminate on an H.323 endpoint.  It MUST be possible to identify\
    \ such\n   sessions end-to-end across the plurality of devices, networks, or\n\
    \   administrative domains.\n   It is anticipated that the ITU-T will define protocol\
    \ elements for\n   H.323 to make the end-to-end signaling possible.\n   Derived\
    \ Requirements: REQ5, REQ7 (Section 5).\n"
- title: 4.3.  Traffic Monitoring
  contents:
  - "4.3.  Traffic Monitoring\n   UA A and UA B communicate using SIP messaging with\
    \ a SIP B2BUA acting\n   as a middlebox that belongs to a SIP service provider.\
    \  For privacy\n   reasons, the B2BUA changes the SIP header fields that reveal\n\
    \   information related to the SIP users, devices, or domain identities.\n   The\
    \ service provider uses an external device to monitor and log all\n   SIP traffic\
    \ coming to and from the B2BUA.  In the case of failures\n   reported by the customer\
    \ or when security issues arise (e.g., theft\n   of service), the service provider\
    \ has to analyze the logs from the\n   past several days or weeks and then correlates\
    \ those messages that\n   were messages for a single end-to-end SIP session.\n\
    \   For this scenario, we must consider three particular use cases:\n   a) UAs\
    \ A and B support the end-to-end session identifier.\n      Derived Requirements:\
    \ REQ1, REQ3, REQ4, REQ6.\n   b) Only UA A supports the end-to-end session identifier;\
    \ UA B\n      does not.\n      Derived Requirements: REQ1, REQ3, REQ4, REQ5, REQ6.\n\
    \   c) UAs A and B do not support the end-to-end session identifier.\n      Derived\
    \ Requirements: REQ1, REQ3, REQ4, REQ5, REQ6.\n"
- title: 4.4.  Tracking Transferred Sessions
  contents:
  - "4.4.  Tracking Transferred Sessions\n   It is difficult to track which SIP messages\
    \ were involved in the same\n   call across transactions, especially when invoking\
    \ supplementary\n   services such as call transfer or call join.  There exists\
    \ a need for\n   the ability to track communication sessions as they are transferred,\n\
    \   one side at a time, until completion of the session (i.e., until a\n   BYE\
    \ is sent).\n   Derived Requirements: REQ1, REQ2, REQ9.\n"
- title: 4.5.  Session Signal Logging
  contents:
  - "4.5.  Session Signal Logging\n   An after-the-fact search of SIP messages to\
    \ determine which messages\n   were part of the same transaction or call is difficult\
    \ when B2BUAs\n   and SBCs are involved in the signaling between UAs.  Mapping\
    \ more\n   than one Call-ID together can be challenging because all of the\n \
    \  values in SIP header fields on one side of the B2BUA or SBC will\n   likely\
    \ be different than those on the other side.  If multiple B2BUAs\n   and/or SBCs\
    \ are in the signaling path, more than two sets of header\n   field values will\
    \ exist, creating more of a challenge.  Creating a\n   common header field value\
    \ through all SIP entities will greatly\n   reduce any challenge for the purposes\
    \ of debugging, communication\n   tracking (such as for security purposes in case\
    \ of theft of\n   service), etc.\n   Derived Requirements: REQ1, REQ3, REQ5, REQ6.\n"
- title: 4.6.  Identifier Syntax
  contents:
  - "4.6.  Identifier Syntax\n   A syntax that is too lax (e.g., one that allows special\
    \ characters or\n   a very long identifier) would make it difficult to encode\
    \ the\n   identifier in other protocols.  Therefore, the syntax of the\n   identifier\
    \ should be reasonably constrained.\n   Derived Requirement: REQ8.\n"
- title: 4.7.  3PCC Use Case
  contents:
  - "4.7.  3PCC Use Case\n   Third-party call control refers to the ability of an\
    \ entity to create\n   a call in which communication is actually between two or\
    \ more parties\n   other than the one setting up the call.  For example, a B2BUA\
    \ acting\n   as a third-party controller could establish a call between two SIP\n\
    \   UAs using 3PCC procedures as described in Section 4.1 of RFC 3725\n   [5],\
    \ the flow for which is reproduced below.\n                A              Controller\
    \               B\n                |(1) INVITE no SDP  |                   |\n\
    \                |<------------------|                   |\n                |(2)\
    \ 200 offer1     |                   |\n                |------------------>|\
    \                   |\n                |                   |(3) INVITE offer1\
    \  |\n                |                   |------------------>|\n            \
    \    |                   |(4) 200 OK answer1 |\n                |            \
    \       |<------------------|\n                |                   |(5) ACK  \
    \          |\n                |                   |------------------>|\n    \
    \            |(6) ACK answer1    |                   |\n                |<------------------|\
    \                   |\n                |(7) RTP            |                 \
    \  |\n                |.......................................|\n            \
    \    Figure 2: Session Identifier 3PCC Scenario\n   Such a flow must result in\
    \ a single session identifier being used for\n   the communication session between\
    \ UA A and UA B.  This use case does\n   not extend to three SIP UAs.\n   Derived\
    \ Requirement: REQ9.\n"
- title: 5.  Requirements for the End-to-End Session Identifier
  contents:
  - "5.  Requirements for the End-to-End Session Identifier\n   The following requirements\
    \ are derived from the use cases and\n   additional constraints regarding the\
    \ construction of the identifier.\n   REQ1: It MUST be possible for an administrator\
    \ or an external device\n      that monitors the SIP traffic to use the identifier\
    \ to identify\n      those dialogs, transactions, and messages that were at some\
    \ point\n      in time components of a single end-to-end SIP session (e.g., parts\n\
    \      of the same call).\n   REQ2: It MUST be possible to correlate two end-to-end\
    \ sessions when a\n      session is transferred or if two different sessions are\
    \ joined\n      together via an intermediary (e.g., a PBX).\n   REQ3: The solution\
    \ MUST require that the identifier, if present, pass\n      unchanged through\
    \ SIP B2BUAs or other intermediaries.\n   REQ4: The identifier MUST NOT reveal\
    \ any information related to any\n      SIP user, device, or domain identity.\
    \  Additionally, it MUST NOT\n      be possible to correlate a set of session\
    \ identifiers produced\n      over a period of time with one another, or with\
    \ a particular user\n      or device.  This includes any IP address, port, hostname,\
    \ domain\n      name, username, Address-of-Record, Media Access Control (MAC)\n\
    \      address, IP address family, transport type, subscriber ID,\n      Call-ID,\
    \ tags, or other SIP header field or body parts.\n   REQ5: It MUST be possible\
    \ to identify SIP traffic with an end-to-end\n      session identifier from and\
    \ to end devices that do not support\n      this new identifier, such as by allowing\
    \ an intermediary to inject\n      an identifier into the session signaling.\n\
    \   REQ6: The identifier SHOULD be unique in time and space, similar to\n    \
    \  the Call-ID.\n   REQ7: The identifier SHOULD be constructed in such a way as\
    \ to make\n      it suitable for transmission in SIP [1] and H.323 [2].\n   REQ8:\
    \ The identifier SHOULD use a restricted syntax and length so as\n      to allow\
    \ the identifier to be used in other protocols.\n   REQ9: It MUST be possible\
    \ to correlate two end-to-end sessions when\n      the sessions are created by\
    \ a third-party controller using 3PCC\n      procedures as shown in Figure 1 of\
    \ RFC 3725 [5].\n"
- title: 6.  Related Work in Other Standards Organizations
  contents:
  - '6.  Related Work in Other Standards Organizations

    '
- title: 6.1.  Coordination with the ITU-T
  contents:
  - "6.1.  Coordination with the ITU-T\n   IP multimedia networks are often comprised\
    \ of a mix of session\n   protocols like SIP [1] and H.323 [2].  A benefit of\
    \ the session\n   identifier is that it uniquely identifies a communication session\n\
    \   end-to-end across session protocol boundaries.  Therefore, the need\n   for\
    \ coordinated standardization activities across Standards\n   Development Organizations\
    \ (SDOs) is imperative.\n   To facilitate this, a parallel effort is underway\
    \ in the ITU-T to\n   introduce the session identifier for H.323 in such a way\
    \ as to be\n   interoperable with the procedures defined by the IETF.\n"
- title: 6.2.  Requirements within 3GPP
  contents:
  - "6.2.  Requirements within 3GPP\n   The Third Generation Partnership Project (3GPP)\
    \ identified in their\n   Release 9 the need for a session identifier for operation\
    \ and\n   maintenance purposes to correlate flows in an end-to-end\n   communication\
    \ session.  3GPP TS24.229 [7] points to the fact that the\n   session identifier\
    \ can be used to correlate SIP messages belonging to\n   the same session.  In\
    \ the case where signaling passes through SIP\n   entities like B2BUAs, the end-to-end\
    \ session identifier indicates\n   that these dialogs belong to the same end-to-end\
    \ SIP communication\n   session.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   The security vulnerabilities, attacks, and threat\
    \ models affecting\n   other similar SIP identifiers are well documented in RFC\
    \ 3261 [1] and\n   are equally applicable to the end-to-end session identifier\
    \ and\n   subject to the same mitigating security best practices.  Further,\n\
    \   storage of the session identifier in a log file is also subject to\n   the\
    \ security considerations specified in RFC 6872 [8].\n   An end-to-end identifier,\
    \ if not properly constructed, could provide\n   confidential information that\
    \ would allow one to identify the\n   individual, device, or domain initiating\
    \ or terminating a\n   communication session.  In adhering to REQ4, the solution\
    \ produced in\n   accordance with these requirements MUST take appropriate measures\
    \ to\n   properly secure and obfuscate sensitive or private information that\n\
    \   might allow one to identify a person, device, or domain.  This means\n   that\
    \ the end-to-end session identifier MUST NOT reveal information\n   elements such\
    \ as the MAC address or IP address.  It is outside the\n   scope of this document\
    \ to specify the implementation details of such\n   security and privacy measures.\
    \  Those details may vary with the\n   specific construction mechanism selected\
    \ for the end-to-end session\n   identifier and therefore will be discussed in\
    \ the document specifying\n   the actual end-to-end identifier.\n   A key security\
    \ consideration is to ensure that an attacker cannot\n   surreptitiously spoof\
    \ the identifier and effectively render it\n   useless to diagnostic equipment\
    \ that cannot properly correlate\n   signaling messages due to the duplicate session\
    \ identifiers that\n   exist in the same space and time.  In accordance with REQ6,\
    \ this\n   end-to-end identifier MUST be sufficiently long and random to prevent\n\
    \   it from being guessable as well as avoid collision with another\n   identifier.\
    \  The secure transport of the identifier, need for\n   authentication, encryption,\
    \ etc. should be appropriately evaluated\n   based on the network infrastructure,\
    \ transport domain, and usage\n   scenarios for the end-to-end session identifier.\n"
- title: 8.  Acknowledgments
  contents:
  - "8.  Acknowledgments\n   The authors would like to acknowledge Paul Kyzivat, Christer\n\
    \   Holmberg, Charles Eckel, Andy Hutton, Salvatore Loreto, Keith Drage,\n   and\
    \ Chris Pearce for their contribution and collaboration in\n   developing this\
    \ document.\n"
- title: 9.  Contributors
  contents:
  - "9.  Contributors\n   Roland Jesske and Parthasarathi Ravindran provided substantial\n\
    \   contributions to this document during its initial creation.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [1]  Rosenberg, J., Schulzrinne, H., Camarillo,\
    \ G., Johnston, A.,\n        Peterson, J., Sparks, R., Handley, M., and E. Schooler,\
    \ \"SIP:\n        Session Initiation Protocol\", RFC 3261, June 2002.\n   [2]\
    \  Recommendation ITU-T H.323, \"Packet-based multimedia\n        communications\
    \ systems\", December 2009.\n   [3]  Bradner, S., \"Key words for use in RFCs\
    \ to Indicate Requirement\n        Levels\", BCP 14, RFC 2119, March 1997.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [4]  Schulzrinne, H., Casner, S., Frederick,\
    \ R., and V. Jacobson,\n        \"RTP: A Transport Protocol for Real-Time Applications\"\
    , STD 64,\n        RFC 3550, July 2003.\n   [5]  Rosenberg, J., Peterson, J.,\
    \ Schulzrinne, H., and G. Camarillo,\n        \"Best Current Practices for Third\
    \ Party Call Control (3pcc) in\n        the Session Initiation Protocol (SIP)\"\
    , BCP 85, RFC 3725,\n        April 2004.\n   [6]  Hautakorpi, J., Ed., Camarillo,\
    \ G., Penfield, R., Hawrylyshen,\n        A., and M. Bhatia, \"Requirements from\
    \ Session Initiation\n        Protocol (SIP) Session Border Control (SBC) Deployments\"\
    ,\n        RFC 5853, April 2010.\n   [7]  3GPP TS 24.229, \"IP multimedia call\
    \ control protocol based on\n        Session Initiation Protocol (SIP) and Session\
    \ Description\n        Protocol (SDP); Stage 3\".\n   [8]  Gurbani, V., Ed., Burger,\
    \ E., Ed., Anjali, T., Abdelnur, H., and\n        O. Festor, \"The Common Log\
    \ Format (CLF) for the Session\n        Initiation Protocol (SIP): Framework and\
    \ Information Model\",\n        RFC 6872, February 2013.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Paul E. Jones\n   Cisco Systems, Inc.\n   7025 Kit Creek\
    \ Rd.\n   Research Triangle Park, NC  27709\n   USA\n   Phone: +1 919 476 2048\n\
    \   EMail: paulej@packetizer.com\n   IM: xmpp:paulej@packetizer.com\n   Gonzalo\
    \ Salgueiro\n   Cisco Systems, Inc.\n   7025 Kit Creek Rd.\n   Research Triangle\
    \ Park, NC  27709\n   USA\n   Phone: +1 919 392 3266\n   EMail: gsalguei@cisco.com\n\
    \   IM: xmpp:gsalguei@cisco.com\n   James Polk\n   Cisco Systems, Inc.\n   3913\
    \ Treemont Circle\n   Colleyville, TX\n   USA\n   Phone: +1 817 271 3552\n   EMail:\
    \ jmpolk@cisco.com\n   IM: xmpp:jmpolk@cisco.com\n   Laura Liess\n   Deutsche\
    \ Telekom NP\n   64295 Darmstadt\n   Heinrich-Hertz-Str. 3-7\n   Germany\n   Phone:\
    \ +49 6151 268 2761\n   EMail: laura.liess.dt@gmail.com\n   Hadriel Kaplan\n \
    \  Oracle\n   71 Third Ave.\n   Burlington, MA  01803\n   USA\n   EMail: hadriel.kaplan@oracle.com\n"
