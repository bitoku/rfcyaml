- title: __initial_text__
  contents:
  - '                           Vouch By Reference

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\
    \ in effect on the date of\n   publication of this document (http://trustee.ietf.org/license-info).\n\
    \   Please review these documents carefully, as they describe your rights\n  \
    \ and restrictions with respect to this document.\n   This document may contain\
    \ material from IETF Documents or IETF\n   Contributions published or made publicly\
    \ available before November\n   10, 2008.  The person(s) controlling the copyright\
    \ in some of this\n   material may not have granted the IETF Trust the right to\
    \ allow\n   modifications of such material outside the IETF Standards Process.\n\
    \   Without obtaining an adequate license from the person(s) controlling\n   the\
    \ copyright in such materials, this document may not be modified\n   outside the\
    \ IETF Standards Process, and derivative works of it may\n   not be created outside\
    \ the IETF Standards Process, except to format\n   it for publication as an RFC\
    \ or to translate it into languages other\n   than English.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes the Vouch By Reference (VBR) protocol. \
    \ VBR\n   is a protocol for adding third-party certification to email.  It\n \
    \  permits independent third parties to certify the owner of a domain\n   name\
    \ that is associated with received mail.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Definitions ................................................4\n  \
    \ 2. Use of the VBR-Info Header Field ................................4\n   3.\
    \ Validation Process ..............................................4\n   4. The\
    \ VBR-Info Header Field .......................................5\n      4.1. Syntax\
    \ of VBR-Info Header Fields ...........................5\n   5. DNS Query .......................................................6\n\
    \   6. Types of Message Content ........................................7\n  \
    \    6.1. All ........................................................8\n    \
    \  6.2. List .......................................................8\n      6.3.\
    \ Transaction ................................................8\n   7. Obtaining\
    \ a Useful Domain Name ..................................8\n      7.1. DKIM .......................................................8\n\
    \      7.2. DomainKeys .................................................9\n  \
    \    7.3. SPF ........................................................9\n    \
    \  7.4. Sender ID .................................................10\n   8. Security\
    \ Considerations ........................................10\n   9. IANA Considerations\
    \ ............................................10\n   10. References ....................................................11\n\
    \      10.1. Normative References .....................................11\n  \
    \    10.2. Informative References ...................................11\n   Appendix\
    \ A.  Acknowledgements .....................................12\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Vouch By Reference, or VBR, is a protocol for adding third-party\n\
    \   certification to email.  Specifically, VBR permits independent third\n   parties\
    \ to certify the owner of a domain name that is associated with\n   received mail.\
    \  VBR may be performed anywhere along the email transit\n   path, by any capable\
    \ receiving module, either within the handling\n   service or by end-user software.\n\
    \   VBR accomplishes this with a two-part protocol:\n   o  In the first part,\
    \ a sender affixes VBR information to email\n      messages.  The VBR information\
    \ says which domain certification\n      services the sender believes will vouch\
    \ for email traffic\n      associated with that sender.\n   o  In the second part,\
    \ the receiver queries one or more certification\n      services to obtain information\
    \ about the identity that has been\n      associated with a received message.\
    \  This latter protocol uses the\n      DNS to distribute the certification information.\n\
    \   A sender provides certification attestations through the use of a new\n  \
    \ RFC 5322 ([RFC5322]) mail header field, \"VBR-Info:\".  This header\n   field\
    \ contains the names of services that the sender claims will\n   vouch for it,\
    \ and the particular type of content of the message.  A\n   queried, third-party,\
    \ DNS-based certification service can respond\n   with a list of the types of\
    \ message content it will vouch for, such\n   as \"transactional mail from somebank.example\"\
    \ and/or \"all mail from\n   anotherbank.example\".\n   A prerequisite for successful\
    \ VBR operation is validation of the\n   identity associated with the message.\
    \  VBR is based on the use of\n   domain names as identifiers, and permits multiple\
    \ methods of\n   obtaining and validating domain names.  The validation methods\
    \ are\n   described in the \"Obtaining a Useful Domain Name\" section below.\n\
    \   The sender performs two steps:\n   1.  Adds a VBR-Info header field to its\
    \ message\n   2.  Protects the message, as appropriate\n   If a recipient uses\
    \ the results of vouching to adjust spam scores on\n   incoming email, that recipient\
    \ is placing a great deal of operational\n   trust and power in the vouching service.\
    \  Therefore, recipients need\n   to select such services with care.  Further,\
    \ such recipients may want\n   to select more than one vouching service in order\
    \ to avoid a single\n   point of failure for setting spam scores.\n"
- title: 1.1.  Definitions
  contents:
  - "1.1.  Definitions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"\
    , and \"OPTIONAL\" in this\n   document are to be interpreted as described in\
    \ [RFC2119].\n"
- title: 2.  Use of the VBR-Info Header Field
  contents:
  - "2.  Use of the VBR-Info Header Field\n   A sender uses VBR to indicate which\
    \ domain certification services the\n   sender believes will vouch for a particular\
    \ piece of mail.  The\n   certification service uses VBR to state for which signatures\
    \ it will\n   vouch.  This protocol uses the DNS to distribute the certification\n\
    \   information.\n   A message may have multiple VBR-Info header fields.  This\
    \ means that,\n   in the terminology of RFC 5322, VBR-Info is a \"trace header\
    \ field\"\n   and SHOULD be added at the top of the header fields.\n   The content\
    \ of the VBR-Info header field is a list of three elements:\n   o  The accountable\
    \ domain\n   o  The type of content in the message\n   o  A list of domain names\
    \ of services that the sender expects to\n      vouch for that kind of content\n\
    \   The accountable domain is given as md= followed by a domain name.\n   The\
    \ content type is given as mc= followed by a string; the defined\n   values of\
    \ that string are found below.  The list of services is given\n   as mv= followed\
    \ by a colon-separated list of domain names.\n   The formal syntax of the header\
    \ field is defined in Section 4.\n"
- title: 3.  Validation Process
  contents:
  - "3.  Validation Process\n   A message receiver uses VBR to determine certification\
    \ status by\n   following these steps:\n   1.  Extracts the domain to certify\
    \ and the type of message content\n   2.  Verifies legitimate use of that domain\
    \ using one or more\n       authentication mechanisms as described herein\n  \
    \ 3.  Obtains the name of a vouching service that it trusts, either\n       from\
    \ among the set supplied by the sender or from a locally\n       defined set of\
    \ preferred vouching services\n   4.  Queries the vouching service to determine\
    \ whether the vouching\n       service actually vouches for that type of content\
    \ for that\n       domain.\n"
- title: 4.  The VBR-Info Header Field
  contents:
  - "4.  The VBR-Info Header Field\n   The VBR-Info header field has the following\
    \ format:\n      VBR-Info: md=<domain>; mc=<type-string>; mv=<certifier-list>;\n\
    \   where <domain> is the domain for which vouching is offered, <type-\n   string>\
    \ is the content type of the message, and <certifier-list> is a\n   list of domain\
    \ names of certification providers that the sender\n   asserts will vouch for\
    \ this particular message.  The structure of the\n   <certifier-list> is one or\
    \ more domain names with a colon (\":\")\n   between each.  The elements in the\
    \ <domain>, <type-string>, and\n   <certifier-list> must not have any white space\
    \ in them.\n   For example, assume that the signer has two companies that are\n\
    \   willing to vouch for its transactional notices: certifier-a.example\n   and\
    \ certifier-b.example.  The signer would add the following to the\n   header of\
    \ its outgoing message.\n      VBR-Info: md=somebank.example; mc=transaction;\n\
    \          mv=certifier-a.example:certifier-b.example;\n   All three header parameters\
    \ in the VBR-Info header are mandatory.  In\n   particular, there is no default\
    \ for the md= domain.\n   Upper and lowercase characters in a VBR-Info header\
    \ field are\n   equivalent, although conventionally the contents are all in lower\n\
    \   case.  For upward compatibility, verifiers MUST accept the fields in\n   any\
    \ order and SHOULD ignore any fields other than the three defined\n   here.\n\
    \   If a message has more than one VBR-Info header field, verifiers\n   SHOULD\
    \ check each in turn or in parallel until either a satisfactory\n   certifier\
    \ is found or all the header fields have been checked.  All\n   of the VBR-Info\
    \ header fields in a single message MUST have identical\n   mc= values.\n"
- title: 4.1.  Syntax of VBR-Info Header Fields
  contents:
  - "4.1.  Syntax of VBR-Info Header Fields\n   In the ABNF below, the ALPHA and DIGIT\
    \ tokens are imported from\n   [RFC5234], and the FWS and domain-name tokens are\
    \ imported from\n   [RFC4871].\n   vbr-info-header =  \"VBR-Info:\" 1*([FWS] element\
    \ [FWS] \";\")\n   element = md-element / mc-element / mv-element\n   md-element\
    \ = \"md=\" [FWS] domain-name\n   mc-element = \"mc=\" [FWS] type-string\n   type-string\
    \ = \"all\" / \"list\" / \"transaction\"\n   mv-element = \"mv=\" [FWS] certifier-list\n\
    \   certifier-list = domain-name *(\":\" domain-name)\n"
- title: 5.  DNS Query
  contents:
  - "5.  DNS Query\n   When a recipient wants to check whether a certification claim\
    \ is\n   valid, it compares the list in the message to the list of services it\n\
    \   trusts.  For each service that is on the intersection of the two\n   lists,\
    \ it marshals a domain name to look up that consists of the\n   following DNS\
    \ labels (from left to right):\n   o  the domain name that asserts it can be certified\n\
    \   o  _vouch (a string literal)\n   o  the host name of the vouching service\n\
    \   This domain name is queried for a DNS TXT record.  The recipient\n   looks\
    \ up the domain name in the DNS in the exact same manner it looks\n   up all other\
    \ domain names.\n   For example, if a message signed by somebank.example contained\
    \ the\n   VBR-Info header field above, the receiver might look up either or\n\
    \   both of the following names, depending on which vouching service it\n   trusts:\n\
    \      somebank.example._vouch.certifier-b.example\n      somebank.example._vouch.certifier-a.example\n\
    \   If the DNS TXT record exists, it contains a space-delimited list of\n   all\
    \ the types that the service certifies, given as lowercase ASCII.\n   For example,\
    \ the contents of the TXT record might be:\n      transaction list\n   In the\
    \ example above, the receiver checks whether or not either\n   certifier vouches\
    \ for \"transaction\" mail.  That would be indicated by\n   either of the following\
    \ types: \"all\" or \"transaction\" (\"all\"\n   indicates that the certifier\
    \ vouches for all message types sent by\n   the domain in question).  If either\
    \ of those types appear in either\n   TXT record, the certifier has vouched for\
    \ the validity of the\n   message.  Of course, the recipient needs to ignore services\
    \ that it\n   does not trust; otherwise, a bad actor could just add an authority\n\
    \   that it has set up so that it can vouch for itself.\n   The name for the label\
    \ _vouch was chosen because any domain name that\n   includes it as one of its\
    \ labels cannot be a valid host name.  There\n   will never be any accidental\
    \ overlap with a valid host name.\n   Further, it is safe to create a rule that\
    \ says that a TXT DNS record\n   that comes from a domain name that includes a\
    \ _vouch label will\n   always have the structure defined in this document.\n\
    \   If the RDATA in the TXT record contains multiple character-strings\n   (as\
    \ defined in Section 3.3 of [RFC1035]), the code handling that\n   reply from\
    \ DNS MUST assemble all of these marshaled text blocks into\n   a single one before\
    \ any syntactical verification takes place.\n   Verifiers MUST then check that\
    \ the TXT record consists of strings of\n   lowercase letters separated by spaces,\
    \ and discard any records not in\n   that format.  This defends against misconfigured\
    \ records and\n   irrelevant records synthesized from DNS wildcards.\n   The VBR\
    \ record MUST have only one TXT record.\n   This query method relies on the considerable\
    \ advantages of existing\n   DNS efficiencies, reliability, and experience.  The\
    \ lookup is very\n   efficient, and certifiers can add and delete client records\
    \ as\n   quickly as they want.  The lookup also leverages the DNS's negative\n\
    \   caching ([RFC2308]).\n"
- title: 6.  Types of Message Content
  contents:
  - "6.  Types of Message Content\n   This section describes the types of content\
    \ for which a certifier can\n   vouch.  While the rest of the VBR specification\
    \ is mostly technical\n   and precise, describing the types of contents in mail\
    \ messages is\n   inherently open to interpretation.  Thus, this section makes\n\
    \   distinctions as specifically as possible, but the reader needs to\n   understand\
    \ that these semantic definitions can be interpreted in very\n   different ways\
    \ by different people.\n   Note that the value in the mc= element is self-asserted.\
    \  The purpose\n   of this element is for auditing.  There will likely be cases\
    \ where a\n   certifier will vouch for one type of a sender's mail (such as\n\
    \   transactional mail) but not another type (such as advertising).  A\n   sender\
    \ who cannot get anyone to certify its advertising mail, but has\n   a certifier\
    \ for its transactional mail, might be tempted to cheat and\n   mislabel it as\
    \ transactional.  The mc= element creates an the audit\n   trail to help their\
    \ certifiers catch such cheating and allow the\n   removal of the certification\
    \ for the transactional mail.\n   Three types of content are defined.\n"
- title: 6.1.  All
  contents:
  - "6.1.  All\n   \"all\" means all mail from the sender.\n"
- title: 6.2.  List
  contents:
  - "6.2.  List\n   \"list\" is the category for email sent to multiple recipients\
    \ where\n   each piece of mail is identical or is very similar to the others.\n"
- title: 6.3.  Transaction
  contents:
  - "6.3.  Transaction\n   \"transaction\" is the category for transactional messages.\
    \  This is a\n   response to a specific action of the user, or a notice about\
    \ an event\n   in the user's account at the sender.\n"
- title: 7.  Obtaining a Useful Domain Name
  contents:
  - "7.  Obtaining a Useful Domain Name\n   VBR relies on having a domain name that\
    \ specifies a party that is\n   accountable for the message.  This requires obtaining\
    \ the domain name\n   and possessing a strong basis for believing that the use\
    \ of the\n   domain name is valid, that is, that it has not been spoofed.\n  \
    \ There are different ways to achieve this and this section discusses\n   the\
    \ allowed mechanisms.  Senders SHOULD use Domain Keys Identified\n   Mail (DKIM)\
    \ (and MAY use DomainKeys, Sender Policy Framework (SPF),\n   or SenderID) to\
    \ give an accountable identity for the sender.\n"
- title: 7.1.  DKIM
  contents:
  - "7.1.  DKIM\n   DomainKeys Identified Mail (DKIM), [RFC4871], defines an accountable\n\
    \   identity by associating a domain name with the message.  It provides\n   assurance\
    \ that the association is valid through a public-key-based\n   authentication\
    \ mechanism.\n   o  When DKIM is the validation mechanism, VBR's md= MUST match\
    \ the\n      domain name taken from one of the DKIM-Signature header fields.\n\
    \      If the DKIM signature contains an i= field, the domain name from\n    \
    \  that field is used; otherwise, the domain name from the DKIM\n      signature\
    \ d= field is used.\n   o  The VBR-Info header field SHOULD be included in the\
    \ set of header\n      fields protected by DKIM to prevent a malicious party from\n\
    \      changing the contents of the VBR-Info header field or adding bogus\n  \
    \    VBR-Info header fields.\n   o  The VBR-Info header field SHOULD be added\
    \ in the header\n      immediately below the corresponding DKIM-Signature header\
    \ field.\n   If the DKIM signature validates, the domain name taken from that\n\
    \   signature is valid for use with VBR.\n"
- title: 7.2.  DomainKeys
  contents:
  - "7.2.  DomainKeys\n   DomainKeys (DK), [RFC4870], defines an accountable identity\
    \ by\n   associating a domain name with the message in the d= tag of the\n   DomainKey-Signature\
    \ header field.  It provides assurance that the\n   association is valid through\
    \ a public-key-based authentication\n   mechanism.\n   o  When DomainKeys is the\
    \ validation mechanism, VBR's md= MUST be the\n      same value as the domain\
    \ name found in the DomainKey-Signature d=\n      parameter.\n   o  The VBR-Info\
    \ header field SHOULD be included in the set of header\n      fields protected\
    \ by DK to prevent a malicious party from changing\n      the contents of the\
    \ VBR-Info header field or adding bogus VBR-Info\n      header fields.\n   o \
    \ The VBR-Info header field SHOULD be added immediately below the\n      corresponding\
    \ DomainKey-Signature header field.\n   If the DomainKeys signature validates,\
    \ the domain in the d= tag is\n   valid for use with VBR.\n"
- title: 7.3.  SPF
  contents:
  - "7.3.  SPF\n   Sender Policy Framework (SPF), [RFC4408], defines an accountable\n\
    \   identity by using an existing message address and querying the DNS to\n  \
    \ discover whether it is valid for SPF use.\n   When SPF is the validation mechanism,\
    \ VBR's md= MUST be the same\n   value as the domain name in the <reverse-path>\
    \ address that is the\n   first parameter to the SMTP MAIL command.\n   A domain\
    \ is valid for use with VBR only when the SPF process produces\n   a \"pass\"\
    \ result.\n"
- title: 7.4.  Sender ID
  contents:
  - "7.4.  Sender ID\n   Sender ID, [RFC4406], defines an accountable identity by\
    \ using an\n   existing message address known as the Purported Responsible Address\n\
    \   ([RFC4407]) and querying the DNS to discover whether it is valid for\n   Sender\
    \ ID use.\n   When Sender ID is the validation mechanism, VBR's md= MUST be the\n\
    \   same value as the domain name in the Purported Responsible Address in\n  \
    \ the message.\n   A domain is valid for use with VBR only when the Sender ID\
    \ process\n   produces a \"pass\" result.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   VBR is used to allow users to trust independent\
    \ third parties to\n   certify the owner of a domain name that is associated with\
    \ received\n   mail.  The party validating the mail might use that trust\n   relationship\
    \ to perform actions that affect the security of their\n   system.\n   The receiver\
    \ of a message with a VBR-Info header field MUST ignore\n   certifiers that it\
    \ does not trust; otherwise, a bad actor could just\n   add an authority that\
    \ it has set up so that it can vouch for itself.\n   Implementations SHOULD limit\
    \ the number of VBR-Info header fields\n   they process in a single message in\
    \ order to protect themselves from\n   a make-work or denial-of-service attack.\n"
- title: 9.  IANA Considerations
  contents:
  - "9.  IANA Considerations\n   IANA registered the VBR-Info header field in the\
    \ Message Header\n   Fields Registry ([RFC3864]) as follows:\n   Header field\
    \ name: VBR-Info\n   Applicable protocol: mail\n   Status: standard\n   Author/Change\
    \ controller: IETF\n   Specification document(s): RFC 5518\n   Related information:\
    \ none\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC5234]  Crocker, D. and P. Overell, \"Augmented BNF for Syntax\n\
    \              Specifications: ABNF\", STD 68, RFC 5234, January 2008.\n   [RFC5322]\
    \  Resnick, P., Ed., \"Internet Message Format\", RFC 5322,\n              October\
    \ 2008.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [RFC1035]  Mockapetris, P., \"Domain names\
    \ - implementation and\n              specification\", STD 13, RFC 1035, November\
    \ 1987.\n   [RFC2308]  Andrews, M., \"Negative Caching of DNS Queries (DNS\n \
    \             NCACHE)\", RFC 2308, March 1998.\n   [RFC3864]  Klyne, G., Nottingham,\
    \ M., and J. Mogul, \"Registration\n              Procedures for Message Header\
    \ Fields\", BCP 90, RFC 3864,\n              September 2004.\n   [RFC4406]  Lyon,\
    \ J. and M. Wong, \"Sender ID: Authenticating E-Mail\",\n              RFC 4406,\
    \ April 2006.\n   [RFC4407]  Lyon, J., \"Purported Responsible Address in E-Mail\n\
    \              Messages\", RFC 4407, April 2006.\n   [RFC4408]  Wong, M. and W.\
    \ Schlitt, \"Sender Policy Framework (SPF)\n              for Authorizing Use\
    \ of Domains in E-Mail, Version 1\",\n              RFC 4408, April 2006.\n  \
    \ [RFC4870]  Delany, M., \"Domain-Based Email Authentication Using\n         \
    \     Public Keys Advertised in the DNS (DomainKeys)\", RFC 4870,\n          \
    \    May 2007.\n   [RFC4871]  Allman, E., Callas, J., Delany, M., Libbey, M.,\
    \ Fenton,\n              J., and M. Thomas, \"DomainKeys Identified Mail (DKIM)\n\
    \              Signatures\", RFC 4871, May 2007.\n"
- title: Appendix A.  Acknowledgements
  contents:
  - "Appendix A.  Acknowledgements\n   Many members of the Domain Assurance Council\
    \ contributed to the\n   design of the protocol and the wording of this document.\
    \  In\n   addition, constructive suggestions were received from Jim Fenton and\n\
    \   Murray Kucherawy.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Paul Hoffman\n   Domain Assurance Council\n   EMail: paul.hoffman@domain-assurance.org\n\
    \   John Levine\n   Domain Assurance Council\n   EMail: john.levine@domain-assurance.org\n\
    \   Arvel Hathcock\n   Alt-N Technologies\n   EMail: arvel.hathcock@altn.com\n"
