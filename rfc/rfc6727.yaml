- title: __initial_text__
  contents:
  - '           Definitions of Managed Objects for Packet Sampling

    '
- title: Abstract
  contents:
  - "Abstract\n   This memo defines a portion of the Management Information Base (MIB)\n\
    \   for use with network management protocols in the Internet community.\n   In\
    \ particular, it describes extensions to the IPFIX-SELECTOR-MIB\n   module.  For\
    \ IP Flow Information eXport (IPFIX) implementations that\n   use Packet Sampling\
    \ (PSAMP) techniques, this memo defines the PSAMP-\n   MIB module containing managed\
    \ objects for providing information on\n   applied packet selection functions\
    \ and their parameters.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6727.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  The Internet-Standard Management Framework . . . .\
    \ . . . . . .  3\n   2.  Introduction . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  3\n   3.  Overview of PSAMP Documents  . . . . . . . . . . . . .\
    \ . . . .  4\n   4.  Related IPFIX Documents  . . . . . . . . . . . . . . . .\
    \ . . .  4\n   5.  Structure of the PSAMP MIB module  . . . . . . . . . . . .\
    \ . .  4\n     5.1.  Textual Conventions  . . . . . . . . . . . . . . . . . .\
    \ .  5\n     5.2.  Packet Selection Functions . . . . . . . . . . . . . . . .\
    \  6\n       5.2.1.  Systematic Count-Based Sampling  . . . . . . . . . . .  6\n\
    \       5.2.2.  Systematic Time-Based Sampling . . . . . . . . . . . .  6\n  \
    \     5.2.3.  Random n-out-of-N Sampling . . . . . . . . . . . . . .  7\n    \
    \   5.2.4.  Uniform Probabilistic Sampling . . . . . . . . . . . .  7\n      \
    \ 5.2.5.  Property Match Filtering . . . . . . . . . . . . . . .  7\n       5.2.6.\
    \  Hash-Based Filtering . . . . . . . . . . . . . . . . .  8\n   6.  Definitions\
    \  . . . . . . . . . . . . . . . . . . . . . . . . .  9\n   7.  Security Considerations\
    \  . . . . . . . . . . . . . . . . . . . 25\n   8.  IANA Considerations  . . .\
    \ . . . . . . . . . . . . . . . . . . 25\n   9.  Acknowledgment . . . . . . .\
    \ . . . . . . . . . . . . . . . . . 26\n   10. References . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . 26\n     10.1. Normative References . . . .\
    \ . . . . . . . . . . . . . . . 26\n     10.2. Informative References . . . .\
    \ . . . . . . . . . . . . . . 27\n"
- title: 1.  The Internet-Standard Management Framework
  contents:
  - "1.  The Internet-Standard Management Framework\n   For a detailed overview of\
    \ the documents that describe the current\n   Internet-Standard Management Framework,\
    \ please refer to section 7 of\n   RFC 3410 [RFC3410].\n   Managed objects are\
    \ accessed via a virtual information store, termed\n   the Management Information\
    \ Base or MIB.  MIB objects are generally\n   accessed through the Simple Network\
    \ Management Protocol (SNMP).\n   Objects in the MIB are defined using the mechanisms\
    \ defined in the\n   Structure of Management Information (SMI).  This memo specifies\
    \ a MIB\n   module that is compliant to the SMIv2, which is described in STD 58,\n\
    \   RFC 2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58,RFC 2580\n   [RFC2580].\n"
- title: 2.  Introduction
  contents:
  - "2.  Introduction\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\"\
    , \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described\
    \ in RFC\n   2119 [RFC2119].\n   This document is a product of the IP Flow Information\
    \ eXport (IPFIX)\n   Working Group (WG).  Work on this document was started in\
    \ the Packet\n   Sampling (PSAMP) WG and moved to the IPFIX WG when the PSAMP\
    \ WG was\n   concluded.\n   Its purpose is to define managed objects for monitoring,\
    \ PSAMP\n   Devices performing packet selection by Sampling and Filtering as\n\
    \   described in [RFC5475].\n   It is assumed that packet Sampling is performed\
    \ according to the\n   framework defined in [RFC5474].  In this document, the\
    \ PSAMP terms\n   that appear capitalized are used as defined in [RFC5475].\n\
    \   Managed objects in the PSAMP MIB module are defined as an extension\n   of\
    \ the IPFIX-MIB and IPFIX-SELECTOR-MIB modules [RFC6615].  Since the\n   IPFIX\
    \ MIB module is only for monitoring the same holds true for the\n   PSAMP MIB\
    \ module defined in this document.  The definition of objects\n   is in line with\
    \ the PSAMP information model [RFC5477].\n   Section 3 gives an overview of the\
    \ PSAMP documents, while Section 4\n   refers to the related IPFIX documents.\
    \  Section 5 describes the\n   structure of the PSAMP MIB module, and Section\
    \ 6 contains the formal\n   definition.  Security issues are discussed in Section\
    \ 7.\n"
- title: 3.  Overview of PSAMP Documents
  contents:
  - "3.  Overview of PSAMP Documents\n   [RFC5474]: \"A Framework for Packet Selection\
    \ and Reporting\" describes\n   the PSAMP framework for network elements to select\
    \ subsets of packets\n   by statistical and other methods, and to export a stream\
    \ of reports\n   on the selected packets to a Collector.\n   [RFC5475]: \"Sampling\
    \ and Filtering Techniques for IP Packet\n   Selection\" describes the set of\
    \ packet selection techniques supported\n   by PSAMP.\n   [RFC5476]: \"Packet\
    \ Sampling (PSAMP) Protocol Specifications\"\n   specifies the export of packet\
    \ information from a PSAMP Exporting\n   Process to a PSAMP Collecting Process.\n\
    \   [RFC5477]: \"Information Model for Packet Sampling Exports\" defines an\n\
    \   information and data model for PSAMP.\n   This document: \"Definitions of\
    \ Managed Objects for Packet Sampling\"\n   describes the PSAMP Management Information\
    \ Base.\n"
- title: 4.  Related IPFIX Documents
  contents:
  - "4.  Related IPFIX Documents\n   The IPFIX protocol provides network administrators\
    \ with access to IP\n   Flow information.\n   [RFC5101]: \"Specification of the\
    \ IP Flow Information Export (IPFIX)\n   Protocol for the Exchange of IP Traffic\
    \ Flow Information\" specifies\n   how IPFIX Data Records and Templates are carried\
    \ via a congestion-\n   aware transport protocol from IPFIX Exporting Processes\
    \ to IPFIX\n   Collecting Processes.  It also specifies the data types used in\
    \ the\n   PSAMP MIB module and their encoding.\n   [RFC6615]: The IPFIX-MIB \"\
    Definitions of Managed Objects for IP Flow\n   Information Export\" is the basis\
    \ for this document because it extends\n   the IPFIX SELECTOR MIB module defined\
    \ there.\n"
- title: 5.  Structure of the PSAMP MIB module
  contents:
  - "5.  Structure of the PSAMP MIB module\n   The IPFIX-MIB module defined in [RFC6615]\
    \ has the concept of a packet\n   Selection Process containing a set of Selector\
    \ function instances.\n   Selection Processes and functions are referenced in\
    \ the\n   ipfixSelectionProcessTable of the IPFIX-MIB module.  The\n   ipfixSelectionProcessTable\
    \ identifies an instance of a Selector\n   function by an OID.  The OID points\
    \ to an object that describes the\n   Selector function.  For simple Selector\
    \ functions without parameters,\n   the OID refers to an object that contains\
    \ only one additional object\n   indicating the current availability of the function.\
    \  For functions\n   that have one or more parameters, the object has a subtree\
    \ that, in\n   addition to an availability object, contains a table with a\n \
    \  conceptual column for each parameter.  Entries (conceptual rows) in\n   this\
    \ table represent different combinations of parameter values for\n   instances\
    \ of the Selector function.\n   The object ipfixSelectorFunctions in the IPFIX\
    \ SELECTOR MIB module\n   serves as the root for objects that describe instances\
    \ of packet\n   Selector functions.  The IPFIX SELECTOR MIB module is a very small\n\
    \   module that is defined in [RFC6615].  The top-level OIDs of the\n   parameter\
    \ trees located beneath ipfixSelectorFunctions are maintained\n   by IANA.  In\
    \ the IPFIX SELECTOR MIB module as defined by [RFC6615],\n   the object ipfixSelectorFunctions\
    \ contains just a single trivial\n   packet Selector function called ipfixFuncSelectAll\
    \ that selects every\n   packet and has no parameter:\n   ipfixSelectorMIB\n \
    \  +- ipfixSelectorObjects(1)\n      +- ipfixSelectorFunctions(1)\n         +-\
    \ ipfixFuncSelectAll(1)\n            +- ipfixFuncSelectAllAvail(1)\n   The PSAMP\
    \ MIB module defined in this document registers additional\n   top-level OIDs\
    \ for the parameter subtrees of its Selector functions\n   in the IPFIX-SELECTOR-MIB\
    \ Function sub-registry according to the\n   procedures defined in [RFC6615].\
    \  It introduces six new subtrees\n   beneath ipfixSelectorFunctions.  Each of\
    \ them describes a packet\n   Selector function with one or more parameters. \
    \ Naming and ordering\n   of objects is fully in line with the guidelines given\
    \ in Section 6.1\n   of [RFC6615].  All functions and their parameters are already\
    \ listed\n   in the overview of functions given by the table in Section 8.2.1\
    \ of\n   [RFC5477].\n"
- title: 5.1.  Textual Conventions
  contents:
  - "5.1.  Textual Conventions\n   The PSAMP MIB module imports two textual conventions\
    \ that define data\n   types used in this MIB module from other MIB modules. \
    \ The\n   Unsigned64TC data type is imported from the APPLICATION MIB module\n\
    \   [RFC2564], and the Float64TC data type is imported from the FLOAT-TC-\n  \
    \ MIB module [RFC6340].  Those data types are defined according to\n   [RFC5101].\
    \  Those data types are not an integral part of [RFC2578]\n   but are needed to\
    \ define objects in this MIB module that conform to\n   the Information Elements\
    \ defined for those objects in [RFC5477].\n   The Unsigned64TC textual convention\
    \ describes an unsigned integer of\n   64 bits.  It is imported from the APPLICATION\
    \ MIB module.  The\n   Float64TC textual convention describes the format that\
    \ is used for\n   64-bit floating point numbers.\n"
- title: 5.2.  Packet Selection Functions
  contents:
  - "5.2.  Packet Selection Functions\n   In general, different packet Selector functions\
    \ have different\n   parameters.  The PSAMP MIB module contains six objects with\
    \ subtrees\n   that provide information on parameters of function instances of\n\
    \   different Selector functions.  All objects are named and structured\n   according\
    \ to Section 8.2.1 of [RFC5477]:\n   ipfixSelectorFunctions(1)\n   +-- psampSampCountBased(2)\n\
    \   +-- psampSampTimeBased(3)\n   +-- psampSampRandOutOfN(4)\n   +-- psampSampUniProb(5)\n\
    \   +-- psampFiltPropMatch(6)\n   +-- psampFiltHash(7)\n   Indexing of these functions\
    \ in the PSAMP MIB module starts with index\n   (2).  The function ipfixFuncSelectAll\
    \ with index (1) is already\n   defined in the IPFIX SELECTOR MIB module as shown\
    \ above.\n   The object tree for each of these functions is described below.\n\
    \   Semantics of all functions and their parameters are described in\n   detail\
    \ in [RFC5475].  More information on the Selector Reports can\n   also be found\
    \ in Section 6.5.2 of [RFC5476].\n"
- title: 5.2.1.  Systematic Count-Based Sampling
  contents:
  - "5.2.1.  Systematic Count-Based Sampling\n   The first Selector function is systematic\
    \ count-based Sampling.  Its\n   availability is indicated by object psampSampCountBasedAvail.\
    \  The\n   function has two parameters: psampSampCountBasedInterval and\n   psampSampCountBasedSpace.\
    \  Different combinations of values of these\n   parameters for different instances\
    \ of the Selector function are\n   represented by different conceptual rows in\
    \ the table\n   psampSampCountBasedParamSetTable:\n   psampSampCountBased(2)\n\
    \   +-- psampSampCountBasedAvail(1)\n   +-- psampSampCountBasedParamSetTable(2)\n\
    \      +-- psampSampCountBasedParamSetEntry(1) [psampSampCountBasedIndex]\n  \
    \       +-- psampSampCountBasedIndex(1)\n         +-- psampSampCountBasedInterval(2)\n\
    \         +-- psampSampCountBasedSpace(3)\n"
- title: 5.2.2.  Systematic Time-Based Sampling
  contents:
  - "5.2.2.  Systematic Time-Based Sampling\n   The second Selector function is systematic\
    \ time-based Sampling.  The\n   structure of the subtree for this function is\
    \ similar to the\n   psampSampCountBased subtree.  Parameters are\n   psampSampTimeBasedInterval\
    \ and psampSampTimeBasedSpace.  They appear\n   to be the same as for count-based\
    \ Sampling, but their data types are\n   different because they indicate time\
    \ values instead of numbers of\n   packets:\n   psampSampTimeBased(3)\n   +--\
    \ psampSampTimeBasedAvail(1)\n   +-- psampSampTimeBasedParamSetTable(2)\n    \
    \  +-- psampSampTimeBasedParamSetEntry(1) [psampSampTimeBasedIndex]\n        \
    \ +-- psampSampTimeBasedIndex(1)\n         +-- psampSampTimeBasedInterval(2)\n\
    \         +-- psampSampTimeBasedSpace(3)\n"
- title: 5.2.3.  Random n-out-of-N Sampling
  contents:
  - "5.2.3.  Random n-out-of-N Sampling\n   The third Selector function is random\
    \ n-out-of-N Sampling.\n   Parameters are psampSampRandOutOfNSize and\n   psampSampRandOutOfNPopulation:\n\
    \   psampSampRandOutOfN(4)\n   +-- psampSampRandOutOfNAvail(1)\n   +-- psampSampRandOutOfNParamSetTable(2)\n\
    \      +-- psampSampRandOutOfNParamSetEntry(1) [psampSampRandOutOfNIndex]\n  \
    \       +-- psampSampRandOutOfNIndex(1)\n         +-- psampSampRandOutOfNSize(2)\n\
    \         +-- psampSampRandOutOfNPopulation(3)\n"
- title: 5.2.4.  Uniform Probabilistic Sampling
  contents:
  - "5.2.4.  Uniform Probabilistic Sampling\n   The fourth Selector function is uniform\
    \ probabilistic Sampling.  It\n   has just a single parameter called psampSampUniProbProbability:\n\
    \   psampSampUniProb(5)\n   +-- psampSampUniProbAvail(1)\n   +-- psampSampUniProbParamSetTable(2)\n\
    \      +-- psampSampUniProbParamSetEntry(1) [psampSampUniProbIndex]\n        \
    \ +-- psampSampUniProbIndex(1)\n         +-- psampSampUniProbProbability(2)\n"
- title: 5.2.5.  Property Match Filtering
  contents:
  - "5.2.5.  Property Match Filtering\n   The fifth Selector function is property\
    \ match Filtering.  For this\n   Selector function, there is a broad variety of\
    \ possible parameters\n   that could be used.  But, as stated in Section 8.2.1\
    \ of [RFC5477],\n   there are no agreed parameters specified and the subtree for\
    \ this\n   function only contains an object indicating the availability of this\n\
    \   function.  Parameters cannot be retrieved via the PSAMP MIB module:\n   psampFiltPropMatch(6)\n\
    \   +-- psampFiltPropMatchAvail(1)\n"
- title: 5.2.6.  Hash-Based Filtering
  contents:
  - "5.2.6.  Hash-Based Filtering\n   The sixth Selector function is hash-based Filtering.\
    \  The object\n   psampFiltHashFunction is an enumeration that specifies the kind\
    \ of\n   hash function that is applied.  These hash functions have quite a\n \
    \  number of parameters, and the actual number may vary with the choice\n   of\
    \ the hash function applied.  The common parameter set for all hash-\n   based\
    \ Filtering functions contains 7 parameters:\n   psampFiltHashInitializerValue,\
    \ psampFiltHashIpPayloadOffset,\n   psampFiltHashIpPayloadSize, psampFiltHashSelectedRangeMin,\n\
    \   psampFiltHashSelectedRangeMax, psampFiltHashOutputRangeMin, and\n   psampFiltHashOutputRangeMax.\n\
    \   psampFiltHash(7)\n   +-- psampFiltHashAvail(1)\n   +-- psampFiltHashCapabilities(2)\n\
    \   +-- psampFiltHashParamSetTable(3)\n      +-- psampFiltHashParamSetEntry(1)\
    \ [psampFiltHashIndex]\n         +-- psampFiltHashIndex(1)\n         +-- psampFiltHashFunction(2)\n\
    \         +-- psampFiltHashInitializerValue(3)\n         +-- psampFiltHashIpPayloadOffset(4)\n\
    \         +-- psampFiltHashIpPayloadSize(5)\n         +-- psampFiltHashSelectedRangeMin(6)\n\
    \         +-- psampFiltHashSelectedRangeMax(7)\n         +-- psampFiltHashOutputRangeMin(8)\n\
    \         +-- psampFiltHashOutputRangeMax(9)\n   Further parameters depend on\
    \ the applied hash function and are not\n   specified within the PSAMP MIB module.\n"
- title: 6.  Definitions
  contents:
  - "6.  Definitions\n   PSAMP-MIB DEFINITIONS ::= BEGIN\n   IMPORTS\n       MODULE-IDENTITY,\
    \ OBJECT-TYPE, Integer32, Unsigned32, mib-2\n           FROM SNMPv2-SMI      \
    \            -- RFC 2578\n       TruthValue\n           FROM SNMPv2-TC       \
    \            -- RFC 2579\n       MODULE-COMPLIANCE, OBJECT-GROUP\n           FROM\
    \ SNMPv2-CONF                 -- RFC 2580\n       Unsigned64TC\n           FROM\
    \ APPLICATION-MIB             -- RFC 2564\n       Float64TC\n           FROM FLOAT-TC-MIB\
    \                -- RFC 6340\n       ipfixSelectorFunctions\n           FROM IPFIX-SELECTOR-MIB;\
    \         -- RFC 6615\n   psampMIB MODULE-IDENTITY\n       LAST-UPDATED \"201209051200Z\"\
    \         -- 5 September 2012\n       ORGANIZATION \"IETF IPFIX Working Group\"\
    \n       CONTACT-INFO\n           \"WG charter:\n             http://datatracker.ietf.org/wg/ipfix/charter/\n\
    \           Mailing Lists:\n             General Discussion: ipfix@ietf.org\n\
    \             To Subscribe: https://www.ietf.org/mailman/listinfo/ipfix\n    \
    \         Archive:\n        http://www.ietf.org/mail-archive/web/ipfix/current/maillist.html\n\
    \             Thomas Dietz (editor)\n             NEC Europe Ltd.\n          \
    \   NEC Laboratories Europe\n             Network Research Division\n        \
    \     Kurfuersten-Anlage 36\n             69115 Heidelberg\n             Germany\n\
    \             Phone: +49 6221 4342-128\n             EMail: Thomas.Dietz@neclab.eu\n\
    \             Benoit Claise\n             Cisco Systems, Inc.\n             De\
    \ Kleetlaan 6a b1\n             Diegem 1831\n             Belgium\n          \
    \   Phone:  +32 2 704 5622\n             EMail: bclaise@cisco.com\n          \
    \   Juergen Quittek\n             NEC Europe Ltd.\n             NEC Laboratories\
    \ Europe\n             Network Research Division\n             Kurfuersten-Anlage\
    \ 36\n             69115 Heidelberg\n             Germany\n             Phone:\
    \ +49 6221 4342-115\n             EMail: quittek@neclab.eu\"\n           DESCRIPTION\n\
    \           \"The PSAMP MIB defines managed objects for packet sampling\n    \
    \       and filtering.\n           These objects provide information about managed\
    \ nodes\n           supporting packet sampling, including packet sampling\n  \
    \         capabilities, configuration, and statistics.\n           The PSAMP MIB\
    \ module registers additional top-level OIDs for\n           the parameter subtrees\
    \ of its Selector functions in the\n           IPFIX-SELECTOR-MIB Function sub-registry\
    \ according to the\n           procedures defined in RFC 6615.\n           Copyright\
    \ (c) 2012 IETF Trust and the persons identified\n           as authors of the\
    \ code. All rights reserved.\n           Redistribution and use in source and\
    \ binary forms, with or\n           without modification, is permitted pursuant\
    \ to, and subject\n           to the license terms contained in, the Simplified\
    \ BSD License\n           set forth in Section 4.c of the IETF Trust's Legal Provisions\n\
    \           Relating to IETF Documents\n           (http://trustee.ietf.org/license-info).\n\
    \           This version of this MIB module is part of RFC 6727; see the\n   \
    \        RFC itself for full legal notices.\"\n        --  Revision history\n\
    \        REVISION     \"201209051200Z\"         -- 5 September 2012\n        DESCRIPTION\n\
    \            \"Initial version, published as RFC 6727.\"\n       ::= { mib-2 212\
    \ }\n   -- Top-level structure of the MIB\n   psampObjects     OBJECT IDENTIFIER\
    \ ::= { psampMIB 1 }\n   psampConformance OBJECT IDENTIFIER ::= { psampMIB 2 }\n\
    \   --==================================================================\n   --\
    \ Packet selection sampling methods group of objects\n   --==================================================================\n\
    \   --==================================================================\n   --*\
    \ Method 1: Systematic count-based Sampling\n   --==================================================================\n\
    \   -- Reference: RFC 5475 (Section 5.1), RFC 5476 (Section 6.5.2.1),\n   -- \
    \           and RFC 5477 (Section 8.2)\n   psampSampCountBased OBJECT IDENTIFIER\n\
    \       ::= { ipfixSelectorFunctions 2 }\n   psampSampCountBasedAvail OBJECT-TYPE\n\
    \       SYNTAX      TruthValue\n       MAX-ACCESS  read-only\n       STATUS  \
    \    current\n       DESCRIPTION\n           \"This object indicates the availability\
    \ of systematic\n           count-based sampling at the managed node.\n      \
    \     A Selector may be unavailable if it is implemented but\n           currently\
    \ disabled due to, e.g., administrative reasons, lack\n           of resources,\
    \ or similar.\"\n       ::= { psampSampCountBased 1 }\n   -- Parameter Set Table\
    \ +++++++++++++++++++++++++++++++++++++++++++++\n   psampSampCountBasedParamSetTable\
    \ OBJECT-TYPE\n       SYNTAX      SEQUENCE OF\n                   PsampSampCountBasedParamSetEntry\n\
    \       MAX-ACCESS  not-accessible\n       STATUS      current\n       DESCRIPTION\n\
    \           \"This table lists configurations of systematic count-based\n    \
    \       packet sampling.  A parameter set describing a\n           configuration\
    \ contains two parameters: the sampling\n           interval length and space.\"\
    \n       ::= { psampSampCountBased 2 }\n   psampSampCountBasedParamSetEntry OBJECT-TYPE\n\
    \       SYNTAX      PsampSampCountBasedParamSetEntry\n       MAX-ACCESS  not-accessible\n\
    \       STATUS      current\n       DESCRIPTION\n           \"Defines an entry\
    \ in the psampSampCountBasedParamSetTable.\"\n       INDEX { psampSampCountBasedIndex\
    \ }\n       ::= { psampSampCountBasedParamSetTable 1 }\n   PsampSampCountBasedParamSetEntry\
    \ ::=\n       SEQUENCE {\n           psampSampCountBasedIndex     Integer32,\n\
    \           psampSampCountBasedInterval  Unsigned32,\n           psampSampCountBasedSpace\
    \     Unsigned32\n       }\n   psampSampCountBasedIndex OBJECT-TYPE\n       SYNTAX\
    \      Integer32 (1..2147483647)\n       MAX-ACCESS  not-accessible\n       STATUS\
    \      current\n       DESCRIPTION\n           \"The index of this parameter set\
    \ in the\n           psampSampCountBasedParamSetTable.  It is used in the\n  \
    \         object ipfixSelectionProcessSelectorFunction entries of\n          \
    \ the ipfixSelectionProcessTable in the IPFIX-MIB as reference\n           to\
    \ this parameter set.\"\n       ::= { psampSampCountBasedParamSetEntry 1 }\n \
    \  psampSampCountBasedInterval OBJECT-TYPE\n       SYNTAX      Unsigned32\n  \
    \     UNITS       \"packets\"\n       MAX-ACCESS  read-only\n       STATUS   \
    \   current\n       DESCRIPTION\n           \"This object specifies the number\
    \ of packets that are\n           consecutively sampled.  A value of 100 means\
    \ that 100\n           consecutive packets are sampled.\"\n       REFERENCE\n\
    \           \"RFC 5475 (Section 5.1) and RFC 5477 (Section 8.2)\"\n       ::=\
    \ { psampSampCountBasedParamSetEntry 2 }\n   psampSampCountBasedSpace OBJECT-TYPE\n\
    \       SYNTAX      Unsigned32\n       UNITS       \"packets\"\n       MAX-ACCESS\
    \  read-only\n       STATUS      current\n       DESCRIPTION\n           \"This\
    \ object specifies the number of packets between two\n           intervals specified\
    \ by the object\n           psampSampCountBasedInterval.  A value of 100 means\
    \ that\n           the next interval starts 100 packets (which are not sampled)\n\
    \           after the current psampSampCountBasedInterval is over.\"\n       REFERENCE\n\
    \           \"RFC 5475 (Section 5.1) and RFC 5477 (Section 8.2)\"\n       ::=\
    \ { psampSampCountBasedParamSetEntry 3 }\n   --==================================================================\n\
    \   --* Method 2: Systematic time-based Sampling\n   --==================================================================\n\
    \   -- Reference: RFC 5475 (Section 5.1), RFC 5476 (Section 6.5.2.2),\n   -- \
    \           and RFC 5477 (Section 8.2)\n   psampSampTimeBased OBJECT IDENTIFIER\n\
    \       ::= { ipfixSelectorFunctions 3 }\n   psampSampTimeBasedAvail OBJECT-TYPE\n\
    \       SYNTAX      TruthValue\n       MAX-ACCESS  read-only\n       STATUS  \
    \    current\n       DESCRIPTION\n           \"This object indicates the availability\
    \ of systematic\n           time-based sampling at the managed node.\n       \
    \    A Selector may be unavailable if it is implemented but\n           currently\
    \ disabled due to, e.g., administrative reasons, lack\n           of resources,\
    \ or similar.\"\n       ::= { psampSampTimeBased 1 }\n   -- Parameter Set Table\
    \ +++++++++++++++++++++++++++++++++++++++++++++\n   psampSampTimeBasedParamSetTable\
    \ OBJECT-TYPE\n       SYNTAX      SEQUENCE OF\n                   PsampSampTimeBasedParamSetEntry\n\
    \       MAX-ACCESS  not-accessible\n       STATUS      current\n       DESCRIPTION\n\
    \           \"This table lists configurations of systematic time-based\n     \
    \      packet sampling.  A parameter set describing a configuration\n        \
    \   contains two parameters: the sampling interval length and\n           the\
    \ space.\"\n       ::= { psampSampTimeBased 2 }\n   psampSampTimeBasedParamSetEntry\
    \ OBJECT-TYPE\n       SYNTAX      PsampSampTimeBasedParamSetEntry\n       MAX-ACCESS\
    \  not-accessible\n       STATUS      current\n       DESCRIPTION\n          \
    \ \"Defines an entry in the psampSampTimeBasedParamSetTable.\"\n       INDEX {\
    \ psampSampTimeBasedIndex }\n       ::= { psampSampTimeBasedParamSetTable 1 }\n\
    \   PsampSampTimeBasedParamSetEntry ::=\n       SEQUENCE {\n           psampSampTimeBasedIndex\
    \     Integer32,\n           psampSampTimeBasedInterval  Unsigned32,\n       \
    \    psampSampTimeBasedSpace     Unsigned32\n       }\n   psampSampTimeBasedIndex\
    \ OBJECT-TYPE\n       SYNTAX      Integer32 (1..2147483647)\n       MAX-ACCESS\
    \  not-accessible\n       STATUS      current\n       DESCRIPTION\n          \
    \ \"The index of this parameter set in the\n           psampSampTimeBasedParamSetTable.\
    \  It is used in the\n           object ipfixSelectionProcessSelectorFunction\
    \ entries of\n           the ipfixSelectionProcessTable in the IPFIX-MIB as reference\n\
    \           to this parameter set.\"\n       ::= { psampSampTimeBasedParamSetEntry\
    \ 1 }\n   psampSampTimeBasedInterval OBJECT-TYPE\n       SYNTAX      Unsigned32\n\
    \       UNITS       \"microseconds\"\n       MAX-ACCESS  read-only\n       STATUS\
    \      current\n       DESCRIPTION\n           \"This object specifies the time\
    \ interval in microseconds\n           during which all arriving packets are sampled.\"\
    \n       REFERENCE\n           \"RFC 5475 (Section 5.1) and RFC 5477 (Section\
    \ 8.2)\"\n       ::= { psampSampTimeBasedParamSetEntry 2 }\n   psampSampTimeBasedSpace\
    \ OBJECT-TYPE\n       SYNTAX      Unsigned32\n       UNITS       \"microseconds\"\
    \n       MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n\
    \           \"This object specifies the time interval in microseconds\n      \
    \     between two intervals specified by the object\n           psampSampTimeBasedInterval.\
    \  A value of 100 means that the\n           next interval starts 100 microseconds\
    \ (during which no\n           packets are sampled) after the current\n      \
    \     psampSampTimeBasedInterval is over.\"\n       REFERENCE\n           \"RFC\
    \ 5475 (Section 5.1) and RFC 5477 (Section 8.2)\"\n       ::= { psampSampTimeBasedParamSetEntry\
    \ 3 }\n   --==================================================================\n\
    \   --* Method 3: Random n-out-of-N Sampling\n   --==================================================================\n\
    \   -- Reference: RFC 5475 (Section 5.2.1), RFC 5476 (Section 6.5.2.3),\n   --\
    \            and RFC 5477 (Section 8.2)\n   psampSampRandOutOfN OBJECT IDENTIFIER\n\
    \       ::= { ipfixSelectorFunctions 4 }\n   psampSampRandOutOfNAvail OBJECT-TYPE\n\
    \       SYNTAX      TruthValue\n       MAX-ACCESS  read-only\n       STATUS  \
    \    current\n       DESCRIPTION\n           \"This object indicates the availability\
    \ of random n-out-of-N\n           sampling at the managed node.\n           A\
    \ Selector may be unavailable if it is implemented but\n           currently disabled\
    \ due to, e.g., administrative reasons, lack\n           of resources, or similar.\"\
    \n       ::= { psampSampRandOutOfN 1 }\n   -- Parameter Set Table +++++++++++++++++++++++++++++++++++++++++++++\n\
    \   psampSampRandOutOfNParamSetTable OBJECT-TYPE\n       SYNTAX      SEQUENCE\
    \ OF\n                   PsampSampRandOutOfNParamSetEntry\n       MAX-ACCESS \
    \ not-accessible\n       STATUS      current\n       DESCRIPTION\n           \"\
    This table lists configurations of random n-out-of-N\n           sampling.  A\
    \ parameter set describing a configuration\n           contains two parameters:\
    \ the sampling size and the\n           parent population.\"\n       ::= { psampSampRandOutOfN\
    \ 2 }\n   psampSampRandOutOfNParamSetEntry OBJECT-TYPE\n       SYNTAX      PsampSampRandOutOfNParamSetEntry\n\
    \       MAX-ACCESS  not-accessible\n       STATUS      current\n       DESCRIPTION\n\
    \           \"Defines an entry in the psampSampRandOutOfNParamSetTable.\"\n  \
    \     INDEX { psampSampRandOutOfNIndex }\n       ::= { psampSampRandOutOfNParamSetTable\
    \ 1 }\n   PsampSampRandOutOfNParamSetEntry ::=\n       SEQUENCE {\n          \
    \ psampSampRandOutOfNIndex        Integer32,\n           psampSampRandOutOfNSize\
    \ Unsigned32,\n           psampSampRandOutOfNPopulation   Unsigned32\n       }\n\
    \   psampSampRandOutOfNIndex OBJECT-TYPE\n       SYNTAX      Integer32 (1..2147483647)\n\
    \       MAX-ACCESS  not-accessible\n       STATUS      current\n       DESCRIPTION\n\
    \           \"The index of this parameter set in the\n           psampSampRandOutOfNParamSetTable.\
    \  It is used in the\n           object ipfixSelectionProcessSelectorFunction\
    \ entries of\n           the ipfixSelectionProcessTable in the IPFIX-MIB as reference\n\
    \           to this parameter set.\"\n       ::= { psampSampRandOutOfNParamSetEntry\
    \ 1 }\n   psampSampRandOutOfNSize OBJECT-TYPE\n       SYNTAX      Unsigned32\n\
    \       UNITS       \"packets\"\n       MAX-ACCESS  read-only\n       STATUS \
    \     current\n       DESCRIPTION\n           \"This object specifies the number\
    \ of elements taken from the\n           parent Population specified in\n    \
    \       psampSampRandOutOfNPopulation.\"\n       REFERENCE\n           \"RFC 5475\
    \ (Section 5.2.1) and RFC 5477 (Section 8.2)\"\n       ::= { psampSampRandOutOfNParamSetEntry\
    \ 2 }\n   psampSampRandOutOfNPopulation OBJECT-TYPE\n       SYNTAX      Unsigned32\n\
    \       UNITS       \"packets\"\n       MAX-ACCESS  read-only\n       STATUS \
    \     current\n       DESCRIPTION\n           \"This object specifies the number\
    \ of elements in the parent\n           Population.\"\n       REFERENCE\n    \
    \       \"RFC 5475 (Section 5.2.1) and RFC 5477 (Section 8.2)\"\n       ::= {\
    \ psampSampRandOutOfNParamSetEntry 3 }\n   --==================================================================\n\
    \   --* Method 4: Uniform probabilistic Sampling\n   --==================================================================\n\
    \   -- Reference: RFC 5475 (Section 5.2.2), RFC 5476 (Section 6.5.2.4),\n   --\
    \            and RFC 5477 (Section 8.2)\n   psampSampUniProb OBJECT IDENTIFIER\
    \ ::= { ipfixSelectorFunctions 5 }\n   psampSampUniProbAvail OBJECT-TYPE\n   \
    \    SYNTAX      TruthValue\n       MAX-ACCESS  read-only\n       STATUS     \
    \ current\n       DESCRIPTION\n           \"This object indicates the availability\
    \ of random uniform\n           probabilistic sampling at the managed node.\n\
    \           A Selector may be unavailable if it is implemented but\n         \
    \  currently disabled due to, e.g., administrative reasons, lack\n           of\
    \ resources, or similar.\"\n       ::= { psampSampUniProb 1 }\n   -- Parameter\
    \ Set Table +++++++++++++++++++++++++++++++++++++++++++++\n   -- Reference: RFC\
    \ 5475 (Section 5.2.2.1) and RFC 5477 (Section 8.2)\n   psampSampUniProbParamSetTable\
    \ OBJECT-TYPE\n       SYNTAX      SEQUENCE OF\n                   PsampSampUniProbParamSetEntry\n\
    \       MAX-ACCESS  not-accessible\n       STATUS      current\n       DESCRIPTION\n\
    \           \"This table lists configurations of random probabilistic\n      \
    \     sampling.  A parameter set describing a configuration\n           contains\
    \ a single parameter only: the sampling probability.\"\n       ::= { psampSampUniProb\
    \ 2 }\n   psampSampUniProbParamSetEntry OBJECT-TYPE\n       SYNTAX      PsampSampUniProbParamSetEntry\n\
    \       MAX-ACCESS  not-accessible\n       STATUS      current\n       DESCRIPTION\n\
    \           \"Defines an entry in the psampSampUniProbParamSetTable.\"\n     \
    \  INDEX { psampSampUniProbIndex }\n       ::= { psampSampUniProbParamSetTable\
    \ 1 }\n   PsampSampUniProbParamSetEntry ::=\n       SEQUENCE {\n           psampSampUniProbIndex\
    \       Integer32,\n           psampSampUniProbProbability Float64TC\n       }\n\
    \   psampSampUniProbIndex OBJECT-TYPE\n       SYNTAX      Integer32 (1..2147483647)\n\
    \       MAX-ACCESS  not-accessible\n       STATUS      current\n       DESCRIPTION\n\
    \           \"The index of this parameter set in the\n           psampSampUniProbParamSetTable.\
    \  It is used in the\n           object ipfixSelectionProcessSelectorFunction\
    \ entries of\n           the ipfixSelectionProcessTable in the IPFIX-MIB as reference\n\
    \           to this parameter set.\"\n       ::= { psampSampUniProbParamSetEntry\
    \ 1 }\n   psampSampUniProbProbability OBJECT-TYPE\n       SYNTAX      Float64TC\n\
    \       MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n\
    \           \"This object specifies the probability that a packet is\n       \
    \    sampled, expressed as a value between 0 and 1.  The\n           probability\
    \ is equal for every packet.  A value of 0 means\n           no packet is sampled\
    \ since the probability is 0.  A value\n           of 1 means all packets are\
    \ sampled since the\n           probability is 1.  NaN (not a number) and infinity\
    \ MUST NOT\n           be used.\"\n       REFERENCE\n           \"RFC 5475 (Section\
    \ 5.2.2.1) and RFC 5477 (Section 8.2)\"\n       ::= { psampSampUniProbParamSetEntry\
    \ 2 }\n   --==================================================================\n\
    \   -- Packet selection filtering methods for a group of objects\n   --==================================================================\n\
    \   --==================================================================\n   --*\
    \ Method 5: Property Match filtering\n   --==================================================================\n\
    \   -- Reserves Method 5; see RFC 5475 (Section 6.1), RFC 5476\n   -- (Section\
    \ 6.5.2.5), and RFC 5477\n   psampFiltPropMatch OBJECT IDENTIFIER\n       ::=\
    \ { ipfixSelectorFunctions 6 }\n   psampFiltPropMatchAvail OBJECT-TYPE\n     \
    \  SYNTAX      TruthValue\n       MAX-ACCESS  read-only\n       STATUS      current\n\
    \       DESCRIPTION\n           \"This object indicates the availability of property\
    \ match\n           filtering at the managed node.\n           A Selector may\
    \ be unavailable if it is implemented but\n           currently disabled due to,\
    \ e.g., administrative reasons, lack\n           of resources, or similar.\"\n\
    \       ::= { psampFiltPropMatch 1 }\n   --==================================================================\n\
    \   --* Method 6: Hash filtering\n   --==================================================================\n\
    \   -- Reference: RFC 5475 (Section 6.2), RFC 5476 (Section 6.5.2.6),\n   -- \
    \           and RFC 5477 (Section 8.3)\n   psampFiltHash OBJECT IDENTIFIER ::=\
    \ { ipfixSelectorFunctions 7 }\n   psampFiltHashAvail OBJECT-TYPE\n       SYNTAX\
    \      TruthValue\n       MAX-ACCESS  read-only\n       STATUS      current\n\
    \       DESCRIPTION\n           \"This object indicates the availability of hash\
    \ filtering\n           at the managed node.\n           A Selector may be unavailable\
    \ if it is implemented but\n           currently disabled due to, e.g., administrative\
    \ reasons, lack\n           of resources, or similar.\"\n       ::= { psampFiltHash\
    \ 1 }\n   psampFiltHashCapabilities OBJECT IDENTIFIER\n       ::= { psampFiltHash\
    \ 2 }\n   -- Parameter Set Table +++++++++++++++++++++++++++++++++++++++++++++\n\
    \   -- Reference: RFC 5475, Sections 6.2, 3.8, and 7.1\n   psampFiltHashParamSetTable\
    \ OBJECT-TYPE\n       SYNTAX      SEQUENCE OF\n                   PsampFiltHashParamSetEntry\n\
    \       MAX-ACCESS  not-accessible\n       STATUS      current\n       DESCRIPTION\n\
    \           \"This table lists configurations of hash filtering.  A\n        \
    \   parameter set describing a configuration contains eight\n           parameters\
    \ describing the hash function.\"\n       ::= { psampFiltHash 3 }\n   psampFiltHashParamSetEntry\
    \ OBJECT-TYPE\n       SYNTAX      PsampFiltHashParamSetEntry\n       MAX-ACCESS\
    \  not-accessible\n       STATUS      current\n       DESCRIPTION\n          \
    \ \"Defines an entry in the psampFiltHashParamSetTable.\"\n       INDEX { psampFiltHashIndex\
    \ }\n       ::= { psampFiltHashParamSetTable 1 }\n   PsampFiltHashParamSetEntry\
    \ ::=\n       SEQUENCE {\n           psampFiltHashIndex            Integer32,\n\
    \           psampFiltHashFunction         INTEGER,\n           psampFiltHashInitializerValue\
    \ Unsigned64TC,\n           psampFiltHashIpPayloadOffset  Unsigned64TC,\n    \
    \       psampFiltHashIpPayloadSize    Unsigned64TC,\n           psampFiltHashSelectedRangeMin\
    \ Unsigned64TC,\n           psampFiltHashSelectedRangeMax Unsigned64TC,\n    \
    \       psampFiltHashOutputRangeMin   Unsigned64TC,\n           psampFiltHashOutputRangeMax\
    \   Unsigned64TC\n       }\n   psampFiltHashIndex OBJECT-TYPE\n       SYNTAX \
    \     Integer32 (1..2147483647)\n       MAX-ACCESS  not-accessible\n       STATUS\
    \      current\n       DESCRIPTION\n           \"The index of this parameter set\
    \ in the\n           psampFiltHashParamSetTable.  It is used in the\n        \
    \   object ipfixSelectionProcessSelectorFunction entries of\n           the ipfixSelectionProcessTable\
    \ in the IPFIX-MIB as reference\n           to this parameter set.\"\n       ::=\
    \ { psampFiltHashParamSetEntry 1 }\n   psampFiltHashFunction OBJECT-TYPE\n   \
    \    SYNTAX      INTEGER {\n                       crc32(1),\n               \
    \        ipsx(2),\n                       bob(3)\n                   }\n     \
    \  MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n   \
    \        \"The hash function used by this filter.  The PSAMP-MIB\n           defines\
    \ the following hash functions:\n           crc32(1): The CRC-32 Hash Function\
    \ as defined in RFC 1141.\n           ipsx(2): The IPSX Hash Function as described\
    \ in RFC 5475,\n               Appendix A.1.\n           bob(3): The BOB Hash\
    \ Function as described in RFC 5475,\n               Appendix A.2.\n         \
    \  \"\n       REFERENCE\n           \"RFC 5475 (Section 6.2 and Appendixes A.1\
    \ and A.2)\n            and RFC 1141\"\n       ::= { psampFiltHashParamSetEntry\
    \ 2 }\n   psampFiltHashInitializerValue OBJECT-TYPE\n       SYNTAX      Unsigned64TC\n\
    \       MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n\
    \           \"This object specifies the initializer value to the hash\n      \
    \     function.\"\n       REFERENCE\n           \"RFC 5475, Sections 6.2, 3.8,\
    \ and 7.1\"\n       ::= { psampFiltHashParamSetEntry 3 }\n   psampFiltHashIpPayloadOffset\
    \ OBJECT-TYPE\n       SYNTAX      Unsigned64TC\n       MAX-ACCESS  read-only\n\
    \       STATUS      current\n       DESCRIPTION\n           \"This object specifies\
    \ the IP payload offset used by a\n           Hash-based Selection Selector.\"\
    \n       REFERENCE\n           \"RFC 5475, Sections 6.2, 3.8, and 7.1\"\n    \
    \   ::= { psampFiltHashParamSetEntry 4 }\n   psampFiltHashIpPayloadSize OBJECT-TYPE\n\
    \       SYNTAX      Unsigned64TC\n       MAX-ACCESS  read-only\n       STATUS\
    \      current\n       DESCRIPTION\n           \"This object specifies the IP\
    \ payload size used by a\n           Hash-based Selection Selector.\"\n      \
    \ REFERENCE\n           \"RFC 5475, Sections 6.2, 3.8, and 7.1\"\n       ::= {\
    \ psampFiltHashParamSetEntry 5 }\n   psampFiltHashSelectedRangeMin OBJECT-TYPE\n\
    \       SYNTAX      Unsigned64TC\n       MAX-ACCESS  read-only\n       STATUS\
    \      current\n       DESCRIPTION\n           \"This object specifies the value\
    \ for the beginning of a hash\n           function's selected range.\"\n     \
    \  REFERENCE\n           \"RFC 5475, Sections 6.2, 3.8, and 7.1\"\n       ::=\
    \ { psampFiltHashParamSetEntry 6 }\n   psampFiltHashSelectedRangeMax OBJECT-TYPE\n\
    \       SYNTAX      Unsigned64TC\n       MAX-ACCESS  read-only\n       STATUS\
    \      current\n       DESCRIPTION\n           \"This object specifies the value\
    \ for the end of a hash\n           function's selected range.\"\n       REFERENCE\n\
    \           \"RFC 5475, Sections 6.2, 3.8, and 7.1\"\n       ::= { psampFiltHashParamSetEntry\
    \ 7 }\n   psampFiltHashOutputRangeMin OBJECT-TYPE\n       SYNTAX      Unsigned64TC\n\
    \       MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n\
    \           \"This object specifies the value for the beginning of a hash\n  \
    \         function's potential output range.\"\n       REFERENCE\n           \"\
    RFC 5475, Sections 6.2, 3.8, and 7.1\"\n       ::= { psampFiltHashParamSetEntry\
    \ 8 }\n   psampFiltHashOutputRangeMax OBJECT-TYPE\n       SYNTAX      Unsigned64TC\n\
    \       MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n\
    \           \"This object specifies the value for the end of a hash\n        \
    \   function's potential output range.\"\n       REFERENCE\n           \"RFC 5475,\
    \ Sections 6.2, 3.8, and 7.1\"\n       ::= { psampFiltHashParamSetEntry 9 }\n\
    \   --==================================================================\n   --\
    \ Conformance information\n   --==================================================================\n\
    \   psampCompliances OBJECT IDENTIFIER ::= { psampConformance 1 }\n   psampGroups\
    \      OBJECT IDENTIFIER ::= { psampConformance 2 }\n   --==================================================================\n\
    \   -- Compliance statements\n   --==================================================================\n\
    \   psampCompliance MODULE-COMPLIANCE\n       STATUS  current\n       DESCRIPTION\n\
    \           \"The implementation of all objects is optional and depends\n    \
    \       on the implementation of the corresponding functionality in\n        \
    \   the equipment.\"\n       MODULE  -- this module\n           GROUP psampGroupSampCountBased\n\
    \           DESCRIPTION\n               \"These objects must be implemented if\
    \ systematic\n               count-based sampling is implemented in the equipment.\"\
    \n           GROUP psampGroupSampTimeBased\n           DESCRIPTION\n         \
    \      \"These objects must be implemented if systematic\n               time-based\
    \ sampling is implemented in the equipment.\"\n           GROUP psampGroupSampRandOutOfN\n\
    \           DESCRIPTION\n               \"These objects must be implemented if\
    \ random n-out-of-N\n               sampling is implemented in the equipment.\"\
    \n           GROUP psampGroupSampUniProb\n           DESCRIPTION\n           \
    \    \"These objects must be implemented if uniform\n               probabilistic\
    \ sampling is implemented in the equipment.\"\n           GROUP psampGroupFiltPropMatch\n\
    \           DESCRIPTION\n               \"These objects must be implemented if\
    \ the property match\n               filtering is implemented in the equipment.\"\
    \n           GROUP psampGroupFiltHash\n           DESCRIPTION\n              \
    \ \"These objects must be implemented if hash filtering\n               is implemented\
    \ in the equipment.\"\n       ::= { psampCompliances 1 }\n   --==================================================================\n\
    \   -- MIB groupings\n   --==================================================================\n\
    \   psampGroupSampCountBased OBJECT-GROUP\n       OBJECTS {\n                \
    \ psampSampCountBasedAvail,\n                 psampSampCountBasedInterval,\n \
    \                psampSampCountBasedSpace\n               }\n       STATUS  current\n\
    \       DESCRIPTION\n           \"These objects are needed if count based sampling\
    \ is\n           implemented.\"\n       ::= { psampGroups 1 }\n   psampGroupSampTimeBased\
    \ OBJECT-GROUP\n       OBJECTS {\n                 psampSampTimeBasedAvail,\n\
    \                 psampSampTimeBasedInterval,\n                 psampSampTimeBasedSpace\n\
    \               }\n       STATUS  current\n       DESCRIPTION\n           \"These\
    \ objects are needed if time based sampling is\n           implemented.\"\n  \
    \     ::= { psampGroups 2 }\n   psampGroupSampRandOutOfN OBJECT-GROUP\n      \
    \ OBJECTS {\n                 psampSampRandOutOfNAvail,\n                 psampSampRandOutOfNSize,\n\
    \                 psampSampRandOutOfNPopulation\n               }\n       STATUS\
    \  current\n       DESCRIPTION\n           \"These objects are needed if random\
    \ n-out-of-N sampling is\n           implemented.\"\n       ::= { psampGroups\
    \ 3 }\n   psampGroupSampUniProb OBJECT-GROUP\n       OBJECTS {\n             \
    \    psampSampUniProbAvail,\n                 psampSampUniProbProbability\n  \
    \             }\n       STATUS  current\n       DESCRIPTION\n           \"These\
    \ objects are needed if uniform probabilistic sampling\n           is implemented.\"\
    \n       ::= { psampGroups 4 }\n   psampGroupFiltPropMatch OBJECT-GROUP\n    \
    \   OBJECTS {\n                 psampFiltPropMatchAvail\n               }\n  \
    \     STATUS  current\n       DESCRIPTION\n           \"These objects are needed\
    \ if property match filtering is\n           implemented.\"\n       ::= { psampGroups\
    \ 5 }\n   psampGroupFiltHash OBJECT-GROUP\n       OBJECTS {\n                \
    \ psampFiltHashAvail,\n                 psampFiltHashFunction,\n             \
    \    psampFiltHashInitializerValue,\n                 psampFiltHashIpPayloadOffset,\n\
    \                 psampFiltHashIpPayloadSize,\n                 psampFiltHashSelectedRangeMin,\n\
    \                 psampFiltHashSelectedRangeMax,\n                 psampFiltHashOutputRangeMin,\n\
    \                 psampFiltHashOutputRangeMax\n               }\n       STATUS\
    \  current\n       DESCRIPTION\n           \"These objects are needed if hash\
    \ filtering is implemented.\"\n       ::= { psampGroups 6 }\n   END\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   There are no management objects defined in this\
    \ MIB module that have\n   a MAX-ACCESS clause of read-write and/or read-create.\
    \  So, if this\n   MIB module is implemented correctly, then there is no risk\
    \ that an\n   intruder can alter or create any management objects of this MIB\n\
    \   module via direct SNMP SET operations.\n   All tables in this MIB module may\
    \ be considered sensitive or\n   vulnerable in some network environments because\
    \ objects in the tables\n   may reveal information about the network infrastructure\
    \ and device\n   configuration.  It is thus important to control even GET and/or\n\
    \   NOTIFY access to these objects and possibly to even encrypt the\n   values\
    \ of these objects when sending them over the network via SNMP.\n   SNMP versions\
    \ prior to SNMPv3 did not include adequate security.\n   Even if the network itself\
    \ is secure (for example by using IPsec),\n   there is no control as to who on\
    \ the secure network is allowed to\n   access and GET/SET (read/change/create/delete)\
    \ the objects in this\n   MIB module.\n   It is RECOMMENDED that implementers\
    \ consider the security features\n   provided by the SNMPv3 framework (see [RFC3410],\
    \ section 8),\n   including full support for the SNMPv3 cryptographic mechanisms\
    \ (for\n   authentication and privacy).\n   Further, deployment of SNMP versions\
    \ prior to SNMPv3 is NOT\n   RECOMMENDED.  Instead, it is RECOMMENDED to deploy\
    \ SNMPv3 and to\n   enable cryptographic security.  It is then a customer/operator\n\
    \   responsibility to ensure that the SNMP entity giving access to an\n   instance\
    \ of this MIB module is properly configured to give access to\n   the objects\
    \ only to those principals (users) who have legitimate\n   rights to GET or SET\
    \ (change/create/delete) them.\n"
- title: 8.  IANA Considerations
  contents:
  - "8.  IANA Considerations\n   The MIB module in this document uses the following\
    \ IANA-assigned\n   OBJECT IDENTIFIER value recorded in the SMI Numbers registry:\n\
    \           Descriptor             OBJECT IDENTIFIER value\n           ----------\
    \             -----------------------\n           psampMIB               { mib-2\
    \ 212 }\n   Further, IANA has registered the following top-level OIDs in the\n\
    \   IPFIX-SELECTOR-MIB Functions sub-registry at\n   http://www.iana.org/assignments/smi-numbers\
    \ according to the\n   procedures set forth in [RFC6615]:\n  Decimal Name    \
    \            Description                      Reference\n  ------- -------------------\
    \ -------------------------------- ---------\n  2       psampSampCountBased Systematic\
    \ Count-based Sampling  [RFC6727]\n  3       psampSampTimeBased  Systematic Time-based\
    \ Sampling   [RFC6727]\n  4       psampSampRandOutOfN Random n-out-of-N Sampling\
    \       [RFC6727]\n  5       psampSampUniProb    Universal Probabilistic Sampling\
    \ [RFC6727]\n  6       psampFiltPropMatch  Property Match Filtering         [RFC6727]\n\
    \  7       psampFiltHash       Hash-based Filtering             [RFC6727]\n  \
    \ The prerequisites set forth for addition of these OIDs are to be\n   verified\
    \ based on the content of this document.\n"
- title: 9.  Acknowledgment
  contents:
  - "9.  Acknowledgment\n   This document is a product of the PSAMP and IPFIX WGs.\
    \  The authors\n   would like to thank the following persons: Paul Aitken for\
    \ his\n   detailed review, Dan Romascanu, the MIB doctors, and many more, for\n\
    \   the technical reviews and feedback.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2564]  Kalbfleisch, C., Krupczak, C., Presuhn, R., and J.\n  \
    \            Saperia, \"Application Management MIB\", RFC 2564, May 1999.\n  \
    \ [RFC2578]  McCloghrie, K., Ed., Perkins, D., Ed., and J.\n              Schoenwaelder,\
    \ Ed., \"Structure of Management Information\n              Version 2 (SMIv2)\"\
    , STD 58, RFC 2578, April 1999.\n   [RFC2579]  McCloghrie, K., Ed., Perkins, D.,\
    \ Ed., and J.\n              Schoenwaelder, Ed., \"Textual Conventions for SMIv2\"\
    ,\n              STD 58, RFC 2579, April 1999.\n   [RFC2580]  McCloghrie, K.,\
    \ Perkins, D., and J. Schoenwaelder,\n              \"Conformance Statements for\
    \ SMIv2\", STD 58, RFC 2580,\n              April 1999.\n   [RFC5101]  Claise,\
    \ B., \"Specification of the IP Flow Information\n              Export (IPFIX)\
    \ Protocol for the Exchange of IP Traffic\n              Flow Information\", RFC\
    \ 5101, January 2008.\n   [RFC5477]  Dietz, T., Claise, B., Aitken, P., Dressler,\
    \ F., and G.\n              Carle, \"Information Model for Packet Sampling Exports\"\
    ,\n              RFC 5477, March 2009.\n   [RFC6340]  Presuhn, R., \"Textual Conventions\
    \ for the Representation\n              of Floating-Point Numbers\", RFC 6340,\
    \ August 2011.\n   [RFC6615]  Dietz, T., Kobayashi, A., Claise, B., and G. Muenz,\n\
    \              \"Definitions of Managed Objects for IP Flow Information\n    \
    \          Export\", RFC 6615, June 2012.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [RFC3410]  Case, J., Mundy, R., Partain, D.,\
    \ and B. Stewart,\n              \"Introduction and Applicability Statements for\
    \ Internet-\n              Standard Management Framework\", RFC 3410, December\
    \ 2002.\n   [RFC5474]  Duffield, N., Chiou, D., Claise, B., Greenberg, A.,\n \
    \             Grossglauser, M., and J. Rexford, \"A Framework for Packet\n   \
    \           Selection and Reporting\", RFC 5474, March 2009.\n   [RFC5475]  Zseby,\
    \ T., Molina, M., Duffield, N., Niccolini, S., and F.\n              Raspall,\
    \ \"Sampling and Filtering Techniques for IP Packet\n              Selection\"\
    , RFC 5475, March 2009.\n   [RFC5476]  Claise, B., Johnson, A., and J. Quittek,\
    \ \"Packet Sampling\n              (PSAMP) Protocol Specifications\", RFC 5476,\
    \ March 2009.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Thomas Dietz (editor)\n   NEC Europe Ltd.\n   NEC Laboratories\
    \ Europe\n   Kurfuersten-Anlage 36\n   69115 Heidelberg\n   Germany\n   Phone:\
    \ +49 6221 4342-128\n   EMail: dietz@neclab.eu\n   Benoit Claise\n   Cisco Systems,\
    \ Inc.\n   De Kleetlaan 6a b1\n   Diegem  1831\n   Belgium\n   Phone: +32 2 704\
    \ 5622\n   EMail: bclaise@cisco.com\n   Juergen Quittek\n   NEC Europe Ltd.\n\
    \   NEC Laboratories Europe\n   Kurfuersten-Anlage 36\n   69115 Heidelberg\n \
    \  Germany\n   Phone: +49 6221 4342-115\n   EMail: quittek@neclab.eu\n"
