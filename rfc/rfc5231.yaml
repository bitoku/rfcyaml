- title: __initial_text__
  contents:
  - '              Sieve Email Filtering: Relational Extension

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes the RELATIONAL extension to the Sieve mail\n\
    \   filtering language defined in RFC 3028.  This extension extends\n   existing\
    \ conditional tests in Sieve to allow relational operators.\n   In addition to\
    \ testing their content, it also allows for testing of\n   the number of entities\
    \ in header and envelope fields.\n   This document obsoletes RFC 3431.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . 2\n   2.  Conventions Used in This Document . . . . . . . . . .\
    \ . . . . . 2\n   3.  Comparators . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . 2\n   4.  Match Types . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . 3\n     4.1.  Match Type VALUE  . . . . . . . . . . . . . . . . . . .\
    \ . . 3\n     4.2.  Match Type COUNT  . . . . . . . . . . . . . . . . . . . .\
    \ . 3\n   5.  Interaction with Other Sieve Actions  . . . . . . . . . . . . .\
    \ 4\n   6.  Example . . . . . . . . . . . . . . . . . . . . . . . . . . . . 4\n\
    \   7.  Extended Example  . . . . . . . . . . . . . . . . . . . . . . . 6\n  \
    \ 8.  Changes since RFC 3431  . . . . . . . . . . . . . . . . . . . . 6\n   9.\
    \  IANA Considerations . . . . . . . . . . . . . . . . . . . . . . 7\n   10. Security\
    \ Considerations . . . . . . . . . . . . . . . . . . . . 7\n   11. Normative References\
    \  . . . . . . . . . . . . . . . . . . . . . 7\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The RELATIONAL extension to the Sieve mail filtering language\
    \ [Sieve]\n   provides relational operators on the address, envelope, and header\n\
    \   tests.  This extension also provides a way of counting the entities\n   in\
    \ a message header or address field.\n   With this extension, the Sieve script\
    \ may now determine if a field is\n   greater than or less than a value instead\
    \ of just equivalent.  One\n   use is for the x-priority field: move messages\
    \ with a priority\n   greater than 3 to the \"work on later\" folder.  Mail could\
    \ also be\n   sorted by the from address.  Those userids that start with 'a'-'m'\
    \ go\n   to one folder, and the rest go to another folder.\n   The Sieve script\
    \ can also determine the number of fields in the\n   header, or the number of\
    \ addresses in a recipient field, for example,\n   whether there are more than\
    \ 5 addresses in the to and cc fields.\n   The capability string associated with\
    \ the extension defined in this\n   document is \"relational\".\n"
- title: 2.  Conventions Used in This Document
  contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in BCP 14, RFC 2119.\n   Conventions for notations are as in [Sieve] section\
    \ 1.1, including\n   the use of [Kwds] and the use of [ABNF].\n"
- title: 3.  Comparators
  contents:
  - "3.  Comparators\n   This document does not define any comparators or exempt any\n\
    \   comparators from the require clause.  Any comparator used must be\n   treated\
    \ as defined in [Sieve].\n   The \"i;ascii-numeric\" comparator, as defined in\
    \ [RFC4790], MUST be\n   supported for any implementation of this extension. \
    \ The comparator\n   \"i;ascii-numeric\" MUST support at least 32-bit unsigned\
    \ integers.\n   Larger integers MAY be supported.  Note: the \"i;ascii-numeric\"\
    \n   comparator does not support negative numbers.\n"
- title: 4.  Match Types
  contents:
  - "4.  Match Types\n   This document defines two new match types.  They are the\
    \ VALUE match\n   type and the COUNT match type.\n   The syntax is:\n   MATCH-TYPE\
    \ =/ COUNT / VALUE\n   COUNT = \":count\" relational-match\n   VALUE = \":value\"\
    \ relational-match\n   relational-match = DQUOTE\n           (\"gt\" / \"ge\"\
    \ / \"lt\" / \"le\" / \"eq\" / \"ne\") DQUOTE\n           ; \"gt\" means \"greater\
    \ than\", the C operator \">\".\n           ; \"ge\" means \"greater than or equal\"\
    , the C operator \">=\".\n           ; \"lt\" means \"less than\", the C operator\
    \ \"<\".\n           ; \"le\" means \"less than or equal\", the C operator \"\
    <=\".\n           ; \"eq\" means \"equal to\", the C operator \"==\".\n      \
    \     ; \"ne\" means \"not equal to\", the C operator \"!=\".\n"
- title: 4.1.  Match Type VALUE
  contents:
  - "4.1.  Match Type VALUE\n   The VALUE match type does a relational comparison\
    \ between strings.\n   The VALUE match type may be used with any comparator that\
    \ returns\n   sort information.\n   A value from the message is considered the\
    \ left side of the relation.\n   A value from the test expression, the key-list\
    \ for address, envelope,\n   and header tests, is the right side of the relation.\n\
    \   If there are multiple values on either side or both sides, the test\n   is\
    \ considered true if any pair is true.\n"
- title: 4.2.  Match Type COUNT
  contents:
  - "4.2.  Match Type COUNT\n   The COUNT match type first determines the number of\
    \ the specified\n   entities in the message and does a relational comparison of\
    \ the\n   number of entities, as defined below, to the values specified in the\n\
    \   test expression.\n   The COUNT match type SHOULD only be used with numeric\
    \ comparators.\n   The Address Test counts the number of addresses (the number\
    \ of\n   \"mailbox\" elements, as defined in [RFC2822]) in the specified fields.\n\
    \   Group names are ignored, but the contained mailboxes are counted.\n   The\
    \ Envelope Test counts the number of addresses in the specified\n   envelope parts.\
    \  The envelope \"to\" will always have only one entry,\n   which is the address\
    \ of the user for whom the Sieve script is\n   running.  Using this test, there\
    \ is no way a Sieve script can\n   determine if the message was actually sent\
    \ to someone else.  The\n   envelope \"from\" will be 0 if the MAIL FROM is empty,\
    \ or 1 if MAIL\n   FROM is not empty.\n   The Header Test counts the total number\
    \ of instances of the specified\n   fields.  This does not count individual addresses\
    \ in the \"to\", \"cc\",\n   and other recipient fields.\n   In all cases, if\
    \ more than one field name is specified, the counts\n   for all specified fields\
    \ are added together to obtain the number for\n   comparison.  Thus, specifying\
    \ [\"to\", \"cc\"] in an address COUNT test\n   compares the total number of \"\
    to\" and \"cc\" addresses; if separate\n   counts are desired, they must be done\
    \ in two comparisons, perhaps\n   joined by \"allof\" or \"anyof\".\n"
- title: 5.  Interaction with Other Sieve Actions
  contents:
  - "5.  Interaction with Other Sieve Actions\n   This specification adds two match\
    \ types.  The VALUE match type only\n   works with comparators that return sort\
    \ information.  The COUNT match\n   type only makes sense with numeric comparators.\n\
    \   There is no interaction with any other Sieve operations, nor with any\n  \
    \ known extensions.  In particular, this specification has no effect on\n   implicit\
    \ KEEP, nor on any explicit message actions.\n"
- title: 6.  Example
  contents:
  - "6.  Example\n   Using the message:\n      received: ...\n      received: ...\n\
    \      subject: example\n      to: foo@example.com, baz@example.com\n      cc:\
    \ qux@example.com\n   The test:\n      address :count \"ge\" :comparator \"i;ascii-numeric\"\
    \n                      [\"to\", \"cc\"] [\"3\"]\n   would evaluate to true, and\
    \ the test\n      anyof ( address :count \"ge\" :comparator \"i;ascii-numeric\"\
    \n                      [\"to\"] [\"3\"],\n              address :count \"ge\"\
    \ :comparator \"i;ascii-numeric\"\n                      [\"cc\"] [\"3\"] )\n\
    \   would evaluate to false.\n   To check the number of received fields in the\
    \ header, the following\n   test may be used:\n      header :count \"ge\" :comparator\
    \ \"i;ascii-numeric\"\n                      [\"received\"] [\"3\"]\n   This would\
    \ evaluate to false.  But\n      header :count \"ge\" :comparator \"i;ascii-numeric\"\
    \n                      [\"received\", \"subject\"] [\"3\"]\n   would evaluate\
    \ to true.\n   The test:\n      header :count \"ge\" :comparator \"i;ascii-numeric\"\
    \n                      [\"to\", \"cc\"] [\"3\"]\n   will always evaluate to false\
    \ on an RFC 2822 compliant message\n   [RFC2822], since a message can have at\
    \ most one \"to\" field and at\n   most one \"cc\" field.  This test counts the\
    \ number of fields, not the\n   number of addresses.\n"
- title: 7.  Extended Example
  contents:
  - "7.  Extended Example\n      require [\"relational\", \"comparator-i;ascii-numeric\"\
    , \"fileinto\"];\n      if header :value \"lt\" :comparator \"i;ascii-numeric\"\
    \n                [\"x-priority\"] [\"3\"]\n      {\n         fileinto \"Priority\"\
    ;\n      }\n      elsif address :count \"gt\" :comparator \"i;ascii-numeric\"\n\
    \                 [\"to\"] [\"5\"]\n      {\n         # everything with more than\
    \ 5 recipients in the \"to\" field\n         # is considered SPAM\n         fileinto\
    \ \"SPAM\";\n      }\n      elsif address :value \"gt\" :all :comparator \"i;ascii-casemap\"\
    \n                 [\"from\"] [\"M\"]\n      {\n         fileinto \"From N-Z\"\
    ;\n      } else {\n         fileinto \"From A-M\";\n      }\n      if allof (\
    \ address :count \"eq\" :comparator \"i;ascii-numeric\"\n                    \
    \     [\"to\", \"cc\"] [\"1\"] ,\n                 address :all :comparator \"\
    i;ascii-casemap\"\n                         [\"to\", \"cc\"] [\"me@foo.example.com\"\
    ] )\n      {\n         fileinto \"Only me\";\n      }\n"
- title: 8.  Changes since RFC 3431
  contents:
  - "8.  Changes since RFC 3431\n   Apart from several minor editorial/wording changes,\
    \ the following\n   list describes the notable changes to this specification since\
    \ RFC\n   3431.\n   o  Updated references, including changing the comparator reference\n\
    \      from the Application Configuration Access Protocol (ACAP) to the\n    \
    \  \"Internet Application Protocol Collation Registry\" document\n      [RFC4790].\n\
    \   o  Updated and corrected the examples.\n   o  Added definition comments to\
    \ ABNF for \"gt\", \"lt\", etc.\n   o  Clarified what RFC 2822 elements are counted\
    \ in the COUNT test.\n   o  Removed the requirement to strip white space from\
    \ header fields\n      before comparing; a more general version of this requirement\
    \ has\n      been added to the Sieve base spec.\n"
- title: 9.  IANA Considerations
  contents:
  - "9.  IANA Considerations\n   The following template specifies the IANA registration\
    \ of the\n   relational Sieve extension specified in this document:\n   To: iana@iana.org\n\
    \   Subject: Registration of new Sieve extension\n   Capability name: relational\n\
    \   Description:     Extends existing conditional tests in Sieve language\n  \
    \                  to allow relational operators\n   RFC number:      RFC 5231\n\
    \   Contact address: The Sieve discussion list <ietf-mta-filters@imc.org>\n"
- title: 10.  Security Considerations
  contents:
  - "10.  Security Considerations\n   An implementation MUST ensure that the test\
    \ for envelope \"to\" only\n   reflects the delivery to the current user.  Using\
    \ this test, it MUST\n   not be possible for a user to determine if this message\
    \ was delivered\n   to someone else.\n   Additional security considerations are\
    \ discussed in [Sieve].\n"
- title: 11.  Normative References
  contents:
  - "11.  Normative References\n   [ABNF]     Crocker, D., Ed. and P. Overell, \"\
    Augmented BNF for Syntax\n              Specifications: ABNF\", RFC 4234, October\
    \ 2005.\n   [Kwds]     Bradner, S., \"Key words for use in RFCs to Indicate\n\
    \              Requirement Levels\", RFC 2119, March 1997.\n   [RFC2822]  Resnick,\
    \ P., \"Internet Message Format\", RFC 2822,\n              April 2001.\n   [RFC4790]\
    \  Newman, C., Duerst, M., and A. Gulbrandsen, \"Internet\n              Application\
    \ Protocol Collation Registry\", RFC 4790,\n              March 2007.\n   [Sieve]\
    \    Guenther, P., Ed. and T. Showalter, Ed., \"Sieve: An Email\n            \
    \  Filtering Language\", RFC 5228, January 2008.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Wolfgang Segmuller\n   IBM T.J. Watson Research Center\n\
    \   19 Skyline Drive\n   Hawthorne, NY  10532\n   US\n   Phone: +1 914 784 7408\n\
    \   EMail: werewolf@us.ibm.com\n   Barry Leiba\n   IBM T.J. Watson Research Center\n\
    \   19 Skyline Drive\n   Hawthorne, NY  10532\n   US\n   Phone: +1 914 784 7941\n\
    \   EMail: leiba@watson.ibm.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
