- contents:
  - "               Virtual Private LAN Service (VPLS) Using\n              Label
    Distribution Protocol (LDP) Signaling\n"
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2007).\n"
  title: Copyright Notice
- contents:
  - "IESG Note\n   The L2VPN Working Group produced two separate documents, RFC 4761
    and\n   this document, that perform similar functions using different\n   signaling
    protocols.  Be aware that each method is commonly referred\n   to as \"VPLS\"
    even though they are distinct and incompatible with one\n   another.\n"
  title: IESG Note
- contents:
  - "Abstract\n   This document describes a Virtual Private LAN Service (VPLS) solution\n
    \  using pseudowires, a service previously implemented over other\n   tunneling
    technologies and known as Transparent LAN Services (TLS).\n   A VPLS creates an
    emulated LAN segment for a given set of users;\n   i.e., it creates a Layer 2
    broadcast domain that is fully capable of\n   learning and forwarding on Ethernet
    MAC addresses and that is closed\n   to a given set of users.  Multiple VPLS services
    can be supported\n   from a single Provider Edge (PE) node.\n   This document
    describes the control plane functions of signaling\n   pseudowire labels using
    Label Distribution Protocol (LDP), extending\n   RFC 4447.  It is agnostic to
    discovery protocols.  The data plane\n   functions of forwarding are also described,
    focusing in particular on\n   the learning of MAC addresses.  The encapsulation
    of VPLS packets is\n   described by RFC 4448.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n
    \  2. Terminology .....................................................3\n      2.1.
    Conventions ................................................4\n   3. Acronyms
    ........................................................4\n   4. Topological Model
    for VPLS ......................................5\n      4.1. Flooding and Forwarding
    ....................................6\n      4.2. Address Learning ...........................................6\n
    \     4.3. Tunnel Topology ............................................7\n      4.4.
    Loop free VPLS .............................................7\n   5. Discovery
    .......................................................7\n   6. Control Plane
    ...................................................7\n      6.1. LDP-Based Signaling
    of Demultiplexers ......................8\n           6.1.1. Using the Generalized
    PWid FEC Element ..............8\n      6.2. MAC Address Withdrawal .....................................9\n
    \          6.2.1. MAC List TLV ........................................9\n           6.2.2.
    Address Withdraw Message Containing MAC List TLV ...11\n   7. Data Forwarding
    on an Ethernet PW ..............................11\n      7.1. VPLS Encapsulation
    Actions ................................11\n      7.2. VPLS Learning Actions .....................................12\n
    \  8. Data Forwarding on an Ethernet VLAN PW .........................13\n      8.1.
    VPLS Encapsulation Actions ................................13\n   9. Operation
    of a VPLS ............................................14\n      9.1. MAC Address
    Aging .........................................15\n   10. A Hierarchical VPLS
    Model .....................................16\n      10.1. Hierarchical Connectivity
    ................................16\n           10.1.1. Spoke Connectivity for
    Bridging-Capable Devices ...17\n           10.1.2. Advantages of Spoke Connectivity
    ..................18\n           10.1.3. Spoke Connectivity for Non-Bridging Devices
    .......19\n      10.2. Redundant Spoke Connections ..............................21\n
    \          10.2.1. Dual-Homed MTU-s ..................................21\n           10.2.2.
    Failure Detection and Recovery ....................22\n      10.3. Multi-domain
    VPLS Service ................................23\n   11. Hierarchical VPLS Model
    Using Ethernet Access Network .........23\n      11.1. Scalability ..............................................24\n
    \     11.2. Dual Homing and Failure Recovery .........................24\n   12.
    Contributors ..................................................25\n   13. Acknowledgements
    ..............................................25\n   14. Security Considerations
    .......................................26\n   15. IANA Considerations ...........................................26\n
    \  16. References ....................................................27\n      16.1.
    Normative References .....................................27\n      16.2. Informative
    References ...................................27\n   Appendix A. VPLS Signaling
    using the PWid FEC Element .............29\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Ethernet has become the predominant technology for Local
    Area Network\n   (LAN) connectivity and is gaining acceptance as an access technology,\n
    \  specifically in Metropolitan and Wide Area Networks (MAN and WAN,\n   respectively).
    \ The primary motivation behind Virtual Private LAN\n   Services (VPLS) is to
    provide connectivity between geographically\n   dispersed customer sites across
    MANs and WANs, as if they were\n   connected using a LAN.  The intended application
    for the end-user can\n   be divided into the following two categories:\n   -  Connectivity
    between customer routers: LAN routing application\n   -  Connectivity between
    customer Ethernet switches: LAN switching\n      application\n   Broadcast and
    multicast services are available over traditional LANs.\n   Sites that belong
    to the same broadcast domain and that are connected\n   via an MPLS network expect
    broadcast, multicast, and unicast traffic\n   to be forwarded to the proper location(s).
    \ This requires MAC address\n   learning/aging on a per-pseudowire basis, and
    packet replication\n   across pseudowires for multicast/broadcast traffic and
    for flooding\n   of unknown unicast destination traffic.\n   [RFC4448] defines
    how to carry Layer 2 (L2) frames over point-to-\n   point pseudowires (PW).  This
    document describes extensions to\n   [RFC4447] for transporting Ethernet/802.3
    and VLAN [802.1Q] traffic\n   across multiple sites that belong to the same L2
    broadcast domain or\n   VPLS.  Note that the same model can be applied to other
    802.1\n   technologies.  It describes a simple and scalable way to offer\n   Virtual
    LAN services, including the appropriate flooding of\n   broadcast, multicast,
    and unknown unicast destination traffic over\n   MPLS, without the need for address
    resolution servers or other\n   external servers, as discussed in [L2VPN-REQ].\n
    \  The following discussion applies to devices that are VPLS capable and\n   have
    a means of tunneling labeled packets amongst each other.  The\n   resulting set
    of interconnected devices forms a private MPLS VPN.\n"
  title: 1.  Introduction
- contents:
  - "2.  Terminology\n   Q-in-Q               802.1ad Provider Bridge extensions also
    known\n                        as stackable VLANs or Q-in-Q.\n   Qualified learning
    \  Learning mode in which each customer VLAN is\n                        mapped
    to its own VPLS instance.\n   Service delimiter    Information used to identify
    a specific customer\n                        service instance.  This is typically
    encoded in\n                        the encapsulation header of customer frames\n
    \                       (e.g., VLAN Id).\n   Tagged frame         Frame with an
    802.1Q VLAN identifier.\n   Unqualified learning Learning mode where all the VLANs
    of a single\n                        customer are mapped to a single VPLS.\n   Untagged
    frame       Frame without an 802.1Q VLAN identifier.\n"
  - contents:
    - "2.1.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
      \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and
      \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC
      2119 [RFC2119].\n"
    title: 2.1.  Conventions
  title: 2.  Terminology
- contents:
  - "3.  Acronyms\n   AC            Attachment Circuit\n   BPDU          Bridge Protocol
    Data Unit\n   CE            Customer Edge device\n   FEC           Forwarding
    Equivalence Class\n   FIB           Forwarding Information Base\n   GRE           Generic
    Routing Encapsulation\n   IPsec         IP security\n   L2TP          Layer Two
    Tunneling Protocol\n   LAN           Local Area Network\n   LDP           Label
    Distribution Protocol\n   MTU-s         Multi-Tenant Unit switch\n   PE            Provider
    Edge device\n   PW            Pseudowire\n   STP           Spanning Tree Protocol\n
    \  VLAN          Virtual LAN\n   VLAN tag      VLAN Identifier\n"
  title: 3.  Acronyms
- contents:
  - "4.  Topological Model for VPLS\n   An interface participating in a VPLS must
    be able to flood, forward,\n   and filter Ethernet frames.  Figure 1, below, shows
    the topological\n   model of a VPLS.  The set of PE devices interconnected via
    PWs\n   appears as a single emulated LAN to customer X.  Each PE will form\n   remote
    MAC address to PW associations and associate directly attached\n   MAC addresses
    to local customer facing ports.  This is modeled on\n   standard IEEE 802.1 MAC
    address learning.\n    +-----+                                              +-----+\n
    \   | CE1 +---+      ...........................     +---| CE2 |\n    +-----+
    \  |      .                         .     |   +-----+\n     Site 1   |   +----+
    \                   +----+   |   Site 2\n              +---| PE |       Cloud
    \       | PE |---+\n                  +----+                    +----+\n                     .
    \                        .\n                     .         +----+          .\n
    \                    ..........| PE |...........\n                               +----+
    \        ^\n                                 |            |\n                                 |
    \           +-- Emulated LAN\n                               +-----+\n                               |
    CE3 |\n                               +-----+\n                               Site
    3\n               Figure 1: Topological Model of a VPLS for\n                      Customer
    X with three sites\n   We note here again that while this document shows specific
    examples\n   using MPLS transport tunnels, other tunnels that can be used by PWs\n
    \  (as mentioned in [RFC4447]) -- e.g., GRE, L2TP, IPsec -- can also be\n   used,
    as long as the originating PE can be identified, since this is\n   used in the
    MAC learning process.\n   The scope of the VPLS lies within the PEs in the service
    provider\n   network, highlighting the fact that apart from customer service\n
    \  delineation, the form of access to a customer site is not relevant to\n   the
    VPLS [L2VPN-REQ].  In other words, the attachment circuit (AC)\n   connected to
    the customer could be a physical Ethernet port, a\n   logical (tagged) Ethernet
    port, an ATM PVC carrying Ethernet frames,\n   etc., or even an Ethernet PW.\n
    \  The PE is typically an edge router capable of running the LDP\n   signaling
    protocol and/or routing protocols to set up PWs.  In\n   addition, it is capable
    of setting up transport tunnels to other PEs\n   and delivering traffic over PWs.\n"
  - contents:
    - "4.1.  Flooding and Forwarding\n   One of attributes of an Ethernet service
      is that frames sent to\n   broadcast addresses and to unknown destination MAC
      addresses are\n   flooded to all ports.  To achieve flooding within the service\n
      \  provider network, all unknown unicast, broadcast and multicast frames\n   are
      flooded over the corresponding PWs to all PE nodes participating\n   in the
      VPLS, as well as to all ACs.\n   Note that multicast frames are a special case
      and do not necessarily\n   have to be sent to all VPN members.  For simplicity,
      the default\n   approach of broadcasting multicast frames is used.\n   To forward
      a frame, a PE MUST be able to associate a destination MAC\n   address with a
      PW.  It is unreasonable and perhaps impossible to\n   require that PEs statically
      configure an association of every\n   possible destination MAC address with
      a PW.  Therefore, VPLS-capable\n   PEs SHOULD have the capability to dynamically
      learn MAC addresses on\n   both ACs and PWs and to forward and replicate packets
      across both ACs\n   and PWs.\n"
    title: 4.1.  Flooding and Forwarding
  - contents:
    - "4.2.  Address Learning\n   Unlike BGP VPNs [RFC4364], reachability information
      is not advertised\n   and distributed via a control plane.  Reachability is
      obtained by\n   standard learning bridge functions in the data plane.\n   When
      a packet arrives on a PW, if the source MAC address is unknown,\n   it needs
      to be associated with the PW, so that outbound packets to\n   that MAC address
      can be delivered over the associated PW.  Likewise,\n   when a packet arrives
      on an AC, if the source MAC address is unknown,\n   it needs to be associated
      with the AC, so that outbound packets to\n   that MAC address can be delivered
      over the associated AC.\n   Standard learning, filtering, and forwarding actions,
      as defined in\n   [802.1D-ORIG], [802.1D-REV], and [802.1Q], are required when
      a PW or\n   AC state changes.\n"
    title: 4.2.  Address Learning
  - contents:
    - "4.3.  Tunnel Topology\n   PE routers are assumed to have the capability to
      establish transport\n   tunnels.  Tunnels are set up between PEs to aggregate
      traffic.  PWs\n   are signaled to demultiplex encapsulated Ethernet frames from\n
      \  multiple VPLS instances that traverse the transport tunnels.\n   In an Ethernet
      L2VPN, it becomes the responsibility of the service\n   provider to create the
      loop-free topology.  For the sake of\n   simplicity, we define that the topology
      of a VPLS is a full mesh of\n   PWs.\n"
    title: 4.3.  Tunnel Topology
  - contents:
    - "4.4.  Loop free VPLS\n   If the topology of the VPLS is not restricted to a
      full mesh, then it\n   may be that for two PEs not directly connected via PWs,
      they would\n   have to use an intermediary PE to relay packets.  This topology
      would\n   require the use of some loop-breaking protocol, like a spanning tree\n
      \  protocol.\n   Instead, a full mesh of PWs is established between PEs.  Since
      every\n   PE is now directly connected to every other PE in the VPLS via a PW,\n
      \  there is no longer any need to relay packets, and we can instantiate\n   a
      simpler loop-breaking rule: the \"split horizon\" rule, whereby a PE\n   MUST
      NOT forward traffic from one PW to another in the same VPLS\n   mesh.\n   Note
      that customers are allowed to run a Spanning Tree Protocol (STP)\n   (e.g.,
      as defined in [802.1D-REV]), such as when a customer has \"back\n   door\" links
      used to provide redundancy in the case of a failure\n   within the VPLS.  In
      such a case, STP Bridge PDUs (BPDUs) are simply\n   tunneled through the provider
      cloud.\n"
    title: 4.4.  Loop free VPLS
  title: 4.  Topological Model for VPLS
- contents:
  - "5.  Discovery\n   The capability to manually configure the addresses of the remote
    PEs\n   is REQUIRED.  However, the use of manual configuration is not\n   necessary
    if an auto-discovery procedure is used.  A number of auto-\n   discovery procedures
    are compatible with this document\n   ([RADIUS-DISC], [BGP-DISC]).\n"
  title: 5.  Discovery
- contents:
  - "6.  Control Plane\n   This document describes the control plane functions of
    signaling of\n   PW labels.  Some foundational work in the area of support for
    multi-\n   homing is laid.  The extensions to provide multi-homing support\n   should
    work independently of the basic VPLS operation, and they are\n   not described
    here.\n"
  - contents:
    - "6.1.  LDP-Based Signaling of Demultiplexers\n   A full mesh of LDP sessions
      is used to establish the mesh of PWs.\n   The requirement for a full mesh of
      PWs may result in a large number\n   of targeted LDP sessions.  Section 10 discusses
      the option of setting\n   up hierarchical topologies in order to minimize the
      size of the VPLS\n   full mesh.\n   Once an LDP session has been formed between
      two PEs, all PWs between\n   these two PEs are signaled over this session.\n
      \  In [RFC4447], two types of FECs are described: the PWid FEC Element\n   (FEC
      type 128) and the Generalized PWid FEC Element (FEC type 129).\n   The original
      FEC element used for VPLS was compatible with the PWid\n   FEC Element.  The
      text for signaling using the PWid FEC Element has\n   been moved to Appendix
      A.  What we describe below replaces that with\n   a more generalized L2VPN descriptor,
      the Generalized PWid FEC\n   Element.\n"
    - contents:
      - "6.1.1.  Using the Generalized PWid FEC Element\n   [RFC4447] describes a
        generalized FEC structure that is be used for\n   VPLS signaling in the following
        manner.  We describe the assignment\n   of the Generalized PWid FEC Element
        fields in the context of VPLS\n   signaling.\n   Control bit (C): This bit
        is used to signal the use of the control\n   word as specified in [RFC4447].\n
        \  PW type: The allowed PW types are Ethernet (0x0005) and Ethernet\n   tagged
        mode (0x004), as specified in [RFC4446].\n   PW info length: As specified
        in [RFC4447].\n   Attachment Group Identifier (AGI), Length, Value: The unique
        name of\n   this VPLS.  The AGI identifies a type of name, and Length denotes
        the\n   length of Value, which is the name of the VPLS.  We use the term AGI\n
        \  interchangeably with VPLS identifier.\n   Target Attachment Individual
        Identifier (TAII), Source Attachment\n   Individual Identifier (SAII): These
        are null because the mesh of PWs\n   in a VPLS terminates on MAC learning
        tables, rather than on\n   individual attachment circuits.  The use of non-null
        TAII and SAII is\n   reserved for future enhancements.\n   Interface Parameters:
        The relevant interface parameters are:\n   -  MTU: The MTU (Maximum Transmission
        Unit) of the VPLS MUST be the\n      same across all the PWs in the mesh.\n
        \  -  Optional Description String: Same as [RFC4447].\n   -  Requested VLAN
        ID: If the PW type is Ethernet tagged mode, this\n      parameter may be used
        to signal the insertion of the appropriate\n      VLAN ID, as defined in [RFC4448].\n"
      title: 6.1.1.  Using the Generalized PWid FEC Element
    title: 6.1.  LDP-Based Signaling of Demultiplexers
  - contents:
    - "6.2.  MAC Address Withdrawal\n   It MAY be desirable to remove or unlearn MAC
      addresses that have been\n   dynamically learned for faster convergence.  This
      is accomplished by\n   sending an LDP Address Withdraw Message with the list
      of MAC\n   addresses to be removed to all other PEs over the corresponding LDP\n
      \  sessions.\n   We introduce an optional MAC List TLV in LDP to specify a list
      of MAC\n   addresses that can be removed or unlearned using the LDP Address\n
      \  Withdraw Message.\n   The Address Withdraw message with MAC List TLVs MAY
      be supported in\n   order to expedite removal of MAC addresses as the result
      of a\n   topology change (e.g., failure of the primary link for a dual-homed\n
      \  VPLS-capable switch).\n   In order to minimize the impact on LDP convergence
      time, when the MAC\n   list TLV contains a large number of MAC addresses, it
      may be\n   preferable to send a MAC address withdrawal message with an empty\n
      \  list.\n"
    - contents:
      - "6.2.1.  MAC List TLV\n   MAC addresses to be unlearned can be signaled using
        an LDP Address\n   Withdraw Message that contains a new TLV, the MAC List
        TLV.  Its\n   format is described below.  The encoding of a MAC List TLV address
        is\n   the 6-octet MAC address specified by IEEE 802 documents [802.1D-ORIG]\n
        \  [802.1D-REV].\n    0                   1                   2                   3\n
        \   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |U|F|       Type                |            Length             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |                      MAC address #1                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |        MAC address #1         |      MAC Address #2           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |                      MAC address #2                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  ~                              ...                              ~\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |                      MAC address #n                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |        MAC address #n         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  U bit: Unknown bit.  This bit MUST be set to 1.  If the MAC address\n   format
        is not understood, then the TLV is not understood and MUST be\n   ignored.\n
        \  F bit: Forward bit.  This bit MUST be set to 0.  Since the LDP\n   mechanism
        used here is targeted, the TLV MUST NOT be forwarded.\n   Type: Type field.
        \ This field MUST be set to 0x0404.  This identifies\n   the TLV type as MAC
        List TLV.\n   Length: Length field.  This field specifies the total length
        in\n   octets of the MAC addresses in the TLV.  The length MUST be a\n   multiple
        of 6.\n   MAC Address: The MAC address(es) being removed.\n   The MAC Address
        Withdraw Message contains a FEC TLV (to identify the\n   VPLS affected), a
        MAC Address TLV, and optional parameters.  No\n   optional parameters have
        been defined for the MAC Address Withdraw\n   signaling.  Note that if a PE
        receives a MAC Address Withdraw Message\n   and does not understand it, it
        MUST ignore the message.  In this\n   case, instead of flushing its MAC address
        table, it will continue to\n   use stale information, unless:\n   -  it receives
        a packet with a known MAC address association, but\n      from a different
        PW, in which case it replaces the old\n      association; or\n   -  it ages
        out the old association.\n   The MAC Address Withdraw message only helps speed
        up convergence, so\n   PEs that do not understand the message can continue
        to participate in\n   the VPLS.\n"
      title: 6.2.1.  MAC List TLV
    - contents:
      - "6.2.2.  Address Withdraw Message Containing MAC List TLV\n   The processing
        for MAC List TLV received in an Address Withdraw\n   Message is:\n   For each
        MAC address in the TLV:\n   -  Remove the association between the MAC address
        and the AC or PW\n      over which this message is received.\n   For a MAC
        Address Withdraw message with empty list:\n   -  Remove all the MAC addresses
        associated with the VPLS instance\n      (specified by the FEC TLV) except
        the MAC addresses learned over\n      the PW associated with this signaling
        session over which the\n      message was received.\n   The scope of a MAC
        List TLV is the VPLS specified in the FEC TLV in\n   the MAC Address Withdraw
        Message.  The number of MAC addresses can be\n   deduced from the length field
        in the TLV.\n"
      title: 6.2.2.  Address Withdraw Message Containing MAC List TLV
    title: 6.2.  MAC Address Withdrawal
  title: 6.  Control Plane
- contents:
  - "7.  Data Forwarding on an Ethernet PW\n   This section describes the data plane
    behavior on an Ethernet PW used\n   in a VPLS.  While the encapsulation is similar
    to that described in\n   [RFC4448], the functions of stripping the service-delimiting
    tag and\n   using a \"normalized\" Ethernet frame are described.\n"
  - contents:
    - "7.1.  VPLS Encapsulation Actions\n   In a VPLS, a customer Ethernet frame without
      preamble is encapsulated\n   with a header as defined in [RFC4448].  A customer
      Ethernet frame is\n   defined as follows:\n   -  If the frame, as it arrives
      at the PE, has an encapsulation that\n      is used by the local PE as a service
      delimiter, i.e., to identify\n      the customer and/or the particular service
      of that customer, then\n      that encapsulation may be stripped before the
      frame is sent into\n      the VPLS.  As the frame exits the VPLS, the frame
      may have a\n      service-delimiting encapsulation inserted.\n   -  If the frame,
      as it arrives at the PE, has an encapsulation that\n      is not service delimiting,
      then it is a customer frame whose\n      encapsulation should not be modified
      by the VPLS.  This covers,\n      for example, a frame that carries customer-specific
      VLAN tags that\n      the service provider neither knows about nor wants to
      modify.\n   As an application of these rules, a customer frame may arrive at
      a\n   customer-facing port with a VLAN tag that identifies the customer's\n
      \  VPLS instance.  That tag would be stripped before it is encapsulated\n   in
      the VPLS.  At egress, the frame may be tagged again, if a\n   service-delimiting
      tag is used, or it may be untagged if none is\n   used.\n   Likewise, if a customer
      frame arrives at a customer-facing port over\n   an ATM or Frame Relay VC that
      identifies the customer's VPLS\n   instance, then the ATM or FR encapsulation
      is removed before the\n   frame is passed into the VPLS.\n   Contrariwise, if
      a customer frame arrives at a customer-facing port\n   with a VLAN tag that
      identifies a VLAN domain in the customer L2\n   network, then the tag is not
      modified or stripped, as it belongs with\n   the rest of the customer frame.\n
      \  By following the above rules, the Ethernet frame that traverses a\n   VPLS
      is always a customer Ethernet frame.  Note that the two actions,\n   at ingress
      and egress, of dealing with service delimiters are local\n   actions that neither
      PE has to signal to the other.  They allow, for\n   example, a mix-and-match
      of VLAN tagged and untagged services at\n   either end, and they do not carry
      across a VPLS a VLAN tag that has\n   local significance only.  The service
      delimiter may be an MPLS label\n   also, whereby an Ethernet PW given by [RFC4448]
      can serve as the\n   access side connection into a PE.  An RFC1483 Bridged PVC\n
      \  encapsulation could also serve as a service delimiter.  By limiting\n   the
      scope of locally significant encapsulations to the edge,\n   hierarchical VPLS
      models can be developed that provide the capability\n   to network-engineer
      scalable VPLS deployments, as described below.\n"
    title: 7.1.  VPLS Encapsulation Actions
  - contents:
    - "7.2.  VPLS Learning Actions\n   Learning is done based on the customer Ethernet
      frame as defined\n   above.  The Forwarding Information Base (FIB) keeps track
      of the\n   mapping of customer Ethernet frame addressing and the appropriate
      PW\n   to use.  We define two modes of learning: qualified and unqualified\n
      \  learning.  Qualified learning is the default mode and MUST be\n   supported.
      \ Support of unqualified learning is OPTIONAL.\n   In unqualified learning,
      all the VLANs of a single customer are\n   handled by a single VPLS, which means
      they all share a single\n   broadcast domain and a single MAC address space.
      \ This means that MAC\n   addresses need to be unique and non-overlapping among
      customer VLANs,\n   or else they cannot be differentiated within the VPLS instance,
      and\n   this can result in loss of customer frames.  An application of\n   unqualified
      learning is port-based VPLS service for a given customer\n   (e.g., customer
      with non-multiplexed AC where all the traffic on a\n   physical port, which
      may include multiple customer VLANs, is mapped\n   to a single VPLS instance).\n
      \  In qualified learning, each customer VLAN is assigned to its own VPLS\n   instance,
      which means each customer VLAN has its own broadcast domain\n   and MAC address
      space.  Therefore, in qualified learning, MAC\n   addresses among customer VLANs
      may overlap with each other, but they\n   will be handled correctly since each
      customer VLAN has its own FIB;\n   i.e., each customer VLAN has its own MAC
      address space.  Since VPLS\n   broadcasts multicast frames by default, qualified
      learning offers the\n   advantage of limiting the broadcast scope to a given
      customer VLAN.\n   Qualified learning can result in large FIB table sizes, because
      the\n   logical MAC address is now a VLAN tag + MAC address.\n   For STP to
      work in qualified learning mode, a VPLS PE must be able to\n   forward STP BPDUs
      over the proper VPLS instance.  In a hierarchical\n   VPLS case (see details
      in Section 10), service delimiting tags\n   (Q-in-Q or [RFC4448]) can be added
      such that PEs can unambiguously\n   identify all customer traffic, including
      STP BPDUs.  In a basic VPLS\n   case, upstream switches must insert such service
      delimiting tags.\n   When an access port is shared among multiple customers,
      a reserved\n   VLAN per customer domain must be used to carry STP traffic.  The
      STP\n   frames are encapsulated with a unique provider tag per customer (as\n
      \  the regular customer traffic), and a PEs looks up the provider tag to\n   send
      such frames across the proper VPLS instance.\n"
    title: 7.2.  VPLS Learning Actions
  title: 7.  Data Forwarding on an Ethernet PW
- contents:
  - "8.  Data Forwarding on an Ethernet VLAN PW\n   This section describes the data
    plane behavior on an Ethernet VLAN PW\n   in a VPLS.  While the encapsulation
    is similar to that described in\n   [RFC4448], the functions of imposing tags
    and using a \"normalized\"\n   Ethernet frame are described.  The learning behavior
    is the same as\n   for Ethernet PWs.\n"
  - contents:
    - "8.1.  VPLS Encapsulation Actions\n   In a VPLS, a customer Ethernet frame without
      preamble is encapsulated\n   with a header as defined in [RFC4448].  A customer
      Ethernet frame is\n   defined as follows:\n   -  If the frame, as it arrives
      at the PE, has an encapsulation that\n      is part of the customer frame and
      is also used by the local PE as\n      a service delimiter, i.e., to identify
      the customer and/or the\n      particular service of that customer, then that
      encapsulation is\n      preserved as the frame is sent into the VPLS, unless
      the Requested\n      VLAN ID optional parameter was signaled.  In that case,
      the VLAN\n      tag is overwritten before the frame is sent out on the PW.\n
      \  -  If the frame, as it arrives at the PE, has an encapsulation that\n      does
      not have the required VLAN tag, a null tag is imposed if the\n      Requested
      VLAN ID optional parameter was not signaled.\n   As an application of these
      rules, a customer frame may arrive at a\n   customer-facing port with a VLAN
      tag that identifies the customer's\n   VPLS instance and also identifies a customer
      VLAN.  That tag would be\n   preserved as it is encapsulated in the VPLS.\n
      \  The Ethernet VLAN PW provides a simple way to preserve customer\n   802.1p
      bits.\n   A VPLS MAY have both Ethernet and Ethernet VLAN PWs.  However, if
      a\n   PE is not able to support both PWs simultaneously, it SHOULD send a\n
      \  Label Release on the PW messages that it cannot support with a status\n   code
      \"Unknown FEC\" as given in [RFC3036].\n"
    title: 8.1.  VPLS Encapsulation Actions
  title: 8.  Data Forwarding on an Ethernet VLAN PW
- contents:
  - "9.  Operation of a VPLS\n   We show here, in Figure 2, below, an example of how
    a VPLS works.\n   The following discussion uses the figure below, where a VPLS
    has been\n   set up between PE1, PE2, and PE3.  The VPLS connects a customer with\n
    \  4 sites labeled A1, A2, A3, and A4 through CE1, CE2, CE3, and CE4,\n   respectively.\n
    \  Initially, the VPLS is set up so that PE1, PE2, and PE3 have a full\n   mesh
    of Ethernet PWs.  The VPLS instance is assigned an identifier\n   (AGI).  For
    the above example, say PE1 signals PW label 102 to PE2\n   and 103 to PE3, and
    PE2 signals PW label 201 to PE1 and 203 to PE3.\n                                                      -----\n
    \                                                    /  A1 \\\n        ----                                    ----CE1
    \   |\n       /    \\          --------       -------  /     |     |\n       |
    A2 CE2-      /        \\     /       PE1     \\     /\n       \\    /   \\    /
    \         \\---/         \\       -----\n        ----     ---PE2                        |\n
    \                   | Service Provider Network |\n                     \\          /
    \  \\         /\n              -----  PE3       /     \\       /\n              |Agg|_/
    \ --------       -------\n             -|   |\n      ----  / -----  ----\n     /
    \   \\/    \\   /    \\             CE = Customer Edge Router\n     | A3 CE3    -CE4
    A4 |             PE = Provider Edge Router\n     \\    /         \\    /             Agg
    = Layer 2 Aggregation\n      ----           ----\n                      Figure
    2: Example of a VPLS\n   Assume a packet from A1 is bound for A2.  When it leaves
    CE1, say it\n   has a source MAC address of M1 and a destination MAC of M2.  If
    PE1\n   does not know where M2 is, it will flood the packet; i.e., send it to\n
    \  PE2 and PE3.  When PE2 receives the packet, it will have a PW label\n   of
    201.  PE2 can conclude that the source MAC address M1 is behind\n   PE1, since
    it distributed the label 201 to PE1.  It can therefore\n   associate MAC address
    M1 with PW label 102.\n"
  - contents:
    - "9.1.  MAC Address Aging\n   PEs that learn remote MAC addresses SHOULD have
      an aging mechanism to\n   remove unused entries associated with a PW label.
      \ This is important\n   both for conservation of memory and for administrative
      purposes.  For\n   example, if a customer site A, is shut down, eventually the
      other PEs\n   should unlearn A's MAC address.\n   The aging timer for MAC address
      M SHOULD be reset when a packet with\n   source MAC address M is received.\n"
    title: 9.1.  MAC Address Aging
  title: 9.  Operation of a VPLS
- contents:
  - "10.  A Hierarchical VPLS Model\n   The solution described above requires a full
    mesh of tunnel LSPs\n   between all the PE routers that participate in the VPLS
    service.  For\n   each VPLS service, n*(n-1)/2 PWs must be set up between the
    PE\n   routers.  While this creates signaling overhead, the real detriment\n   to
    large scale deployment is the packet replication requirements for\n   each provisioned
    PWs on a PE router.  Hierarchical connectivity,\n   described in this document,
    reduces signaling and replication\n   overhead to allow large-scale deployment.\n
    \  In many cases, service providers place smaller edge devices in\n   multi-tenant
    buildings and aggregate them into a PE in a large\n   Central Office (CO) facility.
    \ In some instances, standard IEEE\n   802.1q (Dot 1Q) tagging techniques may
    be used to facilitate mapping\n   CE interfaces to VPLS access circuits at a PE.\n
    \  It is often beneficial to extend the VPLS service tunneling\n   techniques
    into the access switch domain.  This can be accomplished\n   by treating the access
    device as a PE and provisioning PWs between it\n   and every other edge, as a
    basic VPLS.  An alternative is to utilize\n   [RFC4448] PWs or Q-in-Q logical
    interfaces between the access device\n   and selected VPLS enabled PE routers.
    \ Q-in-Q encapsulation is\n   another form of L2 tunneling technique, which can
    be used in\n   conjunction with MPLS signaling, as will be described later.  The\n
    \  following two sections focus on this alternative approach.  The VPLS\n   core
    PWs (hub) are augmented with access PWs (spoke) to form a two-\n   tier hierarchical
    VPLS (H-VPLS).\n   Spoke PWs may be implemented using any L2 tunneling mechanism,
    and by\n   expanding the scope of the first tier to include non-bridging VPLS
    PE\n   routers.  The non-bridging PE router would extend a spoke PW from a\n   Layer-2
    switch that connects to it, through the service core network,\n   to a bridging
    VPLS PE router supporting hub PWs.  We also describe\n   how VPLS-challenged nodes
    and low-end CEs without MPLS capabilities\n   may participate in a hierarchical
    VPLS.\n   For rest of this discussion we refer to a bridging capable access\n
    \  device as MTU-s and a non-bridging capable PE as PE-r.  We refer to a\n   routing
    and bridging capable device as PE-rs.\n"
  - contents:
    - "10.1.  Hierarchical Connectivity\n   This section describes the hub and spoke
      connectivity model and\n   describes the requirements of the bridging capable
      and non-bridging\n   MTU-s devices for supporting the spoke connections.\n"
    - contents:
      - "10.1.1.  Spoke Connectivity for Bridging-Capable Devices\n   In Figure 3,
        below, three customer sites are connected to an MTU-s\n   through CE-1, CE-2,
        and CE-3.  The MTU-s has a single connection\n   (PW-1) to PE1-rs.  The PE-rs
        devices are connected in a basic VPLS\n   full mesh.  For each VPLS service,
        a single spoke PW is set up\n   between the MTU-s and the PE-rs based on [RFC4447].
        \ Unlike\n   traditional PWs that terminate on a physical (or a VLAN-tagged\n
        \  logical) port, a spoke PW terminates on a virtual switch instance\n   (VSI;
        see [L2FRAME]) on the MTU-s and the PE-rs devices.\n                                                          PE2-rs\n
        \                                                       +--------+\n                                                        |
        \       |\n                                                        |   --
        \  |\n                                                        |  /  \\  |\n
        \   CE-1                                                |  \\S /  |\n     \\
        \                                                 |   --   |\n      \\                                                 +--------+\n
        \      \\   MTU-s                          PE1-rs        /   |\n        +--------+
        \                     +--------+     /    |\n        |        |                      |
        \       |    /     |\n        |   --   |      PW-1            |   --   |---/
        \     |\n        |  /  \\--|- - - - - - - - - - - |  /  \\  |          |\n
        \       |  \\S /  |                      |  \\S /  |          |\n        |
        \  --   |                      |   --   |---\\      |\n        +--------+
        \                     +--------+    \\     |\n         /                                             \\
        \   |\n       ----                                             +--------+\n
        \     |Agg |                                            |        |\n       ----
        \                                            |  --    |\n      /    \\                                            |
        /  \\   |\n     CE-2  CE-3                                         | \\S /
        \  |\n                                                        |  --    |\n
        \                                                       +--------+\n                                                          PE3-rs\n
        \   Agg = Layer-2 Aggregation\n    --\n   /  \\\n   \\S / = Virtual Switch
        Instance\n    --\n           Figure 3: An example of a hierarchical VPLS model\n
        \  The MTU-s and the PE-rs treat each spoke connection like an AC of the\n
        \  VPLS service.  The PW label is used to associate the traffic from the\n
        \  spoke to a VPLS instance.\n"
      - contents:
        - "10.1.1.1.  MTU-s Operation\n   An MTU-s is defined as a device that supports
          layer-2 switching\n   functionality and does all the normal bridging functions
          of learning\n   and replication on all its ports, including the spoke, which
          is\n   treated as a virtual port.  Packets to unknown destinations are\n
          \  replicated to all ports in the service including the spoke.  Once the\n
          \  MAC address is learned, traffic between CE1 and CE2 will be switched\n
          \  locally by the MTU-s, saving the capacity of the spoke to the PE-rs.\n
          \  Similarly traffic between CE1 or CE2 and any remote destination is\n
          \  switched directly onto the spoke and sent to the PE-rs over the\n   point-to-point
          PW.\n   Since the MTU-s is bridging capable, only a single PW is required
          per\n   VPLS instance for any number of access connections in the same VPLS\n
          \  service.  This further reduces the signaling overhead between the\n   MTU-s
          and PE-rs.\n   If the MTU-s is directly connected to the PE-rs, other encapsulation\n
          \  techniques, such as Q-in-Q, can be used for the spoke.\n"
        title: 10.1.1.1.  MTU-s Operation
      - contents:
        - "10.1.1.2.  PE-rs Operation\n   A PE-rs is a device that supports all the
          bridging functions for VPLS\n   service and supports the routing and MPLS
          encapsulation; i.e., it\n   supports all the functions described for a basic
          VPLS, as described\n   above.\n   The operation of PE-rs is independent
          of the type of device at the\n   other end of the spoke.  Thus, the spoke
          from the MTU-s is treated as\n   a virtual port, and the PE-rs will switch
          traffic between the spoke\n   PW, hub PWs, and ACs once it has learned the
          MAC addresses.\n"
        title: 10.1.1.2.  PE-rs Operation
      title: 10.1.1.  Spoke Connectivity for Bridging-Capable Devices
    - contents:
      - "10.1.2.  Advantages of Spoke Connectivity\n   Spoke connectivity offers several
        scaling and operational advantages\n   for creating large-scale VPLS implementations,
        while retaining the\n   ability to offer all the functionality of the VPLS
        service.\n   -  Eliminates the need for a full mesh of tunnels and full mesh
        of\n      PWs per service between all devices participating in the VPLS\n
        \     service.\n   -  Minimizes signaling overhead, since fewer PWs are required
        for the\n      VPLS service.\n   -  Segments VPLS nodal discovery.  MTU-s
        needs to be aware of only\n      the PE-rs node, although it is participating
        in the VPLS service\n      that spans multiple devices.  On the other hand,
        every VPLS PE-rs\n      must be aware of every other VPLS PE-rs and all of
        its locally\n      connected MTU-s and PE-r devices.\n   -  Addition of other
        sites requires configuration of the new MTU-s\n      but does not require
        any provisioning of the existing MTU-s\n      devices on that service.\n   -
        \ Hierarchical connections can be used to create VPLS service that\n      spans
        multiple service provider domains.  This is explained in a\n      later section.\n
        \  Note that as more devices participate in the VPLS, there are more\n   devices
        that require the capability for learning and replication.\n"
      title: 10.1.2.  Advantages of Spoke Connectivity
    - contents:
      - "10.1.3.  Spoke Connectivity for Non-Bridging Devices\n   In some cases, a
        bridging PE-rs may not be deployed, or a PE-r might\n   already have been
        deployed.  In this section, we explain how a PE-r\n   that does not support
        any of the VPLS bridging functionality can\n   participate in the VPLS service.\n
        \  In Figure 4, three customer sites are connected through CE-1, CE-2,\n   and
        CE-3 to the VPLS through PE-r.  For every attachment circuit that\n   participates
        in the VPLS service, PE-r creates a point-to-point PW\n   that terminates
        on the VSI of PE1-rs.\n                                                         PE2-rs\n
        \                                                      +--------+\n                                                       |
        \       |\n                                                       |   --   |\n
        \                                                      |  /  \\  |\n   CE-1
        \                                               |  \\S /  |\n    \\                                                  |
        \  --   |\n     \\                                                 +--------+\n
        \     \\   PE-r                           PE1-rs        /   |\n       +--------+
        \                     +--------+     /    |\n       |\\       |                      |
        \       |    /     |\n       | \\      |      PW-1            |   --   |---/
        \     |\n       |  ------|- - - - - - - - - - - |  /  \\  |          |\n       |
        \  -----|- - - - - - - - - - - |  \\S /  |          |\n       |  /     |                      |
        \  --   |---\\      |\n       +--------+                      +--------+    \\
        \    |\n        /                                             \\    |\n      ----
        \                                           +--------+\n     | Agg|                                           |
        \       |\n      ----                                            |  --    |\n
        \    /    \\                                           | /  \\   |\n    CE-2
        \ CE-3                                        | \\S /   |\n                                                      |
        \ --    |\n                                                      +--------+\n
        \                                                       PE3-rs\n              Figure
        4: An example of a hierarchical VPLS\n                       with non-bridging
        spokes\n   The PE-r is defined as a device that supports routing but does
        not\n   support any bridging functions.  However, it is capable of setting
        up\n   PWs between itself and the PE-rs.  For every port that is supported\n
        \  in the VPLS service, a PW is set up from the PE-r to the PE-rs.  Once\n
        \  the PWs are set up, there is no learning or replication function\n   required
        on the part of the PE-r.  All traffic received on any of the\n   ACs is transmitted
        on the PW.  Similarly, all traffic received on a\n   PW is transmitted to
        the AC where the PW terminates.  Thus, traffic\n   from CE1 destined for CE2
        is switched at PE1-rs and not at PE-r.\n   Note that in the case where PE-r
        devices use Provider VLANs (P-VLAN)\n   as demultiplexers instead of PWs,
        PE1-rs can treat them as such and\n   map these \"circuits\" into a VPLS domain
        to provide bridging support\n   between them.\n   This approach adds more
        overhead than the bridging-capable (MTU-s)\n   spoke approach, since a PW
        is required for every AC that participates\n   in the service versus a single
        PW required per service (regardless of\n   ACs) when an MTU-s is used.  However,
        this approach offers the\n   advantage of offering a VPLS service in conjunction
        with a routed\n   internet service without requiring the addition of new MTU-s.\n"
      title: 10.1.3.  Spoke Connectivity for Non-Bridging Devices
    title: 10.1.  Hierarchical Connectivity
  - contents:
    - "10.2.  Redundant Spoke Connections\n   An obvious weakness of the hub and spoke
      approach described thus far\n   is that the MTU-s has a single connection to
      the PE-rs.  In case of\n   failure of the connection or the PE-rs, the MTU-s
      suffers total loss\n   of connectivity.\n   In this section, we describe how
      the redundant connections can be\n   provided to avoid total loss of connectivity
      from the MTU-s.  The\n   mechanism described is identical for both, MTU-s and
      PE-r devices.\n"
    - contents:
      - "10.2.1.  Dual-Homed MTU-s\n   To protect from connection failure of the PW
        or the failure of the\n   PE-rs, the MTU-s or the PE-r is dual-homed into
        two PE-rs devices.\n   The PE-rs devices must be part of the same VPLS service
        instance.\n   In Figure 5, two customer sites are connected through CE-1 and
        CE-2\n   to an MTU-s.  The MTU-s sets up two PWs (one each to PE1-rs and\n
        \  PE3-rs) for each VPLS instance.  One of the two PWs is designated as\n
        \  primary and is the one that is actively used under normal conditions,\n
        \  whereas the second PW is designated as secondary and is held in a\n   standby
        state.  The MTU-s negotiates the PW labels for both the\n   primary and secondary
        PWs, but does not use the secondary PW unless\n   the primary PW fails.  How
        a spoke is designated primary or secondary\n   is outside the scope of this
        document.  For example, a spanning tree\n   instance running between only
        the MTU-s and the two PE-rs nodes is\n   one possible method.  Another method
        could be configuration.\n                                                         PE2-rs\n
        \                                                      +--------+\n                                                       |
        \       |\n                                                       |   --   |\n
        \                                                      |  /  \\  |\n   CE-1
        \                                               |  \\S /  |\n     \\                                                 |
        \  --   |\n      \\                                                +--------+\n
        \      \\  MTU-s                          PE1-rs        /   |\n       +--------+
        \                     +--------+     /    |\n       |        |                      |
        \       |    /     |\n       |   --   |   Primary PW         |   --   |---/
        \     |\n       |  /  \\  |- - - - - - - - - - - |  /  \\  |          |\n
        \      |  \\S /  |                      |  \\S /  |          |\n       |   --
        \  |                      |   --   |---\\      |\n       +--------+                      +--------+
        \   \\     |\n         /      \\                                     \\    |\n
        \       /        \\                                     +--------+\n       /
        \         \\                                    |        |\n      CE-2         \\
        \                                  |  --    |\n                    \\     Secondary
        PW                 | /  \\   |\n                     - - - - - - - - - - -
        - - - - - - | \\S /   |\n                                                       |
        \ --    |\n                                                       +--------+\n
        \                                                        PE3-rs\n              Figure
        5: An example of a dual-homed MTU-s\n"
      title: 10.2.1.  Dual-Homed MTU-s
    - contents:
      - "10.2.2.  Failure Detection and Recovery\n   The MTU-s should control the
        usage of the spokes to the PE-rs\n   devices.  If the spokes are PWs, then
        LDP signaling is used to\n   negotiate the PW labels, and the hello messages
        used for the LDP\n   session could be used to detect failure of the primary
        PW.  The use\n   of other mechanisms that could provide faster detection failures
        is\n   outside the scope of this document.\n   Upon failure of the primary
        PW, MTU-s immediately switches to the\n   secondary PW.  At this point, the
        PE3-rs that terminates the\n   secondary PW starts learning MAC addresses
        on the spoke PW.  All\n   other PE-rs nodes in the network think that CE-1
        and CE-2 are behind\n   PE1-rs and may continue to send traffic to PE1-rs
        until they learn\n   that the devices are now behind PE3-rs.  The unlearning
        process can\n   take a long time and may adversely affect the connectivity
        of\n   higher-level protocols from CE1 and CE2.  To enable faster\n   convergence,
        the PE3-rs where the secondary PW got activated may send\n   out a flush message
        (as explained in Section 6.2), using the MAC List\n   TLV, as defined in Section
        6, to all PE-rs nodes.  Upon receiving the\n   message, PE-rs nodes flush
        the MAC addresses associated with that\n   VPLS instance.\n"
      title: 10.2.2.  Failure Detection and Recovery
    title: 10.2.  Redundant Spoke Connections
  - contents:
    - "10.3.  Multi-domain VPLS Service\n   Hierarchy can also be used to create a
      large-scale VPLS service\n   within a single domain or a service that spans
      multiple domains\n   without requiring full mesh connectivity between all VPLS-capable\n
      \  devices.  Two fully meshed VPLS networks are connected together using\n   a
      single LSP tunnel between the VPLS \"border\" devices.  A single\n   spoke PW
      per VPLS service is set up to connect the two domains\n   together.\n   When
      more than two domains need to be connected, a full mesh of\n   inter-domain
      spokes is created between border PEs.  Forwarding rules\n   over this mesh are
      identical to the rules defined in Section 4.\n   This creates a three-tier hierarchical
      model that consists of a hub-\n   and-spoke topology between MTU-s and PE-rs
      devices, a full-mesh\n   topology between PE-rs, and a full mesh of inter-domain
      spokes\n   between border PE-rs devices.\n   This document does not specify
      how redundant border PEs per domain\n   per VPLS instance can be supported.\n"
    title: 10.3.  Multi-domain VPLS Service
  title: 10.  A Hierarchical VPLS Model
- contents:
  - "11.  Hierarchical VPLS Model Using Ethernet Access Network\n   In this section,
    the hierarchical model is expanded to include an\n   Ethernet access network.
    \ This model retains the hierarchical\n   architecture discussed previously in
    that it leverages the full-mesh\n   topology among PE-rs devices; however, no
    restriction is imposed on\n   the topology of the Ethernet access network (e.g.,
    the topology\n   between MTU-s and PE-rs devices is not restricted to hub and
    spoke).\n   The motivation for an Ethernet access network is that Ethernet-based\n
    \  networks are currently deployed by some service providers to offer\n   VPLS
    services to their customers.  Therefore, it is important to\n   provide a mechanism
    that allows these networks to integrate with an\n   IP or MPLS core to provide
    scalable VPLS services.\n   One approach of tunneling a customer's Ethernet traffic
    via an\n   Ethernet access network is to add an additional VLAN tag to the\n   customer's
    data (which may be either tagged or untagged).  The\n   additional tag is referred
    to as Provider's VLAN (P-VLAN).  Inside\n   the provider's network each P-VLAN
    designates a customer or more\n   specifically a VPLS instance for that customer.
    \ Therefore, there is\n   a one-to-one correspondence between a P-VLAN and a VPLS
    instance.  In\n   this model, the MTU-s needs to have the capability of adding
    the\n   additional P-VLAN tag to non-multiplexed ACs where customer VLANs are\n
    \  not used as service delimiters.  This functionality is described in\n   [802.1ad].\n
    \  If customer VLANs need to be treated as service delimiters (e.g., the\n   AC
    is a multiplexed port), then the MTU-s needs to have the\n   additional capability
    of translating a customer VLAN (C-VLAN) to a\n   P-VLAN, or to push an additional
    P-VLAN tag, in order to resolve\n   overlapping VLAN tags used by different customers.
    \ Therefore, the\n   MTU-s in this model can be considered a typical bridge with
    this\n   additional capability.  This functionality is described in [802.1ad].\n
    \  The PE-rs needs to be able to perform bridging functionality over the\n   standard
    Ethernet ports toward the access network, as well as over\n   the PWs toward the
    network core.  In this model, the PE-rs may need\n   to run STP towards the access
    network, in addition to split-horizon\n   over the MPLS core.  The PE-rs needs
    to map a P-VLAN to a VPLS-\n   instance and its associated PWs, and vice versa.\n
    \  The details regarding bridge operation for MTU-s and PE-rs (e.g.,\n   encapsulation
    format for Q-in-Q messages, customer's Ethernet control\n   protocol handling,
    etc.) are outside the scope of this document and\n   are covered in [802.1ad].
    \ However, the relevant part is the\n   interaction between the bridge module
    and the MPLS/IP PWs in the\n   PE-rs, which behaves just as in a regular VPLS.\n"
  - contents:
    - "11.1.  Scalability\n   Since each P-VLAN corresponds to a VPLS instance, the
      total number of\n   VPLS instances supported is limited to 4K.  The P-VLAN serves
      as a\n   local service delimiter within the provider's network that is\n   stripped
      as it gets mapped to a PW in a VPLS instance.  Therefore,\n   the 4K limit applies
      only within an Ethernet access network (Ethernet\n   island) and not to the
      entire network.  The SP network consists of a\n   core MPLS/IP network that
      connects many Ethernet islands.  Therefore,\n   the number of VPLS instances
      can scale accordingly with the number of\n   Ethernet islands (a metro region
      can be represented by one or more\n   islands).\n"
    title: 11.1.  Scalability
  - contents:
    - "11.2.  Dual Homing and Failure Recovery\n   In this model, an MTU-s can be
      dual homed to different devices\n   (aggregators and/or PE-rs devices).  The
      failure protection for\n   access network nodes and links can be provided through
      running STP in\n   each island.  The STP of each island is independent of other
      islands\n   and do not interact with others.  If an island has more than one\n
      \  PE-rs, then a dedicated full-mesh of PWs is used among these PE-rs\n   devices
      for carrying the SP BPDU packets for that island.  On a\n   per-P-VLAN basis,
      STP will designate a single PE-rs to be used for\n   carrying the traffic across
      the core.  The loop-free protection\n   through the core is performed using
      split-horizon, and the failure\n   protection in the core is performed through
      standard IP/MPLS re-\n   routing.\n"
    title: 11.2.  Dual Homing and Failure Recovery
  title: 11.  Hierarchical VPLS Model Using Ethernet Access Network
- contents:
  - "12.  Contributors\n   Loa Andersson, TLA\n   Ron Haberman, Alcatel-Lucent\n   Juha
    Heinanen, Independent\n   Giles Heron, Tellabs\n   Sunil Khandekar, Alcatel-Lucent\n
    \  Luca Martini, Cisco\n   Pascal Menezes, Independent\n   Rob Nath, Alcatel-Lucent\n
    \  Eric Puetz, AT&T\n   Vasile Radoaca, Independent\n   Ali Sajassi, Cisco\n   Yetik
    Serbest, AT&T\n   Nick Slabakov, Juniper\n   Andrew Smith, Consultant\n   Tom
    Soon, AT&T\n   Nick Tingle, Alcatel-Lucent\n"
  title: 12.  Contributors
- contents:
  - "13.  Acknowledgments\n   We wish to thank Joe Regan, Kireeti Kompella, Anoop
    Ghanwani, Joel\n   Halpern, Bill Hong, Rick Wilder, Jim Guichard, Steve Phillips,
    Norm\n   Finn, Matt Squire, Muneyoshi Suzuki, Waldemar Augustyn, Eric Rosen,\n
    \  Yakov Rekhter, Sasha Vainshtein, and Du Wenhua for their valuable\n   feedback.\n
    \  We would also like to thank Rajiv Papneja (ISOCORE), Winston Liu\n   (Ixia),
    and Charlie Hundall for identifying issues with the draft in\n   the course of
    the interoperability tests.\n   We would also like to thank Ina Minei, Bob Thomas,
    Eric Gray and\n   Dimitri Papadimitriou for their thorough technical review of
    the\n   document.\n"
  title: 13.  Acknowledgments
- contents:
  - "14.  Security Considerations\n   A more comprehensive description of the security
    issues involved in\n   L2VPNs is covered in [RFC4111].  An unguarded VPLS service
    is\n   vulnerable to some security issues that pose risks to the customer\n   and
    provider networks.  Most of the security issues can be avoided\n   through implementation
    of appropriate guards.  A couple of them can\n   be prevented through existing
    protocols.\n   -  Data plane aspects\n        -  Traffic isolation between VPLS
    domains is guaranteed by the\n           use of per VPLS L2 FIB table and the
    use of per VPLS PWs.\n        -  The customer traffic, which consists of Ethernet
    frames, is\n           carried unchanged over VPLS.  If security is required,
    the\n           customer traffic SHOULD be encrypted and/or authenticated\n           before
    entering the service provider network.\n        -  Preventing broadcast storms
    can be achieved by using routers\n           as CPE devices or by rate policing
    the amount of broadcast\n           traffic that customers can send.\n   -  Control
    plane aspects\n        -  LDP security (authentication) methods as described in\n
    \          [RFC3036] SHOULD be applied.  This would prevent\n           unauthenticated
    messages from disrupting a PE in a VPLS.\n   -  Denial of service attacks\n        -
    \ Some means to limit the number of MAC addresses (per site per\n           VPLS)
    that a PE can learn SHOULD be implemented.\n"
  title: 14.  Security Considerations
- contents:
  - "15.  IANA Considerations\n   The type field in the MAC List TLV is defined as
    0x404 in Section\n   6.2.1.\n"
  title: 15.  IANA Considerations
- contents:
  - '16.  References

    '
  - contents:
    - "16.1.  Normative References\n   [RFC4447]      Martini, L., Rosen, E., El-Aawar,
      N., Smith, T., and\n                  G. Heron, \"Pseudowire Setup and Maintenance
      Using the\n                  Label Distribution Protocol (LDP)\", RFC 4447,
      April\n                  2006.\n   [RFC4448]      Martini, L., Rosen, E., El-Aawar,
      N., and G. Heron,\n                  \"Encapsulation Methods for Transport of
      Ethernet over\n                  MPLS Networks\", RFC 4448, April 2006.\n   [802.1D-ORIG]
      \ Original 802.1D - ISO/IEC 10038, ANSI/IEEE Std\n                  802.1D-1993
      \"MAC Bridges\".\n   [802.1D-REV]   802.1D - \"Information technology - Telecommunications\n
      \                 and information exchange between systems - Local and\n                  metropolitan
      area networks - Common specifications -\n                  Part 3: Media Access
      Control (MAC) Bridges: Revision.\n                  This is a revision of ISO/IEC
      10038: 1993, 802.1j-1992\n                  and 802.6k-1992.  It incorporates
      P802.11c, P802.1p\n                  and P802.12e.\" ISO/IEC 15802-3: 1998.\n
      \  [802.1Q]       802.1Q - ANSI/IEEE Draft Standard P802.1Q/D11, \"IEEE\n                  Standards
      for Local and Metropolitan Area Networks:\n                  Virtual Bridged
      Local Area Networks\", July 1998.\n   [RFC3036]      Andersson, L., Doolan,
      P., Feldman, N., Fredette, A.,\n                  and B. Thomas, \"LDP Specification\",
      RFC 3036, January\n                  2001.\n   [RFC4446]      Martini, L., \"IANA
      Allocations for Pseudowire Edge to\n                  Edge Emulation (PWE3)\",
      BCP 116, RFC 4446, April 2006.\n   [RFC2119]      Bradner, S., \"Key words for
      use in RFCs to Indicate\n                  Requirement Levels\", BCP 14, RFC
      2119, March 1997.\n"
    title: 16.1.  Normative References
  - contents:
    - "16.2.  Informative References\n   [RFC4364]      Rosen, E. and Y. Rekhter,
      \"BGP/MPLS IP Virtual Private\n                  Networks (VPNs)\", RFC 4364,
      February 2006.\n   [RADIUS-DISC]  Heinanen, J., Weber, G., Ed., Townsley, W.,
      Booth, S.,\n                  and W. Luo, \"Using Radius for PE-Based VPN Discovery\",\n
      \                 Work in Progress, October 2005.\n   [BGP-DISC]     Ould-Brahim,
      H., Ed., Rosen, E., Ed., and Y. Rekhter,\n                  Ed., \"Using BGP
      as an Auto-Discovery Mechanism for\n                  Network-based VPNs\",
      Work in Progress, September 2006.\n   [L2FRAME]      Andersson, L. and E. Rosen,
      \"Framework for Layer 2\n                  Virtual Private Networks (L2VPNs)\",
      RFC 4664,\n                  September 2006.\n   [L2VPN-REQ]    Augustyn, W.
      and Y. Serbest, \"Service Requirements for\n                  Layer 2 Provider-Provisioned
      Virtual Private\n                  Networks\", RFC 4665, September 2006.\n   [RFC4111]
      \     Fang, L., \"Security Framework for Provider-Provisioned\n                  Virtual
      Private Networks (PPVPNs)\", RFC 4111, July\n                  2005.\n   [802.1ad]
      \     \"IEEE standard for Provider Bridges\", Work in\n                  Progress,
      December 2002.\n"
    title: 16.2.  Informative References
  title: 16.  References
- contents:
  - "Appendix A.  VPLS Signaling using the PWid FEC Element\n   This section is being
    retained because live deployments use this\n   version of the signaling for VPLS.\n
    \  The VPLS signaling information is carried in a Label Mapping message\n   sent
    in downstream unsolicited mode, which contains the following\n   PWid FEC TLV.\n
    \  PW, C, PW Info Length, Group ID, and Interface parameters are as\n   defined
    in [RFC4447].\n   0                   1                   2                   3\n
    \  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \ |    PW TLV     |C|         PW Type             |PW info Length |\n  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \ |                      Group ID                                 |\n  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \ |                        PWID                                   |\n  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \ |                       Interface parameters                    |\n  ~                                                               ~\n
    \ |                                                               |\n  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  We use the Ethernet PW type to identify PWs that carry Ethernet\n   traffic
    for multipoint connectivity.\n   In a VPLS, we use a VCID (which, when using the
    PWid FEC, has been\n   substituted with a more general identifier (AGI), to address\n
    \  extending the scope of a VPLS) to identify an emulated LAN segment.\n   Note
    that the VCID as specified in [RFC4447] is a service identifier,\n   identifying
    a service emulating a point-to-point virtual circuit.  In\n   a VPLS, the VCID
    is a single service identifier, so it has global\n   significance across all PEs
    involved in the VPLS instance.\n"
  title: Appendix A.  VPLS Signaling using the PWid FEC Element
- contents:
  - "Authors' Addresses\n   Marc Lasserre\n   Alcatel-Lucent\n   EMail: mlasserre@alcatel-lucent.com\n
    \  Vach Kompella\n   Alcatel-Lucent\n   EMail: vach.kompella@alcatel-lucent.com\n"
  title: Authors' Addresses
- contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document
    is subject to the rights, licenses and restrictions\n   contained in BCP 78, and
    except as set forth therein, the authors\n   retain all their rights.\n   This
    document and the information contained herein are provided on an\n   \"AS IS\"
    basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE INTERNET ENGINEERING
    TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED, INCLUDING BUT NOT
    LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT INFRINGE
    ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
